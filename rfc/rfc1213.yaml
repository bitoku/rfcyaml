- title: __initial_text__
  contents:
  - "           Management Information Base for Network Management\n             \
    \          of TCP/IP-based internets:\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines the second version of the Management\
    \ Information\n   Base (MIB-II) for use with network management protocols in TCP/IP-\n\
    \   based internets.  This RFC specifies an IAB standards track protocol\n   for\
    \ the Internet community, and requests discussion and suggestions\n   for improvements.\
    \  Please refer to the current edition of the \"IAB\n   Official Protocol Standards\"\
    \ for the standardization state and status\n   of this protocol.  Distribution\
    \ of this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   6.4 The Interfaces Group .................................\
    \   16\n   6.5 The Address Translation Group ........................   23\n \
    \  6.6 The IP Group .........................................   26\n   6.7 The\
    \ ICMP Group .......................................   41\n   6.8 The TCP Group\
    \ ........................................   46\n   6.9 The UDP Group ........................................\
    \   52\n   6.10 The EGP Group .......................................   54\n \
    \  6.11 The Transmission Group ..............................   60\n   6.12 The\
    \ SNMP Group ......................................   60\n   7. Acknowledgements\
    \ ......................................   67\n   8. References ............................................\
    \   69\n   9. Security Considerations ...............................   70\n \
    \  10. Authors' Addresses ...................................   70\n"
- title: 1.  Abstract
  contents:
  - "1.  Abstract\n   This memo defines the second version of the Management Information\n\
    \   Base (MIB-II) for use with network management protocols in TCP/IP-\n   based\
    \ internets.  In particular, together with its companion memos\n   which describe\
    \ the structure of management information (RFC 1155)\n   along with the network\
    \ management protocol (RFC 1157) for TCP/IP-\n   based internets, these documents\
    \ provide a simple, workable\n   architecture and system for managing TCP/IP-based\
    \ internets and in\n   particular the Internet community.\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   As reported in RFC 1052, IAB Recommendations for the Development\
    \ of\n   Internet Network Management Standards [1], a two-prong strategy for\n\
    \   network management of TCP/IP-based internets was undertaken.  In the\n   short-term,\
    \ the Simple Network Management Protocol (SNMP) was to be\n   used to manage nodes\
    \ in the Internet community.  In the long-term,\n   the use of the OSI network\
    \ management framework was to be examined.\n   Two documents were produced to\
    \ define the management information: RFC\n   1065, which defined the Structure\
    \ of Management Information (SMI)\n   [2], and RFC 1066, which defined the Management\
    \ Information Base\n   (MIB) [3].  Both of these documents were designed so as\
    \ to be\n   compatible with both the SNMP and the OSI network management\n   framework.\n\
    \   This strategy was quite successful in the short-term: Internet-based\n   network\
    \ management technology was fielded, by both the research and\n   commercial communities,\
    \ within a few months.  As a result of this,\n   portions of the Internet community\
    \ became network manageable in a\n   timely fashion.\n   As reported in RFC 1109,\
    \ Report of the Second Ad Hoc Network\n   Management Review Group [4], the requirements\
    \ of the SNMP and the OSI\n   network management frameworks were more different\
    \ than anticipated.\n   As such, the requirement for compatibility between the\
    \ SMI/MIB and\n   both frameworks was suspended.  This action permitted the operational\n\
    \   network management framework, the SNMP, to respond to new operational\n  \
    \ needs in the Internet community by producing this document.\n   As such, the\
    \ current network management framework for TCP/IP- based\n   internets consists\
    \ of: Structure and Identification of Management\n   Information for TCP/IP-based\
    \ internets, RFC 1155 [12], which\n   describes how managed objects contained\
    \ in the MIB are defined;\n   Management Information Base for Network Management\
    \ of TCP/IP-based\n   internets: MIB-II, this memo, which describes the managed\
    \ objects\n   contained in the MIB (and supercedes RFC 1156 [13]); and, the Simple\n\
    \   Network Management Protocol, RFC 1098 [5], which defines the protocol\n  \
    \ used to manage these objects.\n"
- title: 3.  Changes from RFC 1156
  contents:
  - "3.  Changes from RFC 1156\n   Features of this MIB include:\n   (1)  incremental\
    \ additions to reflect new operational\n        requirements;\n   (2)  upwards\
    \ compatibility with the SMI/MIB and the SNMP;\n   (3)  improved support for multi-protocol\
    \ entities; and,\n   (4)  textual clean-up of the MIB to improve clarity and\n\
    \        readability.\n   The objects defined in MIB-II have the OBJECT IDENTIFIER\
    \ prefix:\n      mib-2      OBJECT IDENTIFIER ::= { mgmt 1 }\n   which is identical\
    \ to the prefix used in MIB-I.\n"
- title: 3.1.  Deprecated Objects
  contents:
  - "3.1.  Deprecated Objects\n   In order to better prepare implementors for future\
    \ changes in the\n   MIB, a new term \"deprecated\" may be used when describing\
    \ an object.\n   A deprecated object in the MIB is one which must be supported,\
    \ but\n   one which will most likely be removed from the next version of the\n\
    \   MIB (e.g., MIB-III).\n   MIB-II marks one object as being deprecated:\n  \
    \    atTable\n   As a result of deprecating the atTable object, the entire Address\n\
    \   Translation group is deprecated.\n   Note that no functionality is lost with\
    \ the deprecation of these\n   objects: new objects providing equivalent or superior\
    \ functionality\n   are defined in MIB-II.\n"
- title: 3.2.  Display Strings
  contents:
  - "3.2.  Display Strings\n   In the past, there have been misinterpretations of\
    \ the MIB as to when\n   a string of octets should contain printable characters,\
    \ meant to be\n   displayed to a human.  As a textual convention in the MIB, the\n\
    \   datatype\n      DisplayString ::=\n          OCTET STRING\n   is introduced.\
    \  A DisplayString is restricted to the NVT ASCII\n   character set, as defined\
    \ in pages 10-11 of [6].\n   The following objects are now defined in terms of\
    \ DisplayString:\n      sysDescr\n      ifDescr\n   It should be noted that this\
    \ change has no effect on either the\n   syntax nor semantics of these objects.\
    \  The use of the DisplayString\n   notation is merely an artifact of the explanatory\
    \ method used in\n   MIB-II and future MIBs.\n   Further it should be noted that\
    \ any object defined in terms of OCTET\n   STRING may contain arbitrary binary\
    \ data, in which each octet may\n   take any value from 0 to 255 (decimal).\n"
- title: 3.3.  Physical Addresses
  contents:
  - "3.3.  Physical Addresses\n   As a further, textual convention in the MIB, the\
    \ datatype\n      PhysAddress ::=\n          OCTET STRING\n   is introduced to\
    \ represent media- or physical-level addresses.\n   The following objects are\
    \ now defined in terms of PhysAddress:\n      ifPhysAddress\n      atPhysAddress\n\
    \      ipNetToMediaPhysAddress\n   It should be noted that this change has no\
    \ effect on either the\n   syntax nor semantics of these objects.  The use of\
    \ the PhysAddress\n   notation is merely an artifact of the explanatory method\
    \ used in\n   MIB-II and future MIBs.\n"
- title: 3.4.  The System Group
  contents:
  - "3.4.  The System Group\n   Four new objects are added to this group:\n      sysContact\n\
    \      sysName\n      sysLocation\n      sysServices\n   These provide contact,\
    \ administrative, location, and service\n   information regarding the managed\
    \ node.\n"
- title: 3.5.  The Interfaces Group
  contents:
  - "3.5.  The Interfaces Group\n   The definition of the ifNumber object was incorrect,\
    \ as it required\n   all interfaces to support IP.  (For example, devices without\
    \ IP, such\n   as MAC-layer bridges, could not be managed if this definition was\n\
    \   strictly followed.)  The description of the ifNumber object is\n   changed\
    \ accordingly.\n   The ifTable object was mistaken marked as read-write, it has\
    \ been\n   (correctly) re-designated as not-accessible.  In addition, several\n\
    \   new values have been added to the ifType column in the ifTable\n   object:\n\
    \      ppp(23)\n      softwareLoopback(24)\n      eon(25)\n      ethernet-3Mbit(26)\n\
    \      nsip(27)\n      slip(28)\n      ultra(29)\n      ds3(30)\n      sip(31)\n\
    \      frame-relay(32)\n   Finally, a new column has been added to the ifTable\
    \ object:\n      ifSpecific\n   which provides information about information specific\
    \ to the media\n   being used to realize the interface.\n"
- title: 3.6.  The Address Translation Group
  contents:
  - "3.6.  The Address Translation Group\n   In MIB-I this group contained a table\
    \ which permitted mappings from\n   network addresses (e.g., IP addresses) to\
    \ physical addresses (e.g.,\n   MAC addresses).  Experience has shown that efficient\
    \ implementations\n   of this table make two assumptions: a single network protocol\n\
    \   environment, and mappings occur only from network address to physical\n  \
    \ address.\n   The need to support multi-protocol nodes (e.g., those with both\
    \ the\n   IP and CLNP active), and the need to support the inverse mapping\n \
    \  (e.g., for ES-IS), have invalidated both of these assumptions.  As\n   such,\
    \ the atTable object is declared deprecated.\n   In order to meet both the multi-protocol\
    \ and inverse mapping\n   requirements, MIB-II and its successors will allocate\
    \ up to two\n   address translation tables inside each network protocol group.\
    \  That\n   is, the IP group will contain one address translation table, for\n\
    \   going from IP addresses to physical addresses.  Similarly, when a\n   document\
    \ defining MIB objects for the CLNP is produced (e.g., [7]),\n   it will contain\
    \ two tables, for mappings in both directions, as this\n   is required for full\
    \ functionality.\n   It should be noted that the choice of two tables (one for\
    \ each\n   direction of mapping) provides for ease of implementation in many\n\
    \   cases, and does not introduce undue burden on implementations which\n   realize\
    \ the address translation abstraction through a single internal\n   table.\n"
- title: 3.7.  The IP Group
  contents:
  - "3.7.  The IP Group\n   The access attribute of the variable ipForwarding has\
    \ been changed\n   from read-only to read-write.\n   In addition, there is a new\
    \ column to the ipAddrTable object,\n      ipAdEntReasmMaxSize\n   which keeps\
    \ track of the largest IP datagram that can be re-assembled\n   on a particular\
    \ interface.\n   The descriptor of the ipRoutingTable object has been changed\
    \ to\n   ipRouteTable for consistency with the other IP routing objects.\n   There\
    \ are also three new columns in the ipRouteTable object,\n      ipRouteMask\n\
    \      ipRouteMetric5\n      ipRouteInfo\n   the first is used for IP routing\
    \ subsystems that support arbitrary\n   subnet masks, and the latter two are IP\
    \ routing protocol-specific.\n   Two new objects are added to the IP group:\n\
    \      ipNetToMediaTable\n      ipRoutingDiscards\n   the first is the address\
    \ translation table for the IP group\n   (providing identical functionality to\
    \ the now deprecated atTable in\n   the address translation group), and the latter\
    \ provides information\n   when routes are lost due to a lack of buffer space.\n"
- title: 3.8.  The ICMP Group
  contents:
  - "3.8.  The ICMP Group\n   There are no changes to this group.\n"
- title: 3.9.  The TCP Group
  contents:
  - "3.9.  The TCP Group\n   Two new variables are added:\n      tcpInErrs\n     \
    \ tcpOutRsts\n   which keep track of the number of incoming TCP segments in error\
    \ and\n   the number of resets generated by a TCP.\n"
- title: 3.10.  The UDP Group
  contents:
  - "3.10.  The UDP Group\n   A new table:\n      udpTable\n   is added.\n"
- title: 3.11.  The EGP Group
  contents:
  - "3.11.  The EGP Group\n   Experience has indicated a need for additional objects\
    \ that are\n   useful in EGP monitoring.  In addition to making several additions\
    \ to\n   the egpNeighborTable object, i.e.,\n      egpNeighAs\n      egpNeighInMsgs\n\
    \      egpNeighInErrs\n      egpNeighOutMsgs\n      egpNeighOutErrs\n      egpNeighInErrMsgs\n\
    \      egpNeighOutErrMsgs\n      egpNeighStateUps\n      egpNeighStateDowns\n\
    \      egpNeighIntervalHello\n      egpNeighIntervalPoll\n      egpNeighMode\n\
    \      egpNeighEventTrigger\n   a new variable is added:\n      egpAs\n   which\
    \ gives the autonomous system associated with this EGP entity.\n"
- title: 3.12.  The Transmission Group
  contents:
  - "3.12.  The Transmission Group\n   MIB-I was lacking in that it did not distinguish\
    \ between different\n   types of transmission media.  A new group, the Transmission\
    \ group, is\n   allocated for this purpose:\n      transmission OBJECT IDENTIFIER\
    \ ::= { mib-2 10 }\n   When Internet-standard definitions for managing transmission\
    \ media\n   are defined, the transmission group is used to provide a prefix for\n\
    \   the names of those objects.\n   Typically, such definitions reside in the\
    \ experimental portion of the\n   MIB until they are \"proven\", then as a part\
    \ of the Internet\n   standardization process, the definitions are accordingly\
    \ elevated and\n   a new object identifier, under the transmission group is defined.\
    \  By\n   convention, the name assigned is:\n      type OBJECT IDENTIFIER ::=\
    \ { transmission number }\n   where \"type\" is the symbolic value used for the\
    \ media in the ifType\n   column of the ifTable object, and \"number\" is the\
    \ actual integer\n   value corresponding to the symbol.\n"
- title: 3.13.  The SNMP Group
  contents:
  - "3.13.  The SNMP Group\n   The application-oriented working groups of the IETF\
    \ have been tasked\n   to be receptive towards defining MIB variables specific\
    \ to their\n   respective applications.\n   For the SNMP, it is useful to have\
    \ statistical information.  A new\n   group, the SNMP group, is allocated for\
    \ this purpose:\n      snmp   OBJECT IDENTIFIER ::= { mib-2 11 }\n"
- title: 3.14.  Changes from RFC 1158
  contents:
  - "3.14.  Changes from RFC 1158\n   Features of this MIB include:\n   (1)  The managed\
    \ objects in this document have been defined\n        using the conventions defined\
    \ in the Internet-standard\n        SMI, as amended by the extensions specified\
    \ in [14].  It\n        must be emphasized that definitions made using these\n\
    \        extensions are semantically identically to those in RFC\n        1158.\n\
    \   (2)  The PhysAddress textual convention has been introduced to\n        represent\
    \ media addresses.\n   (3)  The ACCESS clause of sysLocation is now read-write.\n\
    \   (4)  The definition of sysServices has been clarified.\n   (5)  New ifType\
    \ values (29-32) have been defined.  In\n        addition, the textual-descriptor\
    \ for the DS1 and E1\n        interface types has been corrected.\n   (6)  The\
    \ definition of ipForwarding has been clarified.\n   (7)  The definition of ipRouteType\
    \ has been clarified.\n   (8)  The ipRouteMetric5 and ipRouteInfo objects have\
    \ been\n        defined.\n   (9)  The ACCESS clause of tcpConnState is now read-write,\
    \ to\n        support deletion of the TCB associated with a TCP\n        connection.\
    \  The definition of this object has been\n        clarified to explain this usage.\n\
    \   (10) The definition of egpNeighEventTrigger has been\n        clarified.\n\
    \   (11) The definition of several of the variables in the new\n        snmp group\
    \ have been clarified.  In addition, the\n        snmpInBadTypes and snmpOutReadOnlys\
    \ objects are no longer\n        present.  (However, the object identifiers associated\n\
    \        with those objects are reserved to prevent future use.)\n   (12) The\
    \ definition of snmpInReadOnlys has been clarified.\n   (13) The textual descriptor\
    \ of the snmpEnableAuthTraps has\n        been changed to snmpEnableAuthenTraps,\
    \ and the definition\n        has been clarified.\n   (14) The ipRoutingDiscards\
    \ object was added.\n   (15) The optional use of an implementation-dependent,\
    \ small\n        positive integer was disallowed when identifying\n        instances\
    \ of the IP address and routing tables.\n"
- title: 4.  Objects
  contents:
  - "4.  Objects\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB.  Objects in the MIB are\n\
    \   defined using the subset of Abstract Syntax Notation One (ASN.1) [8]\n   defined\
    \ in the SMI.  In particular, each object has a name, a syntax,\n   and an encoding.\
    \  The name is an object identifier, an\n   administratively assigned name, which\
    \ specifies an object type.  The\n   object type together with an object instance\
    \ serves to uniquely\n   identify a specific instantiation of the object.  For\
    \ human\n   convenience, we often use a textual string, termed the OBJECT\n  \
    \ DESCRIPTOR, to also refer to the object type.\n   The syntax of an object type\
    \ defines the abstract data structure\n   corresponding to that object type. \
    \ The ASN.1 language is used for\n   this purpose.  However, the SMI [12] purposely\
    \ restricts the ASN.1\n   constructs which may be used.  These restrictions are\
    \ explicitly made\n   for simplicity.\n   The encoding of an object type is simply\
    \ how that object type is\n   represented using the object type's syntax.  Implicitly\
    \ tied to the\n   notion of an object type's syntax and encoding is how the object\
    \ type\n   is represented when being transmitted on the network.\n   The SMI specifies\
    \ the use of the basic encoding rules of ASN.1 [9],\n   subject to the additional\
    \ requirements imposed by the SNMP.\n"
- title: 4.1.  Format of Definitions
  contents:
  - "4.1.  Format of Definitions\n   Section 6 contains contains the specification\
    \ of all object types\n   contained in this MIB module.  The object types are\
    \ defined using the\n   conventions defined in the SMI, as amended by the extensions\n\
    \   specified in [14].\n"
- title: 5.  Overview
  contents:
  - "5.  Overview\n   Consistent with the IAB directive to produce simple, workable\
    \ systems\n   in the short-term, the list of managed objects defined here, has\
    \ been\n   derived by taking only those elements which are considered essential.\n\
    \   This approach of taking only the essential objects is NOT\n   restrictive,\
    \ since the SMI defined in the companion memo provides\n   three extensibility\
    \ mechanisms: one, the addition of new standard\n   objects through the definitions\
    \ of new versions of the MIB; two, the\n   addition of widely-available but non-standard\
    \ objects through the\n   experimental subtree; and three, the addition of private\
    \ objects\n   through the enterprises subtree.  Such additional objects can not\n\
    \   only be used for vendor-specific elements, but also for\n   experimentation\
    \ as required to further the knowledge of which other\n   objects are essential.\n\
    \   The design of MIB-II is heavily influenced by the first extensibility\n  \
    \ mechanism.  Several new variables have been added based on\n   operational experience\
    \ and need.  Based on this, the criteria for\n   including an object in MIB-II\
    \ are remarkably similar to the MIB-I\n   criteria:\n   (1)  An object needed\
    \ to be essential for either fault or\n        configuration management.\n   (2)\
    \  Only weak control objects were permitted (by weak, it is\n        meant that\
    \ tampering with them can do only limited\n        damage).  This criterion reflects\
    \ the fact that the\n        current management protocols are not sufficiently\
    \ secure\n        to do more powerful control operations.\n   (3)  Evidence of\
    \ current use and utility was required.\n   (4)  In MIB-I, an attempt was made\
    \ to limit the number of\n        objects to about 100 to make it easier for vendors\
    \ to\n        fully instrument their software.  In MIB-II, this limit\n      \
    \  was raised given the wide technological base now\n        implementing MIB-I.\n\
    \   (5)  To avoid redundant variables, it was required that no\n        object\
    \ be included that can be derived from others in the\n        MIB.\n   (6)  Implementation\
    \ specific objects (e.g., for BSD UNIX) were\n        excluded.\n   (7)  It was\
    \ agreed to avoid heavily instrumenting critical\n        sections of code.  The\
    \ general guideline was one counter\n        per critical section per layer.\n\
    \   MIB-II, like its predecessor, the Internet-standard MIB, contains\n   only\
    \ essential elements.  There is no need to allow individual\n   objects to be\
    \ optional.  Rather, the objects are arranged into the\n   following groups:\n\
    \      - System\n      - Interfaces\n      - Address Translation (deprecated)\n\
    \      - IP\n      - ICMP\n      - TCP\n      - UDP\n      - EGP\n      - Transmission\n\
    \      - SNMP\n   These groups are the basic unit of conformance: This method\
    \ is as\n   follows: if the semantics of a group is applicable to an\n   implementation,\
    \ then it must implement all objects in that group.\n   For example, an implementation\
    \ must implement the EGP group if and\n   only if it implements the EGP.\n   There\
    \ are two reasons for defining these groups: to provide a means\n   of assigning\
    \ object identifiers; and, to provide a method for\n   implementations of managed\
    \ agents to know which objects they must\n   implement.\n"
- title: 6.  Definitions
  contents:
  - "6.  Definitions\n          RFC1213-MIB DEFINITIONS ::= BEGIN\n          IMPORTS\n\
    \                  mgmt, NetworkAddress, IpAddress, Counter, Gauge,\n        \
    \                  TimeTicks\n                      FROM RFC1155-SMI\n       \
    \           OBJECT-TYPE\n                          FROM RFC-1212;\n          --\
    \  This MIB module uses the extended OBJECT-TYPE macro as\n          --  defined\
    \ in [14];\n          --  MIB-II (same prefix as MIB-I)\n          mib-2     \
    \ OBJECT IDENTIFIER ::= { mgmt 1 }\n          -- textual conventions\n       \
    \   DisplayString ::=\n              OCTET STRING\n          -- This data type\
    \ is used to model textual information taken\n          -- from the NVT ASCII\
    \ character set.  By convention, objects\n          -- with this syntax are declared\
    \ as having\n          --\n          --      SIZE (0..255)\n          PhysAddress\
    \ ::=\n              OCTET STRING\n          -- This data type is used to model\
    \ media addresses.  For many\n          -- types of media, this will be in a binary\
    \ representation.\n          -- For example, an ethernet address would be represented\
    \ as\n          -- a string of 6 octets.\n          -- groups in MIB-II\n    \
    \      system       OBJECT IDENTIFIER ::= { mib-2 1 }\n          interfaces  \
    \ OBJECT IDENTIFIER ::= { mib-2 2 }\n          at           OBJECT IDENTIFIER\
    \ ::= { mib-2 3 }\n          ip           OBJECT IDENTIFIER ::= { mib-2 4 }\n\
    \          icmp         OBJECT IDENTIFIER ::= { mib-2 5 }\n          tcp     \
    \     OBJECT IDENTIFIER ::= { mib-2 6 }\n          udp          OBJECT IDENTIFIER\
    \ ::= { mib-2 7 }\n          egp          OBJECT IDENTIFIER ::= { mib-2 8 }\n\
    \          -- historical (some say hysterical)\n          -- cmot      OBJECT\
    \ IDENTIFIER ::= { mib-2 9 }\n          transmission OBJECT IDENTIFIER ::= { mib-2\
    \ 10 }\n          snmp         OBJECT IDENTIFIER ::= { mib-2 11 }\n          --\
    \ the System group\n          -- Implementation of the System group is mandatory\
    \ for all\n          -- systems.  If an agent is not configured to have a value\n\
    \          -- for any of these variables, a string of length 0 is\n          --\
    \ returned.\n          sysDescr OBJECT-TYPE\n              SYNTAX  DisplayString\
    \ (SIZE (0..255))\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"A textual description of the\
    \ entity.  This value\n                      should include the full name and\
    \ version\n                      identification of the system's hardware type,\n\
    \                      software operating-system, and networking\n           \
    \           software.  It is mandatory that this only contain\n              \
    \        printable ASCII characters.\"\n              ::= { system 1 }\n     \
    \     sysObjectID OBJECT-TYPE\n              SYNTAX  OBJECT IDENTIFIER\n     \
    \         ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The vendor's authoritative identification of the\n  \
    \                    network management subsystem contained in the\n         \
    \             entity.  This value is allocated within the SMI\n              \
    \        enterprises subtree (1.3.6.1.4.1) and provides an\n                 \
    \     easy and unambiguous means for determining `what\n                     \
    \ kind of box' is being managed.  For example, if\n                      vendor\
    \ `Flintstones, Inc.' was assigned the\n                      subtree 1.3.6.1.4.1.4242,\
    \ it could assign the\n                      identifier 1.3.6.1.4.1.4242.1.1 to\
    \ its `Fred\n                      Router'.\"\n              ::= { system 2 }\n\
    \          sysUpTime OBJECT-TYPE\n              SYNTAX  TimeTicks\n          \
    \    ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The time (in hundredths of a second) since the\n    \
    \                  network management portion of the system was last\n       \
    \               re-initialized.\"\n              ::= { system 3 }\n          sysContact\
    \ OBJECT-TYPE\n              SYNTAX  DisplayString (SIZE (0..255))\n         \
    \     ACCESS  read-write\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The textual identification of the contact person\n  \
    \                    for this managed node, together with information\n      \
    \                on how to contact this person.\"\n              ::= { system\
    \ 4 }\n          sysName OBJECT-TYPE\n              SYNTAX  DisplayString (SIZE\
    \ (0..255))\n              ACCESS  read-write\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"An administratively-assigned\
    \ name for this\n                      managed node.  By convention, this is the\
    \ node's\n                      fully-qualified domain name.\"\n             \
    \ ::= { system 5 }\n          sysLocation OBJECT-TYPE\n              SYNTAX  DisplayString\
    \ (SIZE (0..255))\n              ACCESS  read-write\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The physical location of this\
    \ node (e.g.,\n                      `telephone closet, 3rd floor').\"\n     \
    \         ::= { system 6 }\n          sysServices OBJECT-TYPE\n              SYNTAX\
    \  INTEGER (0..127)\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"A value which indicates the\
    \ set of services that\n                      this entity primarily offers.\n\
    \                      The value is a sum.  This sum initially takes the\n   \
    \                   value zero, Then, for each layer, L, in the range\n      \
    \                1 through 7, that this node performs transactions\n         \
    \             for, 2 raised to (L - 1) is added to the sum.  For\n           \
    \           example, a node which performs primarily routing\n               \
    \       functions would have a value of 4 (2^(3-1)).  In\n                   \
    \   contrast, a node which is a host offering\n                      application\
    \ services would have a value of 72\n                      (2^(4-1) + 2^(7-1)).\
    \  Note that in the context of\n                      the Internet suite of protocols,\
    \ values should be\n                      calculated accordingly:\n          \
    \                 layer  functionality\n                               1  physical\
    \ (e.g., repeaters)\n                               2  datalink/subnetwork (e.g.,\
    \ bridges)\n                               3  internet (e.g., IP gateways)\n \
    \                              4  end-to-end  (e.g., IP hosts)\n             \
    \                  7  applications (e.g., mail relays)\n                     \
    \ For systems including OSI protocols, layers 5 and\n                      6 may\
    \ also be counted.\"\n              ::= { system 7 }\n          -- the Interfaces\
    \ group\n          -- Implementation of the Interfaces group is mandatory for\n\
    \          -- all systems.\n          ifNumber OBJECT-TYPE\n              SYNTAX\
    \  INTEGER\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of network interfaces\
    \ (regardless of\n                      their current state) present on this system.\"\
    \n              ::= { interfaces 1 }\n          -- the Interfaces table\n    \
    \      -- The Interfaces table contains information on the entity's\n        \
    \  -- interfaces.  Each interface is thought of as being\n          -- attached\
    \ to a `subnetwork'.  Note that this term should\n          -- not be confused\
    \ with `subnet' which refers to an\n          -- addressing partitioning scheme\
    \ used in the Internet suite\n          -- of protocols.\n          ifTable OBJECT-TYPE\n\
    \              SYNTAX  SEQUENCE OF IfEntry\n              ACCESS  not-accessible\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A list of interface entries.  The number of\n                      entries\
    \ is given by the value of ifNumber.\"\n              ::= { interfaces 2 }\n \
    \         ifEntry OBJECT-TYPE\n              SYNTAX  IfEntry\n              ACCESS\
    \  not-accessible\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"An interface entry containing objects at the\n      \
    \                subnetwork layer and below for a particular\n               \
    \       interface.\"\n              INDEX   { ifIndex }\n              ::= { ifTable\
    \ 1 }\n          IfEntry ::=\n              SEQUENCE {\n                  ifIndex\n\
    \                      INTEGER,\n                  ifDescr\n                 \
    \     DisplayString,\n                  ifType\n                      INTEGER,\n\
    \                  ifMtu\n                      INTEGER,\n                  ifSpeed\n\
    \                      Gauge,\n                  ifPhysAddress\n             \
    \         PhysAddress,\n                  ifAdminStatus\n                    \
    \  INTEGER,\n                  ifOperStatus\n                      INTEGER,\n\
    \                  ifLastChange\n                      TimeTicks,\n          \
    \        ifInOctets\n                      Counter,\n                  ifInUcastPkts\n\
    \                      Counter,\n                  ifInNUcastPkts\n          \
    \            Counter,\n                  ifInDiscards\n                      Counter,\n\
    \                  ifInErrors\n                      Counter,\n              \
    \    ifInUnknownProtos\n                      Counter,\n                  ifOutOctets\n\
    \                      Counter,\n                  ifOutUcastPkts\n          \
    \            Counter,\n                  ifOutNUcastPkts\n                   \
    \   Counter,\n                  ifOutDiscards\n                      Counter,\n\
    \                  ifOutErrors\n                      Counter,\n             \
    \     ifOutQLen\n                      Gauge,\n                  ifSpecific\n\
    \                      OBJECT IDENTIFIER\n              }\n          ifIndex OBJECT-TYPE\n\
    \              SYNTAX  INTEGER\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"A unique\
    \ value for each interface.  Its value\n                      ranges between 1\
    \ and the value of ifNumber.  The\n                      value for each interface\
    \ must remain constant at\n                      least from one re-initialization\
    \ of the entity's\n                      network management system to the next\
    \ re-\n                      initialization.\"\n              ::= { ifEntry 1\
    \ }\n          ifDescr OBJECT-TYPE\n              SYNTAX  DisplayString (SIZE\
    \ (0..255))\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"A textual string containing\
    \ information about the\n                      interface.  This string should\
    \ include the name of\n                      the manufacturer, the product name\
    \ and the version\n                      of the hardware interface.\"\n      \
    \        ::= { ifEntry 2 }\n          ifType OBJECT-TYPE\n              SYNTAX\
    \  INTEGER {\n                          other(1),          -- none of the following\n\
    \                          regular1822(2),\n                          hdh1822(3),\n\
    \                          ddn-x25(4),\n                          rfc877-x25(5),\n\
    \                          ethernet-csmacd(6),\n                          iso88023-csmacd(7),\n\
    \                          iso88024-tokenBus(8),\n                          iso88025-tokenRing(9),\n\
    \                          iso88026-man(10),\n                          starLan(11),\n\
    \                          proteon-10Mbit(12),\n                          proteon-80Mbit(13),\n\
    \                          hyperchannel(14),\n                          fddi(15),\n\
    \                          lapb(16),\n                          sdlc(17),\n  \
    \                        ds1(18),           -- T-1\n                         \
    \ e1(19),            -- european equiv. of T-1\n                          basicISDN(20),\n\
    \                          primaryISDN(21),   -- proprietary serial\n        \
    \                  propPointToPointSerial(22),\n                          ppp(23),\n\
    \                          softwareLoopback(24),\n                          eon(25),\
    \            -- CLNP over IP [11]\n                          ethernet-3Mbit(26),\n\
    \                          nsip(27),           -- XNS over IP\n              \
    \            slip(28),           -- generic SLIP\n                          ultra(29),\
    \          -- ULTRA technologies\n                          ds3(30),         \
    \   -- T-3\n                          sip(31),            -- SMDS\n          \
    \                frame-relay(32)\n                      }\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The type of interface, distinguished according to\n    \
    \                  the physical/link protocol(s) immediately `below'\n       \
    \               the network layer in the protocol stack.\"\n              ::=\
    \ { ifEntry 3 }\n          ifMtu OBJECT-TYPE\n              SYNTAX  INTEGER\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The size of the largest datagram which\
    \ can be\n                      sent/received on the interface, specified in\n\
    \                      octets.  For interfaces that are used for\n           \
    \           transmitting network datagrams, this is the size\n               \
    \       of the largest network datagram that can be sent\n                   \
    \   on the interface.\"\n              ::= { ifEntry 4 }\n          ifSpeed OBJECT-TYPE\n\
    \              SYNTAX  Gauge\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"An estimate of\
    \ the interface's current bandwidth\n                      in bits per second.\
    \  For interfaces which do not\n                      vary in bandwidth or for\
    \ those where no accurate\n                      estimation can be made, this\
    \ object should contain\n                      the nominal bandwidth.\"\n    \
    \          ::= { ifEntry 5 }\n          ifPhysAddress OBJECT-TYPE\n          \
    \    SYNTAX  PhysAddress\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The interface's\
    \ address at the protocol layer\n                      immediately `below' the\
    \ network layer in the\n                      protocol stack.  For interfaces\
    \ which do not have\n                      such an address (e.g., a serial line),\
    \ this object\n                      should contain an octet string of zero length.\"\
    \n              ::= { ifEntry 6 }\n          ifAdminStatus OBJECT-TYPE\n     \
    \         SYNTAX  INTEGER {\n                          up(1),       -- ready to\
    \ pass packets\n                          down(2),\n                         \
    \ testing(3)   -- in some test mode\n                      }\n              ACCESS\
    \  read-write\n              STATUS  mandatory\n              DESCRIPTION\n  \
    \                    \"The desired state of the interface.  The\n            \
    \          testing(3) state indicates that no operational\n                  \
    \    packets can be passed.\"\n              ::= { ifEntry 7 }\n          ifOperStatus\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER {\n                          up(1),\
    \       -- ready to pass packets\n                          down(2),\n       \
    \                   testing(3)   -- in some test mode\n                      }\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The current operational state of the\
    \ interface.\n                      The testing(3) state indicates that no operational\n\
    \                      packets can be passed.\"\n              ::= { ifEntry 8\
    \ }\n          ifLastChange OBJECT-TYPE\n              SYNTAX  TimeTicks\n   \
    \           ACCESS  read-only\n              STATUS  mandatory\n             \
    \ DESCRIPTION\n                      \"The value of sysUpTime at the time the\
    \ interface\n                      entered its current operational state.  If\
    \ the\n                      current state was entered prior to the last re-\n\
    \                      initialization of the local network management\n      \
    \                subsystem, then this object contains a zero\n               \
    \       value.\"\n              ::= { ifEntry 9 }\n          ifInOctets OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The total\
    \ number of octets received on the\n                      interface, including\
    \ framing characters.\"\n              ::= { ifEntry 10 }\n          ifInUcastPkts\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of subnetwork-unicast packets\n                      delivered\
    \ to a higher-layer protocol.\"\n              ::= { ifEntry 11 }\n          ifInNUcastPkts\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of non-unicast (i.e., subnetwork-\n                      broadcast\
    \ or subnetwork-multicast) packets\n                      delivered to a higher-layer\
    \ protocol.\"\n              ::= { ifEntry 12 }\n          ifInDiscards OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of inbound packets which were chosen\n                      to be discarded\
    \ even though no errors had been\n                      detected to prevent their\
    \ being deliverable to a\n                      higher-layer protocol.  One possible\
    \ reason for\n                      discarding such a packet could be to free\
    \ up\n                      buffer space.\"\n              ::= { ifEntry 13 }\n\
    \          ifInErrors OBJECT-TYPE\n              SYNTAX  Counter\n           \
    \   ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The number of inbound packets that contained\n      \
    \                errors preventing them from being deliverable to a\n        \
    \              higher-layer protocol.\"\n              ::= { ifEntry 14 }\n  \
    \        ifInUnknownProtos OBJECT-TYPE\n              SYNTAX  Counter\n      \
    \        ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The number of packets received via the interface\n  \
    \                    which were discarded because of an unknown or\n         \
    \             unsupported protocol.\"\n              ::= { ifEntry 15 }\n    \
    \      ifOutOctets OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The total number of octets transmitted out of the\n    \
    \                  interface, including framing characters.\"\n              ::=\
    \ { ifEntry 16 }\n          ifOutUcastPkts OBJECT-TYPE\n              SYNTAX \
    \ Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The total number of packets\
    \ that higher-level\n                      protocols requested be transmitted\
    \ to a\n                      subnetwork-unicast address, including those that\n\
    \                      were discarded or not sent.\"\n              ::= { ifEntry\
    \ 17 }\n          ifOutNUcastPkts OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The total number of packets that higher-level\n\
    \                      protocols requested be transmitted to a non-\n        \
    \              unicast (i.e., a subnetwork-broadcast or\n                    \
    \  subnetwork-multicast) address, including those\n                      that\
    \ were discarded or not sent.\"\n              ::= { ifEntry 18 }\n          ifOutDiscards\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of outbound packets which were chosen\n                  \
    \    to be discarded even though no errors had been\n                      detected\
    \ to prevent their being transmitted.  One\n                      possible reason\
    \ for discarding such a packet could\n                      be to free up buffer\
    \ space.\"\n              ::= { ifEntry 19 }\n          ifOutErrors OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of outbound packets that could not be\n                      transmitted because\
    \ of errors.\"\n              ::= { ifEntry 20 }\n          ifOutQLen OBJECT-TYPE\n\
    \              SYNTAX  Gauge\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The length of\
    \ the output packet queue (in\n                      packets).\"\n           \
    \   ::= { ifEntry 21 }\n          ifSpecific OBJECT-TYPE\n              SYNTAX\
    \  OBJECT IDENTIFIER\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"A reference to MIB definitions\
    \ specific to the\n                      particular media being used to realize\
    \ the\n                      interface.  For example, if the interface is\n  \
    \                    realized by an ethernet, then the value of this\n       \
    \               object refers to a document defining objects\n               \
    \       specific to ethernet.  If this information is not\n                  \
    \    present, its value should be set to the OBJECT\n                      IDENTIFIER\
    \ { 0 0 }, which is a syntatically valid\n                      object identifier,\
    \ and any conformant\n                      implementation of ASN.1 and BER must\
    \ be able to\n                      generate and recognize this value.\"\n   \
    \           ::= { ifEntry 22 }\n          -- the Address Translation group\n \
    \         -- Implementation of the Address Translation group is\n          --\
    \ mandatory for all systems.  Note however that this group\n          -- is deprecated\
    \ by MIB-II. That is, it is being included\n          -- solely for compatibility\
    \ with MIB-I nodes, and will most\n          -- likely be excluded from MIB-III\
    \ nodes.  From MIB-II and\n          -- onwards, each network protocol group contains\
    \ its own\n          -- address translation tables.\n          -- The Address\
    \ Translation group contains one table which is\n          -- the union across\
    \ all interfaces of the translation tables\n          -- for converting a NetworkAddress\
    \ (e.g., an IP address) into\n          -- a subnetwork-specific address.  For\
    \ lack of a better term,\n          -- this document refers to such a subnetwork-specific\
    \ address\n          -- as a `physical' address.\n          -- Examples of such\
    \ translation tables are: for broadcast\n          -- media where ARP is in use,\
    \ the translation table is\n          -- equivalent to the ARP cache; or, on an\
    \ X.25 network where\n          -- non-algorithmic translation to X.121 addresses\
    \ is\n          -- required, the translation table contains the\n          --\
    \ NetworkAddress to X.121 address equivalences.\n          atTable OBJECT-TYPE\n\
    \              SYNTAX  SEQUENCE OF AtEntry\n              ACCESS  not-accessible\n\
    \              STATUS  deprecated\n              DESCRIPTION\n               \
    \       \"The Address Translation tables contain the\n                      NetworkAddress\
    \ to `physical' address equivalences.\n                      Some interfaces do\
    \ not use translation tables for\n                      determining address equivalences\
    \ (e.g., DDN-X.25\n                      has an algorithmic method); if all interfaces\
    \ are\n                      of this type, then the Address Translation table\n\
    \                      is empty, i.e., has zero entries.\"\n              ::=\
    \ { at 1 }\n          atEntry OBJECT-TYPE\n              SYNTAX  AtEntry\n   \
    \           ACCESS  not-accessible\n              STATUS  deprecated\n       \
    \       DESCRIPTION\n                      \"Each entry contains one NetworkAddress\
    \ to\n                      `physical' address equivalence.\"\n              INDEX\
    \   { atIfIndex,\n                        atNetAddress }\n              ::= {\
    \ atTable 1 }\n          AtEntry ::=\n              SEQUENCE {\n             \
    \     atIfIndex\n                      INTEGER,\n                  atPhysAddress\n\
    \                      PhysAddress,\n                  atNetAddress\n        \
    \              NetworkAddress\n              }\n          atIfIndex OBJECT-TYPE\n\
    \              SYNTAX  INTEGER\n              ACCESS  read-write\n           \
    \   STATUS  deprecated\n              DESCRIPTION\n                      \"The\
    \ interface on which this entry's equivalence\n                      is effective.\
    \  The interface identified by a\n                      particular value of this\
    \ index is the same\n                      interface as identified by the same\
    \ value of\n                      ifIndex.\"\n              ::= { atEntry 1 }\n\
    \          atPhysAddress OBJECT-TYPE\n              SYNTAX  PhysAddress\n    \
    \          ACCESS  read-write\n              STATUS  deprecated\n            \
    \  DESCRIPTION\n                      \"The media-dependent `physical' address.\n\
    \                      Setting this object to a null string (one of zero\n   \
    \                   length) has the effect of invaliding the\n               \
    \       corresponding entry in the atTable object.  That\n                   \
    \   is, it effectively dissasociates the interface\n                      identified\
    \ with said entry from the mapping\n                      identified with said\
    \ entry.  It is an\n                      implementation-specific matter as to\
    \ whether the\n                      agent removes an invalidated entry from the\
    \ table.\n                      Accordingly, management stations must be prepared\n\
    \                      to receive tabular information from agents that\n     \
    \                 corresponds to entries not currently in use.\n             \
    \         Proper interpretation of such entries requires\n                   \
    \   examination of the relevant atPhysAddress object.\"\n              ::= { atEntry\
    \ 2 }\n          atNetAddress OBJECT-TYPE\n              SYNTAX  NetworkAddress\n\
    \              ACCESS  read-write\n              STATUS  deprecated\n        \
    \      DESCRIPTION\n                      \"The NetworkAddress (e.g., the IP address)\n\
    \                      corresponding to the media-dependent `physical'\n     \
    \                 address.\"\n              ::= { atEntry 3 }\n          -- the\
    \ IP group\n          -- Implementation of the IP group is mandatory for all\n\
    \          -- systems.\n          ipForwarding OBJECT-TYPE\n              SYNTAX\
    \  INTEGER {\n                          forwarding(1),    -- acting as a gateway\n\
    \                          not-forwarding(2) -- NOT acting as a gateway\n    \
    \                  }\n              ACCESS  read-write\n              STATUS \
    \ mandatory\n              DESCRIPTION\n                      \"The indication\
    \ of whether this entity is acting\n                      as an IP gateway in\
    \ respect to the forwarding of\n                      datagrams received by, but\
    \ not addressed to, this\n                      entity.  IP gateways forward datagrams.\
    \  IP hosts\n                      do not (except those source-routed via the\
    \ host).\n                      Note that for some managed nodes, this object\
    \ may\n                      take on only a subset of the values possible.\n \
    \                     Accordingly, it is appropriate for an agent to\n       \
    \               return a `badValue' response if a management\n               \
    \       station attempts to change this object to an\n                      inappropriate\
    \ value.\"\n              ::= { ip 1 }\n          ipDefaultTTL OBJECT-TYPE\n \
    \             SYNTAX  INTEGER\n              ACCESS  read-write\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The default\
    \ value inserted into the Time-To-Live\n                      field of the IP\
    \ header of datagrams originated at\n                      this entity, whenever\
    \ a TTL value is not supplied\n                      by the transport layer protocol.\"\
    \n              ::= { ip 2 }\n          ipInReceives OBJECT-TYPE\n           \
    \   SYNTAX  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The total number of input\
    \ datagrams received from\n                      interfaces, including those received\
    \ in error.\"\n              ::= { ip 3 }\n          ipInHdrErrors OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of input datagrams discarded due to\n                      errors in their IP\
    \ headers, including bad\n                      checksums, version number mismatch,\
    \ other format\n                      errors, time-to-live exceeded, errors discovered\n\
    \                      in processing their IP options, etc.\"\n              ::=\
    \ { ip 4 }\n          ipInAddrErrors OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of input datagrams discarded\
    \ because\n                      the IP address in their IP header's destination\n\
    \                      field was not a valid address to be received at\n     \
    \                 this entity.  This count includes invalid\n                \
    \      addresses (e.g., 0.0.0.0) and addresses of\n                      unsupported\
    \ Classes (e.g., Class E).  For entities\n                      which are not\
    \ IP Gateways and therefore do not\n                      forward datagrams, this\
    \ counter includes datagrams\n                      discarded because the destination\
    \ address was not\n                      a local address.\"\n              ::=\
    \ { ip 5 }\n          ipForwDatagrams OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of input datagrams for which\
    \ this\n                      entity was not their final IP destination, as a\n\
    \                      result of which an attempt was made to find a\n       \
    \               route to forward them to that final destination.\n           \
    \           In entities which do not act as IP Gateways, this\n              \
    \        counter will include only those packets which were\n                \
    \      Source-Routed via this entity, and the Source-\n                      Route\
    \ option processing was successful.\"\n              ::= { ip 6 }\n          ipInUnknownProtos\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of locally-addressed datagrams\n                      received\
    \ successfully but discarded because of an\n                      unknown or unsupported\
    \ protocol.\"\n              ::= { ip 7 }\n          ipInDiscards OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of input IP datagrams for which no\n                      problems were encountered\
    \ to prevent their\n                      continued processing, but which were\
    \ discarded\n                      (e.g., for lack of buffer space).  Note that\
    \ this\n                      counter does not include any datagrams discarded\n\
    \                      while awaiting re-assembly.\"\n              ::= { ip 8\
    \ }\n          ipInDelivers OBJECT-TYPE\n              SYNTAX  Counter\n     \
    \         ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The total number of input datagrams successfully\n  \
    \                    delivered to IP user-protocols (including ICMP).\"\n    \
    \          ::= { ip 9 }\n          ipOutRequests OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The total number of IP datagrams\
    \ which local IP\n                      user-protocols (including ICMP) supplied\
    \ to IP in\n                      requests for transmission.  Note that this counter\n\
    \                      does not include any datagrams counted in\n           \
    \           ipForwDatagrams.\"\n              ::= { ip 10 }\n          ipOutDiscards\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of output IP datagrams for which no\n                    \
    \  problem was encountered to prevent their\n                      transmission\
    \ to their destination, but which were\n                      discarded (e.g.,\
    \ for lack of buffer space).  Note\n                      that this counter would\
    \ include datagrams counted\n                      in ipForwDatagrams if any such\
    \ packets met this\n                      (discretionary) discard criterion.\"\
    \n              ::= { ip 11 }\n          ipOutNoRoutes OBJECT-TYPE\n         \
    \     SYNTAX  Counter\n              ACCESS  read-only\n              STATUS \
    \ mandatory\n              DESCRIPTION\n                      \"The number of\
    \ IP datagrams discarded because no\n                      route could be found\
    \ to transmit them to their\n                      destination.  Note that this\
    \ counter includes any\n                      packets counted in ipForwDatagrams\
    \ which meet this\n                      `no-route' criterion.  Note that this\
    \ includes any\n                      datagarms which a host cannot route because\
    \ all of\n                      its default gateways are down.\"\n           \
    \   ::= { ip 12 }\n          ipReasmTimeout OBJECT-TYPE\n              SYNTAX\
    \  INTEGER\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The maximum number of seconds\
    \ which received\n                      fragments are held while they are awaiting\n\
    \                      reassembly at this entity.\"\n              ::= { ip 13\
    \ }\n          ipReasmReqds OBJECT-TYPE\n              SYNTAX  Counter\n     \
    \         ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The number of IP fragments received which needed\n  \
    \                    to be reassembled at this entity.\"\n              ::= {\
    \ ip 14 }\n          ipReasmOKs OBJECT-TYPE\n              SYNTAX  Counter\n \
    \             ACCESS  read-only\n              STATUS  mandatory\n           \
    \   DESCRIPTION\n                      \"The number of IP datagrams successfully\
    \ re-\n                      assembled.\"\n              ::= { ip 15 }\n     \
    \     ipReasmFails OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The number of failures detected by the IP re-\n        \
    \              assembly algorithm (for whatever reason: timed\n              \
    \        out, errors, etc).  Note that this is not\n                      necessarily\
    \ a count of discarded IP fragments\n                      since some algorithms\
    \ (notably the algorithm in\n                      RFC 815) can lose track of\
    \ the number of fragments\n                      by combining them as they are\
    \ received.\"\n              ::= { ip 16 }\n          ipFragOKs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of IP datagrams that have been\n                      successfully fragmented\
    \ at this entity.\"\n              ::= { ip 17 }\n          ipFragFails OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of IP datagrams that have been\n                      discarded because they\
    \ needed to be fragmented at\n                      this entity but could not\
    \ be, e.g., because their\n                      Don't Fragment flag was set.\"\
    \n              ::= { ip 18 }\n          ipFragCreates OBJECT-TYPE\n         \
    \     SYNTAX  Counter\n              ACCESS  read-only\n              STATUS \
    \ mandatory\n              DESCRIPTION\n                      \"The number of\
    \ IP datagram fragments that have\n                      been generated as a result\
    \ of fragmentation at\n                      this entity.\"\n              ::=\
    \ { ip 19 }\n          -- the IP address table\n          -- The IP address table\
    \ contains this entity's IP addressing\n          -- information.\n          ipAddrTable\
    \ OBJECT-TYPE\n              SYNTAX  SEQUENCE OF IpAddrEntry\n              ACCESS\
    \  not-accessible\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The table of addressing information relevant to\n   \
    \                   this entity's IP addresses.\"\n              ::= { ip 20 }\n\
    \          ipAddrEntry OBJECT-TYPE\n              SYNTAX  IpAddrEntry\n      \
    \        ACCESS  not-accessible\n              STATUS  mandatory\n           \
    \   DESCRIPTION\n                      \"The addressing information for one of\
    \ this\n                      entity's IP addresses.\"\n              INDEX  \
    \ { ipAdEntAddr }\n              ::= { ipAddrTable 1 }\n          IpAddrEntry\
    \ ::=\n              SEQUENCE {\n                  ipAdEntAddr\n             \
    \         IpAddress,\n                  ipAdEntIfIndex\n                     \
    \ INTEGER,\n                  ipAdEntNetMask\n                      IpAddress,\n\
    \                  ipAdEntBcastAddr\n                      INTEGER,\n        \
    \          ipAdEntReasmMaxSize\n                      INTEGER (0..65535)\n   \
    \           }\n          ipAdEntAddr OBJECT-TYPE\n              SYNTAX  IpAddress\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The IP address to which this entry's\
    \ addressing\n                      information pertains.\"\n              ::=\
    \ { ipAddrEntry 1 }\n          ipAdEntIfIndex OBJECT-TYPE\n              SYNTAX\
    \  INTEGER\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The index value which uniquely\
    \ identifies the\n                      interface to which this entry is applicable.\
    \  The\n                      interface identified by a particular value of this\n\
    \                      index is the same interface as identified by the\n    \
    \                  same value of ifIndex.\"\n              ::= { ipAddrEntry 2\
    \ }\n          ipAdEntNetMask OBJECT-TYPE\n              SYNTAX  IpAddress\n \
    \             ACCESS  read-only\n              STATUS  mandatory\n           \
    \   DESCRIPTION\n                      \"The subnet mask associated with the IP\
    \ address of\n                      this entry.  The value of the mask is an IP\n\
    \                      address with all the network bits set to 1 and all\n  \
    \                    the hosts bits set to 0.\"\n              ::= { ipAddrEntry\
    \ 3 }\n          ipAdEntBcastAddr OBJECT-TYPE\n              SYNTAX  INTEGER\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The value of the least-significant bit\
    \ in the IP\n                      broadcast address used for sending datagrams\
    \ on\n                      the (logical) interface associated with the IP\n \
    \                     address of this entry.  For example, when the\n        \
    \              Internet standard all-ones broadcast address is\n             \
    \         used, the value will be 1.  This value applies to\n                \
    \      both the subnet and network broadcasts addresses\n                    \
    \  used by the entity on this (logical) interface.\"\n              ::= { ipAddrEntry\
    \ 4 }\n          ipAdEntReasmMaxSize OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (0..65535)\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The size of the largest IP\
    \ datagram which this\n                      entity can re-assemble from incoming\
    \ IP fragmented\n                      datagrams received on this interface.\"\
    \n              ::= { ipAddrEntry 5 }\n          -- the IP routing table\n   \
    \       -- The IP routing table contains an entry for each route\n          --\
    \ presently known to this entity.\n          ipRouteTable OBJECT-TYPE\n      \
    \        SYNTAX  SEQUENCE OF IpRouteEntry\n              ACCESS  not-accessible\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"This entity's IP Routing table.\"\n              ::= { ip 21 }\n    \
    \      ipRouteEntry OBJECT-TYPE\n              SYNTAX  IpRouteEntry\n        \
    \      ACCESS  not-accessible\n              STATUS  mandatory\n             \
    \ DESCRIPTION\n                      \"A route to a particular destination.\"\n\
    \              INDEX   { ipRouteDest }\n              ::= { ipRouteTable 1 }\n\
    \          IpRouteEntry ::=\n              SEQUENCE {\n                  ipRouteDest\n\
    \                      IpAddress,\n                  ipRouteIfIndex\n        \
    \              INTEGER,\n                  ipRouteMetric1\n                  \
    \    INTEGER,\n                  ipRouteMetric2\n                      INTEGER,\n\
    \                  ipRouteMetric3\n                      INTEGER,\n          \
    \        ipRouteMetric4\n                      INTEGER,\n                  ipRouteNextHop\n\
    \                      IpAddress,\n                  ipRouteType\n           \
    \           INTEGER,\n                  ipRouteProto\n                      INTEGER,\n\
    \                  ipRouteAge\n                      INTEGER,\n              \
    \    ipRouteMask\n                      IpAddress,\n                  ipRouteMetric5\n\
    \                      INTEGER,\n                  ipRouteInfo\n             \
    \         OBJECT IDENTIFIER\n              }\n          ipRouteDest OBJECT-TYPE\n\
    \              SYNTAX  IpAddress\n              ACCESS  read-write\n         \
    \     STATUS  mandatory\n              DESCRIPTION\n                      \"The\
    \ destination IP address of this route.  An\n                      entry with\
    \ a value of 0.0.0.0 is considered a\n                      default route.  Multiple\
    \ routes to a single\n                      destination can appear in the table,\
    \ but access to\n                      such multiple entries is dependent on the\
    \ table-\n                      access mechanisms defined by the network\n   \
    \                   management protocol in use.\"\n              ::= { ipRouteEntry\
    \ 1 }\n          ipRouteIfIndex OBJECT-TYPE\n              SYNTAX  INTEGER\n \
    \             ACCESS  read-write\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The index value which uniquely identifies\
    \ the\n                      local interface through which the next hop of this\n\
    \                      route should be reached.  The interface identified\n  \
    \                    by a particular value of this index is the same\n       \
    \               interface as identified by the same value of\n               \
    \       ifIndex.\"\n              ::= { ipRouteEntry 2 }\n          ipRouteMetric1\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER\n              ACCESS  read-write\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The primary routing metric for this route.  The\n                   \
    \   semantics of this metric are determined by the\n                      routing-protocol\
    \ specified in the route's\n                      ipRouteProto value.  If this\
    \ metric is not used,\n                      its value should be set to -1.\"\n\
    \              ::= { ipRouteEntry 3 }\n          ipRouteMetric2 OBJECT-TYPE\n\
    \              SYNTAX  INTEGER\n              ACCESS  read-write\n           \
    \   STATUS  mandatory\n              DESCRIPTION\n                      \"An alternate\
    \ routing metric for this route.  The\n                      semantics of this\
    \ metric are determined by the\n                      routing-protocol specified\
    \ in the route's\n                      ipRouteProto value.  If this metric is\
    \ not used,\n                      its value should be set to -1.\"\n        \
    \      ::= { ipRouteEntry 4 }\n          ipRouteMetric3 OBJECT-TYPE\n        \
    \      SYNTAX  INTEGER\n              ACCESS  read-write\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"An alternate\
    \ routing metric for this route.  The\n                      semantics of this\
    \ metric are determined by the\n                      routing-protocol specified\
    \ in the route's\n                      ipRouteProto value.  If this metric is\
    \ not used,\n                      its value should be set to -1.\"\n        \
    \      ::= { ipRouteEntry 5 }\n          ipRouteMetric4 OBJECT-TYPE\n        \
    \      SYNTAX  INTEGER\n              ACCESS  read-write\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"An alternate\
    \ routing metric for this route.  The\n                      semantics of this\
    \ metric are determined by the\n                      routing-protocol specified\
    \ in the route's\n                      ipRouteProto value.  If this metric is\
    \ not used,\n                      its value should be set to -1.\"\n        \
    \      ::= { ipRouteEntry 6 }\n          ipRouteNextHop OBJECT-TYPE\n        \
    \      SYNTAX  IpAddress\n              ACCESS  read-write\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The IP address\
    \ of the next hop of this route.\n                      (In the case of a route\
    \ bound to an interface\n                      which is realized via a broadcast\
    \ media, the value\n                      of this field is the agent's IP address\
    \ on that\n                      interface.)\"\n              ::= { ipRouteEntry\
    \ 7 }\n          ipRouteType OBJECT-TYPE\n              SYNTAX  INTEGER {\n  \
    \                        other(1),        -- none of the following\n         \
    \                 invalid(2),      -- an invalidated route\n                 \
    \                          -- route to directly\n                          direct(3),\
    \       -- connected (sub-)network\n                                         \
    \  -- route to a non-local\n                          indirect(4)      -- host/network/sub-network\n\
    \                      }\n              ACCESS  read-write\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The type of route.\
    \  Note that the values\n                      direct(3) and indirect(4) refer\
    \ to the notion of\n                      direct and indirect routing in the IP\n\
    \                      architecture.\n                      Setting this object\
    \ to the value invalid(2) has\n                      the effect of invalidating\
    \ the corresponding entry\n                      in the ipRouteTable object. \
    \ That is, it\n                      effectively dissasociates the destination\n\
    \                      identified with said entry from the route\n           \
    \           identified with said entry.  It is an\n                      implementation-specific\
    \ matter as to whether the\n                      agent removes an invalidated\
    \ entry from the table.\n                      Accordingly, management stations\
    \ must be prepared\n                      to receive tabular information from\
    \ agents that\n                      corresponds to entries not currently in use.\n\
    \                      Proper interpretation of such entries requires\n      \
    \                examination of the relevant ipRouteType object.\"\n         \
    \     ::= { ipRouteEntry 8 }\n          ipRouteProto OBJECT-TYPE\n           \
    \   SYNTAX  INTEGER {\n                          other(1),       -- none of the\
    \ following\n                                          -- non-protocol information,\n\
    \                                          -- e.g., manually configured\n    \
    \                      local(2),       -- entries\n                          \
    \                -- set via a network\n                          netmgmt(3), \
    \    -- management protocol\n                                          -- obtained\
    \ via ICMP,\n                          icmp(4),        -- e.g., Redirect\n   \
    \                                       -- the remaining values are\n        \
    \                                  -- all gateway routing\n                  \
    \                        -- protocols\n                          egp(5),\n   \
    \                       ggp(6),\n                          hello(7),\n       \
    \                   rip(8),\n                          is-is(9),\n           \
    \               es-is(10),\n                          ciscoIgrp(11),\n       \
    \                   bbnSpfIgp(12),\n                          ospf(13),\n    \
    \                      bgp(14)\n                      }\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The routing mechanism via which this route was\n       \
    \               learned.  Inclusion of values for gateway routing\n          \
    \            protocols is not intended to imply that hosts\n                 \
    \     should support those protocols.\"\n              ::= { ipRouteEntry 9 }\n\
    \          ipRouteAge OBJECT-TYPE\n              SYNTAX  INTEGER\n           \
    \   ACCESS  read-write\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The number of seconds since this route was last\n   \
    \                   updated or otherwise determined to be correct.\n         \
    \             Note that no semantics of `too old' can be implied\n           \
    \           except through knowledge of the routing protocol\n               \
    \       by which the route was learned.\"\n              ::= { ipRouteEntry 10\
    \ }\n          ipRouteMask OBJECT-TYPE\n              SYNTAX  IpAddress\n    \
    \          ACCESS  read-write\n              STATUS  mandatory\n             \
    \ DESCRIPTION\n                      \"Indicate the mask to be logical-ANDed with\
    \ the\n                      destination address before being compared to the\n\
    \                      value in the ipRouteDest field.  For those systems\n  \
    \                    that do not support arbitrary subnet masks, an\n        \
    \              agent constructs the value of the ipRouteMask by\n            \
    \          determining whether the value of the correspondent\n              \
    \        ipRouteDest field belong to a class-A, B, or C\n                    \
    \  network, and then using one of:\n                           mask          \
    \ network\n                           255.0.0.0      class-A\n               \
    \            255.255.0.0    class-B\n                           255.255.255.0\
    \  class-C\n                      If the value of the ipRouteDest is 0.0.0.0 (a\n\
    \                      default route), then the mask value is also\n         \
    \             0.0.0.0.  It should be noted that all IP routing\n             \
    \         subsystems implicitly use this mechanism.\"\n              ::= { ipRouteEntry\
    \ 11 }\n          ipRouteMetric5 OBJECT-TYPE\n              SYNTAX  INTEGER\n\
    \              ACCESS  read-write\n              STATUS  mandatory\n         \
    \     DESCRIPTION\n                      \"An alternate routing metric for this\
    \ route.  The\n                      semantics of this metric are determined by\
    \ the\n                      routing-protocol specified in the route's\n     \
    \                 ipRouteProto value.  If this metric is not used,\n         \
    \             its value should be set to -1.\"\n              ::= { ipRouteEntry\
    \ 12 }\n          ipRouteInfo OBJECT-TYPE\n              SYNTAX  OBJECT IDENTIFIER\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"A reference to MIB definitions specific\
    \ to the\n                      particular routing protocol which is responsible\n\
    \                      for this route, as determined by the value\n          \
    \            specified in the route's ipRouteProto value.  If\n              \
    \        this information is not present, its value should\n                 \
    \     be set to the OBJECT IDENTIFIER { 0 0 }, which is\n                    \
    \  a syntatically valid object identifier, and any\n                      conformant\
    \ implementation of ASN.1 and BER must be\n                      able to generate\
    \ and recognize this value.\"\n              ::= { ipRouteEntry 13 }\n       \
    \   -- the IP Address Translation table\n          -- The IP address translation\
    \ table contain the IpAddress to\n          -- `physical' address equivalences.\
    \  Some interfaces do not\n          -- use translation tables for determining\
    \ address\n          -- equivalences (e.g., DDN-X.25 has an algorithmic method);\n\
    \          -- if all interfaces are of this type, then the Address\n         \
    \ -- Translation table is empty, i.e., has zero entries.\n          ipNetToMediaTable\
    \ OBJECT-TYPE\n              SYNTAX  SEQUENCE OF IpNetToMediaEntry\n         \
    \     ACCESS  not-accessible\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The IP Address Translation table used for mapping\n \
    \                     from IP addresses to physical addresses.\"\n           \
    \   ::= { ip 22 }\n          ipNetToMediaEntry OBJECT-TYPE\n              SYNTAX\
    \  IpNetToMediaEntry\n              ACCESS  not-accessible\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"Each entry contains\
    \ one IpAddress to `physical'\n                      address equivalence.\"\n\
    \              INDEX   { ipNetToMediaIfIndex,\n                        ipNetToMediaNetAddress\
    \ }\n              ::= { ipNetToMediaTable 1 }\n          IpNetToMediaEntry ::=\n\
    \              SEQUENCE {\n                  ipNetToMediaIfIndex\n           \
    \           INTEGER,\n                  ipNetToMediaPhysAddress\n            \
    \          PhysAddress,\n                  ipNetToMediaNetAddress\n          \
    \            IpAddress,\n                  ipNetToMediaType\n                \
    \      INTEGER\n              }\n          ipNetToMediaIfIndex OBJECT-TYPE\n \
    \             SYNTAX  INTEGER\n              ACCESS  read-write\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The interface\
    \ on which this entry's equivalence\n                      is effective.  The\
    \ interface identified by a\n                      particular value of this index\
    \ is the same\n                      interface as identified by the same value\
    \ of\n                      ifIndex.\"\n              ::= { ipNetToMediaEntry\
    \ 1 }\n          ipNetToMediaPhysAddress OBJECT-TYPE\n              SYNTAX  PhysAddress\n\
    \              ACCESS  read-write\n              STATUS  mandatory\n         \
    \     DESCRIPTION\n                      \"The media-dependent `physical' address.\"\
    \n              ::= { ipNetToMediaEntry 2 }\n          ipNetToMediaNetAddress\
    \ OBJECT-TYPE\n              SYNTAX  IpAddress\n              ACCESS  read-write\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The IpAddress corresponding to the media-\n                      dependent\
    \ `physical' address.\"\n              ::= { ipNetToMediaEntry 3 }\n         \
    \ ipNetToMediaType OBJECT-TYPE\n              SYNTAX  INTEGER {\n            \
    \              other(1),        -- none of the following\n                   \
    \       invalid(2),      -- an invalidated mapping\n                         \
    \ dynamic(3),\n                          static(4)\n                      }\n\
    \              ACCESS  read-write\n              STATUS  mandatory\n         \
    \     DESCRIPTION\n                      \"The type of mapping.\n            \
    \          Setting this object to the value invalid(2) has\n                 \
    \     the effect of invalidating the corresponding entry\n                   \
    \   in the ipNetToMediaTable.  That is, it effectively\n                     \
    \ dissasociates the interface identified with said\n                      entry\
    \ from the mapping identified with said entry.\n                      It is an\
    \ implementation-specific matter as to\n                      whether the agent\
    \ removes an invalidated entry\n                      from the table.  Accordingly,\
    \ management stations\n                      must be prepared to receive tabular\
    \ information\n                      from agents that corresponds to entries not\n\
    \                      currently in use.  Proper interpretation of such\n    \
    \                  entries requires examination of the relevant\n            \
    \          ipNetToMediaType object.\"\n              ::= { ipNetToMediaEntry 4\
    \ }\n          -- additional IP objects\n          ipRoutingDiscards OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of routing entries which were chosen\n                      to be discarded\
    \ even though they are valid.  One\n                      possible reason for\
    \ discarding such an entry could\n                      be to free-up buffer space\
    \ for other routing\n                      entries.\"\n              ::= { ip\
    \ 23 }\n          -- the ICMP group\n          -- Implementation of the ICMP group\
    \ is mandatory for all\n          -- systems.\n          icmpInMsgs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The total\
    \ number of ICMP messages which the\n                      entity received.  Note\
    \ that this counter includes\n                      all those counted by icmpInErrors.\"\
    \n              ::= { icmp 1 }\n          icmpInErrors OBJECT-TYPE\n         \
    \     SYNTAX  Counter\n              ACCESS  read-only\n              STATUS \
    \ mandatory\n              DESCRIPTION\n                      \"The number of\
    \ ICMP messages which the entity\n                      received but determined\
    \ as having ICMP-specific\n                      errors (bad ICMP checksums, bad\
    \ length, etc.).\"\n              ::= { icmp 2 }\n          icmpInDestUnreachs\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of ICMP Destination Unreachable\n                      messages\
    \ received.\"\n              ::= { icmp 3 }\n          icmpInTimeExcds OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of ICMP Time Exceeded messages\n                      received.\"\n        \
    \      ::= { icmp 4 }\n          icmpInParmProbs OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of ICMP Parameter\
    \ Problem messages\n                      received.\"\n              ::= { icmp\
    \ 5 }\n          icmpInSrcQuenchs OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of ICMP Source Quench messages\n\
    \                      received.\"\n              ::= { icmp 6 }\n          icmpInRedirects\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of ICMP Redirect messages received.\"\n              ::= {\
    \ icmp 7 }\n          icmpInEchos OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of ICMP Echo (request) messages\n\
    \                      received.\"\n              ::= { icmp 8 }\n          icmpInEchoReps\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of ICMP Echo Reply messages received.\"\n              ::=\
    \ { icmp 9 }\n          icmpInTimestamps OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of ICMP Timestamp (request)\
    \ messages\n                      received.\"\n              ::= { icmp 10 }\n\
    \          icmpInTimestampReps OBJECT-TYPE\n              SYNTAX  Counter\n  \
    \            ACCESS  read-only\n              STATUS  mandatory\n            \
    \  DESCRIPTION\n                      \"The number of ICMP Timestamp Reply messages\n\
    \                      received.\"\n              ::= { icmp 11 }\n          icmpInAddrMasks\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of ICMP Address Mask Request messages\n                  \
    \    received.\"\n              ::= { icmp 12 }\n          icmpInAddrMaskReps\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of ICMP Address Mask Reply messages\n                    \
    \  received.\"\n              ::= { icmp 13 }\n          icmpOutMsgs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The total\
    \ number of ICMP messages which this\n                      entity attempted to\
    \ send.  Note that this counter\n                      includes all those counted\
    \ by icmpOutErrors.\"\n              ::= { icmp 14 }\n          icmpOutErrors\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of ICMP messages which this entity did\n                 \
    \     not send due to problems discovered within ICMP\n                      such\
    \ as a lack of buffers.  This value should not\n                      include\
    \ errors discovered outside the ICMP layer\n                      such as the\
    \ inability of IP to route the resultant\n                      datagram.  In\
    \ some implementations there may be no\n                      types of error which\
    \ contribute to this counter's\n                      value.\"\n             \
    \ ::= { icmp 15 }\n          icmpOutDestUnreachs OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of ICMP Destination\
    \ Unreachable\n                      messages sent.\"\n              ::= { icmp\
    \ 16 }\n          icmpOutTimeExcds OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of ICMP Time Exceeded messages\
    \ sent.\"\n              ::= { icmp 17 }\n          icmpOutParmProbs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of ICMP Parameter Problem messages\n                      sent.\"\n        \
    \      ::= { icmp 18 }\n          icmpOutSrcQuenchs OBJECT-TYPE\n            \
    \  SYNTAX  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of ICMP Source\
    \ Quench messages sent.\"\n              ::= { icmp 19 }\n          icmpOutRedirects\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of ICMP Redirect messages sent.  For a\n                 \
    \     host, this object will always be zero, since hosts\n                   \
    \   do not send redirects.\"\n              ::= { icmp 20 }\n          icmpOutEchos\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of ICMP Echo (request) messages sent.\"\n              ::=\
    \ { icmp 21 }\n          icmpOutEchoReps OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of ICMP Echo Reply messages\
    \ sent.\"\n              ::= { icmp 22 }\n          icmpOutTimestamps OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of ICMP Timestamp (request) messages\n                      sent.\"\n      \
    \        ::= { icmp 23 }\n          icmpOutTimestampReps OBJECT-TYPE\n       \
    \       SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The number of\
    \ ICMP Timestamp Reply messages\n                      sent.\"\n             \
    \ ::= { icmp 24 }\n          icmpOutAddrMasks OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of ICMP Address\
    \ Mask Request messages\n                      sent.\"\n              ::= { icmp\
    \ 25 }\n          icmpOutAddrMaskReps OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of ICMP Address Mask Reply\
    \ messages\n                      sent.\"\n              ::= { icmp 26 }\n   \
    \       -- the TCP group\n          -- Implementation of the TCP group is mandatory\
    \ for all\n          -- systems that implement the TCP.\n          -- Note that\
    \ instances of object types that represent\n          -- information about a particular\
    \ TCP connection are\n          -- transient; they persist only as long as the\
    \ connection\n          -- in question.\n          tcpRtoAlgorithm OBJECT-TYPE\n\
    \              SYNTAX  INTEGER {\n                          other(1),    -- none\
    \ of the following\n                          constant(2), -- a constant rto\n\
    \                          rsre(3),     -- MIL-STD-1778, Appendix B\n        \
    \                  vanj(4)      -- Van Jacobson's algorithm [10]\n           \
    \           }\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The algorithm used to determine\
    \ the timeout value\n                      used for retransmitting unacknowledged\
    \ octets.\"\n              ::= { tcp 1 }\n          tcpRtoMin OBJECT-TYPE\n  \
    \            SYNTAX  INTEGER\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The minimum value\
    \ permitted by a TCP\n                      implementation for the retransmission\
    \ timeout,\n                      measured in milliseconds.  More refined semantics\n\
    \                      for objects of this type depend upon the algorithm\n  \
    \                    used to determine the retransmission timeout.  In\n     \
    \                 particular, when the timeout algorithm is rsre(3),\n       \
    \               an object of this type has the semantics of the\n            \
    \          LBOUND quantity described in RFC 793.\"\n              ::= { tcp 2\
    \ }\n          tcpRtoMax OBJECT-TYPE\n              SYNTAX  INTEGER\n        \
    \      ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The maximum value permitted by a TCP\n              \
    \        implementation for the retransmission timeout,\n                    \
    \  measured in milliseconds.  More refined semantics\n                      for\
    \ objects of this type depend upon the algorithm\n                      used to\
    \ determine the retransmission timeout.  In\n                      particular,\
    \ when the timeout algorithm is rsre(3),\n                      an object of this\
    \ type has the semantics of the\n                      UBOUND quantity described\
    \ in RFC 793.\"\n              ::= { tcp 3 }\n          tcpMaxConn OBJECT-TYPE\n\
    \              SYNTAX  INTEGER\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The limit\
    \ on the total number of TCP connections\n                      the entity can\
    \ support.  In entities where the\n                      maximum number of connections\
    \ is dynamic, this\n                      object should contain the value -1.\"\
    \n              ::= { tcp 4 }\n          tcpActiveOpens OBJECT-TYPE\n        \
    \      SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The number of\
    \ times TCP connections have made a\n                      direct transition to\
    \ the SYN-SENT state from the\n                      CLOSED state.\"\n       \
    \       ::= { tcp 5 }\n          tcpPassiveOpens OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of times TCP connections\
    \ have made a\n                      direct transition to the SYN-RCVD state from\
    \ the\n                      LISTEN state.\"\n              ::= { tcp 6 }\n  \
    \        tcpAttemptFails OBJECT-TYPE\n              SYNTAX  Counter\n        \
    \      ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The number of times TCP connections have made a\n   \
    \                   direct transition to the CLOSED state from either\n      \
    \                the SYN-SENT state or the SYN-RCVD state, plus the\n        \
    \              number of times TCP connections have made a direct\n          \
    \            transition to the LISTEN state from the SYN-RCVD\n              \
    \        state.\"\n              ::= { tcp 7 }\n          tcpEstabResets OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of times TCP connections have made a\n                      direct transition\
    \ to the CLOSED state from either\n                      the ESTABLISHED state\
    \ or the CLOSE-WAIT state.\"\n              ::= { tcp 8 }\n          tcpCurrEstab\
    \ OBJECT-TYPE\n              SYNTAX  Gauge\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of TCP connections for which the\n                      current\
    \ state is either ESTABLISHED or CLOSE-\n                      WAIT.\"\n     \
    \         ::= { tcp 9 }\n          tcpInSegs OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The total number of segments\
    \ received, including\n                      those received in error.  This count\
    \ includes\n                      segments received on currently established\n\
    \                      connections.\"\n              ::= { tcp 10 }\n        \
    \  tcpOutSegs OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The total number of segments sent, including\n         \
    \             those on current connections but excluding those\n             \
    \         containing only retransmitted octets.\"\n              ::= { tcp 11\
    \ }\n          tcpRetransSegs OBJECT-TYPE\n              SYNTAX  Counter\n   \
    \           ACCESS  read-only\n              STATUS  mandatory\n             \
    \ DESCRIPTION\n                      \"The total number of segments retransmitted\
    \ - that\n                      is, the number of TCP segments transmitted\n \
    \                     containing one or more previously transmitted\n        \
    \              octets.\"\n              ::= { tcp 12 }\n          -- the TCP Connection\
    \ table\n          -- The TCP connection table contains information about this\n\
    \          -- entity's existing TCP connections.\n          tcpConnTable OBJECT-TYPE\n\
    \              SYNTAX  SEQUENCE OF TcpConnEntry\n              ACCESS  not-accessible\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A table containing TCP connection-specific\n                      information.\"\
    \n              ::= { tcp 13 }\n          tcpConnEntry OBJECT-TYPE\n         \
    \     SYNTAX  TcpConnEntry\n              ACCESS  not-accessible\n           \
    \   STATUS  mandatory\n              DESCRIPTION\n                      \"Information\
    \ about a particular current TCP\n                      connection.  An object\
    \ of this type is transient,\n                      in that it ceases to exist\
    \ when (or soon after)\n                      the connection makes the transition\
    \ to the CLOSED\n                      state.\"\n              INDEX   { tcpConnLocalAddress,\n\
    \                        tcpConnLocalPort,\n                        tcpConnRemAddress,\n\
    \                        tcpConnRemPort }\n              ::= { tcpConnTable 1\
    \ }\n          TcpConnEntry ::=\n              SEQUENCE {\n                  tcpConnState\n\
    \                      INTEGER,\n                  tcpConnLocalAddress\n     \
    \                 IpAddress,\n                  tcpConnLocalPort\n           \
    \           INTEGER (0..65535),\n                  tcpConnRemAddress\n       \
    \               IpAddress,\n                  tcpConnRemPort\n               \
    \       INTEGER (0..65535)\n              }\n          tcpConnState OBJECT-TYPE\n\
    \              SYNTAX  INTEGER {\n                          closed(1),\n     \
    \                     listen(2),\n                          synSent(3),\n    \
    \                      synReceived(4),\n                          established(5),\n\
    \                          finWait1(6),\n                          finWait2(7),\n\
    \                          closeWait(8),\n                          lastAck(9),\n\
    \                          closing(10),\n                          timeWait(11),\n\
    \                          deleteTCB(12)\n                      }\n          \
    \    ACCESS  read-write\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The state of this TCP connection.\n                 \
    \     The only value which may be set by a management\n                      station\
    \ is deleteTCB(12).  Accordingly, it is\n                      appropriate for\
    \ an agent to return a `badValue'\n                      response if a management\
    \ station attempts to set\n                      this object to any other value.\n\
    \                      If a management station sets this object to the\n     \
    \                 value deleteTCB(12), then this has the effect of\n         \
    \             deleting the TCB (as defined in RFC 793) of the\n              \
    \        corresponding connection on the managed node,\n                     \
    \ resulting in immediate termination of the\n                      connection.\n\
    \                      As an implementation-specific option, a RST\n         \
    \             segment may be sent from the managed node to the\n             \
    \         other TCP endpoint (note however that RST segments\n               \
    \       are not sent reliably).\"\n              ::= { tcpConnEntry 1 }\n    \
    \      tcpConnLocalAddress OBJECT-TYPE\n              SYNTAX  IpAddress\n    \
    \          ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The local IP address for this TCP connection.  In\n \
    \                     the case of a connection in the listen state which\n   \
    \                   is willing to accept connections for any IP\n            \
    \          interface associated with the node, the value\n                   \
    \   0.0.0.0 is used.\"\n              ::= { tcpConnEntry 2 }\n          tcpConnLocalPort\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (0..65535)\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The local port number for this TCP connection.\"\n     \
    \         ::= { tcpConnEntry 3 }\n          tcpConnRemAddress OBJECT-TYPE\n  \
    \            SYNTAX  IpAddress\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The remote\
    \ IP address for this TCP connection.\"\n              ::= { tcpConnEntry 4 }\n\
    \          tcpConnRemPort OBJECT-TYPE\n              SYNTAX  INTEGER (0..65535)\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The remote port number for this TCP\
    \ connection.\"\n              ::= { tcpConnEntry 5 }\n          -- additional\
    \ TCP objects\n          tcpInErrs OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The total number of segments received\
    \ in error\n                      (e.g., bad TCP checksums).\"\n             \
    \ ::= { tcp 14 }\n          tcpOutRsts OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of TCP segments sent containing\
    \ the\n                      RST flag.\"\n              ::= { tcp 15 }\n     \
    \     -- the UDP group\n          -- Implementation of the UDP group is mandatory\
    \ for all\n          -- systems which implement the UDP.\n          udpInDatagrams\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The total number of UDP datagrams delivered to\n                    \
    \  UDP users.\"\n              ::= { udp 1 }\n          udpNoPorts OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The total\
    \ number of received UDP datagrams for\n                      which there was\
    \ no application at the destination\n                      port.\"\n         \
    \     ::= { udp 2 }\n          udpInErrors OBJECT-TYPE\n              SYNTAX \
    \ Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of received UDP\
    \ datagrams that could\n                      not be delivered for reasons other\
    \ than the lack\n                      of an application at the destination port.\"\
    \n              ::= { udp 3 }\n          udpOutDatagrams OBJECT-TYPE\n       \
    \       SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The total number\
    \ of UDP datagrams sent from this\n                      entity.\"\n         \
    \     ::= { udp 4 }\n          -- the UDP Listener table\n          -- The UDP\
    \ listener table contains information about this\n          -- entity's UDP end-points\
    \ on which a local application is\n          -- currently accepting datagrams.\n\
    \          udpTable OBJECT-TYPE\n              SYNTAX  SEQUENCE OF UdpEntry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"A table containing UDP listener\
    \ information.\"\n              ::= { udp 5 }\n          udpEntry OBJECT-TYPE\n\
    \              SYNTAX  UdpEntry\n              ACCESS  not-accessible\n      \
    \        STATUS  mandatory\n              DESCRIPTION\n                      \"\
    Information about a particular current UDP\n                      listener.\"\n\
    \              INDEX   { udpLocalAddress, udpLocalPort }\n              ::= {\
    \ udpTable 1 }\n          UdpEntry ::=\n              SEQUENCE {\n           \
    \       udpLocalAddress\n                      IpAddress,\n                  udpLocalPort\n\
    \                      INTEGER (0..65535)\n              }\n          udpLocalAddress\
    \ OBJECT-TYPE\n              SYNTAX  IpAddress\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The local IP address for this UDP listener.  In\n                   \
    \   the case of a UDP listener which is willing to\n                      accept\
    \ datagrams for any IP interface associated\n                      with the node,\
    \ the value 0.0.0.0 is used.\"\n              ::= { udpEntry 1 }\n          udpLocalPort\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (0..65535)\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The local port number for this UDP listener.\"\n       \
    \       ::= { udpEntry 2 }\n          -- the EGP group\n          -- Implementation\
    \ of the EGP group is mandatory for all\n          -- systems which implement\
    \ the EGP.\n          egpInMsgs OBJECT-TYPE\n              SYNTAX  Counter\n \
    \             ACCESS  read-only\n              STATUS  mandatory\n           \
    \   DESCRIPTION\n                      \"The number of EGP messages received without\n\
    \                      error.\"\n              ::= { egp 1 }\n          egpInErrors\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of EGP messages received that proved\n                   \
    \   to be in error.\"\n              ::= { egp 2 }\n          egpOutMsgs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The total\
    \ number of locally generated EGP\n                      messages.\"\n       \
    \       ::= { egp 3 }\n          egpOutErrors OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of locally generated\
    \ EGP messages not\n                      sent due to resource limitations within\
    \ an EGP\n                      entity.\"\n              ::= { egp 4 }\n     \
    \     -- the EGP Neighbor table\n          -- The EGP neighbor table contains\
    \ information about this\n          -- entity's EGP neighbors.\n          egpNeighTable\
    \ OBJECT-TYPE\n              SYNTAX  SEQUENCE OF EgpNeighEntry\n             \
    \ ACCESS  not-accessible\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The EGP neighbor table.\"\n              ::= { egp 5\
    \ }\n          egpNeighEntry OBJECT-TYPE\n              SYNTAX  EgpNeighEntry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"Information about this entity's\
    \ relationship with\n                      a particular EGP neighbor.\"\n    \
    \          INDEX   { egpNeighAddr }\n              ::= { egpNeighTable 1 }\n \
    \         EgpNeighEntry ::=\n              SEQUENCE {\n                  egpNeighState\n\
    \                      INTEGER,\n                  egpNeighAddr\n            \
    \          IpAddress,\n                  egpNeighAs\n                      INTEGER,\n\
    \                  egpNeighInMsgs\n                      Counter,\n          \
    \        egpNeighInErrs\n                      Counter,\n                  egpNeighOutMsgs\n\
    \                      Counter,\n                  egpNeighOutErrs\n         \
    \             Counter,\n                  egpNeighInErrMsgs\n                \
    \      Counter,\n                  egpNeighOutErrMsgs\n                      Counter,\n\
    \                  egpNeighStateUps\n                      Counter,\n        \
    \          egpNeighStateDowns\n                      Counter,\n              \
    \    egpNeighIntervalHello\n                      INTEGER,\n                 \
    \ egpNeighIntervalPoll\n                      INTEGER,\n                  egpNeighMode\n\
    \                      INTEGER,\n                  egpNeighEventTrigger\n    \
    \                  INTEGER\n              }\n          egpNeighState OBJECT-TYPE\n\
    \              SYNTAX  INTEGER {\n                          idle(1),\n       \
    \                   acquisition(2),\n                          down(3),\n    \
    \                      up(4),\n                          cease(5)\n          \
    \            }\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The EGP state of the local\
    \ system with respect to\n                      this entry's EGP neighbor.  Each\
    \ EGP state is\n                      represented by a value that is one greater\
    \ than\n                      the numerical value associated with said state in\n\
    \                      RFC 904.\"\n              ::= { egpNeighEntry 1 }\n   \
    \       egpNeighAddr OBJECT-TYPE\n              SYNTAX  IpAddress\n          \
    \    ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The IP address of this entry's EGP neighbor.\"\n    \
    \          ::= { egpNeighEntry 2 }\n          egpNeighAs OBJECT-TYPE\n       \
    \       SYNTAX  INTEGER\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The autonomous\
    \ system of this EGP peer.  Zero\n                      should be specified if\
    \ the autonomous system\n                      number of the neighbor is not yet\
    \ known.\"\n              ::= { egpNeighEntry 3 }\n          egpNeighInMsgs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of EGP messages received without error\n                      from this EGP\
    \ peer.\"\n              ::= { egpNeighEntry 4 }\n          egpNeighInErrs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of EGP messages received from this EGP\n                      peer that proved\
    \ to be in error (e.g., bad EGP\n                      checksum).\"\n        \
    \      ::= { egpNeighEntry 5 }\n          egpNeighOutMsgs OBJECT-TYPE\n      \
    \        SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The number of\
    \ locally generated EGP messages to\n                      this EGP peer.\"\n\
    \              ::= { egpNeighEntry 6 }\n          egpNeighOutErrs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of locally generated EGP messages not\n                      sent to this EGP\
    \ peer due to resource limitations\n                      within an EGP entity.\"\
    \n              ::= { egpNeighEntry 7 }\n          egpNeighInErrMsgs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of EGP-defined error messages received\n                      from this EGP\
    \ peer.\"\n              ::= { egpNeighEntry 8 }\n          egpNeighOutErrMsgs\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of EGP-defined error messages sent to\n                  \
    \    this EGP peer.\"\n              ::= { egpNeighEntry 9 }\n          egpNeighStateUps\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of EGP state transitions to the UP\n                     \
    \ state with this EGP peer.\"\n              ::= { egpNeighEntry 10 }\n      \
    \    egpNeighStateDowns OBJECT-TYPE\n              SYNTAX  Counter\n         \
    \     ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The number of EGP state transitions from the UP\n   \
    \                   state to any other state with this EGP peer.\"\n         \
    \     ::= { egpNeighEntry 11 }\n          egpNeighIntervalHello OBJECT-TYPE\n\
    \              SYNTAX  INTEGER\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The interval\
    \ between EGP Hello command\n                      retransmissions (in hundredths\
    \ of a second).  This\n                      represents the t1 timer as defined\
    \ in RFC 904.\"\n              ::= { egpNeighEntry 12 }\n          egpNeighIntervalPoll\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The interval between EGP poll command\n                      retransmissions\
    \ (in hundredths of a second).  This\n                      represents the t3\
    \ timer as defined in RFC 904.\"\n              ::= { egpNeighEntry 13 }\n   \
    \       egpNeighMode OBJECT-TYPE\n              SYNTAX  INTEGER { active(1), passive(2)\
    \ }\n              ACCESS  read-only\n              STATUS  mandatory\n      \
    \        DESCRIPTION\n                      \"The polling mode of this EGP entity,\
    \ either\n                      passive or active.\"\n              ::= { egpNeighEntry\
    \ 14 }\n          egpNeighEventTrigger OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ { start(1), stop(2) }\n              ACCESS  read-write\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"A control variable\
    \ used to trigger operator-\n                      initiated Start and Stop events.\
    \  When read, this\n                      variable always returns the most recent\
    \ value that\n                      egpNeighEventTrigger was set to.  If it has\
    \ not\n                      been set since the last initialization of the\n \
    \                     network management subsystem on the node, it\n         \
    \             returns a value of `stop'.\n                      When set, this\
    \ variable causes a Start or Stop\n                      event on the specified\
    \ neighbor, as specified on\n                      pages 8-10 of RFC 904.  Briefly,\
    \ a Start event\n                      causes an Idle peer to begin neighbor acquisition\n\
    \                      and a non-Idle peer to reinitiate neighbor\n          \
    \            acquisition.  A stop event causes a non-Idle peer\n             \
    \         to return to the Idle state until a Start event\n                  \
    \    occurs, either via egpNeighEventTrigger or\n                      otherwise.\"\
    \n              ::= { egpNeighEntry 15 }\n          -- additional EGP objects\n\
    \          egpAs OBJECT-TYPE\n              SYNTAX  INTEGER\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The autonomous system number of this EGP entity.\"\n   \
    \           ::= { egp 6 }\n          -- the Transmission group\n          -- Based\
    \ on the transmission media underlying each interface\n          -- on a system,\
    \ the corresponding portion of the Transmission\n          -- group is mandatory\
    \ for that system.\n          -- When Internet-standard definitions for managing\n\
    \          -- transmission media are defined, the transmission group is\n    \
    \      -- used to provide a prefix for the names of those objects.\n         \
    \ -- Typically, such definitions reside in the experimental\n          -- portion\
    \ of the MIB until they are \"proven\", then as a\n          -- part of the Internet\
    \ standardization process, the\n          -- definitions are accordingly elevated\
    \ and a new object\n          -- identifier, under the transmission group is defined.\
    \ By\n          -- convention, the name assigned is:\n          --\n         \
    \ --     type OBJECT IDENTIFIER    ::= { transmission number }\n          --\n\
    \          -- where \"type\" is the symbolic value used for the media in\n   \
    \       -- the ifType column of the ifTable object, and \"number\" is\n      \
    \    -- the actual integer value corresponding to the symbol.\n          -- the\
    \ SNMP group\n          -- Implementation of the SNMP group is mandatory for all\n\
    \          -- systems which support an SNMP protocol entity.  Some of\n      \
    \    -- the objects defined below will be zero-valued in those\n          -- SNMP\
    \ implementations that are optimized to support only\n          -- those functions\
    \ specific to either a management agent or\n          -- a management station.\
    \  In particular, it should be\n          -- observed that the objects below refer\
    \ to an SNMP entity,\n          -- and there may be several SNMP entities residing\
    \ on a\n          -- managed node (e.g., if the node is hosting acting as\n  \
    \        -- a management station).\n          snmpInPkts OBJECT-TYPE\n       \
    \       SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The total number\
    \ of Messages delivered to the\n                      SNMP entity from the transport\
    \ service.\"\n              ::= { snmp 1 }\n          snmpOutPkts OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The total\
    \ number of SNMP Messages which were\n                      passed from the SNMP\
    \ protocol entity to the\n                      transport service.\"\n       \
    \       ::= { snmp 2 }\n          snmpInBadVersions OBJECT-TYPE\n            \
    \  SYNTAX  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The total number of SNMP Messages\
    \ which were\n                      delivered to the SNMP protocol entity and\
    \ were for\n                      an unsupported SNMP version.\"\n           \
    \   ::= { snmp 3 }\n          snmpInBadCommunityNames OBJECT-TYPE\n          \
    \    SYNTAX  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The total number of SNMP Messages\
    \ delivered to\n                      the SNMP protocol entity which used a SNMP\n\
    \                      community name not known to said entity.\"\n          \
    \    ::= { snmp 4 }\n          snmpInBadCommunityUses OBJECT-TYPE\n          \
    \    SYNTAX  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The total number of SNMP Messages\
    \ delivered to\n                      the SNMP protocol entity which represented\
    \ an SNMP\n                      operation which was not allowed by the SNMP\n\
    \                      community named in the Message.\"\n              ::= {\
    \ snmp 5 }\n          snmpInASNParseErrs OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The total number of ASN.1 or BER errors\n\
    \                      encountered by the SNMP protocol entity when\n        \
    \              decoding received SNMP Messages.\"\n              ::= { snmp 6\
    \ }\n          -- { snmp 7 } is not used\n          snmpInTooBigs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The total\
    \ number of SNMP PDUs which were\n                      delivered to the SNMP\
    \ protocol entity and for\n                      which the value of the error-status\
    \ field is\n                      `tooBig'.\"\n              ::= { snmp 8 }\n\
    \          snmpInNoSuchNames OBJECT-TYPE\n              SYNTAX  Counter\n    \
    \          ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The total number of SNMP PDUs which were\n          \
    \            delivered to the SNMP protocol entity and for\n                 \
    \     which the value of the error-status field is\n                      `noSuchName'.\"\
    \n              ::= { snmp 9 }\n          snmpInBadValues OBJECT-TYPE\n      \
    \        SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The total number\
    \ of SNMP PDUs which were\n                      delivered to the SNMP protocol\
    \ entity and for\n                      which the value of the error-status field\
    \ is\n                      `badValue'.\"\n              ::= { snmp 10 }\n   \
    \       snmpInReadOnlys OBJECT-TYPE\n              SYNTAX  Counter\n         \
    \     ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The total number valid SNMP PDUs which were\n       \
    \               delivered to the SNMP protocol entity and for\n              \
    \        which the value of the error-status field is\n                      `readOnly'.\
    \  It should be noted that it is a\n                      protocol error to generate\
    \ an SNMP PDU which\n                      contains the value `readOnly' in the\
    \ error-status\n                      field, as such this object is provided as\
    \ a means\n                      of detecting incorrect implementations of the\n\
    \                      SNMP.\"\n              ::= { snmp 11 }\n          snmpInGenErrs\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The total number of SNMP PDUs which were\n                      delivered\
    \ to the SNMP protocol entity and for\n                      which the value of\
    \ the error-status field is\n                      `genErr'.\"\n             \
    \ ::= { snmp 12 }\n          snmpInTotalReqVars OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The total number of MIB objects\
    \ which have been\n                      retrieved successfully by the SNMP protocol\
    \ entity\n                      as the result of receiving valid SNMP Get-Request\n\
    \                      and Get-Next PDUs.\"\n              ::= { snmp 13 }\n \
    \         snmpInTotalSetVars OBJECT-TYPE\n              SYNTAX  Counter\n    \
    \          ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The total number of MIB objects which have been\n   \
    \                   altered successfully by the SNMP protocol entity\n       \
    \               as the result of receiving valid SNMP Set-Request\n          \
    \            PDUs.\"\n              ::= { snmp 14 }\n          snmpInGetRequests\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The total number of SNMP Get-Request PDUs which\n                   \
    \   have been accepted and processed by the SNMP\n                      protocol\
    \ entity.\"\n              ::= { snmp 15 }\n          snmpInGetNexts OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The total\
    \ number of SNMP Get-Next PDUs which have\n                      been accepted\
    \ and processed by the SNMP protocol\n                      entity.\"\n      \
    \        ::= { snmp 16 }\n          snmpInSetRequests OBJECT-TYPE\n          \
    \    SYNTAX  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The total number of SNMP Set-Request\
    \ PDUs which\n                      have been accepted and processed by the SNMP\n\
    \                      protocol entity.\"\n              ::= { snmp 17 }\n   \
    \       snmpInGetResponses OBJECT-TYPE\n              SYNTAX  Counter\n      \
    \        ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The total number of SNMP Get-Response PDUs which\n  \
    \                    have been accepted and processed by the SNMP\n          \
    \            protocol entity.\"\n              ::= { snmp 18 }\n          snmpInTraps\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The total number of SNMP Trap PDUs which have\n                     \
    \ been accepted and processed by the SNMP protocol\n                      entity.\"\
    \n              ::= { snmp 19 }\n          snmpOutTooBigs OBJECT-TYPE\n      \
    \        SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The total number\
    \ of SNMP PDUs which were\n                      generated by the SNMP protocol\
    \ entity and for\n                      which the value of the error-status field\
    \ is\n                      `tooBig.'\"\n              ::= { snmp 20 }\n     \
    \     snmpOutNoSuchNames OBJECT-TYPE\n              SYNTAX  Counter\n        \
    \      ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The total number of SNMP PDUs which were\n          \
    \            generated by the SNMP protocol entity and for\n                 \
    \     which the value of the error-status is\n                      `noSuchName'.\"\
    \n              ::= { snmp 21 }\n          snmpOutBadValues OBJECT-TYPE\n    \
    \          SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The total number\
    \ of SNMP PDUs which were\n                      generated by the SNMP protocol\
    \ entity and for\n                      which the value of the error-status field\
    \ is\n                      `badValue'.\"\n              ::= { snmp 22 }\n   \
    \       -- { snmp 23 } is not used\n          snmpOutGenErrs OBJECT-TYPE\n   \
    \           SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The total number\
    \ of SNMP PDUs which were\n                      generated by the SNMP protocol\
    \ entity and for\n                      which the value of the error-status field\
    \ is\n                      `genErr'.\"\n              ::= { snmp 24 }\n     \
    \     snmpOutGetRequests OBJECT-TYPE\n              SYNTAX  Counter\n        \
    \      ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The total number of SNMP Get-Request PDUs which\n   \
    \                   have been generated by the SNMP protocol entity.\"\n     \
    \         ::= { snmp 25 }\n          snmpOutGetNexts OBJECT-TYPE\n           \
    \   SYNTAX  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The total number of SNMP Get-Next\
    \ PDUs which have\n                      been generated by the SNMP protocol entity.\"\
    \n              ::= { snmp 26 }\n          snmpOutSetRequests OBJECT-TYPE\n  \
    \            SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The total number\
    \ of SNMP Set-Request PDUs which\n                      have been generated by\
    \ the SNMP protocol entity.\"\n              ::= { snmp 27 }\n          snmpOutGetResponses\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The total number of SNMP Get-Response PDUs which\n                  \
    \    have been generated by the SNMP protocol entity.\"\n              ::= { snmp\
    \ 28 }\n          snmpOutTraps OBJECT-TYPE\n              SYNTAX  Counter\n  \
    \            ACCESS  read-only\n              STATUS  mandatory\n            \
    \  DESCRIPTION\n                      \"The total number of SNMP Trap PDUs which\
    \ have\n                      been generated by the SNMP protocol entity.\"\n\
    \              ::= { snmp 29 }\n          snmpEnableAuthenTraps OBJECT-TYPE\n\
    \              SYNTAX  INTEGER { enabled(1), disabled(2) }\n              ACCESS\
    \  read-write\n              STATUS  mandatory\n              DESCRIPTION\n  \
    \                    \"Indicates whether the SNMP agent process is\n         \
    \             permitted to generate authentication-failure\n                 \
    \     traps.  The value of this object overrides any\n                      configuration\
    \ information; as such, it provides a\n                      means whereby all\
    \ authentication-failure traps may\n                      be disabled.\n     \
    \                 Note that it is strongly recommended that this\n           \
    \           object be stored in non-volatile memory so that it\n             \
    \         remains constant between re-initializations of the\n               \
    \       network management system.\"\n              ::= { snmp 30 }\n        \
    \  END\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   This document was produced by the SNMP Working Group:\n\
    \               Anne Ambler, Spider\n               Karl Auerbach, Sun\n     \
    \          Fred Baker, ACC\n               David Bridgham, Epilogue Technology\n\
    \               Ken Brinkerhoff\n               Ron Broersma, NOSC\n         \
    \      Brian Brown, Synoptics\n               Jack Brown, US Army\n          \
    \     Theodore Brunner, Bellcore\n               Jeff Buffum, HP\n           \
    \    Jeffrey Buffum, HP\n               John Burress, Wellfleet\n            \
    \   Jeffrey D. Case, University of Tennessee at Knoxville\n               Chris\
    \ Chiptasso, Spartacus\n               Paul Ciarfella, DEC\n               Bob\
    \ Collet\n               John Cook, Chipcom\n               Tracy Cox, Bellcore\n\
    \               James R. Davin, MIT-LCS\n               Eric Decker, cisco\n \
    \              Kurt Dobbins, Cabletron\n               Nadya El-Afandi, Network\
    \ Systems\n               Gary Ellis, HP\n               Fred Engle\n        \
    \       Mike Erlinger\n               Mark S. Fedor, PSI\n               Richard\
    \ Fox, Synoptics\n               Karen Frisa, CMU\n               Stan Froyd,\
    \ ACC\n               Chris Gunner, DEC\n               Fred Harris, University\
    \ of Tennessee at Knoxville\n               Ken Hibbard, Xylogics\n          \
    \     Ole Jacobsen, Interop\n               Ken Jones\n               Satish Joshi,\
    \ Synoptics\n               Frank Kastenholz, Racal-Interlan\n               Shimshon\
    \ Kaufman, Spartacus\n               Ken Key, University of Tennessee at Knoxville\n\
    \               Jim Kinder, Fibercom\n               Alex Koifman, BBN\n     \
    \          Christopher Kolb, PSI\n               Cheryl Krupczak, NCR\n      \
    \         Paul Langille, DEC\n               Martin Lee Schoffstall, PSI\n   \
    \            Peter Lin, Vitalink\n               John Lunny, TWG\n           \
    \    Carl Malamud\n               Gary Malkin, FTP Software, Inc.\n          \
    \     Randy Mayhew, University of Tennessee at Knoxville\n               Keith\
    \ McCloghrie, Hughes LAN Systems\n               Donna McMaster, David Systems\n\
    \               Lynn Monsanto, Sun\n               Dave Perkins, 3COM\n      \
    \         Jim Reinstedler, Ungerman Bass\n               Anil Rijsinghani, DEC\n\
    \               Kathy Rinehart, Arnold AFB\n               Kary Robertson\n  \
    \             Marshall T. Rose, PSI (chair)\n               L. Michael Sabo, NCSC\n\
    \               Jon Saperia, DEC\n               Greg Satz, cisco\n          \
    \     Martin Schoffstall, PSI\n               John Seligson\n               Steve\
    \ Sherry, Xyplex\n               Fei Shu, NEC\n               Sam Sjogren, TGV\n\
    \               Mark Sleeper, Sparta\n               Lance Sprung\n          \
    \     Mike St.Johns\n               Bob Stewart, Xyplex\n               Emil Sturniold\n\
    \               Kaj Tesink, Bellcore\n               Geoff Thompson, Synoptics\n\
    \               Dean Throop, Data General\n               Bill Townsend, Xylogics\n\
    \               Maurice Turcotte, Racal-Milgo\n               Kannan Varadhou\n\
    \               Sudhanshu Verma, HP\n               Bill Versteeg, Network Research\
    \ Corporation\n               Warren Vik, Interactive Systems\n              \
    \ David Waitzman, BBN\n               Steve Waldbusser, CMU\n               Dan\
    \ Wintringhan\n               David Wood\n               Wengyik Yeong, PSI\n\
    \               Jeff Young, Cray Research\n   In addition, the comments of the\
    \ following individuals are also\n   acknolwedged:\n               Craig A. Finseth,\
    \ Minnesota Supercomputer Center, Inc.\n               Jeffrey C. Honig, Cornell\
    \ University Theory Center\n               Philip R. Karn, Bellcore\n"
- title: 8.  References
  contents:
  - "8.  References\n   [1] Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n       Network Management Standards\", RFC 1052, NRI, April 1988.\n\
    \   [2] Rose M., and K. McCloghrie, \"Structure and Identification of\n      \
    \ Management Information for TCP/IP-based internets,\" RFC 1065,\n       TWG,\
    \ August 1988.\n   [3] McCloghrie, K., and M. Rose, \"Management Information Base\
    \ for\n       Network Management of TCP/IP-based internets, RFC 1066, TWG,\n \
    \      August 1988.\n   [4] Cerf, V., \"Report of the Second Ad Hoc Network Management\
    \ Review\n       Group\", RFC 1109, NRI, August 1989.\n   [5] Case, J., Fedor,\
    \ M., Schoffstall, M., and J. Davin, \"Simple\n       Network Management Protocol\
    \ (SNMP)\", RFC 1098, University of\n       Tennessee at Knoxville, NYSERNet,\
    \ Inc., Rensselaer Polytechnic\n       Institute, MIT Laboratory for Computer\
    \ Science, April 1989.\n   [6] Postel, J., and J. Reynolds, \"TELNET Protocol\
    \ Specification\", RFC\n       854, USC/Information Sciences Institute, May 1983.\n\
    \   [7] Satz, G., \"Connectionless Network Protocol (ISO 8473) and End\n     \
    \  System to Intermediate System (ISO 9542) Management Information\n       Base\"\
    , RFC 1162, cisco Systems, Inc., June 1990.\n   [8] Information processing systems\
    \ - Open Systems Interconnection -\n       Specification of Abstract Syntax Notation\
    \ One (ASN.1),\n       International Organization for Standardization, International\n\
    \       Standard 8824, December 1987.\n   [9] Information processing systems -\
    \ Open Systems Interconnection -\n       Specification of Basic Encoding Rules\
    \ for Abstract Notation One\n       (ASN.1), International Organization for Standardization,\n\
    \       International Standard 8825, December 1987.\n  [10] Jacobson, V., \"Congestion\
    \ Avoidance and Control\", SIGCOMM 1988,\n       Stanford, California.\n  [11]\
    \ Hagens, R., Hall, N., and M. Rose, \"Use of the Internet as a\n       Subnetwork\
    \ for Experimentation with the OSI Network Layer\", RFC\n       1070, U of Wiscsonsin\
    \ - Madison, U of Wiscsonsin - Madison, The\n       Wollongong Group, February\
    \ 1989.\n  [12] Rose M., and K. McCloghrie, \"Structure and Identification of\n\
    \       Management Information for TCP/IP-based internets\", RFC 1155,\n     \
    \  Performance Systems International, Hughes LAN Systems, May 1990.\n  [13] Case,\
    \ J., Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n       Network Management\
    \ Protocol\", RFC 1157, SNMP Research,\n       Performance Systems International,\
    \ Performance Systems\n       International, MIT Laboratory for Computer Science,\
    \ May 1990.\n  [14] Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\"\
    ,\n       RFC 1212, Performance Systems International, Hughes LAN Systems,\n \
    \      March 1991.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 10.  Authors' Addresses
  contents:
  - "10.  Authors' Addresses\n   Keith McCloghrie\n   Hughes LAN Systems\n   1225\
    \ Charleston Road\n   Mountain View, CA 94043\n   1225 Charleston Road\n   Mountain\
    \ View, CA 94043\n   Phone: (415) 966-7934\n   EMail: kzm@hls.com\n   Marshall\
    \ T. Rose\n   Performance Systems International\n   5201 Great America Parkway\n\
    \   Suite 3106\n   Santa Clara, CA  95054\n   Phone: +1 408 562 6222\n   EMail:\
    \ mrose@psi.com\n   X.500:  rose, psi, us\n"
