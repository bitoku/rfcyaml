- title: __initial_text__
  contents:
  - '                        Updates to LDP for IPv6

    '
- title: Abstract
  contents:
  - "Abstract\n   The Label Distribution Protocol (LDP) specification defines\n  \
    \ procedures to exchange label bindings over either IPv4 or IPv6\n   networks,\
    \ or both.  This document corrects and clarifies the LDP\n   behavior when an\
    \ IPv6 network is used (with or without IPv4).  This\n   document updates RFCs\
    \ 5036 and 6720.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7552.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Topology Scenarios for Dual-Stack Environment ..............5\n  \
    \    1.2. Single-Hop vs. Multi-Hop LDP Peering .......................6\n   2.\
    \ Specification Language ..........................................6\n   3. LSP\
    \ Mapping .....................................................7\n   4. LDP Identifiers\
    \ .................................................8\n   5. Neighbor Discovery\
    \ ..............................................8\n      5.1. Basic Discovery\
    \ Mechanism ..................................8\n           5.1.1. Maintaining\
    \ Hello Adjacencies .......................9\n      5.2. Extended Discovery Mechanism\
    \ ..............................10\n   6. LDP Session Establishment and Maintenance\
    \ ......................10\n      6.1. Transport Connection Establishment ........................10\n\
    \           6.1.1. Dual-Stack: Transport Connection Preference\n             \
    \     and Role of an LSR .................................12\n      6.2. LDP Session\
    \ Maintenance ...................................14\n   7. Binding Distribution\
    \ ...........................................15\n      7.1. Address Distribution\
    \ ......................................15\n      7.2. Label Distribution ........................................16\n\
    \   8. LDP Identifiers and Duplicate Next-Hop Addresses ...............17\n  \
    \ 9. LDP TTL Security ...............................................18\n   10.\
    \ IANA Considerations ...........................................18\n   11. Security\
    \ Considerations .......................................19\n   12. References\
    \ ....................................................19\n      12.1. Normative\
    \ References .....................................19\n      12.2. Informative\
    \ References ...................................20\n   Appendix A. Additional\
    \ Considerations .............................21\n     A.1. LDPv6 and LDPv4 Interoperability\
    \ Safety Net ................21\n     A.2. Accommodating Implementations Not Compliant\
    \ with RFC 5036 ..21\n     A.3. Why prohibit IPv4-mapped IPv6 addresses in LDP?\
    \ ............22\n     A.4. Why a 32-bit value even for the IPv6 LDP Router Id?\
    \ ........22\n   Acknowledgments ...................................................23\n\
    \   Contributors ......................................................23\n  \
    \ Authors' Addresses.................................................24\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The LDP specification [RFC5036] defines procedures and messages\
    \ for\n   exchanging FEC-label bindings over either IPv4 or IPv6 networks, or\n\
    \   both (i.e., Dual-stack networks).\n   However, RFC 5036 has the following\
    \ deficiencies (i.e., lacks\n   details) in regard to IPv6 usage (with or without\
    \ IPv4):\n   1. Label Switched Path (LSP) Mapping: No rule for mapping a\n   \
    \   particular packet to a particular LSP that has an Address Prefix\n      Forwarding\
    \ Equivalence Class (FEC) element containing the IPv6\n      address of the egress\
    \ router\n   2. LDP Identifier: No details specific to IPv6 usage\n   3. LDP Discovery:\
    \ No details for using a particular IPv6 destination\n      (multicast) address\
    \ or the source address\n   4. LDP Session Establishment: No rule for handling\
    \ both IPv4 and IPv6\n      Transport Address optional objects in a Hello message,\
    \ and\n      subsequently two IPv4 and IPv6 transport connections\n   5. LDP Address\
    \ Distribution: No rule for advertising IPv4 and/or IPv6\n      address bindings\
    \ over an LDP session\n   6. LDP Label Distribution: No rule for advertising IPv4\
    \ and/or IPv6\n      FEC-label bindings over an LDP session, or for handling the\n\
    \      coexistence of IPv4 and IPv6 FEC Elements in the same FEC TLV\n   7. Next-Hop\
    \ Address Resolution: No rule for accommodating the usage\n      of duplicate\
    \ link-local IPv6 addresses\n   8. LDP Time to Live (TTL) Security: No rule for\
    \ a built-in\n      Generalized TTL Security Mechanism (GTSM) in LDP with IPv6\
    \ (this\n      is a deficiency in [RFC6720])\n   This document addresses the above\
    \ deficiencies by specifying the\n   desired behavior/rules/details for using\
    \ LDP in IPv6-enabled networks\n   (IPv6-only or Dual-stack networks).  This document\
    \ closes the IPv6\n   MPLS gap discussed in Sections 3.2.1, 3.2.2, and 3.3.1.1\
    \ of\n   [RFC7439].\n   Note that this document updates [RFC5036] and [RFC6720].\n"
- title: 1.1.  Topology Scenarios for Dual-Stack Environment
  contents:
  - "1.1.  Topology Scenarios for Dual-Stack Environment\n   Two Label Switching Routers\
    \ (LSRs) may involve Basic and/or Extended\n   LDP Discovery in IPv6 and/or IPv4\
    \ address families in various\n   topology scenarios.\n   This document addresses\
    \ the following three topology scenarios in\n   which the LSRs may be connected\
    \ via one or more Dual-stack\n   LDP-enabled interfaces (Figure 1), or one or\
    \ more Single-stack\n   LDP-enabled interfaces (Figures 2 and 3):\n          \
    \                R1------------------R2\n                                 IPv4+IPv6\n\
    \            Figure 1: LSRs Connected via a Dual-Stack Interface\n           \
    \                        IPv4\n                           R1=================R2\n\
    \                                   IPv6\n         Figure 2: LSRs Connected via\
    \ Two Single-Stack Interfaces\n                  R1------------------R2---------------R3\n\
    \                         IPv4                 IPv6\n           Figure 3: LSRs\
    \ Connected via a Single-Stack Interface\n   Note that the topology scenario illustrated\
    \ in Figure 1 also covers\n   the case of a Single-stack LDP-enabled interface\
    \ (say, IPv4) being\n   converted to a Dual-stack LDP-enabled interface (by enabling\
    \ IPv6\n   routing as well as IPv6 LDP), even though the LDP-over-IPv4\n   (LDPoIPv4)\
    \ session may already be established between the LSRs.\n   Note that the topology\
    \ scenario illustrated in Figure 2 also\n   covers the case of two routers getting\
    \ connected via an additional\n   Single-stack LDP-enabled interface (IPv6 routing\
    \ and IPv6 LDP), even\n   though the LDPoIPv4 session may already be established\
    \ between the\n   LSRs over the existing interface(s).\n   This document also\
    \ addresses the scenario in which the LSRs do the\n   Extended Discovery in IPv6\
    \ and/or IPv4 address families:\n                                   IPv4\n   \
    \                       R1-------------------R2\n                            \
    \       IPv6\n          Figure 4: LSRs Involving IPv4 and IPv6 Address Families\n"
- title: 1.2.  Single-Hop vs. Multi-Hop LDP Peering
  contents:
  - "1.2.  Single-Hop vs. Multi-Hop LDP Peering\n   The LDP TTL Security mechanism\
    \ specified by this document applies\n   only to single-hop LDP peering sessions,\
    \ not to multi-hop LDP peering\n   sessions, in line with Section 5.5 of [RFC5082].\
    \  [RFC5082] describes\n   the Generalized TTL Security Mechanism (GTSM).\n  \
    \ As a consequence, any LDP feature that relies on a multi-hop LDP\n   peering\
    \ session would not work with GTSM and will warrant (statically\n   or dynamically)\
    \ disabling GTSM.  Please see Section 9.\n"
- title: 2.  Specification Language
  contents:
  - "2.  Specification Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   Abbreviations:\n      LDP                Label Distribution\
    \ Protocol\n      LDPoIPv4           LDP-over-IPv4 transport connection\n    \
    \  LDPoIPv6           LDP-over-IPv6 transport connection\n      FEC          \
    \      Forwarding Equivalence Class\n      TLV                Type Length Value\n\
    \      LSR                Label Switching Router\n      LSP                Label\
    \ Switched Path\n      LSPv4              IPv4-signaled Label Switched Path\n\
    \      LSPv6              IPv6-signaled Label Switched Path\n      AFI       \
    \         Address Family Identifier\n      LDP Id             LDP Identifier\n\
    \      Single-stack LDP   LDP supporting just one address family\n           \
    \              (for discovery, session setup, address/label\n                \
    \         binding exchange, etc.)\n      Dual-stack LDP     LDP supporting two\
    \ address families\n                         (for discovery, session setup, address/label\n\
    \                         binding exchange, etc.)\n      Dual-stack LSR     LSR\
    \ supporting Dual-stack LDP for a peer\n      Single-stack LSR   LSR supporting\
    \ Single-stack LDP for a peer\n   Note that an LSR can be a Dual-stack and Single-stack\
    \ LSR at the same\n   time for different peers.  This document loosely uses the\
    \ term\n   \"address family\" to mean \"IP address family\".\n"
- title: 3.  LSP Mapping
  contents:
  - "3.  LSP Mapping\n   Section 2.1 of [RFC5036] specifies the procedure for mapping\
    \ a\n   particular packet to a particular LSP using three rules.  Quoting the\n\
    \   third rule from [RFC5036]:\n      If it is known that a packet must traverse\
    \ a particular egress\n      router, and there is an LSP that has an Address Prefix\
    \ FEC element\n      that is a /32 address of that router, then the packet is\
    \ mapped to\n      that LSP.\n   This rule is correct for IPv4 (to set up LSPv4),\
    \ but not for IPv6\n   (to set up LSPv6), since an IPv6 router may even have a\
    \ /64 or /96\n   or /128 (or whatever prefix length) address.  Hence, that rule\
    \ is\n   updated here to use IPv4 or IPv6 addresses instead of /32 or /128\n \
    \  addresses, as shown below:\n      If it is known that a packet must traverse\
    \ a particular egress\n      router, and there is an LSP that has an Address Prefix\
    \ FEC element\n      that is an IPv4 or IPv6 address of that router, then the\
    \ packet is\n      mapped to that LSP.\n"
- title: 4.  LDP Identifiers
  contents:
  - "4.  LDP Identifiers\n   In line with Section 2.2.2 of [RFC5036], this document\
    \ specifies the\n   usage of a 32-bit (unsigned non-zero integer) LSR Id on an\n\
    \   IPv6-enabled LSR (with or without Dual-stacking).\n   This document also qualifies\
    \ the first sentence of the last paragraph\n   of Section 2.5.2 of [RFC5036] to\
    \ be per address family.\n   From Section 2.5.2 of [RFC5036]:\n      An LSR MUST\
    \ advertise the same transport address in all Hellos\n      that advertise the\
    \ same label space.\n   Updated by this document, as follows:\n      For a given\
    \ address family, an LSR MUST advertise the same\n      transport address in all\
    \ Hellos that advertise the same label\n      space.\n   This rightly enables\
    \ the per-platform label space to be shared\n   between IPv4 and IPv6.\n   In\
    \ summary, this document mandates the usage of a common LDP\n   Identifier (the\
    \ same LSR Id and label space id) for both IPv4 and\n   IPv6 address families.\n"
- title: 5.  Neighbor Discovery
  contents:
  - "5.  Neighbor Discovery\n   If Dual-stack LDP is enabled (i.e., LDP enabled in\
    \ both IPv6 and IPv4\n   address families) on an interface or for a targeted neighbor,\
    \ then\n   the LSR MUST transmit both IPv6 and IPv4 LDP (Link or targeted)\n \
    \  Hellos and include the same LDP Identifier (assuming per-platform\n   label\
    \ space usage) in them.\n   If Single-stack LDP is enabled (i.e., LDP enabled\
    \ in either an IPv6\n   or IPv4 address family), then the LSR MUST transmit either\
    \ IPv6 or\n   IPv4 LDP (Link or targeted) Hellos, respectively.\n"
- title: 5.1.  Basic Discovery Mechanism
  contents:
  - "5.1.  Basic Discovery Mechanism\n   Section 2.4.1 of [RFC5036] defines the Basic\
    \ Discovery mechanism for\n   directly connected LSRs.  Following this mechanism,\
    \ LSRs periodically\n   send LDP Link Hellos destined to the \"all routers on\
    \ this subnet\"\n   group multicast IP address.\n   Interestingly enough, per\
    \ the IPv6 addressing architecture [RFC4291],\n   IPv6 has three \"all routers\
    \ on this subnet\" multicast addresses:\n      ff01:0:0:0:0:0:0:2   = Interface-local\
    \ scope\n      ff02:0:0:0:0:0:0:2   = Link-local scope\n      ff05:0:0:0:0:0:0:2\
    \   = Site-local scope\n   [RFC5036] does not specify which particular IPv6 \"\
    all routers on this\n   subnet\" group multicast IP address should be used by\
    \ LDP Link Hellos.\n   This document specifies the usage of link-local scope (i.e.,\n\
    \   ff02:0:0:0:0:0:0:2) as the destination multicast IP address in IPv6\n   LDP\
    \ Link Hellos.  An LDP Link Hello packet received on any of the\n   other destination\
    \ addresses MUST be dropped.  Additionally, the\n   link-local IPv6 address MUST\
    \ be used as the source IP address in IPv6\n   LDP Link Hellos.\n   Also, the\
    \ LDP Link Hello packets MUST have their IPv6 Hop Limit set\n   to 255, be checked\
    \ for the same upon receipt (before any LDP-specific\n   processing), and be handled\
    \ as specified in Section 3 of [RFC5082].\n   The built-in inclusion of GTSM automatically\
    \ protects IPv6 LDP from\n   off-link attacks.\n   More importantly, if an interface\
    \ is a Dual-stack LDP interface\n   (i.e., LDP enabled in both IPv6 and IPv4 address\
    \ families), then the\n   LSR MUST periodically transmit both IPv6 and IPv4 LDP\
    \ Link Hellos\n   (using the same LDP Identifier per Section 4) on that interface\
    \ and\n   be able to receive them.  This facilitates discovery of IPv6-only,\n\
    \   IPv4-only, and Dual-stack peers on the interface's subnet and ensures\n  \
    \ successful subsequent peering using the appropriate (address family)\n   transport\
    \ on a multi-access or broadcast interface.\n"
- title: 5.1.1.  Maintaining Hello Adjacencies
  contents:
  - "5.1.1.  Maintaining Hello Adjacencies\n   In the case of a Dual-stack LDP-enabled\
    \ interface, the LSR SHOULD\n   maintain Link Hello adjacencies for both IPv4\
    \ and IPv6 address\n   families.  This document, however, allows an LSR to maintain\n\
    \   Receive-side Link Hello adjacencies only for the address family that\n   has\
    \ been used for the establishment of the LDP session (whether an\n   LDPoIPv4\
    \ or LDPoIPv6 session).\n"
- title: 5.2.  Extended Discovery Mechanism
  contents:
  - "5.2.  Extended Discovery Mechanism\n   The Extended Discovery mechanism (defined\
    \ in Section 2.4.2 of\n   [RFC5036]), in which the targeted LDP Hellos are sent\
    \ to a unicast\n   IPv6 address destination, requires only one IPv6-specific\n\
    \   consideration: the link-local IPv6 addresses MUST NOT be used as the\n   targeted\
    \ LDP Hello packet's source or destination addresses.\n"
- title: 6.  LDP Session Establishment and Maintenance
  contents:
  - "6.  LDP Session Establishment and Maintenance\n   Section 2.5.1 of [RFC5036]\
    \ defines a two-step process for LDP session\n   establishment, once the neighbor\
    \ discovery has completed (i.e., LDP\n   Hellos have been exchanged):\n   1. Transport\
    \ connection establishment\n   2. Session initialization\n   Section 6.1 discusses\
    \ the LDP considerations for IPv6 and/or\n   Dual-stacking in the context of session\
    \ establishment, whereas\n   Section 6.2 discusses the LDP considerations for\
    \ IPv6 and/or\n   Dual-stacking in the context of session maintenance.\n"
- title: 6.1.  Transport Connection Establishment
  contents:
  - "6.1.  Transport Connection Establishment\n   Section 2.5.2 of [RFC5036] specifies\
    \ the use of a Transport Address\n   optional object (TLV) in LDP Hello messages\
    \ to convey the transport\n   (IP) address; however, it does not specify the behavior\
    \ of LDP if\n   both IPv4 and IPv6 Transport Address objects (TLVs) are sent in\
    \ a\n   Hello message or separate Hello messages.  More importantly, it does\n\
    \   not specify whether both IPv4 and IPv6 transport connections should\n   be\
    \ allowed if both IPv4 and IPv6 Hello adjacencies were present prior\n   to session\
    \ establishment.\n   This document specifies the following:\n   1. An LSR MUST\
    \ NOT send a Hello message containing both IPv4 and IPv6\n      Transport Address\
    \ optional objects.  In other words, there MUST be\n      at most one Transport\
    \ Address optional object in a Hello message.\n      An LSR MUST include only\
    \ the transport address whose address\n      family is the same as that of the\
    \ IP packet carrying the Hello\n      message.\n   2. An LSR SHOULD accept the\
    \ Hello message that contains both IPv4 and\n      IPv6 Transport Address optional\
    \ objects but MUST use only the\n      transport address whose address family\
    \ is the same as that of the\n      IP packet carrying the Hello message.  An\
    \ LSR SHOULD accept only\n      the first Transport Address optional object for\
    \ a given address\n      family in the received Hello message and ignore the rest\
    \ if the\n      LSR receives more than one Transport Address optional object for\
    \ a\n      given address family.\n   3. An LSR MUST send separate Hello messages\
    \ (each containing either\n      an IPv4 or IPv6 Transport Address optional object)\
    \ for each IP\n      address family if Dual-stack LDP is enabled (for an interface\
    \ or\n      neighbor).\n   4. An LSR MUST use a global unicast IPv6 address in\
    \ an IPv6 Transport\n      Address optional object of outgoing targeted Hellos\
    \ and check for\n      the same in incoming targeted Hellos (i.e., MUST discard\
    \ the\n      targeted Hello if it failed the check).\n   5. An LSR MUST prefer\
    \ using a global unicast IPv6 address in an\n      IPv6 Transport Address optional\
    \ object of outgoing Link Hellos if\n      it had to choose between a global unicast\
    \ IPv6 address and a\n      unique-local or link-local IPv6 address.\n   6. A\
    \ Single-stack LSR MUST establish either an LDPoIPv4 or LDPoIPv6\n      session\
    \ with a remote LSR as per the enabled address family.\n   7. A Dual-stack LSR\
    \ MUST NOT initiate or accept the request for a TCP\n      connection for a new\
    \ LDP session with a remote LSR if it already\n      has an LDPoIPv4 or LDPoIPv6\
    \ session for the same LDP Identifier\n      established with that remote LSR.\n\
    \      This means that only one transport connection is established,\n      regardless\
    \ of IPv6 and/or IPv4 Hello adjacencies present between\n      two LSRs.\n   8.\
    \ A Dual-stack LSR SHOULD prefer establishing an LDPoIPv6 session\n      (instead\
    \ of an LDPoIPv4 session) with a remote Dual-stack LSR by\n      following the\
    \ 'transport connection role' determination logic in\n      Section 6.1.1.\n \
    \     Additionally, to ensure the above preference in the case where\n      Dual-stack\
    \ LDP is enabled on an interface, it would be desirable\n      that IPv6 LDP Link\
    \ Hellos are transmitted before IPv4 LDP Link\n      Hellos, particularly when\
    \ an interface is coming into service or\n      being reconfigured.\n"
- title: '6.1.1.  Dual-Stack: Transport Connection Preference and Role of an LSR'
  contents:
  - "6.1.1.  Dual-Stack: Transport Connection Preference and Role of an LSR\n   Section\
    \ 2.5.2 of [RFC5036] specifies the rules for determining\n   active/passive roles\
    \ in setting up a TCP connection.  These rules are\n   clear for Single-stack\
    \ LDP but not for Dual-stack LDP, in which an\n   LSR may assume different roles\
    \ for different address families,\n   causing the LDP session to not get established.\n\
    \   To ensure a deterministic transport connection (active/passive) role\n   in\
    \ the case of Dual-stack LDP, this document specifies that the\n   Dual-stack\
    \ LSR conveys its transport connection preference in every\n   LDP Hello message.\
    \  This preference is encoded in a new TLV, named\n   the \"Dual-Stack capability\"\
    \ TLV, as defined below:\n     0                   1                   2     \
    \              3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |1|0|  Dual-Stack capability    |        Length                 |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |TR     |        Reserved       |     MBZ                       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                    Figure 5: Dual-Stack Capability TLV\n   Where:\n      U and\
    \ F bits: 1 and 0 (as specified by [RFC5036])\n      Dual-Stack capability: TLV\
    \ code point (Ox0701)\n      TR:   Transport Connection Preference\n         \
    \   This document defines the following two values:\n               0100: LDPoIPv4\
    \ connection\n               0110: LDPoIPv6 connection (default)\n      Reserved\n\
    \            This field is reserved.  It MUST be set to zero on\n            transmission\
    \ and ignored on receipt.\n   A Dual-stack LSR (i.e., an LSR supporting Dual-stack\
    \ LDP for a peer)\n   MUST include the Dual-Stack capability TLV in all of its\
    \ LDP Hellos\n   and MUST set the \"TR\" field to announce its preference for\
    \ either an\n   LDPoIPv4 or LDPoIPv6 transport connection for that peer.  The\
    \ default\n   preference is LDPoIPv6.\n   A Dual-stack LSR MUST always check for\
    \ the presence of the Dual-Stack\n   capability TLV in the received Hello messages\
    \ and take appropriate\n   action, as follows:\n   1. If the Dual-Stack capability\
    \ TLV is present and the remote\n      preference does not match the local preference\
    \ (or does not get\n      recognized), then the LSR MUST discard the Hello message\
    \ and log\n      an error.\n      If an LDP session was already in place, then\
    \ the LSR MUST send a\n      fatal Notification message with status code of 'Transport\n\
    \      Connection Mismatch' (0x00000032) and reset the session.\n   2. If the\
    \ Dual-Stack capability TLV is present and the remote\n      preference matches\
    \ the local preference, then:\n      a) If TR=0100 (LDPoIPv4), then determine\
    \ the active/passive roles\n         for the TCP connection using an IPv4 transport\
    \ address as\n         defined in Section 2.5.2 of RFC 5036.\n      b) If TR=0110\
    \ (LDPoIPv6), then determine the active/passive roles\n         for the TCP connection\
    \ by using an IPv6 transport address as\n         defined in Section 2.5.2 of\
    \ RFC 5036.\n   3. If the Dual-Stack capability TLV is NOT present and\n     \
    \ a) only IPv4 Hellos are received, then the neighbor is deemed as a\n       \
    \  legacy IPv4-only LSR (supporting Single-stack LDP); hence, an\n         LDPoIPv4\
    \ session SHOULD be established (similar to that of 2a\n         above).\n   \
    \      However, if IPv6 Hellos are also received at any time during\n        \
    \ the life of the session from that neighbor, then the neighbor\n         is deemed\
    \ as a noncompliant Dual-stack LSR (similar to that of\n         3c below), resulting\
    \ in any established LDPoIPv4 session being\n         reset and a fatal Notification\
    \ message being sent (with status\n         code of 'Dual-Stack Noncompliance',\
    \ 0x00000033).\n      b) only IPv6 Hellos are received, then the neighbor is deemed\
    \ as\n         an IPv6-only LSR (supporting Single-stack LDP) and an LDPoIPv6\n\
    \         session SHOULD be established (similar to that of 2b above).\n     \
    \    However, if IPv4 Hellos are also received at any time during\n         the\
    \ life of the session from that neighbor, then the neighbor\n         is deemed\
    \ as a noncompliant Dual-stack LSR (similar to that of\n         3c below), resulting\
    \ in any established LDPoIPv6 session being\n         reset and a fatal Notification\
    \ message being sent (with status\n         code of 'Dual-Stack Noncompliance',\
    \ 0x00000033).\n      c) both IPv4 and IPv6 Hellos are received, then the neighbor\
    \ is\n         deemed as a noncompliant Dual-stack neighbor and is not allowed\n\
    \         to have any LDP session.  A Notification message should be sent\n  \
    \       (with status code of 'Dual-Stack Noncompliance', 0x00000033).\n   A Dual-stack\
    \ LSR MUST convey the same transport connection preference\n   (\"TR\" field value)\
    \ in all (link and targeted) Hellos that advertise\n   the same label space to\
    \ the same peer and/or on the same interface.\n   This ensures that two LSRs linked\
    \ by multiple Hello adjacencies using\n   the same label spaces play the same\
    \ connection establishment role for\n   each adjacency.\n   A Dual-stack LSR MUST\
    \ follow Section 2.5.5 of [RFC5036] and check for\n   matching Hello messages\
    \ from the peer (either all Hellos also include\n   the Dual-Stack capability\
    \ (with the same TR value) or none do).\n   A Single-stack LSR does not need to\
    \ use the Dual-Stack capability in\n   Hello messages and SHOULD ignore this capability\
    \ if received.\n   An implementation may provide an option to favor one AFI (say,\
    \ IPv4)\n   over another AFI (say, IPv6) for the TCP transport connection, so\
    \ as\n   to use the favored IP version for the LDP session and force\n   deterministic\
    \ active/passive roles.\n   Note: An alternative to this new capability TLV could\
    \ be a new Flag\n   value in an LDP Hello message; however, it would be used even\
    \ in\n   Single-stack IPv6 LDP networks and linger on forever, even though\n \
    \  Dual-stack will not.  Hence, the idea of this alternative has been\n   discarded.\n"
- title: 6.2.  LDP Session Maintenance
  contents:
  - "6.2.  LDP Session Maintenance\n   This document specifies that two LSRs maintain\
    \ a single LDP session,\n   regardless of the number of Link or targeted Hello\
    \ adjacencies\n   between them, as described in Section 6.1.  This is independent\
    \ of\n   whether:\n   - they are connected via a Dual-stack LDP-enabled interface(s)\
    \ or via\n     two (or more) Single-stack LDP-enabled interfaces;\n   - a Single-stack\
    \ LDP-enabled interface is converted to a Dual-stack\n     LDP-enabled interface\
    \ (see Figure 1) on either LSR;\n   - an additional Single-stack or Dual-stack\
    \ LDP-enabled interface is\n     added or removed between two LSRs (see Figure\
    \ 2).\n   If the last Hello adjacency for a given address family goes down\n \
    \  (e.g., due to Dual-stack LDP-enabled interfaces being converted into\n   Single-stack\
    \ LDP-enabled interfaces on one LSR) and that address\n   family is the same as\
    \ the one used in the transport connection, then\n   the transport connection\
    \ (LDP session) MUST be reset.  Otherwise, the\n   LDP session MUST stay intact.\n\
    \   If the LDP session is torn down for whatever reason (LDP disabled for\n  \
    \ the corresponding transport, Hello adjacency expiry, preference\n   mismatch,\
    \ etc.), then the LSRs SHOULD initiate the establishment of a\n   new LDP session\
    \ as per the procedures described in Section 6.1 of\n   this document.\n"
- title: 7.  Binding Distribution
  contents:
  - "7.  Binding Distribution\n   LSRs by definition can be enabled for Dual-stack\
    \ LDP globally and/or\n   per peer so as to exchange the address and label bindings\
    \ for both\n   IPv4 and IPv6 address families, independent of any LDPoIPv4 or\n\
    \   LDPoIPv6 session between them.\n   However, there might be some legacy LSRs\
    \ that are fully compliant\n   with RFC 5036 for IPv4 but are noncompliant for\
    \ IPv6 (for example,\n   see Section 3.5.5.1 of RFC 5036), causing them to reset\
    \ the session\n   upon receiving IPv6 address bindings or IPv6 FEC (Prefix) label\n\
    \   bindings from a peer compliant with this document.  This is somewhat\n   undesirable,\
    \ as clarified further in Appendices A.1 and A.2.\n   To help maintain backward\
    \ compatibility (i.e., accommodate IPv4-only\n   LDP implementations that may\
    \ not be compliant with RFC 5036,\n   Section 3.5.5.1), this specification requires\
    \ that an LSR MUST NOT\n   send any IPv6 bindings to a peer if the peer has been\
    \ determined to\n   be a legacy LSR.\n   The Dual-Stack capability TLV, which\
    \ is defined in Section 6.1.1, is\n   also used to determine whether or not a\
    \ peer is a legacy (IPv4-only\n   Single-stack) LSR.\n"
- title: 7.1.  Address Distribution
  contents:
  - "7.1.  Address Distribution\n   An LSR MUST NOT advertise (via an Address message)\
    \ any IPv4-mapped\n   IPv6 addresses (as defined in Section 2.5.5.2 of [RFC4291])\
    \ and MUST\n   ignore such addresses if ever received.  Please see Appendix A.3.\n\
    \   If an LSR is enabled with Single-stack LDP for any peer, then it MUST\n  \
    \ advertise (via an Address message) its local IP addresses as per the\n   enabled\
    \ address family to that peer and process received Address\n   messages containing\
    \ IP addresses as per the enabled address family\n   from that peer.\n   If an\
    \ LSR is enabled with Dual-stack LDP for a peer and\n   1. does not find the Dual-Stack\
    \ capability TLV in the incoming IPv4\n      LDP Hello messages from that peer,\
    \ then the LSR MUST NOT advertise\n      its local IPv6 addresses to the peer.\n\
    \   2. finds the Dual-Stack capability TLV in the incoming IPv4 (or IPv6)\n  \
    \    LDP Hello messages from that peer, then it MUST advertise (via an\n     \
    \ Address message) its local IPv4 and IPv6 addresses to that peer.\n   3. does\
    \ not find the Dual-Stack capability TLV in the incoming IPv6\n      LDP Hello\
    \ messages, then it MUST advertise (via an Address\n      message) only its local\
    \ IPv6 addresses to that peer.\n      This last point helps to maintain forward\
    \ compatibility (no need\n      to require this TLV in the case of IPv6 Single-stack\
    \ LDP).\n"
- title: 7.2.  Label Distribution
  contents:
  - "7.2.  Label Distribution\n   An LSR MUST NOT allocate and MUST NOT advertise\
    \ FEC-label bindings\n   for link-local or IPv4-mapped IPv6 addresses (defined\
    \ in\n   Section 2.5.5.2 of [RFC4291]), and it MUST ignore such bindings if\n\
    \   ever received.  Please see Appendix A.3.\n   If an LSR is enabled with Single-stack\
    \ LDP for any peer, then it MUST\n   advertise (via a Label Mapping message) FEC-label\
    \ bindings for the\n   enabled address family to that peer and process received\
    \ FEC-label\n   bindings for the enabled address family from that peer.\n   If\
    \ an LSR is enabled with Dual-stack LDP for a peer and\n   1. does not find the\
    \ Dual-Stack capability TLV in the incoming IPv4\n      LDP Hello messages from\
    \ that peer, then the LSR MUST NOT advertise\n      IPv6 FEC-label bindings to\
    \ the peer (even if IP capability\n      negotiation for the IPv6 address family\
    \ was done).\n   2. finds the Dual-Stack capability TLV in the incoming IPv4 (or\
    \ IPv6)\n      LDP Hello messages from that peer, then it MUST advertise\n   \
    \   FEC-label bindings for both IPv4 and IPv6 address families to that\n     \
    \ peer.\n   3. does not find the Dual-Stack capability TLV in the incoming IPv6\n\
    \      LDP Hello messages, then it MUST advertise FEC-label bindings for\n   \
    \   IPv6 address families to that peer.\n      This last point helps to maintain\
    \ forward compatibility (no need\n      to require this TLV for IPv6 Single-stack\
    \ LDP).\n   An LSR MAY further constrain the advertisement of FEC-label bindings\n\
    \   for a particular address family by negotiating the IP capability for\n   a\
    \ given address family, as specified in [RFC7473].  This allows an\n   LSR pair\
    \ to neither advertise nor receive the undesired FEC-label\n   bindings on a per-address-family\
    \ basis to a peer.\n   If an LSR is configured to change an interface or peer\
    \ from\n   Single-stack LDP to Dual-stack LDP, then an LSR SHOULD use Typed\n\
    \   Wildcard FEC procedures [RFC5918] to request the label bindings for\n   the\
    \ enabled address family.  This helps to relearn the label bindings\n   that may\
    \ have been discarded before, without resetting the session.\n"
- title: 8.  LDP Identifiers and Duplicate Next-Hop Addresses
  contents:
  - "8.  LDP Identifiers and Duplicate Next-Hop Addresses\n   RFC 5036, Section 2.7\
    \ specifies the logic for mapping the IP routing\n   next hop (of a given FEC)\
    \ to an LDP peer so as to find the correct\n   label entry for that FEC.  The\
    \ logic involves using the IP routing\n   next-hop address as an index into the\
    \ (peer address) database (which\n   is populated by the Address message containing\
    \ a mapping between each\n   peer's local addresses and its LDP Identifier) to\
    \ determine the LDP\n   peer.\n   However, this logic is insufficient to deal\
    \ with duplicate IPv6\n   (link-local) next-hop addresses used by two or more\
    \ peers.  The\n   reason is that all interior IPv6 routing protocols (can) use\n\
    \   link-local IPv6 addresses as the IP routing next hops, and\n   \"IP Version\
    \ 6 Addressing Architecture\" [RFC4291] allows a link-local\n   IPv6 address to\
    \ be used on more than one link.\n   Hence, this logic is extended by this specification\
    \ to use not only\n   the IP routing next-hop address but also the IP routing\
    \ next-hop\n   interface to uniquely determine the LDP peer(s).  The next-hop\n\
    \   address-based LDP peer mapping is to be done through the LDP peer\n   address\
    \ database (populated by Address messages received from the LDP\n   peers), whereas\
    \ next-hop interface-based LDP peer mapping is to be\n   done through the LDP\
    \ Hello adjacency/interface database (populated by\n   Hello messages received\
    \ from the LDP peers).\n   This extension solves the problem of two or more peers\
    \ using the same\n   link-local IPv6 address (in other words, duplicate peer addresses)\
    \ as\n   the IP routing next hops.\n   Lastly, for better scale and optimization,\
    \ an LSR may advertise only\n   the link-local IPv6 addresses in the Address message,\
    \ assuming that\n   the peer uses only the link-local IPv6 addresses as static\
    \ and/or\n   dynamic IP routing next hops.\n"
- title: 9.  LDP TTL Security
  contents:
  - "9.  LDP TTL Security\n   This document mandates the use of the Generalized TTL\
    \ Security\n   Mechanism (GTSM) [RFC6720] for LDP Link Hello packets over IPv6\
    \ (see\n   Section 5.1).\n   This document further recommends enabling GTSM for\
    \ the LDP/TCP\n   transport connection over IPv6 (i.e., LDPoIPv6).  This GTSM\
    \ inclusion\n   is intended to automatically protect IPv6 LDP peering sessions\
    \ from\n   off-link attacks.\n   [RFC6720] allows for the implementation to statically\
    \ (via\n   configuration) and/or dynamically override the default behavior\n \
    \  (enable/disable GTSM) on a per-peer basis.  Such an option could be\n   set\
    \ on either LSR in a peering session (since GTSM negotiation would\n   ultimately\
    \ disable GTSM between the LSR and its peer(s)).\n   LDP Link Hello packets MUST\
    \ have their IPv6 Hop Limit set to 255 and\n   be checked for the same upon receipt\
    \ before any further processing,\n   as per Section 3 of [RFC5082].\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This document defines a new optional parameter for\
    \ the LDP Hello\n   message and two new status codes for the LDP Notification\
    \ message.\n   The \"Dual-Stack capability\" parameter has been assigned a code\
    \ point\n   (0x0701) from the \"TLV Type Name Space\" registry.  IANA has allocated\n\
    \   this code point from the IETF Consensus range 0x0700-0x07ff for the\n   Dual-Stack\
    \ capability TLV.\n   The 'Transport Connection Mismatch' status code has been\
    \ assigned a\n   code point (0x00000032) from the \"Status Code Name Space\" registry.\n\
    \   IANA has allocated this code point from the IETF Consensus range and\n   marked\
    \ the E bit column with a '1'.\n   The 'Dual-Stack Noncompliance' status code\
    \ has been assigned a code\n   point (0x00000033) from the \"Status Code Name\
    \ Space\" registry.  IANA\n   has allocated this code point from the IETF Consensus\
    \ range and\n   marked the E bit column with a '1'.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   The extensions defined in this document only\
    \ clarify the behavior of\n   LDP; they do not define any new protocol procedures.\
    \  Hence, this\n   document does not add any new security issues to LDP.\n   While\
    \ the security issues relevant for [RFC5036] are relevant for\n   this document\
    \ as well, this document reduces the chances of off-link\n   attacks when using\
    \ an IPv6 transport connection by including the use\n   of GTSM procedures [RFC5082].\
    \  Please see Section 9 for LDP TTL\n   Security details.\n   Moreover, this document\
    \ allows the use of IPsec [RFC4301] for IPv6\n   protection; hence, LDP can benefit\
    \ from the additional security as\n   specified in [RFC7321] as well as [RFC5920].\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n        \
    \      Architecture\", RFC 4291, DOI 10.17487/RFC4291,\n              February\
    \ 2006, <http://www.rfc-editor.org/info/rfc4291>.\n   [RFC5036]  Andersson, L.,\
    \ Ed., Minei, I., Ed., and B. Thomas, Ed.,\n              \"LDP Specification\"\
    , RFC 5036, DOI 10.17487/RFC5036,\n              October 2007, <http://www.rfc-editor.org/info/rfc5036>.\n\
    \   [RFC5082]  Gill, V., Heasley, J., Meyer, D., Savola, P., Ed., and C.\n   \
    \           Pignataro, \"The Generalized TTL Security Mechanism\n            \
    \  (GTSM)\", RFC 5082, DOI 10.17487/RFC5082, October 2007,\n              <http://www.rfc-editor.org/info/rfc5082>.\n\
    \   [RFC5918]  Asati, R., Minei, I., and B. Thomas, \"Label Distribution\n   \
    \           Protocol (LDP) 'Typed Wildcard' Forward Equivalence Class\n      \
    \        (FEC)\", RFC 5918, DOI 10.17487/RFC5918, August 2010,\n             \
    \ <http://www.rfc-editor.org/info/rfc5918>.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [RFC4038]  Shin, M-K., Ed., Hong, Y-G., Hagino,\
    \ J., Savola, P., and\n              E. Castro, \"Application Aspects of IPv6\
    \ Transition\",\n              RFC 4038, DOI 10.17487/RFC4038, March 2005,\n \
    \             <http://www.rfc-editor.org/info/rfc4038>.\n   [RFC4301]  Kent, S.\
    \ and K. Seo, \"Security Architecture for the\n              Internet Protocol\"\
    , RFC 4301, DOI 10.17487/RFC4301,\n              December 2005, <http://www.rfc-editor.org/info/rfc4301>.\n\
    \   [RFC5340]  Coltun, R., Ferguson, D., Moy, J., and A. Lindem, \"OSPF\n    \
    \          for IPv6\", RFC 5340, DOI 10.17487/RFC5340, July 2008,\n          \
    \    <http://www.rfc-editor.org/info/rfc5340>.\n   [RFC5920]  Fang, L., Ed., \"\
    Security Framework for MPLS and GMPLS\n              Networks\", RFC 5920, DOI\
    \ 10.17487/RFC5920, July 2010,\n              <http://www.rfc-editor.org/info/rfc5920>.\n\
    \   [RFC6286]  Chen, E. and J. Yuan, \"Autonomous-System-Wide Unique BGP\n   \
    \           Identifier for BGP-4\", RFC 6286, DOI 10.17487/RFC6286,\n        \
    \      June 2011, <http://www.rfc-editor.org/info/rfc6286>.\n   [RFC6720]  Pignataro,\
    \ C. and R. Asati, \"The Generalized TTL Security\n              Mechanism (GTSM)\
    \ for the Label Distribution Protocol\n              (LDP)\", RFC 6720, DOI 10.17487/RFC6720,\
    \ August 2012,\n              <http://www.rfc-editor.org/info/rfc6720>.\n   [RFC7321]\
    \  McGrew, D. and P. Hoffman, \"Cryptographic Algorithm\n              Implementation\
    \ Requirements and Usage Guidance for\n              Encapsulating Security Payload\
    \ (ESP) and Authentication\n              Header (AH)\", RFC 7321, DOI 10.17487/RFC7321,\
    \ August 2014,\n              <http://www.rfc-editor.org/info/rfc7321>.\n   [RFC7439]\
    \  George, W., Ed., and C. Pignataro, Ed., \"Gap Analysis for\n              Operating\
    \ IPv6-Only MPLS Networks\", RFC 7439,\n              DOI 10.17487/RFC7439, January\
    \ 2015,\n              <http://www.rfc-editor.org/info/rfc7439>.\n   [RFC7473]\
    \  Raza, K. and S. Boutros, \"Controlling State Advertisements\n             \
    \ of Non-negotiated LDP Applications\", RFC 7473,\n              DOI 10.17487/RFC7473,\
    \ March 2015,\n              <http://www.rfc-editor.org/info/rfc7473>.\n"
- title: Appendix A.  Additional Considerations
  contents:
  - 'Appendix A.  Additional Considerations

    '
- title: A.1.  LDPv6 and LDPv4 Interoperability Safety Net
  contents:
  - "A.1.  LDPv6 and LDPv4 Interoperability Safety Net\n   It is not safe to assume\
    \ that implementations compliant with RFC 5036\n   have supported the handling\
    \ of an IPv6 address family (IPv6\n   FEC-label) in a Label Mapping message all\
    \ along.\n   If a router upgraded per this specification advertised both IPv4\
    \ and\n   IPv6 FECs in the same Label Mapping message, then an IPv4-only peer\n\
    \   (not knowing how to process such a message) may abort processing the\n   entire\
    \ Label Mapping message (thereby discarding even the IPv4\n   FEC-labels), as\
    \ per Section 3.4.1.1 of [RFC5036].\n   This would result in LDPv6 being somewhat\
    \ undeployable in existing\n   production networks.\n   Section 7 of this document\
    \ provides a good safety net and makes LDPv6\n   incrementally deployable without\
    \ making any such assumption on the\n   routers' support for IPv6 FEC processing\
    \ in current production\n   networks.\n"
- title: A.2.  Accommodating Implementations Not Compliant with RFC 5036
  contents:
  - "A.2.  Accommodating Implementations Not Compliant with RFC 5036\n   It is not\
    \ safe to assume that implementations have been [RFC5036]\n   compliant in gracefully\
    \ handling an IPv6 address family (IPv6 Address\n   List TLV) in an Address message\
    \ all along.\n   If a router upgraded per this specification advertised IPv6 addresses\n\
    \   (with or without IPv4 addresses) in an Address message, then an\n   IPv4-only\
    \ peer (not knowing how to process such a message) may not\n   follow Section\
    \ 3.5.5.1 of [RFC5036] and may tear down the LDP\n   session.\n   This would result\
    \ in LDPv6 being somewhat undeployable in existing\n   production networks.\n\
    \   Sections 6 and 7 of this document provide a good safety net and make\n   LDPv6\
    \ incrementally deployable without making any such assumption on\n   the routers'\
    \ support for IPv6 FEC processing in current production\n   networks.\n"
- title: A.3.  Why prohibit IPv4-mapped IPv6 addresses in LDP?
  contents:
  - "A.3.  Why prohibit IPv4-mapped IPv6 addresses in LDP?\n   Per discussion with\
    \ the 6MAN and V6OPS working groups, the\n   overwhelming consensus was to not\
    \ promote IPv4-mapped IPv6 addresses\n   appearing in the routing table, as well\
    \ as in LDP (address and label)\n   databases.\n   Also, [RFC4038], Section 4.2\
    \ suggests that IPv4-mapped IPv6-addressed\n   packets should never appear on\
    \ the wire.\n"
- title: A.4.  Why a 32-bit value even for the IPv6 LDP Router Id?
  contents:
  - "A.4.  Why a 32-bit value even for the IPv6 LDP Router Id?\n   The first four\
    \ octets of the LDP Identifier, the 32-bit LSR Id (i.e.,\n   LDP router Id), identify\
    \ the LSR and provide a globally unique value\n   within the MPLS network, regardless\
    \ of the address family used for\n   the LDP session.\n   Please note that the\
    \ 32-bit LSR Id value would not map to any IPv4\n   address in an IPv6-only LSR\
    \ (i.e., Single-stack), nor would there be\n   an expectation of it being IP routable\
    \ or DNS resolvable.  In IPv4\n   deployments, the LSR Id is typically derived\
    \ from an IPv4 address,\n   generally assigned to a loopback interface.  In IPv6-only\n\
    \   deployments, this 32-bit LSR Id must be derived by some other means\n   that\
    \ guarantees global uniqueness within the MPLS network, similar to\n   that of\
    \ the BGP Identifier [RFC6286] and the OSPF router Id\n   [RFC5340].\n   This\
    \ document reserves 0.0.0.0 as the LSR Id and prohibits its usage\n   with IPv6,\
    \ in line with the OSPF router Id in OSPF version 3\n   [RFC5340].\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   We acknowledge the authors of [RFC5036], since some text\
    \ in this\n   document is borrowed from [RFC5036].\n   Thanks to Bob Thomas for\
    \ providing critical feedback to improve this\n   document early on.\n   Many\
    \ thanks to Eric Rosen, Lizhong Jin, Bin Mo, Mach Chen, Shane\n   Amante, Pranjal\
    \ Dutta, Mustapha Aissaoui, Matthew Bocci, Mark Tinka,\n   Tom Petch, Kishore\
    \ Tiruveedhula, Manoj Dutta, Vividh Siddha, Qin Wu,\n   Simon Perreault, Brian\
    \ E. Carpenter, Santosh Esale, Danial Johari,\n   and Loa Andersson for thoroughly\
    \ reviewing this document and for\n   providing insightful comments and multiple\
    \ improvements.\n"
- title: Contributors
  contents:
  - "Contributors\n   The following individuals contributed to this document:\n  \
    \ Nagendra Kumar\n   Cisco Systems, Inc.\n   7200 Kit Creek Road\n   Research\
    \ Triangle Park, NC  27709, United States\n   EMail: naikumar@cisco.com\n   Andre\
    \ Pelletier\n   Cisco Systems, Inc.\n   2000 Innovation Drive\n   Kanata, ON K2K-3E8,\
    \ Canada\n   EMail: apelleti@cisco.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Rajiv Asati\n   Cisco Systems, Inc.\n   7025 Kit Creek\
    \ Road\n   Research Triangle Park, NC  27709-4987\n   United States\n   EMail:\
    \ rajiva@cisco.com\n   Carlos Pignataro\n   Cisco Systems, Inc.\n   7200 Kit Creek\
    \ Road\n   Research Triangle Park, NC  27709-4987\n   United States\n   EMail:\
    \ cpignata@cisco.com\n   Kamran Raza\n   Cisco Systems, Inc.\n   2000 Innovation\
    \ Drive\n   Ottawa, ON  K2K-3E8\n   Canada\n   EMail: skraza@cisco.com\n   Vishwas\
    \ Manral\n   Ionos Networks\n   4100 Moorpark Ave., Ste. #122\n   San Jose, CA\
    \  95117\n   United States\n   Phone: +1 408 447 1497\n   EMail: vishwas@ionosnetworks.com\n\
    \   Rajiv Papneja\n   Huawei Technologies\n   2330 Central Expressway\n   Santa\
    \ Clara, CA  95050\n   United States\n   Phone: +1 571 926 8593\n   EMail: rajiv.papneja@huawei.com\n"
