Abstract This document describes an Extensible Provisioning Protocol (EPP) mapping for provisioning and management of organization objects stored in a shared central repository.
There are many entities, such as registrars, resellers, DNS service operators, and privacy proxies, involved in the domain registration business.
These kinds of entities have not been formally defined as having an object in Extensible Provisioning Protocol (EPP).
This document provides a way to specify them as "organization" entities.
This document describes an organization object mapping for version 1.0 of the EPP [RFC5730].
This mapping is specified using XML 1.0 as described in [W3C.REC xml 20081126] and XML Schema notation as described in [W3C.REC xmlschema 1 20041028] and [W3C.REC xmlschema 2 20041028].
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
In examples, "C:" represents lines sent by a protocol client, and "S:" represents lines returned by a protocol server.
Indentation and white space in examples are provided only to illustrate element relationships and are not a required feature of this specification.
Unless stated otherwise, XML specifications and examples provided in this document MUST be interpreted in the character case presented.
The XML namespace prefix "org" is used for the namespace "urn:ietf:params:xml:
implementations MUST NOT depend on it; instead, they should employ a proper namespace aware XML parser and serializer to interpret and output the XML documents.
An EPP organization object has attributes and associated values that can be viewed and modified by the sponsoring client or the server.
This section describes each attribute type in detail.
The formal syntax for the attribute values described here can be found in the "Formal Syntax" section of this document and in the appropriate normative references.
All EPP organizations are identified by a server unique identifier.
Organization identifiers are character strings with a specified minimum length, a specified maximum length, and a specified format.
Organization identifiers use the "clIDType" client identifier syntax described in [RFC5730].
The corresponding element is <org:id>. 3.2.
The organization roles are used to represent the relationship an organization could have.
The corresponding element is <org:role
An organization object MUST always have at least one associated role.
Roles can be set only by the client that sponsors an organization object.
A client can change the role of an organization object using the EPP <update
> command (see Section 4.2.5).
Role Type An organization role MUST have a type field, which may have any of the values listed in Section 7.3.
The corresponding element is <org:type>.
An organization could have multiple roles with different role types.
Role Status A role of an organization object MAY have its own statuses.
The corresponding element is <org:status
The possible values for the role status are defined in Section 3.5.
Role Identifier A role MAY have a third party assigned identifier such as the IANA ID for registrars.
The corresponding element is <org:roleID
Example of organization role identifier:
All EPP contacts are identified by server unique identifiers.
Contact identifiers are character strings with a specified minimum length, a specified maximum length, and a specified format.
Contact identifiers use the "clIDType" client identifier syntax described in [RFC5730].
An organization object MUST always have at least one associated status value.
Status values can be set only by the client that sponsors an organization object and by the server on which the object resides.
A client can change the status of an organization object using the EPP <update> command.
Each status value MAY be accompanied by a string of human readable text that describes the rationale for the status applied to the object.
A client MUST NOT alter server status values set by the server.
A server MAY alter or override status values set by a client, subject to local server policies.
The status of an object MAY change as a result of either a client initiated transform command or an action performed by a server operator.
Status values that can be added or removed by a client are prefixed with "client".
Corresponding server status values that can be added or removed by a server are prefixed with "server".
The "hold" and "terminated" status values are server managed when the organization has no parent identifier (Section 3.6) and otherwise MAY be client managed based on server policy.
Other status values that do not begin with either "client" or "server" are server managed.
ok: This is the normal status value for an object that has no operations pending or active prohibitions.
This value is set and removed by the server as other status values are added or removed.
Organization transform commands and new links MUST be rejected.
terminated: The organization that has been terminated MUST NOT be linked.
Organization transform commands and new links MUST be rejected.
linked: The organization object has at least one active association with another object.
The "linked" status is not explicitly set by the client.
Servers should provide services to determine existing object associations.
clientLinkProhibited, serverLinkProhibited: Requests to add new links to the organization MUST be rejected.
clientUpdateProhibited, serverUpdateProhibited: Requests to update the object (other than to remove this status) MUST be rejected.
clientDeleteProhibited, serverDeleteProhibited: Requests to delete the object MUST be rejected.
A transform command has been processed for the object, but the action has not been completed by the server.
Server operators can delay action completion for a variety of reasons, such as to allow for human review or third party action.
A transform command that is processed, but whose requested action is pending, is noted with response code 1001.
pendingCreate", "ok", "hold", and "terminated" are mutually exclusive statuses.
An organization MUST have exactly one of these statuses set.
"ok" status MAY only be combined with "linked" status.
A client or server MAY combine "linked" with either "clientLinkProhibited" or "serverLinkProhibited" if new links must be prohibited. "
pendingDelete" status MUST NOT be combined with either "clientDeleteProhibited" or "serverDeleteProhibited" status.
The "pendingCreate", "pendingDelete", and "pendingUpdate" status values MUST NOT be combined with each other.
If "clientUpdateProhibited" or "serverUpdateProhibited" is set, the client will not be able to update the object.
For "clientUpdateProhibited", the client will first need to remove "clientUpdateProhibited" prior to attempting to update the object.
The server can modify the object at any time.
A role SHOULD have at least one associated status value.
Valid values include "ok", "linked", "clientLinkProhibited", and "serverLinkProhibited".
ok: This is the normal status value for a role that has no operations pending or active prohibitions.
This value is set and removed by the server as other status values are added or removed.
linked: The role of an organization object has at least one active association with another object.
The "linked" status is not explicitly set by the client.
Servers SHOULD provide services to determine existing object associations.
clientLinkProhibited, serverLinkProhibited: Requests to add new links to the role MUST be rejected.
Parent Identifier Organizations can have more than one layer.
The parent identifier, as defined with the <org:parentId
> element, represents the parent organization identifier in a child organization.
The case of reseller organizations provides an example.
The parent identifier is not defined for the top level reseller, namely the registrar of the registry.
An N tier reseller has a parent reseller and at least one child reseller.
A reseller customer has a parent reseller and no child resellers.
For example: if organization A has organization B as its parent identifier, organization B cannot have organization A as its parent identifier.
The same is true for larger loops involving three or more organizations.
The URL represents the organization web home page, as defined with the <org:url> element.
3.8.  Dates and Times Date and time attribute values MUST be represented in Coordinated Universal Time (UTC) using the Gregorian calendar.
The extended date time form using uppercase "T" and "Z" characters defined in [W3C.REC xmlschema 2 20041028]
MUST be used to represent date time values, as XML Schema does not support truncated date time forms or lowercase "T" and "Z" characters.
A detailed description of the EPP syntax and semantics can be found in the EPP core protocol specification [RFC5730].
The command mappings described here are specifically for use in provisioning and managing organization information via EPP.
EPP Query Commands EPP provides two commands to retrieve organization information: <check> to determine if an organization object can be provisioned within a repository and <info> to retrieve detailed information associated with an organization object.
This document does not define a mapping for the EPP <transfer> command to retrieve organization object transfer status information.
> command is used to determine if an object can be provisioned within a repository.
It provides a hint that allows a client to anticipate the success or failure of provisioning an object using the <create> command, as object provisioning requirements are ultimately a matter of server policy.
In addition to the standard EPP command elements, the <check> command MUST contain an <org:check> element.
This element or its ancestor element MUST identify the organization namespace "urn:ietf:
The <org:check> element contains the following child elements:  One or more <org:
id> elements that contain the server unique identifier of the organization
Example <check> command: C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When a <check> command has been processed successfully, the EPP <resData> element MUST contain a child <org:chkData
This element or its ancestor element MUST identify the organization namespace "urn:ietf:
element contains one or more <org:cd> elements that contain the following child elements:  An <org:id> element that identifies the queried object.
This element MUST contain an "avail" attribute whose value indicates object availability (can it be provisioned or not) at the moment the <check> command was completed.
A value of "1" or "true" means that the object can be provisioned.
A value of "0" or "false" means that the object cannot be provisioned.
An OPTIONAL <org:reason> element that may be provided when an object cannot be provisioned.
If present, this element contains server specific text to help explain why the object cannot be provisioned.
This text MUST be represented in the response language previously negotiated with the client; an OPTIONAL "lang" attribute as defined in [RFC5646] may be present to identify the language if the negotiated value is something other than the default value of "en"(English).
Example <check> response: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
An EPP error response MUST be returned if a <check> command cannot be processed for any reason.
command is used to retrieve information associated with an organization object.
In addition to the standard EPP command elements, the <info> command MUST contain an <org:info> element.
This element or its ancestor element MUST identify the organization namespace "urn:ietf:
> element contains the following child element:  An <org:
id> element that contains the server unique identifier of the organization object to be queried.
Example <info> command: C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When an <info> command has been processed successfully, the EPP <resData> element MUST contain a child <org:
This element or its ancestor element MUST identify the organization namespace "urn:ietf:
> element contains the following child elements:  An <org:
id> element that contains the server unique identifier of the organization object, as defined in Section 3.1.
> element that contains the Repository Object Identifier assigned to the organization object when the object was created.
One or more <org:role> elements that contain the role type, role statuses, and optional role ID of the organization.
An <org:type> element that contains the type of the organization, as defined in Section 3.2.
One or more <org:status> elements that contain the role statuses.
The values of the role status are defined in Section 3.5.
An OPTIONAL <org:roleID> element that contains a third party  assigned identifier, such as IANA ID for registrars, as defined in Section 3.2.3.
One or more <org:status> elements that contain the operational status of the organization, as defined in Section 3.4.
> element that contains the identifier of the parent object, as defined in Section 3.6.
postalInfo> elements that contain postal address information.
Two elements are provided so that address information can be provided in both internationalized and localized forms; a "type" attribute is used to identify the two forms.
If an internationalized form (type "int") is provided, element content MUST be represented in a subset of Unicode [UNICODE] in the range U 0020
If a localized form (type "loc") is provided, element content MAY be represented in unrestricted UTF 8.
> element contains the following child elements:
> element that contains the name of the organization.
An OPTIONAL <org:addr> element that contains address information associated with the organization.
> element that contains the organization's city.
> element that contains the organization's state or province.
> element that contains the organization's postal code.
cc> element that contains the alpha 2 organization's country code.
The detailed format of this element is described in Section 2.4.3 of [RFC5733].
An OPTIONAL <org:voice> element that contains the organization's voice telephone number.
The detailed format of this element is described in Section 2.5 of [RFC5733].
An OPTIONAL <org:fax> element that contains the organization's facsimile telephone number.
The detailed format of this element is described in Section 2.5 of [RFC5733].
> element that contains the organization's email address.
The detailed format of this element is described in [RFC5322].
An OPTIONAL <org:url> element that contains the URL to the website of the organization.
The detailed format of this element is described in [RFC3986].
Zero or more <org:contact> elements that contain identifiers for the contact objects to be associated with the organization object.
Contact object identifiers MUST be known to the server before the contact object can be associated with the organization object.
The required "type" is used to represent contact types.
The type values include "admin", "tech", "billing", "abuse", and "custom".
The OPTIONAL "typeName" attribute is used to define the name of a "custom" type.
An OPTIONAL <org:clID> element that contains the organization identifier of the sponsoring client.
There is no <org:clID> element if the organization is managed by the registry.
An <org:crID> element that contains the identifier of the client that created the organization object.
An <org:crDate> element that contains the date and time of organization object creation.
An <org:upID> element that contains the identifier of the client that last updated the organization object.
This element MUST NOT be present if the organization has never been modified.
An <org:upDate> element that contains the date and time of the most recent organization object modification.
This element MUST NOT be present if the organization object has never been modified.
Example <info> response for "Example Registrar Inc." organization object with identifier "registrar1362": S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
Example <info> response for "Example Reseller Inc." organization object of reseller type managed by identifier "registrar1362": S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
An EPP error response MUST be returned if an <info> command cannot be processed for any reason.
The transfer semantics do not apply to organization objects.
No EPP <transfer> query command is defined in this document.
This document provides three commands to transform organization object information: <create> to create an instance of an organization object, <delete> to delete an instance of an organization object, and <update> to change information associated with an organization object.
This document does not define a mapping for the EPP <transfer> and <renew> command.
Transform commands are typically processed and completed in real time.
Server operators MAY receive and process transform commands but defer completing the requested action if human or third party review is required before the requested action can be completed.
In such situations, the server MUST return a 1001 response code to the client to note that the command has been received and processed but that the requested action is pending.
The server MUST also manage the status of the object that is the subject of the command to reflect the initiation and completion of the requested action.
Once the action has been completed, the client MUST be notified using a service message that the action has been completed and the status of the object has changed.
Other notification methods MAY be used in addition to the required service message.
The EPP <create> command provides a transform operation that allows a client to create an organization object.
In addition to the standard EPP command elements, the <create> command MUST contain an <org:create> element.
This element or its ancestor element MUST identify the organization namespace "urn:ietf:
The <org:create> element contains the following child elements:  An <org:
id> element that contains the desired server unique identifier for the organization to be created, as defined in Section 3.1.
One or more <org:role> elements that contain the role type, role statuses, and optional role ID of the organization.
An <org:type> element that contains the type of the organization, as defined in Section 3.2.
Zero or more <org:status> elements that contain the role statuses.
The possible values of the role statuses are defined in Section 3.5.
An OPTIONAL <org:roleID> element that contains a third party  assigned identifier, such as IANA ID for registrars, as defined in Section 3.2.3.
Zero or more <org:status> elements that contain the operational status of the organization, as defined in Section 3.4.
> element that contains the identifier of the parent object, as defined in Section 3.6.
postalInfo> elements that contain postal address information.
Two elements are provided so that address information can be provided in both internationalized and localized forms; a "type" attribute is used to identify the two forms.
If an internationalized form (type "int") is provided, element content MUST be represented in a subset of Unicode [UNICODE] in the range U 0020
If a localized form (type "loc") is provided, element content MAY be represented in unrestricted UTF 8.
> element contains the following child elements:
> element that contains the name of the organization.
An OPTIONAL <org:addr> element that contains address information associated with the organization.
> element that contains the organization's city.
> element that contains the organization's state or province.
> element that contains the organization's postal code.
cc> element that contains the alpha 2 organization's country code.
The detailed format of this element is described in Section 2.4.3 of [RFC5733].
An OPTIONAL <org:voice> element that contains the organization's voice telephone number.
The detailed format of this element is described in Section 2.5 of [RFC5733].
An OPTIONAL <org:fax> element that contains the organization's facsimile telephone number.
The detailed format of this element is described in Section 2.5 of [RFC5733].
> element that contains the organization's email address.
The detailed format of this element is described of [RFC5322].
An OPTIONAL <org:url> element that contains the URL to the website of the organization.
The detailed format of this element is described in [RFC3986].
Zero or more <org:contact> elements that contain identifiers for the contact objects associated with the organization object.
C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When a <create> command has been processed successfully, the EPP <resData> element MUST contain a child <org:creData
This element or its ancestor element MUST identify the organization namespace "urn:ietf:
> element contains the following child elements:  An <org:
id> element that contains the server unique identifier for the created organization, as defined in Section 3.1.
An <org:crDate> element that contains the date and time of organization object creation.
Example <create> response: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
An EPP error response MUST be returned if a <create> command cannot be processed for any reason.
The EPP <delete> command provides a transform operation that allows a client to delete an organization object.
In addition to the standard EPP command elements, the <delete> command MUST contain an <org:
This element or its ancestor element MUST identify the organization namespace "urn:ietf:
The <org:delete> element MUST contain the following child element:  An <org:
id> element that contains the server unique identifier of the organization object to be deleted, as defined in Section 3.1.
An organization object MUST NOT be deleted if it is associated with other known objects.
An associated organization MUST NOT be deleted until associations with other known objects have been broken.
A server MUST notify clients that object relationships exist by sending a 2305 error response code when a <delete> command is attempted and fails due to existing object relationships.
C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When a <delete> command has been processed successfully, a server MUST respond with an EPP response with no <
Example <delete> response: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
An EPP error response MUST be returned if a <delete> command cannot be processed for any reason.
Command Renewal semantics do not apply to organization objects, so there is no mapping defined for the EPP <renew> command.
Command Transfer semantics do not apply to organization objects, so there is no mapping defined for the EPP <transfer> command.
The EPP <update> command provides a transform operation that allows a client to modify the attributes of an organization object.
In addition to the standard EPP command elements, the <update> command MUST contain an <org:update> element.
This element or its ancestor element MUST identify the organization namespace "urn:ietf:
> element contains the following child elements:  An <org:
id> element that contains the server unique identifier of the organization object to be updated, as defined in Section 3.1.
An OPTIONAL <org:add> element that contains attribute values to be added to the object.
rem> element that contains attribute values to be removed from the object.
> element that contains attribute values to be changed.
At least one <org:add>, <org:rem>, or <org:chg
> element MUST be provided if the command is not being extended.
All of these elements MAY be omitted if an <update> extension is present.
The OPTIONAL <org:add> and <org:rem> elements contain the following child elements:  Zero or more <org:contact> elements that contain the identifiers for contact objects to be associated with or removed from the organization object.
Contact object identifiers MUST be known to the server before the contact object can be associated with the organization object.
Zero or more <org:role> elements that contain the role type, role statuses, and optional role ID of the organization.
An <org:type> element that contains the role type of the organization, as defined in Section 3.2.
The role type uniquely identifies the role to update.
> elements that contain the role statuses.
The values of the role status are defined in Section 3.5.
An OPTIONAL <org:roleID> element that contains a third party  assigned identifier, such as IANA ID for registrars, as defined in Section 3.2.3.
Zero or more <org:status> elements that contain the operational status of the organization.
An OPTIONAL <org:chg> element contains the following child elements, where at least one child element MUST be present:  An OPTIONAL <org:parentId
> element that contains the identifier of the parent object.
Zero to two <org:postalInfo> elements that contain postal address information.
Two elements are provided so that address information can be provided in both internationalized and localized forms; a "type" attribute is used to identify the two forms.
If an internationalized form (type "int") is provided, element content MUST be represented in a subset of Unicode [UNICODE] in the range U 0020
If a localized form (type "loc") is provided, element content MAY be represented in unrestricted UTF 8.
The change of the postal info is defined as a replacement of that postal info element with the contents of the sub elements included in the <update> command.
postalInfo> element is supported to allow a type of postal info to be removed.
> element contains the following child elements:
> element that contains the name of the organization.
An OPTIONAL <org:addr> element that contains address information associated with the organization.
> element that contains the organization's city.
> element that contains the organization's state or province.
> element that contains the organization's postal code.
cc> element that contains the alpha 2 organization's country code.
The detailed format of this element is described in Section 2.4.3 of [RFC5733].
An OPTIONAL <org:voice> element that contains the organization's voice telephone number.
The detailed format of this element is described in Section 2.5 of [RFC5733].
An OPTIONAL <org:fax> element that contains the organization's facsimile telephone number.
The detailed format of this element is described in Section 2.5 of [RFC5733].
> element that contains the organization's email address.
The detailed format of this element is described in [RFC5322].
An OPTIONAL <org:url> element that contains the URL to the website of the organization.
The detailed format of this element is described in [RFC3986].
Example <update> command: C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When an <update> command has been processed successfully, a server MUST respond with an EPP response with no <
Example <update> response: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
An EPP error response MUST be returned if an <update> command cannot be processed for any reason.
Offline Review of Requested Actions Commands are processed by a server in the order they are received from a client.
Though an immediate response confirming receipt and processing of the command is produced by the server, a server operator MAY perform an offline review of requested transform commands before completing the requested action.
In such situations, the response from the server MUST clearly note that the transform command has been received and processed, but the requested action is pending.
The status in the response of the corresponding object MUST clearly reflect processing of the pending action.
The server MUST notify the client when offline processing of the action has been completed.
Examples describing a <create> command that requires offline review are included here.
Note the result code and message returned in response to the <create> command.
S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
The status of the organization object after returning this response MUST include "pendingCreate".
The server operator reviews the request offline and informs the client of the outcome of the review by queuing a service message for retrieval via the <poll> command; it MAY additionally use an out of band mechanism to inform the client of the outcome.
The service message MUST contain text that describes the notification in the child <msg
> element of the response <msgQ> element.
In addition, the EPP <
resData> element MUST contain a child <org:
This element or its ancestor element MUST identify the organization namespace "urn:ietf:
> element contains the following child elements:  An <org:
id> element that contains the server unique identifier of the organization object.
id> element contains a REQUIRED "paResult" attribute.
A positive boolean value indicates that the request has been approved and completed.
A negative boolean value indicates that the request has been denied and the requested action has not been taken.
> element that contains the client transaction identifier and server transaction identifier returned with the original response to process the command.
The client transaction identifier is OPTIONAL and will only be returned if the client provided an identifier with the original <create> command.
An <org:paDate> element that contains the date and time describing when review of the requested action was completed.
Example "review completed" service message: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
An EPP object mapping is specified in XML Schema notation.
The formal syntax presented here is a complete schema representation of the object mapping suitable for automated validation of EPP XML instances.
The BEGIN and END tags are not part of the schema; they are used to note the beginning and ending of the schema for URI registration purposes.
xml version "1.0" encoding "UTF 8"?
Child elements found in EPP commands.
<element name "create" type "org:
> <element name "info" type "org:infoType"/>
<element name "type" type "token"/
<element name "status" type "org:roleStatusType
" minOccurs "0" maxOccurs "3"/
> <element name "roleID" type "token" minOccurs "
<complexType name "postalInfoType"> <sequence> <element name "name" type "org:postalLineType"/
<element name "addr" type "org:addrType
> </sequence> <attribute name "type" type "org:postalInfoEnumType" use "required"/
clIDType"> <attribute name "type" type "org:contactAttrType" use "required"/>
<attribute name "typeName" type "token"/
> <attribute name "x" type "token"/
> <simpleType name "postalLineType"> <restriction base "normalizedString"> <minLength value "1"/>
> <simpleType name "optPostalLineType"> <restriction base "normalizedString"> <maxLength value "255"/
> <simpleType name "pcType"> <restriction base "token"> <maxLength value "16"/
> <simpleType name "ccType"> <restriction base "token"> <length value "2"/
<complexType name "addrType"> <sequence> <element name "street" type "org:optPostalLineType" minOccurs "
> <element name "city" type "org:postalLineType"/
<element name "sp" type "org:optPostalLineType" minOccurs "
> <element name "pc" type "org:pcType" minOccurs "
> <simpleType name "postalInfoEnumType"> <restriction base "token"> <enumeration value "loc"/
Child element of commands that require only an identifier.
"> <sequence> <element name "id" type "
Child element of commands that accept multiple identifiers.
> <element name "id" type "eppcom:
Pending action notification response elements.
> <element name "id" type "org:paCLIDType"/
> <element name "paTRID" type "epp:trIDType"/>
<complexType name "paCLIDType"> <simpleContent> <extension base "eppcom:
Child elements of the <info> commands.
> <element name "id" type "eppcom:
Child elements of the <create> command.
> <element name "id" type "eppcom:
> <element name "role" type "org:
<element name "parentId" type "eppcom:
> <element name "postalInfo" type "org:
postalInfoType" minOccurs "0" maxOccurs "2"/>
<element name "voice" type "org:e164Type" minOccurs "
> <element name "fax" type "org:e164Type" minOccurs "
> <element name "email" type "eppcom:minTokenType" minOccurs "
> <element name "url" type "anyURI" minOccurs "
> <element name "contact" type "org:contactType" minOccurs "0" maxOccurs "
Child elements of the <update> command.
<element name "id" type "
<element name "add" type "org:addRemType
> <element name "rem" type "org:addRemType
> <element name "chg" type "org:
Data elements that can be added or removed.
"> <sequence> <element name "contact" type "org:contactType" minOccurs "0
Data elements that can be changed.
> <sequence> <element name "parentId" type "eppcom:
> <element name "postalInfo" type "org:chgPostalInfoType
" minOccurs "0" maxOccurs "2"/
> <element name "voice" type "org:e164Type" minOccurs "
> <element name "fax" type "org:e164Type" minOccurs "
> <element name "email" type "eppcom:minTokenType" minOccurs "
> <element name "url" type "anyURI" minOccurs "
<complexType name "chgPostalInfoType"> <sequence> <element name "name" type "org:postalLineType
> <element name "addr" type "org:addrType" minOccurs "
> </sequence> <attribute name "type" type "org:postalInfoEnumType" use "required"/
<element name "chkData" type "org:chkDataType"/
> <element name "creData" type "org:creDataType"/
<element name "infData" type "org:infDataType"/
> <sequence> <element name "cd" type "org:checkType" maxOccurs "unbounded" /
> <sequence> <element name "id" type "
<element name "role" type "org:
> <element name "parentId" type "eppcom:
> <element name "postalInfo" type "org:
postalInfoType" minOccurs "0" maxOccurs "2"/>
<element name "voice" type "org:e164Type" minOccurs "
> <element name "fax" type "org:e164Type" minOccurs "
> <element name "email" type "eppcom:minTokenType" minOccurs "
> <element name "url" type "anyURI" minOccurs "
> <element name "contact" type "org:contactType" minOccurs "0
> <element name "crID" type "eppcom:
> <element name "crDate" type "dateTime"/>
<element name "upID" type "eppcom:
> <element name "upDate" type "dateTime" minOccurs "
> <sequence> <element name "id" type "
Internationalization Considerations EPP is represented in XML, which provides native support for encoding information using the Unicode character set [UNICODE] and its more compact representations, including UTF 8.
Conformant XML processors recognize both UTF 8 [RFC3629] and UTF 16 [RFC2781].
Though XML includes provisions to identify and use other character encodings through use of an "encoding" attribute in an <?
> declaration, use of UTF 8 is RECOMMENDED.
As an extension of the EPP organization object mapping, the elements and element content described in this document MUST inherit the internationalization conventions used to represent higher layer domain and core protocol structures present in an XML instance that includes this extension.
This document uses URNs to describe XML namespaces and XML schemas conforming to a registry mechanism described in [RFC3688].
IANA has assigned the following URI.
org 1.0 Registrant Contact: IESG XML: None.
Namespace URIs do not represent an XML specification.
: See the "Formal Syntax" section of RFC 8543 (this document).
The EPP extension described in this document has been registered by IANA in the "Extensions for the Extensible Provisioning Protocol (EPP)" registry described in [RFC7451].
The details of the registration are as follows: Name of Extension: Extensible Provisioning Protocol
(EPP) Organization Mapping Document status:
RFC 8543 Registrant Name and Email Address: IESG,
Any IPR Disclosure: None Status:
Role Type Values Registry IANA has created a new category of protocol registry for values of the organization roles.
The name of this registry is "EPP Organization Role Values".
The registration policy for this registry is "Expert Review" [RFC8126].
The string value being registered.
Brief description of the organization role values.
For RFC specifications, state "IESG".
For other specifications, give the name of the responsible party.
An email address, postal address, or some other information to be used to contact the registrant.
The following are the initial registry contents:
registrar Description: The entity object instance represents the authority responsible for the registration in the registry.
reseller Description: The entity object
instance represents a third party through which the registration was conducted (i.e., not the registry or registrar).
privacyproxy Description: The entity object instance represents a third party who could help to register a domain without exposing the registrants' private information.
: The entity object instance represents a third party DNS operator that maintains the name servers and zone data on behalf of a registrant.
The organization object may have personally identifiable information, such as <org:contact>.
This information is not a required element in this document that can be provided on a voluntary basis.
If it is provided, both client and server MUST ensure that authorization information is stored and exchanged with high grade encryption mechanisms to provide privacy services, which are specified in [RFC5733].
The security considerations described in [RFC5730] or those caused by the protocol layers used by EPP will apply to this specification as well.
