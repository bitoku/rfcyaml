- title: __initial_text__
  contents:
  - '   Virtual Subnet: A BGP/MPLS IP VPN-Based Subnet Extension Solution

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a BGP/MPLS IP VPN-based subnet extension\n\
    \   solution referred to as \"Virtual Subnet\", which can be used for\n   building\
    \ Layer 3 network virtualization overlays within and/or\n   between data centers.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7814.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  Solution Description  . . . . . . . . . . . . . . . . .\
    \ . . .   5\n     3.1.  Unicast . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   5\n       3.1.1.  Intra-subnet Unicast  . . . . . . . . . . . . . . .\
    \ .   5\n       3.1.2.  Inter-subnet Unicast  . . . . . . . . . . . . . . . .\
    \   6\n     3.2.  Multicast . . . . . . . . . . . . . . . . . . . . . . . .  \
    \ 8\n     3.3.  Host Discovery  . . . . . . . . . . . . . . . . . . . . .   9\n\
    \     3.4.  ARP/ND Proxy  . . . . . . . . . . . . . . . . . . . . . .   9\n  \
    \   3.5.  Host Mobility . . . . . . . . . . . . . . . . . . . . . .   9\n    \
    \ 3.6.  Forwarding Table Scalability on Data-Center Switches  . .  10\n     3.7.\
    \  ARP/ND Cache Table Scalability on Default Gateways  . . .  10\n     3.8.  ARP/ND\
    \ and Unknown Unicast Flood Avoidance  . . . . . . .  10\n     3.9.  Path Optimization\
    \ . . . . . . . . . . . . . . . . . . . .  10\n   4.  Limitations . . . . . .\
    \ . . . . . . . . . . . . . . . . . . .  11\n     4.1.  Non-support of Non-IP\
    \ Traffic . . . . . . . . . . . . . .  11\n     4.2.  Non-support of IP Broadcast\
    \ and Link-Local Multicast  . .  11\n     4.3.  TTL and Traceroute  . . . . .\
    \ . . . . . . . . . . . . . .  11\n   5.  Security Considerations . . . . . .\
    \ . . . . . . . . . . . . .  12\n   6.  References  . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .  12\n     6.1.  Normative References  . . . . . . .\
    \ . . . . . . . . . . .  12\n     6.2.  Informative References  . . . . . . .\
    \ . . . . . . . . . .  13\n   Acknowledgements  . . . . . . . . . . . . . . .\
    \ . . . . . . . . .  14\n   Authors' Addresses  . . . . . . . . . . . . . . .\
    \ . . . . . . . .  15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   For business continuity purposes, Virtual Machine (VM) migration\n\
    \   across data centers is commonly used in situations such as data-\n   center\
    \ maintenance, migration, consolidation, expansion, or disaster\n   avoidance.\
    \  The IETF community has recognized that IP renumbering of\n   servers (i.e.,\
    \ VMs) after the migration is usually complex and\n   costly.  To allow the migration\
    \ of a VM from one data center to\n   another without IP renumbering, the subnet\
    \ on which the VM resides\n   needs to be extended across these data centers.\n\
    \   To achieve subnet extension across multiple cloud data centers in a\n   scalable\
    \ way, the following requirements and challenges must be\n   considered:\n   a.\
    \  VPN Instance Space Scalability: In a modern cloud data-center\n       environment,\
    \ thousands or even tens of thousands of tenants could\n       be hosted over\
    \ a shared network infrastructure.  For security and\n       performance isolation\
    \ purposes, these tenants need to be isolated\n       from one another.\n   b.\
    \  Forwarding Table Scalability: With the development of server\n       virtualization\
    \ technologies, it's not uncommon for a single cloud\n       data center to contain\
    \ millions of VMs.  This number already\n       implies a big challenge to the\
    \ forwarding table scalability of\n       data-center switches.  Provided multiple\
    \ data centers of such\n       scale were interconnected at Layer 2, this challenge\
    \ would become\n       even worse.\n   c.  ARP/ND Cache Table Scalability: [RFC6820]\
    \ notes that the Address\n       Resolution Protocol (ARP) / Neighbor Discovery\
    \ (ND) cache tables\n       maintained by default gateways within cloud data centers\
    \ can\n       raise scalability issues.  Therefore, mastering the size of the\n\
    \       ARP/ND cache tables is critical as the number of data centers to\n   \
    \    be connected increases.\n   d.  ARP/ND and Unknown Unicast Flooding: It's\
    \ well-known that the\n       flooding of ARP/ND broadcast/multicast messages\
    \ as well as\n       unknown unicast traffic within large Layer 2 networks is\
    \ likely\n       to affect network and host performance.  When multiple data\n\
    \       centers that each host millions of VMs are interconnected at\n       Layer\
    \ 2, the impact of such flooding would become even worse.  As\n       such, it\
    \ becomes increasingly important to avoid the flooding of\n       ARP/ND broadcast/multicast\
    \ as well as unknown unicast traffic\n       across data centers.\n   e.  Path\
    \ Optimization: A subnet usually indicates a location in the\n       network.\
    \  However, when a subnet has been extended across\n       multiple geographically\
    \ dispersed data-center locations, the\n       location semantics of such a subnet\
    \ is not retained any longer.\n       As a result, traffic exchanged between a\
    \ specific user and a\n       server that would be located in different data centers\
    \ may first\n       be forwarded through a third data center.  This suboptimal\n\
    \       routing would obviously result in unnecessary consumption of the\n   \
    \    bandwidth resources between data centers.  Furthermore, in the\n       case\
    \ where traditional Virtual Private LAN Service (VPLS)\n       technology [RFC4761]\
    \ [RFC4762] is used for data-center\n       interconnect, return traffic from\
    \ a server may be forwarded to a\n       default gateway located in a different\
    \ data center due to the\n       configuration of a virtual router redundancy\
    \ group.  This\n       suboptimal routing would also unnecessarily consume the\
    \ bandwidth\n       resources between data centers.\n   This document describes\
    \ a BGP/MPLS IP VPN-based subnet extension\n   solution referred to as \"Virtual\
    \ Subnet\", which can be used for data-\n   center interconnection while addressing\
    \ all of the aforementioned\n   requirements and challenges.  Here, the BGP/MPLS\
    \ IP VPN means both\n   BGP/MPLS IPv4 VPN [RFC4364] and BGP/MPLS IPv6 VPN [RFC4659].\
    \  In\n   addition, since Virtual Subnet is built mainly on proven technologies\n\
    \   such as BGP/MPLS IP VPN and ARP/ND proxy [RFC925] [RFC1027]\n   [RFC4389],\
    \ those service providers that provide Infrastructure as a\n   Service (IaaS)\
    \ cloud services can rely upon their existing BGP/MPLS\n   IP VPN infrastructure\
    \ and take advantage of their BGP/MPLS VPN\n   operational experience to interconnect\
    \ data centers.\n   Although Virtual Subnet is described in this document as an\
    \ approach\n   for data-center interconnection, it can be used within data centers\n\
    \   as well.\n   Note that the approach described in this document is not intended\
    \ to\n   achieve an exact emulation of Layer 2 connectivity, and therefore it\n\
    \   can only support a restricted Layer 2 connectivity service model with\n  \
    \ limitations that are discussed in Section 4.  The discussion about\n   where\
    \ this service model can apply is outside the scope of this\n   document.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This memo makes use of the terms defined in [RFC4364].\n"
- title: 3.  Solution Description
  contents:
  - '3.  Solution Description

    '
- title: 3.1.  Unicast
  contents:
  - '3.1.  Unicast

    '
- title: 3.1.1.  Intra-subnet Unicast
  contents:
  - "3.1.1.  Intra-subnet Unicast\n                           +--------------------+\n\
    \    +------------------+   |                    |   +------------------+\n  \
    \  |VPN_A:192.0.2.1/24|   |                    |   |VPN_A:192.0.2.1/24|\n    |\
    \              \\   |   |                    |   |  /               |\n    | \
    \   +------+   \\ ++---+-+                +-+---++/   +------+     |\n    |  \
    \  |Host A+-----+ PE-1 |                | PE-2 +----+Host B|     |\n    |    +------+\\\
    \    ++-+-+-+                +-+-+-++   /+------+     |\n    |     192.0.2.2/24\
    \ | | |                    | | |  192.0.2.3/24    |\n    |                  |\
    \ | |                    | | |                  |\n    |     DC West      | |\
    \ |  IP/MPLS Backbone  | | |     DC East      |\n    +------------------+ | |\
    \                    | | +------------------+\n                         | +--------------------+\
    \ |\n                         |                        |\n"
- title: 'VRF_A :                  V                VRF_A : V'
  contents:
  - 'VRF_A :                  V                VRF_A : V

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|   Prefix   |Next hop |Protocol|      |   Prefix   |Next hop |Protocol|'
  contents:
  - '|   Prefix   |Next hop |Protocol|      |   Prefix   |Next hop |Protocol|

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.1/32|127.0.0.1| Direct |      |192.0.2.1/32|127.0.0.1| Direct |'
  contents:
  - '|192.0.2.1/32|127.0.0.1| Direct |      |192.0.2.1/32|127.0.0.1| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.2/32|192.0.2.2| Direct |      |192.0.2.2/32|   PE-1  |  IBGP  |'
  contents:
  - '|192.0.2.2/32|192.0.2.2| Direct |      |192.0.2.2/32|   PE-1  |  IBGP  |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.3/32|   PE-2  |  IBGP  |      |192.0.2.3/32|192.0.2.3| Direct |'
  contents:
  - '|192.0.2.3/32|   PE-2  |  IBGP  |      |192.0.2.3/32|192.0.2.3| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.0/24|192.0.2.1| Direct |      |192.0.2.0/24|192.0.2.1| Direct |'
  contents:
  - '|192.0.2.0/24|192.0.2.1| Direct |      |192.0.2.0/24|192.0.2.1| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - "+------------+---------+--------+      +------------+---------+--------+\n  \
    \                Figure 1: Intra-subnet Unicast Example\n   As shown in Figure\
    \ 1, two hosts (i.e., Hosts A and B) belonging to\n   the same subnet (i.e., 192.0.2.0/24)\
    \ are located in different data\n   centers (i.e., DC West and DC East), respectively.\
    \  PE routers (i.e.,\n   PE-1 and PE-2) that are used for interconnecting these\
    \ two data\n   centers create host routes for their own local hosts respectively\
    \ and\n   then advertise these routes by means of the BGP/MPLS IP VPN\n   signaling.\
    \  Meanwhile, an ARP proxy is enabled on Virtual Routing and\n   Forwarding (VRF)\
    \ attachment circuits of these PE routers.\n   Let's now assume that Host A sends\
    \ an ARP request for Host B before\n   communicating with Host B.  Upon receiving\
    \ the ARP request, PE-1\n   acting as an ARP proxy returns its own MAC address\
    \ as a response.\n   Host A then sends IP packets for Host B to PE-1.  PE-1 tunnels\
    \ such\n   packets towards PE-2, which in turn forwards them to Host B.  Thus,\n\
    \   Hosts A and B can communicate with each other as if they were located\n  \
    \ within the same subnet.\n"
- title: 3.1.2.  Inter-subnet Unicast
  contents:
  - "3.1.2.  Inter-subnet Unicast\n                           +--------------------+\n\
    \    +------------------+   |                    |   +------------------+\n  \
    \  |VPN_A:192.0.2.1/24|   |                    |   |VPN_A:192.0.2.1/24|\n    |\
    \              \\   |   |                    |   |  /               |\n    | \
    \ +------+     \\ ++---+-+                +-+---++/     +------+   |\n    |  |Host\
    \ A+-------+ PE-1 |                | PE-2 +-+----+Host B|   |\n    |  +------+\\\
    \      ++-+-+-+                +-+-+-++ |   /+------+   |\n    |   192.0.2.2/24\
    \   | | |                    | | |  | 192.0.2.3/24  |\n    |   GW=192.0.2.4  \
    \ | | |                    | | |  | GW=192.0.2.4  |\n    |                  |\
    \ | |                    | | |  |    +------+   |\n    |                  | |\
    \ |                    | | |  +----+  GW  +-- |\n    |                  | | |\
    \                    | | |      /+------+   |\n    |                  | | |  \
    \                  | | |    192.0.2.4/24  |\n    |                  | | |    \
    \                | | |                  |\n    |     DC West      | | |  IP/MPLS\
    \ Backbone  | | |      DC East     |\n    +------------------+ | |           \
    \         | | +------------------+\n                        | +--------------------+\
    \ |\n                        |                        |\n"
- title: 'VRF_A :                 V                VRF_A : V'
  contents:
  - 'VRF_A :                 V                VRF_A : V

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|   Prefix   |Next hop |Protocol|      |   Prefix   |Next hop |Protocol|'
  contents:
  - '|   Prefix   |Next hop |Protocol|      |   Prefix   |Next hop |Protocol|

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.1/32|127.0.0.1| Direct |      |192.0.2.1/32|127.0.0.1| Direct |'
  contents:
  - '|192.0.2.1/32|127.0.0.1| Direct |      |192.0.2.1/32|127.0.0.1| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.2/32|192.0.2.2| Direct |      |192.0.2.2/32|  PE-1   |  IBGP  |'
  contents:
  - '|192.0.2.2/32|192.0.2.2| Direct |      |192.0.2.2/32|  PE-1   |  IBGP  |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.3/32|   PE-2  |  IBGP  |      |192.0.2.3/32|192.0.2.3| Direct |'
  contents:
  - '|192.0.2.3/32|   PE-2  |  IBGP  |      |192.0.2.3/32|192.0.2.3| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.4/32|   PE-2  |  IBGP  |      |192.0.2.4/32|192.0.2.4| Direct |'
  contents:
  - '|192.0.2.4/32|   PE-2  |  IBGP  |      |192.0.2.4/32|192.0.2.4| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.0/24|192.0.2.1| Direct |      |192.0.2.0/24|192.0.2.1| Direct |'
  contents:
  - '|192.0.2.0/24|192.0.2.1| Direct |      |192.0.2.0/24|192.0.2.1| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '| 0.0.0.0/0  |   PE-2  |  IBGP  |      | 0.0.0.0/0  |192.0.2.4| Static |'
  contents:
  - '| 0.0.0.0/0  |   PE-2  |  IBGP  |      | 0.0.0.0/0  |192.0.2.4| Static |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - "+------------+---------+--------+      +------------+---------+--------+\n  \
    \              Figure 2: Inter-subnet Unicast Example (1)\n   As shown in Figure\
    \ 2, only one data center (i.e., DC East) is\n   deployed with a default gateway\
    \ (i.e., GW).  PE-2, which is connected\n   to GW, would either be configured\
    \ with or have learned a default\n   route from GW with the next hop being pointed\
    \ at GW.  Meanwhile, this\n   route is distributed to other PE routers (i.e.,\
    \ PE-1) as per normal\n   operation as described in [RFC4364].  Assume Host A\
    \ sends an ARP\n   request for its default gateway (i.e., 192.0.2.4) prior to\n\
    \   communicating with a destination host outside of its subnet.  Upon\n   receiving\
    \ this ARP request, PE-1 acting as an ARP proxy returns its\n   own MAC address\
    \ as a response.  Host A then sends a packet for Host B\n   to PE-1.  PE-1 tunnels\
    \ such a packet towards PE-2 according to the\n   default route learned from PE-2,\
    \ which in turn forwards that packet\n   to GW.\n                           +--------------------+\n\
    \    +------------------+   |                    |   +------------------+\n  \
    \  |VPN_A:192.0.2.1/24|   |                    |   |VPN_A:192.0.2.1/24|\n    |\
    \              \\   |   |                    |   |  /               |\n    | \
    \ +------+     \\ ++---+-+                +-+---++/     +------+   |\n    |  |Host\
    \ A+----+--+ PE-1 |                | PE-2 +-+----+Host B|   |\n    |  +------+\\\
    \   |  ++-+-+-+                +-+-+-++ |   /+------+   |\n    |  192.0.2.2/24\
    \ |  | | |                    | | |  | 192.0.2.3/24  |\n    |  GW=192.0.2.4 |\
    \  | | |                    | | |  | GW=192.0.2.4  |\n    |  +------+    |   |\
    \ | |                    | | |  |    +------+   |\n    |--+ GW-1 +----+   | |\
    \ |                    | | |  +----+ GW-2 +-- |\n    |  +------+\\       | | |\
    \                    | | |      /+------+   |\n    |  192.0.2.4/24    | | |  \
    \                  | | |    192.0.2.4/24  |\n    |                  | | |    \
    \                | | |                  |\n    |     DC West      | | |  IP/MPLS\
    \ Backbone  | | |      DC East     |\n    +------------------+ | |           \
    \         | | +------------------+\n                        | +--------------------+\
    \ |\n                        |                        |\n"
- title: 'VRF_A :                 V                VRF_A : V'
  contents:
  - 'VRF_A :                 V                VRF_A : V

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|   Prefix   |Next hop |Protocol|      |   Prefix   |Next hop |Protocol|'
  contents:
  - '|   Prefix   |Next hop |Protocol|      |   Prefix   |Next hop |Protocol|

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.1/32|127.0.0.1| Direct |      |192.0.2.1/32|127.0.0.1| Direct |'
  contents:
  - '|192.0.2.1/32|127.0.0.1| Direct |      |192.0.2.1/32|127.0.0.1| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.2/32|192.0.2.2| Direct |      |192.0.2.2/32|  PE-1   |  IBGP  |'
  contents:
  - '|192.0.2.2/32|192.0.2.2| Direct |      |192.0.2.2/32|  PE-1   |  IBGP  |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.3/32|   PE-2  |  IBGP  |      |192.0.2.3/32|192.0.2.3| Direct |'
  contents:
  - '|192.0.2.3/32|   PE-2  |  IBGP  |      |192.0.2.3/32|192.0.2.3| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.4/32|192.0.2.4| Direct |      |192.0.2.4/32|192.0.2.4| Direct |'
  contents:
  - '|192.0.2.4/32|192.0.2.4| Direct |      |192.0.2.4/32|192.0.2.4| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.0/24|192.0.2.1| Direct |      |192.0.2.0/24|192.0.2.1| Direct |'
  contents:
  - '|192.0.2.0/24|192.0.2.1| Direct |      |192.0.2.0/24|192.0.2.1| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '| 0.0.0.0/0  |192.0.2.4| Static |      | 0.0.0.0/0  |192.0.2.4| Static |'
  contents:
  - '| 0.0.0.0/0  |192.0.2.4| Static |      | 0.0.0.0/0  |192.0.2.4| Static |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - "+------------+---------+--------+      +------------+---------+--------+\n  \
    \              Figure 3: Inter-subnet Unicast Example (2)\n   As shown in Figure\
    \ 3, in the case where each data center is deployed\n   with a default gateway,\
    \ hosts will get ARP responses directly from\n   their local default gateways,\
    \ rather than from their local PE routers\n   when sending ARP requests for their\
    \ default gateways.\n                                  +------+\n            \
    \               +------+ PE-3 +------+\n    +------------------+   |      +------+\
    \      |   +------------------+\n    |VPN_A:192.0.2.1/24|   |                \
    \    |   |VPN_A:192.0.2.1/24|\n    |              \\   |   |                 \
    \   |   |  /               |\n    |  +------+     \\ ++---+-+                +-+---++/\
    \     +------+   |\n    |  |Host A+-------+ PE-1 |                | PE-2 +------+Host\
    \ B|   |\n    |  +------+\\      ++-+-+-+                +-+-+-++     /+------+\
    \   |\n    |  192.0.2.2/24    | | |                    | | |    192.0.2.3/24 \
    \ |\n    |  GW=192.0.2.1    | | |                    | | |    GW=192.0.2.1  |\n\
    \    |                  | | |                    | | |                  |\n  \
    \  |     DC West      | | |  IP/MPLS Backbone  | | |      DC East     |\n    +------------------+\
    \ | |                    | | +------------------+\n                         |\
    \ +--------------------+ |\n                         |                       \
    \ |\n"
- title: 'VRF_A :                  V                VRF_A : V'
  contents:
  - 'VRF_A :                  V                VRF_A : V

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|   Prefix   |Next hop |Protocol|      |   Prefix   |Next hop |Protocol|'
  contents:
  - '|   Prefix   |Next hop |Protocol|      |   Prefix   |Next hop |Protocol|

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.1/32|127.0.0.1| Direct |      |192.0.2.1/32|127.0.0.1| Direct |'
  contents:
  - '|192.0.2.1/32|127.0.0.1| Direct |      |192.0.2.1/32|127.0.0.1| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.2/32|192.0.2.2| Direct |      |192.0.2.2/32|  PE-1   |  IBGP  |'
  contents:
  - '|192.0.2.2/32|192.0.2.2| Direct |      |192.0.2.2/32|  PE-1   |  IBGP  |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.3/32|   PE-2  |  IBGP  |      |192.0.2.3/32|192.0.2.3| Direct |'
  contents:
  - '|192.0.2.3/32|   PE-2  |  IBGP  |      |192.0.2.3/32|192.0.2.3| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '|192.0.2.0/24|192.0.2.1| Direct |      |192.0.2.0/24|192.0.2.1| Direct |'
  contents:
  - '|192.0.2.0/24|192.0.2.1| Direct |      |192.0.2.0/24|192.0.2.1| Direct |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - '+------------+---------+--------+      +------------+---------+--------+

    '
- title: '| 0.0.0.0/0  |   PE-3  |  IBGP  |      | 0.0.0.0/0  |   PE-3  |  IBGP  |'
  contents:
  - '| 0.0.0.0/0  |   PE-3  |  IBGP  |      | 0.0.0.0/0  |   PE-3  |  IBGP  |

    '
- title: +------------+---------+--------+      +------------+---------+--------+
  contents:
  - "+------------+---------+--------+      +------------+---------+--------+\n  \
    \              Figure 4: Inter-subnet Unicast Example (3)\n   Alternatively, as\
    \ shown in Figure 4, PE routers themselves could be\n   configured as default\
    \ gateways for their locally connected hosts as\n   long as these PE routers have\
    \ routes to reach outside networks.\n"
- title: 3.2.  Multicast
  contents:
  - "3.2.  Multicast\n   To support IP multicast between hosts of the same Virtual\
    \ Subnet,\n   Multicast VPN (MVPN) technologies [RFC6513] could be used without\
    \ any\n   change.  For example, PE routers attached to a given VPN join a\n  \
    \ default provider multicast distribution tree that is dedicated to\n   that VPN.\
    \  Ingress PE routers, upon receiving multicast packets from\n   their local hosts,\
    \ forward them towards remote PE routers through the\n   corresponding default\
    \ provider multicast distribution tree.  Within\n   this context, the IP multicast\
    \ doesn't include link-local multicast.\n"
- title: 3.3.  Host Discovery
  contents:
  - "3.3.  Host Discovery\n   PE routers should be able to dynamically discover their\
    \ local hosts\n   and keep the list of these hosts up-to-date in a timely manner\
    \ to\n   ensure the availability and accuracy of the corresponding host routes\n\
    \   originated from them.  PE routers could accomplish local host\n   discovery\
    \ by some traditional host-discovery mechanisms using ARP or\n   ND protocols.\n"
- title: 3.4.  ARP/ND Proxy
  contents:
  - "3.4.  ARP/ND Proxy\n   Acting as an ARP or ND proxy, a PE router should only\
    \ respond to an\n   ARP request or Neighbor Solicitation (NS) message for a target\
    \ host\n   when it has a best route for that target host in the associated VRF\n\
    \   and the outgoing interface of that best route is different from the\n   one\
    \ over which the ARP request or NS message is received.  In the\n   scenario where\
    \ a given VPN site (i.e., a data center) is multihomed\n   to more than one PE\
    \ router via an Ethernet switch or an Ethernet\n   network, the Virtual Router\
    \ Redundancy Protocol (VRRP) [RFC5798] is\n   usually enabled on these PE routers.\
    \  In this case, only the PE\n   router being elected as the VRRP Master is allowed\
    \ to perform the\n   ARP/ND proxy function.\n"
- title: 3.5.  Host Mobility
  contents:
  - "3.5.  Host Mobility\n   During the VM migration process, the PE router to which\
    \ the moving VM\n   is now attached would create a host route for that host upon\n\
    \   receiving a notification message of VM attachment (e.g., a gratuitous\n  \
    \ ARP or unsolicited NA message).  The PE router to which the moving VM\n   was\
    \ previously attached would withdraw the corresponding host route\n   when noticing\
    \ the detachment of that VM.  Meanwhile, the latter PE\n   router could optionally\
    \ broadcast a gratuitous ARP or send an\n   unsolicited NA message on behalf of\
    \ that host with the source MAC\n   address being one of its own.  In this way,\
    \ the ARP/ND entry of this\n   host that moved and that has been cached on any\
    \ local host would be\n   updated accordingly.  In the case where there is no\
    \ explicit VM\n   detachment notification mechanism, the PE router could also\
    \ use the\n   following trick to detect the VM detachment: upon learning a route\n\
    \   update for a local host from a remote PE router for the first time,\n   the\
    \ PE router could immediately check whether that local host is\n   still attached\
    \ to it by some means (e.g., ARP/ND PING and/or ICMP\n   PING).  It is important\
    \ to ensure that the same MAC and IP are\n   associated to the default gateway\
    \ active in each data center, as the\n   VM would most likely continue to send\
    \ packets to the same default\n   gateway address after having migrated from one\
    \ data center to\n   another.  One possible way to achieve this goal is to configure\
    \ the\n   same VRRP group on each location to ensure that the default gateway\n\
    \   active in each data center shares the same virtual MAC and virtual IP\n  \
    \ addresses.\n"
- title: 3.6.  Forwarding Table Scalability on Data-Center Switches
  contents:
  - "3.6.  Forwarding Table Scalability on Data-Center Switches\n   In a Virtual Subnet\
    \ environment, the MAC learning domain associated\n   with a given Virtual Subnet\
    \ that has been extended across multiple\n   data centers is partitioned into\
    \ segments, and each segment is\n   confined within a single data center.  Therefore,\
    \ data-center\n   switches only need to learn local MAC addresses, rather than\
    \ learning\n   both local and remote MAC addresses.\n"
- title: 3.7.  ARP/ND Cache Table Scalability on Default Gateways
  contents:
  - "3.7.  ARP/ND Cache Table Scalability on Default Gateways\n   When default gateway\
    \ functions are implemented on PE routers as shown\n   in Figure 4, the ARP/ND\
    \ cache table on each PE router only needs to\n   contain ARP/ND entries of local\
    \ hosts.  As a result, the ARP/ND cache\n   table size would not grow as the number\
    \ of data centers to be\n   connected increases.\n"
- title: 3.8.  ARP/ND and Unknown Unicast Flood Avoidance
  contents:
  - "3.8.  ARP/ND and Unknown Unicast Flood Avoidance\n   In a Virtual Subnet environment,\
    \ the flooding domain associated with\n   a given Virtual Subnet that was extended\
    \ across multiple data\n   centers, is partitioned into segments and each segment\
    \ is confined\n   within a single data center.  Therefore, the performance impact\
    \ on\n   networks and servers imposed by the flooding of ARP/ND broadcast/\n \
    \  multicast and unknown unicast traffic is minimized.\n"
- title: 3.9.  Path Optimization
  contents:
  - "3.9.  Path Optimization\n   As shown in Figure 4, to optimize the forwarding\
    \ path for the traffic\n   between cloud users and cloud data centers, PE routers\
    \ located in\n   cloud data centers (i.e., PE-1 and PE-2), which are also acting\
    \ as\n   default gateways, propagate host routes for their own local hosts to\n\
    \   remote PE routers that are attached to cloud user sites (i.e., PE-3).\n  \
    \ As such, traffic from cloud user sites to a given server on the\n   Virtual\
    \ Subnet that has been extended across data centers would be\n   forwarded directly\
    \ to the data-center location where that server\n   resides, since traffic is\
    \ now forwarded according to the host route\n   for that server, rather than the\
    \ subnet route.  Furthermore, for\n   traffic coming from cloud data centers and\
    \ forwarded to cloud user\n   sites, each PE router acting as a default gateway\
    \ would forward\n   traffic according to the longest-match route in the corresponding\n\
    \   VRF.  As a result, traffic from data centers to cloud user sites is\n   forwarded\
    \ along an optimal path as well.\n"
- title: 4.  Limitations
  contents:
  - '4.  Limitations

    '
- title: 4.1.  Non-support of Non-IP Traffic
  contents:
  - "4.1.  Non-support of Non-IP Traffic\n   Although most traffic within and across\
    \ data centers is IP traffic,\n   there may still be a few legacy clustering applications\
    \ that rely on\n   non-IP communications (e.g., heartbeat messages between cluster\n\
    \   nodes).  Since Virtual Subnet is strictly based on L3 forwarding,\n   those\
    \ non-IP communications cannot be supported in the Virtual Subnet\n   solution.\
    \  In order to support those few non-IP traffic (if present)\n   in the environment\
    \ where the Virtual Subnet solution has been\n   deployed, the approach following\
    \ the idea of \"route all IP traffic,\n   bridge non-IP traffic\" could be considered.\
    \  In other words, all IP\n   traffic including both intra- and inter-subnet,\
    \ would be processed\n   according to the Virtual Subnet design, while non-IP\
    \ traffic would be\n   forwarded according to a particular Layer 2 VPN approach.\
    \  Such a\n   unified L2/L3 VPN approach requires ingress PE routers to classify\n\
    \   packets received from hosts before distributing them to the\n   corresponding\
    \ L2 or L3 VPN forwarding processes.  Note that more and\n   more cluster vendors\
    \ are offering clustering applications based on\n   Layer 3 interconnection.\n"
- title: 4.2.  Non-support of IP Broadcast and Link-Local Multicast
  contents:
  - "4.2.  Non-support of IP Broadcast and Link-Local Multicast\n   As illustrated\
    \ before, intra-subnet traffic across PE routers is\n   forwarded at Layer 3 in\
    \ the Virtual Subnet solution.  Therefore, IP\n   broadcast and link-local multicast\
    \ traffic cannot be forwarded across\n   PE routers in the Virtual Subnet solution.\
    \  In order to support the\n   IP broadcast and link-local multicast traffic in\
    \ the environment\n   where the Virtual Subnet solution has been deployed, the\
    \ unified L2/\n   L3 overlay approach as described in Section 4.1 could be considered\n\
    \   as well.  That is, IP broadcast and link-local multicast messages\n   would\
    \ be forwarded at Layer 2 while routable IP traffic would be\n   processed according\
    \ to the Virtual Subnet design.\n"
- title: 4.3.  TTL and Traceroute
  contents:
  - "4.3.  TTL and Traceroute\n   As mentioned before, intra-subnet traffic is forwarded\
    \ at Layer 3 in\n   the Virtual Subnet context.  Since it doesn't require any\
    \ change to\n   the Time-To-Live (TTL) handling mechanism of the BGP/MPLS IP VPN,\n\
    \   when doing a traceroute operation on one host for another host\n   (assuming\
    \ that these two hosts are within the same subnet but are\n   attached to different\
    \ sites), the traceroute output would reflect the\n   fact that these two hosts\
    \ within the same subnet are actually\n   connected via a Virtual Subnet, rather\
    \ than a Layer 2 connection\n   since the PE routers to which those two hosts\
    \ are connected would be\n   displayed in the traceroute output.  In addition,\
    \ for any other\n   applications that generate intra-subnet traffic with TTL set\
    \ to 1,\n   these applications may not work properly in the Virtual Subnet\n \
    \  context, unless special TTL processing and loop-prevention mechanisms\n   for\
    \ such context have been implemented.  Details about such special\n   TTL processing\
    \ and loop-prevention mechanisms are outside the scope\n   of this document.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Since the BGP/MPLS IP VPN signaling is reused\
    \ without any change,\n   those security considerations as described in [RFC4364]\
    \ are\n   applicable to this document.  Meanwhile, since security issues\n   associated\
    \ with the NDP are inherited due to the use of NDP proxy,\n   those security considerations\
    \ and recommendations as described in\n   [RFC6583] are applicable to this document\
    \ as well.\n   Inter-data-center traffic often carries highly sensitive information\n\
    \   at higher layers that is not directly understood (parsed) within an\n   egress\
    \ or ingress PE.  For example, migrating a VM will often mean\n   moving private\
    \ keys and other sensitive configuration information.\n   For this reason, inter-data-center\
    \ traffic should always be protected\n   for both confidentiality and integrity\
    \ using a strong security\n   mechanism such as IPsec [RFC4301].  In the future,\
    \ it may be feasible\n   to protect that traffic within the MPLS layer [MPLS-SEC]\
    \ though at\n   the time of writing, the mechanism for that is not sufficiently\n\
    \   mature to recommend.  Exactly how such security mechanisms are\n   deployed\
    \ will vary from case to case, so securing the inter-data-\n   center traffic\
    \ may or may not involve deploying security mechanisms\n   on the ingress/egress\
    \ PEs or further \"inside\" the data centers\n   concerned.  Note though that\
    \ if security is not deployed on the\n   egress/ingress PEs, there is a substantial\
    \ risk that some sensitive\n   traffic may be sent in the clear and will therefore\
    \ be vulnerable to\n   pervasive monitoring [RFC7258] or other attacks.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC925]   Postel, J., \"Multi-LAN address resolution\"\
    , RFC 925,\n              DOI 10.17487/RFC0925, October 1984,\n              <http://www.rfc-editor.org/info/rfc925>.\n\
    \   [RFC1027]  Carl-Mitchell, S. and J. Quarterman, \"Using ARP to\n         \
    \     implement transparent subnet gateways\", RFC 1027,\n              DOI 10.17487/RFC1027,\
    \ October 1987,\n              <http://www.rfc-editor.org/info/rfc1027>.\n   [RFC4364]\
    \  Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual Private\n              Networks\
    \ (VPNs)\", RFC 4364, DOI 10.17487/RFC4364, February\n              2006, <http://www.rfc-editor.org/info/rfc4364>.\n\
    \   [RFC4389]  Thaler, D., Talwar, M., and C. Patel, \"Neighbor Discovery\n  \
    \            Proxies (ND Proxy)\", RFC 4389, DOI 10.17487/RFC4389, April\n   \
    \           2006, <http://www.rfc-editor.org/info/rfc4389>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [MPLS-SEC] Farrel, A. and S. Farrell, \"Opportunistic\
    \ Security in MPLS\n              Networks\", Work in Progress, draft-ietf-mpls-\n\
    \              opportunistic-encrypt-01, March 2016.\n   [RFC4301]  Kent, S. and\
    \ K. Seo, \"Security Architecture for the\n              Internet Protocol\",\
    \ RFC 4301, DOI 10.17487/RFC4301,\n              December 2005, <http://www.rfc-editor.org/info/rfc4301>.\n\
    \   [RFC4659]  De Clercq, J., Ooms, D., Carugi, M., and F. Le Faucheur,\n    \
    \          \"BGP-MPLS IP Virtual Private Network (VPN) Extension for\n       \
    \       IPv6 VPN\", RFC 4659, DOI 10.17487/RFC4659, September 2006,\n        \
    \      <http://www.rfc-editor.org/info/rfc4659>.\n   [RFC4761]  Kompella, K.,\
    \ Ed. and Y. Rekhter, Ed., \"Virtual Private\n              LAN Service (VPLS)\
    \ Using BGP for Auto-Discovery and\n              Signaling\", RFC 4761, DOI 10.17487/RFC4761,\
    \ January 2007,\n              <http://www.rfc-editor.org/info/rfc4761>.\n   [RFC4762]\
    \  Lasserre, M., Ed. and V. Kompella, Ed., \"Virtual Private\n              LAN\
    \ Service (VPLS) Using Label Distribution Protocol (LDP)\n              Signaling\"\
    , RFC 4762, DOI 10.17487/RFC4762, January 2007,\n              <http://www.rfc-editor.org/info/rfc4762>.\n\
    \   [RFC5798]  Nadas, S., Ed., \"Virtual Router Redundancy Protocol (VRRP)\n \
    \             Version 3 for IPv4 and IPv6\", RFC 5798,\n              DOI 10.17487/RFC5798,\
    \ March 2010,\n              <http://www.rfc-editor.org/info/rfc5798>.\n   [RFC6513]\
    \  Rosen, E., Ed. and R. Aggarwal, Ed., \"Multicast in MPLS/\n              BGP\
    \ IP VPNs\", RFC 6513, DOI 10.17487/RFC6513, February\n              2012, <http://www.rfc-editor.org/info/rfc6513>.\n\
    \   [RFC6583]  Gashinsky, I., Jaeggli, J., and W. Kumari, \"Operational\n    \
    \          Neighbor Discovery Problems\", RFC 6583,\n              DOI 10.17487/RFC6583,\
    \ March 2012,\n              <http://www.rfc-editor.org/info/rfc6583>.\n   [RFC6820]\
    \  Narten, T., Karir, M., and I. Foo, \"Address Resolution\n              Problems\
    \ in Large Data Center Networks\", RFC 6820,\n              DOI 10.17487/RFC6820,\
    \ January 2013,\n              <http://www.rfc-editor.org/info/rfc6820>.\n   [RFC7258]\
    \  Farrell, S. and H. Tschofenig, \"Pervasive Monitoring Is an\n             \
    \ Attack\", BCP 188, RFC 7258, DOI 10.17487/RFC7258, May\n              2014,\
    \ <http://www.rfc-editor.org/info/rfc7258>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to Susan Hares, Yongbing Fan, Dino Farinacci, Himanshu\
    \ Shah,\n   Nabil Bitar, Giles Heron, Ronald Bonica, Monique Morrow, Rajiv Asati,\n\
    \   Eric Osborne, Thomas Morin, Martin Vigoureux, Pedro Roque Marque, Joe\n  \
    \ Touch, Wim Henderickx, Alia Atlas, and Stephen Farrell for their\n   valuable\
    \ comments and suggestions on this document.  Thanks to Loa\n   Andersson for\
    \ his WG LC review on this document.  Thanks to Alvaro\n   Retana for his AD review\
    \ on this document.  Thanks to Ronald Bonica\n   for his RtgDir review.  Thanks\
    \ to Donald Eastlake 3rd for his Sec-DIR\n   review of this document.  Thanks\
    \ to Jouni Korhonen for the OPS-Dir\n   review of this document.  Thanks to Roni\
    \ Even for the Gen-ART review\n   of this document.  Thanks to Sabrina Tanamal\
    \ for the IANA review of\n   this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Xiaohu Xu\n   Huawei Technologies\n   No.156 Beiqing Rd\n\
    \   Beijing  100095\n   China\n   Email: xuxiaohu@huawei.com\n   Christian Jacquenet\n\
    \   Orange\n   4 rue du Clos Courtel\n   Cesson-Sevigne,  35512\n   France\n \
    \  Email: christian.jacquenet@orange.com\n   Robert Raszuk\n   Bloomberg LP\n\
    \   731 Lexington Avenue\n   New York City, NY  10022\n   United States\n   Email:\
    \ robert@raszuk.net\n   Truman Boyes\n   Bloomberg LP\n   Email: tboyes@bloomberg.net\n\
    \   Brendan Fee\n   Extreme Networks\n   Email: bfee@extremenetworks.com\n"
