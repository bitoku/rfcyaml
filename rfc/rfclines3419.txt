Abstract This document introduces a Management Information Base (MIB) module that defines textual conventions to represent commonly used transport layer addressing information.
The definitions are compatible with the concept of TAddress/TDomain pairs introduced by the Structure of Management Information version 2 (SMIv2) and support the Internet transport protocols over IPv4 and IPv6. 1.
Introduction Several MIB modules need to represent transport layer addresses in a generic way.
Typical examples are MIBs for application protocols that can operate over several different transports or application management MIBs that need to model generic communication endpoints.
The SMIv2 in STD 58, RFC 2579
[RFC2579] defines the textual conventions TDomain and TAddress to represent generic transport layer endpoints.
A generic TAddress value is interpreted in a given transport domain which is identified by a TDomain value.
The TDomain is an object identifier which allows MIB authors to extend the set of supported transport domains by providing suitable definitions in standardized or enterprise specific MIB modules.
An initial set of TDomain values and concrete TAddress formats has been standardized in STD 62, RFC 3417 [RFC3417].
These definitions are however mixed up with SNMP semantics.
Furthermore, definitions for Internet transport protocols over IPv4 and IPv6 are missing.
The purpose of this memo is to introduce a set of well known textual conventions to represent commonly used transport layer addressing information which is compatible with the original TDomain and TAddress approach and which includes definitions for additional Internet transport protocols over IPv4 and IPv6.
This memo also introduces a new textual convention which enumerates the well known transport domains since such an enumeration provides in many cases sufficient flexibility and is more efficient compared to object identifiers.
The key words "MUST", "MUST NOT", "SHOULD", "SHOULD NOT" and "MAY" in this document are to be interpreted as described in BCP 14,
The Internet Standard Management Framework For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
This MIB module contains definitions for commonly used transport layer addressing information.
In particular, it provides the following definitions: 1.
Textual conventions for generic transport addresses (TransportAddress) and generic transport domains (TransportDomain).
Object identifier registrations for well known transport domains.
An enumeration of the well known transport domains, called a transport address type (TransportAddressType).
A set of textual conventions for the address formats used by well known transport domains.
The DISPLAY HINTs are aligned with the formats used in URIs [RFC2396], [RFC3291].
The textual conventions for well known transport domains support scoped Internet addresses.
The scope of an Internet address is a topological span within which the address may be used as a unique identifier for an interface or set of interfaces.
A scope zone, or simply a zone, is a concrete connected region of topology of a given scope.
Note that a zone is a particular instance of a topological region, whereas a scope is the size of a topological region [SCOPED].
Since Internet addresses on devices that connect multiple zones are not necessarily unique, an additional zone index is needed on these devices to select an interface.
The textual conventions TransportAddressIPv4z and TransportAddressIPv6z are provided to support Internet transport addresses that include a zone index.
In order to support arbitrary combinations of scoped Internet transport addresses, MIB authors SHOULD use a separate TransportDomain or TransportAddressType objects for each TransportAddress object.
There are two different ways how new transport domains and textual conventions for the address formats used by those new transport domains can be defined.
The MIB module contained in this memo can be updated and new constants for the TransportDomain and the TransportAddressType enumeration can be assigned.
Other MIB modules may define additional transport domains and associated textual conventions.
Such an extension can not update the TransportAddressType enumeration.
It is therefore a MIB designers choice whether he uses (a) a more compact TransportAddressType object with limited extensibility or (b) a more verbose TransportDomain object which allows arbitrary extensions in other MIB modules.
The MIB module contained in this memo does NOT define the transport mappings of any particular protocol.
Rather, it defines a set of common identifiers and textual conventions that are intended to be used within various transport mappings documents.
3.1 Relationship to Other MIBs
This section discusses how the definitions provided by the MIB module contained in this memo relate to definitions in other MIB modules.
MIB module [RFC2579] defines the textual conventions TAddress and TDomain to represent generic transport addresses.
A TAddress is an octet string with a size between 1 and 255 octets.
Experience has shown that there is sometimes a need to represent unknown transport addresses.
The MIB module contained in this memo therefore introduces a new textual convention TransportAddress which is an octet string with a size between 0 and 255 octets and otherwise identical semantics.
In other words, the sub type TransportAddress (SIZE (1..255)) is identical with the TAddress defined in the SNMPv2 TC MIB module [RFC2579].
This MIB module also introduces a new textual convention TransportDomain which is compatible with the TDomain definition so that a complete set of definitions is contained in a single MIB module.
New MIB modules SHOULD use the generic TransportDomain, TransportAddressType and TransportAddress definitions defined in this memo.
Existing MIB modules may be updated to use the definitions provided in this memo by replacing TDomain with TransportDomain and TAddress with TransportAddress (SIZE (1..255)).
The transport domain values defined in the SNMPv2 TM MIB module [RFC3417] all contain "snmp" as the prefix in their name and are registered under `snmpDomains' (from RFC 2578 [RFC2578]).
They were originally intended to describe SNMP transport domains only but they were later also used for non SNMP transport endpoints.
These definitions are also incomplete since new transport address domains are needed to support (at least) SNMP over UDP over IPv6.
The transport domain values defined in this memo are independent of the protocol running over the transport layer and SHOULD be used for all transport endpoints not carrying SNMP traffic.
Programs that interpret transport domain values should in addition accept the transport domain values defined in the SNMPv2 TM MIB module in order to provide interoperability with existing implementations that use the SNMP specific transport domain values.
Transport endpoints which carry SNMP traffic SHOULD continue to use the definitions from the SNMPv2 TM MIB module where applicable.
They SHOULD use the transport domain values defined in this memo for SNMP transports not defined in the SNMPv2 TM MIB module, such as SNMP over UDP over IPv6.
Programs that interpret transport domain values should in addition accept all the transport domain values defined in this memo in order to provide interoperability in cases where it is not possible or desirable to distinguish the protocols running over a transport endpoint.
3.1.3 INET ADDRESS MIB (InetAddressType, InetAddress)
The INET ADDRESS MIB MIB module [RFC3291] defines the textual conventions InetAddressType and InetAddress to represent Internet network layer endpoints.
Some MIB modules use these textual conventions in conjunction with the InetPortNumber textual convention to represent Internet transport layer endpoints.
This approach is fine as long as a MIB models protocols or applications that are specific to the Internet suite of transport protocols.
For protocols or applications that can potentially use other transport protocols, the use of the definitions contained in this memo is more appropriate.
Definitions TRANSPORT ADDRESS MIB DEFINITIONS ::
BEGIN IMPORTS MODULE IDENTITY, OBJECT IDENTITY, mib 2
" CONTACT INFO "Juergen Schoenwaelder (Editor) TU Braunschweig
49 531 391 3289 EMail:
bs.de Send comments to <mibs@ops.ietf.org>.
" DESCRIPTION "This MIB module provides commonly used transport address definitions.
This version of this MIB module is part of RFC 3419; see the RFC itself for full legal notices."
The corresponding transport address is of type TransportAddressIPv4 for global IPv4 addresses."
The corresponding transport address is of type TransportAddressIPv6 for global IPv6 addresses."
The corresponding transport address is of type TransportAddressIPv4z for scoped IPv4 addresses with a zone index."
The corresponding transport address is of type TransportAddressIPv6z for scoped IPv6 addresses with a zone index."
The TCP over IPv4 transport domain.
The corresponding transport address is of type TransportAddressIPv4 for global IPv4 addresses."
The corresponding transport address is of type TransportAddressIPv6 for global IPv6 addresses."
The TCP over IPv4 transport domain.
The corresponding transport address is of type TransportAddressIPv4z for scoped IPv4 addresses with a zone index."
The corresponding transport address is of type TransportAddressIPv6z for scoped IPv6 addresses with a zone index."
"The SCTP over IPv4 transport domain.
The corresponding transport address is of type TransportAddressIPv4 for global IPv4 addresses.
This transport domain usually represents the primary address on multihomed SCTP endpoints."
The corresponding transport address is of type TransportAddressIPv6 for global IPv6 addresses.
This transport domain usually represents the primary address on multihomed SCTP endpoints."
The SCTP over IPv4 transport domain.
The corresponding transport address is of type TransportAddressIPv4z for scoped IPv4 addresses with a zone index.
This transport domain usually represents the primary address on multihomed SCTP endpoints."
The SCTP over IPv6 transport domain.
The corresponding transport address is of type TransportAddressIPv6z for scoped IPv6 addresses with a zone index.
This transport domain usually represents the primary address on multihomed SCTP endpoints."
The corresponding transport address is of type TransportAddressLocal.
The Posix Local IPC transport domain incorporates the well known UNIX domain sockets."
The corresponding transport address is of type TransportAddressDns."
The corresponding transport address is of type TransportAddressDns."
The corresponding transport address is of type TransportAddressDns."
"A value that represents a transport domain.
Some possible values, such as transportDomainUdpIpv4, are defined in this module.
Other possible values can be defined in other MIB modules.
The enumerated values of the textual convention below should   be identical to the last sub identifier of the OID registered   for the same domain.
"A value that represents a transport domain.
This is the enumerated version of the transport domain registrations in this MIB module.
This textual convention can be used to represent transport domains in situations where a syntax of TransportDomain is unwieldy (for example, when used as an index).
The usage of this textual convention implies that additional transport domains can only be supported by updating this MIB module.
This extensibility restriction does not apply for the TransportDomain textual convention which allows MIB authors to define additional transport domains independently in other MIB modules.
"Denotes a generic transport address.
A TransportAddress value is always interpreted within the context of a TransportAddressType or TransportDomain value.
Every usage of the TransportAddress textual convention MUST specify the TransportAddressType or TransportDomain object which provides the context.
Furthermore, MIB authors SHOULD define a separate TransportAddressType or TransportDomain object for each TransportAddress object.
It is suggested that the TransportAddressType or TransportDomain is logically registered before the object(s) which use the TransportAddress textual convention if they appear in the same logical row.
The value of a TransportAddress object must always be consistent with the value of the associated TransportAddressType or TransportDomain object.
Attempts to set a TransportAddress object to a value which is inconsistent with the associated TransportAddressType or TransportDomain must fail with an inconsistentValue error.
When this textual convention is used as a syntax of an index object, there may be issues with the limit of 128 sub identifiers specified in SMIv2, STD 58.
In this case, the OBJECT TYPE declaration MUST include a 'SIZE' clause to limit the number of potential instance sub identifiers.
However, if it is used, it MAY be used either on its own or in conjunction with TransportAddressType or TransportDomain as a pair."
However, if it is used, it MAY be used either on its own or in conjunction with TransportAddressType or TransportDomain as a pair."
However, if it is used, it MAY be used either on its own or in conjunction with TransportAddressType or TransportDomain as a pair."
However, if it is used, it MAY be used either on its own or in conjunction with TransportAddressType or TransportDomain as a pair."
The Posix Local IPC transport domain subsumes UNIX domain sockets.
This textual convention SHOULD NOT be used directly in object definitions since it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or in conjunction with TransportAddressType or TransportDomain as a pair.
When this textual convention is used as a syntax of an index object, there may be issues with the limit of 128 sub identifiers specified in SMIv2, STD 58.
In this case, the OBJECT TYPE declaration MUST include a 'SIZE' clause to limit the number of potential instance sub identifiers.
REFERENCE "Protocol Independent Interfaces (IEEE POSIX 1003.1g)
The name SHOULD be fully qualified whenever possible.
Values of this textual convention are not directly useable as transport layer addressing information, and require runtime resolution.
As such, applications that write them must be prepared for handling errors if such values are not supported, or cannot be resolved (if resolution occurs at the time of the management operation).
The DESCRIPTION clause of TransportAddress objects that may have TransportAddressDns values must fully describe how (and when) such names are to be resolved to IP addresses and vice versa.
This textual convention SHOULD NOT be used directly in object definitions since it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or in conjunction with TransportAddressType or TransportDomain as a pair.
When this textual convention is used as a syntax of an index object, there may be issues with the limit of 128 sub identifiers specified in SMIv2, STD 58.
In this case, the OBJECT TYPE declaration MUST include a 'SIZE' clause to limit the number of potential instance sub identifiers.
This section shows some examples how transport addresses are encoded and rendered using some of the transport address definitions.
Posix Local IPC address (UNIX domain).
The MIB module contained in this memo does not define any management objects.
Instead, it defines a set of textual conventions which may be used by other MIB modules to define management objects.
Meaningful security considerations can only be written for MIB modules that define concrete management objects.
This document has therefore no impact on the security of the Internet.
