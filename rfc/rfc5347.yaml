- title: __initial_text__
  contents:
  - '               Media Gateway Control Protocol Fax Package

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a Media Gateway Control Protocol (MGCP) package\n\
    \   to support fax calls.  The package allows for fax calls to be\n   supported\
    \ in two different ways.  The first one utilizes ITU-T\n   Recommendation T.38\
    \ for fax relay under the control of the Call\n   Agent.  The second one lets\
    \ the gateway decide upon a method for fax\n   transmission as well as handle\
    \ the details of the fax call without\n   Call Agent involvement.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions Used in This Document ..........................3\n  \
    \ 2. Fax Package Definition ..........................................3\n    \
    \  2.1. LocalConnectionOptions .....................................3\n      \
    \     2.1.1. T.38 Procedure (Strict or Loose) ....................6\n        \
    \   2.1.2. Gateway Procedure ...................................8\n          \
    \ 2.1.3. Off Procedure .......................................8\n           2.1.4.\
    \ Mode Operation ......................................8\n           2.1.5. Detecting\
    \ a Fax Call ...............................10\n           2.1.6. Considerations\
    \ for Determining Which\n                  Procedures to Request ..............................11\n\
    \      2.2. Events and Signals ........................................13\n  \
    \         2.2.1. Gateway Controlled Fax (gwfax) .....................13\n    \
    \       2.2.2. No Special Fax Handling (nopfax) ...................14\n      \
    \     2.2.3. T.38 Fax Relay (t38) ...............................14\n      2.3.\
    \ Connection Parameters .....................................15\n      2.4. Negotiation\
    \ of T.38 Parameters ............................16\n      2.5. Implementation\
    \ Considerations .............................18\n           2.5.1. Media IP Address\
    \ and Port for T.38 .................18\n           2.5.2. Case Sensitivity ...................................18\n\
    \           2.5.3. Boolean Indicator After T.38 Parameters ............19\n  \
    \ 3. Call Flow Examples .............................................19\n    \
    \  3.1. Call Agent Controlled T.38 Strict .........................20\n      3.2.\
    \ Multiple and Different Options ............................29\n      3.3. Interaction\
    \ with SIP Endpoints ............................37\n   4. Security Considerations\
    \ ........................................44\n   5. IANA Considerations ............................................44\n\
    \   6. Normative References ...........................................44\n  \
    \ 7. Informative References .........................................45\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a Media Gateway Control Protocol (MGCP)\n\
    \   [RFC3435] package that enables MGCP controlled gateways to support\n   fax\
    \ calls.  The package enables fax calls to be supported in two\n   different ways.\
    \  The first one utilizes ITU-T Recommendation T.38\n   using either UDP Transport\
    \ Layer (UDPTL) or TCP (see [T38]) for fax\n   relay under the control of the\
    \ Call Agent.  The second one lets the\n   gateway decide upon a method for fax\
    \ transmission as well as handle\n   the details of the fax call without Call\
    \ Agent involvement.\n   The fax package definition is provided in Section 2,\
    \ and in Section 3\n   we provide three call flow examples showing how to use\
    \ it.  Security\n   considerations are found in Section 4, followed by the IANA\n\
    \   considerations and references.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC-2119\n   [RFC2119].\n"
- title: 2.  Fax Package Definition
  contents:
  - "2.  Fax Package Definition\n   A package is defined for fax.  The package defines\
    \ new\n   LocalConnectionOptions, events, and connection parameters as detailed\n\
    \   below:\n   Package Name:        FXR\n   Package Version:     0\n"
- title: 2.1.  LocalConnectionOptions
  contents:
  - "2.1.  LocalConnectionOptions\n   A new Fax LocalConnectionOptions (LCO) parameter\
    \ is defined for fax\n   handling.  The Call Agent supplies this fax LCO to indicate\
    \ the\n   desired fax handling procedure to the Media Gateway.  The fax LCO\n\
    \   contains a list of desired fax handling procedures ordered by\n   preference,\
    \ with the most desired procedure listed first.  When the\n   parameter is explicitly\
    \ included in a command, the gateway MUST be\n   able to use at least one of the\
    \ listed procedures for the command to\n   succeed.  Currently, the list can indicate\
    \ one or more of the\n   following procedures (see Sections 2.1.1 to 2.1.4 for\
    \ further details\n   on these):\n   * T.38 Strict:\n     Use T.38 [T38] with\
    \ either UDPTL or TCP for fax relay and have the\n     Call Agent control it.\
    \  Assuming the procedure can be used (see\n     Section 2.1.1), a switch to T.38\
    \ procedures will be initiated upon\n     fax detection, and a \"t38(start)\"\
    \ event will be generated (see\n     Section 2.2).  This mode requires an indication\
    \ of T.38 support\n     from the remote side in order to be used, as described\
    \ further in\n     Section 2.1.1.\n   * T.38 Loose:\n     Identical to T.38 Strict\
    \ procedure, except that an indication of\n     T.38 support from the remote side\
    \ is not required for the procedure\n     to be used.\n   * Off:\n     Do not\
    \ invoke any special procedure for fax, except for echo\n     cancellation adjustment\
    \ and possibly switching to another codec.\n   * Gateway:\n     Let the gateway\
    \ control and decide how to handle fax calls without\n     Call Agent involvement.\
    \  This includes the case where the gateway\n     does not do anything special\
    \ for fax; hence, by definition this\n     procedure can always be supported.\
    \  If the gateway invokes a\n     special procedure upon detection of fax, it\
    \ will generate a\n     \"gwfax(start)\" event to inform the Call Agent of this\
    \ (see Section\n     2.2).  The Call Agent SHOULD then refrain from issuing potentially\n\
    \     conflicting commands to the gateway until the gateway ends its\n     special\
    \ fax handling procedure.\n     A gateway that ends up not being able to invoke\
    \ any special\n     procedure for fax will generate a \"nopfax(start)\" event\
    \ (see\n     Section 2.2) upon detection of fax.\n   The set of possible values\
    \ (i.e., procedures) for the fax LCO is\n   extensible.  The prefix \"x-\", which\
    \ indicates an optional extension,\n   and the prefix \"x+\", which indicates\
    \ a mandatory extension, are\n   reserved for vendor-specific use.\n   In CreateConnection\
    \ commands, the fax LCO value defaults to\n   \"gateway\".  In ModifyConnection\
    \ commands, the fax LCO value defaults\n   to its current value on the connection.\
    \  Thus, if\n   LocalConnectionOptions are omitted or if the fax LCO is not included\n\
    \   in a ModifyConnection command, the previous fax LCO value for the\n   connection\
    \ is retained without affecting the outcome of the command;\n   consequently,\
    \ the gateway may now not apply any special procedure to\n   fax.  If the Call\
    \ Agent wants to ensure that a command succeeds only\n   when a fax procedure\
    \ is applied, the command needs to include the fax\n   LCO explicitly.\n     \
    \ As an example of this, assume that the CreateConnection command\n      successfully\
    \ specified the use of \"T.38 Strict\", and a\n      ModifyConnection command\
    \ is now received without the fax LCO but\n      with a RemoteConnectionDescriptor\
    \ indicating no support for T.38.\n      In this case, the ModifyConnection command\
    \ will succeed, but T.38\n      procedures will no longer be invoked upon fax\
    \ detection (a\n      \"nopfax\" event will be generated).  Had the Call Agent\
    \ instead\n      included the fax LCO set to \"T.38 Strict\", the command would\
    \ have\n      failed.\n   If multiple fax parameter values are provided, the gateway\
    \ MUST\n   choose one of the procedures specified according to the order in\n\
    \   which they are supplied, except as follows:\n   1. If \"gateway\" would have\
    \ been selected and it would have resulted\n      in no special procedure being\
    \ applied, and\n   2. if there are procedures other than \"off\" that are specified\
    \ after\n      \"gateway\" (e.g., \"t38\"),\n   then the gateway MUST use the\
    \ most preferred of those subsequent\n   procedures that can be supported.  If\
    \ none of those subsequent\n   procedures can be supported, the gateway reverts\
    \ to not invoking any\n   special procedure for fax.  Please refer to Section\
    \ 2.1.4 for further\n   details on determining which procedures can be supported.\n\
    \   The fax LCO parameter is encoded as the keyword \"fx\" (prefixed with\n  \
    \ the package name per [RFC3435]), followed by a colon and then a\n   semicolon\
    \ separated list of values, where T.38 Strict is encoded as\n   \"t38\", T.38\
    \ Loose is encoded as \"t38-loose\", gateway is encoded as\n   \"gw\", and off\
    \ is encoded as \"off\".\n   The following example illustrates the use of PCMU\
    \ or G.729 for audio\n   encoding, and T.38 Strict fax relay (preferred) or gateway\
    \ control\n   for fax:\n      L: a:PCMU;G729, fxr/fx:t38;gw\n   It should be noted\
    \ that MGCP allows the CreateConnection command to\n   omit both LocalConnectionOptions\
    \ and RemoteConnectionDescriptor,\n   thereby letting the gateway decide upon\
    \ the media parameters to use.\n   When the T.38 fax package is supported, the\
    \ gateway could thus choose\n   to do either audio or T.38 fax relay in such cases.\
    \  Most likely, the\n   Call Agent requires one or the other to be used, and hence\
    \ it SHOULD\n   NOT omit both LocalConnectionOptions and RemoteConnectionDescriptor\n\
    \   in CreateConnection commands.\n   When auditing capabilities, the fax LCO\
    \ may be returned with a\n   semicolon-separated list of supported fax handling\
    \ parameters.  The\n   values \"t38\", \"t38-loose\", \"off\", and \"gw\" MAY\
    \ be omitted from such a\n   list as they are always implied.  Gateways that implement\
    \ additional\n   parameters SHOULD return these additional parameters when\n \
    \  capabilities are audited, as illustrated by the following example:\n      A:\
    \ a:image/t38, fxr/fx:mypar, ...\n   In the following subsections, we provide\
    \ additional detail on the\n   above-defined fax procedures.\n"
- title: 2.1.1.  T.38 Procedure (Strict or Loose)
  contents:
  - "2.1.1.  T.38 Procedure (Strict or Loose)\n   When a gateway is instructed to\
    \ use one of the T.38 procedures\n   (strict or loose), also known as Call Agent\
    \ controlled T.38 mode, the\n   \"m=\" line in the Session Description Protocol\
    \ (SDP) returned will not\n   indicate use of UDPTL-based or TCP-based T.38 (unless\
    \ the gateway was\n   also instructed to use \"image/t38\" for the media stream).\
    \  Any other\n   entity seeing this SDP will not know whether or not T.38 is supported\n\
    \   and hence whether it is safe to attempt a switch to T.38 upon fax\n   detection.\
    \  To remedy this dilemma, capability information for T.38\n   (if supported)\
    \ using the SDP Simple Capability Declaration extensions\n   [RFC3407] MUST be\
    \ included.  Other capability information is included\n   as well, regardless\
    \ of whether the Call Agent authorized use of those\n   in the connection handling\
    \ command.  A subsequent attempt to actually\n   use these may of course not succeed,\
    \ e.g., because the Call Agent LCO\n   does not allow them to be used.  The following\
    \ example illustrates\n   the RFC 3407 [RFC3407] capability descriptor--note the\
    \ inclusion of\n   both current (audio) and latent (T.38) capabilities, as specified\
    \ in\n   RFC 3407 [RFC3407]:\n      m=audio 3456 RTP/AVP 18\n      a=sqn: 0\n\
    \      a=cdsc: 1 audio RTP/AVP 18\n      a=cdsc: 2 image udptl t38\n   For a list\
    \ of T.38 related parameters to be included in the SDP,\n   please refer to T.38\
    \ Annex D [T38].\n   Upon fax detection, a gateway that has successfully been\
    \ instructed\n   to use one of the T.38 procedures will:\n   1. Initiate the T.38\
    \ fax relay procedure and mute the media channel\n      in both the send and receive\
    \ direction (unless the media channel\n      is already using T.38).\n   2. Generate\
    \ a \"t38(start)\" event.\n   3. Await further instructions from the Call Agent\
    \ in order to\n      initiate the actual media change (unless the media channel\
    \ is\n      already using T.38).\n   The Call Agent instructs the gateway to perform\
    \ the media change by\n   sending it a ModifyConnection command with \"image/t38\"\
    \ listed as the\n   encoding method in the LocalConnectionOptions (receipt of\
    \ a\n   ModifyConnection command without LocalConnectionOptions but with a\n \
    \  RemoteConnectionDescriptor containing an \"m=\" line with the MIME type\n \
    \  \"image/t38\" would achieve the same).  Per the normal MGCP codec\n   negotiation\
    \ procedures (see [RFC3435] Section 2.6), if a\n   RemoteConnectionDescriptor\
    \ was included as well, it needs to include\n   an \"m=\" line with \"image/t38\"\
    \ as an acceptable media format in order\n   for the command to succeed.  The\
    \ gateway may choose between the UDPTL\n   and TCP transport protocols at its\
    \ own discretion subject to the\n   normal MGCP codec negotiation procedures (in\
    \ practice, TCP-based\n   implementations are currently rare).\n   If a RemoteConnectionDescriptor\
    \ was not included with the\n   ModifyConnection command sent to a gateway that\
    \ initiated the T.38\n   procedure, it is possible (in fact likely), that the\
    \ last received\n   RemoteConnectionDescriptor did not include an \"m=\" line\
    \ listing\n   \"image/t38\" as an acceptable media format.  In that case, the\n\
    \   endpoint cannot send T.38 media to the other side.  The endpoint MUST\n  \
    \ instead wait for an updated RemoteConnectionDescriptor that contains\n   \"\
    image/t38\" as an acceptable media format and a supported transport\n   protocol\
    \ (UDPTL or TCP).  The T.38 fax procedure continues when an\n   acceptable RemoteConnectionDescriptor\
    \ is received.  An acceptable\n   RemoteConnectionDescriptor contains an \"m=\"\
    \ line with the \"image/t38\"\n   MIME type (using the normal SDP syntax) and\
    \ a supported transport\n   protocol (UDPTL or TCP).  If the fax call fails (e.g.,\
    \ due to a fax\n   timeout) while waiting for either the Call Agent to instruct\
    \ the\n   gateway to switch to \"image/t38\" or for an acceptable\n   RemoteConnectionDescriptor,\
    \ a \"t38(stop)\" or a \"t38(failure)\" event\n   MUST be generated.  When the\
    \ T.38 procedure ends, a \"t38(stop)\" or\n   \"t38(failure)\" event MUST be generated.\n\
    \   Finally, the Call Agent may need to abort a T.38 procedure that is in\n  \
    \ progress.  This can for example be done when the remote side is\n   unable to\
    \ switch to T.38, and a fallback to fax passthrough using an\n   audio codec is\
    \ attempted.  The Call Agent instructs the endpoint to\n   abort an in-progress\
    \ T.38 procedure by use of the \"off\" fax LCO as\n   illustrated below:\n   \
    \   L: fxr/fx:off\n   We now define \"time t38init\" as the point in time where\
    \ the T.38\n   procedure was initiated, and \"time t38abort\" as the point in\
    \ time\n   where the Call Agent aborts an in-progress T.38 procedure.  If the\n\
    \   Call Agent at time t38abort instructs or enables the endpoint to\n   revert\
    \ to one or more codecs that were in use just prior to time\n   t38init, the endpoint\
    \ SHOULD use media stream parameters that mimic\n   the most recent LocalConnectionDescriptor\
    \ issued before time t38init.\n   For example, IP-address and UDP port, payload\
    \ formats used and their\n   payload type mapping, should all be the same as before\
    \ time t38init.\n   This will enable the fallback to be as rapid as possible.\
    \  A\n   LocalConnectionDescriptor is returned as usual, i.e., only if one or\n\
    \   more parameters changed since the last LocalConnectionDescriptor\n   issued\
    \ (e.g., if a T.38 LCD was issued or a transport address in the\n   audio LCD\
    \ was changed).\n"
- title: 2.1.2.  Gateway Procedure
  contents:
  - "2.1.2.  Gateway Procedure\n   A gateway using the gateway procedure, also known\
    \ as Gateway\n   controlled mode, may initiate special fax handling upon detecting\
    \ a\n   fax call.  The details of this special fax handling are outside the\n\
    \   scope of this document.  However, in order to use any special fax\n   handling,\
    \ support for it MUST be negotiated with the other side by\n   passing and recognizing\
    \ relevant parameters via the\n   LocalConnectionDescriptor and RemoteConnectionDescriptor\
    \ (this\n   includes the use of RTP-based T.38).  If the other side has not\n\
    \   indicated support for the special fax handling desired, the gateway\n   MUST\
    \ NOT attempt to initiate it.  When special fax handling is\n   initiated, a \"\
    gwfax(start)\" event MUST be generated, thereby enabling\n   the Call Agent to\
    \ differ between the Call Agent and gateway\n   controlled mode while still being\
    \ informed about the actual change to\n   fax.  When the special gateway handling\
    \ of fax ends, a \"gwfax(stop)\"\n   or \"gwfax(failure)\" event MUST be generated.\n"
- title: 2.1.3.  Off Procedure
  contents:
  - "2.1.3.  Off Procedure\n   A gateway using the \"off\" procedure will not invoke\
    \ any special fax\n   procedures, e.g., T.38, when detecting a fax.  However,\
    \ the gateway\n   may still adjust local echo cancellation and/or switch to an\n\
    \   alternative codec as needed.  Also, a \"nopfax(start)\" event MUST be\n  \
    \ generated; a corresponding \"stop\" event, however, will not.\n   Generating\
    \ a \"stop\" event would imply that the gateway had to infer\n   when the fax\
    \ call ends, which involves processing the media stream.\n   However, when using\
    \ the \"off\" mode, such processing is not expected\n   to occur.\n"
- title: 2.1.4.  Mode Operation
  contents:
  - "2.1.4.  Mode Operation\n   For each of the above modes, the RemoteConnectionDescriptor\
    \ provides\n   information on what procedure(s) the other side supports.  The\n\
    \   following rules are used to determine which procedure to use:\n   1. Whatever\
    \ the Call Agent specified in the Fax\n      LocalConnectionOptions for the current\
    \ command MUST be adhered to.\n      If the gateway cannot satisfy any of the\
    \ options, the command\n      fails (error code 532 -- unsupported value(s) in\n\
    \      LocalConnectionOptions is RECOMMENDED).\n   2. If both Fax LocalConnectionOptions\
    \ and a\n      RemoteConnectionDescriptor are provided, the procedure selected\n\
    \      MUST be supported by both sides -- this is currently only an issue\n  \
    \    for \"T.38 Strict\".  A procedure can be satisfied by the remote\n      side\
    \ if:\n      * the relevant MIME media type, e.g., \"image/t38\", is included\
    \ in\n        the \"m=\" line in the RemoteConnectionDescriptor, or\n      * the\
    \ relevant MIME media type is included as a capability (see\n        [RFC3407])\
    \ in the RemoteConnectionDescriptor.\n      If the gateway cannot select any of\
    \ the procedures in the Fax\n      LocalConnectionOptions, the command fails (error\
    \ code 532 is\n      RECOMMENDED).  Note that \"T.38 Loose\", \"gateway\", and\
    \ \"off\" -- by\n      definition -- can always be supported by an implementation\
    \ that\n      supports this package, irrespective of what the\n      RemoteConnectionDescriptor\
    \ indicates.\n   3. If the Call Agent did not include any Fax LocalConnectionOptions\n\
    \      or a RemoteConnectionDescriptor with the command, the gateway MUST\n  \
    \    continue using whichever procedure it is currently using.\n   4. If the Call\
    \ Agent did not include any Fax LocalConnectionOptions,\n      but a RemoteConnectionDescriptor\
    \ was included, the gateway MUST\n      follow rule 2 in selecting a procedure.\
    \  In so doing, the default\n      Fax LocalConnectionOptions, i.e., \"gateway\"\
    \ in CreateConnection,\n      or the current value in ModifyConnection, MUST be\
    \ used.  In the\n      case of ModifyConnection, the outcome of the command does\
    \ not\n      depend on the gateway being able to select one of these \"default\"\
    \n      procedures (as described in Section 2.1).  Note that this is not\n   \
    \   an issue for the CreateConnection command, since the default value\n     \
    \ can always be supported by definition.\n   5. A previously received RemoteConnectionDescriptor\
    \ does not affect\n      what procedure can be selected.  Only a RemoteConnectionDescriptor\n\
    \      supplied with the current command affects the procedure selection.\n  \
    \    However, in order to send media of a given type (e.g.,\n      \"image/t38\"\
    ), the most recently received\n      RemoteConnectionDescriptor MUST include a\
    \ corresponding media\n      line.\n   The following examples illustrate the use\
    \ of the above rules:\n   Per rule 1, a gateway that only supports standard T.38\
    \ fax relay will\n   fail a command that only contains the fax option \"mypar\"\
    , whereas it\n   will succeed a command that contains \"t38-loose\", \"gw\", \"\
    off\", or no\n   fax LCO.  A command that only contained \"t38\", i.e., use of\
    \ T.38 in\n   \"strict\" mode, may or may not succeed (depending on the\n   RemoteConnectionDescriptor).\n\
    \   A gateway supporting T.38 that receives a CreateConnection command\n   with\
    \ the fax handling LCO set to \"t38\" and a\n   RemoteConnectionDescriptor with\
    \ neither a T.38 capability nor a T.38\n   media stream will fail per rule 2.\
    \  Had the fax handling LCO included\n   either \"t38-loose\", \"gw\" or \"off\"\
    , the command would have succeeded,\n   and any of the procedures included could\
    \ have been selected.\n   Assume a gateway supporting T.38 has successfully executed\
    \ a\n   CreateConnection command with fax handling set to \"t38\" (i.e.,\n   strict).\
    \  If the gateway now receives a ModifyConnection command\n   without a fax handling\
    \ LCO but with a RemoteConnectionDescriptor that\n   has neither a T.38 capability\
    \ nor a media stream with \"image/t38\",\n   the command will succeed (since rule\
    \ 1 has no effect in that case).\n   However, per rule 2 and 4, there will not\
    \ be any T.38 procedure in\n   place.  Had the Call Agent instead included a fax\
    \ handling LCO set to\n   \"t38\" again, the command would have failed per rule\
    \ 2.\n   Finally, it should be noted that a switch to T.38 can be initiated by\n\
    \   either one or both of the originating and terminating gateways and\n   hence\
    \ implementations MUST be prepared to handle this.  This includes\n   the case\
    \ where both sides initiate the switch, which for example can\n   occur when the\
    \ originating fax generates Calling Tone (CNG) and the\n   terminating fax detects\
    \ V.21 fax preamble (see [T30]) before the\n   switch to T.38 has been performed\
    \ on the terminating side.\n"
- title: 2.1.5.  Detecting a Fax Call
  contents:
  - "2.1.5.  Detecting a Fax Call\n   A fax call can be detected by several different\
    \ means (e.g., V.21 fax\n   preamble, T.30 CNG tone, or V.8 signals) depending\
    \ on the fax\n   transmission method being used.  Implementations of this package\
    \ MUST\n   at a minimum detect a fax call based on V.21 fax preamble.\n   Triggering\
    \ based on T.30 CNG tone MAY be done; this is generally\n   considered acceptable\
    \ for G3 and lower fax speeds.  However, when\n   used with T.38 version 2 or\
    \ earlier, it will impact V.34 high-speed\n   fax.  The reason is that T.38 version\
    \ 2 (and earlier) does not\n   support the V.8 ANSam and CM signals used with\
    \ V.34 fax, and hence\n   the V.34 faxes will downspeed to G3 (14.400 bps) or\
    \ lower when using\n   T.38 version 2 (or earlier).  Also, a few rare cases of\
    \ modems\n   generating T.30 CNG tones for non-fax calls have been reported; such\n\
    \   modems would generate a false trigger for fax.  As a consequence of\n   the\
    \ above, it is RECOMMENDED that implementations of this package\n   that support\
    \ T.30 CNG-based fax detection provide a configuration\n   option to disable it\
    \ for T.38 version 2 (or earlier).\n"
- title: 2.1.6.  Considerations for Determining Which Procedures to Request
  contents:
  - "2.1.6.  Considerations for Determining Which Procedures to Request\n   It is\
    \ important to understand the implications of using any one of\n   the above defined\
    \ procedures.  Furthermore, multiple alternative\n   procedures can be requested,\
    \ however not all combinations make sense.\n   In this section, we elaborate on\
    \ both of these issues.\n   Use of the T.38 Strict mode is ideal in an environment\
    \ where it is\n   known that other endpoints generate RFC 3407 [RFC3407] capability\n\
    \   descriptions with T.38 fax relay information.  If a\n   RemoteConnectionDescriptor\
    \ without T.38 fax relay capabilities is\n   received in such an environment,\
    \ it is known that the other side does\n   not support T.38, and hence an unsuccessful\
    \ attempt to switch to T.38\n   (which in turn may lead to a failed fax call)\
    \ can be avoided.  If it\n   is not known whether other endpoints support the\
    \ RFC 3407 [RFC3407]\n   capability descriptors, the trade-off is less clear.\
    \  The advantage\n   is that a switch to T.38 will only be attempted if it is\
    \ known that\n   the other side supports it, but endpoints that do not indicate\n\
    \   support for T.38 may still support it; however, T.38 will not be used\n  \
    \ with these, which in turn may lead to unnecessary fax failures with\n   low-bandwidth\
    \ codecs or lossy networks.\n   Use of the T.38 loose mode involves the same considerations\
    \ as for\n   T.38 Strict, however the pros and cons are reversed.  If a peer\n\
    \   endpoint does not support T.38, the T.38 loose mode will still\n   attempt\
    \ to switch to T.38 (and fail), which in turn may lead to a\n   failed fax call.\
    \  On the other hand, if the peer endpoint does not\n   support the RFC 3407 [RFC3407]\
    \ capability descriptors, but the peer\n   endpoint does in fact support T.38,\
    \ T.38 would still be used with\n   this mode.\n   In summary, there is no single\
    \ good answer to the use of either T.38\n   Strict or T.38 loose mode; it depends\
    \ on the capabilities of the\n   endpoints involved as well as the trade-off between\
    \ potentially\n   letting fax calls fail due to lack of capability indications\
    \ (where\n   T.38 is otherwise supported) versus potentially letting fax calls\n\
    \   fail due to an unsuccessful switch to T.38 (because T.38 in fact was\n   not\
    \ supported).  It should be noted that Call Agents may have means\n   beyond RFC\
    \ 3407 [RFC3407] capability descriptors to determine if a\n   peer endpoint supports\
    \ T.38 or not.  For example, when SIP is used as\n   the signaling protocol with\
    \ other peers (e.g., Call Agents or other\n   SIP devices), the SIP OPTIONS method\
    \ can be used to learn whether\n   T.38 is supported.  Also, if the Call Agent\
    \ allows use of\n   high-bandwidth codecs with redundancy when support for T.38\
    \ is not\n   indicated, fax calls may still succeed without the use of T.38, even\n\
    \   in networks with non-negligible packet loss.\n   When the gateway controlled\
    \ mode is selected, there will only be\n   special fax handling if the two peer\
    \ endpoints support the same fax\n   handling method; note that the details of\
    \ the actual method is\n   entirely up to the vendor.  Also note that if the two\
    \ peer endpoints\n   do not support the same method for fax handling or if the\
    \ method is\n   not indicated in the SDP exchanged, there will be no special fax\n\
    \   handling in place.  Furthermore, the Call Agent will not be aware\n   that\
    \ this is the case until the fax transmission starts and a\n   \"nopfax(start)\"\
    \ event is generated.\n   The off mode is straightforward; there will be no special\
    \ procedure\n   in place for fax handling, except for the usual handling of echo\n\
    \   cancellation and possibly a change to a higher bandwidth codec.\n   Having\
    \ looked at the individual procedures in more detail, we now\n   elaborate on\
    \ some of the combinations of procedures that may be\n   requested:\n   * T.38\
    \ strict:\n     If the T.38 strict procedure is placed after the T.38 loose or\
    \ the\n     off procedure (both of which can always be supported), it will not\n\
    \     be selected.  Apart from this, it makes little sense to request\n     both\
    \ T.38 strict and T.38 loose.\n   * T.38 loose:\n     The T.38 loose procedure\
    \ can always be supported, so any procedure\n     specified after T.38 loose will\
    \ not be selected.\n   * Gateway:\n     The gateway controlled procedure can always\
    \ be supported.  If the\n     gateway controlled procedure would have resulted\
    \ in no special fax\n     procedure and further options (except off) are provided,\
    \ those\n     procedures will be attempted.  If neither of those procedures can\n\
    \     be supported, there will be no special fax procedure in place.\n   * Off:\n\
    \     The off procedure can always be supported.  Any procedure specified\n  \
    \   after this one will not be selected.\n"
- title: 2.2.  Events and Signals
  contents:
  - "2.2.  Events and Signals\n   The following events are defined in support of the\
    \ above:\n    ------------------------------------------------------------------\n\
    \   | Symbol  |   Definition               |  R  |   S     Duration    |\n   |---------|----------------------------|-----|---------------------|\n\
    \   |  gwfax  | Gateway controlled fax     |  x  |                     |\n   |\
    \  nopfax | No special fax handling    |  x  |                     |\n   |  t38\
    \    | T.38 fax relay             |  x  |                     |\n    ------------------------------------------------------------------\n\
    \   The definitions of the individual events are provided in the\n   following\
    \ subsections.\n"
- title: 2.2.1.  Gateway Controlled Fax (gwfax)
  contents:
  - "2.2.1.  Gateway Controlled Fax (gwfax)\n   The \"gateway controlled fax\" event\
    \ occurs when the gateway handled\n   fax procedure either starts, stops, or fails.\
    \  The event is encoded\n   as \"gwfax\", and the following event parameters,\
    \ which apply to\n   ObservedEvents only, are defined:\n   * start:\n     Gateway\
    \ controlled fax procedure was initiated.  The Call Agent\n     SHOULD refrain\
    \ from issuing media handling instructions to the\n     gateway until either a\
    \ \"gwfax(stop)\" or \"gwfax(failure)\" event is\n     generated.\n   * stop:\n\
    \     Gateway controlled fax procedure ended and the gateway did not\n     detect\
    \ any errors.  Note that this does not necessarily imply a\n     successfully\
    \ transmitted fax.  It merely indicates that the gateway\n     controlled fax\
    \ procedure has ended and the procedure itself did not\n     encounter any errors.\
    \  Media parameters for the connection are as\n     before the gateway handled\
    \ fax procedure started.\n   * failure:\n     The gateway controlled fax procedure\
    \ ended abnormally.  Some kind\n     of problem was encountered in the gateway\
    \ controlled fax procedure,\n     and the procedure ended.  Media parameters are\
    \ as before the\n     gateway handled fax procedure started.\n   One of the above\
    \ parameters will be present when the event is\n   reported.  The \"gwfax\" event\
    \ MAY be parameterized with additional\n   parameters in ObservedEvents, however\
    \ it is RECOMMENDED that one of\n   the above parameters is the first parameter\
    \ supplied.  Unknown\n   parameters MUST be ignored.\n   The following example\
    \ illustrates the encoding of the \"gwfax\" event:\n      O: fxr/gwfax(start)\n\
    \      O: fxr/gwfax(stop, foobar)\n"
- title: 2.2.2.  No Special Fax Handling (nopfax)
  contents:
  - "2.2.2.  No Special Fax Handling (nopfax)\n   The \"no special fax handling\"\
    \ event occurs when there is no special\n   fax handling procedure in place and\
    \ a fax call is detected.  This can\n   happen either because no special fax handling\
    \ procedure was requested\n   (including \"off\") or negotiation resulted in no\
    \ special fax handling\n   procedure being supported.  The event is encoded as\
    \ \"nopfax\", and the\n   following event parameter, which applies to ObservedEvents\
    \ only, is\n   defined:\n   * start:\n     No special fax handling procedure is\
    \ in place, however a fax call\n     is now detected.  The Call Agent may have\
    \ to issue further commands\n     in order to ensure a successful fax call (e.g.,\
    \ switch to another\n     codec).\n   The above parameter will be present when\
    \ the event is reported.  The\n   \"nopfax\" event MAY be parameterized with additional\
    \ parameters on\n   ObservedEvents, however it is RECOMMENDED that the above parameter\
    \ is\n   the first parameter supplied.  Unknown parameters MUST be ignored.\n\
    \   Note that this event currently cannot be parameterized with \"stop\" or\n\
    \   \"failure\" as it only detects the beginning of a fax call.\n   The following\
    \ example illustrates the encoding of the \"nopfax\" event:\n      O: fxr/nopfax(start)\n"
- title: 2.2.3.  T.38 Fax Relay (t38)
  contents:
  - "2.2.3.  T.38 Fax Relay (t38)\n   The \"T.38 fax relay\" event occurs when one\
    \ of the T.38 fax relay\n   procedures (strict or loose) either starts, stops,\
    \ or fails.  The\n   event is encoded as \"t38\", and the following event parameters,\
    \ which\n   apply to ObservedEvents only, are defined:\n   * start:\n     A fax\
    \ call was detected on the endpoint and the Call Agent\n     controlled T.38 fax\
    \ relay procedure was initiated.  The Call Agent\n     SHOULD modify each side\
    \ of the connection to start using the\n     \"image/t38\" media format, unless\
    \ they already do.  Note that, as\n     long as use of the Call Agent controlled\
    \ T.38 relay procedure is in\n     effect, the event will be generated upon fax\
    \ call detection,\n     irrespective of the current encoding method on any connections\
    \ on\n     the endpoint (incl. \"image/t38\").  The \"t38(start)\" event MUST\
    \ be\n     generated at most once by the endpoint per fax call, regardless of\n\
    \     whether or not it is requested again in a subsequent requested\n     events\
    \ list.\n   * stop:\n     Call Agent controlled T.38 fax relay procedure ended\
    \ and the\n     gateway did not detect any errors.  Note that this does not\n\
    \     necessarily imply a successfully transmitted fax.  It merely\n     indicates\
    \ that the Call Agent controlled T.38 fax relay procedure\n     has ended and\
    \ the procedure itself did not encounter any errors.\n     The Call Agent may\
    \ want to modify the media parameters for each\n     side of the connection. \
    \ Note that, in contrast to the gateway\n     controlled fax procedure case, media\
    \ parameters such as codecs do\n     not automatically revert to their values\
    \ before the start of the\n     fax call; however, echo cancellation and silence\
    \ suppression do per\n     the procedures in [RFC3435] Section 2.3.5.  The \"\
    t38(stop)\" event\n     MUST NOT be generated unless a corresponding \"t38(start)\"\
    \ event for\n     the fax call in question was generated earlier.\n   * failure:\n\
    \     Call Agent controlled T.38 fax relay procedure ended abnormally.\n     Some\
    \ kind of problem in the Call Agent controlled T.38 fax relay\n     procedure\
    \ was encountered, and the procedure ended.  The Call Agent\n     may want to\
    \ modify the media parameters for each side of the\n     connection.  Note that,\
    \ in contrast to the gateway controlled fax\n     procedure case, media parameters\
    \ such as codecs do not\n     automatically revert to their state before the start\
    \ of the fax\n     call; however, echo cancellation and silence suppression do\
    \ per the\n     procedures in [RFC3435] Section 2.3.5. The \"t38(failure)\" event\n\
    \     MUST NOT be generated unless a corresponding \"t38(start)\" event for\n\
    \     the fax call in question was generated earlier.\n   One of the above parameters\
    \ will be present when the event is\n   reported.  The \"t38\" event MAY be parameterized\
    \ with additional\n   parameters, however it is RECOMMENDED that one of the above\n\
    \   parameters is the first parameter supplied.  Unknown parameters MUST\n   be\
    \ ignored.\n   The following example illustrates the encoding of the \"t38\" event:\n\
    \      O: fxr/t38(start)\n      O: fxr/t38(stop, foobar)\n"
- title: 2.3.  Connection Parameters
  contents:
  - "2.3.  Connection Parameters\n   The connection parameters for the connection,\
    \ that measures packets\n   and octets sent and received, MUST include packets\
    \ and octets for fax\n   handling as well.  Interarrival jitter and average transmission\
    \ delay\n   calculation however MAY NOT be performed while fax is in progress,\n\
    \   e.g., if T.38 is used.  In such cases, the interarrival jitter and\n   average\
    \ transmission delay calculations are simply suspended until\n   calculations\
    \ can resume, e.g., by changing back to an RTP-based media\n   stream.\n   In\
    \ addition to these connection parameters, the fax package defines\n   the following\
    \ connection parameters, which gateways MAY support:\n   Number of fax pages sent\
    \ (PGS):\n      The cumulative number of fax pages sent by the endpoint for the\n\
    \      life of the connection.  The parameter is encoded as \"PGS\", and\n   \
    \   the value supplied is a string of up to nine decimal digits.\n   Number of\
    \ fax pages received (PGR):\n      The cumulative number of fax pages received\
    \ by the endpoint for\n      the life of the connection.  The parameter is encoded\
    \ as \"PGR\",\n      and the value supplied is a string of up to nine decimal\
    \ digits.\n   The following example illustrates the use of these parameters:\n\
    \      P: FXR/PGS=3, FXR/PGR=0, PS=1245, OS=62345, ...\n"
- title: 2.4.  Negotiation of T.38 Parameters
  contents:
  - "2.4.  Negotiation of T.38 Parameters\n   T.38 Annex D [T38] defines a number\
    \ of T.38 parameters that can be\n   negotiated in the SDP.  Currently, T.38 does\
    \ not specify procedures\n   for how each of these parameters is negotiated or\
    \ in particular\n   whether each side has to use the same value.  Therefore, we\n\
    \   considered adding such definitions and procedures here.  However, it\n   is\
    \ expected that T.38 will rectify the above, which could lead to\n   conflicting\
    \ definitions and procedures.  To avoid that, we instead\n   assume the existence\
    \ of an offer/answer [RFC3264] section for T.38,\n   where T.38 Annex D parameters\
    \ are classified as either declarative or\n   negotiated, and we then provide\
    \ guidelines for how to map such\n   definitions and procedures to the MGCP fax\
    \ package defined here.\n   MGCP does not specify use of the offer/answer model\
    \ but instead\n   operates with the concept of connection handling commands (e.g.,\n\
    \   CreateConnection and ModifyConnection) that may include a\n   RemoteConnectionDescriptor\
    \ (SDP) and in turn may generate a\n   LocalConnectionDescriptor (SDP) in their\
    \ response.\n   When an MGCP endpoint receives a CreateConnection command without\
    \ a\n   RemoteConnectionDescriptor, it should follow the corresponding T.38\n\
    \   procedures for generating an initial offer and return the resulting\n   SDP\
    \ in its LocalConnectionDescriptor.\n   When an MGCP endpoint receives a CreateConnection\
    \ command with a\n   RemoteConnectionDescriptor, it should follow the corresponding\
    \ T.38\n   procedures for receiving an initial offer and generating an answer\
    \ to\n   it.  The resulting SDP is returned in the LocalConnectionDescriptor.\n\
    \   When an MGCP endpoint receives a ModifyConnection command with a\n   RemoteConnectionDescriptor,\
    \ it cannot determine whether this\n   corresponds to an answer to an initial\
    \ offer or to a new offer.  This\n   is not an issue for declarative parameters\
    \ since they can be\n   specified independently in either direction.  Negotiated\
    \ parameters,\n   however, require some consideration:\n   When an offerer receives\
    \ an answer to a previous offer, the\n   negotiation has completed and the parameters\
    \ negotiated can no longer\n   be changed with this offer/answer exchange.  The\
    \ negotiated\n   parameters may be subject to certain validation checks.  Conversely,\n\
    \   when an answerer receives an offer, the negotiation is open and the\n   answerer\
    \ may change some of the offered negotiated parameters.  Since\n   the MGCP endpoint\
    \ does not know which situation it is in, it cannot\n   perform the \"offerer\"\
    \ validation checks.  Likewise, in order to\n   ensure that any required negotiation\
    \ actually takes place, it needs\n   to process an incoming SDP as an offer. \
    \ If the SDP in fact does\n   correspond to an offer, then this is obviously correct\
    \ behavior.\n   However, if the SDP corresponds to an answer, and one or more\n\
    \   negotiated parameters did change, then this will result in a new SDP.\n  \
    \ The Call Agent may or may not contain sufficient intelligence to\n   determine\
    \ whether or not this new SDP needs to result in another\n   offer/answer exchange.\n\
    \      For example, if the initial offer (in response to a\n      CreateConnection\
    \ without SDP) contained fax version 2, and the\n      answer (in response to\
    \ a CreateConnection with SDP) contained fax\n      version 0, then the corresponding\
    \ ModifyConnection command (with\n      SDP) will result in an updated SDP with\
    \ fax version also set to\n      zero.  If this was the only change in the updated\
    \ SDP, a new\n      offer/answer exchange would not be needed.  Note that this\
    \ example\n      does not imply that it is generally considered a good idea for\n\
    \      Call Agents to parse SDP in order to determine whether or not new\n   \
    \   offer/answer exchanges are needed.\n   Finally, a ModifyConnection without\
    \ SDP that generates an SDP needs\n   to be considered.  The SDP generated may\
    \ either correspond to an\n   initial offer/answer exchange or a subsequent offer/answer\
    \ exchange.\n   The endpoint should generate SDP as if it was part of a subsequent\n\
    \   offer/answer exchange.  If the Call Agent does not desire such\n   semantics,\
    \ it can simply create a new connection instead.\n"
- title: 2.5.  Implementation Considerations
  contents:
  - '2.5.  Implementation Considerations

    '
- title: 2.5.1.  Media IP Address and Port for T.38
  contents:
  - "2.5.1.  Media IP Address and Port for T.38\n   When an endpoint is instructed\
    \ to change to or from T.38 for a media\n   stream, it SHOULD continue using the\
    \ same IP address and port the\n   media stream is currently using, since this\
    \ will minimize any Quality\n   of Service, Network Address Translator (NAT),\
    \ and Firewall\n   interactions from the change.  However, if an endpoint has\
    \ a good\n   reason, it MAY choose not to follow this recommendation.\n   When\
    \ an endpoint uses the same port for RTP audio and T.38 with\n   either UDPTL\
    \ or TCP, packets of one type (e.g., T.38) may be received\n   while expecting\
    \ packets of another type (RTP audio).  Since there is\n   explicit signaling\
    \ to indicate which type is expected at any given\n   point in time, this does\
    \ not introduce any new problems.  In other\n   words, the receiver does not operate\
    \ as a demultiplexer with a need\n   to determine if a given packet received is\
    \ an RTP audio packet or a\n   T.38 UDPTL/TCP packet.  The receiver simply processes\
    \ incoming\n   packets as usual.  If T.38 packets are expected, then incoming\n\
    \   packets are validated against T.38, and if RTP audio packets are\n   expected,\
    \ then incoming packets are validated against RTP.\n"
- title: 2.5.2.  Case Sensitivity
  contents:
  - "2.5.2.  Case Sensitivity\n   IANA has registered the uppercase string \"UDPTL\"\
    \ as the transport\n   protocol identifier to be used for UDP-based T.38.  However,\
    \ the\n   examples provided in Recommendation T.38, as well as most (if not\n\
    \   all) current implementations, use the lowercase string \"udptl\"\n   instead.\
    \  Implementations conforming to this package SHOULD generate\n   the lowercase\
    \ string \"udptl\" and accept the lowercase, uppercase, and\n   mixed upper/lowercase\
    \ strings as being equivalent.\n   The attribute \"T38MaxBitRate\" was once incorrectly\
    \ registered with\n   IANA as \"T38maxBitRate\" (lower-case \"m\").  In accordance\
    \ with T.38\n   examples and common implementation practice, the form \"T38MaxBitRate\"\
    \n   SHOULD be generated by implementations conforming to this package.\n   In\
    \ general, it is RECOMMENDED that implementations of this package\n   accept lowercase,\
    \ uppercase, and mixed upper/lowercase encodings of\n   all the T.38 attributes.\n"
- title: 2.5.3.  Boolean Indicator After T.38 Parameters
  contents:
  - "2.5.3.  Boolean Indicator After T.38 Parameters\n   Some implementations incorrectly\
    \ use a colon (':') followed by a\n   number (zero or one) after the attributes\
    \ T38FaxFillBitRemoval,\n   T38FaxTranscodingMMR, and T38FaxTranscodingJBIG. \
    \ Implementations\n   that receive such erroneous encodings MAY interpret the\
    \ value \":0\" as\n   lack of support for the option and all other values as support\
    \ for\n   the option.\n"
- title: 3.  Call Flow Examples
  contents:
  - "3.  Call Flow Examples\n   In this section, we provide three example call flows.\
    \  The first one\n   illustrates a T.38 fax call under Call Agent control on both\
    \ the\n   originating and terminating side.  The second one illustrates the use\n\
    \   of multiple and different options on the two sides.  The third one\n   illustrates\
    \ the interaction with a SIP endpoint.\n"
- title: 3.1.  Call Agent Controlled T.38 Strict
  contents:
  - "3.1.  Call Agent Controlled T.38 Strict\n   In this example, both sides are under\
    \ strict T.38 Call Agent control.\n   We assume the originating and terminating\
    \ Call Agents communicate via\n   the Session Initiation Protocol (SIP) [RFC3261].\
    \  Furthermore, the\n   originating fax machine does not generate CNG tone, which\
    \ is typical\n   of early (i.e., pre-1993) fax machines.\n    ------------------------------------------------------------------\n\
    \   | #|     GW-o      |     CA-o      |      CA-t     |      GW-t     |\n   |==|===============|===============|===============|===============|\n\
    \   | 1|             <-|CRCX           |               |               |\n   |\
    \ 2|     200(sdp-o)|->             |               |               |\n   | 3|\
    \               |  INVITE(sdp-o)|->             |               |\n   | 4|   \
    \            |               |    CRCX(sdp-o)|->             |\n   | 5|      \
    \         |               |             <-|200 (sdp-t)    |\n   | 6|         \
    \      |             <-|200(sdp-t)     |               |\n   | 7|            \
    \ <-|MDCX(sdp-t)    |               |               |\n   | 8|            200|->\
    \             |               |               |\n   |--|---------------|---------------|---------------|---------------|\n\
    \   | 9|               |               |               |  <- ANS/      |\n   |\
    \  |               |               |               |      T.30 CED |\n   |10|\
    \               |               |               |  <- V.21 fax  |\n   |  |   \
    \            |               |               |     preamble  |\n   |11|      \
    \         |               |             <-|NTFY(t38 start)|\n   |12|         \
    \      |               |            200|->             |\n   |13|            \
    \   |               |      MDCX(t38)|->             |\n   |14|               |\
    \               |             <-|200(sdp-t2)    |\n   |15|               |   \
    \          <-|INVITE(sdp-t2) |               |\n   |16|             <-|MDCX(sdp-t2)\
    \   |               |               |\n   |17|    200(sdp-o2)|->             |\
    \               |               |\n   |18|               |    200(sdp-o2)|-> \
    \            |               |\n   |19|               |               |   MDCX(sdp-o2)|->\
    \             |\n   |20|               |               |             <-|200  \
    \          |\n   |21|  V.21 fax ->  |               |               |        \
    \       |\n   |  |  preamble     |               |               |           \
    \    |\n   |22|NTFY(t38 start)|->             |               |              \
    \ |\n   |23|             <-|200            |               |               |\n\
    \   |24|             <-|RQNT(T38 event)|               |               |\n   |25|\
    \            200|->             |               |               |\n   |--|---------------|---------------|---------------|---------------|\n\
    \   |26|               |               |               |   (fax ends)  |\n   |27|\
    \               |               |             <-|NTFY(t38 stop) |\n   |28|   \
    \            |               |            200|->             |\n   |29|NTFY(t38\
    \ stop) |->             |               |               |\n   |30|           \
    \  <-|200            |               |               |\n    ------------------------------------------------------------------\n\
    \   Step 1:\n   The Call Agent issues a CreateConnection command to the gateway,\n\
    \   instructing it to use PCMU media encoding and to use the strict Call\n   Agent\
    \ controlled T.38 procedure.  Consequently, the Call Agent asks\n   the gateway\
    \ to notify it of the \"t38\" event:\n      CRCX 1000 ds/ds1-1/1@gw-o.example.net\
    \ MGCP 1.0\n      C: 1\n      L: a:PCMU, fxr/fx:t38\n      M: recvonly\n     \
    \ R: fxr/t38\n      X: 1\n   Step 2:\n   The gateway acknowledges the command\
    \ and includes SDP with codec\n   information and RFC 3407 [RFC3407] capability\
    \ information:\n      200 1000 OK\n      I:1\n      v=0\n      o=- 25678 753849\
    \ IN IP4 192.0.2.1\n      s=-\n      c=IN IP4 192.0.2.1\n      t=0 0\n      m=audio\
    \ 3456 RTP/AVP 0\n      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc:\
    \ 3 image udptl t38\n   Step 3:\n   The originating Call Agent sends a SIP INVITE\
    \ message with the SDP to\n   the terminating Call Agent.\n   Step 4:\n   The\
    \ terminating Call Agent issues a CreateConnection command to the\n   terminating\
    \ gateway, instructing it to use PCMU media encoding and to\n   use the strict\
    \ Call Agent controlled T.38 procedure.  Consequently,\n   the Call Agent asks\
    \ the gateway to notify it of the \"t38\" event:\n      CRCX 2000 ds/ds1-1/2@gw-t.example.net\
    \ MGCP 1.0\n      C: 2\n      L: a:PCMU, fxr/fx:t38\n      M: sendrecv\n     \
    \ R: fxr/t38\n      X: 20\n      v=0\n      o=- 25678 753849 IN IP4 192.0.2.1\n\
    \      s=-\n      c=IN IP4 192.0.2.1\n      t=0 0\n      m=audio 3456 RTP/AVP\
    \ 0\n      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc: 3 image\
    \ udptl t38\n   Step 5:\n   The terminating gateway supports T.38, and the\n \
    \  RemoteConnectionDescriptor included indicates that the other side\n   supports\
    \ T.38 as well, so the strict T.38 Call Agent controlled\n   procedure requested\
    \ can be used.  The terminating gateway sends back\n   a success response with\
    \ its SDP, which also includes capability\n   information:\n      200 2000 OK\n\
    \      I:2\n      v=0\n      o=- 25678 753849 IN IP4 192.0.2.2\n      s=-\n  \
    \    c=IN IP4 192.0.2.2\n      t=0 0\n      m=audio 1296 RTP/AVP 0\n      a=sqn:\
    \ 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc: 3 image udptl t38\n   Step\
    \ 6:\n   The terminating Call Agent sends back a SIP 200 OK response to the\n\
    \   originating Call Agent, which in turn sends a SIP ACK (not shown).\n   Step\
    \ 7:\n   The originating Call Agent in turn sends a ModifyConnection command\n\
    \   to the originating gateway:\n      MDCX 1001 ds/ds1-1/1@gw-o.example.net MGCP\
    \ 1.0\n      C: 1\n      I: 1\n      M: sendrecv\n      v=0\n      o=- 25678 753849\
    \ IN IP4 192.0.2.2\n      s=-\n      c=IN IP4 192.0.2.2\n      t=0 0\n      m=audio\
    \ 1296 RTP/AVP 0\n      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc:\
    \ 3 image udptl t38\n   The ModifyConnection command does not repeat the\n   LocalConnectionOptions\
    \ sent previously.  As far as fax handling is\n   concerned, the gateway therefore\
    \ attempts to continue using the\n   current fax handling procedure, i.e., strict\
    \ Call Agent controlled\n   T.38.  Since the capability information indicates\
    \ the other side\n   supports T.38, the gateway will in fact be able to use the\
    \ strict\n   Call Agent controlled T.38 procedure.  Had there not been any support\n\
    \   for T.38 in the RemoteConnectionDescriptor, then this command would\n   still\
    \ have succeeded, however there would be no special fax handling\n   procedure\
    \ (since strict mode could not be supported).\n   Step 8:\n   The gateway acknowledges\
    \ the command.  At this point, a call is\n   established using PCMU encoding,\
    \ and if a fax call is detected, the\n   Call Agent controlled T.38 procedure\
    \ will be initiated.\n   Steps 9-11:\n   A fax call now occurs.  The T.30 CED\
    \ tone (a.k.a. V.25 ANS) is sent\n   -- in this case, it is simply passed through\
    \ the current PCMU\n   encoding.  Since both fax and modem calls can start with\
    \ this\n   sequence, it is not possible to determine that this is a fax call\n\
    \   until step 10, where the V.21 fax preamble is detected.\n   The gateway was\
    \ instructed to apply the Call Agent controlled T.38\n   procedure for fax calls,\
    \ so it begins to mute audio, generates the\n   \"t38(start)\" event, and notifies\
    \ the Call Agent:\n      NTFY 2500 ds/ds1-1/2@gw-t.example.net MGCP 1.0\n    \
    \  O: fxr/t38(start)\n      X: 20\n   Step 12:\n   The Call Agent acknowledges\
    \ the Notify command:\n      200 2500 OK\n   Step 13:\n   The Call Agent then\
    \ instructs the terminating gateway to use the\n   \"image/t38\" MIME type instead:\n\
    \      MDCX 2002 ds/ds1-1/2@gw-t.example.net MGCP 1.0\n      C: 2\n      I: 2\n\
    \      L: a:image/t38\n      R: fxr/t38\n      X: 21\n   Step 14:\n   The gateway\
    \ changes to T.38 and sends back a success response with\n   updated SDP:\n  \
    \    200 2002 OK\n      v=0\n      o=- 25678 753850 IN IP4 192.0.2.2\n      s=-\n\
    \      c=IN IP4 192.0.2.2\n      t=0 0\n      m=image 1296 udptl t38\n      a=sqn:\
    \ 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc: 3 image udptl t38\n   Note\
    \ that since the gateway's current RemoteConnectionDescriptor (as\n   opposed\
    \ to the LocalConnectionDescriptor returned here) does not list\n   \"image/t38\"\
    \ as a valid encoding method, the terminating gateway is\n   still muting the\
    \ media and is now waiting for an updated\n   RemoteConnectionDescriptor with\
    \ \"image/t38\".\n   Step 15:\n   The terminating Call Agent sends a re-INVITE\
    \ to the originating Call\n   Agent with the updated SDP.\n   Step 16:\n   The\
    \ originating Call Agent then sends a ModifyConnection command to\n   the originating\
    \ gateway:\n      MDCX 1003 ds/ds1-1/1@gw-o.example.net MGCP 1.0\n      C: 1\n\
    \      I: 1\n      v=0\n      o=- 25678 753850 IN IP4 192.0.2.2\n      s=-\n \
    \     c=IN IP4 192.0.2.2\n      t=0 0\n      m=image 1296 udptl t38\n      a=sqn:\
    \ 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc: 3 image udptl t38\n   Step\
    \ 17:\n   The originating gateway changes to T.38 and sends back a success\n \
    \  response with updated SDP:\n      200 1003 OK\n      v=0\n      o=- 25678 753850\
    \ IN IP4 192.0.2.1\n      s=-\n      c=IN IP4 192.0.2.1\n      t=0 0\n      m=image\
    \ 3456 udptl t38\n      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc:\
    \ 3 image udptl t38\n   Step 18:\n   The originating Call Agent sends a SIP 200\
    \ OK response with the\n   updated SDP to the terminating Call Agent, which in\
    \ turn sends a SIP\n   ACK (not shown).\n   Step 19:\n   The terminating Call\
    \ Agent sends a ModifyConnection with the updated\n   SDP to the terminating gateway:\n\
    \      MDCX 2003 ds/ds1-1/2@gw-t.example.net MGCP 1.0\n      C: 2\n      I: 2\n\
    \      v=0\n      o=- 25678 753850 IN IP4 192.0.2.1\n      s=-\n      c=IN IP4\
    \ 192.0.2.1\n      t=0 0\n      m=image 3456 udptl t38\n      a=sqn: 0\n     \
    \ a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc: 3 image udptl t38\n   Step 20:\n\
    \   The terminating gateway sends back a success response:\n      200 2003 OK\n\
    \   Since the terminating gateway now has a RemoteConnectionDescriptor\n   with\
    \ \"image/t38\" as valid media, it can start exchanging T.38 with\n   the originating\
    \ gateway.\n   Steps 21, 22:\n   The originating endpoint detects V.21 fax preamble.\
    \  Even though the\n   endpoint is already using \"image/t38\" for media, it generates\
    \ a\n   \"t38(start)\" event and notifies the Call Agent.\n      NTFY 3500 ds/ds1-1/1@gw-o.example.net\
    \ MGCP 1.0\n      O: fxr/t38(start)\n      X: 1\n   Steps 23, 24:\n   The Call\
    \ Agent acknowledges the Notify command, then issues a new\n   request for notification\
    \ of the \"t38\" event.\n      200 3500 OK\n      .\n      RQNT 1004 ds/ds1-1/1@gw-o.example.net\
    \ MGCP 1.0\n      R: fxr/t38\n      X: 2\n   Step 25:\n   The gateway acknowledges\
    \ the command.\n      200 1004 OK\n   Steps 26, 27:\n   When the fax ends, a \"\
    t38(stop)\" event is generated by the\n   terminating endpoint, which is notified\
    \ to the Call Agent:\n      NTFY 2501 ds/ds1-1/2@gw-t.example.net MGCP 1.0\n \
    \     O: t38(stop)\n      X: 21\n   Step 28:\n   The Call Agent acknowledges the\
    \ Notify command:\n      200 2501 OK\n   Step 29:\n   The originating endpoint\
    \ also generates a \"t38(stop)\" event, which is\n   notified to the Call Agent:\n\
    \      NTFY 3502 ds/ds1-1/1@gw-o.example.net MGCP 1.0\n      O: t38(stop)\n  \
    \    X: 2\n   Step 30:\n   The Call Agent acknowledges the Notify command:\n \
    \     200 3502 OK\n   The fax call is now over.  The Call Agent may now decide\
    \ to change\n   back to a voice codec, delete the connection, or do something\n\
    \   different.\n"
- title: 3.2.  Multiple and Different Options
  contents:
  - "3.2.  Multiple and Different Options\n   In this example, the originating gateway\
    \ is instructed to use the\n   gateway procedure, whereas the terminating gateway\
    \ is given a choice\n   between the gateway procedure and the strict t38 procedure.\n\
    \   Furthermore, the originating fax machine is generating CNG tone.\n    ------------------------------------------------------------------\n\
    \   | #|     GW-o      |     CA-o      |      CA-t     |      GW-t     |\n   |==|===============|===============|===============|===============|\n\
    \   | 1|             <-|CRCX           |               |               |\n   |\
    \ 2|     200(sdp-o)|->             |               |               |\n   | 3|\
    \               |  INVITE(sdp-o)|->             |               |\n   | 4|   \
    \            |               |    CRCX(sdp-o)|->             |\n   | 5|      \
    \         |               |             <-|200 (sdp-t)    |\n   | 6|         \
    \      |             <-|200(sdp-t)     |               |\n   | 7|            \
    \ <-|MDCX(sdp-t)    |               |               |\n   | 8|            200|->\
    \             |               |               |\n   |--|---------------|---------------|---------------|---------------|\n\
    \   | 9|         CNG ->|               |               |               |\n   |10|\
    \               |               |               |<- ANS/T.30 CED|\n   |11|   \
    \            |               |               |<- V.21 fax    |\n   |  |      \
    \         |               |               |   preamble    |\n   |12|         \
    \      |               |             <-|NTFY(t38 start)|\n   |13|            \
    \   |               |            200|->             |\n   |14|               |\
    \               |      MDCX(t38)|->             |\n   |15|               |   \
    \            |             <-|200(sdp-t2)    |\n   |16|               |      \
    \       <-|INVITE(sdp-t2) |               |\n   |17|             <-|MDCX(sdp-t2)\
    \   |               |               |\n   |18|    200(sdp-o2)|->             |\
    \               |               |\n   |19|               |    200(sdp-o2)|-> \
    \            |               |\n   |20|               |               |   MDCX(sdp-o2)|->\
    \             |\n   |21|               |               |             <-|200  \
    \          |\n   |--|---------------|---------------|---------------|---------------|\n\
    \   |22|               |               |               |   (fax ends)  |\n   |23|\
    \               |               |             <-|NTFY(t38 stop) |\n   |24|   \
    \            |               |            200|->             |\n    ------------------------------------------------------------------\n\
    \   Step 1:\n   The Call Agent issues a CreateConnection command to the gateway,\n\
    \   instructing it to use PCMU media encoding and to use the gateway\n   procedure.\
    \  Consequently, the Call Agent asks the gateway to notify\n   it of the \"gwfax\"\
    \ event:\n      CRCX 1000 ds/ds1-1/1@gw-o.example.net MGCP 1.0\n      C: 1\n \
    \     L: a:PCMU, fxr/fx:gw\n      M: recvonly\n      R: fxr/gwfax\n      X: 1\n\
    \   Step 2:\n   The gateway acknowledges the command and includes SDP with codec\n\
    \   information and capability information:\n      200 1000 OK\n      I:1\n  \
    \    v=0\n      o=- 25678 753849 IN IP4 192.0.2.1\n      s=-\n      c=IN IP4 192.0.2.1\n\
    \      t=0 0\n      m=audio 3456 RTP/AVP 0\n      a=sqn: 0\n      a=cdsc: 1 audio\
    \ RTP/AVP 0 18\n      a=cdsc: 3 image udptl t38\n      a=X-FaxScheme: 123\n  \
    \ We assume the gateway supports some other fax scheme, and it\n   indicates this\
    \ by including an attribute \"X-FaxScheme: 123\".\n   Step 3:\n   The originating\
    \ Call Agent sends a SIP INVITE message with the SDP to\n   the terminating Call\
    \ Agent.\n   Step 4:\n   The terminating Call Agent issues a CreateConnection\
    \ command to the\n   terminating gateway, instructing it to use PCMU media encoding\
    \ and to\n   use either the gateway procedure or the strict Call Agent controlled\n\
    \   T.38 procedure.  Consequently, the Call Agent asks the gateway to\n   notify\
    \ it of both the \"gwfax\" and \"t38\" events:\n      CRCX 2000 ds/ds1-1/2@gw-t.example.net\
    \ MGCP 1.0\n      C: 2\n      L: a:PCMU, fxr/fx:gw;t38\n      M: sendrecv\n  \
    \    R: fxr/t38, fxr/gwfax\n      X: 20\n      v=0\n      o=- 25678 753849 IN\
    \ IP4 192.0.2.1\n      s=-\n      c=IN IP4 192.0.2.1\n      t=0 0\n      m=audio\
    \ 3456 RTP/AVP 0\n      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc:\
    \ 3 image udptl t38\n      a=X-FaxScheme: 123\n   Step 5:\n   The terminating\
    \ gateway does not support any special gateway fax\n   handling; however, it does\
    \ support T.38, and the\n   RemoteConnectionDescriptor included indicates that\
    \ the other side\n   supports T.38 as well, so the strict T.38 Call Agent controlled\n\
    \   procedure requested can be honored.  The terminating gateway sends\n   back\
    \ a success response with its SDP, which also includes capability\n   information:\n\
    \      200 2000 OK\n      I:2\n      v=0\n      o=- 25678 753849 IN IP4 192.0.2.2\n\
    \      s=-\n      c=IN IP4 192.0.2.2\n      t=0 0\n      m=audio 1296 RTP/AVP\
    \ 0\n      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc: 3 image\
    \ udptl t38\n   Step 6:\n   The terminating Call Agent sends back a SIP 200 OK\
    \ response to the\n   originating Call Agent, which in turn sends a SIP ACK (not\
    \ shown).\n   Step 7:\n   The originating Call Agent in turns sends a ModifyConnection\
    \ command\n   to the originating gateway:\n      MDCX 1001 ds/ds1-1/1@gw-o.example.net\
    \ MGCP 1.0\n      C: 1\n      I: 1\n      M: sendrecv\n      v=0\n      o=- 25678\
    \ 753849 IN IP4 192.0.2.2\n      s=-\n      c=IN IP4 192.0.2.2\n      t=0 0\n\
    \      m=audio 1296 RTP/AVP 0\n      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0\
    \ 18\n      a=cdsc: 3 image udptl t38\n   The ModifyConnection command does not\
    \ repeat the\n   LocalConnectionOptions sent previously.  As far as fax handling\
    \ is\n   concerned, the gateway therefore attempts to continue using the\n   current\
    \ fax handling, i.e., the gateway procedure.  The SDP\n   information returned\
    \ however does not indicate support for the \"X-\n   FaxScheme: 123\", and hence\
    \ the originating gateway will not invoke\n   any special fax handling procedure\
    \ for this call.\n   Step 8:\n   The gateway acknowledges the command.  At this\
    \ point, a call is\n   established using PCMU encoding, and if a fax call is detected,\
    \ no\n   special fax handling procedure will occur.\n   Steps 9-12:\n   A CNG\
    \ tone is generated by the originating fax, thereby indicating a\n   fax call.\
    \  If the gateway was using either of the T.38 modes, or if\n   it had negotiated\
    \ support for a special gateway handling procedure\n   with the other side, a\
    \ \"t38(start)\" or \"gwfax(start)\" event would now\n   have been generated and\
    \ the switch to T.38 (or special gateway\n   handling) could start.  However,\
    \ since the negotiation with the\n   terminating gateway resulted in the originating\
    \ gateway not doing\n   anything special for fax, no such event is generated.\
    \  Instead, the\n   \"nopfax(start)\" event is now generated, but since the Call\
    \ Agent has\n   not requested this event, it is not detected and hence not reported\n\
    \   to the Call Agent.  Consequently, the CNG tone is simply passed\n   through\
    \ the current PCMU encoding without the (originating) Call\n   Agent being aware\
    \ of the fax call.\n   Subsequently, the T.30 CED tone (a.k.a. V.25 ANS) occurs\
    \ -- in this\n   case, it is also simply passed through the current PCMU encoding.\n\
    \   Since both fax and modem calls can start with this sequence, it is\n   not\
    \ possible to determine that this is a fax call until step 11,\n   where the V.21\
    \ fax preamble is detected.\n   The terminating gateway is using the Call Agent\
    \ controlled T.38\n   procedure for fax calls, so it begins to mute audio, generates\
    \ the\n   \"t38(start)\" event, and notifies the Call Agent:\n      NTFY 2500\
    \ ds/ds1-1/2@gw-t.example.net MGCP 1.0\n      O: fxr/t38(start)\n      X: 20\n\
    \   Step 13:\n   The Call Agent acknowledges the Notify command:\n      200 2500\
    \ OK\n   Step 14:\n   The Call Agent then instructs the terminating gateway to\
    \ use the\n   \"image/t38\" MIME type instead:\n      MDCX 2002 ds/ds1-1/2@gw-t.example.net\
    \ MGCP 1.0\n      C: 2\n      I: 2\n      L: a:image/t38\n      R: fxr/t38\n \
    \     X: 21\n   Step 15:\n   The gateway changes to T.38 and sends back a success\
    \ response with\n   updated SDP:\n      200 2002 OK\n      v=0\n      o=- 25678\
    \ 753850 IN IP4 192.0.2.2\n      s=-\n      c=IN IP4 192.0.2.2\n      t=0 0\n\
    \      m=image 1296 udptl t38\n      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0\
    \ 18\n      a=cdsc: 3 image udptl t38\n   Note that since the terminating gateway's\
    \ last received\n   RemoteConnectionDescriptor (as opposed to the\n   LocalConnectionDescriptor\
    \ returned here) did not list \"image/t38\" as\n   a valid encoding method, the\
    \ terminating gateway is still muting the\n   media and is now waiting for an\
    \ updated RemoteConnectionDescriptor\n   with \"image/t38\".\n   Step 16:\n  \
    \ The terminating Call Agent sends a re-INVITE to the originating Call\n   Agent\
    \ with the updated SDP.\n   Step 17:\n   The originating Call Agent then sends\
    \ a ModifyConnection command to\n   the originating gateway:\n      MDCX 1003\
    \ ds/ds1-1/1@gw-o.example.net MGCP 1.0\n      C: 1\n      I: 1\n      v=0\n  \
    \    o=- 25678 753850 IN IP4 192.0.2.2\n      s=-\n      c=IN IP4 192.0.2.2\n\
    \      t=0 0\n      m=image 1296 udptl t38\n      a=sqn: 0\n      a=cdsc: 1 audio\
    \ RTP/AVP 0 18\n      a=cdsc: 3 image udptl t38\n   Step 18:\n   The originating\
    \ gateway changes to T.38 and sends back a success\n   response with updated SDP:\n\
    \      200 1003 OK\n      v=0\n      o=- 25678 753850 IN IP4 192.0.2.1\n     \
    \ s=-\n      c=IN IP4 192.0.2.1\n      t=0 0\n      m=image 3456 udptl t38\n \
    \     a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc: 3 image udptl\
    \ t38\n   Step 19:\n   The originating Call Agent sends a SIP 200 OK response\
    \ with the\n   updated SDP to the terminating Call Agent, which in turn sends\
    \ a SIP\n   ACK (not shown).\n   Step 20:\n   The terminating Call Agent sends\
    \ a ModifyConnection with the updated\n   SDP to the terminating gateway:\n  \
    \    MDCX 2003 ds/ds1-1/2@gw-t.example.net MGCP 1.0\n      C: 2\n      I: 2\n\
    \      v=0\n      o=- 25678 753850 IN IP4 192.0.2.1\n      s=-\n      c=IN IP4\
    \ 192.0.2.1\n      t=0 0\n      m=image 3456 udptl t38\n      a=sqn: 0\n     \
    \ a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc: 3 image udptl t38\n   Step 21:\n\
    \   The terminating gateway sends back a success response:\n      200 2003 OK\n\
    \   Since the terminating gateway now has a RemoteConnectionDescriptor\n   with\
    \ \"image/t38\" as valid media, it can start exchanging T.38 with\n   the originating\
    \ gateway.\n   Steps 22, 23:\n   When the fax ends, a \"t38(stop)\" event is generated,\
    \ which is\n   notified to the Call Agent:\n      NTFY 2501 ds/ds1-1/2@gw-t.example.net\
    \ MGCP 1.0\n      O: t38(stop)\n      X: 21\n   Step 24:\n   The Call Agent acknowledges\
    \ the Notify command:\n      200 2501 OK\n   The fax call is now over.  The Call\
    \ Agent may now decide to change\n   back to a voice codec, delete the connection,\
    \ or do something\n   different.\n"
- title: 3.3.  Interaction with SIP Endpoints
  contents:
  - "3.3.  Interaction with SIP Endpoints\n   In this example, we show interaction\
    \ with a SIP endpoint that does\n   not support the RFC 3407 [RFC3407] capability\
    \ descriptors.  To\n   accommodate such endpoints, the T.38 loose mode is being\
    \ used (at the\n   risk of initiating T.38 to an endpoint that does not support\
    \ it).\n   Once again, the originating fax does not generate CNG tone.\n    ------------------------------------------------------------------\n\
    \   | #|     GW-o      |     CA-o      |    SIP-UA-t   |      fax      |\n   |==|===============|===============|===============|===============|\n\
    \   | 1|             <-|CRCX           |               |               |\n   |\
    \ 2|     200(sdp-o)|->             |               |               |\n   | 3|\
    \               |  INVITE(sdp-o)|->             |               |\n   | 4|   \
    \            |             <-|200(sdp-t)     |               |\n   | 5|      \
    \         |            ACK|->             |               |\n   | 6|         \
    \    <-|MDCX(sdp-t)    |               |               |\n   | 7|            200|->\
    \             |               |               |\n   |--|---------------|---------------|---------------|---------------|\n\
    \   | 8|               |               |               |  <- ANS/      |\n   |\
    \  |               |               |               |      T.30 CED |\n   | 9|\
    \               |               |               |  <- V.21 fax  |\n   |  |   \
    \            |               |               |     preamble  |\n   |10|      \
    \         |             <-|INVITE(sdp-t2) |               |\n   |11|         \
    \    <-|MDCX(sdp-t2)   |               |               |\n   |12|    200(sdp-o2)|->\
    \             |               |               |\n   |13|               |    200(sdp-o2)|->\
    \             |               |\n   |14|               |             <-|ACK  \
    \          |               |\n   |15|  V.21 fax ->  |               |        \
    \       |               |\n   |  |  preamble     |               |           \
    \    |               |\n   |16|NTFY(t38 start)|->             |              \
    \ |               |\n   |17|             <-|200            |               | \
    \              |\n   |18|             <-|RQNT(T38 event)|               |    \
    \           |\n   |19|            200|->             |               |       \
    \        |\n   |--|---------------|---------------|---------------|---------------|\n\
    \   |20|               |               |               |   (fax ends)  |\n   |21|\
    \               |             <-|BYE            |               |\n   |22|   \
    \            |            200|->             |               |\n   |23|NTFY(t38\
    \ stop) |->             |               |               |\n   |24|           \
    \  <-|200            |               |               |\n    ------------------------------------------------------------------\n\
    \   Step 1:\n   The Call Agent issues a CreateConnection command to the gateway,\n\
    \   instructing it to use PCMU media encoding and to use the loose Call\n   Agent\
    \ controlled T.38 procedure.  Consequently, the Call Agent asks\n   the gateway\
    \ to notify it of the \"t38\" event:\n      CRCX 1000 ds/ds1-1/1@gw-o.example.net\
    \ MGCP 1.0\n      C: 1\n      L: a:PCMU, fxr/fx:t38-loose\n      M: recvonly\n\
    \      R: fxr/t38\n      X: 1\n   Step 2:\n   The gateway acknowledges the command\
    \ and includes SDP with codec\n   information and RFC 3407 [RFC3407] capability\
    \ information:\n      200 1000 OK\n      I:1\n      v=0\n      o=- 25678 753849\
    \ IN IP4 192.0.2.1\n      s=-\n      c=IN IP4 192.0.2.1\n      t=0 0\n      m=audio\
    \ 3456 RTP/AVP 0\n      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc:\
    \ 3 image udptl t38\n   Step 3:\n   The originating SIP User Agent (UA) sends\
    \ a SIP INVITE message with\n   the SDP to the terminating Call Agent (not all\
    \ SIP details shown\n   here):\n      INVITE sip:bob@biloxi.example.com SIP/2.0\n\
    \      ...\n      Content-Type: application/sdp\n      Content-Length: 167\n \
    \     v=0\n      o=- 25678 753849 IN IP4 192.0.2.1\n      s=-\n      c=IN IP4\
    \ 192.0.2.1\n      t=0 0\n      m=audio 3456 RTP/AVP 0\n      a=sqn: 0\n     \
    \ a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc: 3 image udptl t38\n   Step 4:\n\
    \   The terminating SIP User Agent sends back a SIP 200 OK response (not\n   all\
    \ SIP details shown) to the originating Call Agent:\n      SIP/2.0 200 OK\n  \
    \    ...\n      Content-Type: application/sdp\n      Content-Length: 100\n   \
    \   v=0\n      o=- 25678 753849 IN IP4 192.0.2.2\n      s=-\n      c=IN IP4 192.0.2.2\n\
    \      t=0 0\n      m=audio 1296 RTP/AVP 0\n   Note that the terminating SIP User\
    \ Agent does not use the RFC 3407\n   [RFC3407] capability descriptor to indicate\
    \ support for (or lack of\n   support for) T.38.\n   Step 5:\n   The originating\
    \ Call Agent receives the SIP 200 response and sends a\n   SIP ACK message to\
    \ the terminating SIP UA.\n   Note that the Call Agent does not know whether the\
    \ peer entity\n   supports T.38.  In order to figure this out, the Call Agent\
    \ could\n   send a SIP OPTIONS request to the terminating SIP UA, requesting it\n\
    \   to return its capabilities (not shown).  Note that this can of course\n  \
    \ be done towards any SIP peer, e.g., if the other side was a Call\n   Agent speaking\
    \ SIP it could be done there too.\n   Step 6:\n   The originating Call Agent in\
    \ turns sends a ModifyConnection command\n   to the originating gateway:\n   \
    \   MDCX 1001 ds/ds1-1/1@gw-o.example.net MGCP 1.0\n      C: 1\n      I: 1\n \
    \     M: sendrecv\n      v=0\n      o=- 25678 753849 IN IP4 192.0.2.2\n      s=-\n\
    \      c=IN IP4 192.0.2.2\n      t=0 0\n      m=audio 1296 RTP/AVP 0\n   The ModifyConnection\
    \ command does not repeat the\n   LocalConnectionOptions sent previously.  As\
    \ far as fax handling is\n   concerned, the gateway therefore attempts to continue\
    \ using the\n   current fax handling procedure, i.e., loose Call Agent controlled\n\
    \   T.38.  The T.38 loose procedure can always be supported, and hence a\n   switch\
    \ to T.38 will be attempted if the originating gateway detects a\n   fax call.\n\
    \   Step 7:\n   The gateway acknowledges the command.  At this point, a call is\n\
    \   established using PCMU encoding, and if a fax call is detected, the\n   Call\
    \ Agent controlled T.38 procedure will be initiated.\n   Steps 8, 9:\n   A fax\
    \ call now occurs.  The T.30 CED tone (a.k.a. V.25 ANS) is\n   sent--in this case,\
    \ it is simply passed through the current PCMU\n   encoding.  Since both fax and\
    \ modem calls can start with this\n   sequence, it is not possible to determine\
    \ that this is a fax call\n   until step 9, where the V.21 fax preamble is detected.\n\
    \   Step 10:\n   The terminating SIP UA does in fact support T.38 and, upon detecting\n\
    \   the fax call, attempts to change to T.38.  Consequently, it sends a\n   re-INVITE\
    \ to the originating Call Agent with an updated SDP\n   indicating a switch to\
    \ T.38.\n      INVITE sip:ca@ca-o.example.net SIP/2.0\n      ...\n      Content-Type:\
    \ application/sdp\n      Content-Length: 100\n      v=0\n      o=- 25678 753850\
    \ IN IP4 192.0.2.2\n      s=-\n      c=IN IP4 192.0.2.2\n      t=0 0\n      m=image\
    \ 1296 udptl t38\n   Step 11:\n   The originating Call Agent then sends a ModifyConnection\
    \ command to\n   the originating gateway:\n      MDCX 1003 ds/ds1-1/1@gw-o.example.net\
    \ MGCP 1.0\n      C: 1\n      I: 1\n      v=0\n      o=- 25678 753850 IN IP4 192.0.2.2\n\
    \      s=-\n      c=IN IP4 192.0.2.2\n      t=0 0\n      m=image 1296 udptl t38\n\
    \   Step 12:\n   The originating gateway changes to T.38 and sends back a success\n\
    \   response with updated SDP:\n      200 1003 OK\n      v=0\n      o=- 25678\
    \ 753850 IN IP4 192.0.2.1\n      s=-\n      c=IN IP4 192.0.2.1\n      t=0 0\n\
    \      m=image 3456 udptl t38\n      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0\
    \ 18\n      a=cdsc: 3 image udptl t38\n   Step 13:\n   The originating Call Agent\
    \ sends a SIP 200 OK response with the\n   updated SDP to the terminating SIP\
    \ User Agent:\n      SIP/2.0 200 OK\n      ...\n      Content-Type: application/sdp\n\
    \      Content-Length: 167\n      v=0\n      o=- 25678 753850 IN IP4 192.0.2.1\n\
    \      s=-\n      c=IN IP4 192.0.2.1\n      t=0 0\n      m=image 3456 udptl t38\n\
    \      a=sqn: 0\n      a=cdsc: 1 audio RTP/AVP 0 18\n      a=cdsc: 3 image udptl\
    \ t38\n   Step 14:\n   The terminating SIP User Agent receives the SIP 200 and\
    \ sends a SIP\n   ACK.\n   Since the terminating SIP User Agent now has a\n  \
    \ RemoteConnectionDescriptor with \"image/t38\" as valid media, it can\n   start\
    \ exchanging T.38 with the originating gateway (and vice versa).\n   Steps 15,\
    \ 16:\n   The originating endpoint detects V.21 fax preamble.  Even though the\n\
    \   endpoint is already using \"image/t38\" for media, it generates a\n   \"t38(start)\"\
    \ event and notifies the Call Agent.\n      NTFY 3500 ds/ds1-1/1@gw-o.example.net\
    \ MGCP 1.0\n      O: fxr/t38(start)\n      X: 1\n   Steps 17, 18:\n   The Call\
    \ Agent acknowledges the Notify command and issues a new\n   (piggybacked) request\
    \ for notification of the T38 event.\n      200 3500 OK\n      .\n      RQNT 1004\
    \ ds/ds1-1/1@gw-o.example.net MGCP 1.0\n      R: fxr/t38\n      X: 2\n   Step\
    \ 19:\n   The gateway acknowledges the command.\n      200 1004 OK\n   Steps 20-22:\n\
    \   When the fax ends, the terminating SIP UA decides to tear down the\n   call\
    \ and hence sends a SIP BYE message, which the Call Agent responds\n   to with\
    \ a SIP 200.\n   Step 23:\n   The originating endpoint also generates a \"t38(stop)\"\
    \ event, which is\n   notified to the Call Agent:\n      NTFY 3502 ds/ds1-1/1@gw-o.example.net\
    \ MGCP 1.0 O: t38(stop) X: 2\n   Step 24:\n   The Call Agent acknowledges the\
    \ Notify command:\n      200 3502 OK\n   The fax call is now over.  The Call Agent\
    \ may now decide to change\n   back to a voice codec, delete the connection, or\
    \ do something\n   different.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The MGCP fax package itself is not known to introduce\
    \ any new\n   security concerns.  However, implementers should note that T.38\
    \ media\n   is currently transported over UDP (UDPTL) or TCP in the clear and\n\
    \   without any integrity protection.  If for example security services\n   are\
    \ in place to protect RTP media streams, these will thus not be in\n   effect\
    \ for the T.38 media stream.  If such lack of security is a\n   concern, the fax\
    \ LocalConnectionOptions allowing T.38 in this package\n   SHOULD NOT be used,\
    \ i.e., the \"off\" (or a new secure extension) fax\n   LocalConnectionOption\
    \ should be used.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has registered the following MGCP package:\n\
    \      Package Title         Name     Version\n      -------------         ----\
    \     -------\n      Fax                   FXR        0\n"
- title: 6.  Normative References
  contents:
  - "6.  Normative References\n   [RFC2119] Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC3435] Andreasen, F. and B. Foster, \"Media Gateway Control\n         \
    \    Protocol (MGCP) Version 1.0\", RFC 3435, January 2003.\n   [T38]     ITU-T\
    \ Recommendation T.38, \"Procedures for real-time Group\n             3 facsimile\
    \ communication over IP networks\", March 2002.\n   [RFC3407] Andreasen, F., \"\
    Session Description Protocol (SDP) Simple\n             Capability Declaration\"\
    , RFC 3407, October 2002.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [T30]     ITU-T Recommendation T.30, \"Procedures\
    \ for document\n             facsimile transmission in the general switched telephone\n\
    \             network\", July 2003.\n   [RFC3261] Rosenberg, J., Schulzrinne,\
    \ H., Camarillo, G., Johnston,\n             A., Peterson, J., Sparks, R., Handley,\
    \ M., and E. Schooler,\n             \"SIP: Session Initiation Protocol\", RFC\
    \ 3261, June 2002.\n   [RFC3264] Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer\
    \ Model\n             with Session Description Protocol (SDP)\", RFC 3264, June\n\
    \             2002.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Several people have contributed to the development of the\
    \ MGCP fax\n   package.  In particular, the author would like to thank Bill Foster,\n\
    \   Paul Jones, Gary Kelly, Rajesh Kumar, Dave Horwitz, Hiroshi Tamura,\n   Rob\
    \ Thompson, and the CableLabs PacketCable NCS focus team for their\n   contributions.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Flemming Andreasen\n   Cisco Systems\n   499 Thornall\
    \ Street, 8th Floor\n   Edison, NJ 08837\n   EMail: fandreas@cisco.com\n   David\
    \ Hancock\n   CableLabs\n   858 Coal Creek Circle\n   Louisville, CO 80027\n \
    \  EMail: d.hancock@cablelabs.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
