- title: __initial_text__
  contents:
  - '                 Internet Standard Subnetting Procedure

    '
- title: Status Of This Memo
  contents:
  - "Status Of This Memo\n   This RFC specifies a protocol for the ARPA-Internet community.\
    \  If\n   subnetting is implemented it is strongly recommended that these\n  \
    \ procedures be followed.  Distribution of this memo is unlimited.\n"
- title: Overview
  contents:
  - "Overview\n   This memo discusses the utility of \"subnets\" of Internet networks,\n\
    \   which are logically visible sub-sections of a single Internet\n   network.\
    \  For administrative or technical reasons, many organizations\n   have chosen\
    \ to divide one Internet network into several subnets,\n   instead of acquiring\
    \ a set of Internet network numbers.  This memo\n   specifies procedures for the\
    \ use of subnets.  These procedures are\n   for hosts (e.g., workstations).  The\
    \ procedures used in and between\n   subnet gateways are not fully described.\
    \  Important motivation and\n   background information for a subnetting standard\
    \ is provided in\n   RFC-940 [7].\n"
- title: Acknowledgment
  contents:
  - "Acknowledgment\n   This memo is based on RFC-917 [1].  Many people contributed\
    \ to the\n   development of the concepts described here.  J. Noel Chiappa, Chris\n\
    \   Kent, and Tim Mann, in particular, provided important suggestions.\n   Additional\
    \ contributions in shaping this memo were made by Zaw-Sing\n   Su, Mike Karels,\
    \ and the Gateway Algorithms and Data Structures Task\n   Force (GADS).\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - 'Internet Standard Subnetting Procedure

    '
- title: 1.  Motivation
  contents:
  - "1.  Motivation\n   The original view of the Internet universe was a two-level\
    \ hierarchy:\n   the top level the Internet as a whole, and the level below it\n\
    \   individual networks, each with its own network number.  The Internet\n   does\
    \ not have a hierarchical topology, rather the interpretation of\n   addresses\
    \ is hierarchical.  In this two-level model, each host sees\n   its network as\
    \ a single entity; that is, the network may be treated\n   as a \"black box\"\
    \ to which a set of hosts is connected.\n   While this view has proved simple\
    \ and powerful, a number of\n   organizations have found it inadequate, and have\
    \ added a third level\n   to the interpretation of Internet addresses.  In this\
    \ view, a given\n   Internet network is divided into a collection of subnets.\n\
    \   The three-level model is useful in networks belonging to moderately\n   large\
    \ organizations (e.g., Universities or companies with more than\n   one building),\
    \ where it is often necessary to use more than one LAN\n   cable to cover a \"\
    local area\".  Each LAN may then be treated as a\n   subnet.\n   There are several\
    \ reasons why an organization might use more than one\n   cable to cover a campus:\n\
    \      - Different technologies:  Especially in a research environment,\n    \
    \    there may be more than one kind of LAN in use; e.g., an\n        organization\
    \ may have some equipment that supports Ethernet, and\n        some that supports\
    \ a ring network.\n      - Limits of technologies:  Most LAN technologies impose\
    \ limits,\n        based on electrical parameters, on the number of hosts\n  \
    \      connected, and on the total length of the cable.  It is easy to\n     \
    \   exceed these limits, especially those on cable length.\n      - Network congestion:\
    \  It is possible for a small subset of the\n        hosts on a LAN to monopolize\
    \ most of the bandwidth.  A common\n        solution to this problem is to divide\
    \ the hosts into cliques of\n        high mutual communication, and put these\
    \ cliques on separate\n        cables.\n      - Point-to-Point links:  Sometimes\
    \ a \"local area\", such as a\n        university campus, is split into two locations\
    \ too far apart to\n        connect using the preferred LAN technology.  In this\
    \ case,\n        high-speed point-to-point links might connect several LANs.\n\
    \   An organization that has been forced to use more than one LAN has\n   three\
    \ choices for assigning Internet addresses:\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n      1. Acquire a distinct Internet\
    \ network number for each cable;\n         subnets are not used at all.\n    \
    \  2. Use a single network number for the entire organization, but\n         assign\
    \ host numbers without regard to which LAN a host is on\n         (\"transparent\
    \ subnets\").\n      3. Use a single network number, and partition the host address\n\
    \         space by assigning subnet numbers to the LANs (\"explicit\n        \
    \ subnets\").\n   Each of these approaches has disadvantages.  The first, although\
    \ not\n   requiring any new or modified protocols, results in an explosion in\n\
    \   the size of Internet routing tables.  Information about the internal\n   details\
    \ of local connectivity is propagated everywhere, although it\n   is of little\
    \ or no use outside the local organization.  Especially as\n   some current gateway\
    \ implementations do not have much space for\n   routing tables, it would be good\
    \ to avoid this problem.\n   The second approach requires some convention or protocol\
    \ that makes\n   the collection of LANs appear to be a single Internet network.\
    \  For\n   example, this can be done on LANs where each Internet address is\n\
    \   translated to a hardware address using an Address Resolution Protocol\n  \
    \ (ARP), by having the bridges between the LANs intercept ARP requests\n   for\
    \ non-local targets, see RFC-925 [2].  However, it is not possible\n   to do this\
    \ for all LAN technologies, especially those where ARP\n   protocols are not currently\
    \ used, or if the LAN does not support\n   broadcasts.  A more fundamental problem\
    \ is that bridges must discover\n   which LAN a host is on, perhaps by using a\
    \ broadcast algorithm.  As\n   the number of LANs grows, the cost of broadcasting\
    \ grows as well;\n   also, the size of translation caches required in the bridges\
    \ grows\n   with the total number of hosts in the network.\n   The third approach\
    \ is to explicitly support subnets.  This does have\n   a disadvantage, in that\
    \ it is a modification of the Internet\n   Protocol, and thus requires changes\
    \ to IP implementations already in\n   use (if these implementations are to be\
    \ used on a subnetted network).\n   However, these changes are relatively minor,\
    \ and once made, yield a\n   simple and efficient solution to the problem.  Also,\
    \ the approach\n   avoids any changes that would be incompatible with existing\
    \ hosts on\n   non-subnetted networks.\n   Further, when appropriate design choices\
    \ are made, it is possible for\n   hosts which believe they are on a non-subnetted\
    \ network to be used on\n   a subnetted one, as explained in RFC-917 [1].  This\
    \ is useful when it\n   is not possible to modify some of the hosts to support\
    \ subnets\n   explicitly, or when a gradual transition is preferred.\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - 'Internet Standard Subnetting Procedure

    '
- title: 2.  Standards for Subnet Addressing
  contents:
  - "2.  Standards for Subnet Addressing\n   This section first describes a proposal\
    \ for interpretation of\n   Internet addresses to support subnets.  Next it discusses\
    \ changes to\n   host software to support subnets.  Finally, it presents a procedures\n\
    \   for discovering what address interpretation is in use on a given\n   network\
    \ (i.e., what address mask is in use).\n   2.1. Interpretation of Internet Addresses\n\
    \      Suppose that an organization has been assigned an Internet network\n  \
    \    number, has further divided that network into a set of subnets,\n      and\
    \ wants to assign host addresses: how should this be done?\n      Since there\
    \ are minimal restrictions on the assignment of the\n      \"local address\" part\
    \ of the Internet address, several approaches\n      have been proposed for representing\
    \ the subnet number:\n         1. Variable-width field:  Any number of the bits\
    \ of the local\n            address part are used for the subnet number; the size\
    \ of\n            this field, although constant for a given network, varies\n\
    \            from network to network.  If the field width is zero, then\n    \
    \        subnets are not in use.\n         2. Fixed-width field:  A specific number\
    \ of bits (e.g., eight)\n            is used for the subnet number, if subnets\
    \ are in use.\n         3. Self-encoding variable-width field:  Just as the width\n\
    \            (i.e., class) of the network number field is encoded by its\n   \
    \         high-order bits, the width of the subnet field is similarly\n      \
    \      encoded.\n         4. Self-encoding fixed-width field:  A specific number\
    \ of bits\n            is used for the subnet number.\n         5. Masked bits:\
    \  Use a bit mask (\"address mask\") to identify\n            which bits of the\
    \ local address field indicate the subnet\n            number.\n      What criteria\
    \ can be used to choose one of these five schemes?\n      First, should we use\
    \ a self-encoding scheme?  And, should it be\n      possible to tell from examining\
    \ an Internet address if it refers\n      to a subnetted network, without reference\
    \ to any other\n      information?\n         An interesting feature of self-encoding\
    \ is that it allows the\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n         address space of a network to\
    \ be divided into subnets of\n         different sizes, typically one subnet of\
    \ half the address space\n         and a set of small subnets.\n            For\
    \ example, consider a class C network that uses a\n            self-encoding scheme\
    \ with one bit to indicate if it is the\n            large subnet or not and an\
    \ additional three bits to identify\n            the small subnet.  If the first\
    \ bit is zero then this is the\n            large subnet, if the first bit is\
    \ one then the following\n            bits (3 in this example) give the subnet\
    \ number.  There is\n            one subnet with 128 host addresses, and eight\
    \ subnets with\n            16 hosts each.\n         To establish a subnetting\
    \ standard the parameters and\n         interpretation of the self-encoding scheme\
    \ must be fixed and\n         consistent throughout the Internet.\n         It\
    \ could be assumed that all networks are subnetted.  This\n         would allow\
    \ addresses to be interpreted without reference to\n         any other information.\n\
    \            This is a significant advantage, that given the Internet\n      \
    \      address no additional information is needed for an\n            implementation\
    \ to determine if two addresses are on the same\n            subnet.  However,\
    \ this can also be viewed as a disadvantage:\n            it may cause problems\
    \ for networks which have existing host\n            numbers that use arbitrary\
    \ bits in the local address part.\n            In other words, it is useful to\
    \ be able to control whether a\n            network is subnetted independently\
    \ from the assignment of\n            host addresses.\n         The alternative\
    \ is to have the fact that a network is subnetted\n         kept separate from\
    \ the address.  If one finds, somehow, that\n         the network is subnetted\
    \ then the standard self-encoded\n         subnetted network address rules are\
    \ followed, otherwise the\n         non-subnetted network addressing rules are\
    \ followed.\n      If a self-encoding scheme is not used, there is no reason to\
    \ use a\n      fixed-width field scheme: since there must in any case be some\n\
    \      per-network \"flag\" to indicate if subnets are in use, the\n      additional\
    \ cost of using an integer (a subnet field width or\n      address mask) instead\
    \ of a boolean is negligible.  The advantage\n      of using the address mask\
    \ scheme is that it allows each\n      organization to choose the best way to\
    \ allocate relatively scarce\n      bits of local address to subnet and host numbers.\
    \  Therefore, we\n      choose the address-mask scheme: it is the most flexible\
    \ scheme,\n      yet costs no more to implement than any other.\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n      For example, the Internet address\
    \ might be interpreted as:\n         <network-number><subnet-number><host-number>\n\
    \      where the <network-number> field is as defined by IP [3], the\n      <host-number>\
    \ field is at least 1-bit wide, and the width of the\n      <subnet-number> field\
    \ is constant for a given network.  No further\n      structure is required for\
    \ the <subnet-number> or <host-number>\n      fields.  If the width of the <subnet-number>\
    \ field is zero, then\n      the network is not subnetted (i.e., the interpretation\
    \ of [3] is\n      used).\n      For example, on a Class B network with a 6-bit\
    \ wide subnet field,\n      an address would be broken down like this:\n     \
    \                      1                   2                   3\n       0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |1 0|        NETWORK            |  SUBNET   |    Host Number    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Since\
    \ the bits that identify the subnet are specified by a\n      bitmask, they need\
    \ not be adjacent in the address.  However, we\n      recommend that the subnet\
    \ bits be contiguous and located as the\n      most significant bits of the local\
    \ address.\n      Special Addresses:\n         From the Assigned Numbers memo\
    \ [9]:\n            \"In certain contexts, it is useful to have fixed addresses\n\
    \            with functional significance rather than as identifiers of\n    \
    \        specific hosts.  When such usage is called for, the address\n       \
    \     zero is to be interpreted as meaning \"this\", as in \"this\n          \
    \  network\".  The address of all ones are to be interpreted as\n            meaning\
    \ \"all\", as in \"all hosts\".  For example, the address\n            128.9.255.255\
    \ could be interpreted as meaning all hosts on\n            the network 128.9.\
    \  Or, the address 0.0.0.37 could be\n            interpreted as meaning host\
    \ 37 on this network.\"\n         It is useful to preserve and extend the interpretation\
    \ of these\n         special addresses in subnetted networks.  This means the\
    \ values\n         of all zeros and all ones in the subnet field should not be\n\
    \         assigned to actual (physical) subnets.\n            In the example above,\
    \ the 6-bit wide subnet field may have\n            any value except 0 and 63.\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n         Please note that there is no\
    \ effect or new restriction on the\n         addresses of hosts on non-subnetted\
    \ networks.\n   2.2. Changes to Host Software to Support Subnets\n      In most\
    \ implementations of IP, there is code in the module that\n      handles outgoing\
    \ datagrams to decide if a datagram can be sent\n      directly to the destination\
    \ on the local network or if it must be\n      sent to a gateway.\n      Generally\
    \ the code is something like this:\n         IF ip_net_number(dg.ip_dest) = ip_net_number(my_ip_addr)\n\
    \             THEN\n                 send_dg_locally(dg, dg.ip_dest)\n       \
    \      ELSE\n                 send_dg_locally(dg,\n                          \
    \        gateway_to(ip_net_number(dg.ip_dest)))\n      (If the code supports multiply-connected\
    \ networks, it will be more\n      complicated, but this is irrelevant to the\
    \ current discussion.)\n      To support subnets, it is necessary to store one\
    \ more 32-bit\n      quantity, called my_ip_mask.  This is a bit-mask with bits\
    \ set in\n      the fields corresponding to the IP network number, and additional\n\
    \      bits set corresponding to the subnet number field.\n      The code then\
    \ becomes:\n         IF bitwise_and(dg.ip_dest, my_ip_mask)\n                \
    \                   = bitwise_and(my_ip_addr, my_ip_mask)\n             THEN\n\
    \                 send_dg_locally(dg, dg.ip_dest)\n             ELSE\n       \
    \          send_dg_locally(dg,\n                        gateway_to(bitwise_and(dg.ip_dest,\
    \ my_ip_mask)))\n      Of course, part of the expression in the conditional can\
    \ be\n      pre-computed.\n      It may or may not be necessary to modify the\
    \ \"gateway_to\"\n      function, so that it too takes the subnet field bits into\
    \ account\n      when performing comparisons.\n      To support multiply-connected\
    \ hosts, the code can be changed to\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n      keep  the \"my_ip_addr\" and \"\
    my_ip_mask\" quantities on a\n      per-interface basis; the expression in the\
    \ conditional must then\n      be evaluated for each interface.\n   2.3. Finding\
    \ the Address Mask\n      How can a host determine what address mask is in use\
    \ on a subnet\n      to which it is connected?  The problem is analogous to several\n\
    \      other \"bootstrapping\" problems for Internet hosts: how a host\n     \
    \ determines its own address, and how it locates a gateway on its\n      local\
    \ network.  In all three cases, there are two basic solutions:\n      \"hardwired\"\
    \ information, and broadcast-based protocols.\n      Hardwired information is\
    \ that available to a host in isolation\n      from a network.  It may be compiled-in,\
    \ or (preferably) stored in\n      a disk file.  However, for the increasingly\
    \ common case of a\n      diskless workstation that is bootloaded over a LAN,\
    \ neither\n      hardwired solution is satisfactory.\n      Instead, since most\
    \ LAN technology supports broadcasting, a better\n      method is for the newly-booted\
    \ host to broadcast a request for the\n      necessary information.  For example,\
    \ for the purpose of\n      determining its Internet address, a host may use the\
    \ \"Reverse\n      Address Resolution Protocol\" (RARP) [4].\n      However, since\
    \ a newly-booted host usually needs to gather several\n      facts (e.g., its\
    \ IP address, the hardware address of a gateway,\n      the IP address of a domain\
    \ name server, the subnet address mask),\n      it would be better to acquire\
    \ all this information in one request\n      if possible, rather than doing numerous\
    \ broadcasts on the network.\n      The mechanisms designed to boot diskless workstations\
    \ can also\n      load per-host specific configuration files that contain the\n\
    \      required information (e.g., see RFC-951 [8]).  It is possible, and\n  \
    \    desirable, to obtain all the facts necessary to operate a host\n      from\
    \ a boot server using only one broadcast message.\n      In the case where it\
    \ is necessary for a host to find the address\n      mask as a separate operation\
    \ the following mechanism is provided:\n         To provide the address mask information\
    \ the ICMP protocol [5]\n         is extended by adding a new pair of ICMP message\
    \ types,\n         \"Address Mask Request\" and \"Address Mask Reply\", analogous\
    \ to\n         the \"Information Request\" and \"Information Reply\" ICMP\n  \
    \       messages.  These are described in detail in Appendix I.\n         The\
    \ intended use of these new ICMP messages is that a host,\n         when booting,\
    \ broadcast an \"Address Mask Request\" message.  A\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n         gateway (or a host acting in\
    \ lieu of a gateway) that receives\n         this message responds with an \"\
    Address Mask Reply\".  If there\n         is no indication in the request which\
    \ host sent it (i.e., the\n         IP Source Address is zero), the reply is broadcast\
    \ as well.\n         The requesting host will hear the response, and from it\n\
    \         determine the address mask.\n         Since there is only one possible\
    \ value that can be sent in an\n         \"Address Mask Reply\" on any given LAN,\
    \ there is no need for the\n         requesting host to match the responses it\
    \ hears against the\n         request it sent; similarly, there is no problem\
    \ if more than\n         one gateway responds.  We assume that hosts reboot\n\
    \         infrequently, so the broadcast load on a network from use of\n     \
    \    this protocol should be small.\n      If a host is connected to more than\
    \ one LAN, it might have to find\n      the address mask for each.\n      One\
    \ potential problem is what a host should do if it can not find\n      out the\
    \ address mask, even after a reasonable number of tries.\n      Three interpretations\
    \ can be placed on the situation:\n         1. The local net exists in (permanent)\
    \ isolation from all other\n            nets.\n         2. Subnets are not in\
    \ use, and no host can supply the address\n            mask.\n         3. All\
    \ gateways on the local net are (temporarily) down.\n      The first and second\
    \ situations imply that the address mask is\n      identical with the Internet\
    \ network number mask.  In the third\n      situation, there is no way to determine\
    \ what the proper value is;\n      the safest choice is thus a mask identical\
    \ with the Internet\n      network number mask.  Although this might later turn\
    \ out to be\n      wrong, it will not prevent transmissions that would otherwise\n\
    \      succeed.  It is possible for a host to recover from a wrong\n      choice:\
    \ when a gateway comes up, it should broadcast an \"Address\n      Mask Reply\"\
    ; when a host receives such a message that disagrees\n      with its guess, it\
    \ should change its mask to conform to the\n      received value.  No host or\
    \ gateway should send an \"Address Mask\n      Reply\" based on a \"guessed\"\
    \ value.\n      Finally, note that no host is required to use this ICMP protocol\n\
    \      to discover the address mask; it is perfectly reasonable for a\n      host\
    \ with non-volatile storage to use stored information\n      (including a configuration\
    \ file from a boot server).\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - 'Internet Standard Subnetting Procedure

    '
- title: Appendix I.  Address Mask ICMP
  contents:
  - "Appendix I.  Address Mask ICMP\n   Address Mask Request or Address Mask Reply\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |      Code     |          Checksum             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           Identifier          |       Sequence Number         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Address Mask                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      IP\
    \ Fields:\n         Addresses\n            The address of the source in an address\
    \ mask request message\n            will be the destination of the address mask\
    \ reply message.\n            To form an address mask reply message, the source\
    \ address of\n            the request becomes the destination address of the reply,\n\
    \            the source address of the reply is set to the replier's\n       \
    \     address, the type code changed to AM2, the address mask\n            value\
    \ inserted into the Address Mask field, and the checksum\n            recomputed.\
    \  However, if the source address in the request\n            message is zero,\
    \ then the destination address for the reply\n            message should denote\
    \ a broadcast.\n      ICMP Fields:\n         Type\n            AM1 for address\
    \ mask request message\n            AM2 for address mask reply message\n     \
    \    Code\n            0 for address mask request message\n            0 for address\
    \ mask reply message\n         Checksum\n            The checksum is the 16-bit\
    \ one's complement of the one's\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n            complement sum of the ICMP\
    \ message starting with the ICMP\n            Type.  For computing the checksum,\
    \ the checksum field should\n            be zero.  This checksum may be replaced\
    \ in the future.\n         Identifier\n            An identifier to aid in matching\
    \ requests and replies, may\n            be zero.\n         Sequence Number\n\
    \            A sequence number to aid in matching requests and replies,\n    \
    \        may be zero.\n         Address Mask\n            A 32-bit mask.\n   \
    \   Description\n         A gateway receiving an address mask request should return\
    \ it\n         with the address mask field set to the 32-bit mask of the bits\n\
    \         identifying the subnet and network, for the subnet on which the\n  \
    \       request was received.\n         If the requesting host does not know its\
    \ own IP address, it may\n         leave the source field zero; the reply should\
    \ then be\n         broadcast.  However, this approach should be avoided if at\
    \ all\n         possible, since it increases the superfluous broadcast load on\n\
    \         the network.  Even when the replies are broadcast, since there\n   \
    \      is only one possible address mask for a subnet, there is no\n         need\
    \ to match requests with replies.  The \"Identifier\" and\n         \"Sequence\
    \ Number\" fields can be ignored.\n            Type AM1 may be received from a\
    \ gateway or a host.\n            Type AM2 may be received from a gateway, or\
    \ a host acting in\n            lieu of a gateway.\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - 'Internet Standard Subnetting Procedure

    '
- title: Appendix II.  Examples
  contents:
  - "Appendix II.  Examples\n   These examples show how a host can find out the address\
    \ mask using\n   the ICMP Address Mask Request and Address Mask Reply messages.\
    \  For\n   the following examples, assume that address 255.255.255.255 denotes\n\
    \   \"broadcast to this physical medium\" [6].\n   1.  A Class A Network Case\n\
    \      For this case, assume that the requesting host is on class A\n      network\
    \ 36.0.0.0, has address 36.40.0.123, that there is a gateway\n      at 36.40.0.62,\
    \ and that a 8-bit wide subnet field is in use, that\n      is, the address mask\
    \ is 255.255.0.0.\n      The most efficient method, and the one we recommend,\
    \ is for a host\n      to first discover its own address (perhaps using \"RARP\"\
    \ [4]), and\n      then to send the ICMP request to 255.255.255.255:\n       \
    \  Source address:          36.40.0.123\n         Destination address:     255.255.255.255\n\
    \         Protocol:                ICMP = 1\n         Type:                  \
    \  Address Mask Request = AM1\n         Code:                    0\n         Mask:\
    \                    0\n      The gateway can then respond directly to the requesting\
    \ host.\n         Source address:          36.40.0.62\n         Destination address:\
    \     36.40.0.123\n         Protocol:                ICMP = 1\n         Type:\
    \                    Address Mask Reply = AM2\n         Code:                \
    \    0\n         Mask:                    255.255.0.0\n      Suppose that 36.40.0.123\
    \ is a diskless workstation, and does not\n      know even its own host number.\
    \  It could send the following\n      datagram:\n         Source address:    \
    \      0.0.0.0\n         Destination address:     255.255.255.255\n         Protocol:\
    \                ICMP = 1\n         Type:                    Address Mask Request\
    \ = AM1\n         Code:                    0\n         Mask:                 \
    \   0\n      36.40.0.62 will hear the datagram, and should respond with this\n\
    \      datagram:\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n         Source address:          36.40.0.62\n\
    \         Destination address:     255.255.255.255\n         Protocol:       \
    \         ICMP = 1\n         Type:                    Address Mask Reply = AM2\n\
    \         Code:                    0\n         Mask:                    255.255.0.0\n\
    \      Note that the gateway uses the narrowest possible broadcast to\n      reply.\
    \  Even so, the over use of broadcasts presents an\n      unnecessary load to\
    \ all hosts on the subnet, and so the use of the\n      \"anonymous\" (0.0.0.0)\
    \ source address must be kept to a minimum.\n      If broadcasting is not allowed,\
    \ we assume that hosts have wired-in\n      information about neighbor gateways;\
    \ thus, 36.40.0.123 might send\n      this datagram:\n         Source address:\
    \          36.40.0.123\n         Destination address:     36.40.0.62\n       \
    \  Protocol:                ICMP = 1\n         Type:                    Address\
    \ Mask Request = AM1\n         Code:                    0\n         Mask:    \
    \                0\n      36.40.0.62 should respond exactly as in the previous\
    \ case.\n         Source address:          36.40.0.62\n         Destination address:\
    \     36.40.0.123\n         Protocol:                ICMP = 1\n         Type:\
    \                    Address Mask Reply = AM2\n         Code:                \
    \    0\n         Mask:                    255.255.0.0\n   2.  A Class B Network\
    \ Case\n      For this case, assume that the requesting host is on class B\n \
    \     network 128.99.0.0, has address 128.99.4.123, that there is a\n      gateway\
    \ at 128.99.4.62, and that a 6-bit wide subnet field is in\n      use, that is,\
    \ the address mask is 255.255.252.0.\n      The host sends the ICMP request to\
    \ 255.255.255.255:\n         Source address:          128.99.4.123\n         Destination\
    \ address:     255.255.255.255\n         Protocol:                ICMP = 1\n \
    \        Type:                    Address Mask Request = AM1\n         Code: \
    \                   0\n         Mask:                    0\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n      The gateway can then respond directly\
    \ to the requesting host.\n         Source address:          128.99.4.62\n   \
    \      Destination address:     128.99.4.123\n         Protocol:             \
    \   ICMP = 1\n         Type:                    Address Mask Reply = AM2\n   \
    \      Code:                    0\n         Mask:                    255.255.252.0\n\
    \      In the diskless workstation case the host sends:\n         Source address:\
    \          0.0.0.0\n         Destination address:     255.255.255.255\n      \
    \   Protocol:                ICMP = 1\n         Type:                    Address\
    \ Mask Request = AM1\n         Code:                    0\n         Mask:    \
    \                0\n      128.99.4.62 will hear the datagram, and should respond\
    \ with this\n      datagram:\n         Source address:          128.99.4.62\n\
    \         Destination address:     255.255.255.255\n         Protocol:       \
    \         ICMP = 1\n         Type:                    Address Mask Reply = AM2\n\
    \         Code:                    0\n         Mask:                    255.255.252.0\n\
    \      If broadcasting is not allowed 128.99.4.123 sends:\n         Source address:\
    \          128.99.4.123\n         Destination address:     128.99.4.62\n     \
    \    Protocol:                ICMP = 1\n         Type:                    Address\
    \ Mask Request = AM1\n         Code:                    0\n         Mask:    \
    \                0\n      128.99.4.62 should respond exactly as in the previous\
    \ case.\n         Source address:          128.99.4.62\n         Destination address:\
    \     128.99.4.123\n         Protocol:                ICMP = 1\n         Type:\
    \                    Address Mask Reply = AM2\n         Code:                \
    \    0\n         Mask:                    255.255.252.0\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n   3.  A Class C Network Case (illustrating\
    \ non-contiguous subnet bits)\n      For this case, assume that the requesting\
    \ host is on class C\n      network 192.1.127.0, has address 192.1.127.19, that\
    \ there is a\n      gateway at 192.1.127.50, and that on network an 3-bit subnet\
    \ field\n      is in use (01011000), that is, the address mask is 255.255.255.88.\n\
    \      The host sends the ICMP request to 255.255.255.255:\n         Source address:\
    \          192.1.127.19\n         Destination address:     255.255.255.255\n \
    \        Protocol:                ICMP = 1\n         Type:                   \
    \ Address Mask Request = AM1\n         Code:                    0\n         Mask:\
    \                    0\n      The gateway can then respond directly to the requesting\
    \ host.\n         Source address:          192.1.127.50\n         Destination\
    \ address:     192.1.127.19\n         Protocol:                ICMP = 1\n    \
    \     Type:                    Address Mask Reply = AM2\n         Code:      \
    \              0\n         Mask:                    255.255.255.88.\n      In\
    \ the diskless workstation case the host sends:\n         Source address:    \
    \      0.0.0.0\n         Destination address:     255.255.255.255\n         Protocol:\
    \                ICMP = 1\n         Type:                    Address Mask Request\
    \ = AM1\n         Code:                    0\n         Mask:                 \
    \   0\n      192.1.127.50 will hear the datagram, and should respond with this\n\
    \      datagram:\n         Source address:          192.1.127.50\n         Destination\
    \ address:     255.255.255.255\n         Protocol:                ICMP = 1\n \
    \        Type:                    Address Mask Reply = AM2\n         Code:   \
    \                 0\n         Mask:                    255.255.255.88.\n     \
    \ If broadcasting is not allowed 192.1.127.19 sends:\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n         Source address:          192.1.127.19\n\
    \         Destination address:     192.1.127.50\n         Protocol:          \
    \      ICMP = 1\n         Type:                    Address Mask Request = AM1\n\
    \         Code:                    0\n         Mask:                    0\n  \
    \    192.1.127.50 should respond exactly as in the previous case.\n         Source\
    \ address:          192.1.127.50\n         Destination address:     192.1.127.19\n\
    \         Protocol:                ICMP = 1\n         Type:                  \
    \  Address Mask Reply = AM2\n         Code:                    0\n         Mask:\
    \                    255.255.255.88\n"
- title: Appendix III.  Glossary
  contents:
  - "Appendix III.  Glossary\n   Bridge\n      A node connected to two or more administratively\
    \ indistinguishable\n      but physically distinct subnets, that automatically\
    \ forwards\n      datagrams when necessary, but whose existence is not known to\n\
    \      other hosts.  Also called a \"software repeater\".\n   Gateway\n      A\
    \ node connected to two or more administratively distinct networks\n      and/or\
    \ subnets, to which hosts send datagrams to be forwarded.\n   Host Field\n   \
    \   The bit field in an Internet address used for denoting a specific\n      host.\n\
    \   Internet\n      The collection of connected networks using the IP protocol.\n\
    \   Local Address\n      The rest field of the Internet address (as defined in\
    \ [3]).\n   Network\n      A single Internet network (which may or may not be\
    \ divided into\n      subnets).\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - "Internet Standard Subnetting Procedure\n   Network Number\n      The network\
    \ field of the Internet address.\n   Subnet\n      One or more physical networks\
    \ forming a subset of an Internet\n      network.  A subnet is explicitly identified\
    \ in the Internet\n      address.\n   Subnet Field\n      The bit field in an\
    \ Internet address denoting the subnet number.\n      The bits making up this\
    \ field are not necessarily contiguous in\n      the address.\n   Subnet Number\n\
    \      A number identifying a subnet within a network.\n"
- title: Appendix IV.  Assigned Numbers
  contents:
  - "Appendix IV.  Assigned Numbers\n   The following assignments are made for protocol\
    \ parameters used in\n   the support of subnets.  The only assignments needed\
    \ are for the\n   Internet Control Message Protocol (ICMP) [5].\n   ICMP Message\
    \ Types\n      AM1 = 17\n      AM2 = 18\n"
- title: RFC 950                                                      August 1985
  contents:
  - 'RFC 950                                                      August 1985

    '
- title: Internet Standard Subnetting Procedure
  contents:
  - 'Internet Standard Subnetting Procedure

    '
- title: References
  contents:
  - "References\n   [1]  Mogul, J., \"Internet Subnets\", RFC-917, Stanford University,\n\
    \        October 1984.\n   [2]  Postel, J., \"Multi-LAN Address Resolution\",\
    \ RFC-925,\n        USC/Information Sciences Institute, October 1984.\n   [3]\
    \  Postel, J., \"Internet Protocol\", RFC-791, USC/Information\n        Sciences\
    \ Institute, September 1981.\n   [4]  Finlayson, R., T. Mann, J. Mogul, M. Theimer,\
    \ \"A Reverse Address\n        Resolution Protocol\", RFC-903, Stanford University,\
    \ June 1984.\n   [5]  Postel, J., \"Internet Control Message Protocol\", RFC-792,\n\
    \        USC/Information Sciences Institute, September 1981.\n   [6]  Mogul, J.,\
    \ \"Broadcasting Internet Datagrams\", RFC-919, Stanford\n        University,\
    \ October 1984.\n   [7]  GADS, \"Towards an Internet Standard Scheme for Subnetting\"\
    ,\n        RFC-940, Network Information Center, SRI International,\n        April\
    \ 1985.\n   [8]  Croft, B., and J. Gilmore, \"BOOTP -- UDP Bootstrap Protocol\"\
    ,\n        RFC-951, Stanford University, August 1985.\n   [9]  Reynolds, J., and\
    \ J. Postel, \"Assigned Numbers\", RFC-943,\n        USC/Information Sciences\
    \ Institute, April 1985.\n"
