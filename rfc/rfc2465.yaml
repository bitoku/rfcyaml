- title: __initial_text__
  contents:
  - "             Management Information Base for IP Version 6:\n                \
    \ Textual Conventions and General Group\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is one in the series of documents that provide MIB\n\
    \   definitions for for IP Version 6.  Specifically, the IPv6 MIB textual\n  \
    \ conventions as well as the IPv6 MIB General group is defined in this\n   document.\n\
    \   This memo defines a portion of the Management Information Base (MIB)\n   for\
    \ use with network management protocols in the IPv6-based\n   internets.\n   This\
    \ document specifies a MIB module in a manner that is both\n   compliant to the\
    \ SNMPv2 SMI, and semantically identical to the peer\n   SNMPv1 definitions.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   10. Full Copyright Statement.............................\
    \   38\n"
- title: 1.  The SNMPv2 Network Management Framework
  contents:
  - "1.  The SNMPv2 Network Management Framework\n   The SNMPv2 Network Management\
    \ Framework presently consists of three\n   major components.  They are:\n   o\
    \    the SMI, described in RFC 1902 [1] - the mechanisms used\n        for describing\
    \ and naming objects for the purpose of management.\n   o    the MIB-II, described\
    \ in RFC 1213/STD 17 [3] - the core\n        set of managed objects for the Internet\
    \ suite of protocols.\n   o    RFC 1157/STD 15 [4] and RFC 1905 [5] which define\
    \ two versions\n        of the protocol used for network access to managed objects.\n\
    \   The Framework permits new objects to be defined for the purpose of\n   experimentation\
    \ and evaluation.\n"
- title: 1.1.  Object Definitions
  contents:
  - "1.1.  Object Definitions\n   Managed objects are accessed via a virtual information\
    \ store, termed\n   the Management Information Base or MIB.  Objects in the MIB\
    \ are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n \
    \  defined in the SMI.  In particular, each object type is named by an\n   OBJECT\
    \ IDENTIFIER, an administratively assigned name.  The object\n   type together\
    \ with an object instance serves to uniquely identify a\n   specific instantiation\
    \ of the object.  For human convenience, we\n   often use a textual string, termed\
    \ the descriptor, to refer to the\n   object type.\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   This document is the first in the series of documents that define\n\
    \   various MIB object groups for IPv6. These groups are the basic unit\n   of\
    \ conformance: if the semantics of a group is applicable to an\n   implementation,\
    \ then it must implement all objects in that group.\n   For example, an implementation\
    \ must implement the TCP group if and\n   only if it implements the TCP over IPv6\
    \ protocol.  At minimum,\n   implementations must implement the IPv6 General group\
    \ defined in this\n   document as well as the ICMPv6 group [9].\n   This document\
    \ defines the IPv6 MIB textual conventions as well as the\n   IPv6 General group\
    \ which provides for the basic management of IPv6\n   entities and serve as the\
    \ foundation for other IPv6 MIB definitions.\n   The IPv6 General group consists\
    \ of 6 tables:\n       - ipv6IfTable\n            The IPv6 Interfaces table contains\
    \ information on the\n            entity's IPv6 interfaces.\n       - ipv6IfStatsTable\n\
    \            This table contains information on the traffic statistics of\n  \
    \          the entity's IPv6 interfaces.\n       - ipv6AddrPrefixTable\n     \
    \       The IPv6 Address Prefix table contains information on\n            Address\
    \ Prefixes that are associated with the entity's IPv6\n            interfaces.\n\
    \       - ipv6AddrTable\n            This table contains the addressing information\
    \ relevant to\n            the entity's IPv6 interfaces.\n       - ipv6RouteTable\n\
    \            The IPv6 routing table contains an entry for each valid IPv6\n  \
    \          unicast route that can be used for packet forwarding\n            determination.\n\
    \       - ipv6NetToMediaTable\n            The IPv6 address translation table\
    \ contain the IPv6 Address\n            to `physical' address equivalencies.\n"
- title: 3.  IPv6 Address Representation
  contents:
  - "3.  IPv6 Address Representation\n   The IPv6 MIB defined in this memo uses an\
    \ OCTET STRING of length 16\n   to represent 128-bit IPv6 address in network byte-\
    \ order.  This\n   approach allows to implement IPv6 MIB without requiring any\
    \ changes\n   to the SNMPv2 SMI and compliant SNMP implementations.\n"
- title: 4.  Definition of Textual Conventions
  contents:
  - "4.  Definition of Textual Conventions\n        IPV6-TC DEFINITIONS ::= BEGIN\n\
    \        IMPORTS\n             Integer32                FROM SNMPv2-SMI\n    \
    \         TEXTUAL-CONVENTION       FROM SNMPv2-TC;\n        -- definition of textual\
    \ conventions\n        Ipv6Address ::= TEXTUAL-CONVENTION\n             DISPLAY-HINT\
    \ \"2x:\"\n             STATUS       current\n             DESCRIPTION\n     \
    \          \"This data type is used to model IPv6 addresses.\n               \
    \ This is a binary string of 16 octets in network\n                byte-order.\"\
    \n             SYNTAX       OCTET STRING (SIZE (16))\n        Ipv6AddressPrefix\
    \ ::= TEXTUAL-CONVENTION\n             DISPLAY-HINT \"2x:\"\n             STATUS\
    \       current\n             DESCRIPTION\n               \"This data type is\
    \ used to model IPv6 address\n               prefixes. This is a binary string\
    \ of up to 16\n               octets in network byte-order.\"\n             SYNTAX\
    \       OCTET STRING (SIZE (0..16))\n        Ipv6AddressIfIdentifier ::= TEXTUAL-CONVENTION\n\
    \             DISPLAY-HINT \"2x:\"\n             STATUS       current\n      \
    \       DESCRIPTION\n               \"This data type is used to model IPv6 address\n\
    \               interface identifiers. This is a binary string\n             \
    \   of up to 8 octets in network byte-order.\"\n             SYNTAX      OCTET\
    \ STRING (SIZE (0..8))\n        Ipv6IfIndex ::= TEXTUAL-CONVENTION\n         \
    \    DISPLAY-HINT \"d\"\n             STATUS       current\n             DESCRIPTION\n\
    \               \"A unique value, greater than zero for each\n               internetwork-layer\
    \ interface in the managed\n               system. It is recommended that values\
    \ are assigned\n               contiguously starting from 1. The value for each\n\
    \               internetwork-layer interface must remain constant\n          \
    \     at least from one re-initialization of the entity's\n               network\
    \ management system to the next\n               re-initialization.\"\n       \
    \      SYNTAX       Integer32 (1..2147483647)\n        Ipv6IfIndexOrZero ::= TEXTUAL-CONVENTION\n\
    \             DISPLAY-HINT \"d\"\n             STATUS       current\n        \
    \     DESCRIPTION\n                 \"This textual convention is an extension\
    \ of the\n                 Ipv6IfIndex convention.  The latter defines\n     \
    \            a greater than zero value used to identify an IPv6\n            \
    \     interface in the managed system.  This extension\n                 permits\
    \ the additional value of zero.  The value\n                 zero is object-specific\
    \ and must therefore be\n                 defined as part of the description of\
    \ any object\n                 which uses this syntax.  Examples of the usage\
    \ of\n                 zero might include situations where interface was\n   \
    \              unknown, or when none or all interfaces need to be\n          \
    \       referenced.\"\n             SYNTAX       Integer32 (0..2147483647)\n \
    \       END\n"
- title: 5.  The IPv6 General Group
  contents:
  - "5.  The IPv6 General Group\n         IPV6-MIB DEFINITIONS ::= BEGIN\n       \
    \  IMPORTS\n             MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,\n  \
    \           mib-2, Counter32, Unsigned32, Integer32,\n             Gauge32   \
    \                            FROM SNMPv2-SMI\n             DisplayString, PhysAddress,\
    \ TruthValue, TimeStamp,\n             VariablePointer, RowPointer           FROM\
    \ SNMPv2-TC\n             MODULE-COMPLIANCE, OBJECT-GROUP,\n             NOTIFICATION-GROUP\
    \                    FROM SNMPv2-CONF\n             Ipv6IfIndex, Ipv6Address,\
    \ Ipv6AddressPrefix,\n             Ipv6AddressIfIdentifier,\n             Ipv6IfIndexOrZero\
    \                     FROM IPV6-TC;\n         ipv6MIB MODULE-IDENTITY\n      \
    \       LAST-UPDATED \"9802052155Z\"\n             ORGANIZATION \"IETF IPv6 Working\
    \ Group\"\n             CONTACT-INFO\n               \"           Dimitry Haskin\n\
    \                   Postal: Bay Networks, Inc.\n                           660\
    \ Techology Park Drive.\n                           Billerica, MA  01821\n   \
    \                        US\n                      Tel: +1-978-916-8124\n    \
    \               E-mail: dhaskin@baynetworks.com\n                           Steve\
    \ Onishi\n                   Postal: Bay Networks, Inc.\n                    \
    \       3 Federal Street\n                           Billerica, MA 01821\n   \
    \                        US\n                      Tel: +1-978-916-3816\n    \
    \               E-mail: sonishi@baynetworks.com\"\n             DESCRIPTION\n\
    \               \"The MIB module for entities implementing the IPv6\n        \
    \        protocol.\"\n             ::= { mib-2 55 }\n         -- the IPv6 general\
    \ group\n         ipv6MIBObjects OBJECT IDENTIFIER   ::= { ipv6MIB 1 }\n     \
    \    ipv6Forwarding OBJECT-TYPE\n             SYNTAX      INTEGER {\n        \
    \                  forwarding(1),    -- acting as a router\n                 \
    \                           -- NOT acting as\n                          notForwarding(2)\
    \  -- a router\n                         }\n              MAX-ACCESS read-write\n\
    \              STATUS     current\n              DESCRIPTION\n               \
    \ \"The indication of whether this entity is acting\n                as an IPv6\
    \ router in respect to the forwarding of\n                datagrams received by,\
    \ but not addressed to, this\n                entity.  IPv6 routers forward datagrams.\
    \  IPv6\n                hosts do not (except those source-routed via the\n  \
    \              host).\n                Note that for some managed nodes, this\
    \ object may\n                take on only a subset of the values possible.\n\
    \                Accordingly, it is appropriate for an agent to\n            \
    \    return a `wrongValue' response if a management\n                station attempts\
    \ to change this object to an\n                inappropriate value.\"\n      \
    \        ::= { ipv6MIBObjects 1 }\n         ipv6DefaultHopLimit OBJECT-TYPE\n\
    \             SYNTAX      INTEGER(0..255)\n             MAX-ACCESS  read-write\n\
    \              STATUS     current\n             DESCRIPTION\n                \"\
    The default value inserted into the Hop Limit\n                field of the IPv6\
    \ header of datagrams originated\n                at this entity, whenever a Hop\
    \ Limit value is not\n                supplied by the transport layer protocol.\"\
    \n             DEFVAL  { 64 }\n             ::= { ipv6MIBObjects 2 }\n       \
    \ ipv6Interfaces OBJECT-TYPE\n             SYNTAX      Unsigned32\n          \
    \   MAX-ACCESS  read-only\n             STATUS      current\n             DESCRIPTION\n\
    \               \"The number of IPv6 interfaces (regardless of\n             \
    \   their current state) present on this system.\"\n             ::= { ipv6MIBObjects\
    \ 3 }\n        ipv6IfTableLastChange OBJECT-TYPE\n             SYNTAX      TimeStamp\n\
    \             MAX-ACCESS  read-only\n             STATUS      current\n      \
    \       DESCRIPTION\n               \"The value of sysUpTime at the time of the\
    \ last\n               insertion or removal of an entry in the\n             \
    \  ipv6IfTable. If the number of entries has been\n               unchanged since\
    \ the last re-initialization of\n               the local network management subsystem,\
    \ then this\n               object contains a zero value.\"\n             ::=\
    \ { ipv6MIBObjects 4 }\n        -- the IPv6 Interfaces table\n        ipv6IfTable\
    \ OBJECT-TYPE\n             SYNTAX     SEQUENCE OF Ipv6IfEntry\n             MAX-ACCESS\
    \ not-accessible\n             STATUS     current\n             DESCRIPTION\n\
    \               \"The IPv6 Interfaces table contains information\n           \
    \    on the entity's internetwork-layer interfaces.\n               An IPv6 interface\
    \ constitutes a logical network\n               layer attachment to the layer\
    \ immediately below\n               IPv6 including internet layer 'tunnels', such\
    \ as\n               tunnels over IPv4 or IPv6 itself.\"\n             ::= { ipv6MIBObjects\
    \ 5 }\n         ipv6IfEntry OBJECT-TYPE\n             SYNTAX     Ipv6IfEntry\n\
    \             MAX-ACCESS not-accessible\n             STATUS     current\n   \
    \          DESCRIPTION\n               \"An interface entry containing objects\n\
    \                about a particular IPv6 interface.\"\n             INDEX   {\
    \ ipv6IfIndex }\n             ::= { ipv6IfTable 1 }\n         Ipv6IfEntry ::=\
    \ SEQUENCE {\n                 ipv6IfIndex              Ipv6IfIndex,\n       \
    \          ipv6IfDescr              DisplayString,\n                 ipv6IfLowerLayer\
    \         VariablePointer,\n                 ipv6IfEffectiveMtu       Unsigned32,\n\
    \                 ipv6IfReasmMaxSize       Unsigned32,\n                 ipv6IfIdentifier\
    \         Ipv6AddressIfIdentifier,\n                 ipv6IfIdentifierLength  \
    \ INTEGER,\n                 ipv6IfPhysicalAddress    PhysAddress,\n         \
    \        ipv6IfAdminStatus        INTEGER,\n                 ipv6IfOperStatus\
    \         INTEGER,\n                 ipv6IfLastChange         TimeStamp\n    \
    \         }\n         ipv6IfIndex OBJECT-TYPE\n             SYNTAX     Ipv6IfIndex\n\
    \             MAX-ACCESS not-accessible\n             STATUS     current\n   \
    \          DESCRIPTION\n               \"A unique non-zero value identifying\n\
    \                the particular IPv6 interface.\"\n             ::= { ipv6IfEntry\
    \ 1 }\n         ipv6IfDescr OBJECT-TYPE\n             SYNTAX     DisplayString\n\
    \             MAX-ACCESS read-write\n             STATUS     current\n       \
    \      DESCRIPTION\n               \"A textual string containing information about\
    \ the\n               interface.  This string may be set by the network\n    \
    \           management system.\"\n             ::= { ipv6IfEntry 2 }\n       \
    \  ipv6IfLowerLayer OBJECT-TYPE\n            SYNTAX      VariablePointer\n   \
    \         MAX-ACCESS  read-only\n            STATUS      current\n           \
    \ DESCRIPTION\n              \"This object identifies the protocol layer over\n\
    \               which this network interface operates.  If this\n            \
    \   network interface operates over the data-link\n               layer, then\
    \ the value of this object refers to an\n               instance of ifIndex [6].\
    \ If this network interface\n               operates over an IPv4 interface, the\
    \ value of this\n               object refers to an instance of ipAdEntAddr [3].\n\
    \               If this network interface operates over another\n            \
    \   IPv6 interface, the value of this object refers to\n               an instance\
    \ of ipv6IfIndex.  If this network\n               interface is not currently\
    \ operating over an active\n               protocol layer, then the value of this\
    \ object\n               should be set to the OBJECT ID { 0 0 }.\"\n         \
    \   ::= { ipv6IfEntry 3 }\n         ipv6IfEffectiveMtu OBJECT-TYPE\n         \
    \   SYNTAX      Unsigned32\n            UNITS       \"octets\"\n            MAX-ACCESS\
    \  read-only\n            STATUS      current\n            DESCRIPTION\n     \
    \         \"The size of the largest IPv6 packet which can be\n              sent/received\
    \ on the interface, specified in\n              octets.\"\n         ::= { ipv6IfEntry\
    \ 4 }\n         ipv6IfReasmMaxSize OBJECT-TYPE\n            SYNTAX      Unsigned32\
    \ (0..65535)\n            UNITS       \"octets\"\n            MAX-ACCESS  read-only\n\
    \            STATUS      current\n            DESCRIPTION\n              \"The\
    \ size of the largest IPv6 datagram which this\n              entity can re-assemble\
    \ from incoming IPv6 fragmented\n              datagrams received on this interface.\"\
    \n         ::= { ipv6IfEntry 5 }\n         ipv6IfIdentifier OBJECT-TYPE\n    \
    \         SYNTAX      Ipv6AddressIfIdentifier\n             MAX-ACCESS  read-write\n\
    \             STATUS      current\n             DESCRIPTION\n                \"\
    The Interface Identifier for this interface that\n                is (at least)\
    \ unique on the link this interface is\n                attached to. The Interface\
    \ Identifier is combined\n                with an address prefix to form an interface\
    \ address.\n                By default, the Interface Identifier is autoconfigured\n\
    \                according to the rules of the link type this\n              \
    \  interface is attached to.\"\n             ::= { ipv6IfEntry 6 }\n         ipv6IfIdentifierLength\
    \ OBJECT-TYPE\n             SYNTAX      INTEGER (0..64)\n             UNITS  \
    \     \"bits\"\n             MAX-ACCESS  read-write\n             STATUS     \
    \ current\n             DESCRIPTION\n               \"The length of the Interface\
    \ Identifier in bits.\"\n             ::= { ipv6IfEntry 7 }\n         ipv6IfPhysicalAddress\
    \ OBJECT-TYPE\n             SYNTAX      PhysAddress\n             MAX-ACCESS \
    \ read-only\n             STATUS      current\n             DESCRIPTION\n    \
    \           \"The interface's physical address. For example, for\n           \
    \    an IPv6 interface attached to an 802.x link, this\n               object\
    \ normally contains a MAC address. Note that\n               in some cases this\
    \ address may differ from the\n               address of the interface's protocol\
    \ sub-layer.  The\n               interface's media-specific MIB must define the\
    \ bit\n               and byte ordering and the format of the value of\n     \
    \          this object. For interfaces which do not have such\n              \
    \ an address (e.g., a serial line), this object should\n               contain\
    \ an octet string of zero length.\"\n             ::= { ipv6IfEntry 8 }\n    \
    \    ipv6IfAdminStatus OBJECT-TYPE\n            SYNTAX  INTEGER {\n          \
    \           up(1),       -- ready to pass packets\n                     down(2)\n\
    \                    }\n            MAX-ACCESS  read-write\n            STATUS\
    \      current\n            DESCRIPTION\n              \"The desired state of\
    \ the interface.  When a managed\n              system initializes,  all IPv6\
    \ interfaces start with\n              ipv6IfAdminStatus in the down(2) state.\
    \  As a result\n              of either explicit management action or per\n  \
    \            configuration information retained by the managed\n             \
    \ system,  ipv6IfAdminStatus is then changed to\n              the up(1) state\
    \ (or remains in the down(2) state).\"\n            ::= { ipv6IfEntry 9 }\n  \
    \      ipv6IfOperStatus OBJECT-TYPE\n            SYNTAX  INTEGER {\n         \
    \            up(1),             -- ready to pass packets\n                   \
    \  down(2),\n                     noIfIdentifier(3), -- no interface identifier\n\
    \                                        -- status can not be\n              \
    \                          -- determined for some\n                     unknown(4),\
    \        -- reason\n                                        -- some component\
    \ is\n                     notPresent(5)      -- missing\n                   \
    \ }\n            MAX-ACCESS  read-only\n            STATUS      current\n    \
    \        DESCRIPTION\n              \"The current operational state of the interface.\n\
    \              The noIfIdentifier(3) state indicates that no valid\n         \
    \     Interface Identifier is assigned to the interface.\n              This state\
    \ usually indicates that the link-local\n              interface address failed\
    \ Duplicate Address Detection.\n              If ipv6IfAdminStatus is down(2)\
    \ then ipv6IfOperStatus\n              should be down(2).  If ipv6IfAdminStatus\
    \ is changed\n              to up(1) then ipv6IfOperStatus should change to up(1)\n\
    \              if the interface is ready to transmit and receive\n           \
    \   network traffic; it should remain in the down(2) or\n              noIfIdentifier(3)\
    \ state if and only if there is a\n              fault that prevents it from going\
    \ to the up(1) state;\n              it should remain in the notPresent(5) state\
    \ if\n              the interface has missing (typically, lower layer)\n     \
    \         components.\"\n            ::= { ipv6IfEntry 10 }\n        ipv6IfLastChange\
    \ OBJECT-TYPE\n            SYNTAX      TimeStamp\n            MAX-ACCESS  read-only\n\
    \            STATUS      current\n            DESCRIPTION\n                \"\
    The value of sysUpTime at the time the interface\n                entered its\
    \ current operational state.  If the\n                current state was entered\
    \ prior to the last\n                re-initialization of the local network management\n\
    \                subsystem, then this object contains a zero\n               \
    \ value.\"\n            ::= { ipv6IfEntry 11 }\n         --  IPv6 Interface Statistics\
    \ table\n         ipv6IfStatsTable OBJECT-TYPE\n             SYNTAX     SEQUENCE\
    \ OF Ipv6IfStatsEntry\n             MAX-ACCESS not-accessible\n             STATUS\
    \     current\n             DESCRIPTION\n                 \"IPv6 interface traffic\
    \ statistics.\"\n             ::= { ipv6MIBObjects 6 }\n         ipv6IfStatsEntry\
    \ OBJECT-TYPE\n             SYNTAX     Ipv6IfStatsEntry\n             MAX-ACCESS\
    \ not-accessible\n             STATUS     current\n             DESCRIPTION\n\
    \                 \"An interface statistics entry containing objects\n       \
    \          at a particular IPv6 interface.\"\n             AUGMENTS { ipv6IfEntry\
    \ }\n             ::= { ipv6IfStatsTable 1 }\n         Ipv6IfStatsEntry ::= SEQUENCE\
    \ {\n                 ipv6IfStatsInReceives\n                     Counter32,\n\
    \                 ipv6IfStatsInHdrErrors\n                     Counter32,\n  \
    \               ipv6IfStatsInTooBigErrors\n                     Counter32,\n \
    \                ipv6IfStatsInNoRoutes\n                     Counter32,\n    \
    \             ipv6IfStatsInAddrErrors\n                     Counter32,\n     \
    \            ipv6IfStatsInUnknownProtos\n                     Counter32,\n   \
    \              ipv6IfStatsInTruncatedPkts\n                     Counter32,\n \
    \                ipv6IfStatsInDiscards\n                     Counter32,\n    \
    \             ipv6IfStatsInDelivers\n                     Counter32,\n       \
    \          ipv6IfStatsOutForwDatagrams\n                     Counter32,\n    \
    \             ipv6IfStatsOutRequests\n                     Counter32,\n      \
    \           ipv6IfStatsOutDiscards\n                     Counter32,\n        \
    \         ipv6IfStatsOutFragOKs\n                     Counter32,\n           \
    \      ipv6IfStatsOutFragFails\n                     Counter32,\n            \
    \     ipv6IfStatsOutFragCreates\n                     Counter32,\n           \
    \      ipv6IfStatsReasmReqds\n                     Counter32,\n              \
    \   ipv6IfStatsReasmOKs\n                     Counter32,\n                 ipv6IfStatsReasmFails\n\
    \                     Counter32,\n                 ipv6IfStatsInMcastPkts\n  \
    \                   Counter32,\n                 ipv6IfStatsOutMcastPkts\n   \
    \                  Counter32\n             }\n         ipv6IfStatsInReceives OBJECT-TYPE\n\
    \             SYNTAX      Counter32\n             MAX-ACCESS  read-only\n    \
    \         STATUS      current\n             DESCRIPTION\n                \"The\
    \ total number of input datagrams received by\n                the interface,\
    \ including those received in error.\"\n             ::= { ipv6IfStatsEntry 1\
    \ }\n         ipv6IfStatsInHdrErrors OBJECT-TYPE\n             SYNTAX     Counter32\n\
    \             MAX-ACCESS read-only\n             STATUS     current\n        \
    \     DESCRIPTION\n                \"The number of input datagrams discarded due\
    \ to\n                errors in their IPv6 headers, including version\n      \
    \          number mismatch, other format errors, hop count\n                exceeded,\
    \ errors discovered in processing their\n                IPv6 options, etc.\"\n\
    \             ::= { ipv6IfStatsEntry 2 }\n         ipv6IfStatsInTooBigErrors OBJECT-TYPE\n\
    \             SYNTAX      Counter32\n             MAX-ACCESS  read-only\n    \
    \         STATUS      current\n             DESCRIPTION\n               \"The\
    \ number of input datagrams that could not be\n               forwarded because\
    \ their size exceeded the link MTU\n               of outgoing interface.\"\n\
    \             ::= { ipv6IfStatsEntry 3 }\n         ipv6IfStatsInNoRoutes OBJECT-TYPE\n\
    \             SYNTAX      Counter32\n             MAX-ACCESS  read-only\n    \
    \         STATUS      current\n             DESCRIPTION\n                \"The\
    \ number of input datagrams discarded because no\n                 route could\
    \ be found to transmit them to their\n                 destination.\"\n      \
    \       ::= { ipv6IfStatsEntry 4 }\n         ipv6IfStatsInAddrErrors OBJECT-TYPE\n\
    \             SYNTAX      Counter32\n             MAX-ACCESS  read-only\n    \
    \         STATUS      current\n             DESCRIPTION\n                \"The\
    \ number of input datagrams discarded because\n                the IPv6 address\
    \ in their IPv6 header's destination\n                field was not a valid address\
    \ to be received at\n                this entity.  This count includes invalid\n\
    \                addresses (e.g., ::0) and unsupported addresses\n           \
    \     (e.g., addresses with unallocated prefixes).  For\n                entities\
    \ which are not IPv6 routers and therefore\n                do not forward datagrams,\
    \ this counter includes\n                datagrams discarded because the destination\
    \ address\n                was not a local address.\"\n             ::= { ipv6IfStatsEntry\
    \ 5 }\n         ipv6IfStatsInUnknownProtos OBJECT-TYPE\n             SYNTAX  \
    \    Counter32\n             MAX-ACCESS  read-only\n             STATUS      current\n\
    \             DESCRIPTION\n                \"The number of locally-addressed datagrams\n\
    \                received successfully but discarded because of an\n         \
    \       unknown or unsupported protocol. This counter is\n                incremented\
    \ at the interface to which these\n                datagrams were addressed which\
    \ might not be\n                necessarily the input interface for some of\n\
    \                the datagrams.\"\n             ::= { ipv6IfStatsEntry 6 }\n \
    \        ipv6IfStatsInTruncatedPkts OBJECT-TYPE\n             SYNTAX      Counter32\n\
    \             MAX-ACCESS  read-only\n             STATUS      current\n      \
    \       DESCRIPTION\n                \"The number of input datagrams discarded\
    \ because\n                 datagram frame didn't carry enough data.\"\n     \
    \        ::= { ipv6IfStatsEntry 7 }\n         ipv6IfStatsInDiscards OBJECT-TYPE\n\
    \             SYNTAX      Counter32\n             MAX-ACCESS  read-only\n    \
    \         STATUS      current\n             DESCRIPTION\n                \"The\
    \ number of input IPv6 datagrams for which no\n                problems were encountered\
    \ to prevent their\n                continued processing, but which were discarded\n\
    \                (e.g., for lack of buffer space).  Note that this\n         \
    \       counter does not include any datagrams discarded\n                while\
    \ awaiting re-assembly.\"\n             ::= { ipv6IfStatsEntry 8 }\n         ipv6IfStatsInDelivers\
    \ OBJECT-TYPE\n             SYNTAX      Counter32\n             MAX-ACCESS  read-only\n\
    \             STATUS      current\n             DESCRIPTION\n              \"\
    The total number of datagrams successfully\n              delivered to IPv6 user-protocols\
    \ (including ICMP).\n              This counter is incremented at the interface\
    \ to\n              which these datagrams were addressed which might\n       \
    \       not be necessarily the input interface for some of\n              the\
    \ datagrams.\"\n             ::= { ipv6IfStatsEntry 9 }\n         ipv6IfStatsOutForwDatagrams\
    \ OBJECT-TYPE\n             SYNTAX      Counter32\n             MAX-ACCESS  read-only\n\
    \             STATUS      current\n             DESCRIPTION\n                \"\
    The number of output datagrams which this\n                entity received and\
    \ forwarded to their final\n                destinations.  In entities which do\
    \ not act\n                as IPv6 routers, this counter will include\n      \
    \          only those packets which were Source-Routed\n                via this\
    \ entity, and the Source-Route\n                processing was successful.  Note\
    \ that for\n                a successfully forwarded datagram the counter\n  \
    \              of the outgoing interface is incremented.\"\n             ::= {\
    \ ipv6IfStatsEntry 10 }\n         ipv6IfStatsOutRequests OBJECT-TYPE\n       \
    \      SYNTAX      Counter32\n             MAX-ACCESS  read-only\n           \
    \  STATUS      current\n             DESCRIPTION\n              \"The total number\
    \ of IPv6 datagrams which local IPv6\n              user-protocols (including\
    \ ICMP) supplied to IPv6 in\n              requests for transmission.  Note that\
    \ this counter\n              does not include any datagrams counted in\n    \
    \          ipv6IfStatsOutForwDatagrams.\"\n             ::= { ipv6IfStatsEntry\
    \ 11 }\n         ipv6IfStatsOutDiscards OBJECT-TYPE\n             SYNTAX     \
    \ Counter32\n             MAX-ACCESS  read-only\n             STATUS      current\n\
    \             DESCRIPTION\n                 \"The number of output IPv6 datagrams\
    \ for which no\n                 problem was encountered to prevent their\n  \
    \               transmission to their destination, but which were\n          \
    \       discarded (e.g., for lack of buffer space).  Note\n                 that\
    \ this counter would include datagrams counted\n                 in ipv6IfStatsOutForwDatagrams\
    \ if any such packets\n                 met this (discretionary) discard criterion.\"\
    \n             ::= { ipv6IfStatsEntry 12 }\n         ipv6IfStatsOutFragOKs OBJECT-TYPE\n\
    \             SYNTAX      Counter32\n             MAX-ACCESS  read-only\n    \
    \         STATUS      current\n             DESCRIPTION\n                \"The\
    \ number of IPv6 datagrams that have been\n                 successfully fragmented\
    \ at this output interface.\"\n             ::= { ipv6IfStatsEntry 13 }\n    \
    \     ipv6IfStatsOutFragFails OBJECT-TYPE\n             SYNTAX      Counter32\n\
    \             MAX-ACCESS  read-only\n             STATUS      current\n      \
    \       DESCRIPTION\n                \"The number of IPv6 datagrams that have\
    \ been\n                 discarded because they needed to be fragmented\n    \
    \             at this output interface but could not be.\"\n             ::= {\
    \ ipv6IfStatsEntry 14 }\n         ipv6IfStatsOutFragCreates OBJECT-TYPE\n    \
    \         SYNTAX      Counter32\n             MAX-ACCESS  read-only\n        \
    \     STATUS      current\n             DESCRIPTION\n                \"The number\
    \ of output datagram fragments that have\n                 been generated as a\
    \ result of fragmentation at\n                 this output interface.\"\n    \
    \         ::= { ipv6IfStatsEntry 15 }\n         ipv6IfStatsReasmReqds OBJECT-TYPE\n\
    \             SYNTAX      Counter32\n             MAX-ACCESS  read-only\n    \
    \         STATUS      current\n             DESCRIPTION\n                \"The\
    \ number of IPv6 fragments received which needed\n                 to be reassembled\
    \ at this interface.  Note that this\n                 counter is incremented\
    \ at the interface to which\n                 these fragments were addressed which\
    \ might not\n                 be necessarily the input interface for some of\n\
    \                 the fragments.\"\n             ::= { ipv6IfStatsEntry 16 }\n\
    \         ipv6IfStatsReasmOKs OBJECT-TYPE\n             SYNTAX      Counter32\n\
    \             MAX-ACCESS  read-only\n             STATUS      current\n      \
    \       DESCRIPTION\n               \"The number of IPv6 datagrams successfully\n\
    \               reassembled.  Note that this counter is incremented\n        \
    \       at the interface to which these datagrams were\n               addressed\
    \ which might not be necessarily the input\n               interface for some\
    \ of the fragments.\"\n             ::= { ipv6IfStatsEntry 17 }\n         ipv6IfStatsReasmFails\
    \ OBJECT-TYPE\n             SYNTAX      Counter32\n             MAX-ACCESS  read-only\n\
    \             STATUS      current\n             DESCRIPTION\n                \"\
    The number of failures detected by the IPv6 re-\n                assembly algorithm\
    \ (for whatever reason: timed\n                out, errors, etc.).  Note that\
    \ this is not\n                necessarily a count of discarded IPv6 fragments\n\
    \                since some algorithms (notably the algorithm in\n           \
    \     RFC 815) can lose track of the number of fragments\n                by combining\
    \ them as they are received.\n                This counter is incremented at the\
    \ interface to which\n                these fragments were addressed which might\
    \ not be\n                necessarily the input interface for some of the\n  \
    \              fragments.\"\n             ::= { ipv6IfStatsEntry 18 }\n      \
    \   ipv6IfStatsInMcastPkts OBJECT-TYPE\n             SYNTAX      Counter32\n \
    \            MAX-ACCESS  read-only\n             STATUS     current\n        \
    \     DESCRIPTION\n                \"The number of multicast packets received\n\
    \                 by the interface\"\n             ::= { ipv6IfStatsEntry 19 }\n\
    \         ipv6IfStatsOutMcastPkts OBJECT-TYPE\n             SYNTAX      Counter32\n\
    \             MAX-ACCESS  read-only\n             STATUS      current\n      \
    \       DESCRIPTION\n                \"The number of multicast packets transmitted\n\
    \                 by the interface\"\n             ::= { ipv6IfStatsEntry 20 }\n\
    \         -- Address Prefix table\n         -- The IPv6 Address Prefix table contains\
    \ information on\n         -- the entity's IPv6 Address Prefixes that are associated\n\
    \         -- with IPv6 interfaces.\n         ipv6AddrPrefixTable OBJECT-TYPE\n\
    \             SYNTAX  SEQUENCE OF Ipv6AddrPrefixEntry\n             MAX-ACCESS\
    \  not-accessible\n             STATUS      current\n             DESCRIPTION\n\
    \                 \"The list of IPv6 address prefixes of\n                 IPv6\
    \ interfaces.\"\n             ::= { ipv6MIBObjects 7 }\n         ipv6AddrPrefixEntry\
    \ OBJECT-TYPE\n             SYNTAX  Ipv6AddrPrefixEntry\n             MAX-ACCESS\
    \  not-accessible\n             STATUS      current\n             DESCRIPTION\n\
    \                 \"An interface entry containing objects of\n               \
    \  a particular IPv6 address prefix.\"\n             INDEX   { ipv6IfIndex,\n\
    \                       ipv6AddrPrefix,\n                       ipv6AddrPrefixLength\
    \ }\n             ::= { ipv6AddrPrefixTable 1 }\n         Ipv6AddrPrefixEntry\
    \ ::= SEQUENCE {\n              ipv6AddrPrefix                     Ipv6AddressPrefix,\n\
    \              ipv6AddrPrefixLength               INTEGER (0..128),\n        \
    \      ipv6AddrPrefixOnLinkFlag           TruthValue,\n              ipv6AddrPrefixAutonomousFlag\
    \       TruthValue,\n              ipv6AddrPrefixAdvPreferredLifetime Unsigned32,\n\
    \              ipv6AddrPrefixAdvValidLifetime     Unsigned32\n             }\n\
    \         ipv6AddrPrefix OBJECT-TYPE\n             SYNTAX      Ipv6AddressPrefix\n\
    \             MAX-ACCESS  not-accessible\n             STATUS      current\n \
    \            DESCRIPTION\n               \"The prefix associated with the this\
    \ interface.\"\n             ::= { ipv6AddrPrefixEntry 1 }\n         ipv6AddrPrefixLength\
    \ OBJECT-TYPE\n             SYNTAX      INTEGER (0..128)\n             UNITS \
    \      \"bits\"\n             MAX-ACCESS  not-accessible\n             STATUS\
    \      current\n             DESCRIPTION\n               \"The length of the prefix\
    \ (in bits).\"\n             ::= { ipv6AddrPrefixEntry 2 }\n         ipv6AddrPrefixOnLinkFlag\
    \ OBJECT-TYPE\n             SYNTAX      TruthValue\n             MAX-ACCESS  read-only\n\
    \             STATUS      current\n             DESCRIPTION\n               \"\
    This object has the value 'true(1)', if this\n               prefix can be used\
    \  for on-link determination\n               and the value 'false(2)' otherwise.\"\
    \n             ::= { ipv6AddrPrefixEntry 3 }\n         ipv6AddrPrefixAutonomousFlag\
    \ OBJECT-TYPE\n             SYNTAX      TruthValue\n             MAX-ACCESS  read-only\n\
    \             STATUS      current\n             DESCRIPTION\n               \"\
    Autonomous address configuration flag. When\n               true(1), indicates\
    \ that this prefix can be used\n               for autonomous address configuration\
    \ (i.e. can\n               be used to form a local interface address).\n    \
    \           If false(2), it is not used to autoconfigure\n               a local\
    \ interface address.\"\n             ::= { ipv6AddrPrefixEntry 4 }\n         ipv6AddrPrefixAdvPreferredLifetime\
    \ OBJECT-TYPE\n             SYNTAX      Unsigned32\n             UNITS       \"\
    seconds\"\n             MAX-ACCESS  read-only\n             STATUS      current\n\
    \             DESCRIPTION\n                \"It is the length of time in seconds\
    \ that this\n                prefix will remain preferred, i.e. time until\n \
    \               deprecation.  A value of 4,294,967,295 represents\n          \
    \      infinity.\n                The address generated from a deprecated prefix\n\
    \                should no longer be used as a source address in\n           \
    \     new communications, but packets received on such\n                an interface\
    \ are processed as expected.\"\n             ::= { ipv6AddrPrefixEntry 5 }\n \
    \        ipv6AddrPrefixAdvValidLifetime OBJECT-TYPE\n             SYNTAX     \
    \ Unsigned32\n             UNITS       \"seconds\"\n             MAX-ACCESS  read-only\n\
    \             STATUS      current\n             DESCRIPTION\n               \"\
    It is the length of time in seconds that this\n               prefix will remain\
    \ valid, i.e. time until\n               invalidation.  A value of 4,294,967,295\
    \ represents\n               infinity.\n               The address generated from\
    \ an invalidated prefix\n               should not appear as the destination or\
    \ source\n               address of a packet.\"\n             ::= { ipv6AddrPrefixEntry\
    \ 6 }\n         -- the IPv6 Address table\n         -- The IPv6 address table\
    \ contains this node's IPv6\n         -- addressing information.\n         ipv6AddrTable\
    \ OBJECT-TYPE\n            SYNTAX      SEQUENCE OF Ipv6AddrEntry\n           \
    \ MAX-ACCESS  not-accessible\n            STATUS      current\n            DESCRIPTION\n\
    \              \"The table of addressing information relevant to\n           \
    \   this node's interface addresses.\"\n            ::= { ipv6MIBObjects 8 }\n\
    \         ipv6AddrEntry OBJECT-TYPE\n            SYNTAX      Ipv6AddrEntry\n \
    \           MAX-ACCESS  not-accessible\n            STATUS      current\n    \
    \        DESCRIPTION\n                \"The addressing information for one of\
    \ this\n                node's interface addresses.\"\n            INDEX   { ipv6IfIndex,\
    \ ipv6AddrAddress }\n            ::= { ipv6AddrTable 1 }\n         Ipv6AddrEntry\
    \ ::=\n            SEQUENCE {\n                 ipv6AddrAddress        Ipv6Address,\n\
    \                 ipv6AddrPfxLength      INTEGER,\n                 ipv6AddrType\
    \           INTEGER,\n                 ipv6AddrAnycastFlag    TruthValue,\n  \
    \               ipv6AddrStatus         INTEGER\n                }\n         ipv6AddrAddress\
    \ OBJECT-TYPE\n            SYNTAX      Ipv6Address\n            MAX-ACCESS  not-accessible\n\
    \            STATUS      current\n            DESCRIPTION\n              \"The\
    \ IPv6 address to which this entry's addressing\n              information pertains.\"\
    \n            ::= { ipv6AddrEntry 1 }\n         ipv6AddrPfxLength OBJECT-TYPE\n\
    \            SYNTAX      INTEGER(0..128)\n            UNITS       \"bits\"\n \
    \           MAX-ACCESS  read-only\n            STATUS      current\n         \
    \   DESCRIPTION\n              \"The length of the prefix (in bits) associated\
    \ with\n              the IPv6 address of this entry.\"\n            ::= { ipv6AddrEntry\
    \ 2 }\n         ipv6AddrType OBJECT-TYPE\n            SYNTAX      INTEGER {\n\
    \                                -- address has been formed\n                \
    \                -- using stateless\n                 stateless(1),  -- autoconfiguration\n\
    \                                -- address has been acquired\n              \
    \                  -- by stateful means\n                                -- (e.g.\
    \ DHCPv6, manual\n                 stateful(2),   -- configuration)\n        \
    \                        -- type can not be determined\n                 unknown(3)\
    \     -- for some reason.\n               }\n            MAX-ACCESS  read-only\n\
    \            STATUS      current\n            DESCRIPTION\n               \"The\
    \ type of address. Note that 'stateless(1)'\n               refers to an address\
    \ that was statelessly\n               autoconfigured; 'stateful(2)' refers to\
    \ a address\n               which was acquired by via a stateful protocol\n  \
    \             (e.g. DHCPv6, manual configuration).\"\n            ::= { ipv6AddrEntry\
    \ 3 }\n         ipv6AddrAnycastFlag OBJECT-TYPE\n             SYNTAX      TruthValue\n\
    \             MAX-ACCESS  read-only\n             STATUS      current\n      \
    \       DESCRIPTION\n               \"This object has the value 'true(1)', if\
    \ this\n               address is an anycast address and the value\n         \
    \      'false(2)' otherwise.\"\n             ::= { ipv6AddrEntry 4 }\n       \
    \  ipv6AddrStatus OBJECT-TYPE\n            SYNTAX      INTEGER {\n           \
    \          preferred(1),\n                     deprecated(2),\n              \
    \       invalid(3),\n                     inaccessible(4),\n                 \
    \    unknown(5)   -- status can not be determined\n                          \
    \        -- for some reason.\n                    }\n            MAX-ACCESS  read-only\n\
    \            STATUS      current\n            DESCRIPTION\n              \"Address\
    \ status.  The preferred(1) state indicates\n              that this is a valid\
    \ address that can appear as\n              the destination or source address\
    \ of a packet.\n              The deprecated(2) state indicates that this is\n\
    \              a valid but deprecated address that should no longer\n        \
    \      be used as a source address in new communications,\n              but packets\
    \ addressed to such an address are\n              processed as expected. The invalid(3)\
    \ state indicates\n              that this is not valid address which should not\n\
    \              appear as the destination or source address of\n              a\
    \ packet. The inaccessible(4) state indicates that\n              the address\
    \ is not accessible because the interface\n              to which this address\
    \ is assigned is not operational.\"\n            ::= { ipv6AddrEntry 5 }\n   \
    \      -- IPv6 Routing objects\n         ipv6RouteNumber OBJECT-TYPE\n       \
    \      SYNTAX      Gauge32\n             MAX-ACCESS  read-only\n             STATUS\
    \      current\n             DESCRIPTION\n               \"The number of current\
    \ ipv6RouteTable entries.\n               This is primarily to avoid having to\
    \ read\n               the table in order to determine this number.\"\n      \
    \       ::= { ipv6MIBObjects 9 }\n         ipv6DiscardedRoutes OBJECT-TYPE\n \
    \            SYNTAX      Counter32\n             MAX-ACCESS  read-only\n     \
    \        STATUS      current\n             DESCRIPTION\n               \"The number\
    \ of routing entries which were chosen\n                to be discarded even though\
    \ they are valid.  One\n                possible reason for discarding such an\
    \ entry could\n                be to free-up buffer space for other routing\n\
    \                entries.\"\n             ::= { ipv6MIBObjects 10 }\n        \
    \ -- IPv6 Routing table\n         ipv6RouteTable OBJECT-TYPE\n             SYNTAX\
    \     SEQUENCE OF Ipv6RouteEntry\n             MAX-ACCESS not-accessible\n   \
    \          STATUS     current\n             DESCRIPTION\n               \"IPv6\
    \ Routing table. This table contains\n               an entry for each valid IPv6\
    \ unicast route\n               that can be used for packet forwarding\n     \
    \          determination.\"\n             ::= { ipv6MIBObjects 11 }\n        \
    \ ipv6RouteEntry OBJECT-TYPE\n             SYNTAX     Ipv6RouteEntry\n       \
    \      MAX-ACCESS not-accessible\n             STATUS     current\n          \
    \   DESCRIPTION\n                     \"A routing entry.\"\n             INDEX\
    \   { ipv6RouteDest,\n                       ipv6RoutePfxLength,\n           \
    \            ipv6RouteIndex }\n             ::= { ipv6RouteTable 1 }\n       \
    \  Ipv6RouteEntry ::= SEQUENCE {\n                 ipv6RouteDest           Ipv6Address,\n\
    \                 ipv6RoutePfxLength      INTEGER,\n                 ipv6RouteIndex\
    \          Unsigned32,\n                 ipv6RouteIfIndex        Ipv6IfIndexOrZero,\n\
    \                 ipv6RouteNextHop        Ipv6Address,\n                 ipv6RouteType\
    \           INTEGER,\n                 ipv6RouteProtocol       INTEGER,\n    \
    \             ipv6RoutePolicy         Integer32,\n                 ipv6RouteAge\
    \            Unsigned32,\n                 ipv6RouteNextHopRDI     Unsigned32,\n\
    \                 ipv6RouteMetric         Unsigned32,\n                 ipv6RouteWeight\
    \         Unsigned32,\n                 ipv6RouteInfo           RowPointer,\n\
    \                 ipv6RouteValid          TruthValue\n             }\n       \
    \  ipv6RouteDest OBJECT-TYPE\n             SYNTAX     Ipv6Address\n          \
    \   MAX-ACCESS not-accessible\n             STATUS     current\n             DESCRIPTION\n\
    \               \"The destination IPv6 address of this route.\n              \
    \ This object may not take a Multicast address\n               value.\"\n    \
    \         ::= { ipv6RouteEntry 1 }\n         ipv6RoutePfxLength OBJECT-TYPE\n\
    \             SYNTAX     INTEGER(0..128)\n             UNITS      \"bits\"\n \
    \            MAX-ACCESS not-accessible\n             STATUS     current\n    \
    \         DESCRIPTION\n               \"Indicates the prefix length of the destination\n\
    \               address.\"\n             ::= { ipv6RouteEntry 2 }\n         ipv6RouteIndex\
    \ OBJECT-TYPE\n             SYNTAX     Unsigned32\n             MAX-ACCESS not-accessible\n\
    \             STATUS     current\n             DESCRIPTION\n               \"\
    The value which uniquely identifies the route\n               among the routes\
    \ to the same network layer\n               destination.  The way this value is\
    \ chosen is\n               implementation specific but it must be unique for\n\
    \               ipv6RouteDest/ipv6RoutePfxLength pair and remain\n           \
    \    constant for the life of the route.\"\n             ::= { ipv6RouteEntry\
    \ 3 }\n         ipv6RouteIfIndex OBJECT-TYPE\n             SYNTAX     Ipv6IfIndexOrZero\n\
    \             MAX-ACCESS read-only\n             STATUS     current\n        \
    \     DESCRIPTION\n               \"The index value which uniquely identifies\
    \ the local\n               interface through which the next hop of this\n   \
    \            route should be reached.  The interface identified\n            \
    \   by a particular value of this index is the same\n               interface\
    \ as identified by the same value of\n               ipv6IfIndex.  For routes\
    \ of the discard type this\n               value can be zero.\"\n            \
    \ ::= { ipv6RouteEntry 4 }\n         ipv6RouteNextHop OBJECT-TYPE\n          \
    \   SYNTAX     Ipv6Address\n             MAX-ACCESS read-only\n             STATUS\
    \     current\n             DESCRIPTION\n               \"On remote routes, the\
    \ address of the next\n               system en route;  otherwise, ::0\n     \
    \          ('00000000000000000000000000000000'H in ASN.1\n               string\
    \ representation).\"\n             ::= { ipv6RouteEntry 5 }\n         ipv6RouteType\
    \ OBJECT-TYPE\n             SYNTAX     INTEGER {\n                other(1),  \
    \   -- none of the following\n                              -- an route indicating\
    \ that\n                              -- packets to destinations\n           \
    \                   -- matching this route are\n                discard(2),  \
    \ -- to be discarded\n                              -- route to directly\n   \
    \             local(3),     -- connected (sub-)network\n                     \
    \         -- route to a remote\n                remote(4)     -- destination\n\
    \             }\n             MAX-ACCESS read-only\n             STATUS     current\n\
    \             DESCRIPTION\n                \"The type of route. Note that 'local(3)'\
    \ refers\n                to a route for which the next hop is the final\n   \
    \             destination; 'remote(4)' refers to a route for\n               \
    \ which  the  next  hop is not the final\n                destination; 'discard(2)'\
    \ refers to a route\n                indicating that packets to destinations matching\n\
    \                this route are to be discarded (sometimes called\n          \
    \      black-hole route).\"\n             ::= { ipv6RouteEntry 6 }\n         ipv6RouteProtocol\
    \ OBJECT-TYPE\n             SYNTAX     INTEGER {\n               other(1),   --\
    \ none of the following\n                           -- non-protocol information,\n\
    \                           -- e.g., manually configured\n               local(2),\
    \   -- entries\n               netmgmt(3), -- static route\n                 \
    \          -- obtained via Neighbor\n                           -- Discovery protocol,\n\
    \               ndisc(4),   -- e.g., result of Redirect\n                    \
    \       -- the following are all\n                           -- dynamic routing\
    \ protocols\n               rip(5),     -- RIPng\n               ospf(6),    --\
    \ Open Shortest Path First\n               bgp(7),     -- Border Gateway Protocol\n\
    \               idrp(8),    -- InterDomain Routing Protocol\n               igrp(9)\
    \     -- InterGateway Routing Protocol\n             }\n             MAX-ACCESS\
    \ read-only\n             STATUS     current\n             DESCRIPTION\n     \
    \          \"The routing mechanism via which this route was\n               learned.\"\
    \n             ::= { ipv6RouteEntry 7 }\n         ipv6RoutePolicy OBJECT-TYPE\n\
    \             SYNTAX     Integer32\n             MAX-ACCESS read-only\n      \
    \       STATUS     current\n             DESCRIPTION\n              \"The general\
    \ set of conditions that would cause the\n              selection of one multipath\
    \ route (set of next hops\n              for a given destination) is referred\
    \ to as 'policy'.\n              Unless the mechanism indicated by ipv6RouteProtocol\n\
    \              specified otherwise, the policy specifier is the\n            \
    \  8-bit Traffic Class field of the IPv6 packet header\n              that is\
    \ zero extended at the left to a 32-bit value.\n              Protocols defining\
    \ 'policy' otherwise must either\n              define a set of values which are\
    \ valid for\n              this object or must implement an integer-\n       \
    \       instanced  policy table for which this object's\n              value acts\
    \ as an index.\"\n             ::= { ipv6RouteEntry 8 }\n         ipv6RouteAge\
    \ OBJECT-TYPE\n             SYNTAX     Unsigned32\n             UNITS      \"\
    seconds\"\n             MAX-ACCESS read-only\n             STATUS     current\n\
    \             DESCRIPTION\n                \"The number of seconds since this\
    \ route was last\n                updated or otherwise determined to be correct.\n\
    \                Note that no semantics of `too old' can be implied\n        \
    \        except through knowledge of the routing protocol\n                by\
    \ which the route was learned.\"\n             ::= { ipv6RouteEntry 9 }\n    \
    \     ipv6RouteNextHopRDI OBJECT-TYPE\n             SYNTAX     Unsigned32\n  \
    \           MAX-ACCESS read-only\n             STATUS     current\n          \
    \   DESCRIPTION\n                \"The Routing Domain ID of the Next Hop.\n  \
    \              The  semantics of this object are determined by\n             \
    \   the routing-protocol specified in  the  route's\n                ipv6RouteProtocol\
    \ value.   When  this object is\n                unknown or not relevant its value\
    \ should be set\n                to zero.\"\n             ::= { ipv6RouteEntry\
    \ 10 }\n         ipv6RouteMetric OBJECT-TYPE\n             SYNTAX     Unsigned32\n\
    \             MAX-ACCESS read-only\n             STATUS     current\n        \
    \     DESCRIPTION\n                \"The routing metric for this route. The\n\
    \                semantics of this metric are determined by the\n            \
    \    routing protocol specified in the route's\n                ipv6RouteProtocol\
    \ value.  When this is unknown\n                or not relevant to the protocol\
    \ indicated by\n                ipv6RouteProtocol, the object value should be\n\
    \                set to its maximum value (4,294,967,295).\"\n             ::=\
    \ { ipv6RouteEntry 11 }\n         ipv6RouteWeight OBJECT-TYPE\n             SYNTAX\
    \     Unsigned32\n             MAX-ACCESS read-only\n             STATUS     current\n\
    \             DESCRIPTION\n                \"The system internal weight value\
    \ for this route.\n                The semantics of this value are determined\
    \ by\n                the implementation specific rules. Generally,\n        \
    \        within routes with the same ipv6RoutePolicy value,\n                the\
    \ lower the weight value the more preferred is\n                the route.\"\n\
    \             ::= { ipv6RouteEntry 12 }\n         ipv6RouteInfo OBJECT-TYPE\n\
    \             SYNTAX     RowPointer\n             MAX-ACCESS read-only\n     \
    \        STATUS     current\n             DESCRIPTION\n                \"A reference\
    \ to MIB definitions specific to the\n                particular routing protocol\
    \ which is responsible\n                for this route, as determined by the \
    \ value\n                specified  in the route's ipv6RouteProto value.\n   \
    \             If this information is not present,  its  value\n              \
    \  should be set to the OBJECT ID { 0 0 },\n                which is a syntactically\
    \ valid object  identifier,\n                and any implementation conforming\
    \ to ASN.1\n                and the Basic Encoding Rules must  be  able  to\n\
    \                generate and recognize this value.\"\n             ::= { ipv6RouteEntry\
    \ 13 }\n         ipv6RouteValid OBJECT-TYPE\n             SYNTAX     TruthValue\n\
    \             MAX-ACCESS read-write\n             STATUS     current\n       \
    \      DESCRIPTION\n                \"Setting this object to the value 'false(2)'\
    \ has\n                the effect of invalidating the corresponding entry\n  \
    \              in the ipv6RouteTable object.  That is, it\n                effectively\
    \ disassociates the destination\n                identified with said entry from\
    \ the route\n                identified with said entry.  It is an\n         \
    \       implementation-specific matter as to whether the\n                agent\
    \ removes an invalidated entry from the table.\n                Accordingly, management\
    \ stations must be prepared\n                to receive tabular information from\
    \ agents that\n                corresponds to entries not currently in use.\n\
    \                Proper interpretation of such entries requires\n            \
    \    examination of the relevant ipv6RouteValid\n                object.\"\n \
    \            DEFVAL  { true }\n             ::= { ipv6RouteEntry 14 }\n      \
    \   -- IPv6 Address Translation table\n         ipv6NetToMediaTable OBJECT-TYPE\n\
    \             SYNTAX      SEQUENCE OF Ipv6NetToMediaEntry\n             MAX-ACCESS\
    \  not-accessible\n             STATUS      current\n             DESCRIPTION\n\
    \               \"The IPv6 Address Translation table used for\n              \
    \ mapping from IPv6 addresses to physical addresses.\n               The IPv6\
    \ address translation table contain the\n               Ipv6Address to `physical'\
    \ address equivalencies.\n               Some interfaces do not use translation\
    \ tables\n               for determining address equivalencies; if all\n     \
    \          interfaces are of this type, then the Address\n               Translation\
    \ table is empty, i.e., has zero\n               entries.\"\n             ::=\
    \ { ipv6MIBObjects 12 }\n         ipv6NetToMediaEntry OBJECT-TYPE\n          \
    \   SYNTAX     Ipv6NetToMediaEntry\n             MAX-ACCESS not-accessible\n \
    \            STATUS     current\n             DESCRIPTION\n               \"Each\
    \ entry contains one IPv6 address to `physical'\n               address equivalence.\"\
    \n             INDEX   { ipv6IfIndex,\n                       ipv6NetToMediaNetAddress\
    \ }\n             ::= { ipv6NetToMediaTable 1 }\n         Ipv6NetToMediaEntry\
    \ ::= SEQUENCE {\n                 ipv6NetToMediaNetAddress\n                \
    \     Ipv6Address,\n                 ipv6NetToMediaPhysAddress\n             \
    \        PhysAddress,\n                 ipv6NetToMediaType\n                 \
    \    INTEGER,\n                 ipv6IfNetToMediaState\n                     INTEGER,\n\
    \                 ipv6IfNetToMediaLastUpdated\n                     TimeStamp,\n\
    \                 ipv6NetToMediaValid\n                     TruthValue\n     \
    \        }\n         ipv6NetToMediaNetAddress OBJECT-TYPE\n             SYNTAX\
    \     Ipv6Address\n             MAX-ACCESS not-accessible\n             STATUS\
    \     current\n             DESCRIPTION\n                \"The IPv6 Address corresponding\
    \ to\n                the media-dependent `physical' address.\"\n            \
    \ ::= { ipv6NetToMediaEntry 1 }\n         ipv6NetToMediaPhysAddress OBJECT-TYPE\n\
    \             SYNTAX     PhysAddress\n             MAX-ACCESS read-only\n    \
    \         STATUS     current\n             DESCRIPTION\n               \"The media-dependent\
    \ `physical' address.\"\n             ::= { ipv6NetToMediaEntry 2 }\n        \
    \ ipv6NetToMediaType OBJECT-TYPE\n             SYNTAX     INTEGER {\n        \
    \                 other(1),    -- none of the following\n                    \
    \     dynamic(2),  -- dynamically resolved\n                         static(3),\
    \   -- statically configured\n                         local(4)     -- local interface\n\
    \                        }\n             MAX-ACCESS read-only\n             STATUS\
    \     current\n             DESCRIPTION\n                     \"The type of the\
    \ mapping. The 'dynamic(2)' type\n                     indicates that the IPv6\
    \ address to physical\n                     addresses mapping has been dynamically\n\
    \                     resolved using the IPv6 Neighbor Discovery\n           \
    \          protocol. The static(3)' types indicates that\n                   \
    \  the mapping has been statically configured.\n                     The local(4)\
    \ indicates that the mapping is\n                     provided for an entity's\
    \ own interface address.\"\n             ::= { ipv6NetToMediaEntry 3 }\n     \
    \   ipv6IfNetToMediaState OBJECT-TYPE\n            SYNTAX      INTEGER {\n   \
    \                  reachable(1), -- confirmed reachability\n                 \
    \    stale(2),     -- unconfirmed reachability\n                     delay(3),\
    \     -- waiting for reachability\n                                   -- confirmation\
    \ before entering\n                                   -- the probe state\n   \
    \                  probe(4),     -- actively probing\n                     invalid(5),\
    \   -- an invalidated mapping\n                     unknown(6)    -- state can\
    \ not be determined\n                                   -- for some reason.\n\
    \                    }\n            MAX-ACCESS  read-only\n            STATUS\
    \      current\n            DESCRIPTION\n                \"The Neighbor Unreachability\
    \ Detection [8] state\n                for the interface when the address mapping\
    \ in\n                this entry is used.\"\n            ::= { ipv6NetToMediaEntry\
    \ 4 }\n        ipv6IfNetToMediaLastUpdated OBJECT-TYPE\n            SYNTAX   \
    \   TimeStamp\n            MAX-ACCESS  read-only\n            STATUS      current\n\
    \            DESCRIPTION\n                \"The value of sysUpTime at the time\
    \ this entry\n                was last updated.  If this entry was updated prior\n\
    \                to the last re-initialization of the local network\n        \
    \        management subsystem, then this object contains\n                a zero\
    \ value.\"\n            ::= { ipv6NetToMediaEntry 5 }\n         ipv6NetToMediaValid\
    \ OBJECT-TYPE\n             SYNTAX     TruthValue\n             MAX-ACCESS read-write\n\
    \             STATUS     current\n             DESCRIPTION\n              \"Setting\
    \ this object to the value 'false(2)' has\n              the effect of invalidating\
    \ the corresponding entry\n              in the ipv6NetToMediaTable.  That is,\
    \ it effectively\n              disassociates the interface identified with said\n\
    \              entry from the mapping identified with said entry.\n          \
    \    It is an implementation-specific matter as to\n              whether the\
    \ agent removes an invalidated entry\n              from the table.  Accordingly,\
    \ management stations\n              must be prepared to receive tabular information\n\
    \              from agents that corresponds to entries not\n              currently\
    \ in use.  Proper interpretation of such\n              entries requires examination\
    \ of the relevant\n              ipv6NetToMediaValid object.\"\n             DEFVAL\
    \  { true }\n             ::= { ipv6NetToMediaEntry 6 }\n        -- definition\
    \ of IPv6-related notifications.\n        -- Note that we need ipv6NotificationPrefix\
    \ with the 0\n        -- sub-identifier to make this MIB to translate to\n   \
    \     -- an SNMPv1 format in a reversible way. For example\n        -- it is needed\
    \ for proxies that convert SNMPv1 traps\n        -- to SNMPv2 notifications without\
    \ MIB knowledge.\n        ipv6Notifications      OBJECT IDENTIFIER\n         \
    \    ::= { ipv6MIB 2 }\n        ipv6NotificationPrefix OBJECT IDENTIFIER\n   \
    \          ::= { ipv6Notifications 0 }\n        ipv6IfStateChange NOTIFICATION-TYPE\n\
    \             OBJECTS {\n                      ipv6IfDescr,\n                \
    \      ipv6IfOperStatus -- the new state of the If.\n                     }\n\
    \             STATUS             current\n             DESCRIPTION\n         \
    \       \"An ipv6IfStateChange notification signifies\n                that there\
    \ has been a change in the state of\n                an ipv6 interface.  This\
    \ notification should\n                be generated when the interface's operational\n\
    \                status transitions to or from the up(1) state.\"\n          \
    \   ::= { ipv6NotificationPrefix 1 }\n        -- conformance information\n   \
    \     ipv6Conformance OBJECT IDENTIFIER ::= { ipv6MIB 3 }\n        ipv6Compliances\
    \ OBJECT IDENTIFIER ::= { ipv6Conformance 1 }\n        ipv6Groups      OBJECT\
    \ IDENTIFIER ::= { ipv6Conformance 2 }\n        -- compliance statements\n   \
    \     ipv6Compliance MODULE-COMPLIANCE\n            STATUS  current\n        \
    \    DESCRIPTION\n              \"The compliance statement for SNMPv2 entities\
    \ which\n              implement ipv6 MIB.\"\n            MODULE  -- this module\n\
    \                MANDATORY-GROUPS { ipv6GeneralGroup,\n                      \
    \             ipv6NotificationGroup }\n                  OBJECT    ipv6Forwarding\n\
    \                    MIN-ACCESS  read-only\n                    DESCRIPTION\n\
    \                       \"An agent is not required to provide write\n        \
    \                access to this object\"\n                  OBJECT    ipv6DefaultHopLimit\n\
    \                    MIN-ACCESS  read-only\n                    DESCRIPTION\n\
    \                       \"An agent is not required to provide write\n        \
    \                access to this object\"\n                  OBJECT    ipv6IfDescr\n\
    \                    MIN-ACCESS  read-only\n                    DESCRIPTION\n\
    \                       \"An agent is not required to provide write\n        \
    \                access to this object\"\n                  OBJECT    ipv6IfIdentifier\n\
    \                    MIN-ACCESS  read-only\n                    DESCRIPTION\n\
    \                       \"An agent is not required to provide write\n        \
    \                access to this object\"\n                  OBJECT    ipv6IfIdentifierLength\n\
    \                    MIN-ACCESS  read-only\n                    DESCRIPTION\n\
    \                       \"An agent is not required to provide write\n        \
    \                access to this object\"\n                  OBJECT    ipv6IfAdminStatus\n\
    \                    MIN-ACCESS  read-only\n                    DESCRIPTION\n\
    \                       \"An agent is not required to provide write\n        \
    \                access to this object\"\n                  OBJECT    ipv6RouteValid\n\
    \                    MIN-ACCESS  read-only\n                    DESCRIPTION\n\
    \                       \"An agent is not required to provide write\n        \
    \                access to this object\"\n                  OBJECT    ipv6NetToMediaValid\n\
    \                    MIN-ACCESS  read-only\n                    DESCRIPTION\n\
    \                       \"An agent is not required to provide write\n        \
    \                access to this object\"\n            ::= { ipv6Compliances 1\
    \ }\n        ipv6GeneralGroup OBJECT-GROUP\n            OBJECTS { ipv6Forwarding,\n\
    \                      ipv6DefaultHopLimit,\n                      ipv6Interfaces,\n\
    \                      ipv6IfTableLastChange,\n                      ipv6IfDescr,\n\
    \                      ipv6IfLowerLayer,\n                      ipv6IfEffectiveMtu,\n\
    \                      ipv6IfReasmMaxSize,\n                      ipv6IfIdentifier,\n\
    \                      ipv6IfIdentifierLength,\n                      ipv6IfPhysicalAddress,\n\
    \                      ipv6IfAdminStatus,\n                      ipv6IfOperStatus,\n\
    \                      ipv6IfLastChange,\n                      ipv6IfStatsInReceives,\n\
    \                      ipv6IfStatsInHdrErrors,\n                      ipv6IfStatsInTooBigErrors,\n\
    \                      ipv6IfStatsInNoRoutes,\n                      ipv6IfStatsInAddrErrors,\n\
    \                      ipv6IfStatsInUnknownProtos,\n                      ipv6IfStatsInTruncatedPkts,\n\
    \                      ipv6IfStatsInDiscards,\n                      ipv6IfStatsInDelivers,\n\
    \                      ipv6IfStatsOutForwDatagrams,\n                      ipv6IfStatsOutRequests,\n\
    \                      ipv6IfStatsOutDiscards,\n                      ipv6IfStatsOutFragOKs,\n\
    \                      ipv6IfStatsOutFragFails,\n                      ipv6IfStatsOutFragCreates,\n\
    \                      ipv6IfStatsReasmReqds,\n                      ipv6IfStatsReasmOKs,\n\
    \                      ipv6IfStatsReasmFails,\n                      ipv6IfStatsInMcastPkts,\n\
    \                      ipv6IfStatsOutMcastPkts,\n                      ipv6AddrPrefixOnLinkFlag,\n\
    \                      ipv6AddrPrefixAutonomousFlag,\n                      ipv6AddrPrefixAdvPreferredLifetime,\n\
    \                      ipv6AddrPrefixAdvValidLifetime,\n                     \
    \ ipv6AddrPfxLength,\n                      ipv6AddrType,\n                  \
    \    ipv6AddrAnycastFlag,\n                      ipv6AddrStatus,\n           \
    \           ipv6RouteNumber,\n                      ipv6DiscardedRoutes,\n   \
    \                   ipv6RouteIfIndex,\n                      ipv6RouteNextHop,\n\
    \                      ipv6RouteType,\n                      ipv6RouteProtocol,\n\
    \                      ipv6RoutePolicy,\n                      ipv6RouteAge,\n\
    \                      ipv6RouteNextHopRDI,\n                      ipv6RouteMetric,\n\
    \                      ipv6RouteWeight,\n                      ipv6RouteInfo,\n\
    \                      ipv6RouteValid,\n                      ipv6NetToMediaPhysAddress,\n\
    \                      ipv6NetToMediaType,\n                      ipv6IfNetToMediaState,\n\
    \                      ipv6IfNetToMediaLastUpdated,\n                      ipv6NetToMediaValid\
    \ }\n            STATUS    current\n            DESCRIPTION\n                \
    \ \"The IPv6 group of objects providing for basic\n                  management\
    \ of IPv6 entities.\"\n            ::= { ipv6Groups 1 }\n        ipv6NotificationGroup\
    \ NOTIFICATION-GROUP\n            NOTIFICATIONS { ipv6IfStateChange }\n      \
    \      STATUS    current\n            DESCRIPTION\n                 \"The notification\
    \ that an IPv6 entity is required\n                  to implement.\"\n       \
    \     ::= { ipv6Groups 2 }\n         END\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   This document borrows from MIB works produced by IETF\
    \ for IPv4-based\n   internets.\n   We would like to thanks the following individuals\
    \ for constructive\n   and valuable comments:\n         Mike Daniele,\n      \
    \   Margaret Forsythe,\n         Tim Hartrick,\n         Jean-Pierre Roch,\n \
    \        Juergen Schoenwaelder,\n         Frank Solensky,\n         Vivek Venkatraman.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1]  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose,\
    \ M.,\n        and S.  Waldbusser, \"Structure of Management Information for\n\
    \        Version 2 of the Simple Network Management Protocol (SNMPv2)\",\n   \
    \     RFC 1902, January 1996.\n   [2]  SNMPv2 Working Group, Case, J., McCloghrie,\
    \ K., Rose, M.,\n        and S. Waldbusser, \"Textual Conventions for Version\
    \ 2 of the\n        Simple Network Management Protocol (SNMPv2)\", RFC 1903, January\n\
    \        1996.\n   [3]  McCloghrie, K., and M. Rose, Editors, \"Management\n \
    \       Information Base for Network Management of TCP/IP-based\n        internets:\
    \ MIB-II\", STD 17, RFC 1213, Hughes LAN Systems,\n        Performance Systems\
    \ International, March 1991.\n   [4]  Case, J., Fedor, M., Schoffstall, M., and\
    \  J.  Davin, \"A\n        Simple Network Management Protocol (SNMP)\", STD 15,\
    \ RFC 1157,\n        SNMP Research, Performance Systems International, MIT Lab\
    \ for\n        Computer Science, May 1990.\n   [5]  SNMPv2 Working Group, Case,\
    \ J., McCloghrie, K., Rose, M.\n        and S. Waldbusser, \"Protocol Operations\
    \ for Version 2 of the\n        Simple Network Management Protocol (SNMPv2)\"\
    , RFC 1905, January\n        1996.\n   [6]  McCloghrie, K. and F. Kastenholz,\
    \ \"Evolution of the\n        Interfaces Group of MIB-II\", RFC 1573, January\
    \ 1994.\n   [7]  Deering, S., and R. Hinden, Editors, \"Internet Protocol,\n \
    \       Version 6 (IPv6) Specification\", RFC 2460, December 1998.\n   [8]  Narten,\
    \ T., Nordmark E., and W. Simpson, \"Neighbor\n        Discovery for IP Version\
    \ 6 (IPv6)\", RFC 2461, December 1998.\n   [9]  Haskin, D., and S. Onishi, \"\
    Management Information Base\n        for IP Version 6: ICMPv6 Group\", RFC 2466,\
    \ December 1998.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Certain management information defined in this\
    \ MIB may be considered\n   sensitive in some network environments.\n   Therefore,\
    \ authentication of received SNMP requests and controlled\n   access to management\
    \ information should be employed in such\n   environments.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Dimitry Haskin\n   Bay Networks, Inc.\n   600 Technology\
    \ Park Drive\n   Billerica, MA 01821\n   EMail: dhaskin@baynetworks.com\n   Steve\
    \ Onishi\n   Bay Networks, Inc.\n   3 Federal Street\n   Billerica, MA 01821\n\
    \   EMail: sonishi@baynetworks.com\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (1997).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\"\n"
