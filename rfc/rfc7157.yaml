- title: __initial_text__
  contents:
  - '          IPv6 Multihoming without Network Address Translation

    '
- title: Abstract
  contents:
  - "Abstract\n   Network Address and Port Translation (NAPT) works well for conserving\n\
    \   global addresses and addressing multihoming requirements because an\n   IPv4\
    \ NAPT router implements three functions: source address\n   selection, next-hop\
    \ resolution, and (optionally) DNS resolution.  For\n   IPv6 hosts, one approach\
    \ could be the use of IPv6-to-IPv6 Network\n   Prefix Translation (NPTv6).  However,\
    \ NAT and NPTv6 should be\n   avoided, if at all possible, to permit transparent\
    \ end-to-end\n   connectivity.  In this document, we analyze the use cases of\n\
    \   multihoming.  We also describe functional requirements and possible\n   solutions\
    \ for multihoming without the use of NAT in IPv6 for hosts\n   and small IPv6\
    \ networks that would otherwise be unable to meet\n   minimum IPv6-allocation\
    \ criteria.  We conclude that DHCPv6-based\n   solutions are suitable to solve\
    \ the multihoming issues described in\n   this document, but NPTv6 may be required\
    \ as an intermediate solution.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7157.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   5\n   3.  IPv6 Multihomed Network Scenarios . . . . . . . . . . .\
    \ . . .   6\n     3.1.  Classification of Network Scenarios for Multihomed Host\
    \ .   6\n     3.2.  Multihomed Network Environment  . . . . . . . . . . . . .\
    \   8\n     3.3.  Problem Statement . . . . . . . . . . . . . . . . . . . .  \
    \ 9\n   4.  Requirements  . . . . . . . . . . . . . . . . . . . . . . . .  11\n\
    \     4.1.  End-to-End Transparency . . . . . . . . . . . . . . . . .  11\n  \
    \   4.2.  Scalability . . . . . . . . . . . . . . . . . . . . . . .  11\n   5.\
    \  Problem Analysis  . . . . . . . . . . . . . . . . . . . . . .  11\n     5.1.\
    \  Source Address Selection  . . . . . . . . . . . . . . . .  11\n     5.2.  Next\
    \ Hop Selection  . . . . . . . . . . . . . . . . . . .  12\n     5.3.  DNS Recursive\
    \ Name Server Selection . . . . . . . . . . .  13\n   6.  Implementation Approach\
    \ . . . . . . . . . . . . . . . . . . .  13\n     6.1.  Source Address Selection\
    \  . . . . . . . . . . . . . . . .  14\n     6.2.  Next Hop Selection  . . . .\
    \ . . . . . . . . . . . . . . .  14\n     6.3.  DNS Recursive Name Server Selection\
    \ . . . . . . . . . . .  15\n     6.4.  Other Algorithms Available in RFCs  .\
    \ . . . . . . . . . .  16\n   7.  Considerations for MHMP Deployment  . . . .\
    \ . . . . . . . . .  16\n     7.1.  Non-MHMP Host Consideration . . . . . . .\
    \ . . . . . . . .  16\n     7.2.  Coexistence Considerations  . . . . . . . .\
    \ . . . . . . .  17\n     7.3.  Policy Collision Consideration  . . . . . . .\
    \ . . . . . .  17\n   8.  Security Considerations . . . . . . . . . . . . . .\
    \ . . . . .  18\n   9.  Contributors  . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  19\n   10. References  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  20\n     10.1.  Normative References . . . . . . . . . . . . . . . .\
    \ . .  20\n     10.2.  Informative References . . . . . . . . . . . . . . . .\
    \ .  20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In this document, we analyze the use cases of multihoming,\
    \ describe\n   functional requirements, and describe the problems with IPv6\n\
    \   multihoming.  There are two ways to avoid the problems of IPv6\n   multihoming:\n\
    \   1.  using IPv6-to-IPv6 network prefix translation (NPTv6) [RFC6296],\n   \
    \    or;\n   2.  refining IPv6 specifications to resolve the problems with IPv6\n\
    \       multihoming.\n   This document concerns itself with the latter and explores\
    \ the\n   solution space.  We hope this will encourage the development of\n  \
    \ solutions to the problem so that, in the long run, NPTv6 can be\n   avoided.\n\
    \   IPv6 provides enough globally unique addresses to permit every\n   conceivable\
    \ host on the Internet to be uniquely addressed without the\n   requirement for\
    \ Network Address Port Translation (NAPT) [RFC3022],\n   offering a renaissance\
    \ in end-to-end transparent connectivity.\n   Unfortunately, this may not be possible\
    \ in every case, due to the\n   possible necessity of NAT even in IPv6, because\
    \ of multihoming.\n   Though there are mechanisms to implement multihoming, such\
    \ as BGP\n   multihoming [RFC4116] at the network level and multihoming based\
    \ on\n   the Stream Control Transmission Protocol (SCTP) [RFC4960] in the\n  \
    \ transport layer, there is no mechanism in IPv6 that serves as a\n   replacement\
    \ for NAT-based multihoming in IPv4.  In IPv4, for a host\n   or a small network,\
    \ NAT-based multihoming is easily deployable and is\n   an already-deployed technique.\n\
    \   Whenever a host or small network (that does not meet minimum IPv6\n   allocation\
    \ criteria) is connected to multiple upstream networks, an\n   IPv6 address is\
    \ assigned by each respective service provider\n   resulting in hosts with multiple\
    \ global scope IPv6 addresses with\n   different prefixes.  As each service provider\
    \ is allocated a\n   different address space from its Internet Registry, it, in\
    \ turn,\n   assigns a different address space to the end-user network or host.\n\
    \   For example, a remote access user's host or router may use a VPN to\n   simultaneously\
    \ connect to a remote network and retain a default route\n   to the Internet for\
    \ other purposes.\n   In IPv4, a common solution to the multihoming problem is\
    \ to employ\n   NAPT on a border router and use private address space for individual\n\
    \   host addressing.  The use of NAPT allows hosts to have exactly one IP\n  \
    \ address visible on the public network, and the combination of NAPT\n   with\
    \ provider-specific outside addresses (one for each uplink) and\n   destination-based\
    \ routing insulates a host from the impacts of\n   multiple upstream networks.\
    \  The border router may also implement a\n   DNS cache or DNS policy to resolve\
    \ address queries from hosts.\n   It is our goal to avoid the IPv6 equivalent\
    \ of NAT.  So, the goals\n   for IPv6 multihoming defined in [RFC3582] do not\
    \ match the goals of\n   this document.  Also, regardless of what the NPTv6 specification\
    \ is,\n   we are trying to avoid any form of network address translation\n   technique\
    \ that may not be visible to either of the end hosts.  To\n   reach this goal,\
    \ several mechanisms are needed for end-user hosts to\n   have multiple address\
    \ assignments and resolve issues such as which\n   address to use for sourcing\
    \ traffic to which destination:\n   o  If multiple routers exist on a single link,\
    \ the host must select\n      the appropriate next hop for each connected network.\
    \  Each router\n      is in turn connected to a different service provider network,\n\
    \      which provides independent address assignment.  Routing protocols\n   \
    \   that would normally be employed for router-to-router network\n      advertisement\
    \ seem inappropriate for use by individual hosts.\n   o  Source address selection\
    \ becomes difficult whenever a host has\n      more than one address of the same\
    \ address scope.  Current address\n      selection criteria may result in hosts\
    \ using an arbitrary or\n      random address when sourcing upstream traffic.\
    \  Unfortunately, for\n      the host, the appropriate source address is a function\
    \ of the\n      upstream network for which the packet is bound.  If an upstream\n\
    \      service provider uses IP anti-spoofing or ingress filtering, it is\n  \
    \    conceivable that the packets that have an inappropriate source\n      address\
    \ for the upstream network would never reach their\n      destination.\n   o \
    \ In a multihomed environment, different DNS scopes or partitions\n      may exist\
    \ in each independent upstream network.  A DNS query sent\n      to an arbitrary\
    \ upstream DNS recursive name server may result in\n      incorrect or poisoned\
    \ responses.\n   In short, while IPv6 facilitates hosts having more than one address\n\
    \   in the same address scope, the application of this causes significant\n  \
    \ issues for a host from routing, source address selection, and DNS\n   resolution\
    \ perspectives.  A possible consequence of assigning a host\n   multiple identically\
    \ scoped addresses is severely impaired IP\n   connectivity.\n   If a host connects\
    \ to a network behind an IPv4 NAPT, the host has one\n   private address in the\
    \ local network.  There is no confusion.  The\n   NAT becomes the gateway of the\
    \ host and forwards the packet to an\n   appropriate network when it is multihomed.\
    \  It also operates a DNS\n   cache server or DNS proxy, which receives all DNS\
    \ inquires, and gives\n   a correct answer to the host.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   NPTv6       IPv6-to-IPv6 Network Prefix Translation as described\
    \ in\n               [RFC6296].\n   NAPT        Network Address Port Translation\
    \ as described in\n               [RFC3022].  In other contexts, NAPT is often\
    \ pronounced\n               \"NAT\" or written as \"NAT\".\n   MHMP        Multihomed\
    \ with multi-prefix.  A host implementation that\n               supports the\
    \ mechanisms described in this document;\n               namely, source address\
    \ selection policy, next hop\n               selection, and DNS selection policy.\n"
- title: 3.  IPv6 Multihomed Network Scenarios
  contents:
  - "3.  IPv6 Multihomed Network Scenarios\n   In this section, we classify three\
    \ scenarios of the multihoming\n   environment.\n"
- title: 3.1.  Classification of Network Scenarios for Multihomed Host
  contents:
  - "3.1.  Classification of Network Scenarios for Multihomed Host\n   Scenario 1:\n\
    \   In this scenario, two or more routers are present on a single link\n   shared\
    \ with the host(s).  Each router is, in turn, connected to a\n   different service\
    \ provider network, which provides independent\n   address assignment and DNS\
    \ recursive name servers.  A host in this\n   environment would be offered multiple\
    \ prefixes and DNS recursive name\n   servers advertised from the two different\
    \ routers.\n                                +------+       ___________\n     \
    \                           |      |      /           \\\n                   \
    \         +---| rtr1 |=====/   network   \\\n                            |   |\
    \      |     \\      1      /\n               +------+     |   +------+      \\\
    ___________/\n               |      |     |\n               | hosts|-----+\n \
    \              |      |     |\n               +------+     |   +------+      \
    \ ___________\n                            |   |      |      /           \\\n\
    \                            +---| rtr2 |=====/   network   \\\n             \
    \                   |      |     \\      2      /\n                          \
    \      +------+      \\___________/\n        Figure 1: Single Uplink, Multiple\
    \ Next Hop, Multiple Prefix\n                               (Scenario 1)\n   Figure\
    \ 1 illustrates the host connecting to rtr1 and rtr2 via a\n   shared link.  Networks\
    \ 1 and 2 are reachable via rtr1 and rtr2,\n   respectively.  When the host sends\
    \ packets to network 1, the next hop\n   to network 1 is rtr1.  Similarly, rtr2\
    \ is the next hop to network 2.\n   Example: multiple broadband service providers\
    \ (Internet, VoIP, IPTV,\n   etc.)\n   Scenario 2:\n   In this scenario, a single\
    \ gateway router connects the host to two or\n   more upstream service provider\
    \ networks.  This gateway router would\n   receive prefix delegations and a different\
    \ set of DNS recursive name\n   servers from each independent service provider\
    \ network.  The gateway,\n   in turn, advertises the provider prefixes to the\
    \ host, and for DNS,\n   may either act as a lightweight DNS cache server or advertise\
    \ the\n   complete set of service provider DNS recursive name servers to the\n\
    \   hosts.\n                                     +------+       ___________\n\
    \                       +-----+       |      |      /           \\\n         \
    \              |     |=======| rtr1 |=====/   network   \\\n                 \
    \      |     |port1  |      |     \\      1      /\n          +------+     | \
    \    |       +------+      \\___________/\n          |      |     |     |\n  \
    \        | hosts|-----| GW  |\n          |      |     | rtr |\n          +------+\
    \     |     |       +------+       ___________\n                       |     |port2\
    \  |      |      /           \\\n                       |     |-------| rtr2 |=====/\
    \   network   \\\n                       +-----+       |      |     \\      2\
    \      /\n                                     +------+      \\___________/\n\
    \         Figure 2: Single Uplink, Single Next Hop, Multiple Prefix\n        \
    \                       (Scenario 2)\n   Figure 2 illustrates the host connected\
    \ to GW rtr.  GW rtr connects\n   to networks 1 and 2 via port1 and 2, respectively.\
    \  As the figure\n   shows a logical topology of the scenario, port1 could be\
    \ a pseudo-\n   interface for tunneling, which connects to network 1 through network\n\
    \   2 and vice versa.  When the host sends packets to either network 1 or\n  \
    \ 2, the next hop is GW rtr.  When the packets are sent to network 1\n   (network\
    \ 2), GW rtr forwards the packets to port1 (port2).\n   Example: Internet + VPN\
    \ / Application Service Provider (ASP)\n   Scenario 3:\n   In this scenario, a\
    \ host has more than one active interface that\n   connects to different routers\
    \ and service provider networks.  Each\n   router provides the host with a different\
    \ address prefix and set of\n   DNS recursive name servers, resulting in a host\
    \ with a unique address\n   per link/interface.\n   +------+     +------+    \
    \   ___________\n   |      |     |      |      /           \\\n   |      |-----|\
    \ rtr1 |=====/   network   \\\n   |      |     |      |     \\      1      /\n\
    \   |      |     +------+      \\___________/\n   |      |\n   | host |\n   |\
    \      |\n   |      |     +------+       ___________\n   |      |     |      |\
    \      /           \\\n   |      |=====| rtr2 |=====/   network   \\\n   |   \
    \   |     |      |     \\      2      /\n   +------+     +------+      \\___________/\n\
    \       Figure 3: Multiple Uplink, Multiple Next Hop, Multiple Prefix\n      \
    \                         (Scenario 3)\n   Figure 3 illustrates the host connecting\
    \ to rtr1 and rtr2 via a\n   direct connection or a virtual link.  When the host\
    \ sends packets to\n   network 1, the next hop to network 1 is rtr1.  Similarly,\
    \ rtr2 is the\n   next hop to network 2.\n   Example: Mobile Wifi + 3G, ISP A\
    \ + ISP B\n"
- title: 3.2.  Multihomed Network Environment
  contents:
  - "3.2.  Multihomed Network Environment\n   In an IPv6 multihomed network, a host\
    \ is assigned two or more IPv6\n   addresses and DNS recursive name servers from\
    \ independent service\n   provider networks.  When this multihomed host attempts\
    \ to connect\n   with other hosts, it may incorrectly resolve the next-hop router,\
    \ use\n   an inappropriate source address, or use a DNS response from an\n   incorrect\
    \ service provider that may result in impaired IP\n   connectivity.\n   In many\
    \ cases, multihomed networks in IPv4 have been implemented\n   through the use\
    \ of a gateway router with NAPT function (scenario 2\n   with NAPT).  An analysis\
    \ of the current IPv4 NAPT and DNS functions\n   within the gateway router should\
    \ provide a baseline set of\n   requirements for IPv6 multihomed environments.\
    \  A destination prefix/\n   route is often used on the gateway router to separate\
    \ traffic between\n   the networks.\n                                     +------+\
    \       ___________\n                                     |      |      /    \
    \       \\\n                                 +---| rtr1 |=====/   network   \\\
    \n                                 |   |      |     \\      1      /\n       \
    \   +------+     +-----+   |   +------+      \\___________/\n          | IPv4\
    \ |     |     |   |\n          | hosts|-----| GW  |---+\n          |      |  \
    \   | rtr |   |\n          +------+     +-----+   |   +------+       ___________\n\
    \                      (NAPT&DNS) |   |      |      /           \\\n         \
    \ (private               +---| rtr2 |=====/   network   \\\n              address\
    \                |      |     \\      2      /\n                 space)      \
    \        +------+      \\___________/\n                Figure 4: IPv4 Multihomed\
    \ Environment with\n                      Gateway Router Performing NAPT\n"
- title: 3.3.  Problem Statement
  contents:
  - "3.3.  Problem Statement\n   A multihomed IPv6 host has one or more assigned IPv6\
    \ addresses and\n   DNS recursive name servers from each upstream service provider,\n\
    \   resulting in the host having multiple valid IPv6 addresses and DNS\n   recursive\
    \ name servers.  The host must be able to resolve the\n   appropriate next hop,\
    \ the correct source address, and the correct DNS\n   recursive name server to\
    \ use based on the destination prefix.  To\n   prevent IP spoofing, operators\
    \ will often implement ingress filtering\n   to discard traffic with an inappropriate\
    \ source address, making it\n   essential for the host to correctly resolve these\
    \ three items before\n   sourcing the first packet.\n   IPv6 has mechanisms for\
    \ the provision of multiple routers on a single\n   link and multiple address\
    \ assignments to a single host.  However,\n   when these mechanisms are applied\
    \ to the three scenarios described in\n   Section 3.1, a number of connectivity\
    \ issues are identified:\n   Scenario 1:\n   The host has been assigned an address\
    \ from each router and recognizes\n   both rtr1 and rtr2 as valid default routers\
    \ (in the default routers\n   list).\n   o  The source address selection policy\
    \ on the host does not\n      deterministically resolve a source address.  Ingress\
    \ filtering or\n      filter policies will discard traffic with source addresses\
    \ that\n      the operator did not assign.\n   o  The host will select one of\
    \ the two routers as the active default\n      router.  No traffic is sent to\
    \ the other router.\n   Scenario 2:\n   The host has been assigned two different\
    \ addresses from the single\n   gateway router.  The gateway router is the only\
    \ default router on the\n   link.\n   o  The source address selection policy on\
    \ the host does not\n      deterministically resolve a source address.  Ingress\
    \ filtering or\n      filter policies will discard traffic with source addresses\
    \ that\n      the operator did not assign.\n   o  The gateway router does not\
    \ have an autonomous mechanism for\n      determining which traffic should be\
    \ sent to which network.  If the\n      gateway router is implementing host functions\
    \ (i.e., processing\n      Router Advertisement (RA)), then two valid default\
    \ routers may be\n      recognized.\n   Scenario 3:\n   A host has two separate\
    \ interfaces, and each interface has a\n   different address assigned.  Each link\
    \ has its own router.\n   o  The host does not have enough information to determine\
    \ which\n      traffic should be sent to which upstream routers.  The host will\n\
    \      select one of the two routers as the active default router, and no\n  \
    \    traffic is sent to the other router.  The default address\n      selection\
    \ rules select the address assigned to the outgoing\n      interface as the source\
    \ address.  So, if a host has an appropriate\n      routing table, an appropriate\
    \ source address will be selected.\n   All scenarios:\n   o  In network deployments\
    \ utilizing local namespaces, the host may\n      choose to communicate with a\
    \ \"wrong\" DNS recursive server unable\n      to serve a local namespace.\n"
- title: 4.  Requirements
  contents:
  - "4.  Requirements\n   This section describes requirements that any solution multi-address\n\
    \   and multi-uplink architectures need to meet.\n"
- title: 4.1.  End-to-End Transparency
  contents:
  - "4.1.  End-to-End Transparency\n   One of the major design goals for IPv6 is to\
    \ restore the end-to-end\n   transparency of the Internet.  If NAT is applied\
    \ to IP communication\n   between hosts, NAT traversal mechanisms are required\
    \ to establish\n   bidirectional IP communication.  In an environment with end-to-end\n\
    \   transparency, a NAT traversal mechanism does not need to be\n   implemented\
    \ in an application (e.g., ICE [RFC5245]).  Therefore, the\n   IPv6 multihoming\
    \ solution should strive to avoid NPTv6 to achieve\n   end-to-end transparency.\n"
- title: 4.2.  Scalability
  contents:
  - "4.2.  Scalability\n   The solution will have to be able to manage a large number\
    \ of sites/\n   nodes.  In services for residential users, provider edge devices\
    \ have\n   to manage thousands of sites.  In such environments, sending packets\n\
    \   periodically to each site may affect edge system performance.\n"
- title: 5.  Problem Analysis
  contents:
  - "5.  Problem Analysis\n   The problems described in Section 3 can be classified\
    \ into these\n   three types:\n   o  Wrong source address selection\n   o  Wrong\
    \ next hop selection\n   o  Wrong DNS server selection\n   This section reviews\
    \ the problem statements presented above and the\n   proposed functional requirements\
    \ to resolve the issues.\n"
- title: 5.1.  Source Address Selection
  contents:
  - "5.1.  Source Address Selection\n   A multihomed IPv6 host will typically have\
    \ different addresses\n   assigned from each service provider on either the same\
    \ link\n   (scenarios 1 and 2) or different links (scenario 3).  When the host\n\
    \   wishes to send a packet to any given destination, the current source\n   address\
    \ selection rules [RFC6724] may not deterministically select\n   the correct source\
    \ address.  [RFC7078] describes the use of the\n   policy table (as discussed\
    \ in [RFC6724]) to resolve this problem,\n   using a DHCPv6 mechanism for host\
    \ policy table management.\n   Again, by employing DHCPv6, the server could restrict\
    \ address\n   assignment (of additional prefixes) only to hosts that support policy\n\
    \   table management.\n   Scenario 1: Host needs to support the solution for this\
    \ problem.\n   Scenario 2: Host needs to support the solution for this problem.\n\
    \   Scenario 3: If Host supports the next hop selection solution, there\n   is\
    \ no need to support the address selection functionality on the\n   host.\n  \
    \ It is noted that the network's DHCP server and DHCP-forwarding\n   routers must\
    \ also support the Address Selection option [RFC7078].\n"
- title: 5.2.  Next Hop Selection
  contents:
  - "5.2.  Next Hop Selection\n   A multihomed IPv6 host or gateway may have multiple\
    \ uplinks to\n   different service providers.  Here, each router would use Router\n\
    \   Advertisements [RFC4861] to distribute default route/next-hop\n   information\
    \ to the host or gateway router.\n   In this case, the host or gateway router\
    \ may select any valid default\n   router from the default routers list, resulting\
    \ in traffic being sent\n   to the wrong router and discarded by the upstream\
    \ service provider.\n   Using the above scenarios as an example, whenever the\
    \ host wishes to\n   reach a destination in network 2 and there is no connectivity\
    \ between\n   networks 1 and 2 (as is the case for a walled-garden or closed\n\
    \   service), the host or gateway router does not know whether to forward\n  \
    \ traffic to rtr1 or rtr2 to reach a destination in network 2.  The\n   host or\
    \ gateway router may choose rtr1 as the default router, but\n   traffic will fail\
    \ to reach the destination server.  The host or\n   gateway router requires route\
    \ information for each upstream service\n   provider, but the use of a routing\
    \ protocol between the gateway and\n   the two routers causes both configuration\
    \ and scaling issues.  In\n   IPv4, gateway routers are often pre-configured with\
    \ static routes or\n   use the Classless Static Route Options [RFC3442] for DHCPv4.\
    \  An\n   extension to Router Advertisements through Default Router Preference\n\
    \   and More-Specific Routes [RFC4191] provides for link-specific\n   preferences\
    \ but does not address per-host configuration in a multi-\n   access topology\
    \ because of its reliance on Router Advertisements.\n   Scenario 1: Host needs\
    \ to support the solution for this problem.\n   Scenario 2: GW rtr needs to support\
    \ the solution for this problem.\n   Scenario 3: Host needs to support the solution\
    \ for this problem.\n"
- title: 5.3.  DNS Recursive Name Server Selection
  contents:
  - "5.3.  DNS Recursive Name Server Selection\n   A multihomed IPv6 host or gateway\
    \ router may be provided multiple DNS\n   recursive name servers through DHCPv6\
    \ [RFC3646] or RA [RFC6106].\n   When the host or gateway router sends a DNS query,\
    \ it would normally\n   choose one of the available DNS recursive name servers\
    \ for the query.\n   In the IPv6 gateway router scenario, the Broadband Forum\
    \ (BBF)\n   [TR-124] requires that the query be sent to all DNS recursive name\n\
    \   servers and that the gateway wait for the first reply.  In IPv6,\n   given\
    \ our use of specific destination-based policy for both routing\n   and source\
    \ address selection, it is desirable to extend a policy-\n   based concept to\
    \ DNS recursive name server selection.  Doing so can\n   minimize DNS recursive\
    \ name server load and avoid issues where DNS\n   recursive name servers in different\
    \ networks have connectivity\n   issues, or the DNS recursive name servers are\
    \ not publicly\n   accessible.  In the worst case, a DNS query for a name from\
    \ a local\n   namespace may not be resolved correctly if sent towards a DNS server\n\
    \   not aware of said local namespace, resulting in a lack of\n   connectivity.\n\
    \   It is not an issue of the Domain Name System model itself, but an\n   IPv6\
    \ multihomed host or gateway router should have the ability to\n   select appropriate\
    \ DNS recursive name servers for each service based\n   on the domain space for\
    \ the destination, and each service should\n   provide rules specific to that\
    \ network.  [RFC6731] proposes a\n   solution for distributing DNS server selection\
    \ policy using a DHCPv6\n   option.\n   Scenario 1: Host needs to support the\
    \ solution for this problem.\n   Scenario 2: GW rtr needs to support the solution\
    \ for this problem.\n   Scenario 3: Host needs to support the solution for this\
    \ problem.\n   It is noted that the network's DHCP server and DHCP-forwarding\n\
    \   routers must also support the Address Selection option [RFC6731].\n"
- title: 6.  Implementation Approach
  contents:
  - "6.  Implementation Approach\n   As mentioned in Section 5, in the multi-prefix\
    \ environment, we have\n   three problems: source address selection, next hop\
    \ selection, and DNS\n   recursive name server selection.  In this section, possible\
    \ solutions\n   for each problem are introduced and evaluated against the\n  \
    \ requirements in Section 4.\n"
- title: 6.1.  Source Address Selection
  contents:
  - "6.1.  Source Address Selection\n   The problems of address selection in multi-prefix\
    \ environments are\n   summarized in [RFC5220].  When solutions are examined against\
    \ the\n   requirements in Section 4, the proactive approaches, such as the\n \
    \  policy table distribution mechanism and the routing hints mechanism,\n   are\
    \ more appropriate in that they can propagate the network\n   administrator's\
    \ policy directly.  The policy distribution mechanism\n   has an advantage with\
    \ regard to the host's protocol stack impact and\n   the static nature of the\
    \ assumed target network environment.\n"
- title: 6.2.  Next Hop Selection
  contents:
  - "6.2.  Next Hop Selection\n   As for the source address selection problem, both\
    \ a policy-based\n   approach and a non-policy-based approach are possible with\
    \ regard to\n   the next hop selection problem.  Because of the same requirements,\n\
    \   the policy propagation-based solution mechanism, whatever the policy,\n  \
    \ should be more appropriate.\n   Routing information is a typical example of\
    \ policy related to next\n   hop selection.  If we assume source-address-based\
    \ routing at hosts or\n   intermediate routers, pairs of source prefixes and next\
    \ hops can be\n   another example of next hop selection policy.\n   The routing-information-based\
    \ approach has a clear advantage in\n   implementation and is already commonly\
    \ used.\n   The existing proposed or standardized routing information\n   distribution\
    \ mechanisms are routing protocols (such as Routing\n   Information Protocol Next\
    \ Generation (RIPng) and OSPFv3), the RA\n   extension option defined in [RFC4191],\
    \ and the CPE WAN Management\n   Protocol (CWMP) [TR069] standardized at BBF.\n\
    \   The RA-based mechanism doesn't handle distribution of per-host\n   routing\
    \ information easily.  Dynamic routing protocols are not\n   typically used between\
    \ residential users and ISPs, because of their\n   scalability and security implications.\
    \  The DHCPv6 mechanism does not\n   have these problems and has the advantage\
    \ of relay functionality.  It\n   is commonly used and is thus easy to deploy.\n\
    \   [TR069], mentioned above, defines a possible solution mechanism for\n   routing\
    \ information distribution to customer premises equipment\n   (CPE).  It assumes,\
    \ however, that IP reachability to the Auto\n   Configuration Server (ACS) has\
    \ been established.  Therefore, if the\n   CPE requires routing information to\
    \ reach the ACS, CWMP [TR069]\n   cannot be used to distribute this information.\n"
- title: 6.3.  DNS Recursive Name Server Selection
  contents:
  - "6.3.  DNS Recursive Name Server Selection\n      Note: Split-horizon DNS is discussed\
    \ in this section.  Split-\n      horizon DNS is known to cause problems with\
    \ applications to allow\n      information leakage.  The discussion of split-horizon\
    \ DNS is not\n      condoning its use, but rather acknowledging that split-horizon\
    \ DNS\n      is used and that its use is another justification for network\n \
    \     address translation.  The goal of this document is to encourage\n      building\
    \ solutions that do not need network address translation.\n      Two solutions\
    \ appear possible: improve the function of split-\n      horizon DNS (which is\
    \ discussed below) or meet network\n      administrators' requirements without\
    \ split-horizon DNS (which is\n      out of scope of this document).\n   As in\
    \ the above two problems, a policy-based approach and a non-\n   policy-based\
    \ approach are possible.  In a non-policy-based approach,\n   a host or a home\
    \ gateway router is assumed to send DNS queries to\n   several DNS recursive name\
    \ servers at once or to select one of the\n   available servers.\n   In the non-policy-based\
    \ approach, by making a query to a DNS\n   recursive name server in a different\
    \ service provider to that which\n   hosts the service, a user could be directed\
    \ to an unexpected IP\n   address or receive an invalid response, and thus it\
    \ could not connect\n   to the service provider's private and legitimate service.\
    \  For\n   example, some DNS recursive name servers reply with different answers\n\
    \   depending on the source address of the DNS query, which is sometimes\n   called\
    \ \"split-horizon\".  When the host mistakenly makes a query to a\n   different\
    \ provider's DNS recursive name server to resolve a Fully\n   Qualified Domain\
    \ Name (FQDN) of another provider's private service,\n   and the DNS recursive\
    \ name server adopts the split-horizon\n   configuration, the queried server returns\
    \ an IP address of the non-\n   private side of the service.  Another problem\
    \ with this approach is\n   that it causes unnecessary DNS traffic to the DNS\
    \ recursive name\n   servers that are visible to the users.\n   The alternative\
    \ to a policy-based approach is documented in\n   [RFC6731], where several pairs\
    \ of DNS recursive name server addresses\n   and DNS domain suffixes are defined\
    \ as part of a policy and conveyed\n   to hosts in a new DHCP option.  In an environment\
    \ where there is a\n   home gateway router, that router can act as a DNS recursive\
    \ name\n   server, interpret this option, and distribute DNS queries to the\n\
    \   appropriate DNS servers according to the policy.\n"
- title: 6.4.  Other Algorithms Available in RFCs
  contents:
  - "6.4.  Other Algorithms Available in RFCs\n   The authors of this document are\
    \ aware of a variety of other\n   algorithms and architectures, such as Shim6\
    \ [RFC5533] and HIP\n   [RFC5206], that may be useful in this environment.  At\
    \ the time of\n   this writing, there is not enough operational experience on\
    \ which to\n   base a recommendation.  Should such operational experience become\n\
    \   available, this document may be updated in the future.\n"
- title: 7.  Considerations for MHMP Deployment
  contents:
  - "7.  Considerations for MHMP Deployment\n   This section describes considerations\
    \ to mitigate possible problems\n   in a network that implements MHMP (described\
    \ in Section 6).\n"
- title: 7.1.  Non-MHMP Host Consideration
  contents:
  - "7.1.  Non-MHMP Host Consideration\n   In a typical IPv4 multihomed network deployment,\
    \ IPv4 NAPT is\n   practically used and it can eventually avoid assigning multiple\n\
    \   addresses to the hosts and solve the next hop selection problem.  In\n   a\
    \ similar fashion, NPTv6 can be used as a last resort for IPv6\n   multihomed\
    \ network deployments where one needs to assign a single\n   IPv6 address to a\
    \ non-MHMP host.\n                                                      __________\n\
    \                                                     /          \\\n        \
    \                                        +---/  Internet  \\\n               \
    \             gateway router      |   \\            /\n          +------+    \
    \ +---------------------+  |    \\__________/\n          |      |     |   |  \
    \      |  WAN1  +--+\n          | host |-----|LAN| Router |--------|\n       \
    \   |      |     |   |        |NAT|WAN2+--+\n          +------+     +---------------------+\
    \  |     __________\n                                                |    /  \
    \        \\\n                                                +---/    ASP    \
    \ \\\n                                                    \\            /\n  \
    \                                                   \\__________/\n          \
    \                 Figure 5: Legacy Host\n   The gateway router also has to support\
    \ the two features, next hop\n   selection and DNS server selection, shown in\
    \ Section 6.\n   The implementation and issues of NPTv6 are out of the scope of\
    \ this\n   document, but are discussed in Section 5 of [RFC6296].\n"
- title: 7.2.  Coexistence Considerations
  contents:
  - "7.2.  Coexistence Considerations\n   To allow the coexistence of non-MHMP hosts\
    \ and MHMP hosts (i.e.,\n   hosts supporting multi-prefix with the enhancements\
    \ for the source\n   address selection), GW rtr may need to treat those hosts\
    \ separately.\n   An idea for how to achieve this would be for GW rtr to identify\
    \ the\n   hosts, and then assign a single prefix to non-MHMP hosts and assign\n\
    \   multiple prefixes to MHMP hosts.  In this case, GW rtr can perform\n   IPv6\
    \ NAT only for the traffic from non-MHMP hosts if its source\n   address is not\
    \ appropriate.\n   Another idea is that GW rtr could assign multiple prefixes\
    \ to both\n   hosts and perform IPv6 NAT for traffic from non-MHMP hosts if its\n\
    \   source address is not appropriate.\n   In scenarios 1 and 3, the non-MHMP\
    \ hosts can be placed behind the NAT\n   box.  In this case, the non-MHMP host\
    \ can access the service through\n   the NAT box.\n   The implementation of identifying\
    \ non-MHMP hosts and NAT policy is\n   outside the scope of this document.\n"
- title: 7.3.  Policy Collision Consideration
  contents:
  - "7.3.  Policy Collision Consideration\n   When multiple policy distributors exist,\
    \ a policy receiver may not\n   follow each of the received policies.  In particular,\
    \ when a policy\n   conflicts with another policy, a policy receiver cannot implement\n\
    \   both of the policies.  To solve or mitigate this issue, a\n   prioritization\
    \ rule is required to align the policies with the\n   preferences of a trusted\
    \ interface.  Another solution is to preclude\n   the functionality of the acceptance\
    \ of multiple policies at the\n   receiver side.  In this case, a policy distributor\
    \ should cooperate\n   with other policy distributors, and a single representative\
    \ provider\n   should distribute a merged policy.\n   This document does not presume\
    \ specific recommendations for resolving\n   policy collision.  It is expected\
    \ that the implementation will decide\n   how to resolve the conflicts.  If they\
    \ are not resolved consistently\n   by different implementations, that could affect\
    \ interoperability and\n   security trust boundaries.  Future work is expected\
    \ to address the\n   need for consistent policy resolution to avoid interoperability\
    \ and\n   security trust boundary issues.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   In today's multihomed IPv4 networks, it is difficult\
    \ to resolve or\n   coordinate conflicts between the two upstream networks.  This\
    \ problem\n   persists with IPv6, no matter if the hosts use IPv6 provider-\n\
    \   dependent or provider-independent addresses.\n   This document requires that\
    \ MHMP solutions have functions that\n   provide policy controls.  New security\
    \ threats can be introduced\n   depending on the kind and form of the policy.\
    \  The threats can be\n   categorized in two parts: the policy receiver side and\
    \ the policy\n   distributor side.\n   A policy receiver may receive an evil policy\
    \ from a policy\n   distributor.  A policy distributor should expect that some\
    \ hosts in\n   its network will not follow the distributed policy.  At the time\
    \ of\n   this writing, there are no known methods to resolve conflicts between\n\
    \   the host's own policy (policy receiver) and the policies of upstream\n   providers\
    \ (policy provider).  As this document is analyzing the\n   problem space, rather\
    \ than proposing a solution, we note the\n   following problems:\n   Threats related\
    \ to the policy distributor side:\n         The service provider should expect\
    \ the existence of hosts that\n         will not obey the received policy.  A\
    \ possible solution is to\n         ingress-filter those packets that do not match\
    \ the distributed\n         policy and drop them.  For route selection, packet\
    \ forwarding\n         or redirection can be another possible solution.  For source\n\
    \         address selection, IPv6 NAT can be another possible solution.\n    \
    \     In a multihomed multiple-provider network, nodes in the network\n      \
    \   may be administered by different organizations.  Administrators\n        \
    \ might need to control policies (and a node's behavior)\n         independently\
    \ of other administrators.  Access control policies\n         need to be in place\
    \ to restrict the administrator's access to\n         only the nodes it is authorized\
    \ to control.\n   Threats related to the policy receiver side:\n         For the\
    \ policy receiver side, who should be trusted to accept\n         policies is\
    \ a fundamental issue.  How is the trust established?\n         How can the network\
    \ element be assured that it can establish\n         that trust before the network\
    \ is fully configured?  If a policy\n         receiver trusts an untrusted network,\
    \ it will cause the\n         distributing of the unwanted and unauthorized policy\
    \ that is\n         described below.\n         A policy receiver is exposed to\
    \ the threats of unauthorized\n         policy, which can lead to session hijack,\
    \ falsification, DoS,\n         wiretapping, and phishing.  Unauthorized policy\
    \ here means a\n         policy distributed from an entity that does not have\
    \ rights to\n         do so.  Usually, only a site administrator and a network\n\
    \         service provider have rights to distribute these policies in\n     \
    \    addition to IP address assignment and DNS server address\n         notification.\
    \  Regarding source address selection, unauthorized\n         policy can expose\
    \ an IP address that will not usually be\n         exposed to an external server,\
    \ which can be a privacy problem.\n         To solve or mitigate the problem of\
    \ unauthorized policy, one\n         approach is to limit the use of these policy\
    \ distribution\n         mechanisms, as described in the Section 4.4 of [RFC6731].\
    \  For\n         example, a policy should be preferred or accepted if delivered\n\
    \         over a secure, trusted channel such as a cellular data\n         connection.\
    \  The proposed solutions are based on DHCP, so the\n         limitation of local\
    \ site communication, which is often used in\n         WiFi access services, should\
    \ be another solution or mitigation\n         for this problem.  For the DNS server\
    \ selection issue, DNS\n         Security (DNSSEC) can be another solution.  For\
    \ source address\n         selection, the ingress filter at the network service\
    \ provider\n         router can be a solution.\n         Another threat is the\
    \ leakage of the policy and privacy issues\n         resulting from that.  Especially\
    \ when clients receive different\n         policies from the network service provider,\
    \ that difference\n         provides hints about the host itself and can be useful\
    \ to\n         uniquely identify the host.  Encryption of the communication\n\
    \         channel and separation of the communication channel per host\n     \
    \    can be solutions for this problem.\n   The security threats related to IPv6\
    \ multihoming are described in\n   [RFC4218].\n"
- title: 9.  Contributors
  contents:
  - "9.  Contributors\n   The following people contributed to this document: Akiko\
    \ Hattori,\n   Arifumi Matsumoto, Frank Brockners, Fred Baker, Tomohiro Fujisaki,\n\
    \   Jun-ya Kato, Shigeru Akiyama, Seiichi Morikawa, Mark Townsley,\n   Wojciech\
    \ Dec, Yasuo Kashimura, and Yuji Yamazaki.  This document has\n   greatly benefited\
    \ from inputs by Randy Bush, Brian Carpenter, and\n   Teemu Savolainen.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC4191]  Draves, R. and D. Thaler, \"Default\
    \ Router Preferences and\n              More-Specific Routes\", RFC 4191, November\
    \ 2005.\n   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n\
    \              \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n   \
    \           September 2007.\n   [RFC6296]  Wasserman, M. and F. Baker, \"IPv6-to-IPv6\
    \ Network Prefix\n              Translation\", RFC 6296, June 2011.\n   [RFC6724]\
    \  Thaler, D., Draves, R., Matsumoto, A., and T. Chown,\n              \"Default\
    \ Address Selection for Internet Protocol Version 6\n              (IPv6)\", RFC\
    \ 6724, September 2012.\n   [RFC6731]  Savolainen, T., Kato, J., and T. Lemon,\
    \ \"Improved\n              Recursive DNS Server Selection for Multi-Interfaced\n\
    \              Nodes\", RFC 6731, December 2012.\n   [RFC7078]  Matsumoto, A.,\
    \ Fujisaki, T., and T. Chown, \"Distributing\n              Address Selection\
    \ Policy Using DHCPv6\", RFC 7078, January\n              2014.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC3022]  Srisuresh, P. and K. Egevang, \"\
    Traditional IP Network\n              Address Translator (Traditional NAT)\",\
    \ RFC 3022, January\n              2001.\n   [RFC3442]  Lemon, T., Cheshire, S.,\
    \ and B. Volz, \"The Classless\n              Static Route Option for Dynamic\
    \ Host Configuration\n              Protocol (DHCP) version 4\", RFC 3442, December\
    \ 2002.\n   [RFC3582]  Abley, J., Black, B., and V. Gill, \"Goals for IPv6 Site-\n\
    \              Multihoming Architectures\", RFC 3582, August 2003.\n   [RFC3646]\
    \  Droms, R., \"DNS Configuration options for Dynamic Host\n              Configuration\
    \ Protocol for IPv6 (DHCPv6)\", RFC 3646,\n              December 2003.\n   [RFC4116]\
    \  Abley, J., Lindqvist, K., Davies, E., Black, B., and V.\n              Gill,\
    \ \"IPv4 Multihoming Practices and Limitations\", RFC\n              4116, July\
    \ 2005.\n   [RFC4218]  Nordmark, E. and T. Li, \"Threats Relating to IPv6\n  \
    \            Multihoming Solutions\", RFC 4218, October 2005.\n   [RFC4960]  Stewart,\
    \ R., \"Stream Control Transmission Protocol\", RFC\n              4960, September\
    \ 2007.\n   [RFC5206]  Nikander, P., Henderson, T., Vogt, C., and J. Arkko, \"\
    End-\n              Host Mobility and Multihoming with the Host Identity\n   \
    \           Protocol\", RFC 5206, April 2008.\n   [RFC5220]  Matsumoto, A., Fujisaki,\
    \ T., Hiromi, R., and K. Kanayama,\n              \"Problem Statement for Default\
    \ Address Selection in Multi-\n              Prefix Environments: Operational\
    \ Issues of RFC 3484\n              Default Rules\", RFC 5220, July 2008.\n  \
    \ [RFC5245]  Rosenberg, J., \"Interactive Connectivity Establishment\n       \
    \       (ICE): A Protocol for Network Address Translator (NAT)\n             \
    \ Traversal for Offer/Answer Protocols\", RFC 5245, April\n              2010.\n\
    \   [RFC5533]  Nordmark, E. and M. Bagnulo, \"Shim6: Level 3 Multihoming\n   \
    \           Shim Protocol for IPv6\", RFC 5533, June 2009.\n   [RFC6106]  Jeong,\
    \ J., Park, S., Beloeil, L., and S. Madanapalli,\n              \"IPv6 Router\
    \ Advertisement Options for DNS Configuration\",\n              RFC 6106, November\
    \ 2010.\n   [TR-124]   The Broadband Forum, \"TR-124, Functional Requirements\
    \ for\n              Broadband Residential Gateway Devices\", Issue: 2, May\n\
    \              2010, <http://www.broadband-forum.org/technical/download/\n   \
    \           TR-124_Issue-2.pdf>.\n   [TR069]    The Broadband Forum, \"TR-069,\
    \ CPE WAN Management Protocol\n              v1.1\", Version: Issue 1 Amendment\
    \ 2, December 2007,\n              <http://www.broadband-forum.org/technical/download/\n\
    \              TR-069_Amendment-2.pdf>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ole Troan (editor)\n   Cisco\n   Oslo\n   Norway\n   EMail:\
    \ ot@cisco.com\n   David Miles\n   Google Fiber\n   Mountain View, CA\n   USA\n\
    \   EMail: davidmiles@google.com\n   Satoru Matsushima\n   Softbank Telecom\n\
    \   Tokyo\n   Japan\n   EMail: satoru.matsushima@g.softbank.co.jp\n   Tadahisa\
    \ Okimoto\n   NTT West\n   Osaka\n   Japan\n   EMail: t.okimoto@west.ntt.co.jp\n\
    \   Dan Wing\n   Cisco\n   170 West Tasman Drive\n   San Jose\n   USA\n   EMail:\
    \ dwing@cisco.com\n"
