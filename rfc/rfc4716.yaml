- title: __initial_text__
  contents:
  - '             The Secure Shell (SSH) Public Key File Format

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document formally documents an existing public key file format\n\
    \   in use for exchanging public keys between different Secure Shell\n   (SSH)\
    \ implementations.\n   In addition, this document defines a standard textual representation\n\
    \   for SSH public key fingerprints.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The SSH protocol supports the use of public/private key\
    \ pairs in\n   order to perform authentication based on public key cryptography.\n\
    \   However, in order to use public key authentication in the SSH\n   protocol,\
    \ public keys must first be exchanged between client and\n   server.\n   This\
    \ document formally describes an existing public key file format\n   that can\
    \ be used with any of the common existing file transfer\n   mechanisms in order\
    \ to exchange public keys.\n   The SSH protocol also uses public/private key pairs\
    \ to authenticate\n   the server.  In this scenario, it is important to verify\
    \ that the\n   public key provided by the server is indeed the server's public\
    \ key.\n   This document describes a mechanism for creating a short text string\n\
    \   that uniquely represents a particular public key, called\n   fingerprinting.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Key File Format
  contents:
  - "3.  Key File Format\n   In order to implement public key authentication, SSH\
    \ implementations\n   must share public key files between the client and the server\
    \ in\n   order to interoperate.\n   A key file is a text file, containing a sequence\
    \ of lines.  Each line\n   in the file MUST NOT be longer than 72 8-bit bytes\
    \ excluding line\n   termination characters.\n"
- title: 3.1.  Line Termination Characters
  contents:
  - "3.1.  Line Termination Characters\n   Implementations SHOULD generate public\
    \ key files using their system's\n   local text file representation.\n   In the\
    \ event that public key files are not transferred as text files,\n   implementations\
    \ SHOULD be prepared to read files using any of the\n   common line termination\
    \ sequence, <CR>, <LF>, or <CR><LF>.\n"
- title: 3.2.  Begin and End Markers
  contents:
  - "3.2.  Begin and End Markers\n   The first line of a conforming key file MUST\
    \ be a begin marker, which\n   is the literal text:\n   ---- BEGIN SSH2 PUBLIC\
    \ KEY ----\n   The last line of a conforming key file MUST be an end marker, which\n\
    \   is the literal text:\n   ---- END SSH2 PUBLIC KEY ----\n"
- title: 3.3.  Key File Header
  contents:
  - "3.3.  Key File Header\n   The key file header section consists of multiple RFC822-style\
    \ header\n   fields.  Each field is a line of the following format:\n   Header-tag\
    \ ':' ' ' Header-value\n   The Header-tag MUST NOT be more than 64 8-bit bytes\
    \ and is case-\n   insensitive.  The Header-value MUST NOT be more than 1024 8-bit\n\
    \   bytes.  Each line in the header MUST NOT be more than 72 8-bit bytes.\n  \
    \ A line is continued if the last character in the line is a '\\'.  If\n   the\
    \ last character of a line is a '\\', then the logical contents of\n   the line\
    \ are formed by removing the '\\' and the line termination\n   characters, and\
    \ appending the contents of the next line.\n   The Header-tag MUST be encoded\
    \ in US-ASCII.  The Header-value MUST be\n   encoded in UTF-8 [RFC3629].\n   A\
    \ line that is not a continuation line that has no ':' in it is the\n   first\
    \ line of the base64-encoded body.  (See Section 3.4.)\n   The space of header-tags\
    \ is managed as described in Section 5.\n   Compliant implementations MUST ignore\
    \ headers with unrecognized\n   header-tags.  Implementations SHOULD preserve\
    \ such unrecognized\n   headers when manipulating the key file.\n"
- title: 3.3.1.  Subject Header
  contents:
  - "3.3.1.  Subject Header\n   This field is used to store the login-name that the\
    \ key was generated\n   under.  For example:\n   Subject: user\n"
- title: 3.3.2.  Comment Header
  contents:
  - "3.3.2.  Comment Header\n   The comment header contains a user-specified comment.\
    \  The comment\n   SHOULD be displayed when using the key.\n   It is suggested\
    \ that this field default to user@hostname for the user\n   and machine used to\
    \ generate the key.  For example:\n   Comment: user@example.com\n   Currently,\
    \ common practice is to quote the Header-value of the\n   Comment by prefixing\
    \ and suffixing it with '\"' characters, and some\n   existing implementations\
    \ fail if these quotation marks are omitted.\n   Compliant implementations MUST\
    \ function correctly if the quotation\n   marks are omitted.\n   Implementations\
    \ MAY include the quotation marks.  If the first and\n   last characters of the\
    \ Header-value are matching quotation marks,\n   implementations SHOULD remove\
    \ them before using the value.\n"
- title: 3.3.3.  Private Use Headers
  contents:
  - "3.3.3.  Private Use Headers\n   Headers with header-tags beginning with \"x-\"\
    \ are reserved for private\n   use.\n"
- title: 3.4.  Public Key File Body
  contents:
  - "3.4.  Public Key File Body\n   The body of a public key file is the base64 encoded\
    \ ([RFC2045])\n   public key data as specified by [RFC4253], Section 6.6:\n  \
    \       string    certificate or public key format identifier\n         byte[n]\
    \   key/certificate data\n   As with all other lines, each line in the body MUST\
    \ NOT be longer\n   than 72 8-bit bytes excluding line termination characters.\n"
- title: 3.5.  Differences with RFC 1421 PEM Formats
  contents:
  - "3.5.  Differences with RFC 1421 PEM Formats\n   Implementers should take care\
    \ to notice that while the format is\n   superficially similar to those specified\
    \ by PEM [RFC1421] and OpenPGP\n   [RFC2440], it is not identical; most notably:\n\
    \   o  The other specifications use different BEGIN/END delimiters (five\n   \
    \   dashes, no space rather than four dashes and a space).\n   o  There is no\
    \ blank line before the start of the base64-encoded\n      contents.\n   o  There\
    \ is no Cyclic Redundancy Check (CRC) at the end of the\n      base64-encoded\
    \ block.\n   o  Header continuation uses a backslash at the end of the continued\n\
    \      line rather than whitespace at the start of the next line.\n"
- title: 3.6.  Examples
  contents:
  - "3.6.  Examples\n   The following are some examples of public key files that are\n\
    \   compliant (note that the examples all wrap before 72 bytes to meet\n   IETF\
    \ document requirements; however, they are still compliant.)\n   ---- BEGIN SSH2\
    \ PUBLIC KEY ----\n   Comment: \"1024-bit RSA, converted from OpenSSH by me@example.com\"\
    \n   x-command: /home/me/bin/lock-in-guest.sh\n   AAAAB3NzaC1yc2EAAAABIwAAAIEA1on8gxCGJJWSRT4uOrR13mUaUk0hRf4RzxSZ1zRb\n\
    \   YYFw8pfGesIFoEuVth4HKyF8k1y4mRUnYHP1XNMNMJl1JcEArC2asV8sHf6zSPVffozZ\n   5TT4SfsUu/iKy9lUcCfXzwre4WWZSXXcPff+EHtWshahu3WzBdnGxm5Xoi89zcE=\n\
    \   ---- END SSH2 PUBLIC KEY ----\n   ---- BEGIN SSH2 PUBLIC KEY ----\n   Comment:\
    \ This is my public key for use on \\\n   servers which I don't like.\n   AAAAB3NzaC1kc3MAAACBAPY8ZOHY2yFSJA6XYC9HRwNHxaehvx5wOJ0rzZdzoSOXxbET\n\
    \   W6ToHv8D1UJ/z+zHo9Fiko5XybZnDIaBDHtblQ+Yp7StxyltHnXF1YLfKD1G4T6JYrdH\n   YI14Om1eg9e4NnCRleaqoZPF3UGfZia6bXrGTQf3gJq2e7Yisk/gF+1VAAAAFQDb8D5c\n\
    \   vwHWTZDPfX0D2s9Rd7NBvQAAAIEAlN92+Bb7D4KLYk3IwRbXblwXdkPggA4pfdtW9vGf\n   J0/RHd+NjB4eo1D+0dix6tXwYGN7PKS5R/FXPNwxHPapcj9uL1Jn2AWQ2dsknf+i/FAA\n\
    \   vioUPkmdMc0zuWoSOEsSNhVDtX3WdvVcGcBq9cetzrtOKWOocJmJ80qadxTRHtUAAACB\n   AN7CY+KKv1gHpRzFwdQm7HK9bb1LAo2KwaoXnadFgeptNBQeSXG1vO+JsvphVMBJc9HS\n\
    \   n24VYtYtsMu74qXviYjziVucWKjjKEb11juqnF0GDlB3VVmxHLmxnAz643WK42Z7dLM5\n   sY29ouezv4Xz2PuMch5VGPP+CDqzCM4loWgV\n\
    \   ---- END SSH2 PUBLIC KEY ----\n   ---- BEGIN SSH2 PUBLIC KEY ----\n   Comment:\
    \ DSA Public Key for use with MyIsp\n   AAAAB3NzaC1kc3MAAACBAPY8ZOHY2yFSJA6XYC9HRwNHxaehvx5wOJ0rzZdzoSOXxbET\n\
    \   W6ToHv8D1UJ/z+zHo9Fiko5XybZnDIaBDHtblQ+Yp7StxyltHnXF1YLfKD1G4T6JYrdH\n   YI14Om1eg9e4NnCRleaqoZPF3UGfZia6bXrGTQf3gJq2e7Yisk/gF+1VAAAAFQDb8D5c\n\
    \   vwHWTZDPfX0D2s9Rd7NBvQAAAIEAlN92+Bb7D4KLYk3IwRbXblwXdkPggA4pfdtW9vGf\n   J0/RHd+NjB4eo1D+0dix6tXwYGN7PKS5R/FXPNwxHPapcj9uL1Jn2AWQ2dsknf+i/FAA\n\
    \   vioUPkmdMc0zuWoSOEsSNhVDtX3WdvVcGcBq9cetzrtOKWOocJmJ80qadxTRHtUAAACB\n   AN7CY+KKv1gHpRzFwdQm7HK9bb1LAo2KwaoXnadFgeptNBQeSXG1vO+JsvphVMBJc9HS\n\
    \   n24VYtYtsMu74qXviYjziVucWKjjKEb11juqnF0GDlB3VVmxHLmxnAz643WK42Z7dLM5\n   sY29ouezv4Xz2PuMch5VGPP+CDqzCM4loWgV\n\
    \   ---- END SSH2 PUBLIC KEY ----\n   ---- BEGIN SSH2 PUBLIC KEY ----\n   Subject:\
    \ me\n   Comment: 1024-bit rsa, created by me@example.com Mon Jan 15 \\\n   08:31:24\
    \ 2001\n   AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt4\n\
    \   596k6YjzGGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4\n   soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCddNaP0L+hM7zhFNzjFvpaMgJw0=\n\
    \   ---- END SSH2 PUBLIC KEY ----\n"
- title: 4.  Public Key Fingerprints
  contents:
  - "4.  Public Key Fingerprints\n   The security of the SSH protocols relies on the\
    \ verification of\n   public host keys.  Since public keys tend to be very large,\
    \ it is\n   difficult for a human to verify an entire host key.  Even with a\n\
    \   Public Key Infrastructure (PKI) in place, it is useful to have a\n   standard\
    \ for exchanging short fingerprints of public keys.\n   This section formally\
    \ describes the method of generating public key\n   fingerprints that is in common\
    \ use in the SSH community.\n   The fingerprint of a public key consists of the\
    \ output of the MD5\n   message-digest algorithm [RFC1321].  The input to the\
    \ algorithm is\n   the public key data as specified by [RFC4253].  (This is the\
    \ same\n   data that is base64 encoded to form the body of the public key file.)\n\
    \   The output of the algorithm is presented to the user as a sequence of\n  \
    \ 16 octets printed as hexadecimal with lowercase letters and separated\n   by\
    \ colons.\n   For example: \"c1:b1:30:29:d7:b8:de:6c:97:77:10:d7:46:41:63:87\"\
    \n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   Section 3.3 defines a new namespace of \"Header-tags\"\
    .  These are\n   US-ASCII strings of maximum length 64 characters and are\n  \
    \ case-insensitive.\n   IANA has created and maintains a registry of these header-tags.\
    \  The\n   registry maps each header-tag to a reference defining the header.\n\
    \   The initial contents of the registry are as follows:\n      subject defined\
    \ in Section 3.3.1\n      comment defined in Section 3.3.2\n   Header-tags beginning\
    \ with \"x-\" are reserved for private use, as\n   defined in [RFC2434].\n   All\
    \ other allocations are to be made by IETF consensus, as defined in\n   [RFC2434].\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The file format described by this document provides\
    \ no mechanism to\n   verify the integrity or otherwise detect tampering with\
    \ the data\n   stored in such files.  Given the potential of adversarial tampering\n\
    \   with this data, system-specific measures (e.g., Access Control Lists,\n  \
    \ UNIX permissions, other Discretionary and/or Mandatory Access\n   Controls)\
    \ SHOULD be used to protect these files.  Also, if the\n   contents of these files\
    \ are transferred it SHOULD be done over a\n   trusted channel.\n   The header\
    \ data allowed by this file format could contain an\n   unlimited range of information.\
    \  While in many environments the\n   information conveyed by this header data\
    \ may be considered innocuous\n   public information, it may constitute a channel\
    \ through which\n   information about a user, a key, or its use may be disclosed\n\
    \   intentionally or otherwise (e.g., \"Comment: Mary E. Jones, 123 Main\n   St,\
    \ Home Phone:...\").  The presence and use of this header data\n   SHOULD be reviewed\
    \ by sites that deploy this file format.\n   The public key fingerprint method\
    \ presented here relies on the MD5\n   one-way hash function, which is known to\
    \ have certain weaknesses\n   regarding its collision resistance; however, the\
    \ particular use made\n   of MD5 here depends solely on its 2nd-preimage resistance,\
    \ not on its\n   collision resistance.\n   MD5 is used here for historical reasons.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1321]  Rivest, R., \"The MD5 Message-Digest\
    \ Algorithm\", RFC 1321,\n              April 1992.\n   [RFC2045]  Freed, N. and\
    \ N. Borenstein, \"Multipurpose Internet Mail\n              Extensions (MIME)\
    \ Part One: Format of Internet Message\n              Bodies\", RFC 2045, November\
    \ 1996.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3629]\
    \  Yergeau, F., \"UTF-8, a transformation format of ISO\n              10646\"\
    , STD 63, RFC 3629, November 2003.\n   [RFC4253]  Ylonen, T. and C. Lonvick, \"\
    The Secure Shell (SSH)\n              Transport Layer Protocol\", RFC 4253, January\
    \ 2006.\n   [RFC2434]  Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an\n              IANA Considerations Section in RFCs\", BCP 26, RFC 2434,\n\
    \              October 1998.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC1421]  Linn, J., \"Privacy Enhancement for\
    \ Internet Electronic\n              Mail: Part I: Message Encryption and Authentication\n\
    \              Procedures\", RFC 1421, February 1993.\n   [RFC2440]  Callas, J.,\
    \ Donnerhacke, L., Finney, H., and R. Thayer,\n              \"OpenPGP Message\
    \ Format\", RFC 2440, November 1998.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Joseph Galbraith\n   VanDyke Software\n   4848 Tramway\
    \ Ridge Blvd\n   Suite 101\n   Albuquerque, NM  87111\n   US\n   Phone: +1 505\
    \ 332 5700\n   EMail: galb@vandyke.com\n   Rodney Thayer\n   Canola & Jones\n\
    \   650 Castro Street Suite 120-205\n   Mountain View CA 94041\n   US\n   Phone:\
    \ +1 650 704 8389\n   EMail: rodney@canola-jones.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2006).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST,\n   AND THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,\n   EXPRESS OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT\n   THE USE OF THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\n   IMPLIED WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR\n   PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
