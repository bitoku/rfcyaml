- title: __initial_text__
  contents:
  - "  Path Computation Element Communication Protocol (PCEP) Extension for\n    \
    \    Label Switched Path (LSP) Diversity Constraint Signaling\n"
- title: Abstract
  contents:
  - "Abstract\n   This document introduces a simple mechanism to associate a group\
    \ of\n   Label Switched Paths (LSPs) via an extension to the Path Computation\n\
    \   Element Communication Protocol (PCEP) with the purpose of computing\n   diverse\
    \ (disjointed) paths for those LSPs.  The proposed extension\n   allows a Path\
    \ Computation Client (PCC) to advertise to a Path\n   Computation Element (PCE)\
    \ that a particular LSP belongs to a\n   particular Disjoint Association Group;\
    \ thus, the PCE knows that the\n   LSPs in the same group need to be disjoint\
    \ from each other.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8800.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Requirements Language\n  \
    \ 2.  Terminology\n   3.  Motivation\n   4.  Applicability\n   5.  Protocol Extension\n\
    \     5.1.  Association Group\n     5.2.  Disjoint TLVs\n     5.3.  Disjointness\
    \ Objective Functions\n     5.4.  Relationship to SVEC\n       5.4.1.  SVEC and\
    \ OF\n     5.5.  P Flag Considerations\n     5.6.  Disjointness Computation Issues\n\
    \   6.  Security Considerations\n   7.  IANA Considerations\n     7.1.  Association\
    \ Type\n     7.2.  PCEP TLVs\n     7.3.  Objective Functions\n     7.4.  NO-PATH-VECTOR\
    \ Bit Flags\n     7.5.  PCEP-ERROR Codes\n   8.  Manageability Considerations\n\
    \     8.1.  Control of Function and Policy\n     8.2.  Information and Data Models\n\
    \     8.3.  Liveness Detection and Monitoring\n     8.4.  Verification of Correct\
    \ Operations\n     8.5.  Requirements on Other Protocols\n     8.6.  Impact on\
    \ Network Operations\n   9.  References\n     9.1.  Normative References\n   \
    \  9.2.  Informative References\n   Acknowledgments\n   Contributors\n   Authors'\
    \ Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   [RFC5440] describes the Path Computation Element Communication\n\
    \   Protocol (PCEP), which enables the communication between a Path\n   Computation\
    \ Client (PCC) and a Path Control Element (PCE) or between\n   two PCEs based\
    \ on the PCE architecture [RFC4655].\n   The PCEP Extensions for Stateful PCE\
    \ Model [RFC8231] describes a set\n   of extensions to PCEP to enable active control\
    \ of MPLS-TE and GMPLS\n   tunnels.  [RFC8281] describes the setup and teardown\
    \ of PCE-initiated\n   LSPs under the active stateful PCE model, without the need\
    \ for local\n   configuration on the PCC, thus allowing for a dynamic network.\n\
    \   [RFC8697] introduces a generic mechanism to create a grouping of LSPs\n  \
    \ in the context of a PCE that can then be used to define associations\n   between\
    \ a set of LSPs and a set of attributes (such as configuration\n   parameters\
    \ or behaviors) and is equally applicable to the active and\n   passive modes\
    \ of a stateful PCE [RFC8231] or a stateless PCE\n   [RFC4655].\n   This document\
    \ specifies a PCEP extension to signal that a set of LSPs\n   in a particular\
    \ group should use diverse (disjointed) paths,\n   including the requested type\
    \ of diversity.  Sections 3 and 4 describe\n   the property and use of a Disjoint\
    \ Association Group.  A PCC can use\n   this extension to signal to a PCE that\
    \ a particular LSP belongs to a\n   particular Disjoint Association Group.  When\
    \ a PCE receives LSP\n   states belonging to the same Disjoint Association Group\
    \ from some\n   PCCs, the PCE should ensure that the LSPs within the group are\n\
    \   disjoint from each other.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The following terminology is used in this document.\n   DAT:\
    \      Disjoint Association Type\n   DAG:      Disjoint Association Group\n  \
    \ MPLS:     Multiprotocol Label Switching\n   OF:       Objective Function\n \
    \  PCC:      Path Computation Client.  Any client application requesting\n   \
    \          a path computation to be performed by a Path Computation\n        \
    \     Element.\n   PCE:      Path Computation Element.  An entity (component,\n\
    \             application, or network node) that is capable of computing\n   \
    \          a network path or route based on a network graph and\n            \
    \ applying computational constraints.\n   PCEP:     Path Computation Element Communication\
    \ Protocol\n   PLSP-ID:  PCEP-specific identifier for the LSP\n   SRLG:     Shared\
    \ Risk Link Group\n"
- title: 3.  Motivation
  contents:
  - "3.  Motivation\n   Path diversity is a very common use case in today's IP/MPLS\
    \ networks,\n   especially for layer 2 transport over MPLS.  A customer may request\n\
    \   that the operator provide two end-to-end disjoint paths across the\n   operator's\
    \ IP/MPLS core.  The customer may use these paths as\n   primary/backup or active/active\
    \ configuration.\n   Different levels of disjointness may be offered:\n   *  Link\
    \ disjointness: the paths of the associated LSPs should transit\n      different\
    \ links (but may use common nodes or different links that\n      may have some\
    \ shared fate).\n   *  Node disjointness: the paths of the associated LSPs should\
    \ transit\n      different nodes (but may use different links that may have some\n\
    \      shared fate).\n   *  SRLG disjointness: the paths of the associated LSPs\
    \ should transit\n      different links that do not share fate (but may use common\
    \ transit\n      nodes).\n   *  Node+SRLG disjointness: the paths of the associated\
    \ LSPs should\n      transit different links that do not have any common shared\
    \ fate\n      and should transit different nodes.\n   The associated LSPs may\
    \ originate from the same or different head\n   end(s) and may terminate at the\
    \ same or different tail end(s).\n"
- title: 4.  Applicability
  contents:
  - "4.  Applicability\n            _________________________________________\n  \
    \       |         | PCE  |                            |\n         | +------+ \
    \          10             +------+  |\n   CE1 ****| PE 1 | ----- R1 ---- R2 -------\
    \ | PE 2 |**** CE2\n   CE3 ****| PE 3 | ----- R3 ---- R4 ------- | PE 4 |****\
    \ CE4\n           \\_________________________________________/\n      Figure 1:\
    \ Disjoint Paths with Different Head Ends and Tail Ends\n   In the figure above,\
    \ let us consider that the customer wants to have\n   two disjoint paths, one\
    \ between CE1 and CE2 and one between CE3 and\n   CE4.  From an IP/MPLS network\
    \ point view, in this example, the CEs\n   are connected to different PEs to maximize\
    \ their disjointness.  When\n   LSPs originate from different head ends, distributed\
    \ computation of\n   diverse paths can be difficult, whereas computation via a\
    \ centralized\n   PCE ensures path disjointness, correctness, and simplicity.\n\
    \   Section 5.4 describes the relationship between the Disjoint\n   Association\
    \ Group (DAG) and Synchronization VECtor (SVEC) object.\n   The PCEP extension\
    \ for stateful PCE [RFC8231] defined new PCEP\n   messages -- Path Computation\
    \ Report (PCRpt), Path Computation Update\n   (PCUpd), and Path Computation Initiate\
    \ (PCInitiate) [RFC8281].  These\n   messages use a PLSP-ID in the LSP object\
    \ for identification.\n   Moreover, to allow diversity between LSPs originating\
    \ from different\n   PCCs, the generic mechanism to create a grouping of LSPs\
    \ that is\n   equally applicable to the active and passive modes of a stateful\
    \ PCE\n   is described in [RFC8697].\n   Using the extension to PCEP defined in\
    \ this document, the PCC uses\n   the extension defined in [RFC8697] to indicate\
    \ that a group of LSPs\n   are required to be disjoint; such indication should\
    \ include\n   disjointness parameters like the type of disjointness, the Disjoint\n\
    \   Association Group identifiers, and any customization parameters\n   according\
    \ to the configured local policy.\n   The management of the Disjoint Association\
    \ Group IDs will be a key\n   point for the operator as the Association ID field\
    \ is limited to\n   65535.  The local configuration of the IPv4/IPv6 Association\
    \ Source,\n   or Global Association Source/Extended Association ID, can overcome\n\
    \   this limitation, as described in [RFC8697].  When a PCC or PCE\n   initiates\
    \ all the LSPs in a particular Disjoint Association Group, it\n   can set the\
    \ IPv4/IPv6 Association Source as one of its own IP\n   address.  When disjoint\
    \ LSPs are initiated from different head ends,\n   the Association Source could\
    \ be the PCE address or any other unique\n   value to identify the DAG.\n    \
    \       Initiate Disjoint LSPs\n                    |\n                    V \
    \                       {DAG Y}\n      _ _ _ _ _ _| PCE |               |    \
    \              | PCE |\n     | PCInitiate                      |     |    PCReq/PCRpt\n\
    \     |{DAG X}                          |     | {DAG Y}\n     V        (     \
    \            )      | +-----+ (                 )\n   |PCC|----(   (G)MPLS network\
    \ )   +-----+    ( (G)MPLS network   )\n   {DAG X}   (                 )    +-----+\
    \      (                )\n   Case 1: Disjointness initiated by   Case 2: Disjointness\
    \ initiated by\n       PCE and enforced by PCC              PCC and enforced by\
    \ PCE\n        Figure 2: Sample Use Cases for Carrying Disjoint Association\n\
    \                          Group over PCEP Session\n   The Disjoint Association\
    \ Group within a PCEP messages is used for:\n   *  Configuration: Used to communicate\
    \ the configured disjoint\n      requirement to a PCEP peer.\n   *  Status: Used\
    \ to communicate the status of the computed\n      disjointness.\n"
- title: 5.  Protocol Extension
  contents:
  - '5.  Protocol Extension

    '
- title: 5.1.  Association Group
  contents:
  - "5.1.  Association Group\n   As per [RFC8697], LSPs are associated with other\
    \ LSPs with which they\n   interact by adding them to a common association group.\
    \  As described\n   in [RFC8697], the association group is uniquely identified\
    \ by the\n   combination of the following fields in the ASSOCIATION object:\n\
    \   Association Type, Association ID, Association Source, and (if\n   present)\
    \ Global Association Source or Extended Association ID.\n   This document defines\
    \ a new Association type, called \"Disjoint\n   Association\" (2), based on the\
    \ generic ASSOCIATION object.  This new\n   Association type is also called \"\
    DAT\", for \"Disjoint Association\n   Type\".\n   [RFC8697] specifies the mechanism\
    \ for the capability advertisement of\n   the Association types supported by a\
    \ PCEP speaker by defining an\n   ASSOC-Type-List TLV to be carried within an\
    \ OPEN object.  This\n   capability exchange for the DAT (2) MUST be done before\
    \ using the\n   disjoint association.  Thus, the PCEP speaker MUST include the\
    \ DAT in\n   the ASSOC-Type-List TLV and MUST receive the same from the PCEP peer\n\
    \   before using the Disjoint Association Group (DAG) in PCEP messages.\n   This\
    \ Association type is considered to be both dynamic and operator-\n   configured\
    \ in nature.  As per [RFC8697], the association group could\n   be manually created\
    \ by the operator on the PCEP peers, and the LSPs\n   belonging to this association\
    \ are conveyed via PCEP messages to the\n   PCEP peer; alternately, the association\
    \ group could be created\n   dynamically by the PCEP speaker, and both the association\
    \ group\n   information and the LSPs belonging to the association group are\n\
    \   conveyed to the PCEP peer.  The Operator-configured Association Range\n  \
    \ MUST be set for this association-type to mark a range of Association\n   Identifiers\
    \ that are used for operator-configured associations to\n   avoid any Association\
    \ Identifier clash within the scope of the\n   Association Source.  (Refer to\
    \ [RFC8697].)\n   A Disjoint Association Group can have two or more LSPs, but\
    \ a PCE may\n   be limited in the number of LSPs it can take into account when\n\
    \   computing disjointness.  If a PCE receives more LSPs in the group\n   than\
    \ it can handle in its computation algorithm, it SHOULD apply\n   disjointness\
    \ computation to only a subset of LSPs in the group.  The\n   subset of disjoint\
    \ LSPs will be decided by PCE as a local policy.\n   Local polices MAY define\
    \ the computational behavior for the other\n   LSPs in the group.  For example,\
    \ the PCE may provide no path, a\n   shortest path, or a constrained path based\
    \ on relaxing disjointness,\n   etc.  The disjoint status of the computed path\
    \ is informed to the PCC\n   via the DISJOINTNESS-STATUS TLV (see Section 5.2).\n\
    \   There are different types of disjointness identified by the flags (T,\n  \
    \ S, N, and L) in the DISJOINTNESS-CONFIGURATION TLV (see Section 5.2).\n   All\
    \ LSPs in a particular Disjoint Association Group MUST use the same\n   combination\
    \ of T, S, N, and L flags in the DISJOINTNESS-CONFIGURATION\n   TLV.  If a PCEP\
    \ peer receives a PCEP message for LSPs belonging to\n   the same Disjoint Association\
    \ Group but having an inconsistent\n   combination of T, S, N, and L flags, the\
    \ PCEP peer MUST NOT add the\n   LSPs to the Disjoint Association Group and MUST\
    \ reply with a PCErr\n   with Error-Type 26 (Association Error) and Error-value\
    \ 6 (Association\n   information mismatch).\n   A particular LSP MAY be associated\
    \ to multiple Disjoint Association\n   Groups, but in that case, the PCE SHOULD\
    \ try to consider all the\n   Disjoint Association Groups during path computation,\
    \ if possible.\n   Otherwise, a local policy MAY define the computational behavior.\
    \  If\n   a PCE does not support such a path computation, it MUST NOT add the\n\
    \   LSP into the association group and MUST return a PCErr with Error-\n   Type\
    \ 26 (Association Error) and Error-value 7 (Cannot join the\n   association group).\n"
- title: 5.2.  Disjoint TLVs
  contents:
  - "5.2.  Disjoint TLVs\n   The Disjoint Association Group (ASSOCIATION object with\
    \ Association\n   type = 2 for DAT) MUST carry the following TLV:\n   *  DISJOINTNESS-CONFIGURATION\
    \ TLV: Used to communicate some\n      disjointness configuration parameters.\
    \  This is applicable for all\n      PCEP messages that include DAG.\n   In addition,\
    \ the Disjoint Association Group (ASSOCIATION object with\n   Association type\
    \ = 2 for DAT) MAY carry the following TLVs:\n   *  DISJOINTNESS-STATUS TLV: Used\
    \ to communicate the status of the\n      computed disjointness.  This is applicable\
    \ for messages from a PCE\n      to a PCC only (i.e., PCUpd, PCInitiate, or PCRep\
    \ messages).\n   *  VENDOR-INFORMATION-TLV: Used to communicate arbitrary vendor-\n\
    \      specific behavioral information, described in [RFC7470].\n   *  OF-List\
    \ TLV: Used to communicate the disjointness objective\n      function.  See Section\
    \ 5.3.\n   The DISJOINTNESS-CONFIGURATION TLV is shown in the following figure:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |         Type\
    \ = 46             |            Length             |\n   |                 Flags\
    \                               |T|P|S|N|L|\n                  Figure 3: DISJOINTNESS-CONFIGURATION\
    \ TLV\n   Type:  46\n   Length:  Fixed value of 4 bytes.\n   Flags:\n      L (Link\
    \ Diverse) bit:  When set, this indicates that the computed\n         paths within\
    \ the Disjoint Association Group MUST NOT have any\n         link in common.\n\
    \      N (Node Diverse) bit:  When set, this indicates that the computed\n   \
    \      paths within the Disjoint Association Group MUST NOT have any\n       \
    \  node in common.\n      S (SRLG Diverse) bit:  When set, this indicates that\
    \ the computed\n         paths within the Disjoint Association Group MUST NOT\
    \ share any\n         SRLG (Shared Risk Link Group).\n      P (Shortest Path)\
    \ bit:  When set, this indicates that the computed\n         path of the LSP SHOULD\
    \ satisfy all the constraints and\n         objective functions first without\
    \ considering the diversity\n         constraint.  This means that all of the\
    \ LSPs with P flag set in\n         the association group are computed first,\
    \ as if the\n         disjointness constraint has not been configured; then, with\n\
    \         those LSPs fixed, the other LSPs with P flag unset in the\n        \
    \ association group are computed by taking into account the\n         disjointness\
    \ constraint.  The role of P flag is further\n         described with examples\
    \ in Section 5.5.\n      T (Strict Disjointness) bit:  When set, if disjoint paths\
    \ cannot\n         be found, the PCE MUST return no path for LSPs that could not\n\
    \         be disjoint.  When unset, the PCE is allowed to relax\n         disjointness\
    \ by either applying a requested objective function\n         (cf. Section 5.3)\
    \ or using the local policy if no objective\n         function is requested (e.g.,\
    \ using a lower disjoint type (link\n         instead of node) or fully relaxing\
    \ disjointness constraint).\n         See Section 5.6 for further details.\n \
    \     Unassigned bits:  Unassigned bits are considered reserved.  They\n     \
    \    MUST be set to 0 on transmission and MUST be ignored on\n         receipt.\n\
    \   If a PCEP speaker receives a Disjoint Association Group (ASSOCIATION\n   object\
    \ with Association type = 2 for DAT) without the DISJOINTNESS-\n   CONFIGURATION\
    \ TLV, it SHOULD reply with a PCErr Error-Type 6\n   (Mandatory Object missing)\
    \ and Error-value 15 (DISJOINTNESS-\n   CONFIGURATION TLV missing).\n   The DISJOINTNESS-STATUS\
    \ TLV uses the same format as the DISJOINTNESS-\n   CONFIGURATION TLV with a different\
    \ type 47 (in the TLV).  The L, N,\n   and S flags are set if the respective disjointness\
    \ criterion was\n   requested and the computed paths meet it.  The P flag indicates\
    \ that\n   the computed path is the shortest path (computed first without taking\n\
    \   disjointness constraints into consideration but considering other\n   constraints).\n\
    \   The T flag has no meaning in the DISJOINTNESS-STATUS TLV and MUST NOT\n  \
    \ be set while sending and MUST be ignored on receipt.\n   Any document defining\
    \ a new flag for the DISJOINTNESS-CONFIGURATION\n   TLV automatically defines\
    \ a new flag with the same name and in the\n   same location in DISJOINTNESS-STATUS\
    \ TLV; the semantics of the flag\n   in the DISJOINTNESS-STATUS TLV MUST be specified\
    \ in the document that\n   specifies the flag in the DISJOINTNESS-CONFIGURATION\
    \ TLV.\n"
- title: 5.3.  Disjointness Objective Functions
  contents:
  - "5.3.  Disjointness Objective Functions\n   An objective function (OF) MAY be\
    \ applied to the disjointness\n   computation to drive the PCE computation behavior.\
    \  In this case, the\n   OF-List TLV (defined in [RFC5541]) is used as an optional\
    \ TLV in the\n   ASSOCIATION object.  Whereas the PCEP OF-List TLV allows multiple\
    \ OF-\n   codes inside the TLV, a sender SHOULD include a single OF-code in the\n\
    \   OF-List TLV when included in the Association Group, and the receiver\n   MUST\
    \ consider the first OF-code only and ignore others if included.\n   To minimize\
    \ the common shared resources (Node, Link, or SRLG) between\n   a set of paths\
    \ during path computation, three new OF-codes are\n   defined:\n   MSL\n     \
    \ Name:  Minimize the number of Shared (common) Links.\n      Objective Function\
    \ Code:  15\n      Description:  Find a set of paths such that it passes through\
    \ the\n         least number of shared (common) links.\n         -  A network\
    \ comprises a set of N links {Li, (i=1...N)}.\n         -  A path P passes through\
    \ K links {Lpi,(i=1...K)}.\n         -  A set of paths {P1...Pm} have L links\
    \ that are common to\n            more than one path {Lci,(i=1...L)}.\n      \
    \   -  Find a set of paths such that the value of L is minimized.\n   MSS\n  \
    \    Name:  Minimize the number of Shared (common) SRLGs.\n      Objective Function\
    \ Code:  16\n      Description:  Find a set of paths such that it passes through\
    \ the\n         least number of shared (common) SRLGs.\n         -  A network\
    \ comprises a set of N links {Li, (i=1...N)}.\n         -  A path P passes through\
    \ K links {Lpi,(i=1...K)} belonging to\n            unique M SRLGs {Spi,(i=1..M)}.\n\
    \         -  A set of paths {P1...Pm} have L SRLGs that are common to\n      \
    \      more than one path {Sci,(i=1...L)}.\n         -  Find a set of paths such\
    \ that the value of L is minimized.\n   MSN\n      Name:  Minimize the number\
    \ of Shared (common) Nodes.\n      Objective Function Code:  17\n      Description:\
    \  Find a set of paths such that they pass through the\n         least number\
    \ of shared (common) nodes.\n         -  A network comprises a set of N nodes\
    \ {Ni, (i=1...N)}.\n         -  A path P passes through K nodes {Npi,(i=1...K)}.\n\
    \         -  A set of paths {P1...Pm} have L nodes that are common to\n      \
    \      more than one path {Nci,(i=1...L)}.\n         -  Find a set of paths such\
    \ that the value of L is minimized.\n   If the OF-List TLV is included in the\
    \ ASSOCIATION object, the first\n   OF-code inside the OF object MUST be one of\
    \ the disjoint OFs defined\n   in this document.  If this condition is not met,\
    \ the PCEP speaker\n   MUST respond with a PCErr message with Error-Type 10 (Reception\
    \ of an\n   invalid object) and Error-value 32 (Incompatible OF code).\n"
- title: 5.4.  Relationship to SVEC
  contents:
  - "5.4.  Relationship to SVEC\n   [RFC5440] defines a mechanism for the synchronization\
    \ of a set of\n   path computation requests by using the SVEC object, which specifies\n\
    \   the list of synchronized requests that can be either dependent or\n   independent.\
    \  The SVEC object identifies the relationship between the\n   set of path computation\
    \ requests, identified by 'Request-ID-number'\n   in the RP (Request Parameters)\
    \ object.  [RFC6007] further clarifies\n   the use of the SVEC list for synchronized\
    \ path computations when\n   computing dependent requests and describes a number\
    \ of usage\n   scenarios for SVEC lists within single-domain and multi-domain\n\
    \   environments.\n   The SVEC object includes a Flags field that indicates the\
    \ potential\n   dependency between the set of path computation requests in a similar\n\
    \   way as the Flags field in the TLVs defined in this document.  The\n   path\
    \ computation request in the Path Computation Request (PCReq)\n   message MAY\
    \ use both the SVEC and ASSOCIATION objects to identify the\n   related path computation\
    \ request, as well as the DAG.  The PCE MUST\n   try to find a path that meets\
    \ both the constraints.  It is possible\n   that the diversity requirement in\
    \ the association group is different\n   from the one in the SVEC object.  The\
    \ PCE MUST consider both the\n   objects (including the flags set inside the objects)\
    \ as per the\n   processing rules and aim to find a path that meets both of these\n\
    \   constraints.  In case no such path is possible, the PCE MUST send a\n   Path\
    \ Computation Reply (PCRep) with a NO-PATH object indicating path\n   computation\
    \ failure, as per [RFC5440].  It should be noted that the\n   LSPs in the association\
    \ group can be fully same or partially\n   overlapping with the LSPs grouped by\
    \ the SVEC object in PCReq\n   message.\n   Some examples of usage are listed\
    \ below:\n   *  PCReq with SVEC object with node-diverse bit=1 (LSP1,LSP2) and\
    \ DAG\n      with S=1 (LSP1,LSP2) - both node- and SRLG-diverse path between\n\
    \      LSP1 and LSP2.\n   *  PCReq with SVEC object with link-diverse bit=1 (LSP1,LSP2)\
    \ and DAG\n      with L=1 (LSP1,LSP3) - link-diverse paths between LSP1 and LSP2\n\
    \      and between LSP1 and LSP3.  If the DAG is part of the stateful\n      database,\
    \ any future change in LSP3 will have an impact on LSP1.\n      But any future\
    \ change in LSP2 will have no impact on LSP1, as LSP2\n      is part of SVEC object\
    \ (which is considered once on receipt of the\n      PCReq message only).\n"
- title: 5.4.1.  SVEC and OF
  contents:
  - "5.4.1.  SVEC and OF\n   This document defines three new OF-codes in Section 5.3\
    \ to maximize\n   diversity as much as possible.  In other words, new OF-codes\
    \ allow\n   specification of minimization of common shared resources (Node, Link,\n\
    \   or SRLG) among a set of paths during path computation.\n   It may be interesting\
    \ to note that the diversity flags in the SVEC\n   object and OF for diversity\
    \ can be used together.  Some examples of\n   usage are listed below:\n   *  SVEC\
    \ object with node-diverse bit=1 - ensure full node diversity.\n   *  SVEC object\
    \ with node-diverse bit=1 and OF=MSS - full node\n      diversity with as much\
    \ SRLG diversity as possible.\n   *  SVEC object with domain-diverse bit=1 [RFC8685];\
    \ node-diverse\n      bit=1, and OF=MSS - full domain and node diversity with\
    \ as much\n      SRLG diversity as possible.\n   *  SVEC object with node-diverse\
    \ bit=1 and OF=MSN - ensure full node\n      diversity.\n   In the last example\
    \ above, it is interesting to note that \"OF\"\n   becomes redundant as \"SVEC\
    \ object\" ensures full node diversity;\n   however, this specification does not\
    \ prohibit redundant constraints\n   while using \"SVEC object\" and \"OF\" together\
    \ for diversity.\n"
- title: 5.5.  P Flag Considerations
  contents:
  - "5.5.  P Flag Considerations\n   As mentioned in Section 5.2, the P flag (when\
    \ set) indicates that the\n   computed path of the LSP SHOULD satisfy all constraints\
    \ and objective\n   functions first without considering the diversity constraint.\n\
    \   This means that an LSP with the P flag set should be placed first, as\n  \
    \ if the disjointness constraint has not been configured, while the\n   other\
    \ LSPs in the association with the P flag unset should be placed\n   by taking\
    \ into account the disjointness constraint.  Setting the P\n   flag changes the\
    \ relationship between LSPs to a one-sided\n   relationship (LSP 1 with P=0 depends\
    \ on LSP 2 with P=1, but LSP 2\n   with P=1 does not depend on LSP 1 with P=0).\
    \  Multiple LSPs in the\n   same Disjoint Association Group may have the P flag\
    \ set.  In such a\n   case, those LSPs may not be disjoint from each other but\
    \ will be\n   disjoint from other LSPs in the group that have the P flag unset.\n\
    \   This could be required in some primary/backup scenarios where the\n   primary\
    \ path should use the more optimal path available (taking into\n   account the\
    \ other constraints).  When disjointness is computed, it is\n   important for\
    \ the algorithm to know that it should try to optimize\n   the path of one or\
    \ more LSPs in the Disjoint Association Group (for\n   instance, the primary path),\
    \ while other paths are allowed to be\n   costlier (compared to a similar path\
    \ without the disjointness\n   constraint).  Without such a hint, the disjointness\
    \ algorithm may set\n   a path for all LSPs that may not completely fulfill the\
    \ customer's\n   requirement.\n            _________________________________________\n\
    \         |         | PCE  |                            |\n         | +------+\
    \           10             +------+  |\n   CE1 ****| PE 1 | ----- R1 ---- R2 -------\
    \ | PE 2 |**** CE2\n   CE3 ****| PE 3 | ----- R3 ---- R4 ------- | PE 4 |****\
    \ CE4\n          \\           +-- R5 --------- R6             /\n           \\\
    _________________________________________/\n            Figure 4: Example Topology\
    \ with Six Internal Routers\n   Note: In Figure 4, the cost of all the links is\
    \ 1, unless explicitly\n   marked otherwise.\n   In the figure above, a customer\
    \ has two dual-homed sites (CE1/CE3 and\n   CE2/CE4).  Let us consider that this\
    \ customer wants two link disjoint\n   paths between the two sites.  Due to physical\
    \ meshing, the customer\n   wants to use CE1 and CE2 as the primary (and CE3 and\
    \ CE4 are hosted\n   in a remote site for redundancy purpose).\n   Without any\
    \ hint (constraint) provided, the PCE may compute the two\n   link disjoint LSPs\
    \ together, leading to PE1->PE2 using path\n   PE1->R1->R2->PE2 and PE3->PE4 using\
    \ PE3->R3->R4->PE4.  In this case,\n   even if the disjointness constraint is\
    \ fulfilled, the path from PE1\n   to PE2 does not use the best optimal path available\
    \ in the network\n   (path delay may be higher); the customer requirement is thus\
    \ not\n   completely fulfilled.\n   The usage of the P flag allows the PCE to\
    \ know that a particular LSP\n   should be tied to the best path, as if the disjointness\
    \ constraint\n   was not requested.\n   In our example, if the P flag is set to\
    \ the LSP PE1->PE2, the PCE\n   should use the path PE1->R1->R3->R4->R2->PE2 for\
    \ this LSP, while the\n   other LSP should be link disjoint from this path.  The\
    \ second LSP\n   will be placed on PE3->R5->R6->PE4, as it is allowed to be costlier.\n\
    \   Driving the PCE disjointness computation may be done in other ways,\n   for\
    \ instance, setting a metric boundary reflecting a path delay\n   boundary.  Other\
    \ constraints may also be used.\n   The P flag allows to simply express that the\
    \ disjointness constraint\n   should not make the LSP worst.\n   Any constraint\
    \ added to a path disjointness computation may reduce\n   the chance to find suitable\
    \ paths.  The usage of the P flag, as any\n   other constraint, may prevent finding\
    \ a disjoint path.  In the\n   example above, if we consider that router R5 is\
    \ down and if PE1->PE2\n   has the P flag set, there is no room available to place\
    \ PE3->PE4 (the\n   link disjointness constraint cannot be fulfilled).  If PE1->PE2\
    \ has\n   the P flag unset, the algorithm may be able to place PE1->PE2 on the\n\
    \   R1->R2 link leaving room for PE3->PE4 using the R3->R4 link.  When\n   using\
    \ the P flag or any additional constraint on top of the\n   disjointness constraint,\
    \ the user should be aware that there is less\n   chance to fulfill the disjointness\
    \ constraint.\n            _________________________________________\n       \
    \  |         | PCE  |                            |\n         | +------+      \
    \     10             +------+  |\n   CE1 ****| PE 1 | ----- R1 ---- R2 -------\
    \ | PE 2 |**** CE2\n         |                |   \\2   |                   |\n\
    \   CE3 ****| PE 3 | ----- R3 ---- R4 ------- | PE 4 |**** CE4\n           \\\
    _________________________________________/\n           Figure 5: Example Topology\
    \ with Four Internal Routers\n   Note: In Figure 5, the cost of all the links\
    \ is 1, unless explicitly\n   marked otherwise.\n   In the figure above, we still\
    \ consider the same previous\n   requirements, so PE1->PE2 LSP should be optimized\
    \ (P flag set), while\n   PE3->PE4 should be link disjoint and may use a costlier\
    \ path.\n   Regarding PE1->PE2, there are two paths that are satisfying the\n\
    \   constraints (ECMP): PE1->R1->R4->R2->PE2 (path 1) and\n   PE1->R1->R3->R4->R2->PE2\
    \ (path 2).  An implementation may choose one\n   of the paths.\n   If the implementation\
    \ elects only one path, there is a chance that\n   picking up one path may prevent\
    \ link disjointness.  In our example,\n   if path 2 is used for PE1->PE2, there\
    \ is no room left for PE3->PE4,\n   while if path 1 is used, PE3->PE4 can be placed\
    \ on R3->R4 link.\n   When the P flag is set for an LSP and when ECMPs are available,\
    \ an\n   implementation should aim to select a path that allows disjointness.\n"
- title: 5.6.  Disjointness Computation Issues
  contents:
  - "5.6.  Disjointness Computation Issues\n   There may be some cases where the PCE\
    \ is not able to provide a set of\n   disjoint paths for one or more LSPs in the\
    \ association.\n   When the T flag is set (Strict disjointness), if disjointness\
    \ cannot\n   be ensured for one or more LSPs, the PCE MUST reply to a PCReq with\
    \ a\n   PCRep message containing a NO-PATH object.  In case of a PCRpt\n   message,\
    \ the PCE MUST return a PCErr message with Error-Type 26\n   (Association Error)\
    \ and Error-value 7 (Cannot join the association\n   group).\n   In case of a\
    \ network event leading to an impossible strict\n   disjointness, the PCE MUST\
    \ send a PCUpd message containing an empty\n   Explicit Route Object (ERO) to\
    \ the corresponding PCCs.  In addition\n   to the empty ERO object, the PCE MAY\
    \ add the NO-PATH-VECTOR TLV\n   [RFC5440] in the LSP object.\n   This document\
    \ adds new bits in the Flags field of the NO-PATH-VECTOR\n   TLV:\n   *  bit 11:\
    \ When set, the PCE indicates that it could not find a\n      disjoint path for\
    \ this LSP.\n   *  bit 10: When set, the PCE indicates that it does not support\
    \ the\n      requested disjointness computation.\n   When the T flag is unset,\
    \ the PCE is allowed to relax disjointness by\n   applying a requested objective\
    \ function (Section 5.3) if specified.\n   Otherwise, if no objective function\
    \ is specified, the PCE is allowed\n   to reduce the required level of disjointness\
    \ as it deems fit.  The\n   actual level of disjointness of the paths computed\
    \ by the PCE can be\n   reported through the DISJOINTNESS-STATUS TLV by setting\
    \ the\n   appropriate flags in the TLV.  While the DISJOINTNESS-CONFIGURATION\n\
    \   TLV defines the desired level of disjointness required by\n   configuration,\
    \ the DISJOINTNESS-STATUS TLV defines the achieved level\n   of disjointness computed.\n\
    \   There are some cases where the PCE may need to completely relax the\n   disjointness\
    \ constraint in order to provide a path to all the LSPs\n   that are part of the\
    \ association.  A mechanism that allows the PCE to\n   fully relax a constraint\
    \ is considered by the authors as more global\n   to PCEP rather than linked to\
    \ the disjointness use case.  As a\n   consequence, it is considered out of scope\
    \ of the document.  See\n   [PCE-OPTIONAL] for a proposed mechanism.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document defines one new PCEP Association\
    \ type, which by itself\n   does not add any new security concerns beyond those\
    \ discussed in\n   [RFC5440], [RFC8231], [RFC7470], and [RFC8697].  But adding\
    \ of a\n   spurious LSP into the Disjoint Association Group could lead to\n  \
    \ recomputation and setup of all LSPs in the group, which could be used\n   to\
    \ overwhelm the PCE and the network.\n   A spurious LSP can have flags that are\
    \ inconsistent with those of the\n   legitimate LSPs of the group and thus cause\
    \ LSP allocation for the\n   legitimate LSPs to fail with an error.  Also, certain\
    \ combinations of\n   flags (notably, the 'T' bit) can result in conflicts that\
    \ cannot be\n   resolved.\n   Also, as stated in [RFC8697], much of the information\
    \ carried in the\n   ASSOCIATION object reflects information that can also be\
    \ derived from\n   the LSP database, but association provides a much easier grouping\
    \ of\n   related LSPs and messages.  This holds true for the DAT as well;\n  \
    \ thus, this could provide an adversary with the opportunity to\n   eavesdrop\
    \ on the relationship between the LSPs and understand the\n   network topology.\n\
    \   Thus, securing the PCEP session using Transport Layer Security (TLS)\n   [RFC8253],\
    \ as per the recommendations and best current practices in\n   BCP 195 [RFC7525],\
    \ is RECOMMENDED.\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  Association Type
  contents:
  - "7.1.  Association Type\n   This document defines a new Association type, originally\
    \ described in\n   [RFC8697].  IANA has assigned the following new value in the\n\
    \   \"ASSOCIATION Type Field\" subregistry [RFC8697] within the \"Path\n   Computation\
    \ Element Protocol (PCEP) Numbers\" registry:\n                | Type | Name \
    \                | Reference |\n                | 2    | Disjoint Association\
    \ | RFC 8800  |\n                      Table 1: ASSOCIATION Type Field\n"
- title: 7.2.  PCEP TLVs
  contents:
  - "7.2.  PCEP TLVs\n   This document defines two new PCEP TLVs.  IANA has assigned\
    \ the\n   following values in the \"PCEP TLV Type Indicators\" subregistry within\n\
    \   the \"Path Computation Element Protocol (PCEP) Numbers\" registry:\n     \
    \      | TLV Type | TLV Name                   | Reference |\n           | 46\
    \       | DISJOINTNESS-CONFIGURATION | RFC 8800  |\n           | 47       | DISJOINTNESS-STATUS\
    \        | RFC 8800  |\n                     Table 2: PCEP TLV Type Indicators\n\
    \   IANA has created a new subregistry, named \"DISJOINTNESS-CONFIGURATION\n \
    \  TLV Flag Field\", within the \"Path Computation Element Protocol (PCEP)\n \
    \  Numbers\" registry to manage the Flags field in the DISJOINTNESS-\n   CONFIGURATION\
    \ TLV.  New values are to be assigned by Standards Action\n   [RFC8126].  Each\
    \ bit should be tracked with the following qualities:\n   *  Bit number (count\
    \ from 0 as the most significant bit)\n   *  Flag Name\n   *  Reference\n   The\
    \ initial contents of this subregistry are shown below:\n              | Bit \
    \ | Name                    | Reference |\n              | 31   | L - Link Diverse\
    \        | RFC 8800  |\n              | 30   | N - Node Diverse        | RFC 8800\
    \  |\n              | 29   | S - SRLG Diverse        | RFC 8800  |\n         \
    \     | 28   | P - Shortest Path       | RFC 8800  |\n              | 27   | T\
    \ - Strict Disjointness | RFC 8800  |\n              | 0-26 | Unassigned     \
    \         |           |\n                 Table 3: DISJOINTNESS-CONFIGURATION\
    \ TLV\n"
- title: 7.3.  Objective Functions
  contents:
  - "7.3.  Objective Functions\n   This document defines three new objective functions.\
    \  IANA has made\n   the following allocations in the \"Objective Function\" subregistry\n\
    \   within the \"Path Computation Element Protocol (PCEP) Numbers\"\n   registry:\n\
    \            | Code Point | Name                  | Reference |\n            |\
    \ 15         | Minimize the number   | RFC 8800  |\n            |            |\
    \ of Shared Links (MSL) |           |\n            | 16         | Minimize the\
    \ number   | RFC 8800  |\n            |            | of Shared SRLGs (MSS) | \
    \          |\n            | 17         | Minimize the number   | RFC 8800  |\n\
    \            |            | of Shared Nodes (MSN) |           |\n            \
    \           Table 4: Objective Function\n"
- title: 7.4.  NO-PATH-VECTOR Bit Flags
  contents:
  - "7.4.  NO-PATH-VECTOR Bit Flags\n   This document defines new bits for the NO-PATH-VECTOR\
    \ TLV in the \"NO-\n   PATH-VECTOR TLV Flag Field\" subregistry of the \"Path\
    \ Computation\n   Element Protocol (PCEP) Numbers\" registry.  IANA has made the\n\
    \   following allocations:\n          | Bit Number | Name                    \
    \  | Reference |\n          | 11         | Disjoint path not found   | RFC 8800\
    \  |\n          | 10         | Requested disjoint        | RFC 8800  |\n     \
    \     |            | computation not supported |           |\n               \
    \   Table 5: NO-PATH-VECTOR TLV Flag Field\n"
- title: 7.5.  PCEP-ERROR Codes
  contents:
  - "7.5.  PCEP-ERROR Codes\n   This document defines two new Error-values within\
    \ existing Error-\n   Types related to disjoint association.  IANA has allocated\
    \ the\n   following new Error-values in the \"PCEP-ERROR Object Error Types and\n\
    \   Values\" subregistry within the \"Path Computation Element Protocol\n   (PCEP)\
    \ Numbers\" registry:\n    | Error-Type | Meaning   | Error-value            \
    \    | Reference |\n    | 6          | Mandatory |                           \
    \ | [RFC5440] |\n    |            | Object    |                            | \
    \          |\n    |            | missing   |                            |    \
    \       |\n    |            |           | 15: DISJOINTNESS-          | RFC 8800\
    \  |\n    |            |           | CONFIGURATION TLV missing  |           |\n\
    \    | 10         | Reception |                            | [RFC5440] |\n   \
    \ |            | of an     |                            |           |\n    | \
    \           | invalid   |                            |           |\n    |    \
    \        | object    |                            |           |\n    |       \
    \     |           | 32: Incompatible OF code   | RFC 8800  |\n             Table\
    \ 6: PCEP-ERROR Object Error Types and Values\n"
- title: 8.  Manageability Considerations
  contents:
  - '8.  Manageability Considerations

    '
- title: 8.1.  Control of Function and Policy
  contents:
  - "8.1.  Control of Function and Policy\n   An operator SHOULD be allowed to configure\
    \ the Disjoint Association\n   Groups and disjoint parameters at the PCEP peers\
    \ and associate them\n   with the LSPs.  The operator MUST be allowed to set the\
    \ Operator-\n   configured Association Range.  The operator SHOULD be allowed\
    \ to set\n   the local policies to define various disjoint computational behavior\n\
    \   at the PCE.\n"
- title: 8.2.  Information and Data Models
  contents:
  - "8.2.  Information and Data Models\n   An implementation SHOULD allow the operator\
    \ to view the disjoint\n   associations configured or created dynamically.  Furthermore,\n\
    \   implementations SHOULD allow to view disjoint associations reported\n   by\
    \ each peer and the current set of LSPs in this association.  The\n   PCEP YANG\
    \ module [PCEP-YANG] includes association group information.\n"
- title: 8.3.  Liveness Detection and Monitoring
  contents:
  - "8.3.  Liveness Detection and Monitoring\n   Mechanisms defined in this document\
    \ do not imply any new liveness\n   detection and monitoring requirements in addition\
    \ to those already\n   listed in [RFC5440].\n"
- title: 8.4.  Verification of Correct Operations
  contents:
  - "8.4.  Verification of Correct Operations\n   Apart from the operation verification\
    \ requirements already listed in\n   [RFC5440], a PCEP implementation SHOULD provide\
    \ parameters related to\n   disjoint path computation, such as number of DAG,\
    \ number of disjoint\n   path computation failures, etc.  A PCEP implementation\
    \ SHOULD log\n   failure events (e.g., incompatible Flags).\n"
- title: 8.5.  Requirements on Other Protocols
  contents:
  - "8.5.  Requirements on Other Protocols\n   Mechanisms defined in this document\
    \ do not imply any new requirements\n   on other protocols.\n"
- title: 8.6.  Impact on Network Operations
  contents:
  - "8.6.  Impact on Network Operations\n   Mechanisms defined in Section 8.6 of [RFC5440]\
    \ also apply to PCEP\n   extensions defined in this document.  Additionally, a\
    \ PCEP\n   implementation SHOULD allow a limit to be placed on the number of\n\
    \   LSPs that can belong to a DAG.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n  \
    \            Element (PCE) Communication Protocol (PCEP)\", RFC 5440,\n      \
    \        DOI 10.17487/RFC5440, March 2009,\n              <https://www.rfc-editor.org/info/rfc5440>.\n\
    \   [RFC5541]  Le Roux, JL., Vasseur, JP., and Y. Lee, \"Encoding of\n       \
    \       Objective Functions in the Path Computation Element\n              Communication\
    \ Protocol (PCEP)\", RFC 5541,\n              DOI 10.17487/RFC5541, June 2009,\n\
    \              <https://www.rfc-editor.org/info/rfc5541>.\n   [RFC7470]  Zhang,\
    \ F. and A. Farrel, \"Conveying Vendor-Specific\n              Constraints in\
    \ the Path Computation Element Communication\n              Protocol\", RFC 7470,\
    \ DOI 10.17487/RFC7470, March 2015,\n              <https://www.rfc-editor.org/info/rfc7470>.\n\
    \   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n      \
    \        Writing an IANA Considerations Section in RFCs\", BCP 26,\n         \
    \     RFC 8126, DOI 10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8231]  Crabbe,\
    \ E., Minei, I., Medved, J., and R. Varga, \"Path\n              Computation Element\
    \ Communication Protocol (PCEP)\n              Extensions for Stateful PCE\",\
    \ RFC 8231,\n              DOI 10.17487/RFC8231, September 2017,\n           \
    \   <https://www.rfc-editor.org/info/rfc8231>.\n   [RFC8253]  Lopez, D., Gonzalez\
    \ de Dios, O., Wu, Q., and D. Dhody,\n              \"PCEPS: Usage of TLS to Provide\
    \ a Secure Transport for the\n              Path Computation Element Communication\
    \ Protocol (PCEP)\",\n              RFC 8253, DOI 10.17487/RFC8253, October 2017,\n\
    \              <https://www.rfc-editor.org/info/rfc8253>.\n   [RFC8685]  Zhang,\
    \ F., Zhao, Q., Gonzalez de Dios, O., Casellas, R.,\n              and D. King,\
    \ \"Path Computation Element Communication\n              Protocol (PCEP) Extensions\
    \ for the Hierarchical Path\n              Computation Element (H-PCE) Architecture\"\
    , RFC 8685,\n              DOI 10.17487/RFC8685, December 2019,\n            \
    \  <https://www.rfc-editor.org/info/rfc8685>.\n   [RFC8697]  Minei, I., Crabbe,\
    \ E., Sivabalan, S., Ananthakrishnan, H.,\n              Dhody, D., and Y. Tanaka,\
    \ \"Path Computation Element\n              Communication Protocol (PCEP) Extensions\
    \ for Establishing\n              Relationships between Sets of Label Switched\
    \ Paths\n              (LSPs)\", RFC 8697, DOI 10.17487/RFC8697, January 2020,\n\
    \              <https://www.rfc-editor.org/info/rfc8697>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [PCE-OPTIONAL]\n              Li, C., Zheng,\
    \ H., and S. Litkowski, \"Extension for\n              Stateful PCE to allow Optional\
    \ Processing of PCEP\n              Objects\", Work in Progress, Internet-Draft,\
    \ draft-dhody-\n              pce-stateful-pce-optional-06, 9 July 2020,\n   \
    \           <https://tools.ietf.org/html/draft-dhody-pce-stateful-pce-\n     \
    \         optional-06>.\n   [PCEP-YANG]\n              Dhody, D., Hardwick, J.,\
    \ Beeram, V., and J. Tantsura, \"A\n              YANG Data Model for Path Computation\
    \ Element\n              Communications Protocol (PCEP)\", Work in Progress,\n\
    \              Internet-Draft, draft-ietf-pce-pcep-yang-14, 7 July 2020,\n   \
    \           <https://tools.ietf.org/html/draft-ietf-pce-pcep-yang-14>.\n   [RFC4655]\
    \  Farrel, A., Vasseur, J.-P., and J. Ash, \"A Path\n              Computation\
    \ Element (PCE)-Based Architecture\", RFC 4655,\n              DOI 10.17487/RFC4655,\
    \ August 2006,\n              <https://www.rfc-editor.org/info/rfc4655>.\n   [RFC6007]\
    \  Nishioka, I. and D. King, \"Use of the Synchronization\n              VECtor\
    \ (SVEC) List for Synchronized Dependent Path\n              Computations\", RFC\
    \ 6007, DOI 10.17487/RFC6007, September\n              2010, <https://www.rfc-editor.org/info/rfc6007>.\n\
    \   [RFC7525]  Sheffer, Y., Holz, R., and P. Saint-Andre,\n              \"Recommendations\
    \ for Secure Use of Transport Layer\n              Security (TLS) and Datagram\
    \ Transport Layer Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525,\
    \ May\n              2015, <https://www.rfc-editor.org/info/rfc7525>.\n   [RFC8281]\
    \  Crabbe, E., Minei, I., Sivabalan, S., and R. Varga, \"Path\n              Computation\
    \ Element Communication Protocol (PCEP)\n              Extensions for PCE-Initiated\
    \ LSP Setup in a Stateful PCE\n              Model\", RFC 8281, DOI 10.17487/RFC8281,\
    \ December 2017,\n              <https://www.rfc-editor.org/info/rfc8281>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   A special thanks to the authors of [RFC8697]; this document\
    \ borrows\n   some text from it.  The authors would also like to thank Adrian\n\
    \   Farrel and Julien Meuric for the valuable comments.\n   Thanks to Emmanuel\
    \ Baccelli for the RTGDIR review.\n   Thanks to Dale Worley for a detailed GENART\
    \ review.\n   Thanks to Alvaro Retana, Benjamin Kaduk, Suresh Krishnan, Roman\n\
    \   Danyliw, Alissa Cooper, and \xC9ric Vyncke for the IESG review.\n"
- title: Contributors
  contents:
  - "Contributors\n   Dhruv Dhody\n   Huawei Technologies\n   Divyashree Techno Park,\
    \ Whitefiled\n   Bangalore 560066\n   Karnataka\n   India\n   Email: dhruv.ietf@gmail.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Stephane Litkowski\n   Cisco Systems, Inc.\n   Email:\
    \ slitkows.ietf@gmail.com\n   Siva Sivabalan\n   Ciena Corporation\n   Email:\
    \ msiva282@gmail.com\n   Colby Barth\n   Juniper Networks\n   Email: cbarth@juniper.net\n\
    \   Mahendra Singh Negi\n   RtBrick India\n   N-17L, Floor-1, 18th Cross Rd, HSR\
    \ Layout Sector-3\n   Bangalore 560102\n   Karnataka\n"
