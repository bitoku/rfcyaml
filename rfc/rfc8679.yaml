- contents:
  - '                    MPLS Egress Protection Framework

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies a fast reroute framework for protecting
    IP/\n   MPLS services and MPLS transport tunnels against egress node and\n   egress
    link failures.  For each type of egress failure, it defines\n   the roles of Point
    of Local Repair (PLR), protector, and backup\n   egress router and the procedures
    of establishing a bypass tunnel from\n   a PLR to a protector.  It describes the
    behaviors of these routers in\n   handling an egress failure, including local
    repair on the PLR and\n   context-based forwarding on the protector.  The framework
    can be used\n   to develop egress protection mechanisms to reduce traffic loss
    before\n   global repair reacts to an egress failure and control-plane protocols\n
    \  converge on the topology changes due to the egress failure.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8679.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Specification of Requirements\n
    \  3.  Terminology\n   4.  Requirements\n   5.  Egress Node Protection\n     5.1.
    \ Reference Topology\n     5.2.  Egress Node Failure and Detection\n     5.3.
    \ Protector and PLR\n     5.4.  Protected Egress\n     5.5.  Egress-Protected
    Tunnel and Service\n     5.6.  Egress-Protection Bypass Tunnel\n     5.7.  Context
    ID, Context Label, and Context-Based Forwarding\n     5.8.  Advertisement and
    Path Resolution for Context ID\n     5.9.  Egress-Protection Bypass Tunnel Establishment\n
    \    5.10. Local Repair on PLR\n     5.11. Service Label Distribution from Egress
    Router to Protector\n     5.12. Centralized Protector Mode\n   6.  Egress Link
    Protection\n   7.  Global Repair\n   8.  Operational Considerations\n   9.  General
    Context-Based Forwarding\n   10. Example: Layer 3 VPN Egress Protection\n     10.1.
    \ Egress Node Protection\n     10.2.  Egress Link Protection\n     10.3.  Global
    Repair\n     10.4.  Other Modes of VPN Label Allocation\n   11. IANA Considerations\n
    \  12. Security Considerations\n   13. References\n     13.1.  Normative References\n
    \    13.2.  Informative References\n   Acknowledgements\n   Authors' Addresses\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   In MPLS networks, Label Switched Paths (LSPs) are widely
    used as\n   transport tunnels to carry IP and MPLS services across MPLS domains.\n
    \  Examples of MPLS services are Layer 2 VPNs, Layer 3 VPNs,\n   hierarchical
    LSPs, and others.  In general, a tunnel may carry\n   multiple services of one
    or multiple types, if the tunnel satisfies\n   both individual and aggregate requirements
    (e.g., Class of Service\n   (CoS) and QoS) of these services.  The egress router
    of the tunnel\n   hosts the service instances of the services.  An MPLS service\n
    \  instance forwards service packets via an egress link to the service\n   destination,
    based on a service label.  An IP service instance does\n   the same, based on
    an IP service address.  The egress link is often\n   called a Provider Edge -
    Customer Edge (PE-CE) link or Attachment\n   Circuit (AC).\n   Today, local-repair-based
    fast reroute mechanisms (see [RFC4090],\n   [RFC5286], [RFC7490], and [RFC7812])
    have been widely deployed to\n   protect MPLS tunnels against transit link/node
    failures, with traffic\n   restoration time in the order of tens of milliseconds.
    \ Local repair\n   refers to the scenario where the router upstream to an anticipated\n
    \  failure, a.k.a., PLR, pre-establishes a bypass tunnel to the router\n   downstream
    of the failure, a.k.a., Merge Point (MP), pre-installs the\n   forwarding state
    of the bypass tunnel in the data plane, and uses a\n   rapid mechanism (e.g.,
    link-layer Operations, Administration, and\n   Maintenance (OAM), Bidirectional
    Forwarding Detection (BFD), and\n   others) to locally detect the failure in the
    data plane.  When the\n   failure occurs, the PLR reroutes traffic through the
    bypass tunnel to\n   the MP, allowing the traffic to continue to flow to the tunnel's\n
    \  egress router.\n   This document specifies a fast reroute framework for egress
    node and\n   egress link protection.  Similar to transit link/node protection,\n
    \  this framework also relies on a PLR to perform local failure\n   detection
    and local repair.  In egress node protection, the PLR is\n   the penultimate hop
    router of a tunnel.  In egress link protection,\n   the PLR is the egress router
    of the tunnel.  The framework further\n   uses a so-called \"protector\" to serve
    as the tail end of a bypass\n   tunnel.  The protector is a router that hosts
    \"protection service\n   instances\" and has its own connectivity or paths to
    service\n   destinations.  When a PLR does local repair, the protector performs\n
    \  \"context label switching\" for rerouted MPLS service packets and\n   \"context
    IP forwarding\" for rerouted IP service packets, to allow the\n   service packets
    to continue to reach the service destinations.\n   This framework considers an
    egress node failure as a failure of a\n   tunnel and a failure of all the services
    carried by the tunnel as\n   service packets that can no longer reach the service
    instances on the\n   egress router.  Therefore, the framework addresses egress
    node\n   protection at both the tunnel level and service level,\n   simultaneously.
    \ Likewise, the framework considers an egress link\n   failure as a failure of
    all the services traversing the link and\n   addresses egress link protection
    at the service level.\n   This framework requires that the destination (a CE or
    site) of a\n   service MUST be dual-homed or have dual paths to an MPLS network,
    via\n   two MPLS edge routers.  One of the routers is the egress router of\n   the
    service's transport tunnel, and the other is a backup egress\n   router that hosts
    a \"backup service instance\".  In the \"co-located\"\n   protector mode in this
    document, the backup egress router serves as\n   the protector; hence, the backup
    service instance acts as the\n   protection service instance.  In the \"centralized\"
    protector mode\n   (Section 5.12), the protector and the backup egress router
    are\n   decoupled, and the protection service instance and the backup service\n
    \  instance are hosted separately by the two routers.\n   The framework is described
    by mainly referring to point-to-point\n   (P2P) tunnels.  However, it is equally
    applicable to point-to-\n   multipoint (P2MP), multipoint-to-point (MP2P), and
    multipoint-to-\n   multipoint (MP2MP) tunnels, as the sub-LSPs of these tunnels
    can be\n   viewed as P2P tunnels.\n   The framework is a multi-service and multi-transport
    framework.  It\n   assumes a generic model where each service is comprised of
    a common\n   set of components, including a service instance, a service label,
    a\n   service label distribution protocol, and an MPLS transport tunnel.\n   The
    framework also assumes that the service label is downstream\n   assigned, i.e.,
    assigned by an egress router.  Therefore, the\n   framework is generally applicable
    to most existing and future\n   services.  However, there are services with certain
    modes, where a\n   protector is unable to pre-establish the forwarding state for
    egress\n   protection, or a PLR is not allowed to reroute traffic to other\n   routers
    in order to avoid traffic duplication, e.g., the broadcast,\n   multicast, and
    unknown unicast traffic in Virtual Private LAN Service\n   (VPLS) and Ethernet
    VPN (EVPN).  These cases are left for future\n   study.  Services that use upstream-assigned
    service labels are also\n   out of scope of this document and left for future
    study.\n   The framework does not require extensions for the existing signaling\n
    \  and label distribution protocols (e.g., RSVP, LDP, BGP, etc.) of MPLS\n   tunnels.
    \ It assumes that transport tunnels and bypass tunnels are to\n   be established
    by using the generic procedures provided by the\n   protocols.  On the other hand,
    it does not preclude extensions to the\n   protocols that may facilitate the procedures.
    \ One example of such\n   extension is [RFC8400].  The framework does see the
    need for\n   extensions of IGPs and service label distribution protocols in some\n
    \  procedures, particularly for supporting protection establishment and\n   context
    label switching.  This document provides guidelines for these\n   extensions,
    but it leaves the specific details to separate documents.\n   The framework is
    intended to complement control-plane convergence and\n   global repair.  Control-plane
    convergence relies on control protocols\n   to react on the topology changes due
    to a failure.  Global repair\n   relies on an ingress router to remotely detect
    a failure and switch\n   traffic to an alternative path.  An example of global
    repair is the\n   BGP prefix independent convergence mechanism [BGP-PIC] for BGP-\n
    \  established services.  Compared with these mechanisms, this framework\n   is
    considered faster in traffic restoration, due to the nature of\n   local failure
    detection and local repair.  It is RECOMMENDED that the\n   framework be used
    in conjunction with control-plane convergence or\n   global repair, in order to
    take the advantages of both approaches.\n   That is, the framework provides fast
    and temporary repair, while\n   control-plane convergence or global repair provides
    ultimate and\n   permanent repair.\n"
  title: 1.  Introduction
- contents:
  - "2.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
    RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
    as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
    in all\n   capitals, as shown here.\n"
  title: 2.  Specification of Requirements
- contents:
  - "3.  Terminology\n   Egress router:\n      A router at the egress endpoint of
    a tunnel.  It hosts service\n      instances for all the services carried by the
    tunnel and has\n      connectivity with the destinations of the services.\n   Egress
    node failure:\n      A failure of an egress router.\n   Egress link failure:\n
    \     A failure of the egress link (e.g., PE-CE link, attachment\n      circuit)
    of a service.\n   Egress failure:\n      An egress node failure or an egress link
    failure.\n   Egress-protected tunnel:\n      A tunnel whose egress router is protected
    by a mechanism according\n      to this framework.  The egress router is hence
    called a protected\n      egress router.\n   Egress-protected service:\n      An
    IP or MPLS service that is carried by an egress-protected\n      tunnel and hence
    protected by a mechanism according to this\n      framework.\n   Backup egress
    router:\n      Given an egress-protected tunnel and its egress router, this is\n
    \     another router that has connectivity with all or a subset of the\n      destinations
    of the egress-protected services carried by the\n      egress-protected tunnel.\n
    \  Backup service instance:\n      A service instance that is hosted by a backup
    egress router and\n      corresponds to an egress-protected service on a protected
    egress\n      router.\n   Protector:\n      A role acted by a router as an alternate
    of a protected egress\n      router, to handle service packets in the event of
    an egress\n      failure.  A protector may be physically co-located with or\n
    \     decoupled from a backup egress router, depending on the co-located\n      or
    centralized protector mode.\n   Protection service instance:\n      A service
    instance hosted by a protector that corresponds to the\n      service instance
    of an egress-protected service on a protected\n      egress router.  A protection
    service instance is a backup service\n      instance, if the protector is co-located
    with a backup egress\n      router.\n   PLR:\n      A router at the point of local
    repair.  In egress node protection,\n      it is the penultimate hop router on
    an egress-protected tunnel.\n      In egress link protection, it is the egress
    router of the egress-\n      protected tunnel.\n   Protected egress {E, P}:\n
    \     A virtual node consisting of an ordered pair of egress router E\n      and
    protector P.  It serves as the virtual destination of an\n      egress-protected
    tunnel and as the virtual location of the egress-\n      protected services carried
    by the tunnel.\n   Context identifier (ID):\n      A globally unique IP address
    assigned to a protected egress {E,\n      P}.\n   Context label:\n      A non-reserved
    label assigned to a context ID by a protector.\n   Egress-protection bypass tunnel:\n
    \     A tunnel used to reroute service packets around an egress failure.\n   Co-located
    protector mode:\n      The scenario where a protector and a backup egress router
    are co-\n      located as one router; hence, each backup service instance serves\n
    \     as a protection service instance.\n   Centralized protector mode:\n      The
    scenario where a protector is a dedicated router and is\n      decoupled from
    backup egress routers.\n   Context label switching:\n      Label switching performed
    by a protector in the label space of an\n      egress router indicated by a context
    label.\n   Context IP forwarding:\n      IP forwarding performed by a protector
    in the IP address space of\n      an egress router indicated by a context label.\n"
  title: 3.  Terminology
- contents:
  - "4.  Requirements\n   This document considers the following as the design requirements
    of\n   this egress protection framework.\n   *  The framework must support P2P
    tunnels.  It should equally support\n      P2MP, MP2P, and MP2MP tunnels, by treating
    each sub-LSP as a P2P\n      tunnel.\n   *  The framework must support multi-service
    and multi-transport\n      networks.  It must accommodate existing and future
    signaling and\n      label-distribution protocols of tunnels and bypass tunnels,\n
    \     including RSVP, LDP, BGP, IGP, Segment Routing, and others.  It\n      must
    also accommodate existing and future IP/MPLS services,\n      including Layer
    2 VPNs, Layer 3 VPNs, hierarchical LSP, and\n      others.  It MUST provide a
    general solution for networks where\n      different types of services and tunnels
    co-exist.\n   *  The framework must consider minimizing disruption during\n      deployment.
    \ It should only involve routers close to the egress\n      and be transparent
    to ingress routers and other transit routers.\n   *  In egress node protection,
    for scalability and performance\n      reasons, a PLR must be agnostic to services
    and service labels.\n      It must maintain bypass tunnels and bypass forwarding
    state on a\n      per-transport-tunnel basis rather than on a per-service-\n      destination
    or per-service-label basis.  It should also support\n      bypass tunnel sharing
    between transport tunnels.\n   *  A PLR must be able to use its local visibility
    or information of\n      routing or TE topology to compute or resolve a path for
    a bypass\n      tunnel.\n   *  A protector must be able to perform context label
    switching for\n      rerouted MPLS service packets, based on a service label(s)\n
    \     assigned by an egress router.  It must be able to perform context\n      IP
    forwarding for rerouted IP service packets, in the public or\n      private IP
    address space used by an egress router.\n   *  The framework must be able to work
    seamlessly with transit link/\n      node protection mechanisms to achieve end-to-end
    coverage.\n   *  The framework must be able to work in conjunction with global\n
    \     repair and control-plane convergence.\n"
  title: 4.  Requirements
- contents:
  - '5.  Egress Node Protection

    '
  - contents:
    - "5.1.  Reference Topology\n   This document refers to the following topology
      when describing the\n   procedures of egress node protection.\n                  services
      1, ..., N\n      I ------ R1 ------- PLR --------------- E ----\n   ingress
      \         penultimate hop        egress    \\\n                           R2
      --------------- P ----\n"
    title: 5.1.  Reference Topology
  - contents:
    - "5.2.  Egress Node Failure and Detection\n   An egress node failure refers to
      the failure of an MPLS tunnel's\n   egress router.  At the service level, it
      is also a service instance\n   failure for each IP/MPLS service carried by the
      tunnel.\n   An egress node failure can be detected by an adjacent router (i.e.,\n
      \  PLR in this framework) through a node liveness detection mechanism or\n   a
      mechanism based on a collective failure of all the links to that\n   node.  The
      mechanisms MUST be reasonably fast, i.e., faster than\n   control-plane failure
      detection and remote failure detection.\n   Otherwise, local repair will not
      be able to provide much benefit\n   compared to control-plane convergence or
      global repair.  In general,\n   the speed, accuracy, and reliability of a failure
      detection mechanism\n   are the key factors to decide its applicability in egress
      node\n   protection.  This document provides the following guidelines for\n
      \  network operators to choose a proper type of protection on a PLR.\n   *  If
      the PLR has a mechanism to detect and differentiate a link\n      failure (of
      the link between the PLR and the egress node) and an\n      egress node failure,
      it SHOULD set up both link protection and\n      egress node protection and
      trigger one and only one protection\n      upon a corresponding failure.\n   *
      \ If the PLR has a fast mechanism to detect a link failure and an\n      egress
      node failure, but it cannot distinguish them, or if the PLR\n      has a fast
      mechanism to detect a link failure only, but not an\n      egress node failure,
      the PLR has two options:\n      1.  It MAY set up link protection only and leave
      the egress node\n          failure to be handled by global repair and control-plane\n
      \         convergence.\n      2.  It MAY set up egress node protection only
      and treat a link\n          failure as a trigger for the egress node protection.
      \ The\n          assumption is that treating a link failure as an egress node\n
      \         failure MUST NOT have a negative impact on services.\n          Otherwise,
      it SHOULD adopt the previous option.\n"
    title: 5.2.  Egress Node Failure and Detection
  - contents:
    - "5.3.  Protector and PLR\n   A router is assigned to the \"protector\" role
      to protect a tunnel and\n   the services carried by the tunnel against an egress
      node failure.\n   The protector is responsible for hosting a protection service\n
      \  instance for each protected service, serving as the tail end of a\n   bypass
      tunnel, and performing context label switching and/or context\n   IP forwarding
      for rerouted service packets.\n   A tunnel is protected by only one protector.
      \ Multiple tunnels to a\n   given egress router may be protected by a common
      protector or\n   different protectors.  A protector may protect multiple tunnels
      with\n   a common egress router or different egress routers.\n   For each tunnel,
      its penultimate hop router acts as a PLR.  The PLR\n   pre-establishes a bypass
      tunnel to the protector and pre-installs\n   bypass forwarding state in the
      data plane.  Upon detection of an\n   egress node failure, the PLR reroutes
      all the service packets\n   received on the tunnel through the bypass tunnel
      to the protector.\n   For MPLS service packets, the PLR keeps service labels
      intact in the\n   packets.  In turn, the protector forwards the service packets
      towards\n   the ultimate service destinations.  Specifically, it performs context\n
      \  label switching for MPLS service packets, based on the service labels\n   assigned
      by the protected egress router; it performs context IP\n   forwarding for IP
      service packets, based on their destination\n   addresses.\n   The protector
      MUST have its own connectivity with each service\n   destination, via a direct
      link or a multi-hop path, which MUST NOT\n   traverse the protected egress router
      or be affected by the egress\n   node failure.  This also means that each service
      destination MUST be\n   dual-homed or have dual paths to the egress router and
      a backup\n   egress router that may serve as the protector.  Each protection\n
      \  service instance on the protector relies on such connectivity to set\n   up
      forwarding state for context label switching and context IP\n   forwarding.\n"
    title: 5.3.  Protector and PLR
  - contents:
    - "5.4.  Protected Egress\n   This document introduces the notion of \"protected
      egress\" as a\n   virtual node consisting of the egress router E of a tunnel
      and a\n   protector P.  It is denoted by an ordered pair of {E, P}, indicating\n
      \  the primary-and-protector relationship between the two routers.  It\n   serves
      as the virtual destination of the tunnel and the virtual\n   location of service
      instances for the services carried by the tunnel.\n   The tunnel and services
      are considered as being \"associated\" with the\n   protected egress {E, P}.\n
      \  A given egress router E may be the tail end of multiple tunnels.  In\n   general,
      the tunnels may be protected by multiple protectors, e.g.,\n   P1, P2, and so
      on, with each Pi protecting a subset of the tunnels.\n   Thus, these routers
      form multiple protected egresses, i.e., {E, P1},\n   {E, P2}, and so on.  Each
      tunnel is associated with one and only one\n   protected egress {E, Pi}.  All
      the services carried by the tunnel are\n   then automatically associated with
      the protected egress {E, Pi}.\n   Conversely, a service associated with a protected
      egress {E, Pi} MUST\n   be carried by a tunnel associated with the protected
      egress {E, Pi}.\n   This mapping MUST be ensured by the ingress router of the
      tunnel and\n   the service (Section 5.5).\n   The two routers X and Y may be
      protectors for each other.  In this\n   case, they form two distinct protected
      egresses: {X, Y} and {Y, X}.\n"
    title: 5.4.  Protected Egress
  - contents:
    - "5.5.  Egress-Protected Tunnel and Service\n   A tunnel, which is associated
      with a protected egress {E, P}, is\n   called an egress-protected tunnel.  It
      is associated with one and\n   only one protected egress {E, P}.  Multiple egress-protected
      tunnels\n   may be associated with a given protected egress {E, P}.  In this\n
      \  case, they share the common egress router and protector, but they may\n   or
      may not share a common ingress router or a common PLR (i.e.,\n   penultimate
      hop router).\n   An egress-protected tunnel is considered as logically \"destined\"
      for\n   its protected egress {E, P}.  Its path MUST be resolved and\n   established
      with E as the physical tail end.\n   A service, which is associated with a protected
      egress {E, P}, is\n   called an egress-protected service.  Egress router E hosts
      the\n   primary instance of the service, and protector P hosts the protection\n
      \  instance of the service.\n   An egress-protected service is associated with
      one and only one\n   protected egress {E, P}.  Multiple egress-protected services
      may be\n   associated with a given protected egress {E, P}.  In this case, these\n
      \  services share the common egress router and protector, but they may\n   or
      may not be carried by a common egress-protected tunnel or a common\n   ingress
      router.\n   An egress-protected service MUST be mapped to an egress-protected\n
      \  tunnel by its ingress router, based on the common protected egress\n   {E,
      P} of the service and the tunnel.  This is achieved by\n   introducing the notion
      of a \"context ID\" for a protected egress {E,\n   P}, as described in Section
      5.7.\n"
    title: 5.5.  Egress-Protected Tunnel and Service
  - contents:
    - "5.6.  Egress-Protection Bypass Tunnel\n   An egress-protected tunnel destined
      for a protected egress {E, P}\n   MUST have a bypass tunnel from its PLR to
      protector P.  This bypass\n   tunnel is called an egress-protection bypass tunnel.
      \ The bypass\n   tunnel is considered as logically \"destined\" for the protected
      egress\n   {E, P}. Due to its bypass nature, it MUST be established with P as\n
      \  the physical tail end and E as the node to avoid.  The bypass tunnel\n   MUST
      NOT be affected by the topology change caused by an egress node\n   failure;
      thus, it MUST contain a property that protects it from this\n   scenario.\n
      \  An egress-protection bypass tunnel is associated with one and only\n   one
      protected egress {E, P}. A PLR may share an egress-protection\n   bypass tunnel
      for multiple egress-protected tunnels associated with a\n   common protected
      egress {E, P}.\n"
    title: 5.6.  Egress-Protection Bypass Tunnel
  - contents:
    - "5.7.  Context ID, Context Label, and Context-Based Forwarding\n   In this framework,
      a globally unique IPv4 or IPv6 address is assigned\n   as the identifier of
      the protected egress {E, P}. It is called a\n   \"context ID\" due to its specific
      usage in context label switching and\n   context IP forwarding on the protector.
      \ It is an IP address that is\n   logically owned by both the egress router
      and the protector.  For the\n   egress router, it indicates the protector.  For
      the protector, it\n   indicates the egress router, particularly the egress router's\n
      \  forwarding context.  For other routers in the network, it is an\n   address
      reachable via both the egress router and the protector\n   (Section 5.8), similar
      to an anycast address.\n   The main purpose of a context ID is to coordinate
      the ingress router,\n   egress router, PLR, and protector to establish egress
      protection.\n   The procedures are described below, given an egress-protected
      service\n   associated with a protected egress {E, P} with a context ID.\n   *
      \ If the service is an MPLS service, when E distributes a service\n      label
      binding message to the ingress router, E attaches the\n      context ID to the
      message.  If the service is an IP service, when\n      E advertises the service
      destination address to the ingress\n      router, E attaches the context ID
      to the advertisement message.\n      The service protocol chooses how the context
      ID is encoded in the\n      messages.  A protocol extension of a \"context ID\"
      object may be\n      needed, if there is no existing mechanism for this purpose.\n
      \  *  The ingress router uses the service's context ID as the\n      destination
      to establish or resolve an egress-protected tunnel.\n      The ingress router
      then maps the service to the tunnel for\n      transportation.  The semantics
      of the context ID is transparent to\n      the ingress router.  The ingress
      router only treats the context ID\n      as an IP address of E, in the same
      manner as establishing or\n      resolving a regular transport tunnel.\n   *
      \ The context ID is conveyed to the PLR by the signaling protocol of\n      the
      egress-protected tunnel or learned by the PLR via an IGP\n      (i.e., OSPF
      or IS-IS) or a topology-driven label distribution\n      protocol (e.g., LDP).
      \ The PLR uses the context ID as the\n      destination to establish or resolve
      an egress-protection bypass\n      tunnel to P while avoiding E.\n   *  P maintains
      a dedicated label space and a dedicated IP address\n      space for E.  They
      are referred to as \"E's label space\" and \"E's\n      IP address space\",
      respectively.  P uses the context ID to\n      identify the label space and
      IP address space.\n   *  If the service is an MPLS service, E also distributes
      the service\n      label binding message to P.  This is the same label binding\n
      \     message that E advertises to the ingress router, which includes\n      the
      context ID.  Based on the context ID, P installs the service\n      label in
      an MPLS forwarding table corresponding to E's label\n      space.  If the service
      is an IP service, P installs an IP route in\n      an IP forwarding table corresponding
      to E's IP address space.  In\n      either case, the protection service instance
      on P constructs the\n      forwarding state for the label route or IP route
      based on P's own\n      connectivity with the service's destination.\n   *  P
      assigns a non-reserved label to the context ID.  In the data\n      plane, this
      label represents the context ID and indicates E's\n      label space and IP
      address space.  Therefore, it is called a\n      \"context label\".\n   *  The
      PLR may establish the egress-protection bypass tunnel to P in\n      several
      manners.  If the bypass tunnel is established by RSVP, the\n      PLR signals
      the bypass tunnel with the context ID as the\n      destination, and P binds
      the context label to the bypass tunnel.\n      If the bypass tunnel is established
      by LDP, P advertises the\n      context label for the context ID as an IP prefix
      Forwarding\n      Equivalence Class (FEC).  If the bypass tunnel is established
      by\n      the PLR in a hierarchical manner, the PLR treats the context label\n
      \     as a one-hop LSP over a regular bypass tunnel to P (e.g., a bypass\n      tunnel
      to P's loopback IP address).  If the bypass tunnel is\n      constructed by
      using Segment Routing, the bypass tunnel is\n      represented by a stack of
      Segment Identifier (SID) labels with the\n      context label as the inner-most
      SID label (Section 5.9).  In any\n      case, the bypass tunnel is an ultimate
      hop-popping (UHP) tunnel\n      whose incoming label on P is the context label.\n
      \  *  During local repair, all the service packets received by P on the\n      bypass
      tunnel have the context label as the top label.  P first\n      pops the context
      label.  For an MPLS service packet, P looks up\n      the service label in E's
      label space indicated by the context\n      label.  Such kind of forwarding
      is called context label switching.\n      For an IP service packet, P looks
      up the IP destination address in\n      E's IP address space indicated by the
      context label.  Such kind of\n      forwarding is called context IP forwarding.\n"
    title: 5.7.  Context ID, Context Label, and Context-Based Forwarding
  - contents:
    - "5.8.  Advertisement and Path Resolution for Context ID\n   Path resolution
      and computation for a context ID are done on ingress\n   routers for egress-protected
      tunnels and on PLRs for egress-\n   protection bypass tunnels.  Given a protected
      egress {E, P} and its\n   context ID, E and P MUST coordinate on the reachability
      of the\n   context ID in the routing domain and the TE domain.  The context
      ID\n   MUST be advertised in such a manner that all egress-protected tunnels\n
      \  MUST have E as the tail end, and all egress-protection bypass tunnels\n   MUST
      have P as the tail end while avoiding E.\n   This document suggests three approaches:\n
      \     1.  The first approach is called \"proxy mode\".  It requires E and\n
      \         P, but not the PLR, to have the knowledge of the egress\n          protection
      schema.  E and P advertise the context ID as a\n          virtual proxy node
      (i.e., a logical node) connected to the two\n          routers, with the link
      between the proxy node and E having\n          more preferable IGP and TE metrics
      than the link between the\n          proxy node and P.  Therefore, all egress-protected
      tunnels\n          destined for the context ID will automatically follow the
      IGP\n          or TE paths to E.  Each PLR will no longer view itself as a\n
      \         penultimate hop but rather as two hops away from the proxy\n          node,
      via E.  The PLR will be able to find a bypass path via P\n          to the proxy
      node, while the bypass tunnel is actually\n          terminated by P.\n      2.
      \ The second approach is called \"alias mode\".  It requires P and\n          the
      PLR, but not E, to have the knowledge of the egress\n          protection schema.
      \ E simply advertises the context ID as an\n          IP address.  P advertises
      the context ID and the context label\n          by using a \"context ID label
      binding\" advertisement.  In both\n          the routing domain and TE domain,
      the context ID is only\n          reachable via E.  Therefore, all egress-protected
      tunnels\n          destined for the context ID will have E as the tail end.\n
      \         Based on the \"context ID label binding\" advertisement, the PLR\n
      \         can establish an egress-protection bypass tunnel in several\n          manners
      (Section 5.9).  The \"context ID label binding\"\n          advertisement is
      defined as the IGP Mirroring Context segment\n          in [RFC8402] and [RFC8667].
      \ These IGP extensions are generic\n          in nature and hence can be used
      for egress protection\n          purposes.  It is RECOMMENDED that a similar
      advertisement be\n          defined for OSPF as well.\n      3.  The third approach
      is called \"stub link mode\".  In this mode,\n          both E and P advertise
      the context ID as a link to a stub\n          network, essentially modeling
      the context ID as an anycast IP\n          address owned by the two routers.
      \ E, P, and the PLR do not\n          need to have the knowledge of the egress
      protection schema.\n          The correctness of the egress-protected tunnels
      and the bypass\n          tunnels relies on the path computations for the anycast
      IP\n          address performed by the ingress routers and PLR.  Therefore,\n
      \         care MUST be taken for the applicability of this approach to a\n          network.\n
      \  This framework considers the above approaches as technically equal\n   and
      the feasibility of each approach in a given network as dependent\n   on the
      topology, manageability, and available protocols of the\n   network.  For a
      given context ID, all relevant routers, including the\n   primary PE, protector,
      and PLR, MUST support and agree on the chosen\n   approach.  The coordination
      between these routers can be achieved by\n   configuration.\n   In a scenario
      where an egress-protected tunnel is an inter-area or\n   inter-Autonomous-System
      (inter-AS) tunnel, its associated context ID\n   MUST be propagated by IGP or
      BGP from the original area or AS to the\n   area or AS of the ingress router.
      \ The propagation process of the\n   context ID SHOULD be the same as that of
      an IP address in an inter-\n   area or inter-AS environment.\n"
    title: 5.8.  Advertisement and Path Resolution for Context ID
  - contents:
    - "5.9.  Egress-Protection Bypass Tunnel Establishment\n   A PLR MUST know the
      context ID of a protected egress {E, P} in order\n   to establish an egress-protection
      bypass tunnel.  The information is\n   obtained from the signaling or label
      distribution protocol of the\n   egress-protected tunnel.  The PLR may or may
      not need to have the\n   knowledge of the egress-protection schema.  All it
      does is set up a\n   bypass tunnel to a context ID while avoiding the next-hop
      router\n   (i.e., egress router).  This is achievable by using a constraint-\n
      \  based computation algorithm similar to those commonly used for\n   traffic
      engineering paths and Loop-Free Alternate (LFA) paths.  Since\n   the context
      ID is advertised in the routing domain and in the TE\n   domain by IGP according
      to Section 5.8, the PLR is able to resolve or\n   establish such a bypass path
      with the protector as the tail end.  In\n   the case of proxy mode, the PLR
      may do so in the same manner as\n   transit node protection.\n   An egress-protection
      bypass tunnel may be established via several\n   methods:\n      1.  It may
      be established by a signaling protocol (e.g., RSVP),\n          with the context
      ID as the destination.  The protector binds\n          the context label to
      the bypass tunnel.\n      2.  It may be formed by a topology-driven protocol
      (e.g., LDP with\n          various LFA mechanisms).  The protector advertises
      the context\n          ID as an IP prefix FEC, with the context label bound
      to it.\n      3.  It may be constructed as a hierarchical tunnel.  When the\n
      \         protector uses the alias mode (Section 5.8), the PLR will have\n          the
      knowledge of the context ID, context label, and protector\n          (i.e.,
      the advertiser).  The PLR can then establish the bypass\n          tunnel in
      a hierarchical manner, with the context label as a\n          one-hop LSP over
      a regular bypass tunnel to the protector's IP\n          address (e.g., loopback
      address).  This regular bypass tunnel\n          may be established by RSVP,
      LDP, Segment Routing, or another\n          protocol.\n"
    title: 5.9.  Egress-Protection Bypass Tunnel Establishment
  - contents:
    - "5.10.  Local Repair on PLR\n   In this framework, a PLR is agnostic to services
      and service labels.\n   This obviates the need to maintain bypass forwarding
      state on a per-\n   service basis and allows bypass tunnel sharing between egress-\n
      \  protected tunnels.  The PLR may share an egress-protection bypass\n   tunnel
      for multiple egress-protected tunnels associated with a common\n   protected
      egress {E, P}. During local repair, the PLR reroutes all\n   service packets
      received on the egress-protected tunnels to the\n   egress-protection bypass
      tunnel.  Service labels remain intact in\n   MPLS service packets.\n   Label
      operation performed by the PLR depends on the bypass tunnel's\n   characteristics.
      \ If the bypass tunnel is a single level tunnel, the\n   rerouting will involve
      swapping the incoming label of an egress-\n   protected tunnel to the outgoing
      label of the bypass tunnel.  If the\n   bypass tunnel is a hierarchical tunnel,
      the rerouting will involve\n   swapping the incoming label of an egress-protected
      tunnel to a\n   context label and pushing the outgoing label of a regular bypass\n
      \  tunnel.  If the bypass tunnel is constructed by Segment Routing, the\n   rerouting
      will involve swapping the incoming label of an egress-\n   protected tunnel
      to a context label and pushing the stack of SID\n   labels of the bypass tunnel.\n"
    title: 5.10.  Local Repair on PLR
  - contents:
    - "5.11.  Service Label Distribution from Egress Router to Protector\n   When
      a protector receives a rerouted MPLS service packet, it performs\n   context
      label switching based on the packet's service label, which is\n   assigned by
      the corresponding egress router.  In order to achieve\n   this, the protector
      MUST maintain the labels of egress-protected\n   services in dedicated label
      spaces on a per-protected-egress {E, P}\n   basis, i.e., one label space for
      each egress router that it protects.\n   Also, there MUST be a service label
      distribution protocol session\n   between each egress router and the protector.
      \ Through this protocol,\n   the protector learns the label binding of each
      egress-protected\n   service.  This is the same label binding that the egress
      router\n   advertises to the service's ingress router, which includes a context\n
      \  ID.  The corresponding protection service instance on the protector\n   recognizes
      the service and resolves forwarding state based on its own\n   connectivity
      with the service's destination.  It then installs the\n   service label with
      the forwarding state in the label space of the\n   egress router, which is indicated
      by the context ID (i.e., context\n   label).\n   Different service protocols
      may use different mechanisms for such\n   kind of label distribution.  Specific
      extensions may be needed on a\n   per-protocol or per-service-type basis.  The
      details of the\n   extensions should be specified in separate documents.  As
      an example,\n   the LDP extensions for pseudowire services are specified in\n
      \  [RFC8104].\n"
    title: 5.11.  Service Label Distribution from Egress Router to Protector
  - contents:
    - "5.12.  Centralized Protector Mode\n   In this framework, it is assumed that
      the service destination of an\n   egress-protected service MUST be dual-homed
      to two edge routers of an\n   MPLS network.  One of them is the protected egress
      router, and the\n   other is a backup egress router.  So far in this document,
      the focus\n   of discussion has been on the scenario where a protector and a
      backup\n   egress router are co-located as one router.  Therefore, the number
      of\n   protectors in a network is equal to the number of backup egress\n   routers.
      \ As another scenario, a network may assign a small number of\n   routers to
      serve as dedicated protectors, each protecting a subset of\n   egress routers.
      \ These protectors are called centralized protectors.\n   Topologically, a centralized
      protector may be decoupled from all\n   backup egress routers, or it may be
      co-located with one backup egress\n   router while decoupled from the other
      backup egress routers.  The\n   procedures in this section assume that a protector
      and a backup\n   egress router are decoupled.\n                  services 1,
      ..., N\n      I ------ R1 ------- PLR --------------- E ----\n   ingress          penultimate
      hop        egress    \\\n                          R2  . tunnel                      destinations\n
      \                          P ---------------- E' ---\n                       protector
      \       backup egress\n                      (protection         (backup\n                       service
      \            service\n                       instances)          instances)\n
      \  Like a co-located protector, a centralized protector hosts protection\n   service
      instances, receives rerouted service packets from PLRs, and\n   performs context
      label switching and/or context IP forwarding.  For\n   each service, instead
      of sending service packets directly to the\n   service destination, the protector
      MUST send them via another\n   transport tunnel to the corresponding backup
      service instance on a\n   backup egress router.  The backup service instance
      in turn forwards\n   the service packets to the service destination.  Specifically,
      if the\n   service is an MPLS service, the protector MUST swap the service label\n
      \  in each received service packet to the label of the backup service\n   advertised
      by the backup egress router, and then push the label (or\n   label stack) of
      the transport tunnel.\n   In order for a centralized protector to map an egress-protected
      MPLS\n   service to a service hosted on a backup egress router, there MUST be\n
      \  a service label distribution protocol session between the backup\n   egress
      router and the protector.  Through this session, the backup\n   egress router
      advertises the service label of the backup service,\n   attached with the FEC
      of the egress-protected service and the context\n   ID of the protected egress
      {E, P}. Based on this information, the\n   protector associates the egress-protected
      service with the backup\n   service, resolves or establishes a transport tunnel
      to the backup\n   egress router, and sets up forwarding state for the label
      of the\n   egress-protected service in the label space of the egress router.\n
      \  The service label that the backup egress router advertises to the\n   protector
      can be the same as the label that the backup egress router\n   advertises to
      the ingress router(s), if and only if the forwarding\n   state of the label
      does not direct service packets towards the\n   protected egress router.  Otherwise,
      the label MUST NOT be used for\n   egress protection, because it would create
      a loop for the service\n   packets.  In this case, the backup egress router
      MUST advertise a\n   unique service label for egress protection and set up the
      forwarding\n   state of the label to use the backup egress router's own connectivity\n
      \  with the service destination.\n"
    title: 5.12.  Centralized Protector Mode
  title: 5.  Egress Node Protection
- contents:
  - "6.  Egress Link Protection\n   Egress link protection is achievable through procedures
    similar to\n   that of egress node protection.  In normal situations, an egress\n
    \  router forwards service packets to a service destination based on a\n   service
    label, whose forwarding state points to an egress link.  In\n   egress link protection,
    the egress router acts as the PLR and\n   performs local failure detection and
    local repair.  Specifically, the\n   egress router pre-establishes an egress-protection
    bypass tunnel to a\n   protector and sets up the bypass forwarding state for the
    service\n   label to point to the bypass tunnel.  During local repair, the egress\n
    \  router reroutes service packets via the bypass tunnel to the\n   protector.
    \ The protector in turn forwards the packets to the service\n   destination (in
    the co-located protector mode, as shown in Figure 3)\n   or forwards the packets
    to a backup egress router (in the centralized\n   protector mode, as shown in
    Figure 4).\n                        service\n      I ------ R1 -------  R2 ---------------
    E ----\n   ingress                 |  ............. egress   \\\n                           R3
    --------------- P ----\n                        service\n      I ------ R1 -------
    \ R2 --------------- E ----\n   ingress                 |  ............. egress
    \  \\\n                           R3 --------------- P ----\n                       protector
    \       backup egress\n                      (protection      (backup\n                       service
    \         service\n                       instance)        instance)\n   There
    are two approaches for setting up the bypass forwarding state\n   on the egress
    router, depending on whether the egress router knows\n   the service label allocated
    by the backup egress router.  The\n   difference is that one approach requires
    the protector to perform\n   context label switching, and the other one does not.
    \ Both approaches\n   are equally supported by this framework.\n      1.  The
    first approach applies when the egress router does not\n          know the service
    label allocated by the backup egress router.\n          In this case, the egress
    router sets up the bypass forwarding\n          state as a label push with the
    outgoing label of the egress-\n          protection bypass tunnel.  Rerouted packets
    will have the\n          egress router's service label intact.  Therefore, the\n
    \         protector MUST perform context label switching, and the bypass\n          tunnel
    MUST be destined for the context ID of the protected\n          egress {E, P}
    and established as described in Section 5.9.\n          This approach is consistent
    with egress node protection.\n          Hence, a protector can serve in egress
    node protection and\n          egress link protection in a consistent manner,
    and both the\n          co-located protector mode and the centralized protector
    mode\n          are supported (see Figures 3 and 4).\n      2.  The second approach
    applies when the egress router knows the\n          service label allocated by
    the backup egress router, via a\n          label distribution protocol session.
    \ In this case, the backup\n          egress router serves as the protector for
    egress link\n          protection, regardless of the protector of egress node\n
    \         protection, which will be the same router in the co-located\n          protector
    mode but a different router in the centralized\n          protector mode.  The
    egress router sets up the bypass\n          forwarding state as a label swap from
    the incoming service\n          label to the service label of the backup egress
    router (i.e.,\n          protector), followed by a push with the outgoing label
    (or\n          label stack) of the egress link protection bypass tunnel.  The\n
    \         bypass tunnel is a regular tunnel destined for an IP address\n          of
    the protector, instead of the context ID of the protected\n          egress {E,
    P}. The protector simply forwards rerouted service\n          packets based on
    its own service label rather than performing\n          context label switching.
    \ In this approach, only the co-\n          located protector mode is applicable.\n
    \  Note that for a bidirectional service, the physical link of an egress\n   link
    may carry service traffic bidirectionally.  Therefore, an egress\n   link failure
    may simultaneously be an ingress link failure for the\n   traffic in the opposite
    direction.  Protection for ingress link\n   failure SHOULD be provided by a separate
    mechanism and hence is out\n   of the scope of this document.\n"
  title: 6.  Egress Link Protection
- contents:
  - "7.  Global Repair\n   This framework provides a fast but temporary repair for
    egress node\n   and egress link failures.  For permanent repair, the services\n
    \  affected by a failure SHOULD be moved to an alternative tunnel, or\n   replaced
    by alternative services, which are fully functional.  This\n   is referred to
    as global repair.  Possible triggers of global repair\n   include control-plane
    notifications of tunnel status and service\n   status, end-to-end OAM and fault
    detection at the tunnel and service\n   level, and others.  The alternative tunnel
    and services may be pre-\n   established in standby state or dynamically established
    as a result\n   of the triggers or network protocol convergence.\n"
  title: 7.  Global Repair
- contents:
  - "8.  Operational Considerations\n   When a PLR performs local repair, the router
    SHOULD generate an alert\n   for the event.  The alert may be logged locally for
    tracking\n   purposes, or it may be sent to the operator at a management station.\n
    \  The communication channel and protocol between the PLR and the\n   management
    station may vary depending on networks and are out of the\n   scope of this document.\n"
  title: 8.  Operational Considerations
- contents:
  - "9.  General Context-Based Forwarding\n   So far, this document has been focusing
    on the cases where service\n   packets are MPLS or IP packets, and protectors
    perform context label\n   switching or context IP forwarding.  Although this should
    cover most\n   common services, it is worth mentioning that the framework is also\n
    \  applicable to services or sub-modes of services where service packets\n   are
    Layer 2 packets or encapsulated in non-IP and non-MPLS formats.\n   The only specific
    in these cases is that a protector MUST perform\n   context-based forwarding based
    on the Layer 2 table or corresponding\n   lookup table, which is indicated by
    a context ID (i.e., context\n   label).\n"
  title: 9.  General Context-Based Forwarding
- contents:
  - "10.  Example: Layer 3 VPN Egress Protection\n   This section shows an example
    of egress protection for Layer 3 IPv4\n   and IPv6 VPNs.\n    (  site 1  )-- PE1
    <              |               R3    (  site 2  )\n   In this example, the core
    network is IPv4 and MPLS.  Both of the IPv4\n   and IPv6 VPNs consist of sites
    1 and 2.  Site 1 is connected to PE1,\n   and site 2 is dual-homed to PE2 and
    PE3.  Site 1 includes an IPv4\n   subnet 203.0.113.64/26 and an IPv6 subnet 2001:db8:1:1::/64.
    \ Site 2\n   includes an IPv4 subnet 203.0.113.128/26 and an IPv6 subnet\n   2001:db8:1:2::/64.
    \ PE2 is the primary PE for site 2, and PE3 is the\n   backup PE.  Each of PE1,
    PE2, and PE3 hosts an IPv4 VPN instance and\n   an IPv6 VPN instance.  The PEs
    use BGP to exchange VPN prefixes and\n   VPN labels between each other.  In the
    core network, R1 and R2 are\n   transit routers, OSPF is used as the routing protocol,
    and RSVP-TE is\n   used as the tunnel signaling protocol.\n   Using the framework
    in this document, the network assigns PE3 to be\n   the protector of PE2 to protect
    the VPN traffic in the direction from\n   site 1 to site 2.  This is the co-located
    protector mode.  PE2 and\n   PE3 form a protected egress {PE2, PE3}. Context ID
    198.51.100.1 is\n   assigned to the protected egress {PE2, PE3}. (If the core
    network is\n   IPv6, the context ID would be an IPv6 address.)  The IPv4 and IPv6\n
    \  VPN instances on PE3 serve as protection instances for the\n   corresponding
    VPN instances on PE2.  On PE3, context label 100 is\n   assigned to the context
    ID, and a label table pe2.mpls is created to\n   represent PE2's label space.
    \ PE3 installs label 100 in its MPLS\n   forwarding table, with the next hop pointing
    to the label table\n   pe2.mpls.  PE2 and PE3 are coordinated to use the proxy
    mode to\n   advertise the context ID in the routing domain and the TE domain.\n
    \  PE2 uses the label allocation mode per Virtual Routing and Forwarding\n   (VRF)
    for both of its IPv4 and IPv6 VPN instances.  It assigns label\n   9000 to the
    IPv4 VRF, and label 9001 to the IPv6 VRF.  For the IPv4\n   prefix 203.0.113.128/26
    in site 2, PE2 advertises it with label 9000\n   and NEXT_HOP 198.51.100.1 to
    PE1 and PE3 via BGP.  Likewise, for the\n   IPv6 prefix 2001:db8:1:2::/64 in site
    2, PE2 advertises it with label\n   9001 and NEXT_HOP 198.51.100.1 to PE1 and
    PE3 via BGP.\n   PE3 also uses per-VRF VPN label allocation mode for both of its
    IPv4\n   and IPv6 VPN instances.  It assigns label 10000 to the IPv4 VRF and\n
    \  label 10001 to the IPv6 VRF.  For the prefix 203.0.113.128/26 in site\n   2,
    PE3 advertises it with label 10000 and NEXT_HOP as itself to PE1\n   and PE2 via
    BGP.  For the IPv6 prefix 2001:db8:1:2::/64 in site 2,\n   PE3 advertises it with
    label 10001 and NEXT_HOP as itself to PE1 and\n   PE2 via BGP.\n   Upon receipt
    of the above BGP advertisements from PE2, PE1 uses the\n   context ID 198.51.100.1
    as the destination to compute a path for an\n   egress-protected tunnel.  The
    resultant path is PE1->R1->PE2.  PE1\n   then uses RSVP to signal the tunnel,
    with the context ID 198.51.100.1\n   as the destination, with the \"node protection
    desired\" flag set in\n   the SESSION_ATTRIBUTE of the RSVP Path message.  Once
    the tunnel\n   comes up, PE1 maps the VPN prefixes 203.0.113.128/26 and\n   2001:db8:1:2::/64
    to the tunnel and installs a route for each prefix\n   in the corresponding IPv4
    or IPv6 VRF.  The next hop of route\n   203.0.113.128/26 is a push of the VPN
    label 9000, followed by a push\n   of the outgoing label of the egress-protected
    tunnel.  The next hop\n   of route 2001:db8:1:2::/64 is a push of the VPN label
    9001, followed\n   by a push of the outgoing label of the egress-protected tunnel.\n
    \  Upon receipt of the above BGP advertisements from PE2, PE3 recognizes\n   the
    context ID 198.51.100.1 in the NEXT_HOP attribute and installs a\n   route for
    label 9000 and a route for label 9001 in the label table\n   pe2.mpls.  PE3 sets
    the next hop of route 9000 to the IPv4 protection\n   VRF and the next hop of
    route 9001 to the IPv6 protection VRF.  The\n   IPv4 protection VRF contains the
    routes to the IPv4 prefixes in site\n   2.  The IPv6 protection VRF contains the
    routes to the IPv6 prefixes\n   in site 2.  The next hops of these routes must
    be based on PE3's\n   connectivity with site 2, even if the connectivity may not
    have the\n   best metrics (e.g., Multi-Exit Discriminator (MED), local preference,\n
    \  etc.) to be used in PE3's own VRF.  The next hops must not use any\n   path
    traversing PE2.  Note that the protection VRFs are a logical\n   concept, and
    they may simply be PE3's own VRFs if they satisfy the\n   requirement.\n"
  - contents:
    - "10.1.  Egress Node Protection\n   R1, i.e., the penultimate hop router of the
      egress-protected tunnel,\n   serves as the PLR for egress node protection.  Based
      on the \"node\n   protection desired\" flag and the destination address (i.e.,
      context\n   ID 198.51.100.1) of the tunnel, R1 computes a bypass path to\n   198.51.100.1
      while avoiding PE2.  The resultant bypass path is\n   R1->R2->PE3.  R1 then
      signals the path (i.e., egress-protection\n   bypass tunnel), with 198.51.100.1
      as the destination.\n   Upon receipt of an RSVP Path message of the egress-protection
      bypass\n   tunnel, PE3 recognizes the context ID 198.51.100.1 as the destination\n
      \  and responds with context label 100 in an RSVP Resv message.\n   After the
      egress-protection bypass tunnel comes up, R1 installs a\n   bypass next hop
      for the egress-protected tunnel.  The bypass next hop\n   is a label swap from
      the incoming label of the egress-protected\n   tunnel to the outgoing label
      of the egress-protection bypass tunnel.\n   When R1 detects a failure of PE2,
      it will invoke the above bypass\n   next hop to reroute VPN packets.  Each IPv4
      VPN packet will have the\n   label of the bypass tunnel as outer label, and
      the IPv4 VPN label\n   9000 as inner label.  Each IPv6 VPN packet will have
      the label of the\n   bypass tunnel as the outer label and the IPv6 VPN label
      9001 as the\n   inner label.  When the packets arrive at PE3, they will have
      the\n   context label 100 as the outer label and the VPN label 9000 or 9001\n
      \  as the inner label.  The context label will first be popped, and then\n   the
      VPN label will be looked up in the label table pe2.mpls.  The\n   lookup will
      cause the VPN label to be popped and the IPv4 and IPv6\n   packets to be forwarded
      to site 2 based on the IPv4 and IPv6\n   protection VRFs, respectively.\n"
    title: 10.1.  Egress Node Protection
  - contents:
    - "10.2.  Egress Link Protection\n   PE2 serves as the PLR for egress link protection.
      \ It has already\n   learned PE3's IPv4 VPN label 10000 and IPv6 VPN label 10001.
      \ Hence,\n   it uses approach (2) as described in Section 6 to set up the bypass\n
      \  forwarding state.  It signals an egress-protection bypass tunnel to\n   PE3,
      by using the path PE2->R3->PE3, and PE3's IP address as the\n   destination.
      \ After the bypass tunnel comes up, PE2 installs a bypass\n   next hop for the
      IPv4 VPN label 9000 and a bypass next hop for the\n   IPv6 VPN label 9001.  For
      label 9000, the bypass next hop is a label\n   swap to label 10000, followed
      by a label push with the outgoing label\n   of the bypass tunnel.  For label
      9001, the bypass next hop is a label\n   swap to label 10001, followed by a
      label push with the outgoing label\n   of the bypass tunnel.\n   When PE2 detects
      a failure of the egress link, it will invoke the\n   above bypass next hop to
      reroute VPN packets.  Each IPv4 VPN packet\n   will have the label of the bypass
      tunnel as the outer label and label\n   10000 as the inner label.  Each IPv6
      VPN packet will have the label\n   of the bypass tunnel as the outer label and
      label 10001 as the inner\n   label.  When the packets arrive at PE3, the VPN
      label 10000 or 10001\n   will be popped, and the exposed IPv4 and IPv6 packets
      will be\n   forwarded based on PE3's IPv4 and IPv6 VRFs, respectively.\n"
    title: 10.2.  Egress Link Protection
  - contents:
    - "10.3.  Global Repair\n   Eventually, global repair will take effect, as control-plane\n
      \  protocols converge on the new topology.  PE1 will choose PE3 as a new\n   entrance
      to site 2.  Before that happens, the VPN traffic has been\n   protected by the
      above local repair.\n"
    title: 10.3.  Global Repair
  - contents:
    - "10.4.  Other Modes of VPN Label Allocation\n   It is also possible that PE2
      may use per-route or per-interface VPN\n   label allocation mode.  In either
      case, PE3 will have multiple VPN\n   label routes in the pe2.mpls table, corresponding
      to the VPN labels\n   advertised by PE2.  PE3 forwards rerouted packets by popping
      a VPN\n   label and performing an IP lookup in the corresponding protection\n
      \  VRF.  PE3's forwarding behavior is consistent with the above case\n   where
      PE2 uses per-VRF VPN label allocation mode.  PE3 does not need\n   to know PE2's
      VPN label allocation mode or construct a specific next\n   hop for each VPN
      label route in the pe2.mpls table.\n"
    title: 10.4.  Other Modes of VPN Label Allocation
  title: '10.  Example: Layer 3 VPN Egress Protection'
- contents:
  - "11.  IANA Considerations\n   This document has no IANA actions.\n"
  title: 11.  IANA Considerations
- contents:
  - "12.  Security Considerations\n   The framework in this document involves rerouting
    traffic around an\n   egress node or link failure, via a bypass path from a PLR
    to a\n   protector, and ultimately to a backup egress router.  The forwarding\n
    \  performed by the routers in the data plane is anticipated, as part of\n   the
    planning of egress protection.\n   Control-plane protocols MAY be used to facilitate
    the provisioning of\n   the egress protection on the routers.  In particular,
    the framework\n   requires a service label distribution protocol between an egress\n
    \  router and a protector over a secure session.  The security\n   properties
    of this provisioning and label distribution depend\n   entirely on the underlying
    protocol chosen to implement these\n   activities.  Their associated security
    considerations apply.  This\n   framework introduces no new security requirements
    or guarantees\n   relative to these activities.\n   Also, the PLR, protector,
    and backup egress router are located close\n   to the protected egress router,
    which is normally in the same\n   administrative domain.  If they are not in the
    same administrative\n   domain, a certain level of trust MUST be established between
    them in\n   order for the protocols to run securely across the domain boundary.\n
    \  The basis of this trust is the security model of the protocols (as\n   described
    above), and further security considerations for inter-\n   domain scenarios should
    be addressed by the protocols as a common\n   requirement.\n   Security attacks
    may sometimes come from a customer domain.  Such\n   attacks are not introduced
    by the framework in this document and may\n   occur regardless of the existence
    of egress protection.  In one\n   possible case, the egress link between an egress
    router and a CE\n   could become a point of attack.  An attacker that gains control
    of\n   the CE might use it to simulate link failures and trigger constant\n   and
    cascading activities in the network.  If egress link protection\n   is in place,
    egress link protection activities may also be triggered.\n   As a general solution
    to defeat the attack, a damping mechanism\n   SHOULD be used by the egress router
    to promptly suppress the services\n   associated with the link or CE.  The egress
    router would stop\n   advertising the services, essentially detaching them from
    the network\n   and eliminating the effect of the simulated link failures.\n   From
    the above perspectives, this framework does not introduce any\n   new security
    threat to networks.\n"
  title: 12.  Security Considerations
- contents:
  - '13.  References

    '
  - contents:
    - "13.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8402]  Filsfils, C., Ed.,
      Previdi, S., Ed., Ginsberg, L.,\n              Decraene, B., Litkowski, S.,
      and R. Shakir, \"Segment\n              Routing Architecture\", RFC 8402, DOI
      10.17487/RFC8402,\n              July 2018, <https://www.rfc-editor.org/info/rfc8402>.\n
      \  [RFC8667]  Previdi, S., Ginsberg, L., Filsfils, C., Bashandy, A.,\n              Gredler,
      H., and B. Decraene, \"IS-IS Extensions for\n              Segment Routing\",
      RFC 8667, DOI 10.17487/RFC8667, December\n              2019, <https://www.rfc-editor.org/info/rfc8667>.\n"
    title: 13.1.  Normative References
  - contents:
    - "13.2.  Informative References\n   [BGP-PIC]  Bashandy, A., Filsfils, C., and
      P. Mohapatra, \"BGP Prefix\n              Independent Convergence\", Work in
      Progress, Internet-\n              Draft, draft-ietf-rtgwg-bgp-pic-10, 2 October
      2019,\n              <https://tools.ietf.org/html/draft-ietf-rtgwg-bgp-pic-10>.\n
      \  [RFC4090]  Pan, P., Ed., Swallow, G., Ed., and A. Atlas, Ed., \"Fast\n              Reroute
      Extensions to RSVP-TE for LSP Tunnels\", RFC 4090,\n              DOI 10.17487/RFC4090,
      May 2005,\n              <https://www.rfc-editor.org/info/rfc4090>.\n   [RFC5286]
      \ Atlas, A., Ed. and A. Zinin, Ed., \"Basic Specification for\n              IP
      Fast Reroute: Loop-Free Alternates\", RFC 5286,\n              DOI 10.17487/RFC5286,
      September 2008,\n              <https://www.rfc-editor.org/info/rfc5286>.\n
      \  [RFC7490]  Bryant, S., Filsfils, C., Previdi, S., Shand, M., and N.\n              So,
      \"Remote Loop-Free Alternate (LFA) Fast Reroute (FRR)\",\n              RFC
      7490, DOI 10.17487/RFC7490, April 2015,\n              <https://www.rfc-editor.org/info/rfc7490>.\n
      \  [RFC7812]  Atlas, A., Bowers, C., and G. Enyedi, \"An Architecture for\n
      \             IP/LDP Fast Reroute Using Maximally Redundant Trees (MRT-\n              FRR)\",
      RFC 7812, DOI 10.17487/RFC7812, June 2016,\n              <https://www.rfc-editor.org/info/rfc7812>.\n
      \  [RFC8104]  Shen, Y., Aggarwal, R., Henderickx, W., and Y. Jiang,\n              \"Pseudowire
      (PW) Endpoint Fast Failure Protection\",\n              RFC 8104, DOI 10.17487/RFC8104,
      March 2017,\n              <https://www.rfc-editor.org/info/rfc8104>.\n   [RFC8400]
      \ Chen, H., Liu, A., Saad, T., Xu, F., and L. Huang,\n              \"Extensions
      to RSVP-TE for Label Switched Path (LSP)\n              Egress Protection\",
      RFC 8400, DOI 10.17487/RFC8400, June\n              2018, <https://www.rfc-editor.org/info/rfc8400>.\n"
    title: 13.2.  Informative References
  title: 13.  References
- contents:
  - "Acknowledgements\n   This document leverages work done by Yakov Rekhter, Kevin
    Wang, and\n   Zhaohui Zhang on MPLS egress protection.  Thanks to Alexander\n
    \  Vainshtein, Rolf Winter, Lizhong Jin, Krzysztof Szarkowicz, Roman\n   Danyliw,
    and Yuanlong Jiang for their valuable comments that helped\n   to shape this document
    and improve its clarity.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Yimin Shen\n   Juniper Networks\n   10 Technology Park
    Drive\n   Westford, MA 01886\n   United States of America\n   Phone: +1 978 589
    0722\n   Email: yshen@juniper.net\n   Minto Jeyananth\n   Juniper Networks\n   1133
    Innovation Way\n   Sunnyvale, CA 94089\n   United States of America\n   Phone:
    +1 408 936 7563\n   Email: minto@juniper.net\n   Bruno Decraene\n   Orange\n   Email:
    bruno.decraene@orange.com\n   Hannes Gredler\n   RtBrick Inc.\n   Email: hannes@rtbrick.com\n
    \  Carsten Michel\n   Deutsche Telekom\n   Email: c.michel@telekom.de\n   Huaimo
    Chen\n   Futurewei\n   Boston, MA\n"
  title: Authors' Addresses
