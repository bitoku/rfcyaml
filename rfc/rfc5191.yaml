- title: __initial_text__
  contents:
  - '     Protocol for Carrying Authentication for Network Access (PANA)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the Protocol for Carrying Authentication for\n\
    \   Network Access (PANA), a network-layer transport for Extensible\n   Authentication\
    \ Protocol (EAP) to enable network access authentication\n   between clients and\
    \ access networks.  In EAP terms, PANA is a\n   UDP-based EAP lower layer that\
    \ runs between the EAP peer and the EAP\n   authenticator.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Specification of Requirements ..............................4\n  \
    \ 2. Terminology .....................................................4\n   3.\
    \ Protocol Overview ...............................................6\n   4. Protocol\
    \ Details ................................................7\n      4.1. Authentication\
    \ and Authorization Phase .....................7\n      4.2. Access Phase ..............................................11\n\
    \      4.3. Re-Authentication Phase ...................................11\n  \
    \    4.4. Termination Phase .........................................13\n   5.\
    \ Processing Rules ...............................................13\n      5.1.\
    \ Fragmentation .............................................13\n      5.2. Sequence\
    \ Number and Retransmission ........................14\n      5.3. PANA Security\
    \ Association .................................15\n      5.4. Message Authentication\
    \ ....................................17\n      5.5. Message Validity Check ....................................17\n\
    \      5.6. PaC Updating Its IP Address ...............................19\n  \
    \    5.7. Session Lifetime ..........................................19\n   6.\
    \ Message Format .................................................20\n      6.1.\
    \ IP and UDP Headers ........................................20\n      6.2. PANA\
    \ Message Header .......................................20\n      6.3. AVP Format\
    \ ................................................22\n   7. PANA Messages ..................................................24\n\
    \      7.1. PANA-Client-Initiation (PCI) ..............................27\n  \
    \    7.2. PANA-Auth-Request (PAR) ...................................28\n    \
    \  7.3. PANA-Auth-Answer (PAN) ....................................28\n      7.4.\
    \ PANA-Termination-Request (PTR) ............................28\n      7.5. PANA-Termination-Answer\
    \ (PTA) .............................29\n      7.6. PANA-Notification-Request\
    \ (PNR) ...........................29\n      7.7. PANA-Notification-Answer (PNA)\
    \ ............................29\n   8. AVPs in PANA ...................................................29\n\
    \      8.1. AUTH AVP ..................................................30\n  \
    \    8.2. EAP-Payload AVP ...........................................30\n    \
    \  8.3. Integrity-Algorithm AVP ...................................31\n      8.4.\
    \ Key-Id AVP ................................................31\n      8.5. Nonce\
    \ AVP .................................................31\n      8.6. PRF-Algorithm\
    \ AVP .........................................32\n      8.7. Result-Code AVP\
    \ ...........................................32\n      8.8. Session-Lifetime AVP\
    \ ......................................32\n      8.9. Termination-Cause AVP .....................................33\n\
    \   9. Retransmission Timers ..........................................33\n  \
    \    9.1. Transmission and Retransmission Parameters ................35\n   10.\
    \ IANA Considerations ...........................................35\n      10.1.\
    \ PANA UDP Port Number .....................................36\n      10.2. PANA\
    \ Message Header ......................................36\n           10.2.1.\
    \ Message Type ......................................36\n           10.2.2. Flags\
    \ .............................................36\n      10.3. AVP Header ...............................................36\n\
    \           10.3.1. AVP Code ..........................................37\n  \
    \         10.3.2. Flags .............................................37\n    \
    \  10.4. AVP Values ...............................................37\n      \
    \     10.4.1. Result-Code AVP Values ............................37\n        \
    \   10.4.2. Termination-Cause AVP Values ......................38\n   11. Security\
    \ Considerations .......................................38\n      11.1. General\
    \ Security Measures ................................38\n      11.2. Initial Exchange\
    \ .........................................40\n      11.3. EAP Methods ..............................................40\n\
    \      11.4. Cryptographic Keys .......................................40\n  \
    \    11.5. Per-Packet Ciphering .....................................41\n    \
    \  11.6. PAA-to-EP Communication ..................................41\n      11.7.\
    \ Liveness Test ............................................41\n      11.8. Early\
    \ Termination of a Session ...........................42\n   12. Acknowledgments\
    \ ...............................................42\n   13. References ....................................................42\n\
    \      13.1. Normative References .....................................42\n  \
    \    13.2. Informative References ...................................43\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Providing secure network access service requires access\
    \ control based\n   on the authentication and authorization of the clients and\
    \ the access\n   networks.  Client-to-network authentication provides parameters\
    \ that\n   are needed to police the traffic flow through the enforcement points.\n\
    \   A protocol is needed to carry authentication methods between the\n   client\
    \ and the access network.\n   The scope of this work is identified as designing\
    \ a network-layer\n   transport for network access authentication methods.  The\
    \ Extensible\n   Authentication Protocol (EAP) [RFC3748] provides such authentication\n\
    \   methods.  In other words, PANA carries EAP, which can carry various\n   authentication\
    \ methods.  By the virtue of enabling the transport of\n   EAP above IP, any authentication\
    \ method that can be carried as an EAP\n   method is made available to PANA and\
    \ hence to any link-layer\n   technology.  There is a clear division of labor\
    \ between PANA (an EAP\n   lower layer), EAP, and EAP methods as described in\
    \ [RFC3748].\n   Various environments and usage models for PANA are identified\
    \ in\n   Appendix A of [RFC4058].  Potential security threats for\n   network-layer\
    \ access authentication protocol are discussed in\n   [RFC4016].  These have been\
    \ essential in defining the requirements\n   [RFC4058] of the PANA protocol. \
    \ Note that some of these requirements\n   are imposed by the chosen payload,\
    \ EAP [RFC3748].\n   There are components that are part of a complete secure network\n\
    \   access solution but are outside of the PANA protocol specification,\n   including\
    \ PANA Authentication Agent (PAA) discovery, authentication\n   method choice,\
    \ PANA Authentication Agent-Enforcement Point (PAA-EP)\n   protocol, access control\
    \ filter creation, and data traffic\n   protection.  These components are described\
    \ in separate documents\n   (see [RFC5193] and [RFC5192]).\n"
- title: 1.1.  Specification of Requirements
  contents:
  - "1.1.  Specification of Requirements\n   In this document, several words are used\
    \ to signify the requirements\n   of the specification.  These words are often\
    \ capitalized.  The key\n   words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\", \"SHOULD\",\n   \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this document\n   are to be interpreted as described in [RFC2119].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   PANA Client (PaC):\n      The client side of the protocol\
    \ that resides in the access device\n      (e.g., laptop, PDA, etc.).  It is responsible\
    \ for providing the\n      credentials in order to prove its identity (authentication)\
    \ for\n      network access authorization.  The PaC and the EAP peer are\n   \
    \   colocated in the same access device.\n   PANA Authentication Agent (PAA):\n\
    \      The protocol entity in the access network whose responsibility it\n   \
    \   is to verify the credentials provided by a PANA client (PaC) and\n      authorize\
    \ network access to the access device.  The PAA and the\n      EAP authenticator\
    \ (and optionally the EAP server) are colocated in\n      the same node.  Note\
    \ the authentication and authorization\n      procedure can, according to the\
    \ EAP model, also be offloaded to\n      the back end Authentication, Authorization,\
    \ and Accounting (AAA)\n      infrastructure.\n   PANA Session:\n      A PANA\
    \ session is established between the PANA Client (PaC) and\n      the PANA Authentication\
    \ Agent (PAA), and it terminates as a result\n      of an authentication and authorization\
    \ or liveness test failure, a\n      message delivery failure after retransmissions\
    \ reach maximum\n      values, session lifetime expiration, an explicit termination\n\
    \      message or any event that causes discontinuation of the access\n      service.\
    \  A fixed session identifier is maintained throughout a\n      session.  A session\
    \ cannot be shared across multiple network\n      interfaces.\n   Session Lifetime:\n\
    \      A duration that is associated with a PANA session.  For an\n      established\
    \ PANA session, the session lifetime is bound to the\n      lifetime of the current\
    \ authorization given to the PaC.  The\n      session lifetime can be extended\
    \ by a new round of EAP\n      authentication before it expires.  Until a PANA\
    \ session is\n      established, the lifetime SHOULD be set to a value that allows\
    \ the\n      PaC to detect a failed session in a reasonable amount of time.\n\
    \   Session Identifier:\n      This identifier is used to uniquely identify a\
    \ PANA session on the\n      PaC and the PAA.  It is included in PANA messages\
    \ to bind the\n      message to a specific PANA session.  This bidirectional identifier\n\
    \      is allocated by the PAA in the initial request message and freed\n    \
    \  when the session terminates.  The session identifier is assigned\n      by\
    \ the PAA and is unique within the PAA.\n   PANA Security Association (PANA SA):\n\
    \      A PANA security association is formed between the PaC and the PAA\n   \
    \   by sharing cryptographic keying material and associated context.\n      The\
    \ formed duplex security association is used to protect the\n      bidirectional\
    \ PANA signaling traffic between the PaC and PAA.\n   Enforcement Point (EP):\n\
    \      A node on the access network where per-packet enforcement policies\n  \
    \    (i.e., filters) are applied on the inbound and outbound traffic of\n    \
    \  access devices.  The EP and the PAA may be colocated.  EPs should\n      prevent\
    \ data traffic from and to any unauthorized client, unless\n      that data traffic\
    \ is either PANA or one of the other allowed\n      traffic types (e.g., Address\
    \ Resolution Protocol (ARP), IPv6\n      neighbor discovery, DHCP, etc.).\n  \
    \ Master Session Key (MSK):\n      A key derived by the EAP peer and the EAP server\
    \ and transported\n      to the EAP authenticator [RFC3748].\n   For additional\
    \ terminology definitions, see the PANA framework\n   document [RFC5193].\n"
- title: 3.  Protocol Overview
  contents:
  - "3.  Protocol Overview\n   The PANA protocol is run between a client (PaC) and\
    \ a server (PAA) in\n   order to perform authentication and authorization for\
    \ the network\n   access service.\n   The protocol messaging consists of a series\
    \ of requests and answers,\n   some of which may be initiated by either end. \
    \ Each message can carry\n   zero or more AVPs (Attribute-Value Pairs) within\
    \ the payload.  The\n   main payload of PANA is EAP, which performs authentication.\
    \  PANA\n   helps the PaC and PAA establish an EAP session.\n   PANA is a UDP-based\
    \ protocol.  It has its own retransmission\n   mechanism to reliably deliver messages.\n\
    \   PANA messages are sent between the PaC and PAA as part of a PANA\n   session.\
    \  A PANA session consists of distinct phases:\n   o  Authentication and authorization\
    \ phase: This is the phase that\n      initiates a new PANA session and executes\
    \ EAP between the PAA and\n      PaC.  The PANA session can be initiated by both\
    \ the PaC and the\n      PAA.  The EAP payload (which carries an EAP method inside)\
    \ is what\n      is used for authentication.  The PAA conveys the result of\n\
    \      authentication and authorization to the PaC at the end of this\n      phase.\n\
    \   o  Access phase: After successful authentication and authorization,\n    \
    \  the access device gains access to the network and can send and\n      receive\
    \ IP traffic through the EP(s).  At any time during this\n      phase, the PaC\
    \ and PAA may optionally send PANA notification\n      messages to test liveness\
    \ of the PANA session on the peer.\n   o  Re-authentication phase: During the\
    \ access phase, the PAA may, and\n      the PaC should, initiate re-authentication\
    \ if they want to update\n      the PANA session lifetime before the PANA session\
    \ lifetime\n      expires.  EAP is carried by PANA to perform re-authentication.\n\
    \      This phase may be optionally triggered by both the PaC and the PAA\n  \
    \    without any respect to the session lifetime.  The\n      re-authentication\
    \ phase is a sub-phase of the access phase.  The\n      session moves to this\
    \ sub-phase from the access phase when\n      re-authentication starts, and returns\
    \ back there upon successful\n      re-authentication.\n   o  Termination phase:\
    \ The PaC or PAA may choose to discontinue the\n      access service at any time.\
    \  An explicit disconnect message can be\n      sent by either end.  If either\
    \ the PaC or the PAA disconnects\n      without engaging in termination messaging,\
    \ it is expected that\n      either the expiration of a finite session lifetime\
    \ or failed\n      liveness tests would clean up the session at the other end.\n\
    \   Cryptographic protection of messages between the PaC and PAA is\n   possible\
    \ as soon as EAP in conjunction with the EAP method exports a\n   shared key.\
    \  That shared key is used to create a PANA SA.  The PANA\n   SA helps generate\
    \ per-message authentication codes that provide\n   integrity protection and authentication.\n"
- title: 4.  Protocol Details
  contents:
  - "4.  Protocol Details\n   The following sections explain in detail the various\
    \ phases of a PANA\n   session.\n"
- title: 4.1.  Authentication and Authorization Phase
  contents:
  - "4.1.  Authentication and Authorization Phase\n   The main task of the authentication\
    \ and authorization phase is to\n   establish a PANA session and carry EAP messages\
    \ between the PaC and\n   the PAA.  The PANA session can be initiated by either\
    \ the PaC or the\n   PAA.\n   PaC-initiated Session:\n      When the PaC initiates\
    \ a PANA session, it sends a\n      PANA-Client-Initiation message to the PAA.\
    \  When the PaC is not\n      configured with an IP address of the PAA before\
    \ initiating the\n      PANA session, DHCP [RFC5192] is used as the default method\
    \ for\n      dynamically configuring the IP address of the PAA.  Alternative\n\
    \      methods for dynamically discovering the IP address of the PAA may\n   \
    \   be used for PaC-initiated sessions, but they are outside the scope\n     \
    \ of this specification.  The PAA that receives the\n      PANA-Client-Initiation\
    \ message MUST respond to the PaC with a\n      PANA-Auth-Request message.\n \
    \  PAA-initiated Session:\n      When the PAA knows the IP address of the PaC,\
    \ it MAY send an\n      unsolicited PANA-Auth-Request to the PaC.  The details\
    \ of how PAA\n      can learn the IP address of the PaC are outside the scope\
    \ of this\n      specification.\n   A session identifier for the session is assigned\
    \ by the PAA and\n   carried in the initial PANA-Auth-Request message.  The same\
    \ session\n   identifier MUST be carried in the subsequent messages exchanged\n\
    \   between the PAA and PaC throughout the session.\n   When the PaC receives\
    \ the initial PANA-Auth-Request message from a\n   PAA, it responds with a PANA-Auth-Answer\
    \ message, if it wishes to\n   continue the PANA session.  Otherwise, it silently\
    \ discards the\n   PANA-Auth-Request message.\n   The initial PANA-Auth-Request\
    \ and PANA-Auth-Answer messages MUST have\n   the 'S' (Start) bit set, regardless\
    \ of whether the session is\n   initiated by the PaC or the PAA.  Non-initial\
    \ PANA-Auth-Request and\n   PANA-Auth-Answer messages as well as any other messages\
    \ MUST NOT have\n   the 'S' (Start) bit set.\n   It is recommended that the PAA\
    \ limit the rate at which it processes\n   incoming PANA-Client-Initiation messages\
    \ to provide robustness\n   against denial of service (DoS) attacks.  The details\
    \ of rate\n   limiting are outside the scope of this specification.\n   If a PANA\
    \ SA needs to be established with use of a key-generating EAP\n   method, the\
    \ Pseudo-Random Function (PRF) and integrity algorithms to\n   be used for PANA_AUTH_KEY\
    \ derivation (see Section 5.3) and AUTH AVP\n   calculation (see Section 5.4)\
    \ are negotiated as follows: the PAA\n   sends the initial PANA-Auth-Request carrying\
    \ one or more\n   PRF-Algorithm AVPs and one or more Integrity-Algorithm AVPs\
    \ for the\n   PRF and integrity algorithms supported by it, respectively.  The\
    \ PaC\n   then selects one PRF algorithm and one integrity algorithm from these\n\
    \   AVPs carried in the initial PANA-Auth-Request, and it responds with\n   the\
    \ initial PANA-Auth-Answer carrying one PRF-Algorithm AVP and one\n   Integrity-Algorithm\
    \ AVP for the selected algorithms.  The negotiation\n   is protected after the\
    \ MSK is available, as described in Section 5.3.\n   If the PAA wants to stay\
    \ stateless in response to a\n   PANA-Client-Initiation message, it doesn't include\
    \ an EAP-Payload AVP\n   in the initial PANA-Auth-Request message, and it should\
    \ not\n   retransmit the message on a timer.  For this reason, the PaC MUST\n\
    \   retransmit the PANA-Client-Initiation message until it receives the\n   second\
    \ PANA-Auth-Request message (not a retransmission of the initial\n   one) from\
    \ the PAA.\n   It is possible that both the PAA and the PaC initiate the PANA\n\
    \   session at the same time, i.e., the PAA sends the initial PANA-Auth-\n   Request\
    \ message without solicitation while the PaC sends a\n   PANA-Client-Initiation\
    \ message.  To resolve the race condition, the\n   PAA MUST silently discard the\
    \ PANA-Client-Initiation message received\n   from the PaC after it has sent the\
    \ initial PANA-Auth-Request message.\n   The PAA uses the source IP address and\
    \ the source port number of the\n   PANA-Client-Initiation message to identify\
    \ the PaC among multiple\n   PANA-Client-Initiation messages sent from different\
    \ PaCs.\n   EAP messages are carried in PANA-Auth-Request messages.\n   PANA-Auth-Answer\
    \ messages are simply used to acknowledge receipt of\n   the requests.  As an\
    \ optimization, a PANA-Auth-Answer message sent\n   from the PaC MAY include the\
    \ EAP message.  This optimization SHOULD\n   NOT be used when it takes time to\
    \ generate the EAP message (due to,\n   e.g., intervention of human input), in\
    \ which case returning an\n   PANA-Auth-Answer message without piggybacking an\
    \ EAP message can\n   avoid unnecessary retransmission of the PANA-Auth-Request\
    \ message.\n   A Nonce AVP MUST be included in the first PANA-Auth-Request and\n\
    \   PANA-Auth-Answer messages following the initial PANA-Auth-Request and\n  \
    \ PANA-Auth-Answer messages (i.e., with the 'S' (Start) bit set), and\n   MUST\
    \ NOT be included in any other message, except during\n   re-authentication procedures\
    \ (see Section 4.3).\n   The result of PANA authentication is carried in the last\n\
    \   PANA-Auth-Request message sent from the PAA to the PaC.  This message\n  \
    \ carries the EAP authentication result and the result of PANA\n   authentication.\
    \  The last PANA-Auth-Request message MUST be\n   acknowledged with a PANA-Auth-Answer\
    \ message.  The last\n   PANA-Auth-Request and PANA-Auth-Answer messages MUST\
    \ have the 'C'\n   (Complete) bit set, and any other message MUST NOT have the\
    \ 'C'\n   (Complete) bit set.  Figure 1 shows an example sequence in the\n   authentication\
    \ and authorization phase for a PaC-initiated session.\n   PaC      PAA  Message(sequence\
    \ number)[AVPs]\n   ---------------------------------------------------------------------\n\
    \      ----->     PANA-Client-Initiation(0)\n      <-----     PANA-Auth-Request(x)[PRF-Algorithm,Integrity-Algorithm]\n\
    \                                              // The 'S' (Start) bit set\n  \
    \    ----->     PANA-Auth-Answer(x)[PRF-Algorithm, Integrity-Algorithm]\n    \
    \                                          // The 'S' (Start) bit set\n      <-----\
    \     PANA-Auth-Request(x+1)[Nonce, EAP-Payload]\n      ----->     PANA-Auth-Answer(x+1)[Nonce]\
    \ // No piggybacking EAP\n      ----->     PANA-Auth-Request(y)[EAP-Payload]\n\
    \      <-----     PANA-Auth-Answer(y)\n      <-----     PANA-Auth-Request(x+2)[EAP-Payload]\n\
    \      ----->     PANA-Auth-Answer(x+2)[EAP-Payload]\n                       \
    \                     // Piggybacking EAP\n      <-----     PANA-Auth-Request(x+3)[Result-Code,\
    \ EAP-Payload,\n                                        Key-Id, Session-Lifetime,\
    \ AUTH]\n                                           // The 'C' (Complete) bit\
    \ set\n      ----->     PANA-Auth-Answer(x+3)[Key-Id, AUTH]\n                \
    \                           // The 'C' (Complete) bit set\n   Figure 1: Example\
    \ sequence for the authentication and authorization\n             phase for a\
    \ PaC-initiated session (\"Piggybacking EAP\" is\n             the case in which\
    \ an EAP-Payload AVP is carried in PAN)\n   If a PANA SA needs to be established\
    \ with use of a key-generating EAP\n   method and an MSK is successfully generated,\
    \ the last\n   PANA-Auth-Request message with the 'C' (Complete) bit set MUST\n\
    \   contain a Key-Id AVP and an AUTH AVP for the first derivation of keys\n  \
    \ in the session, and any subsequent message MUST contain an AUTH AVP.\n   EAP\
    \ authentication can fail at a pass-through authenticator without\n   sending\
    \ an EAP Failure message [RFC4137].  When this occurs, the PAA\n   SHOULD silently\
    \ terminate the session, expecting that a session\n   timeout on the PaC will\
    \ clean up the state on the PaC.\n   There is a case where EAP authentication\
    \ succeeds with producing an\n   EAP Success message, but network access authorization\
    \ fails due to,\n   e.g., authorization rejected by a AAA server or authorization\
    \ locally\n   rejected by the PAA.  When this occurs, the PAA MUST send the last\n\
    \   PANA-Auth-Request with a result code PANA_AUTHORIZATION_REJECTED.  If\n  \
    \ an MSK is available, the last PANA-Auth-Request and PANA-Auth-Answer\n   messages\
    \ with the 'C' (Complete) bit set MUST be protected with an\n   AUTH AVP and carry\
    \ a Key-Id AVP.  The PANA session MUST be terminated\n   immediately after the\
    \ last PANA-Auth message exchange.\n   For reasons described in Section 3 of [RFC5193],\
    \ the PaC may need to\n   reconfigure the IP address after a successful authentication\
    \ and\n   authorization phase to obtain an IP address that is usable for\n   exchanging\
    \ data traffic through EP.  In this case, the PAA sets the\n   'I' (IP Reconfiguration)\
    \ bit of PANA-Auth-Request messages in the\n   authentication and authorization\
    \ phase to indicate to the PaC the\n   need for IP address reconfiguration.  How\
    \ IP address reconfiguration\n   is performed is outside the scope of this document.\n"
- title: 4.2.  Access Phase
  contents:
  - "4.2.  Access Phase\n   Once the authentication and authorization phase successfully\n\
    \   completes, the PaC gains access to the network and can send and\n   receive\
    \ IP data traffic through the EP(s), and the PANA session\n   enters the access\
    \ phase.  In this phase, PANA-Notification-Request\n   and PANA-Notification-Answer\
    \ messages with the 'P' (Ping) bit set\n   (ping request and ping answer messages,\
    \ respectively) can be used for\n   testing the liveness of the PANA session on\
    \ the PANA peer.  Both the\n   PaC and the PAA are allowed to send a ping request\
    \ to the\n   communicating peer whenever they need to ensure the availability\
    \ of\n   the session on the peer, and they expect the peer to return a ping\n\
    \   answer message.  The ping request and answer messages MUST be\n   protected\
    \ with an AUTH AVP when a PANA SA is available.  A ping\n   request MUST NOT be\
    \ sent in the authentication and authorization\n   phase, re-authentication phase,\
    \ and termination phase.\n   Implementations MUST limit the rate of performing\
    \ this test.  The PaC\n   and the PAA can handle rate limitation on their own,\
    \ they do not have\n   to perform any coordination with each other.  There is\
    \ no negotiation\n   of timers for this purpose.  Additionally, an implementation\
    \ MAY rate\n   limit processing the incoming ping requests.  It should be noted\
    \ that\n   if a PAA or PaC that considers its connectivity lost after a\n   relatively\
    \ small number of unresponsive pings is coupled with a peer\n   that is aggressively\
    \ rate limiting the ping request and answer\n   messages, then false-positives\
    \ could result.  Therefore, a PAA or PaC\n   should not rely on frequent ping\
    \ operation to quickly determine loss\n   of connectivity.\n"
- title: 4.3.  Re-Authentication Phase
  contents:
  - "4.3.  Re-Authentication Phase\n   The PANA session in the access phase can enter\
    \ the re-authentication\n   phase to extend the current session lifetime by re-executing\
    \ EAP.\n   Once the re-authentication phase successfully completes, the session\n\
    \   re-enters the access phase.  Otherwise, the session is terminated.\n   When\
    \ the PaC initiates re-authentication, it sends a\n   PANA-Notification-Request\
    \ message with the 'A' (re-Authentication)\n   bit set (a re-authentication request\
    \ message) to the PAA.  This\n   message MUST contain the session identifier assigned\
    \ to the session\n   being re-authenticated.  If the PAA already has an established\
    \ PANA\n   session for the PaC with the matching session identifier, it MUST\n\
    \   first respond with a PANA-Notification-Answer message with the 'A'\n   (re-Authentication)\
    \ bit set (a re-authentication answer message),\n   followed by a PANA-Auth-Request\
    \ message that starts a new EAP\n   authentication.  If the PAA cannot identify\
    \ the session, it MUST\n   silently discard the message.  The first PANA-Auth-Request\
    \ and\n   PANA-Auth-Answer messages in the re-authentication phase MUST have\n\
    \   the 'S' (Start) bit cleared and carry a Nonce AVP.\n   The PaC may receive\
    \ a PANA-Auth-Request before receiving the answer\n   to its outstanding re-authentication\
    \ request message.  This condition\n   can arise due to packet re-ordering or\
    \ a race condition between the\n   PaC and PAA when they both attempt to engage\
    \ in re-authentication.\n   The PaC MUST keep discarding the received PANA-Auth-Requests\
    \ until it\n   receives the answer to its request.\n   When the PAA initiates\
    \ re-authentication, it sends a\n   PANA-Auth-Request message containing the session\
    \ identifier for the\n   PaC.  The PAA MUST initiate EAP re-authentication before\
    \ the current\n   session lifetime expires.\n   Re-authentication of an ongoing\
    \ PANA session MUST NOT reset the\n   sequence numbers.\n   For any re-authentication,\
    \ if there is an established PANA SA,\n   re-authentication request and answer\
    \ messages and subsequent\n   PANA-Auth-Request and PANA-Auth-Answer messages\
    \ MUST be protected\n   with an AUTH AVP.  The final PANA-Auth-Request and PANA-Auth-Answer\n\
    \   messages and any subsequent PANA message MUST be protected by using\n   the\
    \ key generated from the latest EAP authentication.\n   PaC      PAA  Message(sequence\
    \ number)[AVPs]\n   ---------------------------------------------------------------------\n\
    \      ----->     PANA-Notification-Request(q)[AUTH]\n                       \
    \        // The 'A' (re-Authentication) bit set\n      <-----     PANA-Notification-Answer(q)[AUTH]\n\
    \                               // The 'A' (re-Authentication) bit set\n     \
    \ <-----     PANA-Auth-Request(p)[EAP-Payload, Nonce, AUTH]\n      ----->    \
    \ PANA-Auth-Answer(p)[AUTH, Nonce]\n      ----->     PANA-Auth-Request(q+1)[EAP-Payload,\
    \ AUTH]\n      <-----     PANA-Auth-Answer(q+1)[AUTH]\n      <-----     PANA-Auth-Request(p+1)[EAP-Payload,\
    \ AUTH]\n      ----->     PANA-Auth-Answer(p+1)[EAP-Payload, AUTH]\n      <-----\
    \     PANA-Auth-Request(p+2)[Result-Code, EAP-Payload,\n                     \
    \                   Key-Id, Session-Lifetime, AUTH]\n                        \
    \                // The 'C' (Complete) bit set\n      ----->     PANA-Auth-Answer(p+2)[Key-Id,\
    \ AUTH]\n                                        // The 'C' (Complete) bit set\n\
    \   Figure 2: Example sequence for the re-authentication phase initiated\n   \
    \          by PaC\n"
- title: 4.4.  Termination Phase
  contents:
  - "4.4.  Termination Phase\n   A procedure for explicitly terminating a PANA session\
    \ can be\n   initiated either from the PaC (i.e., disconnect indication) or from\n\
    \   the PAA (i.e., session revocation).  The PANA-Termination-Request and\n  \
    \ PANA-Termination-Answer message exchanges are used for\n   disconnect-indication\
    \ and session-revocation procedures.\n   The reason for termination is indicated\
    \ in the Termination-Cause AVP.\n   When there is an established PANA SA between\
    \ the PaC and the PAA, all\n   messages exchanged during the termination phase\
    \ MUST be protected\n   with an AUTH AVP.  When the sender of the PANA-Termination-Request\n\
    \   message receives a valid acknowledgment, all states maintained for\n   the\
    \ PANA session MUST be terminated immediately.\n"
- title: 5.  Processing Rules
  contents:
  - '5.  Processing Rules

    '
- title: 5.1.  Fragmentation
  contents:
  - "5.1.  Fragmentation\n   PANA does not provide fragmentation of PANA messages.\
    \  Instead, it\n   relies on fragmentation provided by EAP methods and IP layer\
    \ when\n   needed.\n"
- title: 5.2.  Sequence Number and Retransmission
  contents:
  - "5.2.  Sequence Number and Retransmission\n   PANA uses sequence numbers to provide\
    \ ordered and reliable delivery\n   of messages.\n   The PaC and PAA maintain\
    \ two sequence numbers: one is for setting the\n   sequence number of the next\
    \ outgoing request; the other is for\n   matching the sequence number of the next\
    \ incoming request.  These\n   sequence numbers are 32-bit unsigned numbers. \
    \ They are monotonically\n   incremented by 1 as new requests are generated and\
    \ received, and\n   wrapped to zero on the next message after 2^32-1.  Answers\
    \ always\n   contain the same sequence number as the corresponding request.\n\
    \   Retransmissions reuse the sequence number contained in the original\n   packet.\n\
    \   The initial sequence numbers (ISN) are randomly picked by the PaC and\n  \
    \ PAA as they send their very first request messages.\n   PANA-Client-Initiation\
    \ message carries sequence number 0.\n   When a request message is received, it\
    \ is considered valid in terms\n   of sequence numbers if and only if its sequence\
    \ number matches the\n   expected value.  This check does not apply to the\n \
    \  PANA-Client-Initiation message and the initial PANA-Auth-Request\n   message.\n\
    \   When an answer message is received, it is considered valid in terms\n   of\
    \ sequence numbers if and only if its sequence number matches that\n   of the\
    \ currently outstanding request.  A peer can only have one\n   outstanding request\
    \ at a time.\n   PANA request messages are retransmitted based on a timer until\
    \ an\n   answer is received (in which case the retransmission timer is\n   stopped)\
    \ or the number of retransmission reaches the maximum value\n   (in which case\
    \ the PANA session MUST be terminated immediately).\n   The retransmission timers\
    \ SHOULD be calculated as described in\n   Section 9, unless a given deployment\
    \ chooses to use its own\n   retransmission timers optimized for the underlying\
    \ link-layer\n   characteristics.\n   Unless dropped due to rate limiting, the\
    \ PaC and PAA MUST respond to\n   all duplicate request messages received.  The\
    \ last transmitted answer\n   MAY be cached in case it is not received by the\
    \ peer, which generates\n   a retransmission of the last request.  When available,\
    \ the cached\n   answer can be used instead of fully processing the retransmitted\n\
    \   request and forming a new answer from scratch.\n"
- title: 5.3.  PANA Security Association
  contents:
  - "5.3.  PANA Security Association\n   A PANA SA is created as an attribute of a\
    \ PANA session when EAP\n   authentication succeeds with a creation of an MSK.\
    \  A PANA SA is not\n   created when the PANA authentication fails or no MSK is\
    \ produced by\n   the EAP authentication method.  When a new MSK is derived in\
    \ the PANA\n   re-authentication phase, any key derived from the old MSK MUST\
    \ be\n   updated to a new one that is derived from the new MSK.  In order to\n\
    \   distinguish the new MSK from old ones, one Key-Id AVP MUST be carried\n  \
    \ in the last PANA-Auth-Request and PANA-Auth-Answer messages with the\n   'C'\
    \ (Complete) bit set at the end of the EAP authentication, which\n   resulted\
    \ in deriving a new MSK.  The Key-Id AVP is of type Unsigned32\n   and MUST contain\
    \ a value that uniquely identifies the MSK within the\n   PANA session.  The last\
    \ PANA-Auth-Answer message with the 'C'\n   (Complete) bit set in response to\
    \ the last PANA-Auth-Request message\n   with the 'C' (Complete) bit set MUST\
    \ contain a Key-Id AVP with the\n   same MSK identifier carried in the request.\
    \  The last\n   PANA-Auth-Request and PANA-Auth-Answer messages with a Key-Id\
    \ AVP\n   MUST also carry an AUTH AVP whose value is computed by using the new\n\
    \   PANA_AUTH_KEY derived from the new MSK.  Although the specification\n   does\
    \ not mandate a particular method for calculation of the Key-Id\n   AVP value,\
    \ a simple method is to use monotonically increasing\n   numbers.\n   The PANA\
    \ session lifetime is bounded by the authorization lifetime\n   granted by the\
    \ authentication server (same as the MSK lifetime).  The\n   lifetime of the PANA\
    \ SA (hence the PANA_AUTH_KEY) is the same as the\n   lifetime of the PANA session.\
    \  The created PANA SA is deleted when\n   the corresponding PANA session is terminated.\n\
    \   PANA SA attributes as well as PANA session attributes are listed\n   below:\n\
    \   PANA Session attributes:\n      *  Session Identifier\n      *  IP address\
    \ and UDP port number of the PaC\n      *  IP address and UDP port number of the\
    \ PAA\n      *  Sequence number for the next outgoing request\n      *  Sequence\
    \ number for the next incoming request\n      *  Last transmitted message payload\n\
    \      *  Retransmission interval\n      *  Session lifetime\n      *  PANA SA\
    \ attributes\n   PANA SA attributes:\n      *  Nonce generated by PaC (PaC_nonce)\n\
    \      *  Nonce generated by PAA (PAA_nonce)\n      *  MSK\n      *  MSK Identifier\n\
    \      *  PANA_AUTH_KEY\n      *  Pseudo-random function\n      *  Integrity algorithm\n\
    \   The PANA_AUTH_KEY is derived from the available MSK, and it is used\n   to\
    \ integrity protect PANA messages.  The PANA_AUTH_KEY is computed in\n   the following\
    \ way:\n   PANA_AUTH_KEY = prf+(MSK, \"IETF PANA\"|I_PAR|I_PAN|\n            \
    \ PaC_nonce|PAA_nonce|Key_ID)\n   where:\n   - The prf+ function is defined in\
    \ IKEv2 [RFC4306].  The pseudo-random\n     function to be used for the prf+ function\
    \ is negotiated using\n     PRF-Algorithm AVP in the initial PANA-Auth-Request\
    \ and\n     PANA-Auth-Answer exchange with 'S' (Start) bit set.\n   - MSK is the\
    \ master session key generated by the EAP method.\n   - \"IETF PANA\" is the ASCII\
    \ code representation of the non-NULL\n     terminated string (excluding the double\
    \ quotes around it).\n   - I_PAR and I_PAN are the initial PANA-Auth-Request and\n\
    \     PANA-Auth-Answer messages (the PANA header and the following PANA\n    \
    \ AVPs) with 'S' (Start) bit set, respectively.\n   - PaC_nonce and PAA_nonce\
    \ are values of the Nonce AVP carried in the\n     first non-initial PANA-Auth-Answer\
    \ and PANA-Auth-Request messages\n     in the authentication and authorization\
    \ phase or the first\n     PANA-Auth-Answer and PANA-Auth-Request messages in\
    \ the\n     re-authentication phase, respectively.\n   - Key_ID is the value of\
    \ the Key-Id AVP.\n   The length of PANA_AUTH_KEY depends on the integrity algorithm\
    \ in\n   use.  See Section 5.4 for the detailed usage of the PANA_AUTH_KEY.\n"
- title: 5.4.  Message Authentication
  contents:
  - "5.4.  Message Authentication\n   A PANA message can contain an AUTH AVP for cryptographically\n\
    \   protecting the message.\n   When an AUTH AVP is included in a PANA message,\
    \ the Value field of\n   the AUTH AVP is calculated by using the PANA_AUTH_KEY\
    \ in the\n   following way:\n   AUTH AVP value = PANA_AUTH_HASH(PANA_AUTH_KEY,\
    \ PANA_PDU)\n   where PANA_PDU is the PANA message including the PANA header,\
    \ with\n   the AUTH AVP Value field first initialized to 0.  PANA_AUTH_HASH\n\
    \   represents the integrity algorithm negotiated using\n   Integrity-Algorithm\
    \ AVP in the initial PANA-Auth-Request and\n   PANA-Auth-Answer exchange with\
    \ 'S' (Start) bit set.  The PaC and PAA\n   MUST use the same integrity algorithm\
    \ to calculate an AUTH AVP they\n   originate and receive.\n"
- title: 5.5.  Message Validity Check
  contents:
  - "5.5.  Message Validity Check\n   When a PANA message is received, the message\
    \ is considered to be\n   invalid, at least when one of the following conditions\
    \ are not met:\n   o  Each field in the message header contains a valid value\
    \ including\n      sequence number, message length, message type, flags, session\n\
    \      identifier, etc.\n   o  The message type is one of the expected types in\
    \ the current\n      state.  Specifically, the following messages are unexpected\
    \ and\n      invalid:\n      *  In the authentication and authorization phase:\n\
    \         +  PANA-Client-Initiation after completion of the initial\n        \
    \    PANA-Auth-Request and PANA-Auth-Answer exchange with 'S'\n            (Start)\
    \ bit set.\n         +  Re-authentication request.\n         +  Ping request.\n\
    \         +  The last PANA-Auth-Request with 'C' (Complete) bit set\n        \
    \    before completion of the initial PANA-Auth-Request and\n            PANA-Auth-Answer\
    \ exchange with 'S' (Start) bit set.\n         +  The initial PANA-Auth-Request\
    \ with 'S' (Start) bit set after\n            a PaC receives a valid non-initial\
    \ PANA-Auth-Request with\n            'S' (Start) bit cleared.\n         +  PANA-Termination-Request.\n\
    \      *  In the re-authentication phase:\n         +  PANA-Client-Initiation.\n\
    \         +  The initial PANA-Auth-Request.\n      *  In the access phase:\n \
    \        +  PANA-Auth-Request.\n         +  PANA-Client-Initiation.\n      * \
    \ In the termination phase:\n         +  PANA-Client-Initiation.\n         + \
    \ All requests but PANA-Termination-Request and ping request.\n   o  The message\
    \ payload contains a valid set of AVPs allowed for the\n      message type.  There\
    \ is no missing AVP that needs to be included\n      in the payload, and no AVP,\
    \ which needs to be at a fixed position,\n      is included in a position different\
    \ from this fixed position.\n   o  Each AVP is recognized and decoded correctly.\n\
    \   o  Once the PANA authentication succeeds in using a key-generating\n     \
    \ EAP method, the PANA-Auth-Request message that carries the EAP\n      Success\
    \ and any subsequent message in that session contains an\n      AUTH AVP.  The\
    \ AVP value matches the hash value computed against\n      the received message.\n\
    \   Invalid messages MUST be discarded in order to provide robustness\n   against\
    \ DoS attacks.\n"
- title: 5.6.  PaC Updating Its IP Address
  contents:
  - "5.6.  PaC Updating Its IP Address\n   A PaC's IP address used for PANA can change\
    \ in certain situations,\n   e.g., when IP address reconfiguration is needed for\
    \ the PaC to obtain\n   an IP address after successful PANA authentication (see\
    \ Section 3 of\n   [RFC5193]) or when the PaC moves from one IP link to another\
    \ within\n   the same PAA's realm.  In order to maintain the PANA session, the\
    \ PAA\n   needs to be notified about the change of PaC address.\n   After the\
    \ PaC has changed its IP address used for PANA, it MUST send\n   any valid PANA\
    \ message.  If the message that carries the new PaC IP\n   address in the Source\
    \ Address field of the IP header is valid, the\n   PAA MUST update the PANA session\
    \ with the new PaC address.  If there\n   is an established PANA SA, the message\
    \ MUST be protected with an AUTH\n   AVP.\n"
- title: 5.7.  Session Lifetime
  contents:
  - "5.7.  Session Lifetime\n   The authentication and authorization phase determines\
    \ the PANA\n   session lifetime, and the lifetime is indicated to the PaC when\
    \ the\n   network access authorization succeeds.  For this purpose, when the\n\
    \   last PANA-Auth-Request message (i.e., with the 'C' (Complete) bit\n   set)\
    \ in authentication and authorization phase or re-authentication\n   phase carries\
    \ a Result-Code AVP with a value of PANA_SUCCESS, a\n   Session-Lifetime AVP MUST\
    \ also be carried in the message.  A\n   Session-Lifetime AVP MUST be ignored\
    \ when included in other PANA\n   messages.\n   The lifetime is a non-negotiable\
    \ parameter that can be used by the\n   PaC to manage PANA-related state.  The\
    \ PaC MUST initiate the\n   re-authentication phase before the current session\
    \ lifetime expires,\n   if it wants to extend the session.\n   The PaC and the\
    \ PAA MAY use information obtained outside PANA (e.g.,\n   lower-layer indications)\
    \ to expedite the detection of a disconnected\n   peer.  Availability and reliability\
    \ of such indications MAY depend on\n   a specific link-layer or network topology\
    \ and are therefore only\n   hints.  A PANA peer SHOULD use the ping request and\
    \ answer exchange\n   to verify that a peer is, in fact, no longer alive, unless\n\
    \   information obtained outside PANA is being used to expedite the\n   detection\
    \ of a disconnected peer.\n   The session lifetime parameter is not related to\
    \ the transmission of\n   ping request messages.  These messages can be used for\
    \ asynchronously\n   verifying the liveness of the peer.  The decision to send\
    \ a ping\n   request message is made locally and does not require coordination\n\
    \   between the peers.\n"
- title: 6.  Message Format
  contents:
  - "6.  Message Format\n   This section defines message formats for PANA protocol.\n"
- title: 6.1.  IP and UDP Headers
  contents:
  - "6.1.  IP and UDP Headers\n   Any PANA message is unicast between the PaC and\
    \ the PAA.\n   For any PANA message sent from the peer that has initiated the\
    \ PANA\n   session, the UDP source port is set to any number on which the peer\n\
    \   can receive incoming PANA messages, and the destination port is set\n   to\
    \ the assigned PANA port number (716).  For any PANA message sent\n   from the\
    \ other peer, the source port is set to the assigned PANA port\n   number (716),\
    \ and the destination port is copied from the source port\n   of the last received\
    \ message.  In case both the PaC and PAA initiate\n   the session (i.e., PANA-Client-Initiation\
    \ and unsolicited PANA-Auth-\n   Request messages cross each other), then the\
    \ PaC is identified as the\n   initiator.  All PANA peers MUST listen on the assigned\
    \ PANA port\n   number (716).\n"
- title: 6.2.  PANA Message Header
  contents:
  - "6.2.  PANA Message Header\n   A summary of the PANA message header format is\
    \ shown below.  The\n   fields are transmitted in network byte order.\n    0 \
    \                  1                   2                   3\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Reserved            |        Message Length         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             Flags             |         Message Type          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Session Identifier                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Sequence Number                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  AVPs ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-\n   Reserved\n      This 16-bit\
    \ field is reserved for future use.  It MUST be set to\n      zero and ignored\
    \ by the receiver.\n   Message Length\n      The Message Length field is two octets\
    \ and indicates the length of\n      the PANA message including the header fields.\n\
    \   Flags\n      The Flags field is two octets.  The following bits are assigned:\n\
    \    0                   1\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |R S C A P I r r r r r r r r r r|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   R (Request)\n      If set, the message is a request.  If cleared, the message\
    \ is an\n      answer.\n   S (Start)\n      If set, the message is the first PANA-Auth-Request\
    \ or\n      PANA-Auth-Answer in authentication and authorization phase.  For\n\
    \      other messages, this bit MUST be cleared.\n   C (Complete)\n      If set,\
    \ the message is the last PANA-Auth-Request or\n      PANA-Auth-Answer in authentication\
    \ and authorization phase.  For\n      other messages, this bit MUST be cleared.\n\
    \   A (re-Authentication)\n      If set, the message is a PANA-Notification-Request\
    \ or\n      PANA-Notification-Answer to initiate re-authentication.  For other\n\
    \      messages, this bit MUST be cleared.\n   P (Ping)\n      If set, the message\
    \ is a PANA-Notification-Request or\n      PANA-Notification-Answer for liveness\
    \ test.  For other messages,\n      this bit MUST be cleared.\n   I (IP Reconfiguration)\n\
    \      If set, it indicates that the PaC is required to perform IP\n      address\
    \ reconfiguration after successful authentication and\n      authorization phase\
    \ to configure an IP address that is usable for\n      exchanging data traffic\
    \ across EP.  This bit is set by the PAA\n      only for PANA-Auth-Request messages\
    \ in the authentication and\n      authorization phase.  For other messages, this\
    \ bit MUST be\n      cleared.\n   r (reserved)\n      These flag bits are reserved\
    \ for future use.  They MUST be set to\n      zero and ignored by the receiver.\n\
    \   Message Type\n      The Message Type field is two octets, and it is used in\
    \ order to\n      communicate the message type with the message.  Message Type\n\
    \      allocation is managed by IANA [IANAWEB].\n   Session Identifier\n     \
    \ This field contains a 32-bit session identifier.\n   Sequence Number\n     \
    \ This field contains a 32-bit sequence number.\n   AVPs\n      AVPs are a method\
    \ of encapsulating information relevant to the\n      PANA message.  See Section\
    \ 6.3 for more information on AVPs.\n"
- title: 6.3.  AVP Format
  contents:
  - "6.3.  AVP Format\n   Each AVP of type OctetString MUST be padded to align on\
    \ a 32-bit\n   boundary, while other AVP types align naturally.  A number of\n\
    \   zero-valued bytes are added to the end of the AVP Value field until a\n  \
    \ word boundary is reached.  The length of the padding is not reflected\n   in\
    \ the AVP Length field [RFC3588].\n   The fields in the AVP are sent in network\
    \ byte order.  The AVP format\n   is:\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           AVP Code            |           AVP Flags           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          AVP Length           |            Reserved           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Vendor-Id (opt)                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Value ...\n   +-+-+-+-+-+-+-+-+\n   AVP Code\n      The AVP Code, together\
    \ with the optional Vendor-Id field,\n      identifies an attribute that follows.\
    \  If the V-bit is not set,\n      then the Vendor-Id is not present and the AVP\
    \ Code refers to an\n      IETF attribute.\n   AVP Flags\n      The AVP Flags\
    \ field is two octets.  The following bits are\n      assigned:\n    0       \
    \            1\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |V r r r r r r r r r r r r r r r|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   V (Vendor)\n      The 'V' (Vendor) bit indicates whether the optional Vendor-Id\n\
    \      field is present in the AVP header.  When set, the AVP Code\n      belongs\
    \ to the specific vendor code address space.  All AVPs\n      defined in this\
    \ document MUST have the 'V' (Vendor) bit cleared.\n   r (reserved)\n      These\
    \ flag bits are reserved for future use.  They MUST be set to\n      zero and\
    \ ignored by the receiver.\n   AVP Length\n      The AVP Length field is two octets,\
    \ and indicates the number of\n      octets in the Value field.  The length of\
    \ the AVP Code, AVP\n      Length, AVP Flags, Reserved and Vendor-Id fields are\
    \ not counted\n      in the AVP Length value.\n   Reserved\n      This two-octet\
    \ field is reserved for future use.  It MUST be set\n      to zero and ignored\
    \ by the receiver.\n   Vendor-Id\n      The Vendor-Id field is present if the\
    \ 'V' (Vendor) bit is set in\n      the AVP Flags field.  The optional four-octet\
    \ Vendor-Id field\n      contains the IANA assigned \"SMI Network Management Private\n\
    \      Enterprise Codes\" [IANAWEB] value, encoded in network byte order.\n  \
    \    Any vendor wishing to implement a vendor-specific PANA AVP MUST\n      use\
    \ their own Vendor-Id along with their privately managed AVP\n      address space,\
    \ guaranteeing that they will not collide with any\n      other vendor's vendor-specific\
    \ AVP(s) nor with future IETF\n      applications.\n   Value\n      The Value\
    \ field is zero or more octets and contains information\n      specific to the\
    \ Attribute.  The format of the Value field is\n      determined by the AVP Code\
    \ and Vendor-Id fields.  The length of\n      the Value field is determined by\
    \ the AVP Length field.\n"
- title: 7.  PANA Messages
  contents:
  - "7.  PANA Messages\n   Each Request/Answer message pair is assigned a sequence\
    \ number, and\n   the sub-type (i.e., request or answer) is identified via the\
    \ 'R'\n   (Request) bit in the Message Flags field of the PANA message header.\n\
    \   Every PANA message MUST contain a message type in its header's\n   Message\
    \ Type field, which is used to determine the action that is to\n   be taken for\
    \ a particular message.  Figure 3 lists all PANA messages\n   defined in this\
    \ document:\n   Message Name              Abbrev. Message  PaC<->PAA  Ref.\n \
    \                                    Type\n   ---------------------------------------------------------------------\n\
    \   PANA-Client-Initiation     PCI    1        -------->  7.1\n   PANA-Auth-Request\
    \          PAR    2        <------->  7.2\n   PANA-Auth-Answer           PAN \
    \   2        <------->  7.3\n   PANA-Termination-Request   PTR    3        <------->\
    \  7.4\n   PANA-Termination-Answer    PTA    3        <------->  7.5\n   PANA-Notification-Request\
    \  PNR    4        <------->  7.6\n   PANA-Notification-Answer   PNA    4    \
    \    <------->  7.7\n   ---------------------------------------------------------------------\n\
    \   Figure 3: Table of PANA Messages\n   The language used for PANA message definitions\
    \ (i.e., AVPs valid for\n   that PANA message type), in Section 7.1 through Section\
    \ 7.7, is\n   defined using ABNF [RFC5234] as follows:\n   message-def      =\
    \ Message-Name LWSP \"::=\" LWSP PANA-message\n   Message-Name     = PANA-name\n\
    \   PANA-name        = ALPHA *(ALPHA / DIGIT / \"-\")\n   PANA-message     = header\
    \ LWSP *fixed LWSP *required\n                             LWSP *optional LWSP\
    \ *fixed\n   header           = \"<\" LWSP \"PANA-Header:\" LWSP Message-Type\n\
    \                      [r-bit] [s-bit] [c-bit] [a-bit] [p-bit] [i-bit]\n     \
    \                 LWSP \">\"\n   Message-Type     = 1*DIGIT\n                \
    \      ; The Message Type assigned to the message\n   r-bit            = \",REQ\"\
    \n                      ; If present, the 'R' (Request) bit in the Message\n \
    \                     ; Flags is set, indicating that the message\n          \
    \            ; is a request, as opposed to an answer.\n   s-bit            = \"\
    ,STA\"\n                      ; If present, the 'S' (Start) bit in the Message\n\
    \                      ; Flags is set, indicating that the message\n         \
    \             ; is the initial PAR or PAN in authentication\n                \
    \      ; and authorization phase.\n   c-bit            = \",COM\"\n          \
    \            ; If present, the 'C' bit in the Message\n                      ;\
    \ Flags is set, indicating that the message\n                      ; is the final\
    \ PAR and PAN in authentication\n                      ; and authorization phase\
    \ or re-authentication\n                      ; phase.\n   a-bit            =\
    \ \",REA\"\n                      ; If present, the 'A' (re-Authentication) bit\n\
    \                      ; in the Message Flags is set, indicating that\n      \
    \                ; the message is a re-authentication request or\n           \
    \           ; answer.\n   p-bit            = \",PIN\"\n                      ;\
    \ If present, the 'P' (Ping) bit in the Message\n                      ; Flags\
    \ is set, indicating that the message\n                      ; is a ping request\
    \ or answer.\n   i-bit            = \",IPR\"\n                      ; If present,\
    \ the 'I' (IP Reconfiguration) bit\n                      ; in the Message Flags\
    \ is set, indicating that\n                      ; the PaC requires IP address\
    \ reconfiguration\n                      ; after successful authentication and\n\
    \                      ; authorization phase.\n   fixed            = [qual] \"\
    <\" LWSP avp-spec LWSP \">\"\n                      ; Defines the fixed position\
    \ of an AVP.\n   required         = [qual] \"{\" LWSP avp-spec LWSP \"}\"\n  \
    \                    ; The AVP MUST be present and can appear\n              \
    \        ; anywhere in the message.\n   optional         = [qual] \"[\" LWSP avp-name\
    \ LWSP \"]\"\n                      ; The avp-name in the 'optional' rule cannot\n\
    \                      ; evaluate any AVP Name that is included\n            \
    \          ; in a fixed or required rule.  The AVP can\n                     \
    \ ; appear anywhere in the message.\n   qual             = [min] \"*\" [max]\n\
    \                      ; See ABNF conventions, RFC 5234 Section 3.6.\n       \
    \               ; The absence of any qualifiers depends on whether\n         \
    \             ; it precedes a fixed, required, or optional\n                 \
    \     ; rule.  If a fixed or required rule has no\n                      ; qualifier,\
    \ then exactly one such AVP MUST\n                      ; be present.  If an optional\
    \ rule has no\n                      ; qualifier, then 0 or 1 such AVP may be\n\
    \                      ; present.\n                      ;\n                 \
    \     ; NOTE:  \"[\" and \"]\" have a different meaning\n                    \
    \  ; than in ABNF (see the optional rule, above).\n                      ; These\
    \ braces cannot be used to express\n                      ; optional fixed rules\
    \ (such as an optional\n                      ; AUTH at the end).  To do this,\
    \ the convention\n                      ; is '0*1fixed'.\n   min             \
    \ = 1*DIGIT\n                      ; The minimum number of times the element may\n\
    \                      ; be present.  The default value is zero.\n   max     \
    \         = 1*DIGIT\n                      ; The maximum number of times the element\
    \ may\n                      ; be present.  The default value is infinity.  A\n\
    \                      ; value of zero implies the AVP MUST NOT be\n         \
    \             ; present.\n   avp-spec         = PANA-name\n                  \
    \    ; The avp-spec has to be an AVP Name, defined\n                      ; in\
    \ the base or extended PANA protocol\n                      ; specifications.\n\
    \   avp-name         = avp-spec / \"AVP\"\n                      ; The string\
    \ \"AVP\" stands for *any* arbitrary\n                      ; AVP Name, which\
    \ does not conflict with the\n                      ; required or fixed position\
    \ AVPs defined in\n                      ; the message definition.\n"
- title: 7.1.  PANA-Client-Initiation (PCI)
  contents:
  - "7.1.  PANA-Client-Initiation (PCI)\n   The PANA-Client-Initiation (PCI) message\
    \ is used for PaC-initiated\n   session.  The Sequence Number and Session Identifier\
    \ fields in this\n   message MUST be set to zero (0).\n   PANA-Client-Initiation\
    \ ::= < PANA-Header: 1 >\n                      *[ AVP ]\n"
- title: 7.2.  PANA-Auth-Request (PAR)
  contents:
  - "7.2.  PANA-Auth-Request (PAR)\n   The PANA-Auth-Request (PAR) message is either\
    \ sent by the PAA or the\n   PaC.\n   The message MUST NOT have both the 'S' (Start)\
    \ and 'C' (Complete)\n   bits set.\n   PANA-Auth-Request ::= < PANA-Header: 2,REQ[,STA][,COM][,IPR]\
    \ >\n                       [ EAP-Payload ]\n                       [ Nonce ]\n\
    \                      *[ PRF-Algorithm ]\n                      *[ Integrity-Algorithm\
    \ ]\n                       [ Result-Code ]\n                       [ Session-Lifetime\
    \ ]\n                       [ Key-Id ]\n                      *[ AVP ]\n     \
    \               0*1< AUTH >\n"
- title: 7.3.  PANA-Auth-Answer (PAN)
  contents:
  - "7.3.  PANA-Auth-Answer (PAN)\n   The PANA-Auth-Answer (PAN) message is sent by\
    \ either the PaC or the\n   PAA in response to a PANA-Auth-Request message.\n\
    \   The message MUST NOT have both the 'S' (Start) and 'C' (Complete)\n   bits\
    \ set.\n   PANA-Auth-Answer ::= < PANA-Header: 2[,STA][,COM] >\n             \
    \          [ Nonce ]\n                       [ PRF-Algorithm ]\n             \
    \          [ Integrity-Algorithm ]\n                       [ EAP-Payload ]\n \
    \                      [ Key-Id ]\n                      *[ AVP ]\n          \
    \          0*1< AUTH >\n"
- title: 7.4.  PANA-Termination-Request (PTR)
  contents:
  - "7.4.  PANA-Termination-Request (PTR)\n   The PANA-Termination-Request (PTR) message\
    \ is sent either by the PaC\n   or the PAA to terminate a PANA session.\n   PANA-Termination-Request\
    \ ::= < PANA-Header: 3,REQ >\n                       < Termination-Cause >\n \
    \                     *[ AVP ]\n                    0*1< AUTH >\n"
- title: 7.5.  PANA-Termination-Answer (PTA)
  contents:
  - "7.5.  PANA-Termination-Answer (PTA)\n   The PANA-Termination-Answer (PTA) message\
    \ is sent either by the PaC\n   or the PAA in response to PANA-Termination-Request.\n\
    \   PANA-Termination-Answer ::= < PANA-Header: 3 >\n                      *[ AVP\
    \ ]\n                    0*1< AUTH >\n"
- title: 7.6.  PANA-Notification-Request (PNR)
  contents:
  - "7.6.  PANA-Notification-Request (PNR)\n   The PANA-Notification-Request (PNR)\
    \ message is used for signaling\n   re-authentication and performing liveness\
    \ test.  See Section 4.3 and\n   Section 4.2 for details on re-authentication\
    \ and liveness test,\n   respectively.\n   The message MUST have one of the 'A'\
    \ (re-Authentication) and 'P'\n   (Ping) bits exclusively set.\n   PANA-Notification-Request\
    \ ::= < PANA-Header: 4,REQ[,REA][,PIN] >\n                      *[ AVP ]\n   \
    \                 0*1< AUTH >\n"
- title: 7.7.  PANA-Notification-Answer (PNA)
  contents:
  - "7.7.  PANA-Notification-Answer (PNA)\n   The PANA-Notification-Answer (PNA) message\
    \ is sent by the PAA (PaC)\n   to the PaC (PAA) in response to a PANA-Notification-Request\
    \ from the\n   PaC (PAA).\n   The message MUST have one of the 'A' (re-Authentication)\
    \ and 'P'\n   (Ping) bits exclusively set.\n   PANA-Notification-Answer ::= <\
    \ PANA-Header: 4[,REA][,PIN] >\n                      *[ AVP ]\n             \
    \       0*1< AUTH >\n"
- title: 8.  AVPs in PANA
  contents:
  - "8.  AVPs in PANA\n   This document uses AVP Value Format such as 'OctetString'\
    \ and\n   'Unsigned32' as defined in Section 4.2 of [RFC3588].  The definitions\n\
    \   of these data formats are not repeated in this document.\n   The following\
    \ table lists the AVPs used in this document, and\n   specifies in which PANA\
    \ messages they MAY or MAY NOT be present.\n   The table uses the following symbols:\n\
    \   0     The AVP MUST NOT be present in the message.\n   0-1   Zero or one instance\
    \ of the AVP MAY be present in the message.\n         It is considered an error\
    \ if there is more than one instance of\n         the AVP.\n   1     One instance\
    \ of the AVP MUST be present in the message.\n   0+    Zero or more instances\
    \ of the AVP MAY be present in the\n         message.\n                      \
    \   +---------------------------+\n                         |        Message Type\
    \       |\n                         +---+---+---+---+---+---+---+\n   Attribute\
    \ Name        |PCI|PAR|PAN|PTR|PTA|PNR|PNA|\n   ----------------------+---+---+---+---+---+---+---+\n\
    \   AUTH                  | 0 |0-1|0-1|0-1|0-1|0-1|0-1|\n   EAP-Payload      \
    \     | 0 |0-1|0-1| 0 | 0 | 0 | 0 |\n   Integrity-Algorithm   | 0 |0+ |0-1| 0\
    \ | 0 | 0 | 0 |\n   Key-Id                | 0 |0-1|0-1| 0 | 0 | 0 | 0 |\n   Nonce\
    \                 | 0 |0-1|0-1| 0 | 0 | 0 | 0 |\n   PRF-Algorithm         | 0\
    \ |0+ |0-1| 0 | 0 | 0 | 0 |\n   Result-Code           | 0 |0-1| 0 | 0 | 0 | 0\
    \ | 0 |\n   Session-Lifetime      | 0 |0-1| 0 | 0 | 0 | 0 | 0 |\n   Termination-Cause\
    \     | 0 | 0 | 0 | 1 | 0 | 0 | 0 |\n   ----------------------+---+---+---+---+---+---+---+\n\
    \   Figure 4: AVP Occurrence Table\n"
- title: 8.1.  AUTH AVP
  contents:
  - "8.1.  AUTH AVP\n   The AUTH AVP (AVP Code 1) is used to integrity protect PANA\
    \ messages.\n   The AVP data payload contains the Message Authentication Code\
    \ encoded\n   in network byte order.  The AVP length varies depending on the\n\
    \   integrity algorithm used.  The AVP data is of type OctetString.\n"
- title: 8.2.  EAP-Payload AVP
  contents:
  - "8.2.  EAP-Payload AVP\n   The EAP-Payload AVP (AVP Code 2) is used for encapsulating\
    \ the actual\n   EAP message that is being exchanged between the EAP peer and\
    \ the EAP\n   authenticator.  The AVP data is of type OctetString.\n"
- title: 8.3.  Integrity-Algorithm AVP
  contents:
  - "8.3.  Integrity-Algorithm AVP\n   The Integrity-Algorithm AVP (AVP Code 3) is\
    \ used for conveying the\n   integrity algorithm to compute an AUTH AVP.  The\
    \ AVP data is of type\n   Unsigned32.  The AVP data contains an Internet Key Exchange\
    \ Protocol\n   version 2 (IKEv2) Transform ID of Transform Type 3 [RFC4306] for\
    \ the\n   integrity algorithm.  All PANA implementations MUST support\n   AUTH_HMAC_SHA1_160\
    \ (7) [RFC4595].\n"
- title: 8.4.  Key-Id AVP
  contents:
  - "8.4.  Key-Id AVP\n   The Key-Id AVP (AVP Code 4) is of type Integer32 and contains\
    \ an MSK\n   identifier.  The MSK identifier is assigned by PAA and MUST be unique\n\
    \   within the PANA session.\n"
- title: 8.5.  Nonce AVP
  contents:
  - "8.5.  Nonce AVP\n   The Nonce AVP (AVP Code 5) carries a randomly chosen value\
    \ that is\n   used in cryptographic key computations.  The recommendations in\n\
    \   [RFC4086] apply with regard to generation of random values.  The AVP\n   data\
    \ is of type OctetString, and it contains a randomly generated\n   value in opaque\
    \ format.  The data length MUST be between 8 and 256\n   octets, inclusive.\n\
    \   The length of the nonces are determined based on the available\n   pseudo-random\
    \ functions (PRFs) and the degree of trust placed into\n   the PaC and the PAA\
    \ to compute random values.  The length of the\n   random value for the nonce\
    \ is determined in one of two ways,\n   depending on whether:\n   1.  The PaC\
    \ and the PAA each are likely to be able to compute a\n       random nonce (according\
    \ to [RFC4086]).  The length of the nonce\n       has to be 1/2 the length of\
    \ the PRF key (e.g., 10 octets in the\n       case of HMAC-SHA1).\n   2.  The\
    \ PaC and the PAA each are not trusted with regard to the\n       computation\
    \ of a random nonce (according to [RFC4086]).  The\n       length of the nonce\
    \ has to have the full length of the PRF key\n       (e.g., 20 octets in the case\
    \ of HMAC-SHA1).\n   Furthermore, the strongest available PRF for PANA has to\
    \ be\n   considered in this computation.  Currently, only a single PRF (namely\n\
    \   HMAC-SHA1) is available and therefore the maximum output length is 20\n  \
    \ octets.  Therefore, the maximum length of the nonce value SHOULD be\n   20 octets.\n"
- title: 8.6.  PRF-Algorithm AVP
  contents:
  - "8.6.  PRF-Algorithm AVP\n   The PRF-Algorithm AVP (AVP Code 6) is used for conveying\
    \ the\n   pseudo-random function to derive PANA_AUTH_KEY.  The AVP data is of\n\
    \   type Unsigned32.  The AVP data contains an IKEv2 Transform ID of\n   Transform\
    \ Type 2 [RFC4306].  All PANA implementations MUST support\n   PRF_HMAC_SHA1 (2)\
    \ [RFC2104].\n"
- title: 8.7.  Result-Code AVP
  contents:
  - "8.7.  Result-Code AVP\n   The Result-Code AVP (AVP Code 7) is of type Unsigned32\
    \ and indicates\n   whether an EAP authentication was completed successfully.\n\
    \   Result-Code AVP values are described below.\n   PANA_SUCCESS             \
    \                  0\n      Both authentication and authorization processes are\
    \ successful.\n   PANA_AUTHENTICATION_REJECTED               1\n      Authentication\
    \ has failed.  When authentication fails,\n      authorization is also considered\
    \ to have failed.\n   PANA_AUTHORIZATION_REJECTED                2\n      The\
    \ authorization process has failed.  This error could occur when\n      authorization\
    \ is rejected by a AAA server or rejected locally by a\n      PAA, even if the\
    \ authentication procedure has succeeded.\n"
- title: 8.8.  Session-Lifetime AVP
  contents:
  - "8.8.  Session-Lifetime AVP\n   The Session-Lifetime AVP (AVP Code 8) contains\
    \ the number of seconds\n   remaining before the current session is considered\
    \ expired.  The AVP\n   data is of type Unsigned32.\n"
- title: 8.9.  Termination-Cause AVP
  contents:
  - "8.9.  Termination-Cause AVP\n   The Termination-Cause AVP (AVP Code 9) is used\
    \ for indicating the\n   reason why a session is terminated by the requester.\
    \  The AVP data is\n   of type Enumerated.  The following Termination-Cause data\
    \ values are\n   used with PANA.\n   LOGOUT                   1  (PaC -> PAA)\n\
    \      The client initiated a disconnect.\n   ADMINISTRATIVE           4  (PAA\
    \ -> PaC)\n      The client was not granted access or was disconnected due to\n\
    \      administrative reasons.\n   SESSION_TIMEOUT          8  (PAA -> PaC)\n\
    \      The session has timed out, and service has been terminated.\n"
- title: 9.  Retransmission Timers
  contents:
  - "9.  Retransmission Timers\n   The PANA protocol provides retransmissions for\
    \ the\n   PANA-Client-Initiation message and all request messages.\n   PANA retransmission\
    \ timers are based on the model used in DHCPv6\n   [RFC3315].  Variables used\
    \ here are also borrowed from this\n   specification.  PANA is a request/response-based\
    \ protocol.  The\n   message exchange terminates when the requester successfully\
    \ receives\n   the answer, or the message exchange is considered to have failed\n\
    \   according to the retransmission mechanism described below.\n   The retransmission\
    \ behavior is controlled and described by the\n   following variables:\n     \
    \ RT     Retransmission timeout from the previous (re)transmission\n      IRT\
    \    Base value for RT for the initial retransmission\n      MRC    Maximum retransmission\
    \ count\n      MRT    Maximum retransmission time\n      MRD    Maximum retransmission\
    \ duration\n      RAND   Randomization factor\n   With each message transmission\
    \ or retransmission, the sender sets RT\n   according to the rules given below.\
    \  If RT expires before the message\n   exchange terminates, the sender recomputes\
    \ RT and retransmits the\n   message.\n   Each of the computations of a new RT\
    \ include a randomization factor\n   (RAND), which is a random number chosen with\
    \ a uniform distribution\n   between -0.1 and +0.1.  The randomization factor\
    \ is included to\n   minimize the synchronization of messages.\n   The algorithm\
    \ for choosing a random number does not need to be\n   cryptographically sound.\
    \  The algorithm SHOULD produce a different\n   sequence of random numbers from\
    \ each invocation.\n   RT for the first message retransmission is based on IRT:\n\
    \         RT = IRT + RAND*IRT\n   RT for each subsequent message retransmission\
    \ is based on the\n   previous value of RT:\n         RT = 2*RTprev + RAND*RTprev\n\
    \   MRT specifies an upper bound on the value of RT (disregarding the\n   randomization\
    \ added by the use of RAND).  If MRT has a value of 0,\n   there is no upper limit\
    \ on the value of RT.  Otherwise:\n         if (RT > MRT)\n            RT = MRT\
    \ + RAND*MRT\n   MRC specifies an upper bound on the number of times a sender\
    \ may\n   retransmit a message.  Unless MRC is zero, the message exchange fails\n\
    \   once the sender has transmitted the message MRC times.\n   MRD specifies an\
    \ upper bound on the length of time a sender may\n   retransmit a message.  Unless\
    \ MRD is zero, the message exchange fails\n   once MRD seconds have elapsed since\
    \ the client first transmitted the\n   message.\n   If both MRC and MRD are non-zero,\
    \ the message exchange fails whenever\n   either of the conditions specified in\
    \ the previous two paragraphs are\n   met.\n   If both MRC and MRD are zero, the\
    \ client continues to transmit the\n   message until it receives a response.\n"
- title: 9.1.  Transmission and Retransmission Parameters
  contents:
  - "9.1.  Transmission and Retransmission Parameters\n   This section presents a\
    \ table of values used to describe the message\n   retransmission behavior of\
    \ PANA requests (REQ_*) and PANA-Client-\n   Initiation message (PCI_*).  The\
    \ table shows default values.\n   Parameter       Default   Description\n   ---------------------------------------------------------------------\n\
    \   PCI_IRT           1 sec   Initial PCI timeout.\n   PCI_MRT         120 secs\
    \  Max PCI timeout value.\n   PCI_MRC           0       Max PCI retransmission\
    \ attempts.\n   PCI_MRD           0       Max PCI retransmission duration.\n \
    \  REQ_IRT           1 sec   Initial Request timeout.\n   REQ_MRT          30\
    \ secs  Max Request timeout value.\n   REQ_MRC          10       Max Request retransmission\
    \ attempts.\n   REQ_MRD           0       Max Request retransmission duration.\n\
    \   So, for example, the first RT for the PANA-Auth-Request (PAR) message\n  \
    \ is calculated using REQ_IRT as the IRT:\n         RT = REQ_IRT + RAND*REQ_IRT\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This section provides guidance to the Internet Assigned\
    \ Numbers\n   Authority (IANA) regarding the registration of values related to\
    \ the\n   PANA protocol, in accordance with BCP 26 [IANA].  The following\n  \
    \ policies are used here with the meanings defined in BCP 26: \"Private\n   Use\"\
    , \"First Come First Served\", \"Expert Review\", \"Specification\n   Required\"\
    , \"IETF Consensus\", and \"Standards Action\".\n   This section explains the\
    \ criteria to be used by the IANA for\n   assignment of numbers within namespaces\
    \ defined within this document.\n   For registration requests where a Designated\
    \ Expert should be\n   consulted, the responsible IESG Area Director should appoint\
    \ the\n   Designated Expert.  For Designated Expert with Specification\n   Required,\
    \ the request is posted to the PANA WG mailing list (or, if\n   it has been disbanded,\
    \ a successor designated by the Area Director)\n   for comment and review, and\
    \ MUST include a pointer to a public\n   specification.  Before a period of 30\
    \ days has passed, the Designated\n   Expert will either approve or deny the registration\
    \ request and\n   publish a notice of the decision to the PANA WG mailing list\
    \ or its\n   successor.  A denial notice must be justified by an explanation and,\n\
    \   in the cases where it is possible, concrete suggestions on how the\n   request\
    \ can be modified so as to become acceptable.\n   IANA has created a registry\
    \ for PANA.\n"
- title: 10.1.  PANA UDP Port Number
  contents:
  - "10.1.  PANA UDP Port Number\n   PANA uses one well-known UDP port number (see\
    \ Section 6.1), which has\n   been assigned by the IANA (716).\n"
- title: 10.2.  PANA Message Header
  contents:
  - "10.2.  PANA Message Header\n   As defined in Section 6.2, the PANA message header\
    \ contains two\n   fields that require IANA namespace management; the Message\
    \ Type and\n   Flags fields.\n"
- title: 10.2.1.  Message Type
  contents:
  - "10.2.1.  Message Type\n   The Message Type namespace is used to identify PANA\
    \ messages.\n   Message Type 0 is not used and is not assigned by IANA.  The range\
    \ of\n   values 1 - 65,519 are for permanent, standard message types,\n   allocated\
    \ by IETF Consensus [IANA].  This document defines the range\n   of values 1 -\
    \ 4.  The same Message Type is used for both the request\n   and the answer messages,\
    \ except for type 1.  The Request bit\n   distinguishes requests from answers.\
    \  See Section 7 for the\n   assignment of the namespace in this specification.\n\
    \   The range of values 65,520 - 65,535 (hexadecimal values 0xfff0 -\n   0xffff)\
    \ are reserved for experimental messages.  As these codes are\n   only for experimental\
    \ and testing purposes, no guarantee is made for\n   interoperability between\
    \ the communicating PaC and PAA using\n   experimental commands, as outlined in\
    \ [IANA-EXP].\n"
- title: 10.2.2.  Flags
  contents:
  - "10.2.2.  Flags\n   There are 16 bits in the Flags field of the PANA message header.\n\
    \   This document assigns bit 0 ('R'), 1 ('S'), 2 ('C'), 3 ('A'), 4\n   ('P'),\
    \ and 5 ('I') in Section 6.2.  The remaining bits MUST only be\n   assigned via\
    \ a Standards Action [IANA].\n"
- title: 10.3.  AVP Header
  contents:
  - "10.3.  AVP Header\n   As defined in Section 6.3, the AVP header contains three\
    \ fields that\n   require IANA namespace management; the AVP Code, AVP Flags,\
    \ and\n   Vendor-Id fields, where only the AVP Code and AVP Flags created new\n\
    \   namespaces.\n"
- title: 10.3.1.  AVP Code
  contents:
  - "10.3.1.  AVP Code\n   The 16-bit AVP code namespace is used to identify attributes.\
    \  There\n   are multiple namespaces.  Vendors can have their own AVP codes\n\
    \   namespace, which will be identified by their Vendor-Id (also known as\n  \
    \ Enterprise-Number), and they control the assignments of their\n   vendor-specific\
    \ AVP codes within their own namespace.  The absence of\n   a Vendor-Id identifies\
    \ the IETF IANA controlled AVP codes namespace.\n   The AVP codes, and sometimes\
    \ also possible values in an AVP, are\n   controlled and maintained by IANA.\n\
    \   AVP Code 0 is not used and is not assigned by IANA.  This document\n   defines\
    \ the AVP Codes 1-9.  See Section 8.1 through Section 8.9 for\n   the assignment\
    \ of the namespace in this specification.\n   AVPs may be allocated following\
    \ Designated Expert Review with\n   Specification Required [IANA] or Standards\
    \ Action.\n   Note that PANA defines a mechanism for Vendor-Specific AVPs, where\n\
    \   the Vendor-Id field in the AVP header is set to a non-zero value.\n   Vendor-Specific\
    \ AVP codes are for Private Use and should be\n   encouraged instead of allocation\
    \ of global attribute types, for\n   functions specific only to one vendor's implementation\
    \ of PANA, where\n   no interoperability is deemed useful.  Where a Vendor-Specific\
    \ AVP is\n   implemented by more than one vendor, allocation of global AVPs should\n\
    \   be encouraged instead.\n"
- title: 10.3.2.  Flags
  contents:
  - "10.3.2.  Flags\n   There are 16 bits in the AVP Flags field of the AVP header,\
    \ defined\n   in Section 6.3.  This document assigns bit 0 ('V').  The remaining\n\
    \   bits should only be assigned via a Standards Action .\n"
- title: 10.4.  AVP Values
  contents:
  - "10.4.  AVP Values\n   Certain AVPs in PANA define a list of values with various\
    \ meanings.\n   For attributes other than those specified in this section, adding\n\
    \   additional values to the list can be done on a First Come, First\n   Served\
    \ basis by IANA [IANA].\n"
- title: 10.4.1.  Result-Code AVP Values
  contents:
  - "10.4.1.  Result-Code AVP Values\n   As defined in Section 8.7, the Result-Code\
    \ AVP (AVP Code 7) defines\n   the values 0-2.\n   All remaining values are available\
    \ for assignment via IETF Consensus\n   [IANA].\n"
- title: 10.4.2.  Termination-Cause AVP Values
  contents:
  - "10.4.2.  Termination-Cause AVP Values\n   As defined in Section 8.9, the Termination-Cause\
    \ AVP (AVP Code 9)\n   defines the values 1, 4, and 8.\n   All remaining values\
    \ are available for assignment via IETF Consensus\n   [IANA].\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   The PANA protocol defines a UDP-based EAP encapsulation\
    \ that runs\n   between two IP-enabled nodes.  Various security threats that are\n\
    \   relevant to a protocol of this nature are outlined in [RFC4016].\n   Security\
    \ considerations stemming from the use of EAP and EAP methods\n   are discussed\
    \ in [RFC3748] [EAP-KEYING].  This section provides a\n   discussion on the security-related\
    \ issues that are related to PANA\n   framework and protocol design.\n   An important\
    \ element in assessing the security of PANA design and\n   deployment in a network\
    \ is the presence of lower-layer security.  In\n   the context of this document,\
    \ lower layers are said to be secure if\n   the environment provides adequate\
    \ protection against spoofing and\n   confidentiality based on its operational\
    \ needs.  For example, DSL and\n   cdma2000 networks' lower-layer security is\
    \ enabled even before\n   running the first PANA-based authentication.  In the\
    \ absence of such\n   a preestablished secure channel prior to running PANA, one\
    \ can be\n   created after the successful PANA authentication using a link-layer\n\
    \   or network-layer cryptographic mechanism (e.g., IPsec).\n"
- title: 11.1.  General Security Measures
  contents:
  - "11.1.  General Security Measures\n   PANA provides multiple mechanisms to secure\
    \ a PANA session.\n   PANA messages carry sequence numbers, which are monotonically\n\
    \   incremented by 1 with every new request message.  These numbers are\n   randomly\
    \ initialized at the beginning of the session, and they are\n   verified against\
    \ expected numbers upon receipt.  A message whose\n   sequence number is different\
    \ than the expected one is silently\n   discarded.  In addition to accomplishing\
    \ orderly delivery of EAP\n   messages and duplicate elimination, this scheme\
    \ also helps prevent an\n   adversary from spoofing messages to disturb ongoing\
    \ PANA and EAP\n   sessions unless it can also eavesdrop to synchronize with the\n\
    \   expected sequence number.  Furthermore, impact of replay attacks is\n   reduced\
    \ as any stale message (i.e., a request or answer with an\n   unexpected sequence\
    \ number and/or a session identifier for a\n   non-existing session) and any duplicate\
    \ answer are immediately\n   discarded, and a duplicate request can trigger transmission\
    \ of the\n   cached answer (i.e., no need to process the request and generate\
    \ a\n   new answer).\n   The PANA framework defines EP, which is ideally located\
    \ on a network\n   device that can filter traffic from the PaCs before the traffic\n\
    \   enters the Internet/intranet.  A set of filters can be used to\n   discard\
    \ unauthorized packets, such as the initial PANA-Auth-Request\n   message that\
    \ is received from the segment of the access network,\n   where only the PaCs\
    \ are supposed to be connected (i.e., preventing\n   PAA impersonation).\n   The\
    \ protocol also provides authentication and integrity protection to\n   PANA messages\
    \ when the used EAP method can generate cryptographic\n   session keys.  A PANA\
    \ SA is generated based on the MSK exported by\n   the EAP method.  This SA is\
    \ used for generating an AUTH AVP to\n   protect the PANA message header and payload\
    \ (including the complete\n   EAP message).\n   The cryptographic protection prevents\
    \ an adversary from acting as a\n   man-in-the-middle, injecting messages, replaying\
    \ messages and\n   modifying the content of the exchanged messages.  Any packet\
    \ that\n   fails to pass the AUTH verification is silently discarded.  The\n \
    \  earliest this protection can be enabled is when the PANA-Auth-Request\n   message\
    \ that signals a successful authentication (EAP Success) is\n   generated.  Starting\
    \ with these messages, any subsequent PANA message\n   can be cryptographically\
    \ protected until the session gets torn down.\n   The lifetime of the PANA SA\
    \ is set to the PANA session lifetime,\n   which is bounded by the authorization\
    \ lifetime granted by the\n   authentication server.  An implementation MAY add\
    \ a grace period to\n   that value.  Unless the PANA session is extended by executing\
    \ another\n   EAP authentication, the PANA SA is removed when the current session\n\
    \   expires.\n   The ability to use cryptographic protection within PANA is determined\n\
    \   by the used EAP method, which is generally dictated by the deployment\n  \
    \ environment.  Insecure lower layers necessitate the use of\n   key-generating\
    \ EAP methods.  In networks where lower layers are\n   already secured, cryptographic\
    \ protection of PANA messages is not\n   necessary.\n"
- title: 11.2.  Initial Exchange
  contents:
  - "11.2.  Initial Exchange\n   The initial PANA-Auth-Request and PANA-Auth-Answer\
    \ exchange is\n   vulnerable to spoofing attacks as these messages are not\n \
    \  authenticated and integrity protected.  In order to prevent very\n   basic\
    \ DoS attacks, an adversary should not be able to cause state\n   creation by\
    \ sending PANA-Client-Initiation messages to the PAA.  This\n   protection is\
    \ achieved by allowing the responder (PAA) to create as\n   little state as possible\
    \ in the initial message exchange.  However,\n   it is difficult to prevent all\
    \ spoofing attacks in the initial\n   message exchange entirely.\n"
- title: 11.3.  EAP Methods
  contents:
  - "11.3.  EAP Methods\n   Eavesdropping EAP messages might cause problems when the\
    \ EAP method\n   is weak and enables dictionary or replay attacks or even allows\
    \ an\n   adversary to learn the long-term password directly.  Furthermore, if\n\
    \   the optional EAP Response/Identity payload is used, then it allows\n   the\
    \ adversary to learn the identity of the PaC.  In such a case, a\n   privacy problem\
    \ is prevalent.\n   To prevent these threats, [RFC5193] suggests using proper\
    \ EAP methods\n   for particular environments.  Depending on the deployment\n\
    \   environment, an EAP authentication method that supports user-identity\n  \
    \ confidentiality, protection against dictionary attacks, and\n   session-key\
    \ establishment must be used.  It is therefore the\n   responsibility of the network\
    \ operators and users to choose a proper\n   EAP method.\n"
- title: 11.4.  Cryptographic Keys
  contents:
  - "11.4.  Cryptographic Keys\n   When the EAP method exports an MSK, this key is\
    \ used to produce a\n   PANA SA with PANA_AUTH_KEY with a distinct key ID.  The\
    \ PANA_AUTH_KEY\n   is unique to the PANA session, and it takes PANA-based nonce\
    \ values\n   into computation to cryptographically separate itself from the MSK.\n\
    \   The PANA_AUTH_KEY is solely used for the authentication and integrity\n  \
    \ protection of the PANA messages within the designated session.\n   The PANA\
    \ SA lifetime is bounded by the MSK lifetime.  Another\n   execution of the EAP\
    \ method yields a new MSK, and it updates the PANA\n   SA, PANA_AUTH_KEY, and\
    \ key ID.\n"
- title: 11.5.  Per-Packet Ciphering
  contents:
  - "11.5.  Per-Packet Ciphering\n   Networks that are not secured at the lower layers\
    \ prior to running\n   PANA can rely on enabling per-packet data-traffic ciphering\
    \ upon\n   successful PANA SA establishment.  The PANA framework allows\n   generation\
    \ of cryptographic keys from the PANA SA and uses the keys\n   with a secure association\
    \ protocol to enable per-packet cryptographic\n   protection, such as link-layer\
    \ or IPsec-based ciphering [PANA-IPSEC].\n   These mechanisms ultimately establish\
    \ a cryptographic binding between\n   the data traffic generated by and for a\
    \ client and the authenticated\n   identity of the client.  Data traffic can be\
    \ data origin\n   authenticated, replay and integrity protected, and optionally\n\
    \   encrypted using the cryptographic keys.  How these keys are generated\n  \
    \ from the PANA SA and used with a secure association protocol is\n   outside\
    \ the scope of this document.\n"
- title: 11.6.  PAA-to-EP Communication
  contents:
  - "11.6.  PAA-to-EP Communication\n   The PANA framework allows separation of PAA\
    \ from EP.  The protocol\n   exchange between the PAA and EP for provisioning\
    \ authorized PaC\n   information on the EP must be protected for authentication,\n\
    \   integrity, and replay protection.\n"
- title: 11.7.  Liveness Test
  contents:
  - "11.7.  Liveness Test\n   A PANA session is associated with a session lifetime.\
    \  The session is\n   terminated unless it is refreshed by a new round of EAP\n\
    \   authentication before it expires.  Therefore, the latest a\n   disconnected\
    \ client can be detected is when its session expires.  A\n   disconnect may also\
    \ be detected earlier by using PANA ping messages.\n   A request message can be\
    \ generated by either PaC or PAA at any time\n   in access phase with the expectation\
    \ that the peer responds with an\n   answer message.  A successful round-trip\
    \ of this exchange is a simple\n   verification that the peer is alive.\n   This\
    \ test can be engaged when there is a possibility that the peer\n   might have\
    \ disconnected (e.g., after the discontinuation of data\n   traffic for an extended\
    \ period of time).  Periodic use of this\n   exchange as a keep-alive requires\
    \ additional care, as it might result\n   in congestion and hence false alarms.\n\
    \   This exchange is cryptographically protected when a PANA SA is\n   available\
    \ in order to prevent threats associated with the abuse of\n   this functionality.\n\
    \   Any valid PANA answer message received in response to a recently sent\n  \
    \ request message can be taken as an indication of a peer's liveness.\n   The\
    \ PaC or PAA MAY forgo sending an explicit ping request message if\n   a recent\
    \ exchange has already confirmed that the peer is alive.\n"
- title: 11.8.  Early Termination of a Session
  contents:
  - "11.8.  Early Termination of a Session\n   The PANA protocol supports the ability\
    \ for both the PaC and the PAA\n   to transmit a tear-down message before the\
    \ session lifetime expires.\n   This message causes state removal, a stop of the\
    \ accounting procedure\n   and removes the installed per-PaC state on the EP(s).\
    \  This message\n   is cryptographically protected when PANA SA is present.\n"
- title: 12.  Acknowledgments
  contents:
  - "12.  Acknowledgments\n   We would like to thank Mark Townsley, Jari Arkko, Mohan\n\
    \   Parthasarathy, Julien Bournelle, Rafael Marin Lopez, Pasi Eronen,\n   Randy\
    \ Turner, Erik Nordmark, Lionel Morand, Avi Lior, Susan Thomson,\n   Giaretta\
    \ Gerardo, Joseph Salowey, Sasikanth Bharadwaj, Spencer\n   Dawkins, Tom Yu, Bernard\
    \ Aboba, Subir Das, John Vollbrecht, Prakash\n   Jayaraman, and all members of\
    \ the PANA working group for their\n   valuable comments on this document.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [RFC2104]     Krawczyk, H., Bellare, M., and\
    \ R. Canetti, \"HMAC:\n                 Keyed-Hashing for Message Authentication\"\
    , RFC 2104,\n                 February 1997.\n   [RFC2119]     Bradner, S., \"\
    Key words for use in RFCs to Indicate\n                 Requirement Levels\",\
    \ BCP 14, RFC 2119, March 1997.\n   [RFC3588]     Calhoun, P., Loughney, J., Guttman,\
    \ E., Zorn, G., and\n                 J. Arkko, \"Diameter Base Protocol\", RFC\
    \ 3588, September\n                 2003.\n   [RFC3748]     Aboba, B., Blunk,\
    \ L., Vollbrecht, J., Carlson, J., and\n                 H. Levkowetz, Ed., \"\
    Extensible Authentication Protocol\n                 (EAP)\", RFC 3748, June 2004.\n\
    \   [RFC4086]     Eastlake, D., 3rd, Schiller, J., and S. Crocker,\n         \
    \        \"Randomness Requirements for Security\", BCP 106, RFC\n            \
    \     4086, June 2005.\n   [RFC5234]     Crocker, D., Ed., and P. Overell, \"\
    Augmented BNF for\n                 Syntax Specifications: ABNF\", STD 68, RFC\
    \ 5234, January\n                 2008.\n   [RFC5192]     Morand, L., Yegin A.,\
    \ Kumar S., and S. Madanapalli,\n                 \"DHCP Options for Protocol\
    \ for Carrying Authentication\n                 for Network Access (PANA) Authentication\
    \ Agents\", RFC\n                 5192, May 2008.\n   [IANA]        Narten, T.\
    \ and H. Alvestrand, \"Guidelines for Writing\n                 an IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC\n                 2434, October 1998.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [RFC3315]     Droms, R., Ed., Bound, J., Volz,\
    \ B., Lemon, T.,\n                 Perkins, C., and M. Carney, \"Dynamic Host\
    \ Configuration\n                 Protocol for IPv6 (DHCPv6)\", RFC 3315, July\
    \ 2003.\n   [RFC4016]     Parthasarathy, M., \"Protocol for Carrying\n       \
    \          Authentication and Network Access (PANA) Threat\n                 Analysis\
    \ and Security Requirements\", RFC 4016, March\n                 2005.\n   [RFC4058]\
    \     Yegin, A., Ed., Ohba, Y., Penno, R., Tsirtsis, G., and\n               \
    \  C. Wang, \"Protocol for Carrying Authentication for\n                 Network\
    \ Access (PANA) Requirements\", RFC 4058, May\n                 2005.\n   [RFC4137]\
    \     Vollbrecht, J., Eronen, P., Petroni, N., and Y. Ohba,\n                \
    \ \"State Machines for Extensible Authentication Protocol\n                 (EAP)\
    \ Peer and Authenticator\", RFC 4137, August 2005.\n   [RFC4306]     Kaufman,\
    \ C., Ed., \"Internet Key Exchange (IKEv2)\n                 Protocol\", RFC 4306,\
    \ December 2005.\n   [RFC4595]     Maino, F. and D. Black, \"Use of IKEv2 in the\
    \ Fibre\n                 Channel Security Association Management Protocol\",\
    \ RFC\n                 4595, July 2006.\n   [RFC5193]     Jayaraman, P., Lopez\
    \ R., Ohba Y., Ed., Parthasarathy,\n                 M., and A. Yegin, \"Protocol\
    \ for Carrying Authentication\n                 for Network Access (PANA) Framework\"\
    , RFC 5193, May\n                 2008.\n   [EAP-KEYING]  Aboba, B., Simon D.,\
    \ and P. Eronen, \"Extensible\n                 Authentication Protocol (EAP)\
    \ Key Management\n                 Framework\", Work in Progress, November 2007.\n\
    \   [PANA-IPSEC]  Parthasarathy, M., \"PANA Enabling IPsec based Access\n    \
    \             Control\", Work in progress, July 2005.\n   [IANAWEB]     IANA,\
    \ \"Number assignment\", http://www.iana.org.\n   [IANA-EXP]    Narten, T., \"\
    Assigning Experimental and Testing Numbers\n                 Considered Useful\"\
    , BCP 82, RFC 3692, January 2004.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dan Forsberg\n   Nokia Research Center\n   P.O. Box 407\n\
    \   FIN-00045 NOKIA GROUP\n   Finland\n   Phone: +358 50 4839470\n   EMail: dan.forsberg@nokia.com\n\
    \   Yoshihiro Ohba\n   Toshiba America Research, Inc.\n   1 Telcordia Drive\n\
    \   Piscataway, NJ  08854\n   USA\n   Phone: +1 732 699 5305\n   EMail: yohba@tari.toshiba.com\n\
    \   Basavaraj Patil\n   Nokia Siemens Networks\n   6000 Connection Drive\n   Irving,\
    \ TX  75039\n   USA\n   EMail: basavaraj.patil@nsn.com\n   Hannes Tschofenig\n\
    \   Nokia Siemens Networks\n   Linnoitustie 6 Espoo 02600\n   Finland\n   Phone:\
    \ +358 (50) 4871445\n   EMail: Hannes.Tschofenig@nsn.com\n   URI: http://www.tschofenig.priv.at\n\
    \   Alper E. Yegin\n   Samsung\n   Istanbul, Turkey\n   EMail: a.yegin@partner.samsung.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
