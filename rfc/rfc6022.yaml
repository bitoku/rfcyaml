- title: __initial_text__
  contents:
  - '                   YANG Module for NETCONF Monitoring

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines a Network Configuration Protocol (NETCONF)\
    \ data\n   model to be used to monitor the NETCONF protocol.  The monitoring\n\
    \   data model includes information about NETCONF datastores, sessions,\n   locks,\
    \ and statistics.  This data facilitates the management of a\n   NETCONF server.\
    \  This document also defines methods for NETCONF\n   clients to discover data\
    \ models supported by a NETCONF server and\n   defines a new NETCONF <get-schema>\
    \ operation to retrieve them.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6022.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Definition of Terms ........................................3\n  \
    \ 2. Data Model to Monitor NETCONF ...................................3\n    \
    \  2.1. The /netconf-state Subtree .................................3\n      \
    \     2.1.1. The /netconf-state/capabilities Subtree .............4\n        \
    \   2.1.2. The /netconf-state/datastores Subtree ...............4\n          \
    \ 2.1.3. The /netconf-state/schemas Subtree ..................5\n           2.1.4.\
    \ The /netconf-state/sessions Subtree .................6\n           2.1.5. The\
    \ /netconf-state/statistics Subtree ...............7\n   3. Schema Specific Operations\
    \ ......................................8\n      3.1. The <get-schema> Operation\
    \ .................................8\n   4. Examples ........................................................9\n\
    \      4.1. Retrieving Schema List via <get> Operation .................9\n  \
    \    4.2. Retrieving Schema Instances ...............................11\n   5.\
    \ NETCONF Monitoring Data Model ..................................13\n   6. Security\
    \ Considerations ........................................25\n   7. Acknowledgements\
    \ ...............................................26\n   8. IANA Considerations\
    \ ............................................26\n   9. References .....................................................26\n\
    \      9.1. Normative References ......................................26\n  \
    \    9.2. Informative References ....................................27\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a YANG [RFC6020] model to be used\
    \ to monitor\n   the NETCONF protocol.  It provides information about NETCONF\
    \ sessions\n   and supported schema as defined in [RFC4741].\n   Considerations\
    \ such as different schema formats, feature optionality,\n   and access controls\
    \ can all impact the applicability and level of\n   detail the NETCONF server\
    \ sends to a client during session setup.\n   The methods defined in this document\
    \ address the need for further\n   means to query and retrieve schema and NETCONF\
    \ state information from\n   a NETCONF server.  These are provided to complement\
    \ existing base\n   NETCONF capabilities and operations and in no way affect existing\n\
    \   behaviour.\n   A new <get-schema> operation is also defined to support explicit\n\
    \   schema retrieval via NETCONF.\n"
- title: 1.1.  Definition of Terms
  contents:
  - "1.1.  Definition of Terms\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in BCP\n   14 [RFC2119].\n"
- title: 2.  Data Model to Monitor NETCONF
  contents:
  - "2.  Data Model to Monitor NETCONF\n   The NETCONF monitoring data model defined\
    \ in this document provides\n   operational information on the NETCONF server.\
    \  This includes details\n   specific to the NETCONF protocol (e.g., protocol-specific\
    \ counters\n   such as 'in-sessions') as well as data related to schema retrieval\n\
    \   (e.g., schema list).\n   A server that implements the data model defined in\
    \ this document\n   (\"urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\")\
    \ MUST\n   advertise the capability URI as described in [RFC6020].\n   This section\
    \ presents an overview of the monitoring data model.  For\n   detailed descriptions,\
    \ refer to the normative YANG module provided in\n   this document (see Section\
    \ 5).\n"
- title: 2.1.  The /netconf-state Subtree
  contents:
  - "2.1.  The /netconf-state Subtree\n   The netconf-state container is the root\
    \ of the monitoring data model.\n   netconf-state\n       /capabilities\n    \
    \   /datastores\n       /schemas\n       /sessions\n       /statistics\n   capabilities\n\
    \      List of NETCONF capabilities supported by the server.\n   datastores\n\
    \      List of NETCONF configuration datastores (e.g., running, startup,\n   \
    \   candidate) supported on this device and related information.\n   schemas\n\
    \      List of schemas supported on the server.  Includes all the\n      information\
    \ required to identify the schemas and to support their\n      retrieval.\n  \
    \ sessions\n      List of all active NETCONF sessions on the device.  Includes\
    \ per-\n      session counters for all NETCONF sessions.\n   statistics\n    \
    \  Includes global counters for the NETCONF server.\n"
- title: 2.1.1.  The /netconf-state/capabilities Subtree
  contents:
  - "2.1.1.  The /netconf-state/capabilities Subtree\n   The /netconf-state/capabilities\
    \ subtree contains the capabilities\n   supported by the NETCONF server.  The\
    \ list MUST include all\n   capabilities exchanged during session setup still\
    \ applicable at the\n   time of the request.\n"
- title: 2.1.2.  The /netconf-state/datastores Subtree
  contents:
  - "2.1.2.  The /netconf-state/datastores Subtree\n   The /netconf-state/datastores\
    \ subtree contains the list of available\n   datastores for the NETCONF server\
    \ and includes information on their\n   lock state.\n   datastore\n       /name\n\
    \       /locks\n   name (leaf, netconf-datastore-type)\n      Enumeration of supported\
    \ datastores; candidate, running, startup.\n   locks (grouping, lock-info)\n \
    \     List of locks for the datastore.  Information is provided for both\n   \
    \   global and partial locks [RFC5717].  For partial locks, the list\n      of\
    \ locked nodes and the select expressions originally used to\n      request the\
    \ lock are returned.\n"
- title: 2.1.3.  The /netconf-state/schemas Subtree
  contents:
  - "2.1.3.  The /netconf-state/schemas Subtree\n   The list of supported schema for\
    \ the NETCONF server.\n   schema\n       /identifier   (key)\n       /version\
    \      (key)\n       /format       (key)\n       /namespace\n       /location\n\
    \   The elements identifier, version, and format are used as a key in the\n  \
    \ schema list.  These are used in the <get-schema> operation.\n   identifier (string)\n\
    \      Identifier for the schema list entry.  The identifier is used in\n    \
    \  the <get-schema> operation and may be used for other means such as\n      file\
    \ retrieval.\n   version (string)\n      Version of the schema supported.  Multiple\
    \ versions MAY be\n      supported simultaneously by a NETCONF server.  Each version\
    \ MUST\n      be reported individually in the schema list, i.e., with same\n \
    \     identifier, possibly different location, but different version.\n      For\
    \ YANG data models, version is the value of the most recent YANG\n      'revision'\
    \ statement in the module or submodule, or the empty\n      string if no 'revision'\
    \ statement is present.\n   format (identifyref, schema-format)\n      The data\
    \ modeling language the schema is written in.  The data\n      modeling language\
    \ is represented as a YANG identity.  This\n      document defines the identities\
    \ \"xsd\", \"yang\", \"yin\", \"rng\", and\n      \"rnc\" (see Section 5).\n \
    \  namespace (inet:uri)\n      The Extensible Markup Language (XML) namespace\
    \ [XML-NAMES] defined\n      by the schema.\n   location (union: enum, inet:uri)\n\
    \      One or more locations from which this specific schema can be\n      retrieved.\
    \  The list SHOULD contain at least one entry per schema.\n"
- title: 2.1.4.  The /netconf-state/sessions Subtree
  contents:
  - "2.1.4.  The /netconf-state/sessions Subtree\n   Includes session-specific data\
    \ for NETCONF management sessions.  The\n   session list MUST include all currently\
    \ active NETCONF sessions.\n   session\n       /session-id (key)\n       /transport\n\
    \       /username\n       /source-host\n       /login-time\n       /in-rpcs\n\
    \       /in-bad-rpcs\n       /out-rpc-errors\n       /out-notifications\n   session-id\
    \ (uint32, 1..max)\n      Unique identifier for the session.  This value is the\
    \ NETCONF\n      session identifier, as defined in [RFC4741].\n   transport (identityref,\
    \ transport)\n      Identifies the transport for each session.  The transport\
    \ is\n      represented as a YANG identity.  This document defines the\n     \
    \ identities \"netconf-ssh\", \"netconf-soap-over-beep\", \"netconf-soap-\n  \
    \    over-https\", \"netconf-beep\", and \"netconf-tls\" (see Section 5).\n  \
    \ username (string)\n      The username is the client identity that was authenticated\
    \ by the\n      NETCONF transport protocol.  The algorithm used to derive the\n\
    \      username is NETCONF transport protocol specific and in addition\n     \
    \ specific to the authentication mechanism used by the NETCONF\n      transport\
    \ protocol.\n   source-host (inet:host)\n      Host identifier (IP address or\
    \ name) of the NETCONF client.\n   login-time (yang:date-and-time)\n      Time\
    \ at the server at which the session was established.\n   in-rpcs (yang:zero-based-counter32)\n\
    \      Number of correct <rpc> messages received.\n   in-bad-rpcs (yang:zero-based-counter32)\n\
    \      Number of messages received when an <rpc> message was expected,\n     \
    \ that were not correct <rpc> messages.  This includes XML parse\n      errors\
    \ and errors on the rpc layer.\n   out-rpc-errors (yang:zero-based-counter32)\n\
    \      Number of <rpc-reply> messages sent that contained an <rpc-error>\n   \
    \   element.\n   out-notifications (yang:zero-based-counter32)\n      Number of\
    \ <notification> messages sent.\n"
- title: 2.1.5.  The /netconf-state/statistics Subtree
  contents:
  - "2.1.5.  The /netconf-state/statistics Subtree\n   Statistical data pertaining\
    \ to the NETCONF server.\n   statistics\n       /netconf-start-time\n       /in-bad-hellos\n\
    \       /in-sessions\n       /dropped-sessions\n       /in-rpcs\n       /in-bad-rpcs\n\
    \       /out-rpc-errors\n       /out-notifications\n   statistics:\n      Contains\
    \ management-session-related performance data for the\n      NETCONF server.\n\
    \   netconf-start-time (yang:date-and-time)\n      Date and time at which the\
    \ management subsystem was started.\n   in-bad-hellos (yang:zero-based-counter32)\n\
    \      Number of sessions silently dropped because an invalid <hello>\n      message\
    \ was received.\n   in-sessions (yang:zero-based-counter32)\n      Number of sessions\
    \ started.\n   dropped-sessions (yang:zero-based-counter32)\n      Number of sessions\
    \ that were abnormally terminated, e.g., due to\n      idle timeout or transport\
    \ close.\n   in-rpcs (yang:zero-based-counter32)\n      Number of correct <rpc>\
    \ messages received.\n   in-bad-rpcs (yang:zero-based-counter32)\n      Number\
    \ of messages received when an <rpc> message was expected,\n      which were not\
    \ correct <rpc> messages.\n   out-rpc-errors (yang:zero-based-counter32)\n   \
    \   Number of <rpc-reply> messages sent that contained an <rpc-error>\n      element.\n\
    \   out-notifications (yang:zero-based-counter32)\n      Number of <notification>\
    \ messages sent.\n"
- title: 3.  Schema Specific Operations
  contents:
  - '3.  Schema Specific Operations

    '
- title: 3.1.  The <get-schema> Operation
  contents:
  - "3.1.  The <get-schema> Operation\n   Description:\n      This operation is used\
    \ to retrieve a schema from the NETCONF\n      server.\n   Parameters:\n     \
    \ identifier (string):\n         Identifier for the schema list entry.\n     \
    \    Mandatory parameter.\n      version (string):\n         Version of the schema\
    \ requested.\n         Optional parameter.\n      format (identityref, schema-format):\n\
    \         The data modeling language of the schema.\n         Default value is\
    \ 'yang' when not specified.\n         Optional parameter.\n   Positive Response:\n\
    \      The NETCONF server returns the requested schema.\n   Negative Response:\n\
    \      If the requested schema does not exist, the <error-tag> is\n      'invalid-value'.\n\
    \      If more than one schema matches the requested parameters, the\n      <error-tag>\
    \ is 'operation-failed', and <error-app-tag> is\n      'data-not-unique'.\n"
- title: 4.  Examples
  contents:
  - '4.  Examples

    '
- title: 4.1.  Retrieving Schema List via <get> Operation
  contents:
  - "4.1.  Retrieving Schema List via <get> Operation\n   A NETCONF client retrieves\
    \ the list of supported schema from a\n   NETCONF server by retrieving the /netconf-state/schemas\
    \ subtree via a\n   <get> operation.\n   Available schema for the requesting session\
    \ are returned in the reply\n   containing the <identifier>, <version>, <format>,\
    \ and <location>\n   elements.\n   The response data can be used to determine\
    \ the available schema and\n   their versions.  The schema itself (i.e., schema\
    \ content) is not\n   returned in the response.  The optional <location> element\
    \ contains a\n   URI, which can be used to retrieve the schema by another protocol\n\
    \   such as ftp [RFC0959] or http(s) [RFC2616] [RFC2818], or the special\n   value\
    \ 'NETCONF', which means that the schema can be retrieved from\n   the device\
    \ via the <get-schema> operation.\n   Example:\n"
- title: <rpc message-id="101"
  contents:
  - "<rpc message-id=\"101\"\n     xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n  <get>\n    <filter type=\"subtree\">\n      <netconf-state xmlns=\n     \
    \ \"urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\">\n        <schemas/>\n\
    \      </netconf-state>\n    </filter>\n  </get>\n"
- title: </rpc>
  contents:
  - "</rpc>\n   The NETCONF server returns a list of schema available for\n   retrieval.\n"
- title: <rpc-reply message-id="101"
  contents:
  - "<rpc-reply message-id=\"101\"\n           xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n  <data>\n    <netconf-state\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\"\
    >\n      <schemas>\n        <schema>\n          <identifier>foo</identifier>\n\
    \          <version>1.0</version>\n          <format>xsd</format>\n          <namespace>http://example.com/foo</namespace>\n\
    \          <location>ftp://ftp.example.com/schemas/foo_1.0.xsd</location>\n  \
    \        <location>http://www.example.com/schema/foo_1.0.xsd</location>\n    \
    \      <location>NETCONF</location>\n        </schema>\n        <schema>\n   \
    \       <identifier>foo</identifier>\n          <version>1.1</version>\n     \
    \     <format>xsd</format>\n          <namespace>http://example.com/foo</namespace>\n\
    \          <location>ftp://ftp.example.com/schemas/foo_1.1.xsd</location>\n  \
    \        <location>http://www.example.com/schema/foo_1.1.xsd</location>\n    \
    \      <location>NETCONF</location>\n        </schema>\n        <schema>\n   \
    \       <identifier>bar</identifier>\n          <version>2008-06-01</version>\n\
    \          <format>yang</format>\n          <namespace>http://example.com/bar</namespace>\n\
    \          <location>\n            http://example.com/schema/bar@2008-06-01.yang\n\
    \          </location>\n          <location>NETCONF</location>\n        </schema>\n\
    \        <schema>\n          <identifier>bar-types</identifier>\n          <version>2008-06-01</version>\n\
    \          <format>yang</format>\n          <namespace>http://example.com/bar</namespace>\n\
    \          <location>\n            http://example.com/schema/bar-types@2008-06-01.yang\n\
    \          </location>\n          <location>NETCONF</location>\n        </schema>\n\
    \      </schemas>\n    </netconf-state>\n  </data>\n"
- title: </rpc-reply>
  contents:
  - '</rpc-reply>

    '
- title: 4.2.  Retrieving Schema Instances
  contents:
  - "4.2.  Retrieving Schema Instances\n   Given the reply in the previous section,\
    \ the following examples\n   illustrate the retrieval of 'foo', 'bar', and 'bar-types'\
    \ schema at\n   multiple locations, with multiple formats, and in multiple locations.\n\
    \     1.  foo,  version 1.0 in xsd format:\n       a.  Via FTP using location\n\
    \           ftp://ftp.example.com/schemas/foo_1.0.xsd\n       b.  Via HTTP using\
    \ location\n           http://www.example.com/schema/foo_1.0.xsd\n       c.  Via\
    \ <get-schema> using identifier, version, and\n           format parameters.\n\
    \       <rpc message-id=\"101\"\n         xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n         <get-schema\n         xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\"\
    >\n           <identifier>foo</identifier>\n           <version>1.0</version>\n\
    \           <format>xsd</format>\n         </get-schema>\n       </rpc>\n    \
    \   <rpc-reply message-id=\"101\"\n         xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n         <data\n         xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\"\
    >\n           <xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n    \
    \         <!-- foo 1.0 xsd schema contents here -->\n           </xs:schema>\n\
    \         </data>\n       </rpc-reply>\n     2. bar, version 2008-06-01 in YANG\
    \ format:\n       a.  Via HTTP using location\n           http://example.com/schema/bar@2008-06-01.yang\n\
    \       b.  Via <get-schema> using identifier and version\n           parameters:\n\
    \         <rpc message-id=\"102\"\n           xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n           <get-schema\n           xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\"\
    >\n             <identifer>bar</identifer>\n             <version>2008-06-01</version>\n\
    \           </get-schema>\n         </rpc>\n         <rpc-reply message-id=\"\
    102\"\n           xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n       \
    \    <data\n           xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\"\
    >\n             module bar {\n               //default format (yang) returned\n\
    \               //bar version 2008-06-01 yang module\n               //contents\
    \ here ...\n             }\n           </data>\n         </rpc-reply>\n     3.\
    \ bar-types, version 2008-06-01 in default YANG format:\n       a. Via <get-schema>\
    \ using identifer parameter:\n       <rpc message-id=\"103\"\n         xmlns=\"\
    urn:ietf:params:xml:ns:netconf:base:1.0\">\n         <get-schema\n         xmlns=\"\
    urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\">\n           <identifer>bar-types</identifer>\n\
    \         </get-schema>\n       </rpc>\n       <rpc-reply message-id=\"103\"\n\
    \         xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n         <data\n\
    \         xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\">\n   \
    \        module bar-types {\n             //default format (yang) returned\n \
    \            //latest revision returned\n             //is version 2008-06-01\
    \ yang module\n             //contents here ...\n           }\n         </data>\n\
    \       </rpc-reply>\n"
- title: 5.  NETCONF Monitoring Data Model
  contents:
  - "5.  NETCONF Monitoring Data Model\n   The data model described in this memo is\
    \ defined in the following\n   YANG module.\n   This YANG module imports typedefs\
    \ from [RFC6021] and references\n   [RFC4741], [RFC4742], [RFC4743], [RFC4744],\
    \ [RFC5539], [xmlschema-1],\n   [RFC6020], [ISO/IEC19757-2:2008], and [RFC5717].\n"
- title: <CODE BEGINS> file "ietf-netconf-monitoring@2010-10-04.yang"
  contents:
  - '<CODE BEGINS> file "ietf-netconf-monitoring@2010-10-04.yang"

    '
- title: module ietf-netconf-monitoring {
  contents:
  - "module ietf-netconf-monitoring {\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\"\
    ;\n  prefix \"ncm\";\n  import ietf-yang-types { prefix yang; }\n  import ietf-inet-types\
    \ { prefix inet; }\n  organization\n    \"IETF NETCONF (Network Configuration)\
    \ Working Group\";\n  contact\n    \"WG Web:   <http://tools.ietf.org/wg/netconf/>\n\
    \     WG List:  <mailto:netconf@ietf.org>\n     WG Chair: Mehmet Ersue\n     \
    \          <mailto:mehmet.ersue@nsn.com>\n     WG Chair: Bert Wijnen\n       \
    \        <mailto:bertietf@bwijnen.net>\n     Editor:   Mark Scott\n          \
    \     <mailto:mark.scott@ericsson.com>\n     Editor:   Martin Bjorklund\n    \
    \           <mailto:mbj@tail-f.com>\";\n  description\n    \"NETCONF Monitoring\
    \ Module.\n     All elements in this module are read-only.\n     Copyright (c)\
    \ 2010 IETF Trust and the persons identified as\n     authors of the code. All\
    \ rights reserved.\n     Redistribution and use in source and binary forms, with\
    \ or\n     without modification, is permitted pursuant to, and subject\n     to\
    \ the license terms contained in, the Simplified BSD\n     License set forth in\
    \ Section 4.c of the IETF Trust's\n     Legal Provisions Relating to IETF Documents\n\
    \     (http://trustee.ietf.org/license-info).\n     This version of this YANG\
    \ module is part of RFC 6022; see\n     the RFC itself for full legal notices.\"\
    ;\n  revision 2010-10-04 {\n    description\n      \"Initial revision.\";\n  \
    \  reference\n      \"RFC 6022: YANG Module for NETCONF Monitoring\";\n  }\n \
    \ typedef netconf-datastore-type {\n    type enumeration {\n      enum running;\n\
    \      enum candidate;\n      enum startup;\n    }\n    description\n      \"\
    Enumeration of possible NETCONF datastore types.\";\n    reference\n      \"RFC\
    \ 4741: NETCONF Configuration Protocol\";\n  }\n  identity transport {\n    description\n\
    \      \"Base identity for NETCONF transport types.\";\n  }\n  identity netconf-ssh\
    \ {\n    base transport;\n    description\n      \"NETCONF over Secure Shell (SSH).\"\
    ;\n    reference\n      \"RFC 4742: Using the NETCONF Configuration Protocol\n\
    \                 over Secure SHell (SSH)\";\n  }\n  identity netconf-soap-over-beep\
    \ {\n    base transport;\n    description\n      \"NETCONF over Simple Object\
    \ Access Protocol (SOAP) over\n       Blocks Extensible Exchange Protocol (BEEP).\"\
    ;\n    reference\n      \"RFC 4743: Using NETCONF over the Simple Object\n   \
    \              Access Protocol (SOAP)\";\n  }\n  identity netconf-soap-over-https\
    \ {\n    base transport;\n    description\n      \"NETCONF over Simple Object\
    \ Access Protocol (SOAP)\n      over Hypertext Transfer Protocol Secure (HTTPS).\"\
    ;\n    reference\n      \"RFC 4743: Using NETCONF over the Simple Object\n   \
    \              Access Protocol (SOAP)\";\n  }\n  identity netconf-beep {\n   \
    \ base transport;\n    description\n      \"NETCONF over Blocks Extensible Exchange\
    \ Protocol (BEEP).\";\n    reference\n      \"RFC 4744: Using the NETCONF Protocol\
    \ over the\n                 Blocks Extensible Exchange Protocol (BEEP)\";\n \
    \ }\n  identity netconf-tls {\n    base transport;\n    description\n      \"\
    NETCONF over Transport Layer Security (TLS).\";\n    reference\n      \"RFC 5539:\
    \ NETCONF over Transport Layer Security (TLS)\";\n  }\n  identity schema-format\
    \ {\n    description\n      \"Base identity for data model schema languages.\"\
    ;\n  }\n  identity xsd {\n    base schema-format;\n    description\n      \"W3C\
    \ XML Schema Definition.\";\n    reference\n      \"W3C REC REC-xmlschema-1-20041028:\n\
    \         XML Schema Part 1: Structures\";\n  }\n  identity yang {\n    base schema-format;\n\
    \    description\n      \"The YANG data modeling language for NETCONF.\";\n  \
    \  reference\n      \"RFC 6020:  YANG - A Data Modeling Language for the\n   \
    \               Network Configuration Protocol (NETCONF)\";\n  }\n  identity yin\
    \ {\n    base schema-format;\n    description\n      \"The YIN syntax for YANG.\"\
    ;\n    reference\n      \"RFC 6020:  YANG - A Data Modeling Language for the\n\
    \                  Network Configuration Protocol (NETCONF)\";\n  }\n  identity\
    \ rng {\n    base schema-format;\n    description\n      \"Regular Language for\
    \ XML Next Generation (RELAX NG).\";\n    reference\n      \"ISO/IEC 19757-2:2008:\
    \ RELAX NG\";\n  }\n  identity rnc {\n    base schema-format;\n    description\n\
    \      \"Relax NG Compact Syntax\";\n    reference\n      \"ISO/IEC 19757-2:2008:\
    \ RELAX NG\";\n  }\n  grouping common-counters {\n    description\n      \"Counters\
    \ that exist both per session, and also globally,\n       accumulated from all\
    \ sessions.\";\n    leaf in-rpcs {\n      type yang:zero-based-counter32;\n  \
    \    description\n        \"Number of correct <rpc> messages received.\";\n  \
    \  }\n    leaf in-bad-rpcs {\n      type yang:zero-based-counter32;\n      description\n\
    \        \"Number of messages received when an <rpc> message was expected,\n \
    \        that were not correct <rpc> messages.  This includes XML parse\n    \
    \     errors and errors on the rpc layer.\";\n    }\n    leaf out-rpc-errors {\n\
    \      type yang:zero-based-counter32;\n      description\n        \"Number of\
    \ <rpc-reply> messages sent that contained an\n         <rpc-error> element.\"\
    ;\n    }\n    leaf out-notifications {\n      type yang:zero-based-counter32;\n\
    \      description\n        \"Number of <notification> messages sent.\";\n   \
    \ }\n  }\n  container netconf-state {\n    config false;\n    description\n  \
    \    \"The netconf-state container is the root of the monitoring\n       data\
    \ model.\";\n    container capabilities {\n      description\n        \"Contains\
    \ the list of NETCONF capabilities supported by the\n         server.\";\n   \
    \   leaf-list capability {\n        type inet:uri;\n        description\n    \
    \      \"List of NETCONF capabilities supported by the server.\";\n      }\n \
    \   }\n    container datastores {\n      description\n        \"Contains the list\
    \ of NETCONF configuration datastores.\";\n      list datastore {\n        key\
    \ name;\n        description\n          \"List of NETCONF configuration datastores\
    \ supported by\n           the NETCONF server and related information.\";\n  \
    \      leaf name {\n          type netconf-datastore-type;\n          description\n\
    \            \"Name of the datastore associated with this list entry.\";\n   \
    \     }\n        container locks {\n          presence\n            \"This container\
    \ is present only if the datastore\n             is locked.\";\n          description\n\
    \            \"The NETCONF <lock> and <partial-lock> operations allow\n      \
    \       a client to lock specific resources in a datastore.  The\n           \
    \  NETCONF server will prevent changes to the locked\n             resources by\
    \ all sessions except the one that acquired\n             the lock(s).\n     \
    \        Monitoring information is provided for each datastore\n             entry\
    \ including details such as the session that acquired\n             the lock,\
    \ the type of lock (global or partial) and the\n             list of locked resources.\
    \  Multiple locks per datastore\n             are supported.\";\n          grouping\
    \ lock-info {\n            description\n              \"Lock related parameters,\
    \ common to both global and\n               partial locks.\";\n            leaf\
    \ locked-by-session {\n              type uint32;\n              mandatory true;\n\
    \              description\n                \"The session ID of the session that\
    \ has locked\n                 this resource.  Both a global lock and a partial\n\
    \                 lock MUST contain the NETCONF session-id.\n                \
    \ If the lock is held by a session that is not managed\n                 by the\
    \ NETCONF server (e.g., a CLI session), a session\n                 id of 0 (zero)\
    \ is reported.\";\n              reference\n                \"RFC 4741: NETCONF\
    \ Configuration Protocol\";\n            }\n            leaf locked-time {\n \
    \             type yang:date-and-time;\n              mandatory true;\n      \
    \        description\n                \"The date and time of when the resource\
    \ was\n                 locked.\";\n            }\n          }\n          choice\
    \ lock-type {\n            description\n              \"Indicates if a global\
    \ lock or a set of partial locks\n               are set.\";\n            container\
    \ global-lock {\n              description\n                \"Present if the global\
    \ lock is set.\";\n              uses lock-info;\n            }\n            list\
    \ partial-lock {\n              key lock-id;\n              description\n    \
    \            \"List of partial locks.\";\n              reference\n          \
    \      \"RFC 5717: Partial Lock Remote Procedure Call (RPC) for\n            \
    \               NETCONF\";\n              leaf lock-id {\n                type\
    \ uint32;\n                description\n                  \"This is the lock id\
    \ returned in the <partial-lock>\n                   response.\";\n          \
    \    }\n              uses lock-info;\n              leaf-list select {\n    \
    \            type yang:xpath1.0;\n                min-elements 1;\n          \
    \      description\n                  \"The xpath expression that was used to\
    \ request\n                   the lock.  The select expression indicates the\n\
    \                   original intended scope of the lock.\";\n              }\n\
    \              leaf-list locked-node {\n                type instance-identifier;\n\
    \                description\n                  \"The list of instance-identifiers\
    \ (i.e., the\n                   locked nodes).\n                   The scope\
    \ of the partial lock is defined by the list\n                   of locked nodes.\"\
    ;\n              }\n            }\n          }\n        }\n      }\n    }\n  \
    \  container schemas {\n      description\n        \"Contains the list of data\
    \ model schemas supported by the\n         server.\";\n      list schema {\n \
    \       key \"identifier version format\";\n        description\n          \"\
    List of data model schemas supported by the server.\";\n        leaf identifier\
    \ {\n          type string;\n          description\n            \"Identifier to\
    \ uniquely reference the schema.  The\n             identifier is used in the\
    \ <get-schema> operation and may\n             be used for other purposes such\
    \ as file retrieval.\n             For modeling languages that support or require\
    \ a data\n             model name (e.g., YANG module name) the identifier MUST\n\
    \             match that name.  For YANG data models, the identifier is\n    \
    \         the name of the module or submodule.  In other cases, an\n         \
    \    identifier such as a filename MAY be used instead.\";\n        }\n      \
    \  leaf version {\n          type string;\n          description\n           \
    \ \"Version of the schema supported.  Multiple versions MAY be\n             supported\
    \ simultaneously by a NETCONF server.  Each\n             version MUST be reported\
    \ individually in the schema list,\n             i.e., with same identifier, possibly\
    \ different location,\n             but different version.\n             For YANG\
    \ data models, version is the value of the most\n             recent YANG 'revision'\
    \ statement in the module or\n             submodule, or the empty string if no\
    \ 'revision' statement\n             is present.\";\n        }\n        leaf format\
    \ {\n          type identityref {\n            base schema-format;\n         \
    \ }\n          description\n            \"The data modeling language the schema\
    \ is written\n             in (currently xsd, yang, yin, rng, or rnc).\n     \
    \        For YANG data models, 'yang' format MUST be supported and\n         \
    \    'yin' format MAY also be provided.\";\n        }\n        leaf namespace\
    \ {\n          type inet:uri;\n          mandatory true;\n          description\n\
    \            \"The XML namespace defined by the data model.\n             For\
    \ YANG data models, this is the module's namespace.\n             If the list\
    \ entry describes a submodule, this field\n             contains the namespace\
    \ of the module to which the\n             submodule belongs.\";\n        }\n\
    \        leaf-list location {\n          type union {\n            type enumeration\
    \ {\n              enum \"NETCONF\";\n            }\n            type inet:uri;\n\
    \          }\n          description\n            \"One or more locations from\
    \ which the schema can be\n             retrieved.  This list SHOULD contain at\
    \ least one\n             entry per schema.\n             A schema entry may be\
    \ located on a remote file system\n             (e.g., reference to file system\
    \ for ftp retrieval) or\n             retrieved directly from a server supporting\
    \ the\n             <get-schema> operation (denoted by the value 'NETCONF').\"\
    ;\n        }\n      }\n    }\n    container sessions {\n      description\n  \
    \      \"The sessions container includes session-specific data for\n         NETCONF\
    \ management sessions.  The session list MUST include\n         all currently\
    \ active NETCONF sessions.\";\n      list session {\n        key session-id;\n\
    \        description\n          \"All NETCONF sessions managed by the NETCONF\
    \ server\n           MUST be reported in this list.\";\n        leaf session-id\
    \ {\n          type uint32 {\n            range \"1..max\";\n          }\n   \
    \       description\n            \"Unique identifier for the session.  This value\
    \ is the\n             NETCONF session identifier, as defined in RFC 4741.\";\n\
    \          reference\n            \"RFC 4741: NETCONF Configuration Protocol\"\
    ;\n        }\n        leaf transport {\n          type identityref {\n       \
    \     base transport;\n          }\n          mandatory true;\n          description\n\
    \            \"Identifies the transport for each session, e.g.,\n            'netconf-ssh',\
    \ 'netconf-soap', etc.\";\n        }\n        leaf username  {\n          type\
    \ string;\n          mandatory true;\n          description\n            \"The\
    \ username is the client identity that was authenticated\n            by the NETCONF\
    \ transport protocol.  The algorithm used to\n            derive the username\
    \ is NETCONF transport protocol specific\n            and in addition specific\
    \ to the authentication mechanism\n            used by the NETCONF transport protocol.\"\
    ;\n        }\n        leaf source-host {\n          type inet:host;\n        \
    \  description\n            \"Host identifier of the NETCONF client.  The value\n\
    \             returned is implementation specific (e.g., hostname,\n         \
    \    IPv4 address, IPv6 address)\";\n        }\n        leaf login-time {\n  \
    \        type yang:date-and-time;\n          mandatory true;\n          description\n\
    \            \"Time at the server at which the session was established.\";\n \
    \       }\n        uses common-counters {\n          description\n           \
    \ \"Per-session counters.  Zero based with following reset\n             behaviour:\n\
    \               - at start of a session\n               - when max value is reached\"\
    ;\n        }\n      }\n    }\n    container statistics {\n      description\n\
    \        \"Statistical data pertaining to the NETCONF server.\";\n      leaf netconf-start-time\
    \ {\n        type yang:date-and-time;\n        description\n          \"Date and\
    \ time at which the management subsystem was\n           started.\";\n      }\n\
    \      leaf in-bad-hellos {\n        type yang:zero-based-counter32;\n       \
    \ description\n          \"Number of sessions silently dropped because an\n  \
    \        invalid <hello> message was received.  This includes <hello>\n      \
    \    messages with a 'session-id' attribute, bad namespace, and\n          bad\
    \ capability declarations.\";\n      }\n      leaf in-sessions {\n        type\
    \ yang:zero-based-counter32;\n        description\n          \"Number of sessions\
    \ started.  This counter is incremented\n           when a <hello> message with\
    \ a <session-id> is sent.\n          'in-sessions' - 'in-bad-hellos' =\n     \
    \         'number of correctly started netconf sessions'\";\n      }\n      leaf\
    \ dropped-sessions {\n        type yang:zero-based-counter32;\n        description\n\
    \          \"Number of sessions that were abnormally terminated, e.g.,\n     \
    \      due to idle timeout or transport close.  This counter is not\n        \
    \   incremented when a session is properly closed by a\n           <close-session>\
    \ operation, or killed by a <kill-session>\n           operation.\";\n      }\n\
    \      uses common-counters {\n        description\n          \"Global counters,\
    \ accumulated from all sessions.\n           Zero based with following reset behaviour:\n\
    \             - re-initialization of NETCONF server\n             - when max value\
    \ is reached\";\n      }\n    }\n  }\n  rpc get-schema {\n    description\n  \
    \    \"This operation is used to retrieve a schema from the\n       NETCONF server.\n\
    \       Positive Response:\n         The NETCONF server returns the requested\
    \ schema.\n       Negative Response:\n         If requested schema does not exist,\
    \ the <error-tag> is\n         'invalid-value'.\n         If more than one schema\
    \ matches the requested parameters, the\n         <error-tag> is 'operation-failed',\
    \ and <error-app-tag> is\n         'data-not-unique'.\";\n    input {\n      leaf\
    \ identifier {\n        type string;\n        mandatory true;\n        description\n\
    \          \"Identifier for the schema list entry.\";\n      }\n      leaf version\
    \ {\n        type string;\n        description\n          \"Version of the schema\
    \ requested.  If this parameter is not\n           present, and more than one\
    \ version of the schema exists on\n           the server, a 'data-not-unique'\
    \ error is returned, as\n           described above.\";\n      }\n      leaf format\
    \ {\n        type identityref {\n          base schema-format;\n        }\n  \
    \      description\n           \"The data modeling language of the schema.  If\
    \ this\n            parameter is not present, and more than one formats of\n \
    \           the schema exists on the server, a 'data-not-unique' error\n     \
    \       is returned, as described above.\";\n      }\n    }\n    output {\n  \
    \      anyxml data {\n          description\n            \"Contains the schema\
    \ content.\";\n      }\n    }\n  }\n"
- title: '}'
  contents:
  - '}

    '
- title: <CODE ENDS>
  contents:
  - '<CODE ENDS>

    '
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The YANG module defined in this memo is designed\
    \ to be accessed via\n   the NETCONF protocol [RFC4741].  The lowest NETCONF layer\
    \ is the\n   secure transport layer and the mandatory to implement secure\n  \
    \ transport is SSH [RFC4742].\n   Some of the readable data nodes in this YANG\
    \ module may be considered\n   sensitive or vulnerable in some network environments.\
    \  It is thus\n   important to control read access (e.g., via get, get-config,\
    \ or\n   notification) to these data nodes.\n   These are the containers, list\
    \ nodes, and data nodes with their\n   specific sensitivity/vulnerability:\n \
    \  /netconf-state/sessions/session/username:  Contains identity\n      information\
    \ that could be used in an attempt to authenticate with\n      the server.\n \
    \     This username is only meant for monitoring, and SHOULD NOT be used\n   \
    \   for other purposes, such as access control, without a detailed\n      discussion\
    \ of the limitations of this reported username.  For\n      example, it is possible\
    \ that server A and server B might report\n      the same username, but these\
    \ might be for different persons.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The authors would like to thank Andy Bierman, Mehmet\
    \ Ersue, Washam\n   Fan, David Harrington, Balazs Lengyel, Hideki Okita, Juergen\n\
    \   Schoenwaelder, Bert Wijnen, and many other members of the NETCONF WG\n   for\
    \ providing important input to this document.  The authors would\n   also like\
    \ to specifically acknowledge Sharon Chisholm's work on\n   \"NETCONF Monitoring\
    \ Schema\" [NETCONF] and contribution to this\n   document.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document registers one URI in \"The IETF XML\
    \ Registry\".\n   Following the format in [RFC3688], the following has been registered.\n\
    \     URI: urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\n     Registrant\
    \ Contact: The IESG.\n     XML: N/A, the requested URI is an XML namespace.\n\
    \   This document registers one module in the \"YANG Module Names\"\n   registry.\
    \  Following the format in [RFC6020], the following has been\n   registered.\n\
    \     name: ietf-netconf-monitoring\n     namespace: urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring\n\
    \     prefix: ncm\n     reference: RFC 6022\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [ISO/IEC19757-2:2008]\n              ISO/IEC,\
    \ \"Document Schema Definition Language (DSDL) --\n              Part 2: Regular-grammar-based\
    \ validation -- RELAX NG\",\n              December 2008, <http://www.iso.org/iso/\n\
    \              catalogue_detail.htm?csnumber=37605>.\n   [RFC2119]  Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC4741]  Enns, R., \"NETCONF Configuration\
    \ Protocol\", RFC 4741,\n              December 2006.\n   [RFC4742]  Wasserman,\
    \ M. and T. Goddard, \"Using the NETCONF\n              Configuration Protocol\
    \ over Secure SHell (SSH)\", RFC 4742,\n              December 2006.\n   [RFC4743]\
    \  Goddard, T., \"Using NETCONF over the Simple Object Access\n              Protocol\
    \ (SOAP)\", RFC 4743, December 2006.\n   [RFC4744]  Lear, E. and K. Crozier, \"\
    Using the NETCONF Protocol over\n              the Blocks Extensible Exchange\
    \ Protocol (BEEP)\", RFC 4744,\n              December 2006.\n   [RFC5539]  Badra,\
    \ M., \"NETCONF over Transport Layer Security (TLS)\",\n              RFC 5539,\
    \ May 2009.\n   [RFC5717]  Lengyel, B. and M. Bjorklund, \"Partial Lock Remote\n\
    \              Procedure Call (RPC) for NETCONF\", RFC 5717,\n              December\
    \ 2009.\n   [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n\
    \              the Network Configuration Protocol (NETCONF)\",\n             \
    \ October 2010.\n   [RFC6021]  Schoenwaelder, J., Ed., \"Common YANG Data Types\"\
    ,\n              October 2010.\n   [XML-NAMES]\n              Hollander, D., Tobin,\
    \ R., Thompson, H., Bray, T., and A.\n              Layman, \"Namespaces in XML\
    \ 1.0 (Third Edition)\", World\n              Wide Web Consortium Recommendation\
    \ REC-xml-names-20091208,\n              December 2009,\n              <http://www.w3.org/TR/2009/REC-xml-names-20091208>.\n\
    \   [xmlschema-1]\n              Biron, Paul V. and Ashok. Malhotra, \"XML Schema\
    \ Part 1:\n              Structures Second Edition W3C Recommendation 28 October\n\
    \              2004\", October 2004, <http://www.w3.org/TR/xmlschema-1>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n              [NETCONF]  Chisholm, S. and H. Trevino,\
    \ \"NETCONF\n              Monitoring Schema\", Work in Progress, February 2007.\n\
    \   [RFC0959]  Postel, J. and J. Reynolds, \"File Transfer Protocol\",\n     \
    \         STD 9, RFC 959, October 1985.\n   [RFC2616]  Fielding, R., Gettys, J.,\
    \ Mogul, J., Frystyk, H.,\n              Masinter, L., Leach, P., and T. Berners-Lee,\
    \ \"Hypertext\n              Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n\
    \   [RFC2818]  Rescorla, E., \"HTTP Over TLS\", RFC 2818, May 2000.\n   [RFC3688]\
    \  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              January\
    \ 2004.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mark Scott\n   Ericsson\n   3500 Carling Ave\n   Nepean,\
    \ Ontario  K2H 8E9\n   Canada\n   EMail: mark.scott@ericsson.com\n   Martin Bjorklund\n\
    \   Tail-f Systems\n   Klara Norra Kyrkogata 31\n   SE-111 22 Stockholm,\n   Sweden\n\
    \   EMail: mbj@tail-f.com\n"
