- contents:
  - '             Transmission of IP and ARP over FDDI Networks

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for
    the Internet\n   community, and requests discussion and suggestions for improvements.\n
    \  Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"
    for the standardization state and status of this protocol.\n   Distribution of
    this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Abstract\n   This memo defines a method of encapsulating the Internet Protocol\n
    \  (IP) datagrams and Address Resolution Protocol (ARP) requests and\n   replies
    on Fiber Distributed Data Interface (FDDI) Networks.\n   This RFC is the product
    of the IP over FDDI Working Group of the\n   Internet Engineering Task Force (IETF).\n"
  title: Abstract
- contents:
  - "Acknowledgments\n   This memo draws heavily in both concept and text from RFC
    1042 [3],\n   written by Jon Postel and Joyce K. Reynolds of USC/Information\n
    \  Sciences Institute.  The author would also like to acknowledge the\n   contributions
    of the IP Over FDDI Working Group of the IETF, members\n   of ANSI ASC X3T9.5,
    and others in the FDDI community.\n"
  title: Acknowledgments
- contents:
  - "Conventions\n   The following language conventions are used in the items of\n
    \  specification in this document:\n      \"Must,\" \"Shall,\" or \"Mandatory\"--the
    item is an absolute\n      requirement of the specification.\n      \"Should\"
    or \"Recommended\"--the item should generally be followed\n      for all but exceptional
    circumstances.\n      \"May\" or \"Optional\"--the item is truly optional and
    may be\n      followed or ignored according to the needs of the implementor.\n"
  title: Conventions
- contents:
  - "Introduction\n   The goal of this specification is to allow compatible and\n
    \  interoperable implementations for transmitting IP datagrams [1] and\n   ARP
    requests and replies [2].\n   The Fiber Distributed Data Interface (FDDI) specifications
    define a\n   family of standards for Local Area Networks (LANs) that provides
    the\n   Physical Layer and Media Access Control Sublayer of the Data Link\n   Layer
    as defined by the ISO Open System Interconnection Reference\n   Model (ISO/OSI).
    \ Documents are in various stages of progression\n   toward International Standardization
    for Media Access Control (MAC)\n   [4], Physical Layer Protocol (PHY) [5], Physical
    Layer Medium\n   Dependent (PMD) [6], and Station Management (SMT) [7].  The family
    of\n   FDDI standards corresponds to the IEEE 802 MAC layer standards [8, 9,\n
    \  10].\n   The remainder of the Data Link Service is provided by the IEEE 802.2\n
    \  Logical Link Control (LLC) service [11].  The resulting stack of\n   services
    appears as follows:\n        +-------------+\n        |   IP/ARP    |\n        +-------------+\n
    \       |  802.2 LLC  |\n        +-------------+-----+\n        |  FDDI MAC   |
    F   |\n        +-------------+ D S |\n        |  FDDI PHY   | D M |\n        +-------------+
    I T |\n        |  FDDI PMD   |     |\n        +-------------+-----+\n   This memo
    describes the use of IP and ARP in this environment.  At\n   this time, it is
    not necessary that the use of IP and ARP be\n   consistent between FDDI and IEEE
    802 networks, but it is the intent\n   of this memo not to preclude Data Link
    Layer interoperability at such\n   time as the standards define it.\n   It is
    the explicit intent of this memo to allow the interoperability\n   of IP and ARP
    between stations on FDDI networks and stations on\n   Ethernet networks via translational
    bridges.\n   The FDDI standards define both single and dual MAC stations.  This\n
    \  document describes the use of IP and ARP on single MAC stations\n   (single-attach
    or dual-attach) only.\n"
  title: Introduction
- contents:
  - "Packet Format\n   IP datagrams and ARP requests and replies sent on FDDI networks
    shall\n   be encapsulated within the 802.2 LLC and Sub-Network Access Protocol\n
    \  (SNAP) [12] data link layers and the FDDI MAC and physical layers.\n   The
    SNAP must be used with an Organization Code indicating that the\n   SNAP header
    contains the EtherType code (as listed in Assigned\n   Numbers [13]).\n   802.2
    LLC Type 1 communication (which must be implemented by all\n   conforming 802.2
    stations) is used exclusively.  All frames must be\n   transmitted in standard
    802.2 LLC Type 1 Unnumbered Information\n   format, with the DSAP and the SSAP
    fields of the 802.2 header set to\n   the assigned global SAP value for SNAP [11].
    \ The 24-bit Organization\n   Code in the SNAP must be zero, and the remaining
    16 bits are the\n   EtherType from Assigned Numbers [13] (IP = 2048, ARP = 2054).\n
    \     ...--------+--------+--------+\n                 MAC Header        |                           FDDI
    MAC\n      ...--------+--------+--------+\n      +--------+--------+--------+\n
    \     | DSAP=K1| SSAP=K1| Control|                            802.2 LLC\n      +--------+--------+--------+\n
    \     +--------+--------+---------+--------+--------+\n      |Protocol Id or Org
    Code =K2|    EtherType    |        802.2 SNAP\n      +--------+--------+---------+--------+--------+\n
    \     The total length of the LLC Header and the SNAP header is 8\n      octets.\n
    \     The K1 value is 170 (decimal).\n      The K2 value is 0 (zero).\n      The
    control value is 3 (Unnumbered Information).\n"
  title: Packet Format
- contents:
  - "Address Resolution\n   The mapping of 32-bit Internet addresses to 48-bit FDDI
    addresses\n   shall be done via the dynamic discovery procedure of the Address\n
    \  Resolution Protocol (ARP) [2].\n   Internet addresses are assigned arbitrarily
    on Internet networks.\n   Each host's implementation must know its own Internet
    address and\n   respond to Address Resolution requests appropriately.  It must
    also\n   use ARP to translate Internet addresses to FDDI addresses when\n   needed.\n
    \  The ARP protocol has several fields that parameterize its use in any\n   specific
    context [2].  These fields are:\n      hrd   16 - bits     The Hardware Type Code\n
    \     pro   16 - bits     The Protocol Type Code\n      hln    8 - bits     Octets
    in each hardware address\n      pln    8 - bits     Octets in each protocol address\n
    \     op    16 - bits     Operation Code\n   The hardware type code assigned for
    IEEE 802 networks is 6 [13].  The\n   hardware type code assigned for Ethernet
    networks is 1 [13].\n   Unfortunately, differing values between Ethernet and IEEE
    802\n   networks cause interoperability problems in bridged environments.  In\n
    \  order to not preclude interoperability with Ethernets in a bridged\n   environment,
    ARP packets shall be transmitted with a hardware type\n   code of 1.  ARP packets
    shall be accepted if received with a hardware\n   type code of 1.\n   The protocol
    type code for IP is 2048 [13].\n   The hardware address length is 6.\n   The protocol
    address length (for IP) is 4.\n   The operation code is 1 for request and 2 for
    reply.\n   In order to not preclude interoperability in a bridged environment,\n
    \  the hardware addresses in ARP packets (ar$sha, ar$tha) must be\n   carried
    in \"canonical\" bit order, with the Group bit positioned as\n   the low order
    bit of the first octet.  As FDDI addresses are normally\n   expressed with the
    Group bit in the high order bit position, the\n   addresses must be bit-reversed
    within each octet.\n   Although outside the scope of this document, it is recommended
    that\n   MAC addresses be represented in canonical order in all Network Layer\n
    \  protocols carried within the information field of an FDDI frame.\n"
  title: Address Resolution
- contents:
  - "Broadcast Address\n   The broadcast Internet address (the address on that network
    with a\n   host part of all binary ones) must be mapped to the broadcast FDDI\n
    \  address (of all binary ones) (see [14]).\n"
  title: Broadcast Address
- contents:
  - "Multicast Support\n   A method of supporting IP multicasting is specified in
    [15].  This\n   method shall be used in FDDI networks if IP multicasting is to
    be\n   supported.  The use of this method may require the ability to copy\n   frames
    addressed to any one of an arbitrary number of multicast\n   (group) addresses.\n
    \  An IP multicast address is mapped to an FDDI group address by placing\n   the
    low order 23 bits of the IP address into the low order 23 bits of\n   the FDDI
    group address 01-00-5E-00-00-00 (in \"canonical\" order).\n   [See 13, page 29.]\n
    \  For example, the IP multicast address:\n            224.255.0.2\n   maps to
    the FDDI group address:\n            01-00-5E-7F-00-02\n   in which the multicast
    (group) bit is the low order bit of the first\n   octet (canonical order).  When
    bit-reversed for transmission in the\n   destination MAC address field of an FDDI
    frame (native order), it\n   becomes:\n            80-00-7A-FE-00-40\n   that
    is, with the multicast (group) bit as the high order bit of the\n   first octet,
    that being the first bit transmitted on the medium.\n"
  title: Multicast Support
- contents:
  - "Trailer Formats\n   Some versions of Unix 4.x bsd use a different encapsulation
    method in\n   order to get better network performance with the VAX virtual memory\n
    \  architecture.  Hosts directly connected to FDDI networks shall not\n   use
    trailers.\n"
  title: Trailer Formats
- contents:
  - "Byte Order\n   As described in Appendix B of the Internet Protocol specification\n
    \  [1], the IP datagram is transmitted over FDDI networks as a series of\n   8-bit
    bytes.  This byte transmission order has been called \"big-\n   endian\" [16].\n"
  title: Byte Order
- contents:
  - "MAC Layer Details\n   Packet Size\n      The FDDI MAC specification [4] defines
    a maximum frame size of\n      9000 symbols (4500 octets) for all frame fields,
    including four\n      symbols (two octets) of preamble.  This leaves roughly 4470
    octets\n      for data after the LLC/SNAP header is taken into account.\n      However,
    in order to allow future extensions to the MAC header and\n      frame status
    fields, it is desirable to reserve additional space\n      for MAC overhead.\n
    \     Therefore, the MTU of FDDI networks shall be 4352 octets.  This\n      provides
    for 4096 octets of data and 256 octets of headers at the\n      network layer
    and above.  Implementations must not send packets\n      larger than the MTU.\n
    \     Gateway implementations must be prepared to accept packets as\n      large
    as the MTU and fragment them when necessary.  Gateway\n      implementations should
    be able to accept packets as large as can\n      be carried within a maximum size
    FDDI frame and fragment them.\n      Host implementations should be prepared to
    accept packets as large\n      as the MTU; however, hosts must not send datagrams
    longer than 576\n      octets unless they have explicit knowledge that the destination
    is\n      prepared to accept them.  Host implementations may accept packets\n
    \     as large as can be carried within a maximum size FDDI frame.  A\n      host
    may communicate its size preference in TCP-based applications\n      via the TCP
    Maximum Segment Size option [17].\n      Datagrams on FDDI networks may be longer
    than the general Internet\n      default maximum packet size of 576 octets.  Hosts
    connected to an\n      FDDI network should keep this in mind when sending datagrams
    to\n      hosts that are not on the same local network.  It may be\n      appropriate
    to send smaller datagrams to avoid unnecessary\n      fragmentation at intermediate
    gateways.  Please see [17] for\n      further information.\n      There is no
    minimum packet size restriction on FDDI networks.\n      In order to not preclude
    interoperability with Ethernet in a\n      bridged environment, FDDI implementations
    must be prepared to\n      receive (and ignore) trailing pad octets.\n   Other
    MAC Layer Issues\n      The FDDI MAC specification does not require that 16-bit
    and 48-\n      bit address stations be able to interwork fully.  It does,\n      however,
    require that 16-bit stations have full 48-bit\n      functionality, and that both
    types of stations be able to receive\n      frames sent to either size broadcast
    address.  In order to avoid\n      interoperability problems, only 48-bit addresses
    shall be used\n      with IP and ARP.\n      The FDDI MAC specification defines
    two classes of LLC frames,\n      Asynchronous and Synchronous.  Asynchronous
    frames are further\n      controlled by a priority mechanism and two classes of
    token,\n      Restricted and Unrestricted.  Only the use of Unrestricted tokens\n
    \     and Asynchronous frames are required by the standard for FDDI\n      interoperability.\n
    \     All IP and ARP frames shall be transmitted as Asynchronous LLC\n      frames
    using Unrestricted tokens, and the Priority value is a\n      matter of local
    convention.  Implementations should make the\n      priority a tunable parameter
    for future use.  It is recommended\n      that implementations provide for the
    reception of IP and ARP\n      packets in Synchronous frames, as well as Restricted
    Asynchronous\n      frames.\n      After packet transmission, FDDI provides Frame
    Copied (C) and\n      Address Recognized (A) indicators.  The use of these indicators
    is\n      a local implementation decision.  Implementations may choose to\n      perform
    link-level retransmission, ARP cache entry invalidation,\n      etc., based on
    the values of these indicators and other\n      information.  The semantics of
    these indicators, especially in the\n      presence of bridges, are not well defined
    as of this writing.\n      Implementors are urged to follow the work of ANSI ASC
    X3T9.5 in\n      regard to this issue in order to avoid interoperability problems.\n"
  title: MAC Layer Details
- contents:
  - "IEEE 802.2 Details\n   While not necessary for supporting IP and ARP, all implementations\n
    \  must support IEEE 802.2 standard Class I service in order to be\n   compliant
    with 802.2.  Described below is the minimum functionality\n   necessary for a
    conformant station.  Some of the functions are not\n   related directly to the
    support of the SNAP SAP (e.g., responding to\n   XID and TEST commands directed
    to the null or global SAP addresses),\n   but are part of a general LLC implementation.
    \ Implementors should\n   consult IEEE Std. 802.2 [11] for details.\n   802.2
    Class I LLC requires the support of Unnumbered Information (UI)\n   Commands,
    eXchange IDentification (XID) Commands and Responses, and\n   TEST link (TEST)
    Commands and Responses.  Stations need not be able\n   to transmit XID and TEST
    commands, but must be able to transmit\n   responses.\n   Encodings\n      Command
    frames are identified by having the low order bit of the\n      SSAP address reset
    to zero.  Response frames have the low order\n      bit of the SSAP address set
    to one.\n      The UI command has an LLC control field value of 3.\n      The
    XID command/response has an LLC control field value of 175\n      (decimal) if
    the Poll/Final bit is off or 191 (decimal) if the\n      Poll/Final bit is on.\n
    \     The TEST command/response has an LLC control field value of 227\n      (decimal)
    if the Poll/Final bit is off or 243 (decimal) if the\n      Poll/Final bit is
    on.\n   Elements of Procedure\n      UI responses and UI commands with the Poll
    bit set shall be\n      ignored.  UI commands having other than the SNAP SAP in
    the DSAP\n      or SSAP fields shall not be processed as IP or ARP packets.\n
    \     When an XID or TEST command is received, an appropriate response\n      must
    be returned.  XID and TEST commands must be responded to only\n      if the DSAP
    is the SNAP SAP (170 decimal), the Null SAP (0\n      decimal), or the Global
    SAP (255 decimal).  XID and TEST commands\n      received with other DSAP values
    must not be responded to unless\n      the station supports the addressed service.
    \ Responses to XID and\n      TEST frames shall be constructed as follows:\n         Destination
    MAC:  Copied from Source MAC of the command\n         Source MAC:  Set to the
    address of the MAC receiving the\n                command\n         DSAP:  Copied
    from SSAP of the command\n         SSAP:  Set to 171 decimal (SNAP SAP + Response
    bit) if the\n                DSAP in the command was the SNAP SAP or the Global
    SAP;\n                set to 1 decimal (Null SAP + Response bit) if the DSAP\n
    \               in the command was the Null SAP\n      When responding to an XID
    or a TEST command, the value of the\n      Final bit in the response must be copied
    from the value of the\n      Poll bit in the command.\n      XID response frames
    must include an 802.2 XID Information field of\n      129.1.0 indicating Class
    I (connectionless) service.\n      TEST response frames must echo the information
    field received in\n      the corresponding TEST command frame.\n"
  title: IEEE 802.2 Details
- contents:
  - "Appendix on Numbers\n   The IEEE specifies numbers as bit strings with the least
    significant\n   bit first, or bit-wise little-endian order.  The Internet protocols\n
    \  are documented in bit-wise big-endian order.  This may cause some\n   confusion
    about the proper values to use for numbers.  Here are the\n   conversions for
    some numbers of interest.\n       Number           IEEE        Internet    Internet\n
    \                       Binary      Binary      Decimal\n       UI               11000000
    \   00000011    3\n       SAP for SNAP     01010101    10101010    170\n       Global
    SAP       11111111    11111111    255\n       Null SAP         00000000    00000000
    \   0\n       XID              11110101    10101111    175\n       XID Poll/Final
    \  11111101    10111111    191\n       XID Info                                 129.1.0\n
    \      TEST             11000111    11100011    227\n       TEST Poll/Final  11001111
    \   11110011    243\n"
  title: Appendix on Numbers
- contents:
  - "Differences between this document and RFC 1188\n   The following is a summary
    of the differences between RFC 1188 and\n   this document:\n      A reference
    to a future dual-MAC document has been removed.\n      A statement of explicit
    intent to support FDDI/Ethernet\n      interoperability has been added.\n      The
    acceptance of ARP frames bearing hardware type code 6 (IEEE\n      802) has been
    removed.\n      The references have been updated.\n      The author's address
    has been updated.\n"
  title: Differences between this document and RFC 1188
- contents:
  - "References\n   [1] Postel, J., \"Internet Protocol\", STD 5, RFC 791, USC/Information\n
    \      Sciences Institute, September 1981.\n   [2] Plummer, D., \"An Ethernet
    Address Resolution Protocol - or -\n       Converting Network Protocol Addresses
    to 48.bit Ethernet Address\n       for Transmission on Ethernet Hardware\", RFC
    826, MIT, November\n       1982.\n   [3] Postel, J., and J. Reynolds, \"A Standard
    for the Transmission of\n       IP Datagrams over IEEE 802 Networks\", RFC 1042,
    USC/Information\n       Sciences Institute, February 1988.\n   [4] ISO, \"Fiber
    Distributed Data Interface (FDDI) - Media Access\n       Control\", ISO 9314-2,
    1989.  See also ANSI X3.139-1987.\n   [5] ISO, \"Fiber Distributed Data Interface
    (FDDI) - Token Ring\n       Physical Layer Protocol\", ISO 9314-1, 1989.  See
    also ANSI\n       X3.148-1988.\n   [6] ISO, \"Fiber Distributed Data Interface
    (FDDI) - Physical Layer\n       Medium Dependent\", ISO DIS 9314-3, 1989.  See
    also ANSI X3.166-\n       199x.\n   [7] ANSI, \"FDDI Station Management\", ANSI
    X3T9.5/84-49 Rev 7.1, 1992.\n   [8] IEEE, \"IEEE Standards for Local Area Networks:
    Carrier Sense\n       Multiple Access with Collision Detection (CSMA/CD) Access
    Method\n       and Physical Layer Specifications\", IEEE, New York, New York,\n
    \      1985.\n   [9] IEEE, \"IEEE Standards for Local Area Networks: Token-Passing
    Bus\n       Access Method and Physical Layer Specification\", IEEE, New York,\n
    \      New York, 1985.\n  [10] IEEE, \"IEEE Standards for Local Area Networks:
    Token Ring Access\n       Method and Physical Layer Specifications\", IEEE, New
    York, New\n       York, 1985.\n  [11] IEEE, \"IEEE Standards for Local Area Networks:
    Logical Link\n       Control\", IEEE, New York, New York, 1985.\n  [12] IEEE,
    \"Draft Standard P802.1A--Overview and Architecture\", 1989.\n  [13] Reynolds,
    J., and J. Postel, \"Assigned Numbers\", STD 2, RFC 1340,\n       USC/Information
    Sciences Institute, July 1992.\n  [14] Braden, R., and J. Postel, \"Requirements
    for Internet Gateways\",\n       STD 4, RFC 1009, USC/Information Sciences Institute,
    June 1987.\n  [15] Deering, S., \"Host Extensions for IP Multicasting\", STD 5,
    RFC\n       1112, Stanford University, August 1989.\n  [16] Cohen, D., \"On Holy
    Wars and a Plea for Peace\", Computer, IEEE,\n       October 1981.\n  [17] Postel,
    J., \"The TCP Maximum Segment Size Option and Related\n       Topics\", RFC 879,
    USC/Information Sciences Institute, November\n       1983.\n"
  title: References
- contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
  title: Security Considerations
- contents:
  - "Author's Address\n   Dave Katz\n   cisco Systems, Inc.\n   1525 O'Brien Dr.\n
    \  Menlo Park, CA  94025\n   Phone: (415) 688-8284\n   EMail: dkatz@cisco.com\n"
  title: Author's Address
