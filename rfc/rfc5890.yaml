- title: __initial_text__
  contents:
  - "        Internationalized Domain Names for Applications (IDNA):\n           \
    \        Definitions and Document Framework\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is one of a collection that, together, describe the\n\
    \   protocol and usage context for a revision of Internationalized Domain\n  \
    \ Names for Applications (IDNA), superseding the earlier version.  It\n   describes\
    \ the document collection and provides definitions and other\n   material that\
    \ are common to the set.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5890.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  4\n     1.1.  IDNA2008 . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n       1.1.1.  Audiences  . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n       1.1.2.  Normative Language . . . . . . . . . . . . . . .\
    \ . . .  5\n     1.2.  Road Map of IDNA2008 Documents . . . . . . . . . . . .\
    \ . .  5\n   2.  Definitions and Terminology  . . . . . . . . . . . . . . . .\
    \ .  6\n     2.1.  Characters and Character Sets  . . . . . . . . . . . . . .\
    \  6\n     2.2.  DNS-Related Terminology  . . . . . . . . . . . . . . . . .  6\n\
    \     2.3.  Terminology Specific to IDNA . . . . . . . . . . . . . . .  7\n  \
    \     2.3.1.  LDH Label  . . . . . . . . . . . . . . . . . . . . . .  7\n    \
    \   2.3.2.  Terms for IDN Label Codings  . . . . . . . . . . . . . 11\n      \
    \   2.3.2.1.  IDNA-valid strings, A-label, and U-label . . . . . 11\n        \
    \ 2.3.2.2.  NR-LDH Label . . . . . . . . . . . . . . . . . . . 13\n         2.3.2.3.\
    \  Internationalized Domain Name and\n                   Internationalized Label\
    \  . . . . . . . . . . . . . 13\n         2.3.2.4.  Label Equivalence  . . . .\
    \ . . . . . . . . . . . . 14\n         2.3.2.5.  ACE Prefix . . . . . . . . .\
    \ . . . . . . . . . . . 14\n         2.3.2.6.  Domain Name Slot . . . . . . .\
    \ . . . . . . . . . . 14\n       2.3.3.  Order of Characters in Labels  . . .\
    \ . . . . . . . . . 15\n       2.3.4.  Punycode is an Algorithm, Not a Name or\
    \ Adjective  . . 15\n   3.  IANA Considerations  . . . . . . . . . . . . . . .\
    \ . . . . . . 16\n   4.  Security Considerations  . . . . . . . . . . . . . .\
    \ . . . . . 16\n     4.1.  General Issues . . . . . . . . . . . . . . . . . .\
    \ . . . . 16\n     4.2.  U-label Lengths  . . . . . . . . . . . . . . . . . .\
    \ . . . 16\n     4.3.  Local Character Set Issues . . . . . . . . . . . . . .\
    \ . . 17\n     4.4.  Visually Similar Characters  . . . . . . . . . . . . . .\
    \ . 17\n     4.5.  IDNA Lookup, Registration, and the Base DNS\n           Specifications\
    \ . . . . . . . . . . . . . . . . . . . . . . 18\n     4.6.  Legacy IDN Label\
    \ Strings . . . . . . . . . . . . . . . . . 18\n     4.7.  Security Differences\
    \ from IDNA2003 . . . . . . . . . . . . 19\n     4.8.  Summary  . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . 20\n   5.  Acknowledgments  . . . . . .\
    \ . . . . . . . . . . . . . . . . . 20\n   6.  References . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 20\n     6.1.  Normative References . . . .\
    \ . . . . . . . . . . . . . . . 20\n     6.2.  Informative References . . . .\
    \ . . . . . . . . . . . . . . 21\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  IDNA2008
  contents:
  - "1.1.  IDNA2008\n   This document is one of a collection that, together, describe\
    \ the\n   protocol and usage context for a revision of Internationalized Domain\n\
    \   Names for Applications (IDNA) that was largely completed in 2008,\n   known\
    \ within the series and elsewhere as \"IDNA2008\".  The series\n   replaces an\
    \ earlier version of IDNA [RFC3490] [RFC3491].  For\n   convenience, that version\
    \ of IDNA is referred to in these documents\n   as \"IDNA2003\".  The newer version\
    \ continues to use the Punycode\n   algorithm [RFC3492] and ACE (ASCII-compatible\
    \ encoding) prefix from\n   that earlier version.  The document collection is\
    \ described in\n   Section 1.2.  As indicated there, this document provides definitions\n\
    \   and other material that are common to the set.\n"
- title: 1.1.1.  Audiences
  contents:
  - "1.1.1.  Audiences\n   While many IETF specifications are directed exclusively\
    \ to protocol\n   implementers, the character of IDNA requires that it be understood\n\
    \   and properly used by those whose responsibilities include making\n   decisions\
    \ about:\n   o  what names are permitted in DNS zone files,\n   o  policies related\
    \ to names and naming, and\n   o  the handling of domain name strings in files\
    \ and systems, even\n      with no immediate intention of looking them up.\n \
    \  This document and those documents concerned with the protocol\n   definition,\
    \ rules for handling strings that include characters\n   written right to left,\
    \ and the actual list of characters and\n   categories will be of primary interest\
    \ to protocol implementers.\n   This document and the one containing explanatory\
    \ material will be of\n   primary interest to others, although they may have to\
    \ fill in some\n   details by reference to other documents in the set.\n   This\
    \ document and the associated ones are written from the\n   perspective of an\
    \ IDNA-aware user, application, or implementation.\n   While they may reiterate\
    \ fundamental DNS rules and requirements for\n   the convenience of the reader,\
    \ they make no attempt to be\n   comprehensive about DNS principles and should\
    \ not be considered as a\n   substitute for a thorough understanding of the DNS\
    \ protocols and\n   specifications.\n"
- title: 1.1.2.  Normative Language
  contents:
  - "1.1.2.  Normative Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 1.2.  Road Map of IDNA2008 Documents
  contents:
  - "1.2.  Road Map of IDNA2008 Documents\n   IDNA2008 consists of the following documents:\n\
    \   o  This document, containing definitions and other material that are\n   \
    \   needed for understanding other documents in the set.  It is\n      referred\
    \ to informally in other documents in the set as \"Defs\" or\n      \"Definitions\"\
    .\n   o  A document, RFC 5894 [RFC5894], that provides an overview of the\n  \
    \    protocol and associated tables together with explanatory material\n     \
    \ and some rationale for the decisions that led to IDNA2008.  That\n      document\
    \ also contains advice for registry operations and those\n      who use Internationalized\
    \ Domain Names (IDNs).  It is referred to\n      informally in other documents\
    \ in the set as \"Rationale\".  It is\n      not normative.\n   o  A document,\
    \ RFC 5891 [RFC5891], that describes the core IDNA2008\n      protocol and its\
    \ operations.  In combination with the Bidi\n      document, described immediately\
    \ below, it explicitly updates and\n      replaces RFC 3490.  It is referred to\
    \ informally in other\n      documents in the set as \"Protocol\".\n   o  A document,\
    \ RFC 5893 [RFC5893], that specifies special rules\n      (Bidi) for labels that\
    \ contain characters that are written from\n      right to left.\n   o  A specification,\
    \ RFC 5892 [RFC5892], of the categories and rules\n      that identify the code\
    \ points allowed in a label written in native\n      character form (defined more\
    \ specifically as a \"U-label\" in\n      Section 2.3.2.1 below), based on Unicode\
    \ 5.2 [Unicode52] code\n      point assignments and additional rules unique to\
    \ IDNA2008.  The\n      Unicode-based rules are expected to be stable across Unicode\n\
    \      updates and hence independent of Unicode versions.  That\n      specification\
    \ obsoletes RFC 3941 and IDN use of the tables to\n      which it refers.  It\
    \ is referred to informally in other documents\n      in the set as \"Tables\"\
    .\n   o  A document [IDNA2008-Mapping] that discusses the issue of mapping\n \
    \     characters into other characters and that provides guidance for\n      doing\
    \ so when that is appropriate.  That document, referred to\n      informally as\
    \ \"Mapping\", provides advice; it is not a required\n      part of IDNA.\n"
- title: 2.  Definitions and Terminology
  contents:
  - '2.  Definitions and Terminology

    '
- title: 2.1.  Characters and Character Sets
  contents:
  - "2.1.  Characters and Character Sets\n   A code point is an integer value in the\
    \ codespace of a coded\n   character set.  In Unicode, these are integers from\
    \ 0 to 0x10FFFF.\n   Unicode [Unicode52] is a coded character set containing somewhat\
    \ over\n   100,000 characters assigned to code points as of version 5.2.  A\n\
    \   single Unicode code point is denoted in these documents by \"U+\"\n   followed\
    \ by four to six hexadecimal digits, while a range of Unicode\n   code points\
    \ is denoted by two four to six digit hexadecimal numbers\n   separated by \"\
    ..\", with no prefixes.\n   ASCII means US-ASCII [ASCII], a coded character set\
    \ containing 128\n   characters associated with code points in the range 0000..007F.\n\
    \   Unicode is a superset of ASCII and may be thought of as a\n   generalization\
    \ of it; it includes all the ASCII characters and\n   associates them with the\
    \ equivalent code points.\n   \"Letters\" are, informally, generalizations from\
    \ the ASCII and\n   common-sense understanding of that term, i.e., characters\
    \ that are\n   used to write text and that are not digits, symbols, or punctuation.\n\
    \   Formally, they are characters with a Unicode General Category value\n   starting\
    \ in \"L\" (see Section 4.5 of The Unicode Standard\n   [Unicode52]).\n"
- title: 2.2.  DNS-Related Terminology
  contents:
  - "2.2.  DNS-Related Terminology\n   When discussing the DNS, this document generally\
    \ assumes the\n   terminology used in the DNS specifications [RFC1034] [RFC1035]\
    \ as\n   subsequently modified [RFC1123] [RFC2181].  The term \"lookup\" is used\n\
    \   to describe the combination of operations performed by the IDNA2008\n   protocol\
    \ and those actually performed by a DNS resolver.  The process\n   of placing\
    \ an entry into the DNS is referred to as \"registration\".\n   This is similar\
    \ to common contemporary usage of that term in other\n   contexts.  Consequently,\
    \ any DNS zone administration is described as\n   a \"registry\", and the terms\
    \ \"registry\" and \"zone administrator\" are\n   used interchangeably, regardless\
    \ of the actual administrative\n   arrangements or level in the DNS tree.  More\
    \ details about that\n   relationship are included in the Rationale document.\n\
    \   The term \"LDH code point\" is defined in this document to refer to the\n\
    \   code points associated with ASCII letters (Unicode code points\n   0041..005A\
    \ and 0061..007A), digits (0030..0039), and the hyphen-minus\n   (U+002D).  \"\
    LDH\" is an abbreviation for \"letters, digits, hyphen\" but\n   is used specifically\
    \ in this document to refer to the set of naming\n   rules described in Section\
    \ 2.3.1 below.\n   The base DNS specifications [RFC1034] [RFC1035] discuss \"\
    domain\n   names\" and \"hostnames\", but many people use the terms\n   interchangeably,\
    \ as do sections of these specifications.  Lack of\n   clarity about that terminology\
    \ has contributed to confusion about\n   intent in some cases.  These documents\
    \ generally use the term \"domain\n   name\".  When they refer to, e.g., hostname\
    \ syntax restrictions, they\n   explicitly cite the relevant defining documents.\
    \  The remaining\n   definitions in this subsection are essentially a review:\
    \ if there is\n   any perceived difference between those definitions and the\n\
    \   definitions in the base DNS documents or those cited below, the\n   definitions\
    \ in the other documents take precedence.\n   A label is an individual component\
    \ of a domain name.  Labels are\n   usually shown separated by dots; for example,\
    \ the domain name\n   \"www.example.com\" is composed of three labels: \"www\"\
    , \"example\", and\n   \"com\".  (The complete name convention using a trailing\
    \ dot described\n   in RFC 1123 [RFC1123], which can be explicit as in \"www.example.com.\"\
    \n   or implicit as in \"www.example.com\", is not considered in this\n   specification.)\
    \  IDNA extends the set of usable characters in labels\n   that are treated as\
    \ text (as distinct from the binary string labels\n   discussed in RFC 1035 and\
    \ RFC 2181 [RFC2181] and bitstring ones\n   [RFC2673]), but only in certain contexts.\
    \  The different contexts for\n   different sets of usable characters are outlined\
    \ in the next section.\n   For the rest of this document and in the related ones,\
    \ the term\n   \"label\" is shorthand for \"text label\", and \"every label\"\
    \ means \"every\n   text label\", including the expanded context.\n"
- title: 2.3.  Terminology Specific to IDNA
  contents:
  - "2.3.  Terminology Specific to IDNA\n   This section defines some terminology\
    \ to reduce dependence on terms\n   and definitions that have been problematic\
    \ in the past.  The\n   relationships among these definitions are illustrated\
    \ in Figure 1 and\n   Figure 2.  In the first of those figures, the parenthesized\
    \ numbers\n   refer to the notes below the figure.\n"
- title: 2.3.1.  LDH Label
  contents:
  - "2.3.1.  LDH Label\n   This is the classical label form used, albeit with some\
    \ additional\n   restrictions, in hostnames [RFC0952].  Its syntax is identical\
    \ to\n   that described as the \"preferred name syntax\" in Section 3.5 of RFC\n\
    \   1034 [RFC1034] as modified by RFC 1123 [RFC1123].  Briefly, it is a\n   string\
    \ consisting of ASCII letters, digits, and the hyphen with the\n   further restriction\
    \ that the hyphen cannot appear at the beginning or\n   end of the string.  Like\
    \ all DNS labels, its total length must not\n   exceed 63 octets.\n   LDH labels\
    \ include the specialized labels used by IDNA (described as\n   \"A-labels\" below)\
    \ and some additional restricted forms (also\n   described below).\n   To facilitate\
    \ clear description, two new subsets of LDH labels are\n   created by the introduction\
    \ of IDNA.  These are called Reserved LDH\n   labels (R-LDH labels) and Non-Reserved\
    \ LDH labels (NR-LDH labels).\n   Reserved LDH labels, known as \"tagged domain\
    \ names\" in some other\n   contexts, have the property that they contain \"--\"\
    \ in the third and\n   fourth characters but which otherwise conform to LDH label\
    \ rules.\n   Only a subset of the R-LDH labels can be used in IDNA-aware\n   applications.\
    \  That subset consists of the class of labels that begin\n   with the prefix\
    \ \"xn--\" (case independent), but otherwise conform to\n   the rules for LDH\
    \ labels.  That subset is called \"XN-labels\" in this\n   set of documents. \
    \ XN-labels are further divided into those whose\n   remaining characters (after\
    \ the \"xn--\") are valid output of the\n   Punycode algorithm [RFC3492] and those\
    \ that are not (see below).  The\n   XN-labels that are valid Punycode output\
    \ are known as \"A-labels\" if\n   they also meet the other criteria for IDNA-validity\
    \ described below.\n   Because LDH labels (and, indeed, any DNS label) must not\
    \ be more than\n   63 octets in length, the portion of an XN-label derived from\
    \ the\n   Punycode algorithm is limited to no more than 59 ASCII characters.\n\
    \   Non-Reserved LDH labels are the set of valid LDH labels that do not\n   have\
    \ \"--\" in the third and fourth positions.\n   A consequence of the restrictions\
    \ on valid characters in the native\n   Unicode character form (see U-labels)\
    \ turns out to be that mixed-case\n   annotation, of the sort outlined in Appendix\
    \ A of RFC 3492 [RFC3492],\n   is never useful.  Therefore, since a valid A-label\
    \ is the result of\n   Punycode encoding of a U-label, A-labels should be produced\
    \ only in\n   lowercase, despite matching other (mixed-case or uppercase) potential\n\
    \   labels in the DNS.\n   Some strings that are prefixed with \"xn--\" to form\
    \ labels may not be\n   the output of the Punycode algorithm, may fail the other\
    \ tests\n   outlined below, or may violate other IDNA restrictions and thus are\n\
    \   also not valid IDNA labels.  They are called \"Fake A-labels\" for\n   convenience.\n\
    \   Labels within the class of R-LDH labels that are not prefixed with\n   \"\
    xn--\" are also not valid IDNA labels.  To allow for future use of\n   mechanisms\
    \ similar to IDNA, those labels MUST NOT be processed as\n   ordinary LDH labels\
    \ by IDNA-conforming programs and SHOULD NOT be\n   mixed with IDNA labels in\
    \ the same zone.\n   These distinctions among possible LDH labels are only of\
    \ significance\n   for software that is IDNA-aware or for future extensions that\
    \ use\n   extensions based on the same \"prefix and encoding\" model.  For\n \
    \  IDNA-aware systems, the valid label types are: A-labels, U-labels,\n   and\
    \ NR-LDH labels.\n   IDNA labels come in two flavors: an ACE-encoded form and\
    \ a Unicode\n   (native character) form.  These are referred to as A-labels and\n\
    \   U-labels, respectively, and are described in detail in the next\n   section.\n\
    \                                    ASCII Label\n      __________________________________________________________________\n\
    \      |                                                                |\n  \
    \    |     ____________________ LDH Label (1) (4) ________________    |\n    \
    \  |    |  ___________________________________                  |   |\n      |\
    \    |  |IDN Reserved LDH Labels          |                  |   |\n      |  \
    \  |  | (\"??--\") or R-LDH Labels        | _______________  |   |\n      |  \
    \  |  | _______________________________ | |NON-RESERVED |  |   |\n      |    |\
    \  | |       XN-labels             | | | LDH Labels  |  |   |\n      |    |  |\
    \ | _____________   ___________ | | | (NR-LDH     |  |   |\n      |    |  | |\
    \ | A-labels  |   | Fake (3) || | |   labels)   |  |   |\n      |    |  | | |\
    \ \"xn--\"(2) |   | A-labels || | |_____________|  |   |\n      |    |  | | |___________|\
    \   |__________|| |                  |   |\n      |    |  | |_____________________________|\
    \ |                  |   |\n      |    |  |_________________________________|\
    \                  |   |\n      |    |_______________________________________________________|\
    \   |\n      |                                                               \
    \ |\n      |       _____________NON-LDH label________                       |\n\
    \      |       |      ______________________    |                       |\n  \
    \    |       |      | Underscore labels  |    |                       |\n    \
    \  |       |      |  e.g., _tcp        |    |                       |\n      |\
    \       |      |____________________|    |                       |\n      |  \
    \     |      | Labels with leading|    |                       |\n      |    \
    \   |      | or trailing        |    |                       |\n      |      \
    \ |      | hyphens \"-abcd\"    |    |                       |\n      |      \
    \ |      | or \"xyz-\"          |    |                       |\n      |      \
    \ |      | or \"-uvw-\"         |    |                       |\n      |      \
    \ |      |____________________|    |                       |\n      |       |\
    \      | Labels with other  |    |                       |\n      |       |  \
    \    | non-LDH ASCII chars|    |                       |\n      |       |    \
    \  | e.g., #$%_         |    |                       |\n      |       |      |____________________|\
    \    |                       |\n      |       |________________________________|\
    \                       |\n      |________________________________________________________________|\n\
    \             (1) ASCII letters (uppercase and lowercase), digits,\n         \
    \           hyphen.  Hyphen may not appear in first or last\n                \
    \    position.  No more than 63 octets.\n             (2) Note that the string\
    \ following \"xn--\" must\n                    be the valid output of the Punycode\
    \ algorithm\n                    and must be convertible into valid U-label form.\n\
    \             (3) Note that a Fake A-label has a prefix \"xn--\"\n           \
    \         but the remainder of the label is NOT the valid\n                  \
    \  output of the Punycode algorithm.\n             (4) LDH label subtypes are\
    \ indistinguishable to\n                    applications that are not IDNA-aware.\n\
    \    Figure 1: IDNA and Related DNS Terminology Space -- ASCII Labels\n      \
    \                  __________________________\n                        |  Non-ASCII\
    \             |\n                        |                        |\n        \
    \                |    ___________________ |\n                        |    | U-label\
    \ (5)     | |\n                        |    |_________________| |\n          \
    \              |    |                 | |\n                        |    |  Binary\
    \ Label   | |\n                        |    | (including      | |\n          \
    \              |    |  high bit on)   | |\n                        |    |_________________|\
    \ |\n                        |    |                 | |\n                    \
    \    |    | Bit String      | |\n                        |    |   Label      \
    \   | |\n                        |    |_________________| |\n                \
    \        |________________________|\n             (5) To applications that are\
    \ not IDNA-aware, U-labels\n                    are indistinguishable from Binary\
    \ ones.\n                        Figure 2: Non-ASCII Labels\n"
- title: 2.3.2.  Terms for IDN Label Codings
  contents:
  - '2.3.2.  Terms for IDN Label Codings

    '
- title: 2.3.2.1.  IDNA-valid strings, A-label, and U-label
  contents:
  - "2.3.2.1.  IDNA-valid strings, A-label, and U-label\n   For IDNA-aware applications,\
    \ the three types of valid labels are\n   \"A-labels\", \"U-labels\", and \"NR-LDH\
    \ labels\", each of which is defined\n   below.  The relationships among them\
    \ are illustrated in Figure 1 and\n   Figure 2.\n   o  A string is \"IDNA-valid\"\
    \ if it meets all of the requirements of\n      these specifications for an IDNA\
    \ label.  IDNA-valid strings may\n      appear in either of the two forms defined\
    \ immediately below, or\n      may be drawn from the NR-LDH label subset.  IDNA-valid\
    \ strings\n      must also conform to all basic DNS requirements for labels. \
    \ These\n      documents make specific reference to the form appropriate to any\n\
    \      context in which the distinction is important.\n   o  An \"A-label\" is\
    \ the ASCII-Compatible Encoding (ACE, see\n      Section 2.3.2.5) form of an IDNA-valid\
    \ string.  It must be a\n      complete label: IDNA is defined for labels, not\
    \ for parts of them\n      and not for complete domain names.  This means, by\
    \ definition,\n      that every A-label will begin with the IDNA ACE prefix, \"\
    xn--\"\n      (see Section 2.3.2.5), followed by a string that is a valid output\n\
    \      of the Punycode algorithm [RFC3492] and hence a maximum of 59\n      ASCII\
    \ characters in length.  The prefix and string together must\n      conform to\
    \ all requirements for a label that can be stored in the\n      DNS including\
    \ conformance to the rules for LDH labels\n      (Section 2.3.1).  If and only\
    \ if a string meeting the above\n      requirements can be decoded into a U-label\
    \ is it an A-label.\n   o  A \"U-label\" is an IDNA-valid string of Unicode characters,\
    \ in\n      Normalization Form C (NFC) and including at least one non-ASCII\n\
    \      character, expressed in a standard Unicode Encoding Form (such as\n   \
    \   UTF-8).  It is also subject to the constraints about permitted\n      characters\
    \ that are specified in Section 4.2 of the Protocol\n      document and the rules\
    \ in the Sections 2 and 3 of the Tables\n      document, the Bidi constraints\
    \ in that document if it contains any\n      character from scripts that are written\
    \ right to left, and the\n      symmetry constraint described immediately below.\
    \  Conversions\n      between U-labels and A-labels are performed according to\
    \ the\n      \"Punycode\" specification [RFC3492], adding or removing the ACE\n\
    \      prefix as needed.\n   To be valid, U-labels and A-labels must obey an important\
    \ symmetry\n   constraint.  While that constraint may be tested in any of several\n\
    \   ways, an A-label A1 must be capable of being produced by conversion\n   from\
    \ a U-label U1, and that U-label U1 must be capable of being\n   produced by conversion\
    \ from A-label A1.  Among other things, this\n   implies that both U-labels and\
    \ A-labels must be strings in Unicode\n   NFC [Unicode-UAX15] normalized form.\
    \  These strings MUST contain only\n   characters specified elsewhere in this\
    \ document series, and only in\n   the contexts indicated as appropriate.\n  \
    \ Any rules or conventions that apply to DNS labels in general apply to\n   whichever\
    \ of the U-label or A-label would be more restrictive.  There\n   are two exceptions\
    \ to this principle.  First, the restriction to\n   ASCII characters does not\
    \ apply to the U-label.  Second, expansion of\n   the A-label form to a U-label\
    \ may produce strings that are much\n   longer than the normal 63 octet DNS limit\
    \ (potentially up to 252\n   characters) due to the compression efficiency of\
    \ the Punycode\n   algorithm.  Such extended-length U-labels are valid from the\n\
    \   standpoint of IDNA, but caution should be exercised as shorter limits\n  \
    \ may be imposed by some applications.\n   For context, applications that are\
    \ not IDNA-aware treat all LDH\n   labels as valid for appearance in DNS zone\
    \ files and queries and some\n   of them may permit additional types of labels\
    \ (i.e., not impose the\n   LDH restriction).  IDNA-aware applications permit\
    \ only A-labels and\n   NR-LDH labels to appear in zone files and queries.  U-labels\
    \ can\n   appear, along with the other two, in presentation and user interface\n\
    \   forms, and in protocols that use IDNA forms but that do not involve\n   the\
    \ DNS itself.\n   Specifically, for IDNA-aware applications and contexts, the\
    \ three\n   allowed categories are A-label, U-label, and NR-LDH label.  Of the\n\
    \   Reserved LDH labels (R-LDH labels) only A-labels are valid for IDNA\n   use.\n\
    \   Strings that appear to be A-labels or U-labels are processed in\n   various\
    \ operations of the Protocol document [RFC5891].  Those strings\n   are not yet\
    \ demonstrably conformant with the conditions outlined\n   above because they\
    \ are in the process of validation.  Such strings\n   may be referred to as \"\
    unvalidated\", \"putative\", or \"apparent\", or as\n   being \"in the form of\"\
    \ one of the label types to indicate that they\n   have not been verified to meet\
    \ the specified conformance\n   requirements.\n   Unvalidated A-labels are known\
    \ only to be XN-labels, while Fake\n   A-labels have been demonstrated to fail\
    \ some of the A-label tests.\n   Similarly, unvalidated U-labels are simply non-ASCII\
    \ labels that may\n   or may not meet the requirements for U-labels.\n"
- title: 2.3.2.2.  NR-LDH Label
  contents:
  - "2.3.2.2.  NR-LDH Label\n   These specifications use the term \"NR-LDH label\"\
    \ strictly to refer to\n   an all-ASCII label that obeys the LDH label syntax\
    \ discussed in\n   Section 2.3.1 and that is neither an IDN nor a label form reserved\
    \ by\n   IDNA (R-LDH label).  It should be stressed that all A-labels obey the\n\
    \   \"hostname\" [RFC0952] rules other than the length restriction in those\n\
    \   rules.\n"
- title: 2.3.2.3.  Internationalized Domain Name and Internationalized Label
  contents:
  - "2.3.2.3.  Internationalized Domain Name and Internationalized Label\n   An \"\
    internationalized domain name\" (IDN) is a domain name that\n   contains at least\
    \ one A-label or U-label, but that otherwise may\n   contain any mixture of NR-LDH\
    \ labels, A-labels, or U-labels.  Just as\n   has been the case with ASCII names,\
    \ some DNS zone administrators may\n   impose restrictions, beyond those imposed\
    \ by DNS or IDNA, on the\n   characters or strings that may be registered as labels\
    \ in their\n   zones.  Because of the diversity of characters that can be used\
    \ in a\n   U-label and the confusion they might cause, such restrictions are\n\
    \   mandatory for IDN registries and zones even though the particular\n   restrictions\
    \ are not part of these specifications (the issue is\n   discussed in more detail\
    \ in Section 4.3 of the Protocol document\n   [RFC5891].  Because these restrictions,\
    \ commonly known as \"registry\n   restrictions\", only affect what can be registered\
    \ and not lookup\n   processing, they have no effect on the syntax or semantics\
    \ of DNS\n   protocol messages; a query for a name that matches no records will\n\
    \   yield the same response regardless of the reason why it is not in the\n  \
    \ zone.  Clients issuing queries or interpreting responses cannot be\n   assumed\
    \ to have any knowledge of zone-specific restrictions or\n   conventions.  See\
    \ the section on registration policy in the Rationale\n   document [RFC5894] for\
    \ additional discussion.\n   \"Internationalized label\" is used when a term is\
    \ needed to refer to a\n   single label of an IDN, i.e., one that might be any\
    \ of an NR-LDH\n   label, A-label, or U-label.  There are some standardized DNS\
    \ label\n   formats, such as the \"underscore labels\" used for service location\n\
    \   (SRV) records [RFC2782], that do not fall into any of the three\n   categories\
    \ and hence are not internationalized labels.\n"
- title: 2.3.2.4.  Label Equivalence
  contents:
  - "2.3.2.4.  Label Equivalence\n   In IDNA, equivalence of labels is defined in\
    \ terms of the A-labels.\n   If the A-labels are equal in a case-independent comparison,\
    \ then the\n   labels are considered equivalent, no matter how they are represented.\n\
    \   Because of the isomorphism of A-labels and U-labels in IDNA2008, it\n   is\
    \ possible to compare U-labels directly; see the Protocol document\n   [RFC5891]\
    \ for details.  Traditional LDH labels already have a notion\n   of equivalence:\
    \ within that list of characters, uppercase and\n   lowercase are considered equivalent.\
    \  The IDNA notion of equivalence\n   is an extension of that older notion but,\
    \ because the protocol does\n   not specify any mandatory mapping and only those\
    \ isomorphic forms are\n   considered, the only equivalents are:\n   o  Exact\
    \ (bit-string identity) matches between a pair of U-labels.\n   o  Matches between\
    \ a pair of A-labels, using normal DNS\n      case-insensitive matching rules.\n\
    \   o  Equivalence between a U-label and an A-label determined by\n      translating\
    \ the U-label form into an A-label form and then testing\n      for a match between\
    \ the A-labels using normal DNS case-insensitive\n      matching rules.\n"
- title: 2.3.2.5.  ACE Prefix
  contents:
  - "2.3.2.5.  ACE Prefix\n   The \"ACE prefix\" is defined in this document to be\
    \ a string of ASCII\n   characters, \"xn--\", that appears at the beginning of\
    \ every A-label.\n   \"ACE\" stands for \"ASCII-Compatible Encoding\".\n"
- title: 2.3.2.6.  Domain Name Slot
  contents:
  - "2.3.2.6.  Domain Name Slot\n   A \"domain name slot\" is defined in this document\
    \ to be a protocol\n   element or a function argument or a return value (and so\
    \ on)\n   explicitly designated for carrying a domain name.  Examples of domain\n\
    \   name slots include the QNAME field of a DNS query; the name argument\n   of\
    \ the gethostbyname() or getaddrinfo() standard C library functions;\n   the part\
    \ of an email address following the at sign (\"@\") in the\n   parameter to the\
    \ SMTP MAIL or RCPT commands or the \"From:\" field of\n   an email message header;\
    \ and the host portion of the URI in the \"src\"\n   attribute of an HTML \"<IMG>\"\
    \ tag.  A string that has the syntax of a\n   domain name but that appears in\
    \ general text is not in a domain name\n   slot.  For example, a domain name appearing\
    \ in the plain text body of\n   an email message is not occupying a domain name\
    \ slot.\n   An \"IDNA-aware domain name slot\" is defined for this set of documents\n\
    \   to be a domain name slot explicitly designated for carrying an\n   internationalized\
    \ domain name as defined in this document.  The\n   designation may be static\
    \ (for example, in the specification of the\n   protocol or interface) or dynamic\
    \ (for example, as a result of\n   negotiation in an interactive session).\n \
    \  Name slots that are not IDNA-aware obviously include any domain name\n   slot\
    \ whose specification predates IDNA.  Note that the requirements\n   of some protocols\
    \ that use the DNS for data storage prevent the use\n   of IDNs.  For example,\
    \ the format required for the underscore labels\n   used by the service location\
    \ protocol [RFC2782] precludes\n   representation of a non-ASCII label in the\
    \ DNS using A-labels because\n   those SRV-related labels must start with underscores.\
    \  Of course,\n   non-ASCII IDN labels may be part of a domain name that also\
    \ includes\n   underscore labels.\n"
- title: 2.3.3.  Order of Characters in Labels
  contents:
  - "2.3.3.  Order of Characters in Labels\n   Because IDN labels may contain characters\
    \ that are read, and\n   preferentially displayed, from right to left, there is\
    \ a potential\n   ambiguity about which character in a label is \"first\".  For\
    \ the\n   purposes of these specifications, labels are considered, and\n   characters\
    \ numbered, strictly in the order in which they appear \"on\n   the wire\".  That\
    \ order is equivalent to the leftmost character being\n   treated as first in\
    \ a label that is read left to right and to the\n   rightmost character being\
    \ first in a label that is read right to\n   left.  The Bidi specification contains\
    \ additional discussion of the\n   conditions that influence reading order.\n"
- title: 2.3.4.  Punycode is an Algorithm, Not a Name or Adjective
  contents:
  - "2.3.4.  Punycode is an Algorithm, Not a Name or Adjective\n   There has been\
    \ some confusion about whether a \"Punycode string\" does\n   or does not include\
    \ the ACE prefix and about whether it is required\n   that such strings could\
    \ have been the output of the ToASCII operation\n   (see RFC 3490, Section 4 [RFC3490]).\
    \  This specification discourages\n   the use of the term \"Punycode\" to describe\
    \ anything but the encoding\n   method and algorithm of RFC 3492 [RFC3492].  The\
    \ terms defined above\n   are preferred as much more clear than the term \"Punycode\
    \ string\".\n"
- title: 3.  IANA Considerations
  contents:
  - "3.  IANA Considerations\n   IANA actions for this version of IDNA (IDNA2008)\
    \ are specified in the\n   Tables document [RFC5892].  An overview of the relationships\
    \ among\n   the various IANA registries appears in the Rationale document\n  \
    \ [RFC5894].  This document does not specify any actions for IANA.\n"
- title: 4.  Security Considerations
  contents:
  - '4.  Security Considerations

    '
- title: 4.1.  General Issues
  contents:
  - "4.1.  General Issues\n   Security on the Internet partly relies on the DNS. \
    \ Thus, any change\n   to the characteristics of the DNS can change the security\
    \ of much of\n   the Internet.\n   Domain names are used by users to identify\
    \ and connect to Internet\n   hosts and other network resources.  The security\
    \ of the Internet is\n   compromised if a user entering a single internationalized\
    \ name is\n   connected to different servers based on different interpretations\
    \ of\n   the internationalized domain name.  In addition to characters that\n\
    \   are permitted by IDNA2003 and its mapping conventions (see\n   Section 4.6),\
    \ the current specification changes the interpretation of\n   a few characters\
    \ that were mapped to others in the earlier version;\n   zone administrators should\
    \ be aware of the problems that this might\n   raise and take appropriate measures.\
    \  The context for this issue is\n   discussed in more detail in the Rationale\
    \ document [RFC5894].\n   In addition to the Security Considerations material\
    \ that appears in\n   this document, the Bidi document [RFC5893] contains a discussion\
    \ of\n   security issues specific to labels containing characters from scripts\n\
    \   that are normally written right to left.\n"
- title: 4.2.  U-label Lengths
  contents:
  - "4.2.  U-label Lengths\n   Labels associated with the DNS have traditionally been\
    \ limited to 63\n   octets by the general restrictions in RFC 1035 and by the\
    \ need to\n   treat them as a six-bit string length followed by the string in\n\
    \   actual calls to the DNS.  That format is used in some other\n   applications\
    \ and, in general, that representations of domain names as\n   dot-separated labels\
    \ and as length-string pairs have been treated as\n   interchangeable.  Because\
    \ A-labels (the form actually used in the\n   DNS) are potentially much more compressed\
    \ than UTF-8 (and UTF-8 is,\n   in general, more compressed that UTF-16 or UTF-32),\
    \ U-labels that\n   obey all of the relevant symmetry (and other) constraints\
    \ of these\n   documents may be quite a bit longer, potentially up to 252 characters\n\
    \   (Unicode code points).  A fully-qualified domain name containing\n   several\
    \ such labels can obviously also exceed the nominal 255 octet\n   limit for such\
    \ names.  Application authors using U-labels must exert\n   due caution to avoid\
    \ buffer overflow and truncation errors and\n   attacks in contexts where shorter\
    \ strings are expected.\n"
- title: 4.3.  Local Character Set Issues
  contents:
  - "4.3.  Local Character Set Issues\n   When systems use local character sets other\
    \ than ASCII and Unicode,\n   these specifications leave the problem of converting\
    \ between the\n   local character set and Unicode up to the application or local\n\
    \   system.  If different applications (or different versions of one\n   application)\
    \ implement different rules for conversions among coded\n   character sets, they\
    \ could interpret the same name differently and\n   contact different servers.\
    \  This problem is not solved by security\n   protocols, such as Transport Layer\
    \ Security (TLS) [RFC5246], that do\n   not take local character sets into account.\n"
- title: 4.4.  Visually Similar Characters
  contents:
  - "4.4.  Visually Similar Characters\n   To help prevent confusion between characters\
    \ that are visually\n   similar (sometimes called \"confusables\"), it is suggested\
    \ that\n   implementations provide visual indications where a domain name\n  \
    \ contains multiple scripts, especially when the scripts contain\n   characters\
    \ that are easily confused visually, such as an omicron in\n   Greek mixed with\
    \ Latin text.  Such mechanisms can also be used to\n   show when a name contains\
    \ a mixture of Simplified Chinese characters\n   with Traditional ones that have\
    \ Simplified forms, or to distinguish\n   zero and one from uppercase \"O\" and\
    \ lowercase \"L\".  DNS zone\n   administrators may impose restrictions (subject\
    \ to the limitations\n   identified elsewhere in these documents) that try to\
    \ minimize\n   characters that have similar appearance or similar interpretations.\n\
    \   If multiple characters appear in a label and the label consists only\n   of\
    \ characters in one script, individual characters that might be\n   confused with\
    \ others if compared separately may be unambiguous and\n   non-confusing.  On\
    \ the other hand, that observation makes labels\n   containing characters from\
    \ more than one script (often called \"mixed-\n   script labels\") even more risky\
    \ -- users will tend to see what they\n   expect to see and context is a powerful\
    \ reinforcement to perception.\n   At the same time, while the risks associated\
    \ with mixed-script labels\n   are clear, simply prohibiting them will not eliminate\
    \ problems,\n   especially where closely related scripts are involved.  For example,\n\
    \   there are many strings that are entirely in Greek or Cyrillic scripts\n  \
    \ that can be confused with each other or with Latin script strings.\n   It is\
    \ worth noting that there are no comprehensive technical\n   solutions to the\
    \ problems of confusable characters.  One can reduce\n   the extent of the problems\
    \ in various ways, but probably never\n   eliminate it.  Some specific suggestions\
    \ about identification and\n   handling of confusable characters appear in a Unicode\
    \ Consortium\n   publication [Unicode-UTR36].\n"
- title: 4.5.  IDNA Lookup, Registration, and the Base DNS Specifications
  contents:
  - "4.5.  IDNA Lookup, Registration, and the Base DNS Specifications\n   The Protocol\
    \ specification [RFC5891] describes procedures for\n   registering and looking\
    \ up labels that are not compatible with the\n   preferred syntax described in\
    \ the base DNS specifications (see\n   Section 2.3.1) because they contain non-ASCII\
    \ characters.  These\n   procedures depend on the use of a special ASCII-compatible\
    \ encoding\n   form that contains only characters permitted in hostnames by those\n\
    \   earlier specifications.  The encoding used is Punycode [RFC3492].  No\n  \
    \ security issues such as string length increases or new allowed values\n   are\
    \ introduced by the encoding process or the use of these encoded\n   values, apart\
    \ from those introduced by the ACE encoding itself.\n   Domain names (or portions\
    \ of them) are sometimes compared against a\n   set of domains to be given special\
    \ treatment if a match occurs, e.g.,\n   treated as more privileged than others\
    \ or blocked in some way.  In\n   such situations, it is especially important\
    \ that the comparisons be\n   done properly, as specified in the \"Requirements\"\
    \ section of the\n   Protocol document [RFC5891].  For labels already in ASCII\
    \ form, the\n   proper comparison reduces to the same case-insensitive ASCII\n\
    \   comparison that has always been used for ASCII labels although\n   IDNA-aware\
    \ applications are expected to look up only A-labels and\n   NR-LDH labels, i.e.,\
    \ to avoid looking up R-LDH labels that are not\n   A-labels.\n   The introduction\
    \ of IDNA meant that any existing labels that start\n   with the ACE prefix would\
    \ be construed as A-labels, at least until\n   they failed one of the relevant\
    \ tests, whether or not that was the\n   intent of the zone administrator or registrant.\
    \  There is no evidence\n   that this has caused any practical problems since\
    \ RFC 3490 was\n   adopted, but the risk still exists in principle.\n"
- title: 4.6.  Legacy IDN Label Strings
  contents:
  - "4.6.  Legacy IDN Label Strings\n   The URI Standard [RFC3986] and a number of\
    \ application specifications\n   (e.g., SMTP [RFC5321] and HTTP [RFC2616]) do\
    \ not permit non-ASCII\n   labels in DNS names used with those protocols, i.e.,\
    \ only the A-label\n   form of IDNs is permitted in those contexts.  If only A-labels\
    \ are\n   used, differences in interpretation between IDNA2003 and this version\n\
    \   arise only for characters whose interpretation have actually changed\n   (e.g.,\
    \ characters, such as ZWJ and ZWNJ, that were mapped to nothing\n   in IDNA2003\
    \ and that are considered legitimate in some contexts by\n   these specifications).\
    \  Despite that prohibition, there are a\n   significant number of files and databases\
    \ on the Internet in which\n   domain name strings appear in native-character\
    \ form; a subset of\n   those strings use native-character labels that require\
    \ IDNA2003\n   mapping to produce valid A-labels.  The treatment of such labels\
    \ will\n   vary by types of applications and application-designer preference:\
    \ in\n   some situations, warnings to the user or outright rejection may be\n\
    \   appropriate; in others, it may be preferable to attempt to apply the\n   earlier\
    \ mappings if lookup strictly conformant to these\n   specifications fails or\
    \ even to do lookups under both sets of rules.\n   This general situation is discussed\
    \ in more detail in the Rationale\n   document [RFC5894].  However, in the absence\
    \ of care by registries\n   about how strings that could have different interpretations\
    \ under\n   IDNA2003 and the current specification are handled, it is possible\n\
    \   that the differences could be used as a component of name-matching or\n  \
    \ name-confusion attacks.  Such care is therefore appropriate.\n"
- title: 4.7.  Security Differences from IDNA2003
  contents:
  - "4.7.  Security Differences from IDNA2003\n   The registration and lookup models\
    \ described in this set of documents\n   change the mechanisms available for lookup\
    \ applications to determine\n   the validity of labels they encounter.  In some\
    \ respects, the ability\n   to test is strengthened.  For example, putative labels\
    \ that contain\n   unassigned code points will now be rejected, while IDNA2003\
    \ permitted\n   them (see the Rationale document [RFC5894] for a discussion of\
    \ the\n   reasons for this).  On the other hand, the Protocol specification no\n\
    \   longer assumes that the application that looks up a name will be able\n  \
    \ to determine, and apply, information about the protocol version used\n   in\
    \ registration.  In theory, that may increase risk since the\n   application will\
    \ be able to do less pre-lookup validation.  In\n   practice, the protection afforded\
    \ by that test has been largely\n   illusory for reasons explained in RFC 4690\
    \ [RFC4690] and elsewhere in\n   these documents.\n   Any change to the Stringprep\
    \ [RFC3454] procedure that is profiled and\n   used in IDNA2003, or, more broadly,\
    \ the IETF's model of the use of\n   internationalized character strings in different\
    \ protocols, creates\n   some risk of inadvertent changes to those protocols,\
    \ invalidating\n   deployed applications or databases, and so on.  But these\n\
    \   specifications do not change Stringprep at all; they merely bypass\n   it.\
    \  Because these documents do not depend on Stringprep, the\n   question of upgrading\
    \ other protocols that do have that dependency\n   can be left to experts on those\
    \ protocols: the IDNA changes and\n   possible upgrades to security protocols\
    \ or conventions are\n   independent issues.\n"
- title: 4.8.  Summary
  contents:
  - "4.8.  Summary\n   No mechanism involving names or identifiers alone can protect\
    \ against\n   a wide variety of security threats and attacks that are largely\n\
    \   independent of the naming or identification system.  These attacks\n   include\
    \ spoofed pages, DNS query trapping and diversion, and so on.\n"
- title: 5.  Acknowledgments
  contents:
  - "5.  Acknowledgments\n   The initial version of this document was created largely\
    \ by\n   extracting text from early draft versions of the Rationale document\n\
    \   [RFC5894].  See the section of this name and the one entitled\n   \"Contributors\"\
    , in it.\n   Specific textual suggestions after the extraction process came from\n\
    \   Vint Cerf, Lisa Dusseault, Bill McQuillan, Andrew Sullivan, and Ken\n   Whistler.\
    \  Other changes were made in response to more general\n   comments, lists of\
    \ concerns or specific errors from participants in\n   the Working Group and other\
    \ observers, including Lyman Chapin, James\n   Mitchell, Subramanian Moonesamy,\
    \ and Dan Winship.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [ASCII]      American National Standards Institute\
    \ (formerly United\n                States of America Standards Institute), \"\
    USA Code for\n                Information Interchange\", ANSI X3.4-1968, 1968.\
    \  ANSI\n                X3.4-1968 has been replaced by newer versions with\n\
    \                slight modifications, but the 1968 version remains\n        \
    \        definitive for the Internet.\n   [RFC1034]    Mockapetris, P., \"Domain\
    \ names - concepts and\n                facilities\", STD 13, RFC 1034, November\
    \ 1987.\n   [RFC1035]    Mockapetris, P., \"Domain names - implementation and\n\
    \                specification\", STD 13, RFC 1035, November 1987.\n   [RFC1123]\
    \    Braden, R., \"Requirements for Internet Hosts -\n                Application\
    \ and Support\", STD 3, RFC 1123, October 1989.\n   [RFC2119]    Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n                Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [Unicode-UAX15]\n                The Unicode\
    \ Consortium, \"Unicode Standard Annex #15:\n                Unicode Normalization\
    \ Forms, Revision 31\",\n                September 2009,\n                <http://www.unicode.org/reports/tr15/tr15-31.html>.\n\
    \   [Unicode52]  The Unicode Consortium.  The Unicode Standard, Version\n    \
    \            5.2.0, defined by: \"The Unicode Standard, Version\n            \
    \    5.2.0\", (Mountain View, CA: The Unicode Consortium,\n                2009.\
    \ ISBN 978-1-936213-00-9).\n                <http://www.unicode.org/versions/Unicode5.2.0/>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [IDNA2008-Mapping]\n                Resnick,\
    \ P. and P. Hoffman, \"Mapping Characters in\n                Internationalized\
    \ Domain Names for Applications (IDNA)\",\n                Work in Progress, April\
    \ 2010.\n   [RFC0952]    Harrenstien, K., Stahl, M., and E. Feinler, \"DoD\n \
    \               Internet host table specification\", RFC 952,\n              \
    \  October 1985.\n   [RFC2181]    Elz, R. and R. Bush, \"Clarifications to the\
    \ DNS\n                Specification\", RFC 2181, July 1997.\n   [RFC2616]   \
    \ Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n                Masinter,\
    \ L., Leach, P., and T. Berners-Lee, \"Hypertext\n                Transfer Protocol\
    \ -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2673]    Crawford, M., \"Binary\
    \ Labels in the Domain Name System\",\n                RFC 2673, August 1999.\n\
    \   [RFC2782]    Gulbrandsen, A., Vixie, P., and L. Esibov, \"A DNS RR for\n \
    \               specifying the location of services (DNS SRV)\",\n           \
    \     RFC 2782, February 2000.\n   [RFC3454]    Hoffman, P. and M. Blanchet, \"\
    Preparation of\n                Internationalized Strings (\"stringprep\")\",\
    \ RFC 3454,\n                December 2002.\n   [RFC3490]    Faltstrom, P., Hoffman,\
    \ P., and A. Costello,\n                \"Internationalizing Domain Names in Applications\n\
    \                (IDNA)\", RFC 3490, March 2003.\n   [RFC3491]    Hoffman, P.\
    \ and M. Blanchet, \"Nameprep: A Stringprep\n                Profile for Internationalized\
    \ Domain Names (IDN)\",\n                RFC 3491, March 2003.\n   [RFC3492] \
    \   Costello, A., \"Punycode: A Bootstring encoding of\n                Unicode\
    \ for Internationalized Domain Names in\n                Applications (IDNA)\"\
    , RFC 3492, March 2003.\n   [RFC3986]    Berners-Lee, T., Fielding, R., and L.\
    \ Masinter, \"Uniform\n                Resource Identifier (URI): Generic Syntax\"\
    , STD 66,\n                RFC 3986, January 2005.\n   [RFC4690]    Klensin, J.,\
    \ Faltstrom, P., Karp, C., and IAB, \"Review\n                and Recommendations\
    \ for Internationalized Domain Names\n                (IDNs)\", RFC 4690, September\
    \ 2006.\n   [RFC5246]    Dierks, T. and E. Rescorla, \"The Transport Layer\n \
    \               Security (TLS) Protocol Version 1.2\", RFC 5246,\n           \
    \     August 2008.\n   [RFC5321]    Klensin, J., \"Simple Mail Transfer Protocol\"\
    , RFC 5321,\n                October 2008.\n   [RFC5891]    Klensin, J., \"Internationalized\
    \ Domain Names in\n                Applications (IDNA): Protocol\", RFC 5891,\
    \ August 2010.\n   [RFC5892]    Faltstrom, P., Ed., \"The Unicode Code Points\
    \ and\n                Internationalized Domain Names for Applications (IDNA)\"\
    ,\n                RFC 5892, August 2010.\n   [RFC5893]    Alvestrand, H. and\
    \ C. Karp, \"Right-to-Left Scripts for\n                Internationalized Domain\
    \ Names for Applications (IDNA)\",\n                RFC 5893, August 2010.\n \
    \  [RFC5894]    Klensin, J., \"Internationalized Domain Names for\n          \
    \      Applications (IDNA): Background, Explanation, and\n                Rationale\"\
    , RFC 5894, August 2010.\n   [Unicode-UTR36]\n                The Unicode Consortium,\
    \ \"Unicode Technical Report #36:\n                Unicode Security Considerations,\
    \ Revision 7\", July 2008,\n                <http://www.unicode.org/reports/tr36/tr36-7.html>.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   John C Klensin\n   1770 Massachusetts Ave, Ste 322\n   Cambridge,\
    \ MA  02140\n   USA\n   Phone: +1 617 245 1457\n   EMail: john+ietf@jck.com\n"
