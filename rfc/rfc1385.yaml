- title: __initial_text__
  contents:
  - "                  EIP: The Extended Internet Protocol\n           A Framework\
    \ for Maintaining Backward Compatibility\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \ It does\n   not specify an Internet standard. Distribution of this memo is\n\
    \   unlimited.\n"
- title: Summary
  contents:
  - "Summary\n   The Extended Internet Protocol (EIP) provides a framework for solving\n\
    \   the problem of address space exhaustion with a new addressing and\n   routing\
    \ scheme, yet maintaining maximum backward compatibility with\n   current IP.\
    \ EIP can substantially reduce the amount of modifications\n   needed to the current\
    \ Internet systems and greatly ease the\n   difficulties of transition. This is\
    \ an \"idea\" paper and discussion is\n   strongly encouraged on Big-Internet@munnari.oz.au.\n"
- title: Introduction
  contents:
  - "Introduction\n   The Internet faces two serious scaling problems: address exhaustion\n\
    \   and routing explosion [1-2]. The Internet will run out of Class B\n   numbers\
    \ soon and the 32-bit IP address space will be exhausted\n   altogether in a few\
    \ years time.  The total number of IP networks will\n   also grow to a point where\
    \ routing algorithms will not be able to\n   perform routing based a flat network\
    \ number.\n   A number of short-term solutions have been proposed recently which\n\
    \   attempt to make more efficient use of the the remaining address space\n  \
    \ and to ease the immediate difficulties [3-5].  However, it is\n   important\
    \ that a long term solution be developed and deployed before\n   the 32-bit address\
    \ space runs out.\n   An obvious approach to this problem is to replace the current\
    \ IP with\n   a new internet protocol that has no backward compatibility with\
    \ the\n   current IP. A number of proposals have been put forward: Pip[7],\n \
    \  Nimrod [8], TUBA [6] and SIP [14].  However, as IP is really the\n   cornerstone\
    \ of the current Internet, replacing it with a new \"IP\"\n   requires fundamental\
    \ changes to many aspects of the Internet system\n   (e.g., routing, routers,\
    \ hosts, ARP, RARP, ICMP, TCP, UDP, DNS, FTP).\n   Migrating to a new \"IP\" in\
    \ effect creates a new \"Internet\".  The\n   development and deployment of such\
    \ a new \"Internet\" would take a very\n   large amount of time and effort. In\
    \ particular, in order to maintain\n   interoperability between the old and new\
    \ systems during the\n   transition period, almost all upgraded systems have to\
    \ run both the\n   new and old versions in parallel and also have to determine\
    \ which\n   version to use depending on whether the other side is upgraded or\n\
    \   not.\n   Let us now have a look at the detailed changes that will be required\n\
    \   to replace the current IP with a completely new \"IP\" and to maintain\n \
    \  the interoperability between the new and the old systems.\n   1) Border Routers:\
    \ Border routers have to be upgraded and to provide\n      address translation\
    \ service for IP packets across the boundaries.\n      Note that the translation\
    \ has to be done on the outgoing IP\n      packets as well as the in-coming packets\
    \ to IP hosts.\n   2) Subnet Routers: Subnet Routers have to be upgraded and have\
    \ to\n      deal with both the new and the old packet formats.\n   3) Hosts: Hosts\
    \ have to be upgraded and run both the new and the\n      old protocols in parallel.\
    \ Upgraded hosts also have to determine\n      whether the other side is upgraded\
    \ or not in order to choose the\n      correct protocol to use.\n   4) DNS: The\
    \ DNS has to be modified to provide mapping for domain\n      names and new addresses.\n\
    \   5) ARP/RARP: ARP/RARP have to be modified, and upgraded hosts and\n      routers\
    \ have to deal with both the old and new ARP/RARP packets.\n   6) ICMP: ICMP has\
    \ to be modified, and the upgraded routers have to\n      be able to generate\
    \ both both old and new ICMP packets.  However,\n      it may be impossible for\
    \ a backbone router to determine\n      whether the packet comes from an upgraded\
    \ host or an IP host but\n      translated by the border router.\n   7) TCP/UDP\
    \ Checksum: The pseudo headers may have to be modified to\n      use the new addresses.\n\
    \   8) FTP: The DATA PORT (PORT) command has to be changed to pass new\n     \
    \ addresses.\n   In this paper, we argue that an evolutionary approach can extend\
    \ the\n   addressing space yet maintain backward compatibility.  The Extended\n\
    \   Internet Protocol (EIP) we present here can be used as a framework by\n  \
    \ which a new routing and addressing scheme may solve the problem of\n   address\
    \ exhaustion yet maintain maximum backward compatibility to\n   current IP.\n\
    \   EIP has a number of very desirable features:\n   1) EIP allows the Internet\
    \ to have virtually unlimited number of\n      network numbers and over 10**9\
    \ hosts in each network.\n   2) EIP is flexible to accommodate most routing and\
    \ addressing\n      schemes, such as those proposed in Nimrod [8], Pip [7], NSAP\
    \ [9]\n      and CityCodes [10]. EIP also allows new fields such as Handling\n\
    \      Directive [7] or CI [11] to be added.\n   3) EIP can substantially reduce\
    \ the amount of modifications to\n      current systems and greatly ease the difficulties\
    \ in transition.\n      In particular, it does not require the upgraded hosts\
    \ and subnet\n      routers to run two set of protocols in parallel.\n   4) EIP\
    \ requires no changes to all assigned IP addresses and subnet\n      structures\
    \ in local are networks.  and requires no modifications\n      to ARP/RARP, ICMP,\
    \ TCP/UDP checksum.\n   5) EIP can greatly ease the difficulties of transition.\
    \  During the\n      transition period, no upgrade is required to the subnet routers.\n\
    \      EIP hosts maintain full compatibility with IP hosts within the\n      same\
    \ network, even after the transition period.  During the\n      transition period,\
    \ IP hosts can communicate with any hosts in\n      other networks via a simple\
    \ translation service.\n   In the rest of the paper, IP refers to the current\
    \ Internet Protocol\n   and EIP refers to the Extended Internet Protocol (EIP\
    \ is pronounced\n   as \"ape\" - a step forward in the evolution :-).\n"
- title: Extended Internet Protocol (EIP)
  contents:
  - "Extended Internet Protocol (EIP)\n   The EIP header format is shown in Figure\
    \ 1 and the contents of the\n   header follows.\n       0                   1\
    \                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |Version|  IHL  |Type of Service|          Total Length         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \         Identification        |Flags|      Fragment Offset    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Time to Live |    Protocol   |         Header Checksum       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                Source Host Number                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |              Destination Host Number                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     EIP ID    | EIP Ext Length|   EIP Extension (variable)    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                    Figure 1: EIP Header Format\n   Version:  4 bits\n     The\
    \ Version field is identical to that of IP. This field is set\n     purely for\
    \ compatibility with IP hosts. It is not checked by EIP\n     hosts.\n   IHL:\
    \  4 bits\n     Internet Header Length is identical to that of IP. IHL is set\
    \ to\n     the length of EIP header purely for compatibility with IP. This\n \
    \    field is not checked by EIP hosts.  see below the EIP Extension\n     Length\
    \ field for more details)\n   Type of Service:  8 bits\n     The ToS field is\
    \ identical to that of IP.\n   Total Length:  16 bits\n     The Total Length field\
    \ is identical to that of IP.\n   Identification:  16 bits\n     The Identification\
    \ field is identical to that of IP.\n   Flags:  3 bits\n     The Flags field is\
    \ identical to that of IP.\n   Fragment Offset:  13 bits\n     The Fragment Offset\
    \ field is identical to that of IP.\n   Time to Live:  8 bits\n     The Time to\
    \ Live field is identical to that of IP.\n   Protocol:  8 bits\n     The Protocol\
    \ field is identical to that of IP.\n   Header Checksum:  16 bits\n     The Header\
    \ Checksum field is identical to that of IP.\n   Source Host Number:  32 bits\n\
    \     The Source Host Number field is used for identifying the\n     source host\
    \ but is unique only within the source network\n     (the equivalent of the host\
    \ portion of the source IP address).\n   Destination Host Number:  32 bits\n \
    \    The Destination Host Number field is used for identifying the\n     destination\
    \ host but is unique only within the destination network\n     (the equivalent\
    \ of the host portion of the destination IP address).\n   EIP ID: 8 bits\n   \
    \  The EIP ID field equals to 0x8A. The EIP ID value is chosen\n     in such a\
    \ way that, to IP hosts and IP routers, an EIP appears\n     to be an IP packet\
    \ with a new IP option of following parameters:\n       COPY CLASS NUMBER LENGTH\
    \ DESCRIPTION\n       ---- ----- ------ ------ -----------\n         1    0  \
    \   TBD    var\n       Option:  Type=TBD\n   EIP Extension Length: 8 bits\n  \
    \      The EIP Extension Length field indicates the total length\n        of the\
    \ EIP ID field, EIP Extension Length field and the\n        EIP Extension field\
    \ in octets. The maximum length that the\n        IHL field above can specify\
    \ is 60 bytes, which is considered\n        too short in future. EIP hosts actually\
    \ use the EIP Extension\n        Length field to calculate the total header length:\n\
    \     The total header length = EIP Extension Length + 20.\n     The maximum header\
    \ length of an EIP packet is then 276 bytes.\n   EIP Extension: variable\n   \
    \  The EIP Extension field holds the Source Network Number,\n     Destination\
    \ Network Number and other fields. The format\n     of the Extension field is\
    \ not specified here. In its simplest\n     form, it can be used to hold two fixed\
    \ size fields as the\n     Source Network Number and Destination Network Number\
    \ as the\n     extension to the addressing space. Since the Extension\n     field\
    \ is variable in length, it can accommodate almost any\n     routing and addressing\
    \ schemes. For example, the Extension\n     field can be used to hold \"Routing\
    \ Directive\" etc specified\n     in Pip [7] or \"Endpoint IDs\" suggested in\
    \ Nimrod [8], or the\n     \"CityCode\" [10]. It can also hold other fields such\
    \ as the\n     \"Handling Directive\" [7] or \"Connectionless ID\" [11].\n   EIP\
    \ achieves maximum backward compatibility with IP by making the\n   extended space\
    \ appear to be an IP option to the IP hosts and routers.\n   When an IP host receives\
    \ an EIP packets, the EIP Extension field is\n   safely ignored as it appears\
    \ to the IP hosts as an new, therefore an\n   unknown, IP option.  As a result,\
    \ there is no need for translation\n   for in-coming EIP packets destined to IP\
    \ hosts and there is also no\n   need for subnet routers to be upgraded during\
    \ the transition period\n   see later section for more details).\n   EIP hosts\
    \ or routers can, however, determine whether a packet is an\n   IP packet or an\
    \ EIP packet by examining the EIP ID field, whose\n   position is fixed in the\
    \ header.\n   The EIP Extension field holds the Source and Destination Network\n\
    \   Numbers, which are only used for communications between different\n   networks.\
    \ For communications within the same network, the Network\n   Numbers may be omitted.\
    \ When the Extension field is omitted, there is\n   little difference between\
    \ an IP packet and an EIP packet.  Therefore,\n   EIP hosts can maintain completely\
    \ compatibility with IP hosts within\n   one network.\n   In EIP, the Network\
    \ Numbers and Host Numbers are separate and the IP\n   address field is used for\
    \ the Host Number in EIP. There are a number\n   of advantages:\n   1) It maintains\
    \ full compatibility between IP hosts and EIP hosts\n      for communications\
    \ within one network.  Note that the Network\n      Number is not needed for communications\
    \ within one network. A\n      host can omit the Extension field if it does not\
    \ need any other\n      information in the Extension field, when it communicates\
    \ with\n      another host within the same network.\n   2) It allows the IP subnet\
    \ routers to route EIP packet by treating\n      the Host Number as the IP address\
    \ during the transition period,\n      therefore the subnet routers are not required\
    \ to be updated\n      along the border routers.\n   3) It allows ARP/RARP to\
    \ work with both EIP and IP hosts without\n      any modifications.\n   4) It\
    \ allows the translation at the border routers much easier.\n      During the\
    \ transition period when the IP addresses are still\n      unique, the network\
    \ portion of the IP addresses can be directly\n      extracted and mapped to EIP\
    \ Network Numbers.\n"
- title: Modifications to IP Systems
  contents:
  - "Modifications to IP Systems\n   In this section, we outline the modifications\
    \ to the IP systems that\n   are needed for transition to EIP. Because of the\
    \ similarity between\n   the EIP and IP, the amount of modifications needed to\
    \ current systems\n   are substantially reduced.\n   1) Network Numbers: Each\
    \ network has to be assigned a new EIP Network\n      Number based on the addressing\
    \ scheme used. The mapping\n      between the IP network numbers and the EIP Network\
    \ Numbers can\n      be used for translation service (see below).\n   2) Host\
    \ Numbers: There is no need for assigning EIP Host Numbers.\n      All existing\
    \ hosts can use their current IP addresses as their\n      EIP Host Numbers. New\
    \ machines may be allocated any number from\n      the 32-bit Host Number space\
    \ since the structure posed on IP\n      addressing is no longer necessary. However,\
    \ during the transition,\n      allocation of EIP Host Numbers should still follow\
    \ the IP\n      addressing rule, so that the EIP Host Numbers are still globally\n\
    \      unique and can still be interpreted as IP addresses.  This will\n     \
    \ allow a more gradual transition to EIP (see below).\n   3) Translation Service:\
    \ During the transition period when the EIP\n      Host Numbers are still unique,\
    \ an address translation service\n      can be provided to IP hosts that need\
    \ communicate with hosts in\n      other networks cross the upgraded backbone\
    \ networks.  The\n      translation service can be provided by the border routers.\
    \  When a\n      border router receives an IP packet, it obtains the Destination\n\
    \      Network Number by looking up in the mapping table between IP\n      network\
    \ numbers and EIP Network Numbers. The border router then\n      adds the Extension\
    \ field with the Source and Destination Network\n      Numbers into the packet,\
    \ and forwards to the backbone networks.\n      It is only necessary to translate\
    \ the out-going IP packets to\n      the EIP packets.  There is no need to translate\
    \ the EIP packets\n      back to IP packets even when they are destined to IP\
    \ hosts.\n      This is because that the Extension field in the EIP packets\n\
    \      appears to IP hosts just an unknown IP option and is ignored by\n     \
    \ the IP hosts during the processing.\n   4) Border Routers: The new EIP Extension\
    \ has to be implemented and\n      routing has to be done based on the Network\
    \ Number in the EIP\n      Extension field. The border routers may have to provide\
    \ the\n      translation service for out-going IP packets during the transition\n\
    \      period.\n   5) Subnet Routers: No modifications are required during the\
    \ transition\n      period when EIP Host Numbers (which equals to the IP\n   \
    \   addresses) are still globally unique. The subnet routing is carried\n    \
    \  out based on the EIP Host Numbers and when the EIP Host\n      IDs are still\
    \ unique, subnet routers can determine, by treating\n      the EIP Host Number\
    \ as the IP addresses, whether a packet is\n      destined to remote networks\
    \ or not and forward correctly. The\n      Extension field in the EIP packets\
    \ also appear to the IP subnet\n      routers an unknown IP option and is ignored\
    \ in the processing.\n      However, subnet routers eventually have to implement\
    \ the EIP\n      Extension and carry out routing based on Network Numbers when\n\
    \      EIP Host Numbers are no longer globally unique.\n   6) Hosts: The EIP Extension\
    \ has to be implemented.  routing has to\n      be done based on the Network Number\
    \ in the EIP Extension field,\n      and also based on the Host Number and subnet\
    \ mask if subnetting\n      is used. IP hosts may communication with any hosts\
    \ within the\n      same network at any time. During the transition period when\
    \ the\n      EIP Host Numbers are still unique, IP hosts can communicate with\n\
    \      any hosts in other network via the translation service.\n   7) DNS: A new\
    \ resource record (RR) type \"N\" has to be added for EIP\n      Network Numbers.\
    \ The RR type \"A\", currently used for IP\n      addresses, can still be used\
    \ for EIP Host Numbers. RR type \"N\"\n      entries have to be added and RR type\
    \ \"PTR\" to be updated.  All\n      other entries remain unchanged.\n   8) ARP/RARP:\
    \ No modifications are required. The ARP and RARP are\n      used for mapping\
    \ between EIP Host Numbers and physical\n      addresses.\n   9) ICMP: No modifications\
    \ are required.\n   10) TCP/UDP Checksum: No modifications are required. The pseudo\n\
    \       header includes the EIP Source and Destination IDs instead of\n      \
    \ the source and destination IP addresses.\n   11) FTP: No modifications are required\
    \ during the transition period\n       when the IP hosts can still communicate\
    \ with hosts in other\n       networks via the translation service. After the\
    \ transition period,\n       however, the \"DATA Port (Port)\" command has to\
    \ be modified to\n       pass the port number only and ignore the IP address.\
    \  A new FTP\n       command may be created to pass both the port number and the\
    \ EIP\n       address to allow a third party to be involved in the file\n    \
    \   transfer.\n"
- title: Transition to EIP
  contents:
  - "Transition to EIP\n   In this section, we outline a plan for transition to EIP.\n\
    \   EIP can greatly reduce the complexity of transition. In particular,\n   there\
    \ is no need for the updated hosts and subnet routers to run two\n   protocols\
    \ in parallel in order to achieve interoperability between\n   old and new systems.\
    \  During the transition, IP hosts can still\n   communicate with any machines\
    \ in the same network without any\n   changes.  When the EIP Host Numbers (i.e.,\
    \ the 32-bit IP addresses)\n   are still globally unique, IP hosts can contact\
    \ hosts in other\n   networks via translation service provided in the border routers.\n\
    \   The transition goes as follows:\n   Phase 0:\n        a) Choose an addressing\
    \ and routing scheme for the Internet.\n        b) Implement the routing protocol.\n\
    \        c) Assign new Network Numbers to existing networks.\n   Phase 1:\n  \
    \      a) Update all backbone routers and border routers.\n        b) Update DNS\
    \ servers.\n        c) Start translation service.\n   Phase 2:\n        a) Update\
    \ first the key hosts such as mail servers, DNS servers,\n        FTP servers\
    \ and central machines.\n        b) Update gradually the rest of the hosts.\n\
    \   Phase 3:\n        a) Update subnet routers\n        b) Withdraw the translation\
    \ service.\n   The translation service can be provided as long as the Host IDs\n\
    \   (i.e., the 32-bit IP address) are still globally unique. When the IP\n   address\
    \ space is exhausted, the translation service will be withdrawn\n   and the remaining\
    \ IP hosts can only communicate with hosts within the\n   the same network. At\
    \ the same time, networks can use any numbers in\n   the 32-bit space for addressing\
    \ their hosts.\n"
- title: Related Work
  contents:
  - "Related Work\n   A recent proposal called IPAE by Hinden and Crocker also attempts\
    \ to\n   minimize the modifications to the current IP system yet to extend the\n\
    \   addressing space [12]. IPAE uses encapsulation so that the extended\n   space\
    \ is carried as IP data. However, it has been found that the 64\n   bits IP data\
    \ returned by an ICMP packet is too small to hold the\n   Global IP addresses.\
    \ Thus, when a router receives an ICMP generated\n   by an old IP host, it is\
    \ not able to convert it into a proper ICMP\n   packet. More details can be found\
    \ in [13].\n"
- title: Discussions
  contents:
  - "Discussions\n   EIP does not necessary increase the header length significantly\
    \ as\n   most of the fields in the current IP will be still needed in the new\n\
    \   internet protocol. There are debates as to whether fragmentation and\n   header\
    \ checksum are necessary in the new internet protocol but no\n   consensus has\
    \ been reached.\n   EIP assumes that IP hosts and routers ignore unknown IP option\n\
    \   silently as required by [15,16].  Some people have expressed some\n   concerns\
    \ as to whether current IP routers and hosts in the Internet\n   can deal with\
    \ unknown IP options properly.\n   In order to look into the issues further, we\
    \ carried out a number of\n   experiments over the use of IP option. We selected\
    \ 35 hosts over 30\n   countries across the Internet. A TCP test program (based\
    \ on ttcp.c)\n   then transmitted data to the echo port (tcp port 7) of each of\
    \ the\n   hosts. Two tests were carried out for each host, one with an unknown\n\
    \   option (type 0x8A, length 40 bytes) and the other without any\n   options.\n\
    \   It is difficult to ensure that the conditions under which the two\n   tests\
    \ run are identical but we tried to make them as close as\n   possible. The two\
    \ tests (test-opt and test-noopt) run on the same\n   machine a Sun4) in parallel,\
    \ i.e., \"test-opt& ; test-noopt&\" and then\n   again in the reverse order, i.e.,\
    \ \"test-noopt& ; test-opt&\", so each\n   test pair actually run twice.  Each\
    \ host was ping'ed before the tests\n   so that the domain name information was\
    \ cached before the name\n   lookup.\n   The experiments were carried out at three\
    \ sites: UCL, Bellcore and\n   Cambridge University. The tcp echo throughput (KB/Sec)\
    \ results are\n   listed in Appendix.\n   The results show that the IP option\
    \ was dealt with properly and there\n   is no visible performance difference under\
    \ the test setup.\n"
- title: References
  contents:
  - "References\n   [1] Chiappa, N., \"The IP Addressing Issue\", Work in Progress,\
    \ October\n       1990.\n   [2] Clark, D., Chapin, L., Cerf, V., Braden, R., and\
    \ R. Hobby,\n       \"Towards the Future Architecture\", RFC 1287, MIT, BBN, CNRI,\
    \ ISI,\n       UCDavis , December 1991.\n   [3] Solensky, F. and F. Kastenholz,\
    \ \"A Revision to IP Address\n       Classifications\", Work in Progress, March\
    \ 1992.\n   [4] Fuller, V., Li, T., Yu, J., and K. Varadhan, \"Supernetting: an\n\
    \       Address Assignment and Aggregation Strategy\", RFC 1338, BARRNet,\n  \
    \     cisco, Merit, OARnet, June 1992.\n   [5] Wang, Z., and J. Crowcroft, \"\
    A Two-Tier Address Structure for the\n       Internet: a solution to the problem\
    \ of address space exhaustion\",\n       RFC 1335, University College London,\
    \ May 1992.\n   [6] Callon, R., \"TCP and UDP with Bigger Addresses (TUBA), a\
    \ Simple\n       Proposal for Internet Addressing and Routing\", RFC 1347, DEC,\n\
    \       June 1992.\n   [7] Tsuchiya, P., \"Pip: The 'P' Internet Protocol\", Work\
    \ in Progress,\n       May 1992\n   [8] Chiappa N., \"A New IP Routing and Addressing\
    \ Architecture\", Work\n       in Progress, 1992.\n   [9] Colella, R., Gardner,\
    \ E., and R. Callon, \"Guidelines for OSI NSAP\n       Allocation in the Internet\"\
    \ RFC 1237, NIST, Mitre, DEC, July\n       1991.\n  [10] Deering, S., \"City Codes:\
    \ An Alternative Scheme for OSI NSAP\n       Allocation in the Internet\", Work\
    \ in Progress, January 1992.\n  [11] Clark, D., \"Building routers for the routing\
    \ of tomorrow\", in his\n       message to Big-Interent@munnari.oz.au, 14 July\
    \ 1992.\n  [12] Hinden, R., and D. Crocker, \"A Proposal for IP Address\n    \
    \   Encapsulation (IPAE): A Compatible Version of IP with Large\n       Addresses\"\
    , Work in Progress, July 1992.\n  [13] Partridge, C., \"Re: Note on implementing\
    \ IPAE\", in his message to\n       Big-Interent@munnari.oz.au, 17 July 1992.\n\
    \  [14] Deering, S., \"SIP: Simple Internet Protocol\", Work in Progress,\n  \
    \     September 1992.\n  [15] Braden, R., Editor, \"Requirements for Internet\
    \ Hosts\n        -- Communication Layers\", RFC 1122, ISI, October 1989.\n  [16]\
    \ Almquist, P., Editor, \"Requirements for IP Routers\", Work in\n       Progress,\
    \ October 1991.\n"
- title: Appendix
  contents:
  - "Appendix\n       Throughput Test from UCL (sartre.cs.ucl.ac.uk)\n      Destination\
    \ Host          test-noopt     test-opt\n      -------------------        ----------\
    \     ---------\n      oliver.cs.mcgill.ca          1.128756      1.285345\n \
    \     oliver.cs.mcgill.ca          1.063096      1.239709\n      bertha.cc.und.ac.za\
    \          0.094336      0.043917\n      bertha.cc.und.ac.za          0.075681\
    \      0.057120\n      vnet3.vub.ac.be              2.090622      2.228181\n \
    \     vnet3.vub.ac.be              1.781374      1.692740\n      itdsrv1.ul.ie\
    \                1.937596      2.062579\n      itdsrv1.ul.ie                1.928313\
    \      1.936784\n      sunic.sunet.se              11.064797     11.724055\n \
    \     sunic.sunet.se              10.861720     10.840306\n      pascal.acm.org\
    \               2.463790      0.810133\n      pascal.acm.org               1.619088\
    \      0.860198\n      iti.gov.sg                   1.565320      1.983795\n \
    \     iti.gov.sg                   1.564788      1.921803\n      rzusuntk.unizh.ch\
    \            9.903805     11.335920\n      rzusuntk.unizh.ch            9.597806\
    \     10.678098\n      funet.fi                     9.897876      9.382925\n \
    \     funet.fi                    10.487118     11.023745\n      odin.diku.dk\
    \                 5.851407      5.482946\n      odin.diku.dk                 5.992257\
    \      6.243283\n      cphkvx.cphk.hk               0.758044      0.844406\n \
    \     cphkvx.cphk.hk               0.784532      0.745606\n      bootes.cus.cam.ac.uk\
    \        28.341705     29.655824\n      bootes.cus.cam.ac.uk        24.804125\
    \     23.240990\n      pesach.jct.ac.il             1.045922      1.115802\n \
    \     pesach.jct.ac.il             1.330429      0.978184\n      sun1.sara.nl\
    \                10.546733     11.500778\n      sun1.sara.nl                 9.624833\
    \     10.214136\n      cocos.fuw.edu.pl             1.747777      1.702324\n \
    \     cocos.fuw.edu.pl             1.676151      1.716435\n      apple.com   \
    \                 4.449559      4.145081\n      apple.com                    6.431675\
    \      5.520443\n      gorgon.tf.tele.no            1.199810      1.374546\n \
    \     gorgon.tf.tele.no            0.508642      0.993261\n      kogwy.cc.keio.ac.jp\
    \          3.626448      3.249590\n      kogwy.cc.keio.ac.jp          3.913777\
    \      4.094849\n      exu.inf.puc-rio.br           1.913925      1.795235\n \
    \     exu.inf.puc-rio.br           1.154936      1.114775\n      inria.inria.fr\
    \               2.299561      0.599665\n      inria.inria.fr               1.219282\
    \      0.873672\n      kum.kaist.ac.kr              0.252704      0.254199\n \
    \     kum.kaist.ac.kr              0.236196      0.172367\n      sunipc1.labein.es\
    \            1.398777      1.243588\n      sunipc1.labein.es            0.876177\
    \      0.602964\n      wifosv.wsr.ac.at             0.531153      0.803387\n \
    \     wifosv.wsr.ac.at             0.773935      0.557798\n      uunet.uu.net\
    \                 7.813556      6.764543\n      uunet.uu.net                 7.969203\
    \      6.657325\n      infnsun.aquila.infn.it       2.321197      2.402477\n \
    \     infnsun.aquila.infn.it       2.400196      2.695016\n      muttley.fc.ul.pt\
    \             0.545775      0.434672\n      muttley.fc.ul.pt             0.284124\
    \      0.266017\n      dmssyd.syd.dms.csiro.au      2.734685      2.857545\n \
    \     dmssyd.syd.dms.csiro.au      1.168154      1.462789\n      hamlet.caltech.edu\
    \           2.552804      2.897286\n      hamlet.caltech.edu           3.839141\
    \      2.407945\n      sztaki.hu                    0.294196      0.403697\n \
    \     sztaki.hu                    0.236260      0.388755\n      menvax.restena.lu\
    \            0.465066      0.515361\n      menvax.restena.lu            0.358646\
    \      0.511985\n      nctu.edu.tw                  0.484372      0.816722\n \
    \     nctu.edu.tw                  0.705733      1.109228\n      xalapa.lania.mx\
    \              0.899529      0.822544\n      xalapa.lania.mx              1.150058\
    \      0.881713\n      truth.waikato.ac.nz          1.438481      1.993749\n \
    \     truth.waikato.ac.nz          1.325041      1.833999\n         Throughput\
    \ Test from Bellcore (latour.bellcore.com)\n      Destination Host          test-noopt\
    \     test-opt\n      ------------------        ----------     ---------\n   \
    \   oliver.cs.mcgill.ca          1.820014      2.128104\n      oliver.cs.mcgill.ca\
    \          1.979981      1.866815\n      bertha.cc.und.ac.za          0.099289\
    \      0.035877\n      bertha.cc.und.ac.za          0.118627      0.103763\n \
    \     vnet3.vub.ac.be              0.368476      0.694463\n      vnet3.vub.ac.be\
    \              0.443269      0.644050\n      itdsrv1.ul.ie                0.721444\
    \      0.960068\n      itdsrv1.ul.ie                0.713952      0.953275\n \
    \     sunic.sunet.se               2.989907      2.956766\n      sunic.sunet.se\
    \               2.100563      2.010292\n      pascal.acm.org               2.487185\
    \      3.896253\n      pascal.acm.org               1.944085      4.269323\n \
    \     iti.gov.sg                   2.401733      2.735445\n      iti.gov.sg  \
    \                 2.950990      2.793121\n      rzusuntk.unizh.ch            4.094820\
    \      3.618023\n      rzusuntk.unizh.ch            2.952650      2.245001\n \
    \     funet.fi                     6.703408      5.928008\n      funet.fi    \
    \                 7.389722      5.815122\n      odin.diku.dk                 2.094152\
    \      2.450695\n      odin.diku.dk                 5.362362      4.690722\n \
    \     cphkvx.cphk.hk               0.092698      0.106880\n      cphkvx.cphk.hk\
    \               0.496394      0.681994\n      bootes.cus.cam.ac.uk         2.632951\
    \      2.631322\n      bootes.cus.cam.ac.uk         3.717170      1.335914\n \
    \     pesach.jct.ac.il             0.684029      0.921621\n      pesach.jct.ac.il\
    \             0.390263      1.095265\n      sun1.sara.nl                 3.186035\
    \      2.325166\n      sun1.sara.nl                 3.053797      3.081236\n \
    \     cocos.fuw.edu.pl             0.154405      0.124795\n      cocos.fuw.edu.pl\
    \             0.120283      0.105825\n      apple.com                   12.588979\
    \     12.957880\n      apple.com                   13.861733     12.211125\n \
    \     gorgon.tf.tele.no            1.280217      1.112675\n      gorgon.tf.tele.no\
    \            0.243205      0.631096\n      kogwy.cc.keio.ac.jp          6.249789\
    \      5.075968\n      kogwy.cc.keio.ac.jp          3.387490      4.583511\n \
    \     exu.inf.puc-rio.br           2.089536      2.233711\n      exu.inf.puc-rio.br\
    \           2.476758      2.249439\n      inria.inria.fr               0.653974\
    \      0.866246\n      inria.inria.fr               0.739127      1.130521\n \
    \     kum.kaist.ac.kr              1.541682      1.312546\n      kum.kaist.ac.kr\
    \              0.906632      1.042793\n      sunipc1.labein.es            0.101496\
    \      0.091456\n      sunipc1.labein.es            0.054245      0.101585\n \
    \     wifosv.wsr.ac.at             1.044443      0.369528\n      wifosv.wsr.ac.at\
    \             0.596935      0.870377\n      uunet.uu.net                 9.530348\
    \      8.999789\n      uunet.uu.net                 8.941888      6.075660\n \
    \     infnsun.aquila.infn.it       1.619418      1.569645\n      infnsun.aquila.infn.it\
    \       1.156780      1.158000\n      muttley.fc.ul.pt             0.353632  \
    \    0.416126\n      muttley.fc.ul.pt             0.221522      0.155505\n   \
    \   dmssyd.syd.dms.csiro.au      3.433901      3.272839\n      dmssyd.syd.dms.csiro.au\
    \      3.408975      3.130188\n      hamlet.caltech.edu           5.367756   \
    \   6.325031\n      hamlet.caltech.edu           4.828718      5.676571\n    \
    \  sztaki.hu                    0.301120      0.362481\n      sztaki.hu      \
    \              0.253222      0.519892\n      menvax.restena.lu            0.364221\
    \      0.480789\n      menvax.restena.lu            0.456882      0.580778\n \
    \     nctu.edu.tw                  0.246523      1.199412\n      nctu.edu.tw \
    \                 0.423476      0.630833\n      xalapa.lania.mx              0.748642\
    \      0.607284\n      xalapa.lania.mx              0.716781      0.643030\n \
    \     truth.waikato.ac.nz          2.197595      2.072601\n      truth.waikato.ac.nz\
    \          2.489748      2.186684\n          Throughput Test from Cam U (cus.cam.ac.uk)\n\
    \      Destination Host          test-noopt     test-opt\n      ------------------\
    \        ----------     ---------\n      oliver.cs.mcgill.ca           1.128756\
    \       1.285345\n      oliver.cs.mcgill.ca           1.063096       1.239709\n\
    \      bertha.cc.und.ac.za           0.031218       0.031221\n      bertha.cc.und.ac.za\
    \           0.034405       0.034925\n      vnet3.vub.ac.be               0.568487\
    \       0.731320\n      vnet3.vub.ac.be               0.558238       0.581415\n\
    \      itdsrv1.ul.ie                 1.064302       1.284707\n      itdsrv1.ul.ie\
    \                 0.852089       1.025779\n      sunic.sunet.se              \
    \  7.179942       6.270326\n      sunic.sunet.se                5.772485     \
    \  6.689160\n      pascal.acm.org                1.661248       1.726725\n   \
    \   pascal.acm.org                1.557839       1.428193\n      iti.gov.sg  \
    \                  0.600616       0.926690\n      iti.gov.sg                 \
    \   0.772887       0.956636\n      rzusuntk.unizh.ch             3.645913    \
    \   4.504969\n      rzusuntk.unizh.ch             1.853503       2.671272\n  \
    \    funet.fi                      4.190147       3.421110\n      funet.fi   \
    \                   2.270988       3.789678\n      odin.diku.dk              \
    \    1.361227       0.993901\n      odin.diku.dk                  1.977774   \
    \    2.415716\n      cphkvx.cphk.hk                1.173451       1.298421\n \
    \     cphkvx.cphk.hk                1.151376       1.184210\n      bootes.cus.cam.ac.uk\
    \        269.589141     238.920081\n      bootes.cus.cam.ac.uk        331.203020\
    \     293.556436\n      pesach.jct.ac.il              0.343598       0.492202\n\
    \      pesach.jct.ac.il              0.582809       0.930958\n      sun1.sara.nl\
    \                  1.529277       1.470571\n      sun1.sara.nl               \
    \   0.896041       0.894923\n      cocos.fuw.edu.pl              0.131180    \
    \   0.142239\n      cocos.fuw.edu.pl              0.137697       0.148895\n  \
    \    apple.com                     1.330794       0.453590\n      apple.com  \
    \                   0.856476       0.714661\n      gorgon.tf.tele.no         \
    \    0.094793       0.099981\n      gorgon.tf.tele.no             0.167257   \
    \    0.151625\n      kogwy.cc.keio.ac.jp           0.154681       0.178868\n \
    \     kogwy.cc.keio.ac.jp           1.095814       0.871496\n      exu.inf.puc-rio.br\
    \            0.454272       0.384484\n      exu.inf.puc-rio.br            0.705198\
    \       0.690708\n      inria.inria.fr                0.149511       0.150021\n\
    \      inria.inria.fr                0.071125       0.077257\n      kum.kaist.ac.kr\
    \               0.721184       0.549511\n      kum.kaist.ac.kr               0.250285\
    \       0.296195\n      sunipc1.labein.es             0.519284       0.491745\n\
    \      sunipc1.labein.es             0.990174       1.009475\n      wifosv.wsr.ac.at\
    \              0.360751       0.418554\n      wifosv.wsr.ac.at              0.344268\
    \       0.326605\n      uunet.uu.net                  4.247430       3.305592\n\
    \      uunet.uu.net                  3.139251       2.945469\n      infnsun.aquila.infn.it\
    \        0.480731       0.782631\n      infnsun.aquila.infn.it        0.230471\
    \       0.292273\n      muttley.fc.ul.pt              0.239624       0.334286\n\
    \      muttley.fc.ul.pt              0.586156       0.419485\n      dmssyd.syd.dms.csiro.au\
    \       3.630623       3.607504\n      dmssyd.syd.dms.csiro.au       1.743162\
    \       2.994665\n      hamlet.caltech.edu            5.897946       4.650703\n\
    \      hamlet.caltech.edu            5.118200       5.622022\n      sztaki.hu\
    \                     0.338358       0.225206\n      sztaki.hu               \
    \      0.113328       0.112637\n      menvax.restena.lu             0.224967 \
    \      0.359237\n      menvax.restena.lu             0.452945       0.472345\n\
    \      nctu.edu.tw                   2.549709       2.037245\n      nctu.edu.tw\
    \                   2.229093       2.469851\n      xalapa.lania.mx           \
    \    0.713586       0.810107\n      xalapa.lania.mx               0.612278   \
    \    0.731705\n      truth.waikato.ac.nz           1.438481       1.993749\n \
    \     truth.waikato.ac.nz           1.325041       1.833999\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Zheng Wang\n   Dept of Computer Science\n   University College\
    \ London\n   London WC1E 6BT, UK\n   EMail: z.wang@cs.ucl.ac.uk\n"
