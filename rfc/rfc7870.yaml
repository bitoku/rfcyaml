- contents:
  - "    Dual-Stack Lite (DS-Lite) Management Information Base (MIB) for\n               Address
    Family Transition Routers (AFTRs)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it defines managed objects for Address Family\n   Transition Routers
    (AFTRs) of Dual-Stack Lite (DS-Lite).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7870.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Requirements Language ...........................................2\n   3.
    The Internet-Standard Management Framework ......................3\n   4. Relationship
    to the IF-MIB ......................................3\n   5. Difference from the
    IP Tunnel MIB and NATV2-MIB .................3\n   6. Structure of the MIB Module
    .....................................4\n      6.1. The Object Group ...........................................5\n
    \          6.1.1. The dsliteTunnel Subtree ............................5\n           6.1.2.
    The dsliteNAT Subtree ...............................5\n           6.1.3. The
    dsliteInfo Subtree ..............................5\n      6.2. The Notification
    Group .....................................5\n      6.3. The Conformance Group
    ......................................5\n   7. MIB Modules Required for IMPORTS
    ................................5\n   8. Definitions .....................................................6\n
    \  9. Security Considerations ........................................22\n   10.
    IANA Considerations ...........................................24\n   11. References
    ....................................................24\n      11.1. Normative
    References .....................................24\n      11.2. Informative References
    ...................................26\n   Acknowledgements ..................................................27\n
    \  Authors' Addresses ................................................27\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Dual-Stack Lite [RFC6333] is a solution that offers both
    IPv4 and\n   IPv6 connectivity to customers crossing an IPv6-only infrastructure.\n
    \  One of its key components is an IPv4-over-IPv6 tunnel, which is used\n   to
    provide IPv4 connectivity across a service provider's IPv6\n   network.  Another
    key component is a carrier-grade IPv4-IPv4 Network\n   Address Translation (NAT)
    to share service provider IPv4 addresses\n   among customers.\n   This document
    defines a portion of the Management Information Base\n   (MIB) for use with network
    management protocols in the Internet\n   community.  This MIB module may be used
    for configuration and\n   monitoring of Address Family Transition Routers (AFTRs)
    in a Dual-\n   Stack Lite scenario.\n"
  title: 1.  Introduction
- contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
    RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
    as described in BCP\n   14, RFC 2119 [RFC2119].  When these words are not in ALL
    CAPS (such\n   as \"should\" or \"Should\"), they have their usual English meanings
    and\n   are not to be interpreted as [RFC2119] key words.\n"
  title: 2.  Requirements Language
- contents:
  - "3.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   [RFC3410].\n   Managed objects are accessed via
    a virtual information store, termed\n   the Management Information Base or MIB.
    \ MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579], and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 3.  The Internet-Standard Management Framework
- contents:
  - "4.  Relationship to the IF-MIB\n   The Interfaces MIB [RFC2863] defines generic
    managed objects for\n   managing interfaces.  Each logical interface (physical
    or virtual)\n   has an ifEntry.  Tunnels are handled by creating a logical interface\n
    \  (ifEntry) for each tunnel.  Each DS-Lite tunnel endpoint also acts as\n   a
    virtual interface that has a corresponding entry in the IP Tunnel\n   MIB and
    Interface MIB.  Those corresponding entries are indexed by\n   ifIndex.\n   The
    ifOperStatus in ifTable is used to represent whether the DS-Lite\n   tunnel function
    has been triggered.  The ifInUcastPkts defined in\n   ifTable will represent the
    number of IPv4 packets that have been\n   encapsulated into IPv6 packets sent
    to a Basic Bridging BroadBand\n   (B4).  The ifOutUcastPkts defined in ifTable
    contains the number of\n   IPv6 packets that can be decapsulated to IPv4 in the
    virtual\n   interface.  Also, the IF-MIB defines ifMtu for the MTU of this tunnel\n
    \  interface, so the DS-Lite MIB does not need to define the MTU for the\n   tunnel.\n"
  title: 4.  Relationship to the IF-MIB
- contents:
  - "5.  Difference from the IP Tunnel MIB and NATV2-MIB\n   The key technologies
    for DS-Lite are IP-in-IP (IPv4-in-IPv6) tunnels\n   and NAT (IPv4-to-IPv4 translation).\n
    \  Notes: According to Section 5.2 of [RFC6333], DS-Lite only defines\n   IPv4
    in IPv6 tunnels at this moment, but other types of encapsulation\n   could be
    defined in the future.  So, the DS-Lite MIB only supports\n   IP-in-IP encapsulation.
    \ If another RFC defines other tunnel types in\n   the future, the DS-Lite MIB
    will be updated then.\n   The NATV2-MIB [RFC7659] is designed to carry translation
    from any\n   address family to any address family; therefore, it supports IPv4-to-\n
    \  IPv4 translation.\n   The IP Tunnel MIB [RFC4087] is designed to manage tunnels
    of any type\n   over IPv4 and IPv6 networks; therefore, it already supports IP-in-IP\n
    \  tunnels.  But in a DS-Lite scenario, the tunnel type is point-to-\n   multipoint
    IP-in-IP tunnels.  The direct(2) defined in the IP Tunnel\n   MIB only supports
    point-to-point tunnels.  So, it needs to define a\n   new tunnel type for DS-Lite.\n
    \  However, the NATV2-MIB and IP Tunnel MIB together are not sufficient\n   to
    support DS-Lite.  This document describes the specific features\n   for the DS-Lite
    MIB, as below.\n   In the DS-Lite scenario, the Address Family Transition Router
    (AFTR)\n   is not only the tunnel-end concentrator, but also an IPv4-to-IPv4\n
    \  NAT.  So, as defined in [RFC6333], when the IPv4 packets come back\n   from
    the Internet to the AFTR, it knows how to reconstruct the IPv6\n   encapsulation
    by doing a reverse lookup in the extended IPv4 NAT\n   binding table (Section
    6.6 of [RFC6333]).  The NAT binding table in\n   the AFTR is extended to include
    the IPv6 address of the tunnel\n   initiator.  However, the NAT binding information
    defined in the\n   NATV2-MIB as natv2PortMapTable is indexed by the NAT instance,\n
    \  protocol, and external realm and address.  Because the\n   tunnelIfTable defined
    in the TUNNEL-MIB [RFC4087] is indexed by the\n   ifIndex, the DS-Lite MIB needs
    to define the tunnel objects to extend\n   the NAT binding entry by interface.
    \ Therefore, a combined MIB is\n   necessary.\n   An implementation of the IP
    Tunnel MIB is required for DS-Lite.  As\n   the tunnel is not point-to-point in
    DS-Lite, it needs to define a new\n   tunnel type for DS-Lite.  The tunnelIfEncapsMethod
    in the\n   tunnelIfEntry should be set to dsLite(17), and a corresponding entry\n
    \  in the DS-Lite module will exist for every tunnelIfEntry with this\n   tunnelIfEncapsMethod.
    \ The tunnelIfRemoteInetAddress must be set to\n   \"::\".\n"
  title: 5.  Difference from the IP Tunnel MIB and NATV2-MIB
- contents:
  - "6.  Structure of the MIB Module\n   The DS-Lite MIB provides a way to monitor
    and manage the devices\n   (AFTRs) in a DS-Lite scenario through SNMP.\n   The
    DS-Lite MIB is configurable on a per-interface basis.  It depends\n   on several
    parts of the IF-MIB [RFC2863], IP Tunnel MIB [RFC4087],\n   and NATV2-MIB [RFC7659].\n"
  - contents:
    - "6.1.  The Object Group\n   This group defines objects that are needed for the
      DS-Lite MIB.\n"
    - contents:
      - "6.1.1.  The dsliteTunnel Subtree\n   The dsliteTunnel subtree describes managed
        objects used for managing\n   tunnels in the DS-Lite scenario.  Because the\n
        \  tunnelInetConfigLocalAddress and the tunnelInetConfigRemoteAddress\n   defined
        in the IP Tunnel MIB are not readable, a few new objects are\n   defined in
        the DS-Lite MIB.\n"
      title: 6.1.1.  The dsliteTunnel Subtree
    - contents:
      - "6.1.2.  The dsliteNAT Subtree\n   The dsliteNAT subtree describes managed
        objects used for\n   configuration and monitoring of an AFTR that is capable
        of a NAT\n   function.  Because the NATV2-MIB supports the NAT management
        function\n   in DS-Lite, we may reuse it in the DS-Lite MIB.  The dsliteNAT\n
        \  subtree also provides the mapping information between the tunnel\n   entry
        (dsliteTunnelEntry) and the NAT entry (dsliteNATBindEntry) by\n   adding the
        IPv6 address of the B4 to the natv2PortMapEntry in the\n   NATV2-MIB.  The
        mapping behavior, filtering behavior, and pooling\n   behavior described in
        this subtree are all defined in [RFC4787].\n"
      title: 6.1.2.  The dsliteNAT Subtree
    - contents:
      - "6.1.3.  The dsliteInfo Subtree\n   The dsliteInfo subtree provides statistical
        information for DS-Lite.\n"
      title: 6.1.3.  The dsliteInfo Subtree
    title: 6.1.  The Object Group
  - contents:
    - "6.2.  The Notification Group\n   This group defines some notification objects
      for a DS-Lite scenario.\n"
    title: 6.2.  The Notification Group
  - contents:
    - "6.3.  The Conformance Group\n   The dsliteConformance subtree provides conformance
      information of MIB\n   objects.\n"
    title: 6.3.  The Conformance Group
  title: 6.  Structure of the MIB Module
- contents:
  - "7.  MIB Modules Required for IMPORTS\n   This MIB module IMPORTs objects from
    [RFC2578], [RFC2580], [RFC2863],\n   [RFC3411], [RFC4001], and [RFC7659].\n"
  title: 7.  MIB Modules Required for IMPORTS
- contents:
  - "8.  Definitions\n DSLite-MIB DEFINITIONS  ::=  BEGIN\n      IMPORTS\n         MODULE-IDENTITY,
    OBJECT-TYPE, mib-2,\n         NOTIFICATION-TYPE,  Integer32,\n         Counter64,
    Unsigned32\n            FROM SNMPv2-SMI\n         OBJECT-GROUP, MODULE-COMPLIANCE,\n
    \        NOTIFICATION-GROUP\n            FROM SNMPv2-CONF\n         SnmpAdminString\n
    \           FROM SNMP-FRAMEWORK-MIB\n         ifIndex\n            FROM IF-MIB\n
    \       InetAddress, InetAddressType, InetAddressPrefixLength,\n        InetPortNumber\n
    \             FROM INET-ADDRESS-MIB\n        ProtocolNumber, Natv2InstanceIndex,
    Natv2SubscriberIndex\n             FROM NATV2-MIB;\n      dsliteMIB MODULE-IDENTITY\n
    \     LAST-UPDATED \"201605110000Z\"          -- May 11, 2016\n      ORGANIZATION
    \"IETF Softwire Working Group\"\n      CONTACT-INFO\n         \"Yu Fu\n          CNNIC\n
    \         No.4 South 4th Street, Zhongguancun\n          Hai-Dian District, Beijing
    \ 100090\n          China\n          Email: fuyu@cnnic.cn\n          Sheng Jiang\n
    \         Huawei Technologies Co., Ltd\n          Huawei Building, 156 Beiqing
    Rd.\n          Hai-Dian District, Beijing  100095\n          China\n          Email:
    jiangsheng@huawei.com\n          Jiang Dong\n          Tsinghua University\n          Department
    of Computer Science, Tsinghua University\n          Beijing  100084\n          China\n
    \         Email: knight.dongjiang@gmail.com\n          Yuchi Chen\n          Tsinghua
    University\n          Department of Computer Science, Tsinghua University\n          Beijing
    \ 100084\n          China\n          Email: flashfoxmx@gmail.com \"\n      DESCRIPTION\n
    \        \"The MIB module is defined for management of objects in the\n         DS-Lite
    scenario.\n        Copyright (c) 2016 IETF Trust and the persons identified as\n
    \       authors of the code.  All rights reserved.\n        Redistribution and
    use in source and binary forms, with or\n        without modification, is permitted
    pursuant to, and subject\n        to the license terms contained in, the Simplified
    BSD License\n        set forth in Section 4.c of the IETF Trust's Legal Provisions\n
    \       Relating to IETF Documents\n        (http://trustee.ietf.org/license-info).\"\n
    \     REVISION    \"201605110000Z\"\n      DESCRIPTION\n         \"Initial version.
    \ Published as RFC 7870.\"\n         ::=  {  mib-2 240  }\n   --Top-level components
    of this MIB module\n      dsliteMIBObjects OBJECT IDENTIFIER\n         ::=  {
    dsliteMIB 1 }\n      dsliteTunnel   OBJECT IDENTIFIER\n         ::=  { dsliteMIBObjects
    1 }\n      dsliteNAT   OBJECT IDENTIFIER\n         ::=  { dsliteMIBObjects 2 }\n
    \     dsliteInfo   OBJECT IDENTIFIER\n         ::=  { dsliteMIBObjects 3 }\n   --Notifications
    section\n      dsliteNotifications  OBJECT IDENTIFIER\n         ::=  { dsliteMIB
    0 }\n   --dsliteTunnel\n   --dsliteTunnelTable\n      dsliteTunnelTable OBJECT-TYPE\n
    \        SYNTAX     SEQUENCE OF DsliteTunnelEntry\n         MAX-ACCESS  not-accessible\n
    \        STATUS     current\n         DESCRIPTION\n            \"The (conceptual)
    table containing information on\n             configured tunnels.  This table
    can be used to map\n             a B4 address to the associated AFTR address.
    \ It can\n             also be used for row creation.\"\n         REFERENCE\n
    \           \"B4, AFTR: RFC 6333.\"\n         ::=  { dsliteTunnel 1 }\n      dsliteTunnelEntry
    OBJECT-TYPE\n         SYNTAX     DsliteTunnelEntry\n         MAX-ACCESS  not-accessible\n
    \        STATUS     current\n         DESCRIPTION\n            \"Each entry in
    this table contains the information on a\n             particular configured tunnel.\"\n
    \            INDEX   { dsliteTunnelAddressType,\n                       dsliteTunnelStartAddress,\n
    \                      dsliteTunnelEndAddress,\n                       ifIndex
    }\n         ::=  { dsliteTunnelTable 1 }\n      DsliteTunnelEntry  ::=\n         SEQUENCE
    {\n          dsliteTunnelAddressType         InetAddressType,\n          dsliteTunnelStartAddress
    \       InetAddress,\n          dsliteTunnelEndAddress          InetAddress,\n
    \         dsliteTunnelStartAddPreLen      InetAddressPrefixLength\n      }\n       dsliteTunnelAddressType
    OBJECT-TYPE\n          SYNTAX     InetAddressType\n          MAX-ACCESS not-accessible\n
    \         STATUS     current\n          DESCRIPTION\n             \"This object
    MUST be set to the value of ipv6(2).\n              It describes the address type
    of the IPv4-in-IPv6\n              tunnel initiator and endpoint.\"\n          REFERENCE\n
    \           \"ipv6(2): RFC 4001.\"\n          ::= { dsliteTunnelEntry 1 }\n      dsliteTunnelStartAddress
    OBJECT-TYPE\n          SYNTAX     InetAddress (SIZE (0..16))\n          MAX-ACCESS
    not-accessible\n          STATUS     current\n          DESCRIPTION\n             \"The
    IPv6 address of the initiator of the tunnel.\n              The address type is
    given by dsliteTunnelAddressType.\"\n          ::= { dsliteTunnelEntry 2 }\n      dsliteTunnelEndAddress
    OBJECT-TYPE\n          SYNTAX     InetAddress (SIZE (0..16))\n          MAX-ACCESS
    not-accessible\n          STATUS     current\n          DESCRIPTION\n             \"The
    IPv6 address of the endpoint of the tunnel.\n              The address type is
    given by dsliteTunnelAddressType.\"\n          ::= { dsliteTunnelEntry 3 }\n      dsliteTunnelStartAddPreLen
    OBJECT-TYPE\n          SYNTAX InetAddressPrefixLength\n          MAX-ACCESS read-only\n
    \         STATUS current\n          DESCRIPTION\n             \"The IPv6 prefix
    length of the IP address for the\n              initiator of the tunnel(dsliteTunnelStartAddress).\"\n
    \         ::= { dsliteTunnelEntry 4 }\n    --dsliteNATBindTable(according to the
    NAPT scheme)\n       dsliteNATBindTable OBJECT-TYPE\n         SYNTAX     SEQUENCE
    OF DsliteNATBindEntry\n         MAX-ACCESS not-accessible\n         STATUS     current\n
    \        DESCRIPTION\n            \"This table contains information about currently\n
    \            active NAT binds in the NAT of the AFTR.  This table\n             adds
    the IPv6 address of a B4 to the natv2PortMapTable\n             defined in NATV2-MIB
    (RFC 7659).\"\n         REFERENCE\n              \"NATV2-MIB: Section 4 of RFC
    7659.\"\n         ::=  { dsliteNAT 1 }\n      dsliteNATBindEntry OBJECT-TYPE\n
    \        SYNTAX     DsliteNATBindEntry\n         MAX-ACCESS not-accessible\n         STATUS
    \    current\n         DESCRIPTION\n            \"The entry in this table holds
    the mapping relationship\n             between tunnel information and NAT bind
    information.\n             Each entry in this table not only needs to match a\n
    \            corresponding entry in the natv2PortMapTable, but\n             also
    a corresponding entry in the dsliteTunnelTable.\n             So, the INDEX of
    the entry needs to match a corresponding\n             value in the natv2PortMapTable
    INDEX and a corresponding\n             value in the dsliteTunnelTable INDEX.
    \ These entries are\n             lost upon agent restart.\"\n         REFERENCE\n
    \             \"natv2PortMapTable: Section 4 of RFC 7659.\"\n         INDEX   {
    dsliteNATBindMappingInstanceIndex,\n                   dsliteNATBindMappingProto,\n
    \                  dsliteNATBindMappingExtRealm,\n                   dsliteNATBindMappingExtAddressType,\n
    \                  dsliteNATBindMappingExtAddress,\n                   dsliteNATBindMappingExtPort,\n
    \                  ifIndex,\n                   dsliteTunnelStartAddress }\n         ::=
    \ {  dsliteNATBindTable 1   }\n     DsliteNATBindEntry  ::=\n         SEQUENCE
    {\n         dsliteNATBindMappingInstanceIndex  Natv2InstanceIndex,\n         dsliteNATBindMappingProto
    \         ProtocolNumber,\n         dsliteNATBindMappingExtRealm       SnmpAdminString,\n
    \        dsliteNATBindMappingExtAddressType InetAddressType,\n         dsliteNATBindMappingExtAddress
    \    InetAddress,\n         dsliteNATBindMappingExtPort        InetPortNumber,\n
    \        dsliteNATBindMappingIntRealm       SnmpAdminString,\n         dsliteNATBindMappingIntAddressType
    InetAddressType,\n         dsliteNATBindMappingIntAddress     InetAddress,\n         dsliteNATBindMappingIntPort
    \       InetPortNumber,\n         dsliteNATBindMappingPool           Unsigned32,\n
    \        dsliteNATBindMappingMapBehavior    INTEGER,\n         dsliteNATBindMappingFilterBehavior
    INTEGER,\n         dsliteNATBindMappingAddressPooling INTEGER\n         }\n      dsliteNATBindMappingInstanceIndex
    OBJECT-TYPE\n          SYNTAX Natv2InstanceIndex\n          MAX-ACCESS not-accessible\n
    \         STATUS current\n          DESCRIPTION\n             \"Index of the NAT
    instance that created this port\n              map entry.\"\n       ::= { dsliteNATBindEntry
    1 }\n      dsliteNATBindMappingProto OBJECT-TYPE\n          SYNTAX      ProtocolNumber\n
    \         MAX-ACCESS  not-accessible\n          STATUS      current\n          DESCRIPTION\n
    \            \"This object specifies the mapping's transport protocol\n              number.\"\n
    \         ::= { dsliteNATBindEntry 2 }\n     dsliteNATBindMappingExtRealm OBJECT-TYPE\n
    \         SYNTAX     SnmpAdminString (SIZE(0..32))\n          MAX-ACCESS not-accessible\n
    \         STATUS     current\n          DESCRIPTION\n             \"The realm
    to which dsliteNATBindMappingExtAddress\n             belongs.\"\n          ::=
    { dsliteNATBindEntry 3 }\n      dsliteNATBindMappingExtAddressType OBJECT-TYPE\n
    \         SYNTAX InetAddressType\n          MAX-ACCESS not-accessible\n          STATUS
    current\n          DESCRIPTION\n            \"Address type for the mapping's external
    address.\n             This object MUST be set to the value of iPv4(1).\n             The
    values of ipv6(2), ipv4z(3), and ipv6z(4) are\n             not allowed.\"\n          REFERENCE\n
    \           \"ipv4(1), ipv6(2), iPv4z(3), and ipv6z(4): RFC 4001.\"\n          ::=
    { dsliteNATBindEntry 4 }\n     dsliteNATBindMappingExtAddress OBJECT-TYPE\n          SYNTAX
    InetAddress (SIZE (0..4))\n          MAX-ACCESS not-accessible\n          STATUS
    current\n          DESCRIPTION\n            \"The mapping's external address.
    \ This is the source\n             address for translated outgoing packets.  The
    address\n             type is given by dsliteNATBindMappingExtAddressType.\"\n
    \         ::= { dsliteNATBindEntry 5 }\n      dsliteNATBindMappingExtPort OBJECT-TYPE\n
    \         SYNTAX InetPortNumber\n          MAX-ACCESS not-accessible\n          STATUS
    current\n          DESCRIPTION\n            \"The mapping's assigned external
    port number.\n             This is the source port for translated outgoing\n             packets.
    \ This MUST be a non-zero value.\"\n          ::= { dsliteNATBindEntry 6 }\n       dsliteNATBindMappingIntRealm
    OBJECT-TYPE\n          SYNTAX SnmpAdminString (SIZE(0..32))\n          MAX-ACCESS
    read-only\n          STATUS current\n          DESCRIPTION\n            \"The
    realm to which natMappingIntAddress belongs.  This\n             realm defines
    the IPv6 address space from which the\n             tunnel source address is taken.
    \ The realm of the\n             encapsulated IPv4 address is restricted in scope
    to\n             the tunnel, so there is no point in identifying it\n             separately.\"\n
    \         ::= { dsliteNATBindEntry 7 }\n    dsliteNATBindMappingIntAddressType
    OBJECT-TYPE\n          SYNTAX InetAddressType\n          MAX-ACCESS read-only\n
    \         STATUS current\n          DESCRIPTION\n             \"Address type of
    the mapping's internal address.\n             This object MUST be set to the value
    of iPv4z(3).\n             The values of ipv4(1), ipv6(2), and ipv6z(4) are\n
    \            not allowed.\"\n          REFERENCE\n            \"ipv4(1), ipv6(2),
    iPv4z(3), and ipv6z(4): RFC 4001.\"\n          ::= { dsliteNATBindEntry 8 }\n
    \     dsliteNATBindMappingIntAddress OBJECT-TYPE\n          SYNTAX InetAddress\n
    \         MAX-ACCESS read-only\n          STATUS current\n          DESCRIPTION\n
    \           \"The mapping's internal address.  It is the IPv6 tunnel\n             source
    address.  The address type is given by\n             dsliteNATBindMappingIntAddressType.\"\n
    \         ::= { dsliteNATBindEntry 9 }\n      dsliteNATBindMappingIntPort OBJECT-TYPE\n
    \         SYNTAX InetPortNumber\n          MAX-ACCESS read-only\n          STATUS
    current\n          DESCRIPTION\n           \"The mapping's internal port number.
    \ This MUST be a\n            non-zero value.\"\n           ::= { dsliteNATBindEntry
    10 }\n      dsliteNATBindMappingPool OBJECT-TYPE\n          SYNTAX Unsigned32
    (0|1..4294967295)\n          MAX-ACCESS read-only\n          STATUS current\n
    \         DESCRIPTION\n            \"Index of the pool that contains this mapping's
    external\n             address and port.  If zero, no pool is associated with\n
    \            this mapping.\"\n          ::= { dsliteNATBindEntry 11 }\n      dsliteNATBindMappingMapBehavior
    OBJECT-TYPE\n          SYNTAX INTEGER{\n          endpointIndependent (0),\n          addressDependent(1),\n
    \         addressAndPortDependent (2)\n          }\n          MAX-ACCESS read-only\n
    \         STATUS current\n          DESCRIPTION\n            \"Mapping behavior
    as described in Section 4.1 of RFC 4787.\n             endpointIndependent(0),
    the behavior REQUIRED by\n             RFC 4787, REQ-1 maps the source address
    and port to\n             the same external address and port for all destination\n
    \            address and port combinations reached through the same\n             external
    realm and using the given protocol.\n             addressDependent(1) maps to
    the same external address\n             and port for all destination ports at
    the same\n             destination address reached through the same external\n
    \            realm and using the given protocol.\n             addressAndPortDependent(2)
    maps to a separate external\n             address and port combination for each
    different\n             destination address and port combination reached\n             through
    the same external realm.\n             For the DS-Lite scenario, it must be\n
    \            addressAndPortDependent(2).\"\n          REFERENCE\n            \"Mapping
    behavior: Section 4.1 of RFC 4787.\n             DS-Lite: RFC 6333.\"\n          ::=
    { dsliteNATBindEntry 12 }\n      dsliteNATBindMappingFilterBehavior OBJECT-TYPE\n
    \         SYNTAX INTEGER{\n          endpointIndependent (0),\n          addressDependent(1),\n
    \         addressAndPortDependent (2)\n          }\n          MAX-ACCESS read-only\n
    \         STATUS current\n          DESCRIPTION\n            \"Filtering behavior
    as described in Section 5 of RFC 4787.\n             endpointIndependent(0) accepts
    for translation packets\n             from all combinations of remote address
    and port\n             destined to the mapped external address and port via\n
    \            the given external realm and using the given protocol.\n             addressDependent(1)
    accepts for translation packets from\n             all remote ports from the same
    remote source address\n             destined to the mapped external address and
    port via the\n             given external realm and using the given protocol.\n
    \            addressAndPortDependent(2) accepts for translation only\n             those
    packets with the same remote source address, port,\n             and protocol
    incoming from the same external realm as\n             identified when the applicable
    port map entry was\n             created.\n             RFC 4787, REQ-8 recommends
    either endpointIndependent(0)\n             or addressDependent(1) filtering behavior,
    depending on\n             whether application friendliness or security takes\n
    \            priority.\n             For the DS-Lite scenario, it must be\n             addressAndPortDependent(2).\"\n
    \         REFERENCE\n            \"Filtering behavior: Section 5 of RFC 4787.\n
    \            DS-Lite: RFC 6333.\"\n          ::= { dsliteNATBindEntry 13 }\n      dsliteNATBindMappingAddressPooling
    OBJECT-TYPE\n          SYNTAX INTEGER{\n          arbitrary (0),\n          paired
    (1)\n          }\n          MAX-ACCESS read-only\n          STATUS current\n          DESCRIPTION\n
    \           \"Type of address pooling behavior that was used to create\n             this
    mapping.\n             arbitrary(0) pooling behavior means that the NAT instance\n
    \            may create the new port mapping using any address in the\n             pool
    that has a free port for the protocol concerned.\n             paired(1) pooling
    behavior, the behavior RECOMMENDED by RFC\n             4787, REQ-2 means that
    once a given internal address has\n             been mapped to a particular address
    in a particular pool,\n             further mappings of the same internal address
    to that pool\n             will reuse the previously assigned pool member address.\"\n
    \         REFERENCE\n            \"Pooling behavior: Section 4.1 of RFC 4787.\"\n
    \         ::= { dsliteNATBindEntry 14 }\n      --dsliteInfo\n      dsliteAFTRAlarmScalar
    OBJECT IDENTIFIER ::= { dsliteInfo 1 }\n      dsliteAFTRAlarmB4AddrType OBJECT-TYPE\n
    \        SYNTAX  InetAddressType\n         MAX-ACCESS accessible-for-notify\n
    \        STATUS current\n         DESCRIPTION\n            \"This object indicates
    the address type of\n             the B4, which will send an alarm.\"\n         ::=
    { dsliteAFTRAlarmScalar 1 }\n      dsliteAFTRAlarmB4Addr OBJECT-TYPE\n         SYNTAX
    \ InetAddress\n         MAX-ACCESS accessible-for-notify\n         STATUS current\n
    \        DESCRIPTION\n            \"This object indicates the IP address of\n
    \            B4, which will send an alarm.  The address type is\n             given
    by dsliteAFTRAlarmB4AddrType.\"\n         ::= { dsliteAFTRAlarmScalar 2 }\n      dsliteAFTRAlarmProtocolType
    OBJECT-TYPE\n         SYNTAX INTEGER{\n         tcp (0),\n         udp (1),\n
    \        icmp (2),\n         total (3)\n         }\n         MAX-ACCESS accessible-for-notify\n
    \        STATUS current\n         DESCRIPTION\n            \"This object indicates
    the transport protocol type\n             of alarm.\n             tcp (0) means
    that the transport protocol type of\n             alarm is tcp.\n             udp
    (1) means that the transport protocol type of\n             alarm is udp.\n             icmp
    (2) means that the transport protocol type of\n             alarm is icmp.\n             total
    (3) means that the transport protocol type of\n             alarm is total.\"\n
    \        ::= { dsliteAFTRAlarmScalar 3 }\n    dsliteAFTRAlarmSpecificIPAddrType
    OBJECT-TYPE\n         SYNTAX InetAddressType\n         MAX-ACCESS accessible-for-notify\n
    \        STATUS current\n         DESCRIPTION\n            \"This object indicates
    the address type of the IP address\n             whose port usage has reached
    the threshold.\"\n         ::= { dsliteAFTRAlarmScalar 4 }\n     dsliteAFTRAlarmSpecificIP
    OBJECT-TYPE\n         SYNTAX InetAddress\n         MAX-ACCESS accessible-for-notify\n
    \        STATUS current\n         DESCRIPTION\n            \"This object indicates
    the IP address whose port usage\n             has reached the threshold.  The
    address type is given by\n             dsliteAFTRAlarmSpecificIPAddrType.\"\n
    \        ::= { dsliteAFTRAlarmScalar 5 }\n      dsliteAFTRAlarmConnectNumber OBJECT-TYPE\n
    \        SYNTAX Integer32 (60..90)\n         MAX-ACCESS read-write\n         STATUS
    current\n         DESCRIPTION\n            \"This object indicates the notification
    threshold\n             of the DS-Lite tunnels that is active in\n             the
    AFTR device.\"\n          REFERENCE\n            \"AFTR: Section 6 of RFC 6333.\"\n
    \        DEFVAL\n             { 60 }\n         ::= { dsliteAFTRAlarmScalar 6 }\n
    \     dsliteAFTRAlarmSessionNumber OBJECT-TYPE\n         SYNTAX Integer32\n         MAX-ACCESS
    read-write\n         STATUS current\n         DESCRIPTION\n            \"This
    object indicates the notification threshold of\n             the IPv4 session
    for the user.\"\n          REFERENCE\n            \"AFTR: Section 6 of RFC 6333\n
    \            B4: Section 5 of RFC 6333.\"\n         DEFVAL\n             { -1
    }\n         ::= { dsliteAFTRAlarmScalar 7 }\n     dsliteAFTRAlarmPortNumber OBJECT-TYPE\n
    \        SYNTAX Integer32\n         MAX-ACCESS read-write\n         STATUS current\n
    \        DESCRIPTION\n            \"This object indicates the notification threshold
    of the NAT\n             ports that have been used by the user.\"\n         DEFVAL\n
    \            { -1 }\n         ::= { dsliteAFTRAlarmScalar 8 }\n      dsliteStatisticsTable
    OBJECT-TYPE\n         SYNTAX SEQUENCE OF DsliteStatisticsEntry\n         MAX-ACCESS
    not-accessible\n         STATUS current\n         DESCRIPTION\n            \"This
    table provides statistical information\n             about DS-Lite.\"\n         ::=
    { dsliteInfo 2 }\n      dsliteStatisticsEntry OBJECT-TYPE\n         SYNTAX DsliteStatisticsEntry\n
    \        MAX-ACCESS not-accessible\n         STATUS current\n         DESCRIPTION\n
    \           \"Each entry in this table provides statistical information\n             about
    DS-Lite.\"\n         INDEX { dsliteStatisticsSubscriberIndex }\n         ::= {
    dsliteStatisticsTable 1 }\n      DsliteStatisticsEntry ::=\n         SEQUENCE
    {\n       dsliteStatisticsSubscriberIndex        Natv2SubscriberIndex,\n       dsliteStatisticsDiscards
    \              Counter64,\n       dsliteStatisticsSends                  Counter64,\n
    \      dsliteStatisticsReceives               Counter64,\n       dsliteStatisticsIpv4Session
    \           Counter64,\n       dsliteStatisticsIpv6Session            Counter64\n
    \     }\n     dsliteStatisticsSubscriberIndex OBJECT-TYPE\n        SYNTAX Natv2SubscriberIndex\n
    \       MAX-ACCESS not-accessible\n        STATUS current\n        DESCRIPTION\n
    \          \"Index of the subscriber or host.  A unique value,\n            greater
    than zero, for each subscriber in the\n            managed system.\"\n         ::=
    { dsliteStatisticsEntry 1 }\n      dsliteStatisticsDiscards OBJECT-TYPE\n         SYNTAX
    Counter64\n         MAX-ACCESS read-only\n         STATUS current\n         DESCRIPTION\n
    \           \"This object indicates the number of packets\n             discarded
    from this subscriber.\"\n        ::= { dsliteStatisticsEntry 2 }\n       dsliteStatisticsSends
    \ OBJECT-TYPE\n         SYNTAX Counter64\n         MAX-ACCESS read-only\n         STATUS
    current\n         DESCRIPTION\n            \"This object indicates the number
    of packets that is\n              sent to this subscriber.\"\n         ::= { dsliteStatisticsEntry
    3 }\n       dsliteStatisticsReceives  OBJECT-TYPE\n         SYNTAX Counter64\n
    \        MAX-ACCESS read-only\n         STATUS current\n         DESCRIPTION\n
    \           \"This object indicates the number of packets that is\n              received
    from this subscriber.\"\n         ::= { dsliteStatisticsEntry 4 }\n      dsliteStatisticsIpv4Session
    OBJECT-TYPE\n         SYNTAX Counter64\n         MAX-ACCESS read-only\n         STATUS
    current\n         DESCRIPTION\n            \"This object indicates the number
    of the\n             current IPv4 Sessions.\"\n         REFERENCE\n             \"Session:
    Paragraph 2 in Section 11 of RFC 6333.\n             (The AFTR should have the
    capability to log the\n              tunnel-id, protocol, ports/IP addresses,
    and\n              the creation time of the NAT binding to uniquely\n              identify
    the user sessions).\"\n         ::= { dsliteStatisticsEntry 5 }\n      dsliteStatisticsIpv6Session
    OBJECT-TYPE\n         SYNTAX Counter64\n         MAX-ACCESS read-only\n         STATUS
    current\n         DESCRIPTION\n            \"This object indicates the number
    of the\n             current IPv6 session.  Because the AFTR is\n             also
    a dual-stack device, it will also\n             forward normal IPv6 packets for
    the\n             inbound and outbound direction.\"\n         REFERENCE\n             \"Session:
    Paragraph 2 in Section 11 of RFC 6333.\n             (The AFTR should have the
    capability to log the\n              tunnel-id, protocol, ports/IP addresses,
    and\n              the creation time of the NAT binding to uniquely\n              identify
    the user sessions).\"\n        ::= { dsliteStatisticsEntry 6 }\n   ---dslite Notifications\n
    \     dsliteTunnelNumAlarm NOTIFICATION-TYPE\n         OBJECTS { dsliteAFTRAlarmProtocolType,\n
    \                  dsliteAFTRAlarmB4AddrType,\n                   dsliteAFTRAlarmB4Addr
    }\n         STATUS current\n         DESCRIPTION\n            \"This trap is triggered
    when the number of\n             current DS-Lite tunnels exceeds the value of\n
    \            the dsliteAFTRAlarmConnectNumber.\"\n         ::= { dsliteNotifications
    1 }\n      dsliteAFTRUserSessionNumAlarm NOTIFICATION-TYPE\n         OBJECTS {
    dsliteAFTRAlarmProtocolType,\n                dsliteAFTRAlarmB4AddrType,\n                dsliteAFTRAlarmB4Addr
    }\n         STATUS current\n         DESCRIPTION\n            \"This trap is triggered
    when user sessions\n             reach the threshold.  The threshold\n             is
    specified by the dsliteAFTRAlarmSessionNumber.\"\n         REFERENCE\n             \"Session:
    Paragraph 2 in Section 11 of RFC 6333.\n             (The AFTR should have the
    capability to log the\n              tunnel-id, protocol, ports/IP addresses,
    and\n              the creation time of the NAT binding to uniquely\n              identify
    the user sessions).\"\n         ::= { dsliteNotifications 2 }\n        dsliteAFTRPortUsageOfSpecificIpAlarm
    NOTIFICATION-TYPE\n         OBJECTS { dsliteAFTRAlarmSpecificIPAddrType,\n                    dsliteAFTRAlarmSpecificIP
    }\n         STATUS current\n         DESCRIPTION\n            \"This trap is triggered
    when the used NAT\n             ports of map address reach the threshold.\n             The
    threshold is specified by the\n             dsliteAFTRAlarmPortNumber.\"\n         ::=
    { dsliteNotifications 3 }\n   --Module Conformance statement\n      dsliteConformance
    \  OBJECT IDENTIFIER\n         ::=  { dsliteMIB 2 }\n      dsliteCompliances OBJECT
    IDENTIFIER ::= { dsliteConformance 1 }\n      dsliteGroups OBJECT IDENTIFIER ::=
    { dsliteConformance 2 }\n   -- compliance statements\n      dsliteCompliance MODULE-COMPLIANCE\n
    \         STATUS current\n          DESCRIPTION\n              \"Describes the
    minimal requirements for conformance\n               to the DS-Lite MIB.\"\n          MODULE
    -- this module\n              MANDATORY-GROUPS { dsliteNATBindGroup,\n                  dsliteTunnelGroup,\n
    \                 dsliteStatisticsGroup,\n                  dsliteNotificationsGroup,\n
    \                 dsliteAFTRAlarmScalarGroup }\n          ::= { dsliteCompliances
    1 }\n      dsliteNATBindGroup OBJECT-GROUP\n         OBJECTS {\n                  dsliteNATBindMappingIntRealm,\n
    \                 dsliteNATBindMappingIntAddressType,\n                  dsliteNATBindMappingIntAddress,\n
    \                 dsliteNATBindMappingIntPort,\n                  dsliteNATBindMappingPool,\n
    \                 dsliteNATBindMappingMapBehavior,\n                  dsliteNATBindMappingFilterBehavior,\n
    \                 dsliteNATBindMappingAddressPooling }\n         STATUS current\n
    \        DESCRIPTION\n             \"A collection of objects to support basic\n
    \             management of NAT binds in the NAT of the AFTR.\"\n          ::=
    { dsliteGroups 1 }\n      dsliteTunnelGroup OBJECT-GROUP\n         OBJECTS { dsliteTunnelStartAddPreLen
    }\n         STATUS current\n         DESCRIPTION\n             \"A collection
    of objects to support management\n              of DS-Lite tunnels.\"\n         ::=
    { dsliteGroups 2 }\n      dsliteStatisticsGroup OBJECT-GROUP\n         OBJECTS
    { dsliteStatisticsDiscards,\n                   dsliteStatisticsSends,\n                   dsliteStatisticsReceives,\n
    \                  dsliteStatisticsIpv4Session,\n                   dsliteStatisticsIpv6Session
    }\n        STATUS current\n        DESCRIPTION\n           \" A collection of
    objects to support management\n             of statistical information for AFTR
    devices.\"\n          ::= { dsliteGroups 3 }\n      dsliteNotificationsGroup NOTIFICATION-GROUP\n
    \        NOTIFICATIONS { dsliteTunnelNumAlarm,\n                         dsliteAFTRUserSessionNumAlarm,\n
    \                        dsliteAFTRPortUsageOfSpecificIpAlarm }\n         STATUS
    current\n         DESCRIPTION\n            \"A collection of objects to support
    management\n             of trap information for AFTR devices.\"\n         ::=
    { dsliteGroups 4 }\n       dsliteAFTRAlarmScalarGroup OBJECT-GROUP\n         OBJECTS
    { dsliteAFTRAlarmB4AddrType,\n              dsliteAFTRAlarmB4Addr,\n              dsliteAFTRAlarmProtocolType,\n
    \             dsliteAFTRAlarmSpecificIPAddrType,\n              dsliteAFTRAlarmSpecificIP,\n
    \             dsliteAFTRAlarmConnectNumber,\n              dsliteAFTRAlarmSessionNumber,\n
    \             dsliteAFTRAlarmPortNumber}\n         STATUS current\n         DESCRIPTION\n
    \            \"A collection of objects to support management of\n             the
    information about the AFTR alarming scalar.\"\n         ::= { dsliteGroups 5 }\n
    \            END\n"
  title: 8.  Definitions
- contents:
  - "9.  Security Considerations\n   There are a number of management objects defined
    in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.
    \ Such\n   objects may be considered sensitive or vulnerable in some network\n
    \  environments.  The support for SET operations in a non-secure\n   environment
    without proper protection opens devices to attack.  These\n   are the tables and
    objects and their sensitivity/vulnerability:\n      dsliteAFTRAlarmConnectNumber\n
    \     dsliteAFTRAlarmSessionNumber\n      dsliteAFTRAlarmPortNumber\n   Notification
    thresholds: An attacker setting an arbitrarily low\n   threshold can cause many
    useless notifications to be generated.\n   Setting an arbitrarily high threshold
    can effectively disable\n   notifications, which could be used to hide another
    attack.\n   Some of the readable objects in this MIB module (i.e., objects with
    a\n   MAX-ACCESS other than not-accessible) may be considered sensitive or\n   vulnerable
    in some network environments.  It is thus important to\n   control even GET and/or
    NOTIFY access to these objects and possibly\n   to even encrypt the values of
    these objects when sending them over\n   the network via SNMP.  These are the
    tables and objects and their\n   sensitivity/vulnerability:\n      entries in
    dsliteTunnelTable\n      entries in dsliteNATBindTable\n   Objects that reveal
    host identities: Various objects can reveal the\n   identity of private hosts
    that are engaged in a session with external\n   end nodes.  A curious outsider
    could monitor these to assess the\n   number of private hosts being supported
    by the AFTR device.  Further,\n   a disgruntled former employee of an enterprise
    could use the\n   information to break into specific private hosts by intercepting
    the\n   existing sessions or originating new sessions into the host.  If\n   nothing
    else, unauthorized monitoring of these objects will violate\n   individual subscribers'
    privacy.\n   Unauthorized read access to the dsliteTunnelTable would reveal\n
    \  information about the tunnel topology.\n   SNMP versions prior to SNMPv3 did
    not include adequate security.\n   Even if the network itself is secure (for example
    by using IPsec),\n   there is no control as to who on the secure network is allowed
    to\n   access and GET/SET (read/change/create/delete) the objects in this\n   MIB
    module.\n   Implementations SHOULD provide the security features described by
    the\n   SNMPv3 framework (see [RFC3410]), and implementations claiming\n   compliance
    to the SNMPv3 standard MUST include full support for\n   authentication and privacy
    via the User-based Security Model (USM)\n   [RFC3414] with the AES cipher algorithm
    [RFC3826].  Implementations\n   MAY also provide support for the Transport Security
    Model (TSM)\n   [RFC5591] in combination with a secure transport such as SSH\n
    \  [RFC5592] or TLS/DTLS [RFC6353].\n   Further, deployment of SNMP versions prior
    to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3
    and to\n   enable cryptographic security.  It is then a customer/operator\n   responsibility
    to ensure that the SNMP entity giving access to an\n   instance of this MIB module
    is properly configured to give access to\n   the objects only to those principals
    (users) that have legitimate\n   rights to indeed GET or SET (change/create/delete)
    them.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   IANA has allocated the following OBJECT IDENTIFIER
    value and recorded\n   it in the SMI Numbers registry in the subregistry called
    \"SMI Network\n   Management MGMT Codes Internet-standard MIB\" under the mib-2
    branch\n   (1.3.6.1.2.1):\n         Descriptor        OBJECT IDENTIFIER value\n
    \        ----------        -----------------------\n         DSLite-MIB         {
    mib-2 240 }\n   IANA has recorded the following IANAtunnelType Textual Convention\n
    \  within the IANAifType-MIB:\n         IANAtunnelType ::= TEXTUAL-CONVENTION\n
    \                   SYNTAX     INTEGER {\n                               dsLite(17)
    \       -- DS-Lite tunnel\n                               }\n"
  title: 10.  IANA Considerations
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2578]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Structure of Management Information\n              Version 2 (SMIv2)\",
      STD 58, RFC 2578,\n              DOI 10.17487/RFC2578, April 1999,\n              <http://www.rfc-editor.org/info/rfc2578>.\n
      \  [RFC2579]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Textual Conventions for SMIv2\",\n              STD 58, RFC 2579, DOI
      10.17487/RFC2579, April 1999,\n              <http://www.rfc-editor.org/info/rfc2579>.\n
      \  [RFC2580]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Conformance Statements for SMIv2\",\n              STD 58, RFC 2580,
      DOI 10.17487/RFC2580, April 1999,\n              <http://www.rfc-editor.org/info/rfc2580>.\n
      \  [RFC2863]  McCloghrie, K. and F. Kastenholz, \"The Interfaces Group\n              MIB\",
      RFC 2863, DOI 10.17487/RFC2863, June 2000,\n              <http://www.rfc-editor.org/info/rfc2863>.\n
      \  [RFC3411]  Harrington, D., Presuhn, R., and B. Wijnen, \"An\n              Architecture
      for Describing Simple Network Management\n              Protocol (SNMP) Management
      Frameworks\", STD 62, RFC 3411,\n              DOI 10.17487/RFC3411, December
      2002,\n              <http://www.rfc-editor.org/info/rfc3411>.\n   [RFC3414]
      \ Blumenthal, U. and B. Wijnen, \"User-based Security Model\n              (USM)
      for version 3 of the Simple Network Management\n              Protocol (SNMPv3)\",
      STD 62, RFC 3414,\n              DOI 10.17487/RFC3414, December 2002,\n              <http://www.rfc-editor.org/info/rfc3414>.\n
      \  [RFC3826]  Blumenthal, U., Maino, F., and K. McCloghrie, \"The\n              Advanced
      Encryption Standard (AES) Cipher Algorithm in the\n              SNMP User-based
      Security Model\", RFC 3826,\n              DOI 10.17487/RFC3826, June 2004,\n
      \             <http://www.rfc-editor.org/info/rfc3826>.\n   [RFC4001]  Daniele,
      M., Haberman, B., Routhier, S., and J.\n              Schoenwaelder, \"Textual
      Conventions for Internet Network\n              Addresses\", RFC 4001, DOI 10.17487/RFC4001,
      February 2005,\n              <http://www.rfc-editor.org/info/rfc4001>.\n   [RFC4087]
      \ Thaler, D., \"IP Tunnel MIB\", RFC 4087,\n              DOI 10.17487/RFC4087,
      June 2005,\n              <http://www.rfc-editor.org/info/rfc4087>.\n   [RFC4787]
      \ Audet, F., Ed. and C. Jennings, \"Network Address\n              Translation
      (NAT) Behavioral Requirements for Unicast\n              UDP\", BCP 127, RFC
      4787, DOI 10.17487/RFC4787, January\n              2007, <http://www.rfc-editor.org/info/rfc4787>.\n
      \  [RFC5591]  Harrington, D. and W. Hardaker, \"Transport Security Model\n              for
      the Simple Network Management Protocol (SNMP)\",\n              STD 78, RFC
      5591, DOI 10.17487/RFC5591, June 2009,\n              <http://www.rfc-editor.org/info/rfc5591>.\n
      \  [RFC5592]  Harrington, D., Salowey, J., and W. Hardaker, \"Secure\n              Shell
      Transport Model for the Simple Network Management\n              Protocol (SNMP)\",
      RFC 5592, DOI 10.17487/RFC5592, June\n              2009, <http://www.rfc-editor.org/info/rfc5592>.\n
      \  [RFC6333]  Durand, A., Droms, R., Woodyatt, J., and Y. Lee, \"Dual-\n              Stack
      Lite Broadband Deployments Following IPv4\n              Exhaustion\", RFC 6333,
      DOI 10.17487/RFC6333, August 2011,\n              <http://www.rfc-editor.org/info/rfc6333>.\n
      \  [RFC6353]  Hardaker, W., \"Transport Layer Security (TLS) Transport\n              Model
      for the Simple Network Management Protocol (SNMP)\",\n              STD 78,
      RFC 6353, DOI 10.17487/RFC6353, July 2011,\n              <http://www.rfc-editor.org/info/rfc6353>.\n
      \  [RFC7659]  Perreault, S., Tsou, T., Sivakumar, S., and T. Taylor,\n              \"Definitions
      of Managed Objects for Network Address\n              Translators (NATs)\",
      RFC 7659, DOI 10.17487/RFC7659,\n              October 2015, <http://www.rfc-editor.org/info/rfc7659>.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [RFC3410]  Case, J., Mundy, R., Partain,
      D., and B. Stewart,\n              \"Introduction and Applicability Statements
      for Internet-\n              Standard Management Framework\", RFC 3410,\n              DOI
      10.17487/RFC3410, December 2002,\n              <http://www.rfc-editor.org/info/rfc3410>.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Acknowledgements\n   The authors would like to thank the following for their
    valuable\n   comments: Suresh Krishnan, Ian Farrer, Yiu Lee, Qi Sun, Yong Cui,\n
    \  David Harrington, Dave Thaler, Tassos Chatzithomaoglou, Tom Taylor,\n   Hui
    Deng, Carlos Pignataro, Matt Miller, Terry Manderson, and other\n   members of
    the Softwire working group.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Yu Fu\n   CNNIC\n   No.4 South 4th Street, Zhongguancun\n
    \  Hai-Dian District, Beijing  100190\n   China\n   Email: fuyu@cnnic.cn\n   Sheng
    Jiang\n   Huawei Technologies Co., Ltd\n   Q14, Huawei Campus, No.156 Beiqing
    Road\n   Hai-Dian District, Beijing  100095\n   China\n   Email: jiangsheng@huawei.com\n
    \  Jiang Dong\n   Tsinghua University\n   Department of Computer Science, Tsinghua
    University\n   Beijing  100084\n   China\n   Email: knight.dongjiang@gmail.com\n
    \  Yuchi Chen\n   Tsinghua University\n   Department of Computer Science, Tsinghua
    University\n   Beijing  100084\n   China\n   Email: flashfoxmx@gmail.com\n"
  title: Authors' Addresses
