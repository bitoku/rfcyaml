- title: __initial_text__
  contents:
  - '      The Benefits of Using Explicit Congestion Notification (ECN)

    '
- title: Abstract
  contents:
  - "Abstract\n   The goal of this document is to describe the potential benefits\
    \ of\n   applications using a transport that enables Explicit Congestion\n   Notification\
    \ (ECN).  The document outlines the principal gains in\n   terms of increased\
    \ throughput, reduced delay, and other benefits when\n   ECN is used over a network\
    \ path that includes equipment that supports\n   Congestion Experienced (CE) marking.\
    \  It also discusses challenges\n   for successful deployment of ECN.  It does\
    \ not propose new algorithms\n   to use ECN nor does it describe the details of\
    \ implementation of ECN\n   in endpoint devices (Internet hosts), routers, or\
    \ other network\n   devices.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc8087.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   2.  Benefit of Using ECN to Avoid Congestion Loss . . . . .\
    \ . . .   5\n     2.1.  Improved Throughput . . . . . . . . . . . . . . . . .\
    \ . .   5\n     2.2.  Reduced Head-of-Line Blocking . . . . . . . . . . . . .\
    \ .   6\n     2.3.  Reduced Probability of RTO Expiry . . . . . . . . . . . .\
    \   6\n     2.4.  Applications That Do Not Retransmit Lost Packets  . . . .  \
    \ 7\n     2.5.  Making Incipient Congestion Visible . . . . . . . . . . .   8\n\
    \     2.6.  Opportunities for New Transport Mechanisms  . . . . . . .   8\n  \
    \ 3.  Network Support for ECN . . . . . . . . . . . . . . . . . . .   9\n    \
    \ 3.1.  The ECN Field . . . . . . . . . . . . . . . . . . . . . .  10\n     3.2.\
    \  Forwarding ECN-Capable IP Packets . . . . . . . . . . . .  10\n     3.3.  Enabling\
    \ ECN in Network Devices . . . . . . . . . . . . .  11\n     3.4.  Coexistence\
    \ of ECN and Non-ECN Flows  . . . . . . . . . .  11\n     3.5.  Bleaching and\
    \ Middlebox Requirements to Deploy ECN  . . .  11\n     3.6.  Tunneling ECN and\
    \ the Use of ECN by Lower-Layer Networks   12\n   4.  Using ECN across the Internet\
    \ . . . . . . . . . . . . . . . .  12\n     4.1.  Partial Deployment  . . . .\
    \ . . . . . . . . . . . . . . .  13\n     4.2.  Detecting Whether a Path Really\
    \ Supports ECN  . . . . . .  13\n     4.3.  Detecting ECN-Receiver Feedback Cheating\
    \  . . . . . . . .  14\n   5.  Summary: Enabling ECN in Network Devices and Hosts\
    \  . . . . .  14\n   6.  Security Considerations . . . . . . . . . . . . . . .\
    \ . . . .  15\n   7.  References  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  16\n     7.1.  Normative References  . . . . . . . . . . . . . . . .\
    \ . .  16\n     7.2.  Informative References  . . . . . . . . . . . . . . . .\
    \ .  16\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .\
    \  19\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Internet transports (such as TCP and Stream Control Transmission\n\
    \   Protocol (SCTP)) are implemented in endpoints (Internet hosts) and\n   are\
    \ designed to detect and react to network congestion.  Congestion\n   may be detected\
    \ by loss of an IP packet or, if Explicit Congestion\n   Notification (ECN) [RFC3168]\
    \ is enabled, by the reception of a packet\n   with a Congestion Experienced (CE)\
    \ marking in the IP header.  Both of\n   these are treated by transports as indications\
    \ of congestion.  ECN\n   may also be enabled by other transports: UDP applications\
    \ that\n   provide congestion control may enable ECN when they are able to\n \
    \  correctly process the ECN signals [RFC8085] (e.g., ECN with RTP\n   [RFC6679]).\n\
    \   Active Queue Management (AQM) [RFC7567] is a class of techniques that\n  \
    \ can be used by network devices (a router, middlebox, or other device\n   that\
    \ forwards packets through the network) to manage the size of\n   queues in network\
    \ buffers.\n   A network device that does not support AQM typically uses a drop-tail\n\
    \   policy to drop excess IP packets when its queue becomes full.  The\n   discard\
    \ of packets is treated by transport protocols as a signal that\n   indicates\
    \ congestion on the end-to-end network path.  End-to-end\n   transports, such\
    \ as TCP, can cause a low level of loss while seeking\n   to share capacity with\
    \ other flows.  Although losses are not always\n   due to congestion (loss may\
    \ be due to link corruption, receiver\n   overrun, etc.), endpoints have to conservatively\
    \ presume that all\n   loss is potentially due to congestion and reduce their\
    \ rate.\n   Observed loss therefore results in a congestion control reaction by\n\
    \   the transport to reduce the maximum rate permitted by the sending\n   endpoint.\n\
    \   ECN makes it possible for the network to signal the presence of\n   incipient\
    \ congestion without incurring packet loss; it lets the\n   network deliver some\
    \ packets to an application that would otherwise\n   have been dropped if the\
    \ application or transport did not support\n   ECN.  This packet-loss reduction\
    \ is the most obvious benefit of ECN,\n   but it is often relatively modest. \
    \ However, enabling ECN can also\n   result in a number of beneficial side effects,\
    \ some of which may be\n   much more significant than the immediate packet-loss\
    \ reduction from\n   receiving a CE marking instead of dropping packets.  Several\
    \ benefits\n   reduce latency (e.g., reduced head-of-line blocking).\n   The use\
    \ of ECN is indicated in the ECN field [RFC3168], which is\n   carried in the\
    \ packet header of all IPv4 and IPv6 packets.  This\n   field may be set to one\
    \ of the four values shown in Figure 1.  The\n   Not-ECT codepoint '00' indicates\
    \ a packet that is not using ECN.  The\n   ECT(0) codepoint '01' and the ECT(1)\
    \ codepoint '10' both indicate\n   that the transport protocol using the IP layer\
    \ supports the use of\n   ECN.  The CE codepoint '11' is set by an ECN-capable\
    \ network device\n   to indicate congestion to the transport endpoint.\n   +-----+-----+---------+\n\
    \   | ECN FIELD |  Name   |\n   +-----+-----+---------+\n   |  0  |  0  | Not-ECT\
    \ |\n   |  0  |  1  | ECT(1)  |\n   |  1  |  0  | ECT(0)  |\n   |  1  |  1  |\
    \ CE      |\n   +-----+-----+---------+\n   Figure 1: The ECN Field in the IP\
    \ Packet Header (based on [RFC3168])\n   When an application uses a transport\
    \ that enables use of ECN\n   [RFC3168], the transport layer sets the ECT(0) or\
    \ ECT(1) codepoint in\n   the IP header of packets that it sends.  This indicates\
    \ to network\n   devices that they may mark, rather than drop, the ECN-capable\
    \ IP\n   packets.  An ECN-capable network device can then signal incipient\n \
    \  congestion (network queuing) at a point before a transport\n   experiences\
    \ congestion loss or high queuing delay.  The marking is\n   generally performed\
    \ as the result of various AQM algorithms [RFC7567]\n   where the exact combination\
    \ of AQM/ECN algorithms does not need to be\n   known by the transport endpoints.\n\
    \   The focus of the document is on usage of ECN by transport- and\n   application-layer\
    \ flows, not its implementation in endpoint hosts,\n   routers, and other network\
    \ devices.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The following terms are used:\n   AQM: Active Queue Management.\n\
    \   CE: Congestion Experienced; a codepoint value '11' marked in the ECN\n   field\
    \ of the IP packet header.\n   ECN-capable IP Packet: A packet where the ECN field\
    \ is set to a non-\n   zero ECN value (i.e., with ECT(0), ECT(1), or the CE codepoint).\n\
    \   ECN-capable network device: An ECN-capable network device may\n   forward,\
    \ drop, or queue an ECN-capable packet and may choose to CE\n   mark this packet\
    \ when there is incipient congestion.\n   ECN-capable transport/application: A\
    \ transport that sends ECN-capable\n   IP Packets, monitors reception of the ECN\
    \ field, and generates\n   appropriate feedback to control the rate of the sending\
    \ endpoint to\n   provide end-to-end congestion control.\n   ECN field: A 2-bit\
    \ field specified for use with explicit congestion\n   signaling in the IPv4 and\
    \ IPv6 packet headers.\n   Endpoint: An Internet host that terminates a transport\
    \ protocol\n   connection across an Internet path.\n   Incipient Congestion: The\
    \ detection of congestion when it is\n   starting, perhaps by a network device\
    \ noting that the arrival rate\n   exceeds the forwarding rate.\n   Network device:\
    \ A router, middlebox, or other device that forwards IP\n   packets through the\
    \ network.\n   non-ECN-capable: A network device or endpoint that does not interpret\n\
    \   the ECN field.  Such a device is not permitted to change the ECN\n   codepoint.\n\
    \   not-ECN-capable IP Packet: An IP packet with the ECN field set to a\n   value\
    \ of zero ('00').  A not-ECN-capable packet may be forwarded,\n   dropped, or\
    \ queued by a network device.\n"
- title: 2.  Benefit of Using ECN to Avoid Congestion Loss
  contents:
  - "2.  Benefit of Using ECN to Avoid Congestion Loss\n   An ECN-capable network\
    \ device is expected to CE mark an ECN-capable\n   IP packet as a CE when an AQM\
    \ method detects incipient congestion\n   rather than drop the packet [RFC7567].\
    \  An application can benefit\n   from this marking in several ways, which are\
    \ detailed in the rest of\n   this section.\n"
- title: 2.1.  Improved Throughput
  contents:
  - "2.1.  Improved Throughput\n   ECN seeks to avoid the inefficiency of dropping\
    \ data that has already\n   made it across at least part of the network path.\n\
    \   ECN can improve the throughput of an application, although this\n   increase\
    \ in throughput is often not the most significant gain.  When\n   an application\
    \ uses a lightly to moderately loaded network path, the\n   number of packets\
    \ that are dropped due to congestion is small.  Using\n   an example from Table\
    \ 1 of [RFC3649], for a standard TCP sender with\n   an RTT of 0.1 seconds, a\
    \ packet size of 1500 bytes, and an average\n   throughput of 1 Mbps, the average\
    \ packet-drop ratio would be 0.02\n   (i.e., 1 in 50 packets).  This translates\
    \ into an approximate 2%\n   throughput gain if ECN is enabled.  (Note that in\
    \ heavy congestion,\n   packet loss may be unavoidable with or without ECN.)\n"
- title: 2.2.  Reduced Head-of-Line Blocking
  contents:
  - "2.2.  Reduced Head-of-Line Blocking\n   Many Internet transports provide in-order\
    \ delivery of received data\n   segments to the applications they support.  For\
    \ these applications,\n   use of ECN can reduce the delay that can result when\
    \ these\n   applications experience packet loss.\n   Packet loss may occur for\
    \ various reasons.  One cause arises when an\n   AQM scheme drops a packet as\
    \ a signal of incipient congestion.\n   Whatever the cause of loss, a missing\
    \ packet needs to trigger a\n   congestion control response.  A reliable transport\
    \ also triggers\n   retransmission to recover the lost data.  For a transport\
    \ providing\n   in-order delivery, this requires that the transport receiver stall\n\
    \   (or wait) for all data that was sent ahead of a lost segment to be\n   correctly\
    \ received before it can forward any later data to the\n   application.  A loss\
    \ therefore creates a delay of at least one RTT\n   after a loss event before\
    \ data can be delivered to an application.\n   We call this head-of-line blocking.\
    \  This is the usual requirement\n   for TCP and SCTP.  Partially Reliable SCTP\
    \ (PR-SCTP) [RFC3758], UDP\n   [RFC768] [RFC8085], and the Datagram Congestion\
    \ Control Protocol\n   (DCCP) [RFC4340] provide a transport that does not provide\n\
    \   reordering.\n   By enabling ECN, a transport continues to receive in-order\
    \ data when\n   there is incipient congestion and can pass this data to the receiving\n\
    \   application.  Use of ECN avoids the additional reordering delay in a\n   reliable\
    \ transport.  The sender still needs to make an appropriate\n   congestion response\
    \ to reduce the maximum transmission rate for\n   future traffic, which usually\
    \ will require a reduction in the sending\n   rate [RFC8085].\n"
- title: 2.3.  Reduced Probability of RTO Expiry
  contents:
  - "2.3.  Reduced Probability of RTO Expiry\n   Some patterns of packet loss can\
    \ result in a Retransmission Timeout\n   (RTO), which causes a sudden and significant\
    \ change in the allowed\n   rate at which a transport/application can forward\
    \ packets.  Because\n   ECN provides an alternative to drop for network devices\
    \ to signal\n   incipient congestion, this can reduce the probability of loss\
    \ and\n   hence reduce the likelihood of RTO expiry.\n   Internet transports/applications\
    \ generally use an RTO timer as a last\n   resort to detect and recover loss [RFC8085]\
    \ [RFC5681].  Specifically,\n   an RTO timer detects loss of a packet that is\
    \ not followed by other\n   packets, such as at the end of a burst of data segments\
    \ or when an\n   application becomes idle (either because the application has\
    \ no\n   further data to send or the network prevents sending further data,\n\
    \   e.g., flow or congestion control at the transport layer).  This loss\n   of\
    \ the last segment (or last few segments) of a traffic burst is also\n   known\
    \ as a \"tail loss\".  Standard transport recovery methods, such as\n   Fast Recovery\
    \ [RFC5681], are often unable to recover from a tail\n   loss.  This is because\
    \ the endpoint receiver is unaware that the lost\n   segments were actually sent\
    \ and therefore generates no feedback\n   [Fla13].  Retransmission of these segments\
    \ relies on expiry of a\n   transport retransmission timer.  This timer is also\
    \ used to detect a\n   lack of forwarding along a path.  Expiry of the RTO results\
    \ in the\n   consequent loss of state about the network path being used.  This\n\
    \   typically includes resetting path estimates such as the RTT,\n   reinitializing\
    \ the congestion window, and possibly making updates to\n   other transport state.\
    \  This can reduce the performance of the\n   transport until it again adapts\
    \ to the path.\n   An ECN-capable network device cannot eliminate the possibility\
    \ of\n   tail loss because a drop may occur due to a traffic burst exceeding\n\
    \   the instantaneous available capacity of a network buffer or as a\n   result\
    \ of the AQM algorithm (e.g., overload protection mechanisms\n   [RFC7567]). \
    \ However, an ECN-capable network device that observes\n   incipient congestion\
    \ may be expected to buffer the IP packets of an\n   ECN-capable flow and set\
    \ a CE mark in one or more packet(s) rather\n   than triggering packet drop. \
    \ Setting a CE mark signals incipient\n   congestion without forcing the transport/application\
    \ to enter\n   retransmission timeout.  This reduces application-level latency\
    \ and\n   can improve the throughput for applications that send intermittent\n\
    \   bursts of data.\n   The benefit of avoiding retransmission loss is expected\
    \ to be\n   significant when ECN is used on TCP SYN/ACK packets [RFC5562] where\n\
    \   the RTO interval may be large because TCP cannot base the timeout\n   period\
    \ on prior RTT measurements from the same connection.\n"
- title: 2.4.  Applications That Do Not Retransmit Lost Packets
  contents:
  - "2.4.  Applications That Do Not Retransmit Lost Packets\n   A transport that enables\
    \ ECN can receive timely congestion signals\n   without the need to retransmit\
    \ packets each time it receives a\n   congestion signal.\n   Some latency-critical\
    \ applications do not retransmit lost packets,\n   yet they may be able to adjust\
    \ their sending rate following detection\n   of incipient congestion.  Examples\
    \ of such applications include UDP-\n   based services that carry Voice over IP\
    \ (VoIP), interactive video, or\n   real-time data.  The performance of many such\
    \ applications degrades\n   rapidly with increasing packet loss, and the transport/application\n\
    \   may therefore employ mechanisms (e.g., packet forward error\n   correction,\
    \ data duplication, or media codec error concealment) to\n   mitigate the immediate\
    \ effect of congestion loss on the application.\n   Some mechanisms consume additional\
    \ network capacity, some require\n   additional processing, and some contribute\
    \ additional path latency\n   when congestion is experienced.  By decoupling congestion\
    \ control\n   from loss, ECN can allow transports that support these applications\n\
    \   to reduce their rate before the application experiences loss from\n   congestion.\
    \  This can reduce the negative impact of triggering loss-\n   hiding mechanisms\
    \ with a direct positive impact on the quality\n   experienced by the users of\
    \ these applications.\n"
- title: 2.5.  Making Incipient Congestion Visible
  contents:
  - "2.5.  Making Incipient Congestion Visible\n   A characteristic of using ECN is\
    \ that it exposes the presence of\n   congestion on a network path to the transport\
    \ and network layers,\n   thus allowing information to be collected about the\
    \ presence of\n   incipient congestion.\n   Recording the presence of CE-marked\
    \ packets can provide information\n   about the current congestion level experienced\
    \ on a network path.  A\n   network flow that only experiences CE marking and\
    \ no loss implies\n   that the sending endpoint is experiencing only congestion.\
    \  A network\n   flow may also experience loss (e.g., due to queue overflow, AQM\n\
    \   methods that protect other flows, link corruption, or loss in\n   middleboxes).\
    \  When a mixture of CE marking and packet loss is\n   experienced, transports\
    \ and measurements need to assume there is\n   congestion [RFC7567].  Therefore,\
    \ an absence of CE marks does not\n   indicate a path has not experienced congestion.\n\
    \   The reception of CE-marked packets can be used to monitor the level\n   of\
    \ congestion by a transport/application or a network operator.  For\n   example,\
    \ ECN measurements are used by Congestion Exposure (ConEx)\n   [RFC6789].  In\
    \ contrast, metering packet loss is harder.\n"
- title: 2.6.  Opportunities for New Transport Mechanisms
  contents:
  - "2.6.  Opportunities for New Transport Mechanisms\n   ECN can enable design and\
    \ deployment of new algorithms in network\n   devices and Internet transports.\
    \  Internet transports need to regard\n   both loss and CE marking as an indication\
    \ of congestion.  However,\n   while the amount of feedback provided by drop ought\
    \ naturally be\n   minimized, this is not the case for ECN.  In contrast, an ECN-capable\n\
    \   network device could provide richer (more frequent and fine-grained)\n   indication\
    \ of its congestion state to the transport.\n   For any ECN-capable transport\
    \ (ECT), the receiving endpoint needs to\n   provide feedback to the transport\
    \ sender to indicate that CE marks\n   have been received.  [RFC3168] provides\
    \ one method that signals once\n   each round-trip time (RTT) that CE-marked packets\
    \ have been received.\n   A receiving endpoint may provide more detailed feedback\
    \ to the\n   congestion controller at the sender (e.g., describing the set of\n\
    \   received ECN codepoints or indicating each received CE-marked\n   packet).\
    \  Precise feedback about the number of CE marks encountered\n   is supported\
    \ by RTP when used over UDP [RFC6679] and has been\n   proposed for SCTP [ST14]\
    \ and TCP [ECN-FEEDBACK].\n   More detailed feedback is expected to enable evolution\
    \ of transport\n   protocols allowing the congestion control mechanism to make\
    \ a more\n   appropriate decision on how to react to congestion.  Designers of\n\
    \   transport protocols need to consider not only how network devices\n   CE-mark\
    \ packets but also how the control loop in the application/\n   transport reacts\
    \ to reception of these CE-marked packets.\n   Benefit has been noted when packets\
    \ are CE marked early using an\n   instantaneous queue, and if the receiving endpoint\
    \ provides feedback\n   about the number of packet marks encountered, an improved\
    \ sender\n   behavior has been shown to be possible, e.g, Data Center TCP (DCTCP)\n\
    \   [AL10].  DCTCP is targeted at controlled environments such as a data\n   center.\
    \  This is a work in progress, and it is currently unknown\n   whether or how\
    \ such behavior could be safely introduced into the\n   Internet.  Any update\
    \ to an Internet transport protocol requires\n   careful consideration of the\
    \ robustness of the behavior when working\n   with endpoints or network devices\
    \ that were not designed for the new\n   congestion reaction.\n"
- title: 3.  Network Support for ECN
  contents:
  - "3.  Network Support for ECN\n   For an application to use ECN requires that the\
    \ endpoints enable ECN\n   within the transport being used.  It also requires\
    \ that all network\n   devices along the path at least forward IP packets that\
    \ set a\n   non-zero ECN codepoint.\n   ECN can be deployed both in the general\
    \ Internet and in controlled\n   environments:\n   o  ECN can be incrementally\
    \ deployed in the general Internet.  The\n      IETF has provided guidance on\
    \ configuration and usage in\n      [RFC7567].\n   o  ECN may be deployed within\
    \ a controlled environment, for example,\n      within a data center or within\
    \ a well-managed private network.\n      This use of ECN may be tuned to the specific\
    \ use case.  An example\n      is DCTCP [AL10] [DCTCP].\n   Early experience of\
    \ using ECN across the general Internet encountered\n   a number of operational\
    \ difficulties when the network path either\n   failed to transfer ECN-capable\
    \ packets or inappropriately changed the\n   ECN codepoints [BA11].  A recent\
    \ survey reported a growing support\n   for network paths to pass ECN codepoints\
    \ [TR15].\n   The remainder of this section identifies what is needed for network\n\
    \   devices to effectively support ECN.\n"
- title: 3.1.  The ECN Field
  contents:
  - "3.1.  The ECN Field\n   The current IPv4 and IPv6 specifications assign usage\
    \ of 2 bits in\n   the IP header to carry the ECN codepoint.  This 2-bit field\
    \ was\n   reserved in [RFC2474] and assigned in [RFC3168].\n   [RFC4774] discusses\
    \ some of the issues in defining alternate\n   semantics for the ECN field and\
    \ specifies requirements for a safe\n   coexistence in an Internet that could\
    \ include routers that do not\n   understand the defined alternate semantics.\n\
    \   Some network devices were configured to use a routing hash that\n   included\
    \ the set of 8 bits forming the now deprecated Type of Service\n   (TOS) field\
    \ [RFC1349].  The present use of this field assigns 2 of\n   these bits to carry\
    \ the ECN field.  This is incompatible with use in\n   a routing hash because\
    \ it could lead to IP packets that carry a CE\n   mark being routed over a different\
    \ path to those packets that carried\n   an ECT mark.  The resultant reordering\
    \ would impact the performance\n   of transport protocols (such as TCP or SCTP)\
    \ and UDP-based\n   applications that are sensitive to reordering.  A network\
    \ device that\n   conforms to this older specification needs to be updated to\
    \ the\n   current specifications [RFC2474] to support ECN.  Configuration of\n\
    \   network devices must note that the ECN field may be updated by any\n   ECN-capable\
    \ network device along a path.\n"
- title: 3.2.  Forwarding ECN-Capable IP Packets
  contents:
  - "3.2.  Forwarding ECN-Capable IP Packets\n   Not all network devices along a path\
    \ need to be ECN-capable (i.e.,\n   perform CE marking).  However, all network\
    \ devices need to be\n   configured not to drop packets solely because the ECT(0)\
    \ or ECT(1)\n   codepoints are used.\n   Any network device that does not perform\
    \ CE marking of an ECN-capable\n   packet can be expected to drop these packets\
    \ under congestion.\n   Applications that experience congestion at these network\
    \ devices do\n   not see any benefit from enabling ECN.  However, they may see\
    \ benefit\n   if the congestion were to occur within a network device that did\n\
    \   support ECN.\n"
- title: 3.3.  Enabling ECN in Network Devices
  contents:
  - "3.3.  Enabling ECN in Network Devices\n   Network devices should use an AQM algorithm\
    \ that CE-marks ECN-capable\n   traffic when making decisions about the response\
    \ to congestion\n   [RFC7567].  An ECN method should set a CE mark on ECN-capable\
    \ packets\n   in the presence of incipient congestion.  A CE-marked packet will\
    \ be\n   interpreted as an indication of incipient congestion by the transport\n\
    \   endpoints.\n   There is an opportunity to design an AQM method for an ECN-capable\n\
    \   network device that differs from an AQM method designed to drop\n   packets.\
    \  [RFC7567] states that the network device should allow this\n   behavior to\
    \ be configurable.\n   [RFC3168] describes a method in which a network device\
    \ sets the CE\n   mark at the time that the network device would otherwise have\
    \ dropped\n   the packet.  While it has often been assumed that network devices\n\
    \   should CE-mark packets at the same level of congestion at which they\n   would\
    \ otherwise have dropped them, [RFC7567] recommends that network\n   devices allow\
    \ independent configuration of the settings for AQM\n   dropping and ECN marking.\
    \  Such separate configuration of the drop\n   and mark policies is supported\
    \ in some network devices.\n"
- title: 3.4.  Coexistence of ECN and Non-ECN Flows
  contents:
  - "3.4.  Coexistence of ECN and Non-ECN Flows\n   Network devices need to be able\
    \ to forward all IP flows and provide\n   appropriate treatment for both ECN and\
    \ non-ECN traffic.\n   The design considerations for an AQM scheme supporting\
    \ ECN needs to\n   consider the impact of queueing during incipient congestion.\
    \  For\n   example, a simple AQM scheme could choose to queue ECN-capable and\n\
    \   non-ECN-capable flows in the same queue with an ECN scheme that\n   CE-marks\
    \ packets during incipient congestion.  The CE-marked packets\n   that remain\
    \ in the queue during congestion can continue to contribute\n   to queueing delay.\
    \  In contrast, non-ECN-capable packets would\n   normally be dropped by an AQM\
    \ scheme under incipient congestion.\n   This difference in queueing is one motivation\
    \ for consideration of\n   more advanced AQM schemes and may provide an incentive\
    \ for enabling\n   flow isolation using scheduling [RFC7567].  The IETF is defining\n\
    \   methods to evaluate the suitability of AQM schemes for deployment in\n   the\
    \ general Internet [RFC7928].\n"
- title: 3.5.  Bleaching and Middlebox Requirements to Deploy ECN
  contents:
  - "3.5.  Bleaching and Middlebox Requirements to Deploy ECN\n   Network devices\
    \ should not be configured to change the ECN codepoint\n   in the packets that\
    \ they forward, except to set the CE codepoint to\n   signal incipient congestion.\n\
    \   Cases have been noted where an endpoint sends a packet with a\n   non-zero\
    \ ECN mark, but the packet is received by the remote endpoint\n   with a zero\
    \ ECN codepoint [TR15].  This could be a result of a policy\n   that erases or\
    \ \"bleaches\" the ECN codepoint values at a network edge\n   (resetting the codepoint\
    \ to zero).  Bleaching may occur for various\n   reasons (including normalizing\
    \ packets to hide which equipment\n   supports ECN).  This policy prevents use\
    \ of ECN by applications.\n   When ECN-capable IP packets, marked as ECT(0) or\
    \ ECT(1), are\n   re-marked to non-ECN-capable (i.e., the ECN field is set to\
    \ the zero\n   codepoint), this could result in the packets being dropped by\n\
    \   ECN-capable network devices further along the path.  This eliminates\n   the\
    \ advantage of using of ECN.\n   A network device must not change a packet with\
    \ a CE mark to a zero\n   codepoint; if the network device decides not to forward\
    \ the packet\n   with the CE mark, it has to instead drop the packet and not bleach\n\
    \   the marking.  This is because a CE-marked packet has already received\n  \
    \ ECN treatment in the network, and re-marking it would then hide the\n   congestion\
    \ signal from the receiving endpoint.  This eliminates the\n   benefits of ECN.\
    \  It can also slow down the response to congestion\n   compared to using AQM\
    \ because the transport will only react if it\n   later discovers congestion by\
    \ some other mechanism.\n   Prior to [RFC2474], a previous usage assigned the\
    \ bits now forming\n   the ECN field as a part of the now deprecated TOS field\
    \ [RFC1349].  A\n   network device that conforms to this older specification was\
    \ allowed\n   to re-mark or erase the ECN codepoints, and such equipment needs\
    \ to\n   be updated to the current specifications in order to support ECN.\n"
- title: 3.6.  Tunneling ECN and the Use of ECN by Lower-Layer Networks
  contents:
  - "3.6.  Tunneling ECN and the Use of ECN by Lower-Layer Networks\n   Some networks\
    \ may use ECN internally or tunnel ECN (e.g., for traffic\n   engineering or security).\
    \  These methods need to ensure that the ECN\n   field of the tunnel packets is\
    \ handled correctly at the ingress and\n   egress of the tunnel.  Guidance on\
    \ the correct use of ECN is provided\n   in [RFC6040].\n   Further guidance on\
    \ the encapsulation and use of ECN by non-IP\n   network devices is provided in\
    \ [ECN-ENCAP].\n"
- title: 4.  Using ECN across the Internet
  contents:
  - "4.  Using ECN across the Internet\n   A receiving endpoint needs to report the\
    \ loss it experiences when it\n   uses loss-based congestion control.  So also,\
    \ when ECN is enabled, a\n   receiving endpoint must correctly report the presence\
    \ of CE marks by\n   providing a mechanism to feed this congestion information\
    \ back to the\n   sending endpoint [RFC3168] [RFC8085], thus enabling the sender\
    \ to\n   react to experienced congestion.  This mechanism needs to be designed\n\
    \   to operate robustly across a wide range of Internet path\n   characteristics.\
    \  This section describes partial deployment, that is,\n   how ECN-enabled endpoints\
    \ can continue to work effectively over a\n   path that experiences misbehaving\
    \ network devices or when an endpoint\n   does not correctly provide feedback\
    \ of ECN information.\n"
- title: 4.1.  Partial Deployment
  contents:
  - "4.1.  Partial Deployment\n   Use of ECN is negotiated between the endpoints prior\
    \ to using the\n   mechanism.\n   ECN has been designed to allow incremental partial\
    \ deployment\n   [RFC3168].  Any network device can choose to use either ECN or\
    \ some\n   other loss-based policy to manage its traffic.  Similarly, transport/\n\
    \   application negotiation allows sending and receiving endpoints to\n   choose\
    \ whether ECN will be used to manage congestion for a particular\n   network flow.\n"
- title: 4.2.  Detecting Whether a Path Really Supports ECN
  contents:
  - "4.2.  Detecting Whether a Path Really Supports ECN\n   Internet transports and\
    \ applications need to be robust to the variety\n   and sometimes varying path\
    \ characteristics that are encountered in\n   the general Internet.  They need\
    \ to monitor correct forwarding of ECN\n   over the entire path and duration of\
    \ a session.\n   To be robust, applications and transports need to be designed\
    \ with\n   the expectation of heterogeneous forwarding (e.g., where some IP\n\
    \   packets are CE marked by one network device and some by another,\n   possibly\
    \ using a different AQM algorithm, or when a combination of CE\n   marking and\
    \ loss-based congestion indications are used).  Note that\n   [RFC7928] describes\
    \ methodologies for evaluating AQM schemes.\n   A transport/application also needs\
    \ to be robust to path changes.  A\n   change in the set of network devices along\
    \ a path could impact the\n   ability to effectively signal or use ECN across\
    \ the path, e.g., when\n   a path changes to use a middlebox that bleaches ECN\
    \ codepoints (see\n   Section 3.5).\n   A sending endpoint can check that any\
    \ CE marks applied to packets\n   received over the path are indeed delivered\
    \ to the remote receiving\n   endpoint and that appropriate feedback is provided.\
    \  (This could be\n   done by a sender setting a known CE codepoint for specific\
    \ packets in\n   a network flow and then checking whether the remote endpoint\n\
    \   correctly reports these marks [ECN-FALLBACK] [TR15].)  If a sender\n   detects\
    \ persistent misuse of ECN, it needs to fall back to using\n   loss-based recovery\
    \ and congestion control.  Guidance on a suitable\n   transport reaction is provided\
    \ in [ECN-FALLBACK].\n"
- title: 4.3.  Detecting ECN-Receiver Feedback Cheating
  contents:
  - "4.3.  Detecting ECN-Receiver Feedback Cheating\n   Appropriate feedback requires\
    \ that the endpoint receiver not try to\n   conceal reception of CE-marked packets\
    \ in the ECN feedback\n   information provided to the sending endpoint [RFC7567].\
    \  Designers of\n   applications/transports are therefore encouraged to include\n\
    \   mechanisms that can detect this misbehavior.  If a sending endpoint\n   detects\
    \ that a receiver is not correctly providing this feedback, it\n   needs to fall\
    \ back to using loss-based recovery instead of ECN.\n"
- title: '5.  Summary: Enabling ECN in Network Devices and Hosts'
  contents:
  - "5.  Summary: Enabling ECN in Network Devices and Hosts\n   This section summarizes\
    \ the benefits of deploying and using ECN\n   within the Internet.  It also provides\
    \ a list of prerequisites to\n   achieve ECN deployment.\n   Application developers\
    \ should, where possible, use transports that\n   enable ECN.  Applications that\
    \ directly use UDP need to provide\n   support to implement the functions required\
    \ for ECN [RFC8085].  Once\n   enabled, an application that uses a transport that\
    \ supports ECN will\n   experience the benefits of ECN as network deployment starts\
    \ to enable\n   ECN.  The application does not need to be rewritten to gain these\n\
    \   benefits.  Figure 2 summarizes the key benefits.\n   +---------+-----------------------------------------------------+\n\
    \   | Section | Benefit                                             |\n   +---------+-----------------------------------------------------+\n\
    \   |   2.1   | Improved Throughput                                 |\n   |  \
    \ 2.2   | Reduced Head-of-Line Blocking                       |\n   |   2.3  \
    \ | Reduced Probability of RTO Expiry                   |\n   |   2.4   | Applications\
    \ that do not Retransmit Lost Packets    |\n   |   2.5   | Making Incipient Congestion\
    \ Visible                 |\n   |   2.6   | Opportunities for New Transport Mechanisms\
    \          |\n   +---------+-----------------------------------------------------+\n\
    \                     Figure 2: Summary of Key Benefits\n   Network operators\
    \ and people configuring network devices should\n   enable ECN [RFC7567].\n  \
    \ Prerequisites for network devices (including IP routers) to enable\n   use of\
    \ ECN include:\n   o  A network device that updates the ECN field in IP packets\
    \ must use\n      IETF-specified methods (see Section 3.1).\n   o  A network device\
    \ may support alternate ECN semantics (see\n      Section 3.1).\n   o  A network\
    \ device must not choose a different network path solely\n      because a packet\
    \ carries a CE-codepoint set in the ECN Field;\n      CE-marked packets need to\
    \ follow the same path as packets with an\n      ECT(0) or ECT(1) codepoint (see\
    \ Section 3.1).  Network devices\n      need to be configured not to drop packets\
    \ solely because the\n      ECT(0) or ECT(1) codepoints are used (see Section\
    \ 3.2).\n   o  An ECN-capable network device should correctly update the ECN\n\
    \      codepoint of ECN-capable packets in the presence of incipient\n      congestion\
    \ (see Section 3.3).\n   o  Network devices need to be able to forward both ECN-capable\
    \ and\n      not-ECN-capable flows (see Section 3.4).\n   o  A network device\
    \ must not change a packet with a CE mark to a not-\n      ECN-capable codepoint\
    \ ('00'); if the network device decides not to\n      forward the packet with\
    \ the CE mark, it has to instead drop the\n      packet and not bleach the marking\
    \ (see Section 3.5).\n   Prerequisites for network endpoints to enable use of\
    \ ECN include the\n   following:\n   o  An application should use an Internet\
    \ transport that can set and\n      receive ECN marks (see Section 4).\n   o \
    \ An ECN-capable transport/application must return feedback\n      indicating\
    \ congestion to the sending endpoint and perform an\n      appropriate congestion\
    \ response (see Section 4).\n   o  An ECN-capable transport/application should\
    \ detect paths where\n      there is persistent misuse of ECN and fall back to\
    \ not sending\n      ECT(0) or ECT(1) (see Section 4.2).\n   o  Designers of applications/transports\
    \ are encouraged to include\n      mechanisms that can detect and react appropriately\
    \ to misbehaving\n      receivers that fail to report CE-marked packets (see Section\
    \ 4.3).\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document introduces no new security considerations.\
    \  Each RFC\n   listed in this document discusses the security considerations\
    \ of the\n   specification it contains.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2474]  Nichols, K., Blake, S., Baker, F.,\
    \ and D. Black,\n              \"Definition of the Differentiated Services Field\
    \ (DS\n              Field) in the IPv4 and IPv6 Headers\", RFC 2474,\n      \
    \        DOI 10.17487/RFC2474, December 1998,\n              <http://www.rfc-editor.org/info/rfc2474>.\n\
    \   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n   \
    \           of Explicit Congestion Notification (ECN) to IP\",\n             \
    \ RFC 3168, DOI 10.17487/RFC3168, September 2001,\n              <http://www.rfc-editor.org/info/rfc3168>.\n\
    \   [RFC6040]  Briscoe, B., \"Tunnelling of Explicit Congestion\n            \
    \  Notification\", RFC 6040, DOI 10.17487/RFC6040, November\n              2010,\
    \ <http://www.rfc-editor.org/info/rfc6040>.\n   [RFC7567]  Baker, F., Ed. and\
    \ G. Fairhurst, Ed., \"IETF\n              Recommendations Regarding Active Queue\
    \ Management\",\n              BCP 197, RFC 7567, DOI 10.17487/RFC7567, July 2015,\n\
    \              <http://www.rfc-editor.org/info/rfc7567>.\n   [RFC8085]  Eggert,\
    \ L., Fairhurst, G., and G. Shepherd, \"UDP Usage\n              Guidelines\"\
    , BCP 145, RFC 8085, DOI 10.17487/RFC8085,\n              March 2017, <http://www.rfc-editor.org/info/rfc8085>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [AL10]     Alizadeh, M., Greenberg, A., Maltz,\
    \ D., Padhye, J., Patel,\n              P., Prabhakar, B., Sengupta, S., and M.\
    \ Sridharan, \"Data\n              Center TCP (DCTCP)\", ACM SIGCOMM Computer\
    \ Communication\n              Review, Volume 40, Issue 4, pages 63-74,\n    \
    \          DOI 10.1145/1851182.1851192, October 2010.\n   [BA11]     Bauer, Steven.,\
    \ Beverly, Robert., and Arthur. Berger,\n              \"Measuring the State of\
    \ ECN Readiness in Servers, Clients,\n              and Routers\", Proceedings\
    \ of the 2011 ACM SIGCOMM\n              Conference on ICM, pages 171-180,\n \
    \             DOI 10.1145/2068816.2068833, November 2011.\n   [DCTCP]    Bensley,\
    \ S., Eggert, L., Thaler, D., Balasubramanian, P.,\n              and G. Judd,\
    \ \"Microsoft's Datacenter TCP (DCTCP): TCP\n              Congestion Control\
    \ for Datacenters\", Work in Progress,\n              draft-bensley-tcpm-dctcp-05,\
    \ July 2015.\n   [ECN-ENCAP]\n              Briscoe, B., Kaippallimalil, J., and\
    \ P. Thaler,\n              \"Guidelines for Adding Congestion Notification to\n\
    \              Protocols that Encapsulate IP\", Work in Progress,\n          \
    \    draft-ietf-tsvwg-ecn-encap-guidelines-07, July 2016.\n   [ECN-FALLBACK]\n\
    \              Kuehlewind, M. and B. Trammell, \"A Mechanism for ECN Path\n  \
    \            Probing and Fallback\", Work in Progress,\n              draft-kuehlewind-tcpm-ecn-fallback-01,\
    \ September 2013.\n   [ECN-FEEDBACK]\n              Briscoe, B., Kuehlewind, M.,\
    \ and R. Scheffenegger, \"More\n              Accurate ECN Feedback in TCP\",\
    \ Work in Progress,\n              draft-ietf-tcpm-accurate-ecn-02, October 2016.\n\
    \   [Fla13]    Flach, Tobias., Dukkipati, Nandita., Terzis, Andreas.,\n      \
    \        Raghavan, Barath., Cardwell, Neal., Cheng, Yuchung., Jain,\n        \
    \      Ankur., Hao, Shuai., Katz-Bassett, Ethan., and Ramesh.\n              Govindan,\
    \ \"Reducing web latency: the virtue of gentle\n              aggression\", ACM\
    \ SIGCOMM Computer Communication\n              Review, Volume 43, Issue 4, pages\
    \ 159-170,\n              DOI 10.1145/2534169.2486014, October 2013.\n   [RFC768]\
    \   Postel, J., \"User Datagram Protocol\", STD 6, RFC 768,\n              DOI\
    \ 10.17487/RFC0768, August 1980,\n              <http://www.rfc-editor.org/info/rfc768>.\n\
    \   [RFC1349]  Almquist, P., \"Type of Service in the Internet Protocol\n    \
    \          Suite\", RFC 1349, DOI 10.17487/RFC1349, July 1992,\n             \
    \ <http://www.rfc-editor.org/info/rfc1349>.\n   [RFC3649]  Floyd, S., \"HighSpeed\
    \ TCP for Large Congestion Windows\",\n              RFC 3649, DOI 10.17487/RFC3649,\
    \ December 2003,\n              <http://www.rfc-editor.org/info/rfc3649>.\n  \
    \ [RFC3758]  Stewart, R., Ramalho, M., Xie, Q., Tuexen, M., and P.\n         \
    \     Conrad, \"Stream Control Transmission Protocol (SCTP)\n              Partial\
    \ Reliability Extension\", RFC 3758,\n              DOI 10.17487/RFC3758, May\
    \ 2004,\n              <http://www.rfc-editor.org/info/rfc3758>.\n   [RFC4340]\
    \  Kohler, E., Handley, M., and S. Floyd, \"Datagram\n              Congestion\
    \ Control Protocol (DCCP)\", RFC 4340,\n              DOI 10.17487/RFC4340, March\
    \ 2006,\n              <http://www.rfc-editor.org/info/rfc4340>.\n   [RFC4774]\
    \  Floyd, S., \"Specifying Alternate Semantics for the\n              Explicit\
    \ Congestion Notification (ECN) Field\", BCP 124,\n              RFC 4774, DOI\
    \ 10.17487/RFC4774, November 2006,\n              <http://www.rfc-editor.org/info/rfc4774>.\n\
    \   [RFC5562]  Kuzmanovic, A., Mondal, A., Floyd, S., and K.\n              Ramakrishnan,\
    \ \"Adding Explicit Congestion Notification\n              (ECN) Capability to\
    \ TCP's SYN/ACK Packets\", RFC 5562,\n              DOI 10.17487/RFC5562, June\
    \ 2009,\n              <http://www.rfc-editor.org/info/rfc5562>.\n   [RFC5681]\
    \  Allman, M., Paxson, V., and E. Blanton, \"TCP Congestion\n              Control\"\
    , RFC 5681, DOI 10.17487/RFC5681, September 2009,\n              <http://www.rfc-editor.org/info/rfc5681>.\n\
    \   [RFC6679]  Westerlund, M., Johansson, I., Perkins, C., O'Hanlon, P.,\n   \
    \           and K. Carlberg, \"Explicit Congestion Notification (ECN)\n      \
    \        for RTP over UDP\", RFC 6679, DOI 10.17487/RFC6679, August\n        \
    \      2012, <http://www.rfc-editor.org/info/rfc6679>.\n   [RFC6789]  Briscoe,\
    \ B., Ed., Woundy, R., Ed., and A. Cooper, Ed.,\n              \"Congestion Exposure\
    \ (ConEx) Concepts and Use Cases\",\n              RFC 6789, DOI 10.17487/RFC6789,\
    \ December 2012,\n              <http://www.rfc-editor.org/info/rfc6789>.\n  \
    \ [RFC7928]  Kuhn, N., Ed., Natarajan, P., Ed., Khademi, N., Ed., and\n      \
    \        D. Ros, \"Characterization Guidelines for Active Queue\n            \
    \  Management (AQM)\", RFC 7928, DOI 10.17487/RFC7928, July\n              2016,\
    \ <http://www.rfc-editor.org/info/rfc7928>.\n   [ST14]     Stewart, R., Tuexen,\
    \ M., and X. Dong, \"ECN for Stream\n              Control Transmission Protocol\
    \ (SCTP)\", Work in Progress,\n              draft-stewart-tsvwg-sctpecn-05, January\
    \ 2014.\n   [TR15]     Tranmmel, Brian., Kuehlewind, Mirja., Boppart, Damiano,\n\
    \              Learmonth, Iain., and Gorry.  Fairhurst, \"Enabling\n         \
    \     Internet-Wide Deployment of Explicit Congestion\n              Notification\"\
    , Lecture Notes in Computer Science, Volume\n              8995, pp 193-205, DOI\
    \ 10.1007/978-3-319-15509-8_15, March\n              2015.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors were partly funded by the European Community\
    \ under its\n   Seventh Framework Programme through the Reducing Internet Transport\n\
    \   Latency (RITE) project (ICT-317700).  The views expressed are solely\n   those\
    \ of the authors.\n   The authors would like to thank the following people for\
    \ their\n   comments on prior draft versions of this document: Bob Briscoe, David\n\
    \   Collier-Brown, Colin Perkins, Richard Scheffenegger, Dave Taht, Wes\n   Eddy,\
    \ Fred Baker, Mikael Abrahamsson, Mirja Kuehlewind, John Leslie,\n   and other\
    \ members of the TSVWG and AQM working groups.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Godred Fairhurst\n   University of Aberdeen\n   School\
    \ of Engineering, Fraser Noble Building\n   Aberdeen  AB24 3UE\n   United Kingdom\n\
    \   Email: gorry@erg.abdn.ac.uk\n   Michael Welzl\n   University of Oslo\n   PO\
    \ Box 1080 Blindern\n   Oslo  N-0316\n   Norway\n   Phone: +47 22 85 24 20\n \
    \  Email: michawe@ifi.uio.no\n"
