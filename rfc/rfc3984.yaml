- title: __initial_text__
  contents:
  - '                   RTP Payload Format for H.264 Video

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes an RTP Payload format for the ITU-T\n   Recommendation\
    \ H.264 video codec and the technically identical\n   ISO/IEC International Standard\
    \ 14496-10 video codec.  The RTP payload\n   format allows for packetization of\
    \ one or more Network Abstraction\n   Layer Units (NALUs), produced by an H.264\
    \ video encoder, in each RTP\n   payload.  The payload format has wide applicability,\
    \ as it supports\n   applications from simple low bit-rate conversational usage,\
    \ to\n   Internet video streaming with interleaved transmission, to high bit-\n\
    \   rate video-on-demand.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n       5.4.  Packetization Modes.....................................\
    \ 14\n       5.5.  Decoding Order Number (DON)............................. 15\n\
    \       5.6.  Single NAL Unit Packet.................................. 18\n  \
    \     5.7.  Aggregation Packets..................................... 18\n    \
    \   5.8.  Fragmentation Units (FUs)............................... 27\n   6. \
    \ Packetization Rules........................................... 31\n       6.1.\
    \  Common Packetization Rules.............................. 31\n       6.2.  Single\
    \ NAL Unit Mode.................................... 32\n       6.3.  Non-Interleaved\
    \ Mode.................................... 32\n       6.4.  Interleaved Mode........................................\
    \ 33\n   7.  De-Packetization Process (Informative)........................ 33\n\
    \       7.1.  Single NAL Unit and Non-Interleaved Mode................ 33\n  \
    \     7.2.  Interleaved Mode........................................ 34\n    \
    \   7.3.  Additional De-Packetization Guidelines.................. 36\n   8. \
    \ Payload Format Parameters..................................... 37\n       8.1.\
    \  MIME Registration....................................... 37\n       8.2.  SDP\
    \ Parameters.......................................... 52\n       8.3.  Examples................................................\
    \ 58\n       8.4.  Parameter Set Considerations............................ 60\n\
    \   9.  Security Considerations....................................... 62\n  \
    \ 10. Congestion Control............................................ 63\n   11.\
    \ IANA Considerations........................................... 64\n   12. Informative\
    \ Appendix: Application Examples.................... 65\n       12.1. Video Telephony\
    \ according to ITU-T Recommendation H.241\n             Annex A.................................................\
    \ 65\n       12.2. Video Telephony, No Slice Data Partitioning, No NAL\n     \
    \        Unit Aggregation........................................ 65\n       12.3.\
    \ Video Telephony, Interleaved Packetization Using NAL\n             Unit Aggregation........................................\
    \ 66\n       12.4. Video Telephony with Data Partitioning.................. 66\n\
    \       12.5. Video Telephony or Streaming with FUs and Forward\n            \
    \ Error Correction........................................ 67\n       12.6. Low\
    \ Bit-Rate Streaming.................................. 69\n       12.7. Robust\
    \ Packet Scheduling in Video Streaming............. 70\n   13. Informative Appendix:\
    \ Rationale for Decoding Order Number..... 71\n       13.1. Introduction............................................\
    \ 71\n       13.2. Example of Multi-Picture Slice Interleaving............. 71\n\
    \       13.3. Example of Robust Packet Scheduling..................... 73\n  \
    \     13.4. Robust Transmission Scheduling of Redundant Coded\n             Slices..................................................\
    \ 77\n       13.5. Remarks on Other Design Possibilities................... 77\n\
    \   14. Acknowledgements.............................................. 78\n  \
    \ 15. References.................................................... 78\n    \
    \   15.1. Normative References.................................... 78\n      \
    \ 15.2. Informative References.................................. 79\n   Authors'\
    \ Addresses................................................ 81\n   Full Copyright\
    \ Statement.......................................... 83\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  The H.264 Codec
  contents:
  - "1.1.  The H.264 Codec\n   This memo specifies an RTP payload specification for\
    \ the video coding\n   standard known as ITU-T Recommendation H.264 [1] and ISO/IEC\n\
    \   International Standard 14496 Part 10 [2] (both also known as Advanced\n  \
    \ Video Coding, or AVC).  Recommendation H.264 was approved by ITU-T on\n   May\
    \ 2003, and the approved draft specification is available for\n   public review\
    \ [8].  In this memo the H.264 acronym is used for the\n   codec and the standard,\
    \ but the memo is equally applicable to the\n   ISO/IEC counterpart of the coding\
    \ standard.\n   The H.264 video codec has a very broad application range that\
    \ covers\n   all forms of digital compressed video from, low bit-rate Internet\n\
    \   streaming applications to HDTV broadcast and Digital Cinema\n   applications\
    \ with nearly lossless coding.  Compared to the current\n   state of technology,\
    \ the overall performance of H.264 is such that\n   bit rate savings of 50% or\
    \ more are reported.  Digital Satellite TV\n   quality, for example, was reported\
    \ to be achievable at 1.5 Mbit/s,\n   compared to the current operation point\
    \ of MPEG 2 video at around 3.5\n   Mbit/s [9].\n   The codec specification [1]\
    \ itself distinguishes conceptually between\n   a video coding layer (VCL) and\
    \ a network abstraction layer (NAL).\n   The VCL contains the signal processing\
    \ functionality of the codec;\n   mechanisms such as transform, quantization,\
    \ and motion compensated\n   prediction; and a loop filter.  It follows the general\
    \ concept of\n   most of today's video codecs, a macroblock-based coder that uses\n\
    \   inter picture prediction with motion compensation and transform\n   coding\
    \ of the residual signal.  The VCL encoder outputs slices: a bit\n   string that\
    \ contains the macroblock data of an integer number of\n   macroblocks, and the\
    \ information of the slice header (containing the\n   spatial address of the first\
    \ macroblock in the slice, the initial\n   quantization parameter, and similar\
    \ information).  Macroblocks in\n   slices are arranged in scan order unless a\
    \ different macroblock\n   allocation is specified, by using the so-called Flexible\
    \ Macroblock\n   Ordering syntax.  In-picture prediction is used only within a\
    \ slice.\n   More information is provided in [9].\n   The Network Abstraction\
    \ Layer (NAL) encoder encapsulates the slice\n   output of the VCL encoder into\
    \ Network Abstraction Layer Units (NAL\n   units), which are suitable for transmission\
    \ over packet networks or\n   use in packet oriented multiplex environments. \
    \ Annex B of H.264\n   defines an encapsulation process to transmit such NAL units\
    \ over\n   byte-stream oriented networks.  In the scope of this memo, Annex B\
    \ is\n   not relevant.\n   Internally, the NAL uses NAL units.  A NAL unit consists\
    \ of a one-\n   byte header and the payload byte string.  The header indicates\
    \ the\n   type of the NAL unit, the (potential) presence of bit errors or\n  \
    \ syntax violations in the NAL unit payload, and information regarding\n   the\
    \ relative importance of the NAL unit for the decoding process.\n   This RTP payload\
    \ specification is designed to be unaware of the bit\n   string in the NAL unit\
    \ payload.\n   One of the main properties of H.264 is the complete decoupling\
    \ of the\n   transmission time, the decoding time, and the sampling or\n   presentation\
    \ time of slices and pictures.  The decoding process\n   specified in H.264 is\
    \ unaware of time, and the H.264 syntax does not\n   carry information such as\
    \ the number of skipped frames (as is common\n   in the form of the Temporal Reference\
    \ in earlier video compression\n   standards).  Also, there are NAL units that\
    \ affect many pictures and\n   that are, therefore, inherently timeless.  For\
    \ this reason, the\n   handling of the RTP timestamp requires some special considerations\n\
    \   for NAL units for which the sampling or presentation time is not\n   defined\
    \ or, at transmission time, unknown.\n"
- title: 1.2.  Parameter Set Concept
  contents:
  - "1.2.  Parameter Set Concept\n   One very fundamental design concept of H.264\
    \ is to generate self-\n   contained packets, to make mechanisms such as the header\
    \ duplication\n   of RFC 2429 [10] or MPEG-4's Header Extension Code (HEC) [11]\n\
    \   unnecessary.  This was achieved by decoupling information relevant to\n  \
    \ more than one slice from the media stream.  This higher layer meta\n   information\
    \ should be sent reliably, asynchronously, and in advance\n   from the RTP packet\
    \ stream that contains the slice packets.\n   (Provisions for sending this information\
    \ in-band are also available\n   for applications that do not have an out-of-band\
    \ transport channel\n   appropriate for the purpose.)  The combination of the\
    \ higher-level\n   parameters is called a parameter set.  The H.264 specification\n\
    \   includes two types of parameter sets: sequence parameter set and\n   picture\
    \ parameter set.  An active sequence parameter set remains\n   unchanged throughout\
    \ a coded video sequence, and an active picture\n   parameter set remains unchanged\
    \ within a coded picture.  The sequence\n   and picture parameter set structures\
    \ contain information such as\n   picture size, optional coding modes employed,\
    \ and macroblock to slice\n   group map.\n   To be able to change picture parameters\
    \ (such as the picture size)\n   without having to transmit parameter set updates\
    \ synchronously to the\n   slice packet stream, the encoder and decoder can maintain\
    \ a list of\n   more than one sequence and picture parameter set.  Each slice\
    \ header\n   contains a codeword that indicates the sequence and picture parameter\n\
    \   set to be used.\n   This mechanism allows the decoupling of the transmission\
    \ of parameter\n   sets from the packet stream, and the transmission of them by\
    \ external\n   means (e.g., as a side effect of the capability exchange), or through\n\
    \   a (reliable or unreliable) control protocol.  It may even be possible\n  \
    \ that they are never transmitted but are fixed by an application\n   design specification.\n"
- title: 1.3.  Network Abstraction Layer Unit Types
  contents:
  - "1.3.  Network Abstraction Layer Unit Types\n   Tutorial information on the NAL\
    \ design can be found in [12], [13],\n   and [14].\n   All NAL units consist of\
    \ a single NAL unit type octet, which also\n   co-serves as the payload header\
    \ of this RTP payload format.  The\n   payload of a NAL unit follows immediately.\n\
    \   The syntax and semantics of the NAL unit type octet are specified in\n   [1],\
    \ but the essential properties of the NAL unit type octet are\n   summarized below.\
    \  The NAL unit type octet has the following format:\n      +---------------+\n\
    \      |0|1|2|3|4|5|6|7|\n      +-+-+-+-+-+-+-+-+\n      |F|NRI|  Type   |\n \
    \     +---------------+\n   The semantics of the components of the NAL unit type\
    \ octet, as\n   specified in the H.264 specification, are described briefly below.\n\
    \   F: 1 bit\n      forbidden_zero_bit.  The H.264 specification declares a value\
    \ of\n      1 as a syntax violation.\n   NRI: 2 bits\n      nal_ref_idc.  A value\
    \ of 00 indicates that the content of the NAL\n      unit is not used to reconstruct\
    \ reference pictures for inter\n      picture prediction.  Such NAL units can\
    \ be discarded without\n      risking the integrity of the reference pictures.\
    \  Values greater\n      than 00 indicate that the decoding of the NAL unit is\
    \ required to\n      maintain the integrity of the reference pictures.\n   Type:\
    \ 5 bits\n      nal_unit_type.  This component specifies the NAL unit payload\
    \ type\n      as defined in table 7-1 of [1], and later within this memo.  For\
    \ a\n      reference of all currently defined NAL unit types and their\n     \
    \ semantics, please refer to section 7.4.1 in [1].\n   This memo introduces new\
    \ NAL unit types, which are presented in\n   section 5.2.  The NAL unit types\
    \ defined in this memo are marked as\n   unspecified in [1].  Moreover, this specification\
    \ extends the\n   semantics of F and NRI as described in section 5.3.\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in BCP\
    \ 14, RFC 2119 [3].\n   This specification uses the notion of setting and clearing\
    \ a bit when\n   bit fields are handled.  Setting a bit is the same as assigning\
    \ that\n   bit the value of 1 (On).  Clearing a bit is the same as assigning\n\
    \   that bit the value of 0 (Off).\n"
- title: 3.  Scope
  contents:
  - "3.  Scope\n   This payload specification can only be used to carry the \"naked\"\
    \n   H.264 NAL unit stream over RTP, and not the bitstream format\n   discussed\
    \ in Annex B of H.264.  Likely, the first applications of\n   this specification\
    \ will be in the conversational multimedia field,\n   video telephony or video\
    \ conferencing, but the payload format also\n   covers other applications, such\
    \ as Internet streaming and TV over IP.\n"
- title: 4.  Definitions and Abbreviations
  contents:
  - '4.  Definitions and Abbreviations

    '
- title: 4.1.  Definitions
  contents:
  - "4.1.  Definitions\n   This document uses the definitions of [1].  The following\
    \ terms,\n   defined in [1], are summed up for convenience:\n      access unit:\
    \ A set of NAL units always containing a primary coded\n      picture.  In addition\
    \ to the primary coded picture, an access unit\n      may also contain one or\
    \ more redundant coded pictures or other NAL\n      units not containing slices\
    \ or slice data partitions of a coded\n      picture.  The decoding of an access\
    \ unit always results in a\n      decoded picture.\n      coded video sequence:\
    \ A sequence of access units that consists, in\n      decoding order, of an instantaneous\
    \ decoding refresh (IDR) access\n      unit followed by zero or more non-IDR access\
    \ units including all\n      subsequent access units up to but not including any\
    \ subsequent IDR\n      access unit.\n      IDR access unit: An access unit in\
    \ which the primary coded picture\n      is an IDR picture.\n      IDR picture:\
    \ A coded picture containing only slices with I or SI\n      slice types that\
    \ causes a \"reset\" in the decoding process.  After\n      the decoding of an\
    \ IDR picture, all following coded pictures in\n      decoding order can be decoded\
    \ without inter prediction from any\n      picture decoded prior to the IDR picture.\n\
    \      primary coded picture: The coded representation of a picture to be\n  \
    \    used by the decoding process for a bitstream conforming to H.264.\n     \
    \ The primary coded picture contains all macroblocks of the picture.\n      redundant\
    \ coded picture: A coded representation of a picture or a\n      part of a picture.\
    \  The content of a redundant coded picture shall\n      not be used by the decoding\
    \ process for a bitstream conforming to\n      H.264.  The content of a redundant\
    \ coded picture may be used by\n      the decoding process for a bitstream that\
    \ contains errors or\n      losses.\n      VCL NAL unit: A collective term used\
    \ to refer to coded slice and\n      coded data partition NAL units.\n   In addition,\
    \ the following definitions apply:\n      decoding order number (DON): A field\
    \ in the payload structure, or\n      a derived variable indicating NAL unit decoding\
    \ order.  Values of\n      DON are in the range of 0 to 65535, inclusive.  After\
    \ reaching the\n      maximum value, the value of DON wraps around to 0.\n   \
    \   NAL unit decoding order: A NAL unit order that conforms to the\n      constraints\
    \ on NAL unit order given in section 7.4.1.2 in [1].\n      transmission order:\
    \ The order of packets in ascending RTP sequence\n      number order (in modulo\
    \ arithmetic).  Within an aggregation\n      packet, the NAL unit transmission\
    \ order is the same as the order\n      of appearance of NAL units in the packet.\n\
    \      media aware network element (MANE): A network element, such as a\n    \
    \  middlebox or application layer gateway that is capable of parsing\n      certain\
    \ aspects of the RTP payload headers or the RTP payload and\n      reacting to\
    \ the contents.\n         Informative note: The concept of a MANE goes beyond\
    \ normal\n         routers or gateways in that a MANE has to be aware of the\n\
    \         signaling (e.g., to learn about the payload type mappings of\n     \
    \    the media streams), and in that it has to be trusted when\n         working\
    \ with SRTP.  The advantage of using MANEs is that they\n         allow packets\
    \ to be dropped according to the needs of the media\n         coding.  For example,\
    \ if a MANE has to drop packets due to\n         congestion on a certain link,\
    \ it can identify those packets\n         whose dropping has the smallest negative\
    \ impact on the user\n         experience and remove them in order to remove the\
    \ congestion\n         and/or keep the delay low.\n   Abbreviations\n      DON:\
    \        Decoding Order Number\n      DONB:       Decoding Order Number Base\n\
    \      DOND:       Decoding Order Number Difference\n      FEC:        Forward\
    \ Error Correction\n      FU:         Fragmentation Unit\n      IDR:        Instantaneous\
    \ Decoding Refresh\n      IEC:        International Electrotechnical Commission\n\
    \      ISO:        International Organization for Standardization\n      ITU-T:\
    \      International Telecommunication Union,\n                  Telecommunication\
    \ Standardization Sector\n      MANE:       Media Aware Network Element\n    \
    \  MTAP:       Multi-Time Aggregation Packet\n      MTAP16:     MTAP with 16-bit\
    \ timestamp offset\n      MTAP24:     MTAP with 24-bit timestamp offset\n    \
    \  NAL:        Network Abstraction Layer\n      NALU:       NAL Unit\n      SEI:\
    \        Supplemental Enhancement Information\n      STAP:       Single-Time Aggregation\
    \ Packet\n      STAP-A:     STAP type A\n      STAP-B:     STAP type B\n     \
    \ TS:         Timestamp\n      VCL:        Video Coding Layer\n"
- title: 5.  RTP Payload Format
  contents:
  - '5.  RTP Payload Format

    '
- title: 5.1.  RTP Header Usage
  contents:
  - "5.1.  RTP Header Usage\n   The format of the RTP header is specified in RFC 3550\
    \ [4] and\n   reprinted in Figure 1 for convenience.  This payload format uses\
    \ the\n   fields of the header in a manner consistent with that specification.\n\
    \   When one NAL unit is encapsulated per RTP packet, the RECOMMENDED RTP\n  \
    \ payload format is specified in section 5.6.  The RTP payload (and the\n   settings\
    \ for some RTP header bits) for aggregation packets and\n   fragmentation units\
    \ are specified in sections 5.7 and 5.8,\n   respectively.\n       0         \
    \          1                   2                   3\n       0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |V=2|P|X|  CC   |M|     PT      |       sequence number         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                           timestamp                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           synchronization source (SSRC) identifier            |\n   \
    \   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n      |\
    \            contributing source (CSRC) identifiers             |\n      |   \
    \                          ....                              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Figure 1.  RTP header according to RFC 3550\n   The RTP header information\
    \ to be set according to this RTP payload\n   format is set as follows:\n   Marker\
    \ bit (M): 1 bit\n      Set for the very last packet of the access unit indicated\
    \ by the\n      RTP timestamp, in line with the normal use of the M bit in video\n\
    \      formats, to allow an efficient playout buffer handling.  For\n      aggregation\
    \ packets (STAP and MTAP), the marker bit in the RTP\n      header MUST be set\
    \ to the value that the marker bit of the last\n      NAL unit of the aggregation\
    \ packet would have been if it were\n      transported in its own RTP packet.\
    \  Decoders MAY use this bit as\n      an early indication of the last packet\
    \ of an access unit, but MUST\n      NOT rely on this property.\n         Informative\
    \ note: Only one M bit is associated with an\n         aggregation packet carrying\
    \ multiple NAL units.  Thus, if a\n         gateway has re-packetized an aggregation\
    \ packet into several\n         packets, it cannot reliably set the M bit of those\
    \ packets.\n   Payload type (PT): 7 bits\n      The assignment of an RTP payload\
    \ type for this new packet format\n      is outside the scope of this document\
    \ and will not be specified\n      here.  The assignment of a payload type has\
    \ to be performed either\n      through the profile used or in a dynamic way.\n\
    \   Sequence number (SN): 16 bits\n      Set and used in accordance with RFC 3550.\
    \  For the single NALU and\n      non-interleaved packetization mode, the sequence\
    \ number is used to\n      determine decoding order for the NALU.\n   Timestamp:\
    \ 32 bits\n      The RTP timestamp is set to the sampling timestamp of the content.\n\
    \      A 90 kHz clock rate MUST be used.\n      If the NAL unit has no timing\
    \ properties of its own (e.g.,\n      parameter set and SEI NAL units), the RTP\
    \ timestamp is set to the\n      RTP timestamp of the primary coded picture of\
    \ the access unit in\n      which the NAL unit is included, according to section\
    \ 7.4.1.2 of\n      [1].\n      The setting of the RTP Timestamp for MTAPs is\
    \ defined in section\n      5.7.2.\n      Receivers SHOULD ignore any picture\
    \ timing SEI messages included\n      in access units that have only one display\
    \ timestamp.  Instead,\n      receivers SHOULD use the RTP timestamp for synchronizing\
    \ the\n      display process.\n      RTP senders SHOULD NOT transmit picture timing\
    \ SEI messages for\n      pictures that are not supposed to be displayed as multiple\
    \ fields.\n      If one access unit has more than one display timestamp carried\
    \ in\n      a picture timing SEI message, then the information in the SEI\n  \
    \    message SHOULD be treated as relative to the RTP timestamp, with\n      the\
    \ earliest event occurring at the time given by the RTP\n      timestamp, and\
    \ subsequent events later, as given by the difference\n      in SEI message picture\
    \ timing values.  Let tSEI1, tSEI2, ...,\n      tSEIn be the display timestamps\
    \ carried in the SEI message of an\n      access unit, where tSEI1 is the earliest\
    \ of all such timestamps.\n      Let tmadjst() be a function that adjusts the\
    \ SEI messages time\n      scale to a 90-kHz time scale.  Let TS be the RTP timestamp.\
    \  Then,\n      the display time for the event associated with tSEI1 is TS.  The\n\
    \      display time for the event with tSEIx, where x is [2..n] is TS +\n    \
    \  tmadjst (tSEIx - tSEI1).\n         Informative note: Displaying coded frames\
    \ as fields is needed\n         commonly in an operation known as 3:2 pulldown,\
    \ in which film\n         content that consists of coded frames is displayed on\
    \ a display\n         using interlaced scanning.  The picture timing SEI message\n\
    \         enables carriage of multiple timestamps for the same coded\n       \
    \  picture, and therefore the 3:2 pulldown process is perfectly\n         controlled.\
    \  The picture timing SEI message mechanism is\n         necessary because only\
    \ one timestamp per coded frame can be\n         conveyed in the RTP timestamp.\n\
    \         Informative note: Because H.264 allows the decoding order to be\n  \
    \       different from the display order, values of RTP timestamps may\n     \
    \    not be monotonically non-decreasing as a function of RTP\n         sequence\
    \ numbers.  Furthermore, the value for interarrival\n         jitter reported\
    \ in the RTCP reports may not be a trustworthy\n         indication of the network\
    \ performance, as the calculation rules\n         for interarrival jitter (section\
    \ 6.4.1 of RFC 3550) assume that\n         the RTP timestamp of a packet is directly\
    \ proportional to its\n         transmission time.\n"
- title: 5.2.  Common Structure of the RTP Payload Format
  contents:
  - "5.2.  Common Structure of the RTP Payload Format\n   The payload format defines\
    \ three different basic payload structures.\n   A receiver can identify the payload\
    \ structure by the first byte of\n   the RTP payload, which co-serves as the RTP\
    \ payload header and, in\n   some cases, as the first byte of the payload.  This\
    \ byte is always\n   structured as a NAL unit header.  The NAL unit type field\
    \ indicates\n   which structure is present.  The possible structures are as follows:\n\
    \   Single NAL Unit Packet: Contains only a single NAL unit in the\n   payload.\
    \  The NAL header type field will be equal to the original NAL\n   unit type;\
    \ i.e., in the range of 1 to 23, inclusive.  Specified in\n   section 5.6.\n \
    \  Aggregation packet: Packet type used to aggregate multiple NAL units\n   into\
    \ a single RTP payload.  This packet exists in four versions, the\n   Single-Time\
    \ Aggregation Packet type A (STAP-A), the Single-Time\n   Aggregation Packet type\
    \ B (STAP-B), Multi-Time Aggregation Packet\n   (MTAP) with 16-bit offset (MTAP16),\
    \ and Multi-Time Aggregation Packet\n   (MTAP) with 24-bit offset (MTAP24).  The\
    \ NAL unit type numbers\n   assigned for STAP-A, STAP-B, MTAP16, and MTAP24 are\
    \ 24, 25, 26, and\n   27, respectively.  Specified in section 5.7.\n   Fragmentation\
    \ unit: Used to fragment a single NAL unit over multiple\n   RTP packets.  Exists\
    \ with two versions, FU-A and FU-B, identified\n   with the NAL unit type numbers\
    \ 28 and 29, respectively.  Specified in\n   section 5.8.\n   Table 1.  Summary\
    \ of NAL unit types and their payload structures\n      Type   Packet    Type\
    \ name                        Section\n      ---------------------------------------------------------\n\
    \      0      undefined                                    -\n      1-23   NAL\
    \ unit  Single NAL unit packet per H.264   5.6\n      24     STAP-A    Single-time\
    \ aggregation packet     5.7.1\n      25     STAP-B    Single-time aggregation\
    \ packet     5.7.1\n      26     MTAP16    Multi-time aggregation packet     \
    \ 5.7.2\n      27     MTAP24    Multi-time aggregation packet      5.7.2\n   \
    \   28     FU-A      Fragmentation unit                 5.8\n      29     FU-B\
    \      Fragmentation unit                 5.8\n      30-31  undefined        \
    \                            -\n      Informative note: This specification does\
    \ not limit the size of\n      NAL units encapsulated in single NAL unit packets\
    \ and\n      fragmentation units.  The maximum size of a NAL unit encapsulated\n\
    \      in any aggregation packet is 65535 bytes.\n"
- title: 5.3.  NAL Unit Octet Usage
  contents:
  - "5.3.  NAL Unit Octet Usage\n   The structure and semantics of the NAL unit octet\
    \ were introduced in\n   section 1.3.  For convenience, the format of the NAL\
    \ unit type octet\n   is reprinted below:\n      +---------------+\n      |0|1|2|3|4|5|6|7|\n\
    \      +-+-+-+-+-+-+-+-+\n      |F|NRI|  Type   |\n      +---------------+\n \
    \  This section specifies the semantics of F and NRI according to this\n   specification.\n\
    \   F: 1 bit\n      forbidden_zero_bit.  A value of 0 indicates that the NAL unit\
    \ type\n      octet and payload should not contain bit errors or other syntax\n\
    \      violations.  A value of 1 indicates that the NAL unit type octet\n    \
    \  and payload may contain bit errors or other syntax violations.\n      MANEs\
    \ SHOULD set the F bit to indicate detected bit errors in the\n      NAL unit.\
    \  The H.264 specification requires that the F bit is\n      equal to 0.  When\
    \ the F bit is set, the decoder is advised that\n      bit errors or any other\
    \ syntax violations may be present in the\n      payload or in the NAL unit type\
    \ octet.  The simplest decoder\n      reaction to a NAL unit in which the F bit\
    \ is equal to 1 is to\n      discard such a NAL unit and to conceal the lost data\
    \ in the\n      discarded NAL unit.\n   NRI: 2 bits\n      nal_ref_idc.  The semantics\
    \ of value 00 and a non-zero value\n      remain unchanged from the H.264 specification.\
    \  In other words, a\n      value of 00 indicates that the content of the NAL\
    \ unit is not used\n      to reconstruct reference pictures for inter picture\
    \ prediction.\n      Such NAL units can be discarded without risking the integrity\
    \ of\n      the reference pictures.  Values greater than 00 indicate that the\n\
    \      decoding of the NAL unit is required to maintain the integrity of\n   \
    \   the reference pictures.\n      In addition to the specification above, according\
    \ to this RTP\n      payload specification, values of NRI greater than 00 indicate\
    \ the\n      relative transport priority, as determined by the encoder.  MANEs\n\
    \      can use this information to protect more important NAL units\n      better\
    \ than they do less important NAL units.  The highest\n      transport priority\
    \ is 11, followed by 10, and then by 01; finally,\n      00 is the lowest.\n \
    \        Informative note: Any non-zero value of NRI is handled\n         identically\
    \ in H.264 decoders.  Therefore, receivers need not\n         manipulate the value\
    \ of NRI when passing NAL units to the\n         decoder.\n      An H.264 encoder\
    \ MUST set the value of NRI according to the H.264\n      specification (subclause\
    \ 7.4.1) when the value of nal_unit_type is\n      in the range of 1 to 12, inclusive.\
    \  In particular, the H.264\n      specification requires that the value of NRI\
    \ SHALL be equal to 0\n      for all NAL units having nal_unit_type equal to 6,\
    \ 9, 10, 11, or\n      12.\n      For NAL units having nal_unit_type equal to\
    \ 7 or 8 (indicating a\n      sequence parameter set or a picture parameter set,\
    \ respectively),\n      an H.264 encoder SHOULD set the value of NRI to 11 (in\
    \ binary\n      format).  For coded slice NAL units of a primary coded picture\n\
    \      having nal_unit_type equal to 5 (indicating a coded slice\n      belonging\
    \ to an IDR picture), an H.264 encoder SHOULD set the\n      value of NRI to 11\
    \ (in binary format).\n      For a mapping of the remaining nal_unit_types to\
    \ NRI values, the\n      following example MAY be used and has been shown to be\
    \ efficient\n      in a certain environment [13].  Other mappings MAY also be\n\
    \      desirable, depending on the application and the H.264/AVC Annex A\n   \
    \   profile in use.\n         Informative note: Data Partitioning is not available\
    \ in certain\n         profiles; e.g., in the Main or Baseline profiles.\n   \
    \      Consequently, the nal unit types 2, 3, and 4 can occur only if\n      \
    \   the video bitstream conforms to a profile in which data\n         partitioning\
    \ is allowed and not in streams that conform to the\n         Main or Baseline\
    \ profiles.\n      Table 2.  Example of NRI values for coded slices and coded\
    \ slice\n      data partitions of primary coded reference pictures\n      NAL\
    \ Unit Type     Content of NAL unit              NRI (binary)\n      ----------------------------------------------------------------\n\
    \       1              non-IDR coded slice                         10\n      \
    \ 2              Coded slice data partition A                10\n       3    \
    \          Coded slice data partition B                01\n       4          \
    \    Coded slice data partition C                01\n         Informative note:\
    \ As mentioned before, the NRI value of non-\n         reference pictures is 00\
    \ as mandated by H.264/AVC.\n      An H.264 encoder SHOULD set the value of NRI\
    \ for coded slice and\n      coded slice data partition NAL units of redundant\
    \ coded reference\n      pictures equal to 01 (in binary format).\n      Definitions\
    \ of the values for NRI for NAL unit types 24 to 29,\n      inclusive, are given\
    \ in sections 5.7 and 5.8 of this memo.\n      No recommendation for the value\
    \ of NRI is given for NAL units\n      having nal_unit_type in the range of 13\
    \ to 23, inclusive, because\n      these values are reserved for ITU-T and ISO/IEC.\
    \  No\n      recommendation for the value of NRI is given for NAL units having\n\
    \      nal_unit_type equal to 0 or in the range of 30 to 31, inclusive,\n    \
    \  as the semantics of these values are not specified in this memo.\n"
- title: 5.4.  Packetization Modes
  contents:
  - "5.4.  Packetization Modes\n   This memo specifies three cases of packetization\
    \ modes:\n      o Single NAL unit mode\n      o Non-interleaved mode\n      o\
    \ Interleaved mode\n   The single NAL unit mode is targeted for conversational\
    \ systems that\n   comply with ITU-T Recommendation H.241 [15] (see section 12.1).\
    \  The\n   non-interleaved mode is targeted for conversational systems that may\n\
    \   not comply with ITU-T Recommendation H.241.  In the non-interleaved\n   mode,\
    \ NAL units are transmitted in NAL unit decoding order.  The\n   interleaved mode\
    \ is targeted for systems that do not require very low\n   end-to-end latency.\
    \  The interleaved mode allows transmission of NAL\n   units out of NAL unit decoding\
    \ order.\n   The packetization mode in use MAY be signaled by the value of the\n\
    \   OPTIONAL packetization-mode MIME parameter or by external means.  The\n  \
    \ used packetization mode governs which NAL unit types are allowed in\n   RTP\
    \ payloads.  Table 3 summarizes the allowed NAL unit types for each\n   packetization\
    \ mode.  Some NAL unit type values (indicated as\n   undefined in Table 3) are\
    \ reserved for future extensions.  NAL units\n   of those types SHOULD NOT be\
    \ sent by a sender and MUST be ignored by\n   a receiver.  For example, the Types\
    \ 1-23, with the associated packet\n   type \"NAL unit\", are allowed in \"Single\
    \ NAL Unit Mode\" and in \"Non-\n   Interleaved Mode\", but disallowed in \"Interleaved\
    \ Mode\".\n   Packetization modes are explained in more detail in section 6.\n\
    \   Table 3.  Summary of allowed NAL unit types for each packetization\n   mode\
    \ (yes = allowed, no = disallowed, ig = ignore)\n      Type   Packet    Single\
    \ NAL    Non-Interleaved    Interleaved\n                       Unit Mode    \
    \       Mode             Mode\n      -------------------------------------------------------------\n\
    \      0      undefined     ig               ig               ig\n      1-23 \
    \  NAL unit     yes              yes               no\n      24     STAP-A   \
    \     no              yes               no\n      25     STAP-B        no    \
    \           no              yes\n      26     MTAP16        no               no\
    \              yes\n      27     MTAP24        no               no           \
    \   yes\n      28     FU-A          no              yes              yes\n   \
    \   29     FU-B          no               no              yes\n      30-31  undefined\
    \     ig               ig               ig\n"
- title: 5.5.  Decoding Order Number (DON)
  contents:
  - "5.5.  Decoding Order Number (DON)\n   In the interleaved packetization mode,\
    \ the transmission order of NAL\n   units is allowed to differ from the decoding\
    \ order of the NAL units.\n   Decoding order number (DON) is a field in the payload\
    \ structure or a\n   derived variable that indicates the NAL unit decoding order.\n\
    \   Rationale and examples of use cases for transmission out of decoding\n   order\
    \ and for the use of DON are given in section 13.\n   The coupling of transmission\
    \ and decoding order is controlled by the\n   OPTIONAL sprop-interleaving-depth\
    \ MIME parameter as follows.  When\n   the value of the OPTIONAL sprop-interleaving-depth\
    \ MIME parameter is\n   equal to 0 (explicitly or per default) or transmission\
    \ of NAL units\n   out of their decoding order is disallowed by external means,\
    \ the\n   transmission order of NAL units MUST conform to the NAL unit decoding\n\
    \   order.  When the value of the OPTIONAL sprop-interleaving-depth MIME\n   parameter\
    \ is greater than 0 or transmission of NAL units out of their\n   decoding order\
    \ is allowed by external means,\n   o  the order of NAL units in an MTAP16 and\
    \ an MTAP24 is NOT REQUIRED\n      to be the NAL unit decoding order, and\n  \
    \ o  the order of NAL units generated by decapsulating STAP-Bs, MTAPs,\n     \
    \ and FUs in two consecutive packets is NOT REQUIRED to be the NAL\n      unit\
    \ decoding order.\n   The RTP payload structures for a single NAL unit packet,\
    \ an STAP-A,\n   and an FU-A do not include DON.  STAP-B and FU-B structures include\n\
    \   DON, and the structure of MTAPs enables derivation of DON as\n   specified\
    \ in section 5.7.2.\n      Informative note: When an FU-A occurs in interleaved\
    \ mode, it\n      always follows an FU-B, which sets its DON.\n      Informative\
    \ note: If a transmitter wants to encapsulate a single\n      NAL unit per packet\
    \ and transmit packets out of their decoding\n      order, STAP-B packet type\
    \ can be used.\n   In the single NAL unit packetization mode, the transmission\
    \ order of\n   NAL units, determined by the RTP sequence number, MUST be the same\
    \ as\n   their NAL unit decoding order.  In the non-interleaved packetization\n\
    \   mode, the transmission order of NAL units in single NAL unit packets,\n  \
    \ STAP-As, and FU-As MUST be the same as their NAL unit decoding order.\n   The\
    \ NAL units within an STAP MUST appear in the NAL unit decoding\n   order.  Thus,\
    \ the decoding order is first provided through the\n   implicit order within a\
    \ STAP, and second provided through the RTP\n   sequence number for the order\
    \ between STAPs, FUs, and single NAL unit\n   packets.\n   Signaling of the value\
    \ of DON for NAL units carried in STAP-B, MTAP,\n   and a series of fragmentation\
    \ units starting with an FU-B is\n   specified in sections 5.7.1, 5.7.2, and 5.8,\
    \ respectively.  The DON\n   value of the first NAL unit in transmission order\
    \ MAY be set to any\n   value.  Values of DON are in the range of 0 to 65535,\
    \ inclusive.\n   After reaching the maximum value, the value of DON wraps around\
    \ to 0.\n   The decoding order of two NAL units contained in any STAP-B, MTAP,\
    \ or\n   a series of fragmentation units starting with an FU-B is determined\n\
    \   as follows.  Let DON(i) be the decoding order number of the NAL unit\n   having\
    \ index i in the transmission order.  Function don_diff(m,n) is\n   specified\
    \ as follows:\n      If DON(m) == DON(n), don_diff(m,n) = 0\n      If (DON(m)\
    \ < DON(n) and DON(n) - DON(m) < 32768),\n      don_diff(m,n) = DON(n) - DON(m)\n\
    \      If (DON(m) > DON(n) and DON(m) - DON(n) >= 32768),\n      don_diff(m,n)\
    \ = 65536 - DON(m) + DON(n)\n      If (DON(m) < DON(n) and DON(n) - DON(m) >=\
    \ 32768),\n      don_diff(m,n) = - (DON(m) + 65536 - DON(n))\n      If (DON(m)\
    \ > DON(n) and DON(m) - DON(n) < 32768),\n      don_diff(m,n) = - (DON(m) - DON(n))\n\
    \   A positive value of don_diff(m,n) indicates that the NAL unit having\n   transmission\
    \ order index n follows, in decoding order, the NAL unit\n   having transmission\
    \ order index m.  When don_diff(m,n) is equal to 0,\n   then the NAL unit decoding\
    \ order of the two NAL units can be in\n   either order.  A negative value of\
    \ don_diff(m,n) indicates that the\n   NAL unit having transmission order index\
    \ n precedes, in decoding\n   order, the NAL unit having transmission order index\
    \ m.\n   Values of DON related fields (DON, DONB, and DOND; see section 5.7)\n\
    \   MUST be such that the decoding order determined by the values of DON,\n  \
    \ as specified above, conforms to the NAL unit decoding order.  If the\n   order\
    \ of two NAL units in NAL unit decoding order is switched and the\n   new order\
    \ does not conform to the NAL unit decoding order, the NAL\n   units MUST NOT\
    \ have the same value of DON.  If the order of two\n   consecutive NAL units in\
    \ the NAL unit stream is switched and the new\n   order still conforms to the\
    \ NAL unit decoding order, the NAL units\n   MAY have the same value of DON. \
    \ For example, when arbitrary slice\n   order is allowed by the video coding profile\
    \ in use, all the coded\n   slice NAL units of a coded picture are allowed to\
    \ have the same value\n   of DON.  Consequently, NAL units having the same value\
    \ of DON can be\n   decoded in any order, and two NAL units having a different\
    \ value of\n   DON should be passed to the decoder in the order specified above.\n\
    \   When two consecutive NAL units in the NAL unit decoding order have a\n   different\
    \ value of DON, the value of DON for the second NAL unit in\n   decoding order\
    \ SHOULD be the value of DON for the first, incremented\n   by one.\n   An example\
    \ of the decapsulation process to recover the NAL unit\n   decoding order is given\
    \ in section 7.\n      Informative note: Receivers should not expect that the\
    \ absolute\n      difference of values of DON for two consecutive NAL units in\
    \ the\n      NAL unit decoding order will be equal to one, even in error-free\n\
    \      transmission.  An increment by one is not required, as at the time\n  \
    \    of associating values of DON to NAL units, it may not be known\n      whether\
    \ all NAL units are delivered to the receiver.  For example,\n      a gateway\
    \ may not forward coded slice NAL units of non-reference\n      pictures or SEI\
    \ NAL units when there is a shortage of bit rate in\n      the network to which\
    \ the packets are forwarded.  In another\n      example, a live broadcast is interrupted\
    \ by pre-encoded content,\n      such as commercials, from time to time.  The\
    \ first intra picture\n      of a pre-encoded clip is transmitted in advance to\
    \ ensure that it\n      is readily available in the receiver.  When transmitting\
    \ the first\n      intra picture, the originator does not exactly know how many\
    \ NAL\n      units will be encoded before the first intra picture of the pre-\n\
    \      encoded clip follows in decoding order.  Thus, the values of DON\n    \
    \  for the NAL units of the first intra picture of the pre-encoded\n      clip\
    \ have to be estimated when they are transmitted, and gaps in\n      values of\
    \ DON may occur.\n"
- title: 5.6.  Single NAL Unit Packet
  contents:
  - "5.6.  Single NAL Unit Packet\n   The single NAL unit packet defined here MUST\
    \ contain only one NAL\n   unit, of the types defined in [1].  This means that\
    \ neither an\n   aggregation packet nor a fragmentation unit can be used within\
    \ a\n   single NAL unit packet.  A NAL unit stream composed by decapsulating\n\
    \   single NAL unit packets in RTP sequence number order MUST conform to\n   the\
    \ NAL unit decoding order.  The structure of the single NAL unit\n   packet is\
    \ shown in Figure 2.\n      Informative note: The first byte of a NAL unit co-serves\
    \ as the\n      RTP payload header.\n       0                   1            \
    \       2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |F|NRI|  type   |                                               |\n   \
    \   +-+-+-+-+-+-+-+-+                                               |\n      |\
    \                                                               |\n      |   \
    \            Bytes 2..n of a Single NAL unit                 |\n      |      \
    \                                                         |\n      |         \
    \                      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |            \
    \                   :...OPTIONAL RTP padding        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Figure 2.  RTP payload format for single NAL unit packet\n"
- title: 5.7.  Aggregation Packets
  contents:
  - "5.7.  Aggregation Packets\n   Aggregation packets are the NAL unit aggregation\
    \ scheme of this\n   payload specification.  The scheme is introduced to reflect\
    \ the\n   dramatically different MTU sizes of two key target networks:\n   wireline\
    \ IP networks (with an MTU size that is often limited by the\n   Ethernet MTU\
    \ size; roughly 1500 bytes), and IP or non-IP (e.g., ITU-T\n   H.324/M) based\
    \ wireless communication systems with preferred\n   transmission unit sizes of\
    \ 254 bytes or less.  To prevent media\n   transcoding between the two worlds,\
    \ and to avoid undesirable\n   packetization overhead, a NAL unit aggregation\
    \ scheme is introduced.\n   Two types of aggregation packets are defined by this\
    \ specification:\n   o  Single-time aggregation packet (STAP): aggregates NAL\
    \ units with\n      identical NALU-time.  Two types of STAPs are defined, one\
    \ without\n      DON (STAP-A) and another including DON (STAP-B).\n   o  Multi-time\
    \ aggregation packet (MTAP): aggregates NAL units with\n      potentially differing\
    \ NALU-time.  Two different MTAPs are defined,\n      differing in the length\
    \ of the NAL unit timestamp offset.\n   The term NALU-time is defined as the value\
    \ that the RTP timestamp\n   would have if that NAL unit would be transported\
    \ in its own RTP\n   packet.\n   Each NAL unit to be carried in an aggregation\
    \ packet is encapsulated\n   in an aggregation unit.  Please see below for the\
    \ four different\n   aggregation units and their characteristics.\n   The structure\
    \ of the RTP payload format for aggregation packets is\n   presented in Figure\
    \ 3.\n       0                   1                   2                   3\n \
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |F|NRI|\
    \  type   |                                               |\n      +-+-+-+-+-+-+-+-+\
    \                                               |\n      |                   \
    \                                            |\n      |             one or more\
    \ aggregation units                     |\n      |                           \
    \                                    |\n      |                              \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |                               :...OPTIONAL\
    \ RTP padding        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Figure 3.  RTP payload format for aggregation packets\n   MTAPs and STAPs\
    \ share the following packetization rules:  The RTP\n   timestamp MUST be set\
    \ to the earliest of the NALU times of all the\n   NAL units to be aggregated.\
    \  The type field of the NAL unit type\n   octet MUST be set to the appropriate\
    \ value, as indicated in Table 4.\n   The F bit MUST be cleared if all F bits\
    \ of the aggregated NAL units\n   are zero; otherwise, it MUST be set.  The value\
    \ of NRI MUST be the\n   maximum of all the NAL units carried in the aggregation\
    \ packet.\n      Table 4.  Type field for STAPs and MTAPs\n      Type   Packet\
    \    Timestamp offset   DON related fields\n                       field length\
    \       (DON, DONB, DOND)\n                       (in bits)          present\n\
    \      --------------------------------------------------------\n      24    \
    \ STAP-A       0                 no\n      25     STAP-B       0             \
    \    yes\n      26     MTAP16      16                 yes\n      27     MTAP24\
    \      24                 yes\n   The marker bit in the RTP header is set to the\
    \ value that the marker\n   bit of the last NAL unit of the aggregated packet\
    \ would have if it\n   were transported in its own RTP packet.\n   The payload\
    \ of an aggregation packet consists of one or more\n   aggregation units.  See\
    \ sections 5.7.1 and 5.7.2 for the four\n   different types of aggregation units.\
    \  An aggregation packet can\n   carry as many aggregation units as necessary;\
    \ however, the total\n   amount of data in an aggregation packet obviously MUST\
    \ fit into an IP\n   packet, and the size SHOULD be chosen so that the resulting\
    \ IP packet\n   is smaller than the MTU size.  An aggregation packet MUST NOT\
    \ contain\n   fragmentation units specified in section 5.8.  Aggregation packets\n\
    \   MUST NOT be nested; i.e., an aggregation packet MUST NOT contain\n   another\
    \ aggregation packet.\n"
- title: 5.7.1.  Single-Time Aggregation Packet
  contents:
  - "5.7.1.  Single-Time Aggregation Packet\n   Single-time aggregation packet (STAP)\
    \ SHOULD be used whenever NAL\n   units are aggregated that all share the same\
    \ NALU-time.  The payload\n   of an STAP-A does not include DON and consists of\
    \ at least one\n   single-time aggregation unit, as presented in Figure 4.  The\
    \ payload\n   of an STAP-B consists of a 16-bit unsigned decoding order number\n\
    \   (DON) (in network byte order) followed by at least one single-time\n   aggregation\
    \ unit, as presented in Figure 5.\n       0                   1              \
    \     2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      :                                               |\n   \
    \   +-+-+-+-+-+-+-+-+                                               |\n      |\
    \                                                               |\n      |   \
    \             single-time aggregation units                  |\n      |      \
    \                                                         |\n      |         \
    \                      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |            \
    \                   :\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Figure 4.\
    \  Payload format for STAP-A\n       0                   1                   2\
    \                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      :  decoding order number (DON)  |               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               |\n      |\
    \                                                               |\n      |   \
    \             single-time aggregation units                  |\n      |      \
    \                                                         |\n      |         \
    \                      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |            \
    \                   :\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Figure 5.\
    \  Payload format for STAP-B\n   The DON field specifies the value of DON for\
    \ the first NAL unit in an\n   STAP-B in transmission order.  For each successive\
    \ NAL unit in\n   appearance order in an STAP-B, the value of DON is equal to\
    \ (the\n   value of DON of the previous NAL unit in the STAP-B + 1) % 65536, in\n\
    \   which '%' stands for the modulo operation.\n   A single-time aggregation unit\
    \ consists of 16-bit unsigned size\n   information (in network byte order) that\
    \ indicates the size of the\n   following NAL unit in bytes (excluding these two\
    \ octets, but\n   including the NAL unit type octet of the NAL unit), followed\
    \ by the\n   NAL unit itself, including its NAL unit type byte.  A single-time\n\
    \   aggregation unit is byte aligned within the RTP payload, but it may\n   not\
    \ be aligned on a 32-bit word boundary.  Figure 6 presents the\n   structure of\
    \ the single-time aggregation unit.\n       0                   1            \
    \       2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      :        NAL unit size          |               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               |\n      |\
    \                                                               |\n      |   \
    \                        NAL unit                            |\n      |      \
    \                                                         |\n      |         \
    \                      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |            \
    \                   :\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Figure 6.\
    \  Structure for single-time aggregation unit\n   Figure 7 presents an example\
    \ of an RTP packet that contains an STAP-\n   A.  The STAP contains two single-time\
    \ aggregation units, labeled as 1\n   and 2 in the figure.\n       0         \
    \          1                   2                   3\n       0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          RTP Header                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |STAP-A\
    \ NAL HDR |         NALU 1 Size           | NALU 1 HDR    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         NALU 1 Data                           |\n   \
    \   :                                                               :\n      +\
    \               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |   \
    \            | NALU 2 Size                   | NALU 2 HDR    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         NALU 2 Data                           |\n   \
    \   :                                                               :\n      |\
    \                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |   \
    \                            :...OPTIONAL RTP padding        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Figure 7.  An example of an RTP packet including an STAP-A and two\n  \
    \               single-time aggregation units\n   Figure 8 presents an example\
    \ of an RTP packet that contains an STAP-\n   B.  The STAP contains two single-time\
    \ aggregation units, labeled as 1\n   and 2 in the figure.\n       0         \
    \          1                   2                   3\n       0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          RTP Header                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |STAP-B\
    \ NAL HDR | DON                           | NALU 1 Size   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | NALU 1 Size   | NALU 1 HDR    | NALU 1 Data                   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n      :\
    \                                                               :\n      +   \
    \            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |      \
    \         | NALU 2 Size                   | NALU 2 HDR    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       NALU 2 Data                             |\n   \
    \   :                                                               :\n      |\
    \                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |   \
    \                            :...OPTIONAL RTP padding        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Figure 8.  An example of an RTP packet including an STAP-B and two\n  \
    \               single-time aggregation units\n"
- title: 5.7.2.  Multi-Time Aggregation Packets (MTAPs)
  contents:
  - "5.7.2.  Multi-Time Aggregation Packets (MTAPs)\n   The NAL unit payload of MTAPs\
    \ consists of a 16-bit unsigned decoding\n   order number base (DONB) (in network\
    \ byte order) and one or more\n   multi-time aggregation units, as presented in\
    \ Figure 9.  DONB MUST\n   contain the value of DON for the first NAL unit in\
    \ the NAL unit\n   decoding order among the NAL units of the MTAP.\n      Informative\
    \ note: The first NAL unit in the NAL unit decoding\n      order is not necessarily\
    \ the first NAL unit in the order in which\n      the NAL units are encapsulated\
    \ in an MTAP.\n       0                   1                   2              \
    \     3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      :  decoding order number base   |               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               |\n      |\
    \                                                               |\n      |   \
    \              multi-time aggregation units                  |\n      |      \
    \                                                         |\n      |         \
    \                      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |            \
    \                   :\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Figure 9.\
    \  NAL unit payload format for MTAPs\n   Two different multi-time aggregation\
    \ units are defined in this\n   specification.  Both of them consist of 16 bits\
    \ unsigned size\n   information of the following NAL unit (in network byte order),\
    \ an 8-\n   bit unsigned decoding order number difference (DOND), and n bits (in\n\
    \   network byte order) of timestamp offset (TS offset) for this NAL\n   unit,\
    \ whereby n can be 16 or 24.  The choice between the different\n   MTAP types\
    \ (MTAP16 and MTAP24) is application dependent: the larger\n   the timestamp offset\
    \ is, the higher the flexibility of the MTAP, but\n   the overhead is also higher.\n\
    \   The structure of the multi-time aggregation units for MTAP16 and\n   MTAP24\
    \ are presented in Figures 10 and 11, respectively.  The\n   starting or ending\
    \ position of an aggregation unit within a packet is\n   NOT REQUIRED to be on\
    \ a 32-bit word boundary.  The DON of the\n   following NAL unit is equal to (DONB\
    \ + DOND) % 65536, in which %\n   denotes the modulo operation.  This memo does\
    \ not specify how the NAL\n   units within an MTAP are ordered, but, in most cases,\
    \ NAL unit\n   decoding order SHOULD be used.\n   The timestamp offset field MUST\
    \ be set to a value equal to the value\n   of the following formula: If the NALU-time\
    \ is larger than or equal to\n   the RTP timestamp of the packet, then the timestamp\
    \ offset equals\n   (the NALU-time of the NAL unit - the RTP timestamp of the\
    \ packet).\n   If the NALU-time is smaller than the RTP timestamp of the packet,\n\
    \   then the timestamp offset is equal to the NALU-time + (2^32 - the RTP\n  \
    \ timestamp of the packet).\n       0                   1                   2\
    \                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      :        NAL unit size          |      DOND     |  TS offset    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  TS offset    |                                               |\n      +-+-+-+-+-+-+-+-+\
    \              NAL unit                         |\n      |                   \
    \                                            |\n      |                      \
    \         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |                         \
    \      :\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Figure 10.  Multi-time\
    \ aggregation unit for MTAP16\n       0                   1                  \
    \ 2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      :        NALU unit size         |      DOND     |  TS offset    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \         TS offset             |                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n      |                              NAL unit\
    \                         |\n      |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                               :\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Figure 11.  Multi-time aggregation unit for MTAP24\n   For the \"earliest\"\
    \ multi-time aggregation unit in an MTAP the\n   timestamp offset MUST be zero.\
    \  Hence, the RTP timestamp of the MTAP\n   itself is identical to the earliest\
    \ NALU-time.\n      Informative note: The \"earliest\" multi-time aggregation\
    \ unit is\n      the one that would have the smallest extended RTP timestamp among\n\
    \      all the aggregation units of an MTAP if the aggregation units were\n  \
    \    encapsulated in single NAL unit packets.  An extended timestamp is\n    \
    \  a timestamp that has more than 32 bits and is capable of counting\n      the\
    \ wraparound of the timestamp field, thus enabling one to\n      determine the\
    \ smallest value if the timestamp wraps.  Such an\n      \"earliest\" aggregation\
    \ unit may not be the first one in the order\n      in which the aggregation units\
    \ are encapsulated in an MTAP.  The\n      \"earliest\" NAL unit need not be the\
    \ same as the first NAL unit in\n      the NAL unit decoding order either.\n \
    \  Figure 12 presents an example of an RTP packet that contains a\n   multi-time\
    \ aggregation packet of type MTAP16 that contains two\n   multi-time aggregation\
    \ units, labeled as 1 and 2 in the figure.\n       0                   1     \
    \              2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          RTP Header                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |MTAP16\
    \ NAL HDR |  decoding order number base   | NALU 1 Size   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  NALU 1 Size  |  NALU 1 DOND  |       NALU 1 TS offset        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  NALU 1 HDR   |  NALU 1 DATA                                  |\n      +-+-+-+-+-+-+-+-+\
    \                                               +\n      :                   \
    \                                            :\n      +               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |               | NALU 2 SIZE                   |  NALU 2 DOND  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \       NALU 2 TS offset        |  NALU 2 HDR   |  NALU 2 DATA  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \               |\n      :                                                   \
    \            :\n      |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                               :...OPTIONAL RTP padding        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Figure\
    \ 12.  An RTP packet including a multi-time aggregation\n                  packet\
    \ of type MTAP16 and two multi-time aggregation\n                  units\n   Figure\
    \ 13 presents an example of an RTP packet that contains a\n   multi-time aggregation\
    \ packet of type MTAP24 that contains two\n   multi-time aggregation units, labeled\
    \ as 1 and 2 in the figure.\n       0                   1                   2\
    \                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          RTP Header                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |MTAP24\
    \ NAL HDR |  decoding order number base   | NALU 1 Size   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  NALU 1 Size  |  NALU 1 DOND  |       NALU 1 TS offs          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |NALU\
    \ 1 TS offs |  NALU 1 HDR   |  NALU 1 DATA                  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n      :                                   \
    \                            :\n      +               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |               | NALU 2 SIZE                   |  NALU 2 DOND  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \       NALU 2 TS offset                        |  NALU 2 HDR   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  NALU 2 DATA                                                  |\n   \
    \   :                                                               :\n      |\
    \                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |   \
    \                            :...OPTIONAL RTP padding        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Figure 13.  An RTP packet including a multi-time aggregation\n        \
    \          packet of type MTAP24 and two multi-time aggregation\n            \
    \      units\n"
- title: 5.8.  Fragmentation Units (FUs)
  contents:
  - "5.8.  Fragmentation Units (FUs)\n   This payload type allows fragmenting a NAL\
    \ unit into several RTP\n   packets.  Doing so on the application layer instead\
    \ of relying on\n   lower layer fragmentation (e.g., by IP) has the following\
    \ advantages:\n   o  The payload format is capable of transporting NAL units bigger\n\
    \      than 64 kbytes over an IPv4 network that may be present in pre-\n     \
    \ recorded video, particularly in High Definition formats (there is\n      a limit\
    \ of the number of slices per picture, which results in a\n      limit of NAL\
    \ units per picture, which may result in big NAL\n      units).\n   o  The fragmentation\
    \ mechanism allows fragmenting a single picture\n      and applying generic forward\
    \ error correction as described in\n      section 12.5.\n   Fragmentation is defined\
    \ only for a single NAL unit and not for any\n   aggregation packets.  A fragment\
    \ of a NAL unit consists of an integer\n   number of consecutive octets of that\
    \ NAL unit.  Each octet of the NAL\n   unit MUST be part of exactly one fragment\
    \ of that NAL unit.\n   Fragments of the same NAL unit MUST be sent in consecutive\
    \ order with\n   ascending RTP sequence numbers (with no other RTP packets within\
    \ the\n   same RTP packet stream being sent between the first and last\n   fragment).\
    \  Similarly, a NAL unit MUST be reassembled in RTP sequence\n   number order.\n\
    \   When a NAL unit is fragmented and conveyed within fragmentation units\n  \
    \ (FUs), it is referred to as a fragmented NAL unit.  STAPs and MTAPs\n   MUST\
    \ NOT be fragmented.  FUs MUST NOT be nested; i.e., an FU MUST NOT\n   contain\
    \ another FU.\n   The RTP timestamp of an RTP packet carrying an FU is set to\
    \ the NALU\n   time of the fragmented NAL unit.\n   Figure 14 presents the RTP\
    \ payload format for FU-As.  An FU-A\n   consists of a fragmentation unit indicator\
    \ of one octet, a\n   fragmentation unit header of one octet, and a fragmentation\
    \ unit\n   payload.\n       0                   1                   2        \
    \           3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | FU indicator  |   FU header   |                               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |\n      |\
    \                                                               |\n      |   \
    \                      FU payload                            |\n      |      \
    \                                                         |\n      |         \
    \                      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |            \
    \                   :...OPTIONAL RTP padding        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Figure 14.  RTP payload format for FU-A\n   Figure 15 presents the RTP\
    \ payload format for FU-Bs.  An FU-B\n   consists of a fragmentation unit indicator\
    \ of one octet, a\n   fragmentation unit header of one octet, a decoding order\
    \ number (DON)\n   (in network byte order), and a fragmentation unit payload.\
    \  In other\n   words, the structure of FU-B is the same as the structure of FU-A,\n\
    \   except for the additional DON field.\n       0                   1       \
    \            2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | FU indicator  |   FU header   |               DON             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|\n      |\
    \                                                               |\n      |   \
    \                      FU payload                            |\n      |      \
    \                                                         |\n      |         \
    \                      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |            \
    \                   :...OPTIONAL RTP padding        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Figure 15.  RTP payload format for FU-B\n   NAL unit type FU-B MUST be\
    \ used in the interleaved packetization mode\n   for the first fragmentation unit\
    \ of a fragmented NAL unit.  NAL unit\n   type FU-B MUST NOT be used in any other\
    \ case.  In other words, in the\n   interleaved packetization mode, each NALU\
    \ that is fragmented has an\n   FU-B as the first fragment, followed by one or\
    \ more FU-A fragments.\n   The FU indicator octet has the following format:\n\
    \      +---------------+\n      |0|1|2|3|4|5|6|7|\n      +-+-+-+-+-+-+-+-+\n \
    \     |F|NRI|  Type   |\n      +---------------+\n   Values equal to 28 and 29\
    \ in the Type field of the FU indicator octet\n   identify an FU-A and an FU-B,\
    \ respectively.  The use of the F bit is\n   described in section 5.3.  The value\
    \ of the NRI field MUST be set\n   according to the value of the NRI field in\
    \ the fragmented NAL unit.\n   The FU header has the following format:\n     \
    \ +---------------+\n      |0|1|2|3|4|5|6|7|\n      +-+-+-+-+-+-+-+-+\n      |S|E|R|\
    \  Type   |\n      +---------------+\n   S: 1 bit\n      When set to one, the\
    \ Start bit indicates the start of a fragmented\n      NAL unit.  When the following\
    \ FU payload is not the start of a\n      fragmented NAL unit payload, the Start\
    \ bit is set to zero.\n   E: 1 bit\n      When set to one, the End bit indicates\
    \ the end of a fragmented NAL\n      unit, i.e., the last byte of the payload\
    \ is also the last byte of\n      the fragmented NAL unit.  When the following\
    \ FU payload is not the\n      last fragment of a fragmented NAL unit, the End\
    \ bit is set to\n      zero.\n   R: 1 bit\n      The Reserved bit MUST be equal\
    \ to 0 and MUST be ignored by the\n      receiver.\n   Type: 5 bits\n      The\
    \ NAL unit payload type as defined in table 7-1 of [1].\n   The value of DON in\
    \ FU-Bs is selected as described in section 5.5.\n      Informative note: The\
    \ DON field in FU-Bs allows gateways to\n      fragment NAL units to FU-Bs without\
    \ organizing the incoming NAL\n      units to the NAL unit decoding order.\n \
    \  A fragmented NAL unit MUST NOT be transmitted in one FU; i.e., the\n   Start\
    \ bit and End bit MUST NOT both be set to one in the same FU\n   header.\n   The\
    \ FU payload consists of fragments of the payload of the fragmented\n   NAL unit\
    \ so that if the fragmentation unit payloads of consecutive\n   FUs are sequentially\
    \ concatenated, the payload of the fragmented NAL\n   unit can be reconstructed.\
    \  The NAL unit type octet of the fragmented\n   NAL unit is not included as such\
    \ in the fragmentation unit payload,\n   but rather the information of the NAL\
    \ unit type octet of the\n   fragmented NAL unit is conveyed in F and NRI fields\
    \ of the FU\n   indicator octet of the fragmentation unit and in the type field\
    \ of\n   the FU header.  A FU payload MAY have any number of octets and MAY be\n\
    \   empty.\n      Informative note: Empty FUs are allowed to reduce the latency\
    \ of a\n      certain class of senders in nearly lossless environments.  These\n\
    \      senders can be characterized in that they packetize NALU fragments\n  \
    \    before the NALU is completely generated and, hence, before the\n      NALU\
    \ size is known.  If zero-length NALU fragments were not\n      allowed, the sender\
    \ would have to generate at least one bit of\n      data of the following fragment\
    \ before the current fragment could\n      be sent.  Due to the characteristics\
    \ of H.264, where sometimes\n      several macroblocks occupy zero bits, this\
    \ is undesirable and can\n      add delay.  However, the (potential) use of zero-length\
    \ NALUs\n      should be carefully weighed against the increased risk of the loss\n\
    \      of the NALU because of the additional packets employed for its\n      transmission.\n\
    \   If a fragmentation unit is lost, the receiver SHOULD discard all\n   following\
    \ fragmentation units in transmission order corresponding to\n   the same fragmented\
    \ NAL unit.\n   A receiver in an endpoint or in a MANE MAY aggregate the first\
    \ n-1\n   fragments of a NAL unit to an (incomplete) NAL unit, even if fragment\n\
    \   n of that NAL unit is not received.  In this case, the\n   forbidden_zero_bit\
    \ of the NAL unit MUST be set to one to indicate a\n   syntax violation.\n"
- title: 6.  Packetization Rules
  contents:
  - "6.  Packetization Rules\n   The packetization modes are introduced in section\
    \ 5.2.  The\n   packetization rules common to more than one of the packetization\n\
    \   modes are specified in section 6.1.  The packetization rules for the\n   single\
    \ NAL unit mode, the non-interleaved mode, and the interleaved\n   mode are specified\
    \ in sections 6.2, 6.3, and 6.4, respectively.\n"
- title: 6.1.  Common Packetization Rules
  contents:
  - "6.1.  Common Packetization Rules\n   All senders MUST enforce the following packetization\
    \ rules regardless\n   of the packetization mode in use:\n   o  Coded slice NAL\
    \ units or coded slice data partition NAL units\n      belonging to the same coded\
    \ picture (and thus sharing the same RTP\n      timestamp value) MAY be sent in\
    \ any order permitted by the\n      applicable profile defined in [1]; however,\
    \ for delay-critical\n      systems, they SHOULD be sent in their original coding\
    \ order to\n      minimize the delay.  Note that the coding order is not necessarily\n\
    \      the scan order, but the order the NAL packets become available to\n   \
    \   the RTP stack.\n   o  Parameter sets are handled in accordance with the rules\
    \ and\n      recommendations given in section 8.4.\n   o  MANEs MUST NOT duplicate\
    \ any NAL unit except for sequence or\n      picture parameter set NAL units,\
    \ as neither this memo nor the\n      H.264 specification provides means to identify\
    \ duplicated NAL\n      units.  Sequence and picture parameter set NAL units MAY\
    \ be\n      duplicated to make their correct reception more probable, but any\n\
    \      such duplication MUST NOT affect the contents of any active\n      sequence\
    \ or picture parameter set.  Duplication SHOULD be\n      performed on the application\
    \ layer and not by duplicating RTP\n      packets (with identical sequence numbers).\n\
    \   Senders using the non-interleaved mode and the interleaved mode MUST\n   enforce\
    \ the following packetization rule:\n   o  MANEs MAY convert single NAL unit packets\
    \ into one aggregation\n      packet, convert an aggregation packet into several\
    \ single NAL unit\n      packets, or mix both concepts, in an RTP translator.\
    \  The RTP\n      translator SHOULD take into account at least the following\n\
    \      parameters: path MTU size, unequal protection mechanisms (e.g.,\n     \
    \ through packet-based FEC according to RFC 2733 [18], especially\n      for sequence\
    \ and picture parameter set NAL units and coded slice\n      data partition A\
    \ NAL units), bearable latency of the system, and\n      buffering capabilities\
    \ of the receiver.\n      Informative note: An RTP translator is required to handle\
    \ RTCP as\n      per RFC 3550.\n"
- title: 6.2.  Single NAL Unit Mode
  contents:
  - "6.2.  Single NAL Unit Mode\n   This mode is in use when the value of the OPTIONAL\
    \ packetization-mode\n   MIME parameter is equal to 0, the packetization-mode\
    \ is not present,\n   or no other packetization mode is signaled by external means.\
    \  All\n   receivers MUST support this mode.  It is primarily intended for low-\n\
    \   delay applications that are compatible with systems using ITU-T\n   Recommendation\
    \ H.241 [15] (see section 12.1).  Only single NAL unit\n   packets MAY be used\
    \ in this mode.  STAPs, MTAPs, and FUs MUST NOT be\n   used.  The transmission\
    \ order of single NAL unit packets MUST comply\n   with the NAL unit decoding\
    \ order.\n"
- title: 6.3.  Non-Interleaved Mode
  contents:
  - "6.3.  Non-Interleaved Mode\n   This mode is in use when the value of the OPTIONAL\
    \ packetization-mode\n   MIME parameter is equal to 1 or the mode is turned on\
    \ by external\n   means.  This mode SHOULD be supported.  It is primarily intended\
    \ for\n   low-delay applications.  Only single NAL unit packets, STAP-As, and\n\
    \   FU-As MAY be used in this mode.  STAP-Bs, MTAPs, and FU-Bs MUST NOT\n   be\
    \ used.  The transmission order of NAL units MUST comply with the\n   NAL unit\
    \ decoding order.\n"
- title: 6.4.  Interleaved Mode
  contents:
  - "6.4.  Interleaved Mode\n   This mode is in use when the value of the OPTIONAL\
    \ packetization-mode\n   MIME parameter is equal to 2 or the mode is turned on\
    \ by external\n   means.  Some receivers MAY support this mode.  STAP-Bs, MTAPs,\
    \ FU-As,\n   and FU-Bs MAY be used.  STAP-As and single NAL unit packets MUST\
    \ NOT\n   be used.  The transmission order of packets and NAL units is\n   constrained\
    \ as specified in section 5.5.\n"
- title: 7.  De-Packetization Process (Informative)
  contents:
  - "7.  De-Packetization Process (Informative)\n   The de-packetization process is\
    \ implementation dependent.  Therefore,\n   the following description should be\
    \ seen as an example of a suitable\n   implementation.  Other schemes may be used\
    \ as well.  Optimizations\n   relative to the described algorithms are likely\
    \ possible.  Section\n   7.1 presents the de-packetization process for the single\
    \ NAL unit and\n   non-interleaved packetization modes, whereas section 7.2 describes\n\
    \   the process for the interleaved mode.  Section 7.3 includes\n   additional\
    \ decapsulation guidelines for intelligent receivers.\n   All normal RTP mechanisms\
    \ related to buffer management apply.  In\n   particular, duplicated or outdated\
    \ RTP packets (as indicated by the\n   RTP sequences number and the RTP timestamp)\
    \ are removed.  To\n   determine the exact time for decoding, factors such as\
    \ a possible\n   intentional delay to allow for proper inter-stream synchronization\n\
    \   must be factored in.\n"
- title: 7.1.  Single NAL Unit and Non-Interleaved Mode
  contents:
  - "7.1.  Single NAL Unit and Non-Interleaved Mode\n   The receiver includes a receiver\
    \ buffer to compensate for\n   transmission delay jitter.  The receiver stores\
    \ incoming packets in\n   reception order into the receiver buffer.  Packets are\
    \ decapsulated\n   in RTP sequence number order.  If a decapsulated packet is\
    \ a single\n   NAL unit packet, the NAL unit contained in the packet is passed\n\
    \   directly to the decoder.  If a decapsulated packet is an STAP-A, the\n   NAL\
    \ units contained in the packet are passed to the decoder in the\n   order in\
    \ which they are encapsulated in the packet.  If a\n   decapsulated packet is\
    \ an FU-A, all the fragments of the fragmented\n   NAL unit are concatenated and\
    \ passed to the decoder.\n      Informative note: If the decoder supports Arbitrary\
    \ Slice Order,\n      coded slices of a picture can be passed to the decoder in\
    \ any\n      order regardless of their reception and transmission order.\n"
- title: 7.2.  Interleaved Mode
  contents:
  - "7.2.  Interleaved Mode\n   The general concept behind these de-packetization\
    \ rules is to reorder\n   NAL units from transmission order to the NAL unit decoding\
    \ order.\n   The receiver includes a receiver buffer, which is used to compensate\n\
    \   for transmission delay jitter and to reorder packets from\n   transmission\
    \ order to the NAL unit decoding order.  In this section,\n   the receiver operation\
    \ is described under the assumption that there\n   is no transmission delay jitter.\
    \  To make a difference from a\n   practical receiver buffer that is also used\
    \ for compensation of\n   transmission delay jitter, the receiver buffer is here\
    \ after called\n   the deinterleaving buffer in this section.  Receivers SHOULD\
    \ also\n   prepare for transmission delay jitter; i.e., either reserve separate\n\
    \   buffers for transmission delay jitter buffering and deinterleaving\n   buffering\
    \ or use a receiver buffer for both transmission delay jitter\n   and deinterleaving.\
    \  Moreover, receivers SHOULD take transmission\n   delay jitter into account\
    \ in the buffering operation; e.g., by\n   additional initial buffering before\
    \ starting of decoding and\n   playback.\n   This section is organized as follows:\
    \ subsection 7.2.1 presents how\n   to calculate the size of the deinterleaving\
    \ buffer.  Subsection 7.2.2\n   specifies the receiver process how to organize\
    \ received NAL units to\n   the NAL unit decoding order.\n"
- title: 7.2.1.  Size of the Deinterleaving Buffer
  contents:
  - "7.2.1.  Size of the Deinterleaving Buffer\n   When SDP Offer/Answer model or\
    \ any other capability exchange\n   procedure is used in session setup, the properties\
    \ of the received\n   stream SHOULD be such that the receiver capabilities are\
    \ not\n   exceeded.  In the SDP Offer/Answer model, the receiver can indicate\n\
    \   its capabilities to allocate a deinterleaving buffer with the deint-\n   buf-cap\
    \ MIME parameter.  The sender indicates the requirement for the\n   deinterleaving\
    \ buffer size with the sprop-deint-buf-req MIME\n   parameter.  It is therefore\
    \ RECOMMENDED to set the deinterleaving\n   buffer size, in terms of number of\
    \ bytes, equal to or greater than\n   the value of sprop-deint-buf-req MIME parameter.\
    \  See section 8.1 for\n   further information on deint-buf-cap and sprop-deint-buf-req\
    \ MIME\n   parameters and section 8.2.2 for further information on their use in\n\
    \   SDP Offer/Answer model.\n   When a declarative session description is used\
    \ in session setup, the\n   sprop-deint-buf-req MIME parameter signals the requirement\
    \ for the\n   deinterleaving buffer size.  It is therefore RECOMMENDED to set\
    \ the\n   deinterleaving buffer size, in terms of number of bytes, equal to or\n\
    \   greater than the value of sprop-deint-buf-req MIME parameter.\n"
- title: 7.2.2.  Deinterleaving Process
  contents:
  - "7.2.2.  Deinterleaving Process\n   There are two buffering states in the receiver:\
    \ initial buffering and\n   buffering while playing.  Initial buffering occurs\
    \ when the RTP\n   session is initialized.  After initial buffering, decoding\
    \ and\n   playback is started, and the buffering-while-playing mode is used.\n\
    \   Regardless of the buffering state, the receiver stores incoming NAL\n   units,\
    \ in reception order, in the deinterleaving buffer as follows.\n   NAL units of\
    \ aggregation packets are stored in the deinterleaving\n   buffer individually.\
    \  The value of DON is calculated and stored for\n   all NAL units.\n   The receiver\
    \ operation is described below with the help of the\n   following functions and\
    \ constants:\n   o  Function AbsDON is specified in section 8.1.\n   o  Function\
    \ don_diff is specified in section 5.5.\n   o  Constant N is the value of the\
    \ OPTIONAL sprop-interleaving-depth\n      MIME type parameter (see section 8.1)\
    \ incremented by 1.\n   Initial buffering lasts until one of the following conditions\
    \ is\n   fulfilled:\n   o  There are N VCL NAL units in the deinterleaving buffer.\n\
    \   o  If sprop-max-don-diff is present, don_diff(m,n) is greater than\n     \
    \ the value of sprop-max-don-diff, in which n corresponds to the NAL\n      unit\
    \ having the greatest value of AbsDON among the received NAL\n      units and\
    \ m corresponds to the NAL unit having the smallest value\n      of AbsDON among\
    \ the received NAL units.\n   o  Initial buffering has lasted for the duration\
    \ equal to or greater\n      than the value of the OPTIONAL sprop-init-buf-time\
    \ MIME parameter.\n   The NAL units to be removed from the deinterleaving buffer\
    \ are\n   determined as follows:\n   o  If the deinterleaving buffer contains\
    \ at least N VCL NAL units,\n      NAL units are removed from the deinterleaving\
    \ buffer and passed to\n      the decoder in the order specified below until the\
    \ buffer contains\n      N-1 VCL NAL units.\n   o  If sprop-max-don-diff is present,\
    \ all NAL units m for which\n      don_diff(m,n) is greater than sprop-max-don-diff\
    \ are removed from\n      the deinterleaving buffer and passed to the decoder\
    \ in the order\n      specified below.  Herein, n corresponds to the NAL unit\
    \ having the\n      greatest value of AbsDON among the received NAL units.\n \
    \  The order in which NAL units are passed to the decoder is specified\n   as\
    \ follows:\n   o  Let PDON be a variable that is initialized to 0 at the beginning\n\
    \      of the an RTP session.\n   o  For each NAL unit associated with a value\
    \ of DON, a DON distance\n      is calculated as follows.  If the value of DON\
    \ of the NAL unit is\n      larger than the value of PDON, the DON distance is\
    \ equal to DON -\n      PDON.  Otherwise, the DON distance is equal to 65535 -\
    \ PDON + DON\n      + 1.\n   o  NAL units are delivered to the decoder in ascending\
    \ order of DON\n      distance.  If several NAL units share the same value of\
    \ DON\n      distance, they can be passed to the decoder in any order.\n   o \
    \ When a desired number of NAL units have been passed to the\n      decoder, the\
    \ value of PDON is set to the value of DON for the last\n      NAL unit passed\
    \ to the decoder.\n"
- title: 7.3.  Additional De-Packetization Guidelines
  contents:
  - "7.3.  Additional De-Packetization Guidelines\n   The following additional de-packetization\
    \ rules may be used to\n   implement an operational H.264 de-packetizer:\n   o\
    \  Intelligent RTP receivers (e.g., in gateways) may identify lost\n      coded\
    \ slice data partitions A (DPAs).  If a lost DPA is found, a\n      gateway may\
    \ decide not to send the corresponding coded slice data\n      partitions B and\
    \ C, as their information is meaningless for H.264\n      decoders.  In this way\
    \ a MANE can reduce network load by\n      discarding useless packets without\
    \ parsing a complex bitstream.\n   o  Intelligent RTP receivers (e.g., in gateways)\
    \ may identify lost\n      FUs.  If a lost FU is found, a gateway may decide not\
    \ to send the\n      following FUs of the same fragmented NAL unit, as their\n\
    \      information is meaningless for H.264 decoders.  In this way a MANE\n  \
    \    can reduce network load by discarding useless packets without\n      parsing\
    \ a complex bitstream.\n   o  Intelligent receivers having to discard packets\
    \ or NALUs should\n      first discard all packets/NALUs in which the value of\
    \ the NRI\n      field of the NAL unit type octet is equal to 0.  This will\n\
    \      minimize the impact on user experience and keep the reference\n      pictures\
    \ intact.  If more packets have to be discarded, then\n      packets with a numerically\
    \ lower NRI value should be discarded\n      before packets with a numerically\
    \ higher NRI value.  However,\n      discarding any packets with an NRI bigger\
    \ than 0 very likely leads\n      to decoder drift and SHOULD be avoided.\n"
- title: 8.  Payload Format Parameters
  contents:
  - "8.  Payload Format Parameters\n   This section specifies the parameters that\
    \ MAY be used to select\n   optional features of the payload format and certain\
    \ features of the\n   bitstream.  The parameters are specified here as part of\
    \ the MIME\n   subtype registration for the ITU-T H.264 | ISO/IEC 14496-10 codec.\
    \  A\n   mapping of the parameters into the Session Description Protocol (SDP)\n\
    \   [5] is also provided for applications that use SDP.  Equivalent\n   parameters\
    \ could be defined elsewhere for use with control protocols\n   that do not use\
    \ MIME or SDP.\n   Some parameters provide a receiver with the properties of the\
    \ stream\n   that will be sent.  The name of all these parameters starts with\n\
    \   \"sprop\" for stream properties.  Some of these \"sprop\" parameters are\n\
    \   limited by other payload or codec configuration parameters.  For\n   example,\
    \ the sprop-parameter-sets parameter is constrained by the\n   profile-level-id\
    \ parameter.  The media sender selects all \"sprop\"\n   parameters rather than\
    \ the receiver.  This uncommon characteristic of\n   the \"sprop\" parameters\
    \ may not be compatible with some signaling\n   protocol concepts, in which case\
    \ the use of these parameters SHOULD\n   be avoided.\n"
- title: 8.1.  MIME Registration
  contents:
  - "8.1.  MIME Registration\n   The MIME subtype for the ITU-T H.264 | ISO/IEC 14496-10\
    \ codec is\n   allocated from the IETF tree.\n   The receiver MUST ignore any\
    \ unspecified parameter.\n   Media Type name:     video\n   Media subtype name:\
    \  H264\n   Required parameters: none\n   OPTIONAL parameters:\n       profile-level-id:\n\
    \                        A base16 [6] (hexadecimal) representation of\n      \
    \                  the following three bytes in the sequence\n               \
    \         parameter set NAL unit specified in [1]: 1)\n                      \
    \  profile_idc, 2) a byte herein referred to as\n                        profile-iop,\
    \ composed of the values of\n                        constraint_set0_flag, constraint_set1_flag,\n\
    \                        constraint_set2_flag, and reserved_zero_5bits\n     \
    \                   in bit-significance order, starting from the\n           \
    \             most significant bit, and 3) level_idc.  Note\n                \
    \        that reserved_zero_5bits is required to be\n                        equal\
    \ to 0 in [1], but other values for it may\n                        be specified\
    \ in the future by ITU-T or ISO/IEC.\n                        If the profile-level-id\
    \ parameter is used to\n                        indicate properties of a NAL unit\
    \ stream, it\n                        indicates the profile and level that a decoder\n\
    \                        has to support in order to comply with [1] when\n   \
    \                     it decodes the stream.  The profile-iop byte\n         \
    \               indicates whether the NAL unit stream also\n                 \
    \       obeys all constraints of the indicated profiles\n                    \
    \    as follows.  If bit 7 (the most significant\n                        bit),\
    \ bit 6, or bit 5 of profile-iop is equal\n                        to 1, all constraints\
    \ of the Baseline profile,\n                        the Main profile, or the Extended\
    \ profile,\n                        respectively, are obeyed in the NAL unit\n\
    \                        stream.\n                        If the profile-level-id\
    \ parameter is used for\n                        capability exchange or session\
    \ setup procedure,\n                        it indicates the profile that the\
    \ codec\n                        supports and the highest level\n            \
    \            supported for the signaled profile.  The\n                      \
    \  profile-iop byte indicates whether the codec\n                        has additional\
    \ limitations whereby only the\n                        common subset of the algorithmic\
    \ features and\n                        limitations of the profiles signaled with\
    \ the\n                        profile-iop byte and of the profile indicated\n\
    \                        by profile_idc is supported by the codec.  For\n    \
    \                    example, if a codec supports only the common\n          \
    \              subset of the coding tools of the Baseline\n                  \
    \      profile and the Main profile at level 2.1 and\n                       \
    \ below, the profile-level-id becomes 42E015, in\n                        which\
    \ 42 stands for the Baseline profile, E0\n                        indicates that\
    \ only the common subset for all\n                        profiles is supported,\
    \ and 15 indicates level\n                        2.1.\n                     \
    \       Informative note: Capability exchange and\n                          \
    \  session setup procedures should provide\n                            means\
    \ to list the capabilities for each\n                            supported codec\
    \ profile separately.  For\n                            example, the one-of-N\
    \ codec selection\n                            procedure of the SDP Offer/Answer\
    \ model can\n                            be used (section 10.2 of [7]).\n    \
    \                    If no profile-level-id is present, the Baseline\n       \
    \                 Profile without additional constraints at Level\n          \
    \              1 MUST be implied.\n       max-mbps, max-fs, max-cpb, max-dpb,\
    \ and max-br:\n                        These parameters MAY be used to signal\
    \ the\n                        capabilities of a receiver implementation.\n  \
    \                      These parameters MUST NOT be used for any other\n     \
    \                   purpose.  The profile-level-id parameter MUST\n          \
    \              be present in the same receiver capability\n                  \
    \      description that contains any of these\n                        parameters.\
    \  The level conveyed in the value of\n                        the profile-level-id\
    \ parameter MUST be such\n                        that the receiver is fully capable\
    \ of\n                        supporting.  max-mbps, max-fs, max-cpb, max-\n \
    \                       dpb, and max-br MAY be used to indicate\n            \
    \            capabilities of the receiver that extend the\n                  \
    \      required capabilities of the signaled level, as\n                     \
    \   specified below.\n                        When more than one parameter from\
    \ the set (max-\n                        mbps, max-fs, max-cpb, max-dpb, max-br)\
    \ is\n                        present, the receiver MUST support all signaled\n\
    \                        capabilities simultaneously.  For example, if\n     \
    \                   both max-mbps and max-br are present, the\n              \
    \          signaled level with the extension of both the\n                   \
    \     frame rate and bit rate is supported.  That is,\n                      \
    \  the receiver is able to decode NAL unit\n                        streams in\
    \ which the macroblock processing rate\n                        is up to max-mbps\
    \ (inclusive), the bit rate is\n                        up to max-br (inclusive),\
    \ the coded picture\n                        buffer size is derived as specified\
    \ in the\n                        semantics of the max-br parameter below, and\n\
    \                        other properties comply with the level\n            \
    \            specified in the value of the profile-level-id\n                \
    \        parameter.\n                        A receiver MUST NOT signal values\
    \ of max-\n                        mbps, max-fs, max-cpb, max-dpb, and max-br\
    \ that\n                        meet the requirements of a higher level,\n   \
    \                     referred to as level A herein, compared to the\n       \
    \                 level specified in the value of the profile-\n             \
    \           level-id parameter, if the receiver can support\n                \
    \        all the properties of level A.\n                            Informative\
    \ note: When the OPTIONAL MIME\n                            type parameters are\
    \ used to signal the\n                            properties of a NAL unit stream,\
    \ max-mbps,\n                            max-fs, max-cpb, max-dpb, and max-br\
    \ are\n                            not present, and the value of profile-\n  \
    \                          level-id must always be such that the NAL\n       \
    \                     unit stream complies fully with the\n                  \
    \          specified profile and level.\n       max-mbps:        The value of\
    \ max-mbps is an integer indicating\n                        the maximum macroblock\
    \ processing rate in units\n                        of macroblocks per second.\
    \  The max-mbps\n                        parameter signals that the receiver is\
    \ capable\n                        of decoding video at a higher rate than is\n\
    \                        required by the signaled level conveyed in the\n    \
    \                    value of the profile-level-id parameter.  When\n        \
    \                max-mbps is signaled, the receiver MUST be able\n           \
    \             to decode NAL unit streams that conform to the\n               \
    \         signaled level, with the exception that the\n                      \
    \  MaxMBPS value in Table A-1 of [1] for the\n                        signaled\
    \ level is replaced with the value of\n                        max-mbps.  The\
    \ value of max-mbps MUST be\n                        greater than or equal to\
    \ the value of MaxMBPS\n                        for the level given in Table A-1\
    \ of [1].\n                        Senders MAY use this knowledge to send pictures\n\
    \                        of a given size at a higher picture rate than\n     \
    \                   is indicated in the signaled level.\n       max-fs:      \
    \    The value of max-fs is an integer indicating\n                        the\
    \ maximum frame size in units of macroblocks.\n                        The max-fs\
    \ parameter signals that the receiver\n                        is capable of decoding\
    \ larger picture sizes\n                        than are required by the signaled\
    \ level conveyed\n                        in the value of the profile-level-id\
    \ parameter.\n                        When max-fs is signaled, the receiver MUST\
    \ be\n                        able to decode NAL unit streams that conform to\n\
    \                        the signaled level, with the exception that the\n   \
    \                     MaxFS value in Table A-1 of [1] for the\n              \
    \          signaled level is replaced with the value of\n                    \
    \    max-fs.  The value of max-fs MUST be greater\n                        than\
    \ or equal to the value of MaxFS for the\n                        level given\
    \ in Table A-1 of [1].  Senders MAY\n                        use this knowledge\
    \ to send larger pictures at a\n                        proportionally lower frame\
    \ rate than is\n                        indicated in the signaled level.\n   \
    \    max-cpb          The value of max-cpb is an integer indicating\n        \
    \                the maximum coded picture buffer size in units\n            \
    \            of 1000 bits for the VCL HRD parameters (see\n                  \
    \      A.3.1 item i of [1]) and in units of 1200 bits\n                      \
    \  for the NAL HRD parameters (see A.3.1 item j of\n                        [1]).\
    \  The max-cpb parameter signals that the\n                        receiver has\
    \ more memory than the minimum\n                        amount of coded picture\
    \ buffer memory required\n                        by the signaled level conveyed\
    \ in the value of\n                        the profile-level-id parameter.  When\
    \ max-cpb\n                        is signaled, the receiver MUST be able to\n\
    \                        decode NAL unit streams that conform to the\n       \
    \                 signaled level, with the exception that the\n              \
    \          MaxCPB value in Table A-1 of [1] for the\n                        signaled\
    \ level is replaced with the value of\n                        max-cpb.  The value\
    \ of max-cpb MUST be greater\n                        than or equal to the value\
    \ of MaxCPB for the\n                        level given in Table A-1 of [1].\
    \  Senders MAY\n                        use this knowledge to construct coded\
    \ video\n                        streams with greater variation of bit rate\n\
    \                        than can be achieved with the\n                     \
    \   MaxCPB value in Table A-1 of [1].\n                            Informative\
    \ note: The coded picture buffer\n                            is used in the hypothetical\
    \ reference\n                            decoder (Annex C) of H.264.  The use\
    \ of the\n                            hypothetical reference decoder is\n    \
    \                        recommended in H.264 encoders to verify\n           \
    \                 that the produced bitstream conforms to the\n              \
    \              standard and to control the output bitrate.\n                 \
    \           Thus, the coded picture buffer is\n                            conceptually\
    \ independent of any other\n                            potential buffers in the\
    \ receiver,\n                            including de-interleaving and de-jitter\n\
    \                            buffers.  The coded picture buffer need not\n   \
    \                         be implemented in decoders as specified in\n       \
    \                     Annex C of H.264, but rather standard-\n               \
    \             compliant decoders can have any buffering\n                    \
    \        arrangements provided that they can decode\n                        \
    \    standard-compliant bitstreams.  Thus, in\n                            practice,\
    \ the input buffer for video\n                            decoder can be integrated\
    \ with de-\n                            interleaving and de-jitter buffers of\
    \ the\n                            receiver.\n       max-dpb:         The value\
    \ of max-dpb is an integer indicating\n                        the maximum decoded\
    \ picture buffer size in\n                        units of 1024 bytes.  The max-dpb\
    \ parameter\n                        signals that the receiver has more memory\
    \ than\n                        the minimum amount of decoded picture buffer\n\
    \                        memory required by the signaled level conveyed\n    \
    \                    in the value of the profile-level-id parameter.\n       \
    \                 When max-dpb is signaled, the receiver MUST be\n           \
    \             able to decode NAL unit streams that conform to\n              \
    \          the signaled level, with the exception that the\n                 \
    \       MaxDPB value in Table A-1 of [1] for the\n                        signaled\
    \ level is replaced with the value of\n                        max-dpb.  Consequently,\
    \ a receiver that signals\n                        max-dpb MUST be capable of\
    \ storing the\n                        following number of decoded frames,\n \
    \                       complementary field pairs, and non-paired\n          \
    \              fields in its decoded picture buffer:\n                       \
    \ Min(1024 * max-dpb / ( PicWidthInMbs *\n                        FrameHeightInMbs\
    \ * 256 * ChromaFormatFactor ),\n                        16)\n               \
    \         PicWidthInMbs, FrameHeightInMbs, and\n                        ChromaFormatFactor\
    \ are defined in [1].\n                        The value of max-dpb MUST be greater\
    \ than or\n                        equal to the value of MaxDPB for the level\n\
    \                        given in Table A-1 of [1].  Senders MAY use\n       \
    \                 this knowledge to construct coded video streams\n          \
    \              with improved compression.\n                            Informative\
    \ note: This parameter was added\n                            primarily to complement\
    \ a similar codepoint\n                            in the ITU-T Recommendation\
    \ H.245, so as to\n                            facilitate signaling gateway designs.\
    \  The\n                            decoded picture buffer stores reconstructed\n\
    \                            samples and is a property of the video\n        \
    \                    decoder only.  There is no relationship\n               \
    \             between the size of the decoded picture\n                      \
    \      buffer and the buffers used in RTP,\n                            especially\
    \ de-interleaving and de-jitter\n                            buffers.\n      \
    \ max-br:          The value of max-br is an integer indicating\n            \
    \            the maximum video bit rate in units of 1000\n                   \
    \     bits per second for the VCL HRD parameters (see\n                      \
    \  A.3.1 item i of [1]) and in units of 1200 bits\n                        per\
    \ second for the NAL HRD parameters (see\n                        A.3.1 item j\
    \ of [1]).\n                        The max-br parameter signals that the video\n\
    \                        decoder of the receiver is capable of decoding\n    \
    \                    video at a higher bit rate than is required by\n        \
    \                the signaled level conveyed in the value of the\n           \
    \             profile-level-id parameter.  The value of max-\n               \
    \         br MUST be greater than or equal to the value\n                    \
    \    of MaxBR for the level given in Table A-1 of\n                        [1].\n\
    \                        When max-br is signaled, the video codec of the\n   \
    \                     receiver MUST be able to decode NAL unit\n             \
    \           streams that conform to the signaled level,\n                    \
    \    conveyed in the profile-level-id parameter,\n                        with\
    \ the following exceptions in the limits\n                        specified by\
    \ the level:\n                        o The value of max-br replaces the MaxBR\
    \ value\n                          of the signaled level (in Table A-1 of [1]).\n\
    \                        o When the max-cpb parameter is not present,\n      \
    \                    the result of the following formula replaces\n          \
    \                the value of MaxCPB in Table A-1 of [1]:\n                  \
    \        (MaxCPB of the signaled level) * max-br /\n                         \
    \ (MaxBR of the signaled level).\n                        For example, if a receiver\
    \ signals capability\n                        for Level 1.2 with max-br equal\
    \ to 1550, this\n                        indicates a maximum video bitrate of\
    \ 1550\n                        kbits/sec for VCL HRD parameters, a maximum\n\
    \                        video bitrate of 1860 kbits/sec for NAL HRD\n       \
    \                 parameters, and a CPB size of 4036458 bits\n               \
    \         (1550000 / 384000 * 1000 * 1000).\n                        The value\
    \ of max-br MUST be greater than or\n                        equal to the value\
    \ MaxBR for the signaled level\n                        given in Table A-1 of\
    \ [1].\n                        Senders MAY use this knowledge to send higher\n\
    \                        bitrate video as allowed in the level\n             \
    \           definition of Annex A of H.264, to achieve\n                     \
    \   improved video quality.\n                            Informative note: This\
    \ parameter was added\n                            primarily to complement a similar\
    \ codepoint\n                            in the ITU-T Recommendation H.245, so\
    \ as to\n                            facilitate signaling gateway designs.  No\n\
    \                            assumption can be made from the value of\n      \
    \                      this parameter that the network is capable\n          \
    \                  of handling such bit rates at any given\n                 \
    \           time.  In particular, no conclusion can be\n                     \
    \       drawn that the signaled bit rate is\n                            possible\
    \ under congestion control\n                            constraints.\n      redundant-pic-cap:\n\
    \                        This parameter signals the capabilities of a\n      \
    \                  receiver implementation.  When equal to 0, the\n          \
    \              parameter indicates that the receiver makes no\n              \
    \          attempt to use redundant coded pictures to\n                      \
    \  correct incorrectly decoded primary coded\n                        pictures.\
    \  When equal to 0, the receiver is not\n                        capable of using\
    \ redundant slices; therefore, a\n                        sender SHOULD avoid\
    \ sending redundant slices to\n                        save bandwidth.  When equal\
    \ to 1, the receiver\n                        is capable of decoding any such\
    \ redundant slice\n                        that covers a corrupted area in a primary\n\
    \                        decoded picture (at least partly), and therefore\n  \
    \                      a sender MAY send redundant slices.  When the\n       \
    \                 parameter is not present, then a value of 0\n              \
    \          MUST be used for redundant-pic-cap.  When\n                       \
    \ present, the value of redundant-pic-cap MUST be\n                        either\
    \ 0 or 1.\n                        When the profile-level-id parameter is present\n\
    \                        in the same capability signaling as the\n           \
    \             redundant-pic-cap parameter, and the profile\n                 \
    \       indicated in profile-level-id is such that it\n                      \
    \  disallows the use of redundant coded pictures\n                        (e.g.,\
    \ Main Profile), the value of redundant-\n                        pic-cap MUST\
    \ be equal to 0.  When a receiver\n                        indicates redundant-pic-cap\
    \ equal to 0, the\n                        received stream SHOULD NOT contain\
    \ redundant\n                        coded pictures.\n                       \
    \     Informative note: Even if redundant-pic-cap\n                          \
    \  is equal to 0, the decoder is able to\n                            ignore redundant\
    \ codec pictures provided\n                            that the decoder supports\
    \ such a profile\n                            (Baseline, Extended) in which redundant\n\
    \                            coded pictures are allowed.\n                   \
    \         Informative note: Even if redundant-pic-cap\n                      \
    \      is equal to 1, the receiver may also choose\n                         \
    \   other error concealment strategies to\n                            replace\
    \ or complement decoding of redundant\n                            slices.\n \
    \      sprop-parameter-sets:\n                        This parameter MAY be used\
    \ to convey\n                        any sequence and picture parameter set NAL\n\
    \                        units (herein referred to as the initial\n          \
    \              parameter set NAL units) that MUST precede any\n              \
    \          other NAL units in decoding order.  The\n                        parameter\
    \ MUST NOT be used to indicate codec\n                        capability in any\
    \ capability exchange\n                        procedure.  The value of the parameter\
    \ is the\n                        base64 [6] representation of the initial\n \
    \                       parameter set NAL units as specified in\n            \
    \            sections 7.3.2.1 and 7.3.2.2 of [1].  The\n                     \
    \   parameter sets are conveyed in decoding order,\n                        and\
    \ no framing of the parameter set NAL units\n                        takes place.\
    \  A comma is used to separate any\n                        pair of parameter\
    \ sets in the list.  Note that\n                        the number of bytes in\
    \ a parameter set NAL unit\n                        is typically less than 10,\
    \ but a picture\n                        parameter set NAL unit can contain several\n\
    \                        hundreds of bytes.\n                           Informative\
    \ note: When several payload\n                           types are offered in\
    \ the SDP Offer/Answer\n                           model, each with its own sprop-parameter-\n\
    \                           sets parameter, then the receiver cannot\n       \
    \                    assume that those parameter sets do not use\n           \
    \                conflicting storage locations (i.e.,\n                      \
    \     identical values of parameter set\n                           identifiers).\
    \  Therefore, a receiver should\n                           double-buffer all\
    \ sprop-parameter-sets and\n                           make them available to\
    \ the decoder instance\n                           that decodes a certain payload\
    \ type.\n       parameter-add:   This parameter MAY be used to signal whether\n\
    \                        the receiver of this parameter is allowed to\n      \
    \                  add parameter sets in its signaling response\n            \
    \            using the sprop-parameter-sets MIME parameter.\n                \
    \        The value of this parameter is either 0 or 1.\n                     \
    \   0 is equal to false; i.e., it is not allowed to\n                        add\
    \ parameter sets.  1 is equal to true; i.e.,\n                        it is allowed\
    \ to add parameter sets.  If the\n                        parameter is not present,\
    \ its value MUST be 1.\n       packetization-mode:\n                        This\
    \ parameter signals the properties of an\n                        RTP payload\
    \ type or the capabilities of a\n                        receiver implementation.\
    \  Only a single\n                        configuration point can be indicated;\
    \ thus,\n                        when capabilities to support more than one\n\
    \                        packetization-mode are declared, multiple\n         \
    \               configuration points (RTP payload types) must\n              \
    \          be used.\n                        When the value of packetization-mode\
    \ is equal\n                        to 0 or packetization-mode is not present,\
    \ the\n                        single NAL mode, as defined in section 6.2 of\n\
    \                        RFC 3984, MUST be used.  This mode is in use in\n   \
    \                     standards using ITU-T Recommendation H.241 [15]\n      \
    \                  (see section 12.1).  When the value of\n                  \
    \      packetization-mode is equal to 1, the non-\n                        interleaved\
    \ mode, as defined in section 6.3 of\n                        RFC 3984, MUST be\
    \ used.  When the value of\n                        packetization-mode is equal\
    \ to 2, the\n                        interleaved mode, as defined in section 6.4\
    \ of\n                        RFC 3984, MUST be used.  The value of\n        \
    \                packetization mode MUST be an integer in the\n              \
    \          range of 0 to 2, inclusive.\n       sprop-interleaving-depth:\n   \
    \                     This parameter MUST NOT be present\n                   \
    \     when packetization-mode is not present or the\n                        value\
    \ of packetization-mode is equal to 0 or 1.\n                        This parameter\
    \ MUST be present when the value\n                        of packetization-mode\
    \ is equal to 2.\n                        This parameter signals the properties\
    \ of a NAL\n                        unit stream.  It specifies the maximum number\n\
    \                        of VCL NAL units that precede any VCL NAL unit\n    \
    \                    in the NAL unit stream in transmission order\n          \
    \              and follow the VCL NAL unit in decoding order.\n              \
    \          Consequently, it is guaranteed that receivers\n                   \
    \     can reconstruct NAL unit decoding order when\n                        the\
    \ buffer size for NAL unit decoding order\n                        recovery is\
    \ at least the value of sprop-\n                        interleaving-depth + 1\
    \ in terms of VCL NAL\n                        units.\n                      \
    \  The value of sprop-interleaving-depth MUST be\n                        an integer\
    \ in the range of 0 to 32767,\n                        inclusive.\n       sprop-deint-buf-req:\n\
    \                        This parameter MUST NOT be present when\n           \
    \             packetization-mode is not present or the value\n               \
    \         of packetization-mode is equal to 0 or 1.  It\n                    \
    \    MUST be present when the value of\n                        packetization-mode\
    \ is equal to 2.\n                        sprop-deint-buf-req signals the required\
    \ size\n                        of the deinterleaving buffer for the NAL unit\n\
    \                        stream.  The value of the parameter MUST be\n       \
    \                 greater than or equal to the maximum buffer\n              \
    \          occupancy (in units of bytes) required in such\n                  \
    \      a deinterleaving buffer that is specified in\n                        section\
    \ 7.2 of RFC 3984.  It is guaranteed that\n                        receivers can\
    \ perform the deinterleaving of\n                        interleaved NAL units\
    \ into NAL unit decoding\n                        order, when the deinterleaving\
    \ buffer size is\n                        at least the value of sprop-deint-buf-req\
    \ in\n                        terms of bytes.\n                        The value\
    \ of sprop-deint-buf-req MUST be an\n                        integer in the range\
    \ of 0 to 4294967295,\n                        inclusive.\n                  \
    \          Informative note: sprop-deint-buf-req\n                           \
    \ indicates the required size of the\n                            deinterleaving\
    \ buffer only.  When network\n                            jitter can occur, an\
    \ appropriately sized\n                            jitter buffer has to be provisioned\
    \ for\n                            as well.\n       deint-buf-cap:   This parameter\
    \ signals the capabilities of a\n                        receiver implementation\
    \ and indicates the\n                        amount of deinterleaving buffer space\
    \ in units\n                        of bytes that the receiver has available for\n\
    \                        reconstructing the NAL unit decoding order.  A\n    \
    \                    receiver is able to handle any stream for which\n       \
    \                 the value of the sprop-deint-buf-req parameter\n           \
    \             is smaller than or equal to this parameter.\n                  \
    \      If the parameter is not present, then a value\n                       \
    \ of 0 MUST be used for deint-buf-cap.  The value\n                        of\
    \ deint-buf-cap MUST be an integer in the\n                        range of 0\
    \ to 4294967295, inclusive.\n                            Informative note: deint-buf-cap\
    \ indicates\n                            the maximum possible size of the\n  \
    \                          deinterleaving buffer of the receiver only.\n     \
    \                       When network jitter can occur, an\n                  \
    \          appropriately sized jitter buffer has to\n                        \
    \    be provisioned for as well.\n       sprop-init-buf-time:\n              \
    \          This parameter MAY be used to signal the\n                        properties\
    \ of a NAL unit stream.  The parameter\n                        MUST NOT be present,\
    \ if the value of\n                        packetization-mode is equal to 0 or\
    \ 1.\n                        The parameter signals the initial buffering\n  \
    \                      time that a receiver MUST buffer before\n             \
    \           starting decoding to recover the NAL unit\n                      \
    \  decoding order from the transmission order.\n                        The parameter\
    \ is the maximum value of\n                        (transmission time of a NAL\
    \ unit - decoding\n                        time of the NAL unit), assuming reliable\
    \ and\n                        instantaneous transmission, the same\n        \
    \                timeline for transmission and decoding, and\n               \
    \         that decoding starts when the first packet\n                       \
    \ arrives.\n                        An example of specifying the value of sprop-\n\
    \                        init-buf-time follows.  A NAL unit stream is\n      \
    \                  sent in the following interleaved order, in\n             \
    \           which the value corresponds to the decoding\n                    \
    \    time and the transmission order is from left to\n                       \
    \ right:\n                        0  2  1  3  5  4  6  8  7 ...\n            \
    \            Assuming a steady transmission rate of NAL\n                    \
    \    units, the transmission times are:\n                        0  1  2  3  4\
    \  5  6  7  8 ...\n                        Subtracting the decoding time from\
    \ the\n                        transmission time column-wise results in the\n\
    \                        following series:\n                        0 -1  1  0\
    \ -1  1  0 -1  1 ...\n                        Thus, in terms of intervals of NAL\
    \ unit\n                        transmission times, the value of\n           \
    \             sprop-init-buf-time in this\n                        example is\
    \ 1.\n                        The parameter is coded as a non-negative base10\n\
    \                        integer representation in clock ticks of a 90-\n    \
    \                    kHz clock.  If the parameter is not present,\n          \
    \              then no initial buffering time value is\n                     \
    \   defined.  Otherwise the value of sprop-init-\n                        buf-time\
    \ MUST be an integer in the range of 0\n                        to 4294967295,\
    \ inclusive.\n                        In addition to the signaled sprop-init-buf-\n\
    \                        time, receivers SHOULD take into account the\n      \
    \                  transmission delay jitter buffering, including\n          \
    \              buffering for the delay jitter caused by\n                    \
    \    mixers, translators, gateways, proxies,\n                        traffic-shapers,\
    \ and other network elements.\n       sprop-max-don-diff:\n                  \
    \      This parameter MAY be used to signal the\n                        properties\
    \ of a NAL unit stream.  It MUST NOT\n                        be used to signal\
    \ transmitter or receiver or\n                        codec capabilities.  The\
    \ parameter MUST NOT be\n                        present if the value of packetization-mode\
    \ is\n                        equal to 0 or 1.  sprop-max-don-diff is an\n   \
    \                     integer in the range of 0 to 32767, inclusive.\n       \
    \                 If sprop-max-don-diff is not present, the value\n          \
    \              of the parameter is unspecified.  sprop-max-\n                \
    \        don-diff is calculated as follows:\n                        sprop-max-don-diff\
    \ = max{AbsDON(i) -\n                        AbsDON(j)},\n                   \
    \     for any i and any j>i,\n                        where i and j indicate the\
    \ index of the NAL\n                        unit in the transmission order and\
    \ AbsDON\n                        denotes a decoding order number of the NAL\n\
    \                        unit that does not wrap around to 0 after\n         \
    \               65535.  In other words, AbsDON is calculated as\n            \
    \            follows: Let m and n be consecutive NAL units\n                 \
    \       in transmission order.  For the very first NAL\n                     \
    \   unit in transmission order (whose index is 0),\n                        AbsDON(0)\
    \ = DON(0).  For other NAL units,\n                        AbsDON is calculated\
    \ as follows:\n                        If DON(m) == DON(n), AbsDON(n) = AbsDON(m)\n\
    \                        If (DON(m) < DON(n) and DON(n) - DON(m) <\n         \
    \               32768),\n                        AbsDON(n) = AbsDON(m) + DON(n)\
    \ - DON(m)\n                        If (DON(m) > DON(n) and DON(m) - DON(n) >=\n\
    \                        32768),\n                        AbsDON(n) = AbsDON(m)\
    \ + 65536 - DON(m) + DON(n)\n                        If (DON(m) < DON(n) and DON(n)\
    \ - DON(m) >=\n                        32768),\n                        AbsDON(n)\
    \ = AbsDON(m) - (DON(m) + 65536 -\n                        DON(n))\n         \
    \               If (DON(m) > DON(n) and DON(m) - DON(n) <\n                  \
    \      32768),\n                        AbsDON(n) = AbsDON(m) - (DON(m) - DON(n))\n\
    \                        where DON(i) is the decoding order number of\n      \
    \                  the NAL unit having index i in the transmission\n         \
    \               order.  The decoding order number is specified\n             \
    \           in section 5.5 of RFC 3984.\n                            Informative\
    \ note: Receivers may use sprop-\n                            max-don-diff to\
    \ trigger which NAL units in\n                            the receiver buffer\
    \ can be passed to the\n                            decoder.\n     max-rcmd-nalu-size:\n\
    \                        This parameter MAY be used to signal the\n          \
    \              capabilities of a receiver.  The parameter MUST\n             \
    \           NOT be used for any other purposes.  The value\n                 \
    \       of the parameter indicates the largest NALU\n                        size\
    \ in bytes that the receiver can handle\n                        efficiently.\
    \  The parameter value is a\n                        recommendation, not a strict\
    \ upper boundary.\n                        The sender MAY create larger NALUs\
    \ but must be\n                        aware that the handling of these may come\
    \ at a\n                        higher cost than NALUs conforming to the\n   \
    \                     limitation.\n                        The value of max-rcmd-nalu-size\
    \ MUST be an\n                        integer in the range of 0 to 4294967295,\n\
    \                        inclusive.  If this parameter is not specified,\n   \
    \                     no known limitation to the NALU size exists.\n         \
    \               Senders still have to consider the MTU size\n                \
    \        available between the sender and the receiver\n                     \
    \   and SHOULD run MTU discovery for this purpose.\n                        This\
    \ parameter is motivated by, for example, an\n                        IP to H.223\
    \ video telephony gateway, where\n                        NALUs smaller than the\
    \ H.223 transport data\n                        unit will be more efficient. \
    \ A gateway may\n                        terminate IP; thus, MTU discovery will\
    \ normally\n                        not work beyond the gateway.\n           \
    \                 Informative note: Setting this parameter to\n              \
    \              a lower than necessary value may have a\n                     \
    \       negative impact.\n   Encoding considerations:\n                      \
    \  This type is only defined for transfer via RTP\n                        (RFC\
    \ 3550).\n                        A file format of H.264/AVC video is defined\
    \ in\n                        [29].  This definition is utilized by other\n  \
    \                      file formats, such as the 3GPP multimedia file\n      \
    \                  format (MIME type video/3gpp) [30] or the MP4\n           \
    \             file format (MIME type video/mp4).\n   Security considerations:\n\
    \                        See section 9 of RFC 3984.\n   Public specification:\n\
    \                        Please refer to RFC 3984 and its section 15.\n   Additional\
    \ information:\n                        None\n   File extensions:     none\n \
    \  Macintosh file type code: none\n   Object identifier or OID: none\n   Person\
    \ & email address to contact for further information:\n                      \
    \  stewe@stewe.org\n   Intended usage:      COMMON\n   Author:\n             \
    \           stewe@stewe.org\n   Change controller:\n                        IETF\
    \ Audio/Video Transport working group\n                        delegated from\
    \ the IESG.\n"
- title: 8.2.  SDP Parameters
  contents:
  - '8.2.  SDP Parameters

    '
- title: 8.2.1.  Mapping of MIME Parameters to SDP
  contents:
  - "8.2.1.  Mapping of MIME Parameters to SDP\n   The MIME media type video/H264\
    \ string is mapped to fields in the\n   Session Description Protocol (SDP) [5]\
    \ as follows:\n   o  The media name in the \"m=\" line of SDP MUST be video.\n\
    \   o  The encoding name in the \"a=rtpmap\" line of SDP MUST be H264 (the\n \
    \     MIME subtype).\n   o  The clock rate in the \"a=rtpmap\" line MUST be 90000.\n\
    \   o  The OPTIONAL parameters \"profile-level-id\", \"max-mbps\", \"max-fs\"\
    ,\n      \"max-cpb\", \"max-dpb\", \"max-br\", \"redundant-pic-cap\", \"sprop-\n\
    \      parameter-sets\", \"parameter-add\", \"packetization-mode\", \"sprop-\n\
    \      interleaving-depth\", \"deint-buf-cap\", \"sprop-deint-buf-req\",\n   \
    \   \"sprop-init-buf-time\", \"sprop-max-don-diff\", and \"max-rcmd-nalu-\n  \
    \    size\", when present, MUST be included in the \"a=fmtp\" line of SDP.\n \
    \     These parameters are expressed as a MIME media type string, in the\n   \
    \   form of a semicolon separated list of parameter=value pairs.\n   An example\
    \ of media representation in SDP is as follows (Baseline\n   Profile, Level 3.0,\
    \ some of the constraints of the Main profile may\n   not be obeyed):\n      m=video\
    \ 49170 RTP/AVP 98\n      a=rtpmap:98 H264/90000\n      a=fmtp:98 profile-level-id=42A01E;\n\
    \                sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==\n"
- title: 8.2.2.  Usage with the SDP Offer/Answer Model
  contents:
  - "8.2.2.  Usage with the SDP Offer/Answer Model\n   When H.264 is offered over\
    \ RTP using SDP in an Offer/Answer model [7]\n   for negotiation for unicast usage,\
    \ the following limitations and\n   rules apply:\n   o  The parameters identifying\
    \ a media format configuration for H.264\n      are \"profile-level-id\", \"packetization-mode\"\
    , and, if required by\n      \"packetization-mode\", \"sprop-deint-buf-req\".\
    \  These three\n      parameters MUST be used symmetrically; i.e., the answerer\
    \ MUST\n      either maintain all configuration parameters or remove the media\n\
    \      format (payload type) completely, if one or more of the parameter\n   \
    \   values are not supported.\n         Informative note: The requirement for\
    \ symmetric use applies\n         only for the above three parameters and not\
    \ for the other\n         stream properties and capability parameters.\n     \
    \ To simplify handling and matching of these configurations, the\n      same RTP\
    \ payload type number used in the offer SHOULD also be used\n      in the answer,\
    \ as specified in [7].  An answer MUST NOT contain a\n      payload type number\
    \ used in the offer unless the configuration\n      (\"profile-level-id\", \"\
    packetization-mode\", and, if present,\n      \"sprop-deint-buf-req\") is the\
    \ same as in the offer.\n         Informative note: An offerer, when receiving\
    \ the answer, has to\n         compare payload types not declared in the offer\
    \ based on media\n         type (i.e., video/h264) and the above three parameters\
    \ with any\n         payload types it has already declared, in order to determine\n\
    \         whether the configuration in question is new or equivalent to a\n  \
    \       configuration already offered.\n   o  The parameters \"sprop-parameter-sets\"\
    , \"sprop-deint-buf-req\",\n      \"sprop-interleaving-depth\", \"sprop-max-don-diff\"\
    , and \"sprop-\n      init-buf-time\" describe the properties of the NAL unit\
    \ stream that\n      the offerer or answerer is sending for this media format\n\
    \      configuration.  This differs from the normal usage of the\n      Offer/Answer\
    \ parameters: normally such parameters declare the\n      properties of the stream\
    \ that the offerer or the answerer is able\n      to receive.  When dealing with\
    \ H.264, the offerer assumes that the\n      answerer will be able to receive\
    \ media encoded using the\n      configuration being offered.\n         Informative\
    \ note: The above parameters apply for any stream\n         sent by the declaring\
    \ entity with the same configuration; i.e.,\n         they are dependent on their\
    \ source.  Rather then being bound to\n         the payload type, the values may\
    \ have to be applied to another\n         payload type when being sent, as they\
    \ apply for the\n         configuration.\n   o  The capability parameters (\"\
    max-mbps\", \"max-fs\", \"max-cpb\", \"max-\n      dpb\", \"max-br\", ,\"redundant-pic-cap\"\
    , \"max-rcmd-nalu-size\") MAY be\n      used to declare further capabilities.\
    \  Their interpretation\n      depends on the direction attribute.  When the direction\
    \ attribute\n      is sendonly, then the parameters describe the limits of the\
    \ RTP\n      packets and the NAL unit stream that the sender is capable of\n \
    \     producing.  When the direction attribute is sendrecv or recvonly,\n    \
    \  then the parameters describe the limitations of what the receiver\n      accepts.\n\
    \   o  As specified above, an offerer has to include the size of the\n      deinterleaving\
    \ buffer in the offer for an interleaved H.264\n      stream.  To enable the offerer\
    \ and answerer to inform each other\n      about their capabilities for deinterleaving\
    \ buffering, both\n      parties are RECOMMENDED to include \"deint-buf-cap\"\
    .  This\n      information MAY be used when the value for \"sprop-deint-buf-req\"\
    \n      is selected in a second round of offer and answer.  For\n      interleaved\
    \ streams, it is also RECOMMENDED to consider offering\n      multiple payload\
    \ types with different buffering requirements when\n      the capabilities of\
    \ the receiver are unknown.\n   o  The \"sprop-parameter-sets\" parameter is used\
    \ as described above.\n      In addition, an answerer MUST maintain all parameter\
    \ sets received\n      in the offer in its answer.  Depending on the value of\
    \ the\n      \"parameter-add\" parameter, different rules apply: If \"parameter-\n\
    \      add\" is false (0), the answer MUST NOT add any additional\n      parameter\
    \ sets.  If \"parameter-add\" is true (1), the answerer, in\n      its answer,\
    \ MAY add additional parameter sets to the \"sprop-\n      parameter-sets\" parameter.\
    \  The answerer MUST also, independent of\n      the value of \"parameter-add\"\
    , accept to receive a video stream\n      using the sprop-parameter-sets it declared\
    \ in the answer.\n         Informative note: care must be taken when parameter\
    \ sets are\n         added not to cause overwriting of already transmitted parameter\n\
    \         sets by using conflicting parameter set identifiers.\n   For streams\
    \ being delivered over multicast, the following rules apply\n   in addition:\n\
    \   o  The stream properties parameters (\"sprop-parameter-sets\", \"sprop-\n\
    \      deint-buf-req\", \"sprop-interleaving-depth\", \"sprop-max-don-diff\",\n\
    \      and \"sprop-init-buf-time\") MUST NOT be changed by the answerer.\n   \
    \   Thus, a payload type can either be accepted unaltered or removed.\n   o  The\
    \ receiver capability parameters \"max-mbps\", \"max-fs\", \"max-\n      cpb\"\
    , \"max-dpb\", \"max-br\", and \"max-rcmd-nalu-size\" MUST be\n      supported\
    \ by the answerer for all streams declared as sendrecv or\n      recvonly; otherwise,\
    \ one of the following actions MUST be\n      performed: the media format is removed,\
    \ or the session rejected.\n   o  The receiver capability parameter redundant-pic-cap\
    \ SHOULD be\n      supported by the answerer for all streams declared as sendrecv\
    \ or\n      recvonly as follows:  The answerer SHOULD NOT include redundant\n\
    \      coded pictures in the transmitted stream if the offerer indicated\n   \
    \   redundant-pic-cap equal to 0.  Otherwise (when redundant_pic_cap\n      is\
    \ equal to 1), it is beyond the scope of this memo to recommend\n      how the\
    \ answerer should use redundant coded pictures.\n   Below are the complete lists\
    \ of how the different parameters shall be\n   interpreted in the different combinations\
    \ of offer or answer and\n   direction attribute.\n   o  In offers and answers\
    \ for which \"a=sendrecv\" or no direction\n      attribute is used, or in offers\
    \ and answers for which \"a=recvonly\"\n      is used, the following interpretation\
    \ of the parameters MUST be\n      used.\n      Declaring actual configuration\
    \ or properties for receiving:\n         - profile-level-id\n         - packetization-mode\n\
    \      Declaring actual properties of the stream to be sent (applicable\n    \
    \  only when \"a=sendrecv\" or no direction attribute is used):\n         - sprop-deint-buf-req\n\
    \         - sprop-interleaving-depth\n         - sprop-parameter-sets\n      \
    \   - sprop-max-don-diff\n         - sprop-init-buf-time\n      Declaring receiver\
    \ implementation capabilities:\n         - max-mbps\n         - max-fs\n     \
    \    - max-cpb\n         - max-dpb\n         - max-br\n         - redundant-pic-cap\n\
    \         - deint-buf-cap\n         - max-rcmd-nalu-size\n      Declaring how\
    \ Offer/Answer negotiation shall be performed:\n         - parameter-add\n   o\
    \  In an offer or answer for which the direction attribute\n      \"a=sendonly\"\
    \ is included for the media stream, the following\n      interpretation of the\
    \ parameters MUST be used:\n      Declaring actual configuration and properties\
    \ of stream proposed\n      to be sent:\n         - profile-level-id\n       \
    \  - packetization-mode\n         - sprop-deint-buf-req\n         - sprop-max-don-diff\n\
    \         - sprop-init-buf-time\n         - sprop-parameter-sets\n         - sprop-interleaving-depth\n\
    \      Declaring the capabilities of the sender when it receives a\n      stream:\n\
    \         - max-mbps\n         - max-fs\n         - max-cpb\n         - max-dpb\n\
    \         - max-br\n         - redundant-pic-cap\n         - deint-buf-cap\n \
    \        - max-rcmd-nalu-size\n      Declaring how Offer/Answer negotiation shall\
    \ be performed:\n         - parameter-add\n   Furthermore, the following considerations\
    \ are necessary:\n   o  Parameters used for declaring receiver capabilities are\
    \ in general\n      downgradable; i.e., they express the upper limit for a sender's\n\
    \      possible behavior.  Thus a sender MAY select to set its encoder\n     \
    \ using only lower/lesser or equal values of these parameters.\n      \"sprop-parameter-sets\"\
    \ MUST NOT be used in a sender's declaration\n      of its capabilities, as the\
    \ limits of the values that are carried\n      inside the parameter sets are implicit\
    \ with the profile and level\n      used.\n   o  Parameters declaring a configuration\
    \ point are not downgradable,\n      with the exception of the level part of the\
    \ \"profile-level-id\"\n      parameter.  This expresses values a receiver expects\
    \ to be used\n      and must be used verbatim on the sender side.\n   o  When\
    \ a sender's capabilities are declared, and non-downgradable\n      parameters\
    \ are used in this declaration, then these parameters\n      express a configuration\
    \ that is acceptable.  In order to achieve\n      high interoperability levels,\
    \ it is often advisable to offer\n      multiple alternative configurations; e.g.,\
    \ for the packetization\n      mode.  It is impossible to offer multiple configurations\
    \ in a\n      single payload type.  Thus, when multiple configuration offers are\n\
    \      made, each offer requires its own RTP payload type associated with\n  \
    \    the offer.\n   o  A receiver SHOULD understand all MIME parameters, even\
    \ if it only\n      supports a subset of the payload format's functionality. \
    \ This\n      ensures that a receiver is capable of understanding when an offer\n\
    \      to receive media can be downgraded to what is supported by the\n      receiver\
    \ of the offer.\n   o  An answerer MAY extend the offer with additional media\
    \ format\n      configurations.  However, to enable their usage, in most cases\
    \ a\n      second offer is required from the offerer to provide the stream\n \
    \     properties parameters that the media sender will use.  This also\n     \
    \ has the effect that the offerer has to be able to receive this\n      media\
    \ format configuration, not only to send it.\n   o  If an offerer wishes to have\
    \ non-symmetric capabilities between\n      sending and receiving, the offerer\
    \ has to offer different RTP\n      sessions; i.e., different media lines declared\
    \ as \"recvonly\" and\n      \"sendonly\", respectively.  This may have further\
    \ implications on\n      the system.\n"
- title: 8.2.3.  Usage in Declarative Session Descriptions
  contents:
  - "8.2.3.  Usage in Declarative Session Descriptions\n   When H.264 over RTP is\
    \ offered with SDP in a declarative style, as in\n   RTSP [27] or SAP [28], the\
    \ following considerations are necessary.\n   o  All parameters capable of indicating\
    \ the properties of both a NAL\n      unit stream and a receiver are used to indicate\
    \ the properties of\n      a NAL unit stream.  For example, in this case, the\
    \ parameter\n      \"profile-level-id\" declares the values used by the stream,\
    \ instead\n      of the capabilities of the sender.  This results in that the\n\
    \      following interpretation of the parameters MUST be used:\n      Declaring\
    \ actual configuration or properties:\n         - profile-level-id\n         -\
    \ sprop-parameter-sets\n         - packetization-mode\n         - sprop-interleaving-depth\n\
    \         - sprop-deint-buf-req\n         - sprop-max-don-diff\n         - sprop-init-buf-time\n\
    \      Not usable:\n         - max-mbps\n         - max-fs\n         - max-cpb\n\
    \         - max-dpb\n         - max-br\n         - redundant-pic-cap\n       \
    \  - max-rcmd-nalu-size\n         - parameter-add\n         - deint-buf-cap\n\
    \   o  A receiver of the SDP is required to support all parameters and\n     \
    \ values of the parameters provided; otherwise, the receiver MUST\n      reject\
    \ (RTSP) or not participate in (SAP) the session.  It falls\n      on the creator\
    \ of the session to use values that are expected to\n      be supported by the\
    \ receiving application.\n"
- title: 8.3.  Examples
  contents:
  - "8.3.  Examples\n   A SIP Offer/Answer exchange wherein both parties are expected\
    \ to both\n   send and receive could look like the following.  Only the media\
    \ codec\n   specific parts of the SDP are shown.  Some lines are wrapped due to\n\
    \   text constraints.\n      Offerer -> Answer SDP message:\n      m=video 49170\
    \ RTP/AVP 100 99 98\n      a=rtpmap:98 H264/90000\n      a=fmtp:98 profile-level-id=42A01E;\
    \ packetization-mode=0;\n                sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==\n\
    \      a=rtpmap:99 H264/90000\n      a=fmtp:99 profile-level-id=42A01E; packetization-mode=1;\n\
    \                sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==\n      a=rtpmap:100\
    \ H264/90000\n      a=fmtp:100 profile-level-id=42A01E; packetization-mode=2;\n\
    \                 sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==;\n              \
    \   sprop-interleaving-depth=45; sprop-deint-buf-req=64000;\n                \
    \ sprop-init-buf-time=102478; deint-buf-cap=128000\n   The above offer presents\
    \ the same codec configuration in three\n   different packetization formats. \
    \ PT 98 represents single NALU mode,\n   PT 99 non-interleaved mode; PT 100 indicates\
    \ the interleaved mode.\n   In the interleaved mode case, the interleaving parameters\
    \ that the\n   offerer would use if the answer indicates support for PT 100 are\
    \ also\n   included.  In all three cases the parameter \"sprop-parameter-sets\"\
    \n   conveys the initial parameter sets that are required for the answerer\n \
    \  when receiving a stream from the offerer when this configuration\n   (profile-level-id\
    \ and packetization mode) is accepted.  Note that the\n   value for \"sprop-parameter-sets\"\
    , although identical in the example\n   above, could be different for each payload\
    \ type.\n     Answerer -> Offerer SDP message:\n     m=video 49170 RTP/AVP 100\
    \ 99 97\n     a=rtpmap:97 H264/90000\n     a=fmtp:97 profile-level-id=42A01E;\
    \ packetization-mode=0;\n               sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==,As0DEWlsIOp==,\n\
    \               KyzFGleR\n     a=rtpmap:99 H264/90000\n     a=fmtp:99 profile-level-id=42A01E;\
    \ packetization-mode=1;\n               sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==,As0DEWlsIOp==,\n\
    \               KyzFGleR; max-rcmd-nalu-size=3980\n     a=rtpmap:100 H264/90000\n\
    \     a=fmtp:100 profile-level-id=42A01E; packetization-mode=2;\n            \
    \   sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==,As0DEWlsIOp==,\n              \
    \ KyzFGleR; sprop-interleaving-depth=60;\n               sprop-deint-buf-req=86000;\
    \ sprop-init-buf-time=156320;\n               deint-buf-cap=128000; max-rcmd-nalu-size=3980\n\
    \   As the Offer/Answer negotiation covers both sending and receiving\n   streams,\
    \ an offer indicates the exact parameters for what the offerer\n   is willing\
    \ to receive, whereas the answer indicates the same for what\n   the answerer\
    \ accepts to receive.  In this case the offerer declared\n   that it is willing\
    \ to receive payload type 98.  The answerer accepts\n   this by declaring a equivalent\
    \ payload type 97; i.e., it has\n   identical values for the three parameters\
    \ \"profile-level-id\",\n   packetization-mode, and \"sprop-deint-buf-req\". \
    \ This has the\n   following implications for both the offerer and the answerer\n\
    \   concerning the parameters that declare properties.  The offerer\n   initially\
    \ declared a certain value of the \"sprop-parameter-sets\" in\n   the payload\
    \ definition for PT=98.  However, as the answerer accepted\n   this as PT=97,\
    \ the values of \"sprop-parameter-sets\" in PT=98 must now\n   be used instead\
    \ when the offerer sends PT=97.  Similarly, when the\n   answerer sends PT=98\
    \ to the offerer, it has to use the properties\n   parameters it declared in PT=97.\n\
    \   The answerer also accepts the reception of the two configurations\n   that\
    \ payload types 99 and 100 represent.  It provides the initial\n   parameter sets\
    \ for the answerer-to-offerer direction, and for\n   buffering related parameters\
    \ that it will use to send the payload\n   types.  It also provides the offerer\
    \ with its memory limit for\n   deinterleaving operations by providing a \"deint-buf-cap\"\
    \ parameter.\n   This is only useful if the offerer decides on making a second\
    \ offer,\n   where it can take the new value into account.  The \"max-rcmd-nalu-\n\
    \   size\" indicates that the answerer can efficiently process NALUs up to\n \
    \  the size of 3980 bytes.  However, there is no guarantee that the\n   network\
    \ supports this size.\n   Please note that the parameter sets in the above example\
    \ do not\n   represent a legal operation point of an H.264 codec.  The base64\n\
    \   strings are only used for illustration.\n"
- title: 8.4.  Parameter Set Considerations
  contents:
  - "8.4.  Parameter Set Considerations\n   The H.264 parameter sets are a fundamental\
    \ part of the video codec\n   and vital to its operation; see section 1.2.  Due\
    \ to their\n   characteristics and their importance for the decoding process,\
    \ lost\n   or erroneously transmitted parameter sets can hardly be concealed\n\
    \   locally at the receiver.  A reference to a corrupt parameter set has\n   normally\
    \ fatal results to the decoding process.  Corruption could\n   occur, for example,\
    \ due to the erroneous transmission or loss of a\n   parameter set data structure,\
    \ but also due to the untimely\n   transmission of a parameter set update.  Therefore,\
    \ the following\n   recommendations are provided as a guideline for the implementer\
    \ of\n   the RTP sender.\n   Parameter set NALUs can be transported using three\
    \ different\n   principles:\n   A. Using a session control protocol (out-of-band)\
    \ prior to the actual\n      RTP session.\n   B. Using a session control protocol\
    \ (out-of-band) during an ongoing\n      RTP session.\n   C. Within the RTP stream\
    \ in the payload (in-band) during an ongoing\n      RTP session.\n   It is necessary\
    \ to implement principles A and B within a session\n   control protocol.  SIP\
    \ and SDP can be used as described in the SDP\n   Offer/Answer model and in the\
    \ previous sections of this memo.  This\n   section contains guidelines on how\
    \ principles A and B must be\n   implemented within session control protocols.\
    \  It is independent of\n   the particular protocol used.  Principle C is supported\
    \ by the RTP\n   payload format defined in this specification.\n   The picture\
    \ and sequence parameter set NALUs SHOULD NOT be\n   transmitted in the RTP payload\
    \ unless reliable transport is provided\n   for RTP, as a loss of a parameter\
    \ set of either type will likely\n   prevent decoding of a considerable portion\
    \ of the corresponding RTP\n   stream.  Thus, the transmission of parameter sets\
    \ using a reliable\n   session control protocol (i.e., usage of principle A or\
    \ B above) is\n   RECOMMENDED.\n   In the rest of the section it is assumed that\
    \ out-of-band signaling\n   provides reliable transport of parameter set NALUs\
    \ and that in-band\n   transport does not.  If in-band signaling of parameter\
    \ sets is used,\n   the sender SHOULD take the error characteristics into account\
    \ and use\n   mechanisms to provide a high probability for delivering the parameter\n\
    \   sets correctly.  Mechanisms that increase the probability for a\n   correct\
    \ reception include packet repetition, FEC, and retransmission.\n   The use of\
    \ an unreliable, out-of-band control protocol has similar\n   disadvantages as\
    \ the in-band signaling (possible loss) and, in\n   addition, may also lead to\
    \ difficulties in the synchronization (see\n   below).  Therefore, it is NOT RECOMMENDED.\n\
    \   Parameter sets MAY be added or updated during the lifetime of a\n   session\
    \ using principles B and C.  It is required that parameter sets\n   are present\
    \ at the decoder prior to the NAL units that refer to them.\n   Updating or adding\
    \ of parameter sets can result in further problems,\n   and therefore the following\
    \ recommendations should be considered.\n   -  When parameter sets are added or\
    \ updated, principle C is\n      vulnerable to transmission errors as described\
    \ above, and\n      therefore principle B is RECOMMENDED.\n   -  When parameter\
    \ sets are added or updated, care SHOULD be taken to\n      ensure that any parameter\
    \ set is delivered prior to its usage.  It\n      is common that no synchronization\
    \ is present between out-of-band\n      signaling and in-band traffic.  If out-of-band\
    \ signaling is used,\n      it is RECOMMENDED that a sender does not start sending\
    \ NALUs\n      requiring the updated parameter sets prior to acknowledgement of\n\
    \      delivery from the signaling protocol.\n   -  When parameter sets are updated,\
    \ the following synchronization\n      issue should be taken into account.  When\
    \ overwriting a parameter\n      set at the receiver, the sender has to ensure\
    \ that the parameter\n      set in question is not needed by any NALU present\
    \ in the network\n      or receiver buffers.  Otherwise, decoding with a wrong\
    \ parameter\n      set may occur.  To lessen this problem, it is RECOMMENDED either\n\
    \      to overwrite only those parameter sets that have not been used for\n  \
    \    a sufficiently long time (to ensure that all related NALUs have\n      been\
    \ consumed), or to add a new parameter set instead (which may\n      have negative\
    \ consequences for the efficiency of the video\n      coding).\n   -  When new\
    \ parameter sets are added, previously unused parameter set\n      identifiers\
    \ are used.  This avoids the problem identified in the\n      previous paragraph.\
    \  However, in a multiparty session, unless a\n      synchronized control protocol\
    \ is used, there is a risk that\n      multiple entities try to add different\
    \ parameter sets for the same\n      identifier, which has to be avoided.\n  \
    \ -  Adding or modifying parameter sets by using both principles B and\n     \
    \ C in the same RTP session may lead to inconsistencies of the\n      parameter\
    \ sets because of the lack of synchronization between the\n      control and the\
    \ RTP channel.  Therefore, principles B and C MUST\n      NOT both be used in\
    \ the same session unless sufficient\n      synchronization can be provided.\n\
    \   In some scenarios (e.g., when only the subset of this payload format\n   specification\
    \ corresponding to H.241 is used), it is not possible to\n   employ out-of-band\
    \ parameter set transmission.  In this case,\n   parameter sets have to be transmitted\
    \ in-band.  Here, the\n   synchronization with the non-parameter-set-data in the\
    \ bitstream is\n   implicit, but the possibility of a loss has to be taken into\
    \ account.\n   The loss probability should be reduced using the mechanisms discussed\n\
    \   above.\n   -  When parameter sets are initially provided using principle A\
    \ and\n      then later added or updated in-band (principle C), there is a risk\n\
    \      associated with updating the parameter sets delivered out-of-band.\n  \
    \    If receivers miss some in-band updates (for example, because of a\n     \
    \ loss or a late tune-in), those receivers attempt to decode the\n      bitstream\
    \ using out-dated parameters.  It is RECOMMENDED that\n      parameter set IDs\
    \ be partitioned between the out-of-band and in-\n      band parameter sets.\n\
    \   To allow for maximum flexibility and best performance from the H.264\n   coder,\
    \ it is recommended, if possible, to allow any sender to add its\n   own parameter\
    \ sets to be used in a session.  Setting the \"parameter-\n   add\" parameter\
    \ to false should only be done in cases where the\n   session topology prevents\
    \ a participant to add its own parameter\n   sets.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   RTP packets using the payload format defined\
    \ in this specification\n   are subject to the security considerations discussed\
    \ in the RTP\n   specification [4], and in any appropriate RTP profile (for example,\n\
    \   [16]).  This implies that confidentiality of the media streams is\n   achieved\
    \ by encryption; for example, through the application of SRTP\n   [26].  Because\
    \ the data compression used with this payload format is\n   applied end-to-end,\
    \ any encryption needs to be performed after\n   compression.\n   A potential\
    \ denial-of-service threat exists for data encodings using\n   compression techniques\
    \ that have non-uniform receiver-end\n   computational load.  The attacker can\
    \ inject pathological datagrams\n   into the stream that are complex to decode\
    \ and that cause the\n   receiver to be overloaded.  H.264 is particularly vulnerable\
    \ to such\n   attacks, as it is extremely simple to generate datagrams containing\n\
    \   NAL units that affect the decoding process of many future NAL units.\n   Therefore,\
    \ the usage of data origin authentication and data integrity\n   protection of\
    \ at least the RTP packet is RECOMMENDED; for example,\n   with SRTP [26].\n \
    \  Note that the appropriate mechanism to ensure confidentiality and\n   integrity\
    \ of RTP packets and their payloads is very dependent on the\n   application and\
    \ on the transport and signaling protocols employed.\n   Thus, although SRTP is\
    \ given as an example above, other possible\n   choices exist.\n   Decoders MUST\
    \ exercise caution with respect to the handling of user\n   data SEI messages,\
    \ particularly if they contain active elements, and\n   MUST restrict their domain\
    \ of applicability to the presentation\n   containing the stream.\n   End-to-End\
    \ security with either authentication, integrity or\n   confidentiality protection\
    \ will prevent a MANE from performing\n   media-aware operations other than discarding\
    \ complete packets.  And\n   in the case of confidentiality protection it will\
    \ even be prevented\n   from performing discarding of packets in a media aware\
    \ way.  To allow\n   any MANE to perform its operations, it will be required to\
    \ be a\n   trusted entity which is included in the security context\n   establishment.\n"
- title: 10.  Congestion Control
  contents:
  - "10.  Congestion Control\n   Congestion control for RTP SHALL be used in accordance\
    \ with RFC 3550\n   [4], and with any applicable RTP profile; e.g., RFC 3551 [16].\
    \  An\n   additional requirement if best-effort service is being used is:\n  \
    \ users of this payload format MUST monitor packet loss to ensure that\n   the\
    \ packet loss rate is within acceptable parameters.  Packet loss is\n   considered\
    \ acceptable if a TCP flow across the same network path, and\n   experiencing\
    \ the same network conditions, would achieve an average\n   throughput, measured\
    \ on a reasonable timescale, that is not less than\n   the RTP flow is achieving.\
    \  This condition can be satisfied by\n   implementing congestion control mechanisms\
    \ to adapt the transmission\n   rate (or the number of layers subscribed for a\
    \ layered multicast\n   session), or by arranging for a receiver to leave the\
    \ session if the\n   loss rate is unacceptably high.\n   The bit rate adaptation\
    \ necessary for obeying the congestion control\n   principle is easily achievable\
    \ when real-time encoding is used.\n   However, when pre-encoded content is being\
    \ transmitted, bandwidth\n   adaptation requires the availability of more than\
    \ one coded\n   representation of the same content, at different bit rates, or\
    \ the\n   existence of non-reference pictures or sub-sequences [22] in the\n \
    \  bitstream.  The switching between the different representations can\n   normally\
    \ be performed in the same RTP session; e.g., by employing a\n   concept known\
    \ as SI/SP slices of the Extended Profile, or by\n   switching streams at IDR\
    \ picture boundaries.  Only when non-\n   downgradable parameters (such as the\
    \ profile part of the\n   profile/level ID) are required to be changed does it\
    \ become necessary\n   to terminate and re-start the media stream.  This may be\
    \ accomplished\n   by using a different RTP payload type.\n   MANEs MAY follow\
    \ the suggestions outlined in section 7.3 and remove\n   certain unusable packets\
    \ from the packet stream when that stream was\n   damaged due to previous packet\
    \ losses.  This can help reduce the\n   network load in certain special cases.\n"
- title: 11.  IANA Consideration
  contents:
  - "11.  IANA Consideration\n   IANA has registered one new MIME type; see section\
    \ 8.1.\n"
- title: '12.  Informative Appendix: Application Examples'
  contents:
  - "12.  Informative Appendix: Application Examples\n   This payload specification\
    \ is very flexible in its use, in order to\n   cover the extremely wide application\
    \ space anticipated for H.264.\n   However, this great flexibility also makes\
    \ it difficult for an\n   implementer to decide on a reasonable packetization\
    \ scheme.  Some\n   information on how to apply this specification to real-world\n\
    \   scenarios is likely to appear in the form of academic publications\n   and\
    \ a test model software and description in the near future.\n   However, some\
    \ preliminary usage scenarios are described here as well.\n"
- title: 12.1.  Video Telephony according to ITU-T Recommendation H.241
  contents:
  - "12.1.  Video Telephony according to ITU-T Recommendation H.241\n       Annex\
    \ A\n   H.323-based video telephony systems that use H.264 as an optional\n  \
    \ video compression scheme are required to support H.241 Annex A [15]\n   as a\
    \ packetization scheme.  The packetization mechanism defined in\n   this Annex\
    \ is technically identical with a small subset of this\n   specification.\n  \
    \ When a system operates according to H.241 Annex A, parameter set NAL\n   units\
    \ are sent in-band.  Only Single NAL unit packets are used.  Many\n   such systems\
    \ are not sending IDR pictures regularly, but only when\n   required by user interaction\
    \ or by control protocol means; e.g., when\n   switching between video channels\
    \ in a Multipoint Control Unit or for\n   error recovery requested by feedback.\n"
- title: 12.2.  Video Telephony, No Slice Data Partitioning, No NAL Unit
  contents:
  - "12.2.  Video Telephony, No Slice Data Partitioning, No NAL Unit\n       Aggregation\n\
    \   The RTP part of this scheme is implemented and tested (though not the\n  \
    \ control-protocol part; see below).\n   In most real-world video telephony applications,\
    \ picture parameters\n   such as picture size or optional modes never change during\
    \ the\n   lifetime of a connection.  Therefore, all necessary parameter sets\n\
    \   (usually only one) are sent as a side effect of the capability\n   exchange/announcement\
    \ process, e.g., according to the SDP syntax\n   specified in section 8.2 of this\
    \ document.  As all necessary\n   parameter set information is established before\
    \ the RTP session\n   starts, there is no need for sending any parameter set NAL\
    \ units.\n   Slice data partitioning is not used, either.  Thus, the RTP packet\n\
    \   stream basically consists of NAL units that carry single coded\n   slices.\n\
    \   The encoder chooses the size of coded slice NAL units so that they\n   offer\
    \ the best performance.  Often, this is done by adapting the\n   coded slice size\
    \ to the MTU size of the IP network.  For small\n   picture sizes, this may result\
    \ in a one-picture-per-one-packet\n   strategy.  Intra refresh algorithms clean\
    \ up the loss of packets and\n   the resulting drift-related artifacts.\n"
- title: 12.3.  Video Telephony, Interleaved Packetization Using NAL Unit
  contents:
  - "12.3.  Video Telephony, Interleaved Packetization Using NAL Unit\n       Aggregation\n\
    \   This scheme allows better error concealment and is used in H.263\n   based\
    \ designs using RFC 2429 packetization [10].  It has been\n   implemented, and\
    \ good results were reported [12].\n   The VCL encoder codes the source picture\
    \ so that all macroblocks\n   (MBs) of one MB line are assigned to one slice.\
    \  All slices with even\n   MB row addresses are combined into one STAP, and all\
    \ slices with odd\n   MB row addresses into another.  Those STAPs are transmitted\
    \ as RTP\n   packets.  The establishment of the parameter sets is performed as\n\
    \   discussed above.\n   Note that the use of STAPs is essential here, as the\
    \ high number of\n   individual slices (18 for a CIF picture) would lead to unacceptably\n\
    \   high IP/UDP/RTP header overhead (unless the source coding tool FMO is\n  \
    \ used, which is not assumed in this scenario).  Furthermore, some\n   wireless\
    \ video transmission systems, such as H.324M and the IP-based\n   video telephony\
    \ specified in 3GPP, are likely to use relatively small\n   transport packet size.\
    \  For example, a typical MTU size of H.223 AL3\n   SDU is around 100 bytes [17].\
    \  Coding individual slices according to\n   this packetization scheme provides\
    \ further advantage in communication\n   between wired and wireless networks,\
    \ as individual slices are likely\n   to be smaller than the preferred maximum\
    \ packet size of wireless\n   systems.  Consequently, a gateway can convert the\
    \ STAPs used in a\n   wired network into several RTP packets with only one NAL\
    \ unit, which\n   are preferred in a wireless network, and vice versa.\n"
- title: 12.4.  Video Telephony with Data Partitioning
  contents:
  - "12.4.  Video Telephony with Data Partitioning\n   This scheme has been implemented\
    \ and has been shown to offer good\n   performance, especially at higher packet\
    \ loss rates [12].\n   Data Partitioning is known to be useful only when some\
    \ form of\n   unequal error protection is available.  Normally, in single-session\n\
    \   RTP environments, even error characteristics are assumed; i.e., the\n   packet\
    \ loss probability of all packets of the session is the same\n   statistically.\
    \  However, there are means to reduce the packet loss\n   probability of individual\
    \ packets in an RTP session.  A FEC packet\n   according to RFC 2733 [18], for\
    \ example, specifies which media\n   packets are associated with the FEC packet.\n\
    \   In all cases, the incurred overhead is substantial but is in the same\n  \
    \ order of magnitude as the number of bits that have otherwise been\n   spent\
    \ for intra information.  However, this mechanism does not add\n   any delay to\
    \ the system.\n   Again, the complete parameter set establishment is performed\
    \ through\n   control protocol means.\n"
- title: 12.5.  Video Telephony or Streaming with FUs and Forward Error
  contents:
  - "12.5.  Video Telephony or Streaming with FUs and Forward Error\n       Correction\n\
    \   This scheme has been implemented and has been shown to provide good\n   performance,\
    \ especially at higher packet loss rates [19].\n   The most efficient means to\
    \ combat packet losses for scenarios where\n   retransmissions are not applicable\
    \ is forward error correction (FEC).\n   Although application layer, end-to-end\
    \ use of FEC is often less\n   efficient than an FEC-based protection of individual\
    \ links\n   (especially when links of different characteristics are in the\n \
    \  transmission path), application layer, end-to-end FEC is unavoidable\n   in\
    \ some scenarios.  RFC 2733 [18] provides means to use generic,\n   application\
    \ layer, end-to-end FEC in packet-loss environments.  A\n   binary forward error\
    \ correcting code is generated by applying the XOR\n   operation to the bits at\
    \ the same bit position in different packets.\n   The binary code can be specified\
    \ by the parameters (n,k) in which k\n   is the number of information packets\
    \ used in the connection and n is\n   the total number of packets generated for\
    \ k information packets;\n   i.e., n-k parity packets are generated for k information\
    \ packets.\n   When a code is used with parameters (n,k) within the RFC 2733\n\
    \   framework, the following properties are well known:\n   a) If applied over\
    \ one RTP packet, RFC 2733 provides only packet\n      repetition.\n   b) RFC\
    \ 2733 is most bit rate efficient if XOR-connected packets have\n      equal length.\n\
    \   c) At the same packet loss probability p and for a fixed k, the\n      greater\
    \ the value of n is, the smaller the residual error\n      probability becomes.\
    \  For example, for a packet loss probability\n      of 10%, k=1, and n=2, the\
    \ residual error probability is about 1%,\n      whereas for n=3, the residual\
    \ error probability is about 0.1%.\n   d) At the same packet loss probability\
    \ p and for a fixed code rate\n      k/n, the greater the value of n is, the smaller\
    \ the residual error\n      probability becomes.  For example, at a packet loss\
    \ probability of\n      p=10%, k=1 and n=2, the residual error rate is about 1%,\
    \ whereas\n      for an extended Golay code with k=12 and n=24, the residual error\n\
    \      rate is about 0.01%.\n   For applying RFC 2733 in combination with H.264\
    \ baseline coded video\n   without using FUs, several options might be considered:\n\
    \   1) The video encoder produces NAL units for which each video frame is\n  \
    \    coded in a single slice.  Applying FEC, one could use a simple\n      code;\
    \ e.g., (n=2, k=1).  That is, each NAL unit would basically\n      just be repeated.\
    \  The disadvantage is obviously the bad code\n      performance according to\
    \ d), above, and the low flexibility, as\n      only (n, k=1) codes can be used.\n\
    \   2) The video encoder produces NAL units for which each video frame is\n  \
    \    encoded in one or more consecutive slices.  Applying FEC, one\n      could\
    \ use a better code, e.g., (n=24, k=12), over a sequence of\n      NAL units.\
    \  Depending on the number of RTP packets per frame, a\n      loss may introduce\
    \ a significant delay, which is reduced when more\n      RTP packets are used\
    \ per frame.  Packets of completely different\n      length might also be connected,\
    \ which decreases bit rate\n      efficiency according to b), above.  However,\
    \ with some care and\n      for slices of 1kb or larger, similar length (100-200\
    \ bytes\n      difference) may be produced, which will not lower the bit\n   \
    \   efficiency catastrophically.\n   3) The video encoder produces NAL units,\
    \ for which a certain frame\n      contains k slices of possibly almost equal\
    \ length.  Then, applying\n      FEC, a better code, e.g., (n=24, k=12), can be\
    \ used over the\n      sequence of NAL units for each frame.  The delay compared\
    \ to that\n      of 2), above,  may be reduced, but several disadvantages are\n\
    \      obvious.  First, the coding efficiency of the encoded video is\n      lowered\
    \ significantly, as slice-structured coding reduces intra-\n      frame prediction\
    \ and additional slice overhead is necessary.\n      Second, pre-encoded content\
    \ or, when operating over a gateway, the\n      video is usually not appropriately\
    \ coded with k slices such that\n      FEC can be applied.  Finally, the encoding\
    \ of video producing k\n      slices of equal length is not straightforward and\
    \ might require\n      more than one encoding pass.\n   Many of the mentioned\
    \ disadvantages can be avoided by applying FUs in\n   combination with FEC.  Each\
    \ NAL unit can be split into any number of\n   FUs of basically equal length;\
    \ therefore, FEC with a reasonable k and\n   n can be applied, even if the encoder\
    \ made no effort to produce\n   slices of equal length.  For example, a coded\
    \ slice NAL unit\n   containing an entire frame can be split to k FUs, and a parity\
    \ check\n   code (n=k+1, k) can be applied.  However, this has the disadvantage\n\
    \   that unless all created fragments can be recovered, the whole slice\n   will\
    \ be lost.  Thus a larger section is lost than would be if the\n   frame had been\
    \ split into several slices.\n   The presented technique makes it possible to\
    \ achieve good\n   transmission error tolerance, even if no additional source\
    \ coding\n   layer redundancy (such as periodic intra frames) is present.\n  \
    \ Consequently, the same coded video sequence can be used to achieve\n   the maximum\
    \ compression efficiency and quality over error-free\n   transmission and for\
    \ transmission over error-prone networks.\n   Furthermore, the technique allows\
    \ the application of FEC to pre-\n   encoded sequences without adding delay. \
    \ In this case, pre-encoded\n   sequences that are not encoded for error-prone\
    \ networks can still be\n   transmitted almost reliably without adding extensive\
    \ delays.  In\n   addition, FUs of equal length result in a bit rate efficient\
    \ use of\n   RFC 2733.\n   If the error probability depends on the length of the\
    \ transmitted\n   packet (e.g., in case of mobile transmission [14]), the benefits\
    \ of\n   applying FUs with FEC are even more obvious.  Basically, the\n   flexibility\
    \ of the size of FUs allows appropriate FEC to be applied\n   for each NAL unit\
    \ and unequal error protection of NAL units.\n   When FUs and FEC are used, the\
    \ incurred overhead is substantial but\n   is in the same order of magnitude as\
    \ the number of bits that have to\n   be spent for intra-coded macroblocks if\
    \ no FEC is applied.  In [19],\n   it was shown that the overall performance of\
    \ the FEC-based approach\n   enhanced quality when using the same error rate and\
    \ same overall bit\n   rate, including the overhead.\n"
- title: 12.6.  Low Bit-Rate Streaming
  contents:
  - "12.6.  Low Bit-Rate Streaming\n   This scheme has been implemented with H.263\
    \ and non-standard RTP\n   packetization and has given good results [20].  There\
    \ is no technical\n   reason why similarly good results could not be achievable\
    \ with H.264.\n   In today's Internet streaming, some of the offered bit rates\
    \ are\n   relatively low in order to allow terminals with dial-up modems to\n\
    \   access the content.  In wired IP networks, relatively large packets,\n   say\
    \ 500 - 1500 bytes, are preferred to smaller and more frequently\n   occurring\
    \ packets in order to reduce network congestion.  Moreover,\n   use of large packets\
    \ decreases the amount of RTP/UDP/IP header\n   overhead.  For low bit-rate video,\
    \ the use of large packets means\n   that sometimes up to few pictures should\
    \ be encapsulated in one\n   packet.\n   However, loss of a packet including many\
    \ coded pictures would have\n   drastic consequences for visual quality, as there\
    \ is practically no\n   other way to conceal a loss of an entire picture than\
    \ to repeat the\n   previous one.  One way to construct relatively large packets\
    \ and\n   maintain possibilities for successful loss concealment is to\n   construct\
    \ MTAPs that contain interleaved slices from several\n   pictures.  An MTAP should\
    \ not contain spatially adjacent slices from\n   the same picture or spatially\
    \ overlapping slices from any picture.\n   If a packet is lost, it is likely that\
    \ a lost slice is surrounded by\n   spatially adjacent slices of the same picture\
    \ and spatially\n   corresponding slices of the temporally previous and succeeding\n\
    \   pictures.  Consequently, concealment of the lost slice is likely to\n   be\
    \ relatively successful.\n"
- title: 12.7.  Robust Packet Scheduling in Video Streaming
  contents:
  - "12.7.  Robust Packet Scheduling in Video Streaming\n   Robust packet scheduling\
    \ has been implemented with MPEG-4 Part 2 and\n   simulated in a wireless streaming\
    \ environment [21].  There is no\n   technical reason why similar or better results\
    \ could not be\n   achievable with H.264.\n   Streaming clients typically have\
    \ a receiver buffer that is capable of\n   storing a relatively large amount of\
    \ data.  Initially, when a\n   streaming session is established, a client does\
    \ not start playing the\n   stream back immediately.  Rather, it typically buffers\
    \ the incoming\n   data for a few seconds.  This buffering helps maintain continuous\n\
    \   playback, as, in case of occasional increased transmission delays or\n   network\
    \ throughput drops, the client can decode and play buffered\n   data.  Otherwise,\
    \ without initial buffering, the client has to freeze\n   the display, stop decoding,\
    \ and wait for incoming data.  The\n   buffering is also necessary for either\
    \ automatic or selective\n   retransmission in any protocol level.  If any part\
    \ of a picture is\n   lost, a retransmission mechanism may be used to resend the\
    \ lost data.\n   If the retransmitted data is received before its scheduled decoding\n\
    \   or playback time, the loss is recovered perfectly.  Coded pictures\n   can\
    \ be ranked according to their importance in the subjective quality\n   of the\
    \ decoded sequence.  For example, non-reference pictures, such\n   as conventional\
    \ B pictures, are subjectively least important, as\n   their absence does not\
    \ affect decoding of any other pictures.  In\n   addition to non-reference pictures,\
    \ the ITU-T H.264 | ISO/IEC\n   14496-10 standard includes a temporal scalability\
    \ method called sub-\n   sequences [22].  Subjective ranking can also be made\
    \ on coded slice\n   data partition or slice group basis.  Coded slices and coded\
    \ slice\n   data partitions that are subjectively the most important can be sent\n\
    \   earlier than their decoding order indicates, whereas coded slices and\n  \
    \ coded slice data partitions that are subjectively the least important\n   can\
    \ be sent later than their natural coding order indicates.\n   Consequently, any\
    \ retransmitted parts of the most important slices\n   and coded slice data partitions\
    \ are more likely to be received before\n   their scheduled decoding or playback\
    \ time compared to the least\n   important slices and slice data partitions.\n"
- title: '13.  Informative Appendix: Rationale for Decoding Order Number'
  contents:
  - '13.  Informative Appendix: Rationale for Decoding Order Number

    '
- title: 13.1.  Introduction
  contents:
  - "13.1.  Introduction\n   The Decoding Order Number (DON) concept was introduced\
    \ mainly to\n   enable efficient multi-picture slice interleaving (see section\
    \ 12.6)\n   and robust packet scheduling (see section 12.7).  In both of these\n\
    \   applications, NAL units are transmitted out of decoding order.  DON\n   indicates\
    \ the decoding order of NAL units and should be used in the\n   receiver to recover\
    \ the decoding order.  Example use cases for\n   efficient multi-picture slice\
    \ interleaving and for robust packet\n   scheduling are given in sections 13.2\
    \ and 13.3, respectively.\n   Section 13.4 describes the benefits of the DON concept\
    \ in error\n   resiliency achieved by redundant coded pictures.  Section 13.5\n\
    \   summarizes considered alternatives to DON and justifies why DON was\n   chosen\
    \ to this RTP payload specification.\n"
- title: 13.2.  Example of Multi-Picture Slice Interleaving
  contents:
  - "13.2.  Example of Multi-Picture Slice Interleaving\n   An example of multi-picture\
    \ slice interleaving follows.  A subset of\n   a coded video sequence is depicted\
    \ below in output order.  R denotes\n   a reference picture, N denotes a non-reference\
    \ picture, and the\n   number indicates a relative output time.\n      ... R1\
    \ N2 R3 N4 R5 ...\n   The decoding order of these pictures from left to right\
    \ is as\n   follows:\n      ... R1 R3 N2 R5 N4 ...\n   The NAL units of pictures\
    \ R1, R3, N2, R5, and N4 are marked with a\n   DON equal to 1, 2, 3, 4, and 5,\
    \ respectively.\n   Each reference picture consists of three slice groups that\
    \ are\n   scattered as follows (a number denotes the slice group number for\n\
    \   each macroblock in a QCIF frame):\n      0 1 2 0 1 2 0 1 2 0 1\n      2 0\
    \ 1 2 0 1 2 0 1 2 0\n      1 2 0 1 2 0 1 2 0 1 2\n      0 1 2 0 1 2 0 1 2 0 1\n\
    \      2 0 1 2 0 1 2 0 1 2 0\n      1 2 0 1 2 0 1 2 0 1 2\n      0 1 2 0 1 2 0\
    \ 1 2 0 1\n      2 0 1 2 0 1 2 0 1 2 0\n      1 2 0 1 2 0 1 2 0 1 2\n   For the\
    \ sake of simplicity, we assume that all the macroblocks of a\n   slice group\
    \ are included in one slice.  Three MTAPs are constructed\n   from three consecutive\
    \ reference pictures so that each MTAP contains\n   three aggregation units, each\
    \ of which contains all the macroblocks\n   from one slice group.  The first MTAP\
    \ contains slice group 0 of\n   picture R1, slice group 1 of picture R3, and slice\
    \ group 2 of\n   picture R5.  The second MTAP contains slice group 1 of picture\
    \ R1,\n   slice group 2 of picture R3, and slice group 0 of picture R5.  The\n\
    \   third MTAP contains slice group 2 of picture R1, slice group 0 of\n   picture\
    \ R3, and slice group 1 of picture R5.  Each non-reference\n   picture is encapsulated\
    \ into an STAP-B.\n   Consequently, the transmission order of NAL units is the\
    \ following:\n      R1, slice group 0, DON 1, carried in MTAP,   RTP SN: N\n \
    \     R3, slice group 1, DON 2, carried in MTAP,   RTP SN: N\n      R5, slice\
    \ group 2, DON 4, carried in MTAP,   RTP SN: N\n      R1, slice group 1, DON 1,\
    \ carried in MTAP,   RTP SN: N+1\n      R3, slice group 2, DON 2, carried in MTAP,\
    \   RTP SN: N+1\n      R5, slice group 0, DON 4, carried in MTAP,   RTP SN: N+1\n\
    \      R1, slice group 2, DON 1, carried in MTAP,   RTP SN: N+2\n      R3, slice\
    \ group 1, DON 2, carried in MTAP,   RTP SN: N+2\n      R5, slice group 0, DON\
    \ 4, carried in MTAP,   RTP SN: N+2\n      N2,                DON 3, carried in\
    \ STAP-B, RTP SN: N+3\n      N4,                DON 5, carried in STAP-B, RTP\
    \ SN: N+4\n   The receiver is able to organize the NAL units back in decoding\
    \ order\n   based on the value of DON associated with each NAL unit.\n   If one\
    \ of the MTAPs is lost, the spatially adjacent and temporally\n   co-located macroblocks\
    \ are received and can be used to conceal the\n   loss efficiently.  If one of\
    \ the STAPs is lost, the effect of the\n   loss does not propagate temporally.\n"
- title: 13.3.  Example of Robust Packet Scheduling
  contents:
  - "13.3.  Example of Robust Packet Scheduling\n   An example of robust packet scheduling\
    \ follows.  The communication\n   system used in the example consists of the following\
    \ components in\n   the order that the video is processed from source to sink:\n\
    \      o camera and capturing\n      o pre-encoding buffer\n      o encoder\n\
    \      o encoded picture buffer\n      o transmitter\n      o transmission channel\n\
    \      o receiver\n      o receiver buffer\n      o decoder\n      o decoded picture\
    \ buffer\n      o display\n   The video communication system used in the example\
    \ operates as\n   follows.  Note that processing of the video stream happens gradually\n\
    \   and at the same time in all components of the system.  The source\n   video\
    \ sequence is shot and captured to a pre-encoding buffer.  The\n   pre-encoding\
    \ buffer can be used to order pictures from sampling order\n   to encoding order\
    \ or to analyze multiple uncompressed frames for bit\n   rate control purposes,\
    \ for example.  In some cases, the pre-encoding\n   buffer may not exist; instead,\
    \ the sampled pictures are encoded right\n   away.  The encoder encodes pictures\
    \ from the pre-encoding buffer and\n   stores the output; i.e., coded pictures,\
    \ to the encoded picture\n   buffer.  The transmitter encapsulates the coded pictures\
    \ from the\n   encoded picture buffer to transmission packets and sends them to\
    \ a\n   receiver through a transmission channel.  The receiver stores the\n  \
    \ received packets to the receiver buffer.  The receiver buffering\n   process\
    \ typically includes buffering for transmission delay jitter.\n   The receiver\
    \ buffer can also be used to recover correct decoding\n   order of coded data.\
    \  The decoder reads coded data from the receiver\n   buffer and produces decoded\
    \ pictures as output into the decoded\n   picture buffer.  The decoded picture\
    \ buffer is used to recover the\n   output (or display) order of pictures.  Finally,\
    \ pictures are\n   displayed.\n   In the following example figures, I denotes\
    \ an IDR picture, R denotes\n   a reference picture, N denotes a non-reference\
    \ picture, and the\n   number after I, R, or N indicates the sampling time relative\
    \ to the\n   previous IDR picture in decoding order.  Values below the sequence\
    \ of\n   pictures indicate scaled system clock timestamps.  The system clock\n\
    \   is initialized arbitrarily in this example, and time runs from left\n   to\
    \ right.  Each I, R, and N picture is mapped into the same timeline\n   compared\
    \ to the previous processing step, if any, assuming that\n   encoding, transmission,\
    \ and decoding take no time.  Thus, events\n   happening at the same time are\
    \ located in the same column throughout\n   all example figures.\n   A subset\
    \ of a sequence of coded pictures is depicted below in\n   sampling order.\n \
    \      ...  N58 N59 I00 N01 N02 R03 N04 N05 R06 ... N58 N59 I00 N01 ...\n    \
    \   ... --|---|---|---|---|---|---|---|---|- ... -|---|---|---|- ...\n       ...\
    \  58  59  60  61  62  63  64  65  66  ... 128 129 130 131 ...\n      Figure 16.\
    \  Sequence of pictures in sampling order\n   The sampled pictures are buffered\
    \ in the pre-encoding buffer to\n   arrange them in encoding order.  In this example,\
    \ we assume that the\n   non-reference pictures are predicted from both the previous\
    \ and the\n   next reference picture in output order, except for the non-reference\n\
    \   pictures immediately preceding an IDR picture, which are predicted\n   only\
    \ from the previous reference picture in output order.  Thus, the\n   pre-encoding\
    \ buffer has to contain at least two pictures, and the\n   buffering causes a\
    \ delay of two picture intervals.  The output of the\n   pre-encoding buffering\
    \ process and the encoding (and decoding) order\n   of the pictures are as follows:\n\
    \                ... N58 N59 I00 R03 N01 N02 R06 N04 N05 ...\n               \
    \ ... -|---|---|---|---|---|---|---|---|- ...\n                ... 60  61  62\
    \  63  64  65  66  67  68  ...\n      Figure 17.  Re-ordered pictures in the pre-encoding\
    \ buffer\n   The encoder or the transmitter can set the value of DON for each\n\
    \   picture to a value of DON for the previous picture in decoding order\n   plus\
    \ one.\n   For the sake of simplicity, let us assume that:\n   o  the frame rate\
    \ of the sequence is constant,\n   o  each picture consists of only one slice,\n\
    \   o  each slice is encapsulated in a single NAL unit packet,\n   o  there is\
    \ no transmission delay, and\n   o  pictures are transmitted at constant intervals\
    \ (that is, 1 / frame\n      rate).\n   When pictures are transmitted in decoding\
    \ order, they are received as\n   follows:\n                ... N58 N59 I00 R03\
    \ N01 N02 R06 N04 N05 ...\n                ... -|---|---|---|---|---|---|---|---|-\
    \ ...\n                ... 60  61  62  63  64  65  66  67  68  ...\n      Figure\
    \ 18.  Received pictures in decoding order\n   The OPTIONAL sprop-interleaving-depth\
    \ MIME type parameter is set to\n   0, as the transmission (or reception) order\
    \ is identical to the\n   decoding order.\n   The decoder has to buffer for one\
    \ picture interval initially in its\n   decoded picture buffer to organize pictures\
    \ from decoding order to\n   output order as depicted below:\n               \
    \     ... N58 N59 I00 N01 N02 R03 N04 N05 R06 ...\n                    ... -|---|---|---|---|---|---|---|---|-\
    \ ...\n                    ... 61  62  63  64  65  66  67  68  69  ...\n     \
    \ Figure 19.  Output order\n   The amount of required initial buffering in the\
    \ decoded picture\n   buffer can be signaled in the buffering period SEI message\
    \ or with\n   the num_reorder_frames syntax element of H.264 video usability\n\
    \   information.  num_reorder_frames indicates the maximum number of\n   frames,\
    \ complementary field pairs, or non-paired fields that precede\n   any frame,\
    \ complementary field pair, or non-paired field in the\n   sequence in decoding\
    \ order and that follow it in output order.  For\n   the sake of simplicity, we\
    \ assume that num_reorder_frames is used to\n   indicate the initial buffer in\
    \ the decoded picture buffer.  In this\n   example, num_reorder_frames is equal\
    \ to 1.\n   It can be observed that if the IDR picture I00 is lost during\n  \
    \ transmission and a retransmission request is issued when the value of\n   the\
    \ system clock is 62, there is one picture interval of time (until\n   the system\
    \ clock reaches timestamp 63) to receive the retransmitted\n   IDR picture I00.\n\
    \   Let us then assume that IDR pictures are transmitted two frame\n   intervals\
    \ earlier than their decoding position; i.e., the pictures\n   are transmitted\
    \ as follows:\n                       ...  I00 N58 N59 R03 N01 N02 R06 N04 N05\
    \ ...\n                       ... --|---|---|---|---|---|---|---|---|- ...\n \
    \                      ...  62  63  64  65  66  67  68  69  70  ...\n      Figure\
    \ 20.  Interleaving: Early IDR pictures in sending order\n   The OPTIONAL sprop-interleaving-depth\
    \ MIME type parameter is set\n   equal to 1 according to its definition.  (The\
    \ value of sprop-\n   interleaving-depth in this example can be derived as follows:\n\
    \   Picture I00 is the only picture preceding picture N58 or N59 in\n   transmission\
    \ order and following it in decoding order.  Except for\n   pictures I00, N58,\
    \ and N59, the transmission order is the same as the\n   decoding order of pictures.\
    \  As a coded picture is encapsulated into\n   exactly one NAL unit, the value\
    \ of sprop-interleaving-depth is equal\n   to the maximum number of pictures preceding\
    \ any picture in\n   transmission order and following the picture in decoding\
    \ order.)\n   The receiver buffering process contains two pictures at a time\n\
    \   according to the value of the sprop-interleaving-depth parameter and\n   orders\
    \ pictures from the reception order to the correct decoding\n   order based on\
    \ the value of DON associated with each picture.  The\n   output of the receiver\
    \ buffering process is as follows:\n                            ... N58 N59 I00\
    \ R03 N01 N02 R06 N04 N05 ...\n                            ... -|---|---|---|---|---|---|---|---|-\
    \ ...\n                            ... 63  64  65  66  67  68  69  70  71  ...\n\
    \      Figure 21.  Interleaving: Receiver buffer\n   Again, an initial buffering\
    \ delay of one picture interval is needed\n   to organize pictures from decoding\
    \ order to output order, as depicted\n   below:\n                            \
    \    ... N58 N59 I00 N01 N02 R03 N04 N05 ...\n                               \
    \ ... -|---|---|---|---|---|---|---|- ...\n                                ...\
    \ 64  65  66  67  68  69  70  71  ...\n      Figure 22.  Interleaving: Receiver\
    \ buffer after reordering\n   Note that the maximum delay that IDR pictures can\
    \ undergo during\n   transmission, including possible application, transport,\
    \ or link\n   layer retransmission, is equal to three picture intervals.  Thus,\
    \ the\n   loss resiliency of IDR pictures is improved in systems supporting\n\
    \   retransmission compared to the case in which pictures were\n   transmitted\
    \ in their decoding order.\n"
- title: 13.4.  Robust Transmission Scheduling of Redundant Coded Slices
  contents:
  - "13.4.  Robust Transmission Scheduling of Redundant Coded Slices\n   A redundant\
    \ coded picture is a coded representation of a picture or a\n   part of a picture\
    \ that is not used in the decoding process if the\n   corresponding primary coded\
    \ picture is correctly decoded.  There\n   should be no noticeable difference\
    \ between any area of the decoded\n   primary picture and a corresponding area\
    \ that would result from\n   application of the H.264 decoding process for any\
    \ redundant picture\n   in the same access unit.  A redundant coded slice is a\
    \ coded slice\n   that is a part of a redundant coded picture.\n   Redundant coded\
    \ pictures can be used to provide unequal error\n   protection in error-prone\
    \ video transmission.  If a primary coded\n   representation of a picture is decoded\
    \ incorrectly, a corresponding\n   redundant coded picture can be decoded.  Examples\
    \ of applications and\n   coding techniques using the redundant codec picture\
    \ feature include\n   the video redundancy coding [23] and the protection of \"\
    key pictures\"\n   in multicast streaming [24].\n   One property of many error-prone\
    \ video communications systems is that\n   transmission errors are often bursty.\
    \  Therefore, they may affect\n   more than one consecutive transmission packets\
    \ in transmission order.\n   In low bit-rate video communication, it is relatively\
    \ common that an\n   entire coded picture can be encapsulated into one transmission\n\
    \   packet.  Consequently, a primary coded picture and the corresponding\n   redundant\
    \ coded pictures may be transmitted in consecutive packets in\n   transmission\
    \ order.  To make the transmission scheme more tolerant of\n   bursty transmission\
    \ errors, it is beneficial to transmit the primary\n   coded picture and redundant\
    \ coded picture separated by more than a\n   single packet.  The DON concept enables\
    \ this.\n"
- title: 13.5.  Remarks on Other Design Possibilities
  contents:
  - "13.5.  Remarks on Other Design Possibilities\n   The slice header syntax structure\
    \ of the H.264 coding standard\n   contains the frame_num syntax element that\
    \ can indicate the decoding\n   order of coded frames.  However, the usage of\
    \ the frame_num syntax\n   element is not feasible or desirable to recover the\
    \ decoding order,\n   due to the following reasons:\n   o  The receiver is required\
    \ to parse at least one slice header per\n      coded picture (before passing\
    \ the coded data to the decoder).\n   o  Coded slices from multiple coded video\
    \ sequences cannot be\n      interleaved, as the frame number syntax element is\
    \ reset to 0 in\n      each IDR picture.\n   o  The coded fields of a complementary\
    \ field pair share the same\n      value of the frame_num syntax element.  Thus,\
    \ the decoding order\n      of the coded fields of a complementary field pair\
    \ cannot be\n      recovered based on the frame_num syntax element or any other\n\
    \      syntax element of the H.264 coding syntax.\n   The RTP payload format for\
    \ transport of MPEG-4 elementary streams\n   [25] enables interleaving of access\
    \ units and transmission of\n   multiple access units in the same RTP packet.\
    \  An access unit is\n   specified in the H.264 coding standard to comprise all\
    \ NAL units\n   associated with a primary coded picture according to subclause\n\
    \   7.4.1.2 of [1].  Consequently, slices of different pictures cannot be\n  \
    \ interleaved, and the multi-picture slice interleaving technique (see\n   section\
    \ 12.6) for improved error resilience cannot be used.\n"
- title: 14.  Acknowledgements
  contents:
  - "14.  Acknowledgements\n   The authors thank Roni Even, Dave Lindbergh, Philippe\
    \ Gentric,\n   Gonzalo Camarillo, Gary Sullivan, Joerg Ott, and Colin Perkins\
    \ for\n   careful review.\n"
- title: 15.  References
  contents:
  - '15.  References

    '
- title: 15.1.  Normative References
  contents:
  - "15.1.  Normative References\n   [1]  ITU-T Recommendation H.264, \"Advanced video\
    \ coding for generic\n        audiovisual services\", May 2003.\n   [2]  ISO/IEC\
    \ International Standard 14496-10:2003.\n   [3]  Bradner, S., \"Key words for\
    \ use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [4]  Schulzrinne, H.,  Casner, S., Frederick, R., and V. Jacobson,\n\
    \        \"RTP: A Transport Protocol for Real-Time Applications\", STD 64,\n \
    \       RFC 3550, July 2003.\n   [5]  Handley, M. and V. Jacobson, \"SDP: Session\
    \ Description\n        Protocol\", RFC 2327, April 1998.\n   [6]  Josefsson, S.,\
    \ \"The Base16, Base32, and Base64 Data Encodings\",\n        RFC 3548, July 2003.\n\
    \   [7]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model with\n    \
    \    Session Description Protocol (SDP)\", RFC 3264, June 2002.\n"
- title: 15.2.  Informative References
  contents:
  - "15.2.  Informative References\n   [8]  \"Draft ITU-T Recommendation and Final\
    \ Draft International\n        Standard of Joint Video Specification (ITU-T Rec.\
    \ H.264 |\n        ISO/IEC 14496-10 AVC)\", available from http://ftp3.itu.int/av-\n\
    \        arch/jvt-site/2003_03_Pattaya/JVT-G050r1.zip, May 2003.\n   [9]  Luthra,\
    \ A., Sullivan, G.J., and T. Wiegand (eds.), Special Issue\n        on H.264/AVC.\
    \ IEEE Transactions on Circuits and Systems on Video\n        Technology, July\
    \ 2003.\n   [10] Bormann, C., Cline, L., Deisher, G., Gardos, T., Maciocco, C.,\n\
    \        Newell, D., Ott, J., Sullivan, G., Wenger, S., and C. Zhu, \"RTP\n  \
    \      Payload Format for the 1998 Version of ITU-T Rec. H.263 Video\n       \
    \ (H.263+)\", RFC 2429, October 1998.\n   [11] ISO/IEC IS 14496-2.\n   [12] Wenger,\
    \ S., \"H.26L over IP\", IEEE Transaction on Circuits and\n        Systems for\
    \ Video technology, Vol. 13, No. 7, July 2003.\n   [13] Wenger, S., \"H.26L over\
    \ IP: The IP Network Adaptation Layer\",\n        Proceedings Packet Video Workshop\
    \ 02, April 2002.\n   [14] Stockhammer, T., Hannuksela, M.M., and S. Wenger, \"\
    H.26L/JVT\n        Coding Network Abstraction Layer and IP-based Transport\" in\n\
    \        Proc. ICIP 2002, Rochester, NY, September 2002.\n   [15] ITU-T Recommendation\
    \ H.241, \"Extended video procedures and\n        control signals for H.300 series\
    \ terminals\", 2004.\n   [16] Schulzrinne, H. and S. Casner, \"RTP Profile for\
    \ Audio and Video\n        Conferences with Minimal Control\", STD 65, RFC 3551,\
    \ July 2003.\n   [17] ITU-T Recommendation H.223, \"Multiplexing protocol for\
    \ low bit\n        rate multimedia communication\", July 2001.\n   [18] Rosenberg,\
    \ J. and H. Schulzrinne, \"An RTP Payload Format for\n        Generic Forward\
    \ Error Correction\", RFC 2733, December 1999.\n   [19] Stockhammer, T., Wiegand,\
    \ T., Oelbaum, T., and F. Obermeier,\n        \"Video Coding and Transport Layer\
    \ Techniques for H.264/AVC-Based\n        Transmission over Packet-Lossy Networks\"\
    , IEEE International\n        Conference on Image Processing (ICIP 2003), Barcelona,\
    \ Spain,\n        September 2003.\n   [20] Varsa, V. and M. Karczewicz, \"Slice\
    \ interleaving in compressed\n        video packetization\", Packet Video Workshop\
    \ 2000.\n   [21] Kang, S.H. and A. Zakhor, \"Packet scheduling algorithm for\n\
    \        wireless video streaming,\" International Packet Video Workshop\n   \
    \     2002.\n   [22] Hannuksela, M.M., \"Enhanced concept of GOP\", JVT-B042,\
    \ available\n        http://ftp3.itu.int/av-arch/video-site/0201_Gen/JVT-B042.doc,\n\
    \        January 2002.\n   [23] Wenger, S., \"Video Redundancy Coding in H.263+\"\
    , 1997\n        International Workshop on Audio-Visual Services over Packet\n\
    \        Networks, September 1997.\n   [24] Wang, Y.-K., Hannuksela, M.M., and\
    \ M. Gabbouj, \"Error Resilient\n        Video Coding Using Unequally Protected\
    \ Key Pictures\", in Proc.\n        International Workshop VLBV03, September 2003.\n\
    \   [25] van der Meer, J., Mackie, D., Swaminathan, V., Singer, D., and\n    \
    \    P. Gentric, \"RTP Payload Format for Transport of MPEG-4\n        Elementary\
    \ Streams\", RFC 3640, November 2003.\n   [26] Baugher, M., McGrew, D., Naslund,\
    \ M., Carrara, E., and K.\n        Norrman, \"The Secure Real-time Transport Protocol\
    \ (SRTP)\", RFC\n        3711, March 2004.\n   [27] Schulzrinne, H., Rao, A.,\
    \ and R. Lanphier, \"Real Time Streaming\n        Protocol (RTSP)\", RFC 2326,\
    \ April 1998.\n   [28] Handley, M., Perkins, C., and E. Whelan, \"Session Announcement\n\
    \        Protocol\", RFC 2974, October 2000.\n   [29] ISO/IEC 14496-15: \"Information\
    \ technology - Coding of audio-\n        visual objects - Part 15: Advanced Video\
    \ Coding (AVC) file\n        format\".\n   [30] Castagno, R. and D. Singer, \"\
    MIME Type Registrations for 3rd\n        Generation Partnership Project (3GPP)\
    \ Multimedia files\", RFC\n        3839, July 2004.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Stephan Wenger\n   TU Berlin / Teles AG\n   Franklinstr.\
    \ 28-29\n   D-10587 Berlin\n   Germany\n   Phone: +49-172-300-0813\n   EMail:\
    \ stewe@stewe.org\n   Miska M. Hannuksela\n   Nokia Corporation\n   P.O. Box 100\n\
    \   33721 Tampere\n   Finland\n   Phone: +358-7180-73151\n   EMail: miska.hannuksela@nokia.com\n\
    \   Thomas Stockhammer\n   Nomor Research\n   D-83346 Bergen\n   Germany\n   Phone:\
    \ +49-8662-419407\n   EMail: stockhammer@nomor.de\n   Magnus Westerlund\n   Multimedia\
    \ Technologies\n   Ericsson Research EAB/TVA/A\n   Ericsson AB\n   Torshamsgatan\
    \ 23\n   SE-164 80 Stockholm\n   Sweden\n   Phone: +46-8-7190000\n   EMail: magnus.westerlund@ericsson.com\n\
    \   David Singer\n   QuickTime Engineering\n   Apple\n   1 Infinite Loop MS 302-3MT\n\
    \   Cupertino\n   CA 95014\n   USA\n   Phone +1 408 974-3162\n   EMail: singer@apple.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
