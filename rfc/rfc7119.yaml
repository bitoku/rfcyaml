- title: __initial_text__
  contents:
  - "      Operation of the IP Flow Information Export (IPFIX) Protocol\n        \
    \                   on IPFIX Mediators\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the operation of the IP Flow Information\n\
    \   Export (IPFIX) protocol specific to IPFIX Mediators, including\n   Template\
    \ and Observation Point management, timing considerations, and\n   other Mediator-specific\
    \ concerns.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7119.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. IPFIX Documents Overview ...................................3\n  \
    \    1.2. IPFIX Mediator Documents Overview ..........................4\n    \
    \  1.3. Relationship with the IPFIX and PSAMP Protocols ............5\n   2. Terminology\
    \ .....................................................5\n   3. Handling IPFIX\
    \ Message Headers ..................................8\n   4. Template Management\
    \ ............................................10\n      4.1. Passing Unmodified\
    \ Templates through an IPFIX Mediator ....11\n           4.1.1. Template Mapping\
    \ and Information Element Ordering ..15\n      4.2. Creating New Templates at\
    \ an IPFIX Mediator ...............17\n      4.3. Handling Unknown Information\
    \ Elements .....................17\n   5. Preserving Original Observation Point\
    \ Information ..............17\n      5.1. originalExporterIPv4Address Information\
    \ Element ...........20\n      5.2. originalExporterIPv6Address Information Element\
    \ ...........20\n   6. Managing Observation Domain IDs ................................20\n\
    \      6.1. originalObservationDomainId Information Element ...........21\n  \
    \ 7. Timing Considerations ..........................................21\n   8.\
    \ Transport Considerations .......................................23\n   9. Collecting\
    \ Process Considerations ..............................23\n   10. Specific Reporting\
    \ Requirements ...............................23\n      10.1. Intermediate Process\
    \ Reliability Statistics\n            Options Template .........................................24\n\
    \      10.2. Flow Key Options Template ................................26\n  \
    \    10.3. intermediateProcessId Information Element ................26\n    \
    \  10.4. ignoredDataRecordTotalCount Information Element ..........27\n   11.\
    \ Operations and Management Considerations ......................27\n   12. Security\
    \ Considerations .......................................28\n   13. IANA Considerations\
    \ ...........................................28\n   14. Acknowledgments ...............................................29\n\
    \   15. References ....................................................29\n  \
    \    15.1. Normative References .....................................29\n    \
    \  15.2. Informative References ...................................30\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IPFIX architectural components in [RFC5470] consist\
    \ of IPFIX\n   Devices and IPFIX Collectors communicating using the IPFIX protocol\n\
    \   [RFC7011], which specifies how to export IP Flow information.  This\n   protocol\
    \ is designed to export information about IP traffic Flows and\n   related measurement\
    \ data, where a Flow is defined by a set of key\n   attributes (e.g., source and\
    \ destination IP address, source and\n   destination port, etc.).\n   However,\
    \ thanks to its Template mechanism, the IPFIX protocol can\n   export any type\
    \ of information, as long as the relevant Information\n   Element is specified\
    \ in the IPFIX Information Model [RFC7012],\n   registered with IANA, or specified\
    \ as an enterprise-specific\n   Information Element.  The IPFIX protocol [RFC7011]\
    \ was not originally\n   written with IPFIX Mediators in mind.  Therefore, the\
    \ IPFIX protocol\n   must be adapted for Intermediate Processes, as defined in\
    \ the IPFIX\n   Mediation Reference Model as specified in Figure A of [RFC6183],\n\
    \   which is based on the IPFIX Mediation Problem Statement [RFC5982].\n   This\
    \ document specifies the IP Flow Information Export (IPFIX)\n   protocol in the\
    \ context of the implementation and deployment of IPFIX\n   Mediators.  The use\
    \ of the IPFIX protocol within an IPFIX Mediator --\n   a device that contains\
    \ both a Collecting Process and an Exporting\n   Process -- has an impact on the\
    \ technical details of the usage of the\n   protocol.  An overview of the technical\
    \ problem is covered in\n   Section 6 of [RFC5982]: loss of original Exporter\
    \ information, loss\n   of base time information, transport sessions management,\
    \ loss of\n   Options Template Information, Template Id management, considerations\n\
    \   for network topology, IPFIX mediation interpretation, and\n   considerations\
    \ for aggregation.\n   The specifications in this document are based on the IPFIX\
    \ protocol\n   specifications [RFC7011], but they are adapted according to the\
    \ IPFIX\n   Mediation Framework [RFC6183].\n"
- title: 1.1.  IPFIX Documents Overview
  contents:
  - "1.1.  IPFIX Documents Overview\n   The IPFIX protocol [RFC7011] provides network\
    \ administrators with\n   access to IP Flow information.\n   The architecture\
    \ for the export of measured IP Flow information out\n   of an IPFIX Exporting\
    \ Process to a Collecting Process is defined in\n   the IPFIX Architecture [RFC5470],\
    \ per the requirements defined in the\n   IPFIX Requirements document, [RFC3917].\n\
    \   The IPFIX Architecture [RFC5470] specifies how IPFIX Data Records and\n  \
    \ Templates are carried via a congestion-aware transport protocol from\n   IPFIX\
    \ Exporting Processes to IPFIX Collecting Processes.\n   IPFIX has a formal description\
    \ of IPFIX Information Elements, their\n   names, types, and additional semantic\
    \ information, as specified in\n   the IPFIX Information Model [RFC7012].  The\
    \ IPFIX Information Element\n   registry [IANA-IPFIX] is maintained by IANA. \
    \ New Information Element\n   definitions can be added to this registry subject\
    \ to an Expert Review\n   [RFC5226], with additional process considerations described\
    \ in\n   [RFC7013]; that document also provides guidelines for authors and\n \
    \  reviewers of new Information Element definitions.  The inline export\n   of\
    \ the Information Element type information is specified in\n   [RFC5610].\n  \
    \ The IPFIX Applicability Statement [RFC5472] describes what type of\n   applications\
    \ can use the IPFIX protocol and how they can use the\n   information provided.\
    \  It furthermore shows how the IPFIX framework\n   relates to other architectures\
    \ and frameworks.\n"
- title: 1.2.  IPFIX Mediator Documents Overview
  contents:
  - "1.2.  IPFIX Mediator Documents Overview\n   \"IP Flow Information Export (IPFIX)\
    \ Mediation: Problem Statement\"\n   [RFC5982] provides an overview of the applicability\
    \ of IPFIX\n   Mediators and defines requirements for IPFIX Mediators in general\n\
    \   terms.  This document is of use largely to define the problems to be\n   solved\
    \ through the deployment of IPFIX Mediators and to provide scope\n   to the role\
    \ of IPFIX Mediators within an IPFIX collection\n   infrastructure.\n   \"IP Flow\
    \ Information Export (IPFIX) Mediation: Framework\" [RFC6183],\n   which details\
    \ the IPFIX Mediation reference model and the components\n   of an IPFIX Mediator,\
    \ provides more architectural details of the\n   arrangement of Intermediate Processes\
    \ within an IPFIX Mediator.\n   Documents specifying the operations of specific\
    \ Intermediate\n   Processes cover the operation of these Processes within the\
    \ IPFIX\n   Mediator framework and comply with the specifications given in this\n\
    \   document; additionally, they may specify the operation of the process\n  \
    \ independently, outside the context of an IPFIX Mediator, when this is\n   appropriate.\
    \  The details of specific Intermediate Processes, when\n   they have additional\
    \ export specifications (e.g., metadata about the\n   intermediate processing\
    \ conveyed through IPFIX Options Templates),\n   are each addressed in their own\
    \ document.  As of today, these\n   documents are:\n   1.  \"IP Flow Anonymization\
    \ Support\", [RFC6235], which describes\n       anonymization techniques for IP\
    \ flow data and the export of\n       anonymized data using the IPFIX protocol.\n\
    \   2.  \"Flow Selection Techniques\" [RFC7014], which describes the\n       process\
    \ of selecting a subset of Flows from all Flows observed at\n       an Observation\
    \ Point, the flow selection motivations, and some\n       specific flow selection\
    \ techniques.\n   3.  \"Flow Aggregation for the IP Flow Information Export (IPFIX)\n\
    \       Protocol\" [RFC7015], which describes Aggregated Flow export\n       within\
    \ the framework of IPFIX Mediators and defines an\n       interoperable, implementation-independent\
    \ method for Aggregated\n       Flow export.\n   This document specifies the IP\
    \ Flow Information Export (IPFIX)\n   protocol specific to Mediation, to which\
    \ all Intermediate Processes\n   must comply.  Some extra specifications might\
    \ be required per\n   Intermediate Process type (in which case, the document specific\
    \ to\n   the Intermediate Process would apply).\n"
- title: 1.3.  Relationship with the IPFIX and PSAMP Protocols
  contents:
  - "1.3.  Relationship with the IPFIX and PSAMP Protocols\n   The specification in\
    \ this document is based on the IPFIX protocol\n   specification [RFC7011].  All\
    \ specifications from [RFC7011] apply\n   unless specified otherwise in this document.\n\
    \   As the Packet Sampling (PSAMP) protocol specifications [RFC5476] are\n   based\
    \ on the IPFIX protocol specifications, the specifications in\n   this document\
    \ are also valid for the PSAMP protocol.  Therefore, the\n   method specified\
    \ by this document also applies to PSAMP.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   [RFC2119].\n   IPFIX-specific terms, such as Observation Domain, Flow,\
    \ Flow Key,\n   Metering Process, Exporting Process, Exporter, IPFIX Device,\n\
    \   Collecting Process, Collector, Template, IPFIX Message, Message\n   Header,\
    \ Template Record, Data Record, Options Template Record, Set,\n   Data Set, Information\
    \ Element, Scope and Transport Session, used in\n   this document are defined\
    \ in [RFC7011].  The PSAMP-specific terms\n   used in this document, such as Filtering\
    \ and Sampling, are defined in\n   [RFC5476].\n   IPFIX Mediation terms related\
    \ to aggregation, such as the Interval,\n   Aggregated Flow and Aggregated Function,\
    \ are defined in [RFC7015].\n   The terminology specific to IPFIX Mediation that\
    \ is used in this\n   document is defined in \"IP Flow Information Export (IPFIX)\
    \ Mediation:\n   Problem Statement\" [RFC5982] and reused in \"IP Flow Information\n\
    \   Export (IPFIX) Mediation: Framework\" [RFC6183].  However, since both\n  \
    \ of those documents are Informational RFCs, the definitions have been\n   reproduced\
    \ and elaborated on here.\n   Similarly, since [RFC6235] is an Experimental RFC,\
    \ the Anonymization\n   Record, Anonymized Data Record, and Intermediate Anonymization\n\
    \   Process terms, specified in [RFC6235], are also reproduced here.\n   In this\
    \ document, as in [RFC7011], [RFC5476], [RFC7015], and\n   [RFC6235], the first\
    \ letter of each IPFIX-specific and PSAMP-specific\n   term is capitalized along\
    \ with the IPFIX Mediation-specific term\n   defined here.\n   In this document,\
    \ we call a stream of records carrying flow- or\n   packet-based information a\
    \ \"record stream\".  The records may be\n   encoded as IPFIX Data Records or\
    \ any other format.\n   Transport Session:   The Transport Session is specified\
    \ in [RFC7011].\n      In Stream Control Transmission Protocol (SCTP), the Transport\n\
    \      Session information is the SCTP association.  In TCP and UDP, the\n   \
    \   Transport Session information corresponds to a 5-tuple {Exporter\n      IP\
    \ address, Collector IP address, Exporter transport port,\n      Collector transport\
    \ port, transport protocol}.\n   Original Exporter:   An Original Exporter is\
    \ the source from which a\n      Mediator receives its record stream.  For simple\
    \ IPFIX mediation\n      without protocol conversion, this is an IPFIX Device\
    \ that hosts\n      the Observation Points where the metered IP packets are observed.\n\
    \   Original Observation Point:   An Observation Point on a Metering\n      Process\
    \ associated with the Original Exporter.  In the case of the\n      Intermediate\
    \ Aggregation Process on an IPFIX Mediator, the\n      Original Observation Point\
    \ can be composed of, but not limited to,\n      a (set of) specific Exporter(s),\
    \ a (set of) specific interface(s)\n      on an Exporter, a (set of) line card(s)\
    \ on an Exporter, or any\n      combinations of these.\n   IPFIX Mediation:  \
    \ IPFIX Mediation is the manipulation and conversion\n      of a record stream\
    \ for subsequent export using the IPFIX protocol.\n   Template Mapping:   A mapping\
    \ from Template Records and/or Options\n      Template Records received by an\
    \ IPFIX Mediator to Template Records\n      and/or Options Template Records sent\
    \ by that IPFIX Mediator.  Each\n      entry in a Template Mapping is scoped by\
    \ incoming or outgoing\n      Transport Session and Observation Domain, as with\
    \ Templates and\n      Options Templates in the IPFIX Protocol.\n   Anonymization\
    \ Record:   A record that defines the properties of the\n      anonymization applied\
    \ to a single Information Element within a\n      single Template or Options Template,\
    \ as in [RFC6235].\n   Anonymized Data Record:   A Data Record within a Data Set\
    \ containing\n      at least one Information Element with anonymized values. \
    \ The\n      Information Element(s) within the Template or Options Template\n\
    \      describing this Data Record SHOULD have a corresponding\n      Anonymization\
    \ Record, as in [RFC6235].\n   The following terms are used in this document to\
    \ describe the\n   architectural entities used by IPFIX Mediation.\n   Intermediate\
    \ Process:   An Intermediate Process takes a record stream\n      as its input\
    \ from Collecting Processes, Metering Processes, IPFIX\n      File Readers, other\
    \ Intermediate Processes, or other record\n      sources; performs some transformations\
    \ on this stream, based upon\n      the content of each record, states maintained\
    \ across multiple\n      records, or other data sources; and passes the transformed\
    \ record\n      stream as its output to Exporting Processes, IPFIX File Writers,\n\
    \      or other Intermediate Processes, in order to perform IPFIX\n      Mediation.\
    \  Typically, an Intermediate Process is hosted by an\n      IPFIX Mediator. \
    \ Alternatively, an Intermediate Process may be\n      hosted by an Original Exporter.\n\
    \   IPFIX Mediator:   An IPFIX Mediator is an IPFIX Device that provides\n   \
    \   IPFIX Mediation by receiving a record stream from some data\n      sources,\
    \ hosting one or more Intermediate Processes to transform\n      that stream,\
    \ and exporting the transformed record stream into\n      IPFIX Messages via an\
    \ Exporting Process.  In the common case, an\n      IPFIX Mediator receives a\
    \ record stream from a Collecting Process,\n      but it could also receive a\
    \ record stream from data sources not\n      encoded using IPFIX, e.g., in the\
    \ case of conversion from the\n      NetFlow V9 protocol [RFC3954] to IPFIX protocol.\n\
    \   Specific Intermediate Processes are described below.\n   Intermediate Conversion\
    \ Process  (as in [RFC6183]): An Intermediate\n      Conversion Process is an\
    \ Intermediate Process that transforms non-\n      IPFIX into IPFIX or manages\
    \ the relation among Templates and\n      states of incoming/outgoing Transport\
    \ Sessions in the case of\n      transport protocol conversion (e.g., from UDP\
    \ to SCTP).\n   Intermediate Aggregation Process  (as in [RFC7015]): an Intermediate\n\
    \      Process (IAP), as in [RFC6183], that aggregates records, based\n      upon\
    \ a set of Flow Keys or functions applied to fields from the\n      record.\n\
    \   Intermediate Correlation Process  (as in [RFC6183]): An Intermediate\n   \
    \   Correlation Process is an Intermediate Process that adds\n      information\
    \ to records, noting correlations among them, or\n      generates new records\
    \ with correlated data from multiple records\n      (e.g., the production of bidirectional\
    \ flow records from\n      unidirectional flow records).\n   Intermediate Anonymization\
    \ Process  (as in [RFC6235]): An\n      intermediate process that takes Data Records\
    \ and transforms them\n      into Anonymized Data Records.\n   Intermediate Selection\
    \ Process  (as in [RFC6183]): An Intermediate\n      Selection Process is an Intermediate\
    \ Process that selects records\n      from a sequence based upon criteria-evaluated\
    \ record values and\n      passes only those records that match the criteria (e.g.,\
    \ Filtering\n      only records from a given network to a given Collector).\n\
    \   Intermediate Flow Selection Process  (as in [RFC7014]: An\n      Intermediate\
    \ Flow Selection Process is an Intermediate Process, as\n      in [RFC6183] that\
    \ takes Flow Records as its input and selects a\n      subset of this set as its\
    \ output.  The Intermediate Flow Selection\n      Process is a more general concept\
    \ than the Intermediate Selection\n      Process as defined in [RFC6183].  While\
    \ an Intermediate Selection\n      Process selects Flow Records from a sequence\
    \ based upon criteria-\n      evaluated Flow record values and only passes on\
    \ those Flow Records\n      that match the criteria, an Intermediate Flow Selection\
    \ Process\n      selects Flow Records using selection criteria applicable to a\n\
    \      larger set of Flow characteristics and information.\n      Note: for more\
    \ information on the difference between Intermediate\n      Flow Selection Process\
    \ and Intermediate Selection Process, see\n      Section 4 in [RFC7014].\n"
- title: 3.  Handling IPFIX Message Headers
  contents:
  - "3.  Handling IPFIX Message Headers\n   The format of the IPFIX Message Header\
    \ as exported by an IPFIX\n   Mediator is shown in Figure 1.  This is identical\
    \ to the format\n   defined for IPFIX in [RFC7011], though Export Time and Observation\n\
    \   Domain ID may be handled differently at certain Mediators, as noted\n   below.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             Version           |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Export Time                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Sequence Number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Observation Domain ID                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                   Figure 1: IPFIX Message Header format\n   The header fields\
    \ as exported by an IPFIX Mediator are described\n   below.\n   Version:\n   \
    \   Version of IPFIX to which this Message conforms.  The value of\n      this\
    \ field is 0x000a for the current version, incrementing by one\n      the version\
    \ used in the NetFlow services export version 9\n      [RFC3954].\n   Length:\n\
    \      Total length of the IPFIX Message, measured in octets, including\n    \
    \  Message Header and Set(s).\n   Export Time:\n      Time at which the IPFIX\
    \ Message Header leaves the IPFIX Mediator,\n      expressed in seconds since\
    \ the UNIX epoch of 1 January 1970 at\n      00:00 UTC, encoded as an unsigned\
    \ 32-bit integer.\n      However, in the specific case of an IPFIX Mediator containing\
    \ an\n      Intermediate Conversion Process, the IPFIX Mediator MAY use the\n\
    \      export time received from the incoming Transport Session.\n   Sequence\
    \ Number:\n      Incremental sequence counter modulo 2^32 of all IPFIX Data Records\n\
    \      sent in the current stream from the current Observation Domain by\n   \
    \   the Exporting Process.  Each SCTP Stream counts sequence numbers\n      separately,\
    \ while all messages in a TCP connection or UDP\n      Transport Session are considered\
    \ to be part of the same stream.\n      This value can be used by the Collecting\
    \ Process to identify\n      whether any IPFIX Data Records have been missed.\
    \  Template and\n      Options Template Records do not increase the Sequence Number.\n\
    \   Observation Domain ID:\n      A 32-bit identifier of the Observation Domain\
    \ that is locally\n      unique to the Exporting Process.  The Exporting Process\
    \ uses the\n      Observation Domain ID to uniquely identify to the Collecting\n\
    \      Process the Observation Domain that metered the Flows.  It is\n      RECOMMENDED\
    \ that this identifier also be unique per IPFIX Device.\n      Collecting Processes\
    \ can use the Transport Session and the\n      Observation Domain ID field to\
    \ separate different export streams\n      originating from the same Exporter.\
    \  The Observation Domain ID is\n      set to 0 when no specific Observation Domain\
    \ ID is relevant for\n      the entire IPFIX Message, for example, when exporting\
    \ the\n      Exporting Process Statistics, or in case of a hierarchy of\n    \
    \  Collectors when aggregated Data Records are exported.\n      See Section 4.1\
    \ for special considerations for Observation Domain\n      management while passing\
    \ unmodified templates through an IPFIX\n      Mediator, and Section 5 for guidelines\
    \ for preservation of\n      original Observation Domain information at an IPFIX\
    \ Mediator.\n   The following specifications, copied over from [RFC7011] have\
    \ some\n   implications in this document:\n      Template Withdrawals MAY appear\
    \ interleaved with Template Sets,\n      Options Template Sets, and Data Sets\
    \ within an IPFIX Message.  In\n      this case, the Templates and Template Withdrawals\
    \ shall be\n      interpreted as taking effect in the order in which they appear\
    \ in\n      the IPFIX Message.\n   If an IPFIX Mediator receives an IPFIX Message\
    \ composed of Template\n   Withdrawals and Template Sets, and if the IPFIX Mediator\
    \ forwards\n   this IPFIX Message, it MUST NOT modify the Set order.  If an IPFIX\n\
    \   Mediator receives IPFIX Messages composed of Template Withdrawals and\n  \
    \ Template Sets, and if the IPFIX Mediator forwards these IPFIX\n   Messages,\
    \ it MUST NOT modify the IPFIX Message order.  Note that the\n   Template Mapping\
    \ (see Section 4.1) is the authoritative source of\n   information on the IPFIX\
    \ Mediator to decide whether the entire IPFIX\n   Messages can be forwarded as\
    \ such.\n"
- title: 4.  Template Management
  contents:
  - "4.  Template Management\n   How an IPFIX Mediator handles the Templates it receives\
    \ from the\n   Original Exporter depends entirely on the nature of the Intermediate\n\
    \   Process running on that IPFIX Mediator.  There are two cases here:\n   1.\
    \  IPFIX Mediators that pass substantially the same Data Records\n       from\
    \ the Original Exporter downstream (e.g., an Intermediate\n       Selection Process),\
    \ pass unmodified Templates as described in\n       Section 4.1; this section\
    \ describes a Template Mapping required\n       to make this work in the general\
    \ case, and the correlation\n       between the received and generated IPFIX Message\
    \ Withdrawals.\n   2.  IPFIX Mediators that export Data Records that are substantially\n\
    \       changed from the Data Records received from the Original Exporter\n  \
    \     follow the guidelines in Section 4.2 instead: in this case, the\n      \
    \ IPFIX Mediator generates new (Options) Template Records as a\n       result\
    \ of the Intermediate Process, and no Template Mapping is\n       required.\n\
    \   Subsequent subsections deal with specific issues in Template\n   management\
    \ that may occur at IPFIX Mediators.\n"
- title: 4.1.  Passing Unmodified Templates through an IPFIX Mediator
  contents:
  - "4.1.  Passing Unmodified Templates through an IPFIX Mediator\n   For some Intermediate\
    \ Processes, the IPFIX Mediator doesn't modify\n   the (Options) Template Record(s)\
    \ content.  A typical example is an\n   Intermediate Flow Selection Process acting\
    \ as distributor, which\n   collects Flow Records from one or more Exporters,\
    \ and based on the\n   content of the Information Elements, redirects the Flow\
    \ Records to\n   the appropriate Collector.  This example is a typical case of\
    \ a\n   single network operation center managing multiple universities: a\n  \
    \ unique IPFIX Collector collects all Flow Records for the common\n   infrastructure,\
    \ but might be re-exporting specific university Flow\n   Records to the responsible\
    \ system administrator.\n   As specified in [RFC7011], the Template IDs are unique\
    \ per Exporter,\n   per Transport Session, and per Observation Domain.  As there\
    \ is no\n   guarantee that, for similar Template Records, the Template IDs\n \
    \  received on the incoming Transport Session and exported to the\n   outgoing\
    \ Transport Session would be same, the IPFIX Mediator MUST\n   maintain a Template\
    \ Mapping composed of related received and exported\n   (Options) Template Records:\n\
    \   o  for each received (Options) Template Record: Template Record\n      Information\
    \ Elements, Template ID, Observation Domain ID, and\n      Transport Session information,\
    \ metadata scoped to the Template (*)\n   o  for each exported (Options) Template\
    \ Record: Template Record\n      Information Elements, Template ID, Collector,\
    \ Observation Domain\n      ID, and Transport Session information metadata scoped\
    \ to the\n      Template (*)\n   (*) The \"metadata scoped to the Template\" encompasses\
    \ the metadata,\n   that are scoped to the Template, and that help to determine\
    \ the\n   semantics of the Template Record.  Note that these metadata are\n  \
    \ typically sent in Data Records described by an Options Template.  An\n   example\
    \ is the flowKeyIndicator.  An IPFIX Mediator could potentially\n   receive two\
    \ different Template IDs, from the same Exporter, with the\n   same Information\
    \ Elements, but with a different set of Flow Keys\n   (indicated by the flowKeyIndicator\
    \ in an Options Template Record).\n   Another example is the combination of anonymizationFlags\
    \ and\n   anonymizationTechnique [RFC6235]).  This metadata information must be\n\
    \   present in the Template Mapping, to stress that the two Template\n   Record\
    \ semantics are different.\n   If an IPFIX Mediator receives an IPFIX Withdrawal\
    \ Message for a\n   (Options) Template Record that is not used anymore in any\
    \ other\n   Template Mappings, the IPFIX Mediator SHOULD export the appropriate\n\
    \   IPFIX Withdrawal Message(s) on the outgoing Transport Session and\n   remove\
    \ the corresponding entry in the Template Mapping.\n   If a (Options) Template\
    \ Record is not used anymore in an outgoing\n   Transport Session, it MUST be\
    \ withdrawn with an IPFIX Template\n   Withdrawal Message on that specific outgoing\
    \ Transport Session, and\n   its entry, MUST be removed from the Template Mapping.\n\
    \   If an incoming or outgoing Transport Session is gracefully shut down\n   or\
    \ reset, the (Options) Template Records corresponding to that\n   Transport Session\
    \ MUST be removed from the Template Mapping.\n   For example, Figure 2 displays\
    \ an example of an Intermediate Flow\n   Selection Process, redistributing Data\
    \ Records to Collectors on the\n   basis of customer networks, i.e., the Route\
    \ Distinguisher (RD).  In\n   this example, the Template Record received from\
    \ the Exporter #1 is\n   reused towards Collector #1, Collector #2, and Collector\
    \ #3, for the\n   customer #1, customer #2, and customer #3, respectively.  In\
    \ this\n   example, the outgoing Template Records exported to the different\n\
    \   Collectors are identical.  As a reminder that the Template ID\n   uniqueness\
    \ is local to the Transport Session and Observation Domain\n   that generated\
    \ the Template ID, a mix of Template ID 256 and 257 has\n   been used.\n     \
    \                                          .---------.\n                     \
    \              Tmpl.       |         |\n                                   ID\
    \    .---->|Collector|<==>Customer 1\n                                   256 \
    \  |     |   #1    |\n                                         |     |       \
    \  |\n                                      RD=100:1 '---------'\n         .--------.\
    \        .--------.    |\n         |        | Tmpl.  |        |----'\n       \
    \  |        | Id     |        |          .---------.\n         |        | 258\
    \    |        | RD=100:2 |         |\n         | IPFIX  |------->| IPFIX  |--------->|Collector|<==>Customer\
    \ 2\n         |Exporter|        |Mediator| Tmpl.    |   #2    |\n         |  \
    \ #1   |        |        | ID 257   |         |\n         |        |        |\
    \        |          '---------'\n         |        |        |        |----.\n\
    \         '--------'        '--------'    |\n                                \
    \      RD=100:3\n                                         |     .---------.\n\
    \                                   Tmpl. |     |         |\n                \
    \                   ID    '---->|Collector|<==>Customer 3\n                  \
    \                 257         |   #3    |\n                                  \
    \             |         |\n                                               '---------'\n\
    \           Figure 2: Intermediate Flow Selection Process Example\n   Figure 3\
    \ shows the Template Mapping for the system shown in Figure 2.\n   +-----------------------------------------------------------------+\n\
    \   | Template Entry A:                                               |\n   |\
    \ Incoming Transport Session information (from Exporter#1):       |\n   |   Source\
    \ IP: <Exporter#1 export IP address>                     |\n   |   Destination\
    \ IP: <IPFIX Mediator IP address>                   |\n   |   Protocol: SCTP \
    \                                               |\n   |   Source Port: <source\
    \ port>                                    |\n   |   Destination Port: 4739 (IPFIX)\
    \                                |\n   | Observation Domain ID: <Observation Domain\
    \ ID>                  |\n   | Template ID: 258                              \
    \                  |\n   | Metadata scoped to the Template : <not applicable in\
    \ this case> |\n   |                                                         \
    \        |\n   | Template Entry B:                                           \
    \    |\n   | Outgoing Transport Session information (to Collector#1):        |\n\
    \   |   Source IP: <IPFIX Mediator IP address>                        |\n   |\
    \   Destination IP: <IPFIX Collector#1 IP address>                |\n   |   Protocol:\
    \ SCTP                                                |\n   |   Source Port: <source\
    \ port>                                    |\n   |   Destination Port: 4739 (IPFIX)\
    \                                |\n   | Observation Domain ID: <Observation Domain\
    \ ID>                  |\n   | Template ID: 256                              \
    \                  |\n   | Metadata scoped to the Template : <not applicable in\
    \ this case> |\n   |                                                         \
    \        |\n   | Template Entry C:                                           \
    \    |\n   | Outgoing Transport Session information (to Collector#2):        |\n\
    \   |   Source IP: <IPFIX Mediator IP address>                        |\n   |\
    \   Destination IP: <IPFIX Collector#2 IP address>                |\n   |   Protocol:\
    \ SCTP                                                |\n   |   Source Port: <source\
    \ port>                                    |\n   |   Destination Port: 4739 (IPFIX)\
    \                                |\n   | Observation Domain ID: <Observation Domain\
    \ ID>                  |\n   | Template ID: 257                              \
    \                  |\n   | Metadata scoped to the Template : <not applicable in\
    \ this case> |\n   |                                                         \
    \        |\n   | Template Entry D:                                           \
    \    |\n   | Outgoing Transport Session information (to Collector#3):        |\n\
    \   |   Source IP: <IPFIX Mediator IP address>                        |\n   |\
    \   Destination IP: <IPFIX Collector#3 IP address>                |\n   |   Protocol:\
    \ SCTP                                                |\n   |   Source Port: <source\
    \ port>                                    |\n   |   Destination Port: 4739 (IPFIX)\
    \                                |\n   | Observation Domain ID: <Observation Domain\
    \ ID>                  |\n   | Template ID: 257                              \
    \                  |\n   | Metadata scoped to the Template : <not applicable in\
    \ this case> |\n   +-----------------------------------------------------------------+\n\
    \               Figure 3: Template Mapping Example: Templates\n   The Template\
    \ Mapping corresponding to Figure 3 is displayed in\n   Figure 4:\n   Template\
    \ Entry A   <----> Template Entry B\n   Template Entry A   <----> Template Entry\
    \ C\n   Template Entry A   <----> Template Entry D\n               Figure 4: Template\
    \ Mapping Example: Mappings\n   Alternatively, the Template Mapping may be optimized\
    \ as in Figure 5:\n                         +--> Template Entry B\n          \
    \               |\n   Template Entry A   <--+--> Template Entry C\n          \
    \               |\n                         +--> Template Entry D\n          \
    \    Figure 5: Template Mapping Example 2: Mappings\n   Note that all examples\
    \ use Transport Sessions based on the SCTP, as\n   simplified use cases.  However,\
    \ the transport protocol would be\n   important in situations such as an Intermediate\
    \ Conversion Process\n   doing transport protocol conversion.\n"
- title: 4.1.1.  Template Mapping and Information Element Ordering
  contents:
  - "4.1.1.  Template Mapping and Information Element Ordering\n   In the situation\
    \ where Original Exporters each export an (Options)\n   Template Record to a single\
    \ IPFIX Mediator, and the (Options)\n   Template Record contains the same Information\
    \ Elements, but in\n   different order, should the IPFIX Mediator maintain a Template\n\
    \   Mapping with a single Export Template Record (see Figure 6) or should\n  \
    \ the IPFIX Mediator maintain multiple independent Template Records\n   (see Figure\
    \ 7) before re-exporting to the Collector?\n           Template Entry A   <--+\n\
    \                                 |\n           Template Entry B   <--+--> Template\
    \ Entry D\n                                 |\n           Template Entry C   <--+\n\
    \                 Figure 6: Template Mapping and Ordering:\n                 \
    \     A single Export Template Record\n           Template Entry A   <--+--> Template\
    \ Entry D\n           Template Entry B   <--+--> Template Entry E\n          \
    \ Template Entry C   <--+--> Template Entry F\n                 Figure 7: Template\
    \ Mapping and Ordering:\n                     Multiple Export Template Records\n\
    \   The answer depends on whether the order of the Information Elements\n   implies\
    \ some specific semantic.  One of the guiding principles in\n   IPFIX protocol\
    \ specifications is that the semantic meaning of one\n   Information Element doesn't\
    \ depend on the value of any other\n   Information Element.  However, there is\
    \ one noticeable exception, as\n   mentioned in [RFC7011]:\n      Multiple Scope\
    \ Fields MAY be present in the Options Template\n      Record, in which case the\
    \ composite scope is the combination of\n      the scopes.  For example, if the\
    \ two scopes are meteringProcessId\n      and templateId, the combined scope is\
    \ this Template for this\n      Metering Process.  If a different order of Scope\
    \ Fields would\n      result in a Record having a different semantic meaning,\
    \ then the\n      order of Scope Fields MUST be preserved by the Exporting Process.\n\
    \      For example, in the context of PSAMP [RFC5476], if the first scope\n  \
    \    defines the filtering function, while the second scope defines the\n    \
    \  sampling function, the order of the scope is important.  Applying\n      the\
    \ sampling function first, followed by the filtering function,\n      would lead\
    \ to potentially different Data Records than applying the\n      filtering function\
    \ first, followed by the sampling function.\n   If an IPFIX Mediator receives,\
    \ from multiple Exporters, Template\n   Records with identical Information Elements,\
    \ but ordered differently,\n   it SHOULD consider those Template Records as identical,\
    \ subject to\n   metadata information in the associated Options Template (for\
    \ example,\n   the Flow Key Options Template, see Section 10.2).\n   If an IPFIX\
    \ Mediator receives, from multiple Exporters, Options\n   Template Records with\
    \ identical and ordered Information Elements in\n   the Scope fields, and with\
    \ identical Information Elements, but\n   ordered differently, in the non-Scope\
    \ fields, it SHOULD consider\n   those Template Records as identical.\n   If an\
    \ IPFIX Mediator receives, from multiple Exporters, Options\n   Template Records\
    \ with identical Information Elements in the Scope\n   field, but ones that are\
    \ ordered differently, it MUST consider those\n   Template Records as semantically\
    \ different.\n"
- title: 4.2.  Creating New Templates at an IPFIX Mediator
  contents:
  - "4.2.  Creating New Templates at an IPFIX Mediator\n   For other Intermediate\
    \ Processes, the IPFIX Mediator generates new\n   (Options) Template Records as\
    \ a result of the Intermediate Process.\n   In these cases, the IPFIX Mediator\
    \ doesn't need to maintain a\n   Template Mapping, as it generates its own series\
    \ of (Options)\n   Template Records.  However, some special cases might still\
    \ require a\n   Template Mapping.  Consider a situation where the IPFIX Mediator\n\
    \   generates new (Options) Template Records based on what it receives\n   from\
    \ the Exporter(s) based on the Intermediate Process function: for\n   example,\
    \ an Intermediate Anonymization process that performs black-\n   marker anonymization\
    \ [RFC6235] on certain Information Elements.  In\n   such cases, it's important\
    \ to keep the correlation between the\n   received (Options) Template Records\
    \ and derived (Options) Template\n   Records in the Template Mapping.  These Template\
    \ Mappings would be\n   kept as in Section 4.1, except that the exported Template\
    \ would not\n   be identical to the received Template.\n   Similar to Exporting\
    \ Processes in any Exporter, an IPFIX Mediator may\n   use the technique for reducing\
    \ redundancy in IPFIX described in\n   [RFC5473].\n"
- title: 4.3.  Handling Unknown Information Elements
  contents:
  - "4.3.  Handling Unknown Information Elements\n   Depending on application requirements,\
    \ Mediators that do not generate\n   new Records SHOULD re-export values for unknown\
    \ Information Elements,\n   for which the Mediator does not have information about\
    \ Information\n   Element data type and semantics.  However, as there may be presence\n\
    \   or ordering dependencies among the unknown Information Elements, the\n   Mediator\
    \ MUST NOT omit fields from such re-exported Records or\n   reorder any fields\
    \ within the Records.\n   Mediators that generate new Records, as in Section 4.2,\
    \ MUST ignore\n   values of Information Elements they do not understand.  If a\
    \ Mediator\n   passes values of Information Elements it does not understand (for\n\
    \   example, when re-exporting Flow Records), it MUST pass them in the\n   order\
    \ in which they were originally received.\n   In any case, Mediators handling\
    \ unknown Information Elements SHOULD\n   log this fact, as it is likely that\
    \ mediation of records containing\n   unknown values will have unintended consequences.\n"
- title: 5.  Preserving Original Observation Point Information
  contents:
  - "5.  Preserving Original Observation Point Information\n   Depending on the use\
    \ case, the Collector in an Exporter/IPFIX\n   Mediator/Collector structure (for\
    \ example, tiered Mediators) may need\n   to receive information about the Original\
    \ Observation Point(s);\n   otherwise, it may wrongly conclude that the IPFIX\
    \ Device exporting\n   the Flow Records, i.e., the IPFIX Mediator, directly observed\
    \ the\n   packets that generated the Flow Records.  Two new Information\n   Elements\
    \ are introduced to address this use case:\n   originalExporterIPv4Address and\
    \ originalExporterIPv6Address.\n   Practically, the Original Exporters will not\
    \ be exporting these\n   Information Elements.  Therefore, the Intermediate Process\
    \ will\n   report the Original Observation Point(s) to the best of its\n   knowledge.\
    \  Note that the Configuration Data Model for IPFIX and\n   PSAMP [RFC6728] may\
    \ report the Original Exporter information out of\n   band.\n   In the IPFIX Mediator,\
    \ the Observation Point(s) may be represented\n   by:\n   o  A single Original\
    \ Exporter (represented by the\n      originalExporterIPv4Address or originalExporterIPv6Address\n\
    \      Information Elements).\n   o  A list of Original Exporters (represented\
    \ by a list of\n      originalExporterIPv4Address or originalExporterIPv6Address\n\
    \      Information Elements).\n   o  Any combination or list of Information Elements\
    \ representing\n      Observation Points.  For example:\n      *  A list of Original\
    \ Exporter interfaces (represented by the\n         originalExporterIPv4Address\
    \ or originalExporterIPv6Address, the\n         ingressInterface, and/or egressInterface\
    \ Information Elements,\n         respectively).\n      *  A list of Original\
    \ Exporter line card (represented by the\n         originalExporterIPv4Address,\
    \ originalExporterIPv6Address, or\n         lineCardId Information Elements, respectively).\n\
    \   Some Information Elements characterizing the Observation Point may be\n  \
    \ added.  For example, the flowDirection Information Element specifies\n   the\
    \ direction of the observation, and, as such, characterizes the\n   Observation\
    \ Point.\n   Any combination of the above representations is possible.  An example\n\
    \   of an Original Observation Point for an Intermediate Aggregation\n   Process\
    \ is displayed in Figure 8.\n   exporterIPv4Address 192.0.2.1\n   exporterIPv4Address\
    \ 192.0.2.2,\n     interface ethernet 0, direction ingress\n     interface ethernet\
    \ 1, direction ingress\n     interface serial 1, direction egress\n     interface\
    \ serial 2, direction egress\n   exporterIPv4Address 192.0.2.3,\n     lineCardId\
    \ 1, direction ingress\n          Figure 8: Complex Observation Point Definition\
    \ Example\n   A Mediator MAY export such complex Original Observation Point\n\
    \   information, depending on application requirements.  If such\n   information\
    \ is exported, the Mediator MUST use [RFC6313] to do so, as\n   described below.\n\
    \   The most generic way to export the Original Observation Point is to\n   use\
    \ a subTemplateMultiList, with the semantic \"exactlyOneOf\".  Taking\n   the\
    \ previous example, the encoding in Figure 9 can be used.\n   Template Record\
    \ 257: exporterIPv4Address\n   Template Record 258: exporterIPv4Address,\n   \
    \                     basicList of ingressInterface, flowDirection\n   Template\
    \ Record 259: exporterIPv4Address, lineCardId, flowDirection\n     Figure 9: Complex\
    \ Observation Point Definition Example: Templates\n   The Original Observation\
    \ Point is modeled with the Data Records\n   corresponding to either Template\
    \ Record 1, Template Record 2, or\n   Template Record 3 but not more than one\
    \ of these (\"exactlyOneOf\"\n   semantic).  This implies that the Flow was observed\
    \ at exactly one of\n   the Observation Points reported.\n   When an IPFIX Mediator\
    \ receives Flow Records containing the Original\n   Observation Point Information\
    \ Element, i.e.,\n   originalExporterIPv4Address or originalExporterIPv6Address,\
    \ the IPFIX\n   Mediator SHOULD NOT modify its value(s) when composing new Flow\n\
    \   Records in the general case.  Known exceptions include anonymization\n   per\
    \ Section 7.2.4 of [RFC6235] and an Intermediate Correlation\n   Process rewriting\
    \ addresses across NAT.  In other words, the Original\n   Observation Point should\
    \ not be replaced with the IPFIX Mediator\n   Observation Point.  The daisy chain\
    \ of (Exporter, Observation Point)\n   representing the path the Flow Records\
    \ took from the Exporter to the\n   top Collector in the Exporter/IPFIX Mediator(s)/Collector\
    \ structure\n   model is out of the scope of this specification.\n   The following\
    \ subsections describe Information Elements for reporting\n   Original Exporter\
    \ addresses as seen by the Collecting Process; note\n   they may be subject to\
    \ network address translation upstream; see\n   [NAT-LOGGING] for more on logging\
    \ in this situation.\n"
- title: 5.1.  originalExporterIPv4Address Information Element
  contents:
  - "5.1.  originalExporterIPv4Address Information Element\n   Name:   originalExporterIPv4Address\n\
    \   Description:   The IPv4 address used by the Exporting Process on an\n    \
    \  Original Exporter, as seen by the Collecting Process on an IPFIX\n      Mediator.\
    \  Used to provide information about the Original\n      Observation Points to\
    \ a downstream Collector.\n   Data Type:   ipv4Address\n   ElementId:   403\n"
- title: 5.2.  originalExporterIPv6Address Information Element
  contents:
  - "5.2.  originalExporterIPv6Address Information Element\n   Name:   originalExporterIPv6Address\n\
    \   Description:   The IPv6 address used by the Exporting Process on an\n    \
    \  Original Exporter, as seen by the Collecting Process on an IPFIX\n      Mediator.\
    \  Used to provide information about the Original\n      Observation Points to\
    \ a downstream Collector.\n   Data Type:   ipv6Address\n   ElementId:   404\n"
- title: 6.  Managing Observation Domain IDs
  contents:
  - "6.  Managing Observation Domain IDs\n   The Observation Domain ID of any IPFIX\
    \ Message containing Flow\n   Records relevant to no particular Observation Domain,\
    \ or to multiple\n   Observation Domains, MUST have an Observation Domain ID of\
    \ 0.\n   IPFIX Mediators that do not change (Options) Template Records MUST\n\
    \   maintain a Template Mapping, as detailed in Section 4.1, to ensure\n   that\
    \ the combination of Observation Domain IDs and Template IDs do\n   not collide\
    \ on export.\n   For IPFIX Mediators that export New (Options) Template Records,\
    \ as in\n   Section 4.2, there are two options for Observation Domain ID\n   management.\
    \  The first and simplest of these is to completely\n   decouple exported Observation\
    \ Domain IDs from received Observation\n   Domain IDs; the IPFIX Mediator, in\
    \ this case, comprises its own set\n   of Observation Domain(s) independent of\
    \ the Observation Domain(s) of\n   the Original Exporters.\n   The second option\
    \ is to provide or maintain a Template Mapping for\n   received (Options) Template\
    \ Records and exported inferred (Options)\n   Template Records, along with the\
    \ appropriate Observation Domain IDs\n   per Transport Session, which ensures\
    \ that the combination of\n   Observation Domain IDs and Template IDs do not collide\
    \ on export.\n   In some cases where the IPFIX Message Header can't contain a\n\
    \   consistent Observation Domain for the entire IPFIX Message, but the\n   Flow\
    \ Records exported from the IPFIX Mediator should contain the\n   Observation\
    \ Domain of the Original Exporter anyway, the (Options)\n   Template Record must\
    \ contain the originalObservationDomainId\n   Information Element, specified in\
    \ Section 6.1.  When an IPFIX\n   Mediator receives Flow Records containing the\n\
    \   originalObservationDomainId Information Element, the IPFIX Mediator\n   MUST\
    \ NOT modify its value(s) when composing new Flow Records with the\n   originalObservationDomainId\
    \ Information Element.\n"
- title: 6.1.  originalObservationDomainId Information Element
  contents:
  - "6.1.  originalObservationDomainId Information Element\n   Name:   originalObservationDomainId\n\
    \   Description:   The Observation Domain ID reported by the Exporting\n     \
    \ Process on an Original Exporter, as seen by the Collecting Process\n      on\
    \ an IPFIX Mediator.  Used to provide information about the\n      Original Observation\
    \ Domain to a downstream Collector.  When\n      cascading through multiple Mediators,\
    \ this identifies the initial\n      Observation Domain in the cascade.\n   Data\
    \ Type:   unsigned32\n   Data Type Semantics:   identifier\n   ElementId:   405\n"
- title: 7.  Timing Considerations
  contents:
  - "7.  Timing Considerations\n   The IPFIX Message Header \"Export Time\" field\
    \ is the time in seconds\n   since 0000 UTC Jan 1, 1970, at which the IPFIX Message\
    \ leaves the\n   IPFIX Mediator.  However, in the specific case of an IPFIX Mediator\n\
    \   containing an Intermediate Conversion Process, the IPFIX Mediator MAY\n  \
    \ use the export time received from the incoming Transport Session.\n   It is\
    \ RECOMMENDED that IPFIX Mediators handle time using absolute\n   timestamps (e.g.,\
    \ flowStartSeconds, flowStartMilliseconds, or\n   flowStartNanoseconds), which\
    \ are specified relative to the UNIX epoch\n   (00:00 UTC 1 Jan 1970) [POSIX.1],\
    \ where possible rather than relative\n   timestamps (e.g., flowStartSysUpTime\
    \ or flowStartDeltaMicroseconds),\n   which are specified relative to protocol\
    \ structures such as system\n   initialization or message export time.\n   The\
    \ latter are difficult to manage for two reasons.  First, they\n   require constant\
    \ translation, as the system initialization time of an\n   intermediate system\
    \ and the export time of an intermediate message\n   will change across mediation\
    \ operations.  Further, relative\n   timestamps introduce range problems.  For\
    \ example, when using the\n   flowStartDeltaMicroseconds and flowEndDeltaMicroseconds\
    \ Information\n   Elements [IANA-IPFIX], the Data Record must be exported within\
    \ a\n   maximum of 71 minutes after its creation.  Otherwise, the 32-bit\n   counter\
    \ would not be sufficient to contain the flow start time\n   offset.  Those time\
    \ constraints might be incompatible with some of\n   the application requirements\
    \ of some Intermediate Processes.\n   Intermediate Processes MUST NOT assume that\
    \ received records appear\n   in flowStartTime, flowEndTime, or observationTime\
    \ order.  An\n   Intermediate Process processing timing information (e.g., an\n\
    \   Intermediate Aggregation Process) MAY ignore records that are\n   significantly\
    \ out of order, in order to meet application-specific\n   state and latency requirements,\
    \ but SHOULD report that records were\n   dropped.\n   When an Intermediate Process\
    \ aggregates information from different\n   Flow Records, the timestamps on exported\
    \ records SHOULD be the\n   minimum of the start times and the maximum of the\
    \ end times in the\n   general case.  However, if the Flow Records do not overlap,\
    \ i.e., if\n   there is a time gap between the times in the Flow Records, then\
    \ the\n   report may be inaccurate.  The IPFIX Mediator is only reporting what\n\
    \   it knows, on the basis of the information made available to it, and\n   there\
    \ may not have been any data to observe during the gap.  Then\n   again, if there\
    \ is an overlap in timestamps, there's the potential of\n   double-accounting:\
    \ different Observation Points may have observed the\n   same traffic simultaneously.\
    \  The specification of the precise rules\n   for applying Flow Record timestamps\
    \ at IPFIX Mediators for all the\n   different situations is out of the scope\
    \ of this document.\n   Note that [RFC7015] provides additional specifications\
    \ for handling\n   of timestamps at an Intermediate Aggregation Process.\n"
- title: 8.  Transport Considerations
  contents:
  - "8.  Transport Considerations\n   SCTP [RFC4960] using the Partially Reliable\
    \ SCTP (PR-SCTP) extension\n   specified in [RFC3758] MUST be implemented by all\
    \ compliant IPFIX\n   Mediator implementations.  TCP [RFC0793] MAY also be implemented\
    \ by\n   implementations compliant with the IPFIX Mediator.  UDP [RFC0768] MAY\n\
    \   also be implemented by compliant IPFIX Mediator implementations.\n   Transport-specific\
    \ considerations for IPFIX Exporters as specified in\n   Sections 8.3, 8.4, 9.1,\
    \ 9.2, and 10 of [RFC7011] apply to IPFIX\n   Mediators as well.\n   SCTP SHOULD\
    \ be used in deployments where IPFIX Mediators and\n   Collectors are communicating\
    \ over links that are susceptible to\n   congestion.  SCTP is capable of providing\
    \ any required degree of\n   reliability.  TCP MAY be used in deployments where\
    \ IPFIX Mediators\n   and Collectors communicate over links that are susceptible\
    \ to\n   congestion, but SCTP is preferred due to its ability to limit back\n\
    \   pressure on Exporters and its message versus stream orientation.  UDP\n  \
    \ MAY be used, although it is not a congestion-aware protocol.\n   However, in\
    \ this case, the IPFIX traffic between IPFIX Mediator and\n   Collector MUST run\
    \ in an environment where IPFIX traffic has been\n   provisioned for and/or separated\
    \ from non-IPFIX traffic, whether\n   physically or virtually.\n"
- title: 9.  Collecting Process Considerations
  contents:
  - "9.  Collecting Process Considerations\n   Any Collecting Process compliant with\
    \ [RFC7011] can receive IPFIX\n   Messages from an IPFIX Mediator.  If the IPFIX\
    \ Mediator uses IPFIX\n   Structured Data [RFC6313] to export Original Exporter\
    \ Information, as\n   in Section 5, the Collecting Process MUST support [RFC6313].\n"
- title: 10.  Specific Reporting Requirements
  contents:
  - "10.  Specific Reporting Requirements\n   IPFIX provides Options Templates for\
    \ the reporting the reliability of\n   processes within the IPFIX Architecture.\
    \  As each Mediator includes\n   at least one IPFIX Exporting Process, they MAY\
    \ use the Exporting\n   Process Reliability Statistics Options Template, as specified\
    \ in\n   [RFC7011].\n   Analogous to the Metering Process Reliability Statistics\
    \ Options\n   Template, also specified in [RFC7011], Mediators MAY implement the\n\
    \   Intermediate Process Reliability Statistics Options Template,\n   specified\
    \ in Sections 10.1, 10.3, and 10.4 define Information\n   Elements used by this\
    \ Options Template.\n   The Flow Keys Options Template, as specified in [RFC7011],\
    \ may\n   require special handling at an IPFIX Mediator, as described in\n   Section\
    \ 10.2.\n   In addition, each Intermediate Process may have its own specific\n\
    \   reporting requirements (e.g., Anonymization Records as in [RFC6235],\n   or\
    \ the Aggregation Counter Distribution Options Template as in\n   [RFC7015]);\
    \ these SHOULD be implemented as necessary, as described in\n   the specification\
    \ for each Intermediate Process.\n"
- title: 10.1.  Intermediate Process Reliability Statistics Options Template
  contents:
  - "10.1.  Intermediate Process Reliability Statistics Options Template\n   The Intermediate\
    \ Process Statistics Options Template specifies the\n   structure of a Data Record\
    \ for reporting Intermediate Process\n   statistics.  It SHOULD contain the following\
    \ Information Elements;\n   the intermediateProcessId Information Element is defined\
    \ in\n   Section 10.3 and the ignoredDataRecordTotalCount Information Element\n\
    \   is defined in Section 10.4:\n   +-----------------------------+-------------------------------------+\n\
    \   | IE                          | Description                         |\n  \
    \ +-----------------------------+-------------------------------------+\n   |\
    \ observationDomainId [scope] | An identifier of the Observation    |\n   |  \
    \                           | Domain (of messages exported by     |\n   |    \
    \                         | this Mediator), locally unique to   |\n   |      \
    \                       | the Intermediate Process, to which  |\n   |        \
    \                     | this statistics record applies.     |\n   |          \
    \                   | ----------------------------------  |\n   | intermediateProcessId\
    \       | An identifier for the Intermediate  |\n   | [scope]                \
    \     | Process to which this statistics    |\n   |                          \
    \   | record applies.                     |\n   |                            \
    \ | ----------------------------------  |\n   | ignoredDataRecordTotalCount |\
    \ The total number of Data Records    |\n   |                             | received\
    \ but not processed by the   |\n   |                             | Intermediate\
    \ Process.               |\n   |                             | ----------------------------------\
    \  |\n   | time first record ignored   | The timestamp of the first record   |\n\
    \   |                             | that was ignored by the             |\n  \
    \ |                             | Intermediate Process.  For Data     |\n   |\
    \                             | Records containing timestamp        |\n   |  \
    \                           | ranges, this SHOULD be taken from   |\n   |    \
    \                         | the start timestamp of the range;   |\n   |      \
    \                       | for data records containing no      |\n   |        \
    \                     | timing information, this SHOULD be  |\n   |          \
    \                   | taken from the Export Time in the   |\n   |            \
    \                 | message header of the IPFIX Message |\n   |              \
    \               | that contains it.  For this         |\n   |                \
    \             | timestamp, any of the following     |\n   |                  \
    \           | timestamp can be used:              |\n   |                    \
    \         | observationTimeSeconds,             |\n   |                      \
    \       | observationTimeMilliseconds,        |\n   |                        \
    \     | observationTimeMicroseconds, or     |\n   |                          \
    \   | observationTimeNanoseconds.         |\n   +-----------------------------+-------------------------------------+\n\
    \   +-----------------------------+-------------------------------------+\n  \
    \ | IE                          | Description                         |\n   +-----------------------------+-------------------------------------+\n\
    \   | time last record ignored    | The timestamp of the last record    |\n  \
    \ |                             | that was ignored by the             |\n   |\
    \                             | Intermediate Process.  For Data     |\n   |  \
    \                           | Records containing timestamp        |\n   |    \
    \                         | ranges, this SHOULD be taken from   |\n   |      \
    \                       | the end timestamp of the range; for |\n   |        \
    \                     | data records containing no timing   |\n   |          \
    \                   | information, this SHOULD be taken   |\n   |            \
    \                 | from the Export Time in the message |\n   |              \
    \               | header of the containing IPFIX      |\n   |                \
    \             | Message.  For this timestamp, any   |\n   |                  \
    \           | of the following timestamp can be   |\n   |                    \
    \         | used: observationTimeSeconds,       |\n   |                      \
    \       | observationTimeMilliseconds,        |\n   |                        \
    \     | observationTimeMicroseconds, or     |\n   |                          \
    \   | observationTimeNanoseconds.         |\n   +-----------------------------+-------------------------------------+\n"
- title: 10.2.  Flow Key Options Template
  contents:
  - "10.2.  Flow Key Options Template\n   The Flow Keys Options Template specifies\
    \ the structure of a Data\n   Record for reporting the Flow Keys of reported Flows.\
    \  A Flow Keys\n   Data Record extends a particular Template Record that is referenced\n\
    \   by its templateId identifier.  The Template Record is extended by\n   specifying\
    \ which of the Information Elements contained in the\n   corresponding Data Records\
    \ describe Flow properties that serve as\n   Flow Keys of the reported Flow. \
    \ This Options Template is defined in\n   Section 4.4 of [RFC7011] and SHOULD\
    \ be used by Mediators for export\n   as defined there.\n   When an Intermediate\
    \ Process exports Data Records containing\n   different Flow Keys from those received\
    \ from the Original Exporter,\n   and the Original Exporter sent a Flow Keys Options\
    \ record to the\n   IPFIX Mediator, the IPFIX Mediator MUST export a Flow Keys\
    \ Options\n   record defining the new set of Flow Keys.\n"
- title: 10.3.  intermediateProcessId Information Element
  contents:
  - "10.3.  intermediateProcessId Information Element\n   Name:   intermediateProcessId\n\
    \   Description:   An identifier of an Intermediate Process that is\n      unique\
    \ per IPFIX Device.  Typically, this Information Element is\n      used for limiting\
    \ the scope of other Information Elements.  Note\n      that process identifiers\
    \ may be assigned dynamically; that is, an\n      Intermediate Process may be\
    \ restarted with a different ID.\n   Data Type:   unsigned32\n   Data Type Semantics:\
    \   identifier\n   ElementId:   406\n"
- title: 10.4.  ignoredDataRecordTotalCount Information Element
  contents:
  - "10.4.  ignoredDataRecordTotalCount Information Element\n   Name:   ignoredDataRecordTotalCount\n\
    \   Description:   The total number of received Data Records that the\n      Intermediate\
    \ Process did not process since the (re-)initialization\n      of the Intermediate\
    \ Process; includes only Data Records not\n      examined or otherwise handled\
    \ by the Intermediate Process due to\n      resource constraints, not Data Records\
    \ that were examined or\n      otherwise handled by the Intermediate Process but\
    \ those that\n      merely do not contribute to any exported Data Record due to\
    \ the\n      operations performed by the Intermediate Process.\n   Data Type:\
    \   unsigned64\n   Data Type Semantics:   totalCounter\n   ElementId:   407\n"
- title: 11.  Operations and Management Considerations
  contents:
  - "11.  Operations and Management Considerations\n   In general, using IPFIX Mediators\
    \ to combine information from\n   multiple Original Exporters requires a consistent\
    \ configuration of\n   the Metering Processes behind these Original Exporters.\
    \  The details\n   of this consistency are specific to each Intermediate Process.\n\
    \   Consistency of configuration should be verified out of band, with the\n  \
    \ MIB modules ([RFC6615] and [RFC6727]) or with the Configuration Data\n   Model\
    \ for IPFIX and PSAMP [RFC6728].\n   From an operational perspective, this specification\
    \ provides all the\n   information required to set up IPFIX Mediators and Collectors\
    \ behind\n   IPFIX Mediators.  While configuring the IPFIX Mediators, care must\
    \ be\n   taken to include all the relevant information so that the Collectors\n\
    \   deduce the Data Records precise semantic.  This is covered by the\n   Template\
    \ Mapping specifications in Section 4.1.  Also, caution must\n   be taken that\
    \ if something is not carefully configured in the\n   processing chain, this can\
    \ lead to the wrong interpretation of\n   collected IPFIX data, and the associated\
    \ applications can produce\n   results that are not operationally meaningful.\n"
- title: 12.  Security Considerations
  contents:
  - "12.  Security Considerations\n   As they act as both IPFIX Collecting Processes\
    \ and Exporting\n   Processes, the Security Considerations for the IPFIX Protocol\n\
    \   [RFC7011] also apply to IPFIX Mediators.  The Security Considerations\n  \
    \ for IPFIX Files [RFC5655] also apply to IPFIX Mediators that write\n   IPFIX\
    \ Files or use them for internal storage.  However, there are a\n   few specific\
    \ considerations that IPFIX Mediator implementations must\n   also take into account.\n\
    \   By design, IPFIX Mediators are \"men in the middle\": they intercede in\n\
    \   the communication between an Original Exporter (or another upstream\n   IPFIX\
    \ Mediator) and a downstream Collecting Process.  This has two\n   important implications\
    \ for the level of confidentiality provided\n   across an IPFIX Mediator and the\
    \ ability to protect data integrity\n   and Original Exporter authenticity across\
    \ an IPFIX Mediator.  These\n   are addressed in more detail in the Security Considerations\
    \ for IPFIX\n   Mediators in [RFC6183].\n   Note that while IPFIX Mediators can\
    \ use the exporterCertificate and\n   collectorCertificate Information Elements\
    \ defined in [RFC5655] as\n   described in Section 9.3 of [RFC6183] to export\
    \ information about\n   X.509 identities in upstream TLS-protected Transport Sessions,\
    \ this\n   mechanism cannot be used to provide true end-to-end assertions about\n\
    \   a chain of IPFIX Mediators: any IPFIX Mediator in the chain can\n   simply\
    \ falsify the information about upstream Transport Sessions.  In\n   situations\
    \ where information about the chain of mediation is\n   important, it must be\
    \ determined out of band.  Note as well that an\n   Exporting Process has no in-band\
    \ way to determine whether or not a\n   given Collecting Process will act as a\
    \ Mediator.  Trust placed in\n   Collecting Processes is absolute, so care should\
    \ be taken when\n   exporting IPFIX Messages between Exporting Processes and Collecting\n\
    \   Processes controlled by different entities.\n"
- title: 13.  IANA Considerations
  contents:
  - "13.  IANA Considerations\n   This document specifies new IPFIX Information Elements,\n\
    \   originalExporterIPv4Address in Section 5.1,\n   originalExporterIPv6Address\
    \ in Section 5.2,\n   originalObservationDomainId in Section 6.1, intermediateProcessId\
    \ in\n   Section 10.3, and ignoredDataRecordTotalCount in Section 10.4, which\n\
    \   have been added to the IPFIX Information Element registry\n   [IANA-IPFIX].\n"
- title: 14.  Acknowledgments
  contents:
  - "14.  Acknowledgments\n   We would like to thank the IPFIX contributors, specifically\
    \ Paul\n   Aitken (THE ultimate IPFIX document reviewer) and Andrew Feren for\n\
    \   their thorough reviews; Nevil Brownlee and Juergen Quittek for\n   shepherding\
    \ this document and chairing the IPFIX Working Group; and\n   to Rahul Patel,\
    \ Meral Shirazipour, and Juergen Schoenwaelder for\n   their feedback and comments.\
    \  This work is materially supported by\n   the European Union Seventh Framework\
    \ Programme under grant agreements\n   257315 (DEMONS) and 318627 (mPlane).\n"
- title: 15.  References
  contents:
  - '15.  References

    '
- title: 15.1.  Normative References
  contents:
  - "15.1.  Normative References\n   [RFC0768]  Postel, J., \"User Datagram Protocol\"\
    , STD 6, RFC 768,\n              August 1980.\n   [RFC0793]  Postel, J., \"Transmission\
    \ Control Protocol\", STD 7, RFC\n              793, September 1981.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3758]  Stewart, R., Ramalho,\
    \ M., Xie, Q., Tuexen, M., and P.\n              Conrad, \"Stream Control Transmission\
    \ Protocol (SCTP)\n              Partial Reliability Extension\", RFC 3758, May\
    \ 2004.\n   [RFC4960]  Stewart, R., \"Stream Control Transmission Protocol\",\
    \ RFC\n              4960, September 2007.\n   [RFC5226]  Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\"\
    , BCP 26, RFC 5226,\n              May 2008.\n   [RFC5655]  Trammell, B., Boschi,\
    \ E., Mark, L., Zseby, T., and A.\n              Wagner, \"Specification of the\
    \ IP Flow Information Export\n              (IPFIX) File Format\", RFC 5655, October\
    \ 2009.\n   [RFC6313]  Claise, B., Dhandapani, G., Aitken, P., and S. Yates,\n\
    \              \"Export of Structured Data in IP Flow Information Export\n   \
    \           (IPFIX)\", RFC 6313, July 2011.\n   [RFC6615]  Dietz, T., Kobayashi,\
    \ A., Claise, B., and G. Muenz,\n              \"Definitions of Managed Objects\
    \ for IP Flow Information\n              Export\", RFC 6615, June 2012.\n   [RFC6727]\
    \  Dietz, T., Claise, B., and J. Quittek, \"Definitions of\n              Managed\
    \ Objects for Packet Sampling\", RFC 6727, October\n              2012.\n   [RFC6728]\
    \  Muenz, G., Claise, B., and P. Aitken, \"Configuration Data\n              Model\
    \ for the IP Flow Information Export (IPFIX) and\n              Packet Sampling\
    \ (PSAMP) Protocols\", RFC 6728, October\n              2012.\n   [RFC7011]  Claise,\
    \ B., Trammell, B., and P. Aitken, \"Specification of\n              the IP Flow\
    \ Information Export (IPFIX) Protocol for the\n              Exchange of Flow\
    \ Information\", STD 77, RFC 7011, September\n              2013.\n   [RFC7012]\
    \  Claise, B. and B. Trammell, \"Information Model for IP Flow\n             \
    \ Information Export (IPFIX)\", RFC 7012, September 2013.\n   [RFC7013]  Trammell,\
    \ B. and B. Claise, \"Guidelines for Authors and\n              Reviewers of IP\
    \ Flow Information Export (IPFIX)\n              Information Elements\", BCP 184,\
    \ RFC 7013, September 2013.\n   [RFC7014]  D'Antonio, S., Zseby, T., Henke, C.,\
    \ and L. Peluso, \"Flow\n              Selection Techniques\", RFC 7014, September\
    \ 2013.\n   [RFC7015]  Trammell, B., Wagner, A., and B. Claise, \"Flow Aggregation\n\
    \              for the IP Flow Information Export (IPFIX) Protocol\", RFC\n  \
    \            7015, September 2013.\n"
- title: 15.2.  Informative References
  contents:
  - "15.2.  Informative References\n   [RFC3917]  Quittek, J., Zseby, T., Claise,\
    \ B., and S. Zander,\n              \"Requirements for IP Flow Information Export\
    \ (IPFIX)\", RFC\n              3917, October 2004.\n   [RFC3954]  Claise, B.,\
    \ \"Cisco Systems NetFlow Services Export Version\n              9\", RFC 3954,\
    \ October 2004.\n   [RFC5470]  Sadasivan, G., Brownlee, N., Claise, B., and J.\
    \ Quittek,\n              \"Architecture for IP Flow Information Export\", RFC\
    \ 5470,\n              March 2009.\n   [RFC5472]  Zseby, T., Boschi, E., Brownlee,\
    \ N., and B. Claise, \"IP\n              Flow Information Export (IPFIX) Applicability\"\
    , RFC 5472,\n              March 2009.\n   [RFC5473]  Boschi, E., Mark, L., and\
    \ B. Claise, \"Reducing Redundancy\n              in IP Flow Information Export\
    \ (IPFIX) and Packet Sampling\n              (PSAMP) Reports\", RFC 5473, March\
    \ 2009.\n   [RFC5476]  Claise, B., Johnson, A., and J. Quittek, \"Packet Sampling\n\
    \              (PSAMP) Protocol Specifications\", RFC 5476, March 2009.\n   [RFC5610]\
    \  Boschi, E., Trammell, B., Mark, L., and T. Zseby,\n              \"Exporting\
    \ Type Information for IP Flow Information Export\n              (IPFIX) Information\
    \ Elements\", RFC 5610, July 2009.\n   [RFC5982]  Kobayashi, A. and B. Claise,\
    \ \"IP Flow Information Export\n              (IPFIX) Mediation: Problem Statement\"\
    , RFC 5982, August\n              2010.\n   [RFC6183]  Kobayashi, A., Claise,\
    \ B., Muenz, G., and K. Ishibashi,\n              \"IP Flow Information Export\
    \ (IPFIX) Mediation: Framework\",\n              RFC 6183, April 2011.\n   [RFC6235]\
    \  Boschi, E. and B. Trammell, \"IP Flow Anonymization\n              Support\"\
    , RFC 6235, May 2011.\n   [NAT-LOGGING]\n              Sivakumar, S. and R. Penno,\
    \ \"IPFIX Information Elements\n              for logging NAT Events\", Work in\
    \ Progress, November 2013.\n   [IANA-IPFIX]\n              IANA, \"IP Flow Information\
    \ Export (IPFIX) Entities\",\n              <http://www.iana.org/assignments/ipfix>.\n\
    \   [POSIX.1]  IEEE, \"IEEE Standard for Information Technology - Portable\n \
    \             Operating System Interface\", IEEE 1003.1-2008, 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Benoit Claise\n   Cisco Systems, Inc.\n   De Kleetlaan\
    \ 6a b1\n   1831 Diegem\n   Belgium\n   Phone: +32 2 704 5622\n   EMail: bclaise@cisco.com\n\
    \   Atsushi Kobayashi\n   NTT Information Sharing Platform Laboratories\n   3-9-11\
    \ Midori-cho\n   Musashino-shi, Tokyo 180-8585\n   Japan\n   Phone: +81 422 59\
    \ 3978\n   EMail: akoba@nttv6.net\n   Brian Trammell\n   Swiss Federal Institute\
    \ of Technology Zurich\n   Gloriastrasse 35\n   8092 Zurich\n   Switzerland\n\
    \   Phone: +41 44 632 70 13\n   EMail: trammell@tik.ee.ethz.ch\n"
