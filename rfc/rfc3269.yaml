- title: __initial_text__
  contents:
  - ''
- title: Author Guidelines for Reliable Multicast Transport (RMT) Building Blocks
  contents:
  - "Author Guidelines for Reliable Multicast Transport (RMT) Building Blocks\n  \
    \                and Protocol Instantiation documents\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides general guidelines to assist the authors\
    \ of\n   Reliable Multicast Transport (RMT) building block and protocol\n   instantiation\
    \ definitions.  The purpose of these guidelines is to\n   ensure that any building\
    \ block and protocol instantiation definitions\n   produced contain sufficient\
    \ information to fully explain their\n   operation and use.  In addition these\
    \ guidelines provide directions\n   to specify modular and clearly defined RMT\
    \ building blocks and\n   protocol instantiations that can be refined and augmented\
    \ to safely\n   create new protocols for use in new scenarios for which any existing\n\
    \   protocols were not designed.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   2.2.1 Applicability Statement ....................................\
    \  7\n   2.2.2 Architecture Definition ....................................  7\n\
    \   2.2.3 Conformance Statement ......................................  8\n  \
    \ 2.2.4 Functionality Definition ...................................  8\n   2.2.5\
    \ Packet Formats .............................................  9\n   2.2.6 Summary\
    \ Checklist ..........................................  9\n   3 IANA Considerations\
    \ ............................................  9\n   4 Acknowledgements ...............................................\
    \ 10\n   5 References ..................................................... 10\n\
    \   6 Authors' Addresses ............................................. 11\n  \
    \ 7 Full Copyright Statement ....................................... 12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Reliable Multicast Transport (RMT) protocols can be constructed\
    \ in a\n   variety of ways, some of which will work better for certain\n   situations\
    \ than others.  It is believed that the requirements space\n   for reliable multicast\
    \ transport is sufficiently diverse that no one\n   protocol can meet all the\
    \ requirements [RFC2887].  However, it is\n   also believed that there is sufficient\
    \ commonality between the\n   various approaches that it should be possible to\
    \ define a number of\n   building blocks [RFC3048] from which the various RMT\
    \ protocols can be\n   constructed.\n   One key benefit of this approach is that\
    \ the same building block can\n   be used multiple times in different protocol\
    \ instantiations.  Another\n   key benefit is that building blocks may be upgraded\
    \ as experience and\n   understanding is gained.  For this operation to be possible\
    \ the\n   building block needs to be clearly defined in terms of what it does,\n\
    \   how it interacts with other building blocks, and how it fits into the\n  \
    \ overall architecture of a protocol instantiation.  This description\n   should\
    \ also be sufficiently detailed so that those wishing to improve\n   upon a particular\
    \ building block or protocol instantiation can do so\n   with a full understanding\
    \ of the design decisions and tradeoffs that\n   were made earlier.\n   The building\
    \ block approach also presents some dangers that must be\n   well understood in\
    \ order to avoid potential specification flaws.\n   The most important danger\
    \ is related to inappropriate usage of\n   building blocks.  Although efforts\
    \ should be made in order to produce\n   a modular and reusable specification\
    \ of building blocks, for\n   practical reasons this goal is not always fully\
    \ achievable.  This\n   results in the specification of building blocks whose\
    \ applicability\n   is context dependent, which in turn creates the potential\
    \ for the\n   risk of co-dependence incompatibilities between building blocks.\
    \  An\n   example of such an incompatibility would be situation where the\n  \
    \ combinations of building blocks A and B works, the combination of\n   building\
    \ blocks B and C works, however the combination of building\n   blocks A, B, and\
    \ C does not work.\n   In order to avoid misusage of and incompatibilities between\
    \ building\n   blocks, any external dependency must be highlighted in the building\n\
    \   block specification.  Furthermore, the specification must contain a\n   precise\
    \ applicability statement for the building block.  Conversely,\n   any protocol\
    \ instantiation specification must state how any building\n   block being used\
    \ in it meets the protocol instantiation's\n   applicability requirements.  These\
    \ guidelines are not intended to\n   replace the common practice of Internet specification\
    \ writing, but to\n   augment them in a manner that better fits the RMT framework.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [RFC2119].\n"
- title: 2.  The Guidelines
  contents:
  - "2.  The Guidelines\n   This document provides guidelines for authors of the two\
    \ main kinds\n   of RMT documents; building block documents and protocol instantiation\n\
    \   documents.  The guidelines for each are as follows.\n"
- title: 2.1.  Building Block Document Guidelines
  contents:
  - "2.1.  Building Block Document Guidelines\n   All RMT Building block documents\
    \ MUST contain sections that cover the\n   following.\n"
- title: 2.1.1.  Rationale
  contents:
  - "2.1.1.  Rationale\n   Individual building blocks SHOULD be reusable within multiple\n\
    \   protocols and MUST provide functionality not present within other\n   building\
    \ blocks.  If a building block is currently used in a single\n   protocol instantiation,\
    \ then it MUST specify some functionality that\n   is likely to be reused in another\
    \ (future) protocol instantiation.\n   The rationale section of a building block\
    \ document must clearly\n   define why the particular level of granularity for\
    \ the functional\n   decomposition resulted in that building block being chosen.\
    \  If the\n   granularity is too small it is highly likely that the building blocks\n\
    \   will be trivial, and therefore require excessive additional effort to\n  \
    \ realize a working protocol.  Conversely, if the level of granularity\n   is\
    \ too large, building blocks will only be usable within a single\n   protocol\
    \ instantiation.  The rationale section MUST show that the\n   level of granularity\
    \ is appropriate so that neither problem occurs.\n"
- title: 2.1.2.  Functionality
  contents:
  - "2.1.2.  Functionality\n   The functionality section within a building block document\
    \ MUST\n   describe all algorithms and functions contained within the building\n\
    \   block.  In addition, the external interfaces for accessing these\n   algorithms\
    \ and functions MUST be fully specified so that the building\n   block can be\
    \ combined with other building blocks and any additional\n   functionality specified\
    \ within a protocol instantiation document to\n   realize a working protocol.\n"
- title: 2.1.3.  Applicability Statement
  contents:
  - "2.1.3.  Applicability Statement\n   One of the most important sections of a building\
    \ block document will\n   be the Applicability Statement.  The purpose of this\
    \ section is to\n   provide sufficient details about the intended use of the building\n\
    \   block so that potential authors of protocol instantiations will be\n   able\
    \ to use the building block in conformance to its applicability\n   constraints.\
    \  Also the Applicability Statement section will enable\n   future building block\
    \ document authors to quickly determine whether\n   or not their particular need\
    \ can be met with an existing building\n   block.  For this to be possible the\
    \ Applicability Statement MUST\n   describe:\n   o  Intended scenarios for the\
    \ building block's use.\n   o  The building block's known failure modes, why they\
    \ occur, and how\n      they can be detected.\n   o  A list of environmental considerations\
    \ that includes but is not\n      limited to whether the building block requires\
    \ multi-source\n      multicast or can be used in single-source only multicast\
    \ networks,\n      satellite networks, asymmetric networks, and wireless networks.\n\
    \   o  A list of potential areas of conflict or incompatibilities with\n     \
    \ other building blocks.\n"
- title: 2.1.4.  Packet-Header Fields
  contents:
  - "2.1.4.  Packet-Header Fields\n   If a building block implements a functionality\
    \ whose realization\n   requires an exchange of protocol messages between multiple\
    \ agents,\n   then the building block specification MUST state what kind of\n\
    \   information is required and how the exchanged occurs.  This includes\n   detailed\
    \ description of the data format and various communication\n   requirements, such\
    \ as timing constraints, and network requirements\n   (e.g., multicast vs. unicast\
    \ delivery).\n   Typically the data format specification is at the level of \"\
    generic\n   header fields\" without a full bit-level header specification.\n \
    \  Generic header fields MAY specify additional requirements, such as\n   representation\
    \ precision or preferred position within the packet\n   header (this last constraint\
    \ might be dictated by efficiency\n   concerns).\n   A building block specification\
    \ MAY specify \"abstract messages\" that\n   carry particular information for\
    \ exclusive use within the building\n   block, however, more frequently, it will\
    \ rely on the protocol\n   messages specified in the protocol instantiation to\
    \ carry the\n   information it needs.\n   The building block that provides Generic\
    \ Router Assist functionality\n   is an exception to the rule stated above.  For\
    \ efficiency reasons,\n   this building block may fully specify header fields\
    \ and positions of\n   these fields within the packet-header.\n"
- title: 2.1.5.  Requirements from other Building Blocks
  contents:
  - "2.1.5.  Requirements from other Building Blocks\n   Each building block will\
    \ specify a well defined piece of\n   functionality that is common to multiple\
    \ protocol instantiations.\n   However, this does not mean that building block\
    \ definitions will be\n   generated in isolation from other building blocks. \
    \ For example, a\n   congestion control building block will have specific requirements\n\
    \   regarding loss notification from either a NACK or ACK building block.\n  \
    \ The \"Requirements from other Building Blocks\" section is included to\n   capture\
    \ these requirements so that the authors of related building\n   blocks can determine\
    \ what functionality they need to provide in order\n   to use a particular building\
    \ block.\n   Specifically, the \"Requirements from other Building Blocks section\"\
    \n   MUST provide a complete and exhaustive enumeration of all the\n   requirements\
    \ that will be made upon other building blocks in order\n   for the building block\
    \ being specified to operate in its intended\n   manner.  Requirements that SHOULD\
    \ be enumerated include but are not\n   limited to:\n   o  Event generation for\
    \ and responses to other building blocks.\n   o  Message ordering relative to\
    \ messages from other building blocks.\n"
- title: 2.1.6.  Security Considerations
  contents:
  - "2.1.6.  Security Considerations\n   Protocol instantiations have the ultimate\
    \ responsibility of\n   addressing security requirements, in conformance to RFC\
    \ 2357.\n   Security considerations may not be applicable to generic building\n\
    \   blocks other than a specific \"security\" building block.  Some\n   building\
    \ blocks, however, may raise special security issues, either\n   due to the nature\
    \ of communication required by the building block or\n   due to the intended usage\
    \ of the building block in a protocol\n   instantiation.  When special security\
    \ issues are present in a\n   building block, its specification MUST address them\
    \ explicitly.\n   An example of this might be a building block that involves exchange\n\
    \   of data that is particularly sensitive to security attacks.\n"
- title: 2.1.7.  Codepoint Considerations
  contents:
  - "2.1.7.  Codepoint Considerations\n   Certain Building Blocks will specify general\
    \ frameworks for\n   describing functionality while leaving the detail open for\n\
    \   implementation specific algorithms.  One example of such a building\n   block\
    \ is the Forward Error Correction (FEC) building block which\n   describes the\
    \ framing aspects for FEC message fragments but not the\n   algorithms used to\
    \ generate the redundant data.\n"
- title: 2.1.8.  Summary Checklist
  contents:
  - "2.1.8.  Summary Checklist\n   Rationale\n      _  Provide justification for the\
    \ building block's existence\n      _  Provide rationale for the building block's\
    \ granularity\n   Functionality\n      _  Functionality contained within the building\
    \ block\n      _  External interfaces\n   Applicability Statement\n      _  Intended\
    \ usage\n      _  Failure modes (including means of detection if known)\n    \
    \  _  Environmental considerations\n      _  Incompatibilities / Conflicts with\
    \ other building blocks\n   Packet Header Fields\n      _  Specification of logical\
    \ packet-header fields (*)\n      _  Abstract messages specifications (*)\n  \
    \ Requirements from other building blocks;\n      _  Mandatory needs from other\
    \ building blocks\n   Security Considerations\n      _  Specify as much as possible\
    \ (with respect to procedures,\n         algorithms and data encoding), without\
    \ affecting the general\n         applicability of the building block.\n   (*)\
    \ May not be applicable to some building blocks.\n"
- title: 2.2.  Protocol Instantiation Document Guidelines
  contents:
  - "2.2.  Protocol Instantiation Document Guidelines\n   Protocol Instantiation documents\
    \ have one purpose: to specify how one\n   can combine multiple building blocks\
    \ to construct a new fully\n   specified working protocol.  To that end RMT Protocol\
    \ Instantiation\n   documents MUST contain the following four sections.\n"
- title: 2.2.1.  Applicability Statement
  contents:
  - "2.2.1.  Applicability Statement\n   The applicability statement's purpose is\
    \ to frame the design space in\n   which the fully realized protocol will operate\
    \ and to thereby enable\n   subsequent would-be RMT protocol designers to determine\
    \ whether or\n   not an existing protocol already meets their needs.  For this\
    \ to be\n   possible the applicability statement MUST adhere to the following\n\
    \   guidelines:\n   1) The target application space for which the protocol is\
    \ intended\n      MUST be clearly identified.  For example; is the protocol to\
    \ be\n      used for real-time delivery, or non-real time file transfer?\n   2)\
    \ The target scale, in terms of maximum number of receivers per\n      session,\
    \ for which the protocol is intended MUST be clearly\n      specified.  If the\
    \ protocol has an architectural limitation\n      resulting from the optimization\
    \ of another feature, such as per\n      packet acknowledgment, this SHOULD be\
    \ included.\n   3) The applicability statement MUST identify the intended\n  \
    \    environments for the protocol's use AND list any environments in\n      which\
    \ the protocol should not be used.  Example environments that\n      should be\
    \ considered include asymmetric networks, wireless\n      networks, and satellite\
    \ networks.\n   4) Finally, all protocols have inherent weaknesses that stem from\
    \ the\n      optimization for a specific feature.  These weaknesses can\n    \
    \  manifest in spectacular failure modes when certain conditions\n      occur.\
    \  When known, these conditions and the nature of how the\n      subsequent failure\
    \ can be detected MUST be included in the\n      applicability statement.\n"
- title: 2.2.2.  Architecture Definition
  contents:
  - "2.2.2.  Architecture Definition\n   Protocol Instantiations define how to combine\
    \ one or more building\n   blocks to create a working protocol.  The Architecture\
    \ Definition\n   lays out the framework for how this take place.  For this framework\n\
    \   to be complete, it MUST contain the following information:\n   1) An overview\
    \ of the major facets of the protocol's operation.\n   2) Full enumeration and\
    \ overview of which Building Blocks are used\n      with explicit references to\
    \ their documents that define them.\n   3) An overview of how the aforementioned\
    \ building blocks are to be\n      joined.\n   4) A discussion of the design tradeoffs\
    \ made in the selection of the\n      chosen architecture.\n"
- title: 2.2.3.  Conformance Statement
  contents:
  - "2.2.3.  Conformance Statement\n   The conformance statement below MUST be included\
    \ and adhered to:\n      \"This Protocol Instantiation document, in conjunction\
    \ with the\n      following Building Block documents identified in [list of relevant\n\
    \      building block references] completely specifies a working reliable\n  \
    \    multicast transport protocol that conforms to the requirements\n      described\
    \ in RFC 2357.\"\n   Protocol instantiation document authors are specifically\
    \ reminded\n   that RFC 2357 requires that any RMT protocol put forward for\n\
    \   standardization with the IETF is required to protect the network in\n   as\
    \ much as is possible.  This does not mean that RMT protocols will\n   be held\
    \ to a higher standard than unicast transport protocols, merely\n   that they\
    \ should be designed to perform at least as well as unicast\n   transport protocols\
    \ when it comes to the possibility of protocol\n   failure.\n"
- title: 2.2.4.  Functionality Definition
  contents:
  - "2.2.4.  Functionality Definition\n   Building Block documents will be incomplete\
    \ in that they will specify\n   an abstract framework of a building block's functionality.\
    \  Complete\n   algorithmic specifications for each building block along with\
    \ any\n   additional functionality MUST be provided within the Protocol\n   Instantiation\
    \ document's functionality definition.  Furthermore, this\n   description must\
    \ show that each building block is used in accordance\n   with its respective\
    \ applicability statement.  Finally the\n   functionality description must provide\
    \ a description of the abstract\n   programming interface for interfacing the\
    \ protocol instantiation with\n   the applications that will use it.\n"
- title: 2.2.5.  Packet Formats
  contents:
  - "2.2.5.  Packet Formats\n   Once all the functionality has been fully defined,\
    \ the Protocol\n   Instantiation document must define the packet formats that\
    \ will be\n   used by the protocol.  Each message part and the rules for their\n\
    \   concatenation MUST be specified for both IPv4 [RFC791] and IPv6\n   [RFC2460].\
    \  Support for IPSEC [RFC2401] MUST be explicitly shown.\n   In recognition of\
    \ the fact that protocols will evolve and that IP\n   protocol numbers are a scarce\
    \ resource, protocol instantiations MUST\n   initially define packet formats for\
    \ use over UDP [RFC768].  Whether\n   or not a particular Reliable Multicast Transport\
    \ protocol\n   instantiation becomes sufficiently popular to warrant its own\n\
    \   protocol number is an issue which will be deferred until such time\n   that\
    \ the protocol has been sufficiently widely deployed and\n   understood.\n"
- title: 2.2.6.  Summary Checklist
  contents:
  - "2.2.6.  Summary Checklist\n   Applicability Statement\n      _  Target application\
    \ space\n      _  Target scale\n      _  Intended environment\n      _  Weaknesses\
    \ and known failure modes\n   Architecture Definition\n      _  Operational overview\n\
    \      _  Building blocks used\n      _  Details on how building blocks are joined\n\
    \   Conformance Statement\n      _  Inclusion of mandatory paragraph\n   Functionality\
    \ Definition\n      _  Building block algorithmic specification\n      _  Addition\
    \ functionality specification\n      _  Compliance with building block applicability\
    \ statements\n      _  Abstract program interface\n   Packet Formats\n      _\
    \  IPv4 message parts\n      _  IPv6 message parts\n      _  IPSEC support\n \
    \     _  Message ordering\n"
- title: 3.  IANA Considerations
  contents:
  - "3.  IANA Considerations\n   There are no explicit IANA considerations for this\
    \ document.\n"
- title: 4.  Acknowledgements
  contents:
  - "4.  Acknowledgements\n   This document represents an overview of the mandatory\
    \ elements\n   required for the specification of building blocks and protocol\n\
    \   instantiations within the RMT working group.  The requirements\n   presented\
    \ are a summarization of discussions held between the RMT\n   Working Group chairs\
    \ and the participants in the IRTF Reliable\n   Multicast Research Group.  Although\
    \ the name of these participants\n   are too numerous to list here, the Working\
    \ Group chairs would like to\n   thank everyone who has participated in these\
    \ discussions for their\n   contributions.\n"
- title: 5.  References
  contents:
  - "5.  References\n   [RFC768]  Postel, J., \"User Datagram Protocol\", STD 6, RFC\
    \ 768,\n             August 1980.\n   [RFC791]  Postel, J., \"Darpa Internet Protocol\
    \ Specification\", STD 5,\n             RFC 791, September 1981.\n   [RFC2401]\
    \ Kent, S. and R. Atkinson, \"Security Architecture for the\n             Internet\
    \ Protocol\", RFC 2401, November 1998.\n   [RFC2460] Deering, S. and R. Hinden,\
    \ \"Internet Protocol, Version 6\n             (IPv6) Specification\", RFC2460,\
    \ December 1998.\n   [RFC2887] Handley, M., Floyd, S., Whetten, B., Kermode, R.,\
    \ Vicisano,\n             L. and M. Luby, \"The Reliable Multicast Design Space\
    \ for\n             Bulk Data Transfer\", RFC 2887, August 2000.\n   [RFC3048]\
    \ Whetten, B., Vicisano, L., Kermode, R., Handley, M., Floyd,\n             S.\
    \ and M. Luby, \"Reliable Multicast Transport Building\n             Blocks for\
    \ One-to-Many Bulk-Data Transfer\", RFC 3048,\n             January 2001.\n"
- title: 6.  Authors' Addresses
  contents:
  - "6.  Authors' Addresses\n   Roger Kermode\n   Motorola Australian Research Centre\n\
    \   Locked Bag 5028\n   Botany  NSW  1455,\n   Australia.\n   EMail: Roger.Kermode@motorola.com\n\
    \   Lorenzo Vicisano\n   Cisco Systems,\n   170 West Tasman Dr.\n   San Jose,\
    \ CA 95134, USA\n   EMail: lorenzo@cisco.com\n"
- title: 7.  Full Copyright Statement
  contents:
  - "7.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
