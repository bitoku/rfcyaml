- title: __initial_text__
  contents:
  - "       Wrapping a Hashed Message Authentication Code (HMAC) key\n           with\
    \ a Triple-Data Encryption Standard (DES) Key\n             or an Advanced Encryption\
    \ Standard (AES) Key\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines two methods for wrapping an HMAC (Hashed\n\
    \   Message Authentication Code) key.  The first method defined uses a\n   Triple\
    \ DES (Data Encryption Standard) key to encrypt the HMAC key.\n   The second method\
    \ defined uses an AES (Advanced Encryption Standard)\n   key to encrypt the HMAC\
    \ key.  One place that such an algorithm is\n   used is for the Authenticated\
    \ Data type in CMS (Cryptographic Message\n   Syntax).\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Standard methods exist for encrypting a Triple-DES (3DES)\
    \ content-\n   encryption key (CEK) with a 3DES key-encryption key (KEK) [3DES-\n\
    \   WRAP], and for encrypting an AES CEK with an AES KEK [AES-WRAP].\n   Triple-DES\
    \ key wrap imposes parity restrictions, and in both\n   instances there are restrictions\
    \ on the size of the key being wrapped\n   that make the encryption of HMAC [HMAC]\
    \ keying material difficult.\n   This document specifies a mechanism for the encryption\
    \ of an HMAC key\n   of arbitrary length by a 3DES KEK or an AES KEK.\n   The\
    \ key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n\
    \   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in BCP 14, RFC 2119\n \
    \  [STDWORDS].\n"
- title: 2. HMAC Key Guidelines
  contents:
  - "2. HMAC Key Guidelines\n   [HMAC] suggests that the key be at least as long as\
    \ the output (L) of\n   the hash function being used.  When keys longer than the\
    \ block size\n   of the hash algorithm are used, they are hashed and the resulting\n\
    \   hash value is used.  Using keys much longer than L provides no\n   security\
    \ benefit, unless the random function used to create the key\n   has low entropy\
    \ output.\n"
- title: 3. HMAC Key Wrapping and Unwrapping with Triple-DES
  contents:
  - "3. HMAC Key Wrapping and Unwrapping with Triple-DES\n   This section specifies\
    \ the algorithms for wrapping and unwrapping an\n   HMAC key with a 3DES KEK [3DES].\n\
    \   The 3DES wrapping of HMAC keys is based on the algorithm defined in\n   Section\
    \ 3 of [3DES-WRAP].  The major differences are due to the fact\n   that an HMAC\
    \ key is of variable length and the HMAC key has no\n   particular parity.\n \
    \  In the algorithm description, \"a || b\" is used to represent 'a'\n   concatenated\
    \ with 'b'.\n"
- title: 3.1 Wrapping an HMAC Key with a Triple-DES Key-Encryption Key
  contents:
  - "3.1 Wrapping an HMAC Key with a Triple-DES Key-Encryption Key\n   This algorithm\
    \ encrypts an HMAC key with a 3DES KEK.  The algorithm\n   is:\n   1.  Let the\
    \ HMAC key be called KEY, and let the length of KEY in\n       octets be called\
    \ LENGTH.  LENGTH is a single octet.\n   2.  Let LKEY = LENGTH || KEY.\n   3.\
    \  Let LKEYPAD = LKEY || PAD.  If the length of LKEY is a multiple\n       of\
    \ 8, the PAD has a length of zero.  If the length of LKEY is not\n       a multiple\
    \ of 8, then PAD contains the fewest number of random\n       octets to make the\
    \ length of LKEYPAD a multiple of 8.\n   4.  Compute an 8 octet key checksum value\
    \ on LKEYPAD as described in\n       Section 2 of [3DES-WRAP], call the result\
    \ ICV.\n   5.  Let LKEYPADICV = LKEYPAD || ICV.\n   6.  Generate 8 octets at random,\
    \ call the result IV.\n   7.  Encrypt LKEYPADICV in CBC mode using the 3DES KEK.\
    \  Use the\n       random value generated in the previous step as the initialization\n\
    \       vector (IV).  Call the ciphertext TEMP1.\n   8.  Let TEMP2 = IV || TEMP1.\n\
    \   9.  Reverse the order of the octets in TEMP2.  That is, the most\n       significant\
    \ (first) octet is swapped with the least significant\n       (last) octet, and\
    \ so on.  Call the result TEMP3.\n   10. Encrypt TEMP3 in CBC mode using the 3DES\
    \ KEK.  Use an\n       initialization vector (IV) of 0x4adda22c79e82105.\n   Note:\
    \  When the same HMAC key is wrapped in different 3DES KEKs, a\n   fresh initialization\
    \ vector (IV) must be generated for each\n   invocation of the HMAC key wrap algorithm\
    \ (step 6).\n"
- title: 3.2  Unwrapping an HMAC Key with a Triple-DES Key-Encryption Key
  contents:
  - "3.2  Unwrapping an HMAC Key with a Triple-DES Key-Encryption Key\n   This algorithm\
    \ decrypts an HMAC key using a 3DES KEK.  The algorithm\n   is:\n   1.  If the\
    \ wrapped key is not a multiple of 8 octets, then error.\n   2.  Decrypt the wrapped\
    \ key in CBC mode using the 3DES KEK.  Use an\n       initialization vector (IV)\
    \ of 0x4adda22c79e82105.  Call the\n       output TEMP3.\n   3.  Reverse the order\
    \ of the octets in TEMP3.  That is, the most\n       significant (first) octet\
    \ is swapped with the least significant\n       (last) octet, and so on.  Call\
    \ the result TEMP2.\n   4.  Decompose the TEMP2 into IV and TEMP1.  IV is the\
    \ most\n       significant (first) 8 octets, and TEMP1 is composed of the\n  \
    \     remaining octets.\n   5.  Decrypt TEMP1 in CBC mode using the 3DES KEK.\
    \  Use the IV value\n       from the previous step as the initialization vector.\
    \  Call the\n       plaintext LKEYPADICV.\n   6.  Decompose the LKEYPADICV into\
    \ LKEYPAD, and ICV.  ICV is the least\n       significant (last) 8 octets.  LKEYPAD\
    \ is composed of the\n       remaining octets.\n   7.  Compute an 8 octet key\
    \ checksum value on LKEYPAD as described in\n       Section 2 of [3DES-WRAP].\
    \  If the computed key checksum value\n       does not match the decrypted key\
    \ checksum value, ICV, then error.\n   8.  Decompose the LKEYPAD into LENGTH,\
    \ KEY, and PAD.  LENGTH is the\n       most significant (first) octet.  KEY is\
    \ the following LENGTH of\n       octets.  PAD is the remaining octets, if any.\n\
    \   9.  If the length of PAD is more than 7 octets, then error.\n   10. Use KEY\
    \ as an HMAC key.\n"
- title: 3.3 HMAC Key Wrap with Triple-DES Algorithm Identifier
  contents:
  - "3.3 HMAC Key Wrap with Triple-DES Algorithm Identifier\n   Some security protocols\
    \ employ ASN.1 [X.208-88, X.209-88], and these\n   protocols employ algorithm\
    \ identifiers to name cryptographic\n   algorithms.  To support these protocols,\
    \ the HMAC Key Wrap with\n   Triple-DES algorithm has been assigned the following\
    \ algorithm\n   identifier:\n      id-alg-HMACwith3DESwrap OBJECT IDENTIFIER ::=\
    \ { iso(1)\n          member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n\
    \          smime(16) alg(3) 11 }\n   The AlgorithmIdentifier parameter field MUST\
    \ be NULL.\n"
- title: 3.4 HMAC Key Wrap with Triple-DES Test Vector
  contents:
  - "3.4 HMAC Key Wrap with Triple-DES Test Vector\n   KEK          :  5840df6e 29b02af1\n\
    \                :  ab493b70 5bf16ea1\n                :  ae8338f4 dcc176a8\n\
    \   HMAC_KEY     :  c37b7e64 92584340\n                :  bed12207 80894115\n\
    \                :  5068f738\n   IV           :  050d8c79 e0d56b75\n   PAD   \
    \       :  38be62\n   ICV          :  1f363a31 cdaa9037\n   LKEYPADICV   :  14c37b7e\
    \ 64925843\n                :  40bed122 07808941\n                :  155068f7\
    \ 38be62fe\n                :  1f363a31 cdaa9037\n   TEMP1        :  157a8210\
    \ f432836b\n                :  a618b096 475c864b\n                :  6612969c\
    \ dfa445b1\n                :  5646bd00 500b2cc1\n   TEMP3        :  c12c0b50\
    \ 00bd4656\n                :  b145a4df 9c961266\n                :  4b865c47\
    \ 96b018a6\n                :  6b8332f4 10827a15\n                :  756bd5e0\
    \ 798c0d05\n   Wrapped Key  :  0f1d715d 75a0aaf6\n                :  6f02e371\
    \ c08b79e2\n                :  a1253dc4 3040136b\n                :  dc161118\
    \ 601f2863\n                :  e2929b3b dd17697c\n"
- title: 4. HMAC Key Wrapping and Unwrapping with AES
  contents:
  - "4. HMAC Key Wrapping and Unwrapping with AES\n   This section specifies the algorithms\
    \ for wrapping and unwrapping an\n   HMAC key with an AES KEK [AES-WRAP].\n  \
    \ The AES wrapping of HMAC keys is based on the algorithm defined in\n   [AES-WRAP].\
    \  The major difference is inclusion of padding due to the\n   fact that the length\
    \ of an HMAC key may not be a multiple of 64 bits.\n   In the algorithm description,\
    \ \"a || b\" is used to represent 'a'\n   concatenated with 'b'.\n"
- title: 4.1 Wrapping an HMAC Key with an AES Key-Encryption Key
  contents:
  - "4.1 Wrapping an HMAC Key with an AES Key-Encryption Key\n   This algorithm encrypts\
    \ an HMAC key with an AES KEK.  The algorithm\n   is:\n   1.  Let the HMAC key\
    \ be called KEY, and let the length of KEY in\n       octets be called LENGTH.\
    \  LENGTH is a single octet.\n   2.  Let LKEY = LENGTH || KEY.\n   3.  Let LKEYPAD\
    \ = LKEY || PAD.  If the length of LKEY is a multiple\n       of 8, the PAD has\
    \ a length of zero.  If the length of LKEY is not\n       a multiple of 8, then\
    \ PAD contains the fewest number of random\n       octets to make the length of\
    \ LKEYPAD a multiple of 8.\n   4.  Encrypt LKEYPAD using the AES key wrap algorithm\
    \ specified in\n       section 2.2.1 of [AES-WRAP], using the AES KEK as the encryption\n\
    \       key.  The result is 8 octets longer than LKEYPAD.\n"
- title: 4.2  Unwrapping an HMAC Key with an AES Key
  contents:
  - "4.2  Unwrapping an HMAC Key with an AES Key\n   The AES key unwrap algorithm\
    \ decrypts an HMAC key using an AES KEK.\n   The AES key unwrap algorithm is:\n\
    \   1.  If the wrapped key is not a multiple of 8 octets, then error.\n   2. \
    \ Decrypt the wrapped key using the AES key unwrap algorithm\n       specified\
    \ in section 2.2.2 of [AES-WRAP], using the AES KEK as\n       the decryption\
    \ key.  If the unwrap algorithm internal integrity\n       check fails, then error,\
    \ otherwise call the result LKEYPAD.\n   3.  Decompose the LKEYPAD into LENGTH,\
    \ KEY, and PAD.  LENGTH is the\n       most significant (first) octet.  KEY is\
    \ the following LENGTH of\n       octets.  PAD is the remaining octets, if any.\n\
    \   4.  If the length of PAD is more than 7 octets, then error.\n   5.  Use KEY\
    \ as an HMAC key.\n"
- title: 4.3 HMAC Key Wrap with AES Algorithm Identifier
  contents:
  - "4.3 HMAC Key Wrap with AES Algorithm Identifier\n   Some security protocols employ\
    \ ASN.1 [X.208-88, X.209-88], and these\n   protocols employ algorithm identifiers\
    \ to name cryptographic\n   algorithms.  To support these protocols, the HMAC\
    \ Key Wrap with AES\n   algorithm has been assigned the following algorithm identifier:\n\
    \      id-alg-HMACwithAESwrap OBJECT IDENTIFIER ::= { iso(1)\n          member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n          smime(16) alg(3) 12 }\n\
    \   The AlgorithmIdentifier parameter field MUST be NULL.\n"
- title: 4.4 HMAC Key Wrap with AES Test Vector
  contents:
  - "4.4 HMAC Key Wrap with AES Test Vector\n   KEK          :  5840df6e 29b02af1\n\
    \                :  ab493b70 5bf16ea1\n                :  ae8338f4 dcc176a8\n\
    \   HMAC_KEY     :  c37b7e64 92584340\n                :  bed12207 80894115\n\
    \                :  5068f738\n   PAD          :  050d8c\n   LKEYPAD      :  14c37b7e\
    \ 64925843\n                :  40bed122 07808941\n                :  155068f7\
    \ 38050d8c\n   Wrapped Key  :  9fa0c146 5291ea6d\n                :  b55360c6\
    \ cb95123c\n                :  d47b38cc e84dd804\n                :  fbcec5e3\
    \ 75c3cb13\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   Implementations must protect the key-encryption\
    \ key (KEK).\n   Compromise of the KEK may result in the disclosure of all HMAC\
    \ keys\n   that have been wrapped with the KEK, which may lead to loss of data\n\
    \   integrity protection.\n   The use of these key wrap functions provide confidentiality\
    \ and data\n   integrity, but they do not necessarily provide data origination\n\
    \   authentication.  Anyone possessing the KEK can create a message that\n   passes\
    \ the integrity check.  If data origination authentication is\n   also desired,\
    \ then the KEK distribution mechanism must provide data\n   origin authentication\
    \ of the KEK.  Alternatively, a digital signature\n   may be used.\n   Implementations\
    \ must randomly generate initialization vectors (IVs)\n   and padding.  The generation\
    \ of quality random numbers is difficult.\n   RFC 1750 [RANDOM] offers important\
    \ guidance in this area, and\n   Appendix 3 of FIPS Pub 186 [DSS] provides one\
    \ quality PRNG technique.\n   The key wrap algorithms specified in this document\
    \ have been reviewed\n   for use with Triple-DES and AES, and have not been reviewed\
    \ for use\n   with other encryption algorithms.\n"
- title: 6. References
  contents:
  - '6. References

    '
- title: 6.1  Normative References
  contents:
  - "6.1  Normative References\n   [3DES]      American National Standards Institute.\
    \  ANSI X9.52-1998,\n               Triple Data Encryption Algorithm Modes of\
    \ Operation.\n               1998.\n   [3DES-WRAP] Housley, R., \"Triple-DES and\
    \ RC2 Key Wrapping\", RFC 3217,\n               December 2001.\n   [AES]     \
    \  National Institute of Standards and Technology. FIPS Pub\n               197:\
    \ Advanced Encryption Standard (AES). 26 November\n               2001.\n   [AES-WRAP]\
    \  Schaad, J. and R. Housley, \"Advanced Encryption Standard\n               (AES)\
    \ Key Wrap Algorithm\", RFC 3394, September 2002.\n   [HMAC]      Krawczyk, H.,\
    \ Bellare, M. and R. Canetti, \"HMAC:  Keyed-\n               Hashing for Message\
    \ Authentication\", RFC 2104, February\n               1997.\n   [STDWORDS]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n               Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n"
- title: 6.2 Informative References
  contents:
  - "6.2 Informative References\n   [DSS]       National Institute of Standards and\
    \ Technology. FIPS Pub\n               186: Digital Signature Standard.  19 May\
    \ 1994.\n   [RANDOM]    Eastlake 3rd, D., Crocker, S. and J. Schiller,\n     \
    \          \"Randomness Recommendations for Security\", RFC 1750,\n          \
    \     December 1994.\n   [RFC2026]   Bradner, S., \"The Internet Standards Process\
    \ - Revision\n               3\", BCP 9, RFC 2026, October 1996.\n   [X.208-88]\
    \  CCITT.  Recommendation X.208: Specification of Abstract\n               Syntax\
    \ Notation One (ASN.1).  1988.\n   [X.209-88]  CCITT.  Recommendation X.209: Specification\
    \ of Basic\n               Encoding Rules for Abstract Syntax Notation One (ASN.1).\n\
    \               1988.\n"
- title: 7. Authors' Addresses
  contents:
  - "7. Authors' Addresses\n   Jim Schaad\n   Soaring Hawk Consulting\n   EMail: jimsch@exmsft.com\n\
    \   Russell Housley\n   Vigil Security\n   918 Spring Knoll Drive\n   Herndon,\
    \ VA 20170\n   USA\n   EMail: housley@vigilsec.com\n"
- title: 8. Full Copyright Statement
  contents:
  - "8. Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
