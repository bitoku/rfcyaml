- title: __initial_text__
  contents:
  - '       Functional Recommendations for Internet Resource Locators

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document specifies a minimum set of requirements for\
    \ Internet\n   resource locators, which convey location and access information\
    \ for\n   resources.  Typical examples of resources include network accessible\n\
    \   documents, WAIS databases, FTP servers, and Telnet destinations.\n   Locators\
    \ may apply to resources that are not always or not ever\n   network accessible.\
    \  Examples of the latter include human beings and\n   physical objects that have\
    \ no electronic instantiation (that is,\n   objects without an existence completely\
    \ defined by digital objects\n   such as disk files).\n   A resource locator is\
    \ a kind of resource identifier.  Other kinds of\n   resource identifiers allow\
    \ names and descriptions to be associated\n   with resources.  A resource name\
    \ is intended to provide a stable\n   handle to refer to a resource long after\
    \ the resource itself has\n   moved or perhaps gone out of existence.  A resource\
    \ description\n   comprises a body of meta-information to assist resource search\
    \ and\n   selection.\n   In this document, an Internet resource locator is a locator\
    \ defined\n   by an Internet resource location standard.  A resource location\n\
    \   standard in conjunction with resource description and resource naming\n  \
    \ standards specifies a comprehensive infrastructure for network based\n   information\
    \ dissemination.  Mechanisms for mapping between locators,\n   names, and descriptive\
    \ identifiers are beyond the scope of this\n   document.\n"
- title: 2. Overview of Problem
  contents:
  - "2. Overview of Problem\n   Network-based information resource providers require\
    \ a method of\n   describing the location of and access to their resources.\n\
    \   Information systems users require a method whereby client software\n   can\
    \ interpret resource access and location descriptions on their\n   behalf in a\
    \ relatively transparent way.  Without such a method,\n   transparent and widely\
    \ distributed, open information access on the\n   Internet would be difficult\
    \ if not impossible.\n"
- title: 2.1 Defining the General Resource Locator
  contents:
  - "2.1 Defining the General Resource Locator\n   The requirements listed in this\
    \ document impose restrictions on the\n   general resource locator.  To better\
    \ understand what the Internet\n   resource locator is, the following general\
    \ locator definition\n   provides some contrast.\n        Definition:  A general\
    \ resource locator is an object\n                     that describes the location\
    \ of a resource.\n   This definition deliberately allows many degrees of freedom\
    \ in order\n   to contain the furthest reaches of the wide-ranging debate on\n\
    \   resource location standards.  Vast as it is, this problem space is a\n   useful\
    \ backdrop for discussion of the requirements (later) that\n   generate a smaller,\
    \ more manageable problem space.  A resource\n   location standard shrinks the\
    \ space again by applying additional\n   requirements.\n   Consider the definition\
    \ in four parts: (1) A general resource locator\n   is an object (2) that describes\
    \ (3) the location of (4) a resource.\n"
- title: 2.1.1.  A general resource locator is an object...
  contents:
  - "2.1.1.  A general resource locator is an object...\n   The object could be a\
    \ complex data structure.  It could be a\n   contiguous sequence of bytes.  It\
    \ could be a pair of latitude-\n   longitude coordinates, or a three-color road\
    \ map printed on paper.\n   It could be a sequence of characters that are capable\
    \ of being\n   printed on paper.\n"
- title: 2.1.2.  ...that describes
  contents:
  - "2.1.2.  ...that describes\n   In the fully general case, there are many ways\
    \ that a resource\n   locator could describe the location.  It could employ a\
    \ graphical or\n   natural language description.  It could be heavily encoded\
    \ or\n   compressed.  It could be lightly encoded and readily understandable\n\
    \   by human beings.  The description could be a multi-level hierarchy\n   with\
    \ common semantics at each level.  It could be a multi-level\n   hierarchy with\
    \ common semantics at only the first two levels, where\n   semantics below the\
    \ second level depend on the value given at the\n   first level.  These are just\
    \ a few possibilities.\n"
- title: 2.1.3.  ...the location of
  contents:
  - "2.1.3.  ...the location of\n   A resource locator describes a location but never\
    \ guarantees that\n   access may be established.  While access is often desired\
    \ when\n   clients follow location instructions given in a conformant resource\n\
    \   locator, the resource need not exist any longer or need not exist\n   yet.\
    \  Indeed it may never exist, even though the locator continues to\n   describe\
    \ a location where a resource might exist (e.g., it might be\n   used as a placeholder\
    \ with resource availability contingent upon an\n   event such as a payment).\n\
    \   Furthermore, the nature of certain potential resources, especially\n   animate\
    \ beings or physical objects with no electronic instantiation,\n   makes network\
    \ access meaningless in some cases; such resources have\n   locators that would\
    \ imply non-networked access, but again, access is\n   not guaranteed.\n"
- title: 2.1.4.  ...a resource.
  contents:
  - "2.1.4.  ...a resource.\n   A resource can be many things.  Besides the non-networked\
    \ or non-\n   electronic resources just mentioned, familiar examples are an\n\
    \   electronic document, an image, a server (e.g., FTP, Gopher, Telnet,\n   HTTP),\
    \ or a collection of items (e.g., Gopher menu, FTP directory,\n   HTML page).\
    \  Other examples accompany multi-function protocols such\n   as Z39.50, which\
    \ can perform single round trip network access,\n   session-oriented search refinement,\
    \ and index browsing.\n"
- title: 2.2 Producers and Interpreters of Resource Locators
  contents:
  - "2.2 Producers and Interpreters of Resource Locators\n   Central to the discussion\
    \ of locator requirements is the issue of\n   parsability.  This is the ability\
    \ of an agent to recognize or\n   understand a locator in whole or in part.  Discussion\
    \ may be assisted\n   by clearly distinguishing the two main actions associated\
    \ with\n   locators.\n   Resource locators are both produced and interpreted.\
    \  Producers are\n   bound by the resource location standards that are in turn\
    \ bound by\n   requirements listed in this document.  Interpreters of locators\
    \ are\n   not bound by the requirements; they are beneficiaries of them.\n"
- title: 2.2.1 Resource Locator Interpreters
  contents:
  - "2.2.1 Resource Locator Interpreters\n   A resource locator is interpreted by\
    \ interpreting agents, which in\n   this document are simply called interpreters.\
    \  Interpreters may be\n   either human beings or software.  Along the way to\
    \ establishing\n   access based on information in a locator, one or more interpreters\n\
    \   may be employed.  Some examples of multiple interpreters processing a\n  \
    \ single locator illustrate the concept that a resource locator may be\n   understandable\
    \ only in part by each of several interpreters, but\n   understandable in its\
    \ entirety by a combination of interpreters.\n   In the first example, a software\
    \ interpreter recognizes enough of a\n   locator to understand to which external\
    \ agent it needs to forward it.\n   Here, the external agent might be a user and\
    \ the locator a library\n   call number; the software forwards the locator simply\
    \ by displaying\n   it. The agent might be a network software layer specializing\
    \ in a\n   particular communications protocol; once the service is recognized,\n\
    \   the locator is forwarded to it along with an access request.\n   In another\
    \ example, a human interpreter might also recognize enough\n   of a locator to\
    \ understand where to forward it.  Here, the person\n   might be a user who recognizes\
    \ a library call number as such but who\n   does not understand the location information\
    \ encoded in it; the\n   person forwards it to a library employee (an external\
    \ agent) who\n   knows how to establish access to the library resource.\n   A\
    \ prerequisite to interpreting a locator is understanding when an\n   object in\
    \ question actually is a locator, or contains one or more\n   locators.  Some\
    \ constrained environments make this question easy to\n   answer, for example,\
    \ within HTML anchors or Gopher menu items.  Less\n   constrained environments,\
    \ such as within running text, make it more\n   difficult to answer without well-defined\
    \ assumptions.  A resource\n   location standard needs to make any such assumptions\
    \ explicit.\n"
- title: 2.2.2 Resource Locator Producers
  contents:
  - "2.2.2 Resource Locator Producers\n   Resource locators are produced in many ways,\
    \ often by an agent that\n   also interprets them.  The provider of a resource\
    \ may produce a\n   locator for it, leaving the locator in places where it is\
    \ intended to\n   be discovered, such as an HTML page, a Gopher menu, or an\n\
    \   announcement to an e-mail list.\n   Non-providers of resources can be major\
    \ producers of locators; for\n   example, WWW client software produces locators\
    \ by translating foreign\n   resource locators (e.g., Gopher menu items) to its\
    \ own format.  Some\n   locator databases (e.g., Archie) have been maintained\
    \ by automated\n   processes that produce locators for hundreds of thousands of\
    \ FTP\n   resources that they \"discover\" on the Internet.\n   Users are major\
    \ producers of resource locators.  A user constructing\n   one to share with others\
    \ is responsible for conformance with locator\n   standards.  Sometimes a user\
    \ composes a resource locator based on an\n   educated guess and submits it to\
    \ client software with the intent of\n   establishing access.  Such a user is\
    \ a producer in a sense, but if\n   the locator is purely for personal consumption\
    \ the user is not bound\n   by the requirements.  In fact, some client software\
    \ may offer as a\n   service to translate abbreviated, non-conformant locators\
    \ entered by\n   users into successful access instructions or into conformant\
    \ locators\n   (e.g., by adding a domain name to an unqualified hostname)\n"
- title: 2.3 Uniqueness of Resource Locators
  contents:
  - "2.3 Uniqueness of Resource Locators\n   The topic of a \"uniqueness\" requirement\
    \ for resource locators has\n   been discussed a great deal.  This document considers\
    \ the following\n   aspects of uniqueness, but deliberately rejects them as requirements.\n\
    \   It is incumbent upon a resource location standard that takes on this\n   topic\
    \ to be clear about which aspects it addresses.\n"
- title: 2.3.1. Uniqueness and Multiple Copies of a Resource
  contents:
  - "2.3.1. Uniqueness and Multiple Copies of a Resource\n   A uniqueness requirement\
    \ might dictate that no identical copies of a\n   resource may exist.  This document\
    \ makes no such requirement.\n"
- title: 2.3.2. Uniqueness and Deterministic Access
  contents:
  - "2.3.2. Uniqueness and Deterministic Access\n   A uniqueness requirement might\
    \ dictate that the same resource\n   accessed in one attempt will also be the\
    \ result of any other\n   successful attempt.  This document makes no such requirement,\
    \ nor\n   does it define \"sameness\".  It is inappropriate for a resource\n \
    \  location standard to define \"sameness\" among resources.\n"
- title: 2.3.3. Uniqueness and Multiple Locators
  contents:
  - "2.3.3. Uniqueness and Multiple Locators\n   A uniqueness requirement might dictate\
    \ that a resource have no more\n   than one locator unless all such locators be\
    \ the same.  This document\n   makes no such requirement, nor does it define \"\
    sameness\" among\n   locators (which a standard might do using, for example,\n\
    \   canonicalization rules).\n"
- title: 2.3.4. Uniqueness, Ambiguity, and Multiple Objects per Access
  contents:
  - "2.3.4. Uniqueness, Ambiguity, and Multiple Objects per Access\n   A uniqueness\
    \ requirement might dictate that a resource locator\n   identify exactly one object\
    \ as opposed to several objects.  This\n   document makes no general definition\
    \ of what constitutes one object,\n   several objects, or one object consisting\
    \ of several objects.\n"
- title: 3. Resource Access and Availability
  contents:
  - "3. Resource Access and Availability\n   A locator never guarantees access, but\
    \ establishing access is by far\n   the most important intended application of\
    \ a resource locator.  While\n   it is considered ungracious to advertize a locator\
    \ for a resource\n   that will never be accessible (whether a \"networkable\"\
    \ resource or\n   not), it is normal for resource access to fail at a rate that\n\
    \   increases with the age of the locator used.\n   Resource access can fail for\
    \ many reasons.  Providers fundamentally\n   affect accessibility by moving, replacing,\
    \ or deleting resources over\n   time.  The frequency of such changes depends\
    \ on the nature of the\n   resource and provider service practices, among other\
    \ things.  A\n   locator that conforms to a location standard but fails for one\
    \ of\n   these reasons is called \"invalid\" for the purposes of this document;\n\
    \   the term invalid locator does not apply to malformed or non-\n   conformant\
    \ locators.  Resource naming standards address the problem\n   of invalid locators.\n\
    \   Ordinary provider support policies may cause resources to be\n   inaccessible\
    \ during predictable time periods (e.g., certain hours of\n   the day, or days\
    \ of the year), or during periods of heavy system\n   loading.  Rights clearance\
    \ restrictions impossible to express in a\n   locator also affect accessibility\
    \ for certain user populations.\n   Heavy network load can also prevent access.\
    \  In such situations, this\n   document calls a resource \"unavailable\".  A\
    \ locator can both be valid\n   and identify a resource that is unavailable. \
    \ Resource description\n   standards address, among other things, some aspects\
    \ of resource\n   availability.\n   In general, the probability with which a given\
    \ resource locator leads\n   to successful access decreases over time, and depends\
    \ on conditions\n   such as the nature of the resource, support policies of the\
    \ provider,\n   and loading of the network.\n"
- title: 4. Requirements List for Internet Resource Locators
  contents:
  - "4. Requirements List for Internet Resource Locators\n   This list of requirements\
    \ is applied to the set of general locators\n   defined in section 2.1.  The resulting\
    \ subset, called Internet\n   locators in this document, is suitable for further\
    \ refinement by an\n   Internet resource location standard.  Some requirements\
    \ concern\n   locator encoding while others concern locator function.\n   One\
    \ requirement from the original draft list was dropped after\n   extensive discussion\
    \ revealed it to be impractical to meet.  It\n   stated that with a high degree\
    \ of reliability, software can recognize\n   Internet locators in certain relatively\
    \ unstructured environments,\n   such as within running ASCII text.\n"
- title: 4.1 Locators are transient.
  contents:
  - "4.1 Locators are transient.\n   The probability with which a given Internet resource\
    \ locator leads to\n   successful access decreases over time.  More stable resource\n\
    \   identifier schemes are addressed in resource naming standards and are\n  \
    \ outside the scope of a resource location standard.\n"
- title: 4.2 Locators have global scope.
  contents:
  - "4.2 Locators have global scope.\n   The name space of resource locators includes\
    \ the entire world.  The\n   probability of successful access using an Internet\
    \ locator depends in\n   no way, modulo resource availability, on the geographical\
    \ or Internet\n   location of the client.\n"
- title: 4.3 Locators are parsable.
  contents:
  - "4.3 Locators are parsable.\n   Internet locators can be broken down into complete\
    \ constituent parts\n   sufficient for interpreters (software or human) to attempt\
    \ access if\n   desired.  While these requirements do not bind interpreters, three\n\
    \   points bear emphasizing:\n"
- title: 4.3.1  A given kind of locator may still be parsable even if a given
  contents:
  - "4.3.1  A given kind of locator may still be parsable even if a given\n      \
    \ interpreter cannot parse it.\n"
- title: 4.3.2  Parsable by users does not imply readily parsable by untrained
  contents:
  - "4.3.2  Parsable by users does not imply readily parsable by untrained\n     \
    \  users.\n"
- title: 4.3.3  A given locator need not be completely parsable by any one
  contents:
  - "4.3.3  A given locator need not be completely parsable by any one\n       interpreter\
    \ as long as a combination of interpreters can parse\n       it completely.\n"
- title: 4.4 Locators can be readily distinguished from naming and descriptive
  contents:
  - "4.4 Locators can be readily distinguished from naming and descriptive\n    identifiers\
    \ that may occupy the same name space.\n   During a transition period (of possibly\
    \ indefinite length), other\n   kinds of resource identifier are expected to co-exist\
    \ in data\n   structures along with Internet locators.\n"
- title: 4.5 Locators are "transport-friendly".
  contents:
  - "4.5 Locators are \"transport-friendly\".\n   Internet locators can be transmitted\
    \ from user to user (e.g, via e-\n   mail) across Internet standard communications\
    \ protocols without loss\n   or corruption of information.\n"
- title: 4.6 Locators are human transcribable.
  contents:
  - "4.6 Locators are human transcribable.\n   Users can copy Internet locators from\
    \ one medium to another (such as\n   voice to paper, or paper to keyboard) without\
    \ loss or corruption of\n   information.  This process is not required to be comfortable.\n"
- title: 4.7 An Internet locator consists of a service and an opaque parameter
  contents:
  - "4.7 An Internet locator consists of a service and an opaque parameter\n    package.\n\
    \   The parameter package has meaning only to the service with which it\n   is\
    \ paired, where a service is an abstract access method.  An abstract\n   access\
    \ method might be a software tool, an institution, or a network\n   protocol.\
    \  The parameter package might be service-specific access\n   instructions.  In\
    \ order to protect creative development of new\n   services, there is an extensible\
    \ class of services for which no\n   parameter package semantics common across\
    \ services may be assumed.\n"
- title: 4.8 The set of services is extensible.
  contents:
  - "4.8 The set of services is extensible.\n   New services can be added over time.\n"
- title: 4.9 Locators contain no information about the resource other than that
  contents:
  - "4.9 Locators contain no information about the resource other than that\n    required\
    \ by the access mechanism.\n   The purpose of an Internet locator is only to describe\
    \ the location\n   of a resource, not other properties such as its type, size,\n\
    \   modification date, etc.  These and other properties belong in a\n   resource\
    \ description standard.\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   While the requirements have no direct security\
    \ implications,\n   applications based on standards that fulfill them may need\
    \ to\n   consider two potential vulnerabilities.  First, because locators are\n\
    \   transient, a client using an invalid locator might unwittingly gain\n   access\
    \ to a resource that was not the intended target.  For example,\n   when a hostname\
    \ becomes unregistered for a period of time and then\n   re-registered, a locator\
    \ that was no longer valid during that period\n   might once again lead to a resource,\
    \ but perhaps to one that only\n   pretends to be the original resource.\n   Second,\
    \ because a locator consists of a service and a parameter\n   package, potentially\
    \ enormous processing freedom is allowed,\n   depending on the individual service.\
    \  A server is vulnerable unless\n   it suitably restricts its input parameters.\
    \  For example, a server\n   that advertizes locators for certain local filesystem\
    \ objects may\n   inadvertently open a door through which other filesystem objects\
    \ can\n   be accessed.\n   A client is also vulnerable unless it understands the\
    \ limitations of\n   the service it is using.  For example, a client trusting\
    \ a locator\n   obtained from an uncertain source might inadvertently trigger\
    \ a\n   mechanism that applies charges to a user account.  Having a clear\n  \
    \ definition of service limitations could help alleviate some of these\n   concerns.\n\
    \   For services that by nature offer a great deal of user freedom\n   (remote\
    \ login for example), the pre-specification of user commands\n   within a locator\
    \ presents vulnerabilities.  With careful command\n   screening, the deleterious\
    \ effects of unknowingly executing (at the\n   client or server) an embedded command\
    \ such as \"rm -fr *\" can be\n   avoided.\n"
- title: 6. Conclusion
  contents:
  - "6. Conclusion\n   Resource location standards, which define Internet resource\
    \ locators,\n   give providers the means to describe access information for their\n\
    \   resources.  They give client developers the ability to access\n   disparate\
    \ resources while hiding access details from users.\n   Several minimum requirements\
    \ distinguish an Internet locator from a\n   general locator.  Internet resource\
    \ locators are impermanent handles\n   sufficiently qualified for resource access\
    \ not to depend in general\n   on client location.  Locators can be recognized\
    \ and parsed, and can\n   be transmitted unscathed through a variety of human\
    \ and Internet\n   communication mechanisms.\n   An Internet resource locator\
    \ consists of a service and access\n   parameters meaningful to that service.\
    \  The form of the locator does\n   not discourage the addition of new services\
    \ or the migration to other\n   resource identifiers.  A clean distinction between\
    \ resource location,\n   resource naming, and resource description standards is\
    \ preserved by\n   limiting Internet locators to no more information than what\
    \ is\n   required by an access mechanism.\n"
- title: 7. Acknowledgements
  contents:
  - "7. Acknowledgements\n   The core requirements of this document arose from a collaboration\
    \ of\n   the following people at the November 1993 IETF meeting in Houston,\n\
    \   Texas.\n      Farhad Ankelesaria, University of Minnesota\n      John Curran,\
    \ NEARNET\n      Peter Deutsch, Bunyip\n      Alan Emtage, Bunyip\n      Jim Fullton,\
    \ CNIDR\n      Kevin Gamiel, CNIDR\n      Joan Gargano, University of California\
    \ at Davis\n      John Kunze, University of California at Berkeley\n      Clifford\
    \ Lynch, University of California\n      Lars-Gunnar Olson, Swedish University\
    \ of Agriculture\n      Mark McCahill, University of Minnesota\n      Michael\
    \ Mealing, Georgia Tech\n      Mitra, Pandora Systems\n      Pete Percival, Indiana\
    \ University\n      Margaret St. Pierre, WAIS, Inc.\n      Rickard Schoultz, KTH\n\
    \      Janet Vratny, Apple Computer Library\n      Chris Weider, Bunyip\n"
- title: 8. Author's Address
  contents:
  - "8. Author's Address\n   John A. Kunze\n   Information Systems and Technology\n\
    \   293 Evans Hall\n   Berkeley, CA  94720\n   Phone: (510) 642-1530\n   Fax:\
    \   (510) 643-5385\n   EMail: jak@violet.berkeley.edu\n"
