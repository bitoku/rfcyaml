- contents:
  - "            RTP Control Protocol (RTCP) Extended Report (XR)\n                   for
    Post-Repair Loss Count Metrics\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines an RTP Control Protocol (RTCP) Extended Report\n
    \  (XR) block that allows reporting of a post-repair loss count metric\n   for
    a range of RTP applications.  In addition, another metric,\n   repaired loss count,
    is also introduced in this report block for\n   calculating the pre-repair loss
    count when needed, so that the RTP\n   sender or a third-party entity is able
    to evaluate the effectiveness\n   of the repair methods used by the system.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7509.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Terminology .....................................................3\n   3.
    Post-Repair Loss Count Metrics Report Block .....................3\n      3.1.
    Report Block Structure .....................................4\n      3.2. Example
    Usage ..............................................5\n   4. SDP Signaling ...................................................6\n
    \     4.1. SDP rtcp-xr-attrib Attribute Extension .....................6\n      4.2.
    Offer/Answer Usage .........................................7\n   5. Security
    Considerations .........................................7\n   6. IANA Considerations
    .............................................7\n      6.1. New RTCP XR Block Type
    Value ...............................7\n      6.2. New RTCP XR SDP Parameter ..................................7\n
    \     6.3. Contact Information for Registrations ......................7\n   7.
    References ......................................................8\n      7.1.
    Normative References .......................................8\n      7.2. Informative
    References .....................................9\n   Appendix A. Metrics Represented
    Using the Template from RFC 6390 ..10\n   Acknowledgments ...................................................11\n
    \  Authors' Addresses ................................................11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   RTCP Sender Reports (SRs) / Receiver Reports (RRs) [RFC3550]
    contain\n   some rough statistics about the data received from the particular\n
    \  source indicated in that block.  One of them is the cumulative number\n   of
    packets lost, which is called the pre-repair loss metric in this\n   document.
    \ This metric conveys information regarding the total number\n   of RTP data packets
    that have been lost since the beginning of the\n   RTP session.\n   However, this
    metric is measured on the media stream before any loss-\n   repair mechanism,
    e.g., retransmission [RFC4588] or Forward Error\n   Correction (FEC) [RFC5109],
    is applied.  Using a repair mechanism\n   usually results in recovering some or
    all of the lost packets.  The\n   recovery process does not reduce the values
    reported by the two loss\n   metrics in RTCP RR [RFC3550] -- namely, the fraction
    lost and the\n   cumulative loss.  Hence, the sending endpoint cannot infer the\n
    \  performance of the repair mechanism based on the aforementioned\n   metrics
    in [RFC3550].\n   Consequently, [RFC5725] specifies a post-repair loss Run-Length\n
    \  Encoding (RLE) XR report block to address this issue.  The sending\n   endpoint
    is able to infer which packets were repaired from the RLE\n   report block, but
    the reporting overhead for the packet-by-packet\n   report block is higher compared
    to other report blocks.\n   When applications use multiple XR blocks, the endpoints
    may require\n   more concise reporting to save bandwidth.  This document defines
    a\n   new XR block type to augment those defined in [RFC3611] and\n   complement
    the report block defined in [RFC5725] for use in a range\n   of RTP applications.
    \ This new block type reports the post-repair\n   loss count metric, which records
    the number of primary source RTP\n   packets that are still lost after applying
    one or more loss-repair\n   mechanisms.  In addition, another metric, repaired
    loss count, is\n   also introduced in this report block for calculating the pre-repair\n
    \  loss count during this range, so that the RTP sender or a third-party\n   entity
    is able to evaluate the effectiveness of the repair methods\n   used by the system.
    \ The metrics defined in this document are packet\n   level rather than slice/picture
    level; this means the partial\n   recovery of a packet will not be regarded as
    a repaired packet.\n   The metrics defined in this document belong to the class
    of\n   transport-related metrics defined in [RFC6792] and are specified in\n   accordance
    with the guidelines in [RFC6390] and [RFC6792].  These\n   metrics are applicable
    to any RTP application, especially those that\n   use loss-repair mechanisms.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [KEYWORDS].\n   primary
    source RTP packet: The original RTP packet sent from the RTP\n      sender for
    the first time.  A lost primary source RTP packet may\n      be repaired by some
    other RTP packets used in repair mechanisms\n      like FEC or retransmission.\n"
  title: 2.  Terminology
- contents:
  - "3.  Post-Repair Loss Count Metrics Report Block\n   This block reports the number
    of packets lost after applying repair\n   mechanisms (e.g., FEC).  It complements
    the RTCP XR metrics defined\n   in [RFC5725].  As noted in [RFC5725], ambiguity
    may occur when\n   comparing this metric with a pre-repair loss metric reported
    in an\n   RTCP SR/RR, i.e., some packets were not repaired in the current RTCP\n
    \  interval, but they may be repaired later.  Therefore, this block uses\n   a
    begin sequence number and an end sequence number to explicitly\n   indicate the
    actual sequence number range reported by this RTCP XR.\n   Accordingly, only packets
    that have no further chance of being\n   repaired and that have been repaired
    are included in this report\n   block.\n"
  - contents:
    - "3.1.  Report Block Structure\n   The Post-Repair Loss Count Metrics Report
      Block has the following\n   format:\n      0               1               2
      \              3               4\n      0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1
      2 3 4 5 6 7 0 1 2 3 4 5 6 7 0\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |     BT=33     |   Reserved    |      Block length = 4         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                       SSRC of Source                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |       begin_seq               |          end_seq              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |  Post-repair loss count       |     Repaired loss count       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Block Type (BT): 8 bits\n      A Post-Repair Loss Count Metrics Report Block
      is identified by the\n      constant 33.\n   Reserved: 8 bits\n      These bits
      are reserved for future use.  They MUST be set to zero\n      by senders and
      ignored by receivers (see Section 4.2 of\n      [RFC6709]).\n   Block length:
      16 bits\n      This field is in accordance with the definition in [RFC3611].
      \ In\n      this report block, it MUST be set to 4.  The block MUST be\n      discarded
      if the block length is set to a different value.\n   SSRC of source: 32 bits\n
      \     As defined in Section 4.1 of [RFC3611].\n   begin_seq: 16 bits\n      The
      first sequence number that this block reports on.  It can\n      remain fixed
      when calculating metrics over several RTCP reporting\n      intervals.\n   end_seq:
      16 bits\n      The last sequence number that this block reports on plus one.\n
      \  Post-repair loss count: 16 bits\n      Total number of packets finally lost
      after applying one or more\n      loss-repair methods, e.g., FEC and/or retransmission,
      during the\n      actual sequence number range indicated by begin_seq and end_seq.\n
      \     This metric MUST NOT count the lost packets for which repair might\n      still
      be possible.  Note that this metric MUST measure only\n      primary source
      RTP packets.\n   Repaired loss count: 16 bits\n      Total number of packets
      fully repaired after applying one or more\n      loss-repair methods, e.g.,
      FEC and/or retransmission, during the\n      actual sequence number range indicated
      by begin_seq and end_seq.\n      Note that this metric MUST measure only primary
      source RTP\n      packets.\n"
    title: 3.1.  Report Block Structure
  - contents:
    - "3.2  Example Usage\n   The metrics defined in this report block are all measured
      at the RTP\n   receiver.  However, the receiving endpoint can report the metrics
      in\n   two different ways:\n   1) Cumulative report\n   In this case, implementations
      may set begin_seq to the first packet\n   in the RTP session, and it will remain
      fixed across all reports.\n   Hence, the \"Post-repair loss count\" and \"Repaired
      loss count\",\n   respectively, will correspond to \"Cumulative post-repair
      loss count\"\n   and \"Cumulative repaired loss count\" in this case.  These
      cumulative\n   metrics when combined with the cumulative loss metrics reported
      in an\n   RTCP RR (pre-repair) assist in calculating the \"Still-to-be-repaired\n
      \  lost packets\":\n      Still-to-be-repaired lost packets =\n            Cumulative
      number of packets lost -\n            Cumulative post-repair loss count -\n
      \           Cumulative repaired loss count\n   2) Interval report\n   Some implementations
      may align the begin_seq and end_seq number with\n   the highest sequence numbers
      of consecutive RTCP RRs (RTCP interval).\n   This is NOT RECOMMENDED as packets
      that are not yet repaired in this\n   current RTCP interval and may be repaired
      in the subsequent intervals\n   will not be reported.  An interval report is
      illustrated in the\n   following example:\n      Interval A: The extended highest
      sequence number received in RTCP\n                  RR is 20.  Begin_seq is
      10 and end_seq is 20.\n      Interval B: The extended highest sequence number
      received in RTCP\n                  RR is 30.  Begin_seq is 20 and end_seq is
      30.\n   If packets 17 and 19 are lost and not yet repaired in interval A and\n
      \  subsequently repaired in interval B, they will not be reported\n   because
      their sequence numbers do not belong in interval B.\n   Therefore, if implementations
      want these packets to be reported as\n   repaired, they MUST NOT align the begin_seq
      and end_seq to the RTCP\n   intervals.\n   Alternatively, implementations may
      choose the begin_seq and end_seq\n   numbers that cover several RTCP intervals.
      \ Additionally, the\n   reported range of sequence numbers may overlap with
      the previous\n   report blocks, so that the packets that were not yet repaired
      in one\n   interval, but were subsequently repaired or deemed unrepairable,
      were\n   reported in subsequent intervals.\n   In this case, the \"Cumulative
      number of packets lost\" cannot be\n   easily compared with the post-repair
      metrics.  However, the sending\n   endpoint can calculate the efficiency of
      the error resilience\n   algorithm using the post-repair and repaired loss count,\n
      \  respectively.\n"
    title: 3.2  Example Usage
  title: 3.  Post-Repair Loss Count Metrics Report Block
- contents:
  - "4.  SDP Signaling\n   [RFC3611] defines the use of SDP (Session Description Protocol)
    for\n   signaling the use of RTCP XR blocks.  However, XR blocks MAY be used\n
    \  without prior signaling (see Section 5 of [RFC3611]).\n"
  - contents:
    - "4.1.  SDP rtcp-xr-attrib Attribute Extension\n   This session augments the
      SDP attribute \"rtcp-xr\" defined in Section\n   5.1 of [RFC3611] by providing
      an additional value of \"xr-format\" to\n   signal the use of the report block
      defined in this document.  The\n   ABNF [RFC5234] syntax is as follows.\n   xr-format
      =/ xr-prlr-block\n   xr-prlr-block = \"post-repair-loss-count\"\n"
    title: 4.1.  SDP rtcp-xr-attrib Attribute Extension
  - contents:
    - "4.2.  Offer/Answer Usage\n   When SDP is used in offer/answer context, the
      SDP Offer/Answer usage\n   defined in [RFC3611] for the unilateral \"rtcp-xr\"
      attribute\n   parameters applies.  For detailed usage of Offer/Answer for\n
      \  unilateral parameters, refer to Section 5.2 of [RFC3611].\n"
    title: 4.2.  Offer/Answer Usage
  title: 4.  SDP Signaling
- contents:
  - "5.  Security Considerations\n   This proposed RTCP XR block introduces no new
    security considerations\n   beyond those described in [RFC3611].  This block does
    not provide\n   per-packet statistics, so the risk to confidentiality documented
    in\n   Section 7, paragraph 3 of [RFC3611] does not apply.\n   An attacker may
    put incorrect information in the Post-Repair Loss\n   Count reports, which will
    affect the performance of loss-repair\n   mechanisms.  Implementers should consider
    the guidance in [RFC7202]\n   for using appropriate security mechanisms, i.e.,
    where security is a\n   concern, the implementation should apply encryption and\n
    \  authentication to the report block.  For example, this can be\n   achieved
    by using the AVPF profile together with the Secure RTP\n   profile as defined
    in [RFC3711]; an appropriate combination of the\n   two profiles (an \"SAVPF\")
    is specified in [RFC5124].  However, other\n   mechanisms also exist (documented
    in [RFC7201]) and might be more\n   suitable.\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   New block types for RTCP XR are subject to IANA registration.
    \ For\n   general guidelines on IANA considerations for RTCP XR, refer to\n   [RFC3611].\n"
  - contents:
    - "6.1.  New RTCP XR Block Type Value\n   This document assigns the block type
      value 33 in the IANA \"RTP\n   Control Protocol Extended Reports (RTCP XR) Block
      Type Registry\" to\n   the \"Post-Repair Loss Count Metrics Report Block\".\n"
    title: 6.1.  New RTCP XR Block Type Value
  - contents:
    - "6.2.  New RTCP XR SDP Parameter\n   This document also registers a new parameter
      \"post-repair-loss-count\"\n   in the \"RTP Control Protocol Extended Reports
      (RTCP XR) Session\n   Description Protocol (SDP) Parameters Registry\".\n"
    title: 6.2.  New RTCP XR SDP Parameter
  - contents:
    - "6.3.  Contact Information for Registrations\n   The contact information for
      the registrations is:\n      RAI Area Directors <rai-ads@ietf.org>\n"
    title: 6.3.  Contact Information for Registrations
  title: 6.  IANA Considerations
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [KEYWORDS] Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.\n              Jacobson,
      \"RTP: A Transport Protocol for Real-Time\n              Applications\", STD
      64, RFC 3550, DOI 10.17487/RFC3550,\n              July 2003, <http://www.rfc-editor.org/info/rfc3550>.\n
      \  [RFC3611]  Friedman, T., Ed., Caceres, R., Ed., and A. Clark, Ed.,\n              \"RTP
      Control Protocol Extended Reports (RTCP XR)\",\n              RFC 3611, DOI
      10.17487/RFC3611, November 2003,\n              <http://www.rfc-editor.org/info/rfc3611>.\n
      \  [RFC3711]  Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n              Norrman,
      \"The Secure Real-time Transport Protocol (SRTP)\",\n              RFC 3711,
      DOI 10.17487/RFC3711, March 2004,\n              <http://www.rfc-editor.org/info/rfc3711>.\n
      \  [RFC5124]  Ott, J. and E. Carrara, \"Extended Secure RTP Profile for\n              Real-time
      Transport Control Protocol (RTCP)-Based Feedback\n              (RTP/SAVPF)\",
      RFC 5124, DOI 10.17487/RFC5124, February\n              2008, <http://www.rfc-editor.org/info/rfc5124>.\n
      \  [RFC5234]  Crocker, D., Ed., and P. Overell, \"Augmented BNF for\n              Syntax
      Specifications: ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234,
      January 2008,\n              <http://www.rfc-editor.org/info/rfc5234>.\n   [RFC5725]
      \ Begen, A., Hsu, D., and M. Lague, \"Post-Repair Loss RLE\n              Report
      Block Type for RTP Control Protocol (RTCP) Extended\n              Reports (XRs)\",
      RFC 5725, DOI 10.17487/RFC5725, February\n              2010, <http://www.rfc-editor.org/info/rfc5725>.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [RFC4588]  Rey, J., Leon, D., Miyazaki, A.,
      Varsa, V., and R.\n              Hakenberg, \"RTP Retransmission Payload Format\",
      RFC 4588,\n              DOI 10.17487/RFC4588, July 2006,\n              <http://www.rfc-editor.org/info/rfc4588>.\n
      \  [RFC5109]  Li, A., Ed., \"RTP Payload Format for Generic Forward Error\n
      \             Correction\", RFC 5109, DOI 10.17487/RFC5109, December\n              2007,
      <http://www.rfc-editor.org/info/rfc5109>.\n   [RFC6390]  Clark, A. and B. Claise,
      \"Guidelines for Considering New\n              Performance Metric Development\",
      BCP 170, RFC 6390,\n              DOI 10.17487/RFC6390, October 2011,\n              <http://www.rfc-editor.org/info/rfc6390>.\n
      \  [RFC6709]  Carpenter, B., Aboba, B., Ed., and S. Cheshire, \"Design\n              Considerations
      for Protocol Extensions\", RFC 6709, DOI\n              10.17487/RFC6709, September
      2012,\n              <http://www.rfc-editor.org/info/rfc6709>.\n   [RFC6792]
      \ Wu, Q., Ed., Hunt, G., and P. Arden, \"Guidelines for Use\n              of
      the RTP Monitoring Framework\", RFC 6792,\n              DOI 10.17487/RFC6792,
      November 2012,\n              <http://www.rfc-editor.org/info/rfc6792>.\n   [RFC7201]
      \ Westerlund, M. and C. Perkins, \"Options for Securing RTP\n              Sessions\",
      RFC 7201, DOI 10.17487/RFC7201, April 2014,\n              <http://www.rfc-editor.org/info/rfc7201>.\n
      \  [RFC7202]  Perkins, C. and M. Westerlund, \"Securing the RTP\n              Framework:
      Why RTP Does Not Mandate a Single Media\n              Security Solution\",
      RFC 7202, DOI 10.17487/RFC7202, April\n              2014, <http://www.rfc-editor.org/info/rfc7202>.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Appendix A.  Metrics Represented Using the Template from RFC 6390\n   a.  Post-Repair
    RTP Packet Loss Count Metric\n       *  Metric Name: Post-Repair RTP Packet Loss
    Count Metric.\n       *  Metric Description: Total number of RTP packets still
    lost\n          after loss-repair methods are applied.\n       *  Method of Measurement
    or Calculation: See the \"Post-repair\n          loss count\" definition in Section
    3.1.  It is directly\n          measured and must be measured for the primary
    source RTP\n          packets with no further chance of repair.\n       *  Units
    of Measurement: This metric is expressed as a 16-bit\n          unsigned integer
    value giving the number of RTP packets.\n       *  Measurement Point(s) with Potential
    Measurement Domain: It is\n          measured at the receiving end of the RTP
    stream.\n       *  Measurement Timing: This metric relies on the sequence number\n
    \         interval to determine measurement timing.  See the Cumulative\n          and
    Interval reports defined in Section 3.2.\n       *  Use and Applications: These
    metrics are applicable to any RTP\n          application, especially those that
    use loss-repair mechanisms.\n          See Section 1 for details.\n       *  Reporting
    Model: See RFC 3611.\n   b. Repaired RTP Packet Loss Count Metric\n       *  Metric
    Name: Repaired RTP Packet Count Metric.\n       *  Metric Description: The number
    of RTP packets lost but\n          repaired after applying loss-repair methods.\n
    \      *  Method of Measurement or Calculation: See the \"Repaired loss\n          count\"
    in Section 3.1.  It is directly measured and must be\n          measured for the
    primary source RTP packets with no further\n          chance of repair.\n       *
    \ Units of Measurement: This metric is expressed as a 16-bit\n          unsigned
    integer value giving the number of RTP packets.\n       *  Measurement Point(s)
    with Potential Measurement Domain: It is\n          measured at the receiving
    end of the RTP stream.\n       *  Measurement Timing: This metric relies on the
    sequence number\n          interval to determine measurement timing.  See the
    Cumulative\n          and Interval reports defined in Section 3.2.\n       *  Use
    and Applications: These metrics are applicable to any RTP\n          application,
    especially those that use loss-repair mechanisms.\n          See Section 1 for
    details.\n       *  Reporting Model: See RFC 3611.\n"
  title: Appendix A.  Metrics Represented Using the Template from RFC 6390
- contents:
  - "Acknowledgments\n   The authors would like to thank Roni Even, Colin Perkins,
    and Qin Wu\n   for giving valuable comments and suggestions.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Rachel Huang\n   Huawei\n   101 Software Avenue, Yuhua
    District\n   Nanjing 210012\n   China\n   EMail: rachel.huang@huawei.com\n   Varun
    Singh\n   Aalto University\n   School of Electrical Engineering\n   Otakaari 5
    A\n   Espoo, FIN  02150\n   Finland\n   EMail: varun@comnet.tkk.fi\n   URI:   http://www.netlab.tkk.fi/~varun/\n"
  title: Authors' Addresses
