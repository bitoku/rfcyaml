- title: __initial_text__
  contents:
  - '                       Telnet 3270 Regime Option

    '
- title: STATUS OF THIS MEMO
  contents:
  - "STATUS OF THIS MEMO\n   This RFC specifies a proposed standard for the Internet\
    \ community.\n   Hosts on the Internet, that want to support 3270 data stream\
    \ within\n   the Telnet protocol, are expected to adopt and implement this\n \
    \  standard.  Distribution of this memo is unlimited.\n"
- title: 1.  Command Name and Code
  contents:
  - "1.  Command Name and Code\n   3270-REGIME     29\n"
- title: 2.  Command Meaning
  contents:
  - "2.  Command Meaning\n   IAC WILL 3270-REGIME\n      Sender is willing to send\
    \ list of supported 3270 Regimes in\n      a subsequent sub-negotiation.\n   IAC\
    \ WON'T 3270-REGIME\n      Sender refuses to send the list of supported 3270 Regimes.\n\
    \   IAC DO 3270-REGIME\n      Sender is willing to receive a list of supported\
    \ 3270 Regimes in a\n      subsequent sub-negotiation.\n   IAC DON'T 3270-REGIME\n\
    \      Sender refuses to accept the list of supported 3270 Regimes.\n   IAC SB\
    \ 3270-REGIME ARE REGIME-LIST IAC SE\n      Sender sends the list of all possible\
    \ 3270 Regimes it is able to\n      support.  The code for ARE is 1.\n      REGIME-LIST\
    \ is an ASCII string which has meaning to both sides of\n      the negotiation.\
    \  This string may be composed of different\n      terminal type names (as specified\
    \ in the \"Assigned Numbers\") which\n      are separated by space character.\
    \  Terminal type names which have\n      imbedded spaces should escape it with\
    \ backslash character ('\\').\n      Backslash character imbedded into terminal\
    \ type name should be\n      escaped with another backslash character.\n     \
    \ Empty REGIME-LIST means, that sender is able to support only NVT\n      ASCII\
    \ terminal as defined in [4].\n   IAC SB 3270-REGIME IS REGIME IAC SE\n      Sender\
    \ is stating the name of the terminal it is willing to\n      support.  The code\
    \ for IS is 0.\n      REGIME is an ASCII string (possibly empty) which is substring\
    \ of\n      the received REGIME-LIST string.  Empty string means that the\n  \
    \    sender is willing to support only NVT ASCII terminal as defined in\n    \
    \  [4].\n"
- title: 3.  Default
  contents:
  - "3.  Default\n   WON'T 3270-REGIME\n      3270 Regime will not be established.\n\
    \   DON'T 3270-REGIME\n      3270 Regime will not be established.\n"
- title: 4.  Motivation for the option
  contents:
  - "4.  Motivation for the option\n   This option allows a telnet server running\
    \ VM or MVS to negotiate\n   with the telnet client on the type of data stream\
    \ (3270 or NVT ASCII)\n   which both sides are willing support.\n   The main reason\
    \ for this option is to allow simple and efficient way\n   to:\n      o state,\
    \ that both client and server want to exchange 3270 data\n        stream,\n  \
    \    o switch from 3270 Regime into NVT ASCII Regime and back into 3270\n    \
    \    Regime,\n      o dynamically renegotiate 3270 Regime parameters (like terminal\n\
    \        type).\n   Support for 3270 data stream requires that both sides:\n \
    \     o be able to exchange binary data,\n      o be able to put well defined\
    \ delimiters into inbound/outbound\n        data stream,\n      o be able to establish\
    \ the agreement between client and server on\n        what type of terminal will\
    \ be used.\n   Current implementations requires 3 different options, TERMINALTYPE\n\
    \   [1], BINARY [2] and EOR [3], to be successfully negotiated between\n   client\
    \ and server prior to establishing 3270 Regime.  Moreover, it is\n   unclear at\
    \ what point in this negotiation process, 3270 regime is\n   actually established\
    \ (whether after TERMINALTYPE or after BINARY or\n   after EOR).  Also, order\
    \ for these negotiations was never specified.\n   Subnegotiation for the TERMINALTYPE\
    \ is possible with only single\n   terminal type at a time.\n   Once 3270 Regime\
    \ is established, there is no standard of how to get\n   out of this regime back\
    \ into NVT ASCII mode.\n   Based on the 3270 Regime requirements, which stated\
    \ above, we feel\n   that separate negotiation for EOR and BINARY should not be\
    \ done.\n   Rather, 3270 Regime establishment should imply that:\n      o each\
    \ character in the Telnet data stream should be interpreted\n        as 8 bits\
    \ of binary data,\n      o both sides agreed to use a certain character sequence(Telnet\
    \ IAC\n        EOR) as a delimiter in inbound/outbound Telnet data stream,\n \
    \     o both sides agreed on the type of the terminal they are willing\n     \
    \   to support.\n   By providing the list of possible terminals which Telnet client\
    \ can\n   support, telnet server could select the type of the terminal it can\n\
    \   support and pass it back to the Telnet client, thus eliminating\n   multiple\
    \ TERMINALTYPE negotiations.\n   As stated in [5], \"The purpose of the Telnet\
    \ Protocol is to provide a\n   fairly general, bi-directional, eight-bit byte\
    \ oriented communication\n   facility.\"  Therefore we feel that such issues as\
    \ color support,\n   graphics support, extended data streams mapping, etc., do\
    \ not belong\n   logically to the Telnet protocol, but rather should be considered\
    \ as\n   a part of a separate protocol which defines 3270 inbound/outbound\n \
    \  data stream (see [5], [6], [7], [8]).  The purpose of this memo is\n   not\
    \ to describe (or define) protocols which are used in 3270 Regime,\n   but rather\
    \ define a new option for the Telnet Protocol, which would\n   allow both sides\
    \ to negotiate for the 3270 Regime establishment over\n   the telnet connection.\n\
    \   While this options does not include direct negotiation for such\n   things\
    \ as colors, graphics, structured fields, etc., certain features\n   (like the\
    \ ability to support colors) may be negotiated indirectly by\n   using certain\
    \ terminal type names specified in 3270-REGIME\n   subnegotiation.\n   We also\
    \ feel that such issues as keyboard mapping, whether to have\n   one telnet for\
    \ both ASCII and 3270 mode or two separate programs, one\n   for ASCII and another\
    \ for 3270 mode, are implementation dependent and\n   should be considered as\
    \ a local matter.\n"
- title: 5.  Description of the Option
  contents:
  - "5.  Description of the Option\n   WILL and DO commands are used to obtain and\
    \ grant permission for the\n   subsequent subnegotiation.  Both sides must exchange\
    \ WILL 3270-REGIME\n   and DO 3270-REGIME prior to subnegotiation.  The actual\
    \ exchange of\n   information is done within the option subcommand (IAC SB\n \
    \  3270-REGIME).\n   Either Telnet client or Telnet server can initialize 3270-REGIME\n\
    \   negotiation.  However, in order to simplify negotiation, only Telnet\n   client\
    \ is allowed to send IAC SB 3270-REGIME ARE... IAC SE command,\n   and only Telnet\
    \ server is allowed to reply with IAC SB 3270-REGIME\n   IS... IAC SE command.\n\
    \   Since this negotiation is asymmetric, each time Telnet client/server\n   decide\
    \ to negotiate/renegotiate this option they have to perform\n   complete negotiation\
    \ process (DO...  WILL... SB 3270-REGIME...).\n   The following is an example\
    \ of use of the option:\n      1.  Host A: IAC DO 3270-REGIME\n      2.  Host\
    \ B: IAC WILL 3270-REGIME\n      3.  Host B: IAC DO 3270-REGIME\n      4.  Host\
    \ A: IAC WILL 3270-REGIME\n      5.  (At this point side which runs Telnet client\
    \ can start\n          subnegotiation.)\n      6.  Host A: IAC SB 3270-REGIME\
    \ ARE 'ibm3279-3 ibm3279-2 ibm3278-3'\n          IAC SE\n      7.  Host B: IAC\
    \ SB 3270-REGIME IS 'ibm3279-2' IAC SE\n"
- title: 6.  Implementation Suggestions
  contents:
  - "6.  Implementation Suggestions\n   If the side is able to support more that one\
    \ terminal type, then\n   terminal type names are listed in REGIME-LIST from most\
    \ desirable to\n   least desirable.  Other side upon receive of the REGIME-LIST\
    \ scans it\n   from left to right and finds the first terminal type which it is\
    \ able\n   to support returns it in REGIME part of the 3270-REGIME IS\n   subnegotiation.\n\
    \   The side which wants to switch into NVT ASCII mode should send empty\n   REGIME-LIST.\
    \  Since empty string is a subset of empty string, the\n   side which receives\
    \ empty REGIME-LIST should reply with empty REGIME.\n   At that point both sides\
    \ are switched to NVT ASCII mode.\n   It is possible to renegotiate 3270 Regime\
    \ parameters (like terminal\n   type).  Certain precaution should be taken to\
    \ insure that such\n   renegotiation would not cause switch into NVT ASCII mode.\
    \  As a\n   possible measure, the side which wants to renegotiate for another\n\
    \   terminal should include both the current and the new terminal type\n   names\
    \ into REGIME-LIST.  This way, if the other side is unable to\n   change 3270\
    \ Regime terminal type, it will continue to use current\n   terminal type.\n \
    \  Since IAC character (255 decimal) is used as a delimiter (together\n   with\
    \ EOR) in inbound/outbound data stream, care must be taken to\n   escape IAC characters\
    \ which are part of data stream itself with\n   another IAC character.\n   To\
    \ prevent ambiguity in interpreting inbound/outbound data stream\n   during negotiation\
    \ process the following rules should be observed:\n      1.  Telnet client should\
    \ not accept any data from the user as soon\n          as it enters 3270 Regime\
    \ negotiation.\n      2.  Telnet client should not send any data to the Telnet\
    \ server\n          after it sends \"3270-REGIME ARE....\".\n      3.  Telnet\
    \ server should try not to send any data to the telnet\n          client while\
    \ negotiation is in progress.\n      4.  Telnet server may reply with \"3270-REGIME\
    \ IS...\" to the telnet\n          client only after all outstanding data have\
    \ been already sent\n          to the Telnet client.\n      5.  Telnet server\
    \ can switch from its previous regime to the new\n          regime only after\
    \ it sends \"IAC SB 3270-REGIME IS 'regime' IAC\n          SE\" to the telnet\
    \ client.\n      6.  Telnet client can switch from its previous regime to the\
    \ new\n          regime only after it receives \"IAC SB 3270-REGIME IS 'regime'\n\
    \          IAC SE\".\n      7.  Switch from one regime to another may require\
    \ flushing of all\n          outstanding data in both telnet client and telnet\
    \ server.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] RFC-854, Telnet Terminal Type Option.\n   [2] RFC-856,\
    \ Telnet Binary Transmission.\n   [3] RFC-885, Telnet End Of Record Option.\n\
    \   [4] RFC-854, Telnet Protocol Specification.\n   [5] IBM 3270 Information Display\
    \ System.  3274 Control Unit\n       Description and Programmer's Guide.  GA23-0061-1.\n\
    \   [6] IBM 3279 Information Display System: Color and Programmed\n       Symbols.\
    \  GA33-3056-1.\n   [7] IBM 3270 Information Display System. Data Stream Programmer's\n\
    \       Reference. GA23-0059-1.\n   [8] IBM 3270 Information Display System. \
    \ Description and\n       Configuration: APL/Text Feature.  GA18-2044-0.\n"
