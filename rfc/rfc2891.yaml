- title: __initial_text__
  contents:
  - '    LDAP Control Extension for Server Side Sorting of Search Results

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes two LDAPv3 control extensions for server\
    \ side\n   sorting of search results. These controls allows a client to specify\n\
    \   the attribute types and matching rules a server should use when\n   returning\
    \ the results to an LDAP search request. The controls may be\n   useful when the\
    \ LDAP client has limited functionality or for some\n   other reason cannot sort\
    \ the results but still needs them sorted.\n   Other permissible controls on search\
    \ operations are not defined in\n   this extension.\n   The sort controls allow\
    \ a server to return a result code for the\n   sorting of the results that is\
    \ independent of the result code\n   returned for the search operation.\n   The\
    \ key words \"MUST\", \"SHOULD\", and \"MAY\" used in this document are\n   to\
    \ be interpreted as described in [bradner97].\n"
- title: 1.  The Controls
  contents:
  - '1.  The Controls

    '
- title: 1.1 Request Control
  contents:
  - "1.1 Request Control\n   This control is included in the searchRequest message\
    \ as part of the\n   controls field of the LDAPMessage, as defined in Section\
    \ 4.1.12 of\n   [LDAPv3].\n   The controlType is set to \"1.2.840.113556.1.4.473\"\
    . The criticality\n   MAY be either TRUE or FALSE (where absent is also equivalent\
    \ to\n   FALSE) at the client's option. The controlValue is an OCTET STRING,\n\
    \   whose value is the BER encoding of a value of the following SEQUENCE:\n  \
    \    SortKeyList ::= SEQUENCE OF SEQUENCE {\n                 attributeType  \
    \ AttributeDescription,\n                 orderingRule    [0] MatchingRuleId OPTIONAL,\n\
    \                 reverseOrder    [1] BOOLEAN DEFAULT FALSE }\n   The SortKeyList\
    \ sequence is in order of highest to lowest sort key\n   precedence.\n   The MatchingRuleId,\
    \ as defined in section 4.1.9 of [LDAPv3], SHOULD\n   be one that is valid for\
    \ the attribute type it applies to.  If it is\n   not, the server will return\
    \ inappropriateMatching.\n   Each attributeType should only occur in the SortKeyList\
    \ once. If an\n   attributeType is included in the sort key list multiple times,\
    \ the\n   server should return an error in the sortResult of\n   unwillingToPerform.\n\
    \   If the orderingRule is omitted, the ordering MatchingRule defined for\n  \
    \ use with this attribute MUST be used.\n   Any conformant implementation of this\
    \ control MUST allow a sort key\n   list with at least one key.\n"
- title: 1.2 Response Control
  contents:
  - "1.2 Response Control\n   This control is included in the searchResultDone message\
    \ as part of\n   the controls field of the LDAPMessage, as defined in Section\
    \  4.1.12\n   of [LDAPv3].\n   The controlType is set to \"1.2.840.113556.1.4.474\"\
    . The criticality\n   is FALSE (MAY be absent). The controlValue is an OCTET STRING,\
    \ whose\n   value is the BER encoding of a value of the following SEQUENCE:\n\
    \      SortResult ::= SEQUENCE {\n         sortResult  ENUMERATED {\n        \
    \     success                   (0), -- results are sorted\n             operationsError\
    \           (1), -- server internal failure\n             timeLimitExceeded  \
    \       (3), -- timelimit reached before\n                                   \
    \         -- sorting was completed\n             strongAuthRequired        (8),\
    \ -- refused to return sorted\n                                            --\
    \ results via insecure\n                                            -- protocol\n\
    \             adminLimitExceeded       (11), -- too many matching entries\n  \
    \                                          -- for the server to sort\n       \
    \      noSuchAttribute          (16), -- unrecognized attribute\n            \
    \                                -- type in sort key\n             inappropriateMatching\
    \    (18), -- unrecognized or\n                                            --\
    \ inappropriate matching\n                                            -- rule\
    \ in sort key\n             insufficientAccessRights (50), -- refused to return\
    \ sorted\n                                            -- results to this client\n\
    \             busy                     (51), -- too busy to process\n        \
    \     unwillingToPerform       (53), -- unable to sort\n             other   \
    \                 (80)\n             },\n       attributeType [0] AttributeDescription\
    \ OPTIONAL }\n"
- title: 2.  Client-Server Interaction
  contents:
  - "2.  Client-Server Interaction\n   The sortKeyRequestControl specifies one or\
    \ more attribute types and\n   matching rules for the results returned by a search\
    \ request. The\n   server SHOULD return all results for the search request in\
    \ the order\n   specified by the sort keys. If the reverseOrder field is set to\
    \ TRUE,\n   then the entries will be presented in reverse sorted order for the\n\
    \   specified key.\n   There are six possible scenarios that may occur as a result\
    \ of the\n   sort control being included on the search request:\n   1 - If the\
    \ server does not support this sorting control and the\n       client specified\
    \ TRUE for the control's criticality field, then\n       the server MUST return\
    \ unavailableCriticalExtension as a return\n       code in the searchResultDone\
    \ message and not send back any other\n       results. This behavior is specified\
    \ in section 4.1.12 of\n       [LDAPv3].\n   2 - If the server does not support\
    \ this sorting control and the\n       client specified FALSE for the control's\
    \ criticality field, then\n       the server MUST ignore the sort control and\
    \ process the search\n       request as if it were not present. This behavior\
    \ is specified in\n       section 4.1.12 of [LDAPv3].\n   3 - If the server supports\
    \ this sorting control but for some reason\n       cannot sort the search results\
    \ using the specified sort keys and\n       the client specified TRUE for the\
    \ control's criticality field,\n       then the server SHOULD do the following:\
    \ return\n       unavailableCriticalExtension as a return code in the\n      \
    \ searchResultDone message; include the sortKeyResponseControl in\n       the\
    \ searchResultDone message, and not send back any search result\n       entries.\n\
    \   4 - If the server supports this sorting control but for some reason\n    \
    \   cannot sort the search results using the specified sort keys and\n       the\
    \ client specified FALSE for the control's criticality field,\n       then the\
    \ server should return all search results unsorted and\n       include the sortKeyResponseControl\
    \ in the searchResultDone\n       message.\n   5 - If the server supports this\
    \ sorting control and can sort the\n       search results using the specified\
    \ sort keys, then it should\n       include the sortKeyResponseControl in the\
    \ searchResultDone\n       message with a sortResult of success.\n   6 - If the\
    \ search request failed for any reason and/or there are no\n       searchResultEntry\
    \ messages returned for the search response, then\n       the server SHOULD omit\
    \ the sortKeyResponseControl from the\n       searchResultDone message.\n   The\
    \ client application is assured that the results are sorted in the\n   specified\
    \ key order if and only if the result code in the\n   sortKeyResponseControl is\
    \ success. If the server omits the\n   sortKeyResponseControl from the searchResultDone\
    \ message, the client\n   SHOULD assume that the sort control was ignored by the\
    \ server.\n   The sortKeyResponseControl, if included by the server in the\n \
    \  searchResultDone message, should have the sortResult set to either\n   success\
    \ if the results were sorted in accordance with the keys\n   specified in the\
    \ sortKeyRequestControl or set to the appropriate\n   error code as to why it\
    \ could not sort the data (such as\n   noSuchAttribute or inappropriateMatching).\
    \ Optionally, the server MAY\n   set the attributeType to the first attribute\
    \ type specified in the\n   SortKeyList that was in error. The client SHOULD ignore\
    \ the\n   attributeType field if the sortResult is success.\n   The server may\
    \ not be able to sort the results using the specified\n   sort keys because it\
    \ may not recognize one of the attribute types,\n   the matching rule associated\
    \ with an attribute type is not\n   applicable, or none of the attributes in the\
    \ search response are of\n   these types.  Servers may also restrict the number\
    \ of keys allowed in\n   the control, such as only supporting a single key.\n\
    \   Servers that chain requests to other LDAP servers should ensure that\n   the\
    \ server satisfying the client's request sort the entire result set\n   prior\
    \ to sending back the results.\n"
- title: 2.1 Behavior in a chained environment
  contents:
  - "2.1 Behavior in a chained environment\n   If a server receives a sort request,\
    \ the client expects to receive a\n   set of sorted results. If a client submits\
    \ a sort request to a server\n   which chains the request and gets entries from\
    \ multiple servers, and\n   the client has set the criticality of the sort extension\
    \ to TRUE, the\n   server MUST merge sort the results before returning them to\
    \ the\n   client or MUST return unwillingToPerform.\n"
- title: 2.2 Other sort issues
  contents:
  - "2.2 Other sort issues\n   An entry that meets the search criteria may be missing\
    \ one or more of\n   the sort keys. In that case, the entry is considered to have\
    \ a value\n   of NULL for that key. This standard considers NULL to be a larger\n\
    \   value than all other valid values for that key. For example, if only\n   one\
    \ key is specified, entries which meet the search criteria but do\n   not have\
    \ that key collate after all the entries which do have that\n   key. If the reverseOrder\
    \ flag is set, and only one key is specified,\n   entries which meet the search\
    \ criteria but do not have that key\n   collate BEFORE all the entries which do\
    \ have that key.\n   If a sort key is a multi-valued attribute, and an entry happens\
    \ to\n   have multiple values for that attribute and no other controls are\n \
    \  present that affect the sorting order, then the server SHOULD use the\n   least\
    \ value (according to the ORDERING rule for that attribute).\n"
- title: 3.  Interaction with other search controls
  contents:
  - "3.  Interaction with other search controls\n   When the sortKeyRequestControl\
    \ control is included with the\n   pagedResultsControl control as specified in\
    \ [LdapPaged], then the\n   server should send the searchResultEntry messages\
    \ sorted according to\n   the sort keys applied to the entire result set. The\
    \ server should not\n   simply sort each page, as this will give erroneous results\
    \ to the\n   client.\n   The sortKeyList must be present on each searchRequest\
    \ message for the\n   paged result. It also must not change between searchRequests\
    \ for the\n   same result set. If the server has sorted the data, then it SHOULD\n\
    \   send back a sortKeyResponseControl control on every searchResultDone\n   message\
    \ for each page. This will allow clients to quickly determine\n   if the result\
    \ set is sorted, rather than waiting to receive the\n   entire result set.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Implementors and administrators should be aware\
    \ that allowing sorting\n   of results could enable the retrieval of a large number\
    \ of records\n   from a given directory service, regardless of administrative\
    \ limits\n   set on the maximum number of records to return.\n   A client that\
    \ desired to pull all records out of a directory service\n   could use a combination\
    \ of sorting and updating of search filters to\n   retrieve all records in a database\
    \ in small result sets, thus\n   circumventing administrative limits.\n   This\
    \ behavior can be overcome by the judicious use of permissions on\n   the directory\
    \ entries by the administrator and by intelligent\n   implementations of administrative\
    \ limits on the number of records\n   retrieved by a client.\n"
- title: 5.  References
  contents:
  - "5.  References\n   [LDAPv3]    Wahl, M, Kille, S. and T. Howes, \"Lightweight\
    \ Directory\n               Access Protocol (v3)\", RFC 2251, December 1997.\n\
    \   [Bradner97] Bradner, S., \"Key Words for use in RFCs to Indicate\n       \
    \        Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [LdapPaged] Weider,\
    \ C., Herron, A., Anantha, A. and T. Howes, \"LDAP\n               Control Extension\
    \ for Simple Paged Results Manipulation\",\n               RFC 2696, September\
    \ 1999.\n"
- title: 6.  Authors' Addresses
  contents:
  - "6.  Authors' Addresses\n   Anoop Anantha\n   Microsoft Corp.\n   1 Microsoft\
    \ Way\n   Redmond, WA 98052\n   USA\n   Phone: +1 425 882-8080\n   EMail: anoopa@microsoft.com\n\
    \   Tim Howes\n   Loudcloud, Inc.\n   615 Tasman Dr.\n   Sunnyvale, CA 94089\n\
    \   USA\n   EMail: howes@loudcloud.com\n   Mark Wahl\n   Sun Microsystems, Inc.\n\
    \   8911 Capital of Texas Hwy Suite 4140\n   Austin, TX 78759\n   USA\n   EMail:\
    \ Mark.Wahl@sun.com\n"
- title: 7.  Full Copyright Statement
  contents:
  - "7.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
