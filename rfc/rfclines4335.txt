Abstract The Session Channel Break Extension provides a means to send a BREAK signal over a Secure Shell (SSH) terminal session.
The Secure Shell (SSH) [5] session channel provides a mechanism for the client user to interactively enter commands and receive output from a remote host while taking advantage of the SSH transport's privacy and integrity features.
SSH is increasingly being used to replace Telnet for terminal access applications.
A common application of the Telnet protocol is the "Console Server" [7] whereby a Telnet Network Virtual Terminal (NVT) can be connected to a physical RS 232/V.24 asynchronous port, making the Telnet NVT appear as a locally attached terminal to that port, and making that physical port appear as a network addressable device.
A number of major computer equipment vendors provide high level administrative functions through an asynchronous serial port and generally expect the attached terminal to be capable of sending a BREAK signal.
A BREAK signal is defined as the TxD signal being held in a SPACE ("0") state for a time greater than a whole character time.
In practice, a BREAK signal is typically 250 to 500 ms in length.
The Telnet protocol furnishes a means to send a "BREAK" signal, which RFC 854 [1] defines as "a signal outside the USASCII set which is currently given local meaning within many systems".
Console Server vendors interpret the TELNET BREAK signal as a physical BREAK signal, which can then allow access to the full range of administrative functions available on an asynchronous serial console port.
The lack of a similar facility in the SSH session channel has forced users to continue the use of Telnet for the "Console Server" function.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [2].
The "byte", "boolean", "uint32", and "string" data types are defined in [3].
The following channel specific request can be sent over a session channel (as described in [4]) to request that the remote host perform a BREAK operation.
uint32    break length in milliseconds
If the BREAK length cannot be controlled by the application receiving this request, the BREAK length parameter SHOULD be ignored and the default BREAK signal length of the chipset or underlying chipset driver SHOULD be sent.
If the application receiving this request can control the BREAK length, the following suggestions are made regarding BREAK duration.
If a BREAK duration request of greater than 3000 ms is received, it SHOULD be interpreted as a request for a 3000 ms BREAK.
This safeguard prevents an unreasonably long BREAK request from causing a port to become unavailable for as long as 49.7 days while executing the BREAK.
Applications that require a longer BREAK may choose to ignore this suggestion.
If BREAK duration request of less than 500 ms is received, it SHOULD be interpreted as a 500 ms BREAK since most devices will recognize a BREAK of that length.
Applications that require a shorter BREAK may choose to ignore this suggestion.
If the BREAK length parameter is 0, the BREAK SHOULD be interpreted as the default BREAK signal length of the chipset or underlying chipset driver.
If no default exists, 500 ms can be used as the BREAK length.
If the SSH connection does not terminate on a physical serial port, the BREAK indication SHOULD be handled in a manner consistent with the general use of BREAK as an attention/interrupt signal; for instance, a service processor that requires an out of band facility to get the attention of a system it manages.
In a case where an SSH connection cascades to another connection, the BREAK SHOULD be passed along the cascaded connection.
For example, a Telnet session from an SSH shell should carry along an SSH initiated BREAK, and an SSH client initiated from a Telnet connection SHOULD pass a BREAK indication from the Telnet connection.
If the 'want reply' boolean is set, the server MUST reply using an SSH MSG CHANNEL SUCCESS or SSH MSG CHANNEL FAILURE [5] message.
If a BREAK of any kind was preformed, SSH MSG CHANNEL SUCCESS MUST be sent.
If no BREAK was preformed, SSH MSG CHANNEL FAILURE MUST be sent.
This operation SHOULD be supported by any general purpose SSH client.
Many computer systems treat serial consoles as local and secured, and interpret a BREAK signal as an instruction to halt execution of the operating system or to enter privileged configuration modes.
Because of this, extra care should be taken to ensure that SSH access to BREAK enabled ports are limited to users with appropriate privileges to execute such functions.
Alternatively, support for the BREAK facility MAY be implemented as configurable on a per port or per server basis.
Implementations that literally interpret the BREAK length parameter without imposing the suggested BREAK time limit may cause a denial of service to or unexpected results from attached devices receiving the very long BREAK signal.
IANA Considerations IANA has assigned the Connection Protocol Channel Request Name "break" in accordance with [6].
