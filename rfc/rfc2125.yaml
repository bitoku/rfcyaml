- title: __initial_text__
  contents:
  - "              The PPP Bandwidth Allocation Protocol (BAP)\n          The PPP\
    \ Bandwidth Allocation Control Protocol (BACP)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document proposes a method to manage the dynamic bandwidth\n\
    \   allocation of implementations supporting the PPP multilink protocol\n   [2].\
    \  This is done by defining the Bandwidth Allocation Protocol\n   (BAP), as well\
    \ as its associated control protocol, the Bandwidth\n   Allocation Control Protocol\
    \ (BACP).  BAP can be used to manage the\n   number of links in a multilink bundle.\
    \  BAP defines datagrams to co-\n   ordinate adding and removing individual links\
    \ in a multilink bundle,\n   as well as specifying which peer is responsible for\
    \ which decisions\n   regarding managing bandwidth during a multilink connection.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n         5.5.3  Callback-Request ................................\
    \   13\n         5.5.4  Callback-Response ...............................   13\n\
    \         5.5.5  Link-Drop-Query-Request .........................   13\n    \
    \     5.5.6  Link-Drop-Query-Response ........................   13\n        \
    \ 5.5.7  Call-Status-Indication ..........................   14\n         5.5.8\
    \  Call-Status-Response ............................   14\n   6.     BAP Datagram\
    \ Options ..................................   14\n      6.1       Link-Type .......................................\
    \   15\n      6.2       Phone-Delta .....................................   17\n\
    \         6.2.1  Phone-Delta Sub-Options .........................   18\n    \
    \  6.3       No-Phone-Number-Needed ..........................   19\n      6.4\
    \       Reason ..........................................   20\n      6.5    \
    \   Link-Discriminator ..............................   21\n      6.6       Call-Status\
    \ .....................................   21\n   Appendix - List of BAP datagrams\
    \ and associated fields .......   23\n   ACKNOWLEDEMENTS ..............................................\
    \   23\n   SECURITY CONSIDERATIONS ......................................   23\n\
    \   REFERENCES ...................................................   24\n   CHAIR'S\
    \ ADDRESS ..............................................   24\n   EDITORS'S ADDRESSES\
    \ ..........................................   24\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   As PPP multilink implementations become increasingly common,\
    \ there is\n   a greater need for some conformity in how to manage bandwidth over\n\
    \   such links. BACP and BAP provide a flexible yet robust way of\n   managing\
    \ bandwidth between 2 peers.  BAP does this by defining Call-\n   Control packets\
    \ and a protocol that allows peers to co-ordinate the\n   actual bandwidth allocation\
    \ and de-allocation.  Phone number deltas\n   may be passed in the Call-Control\
    \ packets to minimize the end user's\n   configuration.\n"
- title: 1.1.  Specification of Requirements
  contents:
  - "1.1.  Specification of Requirements\n   In this document, several words are used\
    \ to signify the requirements\n   of the specification.  These words are often\
    \ capitalized.\n   MUST      This word, or the adjective \"required\", means that\
    \ the\n             definition is an absolute requirement of the specification.\n\
    \   MUST NOT  This phrase means that the definition is an absolute\n         \
    \    prohibition of the specification.\n   SHOULD    This word, or the adjective\
    \ \"recommended\", means that there\n             may exist valid reasons in particular\
    \ circumstances to\n             ignore this item, but the full implications must\
    \ be\n             understood and carefully weighed before choosing a\n      \
    \       different course.\n   MAY       This word, or the adjective \"optional\"\
    , means that this\n             item is one of an allowed set of alternatives.\
    \  An\n             implementation which does not include this option MUST be\n\
    \             prepared to interoperate with another implementation which\n   \
    \          does include the option.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   This document frequently uses the following terms:\n  \
    \ peer      The other end of the point-to-point link\n   silently discard\n  \
    \       This means the implementation discards the packet without\n         further\
    \ processing.  The implementation SHOULD provide the\n         capability of logging\
    \ the error, including the contents of the\n         silently discarded packet,\
    \ and SHOULD record the event in a\n         statistics counter.\n   BOD (bandwidth\
    \ on demand)\n         BOD refers to the ability of a system to allocate and remove\n\
    \         links in a multilink system to change the bandwidth of a\n         multilink\
    \ bundle.  This may be done in response to changing\n         line conditions\
    \ and it also may be done in response to changing\n         resource conditions.\
    \  In either case, changing bandwidth\n         dynamically during a multilink\
    \ connection is referred to as\n         BOD.\n"
- title: 2.  New LCP Configuration Option
  contents:
  - "2.  New LCP Configuration Option\n   Implementations MUST implement LCP as defined\
    \ in [1].  LCP MUST be in\n   the Network-Layer Protocol phase before BACP can\
    \ be negotiated.\n"
- title: 2.1.  Link Discriminator
  contents:
  - "2.1.  Link Discriminator\n   Description\n      This LCP Configuration Option\
    \ is used to declare a unique\n      discriminator for the link that the option\
    \ is sent over.  This\n      option MUST be negotiated by LCP on every link. \
    \ BAP uses the link\n      discriminator to differentiate the various links in\
    \ a multilink\n      bundle. Each link in a multilink bundle MUST have a unique\n\
    \      discriminator.  The discriminator is independent for each peer, so\n  \
    \    each link may have 2 different LCP Link Discriminator values, one\n     \
    \ for each peer. When the Link Discriminator is sent in a BAP\n      packet, the\
    \ transmitter sends the Link Discriminator Option value\n      received from its\
    \ peer in the peer's LCP Configure Request packet.\n   A summary of the Link Discriminator\
    \ LCP Option format is shown below.\n   The fields are transmitted from left to\
    \ right.\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Length    |       Link Discriminator      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      23 for Link Discriminator option.\n   Length\n      4\n   Link\
    \ Discriminator\n      The Link Discriminator field is 2 octets in Length, and\
    \ it\n      contains a unique identifier used to indicate a particular link in\n\
    \      a multilink bundle.  The Link Discriminator for a link MUST be\n      unique\
    \ among the Link Discriminators assigned by this endpoint for\n      this bundle.\
    \  The Link Discriminator MAY be assigned in a\n      sequential, monotonically\
    \ increasing manner.\n"
- title: 3.  BACP Operation
  contents:
  - "3.  BACP Operation\n   BACP uses the same packet exchange mechanism as the Link\
    \ Control\n   Protocol defined in [1].  BACP packets MUST NOT be exchanged until\n\
    \   PPP has reached the Network-Layer Protocol phase.  BACP packets\n   received\
    \ before this phase is reached should be silently discarded.\n   BACP is negotiated\
    \ once per multilink bundle.  If BACP is negotiated\n   on any of the links in\
    \ a multilink bundle, it is opened for all of\n   the links in the bundle.\n \
    \  The Bandwidth Allocation Control Protocol is exactly the same as the\n   Link\
    \ Control Protocol [1] with the following exceptions:\n      Data Link Layer Protocol\
    \ Field\n         Exactly one BACP packet is encapsulated in the Information\n\
    \         field of PPP Data Link Layer frames where the Protocol field\n     \
    \    indicates Type hex c02b (Bandwidth Allocation Control\n         Protocol).\n\
    \      Code field\n         Only Codes 1 through 7 (Configure-Request, Configure-Ack,\n\
    \         Configure-Nak, Configure-Reject, Terminate-Request, Terminate-\n   \
    \      Ack and Code-Reject) are used.  Other Codes should be treated\n       \
    \  as unrecognized and should result in Code-Rejects.\n   Configuration Option\
    \ Types\n         BACP has a distinct set of Configuration Options, which are\n\
    \         defined in the next section.\n"
- title: 4.  BACP Configuration Options
  contents:
  - "4.  BACP Configuration Options\n   BACP Configuration Options allow negotiation\
    \ of desirable BACP\n   parameters.  These options are used in Config-Request,\
    \ Config-Ack,\n   Config-Nak, and Config-Reject packets.  BACP uses the same\n\
    \   Configuration Option format defined for LCP [1], with a seperate set\n   of\
    \ Options.\n   Current values of BACP Configuration Options are assigned as follows:\n\
    \      1     Favored-Peer\n"
- title: 4.1.  Favored-Peer
  contents:
  - "4.1.  Favored-Peer\n   Description\n      This Configuration Option is used to\
    \ determine which peer is\n      favored in the event of a race condition in which\
    \ 2 peers\n      simultaneously transmit the same BAP request.  Each peer\n  \
    \    negotiates a 4 octet magic number, which is successfully\n      negotiated\
    \ when the 2 Magic-Numbers are different.  The favored\n      peer is the peer\
    \ that transmits the lowest Magic-Number in its\n      Favored-Peer Configuration\
    \ Option.\n      The Favored-Peer Configuration Option MUST be implemented.\n\
    \      BACP will usually be negotiated after only one link of a multilink\n  \
    \    bundle has reached the Network-Layer Protocol phase. In this\n      situation,\
    \ it is acceptable for the peer that initiated the\n      connection to use a\
    \ Magic-Number of 1, and the peer that responded\n      to the connection to use\
    \ a Magic-Number of 0xFFFFFFFF.  If a\n      multilink bundle has been established\
    \ with links that were\n      originated by each peer, or if it is not clear which\
    \ peer has\n      initiated a link (on a leased line, for example), then a random\n\
    \      number MUST be used for the Magic-Number.  Refer to the\n      description\
    \ of the LCP Magic-Number Configuration Option in [1]\n      for an explanation\
    \ of how to create a useful random number.\n      When a Configure-Request is\
    \ received with a Favored-Peer\n      Configuration Option, the received Magic-Number\
    \ is compared with\n      the Magic-Number of the last Configure-Request sent\
    \ to the peer.\n      If the two Magic-Numbers are different, then the Favored-Peer\n\
    \      negotiation has been successful, and the Favored-Peer Option\n      SHOULD\
    \ be acknowledged.  If the two Magic-Numbers are equal, a\n      Configure-Nak\
    \ MUST be sent specifying a different Magic-Number\n      value.  A new Configure-Request\
    \ SHOULD NOT be sent to the peer\n      until normal processing would cause it\
    \ to be sent (that is, until\n      a Configure-Nak is received or the Restart\
    \ timer runs out).\n   A summary of the Favored-Peer Option format is shown below.\
    \  The\n   fields are transmitted from left to right.\n    0                 \
    \  1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |          Magic-Number\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Magic-Number (cont)       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      1 for Favored-Peer\n   Length\n      6\n   Magic-Number\n    \
    \  The Magic-Number field is four octets, and indicates a number\n      which\
    \ is very likely to be unique to one end of the link.  A\n      Magic-Number of\
    \ zero is illegal and MUST always be Nak'd.\n"
- title: 5.  BAP Operation
  contents:
  - '5.  BAP Operation

    '
- title: 5.1.  Link Management
  contents:
  - "5.1.  Link Management\n   BAP defines packets, parameters and negotiation procedures\
    \ to allow\n   two endpoints to negotiate gracefully adding and dropping links\
    \ from\n   a multilink bundle.  An implementation can:\n      o Request permission\
    \ to add a Link to a bundle (Call-Request)\n      o Request that the peer add\
    \ a link to a bundle via a callback\n        (Callback-Request)\n      o Negotiate\
    \ with the peer to drop a link from a bundle (this\n        implies that the peer\
    \ can refuse) (Link-Drop-Query-Request)\n   After BACP reaches the opened state,\
    \ either peer MAY request that\n   another link be added to the bundle by sending\
    \ a BAP Call- or\n   Callback-Request packet.  A Call-Request packet is sent if\
    \ the\n   implementation wishes to originate the call for the new link, and a\n\
    \   Callback-Request packet is sent if the implementation wishes its peer\n  \
    \ to originate the call for the new link.  The implementation receiving\n   a\
    \ Call- or Callback-Request MUST respond with a Call- or Callback-\n   Response\
    \ with a valid Response Code.\n   After BACP reaches the opened state, either\
    \ peer MAY request that a\n   link be dropped from the bundle.  A BAP Link-Drop-Query-Request\n\
    \   packet is sent to the peer to negotiate dropping a link.  The peer\n   MUST\
    \ respond with a Link-Drop-Query-Response.   If the peer is\n   agreeable to dropping\
    \ the link the implementation MUST issue an LCP\n   Terminate-Request to initiate\
    \ dropping the link.\n   If an implementation wishes to force dropping a link\
    \ without\n   negotiation, it should simply send an LCP Terminate-Request packet\
    \ on\n   the link (without sending any BAP Link-Drop-Query-Request).\n   After\
    \ an LCP Terminate-Request is sent an implementation SHOULD stop\n   transmitting\
    \ data packets on that link, but still continue to receive\n   and process data\
    \ packets normally until receipt of a Terminate-Ack\n   from the peer.  The receiver\
    \ of an LCP Terminate-Request SHOULD stop\n   transmitting packets before issuing\
    \ the Terminate-Ack.  This\n   procedure will insure that no data is lost in either\
    \ direction.\n"
- title: 5.2.  Bandwidth Management
  contents:
  - "5.2.  Bandwidth Management\n   BAP allows two peer implementations to manage\
    \ the bandwidth available\n   to the protocols using the multilink bundle by negotiating\
    \ when to\n   add and drop links (See Link Management).  Use of the negotiation\n\
    \   features of BAP makes it unnecessary to require a 'common' algorithm\n   for\
    \ determining when to add and remove links in a multilink bundle.\n   BOD decisions\
    \ can be based on link utilization.  A BAP implementation\n   may monitor its\
    \ transmit traffic, both transmit and receive traffic,\n   or choose not to monitor\
    \ traffic in either direction.  If a server\n   system implements bi-directional\
    \ monitoring, it will allow BOD\n   operation with a client that does not monitor\
    \ traffic in either\n   direction, which will minimize the end-user's configuration.\
    \  When an\n   implementation decides that it is time to remove a link due to\n\
    \   traffic monitoring, it MUST transmit a Link-Drop-Query-Request to\n   inquire\
    \ if the peer agrees to drop a link from the current multilink\n   bundle.  When\
    \ an implementation receives a Link-Drop-Query-Request,\n   it SHOULD base its\
    \ response on the traffic it is monitoring.  It MUST\n   NOT base its response\
    \ solely on its receive data heuristics.\n   The operation of the Link-Drop-Query-Request\
    \ and -Response datagrams\n   causes a link in a multilink bundle to be left up\
    \ as long as either\n   implementation that is monitoring link utilization determines\
    \ that it\n   is necessary.\n   BOD decisions can also be based on the resources\
    \ (e.g., physical\n   port, B-channel, etc.) available to an implementation. \
    \ For example,\n   an implementation might remove a link from a multilink bundle\
    \ to\n   answer an incoming voice call, or might add a link when a line\n   becomes\
    \ free due to the termination of a separate PPP call on another\n   port.  An\
    \ implementation MUST use an LCP Terminate-Request to remove\n   a link due to\
    \ a resource condition.\n"
- title: 5.3.  BAP Packets
  contents:
  - "5.3.  BAP Packets\n   All of the BAP Request and Indication packets require a\
    \ Response\n   packet in response before taking any action.\n   An implementation\
    \ MUST set a timer when sending a Request or\n   Indication packet. The value\
    \ of this timer SHOULD depend on the type\n   and speed of the link or links in\
    \ use.  Upon expiration of this\n   timer, the implementation MUST retransmit\
    \ the request or indication,\n   with an identical identification number.  This\
    \ procedure will insure\n   that the peer receives the proper request or indication\
    \ even if a\n   packet is lost during transmission.  If a response packet is lost\
    \ the\n   peer will realize that this is not a new request or indication\n   packet.\n\
    \   If the number of retransmissions exceeds the number supported by the\n   implementation\
    \ for this packet, the implementation MAY take\n   appropriate recovery action.\
    \ For example, if no response to a Link-\n   Drop-Query-Request is received after\
    \ 2 retransmissions, an\n   implementation MAY initiate dropping the link by sending\
    \ an LCP\n   Terminate-Request for that link.\n   Since BAP packets help determine\
    \ the amount of bandwidth available to\n   an implementation, PPP SHOULD give\
    \ them priority over other data\n   packets when transmitting.  This will help\
    \ insure the prompt addition\n   and removal of links in a multilink bundle. \
    \ This is especially\n   important when adding links to a bundle due to bandwidth\
    \ constraints.\n"
- title: 5.4.  Race Conditions
  contents:
  - "5.4.  Race Conditions\n   In order to resolve race conditions, an implementation\
    \ MUST implement\n   the BACP Favored-Peer Configuration Option.\n   A race condition\
    \ can occur if both implementations send a Call-\n   Request, Callback-Request\
    \ or Link-Drop-Query-Request at the same\n   time.  These race conditions should\
    \ be solved as follows:\n      If each implementation sends a Call-Request or\
    \ Callback-Request at\n      the same time, the implementation with the lowest\
    \ BACP Favored-\n      Peer Magic-Number value SHOULD be favored.\n      If each\
    \ implementation sends a Link-Drop-Query-Request at the same\n      time, the\
    \ same scheme SHOULD be used as for Call-Requests.\n"
- title: 5.5.  BAP Datagram Format
  contents:
  - "5.5.  BAP Datagram Format\n   Description\n      Before any BAP packets may be\
    \ communicated, PPP MUST reach the\n      Network-Layer Protocol phase, and BACP\
    \ MUST reach the opened\n      state.\n      Exactly one BAP packet is encapsulated\
    \ in the Information field of\n      PPP Data Link Layer frames where the Protocol\
    \ field indicates type\n      hex c02d (Bandwidth Allocation Protocol).\n    \
    \  Because ISDN Terminal Adapters sometimes are used to do multilink\n      with\
    \ a non-multilink aware client, BAP datagrams MUST NOT be\n      compressed or\
    \ encrypted.  Otherwise, the ISDN TA may not be able\n      to properly intercept\
    \ BAP datagrams needed to control the\n      multilink connection.  This refers\
    \ to compression of the whole\n      datagram; Address-and-Control-Field-Compression\
    \ and Protocol-\n      Field-Compression are allowed if properly negotiated.\n\
    \      The maximum length of a BAP packet transmitted over a PPP link is\n   \
    \   the same as the maximum length of the Information field of a PPP\n      data\
    \ link layer frame.\n      Bandwidth Allocation Protocol datagrams can be catagorized\
    \ as\n      either Request, Indication or Response packets.  Every Request and\n\
    \      Indication datagram has a corresponding Response packet.  Request\n   \
    \   and Indication datagrams have a slightly different format from\n      Response\
    \ datagrams, as the Response datagrams include a Response\n      Code octet.\n\
    \      All of the BAP datagrams MUST be supported by an implementation.\n    \
    \  However, that does not mean an implementation must support all BAP\n      datagram\
    \ actions.  An implementation MAY send a Request-Rej to a\n      Request that\
    \ it does not implement.\n   A summary of the Bandwidth Allocation Protocol datagram\
    \ Request and\n   Indication packet format is shown below.  The fields are transmitted\n\
    \   from left to right.\n    0                   1                   2       \
    \            3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |  Identifier   |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Data ...\n   +-+-+-+-+-+-+-+-+\n   A summary of the Bandwidth Allocation\
    \ Protocol datagram Response\n   packet format is shown below.  The fields are\
    \ transmitted from left\n   to right.\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |  Identifier   |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Response Code |    Data ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type\n\
    \      The Type field is one octet and identifies the type of BAP\n      datagram\
    \ packet.  Datagram types are defined as follows.  This\n      field is coded\
    \ in binary coded hexadecimal.\n         01       Call-Request\n         02  \
    \     Call-Response\n         03       Callback-Request\n         04       Callback-Response\n\
    \         05       Link-Drop-Query-Request\n         06       Link-Drop-Query-Response\n\
    \         07       Call-Status-Indication\n         08       Call-Status-Response\n\
    \      The various types of BAP datagrams are explained in the following\n   \
    \   sections.\n   Identifier\n      The Identifier field is one octet and is binary\
    \ coded.  It aids in\n      matching Requests and Indications with Responses.\
    \  Call-Status-\n      Indication packets MUST use the same Identifier as was\
    \ used by the\n      original Call-Request or Callback-Request that was used to\n\
    \      initiate the call.  All other Request or Indication packets MUST\n    \
    \  use a unique Identifier for each new Request or Indication.  All\n      Response\
    \ packets MUST use the same Identifier as the Identifier in\n      the Request\
    \ or Indication packet being responded to.  When re-\n      transmitting a request\
    \ or indication, the Identifier MUST be the\n      same as the Identifier used\
    \ on the previous transmission of the\n      request or indication.\n   Length\n\
    \      The Length field is two octets and indicates the length of the\n      packet\
    \ including the Type, Identifier, Length and Options fields.\n      It is binary\
    \ encoded. Octets outside the range of the Length field\n      should be treated\
    \ as Data Link Layer padding and should be ignored\n      on reception.\n   Response\
    \ Code\n      The Response Code is only present in Response datagrams.  It is\n\
    \      binary coded and can have the following values:\n         00000000    \
    \    Request-Ack\n         00000001        Request-Nak\n         00000010    \
    \    Request-Rej\n         00000011        Request-Full-Nak\n      The Request-Ack\
    \ Response Code is sent to indicate that the Request\n      or Indication command\
    \ is valid and was successfully received by an\n      implementation. The Request-Nak\
    \ Response Code is sent to indicate\n      that the Request command was received,\
    \ but an implementation does\n      not want the requested action performed at\
    \ this time.  If a\n      Response containing a Request-Nak Response Code is received,\
    \ the\n      original Request MAY be retried after an implementation determines\n\
    \      that sufficient time has elapsed.  The Request-Rej Response Code\n    \
    \  is sent to indicate that the Request command received by an\n      implementation\
    \ is not implemented (i.e., if reception of a\n      particular request type is\
    \ not supported by the peer.) The\n      Request-Full-Nak Response Code is sent\
    \ to indicate that the\n      Request command was received, but an implementation\
    \ does not want\n      the requested action performed.  The Request-Full-Nak is\
    \ used to\n      indicate that an implementation has reached the maximum (for\
    \ a\n      Call- or Callback-Request) or the minimum (for a Link-Drop-Query-\n\
    \      Request) bandwidth configured or available for this multilink\n      bundle.\
    \  If a Response containing a Request-Full-Nak Response Code\n      is received,\
    \ the original Request SHOULD NOT be retried until the\n      total bandwidth\
    \ of the multilink bundle has changed.\n   Data\n      The Data field is variable\
    \ in length, and will usually contain the\n      list of zero or more BAP Options\
    \ that the sender desires to\n      transmit. The format of BAP Options is described\
    \ in a later\n      chapter.\n"
- title: 5.5.1.  Call-Request
  contents:
  - "5.5.1.  Call-Request\n   Before originating a call to add another link to a multilink\
    \ bundle,\n   an implementation MUST transmit a Call-Request packet.  This will\n\
    \   inform the receiver of the request to add another link to the bundle\n   and\
    \ give the receiver a chance to inform the implementation of the\n   phone number\
    \ of a free port that can be called.\n   The options field MUST include the Link-Type\
    \ option.  The options\n   field MAY include the No-Phone-Number and/or the Reason\
    \ options.\n   Upon reception of a Call-Request, a Call-Response datagram MUST\
    \ be\n   transmitted.\n"
- title: 5.5.2.  Call-Response
  contents:
  - "5.5.2.  Call-Response\n   An implementation MUST transmit a Call-Response datagram\
    \ in response\n   to a received Call-Request datagram.  If the Call-Request is\n\
    \   acceptable, the Call-Response MUST have a Response Code of Request-\n   Ack.\
    \  The Phone-Delta option MUST be included in a Call-Response\n   packet with\
    \ a Response Code of Request-Ack unless the Call-Request\n   included the No-Phone-Number\
    \ option. The options field MAY include\n   the Reason and/or Link-Type options.\n"
- title: 5.5.3.  Callback-Request
  contents:
  - "5.5.3.  Callback-Request\n   An implementation that wants its peer to originate\
    \ another link to\n   add to the multilink bundle MUST transmit a Callback-Request\
    \ packet\n   to its peer.  This will inform the receiver of the request to add\n\
    \   another link to the bundle along with the number to be called.\n   The options\
    \ field MUST include the Link-Type and Phone-Delta options.\n   The Reason option\
    \ MAY also be included.\n   Upon reception of a Callback-Request, a Callback-Response\
    \ datagram\n   MUST be transmitted.\n"
- title: 5.5.4.  Callback-Response
  contents:
  - "5.5.4.  Callback-Response\n   An implementation MUST transmit a Callback-Response\
    \ datagram in\n   response to a received Callback-Request datagram.  If the Callback-\n\
    \   Request is acceptable, the Callback-Response MUST have a Response\n   Code\
    \ of Request-Ack.  A Callback-Response packet MAY include the\n   Link-Type option.\n"
- title: 5.5.5.  Link-Drop-Query-Request
  contents:
  - "5.5.5.  Link-Drop-Query-Request\n   An implementation that determines that a\
    \ link is no longer needed and\n   wishes to negotiate dropping it (e.g., based\
    \ on a throughput BOD\n   decision), MUST transmit a Link-Drop-Query-Request packet.\
    \ The\n   options field MUST include the Link-Discriminator option (containing\n\
    \   the receiver's Link-Discriminator), and MAY include the Reason\n   option.\n\
    \   Upon reception of a Link-Drop-Query-Request, an implementation MUST\n   transmit\
    \ a Link-Drop-Query-Response datagram.  The Response-Code will\n   be Request-Ack\
    \ if it agrees to drop the link; if it does not agree to\n   drop the link the\
    \ Response-Code will be Request-Nak or Request-Full-\n   Nak.  After the receipt\
    \ of a Link-Drop-Query-Response with a Response\n   Code of Request-Ack, the transmitter\
    \ of the Link-Drop-Query-Request\n   MUST initiate tear down of the indicated\
    \ link by sending an LCP\n   Terminate-Request packet on the designated link.\n"
- title: 5.5.6.  Link-Drop-Query-Response
  contents:
  - "5.5.6.  Link-Drop-Query-Response\n   An implementation transmits a Link-Drop-Query-Response\
    \ datagram in\n   response to a received Link-Drop-Query-Request datagram.  If\
    \ the\n   implementation agrees (e.g., based on its throughput BOD algorithm)\n\
    \   to reduce the bandwidth of the multilink bundle, then the Response\n   Code\
    \ MUST be set to Request-Ack.\n   The Reason option MAY be included in the Link-Drop-Query-Response\n\
    \   packet.\n   The Link-Drop-Query-Request datagram MUST be supported, as well\
    \ as\n   the underlying implementation to respond to it.  This means that a\n\
    \   Link-Drop-Query-Response with a Response Code of Request-Rej MUST NOT\n  \
    \ be transmitted in response to a Link-Drop-Query-Request.\n"
- title: 5.5.7.  Call-Status-Indication
  contents:
  - "5.5.7.  Call-Status-Indication\n   After an implementation attempts to add a\
    \ link to a bundle as the\n   result of a Call-Request or a Callback-Request,\
    \ it MUST send a Call-\n   Status-Indication packet to its peer to indicate if\
    \ the attempt to\n   add the link succeeded or failed.  One Indication MUST be\
    \ sent for\n   each attempt made. For each Call-Status-Indication packet transmitted\n\
    \   with the Call-Status Option Action octet set to Retry, a subsequent\n   Call-Status-Indication\
    \ packet MUST be sent to indicate the success or\n   failure of the retry.  The\
    \ Call-Status option MUST be included to\n   inform the receiver of the status\
    \ of the attempt to add a link and\n   the action the implementation will take\
    \ in case of failure.  The\n   reason option MAY also be included in the Call-Status-Indication\n\
    \   packet.\n   Upon reception of a Call-Status-Indication packet which indicates\
    \ a\n   failure, an implementation may log the failure and reason code.  Upon\n\
    \   reception of any Call-Status-Indication packet, a Call-Status-\n   Response\
    \ datagram MUST be transmitted.\n"
- title: 5.5.8.  Call-Status-Response
  contents:
  - "5.5.8.  Call-Status-Response\n   An implementation transmits a Call-Status-Response\
    \ datagram in\n   response to a received Call-Status-Indication datagram.  The\
    \ Response\n   Code field MUST be set to Request-Ack in this packet.  The Reason\n\
    \   option MAY be included in this packet.\n"
- title: 6.  BAP Datagram Options
  contents:
  - "6.  BAP Datagram Options\n   BAP Datagram Options are used in various BAP packets.\
    \  Their use in\n   various packets is as defined below.  The format of these\
    \ options\n   loosely follows the formatting conventions of LCP Configuration\n\
    \   Options.  When there are multiple BAP Options in one BAP packet, the\n   options\
    \ MAY be transmitted in any order.\n   A summary of the BAP Option format is shown\
    \ below.  The fields are\n   transmitted from left to right.\n    0          \
    \         1\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |    Data ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      The type field is one octet, and indicates the type of the BAP\n\
    \      Datagram Option.  This field is binary coded Hexadecimal.  The\n      following\
    \ options are currently defined:\n         01   Link-Type\n         02   Phone-Delta\n\
    \         03   No-Phone-Number-Needed\n         04   Reason\n         05   Link-Discriminator\n\
    \         06   Call-Status\n   Length\n      The Length field is one octet, and\
    \ indicates the length of this\n      BAP Option including the Type, Length, and\
    \ Data fields.\n   Data\n      The Data field is zero or more octets, and contains\
    \ information\n      specific to the BAP Option.  The format and length of the\
    \ Data\n      field is determined by the Type and Length fields.\n"
- title: 6.1.  Link-Type
  contents:
  - "6.1.  Link-Type\n   Description\n      This option indicates the general type\
    \ of link indicated for the\n      operation being performed.  This option does\
    \ not indicate a\n      specific link type, rather it gives some general characteristics\n\
    \      of the desired link type.  This option MAY be used along with\n      other\
    \ knowledge (i.e., the type of the other link(s) in the bundle\n      or user\
    \ configuration) to determine the type of link desired to be\n      used in the\
    \ operation.  It MUST be included in a Call- or\n      Callback-Request, and MAY\
    \ be included in a Call- or Callback-\n      Response.\n   A summary of the Link-Type\
    \ BAP Option format is shown below.  The\n   fields are transmitted from left\
    \ to right.\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |       Link Speed (kbps)       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Link Type    |\n   +-+-+-+-+-+-+-+-+\n   Type\n      01 for Link-Type.\n\
    \   Length\n      The Length field is one octet, and indicates the length of this\n\
    \      BAP Option including the Type, Length and Link Type fields.\n   Link Speed\n\
    \      The Link Speed field is 2 octets, and indicates the requested\n      speed\
    \ of the desired link in kilobits per second.  This field is\n      coded as 2\
    \ binary coded hexadecimal octets, with the most\n      significant octet sent\
    \ first.\n   Link Type\n      The Link Type field is a bit mask.  It is 1 octet\
    \ in length.  Bit\n      0 of the Link Type field corresponds to bit 39 of the\
    \ Link-Type\n      BAP Option as described above.  If a bit is set, it indicates\n\
    \      support of the corresponding link type.  If the link indicated is\n   \
    \   different than the supported link types, no bit will be set.\n      Otherwise,\
    \ at least one bit MUST be set.  If an implementation\n      supports more than\
    \ one link type, more than one bit MAY be set.\n         Bit     Link type\n \
    \        ---     -------------\n          0      ISDN\n          1      X.25\n\
    \          2      analog\n          3      switched digital (non-ISDN)\n     \
    \     4      ISDN data over voice\n          5-7    reserved\n      If the Length\
    \ field contains more bits than are defined by this\n      specification, then\
    \ any bits that are not defined should be\n      ignored.  In order to allow for\
    \ future expansion of this field, it\n      is important to properly support receiving\
    \ a Link Type field\n      longer than what is defined by this specification.\
    \  If the Length\n      field is shorter than the number of bits defined, then\
    \ the\n      implementation should set all bits not received to 0.\n"
- title: 6.2.  Phone-Delta
  contents:
  - "6.2.  Phone-Delta\n   Description\n      The BAP Phone-Delta Option is used by\
    \ an implementation to give\n      its peer the information needed to make a call.\
    \  Due to the\n      difficulty of determining which dialing prefixes (if any)\
    \ are\n      necessary to dial a given phone number/national destination\n   \
    \   code/country code combination, the phone number to be dialed will\n      be\
    \ based on a previously known number.  This MAY be the original\n      number\
    \ used to establish the first link of the multilink bundle, a\n      number configured\
    \ by the user, the phone number used to make a\n      callback connection, or\
    \ a number determined in some other way.\n      The Phone-Delta Option will consist\
    \ of a Subscriber-Number Sub-\n      Option along with a Unique-Digits Sub-Option\
    \ that indicates how\n      many of the digits of the Subscriber-Number are unique\
    \ among the\n      ports in use, previously used, and to be used in the multilink\n\
    \      bundle.  There is also an optional Phone-Number-Sub-Address Sub-\n    \
    \  Option.\n      An implementation MAY include more than one Phone-Delta option\
    \ in\n      a response.  This indicates that there is more than one phone\n  \
    \    number that can be used for the requested operation.  The Phone-\n      Delta\
    \ option MUST appear in a Callback-Request.  It also MUST\n      appear in a Call-Response\
    \ with a Response Code set to Request-Ack\n      if the Call-Request did not contain\
    \ the No-Phone-Number option.\n      It MAY be included in the Call-Status-Indication\
    \ packet.\n   A summary of the Phone-Delta BAP Option format is shown below. \
    \ The\n   fields are transmitted from left to right.\n    0                  \
    \ 1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |Sub-Option Type| Sub-Option Len|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Sub-Option...\n   +-+-+-+-+-+-+-+-+\n   Type\n      02 for Phone-Delta.\n\
    \   Length\n      The Length field is one octet, and indicates the length of this\n\
    \      BAP Option including the Type, Length, and Sub-Option fields.\n   Sub-Option\
    \ Type\n      The following Sub-Option Types are defined for the Phone-Delta\n\
    \      option.\n          01   Unique-Digits\n          02   Subscriber-Number\n\
    \          03   Phone-Number-Sub-Address\n   Sub-Option Length\n      The Sub-Option\
    \ Length field is one octet, and indicates the length\n      of this BAP Sub-Option\
    \ including the Sub-Option Type, Sub-Option\n      Length, and Sub-Option fields.\n"
- title: 6.2.1.  Phone-Delta Sub-Options
  contents:
  - "6.2.1.  Phone-Delta Sub-Options\n   Unique-Digits\n      The Unique-Digits Sub-Option\
    \ field consists of one octet that is a\n      count of the number of rightmost\
    \ digits of the Subscriber-Number\n      that are different from the set of phone\
    \ numbers of the ports used\n      in this multilink connection.  (For example,\
    \ if the first port of\n      a multilink bundle has a phone number of 123456789,\
    \ and an\n      implementation wanted its peer to call a port with a phone number\n\
    \      of 123456888, the Unique-Digits octet would be 3.) If the Phone-\n    \
    \  Number-Sub-Address Sub-Option is present, the Unique-Digits Sub-\n      Option\
    \ MUST NOT include any of the Sub Address digits in its count\n      of different\
    \ rightmost digits.\n      This field is required.\n   Subscriber-Number\n   \
    \   This field is the phone number of the port that should be called\n      by\
    \ the peer. Any digits that precede the rightmost unique digits\n      of the\
    \ Subscriber-Number are provided for informational purposes\n      only, and do\
    \ not need to be included in this field.  This field is\n      an ASCII string\
    \ and MUST contain only ASCII characters indicating\n      valid phone number\
    \ digits.  This field is required.\n   Phone-Number-Sub-Address\n      This field\
    \ is the sub address of the port to be called by the\n      peer.  This sub-option\
    \ SHOULD only be used for an ISDN call. This\n      field is an ASCII string and\
    \ only contains valid phone number\n      digits. This field is optional.\n"
- title: 6.3.  No-Phone-Number-Needed
  contents:
  - "6.3.  No-Phone-Number-Needed\n   Description\n      The No-Phone-Number option\
    \ indicates that the calling\n      implementation is already configured with\
    \ the phone number of its\n      multilink peer and the answering implementation\
    \ MUST NOT include\n      the Phone Number option in the response.  This may be\
    \ for security\n      reasons, for configuration reasons, or for any other reason.\n\
    \      This option MAY be used in a Call-Request packet.\n   A summary of the\
    \ No-Phone-Number BAP Option format is shown below.\n   The fields are transmitted\
    \ from left to right.\n    0                   1\n    0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |     Type      |    Length\
    \     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type\n      03 for No-Phone-Number.\n\
    \   Length\n      2\n"
- title: 6.4.  Reason
  contents:
  - "6.4.  Reason\n   Description\n      This option is used to indicate a reason\
    \ for the Request or\n      Response.  It is meant to be used for informational\
    \ purposes only.\n      This option MAY be used in any BAP packet.\n   A summary\
    \ of the Reason BAP Option format is shown below.  The fields\n   are transmitted\
    \ from left to right.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |         Reason String...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      04 for Reason.\n   Length\n      The Length field is one octet,\
    \ and indicates the length of this\n      BAP Option including the Type, Length\
    \ and Reason String fields.\n   Reason String\n      This is an ASCII string.\
    \  The content of the field is\n      implementation dependent.  An implementation\
    \ MAY ignore the Reason\n      String field.\n"
- title: 6.5.  Link-Discriminator
  contents:
  - "6.5.  Link-Discriminator\n   Description\n      The Link-Discriminator option\
    \ MUST be used in a Link-Drop-Query-\n      Request datagram.  This option is\
    \ used to inform the receiver of a\n      Link-Drop-Query-Request of which link\
    \ will be dropped.\n   A summary of the Link-Discriminator BAP Option format is\
    \ shown below.\n   The fields are transmitted from left to right.\n    0     \
    \              1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |       Link Discriminator      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      05 for Link-Discriminator\n   Length\n      4\n   Link Discriminator\n\
    \      The Link Discriminator field is 2 octets in length.  It contains\n    \
    \  the Link Discriminator that was contained in the LCP Link-\n      Discriminator\
    \ Configuration Option sent by the receiver of the\n      packet containing the\
    \ Link Discriminator.\n"
- title: 6.6.  Call-Status
  contents:
  - "6.6.  Call-Status\n   Description\n      The Call-Status option MUST be used\
    \ in a Call-Status-Indication\n      datagram.  This option is used to inform\
    \ the receiver of the\n      Call-Status-Indication datagram of the status of\
    \ the completed\n      call attempt, as well as a possible action that will be\
    \ taken (if\n      the call failed).\n   A summary of the Call-Status BAP Option\
    \ format is shown below.  The\n   fields are transmitted from left to right.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |     Status    |     Action    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      06 for Call-Status.\n   Length\n      4\n   Status\n      The\
    \ Status field is 1 octet in length.  If the call was\n      successful, the value\
    \ MUST be set to 0.  A non-zero value\n      indicates a call failure.  A value\
    \ of 255 indicates a non-specific\n      failure, and a more specific call status\
    \ MAY be indicated by using\n      the same number as the Q.931 cause value (i.e.,\
    \ 1 is unassigned\n      number, 17 is user busy, etc.)\n   Action\n   The Action\
    \ octet indicates what action the calling implementation is\n   taking after a\
    \ failed call.  If the call was sucessful, the Action\n   octet MUST be set to\
    \ 0.\n   The Action octet can have the following values:\n      0 - No retry\n\
    \      1 - Retry\n"
- title: Appendix
  contents:
  - 'Appendix

    '
- title: List of BAP datagrams and associated fields.
  contents:
  - 'List of BAP datagrams and associated fields.

    '
- title: datagram                      mandatory fields           allowed options
  contents:
  - 'datagram                      mandatory fields           allowed options

    '
- title: '--------                      -----------------          ---------------'
  contents:
  - '--------                      -----------------          ---------------

    '
- title: Call-Request                  Link-Type                  No-Phone-Number
  contents:
  - 'Call-Request                  Link-Type                  No-Phone-Number

    '
- title: Call-Response                                            Phone-Delta
  contents:
  - "Call-Response                                            Phone-Delta\n      \
    \                                                   Link-Type\n"
- title: Callback-Request              Link-Type
  contents:
  - "Callback-Request              Link-Type\n                              Phone-Delta\n"
- title: Callback-Response                                        Link-Type
  contents:
  - 'Callback-Response                                        Link-Type

    '
- title: Link-Drop-Query-Request       Link-Discriminator
  contents:
  - 'Link-Drop-Query-Request       Link-Discriminator

    '
- title: Link-Drop-Query-Response
  contents:
  - 'Link-Drop-Query-Response

    '
- title: Call-Status-Indication        Call-Status                Phone-Delta
  contents:
  - 'Call-Status-Indication        Call-Status                Phone-Delta

    '
- title: Call-Status-Response
  contents:
  - "Call-Status-Response\n   The Reason option is allowed to be included with any\
    \ BAP datagram.\n"
- title: History of BACP
  contents:
  - "History of BACP\n   The first version of BACP was written by Craig Richards of\
    \ Shiva\n   Corporation.  This version was enhanced and improved by the MPCP\n\
    \   Working Group, a collaborative effort of 3Com, Ascend, Bay Networks,\n   Cisco,\
    \ Microsoft, Shiva, US Robotics and Xylogics.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Kevin Smith of Ascend for his contributions based on his\
    \ work on the\n   MP+ Specification.  Gerry Meyer and Robert Myhill of Shiva for\
    \ their\n   early comments and improvements.  Andy Nicholson of Microsoft for\
    \ his\n   improvements to the bandwidth management scheme.  Dana Blair and Andy\n\
    \   Valencia of Cisco, Cheng Chen and Dan Brennan of 3Com for their good\n   ideas\
    \ as part of the MPCP Working Group. All of the members of the\n   MPCP working\
    \ group for their ability to work with their competitors\n   with enthusiasm to\
    \ produce a better protocol for the industry.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: References
  contents:
  - 'References

    '
- title: '[1]   Simpson, W., Editor, "The Point-to-Point Protocol (PPP)", STD'
  contents:
  - "[1]   Simpson, W., Editor, \"The Point-to-Point Protocol (PPP)\", STD\n     \
    \ 51, RFC 1661, Daydreamer, July 1994.\n"
- title: '[2]   Sklower, Lloyd, McGregor, Carr & Coradetti, "The PPP Multilink'
  contents:
  - "[2]   Sklower, Lloyd, McGregor, Carr & Coradetti, \"The PPP Multilink\n     \
    \ Protocol\", RFC 1990,  University of California, Berkeley, Lloyd\n      Internetworking,\
    \ Newbridge Networks Corporation, Sidewalk\n      Software, August 1996.\n"
- title: Chair's Address
  contents:
  - "Chair's Address\n   The working group can be contacted via the current chair:\n\
    \      Karl Fox\n      Ascend Communications\n      3518 Riverside Drive, Suite\
    \ 101\n      Columbus, Ohio  43221\n      (614)451-1883\n      EMail: karl@ascend.com\n"
- title: Editors' Addresses
  contents:
  - "Editors' Addresses\n      Craig Richards\n      Shiva Corporation\n      28 Crosby\
    \ Drive\n      Bedford, MA  01730\n      VOICE   +1 617 270 8419\n      FAX  \
    \   +1 617 270 8599\n      EMail: crich@us.shiva.com\n      Kevin Smith\n    \
    \  Ascend Communications, Inc.\n      1275 Harbor Bay Parkway\n      Alameda,\
    \ CA  94501\n      CA\n      EMail: kevin@ascend.com\n"
