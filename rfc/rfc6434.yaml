- title: __initial_text__
  contents:
  - '                         IPv6 Node Requirements

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines requirements for IPv6 nodes.  It is expected\n\
    \   that IPv6 will be deployed in a wide range of devices and situations.\n  \
    \ Specifying the requirements for IPv6 nodes allows IPv6 to function\n   well\
    \ and interoperate in a large number of situations and\n   deployments.\n   This\
    \ document obsoletes RFC 4294.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6434.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  4\n     1.1.  Scope of This Document . . . . . . . . . . . . .\
    \ . . . . .  5\n     1.2.  Description of IPv6 Nodes  . . . . . . . . . . . .\
    \ . . . .  5\n   2.  Requirements Language  . . . . . . . . . . . . . . . . .\
    \ . . .  5\n   3.  Abbreviations Used in This Document  . . . . . . . . . . .\
    \ . .  5\n   4.  Sub-IP Layer . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  6\n   5.  IP Layer . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \  7\n     5.1.  Internet Protocol Version 6 - RFC 2460 . . . . . . . . . .  7\n\
    \     5.2.  Neighbor Discovery for IPv6 - RFC 4861 . . . . . . . . . .  8\n  \
    \   5.3.  Default Router Preferences and More-Specific Routes -\n           RFC\
    \ 4191 . . . . . . . . . . . . . . . . . . . . . . . . .  9\n     5.4.  SEcure\
    \ Neighbor Discovery (SEND) - RFC 3971  . . . . . . .  9\n     5.5.  IPv6 Router\
    \ Advertisement Flags Option - RFC 5175  . . . .  9\n     5.6.  Path MTU Discovery\
    \ and Packet Size . . . . . . . . . . . . 10\n       5.6.1.  Path MTU Discovery\
    \ - RFC 1981  . . . . . . . . . . . . 10\n     5.7.  IPv6 Jumbograms - RFC 2675\
    \ . . . . . . . . . . . . . . . . 10\n     5.8.  ICMP for the Internet Protocol\
    \ Version 6 (IPv6) - RFC\n           4443 . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . 10\n     5.9.  Addressing . . . . . . . . . . . . . . . .\
    \ . . . . . . . . 11\n       5.9.1.  IP Version 6 Addressing Architecture - RFC\
    \ 4291  . . . 11\n       5.9.2.  IPv6 Stateless Address Autoconfiguration - RFC\
    \ 4862  . 11\n       5.9.3.  Privacy Extensions for Address Configuration in\n\
    \               IPv6 - RFC 4941  . . . . . . . . . . . . . . . . . . . 12\n  \
    \     5.9.4.  Default Address Selection for IPv6 - RFC 3484  . . . . 12\n    \
    \   5.9.5.  Stateful Address Autoconfiguration (DHCPv6) - RFC\n              \
    \ 3315 . . . . . . . . . . . . . . . . . . . . . . . . . 12\n     5.10. Multicast\
    \ Listener Discovery (MLD) for IPv6  . . . . . . . 13\n   6.  DHCP versus Router\
    \ Advertisement Options for Host\n       Configuration  . . . . . . . . . . .\
    \ . . . . . . . . . . . . . 13\n   7.  DNS and DHCP . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . 14\n     7.1.  DNS  . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 14\n     7.2.  Dynamic Host Configuration Protocol for\
    \ IPv6 (DHCPv6)\n           - RFC 3315 . . . . . . . . . . . . . . . . . . . .\
    \ . . . . 15\n       7.2.1.  Other Configuration Information  . . . . . . . .\
    \ . . . 15\n       7.2.2.  Use of Router Advertisements in Managed\n         \
    \      Environments . . . . . . . . . . . . . . . . . . . . . 15\n     7.3.  IPv6\
    \ Router Advertisement Options for DNS\n           Configuration - RFC 6106 .\
    \ . . . . . . . . . . . . . . . . 15\n   8.  IPv4 Support and Transition  . .\
    \ . . . . . . . . . . . . . . . 16\n     8.1.  Transition Mechanisms  . . . .\
    \ . . . . . . . . . . . . . . 16\n       8.1.1.  Basic Transition Mechanisms for\
    \ IPv6 Hosts and\n               Routers - RFC 4213 . . . . . . . . . . . . .\
    \ . . . . . 16\n   9.  Application Support  . . . . . . . . . . . . . . . . .\
    \ . . . . 16\n     9.1.  Textual Representation of IPv6 Addresses - RFC 5952 \
    \ . . . 16\n     9.2.  Application Programming Interfaces (APIs)  . . . . . .\
    \ . . 16\n   10. Mobility . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 17\n   11. Security . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 17\n     11.1. Requirements . . . . . . . . . . . . . . . . . . . . . . . 18\n\
    \     11.2. Transforms and Algorithms  . . . . . . . . . . . . . . . . 19\n  \
    \ 12. Router-Specific Functionality  . . . . . . . . . . . . . . . . 19\n    \
    \ 12.1. IPv6 Router Alert Option - RFC 2711  . . . . . . . . . . . 19\n     12.2.\
    \ Neighbor Discovery for IPv6 - RFC 4861 . . . . . . . . . . 19\n     12.3. Stateful\
    \ Address Autoconfiguration (DHCPv6) - RFC 3315 . . 19\n   13. Network Management\
    \ . . . . . . . . . . . . . . . . . . . . . . 20\n     13.1. Management Information\
    \ Base (MIB) Modules  . . . . . . . . 20\n       13.1.1. IP Forwarding Table MIB\
    \  . . . . . . . . . . . . . . . 20\n       13.1.2. Management Information Base\
    \ for the Internet\n               Protocol (IP)  . . . . . . . . . . . . . .\
    \ . . . . . . 20\n   14. Security Considerations  . . . . . . . . . . . . . .\
    \ . . . . . 20\n   15. Authors and Acknowledgments  . . . . . . . . . . . . .\
    \ . . . . 21\n     15.1. Authors and Acknowledgments (Current Document) . . .\
    \ . . . 21\n     15.2. Authors and Acknowledgments from RFC 4279  . . . . . .\
    \ . . 21\n   16. Appendix: Changes from RFC 4294  . . . . . . . . . . . . . .\
    \ . 22\n   17. References . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 23\n     17.1. Normative References . . . . . . . . . . . . . . . . . . . 23\n\
    \     17.2. Informative References . . . . . . . . . . . . . . . . . . 26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines common functionality required from\
    \ both IPv6\n   hosts and routers.  Many IPv6 nodes will implement optional or\n\
    \   additional features, but this document collects and summarizes\n   requirements\
    \ from other published Standards Track documents in one\n   place.\n   This document\
    \ tries to avoid discussion of protocol details and\n   references RFCs for this\
    \ purpose.  This document is intended to be an\n   applicability statement and\
    \ to provide guidance as to which IPv6\n   specifications should be implemented\
    \ in the general case and which\n   specifications may be of interest to specific\
    \ deployment scenarios.\n   This document does not update any individual protocol\
    \ document RFCs.\n   Although this document points to different specifications,\
    \ it should\n   be noted that in many cases, the granularity of a particular\n\
    \   requirement will be smaller than a single specification, as many\n   specifications\
    \ define multiple, independent pieces, some of which may\n   not be mandatory.\
    \  In addition, most specifications define both\n   client and server behavior\
    \ in the same specification, while many\n   implementations will be focused on\
    \ only one of those roles.\n   This document defines a minimal level of requirement\
    \ needed for a\n   device to provide useful internet service and considers a broad\
    \ range\n   of device types and deployment scenarios.  Because of the wide range\n\
    \   of deployment scenarios, the minimal requirements specified in this\n   document\
    \ may not be sufficient for all deployment scenarios.  It is\n   perfectly reasonable\
    \ (and indeed expected) for other profiles to\n   define additional or stricter\
    \ requirements appropriate for specific\n   usage and deployment environments.\
    \  For example, this document does\n   not mandate that all clients support DHCP,\
    \ but some deployment\n   scenarios may deem it appropriate to make such a requirement.\
    \  For\n   example, government agencies in the USA have defined profiles for\n\
    \   specialized requirements for IPv6 in target environments (see [DODv6]\n  \
    \ and [USGv6]).\n   As it is not always possible for an implementer to know the\
    \ exact\n   usage of IPv6 in a node, an overriding requirement for IPv6 nodes\
    \ is\n   that they should adhere to Jon Postel's Robustness Principle: \"Be\n\
    \   conservative in what you do, be liberal in what you accept from\n   others\"\
    \ [RFC0793].\n"
- title: 1.1.  Scope of This Document
  contents:
  - "1.1.  Scope of This Document\n   IPv6 covers many specifications.  It is intended\
    \ that IPv6 will be\n   deployed in many different situations and environments.\
    \  Therefore,\n   it is important to develop requirements for IPv6 nodes to ensure\n\
    \   interoperability.\n   This document assumes that all IPv6 nodes meet the minimum\n\
    \   requirements specified here.\n"
- title: 1.2.  Description of IPv6 Nodes
  contents:
  - "1.2.  Description of IPv6 Nodes\n   From the Internet Protocol, Version 6 (IPv6)\
    \ Specification [RFC2460],\n   we have the following definitions:\n   IPv6 node\
    \   - a device that implements IPv6.\n   IPv6 router - a node that forwards IPv6\
    \ packets not explicitly\n                 addressed to itself.\n   IPv6 host\
    \   - any node that is not a router.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 3.  Abbreviations Used in This Document
  contents:
  - "3.  Abbreviations Used in This Document\n   ATM   Asynchronous Transfer Mode\n\
    \   AH    Authentication Header\n   DAD   Duplicate Address Detection\n   ESP\
    \   Encapsulating Security Payload\n   ICMP  Internet Control Message Protocol\n\
    \   IKE   Internet Key Exchange\n   MIB   Management Information Base\n   MLD\
    \   Multicast Listener Discovery\n   MTU   Maximum Transmission Unit\n   NA  \
    \  Neighbor Advertisement\n   NBMA  Non-Broadcast Multiple Access\n   ND    Neighbor\
    \ Discovery\n   NS    Neighbor Solicitation\n   NUD   Neighbor Unreachability\
    \ Detection\n   PPP   Point-to-Point Protocol\n"
- title: 4.  Sub-IP Layer
  contents:
  - "4.  Sub-IP Layer\n   An IPv6 node must include support for one or more IPv6 link-layer\n\
    \   specifications.  Which link-layer specifications an implementation\n   should\
    \ include will depend upon what link-layers are supported by the\n   hardware\
    \ available on the system.  It is possible for a conformant\n   IPv6 node to support\
    \ IPv6 on some of its interfaces and not on\n   others.\n   As IPv6 is run over\
    \ new layer 2 technologies, it is expected that new\n   specifications will be\
    \ issued.  In the following, we list some of the\n   layer 2 technologies for\
    \ which an IPv6 specification has been\n   developed.  It is provided for informational\
    \ purposes only and may\n   not be complete.\n   -  Transmission of IPv6 Packets\
    \ over Ethernet Networks [RFC2464]\n   -  IPv6 over ATM Networks [RFC2492]\n \
    \  -  Transmission of IPv6 Packets over Frame Relay Networks\n      Specification\
    \ [RFC2590]\n   -  Transmission of IPv6 Packets over IEEE 1394 Networks [RFC3146]\n\
    \   -  Transmission of IPv6, IPv4, and Address Resolution Protocol (ARP)\n   \
    \   Packets over Fibre Channel [RFC4338]\n   -  Transmission of IPv6 Packets over\
    \ IEEE 802.15.4 Networks [RFC4944]\n   -  Transmission of IPv6 via the IPv6 Convergence\
    \ Sublayer over IEEE\n      802.16 Networks [RFC5121]\n   -  IP version 6 over\
    \ PPP [RFC5072]\n   In addition to traditional physical link-layers, it is also\
    \ possible\n   to tunnel IPv6 over other protocols.  Examples include:\n   - \
    \ Teredo: Tunneling IPv6 over UDP through Network Address\n      Translations\
    \ (NATs) [RFC4380]\n   -  Section 3 of \"Basic Transition Mechanisms for IPv6\
    \ Hosts and\n      Routers\" [RFC4213]\n"
- title: 5.  IP Layer
  contents:
  - '5.  IP Layer

    '
- title: 5.1.  Internet Protocol Version 6 - RFC 2460
  contents:
  - "5.1.  Internet Protocol Version 6 - RFC 2460\n   The Internet Protocol Version\
    \ 6 is specified in [RFC2460].  This\n   specification MUST be supported.\n  \
    \ Any unrecognized extension headers or options MUST be processed as\n   described\
    \ in RFC 2460.\n   The node MUST follow the packet transmission rules in RFC 2460.\n\
    \   Nodes MUST always be able to send, receive, and process fragment\n   headers.\
    \  All conformant IPv6 implementations MUST be capable of\n   sending and receiving\
    \ IPv6 packets; the forwarding functionality MAY\n   be supported.  Overlapping\
    \ fragments MUST be handled as described in\n   [RFC5722].\n   RFC 2460 specifies\
    \ extension headers and the processing for these\n   headers.\n   An IPv6 node\
    \ MUST be able to process these headers.  An exception is\n   Routing Header type\
    \ 0 (RH0), which was deprecated by [RFC5095] due to\n   security concerns and\
    \ which MUST be treated as an unrecognized\n   routing type.\n   All nodes SHOULD\
    \ support the setting and use of the IPv6 Flow Label\n   field as defined in the\
    \ IPv6 Flow Label specification [RFC6437].\n   Forwarding nodes such as routers\
    \ and load distributors MUST NOT\n   depend only on Flow Label values being uniformly\
    \ distributed.  It is\n   RECOMMENDED that source hosts support the flow label\
    \ by setting the\n   Flow Label field for all packets of a given flow to the same\
    \ value\n   chosen from an approximation to a discrete uniform distribution.\n"
- title: 5.2.  Neighbor Discovery for IPv6 - RFC 4861
  contents:
  - "5.2.  Neighbor Discovery for IPv6 - RFC 4861\n   Neighbor Discovery is defined\
    \ in [RFC4861]; the definition was\n   updated by [RFC5942].  Neighbor Discovery\
    \ SHOULD be supported.  RFC\n   4861 states:\n      Unless specified otherwise\
    \ (in a document that covers operating IP\n      over a particular link type)\
    \ this document applies to all link\n      types.  However, because ND uses link-layer\
    \ multicast for some of\n      its services, it is possible that on some link\
    \ types (e.g., Non-\n      Broadcast Multi-Access (NBMA) links), alternative protocols\
    \ or\n      mechanisms to implement those services will be specified (in the\n\
    \      appropriate document covering the operation of IP over a\n      particular\
    \ link type).  The services described in this document\n      that are not directly\
    \ dependent on multicast, such as Redirects,\n      next-hop determination, Neighbor\
    \ Unreachability Detection, etc.,\n      are expected to be provided as specified\
    \ in this document.  The\n      details of how one uses ND on NBMA links are addressed\
    \ in\n      [RFC2491].\n   Some detailed analysis of Neighbor Discovery follows:\n\
    \   Router Discovery is how hosts locate routers that reside on an\n   attached\
    \ link.  Hosts MUST support Router Discovery functionality.\n   Prefix Discovery\
    \ is how hosts discover the set of address prefixes\n   that define which destinations\
    \ are on-link for an attached link.\n   Hosts MUST support Prefix Discovery.\n\
    \   Hosts MUST also implement Neighbor Unreachability Detection (NUD) for\n  \
    \ all paths between hosts and neighboring nodes.  NUD is not required\n   for\
    \ paths between routers.  However, all nodes MUST respond to\n   unicast Neighbor\
    \ Solicitation (NS) messages.\n   Hosts MUST support the sending of Router Solicitations\
    \ and the\n   receiving of Router Advertisements.  The ability to understand\n\
    \   individual Router Advertisement options is dependent on supporting\n   the\
    \ functionality making use of the particular option.\n   All nodes MUST support\
    \ the sending and receiving of Neighbor\n   Solicitation (NS) and Neighbor Advertisement\
    \ (NA) messages.  NS and\n   NA messages are required for Duplicate Address Detection\
    \ (DAD).\n   Hosts SHOULD support the processing of Redirect functionality.\n\
    \   Routers MUST support the sending of Redirects, though not necessarily\n  \
    \ for every individual packet (e.g., due to rate limiting).  Redirects\n   are\
    \ only useful on networks supporting hosts.  In core networks\n   dominated by\
    \ routers, Redirects are typically disabled.  The sending\n   of Redirects SHOULD\
    \ be disabled by default on backbone routers.  They\n   MAY be enabled by default\
    \ on routers intended to support hosts on\n   edge networks.\n   \"IPv6 Host-to-Router\
    \ Load Sharing\" [RFC4311] includes additional\n   recommendations on how to select\
    \ from a set of available routers.\n   [RFC4311] SHOULD be supported.\n"
- title: 5.3.  Default Router Preferences and More-Specific Routes - RFC 4191
  contents:
  - "5.3.  Default Router Preferences and More-Specific Routes - RFC 4191\n   \"Default\
    \ Router Preferences and More-Specific Routes\" [RFC4191]\n   provides support\
    \ for nodes attached to multiple (different) networks,\n   each providing routers\
    \ that advertise themselves as default routers\n   via Router Advertisements.\
    \  In some scenarios, one router may provide\n   connectivity to destinations\
    \ the other router does not, and choosing\n   the \"wrong\" default router can\
    \ result in reachability failures.  In\n   such cases, RFC 4191 can help.\n  \
    \ Small Office/Home Office (SOHO) deployments supported by routers\n   adhering\
    \ to [RFC6204] use RFC 4191 to advertise routes to certain\n   local destinations.\
    \  Consequently, nodes that will be deployed in\n   SOHO environments SHOULD implement\
    \ RFC 4191.\n"
- title: 5.4.  SEcure Neighbor Discovery (SEND) - RFC 3971
  contents:
  - "5.4.  SEcure Neighbor Discovery (SEND) - RFC 3971\n   SEND [RFC3971] and Cryptographically\
    \ Generated Address (CGA)\n   [RFC3972] provide a way to secure the message exchanges\
    \ of Neighbor\n   Discovery.  SEND is a new technology in that it has no IPv4\n\
    \   counterpart, but it has significant potential to address certain\n   classes\
    \ of spoofing attacks.  While there have been some\n   implementations of SEND,\
    \ there has been only limited deployment\n   experience to date in using the technology.\
    \  In addition, the IETF\n   working group Cga & Send maIntenance (csi) is currently\
    \ working on\n   additional extensions intended to make SEND more attractive for\n\
    \   deployment.\n   At this time, SEND is considered optional, and IPv6 nodes\
    \ MAY provide\n   SEND functionality.\n"
- title: 5.5.  IPv6 Router Advertisement Flags Option - RFC 5175
  contents:
  - "5.5.  IPv6 Router Advertisement Flags Option - RFC 5175\n   Router Advertisements\
    \ include an 8-bit field of single-bit Router\n   Advertisement flags.  The Router\
    \ Advertisement Flags Option extends\n   the number of available flag bits by\
    \ 48 bits.  At the time of this\n   writing, 6 of the original 8 single-bit flags\
    \ have been assigned,\n   while 2 remain available for future assignment.  No\
    \ flags have been\n   defined that make use of the new option, and thus, strictly\
    \ speaking,\n   there is no requirement to implement the option today.  However,\n\
    \   implementations that are able to pass unrecognized options to a\n   higher-level\
    \ entity that may be able to understand them (e.g., a\n   user-level process using\
    \ a \"raw socket\" facility) MAY take steps to\n   handle the option in anticipation\
    \ of a future usage.\n"
- title: 5.6.  Path MTU Discovery and Packet Size
  contents:
  - '5.6.  Path MTU Discovery and Packet Size

    '
- title: 5.6.1.  Path MTU Discovery - RFC 1981
  contents:
  - "5.6.1.  Path MTU Discovery - RFC 1981\n   \"Path MTU Discovery for IP version\
    \ 6\" [RFC1981] SHOULD be supported.\n   From [RFC2460]:\n      It is strongly\
    \ recommended that IPv6 nodes implement Path MTU\n      Discovery [RFC1981], in\
    \ order to discover and take advantage of\n      path MTUs greater than 1280 octets.\
    \  However, a minimal IPv6\n      implementation (e.g., in a boot ROM) may simply\
    \ restrict itself to\n      sending packets no larger than 1280 octets, and omit\n\
    \      implementation of Path MTU Discovery.\n   The rules in [RFC2460] and [RFC5722]\
    \ MUST be followed for packet\n   fragmentation and reassembly.\n   One operational\
    \ issue with Path MTU Discovery occurs when firewalls\n   block ICMP Packet Too\
    \ Big messages.  Path MTU Discovery relies on\n   such messages to determine what\
    \ size messages can be successfully\n   sent.  \"Packetization Layer Path MTU\
    \ Discovery\" [RFC4821] avoids\n   having a dependency on Packet Too Big messages.\n"
- title: 5.7.  IPv6 Jumbograms - RFC 2675
  contents:
  - "5.7.  IPv6 Jumbograms - RFC 2675\n   IPv6 Jumbograms [RFC2675] are an optional\
    \ extension that allow the\n   sending of IP datagrams larger than 65.535 bytes.\
    \  IPv6 Jumbograms\n   make use of IPv6 hop-by-hop options and are only suitable\
    \ on paths in\n   which every hop and link are capable of supporting Jumbograms\
    \ (e.g.,\n   within a campus or datacenter).  To date, few implementations exist,\n\
    \   and there is essentially no reported experience from usage.\n   Consequently,\
    \ IPv6 Jumbograms [RFC2675] remain optional at this time.\n"
- title: 5.8.  ICMP for the Internet Protocol Version 6 (IPv6) - RFC 4443
  contents:
  - "5.8.  ICMP for the Internet Protocol Version 6 (IPv6) - RFC 4443\n   ICMPv6 [RFC4443]\
    \ MUST be supported.  \"Extended ICMP to Support Multi-\n   Part Messages\" [RFC4884]\
    \ MAY be supported.\n"
- title: 5.9.  Addressing
  contents:
  - '5.9.  Addressing

    '
- title: 5.9.1.  IP Version 6 Addressing Architecture - RFC 4291
  contents:
  - "5.9.1.  IP Version 6 Addressing Architecture - RFC 4291\n   The IPv6 Addressing\
    \ Architecture [RFC4291] MUST be supported.\n"
- title: 5.9.2.  IPv6 Stateless Address Autoconfiguration - RFC 4862
  contents:
  - "5.9.2.  IPv6 Stateless Address Autoconfiguration - RFC 4862\n   Hosts MUST support\
    \ IPv6 Stateless Address Autoconfiguration as\n   defined in [RFC4862].  Configuration\
    \ of static address(es) may be\n   supported as well.\n   Nodes that are routers\
    \ MUST be able to generate link-local addresses\n   as described in [RFC4862].\n\
    \   From RFC 4862:\n      The autoconfiguration process specified in this document\
    \ applies\n      only to hosts and not routers.  Since host autoconfiguration\
    \ uses\n      information advertised by routers, routers will need to be\n   \
    \   configured by some other means.  However, it is expected that\n      routers\
    \ will generate link-local addresses using the mechanism\n      described in this\
    \ document.  In addition, routers are expected to\n      successfully pass the\
    \ Duplicate Address Detection procedure\n      described in this document on all\
    \ addresses prior to assigning\n      them to an interface.\n   All nodes MUST\
    \ implement Duplicate Address Detection.  Quoting from\n   Section 5.4 of RFC\
    \ 4862:\n      Duplicate Address Detection MUST be performed on all unicast\n\
    \      addresses prior to assigning them to an interface, regardless of\n    \
    \  whether they are obtained through stateless autoconfiguration,\n      DHCPv6,\
    \ or manual configuration, with the following [exceptions\n      noted therein].\n\
    \   \"Optimistic Duplicate Address Detection (DAD) for IPv6\" [RFC4429]\n   specifies\
    \ a mechanism to reduce delays associated with generating\n   addresses via Stateless\
    \ Address Autoconfiguration [RFC4862].  RFC\n   4429 was developed in conjunction\
    \ with Mobile IPv6 in order to reduce\n   the time needed to acquire and configure\
    \ addresses as devices quickly\n   move from one network to another, and it is\
    \ desirable to minimize\n   transition delays.  For general purpose devices, RFC\
    \ 4429 remains\n   optional at this time.\n"
- title: 5.9.3.  Privacy Extensions for Address Configuration in IPv6 - RFC 4941
  contents:
  - "5.9.3.  Privacy Extensions for Address Configuration in IPv6 - RFC 4941\n   Privacy\
    \ Extensions for Stateless Address Autoconfiguration [RFC4941]\n   addresses a\
    \ specific problem involving a client device whose user is\n   concerned about\
    \ its activity or location being tracked.  The problem\n   arises both for a static\
    \ client and for one that regularly changes\n   its point of attachment to the\
    \ Internet.  When using Stateless\n   Address Autoconfiguration [RFC4862], the\
    \ Interface Identifier portion\n   of formed addresses stays constant and is globally\
    \ unique.  Thus,\n   although a node's global IPv6 address will change if it changes\
    \ its\n   point of attachment, the Interface Identifier portion of those\n   addresses\
    \ remains the same, making it possible for servers to track\n   the location of\
    \ an individual device as it moves around or its\n   pattern of activity if it\
    \ remains in one place.  This may raise\n   privacy concerns as described in [RFC4862].\n\
    \   In such situations, RFC 4941 SHOULD be implemented.  In other cases,\n   such\
    \ as with dedicated servers in a data center, RFC 4941 provides\n   limited or\
    \ no benefit.\n   Implementers of RFC 4941 should be aware that certain addresses\
    \ are\n   reserved and should not be chosen for use as temporary addresses.\n\
    \   Consult \"Reserved IPv6 Interface Identifiers\" [RFC5453] for more\n   details.\n"
- title: 5.9.4.  Default Address Selection for IPv6 - RFC 3484
  contents:
  - "5.9.4.  Default Address Selection for IPv6 - RFC 3484\n   The rules specified\
    \ in the Default Address Selection for IPv6\n   [RFC3484] document MUST be implemented.\
    \  IPv6 nodes will need to deal\n   with multiple addresses configured simultaneously.\n"
- title: 5.9.5.  Stateful Address Autoconfiguration (DHCPv6) - RFC 3315
  contents:
  - "5.9.5.  Stateful Address Autoconfiguration (DHCPv6) - RFC 3315\n   DHCPv6 [RFC3315]\
    \ can be used to obtain and configure addresses.  In\n   general, a network may\
    \ provide for the configuration of addresses\n   through Router Advertisements,\
    \ DHCPv6, or both.  There will be a wide\n   range of IPv6 deployment models and\
    \ differences in address assignment\n   requirements, some of which may require\
    \ DHCPv6 for address\n   assignment.  Consequently, all hosts SHOULD implement\
    \ address\n   configuration via DHCPv6.\n   In the absence of a router, IPv6 nodes\
    \ using DHCP for address\n   assignment MAY initiate DHCP to obtain IPv6 addresses\
    \ and other\n   configuration information, as described in Section 5.5.2 of\n\
    \   [RFC4862].\n"
- title: 5.10.  Multicast Listener Discovery (MLD) for IPv6
  contents:
  - "5.10.  Multicast Listener Discovery (MLD) for IPv6\n   Nodes that need to join\
    \ multicast groups MUST support MLDv1\n   [RFC2710].  MLDv1 is needed by any node\
    \ that is expected to receive\n   and process multicast traffic.  Note that Neighbor\
    \ Discovery (as used\n   on most link types -- see Section 5.2) depends on multicast\
    \ and\n   requires that nodes join Solicited Node multicast addresses.\n   MLDv2\
    \ [RFC3810] extends the functionality of MLDv1 by supporting\n   Source-Specific\
    \ Multicast.  The original MLDv2 protocol [RFC3810]\n   supporting Source-Specific\
    \ Multicast [RFC4607] supports two types of\n   \"filter modes\".  Using an INCLUDE\
    \ filter, a node indicates a\n   multicast group along with a list of senders\
    \ for the group from which\n   it wishes to receive traffic.  Using an EXCLUDE\
    \ filter, a node\n   indicates a multicast group along with a list of senders\
    \ from which\n   it wishes to exclude receiving traffic.  In practice, operations\
    \ to\n   block source(s) using EXCLUDE mode are rarely used but add\n   considerable\
    \ implementation complexity to MLDv2.  Lightweight MLDv2\n   [RFC5790] is a simplified\
    \ subset of the original MLDv2 specification\n   that omits EXCLUDE filter mode\
    \ to specify undesired source(s).\n   Nodes SHOULD implement either MLDv2 [RFC3810]\
    \ or Lightweight MLDv2\n   [RFC5790].  Specifically, nodes supporting applications\
    \ using Source-\n   Specific Multicast that expect to take advantage of MLDv2's\
    \ EXCLUDE\n   functionality [RFC3810] MUST support MLDv2 as defined in [RFC3810],\n\
    \   [RFC4604], and [RFC4607].  Nodes supporting applications that expect\n   to\
    \ only take advantage of MLDv2's INCLUDE functionality as well as\n   Any-Source\
    \ Multicast will find it sufficient to support MLDv2 as\n   defined in [RFC5790].\n\
    \   If a node only supports applications that use Any-Source Multicast\n   (i.e,\
    \ they do not use Source-Specific Multicast), implementing MLDv1\n   [RFC2710]\
    \ is sufficient.  In all cases, however, nodes are strongly\n   encouraged to\
    \ implement MLDv2 or Lightweight MLDv2 rather than MLDv1,\n   as the presence\
    \ of a single MLDv1 participant on a link requires that\n   all other nodes on\
    \ the link operate in version 1 compatibility mode.\n   When MLDv1 is used, the\
    \ rules in the Source Address Selection for the\n   Multicast Listener Discovery\
    \ (MLD) Protocol [RFC3590] MUST be\n   followed.\n"
- title: 6.  DHCP versus Router Advertisement Options for Host Configuration
  contents:
  - "6.  DHCP versus Router Advertisement Options for Host Configuration\n   In IPv6,\
    \ there are two main protocol mechanisms for propagating\n   configuration information\
    \ to hosts: Router Advertisements (RAs) and\n   DHCP.  Historically, RA options\
    \ have been restricted to those deemed\n   essential for basic network functioning\
    \ and for which all nodes are\n   configured with exactly the same information.\
    \  Examples include the\n   Prefix Information Options, the MTU option, etc. \
    \ On the other hand,\n   DHCP has generally been preferred for configuration of\
    \ more general\n   parameters and for parameters that may be client-specific.\
    \  That\n   said, identifying the exact line on whether a particular option\n\
    \   should be configured via DHCP versus an RA option has not always been\n  \
    \ easy.  Generally speaking, however, there has been a desire to define\n   only\
    \ one mechanism for configuring a given option, rather than\n   defining multiple\
    \ (different) ways of configuring the same\n   information.\n   One issue with\
    \ having multiple ways of configuring the same\n   information is that interoperability\
    \ suffers if a host chooses one\n   mechanism but the network operator chooses\
    \ a different mechanism.\n   For \"closed\" environments, where the network operator\
    \ has significant\n   influence over what devices connect to the network and thus\
    \ what\n   configuration mechanisms they support, the operator may be able to\n\
    \   ensure that a particular mechanism is supported by all connected\n   hosts.\
    \  In more open environments, however, where arbitrary devices\n   may connect\
    \ (e.g., a WIFI hotspot), problems can arise.  To maximize\n   interoperability\
    \ in such environments, hosts would need to implement\n   multiple configuration\
    \ mechanisms to ensure interoperability.\n   Originally, in IPv6, configuring\
    \ information about DNS servers was\n   performed exclusively via DHCP.  In 2007,\
    \ an RA option was defined\n   but was published as Experimental [RFC5006].  In\
    \ 2010, \"IPv6 Router\n   Advertisement Options for DNS Configuration\" [RFC6106]\
    \ was published\n   as a Standards Track document.  Consequently, DNS configuration\n\
    \   information can now be learned either through DHCP or through RAs.\n   Hosts\
    \ will need to decide which mechanism (or whether both) should be\n   implemented.\
    \  Specific guidance regarding DNS server discovery is\n   discussed in Section\
    \ 7.\n"
- title: 7.  DNS and DHCP
  contents:
  - '7.  DNS and DHCP

    '
- title: 7.1.  DNS
  contents:
  - "7.1.  DNS\n   DNS is described in [RFC1034], [RFC1035], [RFC3363], and [RFC3596].\n\
    \   Not all nodes will need to resolve names; those that will never need\n   to\
    \ resolve DNS names do not need to implement resolver functionality.\n   However,\
    \ the ability to resolve names is a basic infrastructure\n   capability on which\
    \ applications rely, and most nodes will need to\n   provide support.  All nodes\
    \ SHOULD implement stub-resolver [RFC1034]\n   functionality, as in [RFC1034],\
    \ Section 5.3.1, with support for:\n   -  AAAA type Resource Records [RFC3596];\n\
    \   -  reverse addressing in ip6.arpa using PTR records [RFC3596];\n   -  Extension\
    \ Mechanisms for DNS (EDNS0) [RFC2671] to allow for DNS\n      packet sizes larger\
    \ than 512 octets.\n   Those nodes are RECOMMENDED to support DNS security extensions\n\
    \   [RFC4033] [RFC4034] [RFC4035].\n   Those nodes are NOT RECOMMENDED to support\
    \ the experimental A6\n   Resource Records [RFC3363].\n"
- title: 7.2.  Dynamic Host Configuration Protocol for IPv6 (DHCPv6) - RFC 3315
  contents:
  - '7.2.  Dynamic Host Configuration Protocol for IPv6 (DHCPv6) - RFC 3315

    '
- title: 7.2.1.  Other Configuration Information
  contents:
  - "7.2.1.  Other Configuration Information\n   IPv6 nodes use DHCP [RFC3315] to\
    \ obtain address configuration\n   information (see Section 5.9.5) and to obtain\
    \ additional (non-\n   address) configuration.  If a host implementation supports\n\
    \   applications or other protocols that require configuration that is\n   only\
    \ available via DHCP, hosts SHOULD implement DHCP.  For\n   specialized devices\
    \ on which no such configuration need is present,\n   DHCP may not be necessary.\n\
    \   An IPv6 node can use the subset of DHCP (described in [RFC3736]) to\n   obtain\
    \ other configuration information.\n"
- title: 7.2.2.  Use of Router Advertisements in Managed Environments
  contents:
  - "7.2.2.  Use of Router Advertisements in Managed Environments\n   Nodes using\
    \ the Dynamic Host Configuration Protocol for IPv6 (DHCPv6)\n   are expected to\
    \ determine their default router information and on-\n   link prefix information\
    \ from received Router Advertisements.\n"
- title: 7.3.  IPv6 Router Advertisement Options for DNS Configuration - RFC 6106
  contents:
  - "7.3.  IPv6 Router Advertisement Options for DNS Configuration - RFC 6106\n  \
    \ Router Advertisements have historically limited options to those that\n   are\
    \ critical to basic IPv6 functioning.  Originally, DNS\n   configuration was not\
    \ included as an RA option, and DHCP was the\n   recommended way to obtain DNS\
    \ configuration information.  Over time,\n   the thinking surrounding such an\
    \ option has evolved.  It is now\n   generally recognized that few nodes can function\
    \ adequately without\n   having access to a working DNS resolver.  [RFC5006] was\
    \ published as\n   an Experimental document in 2007, and recently, a revised version\
    \ was\n   placed on the Standards Track [RFC6106].\n   Implementations SHOULD\
    \ implement the DNS RA option [RFC6106].\n"
- title: 8.  IPv4 Support and Transition
  contents:
  - "8.  IPv4 Support and Transition\n   IPv6 nodes MAY support IPv4.\n"
- title: 8.1.  Transition Mechanisms
  contents:
  - '8.1.  Transition Mechanisms

    '
- title: 8.1.1.  Basic Transition Mechanisms for IPv6 Hosts and Routers - RFC
  contents:
  - "8.1.1.  Basic Transition Mechanisms for IPv6 Hosts and Routers - RFC\n      \
    \  4213\n   If an IPv6 node implements dual stack and tunneling, then [RFC4213]\n\
    \   MUST be supported.\n"
- title: 9.  Application Support
  contents:
  - '9.  Application Support

    '
- title: 9.1.  Textual Representation of IPv6 Addresses - RFC 5952
  contents:
  - "9.1.  Textual Representation of IPv6 Addresses - RFC 5952\n   Software that allows\
    \ users and operators to input IPv6 addresses in\n   text form SHOULD support\
    \ \"A Recommendation for IPv6 Address Text\n   Representation\" [RFC5952].\n"
- title: 9.2.  Application Programming Interfaces (APIs)
  contents:
  - "9.2.  Application Programming Interfaces (APIs)\n   There are a number of IPv6-related\
    \ APIs.  This document does not\n   mandate the use of any, because the choice\
    \ of API does not directly\n   relate to on-the-wire behavior of protocols.  Implementers,\
    \ however,\n   would be advised to consider providing a common API or reviewing\n\
    \   existing APIs for the type of functionality they provide to\n   applications.\n\
    \   \"Basic Socket Interface Extensions for IPv6\" [RFC3493] provides IPv6\n \
    \  functionality used by typical applications.  Implementers should note\n   that\
    \ RFC3493 has been picked up and further standardized by the\n   Portable Operating\
    \ System Interface (POSIX) [POSIX].\n   \"Advanced Sockets Application Program\
    \ Interface (API) for IPv6\"\n   [RFC3542] provides access to advanced IPv6 features\
    \ needed by\n   diagnostic and other more specialized applications.\n   \"IPv6\
    \ Socket API for Source Address Selection\" [RFC5014] provides\n   facilities\
    \ that allow an application to override the default Source\n   Address Selection\
    \ rules of [RFC3484].\n   \"Socket Interface Extensions for Multicast Source Filters\"\
    \ [RFC3678]\n   provides support for expressing source filters on multicast group\n\
    \   memberships.\n   \"Extension to Sockets API for Mobile IPv6\" [RFC4584] provides\n\
    \   application support for accessing and enabling Mobile IPv6 [RFC6275]\n   features.\n"
- title: 10.  Mobility
  contents:
  - "10.  Mobility\n   Mobile IPv6 [RFC6275] and associated specifications [RFC3776]\n\
    \   [RFC4877] allow a node to change its point of attachment within the\n   Internet,\
    \ while maintaining (and using) a permanent address.  All\n   communication using\
    \ the permanent address continues to proceed as\n   expected even as the node\
    \ moves around.  The definition of Mobile IP\n   includes requirements for the\
    \ following types of nodes:\n      - mobile nodes\n      - correspondent nodes\
    \ with support for route optimization\n      - home agents\n      - all IPv6 routers\n\
    \   At the present time, Mobile IP has seen only limited implementation\n   and\
    \ no significant deployment, partly because it originally assumed\n   an IPv6-only\
    \ environment rather than a mixed IPv4/IPv6 Internet.\n   Recently, additional\
    \ work has been done to support mobility in mixed-\n   mode IPv4 and IPv6 networks\
    \ [RFC5555].\n   More usage and deployment experience is needed with mobility\
    \ before\n   any specific approach can be recommended for broad implementation\
    \ in\n   all hosts and routers.  Consequently, [RFC6275], [RFC5555], and\n   associated\
    \ standards such as [RFC4877] are considered a MAY at this\n   time.\n"
- title: 11.  Security
  contents:
  - "11.  Security\n   This section describes the specification for security for IPv6\
    \ nodes.\n   Achieving security in practice is a complex undertaking.  Operational\n\
    \   procedures, protocols, key distribution mechanisms, certificate\n   management\
    \ approaches, etc., are all components that impact the level\n   of security actually\
    \ achieved in practice.  More importantly,\n   deficiencies or a poor fit in any\
    \ one individual component can\n   significantly reduce the overall effectiveness\
    \ of a particular\n   security approach.\n   IPsec provides channel security at\
    \ the Internet layer, making it\n   possible to provide secure communication for\
    \ all (or a subset of)\n   communication flows at the IP layer between pairs of\
    \ internet nodes.\n   IPsec provides sufficient flexibility and granularity that\
    \ individual\n   TCP connections can (selectively) be protected, etc.\n   Although\
    \ IPsec can be used with manual keying in some cases, such\n   usage has limited\
    \ applicability and is not recommended.\n   A range of security technologies and\
    \ approaches proliferate today\n   (e.g., IPsec, Transport Layer Security (TLS),\
    \ Secure SHell (SSH),\n   etc.)  No one approach has emerged as an ideal technology\
    \ for all\n   needs and environments.  Moreover, IPsec is not viewed as the ideal\n\
    \   security technology in all cases and is unlikely to displace the\n   others.\n\
    \   Previously, IPv6 mandated implementation of IPsec and recommended the\n  \
    \ key management approach of IKE.  This document updates that\n   recommendation\
    \ by making support of the IPsec Architecture [RFC4301]\n   a SHOULD for all IPv6\
    \ nodes.  Note that the IPsec Architecture\n   requires (e.g., Section 4.5 of\
    \ RFC 4301) the implementation of both\n   manual and automatic key management.\
    \  Currently, the default\n   automated key management protocol to implement is\
    \ IKEv2 [RFC5996].\n   This document recognizes that there exists a range of device\
    \ types\n   and environments where approaches to security other than IPsec can\
    \ be\n   justified.  For example, special-purpose devices may support only a\n\
    \   very limited number or type of applications, and an application-\n   specific\
    \ security approach may be sufficient for limited management\n   or configuration\
    \ capabilities.  Alternatively, some devices may run\n   on extremely constrained\
    \ hardware (e.g., sensors) where the full\n   IPsec Architecture is not justified.\n"
- title: 11.1.  Requirements
  contents:
  - "11.1.  Requirements\n   \"Security Architecture for the Internet Protocol\" [RFC4301]\
    \ SHOULD be\n   supported by all IPv6 nodes.  Note that the IPsec Architecture\n\
    \   requires (e.g., Section 4.5 of [RFC4301]) the implementation of both\n   manual\
    \ and automatic key management.  Currently, the default\n   automated key management\
    \ protocol to implement is IKEv2.  As required\n   in [RFC4301], IPv6 nodes implementing\
    \ the IPsec Architecture MUST\n   implement ESP [RFC4303] and MAY implement AH\
    \ [RFC4302].\n"
- title: 11.2.  Transforms and Algorithms
  contents:
  - "11.2.  Transforms and Algorithms\n   The current set of mandatory-to-implement\
    \ algorithms for the IPsec\n   Architecture are defined in \"Cryptographic Algorithm\
    \ Implementation\n   Requirements For ESP and AH\" [RFC4835].  IPv6 nodes implementing\
    \ the\n   IPsec Architecture MUST conform to the requirements in [RFC4835].\n\
    \   Preferred cryptographic algorithms often change more frequently than\n   security\
    \ protocols.  Therefore, implementations MUST allow for\n   migration to new algorithms,\
    \ as RFC 4835 is replaced or updated in\n   the future.\n   The current set of\
    \ mandatory-to-implement algorithms for IKEv2 are\n   defined in \"Cryptographic\
    \ Algorithms for Use in the Internet Key\n   Exchange Version 2 (IKEv2)\" [RFC4307].\
    \  IPv6 nodes implementing IKEv2\n   MUST conform to the requirements in [RFC4307]\
    \ and/or any future\n   updates or replacements to [RFC4307].\n"
- title: 12.  Router-Specific Functionality
  contents:
  - "12.  Router-Specific Functionality\n   This section defines general host considerations\
    \ for IPv6 nodes that\n   act as routers.  Currently, this section does not discuss\
    \ routing-\n   specific requirements.\n"
- title: 12.1.  IPv6 Router Alert Option - RFC 2711
  contents:
  - "12.1.  IPv6 Router Alert Option - RFC 2711\n   The IPv6 Router Alert Option [RFC2711]\
    \ is an optional IPv6 Hop-by-Hop\n   Header that is used in conjunction with some\
    \ protocols (e.g., RSVP\n   [RFC2205] or Multicast Listener Discovery (MLD) [RFC2710]).\
    \  The\n   Router Alert option will need to be implemented whenever protocols\n\
    \   that mandate its usage (e.g., MLD) are implemented.  See\n   Section 5.10.\n"
- title: 12.2.  Neighbor Discovery for IPv6 - RFC 4861
  contents:
  - "12.2.  Neighbor Discovery for IPv6 - RFC 4861\n   Sending Router Advertisements\
    \ and processing Router Solicitations\n   MUST be supported.\n   Section 7 of\
    \ [RFC6275] includes some mobility-specific extensions to\n   Neighbor Discovery.\
    \  Routers SHOULD implement Sections 7.3 and 7.5,\n   even if they do not implement\
    \ Home Agent functionality.\n"
- title: 12.3.  Stateful Address Autoconfiguration (DHCPv6) - RFC 3315
  contents:
  - "12.3.  Stateful Address Autoconfiguration (DHCPv6) - RFC 3315\n   A single DHCP\
    \ server ([RFC3315] or [RFC4862]) can provide\n   configuration information to\
    \ devices directly attached to a shared\n   link, as well as to devices located\
    \ elsewhere within a site.\n   Communication between a client and a DHCP server\
    \ located on different\n   links requires the use of DHCP relay agents on routers.\n\
    \   In simple deployments, consisting of a single router and either a\n   single\
    \ LAN or multiple LANs attached to the single router, together\n   with a WAN\
    \ connection, a DHCP server embedded within the router is\n   one common deployment\
    \ scenario (e.g., [RFC6204]).  However, there is\n   no need for relay agents\
    \ in such scenarios.\n   In more complex deployment scenarios, such as within\
    \ enterprise or\n   service provider networks, the use of DHCP requires some level\
    \ of\n   configuration, in order to configure relay agents, DHCP servers, etc.\n\
    \   In such environments, the DHCP server might even be run on a\n   traditional\
    \ server, rather than as part of a router.\n   Because of the wide range of deployment\
    \ scenarios, support for DHCP\n   server functionality on routers is optional.\
    \  However, routers\n   targeted for deployment within more complex scenarios\
    \ (as described\n   above) SHOULD support relay agent functionality.  Note that\
    \ \"Basic\n   Requirements for IPv6 Customer Edge Routers\" [RFC6204] requires\n\
    \   implementation of a DHCPv6 server function in IPv6 Customer Edge (CE)\n  \
    \ routers.\n"
- title: 13.  Network Management
  contents:
  - "13.  Network Management\n   Network management MAY be supported by IPv6 nodes.\
    \  However, for IPv6\n   nodes that are embedded devices, network management may\
    \ be the only\n   possible way of controlling these nodes.\n"
- title: 13.1.  Management Information Base (MIB) Modules
  contents:
  - "13.1.  Management Information Base (MIB) Modules\n   The following two MIB modules\
    \ SHOULD be supported by nodes that\n   support a Simple Network Management Protocol\
    \ (SNMP) agent.\n"
- title: 13.1.1.  IP Forwarding Table MIB
  contents:
  - "13.1.1.  IP Forwarding Table MIB\n   The IP Forwarding Table MIB [RFC4292] SHOULD\
    \ be supported by nodes\n   that support an SNMP agent.\n"
- title: 13.1.2.  Management Information Base for the Internet Protocol (IP)
  contents:
  - "13.1.2.  Management Information Base for the Internet Protocol (IP)\n   The IP\
    \ MIB [RFC4293] SHOULD be supported by nodes that support an\n   SNMP agent.\n"
- title: 14.  Security Considerations
  contents:
  - "14.  Security Considerations\n   This document does not directly affect the security\
    \ of the Internet,\n   beyond the security considerations associated with the\
    \ individual\n   protocols.\n   Security is also discussed in Section 11 above.\n"
- title: 15.  Authors and Acknowledgments
  contents:
  - '15.  Authors and Acknowledgments

    '
- title: 15.1.  Authors and Acknowledgments (Current Document)
  contents:
  - "15.1.  Authors and Acknowledgments (Current Document)\n   For this version of\
    \ the IPv6 Node Requirements document, the authors\n   would like to thank Hitoshi\
    \ Asaeda, Brian Carpenter, Tim Chown, Ralph\n   Droms, Sheila Frankel, Sam Hartman,\
    \ Bob Hinden, Paul Hoffman, Pekka\n   Savola, Yaron Sheffer, and Dave Thaler for\
    \ their comments.\n"
- title: 15.2.  Authors and Acknowledgments from RFC 4279
  contents:
  - "15.2.  Authors and Acknowledgments from RFC 4279\n   The original version of\
    \ this document (RFC 4279) was written by the\n   IPv6 Node Requirements design\
    \ team:\n      Jari Arkko\n      jari.arkko@ericsson.com\n      Marc Blanchet\n\
    \      marc.blanchet@viagenie.qc.ca\n      Samita Chakrabarti\n      samita.chakrabarti@eng.sun.com\n\
    \      Alain Durand\n      alain.durand@sun.com\n      Gerard Gastaud\n      gerard.gastaud@alcatel.fr\n\
    \      Jun-ichiro Itojun Hagino\n      itojun@iijlab.net\n      Atsushi Inoue\n\
    \      inoue@isl.rdc.toshiba.co.jp\n      Masahiro Ishiyama\n      masahiro@isl.rdc.toshiba.co.jp\n\
    \      John Loughney\n      john.loughney@nokia.com\n      Rajiv Raghunarayan\n\
    \      raraghun@cisco.com\n      Shoichi Sakane\n      shouichi.sakane@jp.yokogawa.com\n\
    \      Dave Thaler\n      dthaler@windows.microsoft.com\n      Juha Wiljakka\n\
    \      juha.wiljakka@Nokia.com\n   The authors would like to thank Ran Atkinson,\
    \ Jim Bound, Brian\n   Carpenter, Ralph Droms, Christian Huitema, Adam Machalek,\
    \ Thomas\n   Narten, Juha Ollila, and Pekka Savola for their comments.  Thanks\
    \ to\n   Mark Andrews for comments and corrections on DNS text.  Thanks to\n \
    \  Alfred Hoenes for tracking the updates to various RFCs.\n"
- title: '16.  Appendix: Changes from RFC 4294'
  contents:
  - "16.  Appendix: Changes from RFC 4294\n   There have been many editorial clarifications\
    \ as well as significant\n   additions and updates.  While this section highlights\
    \ some of the\n   changes, readers should not rely on this section for a comprehensive\n\
    \   list of all changes.\n   1.   Updated the Introduction to indicate that this\
    \ document is an\n        applicability statement and is aimed at general nodes.\n\
    \   2.   Significantly updated the section on Mobility protocols, adding\n   \
    \     references and downgrading previous SHOULDs to MAYs.\n   3.   Changed Sub-IP\
    \ Layer section to just list relevant RFCs, and\n        added some more RFCs.\n\
    \   4.   Added section on SEND (it is a MAY).\n   5.   Revised section on Privacy\
    \ Extensions [RFC4941] to add more\n        nuance to recommendation.\n   6. \
    \  Completely revised IPsec/IKEv2 section, downgrading overall\n        recommendation\
    \ to a SHOULD.\n   7.   Upgraded recommendation of DHCPv6 to SHOULD.\n   8.  \
    \ Added background section on DHCP versus RA options, added SHOULD\n        recommendation\
    \ for DNS configuration via RAs [RFC6106], and\n        cleaned up DHCP recommendations.\n\
    \   9.   Added recommendation that routers implement Sections 7.3 and 7.5\n  \
    \      of [RFC6275].\n   10.  Added pointer to subnet clarification document [RFC5942].\n\
    \   11.  Added text that \"IPv6 Host-to-Router Load Sharing\" [RFC4311]\n    \
    \    SHOULD be implemented.\n   12.  Added reference to [RFC5722] (Overlapping\
    \ Fragments), and made\n        it a MUST to implement.\n   13.  Made \"A Recommendation\
    \ for IPv6 Address Text Representation\"\n        [RFC5952] a SHOULD.\n   14.\
    \  Removed mention of \"DNAME\" from the discussion about [RFC3363].\n   15. \
    \ Numerous updates to reflect newer versions of IPv6 documents,\n        including\
    \ [RFC4443], [RFC4291], [RFC3596], and [RFC4213].\n   16.  Removed discussion\
    \ of \"Managed\" and \"Other\" flags in RAs.  There\n        is no consensus at\
    \ present on how to process these flags, and\n        discussion of their semantics\
    \ was removed in the most recent\n        update of Stateless Address Autoconfiguration\
    \ [RFC4862].\n   17.  Added many more references to optional IPv6 documents.\n\
    \   18.  Made \"A Recommendation for IPv6 Address Text Representation\"\n    \
    \    [RFC5952] a SHOULD.\n   19.  Added reference to [RFC5722] (Overlapping Fragments),\
    \ and made\n        it a MUST to implement.\n   20.  Updated MLD section to include\
    \ reference to Lightweight MLD\n        [RFC5790].\n   21.  Added SHOULD recommendation\
    \ for \"Default Router Preferences and\n        More-Specific Routes\" [RFC4191].\n\
    \   22.  Made \"IPv6 Flow Label Specification\" [RFC6437] a SHOULD.\n"
- title: 17.  References
  contents:
  - '17.  References

    '
- title: 17.1.  Normative References
  contents:
  - "17.1.  Normative References\n   [RFC1034]  Mockapetris, P., \"Domain names -\
    \ concepts and facilities\",\n              STD 13, RFC 1034, November 1987.\n\
    \   [RFC1035]  Mockapetris, P., \"Domain names - implementation and\n        \
    \      specification\", STD 13, RFC 1035, November 1987.\n   [RFC1981]  McCann,\
    \ J., Deering, S., and J. Mogul, \"Path MTU Discovery\n              for IP version\
    \ 6\", RFC 1981, August 1996.\n   [RFC2119]  Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2460]  Deering, S. and R. Hinden, \"Internet Protocol, Version\
    \ 6\n              (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC2671]\
    \  Vixie, P., \"Extension Mechanisms for DNS (EDNS0)\",\n              RFC 2671,\
    \ August 1999.\n   [RFC2710]  Deering, S., Fenner, W., and B. Haberman, \"Multicast\n\
    \              Listener Discovery (MLD) for IPv6\", RFC 2710,\n              October\
    \ 1999.\n   [RFC2711]  Partridge, C. and A. Jackson, \"IPv6 Router Alert Option\"\
    ,\n              RFC 2711, October 1999.\n   [RFC3315]  Droms, R., Bound, J.,\
    \ Volz, B., Lemon, T., Perkins, C.,\n              and M. Carney, \"Dynamic Host\
    \ Configuration Protocol for\n              IPv6 (DHCPv6)\", RFC 3315, July 2003.\n\
    \   [RFC3484]  Draves, R., \"Default Address Selection for Internet\n        \
    \      Protocol version 6 (IPv6)\", RFC 3484, February 2003.\n   [RFC3590]  Haberman,\
    \ B., \"Source Address Selection for the Multicast\n              Listener Discovery\
    \ (MLD) Protocol\", RFC 3590,\n              September 2003.\n   [RFC3596]  Thomson,\
    \ S., Huitema, C., Ksinant, V., and M. Souissi,\n              \"DNS Extensions\
    \ to Support IP Version 6\", RFC 3596,\n              October 2003.\n   [RFC3736]\
    \  Droms, R., \"Stateless Dynamic Host Configuration Protocol\n              (DHCP)\
    \ Service for IPv6\", RFC 3736, April 2004.\n   [RFC3810]  Vida, R. and L. Costa,\
    \ \"Multicast Listener Discovery\n              Version 2 (MLDv2) for IPv6\",\
    \ RFC 3810, June 2004.\n   [RFC4033]  Arends, R., Austein, R., Larson, M., Massey,\
    \ D., and S.\n              Rose, \"DNS Security Introduction and Requirements\"\
    ,\n              RFC 4033, March 2005.\n   [RFC4034]  Arends, R., Austein, R.,\
    \ Larson, M., Massey, D., and S.\n              Rose, \"Resource Records for the\
    \ DNS Security Extensions\",\n              RFC 4034, March 2005.\n   [RFC4035]\
    \  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,\
    \ \"Protocol Modifications for the DNS Security\n              Extensions\", RFC\
    \ 4035, March 2005.\n   [RFC4213]  Nordmark, E. and R. Gilligan, \"Basic Transition\
    \ Mechanisms\n              for IPv6 Hosts and Routers\", RFC 4213, October 2005.\n\
    \   [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n        \
    \      Architecture\", RFC 4291, February 2006.\n   [RFC4292]  Haberman, B., \"\
    IP Forwarding Table MIB\", RFC 4292,\n              April 2006.\n   [RFC4293]\
    \  Routhier, S., \"Management Information Base for the\n              Internet\
    \ Protocol (IP)\", RFC 4293, April 2006.\n   [RFC4301]  Kent, S. and K. Seo, \"\
    Security Architecture for the\n              Internet Protocol\", RFC 4301, December\
    \ 2005.\n   [RFC4303]  Kent, S., \"IP Encapsulating Security Payload (ESP)\",\n\
    \              RFC 4303, December 2005.\n   [RFC4307]  Schiller, J., \"Cryptographic\
    \ Algorithms for Use in the\n              Internet Key Exchange Version 2 (IKEv2)\"\
    , RFC 4307,\n              December 2005.\n   [RFC4311]  Hinden, R. and D. Thaler,\
    \ \"IPv6 Host-to-Router Load\n              Sharing\", RFC 4311, November 2005.\n\
    \   [RFC4443]  Conta, A., Deering, S., and M. Gupta, \"Internet Control\n    \
    \          Message Protocol (ICMPv6) for the Internet Protocol\n             \
    \ Version 6 (IPv6) Specification\", RFC 4443, March 2006.\n   [RFC4604]  Holbrook,\
    \ H., Cain, B., and B. Haberman, \"Using Internet\n              Group Management\
    \ Protocol Version 3 (IGMPv3) and Multicast\n              Listener Discovery\
    \ Protocol Version 2 (MLDv2) for Source-\n              Specific Multicast\",\
    \ RFC 4604, August 2006.\n   [RFC4607]  Holbrook, H. and B. Cain, \"Source-Specific\
    \ Multicast for\n              IP\", RFC 4607, August 2006.\n   [RFC4835]  Manral,\
    \ V., \"Cryptographic Algorithm Implementation\n              Requirements for\
    \ Encapsulating Security Payload (ESP) and\n              Authentication Header\
    \ (AH)\", RFC 4835, April 2007.\n   [RFC4861]  Narten, T., Nordmark, E., Simpson,\
    \ W., and H. Soliman,\n              \"Neighbor Discovery for IP version 6 (IPv6)\"\
    , RFC 4861,\n              September 2007.\n   [RFC4862]  Thomson, S., Narten,\
    \ T., and T. Jinmei, \"IPv6 Stateless\n              Address Autoconfiguration\"\
    , RFC 4862, September 2007.\n   [RFC4941]  Narten, T., Draves, R., and S. Krishnan,\
    \ \"Privacy\n              Extensions for Stateless Address Autoconfiguration\
    \ in\n              IPv6\", RFC 4941, September 2007.\n   [RFC5095]  Abley, J.,\
    \ Savola, P., and G. Neville-Neil, \"Deprecation\n              of Type 0 Routing\
    \ Headers in IPv6\", RFC 5095,\n              December 2007.\n   [RFC5453]  Krishnan,\
    \ S., \"Reserved IPv6 Interface Identifiers\",\n              RFC 5453, February\
    \ 2009.\n   [RFC5722]  Krishnan, S., \"Handling of Overlapping IPv6 Fragments\"\
    ,\n              RFC 5722, December 2009.\n   [RFC5790]  Liu, H., Cao, W., and\
    \ H. Asaeda, \"Lightweight Internet\n              Group Management Protocol Version\
    \ 3 (IGMPv3) and Multicast\n              Listener Discovery Version 2 (MLDv2)\
    \ Protocols\", RFC 5790,\n              February 2010.\n   [RFC5942]  Singh, H.,\
    \ Beebee, W., and E. Nordmark, \"IPv6 Subnet\n              Model: The Relationship\
    \ between Links and Subnet\n              Prefixes\", RFC 5942, July 2010.\n \
    \  [RFC5952]  Kawamura, S. and M. Kawashima, \"A Recommendation for IPv6\n   \
    \           Address Text Representation\", RFC 5952, August 2010.\n   [RFC5996]\
    \  Kaufman, C., Hoffman, P., Nir, Y., and P. Eronen,\n              \"Internet\
    \ Key Exchange Protocol Version 2 (IKEv2)\",\n              RFC 5996, September\
    \ 2010.\n   [RFC6106]  Jeong, J., Park, S., Beloeil, L., and S. Madanapalli,\n\
    \              \"IPv6 Router Advertisement Options for DNS Configuration\",\n\
    \              RFC 6106, November 2010.\n   [RFC6204]  Singh, H., Beebee, W.,\
    \ Donley, C., Stark, B., and O.\n              Troan, \"Basic Requirements for\
    \ IPv6 Customer Edge\n              Routers\", RFC 6204, April 2011.\n   [RFC6437]\
    \  Amante, S., Carpenter, B., Jiang, S., and J. Rajahalme,\n              \"IPv6\
    \ Flow Label Specification\", RFC 6437, November 2011.\n"
- title: 17.2.  Informative References
  contents:
  - "17.2.  Informative References\n   [DODv6]    DISR IPv6 Standards Technical Working\
    \ Group, \"DoD IPv6\n              Standard Profiles For IPv6 Capable Products\
    \ Version 5.0\",\n              July 2010,\n              <http://jitc.fhu.disa.mil/apl/ipv6/pdf/disr_ipv6_50.pdf>.\n\
    \   [POSIX]    IEEE, \"IEEE Std. 1003.1-2008 Standard for Information\n      \
    \        Technology -- Portable Operating System Interface (POSIX),\n        \
    \      ISO/IEC 9945:2009\", <http://www.ieee.org>.\n   [RFC0793]  Postel, J.,\
    \ \"Transmission Control Protocol\", STD 7,\n              RFC 793, September\
    \ 1981.\n   [RFC2205]  Braden, B., Zhang, L., Berson, S., Herzog, S., and S.\n\
    \              Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version 1\n  \
    \            Functional Specification\", RFC 2205, September 1997.\n   [RFC2464]\
    \  Crawford, M., \"Transmission of IPv6 Packets over Ethernet\n              Networks\"\
    , RFC 2464, December 1998.\n   [RFC2491]  Armitage, G., Schulter, P., Jork, M.,\
    \ and G. Harter, \"IPv6\n              over Non-Broadcast Multiple Access (NBMA)\
    \ networks\",\n              RFC 2491, January 1999.\n   [RFC2492]  Armitage,\
    \ G., Schulter, P., and M. Jork, \"IPv6 over ATM\n              Networks\", RFC\
    \ 2492, January 1999.\n   [RFC2590]  Conta, A., Malis, A., and M. Mueller, \"\
    Transmission of\n              IPv6 Packets over Frame Relay Networks Specification\"\
    ,\n              RFC 2590, May 1999.\n   [RFC2675]  Borman, D., Deering, S., and\
    \ R. Hinden, \"IPv6 Jumbograms\",\n              RFC 2675, August 1999.\n   [RFC3146]\
    \  Fujisawa, K. and A. Onoe, \"Transmission of IPv6 Packets\n              over\
    \ IEEE 1394 Networks\", RFC 3146, October 2001.\n   [RFC3363]  Bush, R., Durand,\
    \ A., Fink, B., Gudmundsson, O., and T.\n              Hain, \"Representing Internet\
    \ Protocol version 6 (IPv6)\n              Addresses in the Domain Name System\
    \ (DNS)\", RFC 3363,\n              August 2002.\n   [RFC3493]  Gilligan, R.,\
    \ Thomson, S., Bound, J., McCann, J., and W.\n              Stevens, \"Basic Socket\
    \ Interface Extensions for IPv6\",\n              RFC 3493, February 2003.\n \
    \  [RFC3542]  Stevens, W., Thomas, M., Nordmark, E., and T. Jinmei,\n        \
    \      \"Advanced Sockets Application Program Interface (API) for\n          \
    \    IPv6\", RFC 3542, May 2003.\n   [RFC3678]  Thaler, D., Fenner, B., and B.\
    \ Quinn, \"Socket Interface\n              Extensions for Multicast Source Filters\"\
    , RFC 3678,\n              January 2004.\n   [RFC3776]  Arkko, J., Devarapalli,\
    \ V., and F. Dupont, \"Using IPsec to\n              Protect Mobile IPv6 Signaling\
    \ Between Mobile Nodes and\n              Home Agents\", RFC 3776, June 2004.\n\
    \   [RFC3971]  Arkko, J., Kempf, J., Zill, B., and P. Nikander, \"SEcure\n   \
    \           Neighbor Discovery (SEND)\", RFC 3971, March 2005.\n   [RFC3972] \
    \ Aura, T., \"Cryptographically Generated Addresses (CGA)\",\n              RFC\
    \ 3972, March 2005.\n   [RFC4191]  Draves, R. and D. Thaler, \"Default Router\
    \ Preferences and\n              More-Specific Routes\", RFC 4191, November 2005.\n\
    \   [RFC4302]  Kent, S., \"IP Authentication Header\", RFC 4302,\n           \
    \   December 2005.\n   [RFC4338]  DeSanti, C., Carlson, C., and R. Nixon, \"Transmission\
    \ of\n              IPv6, IPv4, and Address Resolution Protocol (ARP) Packets\n\
    \              over Fibre Channel\", RFC 4338, January 2006.\n   [RFC4380]  Huitema,\
    \ C., \"Teredo: Tunneling IPv6 over UDP through\n              Network Address\
    \ Translations (NATs)\", RFC 4380,\n              February 2006.\n   [RFC4429]\
    \  Moore, N., \"Optimistic Duplicate Address Detection (DAD)\n              for\
    \ IPv6\", RFC 4429, April 2006.\n   [RFC4584]  Chakrabarti, S. and E. Nordmark,\
    \ \"Extension to Sockets API\n              for Mobile IPv6\", RFC 4584, July\
    \ 2006.\n   [RFC4821]  Mathis, M. and J. Heffner, \"Packetization Layer Path MTU\n\
    \              Discovery\", RFC 4821, March 2007.\n   [RFC4877]  Devarapalli,\
    \ V. and F. Dupont, \"Mobile IPv6 Operation with\n              IKEv2 and the\
    \ Revised IPsec Architecture\", RFC 4877,\n              April 2007.\n   [RFC4884]\
    \  Bonica, R., Gan, D., Tappan, D., and C. Pignataro,\n              \"Extended\
    \ ICMP to Support Multi-Part Messages\", RFC 4884,\n              April 2007.\n\
    \   [RFC4944]  Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler,\n    \
    \          \"Transmission of IPv6 Packets over IEEE 802.15.4\n              Networks\"\
    , RFC 4944, September 2007.\n   [RFC5006]  Jeong, J., Park, S., Beloeil, L., and\
    \ S. Madanapalli,\n              \"IPv6 Router Advertisement Option for DNS Configuration\"\
    ,\n              RFC 5006, September 2007.\n   [RFC5014]  Nordmark, E., Chakrabarti,\
    \ S., and J. Laganier, \"IPv6\n              Socket API for Source Address Selection\"\
    , RFC 5014,\n              September 2007.\n   [RFC5072]  S.Varada, Haskins, D.,\
    \ and E. Allen, \"IP Version 6 over\n              PPP\", RFC 5072, September\
    \ 2007.\n   [RFC5121]  Patil, B., Xia, F., Sarikaya, B., Choi, JH., and S.\n \
    \             Madanapalli, \"Transmission of IPv6 via the IPv6\n             \
    \ Convergence Sublayer over IEEE 802.16 Networks\", RFC 5121,\n              February\
    \ 2008.\n   [RFC5555]  Soliman, H., \"Mobile IPv6 Support for Dual Stack Hosts\
    \ and\n              Routers\", RFC 5555, June 2009.\n   [RFC6275]  Perkins, C.,\
    \ Johnson, D., and J. Arkko, \"Mobility Support\n              in IPv6\", RFC\
    \ 6275, July 2011.\n   [USGv6]    National Institute of Standards and Technology,\
    \ \"A Profile\n              for IPv6 in the U.S. Government - Version 1.0\",\
    \ July 2008,\n              <http://www.antd.nist.gov/usgv6/usgv6-v1.pdf>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ed Jankiewicz\n   SRI International, Inc.\n   333 Ravenswood\
    \ Ave.\n   Menlo Park, CA  94025\n   USA\n   Phone: +1 443 502 5815\n   EMail:\
    \ edward.jankiewicz@sri.com\n   John Loughney\n   Nokia\n   200 South Mathilda\
    \ Ave.\n   Sunnyvale, CA  94086\n   USA\n   Phone: +1 650 283 8068\n   EMail:\
    \ john.loughney@nokia.com\n   Thomas Narten\n   IBM Corporation\n   3039 Cornwallis\
    \ Ave.\n   PO Box 12195\n   Research Triangle Park, NC  27709-2195\n   USA\n \
    \  Phone: +1 919 254 7798\n   EMail: narten@us.ibm.com\n"
