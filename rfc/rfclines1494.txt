This document is a companion to [1], which defines the principles behind interworking between MIME based RFC 822 mail and X.400 mail.
This document describes the content of the "IANA MHS/MIME Equivalence table" referenced in the companion document, and defines the initial configuration of this table.
Mappings for new MIME content types and/or X.400 body part types should be registered with the IANA to minimize redundancy and promote interoperability.
In MIME, the term "content type" is used to refer to an information object contained in the body of a message.
In contrast, X.400 uses the term "body part type."
In this document, the term "body part" is used to refer to either.
Please send comments to the MIME MHS mailing list: <mime mhs@surfnet.nl>. 2.
For each MIME content type/X.400 body part pair, the Equivalence Table will contain an entry with the following sections:
This section identifies the X.400 Body Part governed by this Table entry.
It includes any OBJECT IDENTIFIERs or other parameters necessary to uniquely identify the Body Part.
This section identifies the MIME content type governed by this Table entry.
The MIME content type named here must be registered with the IANA.
This section identifies the type of conversion applied.
See the section on Generic Conversions for an explanation of the possible values.
This section gives any additional commentary that might be useful in understanding the mapping between the X.400 and MIME representations.
The initial Equivalence Table entries in this document are described using this convention.
Any future submissions to the IANA should follow this format.
Byte copy This is the trivial case, that is, no conversion at all.
The byte stream is simply copied between MIME and X.400.
This is the preferred conversion, since it is the simplest.
Implementors and vendors will be registering OBJECT IDENTIFIERs and MIME content types for their various objects.
They are STRONGLY ENCOURAGED to specify their content formats such that a gateway can use Byte Copy to map between them.
Note that in some cases, it is necessary to define exactly which ASN.1 construct to replace with the content of the MIME object.
This type of conversion applies to text objects that cannot be mapped using a simple Byte Copy.
Conversion involves scanning and reformatting the object.
For example, the MIME and X.400 objects might differ in their encoding of nonstandard characters, or line or page breaks.
This conversion type applies to raster images, like Group 3 Facsimile or JPEG.
Again, it differs from Byte Copy in that it involves scanning reformatting the byte stream.
It differs from Text Conversion in that it is pixel  oriented, rather than character  oriented.
This is not a conversion at all, but an encapsulation of the object.
This is the fallback conversion, used when no explicit mapping applies.
Conversion Table for known X.400 and MIME Types
This section itemizes the equivalences for all currently known MIME content types and X.400 body parts.
EBP Extended Body Part 4.2.
X.400 to MIME Table Basic Body Parts
/plain;charset us ascii 7.1 voice
Newly defined X.400 Body Parts
This section defines new X.400 Body Parts for the purposes of interworking with MIME.
All new X.400 Body Parts defined here will be Extended Body Parts, as defined in CCITT Recommendation X.420 [2].
Use of OBJECT IDENTIFIERs and ASN.1
MACROS X.420 dictates that Extended Body Parts shall: (1)  use OBJECT IDENTIFIERs (OIDs) to uniquely identify the contents, and (2)  be defined by using the ASN.1 Macro:
Each Extended Body Part contains Data and optional Parameters, each being named by an OID.
All definitions of X.400 body parts submitted to the IANA for registration must use the Extended Body Part Type macro for the definition.
See the next section for an example.
Lastly, the IANA will use the mime mhs bp data and mime mhs bp  parameter OIDs as root OIDs for any new MIME content type/subtypes that aren't otherwise registered in the Equivalence Table.
The Generic MIME Extended Body Part
The following X.400 Body Part is defined to carry any MIME content  type for which there is no explicit IANA registered mapping.
5.1.12 other header fields RFC822FieldList } mime generic parameters
(1)  Copy the "type/subtype" string from the MIME Content Type: header field into MimeParameters.content type (2)  For each "parameter value" string in the MIME Content Type header field, create a MimeParameters.content parameters structure, and copy the "parameter" string into MimeParameters.content  parameters.parameter field and the "value" string into the paired MimeParameters.content  parameters.parameter value field.
(3)  Convert the MIME body part into its canonical form.
(See appendix H of RFC 1341 [3] for a discussion of canonical in this context.)
Said another way, reverse the transfer encoding to recover the original byte stream.
(4)  Copy the canonical byte stream into the mime body  part.data octet string.
(5)  Remove the Content type and the Content transfer  encoding header fields from the MIME body part's RFC822 header.
(6)  Any header fields starting with "Content " in the MIME body part is placed in the optional other  header fields structure.
Note that this can only occur when the MIME content type occurs as part of a "multipart" content type.
The mapping from the X.400 mime body part to a MIME content type is the inverse of the above steps.
The following Extended Body Part is defined for PostScript data streams.
postscript body part EXTENDED BODY PART TYPE DATA
The following Extended Body Part is defined for JPEG data streams.
EXTENDED BODY PART TYPE DATA
The following Extended Body Part is defined for GIF data streams.
EXTENDED BODY PART TYPE DATA
Newly defined MIME content types This section defines new MIME content types for the purposes of interworking with X.400.
This content type is defined to carry any X.400(88) body part for which there is no registered IANA mapping.
The content type field is application/x400
The parameters are: bp type <INTEGER or OBJECT IDENTIFIER
The body contains the raw ASN.1 IPM.body octet stream, including the initial tag octet.
If the body is a basic body part, the bp type parameter is set to the number of the body part's context specific tag, that is, the tag of the IPMS.Body.
If the body is an Extended Body Part, the bp type parameter is set to the OBJECT IDENTIFIER from IPMS.body.externally defined.data.direct reference
No attempt is made to turn the parameters of Extended Body Parts into MIME parameters.
(This task is the responsibility of the recipient's UA).
For example, a basic VideotexBodyPart will have Content type application/x400 bp; bp type 6 whilst a Extended Videotex body part will have Content type application/x400 bp;
type 2.6.1.4.5 application/x400 bp will need a content transfer encoding of base64 or quoted printable when carried in 7 bit MIME.
Since there is no way to know beforehand the content, it is recommended to just inspect the first 1 KByte or so of data and choose the one that seems to produce the more compact encoding.
If this is not feasible, Base64 is recommended.
This content type is defined to carry
In general, a G3Fax image contains 3 pieces of information: (1)
A set of flags indicating the particular coding scheme.
CCITT Recommendation T.30 defines how the flags are transmitted over telephones.
In this medium, the flags are carried as parameters in the MIME content type header field.
(2)  A structure that divides the bits into pages.
CCITT recommendation T.30 describes how to define page boundaries.
A page break algorithm is defined here that is independent of how the image data is conveyed.
(3)  For each page, a sequence of bits that form the encoding of the image.
CCITT recommendation T.4 defines the bit image format.
This is used without change.
The following parameters are defined: (1)  page length possible values: A4, B4 and Unlimited (2)  page width possible values: A3, A4, B4 (3)  encoding possible values: 1 dimensional, 2  dimensional, Uncompressed (4)
resolution possible values: Fine, Coarse (5)  DCS a bit string, represented in Base64.
(6)  pages an integer, giving the number of pages in the document If nothing is specified, the default parameter settings are: page length A4 page width A4 encoding 1 dimensional resolution Coarse
but misleading) to view the representation of these values as single bit flags.
They correspond to the following bits of the T.30 control string and X.400 G3FacsimileParameters:
no bit set page length B4
no bit set page width A3
The reason for the different bit numbers is that X.400 counts bits in an octet from the MSB down to the LSB, while T.30 uses the opposite numbering scheme.
If any bit but these are set in the Device Control String, the DCS parameter should be supplied.
Content Encoding X.400 defines the g3 facsimile data stream as a SEQUENCE of BIT STRINGs.
Each BIT STRING is a page of facsimile image data, encoded as defined by Recommendation T.4.
The following content encoding is reversible between MIME and X.400 and ensures that page breaks are honored in the MIME representation.
An EOL is defined as a bit sequence of 000000000001 (eleven zeroes and a one).
Each page of the message is delimited by a sequence of six (6) EOLs that MUST start on a byte boundary.
The image bit stream is padded as needed to achieve this alignment.
Searching for the boundary is a matter of searching for the byte sequence (HEX) 00 10 01 00
00 10 01, which cannot occur inside the image.
See Section 7.5 for the algorithm on conversion between this encoding and the X.400 encoding.
The Base64 content transfer encoding is appropriate for carrying this content type.
The Application/ODA content type The "ODA" subtype of application is used to indicate that a body contains information encoded according to the Office Document Architecture [4] standards, using the ODIF representation format.
For application/oda, the Content  Type line should also specify an attribute/value pair that indicates the document application profile (DAP), using the key word "profile", and the document class, using the keyword "class".
For the keyword "class", the values "formatted", "processable" and "formatted processable" are legal values.
Thus an appropriate header field  might look like this: Content Type:  application/oda; profile Q112;
class formatted Consult the ODA standard [4] for further information.
The Base64 content transfer encoding is appropriate for carrying ODA.
text/plain; charset US ASCII Conversion Type:
Byte copy Comments: When mapping from X.400 to MIME, the "repertoire" parameter is ignored.
When mapping from MIME to X.400, the "repertoire" parameter is set to IA5 (5).
The MIME Content type headers are omitted, when mapping from X.400 to MIME, if and only if the IA5Text body part is the only body part in the IPMS.Body sequence.
IA5Text specifies the "currency" symbol in position 2/4.
This is converted without comment to the "dollar" symbol, since the author of this document has seen many documents in which the position was intended to indicate "dollar" while he has not yet seen one in which the "currency" symbol is intended.
(For reference: The T.50 (1988) recommendation, which defines IA5, talks about ISO registered set number 2, while ASCII, using the "dollar" symbol, is ISO registered set number 6.
There are no other differences.)
X.400 Body Part: GeneralText; CharacterSets in 6,100,101,109,110,126,127,138,144,148 MIME Content Type: text/plain
; charset ISO 8859 (1 9)
When mapping from X.400 to MIME, the character set chosen from table below according to the value of Parameters.
When mapping from MIME to X.400, GeneralText is an Extended Body Part, hence it requires an OID.
The OID for the GeneralText body is defined in [5], part 8, annex D, as {2 6 1 4 11}.
The OID for the parameters is {2 6 1 11 11}.
CharacterSets is set from table below according to the value of "charset" NOTE: The GeneralText body part is defined in ISO 10021 8 [5], and NOT in the corresponding CCITT recommendation.
Its parameters were heavily modified in a defect report, and will be a SET OF INTEGER (indicating the ISO registry numbers of all the used sets) in the next version of the standard.
The following table lists the MIME character sets and the corresponding ISO registry numbers.
If no correspondence is found, this conversion fails, and the generic body part approach is used.
cs eit authority {1 0 10021 7 1 0} OID.
The escape sequences to designate and invoke the relevant character sets in their proper positions must be added to the front of the GeneralText character string.
BilaterallyDefined MIME Content Type: Application/Octet Stream (no parameters)
Byte copy Comments: When mapping from MIME to X.400, if there are parameters present in the Content Type: header field, the conversion fails since the BilaterallyDefined Body Part does not have any corresponding ASN.1 parameters.
The parameters "name" "type" and "conversions" are advisory, but may in some cases give vital hints on the expected handling of the file.
The parameter "conversions" is not fully defined, but it is expected that it will be useful, so we cannot drop it and expect people to be satisfied.
The parameter "padding" changes the interpretation of the last byte of the data, and so cannot be deleted.
An option is to prepend an IA5 body part that contains the parameter text; this will aid unmodified readers, and can probably be made reversible with suitable chicanery, but is it worth it????
Also, use of BilaterallyDefined Body Parts is specifically deprecated in both 1988 and 1992 X.400.
It is retained solely for backward compatibility with 1984 systems.
1992 X.400 defines a File Transfer Body Part to solve this problem (i.e. binary file transfer through email).
The standard and its regional profiles are not solid enough yet to exploit as a solution for this problem.
X.400 Body Part: ODA MIME Content Type: application/oda Conversion Type:
The ODA body part is defined in the CCITT document T.411 [6], appendix E, section E.2, "ODA identification in the P2 protocol of MHS"
id et oda OdaBodyPartParameters ::
OBJECT IDENTIFIER document architecture class
[1] INTEGER { formatted (0) processable (1) formatted processable(2)
{ iso (1) identified organization (3) ewos (16) eg (2)
This parameter is not defined in RFC 1341.
The body of the MIME content type is the Data part of the ODA body part.
When mapping from MIME to X.400, the following steps are done: The Parameters.document application profile and Parameters.document  architecture class are set from the tables above.
If any of the parameters are missing, the values for Q112 and formatted processable are used.
It is an option for the gateway implementor to try to access them from inside the document, where they are defined as document profile.document characteristics.document architecture class document profile.document characteristics.document application profile
Gateways are NOT required to do this, since the document  characteristics are optional parameters.
If a gateway does not, it simply uses the defaulting rules defined above.
The OBJECT IDENTIFIERs for the document application profile and for ODA {2 8 0 0} must be added to the Encoded Information Types parameter of the message envelope.
g3 facsimile MIME Content Type: image/
X.400 G3Fax body part are mapped to the corresponding Parameters on the MIME Image/
G3Fax body part and vice versa.
If fineResolution is not specified, pixels will be twice as tall as they are wide (2)
If any bit not corresponding to a specially named option is set in the G3Fax NonBasicParameters, the "DCS" parameter must be used.
(3)  Interworking is not guaranteed if any bit apart from those specially named are used in the NonBasicParameters From X.400 to G3Fax, the body is created in the following way:
(1)  Any trailing EOL markers on each bitstring is removed.
The bistring is padded to a byte boundary.
(2)  6 consecutive EOL markers are appended to each bitstring.
The padded bitstrings are concatenated together An EOL marker is the bit sequence 000000000001 (11 zeroes and a one).
From G3Fax to X.400, the body is created in the following way: (1)
The body is split into bitstrings at each occurrence of 6 consecutive EOL markers, and trailing EOLs and padding are removed (2)  Each bitstring is made into an ASN.1 BITSTRING (3)
The bitstrings are made into an ASN.1 SEQUENCE, which forms the body of the G3Fax body part.
Extended Body Part, OID postscript body part MIME Content Type:
Extended Body Part, OID jpeg body part MIME Content Type:
Extended Body Part, OID gif body part MIME Content Type:
OID Assignments MIME MHS MAPPINGS DEFINITIONS ::
IMPORTS mail, mime mhs, mime mhs bodies FROM MIME MHS
{ mime mhs bp data 2} mime jpeg body OBJECT IDENTIFIER ::
IANA Registration form for new mappings To:
IANA@isi.edu Subject: Registration of new X.400/MIME content type mapping MIME type name:
(this must have been registered previously with IANA)
X.400 Object Identifier for Data: (If left empty, an OID will be assigned by IANA under mime mhs bp data)
X.400 Object Identifier for Parameters: (If left empty, an OID will be assigned by IANA under mime mhs bp parameter.
If it is not used, fill in the words NOT USED.)
(must be an EXTENDED BODY PART TYPE macro, or reference to a Basic body part type)
(must be defined completely enough for independent implementation.
It may be defined by reference to RFCs).
Person & email address to contact for further information: INFORMATION TO THE SUBMITTER:
The accepted registrations will be listed in the "Assigned Numbers" series of RFCs.
The information in the registration form is freely distributable.
Security Considerations Security issues are not discussed in this memo.
