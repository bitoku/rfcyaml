- title: __initial_text__
  contents:
  - "           Using the GOST R 34.10-94, GOST R 34.10-2001, and\n              \
    \    GOST R 34.11-94 Algorithms with the\n               Internet X.509 Public\
    \ Key Infrastructure\n                      Certificate and CRL Profile\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document supplements RFC 3279.  It describes encoding formats,\n\
    \   identifiers, and parameter formats for the algorithms GOST R 34.10-\n   94,\
    \ GOST R 34.10-2001, and GOST R 34.11-94 for use in Internet X.509\n   Public\
    \ Key Infrastructure (PKI).\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Requirement Words ..........................................3\n  \
    \ 2. Algorithm Support ...............................................3\n    \
    \  2.1. One-Way Hash Function ......................................3\n      \
    \     2.1.1. One-Way Hash Function GOST R 34.11-94 ...............3\n      2.2.\
    \ Signature Algorithms .......................................4\n           2.2.1.\
    \ Signature Algorithm GOST R 34.10-94 .................4\n           2.2.2. Signature\
    \ Algorithm GOST R 34.10-2001 ...............5\n      2.3. Subject Public Key\
    \ Algorithms ..............................5\n           2.3.1. GOST R 34.10-94\
    \ Keys ................................6\n           2.3.2. GOST R 34.10-2001\
    \ Keys ..............................8\n   3. Security Considerations .........................................9\n\
    \   4. Examples .......................................................10\n  \
    \    4.1. GOST R 34.10-94 Certificate ...............................10\n    \
    \  4.2. GOST R 34.10-2001 Certificate .............................12\n   5. Acknowledgements\
    \ ...............................................15\n   6. References .....................................................16\n\
    \      6.1. Normative References ......................................16\n  \
    \    6.2. Informative References ....................................17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document supplements RFC 3279 [PKALGS].  It describes\
    \ the\n   conventions for using the GOST R 34.10-94 [GOST3431095, GOSTR341094]\n\
    \   and GOST R 34.10-2001 [GOST3431004, GOSTR341001] signature\n   algorithms,\
    \ VKO GOST R 34.10-94 and VKO GOST R 34.10-2001 key\n   derivation algorithms,\
    \ and GOST R 34.11-94 [GOST3431195, GOSTR341194]\n   one-way hash function in\
    \ the Internet X.509 Public Key Infrastructure\n   (PKI) [PROFILE].\n   This document\
    \ provides supplemental information and specifications\n   needed by the \"Russian\
    \ Cryptographic Software Compatibility\n   Agreement\" community.\n   The algorithm\
    \ identifiers and associated parameters are specified for\n   subject public keys\
    \ that employ the GOST R 34.10-94 [GOSTR341094]/VKO\n   GOST R 34.10-94 [CPALGS]\
    \ or the GOST R 34.10-2001 [GOSTR341001]/VKO\n   GOST R 34.10-2001 [CPALGS] algorithms,\
    \ as is the encoding format for\n   the signatures produced by these algorithms.\
    \  Also, the algorithm\n   identifiers for using the GOST R 34.11-94 one-way hash\
    \ function with\n   the GOST R 34.10-94 and GOST R 34.10-2001 signature algorithms\
    \ are\n   specified.\n   This specification defines the contents of the signatureAlgorithm,\n\
    \   signatureValue, signature, and subjectPublicKeyInfo fields within\n   X.509\
    \ Certificates and CRLs.  For each algorithm, the appropriate\n   alternatives\
    \ for the keyUsage certificate extension are provided.\n   ASN.1 modules, including\
    \ all the definitions used in this document,\n   can be found in [CPALGS].\n"
- title: 1.1.  Requirement Words
  contents:
  - "1.1.  Requirement Words\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Algorithm Support
  contents:
  - "2.  Algorithm Support\n   This section is an overview of cryptographic algorithms\
    \ that may be\n   used within the Internet X.509 certificates and CRL profile\n\
    \   [PROFILE].  It describes one-way hash functions and digital signature\n  \
    \ algorithms that may be used to sign certificates and CRLs, and it\n   identifies\
    \ object identifiers (OIDs) and ASN.1 encoding for public\n   keys contained in\
    \ a certificate.\n   Certification authorities (CAs) and/or applications conforming\
    \ to\n   this standard MUST support at least one of the specified public key\n\
    \   and signature algorithms.\n"
- title: 2.1.  One-Way Hash Function
  contents:
  - "2.1.  One-Way Hash Function\n   This section describes the use of a one-way,\
    \ collision-free hash\n   function GOST R 34.11-94, the only one that can be used\
    \ in the\n   digital signature algorithm GOST R 34.10-94/2001.  The data that\
    \ is\n   hashed for certificates and CRL signing is fully described in RFC\n \
    \  3280 [PROFILE].\n"
- title: 2.1.1.  One-Way Hash Function GOST R 34.11-94
  contents:
  - "2.1.1.  One-Way Hash Function GOST R 34.11-94\n   GOST R 34.11-94 has been developed\
    \ by \"GUBS of Federal Agency\n   Government Communication and Information\" and\
    \ \"All-Russian Scientific\n   and Research Institute of Standardization\".  The\
    \ algorithm GOST R\n   34.11-94 produces a 256-bit hash value of an arbitrary\
    \ finite bit\n   length input.  This document does not contain the full GOST R\
    \ 34.11-\n   94 specification, which can be found in [GOSTR341194] (in Russian).\n\
    \   [Schneier95], ch. 18.11, p. 454, contains a brief technical\n   description\
    \ in English.\n   This function MUST always be used with parameter set identified\
    \ by\n   id-GostR3411-94-CryptoProParamSet (see Section 8.2 of [CPALGS]).\n"
- title: 2.2.  Signature Algorithms
  contents:
  - "2.2.  Signature Algorithms\n   Conforming CAs may use GOST R 34.10-94 or GOST\
    \ R 34.10-2001 signature\n   algorithms to sign certificates and CRLs.\n   These\
    \ signature algorithms MUST always be used with a one-way hash\n   function GOST\
    \ R 34.11-94 as indicated in [GOSTR341094] and\n   [GOSTR341001].\n   This section\
    \ defines algorithm identifiers and parameters to be used\n   in the signatureAlgorithm\
    \ field in a Certificate or CertificateList.\n"
- title: 2.2.1.  Signature Algorithm GOST R 34.10-94
  contents:
  - "2.2.1.  Signature Algorithm GOST R 34.10-94\n   GOST R 34.10-94 has been developed\
    \ by \"GUBS of Federal Agency\n   Government Communication and Information\" and\
    \ \"All-Russian Scientific\n   and Research Institute of Standardization\".  This\
    \ document does not\n   contain the full GOST R 34.10-94 specification, which\
    \ can be found in\n   [GOSTR341094] (in Russian).  [Schneier95], ch. 20.3, p.\
    \ 495, contains\n   a brief technical description in English.\n   The ASN.1 object\
    \ identifier used to identify this signature algorithm\n   is:\n   id-GostR3411-94-with-GostR3410-94\
    \ OBJECT IDENTIFIER ::=\n         { iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n\
    \           gostR3411-94-with-gostR3410-94(4) }\n   When the id-GostR3411-94-with-GostR3410-94\
    \ algorithm identifier\n   appears as the algorithm field in an AlgorithmIdentifier,\
    \ the\n   encoding SHALL omit the parameters field.  That is, the\n   AlgorithmIdentifier\
    \ SHALL be a SEQUENCE of one component: the OBJECT\n   IDENTIFIER id-GostR3411-94-with-GostR3410-94.\n\
    \   The signature algorithm GOST R 34.10-94 generates a digital signature\n  \
    \ in the form of two 256-bit numbers, r' and s.  Its octet string\n   representation\
    \ consists of 64 octets, where the first 32 octets\n   contain the big-endian\
    \ representation of s and the second 32 octets\n   contain the big-endian representation\
    \ of r'.\n   This definition of a signature value is directly usable in CMS [CMS],\n\
    \   where such values are represented as octet strings.  However,\n   signature\
    \ values in certificates and CRLs [PROFILE] are represented\n   as bit strings,\
    \ and thus the octet string representation must be\n   converted.\n   To convert\
    \ an octet string signature value to a bit string, the most\n   significant bit\
    \ of the first octet of the signature value SHALL\n   become the first bit of\
    \ the bit string, and so on through the least\n   significant bit of the last\
    \ octet of the signature value, which SHALL\n   become the last bit of the bit\
    \ string.\n"
- title: 2.2.2.  Signature Algorithm GOST R 34.10-2001
  contents:
  - "2.2.2.  Signature Algorithm GOST R 34.10-2001\n   GOST R 34.10-2001 was developed\
    \ by \"GUBS of Federal Agency Government\n   Communication and Information\" and\
    \ \"All-Russian Scientific and\n   Research Institute of Standardization\".  This\
    \ document does not\n   contain the full GOST R 34.10-2001 specification, which\
    \ can be found\n   in [GOSTR341001] (in Russian).\n   The ASN.1 object identifier\
    \ used to identify this signature algorithm\n   is:\n   id-GostR3411-94-with-GostR3410-2001\
    \ OBJECT IDENTIFIER ::=\n         { iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n\
    \           gostR3411-94-with-gostR3410-2001(3) }\n   When the id-GostR3411-94-with-GostR3410-2001\
    \ algorithm identifier\n   appears as the algorithm field in an AlgorithmIdentifier,\
    \ the\n   encoding SHALL omit the parameters field.  That is, the\n   AlgorithmIdentifier\
    \ SHALL be a SEQUENCE of one component: the OBJECT\n   IDENTIFIER id-GostR3411-94-with-GostR3410-2001.\n\
    \   The signature algorithm GOST R 34.10-2001 generates a digital\n   signature\
    \ in the form of two 256-bit numbers, r and s.  Its octet\n   string representation\
    \ consists of 64 octets, where the first 32\n   octets contain the big-endian\
    \ representation of s and the second 32\n   octets contain the big-endian representation\
    \ of r.\n   The process described above (Section 2.2.1) MUST be used to convert\n\
    \   this octet string representation to a bit string for use in\n   certificates\
    \ and CRLs.\n"
- title: 2.3.  Subject Public Key Algorithms
  contents:
  - "2.3.  Subject Public Key Algorithms\n   This section defines OIDs and public\
    \ key parameters for public keys\n   that employ the GOST R 34.10-94 [GOSTR341094]/VKO\
    \ GOST R 34.10-94\n   [CPALGS] or the GOST R 34.10-2001 [GOSTR341001]/VKO GOST\
    \ R 34.10-2001\n   [CPALGS] algorithms.\n   Use of the same key for both signature\
    \ and key derivation is NOT\n   RECOMMENDED.  The intended application for the\
    \ key MAY be indicated\n   in the keyUsage certificate extension (see [PROFILE],\
    \ Section\n   4.2.1.3).\n"
- title: 2.3.1.  GOST R 34.10-94 Keys
  contents:
  - "2.3.1.  GOST R 34.10-94 Keys\n   GOST R 34.10-94 public keys can be used for\
    \ the signature algorithm\n   GOST R 34.10-94 [GOSTR341094] and for the key derivation\
    \ algorithm\n   VKO GOST R 34.10-94 [CPALGS].\n   GOST R 34.10-94 public keys\
    \ are identified by the following OID:\n   id-GostR3410-94 OBJECT IDENTIFIER ::=\n\
    \       { iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n           gostR3410-94(20)\
    \ }\n   The SubjectPublicKeyInfo.algorithm.algorithm field (see RFC 3280\n   [PROFILE])\
    \ for GOST R 34.10-94 keys MUST be set to id-GostR3410-94.\n   When the id-GostR3410-94\
    \ algorithm identifier appears as the\n   algorithm field in an AlgorithmIdentifier,\
    \ the encoding MAY omit the\n   parameters field or set it to NULL.  Otherwise,\
    \ this field MUST have\n   the following structure:\n    GostR3410-94-PublicKeyParameters\
    \ ::=\n        SEQUENCE {\n            publicKeyParamSet\n                OBJECT\
    \ IDENTIFIER,\n            digestParamSet\n                OBJECT IDENTIFIER,\n\
    \            encryptionParamSet\n                OBJECT IDENTIFIER DEFAULT\n \
    \                   id-Gost28147-89-CryptoPro-A-ParamSet\n        }\n   where:\n\
    \   * publicKeyParamSet - public key parameters identifier for GOST R\n     34.10-94\
    \ (see Section 8.3 of [CPALGS])\n   * digestParamSet - parameters identifier for\
    \ GOST R 34.11-94 (see\n     Section 8.2 of [CPALGS])\n   * encryptionParamSet\
    \ - parameters identifier for GOST 28147-89\n     [GOST28147] (see Section 8.1\
    \ of [CPALGS])\n   The absence of parameters SHALL be processed as described in\
    \ RFC 3280\n   [PROFILE], Section 6.1; that is, parameters are inherited from\
    \ the\n   issuer certificate.  When the working_public_key_parameters variable\n\
    \   is set to null, the certificate and any signature verifiable on this\n   certificate\
    \ SHALL be rejected.\n   The GOST R 34.10-94 public key MUST be ASN.1 DER encoded\
    \ as an OCTET\n   STRING; this encoding shall be used as the contents (i.e., the\
    \ value)\n   of the subjectPublicKey component (a BIT STRING) of the\n   SubjectPublicKeyInfo\
    \ data element.\n   GostR3410-94-PublicKey ::= OCTET STRING -- public key, Y\n\
    \   GostR3410-94-PublicKey MUST contain 128 octets of the little-endian\n   representation\
    \ of the public key Y = a^x (mod p), where a and p are\n   public key parameters,\
    \ and x is a private key.\n   Some erroneous applications discard zero bits at\
    \ the end of BIT\n   STRING containing the public key.  It is RECOMMENDED to pad\
    \ the bit\n   string with zeroes up to 1048 bits (131 octets) on decoding to be\n\
    \   able to decode the encapsulated OCTET STRING.\n   If the keyUsage extension\
    \ is present in an end-entity certificate\n   that contains a GOST R 34.10-94\
    \ public key, the following values MAY\n   be present:\n      digitalSignature;\n\
    \      nonRepudiation;\n      keyEncipherment; and\n      keyAgreement.\n   If\
    \ the keyAgreement or keyEnchiperment extension is present in a\n   certificate\
    \ GOST R 34.10-94 public key, the following values MAY be\n   present as well:\n\
    \      encipherOnly; and\n      decipherOnly.\n   The keyUsage extension MUST\
    \ NOT assert both encipherOnly and\n   decipherOnly.\n   If the keyUsage extension\
    \ is present in an CA or CRL signer\n   certificate that contains a GOST R 34.10-94\
    \ public key, the following\n   values MAY be present:\n      digitalSignature;\n\
    \      nonRepudiation;\n      keyCertSign; and\n      cRLSign.\n"
- title: 2.3.2.  GOST R 34.10-2001 Keys
  contents:
  - "2.3.2.  GOST R 34.10-2001 Keys\n   GOST R 34.10-2001 public keys can be used\
    \ for the signature algorithm\n   GOST R 34.10-2001 [GOSTR341001] and for the\
    \ key derivation algorithm\n   VKO GOST R 34.10-2001 [CPALGS].\n   GOST R 34.10-2001\
    \ public keys are identified by the following OID:\n   id-GostR3410-2001 OBJECT\
    \ IDENTIFIER ::=\n       { iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n\
    \           gostR3410-2001(19) }\n   The SubjectPublicKeyInfo.algorithm.algorithm\
    \ field (see RFC 3280\n   [PROFILE]) for GOST R 34.10-2001 keys MUST be set to\
    \ id-GostR3410-\n   2001.\n   When the id-GostR3410-2001 algorithm identifier\
    \ appears as the\n   algorithm field in an AlgorithmIdentifier, the encoding MAY\
    \ omit the\n   parameters field or set it to NULL.  Otherwise, this field MUST\
    \ have\n   the following structure:\n    GostR3410-2001-PublicKeyParameters ::=\n\
    \        SEQUENCE {\n            publicKeyParamSet\n                OBJECT IDENTIFIER,\n\
    \            digestParamSet\n                OBJECT IDENTIFIER,\n            encryptionParamSet\n\
    \                OBJECT IDENTIFIER DEFAULT\n                    id-Gost28147-89-CryptoPro-A-ParamSet\n\
    \        }\n   where:\n   * publicKeyParamSet - public key parameters identifier\
    \ for GOST R\n     34.10-2001 (see Section 8.4 of [CPALGS])\n   * digestParamSet\
    \ - parameters identifier for GOST R 34.11-94 (see\n     Section 8.2 of [CPALGS])\n\
    \   * encryptionParamSet - parameters identifier for GOST 28147-89\n     [GOST28147]\
    \ (see Section 8.1 of [CPALGS])\n   The absence of parameters SHALL be processed\
    \ as described in RFC 3280\n   [PROFILE], Section 6.1; that is, parameters are\
    \ inherited from the\n   issuer certificate.  When the working_public_key_parameters\
    \ variable\n   is set to null, the certificate and any signature verifiable on\
    \ this\n   certificate SHALL be rejected.\n   The GOST R 34.10-2001 public key\
    \ MUST be ASN.1 DER encoded as an\n   OCTET STRING; this encoding shall be used\
    \ as the contents (i.e., the\n   value) of the subjectPublicKey component (a BIT\
    \ STRING) of the\n   SubjectPublicKeyInfo data element.\n   GostR3410-2001-PublicKey\
    \ ::= OCTET STRING -- public key vector, Q\n   According to [GOSTR341001], a public\
    \ key is a point on the elliptic\n   curve Q = (x,y).\n   GostR3410-2001-PublicKey\
    \ MUST contain 64 octets, where the first 32\n   octets contain the little-endian\
    \ representation of x and the second\n   32 octets contain the little-endian representation\
    \ of y.  This\n   corresponds to the binary representation of (<y>256||<x>256)\
    \ from\n   [GOSTR341001], ch.  5.3.\n   Some erroneous applications discard zero\
    \ bits at the end of BIT\n   STRING containing the public key.  It is RECOMMENDED\
    \ to pad the bit\n   string with zeroes up to 528 bits (66 octets) on decoding\
    \ to be able\n   to decode the encapsulated OCTET STRING.\n   The same keyUsage\
    \ constraints apply for use of GOST R 34.10-2001 keys\n   as described in Section\
    \ 2.3.1 for GOST R 34.10-94 keys.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   It is RECOMMENDED that applications verify signature\
    \ values and\n   subject public keys to conform to [GOSTR341001, GOSTR341094]\n\
    \   standards prior to their use.\n   When a certificate is used to support digital\
    \ signatures as an\n   analogue to manual (\"wet\") signatures, in the context\
    \ of Russian\n   Federal Electronic Digital Signature Law [RFEDSL], the certificate\n\
    \   MUST contain keyUsage extension, it MUST be critical, and keyUsage\n   MUST\
    \ NOT include keyEncipherment and keyAgreement.\n   It is RECOMMENDED that CAs\
    \ and applications make sure that the\n   private key for creating signatures\
    \ is not used for more than its\n   allowed validity period (typically 15 months\
    \ for both the GOST R\n   34.10-94 and GOST R 34.10-2001 algorithms).\n   For\
    \ security discussion concerning use of algorithm parameters, see\n   the Security\
    \ Considerations section in [CPALGS].\n"
- title: 4.  Examples
  contents:
  - '4.  Examples

    '
- title: 4.1.  GOST R 34.10-94 Certificate
  contents:
  - "4.1.  GOST R 34.10-94 Certificate\n -----BEGIN CERTIFICATE-----\n MIICCzCCAboCECMO42BGlSTOxwvklBgufuswCAYGKoUDAgIEMGkxHTAbBgNVBAMM\n\
    \ FEdvc3RSMzQxMC05NCBleGFtcGxlMRIwEAYDVQQKDAlDcnlwdG9Qcm8xCzAJBgNV\n BAYTAlJVMScwJQYJKoZIhvcNAQkBFhhHb3N0UjM0MTAtOTRAZXhhbXBsZS5jb20w\n\
    \ HhcNMDUwODE2MTIzMjUwWhcNMTUwODE2MTIzMjUwWjBpMR0wGwYDVQQDDBRHb3N0\n UjM0MTAtOTQgZXhhbXBsZTESMBAGA1UECgwJQ3J5cHRvUHJvMQswCQYDVQQGEwJS\n\
    \ VTEnMCUGCSqGSIb3DQEJARYYR29zdFIzNDEwLTk0QGV4YW1wbGUuY29tMIGlMBwG\n BiqFAwICFDASBgcqhQMCAiACBgcqhQMCAh4BA4GEAASBgLuEZuF5nls02CyAfxOo\n\
    \ GWZxV/6MVCUhR28wCyd3RpjG+0dVvrey85NsObVCNyaE4g0QiiQOHwxCTSs7ESuo\n v2Y5MlyUi8Go/htjEvYJJYfMdRv05YmKCYJo01x3pg+2kBATjeM+fJyR1qwNCCw+\n\
    \ eMG1wra3Gqgqi0WBkzIydvp7MAgGBiqFAwICBANBABHHCH4S3ALxAiMpR3aPRyqB\n g1DjB8zy5DEjiULIc+HeIveF81W9lOxGkZxnrFjXBSqnjLeFKgF1hffXOAP7zUM=\n\
    \ -----END CERTIFICATE-----\n   0 30  523: SEQUENCE {\n   4 30  442:  SEQUENCE\
    \ {\n   8 02   16:   INTEGER\n            :    23 0E E3 60 46 95 24 CE C7 0B E4\
    \ 94 18 2E 7E EB\n  26 30    8:   SEQUENCE {\n  28 06    6:    OBJECT IDENTIFIER\n\
    \            :     id-GostR3411-94-with-GostR3410-94 (1 2 643 2 2 4)\n       \
    \     :    }\n  36 30  105:   SEQUENCE {\n  38 31   29:    SET {\n  40 30   27:\
    \     SEQUENCE {\n  42 06    3:      OBJECT IDENTIFIER commonName (2 5 4 3)\n\
    \  47 0C   20:      UTF8String 'GostR3410-94 example'\n            :      }\n\
    \            :     }\n  69 31   18:    SET {\n  71 30   16:     SEQUENCE {\n \
    \ 73 06    3:      OBJECT IDENTIFIER organizationName (2 5 4 10)\n  78 0C    9:\
    \      UTF8String 'CryptoPro'\n            :      }\n            :     }\n  89\
    \ 31   11:    SET {\n  91 30    9:     SEQUENCE {\n  93 06    3:      OBJECT IDENTIFIER\
    \ countryName (2 5 4 6)\n  98 13    2:      PrintableString 'RU'\n           \
    \ :      }\n            :     }\n 102 31   39:    SET {\n 104 30   37:     SEQUENCE\
    \ {\n 106 06    9:      OBJECT IDENTIFIER emailAddress (1 2 840 113549 1 9 1)\n\
    \ 117 16   24:      IA5String 'GostR3410-94@example.com'\n            :      }\n\
    \            :     }\n            :    }\n 143 30   30:   SEQUENCE {\n 145 17\
    \   13:    UTCTime '050816123250Z'\n 160 17   13:    UTCTime '150816123250Z'\n\
    \            :    }\n 175 30  105:   SEQUENCE {\n 177 31   29:    SET {\n 179\
    \ 30   27:     SEQUENCE {\n 181 06    3:      OBJECT IDENTIFIER commonName (2\
    \ 5 4 3)\n 186 0C   20:      UTF8String 'GostR3410-94 example'\n            :\
    \      }\n            :     }\n 208 31   18:    SET {\n 210 30   16:     SEQUENCE\
    \ {\n 212 06    3:      OBJECT IDENTIFIER organizationName (2 5 4 10)\n 217 0C\
    \    9:      UTF8String 'CryptoPro'\n            :      }\n            :     }\n\
    \ 228 31   11:    SET {\n 230 30    9:     SEQUENCE {\n 232 06    3:      OBJECT\
    \ IDENTIFIER countryName (2 5 4 6)\n 237 13    2:      PrintableString 'RU'\n\
    \            :      }\n            :     }\n 241 31   39:    SET {\n 243 30  \
    \ 37:     SEQUENCE {\n 245 06    9:      OBJECT IDENTIFIER emailAddress (1 2 840\
    \ 113549 1 9 1)\n 256 16   24:      IA5String 'GostR3410-94@example.com'\n   \
    \         :      }\n            :     }\n            :    }\n 282 30  165:   SEQUENCE\
    \ {\n 285 30   28:    SEQUENCE {\n 287 06    6:     OBJECT IDENTIFIER id-GostR3410-94\
    \ (1 2 643 2 2 20)\n 295 30   18:     SEQUENCE {\n 297 06    7:      OBJECT IDENTIFIER\n\
    \            :       id-GostR3410-94-CryptoPro-A-ParamSet\n            :     \
    \   (1 2 643 2 2 32 2)\n 306 06    7:      OBJECT IDENTIFIER\n            :  \
    \     id-GostR3411-94-CryptoProParamSet\n            :        (1 2 643 2 2 30\
    \ 1)\n            :      }\n            :     }\n 315 03  132:    BIT STRING 0\
    \ unused bits, encapsulates {\n 319 04  128:     OCTET STRING\n            : \
    \     BB 84 66 E1 79 9E 5B 34 D8 2C 80 7F 13 A8 19 66\n            :      71 57\
    \ FE 8C 54 25 21 47 6F 30 0B 27 77 46 98 C6\n            :      FB 47 55 BE B7\
    \ B2 F3 93 6C 39 B5 42 37 26 84 E2\n            :      0D 10 8A 24 0E 1F 0C 42\
    \ 4D 2B 3B 11 2B A8 BF 66\n            :      39 32 5C 94 8B C1 A8 FE 1B 63 12\
    \ F6 09 25 87 CC\n            :      75 1B F4 E5 89 8A 09 82 68 D3 5C 77 A6 0F\
    \ B6 90\n            :      10 13 8D E3 3E 7C 9C 91 D6 AC 0D 08 2C 3E 78 C1\n\
    \            :      B5 C2 B6 B7 1A A8 2A 8B 45 81 93 32 32 76 FA 7B\n        \
    \    :     }\n            :    }\n            :   }\n 450 30    8:  SEQUENCE {\n\
    \ 452 06    6:   OBJECT IDENTIFIER\n            :    id-GostR3411-94-with-GostR3410-94\
    \ (1 2 643 2 2 4)\n            :   }\n 460 03   65:  BIT STRING 0 unused bits\n\
    \            :   11 C7 08 7E 12 DC 02 F1 02 23 29 47 76 8F 47 2A\n           \
    \ :   81 83 50 E3 07 CC F2 E4 31 23 89 42 C8 73 E1 DE\n            :   22 F7 85\
    \ F3 55 BD 94 EC 46 91 9C 67 AC 58 D7 05\n            :   2A A7 8C B7 85 2A 01\
    \ 75 85 F7 D7 38 03 FB CD 43\n            :  }\n In the signature of the above\
    \ certificate, r' equals\n 0x22F785F355BD94EC46919C67AC58D7052AA78CB7852A017585F7D73803FBCD43\n\
    \ and s equals\n 0x11C7087E12DC02F102232947768F472A818350E307CCF2E431238942C873E1DE\n"
- title: 4.2.  GOST R 34.10-2001 Certificate
  contents:
  - "4.2.  GOST R 34.10-2001 Certificate\n -----BEGIN CERTIFICATE-----\n MIIB0DCCAX8CECv1xh7CEb0Xx9zUYma0LiEwCAYGKoUDAgIDMG0xHzAdBgNVBAMM\n\
    \ Fkdvc3RSMzQxMC0yMDAxIGV4YW1wbGUxEjAQBgNVBAoMCUNyeXB0b1BybzELMAkG\n A1UEBhMCUlUxKTAnBgkqhkiG9w0BCQEWGkdvc3RSMzQxMC0yMDAxQGV4YW1wbGUu\n\
    \ Y29tMB4XDTA1MDgxNjE0MTgyMFoXDTE1MDgxNjE0MTgyMFowbTEfMB0GA1UEAwwW\n R29zdFIzNDEwLTIwMDEgZXhhbXBsZTESMBAGA1UECgwJQ3J5cHRvUHJvMQswCQYD\n\
    \ VQQGEwJSVTEpMCcGCSqGSIb3DQEJARYaR29zdFIzNDEwLTIwMDFAZXhhbXBsZS5j\n b20wYzAcBgYqhQMCAhMwEgYHKoUDAgIkAAYHKoUDAgIeAQNDAARAhJVodWACGkB1\n\
    \ CM0TjDGJLP3lBQN6Q1z0bSsP508yfleP68wWuZWIA9CafIWuD+SN6qa7flbHy7Df\n D2a8yuoaYDAIBgYqhQMCAgMDQQA8L8kJRLcnqeyn1en7U23Sw6pkfEQu3u0xFkVP\n\
    \ vFQ/3cHeF26NG+xxtZPz3TaTVXdoiYkXYiD02rEx1bUcM97i\n -----END CERTIFICATE-----\n\
    \   0 30  464: SEQUENCE {\n   4 30  383:  SEQUENCE {\n   8 02   16:   INTEGER\n\
    \            :    2B F5 C6 1E C2 11 BD 17 C7 DC D4 62 66 B4 2E 21\n  26 30   \
    \ 8:   SEQUENCE {\n  28 06    6:    OBJECT IDENTIFIER\n            :     id-GostR3411-94-with-GostR3410-2001\
    \ (1 2 643 2 2 3)\n            :    }\n  36 30  109:   SEQUENCE {\n  38 31   31:\
    \    SET {\n  40 30   29:     SEQUENCE {\n  42 06    3:      OBJECT IDENTIFIER\
    \ commonName (2 5 4 3)\n  47 0C   22:      UTF8String 'GostR3410-2001 example'\n\
    \            :      }\n            :     }\n  71 31   18:    SET {\n  73 30  \
    \ 16:     SEQUENCE {\n  75 06    3:      OBJECT IDENTIFIER organizationName (2\
    \ 5 4 10)\n  80 0C    9:      UTF8String 'CryptoPro'\n            :      }\n \
    \           :     }\n  91 31   11:    SET {\n  93 30    9:     SEQUENCE {\n  95\
    \ 06    3:      OBJECT IDENTIFIER countryName (2 5 4 6)\n 100 13    2:      PrintableString\
    \ 'RU'\n            :      }\n            :     }\n 104 31   41:    SET {\n 106\
    \ 30   39:     SEQUENCE {\n 108 06    9:      OBJECT IDENTIFIER emailAddress (1\
    \ 2 840 113549 1 9 1)\n 119 16   26:      IA5String 'GostR3410-2001@example.com'\n\
    \            :      }\n            :     }\n            :    }\n 147 30   30:\
    \   SEQUENCE {\n 149 17   13:    UTCTime '050816141820Z'\n 164 17   13:    UTCTime\
    \ '150816141820Z'\n            :    }\n 179 30  109:   SEQUENCE {\n 181 31   31:\
    \    SET {\n 183 30   29:     SEQUENCE {\n 185 06    3:      OBJECT IDENTIFIER\
    \ commonName (2 5 4 3)\n 190 0C   22:      UTF8String 'GostR3410-2001 example'\n\
    \            :      }\n            :     }\n 214 31   18:    SET {\n 216 30  \
    \ 16:     SEQUENCE {\n 218 06    3:      OBJECT IDENTIFIER organizationName (2\
    \ 5 4 10)\n 223 0C    9:      UTF8String 'CryptoPro'\n            :      }\n \
    \           :     }\n 234 31   11:    SET {\n 236 30    9:     SEQUENCE {\n 238\
    \ 06    3:      OBJECT IDENTIFIER countryName (2 5 4 6)\n 243 13    2:      PrintableString\
    \ 'RU'\n            :      }\n            :     }\n 247 31   41:    SET {\n 249\
    \ 30   39:     SEQUENCE {\n 251 06    9:      OBJECT IDENTIFIER emailAddress (1\
    \ 2 840 113549 1 9 1)\n 262 16   26:      IA5String 'GostR3410-2001@example.com'\n\
    \            :      }\n            :     }\n            :    }\n 290 30   99:\
    \   SEQUENCE {\n 292 30   28:    SEQUENCE {\n 294 06    6:     OBJECT IDENTIFIER\
    \ id-GostR3410-2001 (1 2 643 2 2 19)\n 302 30   18:     SEQUENCE {\n 304 06  \
    \  7:      OBJECT IDENTIFIER\n            :       id-GostR3410-2001-CryptoPro-XchA-ParamSet\n\
    \            :        (1 2 643 2 2 36 0)\n 313 06    7:      OBJECT IDENTIFIER\n\
    \            :       id-GostR3411-94-CryptoProParamSet\n            :        (1\
    \ 2 643 2 2 30 1)\n            :      }\n            :     }\n 322 03   67:  \
    \  BIT STRING 0 unused bits, encapsulates {\n 325 04   64:     OCTET STRING\n\
    \            :      84 95 68 75 60 02 1A 40 75 08 CD 13 8C 31 89 2C\n        \
    \    :      FD E5 05 03 7A 43 5C F4 6D 2B 0F E7 4F 32 7E 57\n            :   \
    \   8F EB CC 16 B9 95 88 03 D0 9A 7C 85 AE 0F E4 8D\n            :      EA A6\
    \ BB 7E 56 C7 CB B0 DF 0F 66 BC CA EA 1A 60\n            :     }\n           \
    \ :    }\n            :   }\n 391 30    8:  SEQUENCE {\n 393 06    6:   OBJECT\
    \ IDENTIFIER\n            :    id-GostR3411-94-with-GostR3410-2001 (1 2 643 2\
    \ 2 3)\n            :   }\n 401 03   65:  BIT STRING 0 unused bits\n         \
    \   :   3C 2F C9 09 44 B7 27 A9 EC A7 D5 E9 FB 53 6D D2\n            :   C3 AA\
    \ 64 7C 44 2E DE ED 31 16 45 4F BC 54 3F DD\n            :   C1 DE 17 6E 8D 1B\
    \ EC 71 B5 93 F3 DD 36 93 55 77\n            :   68 89 89 17 62 20 F4 DA B1 31\
    \ D5 B5 1C 33 DE E2\n            :  }\n In the public key of the above certificate,\
    \ x equals\n 0x577E324FE70F2B6DF45C437A0305E5FD2C89318C13CD0875401A026075689584\n\
    \ and y equals\n 0x601AEACABC660FDFB0CBC7567EBBA6EA8DE40FAE857C9AD0038895B916CCEB8F\n\
    \ The corresponding private key d equals\n 0x0B293BE050D0082BDAE785631A6BAB68F35B42786D6DDA56AFAF169891040F77\n\
    \ In the signature of the above certificate, r equals\n 0xC1DE176E8D1BEC71B593F3DD36935577688989176220F4DAB131D5B51C33DEE2\n\
    \ and s equals\n 0x3C2FC90944B727A9ECA7D5E9FB536DD2C3AA647C442EDEED3116454FBC543FDD\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   This document was created in accordance with \"Russian\
    \ Cryptographic\n   Software Compatibility Agreement\", signed by FGUE STC \"\
    Atlas\",\n   CRYPTO-PRO, Factor-TS, MD PREI, Infotecs GmbH, SPRCIS (SPbRCZI),\n\
    \   Cryptocom, R-Alpha.  The goal of this agreement is to achieve mutual\n   compatibility\
    \ of the products and solutions.\n   The authors wish to thank the following:\n\
    \      Microsoft Corporation Russia for providing information about\n      company\
    \ products and solutions, and also for technical consulting\n      in PKI.\n \
    \     RSA Security Russia and Demos Co Ltd for active collaboration and\n    \
    \  critical help in creation of this document.\n      RSA Security Inc for compatibility\
    \ testing of the proposed data\n      formats while incorporating them into the\
    \ RSA Keon product.\n      Baltimore Technology plc for compatibility testing\
    \ of the proposed\n      data formats while incorporating them into their UniCERT\
    \ product.\n      Peter Gutmann for his helpful \"dumpasn1\" program.\n      Russ\
    \ Housley (Vigil Security, LLC, housley@vigilsec.com) and\n      Vasilij Sakharov\
    \ (DEMOS Co Ltd, svp@dol.ru) for encouraging the\n      authors to create this\
    \ document.\n      Grigorij Chudov for navigating the IETF process for this document.\n\
    \      Prikhodko Dmitriy (VSTU, PrikhodkoDV@volgablob.ru) for invaluable\n   \
    \   assistance in proofreading this document and verifying the form\n      and\
    \ the contents of the ASN.1 structures mentioned or used in this\n      document.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [GOST28147]   \"Cryptographic Protection for Data\
    \ Processing System\",\n                 GOST 28147-89, Gosudarstvennyi Standard\
    \ of USSR,\n                 Government Committee of the USSR for Standards, 1989.\n\
    \                 (In Russian)\n   [GOST3431195] \"Information technology. Cryptographic\
    \ Data Security.\n                 Cashing function.\", GOST 34.311-95, Council\
    \ for\n                 Standardization, Metrology and Certification of the\n\
    \                 Commonwealth of Independence States (EASC), Minsk,\n       \
    \          1995. (In Russian)\n   [GOST3431095] \"Information technology. Cryptographic\
    \ Data Security.\n                 Produce and check procedures of Electronic\
    \ Digital\n                 Signature based on Asymmetric Cryptographic\n    \
    \             Algorithm.\", GOST 34.310-95, Council for\n                 Standardization,\
    \ Metrology and Certification of the\n                 Commonwealth of Independence\
    \ States (EASC), Minsk,\n                 1995. (In Russian)\n   [GOST3431004]\
    \ \"Information technology. Cryptographic Data Security.\n                 Formation\
    \ and verification processes of (electronic)\n                 digital signature\
    \ based on Asymmetric Cryptographic\n                 Algorithm.\", GOST 34.310-2004,\
    \ Council for\n                 Standardization, Metrology and Certification of\
    \ the\n                 Commonwealth of Independence States (EASC), Minsk,\n \
    \                2004. (In Russian)\n   [GOSTR341094] \"Information technology.\
    \ Cryptographic Data Security.\n                 Produce and check procedures\
    \ of Electronic Digital\n                 Signatures based on Asymmetric Cryptographic\n\
    \                 Algorithm.\", GOST R 34.10-94, Gosudarstvennyi Standard\n  \
    \               of Russian Federation, Government Committee of the\n         \
    \        Russia for Standards, 1994.  (In Russian)\n   [GOSTR341001] \"Information\
    \ technology. Cryptographic data security.\n                 Signature and verification\
    \ processes of [electronic]\n                 digital signature.\", GOST R 34.10-2001,\
    \ Gosudarstvennyi\n                 Standard of Russian Federation, Government\
    \ Committee of\n                 the Russia for Standards, 2001.  (In Russian)\n\
    \   [GOSTR341194] \"Information technology. Cryptographic Data Security.\n   \
    \              Hashing function.\", GOST R 34.10-94, Gosudarstvennyi\n       \
    \          Standard of Russian Federation, Government Committee of\n         \
    \        the Russia for Standards, 1994.  (In Russian)\n   [CPALGS]      Popov,\
    \ V., Kurepkin, I., and S. Leontiev, \"Additional\n                 Cryptographic\
    \ Algorithms for Use with GOST 28147-89,\n                 GOST R 34.10-94, GOST\
    \ R 34.10-2001, and GOST R 34.11-94\n                 Algorithms\", RFC 4357,\
    \ January 2006.\n   [PKALGS]      Bassham, L., Polk, W., and R. Housley, \"Algorithms\
    \ and\n                 Identifiers for the Internet X.509 Public Key\n      \
    \           Infrastructure Certificate and Certificate Revocation\n          \
    \       List (CRL) Profile\", RFC 3279, April 2002.\n   [PROFILE]     Housley,\
    \ R., Polk, W., Ford, W., and D. Solo, \"Internet\n                 X.509 Public\
    \ Key Infrastructure Certificate and\n                 Certificate Revocation\
    \ List (CRL) Profile\", RFC 3280,\n                 April 2002.\n   [X.660]  \
    \     ITU-T Recommendation X.660 Information Technology -\n                 ASN.1\
    \ encoding rules: Specification of Basic Encoding\n                 Rules (BER),\
    \ Canonical Encoding Rules (CER) and\n                 Distinguished Encoding\
    \ Rules (DER), 1997.\n   [RFC2119]     Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n                 Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [Schneier95]  B. Schneier, Applied Cryptography,\
    \ Second Edition, John\n                 Wiley & Sons, Inc., 1995.\n   [RFEDSL]\
    \      Russian Federal Electronic Digital Signature Law, 10\n                \
    \ Jan 2002 N 1-FZ.\n   [CMS]         Housley, R., \"Cryptographic Message Syntax\
    \ (CMS)\", RFC\n                 3852, July 2004.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Serguei Leontiev, Ed.\n   CRYPTO-PRO\n   38, Obraztsova,\n\
    \   Moscow, 127018, Russian Federation\n   EMail: lse@cryptopro.ru\n   Dennis\
    \ Shefanovski, Ed.\n   Mobile TeleSystems OJSC\n   4, Marksistskaya Str.,\n  \
    \ Moscow, 109147, Russian Federation\n   EMail: dbs@mts.ru\n   Grigorij Chudov\n\
    \   CRYPTO-PRO\n   38, Obraztsova,\n   Moscow, 127018, Russian Federation\n  \
    \ EMail: chudov@cryptopro.ru\n   Alexandr Afanasiev\n   Factor-TS\n   office 711,\
    \ 14, Presnenskij val,\n   Moscow, 123557, Russian Federation\n   EMail: afa1@factor-ts.ru\n\
    \   Nikolaj Nikishin\n   Infotecs GmbH\n   p/b 35, 80-5, Leningradskij prospekt,\n\
    \   Moscow, 125315, Russian Federation\n   EMail: nikishin@infotecs.ru\n   Boleslav\
    \ Izotov\n   FGUE STC \"Atlas\"\n   38, Obraztsova,\n   Moscow, 127018, Russian\
    \ Federation\n   EMail: izotov@nii.voskhod.ru\n   Elena Minaeva\n   MD PREI\n\
    \   build 3, 6A, Vtoroj Troitskij per.,\n   Moscow, Russian Federation\n   EMail:\
    \ evminaeva@mail.ru\n   Igor Ovcharenko\n   MD PREI\n   Office 600, 14, B.Novodmitrovskaya,\n\
    \   Moscow, Russian Federation\n   EMail: igori@mo.msk.ru\n   Serguei Murugov\n\
    \   R-Alpha\n   4/1, Raspletina,\n   Moscow, 123060, Russian Federation\n   EMail:\
    \ msm@top-cross.ru\n   Igor Ustinov\n   Cryptocom\n   office 239, 51, Leninskij\
    \ prospekt,\n   Moscow, 119991, Russian Federation\n   EMail: igus@cryptocom.ru\n\
    \   Anatolij Erkin\n   SPRCIS (SPbRCZI)\n   1, Obrucheva,\n   St.Petersburg, 195220,\
    \ Russian Federation\n   EMail: erkin@nevsky.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
