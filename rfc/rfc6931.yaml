- title: __initial_text__
  contents:
  - '      Additional XML Security Uniform Resource Identifiers (URIs)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document expands, updates, and establishes an IANA registry\
    \ for\n   the list of URIs intended for use with XML digital signatures,\n   encryption,\
    \ canonicalization, and key management.  These URIs\n   identify algorithms and\
    \ types of information.  This document\n   obsoletes RFC 4051.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6931.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Terminology ................................................4\n  \
    \    1.2. Acronyms ...................................................4\n   2.\
    \ Algorithms ......................................................5\n      2.1.\
    \ DigestMethod (Hash) Algorithms .............................5\n           2.1.1.\
    \ MD5 .................................................5\n           2.1.2. SHA-224\
    \ .............................................6\n           2.1.3. SHA-384 .............................................6\n\
    \           2.1.4. Whirlpool ...........................................6\n  \
    \         2.1.5. New SHA Functions ...................................7\n    \
    \  2.2. SignatureMethod MAC Algorithms .............................7\n      \
    \     2.2.1. HMAC-MD5 ............................................7\n        \
    \   2.2.2. HMAC SHA Variations .................................8\n          \
    \ 2.2.3. HMAC-RIPEMD160 ......................................8\n      2.3. SignatureMethod\
    \ Public-Key Signature Algorithms ............9\n           2.3.1. RSA-MD5 .............................................9\n\
    \           2.3.2. RSA-SHA256 .........................................10\n  \
    \         2.3.3. RSA-SHA384 .........................................10\n    \
    \       2.3.4. RSA-SHA512 .........................................10\n      \
    \     2.3.5. RSA-RIPEMD160 ......................................11\n        \
    \   2.3.6. ECDSA-SHA*, ECDSA-RIPEMD160, ECDSA-Whirlpool .......11\n          \
    \ 2.3.7. ESIGN-SHA* .........................................12\n           2.3.8.\
    \ RSA-Whirlpool ......................................12\n           2.3.9. RSASSA-PSS\
    \ with Parameters .........................13\n           2.3.10. RSASSA-PSS without\
    \ Parameters .....................14\n           2.3.11. RSA-SHA224 ........................................15\n\
    \      2.4. Minimal Canonicalization ..................................15\n  \
    \    2.5. Transform Algorithms ......................................16\n    \
    \       2.5.1. XPointer ...........................................16\n      2.6.\
    \ EncryptionMethod Algorithms ...............................17\n           2.6.1.\
    \ ARCFOUR Encryption Algorithm .......................17\n           2.6.2. Camellia\
    \ Block Encryption ..........................17\n           2.6.3. Camellia Key\
    \ Wrap ..................................17\n           2.6.4. PSEC-KEM ...........................................18\n\
    \           2.6.5. SEED Block Encryption ..............................19\n  \
    \         2.6.6. SEED Key Wrap ......................................19\n   3.\
    \ KeyInfo ........................................................19\n      3.1.\
    \ PKCS #7 Bag of Certificates and CRLs ......................20\n      3.2. Additional\
    \ RetrievalMethod Type Values ....................20\n   4. Indexes ........................................................20\n\
    \      4.1. Fragment Index ............................................21\n  \
    \    4.2. URI Index .................................................24\n   5.\
    \ Allocation Considerations ......................................27\n      5.1.\
    \ W3C Allocation Considerations .............................27\n      5.2. IANA\
    \ Considerations .......................................28\n   6. Security Considerations\
    \ ........................................28\n   7. Acknowledgements ...............................................29\n\
    \   Appendix A. Changes from RFC 4051 .................................30\n  \
    \ Normative References ..............................................31\n   Informative\
    \ References ............................................33\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   XML digital signatures, canonicalization, and encryption\
    \ have been\n   standardized by the W3C and by the joint IETF/W3C XMLDSIG working\n\
    \   group [W3C].  All of these are now W3C Recommendations and some are\n   also\
    \ RFCs.  They are available as follows:\n   RFC\n   Status            W3C REC\
    \      Topic\n   -----------       -------      -----\n   [RFC3275]         [XMLDSIG10]\
    \  XML Digital Signatures\n   Draft Standard\n   [RFC3076]         [CANON10] \
    \   Canonical XML\n   Informational\n   - - - - - -       [XMLENC10]   XML Encryption\
    \ 1.0\n   [RFC3741]         [XCANON]     Exclusive XML Canonicalization 1.0\n\
    \   Informational\n   All of these documents and recommendations use URIs [RFC3986]\
    \ to\n   identify algorithms and keying information types.  The W3C has\n   subsequently\
    \ produced updated XML Signature 1.1 [XMLDSIG11],\n   Canonical XML 1.1 [CANON11],\
    \ and XML Encryption 1.1 [XMLENC11]\n   versions, as well as a new XML Signature\
    \ Properties specification\n   [XMLDSIG-PROP].\n   All camel-case element names\
    \ herein, such as DigestValue, are from\n   these documents.\n   This document\
    \ is an updated convenient reference list of URIs and\n   corresponding algorithms\
    \ in which there is expressed interest.  Since\n   the previous list [RFC4051]\
    \ was issued in 2005, significant new\n   cryptographic algorithms of interest\
    \ to XML security, for some of\n   which the URI is only specified in this document,\
    \ have been added.\n   This document obsoletes [RFC4051].  All of the URIs appear\
    \ in the\n   indexes in Section 4.  Only the URIs that were added by [RFC4051]\
    \ or\n   this document have a subsection in Section 2 or 3, with the exception\n\
    \   of Minimal Canonicalization (Section 2.4), for example, use of\n   SHA-256\
    \ is defined in [XMLENC11] and hence there is no subsection on\n   that algorithm\
    \ here, but its URI is included in the indexes in\n   Section 4.\n   Specification\
    \ in this document of the URI representing an algorithm\n   does not imply endorsement\
    \ of the algorithm for any particular\n   purpose.  A protocol specification,\
    \ which this is not, generally\n   gives algorithm and implementation requirements\
    \ for the protocol.\n   Security considerations for algorithms are constantly\
    \ evolving, as\n   documented elsewhere.  This specification simply provides some\
    \ URIs\n   and relevant formatting for when those URIs are used.\n   Note that\
    \ progressing XML Digital Signature [RFC3275] along the\n   Standards Track required\
    \ removal of any algorithms from the original\n   version [RFC3075] for which\
    \ there was not demonstrated\n   interoperability.  This required removal of the\
    \ Minimal\n   Canonicalization algorithm, in which there appears to be continued\n\
    \   interest.  The URI for Minimal Canonicalization was included in\n   [RFC4051]\
    \ and is included here.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT\
    \ RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   [RFC2119].\n   This document is not intended to change the\
    \ algorithm implementation\n   requirements of any IETF or W3C document.  Use\
    \ of [RFC2119]\n   terminology is intended to be only such as is already stated\
    \ or\n   implied by other authoritative documents.\n"
- title: 1.2.  Acronyms
  contents:
  - "1.2.  Acronyms\n   The following acronyms are used in this document:\n   HMAC\
    \ - Keyed-Hashing MAC [RFC2104]\n   IETF - Internet Engineering Task Force <www.ietf.org>\n\
    \   MAC - Message Authentication Code\n   MD - Message Digest\n   NIST - United\
    \ States National Institute of Standards and Technology\n          <www.nist.gov>\n\
    \   RC - Rivest Cipher\n   RSA - Rivest, Shamir, and Adleman\n   SHA - Secure\
    \ Hash Algorithm\n   URI - Uniform Resource Identifier [RFC3986]\n   W3C - World\
    \ Wide Web Consortium <www.w3.org>\n   XML - eXtensible Markup Language\n"
- title: 2.  Algorithms
  contents:
  - "2.  Algorithms\n   The URI [RFC3986] that was dropped from the XML Digital Signature\n\
    \   standard due to the transition from Proposed Standard to Draft\n   Standard\
    \ [RFC3275] is included in Section 2.4 below with its original\n      http://www.w3.org/2000/09/xmldsig#\n\
    \   prefix so as to avoid changing the XMLDSIG standard's namespace.\n   Additional\
    \ algorithms in [RFC4051] were given URIs that start with\n      http://www.w3.org/2001/04/xmldsig-more#\n\
    \   while further algorithms added in this document are given URIs that\n   start\
    \ with\n      http://www.w3.org/2007/05/xmldsig-more#\n   In addition, for ease\
    \ of reference, this document includes in the\n   indexes in Section 4 many cryptographic\
    \ algorithm URIs from several\n   XML security documents using the namespaces\
    \ with which they are\n   defined in those documents.  For example, 2000/09/xmldsig#\
    \ for some\n   URIs specified in [RFC3275] and 2001/04/xmlenc# for some URIs\n\
    \   specified in [XMLENC10].\n   See also [XMLSECXREF].\n"
- title: 2.1.  DigestMethod (Hash) Algorithms
  contents:
  - "2.1.  DigestMethod (Hash) Algorithms\n   These algorithms are usable wherever\
    \ a DigestMethod element occurs.\n"
- title: 2.1.1.  MD5
  contents:
  - "2.1.1.  MD5\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#md5\n\
    \   The MD5 algorithm [RFC1321] takes no explicit parameters.  An example\n  \
    \ of an MD5 DigestAlgorithm element is:\n   <DigestAlgorithm\n      Algorithm=\"\
    http://www.w3.org/2001/04/xmldsig-more#md5\"/>\n   An MD5 digest is a 128-bit\
    \ string.  The content of the DigestValue\n   element SHALL be the base64 [RFC2045]\
    \ encoding of this bit string\n   viewed as a 16-octet stream.  See [RFC6151]\
    \ for MD5 security\n   considerations.\n"
- title: 2.1.2.  SHA-224
  contents:
  - "2.1.2.  SHA-224\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#sha224\n\
    \   The SHA-224 algorithm [FIPS180-4] [RFC6234] takes no explicit\n   parameters.\
    \  An example of a SHA-224 DigestAlgorithm element is:\n   <DigestAlgorithm\n\
    \      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#sha224\" />\n   A SHA-224\
    \ digest is a 224-bit string.  The content of the DigestValue\n   element SHALL\
    \ be the base64 [RFC2045] encoding of this string viewed\n   as a 28-octet stream.\n"
- title: 2.1.3.  SHA-384
  contents:
  - "2.1.3.  SHA-384\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#sha384\n\
    \   The SHA-384 algorithm [FIPS180-4] takes no explicit parameters.  An\n   example\
    \ of a SHA-384 DigestAlgorithm element is:\n   <DigestAlgorithm\n      Algorithm=\"\
    http://www.w3.org/2001/04/xmldsig-more#sha384\" />\n   A SHA-384 digest is a 384-bit\
    \ string.  The content of the DigestValue\n   element SHALL be the base64 [RFC2045]\
    \ encoding of this string viewed\n   as a 48-octet stream.\n"
- title: 2.1.4.  Whirlpool
  contents:
  - "2.1.4.  Whirlpool\n   Identifier:\n      http://www.w3.org/2007/05/xmldsig-more#whirlpool\n\
    \   The Whirlpool algorithm [10118-3] takes no explicit parameters.  A\n   Whirlpool\
    \ digest is a 512-bit string.  The content of the DigestValue\n   element SHALL\
    \ be the base64 [RFC2045] encoding of this string viewed\n   as a 64-octet stream.\n"
- title: 2.1.5.  New SHA Functions
  contents:
  - "2.1.5.  New SHA Functions\n   Identifiers:\n      http://www.w3.org/2007/05/xmldsig-more#sha3-224\n\
    \      http://www.w3.org/2007/05/xmldsig-more#sha3-256\n      http://www.w3.org/2007/05/xmldsig-more#sha3-384\n\
    \      http://www.w3.org/2007/05/xmldsig-more#sha3-512\n   NIST has recently completed\
    \ a hash function competition for an\n   alternative to the SHA family.  The Keccak-f[1600]\
    \ algorithm was\n   selected [Keccak] [SHA-3].  This hash function is commonly\
    \ referred\n   to as \"SHA-3\", and this section is a space holder and reservation\
    \ of\n   URIs for future information on Keccak use in XML security.\n   A SHA-3\
    \ 224, 256, 384, and 512 digest is a 224-, 256-, 384-, and\n   512-bit string,\
    \ respectively.  The content of the DigestValue element\n   SHALL be the base64\
    \ [RFC2045] encoding of this string viewed as a\n   28-, 32-, 48-, and 64-octet\
    \ stream, respectively.\n"
- title: 2.2.  SignatureMethod MAC Algorithms
  contents:
  - "2.2.  SignatureMethod MAC Algorithms\n   This section covers SignatureMethod\
    \ MAC (Message Authentication Code)\n   Algorithms.\n   Note: Some text in this\
    \ section is duplicated from [RFC3275] for the\n   convenience of the reader.\
    \  RFC 3275 is normative in case of\n   conflict.\n"
- title: 2.2.1.  HMAC-MD5
  contents:
  - "2.2.1.  HMAC-MD5\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#hmac-md5\n\
    \   The HMAC algorithm [RFC2104] takes the truncation length in bits as a\n  \
    \ parameter; if the parameter is not specified, then all the bits of\n   the hash\
    \ are output.  An example of an HMAC-MD5 SignatureMethod\n   element is as follows:\n\
    \   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#hmac-md5\"\
    >\n      <HMACOutputLength>112</HMACOutputLength>\n   </SignatureMethod>\n   The\
    \ output of the HMAC algorithm is ultimately the output (possibly\n   truncated)\
    \ of the chosen digest algorithm.  This value SHALL be\n   base64 [RFC2045] encoded\
    \ in the same straightforward fashion as the\n   output of the digest algorithms.\
    \  Example: the SignatureValue element\n   for the HMAC-MD5 digest\n      9294727A\
    \ 3638BB1C 13F48EF8 158BFC9D\n   from the test vectors in [RFC2104] would be\n\
    \      kpRyejY4uxwT9I74FYv8nQ==\n   Schema Definition:\n      <simpleType name=\"\
    HMACOutputLength\">\n         <restriction base=\"integer\"/>\n      </simpleType>\n\
    \   DTD:\n      <!ELEMENT HMACOutputLength (#PCDATA) >\n   The Schema Definition\
    \ and DTD immediately above are copied from\n   [RFC3275].\n   See [RFC6151] for\
    \ HMAC-MD5 security considerations.\n"
- title: 2.2.2.  HMAC SHA Variations
  contents:
  - "2.2.2.  HMAC SHA Variations\n   Identifiers:\n      http://www.w3.org/2001/04/xmldsig-more#hmac-sha224\n\
    \      http://www.w3.org/2001/04/xmldsig-more#hmac-sha256\n      http://www.w3.org/2001/04/xmldsig-more#hmac-sha384\n\
    \      http://www.w3.org/2001/04/xmldsig-more#hmac-sha512\n   SHA-224, SHA-256,\
    \ SHA-384, and SHA-512 [FIPS180-4] [RFC6234] can also\n   be used in HMAC as described\
    \ in Section 2.2.1 above for HMAC-MD5.\n"
- title: 2.2.3.  HMAC-RIPEMD160
  contents:
  - "2.2.3.  HMAC-RIPEMD160\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#hmac-ripemd160\n\
    \   RIPEMD-160 [10118-3] can also be used in HMAC as described in Section\n  \
    \ 2.2.1 above for HMAC-MD5.\n"
- title: 2.3.  SignatureMethod Public-Key Signature Algorithms
  contents:
  - "2.3.  SignatureMethod Public-Key Signature Algorithms\n   These algorithms are\
    \ distinguished from those in Section 2.2 above in\n   that they use public-key\
    \ methods.  That is to say, the verification\n   key is different from and not\
    \ feasibly derivable from the signing\n   key.\n"
- title: 2.3.1.  RSA-MD5
  contents:
  - "2.3.1.  RSA-MD5\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#rsa-md5\n\
    \   This implies the PKCS#1 v1.5 padding algorithm described in\n   [RFC3447].\
    \  An example of use is\n   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-md5\"\
    \ />\n   The SignatureValue content for an RSA-MD5 signature is the base64\n \
    \  [RFC2045] encoding of the octet string computed as per [RFC3447],\n   Section\
    \ 8.2.1, signature generation for the RSASSA-PKCS1-v1_5\n   signature scheme.\
    \  As specified in the EMSA-PKCS1-V1_5-ENCODE\n   function in [RFC3447], Section\
    \ 9.2, the value input to the signature\n   function MUST contain a pre-pended\
    \ algorithm object identifier for\n   the hash function, but the availability\
    \ of an ASN.1 parser and\n   recognition of OIDs is not required of a signature\
    \ verifier.  The\n   PKCS#1 v1.5 representation appears as:\n      CRYPT (PAD\
    \ (ASN.1 (OID, DIGEST (data))))\n   Note that the padded ASN.1 will be of the\
    \ following form:\n      01 | FF* | 00 | prefix | hash\n   Vertical bar (\"|\"\
    ) represents concatenation.  \"01\", \"FF\", and \"00\"\n   are fixed octets of\
    \ the corresponding hexadecimal value, and the\n   asterisk (\"*\") after \"FF\"\
    \ indicates repetition.  \"hash\" is the MD5\n   digest of the data.  \"prefix\"\
    \ is the ASN.1 BER MD5 algorithm\n   designator prefix required in PKCS #1 [RFC3447],\
    \ that is,\n      hex 30 20 30 0c 06 08 2a 86 48 86 f7 0d 02 05 05 00 04 10\n\
    \   This prefix is included to make it easier to use standard\n   cryptographic\
    \ libraries.  The FF octet MUST be repeated enough times\n   that the value of\
    \ the quantity being CRYPTed is exactly one octet\n   shorter than the RSA modulus.\n\
    \   See [RFC6151] for MD5 security considerations.\n"
- title: 2.3.2.  RSA-SHA256
  contents:
  - "2.3.2.  RSA-SHA256\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\n\
    \   This implies the PKCS#1 v1.5 padding algorithm [RFC3447] as described\n  \
    \ in Section 2.3.1, but with the ASN.1 BER SHA-256 algorithm designator\n   prefix.\
    \  An example of use is\n   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\
    \n   />\n"
- title: 2.3.3.  RSA-SHA384
  contents:
  - "2.3.3.  RSA-SHA384\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\n\
    \   This implies the PKCS#1 v1.5 padding algorithm [RFC3447] as described\n  \
    \ in Section 2.3.1, but with the ASN.1 BER SHA-384 algorithm designator\n   prefix.\
    \  An example of use is\n   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\"\
    \ />\n   Because it takes about the same effort to calculate a SHA-384 message\n\
    \   digest as it does a SHA-512 message digest, it is suggested that\n   RSA-SHA512\
    \ be used in preference to RSA-SHA384 where possible.\n"
- title: 2.3.4.  RSA-SHA512
  contents:
  - "2.3.4.  RSA-SHA512\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\n\
    \   This implies the PKCS#1 v1.5 padding algorithm [RFC3447] as described\n  \
    \ in Section 2.3.1, but with the ASN.1 BER SHA-512 algorithm designator\n   prefix.\
    \  An example of use is\n   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\"\
    \ />\n"
- title: 2.3.5.  RSA-RIPEMD160
  contents:
  - "2.3.5.  RSA-RIPEMD160\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#rsa-ripemd160\n\
    \   This implies the PKCS#1 v1.5 padding algorithm [RFC3447] as described\n  \
    \ in Section 2.3.1, but with the ASN.1 BER RIPEMD160 algorithm\n   designator\
    \ prefix.  An example of use is\n   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-ripemd160\"\
    \n   />\n"
- title: 2.3.6.  ECDSA-SHA*, ECDSA-RIPEMD160, ECDSA-Whirlpool
  contents:
  - "2.3.6.  ECDSA-SHA*, ECDSA-RIPEMD160, ECDSA-Whirlpool\n   Identifiers:\n     \
    \ http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1\n      http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224\n\
    \      http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\n      http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384\n\
    \      http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512\n      http://www.w3.org/2007/05/xmldsig-more#ecdsa-ripemd160\n\
    \      http://www.w3.org/2007/05/xmldsig-more#ecdsa-whirlpool\n   The Elliptic\
    \ Curve Digital Signature Algorithm (ECDSA) [FIPS180-4] is\n   the elliptic curve\
    \ analogue of the Digital Signature Algorithm (DSA)\n   signature method, i.e.,\
    \ the Digital Signature Standard (DSS).  It\n   takes no explicit parameters.\
    \  For detailed specifications of how to\n   use it with SHA hash functions and\
    \ XML Digital Signature, please see\n   [X9.62] and [RFC4050].  The #ecdsa-ripemd160\
    \ and #ecdsa-whirlpool\n   fragments in the new namespace identifies a signature\
    \ method\n   processed in the same way as specified by the #ecdsa-sha1 fragment\
    \ of\n   this namespace, with the exception that RIPEMD160 or Whirlpool is\n \
    \  used instead of SHA-1.\n   The output of the ECDSA algorithm consists of a\
    \ pair of integers\n   usually referred by the pair (r, s).  The signature value\
    \ consists of\n   the base64 encoding of the concatenation of two octet streams\
    \ that\n   respectively result from the octet-encoding of the values r and s in\n\
    \   that order.  Conversion from integer to octet stream must be done\n   according\
    \ to the I2OSP operation defined in the [RFC3447]\n   specification with the l\
    \ parameter equal to the size of the base\n   point order of the curve in bytes\
    \ (e.g., 32 for the P-256 curve and\n   66 for the P-521 curve [FIPS186-3]).\n\
    \   For an introduction to elliptic curve cryptographic algorithms, see\n   [RFC6090]\
    \ and note the errata (Errata ID 2773-2777).\n"
- title: 2.3.7.  ESIGN-SHA*
  contents:
  - "2.3.7.  ESIGN-SHA*\n   Identifiers:\n      http://www.w3.org/2001/04/xmldsig-more#esign-sha1\n\
    \      http://www.w3.org/2001/04/xmldsig-more#esign-sha224\n      http://www.w3.org/2001/04/xmldsig-more#esign-sha256\n\
    \      http://www.w3.org/2001/04/xmldsig-more#esign-sha384\n      http://www.w3.org/2001/04/xmldsig-more#esign-sha512\n\
    \   The ESIGN algorithm specified in [IEEEP1363a] is a signature scheme\n   based\
    \ on the integer factorization problem.  It is much faster than\n   previous digital\
    \ signature schemes, so ESIGN can be implemented on\n   smart cards without special\
    \ co-processors.\n   An example of use is\n   <SignatureMethod\n      Algorithm=\"\
    http://www.w3.org/2001/04/xmldsig-more#esign-sha1\"\n   />\n"
- title: 2.3.8.  RSA-Whirlpool
  contents:
  - "2.3.8.  RSA-Whirlpool\n   Identifier:\n      http://www.w3.org/2007/05/xmldsig-more#rsa-whirlpool\n\
    \   As in the definition of the RSA-SHA1 algorithm in [XMLDSIG11], the\n   designator\
    \ \"RSA\" means the RSASSA-PKCS1-v1_5 algorithm as defined in\n   [RFC3447]. \
    \ When identified through the #rsa-whirlpool fragment\n   identifier, Whirlpool\
    \ is used as the hash algorithm instead.  Use of\n   the ASN.1 BER Whirlpool algorithm\
    \ designator is implied.  That\n   designator is\n      hex 30 4e 30 0a 06 06\
    \ 28 cf 06 03 00 37 05 00 04 40\n   as an explicit octet sequence.  This corresponds\
    \ to OID\n   1.0.10118.3.0.55 defined in [10118-3].\n   An example of use is\n\
    \   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-whirlpool\"\
    \n   />\n"
- title: 2.3.9.  RSASSA-PSS with Parameters
  contents:
  - "2.3.9.  RSASSA-PSS with Parameters\n   Identifiers:\n      http://www.w3.org/2007/05/xmldsig-more#rsa-pss\n\
    \      http://www.w3.org/2007/05/xmldsig-more#MGF1\n   These identifiers imply\
    \ the PKCS#1 EMSA-PSS encoding algorithm\n   [RFC3447].  The RSASSA-PSS algorithm\
    \ takes the digest method (hash\n   function), a mask generation function, the\
    \ salt length in bytes\n   (SaltLength), and the trailer field as explicit parameters.\n\
    \   Algorithm identifiers for hash functions specified in XML encryption\n   [XMLENC11]\
    \ [XMLDSIG11] and in Section 2.1 are considered to be valid\n   algorithm identifiers\
    \ for hash functions.  According to [RFC3447],\n   the default value for the digest\
    \ function is SHA-1, but due to the\n   discovered weakness of SHA-1 [RFC6194],\
    \ it is recommended that\n   SHA-256 or a stronger hash function be used.  Notwithstanding\n\
    \   [RFC3447], SHA-256 is the default to be used with these\n   SignatureMethod\
    \ identifiers if no hash function has been specified.\n   The default salt length\
    \ for these SignatureMethod identifiers if the\n   SaltLength is not specified\
    \ SHALL be the number of octets in the hash\n   value of the digest method, as\
    \ recommended in [RFC4055].  In a\n   parameterized RSASSA-PSS signature the ds:DigestMethod\
    \ and the\n   SaltLength parameters usually appear.  If they do not, the defaults\n\
    \   make this equivalent to\n   http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1\
    \ (see Section\n   2.3.10).  The TrailerField defaults to 1 (0xBC) when omitted.\n\
    \   Schema Definition (target namespace\n   http://www.w3.org/2007/05/xmldsig-more#):\n\
    \   <xs:element name=\"RSAPSSParams\" type=\"pss:RSAPSSParamsType\">\n       <xs:annotation>\n\
    \           <xs:documentation>\n   Top level element that can be used in xs:any\
    \ namespace=\"#other\"\n   wildcard of ds:SignatureMethod content.\n         \
    \  </xs:documentation>\n       </xs:annotation>\n   </xs:element>\n   <xs:complexType\
    \ name=\"RSAPSSParamsType\">\n       <xs:sequence>\n           <xs:element ref=\"\
    ds:DigestMethod\" minOccurs=\"0\"/>\n           <xs:element name=\"MaskGenerationFunction\"\
    \n              type=\"pss:MaskGenerationFunctionType\" minOccurs=\"0\"/>\n  \
    \         <xs:element name=\"SaltLength\" type=\"xs:int\"\n              minOccurs=\"\
    0\"/>\n           <xs:element name=\"TrailerField\" type=\"xs:int\"\n        \
    \      minOccurs=\"0\"/>\n       </xs:sequence>\n   </xs:complexType>\n   <xs:complexType\
    \ name=\"MaskGenerationFunctionType\">\n       <xs:sequence>\n           <xs:element\
    \ ref=\"ds:DigestMethod\" minOccurs=\"0\"/>\n       </xs:sequence>\n       <xs:attribute\
    \ name=\"Algorithm\" type=\"xs:anyURI\"\n          default=\"http://www.w3.org/2007/05/xmldsig-more#MGF1\"\
    />\n   </xs:complexType>\n"
- title: 2.3.10.  RSASSA-PSS without Parameters
  contents:
  - "2.3.10.  RSASSA-PSS without Parameters\n   [RFC3447] currently specifies only\
    \ one mask generation function MGF1\n   based on a hash function.  Although [RFC3447]\
    \ allows for\n   parameterization, the default is to use the same hash function\
    \ as the\n   digest method function.  Only this default approach is supported\
    \ by\n   this section; therefore, the definition of a mask generation function\n\
    \   type is not needed yet.  The same applies to the trailer field.\n   There\
    \ is only one value (0xBC) specified in [RFC3447].  Hence, this\n   default parameter\
    \ must be used for signature generation.  The default\n   salt length is the length\
    \ of the hash function.\n   Identifiers:\n      http://www.w3.org/2007/05/xmldsig-more#sha3-224-rsa-MGF1\n\
    \      http://www.w3.org/2007/05/xmldsig-more#sha3-256-rsa-MGF1\n      http://www.w3.org/2007/05/xmldsig-more#sha3-384-rsa-MGF1\n\
    \      http://www.w3.org/2007/05/xmldsig-more#sha3-512-rsa-MGF1\n      http://www.w3.org/2007/05/xmldsig-more#md2-rsa-MGF1\n\
    \      http://www.w3.org/2007/05/xmldsig-more#md5-rsa-MGF1\n      http://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1\n\
    \      http://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1\n      http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1\n\
    \      http://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1\n      http://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1\n\
    \      http://www.w3.org/2007/05/xmldsig-more#ripemd128-rsa-MGF1\n      http://www.w3.org/2007/05/xmldsig-more#ripemd160-rsa-MGF1\n\
    \      http://www.w3.org/2007/05/xmldsig-more#whirlpool-rsa-MGF1\n   An example\
    \ of use is\n   <SignatureMethod\n     Algorithm=\n     \"http://www.w3.org/2007/05/xmldsig-more#SHA3-256-rsa-MGF1\"\
    \n   />\n"
- title: 2.3.11.  RSA-SHA224
  contents:
  - "2.3.11.  RSA-SHA224\n   Identifier:\n      http://www.w3.org/2007/05/xmldsig-more#rsa-sha224\n\
    \   This implies the PKCS#1 v1.5 padding algorithm [RFC3447] as described\n  \
    \ in Section 2.3.1, but with the ASN.1 BER SHA-224 algorithm designator\n   prefix.\
    \  An example of use is\n   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2007/05/xmldsig-more#rsa-sha224\"\
    \ />\n   Because it takes about the same effort to calculate a SHA-224 message\n\
    \   digest as it does a SHA-256 message digest, it is suggested that\n   RSA-SHA256\
    \ be used in preference to RSA-SHA224 where possible.\n"
- title: 2.4.  Minimal Canonicalization
  contents:
  - "2.4.  Minimal Canonicalization\n   Thus far, two independent interoperable implementations\
    \ of Minimal\n   Canonicalization have not been announced.  Therefore, when XML\n\
    \   Digital Signature was advanced along the Standards Track from\n   [RFC3075]\
    \ to [RFC3275], Minimal Canonicalization was dropped.\n   However, there is still\
    \ interest.  For its definition, see Section\n   6.5.1 of [RFC3075].\n   For reference,\
    \ its identifier remains:\n      http://www.w3.org/2000/09/xmldsig#minimal\n"
- title: 2.5.  Transform Algorithms
  contents:
  - "2.5.  Transform Algorithms\n   Note that all CanonicalizationMethod algorithms\
    \ can also be used as\n   transform algorithms.\n"
- title: 2.5.1.  XPointer
  contents:
  - "2.5.1.  XPointer\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#xptr\n\
    \   This transform algorithm takes an [XPointer] as an explicit\n   parameter.\
    \  An example of use is:\n   <Transform\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more/xptr\"\
    >\n      <XPointer\n         xmlns=\"http://www.w3.org/2001/04/xmldsig-more/xptr\"\
    >\n            xpointer(id(\"foo\")) xmlns(bar=http://foobar.example)\n      \
    \      xpointer(//bar:Zab[@Id=\"foo\"])\n      </XPointer>\n   </Transform>\n\
    \   Schema Definition:\n      <element name=\"XPointer\" type=\"string\"/>\n \
    \  DTD:\n      <!ELEMENT XPointer (#PCDATA) >\n   Input to this transform is an\
    \ octet stream (which is then parsed into\n   XML).\n   Output from this transform\
    \ is a node set; the results of the XPointer\n   are processed as defined in the\
    \ XMLDSIG specification [RFC3275] for a\n   same-document XPointer.\n"
- title: 2.6.  EncryptionMethod Algorithms
  contents:
  - "2.6.  EncryptionMethod Algorithms\n   This subsection gives identifiers and information\
    \ for several\n   EncryptionMethod Algorithms.\n"
- title: 2.6.1.  ARCFOUR Encryption Algorithm
  contents:
  - "2.6.1.  ARCFOUR Encryption Algorithm\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#arcfour\n\
    \   ARCFOUR is a fast, simple stream encryption algorithm that is\n   compatible\
    \ with RSA Security's RC4 algorithm [RC4].  An example\n   EncryptionMethod element\
    \ using ARCFOUR is\n   <EncryptionMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#arcfour\"\
    >\n      <KeySize>40</KeySize>\n   </EncryptionMethod>\n   Note that Arcfour makes\
    \ use of the generic KeySize parameter\n   specified and defined in [XMLENC11].\n"
- title: 2.6.2.  Camellia Block Encryption
  contents:
  - "2.6.2.  Camellia Block Encryption\n   Identifiers:\n      http://www.w3.org/2001/04/xmldsig-more#camellia128-cbc\n\
    \      http://www.w3.org/2001/04/xmldsig-more#camellia192-cbc\n      http://www.w3.org/2001/04/xmldsig-more#camellia256-cbc\n\
    \   Camellia is a block cipher with the same interface as the AES\n   [Camellia]\
    \ [RFC3713]; it has a 128-bit block size and 128-, 192-, and\n   256-bit key sizes.\
    \  In XML encryption, Camellia is used in the same\n   way as the AES: it is used\
    \ in the Cipher Block Chaining (CBC) mode\n   with a 128-bit initialization vector\
    \ (IV).  The resulting cipher text\n   is prefixed by the IV.  If included in\
    \ XML output, it is then base64\n   encoded.  An example Camellia EncryptionMethod\
    \ is as follows:\n   <EncryptionMethod\n      Algorithm=\n      \"http://www.w3.org/2001/04/xmldsig-more#camellia128-cbc\"\
    \n   />\n"
- title: 2.6.3.  Camellia Key Wrap
  contents:
  - "2.6.3.  Camellia Key Wrap\n   Identifiers:\n      http://www.w3.org/2001/04/xmldsig-more#kw-camellia128\n\
    \      http://www.w3.org/2001/04/xmldsig-more#kw-camellia192\n      http://www.w3.org/2001/04/xmldsig-more#kw-camellia256\n\
    \   Camellia [Camellia] [RFC3713] key wrap is identical to the AES key\n   wrap\
    \ algorithm [RFC3394] specified in the XML Encryption standard\n   with \"AES\"\
    \ replaced by \"Camellia\".  As with AES key wrap, the check\n   value is 0xA6A6A6A6A6A6A6A6.\n\
    \   The algorithm is the same whatever the size of the Camellia key used\n   in\
    \ wrapping, called the \"key encrypting key\" or \"KEK\".  If Camellia\n   is\
    \ supported, it is particularly suggested that wrapping 128-bit keys\n   with\
    \ a 128-bit KEK and wrapping 256-bit keys with a 256-bit KEK be\n   supported.\n\
    \   An example of use is:\n   <EncryptionMethod\n      Algorithm=\n      \"http://www.w3.org/2001/04/xmldsig-more#kw-camellia128\"\
    \n   />\n"
- title: 2.6.4.  PSEC-KEM
  contents:
  - "2.6.4.  PSEC-KEM\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#psec-kem\n\
    \   The PSEC-KEM algorithm, specified in [18033-2], is a key\n   encapsulation\
    \ mechanism using elliptic curve encryption.\n   An example of use is:\n   <EncryptionMethod\n\
    \      Algorithm=\"http://www.w3.org/2001/04/xmlenc#psec-kem\">\n      <ECParameters>\n\
    \         <Version>version</Version>\n         <FieldID>id</FieldID>\n       \
    \  <Curve>curve</Curve>\n         <Base>base</Base>\n         <Order>order</Order>\n\
    \         <Cofactor>cofactor</Cofactor>\n      </ECParameters>\n   </EncryptionMethod>\n\
    \   See [18033-2] for information on the parameters above.\n"
- title: 2.6.5.  SEED Block Encryption
  contents:
  - "2.6.5.  SEED Block Encryption\n   Identifier:\n      http://www.w3.org/2007/05/xmldsig-more#seed128-cbc\n\
    \   SEED [RFC4269] is a 128-bit block size with 128-bit key sizes.  In\n   XML\
    \ Encryption, SEED can be used in the Cipher Block Chaining (CBC)\n   mode with\
    \ a 128-bit initialization vector (IV).  The resulting cipher\n   text is prefixed\
    \ by the IV.  If included in XML output, it is then\n   base64 encoded.\n   An\
    \ example SEED EncryptionMethod is as follows:\n   <EncryptionMethod\n      Algorithm=\"\
    http://www.w3.org/2007/05/xmldsig-more#seed128-cbc\" />\n"
- title: 2.6.6.  SEED Key Wrap
  contents:
  - "2.6.6.  SEED Key Wrap\n   Identifier:\n      http://www.w3.org/2007/05/xmldsig-more#kw-seed128\n\
    \   Key wrapping with SEED is identical to Section 2.2.1 of [RFC3394]\n   with\
    \ \"AES\" replaced by \"SEED\".  The algorithm is specified in\n   [RFC4010].\
    \  The implementation of SEED is optional.  The default\n   initial value is 0xA6A6A6A6A6A6A6A6.\n\
    \   An example of use is:\n   <EncryptionMethod\n      Algorithm=\n      \"http://www.w3.org/2007/05/xmldsig-more#kw-seed128\"\
    \n   />\n"
- title: 3.  KeyInfo
  contents:
  - "3.  KeyInfo\n   In Section 3.1 below a new KeyInfo element child is specified,\
    \ while\n   in Section 3.2 additional KeyInfo Type values for use in\n   RetrievalMethod\
    \ are specified.\n"
- title: '3.1.  PKCS #7 Bag of Certificates and CRLs'
  contents:
  - "3.1.  PKCS #7 Bag of Certificates and CRLs\n   A PKCS #7 [RFC2315] \"signedData\"\
    \ can also be used as a bag of\n   certificates and/or certificate revocation\
    \ lists (CRLs).  The\n   PKCS7signedData element is defined to accommodate such\
    \ structures\n   within KeyInfo.  The binary PKCS #7 structure is base64 [RFC2045]\n\
    \   encoded.  Any signer information present is ignored.  The following\n   is\
    \ an example [RFC3092], eliding the base64 data:\n   <foo:PKCS7signedData\n  \
    \    xmlns:foo=\"http://www.w3.org/2001/04/xmldsig-more\">\n      ...\n   </foo:PKCS7signedData>\n"
- title: 3.2.  Additional RetrievalMethod Type Values
  contents:
  - "3.2.  Additional RetrievalMethod Type Values\n   The Type attribute of RetrievalMethod\
    \ is an optional identifier for\n   the type of data to be retrieved.  The result\
    \ of dereferencing a\n   RetrievalMethod reference for all KeyInfo types with\
    \ an XML structure\n   is an XML element or document with that element as the\
    \ root.  The\n   various \"raw\" key information types return a binary value.\
    \  Thus,\n   they require a Type attribute because they are not unambiguously\n\
    \   parsable.\n   Identifiers:\n      http://www.w3.org/2001/04/xmldsig-more#KeyName\n\
    \      http://www.w3.org/2001/04/xmldsig-more#KeyValue\n      http://www.w3.org/2001/04/xmldsig-more#PKCS7signedData\n\
    \      http://www.w3.org/2001/04/xmldsig-more#rawPGPKeyPacket\n      http://www.w3.org/2001/04/xmldsig-more#rawPKCS7signedData\n\
    \      http://www.w3.org/2001/04/xmldsig-more#rawSPKISexp\n      http://www.w3.org/2001/04/xmldsig-more#rawX509CRL\n\
    \      http://www.w3.org/2001/04/xmldsig-more#RetrievalMethod\n"
- title: 4.  Indexes
  contents:
  - "4.  Indexes\n   The following subsections provide an index by URI and by fragment\n\
    \   identifier (the portion of the URI after \"#\") of the algorithm and\n   KeyInfo\
    \ URIs defined in this document and in the standards (plus the\n   one KeyInfo\
    \ child element name defined in this document).  The\n   \"Sec/Doc\" column has\
    \ the section of this document or, if not\n   specified in this document, the\
    \ document where the item is specified.\n   See also [XMLSECXREF].\n"
- title: 4.1.  Fragment Index
  contents:
  - "4.1.  Fragment Index\n   The initial \"http://www.w3.org/\" part of the URI is\
    \ not included\n   below.  The first six entries have a null fragment identifier\
    \ or no\n   fragment identifier.\n   Fragment            URI                 \
    \                  Sec/Doc\n   ---------           ----                      \
    \           --------\n                       2002/06/xmldsig-filter2         \
    \       [XPATH]\n                       2006/12/xmlc12n11#                   [CANON11]\n\
    \                       TR/1999/REC-xslt-19991116               [XSLT]\n     \
    \                  TR/1999/REC-xpath-19991116             [XPATH]\n          \
    \             TR/2001/06/xml-exc-c14n#              [XCANON]\n               \
    \        TR/2001/REC-xml-c14n-20010315        [CANON10]\n                    \
    \   TR/2001/REC-xmlschema-1-20010502      [Schema]\n   aes128-cbc          2001/04/xmlenc#aes128-cbc\
    \           [XMLENC11]\n   aes128-gcm          2009/xmlenc11#aes128-gcm      \
    \      [XMLENC11]\n   aes192-cbc          2001/04/xmlenc#aes192-cbc          \
    \ [XMLENC11]\n   aes192-gcm          2009/xmlenc11#aes192-gcm            [XMLENC11]\n\
    \   aes256-cbc          2001/04/xmlenc#aes256-cbc           [XMLENC11]\n   aes256-gcm\
    \          2009/xmlenc11#aes256-gcm            [XMLENC11]\n   arcfour        \
    \     2001/04/xmldsig-more#arcfour            2.6.1\n   base64              2000/09/xmldsig#base64\
    \               [RFC3275]\n   camellia128-cbc     2001/04/xmldsig-more#camellia128-cbc\
    \    2.6.2\n   camellia192-cbc     2001/04/xmldsig-more#camellia192-cbc    2.6.2\n\
    \   camellia256-cbc     2001/04/xmldsig-more#camellia256-cbc    2.6.2\n   ConcatKDF\
    \           2009/xmlenc11#ConcatKDF             [XMLENC11]\n   decrypt#XML   \
    \      2002/07/decrypt#XML                  [DECRYPT]\n   decrypt#Binary     \
    \ 2002/07/decrypt#Binary               [DECRYPT]\n   DEREncodedKeyValue  2009/xmldsig11#DEREncodedKeyValue\
    \  [XMLDSIG11]\n   dh                  2001/04/xmlenc#dh                   [XMLENC11]\n\
    \   dh-es               2009/xmlenc11#dh-es                 [XMLENC11]\n   dsa-sha1\
    \            2000/09/xmldsig#dsa-sha1             [RFC3275]\n   dsa-sha256   \
    \       2009/xmldsig11#dsa-sha256          [XMLDSIG11]\n   DSAKeyValue       \
    \  2000/09/xmldsig#DSAKeyValue        [XMLDSIG11]\n   ECDH-ES             2009/xmlenc11#ECDH-ES\
    \               [XMLENC11]\n   ecdsa-ripemd160     2007/05/xmldsig-more#ecdsa-ripemd160\
    \    2.3.6\n   ecdsa-sha1          2001/04/xmldsig-more#ecdsa-sha1         2.3.6\n\
    \   ecdsa-sha224        2001/04/xmldsig-more#ecdsa-sha224       2.3.6\n   ecdsa-sha256\
    \        2001/04/xmldsig-more#ecdsa-sha256       2.3.6\n   ecdsa-sha384      \
    \  2001/04/xmldsig-more#ecdsa-sha384       2.3.6\n   ecdsa-sha512        2001/04/xmldsig-more#ecdsa-sha512\
    \       2.3.6\n   ecdsa-whirlpool     2007/05/xmldsig-more#ecdsa-whirlpool   \
    \ 2.3.5\n   ecies-kem           2010/xmlsec-ghc#ecies-kem            [GENERIC]\n\
    \   ECKeyValue          2009/xmldsig11#ECKeyValue          [XMLDSIG11]\n   enveloped-signature\
    \ 2000/09/xmldsig#enveloped-signature  [RFC3275]\n   esign-sha1          2001/04/xmldsig-more#esign-sha1\
    \         2.3.7\n   esign-sha224        2001/04/xmldsig-more#esign-sha224    \
    \   2.3.7\n   esign-sha256        2001/04/xmldsig-more#esign-sha256       2.3.7\n\
    \   esign-sha384        2001/04/xmldsig-more#esign-sha384       2.3.7\n   esign-sha512\
    \        2001/04/xmldsig-more#esign-sha512       2.3.7\n   generic-hybrid    \
    \  2010/xmlsec-ghc#generic-hybrid       [GENERIC]\n   hmac-md5            2001/04/xmldsig-more#hmac-md5\
    \           2.2.1\n   hmac-ripemd160      2001/04/xmldsig-more#hmac-ripemd160\
    \     2.2.3\n   hmac-sha1           2000/09/xmldsig#hmac-sha1            [RFC3275]\n\
    \   hmac-sha224         2001/04/xmldsig-more#hmac-sha224        2.2.2\n   hmac-sha256\
    \         2001/04/xmldsig-more#hmac-sha256        2.2.2\n   hmac-sha384      \
    \   2001/04/xmldsig-more#hmac-sha384        2.2.2\n   hmac-sha512         2001/04/xmldsig-more#hmac-sha512\
    \        2.2.2\n   KeyName             2001/04/xmldsig-more#KeyName          \
    \  3.2\n   KeyValue            2001/04/xmldsig-more#KeyValue           3.2\n \
    \  kw-aes128           2001/04/xmlenc#kw-aes128            [XMLENC11]\n   kw-aes128-pad\
    \       2009/xmlenc11#kw-aes-128-pad        [XMLENC11]\n   kw-aes192         \
    \  2001/04/xmlenc#kw-aes192            [XMLENC11]\n   kw-aes192-pad       2009/xmlenc11#kw-aes-192-pad\
    \        [XMLENC11]\n   kw-aes256           2001/04/xmlenc#kw-aes256         \
    \   [XMLENC11]\n   kw-aes256-pad       2009/xmlenc11#kw-aes-256-pad        [XMLENC11]\n\
    \   kw-camellia128      2001/04/xmldsig-more#kw-camellia128     2.6.3\n   kw-camellia192\
    \      2001/04/xmldsig-more#kw-camellia192     2.6.3\n   kw-camellia256      2001/04/xmldsig-more#kw-camellia256\
    \     2.6.3\n   kw-seed128          2007/05/xmldsig-more#kw-seed128         2.6.6\n\
    \   md2-rsa-MGF1        2007/05/xmldsig-more#md2-rsa-MGF1       2.3.10\n   md5\
    \                 2001/04/xmldsig-more#md5                2.1.1\n   md5-rsa-MGF1\
    \        2007/05/xmldsig-more#md5-rsa-MGF1       2.3.10\n   MGF1             \
    \   2007/05/xmldsig-more#MGF1               2.3.9\n   mgf1sha1            2009/xmlenc11#mgf1sha1\
    \              [XMLENC11]\n   mgf1sha224          2009/xmlenc11#mgf1sha224   \
    \         [XMLENC11]\n   mgf1sha256          2009/xmlenc11#mgf1sha256        \
    \    [XMLENC11]\n   mgf1sha384          2009/xmlenc11#mgf1sha384            [XMLENC11]\n\
    \   mgf1sha512          2009/xmlenc11#mgf1sha512            [XMLENC11]\n   MgmtData\
    \            2000/09/xmldsig#MgmtData           [XMLDSIG11]\n   minimal      \
    \       2000/09/xmldsig#minimal                 2.4\n   pbkdf2              2009/xmlenc11#pbkdf2\
    \                [XMLENC11]\n   PGPData             2000/09/xmldsig#PGPData  \
    \          [XMLDSIG11]\n   PKCS7signedData     2001/04/xmldsig-more#PKCS7signedData\
    \    3.1\n   PKCS7signedData     2001/04/xmldsig-more#PKCS7signedData    3.2\n\
    \   psec-kem            2001/04/xmldsig-more#psec-kem           2.6.4\n   rawPGPKeyPacket\
    \     2001/04/xmldsig-more#rawPGPKeyPacket    3.2\n   rawPKCS7signedData  2001/04/xmldsig-more#rawPKCS7signedData\
    \ 3.2\n   rawSPKISexp         2001/04/xmldsig-more#rawSPKISexp        3.2\n  \
    \ rawX509Certificate  2000/09/xmldsig#rawX509Certificate   [RFC3275]\n   rawX509CRL\
    \          2001/04/xmldsig-more#rawX509CRL         3.2\n   RetrievalMethod   \
    \  2001/04/xmldsig-more#RetrievalMethod    3.2\n   ripemd128-rsa-MGF1  2007/05/xmldsig-more#ripemd128-rsa-MGF1\
    \ 2.3.10\n   ripemd160           2001/04/xmlenc#ripemd160            [XMLENC11]\n\
    \   ripemd160-rsa-MGF1  2007/05/xmldsig-more#ripemd160-rsa-MGF1 2.3.10\n   rsa-1_5\
    \             2001/04/xmlenc#rsa-1_5              [XMLENC11]\n   rsa-md5     \
    \        2001/04/xmldsig-more#rsa-md5            2.3.1\n   rsa-oaep          \
    \  2009/xmlenc11#rsa-oaep              [XMLENC11]\n   rsa-oaep-mgf1p      2001/04/xmlenc#rsa-oaep-mgf1p\
    \       [XMLENC11]\n   rsa-pss             2007/05/xmldsig-more#rsa-pss      \
    \      2.3.9\n   rsa-ripemd160       2001/04/xmldsig-more#rsa-ripemd160      2.3.5\n\
    \   rsa-sha1            2000/09/xmldsig#rsa-sha1             [RFC3275]\n   rsa-sha224\
    \          2007/05/xmldsig-more#rsa-sha224         2.3.11\n   rsa-sha256     \
    \     2001/04/xmldsig-more#rsa-sha256         2.3.2\n   rsa-sha384          2001/04/xmldsig-more#rsa-sha384\
    \         2.3.3\n   rsa-sha512          2001/04/xmldsig-more#rsa-sha512      \
    \   2.3.4\n   rsa-whirlpool       2007/05/xmldsig-more#rsa-whirlpool      2.3.5\n\
    \   rsaes-kem           2010/xmlsec-ghc#rsaes-kem            [GENERIC]\n   RSAKeyValue\
    \         2000/09/xmldsig#RSAKeyValue        [XMLDSIG11]\n   seed128-cbc     \
    \    2007/05/xmldsig-more#seed128-cbc        2.6.5\n   sha1                2000/09/xmldsig#sha1\
    \                 [RFC3275]\n   sha1-rsa-MGF1       2007/05/xmldsig-more#sha1-rsa-MGF1\
    \      2.3.10\n   sha224              2001/04/xmldsig-more#sha224            \
    \ 2.1.2\n   sha224-rsa-MGF1     2007/05/xmldsig-more#sha224-rsa-MGF1    2.3.10\n\
    \   sha256              2001/04/xmlenc#sha256               [XMLENC11]\n   sha256-rsa-MGF1\
    \     2007/05/xmldsig-more#sha256-rsa-MGF1    2.3.10\n   sha3-224            2007/05/xmldsig-more#sha3-224\
    \           2.1.5\n   sha3-224-rsa-MGF1   2007/05/xmldsig-more#sha3-224-rsa-MGF1\
    \  2.3.10\n   sha3-256            2007/05/xmldsig-more#sha3-256           2.1.5\n\
    \   sha3-256-rsa-MGF1   2007/05/xmldsig-more#sha3-256-rsa-MGF1  2.3.10\n   sha3-384\
    \            2007/05/xmldsig-more#sha3-384           2.1.5\n   sha3-384-rsa-MGF1\
    \   2007/05/xmldsig-more#sha3-384-rsa-MGF1  2.3.10\n   sha3-512            2007/05/xmldsig-more#sha3-512\
    \           2.1.5\n   sha3-512-rsa-MGF1   2007/05/xmldsig-more#sha3-512-rsa-MGF1\
    \  2.3.10\n   sha384              2001/04/xmldsig-more#sha384             2.1.3\n\
    \   sha384-rsa-MGF1     2007/05/xmldsig-more#sha384-rsa-MGF1    2.3.10\n   sha512\
    \              2001/04/xmlenc#sha512               [XMLENC11]\n   sha512-rsa-MGF1\
    \     2007/05/xmldsig-more#sha512-rsa-MGF1    2.3.10\n   SPKIData            2000/09/xmldsig#SPKIData\
    \           [XMLDSIG11]\n   tripledes-cbc       2001/04/xmlenc#tripledes-cbc \
    \       [XMLENC11]\n   whirlpool           2007/05/xmldsig-more#whirlpool    \
    \      2.1.4\n   whirlpool-rsa-MGF1  2007/05/xmldsig-more#whirlpool-rsa-MGF1 2.3.10\n\
    \   WithComments        2006/12/xmlc14n11#WithComments       [CANON11]\n   WithComments\
    \        TR/2001/06/xml-exc-c14n#WithComments  [XCANON]\n   WithComments     \
    \   TR/2001/REC-xml-c14n-20010315#WithComments\n                             \
    \                               [CANON10]\n   X509Data            2000/09/xmldsig#X509Data\
    \           [XMLDSIG11]\n   xptr                2001/04/xmldsig-more#xptr    \
    \           2.5.1\n   The initial \"http://www.w3.org/\" part of the URI is not\
    \ included\n   above.\n"
- title: 4.2.  URI Index
  contents:
  - "4.2.  URI Index\n   The initial \"http://www.w3.org/\" part of the URI is not\
    \ included\n   below.\n   URI                                 Sec/Doc   Type\n\
    \   ----                                --------  -----\n   2000/09/xmldsig#base64\
    \              [RFC3275]  Transform\n   2000/09/xmldsig#DSAKeyValue         [RFC3275]\
    \  Retrieval type\n   2000/09/xmldsig#dsa-sha1            [RFC3275]  SignatureMethod\n\
    \   2000/09/xmldsig#enveloped-signature [RFC3275]  Transform\n   2000/09/xmldsig#hmac-sha1\
    \           [RFC3275]  SignatureMethod\n   2000/09/xmldsig#MgmtData          \
    \  [RFC3275]  Retrieval type\n   2000/09/xmldsig#minimal                2.4  \
    \   Canonicalization\n   2000/09/xmldsig#PGPData             [RFC3275]  Retrieval\
    \ type\n   2000/09/xmldsig#rawX509Certificate  [RFC3275]  Retrieval type\n   2000/09/xmldsig#rsa-sha1\
    \            [RFC3275]  SignatureMethod\n   2000/09/xmldsig#RSAKeyValue      \
    \   [RFC3275]  Retrieval type\n   2000/09/xmldsig#sha1                [RFC3275]\
    \  DigestAlgorithm\n   2000/09/xmldsig#SPKIData            [RFC3275]  Retrieval\
    \ type\n   2000/09/xmldsig#X509Data            [RFC3275]  Retrieval type\n   2001/04/xmldsig-more#arcfour\
    \           2.6.1   EncryptionMethod\n   2001/04/xmldsig-more#camellia128-cbc\
    \   2.6.2   EncryptionMethod\n   2001/04/xmldsig-more#camellia192-cbc   2.6.2\
    \   EncryptionMethod\n   2001/04/xmldsig-more#camellia256-cbc   2.6.2   EncryptionMethod\n\
    \   2001/04/xmldsig-more#ecdsa-sha1        2.3.6   SignatureMethod\n   2001/04/xmldsig-more#ecdsa-sha224\
    \      2.3.6   SignatureMethod\n   2001/04/xmldsig-more#ecdsa-sha256      2.3.6\
    \   SignatureMethod\n   2001/04/xmldsig-more#ecdsa-sha384      2.3.6   SignatureMethod\n\
    \   2001/04/xmldsig-more#ecdsa-sha512      2.3.6   SignatureMethod\n   2001/04/xmldsig-more#esign-sha1\
    \        2.3.7   SignatureMethod\n   2001/04/xmldsig-more#esign-sha224      2.3.7\
    \   SignatureMethod\n   2001/04/xmldsig-more#esign-sha256      2.3.7   SignatureMethod\n\
    \   2001/04/xmldsig-more#esign-sha384      2.3.7   SignatureMethod\n   2001/04/xmldsig-more#esign-sha512\
    \      2.3.7   SignatureMethod\n   2001/04/xmldsig-more#hmac-md5          2.2.1\
    \   SignatureMethod\n   2001/04/xmldsig-more#hmac-ripemd160    2.2.3   SignatureMethod\n\
    \   2001/04/xmldsig-more#hmac-sha224       2.2.2   SignatureMethod\n   2001/04/xmldsig-more#hmac-sha256\
    \       2.2.2   SignatureMethod\n   2001/04/xmldsig-more#hmac-sha384       2.2.2\
    \   SignatureMethod\n   2001/04/xmldsig-more#hmac-sha512       2.2.2   SignatureMethod\n\
    \   2001/04/xmldsig-more#KeyName           3.2     Retrieval type\n   2001/04/xmldsig-more#KeyValue\
    \          3.2     Retrieval type\n   2001/04/xmldsig-more#kw-camellia128    2.6.3\
    \   EncryptionMethod\n   2001/04/xmldsig-more#kw-camellia192    2.6.3   EncryptionMethod\n\
    \   2001/04/xmldsig-more#kw-camellia256    2.6.3   EncryptionMethod\n   2001/04/xmldsig-more#md5\
    \               2.1.1   DigestAlgorithm\n   2001/04/xmldsig-more#PKCS7signedData\
    \   3.2     Retrieval type\n   2001/04/xmldsig-more#psec-kem          2.6.4  \
    \ EncryptionMethod\n   2001/04/xmldsig-more#rawPGPKeyPacket   3.2     Retrieval\
    \ type\n   2001/04/xmldsig-more#rawPKCS7signedData 3.2    Retrieval type\n   2001/04/xmldsig-more#rawSPKISexp\
    \       3.2     Retrieval type\n   2001/04/xmldsig-more#rawX509CRL        3.2\
    \     Retrieval type\n   2001/04/xmldsig-more#RetrievalMethod   3.2     Retrieval\
    \ type\n   2001/04/xmldsig-more#rsa-md5           2.3.1   SignatureMethod\n  \
    \ 2001/04/xmldsig-more#rsa-sha256        2.3.2   SignatureMethod\n   2001/04/xmldsig-more#rsa-sha384\
    \        2.3.3   SignatureMethod\n   2001/04/xmldsig-more#rsa-sha512        2.3.4\
    \   SignatureMethod\n   2001/04/xmldsig-more#rsa-ripemd160     2.3.5   SignatureMethod\n\
    \   2001/04/xmldsig-more#sha224            2.1.2   DigestAlgorithm\n   2001/04/xmldsig-more#sha384\
    \            2.1.3   DigestAlgorithm\n   2001/04/xmldsig-more#xptr           \
    \   2.5.1   Transform\n   2001/04/xmldsig-more#PKCS7signedData   3.1     KeyInfo\
    \ child\n   2001/04/xmlenc#aes128-cbc          [XMLENC11]  EncryptionMethod\n\
    \   2001/04/xmlenc#aes192-cbc          [XMLENC11]  EncryptionMethod\n   2001/04/xmlenc#aes256-cbc\
    \          [XMLENC11]  EncryptionMethod\n   2001/04/xmlenc#dh                \
    \  [XMLENC11]  AgreementMethod\n   2001/04/xmlenc#kw-aes128           [XMLENC11]\
    \  EncryptionMethod\n   2001/04/xmlenc#kw-aes192           [XMLENC11]  EncryptionMethod\n\
    \   2001/04/xmlenc#kw-aes256           [XMLENC11]  EncryptionMethod\n   2001/04/xmlenc#ripemd160\
    \           [XMLENC11]  DigestAlgorithm\n   2001/04/xmlenc#rsa-1_5           \
    \  [XMLENC11]  EncryptionMethod\n   2001/04/xmlenc#rsa-oaep-mgf1p      [XMLENC11]\
    \  EncryptionMethod\n   2001/04/xmlenc#sha256              [XMLENC11]  DigestAlgorithm\n\
    \   2001/04/xmlenc#sha512              [XMLENC11]  DigestAlgorithm\n   2001/04/xmlenc#tripledes-cbc\
    \       [XMLENC11]  EncryptionMethod\n   2002/06/xmldsig-filter2             \
    \  [XPATH]  Transform\n   2002/07/decrypt#XML                 [DECRYPT]  Transform\n\
    \   2002/07/decrypt#Binary              [DECRYPT]  Transform\n   2006/12/xmlc12n11#\
    \                  [CANON11]  Canonicalization\n   2006/12/xmlc14n11#WithComments\
    \      [CANON11]  Canonicalization\n   2007/05/xmldsig-more#ecdsa-ripemd160  \
    \ 2.3.6   SignatureMethod\n   2007/05/xmldsig-more#ecdsa-whirlpool   2.3.5   SignatureMethod\n\
    \   2007/05/xmldsig-more#kw-seed128        2.6.6   EncryptionMethod\n   2007/05/xmldsig-more#md2-rsa-MGF1\
    \      2.3.10  SignatureMethod\n   2007/05/xmldsig-more#md5-rsa-MGF1      2.3.10\
    \  SignatureMethod\n   2007/05/xmldsig-more#MGF1              2.3.9   SignatureMethod\n\
    \   2007/05/xmldsig-more#ripemd128-rsa-MGF1 2.3.10 SignatureMethod\n   2007/05/xmldsig-more#ripemd160-rsa-MGF1\
    \ 2.3.10 SignatureMethod\n   2007/05/xmldsig-more#rsa-pss           2.3.9   SignatureMethod\n\
    \   2007/05/xmldsig-more#rsa-sha224        2.3.11  SignatureMethod\n   2007/05/xmldsig-more#rsa-whirlpool\
    \     2.3.5   SignatureMethod\n   2007/05/xmldsig-more#seed128-cbc       2.6.5\
    \   EncryptionMethod\n   2007/05/xmldsig-more#sha1-rsa-MGF1     2.3.10  SignatureMethod\n\
    \   2007/05/xmldsig-more#sha224-rsa-MGF1   2.3.10  SignatureMethod\n   2007/05/xmldsig-more#sha256-rsa-MGF1\
    \   2.3.10  SignatureMethod\n   2007/05/xmldsig-more#sha3-224          2.1.5 \
    \  DigestAlgorithm\n   2007/05/xmldsig-more#sha3-224-rsa-MGF1 2.3.10  SignatureMethod\n\
    \   2007/05/xmldsig-more#sha3-256          2.1.5   DigestAlgorithm\n   2007/05/xmldsig-more#sha3-256-rsa-MGF1\
    \ 2.3.10  SignatureMethod\n   2007/05/xmldsig-more#sha3-384          2.1.5   DigestAlgorithm\n\
    \   2007/05/xmldsig-more#sha3-384-rsa-MGF1 2.3.10  SignatureMethod\n   2007/05/xmldsig-more#sha3-512\
    \          2.1.5   DigestAlgorithm\n   2007/05/xmldsig-more#sha3-512-rsa-MGF1\
    \ 2.3.10  SignatureMethod\n   2007/05/xmldsig-more#sha384-rsa-MGF1   2.3.10  SignatureMethod\n\
    \   2007/05/xmldsig-more#sha512-rsa-MGF1   2.3.10  SignatureMethod\n   2007/05/xmldsig-more#whirlpool\
    \         2.1.4   DigestAlgorithm\n   2007/05/xmldsig-more#whirlpool-rsa-MGF1\
    \ 2.3.10 SignatureMethod\n   2009/xmlenc11#kw-aes-128-pad       [XMLENC11]  EncryptionMethod\n\
    \   2009/xmlenc11#kw-aes-192-pad       [XMLENC11]  EncryptionMethod\n   2009/xmlenc11#kw-aes-256-pad\
    \       [XMLENC11]  EncryptionMethod\n   2009/xmldsig11#dsa-sha256         [XMLDSIG11]\
    \  SignatureMethod\n   2009/xmldsig11#ECKeyValue         [XMLDSIG11]  Retrieval\
    \ type\n   2009/xmldsig11#DEREncodedKeyValue [XMLDSIG11]  Retrieval type\n   2009/xmlenc11#aes128-gcm\
    \           [XMLENC11]  EncryptionMethod\n   2009/xmlenc11#aes192-gcm        \
    \   [XMLENC11]  EncryptionMethod\n   2009/xmlenc11#aes256-gcm           [XMLENC11]\
    \  EncryptionMethod\n   2009/xmlenc11#ConcatKDF            [XMLENC11]  EncryptionMethod\n\
    \   2009/xmlenc11#mgf1sha1             [XMLENC11]  SignatureMethod\n   2009/xmlenc11#mgf1sha224\
    \           [XMLENC11]  SignatureMethod\n   2009/xmlenc11#mgf1sha256         \
    \  [XMLENC11]  SignatureMethod\n   2009/xmlenc11#mgf1sha384           [XMLENC11]\
    \  SignatureMethod\n   2009/xmlenc11#mgf1sha512           [XMLENC11]  SignatureMethod\n\
    \   2009/xmlenc11#pbkdf2               [XMLENC11]  EncryptionMethod\n   2009/xmlenc11#rsa-oaep\
    \             [XMLENC11]  EncryptionMethod\n   2009/xmlenc11#ECDH-ES         \
    \     [XMLENC11]  EncryptionMethod\n   2009/xmlenc11#dh-es                [XMLENC11]\
    \  EncryptionMethod\n   2010/xmlsec-ghc#generic-hybrid      [GENERIC]  Generic\
    \ Hybrid\n   2010/xmlsec-ghc#rsaes-kem           [GENERIC]  Generic Hybrid\n \
    \  2010/xmlsec-ghc#ecies-kem           [GENERIC]  Generic Hybrid\n   TR/1999/REC-xpath-19991116\
    \            [XPATH]  Transform\n   TR/1999/REC-xslt-19991116              [XSLT]\
    \  Transform\n   TR/2001/06/xml-exc-c14n#             [XCANON]  Canonicalization\n\
    \   TR/2001/06/xml-exc-c14n#WithComments [XCANON]  Canonicalization\n   TR/2001/REC-xml-c14n-20010315\
    \       [CANON10]  Canonicalization\n   TR/2001/REC-xml-c14n-20010315#WithComments\n\
    \                                       [CANON10]  Canonicalization\n   TR/2001/REC-xmlschema-1-20010502\
    \     [Schema]  Transform\n   The initial \"http://www.w3.org/\" part of the URI\
    \ is not included\n   above.\n"
- title: 5.  Allocation Considerations
  contents:
  - "5.  Allocation Considerations\n   W3C and IANA allocation considerations are\
    \ given below.\n"
- title: 5.1.  W3C Allocation Considerations
  contents:
  - "5.1.  W3C Allocation Considerations\n   As it is easy for people to construct\
    \ their own unique URIs [RFC3986]\n   and, if appropriate, to obtain a URI from\
    \ the W3C, it is not intended\n   that any additional \"http://www.w3.org/2007/05/xmldsig-more#\"\
    \ URIs be\n   created beyond those enumerated in this RFC.  (W3C Namespace\n \
    \  stability rules prohibit the creation of new URIs under\n   \"http://www.w3.org/2000/09/xmldsig#\"\
    \ and URIs under\n   \"http://www.w3.org/2001/04/xmldsig-more#\" were frozen with\
    \ the\n   publication of [RFC4051].)\n   An \"xmldsig-more\" URI does not imply\
    \ any official W3C or IETF status\n   for these algorithms or identifiers nor\
    \ does it imply that they are\n   only useful in digital signatures.  Currently,\
    \ dereferencing such\n   URIs may or may not produce a temporary placeholder document.\n\
    \   Permission to use these URI prefixes has been given by the W3C.\n"
- title: 5.2.  IANA Considerations
  contents:
  - "5.2.  IANA Considerations\n   IANA has established a registry entitled \"XML\
    \ Security URIs\".  The\n   initial contents correspond to Section 4.2 of this\
    \ document with each\n   section number in the \"Sec/Doc\" column augmented with\
    \ a reference to\n   this RFC (for example, \"2.6.4\" means \"[RFC6931], Section\
    \ 2.6.4\").\n   New entries, including new Types, will be added based on Expert\n\
    \   Review [RFC5226].  Criterion for inclusion are (1) documentation\n   sufficient\
    \ for interoperability of the algorithm or data type and the\n   XML syntax for\
    \ its representation and use and (2) sufficient\n   importance as normally indicated\
    \ by inclusion in (2a) an approved W3C\n   Note, Proposed Recommendation, or Recommendation\
    \ or (2b) an approved\n   IETF Standards Track document.  Typically, the registry\
    \ will\n   reference a W3C or IETF document specifying such XML syntax; that\n\
    \   document will either contain a more abstract description of the\n   algorithm\
    \ or data type or reference another document with a more\n   abstract description.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This RFC is concerned with documenting the URIs\
    \ that designate\n   algorithms and some data types used in connection with XML\
    \ security.\n   The security considerations vary widely with the particular\n\
    \   algorithms, and the general security considerations for XML security\n   are\
    \ outside of the scope of this document but appear in [XMLDSIG11],\n   [XMLENC11],\
    \ [CANON10], [CANON11], and [GENERIC].\n   [RFC6151] should be consulted before\
    \ considering the use of MD5 as a\n   DigestMethod or RSA-MD5 as a SignatureMethod.\n\
    \   See [RFC6194] for SHA-1 security considerations and [RFC6151] for MD5\n  \
    \ security considerations.\n   Additional security considerations are given in\
    \ connection with the\n   description of some algorithms in the body of this document.\n\
    \   Implementers should be aware that cryptographic algorithms become\n   weaker\
    \ with time.  As new cryptoanalysis techniques are developed and\n   computing\
    \ performance improves, the work factor to break a particular\n   cryptographic\
    \ algorithm will reduce.  Therefore, cryptographic\n   implementations should\
    \ be modular, allowing new algorithms to be\n   readily inserted.  That is, implementers\
    \ should be prepared for the\n   set of mandatory-to-implement algorithms to change\
    \ over time.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The contributions to this document by the following\
    \ people, listed in\n   alphabetic order, are gratefully acknowledged: Benoit\
    \ Claise, Adrian\n   Farrel, Stephen Farrell, Ernst Giessmann, Frederick Hirsch,\
    \ Bjoern\n   Hoehrmann, Russ Housley, Satoru Kanno, Charlie Kaufman, Konrad Lanz,\n\
    \   HwanJin Lee, Barry Leiba, Peter Lipp, Subramanian Moonesamy, Thomas\n   Roessler,\
    \ Hanseong Ryu, Peter Saint-Andre, and Sean Turner.\n   The following contributors\
    \ to [RFC4051], on which this document is\n   based, are gratefully acknowledged:\
    \ Glenn Adams, Merlin Hughs, Gregor\n   Karlinger, Brian LaMachia, Shiho Moriai,\
    \ Joseph Reagle, Russ Housley,\n   and Joel Halpern.\n"
- title: Appendix A.  Changes from RFC 4051
  contents:
  - "Appendix A.  Changes from RFC 4051\n   The following changes have been made in\
    \ RFC 4051 to produce this\n   document.\n   1.  Updated and added numerous RFC,\
    \ W3C, and Internet-Draft\n       references.\n   2.  Added #ecdsa-ripemd160,\
    \ #whirlpool, #ecdsa-whirlpool,\n       #rsa-whirlpool, #seed128-cbc, and #kw-seed128.\n\
    \   3.  Incorporated RFC 4051 errata [Errata191].\n   4.  Added URI and fragment\
    \ index sections.\n   5.  For MD5 and SHA-1, added references to [RFC6151] and\
    \ [RFC6194].\n   5.  Added SHA-3 / Keccak placeholder section including #sha3-224,\n\
    \       #sha3-256, #sha3-384, and #sha3-512.\n   6.  Added RSASSA-PSS sections\
    \ including #sha3-224-MGF1,\n       #sha3-256-MGF1, #sha3-384-MGF1, #sha3-512-MGF1,\
    \ #md2-rsa-MGF1,\n       #md5-rsa-MGF1, #sha1-rsa-MGF1, #sha224-rsa-MGF1,\n  \
    \     #sha256-rsa-MGF1, #sha384-rsa-MGF1, #sha512-rsa-MGF1,\n       #ripemd128-rsa-MGF1,\
    \ #ripemd160-rsa-MGF1, and\n       #whirlpool-rsa-MGF1.\n   7.  Added new URIs\
    \ from Canonical XML 1.1 and XML Encryption 1.1\n       including: #aes128-gcm,\
    \ #aes192-gcm, #aes256-gc, #ConcatKDF,\n       #pbkdf, #rsa-oaep, #ECDH-ES, and\
    \ #dh-es.\n   8.  Added acronym subsection.\n   9.  Added numerous URIs that are\
    \ specified in W3C XML Security\n       documents to the Indexes.  These do not\
    \ have sections in the body\n       of this document -- for example, those for\
    \ dsa-sha256, mgf1sha*,\n       decrypt#XML, and xmldsig-filter2.\n   10. Requested\
    \ establishment of an IANA registry.\n   11. Made various editorial changes.\n"
- title: Normative References
  contents:
  - "Normative References\n   [10118-3]     ISO, \"Information technology -- Security\
    \ techniques --\n                 Hash-functions -- Part 3: Dedicated hash-functions\"\
    ,\n                 ISO/IEC 10118-3:2004, 2004.\n   [18033-2]     ISO, \"Information\
    \ technology -- Security techniques --\n                 Encryption algorithms\
    \ -- Part 3: Asymmetric ciphers\",\n                 ISO/IEC 18033-2:2010, 2010.\n\
    \   [Camellia]    Aoki, K., Ichikawa, T., Matsui, M., Moriai, S.,\n          \
    \       Nakajima, J., and T. Tokita, \"Camellia: A 128-bit Block\n           \
    \      Cipher Suitable for Multiple Platforms - Design and\n                 Analysis\"\
    , in Selected Areas in Cryptography, 7th\n                 Annual International\
    \ Workshop, SAC 2000, August 2000,\n                 Proceedings, Lecture Notes\
    \ in Computer Science 2012,\n                 pp. 39-56, Springer-Verlag, 2001.\n\
    \   [FIPS180-4]   US National Institute of Science and Technology,\n         \
    \        \"Secure Hash Standard (SHS)\", FIPS 180-4, March 2012,\n           \
    \      <http://csrc.nist.gov/publications/fips/fips180-4/\n                 fips-180-4.pdf>.\n\
    \   [FIPS186-3]   US National Institute of Science and Technology,\n         \
    \        \"Digital Signature Standard (DSS)\", FIPS 186-3, June\n            \
    \     2009, <http://csrc.nist.gov/publications/fips/\n                 fips186-3/fips_186-3.pdf>.\n\
    \   [IEEEP1363a]  IEEE, \"Standard Specifications for Public Key\n           \
    \      Cryptography- Amendment 1: Additional Techniques\", IEEE\n            \
    \     1363a-2004, 2004.\n   [RC4]         Schneier, B., \"Applied Cryptography:\
    \ Protocols,\n                 Algorithms, and Source Code in C\", Second Edition,\
    \ John\n                 Wiley and Sons, New York, NY, 1996.\n   [RFC1321]   \
    \  Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC\n                 1321,\
    \ April 1992.\n   [RFC2045]     Freed, N. and N. Borenstein, \"Multipurpose Internet\n\
    \                 Mail Extensions (MIME) Part One: Format of Internet\n      \
    \           Message Bodies\", RFC 2045, November 1996.\n   [RFC2104]     Krawczyk,\
    \ H., Bellare, M., and R. Canetti, \"HMAC:\n                 Keyed-Hashing for\
    \ Message Authentication\", RFC 2104,\n                 February 1997.\n   [RFC2119]\
    \     Bradner, S., \"Key words for use in RFCs to Indicate\n                 Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2315]     Kaliski, B., \"PKCS\
    \ #7: Cryptographic Message Syntax\n                 Version 1.5\", RFC 2315,\
    \ March 1998.\n   [RFC3275]     Eastlake 3rd, D., Reagle, J., and D. Solo, \"\
    (Extensible\n                 Markup Language) XML-Signature Syntax and Processing\"\
    ,\n                 RFC 3275, March 2002.\n   [RFC3394]     Schaad, J. and R.\
    \ Housley, \"Advanced Encryption\n                 Standard (AES) Key Wrap Algorithm\"\
    , RFC 3394, September\n                 2002.\n   [RFC3447]     Jonsson, J. and\
    \ B. Kaliski, \"Public-Key Cryptography\n                 Standards (PKCS) #1:\
    \ RSA Cryptography Specifications\n                 Version 2.1\", RFC 3447, February\
    \ 2003.\n   [RFC3713]     Matsui, M., Nakajima, J., and S. Moriai, \"A Description\n\
    \                 of the Camellia Encryption Algorithm\", RFC 3713, April\n  \
    \               2004.\n   [RFC3986]     Berners-Lee, T., Fielding, R., and L.\
    \ Masinter,\n                 \"Uniform Resource Identifier (URI): Generic Syntax\"\
    ,\n                 STD 66, RFC 3986, January 2005.\n   [RFC4050]     Blake-Wilson,\
    \ S., Karlinger, G., Kobayashi, T., and Y.\n                 Wang, \"Using the\
    \ Elliptic Curve Signature Algorithm\n                 (ECDSA) for XML Digital\
    \ Signatures\", RFC 4050, April\n                 2005.\n   [RFC4055]     Schaad,\
    \ J., Kaliski, B., and R. Housley, \"Additional\n                 Algorithms and\
    \ Identifiers for RSA Cryptography for use\n                 in the Internet X.509\
    \ Public Key Infrastructure\n                 Certificate and Certificate Revocation\
    \ List (CRL)\n                 Profile\", RFC 4055, June 2005.\n   [RFC4269] \
    \    Lee, H., Lee, S., Yoon, J., Cheon, D., and J. Lee, \"The\n              \
    \   SEED Encryption Algorithm\", RFC 4269, December 2005.\n   [RFC5226]     Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing\n                 an IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC\n                 5226, May 2008.\n   [RFC6234]\
    \     Eastlake 3rd, D. and T. Hansen, \"US Secure Hash\n                 Algorithms\
    \ (SHA and SHA-based HMAC and HKDF)\", RFC\n                 6234, May 2011.\n\
    \   [X9.62]       American National Standards Institute, Accredited\n        \
    \         Standards Committee X9, \"Public Key Cryptography for\n            \
    \     the Financial Services Industry: The Elliptic Curve\n                 Digital\
    \ Signature Algorithm (ECDSA)\", ANSI X9.62:2005,\n                 2005.\n  \
    \ [XMLENC10]    Reagle, J. and D. Eastlake, \"XML Encryption Syntax and\n    \
    \             Processing\", W3C Recommendation, 10 December 2002,\n          \
    \       <http://www.w3.org/TR/2002/REC-xmlenc-core-20021210/>.\n   [XMLENC11]\
    \    Eastlake, D., Reagle, J., Hirsch, F., and T. Roessler,\n                \
    \ \"XML Encryption Syntax and Processing Version 1.1\", W3C\n                \
    \ Proposed Recommendation, 24 January 2013,\n                 <http://www.w3.org/TR/2013/PR-xmlenc-core1-20130124/>.\n\
    \   [XPointer]    Grosso, P., Maler, E., Marsh, J., and N. Walsh,\n          \
    \       \"XPointer Framework\", W3C Recommendation, 25 March\n               \
    \  2003, <http://www.w3.org/TR/2003/\n                 REC-xptr-framework-20030325/>.\n"
- title: Informative References
  contents:
  - "Informative References\n   [CANON10]     Boyer, J., \"Canonical XML Version 1.0\"\
    , W3C\n                 Recommendation, 15 March 2001,\n                 <http://www.w3.org/TR/2001/REC-xml-c14n-20010315>.\n\
    \   [CANON11]     Boyer, J., and G. Marcy, \"Canonical XML Version 1.1\",\n  \
    \               W3C Recommendation, 2 May 2008,\n                 <http://www.w3.org/TR/2008/REC-xml-c14n11-20080502/>.\n\
    \   [DECRYPT]     Hughes, M., Imamura, T., and H. Maruyama, \"Decryption\n   \
    \              Transform for XML Signature\", W3C Recommendation, 10\n       \
    \          December 2002, <http://www.w3.org/TR/2002/\n                 REC-xmlenc-decrypt-20021210>.\n\
    \   [Errata191]   RFC Errata, Errata ID 191, RFC 4051,\n                 <http://www.rfc-editor.org>.\n\
    \   [GENERIC]     Nystrom, M. and F. Hirsch, \"XML Security Generic Hybrid\n \
    \                Ciphers\", W3C Working Group Note, 24 January 2013,\n       \
    \          <http://www.w3.org/TR/2013/\n                 NOTE-xmlsec-generic-hybrid-20130124/>.\n\
    \   [Keccak]      Bertoni, G., Daeman, J., Peeters, M., and G. Van\n         \
    \        Assche, \"The KECCAK sponge function family\", January\n            \
    \     2013, <http://keccak.noekeon.org>.\n   [RFC3075]     Eastlake 3rd, D., Reagle,\
    \ J., and D. Solo, \"XML-\n                 Signature Syntax and Processing\"\
    , RFC 3075, March 2001.\n   [RFC3076]     Boyer, J., \"Canonical XML Version 1.0\"\
    , RFC 3076, March\n                 2001.\n   [RFC3092]     Eastlake 3rd, D.,\
    \ Manros, C., and E. Raymond,\n                 \"Etymology of \"Foo\"\", RFC\
    \ 3092, 1 April 2001.\n   [RFC3741]     Boyer, J., Eastlake 3rd, D., and J. Reagle,\
    \ \"Exclusive\n                 XML Canonicalization, Version 1.0\", RFC 3741,\
    \ March\n                 2004.\n   [RFC4010]     Park, J., Lee, S., Kim, J.,\
    \ and J. Lee, \"Use of the\n                 SEED Encryption Algorithm in Cryptographic\
    \ Message\n                 Syntax (CMS)\", RFC 4010, February 2005.\n   [RFC4051]\
    \     Eastlake 3rd, D., \"Additional XML Security Uniform\n                 Resource\
    \ Identifiers (URIs)\", RFC 4051, April 2005.\n   [RFC6090]     McGrew, D., Igoe,\
    \ K., and M. Salter, \"Fundamental\n                 Elliptic Curve Cryptography\
    \ Algorithms\", RFC 6090,\n                 February 2011.\n   [RFC6151]     Turner,\
    \ S. and L. Chen, \"Updated Security\n                 Considerations for the\
    \ MD5 Message-Digest and the HMAC-\n                 MD5 Algorithms\", RFC 6151,\
    \ March 2011.\n   [RFC6194]     Polk, T., Chen, L., Turner, S., and P. Hoffman,\n\
    \                 \"Security Considerations for the SHA-0 and SHA-1\n        \
    \         Message-Digest Algorithms\", RFC 6194, March 2011.\n   [Schema]    \
    \  Thompson, H., Beech, D., Maloney, M., and N.\n                 Mendelsohn,\
    \ \"XML Schema Part 1: Structures Second\n                 Edition\", W3C Recommendation,\
    \ 28 October 2004,\n                 <http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/>.\n\
    \                 Biron, P. and A. Malhotra, \"XML Schema Part 2:\n          \
    \       Datatypes Second Edition\", W3C Recommendation, 28\n                 October\
    \ 2004,\n                 <http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/>.\n\
    \   [SHA-3]       US National Institute of Science and Technology, \"SHA-3\n \
    \                WINNER\", February 2013, <http://csrc.nist.gov/\n           \
    \      groups/ST/hash/sha-3/winner_sha-3.html>.\n   [W3C]         World Wide Web\
    \ Consortium, <http://www.w3.org>.\n   [XCANON]      Boyer, J., Eastlake, D.,\
    \ and J. Reagle, \"Exclusive XML\n                 Canonicalization Version 1.0\"\
    , W3C Recommendation, 18\n                 July 2002,\n                 <http://www.w3.org/TR/2002/REC-xml-exc-c14n-20020718/>.\n\
    \   [XMLDSIG10]   Eastlake, D., Reagle, J., Solo, D., Hirsch, F., and T.\n   \
    \              Roessler, \"XML Signature Syntax and Processing (Second\n     \
    \            Edition)\", W3C Recommendation, 10 June 2008,\n                 <http://www.w3.org/TR/2008/REC-xmldsig-core-20080610/>.\n\
    \   [XMLDSIG11]   Eastlake, D., Reagle, J., Solo, D., Hirsch, F.,\n          \
    \       Nystrom, M., Roessler, T., and K. Yiu, \"XML Signature\n             \
    \    Syntax and Processing Version 1.1\", W3C Proposed\n                 Recommendation,\
    \ 24 January 2013,\n                 <http://www.w3.org/TR/2013/PR-xmldsig-core1-20130124/>.\n\
    \   [XMLDSIG-PROP]\n                 Hirsch, F., \"XML Signature Properties\"\
    , W3C Proposed\n                 Recommendation, 24 January 2013, <http://www.w3.org/TR/\n\
    \                 2013/PR-xmldsig-properties-20130124/>.\n   [XMLSECXREF]  Hirsch,\
    \ F., Roessler, T., and K. Yiu, \"XML Security\n                 Algorithm Cross-Reference\"\
    , W3C Working Group Note, 24\n                 January 2013, <http://www.w3.org/TR/2013/\n\
    \                 NOTE-xmlsec-algorithms-20130124/>.\n   [XPATH]       Boyer,\
    \ J., Hughes, M., and J. Reagle, \"XML-Signature\n                 XPath Filter\
    \ 2.0\", W3C Recommendation, 8 November 2002,\n                 <http://www.w3.org/TR/2002/\n\
    \                 REC-xmldsig-filter2-20021108/>.\n                 Berglund,\
    \ A., Boag, S., Chamberlin, D., Fernandez, M.,\n                 Kay, M., Robie,\
    \ J., and J. Simeon, \"XML Path Language\n                 (XPath) 2.0 (Second\
    \ Edition)\", W3C Recommendation, 14\n                 December 2010,\n      \
    \           <http://www.w3.org/TR/2010/REC-xpath20-20101214/>.\n   [XSLT]    \
    \    Saxonica, M., \"XSL Transformations (XSLT) Version 2.0\",\n             \
    \    W3C Recommendation, 23 January 2007,\n                 <http://www.w3.org/TR/2007/REC-xslt20-20070123/>.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Donald E. Eastlake, 3rd\n   Huawei Technologies\n   155\
    \ Beaver Street\n   Milford, MA  01757\n   USA\n   Phone: +1-508-333-2270\n  \
    \ EMail: d3e3e3@gmail.com\n"
