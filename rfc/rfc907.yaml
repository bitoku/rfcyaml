- contents:
  - "     RFC 907\n                    HOST ACCESS PROTOCOL SPECIFICATION\n                               prepared
    for\n                 Defense Advanced Research Projects Agency\n                           1400
    Wilson Boulevard\n                         Arlington, Virginia 22209\n                   Bolt
    Beranek and Newman Laboratories\n                             10 Moulton Street\n
    \                     Cambridge, Massachusetts 02238\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    Preface (Status of this Memo)\n          This document specifies  the  Host
    \ Access  Protocol  (HAP).\n     Although  HAP was originally designed as the
    network-access level\n     protocol for the DARPA/DCA sponsored  Wideband  Packet
    \ Satellite\n     Network,  it is intended that it evolve into a standard interface\n
    \    between hosts and  packet-switched  satellite  networks  such  as\n     SATNET
    \ and  TACNET (aka MATNET) as well as the Wideband Network.\n     The HAP specification
    presented here is a minor revision of,  and\n     supercedes,  the  specification
    \ presented  in  Chapter  4 of BBN\n     Report No. 4469, the  \"PSAT  Technical
    \ Report\".   As  such,  the\n     details  of  the  current  specification  are
    \ still most closely\n     matched to the characteristics if the Wideband Satellite
    Network.\n     Revisions  to  the  specification  in the \"PSAT Technical Report\"\n
    \    include  the  definition  of  three  new  control  message  types\n     (Loopback
    Request, Link Going Down, and NOP), a \"Reason\" field in\n     Restart Request
    control messages, new Unnumbered Response  codes,\n     and  new  values  for
    \ the setup codes used to manage streams and\n     groups.\n          HAP is an
    experimental protocol, and  will  undergo  further\n     revision as new capabilities
    are added and/or different satellite\n     networks  are  supported.   Implementations
    \ of  HAP  should   be\n     performed  in coordination with satellite network
    development and\n     operations personnel.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \                            Table of Contents\n     1   Introduction..........................................
    1\n     2   Overview.............................................. 3\n     3   Datagram
    Messages..................................... 8\n     4   Stream Messages......................................
    14\n     5   Flow Control Messages................................ 17\n     6
    \  Setup Level Messages................................. 24\n     6.1   Stream
    Setup Messages.............................. 32\n     6.2   Group Setup Messages...............................
    44\n     7   Link Monitoring...................................... 58\n     8
    \  Initialization....................................... 62\n     9   Loopback
    Control..................................... 68\n     10   Other Control Messages..............................
    72\n     RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n                                  FIGURES\n
    \    DATAGRAM MESSAGE.......................................... 9\n     STREAM
    MESSAGE........................................... 15\n     ACCEPTANCE/REFUSAL
    WORD.................................. 19\n     ACCEPTANCE/REFUSAL MESSAGE...............................
    21\n     UNNUMBERED RESPONSE...................................... 22\n     SETUP
    MESSAGE HEADER..................................... 26\n     NOTIFICATION MESSAGE.....................................
    29\n     SETUP ACKNOWLEDGMENT..................................... 31\n     STREAM
    EXAMPLE........................................... 33\n     CREATE STREAM REQUEST....................................
    35\n     CREATE STREAM REPLY...................................... 37\n     CHANGE
    STREAM PARAMETERS REQUEST......................... 39\n     CHANGE STREAM PARAMETERS
    REPLY........................... 41\n     DELETE STREAM REQUEST....................................
    42\n     DELETE STREAM REPLY...................................... 43\n     GROUP
    EXAMPLE............................................ 45\n     CREATE GROUP REQUEST.....................................
    47\n     CREATE GROUP REPLY....................................... 48\n     JOIN
    GROUP REQUEST....................................... 50\n     JOIN GROUP REPLY.........................................
    52\n     LEAVE GROUP REQUEST...................................... 53\n     LEAVE
    GROUP REPLY........................................ 55\n     DELETE GROUP REQUEST.....................................
    56\n     DELETE GROUP REPLY....................................... 57\n     STATUS
    MESSAGE........................................... 59\n     HAP LINK RESTART STATE
    DIAGRAM........................... 64\n     RESTART REQUEST..........................................
    65\n     RESTART COMPLETE......................................... 67\n     LOOPBACK
    REQUEST......................................... 71\n     LINK GOING DOWN..........................................
    73\n     NO OPERATION (NOP)....................................... 75\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n     1  Introduction\n
    \         The Host Access Protocol (HAP) specifies the  network-access\n     level
    communication between an arbitrary computer, called a host,\n     and a packet-switched
    satellite network.  The  satellite  network\n     provides  message  delivery
    services for geographically separated\n     hosts: Messages containing data which
    are meaningful to the hosts\n     are submitted to the network by an originating
    (source) host, and\n     are passed transparently through  the  network  to  an
    \ indicated\n     destination host.  To utilize such services, a host interfaces
    to\n     the satellite network via an access link to a  dedicated  packet-\n     switching
    \ computer,  known  as  a  Satellite  Interface  Message\n     Processor (Satellite
    IMP or SIMP).   HAP  defines  the  different\n     types  of  control messages
    and (host-to-host) data messages that\n     may be exchanged over the access link
    connecting  a  host  and  a\n     SIMP.   The  protocol establishes formats for
    these messages, and\n     describes procedures for determining when each  type
    \ of  message\n     should be transmitted and what it means when one is received.\n
    \         The term \"Interface Message  Processor\"  originates  in  the\n     ARPANET,
    where it refers to the ARPANET's packet-switching nodes.\n     SIMPs differ from
    ARPANET IMPs in that SIMPs form a  network  via\n     connections  to a common
    multiaccess/broadcast satellite channel,\n     whereas ARPANET IMPs are interconnected
    \ by  dedicated  point-to-\n     point   terrestrial   communications   lines.
    \  This  fundamental\n     difference between  satellite-based  and  ARPANET-style
    \ networks\n     results in different mechanisms for the delivery of messages
    from\n     source  to   destination   hosts   and   for   internal   network\n
    \    coordination.   Additionally,  satellite  networks  tend to offer\n     different
    type of service options to their connected  hosts  than\n     do  ARPANET-style
    \ networks.   These  options are included in the\n     Host Access Protocol presented
    here.\n          Several types of Satellite IMPs have  been  developed  on  a\n
    \    variety  of processors for the support of three different packet-\n     switched
    satellite networks.  The original SIMP was  employed  in\n     the Atlantic Packet
    Satellite Network (SATNET).  It was developed\n     from one of the models of
    ARPANET IMP, and was implemented  on  a\n     Honeywell  316  minicomputer.   The
    \ 316  SIMPs were succeeded in\n     SATNET by  SIMPs  based  on  BBN  C/30  Communications
    \ Processor\n     hardware.   The  C/30 SIMPs have also been employed in the Mobile\n
    \    RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n     Access Terminal
    Network (MATNET).  The SATNET  and  MATNET  SIMPs\n     implement  a  network-access
    \ level protocol known as Host/SATNET\n     Protocol.  Host/SATNET Protocol is
    the precursor to  HAP  and  is\n     documented  in  Internet  Experiment  Note
    \ (IEN)  No.  192.  The\n     Wideband  Satellite  Network,  like  SATNET,  has
    \ undergone   an\n     evolution  in  the development of its SIMP hardware and
    software.\n     The original Wideband Network  SIMP  is  known  as  the  Pluribus\n
    \    Satellite  IMP,  or  PSAT,  having  been  implemented  on the BBN\n     Pluribus
    Multiprocessor.  Its successor, the BSAT,  is  based  on\n     the  BBN  Butterfly
    \ Multiprocessor.   Both the PSAT and the BSAT\n     communicate with their connected
    network hosts via HAP.\n          Section 2 presents an  overview  of  HAP.   Details
    \ of  HAP\n     formats and message exchange procedures are contained in Sections\n
    \    3  through  10.   Further  explanation  of  many  of  the  topics\n     addressed
    \ in  this  HAP specification can be found in BBN Report\n     No. 4469, the \"PSAT
    Technical Report\".\n          The protocol used to provide sufficiently  reliable
    \ message\n     exchange  over the host-SIMP link is assumed to be transparent
    to\n     the network-access protocol defined in this  document.   Examples\n     of
    \ such  link-level protocols are ARPANET 1822 local and distant\n     host, ARPANET
    VDH protocol, and HDLC.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    2  Overview\n          HAP can  be  characterized  as  a  full  duplex  nonreliable\n
    \    protocol  with  an optional flow control mechanism.  HAP messages\n     flow
    simultaneously in both directions between the SIMP  and  the\n     host.  Transmission
    is nonreliable in the sense that the protocol\n     does not provide any guarantee
    of error-free sequenced  delivery.\n     To  the  extent that this functionality
    is required on the access\n     link  (e.g.,  non-collocated  SIMP  and  host
    \ operating  over  a\n     communication  circuit),  it  must be supported by
    the link-level\n     protocol  below  HAP.   The  flow  control   mechanism   operates\n
    \    independently in each direction except that enabling or disabling\n     the
    mechanism applies to both sides of the interface.\n          HAP  supports  host-to-host
    \ communication  in   two   modes\n     corresponding  to  the  two  types of
    HAP data messages, datagram\n     messages and stream messages.  Each type of
    message can be up  to\n     approximately  16K bits in length.  Datagram messages
    provide the\n     basic transmission service in the  satellite  network.   Datagram\n
    \    messages transmitted by a host experience a nominal two satellite\n     hop
    end-to-end network delay. (Note that this delay, of about 0.6\n     sec  excluding
    \ access  link  delay,  is associated with datagram\n     transmission between
    hosts on different SIMPs.  The  transmission\n     delay  between  hosts  on  the
    \ same  SIMP  will  be much smaller\n     assuming the destination is not a group
    address.  See  Section  3\n     and  6.2.)  A  datagram control header, passed
    to the SIMP by the\n     host along with message text, determines the  processing
    \ of  the\n     message  within the satellite network independent of any previous\n
    \    exchanges.\n          Stream  messages  provide  a   one   satellite   hop
    \  delay\n     (approximately  0.3  sec)  for  volatile traffic, such as speech,\n
    \    which  cannot  tolerate  the  delay  associated   with   datagram\n     transmission.
    \  Hosts  may  also use streams to support high duty\n     cycle applications
    which require  guaranteed  channel  bandwidth.\n     Host  streams are established
    by a setup message exchange between\n     the host and the network prior to the
    commencement of data  flow.\n     Although  established host streams can have
    their characteristics\n     modified by subsequent setup messages while they are
    in use,  the\n     fixed  allocation  properties  of  streams  relative to datagrams\n
    \    impose rather strict requirements on the source  of  the  traffic\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n     using  the stream.
    \ Stream traffic arrivals must match the stream\n     allocation  both  in  interarrival
    \ time  and  message  size   if\n     reasonable efficiency is to be achieved.
    \ The characteristics and\n     use of datagrams and streams are described in
    detail in  Sections\n     3 and 4 of this document.\n          Both datagram  and
    \ stream  transmission  in  the  satellite\n     network  use  logical  addressing.
    \  Each  host on the network is\n     assigned a permanent 16-bit logical address
    which is  independent\n     of  the physical port on the SIMP to which it is attached.
    \ These\n     16-bit logical addresses are provided  in  all  Host-to-SIMP  and\n
    \    SIMP-to-Host data messages.\n          Hosts may also be members of groups.
    \  Group  addressing  is\n     provided  primarily  to  support  the  multi-destination
    delivery\n     required for  conferencing  applications.   Like  streams,  group\n
    \    addresses are dynamically created and deleted by the use of setup\n     messages
    exchanged between a host and the network.  Membership in\n     a  group  may consist
    of an arbitrary subset of all the permanent\n     network hosts.   A  message
    \ addressed  to  a  group  address  is\n     delivered to all hosts that are members
    of that group.\n          Although HAP does not guarantee error-free  delivery,
    \ error\n     control is an important aspect of the protocol design.  HAP error\n
    \    control is concerned with both local transfers between a host and\n     its
    local SIMP and transfers from SIMP-to-SIMP over the satellite\n     channel.  The
    \ SIMP  offers  users  a  choice  of  network  error\n     protection  options
    based on the network's ability to selectively\n     send messages over the  satellite
    \ channel  at  different  coding\n     rates.  These forward error correction
    (FEC) options are referred\n     to as reliability levels.  Three reliability
    levels (low, medium,\n     and high) are available to the host.\n          In
    \ addition  to  forward  error  correction,  a  number  of\n     checksum  mechanisms
    are employed in the satellite network to add\n     an error detection capability.
    \ A host has  an  opportunity  when\n     sending  a  message  to  indicate  whether
    \ the message should be\n     delivered to its destination or discarded  if  a
    \ data  error  is\n     detected  by  the  network.  Each message received by
    a host from\n     the network will have a flag indicating whether or not  an  error\n
    \    was  detected in that particular message.  A host can decide on a\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n     per-message basis
    whether or not it wants to  accept  or  discard\n     transmissions containing
    data errors.\n          For connection of a host and SIMP in close proximity,
    \ error\n     rates  due  to  external noise or hardware failures on the access\n
    \    circuit may reasonably be expected to be much  smaller  than  the\n     best
    satellite channel error rate.  Thus for this case, little is\n     gained by using
    error detection and retransmission on the  access\n     circuit.   A  16-bit  header
    \ checksum  is  provided, however, to\n     insure that SIMPs do not act on  incorrect
    \ control  information.\n     For    relatively    long   distances   or   noisy
    \  connections,\n     retransmissions over  the  access  circuit  may  be  required
    \ to\n     optimize  performance  for both low and high reliability traffic.\n
    \    It is expected that link-level error control procedures (such  as\n     HDLC)
    will be used for this purpose.\n          Datagram and stream messages being presented
    to the  network\n     by  a  host may not be accepted for a number of reasons:
    priority\n     too low, destination dead, lack of buffers in  the  source  SIMP,\n
    \    etc.  The host faces a similar situation with respect to handling\n     messages
    from the SIMP.  To permit the receiver of a  message  to\n     inform  the  sender
    \ of  the local disposition of its message, an\n     acceptance/refusal (A/R)
    mechanism is implemented.  The mechanism\n     is  the external manifestation
    of the SIMP's (or host's) internal\n     flow and congestion control algorithm.
    \ If A/Rs are  enabled,  an\n     explicit  or  implicit  acceptance or refusal
    for each message is\n     returned to the host by the SIMP (and conversely).   This
    \ allows\n     the  host  (or  SIMP) to retry refused messages at its discretion\n
    \    and can provide information useful for optimizing the sending  of\n     subsequent
    \ messages if the reason for refusals is also provided.\n     The A/R mechanism
    can be disabled to  provide  a  \"pure  discard\"\n     interface.\n          Each
    message submitted to the SIMP by a host  is  marked  as\n     being  in one of
    four priority classes, from priority 3 (highest)\n     through priority 0 (lowest).
    \ The priority class is used  by  the\n     SIMP  for  arbitrating  contention
    \ for  scarce network resources\n     (e.g., channel time).  That is, if the network
    cannot deliver all\n     of the offered messages, high priority messages will
    be delivered\n     in  preference  to  low  priority  messages.   In  the  case
    \  of\n     datagrams,  priority  level  is  used  by  the  SIMP for ordering\n
    \    RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n     satellite channel
    reservation requests at  the  source  SIMP  and\n     message  delivery  at  the
    \ destination  SIMP.   In  the  case of\n     streams, priority is associated
    with the ability of one stream to\n     preempt another stream of lower priority
    at setup time.\n          While the A/R mechanism allows control of individual
    message\n     transfers,  it  does not facilitate regulation of priority flows.\n
    \    Such regulation is handled by passing advisory status information\n     (GOPRI)
    \  across   the   Host-SIMP   interface  indicating  which\n     priorities  are
    \ currently  being  accepted.   As  long  as  this\n     information, relative
    to the change in priority status, is passed\n     frequently, the sender can avoid
    originating messages  which  are\n     sure to be refused.\n          HAP defines
    both data messages (datagram messages and stream\n     messages)  and  control
    messages.  Data messages are used to send\n     information  between  network
    \ hosts.    Control   messages   are\n     exchanged  between  a  host  and  the
    network to manage the local\n     access link.  HAP can also be viewed in  terms
    \ of  two  distinct\n     protocol  layers,  the  message  layer  and the setup
    layer.  The\n     message layer is associated with the transmission  of  individual\n
    \    datagram  messages and stream messages.  The setup layer protocol\n     is
    associated with the establishment, modification, and  deletion\n     of  streams
    \ and  groups.   Setup  layer  exchanges  are actually\n     implemented as datagrams
    transmitted between the user host and an\n     internal SIMP \"service host.\"\n
    \         Every HAP message consists of an integral number  of  16-bit\n     words.
    \  The  first  several  words of the message always contain\n     control information
    and are referred to as  the  message  header.\n     The  first  word  of  the
    \ message  header identifies the type of\n     message which follows.  The second
    word of the message header  is\n     a  checksum  which  covers  all  header information.
    \ Any message\n     whose received  header  checksum  does  not  match  the  checksum\n
    \    computed  on  the  received header information must be discarded.\n     The
    format of the rest of the  header  depends  on  the  specific\n     message type.\n
    \         The formats and use of  the  individual  message  types  are\n     detailed
    \ in the following sections.  A common format description\n     is used for this
    \ purpose.   Words  in  a  message  are  numbered\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    starting  at  zero  (i.e.,  zero  is  the first word of a message\n     header).
    \ Bits within  a  word  are  numbered  from  zero  (least\n     significant) to
    fifteen (most significant).  The notation used to\n     identify a particular
    field location is:\n     <WORD#>{-<WORD#>}  [ <BIT#>{-<BIT#>} ]  <description>\n
    \    where optional elements in {} are used to specify the (inclusive)\n     upper
    \ limit  of a range.  The reader should refer to these field\n     identifiers
    for precise field size specifications.  Fields  which\n     are  common  to  several
    \ message  types are defined in the first\n     section which uses them.  Only
    the name of the field will usually\n     appear in the descriptions in subsequent
    sections.\n          Link-level protocols used to support HAP can differ  in  the\n
    \    order  in which they transmit the bits constituting HAP messages.\n     For
    HDLC  and  ARPANET  VDH,  each  word  of  a  HAP  message  is\n     transmitted
    \ starting  with the least significant bit (bit 0) and\n     ending with the most
    significant bit (bit 15).  The words of  the\n     message  are transmitted from
    word 0 to word N.  For ARPANET 1822\n     local and distant host interfaces, the
    order of bit  transmission\n     within  each  word is the reverse of that for
    HDLC and VDH, i.e.,\n     the transmission is from bit 15 to bit 0.\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n     3  Datagram Messages\n
    \         Datagram messages are one of the two types of message  level\n     data
    \ messages  used to support host-to-host communication.  Each\n     datagram can
    contain up to 16,384 bits of  user  data.   Datagram\n     messages  transmitted
    \ by  a  host  to  a  host  on a remote SIMP\n     experience a nominal two satellite
    hop end-to-end  network  delay\n     (about  0.6  sec),  excluding  delay  on
    \ the access links.  This\n     network delay is due to the reservation  per  message
    \ scheduling\n     procedure  for datagrams which only allocates channel time
    to the\n     message for the duration of the actual transfer.  Since  datagram\n
    \    transfers between permanent hosts on the same SIMP do not require\n     satellite
    channel scheduling prior  to  data  transmission,   the\n     network delay in
    this case will be much smaller and is determined\n     strictly  by  SIMP  processing
    \ time.  Datagrams  sent  to  group\n     addresses  are treated as if they were
    addressed to  remote hosts\n     and are  always sent over the satellite channel.
    \ It is  expected\n     that  datagram  messages  will be used to support the
    majority of\n     computer-to-computer and terminal-to-computer  traffic  which
    \ is\n     bursty in nature.\n          The format of datagram messages and the
    purpose of  each  of\n     the header control fields is described in Figure 1.\n
    \    RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n              15
    14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     0      | 0|LB|GOPRI|  XXXX  | F|     MESSAGE NUMBER    |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     1      |               HEADER CHECKSUM                 |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     2      |                      A/R                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     3      | 0|IL| D| E| TTL | PRI | RLY |      RLEN       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     4      |            DESTINATION HOST ADDRESS           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     5      |              SOURCE HOST ADDRESS              |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    6-N     |                     DATA                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                       Figure 1 . DATAGRAM MESSAGE\n     0[15]     Message Class.
    \ This bit identifies the  message  as  a\n               data message or a control
    message.\n                    0 = Data Message\n                    1 = Control
    Message\n     0[14]     Loopback Bit.  This bit allows the sender of a  message\n
    \              to determine if its own messages are being looped back.\n               The
    host and the SIMP each use  different  settings  of\n               this bit for
    their transmissions.  If a message arrives\n               with the loopback bit
    set equal to its outgoing  value,\n               then the message has been looped.\n
    \                   0 = Sent by Host\n                    1 = Sent by SIMP\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n     0[12-13]  Go-Priority.
    \  In  SIMP-to-Host  messages,  this  field\n               provides  advisory
    \ information  concerning  the lowest\n               priority currently being
    accepted  by  the  SIMP.   The\n               host  may optionally choose to
    provide similar priority\n               information to the SIMP.\n                    0
    = Low Priority\n                    1 = Medium-Low Priority\n                    2
    = Medium-High Priority\n                    3 = High Priority\n     0[9-11]   Reserved.\n
    \    0[8]      Force Channel Transmission Flag.  This flag can be  set\n               by
    \ the  source  host to force the SIMP to transmit the\n               message
    over the satellite channel even if the  message\n               contains   permanent
    \  destination   and   source  host\n               addresses corresponding to
    hosts which  are  physically\n               connected to the same SIMP.\n                    0
    = Normal operation\n                    1 = Force channel transmission\n     0[0-7]
    \   Message Number.  This field contains the identification\n               of
    \ the  message  used  by the acceptance/refusal (A/R)\n               mechanism
    (when enabled).  If  the  message  number  is\n               zero,  A/R  is disabled
    for this specific message.  See\n               Section  5  for  a  detailed  description
    \ of  the  A/R\n               mechanism.\n     1[0-15]   Header Checksum.  This
    field contains a checksum  which\n               covers  words  0-5.   It is computed
    as the negation of\n               the 2's-complement sum  of  words  0-5  (excluding
    \ the\n               checksum word itself).\n     2[0-15]   Piggybacked   A/R.
    \   This   field   may   contain   an\n               acceptance/refusal word
    providing A/R status on traffic\n               flowing in the opposite direction.
    \ Its  inclusion  may\n               eliminate  the  need for a separate A/R
    control message\n               (see Section 5).  A value of zero for this word
    is used\n               to  indicate  that  no  piggybacked  A/R information is\n
    \    RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n               present.\n
    \    3[15]     Data Message Type.  This  bit  identifies  whether  the\n               message
    is a datagram message or a stream message.\n                    0 = Datagram Message\n
    \                   1 = Stream Message\n     3[14]     Internet/Local Flag.  This
    flag is set by a source host\n               to  specify  to  a  destination  host
    \ whether the data\n               portion of the message contains a standard
    DoD Internet\n               header.   This  field  is  passed  transparently
    by the\n               source  and  destination  SIMPs  for  traffic   between\n
    \              external   satellite   network  hosts.  This  field  is\n               examined
    by internal  SIMP  hosts  (e.g.,  the  network\n               service host) in
    order to support Internet operation.\n                    0 = Internet\n                    1
    = Local\n     3[13]     Discard Flag.   This  flag  allows  a  source  host  to\n
    \              instruct   the   satellite   network   (including   the\n               destination
    host) what to do with the message when data\n               errors  are  detected
    \ (assuming the header checksum is\n               correct).\n                    0
    = Discard message if data errors detected.\n                    1 = Don't discard
    message if data errors detected.\n               The value of this flag, set  by
    \ the  source  host,  is\n               passed on to the destination host.\n
    \    3[12]     Data Error Flag.  This flag is used in conjunction with\n               the
    \ Discard  Flag  to indicate to the destination host\n               whether any
    data  errors  have  been  detected  in  the\n               message  prior  to
    \ transmission  over the SIMP-to-Host\n               access link.  It is used
    only if Discard Flag = 1.   It\n               should be set to zero by the source
    host.\n     RFC 907                                      Host Access Protocol\n
    \    July 1984                                           Specification\n                    0
    = No Data Errors Detected\n                    1 = Data Errors Detected\n     3[10-11]
    \ Time-to-Live Designator.  The  source  host  uses  this\n               field
    \ to  specify  the  maximum  time  that a  message\n               should be allowed
    to exist within the satellite network\n               before being deleted.  Messages
    may be discarded by the\n               network prior to this maximum elapsed
    time.\n                    0 = 1 seconds\n                    1 = 2 seconds\n
    \                   2 = 5 seconds\n                    3 = 10 seconds\n               The
    Time-to-Live field is undefined  in  messages  sent\n               from a SIMP
    to a host.\n     3[8-9]    Priority.  The source host uses this field  to  specify\n
    \              the  priority  with which the message should be handled\n               within
    the network.\n                    0 = Low Priority\n                    1 = Medium-Low
    Priority\n                    2 = Medium-High Priority\n                    3
    = High Priority\n               The  priority  of  each  message  is  passed   to
    \  the\n               destination host by the destination SIMP.\n     3[6-7]
    \   Reliability.   The  source  host  uses  this  field  to\n               specify
    \ the  basic  bit error rate requirement for the\n               data portion
    of this message.   The  source  SIMP  uses\n               this   field   to   determine
    \  the  satellite  channel\n               transmission parameters required to
    \ provide  that  bit\n               error rate.\n                    0 = Low
    Reliability\n                    1 = Medium Reliability\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \                   2 = High Reliability\n                    3 = Reserved\n               The
    Reliability field is  undefined  in  messages  sent\n               from a SIMP
    to a host.\n     3[0-5]    Reliability Length.  This source host uses  this  field\n
    \              to  specify  a portion of the user data which should be\n               transmitted
    at the highest  reliability  level  (lowest\n               bit error rate).  Both
    the six message header words and\n               the first Reliability Length
    words of user data will be\n               transmitted at Reliability=2 while
    the remainder of the\n               user data will be transmitted at  whatever
    \ reliability\n               level  is  specified  in field 3[6-7].  The reliability\n
    \              length mechanism gives the user the ability to transmit\n               private
    \ header  information (e.g., IP and TCP headers)\n               at a higher reliability
    level than the remainder of the\n               data.   The  Reliability  Length
    \ field is undefined in\n               messages sent from a SIMP to a host.\n
    \    4[0-15]   Destination Host  Address.   This  field  contains  the\n               satellite
    \ network  logical  address of the destination\n               host.\n     5[0-15]
    \  Source Host Address.  This field contains the satellite\n               network
    logical address of the source host.\n     6-N       Data.  This field contains
    up to 16,384 bits (1024  16-\n               bit words) of user data.\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n     4  Stream Messages\n
    \         Stream messages are the second type of  message  level  data\n     messages.
    \  As  noted  in  Section  2, streams exist primarily to\n     provide a one satellite
    hop delay for volatile  traffic  such  as\n     speech.   Hosts  may  also use
    streams to support high duty cycle\n     applications which require guaranteed
    channel bandwidth.\n          Streams must be created before stream messages can
    flow from\n     host  to  host.   The  protocol  to accomplish stream creation
    is\n     described  in  Section  6.1.   Once  established,  a  stream   is\n     associated
    \  with  a  recurring  channel  allocation  within  the\n     satellite network.
    \ This fixed allocation imposes  rather  strict\n     requirements  on  the  host
    using the stream if efficient channel\n     utilization is to be achieved.  In
    \ particular,  stream  messages\n     must  match  the  stream allocation both
    in terms of message size\n     and message interarrival time.\n          Within
    the bounds  of  its  stream  allocation,  a  host  is\n     permitted  considerable
    \ flexibility  in how it may use a stream.\n     Although the priority, reliability,
    \ and  reliability  length  of\n     each  stream  message  is  fixed  at  stream
    \ creation  time, the\n     destination logical address  can  vary  from  stream
    \ message  to\n     stream  message.   A host can, therefore,  multiplex a variety
    of\n     logical flows onto a single host stream.  The  format  of  stream\n     messages
    is described in Figure 2.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     0      | 0|LB|GOPRI|   XXXX    |     MESSAGE NUMBER    |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     1      |               HEADER CHECKSUM                 |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     2      |                      A/R                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     3      | 1|IL| D| E| TTL |       HOST STREAM ID        |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     4      |            DESTINATION HOST ADDRESS           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     5      |              SOURCE HOST ADDRESS              |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    6-N     |                     DATA                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                        Figure 2 . STREAM MESSAGE\n     0[15]     Message Class
    = 0 (Data Message).\n     0[14]     Loopback Bit.\n     0[12-13]  Go-Priority.\n
    \    0[8-11]   Reserved.\n     0[0-7]    Message Number.  This field serves the
    same purpose  as\n               the  message  number  field  in  the  datagram
    message.\n               Moreover, a single message number sequence is used  for\n
    \              both datagram and stream messages (see Section 5).\n     1[0-15]
    \  Header Checksum.  Covers Words 0-5.\n     2[0-15]   Piggybacked A/R.\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n     3[15]     Data
    Message Type = 1 (Stream).\n     3[14]     Internet/Local Flag.\n     3[13]     Discard
    Flag.\n     3[12]     Data Error Flag.\n     3[10-11]  Time-to-live Designator.\n
    \                   0 = Reserved\n                    1 = 1 second\n                    2
    = Reserved\n                    3 = Reserved\n     3[0-9]    Host Stream ID.  The
    service host uses  this  field  to\n               identify  the  host stream
    over which the message is to\n               be sent by the SIMP.  Host stream
    IDs  are  established\n               at  stream  creation time via host exchanges
    with their\n               network service host (see Section 6.1).\n     4[0-15]
    \  Destination Host Address.\n     5[0-15]   Source Host Address.\n     6-N       Data.
    \ This field contains up to 16,000  bits  of  user\n               data (multiple
    of 16-bits).\n     RFC 907                                      Host Access Protocol\n
    \    July 1984                                           Specification\n     5
    \ Flow Control Messages\n          The SIMP supports an acceptance/refusal (A/R)
    \ mechanism  in\n     each  direction  on  the  host access link.  The A/R mechanism
    is\n     enabled for the link by the host by setting a bit in the  Restart\n     Complete
    \ control  message  (see  Section  8).  Each datagram and\n     stream message
    contains an 8-bit message number used to  identify\n     the  message  for  flow
    \ control purposes.  Both the host and the\n     SIMP increment this number modulo
    256 in successive messages they\n     transmit.   Up  to  127  messages  may  be
    \ outstanding  in  each\n     direction at any time.  If the receiver of a message
    is unable to\n     accept  the  message, a refusal indication containing the message\n
    \    number of the refused message and the reason for the  refusal  is\n     returned.
    \  The  refusal  indication  may  be piggybacked on data\n     messages in the
    opposite direction over the link or may  be  sent\n     in a separate control
    message in the absence of reverse traffic.\n          Acceptance indications are
    returned  in  a  similar  manner,\n     either  piggybacked  on  data  messages
    or in a  separate control\n     message.  An acceptance is returned by the receiver
    \ to  indicate\n     that   the   identified  message  was  not  refused.   Acceptance\n
    \    indications returned  by  the  SIMP  do  not,  however,  imply  a\n     guarantee
    of delivery or even any assurance that the message will\n     not be intentionally
    discarded by the network at  a  later  time.\n     They  are  sent  primarily
    to facilitate buffer management in the\n     host.\n          To reduce the number
    of A/R messages exchanged, a single A/R\n     indication   can   be  returned
    \ for  multiple  (lower  numbered)\n     previously  unacknowledged  messages.
    \  Explicit  acceptance   of\n     message  number  N  implies  implicit  acceptance
    \ of outstanding\n     messages  with  numbers  N-1,  N-2,  etc.,   according
    \  to   the\n     definition  of  acceptance  outlined  above.  (Note that explicit\n
    \    acceptance of message number N  does not imply that  all  of  the\n     unacknowledged
    \ outstanding  messages  have  been  received.)  An\n     analogous interpretation
    of refusal  message  number  allows  the\n     receiver  of  a  group  of  messages
    \ to  reject  them as a group\n     assuming that they all are being refused for
    the same reason.  As\n     a  further  efficiency  measure,  HAP  permits  a  block
    \ of  A/R\n     indications to be aggregated into a single A/R  control  message.\n
    \    Such  a  message might be used, for example, to reject a group of\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n     messages where
    the refusal code on each is different.\n          In  some  circumstances   the
    \  overhead   associated   with\n     processing A/R messages may prove unattractive.
    \ For these cases,\n     it is possible to disable the A/R mechanism and operate
    \ the  HAP\n     interface  in  a purely discard mode.  The ability to effect
    this\n     on a link basis has already been noted (see Sections  2  and  8).\n
    \    In  addition,  messages  with  sequence number  zero are taken as\n     messages
    for which the A/R mechanism is selectively disabled.  To\n     permit  critical
    \ feedback,  even when operating in discard mode,\n     HAP defines an \"Unnumbered
    Response\" control message.\n          The format shown in  Figure 3  is used
    both for piggybacking\n     A/R  indications on data messages (word 2), and for
    providing A/R\n     information in separate control messages.  When separate  control\n
    \    messages  are  used to transmit A/R indications, the format shown\n     in
    \ Figure  4  applies.   Flow  control  information  and   other\n     information
    \ which cannot be sent as an A/R indication is sent in\n     an Unnumbered Response
    control message.  The format of this  type\n     of message is illustrated in
    Figure 5.\n     RFC 907                                      Host Access Protocol\n
    \    July 1984                                           Specification\n              15
    14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \            |AR|    REFUSAL CODE    |  A/R MESSAGE NUMBER   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                   Figure 3 . ACCEPTANCE/REFUSAL WORD\n     [15]      Acceptance/Refusal
    Type.  This field identifies whether\n               A/R information is an acceptance
    or a refusal.\n                    0 = Acceptance\n                    1 = Refusal\n
    \    [8-14]    Refusal Code.  When the Acceptance/Refusal  Type  =  1,\n               this
    field gives the Refusal Code.\n                    0 = Priority not being accepted\n
    \                   1 = Source SIMP congestion\n                    2 = Destination
    SIMP congestion\n                    3 = Destination host dead\n                    4
    = Destination SIMP dead\n                    5 = Illegal destination host address\n
    \                   6 = Destination host access not allowed\n                    7
    = Illegal source host address\n                    8 = Message lost in access
    link\n                    9 = Nonexistent stream ID\n                   10 = Illegal
    source host for stream ID\n                   11 = Message length too long\n                   12
    = Stream message too early\n                   13 = Illegal control message type\n
    \                  14 = Illegal refusal code in A/R\n                   15 = Illegal
    reliability value\n                   16 = Destination host congestion\n     [0-7]
    \    A/R Message Number.  This field contains the number  of\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \              the  message  to  which this acceptance/refusal refers.\n               It
    \ also  applies  to  all  outstanding  messages  with\n               earlier
    \ numbers.   Note  that  this field can never be\n               zero since a
    message number of zero  implies  that  the\n               A/R mechanism is disabled.\n
    \    RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n              15
    14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     0      | 1|LB|GOPRI|   XXXX    |  LENGTH   |     1     |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     1      |                HEADER CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     2      |                      A/R                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     .      .                      ...                      .\n      .      .
    \                     ...                      .\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     N      |                      A/R                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                  Figure 4 . ACCEPTANCE/REFUSAL MESSAGE\n     0[15]     Message
    Class = 1 (Control Message).\n     0[14]     Loopback Bit.\n     0[12-13]  Go-Priority.\n
    \    0[8-11]   Reserved.\n     0[4-7]    Message Length.  This field contains
    the  total  length\n               of this message in words (N+1).\n     0[0-3]
    \   Control Message Type = 1 (Acceptance/Refusal).\n     1[0-15]   Header Checksum.
    \ The checksum covers words 0-N.\n     2[0-15]   Acceptance/Refusal Word.\n     3-N
    \      Additional Acceptance/Refusal Words (optional).\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     0      | 1|LB|GOPRI|   XXXX    | RES-CODE  |     5     |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     1      |                HEADER CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     2      |                 RESPONSE INFO                 |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     3      |                 RESPONSE INFO                 |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 5 . UNNUMBERED RESPONSE\n     0[15]     Message Class
    = 1 (Control Message).\n     0[14]     Loopback Bit.\n     0[12-13]  Go-Priority.\n
    \    0[8-11]   Reserved.\n     0[4-7]    Response Code.\n                    3
    = Destination unreachable\n                    5 = Illegal destination host address\n
    \                   7 = Illegal source host address\n                    9 = Nonexistent
    stream ID\n                   10 = Illegal stream ID\n                   13 =
    Protocol violation\n                   15 = Can't implement loop\n     0[0-3]
    \   Control Message Type = 5 (Unnumbered Response).\n     1[0-15]   Header Checksum.
    \ Covers words 0-3.\n     RFC 907                                      Host Access
    Protocol\n     July 1984                                           Specification\n
    \    2[0-15]   Response Information. If Response Code is:\n                    3,
    Destination Host Address\n                    5, Destination Host Address\n                    7,
    Source Host Address\n                    9, Stream ID (right justified)\n                   10,
    Stream ID (right justified)\n                   13, Word 0 of offending message\n
    \                  15, Word 0 of Loopback Request message\n     3[0-15]   Response
    Information. If Response Code is:\n                    3,5,7, or 9. Undefined\n
    \                   10, Source Host Address\n                    13, Word 3 of
    offending message, or zero if\n                        no word 3\n                    15,
    Word 2 of Loopback Request message\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    6  Setup Level Messages\n          Setup  level   protocol   is   provided
    \  to   support   the\n     establishment,  modification,  and deletion of groups
    and streams\n     in the packet satellite network.  A host wishing to  perform
    \ one\n     of  these  generic  operations interacts with the network service\n
    \    host  (logical  address  zero).   The  service  host  causes  the\n     requested
    action to be carried out and serves as the intermediary\n     between the user
    and the rest of the network.  In the process  of\n     implementing the requested
    action, various network data bases are\n     updated to reflect the current state
    of the referenced  group  or\n     stream.\n          The communication between
    the host and the service  host  is\n     implemented  via special-purpose datagrams
    called setup messages.\n     Each interaction initiated by a host involves  a
    \ 3-way  exchange\n     where: (1) the user host sends a Request to the service
    host, (2)\n     the service host returns a Reply to the user host,  and  (3)  the\n
    \    user  host  returns  a  Reply Acknowledgment to the service host.\n     This
    procedure  is  used  to   insure  reliable  transmission  of\n     requests  and
    \ replies.   In  order  to allow more than one setup\n     request message from
    a host to be outstanding,  each  request  is\n     assigned   a   unique  Request
    \ ID.   The  associated  Reply  and\n     subsequent Reply Acknowledgment are
    identified by the Request  ID\n     that they contain.  Hosts should generally
    expect a minimum delay\n     of about two satellite round-trip times between the
    \ transmission\n     of  a setup Request to the SIMP and the receipt of the associated\n
    \    Reply.  (Note that the Join Group Request  and  the  Leave  Group\n     Request
    \ require  only local communication between a host and its\n     SIMP.  The  response
    \ time  for  these  requests,  therefore,  is\n     dependent   solely   on   SIMP
    \ processing  time  and  should  be\n     considerably shorter  than  two  round-trip
    \ times.)  This  delay\n     establishes  a  maximum rate at which changes can
    be processed by\n     the SIMP.  The user should receive a reply  to  a  setup
    \ request\n     requiring  global  communication  within 2 seconds and to a setup\n
    \    request requiring local communication within 1 second.  The  host\n     should
    respond to a SIMP Reply with a Reply Acknowledgment within\n     1 second.\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n          Setup exchanges
    can also be initiated  by  the  SIMP.  SIMP-\n     initiated  setup messages are
    used to notify a host of changes in\n     the status of an associated group or
    \ stream.  Each  notification\n     involves  a  2-way  exchange  where: (1) the
    service host sends a\n     Notification to the user host, and (2) the user  host
    \ returns  a\n     Notification  Acknowledgment  to  the  service  host. In order
    to\n     allow more than one Notification  to  be  outstanding,  each   is\n     assigned
    \   a    unique   Notification   ID.   The   Notification\n     Acknowledgment
    returned by the user host to the service host must\n     contain the Notification
    ID.\n          The general format of every setup message is:\n                         <DATAGRAM
    MESSAGE HEADER>\n                        <OPTIONAL INTERNET HEADER>\n                          <SETUP
    MESSAGE HEADER>\n                           <SETUP MESSAGE BODY>\n     The service
    host accepts setup requests  in  either  Internet  or\n     non-Internet  format.
    \  Replies  from the service host will be in\n     the same form as the request,
    \ that  is,  Internet  requests  get\n     Internet  replies,  and  non-Internet
    \ requests  get non-Internet\n     replies.\n          The format of the combined
    datagram message header and setup\n     message header is illustrated in Figure
    6.  The body of the setup\n     messages depends on the particular setup  message
    \ type.   Stream\n     request  and  reply messages are described in Section 6.1.
    \ Group\n     request and reply messages are  described  in  Section  6.2.   To\n
    \    simplify  the  presentation  in both of these sections, the setup\n     messages
    are assumed to be exchanged between  a  local  host  and\n     SIMP  even  though
    Internet group and stream setups are supported\n     (see Figure 6).  The format
    of notifications, which  consists  of\n     only  a  single  word  beyond the
    basic setup header, is shown in\n     Figure 7.  Since the SIMP does not retain
    the  optional  Internet\n     header  information  that  can  be  included  in
    \ setup requests,\n     Internet  notifications  are  not  supported.   The   format
    \  of\n     acknowledgment   messages   associated   with  request/reply  and\n
    \    notification setups is illustrated in Figure 8.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    6-N     |          <OPTIONAL INTERNET HEADER>           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    N+1     |      SETUP TYPE       |      SETUP CODE       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    N+2     |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    N+3     |                   SETUP  ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 6 . SETUP MESSAGE HEADER\n     0-5        Datagram
    Message Header.  Each  setup  message  begins\n                with the six word
    datagram message header (see Section\n                3).\n     6-N        Internet
    \ Header  (Optional).   These   fields,   when\n                present, conform
    to the DoD Standard Internet Protocol\n                (IP). The Internet header
    size  is  a  minimum  of  10\n                words  but  can  be  longer  depending
    \ on  the use of\n                optional  IP   facilities.    (Internet   notification\n
    \               messages are not supported.)\n     N+1[8-15]  Setup Type.  This
    field determines the type  of  setup\n                message.\n                     0
    = Acknowledgment\n                     1 = Request\n                     2 = Reply\n
    \                    3 = Notification\n     N+1[0-7]   Setup Code.  For requests,
    \ this field identifies  the\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \               Request Type.\n                     1 = Create group address\n
    \                    2 = Delete group address\n                     3 = Join group\n
    \                    4 = Leave group\n                     5 = Create stream\n
    \                    6 = Delete stream\n                     7 = Change stream
    parameters\n                     8 = Reserved\n                For Replies, this
    field provides the Reply Code.  Some\n                of  the  Reply  Codes  can
    \ be  returned  to any setup\n                request and others are request specific.\n
    \                    0 = Group or stream created\n                     1 = Group
    or stream deleted\n                     2 = Group joined\n                     3
    = Group left\n                     4 = Stream changed\n                     5
    = Reserved\n                     6 = Bad request type\n                     7
    = Reserved\n                     8 = Network trouble\n                     9 =
    Bad key\n                    10 = Group address/stream ID nonexistent\n                    11
    = Not member of group/creator of stream\n                    12 = Stream priority
    not being accepted\n                    13 = Reserved\n                    14
    = Reserved\n                    15 = Illegal interval\n                    16
    = Reserved\n                    17 = Insufficient network resources\n                    18
    = Requested bandwidth too large\n                    19 = Reserved\n                    20
    = Reserved\n                    21 = Maximum messages per slot not consistent
    with\n                         slot size\n                    22 = Reply lost
    in network\n                    23 = Illegal reliability value\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \               For   Notifications,   this   field    contains    the\n                Notification
    Type.\n                     0 = Stream suspended\n                     1 = Stream
    resumed\n                     2 = Stream deleted\n                     3 = Group
    deleted by host\n                     4 = Group deleted by SIMP\n                     5
    = All streams deleted\n                     6 = All groups deleted\n                For
    \  Acknowledgments,   this   field   contains   the\n                Acknowledgment
    Type.\n                     0 = Reply acknowledgment\n                     1 =
    Notification acknowledgment\n     N+2[0-15]  Setup Checksum.  The checksum covers
    the  three  setup\n                message  header  words and the setup message
    body data\n                words.  Setups received with  bad  checksums  must
    \ be\n                discarded.\n     N+3[0-15]  Setup ID.  This field  is  assigned
    \ by  the  host  to\n                uniquely  identify  outstanding  requests
    (Request ID)\n                and  by  the  service  host   to   uniquely   identify\n
    \               outstanding notifications (Notification ID).\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           3           |   NOTIFICATION TYPE   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                 NOTIFICATION ID               |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     9      |                NOTIFICATION INFO              |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 7 . NOTIFICATION MESSAGE\n     0-5         Datagram
    Message Header (see Section 3).\n       6[8-15]   Setup Type = 3 (Notification).\n
    \      6[0-7]    Notification Type.\n                      0 = Stream suspended\n
    \                     1 = Stream resumed\n                      2 = Stream deleted\n
    \                     3 = Group deleted by host\n                      4 = Group
    deleted by SIMP\n                      5 = All streams deleted\n                      6
    = All groups deleted\n       7[0-15]   Setup Checksum. Covers words 6-9.\n       8[0-15]
    \  Notification ID.\n       9[0-15]   Notification Information.  This  field  contains
    \ the\n                 16-bit   group   address  in  the  case  of  a  group\n
    \    RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n                 notification
    (types 3 and  4)  and  the  10-bit  host\n                 stream  ID  (right
    justified) in the case of a stream\n                 notification (types 0-2).
    \ This  field  is  zero  for\n                 Notification  Types  5  and  6,
    \ which pertain to ALL\n                 streams and groups, respectively.\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n              15 14
    13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           0           |        ACK TYPE       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                   SETUP  ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 8 . SETUP ACKNOWLEDGMENT\n     0-5         Datagram
    Message Header.\n       6[8-15]   Setup Type = 0 (Acknowledgment).\n       6[0-7]
    \   Acknowledgment Type.\n                     0 = Reply acknowledgment\n                     1
    = Notification acknowledgment\n       7[0-15]   Setup Checksum.  Covers words
    6-8.\n       8[0-15]   Setup  ID.   This  is  either  a  Request  ID  or   a\n
    \                Notification ID.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    6.1  Stream Setup Messages\n          Hosts use  streams to support high
    duty  cycle  applications\n     and   applications   requiring   a   one  satellite
    \ hop  network\n     transmission delay.  Host streams must be set  up  before
    \ stream\n     data messages can flow.  The stream setup messages defined by HAP\n
    \    are Create Stream Request, Create  Stream  Reply,  Delete  Stream\n     Request,
    \ Delete  Stream Reply, Change Stream Parameters Request,\n     and Change Stream
    Parameters Reply.  The use of these messages is\n     illustrated  in  the scenario
    of exchanges between a host and its\n     local SIMP shown in Figure 9 where the
    host establishes a stream,\n     sends  some data, modifies the stream characteristics,
    sends some\n     more data, and finally closes down the stream.\n          It
    is worthwhile noting that the setup exchanges in Figure 9\n     are  completely
    \ between  the host originating the stream and its\n     local SIMP.  Other SIMPs
    and hosts are essentially unaware of the\n     existence   of   the  stream.   Stream
    \ messages  received  by  a\n     destination  host  are,  therefore,  processed
    \  identically   to\n     datagram  messages.   (All SIMPs must, of course, be
    aware of the\n     channel allocation associated with a  host  stream  in  order
    \ to\n     perform  satellite  channel  scheduling.)   Not  illustrated, but\n
    \    implicit in this  scenario,  are  the  optional  A/R  indications\n     associated
    with each of the stream setup messages.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \                                             Host       SIMP\n             Create
    Stream Request                ------>\n             Create Stream Reply                  <------\n
    \            Reply Acknowledgment                 ------>\n             Stream
    Message                       ------>\n                  .\n                  .\n
    \            Stream Message                       ------>\n             Change
    Stream Parameters Request     ------>\n             Change Stream Parameters Reply
    \      <------\n             Reply Acknowledgment                 ------>\n             Stream
    Message                       ------>\n                  .\n                  .\n
    \            Stream Message                       ------>\n             Delete
    Stream Request                ------>\n             Delete Stream Reply                  <------\n
    \            Reply Acknowledgment                 ------>\n                         Figure
    9 . STREAM EXAMPLE\n          Host streams have six characteristic  properties
    \ which  are\n     selected  at stream setup time.  These properties, which apply
    to\n     every message transmitted in the stream, are: (1) slot size,  (2)\n     interval,
    \ (3) reliability, (4) reliability length, (5) priority,\n     and (6) maximum
    messages per slot.  To establish  a  stream,  the\n     host  sends  the  Create
    \ Stream  Request  message illustrated in\n     Figure 10 to the SIMP.  After
    the satellite network has processed\n     the Create Stream Request, the SIMP
    will respond to the host with\n     a Create Stream Reply message formatted as
    shown  in  Figure  11.\n     Assuming  that the reply code in the Create Stream
    Reply  is zero\n     indicating that the stream has  been  created  successfully,
    \ the\n     host may proceed to transmit stream data messages after sending a\n
    \    RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n     Reply Acknowledgment.\n
    \         During the lifetime of a stream, the host which  created  it\n     may
    \ decide that some of its six characteristic properties should\n     be modified.
    \ All of the properties except  the  stream  interval\n     can  be  modified
    \ using  the  Change  Stream  Parameters Request\n     message.  The format of
    this command is illustrated in Figure 12.\n     After  the  network  has  processed
    \ the Change Stream Parameters\n     Request, the  SIMP  will  respond  by  sending
    \ a  Change  Stream\n     Parameters  Reply to the host with the format shown
    in Figure 13.\n     A host requesting a reduced channel  allocation  should  decrease\n
    \    its  sending  rate immediately without waiting for receipt of the\n     Change
    Stream Parameters Reply.  A host requesting  an  increased\n     allocation  should
    \ not  proceed to transmit according to the new\n     set of parameters without
    first having received a Reply Code of 4\n     indicating that the requested change
    has taken effect.\n          When the host which created the host stream determines
    \ that\n     the  stream  is  no  longer  needed  and the associated satellite\n
    \    channel allocation can be freed up, the host sends its local SIMP\n     a
    \ Delete Stream Request message formatted as indicated in Figure\n     14.  After
    the network has processed the Delete  Stream  Request,\n     the  SIMP  will  respond
    \ by sending a Delete Stream Reply to the\n     host with the format shown in
    Figure 15.\n     RFC 907                                      Host Access Protocol\n
    \    July 1984                                           Specification\n              15
    14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           1           |           5           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     9      |  MAX MES  | INT | PRI | RLY |      RLEN       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    10      |                   SLOT SIZE                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                    Figure 10 . CREATE STREAM REQUEST\n     0-5         Datagram
    Message Header.\n       6[8-15]   Setup Type = 1 (Request).\n       6[0-7]    Request
    Type = 5 (Create Stream).\n       7[0-15]   Setup Checksum.  Covers words 6-10.\n
    \      8[0-15]   Request ID.\n       9[12-15]  Maximum Messages Per Slot.  This
    field specifies  the\n                 the  maximum number of stream messages
    that will ever\n                 be delivered to the SIMP by the host for transmission\n
    \                in one stream slot.\n       9[10-11]  Interval.  This  field
    \ specifies  the  interval,  in\n                 number of 21.2 ms  frames, between
    stream slots.\n     RFC 907                                      Host Access Protocol\n
    \    July 1984                                           Specification\n                      0
    = 1 frame\n                      1 = 2 frames\n                      2 = 4 frames\n
    \                     3 = 8 frames\n                 As an example, an interval
    of 4 frames corresponds to\n                 an allocation of Slot Size words
    every 85 ms.\n       9[8-9]    Priority.  This field specifies the priority at
    which\n                 all messages in the host stream should be handled.\n                      0
    = Low priority\n                      1 = Medium Low Priority\n                      2
    = Medium High Priority\n                      3 = High Priority\n       9[6-7]
    \   Reliability.  This field  specifies  the  basic  bit-\n                 error
    \ rate  requirement  for the data portion of all\n                 messages in
    the host stream.\n                      0 = Low Reliability\n                      1
    = Medium Reliability\n                      2 = High Reliability\n                      3
    = Reserved\n       9[0-5]    Reliability Length.  This field  specifies  how  many\n
    \                words  beyond  the  stream  message  header should be\n                 transmitted
    at maximum reliability for  all  messages\n                 in the host stream.\n
    \      10[0-15]  Slot Size.  This field specifies  the  slot  size  in\n                 16-bit
    \ words of stream message text.  Stream message\n                 header words
    are excluded from this count.  The  host\n                 can partition this
    allocation on a slot-by-slot basis\n                 among a variable number of
    messages as  long  as  the\n                 maximum  number  of messages per
    slot does not exceed\n                 MAX MES.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           2           |      REPLY CODE       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     9      |      XXXXX      |       HOST STREAM ID        |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 11 . CREATE STREAM REPLY\n     0-5          Datagram
    Message Header.\n       6[8-15]    Setup Type = 2 (Reply).\n       6[0-7]     Reply
    Code.\n                       0 = Stream created\n                       8 = Network
    trouble\n                      12 = Stream priority not being accepted\n                      17
    = Insufficient network resources\n                      18 = Requested bandwidth
    too large\n                      21 = Maximum messages per slot not consistent\n
    \                          with slot size\n                      22 = Reply lost
    in network\n                      23 = Illegal reliability value\n       7[0-15]
    \   Setup Checksum.  Covers words 6-9.\n       8[0-15]    Request ID.\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n       9[10-15]   Reserved.\n
    \      9[0-9]     Host Stream ID.  This field contains a  host  stream\n                  ID
    \ assigned by the network.  It must be included in\n                  all stream
    data messages sent by the host  to  allow\n                  the SIMP to associate
    the message with stored stream\n                  characteristics and the reserved
    \ satellite  channel\n                  time.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           1           |           7           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     9      |      XXXXX      |       HOST STREAM ID        |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    10      |  MAX MES  | INT | PRI | RLY |      RLEN       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    11      |                   SLOT SIZE                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \              Figure 12 . CHANGE STREAM PARAMETERS REQUEST\n     0-5          Datagram
    Message Header.\n       6[8-15]    Setup Type = 1 (Request).\n       6[0-7]     Request
    Type = 7 (Change Stream Parameters).\n       7[0-15]    Setup Checksum.  Covers
    words 6-11.\n       8[0-15]    Request ID.\n       9[10-15]   Reserved.\n       9[0-9]
    \    Host Stream ID.\n       10[12-15]  New Maximum Messages Per Slot.\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n       10[10-11]  Interval.
    \  This  field  must  specifiy   the   same\n                  interval  as  was
    \ specified  in  the  Create Stream\n                  Request message for this
    stream.\n       10[8-9]    New Priority.\n       10[6-7]    New Reliability.\n
    \      10[0-5]    New Reliability Length.\n       11[0-15]   New Slot Size.\n
    \    RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n              15
    14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           2           |      REPLY CODE       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \               Figure 13 . CHANGE STREAM PARAMETERS REPLY\n     0-5        Datagram
    Message Header.\n       6[8-15]  Setup Type = 2 (Reply).\n       6[0-7]   Reply
    Code.\n                     4 = Stream changed\n                     8 = Network
    trouble\n                    10 = Stream ID nonexistent\n                    11
    = Not creator of stream\n                    12 = Stream priority not being accepted\n
    \                   15 = Illegal interval\n                    17 = Insufficient
    network resources\n                    18 = Requested bandwidth too large\n                    21
    = Maximum messages per slot not consistent with\n                         slot
    size\n                    22 = Reply lost in network\n                    23 =
    Illegal reliability value\n       7[0-15]  Setup Checksum.  Covers words 6-8.\n
    \      8[0-15]  Request ID.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           1           |           6           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     9      |      XXXXX      |       HOST STREAM ID        |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                    Figure 14 . DELETE STREAM REQUEST\n     0-5      Datagram
    Message Header.\n     6[8-15]  Setup Type = 1 (Request).\n     6[0-7]   Request
    Type = 6 (Delete Stream).\n     7[0-15]  Setup Checksum.  Covers words 6-9.\n
    \    8[0-15]  Request ID.\n     9[10-15] Reserved.\n     9[0-9]   Host Stream
    ID.\n     RFC 907                                      Host Access Protocol\n
    \    July 1984                                           Specification\n              15
    14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           2           |      REPLY CODE       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 15 . DELETE STREAM REPLY\n     0-5      Datagram
    Message Header.\n     6[8-15]  Setup Type = 2 (Reply).\n     6[0-7]   Reply Code.\n
    \         1 = Stream deleted\n          8 = Network trouble\n         10 = Stream
    ID nonexistent\n         11 = Not creator of stream\n         17 = Insufficient
    network resources\n         22 = Reply lost in network\n     7[0-15]  Setup Checksum.
    \ Covers words 6-8.\n     8[0-15]  Request ID.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    6.2  Group Setup Messages\n          Group addressing allows  hosts  to  take
    \ advantage  of  the\n     broadcast  capability  of  the satellite network and
    is primarily\n     provided to support the multi-destination delivery  required
    \ for\n     conferencing   applications.   Group  addresses  are  dynamically\n
    \    created and deleted via setup messages  exchanged  between  hosts\n     and
    \ the  network.   Membership  in  a  group  may  consist of an\n     arbitrary
    subset of all the permanent network hosts.  A  datagram\n     message  or  stream
    \ message  addressed to a group is always sent\n     over the satellite channel
    and delivered to all  hosts  that  are\n     members of that group.  The group
    setup messages are Create Group\n     Request, Create Group Reply, Delete Group
    Request,  Delete  Group\n     Reply, Join Group Request, Join Group Reply, Leave
    Group Request,\n     and Leave Group Reply.\n          The use of group setup
    messages is shown in Figure 16.   The\n     figure  illustrates a scenario of
    exchanges between two hosts and\n     their local SIMPs.  In the scenario one
    host, Host A,  creates  a\n     group  which  is  joined by a second host, Host
    B.  After the two\n     hosts have exchanged some data mesages addressed  to  the
    \ group,\n     Host  B  decides  to leave the group and Host A decides to delete\n
    \    the group.  As in the scenario in Section  6.1,  A/R  indications\n     have
    been omitted for clarity.\n          Part of the group creation procedure involves
    \ the   service\n     host  returning a 48-bit key along with a 16-bit group address
    to\n     the host creating the group.  The creating host must pass the key\n     along
    with the group address to the other hosts which it wants as\n     group members.
    \ These other hosts must supply the key along  with\n     the  group address in
    their Join Group Requests.  The key is used\n     by the network  to  authenticate
    \ these  operations  and  thereby\n     minimize the probability that unwanted
    hosts will deliberately or\n     inadvertently become members of the group.  The
    procedure used by\n     a  host to distribute the group address and key is not
    within the\n     scope of HAP.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \                                  Host   SIMP    SIMP   Host\n                                    A
    \     A       B      B\n        Create Group Request         ------>\n        Create
    Group Reply           <------\n        Reply Acknowledgment         ------>\n
    \            .\n             .\n                                     >>Group Address,Key>>\n
    \            .\n             .\n        Join Group Request                          <------\n
    \       Join Group Reply                            ------>\n        Reply Acknowledgment
    \                       <------\n        Data Message 1               ------>\n
    \       Data Message 1               <------        ------>\n        Data Message
    2                              <------\n        Data Message 2               <------
    \       ------>\n        Leave Group Request                         <------\n
    \       Leave Group Reply                           ------>\n        Reply Acknowledgment
    \                       <------\n        Delete Group Request         ------>\n
    \       Delete Group Reply           <------\n        Reply Acknowledgment         ------>\n
    \                        Figure 16 . GROUP EXAMPLE\n          Any host no longer
    wishing to participate  in  a  group  may\n     choose  to  drop out.  This can
    be accomplished by either a Leave\n     or a Delete.  Both Leave and Delete operations
    are  authenticated\n     using  the 48-bit key.  Leave is a local operation between
    a host\n     and its SIMP which removes the requesting  host  from  the  group\n
    \    membership  list  but  does not alter the global existence of the\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n     group.  A Delete,
    on the other hand, expunges  all  knowledge  of\n     the  group  from  every
    SIMP in the network.  HAP will permit any\n     member of a group to delete the
    group at any time.   Thus,  group\n     addresses  can  be  deleted  even  if
    \ the  host which originally\n     created the group has left the group or has
    \ crashed.   Moreover,\n     groups may exist for which there are currently no
    members because\n     each member has executed  a  Leave  while  none  has  executed
    \ a\n     Delete.  It  is the responsibility of the hosts to coordinate and\n
    \    manage the use of groups.\n          The Create Group Request message sent
    to the service host to\n     establish a group address is illustrated in Figure
    17.  After the\n     network has processed the Create Group Request, the service
    \ host\n     will  respond  by  sending  a  Create  Group Reply to the host as\n
    \    illustrated in Figure 18.\n          A host may become a member of a  group
    \ once  it  knows  the\n     address  and key associated with the group by sending
    the service\n     host the Join Group Request message  shown  in  Figure  19.
    \  The\n     service  host  will respond to the Join Group Request with a Join\n
    \    Group Reply formatted as indicated in Figure 20.  The host  which\n     creates
    \ a  group  automatically  becomes  a member of that group\n     without any need
    for an explicit Join Group Request.\n          At any time after becoming a member
    of a group, a  host  may\n     choose  to  drop out of the group.  To effect this
    the host sends\n     the service host a Leave Group  Request  formatted  as  shown
    \ in\n     Figure  21.   The  service  host  will respond to the Leave Group\n
    \    Request with a Leave Group Reply formatted as shown in Figure 22.\n          Any
    member of a group can  request  that  the  service  host\n     delete  an existing
    group via a Delete Group Request.  The format\n     of the Delete Group  Request
    \ setup  message  is  illustrated  in\n     Figure  23.   After  the  network
    \ has processed the Delete Group\n     Request, the service host will respond
    to the host with a  Delete\n     Group Reply formatted as illustrated in Figure
    24.\n     RFC 907                                      Host Access Protocol\n
    \    July 1984                                           Specification\n              15
    14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           1           |           1           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                    Figure 17 . CREATE GROUP REQUEST\n     0-5        Datagram
    Message Header.\n       6[8-15]  Setup Type = 1 (Request).\n       6[0-7]   Request
    Type = 1 (Create Group).\n       7[0-15]  Setup Checksum.  Covers words 6-8.\n
    \      8[0-15]  Request ID.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           2           |      REPLY CODE       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     9      |                 GROUP ADDRESS                 |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    10      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    11      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    12      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 18 . CREATE GROUP REPLY\n     0-5        Datagram
    Message Header.\n       6[8-15]  Setup Type = 2 (Reply).\n       6[0-7]   Reply
    Code.\n                     0 = Group created\n                     8 = Network
    trouble\n                    17 = Insufficient network resources\n                    22
    = Reply lost in network\n       7[0-15]  Setup Checksum.  Covers words 6-12.\n
    \      8[0-15]  Request ID.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \      9[0-15]  Group Address.  This field contains a  16-bit  logical\n                address
    \ assigned  by the network which may be used by\n                the host as a
    group address.\n       10-12    Key.  This field contains a 48-bit key assigned
    by the\n                network  which  is  associated with the group address.\n
    \               It must be provided for subsequent  Join,  Leave,  and\n                Delete
    requests which reference the group address.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           1           |           3           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     9      |                 GROUP ADDRESS                 |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    10      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    11      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    12      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 19 . JOIN GROUP REQUEST\n     0-5        Datagram
    Message Header.\n       6[8-15]  Setup Type = 1 (Request).\n       6[0-7]   Request
    Type = 3 (Join Group).\n       7[0-15]  Setup Checksum.  Covers words 6-12.\n
    \      8[0-15]  Request ID.\n       9[0-15]  Group Address.  This is the  logical
    \ address  of  the\n                group that the host wishes to join.\n     10-12
    \     Key.  This  is  the  key  associated  with  the  group\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \               address.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           2           |      REPLY CODE       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                      Figure 20 . JOIN GROUP REPLY\n     0-5        Datagram
    Message Header.\n       6[8-15]  Setup Type = 2 (Reply).\n       6[0-7]   Reply
    Code.\n                     2 = Group joined\n                     9 = Bad key\n
    \                   10 = Group address nonexistent\n                    17 = Insufficient
    network resources\n       7[0-15]  Setup Checksum.  Covers words 6-8.\n       8[0-15]
    \ Request ID.\n     RFC 907                                      Host Access Protocol\n
    \    July 1984                                           Specification\n              15
    14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           1           |           4           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     9      |                 GROUP ADDRESS                 |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    10      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    11      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    12      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 21 . LEAVE GROUP REQUEST\n     0-5        Datagram
    Message Header.\n       6[8-15]  Setup Type = 1 (Request).\n       6[0-7]   Request
    Type = 4 (Leave Group).\n       7[0-15]  Setup Checksum.  Covers words 6-12.\n
    \      8[0-15]  Request ID.\n       9[0-15]  Group Address.  This is the  logical
    \ address  of  the\n                group that the host wishes to leave.\n     10-12
    \     Key.  This  is  the  key  associated  with  the  group\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \               address.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           2            |     REPLY CODE       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                      Figure 22 . LEAVE GROUP REPLY\n     0-5        Datagram
    Message Header.\n       6[8-15]  Setup Type = 2 (Reply).\n       6[0-7]   Reply
    Code.\n                     3 = Group left\n                     9 = Bad key\n
    \                   10 = Group address nonexistent\n                    11 = Not
    member of group\n                    17 = Insufficient network resources\n       7[0-15]
    \ Setup Checksum.  Covers words 6-8.\n       8[0-15]  Request ID.\n     RFC 907
    \                                     Host Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           1           |           2           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     9      |                 GROUP ADDRESS                 |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    10      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    11      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    12      |                      KEY                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                    Figure 23 . DELETE GROUP REQUEST\n     0-5        Datagram
    Message Header.\n       6[8-15]  Setup Type = 1 (Request).\n       6[0-7]   Request
    Type = 2 (Delete Group).\n       7[0-15]  Setup Checksum.  Covers words 6-12.\n
    \      8[0-15]  Request ID.\n       9[0-15]  Group Address.\n     10-12      Key.\n
    \    RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n              15
    14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0-5     |            DATAGRAM MESSAGE HEADER            |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |           2           |      REPLY CODE       |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                 SETUP CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                  REQUEST ID                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 24 . DELETE GROUP REPLY\n     0-5        Datagram
    Message Header.\n       6[8-15]  Setup Type = 2 (Reply).\n       6[0-7]   Reply
    Code.\n                     1 = Group deleted\n                     8 = Network
    trouble\n                     9 = Bad key\n                    10 = Group address
    nonexistent\n                    11 = Not member of group\n                    17
    = Insufficient network resources\n                    22 = Reply lost in network\n
    \      7[0-15]  Setup Checksum.  Covers words 6-8.\n       8[0-15]  Request ID.\n
    \    RFC 907                                      Host Access Protocol\n     July
    1984                                           Specification\n     7  Link Monitoring\n
    \         While the access link is operating,  statistics  on  traffic\n     load
    \ and  error  rate  are maintained by the host and SIMP.  The\n     host and SIMP
    \ must  exchange  status  messages  once  a  second.\n     Periodic  exchange
    \ of  status  messages permits both ends of the\n     link to monitor flows in
    both  directions.  Status  messages  are\n     required  to  support monitoring
    by the Network Operations Center\n     (NOC).\n          The link restart procedure
    (see Section 8)  initializes  all\n     internal  SIMP  counts  and statistics
    for that link to zero.  As\n     data and control messages are processed, counts
    \ are  updated  to\n     reflect  the  total  number  of  messages sent, messages
    received\n     correctly, and messages received with different classes of errors\n
    \    since  the last link restart.  Whenever a status message arrives,\n     a
    snapshot is taken of the local SIMP counts.  The local  receive\n     counts,
    \ in  conjunction  with  a  sent  count  contained  in the\n     received status
    \ message,  permits  the  computation  of  traffic\n     statistics  in  the  one
    second update interval assuming that the\n     set of counts at the time of the
    previous monitoring report  have\n     been  saved.   By  including  in  the status
    message sent (in the\n     opposite direction) the receive  counts  and  the  received
    \ sent\n     count that was used with them, the transmitting end of the access\n
    \    link as  well  as  the  receiving  end  can  determine  the  link\n     performance
    \ from  sender  to receiver.  The format of the Status\n     control message is
    illustrated in Figure 25.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     0      | 1|LB|GOPRI|         XXXXX         |     0     |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     1      |                HEADER CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     2      |             MOST RECENT A/R SENT              |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     3      |                STREAM CAPACITY                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     4      |                   TIMESTAMP                   |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     5      |                      SBU                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     6      |                      STU                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     7      |                      RNE                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     8      |                      RWE                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     9      |                      BHC                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    10      |                      HEI                      |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                       Figure 25 . STATUS MESSAGE\n     0[15]     Message Class
    = 1 (Control Message).\n     0[14]     Loopback Bit.\n     0[12-13]  Go-Priority.\n
    \    0[4-11]   Reserved.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    0[0-3]    Control Message Type = 0 (Status).\n     1[0-15]   Header Checksum.
    \ Covers words 0-10.\n     2[0-15]   Most Recent A/R Sent.  This field is a duplicate
    of the\n               most recent acceptance/refusal word.  It is included in\n
    \              the  periodic   status   message   in   case   previous\n               transmissions
    containing A/R information were lost.\n     3[0-15]   Stream Capacity.  When sent
    by  the  SIMP,  this  field\n               indicates  how much stream capacity
    is unused, in units\n               of data  bits  per  frame.   Since  available
    \ capacity\n               depends directly on a variety of parameters that can
    be\n               selected by the user, the value of this  field  is  the\n               maximum
    \ capacity  that  could  be achieved if existing\n               host streams
    were expanded at  low  reliability.   This\n               field  is  undefined
    \ in messages sent from the host to\n               the SIMP.\n     4[0-15]   Timestamp.
    \ This field  indicates  the  time  that  the\n               status message was
    generated.  When sent by a SIMP, the\n               time is in  units  of   seconds
    \ since  the  last  link\n               restart.   The  host should also timestamp
    its messages\n               in units of seconds.\n     5[0-15]   Sent By Us.
    Count of messages sent by us since the last\n               link restart (not
    including this one).\n     6[0-15]   Sent To Us.  Count of messages sent  to  us
    \ since  the\n               last  link  restart.   This is the count from word
    5 of\n               the last status message received.\n     7[0-15]   Received,
    No Errors. This  is  the  count  of  messages\n               received  without
    \ errors (since the last link restart)\n               at the time that the last
    status message was received.\n     8[0-15]   Received With Errors.  This is the
    \ count  of  messages\n               received  with  errors (since the last link
    restart) at\n               the time the last status message was received.\n     9[0-15]
    \  Bad Header Checksums. This is  the  count  of  messages\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \              received with bad header checksums (since the last link\n               restart)
    at the  time  the  last   status  message  was\n               received.\n     10[0-15]
    \ Hardware  Error  Indication.   This  is  the  count  of\n               messages
    \ received with hardware CRC errors or hardware\n               interface  error
    \ indications  (since  the  last   link\n               restart)  at  the  time
    \  the  last  status message was\n               received.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    8  Initialization\n          The Host Access Protocol uses a number  of  state
    \ variables\n     that  must  be  initialized in order to function properly.  These\n
    \    variables are  associated  with  the  send  and  receive  message\n     numbers
    \  used   by  the  acceptance/refusal  mechanism  and  the\n     statistics  maintained
    \ to   support   link   monitoring.    Link\n     initialization  should be carried
    out when a machine is initially\n     powered up, when it does a system restart,
    when the ON state (see\n     below)  times  out,  when  a  loopback  condition
    \ times out (see\n     Section 9), or whenever the link transitions from non-operational\n
    \    to operational status.\n          Initialization is accomplished by the  exchange
    \ of  Restart\n     Request  (RR)  and  Restart Complete (RC) messages between
    a host\n     and a SIMP.  The state diagram in Figure 26 shows the sequence of\n
    \    events  during initialization.  Both SIMP and host must implement\n     this
    state diagram  if  deadlocks  and  oscillations  are  to  be\n     avoided.   This
    \ particular initialization sequence requires both\n     sides to send and receive
    the Restart Complete message.   Because\n     this  message  is  a  reply  (to
    \ a  Restart  Request  or Restart\n     Complete), its receipt  guarantees  that
    \ the  physical  link  is\n     operating  in both directions.  Five states are
    identified in the\n     state diagram:\n     OFF            Entered  upon  recognition
    \ of  a  requirement  to\n                    restart.     The   device   can
    \  recognize   this\n                    requirement  itself or be forced  to
    \ restart   by\n                    receipt of an RR  message from the other end
    while\n                    in the ON state.\n     INIT           Local state variables
    have  been  initialized  and\n                    local  counters  have  been
    \ zeroed but no restart\n                    control messages have yet been sent
    or received.\n     RR-SNT         A request to reinitialize (RR) has  been  sent
    \ to\n                    the other end but no restart control messages have\n
    \                   yet been received.\n     RC-SNT         A reply (RC) has been
    sent to  the  other  end  in\n                    response  to  a  received reinitialization
    request\n     RFC 907                                      Host Access Protocol\n
    \    July 1984                                           Specification\n                    (RR).
    \ The device is waiting for a reply (RC).\n     ON             Reply  (RC)  messages
    \ have  been  both  sent  and\n                    received.   Data  and  control
    messages can now be\n                    exchanged between the SIMP and host.\n
    \         All states have 10-second timeouts (not  illustrated)  which\n     return
    \ the  protocol  to  the  OFF state.  The occurrence of any\n     events other
    than those indicated in the diagram are ignored.\n          The Restart Request
    control message illustrated in Figure 27\n     is  sent  by  either a host or
    a SIMP when it wishes to restart a\n     link.  The Restart Request causes all
    the  monitoring  statistics\n     to  be  reset  to  zero and stops all traffic
    on the link in both\n     directions.  The Restart Complete message illustrated
    \ in  Figure\n     28  is  sent in response to a received Restart Request or Restart\n
    \    Complete to complete link initialization.  The  Restart  Complete\n     carries
    \ a  field  used  by  the  host  to  enable or disable the\n     acceptance/refusal
    mechanism for the link  being  restarted  (see\n     Section 5).  After the Restart
    Complete is processed, traffic may\n     flow on the link.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \                             -------\n         Any Timeout or ----->| OFF |<-----------------------------\n
    \        Device Down          -------                             |\n                                 |
    \                               |\n                                 |  Device
    Up                     |\n                                 |  Initialize Variables
    \         |\n                                 |                                |\n
    \                                V                                |\n                             ---------
    \                           |\n                             | INIT  |                            |\n
    \                            ---------                            |\n                               |
    \  |                              |\n                      Rcv RR   |   |   Snd
    RR                     |\n                      Snd RC   |   |                              |\n
    \                              |   |                              |\n                  --------------
    \  --------------                 |\n                  |                             |
    \                |\n                  |                             |                 |\n
    \                 V           Rcv RR            V                 |\n             ----------
    \      Snd RC        ----------            |\n             | RC-SNT |<--------------------|
    RR-SNT |            |\n             ----------                     ----------
    \           |\n                  |                             |                 |\n
    \        Rcv RC   |                             |   Rcv RC        |\n                  |
    \                            |   Snd RC        |\n                  V                             V
    \                |\n                  -------------------------------                 |\n
    \                                |                                |\n                                 |
    \                               |\n                                 V                                |\n
    \                             -------                             |\n          Rcv
    Any      ------>| ON  |------------------------------\n          Other        |
    \     -------    Rcv RR\n                       ----------|\n                Figure
    26 . HAP LINK RESTART STATE DIAGRAM\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0       | 1|LB|     XXXXXXX     |  REASON   |     3     |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    1       |                HEADER CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    2       |          HOST ADDRESS / SITE NUMBER           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    3       |                  LINK NUMBER                  |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                       Figure 27 . RESTART REQUEST\n     0[15]    Message Type
    = 1 (Control Message).\n     0[14]    Loopback Bit.\n     0[8-13]  Reserved.\n
    \    0[4-7]   Reason.  This field is used by the SIMP or the  host  to\n              indicate
    the reason for the restart as follows:\n                   0 = power up\n                   1
    = system restart\n                   2 = link restart\n                   3 =
    link timeout\n                   4 = loopback timeout\n     0[0-3]   Control Message
    Type = 3 (Restart Request).\n     1[0-15]  Header Checksum.  Covers words 0-3.\n
    \    2[0-15]  Host Address  /  Site  Number.   The  host  inserts  its\n              satellite
    \ network  address  in  this  field.   The SIMP\n              validates that
    the host address is correct for the  port\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             being  used.   When  sent  by  the SIMP, this field will\n              contain
    the SIMP site number.\n     3[0-15]  Link  Number.   This   field   contains   the
    \  sender's\n              identification  of  the  physical link being used.
    \ This\n              information is used to identify the link when  reporting\n
    \             errors to the Network Operations Center (NOC).\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0       | 1|LB|          XXXXXX          |AR|     4     |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    1       |                HEADER CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    2       |          HOST ADDRESS / SITE NUMBER           |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    3       |                  LINK NUMBER                  |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                      Figure 28 . RESTART COMPLETE\n     0[15]    Message Type
    = 1 (Control Message).\n     0[14]    Loopback Bit.\n     0[5-13]  Reserved.\n
    \    0[4]     Acceptance/Refusal Control.  This bit  is  used  by  the\n              host
    \  to   enable  or  disable  the  acceptance/refusal\n              mechanism
    for all traffic on the link.\n                   0 = Disable acceptance/refusal\n
    \                  1 = Enable acceptance/refusal\n     0[0-3]   Control Message
    Type = 4 (Restart Complete).\n     1[0-15]  Header Checksum.  Covers words 0-3.\n
    \    2[0-15]  Host Address / Site Number.\n     3[0-15]  Link Number.\n     RFC
    907                                      Host Access Protocol\n     July 1984
    \                                          Specification\n     9  Loopback Control\n
    \         The Host Access Protocol provides a Loopback Request control\n     message
    \ which  can  be  used  by a SIMP or a host to request the\n     remote loopback
    of its HAP messages.  Such requests  are  usually\n     the  result of operator
    intervention for purposes of system fault\n     diagnosis.  For clarity in the
    \ following  discussion,  the  unit\n     (SIMP  or  host) requesting the remote
    loopback is referred to as\n     the \"transmitter\" and the unit implementing
    \ (or  rejecting)  the\n     loopback  is  referred  to  as  the  \"receiver\".
    \ The format of a\n     Loopback Request control message is illustrated in Figure
    29.\n          When a transmitter  is  remotely  looped,  all  of  its  HAP\n
    \    messages  will  be  returned, unmodified, over the access link by\n     the
    receiver.  The receiver will not send any of its own messages\n     to  the  transmitter
    \ while  it  is implementing the loop.  SIMP-\n     generated messages are distinguished
    from host-generated messages\n     by means of the Loopback Bit that is in every
    HAP message header.\n          Two types of remote loopback may be requested:
    \ loopback  at\n     the  receiver's interface hardware and loopback at the receiver's\n
    \    I/O driver software.  HAP does not specify the  manner  in  which\n     the
    \ receiver  should  implement  these loops; additionally, some\n     receivers
    may  use  interface  hardware  which  is  incapable  of\n     looping the transmitter's
    messages, only allowing the receiver to\n     provide software loops.  A receiver
    may not be able to  interpret\n     the  transmitter's  messages as it is looping
    them back.  If such\n     interpretation is possible, however, the receiver will
    not act on\n     any   of  the  transmitter's  messages  other  than  requests
    \ to\n     reinitialize the SIMP-host link  (Restart  Request  (RR)  control\n
    \    messages; see Section 8.)\n          When a receiver initiates a loopback
    condition  in  response\n     to  a  loopback request, it makes an implicit promise
    to maintain\n     the condition for the duration specified in the Loopback  Request\n
    \    message.  However, if an unanticipated condition such as a system\n     restart
    occurs in either the transmitter  or  the  receiver,  the\n     affected  unit
    \ will  try  to  reinitialize the SIMP-host link by\n     sending an RR message
    to the other unit.  If the  RR  message  is\n     recognized  by  the other unit
    a link initialization sequence can\n     be  completed.   This  will  restore
    \ the  link  to  an  unlooped\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    condition  even  if  the  specified  loop  duration  has  not yet\n     expired.
    \ If a  receiver  cannot  interpret  a  transmitter's  RR\n     messages,  and
    \ in  the  absence  of operator intervention at the\n     receiver, the loop will
    remain in place for its duration.\n          HAP does not specify the  characteristics
    \ of  any  loopback\n     conditions  that  may be locally implemented by a given
    unit.  An\n     example of such a condition is that obtained when a SIMP commands\n
    \    its  host interface to loop back its own messages.  If such local\n     loop
    conditions also cause the reflection  of  messages  received\n     from  the  remote
    unit, the remote unit will detect the condition\n     via the HAP header Loopback
    Bit.\n          A specific sequence must be followed for setting up a remote\n
    \    loopback  condition.   It  begins  after  the  HAP  link has been\n     initialized
    and a decision is made to request a remote loop.  The\n     transmitter then sends
    a Loopback Request message to the receiver\n     and waits for either (1) a  10-second
    \ timer  to  expire,  (2)  a\n     \"Can't  implement  loop\"  Unnumbered  Response
    \ message  from the\n     receiver, or (3) one of its own reflected messages.
    \ If event (1)\n     or  (2) occurs the request has failed and the transmitter
    may, at\n     its option, try again with a new Loopback  Request  message.   If\n
    \    event   (3)  occurs,  the  remote  loopback  condition  has  been\n     established.
    \ While waiting for one  of  these  events,  messages\n     from  the receiver
    are processed normally.  Note that RR messages\n     arriving from the receiver
    during this time  will  terminate  the\n     loopback request.\n          When
    a receiver gets a Loopback Request message,  it  either\n     implements  the
    \ requested  loop  for  the specified duration, or\n     returns a \"Can't implement
    loop\" response  without  changing  the\n     state  of  the  link.  The latter
    response would be returned, for\n     example, if a receiver is incapable of implementing
    \ a  requested\n     hardware  loop.   A  receiver should initiate reinitialization
    of\n     the link with an RR  message(s)  whenever  a  loopback  condition\n     times
    out.\n          There is  one  asymmetry  that  is  required  in  the  above\n
    \    sequence  to resolve the (unlikely) case where both SIMP and host\n     request
    a remote loopback at the same time. If a SIMP receives  a\n     Loopback  Request
    \ message from a host while it is itself waiting\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    for an event of type (1)-(3), it will return a  \"Can't  implement\n     loop\"
    \ response to the host and will continue to wait.  A host in\n     the converse
    situation, however, will abort its loopback  request\n     and will instead act
    on the SIMP's loopback request.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0       | 1|LB|GOPRI|   XXXXX   | LOOP TYPE |     8     |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    1       |                HEADER CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    2       |                LOOP DURATION                  |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                      Figure 29 . LOOPBACK REQUEST\n     0[15]     Message Type
    = 1 (Control Message).\n     0[14]     Loopback Bit.\n     0[12-13]  Go-Priority.\n
    \    0[8-11]   Reserved.\n     0[4-7]    Loop Type.  This field indicates the
    type of loop  that\n               is being requested as follows:\n                    0
    = Undefined\n                    1 = Loop at interface (hardware loop)\n                    2
    = Loop at driver (software loop)\n                    3-15 = Undefined\n     0[0-3]
    \   Control Message Type = 8 (Loopback Request).\n     1[0-15]   Header Checksum.
    \ Covers words 0-2.\n     2[0-15]   Loop  Duration.   The   transmitter   of  a
    \   Loopback\n               Request  message uses this field  to specify the
    number\n               of seconds that the loop is to  be  maintained  by  the\n
    \              receiver.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \    10  Other Control Messages\n          Before a SIMP or a host  voluntarily
    \ disables  a  SIMP-host\n     link, it should send at least one Link Going Down
    control message\n     over that link.  The format of such a message is  illustrated
    \ in\n     Figure  30.   HAP  does  not  define the action(s) that should be\n
    \    taken by a SIMP or a  host  when  such  a  message  is  received;\n     informing
    \ the Network Operations Center (NOC) and/or the network\n     users of the impending
    event is a typical course of action.  Note\n     that  each Link Going Down message
    only pertains to the SIMP-host\n     link that it is sent over; if a host and
    a SIMP are connected  by\n     multiple links, these links may be selectively
    disabled.\n          A No Operation (NOP) control message may be sent at any time\n
    \    by a SIMP or a host.  The format of such a message is illustrated\n     in
    Figure 31.  A NOP message contains up to 32 words of arbitrary\n     data which
    are undefined by HAP.  NOP messages may be required in\n     some cases to clear
    the state of the SIMP-host link hardware.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0       | 1|LB|GOPRI|   XXXXX   |  REASON   |     7     |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    1       |                HEADER CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    2       |               TIME UNTIL DOWN                 |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    3       |                DOWN DURATION                  |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                       Figure 30 . LINK GOING DOWN\n     0[15]     Message Type
    = 1 (Control Message).\n     0[14]     Loopback Bit.\n     0[12-13]  Go-Priority.\n
    \    0[8-11]   Reserved.\n     0[4-7]    Reason.  This field is  used by the  SIMP
    or  the  host\n               to  indicate  the  reason  for disabling this SIMP-host\n
    \              link  as follows:\n                    0 = NOT going down:  Cancel
    previous Link\n                        Going Down message\n                    1
    = Unspecified reason\n                    2 = Scheduled PM\n                    3
    = Scheduled hardware work\n                    4 = Scheduled software work\n                    5
    = Emergency restart\n                    6 = Power outage\n                    7
    = Software breakpoint\n                    8 = Hardware failure\n     RFC 907
    \                                     Host Access Protocol\n     July 1984                                           Specification\n
    \                   9 = Not scheduled up\n                   10 = Last warning:
    \ The SIMP  or host  is disabling\n                        the link in 10 seconds\n
    \                  11-15 = Undefined\n     0[0-3]    Control Message Type = 7
    (Link Going Down).\n     1[0-15]   Header Checksum.  Covers words 0-3.\n     2[0-15]
    \  Time Until Down.  This field specifies  the  amount  of\n               time
    \ remaining   until the  SIMP or host  disables the\n               link (in minutes).
    \ An  entry of  zero  indicates  that\n               there is less than a minute
    remaining.\n     3[0-15]   Down Duration.  This field  specifies  the   amount
    \ of\n               time   that  the  SIMP-host  link  will   be  down  (in\n
    \              minutes).   An entry of  zero indicates  that the  down\n               duration
    \ will  be  less than a minute.  An entry of -1\n               (all bits set)
    indicates an indefinite down duration.\n     RFC 907                                      Host
    Access Protocol\n     July 1984                                           Specification\n
    \             15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    0       | 1|LB|            XXXXX            |     6     |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    1       |                HEADER CHECKSUM                |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \    2-N     |                ARBITRARY DATA                 |\n             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \                     Figure 31 . NO OPERATION (NOP)\n     0[15]     Message Type
    = 1 (Control Message).\n     0[14]     Loopback Bit.\n     0[4-13]   Reserved.\n
    \    0[0-3]    Control Message Type = 6 (NOP).\n     1[0-15]   Header Checksum.
    \ Covers words 0-N.\n     2-N       Arbitrary Data.  Up to 32 words of data  may
    \ be  sent.\n               The data are undefined by HAP.\n"
  title: __initial_text__
