- contents:
  - ''
  title: __initial_text__
- contents:
  - 'Simple Mail Transfer Protocol Extension for Message Transfer Priorities

    '
  title: Simple Mail Transfer Protocol Extension for Message Transfer Priorities
- contents:
  - "Abstract\n   This memo defines an extension to the SMTP (Simple Mail Transfer\n
    \  Protocol) service whereby messages are given a label to indicate\n   preferential
    handling, to enable mail handling nodes to take this\n   information into account
    for onward processing.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6710.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  Conventions Used in This Document  . . . . . . . . . .
    . . . .  4\n   3.  Definition of the Priority SMTP Extension  . . . . . . . .
    . .  4\n   4.  Handling of Messages Received via SMTP . . . . . . . . . . . .
    \ 5\n     4.1.  Handling of the MT-PRIORITY Parameter by the Receiving\n           SMTP
    Server  . . . . . . . . . . . . . . . . . . . . . . .  5\n     4.2.  Relay of
    Messages to Other Conforming SMTP/LMTP Servers  .  6\n     4.3.  Relay of Messages
    to Non-Conforming SMTP/LMTP Servers  . .  7\n     4.4.  Mailing Lists and Aliases
    \ . . . . . . . . . . . . . . . .  7\n     4.5.  Gatewaying a Message into a Foreign
    Environment  . . . . .  7\n     4.6.  Interaction with the DSN SMTP Extension
    \ . . . . . . . . .  7\n   5.  The Priority Service Extension . . . . . . . .
    . . . . . . . .  8\n     5.1.  Expedited Transfer . . . . . . . . . . . . . .
    . . . . . .  9\n     5.2.  Timely Delivery  . . . . . . . . . . . . . . . . .
    . . . . 10\n   6.  Use of MT-PRIORITY with LMTP . . . . . . . . . . . . . . .
    . . 10\n   7.  Syntax . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    11\n   8.  Example  . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n
    \  9.  Deployment Considerations  . . . . . . . . . . . . . . . . . . 14\n     9.1.
    \ Multiple MX Records  . . . . . . . . . . . . . . . . . . . 14\n     9.2.  Priority
    Assignment Policies . . . . . . . . . . . . . . . 15\n   10. IANA Considerations
    \ . . . . . . . . . . . . . . . . . . . . . 15\n     10.1. Requirements on Priority
    Assignment Policy\n           Registrations  . . . . . . . . . . . . . . . . .
    . . . . . 17\n     10.2. Initial Priority Assignment Policy Registrations . .
    . . . 18\n   11. Security Considerations  . . . . . . . . . . . . . . . . . .
    . 18\n   12. References . . . . . . . . . . . . . . . . . . . . . . . . . . 19\n
    \    12.1. Normative References . . . . . . . . . . . . . . . . . . . 19\n     12.2.
    Informative References . . . . . . . . . . . . . . . . . . 20\n   Appendix A.
    \ Priority Assignment Policy for Military Messaging . . 22\n   Appendix B.  Priority
    Assignment Policy for MIXER  . . . . . . . . 23\n   Appendix C.  Priority Assignment
    Policy for National Security\n                / Emergency Preparedness (NS/EP)
    \ . . . . . . . . . . 24\n   Appendix D.  Possible Implementation Strategies  .
    . . . . . . . . 25\n     D.1.  Probability  . . . . . . . . . . . . . . . . .
    . . . . . . 25\n     D.2.  Preemption of Sessions or Transactions . . . . . .
    . . . . 25\n     D.3.  Resource Allocation Models . . . . . . . . . . . . . .
    . . 26\n   Appendix E.  Background on Design Choices  . . . . . . . . . . . .
    26\n   Appendix F.  Acknowledgements  . . . . . . . . . . . . . . . . . . 27\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Where resources for switching or transferring messages are\n
    \  constrained (e.g., bandwidth, round trip time, transition storage, or\n   processing
    capability), it is desirable to give preferential handling\n   to some messages
    over others, according to their labeled priority.\n   This is particularly important
    during emergencies for first\n   responders (Appendix C) and for environments
    such as military\n   (Appendix A) and aviation (Appendix B) messaging, where messages
    have\n   high operational significance, and the consequences of extraneous\n   delay
    can be significant.\n   In order for an SMTP receiver to be able to relay higher-priority\n
    \  messages first, there needs to be a mechanism to communicate (during\n   both
    Message Submission [RFC6409] and Message Transfer [RFC5321]) the\n   priority
    of each message.  This specification defines this mechanism\n   by specification
    of an SMTP [RFC5321] extension.\n   In order to permit end-to-end use of this
    extension across an email\n   infrastructure that does not support it, a companion
    tunneling\n   mechanism is defined in [PRIORITY-TUNNELING] that uses a new message\n
    \  header field [RFC5322].\n   This extension provides services to some classes
    of users in networks\n   with limited available bandwidth or long round trip times,
    when the\n   actual message transfer over the network can create a significant\n
    \  portion of the overall message delivery time from a sender to a\n   recipient,
    for example, over a satellite or high-frequency radio\n   link.  It is also useful
    in case of a Mail Transfer Agent (MTA) queue\n   buildup due to the rate of incoming
    messages being higher than the\n   rate of outgoing messages.  When neither of
    the two conditions\n   mentioned above is true, the use of the MT-PRIORITY SMTP
    extension\n   will not result in better SMTP service to any user.  Also note that\n
    \  while this SMTP extension can help in improving delivery speed for\n   higher-priority
    messages, it does not provide any guarantees that for\n   two given messages with
    priorities M and N (M > N) submitted\n   simultaneously, the message with priority
    M will arrive earlier than\n   the message with priority N. That is, this extension
    calls for best\n   effort to provide preferential processing.\n   Besides the
    actions taken at the application level, it can thus be\n   important to deploy
    priority or precedence mechanisms offered by the\n   network itself to ensure
    timely delivery of the emails.  Examples\n   would be the use of DiffServ [RFC2474],
    RSVP [RFC2205], and [RFC6401]\n   (an extension to RSVP that prioritizes reservations).\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119] when they\n   appear in ALL CAPS.  These words also appear in this
    document in\n   lower case as plain English words, absent their normative meanings.\n
    \  The formal syntax uses the Augmented Backus-Naur Form (ABNF)\n   [RFC5234]
    notation including the core rules defined in Appendix B of\n   RFC 5234 [RFC5234].\n
    \  In examples, \"C:\" and \"S:\" indicate lines sent by the client and\n   server,
    respectively.  Line breaks that do not start with a new \"C:\"\n   or \"S:\" exist
    for editorial reasons and are not a part of the\n   protocol.\n   This document
    uses the term \"priority\" specifically in relation to\n   the internal treatment
    of a message by the server.  Messages with\n   higher priorities may be given
    expedited handling, and those with\n   lower priorities may be handled only as
    resources become available.\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Definition of the Priority SMTP Extension\n   The Priority SMTP service extension
    is defined as follows:\n   1.  The textual name of this extension is \"Priority
    Message\n       Handling\".\n   2.  The EHLO keyword value associated with this
    extension is\n       \"MT-PRIORITY\".\n   3.  The EHLO keyword has an OPTIONAL
    parameter that conveys the name\n       of the Priority Assignment Policy (see
    Section 9.2) used by the\n       server.  (See the <mt-priority-ehlo> ABNF non-terminal
    in\n       Section 7 for details of its syntax.)  Absence of the parameter\n       means
    that the server is unwilling to disclose its Priority\n       Assignment Policy.
    \ Clients can choose to use the MT-PRIORITY\n       SMTP extension even if they
    don't recognize a particular Priority\n       Assignment Policy name advertised
    by a server.\n   4.  No additional SMTP verbs are defined by this extension.\n
    \  5.  One optional parameter (\"MT-PRIORITY\") is added to the MAIL FROM\n       command.
    \ The value associated with this parameter is a decimal\n       integer number
    from -9 to 9 (inclusive) indicating the priority\n       of the email message
    (see Appendix E for more details on why this\n       range was selected).  The
    syntax of the MT-PRIORITY parameter is\n       described by the <priority-value>
    ABNF non-terminal defined in\n       Section 7.  Higher numbers mean higher priority.\n
    \  6.  The maximum length of a MAIL FROM command line is increased by 15\n       octets
    by the possible addition of a space, the MT-PRIORITY\n       keyword, and a priority
    value.\n   7.  The MT-PRIORITY extension is valid for the submission service\n
    \      [RFC6409] and the Local Mail Transfer Protocol (LMTP) [RFC2033].\n"
  title: 3.  Definition of the Priority SMTP Extension
- contents:
  - "4.  Handling of Messages Received via SMTP\n   This section describes how a conforming
    SMTP server should handle any\n   messages received via SMTP.\n"
  - contents:
    - "4.1.  Handling of the MT-PRIORITY Parameter by the Receiving SMTP Server\n
      \  The following rules apply to SMTP transactions in a server that\n   supports
      the MT-PRIORITY parameter:\n   1.  If any of the associated <esmtp-value>s (as
      defined in Section\n       4.1.2 of [RFC5321]) are not syntactically valid,
      or if there is\n       more than one MT-PRIORITY parameter in a particular MAIL
      FROM\n       command, the server MUST return an error, for example \"501 syntax\n
      \      error in parameter\" (with the 5.5.2 Enhanced Status Code\n       [RFC2034]
      [RFC5248]).\n   2.  When inserting a Received header field as specified in Section\n
      \      4.4 of [RFC5321], the compliant MTA/MSA (Mail Submission Agent)\n       SHOULD
      include the \"PRIORITY\" clause whose syntax is specified in\n       Section
      7.\n   3.  The received MT-PRIORITY parameter value SHOULD be logged as part\n
      \      of any logging of message transactions.\n   4.  If the sending SMTP client
      specified the MT-PRIORITY parameter to\n       the MAIL FROM command, then the
      value of this parameter is the\n       message priority.\n   5.  If no priority
      has been determined by the above, the server may\n       use its normal policies
      to set the message's priority.  By\n       default, each message has priority
      0.\n   The SMTP server MUST NOT allow \"upgraded\" (positive) priorities from\n
      \  untrusted (e.g., unauthenticated) or unauthorized sources.  (One\n   example
      of an \"unauthorized source\" might be an SMTP sender that\n   successfully
      authenticated using SMTP AUTH, but that is not\n   explicitly authorized to
      use the SMTP MT-PRIORITY service.  In case\n   of MTA-to-MTA transfer, such
      authorization will usually be done as a\n   bilateral agreement between two
      domains to honor priorities from each\n   other.)  The server MAY, however,
      allow an untrusted source to lower\n   its own message's priorities -- consider,
      for example, an email\n   marketer that voluntarily sends its marketing messages
      at a negative\n   priority.\n   The SMTP server MAY also alter the message priority
      (to lower or to\n   raise it) in order to enforce some other site policy.  (Note
      that\n   this also includes the case in which the priority is not explicitly\n
      \  specified.)  For example, an MSA might have a mapping table that\n   assigns
      priorities to messages based on authentication credentials.\n   If the SMTP
      server changes (lowers or raises) the priority of a\n   message, it SHOULD use
      the X.3.6 Enhanced Status Code [RFC2034] in\n   its response to the MAIL FROM
      or in the final response to the DATA\n   (or similar) command.  The human readable
      text part after the status\n   code contains the new priority, followed by SP
      (ASCII space) and\n   explanatory human readable text.\n   Alternatively, an
      SMTP server that is an MSA MAY reject a message\n   based on the determined
      priority.  In such cases, the MSA SHOULD use\n   the 450 or 550 reply code.
      \ The corresponding Enhanced Status Code\n   MUST be X.7.15 [RFC2034] if the
      determined priority level is below\n   the lowest priority currently acceptable
      for the receiving SMTP\n   server.  Note that this condition might be temporary.
      \ In some\n   environments, operational policies might permit periods of operation\n
      \  that relay only higher-priority messages and reject lower priority\n   ones.
      \ Such handling choices need to be specified for that\n   operational environment.\n"
    title: 4.1.  Handling of the MT-PRIORITY Parameter by the Receiving SMTP Server
  - contents:
    - "4.2.  Relay of Messages to Other Conforming SMTP/LMTP Servers\n   The following
      rules govern the behavior of a conforming MTA (in the\n   role of an SMTP/LMTP
      client) when relaying a message that was\n   received via the SMTP protocol
      to an SMTP/LMTP server that supports\n   the MT-PRIORITY extension:\n   1.  An
      MT-PRIORITY parameter with the value determined by the\n       procedure from
      Section 4.1 MUST appear in the MAIL FROM command\n       issued when the message
      is relayed to an MTA/MDA (Mail Delivery\n       Agent) that also supports the
      MT-PRIORITY extension.  (Note that\n       due to site policy, this value might
      be different from the value\n       received from the SMTP client.  See Section
      4.1 for details.\n       Also note that this value might be different than the
      priority\n       level at which the MTA actually handles the request, due to
      the\n       rounding described in Section 5.)\n   2.  Further processing of
      the MT-PRIORITY parameter is described in\n       Section 5.\n"
    title: 4.2.  Relay of Messages to Other Conforming SMTP/LMTP Servers
  - contents:
    - "4.3.  Relay of Messages to Non-Conforming SMTP/LMTP Servers\n   The following
      rules govern the behavior of a conforming MTA (in the\n   role of an SMTP/LMTP
      client) when relaying a message that was\n   received via the SMTP protocol
      to an SMTP/LMTP server that does not\n   support the MT-PRIORITY extension:\n
      \  1.  The MTA relays the message without including the MT-PRIORITY\n       parameter
      in the MAIL FROM command.\n"
    title: 4.3.  Relay of Messages to Non-Conforming SMTP/LMTP Servers
  - contents:
    - "4.4.  Mailing Lists and Aliases\n   Several types of mechanisms exist to redirect
      or forward messages to\n   alternative or multiple addresses [RFC5598].  Examples
      for this are\n   aliases and mailing lists [RFC5321].\n   If a message is subject
      to such processing, the Mediator node\n   (Section 2.1 of [RFC5598]) SHOULD
      retain the MT-PRIORITY parameter\n   value for all expanded and/or translated
      addresses.\n"
    title: 4.4.  Mailing Lists and Aliases
  - contents:
    - "4.5.  Gatewaying a Message into a Foreign Environment\n   The following rules
      govern the behavior of a conforming MTA when\n   gatewaying a message that was
      received via the SMTP protocol into a\n   foreign (non-SMTP) environment:\n
      \  1.  If the destination environment is unable to provide an equivalent\n       of
      the MT-PRIORITY parameter, the conforming MTA SHOULD behave as\n       if it
      is relaying to a non-conformant SMTP server (Section 4.3).\n   2.  If the destination
      environment is capable of providing an\n       equivalent of the MT-PRIORITY
      parameter, the conforming MTA\n       SHOULD behave as if it is relaying to
      a conformant SMTP server\n       (Section 4.2), converting the MT-PRIORITY value
      to the equivalent\n       in the destination environment.\n"
    title: 4.5.  Gatewaying a Message into a Foreign Environment
  - contents:
    - "4.6.  Interaction with the DSN SMTP Extension\n   An MTA that needs to generate
      a delivery report (whether for\n   successful delivery or delayed/failed delivery)
      for a message it is\n   processing SHOULD use the priority value of the message
      as the\n   priority of the generated delivery report.  In particular, this\n
      \  requirement applies to MTAs that also implement [RFC3461].\n   For delivery
      reports (DSNs) received by an MTA for relay, processing\n   rules specified
      in Section 4.1 apply -- there is no special\n   processing for relayed DSNs.
      \ It might seem tempting to try to detect\n   DSNs and process them at an elevated
      priority under the assumption\n   that failure notices need to get through quickly,
      even or perhaps\n   especially if the DSN came from an untrusted source.  But
      such a\n   policy can create an exposure to fake DSN attacks by giving untrusted\n
      \  systems a way to inject high-priority messages.  Implementation of\n   such
      a policy also assumes that DSNs can be detected reliably, which\n   may not
      be the case since some systems use nonstandard DSN formats.\n"
    title: 4.6.  Interaction with the DSN SMTP Extension
  title: 4.  Handling of Messages Received via SMTP
- contents:
  - "5.  The Priority Service Extension\n   The priorities of messages affect the
    order in which messages are\n   transferred from the client to the server.  This
    is largely\n   independent from the order in which they were originally received
    by\n   the server.\n   A message priority is a decimal integer in the range from
    -9 to 9\n   (inclusive).  SMTP servers compliant with this specification are not\n
    \  required to support all 19 distinct priority levels (i.e., to treat\n   each
    priority value as a separate priority), but they MUST implement\n   all distinct
    priority levels specified in the Priority Assignment\n   Policy (see Section 9.2)
    implemented by the server.  That is, an\n   implementation that only supports
    N priority levels (where N < 19)\n   will internally round up a syntactically
    valid priority value that\n   isn't supported to the next higher supported number
    (or to the\n   highest supported priority, if the value is higher than any supported\n
    \  priority).  For example, an implementation can treat priority values\n   below
    and including -4 as priority -4, priority -3 as priority -2,\n   and all priorities
    starting from 5 can be treated as priority 6.\n   (See Section 9.2 for implementation/deployment
    considerations related\n   to Priority Assignment Policy.)\n   Irrespective of
    the number of distinct priority levels supported by\n   the SMTP server, when
    relaying the message to the next hop or\n   delivering it over LMTP, the SMTP
    server MUST communicate the\n   priority value as determined in Section 4.1.\n
    \  Note: 19 possible priority levels are defined by this specification\n   for
    extensibility.  For example, a particular implementation or\n   deployment environment
    might need to provide finer-grained control\n   over message transfer priorities.
    \ See Appendix E for more details on\n   why the range from -9 to 9 was selected.\n
    \  As per the Priority Assignment Policy, some SMTP servers MAY impose\n   additional
    maximum message size constraints for different message\n   transfer priorities;
    for example, messages with priority 6 might not\n   be larger than 4 Kb.  If an
    SMTP server chooses to reject a message\n   because it is too big for the determined
    priority, it SHOULD use 552\n   reply codes together with the X.7.16 Enhanced
    Status Code [RFC2034].\n   Implementation Note: If the SMTP server also supports
    the SMTP SIZE\n   extension [RFC1870], then an SMTP client can use both SIZE=
    and\n   MT-PRIORITY= parameters on the MAIL FROM command.  This allows the\n   server
    to perform early rejection of a message in case the message\n   size is too big
    for the specified priority, thus avoiding wasting\n   bandwidth by transferring
    the message first and then rejecting it due\n   to its size.\n   The Priority
    Service Extension can be combined with the DELIVERBY\n   [RFC2852] SMTP service
    extension; however, there is no requirement\n   that both extensions always be
    implemented together.\n"
  - contents:
    - "5.1.  Expedited Transfer\n   The main service provided by the Priority Message
      Handling SMTP\n   Service Extension is expedited transfer of emails with a higher\n
      \  priority.  Therefore, an SMTP client that has more than one email to\n   send
      at a given time sends those with a higher priority before those\n   with a lower
      one.  Additionally, the retry interval and/or default\n   timeout before a non-delivery
      report is generated MAY be lower (more\n   aggressive) for messages of higher
      priority.  Lower retry intervals/\n   default timeouts are controlled by the
      local MTA policy.\n   Note that as this SMTP extension requires some sort of
      trust\n   relationship between a sender and a receiver and thus some form of\n
      \  authentication (whether using SMTP AUTH, TLS, IP address whitelist,\n   etc.),
      so senders using this SMTP extension will not be subject to\n   greylisting
      [RFC6647], unless they are unauthorized to use this SMTP\n   extension due to
      an explicit policy decision or a misconfiguration\n   error.  However, note
      that in case of connection-level or SMTP EHLO/\n   HELO greylisting, SMTP AUTH
      or TLS authentication options are not\n   available to the server.\n   In order
      to make implementations of this extension easier, this SMTP\n   extension only
      allows a single priority for all recipients of the\n   same message.\n   Within
      a priority level, the MTA uses its normal algorithm (the\n   algorithm used
      in absence of this SMTP extension) for determining\n   message processing order.\n
      \  Several possible ways of implementing expedited transfer are\n   described
      in more details in Appendix D.  Note that these sections\n   don't describe
      all details and pitfalls for each implementation\n   strategy.\n"
    title: 5.1.  Expedited Transfer
  - contents:
    - "5.2.  Timely Delivery\n   An important constraint (usually associated with
      higher-priority\n   levels) in some environments is that messages with high-priority\n
      \  values have some delivery time constraints.  In some cases, higher\n   priorities
      mean a shorter maximum time allowed for delivery.\n   Unextended SMTP does not
      offer a service for timely delivery, i.e.,\n   \"deliver this message within
      X seconds from submission\" service.  The\n   \"Deliver By SMTP Service Extension\"
      (DELIVERBY Extension) defined in\n   [RFC2852] is an example of an SMTP extension
      providing a service that\n   can be used to implement timely delivery.  Note
      that SMTP DELIVERBY\n   and SMTP MT-PRIORITY extensions are complimentary and
      can be used\n   together (assuming the SMTP server they are talking to advertises\n
      \  support for both).  However, note that use of the DELIVERBY extension\n   alone
      does not guarantee any priority processing.  If the client is\n   using both
      SMTP DELIVERBY and SMTP MT-PRIORITY at the same time, the\n   client can consider
      using smaller DELIVERBY timeouts for higher-\n   priority messages.\n"
    title: 5.2.  Timely Delivery
  title: 5.  The Priority Service Extension
- contents:
  - "6.  Use of MT-PRIORITY with LMTP\n   An LMTP server can advertise support for
    the MT-PRIORITY extension if\n   it supports any combination of the following
    features:\n   1.  The LMTP server is architected in such a way that it can deliver\n
    \      higher-priority messages quicker than lower-priority messages.\n   2.  The
    LMTP server logs that the MT-PRIORITY extension was used by\n       the previous
    SMTP hop.\n   3.  The LMTP server is exposing information about the MT-PRIORITY\n
    \      extension to a delivery-time filtering engine such as Sieve\n       [RFC5228].\n"
  title: 6.  Use of MT-PRIORITY with LMTP
- contents:
  - "7.  Syntax\n   priority-value = ([\"-\"] NZDIGIT) / \"0\"\n                    ;
    Allowed values are from -9 to 9 inclusive\n   NZDIGIT = %x31-39\n             ;
    \"1\"-\"9\"\n   CFWS = <defined in RFC 5322>\n   ; New \"clause\" that can be
    used in the Received header field\n   Pri  = CFWS \"PRIORITY\" FWS priority-value\n
    \            ; Complies with the <Additional-Registered-Clauses>\n             ;
    non-terminal syntax from RFC 5321.\n   mt-priority-ehlo = \"MT-PRIORITY\" [SP
    priority-profile]\n             ; Complies with the <ehlo-line> ABNF production\n
    \            ; from RFC 5321.\n   priority-profile = 1*20(ALPHA / DIGIT / \"-\"
    / \"_\" / \".\")\n             ; name of the Priority Assignment Profile advertized
    in\n             ; the MT-PRIORITY EHLO response.\n   ALPHA = <Defined in RFC
    5234>\n   DIGIT = <Defined in RFC 5234>\n"
  title: 7.  Syntax
- contents:
  - "8.  Example\n   The original submission (from MUA (Mail User Agent) to MSA) might\n
    \  appear as shown below.  Note that the example is also making use of\n   the
    STARTTLS [RFC3207], DELIVERBY [RFC2852], and DSN [RFC3461] SMTP\n   extensions,
    even though there is no requirement that these other\n   extensions be supported
    when the MT-PRIORITY SMTP extension is\n   implemented.\n        S: 220 example.com
    SMTP server here\n        C: EHLO mua.example.com\n        S: 250-example.com\n
    \       S: 250-STARTTLS\n        S: 250-AUTH SCRAM-SHA-1 DIGEST-MD5\n        S:
    250-DSN\n        S: 250-DELIVERBY\n        S: 250-ENHANCEDSTATUSCODES\n        S:
    250 MT-PRIORITY MIXER\n        C: AUTH SCRAM-SHA-1\n        [...authentication
    exchange...]\n        S: 235 2.7.0 Authentication successful\n        C: MAIL
    FROM:<eljefe@example.com> BY=125;R ENVID=QQ314159\n            MT-PRIORITY=3\n
    \       S: 250 2.1.0 <eljefe@example.com> sender ok\n        C: RCPT TO:<topbanana@example.net>\n
    \       S: 250 2.1.5 <topbanana@example.net> recipient ok\n        C: RCPT TO:<Dana@Ivory.example.net>
    NOTIFY=SUCCESS,FAILURE\n            ORCPT=rfc822;Dana@Ivory.example.net\n        S:
    250 2.1.5 <Dana@Ivory.example.net> recipient ok\n        C: DATA\n        S: 354
    okay, send message\n        C:  (message goes here)\n        C: .\n        S:
    250 2.1.0 message accepted\n        C: QUIT\n        S: 221 2.0.0 goodbye\n   In
    the above example, the MUA has specified the priority 3 and the\n   server has
    accepted it.  The server is advertising the MIXER Priority\n   Assignment Policy
    (the default).  Another variant of the initial\n   submission might look like:\n
    \       S: 220 example.com SMTP server here\n        C: EHLO mua.example.com\n
    \       S: 250-example.com\n        S: 250-STARTTLS\n        S: 250-AUTH SCRAM-SHA-1
    DIGEST-MD5\n        S: 250-DSN\n        S: 250-DELIVERBY\n        S: 250-ENHANCEDSTATUSCODES\n
    \       S: 250 MT-PRIORITY\n        C: AUTH SCRAM-SHA-1\n        [...authentication
    exchange...]\n        S: 235 2.7.0 Authentication successful\n        C: MAIL
    FROM:<eljefe@example.com> BY=125;R ENVID=QQ314159\n        S: 250 2.1.0 <eljefe@example.com>
    sender ok\n        C: RCPT TO:<topbanana@example.net>\n        S: 250 2.1.5 <topbanana@example.net>
    recipient ok\n        C: RCPT TO:<Dana@Ivory.example.net> NOTIFY=SUCCESS,FAILURE\n
    \           ORCPT=rfc822;Dana@Ivory.example.net\n        S: 250 2.1.5 <Dana@Ivory.example.net>
    recipient ok\n        C: DATA\n        S: 354 okay, send message\n        C:  (message
    goes here)\n        C: .\n        S: 250 X.3.6 3 is the new priority assigned
    to the message\n        C: QUIT\n        S: 221 2.0.0 goodbye\n   In the above
    example, the MUA has not specified any priority, but the\n   MSA has assigned
    priority 3 to the message.  Also note that the\n   server is unwilling to adverte
    the Priority Assignment Policy it\n   supports in the EHLO response.\n   The MSA
    relays the message to the next MTA.\n        S: 220 example.net SMTP server here\n
    \       C: EHLO example.com\n        S: 250-example.net\n        S: 250-DSN\n
    \       S: 250-DELIVERBY\n        S: 250 MT-PRIORITY STANAG4406\n        C: MAIL
    FROM:<eljefe@example.com> BY=120;R ENVID=QQ314159\n            MT-PRIORITY=3\n
    \       S: 250 <eljefe@example.com> sender ok\n        C: RCPT TO:<topbanana@example.net>\n
    \       S: 250 <topbanana@example.net> recipient ok\n        C: RCPT TO:<Dana@Ivory.example.net>
    NOTIFY=SUCCESS,FAILURE\n            ORCPT=rfc822;Dana@Ivory.example.net\n        S:
    250 <Dana@Ivory.example.net> recipient ok\n        C: DATA\n        S: 354 okay,
    send message\n        C:  (message goes here)\n        C: .\n        S: 250 message
    accepted\n        C: QUIT\n        S: 221 goodbye\n   The receiving SMTP server
    advertises support for the \"STANAG4406\"\n   Priority Assignment Policy, which
    supports 6 priority levels as\n   described in Appendix A.  This means that the
    server will use the\n   priority value 4 internally (the next supported priority
    higher or\n   equal to 3) and will communicate the priority value 3 when relaying\n
    \  it to the next hop (if necessary).\n"
  title: 8.  Example
- contents:
  - '9.  Deployment Considerations

    '
  - contents:
    - "9.1.  Multiple MX Records\n   If multiple DNS MX records are used to specify
      multiple servers for a\n   domain in Section 5 of [RFC5321], it is strongly
      advised that all of\n   them support the MT-PRIORITY extension and handle priorities
      in\n   exactly the same way.  If one or more servers behave differently in\n
      \  this respect, then it is strongly suggested that none of the servers\n   support
      the MT-PRIORITY extension.  Otherwise, unexpected differences\n   in message
      delivery speed or even rejections can happen during\n   temporary or permanent
      failures, which users might perceive as\n   serious reliability issues.\n"
    title: 9.1.  Multiple MX Records
  - contents:
    - "9.2.  Priority Assignment Policies\n   This document allows up to 19 distinct
      priority values.  In a\n   particular operating environment, independent originators
      need to\n   assign priority values according to, roughly, the same criteria,
      so\n   that the same \"high priority message\" doesn't get associated with the\n
      \  value 3 for one sender and with the value 5 for another, as such\n   messages
      might unintentionally receive different preferential\n   treatment.\n   In order
      to achieve consistent behavior in an operating environment,\n   the Priority
      Assignment Policy (together with possible associated\n   restrictions on maximum
      message sizes for each priority (if any),\n   default timeouts, etc.) should
      be documented for the environment.\n   Each SMTP/LMTP server supports a Priority
      Assignment Policy, whether\n   explicit (advertised in the MT-PRIORITY EHLO
      response) or implicit\n   (not advertised).  The default Priority Assignment
      Policy (assumed by\n   the client when no Priority Assignment Policy name is
      advertised in\n   the MT-PRIORITY EHLO response) is specified in Appendix B.
      \ Two other\n   policies are specified in Appendix A and Appendix C.  Additional\n
      \  policies SHOULD be registered with IANA as specified in Section 10.1.\n   Moreover,
      all MSAs/MTAs/MDAs within any given Administrative\n   Management Domain has
      to be configured to use the same Priority\n   Assignment Policy.  Otherwise,
      a differently configured MSA/MTA/MDA\n   can expose the whole domain to possible
      attacks, like injection of a\n   high-priority fake DSN.\n   When this SMTP
      extension is deployed across multiple cooperating\n   Administrative Domains,
      such Administrative Domains need to use the\n   same or at least compatible
      policies.  Again, differences in policies\n   (for example, differences in how
      users are authenticated or\n   differences in how priorities are handled) can
      expose an\n   Administrative Domain to weaknesses in a partner domain.\n"
    title: 9.2.  Priority Assignment Policies
  title: 9.  Deployment Considerations
- contents:
  - "10.  IANA Considerations\n   IANA has added the MT-PRIORITY SMTP extension to
    the \"SMTP Service\n   Extensions\" registry\n   (http://www.iana.org/assignments/mail-parameters).
    \ This extension is\n   suitable for the Submit port.\n   IANA has added the following
    new Received header field clause to the\n   \"Additional-registered-clauses\"
    sub-registry\n   (http://www.iana.org/assignments/mail-parameters) to help with\n
    \  tracing email messages delivered using the MT-PRIORITY SMTP\n   extension:\n
    \  Clause name: PRIORITY\n   Description: Records the value of the MT-PRIORITY
    parameter specified\n                in the MAIL FROM command\n   Syntax of the
    value: See Section 7 of RFC 6710\n   Reference: RFC 6710\n   IANA has added the
    following Enumerated Status Codes to the \"Simple\n   Mail Transfer Protocol (SMTP)
    Enhanced Status Codes\" registry\n   (http://www.iana.org/assignments/smtp-enhanced-status-codes)\n
    \  established by [RFC5248]:\n   1)  Code:  X.7.15\n       Sample Text:  Priority
    Level is too low\n       Associated basic status code:  450, 550 (other 4XX or
    5XX codes\n          are allowed)\n       Description:  The specified priority
    level is below the lowest\n          priority acceptable for the receiving SMTP
    server.  This\n          condition might be temporary, for example the server
    is\n          operating in a mode where only higher-priority messages are\n          accepted
    for transfer and delivery, while lower-priority\n          messages are rejected.\n
    \      Reference:  RFC 6710\n       Submitter:  A. Melnikov\n       Change controller:
    \ IESG\n   2)  Code:  X.7.16\n       Sample Text:  Message is too big for the
    specified priority\n       Associated basic status code:  552 (other 4XX or 5XX
    codes are\n       allowed)\n       Description:  The message is too big for the
    specified priority.\n       This condition might be temporary, for example the
    server is\n       operating in a mode where only higher-priority messages below
    a\n       certain size are accepted for transfer and delivery.\n       Reference:
    \ RFC 6710\n       Submitter:  A. Melnikov\n       Change controller:  IESG\n
    \  3)  Code:  X.3.6\n       Sample Text:  Requested priority was changed\n       Associated
    basic status code:  250 or 251\n       Description:  The message was accepted
    for relay/delivery, but\n          the requested priority (possibly the implied
    default) was not\n          honored.  The human readable text after the status
    code\n          contains the new priority, followed by SP (space) and\n          explanatory
    human readable text.\n       Reference:  RFC 6710\n       Submitter:  A. Melnikov\n
    \      Change controller:  IESG\n   IANA has created a new IANA registry called
    \"SMTP PRIORITY Extension\n   Priority Assignment Policy\".  Future registrations
    in this registry\n   are governed by the \"Specification Required\" [RFC5226]
    IANA\n   registration policy.  Requirements on registrations (to be verified\n
    \  by the Designated Expert) are specified in Section 10.1.  Changes to\n   registrations
    undergo the same process as initial registrations.  In\n   cases of significant
    changes to registrations (other than editorial\n   clarifications), the Designated
    Expert MAY require registration of a\n   Priority Assignment Policy with a new
    name instead of updating the\n   existing one.\n"
  - contents:
    - "10.1.  Requirements on Priority Assignment Policy Registrations\n   Priority
      Assignment Policy registrations with IANA are accompanied by\n   a policy specification
      document that MUST specify the following\n   information:\n   1.  The Priority
      Assignment Policy name, which is a case-insensitive\n       string of 1 to 20
      US-ASCII characters to be advertised as the\n       MT-PRIORITY EHLO parameter.
      \ Allowed characters are: ALPHA,\n       DIGIT, \"-\", \"_\", and \".\"\n   2.
      \ Number of distinct priority levels supported by all servers\n       implementing
      the policy and their respective values.\n   3.  For each supported priority
      level: default retry timeouts (how\n       often to retry sending a message
      if there is a temporary error to\n       transfer/deliver it).  The policy specification
      can also\n       explicitly define such information as implementation and/or\n
      \      deployment specific.\n   4.  For each supported priority level: default
      expiration timeouts\n       (how long to attempt transfer/delivery before the
      message expires\n       and causes a non-delivery report to be generated).  The
      policy\n       specification can also explicitly define such information as\n
      \      implementation and/or deployment specific.  Note that a client\n       can
      override such default when it uses additional SMTP extensions\n       (such
      as the one mentioned in Section 5.2).\n   5.  Maximum message size associated
      with each priority level.  The\n       policy specification can also explicitly
      define such information\n       as implementation and/or deployment specific.\n
      \  6.  Any requirements/restrictions on the kind of SMTP client\n       authentication
      required in order for an SMTP server implementing\n       this policy to accept
      priority values specified by an SMTP\n       client.  For example, this can
      limit which Simple Authentication\n       and Security Layer (SASL) [RFC4422]
      authentication mechanisms are\n       to be used, require TLS, etc.\n   7.  Any
      other information that might affect processing of messages\n       with different
      priorities.\n   8.  Note that the policy specification document is not allowed
      to\n       redefine the allowed range of priorities specified in Section 5\n
      \      and other aspects of handling of different priorities, unless\n       explicitly
      specified by this document.\n"
    title: 10.1.  Requirements on Priority Assignment Policy Registrations
  - contents:
    - "10.2.  Initial Priority Assignment Policy Registrations\n   IANA has registered
      the following initial values in the \"SMTP\n   PRIORITY Extension Priority Assignment
      Policy\" registry:\n             Initial Priority Assignment Policy Registrations\n
      \        +-------------+------------------------+----------------+\n         |
      Policy Name | Reference              | Comment        |\n         +-------------+------------------------+----------------+\n
      \        | MIXER       | Appendix B of RFC 6710 | Default policy |\n         |
      STANAG4406  | Appendix A of RFC 6710 |                |\n         | NSEP        |
      Appendix C of RFC 6710 |                |\n         +-------------+------------------------+----------------+\n"
    title: 10.2.  Initial Priority Assignment Policy Registrations
  title: 10.  IANA Considerations
- contents:
  - "11.  Security Considerations\n   Message Submission Agents ought to only accept
    message transfer\n   priorities from users (or only certain groups of such users)
    who are\n   authenticated and authorized in some way that's acceptable to the\n
    \  MSA.  As part of this policy, they can also restrict maximum priority\n   values
    that different groups of users can request, and can override\n   the priority
    values specified by MUAs.\n   Similarly, MTAs ought to only accept message transfer
    priorities from\n   senders (or only certain groups of such senders) who are\n
    \  authenticated and authorized in some way that's acceptable to the\n   MTA.
    \ As part of this policy, they can also restrict maximum priority\n   values that
    different groups of senders can request, and can override\n   the priority values
    specified by them.\n   In the absence of the policy enforcement mentioned above,
    an SMTP\n   server (whether an MSA or an MTA) implementing this SMTP extension\n
    \  might be susceptible to a denial-of-service attack.  For example,\n   malicious
    clients (MUAs/MSAs/MTAs) can try to abuse this feature by\n   always requesting
    priority 9.\n"
  title: 11.  Security Considerations
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [RFC2033]  Myers, J., \"Local Mail Transfer
      Protocol\", RFC 2033,\n              October 1996.\n   [RFC2034]  Freed, N.,
      \"SMTP Service Extension for Returning Enhanced\n              Error Codes\",
      RFC 2034, October 1996.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
      to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
      \  [RFC3461]  Moore, K., \"Simple Mail Transfer Protocol (SMTP) Service\n              Extension
      for Delivery Status Notifications (DSNs)\",\n              RFC 3461, January
      2003.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing
      an\n              IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n
      \             May 2008.\n   [RFC5234]  Crocker, D., Ed. and P. Overell, \"Augmented
      BNF for Syntax\n              Specifications: ABNF\", STD 68, RFC 5234, January
      2008.\n   [RFC5248]  Hansen, T. and J. Klensin, \"A Registry for SMTP Enhanced\n
      \             Mail System Status Codes\", BCP 138, RFC 5248, June 2008.\n   [RFC5321]
      \ Klensin, J., \"Simple Mail Transfer Protocol\", RFC 5321,\n              October
      2008.\n   [RFC5322]  Resnick, P., Ed., \"Internet Message Format\", RFC 5322,\n
      \             October 2008.\n   [RFC6409]  Gellens, R. and J. Klensin, \"Message
      Submission for Mail\",\n              STD 72, RFC 6409, November 2011.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informative References\n   [ACP123]   CCEB, \"Common Messaging strategy
      and procedures\", ACP 123,\n              May 2009.\n   [PRIORITY-TUNNELING]\n
      \             Melnikov, A. and K. Carlberg, \"Tunneling of SMTP Message\n              Transfer
      Priorities\", Work in Progress, July 2012.\n   [RFC1845]  Crocker, D., Freed,
      N., and A. Cargille, \"SMTP Service\n              Extension for Checkpoint/Restart\",
      RFC 1845,\n              September 1995.\n   [RFC1870]  Klensin, J., Freed,
      N., and K. Moore, \"SMTP Service\n              Extension for Message Size Declaration\",
      STD 10, RFC 1870,\n              November 1995.\n   [RFC2156]  Kille, S., \"MIXER
      (Mime Internet X.400 Enhanced Relay):\n              Mapping between X.400 and
      RFC 822/MIME\", RFC 2156,\n              January 1998.\n   [RFC2205]  Braden,
      B., Ed., Zhang, L., Berson, S., Herzog, S., and S.\n              Jamin, \"Resource
      ReSerVation Protocol (RSVP) -- Version 1\n              Functional Specification\",
      RFC 2205, September 1997.\n   [RFC2474]  Nichols, K., Blake, S., Baker, F.,
      and D. Black,\n              \"Definition of the Differentiated Services Field
      (DS\n              Field) in the IPv4 and IPv6 Headers\", RFC 2474,\n              December
      1998.\n   [RFC2852]  Newman, D., \"Deliver By SMTP Service Extension\", RFC
      2852,\n              June 2000.\n   [RFC3207]  Hoffman, P., \"SMTP Service Extension
      for Secure SMTP over\n              Transport Layer Security\", RFC 3207, February
      2002.\n   [RFC4125]  Le Faucheur, F. and W. Lai, \"Maximum Allocation Bandwidth\n
      \             Constraints Model for Diffserv-aware MPLS Traffic\n              Engineering\",
      RFC 4125, June 2005.\n   [RFC4127]  Le Faucheur, F., Ed., \"Russian Dolls Bandwidth
      Constraints\n              Model for Diffserv-aware MPLS Traffic Engineering\",\n
      \             RFC 4127, June 2005.\n   [RFC4190]  Carlberg, K., Brown, I., and
      C. Beard, \"Framework for\n              Supporting Emergency Telecommunications
      Service (ETS) in\n              IP Telephony\", RFC 4190, November 2005.\n   [RFC4412]
      \ Schulzrinne, H. and J. Polk, \"Communications Resource\n              Priority
      for the Session Initiation Protocol (SIP)\",\n              RFC 4412, February
      2006.\n   [RFC4422]  Melnikov, A., Ed. and K. Zeilenga, Ed., \"Simple\n              Authentication
      and Security Layer (SASL)\", RFC 4422,\n              June 2006.\n   [RFC5228]
      \ Guenther, P., Ed. and T. Showalter, Ed., \"Sieve: An Email\n              Filtering
      Language\", RFC 5228, January 2008.\n   [RFC5598]  Crocker, D., \"Internet Mail
      Architecture\", RFC 5598,\n              July 2009.\n   [RFC6401]  Le Faucheur,
      F., Polk, J., and K. Carlberg, \"RSVP\n              Extensions for Admission
      Priority\", RFC 6401,\n              October 2011.\n   [RFC6647]  Kucherawy,
      M. and D. Crocker, \"Email Greylisting: An\n              Applicability Statement
      for SMTP\", RFC 6647, June 2012.\n   [SMTP-PRI-OLD]\n              Schmeing,
      M., Brendecke, J., and K. Carlberg, \"SMTP\n              Service Extension
      for Priority Message Handling\", Work\n              in Progress, August 2006.\n
      \  [STANAG-4406]\n              NATO, \"STANAG 4406 Edition 2: Military Message
      Handling\n              System\", STANAG 4406, March 2005.\n"
    title: 12.2.  Informative References
  title: 12.  References
- contents:
  - "Appendix A.  Priority Assignment Policy for Military Messaging\n   Military Messaging
    as specified in ACP 123 [ACP123] (also specified\n   in STANAG 4406 [STANAG-4406])
    defines 6 priority (\"precedence\")\n   values.  While ACP 123/STANAG 4406 allow
    for 32 different priority\n   levels (16 levels are reserved for NATO and an additional
    16 are\n   reserved for national use), only 6 are in use in practice.  This\n
    \  section specifies the Priority Assignment Policy for Military\n   Messaging
    and how the MT-PRIORITY parameter can be mapped when\n   gatewaying between SMTP
    and ACP 123/STANAG 4406 environments.\n   Where SMTP is used to support military
    messaging, the following\n   mappings SHOULD be used.\n            Recommended
    Mapping of MT-PRIORITY Values for MMHS\n               +-------------------+----------------------+\n
    \              | MT-PRIORITY value | MMHS Precedence name |\n               +-------------------+----------------------+\n
    \              |         -4        | Deferred             |\n               |
    \        -2        | Routine              |\n               |         0         |
    Priority             |\n               |         2         | Immediate            |\n
    \              |         4         | Flash                |\n               |
    \        6         | Override             |\n               +-------------------+----------------------+\n
    \                                 Table 1\n   The Priority Assignment Policy registration
    for Military Messaging is\n   as follows:\n   1.  The Priority Assignment Policy
    name is \"STANAG4406\".\n   2.  Number of distinct priority levels: 6, as specified
    in the table\n       above.\n   3.  Default retry timeouts for each priority level
    are implementation\n       and/or deployment specific.\n   4.  Default expiration
    timeouts for each priority level are\n       implementation and/or deployment
    specific.\n   5.  Maximum message size associated with each priority level is\n
    \      implementation and/or deployment specific.\n   6.  No restrictions on what
    kind of SMTP client authentication is\n       required.\n"
  title: Appendix A.  Priority Assignment Policy for Military Messaging
- contents:
  - "Appendix B.  Priority Assignment Policy for MIXER\n   MIXER [RFC2156] defines
    the Priority header field with 3 values.\n   This section specifies the Priority
    Assignment Policy for MIXER and\n   how the MT-PRIORITY parameter can be mapped
    when used with MIXER.\n   Where SMTP is used to support MIXER messaging, the following
    mappings\n   SHOULD be used.\n            Recommended Mapping of MT-PRIORITY Values
    for MIXER\n               +-------------------+----------------------+\n               |
    MT-PRIORITY value | MIXER Priority value |\n               +-------------------+----------------------+\n
    \              | -4                | non-urgent           |\n               |
    0                 | normal               |\n               | 4                 |
    urgent               |\n               +-------------------+----------------------+\n
    \                                 Table 2\n   The Priority Assignment Policy registration
    for MIXER is as follows:\n   1.  The Priority Assignment Policy name is \"MIXER\".\n
    \  2.  Number of distinct priority levels: 3, as specified in the table\n       above.\n
    \  3.  Default retry timeouts for each priority level are implementation\n       and/or
    deployment specific.\n   4.  Default expiration timeouts for each priority level
    are\n       implementation and/or deployment specific.\n   5.  Maximum message
    size associated with each priority level is\n       implementation and/or deployment
    specific.\n   6.  No restrictions on what kind of SMTP client authentication is\n
    \      required.\n"
  title: Appendix B.  Priority Assignment Policy for MIXER
- contents:
  - "Appendix C.  Priority Assignment Policy for National Security /\n             Emergency
    Preparedness (NS/EP)\n   There are several forms of communication systems used
    during an\n   emergency or disaster.  The most well known form involves the many-\n
    \  to-one model of the general public contacting a public safety access\n   point
    via 911/999/112 calls through the public telephone network.\n   Typically, these
    calls do not require authorization, nor do they\n   invoke any prioritization.\n
    \  Another form of emergency communications involves a set of authorized\n   users
    or nodes that use prioritized services to help establish and\n   continue communication
    given limited available resources.  [RFC4190]\n   includes descriptions of several
    systems that have been developed to\n   support National Security / Emergency
    Preparedness (NS/EP).  These\n   deployed systems require a form of authentication
    and have focused on\n   prioritization of telephony-based services.  They have
    also been\n   designed as a binary form (on/off) of signaled priority\n   communications.\n
    \  [RFC4412] includes examples of a more expansive view of NS/EP\n   communications
    in which priority migrates from a single on/off bit\n   value to one that comprises
    5 priority values.  This is shown in the\n   cases of the Emergency Telecommunications
    Service (ETS) and Wireless\n   Priority Service (WPS) Namespaces.  Given a lack
    of pre-existing\n   NS/EP values assigned for email, we follow the paradigm of
    the ETS\n   and WPS Namespaces and recommend the 5 ascending values shown in the\n
    \  table below.\n                 +-------------------+------------------+\n                 |
    MT-PRIORITY value | Relational Order |\n                 +-------------------+------------------+\n
    \                |         -2        | Lowest Priority  |\n                 |
    \        0         | ----------       |\n                 |         2         |
    ----------       |\n                 |         4         | ----------       |\n
    \                |         6         | Highest Priority |\n                 +-------------------+------------------+\n
    \  The Priority Assignment Policy registration for NS/EP is as follows:\n   1.
    \ The Priority Assignment Policy name is \"NSEP\".\n   2.  Number of distinct
    priority levels: 5, as specified in the table\n       above.\n   3.  Default retry
    timeouts for each priority level are implementation\n       and/or deployment
    specific.\n   4.  Default expiration timeouts for each priority level are\n       implementation
    and/or deployment specific.\n   5.  Maximum message size associated with each
    priority level is\n       implementation and/or deployment specific.\n   6.  No
    restrictions on what kind of SMTP client authentication is\n       required.\n"
  title: Appendix C.  Priority Assignment Policy for National Security /
- contents:
  - "Appendix D.  Possible Implementation Strategies\n   This appendix suggests some
    strategies to implement the SMTP\n   extension defined in this document.  The
    list is not exhaustive.\n   This appendix and its subsections are Informative.\n"
  - contents:
    - "D.1.  Probability\n   As the name suggests, probability involves increasing
      the chances of\n   obtaining resources without adversely affecting previously\n
      \  established connections.  One example would involve requesting\n   resources
      set aside for specific priority levels.  If these\n   additional resources are
      exhausted, then the desired connection is\n   denied.  Queues, new timers, or
      combinations thereof can be used to\n   facilitate the higher-priority requests,
      but the key is that\n   mechanisms focus on increasing the probability of message
      transfer.\n"
    title: D.1.  Probability
  - contents:
    - "D.2.  Preemption of Sessions or Transactions\n   Preemption is a type of action
      that focuses only on a comparison of\n   priorities to determine if previously
      established transactions need\n   to be displaced in favor of higher-priority
      requests.  If no\n   additional connection is possible, the client aborts a
      running\n   session for emails with lower priority no later than directly after\n
      \  the current transaction.  The client can even interrupt an active\n   transaction,
      and ought to do so if other constraints, such as\n   delivery time (as specified
      in the DELIVERBY SMTP extension\n   [RFC2852]), would be violated for the email
      with higher priority.\n   When interrupting an active transaction, the client
      ought to take the\n   total message size and the size of the transferred portion
      of the\n   message being interrupted into consideration.  This preliminary\n
      \  termination of sessions or transactions is called preemption.\n   If preemption
      of running transactions occurs, the client needs to\n   choose a transaction
      with the lowest priority currently processed.\n   If the client has an option
      (i.e., it is supported by the next-hop\n   MTA) to interrupt transactions in
      a way that allows them to be\n   restarted at the interruption point later,
      it ought to deploy it.  An\n   example for a mechanism providing such a service
      is the \"SMTP Service\n   Extension for Checkpoint/Restart\" defined in [RFC1845].\n
      \  If a client opts for the preemption of sessions instead of\n   transactions,
      it needs to preempt the next session that reaches the\n   end of a transaction.\n"
    title: D.2.  Preemption of Sessions or Transactions
  - contents:
    - "D.3.  Resource Allocation Models\n   Adding prioritization to a design moves
      the subject away from a\n   strictly best effort (and a first-come-first-served)
      model to one\n   that includes admission control and resource allocation models.
      \ Over\n   the years, a variety of work has been done within the IETF to specify\n
      \  resource allocations models.  Examples include the Maximum Allocation\n   Model
      [RFC4125], the Russian Dolls Model [RFC4127], and the Priority\n   Bypass Model
      (Appendix A.3 of [RFC6401]).\n   While we recognize that these various models
      have been designed for\n   other protocols (i.e., MPLS and RSVP), an understanding
      of their\n   design characteristics may be beneficial in considering future\n
      \  implementations of a priority SMTP service.\n   In cases where the processing
      of high-priority messages by an MTA is\n   not considered negligible and exceeds
      engineered expectations, then\n   operators managing that MTA may be notified
      in some form (e.g.,\n   pushed alarm, polled status).\n"
    title: D.3.  Resource Allocation Models
  title: Appendix D.  Possible Implementation Strategies
- contents:
  - "Appendix E.  Background on Design Choices\n   This section provides some background
    on design choices made during\n   development of the MT-PRIORITY SMTP extension.\n
    \  The priority applies per message, rather than per recipient, in order\n   to
    keep the protocol simpler and because of the expectation that it\n   will be uncommon
    to need different priorities for different\n   recipients on the same message.
    \ In cases where that is necessary, it\n   can always be achieved by sending separate
    messages with the same\n   content, segregating the recipients by desired message
    priority.\n   The choice of the priority range -9 to 9 (as opposed to, say, 1
    to 6,\n   or 0 to 9) was made after taking the following into consideration:\n
    \  1.  Clearly, having multiple priority levels is the whole point of\n       this
    extension.  Existing implementations of similar\n       functionality in MTAs
    are already using 3 levels.  One of the use\n       cases motivating this extension
    requires 6 levels, so at least 6\n       different values are required.\n   2.
    \ During discussions of this extension, several different use cases\n       were
    suggested that required differing numbers of priority\n       levels.  Defining
    just the 6 priority levels needed in item 1,\n       above, would limit the extensibility
    for possible future use\n       cases.  Therefore, this document is defining a
    wider range, which\n       allows implementations and deployments to add higher
    or lower\n       priority levels and to insert additional priority levels between\n
    \      the recommended set of 6.  This avoids the need to further extend\n       this
    extension just to have a few more priority levels.\n   3.  It seems natural to
    use zero for the \"normal\" or default\n       priority, rather than picking some
    non-zero number and having the\n       priorities go up or down from there.  This
    way, negative numbers\n       always represent priorities that are lower than
    normal, with\n       positive numbers as higher priorities.\n"
  title: Appendix E.  Background on Design Choices
- contents:
  - "Appendix F.  Acknowledgements\n   This document copies lots of text from \"SMTP
    Service Extension for\n   Priority Message Handling\" [SMTP-PRI-OLD].  Therefore,
    the authors of\n   this document would like to acknowledge contributions made
    by the\n   authors of that document: Michael Schmeing and Jan-Wilhelm Brendecke.\n
    \  Many thanks for input provided by Steve Kille, David Wilson, John\n   Klensin,
    Dave Crocker, Graeme Lunt, Alessandro Vesely, Barry Leiba,\n   Bill McQuillan,
    Murray Kucherawy, SM, Glenn Parsons, Pete Resnick,\n   Chris Newman, Ned Freed,
    and Claudio Allocchio.\n   Special thanks to Barry Leiba for agreeing to shepherd
    this document.\n"
  title: Appendix F.  Acknowledgements
- contents:
  - "Authors' Addresses\n   Alexey Melnikov\n   Isode Ltd\n   5 Castle Business Village\n
    \  36 Station Road\n   Hampton, Middlesex  TW12 2BX\n   UK\n   EMail: Alexey.Melnikov@isode.com\n
    \  Ken Carlberg\n   G11\n   1601 Clarendon Blvd, #203\n   Arlington, VA  22209\n
    \  USA\n   EMail: carlberg@g11.org.uk\n"
  title: Authors' Addresses
