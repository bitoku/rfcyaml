- title: __initial_text__
  contents:
  - "                      Bootstrapping Clients using\n     the Internet Small Computer\
    \ System Interface (iSCSI) Protocol\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   Internet Small Computer System Interface (iSCSI) is a proposed\n\
    \   transport protocol for Small Computer Systems Interface (SCSI) that\n   operates\
    \ on top of TCP.  This memo describes a standard mechanism for\n   enabling clients\
    \ to bootstrap themselves using the iSCSI protocol.\n   The goal of this standard\
    \ is to enable iSCSI boot clients to obtain\n   the information to open an iSCSI\
    \ session with the iSCSI boot server.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Small Computer Systems Interface (SCSI) is a popular\
    \ family of\n   protocols for communicating with I/O devices, especially storage\n\
    \   devices.  SCSI can be characterized as a request/response messaging\n   protocol\
    \ with a standard architecture and componentized command sets\n   for different\
    \ device classes.\n   iSCSI is a proposed transport protocol for SCSI that operates\
    \ on top\n   of TCP.  The role of iSCSI is necessitated by the evolution of the\n\
    \   system interconnect from a shared bus to a switched network.  IP\n   networks\
    \ meet the architectural and performance requirements of\n   transporting SCSI,\
    \ paving the way for the iSCSI protocol.\n   Many diskless clients sometimes bootstrap\
    \ off remote SCSI devices.\n   Such diskless entities are lightweight, space efficient,\
    \ and power-\n   conserving and are increasingly popular in various environments.\n\
    \   This memo describes a standard mechanism for enabling clients to\n   bootstrap\
    \ themselves using the iSCSI protocol.  The goal of this\n   standard is to enable\
    \ iSCSI boot clients to obtain the information to\n   open an iSCSI session with\
    \ the iSCSI boot server.  It is possible\n   that all the information is not available\
    \ at the very outset, so the\n   memo describes steps to obtain the information\
    \ required to bootstrap\n   clients off an iSCSI boot server.\n"
- title: 1.1.  Keywords
  contents:
  - "1.1.  Keywords\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [Bradner97].\n"
- title: 2.  Requirements
  contents:
  - "2.  Requirements\n   1. There must be no restriction of network topology between\
    \ the iSCSI\n      boot client and the boot server other than that in effect for\n\
    \      establishing the iSCSI session.  Consequently, it is possible for\n   \
    \   an iSCSI boot client to boot from an iSCSI boot server behind\n      gateways\
    \ or firewalls as long as it is possible to establish an\n      iSCSI session\
    \ between the client and the server.\n   2. The following represent the minimum\
    \ information required for an\n      iSCSI boot client to contact an iSCSI boot\
    \ server: (a) the\n      client's IP address (IPv6 or IPv4); (b) the server's\
    \ iSCSI Target\n      Name; and (c) mandatory iSCSI initiator capability.\n  \
    \ The above assume that the default LUN for the boot process is 0 and\n   that\
    \ the default port for the iSCSI boot server is the well-known\n   iSCSI port\
    \ [Satran02].  However, both may be overridden at the time\n   of configuration.\n\
    \   Additional information may be required at each stage of the boot\n   process.\n\
    \   3. It is possible for the iSCSI boot client to have none of the above\n  \
    \    information or capability on starting.\n   4. The client should be able to\
    \ complete boot without user\n      intervention (for boots that occur during\
    \ an unattended power-up).\n      However, there should be a mechanism for the\
    \ user to input values\n      so as to bypass stages of the boot protocol.\n \
    \  5. Additional protocol software (for example, BOOTP or DHCP) may be\n     \
    \ necessary if the minimum information required for an iSCSI session\n      is\
    \ not provided.\n"
- title: 3.  Related Work
  contents:
  - "3.  Related Work\n   The Reverse Address Resolution Protocol (RARP) [Finlayson84]\
    \ through\n   the extensions defined in the Dynamic RARP (DRARP) [Brownell96]\n\
    \   explicitly addresses the problem of network address discovery, and\n   includes\
    \ an automatic IP address assignment mechanism.  The Trivial\n   File Transfer\
    \ Protocol (TFTP) [Sollins81] provides for transport of a\n   boot image from\
    \ a boot server.  BOOTP [Croft85, Reynolds93, Wimer93]\n   is a transport mechanism\
    \ for a collection of configuration\n   information.  BOOTP is also extensible,\
    \ and official extensions have\n   been defined for several configuration parameters.\
    \  DHCPv4 [Droms97,\n   Droms93] and DHCPv6 [Droms02] are standards by which hosts\
    \ are to be\n   dynamically configured in an IP network.  The Service Location\n\
    \   Protocol (SLP) provides for location of higher-level services\n   [Guttman99].\n"
- title: 4.  Software Stage
  contents:
  - "4.  Software Stage\n   Some iSCSI boot clients may lack the resources to boot\
    \ up with the\n   mandatory iSCSI initiator capability.  Such boot clients may\
    \ choose\n   to obtain iSCSI initiator software from a boot server.  Currently,\n\
    \   many established protocols allow such a service in order to enable\n   clients\
    \ to load software images.  For example, BOOTP and DHCP servers\n   have the capability\
    \ to provide the locations of servers that can\n   serve software images on requests\
    \ from boot clients.\n   Note that this document does not recommend any of the\
    \ above\n   protocols, and the final decision of which boot protocol is to be\n\
    \   used to load iSCSI initiator software is left to the discretion of\n   the\
    \ implementor.\n"
- title: 5.  DHCP Stage
  contents:
  - "5.  DHCP Stage\n   In order to use an iSCSI boot server, the following pieces\
    \ of\n   information are required for an ISCSI boot client.\n   - The IP address\
    \ of the iSCSI boot client (IPv4 or IPv6)\n   - The IP transport endpoint for\
    \ the iSCSI Target Port for the iSCSI\n     boot server.  If the transport is\
    \ TCP, for example, this has to\n     resolve to an IP address and a TCP port\
    \ number.  TCP is currently\n     the only transport approved for iSCSI.\n   -\
    \ The eight-byte LUN structure identifying the Logical Unit within\n     the iSCSI\
    \ boot server.\n   At boot time, all or none of this information may be stored\
    \ in the\n   iSCSI boot client.  This section describes techniques for obtaining\n\
    \   the required information via the DHCP stage.  Otherwise, if the iSCSI\n  \
    \ boot client has all the information, the boot client may proceed\n   directly\
    \ to the Boot stage.\n   An iSCSI boot client that does not know its IP address\
    \ at power-on\n   may acquire it via BOOTP or DHCP (v4 or v6), or via IPv6 address\n\
    \   autoconfiguration.  Please note that DHCP settings (such as the RA\n   settings\
    \ in DHCPv6) may prohibit the use of DHCP in distributing\n   iSCSI boot information;\
    \ in this case, the DHCP stage cannot be used.\n   Unless specified otherwise\
    \ here, BOOTP or DHCP fields such as the\n   client ID and gateway information\
    \ are used in an identical way as\n   applications other than iSCSI.\n   A BOOTP\
    \ or DHCP server (v4 or v6) MAY instruct an iSCSI client how to\n   reach its\
    \ boot device.  This is done using the variable-length option\n   named Root Path\
    \ [Alexander93, Reynolds93].  The use of the option\n   field is reserved for\
    \ iSCSI boot use by prefacing the string with\n   \"iscsi:\".  The Root Path option\
    \ is not currently defined for DHCPv6;\n   if the option is defined for DHCPv6\
    \ in the future, the use of the\n   option as defined for iSCSI boot will apply.\n\
    \   The option field consists of an UTF-8 [Yergeau98] string.  The string\n  \
    \ has the following composition:\n   \"iscsi:\"<servername>\":\"<protocol>\":\"\
    <port>\":\"<LUN>\":\"<targetname>\n   The fields \"servername\", \"port\", \"\
    protocol\", and \"LUN\" are OPTIONAL\n   and should be left blank if there are\
    \ no corresponding values.  The\n   \"targetname\" field is not optional and MUST\
    \ be provided.\n   The \"servername\" is the name of iSCSI server and contains\
    \ either a\n   valid domain name, a literal IPv4 address, or a literal IPv6 address.\n\
    \   The servername must follow the specifications outlined in Section\n   3.2.2\
    \ of the URI Specification [Lee98] [Hinden99].  The characters\n   allowed must\
    \ also conform to Section 2.2 of the same specification.\n   Servername compression\
    \ MUST NOT be used in this field.\n   The \"protocol\" field is the decimal representation\
    \ of the IANA-\n   approved string for the transport protocol to be used for iSCSI.\
    \  If\n   the protocol field is left bank, the default value is assumed to be\n\
    \   \"6\" for TCP.  The transport protocol MUST have been approved for use\n \
    \  in iSCSI; currently, the only approved protocol is TCP.\n   The \"port\" is\
    \ the decimal representation of the port on which the\n   iSCSI boot server is\
    \ listening.  If not specified, the port defaults\n   to the well-known iSCSI\
    \ port [Satran02].\n   The \"LUN\" field is a hexadecimal representation of the\
    \ LU number.  If\n   the LUN field is blank, then LUN 0 is assumed.  If the LUN\
    \ field is\n   not blank, the representation MUST be divided into four groups\
    \ of\n   four hexadecimal digits, separated by \"-\".  Digits above 9 may be\n\
    \   either lower or upper case.  An example of such a representation\n   would\
    \ be 4752-3A4F-6b7e-2F99.  For the sake of brevity, at most three\n   leading\
    \ zero (\"0\") digits MAY be omitted in any group of hexadecimal\n   digits. \
    \ Thus, the \"LUN\" representation 6734-9-156f-127 is equivalent\n   to 6734-0009-156f-0127.\
    \  Furthermore, trailing groups containing only\n   the \"0\" digit MAY be omitted\
    \ along with the preceding \"-\".  So, the\n   \"LUN\" representation 4186-9 is\
    \ equivalent to 4186-0009-0000-0000.\n   Other concise representations of the\
    \ LUN field MUST NOT be used.\n   Note that SCSI targets are allowed to present\
    \ different LU numberings\n   for different SCSI initiators, so to our knowledge\
    \ nothing precludes\n   a SCSI target from exporting several different LUs to\
    \ several\n   different SCSI initiators as their respective LUN 0s.\n   The \"\
    targetname\" field is an iSCSI Name that is defined by the iSCSI\n   standard\
    \ [Satran02] to uniquely identify an iSCSI target.  The\n   approved characters\
    \ in the targetname field are stated in the iSCSI\n   String Profile document[Bakke04].\n\
    \   If the \"servername\" field is provided by BOOTP or DHCP, then that\n   field\
    \ is used in conjunction with other associated fields to contact\n   the boot\
    \ server in the Boot stage (Section 7).  However, if the\n   \"servername\" field\
    \ is not provided, then the \"targetname\" field is\n   then used in the Discovery\
    \ Service stage in conjunction with other\n   associated fields (Section 6).\n"
- title: 6.  Discovery Service Stage
  contents:
  - "6.  Discovery Service Stage\n   This stage is required if the BOOTP or DHCP server\
    \ (v4 or v6) is\n   unaware of any iSCSI boot servers or if the BOOTP or DHCP\
    \ server is\n   unable to provide the minimum information required to connect\
    \ to the\n   iSCSI boot server, other than the targetname.\n   The Discovery Service\
    \ may be based on the SLP protocol [Guttman99,\n   Bakke02] and is an instantiation\
    \ of the SLP Service or Directory\n   Agent.  Alternatively, the Discovery Service\
    \ may be based on the iSNS\n   protocol [Tseng03] and is an instantiation of the\
    \ iSNS Server.\n   The iSCSI boot client may have obtained the targetname of the\
    \ iSCSI\n   boot server in the DHCP stage (Section 5).  In that case, the iSCSI\n\
    \   boot client queries the SLP Discovery Service using query string 1 of\n  \
    \ the iSCSI Target Concrete Service Type Template, as specified in\n   Section\
    \ 6.2 of the iSCSI SLP interaction document [Bakke02], to\n   resolve the targetname\
    \ to an IP address and port number.\n   Alternatively, the iSCSI boot client may\
    \ query the iSNS Discovery\n   Service with a Device Attribute Query with the\
    \ targetname as the\n   query parameter [Tseng03].  Once this is obtained, the\
    \ iSCSI boot\n   client proceeds to the Boot stage (Section 7).\n   It is possible\
    \ that the port number obtained from the Discovery\n   Service may conflict with\
    \ the one obtained from the DHCP stage.  In\n   such a case, the implementor has\
    \ the option to try both port numbers\n   in the Boot stage.\n   If the iSCSI\
    \ boot client does not have any targetname information,\n   the iSCSI boot client\
    \ may then query the SLP Discovery Service with\n   query string 4 of the iSCSI\
    \ Target Concrete Service Type Template, as\n   specified in Section 6.2 of the\
    \ iSCSI SLP interaction document\n   [Bakke02].  In response to this query, the\
    \ SLP Discovery Service\n   provides the boot client with a list of iSCSI boot\
    \ servers the boot\n   client is allowed to access.  Alternatively, the iSCSI\
    \ boot client\n   can query the iSNS Discovery Service to verify if the targets\
    \ in\n   particular Discovery Domain are bootable [Tseng03].\n   If the list of\
    \ iSCSI boot servers is empty, subsequent actions are\n   left to the discretion\
    \ of the implementor.  Otherwise, the iSCSI boot\n   client may contact any iSCSI\
    \ boot server in the list.  Moreover, the\n   order in which iSCSI boot servers\
    \ are contacted is also left to the\n   discretion of the implementor.\n"
- title: 7.  Boot Stage
  contents:
  - "7.  Boot Stage\n   Once the iSCSI boot client has obtained the minimum information\
    \ to\n   open an iSCSI session with the iSCSI boot server, the actual booting\n\
    \   process can start.\n   The actual sequence of iSCSI commands that are needed\
    \ to complete the\n   boot process is left to the implementor.  This was done\
    \ because of\n   varying requirements from different vendors and equipment, making\
    \ it\n   difficult to specify a common subset of the iSCSI standard that would\n\
    \   be acceptable to everybody.\n   The iSCSI session established for boot may\
    \ be taken over by the\n   booted software in the iSCSI boot client.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The security discussion is centered around securing\
    \ the communication\n   involved in the iSCSI boot process.\n   However, the issue\
    \ of applying credentials to a boot image loaded\n   through the iSCSI boot mechanism\
    \ is outside the scope of this\n   document.  One key difference between the iSCSI\
    \ boot mechanism and\n   BOOTP-based image loading is the fact that the identity\
    \ of a boot\n   image may not be known when the Boot stage starts.  The identity\
    \ of\n   certain boot images and their locations are known only after the\n  \
    \ contents of a boot disk exposed by the iSCSI boot service are\n   examined.\
    \  Furthermore, images themselves may recursively load other\n   images based\
    \ on both hardware configurations and user input.\n   Consequently, a practical\
    \ way to verify loaded boot images is to make\n   sure that each image loading\
    \ software verifies the image to be loaded\n   using a mechanism of their choice.\n\
    \   The considerations involved in designing a security architecture for\n   the\
    \ iSCSI boot process include configuration, deployment, and\n   provisioning issues\
    \ apart from typical security considerations.\n   Enabling iSCSI boot creates\
    \ a critical operational dependence on an\n   external system with obvious security\
    \ implications, and thus\n   administrator awareness of this enablement is extremely\
    \ important.\n   Therefore, iSCSI boot SHOULD NOT be enabled or put high in the\
    \ boot\n   order without an explicit administrative action.\n   In all phases\
    \ of the boot process, a client must ensure that a server\n   is authorized to\
    \ send it certain information.  This means that the\n   authenticated identity\
    \ of a server must have an authorization\n   indication.  A list of authorized\
    \ servers can be pre-configured into\n   a client, or the list can be downloaded\
    \ in an authenticated form from\n   a prior stage in the boot process.\n   The\
    \ software stage SHOULD NOT be involved in a secure iSCSI boot\n   process, as\
    \ this would add the additional complexity of trying to\n   secure the process\
    \ of loading the software necessary to run the later\n   stages of iSCSI boot.\
    \  Authentication and integrity protection of\n   downloaded boot software has\
    \ proven to be difficult and complex due\n   to administrative issues and limitations\
    \ of the BIOS environment.  It\n   is therefore assumed that all the necessary\
    \ software is resident on\n   the iSCSI boot client.\n   If the DHCP stage is\
    \ implemented using the DHCP protocol, the iSCSI\n   boot client SHOULD implement\
    \ the DHCP authentication ([Droms01],\n   [Droms02] for IPv6).  In this case,\
    \ an administration interface\n   SHOULD be provided for the configuration of\
    \ the DHCP authentication\n   credentials, both when the network interface is\
    \ on the motherboard\n   and when it is removable.  Note that DHCP authentication\n\
    \   ([Droms01],[Droms02] for IPv6) is focused on intra-domain\n   authentication,\
    \ which is assumed to be enough for iSCSI boot\n   scenarios.  In the context\
    \ of the secure iSCSI boot process, the\n   reply from the DHCP server in the\
    \ DHCP stage SHOULD include the\n   serverName in IPv4 (or IPv6) format to avoid\
    \ reliance on a DNS server\n   (for resolving names) or a Discovery Service entity\
    \ (to look up\n   targetnames).  This reduces the number of entities involved\
    \ in the\n   secure iSCSI boot process.\n   If the Discovery Service stage is\
    \ implemented using SLP, the iSCSI\n   boot client SHOULD provide IPsec support\
    \ (OPTIONAL to use) for the\n   SLP protocol, as defined in [Bakke02] and [Aboba03].\
    \  If the\n   Discovery Service stage is implemented using iSNS, the iSCSI boot\n\
    \   client SHOULD provide IPsec support (OPTIONAL to use) for the iSNS\n   protocol,\
    \ as defined in [Tseng03] and [Aboba03].  When iSNS or SLP\n   are used to distribute\
    \ security policy or configuration information,\n   at a minimum, per-packet data\
    \ origin authentication, integrity, and\n   replay protection SHOULD be used to\
    \ protect the discovery protocol.\n   For the final communication between the\
    \ iSCSI boot client and the\n   iSCSI boot server in the Boot stage, IPsec and\
    \ in-band authentication\n   SHOULD be implemented according to the guidelines\
    \ in the main iSCSI\n   draft [Satran02] and [Aboba03].  Due to memory constraints,\
    \ it is\n   expected that iSCSI boot clients will only support the pre-shared\
    \ key\n   authentication in IKE.  Where the host IP address is assigned\n   dynamically,\
    \ IKE main mode SHOULD NOT be used, as explained in\n   [Satran02] and [Aboba03].\
    \  Regardless of the way parameters in\n   previous stages (DHCP, SLP, iSNS) were\
    \ obtained (securely or not),\n   the iSCSI boot session is vulnerable as any\
    \ iSCSI session (see\n   [Satran02] and [Aboba03] for iSCSI security threats).\
    \  Therefore,\n   security for this session SHOULD be configured and used according\
    \ to\n   [Satran02] and [Aboba03] guidelines.\n   Note that if a boot image inherits\
    \ an iSCSI session from a previously\n   loaded boot image, it also inherits the\
    \ security properties of the\n   iSCSI session.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   We wish to thank John Hufferd for taking the initiative\
    \ to form the\n   iSCSI boot team.  We also wish to thank Doug Otis, Julian Satran,\n\
    \   Bernard Aboba, David Robinson, Mark Bakke, Ofer Biran, and\n   Mallikarjun\
    \ Chadalapaka for helpful suggestions and pointers\n   regarding the draft document.\n"
- title: Normative References
  contents:
  - "Normative References\n   [Aboba03]      Aboba, B., Tseng, J., Walker, J., Rangan,\
    \ V., and F.\n                  Travostino, \"Securing Block Storage Protocols\
    \ over\n                  IP\", RFC 3723, April 2004.\n   [Alexander93]  Alexander,\
    \ S. and R. Droms, \"DHCP Options and BOOTP\n                  Vendor Extensions\"\
    , RFC 2132, March 1997.\n   [Bakke02]      Bakke, M., Hufferd, J., Voruganti,\
    \ K., Krueger, M.,\n                  and T. Sperry, \"Finding Internet Small\
    \ Computer\n                  Systems Interface (iSCSI) Targets and Name Servers\
    \ by\n                  Using Service Location Protocol version 2 (SLPv2)\",\n\
    \                  RFC 4018, April 2005.\n   [Bakke04]      Bakke, M., \"String\
    \ Profile for Internet Small Computer\n                  Systems Interface (iSCSI)\
    \ Names\", RFC 3722, April\n                  2004.\n   [Bradner97]    Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n                  Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [Croft85]      Croft, W. and J. Gilmore, \"\
    Bootstrap Protocol\", RFC\n                  951, September 1985.\n   [Droms93]\
    \      Droms, R., \"Interoperation Between DHCP and BOOTP\",\n               \
    \   RFC 1534, October 1993.\n   [Droms97]      Droms, R., \"Dynamic Host Configuration\
    \ Protocol\", RFC\n                  2131, March 1997.\n   [Droms01]      Droms,\
    \ R. and W. Arbaugh, \"Authentication for DHCP\n                  Messages\",\
    \ RFC 3118, June 2001.\n   [Droms02]      Droms, R., Bound, J., Volz, B., Lemon,\
    \ T., Perkins,\n                  C., and M. Carney, \"Dynamic Host Configuration\n\
    \                  Protocol for IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [Guttman99]\
    \    Guttman, E., Perkins, C., Veizades, J., and M. Day,\n                  \"\
    Service Location Protocol, Version 2\", RFC 2608, June\n                  1999.\n\
    \   [Hinden99]     Hinden, R., Carpenter, B., and L. Masinter, \"Format\n    \
    \              for Literal IPv6 Addresses in URL's\", RFC 2732,\n            \
    \      December 1999.\n   [Lee98]        Berners-Lee, T., Fielding, R., and L.\
    \ Masinter,\n                  \"Uniform Resource Identifiers (URI): Generic Syntax\"\
    ,\n                  RFC 2396, August 1998.\n   [Reynolds93]   Reynolds, J., \"\
    BOOTP Vendor Information Extensions\",\n                  RFC 1497, August 1993.\n\
    \   [Satran02]     Satran, J., Meth, K., Sapuntzakis, C., Chadalapaka,\n     \
    \             M., and E. Zeidner, \"Internet Small Computer Systems\n        \
    \          Interface (iSCSI)\", RFC 3720, April 2004.\n   [Tseng03]      Tseng,\
    \ J., Gibbons, K., Travostino, F., Du Laney, C.,\n                  and J. Souza,\
    \ \"Internet Storage Name Service (iSNS)\",\n                  RFC 4171, April\
    \ 2005.\n   [Yergeau98]    Yergeau, F., \"UTF-8, a transformation format of ISO\n\
    \                  10646\", STD 63, RFC 3629, November 2003.\n   [Wimer93]   \
    \   Wimer, W., \"Clarifications and Extensions for the\n                  Bootstrap\
    \ Protocol\", RFC 1542, October 1993.\n"
- title: Informative References
  contents:
  - "Informative References\n   [Brownell96]   Brownell, D., \"Dynamic RARP Extensions\
    \ for Automatic\n                  Network Address Acquisition\", RFC 1931, April\
    \ 1996.\n   [Finlayson84]  Finlayson, R., Mann, T., Mogul, J., and M. Theimer,\n\
    \                  \"Reverse Address Resolution Protocol\", STD 38, RFC\n    \
    \              903, June 1984.\n   [Sollins81]    Sollins, K., \"The TFTP Protocol\
    \ (Revision 2)\", STD 33,\n                  RFC 1350, July 1992.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Prasenjit Sarkar\n   IBM Almaden Research Center\n   650\
    \ Harry Road\n   San Jose, CA 95120, USA\n   Phone: +1 408 927 1417\n   EMail:\
    \ psarkar@almaden.ibm.com\n   Duncan Missimer\n   Hewlett-Packard Company\n  \
    \ 10955 Tantau Ave\n   Cupertino, CA 95014, USA\n   EMail: duncan.missimer@ieee.org\n\
    \   Constantine Sapuntzakis\n   Stanford University\n   353 Serra Hall #407\n\
    \   Stanford, CA 94305, USA\n   EMail: csapuntz@alum.mit.edu\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
