- title: __initial_text__
  contents:
  - "         Multiprotocol Label Switching (MPLS) Label Switching\n             Router\
    \ (LSR) Management Information Base (MIB)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines an portion of the Management Information Base\
    \ (MIB)\n   for use with network management protocols in the Internet community.\n\
    \   In particular, it describes managed objects to configure and/or\n   monitor\
    \ a Multiprotocol Label Switching (MPLS) Label Switching Router\n   (LSR).\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Terminology. . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  The SNMP Management Framework. . . . . . . . . . . . .\
    \ . . . .  3\n   4.  Outline. . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  3\n       4.1.  Summary of LSR MIB Module. . . . . . . . . . . . . .\
    \ . .  4\n   5.  Brief Description of MIB Module Objects. . . . . . . . . . .\
    \ .  4\n       5.1.  mplsInterfaceTable . . . . . . . . . . . . . . . . . . .\
    \  4\n       5.2.  mplsInterfacePerfTable . . . . . . . . . . . . . . . . .  4\n\
    \       5.3.  mplsInSegmentTable . . . . . . . . . . . . . . . . . . .  5\n  \
    \     5.4.  mplsInSegmentPerfTable . . . . . . . . . . . . . . . . .  5\n    \
    \   5.5.  mplsOutSegmentTable. . . . . . . . . . . . . . . . . . .  5\n      \
    \ 5.6.  mplsOutSegmentPerfTable. . . . . . . . . . . . . . . . .  5\n       5.7.\
    \  mplsXCTable. . . . . . . . . . . . . . . . . . . . . . .  5\n       5.8.  mplsLabelStackTable.\
    \ . . . . . . . . . . . . . . . . . .  6\n       5.9.  mplsInSegmentMapTable.\
    \ . . . . . . . . . . . . . . . . .  6\n   6.  Use of 32-bit and 64-bit Counters.\
    \ . . . . . . . . . . . . . .  6\n   7.  Example of LSP Setup . . . . . . . .\
    \ . . . . . . . . . . . . .  6\n   8.  Application of the Interface Group to MPLS\
    \ . . . . . . . . . .  8\n       8.1.  Support of the MPLS Layer by ifTable .\
    \ . . . . . . . . .  9\n   9.  The Use of RowPointer. . . . . . . . . . . . .\
    \ . . . . . . . . 10\n   10. MPLS Label Switching Router MIB Module Definitions\
    \ . . . . . . 11\n   11. Security Considerations. . . . . . . . . . . . . . .\
    \ . . . . . 55\n   12. Acknowledgments. . . . . . . . . . . . . . . . . . . .\
    \ . . . . 56\n   13. IANA Considerations. . . . . . . . . . . . . . . . . . .\
    \ . . . 56\n       13.1. IANA Considerations for MPLS-LSR-STD-MIB . . . . . .\
    \ . . 56\n   14. References . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 57\n       14.1. Normative References . . . . . . . . . . . . . . . . . .\
    \ 57\n       14.2. Informative References . . . . . . . . . . . . . . . . . 58\n\
    \   15. Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . 59\n  \
    \ 16. Full Copyright Statement . . . . . . . . . . . . . . . . . . . 60\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo defines an portion of the Management Information\
    \ Base (MIB)\n   for use with network management protocols in the Internet community.\n\
    \   In particular, it describes managed objects for modeling a\n   Multiprotocol\
    \ Label Switching (MPLS) [RFC3031] Label Switching Router\n   (LSR).\n   Comments\
    \ should be made directly to the MPLS mailing list at\n   mpls@uu.net.\n   The\
    \ key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n\
    \   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in BCP 14, RFC 2119,\n\
    \   reference [RFC2119].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document uses terminology from the document describing\
    \ the MPLS\n   architecture [RFC3031].  A label switched path (LSP) is modeled\
    \ as a\n   connection consisting of one or more incoming segments (in-segments)\n\
    \   and/or one or more outgoing segments (out-segments) at a LSR.  The\n   association\
    \ or interconnection of the in-segments and out-segments is\n   accomplished by\
    \ using a cross-connect.  We use the terminology\n   \"connection\" and \"LSP\"\
    \ interchangeably where the meaning is clear\n   from the context.\n      in-segment\
    \        This is analogous to an MPLS label.\n      out-segment       This is\
    \ analogous to an MPLS label.\n      cross-connect     This describes the conceptual\
    \ connection\n                        between a set of in-segments and out-segments.\n\
    \                        Note that either set may be 0; that is, a\n         \
    \               cross-connect may connect only out-segments\n                \
    \        together with no in-segments in the case\n                        where\
    \ an LSP is originating on an LSR.\n"
- title: 3.  The SNMP Management Framework
  contents:
  - "3.  The SNMP Management Framework\n   For a detailed overview of the documents\
    \ that describe the current\n   Internet-Standard Management Framework, please\
    \ refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed\
    \ via a virtual information store, termed\n   the Management Information Base\
    \ or MIB.  MIB objects are generally\n   accessed through the Simple Network Management\
    \ Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined\
    \ in the\n   Structure of Management Information (SMI).  This memo specifies a\
    \ MIB\n   module that is compliant to the SMIv2, which is described in STD 58,\n\
    \   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
- title: 4.  Outline
  contents:
  - "4.  Outline\n   Configuring LSPs through an LSR involves the following steps:\n\
    \   -  Enabling MPLS on MPLS capable interfaces.\n   -  Configuring in-segments\
    \ and out-segments.\n   -  Setting up the cross-connect table to associate segments\
    \ and/or to\n      indicate connection origination and termination.\n   -  Optionally\
    \ specifying label stack actions.\n   -  Optionally specifying segment traffic\
    \ parameters.\n"
- title: 4.1.  Summary of LSR MIB Module
  contents:
  - "4.1.  Summary of LSR MIB Module\n   The MIB objects for performing these actions\
    \ consist of the following\n   tables:\n   -  The interface table (mplsInterfaceTable),\
    \ which is used for\n      revealing the MPLS protocol on MPLS-capable interfaces.\n\
    \   -  The in-segment (mplsInSegmentTable) and out-segment\n      (mplsOutSegmentTable)\
    \ tables, which are used for configuring LSP\n      segments at an LSR.\n   -\
    \  The cross-connect table (mplsXCTable), which is used to associate\n      in\
    \ and out segments together, in order to form a cross-connect.\n   -  The label\
    \ stack table (mplsLabelStackTable), which is used for\n      specifying label\
    \ stack operations.\n   Further, the MPLS in-segment and out-segment performance\
    \ tables,\n   mplsInSegmentPerfTable and mplsOutSegmentPerfTable, contain the\n\
    \   objects necessary to measure the performance of LSPs, and\n   mplsInterfacePerfTable\
    \ has objects to measure MPLS performance on a\n   per-interface basis.\n   These\
    \ tables are described in the subsequent sections.\n"
- title: 5.  Brief Description of MIB Module Objects
  contents:
  - "5.  Brief Description of MIB Module Objects\n   Sections 5.1-5.2 describe objects\
    \ pertaining to MPLS-capable\n   interfaces of an LSR.  The objects described\
    \ in Sections 5.3-5.8,\n   were derived from the Incoming Label Map (ILM) and\
    \ Next Hop Label\n   Forwarding Entry (NHLFE) as specified in the MPLS architecture\n\
    \   document [RFC3031].  It is appropriate to note that the in-segment,\n   out-segment,\
    \ and cross-connect tables were modeled after similar\n   tables found in [RFC2515].\n"
- title: 5.1.  mplsInterfaceTable
  contents:
  - "5.1.  mplsInterfaceTable\n   This table represents the interfaces that are MPLS\
    \ capable.  An LSR\n   creates an entry in this table for every MPLS capable interface\
    \ on\n   that LSR.\n"
- title: 5.2.  mplsInterfacePerfTable
  contents:
  - "5.2.  mplsInterfacePerfTable\n   This table contains objects to measure the MPLS\
    \ performance of MPLS\n   capable interfaces and is an AUGMENT to mplsInterfaceTable.\n"
- title: 5.3.  mplsInSegmentTable
  contents:
  - "5.3.  mplsInSegmentTable\n   This table contains a description of the incoming\
    \ MPLS segments to an\n   LSR and their associated parameters.  This index for\
    \ this table is\n   mplsInSegmentIndex.  The index structure of this table is\n\
    \   specifically designed to handle many different MPLS implementations\n   that\
    \ manage their labels both in a distributed and centralized\n   manner.\n   The\
    \ table is designed to handle existing MPLS labels as well as\n   future label\
    \ strategies that may require labels longer than the ones\n   defined in RFC3031.\
    \  In these cases, the object mplsInSegmentLabelPtr\n   may be used indicate the\
    \ first accessible object in a separate table\n   that can be used to represent\
    \ the label because it is too long to be\n   represented in a single 32-bit value\
    \ (mplsInSegmentLabel).\n"
- title: 5.4.  mplsInSegmentPerfTable
  contents:
  - "5.4.  mplsInSegmentPerfTable\n   The MPLS in-Segment Performance Table has objects\
    \ to measure the\n   performance of an incoming segment configured on an LSR.\
    \  It is an\n   AUGMENT to mplsInSegmentTable.  High capacity counters are provided\n\
    \   for objects that are likely to wrap around quickly on high-speed\n   interfaces.\n"
- title: 5.5.  mplsOutSegmentTable
  contents:
  - "5.5.  mplsOutSegmentTable\n   The out-Segment Table contains a description of\
    \ the outgoing MPLS\n   segments at an LSR and their associated parameters.\n"
- title: 5.6.  mplsOutSegmentPerfTable
  contents:
  - "5.6.  mplsOutSegmentPerfTable\n   The MPLS out-Segment Table contains objects\
    \ to measure the\n   performance of an outgoing segment configured on an LSR.\
    \  It is an\n   AUGMENT to mplsOutSegmentTable.  High capacity counters are provided\n\
    \   for objects that are likely to wrap around quickly on high-speed\n   interfaces.\n"
- title: 5.7.  mplsXCTable
  contents:
  - "5.7.  mplsXCTable\n   The mplsXCTable specifies information for associating segments\n\
    \   together in order to instruct the LSR to switch between the specified\n  \
    \ segments.  It supports point-to-point, point-to-multipoint and\n   multipoint-to-point\
    \ connections.\n   The operational status object indicates the packet forwarding\
    \ state\n   of a cross-connect entry.  For example, when the operational status\n\
    \   objects is 'down' it indicates that the specified cross-connect entry\n  \
    \ will not forward packets.  Likewise, when it is set to 'up' it\n   indicates\
    \ that packets will be forwarded.\n   The administrative status object indicates\
    \ the forwarding state\n   desired by the operator.\n"
- title: 5.8.  mplsLabelStackTable
  contents:
  - "5.8.  mplsLabelStackTable\n   The mplsLabelStackTable specifies the label stack\
    \ to be pushed onto a\n   packet, beneath the top label.  Entries to this table\
    \ are referred to\n   from mplsXCTable.\n"
- title: 5.9   mplsInSegmentMapTable
  contents:
  - "5.9   mplsInSegmentMapTable\n   The mplsInSegmentMapTable specifies the mapping\
    \ from the\n   mplsInSegmentIndex to the corresponding mplsInSegmentInterface\
    \ and\n   mplsInSegmentLabel objects.  The purpose of this table is to provide\n\
    \   the manager with an alternative means by which to locate in-segments.\n  \
    \ For instance, this table can be useful when tracing LSPs from LSR to\n   LSR\
    \ by first following the in-segment to out-segment, retrieving the\n   outgoing\
    \ label and out-going interface, and then proceeding to\n   interrogate this table\
    \ at the next-hop LSR to continue the trace.\n"
- title: 6.  Use of 32-bit and 64-bit Counters
  contents:
  - "6.  Use of 32-bit and 64-bit Counters\n   64-bit counters are provided in this\
    \ MIB module for high speed\n   interfaces where the use of 32-bit counters might\
    \ be impractical. The\n   requirements on the use of 32-bit and 64-bit counters\
    \ (copied\n   verbatim from [RFC2863]) are as follows.\n   For interfaces that\
    \ operate at 20,000,000 (20 million) bits per\n   second or less, 32-bit byte\
    \ and packet counters MUST be supported.\n   For interfaces that operate faster\
    \ than 20,000,000 bits/second, and\n   slower than 650,000,000 bits/second, 32-bit\
    \ packet counters MUST be\n   supported and 64-bit octet counters MUST be supported.\
    \  For\n   interfaces that operate at 650,000,000 bits/second or faster, 64-bit\n\
    \   packet counters AND 64-bit octet counters MUST be supported.\n"
- title: 7.  Example of LSP Setup
  contents:
  - "7.  Example of LSP Setup\n   In this section we provide a brief example of setting\
    \ up an LSP using\n   this MIB module's objects.  While this example is not meant\
    \ to\n   illustrate every nuance of the MIB module, it is intended as an aid\n\
    \   to understanding some of the key concepts. It is meant to be read\n   after\
    \ going through the MIB module itself.\n   Suppose that one would like to manually\
    \ create a best-effort,\n   unidirectional LSP.  Assume that the LSP enters the\
    \ LSR via MPLS\n   interface A with ifIndex 12 and exits the LSR via MPLS interface\
    \ B\n   with ifIndex 13.  Let us assume that we do not wish to impose any\n  \
    \ additional label stack beneath the top label on the outgoing labeled\n   packets.\
    \  The following example illustrates which rows and\n   corresponding objects\
    \ might be created to accomplish this.  Those\n   objects relevant to illustrating\
    \ the relationships amongst different\n   tables are shown here.  Other objects\
    \ may be needed before conceptual\n   row activation can happen.\n   The RowStatus\
    \ values shown in this section are those to be used in\n   the set request, typically\
    \ createAndGo(4) which is used to create the\n   conceptual row and have its status\
    \ immediately set to active.  Note\n   that the proper use of createAndGo(4) requires\
    \ that all columns that\n   do not have a DEFVAL to be specified in order for\
    \ the SET to succeed.\n   In the example below we have not specify all such columns\
    \ for the\n   sake of keeping the example short.  Please keep in mind that all\
    \ such\n   fields must be send during a real SET operation.  A subsequent\n  \
    \ retrieval operation on the conceptual row will return a different\n   value,\
    \ such as active(1).  Please see [RFC2579] for a detailed\n   discussion on the\
    \ use of RowStatus.\n   We first create a cross-connect entry that associates\
    \ the desired\n   segments together.\n   In mplsXCTable:\n   {\n      mplsXCIndex\
    \                = 0x02,\n      mplsXCInSegmentIndex       = 0x00000015,\n   \
    \   mplsXCOutSegmentIndex      = 0x01,\n      mplsXCLspId                = 0x0102\
    \ -- unique ID\n      mplsXCLabelStackIndex      = 0x00, -- only a single\n  \
    \                                       -- outgoing label\n      mplsXCRowStatus\
    \            = createAndGo(4)\n   }\n   Next, we create the appropriate in-segment\
    \ and out-segment entries\n   based on the cross-connect.  Note that some agents\
    \ may wish to\n   automatically create the in and out-segments based on the cross-\n\
    \   connect creation.\n   In mplsInSegmentTable:\n   {\n      mplsInSegmentIndex\
    \              = 0x00000015\n      mplsInSegmentLabel              = 21, -- incoming\
    \ label\n      mplsInSegmentNPop               = 1,\n      mplsInSegmentInterface\
    \          = 12, -- incoming interface\n      -- RowPointer MUST point to the\
    \ first accessible column.\n      mplsInSegmentLabelPtr           = 0.0,\n   \
    \   mplsInSegmentTrafficParamPtr    = 0.0,\n      mplsInSegmentRowStatus     \
    \     = createAndGo(4)\n   }\n   In mplsOutSegmentTable:\n   {\n      mplsOutSegmentIndex\
    \             = 0x01,\n      mplsOutSegmentInterface         = 13, -- outgoing\
    \ interface\n      mplsOutSegmentPushTopLabel      = true(1),\n      mplsOutSegmentTopLabel\
    \          = 22, -- outgoing label\n      -- RowPointer MUST point to the first\
    \ accessible column.\n      mplsOutSegmentTrafficParamPtr   = 0.0,\n      mplsOutSegmentLabelPtr\
    \          = 0.0,\n      mplsOutSegmentRowStatus         = createAndGo(4)\n  \
    \ }\n   Note that the mplsInSegmentXCIndex and mplsOutSegmentXCIndex objects\n\
    \   will automatically be populated with the string 0x02 when these\n   segments\
    \ are referred to from the corresponding cross-connect entry.\n"
- title: 8.  Application of the Interface Group to MPLS
  contents:
  - "8.  Application of the Interface Group to MPLS\n   RFC2863 defines generic managed\
    \ objects for managing interfaces.\n   This memo contains the media-specific extensions\
    \ to the Interfaces\n   Group for managing MPLS interfaces.\n   This memo assumes\
    \ the interpretation of the Interfaces Group to be in\n   accordance with [RFC2863]\
    \ which states that the interfaces table\n   (ifTable) contains information on\
    \ the managed resource's interfaces\n   and that each sub-layer below the internetwork\
    \ layer of a network\n   interface is considered an interface.  Thus, the MPLS\
    \ interface is\n   represented as an entry in the ifTable.  The inter-relation\
    \ of\n   entries in the ifTable is defined by Interfaces Stack Group defined\n\
    \   in [RFC2863].\n   When using MPLS interfaces, the interface stack table might\
    \ appear as\n   follows:\n      +----------------------------------------+\n \
    \     |   MPLS interface; ifType = mpls(166)   +\n      +----------------------------------------+\n\
    \      |            Underlying Layer            +\n      +----------------------------------------+\n\
    \   In the above diagram, \"Underlying Layer\" refers to the ifIndex of any\n\
    \   interface type for which MPLS interworking has been defined.\n   Examples\
    \ include ATM, Frame Relay, Ethernet, etc.\n"
- title: 8.1.  Support of the MPLS Layer by ifTable
  contents:
  - "8.1.  Support of the MPLS Layer by ifTable\n   Some specific interpretations\
    \ of ifTable for the MPLS layer follow.\n   Object        Use for the MPLS layer\n\
    \   ifIndex       Each MPLS interface is represented by an ifEntry.\n   ifDescr\
    \       Description of the MPLS interface.\n   ifType        The value that is\
    \ allocated for MPLS is 166.\n   ifSpeed       The total bandwidth in bits per\
    \ second for use by\n                 the MPLS layer.\n   ifPhysAddress Unused.\n\
    \   ifAdminStatus This variable indicates the administrator's intent\n       \
    \          as to whether MPLS should be enabled, disabled, or\n              \
    \   running in some diagnostic testing mode on this\n                 interface.\
    \  Also see [RFC2863].\n   ifOperStatus  This value reflects the actual operational\
    \ status\n                 of MPLS on this interface.\n   ifLastChange  See [RFC2863].\n\
    \   ifInOctets    The number of received octets over the interface,\n        \
    \         i.e., the number of received, octets received as\n                 labeled\
    \ packets.\n   ifOutOctets   The number of transmitted octets over the\n     \
    \            interface, i.e., the number of octets transmitted\n             \
    \    as labeled packets.\n   ifInErrors    The number of labeled packets dropped\
    \ due to\n                 uncorrectable errors.\n   ifInUnknownProtos\n     \
    \            The number of received packets discarded during\n               \
    \  packet header validation, including packets with\n                 unrecognized\
    \ label values.\n   ifOutErrors   See [RFC2863].\n   ifName        Textual name\
    \ (unique on this system) of the\n                 interface or an octet string\
    \ of zero length.\n   ifLinkUpDownTrapEnable\n                 Default is disabled\
    \ (2).\n   ifConnectorPresent\n                 Set to false (2).\n   ifHighSpeed\
    \   See [RFC2863].\n   ifHCInOctets  The 64-bit version of ifInOctets; supported\
    \ if\n                 required by the compliance statements in [RFC2863].\n \
    \  ifHCOutOctets The 64-bit version of ifOutOctets; supported if\n           \
    \      required by the compliance statements in [RFC2863].\n   ifAlias       The\
    \ non-volatile 'alias' name for the interface as\n                 specified by\
    \ a network manager.\n   ifCounterDiscontinuityTime\n                 See [RFC2863].\n"
- title: 9.  The Use of RowPointer
  contents:
  - "9.  The Use of RowPointer\n   RowPointer is a textual convention used to identify\
    \ a conceptual row\n   in a MIB Table by pointing to the first accessible object\
    \ in that\n   row.  In this MIB module, the trafficParamPtr object from either\
    \ the\n   mplsInSegmentTable or mplsOutSegmentTable SHOULD indicate the first\n\
    \   accessible column in an entry in the MplsTunnelResourceEntry in the\n   MPLS-TE-STD-MIB\
    \ [RFC3812] to indicate the traffic parameter settings\n   for this segment, if\
    \ it represents an LSP used for a TE tunnel.\n   The trafficParamPtr object may\
    \ optionally point at an externally\n   defined traffic parameter specification\
    \ table.  A value of\n   zeroDotZero indicates best-effort treatment.  By having\
    \ the same\n   value of this object, two or more segments can indicate resource\n\
    \   sharing of such things as LSP queue space, etc.\n"
- title: 10.  MPLS Label Switching Router MIB Module Definitions
  contents:
  - '10.  MPLS Label Switching Router MIB Module Definitions

    '
- title: MPLS-LSR-STD-MIB DEFINITIONS ::= BEGIN
  contents:
  - 'MPLS-LSR-STD-MIB DEFINITIONS ::= BEGIN

    '
- title: IMPORTS
  contents:
  - "IMPORTS\n   MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,\n   Integer32, Counter32,\
    \ Unsigned32, Counter64, Gauge32,\n   zeroDotZero\n      FROM SNMPv2-SMI     \
    \                               -- [RFC2578]\n   MODULE-COMPLIANCE, OBJECT-GROUP,\
    \ NOTIFICATION-GROUP\n      FROM SNMPv2-CONF                                 \
    \  -- [RFC2580]\n   TruthValue, RowStatus, StorageType, RowPointer,\n   TimeStamp,\
    \ TEXTUAL-CONVENTION\n      FROM SNMPv2-TC                                   \
    \  -- [RFC2579]\n   InterfaceIndexOrZero, ifGeneralInformationGroup,\n   ifCounterDiscontinuityGroup\n\
    \      FROM IF-MIB                                        -- [RFC2863]\n   mplsStdMIB,\
    \ MplsLSPID, MplsLabel, MplsBitRate,\n   MplsOwner\n      FROM MPLS-TC-STD-MIB\
    \                               -- [RFC3811]\n   AddressFamilyNumbers\n      FROM\
    \ IANA-ADDRESS-FAMILY-NUMBERS-MIB               -- [IANAFamily]\n   InetAddress,\
    \ InetAddressType\n      FROM INET-ADDRESS-MIB                              --\
    \ [RFC3291]\n   ;\n"
- title: mplsLsrStdMIB MODULE-IDENTITY
  contents:
  - "mplsLsrStdMIB MODULE-IDENTITY\n   LAST-UPDATED \"200406030000Z\"  -- June 3,\
    \ 2004\n   ORGANIZATION \"Multiprotocol Label Switching (MPLS) Working Group\"\
    \n   CONTACT-INFO\n       \"        Cheenu Srinivasan\n                Bloomberg\
    \ L.P.\n        Email:  cheenu@bloomberg.net\n                Arun Viswanathan\n\
    \                Force10 Networks, Inc.\n        Email:  arunv@force10networks.com\n\
    \                Thomas D. Nadeau\n                Cisco Systems, Inc.\n     \
    \   Email:  tnadeau@cisco.com\n        Comments about this document should be\
    \ emailed\n        directly to the MPLS working group mailing list at\n      \
    \  mpls@uu.net.\"\n   DESCRIPTION\n       \"This MIB module contains managed object\
    \ definitions for\n        the Multiprotocol Label Switching (MPLS) Router as\n\
    \        defined in: Rosen, E., Viswanathan, A., and R.\n        Callon, Multiprotocol\
    \ Label Switching Architecture,\n        RFC 3031, January 2001.\n        Copyright\
    \ (C) The Internet Society (2004). The\n        initial version of this MIB module\
    \ was published\n        in RFC 3812. For full legal notices see the RFC\n   \
    \     itself or see:\n        http://www.ietf.org/copyrights/ianamib.html\"\n\
    \   -- Revision history.\n   REVISION\n       \"200406030000Z\"  -- June 3, 2004\n\
    \   DESCRIPTION\n       \"Initial revision, published as part of RFC 3813.\"\n\
    \   ::= { mplsStdMIB 2 }\n"
- title: -- TEXTUAL-CONVENTIONs
  contents:
  - '-- TEXTUAL-CONVENTIONs

    '
- title: MplsIndexType ::= TEXTUAL-CONVENTION
  contents:
  - "MplsIndexType ::= TEXTUAL-CONVENTION\n   STATUS              current\n   DESCRIPTION\n\
    \       \"This is an octet string that can be used as a table\n        index in\
    \ cases where a large addressable space is\n        required such as on an LSR\
    \ where many applications\n        may be provisioning labels.\n        Note that\
    \ the string containing the single octet with\n        the value 0x00 is a reserved\
    \ value used to represent\n        special cases. When this TEXTUAL-CONVENTION\
    \ is used\n        as the SYNTAX of an object, the DESCRIPTION clause\n      \
    \  MUST specify if this special value is valid and if so\n        what the special\
    \ meaning is.\n        In systems that provide write access to the MPLS-LSR-STD\n\
    \        MIB, mplsIndexType SHOULD be used as a simple multi-digit\n        integer\
    \ encoded as an octet string.\n        No further overloading of the meaning of\
    \ an index SHOULD\n        be made.\n        In systems that do not offer write\
    \ access to the MPLS-LSR-STD\n        MIB, the mplsIndexType may contain implicit\
    \ formatting that is\n        specific to the implementation to convey additional\n\
    \        information such as interface index, physical card or\n        device,\
    \ or application id. The interpretation of this\n        additional formatting\
    \ is implementation dependent and\n        not covered in this document. Such\
    \ formatting MUST\n        NOT impact the basic functionality of read-only access\n\
    \        to the MPLS-LSR-STD MIB by management applications that are\n       \
    \ not aware of the formatting rules.\"\n   SYNTAX              OCTET STRING (SIZE(1..24))\n"
- title: MplsIndexNextType ::= TEXTUAL-CONVENTION
  contents:
  - "MplsIndexNextType ::= TEXTUAL-CONVENTION\n   STATUS              current\n  \
    \ DESCRIPTION\n       \"When a MIB module is used for configuration, an object\
    \ with\n        this SYNTAX always contains a legal value (a non-zero-length\n\
    \        string) for an index that is not currently used in the relevant\n   \
    \     table. The Command Generator (Network Management Application)\n        reads\
    \ this variable and uses the (non-zero-length string)\n        value read when\
    \ creating a new row with an SNMP SET.\n        When the SET is performed, the\
    \ Command Responder (agent) must\n        determine whether the value is indeed\
    \ still unused; Two Network\n        Management Applications may attempt to create\
    \ a row\n        (configuration entry) simultaneously and use the same value.\
    \ If\n        it is currently unused, the SET succeeds and the Command\n     \
    \   Responder (agent) changes the value of this object, according\n        to\
    \ an implementation-specific algorithm.  If the value is in\n        use, however,\
    \ the SET fails.  The Network Management\n        Application must then re-read\
    \ this variable to obtain a new\n        usable value.\n        Note that the\
    \ string containing the single octet with\n        the value 0x00 is a reserved\
    \ value used to represent\n        the special case where no additional indexes\
    \ can be\n        provisioned, or in systems that do not offer\n        write\
    \ access, objects defined using this TEXTUAL-CONVENTION\n        MUST return the\
    \ string containing the single\n        octet with the value 0x00.\"\n   SYNTAX\
    \              OCTET STRING (SIZE(1..24))\n"
- title: -- Top level components of this MIB module.
  contents:
  - '-- Top level components of this MIB module.

    '
- title: -- Notifications
  contents:
  - '-- Notifications

    '
- title: mplsLsrNotifications OBJECT IDENTIFIER ::= { mplsLsrStdMIB 0 }
  contents:
  - 'mplsLsrNotifications OBJECT IDENTIFIER ::= { mplsLsrStdMIB 0 }

    '
- title: -- Tables, Scalars
  contents:
  - '-- Tables, Scalars

    '
- title: mplsLsrObjects       OBJECT IDENTIFIER ::= { mplsLsrStdMIB 1 }
  contents:
  - 'mplsLsrObjects       OBJECT IDENTIFIER ::= { mplsLsrStdMIB 1 }

    '
- title: -- Conformance
  contents:
  - '-- Conformance

    '
- title: mplsLsrConformance   OBJECT IDENTIFIER ::= { mplsLsrStdMIB 2 }
  contents:
  - 'mplsLsrConformance   OBJECT IDENTIFIER ::= { mplsLsrStdMIB 2 }

    '
- title: -- MPLS Interface Table.
  contents:
  - '-- MPLS Interface Table.

    '
- title: mplsInterfaceTable  OBJECT-TYPE
  contents:
  - "mplsInterfaceTable  OBJECT-TYPE\n   SYNTAX        SEQUENCE OF MplsInterfaceEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"This table specifies per-interface MPLS capability\n        and associated\
    \ information.\"\n   ::= { mplsLsrObjects 1 }\n"
- title: mplsInterfaceEntry OBJECT-TYPE
  contents:
  - "mplsInterfaceEntry OBJECT-TYPE\n   SYNTAX        MplsInterfaceEntry\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"A conceptual\
    \ row in this table is created\n        automatically by an LSR for every interface\
    \ capable\n        of supporting MPLS and which is configured to do so.\n    \
    \    A conceptual row in this table will exist if and only if\n        a corresponding\
    \ entry in ifTable exists with ifType =\n        mpls(166). If this associated\
    \ entry in ifTable is\n        operationally disabled (thus removing MPLS\n  \
    \      capabilities on that interface), the corresponding\n        entry in this\
    \ table MUST be deleted shortly thereafter.\n        An conceptual row with index\
    \ 0 is created if the LSR\n        supports per-platform labels. This conceptual\
    \ row\n        represents the per-platform label space and contains\n        parameters\
    \ that apply to all interfaces that participate\n        in the per-platform label\
    \ space. Other conceptual rows\n        in this table represent MPLS interfaces\
    \ that may\n        participate in either the per-platform or per-\n        interface\
    \ label spaces, or both.  Implementations\n        that either only support per-platform\
    \ labels,\n        or have only them configured, may choose to return\n      \
    \  just the mplsInterfaceEntry of 0 and not return\n        the other rows. This\
    \ will greatly reduce the number\n        of objects returned. Further information\
    \ about label\n        space participation of an interface is provided in\n  \
    \      the DESCRIPTION clause of\n        mplsInterfaceLabelParticipationType.\"\
    \n   INDEX { mplsInterfaceIndex }\n   ::= { mplsInterfaceTable 1 }\n"
- title: MplsInterfaceEntry ::= SEQUENCE {
  contents:
  - "MplsInterfaceEntry ::= SEQUENCE {\n  mplsInterfaceIndex                  InterfaceIndexOrZero,\n\
    \  mplsInterfaceLabelMinIn             MplsLabel,\n  mplsInterfaceLabelMaxIn \
    \            MplsLabel,\n  mplsInterfaceLabelMinOut            MplsLabel,\n  mplsInterfaceLabelMaxOut\
    \            MplsLabel,\n  mplsInterfaceTotalBandwidth         MplsBitRate,\n\
    \  mplsInterfaceAvailableBandwidth     MplsBitRate,\n  mplsInterfaceLabelParticipationType\
    \ BITS\n"
- title: '}'
  contents:
  - '}

    '
- title: mplsInterfaceIndex OBJECT-TYPE
  contents:
  - "mplsInterfaceIndex OBJECT-TYPE\n   SYNTAX        InterfaceIndexOrZero\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"This is\
    \ a unique index for an entry in the\n        MplsInterfaceTable.  A non-zero\
    \ index for an\n        entry indicates the ifIndex for the corresponding\n  \
    \      interface entry of the MPLS-layer in the ifTable.\n        The entry with\
    \ index 0 represents the per-platform\n        label space and contains parameters\
    \ that apply to all\n        interfaces that participate in the per-platform label\n\
    \        space. Other entries defined in this table represent\n        additional\
    \ MPLS interfaces that may participate in either\n        the per-platform or\
    \ per-interface label spaces, or both.\"\n   REFERENCE\n       \"RFC 2863 - The\
    \ Interfaces Group MIB, McCloghrie, K.,\n        and F. Kastenholtz, June 2000\"\
    \n   ::= { mplsInterfaceEntry 1 }\n"
- title: mplsInterfaceLabelMinIn OBJECT-TYPE
  contents:
  - "mplsInterfaceLabelMinIn OBJECT-TYPE\n   SYNTAX        MplsLabel\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This is the\
    \ minimum value of an MPLS label that this\n        LSR is willing to receive\
    \ on this interface.\"\n   ::= { mplsInterfaceEntry 2 }\n"
- title: mplsInterfaceLabelMaxIn OBJECT-TYPE
  contents:
  - "mplsInterfaceLabelMaxIn OBJECT-TYPE\n   SYNTAX        MplsLabel\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This is the\
    \ maximum value of an MPLS label that this\n        LSR is willing to receive\
    \ on this interface.\"\n   ::= { mplsInterfaceEntry 3 }\n"
- title: mplsInterfaceLabelMinOut OBJECT-TYPE
  contents:
  - "mplsInterfaceLabelMinOut OBJECT-TYPE\n   SYNTAX        MplsLabel\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This is the\
    \ minimum value of an MPLS label that this\n        LSR is willing to send on\
    \ this interface.\"\n   ::= { mplsInterfaceEntry 4 }\n"
- title: mplsInterfaceLabelMaxOut OBJECT-TYPE
  contents:
  - "mplsInterfaceLabelMaxOut OBJECT-TYPE\n   SYNTAX        MplsLabel\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This is the\
    \ maximum value of an MPLS label that this\n        LSR is willing to send on\
    \ this interface.\"\n   ::= { mplsInterfaceEntry 5 }\n"
- title: mplsInterfaceTotalBandwidth OBJECT-TYPE
  contents:
  - "mplsInterfaceTotalBandwidth OBJECT-TYPE\n   SYNTAX        MplsBitRate\n   UNITS\
    \         \"kilobits per second\"\n   MAX-ACCESS    read-only\n   STATUS     \
    \   current\n   DESCRIPTION\n       \"This value indicates the total amount of\
    \ usable\n        bandwidth on this interface and is specified in\n        kilobits\
    \ per second (Kbps).  This variable is not\n        applicable when applied to\
    \ the interface with index\n        0. When this value cannot be measured, this\
    \ value\n        should contain the nominal bandwidth.\"\n"
- title: ::= { mplsInterfaceEntry 6 }
  contents:
  - '::= { mplsInterfaceEntry 6 }

    '
- title: mplsInterfaceAvailableBandwidth OBJECT-TYPE
  contents:
  - "mplsInterfaceAvailableBandwidth OBJECT-TYPE\n   SYNTAX        MplsBitRate\n \
    \  MAX-ACCESS    read-only\n   STATUS        current\n   DESCRIPTION\n       \"\
    This value indicates the total amount of available\n        bandwidth available\
    \ on this interface and is\n        specified in kilobits per second (Kbps). \
    \ This value\n        is calculated as the difference between the amount\n   \
    \     of bandwidth currently in use and that specified in\n        mplsInterfaceTotalBandwidth.\
    \  This variable is not\n        applicable when applied to the interface with\
    \ index\n        0. When this value cannot be measured, this value\n        should\
    \ contain the nominal bandwidth.\"\n"
- title: ::= { mplsInterfaceEntry 7 }
  contents:
  - '::= { mplsInterfaceEntry 7 }

    '
- title: mplsInterfaceLabelParticipationType OBJECT-TYPE
  contents:
  - "mplsInterfaceLabelParticipationType OBJECT-TYPE\n   SYNTAX  BITS {\n        \
    \          perPlatform (0),\n                  perInterface (1)\n            \
    \  }\n   MAX-ACCESS    read-only\n   STATUS        current\n   DESCRIPTION\n \
    \      \"If the value of the mplsInterfaceIndex for this\n        entry is zero,\
    \ then this entry corresponds to the\n        per-platform label space for all\
    \ interfaces configured\n        to use that label space. In this case the perPlatform(0)\n\
    \        bit MUST be set; the perInterface(1) bit is meaningless\n        and\
    \ MUST be ignored.\n        The remainder of this description applies to entries\n\
    \        with a non-zero value of mplsInterfaceIndex.\n        If the perInterface(1)\
    \ bit is set then the value of\n        mplsInterfaceLabelMinIn, mplsInterfaceLabelMaxIn,\n\
    \        mplsInterfaceLabelMinOut, and\n        mplsInterfaceLabelMaxOut for this\
    \ entry reflect the\n        label ranges for this interface.\n        If only\
    \ the perPlatform(0) bit is set, then the value of\n        mplsInterfaceLabelMinIn,\
    \ mplsInterfaceLabelMaxIn,\n        mplsInterfaceLabelMinOut, and\n        mplsInterfaceLabelMaxOut\
    \ for this entry MUST be\n        identical to the instance of these objects with\n\
    \        index 0.  These objects may only vary from the entry\n        with index\
    \ 0 if both the perPlatform(0) and perInterface(1)\n        bits are set.\n  \
    \      In all cases, at a minimum one of the perPlatform(0) or\n        perInterface(1)\
    \ bits MUST be set to indicate that\n        at least one label space is in use\
    \ by this interface. In\n        all cases, agents MUST ensure that label ranges\
    \ are\n        specified consistently and MUST return an\n        inconsistentValue\
    \ error when they do not.\"\n   REFERENCE\n       \"Rosen, E., Viswanathan, A.,\
    \ and R. Callon,\n        Multiprotocol Label Switching Architecture, RFC\n  \
    \      3031, January 2001.\"\n"
- title: ::= { mplsInterfaceEntry 8 }
  contents:
  - '::= { mplsInterfaceEntry 8 }

    '
- title: -- End of mplsInterfaceTable
  contents:
  - '-- End of mplsInterfaceTable

    '
- title: -- MPLS Interface Performance Table.
  contents:
  - '-- MPLS Interface Performance Table.

    '
- title: mplsInterfacePerfTable  OBJECT-TYPE
  contents:
  - "mplsInterfacePerfTable  OBJECT-TYPE\n   SYNTAX        SEQUENCE OF MplsInterfacePerfEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"This table provides MPLS performance information on\n        a per-interface\
    \ basis.\"\n   ::= { mplsLsrObjects 2 }\n"
- title: mplsInterfacePerfEntry OBJECT-TYPE
  contents:
  - "mplsInterfacePerfEntry OBJECT-TYPE\n   SYNTAX        MplsInterfacePerfEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"An entry in this table is created by the LSR for\n        every interface\
    \ capable of supporting MPLS.  Its is\n        an extension to the mplsInterfaceEntry\
    \ table.\n        Note that the discontinuity behavior of entries in\n       \
    \ this table MUST be based on the corresponding\n        ifEntry's ifDiscontinuityTime.\"\
    \n   AUGMENTS      { mplsInterfaceEntry }\n      ::= { mplsInterfacePerfTable\
    \ 1 }\n"
- title: MplsInterfacePerfEntry ::= SEQUENCE {
  contents:
  - "MplsInterfacePerfEntry ::= SEQUENCE {\n      -- incoming direction\n      mplsInterfacePerfInLabelsInUse\
    \         Gauge32,\n      mplsInterfacePerfInLabelLookupFailures Counter32,\n\
    \      -- outgoing direction\n      mplsInterfacePerfOutLabelsInUse      Gauge32,\n\
    \      mplsInterfacePerfOutFragmentedPkts   Counter32\n   }\n"
- title: mplsInterfacePerfInLabelsInUse OBJECT-TYPE
  contents:
  - "mplsInterfacePerfInLabelsInUse OBJECT-TYPE\n   SYNTAX        Gauge32\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This object\
    \ counts the number of labels that are in\n        use at this point in time on\
    \ this interface in the\n        incoming direction. If the interface participates\
    \ in\n        only the per-platform label space, then the value of\n        the\
    \ instance of this object MUST be identical to\n        the value of the instance\
    \ with index 0. If the\n        interface participates in the per-interface label\n\
    \        space, then the instance of this object MUST\n        represent the number\
    \ of per-interface labels that\n        are in use on this interface.\"\n   ::=\
    \ { mplsInterfacePerfEntry 1 }\n"
- title: mplsInterfacePerfInLabelLookupFailures  OBJECT-TYPE
  contents:
  - "mplsInterfacePerfInLabelLookupFailures  OBJECT-TYPE\n   SYNTAX        Counter32\n\
    \   MAX-ACCESS    read-only\n   STATUS        current\n   DESCRIPTION\n      \
    \ \"This object counts the number of labeled packets\n        that have been received\
    \ on this interface and which\n        were discarded because there was no matching\
    \ cross-\n        connect entry. This object MUST count on a per-\n        interface\
    \ basis regardless of which label space the\n        interface participates in.\"\
    \n   ::= { mplsInterfacePerfEntry 2 }\n"
- title: mplsInterfacePerfOutLabelsInUse OBJECT-TYPE
  contents:
  - "mplsInterfacePerfOutLabelsInUse OBJECT-TYPE\n   SYNTAX        Gauge32\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This object\
    \ counts the number of top-most labels in\n        the outgoing label stacks that\
    \ are in use at this\n        point in time on this interface. This object MUST\n\
    \        count on a per-interface basis regardless of which\n        label space\
    \ the interface participates in.\"\n   ::= { mplsInterfacePerfEntry 3 }\n"
- title: mplsInterfacePerfOutFragmentedPkts OBJECT-TYPE
  contents:
  - "mplsInterfacePerfOutFragmentedPkts OBJECT-TYPE\n   SYNTAX        Counter32\n\
    \   MAX-ACCESS    read-only\n   STATUS        current\n   DESCRIPTION\n      \
    \ \"This object counts the number of outgoing MPLS\n        packets that required\
    \ fragmentation before\n        transmission on this interface. This object MUST\n\
    \        count on a per-interface basis regardless of which\n        label space\
    \ the interface participates in.\"\n"
- title: ::= { mplsInterfacePerfEntry 4 }
  contents:
  - '::= { mplsInterfacePerfEntry 4 }

    '
- title: -- mplsInterfacePerf Table end.
  contents:
  - '-- mplsInterfacePerf Table end.

    '
- title: mplsInSegmentIndexNext OBJECT-TYPE
  contents:
  - "mplsInSegmentIndexNext OBJECT-TYPE\n   SYNTAX        MplsIndexNextType\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This object\
    \ contains the next available value to\n        be used for mplsInSegmentIndex\
    \ when creating entries\n        in the mplsInSegmentTable. The special value\
    \ of a\n        string containing the single octet 0x00 indicates\n        that\
    \ no new entries can be created in this table.\n        Agents not allowing managers\
    \ to create entries\n        in this table MUST set this object to this special\n\
    \        value.\"\n      ::= { mplsLsrObjects 3 }\n"
- title: -- in-segment table.
  contents:
  - '-- in-segment table.

    '
- title: mplsInSegmentTable  OBJECT-TYPE
  contents:
  - "mplsInSegmentTable  OBJECT-TYPE\n   SYNTAX        SEQUENCE OF MplsInSegmentEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"This table contains a description of the incoming MPLS\n        segments\
    \ (labels) to an LSR and their associated parameters.\n        The index for this\
    \ table is mplsInSegmentIndex.\n        The index structure of this table is specifically\
    \ designed\n        to handle many different MPLS implementations that manage\n\
    \        their labels both in a distributed and centralized manner.\n        The\
    \ table is also designed to handle existing MPLS labels\n        as defined in\
    \ RFC3031 as well as longer ones that may\n        be necessary in the future.\n\
    \        In cases where the label cannot fit into the\n        mplsInSegmentLabel\
    \ object, the mplsInSegmentLabelPtr\n        will indicate this by being set to\
    \ the first accessible\n        column in the appropriate extension table's row.\n\
    \        In this case an additional table MUST\n        be provided and MUST be\
    \ indexed by at least the indexes\n        used by this table. In all other cases\
    \ when the label is\n        represented within the mplsInSegmentLabel object,\
    \ the\n        mplsInSegmentLabelPtr MUST be set to 0.0. Due to the\n        fact\
    \ that MPLS labels may not exceed 24 bits, the\n        mplsInSegmentLabelPtr\
    \ object is only a provision for\n        future-proofing the MIB module. Thus,\
    \ the definition\n        of any extension tables is beyond the scope of this\n\
    \        MIB module.\"\n      ::= { mplsLsrObjects 4 }\n"
- title: mplsInSegmentEntry  OBJECT-TYPE
  contents:
  - "mplsInSegmentEntry  OBJECT-TYPE\n   SYNTAX        MplsInSegmentEntry\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"An entry\
    \ in this table represents one incoming\n        segment as is represented in\
    \ an LSR's LFIB.\n        An entry can be created by a network\n        administrator\
    \ or an SNMP agent, or an MPLS signaling\n        protocol.  The creator of the\
    \ entry is denoted by\n        mplsInSegmentOwner.\n        The value of mplsInSegmentRowStatus\
    \ cannot be active(1)\n        unless the ifTable entry corresponding to\n   \
    \     mplsInSegmentInterface exists.  An entry in this table\n        must match\
    \ any incoming packets, and indicates an\n        instance of mplsXCEntry based\
    \ on which forwarding\n        and/or switching actions are taken.\"\n   INDEX\
    \ { mplsInSegmentIndex }\n   ::= { mplsInSegmentTable 1 }\n"
- title: MplsInSegmentEntry ::= SEQUENCE {
  contents:
  - "MplsInSegmentEntry ::= SEQUENCE {\n  mplsInSegmentIndex                MplsIndexType,\n\
    \  mplsInSegmentInterface            InterfaceIndexOrZero,\n  mplsInSegmentLabel\
    \                MplsLabel,\n  mplsInSegmentLabelPtr             RowPointer,\n\
    \  mplsInSegmentNPop                 Integer32,\n  mplsInSegmentAddrFamily   \
    \        AddressFamilyNumbers,\n  mplsInSegmentXCIndex              MplsIndexType,\n\
    \  mplsInSegmentOwner                MplsOwner ,\n  mplsInSegmentTrafficParamPtr\
    \      RowPointer,\n  mplsInSegmentRowStatus            RowStatus,\n  mplsInSegmentStorageType\
    \          StorageType\n"
- title: '}'
  contents:
  - '}

    '
- title: mplsInSegmentIndex OBJECT-TYPE
  contents:
  - "mplsInSegmentIndex OBJECT-TYPE\n   SYNTAX        MplsIndexType\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"The index\
    \ for this in-segment. The\n        string containing the single octet 0x00\n\
    \        MUST not be used as an index.\"\n   ::= { mplsInSegmentEntry 1 }\n"
- title: mplsInSegmentInterface OBJECT-TYPE
  contents:
  - "mplsInSegmentInterface OBJECT-TYPE\n   SYNTAX        InterfaceIndexOrZero\n \
    \  MAX-ACCESS    read-create\n   STATUS        current\n   DESCRIPTION\n     \
    \  \"This object represents the\n        interface index for the incoming MPLS\
    \ interface.  A\n        value of zero represents all interfaces participating\
    \ in\n        the per-platform label space.  This may only be used\n        in\
    \ cases where the incoming interface and label\n        are associated with the\
    \ same mplsXCEntry. Specifically,\n        given a label and any incoming interface\
    \ pair from the\n        per-platform label space, the outgoing label/interface\n\
    \        mapping remains the same. If this is not the case,\n        then individual\
    \ entries MUST exist that\n        can then be mapped to unique mplsXCEntries.\"\
    \n   ::= { mplsInSegmentEntry 2 }\n"
- title: mplsInSegmentLabel OBJECT-TYPE
  contents:
  - "mplsInSegmentLabel OBJECT-TYPE\n   SYNTAX        MplsLabel\n   MAX-ACCESS   \
    \ read-create\n   STATUS        current\n   DESCRIPTION\n     \"If the corresponding\
    \ instance of mplsInSegmentLabelPtr is\n      zeroDotZero then this object MUST\
    \ contain the incoming label\n      associated with this in-segment. If not this\
    \ object SHOULD\n      be zero and MUST be ignored.\"\n   ::= { mplsInSegmentEntry\
    \ 3 }\n"
- title: mplsInSegmentLabelPtr OBJECT-TYPE
  contents:
  - "mplsInSegmentLabelPtr OBJECT-TYPE\n   SYNTAX        RowPointer\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"If the label\
    \ for this segment cannot be represented\n        fully within the mplsInSegmentLabel\
    \ object,\n        this object MUST point to the first accessible\n        column\
    \ of a conceptual row in an external table containing\n        the label.  In\
    \ this case, the mplsInSegmentTopLabel\n        object SHOULD be set to 0 and\
    \ ignored. This object MUST\n        be set to zeroDotZero otherwise.\"\n   DEFVAL\
    \ { zeroDotZero }\n   ::= { mplsInSegmentEntry 4 }\n"
- title: mplsInSegmentNPop OBJECT-TYPE
  contents:
  - "mplsInSegmentNPop OBJECT-TYPE\n   SYNTAX        Integer32 (1..2147483647)\n \
    \  MAX-ACCESS    read-create\n   STATUS        current\n   DESCRIPTION\n     \
    \  \"The number of labels to pop from the incoming\n        packet.  Normally\
    \ only the top label is popped from\n        the packet and used for all switching\
    \ decisions for\n        that packet.  This is indicated by setting this\n   \
    \     object to the default value of 1. If an LSR supports\n        popping of\
    \ more than one label, this object MUST\n        be set to that number. This object\
    \ cannot be modified\n        if mplsInSegmentRowStatus is active(1).\"\n   DEFVAL\
    \        { 1 }\n   ::= { mplsInSegmentEntry 5 }\n"
- title: mplsInSegmentAddrFamily OBJECT-TYPE
  contents:
  - "mplsInSegmentAddrFamily OBJECT-TYPE\n   SYNTAX        AddressFamilyNumbers\n\
    \   MAX-ACCESS    read-create\n   STATUS        current\n   DESCRIPTION\n    \
    \   \"The IANA address family [IANAFamily] of packets\n        received on this\
    \ segment, which is used at an egress\n        LSR to deliver them to the appropriate\
    \ layer 3 entity.\n        A value of other(0) indicates that the family type\
    \ is\n        either unknown or undefined; this SHOULD NOT be used\n        at\
    \ an egress LSR. This object cannot be\n        modified if mplsInSegmentRowStatus\
    \ is active(1).\"\n   REFERENCE\n       \"Internet Assigned Numbers Authority\
    \ (IANA), ADDRESS\n        FAMILY NUMBERS, (http://www.iana.org/assignments/\n\
    \        address-family-numbers), for MIB see:\n        http://www.iana.org/assignments/\n\
    \        ianaaddressfamilynumbers-mib\n"
- title: '"'
  contents:
  - "\"\n   DEFVAL        { other }\n   ::= { mplsInSegmentEntry 6 }\n"
- title: mplsInSegmentXCIndex OBJECT-TYPE
  contents:
  - "mplsInSegmentXCIndex OBJECT-TYPE\n   SYNTAX        MplsIndexType\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"Index into\
    \ mplsXCTable which identifies which cross-\n        connect entry this segment\
    \ is part of.  The string\n        containing the single octet 0x00 indicates\
    \ that this\n        entry is not referred to by any cross-connect entry.\n  \
    \      When a cross-connect entry is created which this\n        in-segment is\
    \ a part of, this object is automatically\n        updated to reflect the value\
    \ of mplsXCIndex of that\n        cross-connect entry.\"\n   ::= { mplsInSegmentEntry\
    \ 7 }\n"
- title: mplsInSegmentOwner OBJECT-TYPE
  contents:
  - "mplsInSegmentOwner OBJECT-TYPE\n   SYNTAX        MplsOwner\n   MAX-ACCESS   \
    \ read-only\n   STATUS        current\n   DESCRIPTION\n       \"Denotes the entity\
    \ that created and is responsible\n        for managing this segment.\"\n   ::=\
    \ { mplsInSegmentEntry 8 }\n"
- title: mplsInSegmentTrafficParamPtr OBJECT-TYPE
  contents:
  - "mplsInSegmentTrafficParamPtr OBJECT-TYPE\n   SYNTAX            RowPointer\n \
    \  MAX-ACCESS        read-create\n   STATUS            current\n   DESCRIPTION\n\
    \     \"This variable represents a pointer to the traffic\n      parameter specification\
    \ for this in-segment.  This\n      value may point at an entry in the\n     \
    \ mplsTunnelResourceTable in the MPLS-TE-STD-MIB (RFC3812)\n      to indicate\
    \ which traffic parameter settings for this\n      segment if it represents an\
    \ LSP used for a TE tunnel.\n      This value may optionally point at an\n   \
    \   externally defined traffic parameter specification\n      table.  A value\
    \ of zeroDotZero indicates best-effort\n      treatment.  By having the same value\
    \ of this object,\n      two or more segments can indicate resource sharing\n\
    \      of such things as LSP queue space, etc.\n      This object cannot be modified\
    \ if mplsInSegmentRowStatus\n      is active(1).  For entries in this table that\n\
    \      are preserved after a re-boot, the agent MUST ensure\n      that their\
    \ integrity be preserved, or this object should\n      be set to 0.0 if it cannot.\"\
    \n   DEFVAL { zeroDotZero }\n   ::= { mplsInSegmentEntry 9 }\n"
- title: mplsInSegmentRowStatus OBJECT-TYPE
  contents:
  - "mplsInSegmentRowStatus OBJECT-TYPE\n   SYNTAX        RowStatus\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"This variable\
    \ is used to create, modify, and/or\n        delete a row in this table. When\
    \ a row in this\n        table has a row in the active(1) state, no\n        objects\
    \ in this row can be modified except the\n        mplsInSegmentRowStatus and mplsInSegmentStorageType.\"\
    \n   ::= { mplsInSegmentEntry 10 }\n"
- title: mplsInSegmentStorageType OBJECT-TYPE
  contents:
  - "mplsInSegmentStorageType OBJECT-TYPE\n   SYNTAX        StorageType\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"This variable\
    \ indicates the storage type for this\n        object. The agent MUST ensure that\
    \ this object's\n        value remains consistent with the associated\n      \
    \  mplsXCEntry. Conceptual rows having the value\n        'permanent' need not\
    \ allow write-access to any\n        columnar objects in the row.\"\n   REFERENCE\n\
    \        \"See RFC2579.\"\n   DEFVAL { volatile }\n   ::= { mplsInSegmentEntry\
    \ 11 }\n"
- title: -- End of mplsInSegmentTable
  contents:
  - '-- End of mplsInSegmentTable

    '
- title: -- in-segment performance table.
  contents:
  - '-- in-segment performance table.

    '
- title: mplsInSegmentPerfTable  OBJECT-TYPE
  contents:
  - "mplsInSegmentPerfTable  OBJECT-TYPE\n   SYNTAX        SEQUENCE OF MplsInSegmentPerfEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"This table contains statistical information for\n        incoming MPLS\
    \ segments to an LSR.\"\n   ::= { mplsLsrObjects 5 }\n"
- title: mplsInSegmentPerfEntry  OBJECT-TYPE
  contents:
  - "mplsInSegmentPerfEntry  OBJECT-TYPE\n   SYNTAX        MplsInSegmentPerfEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"An entry in this table contains statistical\n        information about\
    \ one incoming segment which is\n        configured in the mplsInSegmentTable.\
    \ The counters\n        in this entry should behave in a manner similar to\n \
    \       that of the interface.\n        mplsInSegmentPerfDiscontinuityTime indicates\
    \ the\n        time of the last discontinuity in all of these\n        objects.\"\
    \n   AUGMENTS  { mplsInSegmentEntry }\n   ::= { mplsInSegmentPerfTable 1 }\n"
- title: MplsInSegmentPerfEntry ::= SEQUENCE {
  contents:
  - "MplsInSegmentPerfEntry ::= SEQUENCE {\n    mplsInSegmentPerfOctets          \
    \   Counter32,\n    mplsInSegmentPerfPackets            Counter32,\n    mplsInSegmentPerfErrors\
    \             Counter32,\n    mplsInSegmentPerfDiscards           Counter32,\n\
    \    -- high capacity counter\n    mplsInSegmentPerfHCOctets           Counter64,\n\
    \    mplsInSegmentPerfDiscontinuityTime  TimeStamp\n   }\n"
- title: mplsInSegmentPerfOctets OBJECT-TYPE
  contents:
  - "mplsInSegmentPerfOctets OBJECT-TYPE\n   SYNTAX        Counter32\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This value\
    \ represents the total number of octets\n        received by this segment. It\
    \ MUST be equal to the\n        least significant 32 bits of\n        mplsInSegmentPerfHCOctets\n\
    \        if mplsInSegmentPerfHCOctets is supported according to\n        the rules\
    \ spelled out in RFC2863.\"\n   ::= { mplsInSegmentPerfEntry 1 }\n"
- title: mplsInSegmentPerfPackets OBJECT-TYPE
  contents:
  - "mplsInSegmentPerfPackets OBJECT-TYPE\n   SYNTAX        Counter32\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"Total number\
    \ of packets received by this segment.\"\n   ::= { mplsInSegmentPerfEntry 2 }\n"
- title: mplsInSegmentPerfErrors OBJECT-TYPE
  contents:
  - "mplsInSegmentPerfErrors OBJECT-TYPE\n   SYNTAX        Counter32\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"The number\
    \ of errored packets received on this\n        segment.\"\n   ::= { mplsInSegmentPerfEntry\
    \ 3 }\n"
- title: mplsInSegmentPerfDiscards OBJECT-TYPE
  contents:
  - "mplsInSegmentPerfDiscards OBJECT-TYPE\n   SYNTAX        Counter32\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"The number\
    \ of labeled packets received on this in-\n        segment, which were chosen\
    \ to be discarded even\n        though no errors had been detected to prevent\
    \ their\n        being transmitted.  One possible reason for\n        discarding\
    \ such a labeled packet could be to free up\n        buffer space.\"\n   ::= {\
    \ mplsInSegmentPerfEntry 4 }\n"
- title: mplsInSegmentPerfHCOctets OBJECT-TYPE
  contents:
  - "mplsInSegmentPerfHCOctets OBJECT-TYPE\n   SYNTAX        Counter64\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"The total number\
    \ of octets received.  This is the 64\n        bit version of mplsInSegmentPerfOctets,\n\
    \        if mplsInSegmentPerfHCOctets is supported according to\n        the rules\
    \ spelled out in RFC2863.\"\n   ::= { mplsInSegmentPerfEntry 5 }\n"
- title: mplsInSegmentPerfDiscontinuityTime OBJECT-TYPE
  contents:
  - "mplsInSegmentPerfDiscontinuityTime OBJECT-TYPE\n   SYNTAX      TimeStamp\n  \
    \ MAX-ACCESS  read-only\n   STATUS      current\n   DESCRIPTION\n       \"The\
    \ value of sysUpTime on the most recent occasion\n        at which any one or\
    \ more of this segment's Counter32\n        or Counter64 suffered a discontinuity.\
    \ If no such\n        discontinuities have occurred since the last re-\n     \
    \   initialization of the local management subsystem,\n        then this object\
    \ contains a zero value.\"\n   ::= { mplsInSegmentPerfEntry 6 }\n"
- title: -- End of mplsInSegmentPerfTable.
  contents:
  - '-- End of mplsInSegmentPerfTable.

    '
- title: -- out-segment table.
  contents:
  - '-- out-segment table.

    '
- title: mplsOutSegmentIndexNext OBJECT-TYPE
  contents:
  - "mplsOutSegmentIndexNext OBJECT-TYPE\n   SYNTAX        MplsIndexNextType\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This object\
    \ contains the next available value to\n        be used for mplsOutSegmentIndex\
    \ when creating entries\n        in the mplsOutSegmentTable. The special value\
    \ of a\n        string containing the single octet 0x00\n        indicates that\
    \ no new entries can be created in this\n        table. Agents not allowing managers\
    \ to create entries\n        in this table MUST set this object to this special\n\
    \        value.\"\n   ::= { mplsLsrObjects 6 }\n"
- title: mplsOutSegmentTable  OBJECT-TYPE
  contents:
  - "mplsOutSegmentTable  OBJECT-TYPE\n   SYNTAX        SEQUENCE OF MplsOutSegmentEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"This table contains a representation of the outgoing\n        segments\
    \ from an LSR.\"\n   ::= { mplsLsrObjects 7 }\n"
- title: mplsOutSegmentEntry  OBJECT-TYPE
  contents:
  - "mplsOutSegmentEntry  OBJECT-TYPE\n   SYNTAX        MplsOutSegmentEntry\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"An entry\
    \ in this table represents one outgoing\n        segment.  An entry can be created\
    \ by a network\n        administrator, an SNMP agent, or an MPLS signaling\n \
    \       protocol.  The object mplsOutSegmentOwner indicates\n        the creator\
    \ of this entry. The value of\n        mplsOutSegmentRowStatus cannot be active(1)\
    \ unless\n        the ifTable entry corresponding to\n        mplsOutSegmentInterface\
    \ exists.\n        Note that the indexing of this table uses a single,\n     \
    \   arbitrary index (mplsOutSegmentIndex) to indicate\n        which out-segment\
    \ (i.e.: label) is being switched to\n        from which in-segment (i.e: label)\
    \ or in-segments.\n        This is necessary because it is possible to have an\n\
    \        equal-cost multi-path situation where two identical\n        out-going\
    \ labels are assigned to the same\n        cross-connect (i.e.: they go to two\
    \ different neighboring\n        LSRs); thus, requiring two out-segments. In order\
    \ to\n        preserve the uniqueness of the references\n        by the mplsXCEntry,\
    \ an arbitrary integer must be used as\n        the index for this table.\"\n\
    \   INDEX { mplsOutSegmentIndex }\n   ::= { mplsOutSegmentTable 1 }\n"
- title: MplsOutSegmentEntry ::= SEQUENCE {
  contents:
  - "MplsOutSegmentEntry ::= SEQUENCE {\n  mplsOutSegmentIndex                MplsIndexType,\n\
    \  mplsOutSegmentInterface            InterfaceIndexOrZero,\n  mplsOutSegmentPushTopLabel\
    \         TruthValue,\n  mplsOutSegmentTopLabel             MplsLabel,\n  mplsOutSegmentTopLabelPtr\
    \          RowPointer,\n  mplsOutSegmentNextHopAddrType      InetAddressType,\n\
    \  mplsOutSegmentNextHopAddr          InetAddress,\n  mplsOutSegmentXCIndex  \
    \            MplsIndexType,\n  mplsOutSegmentOwner                MplsOwner,\n\
    \  mplsOutSegmentTrafficParamPtr      RowPointer,\n  mplsOutSegmentRowStatus \
    \           RowStatus,\n  mplsOutSegmentStorageType          StorageType\n"
- title: '}'
  contents:
  - '}

    '
- title: mplsOutSegmentIndex OBJECT-TYPE
  contents:
  - "mplsOutSegmentIndex OBJECT-TYPE\n   SYNTAX        MplsIndexType\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"This value\
    \ contains a unique index for this row.\n        While a value of a string containing\
    \ the single\n        octet 0x00 is not valid as an index for entries\n      \
    \  in this table, it can be supplied as a valid value\n        to index the mplsXCTable\
    \ to represent entries for\n        which no out-segment has been configured or\n\
    \        exists.\"\n   ::= { mplsOutSegmentEntry 1 }\n"
- title: mplsOutSegmentInterface OBJECT-TYPE
  contents:
  - "mplsOutSegmentInterface OBJECT-TYPE\n   SYNTAX        InterfaceIndexOrZero\n\
    \   MAX-ACCESS    read-create\n   STATUS        current\n   DESCRIPTION\n    \
    \   \"This value must contain the interface index of the\n        outgoing interface.\
    \ This object cannot be modified\n        if mplsOutSegmentRowStatus is active(1).\
    \ The\n        mplsOutSegmentRowStatus cannot be set to active(1)\n        until\
    \ this object is set to a value corresponding to\n        a valid ifEntry.\"\n\
    \   ::= { mplsOutSegmentEntry 2 }\n"
- title: mplsOutSegmentPushTopLabel OBJECT-TYPE
  contents:
  - "mplsOutSegmentPushTopLabel OBJECT-TYPE\n   SYNTAX        TruthValue\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"This value\
    \ indicates whether or not a top label\n        should be pushed onto the outgoing\
    \ packet's label\n        stack.  The value of this variable MUST be set to\n\
    \        true(1) if the outgoing interface does not support\n        pop-and-go\
    \ (and no label stack remains). For example,\n        on ATM interface, or if\
    \ the segment represents a\n        tunnel origination.  Note that it is considered\n\
    \        an error in the case that mplsOutSegmentPushTopLabel\n        is set\
    \ to false, but the cross-connect entry which\n        refers to this out-segment\
    \ has a non-zero\n        mplsLabelStackIndex.  The LSR MUST ensure that this\n\
    \        situation does not happen. This object cannot be\n        modified if\
    \ mplsOutSegmentRowStatus is active(1).\"\n   DEFVAL { true }\n   ::= { mplsOutSegmentEntry\
    \ 3 }\n"
- title: mplsOutSegmentTopLabel OBJECT-TYPE
  contents:
  - "mplsOutSegmentTopLabel OBJECT-TYPE\n   SYNTAX        MplsLabel\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"If mplsOutSegmentPushTopLabel\
    \ is true then this\n        represents the label that should be pushed onto the\n\
    \        top of the outgoing packet's label stack. Otherwise\n        this value\
    \ SHOULD be set to 0 by the management\n        station and MUST be ignored by\
    \ the agent. This\n        object cannot be modified if mplsOutSegmentRowStatus\n\
    \        is active(1).\"\n   DEFVAL { 0 }\n   ::= { mplsOutSegmentEntry 4 }\n"
- title: mplsOutSegmentTopLabelPtr OBJECT-TYPE
  contents:
  - "mplsOutSegmentTopLabelPtr OBJECT-TYPE\n   SYNTAX        RowPointer\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"If the label\
    \ for this segment cannot be represented\n        fully within the mplsOutSegmentLabel\
    \ object,\n        this object MUST point to the first accessible\n        column\
    \ of a conceptual row in an external table containing\n        the label.  In\
    \ this case, the mplsOutSegmentTopLabel\n        object SHOULD be set to 0 and\
    \ ignored. This object\n        MUST be set to zeroDotZero otherwise.\"\n   DEFVAL\
    \ { zeroDotZero }\n   ::= { mplsOutSegmentEntry 5 }\n"
- title: mplsOutSegmentNextHopAddrType OBJECT-TYPE
  contents:
  - "mplsOutSegmentNextHopAddrType OBJECT-TYPE\n   SYNTAX        InetAddressType\n\
    \   MAX-ACCESS    read-create\n   STATUS        current\n   DESCRIPTION\n    \
    \   \"Indicates the next hop Internet address type.\n        Only values unknown(0),\
    \ ipv4(1) or ipv6(2)\n        have to be supported.\n        A value of unknown(0)\
    \ is allowed only when\n        the outgoing interface is of type point-to-point.\n\
    \        If any other unsupported values are attempted in a set\n        operation,\
    \ the agent MUST return an inconsistentValue\n        error.\"\n   REFERENCE\n\
    \       \"See RFC3291.\"\n   ::= { mplsOutSegmentEntry 6 }\n"
- title: mplsOutSegmentNextHopAddr OBJECT-TYPE
  contents:
  - "mplsOutSegmentNextHopAddr OBJECT-TYPE\n   SYNTAX        InetAddress\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"The internet\
    \ address of the next hop. The type of\n        this address is determined by\
    \ the value of the\n        mplslOutSegmentNextHopAddrType object.\n        This\
    \ object cannot be modified if\n        mplsOutSegmentRowStatus is active(1).\"\
    \n   ::= { mplsOutSegmentEntry 7 }\n"
- title: mplsOutSegmentXCIndex OBJECT-TYPE
  contents:
  - "mplsOutSegmentXCIndex OBJECT-TYPE\n   SYNTAX        MplsIndexType\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"Index into\
    \ mplsXCTable which identifies which cross-\n        connect entry this segment\
    \ is part of.  A value of\n        the string containing the single octet 0x00\n\
    \        indicates that this entry is not referred\n        to by any cross-connect\
    \ entry.  When a cross-connect\n        entry is created which this out-segment\
    \ is a part of,\n        this object MUST be updated by the agent to reflect\n\
    \        the value of mplsXCIndex of that cross-connect\n        entry.\"\n  \
    \ ::= { mplsOutSegmentEntry 8 }\n"
- title: mplsOutSegmentOwner OBJECT-TYPE
  contents:
  - "mplsOutSegmentOwner OBJECT-TYPE\n   SYNTAX        MplsOwner\n   MAX-ACCESS  \
    \  read-only\n   STATUS        current\n   DESCRIPTION\n       \"Denotes the entity\
    \ which created and is responsible\n        for managing this segment.\"\n   ::=\
    \ { mplsOutSegmentEntry 9 }\n"
- title: mplsOutSegmentTrafficParamPtr OBJECT-TYPE
  contents:
  - "mplsOutSegmentTrafficParamPtr OBJECT-TYPE\n   SYNTAX        RowPointer\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n     \"This variable\
    \ represents a pointer to the traffic\n      parameter specification for this\
    \ out-segment.  This\n      value may point at an entry in the\n      MplsTunnelResourceEntry\
    \ in the MPLS-TE-STD-MIB (RFC3812)\n      RFC Editor: Please fill in RFC number.\n\
    \      to indicate which traffic parameter settings for this\n      segment if\
    \ it represents an LSP used for a TE tunnel.\n      This value may optionally\
    \ point at an\n      externally defined traffic parameter specification\n    \
    \  table.  A value of zeroDotZero indicates best-effort\n      treatment.  By\
    \ having the same value of this object,\n      two or more segments can indicate\
    \ resource sharing\n      of such things as LSP queue space, etc.\n      This\
    \ object cannot be modified if\n      mplsOutSegmentRowStatus is active(1).\n\
    \      For entries in this table that\n      are preserved after a re-boot, the\
    \ agent MUST ensure\n      that their integrity be preserved, or this object should\n\
    \      be set to 0.0 if it cannot.\"\n   DEFVAL { zeroDotZero }\n   ::= { mplsOutSegmentEntry\
    \ 10 }\n"
- title: mplsOutSegmentRowStatus OBJECT-TYPE
  contents:
  - "mplsOutSegmentRowStatus OBJECT-TYPE\n   SYNTAX        RowStatus\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"For creating,\
    \ modifying, and deleting this row.\n        When a row in this table has a row\
    \ in the active(1)\n        state, no objects in this row can be modified\n  \
    \      except the mplsOutSegmentRowStatus or\n        mplsOutSegmentStorageType.\"\
    \n   ::= { mplsOutSegmentEntry 11 }\n"
- title: mplsOutSegmentStorageType OBJECT-TYPE
  contents:
  - "mplsOutSegmentStorageType OBJECT-TYPE\n   SYNTAX        StorageType\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"This variable\
    \ indicates the storage type for this\n        object. The agent MUST ensure that\
    \ this object's value\n        remains consistent with the associated mplsXCEntry.\n\
    \        Conceptual rows having the value 'permanent'\n        need not allow\
    \ write-access to any columnar\n        objects in the row.\"\n   DEFVAL { volatile\
    \ }\n   ::= { mplsOutSegmentEntry 12 }\n"
- title: -- End of mplsOutSegmentTable
  contents:
  - '-- End of mplsOutSegmentTable

    '
- title: -- out-segment performance table.
  contents:
  - '-- out-segment performance table.

    '
- title: mplsOutSegmentPerfTable  OBJECT-TYPE
  contents:
  - "mplsOutSegmentPerfTable  OBJECT-TYPE\n   SYNTAX        SEQUENCE OF MplsOutSegmentPerfEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"This table contains statistical information about\n        outgoing segments\
    \ from an LSR. The counters in this\n        entry should behave in a manner similar\
    \ to that of\n        the interface.\"\n   ::= { mplsLsrObjects 8 }\n"
- title: mplsOutSegmentPerfEntry  OBJECT-TYPE
  contents:
  - "mplsOutSegmentPerfEntry  OBJECT-TYPE\n   SYNTAX        MplsOutSegmentPerfEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"An entry in this table contains statistical\n        information about\
    \ one outgoing segment configured in\n        mplsOutSegmentTable. The object\n\
    \        mplsOutSegmentPerfDiscontinuityTime indicates the\n        time of the\
    \ last discontinuity in these objects. \"\n   AUGMENTS      { mplsOutSegmentEntry\
    \ }\n      ::= { mplsOutSegmentPerfTable 1 }\n"
- title: MplsOutSegmentPerfEntry ::= SEQUENCE {
  contents:
  - "MplsOutSegmentPerfEntry ::= SEQUENCE {\n      mplsOutSegmentPerfOctets      \
    \       Counter32,\n      mplsOutSegmentPerfPackets            Counter32,\n  \
    \    mplsOutSegmentPerfErrors             Counter32,\n      mplsOutSegmentPerfDiscards\
    \           Counter32,\n      -- HC counter\n      mplsOutSegmentPerfHCOctets\
    \           Counter64,\n      mplsOutSegmentPerfDiscontinuityTime  TimeStamp\n\
    \   }\n"
- title: mplsOutSegmentPerfOctets OBJECT-TYPE
  contents:
  - "mplsOutSegmentPerfOctets OBJECT-TYPE\n   SYNTAX        Counter32\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This value\
    \ contains the total number of octets sent\n        on this segment. It MUST be\
    \ equal to the least\n        significant 32 bits of mplsOutSegmentPerfHCOctets\n\
    \        if mplsOutSegmentPerfHCOctets is supported according to\n        the\
    \ rules spelled out in RFC2863.\"\n   ::= { mplsOutSegmentPerfEntry 1 }\n"
- title: mplsOutSegmentPerfPackets OBJECT-TYPE
  contents:
  - "mplsOutSegmentPerfPackets OBJECT-TYPE\n   SYNTAX        Counter32\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This value\
    \ contains the total number of packets sent\n        on this segment.\"\n   ::=\
    \ { mplsOutSegmentPerfEntry 2 }\n"
- title: mplsOutSegmentPerfErrors OBJECT-TYPE
  contents:
  - "mplsOutSegmentPerfErrors OBJECT-TYPE\n   SYNTAX        Counter32\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"Number of packets\
    \ that could not be sent due to\n        errors on this segment.\"\n   ::= { mplsOutSegmentPerfEntry\
    \ 3 }\n"
- title: mplsOutSegmentPerfDiscards OBJECT-TYPE
  contents:
  - "mplsOutSegmentPerfDiscards OBJECT-TYPE\n   SYNTAX        Counter32\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"The number\
    \ of labeled packets attempted to be transmitted\n        on this out-segment,\
    \ which were chosen to be discarded\n        even though no errors had been detected\
    \ to prevent their\n        being transmitted. One possible reason for\n     \
    \   discarding such a labeled packet could be to free up\n        buffer space.\"\
    \n   ::= { mplsOutSegmentPerfEntry 4 }\n"
- title: mplsOutSegmentPerfHCOctets OBJECT-TYPE
  contents:
  - "mplsOutSegmentPerfHCOctets OBJECT-TYPE\n   SYNTAX        Counter64\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"Total number\
    \ of octets sent.  This is the 64 bit\n        version of mplsOutSegmentPerfOctets,\n\
    \        if mplsOutSegmentPerfHCOctets is supported according to\n        the\
    \ rules spelled out in RFC2863.\"\n   ::= { mplsOutSegmentPerfEntry 5 }\n"
- title: mplsOutSegmentPerfDiscontinuityTime OBJECT-TYPE
  contents:
  - "mplsOutSegmentPerfDiscontinuityTime OBJECT-TYPE\n   SYNTAX      TimeStamp\n \
    \  MAX-ACCESS  read-only\n   STATUS      current\n   DESCRIPTION\n       \"The\
    \ value of sysUpTime on the most recent occasion\n        at which any one or\
    \ more of this segment's Counter32\n        or Counter64 suffered a discontinuity.\
    \ If no such\n        discontinuities have occurred since the last re-\n     \
    \   initialization of the local management subsystem,\n        then this object\
    \ contains a zero value.\"\n   ::= { mplsOutSegmentPerfEntry 6 }\n"
- title: -- End of mplsOutSegmentPerfTable.
  contents:
  - '-- End of mplsOutSegmentPerfTable.

    '
- title: -- Cross-connect table.
  contents:
  - '-- Cross-connect table.

    '
- title: mplsXCIndexNext OBJECT-TYPE
  contents:
  - "mplsXCIndexNext OBJECT-TYPE\n   SYNTAX        MplsIndexNextType\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"This object\
    \ contains the next available value to\n        be used for mplsXCIndex when creating\
    \ entries in\n        the mplsXCTable. A special value of the zero length\n  \
    \      string indicates that no more new entries can be created\n        in the\
    \ relevant table.  Agents not allowing managers\n        to create entries in\
    \ this table MUST set this value\n        to the zero length string.\"\n   ::=\
    \ { mplsLsrObjects 9 }\n"
- title: mplsXCTable  OBJECT-TYPE
  contents:
  - "mplsXCTable  OBJECT-TYPE\n   SYNTAX        SEQUENCE OF MplsXCEntry\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"This table\
    \ specifies information for switching\n        between LSP segments.  It supports\
    \ point-to-point,\n        point-to-multipoint and multipoint-to-point\n     \
    \   connections.  mplsLabelStackTable specifies the\n        label stack information\
    \ for a cross-connect LSR and\n        is referred to from mplsXCTable.\"\n  \
    \ ::= { mplsLsrObjects 10 }\n"
- title: mplsXCEntry  OBJECT-TYPE
  contents:
  - "mplsXCEntry  OBJECT-TYPE\n   SYNTAX        MplsXCEntry\n   MAX-ACCESS    not-accessible\n\
    \   STATUS        current\n   DESCRIPTION\n       \"A row in this table represents\
    \ one cross-connect\n        entry.  It is indexed by the following objects:\n\
    \        - cross-connect index mplsXCIndex that uniquely\n          identifies\
    \ a group of cross-connect entries\n        - in-segment index, mplsXCInSegmentIndex\n\
    \        - out-segment index, mplsXCOutSegmentIndex\n       LSPs originating at\
    \ this LSR:\n        These are represented by using the special\n        of value\
    \ of mplsXCInSegmentIndex set to the\n        string containing a single octet\
    \ 0x00. In\n        this case the mplsXCOutSegmentIndex\n        MUST not be the\
    \ string containing a single\n        octet 0x00.\n       LSPs terminating at\
    \ this LSR:\n        These are represented by using the special value\n      \
    \  mplsXCOutSegmentIndex set to the string containing\n        a single octet\
    \ 0x00.\n       Special labels:\n        Entries indexed by the strings containing\
    \ the\n        reserved MPLS label values as a single octet 0x00\n        through\
    \ 0x0f (inclusive) imply LSPs terminating at\n        this LSR.  Note that situations\
    \ where LSPs are\n        terminated with incoming label equal to the string\n\
    \        containing a single octet 0x00 can be distinguished\n        from LSPs\
    \ originating at this LSR because the\n        mplsXCOutSegmentIndex equals the\
    \ string containing the\n        single octet 0x00.\n        An entry can be created\
    \ by a network administrator\n        or by an SNMP agent as instructed by an\
    \ MPLS\n        signaling protocol.\"\n   INDEX { mplsXCIndex, mplsXCInSegmentIndex,\n\
    \           mplsXCOutSegmentIndex }\n   ::= { mplsXCTable 1 }\n"
- title: MplsXCEntry ::= SEQUENCE {
  contents:
  - "MplsXCEntry ::= SEQUENCE {\n      mplsXCIndex                  MplsIndexType,\n\
    \      mplsXCInSegmentIndex         MplsIndexType,\n      mplsXCOutSegmentIndex\
    \        MplsIndexType,\n      mplsXCLspId                  MplsLSPID,\n     \
    \ mplsXCLabelStackIndex        MplsIndexType,\n      mplsXCOwner             \
    \     MplsOwner ,\n      mplsXCRowStatus              RowStatus,\n      mplsXCStorageType\
    \            StorageType,\n      mplsXCAdminStatus            INTEGER,\n     \
    \ mplsXCOperStatus             INTEGER\n   }\n"
- title: mplsXCIndex OBJECT-TYPE
  contents:
  - "mplsXCIndex OBJECT-TYPE\n   SYNTAX        MplsIndexType\n   MAX-ACCESS    not-accessible\n\
    \   STATUS        current\n   DESCRIPTION\n       \"Primary index for the conceptual\
    \ row identifying a\n        group of cross-connect segments. The string\n   \
    \     containing a single octet 0x00 is an invalid index.\"\n   ::= { mplsXCEntry\
    \ 1 }\n"
- title: mplsXCInSegmentIndex OBJECT-TYPE
  contents:
  - "mplsXCInSegmentIndex OBJECT-TYPE\n   SYNTAX        MplsIndexType\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"Incoming\
    \ label index.\n        If this object is set to the string containing\n     \
    \   a single octet 0x00, this indicates a special\n        case outlined in the\
    \ table's description above.\n        In this case no corresponding mplsInSegmentEntry\n\
    \        shall exist.\"\n   ::= { mplsXCEntry 2 }\n"
- title: mplsXCOutSegmentIndex OBJECT-TYPE
  contents:
  - "mplsXCOutSegmentIndex OBJECT-TYPE\n   SYNTAX        MplsIndexType\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"Index\
    \ of out-segment for LSPs not terminating on\n        this LSR if not set to the\
    \ string containing the\n        single octet 0x00. If the segment identified\
    \ by this\n        entry is terminating, then this object MUST be set to\n   \
    \     the string containing a single octet 0x00 to indicate\n        that no corresponding\
    \ mplsOutSegmentEntry shall\n        exist.\"\n   ::= { mplsXCEntry 3 }\n"
- title: mplsXCLspId OBJECT-TYPE
  contents:
  - "mplsXCLspId OBJECT-TYPE\n   SYNTAX        MplsLSPID\n   MAX-ACCESS    read-create\n\
    \   STATUS        current\n   DESCRIPTION\n       \"This value identifies the\
    \ label switched path that\n        this cross-connect entry belongs to. This\
    \ object\n        cannot be modified if mplsXCRowStatus is active(1)\n       \
    \ except for this object.\"\n   ::= { mplsXCEntry 4 }\n"
- title: mplsXCLabelStackIndex OBJECT-TYPE
  contents:
  - "mplsXCLabelStackIndex OBJECT-TYPE\n   SYNTAX        MplsIndexType\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"Primary index\
    \ into mplsLabelStackTable identifying a\n        stack of labels to be pushed\
    \ beneath the top label.\n        Note that the top label identified by the out-\n\
    \        segment ensures that all the components of a\n        multipoint-to-point\
    \ connection have the same\n        outgoing label. A value of the string containing\
    \ the\n        single octet 0x00 indicates that no labels are to\n        be stacked\
    \ beneath the top label.\n        This object cannot be modified if mplsXCRowStatus\
    \ is\n        active(1).\"\n   ::= { mplsXCEntry 5 }\n"
- title: mplsXCOwner OBJECT-TYPE
  contents:
  - "mplsXCOwner OBJECT-TYPE\n   SYNTAX    MplsOwner\n   MAX-ACCESS    read-only\n\
    \   STATUS        current\n   DESCRIPTION\n       \"Denotes the entity that created\
    \ and is responsible\n        for managing this cross-connect.\"\n   ::= { mplsXCEntry\
    \ 6 }\n"
- title: mplsXCRowStatus OBJECT-TYPE
  contents:
  - "mplsXCRowStatus OBJECT-TYPE\n   SYNTAX        RowStatus\n   MAX-ACCESS    read-create\n\
    \   STATUS        current\n   DESCRIPTION\n       \"For creating, modifying, and\
    \ deleting this row.\n        When a row in this table has a row in the active(1)\n\
    \        state, no objects in this row except this object\n        and the mplsXCStorageType\
    \ can be modified. \"\n   ::= { mplsXCEntry 7 }\n"
- title: mplsXCStorageType OBJECT-TYPE
  contents:
  - "mplsXCStorageType OBJECT-TYPE\n   SYNTAX        StorageType\n   MAX-ACCESS  \
    \  read-create\n   STATUS        current\n   DESCRIPTION\n       \"This variable\
    \ indicates the storage type for this\n        object. The agent MUST ensure that\
    \ the associated in\n        and out segments also have the same StorageType value\n\
    \        and are restored consistently upon system restart.\n        This value\
    \ SHOULD be set to permanent(4) if created\n        as a result of a static LSP\
    \ configuration.\n        Conceptual rows having the value 'permanent'\n     \
    \   need not allow write-access to any columnar\n        objects in the row.\"\
    \n   DEFVAL { volatile }\n   ::= { mplsXCEntry 8 }\n"
- title: mplsXCAdminStatus OBJECT-TYPE
  contents:
  - "mplsXCAdminStatus OBJECT-TYPE\n   SYNTAX   INTEGER {\n              up(1),  \
    \   -- ready to pass packets\n              down(2),\n              testing(3)\
    \ -- in some test mode\n      }\n   MAX-ACCESS    read-create\n   STATUS     \
    \   current\n   DESCRIPTION\n       \"The desired operational status of this segment.\"\
    \n   DEFVAL { up }\n   ::= { mplsXCEntry 9 }\n"
- title: mplsXCOperStatus OBJECT-TYPE
  contents:
  - "mplsXCOperStatus OBJECT-TYPE\n   SYNTAX   INTEGER {\n             up(1),    \
    \        -- ready to pass packets\n             down(2),\n             testing(3),\
    \       -- in some test mode\n             unknown(4),       -- status cannot\
    \ be determined\n                               -- for some reason.\n        \
    \     dormant(5),\n             notPresent(6),    -- some component is missing\n\
    \             lowerLayerDown(7) -- down due to the state of\n                \
    \               -- lower layer interfaces\n      }\n   MAX-ACCESS    read-only\n\
    \   STATUS        current\n   DESCRIPTION\n       \"The actual operational status\
    \ of this cross-\n        connect.\"\n   ::= { mplsXCEntry 10 }\n"
- title: -- End of mplsXCTable
  contents:
  - '-- End of mplsXCTable

    '
- title: -- Label stack table.
  contents:
  - '-- Label stack table.

    '
- title: mplsMaxLabelStackDepth  OBJECT-TYPE
  contents:
  - "mplsMaxLabelStackDepth  OBJECT-TYPE\n   SYNTAX        Unsigned32 (1..2147483647)\n\
    \   MAX-ACCESS    read-only\n   STATUS        current\n   DESCRIPTION\n      \
    \ \"The maximum stack depth supported by this LSR.\"\n"
- title: ::= { mplsLsrObjects 11 }
  contents:
  - '::= { mplsLsrObjects 11 }

    '
- title: mplsLabelStackIndexNext  OBJECT-TYPE
  contents:
  - "mplsLabelStackIndexNext  OBJECT-TYPE\n   SYNTAX        MplsIndexNextType\n  \
    \ MAX-ACCESS    read-only\n   STATUS        current\n   DESCRIPTION\n       \"\
    This object contains the next available value to\n        be used for mplsLabelStackIndex\
    \ when creating entries\n        in the mplsLabelStackTable. The special string\n\
    \        containing the single octet 0x00\n        indicates that no more new\
    \ entries can be created\n        in the relevant table.  Agents not allowing\
    \ managers\n        to create entries in this table MUST set this value\n    \
    \    to the string containing the single octet 0x00.\"\n"
- title: ::= { mplsLsrObjects 12 }
  contents:
  - '::= { mplsLsrObjects 12 }

    '
- title: mplsLabelStackTable OBJECT-TYPE
  contents:
  - "mplsLabelStackTable OBJECT-TYPE\n   SYNTAX        SEQUENCE OF MplsLabelStackEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"This table specifies the label stack to be pushed\n        onto a packet,\
    \ beneath the top label.  Entries into\n        this table are referred to from\
    \ mplsXCTable.\"\n   ::= { mplsLsrObjects 13 }\n"
- title: mplsLabelStackEntry OBJECT-TYPE
  contents:
  - "mplsLabelStackEntry OBJECT-TYPE\n   SYNTAX        MplsLabelStackEntry\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"An entry\
    \ in this table represents one label which is\n        to be pushed onto an outgoing\
    \ packet, beneath the\n        top label.  An entry can be created by a network\n\
    \        administrator or by an SNMP agent as instructed by\n        an MPLS signaling\
    \ protocol.\"\n   INDEX { mplsLabelStackIndex, mplsLabelStackLabelIndex }\n  \
    \ ::= { mplsLabelStackTable 1 }\n"
- title: MplsLabelStackEntry ::= SEQUENCE {
  contents:
  - "MplsLabelStackEntry ::= SEQUENCE {\n      mplsLabelStackIndex             MplsIndexType,\n\
    \      mplsLabelStackLabelIndex        Unsigned32,\n      mplsLabelStackLabel\
    \             MplsLabel,\n      mplsLabelStackLabelPtr          RowPointer,\n\
    \      mplsLabelStackRowStatus         RowStatus,\n      mplsLabelStackStorageType\
    \       StorageType\n   }\n"
- title: mplsLabelStackIndex OBJECT-TYPE
  contents:
  - "mplsLabelStackIndex OBJECT-TYPE\n   SYNTAX        MplsIndexType\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"Primary\
    \ index for this row identifying a stack of\n        labels to be pushed on an\
    \ outgoing packet, beneath\n        the top label. An index containing the string\
    \ with\n        a single octet 0x00 MUST not be used.\"\n   ::= { mplsLabelStackEntry\
    \ 1 }\n"
- title: mplsLabelStackLabelIndex OBJECT-TYPE
  contents:
  - "mplsLabelStackLabelIndex OBJECT-TYPE\n   SYNTAX        Unsigned32 (1..2147483647)\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"Secondary index for this row identifying one label\n        of the stack.\
    \  Note that an entry with a smaller\n        mplsLabelStackLabelIndex would refer\
    \ to a label\n        higher up the label stack and would be popped at a\n   \
    \     downstream LSR before a label represented by a\n        higher mplsLabelStackLabelIndex\
    \ at a downstream\n        LSR.\"\n   ::= { mplsLabelStackEntry 2 }\n"
- title: mplsLabelStackLabel OBJECT-TYPE
  contents:
  - "mplsLabelStackLabel OBJECT-TYPE\n   SYNTAX        MplsLabel\n   MAX-ACCESS  \
    \  read-create\n   STATUS        current\n   DESCRIPTION\n       \"The label to\
    \ pushed.\"\n   ::= { mplsLabelStackEntry 3 }\n"
- title: mplsLabelStackLabelPtr OBJECT-TYPE
  contents:
  - "mplsLabelStackLabelPtr OBJECT-TYPE\n   SYNTAX        RowPointer\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"If the label\
    \ for this segment cannot be represented\n        fully within the mplsLabelStackLabel\
    \ object,\n        this object MUST point to the first accessible\n        column\
    \ of a conceptual row in an external table containing\n        the label.  In\
    \ this case, the mplsLabelStackLabel\n        object SHOULD be set to 0 and ignored.\
    \ This object\n        MUST be set to zeroDotZero otherwise.\"\n   DEFVAL { zeroDotZero\
    \ }\n   ::= { mplsLabelStackEntry 4 }\n"
- title: mplsLabelStackRowStatus OBJECT-TYPE
  contents:
  - "mplsLabelStackRowStatus OBJECT-TYPE\n   SYNTAX        RowStatus\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"For creating,\
    \ modifying, and deleting this row.\n        When a row in this table has a row\
    \ in the active(1)\n        state, no objects in this row except this object\n\
    \        and the mplsLabelStackStorageType can be modified.\"\n   ::= { mplsLabelStackEntry\
    \ 5 }\n"
- title: mplsLabelStackStorageType OBJECT-TYPE
  contents:
  - "mplsLabelStackStorageType OBJECT-TYPE\n   SYNTAX        StorageType\n   MAX-ACCESS\
    \    read-create\n   STATUS        current\n   DESCRIPTION\n       \"This variable\
    \ indicates the storage type for this\n        object. This object cannot be modified\
    \ if\n        mplsLabelStackRowStatus is active(1).\n        No objects are required\
    \ to be writable for\n        rows in this table with this object set to\n   \
    \     permanent(4).\n        The agent MUST ensure that all related entries\n\
    \        in this table retain the same value for this\n        object.  Agents\
    \ MUST ensure that the storage type\n        for all entries related to a particular\
    \ mplsXCEntry\n        retain the same value for this object as the\n        mplsXCEntry's\
    \ StorageType.\"\n   DEFVAL { volatile }\n   ::= { mplsLabelStackEntry 6 }\n"
- title: -- End of mplsLabelStackTable
  contents:
  - '-- End of mplsLabelStackTable

    '
- title: -- Begin mplsInSegmentMapTable
  contents:
  - '-- Begin mplsInSegmentMapTable

    '
- title: mplsInSegmentMapTable OBJECT-TYPE
  contents:
  - "mplsInSegmentMapTable OBJECT-TYPE\n   SYNTAX        SEQUENCE OF MplsInSegmentMapEntry\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"This table specifies the mapping from the\n        mplsInSegmentIndex\
    \ to the corresponding\n        mplsInSegmentInterface and mplsInSegmentLabel\n\
    \        objects. The purpose of this table is to\n        provide the manager\
    \ with an alternative\n        means by which to locate in-segments.\"\n   ::=\
    \ { mplsLsrObjects 14 }\n"
- title: mplsInSegmentMapEntry OBJECT-TYPE
  contents:
  - "mplsInSegmentMapEntry OBJECT-TYPE\n   SYNTAX        MplsInSegmentMapEntry\n \
    \  MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n  \
    \     \"An entry in this table represents one interface\n        and incoming\
    \ label pair.\n        In cases where the label cannot fit into the\n        mplsInSegmentLabel\
    \ object, the mplsInSegmentLabelPtr\n        will indicate this by being set to\
    \ the first accessible\n        column in the appropriate extension table's row,\n\
    \        and the mplsInSegmentLabel SHOULD be set to 0.\n        In all other\
    \ cases when the label is\n        represented within the mplsInSegmentLabel object,\
    \ the\n        mplsInSegmentLabelPtr MUST be 0.0.\n        Implementors need to\
    \ be aware that if the value of\n        the mplsInSegmentMapLabelPtrIndex (an\
    \ OID) has more\n        that 111 sub-identifiers, then OIDs of column\n     \
    \   instances in this table will have more than 128\n        sub-identifiers and\
    \ cannot be accessed using SNMPv1,\n        SNMPv2c, or SNMPv3.\"\n   INDEX {\
    \ mplsInSegmentMapInterface,\n           mplsInSegmentMapLabel,\n           mplsInSegmentMapLabelPtrIndex\
    \ }\n   ::= { mplsInSegmentMapTable 1 }\n"
- title: MplsInSegmentMapEntry ::= SEQUENCE {
  contents:
  - "MplsInSegmentMapEntry ::= SEQUENCE {\n      mplsInSegmentMapInterface      InterfaceIndexOrZero,\n\
    \      mplsInSegmentMapLabel          MplsLabel,\n      mplsInSegmentMapLabelPtrIndex\
    \  RowPointer,\n      mplsInSegmentMapIndex          MplsIndexType\n   }\n"
- title: mplsInSegmentMapInterface OBJECT-TYPE
  contents:
  - "mplsInSegmentMapInterface OBJECT-TYPE\n   SYNTAX        InterfaceIndexOrZero\n\
    \   MAX-ACCESS    not-accessible\n   STATUS        current\n   DESCRIPTION\n \
    \      \"This index contains the same value as the\n        mplsInSegmentIndex\
    \ in the mplsInSegmentTable.\"\n   ::= { mplsInSegmentMapEntry 1 }\n"
- title: mplsInSegmentMapLabel OBJECT-TYPE
  contents:
  - "mplsInSegmentMapLabel OBJECT-TYPE\n   SYNTAX        MplsLabel\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"This index\
    \ contains the same value as the\n        mplsInSegmentLabel in the mplsInSegmentTable.\"\
    \n   ::= { mplsInSegmentMapEntry 2 }\n"
- title: mplsInSegmentMapLabelPtrIndex OBJECT-TYPE
  contents:
  - "mplsInSegmentMapLabelPtrIndex OBJECT-TYPE\n   SYNTAX        RowPointer\n   MAX-ACCESS\
    \    not-accessible\n   STATUS        current\n   DESCRIPTION\n       \"This index\
    \ contains the same value as the\n        mplsInSegmentLabelPtr.\n        If the\
    \ label for the InSegment cannot be represented\n        fully within the mplsInSegmentLabel\
    \ object,\n        this index MUST point to the first accessible\n        column\
    \ of a conceptual row in an external table containing\n        the label.  In\
    \ this case, the mplsInSegmentTopLabel\n        object SHOULD be set to 0 and\
    \ ignored. This object MUST\n        be set to zeroDotZero otherwise.\"\n   ::=\
    \ { mplsInSegmentMapEntry 3 }\n"
- title: mplsInSegmentMapIndex OBJECT-TYPE
  contents:
  - "mplsInSegmentMapIndex OBJECT-TYPE\n   SYNTAX        MplsIndexType\n   MAX-ACCESS\
    \    read-only\n   STATUS        current\n   DESCRIPTION\n       \"The mplsInSegmentIndex\
    \ that corresponds\n        to the mplsInSegmentInterface and\n        mplsInSegmentLabel,\
    \ or the mplsInSegmentInterface\n        and mplsInSegmentLabelPtr, if applicable.\n\
    \        The string containing the single octet 0x00\n        MUST not be returned.\"\
    \n   ::= { mplsInSegmentMapEntry 4 }\n"
- title: -- End mplsInSegmentMapTable
  contents:
  - '-- End mplsInSegmentMapTable

    '
- title: -- Notification Configuration
  contents:
  - '-- Notification Configuration

    '
- title: mplsXCNotificationsEnable OBJECT-TYPE
  contents:
  - "mplsXCNotificationsEnable OBJECT-TYPE\n   SYNTAX        TruthValue\n   MAX-ACCESS\
    \    read-write\n   STATUS        current\n   DESCRIPTION\n       \"If this object\
    \ is set to true(1), then it enables\n        the emission of mplsXCUp and mplsXCDown\n\
    \        notifications; otherwise these notifications are not\n        emitted.\"\
    \n   REFERENCE\n       \"See also RFC3413 for explanation that\n        notifications\
    \ are under the ultimate control of the\n        MIB module in this document.\"\
    \n   DEFVAL { false }\n   ::= { mplsLsrObjects 15 }\n"
- title: -- Cross-connect.
  contents:
  - '-- Cross-connect.

    '
- title: mplsXCUp NOTIFICATION-TYPE
  contents:
  - "mplsXCUp NOTIFICATION-TYPE\n   OBJECTS     { mplsXCOperStatus,  -- start of range\n\
    \                 mplsXCOperStatus   -- end of range\n   }\n   STATUS      current\n\
    \   DESCRIPTION\n       \"This notification is generated when the\n        mplsXCOperStatus\
    \ object for one or more contiguous\n        entries in mplsXCTable are about\
    \ to enter the up(1)\n        state from some other state. The included values\
    \ of\n        mplsXCOperStatus MUST both be set equal to this\n        new state\
    \ (i.e: up(1)).  The two instances of\n        mplsXCOperStatus in this notification\
    \ indicate the range\n        of indexes that are affected.  Note that all the\
    \ indexes\n        of the two ends of the range can be derived from the\n    \
    \    instance identifiers of these two objects.  For\n        cases where a contiguous\
    \ range of cross-connects\n        have transitioned into the up(1) state at roughly\n\
    \        the same time, the device SHOULD issue a single\n        notification\
    \ for each range of contiguous indexes in\n        an effort to minimize the emission\
    \ of a large number\n        of notifications.  If a notification has to be\n\
    \        issued for just a single cross-connect entry, then\n        the instance\
    \ identifier (and values) of the two\n        mplsXCOperStatus objects MUST be\
    \ the identical.\"\n   ::= { mplsLsrNotifications 1 }\n"
- title: mplsXCDown NOTIFICATION-TYPE
  contents:
  - "mplsXCDown NOTIFICATION-TYPE\n   OBJECTS     {\n      mplsXCOperStatus,  -- start\
    \ of range\n      mplsXCOperStatus   -- end of range\n   }\n   STATUS      current\n\
    \   DESCRIPTION\n       \"This notification is generated when the\n        mplsXCOperStatus\
    \ object for one or more contiguous\n        entries in mplsXCTable are about\
    \ to enter the\n        down(2) state from some other state. The included values\n\
    \        of mplsXCOperStatus MUST both be set equal to this\n        down(2) state.\
    \  The two instances of mplsXCOperStatus\n        in this notification indicate\
    \ the range of indexes\n        that are affected.  Note that all the indexes\
    \ of the\n        two ends of the range can be derived from the\n        instance\
    \ identifiers of these two objects.  For\n        cases where a contiguous range\
    \ of cross-connects\n        have transitioned into the down(2) state at roughly\n\
    \        the same time, the device SHOULD issue a single\n        notification\
    \ for each range of contiguous indexes in\n        an effort to minimize the emission\
    \ of a large number\n        of notifications.  If a notification has to be\n\
    \        issued for just a single cross-connect entry, then\n        the instance\
    \ identifier (and values) of the two\n        mplsXCOperStatus objects MUST be\
    \ identical.\"\n   ::= { mplsLsrNotifications 2 }\n"
- title: -- End of notifications.
  contents:
  - '-- End of notifications.

    '
- title: -- Module compliance.
  contents:
  - '-- Module compliance.

    '
- title: mplsLsrGroups
  contents:
  - "mplsLsrGroups\n   OBJECT IDENTIFIER ::= { mplsLsrConformance 1 }\n"
- title: mplsLsrCompliances
  contents:
  - "mplsLsrCompliances\n   OBJECT IDENTIFIER ::= { mplsLsrConformance 2 }\n"
- title: -- Compliance requirement for fully compliant implementations.
  contents:
  - '-- Compliance requirement for fully compliant implementations.

    '
- title: mplsLsrModuleFullCompliance MODULE-COMPLIANCE
  contents:
  - "mplsLsrModuleFullCompliance MODULE-COMPLIANCE\n   STATUS       current\n   DESCRIPTION\
    \ \"Compliance statement for agents that provide full\n                support\
    \ for MPLS-LSR-STD-MIB. Such devices can\n                then be monitored and\
    \ also be configured using\n                this MIB module.\"\n   MODULE IF-MIB\
    \ -- The Interfaces Group MIB, RFC 2863.\n   MANDATORY-GROUPS {\n      ifGeneralInformationGroup,\n\
    \      ifCounterDiscontinuityGroup\n   }\n   MODULE -- This module.\n   MANDATORY-GROUPS\
    \ {\n         mplsInterfaceGroup,\n         mplsInSegmentGroup,\n         mplsOutSegmentGroup,\n\
    \         mplsXCGroup,\n         mplsPerfGroup\n   }\n   GROUP        mplsLabelStackGroup\n\
    \   DESCRIPTION \"This group is only mandatory for LSRs that wish to\n       \
    \         support the modification of LSP label stacks.\n               \"\n \
    \  GROUP        mplsHCInSegmentPerfGroup\n   DESCRIPTION \"This group is mandatory\
    \ for those in-segment entries\n                for which the object mplsInSegmentOutOctets\
    \ wraps\n                around too quickly based on the criteria specified in\n\
    \                RFC 2863 for high-capacity counters.\n               \"\n   GROUP\
    \        mplsHCOutSegmentPerfGroup\n   DESCRIPTION \"This group is mandatory for\
    \ those out-segment entries\n                for which the object mplsOutSegmentPerfOctets\
    \ wraps\n                around too quickly based on the criteria specified in\n\
    \                RFC 2863 for high-capacity counters.\n               \"\n   GROUP\
    \        mplsLsrNotificationGroup\n   DESCRIPTION \"This group is only mandatory\
    \ for those implementations\n                which can efficiently implement the\
    \ notifications\n                contained in this group.\"\n   OBJECT       mplsInSegmentRowStatus\n\
    \   SYNTAX       RowStatus { active(1), notInService(2) }\n   WRITE-SYNTAX RowStatus\
    \ { active(1), notInService(2),\n                            createAndGo(4), destroy(6)\n\
    \                          }\n   DESCRIPTION \"Support for createAndWait and notReady\
    \ is\n                not required.\"\n   OBJECT       mplsOutSegmentNextHopAddrType\n\
    \   SYNTAX       InetAddressType { unknown(0), ipv4(1), ipv6(2) }\n   DESCRIPTION\
    \ \"Only unknown(0), ipv4(1) and ipv6(2) support\n                is required.\"\
    \n   OBJECT       mplsOutSegmentNextHopAddr\n   SYNTAX       InetAddress (SIZE(0|4|16))\n\
    \   DESCRIPTION \"An implementation is only required to support\n            \
    \    unknown(0), ipv4(1) and ipv6(2) sizes.\"\n   OBJECT       mplsOutSegmentRowStatus\n\
    \   SYNTAX       RowStatus { active(1), notInService(2) }\n   WRITE-SYNTAX RowStatus\
    \ { active(1), notInService(2),\n                            createAndGo(4), destroy(6)\n\
    \                          }\n   DESCRIPTION \"Support for createAndWait and notReady\
    \ is not\n                required.\"\n   OBJECT       mplsLabelStackRowStatus\n\
    \   SYNTAX       RowStatus { active(1), notInService(2) }\n   WRITE-SYNTAX RowStatus\
    \ { active(1), notInService(2),\n                            createAndGo(4), destroy(6)\n\
    \                          }\n   DESCRIPTION \"Support for createAndWait and notReady\
    \ is not\n                required.\"\n   OBJECT       mplsXCRowStatus\n   SYNTAX\
    \       RowStatus { active(1), notInService(2) }\n   WRITE-SYNTAX RowStatus {\
    \ active(1), notInService(2),\n                            createAndGo(4), destroy(6)\n\
    \                          }\n   DESCRIPTION \"Support for createAndWait and notReady\
    \ is not\n                required.\"\n   ::= { mplsLsrCompliances 1 }\n"
- title: -- Compliance requirement for read-only implementations.
  contents:
  - '-- Compliance requirement for read-only implementations.

    '
- title: mplsLsrModuleReadOnlyCompliance MODULE-COMPLIANCE
  contents:
  - "mplsLsrModuleReadOnlyCompliance MODULE-COMPLIANCE\n   STATUS       current\n\
    \   DESCRIPTION \"Compliance requirement for implementations that only\n     \
    \           provide read-only support for MPLS-LSR-STD-MIB. Such\n           \
    \     devices can then be monitored but cannot be configured\n               \
    \ using this MIB module.\n               \"\n   MODULE IF-MIB -- The interfaces\
    \ Group MIB, RFC 2863\n   MANDATORY-GROUPS {\n      ifGeneralInformationGroup,\n\
    \      ifCounterDiscontinuityGroup\n   }\n   MODULE -- This module\n   MANDATORY-GROUPS\
    \ {\n         mplsInterfaceGroup,\n         mplsInSegmentGroup,\n         mplsOutSegmentGroup,\n\
    \         mplsXCGroup,\n         mplsPerfGroup\n     }\n   GROUP        mplsLabelStackGroup\n\
    \   DESCRIPTION \"This group is only mandatory for LSRs that wish to\n       \
    \         support the modification of LSP label stacks.\n               \"\n \
    \  GROUP        mplsHCInSegmentPerfGroup\n   DESCRIPTION \"This group is mandatory\
    \ for those in-segment entries\n                for which the object mplsInSegmentOutOctets\
    \ wraps\n                around too quickly based on the criteria specified in\n\
    \                RFC 2863 for high-capacity counters.\n               \"\n   GROUP\
    \        mplsHCOutSegmentPerfGroup\n   DESCRIPTION \"This group is mandatory for\
    \ those out-segment entries\n                for which the object mplsOutSegmentPerfOctets\
    \ wraps\n                around too quickly based on the criteria specified in\n\
    \                RFC 2863 for high-capacity counters.\n               \"\n   GROUP\
    \        mplsLsrNotificationGroup\n   DESCRIPTION \"This group is only mandatory\
    \ for those implementations\n                which can efficiently implement the\
    \ notifications\n                contained in this group.\n               \"\n\
    \   -- mplsInSegmentTable\n   OBJECT       mplsInSegmentLabel\n   MIN-ACCESS \
    \  read-only\n   DESCRIPTION \"Write access is not required.\"\n   OBJECT    \
    \   mplsInSegmentLabelPtr\n   MIN-ACCESS   read-only\n   DESCRIPTION \"Write access\
    \ is not required.\"\n   OBJECT       mplsInSegmentNPop\n   SYNTAX       Integer32\
    \ (1..1)\n   MIN-ACCESS   read-only\n   DESCRIPTION \"Write access is not required.\
    \  This object\n                SHOULD be set to 1 if it is read-only.\n     \
    \          \"\n   OBJECT       mplsInSegmentAddrFamily\n   MIN-ACCESS   read-only\n\
    \   DESCRIPTION \"Write access is not required.  A value of other(0)\n       \
    \         should be supported because there may be cases where\n             \
    \   the agent may not know about or support any address\n                types.\n\
    \               \"\n   OBJECT       mplsInSegmentRowStatus\n   SYNTAX       RowStatus\
    \ { active(1) }\n   MIN-ACCESS   read-only\n   DESCRIPTION \"Write access is not\
    \ required.\"\n   OBJECT       mplsInSegmentStorageType\n   MIN-ACCESS   read-only\n\
    \   DESCRIPTION \"Write access is not required.\"\n   -- mplsOutSegmentTable\n\
    \   OBJECT       mplsOutSegmentInterface\n   MIN-ACCESS   read-only\n   DESCRIPTION\
    \ \"Write access is not required.\"\n   OBJECT       mplsOutSegmentPushTopLabel\n\
    \   MIN-ACCESS   read-only\n   DESCRIPTION \"Write access is not required.\"\n\
    \   OBJECT       mplsOutSegmentTopLabel\n   MIN-ACCESS   read-only\n   DESCRIPTION\
    \ \"Write access is not required.\"\n   OBJECT       mplsOutSegmentTopLabelPtr\n\
    \   MIN-ACCESS   read-only\n   DESCRIPTION \"Write access is not required.\"\n\
    \   OBJECT       mplsOutSegmentNextHopAddrType\n   SYNTAX       InetAddressType\
    \ { unknown(0), ipv4(1), ipv6(2) }\n   MIN-ACCESS   read-only\n   DESCRIPTION\
    \ \"Write access is not required.  Only unknown(0),\n                ipv4(1) and\
    \ ipv6(2) support is required.\n               \"\n   OBJECT       mplsOutSegmentNextHopAddr\n\
    \   SYNTAX       InetAddress (SIZE(0|4|16))\n   MIN-ACCESS   read-only\n   DESCRIPTION\
    \ \"Write access is not required. An implementation is\n                only required\
    \ to support unknown(0), ipv4(1) and\n                ipv6(2) sizes.\"\n   OBJECT\
    \       mplsOutSegmentRowStatus\n   SYNTAX       RowStatus { active(1) }\n   MIN-ACCESS\
    \   read-only\n   DESCRIPTION \"Write access is not required.\"\n   OBJECT   \
    \    mplsOutSegmentStorageType\n   MIN-ACCESS   read-only\n   DESCRIPTION \"Write\
    \ access is not required.\"\n   -- mplsXCTable\n   OBJECT       mplsXCLabelStackIndex\n\
    \   MIN-ACCESS   read-only\n   DESCRIPTION \"Write access is not required.\"\n\
    \   OBJECT       mplsXCAdminStatus\n   MIN-ACCESS   read-only\n   DESCRIPTION\
    \ \"Read only support is required.\"\n   OBJECT       mplsXCRowStatus\n   SYNTAX\
    \       RowStatus { active(1) }\n   MIN-ACCESS   read-only\n   DESCRIPTION \"\
    Write access is not required.\"\n   OBJECT       mplsXCStorageType\n   MIN-ACCESS\
    \   read-only\n   DESCRIPTION \"Write access is not required.\"\n   OBJECT   \
    \    mplsLabelStackLabel\n   MIN-ACCESS   read-only\n   DESCRIPTION \"Write access\
    \ is not required.\"\n   OBJECT       mplsLabelStackLabelPtr\n   MIN-ACCESS  \
    \ read-only\n   DESCRIPTION \"Write access is not required.\"\n   OBJECT     \
    \  mplsLabelStackRowStatus\n   MIN-ACCESS   read-only\n   DESCRIPTION \"Write\
    \ access is not required.\"\n   OBJECT       mplsLabelStackStorageType\n   MIN-ACCESS\
    \   read-only\n   DESCRIPTION \"Write access is not required.\"\n   ::= { mplsLsrCompliances\
    \ 2 }\n"
- title: -- Units of conformance.
  contents:
  - '-- Units of conformance.

    '
- title: mplsInterfaceGroup OBJECT-GROUP
  contents:
  - "mplsInterfaceGroup OBJECT-GROUP\n   OBJECTS {\n      mplsInterfaceLabelMinIn,\n\
    \      mplsInterfaceLabelMaxIn,\n      mplsInterfaceLabelMinOut,\n      mplsInterfaceLabelMaxOut,\n\
    \      mplsInterfaceTotalBandwidth,\n      mplsInterfaceAvailableBandwidth,\n\
    \      mplsInterfaceLabelParticipationType\n   }\n   STATUS  current\n   DESCRIPTION\n\
    \          \"Collection of objects needed for MPLS interface\n           and interface\
    \ performance information.\"\n   ::= { mplsLsrGroups 1 }\n"
- title: mplsInSegmentGroup  OBJECT-GROUP
  contents:
  - "mplsInSegmentGroup  OBJECT-GROUP\n   OBJECTS {\n      mplsInSegmentIndexNext,\n\
    \      mplsInSegmentInterface,\n      mplsInSegmentLabel,\n      mplsInSegmentLabelPtr,\n\
    \      mplsInSegmentNPop,\n      mplsInSegmentAddrFamily,\n      mplsInSegmentXCIndex,\n\
    \      mplsInSegmentOwner,\n      mplsInSegmentRowStatus,\n      mplsInSegmentStorageType,\n\
    \      mplsInSegmentTrafficParamPtr,\n      mplsInSegmentMapIndex\n   }\n   STATUS\
    \  current\n   DESCRIPTION\n          \"Collection of objects needed to implement\
    \ an in-\n           segment.\"\n   ::= { mplsLsrGroups 2 }\n"
- title: mplsOutSegmentGroup  OBJECT-GROUP
  contents:
  - "mplsOutSegmentGroup  OBJECT-GROUP\n   OBJECTS {\n      mplsOutSegmentIndexNext,\n\
    \      mplsOutSegmentInterface,\n      mplsOutSegmentPushTopLabel,\n      mplsOutSegmentTopLabel,\n\
    \      mplsOutSegmentTopLabelPtr,\n      mplsOutSegmentNextHopAddrType,\n    \
    \  mplsOutSegmentNextHopAddr,\n      mplsOutSegmentXCIndex,\n      mplsOutSegmentOwner,\n\
    \      mplsOutSegmentPerfOctets,\n      mplsOutSegmentPerfDiscards,\n      mplsOutSegmentPerfErrors,\n\
    \      mplsOutSegmentRowStatus,\n      mplsOutSegmentStorageType,\n      mplsOutSegmentTrafficParamPtr\n\
    \   }\n   STATUS  current\n   DESCRIPTION\n          \"Collection of objects needed\
    \ to implement an out-\n           segment.\"\n   ::= { mplsLsrGroups 3 }\n"
- title: mplsXCGroup  OBJECT-GROUP
  contents:
  - "mplsXCGroup  OBJECT-GROUP\n   OBJECTS {\n      mplsXCIndexNext,\n      mplsXCLspId,\n\
    \      mplsXCLabelStackIndex,\n      mplsXCOwner,\n      mplsXCStorageType,\n\
    \      mplsXCAdminStatus,\n      mplsXCOperStatus,\n      mplsXCRowStatus,\n \
    \     mplsXCNotificationsEnable\n   }\n   STATUS  current\n   DESCRIPTION\n  \
    \        \"Collection of objects needed to implement a\n           cross-connect\
    \ entry.\"\n   ::= { mplsLsrGroups 4 }\n"
- title: mplsPerfGroup OBJECT-GROUP
  contents:
  - "mplsPerfGroup OBJECT-GROUP\n   OBJECTS {\n      mplsInSegmentPerfOctets,\n  \
    \    mplsInSegmentPerfPackets,\n      mplsInSegmentPerfErrors,\n      mplsInSegmentPerfDiscards,\n\
    \      mplsInSegmentPerfDiscontinuityTime,\n      mplsOutSegmentPerfOctets,\n\
    \      mplsOutSegmentPerfPackets,\n      mplsOutSegmentPerfDiscards,\n      mplsOutSegmentPerfDiscontinuityTime,\n\
    \      mplsInterfacePerfInLabelsInUse,\n      mplsInterfacePerfInLabelLookupFailures,\n\
    \      mplsInterfacePerfOutFragmentedPkts,\n      mplsInterfacePerfOutLabelsInUse\n\
    \   }\n   STATUS  current\n   DESCRIPTION\n          \"Collection of objects providing\
    \ performance\n           information\n        about an LSR.\"\n   ::= { mplsLsrGroups\
    \ 5 }\n"
- title: mplsHCInSegmentPerfGroup OBJECT-GROUP
  contents:
  - "mplsHCInSegmentPerfGroup OBJECT-GROUP\n   OBJECTS { mplsInSegmentPerfHCOctets\
    \ }\n   STATUS  current\n   DESCRIPTION\n          \"Object(s) providing performance\
    \ information\n           specific to out-segments for which the object\n    \
    \       mplsInterfaceInOctets wraps around too quickly.\"\n   ::= { mplsLsrGroups\
    \ 6 }\n"
- title: mplsHCOutSegmentPerfGroup OBJECT-GROUP
  contents:
  - "mplsHCOutSegmentPerfGroup OBJECT-GROUP\n   OBJECTS { mplsOutSegmentPerfHCOctets\
    \ }\n   STATUS  current\n   DESCRIPTION\n          \"Object(s) providing performance\
    \ information\n           specific to out-segments for which the object\n    \
    \       mplsInterfaceOutOctets wraps around too\n           quickly.\"\n   ::=\
    \ { mplsLsrGroups 7 }\n"
- title: mplsLabelStackGroup OBJECT-GROUP
  contents:
  - "mplsLabelStackGroup OBJECT-GROUP\n   OBJECTS {\n      mplsLabelStackLabel,\n\
    \      mplsLabelStackLabelPtr,\n      mplsLabelStackRowStatus,\n      mplsLabelStackStorageType,\n\
    \      mplsMaxLabelStackDepth,\n      mplsLabelStackIndexNext\n   }\n   STATUS\
    \ current\n   DESCRIPTION\n          \"Objects needed to support label stacking.\"\
    \n      ::= { mplsLsrGroups 8 }\n"
- title: mplsLsrNotificationGroup NOTIFICATION-GROUP
  contents:
  - "mplsLsrNotificationGroup NOTIFICATION-GROUP\n   NOTIFICATIONS {\n      mplsXCUp,\n\
    \      mplsXCDown\n   }\n   STATUS  current\n   DESCRIPTION\n          \"Set of\
    \ notifications implemented in this\n           module.\"\n   ::= { mplsLsrGroups\
    \ 9 }\n"
- title: END
  contents:
  - 'END

    '
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   It is clear that this MIB module is potentially\
    \ useful for monitoring\n   of MPLS LSRs.  This MIB can also be used for configuration\
    \ of certain\n   objects, and anything that can be configured can be incorrectly\n\
    \   configured, with potentially disastrous results.\n   There are a number of\
    \ management objects defined in this MIB module\n   with a MAX-ACCESS clause of\
    \ read-write and/or read-create.  Such\n   objects may be considered sensitive\
    \ or vulnerable in some network\n   environments.  The support for SET operations\
    \ in a non-secure\n   environment without proper protection can have a negative\
    \ effect on\n   network operations.  These are the tables and objects and their\n\
    \   sensitivity/vulnerability:\n   o  the mplsLsrInSegmentTable, mplsLsrOutSegmentTable,\
    \ mplsXCTable,\n      mplsOutSegmentPerfTable, mplsInterfacePerfTable, and\n \
    \     mplsInSegmentPerfTable collectively contain objects to provision\n     \
    \ MPLS interfaces, LSPs and their associated parameters on an Label\n      Switching\
    \ Router (LSR).  Unauthorized access to objects in these\n      tables, could\
    \ result in disruption of traffic on the network.\n      This is especially true\
    \ if an LSP has been established.  The use\n      of stronger mechanisms such\
    \ as SNMPv3 security should be\n      considered where possible.  Specifically,\
    \ SNMPv3 VACM and USM MUST\n      be used with any v3 agent which implements this\
    \ MIB module.\n      Administrators should consider whether read access to these\n\
    \      objects should be allowed, since read access may be undesirable\n     \
    \ under certain circumstances.\n   Some of the readable objects in this MIB module\
    \ \"i.e., objects with a\n   MAX-ACCESS other than not-accessible\" may be considered\
    \ sensitive or\n   vulnerable in some network environments.  It is thus important\
    \ to\n   control even GET and/or NOTIFY access to these objects and possibly\n\
    \   to even encrypt the values of these objects when sending them over\n   the\
    \ network via SNMP.  These are the tables and objects and their\n   sensitivity/vulnerability:\n\
    \   o  the mplsLsrInSegmentTable, mplsLsrOutSegmentTable, mplsXCTable,\n     \
    \ mplsOutSegmentPerfTable, mplsInterfacePerfTable, and\n      mplsInSegmentPerfTable\
    \ collectively show the LSP network topology\n      and its performance characteristics.\
    \ If an Administrator does not\n      want to reveal this information, then these\
    \ tables should be\n      considered sensitive/vulnerable.\n   SNMP versions prior\
    \ to SNMPv3 did not include adequate security.\n   Even if the network itself\
    \ is secure \"for example by using IPSec\",\n   even then, there is no control\
    \ as to who on the secure network is\n   allowed to access and GET/SET \"read/change/create/delete\"\
    \ the objects\n   in this MIB module.\n   It is RECOMMENDED that implementers\
    \ consider the security features as\n   provided by the SNMPv3 framework \"see\
    \ [RFC3410], section 8\",\n   including full support for the SNMPv3 cryptographic\
    \ mechanisms \"for\n   authentication and privacy\".\n   Further, deployment of\
    \ SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED\
    \ to deploy SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n\
    \   responsibility to ensure that the SNMP entity giving access to an\n   instance\
    \ of this MIB module, is properly configured to give access to\n   the objects\
    \ only to those principals \"users\" that have legitimate\n   rights to indeed\
    \ GET or SET \"change/create/delete\" them.\n"
- title: 12.  Acknowledgments
  contents:
  - "12.  Acknowledgments\n   We wish to thank Ron Bonica, Adrian Farrel, Eric Gray,\
    \ Tim Mancour,\n   Keith McCloghrie, Bala Rajagopalan, Dan Tappan, Vasanthi Thirumalai,\n\
    \   Joseph Benoit, Mike Piecuch, Joan Cucchiara. A special thanks to Bert\n  \
    \ Wijnen and Mike MacFaden for really getting the MIB module into\n   shape.\n"
- title: 13.  IANA Considerations
  contents:
  - "13.  IANA Considerations\n   As described in [MPLSMGMT] and as requested in the\
    \ MPLS-TC-STD-MIB\n   [RFC3811], MPLS related standards track MIB modules should\
    \ be rooted\n   under the mplsStdMIB subtree.  There are 4 MPLS MIB Modules contained\n\
    \   in this document, each of the following \"IANA Considerations\"\n   subsections\
    \ requests IANA for a new assignment under the mplsStdMIB\n   subtree.  New assignments\
    \ can only be made via a Standards Action as\n   specified in [RFC2434].\n"
- title: 13.1.  IANA Considerations for MPLS-LSR-STD-MIB
  contents:
  - "13.1.  IANA Considerations for MPLS-LSR-STD-MIB\n   The IANA has assigned { mplsStdMIB\
    \ 2 } to the MPLS-LSR-STD-MIB module\n   specified in this document.\n"
- title: 14.  References
  contents:
  - '14.  References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [RFC2119]     Bradner, S., \"Key Words for use\
    \ in RFCs to Indicate\n                 Requirement Levels\", RFC 2119, BCP 14,\
    \ March 1997.\n   [RFC2515]     Tesink, K., Ed., \"Definitions of Managed Objects\
    \ for\n                 ATM Management\", RFC 2515, February 1999.\n   [RFC2578]\
    \     McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n                 \"\
    Structure of Management Information Version 2\n                 (SMIv2)\", STD\
    \ 58, RFC 2578, April 1999.\n   [RFC2579]     McCloghrie, K., Perkins, D., and\
    \ J. Schoenwaelder,\n                 \"Textual Conventions for SMIv2\", STD 58,\
    \ RFC 2579,\n                 April 1999.\n   [RFC2580]     McCloghrie, K., Perkins,\
    \ D., and J. Schoenwaelder,\n                 \"Conformance Statements for SMIv2\"\
    , STD 58, RFC 2580,\n                 April 1999.\n   [RFC2863]     McCloghrie,\
    \ K. and F. Kastenholz, \"The Interfaces Group\n                 MIB\", RFC 2863,\
    \ June 2000.\n   [RFC3031]     Rosen, E., Viswanathan, A., and R. Callon,\n  \
    \               \"Multiprotocol Label Switching Architecture\", RFC 3031,\n  \
    \               January 2001.\n   [RFC3291]     Daniele, M., Haberman, B., Routhier,\
    \ S., and J.\n                 Schoenwaelder, \"Textual Conventions for Internet\n\
    \                 Network Addresses\", RFC 3291, May 2002.\n   [RFC3411]     Harrington,\
    \ D., Presuhn, R., and B. Wijnen, \"An\n                 Architecture for Describing\
    \ Simple Network Management\n                 Protocol (SNMP) Management Frameworks\"\
    , STD 62, RFC\n                 3411, December 2002.\n   [RFC3811]     Nadeau,\
    \ T. and J. Cucchiara, Eds., \"Definition of\n                 Textual Conventions\
    \ (TCs) for Multiprotocol Label\n                 Switching (MPLS) Management\"\
    , RFC 3811, June 2004.\n   [RFC3812]     Srinivasan, C., Viswanathan, A., and\
    \ T. Nadeau,\n                 \"Multiprotocol Label Switching (MPLS) Traffic\n\
    \                 Engineering (TE) Management Information Base (MIB)\",\n    \
    \             RFC 3812, June 2004.\n   [IANAFamiy]  Internet Assigned Numbers\
    \ Authority (IANA), ADDRESS\n                 FAMILY NUMBERS,\n              \
    \   (http://www.iana.org/assignments/address-family-\n                 numbers),\
    \ for MIB see:\n                 http://www.iana.org/assignments/\n          \
    \       ianaaddressfamilynumbers-mib\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [MPLSMGMT]    Nadeau, T., Srinivasan, C., and\
    \ A. Farrel,\n                 \"Multiprotocol Label Switching (MPLS) Management\n\
    \                 Overview\", Work in Progress, September 2003.\n   [RFC2434]\
    \     Narten, T. and H. Alvestrand, \"Guidelines for Writing\n               \
    \  an IANA Considerations Section in RFCs\", BCP 26, RFC\n                 2434,\
    \ October 1998.\n   [RFC3413]     Levi, D., Meyer, P. and B. Stewart, \"Simple\
    \ Network\n                 Management Protocol (SNMP) Applications\", STD 62,\
    \ RFC\n                 3413, December 2002.\n   [RFC3410]     Case, J., Mundy,\
    \ R., Partain, D. and B. Stewart,\n                 \"Introduction and Applicability\
    \ Statements for\n                 Internet-Standard Management Framework\", RFC\
    \ 3410,\n                 December 2002.\n"
- title: 15.  Authors' Addresses
  contents:
  - "15.  Authors' Addresses\n   Cheenu Srinivasan\n   Bloomberg L.P.\n   499 Park\
    \ Ave., New York, NY 10022\n   Phone: +1-212-893-3682\n   EMail: cheenu@bloomberg.net\n\
    \   Arun Viswanathan\n   Force10 Networks, Inc.\n   1440 McCarthy Blvd\n   Milpitas,\
    \ CA 95035\n   Phone: +1-408-571-3516\n   EMail: arunv@force10networks.com\n \
    \  Thomas D. Nadeau\n   Cisco Systems, Inc.\n   300 Beaver Brook Road\n   Boxboro,\
    \ MA 01719\n   Phone: +1-978-936-1470\n   EMail: tnadeau@cisco.com\n"
- title: 16.  Full Copyright Statement
  contents:
  - "16.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78, and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
