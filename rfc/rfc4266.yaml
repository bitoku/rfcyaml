- contents:
  - '                         The gopher URI Scheme

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document specifies the gopher Uniform Resource Identifier (URI)\n
    \  scheme that was originally specified in RFC 1738.  The purpose of\n   this
    document is to allow RFC 1738 to be made obsolete while keeping\n   the information
    about the scheme on standards track.\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   URIs were previously defined in RFC 2396 [RFC2396], which
    was updated\n   by RFC 3986 [RFC3986].  Those documents also specify how to define\n
    \  schemes for URIs.\n   The first definition for many URI schemes appeared in
    RFC 1738\n   [RFC1738].  Because that document has been made obsolete, this\n
    \  document copies the gopher URI scheme from it to allow that material\n   to
    remain on standards track.\n"
  title: 1.  Introduction
- contents:
  - "2.  Scheme Definition\n   The gopher URL scheme is used to designate Internet
    resources\n   accessible using the Gopher protocol.\n   The base Gopher protocol
    is described in RFC 1436 [RFC1436] and\n   supports items and collections of items
    (directories).  The Gopher+\n   protocol is a set of upward-compatible extensions
    to the base Gopher\n   protocol and is described in [Gopher+].  Gopher+ supports
    associating\n   arbitrary sets of attributes and alternate data representations
    with\n   Gopher items.  Gopher URLs accommodate both Gopher and Gopher+ items\n
    \  and item attributes.\n   Historical note: The Gopher protocol was widely implemented
    in the\n   early 1990s, but few Gopher servers are in use today.\n"
  - contents:
    - "2.1.  Gopher URL Syntax\n   A Gopher URL takes the form:\n      gopher://<host>:<port>/<gopher-path>\n
      \  where <gopher-path> is one of:\n      <gophertype><selector>\n      <gophertype><selector>%09<search>\n
      \     <gophertype><selector>%09<search>%09<gopher+_string>\n   If :<port> is
      omitted, the port defaults to 70. <gophertype> is a\n   single-character field
      to denote the Gopher type of the resource to\n   which the URL refers.  The
      entire <gopher-path> may also be empty, in\n   which case the delimiting \"/\"
      is also optional and the <gophertype>\n   defaults to \"1\".\n   <selector>
      is the Gopher selector string.  In the Gopher protocol,\n   Gopher selector
      strings are a sequence of octets that may contain any\n   octets except 09 hexadecimal
      (US-ASCII HT or tab), 0A hexadecimal\n   (US-ASCII character LF), and 0D (US-ASCII
      character CR).\n   Gopher clients specify which item to retrieve by sending
      the Gopher\n   selector string to a Gopher server.\n   Within the <gopher-path>,
      no characters are reserved.\n   Note that some Gopher <selector> strings begin
      with a copy of the\n   <gophertype> character, in which case that character
      will occur twice\n   consecutively.  The Gopher selector string may be an empty
      string;\n   this is how Gopher clients refer to the top-level directory on a\n
      \  Gopher server.\n"
    title: 2.1.  Gopher URL Syntax
  - contents:
    - "2.2.  Specifying URLs for Gopher Search Engines\n   If the URL refers to a
      search to be submitted to a Gopher search\n   engine, the selector is followed
      by an encoded tab (%09) and the\n   search string.  To submit a search to a
      Gopher search engine, the\n   Gopher client sends the <selector> string (after
      decoding), a tab,\n   and the search string to the Gopher server.\n"
    title: 2.2.  Specifying URLs for Gopher Search Engines
  - contents:
    - "2.3.  URL Syntax for Gopher+ Items\n   Historical note: Gopher+ was uncommon
      even when Gopher was popular.\n   URLs for Gopher+ items have a second encoded
      tab (%09) and a Gopher+\n   string.  Note that in this case, the %09<search>
      string must be\n   supplied, although the <search> element may be the empty
      string.\n   The <gopher+_string> is used to represent information required for\n
      \  retrieval of the Gopher+ item.  Gopher+ items may have alternate\n   views
      and arbitrary sets of attributes, and they may have electronic\n   forms associated
      with them.\n   To retrieve the data associated with a Gopher+ URL, a client
      will\n   connect to the server and send the Gopher selector, followed by a tab\n
      \  and the search string (which may be empty), followed by a tab and the\n   Gopher+
      commands.\n"
    title: 2.3.  URL Syntax for Gopher+ Items
  - contents:
    - "2.4.  Default Gopher+ Data Representation\n   When a Gopher server returns
      a directory listing to a client, the\n   Gopher+ items are tagged with either
      a \"+\" (denoting Gopher+ items)\n   or a \"?\" (denoting Gopher+ items that
      have a +ASK form associated\n   with them).  A Gopher URL with a Gopher+ string
      consisting of only a\n   \"+\" refers to the default view (data representation)
      of the item, and\n   a Gopher+ string containing only a \"?\" refers to an item
      with a\n   Gopher electronic form associated with it.\n"
    title: 2.4.  Default Gopher+ Data Representation
  - contents:
    - "2.5.  Gopher+ Items with Electronic Forms\n   Gopher+ items that have a +ASK
      associated with them (i.e., Gopher+\n   items tagged with a \"?\") require the
      client to fetch the item's +ASK\n   attribute to get the form definition, and
      then ask the user to fill\n   out the form and return the user's responses along
      with the selector\n   string to retrieve the item.  Gopher+ clients know how
      to do this but\n   depend on the \"?\" tag in the Gopher+ item description to
      know when to\n   handle this case.  The \"?\" is used in the Gopher+ string
      to be\n   consistent with Gopher+ protocol's use of this symbol.\n"
    title: 2.5.  Gopher+ Items with Electronic Forms
  - contents:
    - "2.6.  Gopher+ Item Attribute Collections\n   To refer to the Gopher+ attributes
      of an item, the Gopher URL's\n   Gopher+ string consists of \"!\" or \"$\".
      \"!\" refers to all of a Gopher+\n   item's attributes. \"$\" refers to all
      the item attributes for all\n   items in a Gopher directory.\n"
    title: 2.6.  Gopher+ Item Attribute Collections
  - contents:
    - "2.7.  Referring to Specific Gopher+ Attributes\n   To refer to specific attributes,
      the URL's gopher+_string is\n   \"!<attribute_name>\" or \"$<attribute_name>\".
      \ For example, to refer to\n   the attribute containing the abstract of an item,
      the gopher+_string\n   would be \"!+ABSTRACT\".\n   To refer to several attributes,
      the gopher+_string consists of the\n   attribute names separated by coded spaces.
      \ For example,\n   \"!+ABSTRACT% 20+SMELL\" refers to the +ABSTRACT and +SMELL
      attributes\n   of an item.\n"
    title: 2.7.  Referring to Specific Gopher+ Attributes
  - contents:
    - "2.8.  URL Syntax for Gopher+ Alternate Views\n   Gopher+ allows for optional
      alternate data representations (alternate\n   views) of items.  To retrieve
      a Gopher+ alternate view, a Gopher+\n   client sends the appropriate view and
      language identifier (found in\n   the item's +VIEW attribute).  To refer to
      a specific Gopher+\n   alternate view, the URL's Gopher+ string would be in
      the form:\n      +<view_name>%20<language_name>\n   For example, a Gopher+ string
      of \"+application/postscript%20Es_ES\"\n   refers to the Spanish language postscript
      alternate view of a Gopher+\n   item.\n"
    title: 2.8.  URL Syntax for Gopher+ Alternate Views
  - contents:
    - "2.9.  URL Syntax for Gopher+ Electronic Forms\n   The gopher+_string for a
      URL that refers to an item referenced by a\n   Gopher+ electronic form (an ASK
      block) filled out with specific\n   values is a coded version of what the client
      sends to the server.\n   The gopher+_string is of the form:\n      +%091%0D%0A+-1%0D%0A<ask_item1_value>%0D%0A\n
      \     <ask_item2_value>%0D%0A.%0D%0A\n   To retrieve this item, the Gopher client
      sends the following text to\n   the Gopher server.\n      <a_gopher_selector><tab>+<tab>1<cr><lf>\n
      \     +-1<cr><lf>\n      <ask_item1_value><cr><lf>\n      <ask_item2_value><cr><lf>\n
      \     .<cr><lf>\n"
    title: 2.9.  URL Syntax for Gopher+ Electronic Forms
  title: 2.  Scheme Definition
- contents:
  - "3.  Security Considerations\n   There are many security considerations for URI
    schemes discussed in\n   [RFC3986].  The Gopher protocol uses passwords in the
    clear for\n   authentication, and offers no privacy, both of which are considered\n
    \  extremely unsafe in current practice.\n"
  title: 3.  Security Considerations
- contents:
  - "4.  Informative References\n   [Gopher+]  Anklesaria, F., et al., \"Gopher+:
    Upward compatible\n              enhancements to the Internet Gopher protocol\",
    University\n              of Minnesota, July 1993, <ftp://boombox.micro.umn.edu/pub/\n
    \             gopher/gopher_protocol/Gopher+/Gopher+.txt>\n   [RFC1738]  Berners-Lee,
    T., Masinter, L., and M. McCahill, \"Uniform\n              Resource Locators
    (URL)\", RFC 1738, December 1994.\n   [RFC2396]  Berners-Lee, T., Fielding, R.,
    and L. Masinter, \"Uniform\n              Resource Identifiers (URI): Generic
    Syntax\", RFC 2396,\n              August 1998.\n   [RFC3986]  Berners-Lee, T.,
    Fielding, R., and L. Masinter, \"Uniform\n              Resource Identifier (URI):
    Generic Syntax\", STD 66,\n              RFC 3986, January 2005.\n   [RFC1436]
    \ Anklesaria, F., McCahill, M., Lindner, P., Johnson, D.,\n              Torrey,
    D., and B. Albert, \"The Internet Gopher Protocol\n              (a distributed
    document search and retrieval protocol)\",\n              RFC 1436, March 1993.\n"
  title: 4.  Informative References
- contents:
  - "Author's Address\n   Paul Hoffman\n   VPN Consortium\n   127 Segre Place\n   Santa
    Cruz, CA  95060\n   US\n   EMail: paul.hoffman@vpnc.org\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
