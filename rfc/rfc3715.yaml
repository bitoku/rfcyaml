- title: __initial_text__
  contents:
  - '   IPsec-Network Address Translation (NAT) Compatibility Requirements

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes known incompatibilities between Network\n\
    \   Address Translation (NAT) and IPsec, and describes the requirements\n   for\
    \ addressing them.  Perhaps the most common use of IPsec is in\n   providing virtual\
    \ private networking capabilities.  One very popular\n   use of Virtual Private\
    \ Networks (VPNs) is to provide telecommuter\n   access to the corporate Intranet.\
    \  Today, NATs are widely deployed in\n   home gateways, as well as in other locations\
    \ likely to be used by\n   telecommuters, such as hotels.  The result is that\
    \ IPsec-NAT\n   incompatibilities have become a major barrier in the deployment\
    \ of\n   IPsec in one of its principal uses.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n       1.1.  Requirements Language. . . . . . . . . . . . .\
    \ . . . . .  2\n   2.  Known Incompatibilities between NA(P)T and IPsec . . .\
    \ . . . .  3\n       2.1.  Intrinsic NA(P)T Issues. . . . . . . . . . . . . .\
    \ . . .  3\n       2.2.  NA(P)T Implementation Weaknesses . . . . . . . . . .\
    \ . .  7\n       2.3.  Helper Incompatibilities . . . . . . . . . . . . . . .\
    \ .  8\n   3.  Requirements for IPsec-NAT Compatibility . . . . . . . . . . .\
    \  8\n   4.  Existing Solutions . . . . . . . . . . . . . . . . . . . . . . 12\n\
    \       4.1.  IPsec Tunnel Mode. . . . . . . . . . . . . . . . . . . . 12\n  \
    \     4.2.  RSIP . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n    \
    \   4.3.  6to4 . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n   5. \
    \ Security Considerations. . . . . . . . . . . . . . . . . . . . 14\n   6.  References\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 15\n       6.1.  Normative\
    \ References . . . . . . . . . . . . . . . . . . 15\n       6.2.  Informative\
    \ References . . . . . . . . . . . . . . . . . 16\n   7.  Acknowledgements . .\
    \ . . . . . . . . . . . . . . . . . . . . . 17\n   8.  Authors' Addresses . .\
    \ . . . . . . . . . . . . . . . . . . . . 17\n   9 . Full Copyright Statement\
    \ . . . . . . . . . . . . . . . . . . . 18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Perhaps the most common use of IPsec [RFC2401] is in providing\n\
    \   virtual private networking (VPN) capabilities.  One very popular use\n   of\
    \ VPNs is to provide telecommuter access to the corporate Intranet.\n   Today,\
    \ Network Address Translations (NATs) as described in [RFC3022]\n   and [RFC2663],\
    \ are widely deployed in home gateways, as well as in\n   other locations likely\
    \ to be used by telecommuters, such as hotels.\n   The result is that IPsec-NAT\
    \ incompatibilities have become a major\n   barrier in the deployment of IPsec\
    \ in one of its principal uses.\n   This document describes known incompatibilities\
    \ between NAT and\n   IPsec, and describes the requirements for addressing them.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   In this document, the key words \"MAY\", \"MUST,\
    \ \"MUST NOT\", \"optional\",\n   \"recommended\", \"SHOULD\", and \"SHOULD NOT\"\
    , are to be interpreted as\n   described in [RFC2119].\n   Please note that the\
    \ requirements specified in this document are to\n   be used in evaluating protocol\
    \ submissions.  As such, the\n   requirements language refers to capabilities\
    \ of these protocols; the\n   protocol documents will specify whether these features\
    \ are required,\n   recommended, or optional.  For example, requiring that a protocol\n\
    \   support confidentiality is not the same thing as requiring that all\n   protocol\
    \ traffic be encrypted.\n   A protocol submission is not compliant if it fails\
    \ to satisfy one or\n   more of the MUST or MUST NOT requirements for the capabilities\
    \ that\n   it implements.  A protocol submission that satisfies all the MUST,\n\
    \   MUST NOT, SHOULD, and SHOULD NOT requirements for its capabilities is\n  \
    \ said to be \"unconditionally compliant\"; one that satisfies all the\n   MUST\
    \ and MUST NOT requirements, but not all the SHOULD or SHOULD NOT\n   requirements\
    \ for its protocols is said to be \"conditionally\n   compliant.\"\n"
- title: 2.  Known Incompatibilities between NA(P)T and IPsec
  contents:
  - "2.  Known Incompatibilities between NA(P)T and IPsec\n   The incompatibilities\
    \ between NA(P)T and IPsec can be divided into\n   three categories:\n   1) Intrinsic\
    \ NA(P)T issues.  These incompatibilities derive directly\n      from the NA(P)T\
    \ functionality described in [RFC3022].  These\n      incompatibilities will therefore\
    \ be present in any NA(P)T device.\n   2) NA(P)T implementation weaknesses.  These\
    \ incompatibilities are not\n      intrinsic to NA(P)T, but are present in many\
    \ NA(P)T\n      implementations.  Included in this category are problems in\n\
    \      handling inbound or outbound fragments.  Since these issues are\n     \
    \ not intrinsic to NA(P)T, they can, in principle, be addressed in\n      future\
    \ NA(P)T implementations.  However, since the implementation\n      problems appear\
    \ to be wide spread, they need to be taken into\n      account in a NA(P)T traversal\
    \ solution.\n   3) Helper issues.  These incompatibilities are present in NA(P)T\n\
    \      devices which attempt to provide for IPsec NA(P)T traversal.\n      Ironically,\
    \ this \"helper\" functionality creates further\n      incompatibilities, making\
    \ an already difficult problem harder to\n      solve.  While IPsec traversal\
    \ \"helper\" functionality is not\n      present in all NA(P)Ts, these features\
    \ are becoming sufficiently\n      popular that they also need to be taken into\
    \ account in a NA(P)T\n      traversal solution.\n"
- title: 2.1.  Intrinsic NA(P)T Issues
  contents:
  - "2.1.  Intrinsic NA(P)T Issues\n   Incompatibilities that are intrinsic to NA(P)T\
    \ include:\n   a) Incompatibility between IPsec AH [RFC2402] and NAT.  Since the\
    \ AH\n      header incorporates the IP source and destination addresses in the\n\
    \      keyed message integrity check, NAT or reverse NAT devices making\n    \
    \  changes to address fields will invalidate the message integrity\n      check.\
    \  Since IPsec ESP [RFC2406] does not incorporate the IP\n      source and destination\
    \ addresses in its keyed message integrity\n      check, this issue does not arise\
    \ for ESP.\n   b) Incompatibility between checksums and NAT.  TCP and UDP checksums\n\
    \      have a dependency on the IP source and destination addresses\n      through\
    \ inclusion of the \"pseudo-header\" in the calculation.  As a\n      result,\
    \ where checksums are calculated and checked upon receipt,\n      they will be\
    \ invalidated by passage through a NAT or reverse NAT\n      device.\n      As\
    \ a result, IPsec Encapsulating Security Payload (ESP) will only\n      pass through\
    \ a NAT unimpeded if TCP/UDP protocols are not involved\n      (as in IPsec tunnel\
    \ mode or IPsec protected GRE), or checksums are\n      not calculated (as is\
    \ possible with IPv4 UDP).  As described in\n      [RFC793], TCP checksum calculation\
    \ and verification is required in\n      IPv4.  UDP/TCP checksum calculation and\
    \ verification is required\n      in IPv6.\n      Stream Control Transmission\
    \ Protocol (SCTP), as defined in\n      [RFC2960] and [RFC3309], uses a CRC32C\
    \ algorithm calculated only\n      on the SCTP packet (common header + chunks),\
    \ so that the IP header\n      is not covered.  As a result, NATs do not invalidate\
    \ the SCTP CRC,\n      and the problem does not arise.\n      Note that since\
    \ transport mode IPsec traffic is integrity\n      protected and authenticated\
    \ using strong cryptography,\n      modifications to the packet can be detected\
    \ prior to checking\n      UDP/TCP checksums.  Thus, checksum verification only\
    \ provides\n      assurance against errors made in internal processing.\n   c)\
    \ Incompatibility between IKE address identifiers and NAT.  Where IP\n      addresses\
    \ are used as identifiers in Internet Key Exchange\n      Protocol (IKE) Phase\
    \ 1 [RFC2409] or Phase 2, modification of the\n      IP source or destination\
    \ addresses by NATs or reverse NATs will\n      result in a mismatch between the\
    \ identifiers and the addresses in\n      the IP header.  As described in [RFC2409],\
    \ IKE implementations are\n      required to discard such packets.\n      In order\
    \ to avoid use of IP addresses as IKE Phase 1 and Phase 2\n      identifiers,\
    \ userIDs and FQDNs can be used instead.  Where user\n      authentication is\
    \ desired, an ID type of ID_USER_FQDN can be used,\n      as described in [RFC2407].\
    \  Where machine authentication is\n      desired, an ID type of ID_FQDN can be\
    \ used.  In either case, it is\n      necessary to verify that the proposed identifier\
    \ is authenticated\n      as a result of processing an end-entity certificate,\
    \ if\n      certificates are exchanged in Phase 1.  While use of USER_FQDN or\n\
    \      FQDN identity types is possible within IKE, there are usage\n      scenarios\
    \ (e.g.  Security Policy Database (SPD) entries describing\n      subnets) that\
    \ cannot be accommodated this way.\n      Since the source address in the Phase\
    \ 2 identifier is often used\n      to form a full 5-tuple inbound SA selector,\
    \ the destination\n      address, protocol, source port and destination port can\
    \ be used in\n      the selector so as not to weaken inbound SA processing.\n\
    \   d) Incompatibility between fixed IKE source ports and NAPT.  Where\n     \
    \ multiple hosts behind the NAPT initiate IKE SAs to the same\n      responder,\
    \ a mechanism is needed to allow the NAPT to demultiplex\n      the incoming IKE\
    \ packets from the responder.  This is typically\n      accomplished by translating\
    \ the IKE UDP source port on outbound\n      packets from the initiator.  Thus\
    \ responders must be able to\n      accept IKE traffic from a UDP source port\
    \ other than 500, and must\n      reply to that port.  Care must be taken to avoid\
    \ unpredictable\n      behavior during re-keys.  If the floated source port is\
    \ not used\n      as the destination port for the re-key, the NAT may not be able\
    \ to\n      send the re-key packets to the correct destination.\n   e) Incompatibilities\
    \ between overlapping SPD entries and NAT.  Where\n      initiating hosts behind\
    \ a NAT use their source IP addresses in\n      Phase 2 identifiers, they can\
    \ negotiate overlapping SPD entries\n      with the same responder IP address.\
    \  The responder could then send\n      packets down the wrong IPsec SA.  This\
    \ occurs because to the\n      responder, the IPsec SAs appear to be equivalent,\
    \ since they exist\n      between the same endpoints and can be used to pass the\
    \ same\n      traffic.\n   f) Incompatibilities between IPsec SPI selection and\
    \ NAT.  Since\n      IPsec ESP traffic is encrypted and thus opaque to the NAT,\
    \ the NAT\n      must use elements of the IP and IPsec header to demultiplex\n\
    \      incoming IPsec traffic.  The combination of the destination IP\n      address,\
    \ security protocol (AH/ESP), and IPsec SPI is typically\n      used for this\
    \ purpose.\n      However, since the outgoing and incoming SPIs are chosen\n \
    \     independently, there is no way for the NAT to determine what\n      incoming\
    \ SPI corresponds to what destination host merely by\n      inspecting outgoing\
    \ traffic.  Thus, were two hosts behind the NAT\n      to attempt to create IPsec\
    \ SAs at the same destination\n      simultaneously, it is possible that the NAT\
    \ will deliver the\n      incoming IPsec packets to the wrong destination.\n \
    \     Note that this is not an incompatibility with IPsec per se, but\n      rather\
    \ with the way it is typically implemented.  With both AH and\n      ESP, the\
    \ receiving host specifies the SPI to use for a given SA, a\n      choice which\
    \ is significant only to the receiver.  At present, the\n      combination of\
    \ Destination IP, SPI, and Security Protocol (AH,\n      ESP) uniquely identifies\
    \ a Security Association.  Also, SPI values\n      in the range 1-255 are reserved\
    \ to IANA and may be used in the\n      future.  This means that, when negotiating\
    \ with the same external\n      host or gateway, the internal hosts behind the\
    \ same NAPT can\n      select the same SPI value, such that one host inbound SA\
    \ is\n        (SPI=470, Internal Dest IP=192.168.0.4)\n      and a different host\
    \ inbound SA is\n        (SPI=470, Internal Dest IP=192.168.0.5).\n      The receiving\
    \ NAPT will not be able to determine which internal\n      host an inbound IPsec\
    \ packet with SPI=470 should be forwarded to.\n      It is also possible for the\
    \ receiving host to allocate a unique\n      SPI to each unicast Security Association.\
    \  In this case, the\n      Destination IP Address need only be checked to see\
    \ if it is \"any\n      valid unicast IP for this host\", not checked to see if\
    \ it is the\n      specific Destination IP address used by the sending host. \
    \ Using\n      this technique, the NA(P)T can be assured of a low but non-zero\n\
    \      chance of forwarding packets to the wrong internal host, even when\n  \
    \    two or more hosts establish SAs with the same external host.\n      This\
    \ approach is completely backwards compatible, and only\n      requires the particular\
    \ receiving host to make a change to its SPI\n      allocation and IPsec_esp_input()\
    \ code.  However, NA(P)T devices\n      may not be able to detect this behavior\
    \ without problems\n      associated with parsing IKE payloads.  And a host may\
    \ still be\n      required to use a SPI in the IANA reserved range for the assigned\n\
    \      purpose.\n   g) Incompatibilities between embedded IP addresses and NAT.\
    \  Since\n      the payload is integrity protected, any IP addresses enclosed\n\
    \      within IPsec packets will not be translatable by a NAT.  This\n      renders\
    \ ineffective Application Layer Gateways (ALGs) implemented\n      within NATs.\
    \  Protocols that utilize embedded IP addresses include\n      FTP, IRC, SNMP,\
    \ LDAP, H.323, SIP, SCTP (optionally), and many\n      games.  To address this\
    \ issue, it is necessary to install ALGs on\n      the host or security gateway\
    \ that can operate on application\n      traffic prior to IPsec encapsulation\
    \ and after IPsec\n      decapsulation.\n   h) Implicit directionality of NA(P)T.\
    \  NA(P)Ts often require an\n      initial outbound packet to flow through them\
    \ in order to create an\n      inbound mapping state.  Directionality prohibits\
    \ unsolicited\n      establishment of IPsec SAs to hosts behind the NA(P)T.\n\
    \   i) Inbound SA selector verification. Assuming IKE negotiates phase 2\n   \
    \   selectors, inbound SA processing will drop the decapsulated\n      packet,\
    \ since [RFC2401] requires a packet's source address match\n      the SA selector\
    \ value, which NA(P)T processing of an ESP packet\n      would change.\n"
- title: 2.2.  NA(P)T Implementation Weaknesses
  contents:
  - "2.2.  NA(P)T Implementation Weaknesses\n   Implementation problems present in\
    \ many NA(P)Ts include:\n   j) Inability to handle non-UDP/TCP traffic.  Some\
    \ NA(P)Ts discard\n      non-UDP/TCP traffic or perform address-only translation\
    \ when only\n      one host is behind the NAT.  Such NAPTs are unable to enable\
    \ SCTP,\n      ESP (protocol 50), or AH (protocol 51) traffic.\n   k) NAT mapping\
    \ timeouts.  NA(P)Ts vary in the time for which a UDP\n      mapping will be maintained\
    \ in the absence of traffic.  Thus, even\n      where IKE packets can be correctly\
    \ translated, the translation\n      state may be removed prematurely.\n   l)\
    \ Inability to handle outgoing fragments.  Most NA(P)Ts can properly\n      fragment\
    \ outgoing IP packets in the case where the IP packet size\n      exceeds the\
    \ MTU on the outgoing interface.  However, proper\n      translation of outgoing\
    \ packets that are already fragmented is\n      difficult and most NAPTs do not\
    \ handle this correctly.  As noted\n      in Section 6.3 of [RFC3022], where two\
    \ hosts originate fragmented\n      packets to the same destination, the fragment\
    \ identifiers can\n      overlap.  Since the destination host relies on the fragmentation\n\
    \      identifier and fragment offset for reassembly, the result will be\n   \
    \   data corruption.  Few NA(P)Ts protect against identifier\n      collisions\
    \ by supporting identifier translation.  Identifier\n      collisions are not\
    \ an issue when NATs perform the fragmentation,\n      since the fragment identifier\
    \ need only be unique within a\n      source/destination IP address pair.\n  \
    \    Since a fragment can be as small as 68 octets [RFC791], there is\n      no\
    \ guarantee that the first fragment will contain a complete TCP\n      header.\
    \  Thus, a NA(P)T looking to recalculate the TCP checksum\n      may need to modify\
    \ a subsequent fragment.  Since fragments can be\n      reordered, and IP addresses\
    \ can be embedded and possibly even\n      split between fragments, the NA(P)T\
    \ will need to perform\n      reassembly prior to completing the translation.\
    \  Few NA(P)Ts\n      support this.\n   m) Inability to handle incoming fragments.\
    \  Since only the first\n      fragment will typically contain a complete IP/UDP/SCTP/TCP\
    \ header,\n      NAPTs need to be able to perform the translation based on the\n\
    \      source/dest IP address and fragment identifier alone.  Since\n      fragments\
    \ can be reordered, the headers to a given fragment\n      identifier may not\
    \ be known if a subsequent fragment arrives prior\n      to the initial one, and\
    \ the headers may be split between\n      fragments.  As a result, the NAPT may\
    \ need to perform reassembly\n      prior to completing the translation.  Few\
    \ NAPTs support this.\n      Note that with NAT, the source/dest IP address is\
    \ enough to\n      determine the translation so that this does not arise.  However,\n\
    \      it is possible for the IPsec or IKE headers to be split between\n     \
    \ fragments, so that reassembly may still be required.\n"
- title: 2.3.  Helper Incompatibilities
  contents:
  - "2.3.  Helper Incompatibilities\n   Incompatibilities between IPsec and NAT \"\
    helper\" functionality\n   include:\n   n) Internet Security Association and Key\
    \ Management Protocol (ISAKMP)\n      header inspection.  Today some NAT implementations\
    \ attempt to use\n      IKE cookies to de-multiplex incoming IKE traffic.  As\
    \ with\n      source-port de-multiplexing, IKE cookie de-multiplexing results\
    \ in\n      problems with re-keying, since Phase 1 re-keys typically will not\n\
    \      use the same cookies as the earlier traffic.\n   o) Special treatment of\
    \ port 500.  Since some IKE implementations are\n      unable to handle non-500\
    \ UDP source ports, some NATs do not\n      translate packets with a UDP source\
    \ port of 500.  This means that\n      these NATs are limited to one IPsec client\
    \ per destination\n      gateway, unless they inspect details of the ISAKMP header\
    \ to\n      examine cookies which creates the problem noted above.\n   p) ISAKMP\
    \ payload inspection.  NA(P)T implementations that attempt to\n      parse ISAKMP\
    \ payloads may not handle all payload ordering\n      combinations, or support\
    \ vendor_id payloads for IKE option\n      negotiation.\n"
- title: 3.  Requirements for IPsec-NAT Compatibility
  contents:
  - "3.  Requirements for IPsec-NAT Compatibility\n   The goal of an IPsec-NAT compatibility\
    \ solution is to expand the\n   range of usable IPsec functionality beyond that\
    \ available in the\n   NAT-compatible IPsec tunnel mode solution described in\
    \ Section 2.3.\n   In evaluating a solution to IPsec-NAT incompatibility, the\
    \ following\n   criteria should be kept in mind:\n   Deployment\n      Since IPv6\
    \ will address the address scarcity issues that\n      frequently lead to use\
    \ of NA(P)Ts with IPv4, the IPsec-NAT\n      compatibility issue is a transitional\
    \ problem that needs to be\n      solved in the time frame prior to widespread\
    \ deployment of IPv6.\n      Therefore, to be useful, an IPsec-NAT compatibility\
    \ solution MUST\n      be deployable on a shorter time scale than IPv6.\n    \
    \  Since IPv6 deployment requires changes to routers as well as\n      hosts,\
    \ a potential IPsec-NAT compatibility solution, which\n      requires changes\
    \ to both routers and hosts, will be deployable on\n      approximately the same\
    \ time scale as IPv6.  Thus, an IPsec-NAT\n      compatibility solution SHOULD\
    \ require changes only to hosts, and\n      not to routers.\n      Among other\
    \ things, this implies that communication between the\n      host and the NA(P)T\
    \ SHOULD NOT be required by an IPsec-NAT\n      compatibility solution, since\
    \ that would require changes to the\n      NA(P)Ts, and interoperability testing\
    \ between the host and NA(P)T\n      implementations.  In order to enable deployment\
    \ in the short term,\n      it is necessary for the solution to work with existing\
    \ router and\n      NA(P)T products within the deployed infrastructure.\n   Protocol\
    \ Compatibility\n      An IPsec NAT traversal solution is not expected to resolve\
    \ issues\n      with protocols that cannot traverse NA(P)T when unsecured with\n\
    \      IPsec.  Therefore, ALGs may still be needed for some protocols,\n     \
    \ even when an IPsec NAT traversal solution is available.\n   Security\n     \
    \ Since NA(P)T directionality serves a security function, IPsec\n      NA(P)T\
    \ traversal solutions should not allow arbitrary incoming\n      IPsec or IKE\
    \ traffic from any IP address to be received by a host\n      behind the NA(P)T,\
    \ although mapping state should be maintained\n      once bidirectional IKE and\
    \ IPsec communication is established.\n   Telecommuter Scenario\n      Since one\
    \ of the primary uses of IPsec is remote access to\n      corporate Intranets,\
    \ a NA(P)T traversal solution MUST support\n      NA(P)T traversal, via either\
    \ IPsec tunnel mode or L2TP over IPsec\n      transport mode [RFC3193].  This\
    \ includes support for traversal of\n      more than one NA(P)T between the remote\
    \ client and the VPN\n      gateway.\n      The client may have a routable address\
    \ and the VPN gateway may be\n      behind at least one NA(P)T, or alternatively,\
    \ both the client and\n      the VPN gateway may be behind one or more NA(P)Ts.\
    \  Telecommuters\n      may use the same private IP address, each behind their\
    \ own NA(P)T,\n      or many telecommuters may reside on a private network behind\
    \ the\n      same NA(P)T, each with their own unique private address,\n      connecting\
    \ to the same VPN gateway.  Since IKE uses UDP port 500\n      as the destination,\
    \ it is not necessary to enable multiple VPN\n      gateways operating behind\
    \ the same external IP address.\n   Gateway-to-Gateway Scenario\n      In a gateway-gateway\
    \ scenario, a privately addressed network (DMZ)\n      may be inserted between\
    \ the corporate network and the Internet.\n      In this design, IPsec security\
    \ gateways connecting portions of the\n      corporate network may be resident\
    \ in the DMZ and have private\n      addresses on their external (DMZ) interfaces.\
    \  A NA(P)T connects\n      the DMZ network to the Internet.\n   End-to-End Scenario\n\
    \      A NAT-IPsec solution MUST enable secure host-host TCP/IP\n      communication\
    \ via IPsec, as well as host-gateway communications.\n      A host on a private\
    \ network MUST be able to bring up one or\n      multiple IPsec-protected TCP\
    \ connections or UDP sessions to\n      another host with one or more NA(P)Ts\
    \ between them.  For example,\n      NA(P)Ts may be deployed within branch offices\
    \ connecting to the\n      corporate network, with an additional NA(P)T connecting\
    \ the\n      corporate network to the Internet.  Likewise, NA(P)Ts may be\n  \
    \    deployed within a corporate network LAN or WAN to connect wireless\n    \
    \  or remote location clients to the corporate network.  This may\n      require\
    \ special processing of TCP and UDP traffic on the host.\n   Bringing up SCTP\
    \ connections to another host with one or more NA(P)Ts\n   between them may present\
    \ special challenges.  SCTP supports multi-\n   homing.  If more than one IP address\
    \ is used, these addresses are\n   transported as part of the SCTP packet during\
    \ the association setup\n   (in the INIT and INIT-ACK chunks).  If only single\
    \ homed SCTP end-\n   points are used, [RFC2960] section 3.3.2.1 states:\n   \
    \      Note that not using any IP address parameters in the INIT and\n       \
    \  INIT-ACK is an alternative to make an association more likely\n         to\
    \ work across a NAT box.\n   This implies that IP addresses should not be put\
    \ into the SCTP packet\n   unless necessary.  If NATs are present and IP addresses\
    \ are included,\n   then association setup will fail.  Recently [AddIP] has been\
    \ proposed\n   which allows the modification of the IP address once an association\n\
    \   is established.  The modification messages have also IP addresses in\n   the\
    \ SCTP packet, and so will be adversely affected by NATs.\n   Firewall Compatibility\n\
    \      Since firewalls are widely deployed, a NAT-IPsec compatibility\n      solution\
    \ MUST enable a firewall administrator to create simple,\n      static access\
    \ rule(s) to permit or deny IKE and IPsec NA(P)T\n      traversal traffic.  This\
    \ implies, for example, that dynamic\n      allocation of IKE or IPsec destination\
    \ ports is to be avoided.\n   Scaling\n      An IPsec-NAT compatibility solution\
    \ should be capable of being\n      deployed within an installation consisting\
    \ of thousands of\n      telecommuters.  In this situation, it is not possible\
    \ to assume\n      that only a single host is communicating with a given destination\n\
    \      at a time.  Thus, an IPsec-NAT compatibility solution MUST address\n  \
    \    the issue of overlapping SPD entries and de-multiplexing of\n      incoming\
    \ packets.\n   Mode Support\n      At a minimum, an IPsec-NAT compatibility solution\
    \ MUST support\n      traversal of the IKE and IPsec modes required for support\
    \ within\n      [RFC2409] and [RFC2401].  For example, an IPsec gateway MUST\n\
    \      support ESP tunnel mode NA(P)T traversal, and an IPsec host MUST\n    \
    \  support IPsec transport mode NA(P)T traversal.  The purpose of AH\n      is\
    \ to protect immutable fields within the IP header (including\n      addresses),\
    \ and NA(P)T translates addresses, invalidating the AH\n      integrity check.\
    \  As a result, NA(P)T and AH are fundamentally\n      incompatible and there\
    \ is no requirement that an IPsec-NAT\n      compatibility solution support AH\
    \ transport or tunnel mode.\n   Backward Compatibility and Interoperability\n\
    \      An IPsec-NAT compatibility solution MUST be interoperable with\n      existing\
    \ IKE/IPsec implementations, so that they can communicate\n      where no NA(P)T\
    \ is present.  This implies that an IPsec-NAT\n      compatibility solution MUST\
    \ be backwards-compatible with IPsec as\n      defined in [RFC2401] and IKE as\
    \ defined in [RFC2409].  In\n      addition, it SHOULD be able to detect the presence\
    \ of a NA(P)T, so\n      that NA(P)T traversal support is only used when necessary.\
    \  This\n      implies that it MUST be possible to determine that an existing\
    \ IKE\n      implementation does not support NA(P)T traversal, so that a\n   \
    \   standard IKE conversation can occur, as described in [RFC2407],\n      [RFC2408],\
    \ and [RFC2409].  Note that while this implies initiation\n      of IKE to port\
    \ 500, there is no requirement for a specific source\n      port, so that UDP\
    \ source port 500 may or may not be used.\n   Security\n      An IPsec-NAT compatibility\
    \ solution MUST NOT introduce additional\n      IKE or IPsec security vulnerabilities.\
    \  For example, an acceptable\n      solution must demonstrate that it introduces\
    \ no new denial of\n      service or spoofing vulnerabilities.  IKE MUST be allowed\
    \ to re-\n      key in a bi-directional manner as described in [RFC2408].\n"
- title: 4.  Existing Solutions
  contents:
  - '4.  Existing Solutions

    '
- title: 4.1.  IPsec Tunnel Mode
  contents:
  - "4.1.  IPsec Tunnel Mode\n   In a limited set of circumstances, it is possible\
    \ for an IPsec tunnel\n   mode implementation, such as that described in [DHCP],\
    \ to traverse\n   NA(P)T successfully.  However, the requirements for successful\n\
    \   traversal are sufficiently limited so that a more general solution is\n  \
    \ needed:\n   1) IPsec ESP.  IPsec ESP tunnels do not cover the outer IP header\n\
    \      within the message integrity check, and so will not suffer\n      Authentication\
    \ Data invalidation due to address translation.\n      IPsec tunnels also need\
    \ not be concerned about checksum\n      invalidation.\n   2) No address validation.\
    \  Most current IPsec tunnel mode\n      implementations do not perform source\
    \ address validation so that\n      incompatibilities between IKE identifiers\
    \ and source addresses\n      will not be detected.  This introduces security\
    \ vulnerabilities as\n      described in Section 5.\n   3) \"Any to Any\" SPD\
    \ entries.  IPsec tunnel mode clients can negotiate\n      \"any to any\" SPDs,\
    \ which are not invalidated by address\n      translation.  This effectively precludes\
    \ use of SPDs for the\n      filtering of allowed tunnel traffic.\n   4) Single\
    \ client operation.  With only a single client behind a NAT,\n      there is no\
    \ risk of overlapping SPDs.  Since the NAT will not need\n      to arbitrate between\
    \ competing clients, there is also no risk of\n      re-key mis-translation, or\
    \ improper incoming SPI or cookie\n      de-multiplexing.\n   5) No fragmentation.\
    \  When certificate authentication is used, IKE\n      fragmentation can be encountered.\
    \  This can occur when certificate\n      chains are used, or even when exchanging\
    \ a single certificate if\n      the key size, or the size of other certificate\
    \ fields (such as the\n      distinguished name and other extensions), is large\
    \ enough.\n      However, when pre-shared keys are used for authentication,\n\
    \      fragmentation is less likely.\n   6) Active sessions.  Most VPN sessions\
    \ typically maintain ongoing\n      traffic flow during their lifetime so that\
    \ UDP port mappings are\n      less likely be removed due to inactivity.\n"
- title: 4.2.  RSIP
  contents:
  - "4.2.  RSIP\n   RSIP, described in [RSIP] and [RSIPFrame], includes mechanisms\
    \ for\n   IPsec traversal, as described in [RSIPsec].  By enabling host-NA(P)T\n\
    \   communication, RSIP addresses issues of IPsec SPI de-multiplexing, as\n  \
    \ well as SPD overlap.  It is thus suitable for use in enterprises, as\n   well\
    \ as home networking scenarios.  By enabling hosts behind a NAT to\n   share the\
    \ external IP address of the NA(P)T (the RSIP gateway), this\n   approach is compatible\
    \ with protocols including embedded IP\n   addresses.\n   By tunneling IKE and\
    \ IPsec packets, RSIP avoids changes to the IKE\n   and IPsec protocols, although\
    \ major changes are required to host IKE\n   and IPsec implementations to retrofit\
    \ them for RSIP-compatibility.\n   It is thus compatible with all existing protocols\
    \ (AH/ESP) and modes\n   (transport and tunnel).\n   In order to handle de-multiplexing\
    \ of IKE re-keys, RSIP requires\n   floating of the IKE source port, as well as\
    \ re-keying to the floated\n   port.  As a result, interoperability with existing\
    \ IPsec\n   implementations is not assured.\n   RSIP does not satisfy the deployment\
    \ requirements for an IPsec-NAT\n   compatibility solution because an RSIP-enabled\
    \ host requires a\n   corresponding RSIP-enabled gateway in order to establish\
    \ an IPsec SA\n   with another host.  Since RSIP requires changes only to clients\
    \ and\n   routers and not to servers, it is less difficult to deploy than IPv6.\n\
    \   However, for vendors, implementation of RSIP requires a substantial\n   fraction\
    \ of the resources required for IPv6 support.  Thus, RSIP\n   solves a \"transitional\"\
    \ problem on a long-term time scale, which is\n   not useful.\n"
- title: 4.3.  6to4
  contents:
  - "4.3.  6to4\n   6to4, as described in [RFC3056] can form the basis for an IPsec-NAT\n\
    \   traversal solution.  In this approach, the NAT provides IPv6 hosts\n   with\
    \ an IPv6 prefix derived from the NAT external IPv4 address, and\n   encapsulates\
    \ IPv6 packets in IPv4 for transmission to other 6to4\n   hosts or 6to4 relays.\
    \  This enables an IPv6 host using IPsec to\n   communicate freely to other hosts\
    \ within the IPv6 or 6to4 clouds.\n   While 6to4 is an elegant and robust solution\
    \ where a single NA(P)T\n   separates a client and VPN gateway, it is not universally\
    \ applicable.\n   Since 6to4 requires the assignment of a routable IPv4 address\
    \ to the\n   NA(P)T in order to allow formation of an IPv6 prefix, it is not\n\
    \   usable where multiple NA(P)Ts exist between the client and VPN\n   gateway.\
    \  For example, an NA(P)T with a private address on its\n   external interface\
    \ cannot be used by clients behind it to obtain an\n   IPv6 prefix via 6to4.\n\
    \   While 6to4 requires little additional support from hosts that already\n  \
    \ support IPv6, it does require changes to NATs, which need to be\n   upgraded\
    \ to support 6to4.  As a result, 6to4 may not be suitable for\n   deployment in\
    \ the short term.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   By definition, IPsec-NAT compatibility requires\
    \ that hosts and\n   routers implementing IPsec be capable of securely processing\
    \ packets\n   whose IP headers are not cryptographically protected.  A number\
    \ of\n   issues arise from this that are worth discussing.\n   Since IPsec AH\
    \ cannot pass through a NAT, one of the side effects of\n   providing an IPsec-NAT\
    \ compatibility solution may be for IPsec ESP\n   with null encryption to be used\
    \ in place of AH where a NAT exists\n   between the source and destination.  However,\
    \ it should be noted that\n   ESP with null encryption does not provide the same\
    \ security\n   properties as AH.  For example, there are security risks relating\
    \ to\n   IPv6 source routing that are precluded by AH, but not by ESP with\n \
    \  null encryption.\n   In addition, since ESP with any transform does not protect\
    \ against\n   source address spoofing, some sort of source IP address sanity\n\
    \   checking needs to be performed.  The importance of the anti-spoofing\n   check\
    \ is not widely understood.  There is normally an anti-spoofing\n   check on the\
    \ Source IP Address as part of IPsec_{esp,ah}_input().\n   This ensures that the\
    \ packet originates from the same address as that\n   claimed within the original\
    \ IKE Phase 1 and Phase 2 security\n   associations.  When a receiving host is\
    \ behind a NAT, this check\n   might not strictly be meaningful for unicast sessions,\
    \ whereas in the\n   Global Internet this check is important for tunnel-mode unicast\n\
    \   sessions to prevent a spoofing attack described in [AuthSource],\n   which\
    \ can occur when access controls on the receiver depend upon the\n   source IP\
    \ address of verified ESP packets after decapsulation.\n   IPsec-NAT compatibility\
    \ schemes should provide anti-spoofing\n   protection if it uses source addresses\
    \ for access controls.\n   Let us consider two hosts, A and C, both behind (different)\
    \ NATs, who\n   negotiate IPsec tunnel mode SAs to router B.  Hosts A and C may\
    \ have\n   different privileges; for example, host A might belong to an employee\n\
    \   trusted to access much of the corporate Intranet, while C might be a\n   contractor\
    \ only authorized to access a specific web site.\n   If host C sends a tunnel\
    \ mode packet spoofing A's IP address as the\n   source, it is important that\
    \ this packet not be accorded the\n   privileges corresponding to A.  If authentication\
    \ and integrity\n   checking is performed, but no anti-spoofing check (verifying\
    \ that the\n   originating IP address corresponds to the SPI) then host C may\
    \ be\n   allowed to reach parts of the network that are off limits.  As a\n  \
    \ result, an IPsec-NAT compatibility scheme MUST provide some degree of\n   anti-spoofing\
    \ protection.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC791]     Postel, J., \"Internet Protocol\"\
    , STD 5, RFC 791,\n                September 1981.\n   [RFC793]     Postel, J.,\
    \ \"Transmission Control Protocol\", STD 7, RFC\n                793, September\
    \ 1981.\n   [RFC2119]    Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \                Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2401]\
    \    Atkinson, R. and S. Kent, \"Security Architecture for the\n             \
    \   Internet Protocol\", RFC 2401, November 1998.\n   [RFC2402]    Kent, S. and\
    \ R. Atkinson, \"IP Authentication Header\",\n                RFC 2402, November\
    \ 1998.\n   [RFC2406]    Kent,S. and R. Atkinson, \"IP Encapsulating Security\n\
    \                Payload (ESP)\", RFC 2406, November 1998.\n   [RFC2407]    Piper,\
    \ D., \"The Internet IP Security Domain of\n                Interpretation for\
    \ ISAKMP\", RFC 2407, November 1998.\n   [RFC2409]    Harkins, D. and D. Carrel,\
    \ \"The Internet Key Exchange\n                (IKE)\", RFC 2409, November 1998.\n\
    \   [RFC2663]    Srisuresh, P. and M. Holdredge, \"IP Network Address\n      \
    \          Translator (NAT) Terminology and Considerations\", RFC\n          \
    \      2663, August 1999.\n   [RFC3022]    Srisuresh, P. and K. Egevang, \"Traditional\
    \ IP Network\n                Address Translator (Traditional NAT)\", RFC 3022,\
    \ January\n                2001.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC2408]    Maughan, D., Schertler, M., Schneider,\
    \ M. and J. Turner,\n                \"Internet Security Association and Key Management\n\
    \                Protocol (ISAKMP)\", RFC 2408, November 1998.\n   [RFC2960] \
    \   Stewart, R., Xie, Q., Morneault, K., Sharp, C.,\n                Schwarzbauer,\
    \ H., Taylor, T., Rytina, I., Kalla, M.,\n                Zhang, M. and V. Paxson,\
    \ \"Stream Control Transmission\n                Protocol\", RFC 2960, October\
    \ 2000.\n   [RFC3056]    Carpenter, B. and K. Moore, \"Connection of IPv6 Domains\n\
    \                via IPv4 Clouds\", RFC 3056, February 2001.\n   [RFC3193]   \
    \ Patel, B., Aboba, B., Dixon, W., Zorn, G. and S. Booth,\n                \"\
    Securing L2TP using IPsec\", RFC 3193, November 2001.\n   [RFC3309]    Stone,\
    \ J., Stewart, R. and D. Otis, \"Stream Control\n                Transmission\
    \ Protocol (SCTP) Checksum Change\", RFC 3309,\n                September 2002.\n\
    \   [RSIPFrame]  Borella, M., Lo, J., Grabelsky, D. and G. Montenegro,\n     \
    \           \"Realm Specific IP: Framework\", RFC 3102, October 2001.\n   [RSIP]\
    \       Borella, M., Grabelsky, D., Lo, J. and K. Taniguchi,\n               \
    \ \"Realm Specific IP: Protocol Specification\", RFC 3103,\n                October\
    \ 2001.\n   [RSIPsec]    Montenegro, G. and M. Borella, \"RSIP Support for End-\n\
    \                to-End IPsec\", RFC 3104, October 2001.\n   [DHCP]       Patel,\
    \ B., Aboba, B., Kelly, S. and V. Gupta, \"Dynamic\n                Host Configuration\
    \ Protocol (DHCPv4) Configuration of\n                IPsec Tunnel Mode\", RFC\
    \ 3456, January 2003.\n   [AuthSource] Kent, S., \"Authenticated Source Addresses\"\
    , IPsec WG\n                Archive (ftp://ftp.ans.net/pub/archive/IPsec), Message-\n\
    \                Id:  <v02130517ad121773c8ed@[128.89.0.110]>, January 5,\n   \
    \             1996.\n   [AddIP]      Stewart, R., et al., \"Stream Control Transmission\n\
    \                Protocol (SCTP) Dynamic Address Reconfiguration\", Work\n   \
    \             in Progress.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   Thanks to Steve Bellovin of AT&T Research, Michael Tuexen\
    \ of Siemens,\n   Peter Ford of Microsoft, Ran Atkinson of Extreme Networks, and\
    \ Daniel\n   Senie for useful discussions of this problem space.\n"
- title: 8.  Authors' Addresses
  contents:
  - "8.  Authors' Addresses\n   Bernard Aboba\n   Microsoft Corporation\n   One Microsoft\
    \ Way\n   Redmond, WA 98052\n   Phone: +1 425 706 6605\n   Fax:   +1 425 936 7329\n\
    \   EMail: bernarda@microsoft.com\n   William Dixon\n   V6 Security, Inc.\n  \
    \ 601 Union Square, Suite #4200-300\n   Seattle, WA 98101\n   EMail: ietf-wd@v6security.com\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004). \
    \ This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78 and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
