This RFC is not a candidate for any level of Internet Standard.
The IETF disclaims any knowledge of the fitness of this RFC for any purpose, and in particular notes that the decision to publish is not based on IETF review for such things as security, congestion control or inappropriate interaction with deployed protocols.
The RFC Editor has chosen to publish this document at its discretion.
Readers of this document should exercise caution in evaluating its value for implementation and deployment.
Abstract The Netnews Administration System (NAS) is a framework to simplify the administration and usage of network news (also known as Netnews) on the Internet.
Data for the administration of newsgroups and hierarchies are kept in a distributed hierarchical database and are available through a client server protocol.
The database is accessible by news servers, news administrators, and news readers.
News servers can update their configuration automatically; administrators are able to get the data manually.
News reader programs are able to get certain information from an NAS server, automatically or at a user's discretion, which provides detailed information about groups and hierarchies to the user.
NAS is usable in coexistence with the current, established process of control messages; an unwanted interference is impossible.
Furthermore, NAS is able to reflect the somewhat chaotic structure of Usenet in a hierarchical database.
NAS can be used without modification of existing news relay, news server, or news reader software; however, some tasks will be better accomplished with NAS  compliant software.
An increasing number of newsgroups, hierarchies, and articles has made the administration of news servers a complex and time consuming task.
The tools for the administration have remained unchanged for ten years and are no longer appropriate.
Many hierarchies are inconsistent; many new newsgroups are not created or only with a large delay; removed groups keep lurking in the configuration files for a long period of time.
There is no administration tool that utilizes the power of the Internet, and it is not possible to check the consistency of the news server at a given point of time.
Users find it difficult to get an overview of the newsgroups, the charter of a particular one, which language is preferred, or whether a group is moderated.
Renaming, the status change from moderated to unmoderated or vice versa, and the splitting of a group into several others are dynamic processes.
These processes are in common use, but it takes a long time until every news server is aware of these changes.
An increasing number of faked control messages has appeared in the last few years.
Purposely or accidentally, control messages were sent to foreign news servers to create or remove a certain group, although this was not approved according to the rules of the hierarchy in question.
Due to this fact, automatic creation and removal are disabled on many news servers, and several dead groups have not been deleted.
It is very difficult for users to determine the current status of a group, and in some cases they simply cannot tell that the group they are posting to is not an active group but a dead or invalid one.
It is the design goal of Netnews Administration System (NAS) to provide an out of band system that helps to maintain, propagate, and deliver the required information.
There will not be any interference with current protocols and standards.
It is not intended to make use of control messages or some special Network News Transfer Protocol (NNTP) commands.
The advantage of NAS is that it provides more information in a more structured format than that of control messages.
Not only news server administrators but
also Usenet users can get more detailed information about newsgroups and hierarchies.
Due to the fact that a client connects to a server and the server asks for authentication, this is a more reasonable procedure for transmitting information than that for control messages.
Furthermore, it is possible to check for changes on a regular basis at customized intervals to keep local data up to date.
Overview NAS is based on a database that contains information about certain groups and hierarchies.
This database is structured in a hierarchical manner and distributed to various servers, and it is able to receive queries at any time.
The service is comparable to directory services like DNS, Lightweight Directory Access Protocol (LDAP), or Network Information Service (NIS).
The NAS protocol is inspired by protocols like NNTP and SMTP.
The port 991 is reserved for NAS and registered by the Internet Assigned Numbers Authority (IANA)
The organizational structure of NAS is hierarchical; this means that a NAS root server collects data from the sub servers that are authoritative for certain hierarchies.
The root server signs the data and distributes it authoritatively.
Replication of database entries is possible.
The hierarchical structure can consist of multiple levels.
Usage of the database is possible for news servers, news readers, and special client programs.
The communication is based on TCP and UDP.
Taking the real world into account, there might be some policy problems with a single root server.
But it is possible to establish a structure like that of the current Usenet system, where some hierarchies have a good administration with a well defined system of rules, and where some are not well maintained.
The goal is to get as much information as possible under one hat, but there can be no "official" force to achieve this.
During the startup phase, it is quite likely that there will be a root server, handling just hierarchies with strict rules and accepted authorities (e.g., BIG8, de. , us. , bln.
However, it is also imaginable to have some NAS servers providing data on, for example, alt.!binaries, some providing data on alt. , and even some providing alt.
following special policies or sets of rules.
An administrator using NAS will have the choice to use just one root server (and all its data) or to use another NAS server for special hierarchies.
Configuration B Figure 1 NAS contains information about newsgroups and complete hierarchies.
Furthermore, it contains information about the hierarchies' inheritable entries and default values for a single newsgroup.
It is expected that the real life use of NAS will change the requirements for the Netnews Administration System.
On the one hand, the protocol has to be extensible and flexible in order to implement improvements; on the other hand, it must ensure compatibility between different versions.
A simultaneous migration of all sites using NAS to a new protocol version is not likely to happen.
To solve this problem, NAS has a protocol level.
This protocol level describes the current functionality.
The protocol level, being a number between 1 and 32767, is negotiated at connection setup.
Enhancements and modifications must use a different protocol level than that of their predecessors.
(Usually the protocol level is incremented by 1 with every new version of the protocol specification.)
Every current or future implementation MUST be compatible with protocol level 1 in order to fall back to this level if communication on a higher level fails.
An implementation of higher protocol levels should be able to emulate the behavior of lower levels, even if this implies a loss of features.
The negotiation of the protocol level between client and server is described in the specification of the command VERS.
If there is no agreement on the protocol level, only commands of the protocol level 1 MUST be used.
Documents enhancing or modifying the NAS standard MUST specify on which level these changes take place and how the behavior should be in other protocol levels.
This document describes protocol level 1.
In order to use an NAS server, a connection must be opened by the client.
The NAS server can be located in the same domain or somewhere else on the Internet.
The NAS system is hierarchical.
The idea is to have an NAS root server like the DNS root servers.
The root server distributes the data collected from client NAS servers that are authoritative servers for their hierarchy.
The maintenance of the authoritative data is possible on any system.
The root server collects the data and makes them available to other servers, which can in turn distribute these data to other servers.
The administrator has the opportunity to make use of either all data or only parts of the database.
NAS servers can ask multiple NAS servers for data.
An attached time stamp makes it possible to distinguish between new and old data and to avoid loops in the propagation.
To describe the NAS in greater detail, it is necessary to emphasize the hierarchical design of the NAS system.
The following figure shows the propagation of data along the server hierarchy.
Authoritative data for a newsgroup or a hierarchy are collected and written into a database.
These data are available through a local NAS server and are collected from this authoritative server by upstream NAS servers.
There may also be NAS servers that are not authoritative servers; these servers merely provide the information they collect from other NAS servers to clients such as news servers, administration programs, and news readers.
Figure 2 Requests to an NAS server originating at a client (as well as at another server) are accomplished in several steps: establishing a connection, authentication (optional), negotiating a protocol level (optional), queries on the database, and termination.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Specification of the NAS Protocol (TCP) 6.1.
An answer starts with a response code (a three digit number), optionally followed by white space and a textual message.
Then the actual text/data follows.
Text is sent as a series of successive lines of textual matter, each terminated with CRLF.
Answer   response code [answertext] CRLF text CRLF ".
" CRLF If the original text contains a period as the first character of the text line, that first period is doubled.
Therefore, the client must examine the first character of each line received and, for those beginning with a period, determine either that this is the end of the text or that it should collapse the doubled period to a single one.
Information follows Server: nas.example.org (192.0.2.100)
Uptime: 2 weeks, 3 days, 5 hours, 9 minutes
client.example.org (192.0.2.123) Connection: 9 minutes Highest protocol level supported:
1 Requested protocol level: 1 Protocol level used: 1 .
Response Code Values, Structure, and Meaning The first digit of the response code indicates the message type (i.e., information, success, warning, error, or data):
Request successful 3xx Request successful, data follow 4xx Request accepted, but no operation possible 5xx Request is wrong (syntax error), is not implemented, or leads to an internal error 6xx Request successful, data follow until end mark
The second digit specifies the message category: x0x Connection related stuff x1x Queries, answers, or data x2x Server server communication x3x Authentication, authorization x8x
Non standard extensions x9x Debugging output
The actual response code for a specific command is listed in the description of the commands.
Answers of the type 1xx, 2xx, 4xx, and 5xx can have a text after the numerical code.
3xx answers contain one or more parameters with data; the exact format is explained in the description of the commands.
An answer to an incorrect request may be longer than one line.
Connection Setup NAS typically uses port 991, which is reserved by IANA [IANA PN].
If a connection is set up by the client, the server answers immediately (without a request) with the greeting message, which will start with code 200:   200 Welcome!
If a connection is refused because the client has no permission to access the server, the answer code is 434.
That decision can be made on connection startup based on the client's IP address.
When the server is currently out of service, the answer code is 404.
You have no permission to retrieve data.
After sending a 404 or 434 message, the connection will be closed.
A command consists of a command word, sometimes followed by a parameter.
Parameters are separated from the command word by white space.
Commands used in the NAS protocol are not case sensitive.
A command word or parameter may be uppercase, lowercase, or any mixture of upper  and lowercase.
The length of a command line is not limited.
If the need to limit the length of command lines in real life implementations arises, answer code 513 (line too long) should be returned.
The protocol level described in this document uses command words with a length of exactly four characters each.
The indicator is omitted if the direction of the dialog does not change.
The commands described below are defined using the Augmented Backus  Naur Form (ABNF) defined in [RFC4234].
The definitions for 'ALPHA', 'CRLF', 'DIGIT', 'WSP' and 'VCHAR' are taken from appendix B of [RFC4234] and not repeated here.
The following ABNF definitions constitute the set of NAS commands that can be sent from the client to an NAS server.
; the date and time of the server in UTC ; YYYYMMDDhhmmss response code
; three digit number Newsgroup names and hierarchy names are defined according to the following ABNF definitions.
Since a hierarchy name can be the same as a newsgroup name (e.g., hierarchy bln.announce.fub.
, there is no difference between the two.
This definition of newsgroup name is in reference to "News Article Format and Transmission" [SON1036].
When the document "News Article Format" [USEFOR] is established as an RFC, its definitions should be integrated into a higher protocol level of NAS.
This command prints a short help text on a given command.
If called without parameters, it will display a complete list of commands.
nas.example.org Version 1.0 Supported commands:
DATA data for a newsgroup DATE show time of server in UTC GETP get package GETA get data from an authoritative server HELP
HIER data for a hierarchy INFO show info on current connection LIST list newsgroups or hierarchies LSTR recursive list newsgroups or hierarchies QUIT close the connection VERS show or set current protocol level Contact address nas@example.org .
HELP LIST   100 LIST LIST list newsgroups or hierarchies Syntax: LIST hierarchy ...
Get a list of newsgroups and sub hierarchies directly under the parameter hierarchy .
HELP NOOP   410 unknown command "NOOP" .
INFO Description Prints information about the current connection, the server, and the client.
Normal answer; prints some information about client and server 400: Indicates that the server is not giving any information info answer
"400" [answertext] CRLF text CRLF ".
CRLF Examples   INFO   101 Information follows Server: nas.example.org (192.0.2.100)
Uptime: 2 weeks, 3 days, 5 hours, 9 minutes
client.example.org (192.0.2.123) Connection: 9 minutes Highest protocol level supported:
1 Requested protocol level: 1 Protocol level used: 1 End .
DATE Description Prints the current time of the server in UTC (Universal Coordinated Time) in the format YYYYMMDDhhmmss, followed by an optional comment.
The DATE command is only for informational use and to check the server time.
For regular transmission of time over the network, the Network Time Protocol (NTP)
Print the UTC time in specified format; see below 511:
/ "300" [answertext] CRLF utc time [answertext] CRLF "."
511 Time is unknown .
The VERS command is used to determine the protocol level to use between client and server.
The parameter is a protocol level that the client supports and wants to use.
The server will respond with the highest level accepted.
This version number MUST not be higher than that requested by the client.
Client and server MUST only use commands from the level that the server has confirmed.
It is possible, but seldom necessary, to change the protocol level during a session by client request (VERS [protocol level]).
When no option is given, the current protocol level will be printed.
When no protocol level is negotiated, the protocol level 1 will be used.
Commands of a higher level are not allowed without successful negotiation.
The protocol level can be followed by an optional comment.
1 32767 Possible answers 202:
Returns current protocol level 302:
Requested level too high; falling back to lower level 510
202 2 Current protocol level is 2 .
My max protocol level is 10 .
Falling back to level 10 .
VERS BAL   510 1 Syntax error .
QUIT Description Terminates the connection.
Termination of the connection quit answer
To obtain a list of newsgroups and sub hierarchies in the requested hierarchies, the command LIST is used.
The status of the hierarchies is also given.
It can be obtained this way, too.
The data consist of a newsgroup  or hierarchy name/status indicator pair per line.
Name and status indicator must be separated by at least one white space.
The status indicator is a single word (see Section 6.4).
The interpretation is not case sensitive.
Normal response with all requested data list answer
"610" [answertext] CRLF  (listdata CRLF) ".
The list status is the status of a newsgroup or hierarchy according to Section 6.4.
Incomplete comp Complete de Incomplete rec Complete sub Obsolete .
LIST de   610 data follow de.admin Complete de.alt
Incomplete de.comm Complete de.comp Complete
Complete de.markt Complete de.newusers Complete de.org
Complete de.answers Moderated de.test Unmoderated .
LIST foo   610 data follow foo
510 Syntax error missing parameter hierarchy .
Something is wrong Permission denied .
To obtain a recursive list of newsgroups and sub hierarchies in the named hierarchy, the command LSTR is used.
The status of the hierarchies is also given.
It can be obtained this way, too.
Normal answer with all requested data lstr answer
"610" [answertext] CRLF  (listdata CRLF) ".
The list status is the status of a newsgroup or hierarchy according to Section 6.4.
610 recursive mode de.admin Complete de.admin.infos
Unmoderated de.admin.net abuse Complete de.admin.net
The command HIER lists all information available about the hierarchy.
With the data header "Name", a new data block for each hierarchy is started.
The header "Name" gives the name of the hierarchy.
The data headers are described in Section 6.3.4.
The default is to transmit all available information.
It can be limited to a list of desired headers
("Name" and "Status" are always given).
A set of comma separated headers, as an option to the HIER command, will return the requested header fields.
Regular answer with all requested data hier answer
[("Ctl PGP Key:" CRLF PGP answer /
"Mod PGP Key:" CRLF PGP answer)]
The exact format is described in Section 6.7.
http://www.kirchwitz.de.example/~amk/dni/netiquette FAQ: http://www.kirchwitz.de.example/~amk/dai/einrichtung Ctl Send Adr:
%s@moderators.dana.de.example Language: DE Charset: ISO 8859 1
Global Comp Length: 14 Date Create: 19920106000000 .
510 Syntax error missing parameter hierarchy .
The DATA command corresponds to the HIER command, as explained in 6.3.3.8, but it is used for information about a newsgroup.
A summary of codes can be found in Section 6.3.4.
[WSP selection] CRLF Possible answers 401:
/ "401" [answertext] CRLF text CRLF ".
[("Ctl PGP Key:" CRLF PGP answer /
"Mod PGP Key:" CRLF PGP answer)]
612 data follow Name: de.comp.os.unix.linux.moderated Status:
Moderated Serial: 20020823120312 Description: Linux und  Distributionen.
http://www.dana.de.example/mod/chartas/de.html Netiquette: http://www.kirchwitz.de.example/~amk/dni/netiquette Netiquette: ftp://ftp.fu
Mod Sub Adr: dcoulm moderators@linux config.de.example Mod Group Info:
DATA de   401 Permission denied .
510 Syntax error missing parameter newsgroup .
GETP Description GETP is used for server server communication.
It requests the data for the hierarchy specified by the parameter "name".
The format of the data is the same as for the commands "HIER" and "LIST".
The "timestamp" attached to a package consists of the date and time that the package was created.
The timestamp for a package is transmitted together with the package data by the server and marks a specific revision for the package data.
When a client requests a package with GETP, it transmits the timestamp attached to the package in its database so that the server can check whether the data on the client side is still valid or if it is too old.
If the data on the client side is still valid, a 213 answer is sent, so the client knows that its data is OK.
If the timestamp is "0", the server is forced to transmit the data.
Timestamps set by the server must be increasing and may not be more than 12 hours in the future.
The data for a successful request are signed and sent in ASCII armor according to [RFC2440], so a client can check the signature or ignore it.
The actual data will be surrounded by the armor start and end sections, according to Section 6.2 of [RFC2440].
" [answertext] CRLF text CRLF "."
" [answertext] CRLF text CRLF "."
" [answertext] CRLF text CRLF ".
" [answertext] CRLF text CRLF ".
CRLF pgp ascii armor start and the pgp ascii armor end are built according to [RFC2440], Section 6.2.,
[("Ctl PGP Key:" CRLF PGP answer /
"Mod PGP Key:" CRLF PGP answer)]
Examples   GETP 0 0 0 humanities
615 data follow  BEGIN PGP SIGNED MESSAGE
20020821094529 Description: Branches of learning that investigate human constructs and concerns as opposed to natural processes.
Primer on How to Work With the Usenet Community Rules:
http://www.uvv.org.example/docs/howto.txt Ctl Send Adr: group admin@isc.org.example Ctl Newsgroup:
Global Comp Length: 14 Date Create:
Moderated Serial: 20020821094533 Description: Repository for periodic USENET articles.
Mod Adm Adr: news answers
You are up to date .
510 Syntax error Missing parameters .
GETP guest test 0 de   430
You have no permission to retrieve the data .
The GETA command is used for server server communication; it is used to collect authoritative data and will request packages that the server is authoritative for.
A package is the authoritative data either for a newsgroup or a hierarchy.
Each package has a "timestamp" attached to mark the revision of the package.
This timestamp is set by the server to the date of the last modification of the package data in UTC format.
A timestamp of "0" indicates that the package MUST be retrieved.
If the retrieving client has a recent package (i.e., no modification on the authoritative server), the server sends only a 215 response.
The format of the data is the same as that for the commands "HIER" and "LIST".
: The client already has the current data 430: Permission denied 411:
No hierarchy with that name 510:
" [answertext] CRLF text CRLF "."
/ "430" [answertext] CRLF text CRLF ".
/ "411" [answertext] CRLF text CRLF ".
"Mod PGP Key:" CRLF PGP answer)]
613 data follow  BEGIN PGP SIGNED MESSAGE
20020821094529 Description: Branches of learning that investigate human constructs and concerns as opposed to natural processes.
Primer on How to Work With the Usenet Community Rules:
http://www.uvv.org.example/docs/howto.txt Ctl Send Adr: group admin@isc.org.example Ctl Newsgroup:
Global Comp Length: 14 Date Create:
Moderated Serial: 20020821094533 Description: Repository for periodic USENET articles.
Mod Adm Adr: news answers
Unknown Commands and Syntax Errors
If a command is recognized as unknown, a 519 return code (unknown command) is given.
If an error occurs after the command string (e.g., a missing parameter), a 510 return code (Syntax error: Missing parameter) is given.
The following paragraphs describe key words and key terms that support retrieval and storing of information.
Every header has a unique English name.
The content of a header is inheritable within a hierarchy, as long as the header is marked as inheritable.
The content is the default value for all downstream newsgroups and sub hierarchies.
For example, in the hierarchy "de", the language header has the value "DE" (German); therefore, this value is "DE" for all newsgroups in this hierarchy, except for those that explicitly define a language code of their own.
Hierarchies and newsgroups must have at least values for the headers
Unknown hierarchies or groups get the status "Unknown".
The header used in the NAS protocol are not case sensitive.
A header may be uppercase, lowercase, or any mixture of upper  and lowercase.
It is recommended that the first letter of the header and the first letter after a dash be uppercase and that all other characters be lowercase.
no Repeatable:  no Description: Name of a hierarchy.
Start of a new data block.
no Description: Name of a newsgroup Comment:
Start of a new data block.
no Repeatable:  no Description: Status of a hierarchy.
For a detailed description, see Section 6.4.
no Description: Status of a newsgroup.
For a detailed description, see Section 6.4.
no Repeatable:  no Description: Timestamp for hierarchy data.
For a detailed description, see Section 6.4.
no Repeatable:  no Description: Timestamp for newsgroup data.
For a detailed description, see Section 6.4.
no Repeatable:  no Description: Name of the newsgroup that will take the followup postings of a moderated group.
The value can be used as default value for
the "Followup To:" header on postings to a moderated group.
This value is only useful on groups that are moderated (Status Group Moderated) and have a dedicated discussion group.
bln.announce.fub.zedat.d (for the moderated group bln.announce.fub.zedat)
no Repeatable:  no Description: Short description of a hierarchy.
: Short description of a newsgroup.
This information is often presented to the news reader upon selection of the newsgroup, and it should be a brief but meaningful description of the topic.
Technisches zur Newssoftware (for de.admin.news.software)
Description: URL that points to the charter of a hierarchy.
Charter: ftp://ftp.fu berlin.de.example/doc/news/bln/bln (for the hierarchy bln)
yes Description: URL that points to the charter of a newsgroup.
This information should be presented to the news reader upon selection of the newsgroup.
Description: URL that points to the netiquette of a hierarchy.
Since the netiquettes are often valid for a complete hierarchy, this is inheritable.
: URL for the FAQ of a newsgroup.
Description: URL pointing to a document that describes the rules for creating, deleting, or renaming newsgroups in this hierarchy.
Email address of the sender of control messages.
Ctl Send Adr: group admin@isc.org.example Control newsgroup Header:
yes Description: Name of the newsgroup that will get the postings for checkgroups, rmgroup, and newsgroup control messages.
Moderator wildcard for this hierarchy.
This information can be used for the configuration of the news software, for example, to configure the moderators file in INN.
Mod Wildcard: %s@moderators.dana.de.example (for the hierarchy de) Submission address
Email address for submissions to the newsgroup.
If there is no "Mod Sub Adr" for a moderated newsgroup, "Mod Wildcard" of the hierarchy is used.
This is useful only for moderated groups (Status Group Moderated).
Mod Sub Adr: news answers@mit.edu.example (for the newsgroup news.answers)
Email address of the moderator of the newsgroup.
If there is no code "Mod Adm Adr" for a moderated newsgroup, "Mod Wildcard" of the hierarchy is used.
This is useful only for moderated groups (Status Group Moderated).
: news answers request@mit.edu.example (for the newsgroup news.answers)
yes Description: URL that points to a document where the moderator presents information about the newsgroup and the submission of articles.
Mod Group Info: http://www.example.org/cola submit.html (for comp.os.linux.announce)
yes Description: The language that will normally be used in postings.
The notation is according to the "Content Language" field of [RFC2616].
The languages not preferred are enclosed in parentheses.
yes Description: The language that will normally be used in postings.
The notation is according to the "Content Language" field of [RFC2616].
The languages not preferred are enclosed in parentheses.
TR Language: DE Language: (EN) (for the newsgroup bln.kultur.tuerkisch)
Charset that will normally be used in postings in this hierarchy.
The complete set of charset names is defined by [RFC2277] and the IANA Character Set registry [IANA CS].
The charsets that are not the preferred charsets are enclosed in parentheses.
Charset that will normally be used in postings in this group.
The complete set of charset names is defined by [RFC2277] and the IANA Character Set registry [IANA CS].
The charsets that are not the preferred charsets are enclosed in parentheses.
Charset: ISO 8859 1 (for the newsgroup bln.kultur.tuerkisch)
Encoding for this hierarchy according to MIME [RFC2045].
This is the media type used in this hierarchy; a list of registered media types can be found at [IANA MT].
The encodings not preferred are enclosed in parentheses.
Encoding for this newsgroup according to MIME [RFC2045].
This is the media type used in this newsgroup; a list of registered media types can be found at [IANA MT].
The encodings not preferred are enclosed in parentheses.
Description: Default newsgroup type in this hierarchy.
This header has no concrete meaning for a hierarchy but is used for the inheritance to newsgroups in the hierarchy.
Specification of the types can be found in Section 6.5.
yes Description: Type of newsgroup.
Specification of the types can be found in Section 6.5.
Newsgroup Type: Announce (for de.admin.news.announce) Type of hierarchy
yes Description: Type of hierarchy.
Specification of the types can be found in Section 6.6.
Hier Type: Regional (for hierarchy bln) Regional or Organizational Area
Description: Description of the geographical region or organization of this hierarchy.
This code is useful when the hierarchy type (Hier Type) is "Regional" or "Organization".
Grossraum Berlin (for the hierarchy bln) Name length of group names
Maximum length of a newsgroup name.
Name Length: 72 (for the hierarchy bln)
Component length of group names
Maximum length of a single component in the newsgroup name.
Comp Length: 14 (for the hierarchy de) Article
Maximum length of an article in bytes.
This header has no concrete meaning for a hierarchy but is used for the inheritance to newsgroups in the hierarchy.
Maximum length of an article in bytes.
Article Length: 50000 Date of creation
Creation date of a hierarchy; can even be in the future.
The format is the same as in the DATE command.
: Creation date of a newsgroup; can even be in the future.
The format is the same as in the DATE command.
yes Repeatable:  no Description: Date of removal of a hierarchy; can even be in the future.
The format is the same as in the DATE command.
no Repeatable:  no Description: Date of removal of a newsgroup; can even be in the future.
The format is the same as in the DATE command.
yes Description: Name of the hierarchy that replaced a removed hierarchy if status is "Hierarchy Obsolete" or will replace a hierarchy if the date of removal is in the future.
yes Description: Name of the newsgroup or newsgroups that will replace a removed newsgroup if status is  "Group Removed" or will replace the newsgroup if the date of removal is in the future.
yes Repeatable:  no Description: Pointer to an organization or person responsible for this hierarchy.
SHOULD be a URL or an email address.
(for the hierarchy de) E: This is for tracking the maintainer of a hierarchy.
Description: PGP key (with additional information: key owner, key id, etc.) of the sender of control messages in this hierarchy.
F 5B B0 52 88
BF 55 19 4F  66 7D C2 AE 16
25 V 2.6.3ia K BEGIN PGP PUBLIC KEY BLOCK
END PGP PUBLIC KEY BLOCK
Public PGP key (with additional information:
key owner, key id, etc.)
The status indicator uniquely determines the status of a hierarchy or newsgroup.
The indicator is case insensitive.
Not completely known hierarchy (
No information available; unknown hierarchy Unmoderated  newsgroup
Posting not allowed Moderated    newsgroup  Moderated group; articles must be sent to the moderator
Newsgroup Types A Newsgroup Type is a comprehensive overview about some characteristics of a newsgroup, being a test group, a binary group, or some other kind.
The Newsgroup Type is case insensitive.
Automatic postings (like the former comp.mail.maps)
To describe a hierarchy, the following Hierarchy Types are used.
These Types are used to mark some properties of a news hierarchy.
Non commercial   Only for personal use; commercial use is prohibited (e.g., the hierarchy de)
PGP Keys PGP keys for Ctrl PGP Key and Mod PGP Key are transmitted in the following structure: PGP answer
"V" SP Version CRLF "U" SP User ID CRLF "B" SP Bits CRLF "
K" SP Keyblock CRLF Version
Public key block in ASCII armor format [RFC2440]
A hyphen following the code indicates that the block is continued on the next line.
In the last message row, there MUST be white space after the code; this is also true for a single line code.
F 5B B0 52 88
BF 55 19 4F  66 7D C2 AE 16
25 V 2.6.3ia K BEGIN PGP PUBLIC KEY BLOCK
END PGP PUBLIC KEY BLOCK
Specification of the NAS Protocol
(UDP) UDP is intended for reading programs (news readers); it is not in the scope of this document.
The use of UDP for NAS will be described in a separate paper.
The IANA has registered the application/nasdata media type as defined by the following information:
If not present, the protocol level defaults to 1.
Encoding scheme: NAS data is plain text; no special encodings are needed.
Security considerations: see below 9.
Security Considerations Security issues are only addressed in respect to server server communication in this protocol level.
Username and password combinations in the GETA and GETP commands can be used to make sure that connections are only accepted from authorized clients.
PGP keys according to [RFC2440] are used to sign NAS data in server server communication in order to validate that the data is authentic and has not been tampered with.
Every server does have the possibility (in both server server and server client communication) to deny some commands or the whole connection according to the client's IP number.
No mechanisms are defined in the current protocol level to allow a client to validate that it is talking to a legitimate server or that the data it receives is authentic.
A stronger authentication scheme will be provided in a higher protocol level.
100    Command overview, Information, command description (HELP)
101    Information about connection, client and server (INFO)
200    Greeting message (Connection Setup) 201    Termination of the connection (QUIT)
current protocol level (VERS) 213    Valid data at the client side (GETP)
The client already has the current data (GETA) 300    Time in UTC (DATE)
302    Answer to a successful request (VERS)
400    Indicates that the server is not giving any information (INFO)
401    Permission denied (LIST, LSTR, HIER, DATA) 402    Requested level too high; falling back to lower level (VERS) 404    Server currently out of service (Connection Setup)
410    Indicates that the server is not giving any information (HELP) 411
No hierarchy with that name (GETP, GETA)
430    Permission denied (GETP, GETA)
434    Client has no permission to talk to server (Connection Setup) 510    Syntax error 511    Internal error (TIME)
Regular answer with all requested data (LIST, LSTR)
Regular answer with all requested data (HIER)
Regular answer with all requested data (DATA) 613    hierarchy data (GETP)
Data Headers for DATA and HIER Commands (Overview)
(Start of a new data block)
