- title: __initial_text__
  contents:
  - '              DHCPv4 Lease Query by Relay Agent Remote ID

    '
- title: Abstract
  contents:
  - "Abstract\n   Some relay agents extract lease information from the DHCP messages\n\
    \   exchanged between the client and DHCP server.  This lease information\n  \
    \ is used by relay agents for various purposes like antispoofing and\n   prevention\
    \ of flooding.  RFC 4388 defines a mechanism for relay\n   agents to retrieve\
    \ the lease information from the DHCP server when\n   this information is lost.\
    \  The existing lease query mechanism is\n   data-driven, which means that a relay\
    \ agent can initiate the lease\n   query only when it starts receiving data to\
    \ and from the clients.  In\n   certain scenarios, this model is not scalable.\
    \  This document first\n   looks at issues in the existing mechanism and then\
    \ proposes a new\n   query type, query by Remote ID, to address these issues.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6148.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Motivation ......................................................6\n   4.\
    \ Protocol Details ................................................7\n      4.1.\
    \ Sending the DHCPLEASEQUERY Message .........................7\n      4.2. Responding\
    \ to the DHCPLEASEQUERY Message ...................8\n      4.3. Building a DHCPLEASEACTIVE\
    \ or DHCPLEASEUNKNOWN Message .....8\n      4.4. Determining the IP Address to\
    \ Be Used in Response ..........9\n      4.5. Sending a DHCPLEASEACTIVE or DHCPLEASEUNKNOWN\
    \ Message ......9\n      4.6. Receiving a DHCPLEASEACTIVE or DHCPLEASEUNKNOWN\
    \ Message ....9\n      4.7. Receiving No Response to the DHCPLEASEQUERY Message\
    \ .......10\n      4.8. Lease-Binding Data Storage Requirements ...................10\n\
    \      4.9. Using the DHCPLEASEQUERY Message with Multiple\n           DHCP Servers\
    \ ..............................................10\n   5. RFC 4388 Considerations\
    \ ........................................11\n   6. Security Considerations ........................................11\n\
    \   7. Acknowledgments ................................................11\n  \
    \ 8. References .....................................................12\n    \
    \  8.1. Normative References ......................................12\n      8.2.\
    \ Informative References ....................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   DHCP relay agents snoop DHCP messages and append a Relay\
    \ Agent\n   Information option before relaying them to the configured DHCP\n \
    \  server.  In this process, some relay agents also glean the lease\n   information\
    \ sent by the server and maintain this locally.  This\n   information is used\
    \ to prevent spoofing attempts from clients and\n   also sometimes to install\
    \ routing information.  When a relay agent\n   reboots, this information is lost.\
    \  RFC 4388 [RFC4388] has defined a\n   mechanism to retrieve this lease information\
    \ from the DHCP server.\n   The existing query types defined by RFC 4388 [RFC4388]\
    \ are data-\n   driven.  When a client sends data upstream, the relay agent can\
    \ query\n   the server about the related lease information, based on the source\n\
    \   MAC/IP address.  These mechanisms do not scale well when there are\n   thousands\
    \ of clients connected to the relay agent.  In the data-\n   driven model, lease\
    \ query does not provide the full and consolidated\n   active lease information\
    \ associated with a given connection/circuit,\n   which will result in inefficient\
    \ anti-spoofing.  The relay agent also\n   has to contend with considerable resources\
    \ for negative caching,\n   especially under spoofing attacks.\n   We need a mechanism\
    \ for a relay agent to retrieve the consolidated\n   lease information for a given\
    \ connection/circuit before upstream\n   traffic is sent by the clients.\n   \
    \           +--------+\n              |  DHCP  |     +--------------+\n      \
    \        | Server |-...-|    DSLAM     |\n              |        |     |  Relay\
    \ Agent |\n              +--------+     +--------------+\n                   \
    \             |        |\n                            +------+   +------+\n  \
    \                          |Modem1|   |Modem2|\n                            +------+\
    \   +------+\n                               |        |    |\n               \
    \             +-----+  +-----+ +-----+\n                            |Node1|  |Node2|\
    \ |Node3|\n                            +-----+  +-----+ +-----+\n            \
    \                     Figure 1\n   For example, when a DSLAM (Digital Subscriber\
    \ Line Access\n   Multiplexer) acting as a relay agent is rebooted, it should\
    \ query the\n   server for the lease information for all the connections/circuits.\n\
    \   Also, as shown in the above figure, there could be multiple clients\n   on\
    \ one DSL circuit.  The relay agent should get the lease information\n   of all\
    \ the clients connected to a DSL circuit.  This is possible by\n   introducing\
    \ a new query type based on the Remote ID sub-option of the\n   Relay Agent Information\
    \ option.  This document talks about the\n   motivation for the new query type\
    \ and the method to perform it.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n   This document uses the following terms:\n   o  Access Concentrator\n\
    \      An access concentrator is a router or switch at the broadband\n      access\
    \ provider's edge of a public broadband access network.  This\n      document\
    \ assumes that the access concentrator includes the DHCP\n      relay agent functionality.\n\
    \   o  DHCP client\n      A DHCP client is an Internet node using DHCP to obtain\n\
    \      configuration parameters such as a network address.\n   o  DHCP relay agent\n\
    \      A DHCP relay agent is a third-party agent that transfers Bootstrap\n  \
    \    Protocol (BOOTP) and DHCP messages between clients and servers\n      residing\
    \ on different subnets, per RFC 951 [RFC951] and RFC 1542\n      [RFC1542].\n\
    \   o  DHCP server\n      A DHCP server is an Internet node that returns configuration\n\
    \      parameters to DHCP clients.\n   o  Fast path\n      Fast path refers to\
    \ data transfer that happens through a network\n      processor or an Application\
    \ Specific Integrated Circuit (ASIC)\n      programmed to forward the data at\
    \ very high speeds.\n   o  Gleaning\n      Gleaning is the extraction of location\
    \ information from DHCP\n      messages as the messages are forwarded by the DHCP\
    \ relay agent\n      function.\n   o  Location information\n      Location information\
    \ is information needed by the access\n      concentrator to forward traffic to\
    \ a broadband-accessible node.\n      This information includes knowledge of the\
    \ node's hardware\n      address, the port or virtual circuit that leads to the\
    \ node,\n      and/or the hardware address of the intervening subscriber modem.\n\
    \   o  MAC address\n      In the context of a DHCP packet, a MAC address consists\
    \ of the\n      following fields: hardware type (\"htype\"), hardware length\n\
    \      (\"hlen\"), and client hardware address (\"chaddr\").\n   o  Slow path\n\
    \      Slow path refers to data transfer that happens through the control\n  \
    \    plane.  This has very limited buffers to store data, and the\n      speeds\
    \ are very low compared to the fast path data transfer.\n   o  Upstream\n    \
    \  Upstream is the direction from the broadband subscriber towards\n      the\
    \ access concentrator.\n"
- title: 3.  Motivation
  contents:
  - "3.  Motivation\n   Consider an access concentrator (e.g., DSLAM) working also\
    \ as a DHCP\n   relay agent.  A \"fast path\" and a \"slow path\" generally exist\
    \ in most\n   networking boxes.  Fast path processing is done in a network\n \
    \  processor or an ASIC.  Slow path processing is done in a normal\n   processor.\
    \  As much as possible, regular data forwarding should be\n   done in the fast\
    \ path.  Slow path processing should be reduced, as it\n   may become a bottleneck.\n\
    \   For an access concentrator having multiple access ports, multiple IP\n   addresses\
    \ may be assigned to a single port using DHCP, and the number\n   of clients on\
    \ a port may be unknown.  The access concentrator may\n   also not know the network\
    \ portions of the IP addresses that are\n   assigned to its DHCP clients.\n  \
    \ The access concentrator gleans IP address or other information from\n   DHCP\
    \ negotiations for antispoofing and other purposes.  The\n   antispoofing itself\
    \ is done in the fast path.  The access\n   concentrator keeps track of only one\
    \ list of IP addresses: the list\n   of IP addresses that are assigned by the\
    \ DHCP servers; upstream\n   traffic from all other IP addresses is dropped. \
    \ If a client starts\n   its data transfer after its DHCP negotiations have been\
    \ gleaned by\n   the access concentrator, no legitimate packets will be dropped\n\
    \   because of antispoofing.  In other words, antispoofing is effective\n   (no\
    \ legitimate packets are dropped, and all spoofed packets are\n   dropped) and\
    \ efficient (antispoofing is done in the fast path).  The\n   intention is to\
    \ achieve similar effective and efficient antispoofing\n   in the lease query\
    \ scenario also, when an access concentrator loses\n   its gleaned information\
    \ (for example, because of a reboot).\n   After a deep analysis, we found that\
    \ the three existing query types\n   supported by RFC 4388 [RFC4388] do not provide\
    \ effective and\n   efficient antispoofing for the above scenario, and a new mechanism\
    \ is\n   required.\n   The existing query types necessitate a data-driven approach:\
    \ the\n   lease queries can only be performed when the access concentrator\n \
    \  receives data.  This results in\n   o  increased outage time for clients\n\
    \   o  excessive negative caching, consuming a lot of resources under a\n    \
    \  spoofing attack\n   o  antispoofing being done in the slow path instead of\
    \ the fast path\n"
- title: 4.  Protocol Details
  contents:
  - "4.  Protocol Details\n   This section talks about the protocol details for query\
    \ by Remote ID.\n   Most of the message handling is similar to RFC 4388 [RFC4388],\
    \ and\n   this section highlights only the differences.  Readers are advised to\n\
    \   go through RFC 4388 [RFC4388] before going through this section for\n   complete\
    \ understanding of the protocol.\n   When used in this document, the unqualified\
    \ term \"DHCPLEASEQUERY\"\n   indicates a lease query by Remote ID, unless otherwise\
    \ specified.\n   RFC 3046 [RFC3046] defines two sub-options for the Relay Agent\n\
    \   Information option.  Sub-option 1 corresponds to the Circuit ID that\n   identifies\
    \ the local circuit of the access concentrator.  This\n   sub-option is unique\
    \ to the relay agent.  Sub-option 2 corresponds to\n   the Remote ID that identifies\
    \ the remote node connected to the access\n   concentrator.  The Remote ID is\
    \ globally unique in the network and is\n   configured per circuit/connection\
    \ in the relay agent.\n   This document defines a new query type based on the\
    \ Remote ID\n   sub-option.  Suppose that the access concentrator (e.g., DSLAM)\
    \ lost\n   the lease information when it was rebooted.  When the access\n   concentrator\
    \ comes up, it initiates (for each connection/circuit) a\n   DHCP lease query\
    \ by Remote ID as defined in this section.  For this\n   query, the requester\
    \ supplies an option 82 that includes only a\n   Remote ID sub-option in the DHCPLEASEQUERY\
    \ message.  The Remote ID is\n   normally pre-provisioned in the access concentrator\
    \ per circuit/\n   connection and hence will remain available to the access concentrator\n\
    \   after reboot.\n   The DHCP server MUST reply with a DHCPLEASEACTIVE message\
    \ if there is\n   an active lease corresponding to the Remote ID that is present\
    \ in the\n   DHCPLEASEQUERY message.  Otherwise, the server MUST reply with a\n\
    \   DHCPLEASEUNKNOWN message.  Servers that do not implement DHCP lease\n   query\
    \ based on Remote ID SHOULD simply not respond.\n"
- title: 4.1.  Sending the DHCPLEASEQUERY Message
  contents:
  - "4.1.  Sending the DHCPLEASEQUERY Message\n   The lease query defined in this\
    \ document will mostly be used by\n   access concentrators, but it may also be\
    \ used by other authorized\n   elements in the network.  The DHCPLEASEQUERY message\
    \ uses the DHCP\n   message format as described in RFC 2131 [RFC2131], and uses\
    \ message\n   number 10 in the DHCP Message Type option (option 53).  The\n  \
    \ DHCPLEASEQUERY message has the following pertinent message contents:\n   o \
    \ There MUST be a Relay Agent Information option (option 82) with\n      only\
    \ a Remote ID sub-option (sub-option 2) in the DHCPLEASEQUERY\n      message.\n\
    \   o  The Parameter Request List option [RFC2132] MUST be populated by\n    \
    \  the access concentrator with the Associated-IP option code.  The\n      giaddr\
    \ field and other option codes listed in the Parameter\n      Request List option\
    \ are set as explained in Section 6.2 of\n      RFC 4388 [RFC4388].\n   o  The\
    \ ciaddr field MUST be set to zero.\n   o  The values of htype, hlen, and chaddr\
    \ MUST be set to zero.\n   o  The Client Identifier option (option 61) MUST NOT\
    \ appear in the\n      packet.\n   The DHCPLEASEQUERY message SHOULD be sent to\
    \ a DHCP server that is\n   known to possess authoritative information concerning\
    \ the Remote ID.\n   The DHCPLEASEQUERY message MAY be sent to more than one DHCP\
    \ server,\n   and in the absence of information concerning which DHCP server might\n\
    \   possess authoritative information concerning the Remote ID, it SHOULD\n  \
    \ be sent to all DHCP servers configured for the associated relay agent\n   (if\
    \ any are known).\n"
- title: 4.2.  Responding to the DHCPLEASEQUERY Message
  contents:
  - "4.2.  Responding to the DHCPLEASEQUERY Message\n   There are two possible responses\
    \ to a DHCPLEASEQUERY message:\n   o  DHCPLEASEUNKNOWN\n      The DHCPLEASEUNKNOWN\
    \ message indicates that the client associated\n      with the Remote ID sub-option\
    \ of the DHCPLEASEQUERY message is not\n      allocated any lease or it is not\
    \ managed by the server.\n   o  DHCPLEASEACTIVE\n      The DHCPLEASEACTIVE message\
    \ indicates that the server not only\n      knows the client specified in the\
    \ DHCPLEASEQUERY message, but also\n      knows that there is an active lease\
    \ for that client.\n"
- title: 4.3.  Building a DHCPLEASEACTIVE or DHCPLEASEUNKNOWN Message
  contents:
  - "4.3.  Building a DHCPLEASEACTIVE or DHCPLEASEUNKNOWN Message\n   A DHCPLEASEACTIVE\
    \ message is built by populating information\n   pertaining to the client associated\
    \ with the IP address specified in\n   the ciaddr field.\n   In the case where\
    \ more than one IP address has been involved in a\n   DHCP message exchange with\
    \ the client specified by the Remote ID,\n   then the list of all those IP addresses\
    \ MUST be returned in the\n   Associated-IP option, whether or not that option\
    \ was requested as\n   part of the Parameter Request List option.  This is intended\
    \ for\n   maintaining backwards compatibility with RFC 4388 [RFC4388].\n   All\
    \ other options specified in the Parameter Request List [RFC2132]\n   are processed\
    \ as mentioned in Section 6.4.2 of RFC 4388 [RFC4388].\n   In a DHCPLEASEUNKNOWN\
    \ response message, the DHCP server MUST echo the\n   option 82 received in the\
    \ DHCPLEASEQUERY message.  No other option is\n   included in the message.\n"
- title: 4.4.  Determining the IP Address to Be Used in Response
  contents:
  - "4.4.  Determining the IP Address to Be Used in Response\n   The IP address placed\
    \ in the ciaddr field of a DHCPLEASEACTIVE\n   message MUST be the IP address\
    \ with the latest client-last-\n   transaction-time associated with the client\
    \ described by the Remote\n   ID specified in the DHCPLEASEQUERY message.\n  \
    \ If there is only a single IP address that fulfills this criteria,\n   then it\
    \ MUST be placed in the ciaddr field of the DHCPLEASEACTIVE\n   message.\n   In\
    \ the case where more than one IP address has been accessed by the\n   client\
    \ specified by the Remote ID, then the DHCP server MUST return\n   the IP address\
    \ returned to the client in the most recent transaction\n   with the client, unless\
    \ the DHCP server has been configured by the\n   server administrator to use some\
    \ other preference mechanism.\n"
- title: 4.5.  Sending a DHCPLEASEACTIVE or DHCPLEASEUNKNOWN Message
  contents:
  - "4.5.  Sending a DHCPLEASEACTIVE or DHCPLEASEUNKNOWN Message\n   The server unicasts\
    \ the DHCPLEASEACTIVE or DHCPLEASEUNKNOWN message\n   to the address specified\
    \ in the giaddr field of the DHCPLEASEQUERY\n   message.\n"
- title: 4.6.  Receiving a DHCPLEASEACTIVE or DHCPLEASEUNKNOWN Message
  contents:
  - "4.6.  Receiving a DHCPLEASEACTIVE or DHCPLEASEUNKNOWN Message\n   When a DHCPLEASEACTIVE\
    \ message is received in response to the\n   DHCPLEASEQUERY message, it means\
    \ that there is currently an active\n   lease associated with the Remote ID in\
    \ the DHCP server.  The access\n   concentrator SHOULD use the information in\
    \ the htype, hlen, and\n   chaddr fields of the DHCPLEASEACTIVE message as well\
    \ as the Relay\n   Agent Information option included in the packet to refresh\
    \ its\n   location information for this IP address.  An access concentrator is\n\
    \   likely to query by IP address for all the IP addresses specified in\n   the\
    \ Associated-IP option in the response, if any, at this point in\n   time.\n \
    \  When a DHCPLEASEUNKNOWN message is received by an access concentrator\n   that\
    \ had sent out a DHCPLEASEQUERY message, it means that the DHCP\n   server does\
    \ not have definitive information concerning the DHCP\n   client specified in\
    \ the Remote ID sub-option of the DHCPLEASEQUERY\n   message.  The access concentrator\
    \ MAY store this information for\n   future use.  However, another DHCPLEASEQUERY\
    \ message to the same DHCP\n   server SHOULD NOT be attempted with the same Remote\
    \ ID sub-option.\n   For lease query by Remote ID, the impact of negative caching\
    \ is\n   greatly reduced, as the response leads to \"definitive\" information\
    \ on\n   all the nodes connected behind the connection.  Note that in the case\n\
    \   of the data-driven approach [RFC4388], a node spoofing several IP\n   addresses\
    \ can lead to negative caching of greater magnitude.  Another\n   important change\
    \ that this document brings is the removal of periodic\n   lease queries generated\
    \ from negative caching caused by\n   DHCPLEASEUNKNOWN messages.  Since the information\
    \ obtained through\n   query by Remote ID is complete, there is no need to attempt\
    \ lease\n   query again for the same connection.\n"
- title: 4.7.  Receiving No Response to the DHCPLEASEQUERY Message
  contents:
  - "4.7.  Receiving No Response to the DHCPLEASEQUERY Message\n   The condition of\
    \ an access concentrator receiving no response to a\n   DHCPLEASEQUERY message\
    \ is handled in the same manner as suggested in\n   RFC 4388 [RFC4388].\n"
- title: 4.8.  Lease-Binding Data Storage Requirements
  contents:
  - "4.8.  Lease-Binding Data Storage Requirements\n   Implementation Note:\n   To\
    \ generate replies for a lease query by Remote ID efficiently, a\n   DHCP server\
    \ should index the lease-binding data structures using\n   Remote ID.\n"
- title: 4.9.  Using the DHCPLEASEQUERY Message with Multiple DHCP Servers
  contents:
  - "4.9.  Using the DHCPLEASEQUERY Message with Multiple DHCP Servers\n   This scenario\
    \ is handled in the same way it is done in RFC 4388\n   [RFC4388].\n"
- title: 5.  RFC 4388 Considerations
  contents:
  - "5.  RFC 4388 Considerations\n   This document is compatible with RFC 4388-based\
    \ [RFC4388]\n   implementations, which means that a client that supports this\n\
    \   extension can work with a server not supporting this document,\n   provided\
    \ it uses RFC 4388-defined query types.  Also, a server\n   supporting this document\
    \ can work with a client not supporting this\n   query type.  However, there are\
    \ some changes that this document\n   proposes with respect to RFC 4388 [RFC4388].\
    \  Implementers extending\n   RFC 4388 [RFC4388] implementations to support this\
    \ document should\n   take note of the following points:\n   o  There may be cases\
    \ where a query by IP address/MAC address/Client\n      Identifier has an option\
    \ 82 containing a Remote ID.  In that case,\n      the query will still be recognized\
    \ as a query by IP address/MAC\n      address/Client Identifier as specified by\
    \ RFC 4388 [RFC4388].\n   o  Section 6.4 of RFC 4388 [RFC4388] suggests that a\
    \ DHCPLEASEUNKNOWN\n      message MUST NOT have any other option present.  But\
    \ for a query\n      by Remote ID, option 82 MUST be present in the reply.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document inherits the security concerns\
    \ present in the original\n   lease query protocol specification (RFC 4388 [RFC4388]).\n\
    \   This specification introduces one additional issue, beyond those\n   described\
    \ in RFC 4388 [RFC4388].  A query by Remote ID will result in\n   the server replying\
    \ with consolidated lease-binding information.\n   Such a query, if done from\
    \ an unauthorized source, may lead to a leak\n   of lease-binding information.\
    \  It is critical to deploy\n   authentication techniques mentioned in RFC 3118\
    \ [RFC3118] to prevent\n   such unauthorized lease queries.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   Copious amounts of text in this document are derived\
    \ from RFC 4388\n   [RFC4388].  Kim Kinnear, Damien Neil, Stephen Jacob, Ted Lemon,\
    \ Ralph\n   Droms, and Alfred Hoenes provided valuable feedback on this document.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC4388]  Woundy, R. and K. Kinnear, \"Dynamic Host Configuration\n\
    \              Protocol (DHCP) Leasequery\", RFC 4388, February 2006.\n   [RFC2131]\
    \  Droms, R., \"Dynamic Host Configuration Protocol\",\n              RFC 2131,\
    \ March 1997.\n   [RFC2132]  Alexander, S. and R. Droms, \"DHCP Options and BOOTP\
    \ Vendor\n              Extensions\", RFC 2132, March 1997.\n   [RFC3046]  Patrick,\
    \ M., \"DHCP Relay Agent Information Option\",\n              RFC 3046, January\
    \ 2001.\n   [RFC3118]  Droms, R., Ed. and W. Arbaugh, Ed., \"Authentication for\n\
    \              DHCP Messages\", RFC 3118, June 2001.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC951]   Croft, B. and J. Gilmore, \"Bootstrap\
    \ Protocol (BOOTP)\",\n              RFC 951, September 1985.\n   [RFC1542]  Wimer,\
    \ W., \"Clarifications and Extensions for the\n              Bootstrap Protocol\"\
    , RFC 1542, October 1993.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Pavan Kurapati\n   Juniper Networks\n   Embassy Prime\
    \ Buildings, C.V. Raman Nagar\n   Bangalore  560 093\n   India\n   EMail: kurapati@juniper.net\n\
    \   URI:   http://www.juniper.net/\n   D.T.V Ramakrishna Rao\n   Infosys Technologies\
    \ Ltd.\n   44 Electronics City, Hosur Road\n   Bangalore  560 100\n   India\n\
    \   EMail: ramakrishnadtv@infosys.com\n   URI:   http://www.infosys.com/\n   Bharat\
    \ Joshi\n   Infosys Technologies Ltd.\n   44 Electronics City, Hosur Road\n  \
    \ Bangalore  560 100\n   India\n   EMail: bharat_joshi@infosys.com\n   URI:  \
    \ http://www.infosys.com/\n"
