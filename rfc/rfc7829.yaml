- title: __initial_text__
  contents:
  - "              SCTP-PF: A Quick Failover Algorithm for the\n                 \
    \ Stream Control Transmission Protocol\n"
- title: Abstract
  contents:
  - "Abstract\n   The Stream Control Transmission Protocol (SCTP) supports multihoming.\n\
    \   However, when the failover operation specified in RFC 4960 is\n   followed,\
    \ there can be significant delay and performance degradation\n   in the data transfer\
    \ path failover.  This document specifies a quick\n   failover algorithm and introduces\
    \ the SCTP Potentially Failed\n   (SCTP-PF) destination state in SCTP Path Management.\n\
    \   This document also specifies a dormant state operation of SCTP that\n   is\
    \ required to be followed by an SCTP-PF implementation, but it may\n   equally\
    \ well be applied by a standard SCTP implementation, as\n   described in RFC 4960.\n\
    \   Additionally, this document introduces an alternative switchback\n   operation\
    \ mode called \"Primary Path Switchover\" that will be\n   beneficial in certain\
    \ situations.  This mode of operation applies to\n   both a standard SCTP implementation\
    \ and an SCTP-PF implementation.\n   The procedures defined in the document require\
    \ only minimal\n   modifications to the specification in RFC 4960.  The procedures\
    \ are\n   sender-side only and do not impact the SCTP receiver.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7829.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Conventions and Terminology . . . . . . . . . . . . .\
    \ . . . .   5\n   3.  SCTP with Potentially Failed (SCTP-PF) Destination State\
    \  . .   5\n     3.1.  Overview  . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   5\n     3.2.  Specification of the SCTP-PF Procedures . . . . . . . . .\
    \   6\n   4.  Dormant State Operation . . . . . . . . . . . . . . . . . . .  10\n\
    \     4.1.  SCTP Dormant State Procedure  . . . . . . . . . . . . . .  11\n  \
    \ 5.  Primary Path Switchover . . . . . . . . . . . . . . . . . . .  11\n   6.\
    \  Suggested SCTP Protocol Parameter Values  . . . . . . . . . .  13\n   7.  Socket\
    \ API Considerations . . . . . . . . . . . . . . . . . .  13\n     7.1.  Support\
    \ for the Potentially Failed Path State . . . . . .  14\n     7.2.  Peer Address\
    \ Thresholds (SCTP_PEER_ADDR_THLDS) Socket\n           Option  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  15\n     7.3.  Exposing the Potentially Failed\
    \ Path State\n           (SCTP_EXPOSE_POTENTIALLY_FAILED_STATE) Socket Option\
    \  . .  16\n   8.  Security Considerations . . . . . . . . . . . . . . . . . .\
    \ .  16\n   9.  MIB Considerations  . . . . . . . . . . . . . . . . . . . . .\
    \  17\n   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  17\n\
    \     10.1.  Normative References . . . . . . . . . . . . . . . . . .  17\n  \
    \   10.2.  Informative References . . . . . . . . . . . . . . . . .  18\n   Appendix\
    \ A.  Discussion of Alternative Approaches . . . . . . . .  20\n     A.1.  Reduce\
    \ PMR  . . . . . . . . . . . . . . . . . . . . . . .  20\n     A.2.  Adjust RTO-Related\
    \ Parameters . . . . . . . . . . . . . .  21\n   Appendix B.  Discussion of the\
    \ Path-Bouncing Effect . . . . . . .  21\n   Appendix C.  SCTP-PF for SCTP Single-Homed\
    \ Operation  . . . . . .  22\n   Acknowledgments . . . . . . . . . . . . . . .\
    \ . . . . . . . . . .  22\n   Authors' Addresses  . . . . . . . . . . . . . .\
    \ . . . . . . . . .  23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Stream Control Transmission Protocol (SCTP) specified\
    \ in\n   [RFC4960] supports multihoming at the transport layer.  SCTP's\n   multihoming\
    \ features include failure detection and failover\n   procedures to provide network\
    \ interface redundancy and improved end-\n   to-end fault tolerance.  In SCTP's\
    \ current failure detection\n   procedure, the sender must experience Path.Max.Retrans\
    \ (PMR) number\n   of consecutive failed timer-based retransmissions on a destination\n\
    \   address before detecting a path failure.  Until detecting the path\n   failure,\
    \ the sender continues to transmit data on the failed path.\n   The prolonged\
    \ time in which SCTP as described in [RFC4960] continues\n   to use a failed path\
    \ severely degrades the performance of the\n   protocol.  To address this problem,\
    \ this document specifies a quick\n   failover algorithm called \"SCTP-PF\" based\
    \ on the introduction of a\n   new Potentially Failed (PF) path state in SCTP\
    \ path management.  The\n   performance deficiencies of the failover operation\
    \ described in RFC\n   4960, and the improvements obtainable from the introduction\
    \ of a PF\n   state in SCTP, were proposed and documented in [NATARAJAN09] for\n\
    \   Concurrent Multipath Transfer SCTP [IYENGAR06].\n   While SCTP-PF can accelerate\
    \ the failover process and improve\n   performance, the risk that an SCTP endpoint\
    \ might enter the dormant\n   state where all destination addresses are inactive\
    \ can be increased.\n   [RFC4960] leaves the protocol operation during dormant\
    \ state to\n   implementations and encourages avoiding entering the state as much\
    \ as\n   possible by careful tuning of the PMR and Association.Max.Retrans\n \
    \  (AMR) parameters.  We specify a dormant state operation for SCTP-PF,\n   which\
    \ makes SCTP-PF provide the same disruption tolerance as\n   [RFC4960] despite\
    \ the fact that the dormant state may be entered more\n   quickly.  The dormant\
    \ state operation may equally well be applied by\n   an implementation of [RFC4960]\
    \ and will serve here to provide added\n   fault tolerance for situations where\
    \ the tuning of the PMR and AMR\n   parameters fail to provide adequate prevention\
    \ of the entering of the\n   dormant state.\n   The operation after the recovery\
    \ of a failed path also impacts the\n   performance of the protocol.  With the\
    \ procedures specified in\n   [RFC4960], SCTP will (after a failover from the\
    \ primary path) switch\n   back to use the primary path for data transfer as soon\
    \ as this path\n   becomes available again.  From a performance perspective, such\
    \ a\n   forced switchback of the data transmission path can be suboptimal as\n\
    \   the Congestion Window (CWND) towards the original primary destination\n  \
    \ address has to be rebuilt once data transfer resumes, [CARO02].  As\n   an optional\
    \ alternative to the switchback operation of [RFC4960],\n   this document specifies\
    \ an alternative Primary Path Switchover\n   procedure that avoids such forced\
    \ switchbacks of the data transfer\n   path.  The Primary Path Switchover operation\
    \ was originally proposed\n   in [CARO02].\n   While SCTP-PF is primarily motivated\
    \ by a desire to improve the\n   multihomed operation, the feature also applies\
    \ to SCTP single-homed\n   operation.  Here the algorithm serves to provide increased\
    \ failure\n   detection on idle associations, whereas the failover or switchback\n\
    \   aspects of the algorithm will not be activated.  This is discussed in\n  \
    \ more detail in Appendix C.\n   A brief description of the motivation for the\
    \ introduction of the PF\n   state, including a discussion of alternative approaches\
    \ to mitigate\n   the deficiencies of the failover operation in [RFC4960], are\
    \ given in\n   the appendices.  Discussion of path-bouncing effects that might\
    \ be\n   caused by frequent switchovers are also provided there.\n"
- title: 2.  Conventions and Terminology
  contents:
  - "2.  Conventions and Terminology\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  SCTP with Potentially Failed (SCTP-PF) Destination State
  contents:
  - '3.  SCTP with Potentially Failed (SCTP-PF) Destination State

    '
- title: 3.1.  Overview
  contents:
  - "3.1.  Overview\n   To minimize the performance impact during failover, the sender\
    \ should\n   avoid transmitting data to a failed destination address as early\
    \ as\n   possible.  In the SCTP path management scheme described in [RFC4960],\n\
    \   the sender stops transmitting data to a destination address only\n   after\
    \ the destination address is marked inactive.  This process takes\n   a significant\
    \ amount of time as it requires the error counter of the\n   destination address\
    \ to exceed the PMR threshold.  The issue cannot\n   simply be mitigated by lowering\
    \ the PMR threshold because this may\n   result in spurious failure detection\
    \ and unnecessary prevention of\n   the usage of a preferred primary path.  Also,\
    \ due to the coupled\n   tuning of the PMR and the AMR parameter values in [RFC4960],\
    \ lowering\n   the PMR threshold may result in lowering the AMR threshold, which\n\
    \   would result in a decrease of the fault tolerance of SCTP.\n   The solution\
    \ provided in this document is to extend the SCTP path\n   management scheme of\
    \ [RFC4960] by the addition of the PF state as an\n   intermediate state in between\
    \ the active and inactive state of a\n   destination address in the path management\
    \ scheme of [RFC4960], and\n   let the failover of data transfer away from a destination\
    \ address be\n   driven by the entering of the PF state instead of by the entering\
    \ of\n   the inactive state.  Thereby, SCTP may perform quick failover without\n\
    \   negatively impacting the overall fault tolerance of SCTP as described\n  \
    \ in [RFC4960].  At the same time, HEARTBEAT probing based on\n   Retransmission\
    \ Timeout (RTO) is initiated towards a destination\n   address once it enters\
    \ PF state.  Thereby, SCTP may quickly ascertain\n   whether network connectivity\
    \ towards the destination address is\n   broken or whether the failover was spurious.\
    \  In the case where the\n   failover was spurious, data transfer may quickly\
    \ resume towards the\n   original destination address.\n   The new failure detection\
    \ algorithm assumes that loss detected by a\n   timeout implies either severe\
    \ congestion or network connectivity\n   failure.  It recommends that, by default,\
    \ a destination address be\n   classified as PF at the occurrence of the first\
    \ timeout.\n"
- title: 3.2.  Specification of the SCTP-PF Procedures
  contents:
  - "3.2.  Specification of the SCTP-PF Procedures\n   The SCTP-PF operation is specified\
    \ as follows:\n   1.   The sender maintains a new tunable SCTP Protocol Parameter\n\
    \        called PotentiallyFailed.Max.Retrans (PFMR).  The PFMR defines\n    \
    \    the new intermediate PF threshold on the destination address\n        error\
    \ counter.  When this threshold is exceeded, the destination\n        address\
    \ is classified as PF.  The RECOMMENDED value of PFMR is\n        0.  If PFMR\
    \ is set to be greater than or equal to PMR, the\n        resulting PF threshold\
    \ will be so high that the destination\n        address will reach the inactive\
    \ state before it can be\n        classified as PF.\n   2.   The error counter\
    \ of an active destination address is\n        incremented or cleared as specified\
    \ in [RFC4960].  This means\n        that the error counter of the destination\
    \ address in active\n        state will be incremented each time the Timer T3\
    \ retransmission\n        (T3-rtx) timer expires, or each time a HEARTBEAT chunk\
    \ is sent\n        when idle and not acknowledged within an RTO.  When the value\
    \ in\n        the destination address error counter exceeds PFMR, the endpoint\n\
    \        MUST mark the destination address as in the PF state.\n   3.   An SCTP-PF\
    \ sender SHOULD NOT send data to destination addresses\n        in PF state when\
    \ alternative destination addresses in active\n        state are available.  Specifically,\
    \ this means that:\n        i.     When there is outbound data to send and the\
    \ destination\n               address presently used for data transmission is\
    \ in PF\n               state, the sender SHOULD choose a destination address\
    \ in\n               active state, if one exists, and use this destination\n \
    \              address for data transmission.\n        ii.    As specified in\
    \ Section 6.4.1 of [RFC4960], when the\n               sender retransmits data\
    \ that has timed out, they should\n               attempt to pick a new destination\
    \ address for data\n               retransmission.  In this case, the sender SHOULD\
    \ choose\n               an alternate destination transport address in active\n\
    \               state, if one exists.\n        iii.   When there is outbound data\
    \ to send and the SCTP user\n               explicitly requests to send data to\
    \ a destination address\n               in PF state, the sender SHOULD send the\
    \ data to an\n               alternate destination address in active state if\
    \ one\n               exists.\n        When choosing among multiple destination\
    \ addresses in active\n        state, an SCTP sender will follow the guiding principles\
    \ of\n        Section 6.4.1 of [RFC4960] by choosing the most divergent\n    \
    \    source-destination pairs compared with, for (the aforementioned\n       \
    \ points i and ii):\n        i.    the destination address in PF state that it\
    \ performs a\n              failover from, and\n        ii.   the destination\
    \ address towards which the data timed out.\n        Rules for picking the most\
    \ divergent source-destination pair are\n        an implementation decision and\
    \ are not specified within this\n        document.\n        In all cases, the\
    \ sender MUST NOT change the state of the chosen\n        destination address,\
    \ whether this state be active or PF, and it\n        MUST NOT clear the error\
    \ counter of the destination address as a\n        result of choosing the destination\
    \ address for data\n        transmission.\n   4.   When the destination addresses\
    \ are all in PF state, or some are\n        in PF state and some in inactive state,\
    \ the sender MUST choose\n        one destination address in PF state and SHOULD\
    \ transmit or\n        retransmit data to this destination address using the following\n\
    \        rules:\n        i.    The sender SHOULD choose the destination in PF\
    \ state with\n              the lowest error count (fewest consecutive timeouts)\
    \ for\n              data transmission and transmit or retransmit data to this\n\
    \              destination.\n        ii.   When there are multiple destination\
    \ addresses in PF state\n              with same error count, the sender should\
    \ let the choice\n              among the multiple destination addresses in PF\
    \ state with\n              equal error count be based on the principles of choosing\n\
    \              the most divergent source-destination pairs when executing\n  \
    \            (potentially consecutive) retransmission outlined in\n          \
    \    Section 6.4.1 of [RFC4960].  Rules for picking the most\n              divergent\
    \ source-destination pairs are an implementation\n              decision and are\
    \ not specified within this document.\n        The sender MUST NOT change the\
    \ state and the error counter of\n        any destination addresses as the result\
    \ of the selection.\n   5.   The HB.Interval of the Path Heartbeat function of\
    \ [RFC4960] MUST\n        be ignored for destination addresses in PF state.  Instead,\n\
    \        HEARTBEAT chunks are sent to destination addresses in PF state\n    \
    \    once per RTO.  HEARTBEAT chunks SHOULD be sent to destination\n        addresses\
    \ in PF state, but the sending of HEARTBEATs MUST honor\n        whether or not\
    \ the Path Heartbeat function (Section 8.3 of\n        [RFC4960]) is enabled for\
    \ the destination address.  That is, if\n        the Path Heartbeat function is\
    \ disabled for the destination\n        address in question, HEARTBEATs MUST NOT\
    \ be sent.  Note that\n        when the Path Heartbeat function is disabled, it\
    \ may take longer\n        to transition a destination address in PF state back\
    \ to active\n        state.\n   6.   HEARTBEATs are sent when a destination address\
    \ reaches the PF\n        state.  When a HEARTBEAT chunk is not acknowledged within\
    \ the\n        RTO, the sender increments the error counter and exponentially\n\
    \        backs off the RTO value.  If the error counter is less than PMR,\n  \
    \      the sender transmits another packet containing the HEARTBEAT\n        chunk\
    \ immediately after timeout expiration on the previous\n        HEARTBEAT.  When\
    \ data is being transmitted to a destination\n        address in the PF state,\
    \ the transmission of a HEARTBEAT chunk\n        MAY be omitted in the case where\
    \ the receipt of a Selective\n        Acknowledgment (SACK) of the data or a T3-rtx\
    \ timer expiration\n        on the data can provide equivalent information, such\
    \ as the case\n        where the data chunk has been transmitted to a single\n\
    \        destination address only.  Likewise, the timeout of a HEARTBEAT\n   \
    \     chunk MAY be ignored if data is outstanding towards the\n        destination\
    \ address.\n   7.   When the sender receives a HEARTBEAT ACK from a HEARTBEAT\
    \ sent\n        to a destination address in PF state, the sender SHOULD clear\n\
    \        the error counter of the destination address and transition the\n   \
    \     destination address back to active state.  However, there may be\n     \
    \   a situation where HEARTBEAT chunks can go through while DATA\n        chunks\
    \ cannot.  Hence, in a situation where a HEARTBEAT ACK\n        arrives while\
    \ there is data outstanding towards the destination\n        address to which\
    \ the HEARTBEAT was sent, then an implementation\n        MAY choose to not have\
    \ the HEARTBEAT ACK reset the error\n        counter, but have the error counter\
    \ reset await the fate of the\n        outstanding data transmission.  This situation\
    \ can happen when\n        data is sent to a destination address in PF state.\
    \  When the\n        sender resumes data transmission on a destination address\
    \ after\n        a transition of the destination address from PF to active state,\n\
    \        it MUST do this following the prescriptions of Section 7.2 of\n     \
    \   [RFC4960].\n   8.   Additional PMR - PFMR consecutive timeouts on a destination\n\
    \        address in PF state confirm the path failure, upon which the\n      \
    \  destination address transitions to the inactive state.  As\n        described\
    \ in [RFC4960], the sender SHOULD (i) notify the Upper\n        Layer Protocol\
    \ (ULP) about this state transition, and (ii)\n        transmit HEARTBEAT chunks\
    \ to the inactive destination address at\n        a lower HB.Interval frequency\
    \ as described in Section 8.3 of\n        [RFC4960] (when the Path Heartbeat function\
    \ is enabled for the\n        destination address).\n   9.   Acknowledgments for\
    \ chunks that have been transmitted to\n        multiple destinations (i.e., a\
    \ chunk that has been retransmitted\n        to a different destination address\
    \ than the destination address\n        to which the chunk was first transmitted)\
    \ SHOULD NOT clear the\n        error count for an inactive destination address\
    \ and SHOULD NOT\n        move a destination address in PF state back to active\
    \ state,\n        since a sender cannot disambiguate whether the ACK was for the\n\
    \        original transmission or the retransmission(s).  An SCTP sender\n   \
    \     MAY clear the error counter and move a destination address back\n      \
    \  to active state by information other than acknowledgments, when\n        it\
    \ can uniquely determine which destination, among multiple\n        destination\
    \ addresses, the chunk reached.  This document makes\n        no reference to\
    \ what such information could consist of, nor how\n        such information could\
    \ be obtained.\n   10.  Acknowledgments for data chunks that have been transmitted\
    \ to\n        one destination address only MUST clear the error counter for\n\
    \        the destination address and MUST transition a destination\n        address\
    \ in PF state back to active state.  This situation can\n        happen when new\
    \ data is sent to a destination address in the PF\n        state.  It can also\
    \ happen in situations where the destination\n        address is in the PF state\
    \ due to the occurrence of a spurious\n        T3-rtx timer and acknowledgments\
    \ start to arrive for data sent\n        prior to occurrence of the spurious T3-rtx\
    \ and data has not yet\n        been retransmitted towards other destinations.\
    \  This document\n        does not specify special handling for detection of,\
    \ or reaction\n        to, spurious T3-rtx timeouts, e.g., for special operation\
    \ vis-\n        a-vis the congestion control handling or data retransmission\n\
    \        operation towards a destination address that undergoes a\n        transition\
    \ from active to PF to active state due to a spurious\n        T3-rtx timeout.\
    \  But it is noted that this is an area that would\n        benefit from additional\
    \ attention, experimentation, and\n        specification for single-homed SCTP\
    \ as well as for multihomed\n        SCTP protocol operation.\n   11.  When all\
    \ destination addresses are in inactive state, and SCTP\n        protocol operation\
    \ thus is said to be in dormant state, the\n        prescriptions given in Section\
    \ 4 shall be followed.\n   12.  The SCTP stack SHOULD expose the PF state of its\
    \ destination\n        addresses to the ULP as well as provide the means to notify\
    \ the\n        ULP of state transitions of its destination addresses from\n  \
    \      active to PF, and vice versa.  However, it is recommended that\n      \
    \  an SCTP stack implementing SCTP-PF also allows for the ULP to be\n        kept\
    \ ignorant of the PF state of its destinations and the\n        associated state\
    \ transitions, thus allowing for retention of the\n        simpler state transition\
    \ model of [RFC4960] in the ULP.  For\n        this reason, it is recommended\
    \ that an SCTP stack implementing\n        SCTP-PF also provide the ULP with the\
    \ means to suppress exposure\n        of the PF state and the associated state\
    \ transitions.\n"
- title: 4.  Dormant State Operation
  contents:
  - "4.  Dormant State Operation\n   In a situation with complete disruption of the\
    \ communication in\n   between the SCTP endpoints, the aggressive HEARTBEAT transmissions\
    \ of\n   SCTP-PF on destination addresses in PF state may make the association\n\
    \   enter dormant state faster than a standard SCTP implementation of\n   [RFC4960]\
    \ given the same setting of PMR and AMR.  For example, an\n   SCTP association\
    \ with two destination addresses would typically reach\n   dormant state in half\
    \ the time of an SCTP implementation of [RFC4960]\n   in such situations.  This\
    \ is because an SCTP PF sender will send\n   HEARTBEATs and data retransmissions\
    \ in parallel with RTO intervals\n   when there are multiple destinations addresses\
    \ in PF state.  This\n   argument presumes that RTO << HB.Interval of [RFC4960].\
    \  With the\n   design goal that SCTP-PF shall provide the same level of disruption\n\
    \   tolerance as a standard SCTP implementation with the same PMR and AMR\n  \
    \ setting, we prescribe that an SCTP-PF implementation SHOULD operate\n   as described\
    \ in Section 4.1 during dormant state.\n   An SCTP-PF implementation MAY choose\
    \ a different dormant state\n   operation than the one described in Section 4.1\
    \ provided that the\n   solution chosen does not decrease the fault tolerance\
    \ of the SCTP-PF\n   operation.\n   The prescription below for SCTP-PF dormant\
    \ state handling MUST NOT be\n   coupled to the value of the PFMR, but solely\
    \ to the activation of\n   SCTP-PF logic in an SCTP implementation.\n   It is\
    \ noted that the below dormant state operation can also provide\n   enhanced disruption\
    \ tolerance to a standard SCTP implementation that\n   doesn't support SCTP-PF.\
    \  Thus, it can be sensible for a standard\n   SCTP implementation to follow this\
    \ mode of operation.  For a standard\n   SCTP implementation, the continuation\
    \ of data transmission during\n   dormant state makes the fault tolerance of SCTP\
    \ be more robust\n   towards situations where some, or all, alternative paths\
    \ of an SCTP\n   association approach, or reach, inactive state before the primary\n\
    \   path used for data transmission observes trouble.\n"
- title: 4.1.  SCTP Dormant State Procedure
  contents:
  - "4.1.  SCTP Dormant State Procedure\n   1.  When the destination addresses are\
    \ all in inactive state and data\n       is available for transfer, the sender\
    \ MUST choose one destination\n       and transmit data to this destination address.\n\
    \   2.  The sender MUST NOT change the state of the chosen destination\n     \
    \  address (it remains in inactive state) and MUST NOT clear the\n       error\
    \ counter of the destination address as a result of choosing\n       the destination\
    \ address for data transmission.\n   3.  The sender SHOULD choose the destination\
    \ in inactive state with\n       the lowest error count (fewest consecutive timeouts)\
    \ for data\n       transmission.  When there are multiple destinations with the\
    \ same\n       error count in inactive state, the sender SHOULD attempt to pick\n\
    \       the most divergent source -- destination pair from the last\n       source\
    \ -- destination pair where failure was observed.  Rules for\n       picking the\
    \ most divergent source-destination pair are an\n       implementation decision\
    \ and are not specified within this\n       document.  To support differentiation\
    \ of inactive destination\n       addresses based on their error count, SCTP will\
    \ need to allow for\n       incrementing of the destination address error counters\
    \ up to some\n       reasonable limit above PMR+1, thus changing the prescriptions\
    \ of\n       Section 8.3 of [RFC4960] in this respect.  The exact limit to\n \
    \      apply is not specified in this document, but it is considered\n       reasonable\
    \ enough to require that the limit be an order of\n       magnitude higher than\
    \ the PMR value.  A sender MAY choose to\n       deploy other strategies than\
    \ the strategy defined here.  The\n       strategy to prioritize the last active\
    \ destination address, i.e.,\n       the destination address with the fewest error\
    \ counts is optimal\n       when some paths are permanently inactive, but suboptimal\
    \ when\n       path instability is transient.\n"
- title: 5.  Primary Path Switchover
  contents:
  - "5.  Primary Path Switchover\n   The objective of the Primary Path Switchover\
    \ operation is to allow\n   the SCTP sender to continue data transmission on a\
    \ new working path\n   even when the old primary destination address becomes active\
    \ again.\n   This is achieved by having SCTP perform a switchover of the primary\n\
    \   path to the new working path if the error counter of the primary path\n  \
    \ exceeds a certain threshold.  This mode of operation can be applied\n   not\
    \ only to SCTP-PF implementations, but also to implementations of\n   [RFC4960].\n\
    \   The Primary Path Switchover operation requires only sender-side\n   changes.\
    \  The details are:\n   1.  The sender maintains a new tunable parameter, called\n\
    \       Primary.Switchover.Max.Retrans (PSMR).  For SCTP-PF\n       implementations,\
    \ the PSMR MUST be set greater than or equal to\n       the PFMR value.  For implementations\
    \ of [RFC4960], the PSMR MUST\n       be set greater than or equal to the PMR\
    \ value.  Implementations\n       MUST reject any other values of PSMR.\n   2.\
    \  When the path error counter on a set primary path exceeds PSMR,\n       the\
    \ SCTP implementation MUST autonomously select and set a new\n       primary path.\n\
    \   3.  The primary path selected by the SCTP implementation MUST be the\n   \
    \    path that, at the given time, would be chosen for data transfer.\n      \
    \ A previously failed primary path can be used as a data transfer\n       path\
    \ as per normal path selection when the present data transfer\n       path fails.\n\
    \   4.  For SCTP-PF, the recommended value of PSMR is PFMR when Primary\n    \
    \   Path Switchover operation mode is used.  This means that no\n       forced\
    \ switchback to a previously failed primary path is\n       performed.  An SCTP-PF\
    \ implementation of Primary Path Switchover\n       MUST support the setting of\
    \ PSMR = PFMR.  An SCTP-PF\n       implementation of Primary Path Switchover MAY\
    \ support setting of\n       PSMR > PFMR.\n   5.  For standard SCTP, the recommended\
    \ value of PSMR is PMR when\n       Primary Path Switchover is used.  This means\
    \ that no forced\n       switchback to a previously failed primary path is performed.\
    \  A\n       standard SCTP implementation of Primary Path Switchover MUST\n  \
    \     support the setting of PSMR = PMR.  A standard SCTP\n       implementation\
    \ of Primary Path Switchover MAY support larger\n       settings of PSMR > PMR.\n\
    \   6.  It MUST be possible to disable the Primary Path Switchover\n       operation\
    \ and obtain the standard switchback operation of\n       [RFC4960].\n   The manner\
    \ of switchover operation that is most optimal in a given\n   scenario depends\
    \ on the relative quality of a set primary path versus\n   the quality of alternative\
    \ paths available as well as on the extent\n   to which it is desired for the\
    \ mode of operation to enforce traffic\n   distribution over a number of network\
    \ paths.  That is, load\n   distribution of traffic from multiple SCTP associations\
    \ may be\n   enforced by distribution of the set primary paths with the switchback\n\
    \   operation of [RFC4960].  However, as switchback behavior of [RFC4960]\n  \
    \ is suboptimal in certain situations, especially in scenarios where a\n   number\
    \ of equally good paths are available, an SCTP implementation\n   MAY support\
    \ also, as alternative behavior, the Primary Path\n   Switchover mode of operation\
    \ and MAY enable it based on applications'\n   requests.\n   For an SCTP implementation\
    \ that implements the Primary Path\n   Switchover operation, this specification\
    \ RECOMMENDS that the standard\n   switchback operation of [RFC4960] be retained\
    \ as the default\n   operation.\n"
- title: 6.  Suggested SCTP Protocol Parameter Values
  contents:
  - "6.  Suggested SCTP Protocol Parameter Values\n   This document does not alter\
    \ the value recommendation for the SCTP\n   Protocol Parameters defined in [RFC4960].\n\
    \   The following protocol parameter is RECOMMENDED:\n      PotentiallyFailed.Max.Retrans\
    \ (PFMR) - 0\n"
- title: 7.  Socket API Considerations
  contents:
  - "7.  Socket API Considerations\n   This section describes how the socket API defined\
    \ in [RFC6458] is\n   extended to provide a way for the application to control\
    \ and observe\n   the SCTP-PF behavior as well as the Primary Path Switchover\
    \ function.\n   Please note that this section is informational only.\n   A socket\
    \ API implementation based on [RFC6458] is, by means of the\n   existing SCTP_PEER_ADDR_CHANGE\
    \ event, extended to provide the event\n   notification when a peer address enters\
    \ or leaves the PF state as\n   well as the socket API implementation is extended\
    \ to expose the PF\n   state of a peer address in the existing SCTP_GET_PEER_ADDR_INFO\n\
    \   structure.\n   Furthermore, two new read/write socket options for the level\n\
    \   IPPROTO_SCTP and the name SCTP_PEER_ADDR_THLDS and\n   SCTP_EXPOSE_POTENTIALLY_FAILED_STATE\
    \ are defined as described below.\n   The first socket option is used to control\
    \ the values of the PFMR and\n   PSMR parameters described in Sections 3 and 5.\
    \  The second one\n   controls the exposition of the PF path state.\n   Support\
    \ for the SCTP_PEER_ADDR_THLDS and\n   SCTP_EXPOSE_POTENTIALLY_FAILED_STATE socket\
    \ options also needs to be\n   added to the function sctp_opt_info().\n"
- title: 7.1.  Support for the Potentially Failed Path State
  contents:
  - "7.1.  Support for the Potentially Failed Path State\n   As defined in [RFC6458],\
    \ the SCTP_PEER_ADDR_CHANGE event is provided\n   if the status of a peer address\
    \ changes.  In addition to the state\n   changes described in [RFC6458], this\
    \ event is also provided if a peer\n   address enters or leaves the PF state.\
    \  The notification as defined\n   in [RFC6458] uses the following structure:\n\
    \   struct sctp_paddr_change {\n     uint16_t spc_type;\n     uint16_t spc_flags;\n\
    \     uint32_t spc_length;\n     struct sockaddr_storage spc_aaddr;\n     uint32_t\
    \ spc_state;\n     uint32_t spc_error;\n     sctp_assoc_t spc_assoc_id;\n   }\n\
    \   [RFC6458] defines the constants SCTP_ADDR_AVAILABLE,\n   SCTP_ADDR_UNREACHABLE,\
    \ SCTP_ADDR_REMOVED, SCTP_ADDR_ADDED, and\n   SCTP_ADDR_MADE_PRIM to be provided\
    \ in the spc_state field.  This\n   document defines the new additional constant\n\
    \   SCTP_ADDR_POTENTIALLY_FAILED, which is reported if the affected\n   address\
    \ becomes PF.\n   The SCTP_GET_PEER_ADDR_INFO socket option defined in [RFC6458]\
    \ can be\n   used to query the state of a peer address.  It uses the following\n\
    \   structure:\n   struct sctp_paddrinfo {\n     sctp_assoc_t spinfo_assoc_id;\n\
    \     struct sockaddr_storage spinfo_address;\n     int32_t spinfo_state;\n  \
    \   uint32_t spinfo_cwnd;\n     uint32_t spinfo_srtt;\n     uint32_t spinfo_rto;\n\
    \     uint32_t spinfo_mtu;\n   };\n   [RFC6458] defines the constants SCTP_UNCONFIRMED,\
    \ SCTP_ACTIVE, and\n   SCTP_INACTIVE to be provided in the spinfo_state field.\
    \  This\n   document defines the new additional constant SCTP_POTENTIALLY_FAILED,\n\
    \   which is reported if the peer address is PF.\n"
- title: 7.2.  Peer Address Thresholds (SCTP_PEER_ADDR_THLDS) Socket Option
  contents:
  - "7.2.  Peer Address Thresholds (SCTP_PEER_ADDR_THLDS) Socket Option\n   Applications\
    \ can control the SCTP-PF behavior by getting or setting\n   the number of consecutive\
    \ timeouts before a peer address is\n   considered PF or unreachable.  The same\
    \ socket option is used by\n   applications to set and get the number of timeouts\
    \ before the primary\n   path is changed automatically by the Primary Path Switchover\n\
    \   function.  This socket option uses the level IPPROTO_SCTP and the\n   name\
    \ SCTP_PEER_ADDR_THLDS.\n   The following structure is used to access and modify\
    \ the thresholds:\n   struct sctp_paddrthlds {\n     sctp_assoc_t spt_assoc_id;\n\
    \     struct sockaddr_storage spt_address;\n     uint16_t spt_pathmaxrxt;\n  \
    \   uint16_t spt_pathpfthld;\n     uint16_t spt_pathcpthld;\n   };\n   spt_assoc_id:\
    \  This parameter is ignored for one-to-one style\n      sockets.  For one-to-many\
    \ style sockets, the application may fill\n      in an association identifier\
    \ or SCTP_FUTURE_ASSOC.  It is an error\n      to use SCTP_{CURRENT|ALL}_ASSOC\
    \ in spt_assoc_id.\n   spt_address:  This specifies which peer address is of interest.\
    \  If a\n      wildcard address is provided, this socket option applies to all\n\
    \      current and future peer addresses.\n   spt_pathmaxrxt:  Each peer address\
    \ of interest is considered\n      unreachable, if its path error counter exceeds\
    \ spt_pathmaxrxt.\n   spt_pathpfthld:  Each peer address of interest is considered\
    \ PF, if\n      its path error counter exceeds spt_pathpfthld.\n   spt_pathcpthld:\
    \  Each peer address of interest is not considered the\n      primary remote address\
    \ anymore, if its path error counter exceeds\n      spt_pathcpthld.  Using a value\
    \ of 0xffff disables the selection of\n      a new primary peer address.  If an\
    \ implementation does not support\n      the automatic selection of a new primary\
    \ address, it should\n      indicate an error with errno set to EINVAL if a value\
    \ different\n      from 0xffff is used in spt_pathcpthld.  For SCTP-PF, the setting\n\
    \      of spt_pathcpthld < spt_pathpfthld should be rejected with errno\n    \
    \  set to EINVAL.  For standard SCTP, the setting of spt_pathcpthld <\n      spt_pathmaxrxt\
    \ should be rejected with errno set to EINVAL.  An\n      SCTP-PF implementation\
    \ may support only setting of spt_pathcpthld\n      = spt_pathpfthld and spt_pathcpthld\
    \ = 0xffff and a standard SCTP\n      implementation may support only setting\
    \ of spt_pathcpthld =\n      spt_pathmaxrxt and spt_pathcpthld = 0xffff.  In these\
    \ cases, SCTP\n      shall reject setting of other values with errno set to EINVAL.\n"
- title: 7.3.  Exposing the Potentially Failed Path State
  contents:
  - "7.3.  Exposing the Potentially Failed Path State\n      (SCTP_EXPOSE_POTENTIALLY_FAILED_STATE)\
    \ Socket Option\n   Applications can control the exposure of the PF path state\
    \ in the\n   SCTP_PEER_ADDR_CHANGE event and the SCTP_GET_PEER_ADDR_INFO as\n\
    \   described in Section 7.1.  The default value is implementation\n   specific.\n\
    \   This socket option uses the level IPPROTO_SCTP and the name\n   SCTP_EXPOSE_POTENTIALLY_FAILED_STATE.\n\
    \   The following structure is used to control the exposition of the PF\n   path\
    \ state:\n   struct sctp_assoc_value {\n     sctp_assoc_t assoc_id;\n     uint32_t\
    \ assoc_value;\n   };\n   assoc_id:  This parameter is ignored for one-to-one\
    \ style sockets.\n      For one-to-many style sockets, the application may fill\
    \ in an\n      association identifier or SCTP_FUTURE_ASSOC.  It is an error to\n\
    \      use SCTP_{CURRENT|ALL}_ASSOC in assoc_id.\n   assoc_value:  The PF path\
    \ state is exposed if, and only if, this\n      parameter is non-zero.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Security considerations for the use of SCTP and\
    \ its APIs are\n   discussed in [RFC4960] and [RFC6458].\n   The logic introduced\
    \ by this document does not impact existing SCTP\n   messages on the wire.  Also,\
    \ this document does not introduce any new\n   SCTP messages on the wire that\
    \ require new security considerations.\n   SCTP-PF makes SCTP not only more robust\
    \ during primary path failure/\n   congestion, but also more vulnerable to network\
    \ connectivity/\n   congestion attacks on the primary path.  SCTP-PF makes it\
    \ easier for\n   an attacker to trick SCTP into changing the data transfer path,\
    \ since\n   the duration of time that an attacker needs to negatively influence\n\
    \   the network connectivity is much shorter than used in [RFC4960].\n   However,\
    \ SCTP-PF does not constitute a significant change in the\n   duration of time\
    \ and effort an attacker needs to keep SCTP away from\n   the primary path.  With\
    \ the standard switchback operation in\n   [RFC4960], SCTP resumes data transfer\
    \ on its primary path as soon as\n   the next HEARTBEAT succeeds.\n   On the other\
    \ hand, usage of the Primary Path Switchover mechanism,\n   does change the threat\
    \ analysis.  This is because on-path attackers\n   can force a permanent change\
    \ of the data transfer path by blocking\n   the primary path until the switchover\
    \ of the primary path is\n   triggered by the Primary Path Switchover algorithm.\
    \  This will\n   especially be the case when the Primary Path Switchover is used\n\
    \   together with SCTP-PF with the particular setting of PSMR = PFMR = 0,\n  \
    \ as Primary Path Switchover here happens already at the first RTO\n   timeout\
    \ experienced.  Users of the Primary Path Switchover mechanism\n   should be aware\
    \ of this fact.\n   The event notification of path state transfer from active\
    \ to PF state\n   and vice versa gives attackers an increased possibility to generate\n\
    \   more local events.  However, it is assumed that event notifications\n   are\
    \ rate-limited in the implementation to address this threat.\n"
- title: 9.  MIB Considerations
  contents:
  - "9.  MIB Considerations\n   SCTP-PF introduces new SCTP algorithms for failover\
    \ and switchback\n   with associated new state parameters.  It is recommended\
    \ that the\n   SCTP-MIB defined in [RFC3873] is updated to support the management\
    \ of\n   the SCTP-PF implementation.  This can be done by extending the\n   sctpAssocRemAddrActive\
    \ field of the SCTPAssocRemAddrTable to include\n   information of the PF state\
    \ of the destination address and by adding\n   new fields to the SCTPAssocRemAddrTable\
    \ supporting\n   PotentiallyFailed.Max.Retrans (PFMR) and\n   Primary.Switchover.Max.Retrans\
    \ (PSMR) parameters.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC4960]  Stewart, R., Ed., \"Stream Control Transmission Protocol\",\n \
    \             RFC 4960, DOI 10.17487/RFC4960, September 2007,\n              <http://www.rfc-editor.org/info/rfc4960>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [CARO02]   Caro, A., Iyengar, J., Amer, P.,\
    \ Heinz, G., and R.\n              Stewart, \"A Two-level Threshold Recovery Mechanism\
    \ for\n              SCTP\", Tech report, CIS Dept., University of Delaware,\n\
    \              July 2002.\n   [CARO04]   Caro, A., Amer, P., and R. Stewart, \"\
    End-to-End Failover\n              Thresholds for Transport Layer Multihoming\"\
    , MILCOM 2004,\n              DOI 10.1109/MILCOM.2004.1493253, November 2004.\n\
    \   [CARO05]   Caro, A., \"End-to-End Fault Tolerance using Transport\n      \
    \        Layer Multihoming\", Ph.D. Thesis, University of Delaware,\n        \
    \      DOI 10.1007/BF03219970, January 2005.\n   [FALLON08]\n              Fallon,\
    \ S., Jacob, P., Qiao, Y., Murphy, L., Fallon, E.,\n              and A. Hanley,\
    \ \"SCTP Switchover Performance Issues in WLAN\n              Environments\",\
    \ IEEE CCNC, DOI 10.1109/ccnc08.2007.131,\n              January 2008.\n   [GRINNEMO04]\n\
    \              Grinnemo, K-J. and A. Brunstrom, \"Performance of SCTP-\n     \
    \         controlled failovers in M3UA-based SIGTRAN networks\",\n           \
    \   Advanced Simulation Technologies Conference, April 2004.\n   [IYENGAR06]\n\
    \              Iyengar, J., Amer, P., and R. Stewart, \"Concurrent\n         \
    \     Multipath Transfer using SCTP Multihoming over Independent\n           \
    \   End-to-end Paths\", IEEE/ACM Transactions on Networking,\n              DOI\
    \ 10.1109/TNET.2006.882843, October 2006.\n   [JUNGMAIER02]\n              Jungmaier,\
    \ A., Rathgeb, E., and M. Tuexen, \"On the use of\n              SCTP in failover\
    \ scenarios\", World Multiconference on\n              Systemics, Cybernetics\
    \ and Informatics, July 2002.\n   [NATARAJAN09]\n              Natarajan, P.,\
    \ Ekiz, N., Amer, P., and R. Stewart,\n              \"Concurrent Multipath Transfer\
    \ during Path Failure\",\n              Computer Communications, DOI 10.1016/j.comcom.2009.05.001,\n\
    \              May 2009.\n   [RFC3873]  Pastor, J. and M. Belinchon, \"Stream\
    \ Control Transmission\n              Protocol (SCTP) Management Information Base\
    \ (MIB)\",\n              RFC 3873, DOI 10.17487/RFC3873, September 2004,\n  \
    \            <http://www.rfc-editor.org/info/rfc3873>.\n   [RFC6458]  Stewart,\
    \ R., Tuexen, M., Poon, K., Lei, P., and V.\n              Yasevich, \"Sockets\
    \ API Extensions for the Stream Control\n              Transmission Protocol (SCTP)\"\
    , RFC 6458,\n              DOI 10.17487/RFC6458, December 2011,\n            \
    \  <http://www.rfc-editor.org/info/rfc6458>.\n"
- title: Appendix A.  Discussion of Alternative Approaches
  contents:
  - "Appendix A.  Discussion of Alternative Approaches\n   This section lists alternative\
    \ approaches for the issues described in\n   this document.  Although these approaches\
    \ do not require updating RFC\n   4960, we do not recommend them for the reasons\
    \ described below.\n"
- title: A.1.  Reduce PMR
  contents:
  - "A.1.  Reduce PMR\n   Smaller values for Path.Max.Retrans shorten the failover\
    \ duration and\n   in fact, this is recommended in some research results [JUNGMAIER02],\n\
    \   [GRINNEMO04], and [FALLON08].  However, to significantly reduce the\n   failover\
    \ time, it is required to go down (as with PFMR) to\n   Path.Max.Retrans=0 and,\
    \ with this setting, SCTP switches to another\n   destination address already\
    \ on a single timeout that may result in\n   spurious failover.  Spurious failover\
    \ is a problem in standard SCTP\n   as the transmission of HEARTBEATs on the left\
    \ primary path, unlike in\n   SCTP-PF, is governed by HB.Interval also during\
    \ the failover process.\n   HB.Interval is usually set in the order of seconds\
    \ (recommended value\n   is 30 seconds) and when the primary path becomes inactive,\
    \ the next\n   HEARTBEAT may be transmitted only many seconds later: as recommended,\n\
    \   only 30 seconds later.  Meanwhile, the primary path may have long\n   since\
    \ recovered, if it needed recovery at all (indeed the failover\n   could be truly\
    \ spurious).  In such situations, post failover, an\n   endpoint is forced to\
    \ wait in the order of many seconds before the\n   endpoint can resume transmission\
    \ on the primary path and furthermore,\n   once it returns on the primary path,\
    \ the CWND needs to be rebuilt\n   anew -- a process that the throughput already\
    \ had to suffer from on\n   the alternate path.  Using a smaller value for HB.Interval\
    \ might help\n   this situation, but it would result in a general waste of bandwidth\n\
    \   as such more frequent HEARTBEATING would take place also when there\n   are\
    \ no observed troubles.  The bandwidth overhead may be diminished\n   by having\
    \ the ULP use a smaller HB.Interval only on the path that, at\n   any given time,\
    \ is set to be the primary path; however, this adds\n   complication in the ULP.\n\
    \   In addition, smaller Path.Max.Retrans values also affect the\n   Association.Max.Retrans\
    \ value.  When the SCTP association's error\n   count exceeds Association.Max.Retrans\
    \ threshold, the SCTP sender\n   considers the peer endpoint unreachable and terminates\
    \ the\n   association.  Section 8.2 in [RFC4960] recommends that the\n   Association.Max.Retrans\
    \ value should not be larger than the summation\n   of the Path.Max.Retrans of\
    \ each of the destination addresses.\n   Otherwise, the SCTP sender considers\
    \ its peer reachable even when all\n   destinations are INACTIVE.  To avoid this\
    \ dormant state operation,\n   standard SCTP implementation SHOULD reduce Association.Max.Retrans\n\
    \   accordingly whenever it reduces Path.Max.Retrans.  However, smaller\n   Association.Max.Retrans\
    \ value decreases the fault tolerance of SCTP\n   as it increases the chances\
    \ of association termination during minor\n   congestion events.\n"
- title: A.2.  Adjust RTO-Related Parameters
  contents:
  - "A.2.  Adjust RTO-Related Parameters\n   As several research results indicate,\
    \ we can also shorten the\n   duration of the failover process by adjusting the\
    \ RTO-related\n   parameters [JUNGMAIER02] and [FALLON08].  During the failover\n\
    \   process, RTO keeps being doubled.  However, if we can choose a\n   smaller\
    \ value for RTO.max, we can stop the exponential growth of RTO\n   at some point.\
    \  Also, choosing smaller values for RTO.initial or\n   RTO.min can contribute\
    \ to keeping the RTO value small.\n   Similar to reducing Path.Max.Retrans, the\
    \ advantage of this approach\n   is that it requires no modification to the current\
    \ specification,\n   although it needs to ignore several recommendations described\
    \ in\n   Section 15 of [RFC4960].  However, this approach requires having\n  \
    \ enough knowledge about the network characteristics between endpoints.\n   Otherwise,\
    \ it can introduce adverse side effects such as spurious\n   timeouts.\n   The\
    \ significant issue with this approach, however, is that even if\n   the RTO.max\
    \ is lowered to an optimal low value, as long as the\n   Path.Max.Retrans is kept\
    \ at the recommended value from [RFC4960], the\n   reduction of the RTO.max doesn't\
    \ reduce the failover time\n   sufficiently enough to prevent severe performance\
    \ degradation during\n   failover.\n"
- title: Appendix B.  Discussion of the Path-Bouncing Effect
  contents:
  - "Appendix B.  Discussion of the Path-Bouncing Effect\n   The methods described\
    \ in the document can accelerate the failover\n   process.  Hence, they might\
    \ introduce a path-bouncing effect in which\n   the sender keeps changing the\
    \ data transmission path frequently.\n   This sounds harmful to the data transfer;\
    \ however, several research\n   results indicate that there is no serious problem\
    \ with SCTP in terms\n   of the path-bouncing effect (see [CARO04] and [CARO05]).\n\
    \   There are two main reasons for this.  First, SCTP is basically\n   designed\
    \ for multipath communication, which means SCTP maintains all\n   path-related\
    \ parameters (CWND, ssthresh, RTT, error count, etc.) per\n   each destination\
    \ address.  These parameters cannot be affected by\n   path bouncing.  In addition,\
    \ when SCTP migrates the data transfer to\n   another path, it starts with the\
    \ minimal or the initial CWND.  Hence,\n   there is little chance for packet reordering\
    \ or duplicating.\n   Second, even if all communication paths between the end\
    \ nodes share\n   the same bottleneck, the SCTP-PF results in a behavior already\n\
    \   allowed by [RFC4960].\n"
- title: Appendix C.  SCTP-PF for SCTP Single-Homed Operation
  contents:
  - "Appendix C.  SCTP-PF for SCTP Single-Homed Operation\n   For a single-homed SCTP\
    \ association, the only tangible effect of the\n   activation of SCTP-PF operation\
    \ is enhanced failure detection in\n   terms of potential notification of the\
    \ PF state of the sole\n   destination address as well as, for idle associations,\
    \ more rapid\n   entering, and notification, of inactive state of the destination\n\
    \   address and more rapid endpoint failure detection.  It is believed\n   that\
    \ neither of these effects are harmful, provided adequate dormant\n   state operation\
    \ is implemented.  Furthermore, it is believed that\n   they may be particularly\
    \ useful for applications that deploy multiple\n   SCTP associations for load-balancing\
    \ purposes.  The early\n   notification of the PF state may be used for preventive\
    \ measures as\n   the entering of the PF state can be used as a warning of potential\n\
    \   congestion.  Depending on the PMR value, the aggressive HEARTBEAT\n   transmission\
    \ in PF state may speed up the endpoint failure detection\n   (exceed of AMR threshold\
    \ on the sole path error counter) on idle\n   associations in the case with a\
    \ relatively large HB.Interval value\n   compared to RTO (e.g., 30 seconds) is\
    \ used.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to acknowledge members of the IETF\
    \ Transport\n   Area Working Group (tsvwg) for continuing discussions on this\n\
    \   document and insightful feedback, and we appreciate continuous\n   encouragement\
    \ and suggestions from the Chairs of the tsvwg.  We\n   especially wish to thank\
    \ Michael Tuexen for his many invaluable\n   comments and for his substantial\
    \ supports with the making of the\n   document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Yoshifumi Nishida\n   GE Global Research\n   2623 Camino\
    \ Ramon\n   San Ramon, CA  94583\n   United States\n   Email: nishida@wide.ad.jp\n\
    \   Preethi Natarajan\n   Cisco Systems\n   510 McCarthy Blvd.\n   Milpitas, CA\
    \  95035\n   United States\n   Email: prenatar@cisco.com\n   Armando Caro\n  \
    \ BBN Technologies\n   10 Moulton St.\n   Cambridge, MA  02138\n   United States\n\
    \   Email: acaro@bbn.com\n   Paul D. Amer\n   University of Delaware\n   Computer\
    \ Science Department - 434 Smith Hall\n   Newark, DE  19716-2586\n   United States\n\
    \   Email: amer@udel.edu\n   Karen E. E. Nielsen\n   Ericsson\n   Kistavaegen\
    \ 25\n   Stockholm  164 80\n   Sweden\n   Email: karen.nielsen@tieto.com\n"
