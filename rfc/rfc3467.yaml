- title: __initial_text__
  contents:
  - '                  Role of the Domain Name System (DNS)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document reviews the original function and purpose of the domain\n\
    \   name system (DNS).  It contrasts that history with some of the\n   purposes\
    \ for which the DNS has recently been applied and some of the\n   newer demands\
    \ being placed upon it or suggested for it.  A framework\n   for an alternative\
    \ to placing these additional stresses on the DNS is\n   then outlined.  This\
    \ document and that framework are not a proposed\n   solution, only a strong suggestion\
    \ that the time has come to begin\n   thinking more broadly about the problems\
    \ we are encountering and\n   possible approaches to solving them.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n      4.6 Business Cards and Other Natural Uses of Natural\
    \ Languages. 22\n      4.8 Intra-DNS Approaches for \"Multilingual Names\" .............\
    \ 23\n   5.  Search-based Systems: The Key Controversies .................. 23\n\
    \   6.  Security Considerations ...................................... 24\n  \
    \ 7.  References ................................................... 25\n    \
    \  7.1 Normative References ...................................... 25\n      7.2\
    \ Explanatory and Informative References .................... 25\n   8.  Acknowledgements\
    \ ............................................. 30\n   9.  Author's Address .............................................\
    \ 30\n   10. Full Copyright Statement ..................................... 31\n"
- title: 1. Introduction and History
  contents:
  - "1. Introduction and History\n   The DNS was designed as a replacement for the\
    \ older \"host table\"\n   system.  Both were intended to provide names for network\
    \ resources at\n   a more abstract level than network (IP) addresses (see, e.g.,\n\
    \   [RFC625], [RFC811], [RFC819], [RFC830], [RFC882]).  In recent years,\n   the\
    \ DNS has become a database of convenience for the Internet, with\n   many proposals\
    \ to add new features.  Only some of these proposals\n   have been successful.\
    \  Often the main (or only) motivation for using\n   the DNS is because it exists\
    \ and is widely deployed, not because its\n   existing structure, facilities,\
    \ and content are appropriate for the\n   particular application of data involved.\
    \  This document reviews the\n   history of the DNS, including examination of\
    \ some of those newer\n   applications.  It then argues that the overloading process\
    \ is often\n   inappropriate.  Instead, it suggests that the DNS should be\n \
    \  supplemented by systems better matched to the intended applications\n   and\
    \ outlines a framework and rationale for one such system.\n   Several of the comments\
    \ that follow are somewhat revisionist.  Good\n   design and engineering often\
    \ requires a level of intuition by the\n   designers about things that will be\
    \ necessary in the future; the\n   reasons for some of these design decisions\
    \ are not made explicit at\n   the time because no one is able to articulate them.\
    \  The discussion\n   below reconstructs some of the decisions about the Internet's\
    \ primary\n   namespace (the \"Class=IN\" DNS) in the light of subsequent development\n\
    \   and experience.  In addition, the historical reasons for particular\n   decisions\
    \ about the Internet were often severely underdocumented\n   contemporaneously\
    \ and, not surprisingly, different participants have\n   different recollections\
    \ about what happened and what was considered\n   important.  Consequently, the\
    \ quasi-historical story below is just\n   one story.  There may be (indeed, almost\
    \ certainly are) other stories\n   about how the DNS evolved to its present state,\
    \ but those variants do\n   not invalidate the inferences and conclusions.\n \
    \  This document presumes a general understanding of the terminology of\n   RFC\
    \ 1034 [RFC1034] or of any good DNS tutorial (see, e.g., [Albitz]).\n"
- title: 1.1  Context for DNS Development
  contents:
  - "1.1  Context for DNS Development\n   During the entire post-startup-period life\
    \ of the ARPANET and nearly\n   the first decade or so of operation of the Internet,\
    \ the list of host\n   names and their mapping to and from addresses was maintained\
    \ in a\n   frequently-updated \"host table\" [RFC625], [RFC811], [RFC952].  The\n\
    \   names themselves were restricted to a subset of ASCII [ASCII] chosen\n   to\
    \ avoid ambiguities in printed form, to permit interoperation with\n   systems\
    \ using other character codings (notably EBCDIC), and to avoid\n   the \"national\
    \ use\" code positions of ISO 646 [IS646].  These\n   restrictions later became\
    \ collectively known as the \"LDH\" rules for\n   \"letter-digit-hyphen\", the\
    \ permitted characters.  The table was just\n   a list with a common format that\
    \ was eventually agreed upon; sites\n   were expected to frequently obtain copies\
    \ of, and install, new\n   versions.  The host tables themselves were introduced\
    \ to:\n   o  Eliminate the requirement for people to remember host numbers\n \
    \     (addresses).  Despite apparent experience to the contrary in the\n     \
    \ conventional telephone system, numeric numbering systems,\n      including the\
    \ numeric host number strategy, did not (and do not)\n      work well for more\
    \ than a (large) handful of hosts.\n   o  Provide stability when addresses changed.\
    \  Since addresses -- to\n      some degree in the ARPANET and more importantly\
    \ in the\n      contemporary Internet -- are a function of network topology and\n\
    \      routing, they often had to be changed when connectivity or\n      topology\
    \ changed.  The names could be kept stable even as\n      addresses changed.\n\
    \   o  Provide the capability to have multiple addresses associated with\n   \
    \   a given host to reflect different types of connectivity and\n      topology.\
    \  Use of names, rather than explicit addresses, avoided\n      the requirement\
    \ that would otherwise exist for users and other\n      hosts to track these multiple\
    \ host numbers and addresses and the\n      topological considerations for selecting\
    \ one over others.\n   After several years of using the host table approach, the\
    \ community\n   concluded that model did not scale adequately and that it would\
    \ not\n   adequately support new service variations.  A number of discussions\n\
    \   and meetings were held which drew several ideas and incomplete\n   proposals\
    \ together.  The DNS was the result of that effort.  It\n   continued to evolve\
    \ during the design and initial implementation\n   period, with a number of documents\
    \ recording the changes (see\n   [RFC819], [RFC830], and [RFC1034]).\n   The goals\
    \ for the DNS included:\n   o  Preservation of the capabilities of the host table\
    \ arrangements\n      (especially unique, unambiguous, host names),\n   o  Provision\
    \ for addition of additional services (e.g., the special\n      record types for\
    \ electronic mail routing which quickly followed\n      introduction of the DNS),\
    \ and\n   o  Creation of a robust, hierarchical, distributed, name lookup\n  \
    \    system to accomplish the other goals.\n   The DNS design also permitted distribution\
    \ of name administration,\n   rather than requiring that each host be entered\
    \ into a single,\n   central, table by a central administration.\n"
- title: 1.2 Review of the DNS and Its Role as Designed
  contents:
  - "1.2 Review of the DNS and Its Role as Designed\n   The DNS was designed to identify\
    \ network resources.  Although there\n   was speculation about including, e.g.,\
    \ personal names and email\n   addresses, it was not designed primarily to identify\
    \ people, brands,\n   etc.  At the same time, the system was designed with the\
    \ flexibility\n   to accommodate new data types and structures, both through the\n\
    \   addition of new record types to the initial \"INternet\" class, and,\n   potentially,\
    \ through the introduction of new classes.  Since the\n   appropriate identifiers\
    \ and content of those future extensions could\n   not be anticipated, the design\
    \ provided that these fields could\n   contain any (binary) information, not just\
    \ the restricted text forms\n   of the host table.\n   However, the DNS, as it\
    \ is actually used, is intimately tied to the\n   applications and application\
    \ protocols that utilize it, often at a\n   fairly low level.\n   In particular,\
    \ despite the ability of the protocols and data\n   structures themselves to accommodate\
    \ any binary representation, DNS\n   names as used were historically not even\
    \ unrestricted ASCII, but a\n   very restricted subset of it, a subset that derives\
    \ from the original\n   host table naming rules.  Selection of that subset was\
    \ driven in part\n   by human factors considerations, including a desire to eliminate\n\
    \   possible ambiguities in an international context.  Hence character\n   codes\
    \ that had international variations in interpretation were\n   excluded, the underscore\
    \ character and case distinctions were\n   eliminated as being confusing (in the\
    \ underscore's case, with the\n   hyphen character) when written or read by people,\
    \ and so on.  These\n   considerations appear to be very similar to those that\
    \ resulted in\n   similarly restricted character sets being used as protocol elements\n\
    \   in many ITU and ISO protocols (cf. [X29]).\n   Another assumption was that\
    \ there would be a high ratio of physical\n   hosts to second level domains and,\
    \ more generally, that the system\n   would be deeply hierarchical, with most\
    \ systems (and names) at the\n   third level or below and a very large percentage\
    \ of the total names\n   representing physical hosts.  There are domains that\
    \ follow this\n   model: many university and corporate domains use fairly deep\n\
    \   hierarchies, as do a few country-oriented top level domains\n   (\"ccTLDs\"\
    ).  Historically, the \"US.\" domain has been an excellent\n   example of the\
    \ deeply hierarchical approach.  However, by 1998,\n   comparison of several efforts\
    \ to survey the DNS showed a count of SOA\n   records that approached (and may\
    \ have passed) the number of distinct\n   hosts.  Looked at differently, we appear\
    \ to be moving toward a\n   situation in which the number of delegated domains\
    \ on the Internet is\n   approaching or exceeding the number of hosts, or at least\
    \ the number\n   of hosts able to provide services to others on the network. \
    \ This\n   presumably results from synonyms or aliases that map a great many\n\
    \   names onto a smaller number of hosts.  While experience up to this\n   time\
    \ has shown that the DNS is robust enough -- given contemporary\n   machines as\
    \ servers and current bandwidth norms -- to be able to\n   continue to operate\
    \ reasonably well when those historical assumptions\n   are not met (e.g., with\
    \ a flat, structure under \".COM\" containing\n   well over ten million delegated\
    \ subdomains [COMSIZE]), it is still\n   useful to remember that the system could\
    \ have been designed to work\n   optimally with a flat structure (and very large\
    \ zones) rather than a\n   deeply hierarchical one, and was not.\n   Similarly,\
    \ despite some early speculation about entering people's\n   names and email addresses\
    \ into the DNS directly (e.g., see\n   [RFC1034]), electronic mail addresses in\
    \ the Internet have preserved\n   the original, pre-DNS, \"user (or mailbox) at\
    \ location\" conceptual\n   format rather than a flatter or strictly dot-separated\
    \ one.\n   Location, in that instance, is a reference to a host. The sole\n  \
    \ exception, at least in the \"IN\" class, has been one field of the SOA\n   record.\n\
    \   Both the DNS architecture itself and the two-level (host name and\n   mailbox\
    \ name) provisions for email and similar functions (e.g., see\n   the finger protocol\
    \ [FINGER]), also anticipated a relatively high\n   ratio of users to actual hosts.\
    \  Despite the observation in RFC 1034\n   that the DNS was expected to grow to\
    \ be proportional to the number of\n   users (section 2.3), it has never been\
    \ clear that the DNS was\n   seriously designed for, or could, scale to the order\
    \ of magnitude of\n   number of users (or, more recently, products or document\
    \ objects),\n   rather than that of physical hosts.\n   Just as was the case for\
    \ the host table before it, the DNS provided\n   critical uniqueness for names,\
    \ and universal accessibility to them,\n   as part of overall \"single internet\"\
    \ and \"end to end\" models (cf.\n   [RFC2826]).  However, there are many signs\
    \ that, as new uses evolved\n   and original assumptions were abused (if not violated\
    \ outright), the\n   system was being stretched to, or beyond, its practical limits.\n\
    \   The original design effort that led to the DNS included examination\n   of\
    \ the directory technologies available at the time.  The design\n   group concluded\
    \ that the DNS design, with its simplifying assumptions\n   and restricted capabilities,\
    \ would be feasible to deploy and make\n   adequately robust, which the more comprehensive\
    \ directory approaches\n   were not.  At the same time, some of the participants\
    \ feared that the\n   limitations might cause future problems; this document essentially\n\
    \   takes the position that they were probably correct.  On the other\n   hand,\
    \ directory technology and implementations have evolved\n   significantly in the\
    \ ensuing years: it may be time to revisit the\n   assumptions, either in the\
    \ context of the two- (or more) level\n   mechanism contemplated by the rest of\
    \ this document or, even more\n   radically, as a path toward a DNS replacement.\n"
- title: 1.3 The Web and User-visible Domain Names
  contents:
  - "1.3 The Web and User-visible Domain Names\n   From the standpoint of the integrity\
    \ of the domain name system -- and\n   scaling of the Internet, including optimal\
    \ accessibility to content\n   -- the web design decision to use \"A record\"\
    \ domain names directly in\n   URLs, rather than some system of indirection, has\
    \ proven to be a\n   serious mistake in several respects.  Convenience of typing,\
    \ and the\n   desire to make domain names out of easily-remembered product names,\n\
    \   has led to a flattening of the DNS, with many people now perceiving\n   that\
    \ second-level names under COM (or in some countries, second- or\n   third-level\
    \ names under the relevant ccTLD) are all that is\n   meaningful.  This perception\
    \ has been reinforced by some domain name\n   registrars [REGISTRAR] who have\
    \ been anxious to \"sell\" additional\n   names.  And, of course, the perception\
    \ that one needed a second-level\n   (or even top-level) domain per product, rather\
    \ than having names\n   associated with a (usually organizational) collection\
    \ of network\n   resources, has led to a rapid acceleration in the number of names\n\
    \   being registered.  That acceleration has, in turn, clearly benefited\n   registrars\
    \ charging on a per-name basis, \"cybersquatters\", and others\n   in the business\
    \ of \"selling\" names, but it has not obviously\n   benefited the Internet as\
    \ a whole.\n   This emphasis on second-level domain names has also created a problem\n\
    \   for the trademark community.  Since the Internet is international,\n   and\
    \ names are being populated in a flat and unqualified space,\n   similarly-named\
    \ entities are in conflict even if there would\n   ordinarily be no chance of\
    \ confusing them in the marketplace.  The\n   problem appears to be unsolvable\
    \ except by a choice between draconian\n   measures.  These might include significant\
    \ changes to the legislation\n   and conventions that govern disputes over \"\
    names\" and \"marks\".  Or\n   they might result in a situation in which the \"\
    rights\" to a name are\n   typically not settled using the subtle and traditional\
    \ product (or\n   industry) type and geopolitical scope rules of the trademark\
    \ system.\n   Instead they have depended largely on political or economic power,\n\
    \   e.g., the organization with the greatest resources to invest in\n   defending\
    \ (or attacking) names will ultimately win out.  The latter\n   raises not only\
    \ important issues of equity, but also the risk of\n   backlash as the numerous\
    \ small players are forced to relinquish names\n   they find attractive and to\
    \ adopt less-desirable naming conventions.\n   Independent of these sociopolitical\
    \ problems, content distribution\n   issues have made it clear that it should\
    \ be possible for an\n   organization to have copies of data it wishes to make\
    \ available\n   distributed around the network, with a user who asks for the\n\
    \   information by name getting the topologically-closest copy.  This is\n   not\
    \ possible with simple, as-designed, use of the DNS: DNS names\n   identify target\
    \ resources or, in the case of email \"MX\" records, a\n   preferentially-ordered\
    \ list of resources \"closest\" to a target (not\n   to the source/user).  Several\
    \ technologies (and, in some cases,\n   corresponding business models) have arisen\
    \ to work around these\n   problems, including intercepting and altering DNS requests\
    \ so as to\n   point to other locations.\n   Additional implications are still\
    \ being discovered and evaluated.\n   Approaches that involve interception of\
    \ DNS queries and rewriting of\n   DNS names (or otherwise altering the resolution\
    \ process based on the\n   topological location of the user) seem, however, to\
    \ risk disrupting\n   end-to-end applications in the general case and raise many\
    \ of the\n   issues discussed by the IAB in [IAB-OPES].  These problems occur\
    \ even\n   if the rewriting machinery is accompanied by additional workarounds\n\
    \   for particular applications.  For example, security associations and\n   applications\
    \ that need to identify \"the same host\" often run into\n   problems if DNS names\
    \ or other references are changed in the network\n   without participation of\
    \ the applications that are trying to invoke\n   the associated services.\n"
- title: 1.4 Internet Applications Protocols and Their Evolution
  contents:
  - "1.4 Internet Applications Protocols and Their Evolution\n   At the applications\
    \ level, few of the protocols in active,\n   widespread, use on the Internet reflect\
    \ either contemporary knowledge\n   in computer science or human factors or experience\
    \ accumulated\n   through deployment and use.  Instead, protocols tend to be deployed\n\
    \   at a just-past-prototype level, typically including the types of\n   expedient\
    \ compromises typical with prototypes.  If they prove useful,\n   the nature of\
    \ the network permits very rapid dissemination (i.e.,\n   they fill a vacuum,\
    \ even if a vacuum that no one previously knew\n   existed).  But, once the vacuum\
    \ is filled, the installed base\n   provides its own inertia: unless the design\
    \ is so seriously faulty as\n   to prevent effective use (or there is a widely-perceived\
    \ sense of\n   impending disaster unless the protocol is replaced), future\n \
    \  developments must maintain backward compatibility and workarounds for\n   problematic\
    \ characteristics rather than benefiting from redesign in\n   the light of experience.\
    \  Applications that are \"almost good enough\"\n   prevent development and deployment\
    \ of high-quality replacements.\n   The DNS is both an illustration of, and an\
    \ exception to, parts of\n   this pessimistic interpretation. It was a second-generation\n\
    \   development, with the host table system being seen as at the end of\n   its\
    \ useful life.  There was a serious attempt made to reflect the\n   computing\
    \ state of the art at the time.  However, deployment was much\n   slower than\
    \ expected (and very painful for many sites) and some fixed\n   (although relaxed\
    \ several times) deadlines from a central network\n   administration were necessary\
    \ for deployment to occur at all.\n   Replacing it now, in order to add functionality,\
    \ while it continues\n   to perform its core functions at least reasonably well,\
    \ would\n   presumably be extremely difficult.\n   There are many, perhaps obvious,\
    \ examples of this.  Despite many\n   known deficiencies and weaknesses of definition,\
    \ the \"finger\" and\n   \"whois\" [WHOIS] protocols have not been replaced (despite\
    \ many\n   efforts to update or replace the latter [WHOIS-UPDATE]).  The Telnet\n\
    \   protocol and its many options drove out the SUPDUP [RFC734] one,\n   which\
    \ was arguably much better designed for a diverse collection of\n   network hosts.\
    \  A number of efforts to replace the email or file\n   transfer protocols with\
    \ models which their advocates considered much\n   better have failed.  And, more\
    \ recently and below the applications\n   level, there is some reason to believe\
    \ that this resistance to change\n   has been one of the factors impeding IPv6\
    \ deployment.\n"
- title: 2. Signs of DNS Overloading
  contents:
  - "2. Signs of DNS Overloading\n   Parts of the historical discussion above identify\
    \ areas in which the\n   DNS has become overloaded (semantically if not in the\
    \ mechanical\n   ability to resolve names).  Despite this overloading, it appears\
    \ that\n   DNS performance and reliability are still within an acceptable range:\n\
    \   there is little evidence of serious performance degradation.  Recent\n   proposals\
    \ and mechanisms to better respond to overloading and scaling\n   issues have\
    \ all focused on patching or working around limitations\n   that develop when\
    \ the DNS is utilized for out-of-design functions,\n   rather than on dramatic\
    \ rethinking of either DNS design or those\n   uses.  The number of these issues\
    \ that have arisen at much the same\n   time may argue for just that type of rethinking,\
    \ and not just for\n   adding complexity and attempting to incrementally alter\
    \ the design\n   (see, for example, the discussion of simplicity in section 2\
    \ of\n   [RFC3439]).\n   For example:\n   o  While technical approaches such as\
    \ larger and higher-powered\n      servers and more bandwidth, and legal/political\
    \ mechanisms such as\n      dispute resolution policies, have arguably kept the\
    \ problems from\n      becoming critical, the DNS has not proven adequately responsive\
    \ to\n      business and individual needs to describe or identify things (such\n\
    \      as product names and names of individuals) other than strict\n      network\
    \ resources.\n   o  While stacks have been modified to better handle multiple\n\
    \      addresses on a physical interface and some protocols have been\n      extended\
    \ to include DNS names for determining context, the DNS\n      does not deal especially\
    \ well with many names associated with a\n      given host (e.g., web hosting\
    \ facilities with multiple domains on\n      a server).\n   o  Efforts to add\
    \ names deriving from languages or character sets\n      based on other than simple\
    \ ASCII and English-like names (see\n      below), or even to utilize complex\
    \ company or product names\n      without the use of hierarchy, have created apparent\
    \ requirements\n      for names (labels) that are over 63 octets long.  This requirement\n\
    \      will undoubtedly increase over time; while there are workarounds\n    \
    \  to accommodate longer names, they impose their own restrictions\n      and\
    \ cause their own problems.\n   o  Increasing commercialization of the Internet,\
    \ and visibility of\n      domain names that are assumed to match names of companies\
    \ or\n      products, has turned the DNS and DNS names into a trademark\n    \
    \  battleground.  The traditional trademark system in (at least) most\n      countries\
    \ makes careful distinctions about fields of\n      applicability.  When the space\
    \ is flattened, without\n      differentiation by either geography or industry\
    \ sector, not only\n      are there likely conflicts between \"Joe's Pizza\" (of\
    \ Boston) and\n      \"Joe's Pizza\" (of San Francisco) but between both and \"\
    Joe's Auto\n      Repair\" (of Los Angeles).  All three would like to control\n\
    \      \"Joes.com\" (and would prefer, if it were permitted by DNS naming\n  \
    \    rules, to also spell it as \"Joe's.com\" and have both resolve the\n    \
    \  same way) and may claim trademark rights to do so, even though\n      conflict\
    \ or confusion would not occur with traditional trademark\n      principles.\n\
    \   o  Many organizations wish to have different web sites under the same\n  \
    \    URL and domain name.  Sometimes this is to create local variations\n    \
    \  -- the Widget Company might want to present different material to\n      a\
    \ UK user relative to a US one -- and sometimes it is to provide\n      higher\
    \ performance by supplying information from the server\n      topologically closest\
    \ to the user.  If the name resolution\n      mechanism is expected to provide\
    \ this functionality, there are\n      three possible models (which might be combined):\n\
    \      -  supply information about multiple sites (or locations or\n         references).\
    \  Those sites would, in turn, provide information\n         associated with the\
    \ name and sufficient site-specific\n         attributes to permit the application\
    \ to make a sensible choice\n         of destination, or\n      -  accept client-site\
    \ attributes and utilize them in the search\n         process, or\n      -  return\
    \ different answers based on the location or identity of\n         the requestor.\n\
    \   While there are some tricks that can provide partial simulations of\n   these\
    \ types of function, DNS responses cannot be reliably conditioned\n   in this\
    \ way.\n   These, and similar, issues of performance or content choices can, of\n\
    \   course, be thought of as not involving the DNS at all.  For example,\n   the\
    \ commonly-cited alternate approach of coupling these issues to\n   HTTP content\
    \ negotiation (cf. [RFC2295]), requires that an HTTP\n   connection first be opened\
    \ to some \"common\" or \"primary\" host so that\n   preferences can be negotiated\
    \ and then the client redirected or sent\n   alternate data.  At least from the\
    \ standpoint of improving\n   performance by accessing a \"closer\" location,\
    \ both initially and\n   thereafter, this approach sacrifices the desired result\
    \ before the\n   client initiates any action.  It could even be argued that some\
    \ of\n   the characteristics of common content negotiation approaches are\n  \
    \ workarounds for the non-optimal use of the DNS in web URLs.\n   o  Many existing\
    \ and proposed systems for \"finding things on the\n      Internet\" require a\
    \ true search capability in which near matches\n      can be reported to the user\
    \ (or to some user agent with an\n      appropriate rule-set) and to which queries\
    \ may be ambiguous or\n      fuzzy.  The DNS, by contrast, can accommodate only\
    \ one set of\n      (quite rigid) matching rules.  Proposals to permit different\
    \ rules\n      in different localities (e.g., matching rules that are TLD- or\n\
    \      zone-specific) help to identify the problem.  But they cannot be\n    \
    \  applied directly to the DNS without either abandoning the desired\n      level\
    \ of flexibility or isolating different parts of the Internet\n      from each\
    \ other (or both).  Fuzzy or ambiguous searches are\n      desirable for resolution\
    \ of names that might have spelling\n      variations and for names that can be\
    \ resolved into different sets\n      of glyphs depending on context.  Especially\
    \ when\n      internationalization is considered, variant name problems go\n \
    \     beyond simple differences in representation of a character or\n      ordering\
    \ of a string.  Instead, avoiding user astonishment and\n      confusion requires\
    \ consideration of relationships such as\n      languages that can be written\
    \ with different alphabets, Kanji-\n      Hiragana relationships, Simplified and\
    \ Traditional Chinese, etc.\n      See [Seng] for a discussion and suggestions\
    \ for addressing a\n      subset of these issues in the context of characters\
    \ based on\n      Chinese ones.  But that document essentially illustrates the\n\
    \      difficulty of providing the type of flexible matching that would\n    \
    \  be anticipated by users; instead, it tries to protect against the\n      worst\
    \ types of confusion (and opportunities for fraud).\n   o  The historical DNS,\
    \ and applications that make assumptions about\n      how it works, impose significant\
    \ risk (or forces technical kludges\n      and consequent odd restrictions), when\
    \ one considers adding\n      mechanisms for use with various multi-character-set\
    \ and\n      multilingual \"internationalization\" systems.  See the IAB's\n \
    \     discussion of some of these issues [RFC2825] for more information.\n   o\
    \  In order to provide proper functionality to the Internet, the DNS\n      must\
    \ have a single unique root (the IAB provides more discussion\n      of this issue\
    \ [RFC2826]).  There are many desires for local\n      treatment of names or character\
    \ sets that cannot be accommodated\n      without either multiple roots (e.g.,\
    \ a separate root for\n      multilingual names, proposed at various times by\
    \ MINC [MINC] and\n      others), or mechanisms that would have similar effects\
    \ in terms of\n      Internet fragmentation and isolation.\n   o  For some purposes,\
    \ it is desirable to be able to search not only\n      an index entry (labels\
    \ or fully-qualified names in the DNS case),\n      but their values or targets\
    \ (DNS data).  One might, for example,\n      want to locate all of the host (and\
    \ virtual host) names which\n      cause mail to be directed to a given server\
    \ via MX records.  The\n      DNS does not support this capability (see the discussion\
    \ in\n      [IQUERY]) and it can be simulated only by extracting all of the\n\
    \      relevant records (perhaps by zone transfer if the source permits\n    \
    \  doing so, but that permission is becoming less frequently\n      available)\
    \ and then searching a file built from those records.\n   o  Finally, as additional\
    \ types of personal or identifying\n      information are added to the DNS, issues\
    \ arise with protection of\n      that information.  There are increasing calls\
    \ to make different\n      information available based on the credentials and\
    \ authorization\n      of the source of the inquiry.  As with information keyed\
    \ to site\n      locations or proximity (as discussed above), the DNS protocols\n\
    \      make providing these differentiated services quite difficult if\n     \
    \ not impossible.\n   In each of these cases, it is, or might be, possible to\
    \ devise ways\n   to trick the DNS system into supporting mechanisms that were\
    \ not\n   designed into it.  Several ingenious solutions have been proposed in\n\
    \   many of these areas already, and some have been deployed into the\n   marketplace\
    \ with some success.  But the price of each of these\n   changes is added complexity\
    \ and, with it, added risk of unexpected\n   and destabilizing problems.\n   Several\
    \ of the above problems are addressed well by a good directory\n   system (supported\
    \ by the LDAP protocol or some protocol more\n   precisely suited to these specific\
    \ applications) or searching\n   environment (such as common web search engines)\
    \ although not by the\n   DNS.  Given the difficulty of deploying new applications\
    \ discussed\n   above, an important question is whether the tricks and kludges\
    \ are\n   bad enough, or will become bad enough as usage grows, that new\n   solutions\
    \ are needed and can be deployed.\n"
- title: 3. Searching, Directories, and the DNS
  contents:
  - '3. Searching, Directories, and the DNS

    '
- title: 3.1 Overview
  contents:
  - "3.1 Overview\n   The constraints of the DNS and the discussion above suggest\
    \ the\n   introduction of an intermediate protocol mechanism, referred to below\n\
    \   as a \"search layer\" or \"searchable system\".  The terms \"directory\"\n\
    \   and \"directory system\" are used interchangeably with \"searchable\n   system\"\
    \ in this document, although the latter is far more precise.\n   Search layer\
    \ proposals would use a two (or more) stage lookup, not\n   unlike several of\
    \ the proposals for internationalized names in the\n   DNS (see section 4), but\
    \ all operations but the final one would\n   involve searching other systems,\
    \ rather than looking up identifiers\n   in the DNS itself.  As explained below,\
    \ this would permit relaxation\n   of several constraints, leading to a more capable\
    \ and comprehensive\n   overall system.\n   Ultimately, many of the issues with\
    \ domain names arise as the result\n   of efforts to use the DNS as a directory.\
    \  While, at the time this\n   document was written, sufficient pressure or demand\
    \ had not occurred\n   to justify a change, it was already quite clear that, as\
    \ a directory\n   system, the DNS is a good deal less than ideal.  This document\n\
    \   suggests that there actually is a requirement for a directory system,\n  \
    \ and that the right solution to a searchable system requirement is a\n   searchable\
    \ system, not a series of DNS patches, kludges, or\n   workarounds.\n   The following\
    \ points illustrate particular aspects of this\n   conclusion.\n   o  A directory\
    \ system would not require imposition of particular\n      length limits on names.\n\
    \   o  A directory system could permit explicit association of\n      attributes,\
    \ e.g., language and country, with a name, without\n      having to utilize trick\
    \ encodings to incorporate that information\n      in DNS labels (or creating\
    \ artificial hierarchy for doing so).\n   o  There is considerable experience\
    \ (albeit not much of it very\n      successful) in doing fuzzy and \"sonex\"\
    \ (similar-sounding) matching\n      in directory systems.  Moreover, it is plausible\
    \ to think about\n      different matching rules for different areas and sets\
    \ of names so\n      that these can be adapted to local cultural requirements.\n\
    \      Specifically, it might be possible to have a single form of a name\n  \
    \    in a directory, but to have great flexibility about what queries\n      matched\
    \ that name (and even have different variations in different\n      areas).  Of\
    \ course, the more flexibility that a system provides,\n      the greater the\
    \ possibility of real or imagined trademark\n      conflicts.  But the opportunity\
    \ would exist to design a directory\n      structure that dealt with those issues\
    \ in an intelligent way,\n      while DNS constraints almost certainly make a\
    \ general and\n      equitable DNS-only solution impossible.\n   o  If a directory\
    \ system is used to translate to DNS names, and then\n      DNS names are looked\
    \ up in the normal fashion, it may be possible\n      to relax several of the\
    \ constraints that have been traditional\n      (and perhaps necessary) with the\
    \ DNS.  For example, reverse-\n      mapping of addresses to directory names may\
    \ not be a requirement\n      even if mapping of addresses to DNS names continues\
    \ to be, since\n      the DNS name(s) would (continue to) uniquely identify the\
    \ host.\n   o  Solutions to multilingual transcription problems that are common\n\
    \      in \"normal life\" (e.g., two-sided business cards to be sure that\n  \
    \    recipients trying to contact a person can access romanized\n      spellings\
    \ and numbers if the original language is not\n      comprehensible to them) can\
    \ be easily handled in a directory\n      system by inserting both sets of entries.\n\
    \   o  A directory system could be designed that would return, not a\n      single\
    \ name, but a set of names paired with network-locational\n      information or\
    \ other context-establishing attributes.  This type\n      of information might\
    \ be of considerable use in resolving the\n      \"nearest (or best) server for\
    \ a particular named resource\"\n      problems that are a significant concern\
    \ for organizations hosting\n      web and other sites that are accessed from\
    \ a wide range of\n      locations and subnets.\n   o  Names bound to countries\
    \ and languages might help to manage\n      trademark realities, while, as discussed\
    \ in section 1.3 above, use\n      of the DNS in trademark-significant contexts\
    \ tends to require\n      worldwide \"flattening\" of the trademark system.\n\
    \   Many of these issues are a consequence of another property of the\n   DNS:\
    \  names must be unique across the Internet.  The need to have a\n   system of\
    \ unique identifiers is fairly obvious (see [RFC2826]).\n   However, if that requirement\
    \ were to be eliminated in a search or\n   directory system that was visible to\
    \ users instead of the DNS, many\n   difficult problems -- of both an engineering\
    \ and a policy nature --\n   would be likely to vanish.\n"
- title: 3.2 Some Details and Comments
  contents:
  - "3.2 Some Details and Comments\n   Almost any internationalization proposal for\
    \ names that are in, or\n   map into, the DNS will require changing DNS resolver\
    \ API calls\n   (\"gethostbyname\" or equivalent), or adding some pre-resolution\n\
    \   preparation mechanism, in almost all Internet applications -- whether\n  \
    \ to cause the API to take a different character set (no matter how it\n   is\
    \ then mapped into the bits used in the DNS or another system), to\n   accept\
    \ or return more arguments with qualifying or identifying\n   information, or\
    \ otherwise.  Once applications must be opened to make\n   such changes, it is\
    \ a relatively small matter to switch from calling\n   into the DNS to calling\
    \ a directory service and then the DNS (in many\n   situations, both actions could\
    \ be accomplished in a single API call).\n   A directory approach can be consistent\
    \ both with \"flat\" models and\n   multi-attribute ones.  The DNS requires strict\
    \ hierarchies, limiting\n   its ability to differentiate among names by their\
    \ properties.  By\n   contrast, modern directories can utilize independently-searched\n\
    \   attributes and other structured schema to provide flexibilities not\n   present\
    \ in a strictly hierarchical system.\n   There is a strong historical argument\
    \ for a single directory\n   structure (implying a need for mechanisms for registration,\n\
    \   delegation, etc.).  But a single structure is not a strict\n   requirement,\
    \ especially if in-depth case analysis and design work\n   leads to the conclusion\
    \ that reverse-mapping to directory names is\n   not a requirement (see section\
    \ 5).  If a single structure is not\n   needed, then, unlike the DNS, there would\
    \ be no requirement for a\n   global organization to authorize or delegate operation\
    \ of portions of\n   the structure.\n   The \"no single structure\" concept could\
    \ be taken further by moving\n   away from simple \"names\" in favor of, e.g.,\
    \ multiattribute,\n   multihierarchical, faceted systems in which most of the\
    \ facets use\n   restricted vocabularies.  (These terms are fairly standard in\
    \ the\n   information retrieval and classification system literature, see,\n \
    \  e.g., [IS5127].)  Such systems could be designed to avoid the need\n   for\
    \ procedures to ensure uniqueness across, or even within, providers\n   and databases\
    \ of the faceted entities for which the search is to be\n   performed.  (See [DNS-Search]\
    \ for further discussion.)\n   While the discussion above includes very general\
    \ comments about\n   attributes, it appears that only a very small number of attributes\n\
    \   would be needed.  The list would almost certainly include country and\n  \
    \ language for internationalization purposes.  It might require\n   \"charset\"\
    \ if we cannot agree on a character set and encoding,\n   although there are strong\
    \ arguments for simply using ISO 10646 (also\n   known as Unicode or \"UCS\" (for\
    \ Universal Character Set) [UNICODE],\n   [IS10646] coding in interchange.  Trademark\
    \ issues might motivate\n   \"commercial\" and \"non-commercial\" (or other) attributes\
    \ if they would\n   be helpful in bypassing trademark problems.  And applications\
    \ to\n   resource location, such as those contemplated for Uniform Resource\n\
    \   Identifiers (URIs) [RFC2396, RFC3305] or the Service Location\n   Protocol\
    \ [RFC2608], might argue for a few other attributes (as\n   outlined above).\n"
- title: 4.  Internationalization
  contents:
  - "4.  Internationalization\n   Much of the thinking underlying this document was\
    \ driven by\n   considerations of internationalizing the DNS or, more specifically,\n\
    \   providing access to the functions of the DNS from languages and\n   naming\
    \ systems that cannot be accurately expressed in the traditional\n   DNS subset\
    \ of ASCII.  Much of the relevant work was done in the\n   IETF's \"Internationalized\
    \ Domain Names\" Working Group (IDN-WG),\n   although this document also draws\
    \ on extensive parallel discussions\n   in other forums.  This section contains\
    \ an evaluation of what was\n   learned as an \"internationalized DNS\" or \"\
    multilingual DNS\" was\n   explored and suggests future steps based on that evaluation.\n\
    \   When the IDN-WG was initiated, it was obvious to several of the\n   participants\
    \ that its first important task was an undocumented one:\n   to increase the understanding\
    \ of the complexities of the problem\n   sufficiently that naive solutions could\
    \ be rejected and people could\n   go to work on the harder problems.  The IDN-WG\
    \ clearly accomplished\n   that task. The beliefs that the problems were simple,\
    \ and in the\n   corresponding simplistic approaches and their promises of quick\
    \ and\n   painless deployment, effectively disappeared as the WG's efforts\n \
    \  matured.\n   Some of the lessons learned from increased understanding and the\n\
    \   dissipation of naive beliefs should be taken as cautions by the wider\n  \
    \ community: the problems are not simple. Specifically, extracting\n   small elements\
    \ for solution rather than looking at whole systems, may\n   result in obscuring\
    \ the problems but not solving any problem that is\n   worth the trouble.\n"
- title: 4.1 ASCII Isn't Just Because of English
  contents:
  - "4.1 ASCII Isn't Just Because of English\n   The hostname rules chosen in the\
    \ mid-70s weren't just \"ASCII because\n   English uses ASCII\", although that\
    \ was a starting point.  We have\n   discovered that almost every other script\
    \ (and even ASCII if we\n   permit the rest of the characters specified in the\
    \ ISO 646\n   International Reference Version) is more complex than hostname-\n\
    \   restricted-ASCII (the \"LDH\" form, see section 1.1).  And ASCII isn't\n \
    \  sufficient to completely represent English -- there are several words\n   in\
    \ the language that are correctly spelled only with characters or\n   diacritical\
    \ marks that do not appear in ASCII.  With a broader\n   selection of scripts,\
    \ in some examples, case mapping works from one\n   case to the other but is not\
    \ reversible.  In others, there are\n   conventions about alternate ways to represent\
    \ characters (in the\n   language, not [only] in character coding) that work most\
    \ of the time,\n   but not always.  And there are issues in coding, with Unicode/10646\n\
    \   providing different ways to represent the same character\n   (\"character\"\
    , rather than \"glyph\", is used deliberately here).  And,\n   in still others,\
    \ there are questions as to whether two glyphs\n   \"match\", which may be a distance-function\
    \ question, not one with a\n   binary answer.  The IETF approach to these problems\
    \ is to require\n   pre-matching canonicalization (see the \"stringprep\" discussion\n\
    \   below).\n   The IETF has resisted the temptations to either try to specify\
    \ an\n   entirely new coded character set, or to pick and choose Unicode/10646\n\
    \   characters on a per-character basis rather than by using well-defined\n  \
    \ blocks.  While it may appear that a character set designed to meet\n   Internet-specific\
    \ needs would be very attractive, the IETF has never\n   had the expertise, resources,\
    \ and representation from critically-\n   important communities to actually take\
    \ on that job.  Perhaps more\n   important, a new effort might have chosen to\
    \ make some of the many\n   complex tradeoffs differently than the Unicode committee\
    \ did,\n   producing a code with somewhat different characteristics.  But there\n\
    \   is no evidence that doing so would produce a code with fewer problems\n  \
    \ and side-effects.  It is much more likely that making tradeoffs\n   differently\
    \ would simply result in a different set of problems, which\n   would be equally\
    \ or more difficult.\n"
- title: 4.2 The "ASCII Encoding" Approaches
  contents:
  - "4.2 The \"ASCII Encoding\" Approaches\n   While the DNS can handle arbitrary\
    \ binary strings without known\n   internal problems (see [RFC2181]), some restrictions\
    \ are imposed by\n   the requirement that text be interpreted in a case-independent\
    \ way\n   ([RFC1034], [RFC1035]).  More important, most internet applications\n\
    \   assume the hostname-restricted \"LDH\" syntax that is specified in the\n \
    \  host table RFCs and as \"prudent\" in RFC 1035.  If those assumptions\n   are\
    \ not met, many conforming implementations of those applications\n   may exhibit\
    \ behavior that would surprise implementors and users.  To\n   avoid these potential\
    \ problems, IETF internationalization work has\n   focused on \"ASCII-Compatible\
    \ Encodings\" (ACE).  These encodings\n   preserve the LDH conventions in the\
    \ DNS itself.  Implementations of\n   applications that have not been upgraded\
    \ utilize the encoded forms,\n   while newer ones can be written to recognize\
    \ the special codings and\n   map them into non-ASCII characters. These approaches\
    \ are, however,\n   not problem-free even if human interface issues are ignored.\
    \  Among\n   other issues, they rely on what is ultimately a heuristic to\n  \
    \ determine whether a DNS label is to be considered as an\n   internationalized\
    \ name (i.e., encoded Unicode) or interpreted as an\n   actual LDH name in its\
    \ own right.  And, while all determinations of\n   whether a particular query\
    \ matches a stored object are traditionally\n   made by DNS servers, the ACE systems,\
    \ when combined with the\n   complexities of international scripts and names,\
    \ require that much of\n   the matching work be separated into a separate, client-side,\n\
    \   canonicalization or \"preparation\" process before the DNS matching\n   mechanisms\
    \ are invoked [STRINGPREP].\n"
- title: 4.3 "Stringprep" and Its Complexities
  contents:
  - "4.3 \"Stringprep\" and Its Complexities\n   As outlined above, the model for\
    \ avoiding problems associated with\n   putting non-ASCII names in the DNS and\
    \ elsewhere evolved into the\n   principle that strings are to be placed into\
    \ the DNS only after being\n   passed through a string preparation function that\
    \ eliminates or\n   rejects spurious character codes, maps some characters onto\
    \ others,\n   performs some sequence canonicalization, and generally creates forms\n\
    \   that can be accurately compared.  The impact of this process on\n   hostname-restricted\
    \ ASCII (i.e., \"LDH\") strings is trivial and\n   essentially adds only overhead.\
    \  For other scripts, the impact is, of\n   necessity, quite significant.\n  \
    \ Although the general notion underlying stringprep is simple, the many\n   details\
    \ are quite subtle and the associated tradeoffs are complex. A\n   design team\
    \ worked on it for months, with considerable effort placed\n   into clarifying\
    \ and fine-tuning the protocol and tables.  Despite\n   general agreement that\
    \ the IETF would avoid getting into the business\n   of defining character sets,\
    \ character codings, and the associated\n   conventions, the group several times\
    \ considered and rejected special\n   treatment of code positions to more nearly\
    \ match the distinctions\n   made by Unicode with user perceptions about similarities\
    \ and\n   differences between characters.  But there were intense temptations\n\
    \   (and pressures) to incorporate language-specific or country-specific\n   rules.\
    \  Those temptations, even when resisted, were indicative of\n   parts of the\
    \ ongoing controversy or of the basic unsuitability of the\n   DNS for fully internationalized\
    \ names that are visible,\n   comprehensible, and predictable for end users.\n\
    \   There have also been controversies about how far one should go in\n   these\
    \ processes of preparation and transformation and, ultimately,\n   about the validity\
    \ of various analogies.  For example, each of the\n   following operations has\
    \ been claimed to be similar to case-mapping\n   in ASCII:\n   o  stripping of\
    \ vowels in Arabic or Hebrew\n   o  matching of \"look-alike\" characters such\
    \ as upper-case Alpha in\n      Greek and upper-case A in Roman-based alphabets\n\
    \   o  matching of Traditional and Simplified Chinese characters that\n      represent\
    \ the same words,\n   o  matching of Serbo-Croatian words whether written in Roman-derived\n\
    \      or Cyrillic characters\n   A decision to support any of these operations\
    \ would have implications\n   for other scripts or languages and would increase\
    \ the overall\n   complexity of the process.  For example, unless language-specific\n\
    \   information is somehow available, performing matching between\n   Traditional\
    \ and Simplified Chinese has impacts on Japanese and Korean\n   uses of the same\
    \ \"traditional\" characters (e.g., it would not be\n   appropriate to map Kanji\
    \ into Simplified Chinese).\n   Even were the IDN-WG's other work to have been\
    \ abandoned completely\n   or if it were to fail in the marketplace, the stringprep\
    \ and nameprep\n   work will continue to be extremely useful, both in identifying\
    \ issues\n   and problem code points and in providing a reasonable set of basic\n\
    \   rules.  Where problems remain, they are arguably not with nameprep,\n   but\
    \ with the DNS-imposed requirement that its results, as with all\n   other parts\
    \ of the matching and comparison process, yield a binary\n   \"match or no match\"\
    \ answer, rather than, e.g., a value on a\n   similarity scale that can be evaluated\
    \ by the user or by user-driven\n   heuristic functions.\n"
- title: 4.4 The Unicode Stability Problem
  contents:
  - "4.4 The Unicode Stability Problem\n   ISO 10646 basically defines only code points,\
    \ and not rules for using\n   or comparing the characters.  This is part of a\
    \ long-standing\n   tradition with the work of what is now ISO/IEC JTC1/SC2: they\
    \ have\n   performed code point assignments and have typically treated the ways\n\
    \   in which characters are used as beyond their scope.  Consequently,\n   they\
    \ have not dealt effectively with the broader range of\n   internationalization\
    \ issues.  By contrast, the Unicode Technical\n   Committee (UTC) has defined,\
    \ in annexes and technical reports (see,\n   e.g., [UTR15]), some additional rules\
    \ for canonicalization and\n   comparison.  Many of those rules and conventions\
    \ have been factored\n   into the \"stringprep\" and \"nameprep\" work, but it\
    \ is not\n   straightforward to make or define them in a fashion that is\n   sufficiently\
    \ precise and permanent to be relied on by the DNS.\n   Perhaps more important,\
    \ the discussions leading to nameprep also\n   identified several areas in which\
    \ the UTC definitions are inadequate,\n   at least without additional information,\
    \ to make matching precise and\n   unambiguous.  In some of these cases, the Unicode\
    \ Standard permits\n   several alternate approaches, none of which are an exact\
    \ and obvious\n   match to DNS needs.  That has left these sensitive choices up\
    \ to\n   IETF, which lacks sufficient in-depth expertise, much less any\n   mechanism\
    \ for deciding to optimize one language at the expense of\n   another.\n   For\
    \ example, it is tempting to define some rules on the basis of\n   membership\
    \ in particular scripts, or for punctuation characters, but\n   there is no precise\
    \ definition of what characters belong to which\n   script or which ones are,\
    \ or are not, punctuation.  The existence of\n   these areas of vagueness raises\
    \ two issues: whether trying to do\n   precise matching at the character set level\
    \ is actually possible\n   (addressed below) and whether driving toward more precision\
    \ could\n   create issues that cause instability in the implementation and\n \
    \  resolution models for the DNS.\n   The Unicode definition also evolves.  Version\
    \ 3.2 appeared shortly\n   after work on this document was initiated.  It added\
    \ some characters\n   and functionality and included a few minor incompatible\
    \ code point\n   changes.  IETF has secured an agreement about constraints on\
    \ future\n   changes, but it remains to be seen how that agreement will work out\n\
    \   in practice.  The prognosis actually appears poor at this stage,\n   since\
    \ UTC chose to ballot a recent possible change which should have\n   been prohibited\
    \ by the agreement (the outcome of the ballot is not\n   relevant, only that the\
    \ ballot was issued rather than having the\n   result be a foregone conclusion).\
    \  However, some members of the\n   community consider some of the changes between\
    \ Unicode 3.0 and 3.1\n   and between 3.1 and 3.2, as well as this recent ballot,\
    \ to be\n   evidence of instability and that these instabilities are better\n\
    \   handled in a system that can be more flexible about handling of\n   characters,\
    \ scripts, and ancillary information than the DNS.\n   In addition, because the\
    \ systems implications of internationalization\n   are considered out of scope\
    \ in SC2, ISO/IEC JTC1 has assigned some of\n   those issues to its SC22/WG20\
    \ (the Internationalization working group\n   within the subcommittee that deals\
    \ with programming languages,\n   systems, and environments).  WG20 has historically\
    \ dealt with\n   internationalization issues thoughtfully and in depth, but its\
    \ status\n   has several times been in doubt in recent years.  However, assignment\n\
    \   of these matters to WG20 increases the risk of eventual ISO\n   internationalization\
    \ standards that specify different behavior than\n   the UTC specifications.\n"
- title: 4.5 Audiences, End Users, and the User Interface Problem
  contents:
  - "4.5 Audiences, End Users, and the User Interface Problem\n   Part of what has\
    \ \"caused\" the DNS internationalization problem, as\n   well as the DNS trademark\
    \ problem and several others, is that we have\n   stopped thinking about \"identifiers\
    \ for objects\" -- which normal\n   people are not expected to see -- and started\
    \ thinking about \"names\"\n   -- strings that are expected not only to be readable,\
    \ but to have\n   linguistically-sensible and culturally-dependent meaning to\
    \ non-\n   specialist users.\n   Within the IETF, the IDN-WG, and sometimes other\
    \ groups, avoided\n   addressing the implications of that transition by taking\
    \ \"outside our\n   scope -- someone else's problem\" approaches or by suggesting\
    \ that\n   people will just become accustomed to whatever conventions are\n  \
    \ adopted.  The realities of user and vendor behavior suggest that\n   these approaches\
    \ will not serve the Internet community well in the\n   long term:\n   o  If we\
    \ want to make it a problem in a different part of the user\n      interface structure,\
    \ we need to figure out where it goes in order\n      to have proof of concept\
    \ of our solution.  Unlike vendors whose\n      sole [business] model is the selling\
    \ or registering of names, the\n      IETF must produce solutions that actually\
    \ work, in the\n      applications context as seen by the end user.\n   o  The\
    \ principle that \"they will get used to our conventions and\n      adapt\" is\
    \ fine if we are writing rules for programming languages\n      or an API.  But\
    \ the conventions under discussion are not part of a\n      semi-mathematical\
    \ system, they are deeply ingrained in culture.\n      No matter how often an\
    \ English-speaking American is told that the\n      Internet requires that the\
    \ correct spelling of \"colour\" be used,\n      he or she isn't going to be convinced.\
    \ Getting a French-speaker in\n      Lyon to use exactly the same lexical conventions\
    \ as a French-\n      speaker in Quebec in order to accommodate the decisions\
    \ of the\n      IETF or of a registrar or registry is just not likely.  \"Montreal\"\
    \n      is either a misspelling or an anglicization of a similar word with\n \
    \     an acute accent mark over the \"e\" (i.e., using the Unicode\n      character\
    \ U+00E9 or one of its equivalents). But global agreement\n      on a rule that\
    \ will determine whether the two forms should match\n      -- and that won't astonish\
    \ end users and speakers of one language\n      or the other -- is as unlikely\
    \ as agreement on whether\n      \"misspelling\" or \"anglicization\" is the greater\
    \ travesty.\n   More generally, it is not clear that the outcome of any conceivable\n\
    \   nameprep-like process is going to be good enough for practical,\n   user-level,\
    \ use.  In the use of human languages by humans, there are\n   many cases in which\
    \ things that do not match are nonetheless\n   interpreted as matching.  The Norwegian/Danish\
    \ character that appears\n   in U+00F8 (visually, a lower case 'o' overstruck\
    \ with a forward\n   slash) and the \"o-umlaut\" German character that appears\
    \ in U+00F6\n   (visually, a lower case 'o' with diaeresis (or umlaut)) are clearly\n\
    \   different and no matching program should yield an \"equal\" comparison.\n\
    \   But they are more similar to each other than either of them is to,\n   e.g.,\
    \ \"e\".  Humans are able to mentally make the correction in\n   context, and\
    \ do so easily, and they can be surprised if computers\n   cannot do so.  Worse,\
    \ there is a Swedish character whose appearance\n   is identical to the German\
    \ o-umlaut, and which shares code point\n   U+00F6, but that, if the languages\
    \ are known and the sounds of the\n   letters or meanings of words including the\
    \ character are considered,\n   actually should match the Norwegian/Danish use\
    \ of U+00F8.\n   This text uses examples in Roman scripts because it is being\
    \ written\n   in English and those examples are relatively easy to render.  But\
    \ one\n   of the important lessons of the discussions about domain name\n   internationalization\
    \ in recent years is that problems similar to\n   those described above exist\
    \ in almost every language and script.\n   Each one has its idiosyncrasies, and\
    \ each set of idiosyncracies is\n   tied to common usage and cultural issues that\
    \ are very familiar in\n   the relevant group, and often deeply held as cultural\
    \ values.  As\n   long as a schoolchild in the US can get a bad grade on a spelling\n\
    \   test for using a perfectly valid British spelling, or one in France\n   or\
    \ Germany can get a poor grade for leaving off a diacritical mark,\n   there are\
    \ issues with the relevant language.  Similarly, if children\n   in Egypt or Israel\
    \ are taught that it is acceptable to write a word\n   with or without vowels\
    \ or stress marks, but that, if those marks are\n   included, they must be the\
    \ correct ones, or a user in Korea is\n   potentially offended or astonished by\
    \ out-of-order sequences of Jamo,\n   systems based on character-at-a-time processing\
    \ and simplistic\n   matching, with no contextual information, are not going to\
    \ satisfy\n   user needs.\n   Users are demanding solutions that deal with language\
    \ and culture.\n   Systems of identifier symbol-strings that serve specialists\
    \ or\n   computers are, at best, a solution to a rather different (and, at the\n\
    \   time this document was written, somewhat ill-defined), problem.  The\n   recent\
    \ efforts have made it ever more clear that, if we ignore the\n   distinction\
    \ between the user requirements and narrowly-defined\n   identifiers, we are solving\
    \ an insufficient problem.  And,\n   conversely, the approaches that have been\
    \ proposed to approximate\n   solutions to the user requirement may be far more\
    \ complex than simple\n   identifiers require.\n"
- title: 4.6 Business Cards and Other Natural Uses of Natural Languages
  contents:
  - "4.6 Business Cards and Other Natural Uses of Natural Languages\n   Over the last\
    \ few centuries, local conventions have been established\n   in various parts\
    \ of the world for dealing with multilingual\n   situations.  It may be helpful\
    \ to examine some of these.  For\n   example, if one visits a country where the\
    \ language is different from\n   ones own, business cards are often printed on\
    \ two sides, one side in\n   each language.  The conventions are not completely\
    \ consistent and the\n   technique assumes that recipients will be tolerant. Translations\
    \ of\n   names or places are attempted in some situations and transliterations\n\
    \   in others.  Since it is widely understood that exact translations or\n   transliterations\
    \ are often not possible, people typically smile at\n   errors, appreciate the\
    \ effort, and move on.\n   The DNS situation differs from these practices in at\
    \ least two ways.\n   Since a global solution is required, the business card would\
    \ need a\n   number of sides approximating the number of languages in the world,\n\
    \   which is probably impossible without violating laws of physics.  More\n  \
    \ important, the opportunities for tolerance don't exist:  the DNS\n   requires\
    \ a exact match or the lookup fails.\n"
- title: 4.7 ASCII Encodings and the Roman Keyboard Assumption
  contents:
  - "4.7 ASCII Encodings and the Roman Keyboard Assumption\n   Part of the argument\
    \ for ACE-based solutions is that they provide an\n   escape for multilingual\
    \ environments when applications have not been\n   upgraded.  When an older application\
    \ encounters an ACE-based name,\n   the assumption is that the (admittedly ugly)\
    \ ASCII-coded string will\n   be displayed and can be typed in.  This argument\
    \ is reasonable from\n   the standpoint of mixtures of Roman-based alphabets,\
    \ but may not be\n   relevant if user-level systems and devices are involved that\
    \ do not\n   support the entry of Roman-based characters or which cannot\n   conveniently\
    \ render such characters.  Such systems are few in the\n   world today, but the\
    \ number can reasonably be expected to rise as the\n   Internet is increasingly\
    \ used by populations whose primary concern is\n   with local issues, local information,\
    \ and local languages.  It is,\n   for example, fairly easy to imagine populations\
    \ who use Arabic or\n   Thai scripts and who do not have routine access to scripts\
    \ or input\n   devices based on Roman-derived alphabets.\n"
- title: 4.8 Intra-DNS Approaches for "Multilingual Names"
  contents:
  - "4.8 Intra-DNS Approaches for \"Multilingual Names\"\n   It appears, from the\
    \ cases above and others, that none of the intra-\n   DNS-based solutions for\
    \ \"multilingual names\" are workable.  They rest\n   on too many assumptions\
    \ that do not appear to be feasible -- that\n   people will adapt deeply-entrenched\
    \ language habits to conventions\n   laid down to make the lives of computers\
    \ easy; that we can make\n   \"freeze it now, no need for changes in these areas\"\
    \ decisions about\n   Unicode and nameprep; that ACE will smooth over applications\n\
    \   problems, even in environments without the ability to key or render\n   Roman-based\
    \ glyphs (or where user experience is such that such glyphs\n   cannot easily\
    \ be distinguished from each other); that the Unicode\n   Consortium will never\
    \ decide to repair an error in a way that creates\n   a risk of DNS incompatibility;\
    \ that we can either deploy EDNS\n   [RFC2671] or that long names are not really\
    \ important; that Japanese\n   and Chinese computer users (and others) will either\
    \ give up their\n   local or IS 2022-based character coding solutions (for which\
    \ addition\n   of a large fraction of a million new code points to Unicode is\
    \ almost\n   certainly a necessary, but probably not sufficient, condition) or\n\
    \   build leakproof and completely accurate boundary conversion\n   mechanisms;\
    \ that out of band or contextual information will always be\n   sufficient for\
    \ the \"map glyph onto script\" problem; and so on.  In\n   each case, it is likely\
    \ that about 80% or 90% of cases will work\n   satisfactorily, but it is unlikely\
    \ that such partial solutions will\n   be good enough.  For example, suppose someone\
    \ can spell her name 90%\n   correctly, or a company name is matched correctly\
    \ 80% of the time but\n   the other 20% of attempts identify a competitor: are\
    \ either likely to\n   be considered adequate?\n"
- title: '5. Search-based Systems: The Key Controversies'
  contents:
  - "5. Search-based Systems: The Key Controversies\n   For many years, a common response\
    \ to requirements to locate people or\n   resources on the Internet has been to\
    \ invoke the term \"directory\".\n   While an in-depth analysis of the reasons\
    \ would require a separate\n   document, the history of failure of these invocations\
    \ has given\n   \"directory\" efforts a bad reputation.  The effort proposed here\
    \ is\n   different from those predecessors for several reasons, perhaps the\n\
    \   most important of which is that it focuses on a fairly-well-\n   understood\
    \ set of problems and needs, rather than on finding uses for\n   a particular\
    \ technology.\n   As suggested in some of the text above, it is an open question\
    \ as to\n   whether the needs of the community would be best served by a single\n\
    \   (even if functionally, and perhaps administratively, distributed)\n   directory\
    \ with universal applicability, a single directory that\n   supports locally-tailored\
    \ search (and, most important, matching)\n   functions, or multiple, locally-determined,\
    \ directories.  Each has\n   its attractions.  Any but the first would essentially\
    \ prevent\n   reverse-mapping (determination of the user-visible name of the host\n\
    \   or resource from target information such as an address or DNS name).\n   But\
    \ reverse mapping has become less useful over the years --at least\n   to users\
    \ -- as more and more names have been associated with many\n   host addresses\
    \ and as CIDR [CIDR] has proven problematic for mapping\n   smaller address blocks\
    \ to meaningful names.\n   Locally-tailored searches and mappings would permit\
    \ national\n   variations on interpretation of which strings matched which other\n\
    \   ones, an arrangement that is especially important when different\n   localities\
    \ apply different rules to, e.g., matching of characters\n   with and without\
    \ diacriticals.  But, of course, this implies that a\n   URL may evaluate properly\
    \ or not depending on either settings on a\n   client machine or the network connectivity\
    \ of the user.  That is not,\n   in general, a desirable situation, since it implies\
    \ that users could\n   not, in the general case, share URLs (or other host references)\
    \ and\n   that a particular user might not be able to carry references from one\n\
    \   host or location to another.\n   And, of course, completely separate directories\
    \ would permit\n   translation and transliteration functions to be embedded in\
    \ the\n   directory, giving much of the Internet a different appearance\n   depending\
    \ on which directory was chosen.  The attractions of this are\n   obvious, but,\
    \ unless things were very carefully designed to preserve\n   uniqueness and precise\
    \ identities at the right points (which may or\n   may not be possible), such\
    \ a system would have many of the\n   difficulties associated with multiple DNS\
    \ roots.\n   Finally, a system of separate directories and databases, if coupled\n\
    \   with removal of the DNS-imposed requirement for unique names, would\n   largely\
    \ eliminate the need for a single worldwide authority to manage\n   the top of\
    \ the naming hierarchy.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The set of proposals implied by this document\
    \ suggests an interesting\n   set of security issues (i.e., nothing important\
    \ is ever easy).  A\n   directory system used for locating network resources would\
    \ presumably\n   need to be as carefully protected against unauthorized changes\
    \ as the\n   DNS itself.  There also might be new opportunities for problems in\
    \ an\n   arrangement involving two or more (sub)layers, especially if such a\n\
    \   system were designed without central authority or uniqueness of\n   names.\
    \  It is uncertain how much greater those risks would be as\n   compared to a\
    \ DNS lookup sequence that involved looking up one name,\n   getting back information,\
    \ and then doing additional lookups\n   potentially in different subtrees.  That\
    \ multistage lookup will often\n   be the case with, e.g., NAPTR records [RFC\
    \ 2915] unless additional\n   restrictions are imposed.  But additional steps,\
    \ systems, and\n   databases almost certainly involve some additional risks of\n\
    \   compromise.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1 Normative References
  contents:
  - "7.1 Normative References\n   None\n"
- title: 7.2 Explanatory and Informative References
  contents:
  - "7.2 Explanatory and Informative References\n   [Albitz]       Any of the editions\
    \ of Albitz, P. and C. Liu, DNS and\n                  BIND, O'Reilly and Associates,\
    \ 1992, 1997, 1998, 2001.\n   [ASCII]        American National Standards Institute\
    \ (formerly United\n                  States of America Standards Institute),\
    \ X3.4, 1968,\n                  \"USA Code for Information Interchange\". ANSI\
    \ X3.4-1968\n                  has been replaced by newer versions with slight\n\
    \                  modifications, but the 1968 version remains definitive\n  \
    \                for the Internet.  Some time after ASCII was first\n        \
    \          formulated as a standard, ISO adopted international\n             \
    \     standard 646, which uses ASCII as a base.  IS 646\n                  actually\
    \ contained two code tables: an \"International\n                  Reference Version\"\
    \ (often referenced as ISO 646-IRV)\n                  which was essentially identical\
    \ to the ASCII of the\n                  time, and a \"Basic Version\" (ISO 646-BV),\
    \ which\n                  designates a number of character positions for\n  \
    \                national use.\n   [CIDR]         Fuller, V., Li, T., Yu, J. and\
    \ K. Varadhan, \"Classless\n                  Inter-Domain Routing (CIDR): an\
    \ Address Assignment and\n                  Aggregation Strategy\", RFC 1519,\
    \ September 1993.\n                  Eidnes, H., de Groot, G. and P. Vixie, \"\
    Classless IN-\n                  ADDR.ARPA delegation\", RFC 2317, March 1998.\n\
    \   [COM-SIZE]     Size information supplied by Verisign Global Registry\n   \
    \               Services (the zone administrator, or \"registry\n            \
    \      operator\", for COM, see [REGISTRAR], below) to ICANN,\n              \
    \    third quarter 2002.\n   [DNS-Search]   Klensin, J., \"A Search-based access\
    \ model for the\n                  DNS\", Work in Progress.\n   [FINGER]     \
    \  Zimmerman, D., \"The Finger User Information Protocol\",\n                \
    \  RFC 1288, December 1991.\n                  Harrenstien, K., \"NAME/FINGER\
    \ Protocol\", RFC 742,\n                  December 1977.\n   [IAB-OPES]     Floyd,\
    \ S. and L. Daigle, \"IAB Architectural and Policy\n                  Considerations\
    \ for Open Pluggable Edge Services\", RFC\n                  3238, January 2002.\n\
    \   [IQUERY]       Lawrence, D., \"Obsoleting IQUERY\", RFC 3425, November\n \
    \                 2002.\n   [IS646]        ISO/IEC 646:1991 Information technology\
    \ -- ISO 7-bit\n                  coded character set for information interchange\n\
    \   [IS10646]      ISO/IEC 10646-1:2000 Information technology --\n          \
    \        Universal Multiple-Octet Coded Character Set (UCS) --\n             \
    \     Part 1: Architecture and Basic Multilingual Plane and\n                \
    \  ISO/IEC 10646-2:2001 Information technology --\n                  Universal\
    \ Multiple-Octet Coded Character Set (UCS) --\n                  Part 2: Supplementary\
    \ Planes\n   [MINC]         The Multilingual Internet Names Consortium,\n    \
    \              http://www.minc.org/ has been an early advocate for\n         \
    \         the importance of expansion of DNS names to\n                  accommodate\
    \ non-ASCII characters.  Some of their\n                  specific proposals,\
    \ while helping people to understand\n                  the problems better, were\
    \ not compatible with the\n                  design of the DNS.\n   [NAPTR]  \
    \      Mealling, M. and R. Daniel, \"The Naming Authority\n                  Pointer\
    \ (NAPTR) DNS Resource Record\", RFC 2915,\n                  September 2000.\n\
    \                  Mealling, M., \"Dynamic Delegation Discovery System\n     \
    \             (DDDS) Part One: The Comprehensive DDDS\", RFC 3401,\n         \
    \         October 2002.\n                  Mealling, M., \"Dynamic Delegation\
    \ Discovery System\n                  (DDDS) Part Two: The Algorithm\", RFC 3402,\
    \ October\n                  2002.\n                  Mealling, M., \"Dynamic\
    \ Delegation Discovery System\n                  (DDDS) Part Three: The Domain\
    \ Name System (DNS)\n                  Database\", RFC 3403, October 2002.\n \
    \  [REGISTRAR]    In an early stage of the process that created the\n        \
    \          Internet Corporation for Assigned Names and Numbers\n             \
    \     (ICANN), a \"Green Paper\" was released by the US\n                  Government.\
    \   That paper introduced new terminology\n                  and some concepts\
    \ not needed by traditional DNS\n                  operations.  The term \"registry\"\
    \ was applied to the\n                  actual operator and database holder of\
    \ a domain\n                  (typically at the top level, since the Green Paper\
    \ was\n                  little concerned with anything else), while\n       \
    \           organizations that marketed names and made them\n                \
    \  available to \"registrants\" were known as \"registrars\".\n              \
    \    In the classic DNS model, the function of \"zone\n                  administrator\"\
    \ encompassed both registry and registrar\n                  roles, although that\
    \ model did not anticipate a\n                  commercial market in names.\n\
    \   [RFC625]       Kudlick, M. and E. Feinler, \"On-line hostnames\n         \
    \         service\", RFC 625, March 1974.\n   [RFC734]       Crispin, M., \"SUPDUP\
    \ Protocol\", RFC 734, October 1977.\n   [RFC811]       Harrenstien, K., White,\
    \ V. and E. Feinler, \"Hostnames\n                  Server\", RFC 811, March 1982.\n\
    \   [RFC819]       Su, Z. and J. Postel, \"Domain naming convention for\n    \
    \              Internet user applications\", RFC 819, August 1982.\n   [RFC830]\
    \       Su, Z., \"Distributed system for Internet name\n                  service\"\
    , RFC 830, October 1982.\n   [RFC882]       Mockapetris, P., \"Domain names: Concepts\
    \ and\n                  facilities\", RFC 882, November 1983.\n   [RFC883]  \
    \     Mockapetris, P., \"Domain names: Implementation\n                  specification\"\
    , RFC 883, November 1983.\n   [RFC952]       Harrenstien, K, Stahl, M. and E.\
    \ Feinler, \"DoD\n                  Internet host table specification\", RFC 952,\
    \ October\n                  1985.\n   [RFC953]       Harrenstien, K., Stahl,\
    \ M. and E. Feinler, \"HOSTNAME\n                  SERVER\", RFC 953, October\
    \ 1985.\n   [RFC1034]      Mockapetris, P., \"Domain names, Concepts and\n   \
    \               facilities\", STD 13, RFC 1034, November 1987.\n   [RFC1035] \
    \     Mockapetris, P., \"Domain names - implementation and\n                 \
    \ specification\", STD 13, RFC 1035, November 1987.\n   [RFC1591]      Postel,\
    \ J., \"Domain Name System Structure and\n                  Delegation\", RFC\
    \ 1591, March 1994.\n   [RFC2181]      Elz, R. and  R. Bush, \"Clarifications\
    \ to the DNS\n                  Specification\", RFC 2181, July 1997.\n   [RFC2295]\
    \      Holtman, K. and A. Mutz, \"Transparent Content\n                  Negotiation\
    \ in HTTP\", RFC 2295, March 1998\n   [RFC2396]      Berners-Lee, T., Fielding,\
    \ R. and L. Masinter,\n                  \"Uniform Resource Identifiers (URI):\
    \ Generic Syntax\",\n                  RFC 2396, August 1998.\n   [RFC2608]  \
    \    Guttman, E., Perkins, C., Veizades, J. and M. Day,\n                  \"\
    Service Location Protocol, Version 2\", RFC 2608, June\n                  1999.\n\
    \   [RFC2671]      Vixie, P., \"Extension Mechanisms for DNS (EDNS0)\", RFC\n\
    \                  2671, August 1999.\n   [RFC2825]      IAB, Daigle, L., Ed.,\
    \ \"A Tangled Web: Issues of I18N,\n                  Domain Names, and the Other\
    \ Internet protocols\", RFC\n                  2825, May 2000.\n   [RFC2826] \
    \     IAB, \"IAB Technical Comment on the Unique DNS Root\",\n               \
    \   RFC 2826, May 2000.\n   [RFC2972]      Popp, N., Mealling, M., Masinter, L.\
    \ and K. Sollins,\n                  \"Context and Goals for Common Name Resolution\"\
    , RFC\n                  2972, October 2000.\n   [RFC3305]      Mealling, M. and\
    \ R. Denenberg, Eds., \"Report from the\n                  Joint W3C/IETF URI\
    \ Planning Interest Group: Uniform\n                  Resource Identifiers (URIs),\
    \ URLs, and Uniform\n                  Resource Names (URNs):  Clarifications\
    \ and\n                  Recommendations\", RFC 3305, August 2002.\n   [RFC3439]\
    \      Bush, R. and D. Meyer, \"Some Internet Architectural\n                \
    \  Guidelines and Philosophy\", RFC 3439, December 2002.\n   [Seng]         Seng,\
    \ J., et al., Eds., \"Internationalized Domain\n                  Names:  Registration\
    \ and Administration Guideline for\n                  Chinese, Japanese, and Korean\"\
    , Work in Progress.\n   [STRINGPREP]   Hoffman, P. and M. Blanchet, \"Preparation\
    \ of\n                  Internationalized Strings (stringprep)\", RFC 3454,\n\
    \                  December 2002.\n                  The particular profile used\
    \ for placing\n                  internationalized strings in the DNS is called\n\
    \                  \"nameprep\", described in Hoffman, P. and M. Blanchet,\n \
    \                 \"Nameprep: A Stringprep Profile for Internationalized\n   \
    \               Domain Names\", Work in Progress.\n   [TELNET]       Postel, J.\
    \ and J. Reynolds, \"Telnet Protocol\n                  Specification\", STD 8,\
    \ RFC 854, May 1983.\n                  Postel, J. and J. Reynolds, \"Telnet Option\n\
    \                  Specifications\", STD 8, RFC 855, May 1983.\n   [UNICODE] \
    \     The Unicode Consortium, The Unicode Standard, Version\n                \
    \  3.0, Addison-Wesley: Reading, MA, 2000.  Update to\n                  version\
    \ 3.1, 2001.  Update to version 3.2, 2002.\n   [UTR15]        Davis, M. and M.\
    \ Duerst, \"Unicode Standard Annex #15:\n                  Unicode Normalization\
    \ Forms\", Unicode Consortium,\n                  March 2002.  An integral part\
    \ of The Unicode Standard,\n                  Version 3.1.1.  Available at\n \
    \                 (http://www.unicode.org/reports/tr15/tr15-21.html).\n   [WHOIS]\
    \        Harrenstien, K, Stahl, M. and E. Feinler,\n                  \"NICNAME/WHOIS\"\
    , RFC 954, October 1985.\n   [WHOIS-UPDATE] Gargano, J. and K. Weiss, \"Whois\
    \ and Network\n                  Information Lookup Service, Whois++\", RFC 1834,\
    \ August\n                  1995.\n                  Weider, C., Fullton, J. and\
    \ S. Spero, \"Architecture of\n                  the Whois++ Index Service\",\
    \ RFC 1913, February 1996.\n                  Williamson, S., Kosters, M., Blacka,\
    \ D., Singh, J. and\n                  K. Zeilstra, \"Referral Whois (RWhois)\
    \ Protocol V1.5\",\n                  RFC 2167, June 1997;\n                 \
    \ Daigle, L. and P. Faltstrom, \"The\n                  application/whoispp-query\
    \ Content-Type\", RFC 2957,\n                  October 2000.\n               \
    \   Daigle, L. and P. Falstrom, \"The application/whoispp-\n                 \
    \ response Content-type\", RFC 2958, October 2000.\n   [X29]          International\
    \ Telecommuncations Union, \"Recommendation\n                  X.29: Procedures\
    \ for the exchange of control\n                  information and user data between\
    \ a Packet\n                  Assembly/Disassembly (PAD) facility and a packet\
    \ mode\n                  DTE or another PAD\", December 1997.\n"
- title: 8. Acknowledgements
  contents:
  - "8. Acknowledgements\n   Many people have contributed to versions of this document\
    \ or the\n   thinking that went into it.  The author would particularly like to\n\
    \   thank Harald Alvestrand, Rob Austein, Bob Braden, Vinton Cerf, Matt\n   Crawford,\
    \ Leslie Daigle, Patrik Faltstrom, Eric A. Hall, Ted Hardie,\n   Paul Hoffman,\
    \ Erik Nordmark, and Zita Wenzel for making specific\n   suggestions and/or challenging\
    \ the assumptions and presentation of\n   earlier versions and suggesting ways\
    \ to improve them.\n"
- title: 9. Author's Address
  contents:
  - "9. Author's Address\n   John C. Klensin\n   1770 Massachusetts Ave, #322\n  \
    \ Cambridge, MA 02140\n   EMail: klensin+srch@jck.com\n   A mailing list has been\
    \ initiated for discussion of the topics\n   discussed in this document, and closely-related\
    \ issues, at\n   ietf-irnss@lists.elistx.com.  See http://lists.elistx.com/archives/\n\
    \   for subscription and archival information.\n"
- title: 10. Full Copyright Statement
  contents:
  - "10. Full Copyright Statement\n   Copyright (C) The Internet Society (2003). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
