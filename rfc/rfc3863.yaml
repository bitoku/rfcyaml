- title: __initial_text__
  contents:
  - '                Presence Information Data Format (PIDF)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo specifies the Common Profile for Presence (CPP) Presence\n\
    \   Information Data Format (PIDF) as a common presence data format for\n   CPP-compliant\
    \ Presence protocols, and also defines a new media type\n   \"application/pidf+xml\"\
    \ to represent the XML MIME entity for PIDF.\n"
- title: Table of Content
  contents:
  - "Table of Content\n   1.  Introduction . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n       1.1.  Terminology and Conventions. . . . . . . . . . .\
    \ . . . .  3\n   2.  Design Decisions . . . . . . . . . . . . . . . . . . . .\
    \ . . .  3\n       2.1.  Minimal Model. . . . . . . . . . . . . . . . . . . .\
    \ . .  3\n       2.2.  Added Features . . . . . . . . . . . . . . . . . . . .\
    \ .  4\n       2.3.  XML Encoding Decision. . . . . . . . . . . . . . . . . .\
    \  5\n   3.  Overview of Presence Information Data Format . . . . . . . . .  5\n\
    \       3.1.  The 'application/pidf+xml' Content Type. . . . . . . . .  5\n  \
    \     3.2.  Presence Information Contents. . . . . . . . . . . . . .  5\n   4.\
    \  XML-encoded Presence Data Format . . . . . . . . . . . . . . .  6\n       4.1.\
    \  XML Format Definitions . . . . . . . . . . . . . . . . .  6\n             4.1.1.\
    \ The <presence> element. . . . . . . . . . . . . .  6\n             4.1.2. The\
    \ <tuple> element . . . . . . . . . . . . . . .  7\n             4.1.3. The <status>\
    \ element. . . . . . . . . . . . . . .  8\n             4.1.4. The <basic> element\
    \ . . . . . . . . . . . . . . .  8\n             4.1.5. The <contact> element\
    \ . . . . . . . . . . . . . .  8\n             4.1.6. The <note> element. . .\
    \ . . . . . . . . . . . . .  9\n             4.1.7. The <timestamp> element .\
    \ . . . . . . . . . . . .  9\n       4.2.  Presence Information Extensibility\
    \ . . . . . . . . . . . 10\n             4.2.1. XML Namespaces Background . .\
    \ . . . . . . . . . . 10\n             4.2.2. XML Namespaces In Presence Information.\
    \ . . . . . 11\n             4.2.3. Handling Of Unrecognized Element Names. .\
    \ . . . . 12\n             4.2.4. Status Value Extensibility. . . . . . . . .\
    \ . . . 12\n             4.2.5. Standardizing Status Extensions . . . . . . .\
    \ . . 13\n       4.3.  Examples . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 14\n             4.3.1. Default Namespace with Status Extensions. . . . .\
    \ 14\n             4.3.2. Presence with Other Extension Elements. . . . . . 15\n\
    \             4.3.3. Example Mandatory To Understand Elements. . . . . 16\n  \
    \     4.4.  XML Schema Definitions . . . . . . . . . . . . . . . . . 16\n   5.\
    \  IANA Considerations. . . . . . . . . . . . . . . . . . . . . . 18\n       5.1.\
    \  Content-type registration for 'application/pidf+xml' . . 18\n       5.2.  URN\
    \ sub-namespace registration for\n             'urn:ietf:params:xml:ns:pidf'.\
    \ . . . . . . . . . . . . . 19\n       5.3.  URN sub-namespace registration for\n\
    \             'urn:ietf:params:xml:ns:pidf:status' . . . . . . . . . . 20\n  \
    \ 6.  Security Considerations. . . . . . . . . . . . . . . . . . . . 21\n   7.\
    \  Internationalization Considerations. . . . . . . . . . . . . . 22\n   8.  References\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 22\n       8.1.  Normative\
    \ References . . . . . . . . . . . . . . . . . . 22\n       8.2.  Informative\
    \ References . . . . . . . . . . . . . . . . . 23\n   Appendix A. Document Type\
    \ Definitions. . . . . . . . . . . . . . . 25\n   Authors' Addresses . . . . .\
    \ . . . . . . . . . . . . . . . . . . . 26\n   Full Copyright Statement . . .\
    \ . . . . . . . . . . . . . . . . . . 28\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Common Profiles for Instant Messaging (CPIM) [CPIM]\
    \ and Presence\n   (CPP) [CPP] specifications define a set of operations and parameters\n\
    \   to achieve interoperability between different Instant Messaging and\n   Presence\
    \ protocols which meet RFC 2779 [RFC2779].\n   This memo further defines the Presence\
    \ Information Data Format (PIDF)\n   as a common presence data format for CPP-compliant\
    \ presence\n   protocols, allowing presence information to be transferred across\n\
    \   CPP-compliant protocol boundaries without modification, with\n   attendant\
    \ benefits for security and performance.\n   The format specified in this memo\
    \ defines the base presence format\n   and extensibility required by RFC 2779.\
    \  It defines a minimal set of\n   presence status values defined by the IMPP\
    \ Model document [RFC2778].\n   However, a presence application is able to define\
    \ its own status\n   values using the extensibility framework provided by this\
    \ memo.\n   Defining such extended status values is beyond the scope of this\n\
    \   memo.\n   Note also that this memo defines only the format for a presence\
    \ data\n   payload and the extensibility framework for it.  How the presence\n\
    \   data is transferred within a specific protocol frame would be defined\n  \
    \ separately in a protocol specification.\n"
- title: 1.1.  Terminology and Conventions
  contents:
  - "1.1.  Terminology and Conventions\n   This memo makes use of the vocabulary defined\
    \ in the IMPP Model\n   document [RFC2778].  Terms such as CLOSED, INSTANT MESSAGE,\
    \ OPEN,\n   PRESENCE SERVICE, PRESENTITY, WATCHER, and WATCHER USER AGENT in the\n\
    \   memo are used in the same meaning as defined therein.\n   The key words \"\
    MUST\", \"MUST NOT\", \"REQUIRED\", \"SHOULD\", \"SHOULD NOT\",\n   \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this document are to be\n   interpreted as described\
    \ in BCP 14, RFC 2119 [RFC2119].\n"
- title: 2.  Design Decisions
  contents:
  - "2.  Design Decisions\n   We have adopted the IMPP Model and Requirements documents\
    \ [RFC2778,\n   RFC2779] as the starting point of our discussion.  The two RFCs\n\
    \   contain a number of statements about presence information, which can\n   be\
    \ regarded as a basic set of constraints for the format design.\n   Also, we took\
    \ the minimalist approach to the design based on them.\n   Starting from the minimal\
    \ model, only the features that are necessary\n   to solve particular problems\
    \ have been included.\n"
- title: 2.1. Minimal Model
  contents:
  - "2.1. Minimal Model\n   This specification is based on the minimal model extracted\
    \ from the\n   IMPP Model and Requirements documents.  The model consists of the\n\
    \   following items.  Each of them is accompanied with the corresponding\n   RFCs\
    \ and their section numbers as its grounds, e.g.,\n   (RFC2778:Sec.2.4) refers\
    \ to Section 2.4 of RFC 2778.\n   (a) PRESENCE INFORMATION consists of one or\
    \ more PRESENCE TUPLES,\n       where a PRESENCE TUPLE consists of a STATUS, an\
    \ optional\n       COMMUNICATION ADDRESS, and optional OTHER PRESENCE MARKUP.\
    \  Note\n       that the CONTACT ADDRESS in a COMMUNICATIONS ADDRESS is\n    \
    \   understood in this document to refer only to a URI\n       (RFC2778:Sec.3).\n\
    \   (b) STATUS has at least the mutually-exclusive values OPEN and\n       CLOSED,\
    \ which have meaning for the acceptance of INSTANT\n       MESSAGES, and may have\
    \ meaning for other COMMUNICATION MEANS.\n       There may be other values of\
    \ STATUS that do not imply anything\n       about INSTANT MESSAGE acceptance.\
    \  These other values of STATUS\n       may be combined with OPEN and CLOSED or\
    \ they may be mutually-\n       exclusive with those values (RFC2778:Sec.3, RFC2779:Sec.4.4.1-\n\
    \       4.4.3).\n   (c) STATUS may consist of single or multiple values.(RFC2778:Sec.2.4)\n\
    \   (d) There must be a means of extending the common presence format to\n   \
    \    represent additional information not included in the common\n       format.\
    \  The extension and registration mechanisms must be\n       defined for presence\
    \ information schema, including new STATUS\n       conditions and new forms for\
    \ OTHER PRESENCE MARKUP\n       (RFC2779:Sec.3.1.4-3.1.5).\n   (e) The common\
    \ presence format must include a means to uniquely\n       identify the PRESENTITY\
    \ whose PRESENCE INFORMATION is reported\n       (RFC2779:Sec.3.1.2).\n   (f)\
    \ The common presence format must allow the PRESENTITY to secure\n       presence\
    \ information sent to a WATCHER.  The format must allow\n       integrity, confidentiality\
    \ and authentication properties to be\n       applied to presence information\
    \ (RFC2779:Sec5.2.1, 5.2.4, 5.3.1,\n       5.3.3).\n"
- title: 2.2.  Added Features
  contents:
  - "2.2.  Added Features\n   In addition to the minimal model described above, the\
    \ format\n   specified in this specification has the following features.\n   (a)\
    \ Relative priorities of contact addresses are specifiable in order\n        to\
    \ allow the source of PRESENCE INFORMATION to tell the receiver\n        (WATCHER\
    \ USER AGENTS) its preference over multiple contact\n        means.\n   (b) The\
    \ presence format is able to contain the timestamp of the\n        creation of\
    \ the PRESENCE INFORMATION.  The timestamp in the\n        presence document lets\
    \ the receiver know the time of the\n        creation of the data even if the\
    \ message containing it is\n        delayed.  It can also be used to detect a\
    \ replay attack,\n        independent of the underlying signature mechanism. \
    \ Note that\n        this mechanism does not assume any global time synchronization\n\
    \        system for watchers and presentities (see Appendix A of RFC2779,\n  \
    \      8.1.4 A7), but rather assumes that the minimum length of time\n       \
    \ that might pass before presence information is considered stale\n        is\
    \ long enough that minor variations among system clocks will\n        not lead\
    \ to misjudgments of the freshness of presence\n        information.\n"
- title: 2.3.  XML Encoding Decision
  contents:
  - "2.3.  XML Encoding Decision\n   The Presence Information Data Format encodes\
    \ presence information in\n   XML (eXtensible Markup Language [XML]).  Regarding\
    \ the features of\n   PRESENCE INFORMATION discussed above, such that it has a\
    \ hierarchical\n   structure and it should be fully extensible, XML is considered\
    \ as the\n   most desirable framework over other candidates such as vCard [vCard].\n"
- title: 3.  Overview of Presence Information Data Format
  contents:
  - "3.  Overview of Presence Information Data Format\n   This section describes an\
    \ overview of the presence data format\n   defined in this memo.\n"
- title: 3.1.  The 'application/pidf+xml' Content Type
  contents:
  - "3.1.  The 'application/pidf+xml' Content Type\n   This memo defines a new content\
    \ type \"application/pidf+xml\" for an\n   XML MIME entity that contains presence\
    \ information.  This\n   specification follows the recommendations and conventions\
    \ described\n   in [RFC3023], including the naming convention of the type ('+xml'\n\
    \   suffix) and the usage of the 'charset' parameter.\n   Although it is defined\
    \ as optional, use of the 'charset' parameter is\n   RECOMMENDED.  If the 'charset'\
    \ parameter is not specified, conforming\n   XML processors MUST follow the requirements\
    \ in section 4.3.3 of\n   [XML].\n"
- title: 3.2.  Presence Information Contents
  contents:
  - "3.2.  Presence Information Contents\n   This subsection outlines the information\
    \ in an \"application/pidf+xml\"\n   document.  A full definition of the PIDF\
    \ content is in Section 4.\n   o PRESENTITY URL: specifies the \"pres\" URL of\
    \ the PRESENTITY.\n   o List of PRESENCE TUPLES\n     - Identifier: token to identify\
    \ this tuple within the presence\n       information.\n     - STATUS: OPEN/CLOSED\
    \ and/or extension status values.\n     - COMMUNICATION ADDRESS: COMMUNICATION\
    \ MEANS and CONTACT\n         ADDRESS of this tuple. (optional)\n     - Relative\
    \ priority: numerical value specifying the priority\n         of this COMMUNICATION\
    \ ADDRESS. (optional)\n     - Timestamp: timestamp of the change of this tuple.(optional)\n\
    \     - Human readable comment: free text memo about this tuple\n         (optional)\n\
    \   o PRESENTITY human readable comment: free text memo about the\n       PRESENTITY\
    \ (optional).\n"
- title: 4.  XML-encoded Presence Data Format
  contents:
  - "4.  XML-encoded Presence Data Format\n   This section defines an XML-encoded\
    \ presence information data format\n   (PIDF) for use with CPP compliant systems.\
    \  A presence payload in\n   this format is expected to be produced by the PRESENTITY\
    \ (the source\n   of the PRESENCE INFORMATION) and transported to the WATCHERS\
    \ by the\n   presence servers or gateways without any interpretation or\n   modification.\n"
- title: 4.1.  XML Format Definitions
  contents:
  - "4.1.  XML Format Definitions\n   A PIDF object is a well formed XML document.\n\
    \   It MUST have the XML declaration and it SHOULD contain an encoding\n   declaration\
    \ in the XML declaration, e.g., \"<?xml version='1.0'\n   encoding='UTF-8'?>\"\
    .  If the charset parameter of the MIME content\n   type declaration is present\
    \ and it is different from the encoding\n   declaration, the charset parameter\
    \ takes precedence.\n   Every application conformant to this specification MUST\
    \ accept the\n   UTF-8 character encoding to ensure the minimal interoperability.\n"
- title: 4.1.1.  The <presence> element
  contents:
  - "4.1.1.  The <presence> element\n   PIDF elements are associated with the XML\
    \ namespace name\n   'urn:ietf:params:xml:ns:pidf', declared using an xmlns attribute,\
    \ per\n   [XML-NS].  The namespace may be a default namespace, or may be\n   associated\
    \ with some namespace prefix (see section 4.2.2 for\n   examples).\n   The root\
    \ of an \"application/pidf+xml\" object is a <presence> element\n   associated\
    \ with the presence information namespace.  This contains\n   any number (including\
    \ 0) of <tuple> elements, followed by any number\n   (including 0) of <note> elements,\
    \ followed by any number of OPTIONAL\n   extension elements from other namespaces.\n\
    \   The <presence> element MUST have an 'entity' attribute.  The value of\n  \
    \ the 'entity' attribute is the 'pres' URL of the PRESENTITY publishing\n   this\
    \ presence document.\n   The <presence> element MUST contain a namespace declaration\
    \ ('xmlns')\n   to indicate the namespace on which the presence document is based.\n\
    \   The presence document compliant to this specification MUST have the\n   namespace\
    \ 'urn:ietf:params:xml:ns:pidf:'.\n   It MAY contain other namespace declarations\
    \ for the extensions used\n   in the presence XML document.\n"
- title: 4.1.2.  The <tuple> element
  contents:
  - "4.1.2.  The <tuple> element\n   The <tuple> element carries a PRESENCE TUPLE,\
    \ consisting of a\n   mandatory <status> element, followed by any number of OPTIONAL\n\
    \   extension elements (possibly from other namespaces), followed by an\n   OPTIONAL\
    \ <contact> element, followed by any number of OPTIONAL <note>\n   elements, followed\
    \ by an OPTIONAL <timestamp> element.\n   Tuples provide a way of segmenting presence\
    \ information.  Protocols\n   or applications may choose to segment the presence\
    \ information\n   associated with a presentity for any number of reasons - for\
    \ example,\n   because components of the full presence information for a presentity\n\
    \   have come from distinct devices or different applications on the same\n  \
    \ device, or have been generated at different times.  Tuples should be\n   preferred\
    \ over other manners of segmenting presence information such\n   as creating multiple\
    \ PIDF instances.\n   The <tuple> element MUST contain an 'id' attribute which\
    \ is used to\n   distinguish this tuple from other tuples in the same PRESENTITY.\
    \  The\n   value of an 'id' attribute MUST be unique within 'id' attribute\n \
    \  values of other tuples for the same PRESENTITY.  An 'id' value is\n   used\
    \ by applications processing the presence document to identify the\n   corresponding\
    \ tuple in the previously acquired PRESENCE INFORMATION\n   of the same PRESENTITY.\
    \  The value of the 'id' attribute is an\n   arbitrary string, and has no significance\
    \ beyond providing a means to\n   distinguish <tuple> values, as noted above.\n\
    \   The <contact> element is OPTIONAL because a PRESENTITY might need to\n   hide\
    \ its COMMUNICATION ADDRESS or there might be tuples not related\n   to any COMMUNICATION\
    \ MEANS.  Tuples that contain a <basic> status\n   element SHOULD contain a <contact>\
    \ address.  Tuples MAY contain\n   conflicting presence status - one <tuple> might\
    \ provide a <basic>\n   <status> of OPEN, and another <tuple> in the same PIDF\
    \ could contain\n   a <basic> <status> of CLOSED, even if they both contain the\
    \ same\n   <contact> address.\n   The manner in which segmented presence information\
    \ is understood by\n   the WATCHER USER AGENT is highly dependent on the capabilities\
    \ of the\n   WATCHER USER AGENT and the presence application in question.  In\
    \ the\n   absence of any application-specific or protocol-specific\n   understanding\
    \ of the meaning of tuples, WATCHER USER AGENTS MAY obey\n   the following guidelines.\
    \  WATCHER USER AGENTS should note which\n   tuples in the PIDF have changed their\
    \ state since the last\n   notification by correlating the 'id' of each <tuple>\
    \ with those\n   received in previous notifications and comparing both <status>\
    \ values\n   and <timestamp> elements in the tuples, if any are present.\n"
- title: 4.1.3.  The <status> element
  contents:
  - "4.1.3.  The <status> element\n   The <status> element contains one OPTIONAL <basic>\
    \ element, followed\n   by any number of OPTIONAL extension elements (possibly\
    \ from other\n   namespaces), under the restriction that at least one child element\n\
    \   appears in the <status> element.  These children elements of <status>\n  \
    \ contain status values of this tuple.  By allowing multiple status\n   values\
    \ in a single <tuple> element, different types of status values,\n   e.g., reachability\
    \ and location, can be represented by a <tuple>.\n   See Section 4.3 for an example\
    \ with multiple status values.\n   This memo only defines the <basic> status value\
    \ element.  Other\n   status values may be included using the standard extensibility\n\
    \   framework (see Section 4.2.4).  Applications encountering\n   unrecognized\
    \ elements within <status> may ignore them, unless they\n   carry a mustUnderstand=\"\
    true\" or mustUnderstand=\"1\" attribute (see\n   section 4.2.3).\n   Note that,\
    \ while the <status> element MUST have at least one status\n   value element,\
    \ this status value might not be the <basic> element.\n"
- title: 4.1.4.  The <basic> element
  contents:
  - "4.1.4.  The <basic> element\n   The <basic> element contains one of the following\
    \ strings: \"open\" or\n   \"closed\".\n   The values \"open\" and \"closed\"\
    \ indicate availability to receive\n   INSTANT MESSAGES if the <tuple> is for\
    \ an instant messaging address.\n   They also indicate general availability for\
    \ other communication\n   means, but this memo does not specify these in detail.\n\
    \   open: In the context of INSTANT MESSAGES, this value means that the\n    \
    \  associated <contact> element, if any, corresponds to an INSTANT\n      INBOX\
    \ that is ready to accept an INSTANT MESSAGE.\n   closed: In the context of INSTANT\
    \ MESSAGES, this value means that\n      the associated <contact> element, if\
    \ any, corresponds to an\n      INSTANT INBOX that is unable to accept an INSTANT\
    \ MESSAGE.\n"
- title: 4.1.5.  The <contact> element
  contents:
  - "4.1.5.  The <contact> element\n   The <contact> element contains a URL of the\
    \ contact address.  It\n   optionally has a 'priority' attribute, whose value\
    \ means a relative\n   priority of this contact address over the others.  The\
    \ value of the\n   attribute MUST be a decimal number between 0 and 1 inclusive\
    \ with at\n   most 3 digits after the decimal point.  Higher values indicate higher\n\
    \   priority.  Examples of priority values are 0, 0.021, 0.5, 1.00. If\n   the\
    \ 'priority' attribute is omitted, applications MUST assign the\n   contact address\
    \ the lowest priority.  If the 'priority' value is out\n   of the range, applications\
    \ just SHOULD ignore the value and process\n   it as if the attribute was not\
    \ present.\n   Applications SHOULD handle contacts with a higher priority as they\n\
    \   have precedence over those with lower priorities.  How they are\n   actually\
    \ treated is beyond this specification.  Also, how to handle\n   contacts with\
    \ the same priority is up to implementations.\n"
- title: 4.1.6.  The <note> element
  contents:
  - "4.1.6.  The <note> element\n   The <note> element contains a string value, which\
    \ is usually used for\n   a human readable comment.  A <note> element MAY appear\
    \ as a child\n   element of <presence> or as a child element of the <tuple> element.\n\
    \   In the former case the comment is about the PRESENTITY and in the\n   latter\
    \ case the comment is regarding the particular tuple.\n   Note that, wherever\
    \ it appears, a <note> element SHOULD NOT be used,\n   and interpreted, as a non-interoperable\
    \ substitute for status of its\n   parent element.\n   The <note> element SHOULD\
    \ have a special attribute 'xml:lang' to\n   specify the language used in the\
    \ contents of this element as defined\n   in Section 2.12 of [XML].  The value\
    \ of this attribute is the\n   language identifier as defined by [RFC3066].  It\
    \ MAY be omitted when\n   the language used is implied by the larger context such\
    \ as the\n   encoding information of the contents, such as an xml:lang attribute\n\
    \   on an enclosing XML element, or a Content-language header [RFC3282]\n   on\
    \ an enclosing MIME wrapper.\n"
- title: 4.1.7.  The <timestamp> element
  contents:
  - "4.1.7.  The <timestamp> element\n   The <timestamp> element contains a string\
    \ indicating the date and\n   time of the status change of this tuple.  The value\
    \ of this element\n   MUST follow the IMPP datetime format [RFC3339].  Timestamps\
    \ that\n   contain 'T' or 'Z' MUST use the capitalized forms.\n   As a security\
    \ measure, the <timestamp> element SHOULD be included in\n   all tuples unless\
    \ the exact time of the status change cannot be\n   determined.  For security\
    \ guidelines for watchers receiving presence\n   information with timestamps,\
    \ see the Security Considerations.\n   A PRESENTITY MUST NOT generate successive\
    \ <presence> elements\n   containing the same timestamp.\n"
- title: 4.2.  Presence Information Extensibility
  contents:
  - "4.2.  Presence Information Extensibility\n   The presence information extensibility\
    \ framework is based on XML\n   namespaces [XML-NS].\n   RFC 2779 requires that\
    \ PIDF have a means of extending <status> values\n   beyond <basic>.  These extensions\
    \ MUST NOT modify how <basic> is to\n   be understood, nor change the structure\
    \ or semantics of PIDF bodies\n   themselves.  These extensions merely allow protocols\
    \ and applications\n   to define richer presence data.\n"
- title: 4.2.1.  XML Namespaces Background
  contents:
  - "4.2.1.  XML Namespaces Background\n   All elements and some attributes are associated\
    \ with a \"namespace\",\n   which is in turn associated with a globally unique\
    \ URI.  Any\n   developer can introduce their own element names, avoiding conflict\
    \ by\n   choosing an appropriate namespace URI.\n   Within the presence data,\
    \ element or attribute names are associated\n   with a particular namespace by\
    \ a namespace prefix, which is a leading\n   part of the name, followed by a colon\
    \ (\":\"); e.g.,\n      <prefix:element-name ...> ... </prefix:element-name>\n\
    \   Where, 'prefix' is the header name prefix, 'element-name' is a name\n   which\
    \ is scoped by the namespace associated with 'prefix'.  Note that\n   the choice\
    \ of 'prefix' is quite arbitrary;  it is the corresponding\n   URI that defines\
    \ the naming scope.  Two different prefixes associated\n   with the same namespace\
    \ URI refer to the same namespace.\n   A default namespace can be declared for\
    \ XML elements without a\n   namespace prefix.  The default namespace does NOT\
    \ apply to attribute\n   names, but interpretation of an unprefixed attribute\
    \ can be\n   determined by the containing element.\n   A namespace is identified\
    \ by a URI.  In this usage, the URI is used\n   simply as a globally unique identifier,\
    \ and there is no requirement\n   that it can be used to retrieve a web resource,\
    \ or for any other\n   purpose.  Any legal globally unique URI MAY be used to\
    \ identify a\n   namespace.  (By \"globally unique\", we mean constructed according\
    \ to\n   some set of rules so that it is reasonable to expect that nobody else\n\
    \   will use the same URI for a different purpose.)\n   For further details, see\
    \ the XML namespace specification [XML-NS].\n"
- title: 4.2.2.  XML Namespaces In Presence Information
  contents:
  - "4.2.2.  XML Namespaces In Presence Information\n   A URI used as a namespace\
    \ identifier in PRESENCE INFORMATION data\n   MUST be a full absolute-URI, per\
    \ RFC 2396 [URI].  (Relative URIs and\n   URI-references containing fragment identifiers\
    \ MUST NOT be used for\n   this purpose.)\n   The namespace URI for elements defined\
    \ by this specification is a URN\n   [URN], using the namespace identifier 'ietf'\
    \ defined by [URN-NS-IETF]\n   and extended by [XML-Registry]:\n      urn:ietf:params:xml:ns:pidf\n\
    \   Thus, simple presence data might be thus:\n   <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n   <impp:presence xmlns:impp=\"urn:ietf:params:xml:ns:pidf\"\n    \
    \   entity=\"pres:someone@example.com\">\n     <impp:tuple id=\"sg89ae\">\n  \
    \     <impp:status>\n         <impp:basic>open</impp:basic>\n       </impp:status>\n\
    \       <impp:contact priority=\"0.8\">tel:+09012345678</impp:contact>\n     </impp:tuple>\n\
    \   </impp:presence>\n   , using a default XML namespace:\n   <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n   <presence xmlns=\"urn:ietf:params:xml:ns:pidf\"\
    \n       entity=\"pres:someone@example.com\">\n     <tuple id=\"sg89ae\">\n  \
    \     <status>\n         <basic>open</basic>\n       </status>\n       <contact\
    \ priority=\"0.8\">tel:+09012345678</contact>\n     </tuple>\n   </presence>\n\
    \   As is generally the case in XML with namespaces, the xmlns attribute\n   can\
    \ be used on any element in the presence information to define\n   either the\
    \ default namespace or a namespace associated with a\n   namespace prefix.\n"
- title: 4.2.3.  Handling Of Unrecognized Element Names
  contents:
  - "4.2.3.  Handling Of Unrecognized Element Names\n   Except as noted below, a processor\
    \ of PRESENCE INFORMATION MUST\n   ignore any XML element with an unrecognized\
    \ name (i.e., having an\n   unrecognized namespace URI, or an unrecognized local\
    \ name within that\n   namespace).  This includes all of the element content,\
    \ even if it\n   appears to contain elements with recognized names.\n   Extensions\
    \ to PIDF are informational in nature - they provide\n   additional information\
    \ beyond <basic> status.  However, in order to\n   understand a complex extension,\
    \ nested elements within an extension\n   element might need to be marked as mandatory.\
    \  In such cases, the\n   element name is qualified with a mustUnderstand='true'\
    \ or\n   mustUnderstand='1' attribute.  See section 4.3.3 for an example.\n  \
    \    NOTE:  a mustUnderstand='true' or mustUnderstand='1' attribute\n      within\
    \ an element that is being ignored is itself ignored.  The\n      writer of nested\
    \ mandatory-to-understand information is\n      responsible for ensuring that\
    \ any enclosing element is also\n      labelled with a mustUnderstand='true' or\
    \ mustUnderstand='1'\n      attribute, if necessary.\n   This specification defines\
    \ (section 4.1) elements within the\n   'urn:ietf:params:xml:ns:pidf' namespace\
    \ that MUST be recognized in\n   CPP presence data.  Processors MUST handle these\
    \ as described, even\n   if they do not carry a mustUnderstand attribute.  The\
    \ XML Schema\n   Definition (section 4.4) indicates those elements that MUST be\n\
    \   present in a valid presence information document.\n   If an agent receives\
    \ PRESENCE INFORMATION with a <status> block\n   containing an unrecognized element\
    \ with a mustUnderstand='true' (or\n   '1') attribute, it should treat that entire\
    \ element and any content\n   as unrecognized and not attempt to process it.\n\
    \   In order to ensure that minimal implementations can correctly process\n  \
    \ basic PIDF information the mustUnderstand attribute MUST be used only\n   within\
    \ optional elements nested in a <status> element.  This will\n   ensure that problems\
    \ processing an extension are restricted to that\n   extension and do not affect\
    \ the processing of the basic PIDF\n   information defined in this specification.\n"
- title: 4.2.4. Status Value Extensibility
  contents:
  - "4.2.4. Status Value Extensibility\n   This memo defines only the <basic> status\
    \ value with values of \"open\"\n   and \"closed\".  Other status values are possible\
    \ using the standard\n   namespace-based extensibility rules defined above.\n\
    \   For example, a location status value might be included thus:\n   <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n   <presence xmlns=\"urn:ietf:params:xml:ns:pidf\"\
    \n       xmlns:local=\"urn:example-com:pidf-status-type\"\n       entity=\"pres:someone@example.com\"\
    >\n     <tuple id=\"ub93s3\">\n       <status>\n         <basic>open</basic>\n\
    \         <local:location>home</local:location>\n       </status>\n       <contact>im:someone@example.com</contact>\n\
    \     </tuple>\n   </presence>\n   Some new status values will 'extend' the value\
    \ of the <basic>\n   element.  For example, a status value defined for use with\
    \ instant\n   messaging may include values such as 'away', 'busy' and 'offline'.\n\
    \   In order that some level of interoperability be maintained with user\n   agents\
    \ that don't recognize the new extension, the <basic> status\n   value must also\
    \ be included.  This means that extensions are not\n   obligated to define a mapping\
    \ from each of their values to OPEN or\n   CLOSED.\n"
- title: 4.2.5.  Standardizing Status Extensions
  contents:
  - "4.2.5.  Standardizing Status Extensions\n   Although the existing PIDF definition\
    \ allows arbitrary elements to\n   appear in the <status> element, it may be sometimes\
    \ desirable to\n   standardize extension status elements and their semantics (the\n\
    \   meanings of particular statuses, how they should be interpreted).\n   The\
    \ URN 'urn:ietf:params:xml:ns:pidf:status' has been specified as an\n   umbrella\
    \ namespace under which extensions to the <status> PIDF\n   element should be\
    \ specified (e.g.,\n   urn:ietf:params:xml:ns:pidf:status:my-extension).  New\
    \ values under\n   this namespace MUST be defined by a standards-track RFC.\n\
    \   The following example XML Schema defines an extension for <location>\n   presence\
    \ information, which can have the values of 'home', 'office',\n   or 'car'.  If\
    \ the <location> element were standardized, this document\n   would be made available\
    \ in an RFC along with information about the\n   use of the extension.  These\
    \ extensions should use the namespace\n   'urn:ietf:params:xml:ns:pidf:status',\
    \ and each RFC defining an\n   extension should register an extension name within\
    \ that namespace\n   with IANA.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\
    \   <xs:schema targetNamespace=\"urn:ietf:params:xml:ns:pidf:status\"\n      \
    \  xmlns:tns=\"urn:ietf:params:xml:ns:pidf:status\"\n        xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
    \n        elementFormDefault=\"qualified\"\n        attributeFormDefault=\"unqualified\"\
    >\n     <xs:simpleType name=\"location\">\n       <xs:restriction base=\"xs:string\"\
    >\n         <xs:enumeration value=\"home\"/>\n         <xs:enumeration value=\"\
    office\"/>\n         <xs:enumeration value=\"car\"/>\n       </xs:restriction>\n\
    \     </xs:simpleType>\n   </xs:schema>\n   In addition to the XML Schema to validate\
    \ the extension, registration\n   of the extension name with IANA, RFCs defining\
    \ extensions MUST\n   discuss:\n   -  The domain of applicability of the extension.\
    \  Is this extension\n      exclusively valuable to IM clients, telephones, geolocators,\
    \ etc?\n      What sorts of presence applications would use this extension and\n\
    \      under what circumstances?\n   -  Semantics for the presence states defined\
    \ in the extension.  What\n      disposition provokes an automated presentity\
    \ to declare that it is\n      in state X, or does a human select X from a drag-down\
    \ menu? Is\n      there any general guidance for watchers of presence information\n\
    \      with state Y (for example, how they should best attempt to\n      communicate\
    \ with the presentity, if at all, when the principal is\n      in state Y).\n\
    \   Extensions SHOULD also discuss:\n   -  How, if at all, any presence states\
    \ defined in the extension\n      related to <basic>, or to any relevant extension\
    \ previously\n      published in an RFC.  For example, \"state Z implies OPEN,\
    \ so it\n      MUST NOT be used if a basic state of CLOSED is expressed\", or\n\
    \      \"you should use the extension in this document, not the extension\n  \
    \    in RFC QQQQ, if your circumstances are as follows....\"\n"
- title: 4.3.  Examples
  contents:
  - '4.3.  Examples

    '
- title: 4.3.1.  Default Namespace with Status Extensions
  contents:
  - "4.3.1.  Default Namespace with Status Extensions\n   The following instance document\
    \ uses a hypothetical 'pidf:im' XML\n   namespace as an example of the sort of\
    \ status extension that might be\n   developed for PIDF.\n   <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n   <presence xmlns=\"urn:ietf:params:xml:ns:pidf\"\
    \n        xmlns:im=\"urn:ietf:params:xml:ns:pidf:im\"\n        xmlns:myex=\"http://id.example.com/presence/\"\
    \n        entity=\"pres:someone@example.com\">\n     <tuple id=\"bs35r9\">\n \
    \      <status>\n         <basic>open</basic>\n         <im:im>busy</im:im>\n\
    \         <myex:location>home</myex:location>\n       </status>\n       <contact\
    \ priority=\"0.8\">im:someone@mobilecarrier.net</contact>\n       <note xml:lang=\"\
    en\">Don't Disturb Please!</note>\n       <note xml:lang=\"fr\">Ne derangez pas,\
    \ s'il vous plait</note>\n       <timestamp>2001-10-27T16:49:29Z</timestamp>\n\
    \     </tuple>\n     <tuple id=\"eg92n8\">\n       <status>\n         <basic>open</basic>\n\
    \       </status>\n       <contact priority=\"1.0\">mailto:someone@example.com</contact>\n\
    \     </tuple>\n     <note>I'll be in Tokyo next week</note>\n   </presence>\n"
- title: 4.3.2.  Presence with Other Extension Elements
  contents:
  - "4.3.2.  Presence with Other Extension Elements\n   <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n   <impp:presence xmlns:impp=\"urn:ietf:params:xml:ns:pidf\"\n    \
    \    xmlns:myex=\"http://id.example.com/presence/\"\n        entity=\"pres:someone@example.com\"\
    >\n     <impp:tuple id=\"ck38g9\">\n       <impp:status>\n         <impp:basic>open</impp:basic>\n\
    \       </impp:status>\n       <myex:mytupletag>Extended value in tuple</myex:mytupletag>\n\
    \       <impp:contact priority=\"0.65\">tel:+09012345678</impp:contact>\n    \
    \ </impp:tuple>\n     <impp:tuple id=\"md66je\">\n       <impp:status>\n     \
    \    <impp:basic>open</impp:basic>\n       </impp:status>\n       <impp:contact\
    \ priority=\"1.0\">\n          im:someone@mobilecarrier.net</impp:contact>\n \
    \    </impp:tuple>\n     <myex:mytag>My extended presentity information</myex:mytag>\n\
    \   </impp:presence>\n"
- title: 4.3.3.  Example Mandatory To Understand Elements
  contents:
  - "4.3.3.  Example Mandatory To Understand Elements\n   <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n   <impp:presence xmlns:impp=\"urn:ietf:params:xml:ns:pidf\"\n    \
    \    xmlns:myex=\"http://id.mycompany.com/presence/\"\n        entity=\"pres:someone@example.com\"\
    >\n     <impp:tuple id=\"tj25ds\">\n       <impp:status>\n         <impp:basic>open</impp:basic>\n\
    \       </impp:status>\n       <myex:complexExtension>\n         <myex:ex1 impp:mustUnderstand=\"\
    1\">val1</myex:ex1>\n         <myex:ex2>val2</myex:ex2>\n       </myex:complexExtension>\n\
    \       <impp:contact priority=\"0.725\">tel:+09012345678</impp:contact>\n   \
    \  </impp:tuple>\n     <myex:mytag>My extended presentity information</myex:mytag>\n\
    \   </impp:presence>\n   Here, <myex:ex1> must be understood and, if it is not\
    \ recognized,\n   <myex:complexExtension> MUST be ignored.   <myex:mytag> and\n\
    \   <myex:ex2> MAY be ignored if they are not recognized.\n"
- title: 4.4.  XML Schema Definitions
  contents:
  - "4.4.  XML Schema Definitions\n   This section gives the XML Schema Definition\
    \ [XMLSchema1] of the\n   \"application/pidf+xml\" format.  This is presented\
    \ as a formal\n   definition of the \"application/pidf+xml\" format.  Note that\
    \ the XML\n   Schema definition is not intended to be used with on-the-fly\n \
    \  validation of the presence XML document.\n   <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n   <xs:schema targetNamespace=\"urn:ietf:params:xml:ns:pidf\"\n   \
    \     xmlns:tns=\"urn:ietf:params:xml:ns:pidf\"\n        xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
    \n        elementFormDefault=\"qualified\"\n        attributeFormDefault=\"unqualified\"\
    >\n     <!-- This import brings in the XML language attribute xml:lang-->\n  \
    \   <xs:import namespace=\"http://www.w3.org/XML/1998/namespace\"\n       schemaLocation=\"\
    http://www.w3.org/2001/xml.xsd\"/>\n     <xs:element name=\"presence\" type=\"\
    tns:presence\"/>\n     <xs:complexType name=\"presence\">\n       <xs:sequence>\n\
    \         <xs:element name=\"tuple\" type=\"tns:tuple\" minOccurs=\"0\"\n    \
    \        maxOccurs=\"unbounded\"/>\n         <xs:element name=\"note\" type=\"\
    tns:note\" minOccurs=\"0\"\n            maxOccurs=\"unbounded\"/>\n         <xs:any\
    \ namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\"\n            maxOccurs=\"\
    unbounded\"/>\n       </xs:sequence>\n       <xs:attribute name=\"entity\" type=\"\
    xs:anyURI\" use=\"required\"/>\n     </xs:complexType>\n     <xs:complexType name=\"\
    tuple\">\n       <xs:sequence>\n         <xs:element name=\"status\" type=\"tns:status\"\
    />\n         <xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"\
    0\"\n            maxOccurs=\"unbounded\"/>\n         <xs:element name=\"contact\"\
    \ type=\"tns:contact\" minOccurs=\"0\"/>\n         <xs:element name=\"note\" type=\"\
    tns:note\" minOccurs=\"0\"\n            maxOccurs=\"unbounded\"/>\n         <xs:element\
    \ name=\"timestamp\" type=\"xs:dateTime\" minOccurs=\"0\"/>\n       </xs:sequence>\n\
    \       <xs:attribute name=\"id\" type=\"xs:ID\" use=\"required\"/>\n     </xs:complexType>\n\
    \     <xs:complexType name=\"status\">\n       <xs:sequence>\n         <xs:element\
    \ name=\"basic\" type=\"tns:basic\" minOccurs=\"0\"/>\n         <xs:any namespace=\"\
    ##other\" processContents=\"lax\" minOccurs=\"0\"\n            maxOccurs=\"unbounded\"\
    />\n       </xs:sequence>\n     </xs:complexType>\n     <xs:simpleType name=\"\
    basic\">\n       <xs:restriction base=\"xs:string\">\n         <xs:enumeration\
    \ value=\"open\"/>\n         <xs:enumeration value=\"closed\"/>\n       </xs:restriction>\n\
    \     </xs:simpleType>\n     <xs:complexType name=\"contact\">\n       <xs:simpleContent>\n\
    \         <xs:extension base=\"xs:anyURI\">\n           <xs:attribute name=\"\
    priority\" type=\"tns:qvalue\"/>\n         </xs:extension>\n       </xs:simpleContent>\n\
    \     </xs:complexType>\n     <xs:complexType name=\"note\">\n       <xs:simpleContent>\n\
    \         <xs:extension base=\"xs:string\">\n           <xs:attribute ref=\"xml:lang\"\
    />\n         </xs:extension>\n       </xs:simpleContent>\n     </xs:complexType>\n\
    \     <xs:simpleType name=\"qvalue\">\n       <xs:restriction base=\"xs:decimal\"\
    >\n         <xs:pattern value=\"0(.[0-9]{0,3})?\"/>\n         <xs:pattern value=\"\
    1(.0{0,3})?\"/>\n       </xs:restriction>\n     </xs:simpleType>\n     <!-- Global\
    \ Attributes -->\n     <xs:attribute name=\"mustUnderstand\" type=\"xs:boolean\"\
    \ default=\"0\">\n       <xs:annotation>\n         <xs:documentation>\n      \
    \   This attribute may be used on any element within an optional\n         PIDF\
    \ extension to indicate that the corresponding element must\n         be understood\
    \ by the PIDF processor if the enclosing optional\n         element is to be handled.\n\
    \         </xs:documentation>\n       </xs:annotation>\n     </xs:attribute>\n\
    \   </xs:schema>\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This memo calls for IANA to:\n   -  register a new\
    \ MIME content-type application/pidf+xml, per [MIME],\n   -  register a new XML\
    \ namespace URN per [XML-Registry].\n   -  register a new XML namespace URN for\
    \ status extensions per [XML-\n      Registry].\n   The registration templates\
    \ for these are below. For more information\n   on status extensions, see section\
    \ 4.2.5.\n"
- title: 5.1.  Content-type registration for 'application/pidf+xml'
  contents:
  - "5.1.  Content-type registration for 'application/pidf+xml'\n   To: ietf-types@iana.org\n\
    \   Subject: Registration of MIME media type application/pidf+xml\n   MIME media\
    \ type name:  application\n   MIME subtype name:     pidf+xml\n   Required parameters:\
    \   (none)\n   Optional parameters:   charset\n      Indicates the character encoding\
    \ of enclosed XML.  Default is\n      UTF-8.\n   Encoding considerations:\n  \
    \    Uses XML, which can employ 8-bit characters, depending on the\n      character\
    \ encoding used.  See RFC 3023 [RFC 3023], section 3.2.\n   Security considerations:\n\
    \      This content type is designed to carry presence data, which may be\n  \
    \    considered private information.  Appropriate precautions should be\n    \
    \  adopted to limit disclosure of this information.\n   Interoperability considerations:\n\
    \      This content type provides a common format for exchange of\n      presence\
    \ information across different CPP compliant protocols.\n   Published specification:\n\
    \      RFC 3863\n   Applications which use this media type:\n      Presence and\
    \ instant messaging systems.\n   Additional information:\n      Magic number(s):\
    \  File extension(s):  Macintosh File Type Code(s):\n   Person & email address\
    \ to contact for further information:\n      Hiroyasu Sugano EMail: sugano.h@jp.fujitsu.com\n\
    \   Intended usage:\n      LIMITED USE\n   Author/Change controller:\n      This\
    \ specification is a work item of the IETF IMPP working group,\n      with mailing\
    \ list address <impp@iastate.edu>.\n   Other information:\n      This media type\
    \ is a specialization of application/xml [RFC 3023],\n      and many of the considerations\
    \ described there also apply to\n      application/pidf+xml.\n"
- title: 5.2.  URN sub-namespace registration for 'urn:ietf:params:xml:ns:pidf'
  contents:
  - "5.2.  URN sub-namespace registration for 'urn:ietf:params:xml:ns:pidf'\n   URI\n\
    \      urn:ietf:params:xml:ns:pidf\n   Description:\n      This is the XML namespace\
    \ URI for XML elements defined by RFC 3863\n      to describe CPP presence information\
    \ in application/pidf+xml\n      content type.\n   Registrant Contact\n      IETF,\
    \ IMPP working group, <impp@iastate.edu>\n      Hiroyasu Sugano, <sugano.h@jp.fujitsu.com>\n\
    \   XML\n      BEGIN\n        <?xml version=\"1.0\"?>\n        <!DOCTYPE html\
    \ PUBLIC \"-//W3C//DTD XHTML Basic 1.0//EN\"\n                  \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\"\
    >\n        <html xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head>\n   \
    \       <meta http-equiv=\"content-type\"\n             content=\"text/html;charset=utf-8\"\
    />\n          <title>Namespace for CPP presence information</title>\n        </head>\n\
    \        <body>\n          <h1>Namespace for CPP presence information</h1>\n \
    \         <h2>urn:ietf:params:xml:ns:pidf</h2>\n          <p>See <a\n        \
    \     href=\"[[[ftp://ftp.rfc-editor.org/in-notes/rfc3863.txt]]]\">\n        \
    \     RFC3863</a>.</p>\n        </body>\n        </html>\n      END\n"
- title: 5.3.   URN sub-namespace registration for
  contents:
  - "5.3.   URN sub-namespace registration for\n       'urn:ietf:params:xml:ns:pidf:status'\n\
    \   URI\n      urn:ietf:params:xml:ns:pidf:status\n   Description:\n      This\
    \ is the XML namespace URI for XML elements defined by\n      RFC 3863 to describe\
    \ extensions to the status of CPP presence\n      information in application/pidf+xml\
    \ content type.\n   Registrant Contact\n      IETF, IMPP working group, <impp@iastate.edu>\n\
    \      Hiroyasu Sugano, <sugano.h@jp.fujitsu.com>\n   XML\n      BEGIN\n     \
    \   <?xml version=\"1.0\"?>\n        <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML\
    \ Basic 1.0//EN\"\n                  \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\"\
    >\n        <html xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head>\n   \
    \       <meta http-equiv=\"content-type\"\n             content=\"text/html;charset=utf-8\"\
    />\n          <title>Namespace for CPP status extensions</title>\n        </head>\n\
    \        <body>\n          <h1>Namespace for CPP presence information extensions</h1>\n\
    \          <h2>urn:ietf:params:xml:ns:pidf:status</h2>\n        <p>See <a\n  \
    \        href=\"[[[ftp://ftp.rfc-editor.org/in-notes/rfc3863.txt]]]\">\n     \
    \     RFC3863</a>.</p>\n        </body>\n        </html>\n      END\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Because presence is very privacy-sensitive information,\
    \ the protocol\n   for the presence information MUST have capabilities to protect\
    \ PIDF\n   from possible threats, such as eavesdropping, corruption, tamper and\n\
    \   replay attacks.  These security mechanisms must be able to be used\n   end-to-end\
    \ between presentities and watchers, even if the watcher and\n   the presentity\
    \ employ different presence protocols and communicate\n   through a CPP gateway.\
    \  Since the 'application/pidf+xml' MIME type is\n   defined for this PIDF document,\
    \ staging security for PIDF at the MIME\n   level (with S/MIME [RFC3851]) seems\
    \ appropriate.  Therefore, PIDF\n   should follow the normative recommendations\
    \ for the use of S/MIME\n   (including minimum ciphersuites) given in the core\
    \ CPP specification.\n   Note that the use of timestamps in PIDF (see section\
    \ 4.1.7) can\n   provide some rudimentary protection against replay attacks. \
    \ If a\n   watcher receives presence information that is outdated, it SHOULD be\n\
    \   ignored.  A watcher can determine that presence information is\n   outdated\
    \ in a number of fashions.  Most significantly, if the newest\n   timestamp in\
    \ presence information is older than the newest timestamp\n   in the last received\
    \ presence information, it should be considered\n   outdated.  Applications and\
    \ protocols also are advised to adopt their\n   own rules for determining how\
    \ frequently presence information should\n   be refreshed.  For example, if presence\
    \ information appears to be\n   more than one hour old, it could be considered\
    \ outdated (a\n   notification generated for this presence information will not\
    \ take\n   such a long time to reach a watcher, and if a presentity has not\n\
    \   refreshed its presence state in the last hour, it is probably\n   offline).\n"
- title: 7.  Internationalization Considerations
  contents:
  - "7.  Internationalization Considerations\n   All the processors conformant to\
    \ this specification MUST be able to\n   generate and accept UTF-8 encoding, this\
    \ being one of the mandatory\n   character encodings for XML conforming processors,\
    \ and also required\n   by the policies set out in RFC 2277 [RFC2277].\n   Other\
    \ character encodings MAY be accepted (but CPP compliant\n   processors are strongly\
    \ discouraged from emitting anything other than\n   UTF-8).\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]      Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                  Requirement Levels\", RFC 2119, BCP 14,\
    \ March 1997.\n   [RFC3023]      Murata, M., St. Laurent, S., and D. Kohn, \"\
    XML Media\n                  Types\", RFC 3023, January 2001.\n   [XML]      \
    \    Bray, T., Paoli, J., Sperberg-McQueen, C., and E.\n                  Maler,\
    \ \"Extensible Markup Language (XML) 1.0 (Second\n                  Edition)\"\
    , W3C Recommendation, October 2000,\n                  <http://www.w3.org/TR/2000/REC-xml-20001006>\n\
    \   [MIME]         Freed, N. and N. Borenstein, \"Multipurpose Internet\n    \
    \              Mail Extensions (MIME) Part One: Format of Internet\n         \
    \         Message Bodies\", RFC 2045, November 1996.\n                  Freed,\
    \ N. and N. Borenstein, \"Multipurpose Internet\n                  Mail Extensions\
    \ (MIME) Part Two: Media Types\", RFC\n                  2046, November 1996.\n\
    \                  Moore, K., \"MIME (Multipurpose Internet Mail\n           \
    \       Extensions) Part Three:  Message Header Extensions for\n             \
    \     Non-ASCII Text\", RFC 2047, November 1996.\n                  Freed, N.,\
    \ Klensin, J., and J. Postel, \"Multipurpose\n                  Internet Mail\
    \ Extensions (MIME) Part Four:\n                  Registration Procedures\", BCP\
    \ 13, RFC 2048, November\n                  1996.\n                  Freed, N.\
    \ and N. Borenstein, \"Multipurpose Internet\n                  Mail Extensions\
    \ (MIME) Part Five: Conformance Criteria\n                  and Examples\", RFC\
    \ 2049, November 1996.\n   [RFC3066]      Alvestrand, H., \"Tags for the Identification\
    \ of\n                  Languages\", BCP 47, RFC 3066, March 1995.\n   [RFC3339]\
    \      Klyne, G. and C. Newman, \"Date and Time on the\n                  Internet:\
    \ Timestamps\", RFC 3339, July 2002.\n   [XML-NS]       Bray, T., Hollander, D.,\
    \ and A. Layman \"Namespaces in\n                  XML\", W3C recommendation:\
    \ xml-names, 14 January 1999,\n                  <http://www.w3.org/TR/REC-xml-names>\n\
    \   [URI]          Berners-Lee, T., Fielding, R., and L. Masinter,\n         \
    \         \"Uniform Resource Identifiers (URI): Generic Syntax\",\n          \
    \        RFC 2396, August 1998.\n   [URN]          Moats, R., \"URN Syntax\",\
    \ RFC 2141, May 1997.\n   [URN-NS-IETF]  Moats, R., \"A URN Namespace for IETF\
    \ Documents\", RFC\n                  2648, August 1999.\n   [XML-Registry] Mealling,\
    \ M., \"The IETF XML Registry\", RFC 3688,\n                  January 2004.\n\
    \   [RFC2277]      Alvestrand, H., \"IETF Policy on Character Sets and\n     \
    \             Languages\", BCP 18, RFC 2277, January 1998.\n   [XMLSchema1]  \
    \ Thompson, H., Beech, D., Maloney, M., and N.\n                  Mendelsohn,\
    \ \"XML Schema Part 1: Structures\", W3C REC-\n                  xmlschema-1,\
    \ May 2001,\n                  <http://www.w3.org/TR/xmlschema-1/>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC2778]      Day, M., Rosenberg, J., and H.\
    \ Sugano, \"A Model for\n                  Presence and Instant Messaging\", RFC\
    \ 2778, February\n                  2000.\n   [RFC2779]      Day, M., Aggarwal,\
    \ S., Mohr, G., and J. Vincent,\n                  \"Instant Messaging / Presence\
    \ Protocol Requirements\",\n                  RFC 2779, February 2000.\n   [CPIM]\
    \         Peterson, J., \"Common Profile for Instant Messaging\n             \
    \     (CPIM)\", RFC 3860, August 2004.\n   [CPP]          Peterson, J., \"Common\
    \ Presence for Presence (CPP)\",\n                  RFC 3859, August 2004.\n \
    \  [vCard]        Dawson, F. and T. Howes, \"vCard MIME Directory\n          \
    \        Profile\", RFC 2426, September 1998.\n   [RFC3851]      Ramsdell, B.,\
    \ Ed., \"Secure/Multipurpose Internet Mail\n                  Extensions (S/MIME)\
    \ Version 3.1 Message\n                  Specification\", RFC 3851, July 2004.\n\
    \   [RFC3282]      Alvestrand, H., \"Content Language Headers\", RFC 3282,\n \
    \                 May 2002.\n"
- title: Appendix A. Document Type Definitions
  contents:
  - "Appendix A. Document Type Definitions\n   The Document Type Definition for the\
    \ \"application/pidf+xml\" format is\n   described.  The DTD here is presented\
    \ only for informational for\n   those who may not familiar with the XML Schema\
    \ definition.\n   Note: the DTD does not show where extension elements can be\
    \ added.\n   See the XML Schema for that information.\n   <!ENTITY % URL     \
    \    \"CDATA\">\n   <!ENTITY % URI         \"CDATA\">\n   <!ENTITY % TUPLEID \
    \    \"CDATA\">\n   <!ENTITY % DATETIME    \"CDATA\">\n   <!ENTITY % VALUETYPE\
    \   \"CDATA\">\n   <!ENTITY % PRIORITY    \"CDATA\">\n   <!ENTITY % NOTE     \
    \   \"CDATA\">\n   <!ELEMENT presence ((tuple*),note?)>\n   <!ATTLIST presence\n\
    \             xmlns     %URI;     #REQUIRED\n             entity    %URL;    \
    \ #REQUIRED\n   >\n   <!ELEMENT tuple (status,contact?,note?,timestamp?)>\n  \
    \ <!ATTLIST tuple\n             id   %TUPLEID;      #REQUIRED\n   >\n   <!ELEMENT\
    \ status (basic?)>\n   <!ELEMENT basic CDATA>\n   <!ELEMENT contact %URL;>\n \
    \  <!ATTLIST contact\n             priority %PRIORITY; #IMPLIED\n   >\n   <!ELEMENT\
    \ note %NOTE;>\n   <!ELEMENT timestamp %DATETIME;>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Hiroyasu Sugano\n   Fujitsu Laboratories Ltd.\n   64,\
    \ Nishiwaki\n   Ohkubo-cho\n   Akashi 674-8555\n   Japan\n   EMail: sugano.h@jp.fujitsu.com\n\
    \   Shingo Fujimoto\n   Fujitsu Laboratories Ltd.\n   64, Nishiwaki\n   Ohkubo-cho\n\
    \   Akashi 674-8555\n   Japan\n   EMail: shingo_fujimoto@jp.fujitsu.com\n   Graham\
    \ Klyne\n   Nine by Nine\n   EMail: GK@ninebynine.org\n   Adrian Bateman\n   VisionTech\
    \ Limited\n   Colton, Staffordshire, WS15 3LD\n   United Kingdom\n   EMail: bateman@acm.org\n\
    \   Wayne Carr\n   Intel Corporation\n   2111 NE 25th Avenue\n   Hillsboro, OR\
    \ 97124\n   USA\n   EMail: wayne.carr@intel.com\n   Jon Peterson\n   NeuStar,\
    \ Inc.\n   1800 Sutter St\n   Suite 570\n   Concord, CA  94520\n   USA\n   Phone:\
    \ +1 925/363-8720\n   EMail: jon.peterson@neustar.biz\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).  This\
    \ document is subject\n   to the rights, licenses and restrictions contained in\
    \ BCP 78, and\n   except as set forth therein, the authors retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
