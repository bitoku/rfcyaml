- title: __initial_text__
  contents:
  - "              Dynamic Host Configuration Protocol (DHCPv4)\n                \
    \   Configuration of IPsec Tunnel Mode\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo explores the requirements for host configuration in IPsec\n\
    \   tunnel mode, and describes how the Dynamic Host Configuration\n   Protocol\
    \ (DHCPv4) may be leveraged for configuration.  In many remote\n   access scenarios,\
    \ a mechanism for making the remote host appear to be\n   present on the local\
    \ corporate network is quite useful.  This may be\n   accomplished by assigning\
    \ the host a \"virtual\" address from the\n   corporate network, and then tunneling\
    \ traffic via IPsec from the\n   host's ISP-assigned address to the corporate\
    \ security gateway.  In\n   IPv4, DHCP provides for such remote host configuration.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction...................................................\
    \  2\n     1.1 Terminology.................................................  2\n\
    \     1.2 Requirements Language.......................................  3\n  \
    \ 2. IPsec tunnel mode configuration requirements...................  3\n    \
    \ 2.1 DHCP configuration evaluation...............................  3\n     2.2\
    \ Summary.....................................................  4\n   3. Scenario\
    \ overview..............................................  4\n     3.1 Configuration\
    \ walk-through..................................  5\n   4. Detailed description...........................................\
    \  6\n     4.1 DHCPDISCOVER message processing.............................  6\n\
    \     4.2 DHCP Relay behavior.........................................  9\n  \
    \   4.3 DHCPREQUEST message processing.............................. 10\n    \
    \ 4.4 DHCPACK message processing.................................. 10\n     4.5\
    \ Configuration policy........................................ 11\n   5. Security\
    \ Considerations........................................ 11\n   6. IANA Considerations............................................\
    \ 12\n   7. Intellectual Property Statement................................ 12\n\
    \   8. References..................................................... 13\n  \
    \   8.1 Normative References........................................ 13\n    \
    \ 8.2 Informative References...................................... 13\n   9. Acknowledgments................................................\
    \ 14\n   Appendix - IKECFG evaluation...................................... 15\n\
    \   Authors' Addresses................................................ 17\n  \
    \ Full Copyright Statement ......................................... 18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In many remote access scenarios, a mechanism for making\
    \ the remote\n   host appear to be present on the local corporate network is quite\n\
    \   useful.  This may be accomplished by assigning the host a \"virtual\"\n  \
    \ address from the corporate network, and then tunneling traffic via\n   IPsec\
    \ from the host's ISP-assigned address to the corporate security\n   gateway.\
    \  In IPv4, Dynamic Host Configuration Protocol (DHCP) [3]\n   provides for such\
    \ remote host configuration. This document explores\n   the requirements for host\
    \ configuration in IPsec tunnel mode, and\n   describes how DHCPv4 may be leveraged\
    \ for configuration.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document uses the following terms:\n   DHCP client\n\
    \         A DHCP client or \"client\" is an Internet host using DHCP to\n    \
    \     obtain configuration parameters such as a network address.\n   DHCP server\n\
    \         A DHCP server or \"server\" is an Internet host that returns\n     \
    \    configuration parameters to DHCP clients.\n"
- title: 1.2.  Requirements language
  contents:
  - "1.2.  Requirements language\n   In this document, the key words \"MAY\", \"MUST,\
    \ \"MUST NOT\", \"optional\",\n   \"recommended\", \"SHOULD\", and \"SHOULD NOT\"\
    , are to be interpreted as\n   described in [1].\n"
- title: 2.  IPsec tunnel mode configuration requirements
  contents:
  - "2.  IPsec tunnel mode configuration requirements\n   As described in [21], the\
    \ configuration requirements of a host with\n   an IPsec tunnel mode interface\
    \ include the need to obtain an IPv4\n   address and other configuration parameters\
    \ appropriate to the class\n   of host.  In addition to meeting the basic requirements\
    \ [21], the\n   following additional capabilities may be desirable:\n      a.\
    \ integration with existing IPv4 address management facilities\n      b. support\
    \ for address pool management\n      c. reconfiguration when required\n      d.\
    \ support for fail-over\n      e. maintaining security and simplicity in the IKE\
    \ implementation.\n      f. authentication where required\n"
- title: 2.1.  DHCP configuration evaluation
  contents:
  - "2.1.  DHCP configuration evaluation\n   Leveraging DHCP for configuration of\
    \ IPsec tunnel mode meets the\n   basic requirements described in [21].  It also\
    \ provides the\n   additional capabilities described above.\n   Basic configuration\n\
    \         In IPv4, leveraging DHCPv4 [3] for the configuration of IPsec\n    \
    \     tunnel mode satisfies the basic requirements described in [21].\n      \
    \   Since the required configuration parameters described in [21]\n         are\
    \ a subset of those already supported in DHCPv4 options [4],\n         no new\
    \ DHCPv4 options are required, and no modifications to\n         DHCPv4 [3] are\
    \ required.\n   Address management integration\n         Since DHCPv4 is widely\
    \ deployed for address management today,\n         reuse of DHCPv4 for IPsec tunnel\
    \ mode address management\n         enables compatibility and integration with\
    \ existing addressing\n         implementations and IPv4 address management software.\n\
    \   Address pool management\n         As described in [18], DHCPv4 implementations\
    \ support\n         conditional behavior so that the address and configuration\n\
    \         parameters assigned can be dependent on parameters included in\n   \
    \      the DHCPDISCOVER.  This makes it possible for the security\n         gateway\
    \ to ensure that the remote host receives an IP address\n         assignment from\
    \ the appropriate address pool, such as via the\n         User Class option, described\
    \ in [16].\n   Reconfiguration\n         DHCP supports the concept of configuration\
    \ leases, and there is\n         a proposal for handling forced reconfiguration\
    \ [14].\n   Fail-over support\n         When leveraging DHCPv4, configuration\
    \ and addressing state is\n         kept on the DHCP server, not within the IKE\
    \ implementation.  As\n         a result, the loss of a tunnel server does not\
    \ result in the\n         loss of configuration and addressing state, thus making\
    \ it\n         easier to support fail-over [12].\n   Security and simplicity\n\
    \         Leveraging DHCPv4 also makes it easier to maintain security in\n   \
    \      the IKE implementation since no IKE modifications are required\n      \
    \   to support configuration.\n   Authentication\n         Where DHCPv4 authentication\
    \ [5] is required, this can be\n         supported on an IPsec tunnel mode interface\
    \ as it would be on\n         any other interface.\n"
- title: 2.2.  Summary
  contents:
  - "2.2.  Summary\n   As described, DHCPv4 [3] meets the IPsec tunnel mode configuration\n\
    \   requirements [21], as well as providing additional capabilities.  As\n   described\
    \ in the Appendix, IKECFG [13] does not meet the basic\n   requirements, nor does\
    \ it provide the additional capabilities.  As a\n   result, DHCPv4 is the superior\
    \ alternative for IPsec tunnel mode\n   configuration.\n"
- title: 3.  Scenario overview
  contents:
  - "3.  Scenario overview\n   IPsec [2], [6]-[9] is a protocol suite defined to secure\n\
    \   communication at the network layer between communicating peers.\n   Among\
    \ many applications enabled by IPsec, a useful application is to\n   connect a\
    \ remote host to a corporate intranet via a security gateway,\n   using IPsec\
    \ tunnel mode.  This host is then configured in such a\n   manner so as to provide\
    \ it with a virtual presence on the internal\n   network.  This is accomplished\
    \ in the following manner:\n   A remote host on the Internet will connect to the\
    \ security gateway\n   and then establish an IPsec tunnel to it.  The remote host\
    \ then\n   interacts via the IPsec tunnel with a DHCPv4 server which provides\n\
    \   the remote host with an address from the corporate network address\n   space.\
    \  The remote host subsequently uses this as the source address\n   for all interactions\
    \ with corporate resources.  Note that this\n   implies that the corporate security\
    \ gateway continues to recognize\n   the host's original, routable IP address\
    \ as the tunnel endpoint.  The\n   virtual identity assumed by the remote host\
    \ when using the assigned\n   address appears to the corporate network as though\
    \ it were situated\n   behind a security gateway bearing the original routable\
    \ IP address.\n   All the traffic between the remote host and the intranet will\
    \ be\n   carried over the IPsec tunnel via the security gateway as shown\n   below:\n\
    \                                          corporate net\n    +------------------+\
    \                      |\n    |    externally    |        +--------+    |   !~~~~~~~~~~!\n\
    \    |+-------+ visible |        |        |    |   ! rmt host !\n    ||virtual|\
    \ host    |        |security|    |---! virtual  !\n    || host  |         |--------|gateway/|\
    \    |   ! presence !\n    ||       |<================>|  DHCP  |----|   !~~~~~~~~~~!\n\
    \    |+-------+         |--------| Relay  |    |\n    +------------------+   ^\
    \    +--------+    |   +--------+\n                           |              \
    \    |---| DHCPv4 |\n                         IPsec tunnel         |   | server\
    \ |\n                         with encapsulated    |   +--------+\n          \
    \               traffic inside\n   This scenario assumes that the remote host\
    \ already has Internet\n   connectivity and the host Internet interface is appropriately\n\
    \   configured.  The mechanisms for configuration of the remote host's\n   address\
    \ for the Internet interface are well defined; i.e., PPP IP\n   control protocol\
    \ (IPCP), described in [10], DHCPv4, described in [3],\n   and static addressing.\
    \  The mechanisms for auto-configuration of the\n   intranet are also standardized.\
    \  It is also assumed that the remote\n   host has knowledge of the location of\
    \ the security gateway.  This can\n   be accomplished via DNS, using either A,\
    \ KX [23], or SRV [24]\n   records.\n   A typical configuration of the remote\
    \ host in this application would\n   use two addresses: 1) an interface to connect\
    \ to the Internet\n   (Internet interface), and 2) a virtual interface to connect\
    \ to the\n   intranet (intranet interface).  The IP address of the Internet and\n\
    \   intranet interfaces are used in the outer and inner headers of the\n   IPsec\
    \ tunnel mode packet, respectively.\n"
- title: 3.1.  Configuration walk-through
  contents:
  - "3.1.  Configuration walk-through\n   The configuration of the intranet interface\
    \ of the IPsec tunnel mode\n   host is accomplished in the following steps:\n\
    \   a. The remote host establishes an IKE security association with the\n    \
    \  security gateway in a main mode or aggressive mode exchange.  This\n      IKE\
    \ SA then serves to secure additional quick mode IPsec SAs.\n   b. The remote\
    \ host establishes a DHCP SA with the IPsec tunnel mode\n      server in a quick\
    \ mode exchange.  The DHCP SA is an IPsec tunnel\n      mode SA established to\
    \ protect initial DHCPv4 traffic between the\n      security gateway and the remote\
    \ host.  The DHCP SA MUST only be\n      used for DHCP traffic.  The details of\
    \ how this SA is set up are\n      described in Section 4.1.\n   c. DHCP messages\
    \ are sent back and forth between the remote host and\n      the DHCPv4 server.\
    \  The traffic is protected between the remote\n      host and the security gateway\
    \ using the DHCP SA established in\n      step b.  After the DHCP conversation\
    \ completes, the remote host's\n      intranet interface obtains an IP address\
    \ as well as other\n      configuration parameters.\n   d. The remote host MAY\
    \ request deletion of the DHCP SA since future\n      DHCP messages will be carried\
    \ over a new IPsec tunnel.\n      Alternatively, the remote host and the security\
    \ gateway MAY\n      continue to use the same SA for all subsequent traffic by\
    \ adding\n      temporary SPD selectors in the same manner as is provided for\
    \ name\n      ID types in [2].\n   e. If a new IPsec tunnel is required, the remote\
    \ host establishes a\n      tunnel mode SA to the security gateway in a quick\
    \ mode exchange.\n      In this case, the new address assigned via DHCPv4 SHOULD\
    \ be used\n      in the quick mode ID.\n   At the end of the last step, the remote\
    \ host is ready to communicate\n   with the intranet using an IPsec tunnel.  All\
    \ the IP traffic\n   (including future DHCPv4 messages) between the remote host\
    \ and the\n   intranet are now tunneled over this IPsec tunnel mode SA.\n   Since\
    \ the security parameters used for different SAs are based on the\n   unique requirements\
    \ of the remote host and the security gateway, they\n   are not described in this\
    \ document.  The mechanisms described here\n   work best when the VPN is implemented\
    \ using a virtual interface.\n"
- title: 4.  Detailed description
  contents:
  - "4.  Detailed description\n   This section provides details relating to the messages\
    \ exchanged\n   during the setup and teardown of the DHCP SAs.\n"
- title: 4.1.  DHCPDISCOVER message processing
  contents:
  - "4.1.  DHCPDISCOVER message processing\n   The events begin with the remote host\
    \ intranet interface generating a\n   DHCPDISCOVER message.  Details are described\
    \ below:\n   FIELD      OCTETS       DESCRIPTION\n   op            1  Message\
    \ op code / message type.\n                    1 = BOOTREQUEST, 2 = BOOTREPLY\n\
    \   htype         1  Hardware address type.  Set to value 31.\n              \
    \      signifying an IPsec tunnel mode virtual interface.\n   hlen          1\
    \  Hardware address length\n   hops          1  Client sets to zero, optionally\
    \ used by relay agents\n                    when booting via a relay agent.\n\
    \   xid           4  Transaction ID, a random number chosen by the\n         \
    \           client, used by the client and server to associate\n             \
    \       messages and responses between a client and a\n                    server.\n\
    \   secs          2  Filled in by client, seconds elapsed since client\n     \
    \               began address acquisition or renewal process.\n   flags      \
    \   2  Flags.  Broadcast bit MUST be set to zero.\n   ciaddr        4  Client\
    \ IP address; only filled in if client is in\n                    BOUND, RENEW\
    \ or REBINDING state.\n   yiaddr        4  'your' (client) IP address.\n   siaddr\
    \        4  IP address of next server to use in bootstrap;\n                 \
    \   returned in DHCPOFFER, DHCPACK by server.\n   giaddr        4  Security gateway\
    \ interface IPv4 address, used in\n                    booting via a relay agent.\n\
    \   chaddr       16  Client hardware address.  Should be unique.\n   sname   \
    \     64  Optional server host name, null terminated string.\n   file        128\
    \  Boot file name, null terminated string; \"generic\"\n                    name\
    \ or null in DHCPDISCOVER, fully qualified\n                    directory-path\
    \ name in DHCPOFFER.\n   options     var  Optional parameters field.\n       \
    \  Table 1:  Description of fields in the DHCP message\n   The htype value is\
    \ set to the value 31, signifying a virtual IPsec\n   tunnel mode interface, in\
    \ order to enable the DHCP server to\n   differentiate VPN from non-VPN requests.\
    \  The chaddr field of the\n   DHCPDISCOVER MUST include an identifier unique\
    \ to the virtual subnet.\n   The client MUST use the same chaddr field in all\
    \ subsequent messages\n   within the same DHCPv4 exchange.  In addition, the chaddr\
    \ SHOULD be\n   persistent between reboots so that the DHCP server will be able\
    \ to\n   re-assign the same address if desired.\n   The hlen and chaddr fields\
    \ SHOULD be determined as follows:\n   a. If one or more LAN interfaces are available,\
    \ the hlen and chaddr\n      fields SHOULD be determined from the active LAN interface\
    \ with the\n      lowest interface number.  If no active LAN interface is available,\n\
    \      then the parameters SHOULD be determined from the LAN interface\n     \
    \ with the lowest interface number.  This enables the chaddr to be\n      persistent\
    \ between reboots, as long as the LAN interface hardware\n      is not removed.\n\
    \   b. If there is no LAN interface, the chaddr field SHOULD be\n      determined\
    \ by concatenating x'4000', the IPv4 address of the\n      interface supplying\
    \ network connectivity, and an additional octet.\n      The x'4000' value indicates\
    \ a locally administered unicast MAC\n      address, thus guaranteeing that the\
    \ constructed chaddr value will\n      not conflict with a globally assigned value.\n\
    \      The additional octet (which MAY represent an interface number)\n      SHOULD\
    \ be persistent between reboots, so that the chaddr value\n      will be persistent\
    \ across reboots if the assigned IPv4 address\n      remains consistent.\n   If\
    \ the above prescription is followed, then the chaddr will always be\n   unique\
    \ on the virtual subnet provided that the remote host only\n   brings up a single\
    \ tunnel to the security gateway.  Where a LAN\n   interface is available, the\
    \ chaddr will be globally unique.  When a\n   non-LAN interface is available and\
    \ a unique Internet address is\n   assigned to the remote host, the chaddr will\
    \ also be globally unique.\n   Where a private IP address [22] is assigned to\
    \ a non-LAN interface,\n   it will not be globally unique.  However, in this case\
    \ packets will\n   not be routed back and forth between the remote host and the\
    \ security\n   gateway unless the external network and corporate network have\
    \ a\n   consistent addressing plan.  In this case the private IP address\n   assigned\
    \ to the remote host will be unique on the virtual subnet.\n   For use in DHCPv4\
    \ configuration of IPsec tunnel mode, the client-\n   identifier option MUST be\
    \ included, MUST be unique within the virtual\n   subnet and SHOULD be persistent\
    \ across reboots.  Possibilities\n   include:\n   a. The htype/chaddr combination.\
    \  If assigned as described above,\n      this will be unique on the virtual subnet.\
    \  It will be persistent\n      across reboots for a LAN interface.  If a non-LAN\
    \ interface is\n      used, it may not be persistent across reboots if the assigned\
    \ IP\n      address changes.\n   b. The machine FQDN concatenated with an interface\
    \ number.  Assuming\n      that the machine FQDN does not conflict with that of\
    \ another\n      machine, this will be unique on the virtual subnet as well as\n\
    \      persistent across reboots.\n   c. The user NAI concatenated with an interface\
    \ number.  Assuming that\n      the user is only connected to the VPN at one location,\
    \ this will\n      be unique on the subnet as well as persistent across reboots.\n\
    \   In order to deliver the DHCPDISCOVER packet from the intranet\n   interface\
    \ to the security gateway, an IKE Phase 1 SA is established\n   between the Internet\
    \ interface and the security gateway.  A phase 2\n   (quick mode) DHCP SA tunnel\
    \ mode SA is then established.  The key\n   lifetime for the DHCP SA SHOULD be\
    \ on the order of minutes since it\n   will only be temporary.  The remote host\
    \ SHOULD  use an IDci payload\n   of 0.0.0.0/UDP/port 68 in the quick mode exchange.\
    \  The security\n   gateway will use an IDcr payload of its own Internet address/UDP/port\n\
    \   67.  The DHCP SA is established as a tunnel mode SA with filters set\n   as\
    \ follows:\n      From remote host to security gateway: Any to Any, destination:\
    \ UDP\n      port 67\n      From security gateway to remote host: Any to Any,\
    \ destination: UDP\n      port 68\n   Note that these filters will work not only\
    \ for a client without\n   configuration, but also with a client that has previously\
    \ obtained a\n   configuration lease, and is attempting to renew it.  In the latter\n\
    \   case, the DHCP SA will initially be used to send a DHCPREQUEST rather\n  \
    \ than a DHCPDISCOVER message.  The initial DHCPv4 message\n   (DHCPDISCOVER or\
    \ DHCPREQUEST) is then tunneled to the security\n   gateway using the tunnel mode\
    \ SA.  Note that since the DHCPDISCOVER\n   packet has a broadcast address destination,\
    \ the IPsec implementations\n   on both the remote host and the security gateway\
    \ must be capable of\n   handling this.\n"
- title: 4.2.  DHCP Relay behavior
  contents:
  - "4.2.  DHCP Relay behavior\n   While other configurations are possible, typically\
    \ the DHCPv4 server\n   will not reside on the same machine as the security gateway,\
    \ which\n   will act as a DHCPv4 relay, inserting its address in the \"giaddr\"\
    \n   field.  In this case, the security gateway relays packets between the\n \
    \  client and the DHCPv4 server, but does not request or renew addresses\n   on\
    \ the client's behalf.  While acting as a DHCP Relay, the security\n   gateway\
    \ MAY implement DHCP Relay load balancing as described in [19].\n   Since DHCP\
    \ Relays are stateless, the security gateway SHOULD insert\n   appropriate information\
    \ in the DHCP message prior to forwarding to\n   one or more DHCP servers.  This\
    \ enables the security gateway to route\n   the corresponding DHCPOFFER message(s)\
    \ back to the remote host on the\n   correct IPsec tunnel, without having to keep\
    \ state gleaned from the\n   DISCOVER, such as a table of the xid, chaddr and\
    \ tunnel.\n   If the security gateway maintains a separate subnet for each IPsec\n\
    \   tunnel, then this can be accomplished by inserting the appropriate\n   interface\
    \ address in the giaddr field.  Alternatively, the security\n   gateway can utilize\
    \ the DHCP Relay Agent Information Option [17].  In\n   this case, the virtual\
    \ port number of the tunnel is inserted in the\n   Agent Circuit ID Sub-option\
    \ (sub-option code 1).\n   To learn the internal IP address of the client in order\
    \ to route\n   packets to it, the security gateway will typically snoop the yiaddr\n\
    \   field within the DHCPACK and plumb a corresponding route as part of\n   DHCP\
    \ Relay processing.\n   Where allocating a separate subnet for each tunnel is\
    \ not feasible,\n   and the DHCP server does not support the Relay Agent Information\n\
    \   Option, stateless Relay Agent behavior will not be possible.  In such\n  \
    \ cases, implementations MAY devise a mapping between the xid, chaddr,\n   and\
    \ tunnel in order to route the DHCP server response to the\n   appropriate tunnel\
    \ endpoint.  Note that this is particularly\n   undesirable in large VPN servers\
    \ where the resulting state will be\n   substantial.\n"
- title: 4.3.  DHCPREQUEST message processing
  contents:
  - "4.3.  DHCPREQUEST message processing\n   After the Internet interface has received\
    \ the DHCPOFFER message, it\n   forwards this to the intranet interface after\
    \ IPsec processing.  The\n   intranet interface then responds by creating a DHCPREQUEST\
    \ message,\n   which is tunneled to security gateway using the DHCP SA.\n"
- title: 4.4.  DHCPACK message processing
  contents:
  - "4.4.  DHCPACK message processing\n   The DHCPv4 server then replies with a DHCPACK\
    \ or DHCPNAK message,\n   which is forwarded down the DHCP SA by the security\
    \ gateway.  The\n   remote host Internet interface then forwards the DHCPACK or\
    \ DHCPNAK\n   message to the intranet interface after IPsec processing.\n   After\
    \ processing of the DHCPACK, the intranet interface is configured\n   and the\
    \ Internet interface can establish a new IPsec tunnel mode SA\n   to the security\
    \ gateway.  The remote host may now delete the DHCP\n   tunnel mode SA.  All future\
    \ DHCP messages sent by the client,\n   including DHCPREQUEST, DHCPINFORM, DHCPDECLINE,\
    \ and DHCPRELEASE\n   messages will use the newly established VPN SA.  Similarly,\
    \ all DHCP\n   messages subsequently sent by the DHCPv4 server will be forwarded\
    \ by\n   the security gateway (acting as a DHCP Relay) using the IPsec tunnel\n\
    \   mode SA, including DHCPOFFER, DHCPACK, and DHCPNAK messages.\n   It SHOULD\
    \ be possible to configure the remote host to forward all\n   Internet-bound traffic\
    \ through the tunnel.  While this adds overhead\n   to round-trips between the\
    \ remote host and the Internet, it provides\n   some added security in return\
    \ for this, in that the corporate\n   security gateway may now filter traffic\
    \ as it would if the remote\n   host were physically located on the corporate\
    \ network.\n"
- title: 4.5.  Configuration policy
  contents:
  - "4.5.  Configuration policy\n   Several mechanisms can be used to enable remote\
    \ hosts to be assigned\n   different configurations.  For example, clients may\
    \ use the User\n   Class Option [16] to request various configuration profiles.\
    \  The\n   DHCPv4 server may also take a number of other variables into account,\n\
    \   including the htype/chaddr; the host name option; the client-\n   identifier\
    \ option; the DHCP Relay Agent Information option [17]; the\n   vendor-class-identifier\
    \ option; the vendor-specific information\n   option; or the subnet selection\
    \ option [15].\n   Conditional configuration of clients, described in [18], can\
    \ be used\n   to solve a number of problems, including assignment of options based\n\
    \   on the client operating system; assignment of groups of clients to\n   address\
    \ ranges subsequently used to determine quality of service;\n   allocation of\
    \ special address ranges for remote hosts; assignment of\n   static routes to\
    \ clients [20], etc.  As noted in the security\n   considerations, these mechanisms,\
    \ while useful, do not enhance\n   security since they can be evaded by a remote\
    \ host choosing its own\n   IP address.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This protocol is secured using IPsec, and as\
    \ a result the DHCP\n   packets flowing between the remote host and the security\
    \ gateway are\n   authenticated and integrity protected.\n   However, since the\
    \ security gateway acts as a DHCP Relay, no\n   protection is afforded the DHCP\
    \ packets in the portion of the path\n   between the security gateway and the\
    \ DHCP server, unless DHCP\n   authentication is used.\n   Note that authenticated\
    \ DHCP cannot be used as an access control\n   mechanism.  This is because a remote\
    \ host can always set its own IP\n   address and thus evade any  security measures\
    \ based on DHCP\n   authentication.\n   As a result, the assigned address MUST\
    \ NOT be depended upon for\n   security.  Instead, the security gateway can use\
    \ other techniques\n   such as instantiating packet filters or quick mode selectors\
    \ on a\n   per-tunnel basis.\n   As described in [17], a number of issues arise\
    \ when forwarding DHCP\n   client requests from untrusted sources.  These include\
    \ DHCP\n   exhaustion attacks, and spoofing of the client identifier option or\n\
    \   client MAC address.  These issues can be partially addressed through\n   use\
    \ of the DHCP Relay Information Option [17].\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document requires that an htype value be allocated\
    \ for use with\n   IPsec tunnel mode, as described in section 4.1.  Note that\
    \ DHCP\n   relies on the arp-parameters registry for definition of both the hrd\n\
    \   parameter in ARP and the htype parameter in BOOTP/DHCP.  As a result,\n  \
    \ an assignment in the arp-parameters registry is required, even though\n   IPsec-DHCP\
    \ will never use that parameter for ARP purposes, since\n   conceptually BOOTP/DHCP\
    \ and ARP share the arp-parameters registry.\n   This document does not create\
    \ any new number spaces for IANA\n   administration.\n"
- title: 7.  Intellectual Property Statement
  contents:
  - "7.  Intellectual Property Statement\n   The IETF takes no position regarding\
    \ the validity or scope of any\n   intellectual property or other rights that\
    \ might be claimed to\n   pertain to the implementation or use of the technology\
    \ described in\n   this document or the extent to which any license under such\
    \ rights\n   might or might not be available; neither does it represent that it\n\
    \   has made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1  Normative References
  contents:
  - "8.1  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs to\
    \ Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n   [2]\
    \  Atkinson, R. and S. Kent, \"Security Architecture for the\n        Internet\
    \ Protocol\", RFC 2401, November 1998.\n   [3]  Droms, R., \"Dynamic Host Configuration\
    \ Protocol\", RFC 2131,\n        March 1997.\n   [4]  Alexander, S. and R. Droms,\
    \ \"DHCP Options and BOOTP Vendor\n        Extensions\", RFC 2132, March 1997.\n\
    \   [5]  Droms, R. and W. Arbaugh, \"Authentication for DHCP Messages\",\n   \
    \     RFC 3118, June 2001.\n   [6]  Kent, S. and R. Atkinson, \"IP Authentication\
    \ Header\", RFC 2402,\n        November 1998.\n   [7]  Kent, S. and R. Atkinson,\
    \ \"IP Encapsulating Security Payload\n        (ESP)\", RFC 2406, November 1998.\n\
    \   [8]  Piper, D., \"The Internet IP Security Domain of Interpretation of\n \
    \       ISAKMP\", RFC 2407, November 1998.\n   [9]  Harkins, D. and D. Carrel,\
    \ \"The Internet Key Exchange (IKE)\",\n        RFC 2409, November 1998.\n"
- title: 8.2  Informative References
  contents:
  - "8.2  Informative References\n   [10] McGregor, G., \"The PPP Internet Protocol\
    \ Control Protocol\n        (IPCP)\", RFC 1332, May 1992.\n   [11] Cobb, S., \"\
    PPP Internet Protocol Control Protocol Extensions for\n        Name Server Addresses\"\
    , RFC 1877, December 1995.\n   [12] Droms, R., Kinnear, K., Stapp, M., Volz, B.,\
    \ Gonczi, S., Rabil,\n        G., Dooley, M. and A. Kapur, \"DHCP Failover Protocol\"\
    , Work in\n        Progress.\n   [13] Dukes, D. and R. Pereira, \"The ISAKMP Configuration\
    \ Method\",\n        Work in Progress.\n   [14] T'Joens, Y., Hublet, C. and P.\
    \ De Schrijver, \"DHCP reconfigure\n        extension\", RFC 3203, December 2001.\n\
    \   [15] Waters, G., \"The IPv4 Subnet Selection Option for DHCP\", RFC\n    \
    \    3011, November 2000.\n   [16] Stump, G., Droms, R., Gu, Y., Vyaghrapuri,\
    \ R., Demirtjis, A.,\n        Beser, B. and J. Privat, \"The User Class Option\
    \ for DHCP\", RFC\n        3004, November 2000.\n   [17] Patrick, M., \"DHCP Relay\
    \ Agent Information Option\", RFC 3046,\n        January 2001.\n   [18] Droms,\
    \ R., and Lemon, T., The DHCP Handbook, Macmillan,\n        Indianapolis, Indiana,\
    \ 1999.\n   [19] Volz, B., Gonczi, S., Lemon, T. and R. Stevens, \"DHC Load\n\
    \        Balancing Algorithm\", RFC 3074, February 2001.\n   [20] Lemon, T., Cheshire,\
    \ S. and B. Volz, \"The Classless Static Route\n        Option for Dynamic Host\
    \ Configuration Protocol (DHCP)\", RFC\n        3442, December 2002.\n   [21]\
    \ Kelly, S. and S. Ramamoorthi, \"Requirements for IPsec Remote\n        Access\
    \ Scenarios\", RFC 3457, January 2003.\n   [22] Rekhter, Y., Moskowitz, B., Karrenberg,\
    \ D., G. de Groot, and E.\n        Lear, \"Address Allocation for Private Internets\"\
    , BCP 5, RFC\n        1918, February 1996.\n   [23] Atkinson, R., \"Key Exchange\
    \ Delegation Record for the DNS\", RFC\n        2230, November 1997.\n   [24]\
    \ Gulbrandsen, A., Vixie, P. and L. Esibov, \"A DNS RR for\n        specifying\
    \ the location of services (DNS SRV)\", RFC 2782,\n        February 2000.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   This document has been enriched by comments from John\
    \ Richardson and\n   Prakash Iyer of Intel, Gurdeep Pall and Peter Ford of Microsoft.\n"
- title: Appendix - IKECFG evaluation
  contents:
  - "Appendix - IKECFG evaluation\n   Alternatives to DHCPv4, such as ISAKMP CFG,\
    \ described in [13], do not\n   meet the basic requirements described in [21],\
    \ nor do they provide\n   the additional capabilities of DHCPv4.\n   Basic configuration\n\
    \         While ISAKMP CFG can provide for IP address assignment as well\n   \
    \      as configuration of a few additional parameters such as the DNS\n     \
    \    server and WINS server addresses, the rich configuration\n         facilities\
    \ of DHCPv4 are not supported.  Past experience with\n         similar configuration\
    \ mechanisms within PPP IPCP [11] has\n         taught us that it is not viable\
    \ merely to support minimal\n         configuration.  Eventually, either much\
    \ of the functionality\n         embodied in the DHCPv4 options [4] is duplicated\
    \ or support for\n         DHCPINFORM [3] will be required.\n   Address management\
    \ integration\n         Since IKECFG is not integrated with existing IP address\n\
    \         management facilities, it is difficult to integrate it with\n      \
    \   policy management services that may be dependent on the user to\n        \
    \ IP address binding.\n   Address pool management\n         IKECFG does not provide\
    \ a mechanism for the remote host to\n         indicate a preference for a particular\
    \ address pool.  This\n         makes it difficult to support address pool management.\n\
    \   Reconfiguration\n         IKECFG does not support the concept of configuration\
    \ leases or\n         reconfiguration.\n   Fail-over support\n         Since IKECFG\
    \ creates a separate pool of address state, it\n         complicates the provisioning\
    \ of network utility-class\n         reliability, both in the IP address management\
    \ system and in\n         the security gateways themselves.\n   Security and simplicity\n\
    \         As past history with PPP IPCP demonstrates, once it is decided\n   \
    \      to provide non-integrated address management and configuration\n      \
    \   facilities within IKE, it will be difficult to limit the\n         duplication\
    \ of effort to address assignment.  Instead, it will\n         be tempting to\
    \ also duplicate the configuration, authentication\n         and fail-over facilities\
    \ of DHCPv4.  This duplication will\n         greatly increase the scope of work,\
    \ eventually compromising the\n         security of IKE.\n   Authentication\n\
    \         While IKECFG can support mutual authentication of the IPsec\n      \
    \   tunnel endpoints, it is difficult to integrate IKECFG with\n         DHCPv4\
    \ authentication [5].  This is because the security\n         gateway will not\
    \ typically have access to the client\n         credentials necessary to issue\
    \ an DHCPv4 authentication option\n         on the client's behalf.\n   As a result,\
    \ security gateways implementing IKECFG typically request\n   allocation of an\
    \ IP address on their own behalf, and then assign this\n   to the client via IKECFG.\
    \  Since IKECFG does not support the concept\n   of an address lease, the security\
    \ gateway will need to do the renewal\n   itself.  This complicates the renewal\
    \ process.\n   Since RFC 2131 [3] assumes that a DHCPREQUEST will not contain\
    \ a\n   filled in giaddr field when generated during RENEWING state, the\n   DHCPACK\
    \ will be sent directly to the client, which will not be\n   expecting it.  As\
    \ a result, it is either necessary for the security\n   gateway to add special\
    \ code to avoid forwarding such packets, or to\n   wait until REBINDING state.\
    \  Since [3] does not specify that the\n   giaddr field cannot be filled in when\
    \ in the REBINDING state, the\n   security gateway may put its own address in\
    \ the giaddr field when in\n   REBINDING state, thereby ensuring that it can receive\
    \ the renewal\n   response without treating it as a special case.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Baiju V. Patel\n   Intel Corp\n   2511 NE 25th Ave\n \
    \  Hillsboro, OR 97124\n   Phone: +1 503 712 2303\n   EMail: baiju.v.patel@intel.com\n\
    \   Bernard Aboba\n   Microsoft Corporation\n   One Microsoft Way\n   Redmond,\
    \ WA 98052\n   Phone: +1 425 706 6605\n   EMail: bernarda@microsoft.com\n   Scott\
    \ Kelly\n   Airespace\n   110 Nortech Pkwy\n   San Jose CA 95134 USA\n   Phone:\
    \ +1 (408) 941-0500\n   EMail: scott@hyperthought.com\n   Vipul Gupta\n   Sun\
    \ Microsystems, Inc.\n   MS UMTV29-235\n   2600 Casey Avenue\n   Mountain View,\
    \ CA 94303\n   Phone: +1 650 336 1681\n   EMail: vipul.gupta@sun.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
