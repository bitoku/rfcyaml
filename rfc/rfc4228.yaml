- title: __initial_text__
  contents:
  - '           Requirements for an IETF Draft Submission Toolset

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies requirements for an IETF toolset to\n  \
    \ facilitate Internet-Draft submission, validation, and posting.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   14. Bypassing the Toolset .........................................22\n\
    \   15. Email Interface ...............................................23\n  \
    \ 16. Implementation Stages .........................................25\n   17.\
    \ Testing .......................................................26\n   18. Security\
    \ Considerations .......................................27\n   19. Compliance\
    \ ....................................................27\n   Appendix A. Comparison\
    \ with Current Procedures ....................28\n   Appendix B. Acknowledgements\
    \ ......................................29\n   Normative References ..............................................30\n\
    \   Informative References ............................................30\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Public Internet-Drafts are the primary means of structured\n\
    \   communication within the IETF.  Current Internet-Draft submission and\n  \
    \ posting mechanisms hinder efficient and timely communication while\n   creating\
    \ an unnecessary load on the IETF Secretariat.  The IETF Tools\n   team recommends\
    \ formalization and automation of the current\n   mechanisms.  This document contains\
    \ specific automation requirements.\n   The IETF Secretariat and many IETF participants\
    \ have long been\n   proponents of automation.  This document attempts to reflect\
    \ their\n   known needs and wishes, as interpreted by the Tools team.\n"
- title: 2.  Scope
  contents:
  - "2.  Scope\n   The Draft Submission Toolset discussed in this document is about\n\
    \   getting a single new version of an Internet-Draft from an IETF\n   participant\
    \ to the IETF draft repository.  A single draft version may\n   include several\
    \ formats, and dealing with those formats is in scope\n   for the Toolset.  Definition\
    \ and sources of draft meta-information\n   (to be used in Secretariat databases\
    \ and elsewhere) are in scope.\n   Submitter authentication and submission authorization\
    \ are in scope.\n   Draft posting may result in various notifications sent to\
    \ interested\n   parties.  While this document recommends a subset of notification\n\
    \   targets, details of notifications are out of scope.\n   Creation of new drafts\
    \ or new draft versions as well as manipulation,\n   visualization, and interaction\
    \ with the drafts already in the\n   repository are out of scope.  Draft expiration\
    \ and archiving of old\n   draft versions are out of scope.\n   The set of requirements\
    \ in this document is not meant to be\n   comprehensive or final.  Other IETF\
    \ documents or procedures may\n   require additional functionality from the Toolset.\
    \  For example, it\n   is possible that the Toolset will be required to handle\
    \ draft source\n   formats other than plain text and XML.\n"
- title: 3.  Notation and Terminology
  contents:
  - "3.  Notation and Terminology\n   The following terms are to be interpreted according\
    \ to their\n   definitions below.\n   posted draft: A draft accepted into the\
    \ public IETF draft repository\n      and, hence, publicly available from the\
    \ IETF web site.  Posting of\n      a draft does not imply any IETF or IESG review\
    \ and endorsement.\n   draft version: A meant-to-be-public snapshot of an Internet-Draft\n\
    \      with a meant-to-be-unique version number.  Also known as \"draft\n    \
    \  revision\".\n   draft format: Any draft source or presentation format, including\n\
    \      original and preprocessed XML, original or generated plain text as\n  \
    \    well as PDF, PostScript, and HTML formats.\n   primary draft format: The\
    \ first available draft format from the\n      following list: plain text, PDF,\
    \ PostScript, or XML.\n   WG-named draft: A draft for which identifier (a.k.a.\
    \ filename) is\n      known and starts with \"draft-SPECIAL-\", where SPECIAL\
    \ is one of\n      the following strings: \"ietf\", \"iab\", \"iesg\", \"rfc-editor\"\
    , or\n      \"irtf\".  Abbreviated as \"WGN draft\".  Exceptions notwithstanding,\n\
    \      WG-named drafts are usually controlled by IETF working groups or\n    \
    \  similar IETF-related bodies (and vice versa).  The handling of\n      such\
    \ naming exceptions is outside of this document's scope.\n   individual draft:\
    \ A draft other than a WGN draft.\n   submitter: A human or software agent initiating\
    \ submission of an\n      Internet-Draft version for validation or posting.  In\
    \ some cases,\n      the Secretariat staff does the actual submission, but always\
    \ on\n      behalf of a submitter.  In some cases (including but not limited\n\
    \      to malicious attacks), the submitter is not the draft author.\n   expected\
    \ submitter: A submitter that is authorized by IETF rules to\n      post a given\
    \ draft.  This includes a draft author or editor\n      (listed in the draft text),\
    \ a corresponding WG Chair, or an IESG\n      member.\n   authorized submitter:\
    \ An expected submitter authenticated by the\n      Toolset.  Authentication is\
    \ initially limited to verifying\n      submitter access to submitter's email\
    \ address.\n   immediately: Without human interaction or artificial software delays\n\
    \      and within a few seconds.\n   The Toolset is specified using a set of normative\
    \ requirements.\n   These requirements are English phrases ending with an \"(Rnnn/s)\"\
    \n   indication, where \"nnn\" is a unique requirement number, and \"s\" is a\n\
    \   single-letter code (\"a\", \"b\", or \"c\") specifying the implementation\n\
    \   stage for the requirement.  Implementation stages are documented in\n   Section\
    \ 16.\n   This document specifies the interface and functionality of the\n   Toolset,\
    \ not the details of a Toolset implementation.  However,\n   implementation hints\
    \ or examples are often useful.  To avoid mixup\n   with Toolset requirements,\
    \ such hints and examples are often marked\n   with a \"Hint:\" prefix.  Implementation\
    \ hints do not carry any\n   normative force, and a different implementation may\
    \ be the best\n   choice.\n"
- title: 4.  Status Quo
  contents:
  - "4.  Status Quo\n   This section summarizes the process for draft submission and\
    \ posting\n   as it exists at the time of writing.\n   To get an Internet-Draft\
    \ posted on the IETF web site, an IETF\n   participant emails the draft text to\
    \ the IETF Secretariat, along with\n   an informal note asking the Secretariat\
    \ to post the draft.\n   Secretariat staff reads the note, reviews the draft according\
    \ to a\n   checklist, and then approves or rejects the submission.  Draft\n  \
    \ approval triggers the corresponding announcement to be sent to\n   appropriate\
    \ IETF mailing lists.  Every 4 hours, approved drafts are\n   automatically copied\
    \ to the IETF drafts repository and become\n   available on the IETF web site.\n\
    \   Collectively, IETF participants submit thousands of Internet-Drafts\n   per\
    \ year (in the year 2000, about 3,000 drafts were submitted; 2002:\n   5k; 2004:\
    \ 7k [secretariat]).  About 30-50% of posted drafts are\n   WG-named drafts (among\
    \ some 2,100 drafts, there were about 380 new\n   and 290 updated WGN drafts posted\
    \ in 2003).  While no rejection\n   statistics are available, the vast majority\
    \ of submitted drafts are\n   approved by the Secretariat for posting.\n   It\
    \ usually takes the Secretariat a few minutes to review a given\n   draft.  However,\
    \ since the Secretariat staff does not work 24/7, does\n   not work in all time\
    \ zones, and has other responsibilities, and since\n   approved drafts are posted\
    \ in batches every 4 hours, it may take from\n   several hours to several days\
    \ to get a draft posted.  Due to much\n   higher demand and fixed processing capacity,\
    \ postings during the last\n   weeks before IETF face-to-face meetings take much\
    \ longer, creating a\n   long queue of unprocessed drafts that are then announced\
    \ nearly\n   simultaneously.\n   To give IETF face-to-face meeting participants\
    \ time to review\n   relevant documents, the Secretariat does not accept Internet-Draft\n\
    \   submissions close to IETF meetings (regardless of whether a draft is\n   relevant\
    \ to the upcoming meeting or not).\n   Many Working Groups have come up with ad\
    \ hoc solutions to cope with\n   posting delays.  For example, many draft snapshots\
    \ are \"temporarily\"\n   published on personal web sites or sent (completely\
    \ or in part) to\n   the group list.  Alternative means of publication may effectively\n\
    \   replace official IETF interfaces, with only a few major draft\n   revisions\
    \ ending up posted on the IETF web site.\n   Informal interfaces for submitting\
    \ and posting drafts discourage\n   automation.  Lack of submission automation\
    \ increases Secretariat\n   load, complicates automated indexing and cross-referencing\
    \ of the\n   drafts, and, for some authors, leads to stale drafts not being\n\
    \   updated often enough.\n   Beyond a short Secretariat checklist, submitted\
    \ drafts are not\n   checked for compliance with IETF requirements for archival\
    \ documents,\n   and submitters are not notified of any violations.  As a result,\
    \ the\n   IESG and RFC Editor may have to spend resources (and delay approval)\n\
    \   resolving violations with draft authors.  Often, these violations can\n  \
    \ be detected automatically and would have been fixed by draft authors\n   if\
    \ the authors knew about them before requesting publication of the\n   draft.\n\
    \   Technically, anybody and anything can submit a draft to the\n   Secretariat.\
    \  There is no reliable authentication mechanism in place.\n   Initial submissions\
    \ of WGN drafts require WG Chair approval, which\n   can be faked just like the\
    \ submission request itself.  No malicious\n   impersonations or fake approvals\
    \ have been reported to date, however.\n   Lack of authentication is not perceived\
    \ as a serious problem,\n   possibly because serious falsification are likely\
    \ to be noticed\n   before serious damage can be done.  Due to the informal and\
    \ manual\n   nature of the submission mechanism, its massive automated abuse is\n\
    \   unlikely to cause anything but a short denial of draft posting\n   service\
    \ and, hence, is probably not worth defending against.\n   However, future automation\
    \ may result in a different trade-off.\n"
- title: 5.  Overall Toolset Operation
  contents:
  - "5.  Overall Toolset Operation\n   This section provides a high-level description\
    \ for the proposed\n   Toolset.  The description is meant to show overall operation\
    \ and\n   order; please refer to other sections for details specific to each\n\
    \   step.\n   A typical submitter goes through a sequence of 2-4 web pages and\n\
    \   associated actions.  The number of pages depends on the draft\n   validation\
    \ and meta-data extraction results.  For example, validating\n   the draft without\
    \ posting it requires interacting with two web pages:\n   Upload and Check.  The\
    \ common case of posting a valid draft without\n   manual meta-data adjustments\
    \ takes three web pages (Upload, Check,\n   Receipt).\n   Here is a brief overview\
    \ of pages and actions:\n   Upload page: The interface to copy a draft from the\
    \ submitter's\n      computer to the Toolset staging area (Section 6).  Multiple\n\
    \      formats are accepted.  The draft is sent to the Check action.\n   Check\
    \ action: Stores the draft in the Toolset staging area, extracts\n      draft\
    \ meta-data, validates the submission (Section 7).  Produces\n      the Check\
    \ page.\n   Check page: Displays draft interpretation and validation results\n\
    \      (Section 8).  A draft preview may also be given on this page.\n      After\
    \ reviewing the draft interpretation and validation results,\n      the submitter\
    \ has four basic choices: (a) auto-post draft \"as is\"\n      now; (b) make manual\
    \ corrections and submit the draft to\n      Secretariat for manual posting later;\
    \ (c) cancel submission; or\n      (d) do nothing.  The automated posting option\
    \ may not be available\n      for drafts with validation errors.\n   Automated\
    \ posting: If the submitter decides to proceed with automated\n      posting from\
    \ the Check page, the system authenticates the\n      submitter and may also check\
    \ whether the submitter is allowed to\n      post the draft.  If the submitter\
    \ is authorized, the draft is\n      immediately posted, deleted from the staging\
    \ area, and the\n      submitter is notified of the result via email and a Receipt\
    \ page\n      (Section 9).\n   Manual adjustment and posting: If the submitter\
    \ decides to adjust the\n      meta-data, the draft remains in the Toolset staging\
    \ area, and the\n      Adjust action (Section 10) presents the submitter with\
    \ an Adjust\n      page (Section 11).  When the submitter makes the adjustments\
    \ and\n      proceeds with manual posting, a pointer to the stored draft and\n\
    \      its adjusted meta-data is sent to the Secretariat for manual\n      processing\
    \ (Section 12).  The submitter is notified of the pending\n      Secretariat request\
    \ via email and a Receipt page.\n   Cancellation: If the submitter decides to\
    \ explicitly cancel the\n      submission, the submission state (including the\
    \ draft) is\n      immediately deleted from the Toolset staging area and an\n\
    \      appropriate Receipt page is generated without further actions\n      (R123/a).\
    \  Cancellation of posted drafts is out of this document\n      scope.\n   Receipt\
    \ page: Contains details of a successful or failed draft\n      submission and\
    \ informs the submitter of the next appropriate\n      step(s) related to submission\
    \ result.\n   The following informal diagram illustrates the basic submission\n\
    \   logic:\n                       /---> Post Now\n                      /\n \
    \  Upload --> Check -+-----> Adjust ---> Send to Secretariat\n               \
    \       \\\n                       \\---> Cancel\n   If the submitter does nothing\
    \ while the Toolset is expecting some\n   response, the abandoned submission times\
    \ out (R124/a).  The timeout\n   value depends on the submission state.  Hint:\
    \ A timeout value of one\n   hour is probably large enough unless the Toolset\
    \ is waiting for some\n   kind of a 3rd party confirmation (e.g., WG Chair approval).\
    \  Doing\n   nothing is functionally equivalent to explicitly canceling the\n\
    \   submission, except that explicit cancellation requires immediate\n   removal\
    \ of submission state while the state of submissions marked as\n   abandoned is\
    \ garbage-collected.\n   The staging area maintenance algorithms must keep the\
    \ area in a\n   consistent, correct state in the presence of denial-of-service\
    \ (DoS)\n   attacks attempting to overwhelm the area with fake submissions in\n\
    \   various stages (R67/a).  Hint: denial of service to legitimate users\n   is\
    \ acceptable under DoS attack conditions, but corruption of the\n   storage area\
    \ is not.\n   The \"web pages\" this text is referring to are distinct dialogs\
    \ that\n   may be visible to the submitter under the same or different URL and\n\
    \   that are supported by a single or several server-side programs.\n   The Toolset\
    \ must handle multiple submitters simultaneously submitting\n   the same draft\
    \ (R72/a) and a single submitter simultaneously\n   submitting two drafts (R73/a).\
    \  The latter might happen, for example,\n   when the submitter is using several\
    \ browser windows to submit several\n   drafts or is submitting drafts via email\
    \ interface.  The term\n   \"simultaneously\" means that submission processing\
    \ times overlap.\n   Hint: Except for the Upload page, pages contain a submission\
    \ session\n   identifier to provide actions with access to stored information.\
    \  The\n   identifier is specific to the submission rather than the draft\n  \
    \ version or the submitter.  While the nature of the web interface\n   allows\
    \ the session identifier to be invisible to the submitter, email\n   communication\
    \ would need to identify the session so that the\n   recipient (and Toolset) know\
    \ the context.\n   Hint: A single action may correspond to multiple server-side\
    \ programs\n   and, vice versa, a single program may implement several actions.\n\
    \   This document does not mandate any specific technology (e.g., Common\n   Gateway\
    \ Interface (CGI), PHP, and/or Java servlets) to implement\n   server-side support.\
    \  The implementer experience, code reuse across\n   web and email interfaces,\
    \ and other factors will determine the right\n   technology choice.\n   Hint:\
    \ Actions preserve and exchange state by storing it along with\n   the draft.\
    \  Grouping all submission-specific information in one\n   subdirectory named\
    \ using the session identifier may increase\n   robustness and simplify debugging.\
    \  Session creation and destruction\n   can then be logged in a global index.\n\
    \   Ways to partially or completely bypass the Toolset are documented in\n   Section\
    \ 14.\n   It must be possible to transfer the Toolset from one management team\n\
    \   to another, to incorporate work by volunteers, and to allow for\n   public\
    \ review of the developed code.  To meet these goals, the\n   Toolset source codes\
    \ should be publicly available (R152/b) and there\n   should be an interface to\
    \ report bugs and request enhancements\n   (R145/b).  Development should be structured\
    \ to avoid lock-in to\n   proprietary platforms or backends.  The Tools team believes\
    \ that\n   developing the Toolset sources under one or more open source licenses\n\
    \   following the Open Source Definition [OSD] would provide an effective\n  \
    \ way of meeting these requirements at reasonable cost.  Care should be\n   taken\
    \ that the licenses selected allow code from different\n   implementers to be\
    \ mixed.\n   Hint: Placing the Toolset source repository at an\n   open-source-friendly\
    \ project management site like SourceForge.net\n   would provide the IETF community\
    \ with a decent, ready-to-use\n   interface to access the code, documentation,\
    \ bug reports, and\n   discussion forums.  Establishing and documenting a simple\
    \ interface\n   between the Toolset and external software (e.g., the Secretariat\n\
    \   draft posting scripts) would facilitate availability checks.\n   The Toolset\
    \ is meant to be compatible with the Secretariat's tools\n   for handling drafts.\
    \  Hint: Such compatibility can be achieved by\n   appropriately implementing\
    \ the Toolset or, in some cases, by\n   modifying existing Secretariat tools.\n"
- title: 6.  Upload Page
  contents:
  - "6.  Upload Page\n   To upload a draft, the submitter goes to a well-known page\
    \ on the\n   IETF web site (R1/b).  There, the draft text can be uploaded using\
    \ an\n   HTML file upload form.  This form provides fields to upload the plain\n\
    \   text format of the draft (R2/a) and all other formats allowed by IETF\n  \
    \ draft publication rules (R3/b).  At the time of writing, these\n   formats are:\
    \ XML ([RFC2629] and [writing-rfcs]), PDF, and PostScript.\n   Submitted forms\
    \ are handled by the Check action documented in\n   Section 7.\n   The Upload\
    \ page also has a validate-only flag, indicating that an\n   uploaded draft must\
    \ not be posted and may be deleted immediately\n   after the validation (R74/b).\
    \  Regardless of the validation results,\n   the stored draft meta-data is marked\
    \ so that validation-only drafts\n   can be identified and deleted first by garbage\
    \ collector for the\n   Toolset staging area (R75/b).  Drafts uploaded in a validate-only\n\
    \   mode cannot be posted (R76/b); they would need to be uploaded again,\n   without\
    \ the validate-only flag, and the validation results page\n   should explain that\
    \ (R77/b).  This flag is useful for tools using\n   online validation, especially\
    \ for bulk draft processing.  Hint: it\n   may be better to implement this flag\
    \ as a hidden HTML input field to\n   simplify the interface for human submitters.\n"
- title: 7.  Check Action
  contents:
  - "7.  Check Action\n   The Check action preprocesses a submission, generates plain\
    \ text\n   format (if needed, see R70), stores the submitted draft (all formats)\n\
    \   in the staging area, and then extracts meta-data and validates each\n   format\
    \ (R6/a).  Errors and warnings are indicated to the submitter in\n   the response\
    \ via computer-friendly tag(s) and human-friendly text\n   (R7/a).\n   If any\
    \ error is found, automated posting becomes impossible (R113/a).\n   This rule\
    \ applies to all errors, even those that do not refer to R113\n   and do not explicitly\
    \ prohibit automated posting.  If automated\n   posting is not possible, the Toolset\
    \ still gives the submitter an\n   option of sending the draft for manual validation\
    \ and posting\n   (R114/a).  Since each submission is treated in isolation, the\n\
    \   submitter also has an option of correcting the problem and\n   resubmitting\
    \ the draft for automated posting.\n   The manual validation and posting route\
    \ is a Toolset bypass mechanism\n   (see Section 14) not meant for fixing problems\
    \ with the draft itself.\n   The Secretariat does not generally correct submitted\
    \ drafts.  If the\n   draft needs tweaking to match submitter's intent, then the\
    \ draft\n   should be corrected by the submitter and resubmitted.\n   It is an\
    \ error to submit a draft that has neither plain text nor XML\n   source format\
    \ (R68/a).  XML source is acceptable without accompanying\n   plain text only\
    \ if the Toolset successfully generates a draft in\n   plain text format from\
    \ the XML source, as a part of the processing\n   step documented below (R69/b).\
    \  These rules imply that PDF- or\n   PostScript-only drafts cannot be auto-posted.\
    \  Moreover, even manual\n   Secretariat involvement cannot help with posting\
    \ these drafts, as the\n   IETF policy is to always require a plain text format\
    \ in addition to\n   PDF or PostScript.  Furthermore, drafts containing PDF or\
    \ PostScript\n   format must not be auto-posted until the Toolset can validate\
    \ that\n   their content matches the plain text format (R143/a).\n   The draft\
    \ format acceptance rules above are meant to decrease the\n   chances that multiple\
    \ posted draft formats for a single draft contain\n   substantially different\
    \ documents.  With experience, the rules may be\n   simplified so that, for example,\
    \ only submissions containing nothing\n   but XML or plain text sources can be\
    \ posted without Secretariat\n   involvement and all other submissions require\
    \ manual actions to match\n   formats or extract meta-data.\n"
- title: 7.1.  Preprocessing
  contents:
  - "7.1.  Preprocessing\n   Submitting compressed drafts is a desirable feature,\
    \ especially for\n   submitters behind slow or content-altering links.  Compressed\
    \ draft\n   formats may be accepted (R150/c).  Compressed formats, if any, must\n\
    \   be decompressed during the preprocessing step (R151/c) so that other\n   processors\
    \ do not have to deal with compressed formats.  Hint: While\n   this specification\
    \ does not document a list of supported compression\n   standards, it is expected\
    \ that such popular methods as \"zip\" and\n   \"gzip\" should be accepted if\
    \ compression is supported.  Accepting a\n   collection of draft formats within\
    \ a single compressed archive may\n   also be desirable.\n   XML source containing\
    \ XML processor <rfc? include=\"...\"> instructions\n   (PIs) is preprocessed\
    \ to include references (R8/b).  This step is\n   needed to remove external dependencies\
    \ from XML sources and to\n   simplify tools processing posted XML.  This document\
    \ refers to such\n   XML processor instructions as \"include PIs\".\n   The XML\
    \ preprocessor uses public database(s) to resolve PI references\n   (R85/b). \
    \ The Toolset documentation specifies what databases are used\n   and how PIs\
    \ are mapped to database entries (R86/b).  The Toolset must\n   not rely on PIs'\
    \ existence (R87/b) because some XML sources will be\n   preprocessed before the\
    \ submission or will be written without PIs.\n   Hint: Local up-to-date copies\
    \ of Marshall Rose's reference databases\n   at xml.resource.org can be used.\n\
    \   Both original and preprocessed XML sources may be posted later.  The\n   original\
    \ source with include PIs may be useful to the RFC Editor and\n   generation of\
    \ diffs (against future or past original sources).  The\n   preprocessed source\
    \ without include PIs becomes the default public\n   XML source of the posted\
    \ draft (R10/b).  If any of the include PIs\n   known to the Toolset cannot be\
    \ handled, an error is recorded (R11/b),\n   and the submitter is encouraged to\
    \ do the preprocessing locally,\n   before submitting the draft (R111/b).\n  \
    \ Uncompressed draft formats other than XML are not preprocessed.\n"
- title: 7.2.  Processing
  contents:
  - "7.2.  Processing\n   When no plain text format of the draft is submitted, but\
    \ XML sources\n   are available, the Toolset attempts to generate plain text format\n\
    \   from submitted XML sources (R70/b).\n   If XML sources are available, the\
    \ Toolset generates HTML draft format\n   (R112/c).  HTML generation failures\
    \ should result in warnings, not\n   errors (R115/c).  HTML generation is not\
    \ meant to be implemented\n   until the Enhancement Stage is reached (R130/a).\
    \  In general, HTML\n   generation is desirable because HTML drafts are usually\
    \ easier to\n   navigate than plain text drafts due to improved overall readability\n\
    \   and links.  As any Enhancement Stage feature, HTML generation may be\n   dropped\
    \ or drastically changed to reflect then-current IETF consensus\n   and the experience\
    \ of the first two implementation stages.\n   Hint: The Toolset implementers should\
    \ not assume that draft formats\n   generated by the same tool from the same source\
    \ format have\n   essentially the same content.  The generation tool may have\
    \ options\n   that allow authors to generate content exclusive to a specific\n\
    \   generated format.  Such options might be abused.\n"
- title: 7.3.  Storage
  contents:
  - "7.3.  Storage\n   The Check action needs to store all draft formats so that\n\
    \   successfully validated drafts can later be auto-posted at submitter\n   request.\
    \  The action stores all submitted formats of the draft in a\n   staging area\
    \ dedicated to the Toolset (R12/a).  If, after garbage\n   collection, the staging\
    \ area is full (i.e., the total used size has\n   reached the configured maximum\
    \ capacity), the submitter and the\n   Secretariat are notified of a fatal error\
    \ (R13/a).\n"
- title: 7.4.  Extraction
  contents:
  - "7.4.  Extraction\n   The Toolset extracts meta-data from the following stored\
    \ draft\n   formats: plain text (R131/a), XML (R132/b), and other (R133/c).  If\
    \ a\n   meta-data extraction fails, the Toolset records an error (R15/a).\n  \
    \ Meta-data extraction is necessary to validate and post the draft.\n   Extraction\
    \ from all formats is necessary to validate that all\n   meta-data matches across\
    \ all formats (in addition to and before the\n   Toolset can validate that the\
    \ contents matches as well).\n   Section 16 documents a non-obvious implementation\
    \ schedule related to\n   the above requirements.  When only partial support for\
    \ format\n   interpretation is available, only interpreted formats are subject\
    \ to\n   extraction and validation requirements.  In other words, if the\n   Toolset\
    \ does not yet support interpretation of a given format, then\n   the corresponding\
    \ information is stored and made available \"as is\",\n   regardless of the actual\
    \ content.\n   The draft interpreter extracts the following meta-data from each\n\
    \   draft format (R16/a):\n   identifier: Also known as draft \"filename\".  For\
    \ example,\n      \"draft-ietf-sieve-vacation-13\".\n   version: A non-negative\
    \ integer number representing draft version\n      number (also known as draft\
    \ revision number).  For example, the\n      number 7 in \"draft-ietf-sieve-vacation-07\"\
    .  The number is usually\n      rendered using two digits, padding with \"0\"\
    \ if necessary.\n   name: The common part of all draft identifiers for all versions\
    \ of\n      the same draft.  In other words, a draft identifier without the\n\
    \      version component.  For example, \"draft-ietf-sieve-vacation\" in\n   \
    \   \"draft-ietf-sieve-vacation-07\".\n   WG ID: Working Group identifier.  For\
    \ example, \"sieve\" in\n      \"draft-ietf-sieve-vacation-07\" is a WG ID.  The\
    \ WG ID value is\n      empty for drafts that are not WG-named drafts.\n   WG\
    \ flag: True for WGN drafts and false for all other drafts.  For\n      example,\
    \ \"true\" for \"draft-ietf-sieve-vacation-13\".  This flag\n      only influences\
    \ the further handling of initial (version 00) draft\n      submissions, as far\
    \ as the current document is concerned.\n   title: A human-friendly draft title.\
    \  For example, the title of this\n      document is \"Requirements for an IETF\
    \ Draft Submission Toolset\".\n   authors: A list of all draft authors.  Each\
    \ author's name and email\n      address are extracted.\n   abstract: The draft\
    \ abstract text.\n   creation date: The draft version creation date.\n   expiration\
    \ date: The draft version expiration date.\n   size: The number of pages and octets\
    \ in the primary format of the\n      draft.  The definition of a page depends\
    \ on the format and may be\n      imprecise or arbitrary for some formats.\n \
    \  Failure to extract any field results in error (R95/a).\n   The Toolset requires\
    \ author email addresses because they are\n   essential for notifying co-authors\
    \ that their draft has been posted.\n   If there are no such notifications, a\
    \ submitter adding a co-author to\n   the draft without the co-author's consent\
    \ may not be caught for a\n   while.  Such \"surprise\" co-authorships have happened\
    \ in the past and\n   can be quite annoying.  However, since the Toolset does\
    \ not solicit\n   co-authors' consent to post a valid draft (and such solicitation\n\
    \   would not go beyond email control verification anyway), it is not\n   possible\
    \ to stop a malicious submitter from adding co-authors without\n   their knowledge.\n\
    \   Like other meta-data items above, draft creation and expiration dates\n  \
    \ are extracted from the draft; their values do not depend on the\n   actual submission\
    \ time (i.e., the time the Check action starts).\n   However, the validation procedure\
    \ (see Section 7.5) may declare any\n   extracted date invalid after taking into\
    \ consideration current (i.e.,\n   submission) time, IETF draft expiration rules,\
    \ and other factors\n   external to the draft.\n"
- title: 7.5.  Validation
  contents:
  - "7.5.  Validation\n   Drafts need to be validated to catch broken submissions.\
    \  Validation\n   also helps educate or warn authors of problems that may become\n\
    \   show-stoppers when the draft is sent for IETF Last Call and IESG\n   review.\
    \  IETF standards have to follow a set of syntax and semantics\n   requirements\
    \ (see the \"ID-NITS\" document at\n   <http://www.ietf.org/ID-Checklist.html>.\
    \  Most of those requirements\n   are not enforced for Internet-Drafts.  However,\
    \ following them may\n   improve draft quality, reduce the IESG load, and increase\
    \ the chances\n   of the draft being approved as an RFC.\n   When validating a\
    \ given draft, it is important to distinguish between\n   absolute requirements\
    \ and desirable draft properties.  Both\n   categories are checked for, but violations\
    \ have different effects\n   depending on the category.  The two categories are\
    \ detailed in the\n   following subsections.\n   When a valid draft is being posted\
    \ and submitter authorization or\n   co-author notification is performed, validation\
    \ results should be\n   included in the email (R81/b) so that the submitter can\
    \ see meta-data\n   extraction and validation warnings.  Note that these results\
    \ cannot\n   include errors since only valid drafts can be posted.\n"
- title: 7.5.1.  Absolute Requirements
  contents:
  - "7.5.1.  Absolute Requirements\n   Violating any of these requirements would prevent\
    \ a draft from being\n   automatically posted (R17/a).  The offending draft would\
    \ have to be\n   fixed or submitted for manual posting, with an explanation as\
    \ to why\n   the absolute requirements need to be violated (or why the Validator\n\
    \   mis-detected violations).  These explanations may speed up the\n   Secretariat\
    \ posting decision and may help the Secretariat to improve\n   the Toolset implementation.\n\
    \   1.  All available meta-data entries must match across all submitted\n    \
    \   draft formats (R18/a).  For example, if the interpreter managed\n       to\
    \ extract a draft title from both the plain text and the PDF\n       format, both\
    \ titles must match.  This requirement prevents\n       accidental submission\
    \ of mismatching formats.\n   2.  Version 00 of a Working Group draft has a corresponding\
    \ Working\n       Group approval (R20/a).  This approval can be relayed before\
    \ or\n       after the first draft submission, by a Chair or Secretary of the\n\
    \       WG.  See Section 7.5.4 for related requirements.\n   3.  The draft ID\
    \ must be correct (R22/a), including the draft version\n       number value and\
    \ format.  Single-digit draft version numbers must\n       be left-padded with\
    \ \"0\".  Draft version numbers must start with\n       zero and increase by one\
    \ with every new version.  To satisfy this\n       requirement, the Toolset would\
    \ have to consult the repository of\n       already posted drafts, including expired\
    \ ones.  If the IETF\n       infrastructure cannot handle version numbers greater\
    \ than 99, the\n       Toolset must reject them (R158/a).\n   4.  An IETF IPR\
    \ Statement and other boilerplate required for drafts\n       according to [RFC3978]\
    \ and [RFC3979] (or successors) must appear\n       in the draft text (R23/a).\n\
    \   5.  The extracted creation date of the draft version must be within 3\n  \
    \     days of the actual submission date (R159/a).  Hint: Implementers\n     \
    \  should be careful to handle creation dates that appear to be in\n       the\
    \ past or in the future, due to possible time zone differences.\n       Making\
    \ the most forgiving/permissive assumption about the time\n       zone should\
    \ suffice.\n   6.  The draft version expiration date obeys IETF draft expiration\n\
    \       rules.\n   7.  No IETF submission blackout period applies.  Hint: IETF\
    \ blackouts\n       must be enforced based on submission time, not possible draft\n\
    \       creation time.\n   8.  Posting the draft must not result in any DoS attack\
    \ threshold to\n       be crossed (R97/a).  Specific thresholds are documented\
    \ in\n       Section 7.5.3.\n   9.  XML sources (if available) are valid with\
    \ respect to the XML\n       format [XML] (R153/c) and XML Document Type Definition\
    \ (DTD) for\n       IETF drafts (R154/c).  Note that during the first two\n  \
    \     implementation stages, the corresponding validation failures\n       result\
    \ in warnings and not errors (see Section 7.5.2).\n   The XML DTD for IETF drafts\
    \ is documented in [RFC2629] with recent\n   changes available in [writing-rfcs].\
    \  Hint: Bill Fenner's \"RFC 2629\n   validator\" at http://rtg.ietf.org/~fenner/ietf/xml2rfc-valid/\
    \ (or its\n   derivative) may be useful for XML format and DTD validation.\n \
    \  Hint: If the extracted meta-data differs in the submitted draft\n   formats,\
    \ the Toolset should use the meta-data from the most \"formal\"\n   format when\
    \ populating the form entries for manual submission.  On\n   the other hand, if\
    \ most extracted entries come from a less \"formal\"\n   format, the Toolset may\
    \ choose that format instead.  For example, XML\n   source can be considered more\
    \ \"formal\" than plain text format.  The\n   Toolset may also offer the submitter\
    \ an option to specify which\n   format should be used for populating the form.\
    \  It is probably a bad\n   idea to mix-and-match the conflicting entries extracted\
    \ from multiple\n   formats.  Instead, either one format should be chosen when\
    \ populating\n   the form or the form should contain several meta-data sections,\
    \ one\n   for each format.  The error messages will contain the exact mismatch\n\
    \   information.\n   Hint: The Toolset should accept dates without the day of\
    \ the month,\n   as long as IETF rules do not prohibit them.  The Toolset should\
    \ make\n   the most forgiving/permissive assumption about the actual day of the\n\
    \   month when validating day-less dates.\n"
- title: 7.5.2.  Desirable Features
  contents:
  - "7.5.2.  Desirable Features\n   Violating any of the following requirements does\
    \ not prevent the\n   submitter from auto-posting the draft (R24/a) but results\
    \ in a\n   warning (R160/a).  Each warning explains the corresponding violation\n\
    \   and provides advice on how to comply (R161/b).  Hint: To ease\n   maintenance\
    \ and encourage 3rd party updates, detailed explanations\n   and/or advice may\
    \ be available as a resource separate from the\n   Toolset.\n   1.  All automatically\
    \ testable nits in the \"ID-NITS\" document at\n       <http://www.ietf.org/ID-Checklist.html>\
    \ (R116/b) and\n       automatically testable guidelines at\n       <http://www.ietf.org/ietf/1id-guidelines.txt>\
    \ (R157/b).  The\n       Toolset should use external tools to check these nits\
    \ and\n       guidelines rather than embed checking code (R117/a).  Hint:\n  \
    \     Henrik Levkowetz's idnits tool can be used\n       (http://tools.ietf.org/tools/idnits/)\
    \ and other tools can be\n       written or adopted.\n   2.  New draft versions\
    \ are expected (R21/b).  For example, version 00\n       of an individual draft\
    \ is always expected, while posting a new\n       version of a draft already under\
    \ the IESG review should generate\n       a warning.\n   3.  If both XML and plain\
    \ text formats are submitted, the submitted\n       plain text matches what can\
    \ be generated based on submitted XML\n       (R146/b).\n   4.  The previous version,\
    \ if any, was posted at least 24 hours ago\n       (R96/b).  This warning may\
    \ prevent some human errors, especially\n       when multiple authors may post\
    \ the same draft.\n   5.  XML sources (if available) are valid with respect to\
    \ the XML\n       format (R155/b) and XML DTD for IETF drafts (R156/b).  These\n\
    \       requirements become absolute after the second implementation\n       phase.\
    \  See Section 7.5.1 for related information.\n   When comparing generated and\
    \ submitted plain text formats to satisfy\n   R146, a standard word-based diff\
    \ is sufficient for initial Toolset\n   implementations (R147/b).  However, a\
    \ custom fuzzy matching function\n   can be developed (R148/c) to minimize false\
    \ warnings due to, for\n   example, draft text formatting differences.  When differences\
    \ are\n   detected, a complete diff may be provided on a separate page\n   (R149/c),\
    \ in addition to the warning.\n   Hint: When comparing generated and submitted\
    \ plain text formats, the\n   Toolset may try several recent xml2rfc versions\
    \ for plain text\n   generation, to eliminate warnings due to differences among\
    \ xml2rfc\n   versions.\n"
- title: 7.5.3.  DoS Thresholds
  contents:
  - "7.5.3.  DoS Thresholds\n   The following table documents DoS attack thresholds\
    \ for various draft\n   categories.  Daily limits correspond to all drafts (and\
    \ all draft\n   formats) within the category.  Other thresholds may be introduced\
    \ and\n   these initial thresholds may be adjusted as necessary.  The\n   thresholds\
    \ are likely to become more smart/dynamic with experience.\n                 \
    \         DoS attack thresholds:\n      +---------------------------------+--------------+-----------+\n\
    \      | category                        | versions/day |    MB/day |\n      +---------------------------------+--------------+-----------+\n\
    \      | drafts with the same draft name |            3 |         5 |\n      |\
    \ drafts with the same submitter  |           10 |        15 |\n      | WGN drafts\
    \ with the same WG ID  |           30 |        45 |\n      | all drafts      \
    \                |          400 |       200 |\n      +---------------------------------+--------------+-----------+\n\
    \   The thresholds are meant to limit destructive effects of DoS attacks\n   (e.g.,\
    \ full disks cause other tasks to fail), allow for capacity\n   planning (e.g.,\
    \ how much storage space the Toolset needs), and limit\n   annoying side effects\
    \ of \"too many\" drafts being posted (e.g., when a\n   person receives posting\
    \ notifications about a given draft or a given\n   working group).  The Toolset\
    \ should warn the Secretariat if total\n   submissions are approaching any threshold\
    \ (R134/b).  Hint: Bandwidth\n   available for submissions may need to be throttled\
    \ (on a network\n   subnet basis?) to make reaching the daily size quota (with\
    \ malicious\n   intent) difficult.\n"
- title: 7.5.4.  WG Approval
  contents:
  - "7.5.4.  WG Approval\n   For version 00 of a WGN draft, the Toolset checks for\
    \ an existing WG\n   approval (R125/a).  If (a) no approval exists, and (b) the\
    \ Toolset\n   does not support the \"waiting for WG approval\" feature, the Toolset\n\
    \   records an error (R135/a).\n   If (a) no approval exists, (b) the Toolset\
    \ supports the \"waiting for\n   WG approval\" feature, and (c) the draft cannot\
    \ be posted even if WG\n   approval is received, then the Toolset records a warning\
    \ that a WG\n   approval would be required once all errors preventing draft from\n\
    \   posting are fixed (R137/b).\n   If (a) no approval exists, (b) the Toolset\
    \ supports the \"waiting for\n   WG approval\" feature, and (c) the draft can\
    \ be posted if WG approval\n   is received, then the Toolset explains the situation\
    \ to the submitter\n   and asks whether an explicit approval from the WG should\
    \ be solicited\n   or expected (R126/b).  If the approval should be solicited,\
    \ it is\n   solicited by the software or the submitter.  If appropriate, the\n\
    \   Toolset puts the submission into a \"waiting for WG approval\" state\n   until\
    \ the expected approval is available (R127/b).  Otherwise, the\n   Toolset records\
    \ a \"no WG approval is expected\" error (R138/b).\n   The details of manual or\
    \ automated solicitation for WG approval is\n   outside the scope of this document.\
    \  Hint: Initially, the submitter\n   will be responsible for soliciting a WG\
    \ Chair approval, but this\n   process should eventually be automated.\n   Details\
    \ of the approval recording and access interfaces as well as\n   the mechanism\
    \ to resume the submission upon approval are out of this\n   document's scope.\n"
- title: 8.  Check Page
  contents:
  - "8.  Check Page\n   The Check page, created by the Check action, displays extracted\
    \ draft\n   meta-data and validation results (R25/a).  The purpose of the page\
    \ is\n   to allow the submitter to verify whether the stored draft and\n   automatically\
    \ extracted meta-data match the submitter's intent and to\n   be informed of validation\
    \ problems.\n   Meta-data items specified in Section 7.4 that failed validation\n\
    \   checks must be marked specially (rather than silently omitted or\n   ignored)\
    \ (R26/b).  Hint: rendering those items in red, with links to\n   corresponding\
    \ validation errors or warnings, may force authors to pay\n   attention.\n   Validation\
    \ messages include both errors and warnings.  Each\n   validation message refers\
    \ to normative document(s) containing the\n   corresponding validation rules (R27/b).\n\
    \   The Check page allows the submitter to enter external meta-data\n   (Section\
    \ 8.1) (R28/a).  If validation was successful, an\n   \"automatically post the\
    \ draft now\" button is provided (R29/a).\n   Regardless of validation results,\
    \ \"adjust and post manually\" and\n   \"cancel\" buttons are provided (R30/a).\n\
    \   The Check page provides a preview of the draft plain text format\n   (R31/a),\
    \ with a link to see how the entire draft (with all its\n   formats) would look\
    \ if posted (R82/b).  Hint: the Check page preview\n   should be sufficiently\
    \ long to let authors detect obvious draft\n   mismatch or misinterpretation errors\
    \ but short enough to avoid\n   dominating the page.  Displaying the first line\
    \ of the draft through\n   the last line of the abstract may be sufficient.\n\
    \   For draft updates, the Check page reports the time and the submitter\n   of\
    \ the last update (R83/b).  This information is especially useful\n   when multiple\
    \ authors are working on the same draft.  The page also\n   provides a link to\
    \ generate a diff against the last posted version\n   (R84/c).\n"
- title: 8.1.  External Meta-Data
  contents:
  - "8.1.  External Meta-Data\n   The Check page solicits the following meta-data\
    \ from the submitter.\n   This information must be supplied by submitter because\
    \ it cannot be\n   extracted from the draft:\n      Submitter email address (R32/a).\
    \  When submitter is not an\n      expected submitter (see Section 3), automated\
    \ posting is not\n      possible and the draft has to go through the Secretariat\
    \ (R98).\n      Hint: A set of checkboxes next to extracted author names along\n\
    \      with a \"none of the above\" checkbox with an input field would\n     \
    \ suffice.\n      A list of drafts replaced by this draft (R33/c).  This is useful\n\
    \      to make replaced drafts invisible.  This document does not specify\n  \
    \    any actions necessary to actually replace an existing draft\n      because\
    \ existing draft manipulation is out of scope, and because\n      security concerns\
    \ and other complications of such actions would be\n      better addressed by\
    \ a separate specification.\n      Primary email address for discussion of this\
    \ draft (R71/b).  Hint:\n      The Toolset can suggest the WG mailing list address\
    \ for WGN\n      drafts, (submitting) author address for individual drafts, or\
    \ even\n      the first email address in draft text.  Offering a few likely\n\
    \      addresses instead of relying exclusively on user input would also\n   \
    \   reduce the number of typos.\n   Except for the submitter email address, external\
    \ meta-data is\n   optional (R109/a).\n   If a given submitter email address belongs\
    \ to an expected submitter\n   (i.e., belongs to one of the categories below),\
    \ the Toolset performs\n   submitter authentication during a Post Now action (R19/a).\n\
    \   Otherwise, an error is reported (R118/a).\n   The following possible expected\
    \ submitters are identified by the\n   Toolset, without any Secretariat intervention:\n\
    \      For version 00 of a draft, any submitter (R119/a).\n      For version N+1\
    \ of a draft, an author of version N of the same\n      draft (R120/a).  This\
    \ requirement only needs to be satisfied for\n      drafts for which Nth version\
    \ was posted using the Toolset; other\n      drafts may not have the meta-information\
    \ available that is\n      required to reliably get a list of authors.\n     \
    \ For a WGN draft, a Chair of the corresponding WG (R121/b).\n      For any draft,\
    \ an IESG member (R122/c).\n"
- title: 9.  Post Now Action
  contents:
  - "9.  Post Now Action\n   The Post Now action checks that the draft has been successfully\n\
    \   validated (R34/a), validates external meta-data (including submitter\n   email\
    \ address) (R35/a), and posts the draft (R36/a).  The submitter\n   is notified\
    \ of the action progress and the final result (R37/a).\n   The external meta-data\
    \ contains the submitter's email address.  As a\n   part of the validation procedure,\
    \ the Post Now action authorizes the\n   submitter.  The initial action implementation\
    \ checks that the\n   submitter has access to email sent to that address (R38/a).\n\
    \   Eventually, the Toolset should accept client certificates signed by\n   IETF,\
    \ PGP-signed email, and/or other forms of client-side\n   authentication to eliminate\
    \ the weak and annoying email access check\n   (R110/c).  If submitter authentication\
    \ fails, the submission\n   eventually and silently times out (R39/a).\n   The\
    \ Toolset provides both web (R99/a) and email (R139/b) interfaces\n   for confirming\
    \ email access.  Hint: To check submitter's access to\n   email, the tool can\
    \ email a hard-to-guess cookie or token to the\n   submitter's address.  To continue\
    \ with the submission, the submitter\n   is requested to paste the cookie at the\
    \ specified URL, go to the\n   token-holding URL, or respond to the email.\n \
    \  Immediately after sending an email to the submitter, the Post Now\n   action\
    \ generates an intermediate Receipt page that explains Toolset\n   expectations\
    \ and provides the submitter with the submission ID\n   (R100/a).  That number\
    \ allows the Secretariat to troubleshoot stuck\n   submissions (R101/a) and can\
    \ also be used for checking submission\n   status without Secretariat involvement\
    \ (R140/b).\n   Immediately after posting the draft, the Toolset notifies all\
    \ authors\n   (with known email addresses) of the posting (R102/a).  The\n   notification\
    \ email contains the information available on the\n   \"successful posting\" Receipt\
    \ page described below (R103/a).\n   If draft posting is successful, the submission\
    \ state is marked as\n   available for deletion (R105/a) so that the garbage collection\n\
    \   routine eventually deletes it.\n"
- title: 9.1.  Receipt Page
  contents:
  - "9.1.  Receipt Page\n   A successful Post Now action reports at least the following\n\
    \   information on the final Receipt page (R104/a):\n   o  the draft ID and a\
    \ link to the draft status page.\n   o  the draft title, authors, and abstract.\n\
    \   o  the submission ID.\n   o  a link to the draft submission status page (when\
    \ status queries\n      are supported, see R140).\n   o  the submitter's name\
    \ and email address.\n   The primary purpose of the Receipt page is to inform\
    \ all draft\n   authors that (supposedly) their draft has been posted.  The secondary\n\
    \   purpose is to let authors create a permanent record of the event and\n   troubleshoot\
    \ postings.  The same information should be sent to other\n   parties interested\
    \ in the draft (e.g., to the WG mailing list), but\n   3rd-party notification\
    \ specifics are out of this document's scope.\n"
- title: 10.  Adjust Action
  contents:
  - "10.  Adjust Action\n   The Adjust action generates the Adjust page (R40/a), populating\
    \ it\n   with available extracted meta-data and external meta-data, as well as\n\
    \   validation results and a preview.  Some information may be missing,\n   depending\
    \ on draft interpretation and the success of preview\n   generation.\n"
- title: 11.  Adjust Page
  contents:
  - "11.  Adjust Page\n   The Adjust page includes the same information as the Check\
    \ page, but\n   allows the submitter to adjust all extracted draft meta-data (and,\n\
    \   naturally, external meta-data) at will (R41/a).  Such adjustment is\n   necessary\
    \ when automated extraction failed to extract correct\n   information.  To avoid\
    \ any mismatch between draft and its meta-data,\n   adjusted drafts cannot be\
    \ automatically posted and require manual\n   validation by the Secretariat (R42/a).\
    \  Secretariat staff can post\n   drafts with adjusted meta-data as described\
    \ in Section 14.\n   The Adjust page allows the submitter to enter an informal\
    \ comment\n   explaining why adjustments are necessary and automated posting mode\n\
    \   cannot be used (R48/a).  Such comments may be essential for the\n   Secretariat\
    \ in their efforts to troubleshoot the problem.\n   The \"post manually\" and\
    \ \"cancel\" buttons are provided (R43/a).  The\n   former is backed by the Post\
    \ Manually action (Section 12).\n"
- title: 12.  Post Manually Action
  contents:
  - "12.  Post Manually Action\n   The Post Manually action sends adjusted meta-data\
    \ and a draft pointer\n   to the Secretariat for manual validation and posting\
    \ (R44/a).  A\n   receipt page is generated, instructing the submitter to wait\
    \ (R45/a).\n   The Secretariat will notify the submitter once the draft is posted\
    \ or\n   rejected.  This notification is sent by the Toolset if the\n   Secretariat\
    \ is using the Toolset to post the draft (R46/a).\n"
- title: 13.  Receipt Page
  contents:
  - "13.  Receipt Page\n   The Receipt page is generated by various actions to inform\
    \ the\n   submitter of the current submission status and further actions.  The\n\
    \   contents of the page is likely to be highly dependent on the action\n   and\
    \ state for which receipt is being generated.  This section\n   documents general\
    \ requirements applicable to all actions and states.\n   The Receipt page should\
    \ give the submitter a Uniform Resource\n   Identifier (URI) or another identifier\
    \ that can be used by\n   Secretariat for manual troubleshooting of the submission\
    \ (R63/a).\n   The identifier should be perpetual (R64/a) even though the associated\n\
    \   details are likely to be eventually lost (e.g., draft submission data\n  \
    \ and logs are deleted from the staging area as a part of the garbage\n   collection\
    \ routine).  Hint: Tools should distinguish old identifiers\n   from invalid ones;\
    \ when a given identifier is referring to deleted\n   data, the tools accepting\
    \ the identifier should inform their users\n   that the identified submission\
    \ is recognized, but the related\n   information has expired.\n   The Receipt\
    \ page should give the submitter a Secretariat\n   point-of-contact to report\
    \ submission problems (R65/a).\n"
- title: 14.  Bypassing the Toolset
  contents:
  - "14.  Bypassing the Toolset\n   A buggy Toolset implementation or unusual circumstances\
    \ may force a\n   submitter to submit a draft to the Secretariat for manual processing.\n\
    \   This can be done by choosing the \"manual posting\" route supported by\n \
    \  the Toolset (R47/a) or, as a last resort, by emailing the draft\n   directly\
    \ to Secretariat.  In either case, an informal \"cover letter\"\n   has to accompany\
    \ the draft.  The letter should explain why the\n   automated interface cannot\
    \ be used.\n   When processing manual submissions, the Secretariat may be able\
    \ to\n   use the Toolset.  A Manual Check page similar to the default Check\n\
    \   page provides authenticated Secretariat staff with editable meta-data\n  \
    \ fields and a \"force posting\" action (R50/b).  The forced posting\n   action\
    \ accepts meta-data fields \"as is\", does not verify submitter\n   access to\
    \ email or WG draft authorization, and posts the draft as if\n   no validation\
    \ errors were found (R51/b).  The Manual Check page\n   should still contain all\
    \ the errors and warnings identical to those\n   seen by ordinary submitters (R106/b)\
    \ so that the Secretariat knows\n   what the Toolset is unhappy about (if anything).\n\
    \   Using manual processing may result in significant posting delays.\n   Generated\
    \ submission receipts or notifications ought to give the\n   submitter an expected\
    \ processing time estimate (R53/a).\n   The intent of this mode is to provide\
    \ a way for submitters to bypass\n   bugs or limitations of the automated mechanisms\
    \ in order to post an\n   \"unusual\" draft or to post a draft under \"unusual\"\
    \ circumstances.\n   One example would be a draft that does not contain standard\
    \ IETF\n   boilerplate but has a special IESG permission to post the draft with\n\
    \   the experimental boilerplate.  Another example is a draft that fails\n   automated\
    \ validation tests due to a validator bug.\n   The bypass mode is also likely\
    \ to be used (effectively) by the\n   majority of submitters during the Trial\
    \ stage of the Toolset\n   implementation, when few submitters know about (or\
    \ are allowed to\n   use) the Toolset.\n"
- title: 15.  Email Interface
  contents:
  - "15.  Email Interface\n   The Toolset should have an email interface for automated\
    \ posting of\n   valid drafts (R55/b).  While virtually every documented Toolset\n\
    \   functionality can, technically, be implemented behind an email\n   interface,\
    \ features other than posting of valid drafts are believed\n   to be prohibitively\
    \ awkward to implement or use via email.\n   The email interface accepts a draft\
    \ as a set of email part(s) (one\n   per draft format) (R56/b).  For example,\
    \ the plain text format can be\n   submitted in the \"body\" of the email message,\
    \ while XML source format\n   can be optionally sent as an \"attachment\" of the\
    \ same email message.\n   Each part can either contain the actual format data\
    \ (R141/b) or a\n   single URL pointing to it (R142/c).  In the latter case, the\
    \ Toolset\n   has to fetch the format data.  Details of the URL-fetching option\
    \ are\n   not documented here, but it is assumed that HTTP URLs are supported\n\
    \   (at least), and fetching errors are reported.  This document does not\n  \
    \ specify how the format of each email part is determined, but it is\n   assumed\
    \ that MIME type and content would need to be analyzed.\n   After accepting the\
    \ draft, the Toolset uses the sender's email\n   address to select the submitter\
    \ identity (R57/b), checks the\n   submission (R58/b), and posts the draft if\
    \ the check is successful\n   (R59/b).  The submitter should be notified of the\
    \ outcome of the\n   draft submission via email (R60/b).  Other requirements for\
    \ the web\n   interface (including requirements on submission preprocessing, draft\n\
    \   validation, submitter authentication, draft posting, and\n   notification)\
    \ apply to the email interface.\n   Therefore, a typical successful submission\
    \ via email interface may\n   result in the following exchange of messages (\"\
    T\" is for \"Toolset\",\n   \"S\" is for \"submitter\", and \"A\" is for \"all\
    \ authors and submitter\"):\n      S-->T: the draft version\n      S<--T: a challenge\
    \ to verify email access\n      S-->T: a response to the challenge\n      A<--T:\
    \ warnings and the receipt\n   where the message containing the challenge may\
    \ include warnings as\n   well.\n   When draft validation fails, the following\
    \ emails may be exchanged:\n      S-->T: the draft version\n      S<--T: errors\
    \ and receipt\n   Email parts/attachments that are not recognized as draft formats\
    \ are\n   not considered as draft formats.  Such parts are ignored by the\n  \
    \ Toolset (R107/b), except that a warning is generated for each\n   unrecognizable\
    \ part containing more than whitespace (R108/b).  These\n   two requirements are\
    \ meant to make the interface robust in the\n   presence of email signatures and\
    \ other parts outside of the submitter\n   control.\n   Hint: Toolset actions\
    \ can be implemented to support email and web\n   interfaces without code duplication.\n\
    \   While both web and email interfaces allow for fast posting of valid\n   drafts,\
    \ there are significant differences between the two interfaces.\n   Primary advantages\
    \ of the email interface are:\n   off-line mode: A submitter can do all the manual\
    \ work required to\n      submit a draft while being disconnected from the network.\
    \  The\n      email client actually submits the draft when connectivity is\n \
    \     regained.\n   poor connectivity: Email systems are often better suited for\n\
    \      automated transmission and re-transmission of emails when network\n   \
    \   connectivity is poor due to high packet loss ratios, transmission\n      delays,\
    \ and other problems.\n   convenience: Some IETFers consider email interfaces\
    \ as generally\n      \"more convenient\".\n   Primary advantages of the web interface\
    \ are:\n   confirmation: A submitter is given a chance to verify that automated\n\
    \      extraction of meta-data produced reasonable results.  Other useful\n  \
    \    confirmations are possible (e.g., \"Are you sure you want to post a\n   \
    \   version of the draft that was updated 30 seconds ago by your co-\n      author?\"\
    ).\n   validation: A submitter can validate the draft without posting it.\n  \
    \ quality: Non-critical warnings may prompt the submitter to postpone\n      posting\
    \ to improve draft quality.\n   manual adjustments: The submitter can adjust extracted\
    \ meta-data and\n      ease Secretariat work on manually posting an unusual draft.\n\
    \   meta-data: The submitter can specify optional external meta-data\n      (that\
    \ cannot be extracted from the draft itself).  For example, an\n      email address\
    \ for draft discussion can be specified.\n   context help: The web interface makes\
    \ it easy to provide links to\n      extra information about input fields, errors,\
    \ posting options,\n      deadlines, etc.\n   opaqueness: Files submitted via\
    \ the web interface are arguably less\n      susceptible to various in-transit\
    \ transformations and\n      misinterpretation than emails.  Emails are often\
    \ mutated by mail\n      agents (e.g., automated disclaimers added by senders\
    \ and extra\n      line feeds added by recipients).\n   convenience: Some IETFers\
    \ consider web interfaces as generally \"more\n      convenient\".\n"
- title: 16.  Implementation Stages
  contents:
  - "16.  Implementation Stages\n   This section defines the Toolset implementation\
    \ stages or phases.\n   There are three consecutive stages, marked with letters\
    \ \"a\", \"b\", or\n   \"c\".  Earlier-stage requirements must still be satisfied\
    \ in later\n   stages.  All requirements need to be interpreted and evaluated\
    \ in the\n   context of the current stage and the currently implemented features.\n\
    \   For example, requirement R68 applies to the first stage but refers to\n  \
    \ XML draft format that may not be supported until the second stage.  A\n   correct\
    \ interpretation of R68 until XML support is added is \"it is an\n   error to\
    \ submit a draft without a plain text format\".\n   Unless otherwise noted, requirements\
    \ listed in later stages may be\n   covered in earlier stages, but do not have\
    \ to be.  If the\n   implementers decide to add some functionality from a future\
    \ stage,\n   they have to be very careful to satisfy all requirements related\
    \ to\n   that functionality.  Unfortunately, there is no reliable, pragmatic\n\
    \   way to identify \"all requirements\" related to a given feature.\n   (a) Trial\
    \ Stage: Initial basic implementation to test major concepts\n      and relieve\
    \ the Secretariat from handling the most common\n      submission case.  This\
    \ stage focuses on plain text draft\n      submission via the web interface. \
    \ The trial stage should take a\n      dedicated professional about 45 calendar\
    \ days to finish (i.e., to\n      comply with all the listed requirements).\n\
    \   (b) Production Stage: Support for all major features.  Once this\n      stage\
    \ is completed, the Secretariat should only handle unusual\n      draft submissions.\
    \  This stage should take about 100 calendar days\n      to finish.  Gradual release\
    \ of implemented features is possible\n      and expected.  Specifically, the\
    \ XML support is expected before\n      email interface support.\n   (c) Enhancement\
    \ Stage: A never-ending stage focusing on sophisticated\n      features (e.g.,\
    \ draft interpretation or validation) that improve\n      the overall quality\
    \ of the Toolset.  This stage is documented\n      primarily to highlight the\
    \ overall direction of the Toolset; its\n      requirements are often imprecise\
    \ and many are expected to change.\n   Implementation experience is likely to\
    \ result in changes of the\n   Toolset requirements.  Such changes should be documented\
    \ as a part of\n   stage evaluation activities.\n"
- title: 17.  Testing
  contents:
  - "17.  Testing\n   Before letting the Toolset go live, thousands of posted drafts\
    \ can be\n   used to test the meta-data extraction algorithms.  Such testing can\n\
    \   minimize the number of drafts being sent on for manual handling\n   because\
    \ of meta-data extraction failure.\n   Other Toolset features may also be testable\
    \ using posted drafts.  A\n   simple pair of scripts can be used to test basic\
    \ functionality of the\n   web and email interfaces.\n   Hint: The IESG may require\
    \ test results before accepting the initial\n   implementation.  If automated,\
    \ the above approach can be used for\n   regression testing as well.\n"
- title: 18.  Security Considerations
  contents:
  - "18.  Security Considerations\n   Removing humans from the draft submission and\
    \ posting process (a.k.a.\n   automation) requires adding features to make the\
    \ Toolset reliable in\n   the presence of denial-of-service (DoS) attacks and\
    \ attempts to\n   corrupt the draft repository.  Ideally, the Toolset needs to\
    \ resist\n   both premeditated malicious actions and good-intent accidents.\n\
    \   This document contains specific requirements to minimize the impact\n   of\
    \ DoS attacks (e.g., R97).  The requirements are designed with the\n   assumption\
    \ that it is acceptable for the Toolset to block valid\n   submissions during\
    \ a DoS attack as long as the Toolset maintainers\n   are notified and already\
    \ posted drafts are not damaged.\n   This document also contains many specific\
    \ requirements related to\n   detection of drafts violating IETF posting rules.\
    \  Those requirements\n   help reduce the number of \"bad\" drafts posted by mistake\
    \ but do not\n   offer reliable protection from submitters with malicious intent:\n\
    \   Since automated tools do not truly understand drafts (and will not do\n  \
    \ so in the foreseeable future), it is technically possible to post a\n   rogue\
    \ draft violating IETF posting rules.  For example, a draft may\n   contain abstract\
    \ text that makes the IETF-approved IPR statements\n   following the abstract\
    \ meaningless or legally non-binding.\n   Stronger submitter authentication may\
    \ be required to deter malicious\n   submitters.  The documented authentication\
    \ mechanism (i.e., read\n   access to one's email) is deemed appropriate for deployment\
    \ of the\n   first versions of the Toolset, under close Secretariat supervision.\n\
    \   Hint: to increase chances of detecting problems early enough, it may\n   be\
    \ a good idea to automatically inform a designated human of every\n   posted submission\
    \ (during initial deployment of the Toolset).\n"
- title: 19.  Compliance
  contents:
  - "19.  Compliance\n   A Toolset implementation is compliant with this specification\
    \ if it\n   satisfies all normative requirements (i.e., the phrases marked with\n\
    \   \"Rnnn\" as defined in Section 3).  Compliance should be evaluated for\n \
    \  each implementation stage as some requirements do not apply to some\n   stages.\n\
    \   The IESG evaluates implementations and interprets requirements as\n   necessary.\n"
- title: Appendix A.  Comparison with Current Procedures
  contents:
  - "Appendix A.  Comparison with Current Procedures\n   This section summarizes major\
    \ differences between the draft\n   submission approach currently in use by IETF\
    \ and the proposed\n   Toolset, including violations of the current IETF rules.\n\
    \   o  The Toolset allows posting of XML and PDF draft formats.  The XML\n   \
    \   format is not currently accepted by the Secretariat, and legality\n      of\
    \ PDF acceptance by the Secretariat has been questioned.  XML\n      sources should\
    \ be accepted to enable IETF tools and participants\n      to have access to raw\
    \ draft meta-data and content.  They are also\n      useful to the RFC Editor\
    \ and, hence, it is a good idea to validate\n      and get them \"into the system\"\
    \ early.  The latter argument applies\n      to PDF drafts as well, although the\
    \ first Toolset versions are not\n      expected to interpret PDF drafts.\n  \
    \ o  The Toolset may eventually generate HTML draft formats from XML\n      draft\
    \ sources (see R112).  Currently, IETF does not provide HTML\n      draft formats\
    \ -- the Secretariat does not accept HTML sources and\n      no HTML is generated\
    \ from accepted draft sources.  Note, however,\n      that this document does\
    \ not suggest that the Toolset should\n      eventually accept drafts in HTML\
    \ format.\n   o  The Toolset defines \"WGN draft\" as a draft whose name starts\
    \ with\n      \"draft-ietf-\".  All other drafts are treated as individual drafts.\n\
    \      Currently, an IETF WG does not have to follow a single WG draft\n     \
    \ naming format.  Thus, the 00 version of a draft that the WG\n      considers\
    \ a WG draft can be posted by the Toolset without WG\n      consent.  Affected\
    \ WGs would have to deal with the consequences of\n      their decision not to\
    \ use a common naming format.  The Tools team\n      suggests that IETF requires\
    \ WGs to name their drafts using a\n      single format to minimize confusion.\
    \  Hopefully, there are no\n      humans named \"Ietf\" or, at least, none of\
    \ them wants to auto-post\n      individual drafts.\n   o  For some drafts, the\
    \ Toolset verifies that the submitter is\n      \"expected\" (e.g., an author\
    \ of the previous draft version or WG\n      Chair).  Currently, the Secretariat\
    \ does virtually no such\n      verification, but an email submission interface\
    \ and a human\n      presence in the submission loop have apparently been sufficient\
    \ to\n      prevent massive automated attacks.  The change is needed to\n    \
    \  prevent a simple script from using the web interface to overwrite\n      posted\
    \ IETF drafts with junk.  Hopefully, the IETF will eventually\n      have a decent\
    \ authentication scheme making the submitter checks\n      simpler, less rigid,\
    \ and more transparent.\n   o  The Toolset will automatically notify authors of\
    \ posted drafts.\n      Currently, neither the submitter nor any of the co-authors\
    \ are\n      explicitly notified when the draft is posted.  Notification is\n\
    \      meant, in part, to allow co-authors to detect cases where their\n     \
    \ name is put on the authors list without permission.  Eventually,\n      there\
    \ will be a general IETF mechanism to allow 3rd parties such\n      as ADs, chairs,\
    \ or reviewers to register for notifications about\n      draft postings.\n  \
    \ o  The Toolset may eventually accept compressed drafts (see R150).\n      Currently,\
    \ the Secretariat does not accept \"zip\" archives due to\n      virus contamination\
    \ concerns.  A proper implementation of the\n      Toolset must address such concerns,\
    \ while the Secretariat may\n      still need to reject certain formats if they\
    \ are submitted via the\n      manual route.\n"
- title: Appendix B.  Acknowledgements
  contents:
  - "Appendix B.  Acknowledgements\n   The author gratefully acknowledges the contributions\
    \ of Harald Tveit\n   Alvestrand (Cisco), Brian E. Carpenter (IBM), Frank Ellermann,\
    \ Bill\n   Fenner (AT&T), Barbara B. Fuller (Foretec), Bruce Lilly, Henrik\n \
    \  Levkowetz (Ericsson), Larry Masinter (Adobe), Keith Moore (University\n   of\
    \ Tennessee), Pekka Savola (Netcore), Henning Schulzrinne (Columbia\n   University),\
    \ and Stanislav Shalunov (Internet2).\n   Special thanks to Marshall Rose for\
    \ his xml2rfc tool.\n"
- title: Normative References
  contents:
  - "Normative References\n   [RFC2629]      Rose, M., \"Writing I-Ds and RFCs using\
    \ XML\", RFC 2629,\n                  June 1999.\n   [RFC3978]      Bradner, S.,\
    \ \"IETF Rights in Contributions\", BCP 78,\n                  RFC 3978, March\
    \ 2005.\n   [RFC3979]      Bradner, S., \"Intellectual Property Rights in IETF\n\
    \                  Technology\", BCP 79, RFC 3979, March 2005.\n   [XML]     \
    \     World Wide Web Consortium, \"Extensible Markup Language\n              \
    \    (XML) 1.0\", W3C XML, February 1998,\n                  http://www.w3.org/TR/1998/REC-xml-19980210.\n"
- title: Informative References
  contents:
  - "Informative References\n   [writing-rfcs] Rose, M., \"Writing I-Ds and RFCs using\
    \ XML (revised)\",\n                  Work in Progress, April 2004.\n   [secretariat]\
    \  \"Private communication with the IETF Secretariat\",\n                  2004.\n\
    \   [OSD]          \"The Open Source Definition, version 1.9\", Open Source\n\
    \                  Initiative, 2005, available at\n                  http://www.opensource.org/docs/definition.php.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Alex Rousskov\n   The Measurement Factory\n   EMail: rousskov@measurement-factory.com\n\
    \   URI:   http://www.measurement-factory.com/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
