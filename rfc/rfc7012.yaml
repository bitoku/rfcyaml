- title: __initial_text__
  contents:
  - '        Information Model for IP Flow Information Export (IPFIX)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines the data types and management policy for the\n\
    \   information model for the IP Flow Information Export (IPFIX)\n   protocol.\
    \  This information model is maintained as the IANA \"IPFIX\n   Information Elements\"\
    \ registry, the initial contents of which were\n   defined by RFC 5102.  This\
    \ information model is used by the IPFIX\n   protocol for encoding measured traffic\
    \ information and information\n   related to the traffic Observation Point, the\
    \ traffic Metering\n   Process, and the Exporting Process.  Although this model\
    \ was\n   developed for the IPFIX protocol, it is defined in an open way that\n\
    \   allows it to be easily used in other protocols, interfaces, and\n   applications.\
    \  This document obsoletes RFC 5102.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7012.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Changes since RFC 5102 .....................................4\n  \
    \    1.2. IPFIX Documents Overview ...................................4\n   2.\
    \ Properties of IPFIX Protocol Information Elements ...............5\n      2.1.\
    \ Information Element Specification Template .................5\n      2.2. Scope\
    \ of Information Elements ..............................7\n      2.3. Naming Conventions\
    \ for Information Elements ................8\n   3. Type Space ......................................................9\n\
    \      3.1. Abstract Data Types ........................................9\n  \
    \         3.1.1. unsigned8 ...........................................9\n    \
    \       3.1.2. unsigned16 ..........................................9\n      \
    \     3.1.3. unsigned32 ..........................................9\n        \
    \   3.1.4. unsigned64 ..........................................9\n          \
    \ 3.1.5. signed8 ............................................10\n           3.1.6.\
    \ signed16 ...........................................10\n           3.1.7. signed32\
    \ ...........................................10\n           3.1.8. signed64 ...........................................10\n\
    \           3.1.9. float32 ............................................10\n  \
    \         3.1.10. float64 ...........................................10\n    \
    \       3.1.11. boolean ...........................................10\n      \
    \     3.1.12. macAddress ........................................10\n        \
    \   3.1.13. octetArray ........................................10\n          \
    \ 3.1.14. string ............................................11\n           3.1.15.\
    \ dateTimeSeconds ...................................11\n           3.1.16. dateTimeMilliseconds\
    \ ..............................11\n           3.1.17. dateTimeMicroseconds ..............................11\n\
    \           3.1.18. dateTimeNanoseconds ...............................11\n  \
    \         3.1.19. ipv4Address .......................................11\n    \
    \       3.1.20. ipv6Address .......................................11\n      \
    \     3.1.21. basicList .........................................11\n        \
    \   3.1.22. subTemplateList ...................................11\n          \
    \ 3.1.23. subTemplateMultiList ..............................12\n      3.2. Data\
    \ Type Semantics .......................................12\n           3.2.1.\
    \ quantity ...........................................12\n           3.2.2. totalCounter\
    \ .......................................12\n           3.2.3. deltaCounter .......................................12\n\
    \           3.2.4. identifier .........................................13\n  \
    \         3.2.5. flags ..............................................13\n   4.\
    \ Information Element Identifiers ................................13\n   5. Information\
    \ Elements ...........................................14\n   6. Extending the\
    \ Information Model ................................15\n   7. IANA Considerations\
    \ ............................................15\n      7.1. IPFIX Information\
    \ Elements ................................16\n      7.2. MPLS Label Type Identifier\
    \ ................................17\n      7.3. XML Namespace and Schema ..................................17\n\
    \      7.4. Addition, Revision, and Deprecation .......................18\n  \
    \ 8. Security Considerations ........................................19\n   9.\
    \ Acknowledgments ................................................19\n   10. References\
    \ ....................................................19\n      10.1. Normative\
    \ References .....................................19\n      10.2. Informative\
    \ References ...................................20\n   Contributors ......................................................23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IP Flow Information Export (IPFIX) protocol serves as\
    \ a means for\n   transmitting information related to network traffic measurement.\
    \  The\n   IPFIX Protocol Specification [RFC7011] defines how Information\n  \
    \ Elements are transmitted and also specifies the encoding of a set of\n   basic\
    \ data types for these Information Elements.  However, the list\n   of Information\
    \ Elements that can be transmitted by the protocol, such\n   as Flow attributes\
    \ (source IP address, number of packets, etc.) and\n   information about the Metering\
    \ Process and Exporting Process (packet\n   Observation Point, sampling rate,\
    \ Flow timeout interval, etc.), is\n   not specified in [RFC7011].\n   The IANA\
    \ \"IPFIX Information Elements\" registry [IANA-IPFIX] is the\n   current complete\
    \ reference for IPFIX Information Elements.  The\n   initial values for this registry\
    \ were provided by [RFC5102].\n   This document complements the IPFIX Protocol\
    \ Specification [RFC7011]\n   by providing an overview of the IPFIX information\
    \ model and\n   specifying data types for it.  IPFIX-specific terminology used\
    \ in\n   this document is defined in Section 2 of [RFC7011].  As in [RFC7011],\n\
    \   these IPFIX-specific terms have the first letter of a word\n   capitalized\
    \ when used in this document.\n   The use of the term 'information model' is not\
    \ fully in line with the\n   definition of this term in [RFC3444], as the IPFIX\
    \ information model\n   does not specify relationships between Information Elements,\
    \ nor does\n   it specify a concrete encoding of Information Elements.  For an\n\
    \   encoding suitable for use with the IPFIX protocol, see [RFC7011].\n   Besides\
    \ the encoding used by the IPFIX protocol, other encodings of\n   IPFIX Information\
    \ Elements can be applied, for example, XML-based\n   encodings.\n   The key words\
    \ \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\"\
    , \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document\
    \ are to be interpreted as described in [RFC2119].\n"
- title: 1.1.  Changes since RFC 5102
  contents:
  - "1.1.  Changes since RFC 5102\n   This document obsoletes the Proposed Standard\
    \ revision of the IPFIX\n   information model specification [RFC5102].  The following\
    \ changes\n   have been made to this document with respect to the previous\n \
    \  document:\n   - At the time of this publication, technical and editorial errata\n\
    \     reported for [RFC5102] have been reviewed and addressed as needed.\n   -\
    \ All references to [RFC5101] have been updated to [RFC7011],\n     reflecting\
    \ changes to [RFC5101].\n   - Information Element definitions have been removed,\
    \ as the reference\n     for these is now [IANA-IPFIX]; a historical note on categorizations\n\
    \     of Information Elements as defined in [RFC5102] has been retained\n    \
    \ in Section 5.\n   - The process for modifying [IANA-IPFIX] has been improved\
    \ and is now\n     described in [RFC7013]; Section 6 has been updated accordingly,\
    \ and\n     a new Section 7.3 provides IANA considerations for this process.\n\
    \   - Definitions of timestamp data types have been clarified.\n   - Appendices\
    \ A and B have been removed.\n"
- title: 1.2.  IPFIX Documents Overview
  contents:
  - "1.2.  IPFIX Documents Overview\n   The IPFIX protocol provides network administrators\
    \ with access to\n   network flow information.  The architecture for the export\
    \ of\n   measured flow information out of an IPFIX Exporting Process to a\n  \
    \ Collecting Process is defined in [RFC5470], per the requirements\n   defined\
    \ in [RFC3917].  The IPFIX Protocol Specification [RFC7011]\n   defines how IPFIX\
    \ Data Records and templates are carried via a number\n   of transport protocols\
    \ from IPFIX Exporting Processes to IPFIX\n   Collecting Processes.\n   Four IPFIX\
    \ optimizations/extensions are currently specified: a\n   bandwidth-saving method\
    \ for the IPFIX protocol [RFC5473], an\n   efficient method for exporting bidirectional\
    \ flows [RFC5103], a\n   method for the definition and export of complex data\
    \ structures\n   [RFC6313], and the specification of the Protocol on IPFIX Mediators\n\
    \   [IPFIX-MED-PROTO] based on the IPFIX Mediation Framework [RFC6183].\n   IPFIX\
    \ has a formal description of IPFIX Information Elements -- their\n   names, data\
    \ types, and additional semantic information -- as\n   specified in this document.\
    \  The export of the Information Element\n   types is specified in [RFC5610].\n\
    \   [RFC6728] specifies a data model for configuring and monitoring\n   devices\
    \ that are IPFIX and Packet Sampling (PSAMP) compliant using\n   the Network Configuration\
    \ Protocol (NETCONF), while [RFC6615]\n   specifies MIB modules for monitoring.\n\
    \   In terms of development, [RFC5153] provides guidelines for the\n   implementation\
    \ and use of the IPFIX protocol, while [RFC5471]\n   provides guidelines for testing.\n\
    \   Finally, [RFC5472] describes what types of applications can use the\n   IPFIX\
    \ protocol and how they can use the information provided.  It\n   furthermore\
    \ shows how the IPFIX framework relates to other\n   architectures and frameworks.\n"
- title: 2.  Properties of IPFIX Protocol Information Elements
  contents:
  - '2.  Properties of IPFIX Protocol Information Elements

    '
- title: 2.1.  Information Element Specification Template
  contents:
  - "2.1.  Information Element Specification Template\n   Information in messages\
    \ of the IPFIX protocol is modeled in terms of\n   Information Elements of the\
    \ IPFIX information model.  The IPFIX\n   Information Elements mentioned in Section\
    \ 5 are specified in\n   [IANA-IPFIX].\n   All Information Elements specified\
    \ for the IPFIX protocol MUST have\n   the following properties defined:\n   name\
    \ - A unique and meaningful name for the Information Element.\n   elementId -\
    \ A numeric identifier of the Information Element.  If this\n      identifier\
    \ is used without an enterprise identifier (see [RFC7011]\n      and the definition\
    \ of enterpriseId listed below), then it is\n      globally unique, and the list\
    \ of allowed values is administered by\n      IANA.  It is used for compact identification\
    \ of an Information\n      Element when encoding Templates in the protocol.\n\
    \   description - The semantics of this Information Element.  Describes\n    \
    \  how this Information Element is derived from the Flow or other\n      information\
    \ available to the observer.  Information Elements of\n      dataType string or\
    \ octetArray that have length constraints (fixed\n      length, minimum and/or\
    \ maximum length) MUST note these constraints\n      in their descriptions.\n\
    \   dataType - One of the types listed in Section 3.1 of this document or\n  \
    \    registered in the IANA \"IPFIX Information Element Data Types\"\n      subregistry.\
    \  The type space for attributes is constrained to\n      facilitate implementation.\
    \  The existing type space encompasses\n      most primitive types used in modern\
    \ programming languages, as well\n      as some derived types (such as ipv4Address)\
    \ that are common to\n      this domain.\n   status - The status of the specification\
    \ of this Information Element.\n      Allowed values are 'current' and 'deprecated'.\
    \  All newly defined\n      Information Elements have 'current' status.  The process\
    \ for\n      moving Information Elements to the 'deprecated' status is defined\n\
    \      in Section 5.3 of [RFC7013].\n   Enterprise-specific Information Elements\
    \ MUST have the following\n   property defined:\n   enterpriseId - Enterprises\
    \ may wish to define Information Elements\n      without registering them with\
    \ IANA, for example, for enterprise-\n      internal purposes.  For such Information\
    \ Elements, the Information\n      Element identifier described above is not sufficient\
    \ when the\n      Information Element is used outside the enterprise.  If\n  \
    \    specifications of enterprise-specific Information Elements are\n      made\
    \ public and/or if enterprise-specific identifiers are used by\n      the IPFIX\
    \ protocol outside the enterprise, then the enterprise-\n      specific identifier\
    \ MUST be made globally unique by combining it\n      with an enterprise identifier.\
    \  Valid values for the enterpriseId\n      are defined by IANA as Structure of\
    \ Management Information (SMI)\n      network management private enterprise numbers,\
    \ defined at\n      [IANA-PEN].\n   All Information Elements specified for the\
    \ IPFIX protocol either in\n   this document or by any future extension MAY have\
    \ the following\n   properties defined:\n   dataTypeSemantics - The integral types\
    \ are qualified by additional\n      semantic details.  Valid values for the data\
    \ type semantics are\n      either specified in Section 3.2 of this document or\
    \ will be\n      specified in a future extension of the information model.\n \
    \  units - If the Information Element is a measure of some kind, the\n      units\
    \ identify what the measure is.\n   range - Some Information Elements may only\
    \ be able to take on a\n      restricted set of values that can be expressed as\
    \ a range (e.g., 0\n      through 511, inclusive).  If this is the case, the valid\
    \ inclusive\n      range SHOULD be specified; values for this Information Element\n\
    \      outside the range are invalid and MUST NOT be exported.\n   reference -\
    \ Identifies additional specifications that more precisely\n      define this\
    \ item or provide additional context for its use.\n   The following two Information\
    \ Element properties are defined to allow\n   the management of an Information\
    \ Elements registry with Information\n   Element definitions that may be updated\
    \ over time, per the process\n   defined in Section 5.2 of [RFC7013]:\n   revision\
    \ - The revision number of an Information Element, starting at\n      0 for Information\
    \ Elements at time of definition and incremented\n      by one for each revision.\n\
    \   date - The date of the entry of this revision of the Information\n      Element\
    \ into the registry.\n   A template for specifying Information Elements is given\
    \ in\n   Section 9.1 of [RFC7013].\n"
- title: 2.2.  Scope of Information Elements
  contents:
  - "2.2.  Scope of Information Elements\n   By default, most Information Elements\
    \ have a scope specified in their\n   definitions.  Within Data Records defined\
    \ by Options Templates, the\n   IPFIX protocol allows further limiting of the\
    \ Information Element\n   scope.  The new scope is specified by one or more scope\
    \ fields and\n   defined as the combination of all specified scope values; see\n\
    \   Section 3.4.2.1 on IPFIX scopes in [RFC7011].\n"
- title: 2.3.  Naming Conventions for Information Elements
  contents:
  - "2.3.  Naming Conventions for Information Elements\n   The following naming conventions\
    \ were used for naming Information\n   Elements in this document.  It is recommended\
    \ that extensions of the\n   model use the same conventions.\n   o  Names of Information\
    \ Elements SHOULD be descriptive.\n   o  Names of Information Elements MUST be\
    \ unique within the \"IPFIX\n      Information Elements\" registry [IANA-IPFIX].\
    \  Enterprise-specific\n      Information Elements SHOULD be prefixed with a vendor\
    \ name.\n   o  Names of Information Elements MUST start with lowercase letters.\n\
    \   o  Composed names MUST use capital letters for the first letter of\n     \
    \ each component (except for the first one).  All other letters are\n      lowercase,\
    \ even for acronyms.  Exceptions are made for acronyms\n      containing a mixture\
    \ of lowercase and capital letters, such as\n      'IPv4' and 'IPv6'.  Examples\
    \ are \"sourceMacAddress\" and\n      \"destinationIPv4Address\".\n   o  Middleboxes\
    \ [RFC3234] may change Flow properties, such as the\n      Differentiated Services\
    \ Code Point (DSCP) value or the source IP\n      address.  If an IPFIX Observation\
    \ Point is located in the path of\n      a Flow before one or more middleboxes\
    \ that potentially modify\n      packets of the Flow, then it may be desirable\
    \ to also report Flow\n      properties after the modification performed by the\
    \ middleboxes.\n      An example is an Observation Point before a packet marker\
    \ changing\n      a packet's IPv4 Type of Service (TOS) field that is encoded\
    \ in\n      Information Element ipClassOfService.  Then the value observed and\n\
    \      reported by Information Element ipClassOfService is valid at the\n    \
    \  Observation Point but not after the packet passed the packet\n      marker.\
    \  For reporting the change value of the TOS field, the\n      IPFIX information\
    \ model uses Information Elements that have a name\n      prefix \"post\", for\
    \ example, \"postIpClassOfService\".  Information\n      Elements with prefix\
    \ \"post\" report on Flow properties that are not\n      necessarily observed\
    \ at the Observation Point but that are\n      obtained within the Flow's Observation\
    \ Domain by other means\n      considered to be sufficiently reliable, for example,\
    \ by analyzing\n      the packet marker's marking tables.\n"
- title: 3.  Type Space
  contents:
  - "3.  Type Space\n   This section describes the abstract data types that can be\
    \ used for\n   the specification of IPFIX Information Elements in Section 4.\n\
    \   Section 3.1 describes the set of abstract data types.\n   Abstract data types\
    \ unsigned8, unsigned16, unsigned32, unsigned64,\n   signed8, signed16, signed32,\
    \ and signed64 are integral data types.\n   As described in Section 3.2, their\
    \ data type semantics can be further\n   specified, for example, by 'totalCounter',\
    \ 'deltaCounter',\n   'identifier', or 'flags'.\n"
- title: 3.1.  Abstract Data Types
  contents:
  - "3.1.  Abstract Data Types\n   This section describes the set of valid abstract\
    \ data types of the\n   IPFIX information model, independent of encoding.  Note\
    \ that further\n   abstract data types may be specified by future updates to this\n\
    \   document.  Changes to the associated IPFIX \"Information Element Data\n  \
    \ Types\" subregistry [IANA-IPFIX] specified in [RFC5610] require a\n   Standards\
    \ Action [RFC5226].\n   The current encodings of these data types for use with\
    \ the IPFIX\n   protocol are defined in [RFC7011]; encodings allowing the use\
    \ of the\n   IPFIX Information Elements [IANA-IPFIX] with other protocols may\
    \ be\n   defined in the future by referencing this document.\n"
- title: 3.1.1.  unsigned8
  contents:
  - "3.1.1.  unsigned8\n   The type \"unsigned8\" represents a non-negative integer\
    \ value in the\n   range of 0 to 255.\n"
- title: 3.1.2.  unsigned16
  contents:
  - "3.1.2.  unsigned16\n   The type \"unsigned16\" represents a non-negative integer\
    \ value in the\n   range of 0 to 65535.\n"
- title: 3.1.3.  unsigned32
  contents:
  - "3.1.3.  unsigned32\n   The type \"unsigned32\" represents a non-negative integer\
    \ value in the\n   range of 0 to 4294967295.\n"
- title: 3.1.4.  unsigned64
  contents:
  - "3.1.4.  unsigned64\n   The type \"unsigned64\" represents a non-negative integer\
    \ value in the\n   range of 0 to 18446744073709551615.\n"
- title: 3.1.5.  signed8
  contents:
  - "3.1.5.  signed8\n   The type \"signed8\" represents an integer value in the range\
    \ of -128\n   to 127.\n"
- title: 3.1.6.  signed16
  contents:
  - "3.1.6.  signed16\n   The type \"signed16\" represents an integer value in the\
    \ range of\n   -32768 to 32767.\n"
- title: 3.1.7.  signed32
  contents:
  - "3.1.7.  signed32\n   The type \"signed32\" represents an integer value in the\
    \ range of\n   -2147483648 to 2147483647.\n"
- title: 3.1.8.  signed64
  contents:
  - "3.1.8.  signed64\n   The type \"signed64\" represents an integer value in the\
    \ range of\n   -9223372036854775808 to 9223372036854775807.\n"
- title: 3.1.9.  float32
  contents:
  - "3.1.9.  float32\n   The type \"float32\" corresponds to an IEEE single-precision\
    \ 32-bit\n   floating-point type as defined in [IEEE.754.2008].\n"
- title: 3.1.10.  float64
  contents:
  - "3.1.10.  float64\n   The type \"float64\" corresponds to an IEEE double-precision\
    \ 64-bit\n   floating-point type as defined in [IEEE.754.2008].\n"
- title: 3.1.11.  boolean
  contents:
  - "3.1.11.  boolean\n   The type \"boolean\" represents a binary value.  The only\
    \ allowed\n   values are \"true\" and \"false\".\n"
- title: 3.1.12.  macAddress
  contents:
  - "3.1.12.  macAddress\n   The type \"macAddress\" represents a MAC-48 address as\
    \ defined in\n   [IEEE.802-3.2012].\n"
- title: 3.1.13.  octetArray
  contents:
  - "3.1.13.  octetArray\n   The type \"octetArray\" represents a finite-length string\
    \ of octets.\n"
- title: 3.1.14.  string
  contents:
  - "3.1.14.  string\n   The type \"string\" represents a finite-length string of\
    \ valid\n   characters from the Unicode coded character set [ISO.10646].  Unicode\n\
    \   incorporates ASCII [RFC20] and the characters of many other\n   international\
    \ character sets.\n"
- title: 3.1.15.  dateTimeSeconds
  contents:
  - "3.1.15.  dateTimeSeconds\n   The type \"dateTimeSeconds\" represents a time value\
    \ expressed with\n   second-level precision.\n"
- title: 3.1.16.  dateTimeMilliseconds
  contents:
  - "3.1.16.  dateTimeMilliseconds\n   The type \"dateTimeMilliseconds\" represents\
    \ a time value expressed\n   with millisecond-level precision.\n"
- title: 3.1.17.  dateTimeMicroseconds
  contents:
  - "3.1.17.  dateTimeMicroseconds\n   The type \"dateTimeMicroseconds\" represents\
    \ a time value expressed\n   with microsecond-level precision.\n"
- title: 3.1.18.  dateTimeNanoseconds
  contents:
  - "3.1.18.  dateTimeNanoseconds\n   The type \"dateTimeNanoseconds\" represents\
    \ a time value expressed with\n   nanosecond-level precision.\n"
- title: 3.1.19.  ipv4Address
  contents:
  - "3.1.19.  ipv4Address\n   The type \"ipv4Address\" represents an IPv4 address.\n"
- title: 3.1.20.  ipv6Address
  contents:
  - "3.1.20.  ipv6Address\n   The type \"ipv6Address\" represents an IPv6 address.\n"
- title: 3.1.21.  basicList
  contents:
  - "3.1.21.  basicList\n   The type \"basicList\" supports structured data export\
    \ as described in\n   [RFC6313]; see Section 4.5.1 of that document for encoding\
    \ details.\n"
- title: 3.1.22.  subTemplateList
  contents:
  - "3.1.22.  subTemplateList\n   The type \"subTemplateList\" supports structured\
    \ data export as\n   described in [RFC6313]; see Section 4.5.2 of that document\
    \ for\n   encoding details.\n"
- title: 3.1.23.  subTemplateMultiList
  contents:
  - "3.1.23.  subTemplateMultiList\n   The type \"subTemplateMultiList\" supports\
    \ structured data export as\n   described in [RFC6313]; see Section 4.5.3 of that\
    \ document for\n   encoding details.\n"
- title: 3.2.  Data Type Semantics
  contents:
  - "3.2.  Data Type Semantics\n   This section describes the set of valid data type\
    \ semantics of the\n   IPFIX information model.  A subregistry of data type semantics\n\
    \   [IANA-IPFIX] is established in [RFC5610]; the restrictions on the use\n  \
    \ of semantics below are compatible with those specified in\n   Section 3.10 of\
    \ that document.  These semantics apply only to numeric\n   types, as noted in\
    \ the description of each semantic below.\n   Further data type semantics may\
    \ be specified by future updates to\n   this document.  Changes to the associated\
    \ \"IPFIX Information Element\n   Semantics\" subregistry [IANA-IPFIX] require\
    \ a Standards Action\n   [RFC5226].\n"
- title: 3.2.1.  quantity
  contents:
  - "3.2.1.  quantity\n   \"quantity\" is a numeric (integral or floating point) value\n\
    \   representing a measured value pertaining to the record.  This is\n   distinguished\
    \ from counters that represent an ongoing measured value\n   whose \"odometer\"\
    \ reading is captured as part of a given record.  This\n   is the default semantic\
    \ type of all numeric data types.\n"
- title: 3.2.2.  totalCounter
  contents:
  - "3.2.2.  totalCounter\n   \"totalCounter\" is an integral value reporting the\
    \ value of a counter.\n   Counters are unsigned and wrap back to zero after reaching\
    \ the limit\n   of the type.  For example, an unsigned64 with counter semantics\
    \ will\n   continue to increment until reaching the value of 2**64 - 1.  At this\n\
    \   point, the next increment will wrap its value to zero and continue\n   counting\
    \ from zero.  The semantics of a total counter is similar to\n   the semantics\
    \ of counters used in the Simple Network Management\n   Protocol (SNMP), such\
    \ as Counter32 as defined in [RFC2578].  The only\n   difference between total\
    \ counters and counters used in SNMP is that\n   the total counters have an initial\
    \ value of 0.  A total counter\n   counts independently of the export of its value.\n"
- title: 3.2.3.  deltaCounter
  contents:
  - "3.2.3.  deltaCounter\n   \"deltaCounter\" is an integral value reporting the\
    \ value of a counter.\n   Counters are unsigned and wrap back to zero after reaching\
    \ the limit\n   of the type.  For example, an unsigned64 with counter semantics\
    \ will\n   continue to increment until reaching the value of 2**64 - 1.  At this\n\
    \   point, the next increment will wrap its value to zero and continue\n   counting\
    \ from zero.  The semantics of a delta counter is similar to\n   the semantics\
    \ of counters used in SNMP, such as Counter32 as defined\n   in [RFC2578].  The\
    \ only difference between delta counters and\n   counters used in SNMP is that\
    \ the delta counters have an initial\n   value of 0.  A delta counter is reset\
    \ to 0 each time it is exported\n   and/or expires without export.\n"
- title: 3.2.4.  identifier
  contents:
  - "3.2.4.  identifier\n   \"identifier\" is an integral value that serves as an\
    \ identifier.\n   Specifically, mathematical operations on two identifiers (aside\
    \ from\n   the equality operation) are meaningless.  For example, Autonomous\n\
    \   System ID 1 * Autonomous System ID 2 is meaningless.  Identifiers\n   MUST\
    \ be one of the signed or unsigned data types.\n"
- title: 3.2.5.  flags
  contents:
  - "3.2.5.  flags\n   \"flags\" is an integral value that represents a set of bit\
    \ fields.\n   Logical operations are appropriate on such values, but other\n \
    \  mathematical operations are not.  Flags MUST always be of an unsigned\n   data\
    \ type.\n"
- title: 4.  Information Element Identifiers
  contents:
  - "4.  Information Element Identifiers\n   All Information Elements defined in the\
    \ IANA \"IPFIX Information\n   Elements\" registry [IANA-IPFIX] have their identifiers\
    \ assigned\n   by IANA.\n   The values of these identifiers are in the range of\
    \ 1-32767.  Within\n   this range, Information Element identifier values in the\
    \ sub-range of\n   1-127 are compatible with field types used by NetFlow version\
    \ 9\n   [RFC3954] for historical reasons.\n   In general, IANA will add newly\
    \ registered Information Elements to\n   the registry, assigning the lowest available\
    \ Information Element\n   identifier in the range of 128-32767.\n   Enterprise-specific\
    \ Information Element identifiers have the same\n   range of 1-32767, but they\
    \ are coupled with an additional enterprise\n   identifier.  For enterprise-specific\
    \ Information Elements,\n   Information Element identifier 0 is also reserved.\
    \  Enterprise-\n   specific Information Element identifiers can be chosen by an\n\
    \   enterprise arbitrarily within the range of 1-32767.  The same\n   identifier\
    \ may be assigned by other enterprises for different\n   purposes; these Information\
    \ Elements are distinct because the\n   Information Element identifier is coupled\
    \ with an enterprise\n   identifier.\n   Enterprise identifiers are to be registered\
    \ as SMI network management\n   private enterprise code numbers with IANA.  The\
    \ registry can be found\n   at [IANA-PEN].\n"
- title: 5.  Information Elements
  contents:
  - "5.  Information Elements\n   [IANA-IPFIX] is now the normative reference for\
    \ IPFIX Information\n   Elements.  When [RFC5102] was published, it defined, in\
    \ its\n   Section 5, the initial contents of that registry.\n   As a historical\
    \ note, Information Elements (IEs) were organized into\n   categories in [RFC5102]\
    \ according to their semantics and their\n   applicability; these categories were\
    \ not carried forward into\n   [IANA-IPFIX] as an organizing principle.  The categories\
    \ (with\n   example IEs) were:\n      1.  Identifiers (e.g., ingressInterface)\n\
    \      2.  Metering and Exporting Process Configuration\n          (e.g., exporterIPv4Address)\n\
    \      3.  Metering and Exporting Process Statistics\n          (e.g., exportedOctetTotalCount)\n\
    \      4.  IP Header Fields (e.g., sourceIPv4Address)\n      5.  Transport Header\
    \ Fields (e.g., sourceTransportPort)\n      6.  Sub-IP Header Fields (e.g., sourceMacAddress)\n\
    \      7.  Derived Packet Properties (e.g., bgpSourceAsNumber)\n      8.  Min/Max\
    \ Flow Properties (e.g., minimumIpTotalLength)\n      9.  Flow Timestamps (e.g.,\
    \ flowStartTimeMilliseconds)\n      10. Per-Flow Counters (e.g., octetDeltaCount)\n\
    \      11. Miscellaneous Flow Properties (e.g., flowEndReason)\n      12. Padding\
    \ (paddingOctets)\n   Information Elements derived from fields of packets or from\
    \ Packet\n   Treatment can typically serve as Flow Keys used for mapping packets\n\
    \   to Flows.  These Information Elements were placed in categories 4-7\n   in\
    \ the original categorization.\n   Information Elements not serving as Flow Keys\
    \ may have different\n   values for each packet in a Flow.  For Information Elements\
    \ with\n   values derived from fields of packets or from Packet Treatment, and\n\
    \   for which the value may change from packet to packet within a single\n   Flow,\
    \ the exported value of an Information Element is by default\n   determined by\
    \ the first packet observed for the corresponding Flow;\n   the description of\
    \ the Information Element may, however, explicitly\n   specify different semantics.\
    \  This simple rule allows the writing of\n   all Information Elements related\
    \ to header fields once, when the\n   first packet of the Flow is observed.  For\
    \ further observed packets\n   of the same Flow, only Flow properties that depend\
    \ on more than one\n   packet need to be updated; these Information Elements were\
    \ placed in\n   categories 8-11 in the original categorization.\n   Information\
    \ Elements with a name having the \"post\" prefix (e.g.,\n   postIpClassOfService)\
    \ do not necessarily report properties that were\n   actually observed at the\
    \ Observation Point but may be retrieved by\n   other means within the Observation\
    \ Domain.  These Information\n   Elements can be used if there are middlebox functions\
    \ within the\n   Observation Domain changing Flow properties after packets passed\
    \ the\n   Observation Point; they may also be reported directly by the\n   Observation\
    \ Point if the Observation Point is situated where it can\n   observe packets\
    \ on both sides of the middlebox.\n"
- title: 6.  Extending the Information Model
  contents:
  - "6.  Extending the Information Model\n   A key requirement for IPFIX is to allow\
    \ for extension of the\n   Information Model via the \"IP Flow Information Export\
    \ (IPFIX)\n   Entities\" registry [IANA-IPFIX].  New Information Element definitions\n\
    \   can be added to this registry subject to Expert Review [RFC5226],\n   with\
    \ additional process considerations as described in [RFC7013];\n   that document\
    \ also provides guidelines for authors and reviewers of\n   new Information Element\
    \ definitions.\n   For new Information Elements, the type space defined in Section\
    \ 3 can\n   be used.  If required, new abstract data types can be added to the\n\
    \   \"IPFIX Information Element Data Types\" subregistry [IANA-IPFIX] as\n   defined\
    \ in [RFC5610].  New abstract data types and semantics are\n   subject to Standards\
    \ Action [RFC5226] and MUST be defined in IETF\n   Standards Track documents updating\
    \ this document.\n   Enterprises may wish to define Information Elements without\n\
    \   registering them with IANA.  IPFIX explicitly supports enterprise-\n   specific\
    \ Information Elements.  Enterprise-specific Information\n   Elements are described\
    \ in Sections 2.1 and 4; guidelines for using\n   them appear in [RFC7013].\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   As this document obsoletes [RFC5102], IANA has updated\
    \ the references\n   in the \"IP Flow Information Export (IPFIX) Entities\" registry\n\
    \   [IANA-IPFIX], the \"IPFIX MPLS label type\" subregistry of that\n   registry,\
    \ the urn:ietf:params:xml:ns:ipfix-info XML namespace, and\n   the urn:ietf:params:xml:schema:ipfix-info\
    \ XML schema to refer to this\n   document.\n   However, [RFC5102] still provides\
    \ a historical reference for the\n   initial entries in the \"IPFIX Information\
    \ Elements\" registry.\n   Therefore, IANA has kept [RFC5102] as the requestor\
    \ of those\n   Information Elements in the \"IPFIX Information Elements\" registry\n\
    \   that list [RFC5102] as their requestor and added the following\n   explanatory\
    \ note to the \"IPFIX Information Elements\" registry:\n      \"RFC 7012 has obsoleted\
    \ RFC 5102; references to RFC 5102 in this\n      registry remain as part of the\
    \ historical record\".\n   The Information Element Specification Template (Section\
    \ 2.1) requires\n   two new columns not present in [RFC5102].  IANA has created\
    \ a new\n   Revision column in the \"IPFIX Information Elements\" registry and\
    \ set\n   the Revision of existing Information Elements to 0.  IANA has also\n\
    \   created a new Date column in that registry and set the Date of all\n   existing\
    \ Information Elements to the publication date of this\n   document.\n   To identify\
    \ Information Elements with identifiers 127 or below as\n   NetFlow version 9\
    \ [RFC3954] compatible, IANA has set the Name of all\n   existing Reserved Information\
    \ Elements with identifier 127 or less to\n   \"Assigned for NetFlow v9 compatibility\"\
    \ and the Reference of those\n   Information Elements to [RFC3954].\n   As IANA\
    \ now has change control of the schema used for the IANA \"IPFIX\n   Information\
    \ Elements\" registry [IANA-IPFIX], IANA has deprecated the\n   previous XML schema\
    \ for the description of Information Elements\n   urn:ietf:params:xml:schema:ipfix-info\
    \ [IPFIX-XML-SCHEMA].\n   To support the process described in Section 7.4, IANA\
    \ has established\n   a mailing list for communicating with the IE-DOCTORS, named\n\
    \   ie-doctors@ietf.org.\n   The remaining subsections of this section contain\
    \ no actions\n   for IANA.\n"
- title: 7.1.  IPFIX Information Elements
  contents:
  - "7.1.  IPFIX Information Elements\n   This document refers to Information Elements,\
    \ for which the Internet\n   Assigned Numbers Authority (IANA) has created the\
    \ IPFIX \"Information\n   Elements\" registry [IANA-IPFIX].  The columns of this\
    \ registry must,\n   at minimum, be able to store the information defined in the\
    \ template\n   detailed in Section 2.1; it may contain other information as\n\
    \   necessary for the management of the registry.\n   The process for making additions\
    \ or other changes to the \"IPFIX\n   Information Elements\" registry is given\
    \ in Section 7.4.\n"
- title: 7.2.  MPLS Label Type Identifier
  contents:
  - "7.2.  MPLS Label Type Identifier\n   Information Element #46, named mplsTopLabelType,\
    \ carries MPLS label\n   types.  Values for 5 different types have initially been\
    \ defined.\n   For ensuring the extensibility of this information, IANA has created\n\
    \   a new subregistry for MPLS label types and filled it with the initial\n  \
    \ list from the description Information Element #46, mplsTopLabelType.\n   New\
    \ assignments for MPLS label types are administered by IANA through\n   Expert\
    \ Review [RFC5226], i.e., review by one of a group of experts\n   designated by\
    \ an IETF Area Director.  The group of experts must\n   double-check the label\
    \ type definitions with already-defined label\n   types for completeness, accuracy,\
    \ and redundancy.  The specification\n   of new MPLS label types MUST be published\
    \ using a well-established\n   and persistent publication medium.\n"
- title: 7.3.  XML Namespace and Schema
  contents:
  - "7.3.  XML Namespace and Schema\n   The prior version of this document [RFC5102]\
    \ specified an XML schema\n   for IPFIX Information Element definitions [IPFIX-XML-SCHEMA]\
    \ that was\n   used in the generation of the document text itself.  When the IANA\n\
    \   \"IPFIX Information Elements\" registry [IANA-IPFIX] was created,\n   change\
    \ control on the registry and the schema used to validate it\n   passed to IANA.\n\
    \   The use of a machine-readable syntax for the registry enables the\n   creation\
    \ of IPFIX tools that can automatically adapt to extensions to\n   the information\
    \ model.  It should be noted that the use of XML in\n   Exporters, Collectors,\
    \ or other tools is not mandatory for the\n   deployment of IPFIX.  In particular,\
    \ Exporting Processes do not\n   produce or consume XML as part of their operation.\
    \  IPFIX Collectors\n   MAY take advantage of the machine-readability of the information\n\
    \   model versus hard-coding their behavior or inventing proprietary\n   means\
    \ for accommodating extensions.  However, in order to avoid\n   unnecessary load\
    \ on the IANA infrastructure serving the registry,\n   Collectors SHOULD NOT poll\
    \ the IANA registry [IANA-IPFIX] directly at\n   runtime.\n   The reference to\
    \ the current schema is embedded in the registry\n   [IANA-IPFIX]; this schema\
    \ may change from time to time as necessary\n   to support the maintenance of\
    \ the registry.  As such, the schema\n   urn:ietf:params:xml:schema:ipfix-info\
    \ [IPFIX-XML-SCHEMA] specified in\n   [RFC5102] has been deprecated.\n"
- title: 7.4.  Addition, Revision, and Deprecation
  contents:
  - "7.4.  Addition, Revision, and Deprecation\n   New assignments for the \"IPFIX\
    \ Information Elements\" registry are\n   administered by IANA through Expert\
    \ Review [RFC5226].  These experts\n   are referred to as IE-DOCTORS and are appointed\
    \ by the IESG.  The\n   process they follow is defined in [RFC7013].\n   Information\
    \ Element identifiers in the range of 1-127 are compatible\n   with field types\
    \ used by NetFlow version 9 [RFC3954] for historical\n   reasons and must not\
    \ be assigned unless the Information Element is\n   compatible with the NetFlow\
    \ version 9 protocol, as determined by one\n   of the IE-DOCTORS designated by\
    \ the IESG as a NetFlow version 9\n   expert.\n   Future assignments added to\
    \ the \"IPFIX Information Elements\" registry\n   that require subregistries for\
    \ enumerated values (e.g., Section 7.2)\n   must have those subregistries added\
    \ simultaneously with the new\n   assignment; additions to these subregistries\
    \ must be subject to\n   Expert Review [RFC5226].  Unless specified at assignment\
    \ time, the\n   experts for the subregistry will be the same as for the \"IPFIX\n\
    \   Information Elements\" registry as a whole.\n   When IANA receives a request\
    \ to add, revise, or deprecate an\n   Information Element in the \"IPFIX Information\
    \ Elements\" registry, it\n   forwards the request to the IE-DOCTORS for review.\n\
    \   When IANA receives an approval for a request to add an Information\n   Element\
    \ definition from the IE-DOCTORS, it adds that Information\n   Element to the\
    \ registry.  The approved request may include changes\n   made by the requestor\
    \ and/or reviewers as compared to the original\n   request.\n   When IANA receives\
    \ an approval for a request to revise an Information\n   Element definition from\
    \ the IE-DOCTORS, it changes that Information\n   Element's definition in the\
    \ registry and updates the Revision and\n   Date columns as appropriate.  The\
    \ approved request may include\n   changes from the original request.  If the\
    \ original Information\n   Element was added to the registry with IETF consensus\
    \ (i.e., was\n   defined by an RFC), the revision will require IETF consensus\
    \ as well.\n   When IANA receives an approval for a request to deprecate an\n\
    \   Information Element definition from the IE-DOCTORS, it changes that\n   Information\
    \ Element's definition in the registry and updates the\n   Revision and Date columns\
    \ as appropriate.  The approved request may\n   include changes from the original\
    \ request.  If the original\n   Information Element was added to the registry\
    \ with IETF consensus\n   (i.e., was defined by an RFC), the deprecation will\
    \ require IETF\n   consensus as well.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The IPFIX information model itself does not directly\
    \ introduce\n   security issues.  Rather, it defines a set of attributes that\
    \ may,\n   for privacy or business issues, be considered sensitive information.\n\
    \   For example, exporting values of header fields may make attacks\n   possible\
    \ for the receiver of this information; this would otherwise\n   only be possible\
    \ for direct observers of the reported Flows along the\n   data path.\n   The\
    \ underlying protocol used to exchange the information described\n   here must\
    \ therefore apply appropriate procedures to guarantee the\n   integrity and confidentiality\
    \ of the exported information.  These\n   protocols are defined in separate documents,\
    \ specifically the IPFIX\n   protocol document [RFC7011].\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   This document is substantially based on [RFC5102].  The\
    \ editors thank\n   the authors of that document; those authors are listed below\
    \ as\n   contributors.  Special thanks go to Paul Aitken for the detailed\n  \
    \ review.  Finally, the authors thank the IPFIX WG chairs: Nevil\n   Brownlee\
    \ and Juergen Quittek.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC6313]  Claise, B., Dhandapani, G., Aitken, P., and S. Yates,\n\
    \              \"Export of Structured Data in IP Flow Information Export\n   \
    \           (IPFIX)\", RFC 6313, July 2011.\n   [RFC7011]  Claise, B., Ed., Trammell,\
    \ B., Ed., and P. Aitken,\n              \"Specification of the IP Flow Information\
    \ Export (IPFIX)\n              Protocol for the Exchange of Flow Information\"\
    , STD 77,\n              RFC 7011, September 2013.\n   [RFC7013]  Trammell, B.,\
    \ and B. Claise, \"Guidelines for Authors and\n              Reviewers of IP Flow\
    \ Information Export (IPFIX)\n              Information Elements\", BCP 184, RFC\
    \ 7013, September 2013.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [IANA-IPFIX]\n              IANA, \"IP Flow\
    \ Information Export (IPFIX) Entities\",\n              <http://www.iana.org/assignments/ipfix/>.\n\
    \   [IEEE.754.2008]\n              Institute of Electrical and Electronics Engineers,\
    \ \"IEEE\n              Standard for Floating-Point Arithmetic\", IEEE\n     \
    \         Standard 754, August 2008.\n   [IEEE.802-3.2012]\n              Institute\
    \ of Electrical and Electronics Engineers, \"IEEE\n              Standard for\
    \ Ethernet\", IEEE Standard 802.3, 2012.\n   [IPFIX-MED-PROTO]\n             \
    \ Claise, B., Kobayashi, A., and B. Trammell, \"Operation of\n              the\
    \ IP Flow Information Export (IPFIX) Protocol on IPFIX\n              Mediators\"\
    , Work in Progress, July 2013.\n   [IPFIX-XML-SCHEMA]\n              IANA, \"\
    IETF XML Registry\",\n              <http://www.iana.org/assignments/xml-registry/>.\n\
    \   [ISO.10646]\n              International Organization for Standardization,\n\
    \              \"Information technology - Universal Coded Character Set\n    \
    \          (UCS)\", ISO/IEC 10646:2012, November 2012.\n   [IANA-PEN] IANA, \"\
    Private Enterprise Numbers\",\n              <http://www.iana.org/assignments/enterprise-numbers>.\n\
    \   [RFC20]    Cerf, V., \"ASCII format for Network Interchange\", RFC 20,\n \
    \             October 1969.\n   [RFC2578]  McCloghrie, K., Ed., Perkins, D., Ed.,\
    \ and J.\n              Schoenwaelder, Ed., \"Structure of Management Information\n\
    \              Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.\n   [RFC3234]\
    \  Carpenter, B. and S. Brim, \"Middleboxes: Taxonomy and\n              Issues\"\
    , RFC 3234, February 2002.\n   [RFC3444]  Pras, A. and J. Schoenwaelder, \"On\
    \ the Difference between\n              Information Models and Data Models\",\
    \ RFC 3444,\n              January 2003.\n   [RFC3917]  Quittek, J., Zseby, T.,\
    \ Claise, B., and S. Zander,\n              \"Requirements for IP Flow Information\
    \ Export (IPFIX)\",\n              RFC 3917, October 2004.\n   [RFC3954]  Claise,\
    \ B., Ed., \"Cisco Systems NetFlow Services Export\n              Version 9\"\
    , RFC 3954, October 2004.\n   [RFC5101]  Claise, B., Ed., \"Specification of the\
    \ IP Flow Information\n              Export (IPFIX) Protocol for the Exchange\
    \ of IP Traffic\n              Flow Information\", RFC 5101, January 2008.\n \
    \  [RFC5102]  Quittek, J., Bryant, S., Claise, B., Aitken, P., and J.\n      \
    \        Meyer, \"Information Model for IP Flow Information Export\",\n      \
    \        RFC 5102, January 2008.\n   [RFC5103]  Trammell, B. and E. Boschi, \"\
    Bidirectional Flow Export\n              Using IP Flow Information Export (IPFIX)\"\
    , RFC 5103,\n              January 2008.\n   [RFC5153]  Boschi, E., Mark, L.,\
    \ Quittek, J., Stiemerling, M., and P.\n              Aitken, \"IP Flow Information\
    \ Export (IPFIX) Implementation\n              Guidelines\", RFC 5153, April 2008.\n\
    \   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n   \
    \           IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n       \
    \       May 2008.\n   [RFC5470]  Sadasivan, G., Brownlee, N., Claise, B., and\
    \ J. Quittek,\n              \"Architecture for IP Flow Information Export\",\
    \ RFC 5470,\n              March 2009.\n   [RFC5471]  Schmoll, C., Aitken, P.,\
    \ and B. Claise, \"Guidelines for IP\n              Flow Information Export (IPFIX)\
    \ Testing\", RFC 5471,\n              March 2009.\n   [RFC5472]  Zseby, T., Boschi,\
    \ E., Brownlee, N., and B. Claise, \"IP\n              Flow Information Export\
    \ (IPFIX) Applicability\", RFC 5472,\n              March 2009.\n   [RFC5473]\
    \  Boschi, E., Mark, L., and B. Claise, \"Reducing Redundancy\n              in\
    \ IP Flow Information Export (IPFIX) and Packet Sampling\n              (PSAMP)\
    \ Reports\", RFC 5473, March 2009.\n   [RFC5610]  Boschi, E., Trammell, B., Mark,\
    \ L., and T. Zseby,\n              \"Exporting Type Information for IP Flow Information\
    \ Export\n              (IPFIX) Information Elements\", RFC 5610, July 2009.\n\
    \   [RFC6183]  Kobayashi, A., Claise, B., Muenz, G., and K. Ishibashi,\n     \
    \         \"IP Flow Information Export (IPFIX) Mediation: Framework\",\n     \
    \         RFC 6183, April 2011.\n   [RFC6615]  Dietz, T., Ed., Kobayashi, A.,\
    \ Claise, B., and G. Muenz,\n              \"Definitions of Managed Objects for\
    \ IP Flow Information\n              Export\", RFC 6615, June 2012.\n   [RFC6728]\
    \  Muenz, G., Claise, B., and P. Aitken, \"Configuration Data\n              Model\
    \ for the IP Flow Information Export (IPFIX) and\n              Packet Sampling\
    \ (PSAMP) Protocols\", RFC 6728,\n              October 2012.\n"
- title: Contributors
  contents:
  - "Contributors\n   Juergen Quittek\n   NEC\n   Kurfuersten-Anlage 36\n   Heidelberg\
    \ 69115\n   Germany\n   Phone: +49 6221 90511-15\n   EMail: quittek@nw.neclab.eu\n\
    \   URI:   http://www.neclab.eu/\n   Stewart Bryant\n   Cisco Systems, Inc.\n\
    \   10 New Square, Bedfont Lakes\n   Feltham, Middlesex  TW18 8HA\n   United Kingdom\n\
    \   EMail: stbryant@cisco.com\n   Paul Aitken\n   Cisco Systems, Inc.\n   96 Commercial\
    \ Quay\n   Edinburgh EH6 6LX\n   Scotland\n   Phone: +44 131 561 3616\n   EMail:\
    \ paitken@cisco.com\n   Jeff Meyer\n   PayPal\n   2211 N. First St.\n   San Jose,\
    \ CA  95131-2021\n   US\n   Phone: +1 408 976-9149\n   EMail: jemeyer@paypal.com\n\
    \   URI:   http://www.paypal.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Benoit Claise (editor)\n   Cisco Systems, Inc.\n   De\
    \ Kleetlaan 6a b1\n   1831 Diegem\n   Belgium\n   Phone: +32 2 704 5622\n   EMail:\
    \ bclaise@cisco.com\n   Brian Trammell (editor)\n   Swiss Federal Institute of\
    \ Technology Zurich\n   Gloriastrasse 35\n   8092 Zurich\n   Switzerland\n   Phone:\
    \ +41 44 632 70 13\n   EMail: trammell@tik.ee.ethz.ch\n"
