- title: __initial_text__
  contents:
  - '                   Internet Relay Chat: Architecture

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The IRC (Internet Relay Chat) protocol is for use with text based\n\
    \   conferencing. It has been developed since 1989 when it was originally\n  \
    \ implemented as a mean for users on a BBS to chat amongst themselves.\n   First\
    \ formally documented in May 1993 by RFC 1459 [IRC], the protocol\n   has kept\
    \ evolving. This document is an update describing the\n   architecture of the\
    \ current IRC protocol and the role of its\n   different components.  Other documents\
    \ describe in detail the\n   protocol used between the various components defined\
    \ here.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction ...............................................\
    \   2\n   2.  Components .................................................   2\n\
    \      2.1  Servers ................................................   2\n   \
    \   2.2  Clients ................................................   3\n      \
    \   2.2.1  User Clients ......................................   3\n         2.2.2\
    \  Service Clients ...................................   3\n   3.  Architecture\
    \ ...............................................   3\n   4.  IRC Protocol Services\
    \ ......................................   4\n      4.1  Client Locator .........................................\
    \   4\n      4.2  Message Relaying .......................................   4\n\
    \      4.3  Channel Hosting And Management .........................   4\n   5.\
    \  IRC Concepts ...............................................   4\n      5.1\
    \  One-To-One Communication ...............................   5\n      5.2  One-To-Many\
    \ ............................................   5\n         5.2.1  To A Channel\
    \ ......................................   5\n         5.2.2  To A Host/Server\
    \ Mask .............................   6\n         5.2.3  To A List .........................................\
    \   6\n      5.3  One-To-All .............................................   6\n\
    \         5.3.1  Client-to-Client ..................................   6\n   \
    \      5.3.2  Client-to-Server ..................................   7\n      \
    \   5.3.3  Server-to-Server ..................................   7\n   6.  Current\
    \ Problems ...........................................   7\n      6.1  Scalability\
    \ ............................................   7\n      6.2  Reliability ............................................\
    \   7\n      6.3  Network Congestion .....................................   7\n\
    \      6.4  Privacy ................................................   8\n   7.\
    \  Security Considerations ....................................   8\n   8.  Current\
    \ Support And Availability ...........................   8\n   9.  Acknowledgements\
    \ ...........................................   8\n   10.  References ................................................\
    \   8\n   11.  Author's Address ..........................................   9\n\
    \   12.  Full Copyright Statement ..................................  10\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The IRC (Internet Relay Chat) protocol has been designed\
    \ over a\n   number of years for use with text based conferencing.  This document\n\
    \   describes its current architecture.\n   The IRC Protocol is based on the client-server\
    \ model, and is well\n   suited to running on many machines in a distributed fashion.\
    \  A\n   typical setup involves a single process (the server) forming a\n   central\
    \ point for clients (or other servers) to connect to,\n   performing the required\
    \ message delivery/multiplexing and other\n   functions.\n   This distributed\
    \ model, which requires each server to have a copy\n   of the global state information,\
    \ is still the most flagrant problem\n   of the protocol as it is a serious handicap,\
    \ which limits the maximum\n   size a network can reach.  If the existing networks\
    \ have been able to\n   keep growing at an incredible pace, we must thank hardware\n\
    \   manufacturers for giving us ever more powerful systems.\n"
- title: 2. Components
  contents:
  - "2. Components\n   The following paragraphs define the basic components of the\
    \ IRC\n   protocol.\n"
- title: 2.1 Servers
  contents:
  - "2.1 Servers\n   The server forms the backbone of IRC as it is the only component\n\
    \   of the protocol which is able to link all the other components\n   together:\
    \ it provides a point to which clients may connect to talk to\n   each other [IRC-CLIENT],\
    \ and a point for other servers to connect to\n   [IRC-SERVER].  The server is\
    \ also responsible for providing the basic\n   services defined by the IRC protocol.\n"
- title: 2.2 Clients
  contents:
  - "2.2 Clients\n   A client is anything connecting to a server that is not another\n\
    \   server.  There are two types of clients which both serve a different\n   purpose.\n"
- title: 2.2.1 User Clients
  contents:
  - "2.2.1 User Clients\n   User clients are generally programs providing a text based\n\
    \   interface that is used to communicate interactively via IRC.  This\n   particular\
    \ type of clients is often referred as \"users\".\n"
- title: 2.2.2 Service Clients
  contents:
  - "2.2.2 Service Clients\n   Unlike users, service clients are not intended to be\
    \ used manually\n   nor for talking.  They have a more limited access to the chat\n\
    \   functions of the protocol, while optionally having access to more\n   private\
    \ data from the servers.\n   Services are typically automatons used to provide\
    \ some kind of\n   service (not necessarily related to IRC itself) to users. \
    \ An example\n   is a service collecting statistics about the origin of users\n\
    \   connected on the IRC network.\n"
- title: 3. Architecture
  contents:
  - "3. Architecture\n   An IRC network is defined by a group of servers connected\
    \ to each\n   other.  A single server forms the simplest IRC network.\n   The\
    \ only network configuration allowed for IRC servers is that of\n   a spanning\
    \ tree where each server acts as a central node for the rest\n   of the network\
    \ it sees.\n                       1--\\\n                           A       \
    \ D---4\n                       2--/ \\      /\n                             B----C\n\
    \                            /      \\\n                           3        E\n\
    \   Servers: A, B, C, D, E         Clients: 1, 2, 3, 4\n                    [\
    \ Fig. 1. Sample small IRC network ]\n   The IRC protocol provides no mean for\
    \ two clients to directly\n   communicate.  All communication between clients\
    \ is relayed by the\n   server(s).\n"
- title: 4. IRC Protocol Services
  contents:
  - "4. IRC Protocol Services\n   This section describes the services offered by the\
    \ IRC protocol.  The\n   combination of these services allow real-time conferencing.\n"
- title: 4.1 Client Locator
  contents:
  - "4.1 Client Locator\n   To be able to exchange messages, two clients must be able\
    \ to locate\n   each other.\n   Upon connecting to a server, a client registers\
    \ using a label which\n   is then used by other servers and clients to know where\
    \ the client is\n   located.  Servers are responsible for keeping track of all\
    \ the labels\n   being used.\n"
- title: 4.2 Message Relaying
  contents:
  - "4.2 Message Relaying\n   The IRC protocol provides no mean for two clients to\
    \ directly\n   communicate.  All communication between clients is relayed by the\n\
    \   server(s).\n"
- title: 4.3 Channel Hosting And Management
  contents:
  - "4.3 Channel Hosting And Management\n   A channel is a named group of one or more\
    \ users which will all\n   receive messages addressed to that channel.  A channel\
    \ is\n   characterized by its name and current members, it also has a set of\n\
    \   properties which can be manipulated by (some of) its members.\n   Channels\
    \ provide a mean for a message to be sent to several clients.\n   Servers host\
    \ channels, providing the necessary message multiplexing.\n   Servers are also\
    \ responsible for managing channels by keeping track\n   of the channel members.\
    \  The exact role of servers is defined in\n   \"Internet Relay Chat: Channel\
    \ Management\" [IRC-CHAN].\n"
- title: 5. IRC Concepts
  contents:
  - "5. IRC Concepts\n   This section is devoted to describing the actual concepts\
    \ behind the\n   organization of the IRC protocol and how different classes of\n\
    \   messages are delivered.\n"
- title: 5.1 One-To-One Communication
  contents:
  - "5.1 One-To-One Communication\n   Communication on a one-to-one basis is usually\
    \ performed by clients,\n   since most server-server traffic is not a result of\
    \ servers talking\n   only to each other.  To provide a means for clients to talk\
    \ to each\n   other, it is REQUIRED that all servers be able to send a message\
    \ in\n   exactly one direction along the spanning tree in order to reach any\n\
    \   client.  Thus the path of a message being delivered is the shortest\n   path\
    \ between any two points on the spanning tree.\n   The following examples all\
    \ refer to Figure 1 above.\n   Example 1: A message between clients 1 and 2 is\
    \ only seen by server\n       A, which sends it straight to client 2.\n   Example\
    \ 2: A message between clients 1 and 3 is seen by servers A &\n       B, and client\
    \ 3.  No other clients or servers are allowed see the\n       message.\n   Example\
    \ 3: A message between clients 2 and 4 is seen by servers A, B,\n       C & D\
    \ and client 4 only.\n"
- title: 5.2 One-To-Many
  contents:
  - "5.2 One-To-Many\n   The main goal of IRC is to provide a forum which allows easy\
    \ and\n   efficient conferencing (one to many conversations).  IRC offers\n  \
    \ several means to achieve this, each serving its own purpose.\n"
- title: 5.2.1 To A Channel
  contents:
  - "5.2.1 To A Channel\n   In IRC the channel has a role equivalent to that of the\
    \ multicast\n   group; their existence is dynamic and the actual conversation\
    \ carried\n   out on a channel MUST only be sent to servers which are supporting\n\
    \   users on a given channel.  Moreover, the message SHALL only be sent\n   once\
    \ to every local link as each server is responsible to fan the\n   original message\
    \ to ensure that it will reach all the recipients.\n   The following examples\
    \ all refer to Figure 2.\n   Example 4: Any channel with 1 client in it. Messages\
    \ to the channel\n       go to the server and then nowhere else.\n   Example 5:\
    \ 2 clients in a channel. All messages traverse a path as if\n       they were\
    \ private messages between the two clients outside a\n       channel.\n   Example\
    \ 6: Clients 1, 2 and 3 in a channel.  All messages to the\n       channel are\
    \ sent to all clients and only those servers which must\n       be traversed by\
    \ the message if it were a private message to a\n       single client.  If client\
    \ 1 sends a message, it goes back to\n       client 2 and then via server B to\
    \ client 3.\n"
- title: 5.2.2 To A Host/Server Mask
  contents:
  - "5.2.2 To A Host/Server Mask\n   To provide with some mechanism to send messages\
    \ to a large body of\n   related users, host and server mask messages are available.\
    \  These\n   messages are sent to users whose host or server information match\n\
    \   that of the mask.  The messages are only sent to locations where\n   users\
    \ are, in a fashion similar to that of channels.\n"
- title: 5.2.3 To A List
  contents:
  - "5.2.3 To A List\n   The least efficient style of one-to-many conversation is\
    \ through\n   clients talking to a 'list' of targets (client, channel, mask).\
    \  How\n   this is done is almost self explanatory: the client gives a list of\n\
    \   destinations to which the message is to be delivered and the server\n   breaks\
    \ it up and dispatches a separate copy of the message to each\n   given destination.\n\
    \   This is not as efficient as using a channel since the destination\n   list\
    \ MAY be broken up and the dispatch sent without checking to make\n   sure duplicates\
    \ aren't sent down each path.\n"
- title: 5.3 One-To-All
  contents:
  - "5.3 One-To-All\n   The one-to-all type of message is better described as a broadcast\n\
    \   message, sent to all clients or servers or both.  On a large network\n   of\
    \ users and servers, a single message can result in a lot of traffic\n   being\
    \ sent over the network in an effort to reach all of the desired\n   destinations.\n\
    \   For some class of messages, there is no option but to broadcast it to\n  \
    \ all servers so that the state information held by each server is\n   consistent\
    \ between servers.\n"
- title: 5.3.1 Client-to-Client
  contents:
  - "5.3.1 Client-to-Client\n   There is no class of message which, from a single\
    \ message, results in\n   a message being sent to every other client.\n"
- title: 5.3.2 Client-to-Server
  contents:
  - "5.3.2 Client-to-Server\n   Most of the commands which result in a change of state\
    \ information\n   (such as channel membership, channel mode, user status, etc.)\
    \ MUST be\n   sent to all servers by default, and this distribution SHALL NOT\
    \ be\n   changed by the client.\n"
- title: 5.3.3 Server-to-Server
  contents:
  - "5.3.3 Server-to-Server\n   While most messages between servers are distributed\
    \ to all 'other'\n   servers, this is only required for any message that affects\
    \ a user,\n   channel or server.  Since these are the basic items found in IRC,\n\
    \   nearly all messages originating from a server are broadcast to all\n   other\
    \ connected servers.\n"
- title: 6. Current Problems
  contents:
  - "6. Current Problems\n   There are a number of recognized problems with this protocol,\
    \ this\n   section only addresses the problems related to the architecture of\n\
    \   the protocol.\n"
- title: 6.1 Scalability
  contents:
  - "6.1 Scalability\n   It is widely recognized that this protocol does not scale\n\
    \   sufficiently well when used in a large arena.  The main problem comes\n  \
    \ from the requirement that all servers know about all other servers,\n   clients\
    \ and channels and that information regarding them be updated\n   as soon as it\
    \ changes.\n"
- title: 6.2 Reliability
  contents:
  - "6.2 Reliability\n   As the only network configuration allowed for IRC servers\
    \ is that of\n   a spanning tree, each link between two servers is an obvious\
    \ and\n   quite serious point of failure.  This particular issue is addressed\n\
    \   more in detail in \"Internet Relay Chat: Server Protocol\" [IRC-\n   SERVER].\n"
- title: 6.3 Network Congestion
  contents:
  - "6.3 Network Congestion\n   Another problem related to the scalability and reliability\
    \ issues, as\n   well as the spanning tree architecture, is that the protocol\
    \ and\n   architecture for IRC are extremely vulnerable to network congestions.\n\
    \   This problem is endemic, and should be solved for the next\n   generation:\
    \ if congestion and high traffic volume cause a link\n   between two servers to\
    \ fail, not only this failure generates more\n   network traffic, but the reconnection\
    \ (eventually elsewhere) of two\n   servers also generates more traffic.\n   In\
    \ an attempt to minimize the impact of these problems, it is\n   strongly RECOMMENDED\
    \ that servers do not automatically try to\n   reconnect too fast, in order to\
    \ avoid aggravating the situation.\n"
- title: 6.4 Privacy
  contents:
  - "6.4 Privacy\n   Besides not scaling well, the fact that servers need to know\
    \ all\n   information about other entities, the issue of privacy is also a\n \
    \  concern. This is in particular true for channels, as the related\n   information\
    \ is quite a lot more revealing than whether a user is\n   online or not.\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   Asides from the privacy concerns mentioned in\
    \ section 6.4 (Privacy),\n   security is believed to be irrelevant to this document.\n"
- title: 8. Current Support And Availability
  contents:
  - "8. Current Support And Availability\n        Mailing lists for IRC related discussion:\n\
    \          General discussion: ircd-users@irc.org\n          Protocol development:\
    \ ircd-dev@irc.org\n        Software implementations:\n          ftp://ftp.irc.org/irc/server\n\
    \          ftp://ftp.funet.fi/pub/unix/irc\n          ftp://coombs.anu.edu.au/pub/irc\n\
    \        Newsgroup: alt.irc\n"
- title: 9. Acknowledgements
  contents:
  - "9. Acknowledgements\n   Parts of this document were copied from the RFC 1459\
    \ [IRC] which\n   first formally documented the IRC Protocol.  It has also benefited\n\
    \   from many rounds of review and comments.  In particular, the\n   following\
    \ people have made significant contributions to this\n   document:\n   Matthew\
    \ Green, Michael Neumayer, Volker Paulsen, Kurt Roeckx, Vesa\n   Ruokonen, Magnus\
    \ Tjernstrom, Stefan Zehl.\n"
- title: 10. References
  contents:
  - "10. References\n   [KEYWORDS]   Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \                Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [IRC]\
    \        Oikarinen, J. and D. Reed, \"Internet Relay Chat\n                Protocol\"\
    , RFC 1459, May 1993.\n   [IRC-CLIENT] Kalt, C., \"Internet Relay Chat: Client\
    \ Protocol\", RFC\n                2812, April 2000.\n   [IRC-SERVER] Kalt, C.,\
    \ \"Internet Relay Chat: Server Protocol\", RFC\n                2813, April 2000.\n\
    \   [IRC-CHAN]   Kalt, C., \"Internet Relay Chat: Channel Management\", RFC\n\
    \                2811, April 2000.\n"
- title: 11. Author's Address
  contents:
  - "11. Author's Address\n   Christophe Kalt\n   99 Teaneck Rd, Apt #117\n   Ridgefield\
    \ Park, NJ 07660\n   USA\n   EMail: kalt@stealth.net\n"
- title: 12.  Full Copyright Statement
  contents:
  - "12.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
