- title: __initial_text__
  contents:
  - '            RTP Payload Format for BroadVoice Speech Codecs

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the RTP payload format for the BroadVoice(R)\n\
    \   narrowband and wideband speech codecs.  The narrowband codec, called\n   BroadVoice16,\
    \ or BV16, has been selected by CableLabs as a mandatory\n   codec in PacketCable\
    \ 1.5 and has a CableLabs specification.  The\n   document also provides specifications\
    \ for the use of BroadVoice with\n   MIME and the Session Description Protocol\
    \ (SDP).\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Background ......................................................2\n  \
    \ 3. RTP Payload Format for BroadVoice16 Narrowband Codec ............3\n    \
    \  3.1. BroadVoice16 Bit Stream Definition .........................4\n      3.2.\
    \ Multiple BroadVoice16 Frames in an RTP Packet ..............5\n   4. RTP Payload\
    \ Format for BroadVoice32 Wideband Codec ..............6\n      4.1. BroadVoice32\
    \ Bit Stream Definition .........................6\n      4.2. Multiple BroadVoice32\
    \ Frames in an RTP Packet ..............8\n   5. IANA Considerations .............................................8\n\
    \      5.1. MIME Registration of BroadVoice16 for RTP ..................9\n  \
    \    5.2. MIME Registration of BroadVoice32 for RTP ..................9\n   6.\
    \ Mapping to SDP Parameters ......................................10\n      6.1.\
    \ Offer-Answer Model Considerations .........................11\n   7. Security\
    \ Considerations ........................................11\n   8. Congestion\
    \ Control .............................................11\n   9. Acknowledgements\
    \ ...............................................11\n   10. References ....................................................12\n\
    \      10.1. Normative References .....................................12\n  \
    \    10.2. Informative References ...................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies the payload format for sending BroadVoice\n\
    \   encoded speech or audio signals using the Real-time Transport\n   Protocol\
    \ (RTP) [1].  The sender may send one or more BroadVoice codec\n   data frames\
    \ per packet, depending on the application scenario, based\n   on network conditions,\
    \ bandwidth availability, delay requirements,\n   and packet-loss tolerance.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in RFC 2119 [2].\n"
- title: 2.  Background
  contents:
  - "2.  Background\n   BroadVoice is a speech codec family developed for VoIP (Voice\
    \ over\n   Internet Protocol) applications, including Voice over Cable, Voice\n\
    \   over DSL, and IP phone applications.  BroadVoice achieves high speech\n  \
    \ quality with a low coding delay and relatively low codec complexity.\n   The\
    \ BroadVoice codec family contains two codec versions.  The\n   narrowband version\
    \ of BroadVoice, called BroadVoice16 [3], or BV16\n   for short, encodes 8 kHz-sampled\
    \ narrowband speech at a bit rate of\n   16 kilobits/second, or 16 kbit/s.  The\
    \ wideband version of\n   BroadVoice, called BroadVoice32, or BV32, encodes 16\
    \ kHz-sampled\n   wideband speech at a bit rate of 32 kbit/s.  The BV16 and BV32\
    \ use\n   very similar (but not identical) coding algorithms; they share most\n\
    \   of their algorithm modules.\n   To minimize the delay in real-time two-way\
    \ communications, both the\n   BV16 and BV32 encode speech with a very small frame\
    \ size of 5 ms\n   without using any look ahead.  By using a packet size as small\
    \ as 5\n   ms if necessary, this allows VoIP systems based on BroadVoice to have\n\
    \   a very low end-to-end system delay.\n   BroadVoice also has relatively low\
    \ codec complexity when compared\n   with ITU-T standard speech codecs based on\
    \ CELP (Coded Excited Linear\n   Prediction), such as G.728, G.729, G.723.1, and\
    \ G.722.2.  Full-duplex\n   implementations of the BV16 and BV32 take around 12\
    \ and 17 MIPS,\n   respectively, on general-purpose 16-bit fixed-point digital\
    \ signal\n   processors (DSPs).  The total memory footprints of the BV16 and BV32,\n\
    \   including program size, data tables, and data RAM, are around 12\n   kwords\
    \ each, or 24 kbytes.\n   The PacketCable(TM) project of Cable Television Laboratories,\
    \ Inc.\n   (CableLabs(R)) has chosen the BV16 codec for use in VoIP telephone\n\
    \   services provided by cable operators.  More specifically, the BV16\n   codec\
    \ was selected as one of the mandatory audio codecs in the\n   PacketCable(TM)\
    \ 1.5 Audio/Video Codecs Specification [8] and has been\n   implemented by multiple\
    \ vendors.  The wideband version (BV32) has\n   been developed by Broadcom but\
    \ has not yet appeared in a public\n   specification; since it is technically\
    \ very similar to BV16, its\n   payload format is also defined in this document.\n"
- title: 3.  RTP Payload Format for BroadVoice16 Narrowband Codec
  contents:
  - "3.  RTP Payload Format for BroadVoice16 Narrowband Codec\n   The BroadVoice16\
    \ uses 5 ms frames and a sampling frequency of 8 kHz,\n   so the RTP timestamp\
    \ MUST be in units of 1/8000 of a second.  The RTP\n   timestamp indicates the\
    \ sampling instant of the oldest audio sample\n   represented by the frame(s)\
    \ present in the payload.  The RTP payload\n   for the BroadVoice16 has the format\
    \ shown in the figure below.  No\n   additional header specific to this payload\
    \ format is required.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      RTP Header [1]                           |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n\
    \   |                                                               |\n   |  \
    \           one or more frames of BroadVoice16                |\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   If BroadVoice16 is used for applications with silence compression,\n   the\
    \ first BroadVoice16 packet after a silence period during which\n   packets have\
    \ not been transmitted contiguously SHOULD have the marker\n   bit in the RTP\
    \ data header set to one.  The marker bit in all other\n   packets is zero.  Applications\
    \ without silence suppression MUST set\n   the marker bit to zero.\n   The assignment\
    \ of an RTP payload type for this new packet format is\n   outside the scope of\
    \ this document, and will not be specified here.\n   It is expected that the RTP\
    \ profile for a particular class of\n   applications will assign a payload type\
    \ for this encoding, or if that\n   is not done, then a payload type in the dynamic\
    \ range shall be\n   chosen.\n"
- title: 3.1.  BroadVoice16 Bit Stream Definition
  contents:
  - "3.1.  BroadVoice16 Bit Stream Definition\n   The BroadVoice16 encoder operates\
    \ on speech frames of 5 ms\n   corresponding to 40 samples at a sampling rate\
    \ of 8000 samples per\n   second.  For every 5 ms frame, the encoder encodes the\
    \ 40 consecutive\n   audio samples into 80 bits, or 10 octets.  Thus, the 80-bit\
    \ bit\n   stream produced by the BroadVoice16 for each 5 ms frame is octet-\n\
    \   aligned, and no padding bits are required.  The bit allocation for\n   the\
    \ encoded parameters of the BroadVoice16 codec is listed in the\n   following\
    \ table.\n      Encoded Parameter      Codeword     Number of bits per frame\n\
    \      ------------------------------------------------------------\n      Line\
    \ Spectrum Pairs    L0,L1            7+7=14\n      Pitch Lag              PL \
    \                   7\n      Pitch Gain             PG                    5\n\
    \      Log-Gain               LG                    4\n      Excitation Vectors\
    \     V0,...,V9       5*10=50\n      ------------------------------------------------------------\n\
    \      Total:                                      80 bits\n   The mapping of\
    \ the encoded parameters in an 80-bit BroadVoice16 data\n   frame is defined in\
    \ the following figure.  This figure shows the bit\n   packing in \"network byte\
    \ order\", also known as big-endian order.  The\n   bits of each 32-bit word are\
    \ numbered 0 to 31, with the most\n   significant bit on the left and numbered\
    \ 0.  The octets (bytes) of\n   each word are transmitted with the most significant\
    \ octet first.  The\n   bits of the data field for each encoded parameter are\
    \ numbered in the\n   same order, with the most significant bit on the left.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     L0      |     L1      |      PL     |   PG    |  LG   | V0|\n   |  \
    \           |             |             |         |       |   |\n   |0 1 2 3 4\
    \ 5 6|0 1 2 3 4 5 6|0 1 2 3 4 5 6|0 1 2 3 4|0 1 2 3|0 1|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | V0  |    V1   |    V2   |    V3   |    V4   |    V5   |   V6  |\n   |  \
    \   |         |         |         |         |         |       |\n   |2 3 4|0 1\
    \ 2 3 4|0 1 2 3 4|0 1 2 3 4|0 1 2 3 4|0 1 2 3 4|0 1 2 3|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |V|    V7   |    V8   |   V9    |\n   |6|         |         |         |\n\
    \   |4|0 1 2 3 4|0 1 2 3 4|0 1 2 3 4|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      Figure 1: BroadVoice16 bit packing\n"
- title: 3.2.  Multiple BroadVoice16 Frames in an RTP Packet
  contents:
  - "3.2.  Multiple BroadVoice16 Frames in an RTP Packet\n   More than one BroadVoice16\
    \ frame MAY be included in a single RTP\n   packet by a sender.  Senders have\
    \ the following additional\n   restrictions:\n      o  SHOULD NOT include more\
    \ BroadVoice16 frames in a single RTP\n         packet than will fit in the MTU\
    \ of the RTP.\n      o  MUST NOT split a BroadVoice16 frame between RTP packets.\n\
    \      o  BroadVoice16 frames in an RTP packet MUST be consecutive.\n   Since\
    \ multiple BroadVoice16 frames in an RTP packet MUST be\n   consecutive, and since\
    \ BroadVoice16 has a fixed frame size of 5 ms,\n   recovering the timestamps of\
    \ all frames within a packet is easy.  The\n   oldest frame within an RTP packet\
    \ has the same timestamp as the RTP\n   packet, as mentioned above.  To obtain\
    \ the timestamp of the frame\n   that is N frames later than the oldest frame\
    \ in the packet, one\n   simply adds 5*N ms worth of time units to the timestamp\
    \ of the RTP\n   packet.\n   It is RECOMMENDED that the number of frames contained\
    \ within an RTP\n   packet be consistent with the application.  For example, in\
    \ a\n   telephony application where delay is important, the fewer frames per\n\
    \   packet, the lower the delay; whereas, for a delay insensitive\n   streaming\
    \ or messaging application, many frames per packet would be\n   acceptable.\n\
    \   Information describing the number of frames contained in an RTP\n   packet\
    \ is not transmitted as part of the RTP payload.  The only way\n   to determine\
    \ the number of BroadVoice16 frames is to count the total\n   number of octets\
    \ within the RTP payload, and divide the octet count\n   by 10.\n"
- title: 4.  RTP Payload Format for BroadVoice32 Wideband Codec
  contents:
  - "4.  RTP Payload Format for BroadVoice32 Wideband Codec\n   The BroadVoice32 uses\
    \ 5 ms frames and a sampling frequency of 16 kHz,\n   so the RTP timestamp MUST\
    \ be in units of 1/16000 of a second.  The\n   RTP timestamp indicates the sampling\
    \ instant of the oldest audio\n   sample represented by the frame(s) present in\
    \ the payload.  The RTP\n   payload for the BroadVoice32 has the format shown\
    \ in the figure\n   below.  No additional header specific to this payload format\
    \ is\n   required.\n    0                   1                   2            \
    \       3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \                    RTP Header [1]                           |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n\
    \   |                                                               |\n   |  \
    \           one or more frames of BroadVoice32                |\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   If BroadVoice32 is used for applications with silence compression,\n   the\
    \ first BroadVoice32 packet after a silence period during which\n   packets have\
    \ not been transmitted contiguously SHOULD have the marker\n   bit in the RTP\
    \ data header set to one.  The marker bit in all other\n   packets is zero.  Applications\
    \ without silence suppression MUST set\n   the marker bit to zero.\n   The assignment\
    \ of an RTP payload type for this new packet format is\n   outside the scope of\
    \ this document, and will not be specified here.\n   It is expected that the RTP\
    \ profile for a particular class of\n   applications will assign a payload type\
    \ for this encoding, or if that\n   is not done, then a payload type in the dynamic\
    \ range shall be\n   chosen.\n"
- title: 4.1.  BroadVoice32 Bit Stream Definition
  contents:
  - "4.1.  BroadVoice32 Bit Stream Definition\n   The BroadVoice32 encoder operates\
    \ on speech frames of 5 ms\n   corresponding to 80 samples at a sampling rate\
    \ of 16000 samples per\n   second.  For every 5 ms frame, the encoder encodes\
    \ the 80 consecutive\n   audio samples into 160 bits, or 20 octets.  Thus, the\
    \ 160-bit bit\n   stream produced by the BroadVoice32 for each 5 ms frame is octet-\n\
    \   aligned, and no padding bits are required.  The bit allocation for\n   the\
    \ encoded parameters of the BroadVoice32 codec is listed in the\n   following\
    \ table.\n                                                        Number of bits\n\
    \      Encoded Parameter                  Codeword       per frame\n      ---------------------------------------------------------------\n\
    \      Line Spectrum Pairs                L0,L1,L2       7+5+5=17\n      Pitch\
    \ Lag                          PL                    8\n      Pitch Gain     \
    \                    PG                    5\n      Log-Gains (1st & 2nd subframes)\
    \    LG0,LG1          5+5=10\n      Excitation Vectors (1st subframe)  VA0,...,VA9\
    \     6*10=60\n      Excitation Vectors (2nd subframe)  VB0,...,VB9     6*10=60\n\
    \      ---------------------------------------------------------------\n     \
    \ Total:                                                 160 bits\n   The mapping\
    \ of the encoded parameters in a 160-bit BroadVoice32 data\n   frame is defined\
    \ in the following figure.  This figure shows the bit\n   packing in \"network\
    \ byte order\", also known as big-endian order.  The\n   bits of each 32-bit word\
    \ are numbered 0 to 31, with the most\n   significant bit on the left and numbered\
    \ 0.  The octets (bytes) of\n   each word are transmitted with the most significant\
    \ octet first.  The\n   bits of the data field for each encoded parameter are\
    \ numbered in the\n   same order, with the most significant bit on the left.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     L0      |    L1   |    L2   |       PL      |    PG   |LG0|\n   |  \
    \           |         |         |               |         |   |\n   |0 1 2 3 4\
    \ 5 6|0 1 2 3 4|0 1 2 3 4|0 1 2 3 4 5 6 7|0 1 2 3 4|0 1|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | LG0 |   LG1   |    VA0    |    VA1    |    VA2    |    VA3    |\n   |  \
    \   |         |           |           |           |           |\n   |2 3 4|0 1\
    \ 2 3 4|0 1 2 3 4 5|0 1 2 3 4 5|0 1 2 3 4 5|0 1 2 3 4 5|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    VA4    |    VA5    |    VA6    |    VA7    |    VA8    |VA9|\n   |  \
    \         |           |           |           |           |   |\n   |0 1 2 3 4\
    \ 5|0 1 2 3 4 5|0 1 2 3 4 5|0 1 2 3 4 5|0 1 2 3 4 5|0 1|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | VA9   |    VB0    |    VB1    |    VB2    |    VB3    |  VB4  |\n   |  \
    \     |           |           |           |           |       |\n   |2 3 4 5|0\
    \ 1 2 3 4 5|0 1 2 3 4 5|0 1 2 3 4 5|0 1 2 3 4 5|0 1 2 3|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |VB4|    VB5    |    VB6    |    VB7    |    VB8    |   VB9     |\n   |  \
    \ |           |           |           |           |           |\n   |4 5|0 1 2\
    \ 3 4 5|0 1 2 3 4 5|0 1 2 3 4 5|0 1 2 3 4 5|0 1 2 3 4 5|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                  Figure 2: BroadVoice32 bit packing\n"
- title: 4.2.  Multiple BroadVoice32 Frames in an RTP Packet
  contents:
  - "4.2.  Multiple BroadVoice32 Frames in an RTP Packet\n   More than one BroadVoice32\
    \ frame MAY be included in a single RTP\n   packet by a sender.  Senders have\
    \ the following additional\n   restrictions:\n      o  SHOULD NOT include more\
    \ BroadVoice32 frames in a single RTP\n         packet than will fit in the MTU\
    \ of the RTP.\n      o  MUST NOT split a BroadVoice32 frame between RTP packets.\n\
    \      o  BroadVoice32 frames in an RTP packet MUST be consecutive.\n   Since\
    \ multiple BroadVoice32 frames in an RTP packet MUST be\n   consecutive, and since\
    \ BroadVoice32 has a fixed frame size of 5 ms,\n   recovering the timestamps of\
    \ all frames within a packet is easy.  The\n   oldest frame within an RTP packet\
    \ has the same timestamp as the RTP\n   packet, as mentioned above.  To obtain\
    \ the timestamp of the frame\n   that is N frames later than the oldest frame\
    \ in the packet, one\n   simply adds 5*N ms worth of time units to the timestamp\
    \ of the RTP\n   packet.\n   It is RECOMMENDED that the number of frames contained\
    \ within an RTP\n   packet be consistent with the application.  For example, in\
    \ a\n   telephony application where delay is important, the fewer frames per\n\
    \   packet, the lower the delay; whereas, for a delay insensitive\n   streaming\
    \ or messaging application, many frames per packet would be\n   acceptable.\n\
    \   Information describing the number of frames contained in an RTP\n   packet\
    \ is not transmitted as part of the RTP payload.  The only way\n   to determine\
    \ the number of BroadVoice32 frames is to count the total\n   number of octets\
    \ within the RTP payload, and divide the octet count\n   by 20.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   Two new MIME sub-types, as described in this section,\
    \ have been\n   registered.\n   The MIME names for the BV16 and BV32 codecs have\
    \ been allocated from\n   the IETF tree since these two codecs are expected to\
    \ be widely used\n   for Voice-over-IP applications, especially in Voice over\
    \ Cable\n   applications.\n"
- title: 5.1.  MIME Registration of BroadVoice16 for RTP
  contents:
  - "5.1.  MIME Registration of BroadVoice16 for RTP\n   MIME media type name: audio\n\
    \   MIME media subtype name: BV16\n   Required parameter: none\n   Optional parameters:\n\
    \      ptime:    Defined as usual for RTP audio (see RFC 2327 [4]).\n      maxptime:\
    \ See RFC 3267 [7] for its definition.  The maxptime\n         SHOULD be a multiple\
    \ of the duration of a single codec data\n         frame (5 ms).\n   Encoding\
    \ considerations:\n      This type is defined for transferring BV16-encoded data\
    \ via RTP\n      using the payload format specified in Section 3 of RFC 4298.\n\
    \      Audio data is binary data and must be encoded for non-binary\n      transport;\
    \ the Base64 encoding is suitable for Email.\n   Security considerations:\n  \
    \    See Section 7 \"Security Considerations\" of RFC 4298.\n   Public specification:\n\
    \      The BroadVoice16 codec has been specified in [3].\n   Intended usage:\n\
    \      COMMON.  It is expected that many VoIP applications, especially\n     \
    \ Voice over Cable applications, will use this type.\n   Person & email address\
    \ to contact for further information:\n      Juin-Hwey (Raymond) Chen\n      rchen@broadcom.com\n\
    \   Author/Change controller:\n      Author: Juin-Hwey (Raymond) Chen, rchen@broadcom.com\n\
    \      Change Controller: IETF Audio/Video Transport Working Group\n         delegated\
    \ from the IESG\n"
- title: 5.2.  MIME Registration of BroadVoice32 for RTP
  contents:
  - "5.2.  MIME Registration of BroadVoice32 for RTP\n   MIME media type name: audio\n\
    \   MIME media subtype name: BV32\n   Required parameter: none\n   Optional parameters:\n\
    \      ptime:    Defined as usual for RTP audio (see RFC 2327 [4]).\n      maxptime:\
    \ See RFC 3267 [7] for its definition.  The maxptime\n         SHOULD be a multiple\
    \ of the duration of a single codec data\n         frame (5 ms).\n   Encoding\
    \ considerations:\n      This type is defined for transferring BV32-encoded data\
    \ via RTP\n      using the payload format specified in Section 4 of RFC 4298.\n\
    \      Audio data is binary data and must be encoded for non-binary\n      transport;\
    \ the Base64 encoding is suitable for Email.\n   Security considerations:\n  \
    \    See Section 7 \"Security Considerations\" of RFC 4298.\n   Intended usage:\n\
    \      COMMON.  It is expected that many VoIP applications, especially\n     \
    \ Voice over Cable applications, will use this type.\n   Person & email address\
    \ to contact for further information:\n      Juin-Hwey (Raymond) Chen\n      rchen@broadcom.com\n\
    \   Author/Change controller:\n      Author: Juin-Hwey (Raymond) Chen, rchen@broadcom.com\n\
    \      Change Controller: IETF Audio/Video Transport Working Group\n         delegated\
    \ from the IESG\n"
- title: 6.  Mapping to SDP Parameters
  contents:
  - "6.  Mapping to SDP Parameters\n   The information carried in the MIME media type\
    \ specification has a\n   specific mapping to fields in the Session Description\
    \ Protocol (SDP)\n   [4], which is commonly used to describe RTP sessions.  When\
    \ SDP is\n   used to specify sessions employing the BroadVoice16 or BroadVoice32\n\
    \   codec, the mapping is as follows:\n      -  The MIME type (\"audio\") goes\
    \ in SDP \"m=\" as the media name.\n      -  The MIME subtype (payload format\
    \ name) goes in SDP \"a=rtpmap\"\n         as the encoding name.  The RTP clock\
    \ rate in \"a=rtpmap\" MUST be\n         8000 for BV16 and 16000 for BV32.\n \
    \     -  The parameters \"ptime\" and \"maxptime\" go in the SDP \"a=ptime\"\n\
    \         and \"a=maxptime\" attributes, respectively.\n   An example of the media\
    \ representation in SDP for describing BV16\n   might be:\n      m=audio 49120\
    \ RTP/AVP 97\n      a=rtpmap:97 BV16/8000\n   An example of the media representation\
    \ in SDP for describing BV32\n   might be:\n      m=audio 49122 RTP/AVP 99\n \
    \     a=rtpmap:99 BV32/16000\n"
- title: 6.1.  Offer-Answer Model Considerations
  contents:
  - "6.1.  Offer-Answer Model Considerations\n   No special considerations are needed\
    \ for using the SDP Offer/Answer\n   model [5] with the BV16 and BV32 RTP payload\
    \ formats.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   RTP packets using the payload format defined\
    \ in this specification\n   are subject to the security considerations discussed\
    \ in the RTP\n   specification [1] and any appropriate profile (for example, [6]).\n\
    \   This implies that confidentiality of the media streams is achieved by\n  \
    \ encryption.\n   A potential denial-of-service threat exists for data encoding\
    \ using\n   compression techniques that have non-uniform receiver-end\n   computational\
    \ load.  The attacker can inject pathological datagrams\n   into the stream that\
    \ are complex to decode and cause the receiver to\n   become overloaded.  However,\
    \ the encodings covered in this document\n   do not exhibit any significant non-uniformity.\n"
- title: 8.  Congestion Control
  contents:
  - "8.  Congestion Control\n   The general congestion control considerations for\
    \ transporting RTP\n   data apply to BV16 and BV32 audio over RTP as well (see\
    \ RTP [1]) and\n   any applicable RTP profile like AVP [6].  BV16 and BV32 do\
    \ not have\n   any built-in mechanism for reducing the bandwidth.  Packing more\n\
    \   frames in each RTP payload can reduce the number of packets sent, and\n  \
    \ hence the overhead from IP/UDP/RTP headers, at the expense of\n   increased\
    \ delay and reduced error robustness against packet losses.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors would like to thank Magnus Westerlund, Colin\
    \ Perkins,\n   Allison Mankin, and Jean-Francois Mule for their review of this\n\
    \   document.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1] Schulzrinne, H.,  Casner, S., Frederick,\
    \ R., and V. Jacobson,\n       \"RTP: A Transport Protocol for Real-Time Applications\"\
    , STD 64,\n       RFC 3550, July 2003.\n   [2] Bradner, S., \"Key words for use\
    \ in RFCs to Indicate Requirement\n       Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [3] Cable Television Laboratories, Inc., BroadVoice(TM)16 Speech\n       Codec\
    \ Specification, Revision 1.2, October 30, 2003.\n   [4] Handley, M. and V. Jacobson,\
    \ \"SDP: Session Description Protocol\",\n       RFC 2327, April 1998.\n   [5]\
    \ Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model with\n       Session\
    \ Description Protocol (SDP)\", RFC 3264, June 2002.\n   [6] Schulzrinne, H. and\
    \ S. Casner, \"RTP Profile for Audio and Video\n       Conferences with Minimal\
    \ Control\", STD 65, RFC 3551, July 2003.\n   [7] Sjoberg, J., Westerlund, M.,\
    \ Lakaniemi, A., and Q. Xie, \"Real-\n       Time Transport Protocol (RTP) Payload\
    \ Format and File Storage\n       Format for the Adaptive Multi-Rate (AMR) and\
    \ Adaptive Multi-Rate\n       Wideband (AMR-WB) Audio Codecs\", RFC 3267, June\
    \ 2002.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [8] Cable Television Laboratories, Inc., PacketCable(TM)\
    \ 1.5\n       Audio/Video Codecs Specification, PKT-SP-CODEC1.5-I01-050128,\n\
    \       January 28, 2005.\n       http://www.cablelabs.com/specifications/archives/\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Juin-Hwey (Raymond) Chen\n   Broadcom Corporation\n  \
    \ Room A3020\n   16215 Alton Parkway\n   Irvine, CA 92618\n   USA\n   Phone: +1\
    \ 949 926 6288\n   EMail: rchen@broadcom.com\n   Winnie Lee\n   Broadcom Corporation\n\
    \   Room A2012E\n   200-13711 International Place\n   Richmond, British Columbia\
    \ V6V 2Z8\n   Canada\n   Phone: +1 604 233 8605\n   EMail: wlee@broadcom.com\n\
    \   Jes Thyssen\n   Broadcom Corporation\n   Room A3018\n   16215 Alton Parkway\n\
    \   Irvine, CA 92618\n   USA\n   Phone: +1 949 926 5768\n   EMail: jthyssen@broadcom.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
