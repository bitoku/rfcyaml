- title: __initial_text__
  contents:
  - "                         SMTP Service Extension\n                           for\
    \ Authentication\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document defines an SMTP service extension [ESMTP] whereby\
    \ an\n   SMTP client may indicate an authentication mechanism to the server,\n\
    \   perform an authentication protocol exchange, and optionally negotiate\n  \
    \ a security layer for subsequent protocol interactions.  This\n   extension is\
    \ a profile of the Simple Authentication and Security\n   Layer [SASL].\n"
- title: 2. Conventions Used in this Document
  contents:
  - "2. Conventions Used in this Document\n   In examples, \"C:\" and \"S:\" indicate\
    \ lines sent by the client and\n   server respectively.\n   The key words \"MUST\"\
    , \"MUST NOT\", \"SHOULD\", \"SHOULD NOT\", and \"MAY\"\n   in this document are\
    \ to be interpreted as defined in \"Key words for\n   use in RFCs to Indicate\
    \ Requirement Levels\" [KEYWORDS].\n"
- title: 3. The Authentication service extension
  contents:
  - "3. The Authentication service extension\n   (1) the name of the SMTP service\
    \ extension is \"Authentication\"\n   (2) the EHLO keyword value associated with\
    \ this extension is \"AUTH\"\n   (3) The AUTH EHLO keyword contains as a parameter\
    \ a space separated\n       list of the names of supported SASL mechanisms.\n\
    \   (4) a new SMTP verb \"AUTH\" is defined\n   (5) an optional parameter using\
    \ the keyword \"AUTH\" is added to the\n       MAIL FROM command, and extends\
    \ the maximum line length of the\n       MAIL FROM command by 500 characters.\n\
    \   (6) this extension is appropriate for the submission protocol\n       [SUBMIT].\n"
- title: 4. The AUTH command
  contents:
  - "4. The AUTH command\n   AUTH mechanism [initial-response]\n     Arguments:\n\
    \         a string identifying a SASL authentication mechanism.\n         an optional\
    \ base64-encoded response\n     Restrictions:\n         After an AUTH command\
    \ has successfully completed, no more AUTH\n         commands may be issued in\
    \ the same session.  After a successful\n         AUTH command completes, a server\
    \ MUST reject any further AUTH\n         commands with a 503 reply.\n        \
    \ The AUTH command is not permitted during a mail transaction.\n     Discussion:\n\
    \         The AUTH command indicates an authentication mechanism to the\n    \
    \     server.  If the server supports the requested authentication\n         mechanism,\
    \ it performs an authentication protocol exchange to\n         authenticate and\
    \ identify the user.  Optionally, it also\n         negotiates a security layer\
    \ for subsequent protocol\n         interactions.  If the requested authentication\
    \ mechanism is not\n         supported, the server rejects the AUTH command with\
    \ a 504\n         reply.\n         The authentication protocol exchange consists\
    \ of a series of\n         server challenges and client answers that are specific\
    \ to the\n         authentication mechanism.  A server challenge, otherwise known\n\
    \         as a ready response, is a 334 reply with the text part\n         containing\
    \ a BASE64 encoded string.  The client answer consists\n         of a line containing\
    \ a BASE64 encoded string.  If the client\n         wishes to cancel an authentication\
    \ exchange, it issues a line\n         with a single \"*\".  If the server receives\
    \ such an answer, it\n         MUST reject the AUTH command by sending a 501 reply.\n\
    \         The optional initial-response argument to the AUTH command is\n    \
    \     used to save a round trip when using authentication mechanisms\n       \
    \  that are defined to send no data in the initial challenge.\n         When the\
    \ initial-response argument is used with such a\n         mechanism, the initial\
    \ empty challenge is not sent to the\n         client and the server uses the\
    \ data in the initial-response\n         argument as if it were sent in response\
    \ to the empty challenge.\n         Unlike a zero-length client answer to a 334\
    \ reply, a zero-\n         length initial response is sent as a single equals\
    \ sign (\"=\").\n         If the client uses an initial-response argument to the\
    \ AUTH\n         command with a mechanism that sends data in the initial\n   \
    \      challenge, the server rejects the AUTH command with a 535\n         reply.\n\
    \         If the server cannot BASE64 decode the argument, it rejects the\n  \
    \       AUTH command with a 501 reply.  If the server rejects the\n         authentication\
    \ data, it SHOULD reject the AUTH command with a\n         535 reply unless a\
    \ more specific error code, such as one listed\n         in section 6, is appropriate.\
    \  Should the client successfully\n         complete the authentication exchange,\
    \ the SMTP server issues a\n         235 reply.\n         The service name specified\
    \ by this protocol's profile of SASL\n         is \"smtp\".\n         If a security\
    \ layer is negotiated through the SASL\n         authentication exchange, it takes\
    \ effect immediately following\n         the CRLF that concludes the authentication\
    \ exchange for the\n         client, and the CRLF of the success reply for the\
    \ server.  Upon\n         a security layer's taking effect, the SMTP protocol\
    \ is reset to\n         the initial state (the state in SMTP after a server issues\
    \ a\n         220 service ready greeting).  The server MUST discard any\n    \
    \     knowledge obtained from the client, such as the argument to the\n      \
    \   EHLO command, which was not obtained from the SASL negotiation\n         itself.\
    \  The client MUST discard any knowledge obtained from\n         the server, such\
    \ as the list of SMTP service extensions, which\n         was not obtained from\
    \ the SASL negotiation itself (with the\n         exception that a client MAY\
    \ compare the list of advertised SASL\n         mechanisms before and after authentication\
    \ in order to detect\n         an active down-negotiation attack).  The client\
    \ SHOULD send an\n         EHLO command as the first command after a successful\
    \ SASL\n         negotiation which results in the enabling of a security layer.\n\
    \         The server is not required to support any particular\n         authentication\
    \ mechanism, nor are authentication mechanisms\n         required to support any\
    \ security layers.  If an AUTH command\n         fails, the client may try another\
    \ authentication mechanism by\n         issuing another AUTH command.\n      \
    \   If an AUTH command fails, the server MUST behave the same as if\n        \
    \ the client had not issued the AUTH command.\n         The BASE64 string may\
    \ in general be arbitrarily long.  Clients\n         and servers MUST be able\
    \ to support challenges and responses\n         that are as long as are generated\
    \ by the authentication\n         mechanisms they support, independent of any\
    \ line length\n         limitations the client or server may have in other parts\
    \ of its\n         protocol implementation.\n     Examples:\n         S: 220 smtp.example.com\
    \ ESMTP server ready\n         C: EHLO jgm.example.com\n         S: 250-smtp.example.com\n\
    \         S: 250 AUTH CRAM-MD5 DIGEST-MD5\n         C: AUTH FOOBAR\n         S:\
    \ 504 Unrecognized authentication type.\n         C: AUTH CRAM-MD5\n         S:\
    \ 334\n         PENCeUxFREJoU0NnbmhNWitOMjNGNndAZWx3b29kLmlubm9zb2Z0LmNvbT4=\n\
    \         C: ZnJlZCA5ZTk1YWVlMDljNDBhZjJiODRhMGMyYjNiYmFlNzg2ZQ==\n         S:\
    \ 235 Authentication successful.\n"
- title: 5. The AUTH parameter to the MAIL FROM command
  contents:
  - "5. The AUTH parameter to the MAIL FROM command\n   AUTH=addr-spec\n   Arguments:\n\
    \       An addr-spec containing the identity which submitted the message\n   \
    \    to the delivery system, or the two character sequence \"<>\"\n       indicating\
    \ such an identity is unknown or insufficiently\n       authenticated.  To comply\
    \ with the restrictions imposed on ESMTP\n       parameters, the addr-spec is\
    \ encoded inside an xtext.  The syntax\n       of an xtext is described in section\
    \ 5 of [ESMTP-DSN].\n   Discussion:\n       The optional AUTH parameter to the\
    \ MAIL FROM command allows\n       cooperating agents in a trusted environment\
    \ to communicate the\n       authentication of individual messages.\n       If\
    \ the server trusts the authenticated identity of the client to\n       assert\
    \ that the message was originally submitted by the supplied\n       addr-spec,\
    \ then the server SHOULD supply the same addr-spec in an\n       AUTH parameter\
    \ when relaying the message to any server which\n       supports the AUTH extension.\n\
    \       A MAIL FROM parameter of AUTH=<> indicates that the original\n       submitter\
    \ of the message is not known.  The server MUST NOT treat\n       the message\
    \ as having been originally submitted by the client.\n       If the AUTH parameter\
    \ to the MAIL FROM is not supplied, the\n       client has authenticated, and\
    \ the server believes the message is\n       an original submission by the client,\
    \ the server MAY supply the\n       client's identity in the addr-spec in an AUTH\
    \ parameter when\n       relaying the message to any server which supports the\
    \ AUTH\n       extension.\n       If the server does not sufficiently trust the\
    \ authenticated\n       identity of the client, or if the client is not authenticated,\n\
    \       then the server MUST behave as if the AUTH=<> parameter was\n       supplied.\
    \  The server MAY, however, write the value of the AUTH\n       parameter to a\
    \ log file.\n       If an AUTH=<> parameter was supplied, either explicitly or\
    \ due to\n       the requirement in the previous paragraph, then the server MUST\n\
    \       supply the AUTH=<> parameter when relaying the message to any\n      \
    \ server which it has authenticated to using the AUTH extension.\n       A server\
    \ MAY treat expansion of a mailing list as a new\n       submission, setting the\
    \ AUTH parameter to the mailing list\n       address or mailing list administration\
    \ address when relaying the\n       message to list subscribers.\n       It is\
    \ conforming for an implementation to be hard-coded to treat\n       all clients\
    \ as being insufficiently trusted.  In that case, the\n       implementation does\
    \ nothing more than parse and discard\n       syntactically valid AUTH parameters\
    \ to the MAIL FROM command and\n       supply AUTH=<> parameters to any servers\
    \ to which it\n       authenticates using the AUTH extension.\n   Examples:\n\
    \       C: MAIL FROM:<e=mc2@example.com> AUTH=e+3Dmc2@example.com\n       S: 250\
    \ OK\n"
- title: 6. Error Codes
  contents:
  - "6. Error Codes\n   The following error codes may be used to indicate various\
    \ conditions\n   as described.\n   432 A password transition is needed\n   This\
    \ response to the AUTH command indicates that the user needs to\n   transition\
    \ to the selected authentication mechanism.  This typically\n   done by authenticating\
    \ once using the PLAIN authentication mechanism.\n   534 Authentication mechanism\
    \ is too weak\n   This response to the AUTH command indicates that the selected\n\
    \   authentication mechanism is weaker than server policy permits for\n   that\
    \ user.\n   538 Encryption required for requested authentication mechanism\n \
    \  This response to the AUTH command indicates that the selected\n   authentication\
    \ mechanism may only be used when the underlying SMTP\n   connection is encrypted.\n\
    \   454 Temporary authentication failure\n   This response to the AUTH command\
    \ indicates that the authentication\n   failed due to a temporary server failure.\n\
    \   530 Authentication required\n   This response may be returned by any command\
    \ other than AUTH, EHLO,\n   HELO, NOOP, RSET, or QUIT.  It indicates that server\
    \ policy requires\n   authentication in order to perform the requested action.\n"
- title: 7. Formal Syntax
  contents:
  - "7. Formal Syntax\n   The following syntax specification uses the augmented Backus-Naur\n\
    \   Form (BNF) notation as specified in [ABNF].\n   Except as noted otherwise,\
    \ all alphabetic characters are case-\n   insensitive.  The use of upper or lower\
    \ case characters to define\n   token strings is for editorial clarity only. \
    \ Implementations MUST\n   accept these strings in a case-insensitive fashion.\n\
    \   UPALPHA         = %x41-5A            ;; Uppercase: A-Z\n   LOALPHA       \
    \  = %x61-7A            ;; Lowercase: a-z\n   ALPHA           = UPALPHA / LOALPHA\
    \  ;; case insensitive\n   DIGIT           = %x30-39            ;; Digits 0-9\n\
    \   HEXDIGIT        = %x41-46 / DIGIT    ;; hexidecimal digit (uppercase)\n  \
    \ hexchar         = \"+\" HEXDIGIT HEXDIGIT\n   xchar           = %x21-2A / %x2C-3C\
    \ / %x3E-7E\n                     ;; US-ASCII except for \"+\", \"=\", SPACE and\
    \ CTL\n   xtext           = *(xchar / hexchar)\n   AUTH_CHAR       = ALPHA / DIGIT\
    \ / \"-\" / \"_\"\n   auth_type       = 1*20AUTH_CHAR\n   auth_command    = \"\
    AUTH\" SPACE auth_type [SPACE (base64 / \"=\")]\n                     *(CRLF [base64])\
    \ CRLF\n   auth_param      = \"AUTH=\" xtext\n                       ;; The decoded\
    \ form of the xtext MUST be either\n                       ;; an addr-spec or\
    \ the two characters \"<>\"\n   base64          = base64_terminal /\n        \
    \             ( 1*(4base64_CHAR) [base64_terminal] )\n   base64_char     = UPALPHA\
    \ / LOALPHA / DIGIT / \"+\" / \"/\"\n                     ;; Case-sensitive\n\
    \   base64_terminal = (2base64_char \"==\") / (3base64_char \"=\")\n   continue_req\
    \    = \"334\" SPACE [base64] CRLF\n   CR              = %x0C           ;; ASCII\
    \ CR, carriage return\n   CRLF            = CR LF\n   CTL             = %x00-1F\
    \ / %x7F ;; any ASCII control character and DEL\n   LF              = %x0A   \
    \        ;; ASCII LF, line feed\n   SPACE           = %x20           ;; ASCII\
    \ SP, space\n"
- title: 8. References
  contents:
  - "8. References\n   [ABNF]      Crocker, D. and P. Overell, \"Augmented BNF for\
    \ Syntax\n               Specifications: ABNF\", RFC 2234, November 1997.\n  \
    \ [CRAM-MD5]  Klensin, J., Catoe, R. and P. Krumviede, \"IMAP/POP\n          \
    \     AUTHorize Extension for Simple Challenge/Response\", RFC\n             \
    \  2195, September 1997.\n   [ESMTP]     Klensin, J., Freed, N., Rose, M., Stefferud,\
    \ E. and D.\n               Crocker, \"SMTP Service Extensions\", RFC 1869, November\n\
    \               1995.\n   [ESMTP-DSN] Moore, K, \"SMTP Service Extension for Delivery\
    \ Status\n               Notifications\", RFC 1891, January 1996.\n   [KEYWORDS]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n               Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [SASL]      Myers, J., \"Simple\
    \ Authentication and Security Layer\n               (SASL)\", RFC 2222, October\
    \ 1997.\n   [SUBMIT]    Gellens, R. and J. Klensin, \"Message Submission\", RFC\n\
    \               2476, December 1998.\n   [RFC821]    Postel, J., \"Simple Mail\
    \ Transfer Protocol\", STD 10, RFC\n               821, August 1982.\n   [RFC822]\
    \    Crocker, D., \"Standard for the Format of ARPA Internet\n               Text\
    \ Messages\", STD 11, RFC 822, August 1982.\n"
- title: 9. Security Considerations
  contents:
  - "9. Security Considerations\n   Security issues are discussed throughout this\
    \ memo.\n   If a client uses this extension to get an encrypted tunnel through\
    \ an\n   insecure network to a cooperating server, it needs to be configured\n\
    \   to never send mail to that server when the connection is not mutually\n  \
    \ authenticated and encrypted.  Otherwise, an attacker could steal the\n   client's\
    \ mail by hijacking the SMTP connection and either pretending\n   the server does\
    \ not support the Authentication extension or causing\n   all AUTH commands to\
    \ fail.\n   Before the SASL negotiation has begun, any protocol interactions are\n\
    \   performed in the clear and may be modified by an active attacker.\n   For\
    \ this reason, clients and servers MUST discard any knowledge\n   obtained prior\
    \ to the start of the SASL negotiation upon completion\n   of a SASL negotiation\
    \ which results in a security layer.\n   This mechanism does not protect the TCP\
    \ port, so an active attacker\n   may redirect a relay connection attempt to the\
    \ submission port\n   [SUBMIT].  The AUTH=<> parameter prevents such an attack\
    \ from causing\n   an relayed message without an envelope authentication to pick\
    \ up the\n   authentication of the relay client.\n   A message submission client\
    \ may require the user to authenticate\n   whenever a suitable SASL mechanism\
    \ is advertised.  Therefore, it may\n   not be desirable for a submission server\
    \ [SUBMIT] to advertise a SASL\n   mechanism when use of that mechanism grants\
    \ the client no benefits\n   over anonymous submission.\n   This extension is\
    \ not intended to replace or be used instead of end-\n   to-end message signature\
    \ and encryption systems such as S/MIME or\n   PGP.  This extension addresses\
    \ a different problem than end-to-end\n   systems; it has the following key differences:\n\
    \      (1) it is generally useful only within a trusted enclave\n      (2) it\
    \ protects the entire envelope of a message, not just the\n          message's\
    \ body.\n      (3) it authenticates the message submission, not authorship of\
    \ the\n          message content\n      (4) it can give the sender some assurance\
    \ the message was\n          delivered to the next hop in the case where the sender\n\
    \          mutually authenticates with the next hop and negotiates an\n      \
    \    appropriate security layer.\n   Additional security considerations are mentioned\
    \ in the SASL\n   specification [SASL].\n"
- title: 10. Author's Address
  contents:
  - "10. Author's Address\n   John Gardiner Myers\n   Netscape Communications\n  \
    \ 501 East Middlefield Road\n   Mail Stop MV-029\n   Mountain View, CA 94043\n\
    \   EMail: jgmyers@netscape.com\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
