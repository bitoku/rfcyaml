- title: __initial_text__
  contents:
  - "Independent Submission                                           S. Levy\n  \
    \                    Diversion Indication in SIP\nAbstract\n   This RFC, which\
    \ contains the text of an Internet Draft that was\n   submitted originally to\
    \ the SIP Working Group, is being published now\n   for the historical record\
    \ and to provide a reference for later\n   Informational RFCs.  The original Abstract\
    \ follows.\n   This document proposes an extension to the Session Initiation\n\
    \   Protocol (SIP).  This extension provides the ability for the called\n   SIP\
    \ user agent to identify from whom the call was diverted and why\n   the call\
    \ was diverted.  The extension defines a general header,\n   Diversion, which\
    \ conveys the diversion information from other SIP\n   user agents and proxies\
    \ to the called user agent.\n   This extension allows enhanced support for various\
    \ features,\n   including Unified Messaging, Third-Party Voicemail, and Automatic\n\
    \   Call Distribution (ACD).  SIP user agents and SIP proxies that\n   receive\
    \ diversion information may use this as supplemental\n   information for feature\
    \ invocation decisions.\nStatus of This Memo\n   This document is not an Internet\
    \ Standards Track specification; it is\n   published for the historical record.\n\
    \   This document defines a Historic Document for the Internet community.\n  \
    \ This is a contribution to the RFC Series, independently of any other\n   RFC\
    \ stream.  The RFC Editor has chosen to publish this document at\n   its discretion\
    \ and makes no statement about its value for\n   implementation or deployment.\
    \  Documents approved for publication by\n   the RFC Editor are not a candidate\
    \ for any level of Internet\n   Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5806.\n\
    IESG Note\n   This document contains an early proposal to the IETF SIP Working\n\
    \   Group that was not chosen for standardization.  Discussions on the\n   topic\
    \ resulted in the informational RFC 3325, \"Private Extensions to\n   the Session\
    \ Initiation Protocol (SIP) for Asserted Identity within\n   Trusted Networks\"\
    , and the standard solution that was chosen can be\n   found in RFC 4244, \"An\
    \ Extension to the Session Initiation Protocol\n   (SIP) for Request History Information\"\
    .\nCopyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\nTable of Contents\n\
    \   1. Introduction ....................................................4\n  \
    \ 2. Terminology .....................................................4\n    \
    \  2.1. Requirements Language ......................................4\n      2.2.\
    \ Definitions ................................................4\n      2.3. Abbreviations\
    \ ..............................................5\n   3. Overview ........................................................5\n\
    \      3.1. When Is the Diversion Header Used? .........................6\n  \
    \ 4. Extension Syntax ................................................6\n   5.\
    \ Detailed Semantics ..............................................7\n      5.1.\
    \ UAS Behavior ...............................................7\n      5.2. UAC\
    \ Behavior ...............................................7\n      5.3. Redirect\
    \ Server Behavior ...................................7\n      5.4. Proxy Server\
    \ Behavior ......................................7\n   6. Examples Using Diversion\
    \ Header .................................8\n      6.1. Call Forward Unconditional\
    \ .................................8\n      6.2. Call Forward on Busy ......................................13\n\
    \      6.3. Call Forward on No-Answer .................................17\n  \
    \    6.4. Call Forward on Unavailable ...............................21\n    \
    \  6.5. Multiple Diversions .......................................24\n   7. Security\
    \ Considerations ........................................27\n   8. Further Examples\
    \ ...............................................27\n      8.1. Night Service/Automatic\
    \ Call Distribution (ACD)\n           Using Diversion Header ....................................27\n\
    \      8.2. Voicemail Service Using Diversion Header ..................36\n  \
    \    8.3. Questions and Answers on Alternative Approaches ...........41\n 9. Mapping\
    \ ISUP/ISDN Redirection Information to SIP\n      Diversion Header ...............................................42\n\
    \      9.1. Mapping ISUP/ISDN Diversion Reason Codes ..................42\n  \
    \    9.2. Mapping ISUP Redirection Information to SIP\n           Diversion Header\
    \ ..........................................43\n      9.3. Mapping ISDN Redirection\
    \ Information to SIP\n           Diversion Header ..........................................47\n\
    \      9.4. Information Loss in SIP to ISUP/ISDN Translation ..........52\n  \
    \ 10. Contributors ..................................................53\n   11.\
    \ Acknowledgements ..............................................53\n   12. Normative\
    \ References ..........................................53\n1.  Introduction\n\
    \   This RFC, which contains the text of an Internet Draft that was\n   submitted\
    \ originally to the SIP Working Group, is being published now\n   for the historical\
    \ record and to provide a reference for later\n   Informational RFCs.\n   In the\
    \ legacy telephony network, redirection information is passed\n   through the\
    \ network in ISDN/ISUP (ISDN User Part) signaling messages.\n   This information\
    \ is used by various service providers and business\n   applications to support\
    \ enhanced features for the end user.\n   An analogous mechanism of providing\
    \ redirection information would\n   enable such enhanced features for SIP users.\n\
    \   The Diversion header allows implementation of feature logic based on\n   from\
    \ whom the call was diverted.\n2.  Terminology\n2.1.  Requirements Language\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [RFC2119].\n2.2.  Definitions\n\
    \   diversion:\n      A change to the ultimate destination endpoint of a request.\
    \  A\n      change in the Request-URI of a request that was not caused by a\n\
    \      routing decision.  This is also sometimes called a deflection or\n    \
    \  redirection.\n      A diversion can occur when the \"user\" portion of the\
    \ Request-URI\n      is changed for a reason other than expansion or translation.\n\
    \      A diversion can occur when only the \"host\" portion of the Request-\n\
    \      URI has changed if the change was due to a non-routing decision.\n   divertor:\n\
    \      The entity that diverted the call.\n   recursing:\n      A SIP proxy or\
    \ user agent that handles a received or internally\n      generated 3xx response\
    \ by forking new request(s) itself.\n   non-recursing:\n      A SIP proxy or user\
    \ agent that handles a received or internally\n      generated 3xx response by\
    \ forwarding it upstream.\n2.3.  Abbreviations\n   CFUNC: Call Forward Unconditional\n\
    \   CFTOD: Call Forward Time-of-Day\n   CFB:   Call Forward on Busy\n   CFNA:\
    \  Call Forward on No Answer\n   CFUNV: Call Forward Unavailable\n   ACD:   Automatic\
    \ Call Distribution\n3.  Overview\n   In order to implement certain third-party\
    \ features such as Third-\n   Party Voicemail and Automatic Call Distribution\
    \ (ACD) applications,\n   diversion information needs to be given to the called\
    \ third party so\n   that he may respond to the caller intelligently.  In these\n\
    \   situations, the party receiving a diverted call needs answers for two\n  \
    \ questions:\n   Question 1: From whom was the request diverted?\n   Question\
    \ 2: Why was the request diverted?\n   This document proposes usage of the Diversion\
    \ header to answer these\n   questions for the party receiving the diverted call.\n\
    \   Insertion of the previous Request-URI (before the diversion occurred)\n  \
    \ into the Diversion header answers question 1.\n   Insertion of the \"reason\"\
    \ tag into the Diversion header (by the\n   divertor) answers question 2.\n3.1.\
    \  When Is the Diversion Header Used?\n   The Diversion header SHOULD be added\
    \ when a SIP proxy server, SIP\n   redirect server, or SIP user agent changes\
    \ the ultimate endpoint that\n   will receive the call.\n   Diversion information\
    \ SHOULD NOT be added for normal call routing\n   changes to the Request-URI.\
    \  Thus, the Diversion header is not added\n   when features such as speed dial\
    \ change the Request-URI.\n   When a diversion occurs, a Diversion header SHOULD\
    \ be added to the\n   forwarded request or forwarded 3xx response.  The Diversion\
    \ header\n   MUST contain the Request-URI of the request prior to the diversion.\n\
    \   The Diversion header SHOULD contain a reason that the diversion\n   occurred.\n\
    \   Existing Diversion headers received in an incoming request MUST NOT\n   be\
    \ removed or changed in forwarded requests.\n   Existing Diversion headers received\
    \ in an incoming response MUST NOT\n   be removed or changed in the forwarded\
    \ response.\n   A Diversion header is added when features such as call forwarding\
    \ or\n   call deflection change the Request-URI.\n4.  Extension Syntax\n   The\
    \ syntax of the Diversion header is:\n   Diversion = \"Diversion\" \":\" 1# (name-addr\
    \ *( \";\" diversion_params ))\n   diversion-params = diversion-reason | diversion-counter\
    \ |\n                      diversion-limit | diversion-privacy |\n           \
    \           diversion-screen | diversion-extension\n   diversion-reason = \"reason\"\
    \ \"=\"\n                   ( \"unknown\" | \"user-busy\" | \"no-answer\" |\n\
    \                     \"unavailable\" | \"unconditional\" |\n                \
    \     \"time-of-day\" | \"do-not-disturb\" |\n                     \"deflection\"\
    \ | \"follow-me\" |\n                     \"out-of-service\" | \"away\" |\n  \
    \                   token | quoted-string )\n   diversion-counter = \"counter\"\
    \ \"=\" 1*2DIGIT\n   diversion-limit = \"limit\" \"=\" 1*2DIGIT\n   diversion-privacy\
    \ = \"privacy\" \"=\" ( \"full\" | \"name\" |\n                       \"uri\"\
    \ | \"off\" | token | quoted-string )\n   diversion-screen = \"screen\" \"=\"\
    \ ( \"yes\" | \"no\" | token |\n                                        quoted-string\
    \ )\n   diversion-extension = token [\"=\" (token | quoted-string)]\n   The following\
    \ is an extension of tables 4 and 5 in [RFC3261] for the\n   Diversion header:\n\
    \                       where  enc.  e-e ACK BYE CAN INV OPT REG\n   _____________________________________________________________\n\
    \   Diversion              R           h   -   -   -   o   -   -\n   Diversion\
    \             3xx          h   -   -   -   o   -   -\n5.  Detailed Semantics\n\
    5.1.  UAS Behavior\n   A SIP User Agent Service (UAS) that receives a request\
    \ and returns a\n   3xx SHOULD add a Diversion header containing the previous\
    \ Request-URI\n   and the reason for the diversion.\n5.2.  UAC Behavior\n   A\
    \ SIP UAC that receives a 3xx containing a Diversion header SHOULD\n   copy the\
    \ Diversion header into each downstream forked request that\n   resulted from\
    \ the 3xx.\n5.3.  Redirect Server Behavior\n   A SIP redirect server that receives\
    \ a request and returns a 3xx\n   containing a Contact that diverts the request\
    \ to a different endpoint\n   SHOULD add a Diversion header containing the Request-URI\
    \ from the\n   incoming request and the reason for the diversion.\n5.4.  Proxy\
    \ Server Behavior\n   A non-recursing SIP proxy that receives a 3xx containing\
    \ a Diversion\n   header SHOULD forward the 3xx containing the Diversion header\n\
    \   upstream unchanged.\n   A SIP proxy that receives a request and invokes a\
    \ feature that\n   changes the Request-URI of the forwarded request in order to\
    \ divert\n   the request to a different endpoint SHOULD add a Diversion header\n\
    \   containing the Request-URI from the incoming request and the reason\n   for\
    \ the diversion.\n   A SIP proxy that receives a request and returns a 3xx containing\
    \ a\n   Contact that diverts the request to a different endpoint SHOULD add a\n\
    \   Diversion header containing the Request-URI from the incoming request\n  \
    \ and the reason for the diversion.\n5.4.1.  Proxy Logic for Diversion Header\n\
    \      if (pdu.is_request()) {\n          if (request-URI is changed due to a\
    \ called feature) {\n              if (proxy.is_recursing()) {\n             \
    \     Add the Diversion header (indicating the reason\n                    that\
    \ the call has been diverted) to\n                    the downstream forwarded\
    \ request(s).\n              } else {\n                  Add the Diversion header\
    \ (indicating the reason\n                    that the call has been diverted)\
    \ to\n                    the upstream forwarded 3xx response.\n             \
    \ }\n          }\n      } else if (pdu.is_response()) {\n          if (pdu.is_3xx())\
    \ {\n              if (proxy.is_recursing()) {\n                Copy Diversion\
    \ header into forwarded INVITE(s).\n              } else {\n                Forward\
    \ response upstream.\n              }\n          }\n      }\n6.  Examples Using\
    \ Diversion Header\n   There are several implementations of call forwarding features\
    \ that\n   can be implemented by either recursing or non-recursing SIP proxies\n\
    \   or SIP user agents.\n   A SIP proxy or user agent that generates or forwards\
    \ 3xxs upstream is\n   non-recursing.  A SIP proxy or user agent that handles\
    \ received (or\n   internally generated) 3xxs itself is recursing.\n   The following\
    \ examples illustrate usage of the Diversion header for\n   some of the variants\
    \ of recursing and non-recursing proxies and user\n   agents.\n6.1.  Call Forward\
    \ Unconditional\n   Usage of the Diversion header is shown below for several variant\n\
    \   implementations of Call Forward Unconditional.\n6.1.1.  Network Call Forward\
    \ Unconditional (P2 Recursing)\n   In this message flow, the call would normally\
    \ be routed to Bob@B.\n   However, Proxy 2 (P2) recursively implements Call Forward\n\
    \   Unconditional (CFUNC) to Carol@C.\n                     +------------------------+\n\
    \                     | Bob@P2: CFUNC->Carol@C |\n                     +------+-----------------+\n\
    \                             \\\n                              \\\nA        \
    \     P1              P2            B          C\n                           \
    \ recursing\n|              |              |             |          |\n|--INV\
    \ Bob@P1->|              |             |          |\n|              |        \
    \      |             |          |\n|              |--INV Bob@P2->|           \
    \  |          |\n|              |              |             |          |\n| \
    \             |              |--INVITE Carol@C------->|\n|              |    \
    \          |  Diversion: Bob@P2     |\n|              |              |    ;reason=unconditional\n\
    |              |              |             |          |\n|              |   \
    \           |<-200-------------------|\n|              |              |      \
    \       |          |\n|              |<-200---------|             |          |\n\
    |              |              |             |          |\n|<-200---------|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.1.2.  Network Call Forward Unconditional\
    \ (P1 Non-Recursing, P2 Non-\n        Recursing)\n   In this message flow, Proxy\
    \ 2 (P2) non-recursively implements Call\n   Forward Unconditional (CFUNC) to\
    \ Carol@C.  Proxy 1 (P1) is non-\n   recursing.\n                     +------------------------+\n\
    \                     | Bob@P2: CFUNC->Carol@C |\n                     +------+-----------------+\n\
    \                             \\\n                              \\\nA        \
    \      P1             P2            B          C\n            non-recursing  non-recursing\n\
    |              |              |             |          |\n|--INV Bob@P1->|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|              |--INV Bob@P2->|             |          |\n\
    |              |              |             |          |\n|              |<-302---------|\
    \             |          |\n|              |  Contact: Carol@C          |    \
    \      |\n|              |  Diversion: Bob@P2         |          |\n|        \
    \      |    ;reason=unconditional   |          |\n|              |           \
    \   |             |          |\n|              |--ACK-------->|             |\
    \          |\n|              |              |             |          |\n|<-302---------|\
    \              |             |          |\n|  Contact: Carol@C           |   \
    \          |          |\n|  Diversion: Bob@P2          |             |       \
    \   |\n|    ;reason=unconditional    |             |          |\n|           \
    \   |              |             |          |\n|--ACK-------->|              |\
    \             |          |\n|              |              |             |    \
    \      |\n|--INVITE Carol@C------------------------------------->|\n|  Diversion:\
    \ Bob@P2          |             |          |\n|    ;reason=unconditional    |\
    \             |          |\n|              |              |             |    \
    \      |\n|<-200-------------------------------------------------|\n|        \
    \      |              |             |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.1.3.  Network Call Forward Unconditional\
    \ (P1 Recursing, P2 Non-\n        Recursing)\n   In this message flow, Proxy 2\
    \ (P2) non-recursively implements Call\n   Forward Unconditional (CFUNC) to Carol@C.\
    \  Proxy 1 (P1) is recursing.\n                     +------------------------+\n\
    \                     | Bob@P2: CFUNC->Carol@C |\n                     +------+-----------------+\n\
    \                             \\\n                              \\\nA        \
    \      P1             P2            B          C\n            recursing      non-recursing\n\
    |              |              |             |          |\n|--INV Bob@P1->|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|              |--INV Bob@P2->|             |          |\n\
    |              |              |             |          |\n|              |<-302---------|\
    \             |          |\n|              |  Contact: Carol@C          |    \
    \      |\n|              |  Diversion: Bob@P2         |          |\n|        \
    \      |    ;reason=unconditional   |          |\n|              |           \
    \   |             |          |\n|              |--ACK-------->|             |\
    \          |\n|              |              |             |          |\n|    \
    \          |--INVITE Carol@C---------------------->|\n|              |  Diversion:\
    \ Bob@P2         |          |\n|              |    ;reason=unconditional   | \
    \         |\n|              |              |             |          |\n|     \
    \         |<-200----------------------------------|\n|              |        \
    \      |             |          |\n|<-200---------|              |           \
    \  |          |\n|              |              |             |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.1.4.  Endpoint Call Forward Unconditional\
    \ (P1 Recursing, P2 Non-\n        Recursing)\n   In this message flow, user agent\
    \ server B (B) non-recursively\n   implements Call Forward Unconditional (CFUNC)\
    \ to Carol@C.  Proxy 2\n   (P2) is non-recursing.  Proxy 1 (P1) is recursing.\n\
    \                                    +-----------------------+\n             \
    \                       | Bob@B: CFUNC->Carol@C |\n                          \
    \          +------+----------------+\n                                       \
    \     \\\n                                             \\\nA              P1 \
    \            P2              B          C\n            recursing      non-recursing\n\
    |              |              |               |          |\n|--INV Bob@P1->| \
    \             |               |          |\n|              |              |  \
    \             |          |\n|              |--INV Bob@P2->|               |  \
    \        |\n|              |              |--INV Bob@B--->|          |\n|    \
    \          |              |               |          |\n|              |     \
    \         |<-302----------|          |\n|              |              |  Contact:\
    \ Carol@C        |\n|              |              |  Diversion: Bob@B        |\n\
    |              |              |    ;reason=unconditional\n|              |   \
    \           |               |          |\n|              |              |--ACK--------->|\
    \          |\n|              |              |               |          |\n|  \
    \            |<-302---------|               |          |\n|              |  Contact:\
    \ Carol@C            |          |\n|              |  Diversion: Bob@B        \
    \    |          |\n|              |    ;reason=unconditional     |          |\n\
    |              |              |               |          |\n|              |--ACK-------->|\
    \               |          |\n|              |              |               |\
    \          |\n|              |--INVITE Carol@C------------------------>|\n|  \
    \            |  Diversion: Bob@B            |          |\n|              |   \
    \ ;reason=unconditional     |          |\n|              |              |    \
    \           |          |\n|              |<-200------------------------------------|\n\
    |              |              |               |          |\n|<-200---------| \
    \             |               |          |\n|              |              |  \
    \             |          |\n|--ACK-------------------------------------------------->|\n\
    |              |              |               |          |\n|              | \
    \             |               |          |\n6.2.  Call Forward on Busy\n   Usage\
    \ of the Diversion header is shown below for several variant\n   implementations\
    \ of Call Forward on Busy.\n6.2.1.  Network Call Forward on Busy (P2 Recursing)\n\
    \   In this message flow, Proxy 2 (P2) recursively implements Call\n   Forward\
    \ on Busy (CFB) to Carol@C.\n                     +----------------------+\n \
    \                    | Bob@P2: CFB->Carol@C |\n                     +------+---------------+\n\
    \                             \\\n                              \\\nA        \
    \      P1             P2            B          C\n                           recursing\n\
    |              |              |             |          |\n|--INV Bob@P1->|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|              |--INV Bob@P2->|             |          |\n\
    |              |              |             |          |\n|              |   \
    \           |--INV Bob@B->|          |\n|              |              |      \
    \       |          |\n|              |              |<-486--------|          |\n\
    |              |              |             |          |\n|              |   \
    \           |--ACK------->|          |\n|              |              |      \
    \       |          |\n|              |              |--INVITE Carol@C------->|\n\
    |              |              |  Diversion: Bob@P2     |\n|              |   \
    \           |    ;reason=user-busy   |\n|              |              |      \
    \       |          |\n|              |              |<-200-------------------|\n\
    |              |              |             |          |\n|              |<-200---------|\
    \             |          |\n|              |              |             |    \
    \      |\n|<-200---------|              |             |          |\n|        \
    \      |              |             |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.2.2.  Network Call Forward on Busy (P1\
    \ Non-Recursing, P2 Non-\n        Recursing)\n   In this message flow, Proxy 2\
    \ (P2) non-recursively implements Call\n   Forward on Busy (CFB) to Carol@C. \
    \ Proxy 1 (P1) is non-recursing.\n                     +----------------------+\n\
    \                     | Bob@P2: CFB->Carol@C |\n                     +------+---------------+\n\
    \                             \\\n                              \\\nA        \
    \      P1             P2            B          C\n            non-recursing  non-recursing\n\
    |              |              |             |          |\n|--INV Bob@P1->|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|              |--INV Bob@P2->|             |          |\n\
    |              |              |             |          |\n|              |   \
    \           |--INV Bob@B->|          |\n|              |              |      \
    \       |          |\n|              |              |<-486--------|          |\n\
    |              |              |             |          |\n|              |   \
    \           |--ACK------->|          |\n|              |              |      \
    \       |          |\n|              |<-302---------|             |          |\n\
    |              |  Contact: Carol@C          |          |\n|              |  Diversion:\
    \ Bob@P2         |          |\n|              |    ;reason=user-busy       | \
    \         |\n|              |              |             |          |\n|     \
    \         |--ACK-------->|             |          |\n|              |        \
    \      |             |          |\n|<-302---------|              |           \
    \  |          |\n|  Contact: Carol@C           |             |          |\n| \
    \ Diversion: Bob@P2          |             |          |\n|    ;reason=user-busy\
    \        |             |          |\n|              |              |         \
    \    |          |\n|--ACK-------->|              |             |          |\n\
    |              |              |             |          |\n|--INVITE Carol@C------------------------------------->|\n\
    |  Diversion: Bob@P2          |             |          |\n|    ;reason=user-busy\
    \        |             |          |\n|              |              |         \
    \    |          |\n|<-200-------------------------------------------------|\n\
    |              |              |             |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.2.3.  Network Call Forward on Busy (P1\
    \ Recursing, P2 Non-Recursing)\n   In this message flow, Proxy 2 (P2) non-recursively\
    \ implements Call\n   Forward on Busy (CFB) to Carol@C.  Proxy 1 (P1) is recursing.\n\
    \                     +----------------------+\n                     | Bob@P2:\
    \ CFB->Carol@C |\n                     +------+---------------+\n            \
    \                 \\\n                              \\\nA              P1    \
    \         P2            B          C\n            recursing      non-recursing\n\
    |              |              |             |          |\n|--INV Bob@P1->|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|              |--INV Bob@P2->|             |          |\n\
    |              |              |             |          |\n|              |   \
    \           |--INV Bob@B->|          |\n|              |              |      \
    \       |          |\n|              |              |<-486--------|          |\n\
    |              |              |             |          |\n|              |   \
    \           |--ACK------->|          |\n|              |              |      \
    \       |          |\n|              |<-302---------|             |          |\n\
    |              |  Contact: Carol@C          |          |\n|              |  Diversion:\
    \ Bob@P2         |          |\n|              |    ;reason=user-busy       | \
    \         |\n|              |              |             |          |\n|     \
    \         |--ACK-------->|             |          |\n|              |        \
    \      |             |          |\n|              |--INVITE Carol@C---------------------->|\n\
    |              |  Diversion: Bob@P2         |          |\n|              |   \
    \ ;reason=user-busy       |          |\n|              |              |      \
    \       |          |\n|              |<-200----------------------------------|\n\
    |              |              |             |          |\n|<-200---------|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.2.4.  Endpoint Call Forward on Busy\
    \ (P1 Recursing, P2 Non-Recursing)\n   In this message flow, user agent server\
    \ B (B) non-recursively\n   implements Call Forward on Busy (CFB) to Carol@C.\
    \  Proxy 2 (P2) is\n   non-recursing.  Proxy 1 (P1) is recursing.\n          \
    \                     +---------------------+\n                              \
    \ | Bob@B: CFB->Carol@C |\n                               +------+--------------+\n\
    \                                          \\\n                              \
    \             \\\nA              P1             P2            B          C\n \
    \           recursing      non-recursing\n|              |              |    \
    \         |          |\n|--INV Bob@P1->|              |             |        \
    \  |\n|              |              |             |          |\n|            \
    \  |--INV Bob@P2->|             |          |\n|              |              |\
    \             |          |\n|              |              |--INV Bob@B->|    \
    \      |\n|              |              |             |          |\n|        \
    \      |              |<-302--------|          |\n|              |           \
    \   |  Contact: Carol@C      |\n|              |              |  Diversion: Bob@B\
    \      |\n|              |              |    ;reason=user-busy   |\n|        \
    \      |              |             |          |\n|              |           \
    \   |--ACK------->|          |\n|              |              |             |\
    \          |\n|              |<-302---------|             |          |\n|    \
    \          |  Contact: Carol@C          |          |\n|              |  Diversion:\
    \ Bob@B          |          |\n|              |    ;reason=user-busy       | \
    \         |\n|              |              |             |          |\n|     \
    \         |--ACK-------->|             |          |\n|              |        \
    \      |             |          |\n|              |--INVITE Carol@C---------------------->|\n\
    |              |  Diversion: Bob@B          |          |\n|              |   \
    \ ;reason-user-busy       |          |\n|              |              |      \
    \       |          |\n|              |<-200----------------------------------|\n\
    |              |              |             |          |\n|<-200---------|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.3.  Call Forward on No-Answer\n   Usage\
    \ of the Diversion header is shown below for several variant\n   implementations\
    \ of Call Forward on No-Answer.\n6.3.1.  Network Call Forward on No-Answer (P2\
    \ Recursing)\n   In this message flow, Proxy 2 (P2) recursively implements Call\n\
    \   Forward on No Answer (CFNA) to Carol@C.\n                     +-----------------------+\n\
    \                     | Bob@P2: CFNA->Carol@C |\n                     +------+----------------+\n\
    \                             \\\n                              \\\nA        \
    \      P1             P2            B          C\n                           recursing\n\
    |              |              |             |          |\n|--INV Bob@P1->|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|              |--INV Bob@P2->|             |          |\n\
    |              |              |             |          |\n|              |   \
    \           |--INV Bob@B->|          |\n|              |              |      \
    \       |          |\n|              |              |<-180--------|          |\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|              |           timeout          |          |\n\
    |              |              |--INVITE Carol@C------->|\n|              |   \
    \           |  Diversion: Bob@P2     |\n|              |              |    ;reason=no-answer\
    \   |\n|              |              |             |          |\n|           \
    \   |              |<-200-------------------|\n|              |              |\
    \             |          |\n|              |<-200---------|             |    \
    \      |\n|              |              |             |          |\n|<-200---------|\
    \              |             |          |\n|              |              |   \
    \          |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.3.2.  Network Call Forward on No-Answer\
    \ (P1 Non-Recursing, P2 Non-\n        Recursing)\n   In this message flow, Proxy\
    \ 2 (P2) non-recursively implements Call\n   Forward on No Answer (CFNA) to Carol@C.\
    \  Proxy 1 (P1) is non-\n   recursing.\n                     +-----------------------+\n\
    \                     | Bob@P2: CFNA->Carol@C |\n                     +------+----------------+\n\
    \                             \\\n                              \\\nA        \
    \      P1             P2            B          C\n            non-recursing  non-recursing\n\
    |              |              |             |          |\n|--INV Bob@P1->|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|              |--INV Bob@P2->|             |          |\n\
    |              |              |             |          |\n|              |   \
    \           |--INV Bob@B->|          |\n|              |              |      \
    \       |          |\n|              |              |<-180--------|          |\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|              |           timeout          |          |\n\
    |              |<-302---------|             |          |\n|              |  Contact:\
    \ Carol@C          |          |\n|              |  Diversion: Bob@P2         |\
    \          |\n|              |    ;reason=no-answer       |          |\n|    \
    \          |              |             |          |\n|              |--ACK-------->|\
    \             |          |\n|              |              |             |    \
    \      |\n|<-302---------|              |             |          |\n|  Contact:\
    \ Carol@C           |             |          |\n|  Diversion: Bob@P2         \
    \ |             |          |\n|    ;reason=no-answer        |             |  \
    \        |\n|              |              |             |          |\n|--ACK-------->|\
    \              |             |          |\n|              |              |   \
    \          |          |\n|--INVITE Carol@C------------------------------------->|\n\
    |  Diversion: Bob@P2          |             |          |\n|    ;reason=no-answer\
    \        |             |          |\n|              |              |         \
    \    |          |\n|<-200-------------------------------------------------|\n\
    |              |              |             |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n6.3.3.  Network Call\
    \ Forward on No Answer (P1 Recursing, P2 Non-\n        Recursing)\n   In this\
    \ message flow, Proxy 2 (P2) non-recursively implements Call\n   Forward on No\
    \ Answer (CFNA) to Carol@C.  Proxy 1 (P1) is recursing.\n                    \
    \ +-----------------------+\n                     | Bob@P2: CFNA->Carol@C |\n\
    \                     +------+----------------+\n                            \
    \ \\\n                              \\\nA              P1             P2     \
    \       B          C\n            recursing      non-recursing\n|            \
    \  |              |             |          |\n|--INV Bob@P1->|              |\
    \             |          |\n|              |              |             |    \
    \      |\n|              |--INV Bob@P2->|             |          |\n|        \
    \      |              |             |          |\n|              |           \
    \   |--INV Bob@B->|          |\n|              |              |             |\
    \          |\n|              |              |<-180--------|          |\n|    \
    \          |              |             |          |\n|              |       \
    \       |             |          |\n|              |              |          \
    \   |          |\n|              |            timeout         |          |\n|\
    \              |<-302---------|             |          |\n|              |  Contact:\
    \ Carol@C          |          |\n|              |  Diversion: Bob@P2         |\
    \          |\n|              |    ;reason=no-answer       |          |\n|    \
    \          |              |             |          |\n|              |--ACK-------->|\
    \             |          |\n|              |              |             |    \
    \      |\n|              |--INVITE Carol@C---------------------->|\n|        \
    \      |  Diversion: Bob@P2         |          |\n|              |    ;reason=no-answer\
    \       |          |\n|              |              |             |          |\n\
    |              |<-200----------------------------------|\n|              |   \
    \           |             |          |\n|<-200---------|              |      \
    \       |          |\n|              |              |             |          |\n\
    |--ACK------------------------------------------------>|\n|              |   \
    \           |             |          |\n|              |              |      \
    \       |          |\n6.3.4.  Endpoint Call Forward on No-Answer (P1 Recursing,\
    \ P2 Non-\n        Recursing, B Non-Recursing)\n   In this message flow, user\
    \ agent server B (B) non-recursively\n   implements Call Forward on No Answer\
    \ (CFNA) to Carol@C.  Proxy 2 (P2)\n   is non-recursing.  Proxy 1 (P1) is recursing.\n\
    \                                  +----------------------+\n                \
    \                  | Bob@B: CFNA->Carol@C |\n                                \
    \  +------+---------------+\n                                          \\\n  \
    \                                         \\\nA              P1             P2\
    \            B          C\n            recursing      non-recursing\n|       \
    \       |              |             |          |\n|--INV Bob@P1->|          \
    \    |             |          |\n|              |              |             |\
    \          |\n|              |--INV Bob@P2->|             |          |\n|    \
    \          |              |             |          |\n|              |       \
    \       |--INV Bob@B->|          |\n|              |              |          \
    \   |          |\n|              |              |             |          |\n|\
    \              |              |             |          |\n|              |   \
    \           |          timeout       |\n|              |              |<-302--------|\
    \          |\n|              |              |  Contact: Carol@C      |\n|    \
    \          |              |  Diversion: Bob@B      |\n|              |       \
    \       |    ;reason=no-answer   |\n|              |              |          \
    \   |          |\n|              |              |--ACK------->|          |\n|\
    \              |              |             |          |\n|              |<-302---------|\
    \             |          |\n|              |  Contact: Carol@C          |    \
    \      |\n|              |  Diversion: Bob@B          |          |\n|        \
    \      |    ;reason=no-answer       |          |\n|              |           \
    \   |             |          |\n|              |--ACK-------->|             |\
    \          |\n|              |              |             |          |\n|    \
    \          |--INVITE Carol@C---------------------->|\n|              |  Diversion:\
    \ Bob@B          |          |\n|              |    ;reason-no-answer       | \
    \         |\n|              |              |             |          |\n|     \
    \         |<-200----------------------------------|\n|              |        \
    \      |             |          |\n|<-200---------|              |           \
    \  |          |\n|              |              |             |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n6.4.  Call Forward on\
    \ Unavailable\n   Usage of the Diversion header is shown below for several variant\n\
    \   implementations of Call Forward on Unavailable.\n6.4.1.  Network Call Forward\
    \ on Unavailable (P2 Recursing)\n   In this message flow, Proxy 2 (P2) recursively\
    \ implements Call\n   Forward on Unavailable (CFUNV) to Carol@C.\n           \
    \          +------------------------+\n                     | Bob@P2: CFUNV->Carol@C\
    \ |\n                     +------+-----------------+\n                       \
    \      \\\n                              \\\nA              P1             P2\
    \            B          C\n                           recursing\n|           \
    \   |              |             |          |\n|--INV Bob@P1->|              |\
    \             |          |\n|<-100---------|              |             |    \
    \      |\n|              |--INV Bob@P2->|             |          |\n|        \
    \      |<-100---------|             |          |\n|              |           \
    \   |--INV Bob@B->|          |\n|              |              |--INV Bob@B->|\
    \          |\n|              |              |--INV Bob@B->|          |\n|    \
    \          |              |  ...        |          |\n|              |       \
    \       |--INV Bob@B->|          |\n|              |           timeout       \
    \   |          |\n|              |              |--INVITE Carol@C------->|\n|\
    \              |              |  Diversion: Bob@P2     |\n|              |   \
    \           |    ;reason=unavailable\n|              |              |        \
    \     |          |\n|              |              |<-200-------------------|\n\
    |              |              |             |          |\n|              |<-200---------|\
    \             |          |\n|              |              |             |    \
    \      |\n|<-200---------|              |             |          |\n|        \
    \      |              |             |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.4.2.  Network Call Forward on Unavailable\
    \ (P1 Non-Recursing, P2 Non-\n        Recursing)\n   In this message flow, Proxy\
    \ 2 (P2) non-recursively implements Call\n   Forward on Unavailable (CFUNV) to\
    \ Carol@C.  Proxy 1 (P1) is non-\n   recursing.\n                     +------------------------+\n\
    \                     | Bob@P2: CFUNV->Carol@C |\n                     +------+-----------------+\n\
    \                             \\\n                              \\\nA        \
    \      P1             P2            B          C\n            non-recursing  non-recursing\n\
    |              |              |             |          |\n|--INV Bob@P1->|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|              |--INV Bob@P2->|             |          |\n\
    |              |              |             |          |\n|              |<-100---------|\
    \             |          |\n|              |              |             |    \
    \      |\n|<-100---------|              |             |          |\n|        \
    \      |              |--INV Bob@B->|          |\n|              |           \
    \   |--INV Bob@B->|          |\n|              |              |--INV Bob@B->|\
    \          |\n|              |              |  ...        |          |\n|    \
    \          |              |--INV Bob@B->|          |\n|              |       \
    \    timeout          |          |\n|              |<-302---------|          \
    \   |          |\n|              |  Contact: Carol@C          |          |\n|\
    \              |  Diversion: Bob@P2         |          |\n|              |   \
    \ ;reason=unavailable     |          |\n|              |              |      \
    \       |          |\n|              |--ACK-------->|             |          |\n\
    |              |              |             |          |\n|<-302---------|   \
    \           |             |          |\n|  Contact: Carol@C           |      \
    \       |          |\n|  Diversion: Bob@P2          |             |          |\n\
    |    ;reason=unavailable      |             |          |\n|              |   \
    \           |             |          |\n|--ACK-------->|              |      \
    \       |          |\n|              |              |             |          |\n\
    |--INVITE Carol@C------------------------------------->|\n|  Diversion: Bob@P2\
    \          |             |          |\n|    ;reason=unavailable      |       \
    \      |          |\n|              |              |             |          |\n\
    |<-200-------------------------------------------------|\n|              |   \
    \           |             |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.4.3.  Network Call Forward on Unavailable\
    \ (P1 Recursing, P2 Non-\n        Recursing)\n   In this message flow, Proxy 2\
    \ (P2) non-recursively implements Call\n   Forward on Unavailable (CFUNV) to Carol@C.\
    \  Proxy 1 (P1) is\n   recursing.\n                     +------------------------+\n\
    \                     | Bob@P2: CFUNV->Carol@C |\n                     +------+-----------------+\n\
    \                             \\\n                              \\\nA        \
    \      P1             P2            B          C\n            recursing      non-recursing\n\
    |              |              |             |          |\n|--INV Bob@P1->|   \
    \           |             |          |\n|<-100---------|              |      \
    \       |          |\n|              |--INV Bob@P2->|             |          |\n\
    |              |<-100---------|             |          |\n|              |   \
    \           |--INV Bob@B->|          |\n|              |              |--INV Bob@B->|\
    \          |\n|              |              |--INV Bob@B->|          |\n|    \
    \          |              |  ...        |          |\n|              |       \
    \       |--INV Bob@B->|          |\n|              |           timeout       \
    \   |          |\n|              |<-302---------|             |          |\n|\
    \              |  Contact: Carol@C          |          |\n|              |  Diversion:\
    \ Bob@P2         |          |\n|              |    ;reason=unavailable     | \
    \         |\n|              |              |             |          |\n|     \
    \         |--ACK-------->|             |          |\n|              |        \
    \      |             |          |\n|              |--INVITE Carol@C---------------------->|\n\
    |              |  Diversion: Bob@P2         |          |\n|              |   \
    \ ;reason=unavailable     |          |\n|              |              |      \
    \       |          |\n|              |<-200----------------------------------|\n\
    |              |              |             |          |\n|<-200---------|   \
    \           |             |          |\n|              |              |      \
    \       |          |\n|--ACK------------------------------------------------>|\n\
    |              |              |             |          |\n|              |   \
    \           |             |          |\n6.5.  Multiple Diversions\n   Usage of\
    \ the Diversion header when multiple diversions occur are\n   shown the following\
    \ two examples.\n6.5.1.  Call Forward Unconditional and Call Forward Busy\n  \
    \ In this message flow, Proxy 2 (P2) implements Call Forward\n   Unconditional\
    \ (CFUNC) to Carol@C.  C then implements Call Forward on\n   Busy (CFB) to 5551234@D.\
    \  P2 is non-recursing.  P1 is recursing.  C\n   is non-recursing.\n         \
    \   +------------------------+     +-------------------------+\n            |\
    \ Bob@P2: CFUNC->Carol@C |     | Carol@C: CFB->5551234@D |\n            +---------------+--------+\
    \     +--------+----------------+\n                             \\           \
    \            \\\n                              \\                       \\\nA\
    \              P1             P2            B          C          D\n        \
    \    recursing      non-recursing          non-recursing\n|              |   \
    \           |             |          |          |\n|--INV Bob@P1->|          \
    \    |             |          |          |\n|              |              |  \
    \           |          |          |\n|              |--INV Bob@P2->|         \
    \    |          |          |\n|              |              |             |  \
    \        |          |\n|              |<-302---------|             |         \
    \ |          |\n|              |  Contact: Carol@C          |          |     \
    \     |\n|              |  Diversion: Bob@P2         |          |          |\n\
    |              |    ;reason=unconditional   |          |          |\n|       \
    \       |              |             |          |          |\n|              |--ACK-------->|\
    \             |          |          |\n|              |              |       \
    \      |          |          |\n|              |--INVITE Carol@C---------------------->|\
    \          |\n|              |  Diversion: Bob@P2         |          |       \
    \   |\n|              |    ;reason=unconditional   |          |          |\n|\
    \              |              |             |          |          |\n|       \
    \       |<-302----------------------------------|          |\n|              |\
    \  Contact: 5551234@D        |          |          |\n|              |  Diversion:\
    \ Carol@C        |          |          |\n|              |    ;reason=user-busy\
    \       |          |          |\n|              |    ;privacy=\"full\"       \
    \  |          |          |\n|              |  Diversion: Bob@P2         |    \
    \      |          |\n|              |    ;reason=unconditional   |          |\
    \          |\n|              |              |             |          |       \
    \   |\n|              |--ACK--------------------------------->|          |\n|\
    \              |              |             |          |          |\n|       \
    \       |--INVITE 5551234@D------------------------------->|\n|              |\
    \  Diversion: Carol@C        |          |          |\n|              |    ;reason=user-busy\
    \       |          |          |\n|              |    ;privacy=\"full\"       \
    \  |          |          |\n|              |  Diversion: Bob@P2         |    \
    \      |          |\n|              |    ;reason=unconditional   |          |\
    \          |\n|              |              |             |          |       \
    \   |\n|              |<-200---------------------------------------------|\n|\
    \              |              |             |          |          |\n|<-200---------|\
    \              |             |          |          |\n|              |       \
    \       |             |          |          |\n|--ACK----------------------------------------------------------->|\n\
    |              |              |             |          |          |\n|       \
    \       |              |             |          |          |\n6.5.2.  Call Forward\
    \ Unconditional and Call Forward No Answer\n   In this message flow, Proxy 2 (P2)\
    \ implements Call Forward\n   Unconditional (CFUNC) to Carol@C.  (P2 would normally\
    \ have routed the\n   call to B).  C then implements Call Forward on No Answer\
    \ (CFNA) to\n   5551234@D.  P2 is recursing.  C is recursing.\n         +------------------------+\
    \  +--------------------------+\n         | Bob@P2: CFUNC->Carol@C |  | Carol@C:\
    \ CFNA->5551234@D |\n         +------------------+-----+  +-----+--------------------+\n\
    \                             \\              \\\n                           \
    \   \\              \\\nA              P1             P2       B      C      \
    \           D\n                            recursing       recursing\n|      \
    \        |              |        |      |                 |\n|--INV Bob@P1->|\
    \              |        |      |                 |\n|              |         \
    \     |        |      |                 |\n|              |--INV Bob@P2->|   \
    \     |      |                 |\n|              |              |        |   \
    \   |                 |\n|              |              |--INV Carol@C->|     \
    \            |\n|              |              |  Diversion: Bob@P2           \
    \   |\n|              |              |    ;reason=unconditional        |\n|  \
    \            |              |        |      |                 |\n|           \
    \   |              |<--180---------|                 |\n|              |     \
    \         |        |      |                 |\n|              |<-180---------|\
    \        |      |                 |\n|              |              |        |\
    \      |                 |\n|<-180---------|              |        |      |  \
    \               |\n|              |              |        |      |           \
    \      |\n|              |              |        |      |                 |\n\
    |              |              |        |    timeout             |\n|         \
    \     |              |        |      |--INV 5551234@D->|\n|              |   \
    \           |        |      |Diversion: Carol@C\n|              |            \
    \  |        |      |  ;reason=no-answer\n|              |              |     \
    \   |      |  ;privacy=\"full\"\n|              |              |        |    \
    \  |Diversion: Bob@P2\n|              |              |        |      |  ;reason=\
    \ unconditional\n|              |              |        |      |             \
    \    |\n|              |              |        |      |<-200------------|\n| \
    \             |              |        |      |         |       |\n|          \
    \    |              |<-200----------|         |       |\n|              |    \
    \          |        |      |         |       |\n|              |<-200---------|\
    \        |      |         |       |\n|              |              |        |\
    \      |         |       |\n|<-200---------|              |        |      |  \
    \       |       |\n|              |              |        |      |         | \
    \      |\n|--ACK--------------------------------------------------------->|\n\
    |              |              |        |      |         |       |\n7.  Security\
    \ Considerations\n   There are some privacy considerations when using the Diversion\n\
    \   header.  Usage of the Diversion header implies that the diverting UAS\n  \
    \ trusts the diverted-to UAS.  Usage of the Diversion header by SIP\n   proxies\
    \ or SIP user agents can cause information leakage of route\n   information and\
    \ called information to untrusted SIP proxies and\n   untrusted callers in upstream\
    \ 3xxs.  Leakage of this information can\n   be mitigated by having a recursing\
    \ trusted upstream proxy server.\n   For a SIP network architecture where all\
    \ proxies are required to be\n   non-recursive, Diversion header hiding may be\
    \ considered necessary in\n   order to prevent leakage of route information to\
    \ the caller.  To\n   accomplish Diversion header hiding, a trusted upstream proxy\
    \ would\n   add a Record-Route header and use a secret key to encrypt the\n  \
    \ contents of the Diversion header in 3xxs that are forwarded upstream.\n   On\
    \ receipt of re-INVITEs, the proxy would decrypt the contents of the\n   Diversion\
    \ header (using its secret key) and forward the INVITE.\n   There is no currently\
    \ defined interaction of the Diversion and Hide\n   headers.  Question: Should\
    \ there be?\n8.  Further Examples\n   Only the relevant headers have been included\
    \ in the following\n   examples.  The contents of the Session Description Protocols\
    \ (SDPs)\n   have also been omitted.\n8.1.  Night Service/Automatic Call Distribution\
    \ (ACD) Using Diversion\n      Header\n   In the following two message flows,\
    \ two separate companies,\n   WeSellPizza.com and WeSellFlowers.com, have contracted\
    \ with a third\n   company, NightService.com to provide nighttime support for\
    \ their\n   incoming voice calls.\n   In the first flow, Alice calls out for pizza.\
    \  In the second flow,\n   Alice calls for roses.  In both instances, the same\
    \ night service\n   company (and receptionist, Carol) answers the call.  However,\
    \ because\n   the Diversion header is used, Carol is able to customize her greeting\n\
    \   to the caller.\n                +-------------------------------------+\n\
    \                | WeSellPizza@P2: CFTOD->nightserv@P3 |\n                +------------+------------------------+\n\
    \                              \\\n                               \\\nUAC    \
    \         P1             P2                 P3               UAS1\n          \
    \              (WeSellPizza.com)  (NightService.com)\n                       \
    \                         (ACD)\n| [1]           |              |            \
    \       |                  |\n|-INV pizza@P1->|              |               \
    \    |                  |\n|               |              |                  \
    \ |                  |\n|               |              |                   | \
    \                 |\n|               | [2] INVITE WeSellPizza@P2        |    \
    \              |\n|               |------------->|                   |       \
    \           |\n|               |              |                   |          \
    \        |\n|               |              | [3]               |             \
    \     |\n|               |              |-INV nightserv@P3->|                \
    \  |\n|               |              | Diversion: WeSellPizza@P2            |\n\
    |               |              |   ;reason=time-of-day                |\n|   \
    \            |              |                   |                  |\n|      \
    \         |              |                   | [4]              |\n|         \
    \      |              |                   |-INV Carol@uas1-->|\n|            \
    \   |              |            Diversion: WeSellPizza@P2 |\n|               |\
    \              |                ;reason=time-of-day   |\n|               |   \
    \           |                   |                  |\n|               |      \
    \        |                   |<-[5] 200---------|\n|               |         \
    \     |<-[6] 200----------|                  |\n|               |<-[7] 200-----|\
    \                   |                  |\n|<-[8] 200------|              |   \
    \                |                  |\n|               |              |      \
    \             |                  |\n|--[9] ACK----------------------------------------------------------->|\n\
    |               |              |                   |                  |\n|<==========================================\"\
    Hello, WeSellPizza\"======|\n|               |              |                \
    \   |                  |\n|               |              |                   |\
    \                  |\n   Alice calls for pizza.\n   [1] SIP UAC to SIP proxy server\
    \ 1:\n        INVITE sip:pizza@p1.isp.com SIP/2.0\n        Via: SIP/2.0/UDP alice-pc.isp.com\n\
    \        From: sip:alice@isp.com\n        To: sip:pizza@p1.isp.com\n        Call-ID:\
    \ 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n        Content-Type: application/sdp\n\
    \   The ISP's originating proxy translated the keyword pizza to the\n   company\
    \ WeSellPizza.com\n   [2] SIP proxy server 1 to SIP proxy server 2 (WeSellPizza.com):\n\
    \        INVITE sip:WeSellPizza@p2.isp.com SIP/2.0\n        Via: SIP/2.0/UDP p1.isp.com\n\
    \        Via: SIP/2.0/UDP alice-pc.isp.com\n        From: sip:alice@isp.com\n\
    \        To: sip:pizza@p1.isp.com\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Content-Type: application/sdp\n   It's after\
    \ midnight and the pizza people are in bed.  Fortunately,\n   WeSellPizza.com\
    \ has contracted with NightService.com to answer their\n   nighttime calls.  Thus,\
    \ P2 implements CFTOD to NightService.com.\n   [3] SIP proxy server 2 (WeSellPizza.com)\
    \ to\n       SIP proxy server 3 (NightService.com):\n        INVITE sip:NightService@p3.isp.com\
    \ SIP/2.0\n        Via: SIP/2.0/UDP p2.isp.com\n        Via: SIP/2.0/UDP p1.isp.com\n\
    \        Via: SIP/2.0/UDP alice-pc.isp.com\n        From: sip:alice@isp.com\n\
    \        To: sip:pizza@p1.isp.com\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Diversion: <sip:WeSellPizza@p2.isp.com>\n   \
    \       ;reason=time-of-day\n        Content-Type: application/sdp\n   Carol is\
    \ available to receive the incoming call.\n   [4] SIP proxy server 3 (NightService.com)\
    \ to UAS1 (Carol):\n        INVITE sip:carol@uas1.nightservice.com SIP/2.0\n \
    \       Via: SIP/2.0/UDP p3.isp.com\n        Via: SIP/2.0/UDP p2.isp.com\n   \
    \     Via: SIP/2.0/UDP p1.isp.com\n        Via: SIP/2.0/UDP alice-pc.isp.com\n\
    \        From: sip:alice@isp.com\n        To: sip:pizza@p1.isp.com\n        Call-ID:\
    \ 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n        Diversion: <sip:WeSellPizza@p2.isp.com>\n\
    \          ;reason=time-of-day\n        Content-Type: application/sdp\n   The\
    \ ACD keys off the Diversion header to pull up the WeSellPizza FAQ\n   on Carol's\
    \ web browser.\n   [5] UAS1 to SIP proxy server 3:\n        SIP/2.0 200 OK\n \
    \       Via: SIP/2.0/UDP p3.isp.com\n        Via: SIP/2.0/UDP p2.isp.com\n   \
    \     Via: SIP/2.0/UDP p1.isp.com\n        Via: SIP/2.0/UDP alice-pc.isp.com\n\
    \        Contact: carol@uas1.nightservice.com\n        From: sip:alice@isp.com\n\
    \        To: <sip:pizza@p1.isp.com>;tag=uas1\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Content-Type: application/sdp\n   [6] SIP proxy\
    \ server 3 to SIP proxy server 2:\n        SIP/2.0 200 OK\n        Via: SIP/2.0/UDP\
    \ p2.isp.com\n        Via: SIP/2.0/UDP p1.isp.com\n        Via: SIP/2.0/UDP alice-pc.isp.com\n\
    \        Contact: carol@uas1.nightservice.com\n        From: sip:alice@isp.com\n\
    \        To: <sip:pizza@p1.isp.com>;tag=uas1\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Content-Type: application/sdp\n   [7] SIP proxy\
    \ server 2 to SIP proxy server 1:\n        SIP/2.0 200 OK\n        Via: SIP/2.0/UDP\
    \ p1.isp.com\n        Via: SIP/2.0/UDP alice-pc.isp.com\n        Contact: carol@uas1.nightservice.com\n\
    \        From: sip:alice@isp.com\n        To: <sip:pizza@p1.isp.com>;tag=uas1\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n        Content-Type:\
    \ application/sdp\n   [8] SIP proxy server 1 to UAC\n        SIP/2.0 200 OK\n\
    \        Via: SIP/2.0/UDP alice-pc.isp.com\n        Contact: carol@uas1.nightservice.com\n\
    \        From: sip:alice@isp.com\n        To: <sip:pizza@p1.isp.com>;tag=uas1\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n        Content-Type:\
    \ application/sdp\n   [9] SIP UAC to UAS1:\n        ACK sip:uas1.nightservice.com\
    \ SIP/2.0\n        Via: SIP/2.0/UDP alice-pc.isp.com\n        From: sip:alice@isp.com\n\
    \        To: <sip:pizza@p1.isp.com>;tag=uas1\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n   The RTP flows begin and Carol answers \"Hello, WeSellPizza.\
    \  How may I\n   help you?\"\n                 +---------------------------------------+\n\
    \                 | WeSellFlowers@P4: CFTOD->nightserv@P3 |\n                \
    \ +-------------+-------------------------+\n                                \\\
    \n                                 \\\nUAC             P1               P4   \
    \              P3              UAS1\n                         (WeSellFlowers.com)\
    \  (NightService.com)\n                                                   (ACD)\n\
    | [1]           |                |                   |                |\n|-INV\
    \ roses@P1->|                |                   |                |\n|       \
    \        |                |                   |                |\n|          \
    \     | [2] INVITE WeSellFlowers@P4        |                |\n|             \
    \  |--------------->|                   |                |\n|               |\
    \                |                   |                |\n|               | [3]\
    \            |                   |                |\n|               |<-302-----------|\
    \                   |                |\n|               |  Contact: nightservice@P3\
    \          |                |\n|               |  Diversion: WeSellFlowers@P4\
    \       |                |\n|               |    ;reason=time-of-day         \
    \    |                |\n|               |                |                  \
    \ |                |\n|               |--[4] ACK------>|                   | \
    \               |\n|               |                |                   |    \
    \            |\n|               | [5]            |                   |       \
    \         |\n|               |-INVITE nightservice@P3------------>|          \
    \      |\n|               | Diversion: WeSellFlowers@P4        |             \
    \   |\n|               |   ;reason=time-of-day              |                |\n\
    |               |                |                   |                |\n|   \
    \            |                |                   | [6]            |\n|      \
    \         |                |               -INV Carol@uas1----->|\n|         \
    \      |                |          Diversion: WeSellFlowers@P4\n|            \
    \   |                |            ;reason=time-of-day\n|               |     \
    \           |                                    |\n|               |        \
    \        |              |<-[7] 200------------|\n|               |<-[8] 200---------------------------|\
    \                |\n|<-[9] 200------|                |                   |   \
    \             |\n|               |                |                   |      \
    \          |\n|--[10] ACK---------------------------------------------------------->|\n\
    |               |                |                   |                |\n|<=======================================\"\
    Hello, WeSellFlowers\"=======|\n|               |                |           \
    \        |                |\n|               |                |              \
    \     |                |\n   Alice calls for roses.\n   [1] SIP UAC to SIP proxy\
    \ server 1:\n        INVITE sip:roses@p1.isp.com SIP/2.0\n        Via: SIP/2.0/UDP\
    \ alice-pc.isp.com\n        From: sip:alice@isp.com\n        To: sip:roses@p1.isp.com\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n        Content-Type:\
    \ application/sdp\n   The ISP's originating proxy translated the keyword roses\
    \ to the\n   company WeSellFlowers.com\n   [2] SIP proxy server 1 to SIP proxy\
    \ server 4 (WeSellFlowers.com):\n        INVITE sip:WeSellFlowers@p4.isp.com SIP/2.0\n\
    \        Via: SIP/2.0/UDP p1.isp.com\n        Via: SIP/2.0/UDP alice-pc.isp.com\n\
    \        From: sip:alice@isp.com\n        To: sip:roses@p1.isp.com\n        Call-ID:\
    \ 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n        Content-Type: application/sdp\n\
    \   It's now 1 a.m. and the florists are also in bed.  Fortunately,\n   WeSellFlowers.com\
    \ has contracted with NightService.com to answer\n   their nighttime calls, too.\
    \  Thus, P4 implements CFTOD to\n   NightService.com.\n   [3] SIP proxy server\
    \ 4 (WeSellFlowers.com) to\n       SIP proxy server 1 (NightService.com):\n  \
    \      SIP/2.0 302 Moved Temporarily\n        Via: SIP/2.0/UDP p1.isp.com\n  \
    \      Via: SIP/2.0/UDP alice-pc.isp.com\n        Contact: NightService@p3.isp.com\n\
    \        From: sip:alice@isp.com\n        To: <sip:roses@p1.isp.com>;tag=p4\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n        Diversion:\
    \ <sip:WeSellFlowers@p4.isp.com>\n          ;reason=time-of-day\n   [4] SIP proxy\
    \ server 1 to SIP proxy server 4 (WeSellFlowers.com):\n        ACK sip:uas1.nightservice.com\
    \ SIP/2.0\n        Via: SIP/2.0/UDP alice-pc.isp.com\n        From: sip:alice@isp.com\n\
    \        To: <sip:roses@p1.isp.com>;tag=p4\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n   [5] SIP proxy server 1 (WeSellFlowers.com) to\n  \
    \     SIP proxy server 3 (NightService.com):\n        INVITE sip:NightService@p3.isp.com\
    \ SIP/2.0\n        Via: SIP/2.0/UDP p1.isp.com\n        Via: SIP/2.0/UDP alice-pc.isp.com\n\
    \        From: sip:alice@isp.com\n        To: sip:roses@p1.isp.com\n        Call-ID:\
    \ 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n        Diversion: <sip:WeSellFlowers@p4.isp.com>\n\
    \          ;reason=time-of-day\n        Content-Type: application/sdp\n   Carol\
    \ is available to receive the incoming call.\n   [6] SIP proxy server 3 (NightService.com)\
    \ to UAS1 (Carol):\n        INVITE sip:carol@uas1.nightservice.com SIP/2.0\n \
    \       Via: SIP/2.0/UDP p3.isp.com\n        Via: SIP/2.0/UDP p1.isp.com\n   \
    \     Via: SIP/2.0/UDP alice-pc.isp.com\n        From: sip:alice@isp.com\n   \
    \     To: sip:roses@p1.isp.com\n        Call-ID: 12345600@alice-pc.isp.com\n \
    \       CSeq: 1 INVITE\n        Diversion: <sip:WeSellFlowers@p4.isp.com>\n  \
    \        ;reason=time-of-day\n        Content-Type: application/sdp\n   The ACD\
    \ keys off the Diversion header to pull up the WeSellFlowers\n   FAQ on Carol's\
    \ web browser.\n   [7] SIP UAS1 to SIP proxy server 3:\n        SIP/2.0 200 OK\n\
    \        Via: SIP/2.0/UDP p3.isp.com\n        Via: SIP/2.0/UDP p1.isp.com\n  \
    \      Via: SIP/2.0/UDP alice-pc.isp.com\n        Contact: carol@uas1.nightservice.com\n\
    \        From: sip:alice@isp.com\n        To: <sip:roses@p1.isp.com>;tag=uas1\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n        Content-Type:\
    \ application/sdp\n   [8] SIP proxy server 3 to SIP proxy server 1:\n        SIP/2.0\
    \ 200 OK\n        Via: SIP/2.0/UDP p1.isp.com\n        Via: SIP/2.0/UDP alice-pc.isp.com\n\
    \        Contact: carol@uas1.nightservice.com\n        From: sip:alice@isp.com\n\
    \        To: <sip:roses@p1.isp.com>;tag=uas1\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Content-Type: application/sdp\n   [9] SIP proxy\
    \ server 1 to UAC\n        SIP/2.0 200 OK\n        Via: SIP/2.0/UDP alice-pc.isp.com\n\
    \        Contact: carol@uas1.nightservice.com\n        From: sip:alice@isp.com\n\
    \        To: <sip:roses@p1.isp.com>;tag=uas1\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Content-Type: application/sdp\n   [10] SIP UAC\
    \ to SIP UAS1:\n        ACK sip:uas1.nightservice.com SIP/2.0\n        Via: SIP/2.0/UDP\
    \ alice-pc.isp.com\n        From: sip:alice@isp.com\n        To: <sip:roses@p1.isp.com>;tag=uas1\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n   The RTP\
    \ flows begin and Carol answers \"Hello, WeSellFlowers.  How may\n   I help you?\"\
    \n8.2.  Voicemail Service Using Diversion Header\n   Bob has contracted his Voicemail\
    \ to a third-party company,\n   Voicemail.com.  In this message flow, Bob has\
    \ hit the Do-Not-Disturb\n   button on his phone.  The Do-Not-Disturb functionality\
    \ of Bob's phone\n   is configured to CFUNC (Call Forward Unconditional) to\n\
    \   voicemail@isp.com.  Because the Diversion header is used,\n   Voicemail.com\
    \ is able to place the incoming call into Bob's voice\n   mailbox.\n         \
    \        +---------------------------------------------+\n                 | Bob@UAS1:\
    \ CFDoNotDisturb->voicemail@isp.com |\n                 +--------------------------------------+------+\n\
    \                                                         \\\n               \
    \                                           \\\nUAC1               P1        \
    \        P2            UAS1        UAS2\n                                    \
    \                      Voicemail.com\n|                  |                  |\
    \              |          |\n|--[1] INV Bob@P1->|                  |         \
    \     |          |\n|                  |                  |              |   \
    \       |\n|                  |--[2] INV Bob@P2->|              |          |\n\
    |                  |                  |              |          |\n|         \
    \         |               [3] INV Bob@uas1->|          |\n|                  |\
    \                  |              |          |\n|                  |         \
    \       [4] <- 302-------|          |\n|                  |               Contact:\
    \ voicemail@isp.com   |\n|                  |               Diversion: Bob@uas1\
    \          |\n|                  |                 ;reason=do-not-disturb    \
    \ |\n|                  |                  |              |          |\n|    \
    \              |                  |[5] ACK------>|          |\n|             \
    \     |                  |              |          |\n|                  |<-[6]\
    \ 302---------|              |          |\n|                  |  Contact: voicemail@isp.com\
    \     |          |\n|                  |  Diversion: Bob@uas1            |   \
    \       |\n|                  |    ;reason=do-not-disturb       |          |\n\
    |                  |                  |              |          |\n|         \
    \         |--[7] ACK-------->|              |          |\n|<-[8] 302---------|\
    \                  |              |          |\n|  Contact: voicemail@isp.com\
    \         |              |          |\n|  Diversion: Bob@uas1                |\
    \              |          |\n|    ;reason=do-not-disturb           |         \
    \     |          |\n|                  |                  |              |   \
    \       |\n|--[9] ACK-------->|                  |              |          |\n\
    |                  |                  |              |          |\n|--[10] INVITE\
    \ voicemail@isp.com------------------------------->|\n|  Diversion: Bob@uas1 \
    \               |              |          |\n|    ;reason=do-not-disturb     \
    \      |              |          |\n|                  |                  |  \
    \            |          |\n|<--[11] 200----------------------------------------------------|\n\
    |                  |                  |              |          |\n|---[12] ACK--------------------------------------------------->|\n\
    |                  |                  |              |          |\n|         \
    \         |                  |              |          |\n   Alice calls Bob.\n\
    \   [1] SIP UAC to SIP proxy server 1:\n        INVITE sip:Bob@p1.isp.com SIP/2.0\n\
    \        Via: SIP/2.0/UDP alice-pc.isp.com\n        From: sip:alice@isp.com\n\
    \        To: sip:Bob@p1.isp.com\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Content-Type: application/sdp\n   The ISP's originating\
    \ proxy routes the request to proxy 2 (P2).\n   [2] SIP proxy server 1 to SIP\
    \ proxy server 2:\n        INVITE sip:Bob@p2.isp.com SIP/2.0\n        Via: SIP/2.0/UDP\
    \ p1.isp.com\n        Via: SIP/2.0/UDP alice-pc.isp.com\n        From: sip:alice@isp.com\n\
    \        To: sip:Bob@p1.isp.com\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Content-Type: application/sdp\n   [3] SIP proxy\
    \ server 2 to UAS1 (Bob's SIP phone):\n        INVITE sip:Bob@uas1.isp.com SIP/2.0\n\
    \        Via: SIP/2.0/UDP p2.isp.com\n        Via: SIP/2.0/UDP p1.isp.com\n  \
    \      Via: SIP/2.0/UDP alice-pc.isp.com\n        From: sip:alice@isp.com\n  \
    \      To: sip:Bob@p1.isp.com\n        Call-ID: 12345600@alice-pc.isp.com\n  \
    \      CSeq: 1 INVITE\n        Content-Type: application/sdp\n   Since Bob had\
    \ hit the Do-Not-Disturb button on his SIP phone, Bob's\n   phone forwards the\
    \ call to his voicemail service.\n   [4] User agent server 1 (UAS1) to SIP proxy\
    \ server 2 (P2)\n        SIP/2.0 302 Moved Temporarily\n        Via: SIP/2.0/UDP\
    \ p2.isp.com\n        Via: SIP/2.0/UDP p1.isp.com\n        Via: SIP/2.0/UDP alice-pc.isp.com\n\
    \        Contact: Voicemail@isp.com\n        From: sip:alice@isp.com\n       \
    \ To: <sip:Bob@p1.isp.com>;tag=uas1\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Diversion: <sip:Bob@uas1.isp.com>\n         \
    \ ;reason=do-not-disturb\n   [5] SIP proxy server 2 to UAS1 (Bob's SIP phone):\n\
    \        ACK sip:Bob@uas1.isp.com SIP/2.0\n        Via: SIP/2.0/UDP p2.isp.com\n\
    \        From: sip:alice@isp.com\n        To: <sip:Bob@p1.isp.com>;tag=uas1\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n   [6] SIP\
    \ proxy server 2 (P2) to SIP proxy server 1 (P1):\n        SIP/2.0 302 Moved Temporarily\n\
    \        Via: SIP/2.0/UDP p1.isp.com\n        Via: SIP/2.0/UDP alice-pc.isp.com\n\
    \        Contact: Voicemail@isp.com\n        From: sip:alice@isp.com\n       \
    \ To: <sip:Bob@p1.isp.com>;tag=uas1\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Diversion: <sip:Bob@uas1.isp.com>\n         \
    \ ;reason=do-not-disturb\n   [7] SIP proxy server 1 to SIP proxy server 2:\n \
    \       ACK sip:Bob@p2.isp.com SIP/2.0\n        Via: SIP/2.0/UDP p1.isp.com\n\
    \        From: sip:alice@isp.com\n        To: <sip:Bob@p1.isp.com>;tag=uas1\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n   [8] SIP\
    \ proxy server 1 (P1) to UAC (alice-pc):\n        SIP/2.0 302 Moved Temporarily\n\
    \        Via: SIP/2.0/UDP alice-pc.isp.com\n        Contact: Voicemail@isp.com\n\
    \        From: sip:alice@isp.com\n        To: <sip:Bob@p1.isp.com>;tag=uas1\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n        Diversion:\
    \ <sip:Bob@uas1.isp.com>\n          ;reason=do-not-disturb\n   [9] SIP UAC to\
    \ SIP proxy server 1:\n        ACK sip:Bob@p1.isp.com SIP/2.0\n        Via: SIP/2.0/UDP\
    \ alice-pc.isp.com\n        From: sip:alice@isp.com\n        To: <sip:Bob@p1.isp.com>;tag=uas1\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n   [10] SIP\
    \ UAC (alice-pc) to Voicemail server.\n        INVITE sip:Voicemail@isp.com SIP/2.0\n\
    \        Via: SIP/2.0/UDP alice-pc.isp.com\n        From: sip:alice@isp.com\n\
    \        To: sip:Bob@p1.isp.com\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Diversion: <sip:Bob@uas1.isp.com>\n         \
    \ ;reason=do-not-disturb\n        Content-Type: application/sdp\n   [11] Voicemail\
    \ server to SIP UAC (alice-pc):\n        SIP/2.0 200 OK\n        Via: SIP/2.0/UDP\
    \ alice-pc.isp.com\n        Contact: Voicemail@isp.com\n        From: sip:alice@isp.com\n\
    \        To: <sip:Bob@p1.isp.com>;tag=uas2\n        Call-ID: 12345600@alice-pc.isp.com\n\
    \        CSeq: 1 INVITE\n        Content-Type: application/sdp\n   [12] SIP UAC\
    \ to Voicemail server:\n        ACK sip:Voicemail@isp.com SIP/2.0\n        Via:\
    \ SIP/2.0/UDP alice-pc.isp.com\n        From: sip:alice@isp.com\n        To: <sip:Bob@p1.isp.com>;tag=uas2\n\
    \        Call-ID: 12345600@alice-pc.isp.com\n        CSeq: 1 INVITE\n   Because\
    \ the Diversion header is present, the Voicemail server is able\n   to place Alice's\
    \ message into Bob's voice mailbox.\n8.3.  Questions and Answers on Alternative\
    \ Approaches\n   Question 1:\n   Why do we need the Diversion header when we can\
    \ see the To: header?\n   Answer:\n   a) The To: header is not guaranteed to have\
    \ significance to the\n      called party.\n      For example, the To: header\
    \ may contain a locally significant URL\n      (to the caller) such as a private\
    \ numbering plan, speed dial\n      digits, telephony escape digits, or telephony\
    \ prefix digits.\n      Without a Diversion header, enumerating all possible locally\n\
    \      significant To: headers that anyone might use to contact\n      Bob@uas1.isp.com\
    \ becomes a configuration problem at\n      Voicemail@isp.com and is prone to\
    \ namespace collision.\n      Support for Diversion headers enables Bob to contract\
    \ a third-\n      party service (Voicemail@isp.com) with a single globally\n \
    \     significant URL for his voice mailbox (Bob@uas1.isp.com).\n   b) Given a\
    \ set of multiple diversions, there is a policy decision of\n      which Diversion\
    \ header takes precedence for service logic.\n      Different services (or even\
    \ different users for the same service)\n      may want to configure this policy\
    \ differently (first, last, second\n      to last, etc.).\n   Question 2:\n  \
    \ Why do we need the Diversion header when we can see the Via: header?\n   Answer:\n\
    \   The Via header does not contain information about servers whom have\n   deflected\
    \ the call (using a 3xx).\n9.  Mapping ISUP/ISDN Redirection Information to SIP\
    \ Diversion Header\n   The discussions below regarding ISUP/ISDN reflect generic\
    \ elements in\n   ISUP/ISDN.  In some variations of ISUP/ISDN, the information\
    \ elements\n   are represented differently.  Regardless of the ISUP/ISDN variant,\n\
    \   translation should be performed for the \"first redirecting number\"\n   and\
    \ the \"last redirecting number\".\n   In order to prevent ambiguity, it is important\
    \ to highlight a\n   terminology mismatch between ISUP/ISDN and SIP.  In SIP,\
    \ a \"redirect\"\n   indicates the act of returning a 3xx response.  In ISUP/ISDN,\
    \ a\n   \"redirection\" is diversion of a call by a network entity.  In\n   ISUP/ISDN,\
    \ a call may also be deflected (by an endpoint).  Diversion\n   is the more generic\
    \ term that refers to either the act of an network\n   redirection or endpoint\
    \ deflection.\n   In SIP, Diversion can be implemented as either an upstream 3xx\
    \ (non-\n   recursive) or an additionally forked downstream request (recursive).\n\
    \   In the following text, a lowercase \"redirect\" indicates the SIP\n   usage,\
    \ while an uppercase \"Redirect\" indicates ISUP usage.\n9.1.  Mapping ISUP/ISDN\
    \ Diversion Reason Codes\n   ISUP and ISDN define the following diversion reasons:\n\
    \      0000 = Unknown\n      0001 = Call forwarding busy or called DTE busy\n\
    \      0010 = Call forwarding no reply\n      1111 = Call forwarding unconditional\
    \ or systematic\n             call redirection\n      1010 = Call deflection or\
    \ call forwarding by the called DTE\n      1001 = Call forwarding DTE out of order\n\
    \      Mapping of ISUP/ISDN reason codes to Diversion reason codes is\n      performed\
    \ as follows:\n      ISUP/ISDN reason code       Diversion reason code\n     \
    \ 0001                        \"user-busy\"\n      0010                      \
    \  \"no-answer\"\n      1111                        \"unconditional\"\n      1010\
    \                        \"deflection\"\n      1001                        \"\
    unavailable\"\n      0000                        all others\n9.2.  Mapping ISUP\
    \ Redirection Information to SIP Diversion Header\n   This section describes how\
    \ generic ISUP diversion information\n   elements may be translated across an\
    \ ISUP/SIP gateway.\n9.2.1.  ISUP Definitions\n   Called Party Number        \
    \  The number of the party to which the\n                                call\
    \ is currently being routed.\n   Redirecting Number           The number to which\
    \ the call was being\n                                routed when the last diversion\
    \ occurred.\n   Redirecting Reason           The reason that the last diversion\n\
    \                                occurred.\n   Original Called Number       The\
    \ number to which the call was being\n                                routed when\
    \ the first diversion\n                                occurred.\n   Original\
    \ Redirecting Reason  The reason that the first diversion\n                  \
    \              occurred.\n   Redirection Counter          The count of the total\
    \ number of\n                                diversions that have occurred.\n\
    \   Address Presentation         Indication of whether presentation is\n     \
    \                           allowed or restricted.\n9.2.2.  ISUP Parameters\n\
    \   When a SIP call transits a SIP/ISUP gateway, the following\n   information\
    \ in the ISUP message should be examined/set when\n   translating SIP Diversion\
    \ headers to ISUP diversion information:\n      1) Redirecting Number\n      2)\
    \ Redirecting Reason\n      3) Redirecting Address Presentation\n      4) Original\
    \ Called Number\n      5) Original Redirecting Reason\n      6) Original Address\
    \ Presentation\n      7) Redirection Counter\n   An ISUP message contains information\
    \ on the first and last diversions\n   that occurred.  The Redirection number\
    \ is the number to which the\n   call was being routed when the last diversion\
    \ occurred.  The\n   Redirecting Reason is the reason that the last diversion\
    \ occurred.\n   The Original Called Number is the number to which the call was\
    \ being\n   routed when the first diversion occurred.  The Original Redirecting\n\
    \   Reason is the reason that the first diversion occurred.\n   When only one\
    \ Diversion has occurred, the number to which the call\n   was being routed when\
    \ the diversion occurred is in the Redirecting\n   Number and the reason for that\
    \ diversion is carried in the Redirect\n   Reason.\n9.2.3.  ISUP to SIP Translation\n\
    \   The ISUP Redirecting Number SHOULD be used to set the value of the\n   name-addr\
    \ of the top-most Diversion header.  The ISUP Redirecting\n   Number address presentation\
    \ SHOULD be used to set the value of the\n   diversion-privacy of the top-most\
    \ Diversion header.  The ISUP\n   Redirecting Reason SHOULD be used to set the\
    \ value of the diversion-\n   reason of the top-most Diversion header.  When present,\
    \ the Original\n   Called Number SHOULD be used to set the name-addr of the bottom-most\n\
    \   Diversion header.  When present, the Original Redirecting Reason\n   SHOULD\
    \ be used to set the diversion-reason of the bottom-most\n   Diversion header.\
    \  When present, the Original Address Presentation\n   SHOULD be used to set the\
    \ diversion-privacy of the bottom-most\n   Diversion header.\n   The Redirection\
    \ Counter value minus 1 SHOULD be stored in the\n   diversion- counter associated\
    \ with the top-most Diversion header.\n   Presence of the diversion-counter for\
    \ the bottom-most Diversion\n   header is optional.  If present, the diversion-counter\
    \ of the bottom-\n   most Diversion header SHOULD be 1.\n9.2.4.  SIP to ISUP Translation\n\
    \   The name-addr of the top-most Diversion header SHOULD be used to set\n   the\
    \ ISUP Redirecting Number.  The diversion-reason of the top-most\n   Diversion\
    \ header SHOULD be used to set the ISUP Redirecting Reason.\n   The diversion-privacy\
    \ of the top-most Diversion header SHOULD be used\n   to set the ISUP Redirecting\
    \ Address Presentation.\n   When multiple Diversion headers are present, the name-addr\
    \ of the\n   bottom- most Diversion header SHOULD be used to set the ISUP Original\n\
    \   Redirecting Number.  When multiple Diversion headers are present, the\n  \
    \ diversion-reason of the bottom-most Diversion header SHOULD be used\n   to set\
    \ the ISUP Original Redirecting Reason.  When multiple Diversion\n   headers are\
    \ present, the diversion-privacy of the bottom-most\n   Diversion header SHOULD\
    \ be used to set the ISUP Original Redirecting\n   Address Presentation.\n   The\
    \ ISUP Redirection Counter SHOULD be set equal to the sum of the\n   counters\
    \ of all Diversion headers in the SIP message.  A Diversion\n   header that does\
    \ not explicitly specify a diversion-counter tag\n   counts as 1.\n9.2.5.  Example\
    \ of ISUP to SIP Translation\n                                   ISUP/SIP GW\n\
    \                                       |\n--IAM--------------------------------->|\n\
    \  Called Party Number    =+19195551004 |\n  Redirecting Number     =+19195551002\
    \ |\n    Address Presentation =presentation restricted\n  Original Called Number\
    \ =+19195551001 |\n  RedirectionInformation:              |\n    Original Redirecting\
    \ Reason = Unconditional (1111)\n    Redirecting Reason = User busy (0001)\n \
    \   Redirection Counter = 5            |\n                                   \
    \    |\n                                       |--INVITE +19195551004------>\n\
    \                                       |  Diversion: <tel:+19195551002>\n   \
    \                                    |    ;reason=user-busy\n                \
    \                       |    ;privacy=\"full\"\n                             \
    \          |    ;counter=4\n                                       |  Diversion:\
    \ <tel:+19195551001>\n                                       |    ;reason=unconditional\n\
    \                                       |    ;counter=1\n                    \
    \                   |\n                                       |\n9.2.6.  Example\
    \ of SIP to ISUP Translation\n                                   ISUP/SIP GW\n\
    \                                       |\n                                  \
    \     |<--INVITE +19195551004------\n                                       |\
    \  Diversion: <tel:+19195551002>\n                                       |   \
    \ ;reason=user-busy\n                                       |    ;privacy=\"full\"\
    \n                                       |    ;counter=4\n                   \
    \                    |  Diversion: <tel:+19195551001>\n                      \
    \                 |    ;reason=unconditional\n                               \
    \        |    ;counter=1\n                                       |\n         \
    \                              |\n                                       |\n<--IAM---------------------------------|\n\
    \  Called Party Number    =+19195551004 |\n  Redirecting Number     =+19195551002\
    \ |\n    Address Presentation =presentation restricted\n  Original Called Number\
    \ =+19195551001 |\n  RedirectionInformation:              |\n    Original Redirecting\
    \ Reason = Unconditional (1111)\n    Redirecting Reason = User busy (0001)\n \
    \   Redirection Counter = 5            |\n9.3.  Mapping ISDN Redirection Information\
    \ to SIP Diversion Header\n   An ISDN message can contain up to two instances\
    \ of a Redirecting\n   Number information element.  When a diversion occurs, an\
    \ additional\n   Redirection number information element is added.  When a third\
    \ (or\n   greater) diversion occurs, the new Redirecting Number information\n\
    \   element replaces the bottom-most Redirection number information\n   element.\n\
    9.3.1.  ISDN Definitions\n   Called Party Number          The number of the party\
    \ to which the\n                                call is currently being routed.\n\
    \   Redirecting Number\n   information element          Aggregate information\
    \ element that\n                                contains Redirecting number and\
    \ Reason\n                                for diversion.\n   Redirecting Number\
    \           The number to which the call was being\n                         \
    \       routed when the last diversion occurred.\n   Reason for Diversion    \
    \     The reason that the last diversion\n                                occurred.\n\
    \   Origin of Number             Indicates whether the number is user\n      \
    \                          provided and screened or network\n                \
    \                provided.\n   Presentation Status          Indicates if presentation\
    \ is allowed or\n                                prohibited.\n9.3.2.  ISDN Parameters\n\
    \   When a SIP call transits a SIP/ISDN gateway, the following\n   information\
    \ in the ISDN message should be examined/set when\n   translating SIP Diversion\
    \ headers to ISDN diversion information:\n      1) Redirecting Number of the top-most\
    \ Redirecting Number\n         information element\n      2) Reason for diversion\
    \ of the top-most Redirection number\n         information element\n      3) Origin\
    \ of Number and Presentation Status of the top-most\n         Redirection number\
    \ information element\n      4) Redirection number of the bottom-most Redirection\
    \ number\n         information element\n      5) Reason for diversion of the bottom-most\
    \ Redirection number\n         information element\n      6) Origin of Number\
    \ and Presentation Status of the bottom-most\n         Redirection number information\
    \ element\n   An ISDN message contains information on the first and last diversions\n\
    \   that occurred.  The top-most Redirection number information element\n   contains\
    \ information (including the Redirecting Number, Origin of\n   Number, Presentation\
    \ Status, and Reason for diversion) about the last\n   diversion that occurred.\
    \  The bottom-most Redirection number\n   information element contains information\
    \ (including the Redirecting\n   Number, Origin of Number, Presentation Status,\
    \ and Reason for\n   diversion) about the first diversion that occurred.\n   If\
    \ only one Diversion has occurred, only one Redirection number\n   information\
    \ element is present.\n   The Redirecting Number information element has the same\
    \ Type of\n   Number/Numbering Plan, and Digits as the Calling Party Number\n\
    \   information element.\n   There is no Redirection Counter associated with this\
    \ ISDN information\n   element.\n   Notice that the order of the Redirection number\
    \ information elements\n   in an ISDN message (top=first, bottom=last) is reversed\
    \ from the\n   order of Diversion headers in a SIP message (top=last, bottom=first).\n\
    9.3.3.  ISDN to SIP Translation\n   The Redirecting Number of the top-most ISDN\
    \ Redirecting Number\n   information element SHOULD be used to set the value of\
    \ the name-addr\n   of the bottom-most Diversion header.  The Reason for Diversion\
    \ of the\n   top-most ISDN Redirecting Number information element SHOULD be used\n\
    \   to set the value of the diversion-reason of the bottom-most Diversion\n  \
    \ header.\n   The Origin of Number of the top-most ISDN Redirecting Number\n \
    \  information element SHOULD be used to set the value of the diversion-\n   screen\
    \ of the bottom-most Diversion header.  The Presentation Status\n   of the top-most\
    \ ISDN Redirecting Number information element SHOULD be\n   used to set the value\
    \ of the diversion-privacy of the bottom-most\n   Diversion header.\n   The Redirecting\
    \ Number of the bottom-most ISDN Redirecting Number\n   information element SHOULD\
    \ be used to set the value of the name-addr\n   of the top-most Diversion header.\
    \  The Reason for Diversion of the\n   bottom-most ISDN Redirecting Number information\
    \ element SHOULD be\n   used to set the value of the diversion-reason of the top-most\n\
    \   Diversion header.\n   The Origin of Number of the bottom-most ISDN Redirecting\
    \ Number\n   information element SHOULD be used to set the value of the diversion-\n\
    \   screen of the top-most Diversion header.  The Presentation Status of\n   the\
    \ bottom-most ISDN Redirecting Number information element SHOULD be\n   used to\
    \ set the value of the diversion-privacy of the top-most\n   Diversion header.\n\
    \   Presence of the diversion-counter in each of the Diversion headers is\n  \
    \ optional.  If present, the diversion-counter of each Diversion header\n   SHOULD\
    \ be 1.\n9.3.4.  SIP to ISDN Translation\n   The name-addr of the top-most Diversion\
    \ header SHOULD be used to set\n   the Redirecting Number of the bottom-most ISDN\
    \ Redirecting Number\n   information element.\n   The diversion-reason of the\
    \ top-most Diversion header SHOULD be used\n   to set the Reason for Diversion\
    \ of the bottom-most ISDN Redirecting\n   Number information element.\n   The\
    \ diversion-screen of the top-most Diversion header SHOULD be used\n   to set\
    \ the Origin of Number of the bottom-most ISDN Redirecting\n   Number information\
    \ element.\n   The diversion-privacy of the top-most Diversion header SHOULD be\
    \ used\n   to set the Presentation Status of the bottom-most ISDN Redirecting\n\
    \   Number information element.\n   The name-addr of the bottom-most Diversion\
    \ header SHOULD be used to\n   set the Redirecting Number of the top-most ISDN\
    \ Redirecting Number\n   information element.\n   The diversion-reason of the\
    \ bottom-most Diversion header SHOULD be\n   used to set the Reason for Diversion\
    \ of the top-most ISDN Redirecting\n   Number information element.\n   The diversion-screen\
    \ of the bottom-most Diversion header SHOULD be\n   used to set the Origin of\
    \ Number of the top-most ISDN Redirecting\n   Number information element.\n  \
    \ The diversion-privacy of the bottom-most Diversion header SHOULD be\n   used\
    \ to set the Presentation Status of the top-most ISDN Redirecting\n   Number information\
    \ element.\n9.3.5.  Example of ISDN to SIP Translation\n                     \
    \   ISDN/SIP GW\n                                       |\n--Setup------------------------------->|\n\
    \  Called party number      =+19195551004\n  Redirecting Number information element:\n\
    \    Redirecting Number     =+19195551001\n    Reason for redirection = Unconditional\
    \ (1111)\n    Origin of Number       = passed network screening\n    Presentation\
    \ Status    = presentation allowed\n  Redirecting Number information element:\n\
    \    Redirecting Number     =+19195551002\n    Reason for redirection = User busy\
    \ (0001)\n    Origin of Number       = passed network screening\n    Presentation\
    \ Status    = presentation prohibited\n                                      \
    \ |\n                                       |--INVITE tel:+19195551004---->\n\
    \                                       |  Diversion: <tel:+19195551002>\n   \
    \                                    |    ;reason=user-busy\n                \
    \                       |    ;screen=\"yes\"\n                               \
    \        |    ;privacy=\"off\"\n                                       |  Diversion:\
    \ <tel:+19195551001>\n                                       |    ;reason=unconditional\n\
    \                                       |    ;screen=\"yes\"\n               \
    \                        |    ;privacy=\"full\"\n                            \
    \           |\n                                       |\n9.3.6.  Example of SIP\
    \ to ISDN Translation\n                                   ISDN/SIP GW\n      \
    \                                 |\n<--Setup-------------------------------|\n\
    \  Called party number      =+19195551004\n  Redirecting Number information element:\n\
    \    Redirecting Number     =+19195551001\n    Reason for redirection = Unconditional\
    \ (1111)\n    Origin of Number       = passed network screening\n    Presentation\
    \ Status    = presentation allowed\n  Redirecting Number information element:\n\
    \    Redirecting Number     =+19195551002\n    Reason for redirection = User busy\
    \ (0001)\n    Origin of Number       = passed network screening\n    Presentation\
    \ Status    = presentation prohibited\n                                      \
    \ |\n                                       |<--INVITE tel:+19195551004----\n\
    \                                       |  Diversion: <tel:+19195551002>\n   \
    \                                    |    ;reason=user-busy\n                \
    \                       |    ;screen=\"yes\"\n                               \
    \        |    ;privacy=\"off\n                                       |  Diversion:\
    \ <tel:+19195551001>\n                                       |    ;reason=unconditional\n\
    \                                       |    ;screen=\"yes\"\n               \
    \                        |    ;privacy=\"full\"\n                            \
    \           |\n9.4.  Information Loss in SIP to ISUP/ISDN Translation\n   Because\
    \ ISUP and ISDN only support a subset of the information in a\n   SIP Diversion\
    \ header, information loss occurs during translation at a\n   SIP/ISUP or SIP/ISDN\
    \ boundary.\n9.4.1.  Loss of Diversion URI Information\n   Because ISUP and ISDN\
    \ only support a subset of URI types\n   (specifically tel: URIs and sip:x@y;user=phone\
    \ URIs), diversion\n   information occurring for other URI types may be lost when\
    \ crossing\n   from SIP to ISDN or ISUP.\n9.4.2.  Loss of Diversion Reason Information\n\
    \   Because ISUP and ISDN only support a subset of the reason codes\n   supported\
    \ by the Diversion header, specific reason code information\n   may be lost when\
    \ crossing from SIP to ISDN or ISUP.\n9.4.3.  Loss of Diversion Counter Information\n\
    \   Because ISDN does not support a counter field (indicating the number\n   of\
    \ diversions that have occurred), counter information may be lost\n   when crossing\
    \ from SIP to ISDN.\n10.  Contributors\n   Special acknowledgement to both Bryan\
    \ Byerly and JR Yang.  As\n   original authors of this document, both were instrumental\
    \ is getting\n   this document written.\n11.  Acknowledgements\n   We would like\
    \ to thank David Williams, Ameet Kher, Satya Khatter,\n   Manoj Bhatia, Shail\
    \ Bhatnagar, Denise Caballero-Mccann, Kara Adams,\n   Charles Eckel of Cisco Systems,\
    \ and Bert Culpepper of InterVoice-\n   Brite for their insights, inputs, and\
    \ comments.\n12.  Normative References\n   [RFC2119]  Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston,\n              A., Peterson, J., Sparks, R., Handley, M., and\
    \ E.\n              Schooler, \"SIP: Session Initiation Protocol\", RFC 3261,\n\
    \              June 2002.\nAuthors' Addresses\n   Steve Levy\n   Cisco Systems\n\
    \   7025 Kit Creek Road P.O. Box 14987 Research Triangle Park,\n   NC  27709\n\
    \   USA\n   EMail: stlevy@cisco.com\n   Marianne Mohali (editor)\n   Orange Labs\n\
    \   38-40 rue du General Leclerc\n   Issy-Les-Moulineaux Cedex 9  92794\n   France\n\
    \   Phone: +33145294514\n   EMail: marianne.mohali@orange-ftgroup.com\n"
