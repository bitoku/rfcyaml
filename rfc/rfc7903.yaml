- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                        S. Leonard
  contents:
  - "Independent Submission                                        S. Leonard\n  \
    \                     Windows Image Media Types\n"
- title: Abstract
  contents:
  - "Abstract\n   This document registers media types for certain image formats\n\
    \   promulgated in Microsoft Windows, namely image/wmf, image/x-wmf,\n   image/emf,\
    \ image/x-emf, and image/bmp for use with Windows Metafile,\n   Enhanced Metafile,\
    \ and Windows Bitmap formats.  Originally designed\n   for Microsoft Windows 2.0\
    \ and 3.0, these image files are intended to\n   be portable between applications\
    \ and devices, and they may contain\n   both vector and raster graphics.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7903.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Windows Metafiles ..........................................2\n  \
    \    1.2. Windows Bitmaps ............................................3\n   2.\
    \ Windows Metafile Media Type Registration Application ............4\n   3. Enhanced\
    \ Metafile Media Type Registration Application ...........6\n   4. Windows Bitmap\
    \ Media Type Registration Application ..............9\n   5. IANA Considerations\
    \ ............................................11\n   6. Security Considerations\
    \ ........................................11\n   7. References .....................................................11\n\
    \      7.1. Normative References ......................................11\n  \
    \    7.2. Informative References ....................................11\n   Author's\
    \ Address ..................................................12\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Windows Metafiles
  contents:
  - "1.1.  Windows Metafiles\n   Long before the invention of Scalable Vector Graphics,\
    \ Microsoft\n   Corporation recognized the value of recording images in a format\
    \ that\n   its applications and operating systems could easily render\n   irrespective\
    \ of the output device.  With the release of Windows 3.0,\n   Microsoft released\
    \ its Windows Metafile (WMF) format, which can\n   contain vector and raster graphics\
    \ in one package.  As a binary\n   format that needed to work on 16-bit machines,\
    \ WMF is comprised of a\n   sequence of record structures.  Each record contains\
    \ drawing\n   commands, object definitions, and configuration settings.  When\
    \ a\n   metafile is processed, the image can be rendered on a display, output\n\
    \   to a printer or plotter, stored in memory, or saved to some\n   persistent\
    \ storage.  Reflecting the relationship to the Windows\n   Graphics Device Interface\
    \ (GDI) API, WMF data is \"played\" to a\n   playback device context in the same\
    \ manner that PostScript content is\n   treated as an executable program that\
    \ results in the output of the\n   original document.\n   As Microsoft's first\
    \ 32-bit operating system, Windows NT 3.1\n   introduced an overhaul to the Windows\
    \ API (\"Win32\") and the in-memory\n   formats upon which those APIs relied.\
    \  The Enhanced Metafile (EMF)\n   format was created at this time, using 32-bit\
    \ values instead of WMF's\n   16-bit values.  In Windows XP, Microsoft extended\
    \ EMF with \"EMF+\",\n   adding support for Windows GDI+.\n   Many implementations\
    \ of WMF and EMF were created because of Windows'\n   commercial success in the\
    \ 1990s.  A large body of free and\n   commercially available clip art and other\
    \ artwork exists in this\n   format.  Furthermore, WMF content appears non-normatively\
    \ in certain\n   standards (e.g., [OOXML]); the usage is common enough that an\n\
    \   implementer would almost certainly need to support it for basic\n   interoperability.\n\
    \   Microsoft publicly documented the WMF format as early as the 1992\n   Windows\
    \ 3.1 SDK.  Since 2007, Microsoft has released the format\n   specifications [MS-WMF],\
    \ [MS-EMF], and [MS-EMF+] under its Open\n   Specification Promise [MS-OSP].\n"
- title: 1.2.  Windows Bitmaps
  contents:
  - "1.2.  Windows Bitmaps\n   Long before the invention of Portable Network Graphics\
    \ (PNG),\n   Microsoft Corporation and IBM Corporation needed to record images\
    \ in\n   a format that their applications and operating systems could easily\n\
    \   render on low-end machines (Intel 80286).  The resulting \"BMP\" format\n\
    \   contains a single raster graphic with basic header fields that can be\n  \
    \ easily mapped (or \"blitted\") to locations in memory.  As computing\n   moved\
    \ from 16-bit to 32-bit, BMP evolved to contain 32-bit\n   structures.  As the\
    \ '90s wore on, the venerable BMP got boosts with\n   support for additional color\
    \ spaces, color profiles, and compression\n   formats.  The same basic format\
    \ can be used to convey 2-bit black-\n   and-white bitmaps with a 1-bit alpha\
    \ mask from the '80s, and full-\n   color Ultra HD images on leading-edge displays.\
    \  BMP is a building\n   block of other formats, including Windows Metafiles,\
    \ Windows Icons,\n   and Windows Cursors.\n   Many implementations of BMP were\
    \ created because of Windows'\n   commercial success in the 1990s.  Usage of the\
    \ format for interchange\n   has declined since the advent of PNG (for lossless\
    \ raster graphics)\n   and JPEG (for lossy raster graphics); however, a large\
    \ body of free\n   and commercially available BMP artwork exists.  Since Windows\
    \ Icons\n   are a building block of \"favicon.ico\" web technology, an implementer\n\
    \   would almost certainly need to support this format for basic\n   interoperability.\n\
    \   Microsoft publicly documented the BMP format as early as the 1992\n   Windows\
    \ 3.1 SDK (in the Windows Metafile documentation).  Since 2007\n   Microsoft has\
    \ released the format specification [MS-WMF], which\n   includes most components\
    \ of the Windows Bitmap format, under its Open\n   Specification Promise [MS-OSP].\
    \  See Section 2.2.2.9 of [MS-WMF]\n   (DeviceIndependentBitmap Object).  BMP\
    \ data begins with a\n   BITMAPFILEHEADER and is followed by one of the bitmap\
    \ headers\n   (BITMAPINFOHEADER, BITMAPV4HEADER, or BITMAPV5HEADER), optional\
    \ color\n   table data, bitmap data, and optional profile data, in that order\n\
    \   [BMPSTOR].\n   Implementers need to be aware of the [MICE] vulnerability,\
    \ and to\n   guard against it.  Some details are included in the completed\n \
    \  registration template.\n"
- title: 2.  Windows Metafile Media Type Registration Application
  contents:
  - "2.  Windows Metafile Media Type Registration Application\n   Type name: image\n\
    \   Subtype name: wmf\n   Required parameters: None.\n   Optional parameters:\n\
    \      DEFAULT_CHARSET: The character set intended when the CharacterSet\n   \
    \      enumeration (see the WMF specification) specifies\n         DEFAULT_CHARSET.\
    \  The value of this parameter is a charset from\n         the IANA \"Character\
    \ Sets\" registry\n         <http://www.iana.org/assignments/character-sets>.\
    \  When this\n         parameter is not specified, DEFAULT_CHARSET has the following\n\
    \         meaning in the WMF specification: \"a character set based on the\n \
    \        current system locale; for example, when the system locale is\n     \
    \    United States English, the default character set is\n         ANSI_CHARSET\"\
    \ (which is Windows-1252, more or less).  That is,\n         when not specified,\
    \ the default character set is system\n         dependent.  This optional parameter\
    \ is new to this registration\n         and may not enjoy widespread support for\
    \ some time.  Therefore,\n         EMF instead of WMF (or if necessary under the\
    \ circumstances,\n         embedded EMF within WMF) is a more sensible choice\
    \ when text is\n         present.\n   Encoding considerations: Binary.\n   Security\
    \ considerations:\n      The Windows Metafile format's security history is punctuated\
    \ in\n      2005-2006 with the disclosure of the Metafile Image Code Execution\n\
    \      (\"MICE\") vulnerability.  MICE won the 2007 Pwnie Award for \"Mass\n \
    \     0wnage\" and \"Breaking the Internet\".  The official Microsoft\n      security\
    \ bulletin describes that the flaw occurs because Windows\n      Metafiles can\
    \ set the SETABORTPROC value of the MetafileEscapes\n      enumeration (accessible\
    \ via the META_ESCAPE record), allowing for\n      arbitrary code execution, i.e.,\
    \ \"active content\".\n      Windows Metafiles can contain Enhanced Metafiles\
    \ using the\n      META_ESCAPE_ENHANCED_METAFILE record; thus, the security\n\
    \      considerations of EMF apply to WMF.\n      Windows Metafiles are historically\
    \ very buggy.  As the original\n      intent was to replicate Windows GDI calls,\
    \ flaws in GDI, or in a\n      display or printer driver implementing the backend\
    \ to GDI, could\n      be exploitable.  WMF implementations not backed by Windows\
    \ GDI\n      have different risks: namely, while a malicious WMF author may not\n\
    \      consider the non-Windows GDI implementation as a primary target,\n    \
    \  WMF has many \"corner case\" records for which an implementation's\n      processing\
    \ may not have received the same level of scrutiny as the\n      Windows implementation.\
    \  \"Fuzzing\" the implementation is\n      appropriate.\n      As a \"basic\"\
    \ image format, the image/wmf media type does not\n      employ executable content\
    \ and provides no facilities for privacy\n      or integrity.\n   Interoperability\
    \ considerations:\n      Windows Metafile is the original 16-bit metafile format;\
    \ it was\n      released in 1990 at what some computer historians might consider\n\
    \      the \"zenith\" of the desktop publishing revolution.  Accordingly,\n  \
    \    there is a large body of free and commercially available clip art\n     \
    \ that is still in use, either independently or embedded in\n      productivity\
    \ documents (word processing documents, desktop\n      publishing documents, slideshows,\
    \ presentations, spreadsheets, and\n      workbooks).  For example, references\
    \ to WMF content appear (non-\n      normatively) in Office Open XML.  To say\
    \ that support for this\n      format is necessary for interoperability would\
    \ not be an\n      understatement.\n      Accommodations for comments or arbitrary\
    \ data storage in Windows\n      Metafiles are virtually non-existent.  However,\
    \ Windows Metafiles\n      can contain Enhanced Metafiles using the\n      META_ESCAPE_ENHANCED_METAFILE\
    \ record, so an implementation that\n      handles Windows Metafiles is also expected\
    \ to handle enhanced\n      metafile content.  Windows Metafiles can store and\
    \ output text\n      strings (see META_TEXTOUT and META_EXTTEXTOUT records), but\
    \ the\n      encodings of the strings may be ambiguous.  Unicode encodings are\n\
    \      not possible without the DEFAULT_CHARSET parameter defined in this\n  \
    \    registration.\n      The previously unregistered type image/x-wmf is also\
    \ in wide use.\n      Accordingly, it is registered as a deprecated alias.\n \
    \  Published specification:\n      WMF: Microsoft Corporation, \"[MS-WMF]: Windows\
    \ Metafile Format\",\n      v20160714 (Rev 13.1), July 2016,\n      <http://msdn.microsoft.com/library/cc250370>.\n\
    \   Applications that use this media type:\n      Office productivity applications;\
    \ clip art applications; desktop\n      publishing applications; some web browsers\
    \ (e.g., Internet\n      Explorer).\n   Fragment identifier considerations: None.\n\
    \   Additional information:\n      Deprecated alias names for this type: image/x-wmf\n\
    \      Magic number(s): D7 CD C6 9A (little-endian DWORD 0x9AC6CDD7)\n      File\
    \ extension(s): .wmf\n      Macintosh file type code(s):\n         None.  A uniform\
    \ type identifier (UTI) of \"com.microsoft.wmf\"\n         is suggested.\n   Person\
    \ & email address to contact for further information:\n      Sean Leonard <dev+ietf@seantek.com>\n\
    \   Restrictions on usage: None.\n   Author/Change controller: Sean Leonard <dev+ietf@seantek.com>\n\
    \   Intended usage: COMMON\n   Provisional registration? No\n"
- title: 3.  Enhanced Metafile Media Type Registration Application
  contents:
  - "3.  Enhanced Metafile Media Type Registration Application\n   Type name: image\n\
    \   Subtype name: emf\n   Required parameters: None.\n   Optional parameters:\
    \ None.\n   Encoding considerations: Binary.\n   Security considerations:\n  \
    \    Enhanced Metafiles are not afflicted with the Metafile Image Code\n     \
    \ Execution (\"MICE\") vulnerability.  There has been no public\n      disclosure\
    \ of vulnerabilities specific to EMF or EMF+ to date.\n      Neither EMF nor EMF+\
    \ are designed to contain \"active content\".\n      Nonetheless, Enhanced Metafiles\
    \ can contain Encapsulated\n      PostScript (EPS) data; thus, the security considerations\
    \ of\n      PostScript processing may also apply to EMF.\n      As the original\
    \ intent was to replicate Windows GDI calls, flaws\n      in GDI, or in a display\
    \ or printer driver implementing the backend\n      to GDI, could be exploitable\
    \ with maliciously crafted EMF content.\n      EMF implementations not backed\
    \ by Windows GDI have different\n      risks: namely, while a malicious EMF author\
    \ may not consider the\n      non-Windows GDI implementation as a primary target,\
    \ EMF has many\n      \"corner case\" records for which an implementation's processing\
    \ may\n      not have received the same level of scrutiny as the Windows\n   \
    \   implementation.  \"Fuzzing\" the implementation is appropriate.  It\n    \
    \  is also possible that EMF+ data is \"safe\" while EMF data contains\n     \
    \ an exploit (or vice versa); the EMF+-aware implementation (such as\n      an\
    \ application designed for GDI+ on Windows XP or above) would\n      skip the\
    \ \"unsafe\" data while another implementation would fall\n      prey to the exploit.\n\
    \      As a \"basic\" image format, the image/emf media type does not\n      employ\
    \ executable content and provides no facilities for privacy\n      or integrity.\n\
    \   Interoperability considerations:\n      Enhanced Metafile is the 32-bit metafile\
    \ format; it was released\n      in 1992 along with Windows NT 3.1.  There is\
    \ a large body of free\n      and commercially available clip art that is still\
    \ in use, either\n      independently or embedded in productivity documents (word\n\
    \      processing documents, desktop publishing documents, slideshows,\n     \
    \ presentations, spreadsheets, and workbooks).  To say that support\n      for\
    \ this format is necessary for interoperability would not be an\n      understatement.\n\
    \      Enhanced Metafiles have extensive accommodations for comments and\n   \
    \   arbitrary data storage.  Enhanced Metafiles can store and output\n      text\
    \ strings.  Mercifully, the encodings of these strings are\n      well-defined.\
    \  Record examples include EMR_EXTTEXTOUTA (US-ASCII),\n      EMR_EXTTEXTOUTW\
    \ (UTF16-LE), EMR_POLYTEXTOUTA (US-ASCII),\n      EMR_POLYTEXTOUTW (UTF16-LE),\
    \ and EMR_SMALLTEXTOUT (UTF16-LE or the\n      low-order 8 bits of UTF16-LE --\
    \ effectively ISO-8859-1 --\n      depending on ETO_SMALL_CHARS).\n      Enhanced\
    \ Metafiles can contain Encapsulated PostScript (EPS) data\n      in the EpsData\
    \ object.  The FormatSignature EPS_SIGNATURE\n      (0x46535045, in little-endian)\
    \ is used instead of\n      ENHMETA_SIGNAUTRE (0x464D4520, in little-endian) in\
    \ such a case.\n      Windows XP introduced the GDI+ API, along with EMF+.  EMF+\
    \ is\n      actually an embedded format in which GDI+ commands are stored as\n\
    \      EMF comment records (EMR_COMMENT_EMFPLUS record type).  Content\n     \
    \ containing EMF+ data can be identified as \"EMF+ Only\" (only EMF+;\n      the\
    \ EMF records are not sufficient to reconstitute the drawing) or\n      \"EMF+\
    \ Dual\" (both EMF records alone or EMF+ records alone, when\n      played back,\
    \ are sufficient to reconstitute the drawing).  Support\n      for EMF+ records\
    \ may not be as extensive as support for the\n      original EMF records.\n  \
    \    The previously unregistered type image/x-emf is also in wide use.\n     \
    \ Accordingly, it is registered as a deprecated alias.\n   Published specification:\n\
    \      EMF: Microsoft Corporation, \"[MS-EMF]: Enhanced Metafile Format\",\n \
    \     v20160714 (Rev 12.0), July 2016,\n      <http://msdn.microsoft.com/library/cc230514>.\n\
    \      EMF+: Microsoft Corporation, \"[MS-EMFPLUS]: Enhanced Metafile\n      Format\
    \ Plus Extensions\", v20160714 (Rev 14.1), July 2016,\n      <http://msdn.microsoft.com/library/cc230724>.\n\
    \   Applications that use this media type:\n      Office productivity applications;\
    \ clip art applications; desktop\n      publishing applications; some web browsers\
    \ (e.g., Internet\n      Explorer).\n   Fragment identifier considerations: None.\n\
    \   Additional information:\n      Deprecated alias names for this type: image/x-emf\n\
    \      Magic number(s):\n         01 00 00 00 (little-endian DWORD 0x00000001),\
    \ corresponding to\n         the EMR_HEADER Type field.\n         The next field\
    \ (EMR_HEADER Size) should be at least 88 (little-\n         endian DWORD 0x00000050).\n\
    \      File extension(s): .emf (for both EMF and EMF+ content)\n      Macintosh\
    \ file type code(s):\n         None.  A uniform type identifier (UTI) of \"com.microsoft.emf\"\
    \n         is suggested.\n   Person & email address to contact for further information:\n\
    \      Sean Leonard <dev+ietf@seantek.com>\n   Restrictions on usage: None.\n\
    \   Author/Change controller: Sean Leonard <dev+ietf@seantek.com>\n   Intended\
    \ usage: COMMON\n   Provisional registration? No\n"
- title: 4.  Windows Bitmap Media Type Registration Application
  contents:
  - "4.  Windows Bitmap Media Type Registration Application\n   Type name: image\n\
    \   Subtype name: bmp\n   Required parameters: None.\n   Optional parameters:\
    \ None.\n   Encoding considerations: Binary.\n   Security considerations:\n  \
    \    Bitmaps have a mostly unremarkable security history.\n      Because BMP data\
    \ can encapsulate JPEG or PNG data (BI_JPEG, BI_PNG\n      values of the Compression\
    \ enumeration in Section 2.1.1.7 of the\n      WMF specification), the security\
    \ considerations of JPEG and PNG\n      processing may also apply to BMP.\n  \
    \    As a \"basic\" image format, the image/bmp media type does not\n      employ\
    \ executable content and provides no facilities for privacy\n      or integrity.\n\
    \   Interoperability considerations:\n      Uncompressed Windows Bitmaps can be\
    \ rather large.  If there is a\n      need to compress an image, modern applications\
    \ should consider\n      emitting JPEG or PNG data instead of embedding them in\
    \ BMP\n      payloads.\n   Published specification:\n      WMF: Microsoft Corporation,\
    \ \"[MS-WMF]: Windows Metafile Format\",\n      v20160714 (Rev 13.1), July 2016,\n\
    \      <http://msdn.microsoft.com/library/cc250370>.\n      BMP: Microsoft Corporation,\
    \ \"Bitmap Storage\", MSDN ID dd183391,\n      <http://msdn.microsoft.com/library/dd183391>.\n\
    \   Applications that use this media type:\n      Office productivity applications;\
    \ clip art applications; desktop\n      publishing applications; web browsers;\
    \ graphics processing\n      applications.\n   Fragment identifier considerations:\
    \ None.\n   Additional information:\n      Magic number(s):\n         42 4D (\"\
    BM\"), meaning \"bitmap\".  The next field\n         (BITMAPFILEHEADER bfSize)\
    \ is a little-endian DWORD indicating\n         the size of the bitmap content\
    \ in bytes.\n      File extension(s): .bmp, .dib\n      Macintosh file type code(s):\n\
    \         \"BMP \", \"BMPf\", or \"BMPp\".  Apple has promulgated a uniform\n\
    \         type identifier (UTI) of \"com.microsoft.bmp\".\n   Person & email address\
    \ to contact for further information:\n      Sean Leonard <dev+ietf@seantek.com>\n\
    \   Restrictions on usage: None.\n   Author/Change controller: Sean Leonard <dev+ietf@seantek.com>\n\
    \   Intended usage: COMMON\n   Provisional registration? No\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has registered the media types image/wmf, image/x-wmf,\n\
    \   image/emf, image/x-emf, and image/bmp in the standards tree using the\n  \
    \ applications provided in Sections 2, 3, and 4 of this document.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   See the registration templates for their respective\
    \ security\n   considerations.\n   The Metafile Image Code Execution (MICE) vulnerability\
    \ won the 2007\n   Pwnie Award for \"Mass 0wnage\" and \"Breaking the Internet\"\
    \ [PWNIES07].\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [BMPSTOR]  Microsoft Corporation, \"Bitmap Storage\"\
    , MSDN ID dd183391,\n              <http://msdn.microsoft.com/library/dd183391>.\n\
    \   [MS-EMF]   Microsoft Corporation, \"[MS-EMF]: Enhanced Metafile\n        \
    \      Format\", v20160714 (Rev 12.0), July 2016,\n              <http://msdn.microsoft.com/library/cc230514>.\n\
    \   [MS-EMF+]  Microsoft Corporation, \"[MS-EMFPLUS]: Enhanced Metafile\n    \
    \          Format Plus Extensions\", v20160714 (Rev 14.1), July 2016,\n      \
    \        <http://msdn.microsoft.com/library/cc230724>.\n   [MS-WMF]   Microsoft\
    \ Corporation, \"[MS-WMF]: Windows Metafile\n              Format\", v20160714\
    \ (Rev 13.1), July 2016,\n              <http://msdn.microsoft.com/library/cc250370>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [MICE]     Microsoft Corporation, \"Vulnerability\
    \ in Graphics\n              Rendering Engine Could Allow Remote Code Execution\n\
    \              (912919)\", MS06-001, V1.0, January 2006,\n              <https://technet.microsoft.com/library/security/ms06-001>.\n\
    \   [MS-OSP]   Microsoft Corporation, \"Open Specification Promise\",\n      \
    \        February 2007, <https://msdn.microsoft.com/\n              en-us/openspecifications/dn646765>.\n\
    \   [OOXML]    Ecma International, \"Office Open XML File Formats\",\n       \
    \       Standard ECMA-376, Fourth Edition, ISO/IEC 29500, December\n         \
    \     2012, <http://www.ecma-international.org/publications/\n              standards/Ecma-376.htm>.\n\
    \   [PWNIES07] Pwnie Awards LLC, \"Winners of Pwnie Awards 2007\", 2007,\n   \
    \           <http://pwnies.com/archive/2007/winners/>.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Sean Leonard\n   Penango, Inc.\n   5900 Wilshire Boulevard\n\
    \   21st Floor\n   Los Angeles, CA  90036\n   United States of America\n   Email:\
    \ dev+ietf@seantek.com\n   URI:   http://www.penango.com/\n"
