- contents:
  - '                 Support of Address Families in OSPFv3

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes a mechanism for supporting multiple address\n
    \  families (AFs) in OSPFv3 using multiple instances.  It maps an AF to\n   an
    OSPFv3 instance using the Instance ID field in the OSPFv3 packet\n   header.  This
    approach is fairly simple and minimizes extensions to\n   OSPFv3 for supporting
    multiple AFs.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5838.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n     1.1.  Design Considerations  . . . . . . . . . . . . . .
    . . . .  2\n     1.2.  Requirements Notation  . . . . . . . . . . . . . . . .
    . .  3\n   2.  Protocol Details . . . . . . . . . . . . . . . . . . . . . . .
    \ 3\n     2.1.  Instance ID Values for New AFs . . . . . . . . . . . . . .  3\n
    \    2.2.  OSPFv3 Options Changes . . . . . . . . . . . . . . . . . .  4\n     2.3.
    \ Advertising Prefixes in AFs Other Than IPv6  . . . . . . .  4\n     2.4.  Changes
    to the Hello Packet Processing . . . . . . . . . .  4\n     2.5.  Next-Hop Calculation
    for IPv4 Unicast and Multicast AFs  .  5\n     2.6.  AS-External-LSA and NSSA-LSA
    Forwarding Address for\n           IPv4 Unicast and IPv4 Multicast AFs  . . .
    . . . . . . . .  5\n     2.7.  Database Description Maximum Transmission Unit
    (MTU)\n           Specification for Non-IPv6 AFs . . . . . . . . . . . . . .  6\n
    \    2.8.  Operation over Virtual Links . . . . . . . . . . . . . . .  8\n   3.
    \ Backward Compatibility . . . . . . . . . . . . . . . . . . . .  8\n   4.  Security
    Considerations  . . . . . . . . . . . . . . . . . . .  8\n   5.  IANA Considerations
    \ . . . . . . . . . . . . . . . . . . . . .  9\n   6.  References . . . . . .
    . . . . . . . . . . . . . . . . . . . . 11\n     6.1.  Normative References .
    . . . . . . . . . . . . . . . . . . 11\n     6.2.  Informative References . .
    . . . . . . . . . . . . . . . . 11\n   Appendix A.  Acknowledgments . . . . .
    . . . . . . . . . . . . . . 12\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   OSPFv3 [OSPFV3] has been defined to support the base IPv6
    unicast\n   address family (AF).  There are requirements to advertise other AFs\n
    \  in OSPFv3, including multicast IPv6, unicast IPv4, and multicast\n   IPv4.
    \ This document supports these other AFs in OSPFv3 by mapping\n   each AF to a
    separate Instance ID and OSPFv3 instance.\n"
  - contents:
    - "1.1.  Design Considerations\n   This section describes the rationale for using
      the multiple Instance\n   ID approach to support multiple address families in
      OSPFv3.  As\n   described earlier, OSPFv3 is designed to support multiple instances.\n
      \  Hence, mapping an instance to an address family doesn't introduce any\n   new
      mechanisms to the protocol.  It minimizes the protocol extensions\n   required,
      and it simplifies the implementation.  The presence of a\n   separate link state
      database per address family is also easier to\n   debug and operate.  Additionally,
      it doesn't change the existing\n   instance, area, and interface-based configuration
      model in most\n   OSPFv3 implementations.\n"
    title: 1.1.  Design Considerations
  - contents:
    - "1.2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      [RFC-KEYWORDS].\n"
    title: 1.2.  Requirements Notation
  title: 1.  Introduction
- contents:
  - "2.  Protocol Details\n   Currently, the entire Instance ID number space is used
    for IPv6\n   unicast.  This specification assigns different Instance ID ranges
    to\n   different AFs in order to support other AFs in OSPFv3.  Each Instance\n
    \  ID implies a separate OSPFv3 instance with its own neighbor\n   adjacencies,
    link state database, protocol data structures, and\n   shortest path first (SPF)
    computation.\n   Additionally, the current Link State Advertisements (LSAs) defined
    to\n   advertise IPv6 unicast prefixes can be used to advertise prefixes\n   from
    other AFs without modification.\n   It should be noted that OSPFv3 runs on top
    of IPv6 and uses IPv6 link\n   local addresses for OSPFv3 control packets.  Therefore,
    it is\n   required that IPv6 be enabled on an OSPFv3 link, although the link\n
    \  may not be participating in any IPv6 AFs.\n"
  - contents:
    - "2.1.  Instance ID Values for New AFs\n   Instance ID zero is already defined
      by default for the IPv6 unicast\n   AF.  When this specification is used to
      support multiple AFs, we\n   define the following ranges for different AFs.
      \ The first value of\n   each range is the default value for the corresponding
      AF.\n      Instance ID # 0    -  # 31     IPv6 unicast AF\n      Instance ID
      # 32   -  # 63     IPv6 multicast AF\n      Instance ID # 64   -  # 95     IPv4
      unicast AF\n      Instance ID # 96   -  # 127    IPv4 multicast AF\n      Instance
      ID # 128  -  # 255    Unassigned\n                            OSPFv3 Instance
      IDs\n"
    title: 2.1.  Instance ID Values for New AFs
  - contents:
    - "2.2.  OSPFv3 Options Changes\n   A new AF-bit is added to the OSPFv3 Options
      field.  The V6-bit is\n   only applicable to the IPv6 unicast AF.\n                               1
      \                    2\n           0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5  6 7 8  9
      0 1 2 3\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+--+-+-+-+-+--+\n          |
      | | | | | | | | | | | | | | |AF|*|*|DC|R|N|x|E|V6|\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+--+-+-+-+-+--+\n
      \                          The Options field\n                              OSPFv3
      Options\n   V6-bit\n      The V6-bit is used in OSPFv3 to exclude a node from
      IPv6 unicast\n      route calculation but allow it in the SPF calculation for
      other\n      address families.  Since the Instance ID now denotes the AF\n      explicitly,
      this bit is ignored in AFs other than IPv6 unicast.\n   AF-bit\n      When an
      OSPFv3 router is supporting AFs as described in this\n      specification, it
      MUST set the AF-bit in the OSPFv3 Options field\n      of Hello packets, Database
      Description packets, and LSAs.\n"
    title: 2.2.  OSPFv3 Options Changes
  - contents:
    - "2.3.  Advertising Prefixes in AFs Other Than IPv6\n   Each prefix advertised
      in OSPFv3 has a prefix Length field [OSPFV3].\n   This facilitates advertising
      prefixes of different lengths in\n   different AFs.  The existing LSAs defined
      in OSPFv3 are used for this\n   and there is no need to define new LSAs.\n   Prefixes
      that don't conform to the AF of an OSPFv3 instance MUST NOT\n   be used in the
      route computation for that instance.\n"
    title: 2.3.  Advertising Prefixes in AFs Other Than IPv6
  - contents:
    - "2.4.  Changes to the Hello Packet Processing\n   When an OSPFv3 router does
      not support this specification and it is\n   configured with the corresponding
      Instance ID, packets could be black\n   holed.  This could happen due to misconfiguration
      or a router\n   software downgrade.  Black holing is possible because a router
      that\n   doesn't support this specification can still be included in the SPF\n
      \  calculated path as long as it establishes adjacencies using the\n   Instance
      ID corresponding to the AF.  Note that Router-LSAs and\n   Network-LSAs are
      AF independent.\n   In order to avoid the above situation, Hello packet processing
      is\n   changed in order to only establish adjacencies with routers that have\n
      \  the AF-bit set in their Options field.\n   Receiving Hello packets is specified
      in section 4.2.2.1 of [OSPFV3].\n   The following check is added to Hello packet
      reception:\n   o  When an OSPFv3 router participates in an AF (sets the AF-bit
      in\n      the Options field), it MUST discard Hello packets having the AF-\n
      \     bit clear in the Options field.  The only exception is the Base\n      IPv6
      unicast AF, where this check MUST NOT be done (for backward\n      compatibility).\n"
    title: 2.4.  Changes to the Hello Packet Processing
  - contents:
    - "2.5.  Next-Hop Calculation for IPv4 Unicast and Multicast AFs\n   OSPFv3 runs
      on top of IPv6 and uses IPv6 link local addresses for\n   OSPFv3 control packets
      and next-hop calculations.  Although IPv6 link\n   local addresses could be
      used as next hops for IPv4 address families,\n   it is desirable to have IPv4
      next-hop addresses.  For example, in the\n   IPv4 multicast AF, the Protocol
      Independent Multicast (PIM) [PIM]\n   neighbor address and the next-hop address
      should both be IPv4\n   addresses in order for the Reverse Path Forwarding (RPF)
      lookup to\n   work correctly.  Troubleshooting is also easier when the prefix\n
      \  address and next-hop address are in the same AF.\n   In order to achieve
      this, the link's IPv4 address will be advertised\n   in the \"link local address\"
      field of the IPv4 instance's Link-LSA.\n   This address is placed in the first
      32 bits of the \"link local\n   address\" field and is used for IPv4 next-hop
      calculations.  The\n   remaining bits MUST be set to zero.\n   We denote a Direct
      Interface Address (DIA) as an IPv4 or IPv6 address\n   that is both directly
      reachable via an attached link and has an\n   available layer 3 to layer 2 mapping.
      \ Note that there is no explicit\n   need for the IPv4 link addresses to be
      on the same subnet.  An\n   implementation SHOULD resolve layer 3 to layer 2
      mappings via the\n   Address Resolution Protocol (ARP) [ARP] or Neighbor Discovery
      (ND)\n   [ND] for a DIA even if the IPv4 address is not on the same subnet as\n
      \  the router's interface IP address.\n"
    title: 2.5.  Next-Hop Calculation for IPv4 Unicast and Multicast AFs
  - contents:
    - "2.6.  AS-External-LSA and NSSA-LSA Forwarding Address for IPv4 Unicast\n      and
      IPv4 Multicast AFs\n   For OSPFv3, this address is an IPv6 host address (128
      bits).  If\n   included, data traffic for the advertised destination will be\n
      \  forwarded to this address.  For IPv4 unicast and IPv4 multicast AFs,\n   the
      Forwarding Address in AS-external-LSAs and NSSA-LSAs MUST encode\n   an IPv4
      address.  To achieve this, the IPv4 Forwarding Address is\n   advertised by
      placing it in the first 32 bits of the Forwarding\n   Address field in AS-external-LSAs
      and NSSA-LSAs.  The remaining bits\n   MUST be set to zero.\n"
    title: 2.6.  AS-External-LSA and NSSA-LSA Forwarding Address for IPv4 Unicast
  - contents:
    - "2.7.  Database Description Maximum Transmission Unit (MTU) Specification\n
      \     for Non-IPv6 AFs\n   For address families other than IPv6, both the MTU
      for the instance\n   address family and the IPv6 MTU used for OSPFv3 maximum
      packet\n   determination MUST be considered.  The MTU in the Database\n   Description
      packet MUST always contain the MTU corresponding to the\n   advertised address
      family.  For example, if the instance corresponds\n   to an IPv4 address family,
      the IPv4 MTU for the interface MUST be\n   specified in the interface MTU field.
      \ As specified in Section 10.6\n   of [OSPFV2], the Database Description packet
      will be rejected if the\n   MTU is greater than the receiving interface's MTU
      for the address\n   family corresponding to the instance.  This behavior will
      assure that\n   an adjacency is not formed and address family specific routes
      are not\n   installed over a path with conflicting MTUs.\n   The value used
      for OSPFv3 maximum packet size determination MUST also\n   be compatible for
      an adjacency to be established.  Since only a\n   single MTU field is specified,
      the M6-bit is defined by this\n   specification.  If the M6-bit is clear, the
      specified MTU SHOULD also\n   be checked against the IPv6 MTU, and the Database
      Description packet\n   SHOULD be rejected if the MTU is larger than the receiving\n
      \  interface's IPv6 MTU.  An OSPFv3 router SHOULD NOT set the M6-bit if\n   its
      IPv6 MTU and address family specific MTU are the same.\n   If the IPv6 and IPv4
      MTUs differ, the M6-bit MUST be set for non-IPv6\n   address families.  If the
      M6-bit is set, the IPv6 MTU is dictated by\n   the presence or absence of an
      IPv6 MTU TLV in the link-local\n   signaling (LLS) [LLS] block.  If this TLV
      is present, it carries the\n   IPv6 MTU that SHOULD be compared with the local
      IPv6 MTU.  If this\n   TLV is absent, the minimum IPv6 MTU of 1280 octets SHOULD
      be used for\n   the comparison (refer to [IPV6]).\n   If the M6-bit is set in
      a received Database Description packet for a\n   non-IPv6 address family, the
      receiving router MUST NOT check the\n   Interface MTU in the Database Description
      packet against the\n   receiving interface's IPv6 MTU.\n   The figure below
      graphically depicts the changed fields in octets\n   20-23 of the OSPFv3 Database
      Description packet:\n      0                   1                   2                    3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7  8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+-+--+\n
      \    |        Interface MTU          |      0        |0|0|0|M6|0|I|M|MS|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+-+--+\n
      \               OSPFv3 Database Description Packet Changes\n   The changed fields
      in the Database Description packet are described\n   below.  The remaining fields
      are unchanged from [OSPFV3].\n   Interface MTU\n      The size in octets of
      the largest address family specific datagram\n      that can be sent on the
      associated interface without\n      fragmentation.  The MTUs of common Internet
      link types can be\n      found in Table 7-1 of [MTUDISC].  The Interface MTU
      SHOULD be set\n      to 0 in Database Description packets sent over virtual
      links.\n   M6-bit\n      The IPv6 MTU bit - this bit indicates that the sender
      is using a\n      different IPv6 MTU than the MTU for the AF.\n   An IPv6 MTU
      TLV can be optionally carried in an LLS block as\n   described above.  This
      TLV carries the IPv6 MTU for the interface.\n   The length field of the TLV
      is set to 4 bytes.\n        0                   1                   2                   3\n
      \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      |              17               |               4               |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      |                           IPv6 MTU                            |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                         Format of IPv6 MTU TLV\n   Only one instance of the
      IPv6 MTU TLV MAY appear in the LLS block.\n   Instances subsequent to the first
      are not processed, and the LLS\n   inconsistency SHOULD be logged.\n"
    title: 2.7.  Database Description Maximum Transmission Unit (MTU) Specification
  - contents:
    - "2.8.  Operation over Virtual Links\n   OSPFv3 control packets sent over a virtual
      link are IPv6 packets and\n   may traverse multiple hops.  Therefore, there
      MUST be a global IPv6\n   address associated with the virtual link so that OSPFv3
      control\n   packets are forwarded correctly by the intermediate hops between\n
      \  virtual link endpoints.  Although this requirement can be satisfied\n   in
      IPv6 unicast AFs, it will not function in other AFs as there will\n   not be
      a routable global IPv6 address or forwarding path.  Therefore,\n   virtual links
      are not supported in AFs other than IPv6 unicast.\n"
    title: 2.8.  Operation over Virtual Links
  title: 2.  Protocol Details
- contents:
  - "3.  Backward Compatibility\n   All modifications to OSPFv3 apply exclusively
    to the support of\n   address families other than the IPv6 unicast AF using multiple
    OSPFv3\n   instances as described in this specification.  These modifications\n
    \  are not applicable to IPv6 unicast topologies and do not preclude\n   future
    single instance mechanisms for supporting multiple address\n   families.\n   In
    this section, we will define a non-capable OSPFv3 router as one\n   not supporting
    this specification.  When multiple AFs are supported\n   as defined herein, each
    new AF will have a corresponding Instance ID\n   and can interoperate with the
    existing non-capable OSPFv3 routers in\n   an IPv6 unicast topology.  Furthermore,
    when a non-capable OSPFv3\n   router uses an Instance ID that is reserved for
    a given AF, no\n   adjacency will be formed with this router since the AF-bit
    in the\n   Options field will be clear in its OSPFv3 Hello packets.  Therefore,\n
    \  there are no backward compatibility issues.  AFs can be gradually\n   deployed
    without disturbing OSPFv3 routing domains with non-capable\n   OSPFv3 routers.\n"
  title: 3.  Backward Compatibility
- contents:
  - "4.  Security Considerations\n   IPsec [IPsec] can be used for OSPFv3 authentication
    and\n   confidentiality as described in [OSPFV3-AUTH].  When multiple OSPFv3\n
    \  instances use the same interface, they all MUST use the same Security\n   Association
    (SA), since the SA selectors do not provide selection\n   based on data in OSPFv3
    Header fields (e.g., the Instance ID).  This\n   restriction is documented in
    Section 8 of [OSPFV3-AUTH].\n   Security considerations for OSPFv3 are covered
    in [OSPFV3].\n"
  title: 4.  Security Considerations
- contents:
  - "5.  IANA Considerations\n   The following IANA assignments were made from existing
    registries.\n   o  The AF-bit was assigned from the OSPFv3 Options registry as\n
    \     defined in Section 2.2.\n   o  The M6-bit was assigned from the DD Packet
    Flags registry as\n      defined in Section 2.7\n   o  The TLV type (17) for the
    IPv6 MTU TLV was assigned from the OSPF\n      LLS TLVs registry.\n   IANA created
    a new registry, \"OSPFv3 Instance ID Address Family\n   Values\", for assignment
    of the mapping of OSPFv3 Instance IDs to\n   address families when this specification
    is used to support multiple\n   address families.  Note that the Instance ID field
    MAY be used for\n   applications other than the support of multiple address families.\n
    \  However, if it is being used for address families as described in\n   this
    specification, the assignments herein SHOULD be honored.\n            +-------------+----------------------+--------------------+\n
    \           | Value/Range | Designation          | Assignment Policy  |\n            +-------------+----------------------+--------------------+\n
    \           | 0           | Base IPv6 Unicast AF | Already assigned   |\n            |
    \            |                      |                    |\n            | 1-31
    \       | IPv6 Unicast AFs     | Already assigned   |\n            |             |
    dependent on local   |                    |\n            |             | policy
    \              |                    |\n            |             |                      |
    \                   |\n            | 32          | Base IPv6 Multicast  | Already
    assigned   |\n            |             |                      |                    |\n
    \           | 33-63       | IPv6 Multicast AFs   | Already assigned   |\n            |
    \            | dependent on local   |                    |\n            |             |
    policy               |                    |\n            |             |                      |
    \                   |\n            | 64          | Base IPv4 Unicast AF | Already
    assigned   |\n            |             |                      |                    |\n
    \           | 65-95       | IPv4 Unicast AFs     | Already assigned   |\n            |
    \            | dependent on local   |                    |\n            |             |
    policy               |                    |\n            |             |                      |
    \                   |\n            | 96          | Base IPv4 Multicast  | Already
    assigned   |\n            |             |                      |                    |\n
    \           | 97-127      | IPv4 Multicast AFs   | Already assigned   |\n            |
    \            | dependent on local   |                    |\n            |             |
    policy               |                    |\n            |             |                      |
    \                   |\n            | 128-255     | Unassigned           | Standards
    Action   |\n            +-------------+----------------------+--------------------+\n
    \                OSPFv3 Address Family Use of Instance IDs\n   o  Instance IDs
    0-127 are assigned by this specification.\n   o  Instance IDs in the range 128-255
    are not assigned at this time.\n      Before any assignments can be made in this
    range, there MUST be a\n      Standards Track RFC including an IANA Considerations
    section\n      explicitly specifying the AF Instance IDs being assigned.\n"
  title: 5.  IANA Considerations
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [IPV6]          Deering, S. and R. Hinden, \"Internet
      Protocol,\n                   Version 6 (IPv6) Specification\", RFC 2460,\n
      \                  December 1998.\n   [IPsec]         Kent, S. and K. Seo, \"Security
      Architecture for the\n                   Internet Protocol\", RFC 4301, December
      2005.\n   [OSPFV2]        Moy, J., \"OSPF Version 2\", STD 54, RFC 2328,\n                   April
      1998.\n   [OSPFV3]        Coltun, R., Ferguson, D., Moy, J., and A. Lindem,\n
      \                  \"OSPF for IPv6\", RFC 5340, July 2008.\n   [OSPFV3-AUTH]
      \  Gupta, M. and S. Melam, \"Authentication/\n                   Confidentiality
      for OSPFv3\", RFC 4552, June 2006.\n   [RFC-KEYWORDS]  Bradner, S., \"Key words
      for use in RFC's to Indicate\n                   Requirement Levels\", RFC 2119,
      March 1997.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [ARP]           Plummer, D., \"Ethernet Address
      Resolution Protocol:\n                   Or Converting Network Protocol Addresses
      to 48.bit\n                   Ethernet Address for Transmission on Ethernet\n
      \                  Hardware\", STD 37, RFC 826, November 1982.\n   [LLS]           Zinin,
      A., Roy, A., Nguyen, L., Friedman, B., and D.\n                   Young, \"OSPF
      Link-Local Signaling\", RFC 5613,\n                   August 2009.\n   [MTUDISC]
      \      Mogul, J. and S. Deering, \"Path MTU Discovery\",\n                   RFC
      1191, November 1990.\n   [ND]            Narten, T., Nordmark, E., Simpson,
      W., and H.\n                   Soliman, \"Neighbor Discovery for IP version
      6\n                   (IPv6)\", RFC 4861, September 2007.\n   [PIM]           Fenner,
      B., Handley, M., Holbrook, H., and I.\n                   Kouvelas, \"Protocol
      Independent Multicast - Sparse\n                   Mode (PIM-SM): Protocol Specification
      (Revised)\",\n                   RFC 4601, August 2006.\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "Appendix A.  Acknowledgments\n   The RFC text was produced using Marshall Rose's
    xml2rfc tool.\n   Thanks to Tom Henderson and the folks at Boeing for implementing
    this\n   document in the Quagga routing suite, http:www.quagga.net.\n   Thanks
    to Nischal Sheth for review and comments.\n   Thanks to Christian Vogt for comments
    during the Gen-ART review.\n   Thanks to Adrian Farrel for comments during the
    IESG review.\n   Thanks to Alfred Hoenes for comments during the editing process.\n"
  title: Appendix A.  Acknowledgments
- contents:
  - "Authors' Addresses\n   Acee Lindem (editor)\n   Ericsson\n   102 Carric Bend
    Court\n   Cary, NC  27519\n   USA\n   EMail: acee.lindem@ericsson.com\n   Sina
    Mirtorabi\n   Cisco Systems\n   3 West Plumeria Drive\n   San Jose, CA  95134\n
    \  USA\n   EMail: smirtora@cisco.com\n   Abhay Roy\n   Cisco Systems\n   225 West
    Tasman Drive\n   San Jose, CA  95134\n   USA\n   EMail: akr@cisco.com\n   Michael
    Barnes\n   Cisco Systems\n   225 West Tasman Drive\n   San Jose, CA  95134\n   USA\n
    \  EMail: mjbarnes@cisco.com\n   Rahul Aggarwal\n   Juniper Networks\n   1194
    N. Mathilda Ave.\n   Sunnyvale, CA  94089\n   USA\n   EMail: rahul@juniper.net\n"
  title: Authors' Addresses
