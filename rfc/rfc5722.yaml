- title: __initial_text__
  contents:
  - '                 Handling of Overlapping IPv6 Fragments

    '
- title: Abstract
  contents:
  - "Abstract\n   The fragmentation and reassembly algorithm specified in the base\
    \ IPv6\n   specification allows fragments to overlap.  This document\n   demonstrates\
    \ the security issues associated with allowing overlapping\n   fragments and updates\
    \ the IPv6 specification to explicitly forbid\n   overlapping fragments.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions Used in This Document ..........................2\n  \
    \ 2. Overlapping Fragments ...........................................2\n   3.\
    \ The Attack ......................................................3\n   4. Node\
    \ Behavior ...................................................5\n   5. Security\
    \ Considerations .........................................5\n   6. Acknowledgements\
    \ ................................................5\n   7. References ......................................................6\n\
    \      7.1. Normative References .......................................6\n  \
    \    7.2. Informative References .....................................6\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Fragmentation is used in IPv6 when the IPv6 packet will\
    \ not fit\n   inside the path MTU to its destination.  When fragmentation is\n\
    \   performed, an IPv6 node uses a fragment header, as specified in\n   Section\
    \ 4.5 of the IPv6 base specification [RFC2460], to break down\n   the datagram\
    \ into smaller fragments that will fit in the path MTU.\n   The destination node\
    \ receives these fragments and reassembles them.\n   The algorithm specified for\
    \ fragmentation in [RFC2460] does not\n   prevent the fragments from overlapping,\
    \ and this can lead to some\n   security issues with firewalls [RFC4942].  This\
    \ document explores the\n   issues that can be caused by overlapping fragments\
    \ and updates the\n   IPv6 specification to explicitly forbid overlapping fragments.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Overlapping Fragments
  contents:
  - "2.  Overlapping Fragments\n   Commonly used firewalls use the algorithm specified\
    \ in [RFC1858] to\n   weed out malicious packets that try to overwrite parts of\
    \ the\n   transport-layer header in order to bypass inbound connection checks.\n\
    \   [RFC1858] prevents an overlapping fragment attack on an upper-layer\n   protocol\
    \ (in this case, TCP) by recommending that packets with a\n   fragment offset\
    \ of 1 be dropped.  While this works well for IPv4\n   fragments, it will not\
    \ work for IPv6 fragments.  This is because the\n   fragmentable part of the IPv6\
    \ packet can contain extension headers\n   before the TCP header, making this\
    \ check less effective.\n"
- title: 3.  The Attack
  contents:
  - "3.  The Attack\n   This attack describes how a malicious node can bypass a firewall\n\
    \   using overlapping fragments.  Consider a sufficiently large IPv6\n   packet\
    \ that needs to be fragmented.\n   +------------------+--------------------//-----------------------+\n\
    \   |  Unfragmentable  |                 Fragmentable                |\n   | \
    \      Part       |                     Part                    |\n   +------------------+--------------------//-----------------------+\n\
    \                     Figure 1: Large IPv6 Packet\n   This packet is split into\
    \ several fragments by the sender so that the\n   packet can fit inside the path\
    \ MTU.  Let's say the packet is split\n   into two fragments.\n   +------------------+--------+--------------------+\n\
    \   |  Unfragmentable  |Fragment|       first        |\n   |       Part      \
    \ | Header |      fragment      |\n   +------------------+--------+--------------------+\n\
    \   +------------------+--------+--------------------+\n   |  Unfragmentable \
    \ |Fragment|       second       |\n   |       Part       | Header |      fragment\
    \      |\n   +------------------+--------+--------------------+\n           Figure\
    \ 2: Fragmented IPv6 Packet\n   Consider the first fragment.  Let's say it contains\
    \ a destination\n   options header (DOH) 80 octets long and is followed by a TCP\
    \ header.\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<==FH\n\
    \ |NextHdr=DOH(60)|   Reserved    |   FragmentOffset = 0    |Res|1|\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \ |                Identification=aaaabbbb                        |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<==DOH\n\
    \ |NextHdr=TCP(6) | HdrExtLen = 9 |                               |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n |                                        \
    \                       |\n .                                                \
    \               .\n .                            Options                     \
    \       .\n .                                                               .\n\
    \ |                                                               |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<==TCP\n\
    \ |        Source Port            |       Destination Port        |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \ |                       Sequence Number                         |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \ |                    Acknowledgment Number                      |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \ | Offset| Reserved  |U|A|P|R|S|F|           Window              |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      Figure 3: First Fragment\n   The TCP header has the following\
    \ values of the flags: S(YN)=1 and\n   A(CK)=1.  This may make an inspecting stateful\
    \ firewall think that it\n   is a response packet for a connection request initiated\
    \ from the\n   trusted side of the firewall.  Hence, it will allow the fragment\
    \ to\n   pass.  It will also allow the following fragments with the same\n   Fragment\
    \ Identification value in the fragment header to pass through.\n   A malicious\
    \ node can form a second fragment with a TCP header that\n   changes the flags\
    \ and sets S(YN)=1 and A(CK)=0.  This can change the\n   packet on the receiving\
    \ end to consider the packet as a connection\n   request instead of a response.\
    \  By doing this, the malicious node has\n   bypassed the firewall's access control\
    \ to initiate a connection\n   request to a node protected by a firewall.\n"
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<==FH
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<==FH

    '
- title: '|NextHdr=DOH(60)|   Reserved    |   FragmentOffset = 10   |Res|0|'
  contents:
  - '|NextHdr=DOH(60)|   Reserved    |   FragmentOffset = 10   |Res|0|

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|                Identification=aaaabbbb                        |'
  contents:
  - '|                Identification=aaaabbbb                        |

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<==TCP
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<==TCP

    '
- title: '|        Source Port            |       Destination Port        |'
  contents:
  - '|        Source Port            |       Destination Port        |

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|                       Sequence Number                         |'
  contents:
  - '|                       Sequence Number                         |

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|                    Acknowledgment Number                      |'
  contents:
  - '|                    Acknowledgment Number                      |

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '| Offset| Reserved  |U|A|P|R|S|F|           Window              |'
  contents:
  - '| Offset| Reserved  |U|A|P|R|S|F|           Window              |

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n         \
    \           Figure 4: Second Fragment\n   Note that this attack is much more serious\
    \ in IPv6 than in IPv4.  In\n   IPv4, the overlapping part of the TCP header does\
    \ not include the\n   source and destination ports.  In IPv6, the attack can easily\
    \ work to\n   replace the source or destination port with an overlapping fragment.\n"
- title: 4.  Node Behavior
  contents:
  - "4.  Node Behavior\n   IPv6 nodes transmitting datagrams that need to be fragmented\
    \ MUST NOT\n   create overlapping fragments.  When reassembling an IPv6 datagram,\
    \ if\n   one or more its constituent fragments is determined to be an\n   overlapping\
    \ fragment, the entire datagram (and any constituent\n   fragments, including\
    \ those not yet received) MUST be silently\n   discarded.\n   Nodes MAY also provide\
    \ mechanisms to track the reception of such\n   packets, for instance, by implementing\
    \ counters or alarms relating to\n   these events.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document discusses an attack that can be\
    \ used to bypass IPv6\n   firewalls using overlapping fragments.  It recommends\
    \ disallowing\n   overlapping fragments in order to prevent this attack.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The author would like to thank Thomas Narten, Doug Montgomery,\n\
    \   Gabriel Montenegro, Remi Denis-Courmont, Marla Azinger, Arnaud\n   Ebalard,\
    \ Seiichi Kawamura, Behcet Sarikaya, Vishwas Manral, Christian\n   Vogt, Bob Hinden,\
    \ Carl Wallace, Jari Arkko, Pasi Eronen, Francis\n   Dupont, Neville Brownlee,\
    \ Dan Romascanu, Lars Eggert, Cullen\n   Jennings, and Alfred Hoenes for their\
    \ reviews and suggestions that\n   made this document better.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2460]  Deering, S. and R. Hinden, \"Internet Protocol, Version\
    \ 6\n              (IPv6) Specification\", RFC 2460, December 1998.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC1858]  Ziemba, G., Reed, D., and P. Traina,\
    \ \"Security\n              Considerations for IP Fragment Filtering\", RFC 1858,\n\
    \              October 1995.\n   [RFC4942]  Davies, E., Krishnan, S., and P. Savola,\
    \ \"IPv6\n              Transition/Co-existence Security Considerations\", RFC\n\
    \              4942, September 2007.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Suresh Krishnan\n   Ericsson\n   8400 Blvd Decarie\n   Town\
    \ of Mount Royal, Quebec\n   Canada\n   EMail: suresh.krishnan@ericsson.com\n"
