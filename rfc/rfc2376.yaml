- title: __initial_text__
  contents:
  - '                            XML Media Types

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document proposes two new media subtypes, text/xml and\n  \
    \ application/xml, for use in exchanging network entities which are\n   conforming\
    \ Extensible Markup Language (XML). XML entities are\n   currently exchanged via\
    \ the HyperText Transfer Protocol on the World\n   Wide Web, are an integral part\
    \ of the WebDAV protocol for remote web\n   authoring, and are expected to have\
    \ utility in many domains.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   6.7  application/xml with Omitted Charset and UTF-16 XML\
    \ Entity ..12\n   6.9  application/xml with Omitted Charset and Internal Encoding\n\
    \   7 REFERENCES .....................................................13\n   8\
    \ ACKNOWLEDGEMENTS ...............................................14\n   9 ADDRESSES\
    \ OF AUTHORS ...........................................14\n   10 FULL COPYRIGHT\
    \ STATEMENT ......................................15\n"
- title: 1  Introduction
  contents:
  - "1  Introduction\n   The World Wide Web Consortium (W3C) has issued a Recommendation\n\
    \   [REC-XML] which defines the Extensible Markup Language (XML), version\n  \
    \ 1. To enable the exchange of XML network entities, this document\n   proposes\
    \ two new media types, text/xml and application/xml.\n   XML entities are currently\
    \ exchanged on the World Wide Web, and XML\n   is also used for property values\
    \ and parameter marshalling by the\n   WebDAV protocol for remote web authoring.\
    \ Thus, there is a need for a\n   media type to properly label the exchange of\
    \ XML network entities.\n   (Note that, as sometimes happens between two communities,\
    \ both MIME\n   and XML have defined the term entity, with different meanings.)\n\
    \   Although XML is a subset of the Standard Generalized Markup Language\n   (SGML)\
    \ [ISO-8897], and currently is assigned the media types\n   text/sgml and application/sgml,\
    \ there are several reasons why use of\n   text/sgml or application/sgml to label\
    \ XML is inappropriate. First,\n   there exist many applications which can process\
    \ XML, but which cannot\n   process SGML, due to SGML's larger feature set. Second,\
    \ SGML\n   applications cannot always process XML entities, because XML uses\n\
    \   features of recent technical corrigenda to SGML.  Third, the\n   definition\
    \ of text/sgml and application/sgml [RFC-1874] includes\n   parameters for SGML\
    \ bit combination transformation format (SGML-\n   bctf), and SGML boot attribute\
    \ (SGML-boot). Since XML does not use\n   these parameters, it would be ambiguous\
    \ if such parameters were given\n   for an XML entity.  For these reasons, the\
    \ best approach for labeling\n   XML network entities is to provide new media\
    \ types for XML.\n   Since XML is an integral part of the WebDAV Distributed Authoring\n\
    \   Protocol, and since World Wide Web Consortium Recommendations have\n   conventionally\
    \ been assigned IETF tree media types, and since similar\n   media types (HTML,\
    \ SGML) have been assigned IETF tree media types,\n   the XML media types also\
    \ belong in the IETF media types tree.\n"
- title: 2  Notational Conventions
  contents:
  - "2  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC-2119].\n"
- title: 3  XML Media Types
  contents:
  - "3  XML Media Types\n   This document introduces two new media types for XML entities,\n\
    \   text/xml and application/xml.  Registration information for these\n   media\
    \ types are described in the sections below.\n   Every XML entity is suitable\
    \ for use with the application/xml media\n   type without modification.  But this\
    \ does not exploit the fact that\n   XML can be treated as plain text in many\
    \ cases.  MIME user agents\n   (and web user agents) that do not have explicit\
    \ support for\n   application/xml will treat it as application/octet-stream, for\n\
    \   example, by offering to save it to a file.\n   To indicate that an XML entity\
    \ should be treated as plain text by\n   default, use the text/xml media type.\
    \  This restricts the encoding\n   used in the XML entity to those that are compatible\
    \ with the\n   requirements for text media types as described in [RFC-2045] and\n\
    \   [RFC-2046], e.g., UTF-8, but not UTF-16 (except for HTTP).\n   XML provides\
    \ a general framework for defining sequences of structured\n   data.  In some\
    \ cases, it may be desirable to define new media types\n   which use XML but define\
    \ a specific application of XML, perhaps due\n   to domain-specific security considerations\
    \ or runtime information.\n   This document does not prohibit future media types\
    \ dedicated to such\n   XML applications. However, developers of such media types\
    \ are\n   recommended to use this document as a basis.  In particular, the\n \
    \  charset parameter should be used in the same manner.\n   Within the XML specification,\
    \ XML entities can be classified into\n   four types.  In the XML terminology,\
    \ they are called \"document\n   entities\", \"external DTD subsets\", \"external\
    \ parsed entities\", and\n   \"external parameter entities\".  The media types\
    \ text/xml and\n   application/xml can be used for any of these four types.\n"
- title: 3.1 Text/xml Registration
  contents:
  - "3.1 Text/xml Registration\n   MIME media type name: text\n   MIME subtype name:\
    \ xml\n   Mandatory parameters: none\n   Optional parameters: charset\n      Although\
    \ listed as an optional parameter, the use of the charset\n      parameter is\
    \ STRONGLY RECOMMENDED, since this information can be\n      used by XML processors\
    \ to determine authoritatively the character\n      encoding of the XML entity.\
    \ The charset parameter can also be used\n      to provide protocol-specific operations,\
    \ such as charset-based\n      content negotiation in HTTP.  \"UTF-8\" [RFC-2279]\
    \ is the\n      recommended value, representing the UTF-8 charset. UTF-8 is\n\
    \      supported by all conforming XML processors [REC-XML].\n      If the XML\
    \ entity is transmitted via HTTP, which uses a MIME-like\n      mechanism that\
    \ is exempt from the restrictions on the text top-\n      level type (see section\
    \ 19.4.1 of HTTP 1.1 [RFC-2068]), \"UTF-16\"\n      (Appendix C.3 of [UNICODE]\
    \ and Amendment 1 of [ISO-10646]) is also\n      recommended.  UTF-16 is supported\
    \ by all conforming XML processors\n      [REC-XML].  Since the handling of CR,\
    \ LF and NUL for text types in\n      most MIME applications would cause undesired\
    \ transformations of\n      individual octets in UTF-16 multi-octet characters,\
    \ gateways from\n      HTTP to these MIME applications MUST transform the XML\
    \ entity from\n      a text/xml; charset=\"utf-16\" to application/xml; charset=\"\
    utf-16\".\n      Conformant with [RFC-2046], if a text/xml entity is received\
    \ with\n      the charset parameter omitted, MIME processors and XML processors\n\
    \      MUST use the default charset value of \"us-ascii\".  In cases where\n \
    \     the XML entity is transmitted via HTTP, the default charset value\n    \
    \  is still \"us-ascii\".\n      Since the charset parameter is authoritative,\
    \ the charset is not\n      always declared within an XML encoding declaration.\
    \  Thus, special\n      care is needed when the recipient strips the MIME header\
    \ and\n      provides persistent storage of the received XML entity (e.g., in\
    \ a\n      file system). Unless the charset is UTF-8 or UTF-16, the recipient\n\
    \      SHOULD also persistently store information about the charset,\n      perhaps\
    \ by embedding a correct XML encoding declaration within the\n      XML entity.\n\
    \   Encoding considerations:\n      This media type MAY be encoded as appropriate\
    \ for the charset and\n      the capabilities of the underlying MIME transport.\
    \ For 7-bit\n      transports, data in both UTF-8 and UTF-16 is encoded in quoted-\n\
    \      printable or base64.  For 8-bit clean transport (e.g., ESMTP,\n      8BITMIME,\
    \ or NNTP), UTF-8 is not encoded, but UTF-16 is base64\n      encoded.  For binary\
    \ clean transports (e.g., HTTP), no content-\n      transfer-encoding is necessary.\n\
    \   Security considerations:\n      See section 4 below.\n   Interoperability\
    \ considerations:\n      XML has proven to be interoperable across WebDAV clients\
    \ and\n      servers, and for import and export from multiple XML authoring\n\
    \      tools.\n   Published specification: see [REC-XML]\n   Applications which\
    \ use this media type:\n      XML is device-, platform-, and vendor-neutral and\
    \ is supported by\n      a wide range of Web user agents, WebDAV clients and servers,\
    \ as\n      well as XML authoring tools.\n   Additional information:\n      Magic\
    \ number(s): none\n      Although no byte sequences can be counted on to always\
    \ be present,\n      XML entities in ASCII-compatible charsets (including UTF-8)\
    \ often\n      begin with hexadecimal 3C 3F 78 6D 6C (\"<?xml\").  For more\n\
    \      information, see Appendix F of [REC-XML].\n      File extension(s): .xml,\
    \ .dtd\n      Macintosh File Type Code(s): \"TEXT\"\n   Person & email address\
    \ for further information:\n      Dan Connolly <connolly@w3.org>\n      Murata\
    \ Makoto (Family Given) <murata@fxis.fujixerox.co.jp>\n   Intended usage: COMMON\n\
    \   Author/Change controller:\n      The XML specification is a work product of\
    \ the World Wide Web\n      Consortium's XML Working Group, and was edited by:\n\
    \      Tim Bray <tbray@textuality.com>\n      Jean Paoli <jeanpa@microsoft.com>\n\
    \      C. M. Sperberg-McQueen <cmsmcq@uic.edu>\n      The W3C, and the W3C XML\
    \ working group, has change control over\n      the XML specification.\n"
- title: 3.2 Application/xml Registration
  contents:
  - "3.2 Application/xml Registration\n   MIME media type name: application\n   MIME\
    \ subtype name: xml\n   Mandatory parameters: none\n   Optional parameters: charset\n\
    \      Although listed as an optional parameter, the use of the charset\n    \
    \  parameter is STRONGLY RECOMMENDED, since this information can be\n      used\
    \ by XML processors to determine authoritatively the charset of\n      the XML\
    \ entity. The charset parameter can also be used to provide\n      protocol-specific\
    \ operations, such as charset-based content\n      negotiation in HTTP.\n    \
    \  \"UTF-8\" [RFC-2279] and \"UTF-16\" (Appendix C.3 of [UNICODE] and\n      Amendment\
    \ 1 of [ISO-10646]) are the recommended values,\n      representing the UTF-8\
    \ and UTF-16 charsets, respectively. These\n      charsets are  preferred since\
    \ they are supported by all conforming\n      XML processors [REC-XML].\n    \
    \  If an application/xml entity is received where the charset\n      parameter\
    \ is omitted, no information is being provided about the\n      charset by the\
    \ MIME Content-Type header. Conforming XML processors\n      MUST follow the requirements\
    \ in section 4.3.3 of [REC-XML] which\n      directly address this contingency.\
    \ However, MIME processors which\n      are not XML processors should not assume\
    \ a default charset if the\n      charset parameter is omitted from an application/xml\
    \ entity.\n      Since the charset parameter is authoritative, the charset is\
    \ not\n      always declared within an XML encoding declaration.  Thus, special\n\
    \      care is needed when the recipient strips the MIME header and\n      provides\
    \ persistent storage of the received XML entity (e.g., in a\n      file system).\
    \  Unless the charset is UTF-8 or UTF-16, the\n      recipient SHOULD also persistently\
    \ store information about the\n      charset, perhaps by embedding a correct XML\
    \ encoding declaration\n      within the XML entity.\n   Encoding considerations:\n\
    \      This media type MAY be encoded as appropriate for the charset and\n   \
    \   the capabilities of the underlying MIME transport. For 7-bit\n      transports,\
    \ data in both UTF-8 and UTF-16 is encoded in quoted-\n      printable or base64.\
    \  For 8-bit clean transport (e.g., ESMTP,\n      8BITMIME, or NNTP), UTF-8 is\
    \ not encoded, but UTF-16 is base64\n      encoded.  For binary clean transport\
    \ (e.g., HTTP), no content-\n      transfer-encoding is necessary.\n   Security\
    \ considerations:\n      See section 4 below.\n   Interoperability considerations:\n\
    \      XML has proven to be interoperable for import and export from\n      multiple\
    \ XML authoring tools.\n   Published specification: see [REC-XML]\n   Applications\
    \ which use this media type:\n      XML is device-, platform-, and vendor-neutral\
    \ and is supported by\n      a wide range of Web user agents and XML authoring\
    \ tools.\n   Additional information:\n      Magic number(s): none\n      Although\
    \ no byte sequences can be counted on to always be present,\n      XML entities\
    \ in ASCII-compatible charsets (including UTF-8) often\n      begin with hexadecimal\
    \ 3C 3F 78 6D 6C (\"<?xml\"), and those in\n      UTF-16 often begin with hexadecimal\
    \ FE FF 00 3C 00 3F 00 78 00 6D\n      or FF FE 3C 00 3F 00 78 00 6D 00 (the Byte\
    \ Order Mark (BOM)\n      followed by \"<?xml\").  For more information, see Annex\
    \ F of [REC-\n      XML].\n      File extension(s): .xml, .dtd\n      Macintosh\
    \ File Type Code(s): \"TEXT\"\n   Person & email address for further information:\n\
    \      Dan Connolly <connolly@w3.org>\n      Murata Makoto (Family Given) <murata@fxis.fujixerox.co.jp>\n\
    \   Intended usage: COMMON\n   Author/Change controller:\n      The XML specification\
    \ is a work product of the World Wide Web\n      Consortium's XML Working Group,\
    \ and was edited by:\n      Tim Bray <tbray@textuality.com>\n      Jean Paoli\
    \ <jeanpa@microsoft.com>\n      C. M. Sperberg-McQueen <cmsmcq@uic.edu>\n    \
    \  The W3C, and the W3C XML working group, has change control over\n      the\
    \ XML specification.\n"
- title: 4  Security Considerations
  contents:
  - "4  Security Considerations\n   XML, as a subset of SGML, has the same security\
    \ considerations as\n   specified in [RFC-1874].\n   To paraphrase section 3 of\
    \ [RFC-1874], XML entities contain\n   information to be parsed and processed\
    \ by the recipient's XML system.\n   These entities may contain and such systems\
    \ may permit explicit\n   system level commands to be executed while processing\
    \ the data.  To\n   the extent that an XML system will execute arbitrary command\
    \ strings,\n   recipients of XML entities may be at risk. In general, it may be\n\
    \   possible to specify commands that perform unauthorized file\n   operations\
    \ or make changes to the display processor's environment\n   that affect subsequent\
    \ operations.\n   Use of XML is expected to be varied, and widespread.  XML is\
    \ under\n   scrutiny by a wide range of communities for use as a common syntax\n\
    \   for community-specific metadata.  For example, the Dublin Core group\n   is\
    \ using XML for document metadata, and a new effort has begun which\n   is considering\
    \ use of XML for medical information.  Other groups view\n   XML as a mechanism\
    \ for marshalling parameters for remote procedure\n   calls.  More uses of XML\
    \ will undoubtedly arise.\n   Security considerations will vary by domain of use.\
    \  For example, XML\n   medical records will have much more stringent privacy\
    \ and security\n   considerations than XML library metadata. Similarly, use of\
    \ XML as a\n   parameter marshalling syntax necessitates a case by case security\n\
    \   review.\n   XML may also have some of the same security concerns as plain\
    \ text.\n   Like plain text, XML can contain escape sequences which, when\n  \
    \ displayed, have the potential to change the display processor\n   environment\
    \ in ways that adversely affect subsequent operations.\n   Possible effects include,\
    \ but are not limited to, locking the\n   keyboard, changing display parameters\
    \ so subsequent displayed text is\n   unreadable, or even changing display parameters\
    \ to deliberately\n   obscure or distort subsequent displayed material so that\
    \ its meaning\n   is lost or altered.  Display processors should either filter\
    \ such\n   material from displayed text or else make sure to reset all important\n\
    \   settings after a given display operation is complete.\n   Some terminal devices\
    \ have keys whose output, when pressed, can be\n   changed by sending the display\
    \ processor a character sequence. If\n   this is possible the display of a text\
    \ object containing such\n   character sequences could reprogram keys to perform\
    \ some illicit or\n   dangerous action when the key is subsequently pressed by\
    \ the user.\n   In some cases not only can keys be programmed, they can be triggered\n\
    \   remotely, making it possible for a text display operation to directly\n  \
    \ perform some unwanted action. As such, the ability to program keys\n   should\
    \ be blocked either by filtering or by disabling the ability to\n   program keys\
    \ entirely.\n   Note that it is also possible to construct XML documents which\
    \ make\n   use of what XML terms \"entity references\" (using the XML meaning\
    \ of\n   the term \"entity\", which differs from the MIME definition of this\n\
    \   term), to construct repeated expansions of text. Recursive expansions\n  \
    \ are prohibited [REC-XML] and XML processors are required to detect\n   them.\
    \  However, even non-recursive expansions may cause problems with\n   the finite\
    \ computing resources of computers, if they are performed\n   many times.\n"
- title: 5  The Byte Order Mark (BOM) and Conversions to/from UTF-16
  contents:
  - "5  The Byte Order Mark (BOM) and Conversions to/from UTF-16\n   The XML Recommendation,\
    \ in section 4.3.3, specifies that UTF-16 XML\n   entities must begin with a byte\
    \ order mark (BOM), which is the ZERO\n   WIDTH NO-BREAK SPACE character, hexadecimal\
    \ sequence 0xFEFF (or\n   0xFFFE, depending on endian). The XML Recommendation\
    \ further states\n   that the BOM is an encoding signature, and is not part of\
    \ either the\n   markup or the character data of the XML document.\n   Due to\
    \ the BOM, applications which convert XML from the UTF-16\n   encoding to another\
    \ encoding SHOULD strip the BOM before conversion.\n   Similarly, when converting\
    \ from another encoding into UTF-16, the BOM\n   SHOULD be added after conversion\
    \ is complete.\n"
- title: 6  Examples
  contents:
  - "6  Examples\n   The examples below give the value of the Content-type MIME header\
    \ and\n   the XML declaration (which includes the encoding declaration) inside\n\
    \   the XML entity.  For UTF-16 examples, the Byte Order Mark character\n   is\
    \ denoted as \"{BOM}\", and the XML declaration is assumed to come at\n   the\
    \ beginning of the XML entity, immediately following the BOM. Note\n   that other\
    \ MIME headers may be present, and the XML entity may\n   contain other data in\
    \ addition to the XML declaration; the examples\n   focus on the Content-type\
    \ header and the encoding declaration for\n   clarity.\n"
- title: 6.1 text/xml with UTF-8 Charset
  contents:
  - "6.1 text/xml with UTF-8 Charset\n   Content-type: text/xml; charset=\"utf-8\"\
    \n   <?xml version=\"1.0\" encoding=\"utf-8\"?>\n   This is the recommended charset\
    \ value for use with text/xml.  Since\n   the charset parameter is provided, MIME\
    \ and XML processors must treat\n   the enclosed entity as UTF-8 encoded.\n  \
    \ If sent using a 7-bit transport (e.g. SMTP), the XML entity must use\n   a content-transfer-encoding\
    \ of either quoted-printable or base64.\n   For an 8-bit clean transport (e.g.,\
    \ ESMTP, 8BITMIME, or NNTP), or a\n   binary clean transport (e.g., HTTP) no content-transfer-encoding\
    \ is\n   necessary.\n"
- title: 6.2 text/xml with UTF-16 Charset
  contents:
  - "6.2 text/xml with UTF-16 Charset\n   Content-type: text/xml; charset=\"utf-16\"\
    \n   {BOM}<?xml version='1.0' encoding='utf-16'?>\n   This is possible only when\
    \ the XML entity is transmitted via HTTP,\n   which uses a MIME-like mechanism\
    \ and is a binary-clean protocol,\n   hence does not perform CR and LF transformations\
    \ and allows NUL\n   octets. This differs from typical text MIME type processing\
    \ (see\n   section 19.4.1 of HTTP 1.1 [RFC-2068] for details).\n   Since HTTP\
    \ is binary clean, no content-transfer-encoding is\n   necessary.\n"
- title: 6.3 text/xml with ISO-2022-KR Charset
  contents:
  - "6.3 text/xml with ISO-2022-KR Charset\n   Content-type: text/xml; charset=\"\
    iso-2022-kr\"\n   <?xml version=\"1.0\" encoding='iso-2022-kr'?>\n   This example\
    \ shows text/xml with a Korean charset (e.g., Hangul)\n   encoded following the\
    \ specification in [RFC-1557].  Since the charset\n   parameter is provided, MIME\
    \ and XML processors must treat the\n   enclosed entity as encoded per [RFC-1557].\n\
    \   Since ISO-2022-KR has been defined to use only 7 bits of data, no\n   content-transfer-encoding\
    \ is necessary with any transport.\n"
- title: 6.4 text/xml with Omitted Charset
  contents:
  - "6.4 text/xml with Omitted Charset\n   Content-type: text/xml\n   {BOM}<?xml version=\"\
    1.0\" encoding=\"utf-16\"?>\n   This example shows text/xml with the charset parameter\
    \ omitted.  In\n   this case, MIME and XML processors must assume the charset\
    \ is \"us-\n   ascii\", the default charset value for text media types specified\
    \ in\n   [RFC-2046]. The default of \"us-ascii\" holds even if the text/xml\n\
    \   entity is transported using HTTP.\n   Omitting the charset parameter is NOT\
    \ RECOMMENDED for text/xml. For\n   example, even if the contents of the XML entity\
    \ are UTF-16 or UTF-8,\n   or the XML entity has an explicit encoding declaration,\
    \ XML and MIME\n   processors must assume the charset is \"us-ascii\".\n"
- title: 6.5 application/xml with UTF-16 Charset
  contents:
  - "6.5 application/xml with UTF-16 Charset\n   Content-type: application/xml; charset=\"\
    utf-16\"\n   {BOM}<?xml version=\"1.0\"?>\n   This is a recommended charset value\
    \ for use with application/xml.\n   Since the charset parameter is provided, MIME\
    \ and XML processors must\n   treat the enclosed entity as UTF-16 encoded.\n \
    \  If sent using a 7-bit transport (e.g., SMTP) or an 8-bit clean\n   transport\
    \ (e.g., ESMTP, 8BITMIME, or NNTP), the XML entity must be\n   encoded in quoted-printable\
    \ or base64. For a binary clean transport\n   (e.g., HTTP), no content-transfer-encoding\
    \ is necessary.\n"
- title: 6.6 application/xml with ISO-2022-KR Charset
  contents:
  - "6.6 application/xml with ISO-2022-KR Charset\n   Content-type: application/xml;\
    \ charset=\"iso-2022-kr\"\n   <?xml version=\"1.0\" encoding=\"iso-2022-kr\"?>\n\
    \   This example shows application/xml with a Korean charset (e.g.,\n   Hangul)\
    \ encoded following the specification in [RFC-1557].  Since the\n   charset parameter\
    \ is provided, MIME and XML processors must treat the\n   enclosed entity as encoded\
    \ per [RFC-1557], independent of whether the\n   XML entity has an internal encoding\
    \ declaration (this example does\n   show such a declaration, which agrees with\
    \ the charset parameter).\n   Since ISO-2022-KR has been defined to use only 7\
    \ bits of data, no\n   content-transfer-encoding is necessary with any transport.\n"
- title: 6.7 application/xml with Omitted Charset and UTF-16 XML Entity
  contents:
  - "6.7 application/xml with Omitted Charset and UTF-16 XML Entity\n   Content-type:\
    \ application/xml\n   {BOM}<?xml version='1.0'?>\n   For this example, the XML\
    \ entity begins with a BOM.  Since the\n   charset has been omitted, a conforming\
    \ XML processor follows the\n   requirements of [REC-XML], section 4.3.3. Specifically,\
    \ the XML\n   processor reads the BOM, and thus knows deterministically that the\n\
    \   charset encoding is UTF-16.\n   An XML-unaware MIME processor should make\
    \ no assumptions about the\n   charset of the XML entity.\n"
- title: 6.8 application/xml with Omitted Charset and UTF-8 Entity
  contents:
  - "6.8 application/xml with Omitted Charset and UTF-8 Entity\n   Content-type: application/xml\n\
    \   <?xml version='1.0'?>\n   In this example, the charset parameter has been\
    \ omitted, and there is\n   no BOM. Since there is no BOM, the XML processor follows\
    \ the\n   requirements in section 4.3.3, and optionally applies the mechanism\n\
    \   described in appendix F (which is non-normative) of [REC-XML] to\n   determine\
    \ the charset encoding of UTF-8. The XML entity does not\n   contain an encoding\
    \ declaration, but since the encoding is UTF-8,\n   this is still a conforming\
    \ XML entity.\n   An XML-unaware MIME processor should make no assumptions about\
    \ the\n   charset of the XML entity.\n"
- title: 6.9 application/xml with Omitted Charset and Internal Encoding
  contents:
  - "6.9 application/xml with Omitted Charset and Internal Encoding\n    Declaration\n\
    \   Content-type: application/xml\n   <?xml version='1.0' encoding=\"ISO-10646-UCS-4\"\
    ?>\n   In this example, the charset parameter has been omitted, and there is\n\
    \   no BOM.  However, the XML entity does have an encoding declaration\n   inside\
    \ the XML entity which specifies the entity's charset. Following\n   the requirements\
    \ in section 4.3.3, and optionally applying the\n   mechanism described in appendix\
    \ F (non-normative) of [REC-XML], the\n   XML processor determines the charset\
    \ encoding of the XML entity (in\n   this example, UCS-4).\n   An XML-unaware\
    \ MIME processor should make no assumptions about the\n   charset of the XML entity.\n"
- title: 7  References
  contents:
  - "7  References\n   [ISO-10646] ISO/IEC, Information Technology - Universal Multiple-\n\
    \               Octet Coded Character Set (UCS) - Part 1: Architecture\n     \
    \          and Basic Multilingual Plane, May 1993.\n   [ISO-8897]  ISO (International\
    \ Organization for Standardization) ISO\n               8879:1986(E) Information\
    \ Processing -- Text and Office\n               Systems -- Standard Generalized\
    \ Markup Language (SGML).\n               First edition -- 1986- 10-15.\n   [REC-XML]\
    \   T. Bray, J. Paoli, C. M. Sperberg-McQueen, \"Extensible\n               Markup\
    \ Language (XML)\" World Wide Web Consortium\n               Recommendation REC-\
    \ xml-19980210.\n               http://www.w3.org/TR/1998/REC-xml-19980210.\n\
    \   [RFC-1557]  Choi, U., Chon, K., and H. Park. \"Korean Character\n        \
    \       Encoding for Internet Messages\", RFC 1557. December,\n              \
    \ 1993.\n   [RFC-1874]  Levinson, E., \"SGML Media Types\", RFC 1874. December\n\
    \               1995.\n   [RFC-2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC-2045]  Freed, N., and N. Borenstein, \"Multipurpose Internet Mail\n \
    \              Extensions (MIME) Part One: Format of Internet Message\n      \
    \         Bodies\", RFC 2045, November 1996.\n   [RFC-2046]  Freed, N., and N.\
    \ Borenstein, \"Multipurpose Internet Mail\n               Extensions (MIME) Part\
    \ Two: Media Types\", RFC 2046,\n               November 1996.\n   [RFC-2068]\
    \  Fielding, R., Gettys, J., Mogul, J., Frystyk, H., and T.\n               Berners-Lee,\
    \ \"Hypertext Transfer Protocol -- HTTP/1.1\",\n               RFC 2068, January\
    \ 1997.\n   [RFC-2279]  Yergeau, F., \"UTF-8, a transformation format of ISO\n\
    \               10646\", RFC 2279, January 1998.\n   [UNICODE]   The Unicode Consortium,\
    \ \"The Unicode Standard -- Version\n               2.0\", Addison-Wesley, 1996.\n"
- title: 8  Acknowledgements
  contents:
  - "8  Acknowledgements\n   Chris Newman and Yaron Y. Goland both contributed content\
    \ to the\n   security considerations section of this document.  In particular,\n\
    \   some text in the security considerations section is copied verbatim\n   from\
    \ work in progress, draft-newman-mime-textpara-00, by permission\n   of the author.\
    \  Chris Newman additionally contributed content to the\n   encoding considerations\
    \ sections. Dan Connolly contributed content\n   discussing when to use text/xml.\
    \ Discussions with Ned Freed and Dan\n   Connolly helped refine the author's understanding\
    \ of the text media\n   type; feedback from Larry Masinter was also very helpful\
    \ in\n   understanding media type registration issues.\n   Members of the W3C\
    \ XML Working Group and XML Special Interest group\n   have made significant contributions\
    \ to this document, and the authors\n   would like to specially recognize James\
    \ Clark, Martin Duerst, Rick\n   Jelliffe, Gavin Nicol for their many thoughtful\
    \ comments.\n"
- title: 9  Addresses of Authors
  contents:
  - "9  Addresses of Authors\n   E. James Whitehead, Jr.\n   Dept. of Information\
    \ and Computer Science\n   University of California, Irvine\n   Irvine, CA 92697-3425\n\
    \   EMail: ejw@ics.uci.edu\n   Murata Makoto (Family Given)\n   Fuji Xerox Information\
    \ Systems,\n   KSP 9A7, 2-1, Sakado 3-chome, Takatsu-ku,\n   Kawasaki-shi, Kanagawa-ken,\n\
    \   213 Japan\n   EMail: murata@fxis.fujixerox.co.jp\n"
- title: 10  Full Copyright Statement
  contents:
  - "10  Full Copyright Statement\n   Copyright (C) The Internet Society (1998). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
