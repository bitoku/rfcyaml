- title: __initial_text__
  contents:
  - '                 S/MIME Version 3 Certificate Handling

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: 1. Overview
  contents:
  - "1. Overview\n   S/MIME (Secure/Multipurpose Internet Mail Extensions), described\
    \ in\n   [SMIME-MSG], provides a method to send and receive secure MIME\n   messages.\
    \ Before using a public key to provide security services, the\n   S/MIME agent\
    \ MUST certify that the public key is valid. S/MIME agents\n   MUST use PKIX certificates\
    \ to validate public keys as described in\n   the Internet X.509 Public Key Infrastructure\
    \ (PKIX) Certificate and\n   CRL Profile [KEYM]. S/MIME agents MUST meet the certificate\n\
    \   processing requirements documented in this document in addition to\n   those\
    \ stated in [KEYM].\n   This specification is compatible with the Cryptographic\
    \ Message\n   Syntax [CMS] in that it uses the data types defined by CMS. It also\n\
    \   inherits all the varieties of architectures for certificate-based key\n  \
    \ management supported by CMS.\n"
- title: 1.1 Definitions
  contents:
  - "1.1 Definitions\n   For the purposes of this memo, the following definitions\
    \ apply.\n   ASN.1: Abstract Syntax Notation One, as defined in ITU-T X.680-689.\n\
    \   Attribute Certificate (AC): An X.509 AC is a separate structure from\n   a\
    \ subject's public key X.509 Certificate.  A subject may have\n   multiple X.509\
    \ ACs associated with each of its public key X.509\n   Certificates.  Each X.509\
    \ AC binds one or more Attributes with one of\n   the subject's public key X.509\
    \ Certificates.  The X.509 AC syntax is\n   defined in [X.509]\n   BER: Basic\
    \ Encoding Rules for ASN.1, as defined in ITU-T X.690.\n   Certificate: A type\
    \ that binds an entity's distinguished name to a\n   public key with a digital\
    \ signature. This type is defined in the\n   Internet X.509 Public Key Infrastructure\
    \ (PKIX) Certificate and CRL\n   Profile [KEYM]. This type also contains the distinguished\
    \ name of the\n   certificate issuer (the signer), an issuer-specific serial number,\n\
    \   the issuer's signature algorithm identifier, a validity period, and\n   extensions\
    \ also defined in that document.\n   Certificate Revocation List (CRL): A type\
    \ that contains information\n   about certificates whose validity an issuer has\
    \ prematurely revoked.\n   The information consists of an issuer name, the time\
    \ of issue, the\n   next scheduled time of issue, a list of certificate serial\
    \ numbers\n   and their associated revocation times, and extensions as defined\
    \ in\n   [KEYM]. The CRL is signed by the issuer. The type intended by this\n\
    \   specification is the one defined in [KEYM].\n   DER: Distinguished Encoding\
    \ Rules for ASN.1, as defined in ITU-T\n   X.690.\n   Receiving agent: software\
    \ that interprets and processes S/MIME CMS\n   objects, MIME body parts that contain\
    \ CMS objects, or both.\n   Sending agent: software that creates S/MIME CMS objects,\
    \ MIME body\n   parts that contain CMS objects, or both.\n   S/MIME agent: user\
    \ software that is a receiving agent, a sending\n   agent, or both.\n"
- title: 1.2 Compatibility with Prior Practice of S/MIME
  contents:
  - "1.2 Compatibility with Prior Practice of S/MIME\n   S/MIME version 3 agents should\
    \ attempt to have the greatest\n   interoperability possible with S/MIME version\
    \ 2 agents. S/MIME\n   version 2 is described in RFC 2311 through RFC 2315, inclusive.\
    \  RFC\n   2311 also has historical information about the development of S/MIME.\n"
- title: 1.3 Terminology
  contents:
  - "1.3 Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [MUSTSHOULD].\n"
- title: 2. CMS Options
  contents:
  - "2. CMS Options\n   The CMS message format allows for a wide variety of options\
    \ in\n   content and algorithm support. This section puts forth a number of\n\
    \   support requirements and recommendations in order to achieve a base\n   level\
    \ of interoperability among all S/MIME implementations. Most of\n   the CMS format\
    \ for S/MIME messages is defined in [SMIME-MSG].\n"
- title: 2.1 CertificateRevocationLists
  contents:
  - "2.1 CertificateRevocationLists\n   Receiving agents MUST support the Certificate\
    \ Revocation List (CRL)\n   format defined in [KEYM]. If sending agents include\
    \ CRLs in outgoing\n   messages, the CRL format defined in [KEYM] MUST be used.\n\
    \   All agents MUST be capable of performing revocation checks using CRLs\n  \
    \ as specified in [KEYM]. All agents MUST perform revocation status\n   checking\
    \ in accordance with [KEYM]. Receiving agents MUST recognize\n   CRLs in received\
    \ S/MIME messages.\n   Agents SHOULD store CRLs received in messages for use in\
    \ processing\n   later messages.\n   Agents MUST handle multiple valid Certificate\
    \ Authority (CA)\n   certificates containing the same subject name and the same\
    \ public\n   keys but with overlapping validity intervals.\n"
- title: 2.2 CertificateChoices
  contents:
  - "2.2 CertificateChoices\n   Receiving agents MUST support PKIX v1 and PKIX v3\
    \ certificates. See\n   [KEYM] for details about the profile for certificate formats.\
    \ End\n   entity certificates MAY include an Internet mail address, as\n   described\
    \ in section 3.1.\n   Receiving agents SHOULD support X.509 attribute certificates.\n"
- title: 2.2.1 Historical Note About CMS Certificates
  contents:
  - "2.2.1 Historical Note About CMS Certificates\n   The CMS message format supports\
    \ a choice of certificate formats for\n   public key content types: PKIX, PKCS\
    \ #6 Extended Certificates and\n   X.509 Attribute Certificates. The PKCS #6 format\
    \ is not in widespread\n   use. In addition, PKIX certificate extensions address\
    \ much of the\n   same functionality and flexibility as was intended in the PKCS\
    \ #6.\n   Thus, sending and receiving agents MUST NOT use PKCS #6 extended\n \
    \  certificates.\n"
- title: 2.3 CertificateSet
  contents:
  - "2.3 CertificateSet\n   Receiving agents MUST be able to handle an arbitrary number\
    \ of\n   certificates of arbitrary relationship to the message sender and to\n\
    \   each other in arbitrary order. In many cases, the certificates\n   included\
    \ in a signed message may represent a chain of certification\n   from the sender\
    \ to a particular root. There may be, however,\n   situations where the certificates\
    \ in a signed message may be\n   unrelated and included for convenience.\n   Sending\
    \ agents SHOULD include any certificates for the user's public\n   key(s) and\
    \ associated issuer certificates. This increases the\n   likelihood that the intended\
    \ recipient can establish trust in the\n   originator's public key(s). This is\
    \ especially important when sending\n   a message to recipients that may not have\
    \ access to the sender's\n   public key through any other means or when sending\
    \ a signed message\n   to a new recipient. The inclusion of certificates in outgoing\n\
    \   messages can be omitted if S/MIME objects are sent within a group of\n   correspondents\
    \ that has established access to each other's\n   certificates by some other means\
    \ such as a shared directory or manual\n   certificate distribution. Receiving\
    \ S/MIME agents SHOULD be able to\n   handle messages without certificates using\
    \ a database or directory\n   lookup scheme.\n   A sending agent SHOULD include\
    \ at least one chain of certificates up\n   to, but not including, a Certificate\
    \ Authority (CA) that it believes\n   that the recipient may trust as authoritative.\
    \ A receiving agent\n   SHOULD be able to handle an arbitrarily large number of\
    \ certificates\n   and chains.\n   Agents MAY send CA certificates, that is, certificates\
    \ that are\n   self-signed and can be considered the \"root\" of other chains.\
    \ Note\n   that receiving agents SHOULD NOT simply trust any self-signed\n   certificates\
    \ as valid CAs, but SHOULD use some other mechanism to\n   determine if this is\
    \ a CA that should be trusted. Also note that in\n   the case of DSA certificates\
    \ the parameters may be located in the\n   root certificate.  This would require\
    \ that the recipient possess the\n   root certificate in order to perform a signature\
    \ verification, and is\n   a valid example of a case where transmitting the root\
    \ certificate may\n   be required.\n   Receiving agents MUST support chaining\
    \ based on the distinguished\n   name fields. Other methods of building certificate\
    \ chains may be\n   supported but are not currently recommended.\n   Receiving\
    \ agents SHOULD support the decoding of X.509 attribute\n   certificates included\
    \ in CMS objects. All other issues regarding the\n   generation and use of X.509\
    \ attribute certificates are outside of the\n   scope of this specification.\n"
- title: 3. Using Distinguished Names for Internet Mail
  contents:
  - "3. Using Distinguished Names for Internet Mail\n   End-entity certificates MAY\
    \ contain an Internet mail address as\n   described in [RFC-822]. The address\
    \ must be an \"addr-spec\" as defined\n   in Section 6.1 of that specification.\
    \  The email address SHOULD be in\n   the subjectAltName extension, and SHOULD\
    \ NOT be in the subject\n   distinguished name.\n   Receiving agents MUST recognize\
    \ email addresses in the subjectAltName\n   field. Receiving agents MUST recognize\
    \ email addresses in the\n   Distinguished Name field in the PKCS #9 emailAddress\
    \ attribute.\n   Sending agents SHOULD make the address in the From or Sender\
    \ header\n   in a mail message match an Internet mail address in the signer's\n\
    \   certificate. Receiving agents MUST check that the address in the From\n  \
    \ or Sender header of a mail message matches an Internet mail address\n   in the\
    \ signer's certificate, if mail addresses are present in the\n   certificate.\
    \ A receiving agent SHOULD provide some explicit alternate\n   processing of the\
    \ message if this comparison fails, which may be to\n   display a message that\
    \ shows the recipient the addresses in the\n   certificate or other certificate\
    \ details.\n   All subject and issuer names MUST be populated (i.e. not an empty\n\
    \   SEQUENCE) in S/MIME-compliant PKIX certificates, except that the\n   subject\
    \ DN in a user's (i.e. end-entity) certificate MAY be an empty\n   SEQUENCE in\
    \ which case the subjectAltName extension will include the\n   subject's identifier\
    \ and MUST be marked as critical.\n"
- title: 4. Certificate Processing
  contents:
  - "4. Certificate Processing\n   A receiving agent needs to provide some certificate\
    \ retrieval\n   mechanism in order to gain access to certificates for recipients\
    \ of\n   digital envelopes. There are many ways to implement certificate\n   retrieval\
    \ mechanisms. X.500 directory service is an excellent example\n   of a certificate\
    \ retrieval-only mechanism that is compatible with\n   classic X.500 Distinguished\
    \ Names. The PKIX Working Group is\n   investigating other mechanisms such as\
    \ directory servers. Another\n   method under consideration by the IETF is to\
    \ provide certificate\n   retrieval services as part of the existing Domain Name\
    \ System (DNS).\n   Until such mechanisms are widely used, their utility may be\
    \ limited\n   by the small number of correspondent's certificates that can be\n\
    \   retrieved. At a minimum, for initial S/MIME deployment, a user agent\n   could\
    \ automatically generate a message to an intended recipient\n   requesting that\
    \ recipient's certificate in a signed return message.\n   Receiving and sending\
    \ agents SHOULD also provide a mechanism to allow\n   a user to \"store and protect\"\
    \ certificates for correspondents in such\n   a way so as to guarantee their later\
    \ retrieval. In many environments,\n   it may be desirable to link the certificate\
    \ retrieval/storage\n   mechanisms together in some sort of certificate database.\
    \ In its\n   simplest form, a certificate database would be local to a particular\n\
    \   user and would function in a similar way as a \"address book\" that\n   stores\
    \ a user's frequent correspondents. In this way, the certificate\n   retrieval\
    \ mechanism would be limited to the certificates that a user\n   has stored (presumably\
    \ from incoming messages).  A comprehensive\n   certificate retrieval/storage\
    \ solution may combine two or more\n   mechanisms to allow the greatest flexibility\
    \ and utility to the user.\n   For instance, a secure Internet mail agent may\
    \ resort to checking a\n   centralized certificate retrieval mechanism for a certificate\
    \ if it\n   can not be found in a user's local certificate storage/retrieval\n\
    \   database.\n   Receiving and sending agents SHOULD provide a mechanism for\
    \ the\n   import and export of certificates, using a CMS certs-only message.\n\
    \   This allows for import and export of full certificate chains as\n   opposed\
    \ to just a single certificate. This is described in [SMIME-\n   MSG].\n"
- title: 4.1 Certificate Revocation Lists
  contents:
  - "4.1 Certificate Revocation Lists\n   In general, it is always better to get the\
    \ latest CRL information\n   from a CA than to get information stored away from\
    \ incoming messages.\n   A receiving agent SHOULD have access to some certificate-revocation\n\
    \   list (CRL) retrieval mechanism in order to gain access to\n   certificate-revocation\
    \ information when validating certificate\n   chains.  A receiving or sending\
    \ agent SHOULD also provide a mechanism\n   to allow a user to store incoming\
    \ certificate-revocation information\n   for correspondents in such a way so as\
    \ to guarantee its later\n   retrieval.\n   Receiving and sending agents SHOULD\
    \ retrieve and utilize CRL\n   information every time a certificate is verified\
    \ as part of a\n   certificate chain validation even if the certificate was already\n\
    \   verified in the past. However, in many instances (such as off-line\n   verification)\
    \ access to the latest CRL information may be difficult\n   or impossible. The\
    \ use of CRL information, therefore, may be dictated\n   by the value of the information\
    \ that is protected. The value of the\n   CRL information in a particular context\
    \ is beyond the scope of this\n   memo but may be governed by the policies associated\
    \ with particular\n   certificate hierarchies.\n   All agents MUST be capable\
    \ of performing revocation checks using CRLs\n   as specified in [KEYM]. All agents\
    \ MUST perform revocation status\n   checking in accordance with [KEYM]. Receiving\
    \ agents MUST recognize\n   CRLs in received S/MIME messages.\n"
- title: 4.2 Certificate Chain Validation
  contents:
  - "4.2 Certificate Chain Validation\n   In creating a user agent for secure messaging,\
    \ certificate, CRL, and\n   certificate chain validation SHOULD be highly automated\
    \ while still\n   acting in the best interests of the user. Certificate, CRL,\
    \ and chain\n   validation MUST be performed as per [KEYM] when validating a\n\
    \   correspondent's public key. This is necessary before using a public\n   key\
    \ to provide security services such as: verifying a signature;\n   encrypting\
    \ a content-encryption key (ex: RSA); or forming a pairwise\n   symmetric key\
    \ (ex: Diffie-Hellman) to be used to encrypt or decrypt a\n   content-encryption\
    \ key.\n   Certificates and CRLs are made available to the chain validation\n\
    \   procedure in two ways: a) incoming messages, and b) certificate and\n   CRL\
    \ retrieval mechanisms. Certificates and CRLs in incoming messages\n   are not\
    \ required to be in any particular order nor are they required\n   to be in any\
    \ way related to the sender or recipient of the message\n   (although in most\
    \ cases they will be related to the sender). Incoming\n   certificates and CRLs\
    \ SHOULD be cached for use in chain validation\n   and optionally stored for later\
    \ use. This temporary certificate and\n   CRL cache SHOULD be used to augment\
    \ any other certificate and CRL\n   retrieval mechanisms for chain validation\
    \ on incoming signed\n   messages.\n"
- title: 4.3 Certificate and CRL Signing Algorithms
  contents:
  - "4.3 Certificate and CRL Signing Algorithms\n   Certificates and Certificate-Revocation\
    \ Lists (CRLs) are signed by\n   the certificate issuer. A receiving agent MUST\
    \ be capable of\n   verifying the signatures on certificates and CRLs made with\
    \ id-dsa-\n   with-sha1 [DSS].\n   A receiving agent SHOULD be capable of verifying\
    \ the signatures on\n   certificates and CRLs made with md2WithRSAEncryption,\n\
    \   md5WithRSAEncryption and sha-1WithRSAEncryption signature algorithms\n   with\
    \ key sizes from 512 bits to 2048 bits described in [PKCS#1V2].\n"
- title: 4.4 PKIX Certificate Extensions
  contents:
  - "4.4 PKIX Certificate Extensions\n   PKIX describes an extensible framework in\
    \ which the basic certificate\n   information can be extended and how such extensions\
    \ can be used to\n   control the process of issuing and validating certificates.\
    \ The PKIX\n   Working Group has ongoing efforts to identify and create extensions\n\
    \   which have value in particular certification environments. Further,\n   there\
    \ are active efforts underway to issue PKIX certificates for\n   business purposes.\
    \ This document identifies the minumum required set\n   of certificate extensions\
    \ which have the greatest value in the S/MIME\n   environment. The syntax and\
    \ semantics of all the identified\n   extensions are defined in [KEYM].\n   Sending\
    \ and receiving agents MUST correctly handle the Basic\n   Constraints Certificate\
    \ Extension, the Key Usage Certificate\n   Extension, authorityKeyID, subjectKeyID,\
    \ and the subjectAltNames when\n   they appear in end-user certificates. Some\
    \ mechanism SHOULD exist to\n   handle the defined certificate extensions when\
    \ they appear in\n   intermediate or CA certificates.\n   Certificates issued\
    \ for the S/MIME environment SHOULD NOT contain any\n   critical extensions (extensions\
    \ that have the critical field set to\n   TRUE) other than those listed here.\
    \ These extensions SHOULD be marked\n   as non-critical unless the proper handling\
    \ of the extension is deemed\n   critical to the correct interpretation of the\
    \ associated certificate.\n   Other extensions may be included, but those extensions\
    \ SHOULD NOT be\n   marked as critical.\n   Interpretation and syntax for all\
    \ extensions MUST follow [KEYM],\n   unless otherwise specified here.\n"
- title: 4.4.1 Basic Constraints Certificate Extension
  contents:
  - "4.4.1 Basic Constraints Certificate Extension\n   The basic constraints extension\
    \ serves to delimit the role and\n   position of an issuing authority or end-entity\
    \ certificate plays in a\n   chain of certificates.\n   For example, certificates\
    \ issued to CAs and subordinate CAs contain a\n   basic constraint extension that\
    \ identifies them as issuing authority\n   certificates. End-entity certificates\
    \ contain an extension that\n   constrains the certificate from being an issuing\
    \ authority\n   certificate.\n   Certificates SHOULD contain a basicConstraints\
    \ extension in CA\n   certificates, and SHOULD NOT contain that extension in end\
    \ entity\n   certificates.\n"
- title: 4.4.2 Key Usage Certificate Extension
  contents:
  - "4.4.2 Key Usage Certificate Extension\n   The key usage extension serves to limit\
    \ the technical purposes for\n   which a public key listed in a valid certificate\
    \ may be used. Issuing\n   authority certificates may contain a key usage extension\
    \ that\n   restricts the key to signing certificates, certificate revocation\n\
    \   lists and other data.\n   For example, a certification authority may create\
    \ subordinate issuer\n   certificates which contain a keyUsage extension which\
    \ specifies that\n   the corresponding public key can be used to sign end user\
    \ certs and\n   sign CRLs.\n   If a key usage extension is included in a PKIX\
    \ certificate, then it\n   MUST be marked as critical.\n"
- title: 4.4.2.1 Key Usage in Diffie-Hellman Key Exchange Certificates
  contents:
  - "4.4.2.1 Key Usage in Diffie-Hellman Key Exchange Certificates\n   For Diffie-Hellman\
    \ key exchange certificates (certificates in which\n   the subject public key\
    \ algorithm is dhpublicnumber), if the keyUsage\n   keyAgreement bit is set to\
    \ 1 AND if the public key is to be used to\n   form a pairwise key to decrypt\
    \ data, then the S/MIME agent MUST only\n   use the public key if the keyUsage\
    \ encipherOnly bit is set to 0. If\n   the keyUsage keyAgreement bit is set to\
    \ 1 AND if the key is to be\n   used to form a pairwise key to encrypt data, then\
    \ the S/MIME agent\n   MUST only use the public key if the keyUsage decipherOnly\
    \ bit is set\n   to 0.\n"
- title: 4.4.3 Subject Alternative Name Extension
  contents:
  - "4.4.3 Subject Alternative Name Extension\n   The subject alternative name extension\
    \ is used in S/MIME as the\n   preferred means to convey the RFC-822 email address(es)\
    \ that\n   correspond to the entity for this certificate. Any RFC-822 email\n\
    \   addresses present MUST be encoded using the rfc822Name CHOICE of the\n   GeneralName\
    \ type. Since the SubjectAltName type is a SEQUENCE OF\n   GeneralName, multiple\
    \ RFC-822 email addresses MAY be present.\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   All of the security issues faced by any cryptographic\
    \ application\n   must be faced by a S/MIME agent. Among these issues are protecting\n\
    \   the user's private key, preventing various attacks, and helping the\n   user\
    \ avoid mistakes such as inadvertently encrypting a message for\n   the wrong\
    \ recipient. The entire list of security considerations is\n   beyond the scope\
    \ of this document, but some significant concerns are\n   listed here.\n   When\
    \ processing certificates, there are many situations where the\n   processing\
    \ might fail. Because the processing may be done by a user\n   agent, a security\
    \ gateway, or other program, there is no single way\n   to handle such failures.\
    \ Just because the methods to handle the\n   failures has not been listed, however,\
    \ the reader should not assume\n   that they are not important. The opposite is\
    \ true: if a certificate\n   is not provably valid and associated with the message,\
    \ the processing\n   software should take immediate and noticable steps to inform\
    \ the end\n   user about it.\n   Some of the many places where signature and certificate\
    \ checking\n   might fail include:\n   - no Internet mail addresses in a certificate\
    \ match the sender\n     of a message\n   - no certificate chain leads to a trusted\
    \ CA\n   - no ability to check the CRL for a certificate\n   - an invalid CRL\
    \ was received\n   - the CRL being checked is expired\n   - the certificate is\
    \ expired\n   - the certificate has been revoked\n   There are certainly other\
    \ instances where a certificate may be\n   invalid, and it is the responsibility\
    \ of the processing software to\n   check them all thoroughly, and to decide what\
    \ to do if the check\n   fails.\n"
- title: A. References
  contents:
  - "A. References\n   [CERTV2]     Dusse, S., Hoffman, P. and B. Ramsdell,\"S/MIME\
    \ Version 2\n                Certificate Handling\", RFC 2312, March 1998.\n \
    \  [CMS]        Housley, R., \"Cryptographic Message Syntax\", RFC 2630,\n   \
    \             June 1999.\n   [DSS]        NIST FIPS PUB 186, \"Digital Signature\
    \ Standard\", 18 May\n                1994.\n   [KEYM]       Housley, R., Ford,\
    \ W., Polk, W. and D. Solo, \"Internet\n                X.509 Public Key Infrastructure\
    \ Certificate and CRL\n                Profile\", RFC 2459, January 1999.\n  \
    \ [MUSTSHOULD] Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \        Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [PKCS#1V2]  \
    \ Kaliski, B., \"PKCS #1: RSA Cryptography Specifications\n                Version\
    \ 2.0\", RFC 2437, October 1998.\n   [RFC-822]    Crocker, D., \"Standard For\
    \ The Format Of ARPA Internet\n                Text Messages\", STD 11, RFC 822,\
    \ August 1982.\n   [SMIME-MSG]  Ramsdell, B., Editor, \"S/MIME Version 3 Message\n\
    \                Specification\", RFC 2633, June 1999.\n   [X.500]      ITU-T\
    \ Recommendation X.500 (1997) | ISO/IEC 9594-1:1997,\n                Information\
    \ technology - Open Systems Interconnection -\n                The Directory:\
    \  Overview of concepts, models and\n                services.\n   [X.501]   \
    \   ITU-T Recommendation X.501 (1997) | ISO/IEC 9594-2:1997,\n               \
    \ Information technology - Open Systems Interconnection -\n                The\
    \ Directory:  Models.\n   [X.509]      ITU-T Recommendation X.509 (1997) | ISO/IEC\
    \ 9594-8:1997,\n                Information technology - Open Systems Interconnection\
    \ -\n                The Directory:  Authentication framework.\n   [X.520]   \
    \   ITU-T Recommendation X.520 (1997) | ISO/IEC 9594-6:1997,\n               \
    \ Information technology - Open Systems Interconnection -\n                The\
    \ Directory:  Selected attribute types.\n"
- title: B. Acknowledgements
  contents:
  - "B. Acknowledgements\n   Many thanks go out to the other authors of the S/MIME\
    \ v2 RFC:  Steve\n   Dusse, Paul Hoffman and Jeff Weinstein. Without v2, there\
    \ wouldn't be\n   a v3.\n   A number of the members of the S/MIME Working Group\
    \ have also worked\n   very hard and contributed to this document. Any list of\
    \ people is\n   doomed to omission and for that I apologize. In alphabetical order,\n\
    \   the following people stand out in my mind due to the fact that they\n   made\
    \ direct contributions to this document.\n   Bill Flanigan Elliott Ginsburg Paul\
    \ Hoffman Russ Housley Michael\n   Myers John Pawling Denis Pinkas Jim Schaad\n"
- title: Editor's Address
  contents:
  - "Editor's Address\n   Blake Ramsdell\n   Worldtalk\n   17720 NE 65th St Ste 201\n\
    \   Redmond, WA 98052\n   Phone: +1 425 376 0225\n   EMail: blaker@deming.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
