- title: __initial_text__
  contents:
  - '       Specification for DNS over Transport Layer Security (TLS)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes the use of Transport Layer Security (TLS)\
    \ to\n   provide privacy for DNS.  Encryption provided by TLS eliminates\n   opportunities\
    \ for eavesdropping and on-path tampering with DNS\n   queries in the network,\
    \ such as discussed in RFC 7626.  In addition,\n   this document specifies two\
    \ usage profiles for DNS over TLS and\n   provides advice on performance considerations\
    \ to minimize overhead\n   from using TCP and TLS with DNS.\n   This document\
    \ focuses on securing stub-to-recursive traffic, as per\n   the charter of the\
    \ DPRIVE Working Group.  It does not prevent future\n   applications of the protocol\
    \ to recursive-to-authoritative traffic.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7858.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Key Words . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  Establishing and Managing DNS-over-TLS Sessions . . . .\
    \ . . .   4\n     3.1.  Session Initiation  . . . . . . . . . . . . . . . . .\
    \ . .   4\n     3.2.  TLS Handshake and Authentication  . . . . . . . . . . .\
    \ .   5\n     3.3.  Transmitting and Receiving Messages . . . . . . . . . . .\
    \   5\n     3.4.  Connection Reuse, Close, and Reestablishment  . . . . . .  \
    \ 6\n   4.  Usage Profiles  . . . . . . . . . . . . . . . . . . . . . . .   7\n\
    \     4.1.  Opportunistic Privacy Profile . . . . . . . . . . . . . .   7\n  \
    \   4.2.  Out-of-Band Key-Pinned Privacy Profile  . . . . . . . . .   7\n   5.\
    \  Performance Considerations  . . . . . . . . . . . . . . . . .   9\n   6.  IANA\
    \ Considerations . . . . . . . . . . . . . . . . . . . . .  10\n   7.  Design\
    \ Evolution  . . . . . . . . . . . . . . . . . . . . . .  10\n   8.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .  11\n   9.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  12\n     9.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  12\n     9.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  13\n   Appendix A.  Out-of-Band\
    \ Key-Pinned Privacy Profile Example . . .  16\n   Acknowledgments . . . . . .\
    \ . . . . . . . . . . . . . . . . . . .  17\n   Contributors  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .  17\n   Authors' Addresses  . . . . . .\
    \ . . . . . . . . . . . . . . . . .  18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Today, nearly all DNS queries [RFC1034] [RFC1035] are sent\n\
    \   unencrypted, which makes them vulnerable to eavesdropping by an\n   attacker\
    \ that has access to the network channel, reducing the privacy\n   of the querier.\
    \  Recent news reports have elevated these concerns,\n   and recent IETF work\
    \ has specified privacy considerations for DNS\n   [RFC7626].\n   Prior work has\
    \ addressed some aspects of DNS security, but until\n   recently, there has been\
    \ little work on privacy between a DNS client\n   and server.  DNS Security Extensions\
    \ (DNSSEC) [RFC4033] provide\n   _response integrity_ by defining mechanisms to\
    \ cryptographically sign\n   zones, allowing end users (or their first-hop resolver)\
    \ to verify\n   replies are correct.  By intention, DNSSEC does not protect request\n\
    \   and response privacy.  Traditionally, either privacy was not\n   considered\
    \ a requirement for DNS traffic or it was assumed that\n   network traffic was\
    \ sufficiently private; however, these perceptions\n   are evolving due to recent\
    \ events [RFC7258].\n   Other work that has offered the potential to encrypt between\
    \ DNS\n   clients and servers includes DNSCurve [DNSCurve], DNSCrypt\n   [DNSCRYPT-WEBSITE],\
    \ Confidential DNS [CONFIDENTIAL-DNS], and IPSECA\n   [IPSECA].  In addition to\
    \ the present specification, the DPRIVE\n   Working Group has also adopted a proposal\
    \ for DNS over Datagram\n   Transport Layer Security (DTLS) [DNSoD].\n   This\
    \ document describes using DNS over TLS on a well-known port and\n   also offers\
    \ advice on performance considerations to minimize\n   overheads from using TCP\
    \ and TLS with DNS.\n   Initiation of DNS over TLS is very straightforward.  By\
    \ establishing\n   a connection over a well-known port, clients and servers expect\
    \ and\n   agree to negotiate a TLS session to secure the channel.  Deployment\n\
    \   will be gradual.  Not all servers will support DNS over TLS and the\n   well-known\
    \ port might be blocked by some firewalls.  Clients will be\n   expected to keep\
    \ track of servers that support TLS and those that\n   don't.  Clients and servers\
    \ will adhere to the TLS implementation\n   recommendations and security considerations\
    \ of [BCP195].\n   The protocol described here works for queries and responses\
    \ between\n   stub clients and recursive servers.  It might work equally between\n\
    \   recursive clients and authoritative servers, but this application of\n   the\
    \ protocol is out of scope for the DNS PRIVate Exchange (DPRIVE)\n   Working Group\
    \ per its current charter.\n   This document describes two profiles in Section\
    \ 4 that provide\n   different levels of assurance of privacy: an opportunistic\
    \ privacy\n   profile and an out-of-band key-pinned privacy profile.  It is\n\
    \   expected that a future document based on [TLS-DTLS-PROFILES] will\n   further\
    \ describe additional privacy profiles for DNS over both TLS\n   and DTLS.\n \
    \  An earlier draft version of this document described a technique for\n   upgrading\
    \ a DNS-over-TCP connection to a DNS-over-TLS session with,\n   essentially, \"\
    STARTTLS for DNS\".  To simplify the protocol, this\n   document now only uses\
    \ a well-known port to specify TLS use, omitting\n   the upgrade approach.  The\
    \ upgrade approach no longer appears in this\n   document, which now focuses exclusively\
    \ on the use of a well-known\n   port for DNS over TLS.\n"
- title: 2.  Key Words
  contents:
  - "2.  Key Words\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  Establishing and Managing DNS-over-TLS Sessions
  contents:
  - '3.  Establishing and Managing DNS-over-TLS Sessions

    '
- title: 3.1.  Session Initiation
  contents:
  - "3.1.  Session Initiation\n   By default, a DNS server that supports DNS over\
    \ TLS MUST listen for\n   and accept TCP connections on port 853, unless it has\
    \ mutual\n   agreement with its clients to use a port other than 853 for DNS over\n\
    \   TLS.  In order to use a port other than 853, both clients and servers\n  \
    \ would need a configuration option in their software.\n   By default, a DNS client\
    \ desiring privacy from DNS over TLS from a\n   particular server MUST establish\
    \ a TCP connection to port 853 on the\n   server, unless it has mutual agreement\
    \ with its server to use a port\n   other than port 853 for DNS over TLS.  Such\
    \ another port MUST NOT be\n   port 53 but MAY be from the \"first-come, first-served\"\
    \ port range.\n   This recommendation against use of port 53 for DNS over TLS\
    \ is to\n   avoid complication in selecting use or non-use of TLS and to reduce\n\
    \   risk of downgrade attacks.  The first data exchange on this TCP\n   connection\
    \ MUST be the client and server initiating a TLS handshake\n   using the procedure\
    \ described in [RFC5246].\n   DNS clients and servers MUST NOT use port 853 to\
    \ transport cleartext\n   DNS messages.  DNS clients MUST NOT send and DNS servers\
    \ MUST NOT\n   respond to cleartext DNS messages on any port used for DNS over\
    \ TLS\n   (including, for example, after a failed TLS handshake).  There are\n\
    \   significant security issues in mixing protected and unprotected data,\n  \
    \ and for this reason, TCP connections on a port designated by a given\n   server\
    \ for DNS over TLS are reserved purely for encrypted\n   communications.\n   DNS\
    \ clients SHOULD remember server IP addresses that don't support\n   DNS over\
    \ TLS, including timeouts, connection refusals, and TLS\n   handshake failures,\
    \ and not request DNS over TLS from them for a\n   reasonable period (such as\
    \ one hour per server).  DNS clients\n   following an out-of-band key-pinned privacy\
    \ profile (Section 4.2) MAY\n   be more aggressive about retrying DNS-over-TLS\
    \ connection failures.\n"
- title: 3.2.  TLS Handshake and Authentication
  contents:
  - "3.2.  TLS Handshake and Authentication\n   Once the DNS client succeeds in connecting\
    \ via TCP on the well-known\n   port for DNS over TLS, it proceeds with the TLS\
    \ handshake [RFC5246],\n   following the best practices specified in [BCP195].\n\
    \   The client will then authenticate the server, if required.  This\n   document\
    \ does not propose new ideas for authentication.  Depending on\n   the privacy\
    \ profile in use (Section 4), the DNS client may choose not\n   to require authentication\
    \ of the server, or it may make use of a\n   trusted Subject Public Key Info (SPKI)\
    \ Fingerprint pin set.\n   After TLS negotiation completes, the connection will\
    \ be encrypted and\n   is now protected from eavesdropping.\n"
- title: 3.3.  Transmitting and Receiving Messages
  contents:
  - "3.3.  Transmitting and Receiving Messages\n   All messages (requests and responses)\
    \ in the established TLS session\n   MUST use the two-octet length field described\
    \ in Section 4.2.2 of\n   [RFC1035].  For reasons of efficiency, DNS clients and\
    \ servers SHOULD\n   pass the two-octet length field, and the message described\
    \ by that\n   length field, to the TCP layer at the same time (e.g., in a single\n\
    \   \"write\" system call) to make it more likely that all the data will be\n\
    \   transmitted in a single TCP segment ([RFC7766], Section 8).\n   In order to\
    \ minimize latency, clients SHOULD pipeline multiple\n   queries over a TLS session.\
    \  When a DNS client sends multiple queries\n   to a server, it should not wait\
    \ for an outstanding reply before\n   sending the next query ([RFC7766], Section\
    \ 6.2.1.1).\n   Since pipelined responses can arrive out of order, clients MUST\
    \ match\n   responses to outstanding queries on the same TLS connection using\
    \ the\n   Message ID.  If the response contains a Question Section, the client\n\
    \   MUST match the QNAME, QCLASS, and QTYPE fields.  Failure by clients\n   to\
    \ properly match responses to outstanding queries can have serious\n   consequences\
    \ for interoperability ([RFC7766], Section 7).\n"
- title: 3.4.  Connection Reuse, Close, and Reestablishment
  contents:
  - "3.4.  Connection Reuse, Close, and Reestablishment\n   For DNS clients that use\
    \ library functions such as \"getaddrinfo()\"\n   and \"gethostbyname()\", current\
    \ implementations are known to open and\n   close TCP connections for each DNS\
    \ query.  To avoid excess TCP\n   connections, each with a single query, clients\
    \ SHOULD reuse a single\n   TCP connection to the recursive resolver.  Alternatively,\
    \ they may\n   prefer to use UDP to a DNS-over-TLS-enabled caching resolver on\
    \ the\n   same machine that then uses a system-wide TCP connection to the\n  \
    \ recursive resolver.\n   In order to amortize TCP and TLS connection setup costs,\
    \ clients and\n   servers SHOULD NOT immediately close a connection after each\n\
    \   response.  Instead, clients and servers SHOULD reuse existing\n   connections\
    \ for subsequent queries as long as they have sufficient\n   resources.  In some\
    \ cases, this means that clients and servers may\n   need to keep idle connections\
    \ open for some amount of time.\n   Proper management of established and idle\
    \ connections is important to\n   the healthy operation of a DNS server.  An implementor\
    \ of DNS over\n   TLS SHOULD follow best practices for DNS over TCP, as described\
    \ in\n   [RFC7766].  Failure to do so may lead to resource exhaustion and\n  \
    \ denial of service.\n   Whereas client and server implementations from the era\
    \ of [RFC1035]\n   are known to have poor TCP connection management, this document\n\
    \   stipulates that successful negotiation of TLS indicates the\n   willingness\
    \ of both parties to keep idle DNS connections open,\n   independent of timeouts\
    \ or other recommendations for DNS over TCP\n   without TLS.  In other words,\
    \ software implementing this protocol is\n   assumed to support idle, persistent\
    \ connections and be prepared to\n   manage multiple, potentially long-lived TCP\
    \ connections.\n   This document does not make specific recommendations for timeout\n\
    \   values on idle connections.  Clients and servers should reuse and/or\n   close\
    \ connections depending on the level of available resources.\n   Timeouts may\
    \ be longer during periods of low activity and shorter\n   during periods of high\
    \ activity.  Current work in this area may also\n   assist DNS-over-TLS clients\
    \ and servers in selecting useful timeout\n   values [RFC7828] [TDNS].\n   Clients\
    \ and servers that keep idle connections open MUST be robust to\n   termination\
    \ of idle connection by either party.  As with current DNS\n   over TCP, DNS servers\
    \ MAY close the connection at any time (perhaps\n   due to resource constraints).\
    \  As with current DNS over TCP, clients\n   MUST handle abrupt closes and be\
    \ prepared to reestablish connections\n   and/or retry queries.\n   When reestablishing\
    \ a DNS-over-TCP connection that was terminated, as\n   discussed in [RFC7766],\
    \ TCP Fast Open [RFC7413] is of benefit.\n   Underlining the requirement for sending\
    \ only encrypted DNS data on a\n   DNS-over-TLS port (Section 3.2), when using\
    \ TCP Fast Open, the client\n   and server MUST immediately initiate or resume\
    \ a TLS handshake\n   (cleartext DNS MUST NOT be exchanged).  DNS servers SHOULD\
    \ enable\n   fast TLS session resumption [RFC5077], and this SHOULD be used when\n\
    \   reestablishing connections.\n   When closing a connection, DNS servers SHOULD\
    \ use the TLS close-\n   notify request to shift TCP TIME-WAIT state to the clients.\n\
    \   Additional requirements and guidance for optimizing DNS over TCP are\n   provided\
    \ by [RFC7766].\n"
- title: 4.  Usage Profiles
  contents:
  - "4.  Usage Profiles\n   This protocol provides flexibility to accommodate several\
    \ different\n   use cases.  This document defines two usage profiles: (1)\n  \
    \ opportunistic privacy and (2) out-of-band key-pinned authentication\n   that\
    \ can be used to obtain stronger privacy guarantees if the client\n   has a trusted\
    \ relationship with a DNS server supporting TLS.\n   Additional methods of authentication\
    \ will be defined in a forthcoming\n   document [TLS-DTLS-PROFILES].\n"
- title: 4.1.  Opportunistic Privacy Profile
  contents:
  - "4.1.  Opportunistic Privacy Profile\n   For opportunistic privacy, analogous\
    \ to SMTP opportunistic security\n   [RFC7435], one does not require privacy,\
    \ but one desires privacy when\n   possible.\n   With opportunistic privacy, a\
    \ client might learn of a TLS-enabled\n   recursive DNS resolver from an untrusted\
    \ source.  One possible\n   example flow would be if the client used the DHCP\
    \ DNS server option\n   [RFC3646] to discover the IP address of a TLS-enabled\
    \ recursive and\n   then attempted DNS over TLS on port 853.  With such a discovered\
    \ DNS\n   server, the client might or might not validate the resolver.  These\n\
    \   choices maximize availability and performance, but they leave the\n   client\
    \ vulnerable to on-path attacks that remove privacy.\n   Opportunistic privacy\
    \ can be used by any current client, but it only\n   provides privacy when there\
    \ are no on-path active attackers.\n"
- title: 4.2.  Out-of-Band Key-Pinned Privacy Profile
  contents:
  - "4.2.  Out-of-Band Key-Pinned Privacy Profile\n   The out-of-band key-pinned privacy\
    \ profile can be used in\n   environments where an established trust relationship\
    \ already exists\n   between DNS clients and servers (e.g., stub-to-recursive\
    \ in\n   enterprise networks, actively maintained contractual service\n   relationships,\
    \ or a client using a public DNS resolver).  The result\n   of this profile is\
    \ that the client has strong guarantees about the\n   privacy of its DNS data\
    \ by connecting only to servers it can\n   authenticate.  Operators of a DNS-over-TLS\
    \ service in this profile\n   are expected to provide pins that are specific to\
    \ the service being\n   pinned (i.e., public keys belonging directly to the end\
    \ entity or to\n   a service-specific private certificate authority (CA)) and\
    \ not to a\n   public key(s) of a generic public CA.\n   In this profile, clients\
    \ authenticate servers by matching a set of\n   SPKI Fingerprints in an analogous\
    \ manner to that described in\n   [RFC7469].  With this out-of-band key-pinned\
    \ privacy profile, client\n   administrators SHOULD deploy a backup pin along\
    \ with the primary pin,\n   for the reasons explained in [RFC7469].  A backup\
    \ pin is especially\n   helpful in the event of a key rollover, so that a server\
    \ operator\n   does not have to coordinate key transitions with all its clients\n\
    \   simultaneously.  After a change of keys on the server, an updated pin\n  \
    \ set SHOULD be distributed to all clients in some secure way in\n   preparation\
    \ for future key rollover.  The mechanism for an\n   out-of-band pin set update\
    \ is out of scope for this document.\n   Such a client will only use DNS servers\
    \ for which an SPKI Fingerprint\n   pin set has been provided.  The possession\
    \ of a trusted pre-deployed\n   pin set allows the client to detect and prevent\
    \ person-in-the-middle\n   and downgrade attacks.\n   However, a configured DNS\
    \ server may be temporarily unavailable when\n   configuring a network.  For example,\
    \ for clients on networks that\n   require authentication through web-based login,\
    \ such authentication\n   may rely on DNS interception and spoofing.  Techniques\
    \ such as those\n   used by DNSSEC-trigger [DNSSEC-TRIGGER] MAY be used during\
    \ network\n   configuration, with the intent to transition to the designated DNS\n\
    \   provider after authentication.  The user MUST be alerted whenever\n   possible\
    \ that the DNS is not private during such bootstrap.\n   Upon successful TLS connection\
    \ and handshake, the client computes the\n   SPKI Fingerprints for the public\
    \ keys found in the validated server's\n   certificate chain (or in the raw public\
    \ key, if the server provides\n   that instead).  If a computed fingerprint exactly\
    \ matches one of the\n   configured pins, the client continues with the connection\
    \ as normal.\n   Otherwise, the client MUST treat the SPKI validation failure\
    \ as a\n   non-recoverable error.  Appendix A provides a detailed example of how\n\
    \   this authentication could be performed in practice.\n   Implementations of\
    \ this privacy profile MUST support the calculation\n   of a fingerprint as the\
    \ SHA-256 [RFC6234] hash of the DER-encoded\n   ASN.1 representation of the SPKI\
    \ of an X.509 certificate.\n   Implementations MUST support the representation\
    \ of a SHA-256\n   fingerprint as a base64-encoded character string [RFC4648].\n\
    \   Additional fingerprint types MAY also be supported.\n"
- title: 5.  Performance Considerations
  contents:
  - "5.  Performance Considerations\n   DNS over TLS incurs additional latency at\
    \ session startup.  It also\n   requires additional state (memory) and increased\
    \ processing (CPU).\n   Latency:  Compared to UDP, DNS over TCP requires an additional\
    \ round-\n      trip time (RTT) of latency to establish a TCP connection.  TCP\n\
    \      Fast Open [RFC7413] can eliminate that RTT when information exists\n  \
    \    from prior connections.  The TLS handshake adds another two RTTs\n      of\
    \ latency.  Clients and servers should support connection\n      keepalive (reuse)\
    \ and out-of-order processing to amortize\n      connection setup costs.  Fast\
    \ TLS connection resumption [RFC5077]\n      further reduces the setup delay and\
    \ avoids the DNS server keeping\n      per-client session state.\n      TLS False\
    \ Start [TLS-FALSESTART] can also lead to a latency\n      reduction in certain\
    \ situations.  Implementations supporting TLS\n      False Start need to be aware\
    \ that it imposes additional\n      constraints on how one uses TLS, over and\
    \ above those stated in\n      [BCP195].  It is unsafe to use False Start if your\
    \ implementation\n      and deployment does not adhere to these specific requirements.\n\
    \      See [TLS-FALSESTART] for the details of these additional\n      constraints.\n\
    \   State:  The use of connection-oriented TCP requires keeping\n      additional\
    \ state at the server in both the kernel and application.\n      The state requirements\
    \ are of particular concern on servers with\n      many clients, although memory-optimized\
    \ TLS can add only modest\n      state over TCP.  Smaller timeout values will\
    \ reduce the number of\n      concurrent connections, and servers can preemptively\
    \ close\n      connections when resource limits are exceeded.\n   Processing:\
    \  The use of TLS encryption algorithms results in slightly\n      higher CPU\
    \ usage.  Servers can choose to refuse new DNS-over-TLS\n      clients if processing\
    \ limits are exceeded.\n   Number of connections:  To minimize state on DNS servers\
    \ and\n      connection startup time, clients SHOULD minimize the creation of\n\
    \      new TCP connections.  Use of a local DNS request aggregator (a\n      particular\
    \ type of forwarder) allows a single active DNS-over-TLS\n      connection from\
    \ any given client computer to its server.\n      Additional guidance can be found\
    \ in [RFC7766].\n   A full performance evaluation is outside the scope of this\n\
    \   specification.  A more detailed analysis of the performance\n   implications\
    \ of DNS over TLS (and DNS over TCP) is discussed in\n   [TDNS] and [RFC7766].\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   IANA has added the following value to the \"Service\
    \ Name and Transport\n   Protocol Port Number Registry\" in the System Range.\
    \  The registry for\n   that range requires IETF Review or IESG Approval [RFC6335],\
    \ and such\n   a review was requested using the early allocation process [RFC7120]\n\
    \   for the well-known TCP port in this document.\n   IANA has reserved the same\
    \ port number over UDP for the proposed DNS-\n   over-DTLS protocol [DNSoD].\n\
    \    Service Name           domain-s\n    Port Number            853\n    Transport\
    \ Protocol(s)  TCP/UDP\n    Assignee               IESG\n    Contact         \
    \       IETF Chair\n    Description            DNS query-response protocol run\
    \ over TLS/DTLS\n    Reference              This document\n"
- title: 7.  Design Evolution
  contents:
  - "7.  Design Evolution\n   Earlier draft versions of this document proposed an\
    \ upgrade-based\n   approach to establish a TLS session.  The client would signal\
    \ its\n   interest in TLS by setting a \"TLS OK\" bit in the Extensions\n   Mechanisms\
    \ for DNS (EDNS(0)) flags field.  A server would signal its\n   acceptance by\
    \ responding with the TLS OK bit set.\n   Since we assume the client doesn't want\
    \ to reveal (leak) any\n   information prior to securing the channel, we proposed\
    \ the use of a\n   \"dummy query\" that clients could send for this purpose. \
    \ The proposed\n   query name was STARTTLS, query type TXT, and query class CH.\n\
    \   The TLS OK signaling approach has both advantages and disadvantages.\n   One\
    \ important advantage is that clients and servers could negotiate\n   TLS.  If\
    \ the server is too busy, or doesn't want to provide TLS\n   service to a particular\
    \ client, it can respond negatively to the TLS\n   probe.  An ancillary benefit\
    \ is that servers could collect\n   information on adoption of DNS over TLS (via\
    \ the TLS OK bit in\n   queries) before implementation and deployment.  Another\
    \ anticipated\n   advantage is the expectation that DNS over TLS would work over\
    \ port\n   53.  That is, no need to \"waste\" another port and deploy new firewall\n\
    \   rules on middleboxes.\n   However, at the same time, there was uncertainty\
    \ whether or not\n   middleboxes would pass the TLS OK bit, given that the EDNS0\
    \ flags\n   field has been unchanged for many years.  Another disadvantage is\n\
    \   that the TLS OK bit may make downgrade attacks easy and\n   indistinguishable\
    \ from broken middleboxes.  From a performance\n   standpoint, the upgrade-based\
    \ approach had the disadvantage of\n   requiring 1xRTT additional latency for\
    \ the dummy query.\n   Following this proposal, DNS over DTLS was proposed separately.\
    \  DNS\n   over DTLS claimed it could work over port 53, but only because a non-\n\
    \   DTLS server interprets a DNS-over-DTLS query as a response.  That is,\n  \
    \ the non-DTLS server observes the QR flag set to 1.  While this\n   technically\
    \ works, it seems unfortunate and perhaps even undesirable.\n   DNS over both\
    \ TLS and DTLS can benefit from a single well-known port\n   and avoid extra latency\
    \ and misinterpreted queries as responses.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Use of DNS over TLS is designed to address the\
    \ privacy risks that\n   arise out of the ability to eavesdrop on DNS messages.\
    \  It does not\n   address other security issues in DNS, and there are a number\
    \ of\n   residual risks that may affect its success at protecting privacy:\n \
    \  1.  There are known attacks on TLS, such as person-in-the-middle and\n    \
    \   protocol downgrade.  These are general attacks on TLS and not\n       specific\
    \ to DNS over TLS; please refer to the TLS RFCs for\n       discussion of these\
    \ security issues.  Clients and servers MUST\n       adhere to the TLS implementation\
    \ recommendations and security\n       considerations of [BCP195].  DNS clients\
    \ keeping track of servers\n       known to support TLS enables clients to detect\
    \ downgrade attacks.\n       For servers with no connection history and no apparent\
    \ support\n       for TLS, depending on their privacy profile and privacy\n  \
    \     requirements, clients may choose to (a) try another server when\n      \
    \ available, (b) continue without TLS, or (c) refuse to forward the\n       query.\n\
    \   2.  Middleboxes [RFC3234] are present in some networks and have been\n   \
    \    known to interfere with normal DNS resolution.  Use of a\n       designated\
    \ port for DNS over TLS should avoid such interference.\n       In general, clients\
    \ that attempt TLS and fail can either fall\n       back on unencrypted DNS or\
    \ wait and retry later, depending on\n       their privacy profile and privacy\
    \ requirements.\n   3.  Any DNS protocol interactions performed in the clear can\
    \ be\n       modified by a person-in-the-middle attacker.  For example,\n    \
    \   unencrypted queries and responses might take place over port 53\n       between\
    \ a client and server.  For this reason, clients MAY\n       discard cached information\
    \ about server capabilities advertised\n       in cleartext.\n   4.  This document\
    \ does not, itself, specify ideas to resist known\n       traffic analysis or\
    \ side-channel leaks.  Even with encrypted\n       messages, a well-positioned\
    \ party may be able to glean certain\n       details from an analysis of message\
    \ timings and sizes.  Clients\n       and servers may consider the use of a padding\
    \ method to address\n       privacy leakage due to message sizes [RFC7830].  Since\
    \ traffic\n       analysis can be based on many kinds of patterns and many kinds\
    \ of\n       classifiers, simple padding schemes alone might not be sufficient\n\
    \       to mitigate such an attack.  Padding will, however, form a part\n    \
    \   of more complex mitigations for traffic-analysis attacks that are\n      \
    \ likely to be developed over time.  Implementors who can offer\n       flexibility\
    \ in terms of how padding can be used may be in a\n       better position to enable\
    \ such mitigations to be deployed in the\n       future.\n   As noted earlier,\
    \ DNSSEC and DNS over TLS are independent and fully\n   compatible protocols,\
    \ each solving different problems.  The use of\n   one does not diminish the need\
    \ nor the usefulness of the other.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [BCP195]   Sheffer, Y., Holz, R., and P. Saint-Andre,\n\
    \              \"Recommendations for Secure Use of Transport Layer\n         \
    \     Security (TLS) and Datagram Transport Layer Security\n              (DTLS)\"\
    , BCP 195, RFC 7525, May 2015,\n              <https://www.rfc-editor.org/info/bcp195>.\n\
    \   [RFC1034]  Mockapetris, P., \"Domain names - concepts and facilities\",\n\
    \              STD 13, RFC 1034, DOI 10.17487/RFC1034, November 1987,\n      \
    \        <http://www.rfc-editor.org/info/rfc1034>.\n   [RFC1035]  Mockapetris,\
    \ P., \"Domain names - implementation and\n              specification\", STD\
    \ 13, RFC 1035, DOI 10.17487/RFC1035,\n              November 1987, <http://www.rfc-editor.org/info/rfc1035>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC4648]\
    \  Josefsson, S., \"The Base16, Base32, and Base64 Data\n              Encodings\"\
    , RFC 4648, DOI 10.17487/RFC4648, October 2006,\n              <http://www.rfc-editor.org/info/rfc4648>.\n\
    \   [RFC5077]  Salowey, J., Zhou, H., Eronen, P., and H. Tschofenig,\n       \
    \       \"Transport Layer Security (TLS) Session Resumption without\n        \
    \      Server-Side State\", RFC 5077, DOI 10.17487/RFC5077,\n              January\
    \ 2008, <http://www.rfc-editor.org/info/rfc5077>.\n   [RFC5246]  Dierks, T. and\
    \ E. Rescorla, \"The Transport Layer Security\n              (TLS) Protocol Version\
    \ 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246, August 2008,\n       \
    \       <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC6234]  Eastlake 3rd,\
    \ D. and T. Hansen, \"US Secure Hash Algorithms\n              (SHA and SHA-based\
    \ HMAC and HKDF)\", RFC 6234,\n              DOI 10.17487/RFC6234, May 2011,\n\
    \              <http://www.rfc-editor.org/info/rfc6234>.\n   [RFC6335]  Cotton,\
    \ M., Eggert, L., Touch, J., Westerlund, M., and S.\n              Cheshire, \"\
    Internet Assigned Numbers Authority (IANA)\n              Procedures for the Management\
    \ of the Service Name and\n              Transport Protocol Port Number Registry\"\
    , BCP 165,\n              RFC 6335, DOI 10.17487/RFC6335, August 2011,\n     \
    \         <http://www.rfc-editor.org/info/rfc6335>.\n   [RFC7120]  Cotton, M.,\
    \ \"Early IANA Allocation of Standards Track Code\n              Points\", BCP\
    \ 100, RFC 7120, DOI 10.17487/RFC7120, January\n              2014, <http://www.rfc-editor.org/info/rfc7120>.\n\
    \   [RFC7469]  Evans, C., Palmer, C., and R. Sleevi, \"Public Key Pinning\n  \
    \            Extension for HTTP\", RFC 7469, DOI 10.17487/RFC7469, April\n   \
    \           2015, <http://www.rfc-editor.org/info/rfc7469>.\n   [RFC7766]  Dickinson,\
    \ J., Dickinson, S., Bellis, R., Mankin, A., and\n              D. Wessels, \"\
    DNS Transport over TCP - Implementation\n              Requirements\", RFC 7766,\
    \ DOI 10.17487/RFC7766, March 2016,\n              <http://www.rfc-editor.org/info/rfc7766>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [CONFIDENTIAL-DNS]\n              Wijngaards,\
    \ W. and G. Wiley, \"Confidential DNS\", Work in\n              Progress, draft-wijngaards-dnsop-confidentialdns-03,\
    \ March\n              2015.\n   [DNSCRYPT-WEBSITE]\n              Denis, F.,\
    \ \"DNSCrypt\", December 2015,\n              <https://www.dnscrypt.org/>.\n \
    \  [DNSCurve] Dempsky, M., \"DNSCurve: Link-Level Security for the Domain\n  \
    \            Name System\", Work in Progress, draft-dempsky-dnscurve-01,\n   \
    \           February 2010.\n   [DNSoD]    Reddy, T., Wing, D., and P. Patil, \"\
    DNS over DTLS\n              (DNSoD)\", Work in Progress, draft-ietf-dprive-dnsodtls-06,\n\
    \              April 2016.\n   [DNSSEC-TRIGGER]\n              NLnet Labs, \"\
    Dnssec-Trigger\", May 2014,\n              <https://www.nlnetlabs.nl/projects/dnssec-trigger/>.\n\
    \   [IPSECA]   Osterweil, E., Wiley, G., Okubo, T., Lavu, R., and A.\n       \
    \       Mohaisen, \"Opportunistic Encryption with DANE Semantics\n           \
    \   and IPsec: IPSECA\", Work in Progress,\n              draft-osterweil-dane-ipsec-03,\
    \ July 2015.\n   [RFC3234]  Carpenter, B. and S. Brim, \"Middleboxes: Taxonomy\
    \ and\n              Issues\", RFC 3234, DOI 10.17487/RFC3234, February 2002,\n\
    \              <http://www.rfc-editor.org/info/rfc3234>.\n   [RFC3646]  Droms,\
    \ R., Ed., \"DNS Configuration options for Dynamic\n              Host Configuration\
    \ Protocol for IPv6 (DHCPv6)\", RFC 3646,\n              DOI 10.17487/RFC3646,\
    \ December 2003,\n              <http://www.rfc-editor.org/info/rfc3646>.\n  \
    \ [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n       \
    \       Rose, \"DNS Security Introduction and Requirements\",\n              RFC\
    \ 4033, DOI 10.17487/RFC4033, March 2005,\n              <http://www.rfc-editor.org/info/rfc4033>.\n\
    \   [RFC7258]  Farrell, S. and H. Tschofenig, \"Pervasive Monitoring Is an\n \
    \             Attack\", BCP 188, RFC 7258, DOI 10.17487/RFC7258, May\n       \
    \       2014, <http://www.rfc-editor.org/info/rfc7258>.\n   [RFC7413]  Cheng,\
    \ Y., Chu, J., Radhakrishnan, S., and A. Jain, \"TCP\n              Fast Open\"\
    , RFC 7413, DOI 10.17487/RFC7413, December 2014,\n              <http://www.rfc-editor.org/info/rfc7413>.\n\
    \   [RFC7435]  Dukhovni, V., \"Opportunistic Security: Some Protection\n     \
    \         Most of the Time\", RFC 7435, DOI 10.17487/RFC7435,\n              December\
    \ 2014, <http://www.rfc-editor.org/info/rfc7435>.\n   [RFC7626]  Bortzmeyer, S.,\
    \ \"DNS Privacy Considerations\", RFC 7626,\n              DOI 10.17487/RFC7626,\
    \ August 2015,\n              <http://www.rfc-editor.org/info/rfc7626>.\n   [RFC7828]\
    \  Wouters, P., Abley, J., Dickinson, S., and R. Bellis, \"The\n             \
    \ edns-tcp-keepalive EDNS0 Option\", RFC 7828,\n              DOI 10.17487/RFC7828,\
    \ April 2016,\n              <http://www.rfc-editor.org/info/rfc7828>.\n   [RFC7830]\
    \  Mayrhofer, A., \"The EDNS(0) Padding Option\", RFC 7830,\n              DOI\
    \ 10.17487/RFC7830, May 2016,\n              <http://www.rfc-editor.org/info/rfc7830>.\n\
    \   [TDNS]     Zhu, L., Hu, Z., Heidemann, J., Wessels, D., Mankin, A.,\n    \
    \          and N. Somaiya, \"Connection-Oriented DNS to Improve\n            \
    \  Privacy and Security\", 2015 IEEE Symposium on Security and\n             \
    \ Privacy (SP), DOI 10.1109/SP.2015.18,\n              <http://dx.doi.org/10.1109/SP.2015.18>.\n\
    \   [TLS-DTLS-PROFILES]\n              Dickinson, S., Gillmor, D., and T. Reddy,\
    \ \"Authentication\n              and (D)TLS Profile for DNS-over-TLS and DNS-over-DTLS\"\
    ,\n              Work in Progress, draft-ietf-dprive-dtls-and-tls-\n         \
    \     profiles-01, March 2016.\n   [TLS-FALSESTART]\n              Langley, A.,\
    \ Modadugu, N., and B. Moeller, \"Transport\n              Layer Security (TLS)\
    \ False Start\", Work in Progress,\n              draft-ietf-tls-falsestart-02,\
    \ May 2016.\n"
- title: Appendix A.  Out-of-Band Key-Pinned Privacy Profile Example
  contents:
  - "Appendix A.  Out-of-Band Key-Pinned Privacy Profile Example\n   This section\
    \ presents an example of how the out-of-band key-pinned\n   privacy profile could\
    \ work in practice based on a minimal pin set\n   (two pins).\n   A DNS client\
    \ system is configured with an out-of-band key-pinned\n   privacy profile from\
    \ a network service, using a pin set containing\n   two pins.  Represented in\
    \ HTTP Public Key Pinning (HPKP) [RFC7469]\n   style, the pins are:\n   o  pin-sha256=\"\
    FHkyLhvI0n70E47cJlRTamTrnYVcsYdjUGbr79CfAVI=\"\n   o  pin-sha256=\"dFSY3wdPU8L0u/8qECuz5wtlSgnorYV2f66L6GNQg6w=\"\
    \n   The client also configures the IP addresses of its expected DNS\n   server:\
    \ perhaps 192.0.2.3 and 2001:db8::2:4.\n   The client connects to one of these\
    \ addresses on TCP port 853 and\n   begins the TLS handshake: negotiation of TLS\
    \ 1.2 with a Diffie-\n   Hellman key exchange.  The server sends a certificate\
    \ message with a\n   list of three certificates (A, B, and C) and signs the\n\
    \   ServerKeyExchange message correctly with the public key found in\n   certificate\
    \ A.\n   The client now takes the SHA-256 digest of the SPKI in cert A and\n \
    \  compares it against both pins in the pin set.  If either pin matches,\n   the\
    \ verification is successful; the client continues with the TLS\n   connection\
    \ and can make its first DNS query.\n   If neither pin matches the SPKI of cert\
    \ A, the client verifies that\n   cert A is actually issued by cert B.  If it\
    \ is, it takes the SHA-256\n   digest of the SPKI in cert B and compares it against\
    \ both pins in the\n   pin set.  If either pin matches, the verification is successful.\n\
    \   Otherwise, it verifies that B was issued by C and then compares the\n   pins\
    \ against the digest of C's SPKI.\n   If none of the SPKIs in the cryptographically\
    \ valid chain of certs\n   match any pin in the pin set, the client closes the\
    \ connection with\n   an error and marks the IP address as failed.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to thank Stephane Bortzmeyer, John\
    \ Dickinson,\n   Brian Haberman, Christian Huitema, Shumon Huque, Simon Joseffson,\n\
    \   Kim-Minh Kaplan, Simon Kelley, Warren Kumari, John Levine, Ilari\n   Liusvaara,\
    \ Bill Manning, George Michaelson, Eric Osterweil, Jinmei\n   Tatuya, Tim Wicinski,\
    \ and Glen Wiley for reviewing this\n   specification.  They also thank Nikita\
    \ Somaiya for early work on this\n   idea.\n   Work by Zi Hu, Liang Zhu, and John\
    \ Heidemann on this document is\n   partially sponsored by the U.S. Dept. of Homeland\
    \ Security (DHS)\n   Science and Technology Directorate, Homeland Security Advanced\n\
    \   Research Projects Agency (HSARPA), Cyber Security Division, BAA\n   11-01-RIKA\
    \ and Air Force Research Laboratory, Information Directorate\n   under agreement\
    \ number FA8750-12-2-0344, and contract number\n   D08PC75599.\n"
- title: Contributors
  contents:
  - "Contributors\n   The below individuals contributed significantly to the document:\n\
    \   Sara Dickinson\n   Sinodun Internet Technologies\n   Magdalen Centre\n   Oxford\
    \ Science Park\n   Oxford  OX4 4GA\n   United Kingdom\n   Email: sara@sinodun.com\n\
    \   URI:   http://sinodun.com\n   Daniel Kahn Gillmor\n   ACLU\n   125 Broad Street,\
    \ 18th Floor\n   New York, NY  10004\n   United States\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Zi Hu\n   USC/Information Sciences Institute\n   4676\
    \ Admiralty Way, Suite 1133\n   Marina del Rey, CA  90292\n   United States\n\
    \   Phone: +1-213-587-1057\n   Email: zihu@outlook.com\n   Liang Zhu\n   USC/Information\
    \ Sciences Institute\n   4676 Admiralty Way, Suite 1133\n   Marina del Rey, CA\
    \  90292\n   United States\n   Phone: +1-310-448-8323\n   Email: liangzhu@usc.edu\n\
    \   John Heidemann\n   USC/Information Sciences Institute\n   4676 Admiralty Way,\
    \ Suite 1001\n   Marina del Rey, CA  90292\n   United States\n   Phone: +1-310-822-1511\n\
    \   Email: johnh@isi.edu\n   Allison Mankin\n   Independent\n   Phone: +1-301-728-7198\n\
    \   Email: Allison.mankin@gmail.com\n   Duane Wessels\n   Verisign Labs\n   12061\
    \ Bluemont Way\n   Reston, VA  20190\n   United States\n   Phone: +1-703-948-3200\n\
    \   Email: dwessels@verisign.com\n   Paul Hoffman\n   ICANN\n   Email: paul.hoffman@icann.org\n"
