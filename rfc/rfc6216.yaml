- title: __initial_text__
  contents:
  - "       Example Call Flows Using Session Initiation Protocol (SIP)\n         \
    \                 Security Mechanisms\n"
- title: Abstract
  contents:
  - "Abstract\n   This document shows example call flows demonstrating the use of\n\
    \   Transport Layer Security (TLS), and Secure/Multipurpose Internet Mail\n  \
    \ Extensions (S/MIME) in Session Initiation Protocol (SIP).  It also\n   provides\
    \ information that helps implementers build interoperable SIP\n   software.  To\
    \ help facilitate interoperability testing, it includes\n   certificates used\
    \ in the example call flows and processes to create\n   certificates for testing.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6216.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Certificates . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n     2.1.  CA Certificates  . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n     2.2.  Host Certificates  . . . . . . . . . . . . . . . . .\
    \ . . .  8\n     2.3.  User Certificates  . . . . . . . . . . . . . . . . . .\
    \ . . 10\n   3.  Call Flow with Message Over TLS  . . . . . . . . . . . . . .\
    \ . 12\n     3.1.  TLS with Server Authentication . . . . . . . . . . . . . .\
    \ 12\n     3.2.  MESSAGE Transaction Over TLS . . . . . . . . . . . . . . . 13\n\
    \   4.  Call Flow with S/MIME-Secured Message  . . . . . . . . . . . . 15\n  \
    \   4.1.  MESSAGE Request with Signed Body . . . . . . . . . . . . . 15\n    \
    \ 4.2.  MESSAGE Request with Encrypted Body  . . . . . . . . . . . 20\n     4.3.\
    \  MESSAGE Request with Encrypted and Signed Body . . . . . . 22\n   5.  Observed\
    \ Interoperability Issues . . . . . . . . . . . . . . . 27\n   6.  Additional\
    \ Test Scenarios  . . . . . . . . . . . . . . . . . . 29\n   7.  Acknowledgments\
    \  . . . . . . . . . . . . . . . . . . . . . . . 31\n   8.  Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 32\n   9.  References . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . 32\n     9.1.  Normative References . .\
    \ . . . . . . . . . . . . . . . . . 32\n     9.2.  Informative References . .\
    \ . . . . . . . . . . . . . . . . 34\n   Appendix A.  Making Test Certificates\
    \  . . . . . . . . . . . . . . 35\n     A.1.  makeCA script  . . . . . . . . .\
    \ . . . . . . . . . . . . . 36\n     A.2.  makeCert script  . . . . . . . . .\
    \ . . . . . . . . . . . . 40\n   Appendix B.  Certificates for Testing  . . .\
    \ . . . . . . . . . . . 42\n     B.1.  Certificates Using EKU . . . . . . . .\
    \ . . . . . . . . . . 42\n     B.2.  Certificates NOT Using EKU . . . . . . .\
    \ . . . . . . . . . 51\n     B.3.  Certificate Chaining with a Non-Root CA  .\
    \ . . . . . . . . 58\n   Appendix C.  Message Dumps . . . . . . . . . . . . .\
    \ . . . . . . . 64\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document is informational and is not normative on any\
    \ aspect of\n   SIP.\n   SIP with TLS ([RFC5246]) implementations are becoming\
    \ very common.\n   Several implementations of the S/MIME ([RFC5751]) portion of\
    \ SIP\n   ([RFC3261]) are also becoming available.  After several\n   interoperability\
    \ events, it is clear that it is difficult to write\n   these systems without\
    \ any test vectors or examples of \"known good\"\n   messages to test against.\
    \  Furthermore, testing at the events is\n   often hindered due to the lack of\
    \ a commonly trusted certification\n   authority to sign the certificates used\
    \ in the events.  This document\n   addresses both of these issues by providing\
    \ messages that give\n   detailed examples that implementers can use for comparison\
    \ and that\n   can also be used for testing.  In addition, this document provides\
    \ a\n   common certificate and private key that can be used to set up a mock\n\
    \   Certification Authority (CA) that can be used during the SIP\n   interoperability\
    \ events.  Certificate requests from the users will be\n   signed by the private\
    \ key of the mock CA.  The document also provides\n   some hints and clarifications\
    \ for implementers.\n   A simple SIP call flow using SIPS URIs and TLS is shown\
    \ in Section 3.\n   The certificates for the hosts used are shown in Section 2.2,\
    \ and the\n   CA certificates used to sign these are shown in Section 2.1.\n \
    \  The text from Section 4.1 through Section 4.3 shows some simple SIP\n   call\
    \ flows using S/MIME to sign and encrypt the body of the message.\n   The user\
    \ certificates used in these examples are shown in\n   Section 2.3.  These host\
    \ certificates are signed with the same mock\n   CA private key.\n   Section 5\
    \ presents a partial list of items that implementers should\n   consider in order\
    \ to implement systems that will interoperate.\n   Scripts and instructions to\
    \ make certificates that can be used for\n   interoperability testing are presented\
    \ in Appendix A, along with\n   methods for converting these to various formats.\
    \  The certificates\n   used while creating the examples and test messages in\
    \ this document\n   are made available in Appendix B.\n   Binary copies of various\
    \ messages in this document that can be used\n   for testing appear in Appendix\
    \ C.\n"
- title: 2.  Certificates
  contents:
  - '2.  Certificates

    '
- title: 2.1.  CA Certificates
  contents:
  - "2.1.  CA Certificates\n   The certificate used by the CA to sign the other certificates\
    \ is\n   shown below.  This is an X.509v3 ([X.509]) certificate.  Note that\n\
    \   the X.509v3 Basic Constraints in the certificate allows it to be used\n  \
    \ as a CA, certification authority.  This certificate is not used\n   directly\
    \ in the TLS call flow; it is used only to verify user and\n   host certificates.\n\
    \   Version: 3 (0x2)\n   Serial Number:\n       96:a3:84:17:4e:ef:8a:4c\n   Signature\
    \ Algorithm: sha1WithRSAEncryption\n   Issuer: C=US, ST=California, L=San Jose,\
    \ O=sipit,\n           OU=Sipit Test Certificate Authority\n   Validity\n    \
    \   Not Before: Jan 27 18:36:05 2011 GMT\n       Not After : Jan  3 18:36:05 2111\
    \ GMT\n   Subject: C=US, ST=California, L=San Jose, O=sipit,\n           OU=Sipit\
    \ Test Certificate Authority\n   Subject Public Key Info:\n       Public Key Algorithm:\
    \ rsaEncryption\n       RSA Public Key: (2048 bit)\n           Modulus (2048 bit):\n\
    \               00:ab:1f:91:61:f1:1c:c5:cd:a6:7b:16:9b:b7:14:\n              \
    \ 79:e4:30:9e:98:d0:ec:07:b7:bd:77:d7:d1:f5:5b:\n               2c:e2:ee:e6:b1:b0:f0:85:fa:a5:bc:cb:cc:cf:69:\n\
    \               2c:4f:fc:50:ef:9d:31:2b:c0:59:ea:fb:64:6f:1f:\n              \
    \ 55:a7:3d:fd:70:d2:56:db:14:99:17:92:70:ac:26:\n               f8:34:41:70:d9:c0:03:91:6a:ba:d1:11:8f:ac:12:\n\
    \               31:de:b9:19:70:8d:5d:a7:7d:8b:19:cc:40:3f:ae:\n              \
    \ ff:de:1f:db:94:b3:46:77:6c:ae:ae:ff:3e:d6:84:\n               5b:c2:de:0b:26:65:d0:91:c7:70:4b:c7:0a:4a:bf:\n\
    \               c7:97:04:dd:ba:58:47:cb:e0:2b:23:76:87:65:c5:\n              \
    \ 55:34:10:ab:27:1f:1c:f8:30:3d:b0:9b:ca:a2:81:\n               72:4c:bd:60:fe:f7:21:fe:0b:db:0b:db:e9:5b:01:\n\
    \               36:d4:28:15:6b:79:eb:d0:91:1b:21:59:b8:0e:aa:\n              \
    \ bf:d5:b1:6c:70:37:a3:3f:a5:7d:0e:95:46:f6:f6:\n               58:67:83:75:42:37:18:0b:a4:41:39:b2:2f:6c:80:\n\
    \               2c:78:ec:a5:0f:be:9c:10:f8:c0:0b:0d:73:99:9e:\n              \
    \ 0d:d7:97:50:cb:cc:45:34:23:49:41:85:22:24:ad:\n               29:c3\n      \
    \     Exponent: 65537 (0x10001)\n   X509v3 extensions:\n       X509v3 Subject\
    \ Key Identifier:\n           95:45:7E:5F:2B:EA:65:98:12:91:04:F3:63:C7:68:9A:58:16:77:27\n\
    \       X509v3 Authority Key Identifier:\n           95:45:7E:5F:2B:EA:65:98:12:91:04:F3:63:C7:68:9A:58:16:77:27\n\
    \       X509v3 Basic Constraints:\n           CA:TRUE\n       Signature Algorithm:\
    \ sha1WithRSAEncryption\n   06:5f:9e:ae:a0:9a:bc:b5:b9:5b:7e:97:33:cc:df:63:98:98:\n\
    \   94:cb:0d:66:a9:83:e8:aa:58:2a:59:a1:9e:47:31:a6:af:5c:\n   3f:a2:25:86:f8:df:05:92:b7:db:69:a1:69:72:87:66:c5:ab:\n\
    \   35:89:01:37:19:c9:74:eb:09:d1:3f:88:7b:24:13:42:ca:2d:\n   fb:45:e6:cc:4b:f8:21:78:f3:f5:97:ec:09:92:24:a2:f0:e6:\n\
    \   94:8d:97:4a:00:94:00:bd:25:b8:17:2c:52:53:5d:cc:5c:48:\n   a4:a1:1d:2d:f6:50:55:13:a4:d3:b2:a2:f4:f1:b9:6d:48:5e:\n\
    \   5c:f3:de:e0:fc:59:09:a1:d9:14:61:65:bf:d8:3f:b9:ba:2e:\n   7c:ed:5c:24:9b:6b:ca:aa:5f:f1:c1:1e:b0:a8:da:82:0f:fb:\n\
    \   4c:71:3b:4d:7b:38:c8:e3:8a:2a:19:34:44:26:0b:ea:f0:47:\n   38:46:28:65:04:e2:01:52:dd:ec:3d:e5:f5:53:74:77:74:75:\n\
    \   6d:c6:d9:c2:0a:ac:3b:b8:98:5c:55:53:34:74:52:a8:26:b1:\n   2f:30:22:d0:8b:b7:f3:a0:dd:68:07:33:d5:ae:b7:81:b2:94:\n\
    \   58:72:4e:7c:c6:72:2f:bd:6c:69:fb:b5:17:a8:2a:8d:d7:2c:\n   91:06:c8:0c\n \
    \  The certificate content shown above and throughout this document was\n   rendered\
    \ by the OpenSSL \"x509\" tool.  These dumps are included only\n   as informative\
    \ examples.  Output may vary among future revisions of\n   the tool.  At the time\
    \ of this document's publication, there were\n   some irregularities in the presentation\
    \ of Distinguished Names (DNs).\n   In particular, note that in the \"Issuer\"\
    \ and \"Subject\" fields, it\n   appears the intent is to present DNs in Lightweight\
    \ Directory Access\n   Protocol (LDAP) format.  If this was intended, the spaces\
    \ should have\n   been omitted after the delimiting commas, and the elements should\n\
    \   have been presented in order of most-specific to least-specific.\n   Please\
    \ refer to Appendix A of [RFC4514].  Using the \"Issuer\" DN from\n   above as\
    \ an example and following guidelines in [RFC4514], it should\n   have instead\
    \ appeared as:\n   Issuer: OU=Sipit Test Certificate Authority,O=sipit,L=San Jose,\n\
    \           ST=California,C=US\n   The ASN.1 ([X.683]) parse of the CA certificate\
    \ is shown below.\n  0:l= 949 cons: SEQUENCE\n  4:l= 669 cons:  SEQUENCE\n  8:l=\
    \   3 cons:   cont [ 0 ]\n 10:l=   1 prim:    INTEGER           :02\n 13:l=  \
    \ 9 prim:   INTEGER           :96A384174EEF8A4C\n 24:l=  13 cons:   SEQUENCE\n\
    \ 26:l=   9 prim:    OBJECT            :sha1WithRSAEncryption\n 37:l=   0 prim:\
    \    NULL\n 39:l= 112 cons:   SEQUENCE\n 41:l=  11 cons:    SET\n 43:l=   9 cons:\
    \     SEQUENCE\n 45:l=   3 prim:      OBJECT            :countryName\n 50:l= \
    \  2 prim:      PRINTABLESTRING   :US\n 54:l=  19 cons:    SET\n 56:l=  17 cons:\
    \     SEQUENCE\n 58:l=   3 prim:      OBJECT            :stateOrProvinceName\n\
    \ 63:l=  10 prim:      UTF8STRING\n  43 61 6c 69 66 6f 72 6e-69 61           \
    \          California\n 75:l=  17 cons:    SET\n 77:l=  15 cons:     SEQUENCE\n\
    \ 79:l=   3 prim:      OBJECT            :localityName\n 84:l=   8 prim:     \
    \ UTF8STRING\n  53 61 6e 20 4a 6f 73 65-                          San Jose\n 94:l=\
    \  14 cons:    SET\n 96:l=  12 cons:     SEQUENCE\n 98:l=   3 prim:      OBJECT\
    \            :organizationName\n"
- title: '103:l=   5 prim:      UTF8STRING'
  contents:
  - "103:l=   5 prim:      UTF8STRING\n  73 69 70 69 74                          \
    \          sipit\n"
- title: '110:l=  41 cons:    SET'
  contents:
  - '110:l=  41 cons:    SET

    '
- title: '112:l=  39 cons:     SEQUENCE'
  contents:
  - '112:l=  39 cons:     SEQUENCE

    '
- title: '114:l=   3 prim:      OBJECT            :organizationalUnitName'
  contents:
  - '114:l=   3 prim:      OBJECT            :organizationalUnitName

    '
- title: '119:l=  32 prim:      UTF8STRING'
  contents:
  - "119:l=  32 prim:      UTF8STRING\n  53 69 70 69 74 20 54 65-73 74 20 43 65 72\
    \ 74 69   Sipit Test Certi\n  66 69 63 61 74 65 20 41-75 74 68 6f 72 69 74 79\
    \   ficate Authority\n"
- title: '153:l=  32 cons:   SEQUENCE'
  contents:
  - '153:l=  32 cons:   SEQUENCE

    '
- title: '155:l=  13 prim:    UTCTIME           :110127183605Z'
  contents:
  - '155:l=  13 prim:    UTCTIME           :110127183605Z

    '
- title: '170:l=  15 prim:    GENERALIZEDTIME   :21110103183605Z'
  contents:
  - '170:l=  15 prim:    GENERALIZEDTIME   :21110103183605Z

    '
- title: '187:l= 112 cons:   SEQUENCE'
  contents:
  - '187:l= 112 cons:   SEQUENCE

    '
- title: '189:l=  11 cons:    SET'
  contents:
  - '189:l=  11 cons:    SET

    '
- title: '191:l=   9 cons:     SEQUENCE'
  contents:
  - '191:l=   9 cons:     SEQUENCE

    '
- title: '193:l=   3 prim:      OBJECT            :countryName'
  contents:
  - '193:l=   3 prim:      OBJECT            :countryName

    '
- title: '198:l=   2 prim:      PRINTABLESTRING   :US'
  contents:
  - '198:l=   2 prim:      PRINTABLESTRING   :US

    '
- title: '202:l=  19 cons:    SET'
  contents:
  - '202:l=  19 cons:    SET

    '
- title: '204:l=  17 cons:     SEQUENCE'
  contents:
  - '204:l=  17 cons:     SEQUENCE

    '
- title: '206:l=   3 prim:      OBJECT            :stateOrProvinceName'
  contents:
  - '206:l=   3 prim:      OBJECT            :stateOrProvinceName

    '
- title: '211:l=  10 prim:      UTF8STRING'
  contents:
  - "211:l=  10 prim:      UTF8STRING\n  43 61 6c 69 66 6f 72 6e-69 61           \
    \          California\n"
- title: '223:l=  17 cons:    SET'
  contents:
  - '223:l=  17 cons:    SET

    '
- title: '225:l=  15 cons:     SEQUENCE'
  contents:
  - '225:l=  15 cons:     SEQUENCE

    '
- title: '227:l=   3 prim:      OBJECT            :localityName'
  contents:
  - '227:l=   3 prim:      OBJECT            :localityName

    '
- title: '232:l=   8 prim:      UTF8STRING'
  contents:
  - "232:l=   8 prim:      UTF8STRING\n  53 61 6e 20 4a 6f 73 65-                \
    \          San Jose\n"
- title: '242:l=  14 cons:    SET'
  contents:
  - '242:l=  14 cons:    SET

    '
- title: '244:l=  12 cons:     SEQUENCE'
  contents:
  - '244:l=  12 cons:     SEQUENCE

    '
- title: '246:l=   3 prim:      OBJECT            :organizationName'
  contents:
  - '246:l=   3 prim:      OBJECT            :organizationName

    '
- title: '251:l=   5 prim:      UTF8STRING'
  contents:
  - "251:l=   5 prim:      UTF8STRING\n  73 69 70 69 74                          \
    \          sipit\n"
- title: '258:l=  41 cons:    SET'
  contents:
  - '258:l=  41 cons:    SET

    '
- title: '260:l=  39 cons:     SEQUENCE'
  contents:
  - '260:l=  39 cons:     SEQUENCE

    '
- title: '262:l=   3 prim:      OBJECT            :organizationalUnitName'
  contents:
  - '262:l=   3 prim:      OBJECT            :organizationalUnitName

    '
- title: '267:l=  32 prim:      UTF8STRING'
  contents:
  - "267:l=  32 prim:      UTF8STRING\n  53 69 70 69 74 20 54 65-73 74 20 43 65 72\
    \ 74 69   Sipit Test Certi\n  66 69 63 61 74 65 20 41-75 74 68 6f 72 69 74 79\
    \   ficate Authority\n"
- title: '301:l= 290 cons:   SEQUENCE'
  contents:
  - '301:l= 290 cons:   SEQUENCE

    '
- title: '305:l=  13 cons:    SEQUENCE'
  contents:
  - '305:l=  13 cons:    SEQUENCE

    '
- title: '307:l=   9 prim:     OBJECT            :rsaEncryption'
  contents:
  - '307:l=   9 prim:     OBJECT            :rsaEncryption

    '
- title: '318:l=   0 prim:     NULL'
  contents:
  - '318:l=   0 prim:     NULL

    '
- title: '320:l= 271 prim:    BIT STRING'
  contents:
  - "320:l= 271 prim:    BIT STRING\n  00 30 82 01 0a 02 82 01-01 00 ab 1f 91 61 f1\
    \ 1c   .0...........a..\n  c5 cd a6 7b 16 9b b7 14-79 e4 30 9e 98 d0 ec 07   ...{....y.0.....\n\
    \  b7 bd 77 d7 d1 f5 5b 2c-e2 ee e6 b1 b0 f0 85 fa   ..w...[,........\n  a5 bc\
    \ cb cc cf 69 2c 4f-fc 50 ef 9d 31 2b c0 59   .....i,O.P..1+.Y\n  ea fb 64 6f\
    \ 1f 55 a7 3d-fd 70 d2 56 db 14 99 17   ..do.U.=.p.V....\n  92 70 ac 26 f8 34\
    \ 41 70-d9 c0 03 91 6a ba d1 11   .p.&.4Ap....j...\n  8f ac 12 31 de b9 19 70-8d\
    \ 5d a7 7d 8b 19 cc 40   ...1...p.].}...@\n  3f ae ff de 1f db 94 b3-46 77 6c\
    \ ae ae ff 3e d6   ?.......Fwl...>.\n  84 5b c2 de 0b 26 65 d0-91 c7 70 4b c7\
    \ 0a 4a bf   .[...&e...pK..J.\n  c7 97 04 dd ba 58 47 cb-e0 2b 23 76 87 65 c5\
    \ 55   .....XG..+#v.e.U\n  34 10 ab 27 1f 1c f8 30-3d b0 9b ca a2 81 72 4c   4..'...0=.....rL\n\
    \  bd 60 fe f7 21 fe 0b db-0b db e9 5b 01 36 d4 28   .`..!......[.6.(\n  15 6b\
    \ 79 eb d0 91 1b 21-59 b8 0e aa bf d5 b1 6c   .ky....!Y......l\n  70 37 a3 3f\
    \ a5 7d 0e 95-46 f6 f6 58 67 83 75 42   p7.?.}..F..Xg.uB\n  37 18 0b a4 41 39\
    \ b2 2f-6c 80 2c 78 ec a5 0f be   7...A9./l.,x....\n  9c 10 f8 c0 0b 0d 73 99-9e\
    \ 0d d7 97 50 cb cc 45   ......s.....P..E\n  34 23 49 41 85 22 24 ad-29 c3 02\
    \ 03 01 00 01      4#IA.\"$.)......\n"
- title: '595:l=  80 cons:   cont [ 3 ]'
  contents:
  - '595:l=  80 cons:   cont [ 3 ]

    '
- title: '597:l=  78 cons:    SEQUENCE'
  contents:
  - '597:l=  78 cons:    SEQUENCE

    '
- title: '599:l=  29 cons:     SEQUENCE'
  contents:
  - '599:l=  29 cons:     SEQUENCE

    '
- title: '601:l=   3 prim:      OBJECT            :X509v3 Subject Key Identifier'
  contents:
  - '601:l=   3 prim:      OBJECT            :X509v3 Subject Key Identifier

    '
- title: '606:l=  22 prim:      OCTET STRING'
  contents:
  - "606:l=  22 prim:      OCTET STRING\n  04 14 95 45 7e 5f 2b ea-65 98 12 91 04\
    \ f3 63 c7   ...E~_+.e.....c.\n  68 9a 58 16 77 27                           \
    \      h.X.w'\n"
- title: '630:l=  31 cons:     SEQUENCE'
  contents:
  - '630:l=  31 cons:     SEQUENCE

    '
- title: '632:l=   3 prim:      OBJECT            :X509v3 Authority Key Identifier'
  contents:
  - '632:l=   3 prim:      OBJECT            :X509v3 Authority Key Identifier

    '
- title: '637:l=  24 prim:      OCTET STRING'
  contents:
  - "637:l=  24 prim:      OCTET STRING\n  30 16 80 14 95 45 7e 5f-2b ea 65 98 12\
    \ 91 04 f3   0....E~_+.e.....\n  63 c7 68 9a 58 16 77 27-                    \
    \      c.h.X.w'\n"
- title: '663:l=  12 cons:     SEQUENCE'
  contents:
  - '663:l=  12 cons:     SEQUENCE

    '
- title: '665:l=   3 prim:      OBJECT            :X509v3 Basic Constraints'
  contents:
  - '665:l=   3 prim:      OBJECT            :X509v3 Basic Constraints

    '
- title: '670:l=   5 prim:      OCTET STRING'
  contents:
  - "670:l=   5 prim:      OCTET STRING\n  30 03 01 01 ff                        \
    \            0....\n"
- title: '677:l=  13 cons:  SEQUENCE'
  contents:
  - '677:l=  13 cons:  SEQUENCE

    '
- title: '679:l=   9 prim:   OBJECT            :sha1WithRSAEncryption'
  contents:
  - '679:l=   9 prim:   OBJECT            :sha1WithRSAEncryption

    '
- title: '690:l=   0 prim:   NULL'
  contents:
  - '690:l=   0 prim:   NULL

    '
- title: '692:l= 257 prim:  BIT STRING'
  contents:
  - "692:l= 257 prim:  BIT STRING\n  00 06 5f 9e ae a0 9a bc-b5 b9 5b 7e 97 33 cc\
    \ df   .._.......[~.3..\n  63 98 98 94 cb 0d 66 a9-83 e8 aa 58 2a 59 a1 9e   c.....f....X*Y..\n\
    \  47 31 a6 af 5c 3f a2 25-86 f8 df 05 92 b7 db 69   G1..\\?.%.......i\n  a1 69\
    \ 72 87 66 c5 ab 35-89 01 37 19 c9 74 eb 09   .ir.f..5..7..t..\n  d1 3f 88 7b\
    \ 24 13 42 ca-2d fb 45 e6 cc 4b f8 21   .?.{$.B.-.E..K.!\n  78 f3 f5 97 ec 09\
    \ 92 24-a2 f0 e6 94 8d 97 4a 00   x......$......J.\n  94 00 bd 25 b8 17 2c 52-53\
    \ 5d cc 5c 48 a4 a1 1d   ...%..,RS].\\H...\n  2d f6 50 55 13 a4 d3 b2-a2 f4 f1\
    \ b9 6d 48 5e 5c   -.PU........mH^\\\n  f3 de e0 fc 59 09 a1 d9-14 61 65 bf d8\
    \ 3f b9 ba   ....Y....ae..?..\n  2e 7c ed 5c 24 9b 6b ca-aa 5f f1 c1 1e b0 a8\
    \ da   .|.\\$.k.._......\n  82 0f fb 4c 71 3b 4d 7b-38 c8 e3 8a 2a 19 34 44  \
    \ ...Lq;M{8...*.4D\n  26 0b ea f0 47 38 46 28-65 04 e2 01 52 dd ec 3d   &...G8F(e...R..=\n\
    \  e5 f5 53 74 77 74 75 6d-c6 d9 c2 0a ac 3b b8 98   ..Stwtum.....;..\n  5c 55\
    \ 53 34 74 52 a8 26-b1 2f 30 22 d0 8b b7 f3   \\US4tR.&./0\"....\n  a0 dd 68 07\
    \ 33 d5 ae b7-81 b2 94 58 72 4e 7c c6   ..h.3......XrN|.\n  72 2f bd 6c 69 fb\
    \ b5 17-a8 2a 8d d7 2c 91 06 c8   r/.li....*..,...\n  0c                     \
    \                           .\n"
- title: 2.2.  Host Certificates
  contents:
  - "2.2.  Host Certificates\n   The certificate for the host example.com is shown\
    \ below.  Note that\n   the Subject Alternative Name is set to example.com and\
    \ is a DNS type.\n   The certificates for the other hosts are shown in Appendix\
    \ B.\n   Version: 3 (0x2)\n   Serial Number:\n       96:a3:84:17:4e:ef:8a:4f\n\
    \   Signature Algorithm: sha1WithRSAEncryption\n   Issuer: C=US, ST=California,\
    \ L=San Jose, O=sipit,\n           OU=Sipit Test Certificate Authority\n   Validity\n\
    \       Not Before: Feb  7 19:32:17 2011 GMT\n       Not After : Jan 14 19:32:17\
    \ 2111 GMT\n   Subject: C=US, ST=California, L=San Jose, O=sipit, CN=example.com\n\
    \   Subject Public Key Info:\n       Public Key Algorithm: rsaEncryption\n   \
    \    RSA Public Key: (2048 bit)\n           Modulus (2048 bit):\n            \
    \   00:dd:74:06:02:10:c2:e7:04:1f:bc:8c:b6:24:e7:\n               9b:94:a3:48:37:85:9e:6d:83:12:84:50:1a:8e:48:\n\
    \               b1:fa:86:8c:a7:80:b9:be:52:ec:a6:ca:63:47:84:\n              \
    \ ad:f6:74:85:82:16:7e:4e:36:40:0a:74:2c:20:a9:\n               6a:0e:6a:7f:35:cf:70:71:63:7d:e9:43:67:81:4c:\n\
    \               ea:b5:1e:b7:4c:a3:35:08:7b:21:0d:2a:73:07:63:\n              \
    \ 9d:8d:75:bf:1f:d4:8e:e6:67:60:75:f7:ea:0a:7a:\n               6c:90:af:92:45:e0:62:05:9a:8a:10:98:dc:7c:54:\n\
    \               8b:e4:61:95:3b:04:fc:10:50:ef:80:45:ba:5e:84:\n              \
    \ 97:76:c1:20:25:c1:92:1d:89:0a:f7:55:62:64:fa:\n               e8:69:a2:62:4c:67:d3:08:d9:61:b5:3d:16:54:b6:\n\
    \               b7:44:8d:59:2b:90:d4:e9:fb:c7:7d:87:58:c3:12:\n              \
    \ ac:33:78:00:50:ba:07:05:b3:b9:01:1a:63:55:6c:\n               e1:7a:ec:a3:07:ae:3b:02:83:a1:69:e0:c3:dc:2d:\n\
    \               61:e9:b2:e3:b3:71:c8:a6:cf:da:fb:3e:99:c7:e5:\n              \
    \ 71:b9:c9:17:d4:ed:bc:a0:47:54:09:8c:6e:6d:53:\n               9a:2c:c9:68:c6:6f:f1:3d:91:1a:24:43:77:7d:91:\n\
    \               69:4b\n           Exponent: 65537 (0x10001)\n   X509v3 extensions:\n\
    \       X509v3 Subject Alternative Name:\n           DNS:example.com, URI:sip:example.com\n\
    \       X509v3 Basic Constraints:\n           CA:FALSE\n       X509v3 Subject\
    \ Key Identifier:\n           CC:06:59:5B:8B:5E:D6:0D:F2:05:4D:1B:68:54:1E:FC:F9:43:19:17\n\
    \       X509v3 Authority Key Identifier:\n           95:45:7E:5F:2B:EA:65:98:12:91:04:F3:63:C7:68:9A:58:16:77:27\n\
    \       X509v3 Key Usage:\n           Digital Signature, Non Repudiation, Key\
    \ Encipherment\n       X509v3 Extended Key Usage:\n           TLS Web Server Authentication,\
    \ 1.3.6.1.5.5.7.3.20\n       Signature Algorithm: sha1WithRSAEncryption\n   6a:9a:d1:db:00:4b:90:86:b0:53:ea:6f:30:31:89:1e:9b:09:\n\
    \   14:bd:6f:b9:02:aa:6f:58:ee:30:03:b8:a1:fd:b3:41:72:ff:\n   b3:0d:cb:76:a7:17:c6:57:38:06:13:e5:f3:e4:30:17:4d:f7:\n\
    \   97:b5:f3:74:e9:81:f8:f4:55:a3:0d:f5:82:38:c3:98:43:52:\n   1f:84:cd:1a:b4:a3:45:9f:3d:e2:31:fd:cb:a2:ad:ed:60:7d:\n\
    \   fa:d2:aa:49:2f:41:a9:80:01:bb:ed:b6:75:c9:97:69:7f:0c:\n   91:60:f1:c4:5a:36:e8:5c:ac:e1:a8:e7:9a:55:e5:e0:cd:01:\n\
    \   f4:de:93:f4:38:6c:c1:71:d2:fd:cd:1b:5d:25:eb:90:7b:31:\n   41:e7:37:0e:e5:c0:01:48:91:f7:34:dd:c6:1f:74:e6:34:34:\n\
    \   e6:cd:93:0f:3f:ce:94:ad:91:d9:e2:72:b1:9f:1d:d3:a5:7d:\n   5e:e2:a4:56:c5:b1:71:4d:10:0a:5d:a6:56:e6:57:1f:48:a5:\n\
    \   5c:75:67:ea:ab:35:3e:f6:b6:fa:c1:f3:8a:c1:80:71:32:18:\n   6c:33:b5:fa:16:5a:16:e1:a1:6c:19:67:f5:45:68:64:6f:b2:\n\
    \   31:dc:e3:5a:1a:b2:d4:87:89:96:fd:87:ba:38:4e:0a:19:07:\n   03:4b:9b:b1\n \
    \  The example host certificate above, as well as all the others\n   presented\
    \ in this document, are signed directly by a root CA.  These\n   certificate chains\
    \ have a length equal to two: the root CA and the\n   host certificate.  Non-root\
    \ CAs exist and may also sign certificates.\n   The certificate chains presented\
    \ by hosts with certificates signed by\n   non-root CAs will have a length greater\
    \ than two.  For more details\n   on how certificate chains are validated, see\
    \ Sections 6.1 and 6.2 of\n   [RFC5280].\n"
- title: 2.3.  User Certificates
  contents:
  - "2.3.  User Certificates\n   User certificates are used by many applications to\
    \ establish user\n   identity.  The user certificate for fluffy@example.com is\
    \ shown\n   below.  Note that the Subject Alternative Name has a list of names\n\
    \   with different URL types such as a sip, im, or pres URL.  This is\n   necessary\
    \ for interoperating with a Common Profile for Instant\n   Messaging (CPIM) gateway.\
    \  In this example, example.com is the domain\n   for fluffy.  The message could\
    \ be coming from any host in\n   *.example.com, and the address-of-record (AOR)\
    \ in the user\n   certificate would still be the same.  The others are shown in\n\
    \   Appendix B.1.  These certificates make use of the Extended Key Usage\n   (EKU)\
    \ extension discussed in [RFC5924].  Note that the X509v3\n   Extended Key Usage\
    \ attribute refers to the SIP OID introduced in\n   [RFC5924], which is 1.3.6.1.5.5.7.3.20.\n\
    \   Version: 3 (0x2)\n   Serial Number:\n       96:a3:84:17:4e:ef:8a:4d\n   Signature\
    \ Algorithm: sha1WithRSAEncryption\n   Issuer: C=US, ST=California, L=San Jose,\
    \ O=sipit,\n           OU=Sipit Test Certificate Authority\n   Validity\n    \
    \   Not Before: Feb  7 19:32:17 2011 GMT\n       Not After : Jan 14 19:32:17 2111\
    \ GMT\n   Subject: C=US, ST=California, L=San Jose, O=sipit,\n            CN=fluffy\n\
    \   Subject Public Key Info:\n       Public Key Algorithm: rsaEncryption\n   \
    \    RSA Public Key: (2048 bit)\n           Modulus (2048 bit):\n            \
    \   00:a3:2c:59:0c:e9:bc:e4:ec:d3:9e:fb:99:02:ec:\n               b1:36:3a:b7:d3:1d:4d:c3:3a:b6:ae:50:bd:5f:55:\n\
    \               08:77:8c:7e:a4:e9:f0:68:31:28:8f:23:32:56:19:\n              \
    \ c3:22:97:a7:6d:fd:a7:22:2a:01:b5:af:61:bd:5f:\n               7e:c1:14:e5:98:29:b4:34:4e:38:8a:26:ee:0d:da:\n\
    \               db:27:b9:78:d6:ac:ac:04:78:32:98:c2:75:e7:6a:\n              \
    \ b7:2d:b3:3c:e3:eb:97:a5:ef:8b:59:42:50:17:7b:\n               fe:a7:81:af:37:a7:e7:e3:1f:b0:8d:d0:72:2f:6c:\n\
    \               14:42:c6:01:68:e1:8f:fd:56:4d:7d:cf:16:dc:aa:\n              \
    \ 05:61:0b:0a:ca:ca:ec:51:ec:53:6e:3d:2b:00:80:\n               fe:35:1b:06:0a:61:13:88:0b:44:f3:cc:fd:2b:0e:\n\
    \               b4:a2:0b:a0:97:84:14:2e:ee:2b:e3:2f:c1:1a:9e:\n              \
    \ 86:9a:78:6a:a2:4c:57:93:e7:01:26:d3:56:0d:bd:\n               b0:2f:f8:da:c7:3c:01:dc:cb:2d:31:8c:6c:c6:5c:\n\
    \               b4:63:e8:b2:a2:40:11:bf:ad:f8:6d:12:01:97:1d:\n              \
    \ 47:f8:6a:15:8b:fb:27:96:73:44:46:34:d7:24:1c:\n               cf:56:8d:d4:be:d6:94:5b:f0:a6:67:e3:dd:cf:b4:\n\
    \               f2:d5\n           Exponent: 65537 (0x10001)\n   X509v3 extensions:\n\
    \       X509v3 Subject Alternative Name:\n           URI:sip:fluffy@example.com,\
    \ URI:im:fluffy@example.com,\n              URI:pres:fluffy@example.com\n    \
    \   X509v3 Basic Constraints:\n           CA:FALSE\n       X509v3 Subject Key\
    \ Identifier:\n           85:97:09:B8:D3:55:37:24:8A:DC:DE:E3:91:72:E4:22:CF:98:87:52\n\
    \       X509v3 Authority Key Identifier:\n           95:45:7E:5F:2B:EA:65:98:12:91:04:F3:63:C7:68:9A:58:16:77:27\n\
    \       X509v3 Key Usage:\n           Digital Signature, Non Repudiation, Key\
    \ Encipherment\n       X509v3 Extended Key Usage:\n           E-mail Protection,\
    \ 1.3.6.1.5.5.7.3.20\n       Signature Algorithm: sha1WithRSAEncryption\n   a8:a9:8f:d8:8a:0b:88:ed:ff:4f:bf:e5:cd:8f:9e:7b:b8:e6:\n\
    \   f2:2c:aa:e3:23:5b:9a:71:5e:fd:20:a3:dd:d9:d3:c1:f2:e8:\n   f0:be:77:db:33:cc:8a:7b:4f:91:2b:8d:d6:f7:14:c3:8d:e0:\n\
    \   60:d3:34:50:bc:be:67:22:cd:f5:74:7b:f4:9a:68:a2:52:2b:\n   81:2f:46:d3:09:9f:25:c3:20:e8:10:d5:ef:38:7b:d1:17:d4:\n\
    \   f1:d7:54:67:56:f1:13:cf:2f:fc:8b:83:fc:14:e7:01:82:59:\n   83:cc:b1:8d:f0:c7:da:4e:b1:dc:cc:54:cf:6c:3b:47:47:59:\n\
    \   87:d9:16:ec:af:af:e1:12:13:23:1e:0a:db:f5:b5:ff:5d:ab:\n   15:0e:e3:25:91:00:0e:90:db:d8:07:11:90:81:01:3a:48:a8:\n\
    \   aa:9e:b0:62:d3:36:f0:0c:b7:2f:a7:17:92:52:36:29:14:0a:\n   d6:65:86:67:73:74:6e:aa:3c:ee:47:38:1e:c8:6e:06:81:85:\n\
    \   1c:2e:f0:b6:04:7d:6c:38:db:81:9c:b8:07:e3:07:be:f5:2f:\n   09:68:63:04:6b:87:0e:36:b9:a1:a3:fb:c8:30:0c:a0:63:8d:\n\
    \   6d:ab:0a:f8:44:b0:78:19:1a:38:7e:fa:6a:a1:d4:4b:4b:75:\n   75:bf:6f:09\n \
    \  Versions of these certificates that do not make use of EKU are also\n   included\
    \ in Appendix B.2\n"
- title: 3.  Call Flow with Message Over TLS
  contents:
  - '3.  Call Flow with Message Over TLS

    '
- title: 3.1.  TLS with Server Authentication
  contents:
  - "3.1.  TLS with Server Authentication\n   The flow below shows the edited SSLDump\
    \ output of the host\n   example.com forming a TLS [RFC5246] connection to example.net.\
    \  In\n   this example, mutual authentication is not used.  Note that the\n  \
    \ client proposed three protocol suites including\n   TLS_RSA_WITH_AES_128_CBC_SHA\
    \ defined in [RFC5246].  The certificate\n   returned by the server contains a\
    \ Subject Alternative Name that is\n   set to example.net.  A detailed discussion\
    \ of TLS can be found in SSL\n   and TLS [EKR-TLS].  For more details on the SSLDump\
    \ tool, see the\n   SSLDump Manual [ssldump-manpage].\n   This example does not\
    \ use the Server Extended Hello (see [RFC5246]).\n   New TCP connection #1: example.com(50738)\
    \ <-> example.net(5061)\n   1 1  0.0004 (0.0004)  C>SV3.1(101)  Handshake\n  \
    \       ClientHello\n           Version 3.1\n           random[32]=\n        \
    \     4c 09 5b a7 66 77 eb 43 52 30 dd 98 4d 09 23 d3\n             ff 81 74 ab\
    \ 04 69 bb 79 8c dc 59 cd c2 1f b7 ec\n           cipher suites\n           TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n\
    \           TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\n           TLS_DHE_RSA_WITH_AES_256_SHA\n\
    \           TLS_RSA_WITH_AES_256_CBC_SHA\n           TLS_DSS_RSA_WITH_AES_256_SHA\n\
    \           TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n           TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\n\
    \           TLS_DHE_RSA_WITH_AES_128_CBC_SHA\n           TLS_RSA_WITH_AES_128_CBC_SHA\n\
    \           TLS_DHE_DSS_WITH_AES_128_CBC_SHA\n           TLS_ECDHE_RSA_WITH_DES_192_CBC3_SHA\n\
    \           TLS_ECDH_RSA_WITH_DES_192_CBC3_SHA\n           TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\n\
    \           TLS_RSA_WITH_3DES_EDE_CBC_SHA\n           TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\n\
    \           TLS_ECDHE_RSA_WITH_RC4_128_SHA\n           TLS_ECDH_RSA_WITH_RC4_128_SHA\n\
    \           TLS_RSA_WITH_RC4_128_SHA\n           TLS_RSA_WITH_RC4_128_MD5\n  \
    \         TLS_DHE_RSA_WITH_DES_CBC_SHA\n           TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\n\
    \           TLS_RSA_WITH_DES_CBC_SHA\n           TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\n\
    \           TLS_DHE_DSS_WITH_DES_CBC_SHA\n           TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\n\
    \           TLS_RSA_EXPORT_WITH_RC4_40_MD5\n           compression methods\n \
    \                    NULL\n   1 2  0.0012 (0.0007)  S>CV3.1(48)  Handshake\n \
    \        ServerHello\n           Version 3.1\n           random[32]=\n       \
    \      4c 09 5b a7 30 87 74 c7 16 98 24 d5 af 35 17 a7\n             ef c3 78\
    \ 0c 94 d4 94 d2 7b a6 3f 40 04 25 f6 e0\n           session_id[0]=\n        \
    \   cipherSuite         TLS_RSA_WITH_AES_256_CBC_SHA\n           compressionMethod\
    \                   NULL\n   1 3  0.0012 (0.0000)  S>CV3.1(1858)  Handshake\n\
    \         Certificate\n   1 4  0.0012 (0.0000)  S>CV3.1(14)  Handshake\n     \
    \    CertificateRequest\n           certificate_types                   rsa_sign\n\
    \           certificate_types                   dss_sign\n           certificate_types\
    \                 unknown value\n         ServerHelloDone\n   1 5  0.0043 (0.0031)\
    \  C>SV3.1(7)  Handshake\n         Certificate\n   1 6  0.0043 (0.0000)  C>SV3.1(262)\
    \  Handshake\n         ClientKeyExchange\n   1 7  0.0043 (0.0000)  C>SV3.1(1)\
    \  ChangeCipherSpec\n   1 8  0.0043 (0.0000)  C>SV3.1(48)  Handshake\n   1 9 \
    \ 0.0129 (0.0085)  S>CV3.1(170)  Handshake\n   1 10 0.0129 (0.0000)  S>CV3.1(1)\
    \  ChangeCipherSpec\n   1 11 0.0129 (0.0000)  S>CV3.1(48)  Handshake\n   1 12\
    \ 0.0134 (0.0005)  C>SV3.1(32)  application_data\n   1 13 0.0134 (0.0000)  C>SV3.1(496)\
    \  application_data\n   1 14 0.2150 (0.2016)  S>CV3.1(32)  application_data\n\
    \   1 15 0.2150 (0.0000)  S>CV3.1(336)  application_data\n   1 16 12.2304 (12.0154)\
    \  S>CV3.1(32)  Alert\n   1    12.2310 (0.0005)  S>C  TCP FIN\n   1 17 12.2321\
    \ (0.0011)  C>SV3.1(32)  Alert\n"
- title: 3.2.  MESSAGE Transaction Over TLS
  contents:
  - "3.2.  MESSAGE Transaction Over TLS\n   Once the TLS session is set up, the following\
    \ MESSAGE request (as\n   defined in [RFC3428] is sent from fluffy@example.com\
    \ to\n   kumiko@example.net.  Note that the URI has a SIPS URL and that the\n\
    \   VIA indicates that TLS was used.  In order to format this document,\n   the\
    \ <allOneLine> convention from [RFC4475] is used to break long\n   lines.  The\
    \ actual message does not contain the line breaks contained\n   within those tags.\n\
    \   MESSAGE sips:kumiko@example.net:5061 SIP/2.0\n   <allOneLine>\n   Via: SIP/2.0/TLS\
    \ 192.0.2.2:15001;\n        branch=z9hG4bK-d8754z-c785a077a9a8451b-1---d8754z-;\n\
    \        rport=50738\n   </allOneLine>\n   Max-Forwards: 70\n   To: <sips:kumiko@example.net:5061>\n\
    \   From: <sips:fluffy@example.com:15001>;tag=1a93430b\n   Call-ID: OTZmMDE2OWNlYTVjNDkzYzBhMWRlMDU4NDExZmU4ZTQ.\n\
    \   CSeq: 4308 MESSAGE\n   <allOneLine>\n   Accept: multipart/signed, text/plain,\
    \ application/pkcs7-mime,\n           application/sdp, multipart/alternative\n\
    \   </allOneLine>\n   Content-Type: text/plain\n   Content-Length: 6\n   Hello!\n\
    \   When a User Agent (UA) goes to send a message to example.com, the UA\n   can\
    \ see if it already has a TLS connection to example.com and if it\n   does, it\
    \ may send the message over this connection.  A UA should have\n   some scheme\
    \ for reusing connections as opening a new TLS connection\n   for every message\
    \ results in awful performance.  Implementers are\n   encouraged to read [RFC5923]\
    \ and [RFC3263].\n   The response is sent from example.net to example.com over\
    \ the same\n   TLS connection.  It is shown below.\n   SIP/2.0 200 OK\n   <allOneLine>\n\
    \   Via: SIP/2.0/TLS 192.0.2.2:15001;\n        branch=z9hG4bK-d8754z-c785a077a9a8451b-1---d8754z-;\n\
    \        rport=50738\n   </allOneLine>\n   To: <sips:kumiko@example.net:5061>;tag=0d075510\n\
    \   From: <sips:fluffy@example.com:15001>;tag=1a93430b\n   Call-ID: OTZmMDE2OWNlYTVjNDkzYzBhMWRlMDU4NDExZmU4ZTQ.\n\
    \   CSeq: 4308 MESSAGE\n   Content-Length: 0\n"
- title: 4.  Call Flow with S/MIME-Secured Message
  contents:
  - '4.  Call Flow with S/MIME-Secured Message

    '
- title: 4.1.  MESSAGE Request with Signed Body
  contents:
  - "4.1.  MESSAGE Request with Signed Body\n   Below is an example of a signed message.\
    \  The values on the Content-\n   Type line (multipart/signed) and on the Content-Disposition\
    \ line have\n   been broken across lines to fit on the page, but they are not\
    \ broken\n   across lines in actual implementations.\n   MESSAGE sip:kumiko@example.net\
    \ SIP/2.0\n   <allOneLine>\n   Via: SIP/2.0/TCP 192.0.2.2:15001;\n        branch=z9hG4bK-d8754z-3a922b6dc0f0ff37-1---d8754z-;\n\
    \        rport=50739\n   </allOneLine>\n   Max-Forwards: 70\n   To: <sip:kumiko@example.net>\n\
    \   From: <sip:fluffy@example.com>;tag=ef6bad5e\n   Call-ID: N2NiZjI0NjRjNDQ0MTY1NDRjNWNmMGU1MDA2MDRhYmI.\n\
    \   CSeq: 8473 MESSAGE\n   <allOneLine>\n   Accept: multipart/signed, text/plain,\
    \ application/pkcs7-mime,\n           application/sdp, multipart/alternative\n\
    \   </allOneLine>\n   <allOneLine>\n   Content-Type: multipart/signed;boundary=3b515e121b43a911;\n\
    \                 micalg=sha1;protocol=\"application/pkcs7-signature\"\n   </allOneLine>\n\
    \   Content-Length: 774\n   --3b515e121b43a911\n   Content-Type: text/plain\n\
    \   Content-Transfer-Encoding: binary\n   Hello!\n   --3b515e121b43a911\n   Content-Type:\
    \ application/pkcs7-signature;name=smime.p7s\n   <allOneLine>\n   Content-Disposition:\
    \ attachment;handling=required;\n                        filename=smime.p7s\n\
    \   </allOneLine>\n   Content-Transfer-Encoding: binary\n   *****************\n\
    \   * BINARY BLOB 1 *\n   *****************\n   --3b515e121b43a911--\n   It is\
    \ important to note that the signature (\"BINARY BLOB 1\") is\n   computed over\
    \ the MIME headers and body, but excludes the multipart\n   boundary lines.  The\
    \ value on the Message-body line ends with CRLF.\n   The CRLF is included in the\
    \ boundary and is not part of the signature\n   computation.  To be clear, the\
    \ signature is computed over data\n   starting with the \"C\" in the \"Content-Type\"\
    \ and ending with the \"!\"\n   in the \"Hello!\".\n   Content-Type: text/plain\n\
    \   Content-Transfer-Encoding: binary\n   Hello!\n   Following is the ASN.1 parsing\
    \ of encrypted contents referred to\n   above as \"BINARY BLOB 1\".  Note that\
    \ at address 30, the hash for the\n   signature is specified as SHA-1.  Also note\
    \ that the sender's\n   certificate is not attached as it is optional in [RFC5652].\n\
    \    0  472: SEQUENCE {\n    4    9:   OBJECT IDENTIFIER signedData (1 2 840 113549\
    \ 1 7 2)\n   15  457:   [0] {\n   19  453:     SEQUENCE {\n   23    1:       INTEGER\
    \ 1\n   26   11:       SET {\n   28    9:         SEQUENCE {\n   30    5:    \
    \       OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n   37    0:           NULL\n \
    \         :           }\n          :         }\n   39   11:       SEQUENCE {\n\
    \   41    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n         \
    \ :         }\n   52  420:       SET {\n   56  416:         SEQUENCE {\n   60\
    \    1:           INTEGER 1\n   63  125:           SEQUENCE {\n   65  112:   \
    \          SEQUENCE {\n   67   11:               SET {\n   69    9:          \
    \       SEQUENCE {\n   71    3:                   OBJECT IDENTIFIER countryName\
    \ (2 5 4 6)\n   76    2:                   PrintableString 'US'\n          : \
    \                  }\n          :                 }\n   80   19:             \
    \  SET {\n   82   17:                 SEQUENCE {\n   84    3:                \
    \   OBJECT IDENTIFIER\n          :                     stateOrProvinceName (2\
    \ 5 4 8)\n   89   10:                   UTF8String 'California'\n          : \
    \                  }\n          :                 }\n    101   17:           \
    \    SET {\n    103   15:                 SEQUENCE {\n    105    3:          \
    \         OBJECT IDENTIFIER localityName (2 5 4 7)\n    110    8:            \
    \       UTF8String 'San Jose'\n          :                   }\n          :  \
    \               }\n    120   14:               SET {\n    122   12:          \
    \       SEQUENCE {\n    124    3:                   OBJECT IDENTIFIER\n      \
    \    :                     organizationName (2 5 4 10)\n    129    5:        \
    \           UTF8String 'sipit'\n          :                   }\n          : \
    \                }\n    136   41:               SET {\n    138   39:         \
    \        SEQUENCE {\n    140    3:                   OBJECT IDENTIFIER\n     \
    \     :                     organizationalUnitName (2 5 4 11)\n    145   32: \
    \                  UTF8String 'Sipit Test Certificate\n                      \
    \                      Authority'\n          :                   }\n         \
    \ :                 }\n          :               }\n    179    9:            \
    \ INTEGER 00 96 A3 84 17 4E EF 8A 4D\n          :             }\n    190    9:\
    \           SEQUENCE {\n    192    5:             OBJECT IDENTIFIER sha1 (1 3\
    \ 14 3 2 26)\n    199    0:             NULL\n          :             }\n    201\
    \   13:           SEQUENCE {\n    203    9:             OBJECT IDENTIFIER\n  \
    \        :               rsaEncryption (1 2 840 113549 1 1 1)\n    214    0: \
    \            NULL\n          :             }\n    216  256:           OCTET STRING\n\
    \          :             74 4D 21 39 D6 E2 E2 2C 30 5A AA BC 4E 60 8D 69\n   \
    \       :             A7 E5 79 50 1A B1 7D 4A D3 C1 03 9F 19 7D A2 76\n      \
    \    :             97 B3 CE 30 CD 62 4B 96 20 35 DB C1 64 D9 33 92\n         \
    \ :             96 CD 28 03 98 6E 2C 0C F6 8D 93 40 F2 88 DA 29\n          : \
    \            AD 0B C2 0E F9 D3 6A 95 2C 79 6E C2 3D 62 E6 54\n          :    \
    \         A9 1B AC 66 DB 16 B7 44 6C 03 1B 71 9C EE C9 EC\n          :       \
    \      4D 93 B1 CF F5 17 79 C5 C8 BA 2F A7 6C 4B DC CF\n          :          \
    \   62 A3 F3 1A 1B 24 E4 40 66 3C 4F 87 86 BF 09 6A\n          :             7A\
    \ 43 60 2B FC D8 3D 2B 57 17 CB 81 03 2A 56 69\n          :             81 82\
    \ FA 78 DE D2 3A 2F FA A3 C5 EA 8B E8 0C 36\n          :             1B BC DC\
    \ FD 1B 8C 2E 0F 01 AF D9 E1 04 0E 4E 50\n          :             94 75 7C BD\
    \ D9 0B DD AA FA 36 E3 EC E4 A5 35 46\n          :             BE A2 97 1D AD\
    \ BA 44 54 3A ED 94 DA 76 4A 51 BA\n          :             A4 7D 7A 62 BF 2A\
    \ 2F F2 5C 5A FE CA E6 B9 DC 5D\n          :             EA 26 F2 35 17 19 20\
    \ CE 97 96 4E 72 9C 72 FD 1F\n          :             68 C1 6A 5C 86 42 F2 ED\
    \ F2 70 65 4C C7 44 C5 7C\n          :           }\n          :         }\n  \
    \        :       }\n          :     }\n          :   }\n   SHA-1 parameters may\
    \ be omitted entirely, instead of being set to\n   NULL, as mentioned in [RFC3370].\
    \  The above dump of Blob 1 has SHA-1\n   parameters set to NULL.  Below are the\
    \ same contents signed with the\n   same key, but omitting the NULL according\
    \ to [RFC3370].  This is the\n   preferred encoding.  This is covered in greater\
    \ detail in Section 5.\n    0  468: SEQUENCE {\n    4    9:   OBJECT IDENTIFIER\
    \ signedData (1 2 840 113549 1 7 2)\n   15  453:   [0] {\n   19  449:     SEQUENCE\
    \ {\n   23    1:       INTEGER 1\n   26    9:       SET {\n   28    7:       \
    \  SEQUENCE {\n   30    5:           OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n\
    \          :           }\n          :         }\n   37   11:       SEQUENCE {\n\
    \   39    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n         \
    \ :         }\n   50  418:       SET {\n   54  414:         SEQUENCE {\n   58\
    \    1:           INTEGER 1\n   61  125:           SEQUENCE {\n   63  112:   \
    \          SEQUENCE {\n   65   11:               SET {\n   67    9:          \
    \       SEQUENCE {\n   69    3:                   OBJECT IDENTIFIER countryName\
    \ (2 5 4 6)\n   74    2:                   PrintableString 'US'\n          : \
    \                  }\n          :                 }\n   78   19:             \
    \  SET {\n   80   17:                 SEQUENCE {\n   82    3:                \
    \   OBJECT IDENTIFIER\n          :                     stateOrProvinceName (2\
    \ 5 4 8)\n   87   10:                   UTF8String 'California'\n          : \
    \                  }\n          :                 }\n   99   17:             \
    \  SET {\n    101   15:                 SEQUENCE {\n    103    3:            \
    \       OBJECT IDENTIFIER localityName (2 5 4 7)\n    108    8:              \
    \     UTF8String 'San Jose'\n          :                   }\n          :    \
    \             }\n    118   14:               SET {\n    120   12:            \
    \     SEQUENCE {\n    122    3:                   OBJECT IDENTIFIER\n        \
    \  :                     organizationName (2 5 4 10)\n    127    5:          \
    \         UTF8String 'sipit'\n          :                   }\n          :   \
    \              }\n    134   41:               SET {\n    136   39:           \
    \      SEQUENCE {\n    138    3:                   OBJECT IDENTIFIER\n       \
    \   :                     organizationalUnitName (2 5 4 11)\n    143   32:   \
    \                UTF8String 'Sipit Test Certificate\n                        \
    \                    Authority'\n          :                   }\n          :\
    \                 }\n          :               }\n    177    9:             INTEGER\
    \ 00 96 A3 84 17 4E EF 8A 4D\n          :             }\n    188    7:       \
    \    SEQUENCE {\n    190    5:             OBJECT IDENTIFIER sha1 (1 3 14 3 2\
    \ 26)\n          :             }\n    197   13:           SEQUENCE {\n    199\
    \    9:             OBJECT IDENTIFIER\n          :               rsaEncryption\
    \ (1 2 840 113549 1 1 1)\n    210    0:             NULL\n          :        \
    \     }\n    212  256:           OCTET STRING\n          :             74 4D 21\
    \ 39 D6 E2 E2 2C 30 5A AA BC 4E 60 8D 69\n          :             A7 E5 79 50\
    \ 1A B1 7D 4A D3 C1 03 9F 19 7D A2 76\n          :             97 B3 CE 30 CD\
    \ 62 4B 96 20 35 DB C1 64 D9 33 92\n          :             96 CD 28 03 98 6E\
    \ 2C 0C F6 8D 93 40 F2 88 DA 29\n          :             AD 0B C2 0E F9 D3 6A\
    \ 95 2C 79 6E C2 3D 62 E6 54\n          :             A9 1B AC 66 DB 16 B7 44\
    \ 6C 03 1B 71 9C EE C9 EC\n          :             4D 93 B1 CF F5 17 79 C5 C8\
    \ BA 2F A7 6C 4B DC CF\n          :             62 A3 F3 1A 1B 24 E4 40 66 3C\
    \ 4F 87 86 BF 09 6A\n          :             7A 43 60 2B FC D8 3D 2B 57 17 CB\
    \ 81 03 2A 56 69\n          :             81 82 FA 78 DE D2 3A 2F FA A3 C5 EA\
    \ 8B E8 0C 36\n          :             1B BC DC FD 1B 8C 2E 0F 01 AF D9 E1 04\
    \ 0E 4E 50\n          :             94 75 7C BD D9 0B DD AA FA 36 E3 EC E4 A5\
    \ 35 46\n          :             BE A2 97 1D AD BA 44 54 3A ED 94 DA 76 4A 51\
    \ BA\n          :             A4 7D 7A 62 BF 2A 2F F2 5C 5A FE CA E6 B9 DC 5D\n\
    \          :             EA 26 F2 35 17 19 20 CE 97 96 4E 72 9C 72 FD 1F\n   \
    \       :             68 C1 6A 5C 86 42 F2 ED F2 70 65 4C C7 44 C5 7C\n      \
    \    :           }\n          :         }\n          :       }\n          :  \
    \   }\n          :   }\n"
- title: 4.2.  MESSAGE Request with Encrypted Body
  contents:
  - "4.2.  MESSAGE Request with Encrypted Body\n   Below is an example of an encrypted\
    \ text/plain message that says\n   \"Hello!\".  The binary encrypted contents\
    \ have been replaced with the\n   block \"BINARY BLOB 2\".\n   MESSAGE sip:kumiko@example.net\
    \ SIP/2.0\n   <allOneLine>\n   Via: SIP/2.0/TCP 192.0.2.2:15001;\n        branch=z9hG4bK-d8754z-c276232b541dd527-1---d8754z-;\n\
    \        rport=50741\n   </allOneLine>\n   Max-Forwards: 70\n   To: <sip:kumiko@example.net>\n\
    \   From: <sip:fluffy@example.com>;tag=7a2e3025\n   Call-ID: MDYyMDhhODA3NWE2ZjEyYzAwOTZlMjExNWI2ZWQwZGM.\n\
    \   CSeq: 3260 MESSAGE\n   <allOneLine>\n   Accept: multipart/signed, text/plain,\
    \ application/pkcs7-mime,\n           application/sdp, multipart/alternative\n\
    \   </allOneLine>\n   <allOneLine>\n   Content-Disposition: attachment;handling=required;\n\
    \                        filename=smime.p7\n   </allOneLine>\n   Content-Transfer-Encoding:\
    \ binary\n   <allOneLine>\n   Content-Type: application/pkcs7-mime;smime-type=enveloped-data;\n\
    \                 name=smime.p7m\n   </allOneLine>\n   Content-Length: 565\n \
    \  *****************\n   * BINARY BLOB 2 *\n   *****************\n   Following\
    \ is the ASN.1 parsing of \"BINARY BLOB 2\".  Note that at\n   address 454, the\
    \ encryption is set to aes128-CBC.\n    0  561: SEQUENCE {\n    4    9:   OBJECT\
    \ IDENTIFIER envelopedData (1 2 840 113549 1 7 3)\n   15  546:   [0] {\n   19\
    \  542:     SEQUENCE {\n   23    1:       INTEGER 0\n   26  409:       SET {\n\
    \   30  405:         SEQUENCE {\n   34    1:           INTEGER 0\n   37  125:\
    \           SEQUENCE {\n   39  112:             SEQUENCE {\n   41   11:      \
    \         SET {\n   43    9:                 SEQUENCE {\n   45    3:         \
    \          OBJECT IDENTIFIER countryName (2 5 4 6)\n   50    2:              \
    \     PrintableString 'US'\n          :                   }\n          :     \
    \            }\n   54   19:               SET {\n   56   17:                 SEQUENCE\
    \ {\n   58    3:                   OBJECT IDENTIFIER\n          :            \
    \         stateOrProvinceName (2 5 4 8)\n   63   10:                   UTF8String\
    \ 'California'\n          :                   }\n          :                 }\n\
    \   75   17:               SET {\n   77   15:                 SEQUENCE {\n   79\
    \    3:                   OBJECT IDENTIFIER localityName (2 5 4 7)\n   84    8:\
    \                   UTF8String 'San Jose'\n          :                   }\n \
    \         :                 }\n   94   14:               SET {\n   96   12:  \
    \               SEQUENCE {\n   98    3:                   OBJECT IDENTIFIER\n\
    \          :                     organizationName (2 5 4 10)\n    103    5:  \
    \                 UTF8String 'sipit'\n          :                   }\n      \
    \    :                 }\n    110   41:               SET {\n    112   39:   \
    \              SEQUENCE {\n    114    3:                   OBJECT IDENTIFIER\n\
    \          :                     organizationalUnitName (2 5 4 11)\n    119  \
    \ 32:                   UTF8String 'Sipit Test Certificate\n                 \
    \                           Authority'\n          :                   }\n    \
    \      :                 }\n          :               }\n    153    9:       \
    \      INTEGER 00 96 A3 84 17 4E EF 8A 4E\n          :             }\n    164\
    \   13:           SEQUENCE {\n    166    9:             OBJECT IDENTIFIER\n  \
    \        :               rsaEncryption (1 2 840 113549 1 1 1)\n    177    0: \
    \            NULL\n          :             }\n    179  256:           OCTET STRING\n\
    \          :             B9 12 8F 32 AB 4A E2 38 C1 E0 53 69 88 D6 25 E7\n   \
    \       :             40 03 B1 DE 79 21 A3 E8 23 5A 1B CB FB 58 F4 97\n      \
    \    :             48 A7 C8 F0 3D DF 41 A3 5A 90 32 70 82 FA B0 DE\n         \
    \ :             D8 94 7C 6C 2E 01 FE 33 BD 62 CB 07 4F 58 DE 6F\n          : \
    \            EA 3F EF B4 FB 46 72 58 9A 88 A0 85 BC 23 D7 C8\n          :    \
    \         09 0B 90 8D 4A 5F 3F 96 7C AC D4 E2 19 E8 02 B6\n          :       \
    \      0E F3 0D F2 91 4A 67 A9 EE 51 6A 97 D7 86 6D EC\n          :          \
    \   78 6E C6 E0 83 7C E1 00 1F 5A 40 59 60 0C D7 EB\n          :             A3\
    \ FB 04 B3 C9 A5 EB 79 ED B3 56 F8 F6 51 B2 5E\n          :             58 E2\
    \ D8 17 28 33 A6 B8 35 8C 0E 14 7F 90 D0 7B\n          :             03 00 6C\
    \ 3D 81 29 F5 D7 E5 AC 75 5E E0 F0 DD E3\n          :             3E B2 06 97\
    \ D6 49 A9 CB 38 08 F1 84 05 F5 C0 BC\n          :             55 A6 D4 C9 D8\
    \ FD A4 AC 40 9F 9D 51 5B F7 3A C3\n          :             C3 CD 3A E7 6D 21\
    \ 05 D0 50 75 4F 14 D8 77 76 C6\n          :             13 A6 48 12 7B 25 CC\
    \ 22 5D 73 BD 40 E4 15 02 A2\n          :             39 4A CB D9 55 08 A4 EE\
    \ 4E 8A 5E BA C4 4A 46 9C\n          :           }\n          :         }\n  \
    \  439  124:       SEQUENCE {\n    441    9:         OBJECT IDENTIFIER data (1\
    \ 2 840 113549 1 7 1)\n    452   29:         SEQUENCE {\n    454    9:       \
    \    OBJECT IDENTIFIER\n          :             aes128-CBC (2 16 840 1 101 3 4\
    \ 1 2)\n    465   16:           OCTET STRING\n          :             CA 35 CA\
    \ BD 1E 78 83 D9 20 6C 47 B9 9F DC 91 88\n          :           }\n    483   80:\
    \         [0]\n          :           1B AE 12 C4 0E 55 96 AB 99 CC 1C 7F B5 98\
    \ A4 BF\n          :           D2 D8 7F 94 BB B5 38 05 59 F2 38 A1 CD 29 75 17\n\
    \          :           1D 63 1B 0B B0 2D 88 06 7F 78 80 F3 5A 3E DC 35\n     \
    \     :           BF 22 1E 03 32 59 98 DA FD 81 5F D9 41 63 3A 18\n          :\
    \           FD B5 84 14 01 46 0B 40 EB 56 29 86 47 8B D1 EE\n          :     \
    \    }\n          :       }\n          :     }\n          :   }\n"
- title: 4.3.  MESSAGE Request with Encrypted and Signed Body
  contents:
  - "4.3.  MESSAGE Request with Encrypted and Signed Body\n   In the example below,\
    \ some of the header values have been split\n   across multiple lines.  Where\
    \ the lines have been broken, the\n   <allOneLine> convention has been used. \
    \ This was only done to make it\n   fit in the RFC format.  Specifically, the\
    \ application/pkcs7-mime\n   Content-Type line is one line with no whitespace\
    \ between the \"mime;\"\n   and the \"smime-type\".  The values are split across\
    \ lines for\n   formatting, but are not split in the real message.  The binary\n\
    \   encrypted content has been replaced with \"BINARY BLOB 3\", and the\n   binary\
    \ signed content has been replaced with \"BINARY BLOB 4\".\n   MESSAGE sip:kumiko@example.net\
    \ SIP/2.0\n   <allOneLine>\n   Via: SIP/2.0/TCP 192.0.2.2:15001;\n        branch=z9hG4bK-d8754z-97a26e59b7262b34-1---d8754z-;\n\
    \        rport=50742\n   </allOneLine>\n   Max-Forwards: 70\n   To: <sip:kumiko@example.net>\n\
    \   From: <sip:fluffy@example.com>;tag=379f5b27\n   Call-ID: MjYwMzdjYTY3YWRkYzgzMjU0MGI4Mzc2Njk1YzJlNzE.\n\
    \   CSeq: 5449 MESSAGE\n   <allOneLine>\n   Accept: multipart/signed, text/plain,\
    \ application/pkcs7-mime,\n           application/sdp, multipart/alternative\n\
    \   </allOneLine>\n   <allOneLine>\n   Content-Type: multipart/signed;boundary=e8df6e1ce5d1e864;\n\
    \                 micalg=sha1;protocol=\"application/pkcs7-signature\"\n   </allOneLine>\n\
    \   Content-Length: 1455\n   --e8df6e1ce5d1e864\n   <allOneLine>\n   Content-Type:\
    \ application/pkcs7-mime;smime-type=enveloped-data;\n                 name=smime.p7m\n\
    \   </allOneLine>\n   <allOneLine>\n   Content-Disposition: attachment;handling=required;\n\
    \                        filename=smime.p7\n   </allOneLine>\n   Content-Transfer-Encoding:\
    \ binary\n   *****************\n   * BINARY BLOB 3 *\n   *****************\n \
    \  --e8df6e1ce5d1e864\n   Content-Type: application/pkcs7-signature;name=smime.p7s\n\
    \   <allOneLine>\n   Content-Disposition: attachment;handling=required;\n    \
    \                    filename=smime.p7s\n   </allOneLine>\n   Content-Transfer-Encoding:\
    \ binary\n   *****************\n   * BINARY BLOB 4 *\n   *****************\n \
    \  --e8df6e1ce5d1e864--\n   Below is the ASN.1 parsing of \"BINARY BLOB 3\".\n\
    \    0  561: SEQUENCE {\n    4    9:   OBJECT IDENTIFIER envelopedData (1 2 840\
    \ 113549 1 7 3)\n   15  546:   [0] {\n   19  542:     SEQUENCE {\n   23    1:\
    \       INTEGER 0\n   26  409:       SET {\n   30  405:         SEQUENCE {\n \
    \  34    1:           INTEGER 0\n   37  125:           SEQUENCE {\n   39  112:\
    \             SEQUENCE {\n   41   11:               SET {\n   43    9:       \
    \          SEQUENCE {\n   45    3:                   OBJECT IDENTIFIER countryName\
    \ (2 5 4 6)\n   50    2:                   PrintableString 'US'\n          : \
    \                  }\n          :                 }\n   54   19:             \
    \  SET {\n   56   17:                 SEQUENCE {\n   58    3:                \
    \   OBJECT IDENTIFIER\n          :                     stateOrProvinceName (2\
    \ 5 4 8)\n   63   10:                   UTF8String 'California'\n          : \
    \                  }\n          :                 }\n   75   17:             \
    \  SET {\n   77   15:                 SEQUENCE {\n   79    3:                \
    \   OBJECT IDENTIFIER localityName (2 5 4 7)\n   84    8:                   UTF8String\
    \ 'San Jose'\n          :                   }\n          :                 }\n\
    \   94   14:               SET {\n   96   12:                 SEQUENCE {\n   98\
    \    3:                   OBJECT IDENTIFIER\n          :                     organizationName\
    \ (2 5 4 10)\n    103    5:                   UTF8String 'sipit'\n          :\
    \                   }\n          :                 }\n    110   41:          \
    \     SET {\n    112   39:                 SEQUENCE {\n    114    3:         \
    \          OBJECT IDENTIFIER\n          :                     organizationalUnitName\
    \ (2 5 4 11)\n    119   32:                   UTF8String 'Sipit Test Certificate\n\
    \                                            Authority'\n          :         \
    \          }\n          :                 }\n          :               }\n   \
    \ 153    9:             INTEGER 00 96 A3 84 17 4E EF 8A 4E\n          :      \
    \       }\n    164   13:           SEQUENCE {\n    166    9:             OBJECT\
    \ IDENTIFIER\n          :               rsaEncryption (1 2 840 113549 1 1 1)\n\
    \    177    0:             NULL\n          :             }\n    179  256:    \
    \       OCTET STRING\n          :             49 11 0B 11 52 A9 9D E3 AA FB 86\
    \ CB EB 12 CC 8E\n          :             96 9D 85 3E 80 D2 7C C4 9B B7 81 4B\
    \ B5 FA 13 80\n          :             6A 6A B2 34 72 D8 C0 82 60 DA B3 43 F8\
    \ 51 8C 32\n          :             8B DD D0 76 6D 9C 46 73 C1 44 A0 10 FF 16\
    \ A4 83\n          :             74 85 21 74 7D E0 FD 42 C0 97 00 82 A2 80 81\
    \ 22\n          :             9C A2 82 0A 85 F0 68 EF 9A D7 6D 1D 24 2B A9 5E\n\
    \          :             B3 9A A0 3E A7 D9 1D 1C D7 42 CB 6F A5 81 66 23\n   \
    \       :             28 00 7C 99 6A B6 03 3F 7E F6 48 EA 91 49 35 F1\n      \
    \    :             FD 40 54 5D AC F7 84 EA 3F 27 43 FD DE E2 10 DD\n         \
    \ :             63 C4 35 4A 13 63 0B 6D 0D 9A D5 AB 72 39 69 8C\n          : \
    \            65 4C 44 C4 A3 31 60 79 B9 A8 A3 A1 03 FD 41 25\n          :    \
    \         12 E5 F3 F8 47 CE 8C 42 D9 26 77 A5 57 AF 1A 95\n          :       \
    \      BF 05 A5 E9 47 F2 D1 AE DC 13 7E 1B 83 5C 8C C4\n          :          \
    \   1F 31 BC 59 E6 FD 6E 9A B0 91 EC 71 A6 7F 28 3E\n          :             23\
    \ 1B 40 E2 C0 60 CF 5E 5B 86 08 06 82 B4 B7 DB\n          :             00 DD\
    \ AC 3A 39 27 E2 7C 96 AD 8A E9 C3 B8 06 5E\n          :           }\n       \
    \   :         }\n    439  124:       SEQUENCE {\n    441    9:         OBJECT\
    \ IDENTIFIER data (1 2 840 113549 1 7 1)\n    452   29:         SEQUENCE {\n \
    \   454    9:           OBJECT IDENTIFIER\n          :             aes128-CBC\
    \ (2 16 840 1 101 3 4 1 2)\n    465   16:           OCTET STRING\n          :\
    \             88 9B 13 75 A7 66 14 C3 CF CD C6 FF D2 91 5D A0\n          :   \
    \        }\n    483   80:         [0]\n          :           80 0B A3 B7 57 89\
    \ B4 F4 70 AE 1D 14 A9 35 DD F9\n          :           1D 66 29 46 52 40 13 E1\
    \ 3B 4A 23 E5 EC AB F9 35\n          :           A6 B6 A4 BE C0 02 31 06 19 C4\
    \ 39 22 7D 10 4C 0D\n          :           F4 96 04 78 11 85 4E 7E E3 C3 BC B2\
    \ DF 55 17 79\n          :           5F F2 4E E5 25 42 37 45 39 5D F6 DA 57 9A\
    \ 4E 0B\n          :         }\n          :       }\n          :     }\n     \
    \     :   }\n   Below is the ASN.1 parsing of \"BINARY BLOB 4\".\n    0  472:\
    \ SEQUENCE {\n    4    9:   OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n\
    \   15  457:   [0] {\n   19  453:     SEQUENCE {\n   23    1:       INTEGER 1\n\
    \   26   11:       SET {\n   28    9:         SEQUENCE {\n   30    5:        \
    \   OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n   37    0:           NULL\n     \
    \     :           }\n          :         }\n   39   11:       SEQUENCE {\n   41\
    \    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n          :   \
    \      }\n   52  420:       SET {\n   56  416:         SEQUENCE {\n   60    1:\
    \           INTEGER 1\n   63  125:           SEQUENCE {\n   65  112:         \
    \    SEQUENCE {\n   67   11:               SET {\n   69    9:                \
    \ SEQUENCE {\n   71    3:                   OBJECT IDENTIFIER countryName (2 5\
    \ 4 6)\n   76    2:                   PrintableString 'US'\n          :      \
    \             }\n          :                 }\n   80   19:               SET\
    \ {\n   82   17:                 SEQUENCE {\n   84    3:                   OBJECT\
    \ IDENTIFIER\n          :                     stateOrProvinceName (2 5 4 8)\n\
    \   89   10:                   UTF8String 'California'\n          :          \
    \         }\n          :                 }\n    101   17:               SET {\n\
    \    103   15:                 SEQUENCE {\n    105    3:                   OBJECT\
    \ IDENTIFIER localityName (2 5 4 7)\n    110    8:                   UTF8String\
    \ 'San Jose'\n          :                   }\n          :                 }\n\
    \    120   14:               SET {\n    122   12:                 SEQUENCE {\n\
    \    124    3:                   OBJECT IDENTIFIER\n          :              \
    \       organizationName (2 5 4 10)\n    129    5:                   UTF8String\
    \ 'sipit'\n          :                   }\n          :                 }\n  \
    \  136   41:               SET {\n    138   39:                 SEQUENCE {\n \
    \   140    3:                   OBJECT IDENTIFIER\n          :               \
    \      organizationalUnitName (2 5 4 11)\n    145   32:                   UTF8String\
    \ 'Sipit Test Certificate\n                                            Authority'\n\
    \          :                   }\n          :                 }\n          : \
    \              }\n    179    9:             INTEGER 00 96 A3 84 17 4E EF 8A 4D\n\
    \          :             }\n    190    9:           SEQUENCE {\n    192    5:\
    \             OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n    199    0:          \
    \   NULL\n          :             }\n    201   13:           SEQUENCE {\n    203\
    \    9:             OBJECT IDENTIFIER\n          :               rsaEncryption\
    \ (1 2 840 113549 1 1 1)\n    214    0:             NULL\n          :        \
    \     }\n    216  256:           OCTET STRING\n          :             6E 51 AC\
    \ 24 2E BA 7C A1 EE 80 A8 55 BC D4 64 5D\n          :             E5 29 09 5F\
    \ B2 AF AA 6F 91 D2 97 79 32 5B AF CA\n          :             FE A1 73 FC E5\
    \ 57 4E C6 3B 67 35 AA E4 78 1E 59\n          :             93 EE 67 63 77 1E\
    \ 7A 82 BC 1E 26 0F 39 75 0C A6\n          :             26 92 01 6A B7 5D F0\
    \ C0 2C 51 46 FB A7 36 44 E3\n          :             64 C6 11 CB 0B 6B FD F3\
    \ 6D 7C FD 3E AE 2E 91 BB\n          :             78 9E F4 1B A1 20 68 B9 DE\
    \ D3 E3 0C FC F7 14 9A\n          :             2C 64 AB 27 52 BD 52 EC 27 88\
    \ 14 BD DB C3 54 C7\n          :             EA 48 DB 07 E9 9B 2E C8 BE 62 A2\
    \ 76 83 53 37 E8\n          :             02 4B D1 86 E9 DF 2E BD 93 39 EC 2F\
    \ 01 53 A0 7F\n          :             1A B9 A6 31 FC E7 91 1C DB 22 4A 67 83\
    \ 94 B2 4E\n          :             28 A9 CD DE 4A 04 6A E0 86 90 7B 58 5F DB\
    \ 7A 96\n          :             96 A0 25 61 C2 58 A2 28 E5 B3 B2 F1 6D 51 06\
    \ 9C\n          :             78 61 0D D8 3A A7 9F A3 B5 87 0B 80 11 C2 A9 1A\n\
    \          :             E5 17 1C EB 82 55 AB CD 04 E7 D9 5B 11 E8 B7 47\n   \
    \       :             FE FD CC B7 DB 47 6F 77 85 9E 24 D8 11 E1 E4 7D\n      \
    \    :           }\n          :         }\n          :       }\n          :  \
    \   }\n          :   }\n"
- title: 5.  Observed Interoperability Issues
  contents:
  - "5.  Observed Interoperability Issues\n   This section describes some common interoperability\
    \ problems.  These\n   were observed by the authors at SIPit interoperability\
    \ events.\n   Implementers should be careful to verify that their systems do not\n\
    \   introduce these common problems, and, when possible, make their\n   clients\
    \ forgiving in what they receive.  Implementations should take\n   extra care\
    \ to produce reasonable error messages when interacting with\n   software that\
    \ has these problems.\n   Some SIP clients incorrectly only do SSLv3 and do not\
    \ support TLS.\n   See Section 26.2.1 of [RFC3261].\n   Many SIP clients were\
    \ found to accept expired certificates with no\n   warning or error.  See Section\
    \ 4.1.2.5 of [RFC5280].\n   When used with SIP, TLS and S/MIME provide the identity\
    \ of the peer\n   that a client is communicating with in the Subject Alternative\
    \ Name\n   in the certificate.  The software checks that this name corresponds\n\
    \   to the identity the server is trying to contact.  Normative text\n   describing\
    \ path validation can be found in Section 7 of [RFC5922] and\n   Section 6 of\
    \ [RFC5280].  If a client is trying to set up a TLS\n   connection to good.example.com\
    \ and it gets a TLS connection set up\n   with a server that presents a valid\
    \ certificate but with the name\n   evil.example.com, it will typically generate\
    \ an error or warning of\n   some type.  Similarly with S/MIME, if a user is trying\
    \ to communicate\n   with sip:fluffy@example.com, one of the items in the Subject\n\
    \   Alternate Name set in the certificate will need to match according to\n  \
    \ the certificate validation rules in Section 23 of [RFC3261] and\n   Section\
    \ 6 of [RFC5280].\n   Some implementations used binary MIME encodings while others\
    \ used\n   base64.  It is advisable that implementations send only binary and\n\
    \   are prepared to receive either.  See Section 3.2 of [RFC5621].\n   In several\
    \ places in this document, the messages contain the encoding\n   for the SHA-1\
    \ digest algorithm identifier.  The preferred form for\n   encoding as set out\
    \ in Section 2 of [RFC3370] is the form in which\n   the optional AlgorithmIdentifier\
    \ parameter field is omitted.\n   However, [RFC3370] also says the recipients\
    \ need to be able to\n   receive the form in which the AlgorithmIdentifier parameter\
    \ field is\n   present and set to NULL.  Examples of the form using NULL can be\n\
    \   found in Section 4.2 of [RFC4134].  Receivers really do need to be\n   able\
    \ to receive the form that includes the NULL because the NULL\n   form, while\
    \ not preferred, is what was observed as being generated by\n   most implementations.\
    \  Implementers should also note that if the\n   algorithm is MD5 instead of SHA-1,\
    \ then the form that omits the\n   AlgorithmIdentifier parameters field is not\
    \ allowed and the sender\n   has to use the form where the NULL is included.\n\
    \   The preferred encryption algorithm for S/MIME in SIP is AES as\n   defined\
    \ in [RFC3853].\n   Observed S/MIME interoperability has been better when UAs\
    \ did not\n   attach the senders' certificates.  Attaching the certificates\n\
    \   significantly increases the size of the messages, which should be\n   considered\
    \ when sending over UDP.  Furthermore, the receiver cannot\n   rely on the sender\
    \ to always send the certificate, so it does not\n   turn out to be useful in\
    \ most situations.\n   Please note that the certificate path validation algorithm\
    \ described\n   in Section 6 of [RFC5280] is a complex algorithm for which all\
    \ of the\n   details matter.  There are numerous ways in which failing to\n  \
    \ precisely implement the algorithm as specified in Section 6 of\n   [RFC5280]\
    \ can create a security flaw, a simple example of which is\n   the failure to\
    \ check the expiration date that is already mentioned\n   above.  It is important\
    \ for developers to ensure that this validation\n   is performed and that the\
    \ results are verified by their applications\n   or any libraries that they use.\n"
- title: 6.  Additional Test Scenarios
  contents:
  - "6.  Additional Test Scenarios\n   This section provides a non-exhaustive list\
    \ of tests that\n   implementations should perform while developing systems that\
    \ use\n   S/MIME and TLS for SIP.\n   Much of the required behavior for inspecting\
    \ certificates when using\n   S/MIME and TLS with SIP is currently underspecified.\
    \  The non-\n   normative recommendations in this document capture the current\n\
    \   folklore around that required behavior, guided by both related\n   normative\
    \ works such as [RFC4474] (particularly, Section 13.4 Domain\n   Names and Subordination)\
    \ and informative works such as [RFC2818],\n   Section 3.1.  To summarize, test\
    \ plans should:\n   o  For S/MIME secured bodies, ensure that the peer's URI (address-of-\n\
    \      record, as per [RFC3261], Section 23.3) appears in the\n      subjectAltName\
    \ of the peer's certificate as a\n      uniformResourceIdentifier field.\n   o\
    \  For TLS, ensure that the peer's hostname appears as described in\n      [RFC5922].\
    \  Also:\n      *  ensure an exact match in a dNSName entry in the subjectAltName\n\
    \         if there are any dNSNames in the subjectAltName.  Wildcard\n       \
    \  matching is not allowed against these dNSName entries.  See\n         Section\
    \ 7.1 of [RFC5922].\n      *  ensure that the most specific CommonName in the\
    \ Subject field\n         matches if there are no dNSName entries in the subjectAltName\n\
    \         at all (which is not the same as there being no matching\n         dNSName\
    \ entries).  This match can be either exact, or against\n         an entry that\
    \ uses the wildcard matching character '*'.\n      The peer's hostname is discovered\
    \ from the initial DNS query in\n      the server location process [RFC3263].\n\
    \   o  IP addresses can appear in subjectAltName ([RFC5280]) of the\n      peer's\
    \ certificate, e.g., \"IP:192.168.0.1\".  Note that if IP\n      addresses are\
    \ used in subjectAltName, there are important\n      ramifications regarding the\
    \ use of Record-Route headers that also\n      need to be considered.  See Section\
    \ 7.5 of [RFC5922].  Use of IP\n      addresses instead of domain names is inadvisable.\n\
    \   For each of these tests, an implementation will proceed past the\n   verification\
    \ point only if the certificate is \"good\".  S/MIME\n   protected requests presenting\
    \ bad certificate data will be rejected.\n   S/MIME protected responses presenting\
    \ bad certificate information\n   will be ignored.  TLS connections involving\
    \ bad certificate data will\n   not be completed.\n   1.   S/MIME : Good peer\
    \ certificate\n   2.   S/MIME : Bad peer certificate (peer URI does not appear\
    \ in\n        subjectAltName)\n   3.   S/MIME : Bad peer certificate (valid authority\
    \ chain does not\n        end at a trusted CA)\n   4.   S/MIME : Bad peer certificate\
    \ (incomplete authority chain)\n   5.   S/MIME : Bad peer certificate (the current\
    \ time does not fall\n        within the period of validity)\n   6.   S/MIME :\
    \ Bad peer certificate (certificate, or certificate in\n        authority chain,\
    \ has been revoked)\n   7.   S/MIME : Bad peer certificate (\"Digital Signature\"\
    \ is not\n        specified as an X509v3 Key Usage)\n   8.   TLS : Good peer certificate\
    \ (hostname appears in dNSName in\n        subjectAltName)\n   9.   TLS : Good\
    \ peer certificate (no dNSNames in subjectAltName,\n        hostname appears in\
    \ Common Name (CN) of Subject)\n   10.  TLS : Good peer certificate (CN of Subject\
    \ empty, and\n        subjectAltName extension contains an iPAddress stored in\
    \ the\n        octet string in network byte order form as specified in RFC 791\n\
    \        [RFC0791])\n   11.  TLS : Bad peer certificate (no match in dNSNames\
    \ or in the\n        Subject CN)\n   12.  TLS : Bad peer certificate (valid authority\
    \ chain does not end\n        at a trusted CA)\n   13.  TLS : Bad peer certificate\
    \ (incomplete authority chain)\n   14.  TLS : Bad peer certificate (the current\
    \ time does not fall\n        within the period of validity)\n   15.  TLS : Bad\
    \ peer certificate (certificate, or certificate in\n        authority chain, has\
    \ been revoked)\n   16.  TLS : Bad peer certificate (\"TLS Web Server Authentication\"\
    \ is\n        not specified as an X509v3 Key Usage)\n   17.  TLS : Bad peer certificate\
    \ (Neither \"SIP Domain\" nor \"Any\n        Extended Key Usage\" specified as\
    \ an X509v3 Extended Key Usage,\n        and X509v3 Extended Key Usage is present)\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   Many thanks to the developers of all the open source\
    \ software used to\n   create these call flows.  This includes the underlying\
    \ crypto and TLS\n   software used from openssl.org, the SIP stack from\n   www.resiprocate.org,\
    \ and the SIP for Instant Messaging and Presence\n   Leveraging Extensions (SIMPLE)\
    \ Instant Messaging and Presence\n   Protocol (IMPP) agent from www.sipimp.org.\
    \  The TLS flow dumps were\n   done with SSLDump from http://www.rtfm.com/ssldump.\
    \  The book \"SSL\n   and TLS\" [EKR-TLS] was a huge help in developing the code\
    \ for these\n   flows.  It's sad there is no second edition.\n   Thanks to Jim\
    \ Schaad, Russ Housley, Eric Rescorla, Dan Wing, Tat\n   Chan, and Lyndsay Campbell,\
    \ who all helped find and correct mistakes\n   in this document.\n   Vijay Gurbani\
    \ and Alan Jeffrey contributed much of the additional\n   test scenario content.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Implementers must never use any of the certificates\
    \ provided in this\n   document in anything but a test environment.  Installing\
    \ the CA root\n   certificates used in this document as a trusted root in operational\n\
    \   software would completely destroy the security of the system while\n   giving\
    \ the user the impression that the system was operating\n   securely.\n   This\
    \ document recommends some things that implementers might test or\n   verify to\
    \ improve the security of their implementations.  It is\n   impossible to make\
    \ a comprehensive list of these, and this document\n   only suggests some of the\
    \ most common mistakes that have been seen at\n   the SIPit interoperability events.\
    \  Just because an implementation\n   does everything this document recommends\
    \ does not make it secure.\n   This document does not show any messages to check\
    \ certificate\n   revocation status (see Sections 3.3 and 6.3 of [RFC5280]) as\
    \ that is\n   not part of the SIP call flow.  The expectation is that revocation\n\
    \   status is checked regularly to protect against the possibility of\n   certificate\
    \ compromise or repudiation.  For more information on how\n   certificate revocation\
    \ status can be checked, see [RFC2560] (Online\n   Certificate Status Protocol)\
    \ and [RFC5055] (Server-Based Certificate\n   Validation Protocol).\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC0791]          Postel, J., \"Internet Protocol\"\
    , STD 5, RFC 791,\n                      September 1981.\n   [RFC2560]       \
    \   Myers, M., Ankney, R., Malpani, A., Galperin, S.,\n                      and\
    \ C. Adams, \"X.509 Internet Public Key\n                      Infrastructure\
    \ Online Certificate Status Protocol\n                      - OCSP\", RFC 2560,\
    \ June 1999.\n   [RFC3261]          Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G.,\n                      Johnston, A., Peterson, J., Sparks, R., Handley,\n\
    \                      M., and E. Schooler, \"SIP: Session Initiation\n      \
    \                Protocol\", RFC 3261, June 2002.\n   [RFC3263]          Rosenberg,\
    \ J. and H. Schulzrinne, \"Session\n                      Initiation Protocol\
    \ (SIP): Locating SIP Servers\",\n                      RFC 3263, June 2002.\n\
    \   [RFC3370]          Housley, R., \"Cryptographic Message Syntax (CMS)\n   \
    \                   Algorithms\", RFC 3370, August 2002.\n   [RFC3428]       \
    \   Campbell, B., Rosenberg, J., Schulzrinne, H.,\n                      Huitema,\
    \ C., and D. Gurle, \"Session Initiation\n                      Protocol (SIP)\
    \ Extension for Instant Messaging\",\n                      RFC 3428, December\
    \ 2002.\n   [RFC3853]          Peterson, J., \"S/MIME Advanced Encryption Standard\n\
    \                      (AES) Requirement for the Session Initiation\n        \
    \              Protocol (SIP)\", RFC 3853, July 2004.\n   [RFC4474]          Peterson,\
    \ J. and C. Jennings, \"Enhancements for\n                      Authenticated\
    \ Identity Management in the Session\n                      Initiation Protocol\
    \ (SIP)\", RFC 4474, August 2006.\n   [RFC5055]          Freeman, T., Housley,\
    \ R., Malpani, A., Cooper, D.,\n                      and W. Polk, \"Server-Based\
    \ Certificate Validation\n                      Protocol (SCVP)\", RFC 5055, December\
    \ 2007.\n   [RFC5246]          Dierks, T. and E. Rescorla, \"The Transport Layer\n\
    \                      Security (TLS) Protocol Version 1.2\", RFC 5246,\n    \
    \                  August 2008.\n   [RFC5280]          Cooper, D., Santesson,\
    \ S., Farrell, S., Boeyen,\n                      S., Housley, R., and W. Polk,\
    \ \"Internet X.509\n                      Public Key Infrastructure Certificate\
    \ and\n                      Certificate Revocation List (CRL) Profile\",\n  \
    \                    RFC 5280, May 2008.\n   [RFC5621]          Camarillo, G.,\
    \ \"Message Body Handling in the\n                      Session Initiation Protocol\
    \ (SIP)\", RFC 5621,\n                      September 2009.\n   [RFC5652]    \
    \      Housley, R., \"Cryptographic Message Syntax (CMS)\",\n                \
    \      STD 70, RFC 5652, September 2009.\n   [RFC5751]          Ramsdell, B. and\
    \ S. Turner, \"Secure/Multipurpose\n                      Internet Mail Extensions\
    \ (S/MIME) Version 3.2\n                      Message Specification\", RFC 5751,\
    \ January 2010.\n   [RFC5922]          Gurbani, V., Lawrence, S., and A. Jeffrey,\
    \ \"Domain\n                      Certificates in the Session Initiation Protocol\n\
    \                      (SIP)\", RFC 5922, June 2010.\n   [RFC5923]          Gurbani,\
    \ V., Mahy, R., and B. Tate, \"Connection\n                      Reuse in the\
    \ Session Initiation Protocol (SIP)\",\n                      RFC 5923, June 2010.\n\
    \   [RFC5924]          Lawrence, S. and V. Gurbani, \"Extended Key Usage\n   \
    \                   (EKU) for Session Initiation Protocol (SIP) X.509\n      \
    \                Certificates\", RFC 5924, June 2010.\n   [X.509]            International\
    \ Telecommunications Union,\n                      \"Information technology -\
    \ Open Systems\n                      Interconnection - The Directory: Public-key\
    \ and\n                      attribute certificate frameworks\",\n           \
    \           ITU-T Recommendation X.509 (2005), ISO/\n                      IEC\
    \ 9594-8:2005.\n   [X.683]            International Telecommunications Union,\n\
    \                      \"Information technology - Abstract Syntax Notation\n \
    \                     One (ASN.1): Parameterization of ASN.1\n               \
    \       specifications\", ITU-T Recommendation X.683\n                      (2002),\
    \ ISO/IEC 8824-4:2002, 2002.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [EKR-TLS]          Rescorla, E., \"SSL and TLS\
    \ - Designing and\n                      Building Secure Systems\", Addison-Wesley,\
    \ ISBN\n                      0-201-61598-3, 2001.\n   [RFC2818]          Rescorla,\
    \ E., \"HTTP Over TLS\", RFC 2818, May 2000.\n   [RFC4134]          Hoffman, P.,\
    \ \"Examples of S/MIME Messages\",\n                      RFC 4134, July 2005.\n\
    \   [RFC4475]          Sparks, R., Hawrylyshen, A., Johnston, A.,\n          \
    \            Rosenberg, J., and H. Schulzrinne, \"Session\n                  \
    \    Initiation Protocol (SIP) Torture Test Messages\",\n                    \
    \  RFC 4475, May 2006.\n   [RFC4514]          Zeilenga, K., \"Lightweight Directory\
    \ Access\n                      Protocol (LDAP): String Representation of\n  \
    \                    Distinguished Names\", RFC 4514, June 2006.\n   [ssldump-manpage]\
    \  Rescorla, E., \"SSLDump manpage\",\n                      <http://www.rtfm.com/ssldump/Ssldump.html>.\n"
- title: Appendix A.  Making Test Certificates
  contents:
  - "Appendix A.  Making Test Certificates\n   These scripts allow you to make certificates\
    \ for test purposes.  The\n   certificates will all share a common CA root so\
    \ that everyone running\n   these scripts can have interoperable certificates.\
    \  WARNING - these\n   certificates are totally insecure and are for test purposes\
    \ only.\n   All the CAs created by this script share the same private key to\n\
    \   facilitate interoperability testing, but this totally breaks the\n   security\
    \ since the private key of the CA is well known.\n   The instructions assume a\
    \ Unix-like environment with openssl\n   installed, but openssl does work in Windows\
    \ too.  OpenSSL version\n   0.9.8j was used to generate the certificates used\
    \ in this document.\n   Make sure you have openssl installed by trying to run\
    \ \"openssl\".  Run\n   the makeCA script found in Appendix A.1; this creates\
    \ a subdirectory\n   called demoCA.  If the makeCA script cannot find where your\
    \ openssl\n   is installed you will have to set an environment variable called\n\
    \   OPENSSLDIR to whatever directory contains the file openssl.cnf.  You\n   can\
    \ find this with a \"locate openssl.cnf\".  You are now ready to make\n   certificates.\n\
    \   To create certificates for use with TLS, run the makeCert script\n   found\
    \ in Appendix A.2 with the fully qualified domain name of the\n   proxy you are\
    \ making the certificate for, e.g., \"makeCert\n   host.example.net domain eku\"\
    .  This will generate a private key and a\n   certificate.  The private key will\
    \ be left in a file named\n   domain_key_example.net.pem in Privacy Enhanced Mail\
    \ (PEM) format.\n   The certificate will be in domain_cert_example.net.pem.  Some\n\
    \   programs expect both the certificate and private key combined\n   together\
    \ in a Public-Key Cryptography Standards (PKCS) #12 format\n   file.  This is\
    \ created by the script and left in a file named\n   example.net.p12.  Some programs\
    \ expect this file to have a .pfx\n   extension instead of .p12 -- just rename\
    \ the file if needed.  A file\n   with a certificate signing request, called example.net.csr,\
    \ is also\n   created and can be used to get the certificate signed by another\
    \ CA.\n   A second argument indicating the number of days for which the\n   certificate\
    \ should be valid can be passed to the makeCert script.  It\n   is possible to\
    \ make an expired certificate using the command\n   \"makeCert host.example.net\
    \ 0\".\n   Anywhere that a password is used to protect a certificate, the\n  \
    \ password is set to the string \"password\".\n   The root certificate for the\
    \ CA is in the file\n   root_cert_fluffyCA.pem.\n   For things that need DER format\
    \ certificates, a certificate can be\n   converted from PEM to DER with \"openssl\
    \ x509 -in cert.pem -inform PEM\n   -out cert.der -outform DER\".\n   Some programs\
    \ expect certificates in PKCS #7 format (with a file\n   extension of .p7c). \
    \ You can convert these from PEM format to PKCS #7\n   with \"openssl crl2pkcs7\
    \ -nocrl -certfile cert.pem -certfile demoCA/\n   cacert.pem -outform DER -out\
    \ cert.p7c\".\n   IE (version 8), Outlook Express (version 6), and Firefox (version\n\
    \   3.5) can import and export .p12 files and .p7c files.  You can\n   convert\
    \ a PKCS #7 certificate to PEM format with \"openssl pkcs7 -in\n   cert.p7c -inform\
    \ DER -outform PEM -out cert.pem\".\n   The private key can be converted to PKCS\
    \ #8 format with \"openssl\n   pkcs8 -in a_key.pem -topk8 -outform DER -out a_key.p8c\"\
    .\n   In general, a TLS client will just need the root certificate of the\n  \
    \ CA.  A TLS server will need its private key and its certificate.\n   These could\
    \ be in two PEM files, a single file with both certificate\n   and private key\
    \ PEM sections, or a single .p12 file.  An S/MIME\n   program will need its private\
    \ key and certificate, the root\n   certificate of the CA, and the certificate\
    \ for every other user it\n   communicates with.\n"
- title: A.1.  makeCA script
  contents:
  - "A.1.  makeCA script\n   #!/bin/sh\n   set -x\n   rm -rf demoCA\n   mkdir demoCA\n\
    \   mkdir demoCA/certs\n   mkdir demoCA/crl\n   mkdir demoCA/newcerts\n   mkdir\
    \ demoCA/private\n   # This is done to generate the exact serial number used for\
    \ the RFC\n   echo \"4902110184015C\" > demoCA/serial\n   touch demoCA/index.txt\n\
    \   # You may need to modify this for where your default file is\n   # you can\
    \ find where yours in by typing \"openssl ca\"\n   for D in /etc/ssl /usr/local/ssl\
    \ /sw/etc/ssl /sw/share/ssl; do\n     CONF=${OPENSSLDIR:=$D}/openssl.cnf\n   \
    \  [ -f ${CONF} ] && break\n   done\n   CONF=${OPENSSLDIR}/openssl.cnf\n   if\
    \ [ ! -f $CONF  ]; then\n       echo \"Can not find file $CONF - set your OPENSSLDIR\
    \ variable\"\n       exit\n   fi\n   cp $CONF openssl.cnf\n   cat >> openssl.cnf\
    \  <<EOF\n   [ sipdomain_cert ]\n   subjectAltName=\\${ENV::ALTNAME}\n   basicConstraints=CA:FALSE\n\
    \   subjectKeyIdentifier=hash\n   authorityKeyIdentifier=keyid,issuer\n   keyUsage\
    \ = nonRepudiation,digitalSignature,keyEncipherment\n   extendedKeyUsage=serverAuth,1.3.6.1.5.5.7.3.20\n\
    \   [ sipdomain_req ]\n   basicConstraints = CA:FALSE\n   subjectAltName=\\${ENV::ALTNAME}\n\
    \   subjectKeyIdentifier=hash\n   [ sipuser_cert ]\n   subjectAltName=\\${ENV::ALTNAME}\n\
    \   basicConstraints=CA:FALSE\n   subjectKeyIdentifier=hash\n   authorityKeyIdentifier=keyid,issuer\n\
    \   keyUsage = nonRepudiation,digitalSignature,keyEncipherment\n   extendedKeyUsage=emailProtection,1.3.6.1.5.5.7.3.20\n\
    \   [ sipuser_req ]\n   basicConstraints = CA:FALSE\n   subjectAltName=\\${ENV::ALTNAME}\n\
    \   subjectKeyIdentifier=hash\n   [ sipdomain_noeku_cert ]\n   subjectAltName=\\\
    ${ENV::ALTNAME}\n   basicConstraints=CA:FALSE\n   subjectKeyIdentifier=hash\n\
    \   authorityKeyIdentifier=keyid,issuer\n   keyUsage = nonRepudiation,digitalSignature,keyEncipherment\n\
    \   [ sipdomain_noeku_req ]\n   basicConstraints = CA:FALSE\n   subjectAltName=\\\
    ${ENV::ALTNAME}\n   subjectKeyIdentifier=hash\n   [ sipuser_noeku_cert ]\n   subjectAltName=\\\
    ${ENV::ALTNAME}\n   basicConstraints=CA:FALSE\n   subjectKeyIdentifier=hash\n\
    \   authorityKeyIdentifier=keyid,issuer\n   keyUsage = nonRepudiation,digitalSignature,keyEncipherment\n\
    \   [ sipuser_noeku_req ]\n   basicConstraints = CA:FALSE\n   subjectAltName=\\\
    ${ENV::ALTNAME}\n   subjectKeyIdentifier=hash\n   EOF\n   cat > demoCA/private/cakey.pem\
    \ <<EOF\n   -----BEGIN ENCRYPTED PRIVATE KEY-----\n   MIIFDjBABgkqhkiG9w0BBQ0wMzAbBgkqhkiG9w0BBQwwDgQIlwtc771DlNUCAggA\n\
    \   MBQGCCqGSIb3DQMHBAhRD3Z1i2TavwSCBMgXoXo0H/dTplHwnqfW7Uh1dr776z7B\n   lsNxlenMA6lYmALF/4E1tqOE2/aEbr8W3wTVjNpew9r5TBsbA1I9/FMMe+USc1ra\n\
    \   5pIdDLx7ynzHvxcUWJ1xbWGeLcEmXGOvzkwW/oOg49Yq1ce1GtlLSV2L7Wi93TUQ\n   Q8i5l0X0xjx7cB7kaHTOTyaN0sxUE3qlQ2sXTbbHWUfIaNpEZUI5ITrDUflfMnxb\n\
    \   RogQGv+5owsM7zwzfyGz3QocM9WaZwKFOEOqBvEfGaaZ9ml+cn1Rz/1Id7tSBlRH\n   3ucN2mGdEVIUvzSACZ9LPuIO7WBGM56enDRsqZji4WfqDHdXa4gkJKqPEJeBnLVA\n\
    \   jxCmLJSyikM25kHDm8LWuOckO/Rk+7999h13Qv1Ynm7yCincorqdlTrAdmq1Z8Tj\n   QPgXioTlx6++6yxiDCV7Mwkydox31K9y/Tf2cZ//dWuf/lfMaaq8HfpSNl4RKqsz\n\
    \   ufL41K5sCzPRIugUdooUQSGPC0JgcskPcifT6zvrI62KLPFVrwG5HT9PdevQvC6O\n   VgglxbEGJ7I4vllzmY62/0LtQKIA6bh8pszvvmHjGo9s+f+p7KJVYygEHNEmRTm+\n\
    \   8M2owk67033sV6IClDOAdRL8siTHmcmM+r1x9VVIppsDrzjqQqYVGYBbjEJW8eQp\n   t7kAjuN48tDD1mS8E6DstPv/6S0AjzAqCbjkuPJ0WU5fD1cY+iTpo9vcunohcj+i\n\
    \   KVXsM34wOsBpMBjFQ+Aww5bsIkEV1liOYLav1F7/BvP2s0gc3puM5W35y1cbKLu2\n   ThJV7mIWoV770aQYpJba0UAk9OzBVEvPNahrDI1NucbEkFrhN2pfnOs7k4UvrjiK\n\
    \   uknKrm3gocDOdstyMZX81Beyj06NhpcJH+bOSvROk/d68aAsapy6qS9hLijNNbcd\n   itQ/fo+1o9MDujT/huj7ZFqdzNM3KA6vxf0kmmVM+GJbYke+cjXk6WB80lF9lYcB\n\
    \   0pWPd+fgwFL252FUoFcjvUWFXkvbR1+IMkv6sNdKcXHHazAE6nl6yPl9bVwCaS1I\n   WNqEfHntblNZbeW+3qH8ov1ZXVCqEmaHkajSAhFJKXCgpSXaIx2FSntzpVFbRpnw\n\
    \   Yd9eml9xwgE3l9aRuvR6p61fd051LzCh7KjvorV1CemPUT6YRBamFNCBoT7cqjhE\n   kqMQfowKkMEY0p2dzMnGzsSPKk10nI53RgPyD/8FT5dPuq073SyjxTKhAbvl+kVl\n\
    \   lrfZ6b7P/UKwLBCT3bLG6uU/Es84euWN+U2JXIADPoCcVeWrUqkf4j368c2Z8Zdd\n   A27X4ZJ+q+YfsFNiOA7vshHi3Am3gBzQhEEGsRdzgkf8qmtlRGhq/823GEexoUfu\n\
    \   8SiOOjoU08HGAkTtPWjV5+0C6Q6RW9SmNMwz7msZHoKTQ8kz2LKXUwb6DBwWcw6/\n   UTUgzVXqhA8HmjsnVe9ftDKL66v9zlp4RVRdDzm4TYUybYh5uigFbjJFLlnJnJho\n\
    \   TcnusHO80Cxgs64khLRzM46Oi+JSEPv7o7zHcfWNOVtNW908EKCubtEDZtnQn9VC\n   0Sky9R/WzunaLlG3LZ3BRUhWpyyvdNxlNq3ie4tcRMlXIEe14UZN0sPCKZY//NEn\n\
    \   BEc=\n   -----END ENCRYPTED PRIVATE KEY-----\n   EOF\n   cat > demoCA/cacert.pem\
    \ <<EOF\n   -----BEGIN CERTIFICATE-----\n   MIIDtTCCAp2gAwIBAgIJAJajhBdO74pMMA0GCSqGSIb3DQEBBQUAMHAxCzAJBgNV\n\
    \   BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhTYW4gSm9zZTEO\n   MAwGA1UECgwFc2lwaXQxKTAnBgNVBAsMIFNpcGl0IFRlc3QgQ2VydGlmaWNhdGUg\n\
    \   QXV0aG9yaXR5MCAXDTExMDEyNzE4MzYwNVoYDzIxMTEwMTAzMTgzNjA1WjBwMQsw\n   CQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTERMA8GA1UEBwwIU2FuIEpv\n\
    \   c2UxDjAMBgNVBAoMBXNpcGl0MSkwJwYDVQQLDCBTaXBpdCBUZXN0IENlcnRpZmlj\n   YXRlIEF1dGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKsf\n\
    \   kWHxHMXNpnsWm7cUeeQwnpjQ7Ae3vXfX0fVbLOLu5rGw8IX6pbzLzM9pLE/8UO+d\n   MSvAWer7ZG8fVac9/XDSVtsUmReScKwm+DRBcNnAA5FqutERj6wSMd65GXCNXad9\n\
    \   ixnMQD+u/94f25SzRndsrq7/PtaEW8LeCyZl0JHHcEvHCkq/x5cE3bpYR8vgKyN2\n   h2XFVTQQqycfHPgwPbCbyqKBcky9YP73If4L2wvb6VsBNtQoFWt569CRGyFZuA6q\n\
    \   v9WxbHA3oz+lfQ6VRvb2WGeDdUI3GAukQTmyL2yALHjspQ++nBD4wAsNc5meDdeX\n   UMvMRTQjSUGFIiStKcMCAwEAAaNQME4wHQYDVR0OBBYEFJVFfl8r6mWYEpEE82PH\n\
    \   aJpYFncnMB8GA1UdIwQYMBaAFJVFfl8r6mWYEpEE82PHaJpYFncnMAwGA1UdEwQF\n   MAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAAZfnq6gmry1uVt+lzPM32OYmJTLDWap\n\
    \   g+iqWCpZoZ5HMaavXD+iJYb43wWSt9tpoWlyh2bFqzWJATcZyXTrCdE/iHskE0LK\n   LftF5sxL+CF48/WX7AmSJKLw5pSNl0oAlAC9JbgXLFJTXcxcSKShHS32UFUTpNOy\n\
    \   ovTxuW1IXlzz3uD8WQmh2RRhZb/YP7m6LnztXCSba8qqX/HBHrCo2oIP+0xxO017\n   OMjjiioZNEQmC+rwRzhGKGUE4gFS3ew95fVTdHd0dW3G2cIKrDu4mFxVUzR0Uqgm\n\
    \   sS8wItCLt/Og3WgHM9Wut4GylFhyTnzGci+9bGn7tReoKo3XLJEGyAw=\n   -----END CERTIFICATE-----\n\
    \   EOF\n   # uncomment the following lines to generate your own key pair\n  \
    \ # openssl req -newkey rsa:2048 -passin pass:password \\\n   #     -passout pass:password\
    \ -set_serial 0x96a384174eef8a4c \\\n   #     -sha1 -x509 -keyout demoCA/private/cakey.pem\
    \ \\\n   #     -out demoCA/cacert.pem -days 36500 -config ${CONF} <<EOF\n   #\
    \ US\n   # California\n   # San Jose\n   # sipit\n   # Sipit Test Certificate\
    \ Authority\n   #\n   #\n   # EOF\n   # either randomly generate a serial number,\
    \ or set it manually\n   # hexdump -n 4 -e '4/1 \"%04u\"' /dev/random > demoCA/serial\n\
    \   echo 96a384174eef8a4d > demoCA/serial\n   openssl crl2pkcs7 -nocrl -certfile\
    \ demoCA/cacert.pem \\\n           -outform DER -out demoCA/cacert.p7c\n   cp\
    \ demoCA/cacert.pem root_cert_fluffyCA.pem\n"
- title: A.2.  makeCert script
  contents:
  - "A.2.  makeCert script\n  #!/bin/sh\n  set -x\n  # Make a symbolic link to this\
    \ file called \"makeUserCert\"\n  # if you wish to use it to make certs for users.\n\
    \  # ExecName=$(basename $0)\n  #\n  # if [ ${ExecName} == \"makeUserCert\" ];\
    \ then\n  #   ExtPrefix=\"sipuser\"\n  # elif [ ${ExecName} == \"makeEkuUserCert\"\
    \ ]; then\n  #   ExtPrefix=\"sipuser_eku\"\n  # elif [ ${ExecName} == \"makeEkuCert\"\
    \ ]; then\n  #   ExtPrefix=\"sipdomain_eku\"\n  # else\n  #   ExtPrefix=\"sipdomain\"\
    \n  # fi\n  if [  $# == 3  ]; then\n    DAYS=36500\n  elif [ $# == 4 ]; then\n\
    \    DAYS=$4\n  else\n    echo \"Usage: makeCert test.example.org user|domain\
    \ eku|noeku [days]\"\n    echo \"       makeCert alice@example.org [days]\"\n\
    \    echo \"days is how long the certificate is valid\"\n    echo \"days set to\
    \ 0 generates an invalid certificate\"\n    exit 0\n  fi\n  ExtPrefix=\"sip\"\
    ${2}\n  if [ $3 == \"noeku\" ]; then\n    ExtPrefix=${ExtPrefix}\"_noeku\"\n \
    \ fi\n  DOMAIN=`echo $1 | perl -ne '{print \"$1\\n\" if (/(\\w+\\..*)$/)}'   `\n\
    \  USER=`echo $1 | perl -ne '{print \"$1\\n\" if (/(\\w+)\\@(\\w+\\..*)$/)}' \
    \  `\n  ADDR=$1\n  echo \"making cert for $DOMAIN ${ADDR}\"\n  if [ $2 == \"user\"\
    \ ]; then\n    CNVALUE=$USER\n  else\n    CNVALUE=$DOMAIN\n  fi\n  rm -f ${ADDR}_*.pem\n\
    \  rm -f ${ADDR}.p12\n  case ${ADDR} in\n  *:*) ALTNAME=\"URI:${ADDR}\" ;;\n \
    \ *@*) ALTNAME=\"URI:sip:${ADDR},URI:im:${ADDR},URI:pres:${ADDR}\" ;;\n  *)  \
    \ ALTNAME=\"DNS:${DOMAIN},URI:sip:${ADDR}\" ;;\n  esac\n  rm -f demoCA/index.txt\n\
    \  touch demoCA/index.txt\n  rm -f demoCA/newcerts/*\n  export ALTNAME\n  openssl\
    \ genrsa  -out ${ADDR}_key.pem 2048\n  openssl req -new  -config openssl.cnf -reqexts\
    \ ${ExtPrefix}_req \\\n          -sha1 -key ${ADDR}_key.pem \\\n          -out\
    \ ${ADDR}.csr -days ${DAYS} <<EOF\n  US\n  California\n  San Jose\n  sipit\n \
    \ ${CNVALUE}\n  EOF\n  if [ $DAYS == 0 ]; then\n  openssl ca -extensions ${ExtPrefix}_cert\
    \ -config openssl.cnf \\\n      -passin pass:password -policy policy_anything\
    \ \\\n      -md sha1 -batch -notext -out ${ADDR}_cert.pem \\\n      -startdate\
    \ 990101000000Z \\\n      -enddate 000101000000Z \\\n       -infiles ${ADDR}.csr\n\
    \  else\n  openssl ca -extensions ${ExtPrefix}_cert -config openssl.cnf \\\n \
    \     -passin pass:password -policy policy_anything \\\n      -md sha1 -days ${DAYS}\
    \ -batch -notext -out ${ADDR}_cert.pem \\\n       -infiles ${ADDR}.csr\n  fi\n\
    \  openssl pkcs12 -passin pass:password \\\n      -passout pass:password -export\
    \ \\\n      -out ${ADDR}.p12 -in ${ADDR}_cert.pem \\\n      -inkey ${ADDR}_key.pem\
    \ -name ${ADDR} -certfile demoCA/cacert.pem\n  openssl x509 -in ${ADDR}_cert.pem\
    \ -noout -text\n  case ${ADDR} in\n  *@*) mv ${ADDR}_key.pem user_key_${ADDR}.pem;\
    \ \\\n       mv ${ADDR}_cert.pem user_cert_${ADDR}.pem ;;\n  *)   mv ${ADDR}_key.pem\
    \ domain_key_${ADDR}.pem; \\\n       mv ${ADDR}_cert.pem domain_cert_${ADDR}.pem\
    \ ;;\n  esac\n"
- title: Appendix B.  Certificates for Testing
  contents:
  - "Appendix B.  Certificates for Testing\n   This section contains various certificates\
    \ used for testing in PEM\n   format.\n"
- title: B.1.  Certificates Using EKU
  contents:
  - "B.1.  Certificates Using EKU\n   These certificates make use of the EKU specification\
    \ described in\n   [RFC5924].\n   Fluffy's user certificate for example.com:\n\
    \   -----BEGIN CERTIFICATE-----\n   MIIEGTCCAwGgAwIBAgIJAJajhBdO74pNMA0GCSqGSIb3DQEBBQUAMHAxCzAJBgNV\n\
    \   BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhTYW4gSm9zZTEO\n   MAwGA1UECgwFc2lwaXQxKTAnBgNVBAsMIFNpcGl0IFRlc3QgQ2VydGlmaWNhdGUg\n\
    \   QXV0aG9yaXR5MCAXDTExMDIwNzE5MzIxN1oYDzIxMTEwMTE0MTkzMjE3WjBWMQsw\n   CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTERMA8GA1UEBxMIU2FuIEpv\n\
    \   c2UxDjAMBgNVBAoTBXNpcGl0MQ8wDQYDVQQDEwZmbHVmZnkwggEiMA0GCSqGSIb3\n   DQEBAQUAA4IBDwAwggEKAoIBAQCjLFkM6bzk7NOe+5kC7LE2OrfTHU3DOrauUL1f\n\
    \   VQh3jH6k6fBoMSiPIzJWGcMil6dt/aciKgG1r2G9X37BFOWYKbQ0TjiKJu4N2tsn\n   uXjWrKwEeDKYwnXnarctszzj65el74tZQlAXe/6nga83p+fjH7CN0HIvbBRCxgFo\n\
    \   4Y/9Vk19zxbcqgVhCwrKyuxR7FNuPSsAgP41GwYKYROIC0TzzP0rDrSiC6CXhBQu\n   7ivjL8EanoaaeGqiTFeT5wEm01YNvbAv+NrHPAHcyy0xjGzGXLRj6LKiQBG/rfht\n\
    \   EgGXHUf4ahWL+yeWc0RGNNckHM9WjdS+1pRb8KZn493PtPLVAgMBAAGjgc0wgcow\n   UQYDVR0RBEowSIYWc2lwOmZsdWZmeUBleGFtcGxlLmNvbYYVaW06Zmx1ZmZ5QGV4\n\
    \   YW1wbGUuY29thhdwcmVzOmZsdWZmeUBleGFtcGxlLmNvbTAJBgNVHRMEAjAAMB0G\n   A1UdDgQWBBSFlwm401U3JIrc3uORcuQiz5iHUjAfBgNVHSMEGDAWgBSVRX5fK+pl\n\
    \   mBKRBPNjx2iaWBZ3JzALBgNVHQ8EBAMCBeAwHQYDVR0lBBYwFAYIKwYBBQUHAwQG\n   CCsGAQUFBwMUMA0GCSqGSIb3DQEBBQUAA4IBAQCoqY/YiguI7f9Pv+XNj557uOby\n\
    \   LKrjI1uacV79IKPd2dPB8ujwvnfbM8yKe0+RK43W9xTDjeBg0zRQvL5nIs31dHv0\n   mmiiUiuBL0bTCZ8lwyDoENXvOHvRF9Tx11RnVvETzy/8i4P8FOcBglmDzLGN8Mfa\n\
    \   TrHczFTPbDtHR1mH2Rbsr6/hEhMjHgrb9bX/XasVDuMlkQAOkNvYBxGQgQE6SKiq\n   nrBi0zbwDLcvpxeSUjYpFArWZYZnc3RuqjzuRzgeyG4GgYUcLvC2BH1sONuBnLgH\n\
    \   4we+9S8JaGMEa4cONrmho/vIMAygY41tqwr4RLB4GRo4fvpqodRLS3V1v28J\n   -----END\
    \ CERTIFICATE-----\n   Fluffy's private key for user certificate for example.com:\n\
    \   -----BEGIN RSA PRIVATE KEY-----\n   MIIEpQIBAAKCAQEAoyxZDOm85OzTnvuZAuyxNjq30x1Nwzq2rlC9X1UId4x+pOnw\n\
    \   aDEojyMyVhnDIpenbf2nIioBta9hvV9+wRTlmCm0NE44iibuDdrbJ7l41qysBHgy\n   mMJ152q3LbM84+uXpe+LWUJQF3v+p4GvN6fn4x+wjdByL2wUQsYBaOGP/VZNfc8W\n\
    \   3KoFYQsKysrsUexTbj0rAID+NRsGCmETiAtE88z9Kw60ogugl4QULu4r4y/BGp6G\n   mnhqokxXk+cBJtNWDb2wL/jaxzwB3MstMYxsxly0Y+iyokARv634bRIBlx1H+GoV\n\
    \   i/snlnNERjTXJBzPVo3UvtaUW/CmZ+Pdz7Ty1QIDAQABAoIBAH+bSvjiQir1WnnW\n   YM78s4mpWeDr5chrvjmMQsyu/zQe11u4551T9FgcOl1DQGtpFjLaTz5Ug4nGYjVq\n\
    \   3QG6ieL5mkfddDH2R+zl3sWuMmYQG2ZTaZ41VWdo+V/v8Ap+T9YhA2UGiwQSoA/3\n   R0PLN3lTaws8nE+hwiaGGsweujBvcaIJu4RQrGHRHaeEplU+tfjcHHElfzUAmKyM\n\
    \   cMgF8IpdUcA1pyHe3Pyc0oGnLyEVnv291xGWQfWT7nqf7K0QDLA6+TvbG3fGEYIw\n   WK4DMraUbZ66Jlnj1XfADoxWOTsygV+KYhZcbwjBWAUSOSduAtfwa6b72OnWd28J\n\
    \   8KYvrXECgYEA1eCJZZSavxhlfxqsWC/WdQ8S3SimI62KSLrN3bI0RO/60KiU2ap3\n   16ZhNLq8t3DjpkWiZrukixs2odsU7k3z6q+qm++P0TUwL7z3Bri0FimqUeVSYgAf\n\
    \   ZmFgGz7wLAM29zhv0hTZjGrrwMlNSyJ2tjyqpiO1XqkbdBpPBxKPrdcCgYEAw09f\n   4M2QKQBFzjecPeQpwJqnh8cuoHS+2CNLYGjlmjd/zAUgVF2+WPA1R1DmjAqJ9iwh\n\
    \   15Yx3CbknpKbfhfilmHkcGyA+fjQaisq/NzN3Ya0FP9Waht0FoBsAHt9X5xFwXH6\n   YBKUrqoPF5DAy427EL1nsIRa+LtoPaTdqpphFzMCgYEAlgSOO0s2FA43uyTpeF3t\n\
    \   rmQpVilaB7KFSaiGGBgUY7p0koF9DwRsVT4l9sd48a7kb09ur2K08sHe2z8BenoB\n   Oj+HiyNJHHSTXRjNqNBLuTP2fMU+uPDfFX/92n6WFjkXB+d1P8VSJxUkUjCg36/H\n\
    \   1uHMzQZFBKXXVOPTROG3GDcCgYEAoPFmq8QZOIA+BbnzqVi8QzfuN8geFyE9JrSm\n   55JpKdT0HbZXts3tDjMbZGI5KUuB9nbViGb/PVBbcoSTV6vtD0kpyq7O9a5gaCyc\n\
    \   ZvS5PARFn0vt9NAcsHIxDZC1drU7EjaPQN3u4aPHff7NsK9haGD78gyPPoqIUsvp\n   0i0XNtsCgYEAxIUikI+5wXIrnC1FUt0gt6+4T0zc7qEO0EpQRtktZ/1saNXEhA6N\n\
    \   EUqWLJMOnClhp72V5IvXsKgjxU8VpgIZeHIIt5jZb8XMmBiSQxiVTf6rp3s8PqlM\n   EtXfh7TdJzKuRP7d0g2uG4boJMFf590nqNjrxj9VeSxEWUrSK3YG/h8=\n\
    \   -----END RSA PRIVATE KEY-----\n   Kumiko's user certificate for example.net:\n\
    \   -----BEGIN CERTIFICATE-----\n   MIIEGTCCAwGgAwIBAgIJAJajhBdO74pOMA0GCSqGSIb3DQEBBQUAMHAxCzAJBgNV\n\
    \   BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhTYW4gSm9zZTEO\n   MAwGA1UECgwFc2lwaXQxKTAnBgNVBAsMIFNpcGl0IFRlc3QgQ2VydGlmaWNhdGUg\n\
    \   QXV0aG9yaXR5MCAXDTExMDIwNzE5MzIxN1oYDzIxMTEwMTE0MTkzMjE3WjBWMQsw\n   CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTERMA8GA1UEBxMIU2FuIEpv\n\
    \   c2UxDjAMBgNVBAoTBXNpcGl0MQ8wDQYDVQQDEwZrdW1pa28wggEiMA0GCSqGSIb3\n   DQEBAQUAA4IBDwAwggEKAoIBAQDL5odVdA3gFf/MuGIqbMY8Kl7g7kUfexWkpXbT\n\
    \   ptxlxf2D8hzUX8/PUn2XXcTbP019DqA+MkMiX4NNGpDZyeoIrcquKUXK7UQlRoKy\n   Q6Va11DijHTqdPTWFIrRhbRUhPjj0WvG1AFPYRRG/IZfRQcH8Aw1w8XSp614m1mY\n\
    \   9XwL5LuHNimAgjADHMrSk1obmHws0thU9nV0t1UG1SA1lA32JZX81bqKDg3Tq1Ho\n   fsKU3GwoBZG507lVG5bcV2ByA5HnCFpFeDTDYE23197USLhqRtIqrxxr64SFo9Dn\n\
    \   P0mYH6e3lRveAZhdKIbCHgGaKqIr7+SZDnLdCyKDrFSPC/lbAgMBAAGjgc0wgcow\n   UQYDVR0RBEowSIYWc2lwOmt1bWlrb0BleGFtcGxlLm5ldIYVaW06a3VtaWtvQGV4\n\
    \   YW1wbGUubmV0hhdwcmVzOmt1bWlrb0BleGFtcGxlLm5ldDAJBgNVHRMEAjAAMB0G\n   A1UdDgQWBBQ02bNX/rnbbYoEy6wU7oyst63WbDAfBgNVHSMEGDAWgBSVRX5fK+pl\n\
    \   mBKRBPNjx2iaWBZ3JzALBgNVHQ8EBAMCBeAwHQYDVR0lBBYwFAYIKwYBBQUHAwQG\n   CCsGAQUFBwMUMA0GCSqGSIb3DQEBBQUAA4IBAQCTN2SNTLUcvgtVnBi3RBRtD0+p\n\
    \   aiFPtWQ+YWbyCG/+NetesegCwi7xBOgSK+GxUWpTVuDW5smyTTZyvrMQhpkckcyO\n   KvuUVz0/yK67oSume1vo75KY8BvgfeZXZG4PjqqelJ3czB0XLfeb6KFmtoiHQ/R7\n\
    \   4i/O9+MhB3Zoeg5bm5f2g9ljYwRbD1Uav/aH9WeGEX992d9XJ/bpGGPrAdgmV3jo\n   KDFKh8ys1yfmM3xVdU0qPtos2nlzGNaqoceeFZoYaMf8uTzoaan6KZkQDTiMDRpt\n\
    \   YKxyS721re/840FwDvt67w+GIfFf7ISrAlkHwroYt0NMnLv610rka8qnVvaQ\n   -----END\
    \ CERTIFICATE-----\n   Kumiko's private key for user certificate for example.net:\n\
    \   -----BEGIN RSA PRIVATE KEY-----\n   MIIEpAIBAAKCAQEAy+aHVXQN4BX/zLhiKmzGPCpe4O5FH3sVpKV206bcZcX9g/Ic\n\
    \   1F/Pz1J9l13E2z9NfQ6gPjJDIl+DTRqQ2cnqCK3KrilFyu1EJUaCskOlWtdQ4ox0\n   6nT01hSK0YW0VIT449FrxtQBT2EURvyGX0UHB/AMNcPF0qeteJtZmPV8C+S7hzYp\n\
    \   gIIwAxzK0pNaG5h8LNLYVPZ1dLdVBtUgNZQN9iWV/NW6ig4N06tR6H7ClNxsKAWR\n   udO5VRuW3FdgcgOR5whaRXg0w2BNt9fe1Ei4akbSKq8ca+uEhaPQ5z9JmB+nt5Ub\n\
    \   3gGYXSiGwh4BmiqiK+/kmQ5y3Qsig6xUjwv5WwIDAQABAoIBAHCXmrGgRS0xWLBW\n   PLbKm+iLSRsR14+bqwbg663SHTAB1Yzvu+W2Bo2oMnvMJrEe0o407l2J6bJoZZvF\n\
    \   CKmKqrYiKaJkXgrBW/jtZ6xCWGPCNAL1pnX1IWG5tDIgj8SALOO4N7hyR0rrA4Rz\n   W0vuVQSYFFX4BhvdxZesyRwCqn3x0pPSff95Ad+vuJd5CYuFZCuyGkszQ3fi+Nia\n\
    \   Gqs01EuyolEv72rsw2E5+wtx3qXB8Z4HXr+Yq9NbE8lp2CWd1Uh1qIHl8kwWmnIG\n   V3oLKiIowV+M6Zx/uzwAMF0Rdn5kET+b5DOlIksUAAa8LZsf95rOvkLgw7aZaj5e\n\
    \   sXhAdGECgYEA8930YqU2+AcEkjC5hygw1M/X5k/IcvZp0a8/in2hJW7iZgGh0AFE\n   jjxuoIVXbxSf9cZ+M6g76Svww9ecmovLArqbhFaLfbZCsrLeEAhQtGcu3wv7o6px\n\
    \   N0EbbF5FmOK7qaQ1Sgqj0NF5zP2JsrxGNoRmgFFwVdcpP/3Jp/IlZEsCgYEA1guI\n   /7I8h9og1dmTPzMpvpnANdRF/iuMX9AE4LNRp09Hjx0B7Vuat1ABtx09/ZN1hLhZ\n\
    \   BTZ5R2R2RjbzSHXZ3FdoMgSx9Q3qa+xuPel4RcppHNjdYkPDhPLnOUwQBqFL6kyU\n   nTEF+k6VIZvNsmGbB6wpHU1cjDAZUx71p6W49TECgYAMHpa7pExUDT076rH9tpCe\n\
    \   sume544lsHtX0WbOAipVCuqzeRdKmBWJIBW7YoUS3yqH82JoPM8lamqfwQJmZ9Yh\n   /5YlAIwUJk+wQ9VnZJJmNM6OhTDvVFQmE9VCEHlS/Mmox6FiWZ8EjLSJ7HvAZzzy\n\
    \   Dqhtbh6wFW5WYM15zD3xewKBgQCRmIkY/QGFm0+Ih5ZMgB3eI7GGLB1sNe0nY1Ve\n   Dzv0pc3UQHQGI7CLDuYLy91V9o8St17+V76JXIHDYy97U4bdBau/kkgGm++gd9PJ\n\
    \   U11Xg8aaM73rUJLXhW7ZH68rA16jQnI4tpcNW5S/pr51n0UYI/hXkT7psPIZA08w\n   OV8lkQKBgQDaGzCYC/6WumGJUerVCzZd/H6+E3ntZmtz273c8+wV89oRtZzUoJY4\n\
    \   bVNrYFs9iKFxLtNGRECEU2VzDXHUAguqe05rbzPudAZ4wSsrNchUyw8LkIXHDckt\n   pVLs0vhRK2gW/W2I+p2exSPQPt3Uy8tT6IsB9ZbNg/H4D160heHkuQ==\n\
    \   -----END RSA PRIVATE KEY-----\n   Domain certificate for example.com:\n  \
    \ -----BEGIN CERTIFICATE-----\n   MIID9DCCAtygAwIBAgIJAJajhBdO74pPMA0GCSqGSIb3DQEBBQUAMHAxCzAJBgNV\n\
    \   BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhTYW4gSm9zZTEO\n   MAwGA1UECgwFc2lwaXQxKTAnBgNVBAsMIFNpcGl0IFRlc3QgQ2VydGlmaWNhdGUg\n\
    \   QXV0aG9yaXR5MCAXDTExMDIwNzE5MzIxN1oYDzIxMTEwMTE0MTkzMjE3WjBbMQsw\n   CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTERMA8GA1UEBxMIU2FuIEpv\n\
    \   c2UxDjAMBgNVBAoTBXNpcGl0MRQwEgYDVQQDEwtleGFtcGxlLmNvbTCCASIwDQYJ\n   KoZIhvcNAQEBBQADggEPADCCAQoCggEBAN10BgIQwucEH7yMtiTnm5SjSDeFnm2D\n\
    \   EoRQGo5IsfqGjKeAub5S7KbKY0eErfZ0hYIWfk42QAp0LCCpag5qfzXPcHFjfelD\n   Z4FM6rUet0yjNQh7IQ0qcwdjnY11vx/UjuZnYHX36gp6bJCvkkXgYgWaihCY3HxU\n\
    \   i+RhlTsE/BBQ74BFul6El3bBICXBkh2JCvdVYmT66GmiYkxn0wjZYbU9FlS2t0SN\n   WSuQ1On7x32HWMMSrDN4AFC6BwWzuQEaY1Vs4XrsoweuOwKDoWngw9wtYemy47Nx\n\
    \   yKbP2vs+mcflcbnJF9TtvKBHVAmMbm1TmizJaMZv8T2RGiRDd32RaUsCAwEAAaOB\n   ozCBoDAnBgNVHREEIDAeggtleGFtcGxlLmNvbYYPc2lwOmV4YW1wbGUuY29tMAkG\n\
    \   A1UdEwQCMAAwHQYDVR0OBBYEFMwGWVuLXtYN8gVNG2hUHvz5QxkXMB8GA1UdIwQY\n   MBaAFJVFfl8r6mWYEpEE82PHaJpYFncnMAsGA1UdDwQEAwIF4DAdBgNVHSUEFjAU\n\
    \   BggrBgEFBQcDAQYIKwYBBQUHAxQwDQYJKoZIhvcNAQEFBQADggEBAGqa0dsAS5CG\n   sFPqbzAxiR6bCRS9b7kCqm9Y7jADuKH9s0Fy/7MNy3anF8ZXOAYT5fPkMBdN95e1\n\
    \   83Tpgfj0VaMN9YI4w5hDUh+EzRq0o0WfPeIx/cuire1gffrSqkkvQamAAbvttnXJ\n   l2l/DJFg8cRaNuhcrOGo55pV5eDNAfTek/Q4bMFx0v3NG10l65B7MUHnNw7lwAFI\n\
    \   kfc03cYfdOY0NObNkw8/zpStkdnicrGfHdOlfV7ipFbFsXFNEApdplbmVx9IpVx1\n   Z+qrNT72tvrB84rBgHEyGGwztfoWWhbhoWwZZ/VFaGRvsjHc41oastSHiZb9h7o4\n\
    \   TgoZBwNLm7E=\n   -----END CERTIFICATE-----\n   Private key for domain certificate\
    \ for example.com:\n   -----BEGIN RSA PRIVATE KEY-----\n   MIIEpQIBAAKCAQEA3XQGAhDC5wQfvIy2JOeblKNIN4WebYMShFAajkix+oaMp4C5\n\
    \   vlLspspjR4St9nSFghZ+TjZACnQsIKlqDmp/Nc9wcWN96UNngUzqtR63TKM1CHsh\n   DSpzB2OdjXW/H9SO5mdgdffqCnpskK+SReBiBZqKEJjcfFSL5GGVOwT8EFDvgEW6\n\
    \   XoSXdsEgJcGSHYkK91ViZProaaJiTGfTCNlhtT0WVLa3RI1ZK5DU6fvHfYdYwxKs\n   M3gAULoHBbO5ARpjVWzheuyjB647AoOhaeDD3C1h6bLjs3HIps/a+z6Zx+VxuckX\n\
    \   1O28oEdUCYxubVOaLMloxm/xPZEaJEN3fZFpSwIDAQABAoIBAB9s231ni4Dk4OwM\n   u7w48acCFLlsSLMZqoMEKwCN6FO4zDTo23LaqaJxje0UMuuKVXfEYWAP6r6RBcIM\n\
    \   yHQLQMoOCdLNX4y+d+2tUJErLq+9aUUu093ebDxcMntkfh6yNyUS/mk/KQMbpFRT\n   1dn8oWxSJc19I6yxArkB7/9UEcDut6vzdbz+agXpHZH4Tje5OWZQXkHzsYobM8Y8\n\
    \   c2XwudP1zdQtvOrrOeirexxpOQf4CBQnBxoGmbae9Wf27Kw2bBm5+blZFgdqNxoh\n   6Q3rJ9EDyWkrVMAq9a67a59wST1ymyC0c6FmfToCMGlgoMPHcEdvuNYPWd2322oK\n\
    \   ZdfsawECgYEA+AewMiTdhAE+9TId2qilLQV+y8bdTHQ9rSqW9SF+q5ShOpZa79ER\n   asuDuqxU+TiewS0ircrkIyzQmCc1fnfBJh5y6GukpUk8HdLLkA29fV3ZJe+Y4ZbL\n\
    \   b4TEy/RxEECQREgtnQiaw08yOlT1dobNwxzVsi3mrhtOpfbPBERZUSsCgYEA5JG2\n   aGRCkyzASGAnZmqqXCP/pImU+tJb2OCgQ6/3gsxi/l91LwtRhFgx/ptYCgZWlpbz\n\
    \   +mpnDqexKtowldbjorrUADw84zG4u9d+uWOCXEpCVIEu4DZsRURdy3OzpK1vJaUm\n   NLgBiDj8JkUFrXTi4Rzx1Xysf6ndWAxDPDdI+GECgYEAoyFrYY+dohSvs9UijY4e\n\
    \   FV5n5t8E7iQF7L72SoOdLHy1DjOV2+VF71erbDusJ751q9hj1qp7Iid3ips/M87P\n   2qJsMTGbOJrST0s1V6mx16LCD5Fmm/jyFIbeaMZ9FpNgT4ipd38RSyPrhTIbv7kp\n\
    \   3Ao7AtXtwtVzBPUvcz8A/8ECgYEAw2ps2F13qdql3nsO1Ho3gqVoaGUUUUlOK2MI\n   wjYM1/AkZrR4PKthm1PIEpT/tTpsBz2yBBO6XoYya5+10DWz0yoGHNljeR7GgRqh\n\
    \   hqC0EHGQuizkRd9hu+rSgiI+oXmCQF4tBv+Wl7+YnKOAUidP3gTgIZUA6fjxe9io\n   FzBxG6ECgYEAyAHvSeqqwmdotdpWgR3Fk1CmtH7ZPnF2rsuRBaBoYnWtU619ote+\n\
    \   +Bmd4fBUB9tQOzUC9desRtoK3+wlJKHEPjm/0FxtQQi9ogHEn4e6P9jOwXJNkSsa\n   GjGUfzQ3Vm2baeNMg7sH8C5mQ9nskDuCzdlVAB2bMp23oPl6cvPIb0E=\n\
    \   -----END RSA PRIVATE KEY-----\n   Domain certificate for example.net:\n  \
    \ -----BEGIN CERTIFICATE-----\n   MIID9DCCAtygAwIBAgIJAJajhBdO74pQMA0GCSqGSIb3DQEBBQUAMHAxCzAJBgNV\n\
    \   BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhTYW4gSm9zZTEO\n   MAwGA1UECgwFc2lwaXQxKTAnBgNVBAsMIFNpcGl0IFRlc3QgQ2VydGlmaWNhdGUg\n\
    \   QXV0aG9yaXR5MCAXDTExMDIwNzE5MzIxOFoYDzIxMTEwMTE0MTkzMjE4WjBbMQsw\n   CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTERMA8GA1UEBxMIU2FuIEpv\n\
    \   c2UxDjAMBgNVBAoTBXNpcGl0MRQwEgYDVQQDEwtleGFtcGxlLm5ldDCCASIwDQYJ\n   KoZIhvcNAQEBBQADggEPADCCAQoCggEBAOwsdgPVSPMweLWsBDHUSXJS6Vk6pu6K\n\
    \   sVg8IWMf1g0TWTPc5jUAQlWlLNtmN4gcSzq5z1ecvf3rLMomJPZaWbektTTg1KZl\n   2wQgyP+vx/Hf1BByj3s2DE/KZoLnQjFQawHHMc+kCtSa6dCFTmD9nA5cYDVxNmKG\n\
    \   Kz/+5HYxe6ByI6NZGNlSB8ADPULcFg6UchO06JvrGFt1n9tAtMf5C31+YYGpqXBl\n   qZOV8Wo0Gp6Vlnd4LrvDZkwjpQ/o7EuFbiK34Gvh3cuh9EkMbk+IPgVv7ohjWPDl\n\
    \   6WygTkE2VXHDhhdN4MXPKyenXX35sB52fNytN+2qM8bo4QPfTZlGrx0CAwEAAaOB\n   ozCBoDAnBgNVHREEIDAeggtleGFtcGxlLm5ldIYPc2lwOmV4YW1wbGUubmV0MAkG\n\
    \   A1UdEwQCMAAwHQYDVR0OBBYEFNiNYjKOu6f046JHy28GDRVMeR7sMB8GA1UdIwQY\n   MBaAFJVFfl8r6mWYEpEE82PHaJpYFncnMAsGA1UdDwQEAwIF4DAdBgNVHSUEFjAU\n\
    \   BggrBgEFBQcDAQYIKwYBBQUHAxQwDQYJKoZIhvcNAQEFBQADggEBAHUzR2H2IWrQ\n   ls3iqNlG7815mOjm9mgQX6WP2ILwBOTOqtPJ9uE2XZU9qw6d9vdcbAgLpp4Em4T7\n\
    \   Whcs0zVTrgKpWjDlho/boRS1gP2Qu9I86zJzf2R3mhTHUsbpxIwMCcHQg/fdIIeP\n   5Ar8R5DZXx/Q9zdQLE+cjMSjxo7q7uOV8DRkgMpYtp7BURg5ZXhnkAhEHxa3/SbU\n\
    \   YGfy3PzRoAMQmRZieAXArsIxEfkaC4Dtox/D4XLvY7njBFv8H6wqlvQyDsKXWlUH\n   8dS9i/3wFEpQtymUUeXwk8gzf2ytT6hgrX70s6BLy/IeRU+wLJ3k5YZpopQZjDm1\n\
    \   fNQG/O8TJlQ=\n   -----END CERTIFICATE-----\n   Private key for domain certificate\
    \ for example.net:\n   -----BEGIN RSA PRIVATE KEY-----\n   MIIEogIBAAKCAQEA7Cx2A9VI8zB4tawEMdRJclLpWTqm7oqxWDwhYx/WDRNZM9zm\n\
    \   NQBCVaUs22Y3iBxLOrnPV5y9/essyiYk9lpZt6S1NODUpmXbBCDI/6/H8d/UEHKP\n   ezYMT8pmgudCMVBrAccxz6QK1Jrp0IVOYP2cDlxgNXE2YoYrP/7kdjF7oHIjo1kY\n\
    \   2VIHwAM9QtwWDpRyE7Tom+sYW3Wf20C0x/kLfX5hgampcGWpk5XxajQanpWWd3gu\n   u8NmTCOlD+jsS4VuIrfga+Hdy6H0SQxuT4g+BW/uiGNY8OXpbKBOQTZVccOGF03g\n\
    \   xc8rJ6ddffmwHnZ83K037aozxujhA99NmUavHQIDAQABAoIBABfBYR2BlpTfi0S6\n   yLE6aSjWriILhD76NFxrr/AIg79M8uwEjCNIo2N5+ckXvv4x2l9N0U0+tt2Tii3L\n\
    \   KGyfKecO6isncjxKgn0nzw/o3nO1z97Xpxb9mL9t3GHOYRoUvK6xGpGILo60BlCz\n   F+8pk0jegc7eVFoUpMULHm/FCmpY30N5cvCHcAE/ncW49bZmH3gQ+cmr5UcKKDUY\n\
    \   baJyLd8Q1f+uSmtrfYZzRT5c+4wmrBUjv3w9poMJuEo4slRaDnyeKJPSNR/6/LJk\n   tqnqgNif9cj9wqF6hWA23dDmmU/kSRtn1KOz5XmV9Jbo4Fu64Fvn/m/hj5Og4CP9\n\
    \   hZUWIQECgYEA+nV2pzspCfS7jSebVnvjChvqJ0nJAilSqCmrSQIT5PRmO+GQs6UT\n   PVN4GE0Ms8TTJyvxVkpoagQ36VLw/Wr0jUm+Z+dv1TIlFWTas8RNmdZHMv0LvfEe\n\
    \   Qu2fTI68l2d/L9GBMUCYa/sucX5E9q+3LC+Qo9jw8ehWjQZsWYER4dsCgYEA8WYX\n   AqDdKjHRqu2h248gZsuogiZq05iuzXhk2VTQoiM92mu8m1Htak+eov3/3wojqxuw\n\
    \   TAQbf/t8EfQ7LIGjaKqAua7mgG/aNB6MGGwdpBAPUZDL+DuKfbDbzTOL/IuaW0Fp\n   40RC0Up5nTU9wzIKB7a6n5S5R0KXxiGUIphfcGcCgYA6IYdPmziUOfxJ79ZrBUgV\n\
    \   8ZKwWbzQxpyLsVgzEsthSaRs45a9S2QiyLvIECIRm25S2i0ilRSU/rOncPvEJc3q\n   +SG7Zgkb146p34WvUbGdMhHGcNsH0+3tJM/jagG1tmzbwWmV7+MwtNT7vI3vH6uJ\n\
    \   EuUkUlbiHsXv53zAbWekHwKBgBy5HwfLCEXbA62o9NdhImPY28YQuClRQ4tjReyu\n   MNz6AIQayahZiTxbGO8f9fAeDrxvYPzKiFMkI1EnlFrpWf48O3DcpMSninklIVpO\n\
    \   kwBQgOIdrods3j+yaZTzCzcTjVxKXkUSfDjW+b2A9kZhj9v3HCGc2qbl/5Utraio\n   JMMFAoGAHb+k+C4e8WrW+jXbbG/DgAkSokK5vZwZLHeWBig9bEi626xN/oFEQVXp\n\
    \   zqwyNo6zQaofmS6anT6P2M7NClSGJxh27eBTiTLp1NCXlGTWAQEtXmYtvnAZNzXC\n   5Ur0wvS5bLx0nbhJwN8ZBwzJhYup0kU3pn99GcF+vkj5Eg7Zftg=\n\
    \   -----END RSA PRIVATE KEY-----\n"
- title: B.2.  Certificates NOT Using EKU
  contents:
  - "B.2.  Certificates NOT Using EKU\n   These certificates do not make use of the\
    \ EKU specification described\n   in [RFC5924].  Most existing certificates fall\
    \ in this category.\n   Fluffy's user certificate for example.com:\n   -----BEGIN\
    \ CERTIFICATE-----\n   MIID+jCCAuKgAwIBAgIJAJajhBdO74pRMA0GCSqGSIb3DQEBBQUAMHAxCzAJBgNV\n\
    \   BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhTYW4gSm9zZTEO\n   MAwGA1UECgwFc2lwaXQxKTAnBgNVBAsMIFNpcGl0IFRlc3QgQ2VydGlmaWNhdGUg\n\
    \   QXV0aG9yaXR5MCAXDTExMDIwNzE5MzIxOFoYDzIxMTEwMTE0MTkzMjE4WjBWMQsw\n   CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTERMA8GA1UEBxMIU2FuIEpv\n\
    \   c2UxDjAMBgNVBAoTBXNpcGl0MQ8wDQYDVQQDEwZmbHVmZnkwggEiMA0GCSqGSIb3\n   DQEBAQUAA4IBDwAwggEKAoIBAQC6VyOIP6UANXy766KHiYDxyOpYEFboLJv6SEtw\n\
    \   UWQoZS3hQurFidOu4gkCspblzaMoty7lnUexbFxUKdbJOWGMcB2hrezJ+6rwJPK/\n   bF5YDijVtVqMRd5lv/Ni5yzteHfrMszWnz3t+ojgak4XTjBJmP2RO0T67GUpEbFV\n\
    \   sDeYtWi+G1ebDAR6bf6Jdba2K6DnmkxT5Rr6oYJHIApYbubk28asBQN6EGBBgPEO\n   RReJYrjoJR/rBDDe1bxK+ONdFXPlwjI/TRPMpvUYraWgTjJ18tXISgF1htaa/Y1K\n\
    \   YP79Yun2Nl/3UQcPIc/C6CXBs3yAUK3qQO1G6C5pXH9KMMlNAgMBAAGjga4wgasw\n   UQYDVR0RBEowSIYWc2lwOmZsdWZmeUBleGFtcGxlLmNvbYYVaW06Zmx1ZmZ5QGV4\n\
    \   YW1wbGUuY29thhdwcmVzOmZsdWZmeUBleGFtcGxlLmNvbTAJBgNVHRMEAjAAMB0G\n   A1UdDgQWBBT7CTXlQ5GKWvxGZNY24mmmVuEnRDAfBgNVHSMEGDAWgBSVRX5fK+pl\n\
    \   mBKRBPNjx2iaWBZ3JzALBgNVHQ8EBAMCBeAwDQYJKoZIhvcNAQEFBQADggEBAKL9\n   wUWGRhCQdhjzY4bx0R5Kwz+NHvsb8rjlPqfdcbNujBCw+rD+/uux0G3HwW+Mraj5\n\
    \   U2tUehwz87k6SgdqADzL/CP2mjzCJo5uDhi+tzjeg6ZklTSZYQrL3FSv/AgcUfFI\n   9HuCGkix/htaoEMy2zNZnZOjdtFME9w7wb3GxxqWTUzl9TToloCXYmLeQo/jwuad\n\
    \   40ybun1P5CWkO5Md2Y5zuNfCsRRz5lLYtAVfANtLBfeFV+S87AwrrdeITT+iyB7H\n   Jj+t24U4IMC8MttcHBlPPBuRVc2kmhNEQuTzelCsldXgY2+kn8ItnLdv1mvLpXA2\n\
    \   2Y41CPLCSj9AlqqZL9I=\n   -----END CERTIFICATE-----\n   Fluffy's private key\
    \ for user certificate for example.com:\n   -----BEGIN RSA PRIVATE KEY-----\n\
    \   MIIEogIBAAKCAQEAulcjiD+lADV8u+uih4mA8cjqWBBW6Cyb+khLcFFkKGUt4ULq\n   xYnTruIJArKW5c2jKLcu5Z1HsWxcVCnWyTlhjHAdoa3syfuq8CTyv2xeWA4o1bVa\n\
    \   jEXeZb/zYucs7Xh36zLM1p897fqI4GpOF04wSZj9kTtE+uxlKRGxVbA3mLVovhtX\n   mwwEem3+iXW2tiug55pMU+Ua+qGCRyAKWG7m5NvGrAUDehBgQYDxDkUXiWK46CUf\n\
    \   6wQw3tW8SvjjXRVz5cIyP00TzKb1GK2loE4ydfLVyEoBdYbWmv2NSmD+/WLp9jZf\n   91EHDyHPwuglwbN8gFCt6kDtRuguaVx/SjDJTQIDAQABAoIBABtIBLi+8K5eJlvw\n\
    \   /MOxOwKrMrwf8ElftppnGTxhfjN31MbFIFA5hJd3GnCdqwAMIlYks6YEZ+mu/rmH\n   wp2FXCXOiFgSebd8tCMilbO27v0fXZUkTxR4aj4lY0HYrLg7yfrSXjER8WQ1KPMK\n\
    \   PVKmLOWpk34+2jOOhqUDpR3xhcJClQ81fC1hKe2JoixNDoPdfM3azTq8QUPLQD2I\n   mjww1IH1677G5o/6qMloOM0Feqv/3cUWiRmvPv4eyGHdNtuFXKFpB4DQQMQL7TD8\n\
    \   FoOHBymHIOzSSF+gYgBFOb0YNgu2CqZrfED9cf0rRotrbXf6tM+akclxfHhkfKaa\n   JPZosbUCgYEA4MaetKsa7azhEYMc4TK0xhhV5Hi6lj1xR/6h++uYF0OIOBjM9yU3\n\
    \   5n6vLpyghNbW2bK08OIWPO0F4syvyKYR2elmUDraH29DKAtRLEkU9K82RG4AmXmk\n   G6ZsWOfx6Jf35OnAKVj/7aN9jc4K1v6EFyQGYEXbp4I0fhFfbJBAe28CgYEA1Dmx\n\
    \   iKJD+jWW9ypHk51YJ3r+a5qPPNVmjGKQQje3Y6+rSlxmW0hMwXoCBOYRwhHBRA//\n   SxH93PZ8rECjNkhxp6Ao87X2Gcol5U6kH+rwfd/3+SsHqPrugaDIwNlgkcu8VRrP\n\
    \   8uP2CgJoDBi5UY2UR97GVK98x8k2Sf6kDT32mQMCgYB/KH3R8VY7jOiKcqTc1UWl\n   J1E3/gB4S+wQ8YELth0FVCP0sDsLuZdlItfRw7OfUraa01k/SHeSIfiJdIghN6mz\n\
    \   oDFMQ+7vh47zUWurZPCg95n4nk5ihIkNR1nV9elJTudjLcWS3pFyC2JU3XIObE+n\n   k66zufFoUuWFSCi2juibqwKBgCT6RHe1JjkDe2FniX8r7D88y/W9wXVtDWgqiE4x\n\
    \   XQ/OfP8A6IjBKTaQ5qcp2zBAXbdZPjc7VEta21A8FvQPXVZCrsAAFXha4413zVsO\n   WYblLlTI7ZXA2yvU8wW/Gnds00zU1iTRGX6W+sAY0rll/M8k/tOknA5HfeEYsEbq\n\
    \   Y/w3AoGASjoC9Fjy2aBvH8SQaimn/Rx3hOFR4myOGWtHxrXmezoO2YdcMO1d8rlz\n   A/sQRvVofHRwyoaIkZkALprEGyxEqCdMmEs1h9xYAcxfW23RfqC39DYb9RTrRkwa\n\
    \   ArJmcEdRESOsIYhhXGfE1QMGiwj1UXMWeYcLtqQKWiLLDTYYfQE=\n   -----END RSA PRIVATE\
    \ KEY-----\n   Kumiko's user certificate for example.net:\n   -----BEGIN CERTIFICATE-----\n\
    \   MIID+jCCAuKgAwIBAgIJAJajhBdO74pSMA0GCSqGSIb3DQEBBQUAMHAxCzAJBgNV\n   BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhTYW4gSm9zZTEO\n\
    \   MAwGA1UECgwFc2lwaXQxKTAnBgNVBAsMIFNpcGl0IFRlc3QgQ2VydGlmaWNhdGUg\n   QXV0aG9yaXR5MCAXDTExMDIwNzE5MzIxOFoYDzIxMTEwMTE0MTkzMjE4WjBWMQsw\n\
    \   CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTERMA8GA1UEBxMIU2FuIEpv\n   c2UxDjAMBgNVBAoTBXNpcGl0MQ8wDQYDVQQDEwZrdW1pa28wggEiMA0GCSqGSIb3\n\
    \   DQEBAQUAA4IBDwAwggEKAoIBAQDE/QVN7nxDDu5ov6b0cmHIFH93KhNbTEyCisir\n   i4OeUBiCv9dgRgPBXffrIIVQdIlCoDeLDusHdsC9EfFWvg+pRlKVEDgwccO0F5AV\n\
    \   bq3MK2Njma5I0lwpIa0RXYQ0K//oX/+jZeakhFty/R9yer0KaXWdLRd6KtncISui\n   z9rFhlTB9lHg6vNJUN9+Xonbcs7siXbj3qZdhb7oipI4PoQlXVetyu+SzAVe6MsU\n\
    \   5lwLmpQpIzQdSsJyxaAsW+AsyxunhWWiPZ888UM4vXjacZuj8GvJ8w2XjgJilQvV\n   s8ojWMKnAGLaR7grTBmGQ90e6+cg7hWuoGBlQA0R0h8zWQz5AgMBAAGjga4wgasw\n\
    \   UQYDVR0RBEowSIYWc2lwOmt1bWlrb0BleGFtcGxlLm5ldIYVaW06a3VtaWtvQGV4\n   YW1wbGUubmV0hhdwcmVzOmt1bWlrb0BleGFtcGxlLm5ldDAJBgNVHRMEAjAAMB0G\n\
    \   A1UdDgQWBBR6WwH61Ul7BIWeiKM35fMAiE9xazAfBgNVHSMEGDAWgBSVRX5fK+pl\n   mBKRBPNjx2iaWBZ3JzALBgNVHQ8EBAMCBeAwDQYJKoZIhvcNAQEFBQADggEBAKE8\n\
    \   y9YyoZlkFw4WxPalK087sSEveKBfzh4TuYQf5YcSIPw0coZGj/gNxn1juiYhE93G\n   F+Si/hJM0M6cc7SLB5Spq06Tt3PyPBIOZOWk9koh92kDI3axSr6II9Plsvp+Xsrl\n\
    \   bz5Zy8njy/YZrk/qOaHqQ5J6nPNp5qwF+ns2t+5Zl88Lli5nkBgOXFOuE0RIkcdF\n   CUFRUj026GxAILR6wUThOzfq55Azwl5Y9Y9QmEjFhkbYLls00HxcJdnt+6Sdm/vN\n\
    \   MeMJZdTzp1x+8pfPhJgHoyz7nkAxhgzC9RT33ra33BNkMQ6esRlQONJ+ZRsRLhHP\n   O7+kvXvmj9AAsA291wY=\n\
    \   -----END CERTIFICATE-----\n   Kumiko's private key for user certificate for\
    \ example.net:\n   -----BEGIN RSA PRIVATE KEY-----\n   MIIEpAIBAAKCAQEAxP0FTe58Qw7uaL+m9HJhyBR/dyoTW0xMgorIq4uDnlAYgr/X\n\
    \   YEYDwV336yCFUHSJQqA3iw7rB3bAvRHxVr4PqUZSlRA4MHHDtBeQFW6tzCtjY5mu\n   SNJcKSGtEV2ENCv/6F//o2XmpIRbcv0fcnq9Cml1nS0XeirZ3CEros/axYZUwfZR\n\
    \   4OrzSVDffl6J23LO7Il2496mXYW+6IqSOD6EJV1XrcrvkswFXujLFOZcC5qUKSM0\n   HUrCcsWgLFvgLMsbp4Vloj2fPPFDOL142nGbo/BryfMNl44CYpUL1bPKI1jCpwBi\n\
    \   2ke4K0wZhkPdHuvnIO4VrqBgZUANEdIfM1kM+QIDAQABAoIBADuLR+kwp3sVrlcX\n   Z34IfSofmBALNeKpA4+KJ/JCr7xQ9bfACXhecZAnuWLnZ6TUNRFgoKl2DvEookYE\n\
    \   gHD57n36dcf9KR7rpH5xiOoRlJNcoiRfNeFpRNZiCZBwNiAXFLnHGtznVnpwT7xI\n   axMNqsrU6epi0O/quAPkOu5x6e0+j+j3ZauI4EfD1w2R6moBMUtATauZEEyLuC9A\n\
    \   6bFz2AFDchPVLwSjNMu0tAJc8Fss8xKls9HUXGS22eUfHxWfkCGwChuW60obGmas\n   E7GS7h4g9QvvQ4hGSVy9/MmQ88GmT0LynOyzFBCpuwjOQTHwsD674ldMSL4kXYVK\n\
    \   jcnTAkkCgYEA4bjN2ILis3uWTjvTNnrmWn1QoZBZDhg1LuNs5o1XtOJ7CdkckUvs\n   nqqQYOzNk/9N8vUs12ds3csXHypuuGrJwAVf648RSPDUUQ2XOoPSL9NeuZt5V1fT\n\
    \   1VyVWanKCBZ5sztISNVPt7Pu8DtGLHch4S/7M+gEUQB1Ogz7fyJHvFsCgYEA32mE\n   6lN67aHkqMLa06ZI9JIk/3SsFIPpjwZ4tk+sQCqEzawPvkT7qF2+U8lVt0XXKJZL\n\
    \   aexsopsULCGS86TEAPoYtjjk91p6ZZj8mgRZLU55g+gRdTpAFhXMgIctU7U6cDIw\n   SPa6UxJp9XCa/Gf6YLfas9VBhc/8OC7I4ygjLDsCgYEAgAG7yuM/CSY3MRrARw8f\n\
    \   f4W9qkIgHtwfnP2gjobtjEk8GXOkvcle4QQ9aJoiY6HPZM8hpO6kUIuSCzyXGcKF\n   s33Yzc+Or9zTqzuX3blQA4tNFtlS0POf0En28KhXSIrmbXxbG+LMmJNUF6yluSW+\n\
    \   cuQxA1i6ye0Gjes63Phl0i0CgYEAuEcILGQpTGMyAYWgC93n5Vu6ir+IxO89sgyL\n   ew1irhakLiWTYsTxsyGHwQKb4i0IWOEHWVp7DPDPhcs3tCIezhN8WKm7KtAFj1HO\n\
    \   YZfemsFU99lutPwUKmNWqFlXqOkeR7cOHtDsRWM15Q45uKJnYmmkSptHjYFNsGXe\n   q4fK40sCgYBoAYtsLfMlqt7s3htx4hZSMFbLP/iMGW2DMMAzDW+Xxsvw86ibrcWY\n\
    \   8c3hbohuJBpyAzba4QoR2G+gtRmodLca+tQFMrObETHFglNCY+WoHRSNRImbCS8w\n   dsszPgHWf1nrxBLBiDFlHZwSqbZtLyBjPlHJ+fTiPNo6UTx8aDQ4Pw==\n\
    \   -----END RSA PRIVATE KEY-----\n   Domain certificate for example.com:\n  \
    \ -----BEGIN CERTIFICATE-----\n   MIID1TCCAr2gAwIBAgIJAJajhBdO74pTMA0GCSqGSIb3DQEBBQUAMHAxCzAJBgNV\n\
    \   BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhTYW4gSm9zZTEO\n   MAwGA1UECgwFc2lwaXQxKTAnBgNVBAsMIFNpcGl0IFRlc3QgQ2VydGlmaWNhdGUg\n\
    \   QXV0aG9yaXR5MCAXDTExMDIwNzE5MzIxOVoYDzIxMTEwMTE0MTkzMjE5WjBbMQsw\n   CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTERMA8GA1UEBxMIU2FuIEpv\n\
    \   c2UxDjAMBgNVBAoTBXNpcGl0MRQwEgYDVQQDEwtleGFtcGxlLmNvbTCCASIwDQYJ\n   KoZIhvcNAQEBBQADggEPADCCAQoCggEBAKEVuYyZlaqfqks9u9yWQRp9WfI+VsQg\n\
    \   GpJH3vAfastElCdxlBV7+R2CaQ/GnXDnE0lAC5SiKRcvPHq5OLx1VnDADMWmcXBv\n   wK5n1zN+7MUCy/MISMr7E2Nd+py8Ft3XhjWDIuUljAh4HDO4fxS/BFy8zozADxvP\n\
    \   OfpE40EABF5aj7e+xjtkErdkMybAcSYyo53IHP3wDPxmMzCsOw/fi8bfy9j1GiUD\n   uz01F9qT/Opz9K1snxgT1IK6GRlktG4JawSiohW1QbARfj9//hR7ZgeB0gO6LLGX\n\
    \   cGXdl87JdA4ZHMZNinN4Cv8ctZYSQZ3dbt1pRRbGtq7elPskiinDuUkCAwEAAaOB\n   hDCBgTAnBgNVHREEIDAeggtleGFtcGxlLmNvbYYPc2lwOmV4YW1wbGUuY29tMAkG\n\
    \   A1UdEwQCMAAwHQYDVR0OBBYEFFNu6jHPsItA+vy/Jqv81MW7wLJpMB8GA1UdIwQY\n   MBaAFJVFfl8r6mWYEpEE82PHaJpYFncnMAsGA1UdDwQEAwIF4DANBgkqhkiG9w0B\n\
    \   AQUFAAOCAQEANH+wX56VJd0vVB9+Mef1xItWrSQUyNYZZCBq+y/5vIoOp6Chaupn\n   xjTjWf50zg6CK8yKBWq8pGlG45GTUx+uCx+nVIbHpyTT5+YDDUzlIhhAUzIOOB33\n\
    \   Fd/XI/1PK5p5ftuJIYXU0rGuaoH8ud/p2nhIf9mwicUHxViTX3PUwlFC7eMbevBo\n   8/dMYnHb2i40ug6hsiYggsmQDbhHLVLo/yqkpvgzPLSSlkXS4sv2oIoJ/ISuSjhP\n\
    \   QkQ7mh7h01ct/LOa53qWfbCVogQDhMEqPTVdPm+JzTrMlWeZdrk4KbnXGp64Jtpu\n   xTVI4GcVAGWUT0cmpspDmHbPOKm5kcltkg==\n\
    \   -----END CERTIFICATE-----\n   Private key for domain certificate for example.com:\n\
    \   -----BEGIN RSA PRIVATE KEY-----\n   MIIEpAIBAAKCAQEAoRW5jJmVqp+qSz273JZBGn1Z8j5WxCAakkfe8B9qy0SUJ3GU\n\
    \   FXv5HYJpD8adcOcTSUALlKIpFy88erk4vHVWcMAMxaZxcG/ArmfXM37sxQLL8whI\n   yvsTY136nLwW3deGNYMi5SWMCHgcM7h/FL8EXLzOjMAPG885+kTjQQAEXlqPt77G\n\
    \   O2QSt2QzJsBxJjKjncgc/fAM/GYzMKw7D9+Lxt/L2PUaJQO7PTUX2pP86nP0rWyf\n   GBPUgroZGWS0bglrBKKiFbVBsBF+P3/+FHtmB4HSA7ossZdwZd2Xzsl0Dhkcxk2K\n\
    \   c3gK/xy1lhJBnd1u3WlFFsa2rt6U+ySKKcO5SQIDAQABAoIBABI9gIZAOedZLxJY\n   Cja/ON4EBbRdhLuumvOnecIc/J3JxTD2Nnt8T0gdJUJpDhjjwZZQzz7kYdzDN4j6\n\
    \   Akeszb30sT2MTFob/WiCT6cAH1VrrKZ3cK6zYY2l7aPj1H8IUaUrlT73UnT/DMp6\n   gMFbo+XQZ18evFc8zubc+BK7KsN4Nb6/zMhw+PXEiyg2EGDN1Fo4TMhxPD4wBIMU\n\
    \   8oLlE8A6GKimxAk3gMuIiS6Ruau2HpGkjkkHkAx/yzU1s8BCMoLDJjyyH19PRISr\n   n0VFfe0gM0aZpdZ/94ynFPdMnBXTq8BabT09eiycuLKlL0g/ERmj6jIImGSYRWED\n\
    \   GzlzX0UCgYEA0FDUek2uLhyltXwlzhDTldyuItiYZq/MeXaq2eA96zhJlD6aX+55\n   PQIxEEfhgTNf4e4cKjXQSD7aixy7jp/kFGowFRlB4pwbLDuhlniYSxa8Kv0OpJM4\n\
    \   DTAGue4QFZId5Z43KH755Ub7tjrCEIdQnij44DA3gPnjqXk973pdyVcCgYEAxfUx\n   /zMXgTp7HxW+QHZD7xXEs4Fp1xjzL5BaHoJnM7WbmkWvUvcMaEE/i9RqpyGlXRiN\n\
    \   jX6KBZ9UVgh/B0/AcYMa3DImTa0+Uie9kN7jTi5pzvIUAdFh+RyQ4tULWr5cgrzv\n   PjGG9tXMthuIbILSumVEwvC+P6Ksi1r4xp1ezl8CgYEArF51sk2clqM1qpnzXjMm\n\
    \   IJbdsA+w6ycD9m1uqaGXGo8UswmqCz70KrspheM0gQfVisjPnU2x7lWz1/AKcdVz\n   kEDdUFf54FxzT4J4Dl3zBg7l3FxQRXVbp+3ZYvfNb0vcWSc1VNjcRg8aMIsmES8m\n\
    \   UfhtFnRPOPWMn6qmyQVjnTkCgYB/3zlinkBKq9ooZEU3Iq4TXL5pLemOloFQcjCk\n   kJvVnTRcXTM5pngPSEaiLp6OQ3+sOVYG1nyV0SwLPwW/VVb8fDH3lzWC66vcKeuc\n\
    \   Dz5JnFWg5mLiIbzly/wTaochIOJlWWI5jIigHc9Uu0hOv9sbqJrYSea6+Hv4sNUO\n   h01chQKBgQCKLEH7vWQX8fkw+yKnmvAFoZ5H3IHUQw/WYsoCOVnWoY+vowcuuTTt\n\
    \   cbW1VkrtEjJPuYeEPa5NI2kmsNUZGrKCpx/3uq2JfMVopJzJN9biFM4ulcKqf9ie\n   hiVIFVVmxq+dVmXBgXCknhYK1Mnt9b3BK6mDqerQjK1TKryqAJ2QpQ==\n\
    \   -----END RSA PRIVATE KEY-----\n   Domain certificate for example.net:\n  \
    \ -----BEGIN CERTIFICATE-----\n   MIID1TCCAr2gAwIBAgIJAJajhBdO74pUMA0GCSqGSIb3DQEBBQUAMHAxCzAJBgNV\n\
    \   BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhTYW4gSm9zZTEO\n   MAwGA1UECgwFc2lwaXQxKTAnBgNVBAsMIFNpcGl0IFRlc3QgQ2VydGlmaWNhdGUg\n\
    \   QXV0aG9yaXR5MCAXDTExMDIwNzE5MzIxOVoYDzIxMTEwMTE0MTkzMjE5WjBbMQsw\n   CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTERMA8GA1UEBxMIU2FuIEpv\n\
    \   c2UxDjAMBgNVBAoTBXNpcGl0MRQwEgYDVQQDEwtleGFtcGxlLm5ldDCCASIwDQYJ\n   KoZIhvcNAQEBBQADggEPADCCAQoCggEBAKoWx8g1KbnGX2YEOXrbod2pbR0fpkYW\n\
    \   V7O/tIWHddl+ACLlqqNPKSmIqwAFbZ2uf7S95OkXhkgRJGw3BugftUJS7zDhqVqi\n   dgPLMUPrdzpFazeh/AwBjc0wNBz/6tkUXrm7y/FwwzaCoKw+8Qm4Ibn2E3bNqWlm\n\
    \   iyKOXnYt4LGmy6J5e64hfQ3Vqe0ze5cfLKcpBbjF/TF75utbnH25zE0C/o1b+x1f\n   dwyDjsH0NN+A1ZFrI2NdleVAuH6F2vx4ctwZUzUJXyXezFmw5SRzhtWkb0iHO0ER\n\
    \   Ne7hCHLCv2Z6/GfIuHirCsGtNKSQIC6k74MyD7D75nltnLVgJ7Oxt28CAwEAAaOB\n   hDCBgTAnBgNVHREEIDAeggtleGFtcGxlLm5ldIYPc2lwOmV4YW1wbGUubmV0MAkG\n\
    \   A1UdEwQCMAAwHQYDVR0OBBYEFC1TKpLjuKa/dPumVbeFXEW4UR6EMB8GA1UdIwQY\n   MBaAFJVFfl8r6mWYEpEE82PHaJpYFncnMAsGA1UdDwQEAwIF4DANBgkqhkiG9w0B\n\
    \   AQUFAAOCAQEAJry8LukecUv4DUs5u/s6IymyqDLpeNvm94yrIIk/eRW72Jtr9rf5\n   6zF0Pd/+NzDXRYPe99HQgF3EKYndKIfnRUStJzIqiba2UszypDVRTQ6W9cH9e/1q\n\
    \   FdCjjeoVkRvnGo91S8DkgWM4boNRUgZtYwP+1I8hR+0717tp0f4fKjYX+NxPe30r\n   WzbLYXFDEiPndEgcxHc84Eeupit7VBQm7jxtF+XbaVGiLPGKCiYqdVS08h2ZakRK\n\
    \   8T3xL8Ecs4/rQn7PNPyEfS52R8hC70r66aAxZqLbKNpth/SZ3/hdeAyJ/NnFMW1J\n   uq3kB5YAJSwMYAUXaQhB1BvxKzXqstzJHQ==\n\
    \   -----END CERTIFICATE-----\n   Private key for domain certificate for example.net:\n\
    \   -----BEGIN RSA PRIVATE KEY-----\n   MIIEowIBAAKCAQEAqhbHyDUpucZfZgQ5etuh3altHR+mRhZXs7+0hYd12X4AIuWq\n\
    \   o08pKYirAAVtna5/tL3k6ReGSBEkbDcG6B+1QlLvMOGpWqJ2A8sxQ+t3OkVrN6H8\n   DAGNzTA0HP/q2RReubvL8XDDNoKgrD7xCbghufYTds2paWaLIo5edi3gsabLonl7\n\
    \   riF9DdWp7TN7lx8spykFuMX9MXvm61ucfbnMTQL+jVv7HV93DIOOwfQ034DVkWsj\n   Y12V5UC4foXa/Hhy3BlTNQlfJd7MWbDlJHOG1aRvSIc7QRE17uEIcsK/Znr8Z8i4\n\
    \   eKsKwa00pJAgLqTvgzIPsPvmeW2ctWAns7G3bwIDAQABAoIBAHIjpV+B5YVITL59\n   +UCr4JyKVLGlioQf/CygafjtZTVVa6v/aRn8Rkgb8XyrJ9sXvZVBlTqiUbdM4Z9I\n\
    \   8faVSKLAWsj3thkfSojTMzU77x+IdCG6LxSzekAGqAIJ7sRL+iEzl/Fm1WlgEYhl\n   GIWILgHH01n3O0eCy72dwmAV+2Hazn8eBggkWxMp0fblRC9pVh0FCo+jy1lHasjL\n\
    \   oOBkH51lbmZ4PUuUY072j2665gPm7i0nr25igef842JkbqAV8rAoNlQ26Y7tYLEw\n   6QyLv0odeb0rHZ8IEzahWAdmIPGCIUcFM7RmyInOatGA0dVEU3uYnkUQQVOi/JTx\n\
    \   46CCMbECgYEA4c1Dv/IVz9pdW1o/0MaJ94zfeg7Pgn5DRXnNMjCsSxVHSMINwlUl\n   BcYozs77vWbIuXiXO2xQe9mGA2ss3+vNxB0eu6EBQ/fK16cQQQH52nXdrV1sqnkN\n\
    \   5B5elFKcZKPfNVWrg0BC6csDndTcHp9STIKsxWkesLzC3Vz5UXZMsocCgYEAwNYV\n   +SsCIQGLT8ZZfKyE2nHqRUFknKc/tWQJop5gnE4ws3Lql3SNyCUQr/sDYelxQDE3\n\
    \   6COm197JcZ7jggDq7grigIxMznRxLMeG7bb7FfwPE/SKV0H5uagEB7ktFl8xIJKt\n   yOCK1ulillQjToSs4uetHLRXKCDSEpRiSw7wRdkCgYEAkDKBXYa/nykYDUqpDi57\n\
    \   1PbFkDD9G5x+YVPTUoX6wUgpabFjEANHzVQqo0dTRDTrYmY8Tdpx22WiS3SaB7WS\n   hfcCtVewczM++lDZ9GnKoVQ76IaM6qC72j36sEXBUhPEa072ZK8ZDCx1dsmEeJnN\n\
    \   +MZKhxcGXl9tIehJ31foyukCgYB9AUs1PwAeTVX13OrduyhUQ0xOoNmMA491Euh8\n   FpciPD2t1mzkyZWvjPeIXPwQWLglmMJZJeNeRPnpQcrR165zqXKzSj/wBePn12BM\n\
    \   cTXLRp6vnPKhJg+wno4eQ5hKzGKYbv1hHs5iCuDx+pD4sWExpmW+Gdn2FXCYwsAF\n   UCXJ4QKBgAKSrm8Y5xQhd8RAMg9JZLGUpPnmTKNU98f3fUFnX7jZEZETasnn18vd\n\
    \   65x04h58cohJJkNxqeL6k3lc3Mw0pzZrvsIha3ZMEoJPCgwBa8zLzrR13YQin6yf\n   +bAmfTDmhigpORB36ODY4B1kcwxKzQ0n3XAtlrL7NRV5wHr2ejkY\n\
    \   -----END RSA PRIVATE KEY-----\n"
- title: B.3.  Certificate Chaining with a Non-Root CA
  contents:
  - "B.3.  Certificate Chaining with a Non-Root CA\n   Following is a certificate\
    \ for a non-root CA in example.net.  The\n   certificate was signed by the root\
    \ CA shown in Section 2.1.  As\n   indicated in Sections 4.2.1.9 and 4.2.1.3 [RFC5280],\
    \ \"cA\" is set in\n   Basic Constraints, and \"keyCertSign\" is set in Key Usage.\
    \  This\n   identifies the certificate holder as a signing authority.\n   Version:\
    \ 3 (0x2)\n   Serial Number:\n       96:a3:84:17:4e:ef:8a:52\n   Signature Algorithm:\
    \ sha1WithRSAEncryption\n   Issuer: C=US, ST=California, L=San Jose, O=sipit,\n\
    \            OU=Sipit Test Certificate Authority\n   Validity\n       Not Before:\
    \ Feb  7 20:21:13 2011 GMT\n       Not After : Jan 14 20:21:13 2111 GMT\n   Subject:\
    \ C=US, ST=California, L=San Jose, O=sipit,\n            OU=Test CA for example.net,\
    \ CN=example.net\n   Subject Public Key Info:\n       Public Key Algorithm: rsaEncryption\n\
    \       RSA Public Key: (2048 bit)\n           Modulus (2048 bit):\n         \
    \      00:d4:46:65:51:f8:84:1c:b5:93:47:a5:15:14:06:\n               ec:dc:2a:77:93:11:5e:75:14:d2:88:54:bd:16:50:\n\
    \               dd:41:3f:7e:2a:e4:26:d5:a3:33:b0:5e:37:1d:e5:\n              \
    \ 96:37:1c:1c:69:80:a4:ef:fd:22:78:d7:ce:d3:c3:\n               de:96:fb:87:30:88:bc:06:14:80:5d:f3:ab:d7:64:\n\
    \               3e:07:31:dc:97:c5:d6:19:26:bc:7d:0b:f8:de:5e:\n              \
    \ f9:0f:dc:9a:45:0f:28:8d:dd:fa:15:56:d5:35:17:\n               28:80:d2:fc:1f:d6:95:95:42:0e:2c:47:38:53:ad:\n\
    \               fd:0e:24:fd:a3:43:33:83:52:65:54:da:48:d8:dc:\n              \
    \ 86:42:d5:26:ac:1d:52:54:08:52:e5:3f:4a:76:95:\n               77:8d:c6:f2:33:f0:18:87:c8:fc:5b:54:5d:dd:65:\n\
    \               f1:5c:f5:c8:f4:36:54:8a:b6:7b:6f:f8:55:f8:d8:\n              \
    \ d8:df:a9:7b:40:45:4c:92:0f:aa:b2:2c:a1:a8:64:\n               d5:99:22:1e:28:78:a0:d8:e5:51:64:3f:03:14:a9:\n\
    \               12:47:61:84:d6:b0:69:1a:6b:a3:6e:d8:ca:ce:43:\n              \
    \ 50:ad:57:96:2b:87:15:d9:c2:11:03:b0:82:d4:f0:\n               80:bf:dd:44:f4:f6:39:0a:2b:e3:4d:d3:f5:e7:aa:\n\
    \               34:e5\n           Exponent: 65537 (0x10001)\n   X509v3 extensions:\n\
    \       X509v3 Basic Constraints:\n           CA:TRUE\n       X509v3 Subject Key\
    \ Identifier:\n           72:70:CF:66:1E:23:A5:38:FC:6F:40:8F:86:8A:AF:E0:B9:6F:E9:C3\n\
    \       X509v3 Authority Key Identifier:\n           95:45:7E:5F:2B:EA:65:98:12:91:04:F3:63:C7:68:9A:58:16:77:27\n\
    \       X509v3 Key Usage:\n           Certificate Sign\n       Signature Algorithm:\
    \ sha1WithRSAEncryption\n   70:73:c0:65:9c:2f:09:39:39:d6:a4:5b:95:e7:7b:43:34:b5:\n\
    \   b9:b2:5d:76:eb:ef:87:e0:25:b6:68:ab:ee:f8:f7:85:c4:21:\n   47:bb:6c:68:62:ff:f8:84:1e:44:5a:30:4e:ce:97:91:cc:3d:\n\
    \   43:4a:8b:b7:25:26:08:63:c6:71:4a:c1:94:35:81:66:de:23:\n   9d:e3:37:de:31:80:ed:58:b7:07:a7:ea:87:d3:cc:da:1b:62:\n\
    \   c9:82:c2:17:e6:2d:20:e4:b2:69:14:cb:05:43:34:6f:b5:2c:\n   60:d8:44:43:f9:e6:e9:3d:7c:54:a2:b9:d9:1e:7d:67:bb:3f:\n\
    \   32:31:0d:c1:88:78:a8:67:39:f5:d2:3e:08:f7:38:84:a6:8f:\n   c2:3e:00:ce:5f:b4:c8:da:a1:b5:2f:c2:89:60:a4:3a:2b:be:\n\
    \   98:e0:44:34:af:ec:7f:73:26:f1:94:5b:39:09:b9:9f:93:c2:\n   9d:7a:96:2f:82:66:c8:4d:f6:db:87:00:8e:bc:2a:b9:51:73:\n\
    \   6c:cc:ff:e5:31:25:b1:4a:d0:9a:a9:c3:65:35:21:89:76:3d:\n   39:f8:84:42:a6:03:0e:b5:c9:2f:5d:18:bc:9d:b9:82:f6:83:\n\
    \   dd:2b:29:6c:8d:2c:8c:47:d4:7d:be:de:32:13:85:92:32:bc:\n   61:62:6b:e5\n \
    \  Robert's certificate was signed by the non-root CA in example.net:\n   Version:\
    \ 3 (0x2)\n   Serial Number:\n       96:a3:84:17:4e:ef:8a:53\n   Signature Algorithm:\
    \ sha1WithRSAEncryption\n   Issuer: C=US, ST=California, L=San Jose, O=sipit,\n\
    \            OU=Test CA for example.net,\n            CN=example.net\n   Validity\n\
    \       Not Before: Feb  7 20:21:13 2011 GMT\n       Not After : Jan 14 20:21:13\
    \ 2111 GMT\n   Subject: C=US, ST=California, L=San Jose, O=sipit, CN=robert\n\
    \   Subject Public Key Info:\n       Public Key Algorithm: rsaEncryption\n   \
    \    RSA Public Key: (2048 bit)\n           Modulus (2048 bit):\n            \
    \   00:d3:dc:14:69:6b:71:09:2c:0b:0f:9d:95:08:c1:\n               64:20:66:ef:9f:9c:30:06:30:39:eb:14:16:da:19:\n\
    \               cc:41:4d:b1:cf:f8:53:5b:a5:0d:76:ec:97:ba:16:\n              \
    \ 10:9f:ed:57:b5:fb:6d:4b:9f:8f:d0:9f:0e:15:a7:\n               3e:88:c4:e4:ef:35:d1:63:91:20:68:18:f4:8e:3b:\n\
    \               b4:0f:03:3e:a0:00:d6:c3:26:e7:57:8e:21:92:a3:\n              \
    \ 7a:2d:21:44:48:db:01:b9:54:e8:dc:d6:e3:d1:b3:\n               f2:4b:26:0f:3f:d4:99:63:e4:7e:14:0a:b2:73:1c:\n\
    \               5f:3b:41:36:e9:9a:70:be:f7:4f:08:6b:4a:db:44:\n              \
    \ 02:e8:bb:50:66:2c:98:94:45:9e:7e:01:0e:9d:c3:\n               a9:03:b7:28:15:28:c3:cd:a2:ad:ab:07:f6:ff:69:\n\
    \               f4:ec:ba:7f:4b:bd:9b:28:8c:0d:87:e2:66:d1:24:\n              \
    \ 34:e5:77:be:89:f1:c9:76:4c:37:34:3a:bc:d9:9c:\n               36:f5:28:60:01:29:5c:f4:1e:7a:15:19:34:81:1c:\n\
    \               cf:1a:06:5c:0f:f9:81:67:dc:50:09:e2:a8:d7:9d:\n              \
    \ 9f:35:6e:ff:a6:a8:80:74:6c:f8:a1:0a:f3:bb:2b:\n               b6:51:8c:21:bc:06:72:59:d0:95:42:d3:02:2c:ce:\n\
    \               f9:23\n           Exponent: 65537 (0x10001)\n   X509v3 extensions:\n\
    \       X509v3 Subject Alternative Name:\n           URI:sip:robert@example.net,\
    \ URI:im:robert@example.net,\n              URI:pres:robert@example.net\n    \
    \   X509v3 Basic Constraints:\n           CA:FALSE\n       X509v3 Subject Key\
    \ Identifier:\n           A6:42:BD:62:0D:6B:BF:EE:67:D4:C7:BC:09:3F:0B:3A:12:AB:19:CE\n\
    \       X509v3 Authority Key Identifier:\n           72:70:CF:66:1E:23:A5:38:FC:6F:40:8F:86:8A:AF:E0:B9:6F:E9:C3\n\
    \       X509v3 Key Usage:\n           Digital Signature, Non Repudiation, Key\
    \ Encipherment\n       X509v3 Extended Key Usage:\n           E-mail Protection,\
    \ 1.3.6.1.5.5.7.3.20\n       Signature Algorithm: sha1WithRSAEncryption\n   25:99:ea:1a:1e:96:6d:4e:b1:9c:5a:43:77:ea:3a:a7:a1:b7:\n\
    \   22:db:b9:d4:9a:1e:17:f7:13:2e:b2:ca:80:dd:c9:a5:db:61:\n   41:c6:8b:65:ae:0e:fc:9a:46:77:16:e0:e2:3d:1d:20:3c:e5:\n\
    \   d5:e0:b8:03:41:4f:e7:69:bf:e0:4c:dd:cc:c4:51:b1:da:2f:\n   ad:58:e1:ed:c6:5b:04:ea:1e:af:9a:89:cd:be:60:3c:9a:30:\n\
    \   51:7f:99:5a:6b:5c:8f:5a:d4:b8:ce:b5:8b:31:74:70:b3:cc:\n   5c:04:90:d8:8d:b6:75:55:fb:c1:d8:e8:db:cf:3d:80:e4:8d:\n\
    \   2f:7e:b9:2b:a2:9e:9f:1e:6f:d0:4e:6e:f7:f0:a6:61:3b:9e:\n   9b:4b:78:6b:84:37:ad:93:19:0d:7f:46:5a:18:74:89:8b:a8:\n\
    \   1a:75:bf:db:df:25:43:4b:57:ab:a1:19:2e:7c:7b:b9:b5:50:\n   ef:2c:1f:5c:18:8f:6c:66:83:61:eb:25:a3:21:81:2c:61:3b:\n\
    \   ee:8c:18:1a:89:9a:29:0d:5c:5b:38:f3:71:3d:61:f0:3f:80:\n   33:90:f2:60:53:48:fb:7a:65:c9:5f:1f:a3:e8:75:42:42:f5:\n\
    \   ad:db:60:29:c6:0f:3c:68:00:7a:2b:38:db:c7:17:b9:4e:d8:\n   90:d8:52:bc\n \
    \  Certificate for CA for example.net in PEM format:\n   -----BEGIN CERTIFICATE-----\n\
    \   MIIDzzCCAregAwIBAgIJAJajhBdO74pSMA0GCSqGSIb3DQEBBQUAMHAxCzAJBgNV\n   BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhTYW4gSm9zZTEO\n\
    \   MAwGA1UECgwFc2lwaXQxKTAnBgNVBAsMIFNpcGl0IFRlc3QgQ2VydGlmaWNhdGUg\n   QXV0aG9yaXR5MCAXDTExMDIwNzIwMjExM1oYDzIxMTEwMTE0MjAyMTEzWjB9MQsw\n\
    \   CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTERMA8GA1UEBxMIU2FuIEpv\n   c2UxDjAMBgNVBAoTBXNpcGl0MSAwHgYDVQQLExdUZXN0IENBIGZvciBleGFtcGxl\n\
    \   Lm5ldDEUMBIGA1UEAxMLZXhhbXBsZS5uZXQwggEiMA0GCSqGSIb3DQEBAQUAA4IB\n   DwAwggEKAoIBAQDURmVR+IQctZNHpRUUBuzcKneTEV51FNKIVL0WUN1BP34q5CbV\n\
    \   ozOwXjcd5ZY3HBxpgKTv/SJ4187Tw96W+4cwiLwGFIBd86vXZD4HMdyXxdYZJrx9\n   C/jeXvkP3JpFDyiN3foVVtU1FyiA0vwf1pWVQg4sRzhTrf0OJP2jQzODUmVU2kjY\n\
    \   3IZC1SasHVJUCFLlP0p2lXeNxvIz8BiHyPxbVF3dZfFc9cj0NlSKtntv+FX42Njf\n   qXtARUySD6qyLKGoZNWZIh4oeKDY5VFkPwMUqRJHYYTWsGkaa6Nu2MrOQ1CtV5Yr\n\
    \   hxXZwhEDsILU8IC/3UT09jkKK+NN0/XnqjTlAgMBAAGjXTBbMAwGA1UdEwQFMAMB\n   Af8wHQYDVR0OBBYEFHJwz2YeI6U4/G9Aj4aKr+C5b+nDMB8GA1UdIwQYMBaAFJVF\n\
    \   fl8r6mWYEpEE82PHaJpYFncnMAsGA1UdDwQEAwICBDANBgkqhkiG9w0BAQUFAAOC\n   AQEAcHPAZZwvCTk51qRbled7QzS1ubJdduvvh+Altmir7vj3hcQhR7tsaGL/+IQe\n\
    \   RFowTs6Xkcw9Q0qLtyUmCGPGcUrBlDWBZt4jneM33jGA7Vi3B6fqh9PM2htiyYLC\n   F+YtIOSyaRTLBUM0b7UsYNhEQ/nm6T18VKK52R59Z7s/MjENwYh4qGc59dI+CPc4\n\
    \   hKaPwj4Azl+0yNqhtS/CiWCkOiu+mOBENK/sf3Mm8ZRbOQm5n5PCnXqWL4JmyE32\n   24cAjrwquVFzbMz/5TElsUrQmqnDZTUhiXY9OfiEQqYDDrXJL10YvJ25gvaD3Ssp\n\
    \   bI0sjEfUfb7eMhOFkjK8YWJr5Q==\n   -----END CERTIFICATE-----\n   Private key\
    \ for CA for example.net:\n   -----BEGIN RSA PRIVATE KEY-----\n   MIIEpAIBAAKCAQEA1EZlUfiEHLWTR6UVFAbs3Cp3kxFedRTSiFS9FlDdQT9+KuQm\n\
    \   1aMzsF43HeWWNxwcaYCk7/0ieNfO08PelvuHMIi8BhSAXfOr12Q+BzHcl8XWGSa8\n   fQv43l75D9yaRQ8ojd36FVbVNRcogNL8H9aVlUIOLEc4U639DiT9o0Mzg1JlVNpI\n\
    \   2NyGQtUmrB1SVAhS5T9KdpV3jcbyM/AYh8j8W1Rd3WXxXPXI9DZUirZ7b/hV+NjY\n   36l7QEVMkg+qsiyhqGTVmSIeKHig2OVRZD8DFKkSR2GE1rBpGmujbtjKzkNQrVeW\n\
    \   K4cV2cIRA7CC1PCAv91E9PY5CivjTdP156o05QIDAQABAoIBADp/7/pIH7h9vcn3\n   z7hGNE50kaGBHuPrSh3yJG4a+O67XbzaRW2I3XzUaiIeHGixoY7duha9Txu4dbJc\n\
    \   f2JijR4uAIs4aSv7NDdW09VNw3o8NkWWLEnV288Eo2Tgqc8wXz/BleL9nCJWcH4Y\n   Jw1rKKwKmTdQpVBCWcPlI9UzduXQdZfBbrsL6+OZ+F3kbvUwYAVhhUuBS9sf4Xib\n\
    \   5GA2CDLPm433giOS3yr9KigpcLvbhAhMiPTXJ6i65m9xGGCcjhxP/drOH0cNczRD\n   yW0FCbaNRJUg9kEVu+n3uG1aVfOnU7RqcblFXgO7ea7G+mfp3Cfm744kvFEXz04k\n\
    \   8WLW6gECgYEA9lK9mKhMUeB1+xPJB4Za5QvrFc7nLt8ee7/aTNcyMI0l3uXyPDPj\n   TNEfgaRobptmwd2HVtXjlQ54fE+pE+qS8dOORh2VFoWi91zI4C8WnM/6j5P+QiXY\n\
    \   tcZDPF22bmsSW7uaQyaOhUfIMhzox1BbUH5q5YrcA5DmmQtaxcIZ+IECgYEA3J07\n   6DamIgy0eJO2GKHU/Hy8RvQZgauzCtmqmLQrWZeOmx9hORe1a71QU5F6Y3HQRcTD\n\
    \   RDDdJua9Y8BJ0WTkasbRgxjmHQlf4pUdT6ycfWgISbcCNFTosgPH+/OZPEh4DKlO\n   rbldUzHPuZdo2Q72KtSPMk+ikny2lCZ9cm2mKmUCgYEAsGoX4fJ/HpDMzrKf4qTG\n\
    \   Co8bojXZ+wbPVT/Vf/0LtBwTCG3VrGpZG5YWo4n1RWpFEQmwuW9cnE+N2TJQXLQ+\n   47Vpiyv6r/OsAM9SCsWOw2ZtBFGw4v0qFR3W37AaTUCgGFTnKbq+jhQX/FQaH02c\n\
    \   6KxxsM5fvqoTjX7FVycp5IECgYA4Tq1WpHQcpq99Qv4sJUnuM4v+dBj6fq9Q6qNf\n   HEUgNc2BDC5NWx7D4+rXmX7qWMc2t3S7N9mKL0RRbGeq2RxvoFUjJ7y71oOxmiuE\n\
    \   BWNfoqjS37HhV3aY0Nw/EzqeJ0T0vlXFg1Utgb4p+VoaZHYyElSGG8s7pjcXcwd7\n   qD7L/QKBgQCeDLKx5T1d/EqwW8KNK5qD/5lG/T0zu3MCDlzCjfs2BHMasv5RALd+\n\
    \   unMMANDElPHOFs7fSmCfspN8Y7+W15/k9WugpwQfST2Y8dSRVdPFp1FRt8u25yX2\n   mdRbU3vJSiAqPEEpKpBolXPxLOeLGvoTHFWSazgmCPIKKxq0wL+0+w==\n\
    \   -----END RSA PRIVATE KEY-----\n   Robert's certificate:\n   -----BEGIN CERTIFICATE-----\n\
    \   MIIEJjCCAw6gAwIBAgIJAJajhBdO74pTMA0GCSqGSIb3DQEBBQUAMH0xCzAJBgNV\n   BAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMREwDwYDVQQHEwhTYW4gSm9zZTEO\n\
    \   MAwGA1UEChMFc2lwaXQxIDAeBgNVBAsTF1Rlc3QgQ0EgZm9yIGV4YW1wbGUubmV0\n   MRQwEgYDVQQDEwtleGFtcGxlLm5ldDAgFw0xMTAyMDcyMDIxMTNaGA8yMTExMDEx\n\
    \   NDIwMjExM1owVjELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExETAP\n   BgNVBAcTCFNhbiBKb3NlMQ4wDAYDVQQKEwVzaXBpdDEPMA0GA1UEAxMGcm9iZXJ0\n\
    \   MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA09wUaWtxCSwLD52VCMFk\n   IGbvn5wwBjA56xQW2hnMQU2xz/hTW6UNduyXuhYQn+1XtfttS5+P0J8OFac+iMTk\n\
    \   7zXRY5EgaBj0jju0DwM+oADWwybnV44hkqN6LSFESNsBuVTo3Nbj0bPySyYPP9SZ\n   Y+R+FAqycxxfO0E26ZpwvvdPCGtK20QC6LtQZiyYlEWefgEOncOpA7coFSjDzaKt\n\
    \   qwf2/2n07Lp/S72bKIwNh+Jm0SQ05Xe+ifHJdkw3NDq82Zw29ShgASlc9B56FRk0\n   gRzPGgZcD/mBZ9xQCeKo152fNW7/pqiAdGz4oQrzuyu2UYwhvAZyWdCVQtMCLM75\n\
    \   IwIDAQABo4HNMIHKMFEGA1UdEQRKMEiGFnNpcDpyb2JlcnRAZXhhbXBsZS5uZXSG\n   FWltOnJvYmVydEBleGFtcGxlLm5ldIYXcHJlczpyb2JlcnRAZXhhbXBsZS5uZXQw\n\
    \   CQYDVR0TBAIwADAdBgNVHQ4EFgQUpkK9Yg1rv+5n1Me8CT8LOhKrGc4wHwYDVR0j\n   BBgwFoAUcnDPZh4jpTj8b0CPhoqv4Llv6cMwCwYDVR0PBAQDAgXgMB0GA1UdJQQW\n\
    \   MBQGCCsGAQUFBwMEBggrBgEFBQcDFDANBgkqhkiG9w0BAQUFAAOCAQEAJZnqGh6W\n   bU6xnFpDd+o6p6G3Itu51JoeF/cTLrLKgN3JpdthQcaLZa4O/JpGdxbg4j0dIDzl\n\
    \   1eC4A0FP52m/4EzdzMRRsdovrVjh7cZbBOoer5qJzb5gPJowUX+ZWmtcj1rUuM61\n   izF0cLPMXASQ2I22dVX7wdjo2889gOSNL365K6Kenx5v0E5u9/CmYTuem0t4a4Q3\n\
    \   rZMZDX9GWhh0iYuoGnW/298lQ0tXq6EZLnx7ubVQ7ywfXBiPbGaDYesloyGBLGE7\n   7owYGomaKQ1cWzjzcT1h8D+AM5DyYFNI+3plyV8fo+h1QkL1rdtgKcYPPGgAeis4\n\
    \   28cXuU7YkNhSvA==\n   -----END CERTIFICATE-----\n   Robert's private key:\n\
    \   -----BEGIN RSA PRIVATE KEY-----\n   MIIEowIBAAKCAQEA09wUaWtxCSwLD52VCMFkIGbvn5wwBjA56xQW2hnMQU2xz/hT\n\
    \   W6UNduyXuhYQn+1XtfttS5+P0J8OFac+iMTk7zXRY5EgaBj0jju0DwM+oADWwybn\n   V44hkqN6LSFESNsBuVTo3Nbj0bPySyYPP9SZY+R+FAqycxxfO0E26ZpwvvdPCGtK\n\
    \   20QC6LtQZiyYlEWefgEOncOpA7coFSjDzaKtqwf2/2n07Lp/S72bKIwNh+Jm0SQ0\n   5Xe+ifHJdkw3NDq82Zw29ShgASlc9B56FRk0gRzPGgZcD/mBZ9xQCeKo152fNW7/\n\
    \   pqiAdGz4oQrzuyu2UYwhvAZyWdCVQtMCLM75IwIDAQABAoIBAAv+Q3GMUYPRaHbj\n   1tH+EKr86MfCUb2n8T9rjbefCj8QJOa/CgkAGPkIf7ZbFWnYR8TXjOJhEAUhW+zB\n\
    \   4PphGwynoUjfqFP8RavfmVvYNS1dnsrBYwtD0oa4lmwDnBf7vec99Ui7KX5vj2HN\n   r8NPR7et8a00xdFaY9G46WDkC0nkH8AqMMymY/Vu2KpH0f01hTpFLmxS7We+d3Uq\n\
    \   mva15GUc8+EL079uphokchr4E0036Ce4luCnqQfOUAKcXCMYK27lG5uue620IXLE\n   CqeevZPEn8eqWhSNGl981CF15AEb0tApMcMwrfcbpnQMHQuyQHm2XVewgF0gQGLn\n\
    \   UA0i6NECgYEA9TrFg3Kuw1Vfi+kztX6IMjW07YgN443NtB/9+sXKoc0Iz6LoPbOT\n   VHSVqHHpjicicBUyUa77Kr61HAv7AV0s2FRHAb3M7wOVYGkT52+12o4FH6EMU42G\n\
    \   ISAcsS4vCfHhYq1T0hC91bIY1XXxuBrpo0yb1RkEaSALHN6arAEgWccCgYEA3Sod\n   gEcahQEnu5P8UY5j9yFaBRqVxdQKWnO2trkfLkyVgtvn7ES31EGojVHg23nr5IsK\n\
    \   IpwFgBiQvEGUgV3dR0Jc5sZTETOweWBLebC/CtZfnhBcCNx8jwX5m/CtTzMHuxVs\n   VJ1WpUDn+K7+G8KIK0+Kp5QdOCxXptHRLkGPBcUCgYAVgCulFL8B3VBdQfsIpKlo\n\
    \   TZEpak5dbydj7ZIlFIZpnUJyggP+tOnr87TTafliP0gjr5gT1VWsL8BNTzeYrQSr\n   iugW3P9EzXmhVFUsa3z0RpNobIRaJwRljx0046m4I37xWeUJe/JI9C59OLQSwjlN\n\
    \   2f+ntWPPm8GdrF6/SfH+LQKBgQCyDaf2kEf/cHCmiXuHxVUhrs4kccTGofE75RDi\n   hqNdyPZNhfFvu9srnTivnY2j5MJPGsksF+Qtvpk3lqySghkVt43HlT9nB/A5p5bb\n\
    \   /7muZexQ+ua9k5UMKElOjDNbIcBFk/fFH26UWG7pPSkC/FhYVg9Q3uOvR7PBcAYy\n   cUFN6QKBgBw2k5SDvun41wNV4wxGEli9ia+i4lzg8pwJ1DUxnOcDvlDGzAzCNtW9\n\
    \   wPoR+jvhK6V6X1mI0tqqcYZ07pC3CJBEtAckHj2Ik+ZAEjQMf+eH62Rcv6Sbozq0\n   5dFCBZwzIe2IQomg3J8+OyILSs/uzFkjGjloJIrP+OtPKSrfR+/Y\n\
    \   -----END RSA PRIVATE KEY-----\n"
- title: Appendix C.  Message Dumps
  contents:
  - "Appendix C.  Message Dumps\n   This section contains a base64-encoded, gzipped,\
    \ compressed tar file\n   of various Cryptographic Message Syntax (CMS) messages\
    \ used in this\n   document.  Saving the data in a file foo.tgz.b64 then running\
    \ a\n   command like \"openssl base64 -d -in foo.tgz.b64 | tar xfz -\" would\n\
    \   recover the CMS messages and allow them to be used as test vectors.\n   --\
    \ BEGIN MESSAGE ARCHIVE --\n   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\n\
    \   -- END MESSAGE ARCHIVE --\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Cullen Jennings\n   Cisco Systems\n   170 West Tasman\
    \ Drive\n   Mailstop SJC-21/2\n   San Jose, CA  95134\n   USA\n   Phone: +1 408\
    \ 421 9990\n   EMail: fluffy@cisco.com\n   Kumiko Ono\n   Columbia University\n\
    \   1214 Amsterdam Avenue\n   MC 0401\n   New York, NY 10027\n   USA\n   EMail:\
    \ kumiko@cs.columbia.edu\n   Robert Sparks\n   Tekelec\n   17210 Campbell Road\n\
    \   Suite 250\n   Dallas, TX  75252\n   USA\n   EMail: Robert.Sparks@tekelec.com\n\
    \   Brian Hibbard (editor)\n   Tekelec\n   17210 Campbell Road\n   Suite 250\n\
    \   Dallas, TX  75252\n   USA\n   EMail: Brian.Hibbard@tekelec.com\n"
