- title: __initial_text__
  contents:
  - "                    Security Attacks Found Against\n            the Stream Control\
    \ Transmission Protocol (SCTP)\n                      and Current Countermeasures\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes certain security threats to SCTP.  It also\n\
    \   describes ways to mitigate these threats, in particular by using\n   techniques\
    \ from the SCTP Specification Errata and Issues memo (RFC\n   4460).  These techniques\
    \ are included in RFC 4960, which obsoletes\n   RFC 2960.  It is hoped that this\
    \ information will provide some useful\n   background information for many of\
    \ the newest requirements spelled\n   out in the SCTP Specification Errata and\
    \ Issues and included in RFC\n   4960.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Address Camping or Stealing  . . . . . . . . . . . .\
    \ . . . . .  2\n   3.  Association Hijacking 1  . . . . . . . . . . . . . . .\
    \ . . . .  3\n   4.  Association Hijacking 2  . . . . . . . . . . . . . . . .\
    \ . . .  6\n   5.  Bombing Attack (Amplification) 1 . . . . . . . . . . . . .\
    \ . .  7\n   6.  Bombing Attack (Amplification) 2 . . . . . . . . . . . . . .\
    \ .  9\n   7.  Association Redirection  . . . . . . . . . . . . . . . . . . .\
    \ 10\n   8.  Bombing Attack (Amplification) 3 . . . . . . . . . . . . . . . 10\n\
    \   9.  Bombing Attack (Amplification) 4 . . . . . . . . . . . . . . . 11\n  \
    \ 10. Bombing Attack (amplification) 5 . . . . . . . . . . . . . . . 11\n   11.\
    \ Security Considerations  . . . . . . . . . . . . . . . . . . . 12\n   12. References\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Stream Control Transmission Protocol, originally defined\
    \ in\n   [RFC2960], is a multi-homed transport protocol.  As such, unique\n  \
    \ security threats exists that are addressed in various ways within the\n   protocol\
    \ itself.  This document describes certain security threats to\n   SCTP.  It also\
    \ describes ways to mitigate these threats, in\n   particular by using techniques\
    \ from the SCTP Specification Errata and\n   Issues memo [RFC4460].  These techniques\
    \ are included in [RFC4960],\n   which obsoletes [RFC2960].  It is hoped that\
    \ this information will\n   provide some useful background information for many\
    \ of the newest\n   requirements spelled out in the [RFC4460] and included in\
    \ [RFC4960].\n   This work and some of the changes that went into [RFC4460] and\n\
    \   [RFC4960] are much indebted to the paper on potential SCTP security\n   risks\
    \ [EFFECTS] by Aura, Nikander, and Camarillo.  Without their\n   work, some of\
    \ these changes would remain undocumented and potential\n   threats.\n   The rest\
    \ of this document will concentrate on the various attacks\n   that were illustrated\
    \ in [EFFECTS] and detail the preventative\n   measures now in place, if any,\
    \ within the current SCTP standards.\n"
- title: 2.  Address Camping or Stealing
  contents:
  - "2.  Address Camping or Stealing\n   This attack is a form of denial of service\
    \ attack crafted around\n   SCTP's multi-homing.  In effect, an illegitimate endpoint\
    \ connects to\n   a server and \"camps upon\" or \"holds up\" a valid peer's address.\
    \  This\n   is done to prevent the legitimate peer from communicating with the\n\
    \   server.\n"
- title: 2.1.  Attack Details
  contents:
  - "2.1.  Attack Details\n      +----------+            +----------+           +----------+\n\
    \      | Evil     |            |  Server  |           | Client   |\n      |  \
    \   IP-A=+------------+          +-----------+=IP-C & D |\n      | Attacker |\
    \            |          |           | Victim   |\n      +----------+         \
    \   +----------+           +----------+\n                            Figure 1:\
    \ Camping\n   Consider the scenario illustrated in Figure 1.  The attacker\n \
    \  legitimately holds IP-A and wishes to prevent the 'Client-Victim'\n   from\
    \ communicating with the 'Server'.  Note also that the client is\n   multi-homed.\
    \  The attacker first guesses the port number our client\n   will use in its association\
    \ attempt.  It then uses this port and sets\n   up an association with the server\
    \ listing not only IP-A but also IP-C\n   in its initial INIT chunk.  The server\
    \ will respond and set up the\n   association, noting that the attacker is multi-homed\
    \ and holds both\n   IP-A and IP-C.\n   Next, the victim sends in an INIT message\
    \ listing its two valid\n   addresses, IP-C and IP-D.  In response, it will receive\
    \ an ABORT\n   message with possibly an error code indicating that a new address\
    \ was\n   added in its attempt to set up an existing association (a restart\n\
    \   with new addresses).  At this point, 'Client-Victim' is now prevented\n  \
    \ from setting up an association with the server until the server\n   realizes\
    \ that the attacker does not hold the address IP-C at some\n   future point by\
    \ using a HEARTBEAT based mechanism.  See the\n   mitigation option subsection\
    \ of this section.\n"
- title: 2.2.  Analysis
  contents:
  - "2.2.  Analysis\n   This particular attack was discussed in detail on the SCTP\n\
    \   implementors list in March of 2003.  Out of that discussion, changes\n   were\
    \ made in the BSD implementation that are now present in\n   [RFC4960].  In close\
    \ examination, this attack depends on a number of\n   specific things to occur.\n\
    \   1) The attacker must set up the association before the victim and\n      must\
    \ correctly guess the port number that the victim will use.  If\n      the victim\
    \ uses any other port number the attack will fail.\n   2) SCTP's existing HEARTBEAT\
    \ mechanism as defined already in\n      [RFC2960] will eventually catch this\
    \ situation and abort the evil\n      attacker's association.  This may take several\
    \ seconds based on\n      default HEARTBEAT timers but the attacker himself will\
    \ lose any\n      association.\n   3) If the victim is either not multi-homed,\
    \ or the address set that\n      it uses is completely camped upon by the attacker\
    \ (in our example\n      if the attacker had included IP-D in its INIT as well),\
    \ then the\n      client's INIT message would initiate an association between\
    \ the\n      client and the server while destroying the association between the\n\
    \      attacker and the server.  From the servers' perspective, this is a\n  \
    \    restart of the association.\n"
- title: 2.3.  Mitigation Option
  contents:
  - "2.3.  Mitigation Option\n   [RFC4960] adds a new set of requirements to better\
    \ counter this\n   attack.  In particular, the HEARTBEAT mechanism was modified\
    \ so that\n   addresses unknown to an endpoint (i.e., presented in an INIT with\
    \ no\n   pre-knowledge given by the application) enter a new state called\n  \
    \ \"UNCONFIRMED\".  During the time that any address is UNCONFIRMED and\n   yet\
    \ considered available, heartbeating will be done on those\n   UNCONFIRMED addresses\
    \ at an accelerated rate.  This will lessen the\n   time that an attacker can\
    \ \"camp\" on an address.  In particular, the\n   rate of heartbeats to UNCONFIRMED\
    \ addresses is done every RTO.  Along\n   with this expanded rate of heartbeating,\
    \ a new 64-bit random nonce is\n   required to be inside HEARTBEATs to UNCONFIRMED\
    \ addresses.  In the\n   HEARTBEAT-ACK, the random nonce must match the value\
    \ sent in the\n   HEARTBEAT before an address can leave the UNCONFIRMED state.\
    \  This\n   will prevent an attacker from generating false HEARTBEAT-ACKs with\n\
    \   the victim's source address(es).  In addition, clients that do not\n   need\
    \ to use a specific port number should choose their port numbers\n   on a random\
    \ basis.  This makes it hard for an attacker to guess that\n   number.\n"
- title: 3.  Association Hijacking 1
  contents:
  - "3.  Association Hijacking 1\n   Association hijacking is the ability of some\
    \ other user to assume the\n   session created by another endpoint.  In cases\
    \ of a true man-in-the-\n   middle, only a strong end-to-end security model can\
    \ prevent this.\n   However, with the addition of the SCTP extension specified\
    \ in\n   [RFC5061], an endpoint that is NOT a man-in-the-middle may be able to\n\
    \   assume another endpoint's association.\n"
- title: 3.1.  Attack Details
  contents:
  - "3.1.  Attack Details\n   The attack is made possible by any mechanism that lets\
    \ an endpoint\n   acquire some other IP address that was recently in use by an\
    \ SCTP\n   endpoint.  For example, DHCP may be used in a mobile network with\n\
    \   short IP address lifetimes to reassign IP addresses to migrant hosts.\n  \
    \      IP-A                 DHCP-Server's       Peer-Server\n          |\n   \
    \       |\n       1  |-DHCP-Rel(IP-A)---->|\n       2  |------ASCONF(ADD-IP(IP-B),\
    \ DEL-IP(IP-A)---->XXlost\n         time\n          |\n          |-DHCP-new-net------>|\n\
    \       3  |<---Assign (IP-A)\n          |\n       4  |<------------Tag:X-DATA()------------------\n\
    \          |\n          |-------------INIT()------------------------>\n      \
    \ 5  |<------------INIT-ACK()---------------------\n          |\n       6  |----ASCONF(ADD-IP(IP-Z),DEL-IP(IP-A))------>\n\
    \                   Figure 2: Association Hijack via DHCP\n   At point 1, our\
    \ valid client releases the IP address IP-A.  It\n   presumably acquires a new\
    \ address (IP-B) and sends an ASCONF to ADD\n   the new address and delete to\
    \ old address at point 2, but this packet\n   is lost.  Thus, our peer (Peer-Server)\
    \ has no idea that the former\n   peer is no longer at IP-A.  Now at point 3,\
    \ a new \"evil\" peer obtains\n   an address via DHCP and it happens to get the\
    \ re-assigned address\n   IP-A.  Our Peer-Server sends a chunk of DATA at point\
    \ 4.  This\n   reveals to the new owner of IP-A that the former owner of IP-A\
    \ had an\n   association with Peer-Server.  So at point 5, the new owner of IP-A\n\
    \   sends an INIT.  The INIT-ACK is sent back and inside it is a COOKIE.\n   The\
    \ cookie would of course hold tie-tags, which would list both sets\n   of tags\
    \ that could then be used at point 6 to add in any other IP\n   addresses that\
    \ the owner of IP-A holds and thus acquire the\n   association.\n   It should\
    \ be noted that this attack is possible in general whenever\n   the attacker is\
    \ able to send packets with source address IP-A and\n   receive packets with destination\
    \ address IP-A.\n"
- title: 3.2.  Analysis
  contents:
  - "3.2.  Analysis\n   This attack depends on a number of events:\n   1) Both endpoints\
    \ must support the SCTP extension specified in\n      [RFC5061].\n   2) One of\
    \ the endpoints must be using the SCTP extension for mobility\n      specified\
    \ in [RFC5061].\n   3) The IP address must be acquired in such a way as to make\
    \ the\n      endpoint the owner of that IP address as far as the network is\n\
    \      concerned.\n   4) The true peer must not receive the ASCONF packet that\
    \ deletes IP-A\n      and adds its new address to the peer before the new \"evil\"\
    \ peer\n      gets control of the association.\n   5) The new \"evil\" peer must\
    \ have an alternate address, aside from the\n      IP-A that it can add to the\
    \ association, so it can delete IP-A,\n      preventing the real peer from re-acquiring\
    \ the association when it\n      finally retransmits the ASCONF (from step 2).\n"
- title: 3.3.  Mitigation Option
  contents:
  - "3.3.  Mitigation Option\n   [RFC4960] adds a new counter measure to this threat.\
    \  It is now\n   required that Tie-Tags in the State-Cookie parameter not be the\n\
    \   actual tags.  Instead, a new pair of two 32-bit nonces must be used\n   to\
    \ represent the real tags within the association.  This prevents the\n   attacker\
    \ from acquiring the real tags and thus prevents this attack.\n   Furthermore,\
    \ the use of the SCTP extension specified in [RFC5061]\n   requires the use of\
    \ the authentication mechanism defined in\n   [RFC4895].  This requires the attacker\
    \ to be able to capture the\n   traffic during the association setup.  If in addition\
    \ an endpoint-\n   pair shared key is used, capturing or intercepting these setup\n\
    \   messages does not enable the attacker to hijack the association.\n"
- title: 4.  Association Hijacking 2
  contents:
  - "4.  Association Hijacking 2\n   Association hijacking is the ability of some\
    \ other user to assume the\n   session created by another endpoint.  In cases\
    \ where an attacker can\n   send packets using the victims IP-address as a source\
    \ address and can\n   receive packets with the victims' address as a destination\
    \ address,\n   the attacker can easily restart the association.  If the peer does\n\
    \   not pay attention to the restart notification, the attacker has taken\n  \
    \ over the association.\n"
- title: 4.1.  Attack Details
  contents:
  - "4.1.  Attack Details\n   Assume that an endpoint E1 having an IP-address A has\
    \ an SCTP\n   association with endpoint E2.  After the attacker is able to receive\n\
    \   packets to destination address A and send packets with source address\n  \
    \ A, the attacker can perform a full four-way handshake using the IP-\n   addresses\
    \ and port numbers from the received packet.  E2 will\n   consider this a restart\
    \ of the association.  If and only if the SCTP\n   user of E2 does not process\
    \ the restart notification, the user will\n   not recognize that the association\
    \ just restarted.  From this\n   perspective, the association has been hijacked.\n"
- title: 4.2.  Analysis
  contents:
  - "4.2.  Analysis\n   This attack depends on a number of circumstances:\n   1) The\
    \ IP address must be acquired in such a way as to make the evil\n      endpoint\
    \ the owner of that IP address as far as the network or\n      local LAN is concerned.\n\
    \   2) The attacker must receive a packet belonging to the association or\n  \
    \    connection.\n   3) The other endpoint's user does not pay attention to restart\n\
    \      notifications.\n"
- title: 4.3.  Mitigation Option
  contents:
  - "4.3.  Mitigation Option\n   It is important to note that this attack is not based\
    \ on a weakness\n   of the protocol, but on the ignorance of the upper layer.\
    \  This\n   attack is not possible if the upper layer processes the restart\n\
    \   notifications provided by SCTP as described in section 10 of\n   [RFC2960]\
    \ or [RFC4960].  Note that other IP protocols may also be\n   affected by this\
    \ attack.\n"
- title: 5.  Bombing Attack (Amplification) 1
  contents:
  - "5.  Bombing Attack (Amplification) 1\n   The bombing attack is a method to get\
    \ a server to amplify packets to\n   an innocent victim.\n"
- title: 5.1.  Attack Details
  contents:
  - "5.1.  Attack Details\n   This attack is performed by setting up an association\
    \ with a peer and\n   listing the victims IP address in the INIT's list of addresses.\n\
    \   After the association is setup, the attacker makes a request for a\n   large\
    \ data transfer.  After making the request, the attacker does not\n   acknowledge\
    \ data sent to it.  This then causes the server to re-\n   transmit the data to\
    \ the alternate address, i.e., that of the victim.\n   After waiting an appropriate\
    \ time period, the attacker acknowledges\n   the data for the victim.  At some\
    \ point, the attackers address is\n   considered unreachable since only data sent\
    \ to the victims address is\n   acknowledged.  At this point, the attacker can\
    \ send strategic\n   acknowledgments so that the server continues to send data\
    \ to the\n   victim.\n   Alternatively, instead of stopping the sending of SACKs\
    \ to enforce a\n   path failover, the attacker can use the ADD-IP extension to\
    \ add the\n   address of the victim and make that address the primary path.\n"
- title: 5.2.  Analysis
  contents:
  - "5.2.  Analysis\n   This attack depends on a number of circumstances:\n   1) The\
    \ victim must NOT support SCTP, otherwise it would respond with\n      an \"out\
    \ of the blue\" (OOTB) abort.\n   2) The attacker must time its sending of acknowledgments\
    \ correctly in\n      order to get its address into the failed state and the victim's\n\
    \      address as the only valid alternative.\n   3) The attacker must guess TSN\
    \ values that are accepted by the\n      receiver once the bombing begins since\
    \ it must acknowledge packets\n      it is no longer seeing.\n"
- title: 5.3.  Mitigation Option
  contents:
  - "5.3.  Mitigation Option\n   [RFC4960] makes two changes to prevent this attack.\
    \  First, it\n   details proper handling of ICMP messages.  With SCTP, the ICMP\n\
    \   messages provide valuable clues to the SCTP stack that can be\n   verified\
    \ with the tags for authenticity.  Proper handling of an ICMP\n   protocol unreachable\
    \ (or equivalent) would cause the association\n   setup by the attacker to be\
    \ immediately failed upon the first\n   retransmission to the victim's address.\n\
    \   The second change made in [RFC4960] is the requirement that no\n   address\
    \ that is not CONFIRMED is allowed to have DATA chunks sent to\n   it.  This prevents\
    \ the switch-over to the alternate address from\n   occurring, even when ICMP\
    \ messages are lost in the network and\n   prevents any DATA chunks from being\
    \ sent to any other destination\n   other then the attacker itself.  This also\
    \ prevents the alternative\n   way of using ADD-IP to add the new address and\
    \ make it the primary\n   address.\n   An SCTP implementation should abort the\
    \ association if it receives a\n   SACK acknowledging a TSN that has not been\
    \ sent.  This makes TSN\n   guessing for the attacker quite hard because if the\
    \ attacker\n   acknowledges one TSN too fast, the association will be aborted.\n"
- title: 6.  Bombing Attack (Amplification) 2
  contents:
  - "6.  Bombing Attack (Amplification) 2\n   This attack allows an attacker to use\
    \ an arbitrary SCTP endpoint to\n   send multiple packets to a victim in response\
    \ to one packet.\n"
- title: 6.1.  Attack Details
  contents:
  - "6.1.  Attack Details\n   The attacker sends an INIT listing multiple IP addresses\
    \ of the\n   victim in the INIT's list of addresses to an arbitrary endpoint.\n\
    \   Optionally, it requests a long cookie lifetime.  Upon reception of\n   the\
    \ INIT-ACK, it stores the cookie and sends it back to the other\n   endpoint.\
    \  When the other endpoint receives the COOKIE, it will send\n   back a COOKIE-ACK\
    \ to the attacker and up to HB.Max.Burst HEARTBEATS\n   to the victim's address(es)\
    \ (to confirm these addresses).  The victim\n   responds with ABORTs or ICMP messages\
    \ resulting in the removal of the\n   TCB at the other endpoint.  The attacker\
    \ can now resend the stored\n   cookie as long as it is valid, and this will again\
    \ result in up to\n   HB.Max.Burst HEARTBEATs sent to the victim('s).\n"
- title: 6.2.  Analysis
  contents:
  - "6.2.  Analysis\n   The multiplication factor is limited by the number of addresses\
    \ of\n   the victim and of the endpoint HB.Max.Burst.  Also, the shorter the\n\
    \   cookie lifetime, the earlier the attacker has to go through the\n   initial\
    \ stage of sending an INIT instead of just sending the COOKIE.\n   It should also\
    \ be noted that the attack is more effective if large\n   HEARTBEATs are used\
    \ for path confirmation.\n"
- title: 6.3.  Mitigation Option
  contents:
  - "6.3.  Mitigation Option\n   To limit the effectiveness of this attack, the new\
    \ parameter\n   HB.Max.Burst was introduced in [RFC4960] and an endpoint should:\n\
    \   1) not allow very large cookie lifetimes, even if they are requested.\n  \
    \ 2) not use larger HB.Max.Burst parameter values than recommended.\n      Note\
    \ that an endpoint may decide to send only one Heartbeat per\n      RTT instead\
    \ of the maximum (i.e., HB.Max.Burst).  An endpoint that\n      chooses this approach\
    \ will however slow down detection of\n      endpoints camping on valid addresses.\n\
    \   3) not use large HEARTBEATs for path confirmation.\n"
- title: 7.  Association Redirection
  contents:
  - "7.  Association Redirection\n   This attack allows an attacker to wrongly set\
    \ up an association to a\n   different endpoint.\n"
- title: 7.1.  Attack Details
  contents:
  - "7.1.  Attack Details\n   The attacker sends an INIT sourced from port 'X' and\
    \ directed towards\n   port 'Y'.  When the INIT-ACK is returned, the attacker\
    \ sends the\n   COOKIE-ECHO chunk and either places a different destination or\
    \ source\n   port in the SCTP common header, i.e., X+1 or Y+1.  This possibly\
    \ sets\n   up the association using the modified port numbers.\n"
- title: 7.2.  Analysis
  contents:
  - "7.2.  Analysis\n   This attack depends on the failure of an SCTP implementation\
    \ to store\n   and verify the ports within the COOKIE structure.\n"
- title: 7.3.  Mitigation Option
  contents:
  - "7.3.  Mitigation Option\n   This attack is easily defeated by an implementation\
    \ including the\n   ports of both the source and destination within the COOKIE.\
    \  If the\n   source and destination ports do not match those within the COOKIE\n\
    \   chunk when the COOKIE is returned, the SCTP implementation silently\n   discards\
    \ the invalid COOKIE.\n"
- title: 8.  Bombing Attack (Amplification) 3
  contents:
  - "8.  Bombing Attack (Amplification) 3\n   This attack allows an attacker to use\
    \ an SCTP endpoint to send a\n   large number of packets in response to one packet.\n"
- title: 8.1.  Attack Details
  contents:
  - "8.1.  Attack Details\n   The attacker sends a packet to an SCTP endpoint, which\
    \ requires the\n   sending of multiple chunks.  If the SCTP endpoint does not\
    \ support\n   bundling on the sending side, it might send each chunk per packet.\n\
    \   These packets can either be sent to a victim by using the victim's\n   address\
    \ as the sources address, or it can be considered an attack\n   against the network.\
    \  Since the chunks, which need to be sent in\n   response to the received packet,\
    \ may not fit into one packet, an\n   endpoint supporting bundling on the sending\
    \ side might send multiple\n   packets.\n   Examples of these packets are packets\
    \ containing a lot of unknown\n   chunks that require an ERROR chunk to be sent,\
    \ known chunks that\n   initiate the sending of ERROR chunks, packets containing\
    \ a lot of\n   HEARTBEAT chunks, and so on.\n"
- title: 8.2.  Analysis
  contents:
  - "8.2.  Analysis\n   This attack depends on the fact that the SCTP endpoint does\
    \ not\n   support bundling on the sending side or provides a bad implementation\n\
    \   of bundling on the sending side.\n"
- title: 8.3.  Mitigation Option
  contents:
  - "8.3.  Mitigation Option\n   First of all, path verification must happen before\
    \ sending chunks\n   other than HEARTBEATs for path verification.  This ensures\
    \ that the\n   above attack cannot be used against other hosts.  To avoid the\n\
    \   attack, an SCTP endpoint should implement bundling on the sending\n   side\
    \ and should not send multiple packets in response.  If the SCTP\n   endpoint\
    \ does not support bundling on the sending side, it should not\n   send in general\
    \ more than one packet in response to a received one.\n   The details of the required\
    \ handling are described in [RFC4960].\n"
- title: 9.  Bombing Attack (Amplification) 4
  contents:
  - "9.  Bombing Attack (Amplification) 4\n   This attack allows an attacker to use\
    \ an SCTP server to send a larger\n   packet to a victim than it sent to the SCTP\
    \ server.\n"
- title: 9.1.  Attack Details
  contents:
  - "9.1.  Attack Details\n   The attacker sends packets using the victim's address\
    \ as the source\n   address containing an INIT chunk to an SCTP Server.  The server\
    \ then\n   sends a packet containing an INIT-ACK chunk to the victim, which is\n\
    \   most likely larger than the packet containing the INIT.\n"
- title: 9.2.  Analysis
  contents:
  - "9.2.  Analysis\n   This attack is a byte and not a packet amplification attack\
    \ and,\n   without protocol changes, is hard to avoid.  A possible method to\n\
    \   avoid this attack would be the usage the PAD parameter defined in\n   [RFC4820].\n"
- title: 9.3.  Mitigation Option
  contents:
  - "9.3.  Mitigation Option\n   A server should be implemented in a way that the\
    \ generated INIT-ACK\n   chunks are as small as possible.\n"
- title: 10.  Bombing Attack (amplification) 5
  contents:
  - "10.  Bombing Attack (amplification) 5\n   This attack allows an attacker to use\
    \ an SCTP endpoint to send a\n   large number of packets in response to one packet.\n"
- title: 10.1.  Attack Details
  contents:
  - "10.1.  Attack Details\n   The attacker sends a packet to an SCTP endpoint, which\
    \ requires the\n   sending of multiple chunks.  If the MTU towards the attacker\
    \ is\n   smaller than the MTU towards the victim, the victim might need to\n \
    \  send more than one packet to send all the chunks.  The difference\n   between\
    \ the MTUs might be extremely large if the attacker sends\n   malicious ICMP packets\
    \ to make use of the path MTU discovery.\n"
- title: 10.2.  Analysis
  contents:
  - "10.2.  Analysis\n   This attack depends on the fact that an SCTP implementation\
    \ might not\n   limit the number of response packets correctly.\n"
- title: 10.3.  Mitigation Option
  contents:
  - "10.3.  Mitigation Option\n   First of all, path verification must happen before\
    \ sending chunks\n   other than HEARTBEATs for path verification.  This makes\
    \ sure that\n   the above attack cannot be used against other hosts.  To avoid\
    \ the\n   attack, an SCTP endpoint should not send multiple packets in response\n\
    \   to a single packet.  The chunks not fitting in this packet should be\n   dropped.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   This document is about security; as such, there\
    \ are no additional\n   security considerations.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2960]  Stewart, R., Xie, Q., Morneault, K.,\
    \ Sharp, C.,\n              Schwarzbauer, H., Taylor, T., Rytina, I., Kalla, M.,\n\
    \              Zhang, L., and V. Paxson, \"Stream Control Transmission\n     \
    \         Protocol\", RFC 2960, October 2000.\n   [RFC4460]  Stewart, R., Arias-Rodriguez,\
    \ I., Poon, K., Caro, A., and\n              M. Tuexen, \"Stream Control Transmission\
    \ Protocol (SCTP)\n              Specification Errata and Issues\", RFC 4460,\
    \ April 2006.\n   [RFC4820]  Tuexen, M., Stewart, R., and P. Lei, \"Padding Chunk\
    \ and\n              Parameter for the Stream Control Transmission Protocol\n\
    \              (SCTP)\", RFC 4820, March 2007.\n   [RFC4895]  Tuexen, M., Stewart,\
    \ R., Lei, P., and E. Rescorla,\n              \"Authenticated Chunks for Stream\
    \ Control Transmission\n              Protocol (SCTP)\", RFC 4895, August 2007.\n\
    \   [RFC5061]  Stewart, R., Xie, Q., Tuexen, M., Maruyama, S., and M.\n      \
    \        Kozuka, \"Stream Control Transmission Protocol (SCTP)\n             \
    \ Dynamic Address Reconfiguration\", RFC 5061,\n              September 2007.\n\
    \   [RFC4960]  Stewart, R., Ed., \"Stream Control Transmission Protocol\",\n \
    \             RFC 4960, June 2007.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [EFFECTS]  Aura, T., Nikander, P., and G. Camarillo,\
    \ \"Effects of\n              Mobility and Multihoming on Transport-Layer Security\"\
    ,\n              Security and Privacy 2004, IEEE Symposium , URL http://\n   \
    \           research.microsoft.com/users/tuomaura/Publications/\n            \
    \  aura-nikander-camarillo-ssp04.pdf, May 2004.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Randall R. Stewart\n   Cisco Systems, Inc.\n   4785 Forest\
    \ Drive\n   Suite 200\n   Columbia, SC  29206\n   USA\n   EMail: rrs@cisco.com\n\
    \   Michael Tuexen\n   Muenster Univ. of Applied Sciences\n   Stegerwaldstr. 39\n\
    \   48565 Steinfurt\n   Germany\n   EMail: tuexen@fh-muenster.de\n   Gonzalo Camarillo\n\
    \   Ericsson\n   Hirsalantie 11\n   Jorvas  02420\n   Finland\n   EMail: Gonzalo.Camarillo@ericsson.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
