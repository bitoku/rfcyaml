- title: __initial_text__
  contents:
  - '                    Fibre Channel Over TCP/IP (FCIP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   Fibre Channel Over TCP/IP (FCIP) describes mechanisms that allow\
    \ the\n   interconnection of islands of Fibre Channel storage area networks\n\
    \   over IP-based networks to form a unified storage area network in a\n   single\
    \ Fibre Channel fabric.  FCIP relies on IP-based network\n   services to provide\
    \ the connectivity between the storage area network\n   islands over local area\
    \ networks, metropolitan area networks, or wide\n   area networks.\n"
- title: Table Of Contents
  contents:
  - "Table Of Contents\n   1.  Purpose, Motivation, and Objectives. . . . . . . .\
    \ . . . . . .  3\n   2.  Relationship to Fibre Channel Standards. . . . . . .\
    \ . . . . .  4\n       2.1.  Relevant Fibre Channel Standards . . . . . . . .\
    \ . . . .  4\n       2.2.  This Specification and Fibre Channel Standards . .\
    \ . . .  5\n   3.  Terminology. . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  5\n   4.  Protocol Summary . . . . . . . . . . . . . . . . . . . . . .\
    \ .  7\n   5.  The FCIP Model . . . . . . . . . . . . . . . . . . . . . . . .\
    \  9\n       5.1.  FCIP Protocol Model. . . . . . . . . . . . . . . . . . .  9\n\
    \       5.2.  FCIP Link. . . . . . . . . . . . . . . . . . . . . . . . 10\n  \
    \     5.3.  FC Entity. . . . . . . . . . . . . . . . . . . . . . . . 11\n    \
    \   5.4.  FCIP Entity. . . . . . . . . . . . . . . . . . . . . . . 12\n      \
    \ 5.5.  FCIP Link Endpoint (FCIP_LEP). . . . . . . . . . . . . . 13\n       5.6.\
    \  FCIP Data Engine (FCIP_DE) . . . . . . . . . . . . . . . 14\n             5.6.1.\
    \  FCIP Encapsulation of FC Frames. . . . . . . . . 16\n             5.6.2.  FCIP\
    \ Data Engine Error Detection and Recovery. . 19\n   6.  Checking FC Frame Transit\
    \ Times in the IP Network. . . . . . . 22\n   7.  The FCIP Special Frame (FSF)\
    \ . . . . . . . . . . . . . . . . . 23\n       7.1.  FCIP Special Frame Format.\
    \ . . . . . . . . . . . . . . . 23\n       7.2.  Overview of FSF Usage in Connection\
    \ Establishment. . . . 26\n   8.  TCP Connection Management. . . . . . . . . .\
    \ . . . . . . . . . 28\n       8.1.  TCP Connection Establishment . . . . . .\
    \ . . . . . . . . 28\n             8.1.1.  Connection Establishment Model . .\
    \ . . . . . . . 28\n             8.1.2.  Creating New TCP Connections . . . .\
    \ . . . . . . 29\n             8.1.3.  Processing Incoming TCP Connect Requests\
    \ . . . . 32\n             8.1.4.  Simultaneous Connection Establishment. . .\
    \ . . . 36\n       8.2.  Closing TCP Connections. . . . . . . . . . . . . . .\
    \ . . 36\n       8.3.  TCP Connection Parameters. . . . . . . . . . . . . . .\
    \ . 36\n             8.3.1.  TCP Selective Acknowledgement Option . . . . . .\
    \ 36\n             8.3.2.  TCP Window Scale Option. . . . . . . . . . . . . 36\n\
    \             8.3.3.  Protection Against Sequence Number Wrap. . . . . 37\n  \
    \           8.3.4.  TCP_NODELAY Option . . . . . . . . . . . . . . . 37\n    \
    \   8.4.  TCP Connection Considerations. . . . . . . . . . . . . . 37\n      \
    \ 8.5.  Flow Control Mapping between TCP and FC. . . . . . . . . 37\n   9.  Security\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . 38\n       9.1.  Threat\
    \ Models. . . . . . . . . . . . . . . . . . . . . . 38\n       9.2.  FC Fabric\
    \ and IP Network Deployment Models . . . . . . . 40\n       9.3.  FCIP Security\
    \ Components . . . . . . . . . . . . . . . . 40\n             9.3.1.  IPsec ESP\
    \ Authentication and Confidentiality . . 40\n             9.3.2.  Key Management\
    \ . . . . . . . . . . . . . . . . . 41\n             9.3.3.  ESP Replay Protection\
    \ and Rekeying Issues. . . . 43\n       9.4.  Secure FCIP Link Operation . . .\
    \ . . . . . . . . . . . . 44\n             9.4.1.  FCIP Link Initialization Steps\
    \ . . . . . . . . . 44\n             9.4.2.  TCP Connection Security Associations\
    \ (SAs) . . . 44\n             9.4.3.  Handling Data Integrity and Confidentiality\n\
    \                     Violations . . . . . . . . . . . . . . . . . . . 45\n  \
    \ 10. Performance. . . . . . . . . . . . . . . . . . . . . . . . . . 45\n    \
    \   10.1. Performance Considerations . . . . . . . . . . . . . . . 45\n      \
    \ 10.2. IP Quality of Service (QoS) Support. . . . . . . . . . . 46\n   11. References\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 47\n       11.1. Normative\
    \ References . . . . . . . . . . . . . . . . . . 47\n       11.2. Informative\
    \ References . . . . . . . . . . . . . . . . . 49\n   12. Acknowledgments. . .\
    \ . . . . . . . . . . . . . . . . . . . . . 50\n   Appendix A  Fibre Channel Bit\
    \ and Byte Numbering Guidance. . . . . 51\n            B  IANA Considerations.\
    \ . . . . . . . . . . . . . . . . . 51\n            C  FCIP Usage of Addresses\
    \ and Identifiers. . . . . . . . 52\n            D  Example of synchronization\
    \ Recovery Algorithm. . . . . 53\n            E  Relationship between FCIP and\
    \ IP over FC (IPFC). . . . 58\n            F  FC Frame Format. . . . . . . . .\
    \ . . . . . . . . . . . 59\n            G  FC Encapsulation Format. . . . . .\
    \ . . . . . . . . . . 61\n            H  FCIP Requirements on an FC Entity. .\
    \ . . . . . . . . . 63\n   Editors and Contributors Acknowledgements. . . . .\
    \ . . . . . . . . 69\n   Editors and Contributors Addresses . . . . . . . . .\
    \ . . . . . . . 70\n   Full Copyright Statement . . . . . . . . . . . . . . .\
    \ . . . . . . 74\n"
- title: 1.  Purpose, Motivation, and Objectives
  contents:
  - "1.  Purpose, Motivation, and Objectives\n   Warning to Readers Familiar With\
    \ Fibre Channel: Both Fibre Channel\n   and IETF standards use the same byte transmission\
    \ order.   However,\n   the bit and byte numbering is different.  See appendix\
    \ A for\n   guidance.\n   Fibre Channel (FC) is a gigabit or multi-gigabit speed\
    \ networking\n   technology primarily used to implement Storage Area Networks\
    \ (SANs).\n   See section 2 for information about how Fibre Channel is standardized\n\
    \   and the relationship of this specification to Fibre Channel\n   standards.\
    \  An overview of Fibre Channel can be found in [34].\n   This specification describes\
    \ mechanisms that allow the\n   interconnection of islands of Fibre Channel SANs\
    \ over IP Networks to\n   form a unified SAN in a single Fibre Channel fabric.\
    \  The motivation\n   behind defining these interconnection mechanisms is a desire\
    \ to\n   connect physically remote FC sites allowing remote disk access, tape\n\
    \   backup, and live mirroring.\n   Fibre Channel standards have chosen nominal\
    \ distances between switch\n   elements that are less than the distances available\
    \ in an IP Network.\n   Since Fibre Channel and IP Networking technologies are\
    \ compatible, it\n   is logical to turn to IP Networking for extending the allowable\n\
    \   distances between Fibre Channel switch elements.\n   The fundamental assumption\
    \ made in this specification is that the\n   Fibre Channel traffic is carried\
    \ over the IP Network in such a manner\n   that the Fibre Channel Fabric and all\
    \ Fibre Channel devices on the\n   Fabric are unaware of the presence of the IP\
    \ Network.  This means\n   that the FC datagrams must be delivered in such time\
    \ as to comply\n   with existing Fibre Channel specifications.  The FC traffic\
    \ may span\n   LANs, MANs, and WANs, so long as this fundamental assumption is\n\
    \   adhered to.\n   The objectives of this document are to:\n   1) specify the\
    \ encapsulation and mapping of Fibre Channel (FC) frames\n      employing FC Frame\
    \ Encapsulation [19].\n   2) apply the mechanism described in 1) to an FC Fabric\
    \ using an IP\n      network as an interconnect between two or more islands in\
    \ an FC\n      Fabric.\n   3) address any FC concerns arising from tunneling FC\
    \ traffic over an\n      IP-based network, including security, data integrity\
    \ (loss),\n      congestion, and performance.  This will be accomplished by\n\
    \      utilizing the existing IETF-specified suite of protocols.\n   4) be compatible\
    \ with the referenced FC standards.  While new work\n      may be undertaken in\
    \ T11 to optimize and enhance FC Fabrics, this\n      specification REQUIRES conformance\
    \ only to the referenced FC\n      standards.\n   5) be compatible with all applicable\
    \ IETF standards so that the IP\n      Network used to extend an FC Fabric can\
    \ be used concurrently for\n      other reasonable purposes.\n   The objectives\
    \ of this document do not include using an IP Network as\n   a replacement for\
    \ the Fibre Channel Arbitrated Loop interconnect.  No\n   definition is provided\
    \ for encapsulating loop primitive signals for\n   transmission over an IP Network.\n"
- title: Conventions used in this document
  contents:
  - "Conventions used in this document\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119 [1].\n"
- title: 2.  Relationship to Fibre Channel Standards
  contents:
  - '2.  Relationship to Fibre Channel Standards

    '
- title: 2.1.  Relevant Fibre Channel Standards
  contents:
  - "2.1.  Relevant Fibre Channel Standards\n   FC is standardized as a family of\
    \ American National Standards\n   developed by the T11 technical committee of\
    \ INCITS (InterNational\n   Committee for Information Technology Standards). \
    \ T11 has specified a\n   number of documents describing FC protocols, operations,\
    \ and\n   services.  T11 documents of interest to readers of this specification\n\
    \   include (but are not limited to):\n      -  FC-BB   - Fibre Channel Backbone\
    \ [2]\n      -  FC-BB-2 - Fibre Channel Backbone -2 [3]\n      -  FC-SW-2 - Fibre\
    \ Channel Switch Fabric -2 [4]\n      -  FC-FS   - Fibre Channel Framing and Signaling\
    \ [5]\n   FC-BB and FC-BB-2 describe the relationship between an FC Fabric and\n\
    \   interconnect technologies not defined by Fibre Channel standards\n   (e.g.,\
    \ ATM and SONET).  FC-BB-2 is the Fibre Channel document\n   describing the relationships\
    \ between FC and TCP/IP, including the FC\n   use of FCIP.\n   FC-SW-2 describes\
    \ the switch components of an FC Fabric and FC-FS\n   describes the FC Frame format\
    \ and basic control features of Fibre\n   Channel.\n   Additional information\
    \ regarding T11 activities is available on the\n   committee's web site www.t11.org.\n"
- title: 2.2.  This Specification and Fibre Channel Standards
  contents:
  - "2.2.  This Specification and Fibre Channel Standards\n   When considering the\
    \ challenge of transporting FC Frames over an IP\n   Network, it is logical to\
    \ divide the standardization effort between\n   TCP/IP requirements and Fibre\
    \ Channel requirements.  This\n   specification covers the TCP/IP requirements\
    \ for transporting FC\n   Frames; the Fibre Channel documents described in section\
    \ 2.1 cover\n   the Fibre Channel requirements.\n   This specification addresses\
    \ only the requirements necessary to\n   properly utilize an IP Network as a conduit\
    \ for FC Frames.  The\n   result is a specification for an FCIP Entity (see section\
    \ 5.4).\n   A product that tunnels an FC Fabric through an IP Network MUST\n \
    \  combine the FCIP Entity with an FC Entity (see section 5.3) using an\n   implementation\
    \ specific interface.  The requirements placed on an FC\n   Entity by this specification\
    \ to achieve proper delivery of FC Frames\n   are summarized in appendix H.  More\
    \ information about FC Entities can\n   be found in the Fibre Channel standards\
    \ and an example of an FC\n   Entity can be found in FC-BB-2 [3].\n   No attempt\
    \ is being made to define a specific API between an FCIP\n   Entity and an FC\
    \ Entity.  The approach is to specify required\n   functional interactions between\
    \ an FCIP Entity and an FC Entity (both\n   of which are required to forward FC\
    \ frames across an IP Network), but\n   allow implementers to choose how these\
    \ interactions will be realized.\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   Terms used to describe FCIP concepts are defined in this\
    \ section.\n   FC End Node - An FC device that uses the connection services provided\n\
    \      by the FC Fabric.\n   FC Entity - The Fibre Channel specific functional\
    \ component that\n      combines with an FCIP Entity to form an interface between\
    \ an FC\n      Fabric and an IP Network (see section 5.3).\n   FC Fabric - An\
    \ entity that interconnects various Nx_Ports (see [5])\n      attached to it,\
    \ and is capable of routing FC Frames using only the\n      destination ID information\
    \ in an FC Frame header (see appendix F).\n   FC Fabric Entity - A Fibre Channel\
    \ specific element containing one\n      or more Interconnect_Ports (see FC-SW-2\
    \ [4]) and one or more\n      FC/FCIP Entity pairs.  See FC-BB-2 [3] for details\
    \ about FC Fabric\n      Entities.\n   FC Frame - The basic unit of Fibre Channel\
    \ data transfer (see\n      appendix F).\n   FC Frame Receiver Portal - The access\
    \ point through which an FC\n      Frame and time stamp enter an FCIP Data Engine\
    \ from the FC Entity.\n   FC Frame Transmitter Portal - The access point through\
    \ which a\n      reconstituted FC Frame and time stamp leave an FCIP Data Engine\
    \ to\n      the FC Entity.\n   FC/FCIP Entity pair - The combination of one FC\
    \ Entity and one FCIP\n      entity.\n   FCIP Data Engine (FCIP_DE) - The component\
    \ of an FCIP Entity that\n      handles FC Frame encapsulation, de-encapsulation,\
    \ and transmission\n      FCIP Frames through a single TCP Connection (see section\
    \ 5.6).\n   FCIP Entity - The entity responsible for the FCIP protocol exchanges\n\
    \      on the IP Network and encompasses FCIP_LEP(s) and FCIP Control and\n  \
    \    Services module (see section 5.4).\n   FCIP Frame - An FC Frame plus the\
    \ FC Frame Encapsulation [19]\n      header, encoded SOF and encoded EOF that\
    \ contains the FC Frame\n      (see section 5.6.1).\n   FCIP Link - One or more\
    \ TCP Connections that connect one FCIP_LEP to\n      another (see section 5.2).\n\
    \   FCIP Link Endpoint (FCIP_LEP) - The component of an FCIP Entity\n      that\
    \ handles a single FCIP Link and contains one or more FCIP_DEs\n      (see section\
    \ 5.5).\n   Encapsulated Frame Receiver Portal - The TCP access point through\n\
    \      which an FCIP Frame is received from the IP Network by an FCIP\n      Data\
    \ Engine.\n   Encapsulated Frame Transmitter Portal - The TCP access point through\n\
    \      which an FCIP Frame is transmitted to the IP Network by an FCIP\n     \
    \ Data Engine.\n   FCIP Special Frame (FSF) - A specially formatted FC Frame containing\n\
    \      information used by the FCIP protocol (see section 7).\n"
- title: 4.  Protocol Summary
  contents:
  - "4.  Protocol Summary\n   The FCIP protocol is summarized as follows:\n   1) The\
    \ primary function of an FCIP Entity is forwarding FC Frames,\n      employing\
    \ FC Frame Encapsulation described in [19].\n   2) Viewed from the IP Network\
    \ perspective, FCIP Entities are peers\n      and communicate using TCP/IP.  Each\
    \ FCIP Entity contains one or\n      more TCP endpoints in the IP-based network.\n\
    \   3) Viewed from the FC Fabric perspective, pairs of FCIP Entities, in\n   \
    \   combination with their associated FC Entities, forward FC Frames\n      between\
    \ FC Fabric elements.  The FC End Nodes are unaware of the\n      existence of\
    \ the FCIP Link.\n   4) FC Primitive Signals, Primitive Sequences, and Class 1\
    \ FC Frames\n      are not transmitted across an FCIP Link because they cannot\
    \ be\n      encoded using FC Frame Encapsulation [19].\n   5) The path (route)\
    \ taken by an encapsulated FC Frame follows the\n      normal routing procedures\
    \ of the IP Network.\n   6) An FCIP Entity MAY contain multiple FCIP Link Endpoints,\
    \ but each\n      FCIP Link Endpoint (FCIP_LEP) communicates with exactly one\
    \ other\n      FCIP_LEP.\n   7) When multiple FCIP_LEPs with multiple FCIP_DEs\
    \ are in use,\n      selection of which FCIP_DE to use for encapsulating and\n\
    \      transmitting a given FC Frame is covered in FC-BB-2 [3].  FCIP\n      Entities\
    \ do not actively participate in FC Frame routing.\n   8) The FCIP Control and\
    \ Services module MAY use TCP/IP quality of\n      service features (see section\
    \ 10.2).\n   9) It is necessary to statically or dynamically configure each FCIP\n\
    \      entity with the IP addresses and TCP port numbers corresponding to\n  \
    \    FCIP Entities with which it is expected to initiate communication.\n    \
    \  If dynamic discovery of participating FCIP Entities is supported,\n      the\
    \ function SHALL be performed using the Service Location\n      Protocol (SLPv2)\
    \ [17].  It is outside the scope of this\n      specification to describe any\
    \ static configuration method for\n      participating FCIP Entity discovery.\
    \  Refer to section 8.1.2.2 for\n      a detailed description of dynamic discovery\
    \ of participating FCIP\n      Entities using SLPv2.\n  10) Before creating a\
    \ TCP Connection to a peer FCIP Entity, the FCIP\n      Entity attempting to create\
    \ the TCP connection SHALL statically or\n      dynamically determine the IP address,\
    \ TCP port, expected FC Fabric\n      Entity World Wide Name, TCP Connection Parameters,\
    \ and Quality of\n      Service Information.\n  11) FCIP Entities do not actively\
    \ participate in the discovery of FC\n      source and destination identifiers.\
    \  Discovery of FC addresses\n      (accessible via the FCIP Entity) is provided\
    \ by techniques and\n      protocols within the FC architecture as described in\
    \ FC-FS [5] and\n      FC-SW-2 [4].\n  12) To support IP Network security (see\
    \ section 9), FCIP Entities\n      MUST:\n      1) implement cryptographically\
    \ protected authentication and\n         cryptographic data integrity keyed to\
    \ the authentication\n         process, and\n      2) implement data confidentiality\
    \ security features.\n  13) On an individual TCP Connection, this specification\
    \ relies on\n      TCP/IP to deliver a byte stream in the same order that it was\n\
    \      sent.\n  14) This specification assumes the presence of and requires the\
    \ use of\n      TCP and FC data loss and corruption mechanisms.  The error\n \
    \     detection and recovery features described in this specification\n      complement\
    \ and support these existing mechanisms.\n"
- title: 5.  The FCIP Model
  contents:
  - '5.  The FCIP Model

    '
- title: 5.1.  FCIP Protocol Model
  contents:
  - "5.1.  FCIP Protocol Model\n   The relationship between FCIP and other protocols\
    \ is illustrated in\n   figure 1.\n   +------------------------+ FCIP Link +------------------------+\n\
    \   |          FCIP          |===========|          FCIP          |\n   +--------+------+--------+\
    \           +--------+------+--------+\n   |  FC-2  |      |  TCP   |        \
    \   |  TCP   |      |  FC-2  |\n   +--------+      +--------+           +--------+\
    \      +--------+\n   |  FC-1  |      |   IP   |           |   IP   |      | \
    \ FC-1  |\n   +--------+      +--------+           +--------+      +--------+\n\
    \   |  FC-0  |      |  LINK  |           |  LINK  |      |  FC-0  |\n   +--------+\
    \      +--------+           +--------+      +--------+\n        |          | \
    \  PHY  |           |   PHY  |           |\n        |          +--------+    \
    \       +--------+           |\n        |               |                    |\
    \               |\n        |               |     IP Network     |            \
    \   |\n        V               +--------------------+               V\n     to\
    \ Fibre                                             to Fibre\n     Channel   \
    \                                           Channel\n     Fabric             \
    \                                  Fabric\n   Key: FC-0 - Fibre Channel Physical\
    \ Media Layer\n        FC-1 - Fibre Channel Encode and Decode Layer\n        FC-2\
    \ - Fibre Channel Framing and Flow Control Layer\n        TCP  - Transmission\
    \ Control Protocol\n        IP   - Internet Protocol\n        LINK - IP Link Layer\n\
    \        PHY  - IP Physical Layer\n   Figure 1:  FCIP Protocol Stack Model\n \
    \  Note that the objective of the FCIP Protocol is to create and\n   maintain\
    \ one or more FCIP Links to transport data.\n"
- title: 5.2.  FCIP Link
  contents:
  - "5.2.  FCIP Link\n   The FCIP Link is the basic unit of service provided by the\
    \ FCIP\n   Protocol to an FC Fabric.  As shown in figure 2, an FCIP Link\n   connects\
    \ two portions of an FC Fabric using an IP Network as a\n   transport to form\
    \ a single FC Fabric.\n   /\\/\\/\\/\\/\\/\\         /\\/\\/\\/\\/\\/\\      \
    \   /\\/\\/\\/\\/\\/\\\n   \\    FC    /         \\    IP    /         \\    FC\
    \    /\n   /  Fabric  \\=========/  Network \\=========/  Fabric  \\\n   \\/\\\
    /\\/\\/\\/\\/         \\/\\/\\/\\/\\/\\/         \\/\\/\\/\\/\\/\\/\n        \
    \      |                              |\n              |<--------- FCIP Link -------->|\n\
    \   Figure:  2  FCIP Link Model\n   At the points where the ends of the FCIP Link\
    \ meet portions of the FC\n   Fabric, an FCIP Entity (see section 5.4) combines\
    \ with an FC Entity\n   as described in section 5.3 to serve as the interface\
    \ between FC and\n   IP.\n   An FCIP Link SHALL contain at least one TCP Connection\
    \ and MAY\n   contain more than one TCP Connection.  The endpoints of a single\
    \ TCP\n   Connection are FCIP Data Engines (see section 5.6).  The endpoints of\n\
    \   a single FCIP Link are FCIP Link Endpoints (see section 5.5).\n"
- title: 5.3.  FC Entity
  contents:
  - "5.3.  FC Entity\n   An implementation that tunnels an FC Fabric through an IP\
    \ Network\n   MUST combine an FC Entity with an FCIP Entity (see section 5.4)\
    \ to\n   form a complete interface between the FC Fabric and IP Network as\n \
    \  shown in figure 3.  An FC Fabric Entity may contain multiple\n   instances\
    \ of the FC/FCIP Entity pair shown on either the right-hand\n   or left-hand side\
    \ of figure 3.\n              |<--------- FCIP Link -------->|\n             \
    \ |                              |\n   +----------+         /\\/\\/\\/\\/\\/\\\
    \         +----------+\n   |   FCIP   |         \\    IP    /         |   FCIP\
    \   |\n   |  Entity  |=========/  Network \\=========|  Entity  |\n   +----------+\
    \         \\/\\/\\/\\/\\/\\/         +----------+\n   |    FC    |           \
    \                   |    FC    |\n   |  Entity  |                            \
    \  |  Entity  |\n   +----------+                              +----------+\n \
    \       |                                         |\n   /\\/\\/\\/\\/\\/\\   \
    \                           /\\/\\/\\/\\/\\/\\\n   \\    FC    /             \
    \                 \\    FC    /\n   /  Fabric  \\                            \
    \  /  Fabric  \\\n   \\/\\/\\/\\/\\/\\/                              \\/\\/\\\
    /\\/\\/\\/\n   Figure 3:  Model for Two Connected FC/FCIP Entity Pairs\n   In\
    \ general, the combination of an FCIP Link and two FC/FCIP Entity\n   pairs is\
    \ intended to provide a non-Fibre Channel backbone transport\n   between Fibre\
    \ Channel components.  For example, this combination can\n   be used to function\
    \ as the hard-wire connection between two Fibre\n   Channel switches.\n   The\
    \ interface between the FC and FCIP Entities is implementation\n   specific. \
    \ The functional requirements placed on an FC Entity by this\n   specification\
    \ are listed in appendix H.  More information about FC\n   Entities can be found\
    \ in the Fibre Channel standards and an example\n   of an FC Entity can be found\
    \ in FC-BB-2 [3].\n"
- title: 5.4.  FCIP Entity
  contents:
  - "5.4.  FCIP Entity\n   The model for an FCIP Entity is shown in figure 4.\n  \
    \  .......................................................\n    : FCIP Entity\
    \                                         :\n    :                           \
    \                          :\n    :  +-----------+                           \
    \           :\n    :  |   FCIP    |                                      :\n \
    \   :  |Control and|------------------------------------+ :\n    :  | Services\
    \  |                                    | :\n    :  |  Module   |            \
    \                        | :\n    :  +-----------+                           \
    \         | :\n    :        |            +--------------------+        | :\n \
    \   :        |   +-------+--------------------+|----+   | :\n    :        |  \
    \ |+-----+--------------------+|----+|   | :\n    :        |   ||+----| FCIP Link\
    \ Endpoint |----+||   | :\n    :        |   |||    +--------------------+    |||\
    \   | :\n    :.............................................|||.....:\n       \
    \      |   |||                              |||   |\n             |   |||    \
    \                          |||   o<--+\n             |   |||                unique\
    \ TCP    |||   |   |\n             |   |||                connections-->|||  \
    \ |   |\n             |   |||                              |||   |   |\n     \
    \     +----------+                         /\\/\\/\\/\\/\\/\\ |\n          | \
    \   FC    |                         \\    IP    / |\n          |  Entity  |  \
    \                       /  Network \\ |\n          +----------+              \
    \           \\/\\/\\/\\/\\/\\/ |\n               |                           \
    \                 |\n          /\\/\\/\\/\\/\\/\\                   +------------------+\n\
    \          \\    FC    /                   +->TCP port for\n          /  Fabric\
    \  \\                      incoming\n          \\/\\/\\/\\/\\/\\/            \
    \          connections\n    Figure 4:  FCIP Entity Model\n   The FCIP Entity receives\
    \ TCP connect requests on behalf of the\n   FCIP_LEPs that it manages.  In support\
    \ of this, the FCIP Entity is\n   the sole owner of at least one TCP port/IP Address\
    \ combination used\n   to form TCP Connections.  The TCP port may be the FCIP\
    \ well known\n   port at a given IP Address.  An FC Fabric to IP Network interface\n\
    \   product SHALL provide each FC/FCIP Entity pair contained in the\n   product\
    \ with a unique combination of FC Fabric Entity World Wide\n   Identifier and\
    \ FC/FCIP Entity Identifier values (see section 7).\n   An FCIP Entity contains\
    \ an FCIP Control and Services Module to\n   control FCIP link initialization,\
    \ FCIP link dissolution, and to\n   provide the FC Entity with an interface to\
    \ key IP Network features.\n   The interfaces to the IP Network features are implementation\n\
    \   specific, however, REQUIRED TCP/IP functional support is specified in\n  \
    \ this document, including:\n   -  TCP Connections - see section 8\n   -  Security\
    \ - see section 9\n   -  Performance - see section 10\n   -  Dynamic Discovery\
    \ - see section 8.1.2.2\n   The FCIP Link Endpoints in an FCIP Entity provide\
    \ the FC Frame\n   encapsulation and transmission features of FCIP.\n"
- title: 5.5.  FCIP Link Endpoint (FCIP_LEP)
  contents:
  - "5.5.  FCIP Link Endpoint (FCIP_LEP)\n   As shown in figure 5, the FCIP Link Endpoint\
    \ contains one FCIP Data\n   Engine for each TCP Connection in the FCIP Link.\n\
    \    ................................................\n    : FCIP Link Endpoint\
    \                           :\n    :                   +------------------+  \
    \     :\n    :          +-------+------------------+|----+  :\n    :         \
    \ |+-----+------------------+|----+|  :\n    :          ||+----| FCIP Data Engine\
    \ |----+||  :\n    :          |||    +------------------+    |||  :\n    :..............................................:\n\
    \               |||                            |||\n          +----------+   \
    \                 /\\/\\/\\/\\/\\/\\\n          |    FC    |                 \
    \   \\    IP    /\n          |  Entity  |                    /  Network \\\n \
    \         +----------+                    \\/\\/\\/\\/\\/\\/\n               \
    \ |\n          /\\/\\/\\/\\/\\/\\\n          \\    FC    /\n          /  Fabric\
    \  \\\n          \\/\\/\\/\\/\\/\\/\n   Figure 5:  FCIP Link Endpoint Model\n\
    \   Each time a TCP Connection is formed with a new FC/FCIP Entity pair\n   (including\
    \ all the actions described in section  8.1), the FCIP\n   Entity SHALL create\
    \ a new FCIP Link Endpoint containing one FCIP Data\n   Engine.\n   An FCIP_LEP\
    \ is a transparent data translation point between an FC\n   Entity and an IP Network.\
    \  A pair of FCIP_LEPs communicating over one\n   or more TCP Connections create\
    \ an FCIP Link to join two islands of an\n   FC Fabric, producing a single FC\
    \ Fabric.\n   The IP Network over which the two FCIP_LEPs communicate is not aware\n\
    \   of the FC payloads that it is carrying.  Likewise, the FC End Nodes\n   connected\
    \ to the FC Fabric are unaware of the TCP/IP based transport\n   employed in the\
    \ structure of the FC Fabric.\n   An FCIP_LEP uses normal TCP based flow control\
    \ mechanisms for\n   managing its internal resources and matching them with the\
    \ advertised\n   TCP Receiver Window Size (see sections 8.3.2, 8.5).  An FCIP_LEP\
    \ MAY\n   communicate with its local FC Entity counterpart to coordinate flow\n\
    \   control.\n"
- title: 5.6.  FCIP Data Engine (FCIP_DE)
  contents:
  - "5.6.  FCIP Data Engine (FCIP_DE)\n   The model for one of the multiple FCIP_DEs\
    \ that MAY be present in an\n   FCIP_LEP is shown in figure 6.\n        +--------------------------------+\n\
    \        |                                |\n   F    |-+    +------------------+\
    \    +-|\n   C    |p|    |  Encapsulation   |    |p|    N\n     -->|1|--->|  \
    \   Engine       |--->|2|--> e\n   E    |-+    +------------------+    +-|   \
    \ t\n   n    |                                |  I w\n   t    |-+    +------------------+\
    \    +-|  P o\n   i    |p|    | De-Encapsulation |    |p|    r\n   t <--|4|<---|\
    \     Engine       |<---|3|<-- k\n   y    |-+    +------------------+    +-|\n\
    \        |                                |\n        +--------------------------------+\n\
    \   Figure 6:  FCIP Data Engine Model\n   Data enters and leaves the FCIP_DE through\
    \ four portals (p1 - p4).\n   The portals do not process or examine the data that\
    \ passes through\n   them.  They are only the named access points where the FCIP_DE\n\
    \   interfaces with the external world.  The names of the portals are as\n   follows:\n\
    \   p1) FC Frame Receiver Portal - The interface through which an FC\n       Frame\
    \ and time stamp enters an FCIP_DE from the FC Entity.\n   p2) Encapsulated Frame\
    \ Transmitter Portal - The TCP interface through\n       which an FCIP Frame is\
    \ transmitted to the IP Network by an\n       FCIP_DE.\n   p3) Encapsulated Frame\
    \ Receiver Portal - The TCP interface through\n       which an FCIP Frame is received\
    \ from the IP Network by an\n       FCIP_DE.\n   p4) FC Frame Transmitter Portal\
    \ - The interface through which a\n       reconstituted FC Frame and time stamp\
    \ exits an FCIP_DE to the FC\n       Entity.\n   The work of the FCIP_DE is done\
    \ by the Encapsulation and De-\n   Encapsulation Engines.  The Engines have two\
    \ functions:\n   1) Encapsulating and de-encapsulating FC Frames using the\n \
    \     encapsulation format described in FC Frame Encapsulation [19] and\n    \
    \  in section 5.6.1 of this document, and\n   2) Detecting some data transmission\
    \ errors and performing minimal\n      error recovery as described in section\
    \ 5.6.2.\n   Data flows through a pair of IP Network connected FCIP_DEs in the\n\
    \   following seven steps:\n   1) An FC Frame and time stamp arrives at the FC\
    \ Frame Receiver Portal\n      and is passed to the Encapsulation Engine.  The\
    \ FC Frame is\n      assumed to have been processed by the FC Entity according\
    \ to the\n      applicable FC rules and is not validated by the FCIP_DE.  If the\n\
    \      FC Entity is in the Unsynchronized state with respect to a time\n     \
    \ base as described in the FC Frame Encapsulation [19]\n      specification, the\
    \ time stamp delivered with the FC Frame SHALL be\n      zero.\n   2) In the Encapsulation\
    \ Engine, the encapsulation format described in\n      FC Frame Encapsulation\
    \ [19] and in section 5.6.1 of this document\n      SHALL be applied to prepare\
    \ the FC Frame and associated time stamp\n      for transmission over the IP Network.\n\
    \   3) The entire encapsulated FC Frame (a.k.a. the FCIP Frame) SHALL be\n   \
    \   passed to the Encapsulated Frame Transmitter Portal where it SHALL\n     \
    \ be inserted in the TCP byte stream.\n   4) Transmission of the FCIP Frame over\
    \ the IP Network follows all the\n      TCP rules of operation.  This includes,\
    \ but is not limited to, the\n      in-order delivery of bytes in the stream,\
    \ as specified by TCP [6].\n   5) The FCIP Frame arrives at the partner FCIP Entity\
    \ where it enters\n      the FCIP_DE through the Encapsulated Frame Receiver Portal\
    \ and is\n      passed to the De-Encapsulation Engine for processing.\n   6) The\
    \ De-Encapsulation Engine SHALL validate the incoming TCP byte\n      stream as\
    \ described in section 5.6.2.2 and SHALL de-encapsulate\n      the FC Frame and\
    \ associated time stamp according to the\n      encapsulation format described\
    \ in FC Frame Encapsulation [19] and\n      in section 5.6.1 of this document.\n\
    \   7) In the absence of errors, the de-encapsulated FC Frame and time\n     \
    \ stamp SHALL be passed to the FC Frame Transmitter Portal for\n      delivery\
    \ to the FC Entity.  Error handling is discussed in section\n      5.6.2.2.\n\
    \   Every FC Frame that arrives at the FC Frame Receiver Portal SHALL be\n   transmitted\
    \ on the IP Network as described in steps 1 through 4\n   above.  In the absence\
    \ of errors, data bytes arriving at the\n   Encapsulated Frame Receiver Portal\
    \ SHALL be de-encapsulated and\n   forwarded to the FC Frame Transmitter Portal\
    \ as described in steps 5\n   through 7.\n"
- title: 5.6.1.  FCIP Encapsulation of FC Frames
  contents:
  - "5.6.1.  FCIP Encapsulation of FC Frames\n   The FCIP encapsulation of FC Frames\
    \ employs FC Frame Encapsulation\n   [19].\n   The features from FC Frame Encapsulation\
    \ that are unique to\n   individual protocols SHALL be applied as follows for\
    \ the FCIP\n   encapsulation of FC Frames.\n   The Protocol# field SHALL contain\
    \ 1 in accordance with the IANA\n   Considerations annex of FC Frame Encapsulation\
    \ [19].\n   The Protocol Specific field SHALL have the format shown in figure\
    \ 7.\n   Note: the word numbers in figure 7 are relative to the complete FC\n\
    \   Frame Encapsulation header, not to the Protocol Specific field.\n   W|------------------------------Bit------------------------------|\n\
    \   o|                                                               |\n   r|\
    \                    1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3|\n   d|0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1|\n    +---------------------------------------------------------------+\n\
    \   1|               replication of encapsulation word 0             |\n    +---------------+---------------+---------------+---------------+\n\
    \   2|    pFlags     |    Reserved   |    -pFlags    |  -Reserved    |\n    +---------------+---------------+---------------+---------------+\n\
    \   Figure 7:  FCIP Usage of FC Frame Encapsulation Protocol Specific\n   field\n\
    \   Word 1 of the Protocol Specific field SHALL contain an exact copy of\n   word\
    \ 0 in FC Frame Encapsulation [19].\n   The pFlags (protocol specific flags) field\
    \ provides information about\n   the protocol specific usage of the FC Encapsulation\
    \ Header.  Figure 8\n   shows the defined pFlags bits.\n   |----------------Bit--------------------|\n\
    \   |                                       |\n   |  0    1    2    3    4   \
    \ 5    6    7 |\n   +----+-----------------------------+----+\n   | Ch |     \
    \     Reserved           | SF |\n   +----+-----------------------------+----+\n\
    \   Figure 8:  pFlags Field Bits\n   The SF (Special Frame) bit indicates whether\
    \ the FCIP Frame is an\n   encapsulated FC Frame or an FSF (FCIP Special Frame,\
    \ see section 7).\n   When the FCIP Frame contains an encapsulated FC Frame, the\
    \ SF bit\n   SHALL be 0.  When the FCIP Frame is an FSF, the SF bit SHALL be 1.\n\
    \   The FSF SHALL only be sent as the first bytes transmitted in each\n   direction\
    \ on a newly formed TCP Connection and only one FSF SHALL be\n   transmitted in\
    \ each direction at that time (see section 8.1).  After\n   that all FCIP Frames\
    \ SHALL have the SF bit set to 0.\n   The Ch (Changed) bit indicates whether an\
    \ echoed FSF has been\n   intentionally altered (see section 8.1.3).  The Ch bit\
    \ SHALL be 0\n   unless the FSF bit is 1.  When the initial TCP Connection FSF\
    \ is\n   sent, the Ch bit SHALL be 0.  If the recipient of a TCP connect\n   request\
    \ echoes the FSF without any changes, then the Ch bit SHALL\n   continue to be\
    \ 0.  If the recipient of a TCP connect request alters\n   the FSF before echoing\
    \ it, then the Ch bit SHALL be changed to 1.\n   The -pFlags field SHALL contain\
    \ the ones complement of the contents\n   of the pFlags field.\n   Table 1 summarizes\
    \ the usage of the pFlags SF and Ch bits.\n   +----+----+------------+--------------------------------------+\n\
    \   |    |    | Originated |                                      |\n   | SF |\
    \ Ch | or Echoed  | Validity/Description                 |\n   +----+----+------------+--------------------------------------+\n\
    \   |  0 |  0 |    n/a     | Encapsulated FC Frame                |\n   +----+----+------------+--------------------------------------+\n\
    \   |  0 |  1 |    n/a     | Always Illegal                       |\n   +----+----+------------+--------------------------------------+\n\
    \   |  1 |  0 | Originated | Originated FSF                       |\n   +----+----+------------+--------------------------------------+\n\
    \   |  1 |  1 | Originated | Always Illegal                       |\n   +----+----+------------+--------------------------------------+\n\
    \   |  1 |  0 |   Echoed   | Echoed FSF without changes           |\n   +----+----+------------+--------------------------------------+\n\
    \   |  1 |  1 |   Echoed   | Echoed FSF with changes              |\n   +----+----+------------+--------------------------------------+\n\
    \   | Note 1: Echoed FSFs may contain changes resulting from      |\n   | transmission\
    \ errors, necessitating the comparison between   |\n   | sent and received FSF\
    \ bytes by the FSF originator described |\n   | in section 8.1.2.3.          \
    \                               |\n   |                                      \
    \                       |\n   | Note 2: Column positions in this table do not\
    \ reflect the   |\n   | bit positions of the SF and Ch bits in the pFlags field.\
    \    |\n   +-------------------------------------------------------------+\n \
    \  Table 1:  pFlags SF and Ch bit usage summary\n   The Reserved pFlags bits SHALL\
    \ be 0.\n   The Reserved field (bits 23-16 in word 2): SHALL contain 0.\n   The\
    \ -Reserved field (bits 7-0 in word 2): SHALL contain 255 (or\n   0xFF).\n   The\
    \ CRCV (CRC Valid) Flag SHALL be set to 0.\n   The CRC field SHALL be set to 0.\n\
    \   In FCIP, the SOF and EOF codes listed as Class 2, Class 3, and Class\n   4\
    \ in the FC Frame Encapsulation [19] are legal.\n"
- title: 5.6.2.  FCIP Data Engine Error Detection and Recovery
  contents:
  - '5.6.2.  FCIP Data Engine Error Detection and Recovery

    '
- title: 5.6.2.1.  TCP Assistance With Error Detection and Recovery
  contents:
  - "5.6.2.1.  TCP Assistance With Error Detection and Recovery\n   TCP [6] requires\
    \ in order delivery, generation of TCP checksums, and\n   checking of TCP checksums.\
    \  Thus, the byte stream passed from TCP to\n   the FCIP_LEP will be in order\
    \ and free of errors detectable by the\n   TCP checksum.  The FCIP_LEP relies\
    \ on TCP to perform these functions.\n"
- title: 5.6.2.2.  Errors in FCIP Headers and Discarding FCIP Frames
  contents:
  - "5.6.2.2.  Errors in FCIP Headers and Discarding FCIP Frames\n   Bytes delivered\
    \ through the Encapsulated Frame Receiver Portal that\n   are not correctly delimited\
    \ as defined by the FC Frame Encapsulation\n   [19] are considered to be in error.\n\
    \   The failure of the Protocol# and Version fields in the FCIP Frame\n   header\
    \ to contain the values defined for an FCIP Frame SHALL be\n   considered an error.\n\
    \   Further, some errors in the encapsulation will result in the FCIP_DE\n   losing\
    \ synchronization with the FC Frames in the byte stream entering\n   through the\
    \ Encapsulated Frame Receiver Portal.\n   The Frame Length field in the FC Frame\
    \ Encapsulation header is used\n   to determine where in the data stream the next\
    \ FC Encapsulated Header\n   is located.  The following tests SHALL be performed\
    \ to verify\n   synchronization with the byte stream entering the Encapsulated\
    \ Frame\n   Receiver Portal, and synchronization SHALL be considered lost if any\n\
    \   of the tests fail:\n   1) Frame Length field validation -- 15 < Frame Length\
    \ < 545;\n   2) Comparison of Frame Length field to its ones complement; and\n\
    \   3) A valid EOF is found in the word preceding the start of the next\n    \
    \  FCIP header as indicated by the Frame Length field, to be tested\n      as\
    \ follows:\n      1) Bits 24-31 and 16-23 contain identical legal EOF values (the\n\
    \         list of legal EOF values is in the FC Frame Encapsulation\n        \
    \ [19]); and\n      2) Bits 8-15 and 0-7 contain the ones complement of the EOF\
    \ value\n         found in bits 24-31.\n   Note: The range of valid Frame Length\
    \ values is derived as follows.\n   The FCIP Frame header is seven words, one\
    \ word each is required for\n   the encoded SOF and EOF values, the FC Frame header\
    \ is six words, and\n   the FC CRC requires one word, yielding a base Frame Length\
    \ of 16\n   (7+1+1+6+1) words, if no FC Payload is present.  Since the FC Payload\n\
    \   is optional, any Frame Length value greater than 15 is valid.  The\n   maximum\
    \ FC Payload size is 528 words, meaning that any Frame Length\n   value up to\
    \ and including 544 (528+16) is valid.\n   If synchronization is lost, the FC\
    \ Frame SHALL NOT be forwarded on to\n   the FC Entity and further recovery SHALL\
    \ be handled as defined by\n   section 5.6.2.3.\n   In addition to the tests above,\
    \ the validity and positioning of the\n   following FCIP Frame information SHOULD\
    \ be used to detect\n   encapsulation errors that may or may not affect synchronization:\n\
    \      a)  Protocol# ones complement field (1 test);\n      b)  Version ones complement\
    \ field (1 test);\n      c)  Replication of encapsulation word 0 in word 1 (1\
    \ test);\n      d)  Reserved field and its ones complement (2 tests);\n      e)\
    \  Flags field and its ones complement (2 tests);\n      f)  CRC field is equal\
    \ to zero (1 test);\n      g)  SOF fields and ones complement fields (4 tests);\n\
    \      h)  Format and values of FC header (1 test);\n      i)  CRC of FC Frame\
    \ (2 tests);\n      j)  FC Frame Encapsulation header information in the next\
    \ FCIP\n          Frame (1 test).\n   At least 3 of the 16 tests listed above\
    \ SHALL be performed.  Failure\n   of any of the above tests actually performed\
    \ SHALL indicate an\n   encapsulation error and the FC Frame SHALL NOT be forwarded\
    \ on to the\n   FC Entity.  Further, such errors SHOULD be considered carefully,\n\
    \   since some may be synchronization errors.\n   Whenever an FCIP_DE discards\
    \ bytes delivered through the Encapsulated\n   Frame Receiver Portal, it SHALL\
    \ cause the FCIP Entity to notify the\n   FC Entity of the condition and provide\
    \ a suitable description of the\n   reason bytes were discarded.\n   The burden\
    \ for recovering from discarded data falls on the FC Entity\n   and other components\
    \ of the FC Fabric, and is outside the scope of\n   this specification.\n"
- title: 5.6.2.3.  Synchronization Failures
  contents:
  - "5.6.2.3.  Synchronization Failures\n   If an FCIP_DE determines that it cannot\
    \ find the next FCIP Frame\n   header in the byte stream entering through the\
    \ Encapsulated Frame\n   Receiver Portal, the FCIP_DE SHALL do one of the following:\n\
    \   a) close the TCP Connection [6] [7] and notify the FC Entity with the\n  \
    \    reason for the closure;\n   b) recover synchronization by searching the bytes\
    \ delivered by the\n      Encapsulated Frame Receiver Portal for a valid FCIP\
    \ Frame header\n      having the correct properties (see section 5.6.2.2), and\n\
    \      discarding bytes delivered by the Encapsulated Frame Receiver\n      Portal\
    \ until a valid FCIP Frame header is found; or\n   c) attempt to recover synchronization\
    \ as described in b) and if\n      synchronization cannot be recovered, close\
    \ the TCP Connection as\n      described in a), including notification of the\
    \ FC Entity with the\n      reason for the closure.\n   If the FCIP_DE attempts\
    \ to recover synchronization, the\n   resynchronization algorithm used SHALL meet\
    \ the following\n   requirements:\n   a) discard or identify with an EOFa (see\
    \ appendix section F.1) those\n      FC Frames and fragments of FC Frames identified\
    \ before\n      synchronization has again been completely verified.  The number\
    \ of\n      FC Frames not forwarded may vary based on the algorithm used;\n  \
    \ b) return to forwarding FC Frames through the FC Frame Transmitter\n      Portal\
    \ only after synchronization on the transmitted FCIP Frame\n      stream has been\
    \ verified; and\n   c) close the TCP/IP connection if the algorithm ends without\n\
    \      verifying successful synchronization.  The probability of failing\n   \
    \   to synchronize successfully and the time necessary to determine\n      whether\
    \ or not synchronization was successful may vary with the\n      algorithm used.\n\
    \   An example algorithm meeting these requirements can be found in\n   appendix\
    \ D.\n   The burden for recovering from the discarding of FCIP Frames during\n\
    \   the optional resynchronization process described in this section\n   falls\
    \ on the FC Entity and other components of the FC Fabric, and is\n   outside the\
    \ scope of this specification.\n"
- title: 6.  Checking FC Frame Transit Times in the IP Network
  contents:
  - "6.  Checking FC Frame Transit Times in the IP Network\n   FC-BB-2 [3] defines\
    \ how the measurement of IP Network transit time is\n   performed, based on the\
    \ requirements stated in the FC Frame\n   Encapsulation [19] specification.  The\
    \ choice to place this\n   implementation requirement on the FC Entity is based\
    \ on a desire to\n   include the transit time through the FCIP Entities when computing\
    \ the\n   IP Network transit time experienced by the FC Frames.\n   Each FC Frame\
    \ that enters the FCIP_DE through the FC Frame Receiver\n   Portal SHALL be accompanied\
    \ by a time stamp value that the FCIP_DE\n   SHALL place in the Time Stamp [integer]\
    \ and Time Stamp [fraction]\n   fields of the encapsulation header of the FCIP\
    \ Frame that contains\n   the FC Frame.  If no synchronized time stamp value is\
    \ available to\n   accompany the entering FC Frame, a value of zero SHALL be used.\n\
    \   Each FC Frame that exits the FCIP_DE through the FC Frame Transmitter\n  \
    \ Portal SHALL be accompanied by the time stamp value taken from the\n   FCIP\
    \ Frame that encapsulated the FC Frame.\n   The FC Entity SHALL use suitable internal\
    \ clocks and either Fibre\n   Channel services or an SNTP Version 4 server [26]\
    \ to establish and\n   maintain the required synchronized time value.  The FC\
    \ Entity SHALL\n   verify that the FC Entity it is communicating with on an FCIP\
    \ Link is\n   using the same synchronized time source, either Fibre Channel\n\
    \   services or SNTP server.\n   Note that since the FC Fabric is expected to\
    \ have a single\n   synchronized time value throughout, reliance on the Fibre\
    \ Channel\n   services means that only one synchronized time value is needed for\n\
    \   all FCIP_DEs regardless of their connection characteristics.\n"
- title: 7.  The FCIP Special Frame (FSF)
  contents:
  - '7.  The FCIP Special Frame (FSF)

    '
- title: 7.1.  FCIP Special Frame Format
  contents:
  - "7.1.  FCIP Special Frame Format\n   Figure 9 shows the FSF format.\n    W|------------------------------Bit------------------------------|\n\
    \    o|                                                               |\n    r|\
    \                    1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3|\n    d|0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1|\n     +---------------+---------------+---------------+---------------+\n\
    \    0|   Protocol#   |    Version    |  -Protocol#   |   -Version    |\n    \
    \ |    (0x01)     |    (0x01)     |     (0xFE)    |    (0xFE)     |\n     +---------------+---------------+---------------+---------------+\n\
    \    1|   Protocol#   |    Version    |  -Protocol#   |   -Version    |\n    \
    \ |    (0x01)     |    (0x01)     |     (0xFE)    |    (0xFE)     |\n     +---------------+---------------+---------------+---------------+\n\
    \    2|    pFlags     |    Reserved   |    -pFlags    |  -Reserved    |\n    \
    \ |               |     (0x00)    |               |    (0xFF)     |\n     +-----------+---+---------------+-----------+---+---------------+\n\
    \    3|   Flags   |   Frame Length    |   -Flags  |   -Frame Length   |\n    \
    \ | (0b000000)|  (0b0000010011)   | (0b111111)|   (0b1111101100)  |\n     +-----------+-------------------+-----------+-------------------+\n\
    \    4|                      Time Stamp [integer]                     |\n    \
    \ +---------------------------------------------------------------+\n    5|  \
    \                    Time Stamp [fraction]                    |\n     +---------------------------------------------------------------+\n\
    \    6|                     CRC (Reserved in FCIP)                    |\n    \
    \ |                        (0x00-00-00-00)                        |\n     +-------------------------------+-------------------------------+\n\
    \    7|           Reserved            |          -Reserved            |\n    \
    \ |           (0x00-00)           |          (0xFF-FF)            |\n     +-------------------------------+-------------------------------+\n\
    \    8|                                                               |\n    \
    \ +-----        Source FC Fabric Entity World Wide Name      -----+\n    9|  \
    \                                                             |\n     +---------------------------------------------------------------+\n\
    \   10|                                                               |\n    \
    \ +-----           Source FC/FCIP Entity Identifier          -----+\n   11|  \
    \                                                             |\n     +---------------------------------------------------------------+\n\
    \   12|                                                               |\n    \
    \ +-----                   Connection Nonce                  -----+\n   13|  \
    \                                                             |\n     +---------------+---------------+-------------------------------+\n\
    \                               (Continued)\n   Figure 9:  FSF Format (part 1\
    \ of 2)\n    W|------------------------------Bit------------------------------|\n\
    \    o|                                                               |\n    r|\
    \                    1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3|\n    d|0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1|\n     |         \
    \                                                      |\n     |             \
    \             (Concluded)                          |\n     +---------------------------------------------------------------+\n\
    \   14|   Connection  |    Reserved   |    Connection Usage Code      |\n    \
    \ |  Usage Flags  |     (0x00)    |     <defined in FC-BB-2>      |\n     +---------------+---------------+-------------------------------+\n\
    \   15|                                                               |\n    \
    \ +-----    Destination FC Fabric Entity World Wide Name     -----+\n   16|  \
    \                                                             |\n     +---------------------------------------------------------------+\n\
    \   17|                            K_A_TOV                            |\n    \
    \ +-------------------------------+-------------------------------+\n   18|  \
    \         Reserved            |          -Reserved            |\n     |      \
    \     (0x00-00)           |          (0xFF-FF)            |\n     +-------------------------------+-------------------------------+\n\
    \   Figure 9: FSF Format (part 2 of 2)\n   The FSF SHALL only be sent as the first\
    \ bytes transmitted in each\n   direction on a newly formed TCP Connection, and\
    \ only one FSF SHALL be\n   transmitted in each direction.\n   The contents of\
    \ the FSF SHALL be as described for encapsulated FC\n   Frames, except for the\
    \ fields described in this section.\n   All FSFs SHALL have the pFlags SF bit\
    \ set to 1 (see section 5.6.1).\n   The Source FC Fabric Entity World Wide Name\
    \ field SHALL contain the\n   Fibre Channel Name_Identifier [5] for the FC Fabric\
    \ entity associated\n   with the FC/FCIP Entity pair that generates (as opposed\
    \ to echoes)\n   the FSF.  For example, if the FC Fabric entity is a FC Switch,\
    \ the FC\n   Fabric Entity World Wide Name field SHALL contain the Switch_Name\n\
    \   [4].  The Source FC Fabric Entity World Wide Name SHALL be world wide\n  \
    \ unique.\n   The Source FC/FCIP Entity Identifier field SHALL contain a unique\n\
    \   identifier for the FC/FCIP Entity pair that generates (as opposed to\n   echoes)\
    \ the FSF.  The value is assigned by the FC Fabric entity whose\n   world wide\
    \ name appears in the Source FC Fabric Entity World Wide\n   Name field.\n   Note:\
    \ The combination of the Source FC Entity World Wide Name and\n   Source FC/FCIP\
    \ Entity Identifier fields uniquely identifies every\n   FC/FCIP Entity pair in\
    \ the IP Network.\n   The Connection Nonce field shall contain a 64-bit random\
    \ number\n   generated to uniquely identify a single TCP connect request.  In\n\
    \   order to provide sufficient security for the connection nonce, the\n   Randomness\
    \ Recommendations for Security [9] SHOULD be followed.\n   The Connection Usage\
    \ Flags field identifies the types of SOF values\n   [19] to be carried on the\
    \ connection as shown in figure 10.\n   |------------------------------Bit------------------------------|\n\
    \   |                                                               |\n   |  \
    \  0      1       2       3       4       5       6       7   |\n   +-------+-------+-------+-------+-------------------------------+\n\
    \   |  SOFf | SOF?2 | SOF?3 | SOF?4 |            Reserved           |\n   +-------+-------+-------+-------+-------------------------------+\n\
    \   Figure 10:  Connection Usage Flags Field Format\n   If the SOFf bit is one,\
    \ then FC Frames containing SOFf are intended\n   to be carried on the connection.\n\
    \   If the SOF?2 bit is one, then FC Frames containing SOFi2 and SOFn2\n   are\
    \ intended to be carried on the connection.\n   If the SOF?3 bit is one, then\
    \ FC Frames containing SOFi3 and SOFn3\n   are intended to be carried on the connection.\n\
    \   If the SOF?4 bit is one, then FC Frames containing SOFi4, SOFn4, and\n   SOFc4\
    \ are intended to be carried on the connection.\n   All or none of the SOFf, SOF?2,\
    \ SOF?3, and SOF?4 bits MAY be set to\n   one.  If all of the SOFf, SOF?2, SOF?3,\
    \ and SOF?4 bits are zero, then\n   the types of FC Frames intended to be carried\
    \ on the connection have\n   no specific relationship to the SOF code.\n   The\
    \ FCIP Entity SHALL NOT enforce the SOF usage described by the\n   Connection\
    \ Usage Flags field and SHALL only use the contents of the\n   field as described\
    \ below.\n   The Connection Usage Code field contains Fibre Channel defined\n\
    \   information regarding the intended usage of the connection as\n   specified\
    \ in FC-BB-2 [3].\n   The FCIP Entity SHALL use the contents of the Connection\
    \ Usage Flags\n   and Connection Usage Code fields to locate appropriate QoS settings\n\
    \   in the \"shared\" database of TCP Connection information (see section\n  \
    \ 8.1.1) and apply those settings to a newly formed connection.\n   The Destination\
    \ FC Fabric Entity World Wide Name field MAY contain\n   the Fibre Channel Name_Identifier\
    \ [5] for the FC Fabric entity\n   associated with the FC/FCIP Entity pair that\
    \ echoes (as opposed to\n   generates) the Special Frame.\n   The K_A_TOV field\
    \ SHALL contain the FC Keep Alive Timeout value to be\n   applied to the new TCP\
    \ Connection as specified in FC-BB-2 [3].\n   For each new incoming TCP connect\
    \ request and subsequent FSF\n   received, the FCIP Entity SHALL send the contents\
    \ of the Source FC\n   Fabric Entity World Wide Name, Source FC/FCIP Identifier,\
    \ Connection\n   Usage Flags and Connection Usage Code fields to the FC Entity\
    \ along\n   with the other connection information (e.g., FCIP_LEP and FCIP_DE\n\
    \   information).\n"
- title: 7.2.  Overview of FSF Usage in Connection Establishment
  contents:
  - "7.2.  Overview of FSF Usage in Connection Establishment\n   When a new TCP Connection\
    \ is established, an FCIP Special Frame makes\n   one round trip from the FCIP\
    \ Entity initiating the TCP connect\n   operation to the FCIP Entity receiving\
    \ the TCP connect request and\n   back.  This FSF usage serves three functions:\n\
    \   -  Identification of the FCIP Link endpoints\n   -  Conveyance of a few critical\
    \ parameters shared by the FC/FCIP\n      Entity pairs involved in the FCIP Link\n\
    \   -  Configuration discovery (used in place of SLP only when allowed by\n  \
    \    site security policies)\n   The specific format and protocol requirements\
    \ for this usage of the\n   FSF are found in sections 7.1 and 8.1.2.3.  This section\
    \ provides an\n   overview of the FSF usage without stating requirements.\n  \
    \ Because FCIP is only a tunnel for a Fibre Channel Fabric and because\n   the\
    \ Fabric has its own complex link setup algorithm that can be\n   employed for\
    \ many FCIP link setup needs, it is desirable to minimize\n   the complexity of\
    \ the FSF usage during TCP Connection setup.  With\n   this in mind, this FSF\
    \ usage is not a login or parameter negotiation\n   mechanism.  A single FSF transits\
    \ each newly established TCP\n   connection as the first bytes sent in each direction.\n\
    \   Note: This usage of the FSF cannot be eliminated entirely because a\n   newly\
    \ created TCP Connection must be associated with the correct FCIP\n   Link before\
    \ FC Fabric initialization of the connection can commence.\n   The first bytes\
    \ sent from the TCP connect request initiator to the\n   receiver are an FSF identifying\
    \ both the sender and who the sender\n   thinks is the receiver.  If the contents\
    \ of this FSF are correct and\n   acceptable to the receiver, the unchanged FSF\
    \ is echoed back to the\n   sender.  This send/echo process is the only set of\
    \ actions that\n   allows the TCP Connection to be used to carry FC Fabric traffic.\
    \  If\n   the send and unchanged echo process does not occur, the algorithm\n\
    \   followed at one or both ends of the TCP Connection results in the\n   closure\
    \ of the TCP Connection (see section 8.1 for specific algorithm\n   requirements).\n\
    \   Note: Owing to the limited manner in which the FSF is used and the\n   requirement\
    \ that the FSF be echoed without changes before a TCP\n   Connection is allowed\
    \ to carry user data, no error checking beyond\n   that provided by TCP is deemed\
    \ necessary.\n   As described above, the primary purpose of the FSF usage during\
    \ TCP\n   Connection setup is identifying the FCIP Link to which the new TCP\n\
    \   Connection belongs.  From these beginnings, it is only a small\n   stretch\
    \ to envision using the FSF as a simplified configuration\n   discovery tool,\
    \ and the mechanics of such a usage are described in\n   section 8.1.\n   However,\
    \ use of the FSF for configuration discovery lacks the broad\n   range of capabilities\
    \ provided by SLPv2 and most particularly lacks\n   the security capabilities\
    \ of SLPv2.  For these reasons, using the FSF\n   for configuration discovery\
    \ is not appropriate for all environments.\n   Thus the choice to use the FSF\
    \ for discovery purposes is a policy\n   choice to be included in the TCP Connection\
    \ Establishment \"shared\"\n   database described in section 8.1.1.\n   When FSF-based\
    \ configuration discovery is enabled, the normal TCP\n   Connection setup rules\
    \ outlined above are modified as follows.\n   Normally, the algorithm executed\
    \ by an FCIP Entity receiving an FSF\n   includes verifying that its own identification\
    \ information in the\n   arriving FSF is correct and closing the TCP Connection\
    \ if it is not.\n   This can be viewed as requiring the initiator of a TCP connect\n\
    \   request to know in advance the identity of the FCIP Entity that is\n   the\
    \ target of that request (using SLP, for example), and through the\n   FSF effectively\
    \ saying, \"I think I'm talking to X.\"  If the party at\n   the other end of\
    \ the TCP connect request is really Y, then it simply\n   hangs up.\n   FSF-based\
    \ discovery allows the \"I think I'm talking to X\" to be\n   replaced with \"\
    Please tell me who I am talking to?\", which is\n   accomplished by replacing\
    \ an explicit value in the Destination FC\n   Fabric Entity World Wide Name field\
    \ with zero.\n   If the policy at the receiving FCIP Entity allows FSF-based\n\
    \   discovery, the zero is replaced with the correct Destination FC\n   Fabric\
    \ Entity World Wide Name value in the echoed FSF.  This is still\n   subject to\
    \ the rules of sending with unchanged echo, and so closure\n   of TCP Connection\
    \ occurs after the echoed FSF is received by the TCP\n   connect initiator.\n\
    \   Despite the TCP Connection closure, however, the TCP connect\n   initiator\
    \ now knows the correct Destination FC Fabric Entity World\n   Wide Name identity\
    \ of the FCIP Entity at a given IP Address and a\n   subsequent TCP Connection\
    \ setup sequence probably will be successful.\n   The Ch bit in the pFlags field\
    \ (see section 5.6.1) allows for\n   differentiation between changes in the FSF\
    \ resulting from\n   transmission errors and changes resulting from intentional\
    \ acts by\n   the FSF recipient.\n"
- title: 8.  TCP Connection Management
  contents:
  - '8.  TCP Connection Management

    '
- title: 8.1.  TCP Connection Establishment
  contents:
  - '8.1.  TCP Connection Establishment

    '
- title: 8.1.1.  Connection Establishment Model
  contents:
  - "8.1.1.  Connection Establishment Model\n   The description of the connection\
    \ establishment process is a model\n   for the interactions between an FC Entity\
    \ and an FCIP Entity during\n   TCP Connection establishment.  The model is written\
    \ in terms of a\n   \"shared\" database that the FCIP Entity consults to determine\
    \ the\n   properties of the TCP Connections to be formed combined with routine\n\
    \   calls to the FC Entity when connections are successfully established.\n  \
    \ Whether the FC Entity contributes information to the \"shared\"\n   database\
    \ is not critical to this model.  However, the fact that the\n   FCIP Entity MAY\
    \ consult the database at any time to determine its\n   actions relative to TCP\
    \ Connection establishment is important.\n   It is important to remember that\
    \ this description is only a model for\n   the interactions between an FC Entity\
    \ and an FCIP Entity.  Any\n   implementation that has the same effects on the\
    \ FC Fabric and IP\n   Network as those described using the model meets the requirements\
    \ of\n   this specification.  For example, an implementation might replace the\n\
    \   \"shared\" database with a routine interface between the FC and FCIP\n   Entities.\n"
- title: 8.1.2.  Creating New TCP Connections
  contents:
  - '8.1.2.  Creating New TCP Connections

    '
- title: 8.1.2.1.  Non-Dynamic Creation of New TCP Connections
  contents:
  - "8.1.2.1.  Non-Dynamic Creation of New TCP Connections\n   When an FCIP Entity\
    \ discovers that a new TCP Connection needs to be\n   established, it SHALL determine\
    \ the IP Address to which the TCP\n   Connection is to be made and establish all\
    \ enabled IP security\n   features for that IP Address as described in section\
    \ 9.  Then the\n   FCIP Entity SHALL determine the following information about\
    \ the new\n   connection in addition to the IP Address:\n   -  The expected Destination\
    \ FC Fabric Entity World Wide Name of the\n      FC/FCIP Entity pair to which\
    \ the TCP Connection is being made\n   -  TCP Connection Parameters (see section\
    \ 8.3)\n   -  Quality of Service Information (see section 10)\n   Based on this\
    \ information, the FCIP Entity SHALL generate a TCP\n   connect request [6] to\
    \ the FCIP Well-Known Port of 3225 (or other\n   configuration specific port number)\
    \ at the specified IP Address.\n   If the TCP connect request is rejected, the\
    \ FCIP Entity SHALL act to\n   limit unnecessary repetition of attempts to establish\
    \ similar\n   connections.  For example, the FCIP Entity might wait 60 seconds\n\
    \   before trying to re-establish the connection.\n   If the TCP connect request\
    \ is accepted, the FCIP Entity SHALL follow\n   the steps described in section\
    \ 8.1.2.3 to complete the establishment\n   of a new FCIP_DE.\n   It is RECOMMENDED\
    \ that an FCIP Entity not initiate TCP connect\n   requests to another FCIP Entity\
    \ if incoming TCP connect requests from\n   that FCIP Entity have already been\
    \ accepted.\n"
- title: 8.1.2.2.  Dynamic Creation of New TCP Connections
  contents:
  - "8.1.2.2.  Dynamic Creation of New TCP Connections\n   If dynamic discovery of\
    \ participating FCIP Entities is supported, the\n   function SHALL be performed\
    \ using the Service Location Protocol\n   (SLPv2) [17] in the manner defined for\
    \ FCIP usage [20].\n   Upon discovering that dynamic discovery is to be used,\
    \ the FCIP\n   Entity SHALL enable IP security features for the SLP discovery\n\
    \   process as described in [20] and then:\n   1) Determine the one or more FCIP\
    \ Discovery Domain(s) to be used in\n      the dynamic discovery process;\n  \
    \ 2) Establish an SLPv2 Service Agent to advertise the availability of\n     \
    \ this FCIP Entity to peer FCIP Entities in the identified FCIP\n      Discovery\
    \ Domain(s); and\n   3) Establish an SLPv2 User Agent to locate service advertisements\
    \ for\n      peer FCIP Entities in the identified FCIP Discovery Domain(s).\n\
    \   For each peer FCIP Entity dynamically discovered through the SLPv2\n   User\
    \ Agent, the FCIP Entity SHALL establish all enabled IP security\n   features\
    \ for the discovered IP Address as described in section 9 and\n   then determine\
    \ the following information about the new connection:\n   -  The expected Destination\
    \ FC Fabric Entity World Wide Name of the\n      FC/FCIP Entity pair to which\
    \ the TCP Connection is being made\n   -  TCP Connection Parameters (see section\
    \ 8.3)\n   -  Quality of Service Information (see section 10)\n   Based on this\
    \ information, the FCIP Entity SHALL generate a TCP\n   connect request [6] to\
    \ the FCIP Well-Known Port of 3225 (or other\n   configuration specific port number)\
    \ at the IP Address specified by\n   the service advertisement.  If the TCP connect\
    \ request is rejected,\n   act to limit unnecessary repetition of attempts to\
    \ establish similar\n   connections.  If the TCP connect request is accepted,\
    \ the FCIP Entity\n   SHALL follow the steps described in section 8.1.2.3 to complete\
    \ the\n   establishment of a new FCIP_DE.\n   It is recommended that an FCIP Entity\
    \ not initiate TCP connect\n   requests to another FCIP Entity if incoming TCP\
    \ connect requests from\n   that FCIP Entity have already been accepted.\n"
- title: 8.1.2.3.  Connection Setup After a Successful TCP Connect Request
  contents:
  - "8.1.2.3.  Connection Setup After a Successful TCP Connect Request\n   Whether\
    \ Non-Dynamic TCP Connection creation (see section 8.1.2.1) or\n   Dynamic TCP\
    \ Connection creation (see section 8.1.2.2) is used, the\n   steps described in\
    \ this section SHALL be followed to take the TCP\n   Connection setup process\
    \ to completion.\n   After the TCP connect request has been accepted, the FCIP\
    \ Entity\n   SHALL send an FCIP Special Frame (FSF, see section 7) as the first\n\
    \   bytes transmitted on the newly formed connection, and retain a copy\n   of\
    \ those bytes for later comparisons.  All fields in the FSF SHALL be\n   filled\
    \ in as described in section 7, particularly:\n   -  The Source FC Fabric Entity\
    \ World Wide Name field SHALL contain\n      the FC Fabric Entity World Wide Name\
    \ for the FC/FCIP Entity pair\n      that is originating the TCP connect request;\n\
    \   -  The Source FC/FCIP Entity Identifier field SHALL contain a unique\n   \
    \   identifier that is assigned by the FC Fabric entity whose world\n      wide\
    \ name appears in the Source FC Fabric Entity World Wide Name\n      field;\n\
    \   -  The Connection Nonce field SHALL contain a 64-bit random number\n     \
    \ that differs in value from any recently used Connection Nonce\n      value.\
    \  In order to provide sufficient security for the connection\n      nonce, the\
    \ Randomness Recommendations for Security [9] SHOULD be\n      followed; and\n\
    \   -  The Destination FC Fabric Entity World Wide Name field SHALL\n      contain\
    \ 0 or the expected FC Fabric Entity World Wide Name for the\n      FC/FCIP Entity\
    \ pair whose destination is the TCP connect request.\n   After the FSF is sent\
    \ on the newly formed connection, the FCIP Entity\n   SHALL wait for the FSF to\
    \ be echoed as the first bytes received on\n   the newly formed connection.\n\
    \   The FCIP Entity MAY apply a timeout of not less than 90 seconds while\n  \
    \ waiting for the echoed FSF bytes.  If the timeout expires, the FCIP\n   Entity\
    \ SHALL close the TCP Connection and notify the FC Entity with\n   the reason\
    \ for the closure.\n   If the echoed FSF bytes do not exactly match the FSF bytes\
    \ sent\n   (words 7 through 17 inclusive) or if the echoed Destination FC Fabric\n\
    \   Entity World Wide Name field contains zero, the FCIP Entity SHALL\n   close\
    \ the TCP Connection and notify the FC Entity with the reason for\n   the closure.\n\
    \   The FCIP Entity SHALL only perform the following steps if the echoed\n   FSF\
    \ bytes exactly match the FSF bytes sent (words 7 through 17\n   inclusive).\n\
    \   1) Instantiate the appropriate Quality of Service (see section 10)\n     \
    \ conditions on the newly created TCP Connection,\n   2) If the IP Address and\
    \ TCP Port to which the TCP Connection was\n      made is not associated with\
    \ any other FCIP_LEP, create a new\n      FCIP_LEP for the new FCIP Link,\n  \
    \ 3) Create a new FCIP_DE within the newly created FCIP_LEP to service\n     \
    \ the new TCP Connection, and\n   4) Inform the FC Entity of the new FCIP_LEP,\
    \ FCIP_DE, Destination FC\n      Fabric Entity World Wide Name, Connection Usage\
    \ Flags, and\n      Connection Usage Code.\n"
- title: 8.1.3.  Processing Incoming TCP Connect Requests
  contents:
  - "8.1.3.  Processing Incoming TCP Connect Requests\n   The FCIP Entity SHALL listen\
    \ for new TCP Connection requests [6] on\n   the FCIP Well-Known Port (3225).\
    \  An FCIP Entity MAY also accept and\n   establish TCP Connections to a TCP port\
    \ number other than the FCIP\n   Well-Known Port, as configured by the network\
    \ administrator in a\n   manner outside the scope of this specification.\n   The\
    \ FCIP Entity SHALL determine the following information about the\n   requested\
    \ connection:\n   -  Whether the \"shared\" database (see section 8.1.1) allows\
    \ the\n      requested connection\n   -  Whether IP security setup has been performed\
    \ for the IP security\n      features enabled on the connection (see section 9)\n\
    \   If the requested connection is not allowed, the FCIP Entity SHALL\n   reject\
    \ the connect request using appropriate TCP means.  If the\n   requested connection\
    \ is allowed, the FC Entity SHALL ensure that\n   required IP security features\
    \ are enabled and accept the TCP connect\n   request.\n   After the TCP connect\
    \ request has been accepted, the FCIP Entity\n   SHALL wait for the FSF sent by\
    \ the originator of the TCP connect\n   request (see section 8.1.2) as the first\
    \ bytes received on the\n   accepted connection.\n   The FCIP Entity MAY apply\
    \ a timeout of no less than 90 seconds while\n   waiting for the FSF bytes. If\
    \ the timeout expires, the FCIP Entity\n   SHALL close the TCP Connection and\
    \ notify the FC Entity with the\n   reason for the closure.\n   Note: One method\
    \ for attacking the security of the FCIP Link\n   formation process (detailed\
    \ in section 9.1) depends on keeping a TCP\n   connect request open without sending\
    \ an FSF.  Implementations should\n   bear this in mind in the handling of TCP\
    \ connect requests where the\n   FSF is not sent in a timely manner.\n   Upon\
    \ receipt of the FSF sent by the originator of the TCP connect\n   request, the\
    \ FCIP Entity SHALL inspect the contents of the following\n   fields:\n   -  Connection\
    \ Nonce,\n   -  Destination FC Fabric Entity World Wide Name,\n   -  Connection\
    \ Usage Flags, and\n   -  Connection Usage Code.\n   If the Connection Nonce field\
    \ contains a value identical to the most\n   recently received Connection Nonce\
    \ from the same IP Address, the FCIP\n   Entity SHALL close the TCP Connection\
    \ and notify the FC Entity with\n   the reason for the closure.\n   If an FCIP\
    \ Entity receives a duplicate FSF during the FCIP Link\n   formation process,\
    \ it SHALL close that TCP Connection and notify the\n   FC Entity with the reason\
    \ for the closure.\n   If the Destination FC Fabric Entity World Wide Name contains\
    \ 0, the\n   FCIP Entity SHALL take one of the following three actions:\n   1)\
    \ Leave the Destination FC Fabric Entity World Wide Name field and\n      Ch bit\
    \ both 0;\n   2) Change the Destination FC Fabric Entity World Wide Name field\
    \ to\n      match FC Fabric Entity World Wide Name associated with the FCIP\n\
    \      Entity that received the TCP connect request and change the Ch bit\n  \
    \    to 1; or\n   3) Close the TCP Connection without sending any response.\n\
    \   The choice between the above actions depends on the anticipated usage\n  \
    \ of the FCIP Entity.  The FCIP Entity may consult the \"shared\"\n   database\
    \ when choosing between the above actions.\n   If:\n   a) The Destination FC Fabric\
    \ Entity World Wide Name contains a non-\n      zero value that does not match\
    \ the FC Fabric Entity World Wide\n      Name associated with the FCIP Entity\
    \ that received the TCP connect\n      request, or\n   b) The contents of the\
    \ Connection Usage Flags and Connection Usage\n      Code fields is not acceptable\
    \ to the FCIP Entity that received the\n      TCP connect request, then the FCIP\
    \ Entity SHALL take one of the\n      following two actions:\n      1) Change\
    \ the contents of the unacceptable fields to correct/\n         acceptable values\
    \ and set the Ch bit to 1; or\n      2) Close the TCP Connection without sending\
    \ any response.\n   If the FCIP Entity makes any changes in the content of the\
    \ FSF, it\n   SHALL also set the Ch bit to 1.\n   If any changes have been made\
    \ in the received FSF during the\n   processing described above, the following\
    \ steps SHALL be performed:\n   1) The changed FSF SHALL be echoed to the originator\
    \ of the TCP\n      connect request as the only bytes transmitted on the accepted\n\
    \      connection;\n   2) The TCP Connection SHALL be closed (the FC Entity need\
    \ not be\n      notified of the TCP Connection closure in this case because it\
    \ is\n      not indicative of an error); and\n   3) All of the additional processing\
    \ described in this section SHALL\n      be skipped.\n   The remaining steps in\
    \ this section SHALL be performed only if the\n   FCIP Entity has not changed\
    \ the contents of the above mentioned\n   fields to correct/acceptable values.\n\
    \   If the Source FC Fabric Entity World Wide Name and Source FC/FCIP\n   Entity\
    \ Identifier field values in the FSF do not match the Source FC\n   Fabric Entity\
    \ World Wide Name and Source FC/FCIP Entity Identifier\n   associated with any\
    \ other FCIP_LEP, the FCIP Entity SHALL:\n   1) Echo the unchanged FSF to the\
    \ originator of the TCP connect\n      request as the first bytes transmitted\
    \ on the accepted connection;\n   2) Instantiate the appropriate Quality of Service\
    \ (see section 10.2)\n      conditions on the newly created TCP Connection, considering\
    \ the\n      Connection Usage Flags and Connection Usage Code fields, and\n  \
    \    \"shared\" database information (see section 8.1.1) as appropriate,\n   3)\
    \ Create a new FCIP_LEP for the new FCIP Link,\n   4) Create a new FCIP_DE within\
    \ the newly created FCIP_LEP to service\n      the new TCP Connection, and\n \
    \  5) Inform the FC Entity of the new FCIP_LEP, FCIP_DE, Source FC\n      Fabric\
    \ Entity World Wide Name, Source FC/FCIP Entity Identifier,\n      Connection\
    \ Usage Flags, and Connection Usage Code.\n   If the Source FC Fabric Entity World\
    \ Wide Name and Source FC/FCIP\n   Entity Identifier field values in the FCIP\
    \ Special Frame match the\n   Source FC Fabric Entity World Wide Name and Source\
    \ FC/FCIP Entity\n   Identifier associated with an existing FCIP_LEP, the FCIP\
    \ Entity\n   SHALL:\n   1) Request that the FC Entity authenticate the source\
    \ of the TCP\n      connect request (see FC-BB-2 [3]), providing the following\n\
    \      information to the FC Entity for authentication purposes:\n      a) Source\
    \ FC Fabric Entity World Wide Name,\n      b) Source FC/FCIP Entity Identifier,\
    \ and\n      c) Connection Nonce.\n      The FCIP Entity SHALL NOT use the new\
    \ TCP Connection for any\n      purpose until the FC Entity authenticates the\
    \ source of the TCP\n      connect request.  If the FC Entity indicates that the\
    \ TCP connect\n      request cannot be properly authenticated, the FCIP Entity\
    \ SHALL\n      close the TCP Connection and skip all of the remaining steps in\n\
    \      this section.\n      The definition of the FC Entity SHALL include an authentication\n\
    \      mechanism for use in response to a TCP connect request source that\n  \
    \    communicates with the partner FC/FCIP Entity pair on an existing\n      FCIP\
    \ Link.  This authentication mechanism should use a previously\n      authenticated\
    \ TCP Connection in the existing FCIP Link to\n      authenticate the Connection\
    \ Nonce sent in the new TCP Connection\n      setup process.  The FCIP Entity\
    \ SHALL treat failure of this\n      authentication as an authentication failure\
    \ for the new TCP\n      Connection setup process.\n   2) Echo the unchanged FSF\
    \ to the originator of the TCP connect\n      request as the first bytes transmitted\
    \ on the accepted connection;\n   3) Instantiate the appropriate Quality of Service\
    \ (see section 10.2)\n      conditions on the newly created TCP Connection, considering\
    \ the\n      Connection Usage Flags and Connection Usage Code fields, and\n  \
    \    \"shared\" database information (see section 8.1.1) as appropriate,\n   4)\
    \ Create a new FCIP_DE within the existing FCIP_LEP to service the\n      new\
    \ TCP Connection, and\n   5) Inform the FC Entity of the FCIP_LEP, Source FC Fabric\
    \ Entity\n      World Wide Name, Source FC/FCIP Entity Identifier, Connection\n\
    \      Usage Flags, Connection Usage Code, and new FCIP_DE.\n   Note that the\
    \ originator of TCP connect requests uses the IP Address\n   and TCP Port to identify\
    \ which TCP Connections belong to which\n   FCIP_LEPs while the recipient of TCP\
    \ connect requests uses the Source\n   FC Fabric Entity World Wide Name, and Source\
    \ FC/FCIP Entity\n   Identifier fields from the FSF to identify which TCP Connection\n\
    \   belong to which FCIP_LEPs.  For this reason, an FCIP Entity that both\n  \
    \ originates and receives TCP connect requests is unable to match the\n   FCIP_LEPs\
    \ associated with originated TCP connect requests to the\n   FCIP_LEPs associated\
    \ with received TCP connect requests.\n"
- title: 8.1.4.  Simultaneous Connection Establishment
  contents:
  - "8.1.4.  Simultaneous Connection Establishment\n   If two FCIP Entities perform\
    \ simultaneous open operations, then two\n   TCP Connections are formed and the\
    \ SF originates at one end on one\n   connection and at the other end on the other.\
    \  Connection setup\n   proceeds as described above on both connections, and the\
    \ steps\n   described above properly result in the formation of two FCIP Links\n\
    \   between the same FCIP Entities.\n   This is not an error.  Fibre Channel is\
    \ perfectly capable of handling\n   two approximately equal connections between\
    \ FC Fabric elements.\n   The decision to setup pairs of FCIP Links in this manner\
    \ is\n   considered to be a site policy decision that can be covered in the\n\
    \   \"shared\" database described in section 8.1.1.\n"
- title: 8.2.  Closing TCP Connections
  contents:
  - "8.2.  Closing TCP Connections\n   The FCIP Entity SHALL provide a mechanism with\
    \ acknowledgement by\n   which the FC Entity is able to cause the closing of an\
    \ existing TCP\n   Connection at any time.  This allows the FC Entity to close\
    \ TCP\n   Connections that are producing too many errors, etc.\n"
- title: 8.3.  TCP Connection Parameters
  contents:
  - "8.3.  TCP Connection Parameters\n   In order to provide efficient management\
    \ of FCIP_LEP resources as\n   well as FCIP Link resources, consideration of certain\
    \ TCP Connection\n   parameters is recommended.\n"
- title: 8.3.1.  TCP Selective Acknowledgement Option
  contents:
  - "8.3.1.  TCP Selective Acknowledgement Option\n   The Selective Acknowledgement\
    \ option RFC 2883 [18] allows the\n   receiver to acknowledge multiple lost packets\
    \ in a single ACK,\n   enabling faster recovery.  An FCIP Entity MAY negotiate\
    \ use of TCP\n   SACK and use it for faster recovery from lost packets and holes\
    \ in\n   TCP sequence number space.\n"
- title: 8.3.2.  TCP Window Scale Option
  contents:
  - "8.3.2.  TCP Window Scale Option\n   The TCP Window Scale option [8] allows TCP\
    \ window sizes larger than\n   16-bit limits to be advertised by the receiver.\
    \  It is necessary to\n   allow data in long fat networks to fill the available\
    \ pipe.  This\n   also implies buffering on the TCP sender that matches the\n\
    \   (bandwidth*delay) product of the TCP Connection.  An FCIP_LEP uses\n   locally\
    \ available mechanisms to set a window size that matches the\n   available local\
    \ buffer resources and the desired throughput.\n"
- title: 8.3.3.  Protection Against Sequence Number Wrap
  contents:
  - "8.3.3.  Protection Against Sequence Number Wrap\n   It is RECOMMENDED that FCIP\
    \ Entities implement protection against\n   wrapped sequence numbers PAWS [8].\
    \  It is quite possible that within\n   a single connection, TCP sequence numbers\
    \ wrap within a timeout\n   window.\n"
- title: 8.3.4.  TCP_NODELAY Option
  contents:
  - "8.3.4.  TCP_NODELAY Option\n   FCIP Entities should disable the Nagle Algorithm\
    \ as described in RFC\n   1122 [7] section 4.2.3.4.  By tradition, this can be\
    \ accomplished by\n   setting the TCP_NODELAY option to one at the local TCP interface.\n"
- title: 8.4.  TCP Connection Considerations
  contents:
  - "8.4.  TCP Connection Considerations\n   In idle mode, a TCP Connection \"keep\
    \ alive\" option of TCP is normally\n   used to keep a connection alive.  However,\
    \ this timeout is fairly\n   large and may prevent early detection of loss of\
    \ connectivity.  In\n   order to facilitate faster detection of loss of connectivity,\
    \ FC\n   Entities SHOULD implement some form of Fibre Channel connection\n   failure\
    \ detection (see FC-BB-2 [3]).\n   When an FCIP Entity discovers that TCP connectivity\
    \ has been lost,\n   the FCIP Entity SHALL notify the FC Entity of the failure\
    \ including\n   information about the reason for the failure.\n"
- title: 8.5.  Flow Control Mapping between TCP and FC
  contents:
  - "8.5.  Flow Control Mapping between TCP and FC\n   The FCIP Entity and FC Entity\
    \ are connected to the IP Network and FC\n   Fabric, respectively, and they need\
    \ to follow the flow control\n   mechanisms of both TCP and FC, which work independently\
    \ of each\n   other.\n   This section provides guidelines as to how the FCIP Entity\
    \ can map\n   TCP flow control to status notifications to the FC Entity.\n   There\
    \ are two scenarios in which the flow control management becomes\n   crucial:\n\
    \   1) When there is line speed mismatch between the FC and IP\n      interfaces.\n\
    \      Even though it is RECOMMENDED that both of the FC and IP\n      interfaces\
    \ to the FC Entity and FCIP Entity, respectively, be of\n      comparable speeds,\
    \ it is possible to carry FC traffic over an IP\n      Network that has a different\
    \ line speed and bit error rate.\n   2) When the FC Fabric or IP Network encounters\
    \ congestion.\n      Even when both the FC Fabric or IP network are of comparable\n\
    \      speeds, during the course of operation, the FC Fabric or the IP\n     \
    \ Network could encounter congestion due to transient conditions.\n   The FC Entity\
    \ uses Fibre Channel mechanisms for flow control at the\n   FC Frame Receiver\
    \ Portal based on information supplied by the FCIP\n   Entity regarding flow constraints\
    \ at the Encapsulated Frame\n   Transmitter Portal.  The FCIP Entity uses TCP\
    \ mechanisms for flow\n   control at the Encapsulated Frame Receiver Portal based\
    \ on\n   information supplied by the FC Entity regarding flow constraints at\n\
    \   the FC Frame Transmitter Portal.\n   Coordination of these flow control mechanisms,\
    \ one of which is credit\n   based and the other of which is window based, depends\
    \ on a\n   painstaking design that is outside the scope of this specification.\n"
- title: 9.  Security
  contents:
  - "9.  Security\n   FCIP utilizes the IPsec protocol suite to provide data\n   confidentiality\
    \ and authentication services, and IKE as the key\n   management protocol.  This\
    \ section describes the requirements for\n   various components of these protocols\
    \ as used by FCIP, based on FCIP\n   operating environments.  Additional consideration\
    \ for use of IPsec\n   and IKE with the FCIP protocol can be found in [21].  In\
    \ the event\n   that requirements in [21] conflict with requirements stated in\
    \ this\n   document, the requirements in this document SHALL prevail.\n"
- title: 9.1.  Threat Models
  contents:
  - "9.1.  Threat Models\n   Using a general purpose, wide-area network, such as an\
    \ IP Network, as\n   a functional replacement for physical cabling introduces\
    \ some\n   security problems not normally encountered in Fibre Channel Fabrics.\n\
    \   FC interconnect cabling is typically protected physically from\n   outside\
    \ access.  Public IP Networks allow hostile parties to impact\n   the security\
    \ of the transport infrastructure.\n   The general effect is that the security\
    \ of an FC Fabric is only as\n   good as the security of the entire IP Network\
    \ that carries the FCIP\n   Links used by that FC Fabric.  The following broad\
    \ classes of attacks\n   are possible:\n   1) Unauthorized Fibre Channel elements\
    \ can gain access to resources\n      through normal Fibre Channel Fabric and\
    \ processes.  Although this\n      is a valid threat, securing the Fibre Channel\
    \ Fabrics is outside\n      the scope of this document.  Securing the IP Network\
    \ is the issue\n      considered in this specification.\n   2) Unauthorized agents\
    \ can monitor and manipulate Fibre Channel\n      traffic flowing over physical\
    \ media used by the IP Network and\n      accessible to the agent.\n   3) TCP\
    \ Connections may be hijacked and used to instantiate an invalid\n      FCIP Link\
    \ between two peer FCIP Entities.\n   4) Valid and invalid FCIP Frames may be\
    \ injected on the TCP\n      Connections.\n   5) The payload of an FCIP Frame\
    \ may be altered or transformed.  The\n      TCP checksum, FCIP ones complement\
    \ checks, and FC frame CRC do not\n      protect against this because all of them\
    \ can be modified or\n      regenerated by a malicious and determined adversary.\n\
    \   6) Unauthorized agents can masquerade as valid FCIP Entities and\n      disturb\
    \ proper operation of the Fibre Channel Fabric.\n   7) Denial of Service attacks\
    \ can be mounted by injecting TCP\n      Connection requests and other resource\
    \ exhaustion operations.\n   8) An adversary may launch a variety of attacks against\
    \ the discovery\n      process [17].\n   9) An attacker may exploit the FSF authentication\
    \ mechanism of the\n      FCIP Link formation process (see section 8.1.3).  The\
    \ attacker\n      could observe the FSF contents sent on an initial connection\
    \ of an\n      FCIP Link and use the observed nonce, Source FC/FCIP Entity\n \
    \     Identifier, and other FSF contents to form an FCIP Link using the\n    \
    \  attacker's own previously established connection, while\n      resetting/blocking\
    \ the observed connection.  Although the use of\n      timeout for reception of\
    \ FSF reduces the risk of this attack, such\n      an attack is possible.  See\
    \ section 9.3.1 to protect against this\n      specific attack.\n   The existing\
    \ IPsec Security Architecture and protocol suite [10]\n   offers protection from\
    \ these threats.  An FCIP Entity MUST implement\n   portions of the IPsec protocol\
    \ suite as described in this section.\n"
- title: 9.2.  FC Fabric and IP Network Deployment Models
  contents:
  - "9.2.  FC Fabric and IP Network Deployment Models\n   In the context of enabling\
    \ a secure FCIP tunnel between FC SANs, the\n   following characteristics of the\
    \ IP Network deployment are useful to\n   note.\n   1) The FCIP Entities share\
    \ a peer-to-peer relationship.  Therefore,\n      the administration of security\
    \ policies applies to all FCIP\n      Entities in an equal manner.  This differs\
    \ from a true Client-\n      Server relationship, where there is an inherent difference\
    \ in how\n      security policies are administered.\n   2) Policy administration\
    \ as well as security deployment and\n      configuration are constrained to the\
    \ set of FCIP Entities, thereby\n      posing less of a requirement on a scalable\
    \ mechanism.  For\n      example, the validation of credentials can be relaxed\
    \ to the point\n      where deploying a set of pre-shared keys is a viable technique.\n\
    \   3) TCP Connections and the IP Network are terminated at the FCIP\n      Entity.\
    \  The granularity of security implementation is at the\n      level of the FCIP\
    \ tunnel endpoint (or FCIP Entity), unlike other\n      applications where there\
    \ is a user-level termination of TCP\n      Connections.  User-level objects are\
    \ not controllable by or\n      visible to FCIP Entities.  All user-level security\
    \ related to FCIP\n      is the responsibility of the Fibre Channel standards\
    \ and is\n      outside the scope of this specification.\n   4) When an FCIP Entity\
    \ is deployed, its IP addresses will typically\n      be statically assigned.\
    \  However, support for dynamic IP address\n      assignment, as described in\
    \ [33], while typically not required,\n      cannot be ruled out.\n"
- title: 9.3.  FCIP Security Components
  contents:
  - "9.3.  FCIP Security Components\n   FCIP Security compliant implementations MUST\
    \ implement ESP and the\n   IPsec protocol suite based cryptographic authentication\
    \ and data\n   integrity [10], as well as confidentiality using algorithms and\n\
    \   transforms as described in this section.  Also, FCIP implementations\n   MUST\
    \ meet the secure key management requirements of IPsec protocol\n   suite.\n"
- title: 9.3.1.  IPsec ESP Authentication and Confidentiality
  contents:
  - "9.3.1.  IPsec ESP Authentication and Confidentiality\n   FCIP Entities MUST implement\
    \ IPsec ESP [12] in Tunnel Mode for\n   providing Data Integrity and Confidentiality.\
    \  FCIP Entities MAY\n   implement IPsec ESP in Transport Mode, if deployment\
    \ considerations\n   require use of Transport Mode.  When ESP is utilized, per-packet\
    \ data\n   origin authentication, integrity, and replay protection MUST be used.\n\
    \   If Confidentiality is not enabled but Data Integrity is enabled, ESP\n   with\
    \ NULL Encryption [15] MUST be used.\n   IPsec ESP for message authentication\
    \ computes a cryptographic hash\n   over the payload that is protected.  While\
    \ IPsec ESP mandates\n   compliant implementations to support certain algorithms\
    \ for deriving\n   this hash, FCIP implementations:\n   -  MUST implement HMAC\
    \ with SHA-1 [11]\n   -  SHOULD implement AES in CBC MAC mode with XCBC extensions\
    \ [23]\n   -  DES in CBC mode SHOULD NOT be used due to inherent weaknesses\n\
    \   For ESP Confidentiality, FCIP Entities:\n   -  MUST implement 3DES in CBC\
    \ mode [16]\n   -  SHOULD implement AES in CTR mode [22]\n   -  MUST implement\
    \ NULL Encryption [15]\n"
- title: 9.3.2.  Key Management
  contents:
  - "9.3.2.  Key Management\n   FCIP Entities MUST support IKE [14] for peer authentication,\n\
    \   negotiation of Security Associations (SA), and Key Management using\n   the\
    \ IPsec DOI [13].  Manual keying SHALL NOT be used for establishing\n   an SA\
    \ since it does not provide the necessary elements for rekeying\n   (see section\
    \ 9.3.3).  Conformant FCIP implementations MUST support\n   peer authentication\
    \ using pre-shared keys and MAY support peer\n   authentication using digital\
    \ certificates.  Peer authentication using\n   public key encryption methods outlined\
    \ in IKE [14] sections 5.2 and\n   5.3 SHOULD NOT be used.\n   IKE Phase 1 establishes\
    \ a secure, MAC-authenticated channel for\n   communications for use by IKE Phase\
    \ 2.  FCIP implementations MUST\n   support IKE Main Mode and SHOULD support Aggressive\
    \ Mode.\n   IKE Phase 1 exchanges MUST explicitly carry the Identification\n \
    \  Payload fields (IDii and IDir).  Conformant FCIP implementations MUST\n   use\
    \ ID_IPV4_ADDR, ID_IPV6_ADDR (if the protocol stack supports IPv6),\n   or ID_FQDN\
    \ Identification Type values.  The ID_USER_FQDN, IP Subnet,\n   IP Address Range,\
    \ ID_DER_ASN1_DN, and ID_DER_ASN1_GN Identification\n   Type values SHOULD NOT\
    \ be used.  The ID_KEY_ID Identification Type\n   values MUST NOT be used.  As\
    \ described in [13], the port and protocol\n   fields in the Identification Payload\
    \ MUST be set to zero or UDP port\n   500.\n   FCIP Entities negotiate parameters\
    \ for SA during IKE Phase 2 only\n   using \"Quick Mode\".  For FCIP Entities\
    \ engaged in IKE \"Quick Mode\",\n   there is no requirement for PFS (Perfect\
    \ Forward Secrecy).  FCIP\n   implementations MUST use either ID_IPV4_ADDR or\
    \ ID_IPV6_ADDR\n   Identification Type values (based on the version of IP supported).\n\
    \   Other Identification Type values MUST NOT be used.\n   Since the number of\
    \ Phase 2 SAs may be limited, Phase 2 delete\n   messages may be sent for idle\
    \ SAs.  The receipt of a Phase 2 delete\n   message SHOULD NOT be interpreted\
    \ as a reason for tearing down an\n   FCIP Link or any of its TCP connections.\
    \  When there is new activity\n   on that idle link, a new Phase 2 SA MUST be\
    \ re-established.\n   For a given pair of FCIP Entities, the same IKE Phase 1\
    \ negotiation\n   can be used for all Phase 2 negotiations; i.e., all TCP Connections\n\
    \   that are bundled into the single FCIP Link can share the same Phase 1\n  \
    \ results.\n   Repeated rekeying using \"Quick Mode\" on the same shared secret\
    \ will\n   reduce the cryptographic properties of that secret over time.  To\n\
    \   overcome this, Phase 1 SHOULD be invoked periodically to create a new\n  \
    \ set of IKE shared secrets and related security parameters.\n   IKE Phase 1 establishment\
    \ requires the following key distribution and\n   FCIP Entities:\n   -  MUST support\
    \ pre-shared IKE keys.\n   -  MAY support certificate-based peer authentication\
    \ using digital\n      signatures.\n   -  SHOULD NOT use peer authentication using\
    \ the public key encryption\n      methods outlined in sections 5.2 and 5.3 of\
    \ [14].\n   When pre-shared keys are used, IKE Main Mode is usable only when both\n\
    \   peers of an FCIP Link use statically assigned IP addresses.  When\n   support\
    \ for dynamically assigned IP Addresses is attempted in\n   conjunction with Main\
    \ Mode, use of group pre-shared keys would be\n   forced, and the use of group\
    \ pre-shared keys in combination with Main\n   Mode is not recommended as it exposes\
    \ the deployed environment to\n   man-in-the-middle attacks.  Therefore, if either\
    \ peer of an FCIP Link\n   uses dynamically assigned addresses, Aggressive Mode\
    \ SHOULD be used\n   and Main Mode SHOULD NOT be used.\n   When Digital Signatures\
    \ are used, either IKE Main Mode or IKE\n   Aggressive Mode may be used.  In all\
    \ cases, access to locally stored\n   secret information (pre-shared key, or private\
    \ key for digital\n   signing) MUST be suitably restricted, since compromise of\
    \ secret\n   information nullifies the security properties of IKE/IPsec protocols.\n\
    \   Such mechanisms are outside the scope of this document.  Support for\n   IKE\
    \ Oakley Groups [27] is not required.\n   For the purpose of establishing a secure\
    \ FCIP Link, the two\n   participating FCIP Entities consult a Security Policy\
    \ Database (SPD).\n   The SPD is described in IPsec [10] Section 4.4.1.  FCIP\
    \ Entities may\n   have more than one interface and IP Address, and it is possible\
    \ for\n   an FCIP Link to contain multiple TCP connections whose FCIP endpoint\n\
    \   IP Addresses are different.  In this case, an IKE Phase 1 SA is\n   established\
    \ for each FCIP endpoint IP Address pair.  Within IKE Phase\n   1, FCIP implementations\
    \ must support the ID_IPV4_ADDR, ID_IPV6_ADDR\n   (if the protocol stack supports\
    \ IPv6), and ID_FQDN Identity Payloads.\n   If FCIP Endpoint addresses are dynamically\
    \ assigned, it may be\n   beneficial to use ID_FQDN, and for this reason, IP_FQDN\
    \ Identity\n   Payload MUST be supported.  Other identity payloads (ID_USER_FQDN,\n\
    \   ID_DER_ASN1_GN, ID_KEY_ID) SHOULD NOT be used.\n   At the end of successful\
    \ IKE negotiations both FCIP Entities store\n   the SA parameters in their SA\
    \ database (SAD).  The SAD is described\n   in IPsec [10] Section 4.4.3.  The\
    \ SAD contains the set of active SA\n   entries, each entry containing Sequence\
    \ Counter Overflow, Sequence\n   Number Counter, Anti-replay Window, and the Lifetime\
    \ of the SA.  FCIP\n   Entities SHALL employ a default SA Lifetime of one hour\
    \ and a default\n   Anti-replay window of 32 sequence numbers.\n   When a TCP\
    \ Connection is established between two FCIP_DEs, two\n   unidirectional SAs are\
    \ created for that connection and each SA is\n   identified in the form of a Security\
    \ Parameter Index (SPI).  One SA\n   is associated with the incoming traffic flow\
    \ and the other SA is\n   associated with the outgoing traffic flow.  The FCIP_DEs\
    \ at each end\n   of the TCP connection MUST maintain the SPIs for both its incoming\n\
    \   and outgoing FCIP Encapsulated Frames.\n   FCIP Entities MAY provide administrative\
    \ management of\n   Confidentiality usage.  These management interfaces SHOULD\
    \ be\n   provided in a secure manner, so as to prevent an attacker from\n   subverting\
    \ the security process by attacking the management\n   interface.\n"
- title: 9.3.3.  ESP Replay Protection and Rekeying Issues
  contents:
  - "9.3.3.  ESP Replay Protection and Rekeying Issues\n   FCIP Entities MUST implement\
    \ Replay Protection against ESP Sequence\n   Number wrap, as described in [14].\
    \  In addition, based on the cipher\n   algorithm and the number of bits in the\
    \ cipher block size, the\n   validity of the key may become compromised.  In both\
    \ cases, the SA\n   needs to be re-established.\n   FCIP Entities MUST use the\
    \ results of IKE Phase 1 negotiation for\n   initiating an IKE Phase 2 \"Quick\
    \ Mode\" exchange and establish new\n   SAs.\n   To enable smooth transition of\
    \ SAs, it is RECOMMENDED that both FCIP\n   Entities refresh the SPI when the\
    \ sequence number counter reaches\n   2^31 (i.e., half the sequence number space).\
    \  It also is RECOMMENDED\n   that the receiver operate with multiple SPIs for\
    \ the same TCP\n   Connection for a period of 2^31 sequence number packets before\
    \ aging\n   out an SPI.\n   When a new SPI is created for the outgoing direction,\
    \ the sending\n   side SHALL begin using it for all new FCIP Encapsulated Frames.\n\
    \   Frames that are either in-flight, or re-sent due to TCP\n   retransmissions,\
    \ etc. MAY use either the new SPI or the one being\n   replaced.\n"
- title: 9.4.  Secure FCIP Link Operation
  contents:
  - '9.4.  Secure FCIP Link Operation

    '
- title: 9.4.1.  FCIP Link Initialization Steps
  contents:
  - "9.4.1.  FCIP Link Initialization Steps\n   FCIP implementations may allow enabling\
    \ and disabling security\n   mechanisms at the granularity of an FCIP Link.  If\
    \ enabled, the\n   following FCIP Link Initialization steps MUST be followed.\n\
    \   When an FCIP Link is initialized, before any FCIP TCP Connections are\n  \
    \ established, the local SPD is consulted to determine if IKE Phase 1\n   has\
    \ been completed with the FCIP Entity in the peer FCIP Entity, as\n   identified\
    \ by the WWN.\n   If Phase 1 is already completed, IKE Phase 2 proceeds.  Otherwise,\n\
    \   IKE Phase 1 MUST be completed before IKE Phase 2 can start.  Both IKE\n  \
    \ Phase 1 and Phase 2 transactions use UDP Port 500.  If IKE Phase 1\n   fails,\
    \ the FCIP Link initialization terminates and notifies the FC\n   entity with\
    \ the reason for the termination.  Otherwise, the FCIP Link\n   initialization\
    \ moves to TCP Connection Initialization.\n   As described in section 8.1, FCIP\
    \ Entities exchange an FSF for\n   forming an FCIP Link.  The use of ESP Confidentiality\
    \ is an effective\n   countermeasure against any perceived security risks of FSF.\n"
- title: 9.4.2.  TCP Connection Security Associations (SAs)
  contents:
  - "9.4.2.  TCP Connection Security Associations (SAs)\n   Each TCP connection MUST\
    \ be protected by an IKE Phase 2 SA.  Traffic\n   from one or more than one TCP\
    \ connection may flow within each IPsec\n   Phase 2 SA.  While it is possible\
    \ for an IKE Phase 2 SA to protect\n   multiple TCP connections, all packets of\
    \ a TCP connection are\n   protected using only one IKE Phase 2 SA.\n   If different\
    \ Quality of Service settings are applied to TCP\n   connections, it is advisable\
    \ to use a different IPsec SA for these\n   connections.  Attempting to apply\
    \ a different quality of service to\n   connections handled by the same IPsec\
    \ SA can result in reordering,\n   and falling outside the replay window.  For\
    \ additional details, see\n   [21].\n   FCIP implementations need not verify that\
    \ the IP addresses and port\n   numbers in the packet match any locally stored\
    \ per-connection values,\n   leaving this check to be performed by the IPsec layer.\n\
    \   An implementation is free to perform several IKE Phase 2 negotiations\n  \
    \ and cache them in its local SPIs, although entries in such a cache\n   can be\
    \ flushed per current SA Lifetime settings.\n"
- title: 9.4.3.  Handling Data Integrity and Confidentiality Violations
  contents:
  - "9.4.3.  Handling Data Integrity and Confidentiality Violations\n   Upon datagram\
    \ reception, when the ESP packet fails an integrity\n   check, the receiver MUST\
    \ drop the datagram, which will trigger TCP\n   retransmission.  If many such\
    \ datagrams are dropped, a receiving FCIP\n   Entity MAY close the TCP Connection\
    \ and notify the FC Entity with the\n   reason for the closure.\n   An implementation\
    \ SHOULD follow guidelines for auditing all auditable\n   ESP events per IPsec\
    \ [10] Section 7.\n   Integrity checks MUST be performed if Confidentiality is\
    \ enabled.\n"
- title: 10.  Performance
  contents:
  - '10.  Performance

    '
- title: 10.1.  Performance Considerations
  contents:
  - "10.1.  Performance Considerations\n   Traditionally, the links between FC Fabric\
    \ components have been\n   characterized by low latency and high throughput. \
    \ The purpose of\n   FCIP is to provide functionality equivalent to these links\
    \ using an\n   IP Network, where low latency and high throughput are not as certain.\n\
    \   It follows that FCIP Entities and their counterpart FC Entities\n   probably\
    \ will be interested in optimal use of the IP Network.\n   Many options exist\
    \ for ensuring high throughput and low latency\n   appropriate for the distances\
    \ involved in an IP Network.  For\n   example, a private IP Network might be constructed\
    \ for the sole use\n   of FCIP Entities.  The options that are within the scope\
    \ of this\n   specification are discussed here.\n   One option for increasing\
    \ the probability that FCIP data streams will\n   experience low latency and high\
    \ throughput is the IP QoS techniques\n   discussed in section 10.2.  This option\
    \ can have value when applied\n   to a single TCP Connection.  Depending on the\
    \ sophistication of the\n   FC Entity, further value may be obtained by having\
    \ multiple TCP\n   Connections with differing QoS characteristics.\n   There are\
    \ many reasons why an FC Entity might request the creation of\n   multiple TCP\
    \ Connections within an FCIP_LEP.  These reasons include a\n   desire to provide\
    \ differentiated services for different TCP data\n   connections between FCIP_LEPs,\
    \ or a preference to separately queue\n   different streams of traffic not having\
    \ a common in-order delivery\n   requirement.\n   At the time a new TCP Connection\
    \ is created, the FC Entity SHALL\n   specify to the FCIP Entity the QoS characteristics\
    \ (including but not\n   limited to IP per-hop-behavior) to be used for the lifetime\
    \ of that\n   connection.  This MAY be achieved by having:\n   a) only one set\
    \ of QoS characteristics for all TCP Connections;\n   b) a default set of QoS\
    \ characteristics that the FCIP Entity applies\n      in the absence of differing\
    \ instructions from the FC Entity; or\n   c) a sophisticated mechanism for exchanging\
    \ QoS requirements\n      information between the FC Entity and FCIP Entity each\
    \ time a new\n      TCP Connection is created.\n   Once established, the QoS characteristics\
    \ of a TCP Connection SHALL\n   NOT be changed, since this specification provides\
    \ no mechanism for\n   the FC Entity to control such changes.  The mechanism for\
    \ providing\n   different QoS characteristics in FCIP is the establishment of\
    \ a\n   different TCP Connections and associated FCIP_DEs.\n   When FCIP is used\
    \ with a network with a large (bandwidth*delay)\n   product, it is RECOMMENDED\
    \ that FCIP_LEPs use the TCP mechanisms\n   (window scaling and wrapped sequence\
    \ protection) for Long Fat\n   Networks (LFNs) as defined in RFC 1323 [24].\n"
- title: 10.2.  IP Quality of Service (QoS) Support
  contents:
  - "10.2.  IP Quality of Service (QoS) Support\n   Many methods of providing QoS\
    \ have been devised or proposed.  These\n   include (but are not limited to) the\
    \ following:\n   -  Multi-Protocol Label Switching (MPLS) -- RFC 3031 [32]\n \
    \  -  Differentiated Services Architecture (diffserv) -- RFC 2474 [28],\n    \
    \  RFC 2475 [29], RFC 2597 [30], and RFC 2598 [31] -- and other forms\n      of\
    \ per-hop-behavior (PHB)\n   -  Integrated Services, RFC 1633 [25]\n   -  IEEE\
    \ 802.1p\n   The purpose of this specification is not to specify any particular\n\
    \   form of IP QoS, but rather to specify only those issues that must be\n   addressed\
    \ in order to maximize interoperability between FCIP\n   equipment that has been\
    \ manufactured by different vendors.\n   It is RECOMMENDED that some form of preferential\
    \ QoS be used for FCIP\n   traffic to minimize latency and packet drops.  No particular\
    \ form of\n   QoS is recommended.\n   If a PHB IP QoS is implemented, it is RECOMMENDED\
    \ that it\n   interoperate with diffserv (see RFC 2474 [28], RFC 2475 [29], RFC\n\
    \   2597 [30], and RFC 2598 [31]).\n   If no form of preferential QoS is implemented,\
    \ the DSCP field SHOULD\n   be set to '000000' to avoid negative impacts on other\
    \ network\n   components and services that may be caused by uncontrolled usage\
    \ of\n   non-zero values of the DSCP field.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   The references in this section were current as\
    \ of the time this\n   specification was approved.  This specification is intended\
    \ to\n   operate with newer versions of the referenced documents and looking\n\
    \   for newer reference documents is recommended.\n   [1]  Bradner, S., \"Key\
    \ words for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [2]  Fibre Channel Backbone (FC-BB), ANSI INCITS.342:2001,\
    \ December\n        12, 2001.\n   [3]  Fibre Channel Backbone -2 (FC-BB-2), ANSI\
    \ INCITS.372:2003, July\n        25, 2003.\n   [4]  Fibre Channel Switch Fabric\
    \ -2 (FC-SW-2), ANSI INCITS.355:2001,\n        December 12, 2001.\n   [5]  Fibre\
    \ Channel Framing and Signaling (FC-FS), ANSI\n        INCITS.373:2003, October\
    \ 27, 2003.\n   [6]  Postel, J., \"Transmission Control Protocol\", STD 7, RFC\
    \ 793,\n        September 1981.\n   [7]  Braden, R., \"Requirements for Internet\
    \ Hosts -- Communication\n        Layers\", STD 3, RFC 1122, October 1989.\n \
    \  [8]  Jacobson, V., Braden, R. and D. Borman, \"TCP Extensions for High\n  \
    \      Performance\", RFC 1323, May 1992.\n   [9]  Eastlake, D., Crocker, S. and\
    \ J. Schiller, \"Randomness\n        Recommendations for Security\", RFC 1750,\
    \ December 1994.\n   [10] Kent, S. and R. Atkinson, \"Security Architecture for\
    \ the\n        Internet Protocol\", RFC 2401, November 1998.\n   [11] Krawczyk,\
    \ H., Bellare, M. and R. Canetti, \"HMAC: Keyed- Hashing\n        for Message\
    \ Authentication\", RFC 2104, February 1997.\n   [12] Kent, S. and R. Atkinson,\
    \ \"IP Encapsulating Security Payload\n        (ESP)\", RFC 2406, November 1998.\n\
    \   [13] Piper, D., \"The Internet IP Security Domain of Interpretation of\n \
    \       ISAKMP\", RFC 2407, November 1998.\n   [14] Harkins, D. and D. Carrel,\
    \ \"The Internet Key Exchange (IKE)\",\n        RFC 2409, November 1998.\n   [15]\
    \ Glenn, R. and S. Kent, \"The NULL Encryption Algorithm and Its\n        Use\
    \ With IPsec\", RFC 2410, November 1998.\n   [16] Pereira, R. and R. Adams, \"\
    The ESP CBC-Mode Cipher Algorithms\",\n        RFC 2451, November 1998.\n   [17]\
    \ Guttman, E., Perkins, C., Veizades, J. and M. Day, \"Service\n        Location\
    \ Protocol, version 2\", RFC 2608, July 1999.\n   [18] Floyd, S., Mahdavi, J.,\
    \ Mathis, M. and M. Podolsky, \"SACK\n        Extension\", RFC 2883, July 2000.\n\
    \   [19] Weber, R., Rajagopal, M., Travostino, F., O'Donnell, M., Monia,\n   \
    \     C. and M. Merhar, \"Fibre Channel (FC) Frame Encapsulation\", RFC\n    \
    \    3643, December 2003.\n   [20] Peterson, D., \"Finding Fibre Channel over\
    \ TCP/IP (FCIP) Entities\n        Using Service Location Protocol version 2 (SLPv2)\"\
    , RFC 3822,\n        July 2004.\n   [21] Aboba, B., Tseng, J., Walker, J., Rangan,\
    \ V. and F. Travostino,\n        \"Securing Block Storage Protocols over IP\"\
    , RFC 3723, April\n        2004.\n   [22] Frankel, S., Glenn, R. and S. Kelly,\
    \ \"The AES-CBC Cipher\n        Algorithm and Its Use with IPsec\", RFC 3602,\
    \ September 2003.\n   [23] Frankel, S. and H. Herbert, \"The AES-XCBC-MAC-96 Algorithm\
    \ and\n        Its Use With IPsec\", RFC 3566, September 2003.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [24] Jacobson, V., Braden, R. and D. Borman,\
    \ \"TCP Extensions for High\n        Performance\", RFC 1323, May 1992.\n   [25]\
    \ Braden, R., Clark, D. and S. Shenker, \"Integrated Services in\n        the\
    \ Internet Architecture: an Overview\", RFC 1633, June 1994.\n   [26] Mills, D.,\
    \ \"Simple Network Time Protocol (SNTP) Version 4 for\n        IPv4, IPv6 and\
    \ OSI\", RFC 2030, October 1996.\n   [27] Orman, H., \"The OAKLEY Key Determination\
    \ Protocol\", RFC 2412,\n        November 1998.\n   [28] Nichols, K., Blake, S.,\
    \ Baker, F. and D. Black, \"Definition of\n        the Differentiated Services\
    \ Field (DS Field) in the IPv4 and\n        Ipv6 Headers\", RFC 2474, December\
    \ 1998.\n   [29] Blake, S., Black, D., Carlson, M., Davies, E., Wang, Z. and W.\n\
    \        Weiss, \"An Architecture for Differentiated Services\", RFC 2475,\n \
    \       December 1998.\n   [30] Heinanen, J., Baker, F., Weiss, W. and J. Wroclawski,\
    \  \"An\n        Assured Forwarding PHB\", RFC 2597, June 1999.\n   [31] Jacobson,\
    \ V., Nichols, K. and K. Poduri, \"An Expedited\n        Forwarding PHB Group\"\
    , RFC 2598, June 1999.\n   [32] Rosen, E., Viswanathan, A. and R. Callon, \"Multiprotocol\
    \ Label\n        Switching Architecture\", RFC 3031, January, 2001.\n   [33] Patel,\
    \ B., Aboba, B., Kelly, S. and V. Gupta, \"Dynamic Host\n        Configuration\
    \ Protocol (DHCPv4) Configuration of IPsec Tunnel\n        Mode\", RFC 3456, January\
    \ 2003.\n   [34] Kembel, R., \"The Fibre Channel Consultant: A Comprehensive\n\
    \        Introduction\", Northwest Learning Associates, 1998.\n"
- title: 12.  Acknowledgments
  contents:
  - "12.  Acknowledgments\n   The developers of this specification thank Mr. Jim Nelson\
    \ for his\n   assistance with FC-FS related issues.\n   The developers of this\
    \ specification express their appreciation to\n   Mr. Mallikarjun Chadalapaka\
    \ and Mr. David Black for their detailed\n   and helpful reviews.\n"
- title: Appendix A - Fibre Channel Bit and Byte Numbering Guidance
  contents:
  - "Appendix A - Fibre Channel Bit and Byte Numbering Guidance\n   Both Fibre Channel\
    \ and IETF standards use the same byte transmission\n   order.  However, the bit\
    \ and byte numbering is different.\n   Fibre Channel bit and byte numbering can\
    \ be observed if the data\n   structure heading, shown in figure 11, is cut and\
    \ pasted at the top\n   of figure 7, figure 9, and figure 17.\n   W|------------------------------Bit------------------------------|\n\
    \   o|                                                               |\n   r|3\
    \ 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1                    |\n   d|1 0 9 8\
    \ 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0|\n   Figure 11:  Fibre\
    \ Channel Data Structure Bit and Byte Numbering\n   Fibre Channel bit numbering\
    \ for the pFlags field can be observed if\n   the data structure heading, shown\
    \ in figure 12, is cut and pasted at\n   the top of figure 8.\n       |----------------Bit--------------------|\n\
    \       |                                       |\n       | 31   30   29   28\
    \   27   26   25   24 |\n   Figure 12:  Fibre Channel pFlags Bit Numbering\n \
    \  Fibre Channel bit numbering for the Connection Usage Flags field can\n   be\
    \ observed if the data structure heading, shown in figure 13, is cut\n   and pasted\
    \ at the top of figure 10.\n   |------------------------------Bit------------------------------|\n\
    \   |                                                               |\n   |  \
    \ 31      30      29      28      27      26      25      24  |\n   Figure 13:\
    \  Fibre Channel Connection Usage Flags Bit Numbering\n"
- title: Appendix B - IANA Considerations
  contents:
  - "Appendix B - IANA Considerations\n   IANA has made the following port assignments\
    \ to FCIP:\n      - fcip-port 3225/tcp FCIP\n      - fcip-port 3225/udp FCIP\n\
    \   IANA has changed the authority for these port allocations to\n   reference\
    \ this RFC.\n   Use of UDP with FCIP is prohibited even though IANA has allocated\
    \ a\n   port.\n   The FC Frame encapsulation used by this specification employs\n\
    \   Protocol# value 1, as described in the IANA Considerations appendix\n   of\
    \ the FC Frame Encapsulation [19] specification.\n"
- title: Appendix C - FCIP Usage of Addresses and Identifiers
  contents:
  - "Appendix C - FCIP Usage of Addresses and Identifiers\n   In support of network\
    \ address translators, FCIP does not use IP\n   Addresses to identify FCIP Entities\
    \ or FCIP_LEPs.  The only use of IP\n   Addresses for identification occurs when\
    \ initiating new TCP connect\n   requests (see section 8.1.2.3) where the IP Address\
    \ destination of\n   the TCP connect request is used to answer the question: \"\
    Have\n   previous TCP connect requests been made to the same destination FCIP\n\
    \   Entity?\"  The correctness of this assumption is further checked by\n   sending\
    \ the Destination FC Fabric Entity World Wide Name in the FCIP\n   Special Frame\
    \ (FSF) and having the value checked by the FCIP Entity\n   that receives the\
    \ TCP connect request and FSF (see section 8.1.3).\n   For the purposes of processing\
    \ incoming TCP connect requests, the\n   source FCIP Entity is identified by the\
    \ Source FC Fabric Entity World\n   Wide Name and Source FC/FCIP Entity Identifier\
    \ fields in the FSF sent\n   from the TCP connect requestor to the TCP connect\
    \ recipient as the\n   first bytes following the TCP connect request (see section\
    \ 8.1.2.3\n   and section 8.1.3).\n   FC-BB-2 [3] provides the definitions for\
    \ each of the following FSF\n   fields:\n      -  Source FC Fabric Entity World\
    \ Wide Name,\n      -  Source FC/FCIP Entity Identifier, and\n      -  Destination\
    \ FC Fabric Entity World Wide Name.\n   As described in section 8.1.3, FCIP Entities\
    \ segregate their\n   FCIP_LEPs between:\n   -  Connections resulting from TCP\
    \ connect requests initiated by the\n      FCIP Entity, and\n   -  Connections\
    \ resulting from TCP connect requests received by the\n      FCIP Entity.\n  \
    \ Within each of these two groups, the following information is used to\n   further\
    \ identify each FCIP_LEP:\n      -  Source FC Fabric Entity World Wide Name,\n\
    \      -  Source FC/FCIP Entity Identifier, and\n      -  Destination FC Fabric\
    \ Entity World Wide Name.\n"
- title: Appendix D - Example of Synchronization Recovery Algorithm
  contents:
  - "Appendix D - Example of Synchronization Recovery Algorithm\n   The contents of\
    \ this annex are informative.\n   Synchronization may be recovered as specified\
    \ in section 5.6.2.3.  An\n   example of an algorithm for searching the bytes\
    \ delivered to the\n   Encapsulated Frame Receiver Portal for a valid FCIP Frame\
    \ header is\n   provided in this annex.\n   This resynchronization uses the principle\
    \ that a valid FCIP data\n   stream must contain at least one valid header every\
    \ 2176 bytes (the\n   maximum length of an encapsulated FC Frame).  Although other\
    \ data\n   patterns containing apparently valid headers may be contained in the\n\
    \   stream, the FC CRC or FCIP Frame validity of the data patterns\n   contained\
    \ in the data stream will always be either interrupted by or\n   resynchronized\
    \ with the valid FCIP Frame headers.\n   Consider the case shown in figure 14.\
    \  A series of short FCIP Frames,\n   perhaps from a trace, are embedded in larger\
    \ FCIP Frames, say as a\n   result of a trace file being transferred from one\
    \ disk to another.\n   The headers for the short FCIP Frames are denoted SFH and\
    \ the long\n   FCIP Frame headers are marked as LFH.\n      +-+--+-+----+-+----+-+----+-+-+-+---+-+---\n\
    \      |L|  |S|    |S|    |S|    |S| |L|   |S|\n      |F|  |F|    |F|    |F| \
    \   |F| |F|   |F|...\n      |H|  |H|    |H|    |H|    |H| |H|   |H|\n      +-+--+-+----+-+----+-+----+-+-+-+---+-+---\n\
    \      |                             |\n      |<---------2176 bytes-------->|\n\
    \      Figure 14:  Example of resynchronization data stream\n   A resynchronization\
    \ attempt that starts just to the right of an LFH\n   will find several SFH FCIP\
    \ Frames before discovering that they do not\n   represent the transmitted stream\
    \ of FCIP Frames.  Within 2176 bytes\n   plus or minus, however, the resynchronization\
    \ attempt will encounter\n   an SFH whose length does not match up with the next\
    \ SFH because the\n   LFH will fall in the middle of the short FCIP Frame pushing\
    \ the next\n   header farther out in the byte stream.\n   Note that the resynchronization\
    \ algorithm cannot forward any\n   prospective FC Frames to the FC Frame Transmitter\
    \ Portal because,\n   until synchronization is completely established, there is\
    \ no\n   certainty that anything that looked like an FCIP Frame really was\n \
    \  one.  For example, an SFH might fortuitously contain a length that\n   points\
    \ exactly to the beginning of an LFH.  The LFH would identify\n   the correct\
    \ beginning of a transmitted FCIP Frame, but that in no way\n   guarantees that\
    \ the SFH was also a correct FCIP Frame header.\n   There exist some data streams\
    \ that cannot be resynchronized by this\n   algorithm.  If such a data stream\
    \ is encountered, the algorithm\n   causes the TCP Connection to be closed.\n\
    \   The resynchronization assumes that security and authentication\n   procedures\
    \ outside the FCIP Entity are protecting the valid data\n   stream from being\
    \ replaced by an intruding data stream containing\n   valid FCIP data.\n   The\
    \ following steps are one example of how an FCIP_DE might\n   resynchronize with\
    \ the data stream entering the Encapsulated Frame\n   Receiver Portal.\n   1)\
    \ Search for candidate and strong headers:\n      The data stream entering the\
    \ Encapsulated Frame Receiver Portal is\n      searched for 12 bytes in a row\
    \ containing the required values for:\n         a) Protocol field,\n         b)\
    \ Version field,\n         c) ones complement of the Protocol field,\n       \
    \  d) ones complement of the Version field,\n         e) replication of encapsulation\
    \ word 0 in word 1, and\n         f) pFlags field and its ones complement.\n \
    \     If such a 12-byte grouping is found, the FCIP_DE assumes that it\n     \
    \ has identified bytes 0-2 of a candidate FCIP encapsulation header.\n      All\
    \ bytes up to and including the candidate header byte are\n      discarded.\n\
    \      If no candidate header has been found after searching a specified\n   \
    \   number of bytes greater than some multiple of 2176 (the maximum\n      length\
    \ of an FCIP Frame), resynchronization has failed and the\n      TCP/IP connection\
    \ is closed.\n      Word 3 of the candidate header contains the Frame Length and\
    \ Flags\n      fields and their ones complements.  If the fields are consistent\n\
    \      with their ones complements, the candidate header is considered a\n   \
    \   strong candidate header.  The Frame Length field is used to\n      determine\
    \ where in the byte stream the next strong candidate\n      header should be and\
    \ processing continues at step 2).\n   2) Use multiple strong candidate headers\
    \ to locate a verified\n      candidate header:\n      The Frame Length in one\
    \ strong candidate header is used to skip\n      incoming bytes until the expected\
    \ location of the next strong\n      candidate header is reached.  Then the tests\
    \ described in step 1)\n      are applied to see if another strong candidate header\
    \ has\n      successfully been located.\n      All bytes skipped and all bytes\
    \ in all strong candidate headers\n      processed are discarded.\n      Strong\
    \ candidate headers continue to be verified in this way for\n      at least 4352\
    \ bytes (twice the maximum length of an FCIP Frame).\n      If at any time a verification\
    \ test fails, processing restarts at\n      step 1 and a retry counter is incremented.\
    \  If the retry counter\n      exceeds 3 retries, resynchronization has failed\
    \ and the TCP\n      Connection is closed, and the FC entity is notified with\
    \ the\n      reason for the closure.\n      After strong candidate headers have\
    \ been verified for at least\n      4352 bytes, the next header identified is\
    \ a verified candidate\n      header, and processing continues at step 3).\n \
    \     Note: If a strong candidate header was part of the data content of\n   \
    \   an FCIP Frame, the FCIP Frame defined by that or a subsequent\n      strong\
    \ candidate header will eventually cross an actual header in\n      the byte stream.\
    \  As a result it will either identify the actual\n      header as a strong candidate\
    \ header or it will lose\n      synchronization again because of the extra 28\
    \ bytes in the length,\n      returning to step 1 as described above.\n   3) Use\
    \ multiple strong candidate headers to locate a verified\n      candidate header:\n\
    \      Incoming bytes are inspected and discarded until the next verified\n  \
    \    candidate header is reached.  Inspection of the incoming bytes\n      includes\
    \ testing for other candidate headers using the criteria\n      described in step\
    \ 1.  Each verified candidate header is tested\n      against the tests listed\
    \ in section 5.6.2.2 as would normally be\n      the case.\n      Verified candidate\
    \ headers continue to be located and tested in\n      this way for a minimum of\
    \ 4352 bytes (twice the maximum length of\n      an FCIP Frame).  If all verified\
    \ candidate headers encountered are\n      valid, the last verified candidate\
    \ header is a valid header.  At\n      this point the FCIP_DE stops discarding\
    \ bytes and begins normal\n      FCIP de-encapsulation, including for the first\
    \ time since\n      synchronization was lost, delivery of FC Frames through the\
    \ FC\n      Frame Transmitter Portal according to normal FCIP rules.\n      If\
    \ any verified candidate headers are invalid but meet all the\n      requirements\
    \ of a strong candidate header, increment the retry\n      counter and return\
    \ to step 2).  If any verified candidate headers\n      are invalid and fail to\
    \ meet the tests for a strong candidate\n      header, or if inspection of the\
    \ bytes between verified candidate\n      headers discovers any candidate headers,\
    \ increment the retry\n      counter and return to step 1.  If the retry counter\
    \ exceeds 4\n      retries, resynchronization has failed and the TCP/IP connection\
    \ is\n      closed.\n      A flowchart for this algorithm can be found in figure\
    \ 15.\n                        Synchronization is lost\n                     \
    \            |\n                    _____________v_______________\n          \
    \         |                             |\n                   | Search for candidate\
    \ header |\n      +----------->|                             |\n      |      \
    \      |   Found           Not Found |\n      |            | (Strong candidate)\
    \          |\n      |            |_____________________________|\n      |    \
    \                |              |\n      |                    |              +\
    \ --------->close TCP\n      |             _______v_____________________     Connection\n\
    \      |            |                             |    and notify\n      |   \
    \         |   Enough strong candidate   |    the FC Entity\n      |      +---->|\
    \     headers identified?     |    with the reason\n      |      |     |     \
    \                        |    for closure\n      |      |     |     No       \
    \        Yes    |\n      |      |     |        (Verified candidate) |\n      |\
    \      |     |_____________________________|\n      |___________________|    \
    \            |\n      ^      |                             |\n      |      | \
    \                            |\n      |      |      _______________________v_____\n\
    \      |      |     |                             |\n      |      |     | Enough\
    \ verified candidate   |\n      |      |     |   headers validated?        |\n\
    \      |      |     |                             |\n      |      |     |    \
    \ No               Yes    |\n      |      |     |            (Resynchronized)\
    \ |\n      |      |     |_____________________________|\n      |      |      \
    \      |                |\n      |      |      ______v__________      |      Resume\n\
    \      |      |     |                 |     + ---> Normal\n      |      |    \
    \ | Synchronization |            De-encapsulation\n      |      |     |      Lost?\
    \      |\n      |      |     |                 |\n      |      |     | No    \
    \      Yes |\n      |      |     |_________________|\n      |      |        |\
    \           |\n      |      |________|           |\n      |___________________________|\n\
    \      Figure 15:  Flow diagram of simple synchronization example\n"
- title: Appendix E - Relationship between FCIP and IP over FC (IPFC)
  contents:
  - "Appendix E - Relationship between FCIP and IP over FC (IPFC)\n   The contents\
    \ of this annex are informative.\n   IPFC (RFC 2625) describes the encapsulation\
    \ of IP packets in FC\n   Frames.  It is intended to facilitate IP communication\
    \ over an FC\n   network.\n   FCIP describes the encapsulation of FC Frames in\
    \ TCP segments, which\n   in turn are encapsulated inside IP packets for transporting\
    \ over an\n   IP network.  It gives no consideration to the type of FC Frame that\n\
    \   is being encapsulated.  Therefore, the FC Frame may actually contain\n   an\
    \ IP packet as described in the IP over FC specification (RFC\n   2625).  In such\
    \ a case, the data packet would have:\n      -  Data Link Header\n      -  IP\
    \ Header\n      -  TCP Header\n      -  FCIP Header\n      -  FC Header\n    \
    \  -  IP Header\n   Note: The two IP headers would not be identical to each other.\
    \  One\n   would have information pertaining to the final destination, while the\n\
    \   other would have information pertaining to the FCIP Entity.\n   The two documents\
    \ focus on different objectives.  As mentioned above,\n   implementation of FCIP\
    \ will lead to IP encapsulation within IP.\n   While perhaps inefficient, this\
    \ should not lead to issues with IP\n   communication.  One caveat: if a Fibre\
    \ Channel device is\n   encapsulating IP packets in an FC Frame (e.g., an IPFC\
    \ device), and\n   that device is communicating with a device running IP over\
    \ a non-FC\n   medium, a second IPFC device may need to act as a gateway between\
    \ the\n   two networks.  This scenario is not specifically addressed by FCIP.\n\
    \   There is nothing in either of the specifications to prevent a single\n   device\
    \ from implementing both FCIP and IP-over-FC (IPFC), but this is\n   implementation\
    \ specific, and is beyond the scope of this document.\n"
- title: Appendix F - FC Frame Format
  contents:
  - "Appendix F - FC Frame Format\n   Note: All users of the words \"character\" or\
    \ \"characters\" in this\n   section refer to 8bit/10bit link encoding wherein\
    \ each 8 bit\n   \"character\" within a link frame is encoded as a 10 bit \"character\"\
    \n   for link transmission.  These words do not refer to ASCII, Unicode,\n   or\
    \ any other form of text characters, although octets from such\n   characters\
    \ will occur as 8 bit \"characters\" for this encoding.  This\n   usage is employed\
    \ here for consistency with the ANSI T11 standards\n   that specify Fibre Channel.\n\
    \   The contents of this annex are informative.\n   All FC Frames have a standard\
    \ format (see FC-FS [5]) much like LAN's\n   802.x protocols.  However, the exact\
    \ size of each FC Frame varies\n   depending on the size of the variable fields.\
    \  The size of the\n   variable field ranges from 0 to 2112-bytes as shown in\
    \ the FC Frame\n   Format in figure 16, resulting in the minimum size FC Frame\
    \ of 36\n   bytes and the maximum size FC Frame of 2148 bytes.  Valid FC Frame\n\
    \   lengths are always a multiple of four bytes.\n   +------+--------+-----------+----//-------+------+------+\n\
    \   | SOF  |Frame   |Optional   |  Frame      | CRC  |  EOF |\n   | (4B) |Header\
    \  |Header     | Payload     | (4B) | (4B) |\n   |      |(24B)   |<----------------------->|\
    \      |      |\n   |      |        | Data Field = (0-2112B)  |      |      |\n\
    \   +------+--------+-----------+----//-------+------+------+\n   Figure 16: \
    \ FC Frame Format\n   SOF and EOF Delimiters\n      On an FC link, Start-of-Frame\
    \ (SOF) and End-Of-Frame (EOF) are\n      called Ordered Sets and are sent as\
    \ special words constructed from\n      the 8B/10B comma character (K28.5) followed\
    \ by three additional\n      8B/10B data characters making them uniquely identifiable\
    \ in the\n      data stream.\n      On an FC link, the SOF delimiter serves to\
    \ identify the beginning\n      of an FC Frame and prepares the receiver for FC\
    \ Frame reception.\n      The SOF contains information about the FC Frame's Class\
    \ of\n      Service, position within a sequence, and in some cases, connection\n\
    \      status.\n      The EOF delimiter identifies the end of the FC Frame and\
    \ the final\n      FC Frame of a sequence.  In addition, it serves to force the\n\
    \      running disparity to negative.  The EOF is used to end the\n      connection\
    \ in connection-oriented classes of service.\n      A special EOF delimiter called\
    \ EOFa (End Of Frame - Abort) is used\n      to terminate a partial FC Frame resulting\
    \ from a malfunction in a\n      link facility during transmission.  Since an\
    \ FCIP Entity functions\n      like a transmission link with respect to the rest\
    \ of the FC\n      Fabric, FCIP_DEs may use EOFa in their error recovery procedures.\n\
    \      It is therefore important to preserve the information conveyed by\n   \
    \   the delimiters across the IP-based network, so that the receiving\n      FCIP\
    \ Entity can correctly reconstruct the FC Frame in its original\n      SOF and\
    \ EOF format before forwarding it to its ultimate FC\n      destination on the\
    \ FC link.\n      When an FC Frame is encapsulated and sent over a byte-oriented\n\
    \      interface, the SOF and EOF delimiters are represented as sequences\n  \
    \    of four consecutive bytes, which carry the equivalent Class of\n      Service\
    \ and FC Frame termination information as the FC ordered\n      sets.\n      The\
    \ representation of SOF and EOF in an encapsulation FC Frame is\n      described\
    \ in FC Frame Encapsulation [19].\n   Frame Header\n      The FC Frame Header\
    \ is transparent to the FCIP Entity.  The FC\n      Frame Header is 24 bytes long\
    \ and has several fields that are\n      associated with the identification and\
    \ control of the payload.\n      Current FC Standards allow up to 3 Optional Header\
    \ fields [5]:\n      - Network_Header (16-bytes)\n      - Association_Header (32-bytes)\n\
    \      - Device_Header (up to 64-bytes).\n   Frame Payload\n      The FC Frame\
    \ Payload is transparent to the FCIP Entity.  An FC\n      application level payload\
    \ is called an Information Unit at the\n      FC-4 Level.  This is mapped into\
    \ the FC Frame Payload of the FC\n      Frame.  A large Information Unit is segmented\
    \ using a structure\n      consisting of FC Sequences.  Typically, a Sequence\
    \ consists of\n      more than one FC Frame.  FCIP does not maintain any state\n\
    \      information regarding the relationship of FC Frames within an FC\n    \
    \  Sequence.\n   CRC\n      The FC CRC is 4 bytes long and uses the same 32-bit\
    \ polynomial\n      used in FDDI and is specified in ANSI X3.139 Fiber Distributed\n\
    \      Data Interface.  This CRC value is calculated over the entire FC\n    \
    \  header and the FC payload; it does not include the SOF and EOF\n      delimiters.\n\
    \      Note: When FC Frames are encapsulated into FCIP Frames, the FC\n      Frame\
    \ CRC is untouched by the FCIP Entity.\n"
- title: Appendix G - FC Encapsulation Format
  contents:
  - "Appendix G - FC Encapsulation Format\n   This annex contains a reproduction of\
    \ the FC Encapsulation Format\n   [19] as it applies to FCIP Frames that encapsulate\
    \ FC Frames.  The\n   information in this annex is not intended to represent the\
    \ FCIP\n   Special Frame (FSF) that is described in section 7.\n   The information\
    \ in this annex was correct as of the time this\n   specification was approved.\
    \  The information in this annex is\n   informative only.\n   If there are any\
    \ differences between the information here and the FC\n   Encapsulation Format\
    \ specification [19], the FC Encapsulation Format\n   specification takes precedence.\n\
    \   If there are any differences between the information here and the\n   contents\
    \ of section 5.6.1, then the contents of section 5.6.1 take\n   precedence.\n\
    \   Figure 17 applies the requirements stated in section 5.6.1 and in the\n  \
    \ FC Encapsulation Frame format resulting in a summary of the FC Frame\n   format.\
    \  Where FCIP requires specific values, those values are shown\n   in hexadecimal\
    \ in parentheses.  Detailed requirements for the FCIP\n   usage of the FC Encapsulation\
    \ Format are in section 5.6.1.\n   W|------------------------------Bit------------------------------|\n\
    \   o|                                                               |\n   r|\
    \                    1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3|\n   d|0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1|\n    +---------------+---------------+---------------+---------------+\n\
    \   0|   Protocol#   |    Version    |  -Protocol#   |   -Version    |\n    |\
    \    (0x01)     |    (0x01)     |     (0xFE)    |    (0xFE)     |\n    +---------------+---------------+---------------+---------------+\n\
    \   1|   Protocol#   |    Version    |  -Protocol#   |   -Version    |\n    |\
    \    (0x01)     |    (0x01)     |     (0xFE)    |    (0xFE)     |\n    +---------------+---------------+---------------+---------------+\n\
    \   2|    pFlags     |    Reserved   |    -pFlags    |  -Reserved    |\n    |\
    \     (0x00)    |     (0x00)    |     (0xFF)    |    (0xFF)     |\n    +-----------+---+---------------+-----------+---+---------------+\n\
    \   3|   Flags   |   Frame Length    |   -Flags  |   -Frame Length   |\n    |\
    \   (0x00)  |                   |   (0x3F)  |                   |\n    +-----------+-------------------+-----------+-------------------+\n\
    \   4|                      Time Stamp [integer]                     |\n    +---------------------------------------------------------------+\n\
    \   5|                      Time Stamp [fraction]                    |\n    +---------------------------------------------------------------+\n\
    \   6|                     CRC (Reserved in FCIP)                    |\n    |\
    \                        (0x00-00-00-00)                        |\n    +---------------+---------------+---------------+---------------+\n\
    \   7|      SOF      |      SOF      |     -SOF      |     -SOF      |\n    +---------------+---------------+---------------+---------------+\n\
    \   8|                                                               |\n    +-----\
    \            FC Frame content (see appendix F)        -----+\n    |          \
    \                                                     |\n    +---------------+---------------+---------------+---------------+\n\
    \   n|      EOF      |      EOF      |     -EOF      |     -EOF      |\n    +---------------+---------------+---------------+---------------+\n\
    \   Figure 17:  FCIP Frame Format\n   The names of fields are generally descriptive\
    \ on their contents and\n   the FC Encapsulation Format specification [19] is\
    \ referenced for\n   details.  Field names preceded by a minus sign are ones complement\n\
    \   values of the named field.\n   Note: Figure 17 does not represent the FSF\
    \ that is described in\n   section 7.\n"
- title: Appendix H - FCIP Requirements on an FC Entity
  contents:
  - "Appendix H - FCIP Requirements on an FC Entity\n   The contents of this annex\
    \ are informative for FCIP but might be\n   considered normative on FC-BB-2.\n\
    \   The capabilities that FCIP requires of an FC Entity include:\n   1) The FC\
    \ Entity must deliver FC Frames to the correct FCIP Data\n      Engine (in the\
    \ correct FCIP Link Endpoint).\n   2) Each FC Frame delivered to an FCIP_DE must\
    \ be accompanied by a\n      time value synchronized with the clock maintained\
    \ by the FC Entity\n      at the other end of the FCIP Link (see section 6). \
    \ If a\n      synchronized time value is not available, a value of zero must\n\
    \      accompany the FC Frame.\n   3) When FC Frames exit FCIP Data Engine(s)\
    \ via the FC Frame\n      Transmitter Portal(s), the FC Entity should forward\
    \ them to the FC\n      Fabric.  However, before forwarding an FC Frame, the FC\
    \ Entity\n      must compute the end-to-end transit time for the FC Frame using\n\
    \      the time value supplied by the FCIP_DE (taken from the FCIP\n      header)\
    \ and a synchronized time value (see section 6).  If the\n      end-to-end transit\
    \ time exceeds the requirements of the FC Fabric,\n      the FC Entity is responsible\
    \ for discarding the FC Frame.\n   4) The only delivery ordering guarantee provided\
    \ by FCIP is correctly\n      ordered delivery of FC Frames between a pair of\
    \ FCIP Data Engines.\n      FCIP expects the FC Entity to implement all other\
    \ FC Frame\n      delivery ordering requirements.\n   5) When a TCP connect request\
    \ is received and that request would add\n      a new TCP Connection to an existing\
    \ FCIP_LEP, the FC Entity must\n      authenticate the source of the TCP connect\
    \ request before use of\n      the new TCP connection is allowed.\n   6) The FC\
    \ Entity may participate in determining allowed TCP\n      Connections, TCP Connection\
    \ parameters, quality of service usage,\n      and security usage by modifying\
    \ interactions with the FCIP Entity\n      that are modelled as a \"shared\" database\
    \ in section 8.1.1.\n   7) The FC Entity may require the FCIP Entity to perform\
    \ TCP close\n      requests.\n   8) The FC Entity may recover from connection\
    \ failures.\n   9) The FC Entity must recover from events that the FCIP Entity\
    \ cannot\n      handle, such as:\n      a) loss of synchronization with FCIP Frame\
    \ headers from the\n         Encapsulated Frame Receiver Portal requiring resetting\
    \ the TCP\n         Connection; and\n      b) recovering from FCIP Frames that\
    \ are discarded as a result of\n         synchronization problems (see section\
    \ 5.6.2.2 and section\n         5.6.2.3).\n   10) The FC Entity must work cooperatively\
    \ with the FCIP Entity to\n       manage flow control problems in either the IP\
    \ Network or FC\n       Fabric.\n   11) The FC Entity may test for failed TCP\
    \ Connections.\n       Note that the Fibre Channel standards must be consulted\
    \ for a\n       complete understanding of the requirements placed on an FC\n \
    \      Entity.\n       Table 2 shows the explicit interactions between the FCIP\
    \ Entity\n       and the FC Entity.\n   +-------------+-----------------+-----------------------------------+\n\
    \   |             |                 | Information/Parameter Passed and  |\n  \
    \ |             |                 |             Direction             |\n   |\
    \ Reference   |                 +-----------------+-----------------+\n   |  Section\
    \    |    Condition    | FCIP Entity---> | <---FC Entity   |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | 5.6         | FC Frame ready  |                 | Provide FC      |\n  \
    \ | FCIP Data   | for IP transfer |                 | Frame and       |\n   |\
    \ Engine      |                 |                 | time stamp at   |\n   |  \
    \           |                 |                 | FC Frame        |\n   |    \
    \         |                 |                 | Receiver Portal |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | WWN = World Wide Name                                             |\n  \
    \ +-------------------------------------------------------------------+\n   |\
    \                           continued                               |\n   +-------------------------------------------------------------------+\n\
    \   Table 2:  FC/FCIP Entity pair interactions (part 1 of 5)\n   +-------------+-----------------+-----------------------------------+\n\
    \   |             |                 | Information/Parameter Passed and  |\n  \
    \ |             |                 |             Direction             |\n   |\
    \ Reference   |                 +-----------------+-----------------+\n   |  Section\
    \    |    Condition    | FCIP Entity---> | <---FC Entity   |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   |                           continued                               |\n  \
    \ +-------------+-----------------+-----------------+-----------------+\n   |\
    \ 5.6         | FCIP Frame      | Provide FC      |                 |\n   | FCIP\
    \ Data   | received from   | Frame and       |                 |\n   | Engine\
    \      | IP Network      | time stamp at   |                 |\n   |         \
    \    |                 | FC Frame Trans- |                 |\n   |           \
    \  |                 | mitter Portal   |                 |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | 5.6.2.2     | FCIP_DE         | Inform FC       |                 |\n  \
    \ | Errors      | discards bytes  | Entity that     |                 |\n   |\
    \ in FCIP     | delivered       | bytes have been |                 |\n   | Headers\
    \ and | through         | discarded with  |                 |\n   | Discarding\
    \  | Encapsulated    | reason          |                 |\n   | FCIP Frames |\
    \ Frame Receiver  |                 |                 |\n   |             | Portal\
    \          |                 |                 |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | 5.6.2.3     | FCIP Entity     | Inform FC       |                 |\n  \
    \ | Synchron-   | closes TCP      | Entity that TCP |                 |\n   |\
    \ ization     | Connection due  | Connection has  |                 |\n   | Failures\
    \    | to synchron-    | been closed     |                 |\n   |           \
    \  | ization failure | with reason     |                 |\n   |             |\
    \                 | for closure     |                 |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | 8.1.2.3     | Receipt of the  | Inform FC       |                 |\n  \
    \ | Connection  | echoed FSF      | Entity that TCP |                 |\n   |\
    \ Setup       | takes too long  | Connection has  |                 |\n   | Following\
    \ a | or the FSF      | been closed     |                 |\n   | Successful \
    \ | contents have   | with reason     |                 |\n   | TCP Connect |\
    \ changed         | for closure     |                 |\n   | Request     |  \
    \               |                 |                 |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | WWN = World Wide Name                                             |\n  \
    \ +-------------------------------------------------------------------+\n   |\
    \                           continued                               |\n   +-------------------------------------------------------------------+\n\
    \   Table 2:  FC/FCIP Entity pair interactions (part 2 of 5)\n   +-------------+-----------------+-----------------------------------+\n\
    \   |             |                 | Information/Parameter Passed and  |\n  \
    \ |             |                 |             Direction             |\n   |\
    \ Reference   |                 +-----------------+-----------------+\n   |  Section\
    \    |    Condition    | FCIP Entity---> | <---FC Entity   |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   |                           continued                               |\n  \
    \ +-------------+-----------------+-----------------+-----------------+\n   |\
    \ 8.1.2.1     | New TCP         | Inform FC       |                 |\n   | Non-Dynamic\
    \ | Connection      | Entity of       |                 |\n   | Creation of |\
    \ created based   | new or existing |                 |\n   | a New TCP   | on\
    \ \"shared\"     | FCIP_LEP and    |                 |\n   | Connections | database\
    \        | new FCIP_DE     |                 |\n   |             | information\
    \     | along with      |                 |\n   |             |              \
    \   | Destination FC  |                 |\n   |             |                \
    \ | Fabric Entity   |                 |\n   |             |                 |\
    \ WWN, Connection |                 |\n   |             |                 | Usage\
    \ Flags,    |                 |\n   |             |                 | Connection\
    \      |                 |\n   |             |                 | Usage Code and\
    \  |                 |\n   |             |                 | Connection      |\
    \                 |\n   |             |                 | Nonce           |  \
    \               |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | 8.1.2.2     | New TCP         | Inform FC       |                 |\n  \
    \ | Dynamic     | Connection      | Entity of       |                 |\n   |\
    \ Creation of | created based   | new or existing |                 |\n   | a\
    \ New TCP   | on SLP service  | FCIP_LEP and    |                 |\n   | Connections\
    \ | advertisement   | new FCIP_DE     |                 |\n   |             |\
    \ and \"shared\"    | along with      |                 |\n   |             |\
    \ database        | Destination FC  |                 |\n   |             | information\
    \     | Fabric Entity   |                 |\n   |             |              \
    \   | WWN, Connection |                 |\n   |             |                \
    \ | Usage Flags,    |                 |\n   |             |                 |\
    \ Connection      |                 |\n   |             |                 | Usage\
    \ Code and  |                 |\n   |             |                 | Connection\
    \      |                 |\n   |             |                 | Nonce       \
    \    |                 |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | WWN = World Wide Name                                             |\n  \
    \ +-------------------------------------------------------------------+\n   |\
    \                           continued                               |\n   +-------------------------------------------------------------------+\n\
    \   Table 2:  FC/FCIP Entity pair interactions (part 3 of 5)\n   +-------------+-----------------+-----------------------------------+\n\
    \   |             |                 | Information/Parameter Passed and  |\n  \
    \ |             |                 |             Direction             |\n   |\
    \ Reference   |                 +-----------------+-----------------+\n   |  Section\
    \    |    Condition    | FCIP Entity---> | <---FC Entity   |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   |                           continued                               |\n  \
    \ +-------------+-----------------+-----------------+-----------------+\n   |\
    \ 8.1.3       | New TCP         | Inform FC       |                 |\n   | Processing\
    \  | Connection      | Entity of       |                 |\n   | Incoming    |\
    \ created based   | new or existing |                 |\n   | TCP Connect | on\
    \ incoming TCP | FCIP_LEP and    |                 |\n   | Requests    | Connect\
    \ request | new FCIP_DE     |                 |\n   |             | and \"shared\"\
    \    | along with      |                 |\n   |             | database      \
    \  | Source FC       |                 |\n   |             | information     |\
    \ Fabric Entity   |                 |\n   |             |                 | WWN,\
    \ Source     |                 |\n   |             |                 | FC/FCIP\
    \ Entity  |                 |\n   |             |                 | Identifier,\
    \     |                 |\n   |             |                 | Connection   \
    \   |                 |\n   |             |                 | Usage Flags,   \
    \ |                 |\n   |             |                 | Connection      |\
    \                 |\n   |             |                 | Usage Code and  |  \
    \               |\n   |             |                 | Connection      |    \
    \             |\n   |             |                 | Nonce           |      \
    \           |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | 8.1.3       | TCP Connect     | Request FC      | Yes or No       |\n  \
    \ | Processing  | Request wants   | Entity to       | answer about    |\n   |\
    \ Incoming    | to add a new    | authenticate    | whether the     |\n   | TCP\
    \ Connect | TCP Connection  | the source of   | source of the   |\n   | Requests\
    \    | to an existing  | the TCP Connect | TCP Connect     |\n   |           \
    \  | FCIP_LEP        | Request         | Request can be  |\n   |             |\
    \                 |                 | authenticated   |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | 8.1.3       | Receipt of the  | Inform FC       |                 |\n  \
    \ | Processing  | FSF takes too   | Entity that TCP |                 |\n   |\
    \ Incoming    | long or         | Connection has  |                 |\n   | TCP\
    \ Connect | duplicate       | been closed     |                 |\n   | Requests\
    \    | Connection      | with reason     |                 |\n   |           \
    \  | Nonce value     | for closure     |                 |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | WWN = World Wide Name                                             |\n  \
    \ +-------------------------------------------------------------------+\n   |\
    \                           continued                               |\n   +-------------------------------------------------------------------+\n\
    \   Table 2:  FC/FCIP Entity pair interactions (part 4 of 5)\n   +-------------+-----------------+-----------------------------------+\n\
    \   |             |                 | Information/Parameter Passed and  |\n  \
    \ |             |                 |             Direction             |\n   |\
    \ Reference   |                 +-----------------+-----------------+\n   |  Section\
    \    |    Condition    | FCIP Entity---> | <---FC Entity   |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   |                           concluded                               |\n  \
    \ +-------------+-----------------+-----------------+-----------------+\n   |\
    \ 8.2         | FC Entity       | Acknowledgement | Identification  |\n   | Closing\
    \ TCP | determines      | of TCP          | of the FCIP_DE  |\n   | Connections\
    \ | that a TCP      | Connection      | whose TCP       |\n   |             |\
    \ Connection      | closure         | Connection      |\n   |             | needs\
    \ to be     |                 | needs to be     |\n   |             | closed \
    \         |                 | closed          |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | 8.4         | Discovery that  | Inform FC       |                 |\n  \
    \ | TCP         | TCP connectiv-  | Entity that TCP |                 |\n   |\
    \ Connection  | ity has been    | Connection has  |                 |\n   | Considera-\
    \  | lost            | been closed     |                 |\n   | tions       |\
    \                 | with reason     |                 |\n   |             |  \
    \               | for closure     |                 |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | 9.4.1       | IKE phase 1     | Inform FC       |                 |\n  \
    \ | FCIP        | failed, result- | Entity that TCP |                 |\n   |\
    \ Link        | ing in termin-  | Connection can  |                 |\n   | Initializ-\
    \  | ation of link   | not be opened   |                 |\n   | ation Steps |\
    \ initialization  | with reason for |                 |\n   |             |  \
    \               | failure         |                 |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | 9.4.3       | Excessive       | Inform FC       |                 |\n  \
    \ | Handling    | numbers of      | Entity that TCP |                 |\n   |\
    \ data        | dropped         | Connection has  |                 |\n   | integrity\
    \   | datagrams       | been closed     |                 |\n   | and confi- \
    \ | detected and    | with reason     |                 |\n   | dentiality  |\
    \ TCP Connection  | for closure     |                 |\n   | violations  | closed\
    \          |                 |                 |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | RFC 3723    | TCP Connection  | Inform FC       |                 |\n  \
    \ |             | closed due to   | Entity that TCP |                 |\n   |\
    \ Handling SA | SA parameter    | Connection has  |                 |\n   | parameter\
    \   | mismatch        | been closed     |                 |\n   | mismatches \
    \ | problems        | with reason     |                 |\n   |             |\
    \                 | for closure     |                 |\n   +-------------+-----------------+-----------------+-----------------+\n\
    \   | WWN = World Wide Name                                             |\n  \
    \ +-------------------------------------------------------------------+\n   Table\
    \ 2:  FC/FCIP Entity pair interactions (part 5 of 5)\n"
- title: Editors and Contributors Acknowledgements
  contents:
  - "Editors and Contributors Acknowledgements\n   During the development of this\
    \ specification, Murali Rajagopal,\n   Elizabeth Rodriguez, Vi Chau, and Ralph\
    \ Weber served consecutively as\n   editors.  Raj Bhagwat contributed substantially\
    \ to the initial basic\n   FCIP concepts.\n   Venkat Rangan contributed the Security\
    \ section and continues to\n   coordinate security issues with the ips Working\
    \ Group and IETF.\n   Andy Helland contributed a substantial revision of Performance\n\
    \   section, aligning it with TCP/IP QoS concepts.\n   Dave Peterson contributed\
    \ the dynamic discovery section and edits to\n   RFC 3822.\n   Anil Rijhsinghani\
    \ contributed material related to the FCIP MIB and\n   edits the FCIP MIB document.\n\
    \   Bob Snively contributed material related to error detection and\n   recovery\
    \ including the bulk of the synchronization recovery example\n   annex.\n   Lawrence\
    \ J. Lamers contributed numerous ideas focused on keeping FCIP\n   compatible\
    \ with B_Port devices.\n   Milan Merhar contributed several of the FCIP conceptual\
    \ modifications\n   necessary to support NATs.\n   Don Fraser contributed material\
    \ related to link failure detection and\n   reporting.\n   Bill Krieg contributed\
    \ a restructuring of the TCP Connection setup\n   sections that made them more\
    \ linear with respect to time and more\n   readable.\n   Several T11 leaders supported\
    \ this effort and advised the editors of\n   this specification regarding coordination\
    \ with T11 documents and\n   projects.  These T11 leaders are: Jim Nelson (Framing\
    \ and Signaling),\n   Neil Wanamaker (Framing and Signaling), Craig Carlson (Generic\n\
    \   Services), Ken Hirata (Switch Fabric), Murali Rajagopal (Backbone),\n   Steve\
    \ Wilson (Switch Fabric), and Michael O'Donnell (Security\n   Protocols).\n"
- title: Editors and Contributors Addresses
  contents:
  - "Editors and Contributors Addresses\n   Neil Wanamaker\n   Akara\n   10624 Icarus\
    \ Court\n   Austin, TX 78726\n   USA\n   Phone: +1 512 257 7633\n   Fax: +1 512\
    \ 257 7877\n   EMail: nwanamaker@akara.com\n   Ralph Weber\n   ENDL Texas, representing\
    \ Brocade\n   Suite 102 PMB 178\n   18484 Preston Road\n   Dallas, TX 75252\n\
    \   USA\n   Phone: +1 214 912 1373\n   EMail: roweber@ieee.org\n   Elizabeth G.\
    \ Rodriguez\n   Dot Hill Systems Corp.\n   6305 El Camino Real\n   Carlsbad, CA\
    \ 92009\n   USA\n   Phone: +1 760 431 4435\n   EMail: elizabeth.rodriguez@dothill.com\n\
    \   Steve Wilson\n   Brocade Comm. Systems, Inc.\n   1745 Technology Drive\n \
    \  San Jose, CA. 95110\n   USA\n   Phone: +1 408 333 8128\n   EMail: swilson@brocade.com\n\
    \   Bob Snively\n   Brocade Comm. Systems, Inc.\n   1745 Technology Drive\n  \
    \ San Jose, CA 95110\n   USA\n   Phone: +1 408 303 8135\n   EMail: rsnively@brocade.com\n\
    \   David Peterson\n   Cisco Systems - SRBU\n   6450 Wedgwood Road\n   Maple Grove,\
    \ MN 55311\n   USA\n   Phone: +1 763 398 1007\n   Cell: +1 612 802 3299\n   EMail:\
    \ dap@cisco.com\n   Donald R. Fraser\n   Hewlett-Packard\n   301 Rockrimmon Blvd.,\
    \ Bldg. 5\n   Colorado Springs, CO 80919\n   USA\n   Phone: +1 719 548 3272\n\
    \   EMail: Don.Fraser@HP.com\n   R. Andy Helland\n   LightSand Communications,\
    \ Inc.\n   375 Los Coches Street\n   Milpitas, CA 95035\n   USA\n   Phone: +1\
    \ 408 404 3119\n   Fax: +1 408 941 2166\n   EMail: andyh@lightsand.com\n   Raj\
    \ Bhagwat\n   LightSand Communications, Inc.\n   24411 Ridge Route Dr.\n   Suite\
    \ 135\n   Laguna Hills, CA 92653\n   USA\n   Phone: +1 949 837 1733 x104\n   EMail:\
    \ rajb@lightsand.com\n   Bill Krieg\n   Lucent Technologies\n   200 Lucent Lane\n\
    \   Cary, NC 27511\n   USA\n   Phone: +1 919 463 4020\n   Fax: +1 919 463 4041\n\
    \   EMail: bkrieg@lucent.com\n   Michael E. O'Donnell\n   McDATA Corporation\n\
    \   310 Interlocken Parkway\n   Broomfield, CO 80021\n   USA\n   Phone: +1 303\
    \ 460 4142\n   Fax: +1 303 465 4996\n   EMail: modonnell@mcdata.com\n   Anil Rijhsinghani\n\
    \   McDATA Corporation\n   310 Interlocken Parkway\n   Broomfield, CO 80021\n\
    \   USA\n   Phone: +1 508 870 6593\n   EMail: anil.rijhsinghani@mcdata.com\n \
    \  Milan J. Merhar\n   43 Nagog Park\n   Pirus Networks\n   Acton, MA 01720\n\
    \   USA\n   Phone: +1 978 206 9124\n   EMail: Milan@pirus.com\n   Craig W. Carlson\n\
    \   QLogic Corporation\n   6321 Bury Drive\n   Eden Prairie, MN 55346\n   USA\n\
    \   Phone: +1 952 932 4064\n   EMail: craig.carlson@qlogic.com\n   Venkat Rangan\n\
    \   Rhapsody Networks Inc.\n   3450 W. Warren Ave.\n   Fremont, CA 94538\n   USA\n\
    \   Phone: +1 510 743 3018\n   Fax: +1 510 687 0136\n   EMail: venkat@rhapsodynetworks.com\n\
    \   Lawrence J. Lamers\n   SAN Valley Systems, Inc.\n   6320 San Ignacio Ave.\n\
    \   San Jose, CA 95119-1209\n   USA\n   Phone: +1 408 234 0071\n   EMail: ljlamers@ieee.org\n\
    \   Murali Rajagopal\n   Broadcom Corporation\n   16215 Alton Parkway\n   Irvine,CA\
    \ 92619\n   USA\n   Phone: +1 949 450 8700\n   EMail: muralir@broadcom.com\n \
    \  Ken Hirata\n   Vixel Corporation\n   15245 Alton Parkway, Suite 100\n   Irvine,\
    \ CA 92618\n   USA\n   Phone: +1 949 788 6368\n   Fax: +1 949 753 9500\n   EMail:\
    \ ken.hirata@vixel.com\n   Vi Chau\n   USA\n   Email: vchau1@cox.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).  This\
    \ document is subject\n   to the rights, licenses and restrictions contained in\
    \ BCP 78, and\n   except as set forth therein, the authors retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
