Abstract This document presents a base YANG Data model for the management of Operations, Administration, and Maintenance (OAM) protocols that use connectionless communications.
The data model is defined using the YANG data modeling language, as specified in RFC 7950.
It provides a technology independent abstraction of key OAM constructs for OAM protocols that use connectionless communication.
The base model presented here can be extended to include technology specific details.
There are two key benefits of this approach: First, it leads to uniformity between OAM protocols.
Second, it supports both nested OAM workflows (i.e., performing OAM functions at the same level or different levels through a unified interface) as well as interactive OAM workflows (i.e., performing OAM functions at the same level through a unified interface).
Introduction Operations, Administration, and Maintenance (OAM) are important networking functions that allow operators to: 1.
monitor network communications (i.e., reachability verification and Continuity Check
troubleshoot failures (i.e., fault verification and localization) 3.
monitor service level agreements and performance (i.e., performance management)
An overview of OAM tools is presented in [RFC7276].
Ping and Traceroute (see [RFC792] and [RFC4443]) are respectively well known fault verification and isolation tools for IP networks.
Over the years, different technologies have developed similar toolsets for equivalent purposes.
The different sets of OAM tools may support both connection oriented or connectionless technologies.
In connection oriented technologies, a connection is established prior to the transmission of data.
After the connection is established, no additional control information such as signaling or operations and maintenance information is required to transmit the actual user data.
In connectionless technologies, data is typically sent between communicating endpoints without prior arrangement, but control information is required to identify the destination (e.g., [G.800] and [RFC7276]).
The YANG data model for OAM protocols using connection oriented communications is specified in [RFC8531].
This document defines a base YANG data model for OAM protocols that use connectionless communications.
The data model is defined using the YANG data modeling language [RFC7950].
This generic YANG data model for connectionless
OAM includes only configuration and state data.
It can be used in conjunction with the data retrieval method model described in [RFC8533], which focuses on the data retrieval procedures such as RPC, or it can be used independently of this data retrieval method model.
Conventions Used in This Document
The following terms are defined in [RFC6241] and are used in this specification:  client  configuration data  server  state data
The following terms are defined in [RFC7950] and are used in this specification:  augment  data model
The terminology for describing YANG data models is found in [RFC7950].
Abbreviations BFD Bidirectional Forwarding Detection [RFC5880].
RPC Remote Procedure Call [RFC1831].
DSCP Differentiated Services Code Point.
VRF Virtual Routing and Forwarding [RFC4382].
OWAMP One Way Active Measurement Protocol
TWAMP Two Way Active Measurement Protocol [RFC5357].
PTP Precision Time Protocol [IEEE.1588v2].
NTP Network Time Protocol [RFC5905].
Terminology MAC Media Access Control.
MAC address Address for the data link layer interface.
The TP is a functional entity that is defined at a node in the network and can initiate and/or react to OAM diagnostic tests.
This document focuses on the data plane functionality of TPs.
RPC operation A specific Remote Procedure Call.
[RFC7276] is used to verify that a destination is reachable and therefore also referred to as reachability verification.
Tree Diagrams Tree diagrams used in this document follow the notation defined in [RFC8340].
Overview of the Connectionless OAM Model
The YANG data model for OAM protocols that use connectionless communications has been split into two modules:  The "ietf lime time types" module provides common definitions such as Time related data types and Timestamp related data types.
The "ietf connectionless oam" module defines technology  independent abstraction of key OAM constructs for OAM protocols that use connectionless communication.
The "ietf connectionless oam" module augments the "/networks/network/ node" path defined in the "ietf network" module [RFC8345] with the 'test point locations' grouping defined in Section 3.5.
The network nodes in the "/networks/network/node" path are used to describe the network hierarchies and the inventory of nodes contained in a network.
Under the 'test point locations' grouping, each test point location is chosen based on the 'tp location type' leaf, which, when chosen, leads to a container that includes a list of 'test point locations'.
Each 'test point locations' list includes a 'test point location  info' grouping.
The 'test point location info' grouping includes:  'tp technology' grouping,  'tp tools' grouping, and  'connectionless oam tps' grouping.
The groupings of 'tp address' and 'tp address ni' are kept out of the 'test point location info' grouping to make it addressing agnostic and allow varied composition.
Depending upon the choice of the 'tp location type' (determined by the 'tp address ni'), each container differs in its composition of 'test point locations', while the 'test point location info' is a common aspect of every 'test point locations'.
The 'tp address ni' grouping is used to describe the corresponding network instance.
The 'tp technology' grouping indicates OAM technology details.
The 'connectionless oam tps' grouping is used to describe the relationship of one test point with other test points.
The 'tp tools' grouping describes the OAM tools supported.
In addition, at the top of the model, there is an 'cc oper data' container for session statistics.
A grouping is also defined for common session statistics, and these are only applicable for proactive OAM sessions (see Section 3.2).
TP Address With connectionless OAM protocols
, the TP address can be one of the following types:  MAC address [RFC6136] at the data link layer for TPs
IPv4 or IPv6 address at the IP layer for TPs  TP attribute identifying a TP associated with an application layer function  Router id to represent the device or node, which is commonly used to identify nodes in routing and other control plane protocols [RFC8294].
To define a forwarding treatment of a test packet, the 'tp address' grouping needs to be associated with additional parameters, e.g., DSCP for IP or Traffic Class [RFC5462] for MPLS.
In the generic connectionless OAM YANG data model, these parameters are not explicitly configured.
The model user can add corresponding parameters according to their requirements.
The different OAM tools may be used in one of two basic types of activation: proactive and on demand.
Proactive OAM refers to OAM actions that are carried out continuously to permit proactive reporting of faults.
The proactive OAM method requires persistent configuration.
On demand OAM refers to OAM actions that are initiated via manual intervention for a limited time to carry out specific diagnostics.
The on demand OAM method requires only transient configuration (e.g., [RFC7276] and [G.8013]).
In connectionless OAM, the 'session type' grouping is defined to indicate which kind of activation will be used by the current session.
In connectionless OAM, the tools attribute is used to describe a toolset for fault detection and isolation.
In addition, it can serve as a constraint condition when the base model is extended to a specific OAM technology.
3.3.  OAM Neighboring Test Points Given that typical network communication stacks have a multi layer architecture, the set of associated OAM protocols has also a multi  layer structure; each communication layer in the stack may have its own OAM protocol [RFC7276] that may also be linked to a specific administrative domain.
Management of these OAM protocols will necessitate associated test points in the nodes accessible by appropriate management domains.
Accordingly, a given network interface may actually present several test points.
Each OAM test point may have an associated list of neighboring test points that are in other layers up and down the protocol stack for the same interface and are therefore related to the current test point.
This allows users to easily navigate between related neighboring layers to efficiently troubleshoot a defect.
In this model, the 'position' leaf defines the relative position of the neighboring test point corresponding to the current test point, and it is provided to allow correlation of faults at different locations.
If there is one neighboring test point placed before the current test point, the 'position' leaf is set to  1.
If there is one neighboring test point placed after the current test point, the 'position' leaf is set to 1.
If there is no neighboring test point placed before or after the current test point, the 'position' leaf is set to 0.
This is a generic grouping for Test Point Location Information (i.e., '
test point location info' grouping).
It provides details of Test Point Location using the 'tp technology', 'tp tools', and 'oam neighboring tps' groupings, all of which are defined above.
This is a generic grouping for Test Point Locations.
'tp location  type' leaf is used to define location types   for example, 'ipv4 location type', 'ipv6 location type', etc.
Container is defined under each location type containing a list keyed to a test point address, Test Point Location Information defined in the section above, and network instance name (e.g., VRF instance name) if required.
This is a generic grouping for the path discovery data model that can be retrieved by any data retrieval method, including RPC operations.
Path discovery data output from methods, includes 'src test point' container, 'dst test point' container, 'sequence number' leaf, 'hop cnt' leaf, session statistics of various kinds, and information related to path verification and path trace.
Path discovery includes data to be retrieved on a 'per hop' basis via a list of 'path trace  info list' items which includes information such as 'timestamp' grouping, 'ingress intf name', 'egress intf name', and 'app meta  data'.
The path discovery data model is made generic enough to allow different methods of data retrieval.
None of the fields are made mandatory for that reason.
Note that a set of retrieval methods are defined in [RFC8533].
This is a generic grouping for the Continuity Check data model that can be retrieved by any data retrieval methods including RPC operations.
Continuity Check data output from methods, includes 'src test point' container, 'dst test point' container, 'sequence number' leaf, 'hop cnt' leaf, and session statistics of various kinds.
The Continuity Check data model is made generic enough to allow different methods of data retrieval.
None of the fields are made mandatory for that reason.
Noted that a set of retrieval methods are defined in [RFC8533].
The complete data hierarchy related to the OAM YANG data model is presented below.
ietf connectionless oam  ro cc session statistics data {continuity check}?
cc session statistics  [type]  ro type
ro cc ipv4 sessions statistics
ro session admin down count?
cc session statistics  ro session count?
ro session admin down count?
node:  rw tp location type?
id  rw group as number location type
rw group router id location type  rw test point system info location list
routing instance ref  rw (technology)?
LIME Time Types YANG Module <CODE BEGINS
> file "ietf lime time types@2019 04 16.yang" module ietf lime time types { yang version 1.1; namespace "urn:ietf:params:xml:
yang:ietf lime time types"; prefix lime; organization "IETF LIME Working Group"
"; description "This module provides time related definitions used by the data models written for Layer Independent OAM Management in the Multi Layer Environment (LIME).
This module defines identities but no schema tree elements.
2019 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info).
This version of this YANG module is part of RFC 8532; see the RFC itself for full legal notices."
This module imports the Core YANG Derived Types definition
("ietf  yang types" module) and Internet Specific Derived Types definitions ("ietf inet types" module) from [RFC6991], the "ietf routing types" module from [RFC8294], the "ietf interfaces" module from [RFC8343], the "ietf network" module from [RFC8345], the "ietf network instance" module from [RFC8529], and the "ietf lime time types" module in Section 4.
This module references [IEEE.1588v1], [IEEE.1588v2], [RFC8029], and additional RFCs
cited elsewhere in this document.
file "ietf connectionless oam@2019 04 16.yang
" module ietf connectionless oam { yang version 1.1; namespace "urn:ietf:params:xml:ns:
yang:ietf connectionless oam"; prefix cl oam; import ietf yang schema mount { prefix yangmnt; } import ietf network { prefix nd; } import ietf yang types { prefix yang; } import ietf interfaces { prefix if; } import ietf inet types { prefix inet; } import ietf network instance { prefix ni; } import ietf routing types { prefix rt; } import ietf lime time types { prefix lime; } organization "IETF LIME Working Group"; contact
This YANG module defines the generic configuration, data model, and statistics for OAM protocols using connectionless communications, described in a protocol independent manner.
It is assumed that each protocol maps corresponding abstracts to its native format.
Each protocol may extend the YANG data model defined here to include protocol specific extensions.
2019 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info).
This version of this YANG module is part of RFC 8532; see the RFC itself for full legal notices."
This feature indicates that the server supports executing a path discovery OAM command and returning a response.
; } identity traffic type { description "This is the base identity of the traffic type, which includes IPv4, IPv6, etc."
This is the base identity of the address attribute types, which are Generic IPv4/IPv6 Prefix, BGP Labeled IPv4/IPv6 Prefix, Tunnel ID, PW ID, VPLS VE ID, etc.
(See RFC 8029 for details.)
A value of zero indicates that no down session count is sent."
; } leaf session admin down count { type uint32; default "0"; description "Number of sessions that are admin down.
A value of zero indicates that no admin  down session count is sent."
The value of count will be set to zero (0) on creation and will thereafter increase monotonically until it reaches a maximum value of 2^32 1 (4294967295 decimal), when it wraps around and starts increasing again from zero."
The value of count will be set to zero (0) on creation and will thereafter increase monotonically until it reaches a maximum value of 2^32 1 (4294967295 decimal), when it wraps around and starts increasing again from zero."
The value of count will be set to zero (0) on creation and will thereafter increase monotonically until it reaches a maximum value of 2^32 1 (4294967295 decimal), when it wraps around and starts increasing again from zero."
The value of count will be set to zero (0) on creation and will thereafter increase monotonically until it reaches a maximum value of 2^32 1 (4294967295 decimal), when it wraps around and starts increasing again from zero."
The value of count will be set to zero (0) on creation and will thereafter increase monotonically until it reaches a maximum value of 2^32 1 (4294967295 decimal), when it wraps around and starts increasing again from zero."
Expressed as percentage of packets lost with respect to packets sent."
; } leaf packet reorder count { type uint32 { range "0..4294967295"
; } default "0"; description "Total count of received packets that were reordered.
The value of count will be set to zero (0) on creation and will thereafter increase monotonically until it reaches a maximum value of 2^32 1 (4294967295 decimal), when it wraps around and starts increasing again from zero."
; } leaf packets out of seq count { type uint32 { range "0..4294967295"
; } description "Total count of packets received out of sequence.
The value of count will be set to zero (0) on creation and will thereafter increase monotonically until it reaches a maximum value of 2^32 1 (4294967295 decimal), when it wraps around and starts increasing again from zero."
The value of count will be set to zero (0) on creation and will thereafter increase monotonically until it reaches a maximum value of 2^32 1 (4294967295 decimal), when it wraps around and starts increasing again from zero."
By default, a one way measurement protocol (e.g., OWAMP) is used to measure delay.
When a two way measurement protocol (e.g., TWAMP) is used instead, it can be indicated using the protocol
id defined in RPC operation of retrieval methods for connectionless OAM (RFC 8533)
, i.e., set protocol id as OWAMP.
Note that only one measurement protocol for delay is specified for interoperability reasons."
By default, jitter is measured using IP Packet Delay Variation (IPDV) as defined in RFC 3393.
When the other measurement method is used instead (e.g., Packet Delay Variation used in ITU T Recommendation Y.1540, it can be indicated using protocol id meta data defined in RPC operation of retrieval methods for connectionless OAM (RFC 8533).
The value of count will be set to zero (0) on creation and will thereafter increase monotonically until it reaches a maximum value of 2^32 1 (4294967295 decimal), when it wraps around and starts increasing again from zero."
The value of count will be set to zero (0) on creation and will thereafter increase monotonically until it reaches a maximum value of 2^32 1 (4294967295 decimal), when it wraps around and starts increasing again from zero."
; } enum on demand { description "The current session is an on demand session."
description "Indicate which kind of activation will be used by the current session."
See Sections 3.2.13 and 3.2.14 of RFC 8029."
description "BGP Labeled IPv4/IPv6 Prefix.
See Sections 3.2.11 and 3.2.12 of RFC 8029 for details."
See Sections 3.2.3 and 3.2.4 of RFC 8029 for details."
; reference "RFC 8029: Detecting Multiprotocol Label Switched (MPLS)
type inet:ip address; description "Remote PE address.
See Section 3.2.8 of RFC 8029 for details."
description "Pseudowire ID is a non zero 32 bit ID.
See Sections 3.2.8 and 3.2.9 of RFC 8029 for details."
; reference "RFC 8029: Detecting Multiprotocol Label Switched (MPLS) Data Plane Failures"
route distinguisher; description "Route Distinguisher is an 8 octet identifier used to distinguish information about various L2VPNs advertised by a node."
id { type uint16; description "Sender's VE ID.
The VE ID (VPLS Edge Identifier) is a 2 octet identifier."
d { type uint16; description "Receiver's VE ID.
The VE ID (VPLS Edge Identifier) is a 2 octet identifier."
; description "LSP ID is an identifier of a LSP within a MPLS network."
The position of the neighboring test point relative to the current test point.
Level 0 indicates a test point corresponding to a specific index in the same layer as the current test point.
1 means there is a test point corresponding to a specific index in the test point down the stack, and  1 means there is a test point corresponding to a specific index in the test point up the stack."
; } choice tp location { case mac address { leaf mac address location { type yang:mac address; description "MAC address."
; } description "System ID."
; } description "TP location."
; } description "List of neighboring test points in the same layer that are related to current test point.
If the neighboring test point is placed after the current test point, the position is specified as  1.
If the neighboring test point is placed before the current test point, the position is specified as  1; if no neighboring test points are placed before or after the current test point in the same layer, the position is specified as 0."
This is a placeholder when no technology is needed."; leaf tech null { type empty
; description "There is no technology to be defined."
; description "A flag indicating whether or not the Continuity Check function is supported."; reference "RFC 792: INTERNET CONTROL MESSAGE PROTOCOL RFC 4443: Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6
Bidirectional Forwarding Detection RFC 5881: BFD for IPv4 and IPv6 RFC 5883: BFD for Multihop Paths RFC 5884:
BFD for MPLS Label Switched Paths RFC 5885: BFD for PW VCCV RFC 6450: Multicast Ping Protocol RFC 8029:
"; reference "RFC 792: INTERNET CONTROL MESSAGE PROTOCOL RFC 4443: Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6
(IPv6) Specification RFC 4884: Extended ICMP to Support Multi Part Messages RFC 5837:
Extending ICMP for Interface and Next Hop Identification RFC 8029:
When test point location type is equal to IPv4 address."
; } container test point ipv4 location list { list test point locations { key "ipv4 location ni"; leaf ipv4 location { type inet:ipv4 address; description "IPv4 address."
; } description "Serves as top level container for test point location list."
When test point location is equal to IPv6 address."
; } description "Serves as top level container for test point location list."
; } description "Serves as top level container for test point location list."
; } description "Container for MAC address location types."
; } container group as number location type { when "derived from or self(..
When test point location type is equal to AS number."
; } uses test point location info; description "List of test point locations."
; } description "Serves as top level container for test point location list."
When test point location type is equal to system info."
; } description "Serves as top level container for test point location list."
; } description "Container for system ID location types."
The Network Time Protocol (NTP) 64 bit timestamp format is defined in RFC 5905.
The PTP truncated timestamp format is defined in IEEE 1588v1."
"; uses tp address ni; } container dest test point { description "Destination test point."; uses tp address ni; } leaf sequence number { type uint64; default "0"; description "Sequence number in data packets.
A value of zero indicates that no sequence number is sent."
; } leaf hop cnt { type uint8; default "0"; description "Hop count.
A value of zero indicates that no sequence number is sent."
; } leaf hop cnt { type uint8; default "0"; description "Hop count.
The "ietf connectionless oam" module defined in this document provides a technology independent abstraction of key OAM constructs for OAM protocols that use connectionless communication.
This module can be further extended to include technology specific details, e.g., adding new data nodes with technology specific functions and parameters into proper anchor points of the base model, so as to develop a technology specific connectionless OAM model.
This section demonstrates the usability of the connectionless YANG OAM data model to various connectionless OAM technologies, e.g., BFD and LSP ping.
Note that, in this section, several snippets of technology specific model extensions are presented for illustrative purposes.
The complete model extensions should be worked on in the working groups of the respective protocols.
BFD Extension RFC 7276 defines BFD as a connection oriented protocol.
It is used to monitor a connectionless protocol in the case of basic BFD for IP.
The following sections show how the "ietf connectionless
oam" module can be extended to cover BFD technology.
For this purpose, a set of extensions are introduced such as the technology type extension and test point attributes extension.
Note that a dedicated BFD YANG data model [BFD YANG] is also standardized.
Augmentation of the "ietf connectionless oam" module with BFD specific details provides an alternative approach with a unified view of management information across various OAM protocols.
The BFD specific details can be the grouping defined in the BFD model, thereby avoiding duplication of effort.
No BFD technology type has been defined in the "ietf connectionless  oam" module.
Therefore, a technology type extension is required in the module extension.
To support BFD, the "ietf connectionless oam" module can be extended by adding specific parameters into the "test point locations" list and/or adding a new location type such as "BFD over MPLS TE" under "location type".
Define and Insert New Nodes into Corresponding test point  location In the "ietf connectionless oam" module,
multiple "test point  location" lists are defined under the "location type" choice node.
Therefore, to derive a model for some BFD technologies (such as IP single hop, IP multihop, etc.), data nodes for BFD specific details need to be added to the corresponding "test point locations" list.
In this section, some groupings that are defined in [BFD YANG] are reused as follows.
The snippet below shows how the "ietf connectionless oam" module can be extended to support "BFD IP Single Hop"
Add New location type Cases
In the "ietf connectionless oam" module, If there is no appropriate "location type" case that can be extended, a new "location type" case can be defined and inserted into the "location type" choice node.
Therefore, there is flexibility   the module user can add "location  type" to support other types of test point that are not defined in the "ietf connectionless oam" module.
In this section, a new "location type" case is added, and some groupings that are defined in [BFD YANG] are reused as follows.
The snippet below shows how the "ietf connectionless oam" module can be extended to support "BFD over MPLS TE"
node/coam:location type"{ case te location{ list test point location list{ key "tunnel name"; leaf tunnel name{ type leafref{ path "/te:
; } description "Point to a TE instance."
An alternative method is using the schema mount mechanism [RFC8528] in the "ietf connectionless oam" module.
Within the "test point  locations" list, a "root" attribute is defined to provide a mount point for models that will be added onto per "test point locations".
Therefore, the "ietf connectionless oam" module can provide a place in the node hierarchy where other OAM YANG data models can be attached, without any special extension in the "ietf connectionless  oam" YANG data module [RFC8528].
Note that the limitation of the schema mount method is that it's not allowed to specify certain modules that are required to be mounted under a mount point.
The snippet below depicts the definition of the "root" attribute.
BFD Modules Might Be Populated in schema mounts To support BFD technology, "ietf bfd ip sh" and "ietf bfd ip mh" YANG modules might be populated in the "schema mounts" container:
yang:ietf yang schema mount"> <mount point> <module>
ietf connectionless oam </module> <name
> <name>ietf bfd ip sh </name> <revision>2016 07
yang:ietf bfd ip sh </namespace>
yang:ietf bfd ip mh </namespace>
> and the "ietf connectionless oam" module might have: <ietf connectionless oam uri
> <ietf bfd ip sh uri
yang:ietf bfd ip sh"> <ip sh
<ietf bfd ip mh uri "urn:ietf:params:xml:ns:
yang:ietf bfd ip mh"> <
> </test point locations> </ietf connectionless oam> 6.2.
The following sections show how the "ietf connectionless
oam" module can be extended to support LSP ping technology.
For this purpose, a set of extensions are introduced such as the "technology type" extension and the test point "attributes" extension.
Note that an LSP Ping YANG data model is being specified [LSP PING YANG].
As with BFD, users can choose to use the "ietf connectionless oam" as the basis and augment the "ietf connectionless oam" model with details specific to LSP Ping in the model extension to provide a unified view across different technologies.
The details that are specific to LSP Ping can be the grouping defined in the LSP ping model to avoid duplication of effort.
No LSP Ping technology type has been defined in the "ietf connectionless oam" module.
Therefore, a technology type extension is required in the module extension.
To support LSP Ping, the "ietf connectionless oam" module can be extended and parameters specific to LSP Ping can be defined and put on the "test point locations" list.
Users can reuse the attributes or groupings that are defined in [LSP PING YANG] as follows:
The snippet below depicts an example of augmenting the "test point  locations" list with LSP Ping attributes
An alternative method is using the schema mount mechanism [RFC8528] in the "ietf connectionless oam" module.
Within the "test point  locations" list, a "root" attribute is defined to provide a mounted point for models mounted per "test point locations".
Therefore, the "ietf connectionless oam" model can provide a place in the node hierarchy where other OAM YANG data models can be attached, without any special extension in the "ietf connectionless oam" YANG data module [RFC8528].
Note that the limitation of the schema mount method is that it's not allowed to specify certain modules that are required to be mounted under a mount point.
The snippet below depicts the definition of "root" attribute.
LSP Ping Modules Might Be Populated in schema mounts To support LSP Ping technology, the "ietf lsp ping" YANG module [LSP PING YANG] might be populated in the "schema mounts" container: <schema mounts xmlns
yang:ietf yang schema mount"> <mount point> <module>
ietf connectionless oam </module> <name
> <module> <name>ietf lsp ping </name
yang: ietf lsp ping </namespace>
> and the "ietf connectionless oam" module might have: <ietf connectionless oam uri
> <ietf lsp ping uri
yang:ietf lsp ping"> <lsp pings
pings> </ietf lsp ping> </root
> </test point locations> </ietf connectionless oam
The YANG module specified in this document defines a schema for data that is designed to be accessed via network management protocols such as NETCONF [RFC6241] or RESTCONF [RFC8040].
The lowest NETCONF layer is the secure transport layer, and the mandatory to implement secure transport is Secure Shell (SSH) [RFC6242].
The lowest RESTCONF layer is HTTPS, and the mandatory to implement secure transport is TLS [RFC8446].
The NETCONF Configuration Access Control Model (NACM)
[RFC8341] provides the means to restrict access for particular NETCONF or RESTCONF users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.
There are a number of data nodes defined in this YANG module that are writable/creatable/deletable (i.e., config true, which is the default).
These data nodes may be considered sensitive in some network environments.
Write operations (e.g., edit config) to these data nodes without proper protection can have a negative effect on network operations.
These are the subtrees and data nodes and their sensitivity/vulnerability:
test point ipv4 location list/
test point ipv6 location list/
oam:test point mac address location list/
oam:group  as number location type/
test point as number location list/ cl
oam:group  router id location type/
oam:test point system info location
Unauthorized access to any of these lists can adversely affect OAM management system handling of end to end OAM and coordination of OAM within underlying network layers.
This may lead to inconsistent configuration, reporting, and presentation for the OAM mechanisms used to manage the network.
Some of the readable data nodes in this YANG module may be considered sensitive or vulnerable in some network environments.
It is thus important to control
read access (e.g., via get, get config, or notification) to these data nodes.
These are the subtrees and data nodes and their sensitivity/vulnerability:
oam:session count/ /coam:cc session statistics data/
:session up count/ /coam:cc session statistics data/
:session down count/ /coam:cc session statistics data/cl
oam:session admin down  count/ /coam:
oam:session count/ /coam:cc session statistics data/
:session up count// /coam:cc session statistics data/
:session down count/ /coam:cc session statistics data/cl
oam:session admin down  count/ 8.
This document registers URIs in the "IETF XML Registry" [RFC3688].
Following the format in [RFC3688], the following registrations have been made.
ietf lime time types Registrant Contact: The IESG.
N/A; the requested URI is an XML namespace.
yang:ietf connectionless oam Registrant Contact: The IESG.
N/A; the requested URI is an XML namespace.
This document registers two YANG modules in the "YANG Module Names" registry [RFC6020].
yang:ietf lime time types Prefix:
RFC 8532 Name: ietf connectionless
