Abstract This document specifies how to use the CAST 128 encryption algorithm in output feedback mode with the telnet encryption option.
Two key sizes are defined: 40 bit and 128 bit.
Command Names and Codes Encryption Type CAST5 40
Command Meanings IAC SB ENCRYPT IS CAST5 40
OFB64 OFB64 IV <initial vector> IAC SE IAC SB ENCRYPT
OFB64 OFB64 IV <initial vector
The sender of this command generates a random 8 byte initial vector, and sends it to the other side of the connection using the OFB64 IV command.
The initial vector is sent in clear text.
Only the side of the connection that is WILL ENCRYPT may send the OFB64 IV command.
IAC SB ENCRYPT REPLY CAST5 40
IV OK IAC SE IAC SB ENCRYPT REPLY CAST128
IV OK IAC SE IAC SB ENCRYPT REPLY CAST5 40
IV BAD IAC SE IAC SB ENCRYPT REPLY CAST128
The sender of these commands either accepts or rejects the initial vector received in a OFB64 IV command.
Only the side of the connection that is DO ENCRYPT may send the OFB64
IV OK and OFB64 IV BAD commands.
The OFB64 IV OK command MUST be sent for backwards compatibility with existing implementations; there really isn't any reason why a sender would need to send the OFB64 IV BAD command except in the case of a protocol violation where the IV sent was not of the correct length (i.e., 8 bytes).
Once a OFB64 IV OK command has been received, the WILL ENCRYPT side of the connection should do keyid negotiation using the ENC KEYID command.
Once the keyid negotiation has successfully identified a common keyid, then START and END commands may be sent by the side of the connection that is WILL ENCRYPT.
Data will be encrypted using the CAST128 64 bit Output Feedback algorithm.
If encryption (decryption) is turned off and back on again, and the same keyid is used when re starting the encryption (decryption), the intervening clear text must not change the state of the encryption (decryption) machine.
If a START command is sent (received) with a different keyid, the encryption (decryption) machine must be re initialized immediately following the end of the START command with the new key and the initial vector sent (received) in the last OFB64 IV command.
If a new OFB64 IV command is sent (received), and encryption (decryption) is enabled, the encryption (decryption) machine must be re initialized immediately following the end of the OFB64 IV command with the new initial vector, and the keyid sent (received) in the last START command.
If encryption (decryption) is not enabled when a OFB64 IV command is sent (received), the encryption (decryption) machine must be re  initialized after the next START command, with the keyid sent (received) in that START command, and
the initial vector sent (received) in this OFB64 IV command. 4.
Algorithm CAST 64 bit Output Feedback
iV: Initial vector, 64 bits (8 bytes) long.
Dn: the nth chunk of 64 bits (8 bytes) of data to encrypt (decrypt).
On: the nth chunk of 64 bits (8 bytes) of encrypted (decrypted) output.
Integration with the AUTHENTICATION telnet option As noted in the telnet ENCRYPTION option specifications, a keyid value of zero indicates the default encryption key, as might be derived from the telnet AUTHENTICATION option.
If the default encryption key negotiated as a result of the telnet AUTHENTICATION option contains less than 16 (5) bytes
(CAST5 40 OFB64) option must not be offered or used as a valid telnet encryption option.
If there are less than 32 (10) bytes of key data, the first 16 (5) bytes of key data are used as keyid 0 in each direction.
If there are at least 32 (10) bytes of key data, the first 16 (5) bytes of key data are used to encrypt the data sent by the telnet client to the telnet server; the second 16 (5) bytes of key data are used to encrypt the data sent by the telnet server to the telnet client.
Any extra key data is used as random data to be sent as an initialization vector.
Security Considerations Encryption using Output Feedback does not ensure data integrity; an active attacker may be able to substitute text, if he can predict the clear text that was being transmitted.
The tradeoff here is that adding a message authentication code (MAC) will significantly increase the number of bytes needed to send a single character in the telnet protocol, which will impact performance on slow (i.e. dialup) links.
This option was originally drafted back when CPU speeds where not necessarily fast enough to do allow use of CFB.
Since then, CPU's have gotten much faster.
Given the inherent weaknesses in Output Feedback mode, perhaps it should be deprecated in favor of CFB modes?
Encryption modes using 40 bit keys are not to be considered secure.
The 40 bit key mode CAST5
40 OFB64 is listed here simply to document the implementations that are already prevalent on the Internet but have never been documented.
