- contents:
  - "  Using Authenticated Encryption Algorithms with the Encrypted Payload\n        of
    the Internet Key Exchange version 2 (IKEv2) Protocol\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   An authenticated encryption algorithm combines encryption and\n
    \  integrity into a single operation; such algorithms may also be\n   referred
    to as combined modes of an encryption cipher or as combined\n   mode algorithms.
    \ This document describes the use of authenticated\n   encryption algorithms with
    the Encrypted Payload of the Internet Key\n   Exchange version 2 (IKEv2) protocol.\n
    \  The use of two specific authenticated encryption algorithms with the\n   IKEv2
    Encrypted Payload is also described; these two algorithms are\n   the Advanced
    Encryption Standard (AES) in Galois/Counter Mode (AES\n   GCM) and AES in Counter
    with CBC-MAC Mode (AES CCM).  Additional\n   documents may describe the use of
    other authenticated encryption\n   algorithms with the IKEv2 Encrypted Payload.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Conventions Used in This Document ..........................3\n   2.
    Structure of this Document ......................................4\n   3. IKEv2
    Encrypted Payload Data ....................................4\n      3.1. AES GCM
    and AES CCM Initialization Vector (IV) .............6\n      3.2. AES GCM and
    AES CCM Ciphertext (C) Construction ............6\n   4. AES GCM and AES CCM Nonce
    (N) Format ............................7\n   5. IKEv2 Associated Data (A) .......................................8\n
    \     5.1. Associated Data (A) Construction ...........................8\n      5.2.
    Data Integrity Coverage ....................................8\n   6. AES GCM and
    AES CCM Encrypted Payload Expansion .................9\n   7. IKEv2 Conventions
    for AES GCM and AES CCM .......................9\n      7.1. Keying Material and
    Salt Values ............................9\n      7.2. IKEv2 Identifiers .........................................10\n
    \     7.3. Key Length ................................................10\n   8.
    IKEv2 Algorithm Selection ......................................11\n   9. Test
    Vectors ...................................................11\n   10. RFC 5116
    AEAD_* Algorithms ....................................11\n      10.1. AES GCM
    Algorithms with 8- and 12-octet ICVs .............12\n           10.1.1. AEAD_AES_128_GCM_8
    ................................12\n           10.1.2. AEAD_AES_256_GCM_8 ................................12\n
    \          10.1.3. AEAD_AES_128_GCM_12 ...............................12\n           10.1.4.
    AEAD_AES_256_GCM_12 ...............................12\n      10.2. AES CCM Algorithms
    with an 11-octet Nonce ................13\n           10.2.1. AEAD_AES_128_CCM_SHORT
    ............................13\n           10.2.2. AEAD_AES_256_CCM_SHORT ............................14\n
    \          10.2.3. AEAD_AES_128_CCM_SHORT_8 ..........................14\n           10.2.4.
    AEAD_AES_256_CCM_SHORT_8 ..........................14\n           10.2.5. AEAD_AES_128_CCM_SHORT_12
    .........................14\n           10.2.6. AEAD_AES_256_CCM_SHORT_12 .........................14\n
    \     10.3. AEAD_* Algorithms and IKEv2 ..............................15\n   11.
    Security Considerations .......................................15\n   12. IANA
    Considerations ...........................................16\n   13. Acknowledgments
    ...............................................16\n   14. References ....................................................17\n
    \     14.1. Normative References .....................................17\n      14.2.
    Informative References ...................................17\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   An authenticated encryption algorithm combines encryption
    and\n   integrity into a single operation on plaintext data to produce\n   ciphertext
    that includes an integrity check [RFC5116].  The integrity\n   check may be an
    Integrity Check Value (ICV) that is logically\n   distinct from the encrypted
    data, or the integrity check may be\n   incorporated into the encrypted data that
    is produced.  Authenticated\n   encryption algorithms may also be referred to
    as combined modes of\n   operation of a block cipher or as combined mode algorithms.\n
    \  An Authenticated Encryption with Associated Data (AEAD) algorithm\n   also
    provides integrity protection for additional data that is\n   associated with
    the plaintext, but which is left unencrypted.  This\n   document describes the
    use of AEAD algorithms with the Encrypted\n   Payload of the Internet Key Exchange
    version 2 (IKEv2) protocol.  The\n   use of two specific AEAD algorithms with
    the IKEv2 Encrypted Payload\n   is also described; the two algorithms are the
    Advanced Encryption\n   Standard (AES) in Galois/Counter Mode (AES GCM) [GCM]
    and AES in\n   Counter with CBC-MAC Mode (AES CCM) [CCM].\n   Version 1 of the
    Internet Key Exchange protocol (IKEv1) [RFC2409] is\n   based on the Internet
    Security Association and Key Management\n   Protocol (ISAKMP) [RFC2408].  The
    E (Encryption) bit in the ISAKMP\n   header specifies that all payloads following
    the header are\n   encrypted, but any data integrity verification of those payloads
    is\n   handled by a separate Hash Payload or Signature Payload (see Sections\n
    \  3.1, 3.11, and 3.12 of [RFC2408]).  This separation of encryption\n   from
    data integrity protection prevents the use of authenticated\n   encryption with
    IKEv1, thus limiting initial specifications of AES\n   combined mode usage for
    IPsec to the Encapsulating Security Payload\n   (ESP) [RFC2406].  The current
    version of ESP is version 3, ESPv3\n   [RFC4303].\n   Version 2 of the Internet
    Key Exchange Protocol (IKEv2) [RFC4306]\n   employs an Encrypted Payload that
    is based on the design of ESP.  The\n   IKEv2 Encrypted Payload associates encryption
    and data integrity\n   protection in a fashion that makes it possible to use AEAD\n
    \  algorithms.\n"
  - contents:
    - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted
      as described in [RFC2119].\n   The symbols or variables that designate authenticated
      encryption and\n   decryption operation inputs and outputs (K, N, P, A, and
      C) are\n   defined in [RFC5116].  The SK_* symbols or variables that designate\n
      \  specific IKEv2 keys are defined in [RFC4306].\n"
    title: 1.1.  Conventions Used in This Document
  title: 1.  Introduction
- contents:
  - "2.  Structure of this Document\n   This document is based on the RFCs that describe
    the usage of AES GCM\n   [RFC4106] and AES CCM [RFC4309] with ESP; hence, the
    introductory\n   material and specification of the modes in those documents are
    not\n   repeated here.  The structure of this document follows the structure\n
    \  of those documents; many sections of this document indicate which\n   sections
    of those two documents correspond, and call out any\n   significant differences
    that implementers should be aware of.\n   Significant portions of the text of
    this document have been adapted\n   from those two documents.\n   This document
    is based on the authenticated encryption interfaces,\n   notation, and terminology
    described in [RFC5116].  An important\n   departure from [RFC4106] and [RFC4309]
    is that these two RFCs\n   describe separate ciphertext and integrity check outputs
    of the\n   encryption operation, whereas [RFC5116] specifies a single ciphertext\n
    \  (C) output that includes an integrity check.  The latter more general\n   approach
    encompasses authenticated encryption algorithms that produce\n   a single, expanded
    ciphertext output into which the integrity check\n   is incorporated, rather than
    producing separate ciphertext and\n   integrity check outputs.\n   For AES GCM
    and AES CCM, the [RFC5116] ciphertext (C) output of\n   authenticated encryption
    consists of the [RFC4106] or [RFC4309]\n   ciphertext output concatenated with
    the [RFC4106] or [RFC4309]\n   Integrity Check Value (ICV) output.  This document
    does not modify\n   the AES GCM or AES CCM authenticated encryption algorithms
    specified\n   in [RFC4106] and [RFC4309].\n"
  title: 2.  Structure of this Document
- contents:
  - "3.  IKEv2 Encrypted Payload Data\n   This section is based on [RFC5116] and Section
    3.14 of [RFC4306].\n   For the use of authenticated encryption algorithms with
    the IKEv2\n   Encrypted Payload, this section updates Section 3.14 of [RFC4306]
    by\n   replacing Figure 21 and the text that follows it (through the end of\n
    \  that section) with the contents of this section.  In addition,\n   Section
    3.14 of [RFC4306] is also updated to allow the use of a\n   single authenticated
    encryption algorithm instead of a block cipher\n   and a separate integrity check
    algorithm.  In contrast, Sections 3.1\n   and 3.2 of this document are specific
    to the AES GCM and AES CCM\n   algorithms and hence do not update [RFC4306].  The
    updates to\n   [RFC4306] made by this document have no effect when authenticated\n
    \  encryption algorithms are neither proposed nor used.\n   The IKEv2 Encrypted
    Payload Data structure applies to all\n   authenticated encryption algorithms,
    and it is the same structure\n   that is used with ESP.  When an authenticated
    encryption algorithm is\n   used, the IKEv2 Encrypted Payload is composed of the
    payload header\n   fields, followed by an Initialization Vector (IV) field and
    a\n   Ciphertext (C) field that includes an integrity check as shown in\n   Figure
    1.\n                           1                   2                   3\n       0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     ! Next Payload  !C!  RESERVED   !         Payload Length        !\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     !                     Initialization Vector                     !\n      !
    \ (length is specified by authenticated encryption algorithm)  !\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     ~                        Ciphertext                             ~\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    Figure 1. IKEv2 Encrypted Payload Data for Authenticated Encryption\n   The
    Next Payload, C bit, and Payload Length fields are unchanged from\n   [RFC4306].\n
    \  The contents of the Initialization Vector (IV) field are specified by\n   the
    authenticated encryption algorithm; see Sections 3.1 and 4\n   (below) for AES
    GCM and AES CCM.\n   The Ciphertext field is the output of an authenticated encryption\n
    \  operation (see Section 2.1 of [RFC5116]) on the following inputs:\n   o  The
    secret key (K) is the cipher key obtained from the SK_ei or\n      SK_er key,
    whichever is appropriate, see [RFC4306].  The\n      authenticated encryption
    algorithm describes how to obtain the\n      cipher key from SK_ei or SK_er; for
    AES GCM and AES CCM, see\n      Section 7.1 (below).\n   o  The nonce (N) is specified
    by the authenticated encryption\n      algorithm; for AES GCM and AES CCM, see
    Section 4 (below).  When\n      decrypting an Encrypted Payload, a receiver constructs
    the nonce\n      based on the IV in the Encrypted Payload, using rules that are\n
    \     specific to the authenticated encryption algorithm; see Sections\n      3.1
    and 4 (below) for AES GCM and AES CCM.\n   o  The plaintext (P) consists of the
    concatenation of the IKE\n      Payloads to be encrypted with the Padding (if
    any) and the Pad\n      Length, as shown in Figure 2 (below).  The plaintext structure
    in\n      Figure 2 applies to all encryption algorithms used with the IKEv2\n
    \     Encrypted Payload, and is unchanged from [RFC4306].\n   o  The associated
    data (A) is described in Section 5 (below).\n                           1                   2
    \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     ~                 IKE Payloads to be Encrypted                  ~\n      +
    \              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      !               !
    \            Padding (0-255 octets)            !\n      +-+-+-+-+-+-+-+-+                               +-+-+-+-+-+-+-+-+\n
    \     !                                               !  Pad Length   !\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \             Figure 2. IKEv2 Encrypted Payload Plaintext (P)\n   The IKE Payloads
    are as specified in [RFC4306].\n   Padding MAY contain any value chosen by the
    sender.\n   Pad Length is the number of octets in the Padding field.  There are\n
    \  no alignment requirements on the length of the Padding field; the\n   recipient
    MUST accept any amount of Padding up to 255 octets.\n   The ciphertext output
    of authenticated encryption algorithms, as\n   defined by [RFC5116], incorporates
    data that allows checks on the\n   integrity and authenticity of the ciphertext
    and associated data.\n   Thus, there is no need for a separate Integrity Check
    Value (ICV)\n   field in the IKEv2 Encrypted Payload Data structure.\n"
  - contents:
    - "3.1.  AES GCM and AES CCM Initialization Vector (IV)\n   This section is based
      on Section 3.1 of [RFC4106] and Section 3.1 of\n   [RFC4309].  The Initialization
      Vector requirements are common to AES\n   GCM and AES CCM, and are the same
      as the requirements for ESP.\n   The Initialization Vector (IV) MUST be eight
      octets.  The IV MUST be\n   chosen by the encryptor in a manner that ensures
      that the same IV\n   value is used only once for a given key.  The encryptor
      MAY generate\n   the IV in any manner that ensures uniqueness.  Common approaches
      to\n   IV generation include incrementing a counter for each packet and\n   linear
      feedback shift registers (LFSRs).\n"
    title: 3.1.  AES GCM and AES CCM Initialization Vector (IV)
  - contents:
    - "3.2.  AES GCM and AES CCM Ciphertext (C) Construction\n   This section is based
      on Section 6 of [RFC4106] and Section 3.1 of\n   [RFC4309] with generalizations
      to match the interfaces specified in\n   [RFC5116].  The constructions for AES
      GCM and AES CCM are different,\n   but in each case, the construction is the
      same as for ESP.\n   For AES GCM and AES CCM, the Ciphertext field consists
      of the output\n   of the authenticated encryption algorithm.  (Note that this
      field\n   incorporates integrity check data.)\n   The AES GCM ICV consists solely
      of the AES GCM Authentication Tag.\n   Implementations MUST support a full-length
      16 octet ICV, MAY support\n   8 or 12 octet ICVs, and MUST NOT support other
      ICV lengths.\n   AES CCM provides an encrypted ICV.  Implementations MUST support
      ICV\n   sizes of 8 octets and 16 octets.  Implementations MAY also support 12\n
      \  octet ICVs and MUST NOT support other ICV lengths.\n"
    title: 3.2.  AES GCM and AES CCM Ciphertext (C) Construction
  title: 3.  IKEv2 Encrypted Payload Data
- contents:
  - "4.  AES GCM and AES CCM Nonce (N) Format\n   Specific authenticated encryption
    algorithms MAY use different nonce\n   formats, but they SHOULD use the default
    nonce format specified in\n   this section.\n   The default nonce format uses
    partially implicit nonces (see Section\n   3.2.1 of [RFC5116]) as follows:\n   o
    \ The implicit portion of the nonce is the salt that is part of the\n      IKEv2
    Keying Material shared by the encryptor and decryptor (see\n      Section 7.1);
    the salt is not included in the IKEv2 Encrypted\n      Payload.\n   o  The explicit
    portion of the nonce is the IV that is included in\n      the IKEv2 Encrypted
    Payload.\n   When this default nonce format is used, both the encryptor and\n
    \  decryptor construct the nonce by concatenating the salt with the IV,\n   in
    that order.\n   For the use of AES GCM with the IKEv2 Encrypted Payload, this
    default\n   nonce format MUST be used and a 12 octet nonce MUST be used.  Note\n
    \  that this format matches the one specified in Section 4 of [RFC4106],\n   providing
    compatibility between the use of AES GCM in IKEv2 and ESP.\n   All of the requirements
    of Section 4 of [RFC4106] apply to the use of\n   AES GCM with the IKEv2 Encrypted
    Payload.\n   For the use of AES CCM with the IKEv2 Encrypted Payload, this default\n
    \  nonce format MUST be used and an 11 octet nonce MUST be used.  Note\n   that
    this format matches the one specified in Section 4 of [RFC4309],\n   providing
    compatibility between the use of AES CCM in IKEv2 and ESP.\n   All of the requirements
    of Section 4 of [RFC4309] apply to the use of\n   AES CCM with the IKEv2 Encrypted
    Payload.\n"
  title: 4.  AES GCM and AES CCM Nonce (N) Format
- contents:
  - "5.  IKEv2 Associated Data (A)\n   This section is based on Section 5 of [RFC4106]
    and Section 5 of\n   [RFC4309], both of which refer to associated data as Additional\n
    \  Authenticated Data (AAD).  The associated data construction described\n   in
    this section applies to all authenticated encryption algorithms,\n   but differs
    from the construction used with ESP because IKEv2\n   requires different data
    integrity coverage.\n"
  - contents:
    - "5.1.  Associated Data (A) Construction\n   The associated data (A) MUST consist
      of the partial contents of the\n   IKEv2 message, starting from the first octet
      of the Fixed IKE Header\n   through the last octet of the Payload Header of
      the Encrypted Payload\n   (i.e., the fourth octet of the Encrypted Payload),
      as shown in Figure\n   3.  This includes any payloads that are between the Fixed
      IKE Header\n   and the Encrypted Payload.\n                           1                   2
      \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     ~                         IKEv2 Header                          ~\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     ~                   Unencrypted IKE Payloads                    ~\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     ! Next Payload  !C!  RESERVED   !         Payload Length        !\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \        Figure 3. IKEv2 Encrypted Payload Associated Data (A) for\n                         Authenticated
      Encryption\n   The Initialization Vector and Ciphertext fields shown in Figure
      1\n   (above) MUST NOT be included in the associated data.\n"
    title: 5.1.  Associated Data (A) Construction
  - contents:
    - "5.2.  Data Integrity Coverage\n   The data integrity coverage of the IKEv2
      Encrypted Payload\n   encompasses the entire IKEv2 message that contains the
      Encrypted\n   Payload.  When an authenticated encryption algorithm is used with
      the\n   Encrypted Payload, this coverage is realized as follows:\n   1. The
      associated data (A) covers the portion of the IKEv2 message\n      starting
      from the first octet of the Fixed IKE Header through the\n      last octet of
      the Payload Header of the Encrypted Payload (fourth\n      octet of the Encrypted
      Payload).  This includes any Payloads\n      between the Fixed IKE Header and
      the Encrypted Payload.  The\n      Encrypted Payload is always the last payload
      in an IKEv2 message\n      [RFC4306].\n   2. The IV is an input to the authenticated
      encryption algorithm's\n      integrity check.  A successful integrity check
      at the receiver\n      verifies that the correct IV was used, providing data
      integrity\n      coverage for the IV.\n   3. The plaintext (IKE Payloads, Padding
      and Pad Length) is covered by\n      the authenticated encryption algorithm's
      integrity check.\n"
    title: 5.2.  Data Integrity Coverage
  title: 5.  IKEv2 Associated Data (A)
- contents:
  - "6.  AES GCM and AES CCM Encrypted Payload Expansion\n   The expansion described
    in Section 7 of [RFC4106] and Section 6 of\n   [RFC4309] applies to the use of
    the AES GCM and AES CCM combined\n   modes with the IKEv2 Encrypted Payload.  See
    Section 7 of [RFC4106]\n   and Section 6 of [RFC4309].\n"
  title: 6.  AES GCM and AES CCM Encrypted Payload Expansion
- contents:
  - "7.  IKEv2 Conventions for AES GCM and AES CCM\n   This section describes the
    conventions used to generate keying\n   material and salt values for use with
    AES GCM and AES CCM using the\n   IKEv2 [RFC4306] protocol.  The identifiers and
    attributes needed to\n   use AES GCM and AES CCM with the IKEv2 Encrypted Payload
    are also\n   specified.\n"
  - contents:
    - "7.1.  Keying Material and Salt Values\n   This section is based on Section
      8.1 of [RFC4106] and Section 7.1 of\n   [RFC4309].  The Keying Material and
      Salt Values for AES GCM and AES\n   CCM are different, but have the same structure
      as the Keying Material\n   and Salt Values used with ESP.\n   IKEv2 makes use
      of a Pseudo-Random Function (PRF) to derive keying\n   material.  The PRF is
      used iteratively to derive keying material of\n   arbitrary size, from which
      keying material for specific uses is\n   extracted without regard to PRF output
      boundaries; see Section 2.14\n   of [RFC4306].\n   This subsection describes
      how the key derivation specified in Section\n   2.14 of [RFC4306] is used to
      obtain keying material for AES GCM and\n   AES CCM.  When AES GCM or AES CCM
      is used with the IKEv2 Encrypted\n   Payload, the SK_ai and SK_ar integrity
      protection keys are not used;\n   each key MUST be treated as having a size
      of zero (0) octets.  The\n   size of each of the SK_ei and SK_er encryption
      keys includes\n   additional salt bytes.  The size and format of each of the
      SK_ei and\n   SK_er encryption keys MUST be:\n   o  For AES GCM, each encryption
      key has the size and format of the\n      \"KEYMAT requested\" material specified
      in Section 8.1 of [RFC4106]\n      for the AES key size being used.  For example,
      if the AES key size\n      is 128 bits, each encryption key is 20 octets, consisting
      of a\n      16-octet AES cipher key followed by 4 octets of salt.\n   o  For
      AES CCM, each key has the size and format of the \"KEYMAT\n      requested\"
      material specified in Section 7.1 of [RFC4309] for the\n      AES key size being
      used.  For example, if the AES key size is 128\n      bits, each encryption
      key is 19 octets, consisting of a 16-octet\n      AES cipher key followed by
      3 octets of salt.\n"
    title: 7.1.  Keying Material and Salt Values
  - contents:
    - "7.2.  IKEv2 Identifiers\n   This section is unique to the IKEv2 Encrypted Payload
      usage of AES\n   GCM and AES CCM.  It reuses the identifiers used to negotiate
      ESP\n   usage of AES GCM and AES CCM.\n   The following identifiers, previously
      allocated by IANA, are used to\n   negotiate the use of AES GCM and AES CCM
      as the Encryption (ENCR)\n   Transform for IKEv2 (i.e., for use with the IKEv2
      Encrypted Payload):\n         14 for AES CCM with an 8-octet ICV;\n         15
      for AES CCM with a 12-octet ICV;\n         16 for AES CCM with a 16-octet ICV;\n
      \        18 for AES GCM with an 8-octet ICV;\n         19 for AES GCM with a
      12-octet ICV; and\n         20 for AES GCM with a 16-octet ICV.\n   A 16-octet
      ICV size SHOULD be used with IKEv2, as the higher level of\n   security that
      it provides by comparison to smaller ICV sizes is\n   appropriate to IKEv2's
      key exchange and related functionality.\n   In general, the use of 12-octet
      ICVs (values 15 and 19) is NOT\n   RECOMMENDED in order to reduce the number
      of options for ICV size.\n   If an ICV size larger than 8 octets is appropriate,
      16-octet ICVs\n   SHOULD be used.\n"
    title: 7.2.  IKEv2 Identifiers
  - contents:
    - "7.3.  Key Length\n   This section is based on Section 8.4 of [RFC4106] and
      Section 7.4 of\n   [RFC4309].  The Key Length requirements are common to AES
      GCM and AES\n   CCM and are identical to the key length requirements for ESP.\n
      \  Because the AES supports three key lengths, the Key Length attribute\n   MUST
      be specified when any of the identifiers for AES GCM or AES CCM,\n   specified
      in Section 7.2 of this document, is used.  The Key Length\n   attribute MUST
      have a value of 128, 192, or 256.  The use of the\n   value 192 is NOT RECOMMENDED.
      \ If an AES key larger than 128 bits is\n   appropriate, a 256-bit AES key SHOULD
      be used.  This reduces the\n   number of options for AES key length.\n"
    title: 7.3.  Key Length
  title: 7.  IKEv2 Conventions for AES GCM and AES CCM
- contents:
  - "8.  IKEv2 Algorithm Selection\n   This section applies to the use of any authenticated
    encryption\n   algorithm with the IKEv2 Encrypted Payload and is unique to that\n
    \  usage.\n   IKEv2 (Section 3.3.3 of [RFC4306]) specifies that both an encryption\n
    \  algorithm and an integrity checking algorithm are required for an IKE\n   SA
    (Security Association).  This document updates [RFC4306] to\n   require that when
    an authenticated encryption algorithm is selected\n   as the encryption algorithm
    for any SA (IKE or ESP), an integrity\n   algorithm MUST NOT be selected for that
    SA.  This document further\n   updates [RFC4306] to require that if all of the
    encryption algorithms\n   in any proposal are authenticated encryption algorithms,
    then the\n   proposal MUST NOT propose any integrity transforms.\n"
  title: 8.  IKEv2 Algorithm Selection
- contents:
  - "9.  Test Vectors\n   See Section 9 of [RFC4106] and Section 8 of [RFC4309] for
    references\n   that provide AES GCM and AES CCM test vectors.\n"
  title: 9.  Test Vectors
- contents:
  - "10.  RFC 5116 AEAD_* Algorithms\n   This section adds new algorithms to the AEAD_*
    algorithm framework\n   defined in [RFC5116] to encompass the usage of AES GCM
    and AES CCM\n   with IKEv2.  An AEAD_* algorithm does not have any attributes
    or\n   parameters; each AEAD_* algorithm identifier defined in this document\n
    \  completely specifies the AES key size and the ICV size to be used\n   (e.g.,
    AEAD_AES_128_GCM uses a 128-bit AES key and a 16-octet ICV).\n   AEAD_* algorithm
    coverage of the AES GCM and AES CCM authenticated\n   encryption algorithms used
    with IKEv2 requires specification of eight\n   additional AEAD_* algorithms beyond
    the four algorithms specified in\n   [RFC5116]:\n   o  Four AEAD_* algorithms
    are specified to allow 8- and 12-octet ICVs\n      to be used with the AES GCM
    and AEAD_* algorithms specified in\n      [RFC5116].\n   o  The version of AES
    CCM used with IPsec (see [RFC4309]) uses an\n      11-octet nonce instead of the
    12-octet nonce used by the version\n      of AES CCM specified in [RFC5116].  Six
    AEAD_* algorithms are\n      specified for this short nonce version of AES CCM.\n
    \  This document recommends against the use of 192-bit AES keys, and\n   therefore
    does not specify AEAD_* algorithms for 192-bit AES keys.\n"
  - contents:
    - "10.1.  AES GCM Algorithms with 8- and 12-octet ICVs\n   The following four
      AEAD_* algorithms are identical to the AEAD_*\n   algorithms specified in [RFC5116],
      except that an 8-octet ICV is used\n   instead of a 16-octet ICV.\n"
    - contents:
      - "10.1.1.  AEAD_AES_128_GCM_8\n   This algorithm is identical to AEAD_AES_128_GCM
        (see Section 5.1 of\n   [RFC5116]), except that the tag length, t, is 8, and
        an\n   authentication tag with a length of 8 octets (64 bits) is used.\n   An
        AEAD_AES_128_GCM_8 ciphertext is exactly 8 octets longer than its\n   corresponding
        plaintext.\n"
      title: 10.1.1.  AEAD_AES_128_GCM_8
    - contents:
      - "10.1.2.  AEAD_AES_256_GCM_8\n   This algorithm is identical to AEAD_AES_256_GCM
        (see Section 5.2 of\n   [RFC5116]), except that the tag length, t, is 8, and
        an\n   authentication tag with a length of 8 octets (64 bits) is used.\n   An
        AEAD_AES_256_GCM_8 ciphertext is exactly 8 octets longer than its\n   corresponding
        plaintext.\n"
      title: 10.1.2.  AEAD_AES_256_GCM_8
    - contents:
      - "10.1.3.  AEAD_AES_128_GCM_12\n   This algorithm is identical to AEAD_AES_128_GCM
        (see Section 5.1 of\n   [RFC5116]), except that the tag length, t, is 12,
        and an\n   authentication tag with a length of 12 octets (64 bits) is used.\n
        \  An AEAD_AES_128_GCM_12 ciphertext is exactly 12 octets longer than\n   its
        corresponding plaintext.\n"
      title: 10.1.3.  AEAD_AES_128_GCM_12
    - contents:
      - "10.1.4.  AEAD_AES_256_GCM_12\n   This algorithm is identical to AEAD_AES_256_GCM
        (see Section 5.2 of\n   [RFC5116], except that the tag length, t, is 12 and
        an authentication\n   tag with a length of 12 octets (64 bits) is used.\n
        \  An AEAD_AES_256_GCM_12 ciphertext is exactly 12 octets longer than\n   its
        corresponding plaintext.\n"
      title: 10.1.4.  AEAD_AES_256_GCM_12
    title: 10.1.  AES GCM Algorithms with 8- and 12-octet ICVs
  - contents:
    - "10.2.  AES CCM Algorithms with an 11-octet Nonce\n   The following four AEAD
      algorithms employ the AES CCM algorithms with\n   an 11 octet nonce as specified
      in [RFC4309].\n"
    - contents:
      - "10.2.1.  AEAD_AES_128_CCM_SHORT\n   The AEAD_AES_128_CCM_SHORT authenticated
        encryption algorithm is\n   identical to the AEAD_AES_128_CCM algorithm (see
        Section 5.3 of\n   [RFC5116]), except that it uses a nonce that is one octet
        shorter.\n   AEAD_AES_128_CCM_SHORT works as specified in [CCM].  It uses
        AES-128\n   as the block cipher by providing the key, nonce, associated data,
        and\n   plaintext to that mode of operation.  The formatting and counter\n
        \  generation function are as specified in Appendix A of [CCM], and the\n
        \  values of the parameters identified in that appendix are as follows:\n
        \        the nonce length n is 11,\n         the tag length t is 16, and\n
        \        the value of q is 3.\n   An authentication tag with a length of 16
        octets (128 bits) is used.\n   The AEAD_AES_128_CCM_SHORT ciphertext consists
        of the ciphertext\n   output of the CCM encryption operation concatenated
        with the\n   authentication tag output of the CCM encryption operation.  Test\n
        \  cases are provided in [CCM].  The input and output lengths are as\n   follows:\n
        \        K_LEN is 16 octets,\n         P_MAX is 2^24 - 1 octets,\n         A_MAX
        is 2^64 - 1 octets,\n         N_MIN and N_MAX are both 11 octets, and\n         C_MAX
        is 2^24 + 15 octets.\n   An AEAD_AES_128_CCM_SHORT ciphertext is exactly 16
        octets longer than\n   its corresponding plaintext.\n"
      title: 10.2.1.  AEAD_AES_128_CCM_SHORT
    - contents:
      - "10.2.2.  AEAD_AES_256_CCM_SHORT\n   This algorithm is identical to AEAD_AES_128_CCM_SHORT,
        but with the\n   following differences:\n         K_LEN is 32 octets, instead
        of 16, and\n         AES-256 CCM is used instead of AES-128 CCM.\n   An AEAD_AES_256_CCM_SHORT
        ciphertext is exactly 16 octets longer than\n   its corresponding plaintext.\n"
      title: 10.2.2.  AEAD_AES_256_CCM_SHORT
    - contents:
      - "10.2.3.  AEAD_AES_128_CCM_SHORT_8\n   This algorithm is identical to AEAD_AES_128_CCM_SHORT,
        except that\n   the tag length, t, is 8, and an authentication tag with a
        length of 8\n   octets (64 bits) is used.\n   An AEAD_AES_128_CCM_SHORT_8
        ciphertext is exactly 8 octets longer\n   than its corresponding plaintext.\n"
      title: 10.2.3.  AEAD_AES_128_CCM_SHORT_8
    - contents:
      - "10.2.4.  AEAD_AES_256_CCM_SHORT_8\n   This algorithm is identical to AEAD_AES_256_CCM_SHORT,
        except that\n   the tag length, t, is 8, and an authentication tag with a
        length of 8\n   octets (64 bits) is used.\n   An AEAD_AES_256_CCM_SHORT_8
        ciphertext is exactly 8 octets longer\n   than its corresponding plaintext.\n"
      title: 10.2.4.  AEAD_AES_256_CCM_SHORT_8
    - contents:
      - "10.2.5.  AEAD_AES_128_CCM_SHORT_12\n   This algorithm is identical to AEAD_AES_128_CCM_SHORT,
        except that\n   the tag length, t, is 12, and an authentication tag with a
        length of\n   12 octets (64 bits) is used.\n   An AEAD_AES_128_CCM_SHORT_12
        ciphertext is exactly 12 octets longer\n   than its corresponding plaintext.\n"
      title: 10.2.5.  AEAD_AES_128_CCM_SHORT_12
    - contents:
      - "10.2.6.  AEAD_AES_256_CCM_SHORT_12\n   This algorithm is identical to AEAD_AES_256_CCM_SHORT,
        except that\n   the tag length, t, is 12, and an authentication tag with a
        length of\n   8 octets (64 bits) is used.\n   An AEAD_AES_256_CCM_SHORT_12
        ciphertext is exactly 12 octets longer\n   than its corresponding plaintext.\n"
      title: 10.2.6.  AEAD_AES_256_CCM_SHORT_12
    title: 10.2.  AES CCM Algorithms with an 11-octet Nonce
  - contents:
    - "10.3.  AEAD_* Algorithms and IKEv2\n   The following table lists the AES CCM
      and AES GCM AEAD_* algorithms\n   that can be negotiated by IKEv2 and provides
      the IKEv2 Encryption\n   (ENCR) Transform Identifier and Key Length Attribute
      combination that\n   is used to negotiate each algorithm.\n      +--------------------------+------------------+-------------+\n
      \     | AEAD algorithm           | ENCR Identifier  | Key Length  |\n      +--------------------------+------------------+-------------+\n
      \     | AEAD_AES_128_GCM         |        20        |     128     |\n      |
      AEAD_AES_256_GCM         |        20        |     256     |\n      | AEAD_AES_128_GCM_8
      \      |        18        |     128     |\n      | AEAD_AES_256_GCM_8       |
      \       18        |     256     |\n      | AEAD_AES_128_GCM_12      |        19
      \       |     128     |\n      | AEAD_AES_256_GCM_12      |        19        |
      \    256     |\n      | AEAD_AES_128_CCM_SHORT   |        16        |     128
      \    |\n      | AEAD_AES_256_CCM_SHORT   |        16        |     256     |\n
      \     | AEAD_AES_128_CCM_SHORT_8 |        14        |     128     |\n      |
      AEAD_AES_256_CCM_SHORT_8 |        14        |     256     |\n      | AEAD_AES_128_CCM_SHORT_12|
      \       15        |     128     |\n      | AEAD_AES_256_CCM_SHORT_12|        15
      \       |     256     |\n      +--------------------------+------------------+-------------+\n
      \  Each of the above AEAD_* algorithms is identical to the algorithm\n   designated
      by the combination of the IKEv2 ENCR Identifier and Key\n   Length Attribute
      shown on the same line of the table.\n"
    title: 10.3.  AEAD_* Algorithms and IKEv2
  title: 10.  RFC 5116 AEAD_* Algorithms
- contents:
  - "11.  Security Considerations\n   For authenticated encryption security considerations,
    see the\n   entirety of [RFC5116], not just its security considerations section;\n
    \  there are important security considerations that are discussed\n   outside
    the security considerations section of that document.\n   The security considerations
    for the use of AES GCM and AES CCM with\n   ESP apply to the use of these algorithms
    with the IKEv2 Encrypted\n   Payload, see Section 10 of [RFC4106] and Section
    9 of [RFC4309].  Use\n   of AES GCM and AES CCM with IKEv2 does not create additional
    security\n   considerations beyond those for the use of AES GCM and AES CCM with\n
    \  ESP.\n   For IKEv2 security considerations, see Section 5 of [RFC4306].\n"
  title: 11.  Security Considerations
- contents:
  - "12.  IANA Considerations\n   The Encryption Transform identifiers specified in
    Section 7.2 have\n   been previously assigned by IANA for use with ESP.  This
    document\n   extends their usage to IKEv2 for the Encrypted Payload.  No IANA\n
    \  actions are required for this usage extension.\n   IANA has added the following
    entries to the Authenticated Encryption\n   with Associated Data (AEAD) Parameters
    Registry:\n   +--------------------------+----------------+--------------------+\n
    \  | Name                     |  Reference     | Numeric Identifier |\n   +--------------------------+----------------+--------------------+\n
    \  | AEAD_AES_128_GCM_8       | Section 10.1.1 |          5         |\n   | AEAD_AES_256_GCM_8
    \      | Section 10.1.2 |          6         |\n   | AEAD_AES_128_GCM_12      |
    Section 10.1.3 |          7         |\n   | AEAD_AES_256_GCM_12      | Section
    10.1.4 |          8         |\n   | AEAD_AES_128_CCM_SHORT   | Section 10.2.1
    |          9         |\n   | AEAD_AES_256_CCM_SHORT   | Section 10.2.2 |         10
    \        |\n   | AEAD_AES_128_CCM_SHORT_8 | Section 10.2.3 |         11         |\n
    \  | AEAD_AES_256_CCM_SHORT_8 | Section 10.2.4 |         12         |\n   | AEAD_AES_128_CCM_SHORT_12|
    Section 10.2.5 |         13         |\n   | AEAD_AES_256_CCM_SHORT_12| Section
    10.2.6 |         14         |\n   +--------------------------+----------------+--------------------+\n
    \  An IANA registration of an AEAD algorithm does not constitute an\n   endorsement
    of that algorithm or its security.\n"
  title: 12.  IANA Considerations
- contents:
  - "13.  Acknowledgments\n   See Section 13 of [RFC4106] and Section 12 of [RFC4309]
    for AES GCM\n   and AES CCM acknowledgments.\n   Also, we thank Charlie Kaufman,
    Pasi Eronen, Tero Kivinen, Steve\n   Kent, and Alfred Hoenes for their comprehensive
    reviews of this\n   document.\n   This document was originally prepared using
    2-Word-v2.0.template.dot,\n   created by Joe Touch.\n"
  title: 13.  Acknowledgments
- contents:
  - '14.  References

    '
  - contents:
    - "14.1.  Normative References\n   [CCM]     Dworkin, M., \"NIST Special Publication
      800-38C: The CCM\n             Mode for Authentication and Confidentiality\",
      U.S. National\n             Institute of Standards and Technology,\n             <http://csrc.nist.gov/publications/nistpubs/800-38C/\n
      \            SP800-38C.pdf>, updated July 2007.\n   [GCM]     Dworkin, M., \"NIST
      Special Publication 800-38D:\n             Recommendation for Block Cipher Modes
      of Operation:\n             Galois/Counter Mode (GCM) and GMAC.\", U.S. National\n
      \            Institute of Standards and Technology, November 2007,\n             <http://csrc.nist.gov/publications/nistpubs/800-38D/\n
      \            SP-800-38D.pdf>, November 2007.\n   [RFC2119] Bradner, S., \"Key
      words for use in RFCs to Indicate\n             Requirement Levels\", BCP 14,
      RFC 2119, March 1997.\n   [RFC4106] Viega, J. and D. McGrew, \"The Use of Galois/Counter
      Mode\n             (GCM) in IPsec Encapsulating Security Payload (ESP)\", RFC\n
      \            4106, June 2005.\n   [RFC4303] Kent, S., \"IP Encapsulating Security
      Payload (ESP)\", RFC\n             4303, December 2005.\n   [RFC4306] Kaufman,
      C., Ed., \"Internet Key Exchange (IKEv2) Protocol\",\n             RFC 4306,
      December 2005.\n   [RFC4309] Housley, R., \"Using Advanced Encryption Standard
      (AES) CCM\n             Mode with IPsec Encapsulating Security Payload (ESP)\",
      RFC\n             4309, December 2005.\n   [RFC5116] McGrew, D., \"An Interface
      and Algorithms for Authenticated\n             Encryption\", RFC 5116, January
      2008.\n"
    title: 14.1.  Normative References
  - contents:
    - "14.2.  Informative References\n   [RFC2406] Kent, S. and R. Atkinson, \"IP
      Encapsulating Security\n             Payload (ESP)\", RFC 2406, November 1998.\n
      \  [RFC2408] Maughan, D., Schertler, M., Schneider, M., and J. Turner,\n             \"Internet
      Security Association and Key Management Protocol\n             (ISAKMP)\", RFC
      2408, November 1998.\n   [RFC2409] Harkins, D. and D. Carrel, \"The Internet
      Key Exchange\n             (IKE)\", RFC 2409, November 1998.\n"
    title: 14.2.  Informative References
  title: 14.  References
- contents:
  - "Author's Addresses\n   David L. Black\n   EMC Corporation\n   176 South Street\n
    \  Hopkinton, MA 10748\n   Phone: +1 (508) 293-7953\n   EMail: black_david@emc.com\n
    \  David A. McGrew\n   Cisco Systems, Inc.\n   510 McCarthy Blvd.\n   Milpitas,
    CA 95035\n   Phone: +1 (408) 525-8651\n   EMail: mcgrew@cisco.com\n"
  title: Author's Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
