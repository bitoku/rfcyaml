- title: __initial_text__
  contents:
  - '                    Authentication for DHCP Messages

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a new Dynamic Host Configuration Protocol\n\
    \   (DHCP) option through which authorization tickets can be easily\n   generated\
    \ and newly attached hosts with proper authorization can be\n   automatically\
    \ configured from an authenticated DHCP server.  DHCP\n   provides a framework\
    \ for passing configuration information to hosts\n   on a TCP/IP network.  In\
    \ some situations, network administrators may\n   wish to constrain the allocation\
    \ of addresses to authorized hosts.\n   Additionally, some network administrators\
    \ may wish to provide for\n   authentication of the source and contents of DHCP\
    \ messages.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   DHCP [1] transports protocol stack configuration parameters\
    \ from\n   centrally administered servers to TCP/IP hosts.  Among those\n   parameters\
    \ are an IP address.  DHCP servers can be configured to\n   dynamically allocate\
    \ addresses from a pool of addresses, eliminating\n   a manual step in configuration\
    \ of TCP/IP hosts.\n   Some network administrators may wish to provide authentication\
    \ of the\n   source and contents of DHCP messages.  For example, clients may be\n\
    \   subject to denial of service attacks through the use of bogus DHCP\n   servers,\
    \ or may simply be misconfigured due to unintentionally\n   instantiated DHCP\
    \ servers.  Network administrators may wish to\n   constrain the allocation of\
    \ addresses to authorized hosts to avoid\n   denial of service attacks in \"hostile\"\
    \ environments where the network\n   medium is not physically secured, such as\
    \ wireless networks or\n   college residence halls.\n   This document defines\
    \ a technique that can provide both entity\n   authentication and message authentication.\
    \  The current protocol\n   combines the original Schiller-Huitema-Droms authentication\
    \ mechanism\n   defined in a previous work in progress with the \"delayed\n  \
    \ authentication\" proposal developed by Bill Arbaugh.\n"
- title: 1.1 DHCP threat model
  contents:
  - "1.1 DHCP threat model\n   The threat to DHCP is inherently an insider threat\
    \ (assuming a\n   properly configured network where BOOTP ports are blocked on\
    \ the\n   enterprise's perimeter gateways.)  Regardless of the gateway\n   configuration,\
    \ however, the potential attacks by insiders and\n   outsiders are the same.\n\
    \   The attack specific to a DHCP client is the possibility of the\n   establishment\
    \ of a \"rogue\" server with the intent of providing\n   incorrect configuration\
    \ information to the client.  The motivation\n   for doing so may be to establish\
    \ a \"man in the middle\" attack or it\n   may be for a \"denial of service\"\
    \ attack.\n   There is another threat to DHCP clients from mistakenly or\n   accidentally\
    \ configured DHCP servers that answer DHCP client requests\n   with unintentionally\
    \ incorrect configuration parameters.\n   The threat specific to a DHCP server\
    \ is an invalid client\n   masquerading as a valid client.  The motivation for\
    \ this may be for\n   \"theft of service\", or to circumvent auditing for any\
    \ number of\n   nefarious purposes.\n   The threat common to both the client and\
    \ the server is the resource\n   \"denial of service\" (DoS) attack.  These attacks\
    \ typically involve\n   the exhaustion of valid addresses, or the exhaustion of\
    \ CPU or\n   network bandwidth, and are present anytime there is a shared\n  \
    \ resource.  In current practice, redundancy mitigates DoS attacks the\n   best.\n"
- title: 1.2 Design goals
  contents:
  - "1.2 Design goals\n   These are the goals that were used in the development of\
    \ the\n   authentication protocol, listed in order of importance:\n   1. Address\
    \ the threats presented in Section 1.1.\n   2. Avoid changing the current protocol.\n\
    \   3. Limit state required by the server.\n   4. Limit complexity (complexity\
    \ breeds design and implementation\n      errors).\n"
- title: 1.3 Requirements Terminology
  contents:
  - "1.3 Requirements Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\" and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [5].\n"
- title: 1.4 DHCP Terminology
  contents:
  - "1.4 DHCP Terminology\n   This document uses the following terms:\n      o  \"\
    DHCP client\"\n         A DHCP client or \"client\" is an Internet host using\
    \ DHCP to\n         obtain configuration parameters such as a network address.\n\
    \      o  \"DHCP server\"\n         A DHCP server or \"server\" is an Internet\
    \ host that returns\n         configuration parameters to DHCP clients.\n"
- title: 2. Format of the authentication option
  contents:
  - "2. Format of the authentication option\n   The following diagram defines the\
    \ format of the DHCP authentication\n   option:\n   0                   1    \
    \               2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Code      |    Length     |  Protocol     |   Algorithm   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     RDM       | Replay Detection (64 bits)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Replay cont.                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Replay cont. |                                               |\n   +-+-+-+-+-+-+-+-+\
    \                                               |\n   |                      \
    \                                         |\n   |           Authentication Information\
    \                          |\n   |                                           \
    \                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The code for the authentication option is 90, and the length field\n   contains\
    \ the length of the protocol, RDM, algorithm, Replay Detection\n   fields and\
    \ authentication information fields in octets.\n   The protocol field defines\
    \ the particular technique for\n   authentication used in the option.  New protocols\
    \ are defined as\n   described in Section 6.\n   The algorithm field defines the\
    \ specific algorithm within the\n   technique identified by the protocol field.\n\
    \   The Replay Detection field is per the RDM, and the authentication\n   information\
    \ field is per the protocol in use.\n   The Replay Detection Method (RDM) field\
    \ determines the type of replay\n   detection used in the Replay Detection field.\n\
    \   If the RDM field contains 0x00, the replay detection field MUST be\n   set\
    \ to the value of a monotonically increasing counter.  Using a\n   counter value\
    \ such as the current time of day (e.g., an NTP-format\n   timestamp [4]) can\
    \ reduce the danger of replay attacks.  This method\n   MUST be supported by all\
    \ protocols.\n"
- title: 3. Interaction with Relay Agents
  contents:
  - "3. Interaction with Relay Agents\n   Because a DHCP relay agent may alter the\
    \ values of the 'giaddr' and\n   'hops' fields in the DHCP message, the contents\
    \ of those two fields\n   MUST be set to zero for the computation of any hash\
    \ function over the\n   message header.  Additionally, a relay agent may append\
    \ the DHCP\n   relay agent information option 82 [7] as the last option in a message\n\
    \   to servers.  If a server finds option 82 included in a received\n   message,\
    \ the server MUST compute any hash function as if the option\n   were NOT included\
    \ in the message without changing the order of\n   options.  Whenever the server\
    \ sends back option 82 to a relay agent,\n   the server MUST not include the option\
    \ in the computation of any hash\n   function over the message.\n"
- title: 4. Configuration token
  contents:
  - "4. Configuration token\n   If the protocol field is 0, the authentication information\
    \ field\n   holds a simple configuration token:\n   0                   1    \
    \               2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Code      |    Length     |0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0 0 0 0 0 0 0 0| Replay Detection (64 bits)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Replay cont.                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Replay cont. |                                               |\n   |-+-+-+-+-+-+-+-+\
    \                                               |\n   |                      \
    \                                         |\n   |           Authentication Information\
    \                          |\n   |                                           \
    \                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The configuration token is an opaque, unencoded value known to both\n   the\
    \ sender and receiver.  The sender inserts the configuration token\n   in the\
    \ DHCP message and the receiver matches the token from the\n   message to the\
    \ shared token.  If the configuration option is present\n   and the token from\
    \ the message does not match the shared token, the\n   receiver MUST discard the\
    \ message.\n   Configuration token may be used to pass a plain-text configuration\n\
    \   token and provides only weak entity authentication and no message\n   authentication.\
    \  This protocol is only useful for rudimentary\n   protection against inadvertently\
    \ instantiated DHCP servers.\n   DISCUSSION:\n      The intent here is to pass\
    \ a constant, non-computed token such as\n      a plain-text password.  Other\
    \ types of entity authentication using\n      computed tokens such as Kerberos\
    \ tickets or one-time passwords\n      will be defined as separate protocols.\n"
- title: 5. Delayed authentication
  contents:
  - "5. Delayed authentication\n   If the protocol field is 1, the message is using\
    \ the \"delayed\n   authentication\" mechanism.  In delayed authentication, the\
    \ client\n   requests authentication in its DHCPDISCOVER message and the server\n\
    \   replies with a DHCPOFFER message that includes authentication\n   information.\
    \  This authentication information contains a nonce value\n   generated by the\
    \ source as a message authentication code (MAC) to\n   provide message authentication\
    \ and entity authentication.\n   This document defines the use of a particular\
    \ technique based on the\n   HMAC protocol [3] using the MD5 hash [2].\n"
- title: 5.1 Management Issues
  contents:
  - "5.1 Management Issues\n   The \"delayed authentication\" protocol does not attempt\
    \ to address\n   situations where a client may roam from one administrative domain\
    \ to\n   another, i.e., interdomain roaming.  This protocol is focused on\n  \
    \ solving the intradomain problem where the out-of-band exchange of a\n   shared\
    \ secret is feasible.\n"
- title: 5.2 Format
  contents:
  - "5.2 Format\n   The format of the authentication request in a DHCPDISCOVER or\
    \ a\n   DHCPINFORM message for delayed authentication is:\n   0              \
    \     1                   2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Code      |    Length     |0 0 0 0 0 0 0 1|   Algorithm   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     RDM       | Replay Detection (64 bits)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Replay cont.                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Replay cont. |\n   +-+-+-+-+-+-+-+-+\n   The format of the authentication\
    \ information in a DHCPOFFER,\n   DHCPREQUEST or DHCPACK message for delayed authentication\
    \ is:\n   0                   1                   2                   3\n   0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Code      |    Length     |0 0 0 0 0 0 0 1|   Algorithm   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     RDM       | Replay Detection (64 bits)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Replay cont.                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Replay cont. | Secret ID (32 bits)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | secret id cont| HMAC-MD5 (128 bits) ....\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The following definitions will be used in the description of the\n   authentication\
    \ information for delayed authentication, algorithm 1:\n   Replay Detection  \
    \  - as defined by the RDM field\n   K                   - a secret value shared\
    \ between the source and\n                         destination of the message;\
    \ each secret has a\n                         unique identifier (secret ID)\n\
    \   secret ID           - the unique identifier for the secret value\n       \
    \                  used to generate the MAC for this message\n   HMAC-MD5    \
    \        - the MAC generating function [3, 2].\n   The sender computes the MAC\
    \ using the HMAC generation algorithm [3]\n   and the MD5 hash function [2]. \
    \ The entire DHCP message (except as\n   noted below), including the DHCP message\
    \ header and the options\n   field, is used as input to the HMAC-MD5 computation\
    \ function.  The\n   'secret ID' field MUST be set to the identifier of the secret\
    \ used to\n   generate the MAC.\n   DISCUSSION:\n      Algorithm 1 specifies the\
    \ use of HMAC-MD5.  Use of a different\n      technique, such as HMAC-SHA, will\
    \ be specified as a separate\n      protocol.\n      Delayed authentication requires\
    \ a shared secret key for each\n      client on each DHCP server with which that\
    \ client may wish to use\n      the DHCP protocol.  Each secret key has a unique\
    \ identifier that\n      can be used by a receiver to determine which secret was\
    \ used to\n      generate the MAC in the DHCP message.  Therefore, delayed\n \
    \     authentication may not scale well in an architecture in which a\n      DHCP\
    \ client connects to multiple administrative domains.\n"
- title: 5.3 Message validation
  contents:
  - "5.3 Message validation\n   To validate an incoming message, the receiver first\
    \ checks that the\n   value in the replay detection field is acceptable according\
    \ to the\n   replay detection method specified by the RDM field.  Next, the\n\
    \   receiver computes the MAC as described in [3].  The receiver MUST set\n  \
    \ the 'MAC' field of the authentication option to all 0s for\n   computation of\
    \ the MAC, and because a DHCP relay agent may alter the\n   values of the 'giaddr'\
    \ and 'hops' fields in the DHCP message, the\n   contents of those two fields\
    \ MUST also be set to zero for the\n   computation of the MAC.  If the MAC computed\
    \ by the receiver does not\n   match the MAC contained in the authentication option,\
    \ the receiver\n   MUST discard the DHCP message.\n   Section 3 provides additional\
    \ information on handling messages that\n   include option 82 (Relay Agents).\n"
- title: 5.4 Key utilization
  contents:
  - "5.4 Key utilization\n   Each DHCP client has a key, K.  The client uses its key\
    \ to encode any\n   messages it sends to the server and to authenticate and verify\
    \ any\n   messages it receives from the server.  The client's key SHOULD be\n\
    \   initially distributed to the client through some out-of-band\n   mechanism,\
    \ and SHOULD be stored locally on the client for use in all\n   authenticated\
    \ DHCP messages.  Once the client has been given its key,\n   it SHOULD use that\
    \ key for all transactions even if the client's\n   configuration changes; e.g.,\
    \ if the client is assigned a new network\n   address.\n   Each DHCP server MUST\
    \ know, or be able to obtain in a secure manner,\n   the keys for all authorized\
    \ clients.  If all clients use the same\n   key, clients can perform both entity\
    \ and message authentication for\n   all messages received from servers.  However,\
    \ the sharing of keys is\n   strongly discouraged as it allows for unauthorized\
    \ clients to\n   masquerade as authorized clients by obtaining a copy of the shared\n\
    \   key.  To authenticate the identity of individual clients, each client\n  \
    \ MUST be configured with a unique key.  Appendix A describes a\n   technique\
    \ for key management.\n"
- title: 5.5 Client considerations
  contents:
  - "5.5 Client considerations\n   This section describes the behavior of a DHCP client\
    \ using delayed\n   authentication.\n"
- title: 5.5.1 INIT state
  contents:
  - "5.5.1 INIT state\n   When in INIT state, the client uses delayed authentication\
    \ as\n   follows:\n   1. The client MUST include the authentication request option\
    \ in its\n      DHCPDISCOVER message along with a client identifier option [6]\
    \ to\n      identify itself uniquely to the server.\n   2. The client MUST perform\
    \ the validation test described in section\n      5.3 on any DHCPOFFER messages\
    \ that include authentication\n      information.  If one or more DHCPOFFER messages\
    \ pass the\n      validation test, the client chooses one of the offered\n   \
    \   configurations.\n      Client behavior if no DHCPOFFER messages include authentication\n\
    \      information or pass the validation test is controlled by local\n      policy\
    \ in the client.  According to client policy, the client MAY\n      choose to\
    \ respond to a DHCPOFFER message that has not been\n      authenticated.\n   \
    \   The decision to set local policy to accept unauthenticated\n      messages\
    \ should be made with care.  Accepting an unauthenticated\n      DHCPOFFER message\
    \ can make the client vulnerable to spoofing and\n      other attacks.  If local\
    \ users are not explicitly informed that\n      the client has accepted an unauthenticated\
    \ DHCPOFFER message, the\n      users may incorrectly assume that the client has\
    \ received an\n      authenticated address and is not subject to DHCP attacks\
    \ through\n      unauthenticated messages.\n      A client MUST be configurable\
    \ to decline unauthenticated messages,\n      and SHOULD be configured by default\
    \ to decline unauthenticated\n      messages.  A client MAY choose to differentiate\
    \ between DHCPOFFER\n      messages with no authentication information and DHCPOFFER\
    \ messages\n      that do not pass the validation test; for example, a client\
    \ might\n      accept the former and discard the latter.  If a client does accept\n\
    \      an unauthenticated message, the client SHOULD inform any local\n      users\
    \ and SHOULD log the event.\n   3. The client replies with a DHCPREQUEST message\
    \ that MUST include\n      authentication information encoded with the same secret\
    \ used by\n      the server in the selected DHCPOFFER message.\n   4. If the client\
    \ authenticated the DHCPOFFER it accepted, the client\n      MUST validate the\
    \ DHCPACK message from the server.  The client\n      MUST discard the DHCPACK\
    \ if the message fails to pass validation\n      and MAY log the validation failure.\
    \  If the DHCPACK fails to pass\n      validation, the client MUST revert to INIT\
    \ state and returns to\n      step 1.  The client MAY choose to remember which\
    \ server replied\n      with a DHCPACK message that failed to pass validation\
    \ and discard\n      subsequent messages from that server.\n      If the client\
    \ accepted a DHCPOFFER message that did not include\n      authentication information\
    \ or did not pass the validation test,\n      the client MAY accept an unauthenticated\
    \ DHCPACK message from the\n      server.\n"
- title: 5.5.2 INIT-REBOOT state
  contents:
  - "5.5.2 INIT-REBOOT state\n   When in INIT-REBOOT state, the client MUST use the\
    \ secret it used in\n   its DHCPREQUEST message to obtain its current configuration\
    \ to\n   generate authentication information for the DHCPREQUEST message.  The\n\
    \   client MAY choose to accept unauthenticated DHCPACK/DHCPNAK messages\n   if\
    \ no authenticated messages were received.  The client MUST treat\n   the receipt\
    \ (or lack thereof) of any DHCPACK/DHCPNAK messages as\n   specified in section\
    \ 3.2 of [1].\n"
- title: 5.5.3 RENEWING state
  contents:
  - "5.5.3 RENEWING state\n   When in RENEWING state, the client uses the secret it\
    \ used in its\n   initial DHCPREQUEST message to obtain its current configuration\
    \ to\n   generate authentication information for the DHCPREQUEST message.  If\n\
    \   client receives no DHCPACK messages or none of the DHCPACK messages\n   pass\
    \ validation, the client behaves as if it had not received a\n   DHCPACK message\
    \ in section 4.4.5 of the DHCP specification [1].\n"
- title: 5.5.4 REBINDING state
  contents:
  - "5.5.4 REBINDING state\n   When in REBINDING state, the client uses the secret\
    \ it used in its\n   initial DHCPREQUEST message to obtain its current configuration\
    \ to\n   generate authentication information for the DHCPREQUEST message.  If\n\
    \   client receives no DHCPACK messages or none of the DHCPACK messages\n   pass\
    \ validation, the client behaves as if it had not received a\n   DHCPACK message\
    \ in section 4.4.5 of the DHCP specification [1].\n"
- title: 5.5.5 DHCPINFORM message
  contents:
  - "5.5.5 DHCPINFORM message\n   Since the client already has some configuration\
    \ information, the\n   client may also have established a shared secret value,\
    \ K, with a\n   server.  Therefore, the client SHOULD use the authentication request\n\
    \   as in a DHCPDISCOVER message when a shared secret value exists.  The\n   client\
    \ MUST treat any received DHCPACK messages as it does DHCPOFFER\n   messages,\
    \ see section 5.5.1.\n"
- title: 5.5.6 DHCPRELEASE message
  contents:
  - "5.5.6 DHCPRELEASE message\n   Since the client is already in the BOUND state,\
    \ the client will have\n   a security association already established with the\
    \ server.\n   Therefore, the client MUST include authentication information with\n\
    \   the DHCPRELEASE message.\n"
- title: 5.6 Server considerations
  contents:
  - "5.6 Server considerations\n   This section describes the behavior of a server\
    \ in response to client\n   messages using delayed authentication.\n"
- title: 5.6.1 General considerations
  contents:
  - "5.6.1 General considerations\n   Each server maintains a list of secrets and\
    \ identifiers for those\n   secrets that it shares with clients and potential\
    \ clients.  This\n   information must be maintained in such a way that the server\
    \ can:\n   *  Identify an appropriate secret and the identifier for that secret\n\
    \      for use with a client that the server may not have previously\n      communicated\
    \ with\n   *  Retrieve the secret and identifier used by a client to which the\n\
    \      server has provided previous configuration information\n   Each server\
    \ MUST save the counter from the previous authenticated\n   message.  A server\
    \ MUST discard any incoming message which fails the\n   replay detection check\
    \ as defined by the RDM avoid replay attacks.\n   DISCUSSION:\n      The authenticated\
    \ DHCPREQUEST message from a client in INIT-REBOOT\n      state can only be validated\
    \ by servers that used the same secret\n      in their DHCPOFFER messages.  Other\
    \ servers will discard the\n      DHCPREQUEST messages.  Thus, only servers that\
    \ used the secret\n      selected by the client will be able to determine that\
    \ their\n      offered configuration information was not selected and the offered\n\
    \      network address can be returned to the server's pool of available\n   \
    \   addresses.  The servers that cannot validate the DHCPREQUEST\n      message\
    \ will eventually return their offered network addresses to\n      their pool\
    \ of available addresses as described in section 3.1 of\n      the DHCP specification\
    \ [1].\n"
- title: 5.6.2 After receiving a DHCPDISCOVER message
  contents:
  - "5.6.2 After receiving a DHCPDISCOVER message\n   The server selects a secret\
    \ for the client and includes\n   authentication information in the DHCPOFFER\
    \ message as specified in\n   section 5, above.  The server MUST record the identifier\
    \ of the\n   secret selected for the client and use that same secret for\n   validating\
    \ subsequent messages with the client.\n"
- title: 5.6.3 After receiving a DHCPREQUEST message
  contents:
  - "5.6.3 After receiving a DHCPREQUEST message\n   The server uses the secret identified\
    \ in the message and validates\n   the message as specified in section 5.3.  If\
    \ the message fails to\n   pass validation or the server does not know the secret\
    \ identified by\n   the 'secret ID' field, the server MUST discard the message\
    \ and MAY\n   choose to log the validation failure.\n   If the message passes\
    \ the validation procedure, the server responds\n   as described in the DHCP specification.\
    \  The server MUST include\n   authentication information generated as specified\
    \ in section 5.2.\n"
- title: 5.6.4 After receiving a DHCPINFORM message
  contents:
  - "5.6.4 After receiving a DHCPINFORM message\n   The server MAY choose to accept\
    \ unauthenticated DHCPINFORM messages,\n   or only accept authenticated DHCPINFORM\
    \ messages based on a site\n   policy.\n   When a client includes the authentication\
    \ request in a DHCPINFORM\n   message, the server MUST respond with an authenticated\
    \ DHCPACK\n   message.  If the server does not have a shared secret value\n  \
    \ established with the sender of the DHCPINFORM message, then the\n   server MAY\
    \ respond with an unauthenticated DHCPACK message, or a\n   DHCPNAK if the server\
    \ does not accept unauthenticated clients based\n   on the site policy, or the\
    \ server MAY choose not to respond to the\n   DHCPINFORM message.\n"
- title: 6. IANA Considerations
  contents:
  - "6. IANA Considerations\n   Section 2 defines a new DHCP option called the Authentication\
    \ Option,\n   whose option code is 90.\n   This document specifies three new name\
    \ spaces associated with the\n   Authentication Option, which are to be created\
    \ and maintained by\n   IANA:  Protocol, Algorithm and RDM.\n   Initial values\
    \ assigned from the Protocol name space are 0 (for the\n   configuration token\
    \ Protocol in section 4) and 1 (for the delayed\n   authentication Protocol in\
    \ section 5).  Additional values from the\n   Protocol name space will be assigned\
    \ through IETF Consensus, as\n   defined in RFC 2434 [8].\n   The Algorithm name\
    \ space is specific to individual Protocols.  That\n   is, each Protocol has its\
    \ own Algorithm name space.  The guidelines\n   for assigning Algorithm name space\
    \ values for a particular protocol\n   should be specified along with the definition\
    \ of a new Protocol.\n   For the configuration token Protocol, the Algorithm field\
    \ MUST be 0.\n   For the delayed authentication Protocol, the Algorithm value\
    \ 1 is\n   assigned to the HMAC-MD5 generating function as defined in section\
    \ 5.\n   Additional values from the Algorithm name space for Algorithm 1 will\n\
    \   be assigned through IETF Consensus, as defined in RFC 2434.\n   The initial\
    \ value of 0 from the RDM name space is assigned to the use\n   of a monotonically\
    \ increasing value as defined in section 2.\n   Additional values from the RDM\
    \ name space will be assigned through\n   IETF Consensus, as defined in RFC 2434.\n"
- title: 7. References
  contents:
  - "7. References\n   [1] Droms, R., \"Dynamic Host Configuration Protocol\", RFC\
    \ 2131, March\n       1997.\n   [2] Rivest, R., \"The MD5 Message-Digest Algorithm\"\
    , RFC 1321, April\n       1992.\n   [3] Krawczyk H., Bellare, M. and R. Canetti,\
    \ \"HMAC: Keyed-Hashing for\n       Message Authentication\", RFC 2104, February\
    \ 1997.\n   [4] Mills, D., \"Network Time Protocol (Version 3)\", RFC 1305, March\n\
    \       1992.\n   [5] Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n\
    \       Levels\", RFC 2219, March 1997.\n   [6] Alexander, S. and R. Droms, \"\
    DHCP Options and BOOTP Vendor\n       Extensions\", RFC 2132, March 1997.\n  \
    \ [7] Patrick, M., \"DHCP Relay Agent Information Option\", RFC 3046,\n      \
    \ January 2001.\n   [8] Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ and IANA\n       Considerations Section in RFCs\", BCP 26, RFC 2434, October\
    \ 1998.\n"
- title: 8. Acknowledgments
  contents:
  - "8. Acknowledgments\n   Jeff Schiller and Christian Huitema developed the original\
    \ version of\n   this authentication protocol in a terminal room BOF at the Dallas\n\
    \   IETF meeting, December 1995.  One of the editors (Droms) transcribed\n   the\
    \ notes from that discussion, which form the basis for this\n   document.  The\
    \ editors appreciate Jeff's and Christian's patience in\n   reviewing this document\
    \ and its earlier drafts.\n   The \"delayed authentication\" mechanism used in\
    \ section 5 is due to\n   Bill Arbaugh.  The threat model and requirements in\
    \ sections 1.1 and\n   1.2 come from Bill's negotiation protocol proposal.  The\
    \ attendees of\n   an interim meeting of the DHC WG held in June, 1998, including\
    \ Peter\n   Ford, Kim Kinnear, Glenn Waters, Rob Stevens, Bill Arbaugh, Baiju\n\
    \   Patel, Carl Smith, Thomas Narten, Stewart Kwan, Munil Shah, Olafur\n   Gudmundsson,\
    \ Robert Watson, Ralph Droms, Mike Dooley, Greg Rabil and\n   Arun Kapur, developed\
    \ the threat model and reviewed several\n   alternative proposals.\n   The replay\
    \ detection method field is due to Vipul Gupta.\n   Other input from Bill Sommerfield\
    \ is gratefully acknowledged.\n   Thanks also to John Wilkins, Ran Atkinson, Shawn\
    \ Mamros and Thomas\n   Narten for reviewing earlier drafts of this document.\n"
- title: 9. Security Considerations
  contents:
  - "9. Security Considerations\n   This document describes authentication and verification\
    \ mechanisms\n   for DHCP.\n"
- title: 9.1 Protocol vulnerabilities
  contents:
  - "9.1 Protocol vulnerabilities\n   The configuration token authentication mechanism\
    \ is vulnerable to\n   interception and provides only the most rudimentary protection\n\
    \   against inadvertently instantiated DHCP servers.\n   The delayed authentication\
    \ mechanism described in this document is\n   vulnerable to a denial of service\
    \ attack through flooding with\n   DHCPDISCOVER messages, which are not authenticated\
    \ by this protocol.\n   Such an attack may overwhelm the computer on which the\
    \ DHCP server is\n   running and may exhaust the addresses available for assignment\
    \ by the\n   DHCP server.\n   Delayed authentication may also be vulnerable to\
    \ a denial of service\n   attack through flooding with authenticated messages,\
    \ which may\n   overwhelm the computer on which the DHCP server is running as\
    \ the\n   authentication keys for the incoming messages are computed.\n"
- title: 9.2 Protocol limitations
  contents:
  - "9.2 Protocol limitations\n   Delayed authentication does not support interdomain\
    \ authentication.\n   A real digital signature mechanism such as RSA, while currently\n\
    \   computationally infeasible, would provide better security.\n"
- title: 10. Editors' Addresses
  contents:
  - "10. Editors' Addresses\n   Ralph Droms\n   Cisco Systems\n   300 Apollo Drive\n\
    \   Chelmsford, MA 01824\n   Phone: (978) 244-4733\n   EMail: rdroms@cisco.com\n\
    \   Bill Arbaugh\n   Department of Computer Science\n   University of Maryland\n\
    \   A.V. Williams Building\n   College Park, MD 20742\n   Phone: (301) 405-2774\n\
    \   EMail: waa@cs.umd.edu\n"
- title: Appendix A - Key Management Technique
  contents:
  - "Appendix A - Key Management Technique\n   To avoid centralized management of\
    \ a list of random keys, suppose K\n   for each client is generated from the pair\
    \ (client identifier [6],\n   subnet address, e.g., 192.168.1.0), which must be\
    \ unique to that\n   client.  That is, K = MAC(MK, unique-id), where MK is a secret\
    \ master\n   key and MAC is a keyed one-way function such as HMAC-MD5.\n   Without\
    \ knowledge of the master key MK, an unauthorized client cannot\n   generate its\
    \ own key K.  The server can quickly validate an incoming\n   message from a new\
    \ client by regenerating K from the client-id.  For\n   known clients, the server\
    \ can choose to recover the client's K\n   dynamically from the client-id in the\
    \ DHCP message, or can choose to\n   precompute and cache all of the Ks a priori.\n\
    \   By deriving all keys from a single master key, the DHCP server does\n   not\
    \ need access to clear text passwords, and can compute and verify\n   the keyed\
    \ MACs without requiring help from a centralized\n   authentication server.\n\
    \   To avoid compromise of this key management system, the master key,\n   MK,\
    \ MUST NOT be stored by any clients.  The client SHOULD only be\n   given its\
    \ key, K.  If MK is compromised, a new MK SHOULD be chosen\n   and all clients\
    \ given new individual keys.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
