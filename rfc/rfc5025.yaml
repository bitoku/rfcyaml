- title: __initial_text__
  contents:
  - '                     Presence Authorization Rules

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   Authorization is a key function in presence systems.  Authorization\n\
    \   policies, also known as authorization rules, specify what presence\n   information\
    \ can be given to which watchers, and when.  This\n   specification defines an\
    \ Extensible Markup Language (XML) document\n   format for expressing presence\
    \ authorization rules.  Such a document\n   can be manipulated by clients using\
    \ the XML Configuration Access\n   Protocol (XCAP), although other techniques\
    \ are permitted.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Structure of Presence Authorization Documents ...................3\n    \
    \  3.1. Conditions .................................................4\n      \
    \     3.1.1. Identity ............................................4\n        \
    \          3.1.1.1. Acceptable Forms of Authentication .........4\n          \
    \        3.1.1.2. Computing a URI for the Watcher ............5\n           3.1.2.\
    \ Sphere ..............................................6\n      3.2. Actions ....................................................7\n\
    \           3.2.1. Subscription Handling ...............................7\n  \
    \    3.3. Transformations ............................................9\n    \
    \       3.3.1. Providing Access to Data Component Elements .........9\n      \
    \            3.3.1.1. Device Information .........................9\n        \
    \          3.3.1.2. Person Information ........................10\n          \
    \        3.3.1.3. Service Information .......................11\n           3.3.2.\
    \ Providing Access to Presence Attributes ............12\n                  3.3.2.1.\
    \ Provide Activities ........................12\n                  3.3.2.2. Provide\
    \ Class .............................12\n                  3.3.2.3. Provide DeviceID\
    \ ..........................13\n                  3.3.2.4. Provide Mood ..............................13\n\
    \                  3.3.2.5. Provide Place-is ..........................13\n  \
    \                3.3.2.6. Provide Place-type ........................13\n    \
    \              3.3.2.7. Provide Privacy ...........................13\n      \
    \            3.3.2.8. Provide Relationship ......................14\n        \
    \          3.3.2.9. Provide Sphere ............................14\n          \
    \        3.3.2.10. Provide Status-Icon ......................14\n            \
    \      3.3.2.11. Provide Time-Offset ......................14\n              \
    \    3.3.2.12. Provide User-Input .......................14\n                \
    \  3.3.2.13. Provide Note .............................15\n                  3.3.2.14.\
    \ Provide Unknown Attribute ................15\n                  3.3.2.15. Provide\
    \ All Attributes ...................16\n   4. When to Apply the Authorization\
    \ Policies .......................17\n   5. Implementation Requirements ....................................17\n\
    \   6. Example Document ...............................................18\n  \
    \ 7. XML Schema .....................................................19\n   8.\
    \ Schema Extensibility ...........................................21\n   9. XCAP\
    \ Usage .....................................................22\n      9.1. Application\
    \ Unique ID .....................................22\n      9.2. XML Schema ................................................22\n\
    \      9.3. Default Namespace .........................................22\n  \
    \    9.4. MIME Type .................................................22\n    \
    \  9.5. Validation Constraints ....................................22\n      9.6.\
    \ Data Semantics ............................................22\n      9.7. Naming\
    \ Conventions ........................................23\n      9.8. Resource\
    \ Interdependencies ................................23\n      9.9. Authorization\
    \ Policies ....................................23\n   10. Security Considerations\
    \ .......................................23\n   11. IANA Considerations ...........................................24\n\
    \      11.1. XCAP Application Usage ID ................................24\n  \
    \    11.2. URN Sub-Namespace Registration ...........................25\n    \
    \  11.3. XML Schema Registrations .................................25\n   12.\
    \ Acknowledgements ..............................................26\n   13. References\
    \ ....................................................26\n      13.1. Normative\
    \ References .....................................26\n      13.2. Informative\
    \ References ...................................27\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Session Initiation Protocol (SIP) for Instant Messaging\
    \ and\n   Presence (SIMPLE) specifications allow a user, called a watcher, to\n\
    \   subscribe to another user, called a presentity [17], in order to\n   learn\
    \ their presence information [18].  This subscription is handled\n   by a presence\
    \ agent.  However, presence information is sensitive, and\n   a presence agent\
    \ needs authorization from the presentity prior to\n   handing out presence information.\
    \  As such, a presence authorization\n   document format is needed.  This specification\
    \ defines a format for\n   such a document, called a presence authorization document.\n\
    \   [8] specifies a framework for representing authorization policies,\n   and\
    \ is applicable to systems such as geo-location and presence.  This\n   framework\
    \ is used as the basis for presence authorization documents.\n   In the framework,\
    \ an authorization policy is a set of rules.  Each\n   rule contains conditions,\
    \ actions, and transformations.  The\n   conditions specify under what conditions\
    \ the rule is to be applied to\n   presence server processing.  The actions element\
    \ tells the server\n   what actions to take.  The transformations element indicates\
    \ how the\n   presence data is to be manipulated before being presented to that\n\
    \   watcher, and as such, defines a privacy filtering operation. [8]\n   identifies\
    \ a small number of specific conditions common to presence\n   and location services,\
    \ and leaves it to other specifications, such as\n   this one, to fill in usage\
    \ specific details.\n   A presence authorization document can be manipulated by\
    \ clients using\n   several means.  One such mechanism is the XML Configuration\
    \ Access\n   Protocol (XCAP) [2].  This specification defines the details\n  \
    \ necessary for using XCAP to manage presence authorization documents.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   In this document, the key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\",\n   \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\",\n   and \"OPTIONAL\" are to be interpreted as described in RFC 2119\
    \ [1] and\n   indicate requirement levels for compliant implementations.\n"
- title: 3.  Structure of Presence Authorization Documents
  contents:
  - "3.  Structure of Presence Authorization Documents\n   A presence authorization\
    \ document is an XML document, formatted\n   according to the schema defined in\
    \ [8].  Presence authorization\n   documents inherit the MIME type of common policy\
    \ documents,\n   application/auth-policy+xml.  As described in [8], this document\
    \ is\n   composed of rules that contain three parts - conditions, actions, and\n\
    \   transformations.  Each action or transformation, which is also called\n  \
    \ a permission, has the property of being a positive grant of\n   information\
    \ to the watcher.  As a result, there is a well-defined\n   mechanism for combining\
    \ actions and transformations obtained from\n   several sources.  This mechanism\
    \ is privacy safe, since the lack of\n   any action or transformation can only\
    \ result in less information\n   being presented to a watcher.\n   This section\
    \ defines the new conditions, actions, and transformations\n   defined by this\
    \ specification.\n"
- title: 3.1.  Conditions
  contents:
  - '3.1.  Conditions

    '
- title: 3.1.1.  Identity
  contents:
  - "3.1.1.  Identity\n   Although the <identity> element is defined in [8], that\
    \ specification\n   indicates that the specific usages of the framework document\
    \ need to\n   define details that are protocol and usage specific.  In particular,\n\
    \   it is necessary for a usage of the common policy framework to:\n   o  Define\
    \ acceptable means of authentication.\n   o  Define the procedure for representing\
    \ the identity of the WR\n      (Watcher/Requestor) as a URI or Internationalized\
    \ Resource\n      Identifier (IRI) [13].\n   This sub-section defines those details\
    \ for systems based on [18].  It\n   does so in general terms, so that the recommendations\
    \ defined here\n   apply to existing and future authentication mechanisms in SIP.\n"
- title: 3.1.1.1.  Acceptable Forms of Authentication
  contents:
  - "3.1.1.1.  Acceptable Forms of Authentication\n   When used with SIP, a request\
    \ is considered authenticated if one of\n   the following is true:\n   The watcher\
    \ proves its identity to the server through a form of\n   cryptographic authentication,\
    \ including authentication based on a\n   shared secret or a certificate, and\
    \ that authentication yields an\n   identity for the watcher.\n   The request\
    \ comes from a sender that is asserting the identity of the\n   watcher, and:\n\
    \   1.  the assertion includes a claim that the asserting party used a\n     \
    \ form of cryptographic authentication (as defined above) to\n      determine\
    \ the identity of the watcher, and\n   2.  the server trusts that assertion, and\n\
    \   3.  the assertion provides an identity in the form of a URI.\n   Based on\
    \ this definition, examples of valid authentication techniques\n   include SIP\
    \ [5], digest authentication [4], cryptographically\n   verified identity assertions\
    \ (RFC 4474 [15]), and identity assertions\n   made in closed network environments\
    \ (RFC 3325 [16]).\n   However, the anonymous authentication described on page\
    \ 194 of RFC\n   3261 [5] is not considered a valid mechanism for authentication\n\
    \   because it does not produce an identity for the watcher.  However, an\n  \
    \ anonymous From header field, when used in conjunction with RFC 4474\n   [15],\
    \ is considered an acceptable mechanism for authentication, since\n   it still\
    \ implies that the asserting node performed authentication\n   that produced the\
    \ identity of the watcher.\n"
- title: 3.1.1.2.  Computing a URI for the Watcher
  contents:
  - "3.1.1.2.  Computing a URI for the Watcher\n   Computing the URI for the watcher\
    \ depends on whether the identity is\n   being ascertained through authentication\
    \ or through an asserted\n   identity.\n   If an identity assertion is being utilized,\
    \ the asserted identity\n   itself (which is in the form of a URI for acceptable\
    \ forms of\n   identity assertion) is utilized as the URI.  If the identity\n\
    \   assertion mechanism asserts multiple URIs for the watcher, then each\n   of\
    \ them is used for the comparisons outlined in [8], and if any of\n   them match\
    \ a <one> or <except> element, the watcher is considered a\n   match.\n   If an\
    \ identity is being determined directly by a cryptographic\n   authentication,\
    \ that authentication must produce a URI, or must\n   produce some form of identifier\
    \ that can be linked, through\n   provisioning, to a URI that is bound to that\
    \ identifier.\n   For example, in the case of SIP Digest authentication, the\n\
    \   authentication process produces a username scoped within a realm.\n   That\
    \ username and realm are bound to an Address of Record (AOR)\n   through provisioning,\
    \ and the resulting AOR is used as the watcher\n   URI.  Consider the following\
    \ \"user record\" in a database:\n   SIP AOR: sip:alice@example.com\n   digest\
    \ username: ali\n   digest password: f779ajvvh8a6s6\n   digest realm: example.com\n\
    \   If the presence server receives a SUBSCRIBE request, challenges it\n   with\
    \ the realm set to \"example.com\", and the subsequent SUBSCRIBE\n   contains\
    \ an Authorization header field with a username of \"ali\" and a\n   digest response\
    \ generated with the password \"f779ajvvh8a6s6\", the\n   identity used in matching\
    \ operations is \"sip:alice@example.com\".\n   In SIP systems, it is possible\
    \ for a user to have aliases - that is,\n   there are multiple SIP AORs \"assigned\"\
    \ to a single user.  In terms of\n   this specification, there is no relationship\
    \ between those aliases.\n   Each would look like a different user.  This will\
    \ be the consequence\n   for systems where the watcher is in a different domain\
    \ than the\n   presentity.  However, even if the watcher and presentity are in\
    \ the\n   same domain, and the presence server knows that there are aliases for\n\
    \   the watcher, these aliases are not mapped to each other or used in\n   any\
    \ way.\n   SIP also allows for anonymous requests.  If a request is anonymous\n\
    \   because the watcher utilized an authentication mechanism that does\n   not\
    \ provide an identity to the presence server (such as the SIP\n   digest \"anonymous\"\
    \ username), the request is considered\n   unauthenticated (as discussed above)\
    \ and will match only an empty\n   <identity> element.  If a request is anonymous\
    \ because it contains a\n   Privacy header field [14], but still contains an asserted\
    \ identity\n   meeting the criteria defined above, that identity is utilized,\
    \ and\n   the fact that the request was anonymous has no impact on the identity\n\
    \   processing.\n   It is important to note that SIP frequently uses both SIP\
    \ URI and tel\n   URI [12] as identifiers, and to make matters more confusing,\
    \ a SIP\n   URI can contain a phone number in its user part, in the same format\n\
    \   used in a tel URI.  A WR identity that is a SIP URI with a phone\n   number\
    \ will NOT match the <one> and <except> conditions whose 'id' is\n   a tel URI\
    \ with the same number.  The same is true in the reverse.  If\n   the WR identity\
    \ is a tel URI, this will not match a SIP URI in the\n   <one> or <except> conditions\
    \ whose user part is a phone number.  URIs\n   of different schemes are never\
    \ equivalent.\n"
- title: 3.1.2.  Sphere
  contents:
  - "3.1.2.  Sphere\n   The <sphere> element is defined in [8].  However, each application\n\
    \   making use of the common policy specification needs to determine how\n   the\
    \ presence server computes the value of the <sphere> to be used in\n   the evaluation\
    \ of the condition.\n   To compute the value of <sphere>, the presence agent examines\
    \ all\n   published presence documents for the presentity.  If at least one of\n\
    \   them includes the <sphere> element [9] as part of the person data\n   component\
    \ [10], and all of those containing the element have the same\n   value for it,\
    \ which is the value used for the <sphere> in presence\n   policy processing.\
    \  If, however, the <sphere> element was not present\n   in any of the published\
    \ documents, or it was present but had\n   inconsistent values, its value is considered\
    \ undefined in terms of\n   presence policy processing.\n   Care must be taken\
    \ in using <sphere> as a condition for determining\n   the subscription handling.\
    \  Since the value of <sphere> changes\n   dynamically, a state change can cause\
    \ a subscription to be suddenly\n   terminated.  The watcher has no way to know,\
    \ aside from polling, when\n   their subscription would be reinstated as the value\
    \ of <sphere>\n   changes.  For this reason, <sphere> is primarily useful for\
    \ matching\n   on rules that define transformations.\n"
- title: 3.2.  Actions
  contents:
  - '3.2.  Actions

    '
- title: 3.2.1.  Subscription Handling
  contents:
  - "3.2.1.  Subscription Handling\n   The <sub-handling> element specifies the subscription\
    \ authorization\n   decision that the server should make.  It also specifies whether\
    \ or\n   not the presence document for the watcher should be constructed using\n\
    \   \"polite blocking\".  Usage of polite blocking and the subscription\n   authorization\
    \ decision are specified jointly since proper privacy\n   handling requires a\
    \ correlation between them.  As discussed in [8],\n   since the combination algorithm\
    \ runs independently for each\n   permission, if correlations exist between permissions,\
    \ they must be\n   merged into a single variable.  That is what is done here.\
    \  The\n   <sub-handling> element is an enumerated Integer type.  The defined\n\
    \   values are:\n   block:  This action tells the server to reject the subscription,\n\
    \      placing it in the \"terminated\" state.  It has the value of zero,\n  \
    \    and it represents the default value.  No value of the <sub-\n      handling>\
    \ element can ever be lower than this.  Strictly speaking,\n      it is not necessary\
    \ for a rule to include an explicit block\n      action, since the default in\
    \ the absence of any action will be\n      block.  However, it is included for\
    \ completeness.\n   confirm:  This action tells the server to place the subscription\
    \ in\n      the \"pending\" state, and await input from the presentity to\n  \
    \    determine how to proceed.  It has a value of ten.\n   polite-block:  This\
    \ action tells the server to place the subscription\n      into the \"active\"\
    \ state, and to produce a presence document that\n      indicates that the presentity\
    \ is unavailable.  A reasonable\n      document would exclude device and person\
    \ information elements, and\n      include only a single service whose basic status\
    \ is set to closed\n      [3].  This action has a value of twenty.\n   allow:\
    \  This action tells the server to place the subscription into\n      the \"active\"\
    \ state.  This action has a value of thirty.\n      NOTE WELL: Placing a value\
    \ of block for this element does not\n      guarantee that a subscription is denied!\
    \  If any matching rule has\n      any other value for this element, the subscription\
    \ will receive\n      treatment based on the maximum of those other values.  This\
    \ is\n      based on the combining rules defined in [8].\n   Future specifications\
    \ that wish to define new types of actions MUST\n   define an entirely new action\
    \ (separate from <sub-handling>), and\n   define their own set of values for that\
    \ action.  A document could\n   contain both <sub-handling> and a subscription\
    \ handling action\n   defined by a future specification; in that case, since each\
    \ action is\n   always a positive grant of information, the resulting action is\
    \ the\n   least restrictive one across both elements.\n   The exact behavior of\
    \ a presence server upon a change in the sub-\n   handling value can be described\
    \ by utilizing the subscription\n   processing state machine in Figure 1 of RFC\
    \ 3857 [6].\n   If the <sub-handling> permission changes value to \"block\", this\n\
    \   causes a \"rejected\" event to be generated into the subscription state\n\
    \   machine for all affected subscriptions.  This will cause the state\n   machine\
    \ to move into the \"terminated\" state, resulting in the\n   transmission of\
    \ a NOTIFY to the watcher with a Subscription-State\n   header field with value\
    \ \"terminated\" and a reason of \"rejected\" [7],\n   which terminates their\
    \ subscription.  If a new subscription arrives\n   later on, and the value of\
    \ <sub-handling> that applies to that\n   subscription is \"block\", the subscription\
    \ processing follows the\n   \"subscribe, policy=reject\" branch from the \"init\"\
    \ state, and a 403\n   response to the SUBSCRIBE is generated.\n   If the <sub-handling>\
    \ permission changes value to \"confirm\", the\n   processing depends on the states\
    \ of the affected subscriptions.\n   Unfortunately, the state machine in RFC 3857\
    \ does not define an event\n   corresponding to an authorization decision of \"\
    pending\".  If the\n   subscription is in the \"active\" state, it moves back\
    \ into the\n   \"pending\" state.  This causes a NOTIFY to be sent, updating the\n\
    \   Subscription-State [7] to \"pending\".  No reason is included in the\n   Subscription-State\
    \ header field (none are defined to handle this\n   case).  No further documents\
    \ are sent to this watcher.  There is no\n   change in state if the subscription\
    \ is in the \"pending\", \"waiting\",\n   or \"terminated\" states.  If a new\
    \ subscription arrives later on, and\n   the value of <sub-handling> that applies\
    \ to that subscription is\n   \"confirm\", the subscription processing follows\
    \ the \"subscribe, no\n   policy\" branch from the \"init\" state, and a 202 response\
    \ to the\n   SUBSCRIBE is generated, followed by a NOTIFY with Subscription-State\n\
    \   of \"pending\".  No presence document is included in that NOTIFY.\n   If the\
    \ <sub-handling> permission changes value from \"blocked\" or\n   \"confirm\"\
    \ to \"polite-block\" or \"allow\", this causes an \"approved\"\n   event to be\
    \ generated into the state machine for all affected\n   subscriptions.  If the\
    \ subscription was in the \"pending\" state, the\n   state machine will move to\
    \ the \"active\" state, resulting in the\n   transmission of a NOTIFY with a Subscription-State\
    \ header field of\n   \"active\", and the inclusion of a presence document in\
    \ that NOTIFY.\n   If the subscription was in the \"waiting\" state, it will move\
    \ into the\n   \"terminated\" state.  If a new subscription arrives later on,\
    \ and the\n   value of <sub-handling> that applies to that subscription is\n \
    \  \"polite-block\" or \"allow\", the subscription processing follows the\n  \
    \ \"subscribe, policy=accept\" branch from the \"init\" state, and a 200 OK\n\
    \   response to the SUBSCRIBE is generated, followed by a NOTIFY with\n   Subscription-State\
    \ of \"active\" with a presence document in the body\n   of the NOTIFY.\n"
- title: 3.3.  Transformations
  contents:
  - "3.3.  Transformations\n   The transformations defined here are used to drive\
    \ the behavior of\n   the privacy filtering operation.  Each transformation defines\
    \ the\n   visibility a watcher is granted to a particular component of the\n \
    \  presence document.  One group of transformations grants visibility to\n   person,\
    \ device, and service data elements based on identifying\n   information for those\
    \ elements.  Another group of transformations\n   provides access to particular\
    \ data elements in the presence document.\n"
- title: 3.3.1.  Providing Access to Data Component Elements
  contents:
  - "3.3.1.  Providing Access to Data Component Elements\n   The transformations in\
    \ this section provide access to person, device,\n   and service data component\
    \ elements.  Once access has been granted to\n   such an element, access to specific\
    \ presence attributes for that\n   element is controlled by the permissions defined\
    \ in Section 3.3.2.\n"
- title: 3.3.1.1.  Device Information
  contents:
  - "3.3.1.1.  Device Information\n   The <provide-devices> permission allows a watcher\
    \ to see <device>\n   information present in the presence document.  It is a set\
    \ variable.\n   Each member of the set provides a way to identify a device or\
    \ group\n   of devices.  This specification defines three types of elements in\n\
    \   the set - <class>, which identifies a device occurrence by class;\n   <deviceID>,\
    \ which identifies a device occurrence by device ID; and\n   <occurrence-id>,\
    \ which identifies a device occurrence by occurrence\n   ID.  The device ID and\
    \ occurrence ID are defined in [10].  Each\n   member of the set is identified\
    \ by its type (class, deviceID, or\n   occurrence-id) and value (value of the\
    \ class, value of the deviceID,\n   or value of the occurrence-id).\n   For example,\
    \ consider the following <provide-devices> element:\n   <provide-devices>\n  \
    \   <deviceID>urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</deviceID>\n     <class>biz</class>\n\
    \   </provide-devices>\n   This set has two members.  This is combined with a\
    \ <provide-devices>\n   element from a different rule:\n   <provide-devices>\n\
    \     <class>home</class>\n     <class>biz</class>\n   </provide-devices>\n  \
    \ The result of the set combination (using the union operation) is a\n   set with\
    \ three elements:\n   <provide-devices>\n     <class>home</class>\n     <class>biz</class>\n\
    \     <deviceID>urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</deviceID>\n   </provide-devices>\n\
    \   The <provide-devices> element can also take on the special value\n   <all-devices>,\
    \ which is a short-hand notation for all device\n   occurrences present in the\
    \ presence document.\n   Permission is granted to see a particular device occurrence\
    \ if one of\n   the device identifiers in the set identifies that device occurrence.\n\
    \   If a <class> permission is granted to the watcher, and the <class> of\n  \
    \ the device occurrence matches the value of the <class> permission\n   based\
    \ on case-sensitive equality, the device occurrence is included\n   in the presence\
    \ document.  If a <deviceID> permission is granted to\n   the watcher, and the\
    \ <deviceID> of the device occurrence matches the\n   value of the <deviceID>\
    \ permission based on URI equivalence, the\n   device occurrence is included in\
    \ the presence document.  If an\n   <occurrence-id> permission is granted to the\
    \ watcher, and the\n   <occurrence-id>  of the device occurrence matches the value\
    \ of the\n   <occurrence-id> permission based on case-sensitive equality, the\n\
    \   device occurrence is included in the presence document.  In addition,\n  \
    \ a device occurrence is included in the presence document if the\n   <all-devices>\
    \ permission was granted to the watcher.\n"
- title: 3.3.1.2.  Person Information
  contents:
  - "3.3.1.2.  Person Information\n   The <provide-persons> permission allows a watcher\
    \ to see the <person>\n   information present in the presence document.  It is\
    \ a set variable.\n   Each member of the set provides a way to identify a person\n\
    \   occurrence.  This specification defines two types of elements in the\n   set\
    \ - <class>, which identifies a person occurrence by class, and\n   <occurrence-id>,\
    \ which identifies an occurrence by its occurrence ID.\n   Each member of the\
    \ set is identified by its type (class or\n   occurrence-id) and value (value\
    \ of the class or value of the\n   occurrence-id).  The <provide-persons> element\
    \ can also take on the\n   special value <all-persons>, which is a short-hand\
    \ notation for all\n   person occurrences present in the presence document.  The\
    \ set\n   combination is done identically to the <provide-devices> element.\n\
    \   Permission is granted to see a particular person occurrence if one of\n  \
    \ the person identifiers in the set identifies that person occurrence.\n   If\
    \ a <class> permission is granted to the watcher, and the <class> of\n   the person\
    \ occurrence matches the value of the <class> permission\n   based on case-sensitive\
    \ equality, the person occurrence is included\n   in the presence document.  If\
    \ an <occurrence-id> permission is\n   granted to the watcher, and the <occurrence-id>\
    \ of the person\n   occurrence matches the value of the <occurrence-id> permission\
    \ based\n   on case-sensitive equality, the person occurrence is included in the\n\
    \   presence document.  In addition, a person occurrence is included in\n   the\
    \ presence document if the <all-persons> permission was granted to\n   the watcher.\n"
- title: 3.3.1.3.  Service Information
  contents:
  - "3.3.1.3.  Service Information\n   The <provide-services> permission allows a\
    \ watcher to see service\n   information present in <tuple> elements in the presence\
    \ document.\n   Like <provide-devices>, it is a set variable.  Each member of\
    \ the set\n   provides a way to identify a service occurrence.  This specification\n\
    \   defines four types of elements in the set - <class>, which identifies\n  \
    \ a service occurrence by class; <occurrence-id>, which identifies a\n   service\
    \ by its occurrence ID; <service-uri>, which identifies a\n   service by its service\
    \ URI; and <service-uri-scheme>, which\n   identifies a service by its service\
    \ URI scheme.  Each member of the\n   set is identified by its type (class, occurrence-id,\
    \ service-uri, or\n   service-uri-scheme) and value (value of the class, value\
    \ of the\n   occurrence-id, value of the service-uri, or value of the service-\n\
    \   uri-scheme).  The <provide-services> element can also take on the\n   special\
    \ value <all-services>, which is a short-hand notation for all\n   service occurrences\
    \ present in the presence document.  The set\n   combination is done identically\
    \ to the <provide-persons> element.\n   Permission is granted to see a particular\
    \ service occurrence if one\n   of the service identifiers in the set identifies\
    \ that service\n   occurrence.  If a <class> permission is granted to the watcher,\
    \ and\n   the <class> of the service occurrence matches the value of the\n   <class>\
    \ permission based on case-sensitive equality, the service\n   occurrence is included\
    \ in the presence document.  If a <service-uri>\n   permission is granted to the\
    \ watcher, and the <service-uri> of the\n   service occurrence matches the value\
    \ of the <service-uri> permission\n   based on URI equivalence, the service occurrence\
    \ is included in the\n   presence document.  If an <occurrence-id> permission\
    \ is granted to\n   the watcher, and the <occurrence-id> of the service occurrence\n\
    \   matches the value of the <occurrence-id> permission based on case-\n   sensitive\
    \ equality, the service occurrence is included in the\n   presence document. \
    \ If a <service-uri-scheme> permission is granted\n   to the watcher, and the\
    \ scheme of the service URI for the service\n   occurrence matches the value of\
    \ <service-uri-scheme> based on case-\n   sensitive equality, the service occurrence\
    \ is included in the\n   presence document.  In addition, a service occurrence\
    \ is included in\n   the presence document if the <all-services> permission was\
    \ granted to\n   the watcher.\n"
- title: 3.3.2.  Providing Access to Presence Attributes
  contents:
  - "3.3.2.  Providing Access to Presence Attributes\n   The permissions of Section\
    \ 3.3.1 provide coarse-grained access to\n   presence data by allowing or blocking\
    \ specific services or devices,\n   and allowing or blocking person information.\n\
    \   Once person, device, or service information is included in the\n   document,\
    \ the permissions in this section define which presence\n   attributes are reported\
    \ there.  Certain information is always\n   reported.  In particular, the <contact>,\
    \ <service-class> [9], <basic>\n   status, and <timestamp> elements in all <tuple>\
    \ elements, if present,\n   are provided to watchers.  The <timestamp> element\
    \ in all <person>\n   elements, if present, is provided to watchers.  The <timestamp>\
    \ and\n   <deviceID> elements in all <device> elements, if present, are\n   provided\
    \ to all watchers.\n"
- title: 3.3.2.1.  Provide Activities
  contents:
  - "3.3.2.1.  Provide Activities\n   This permission controls access to the <activities>\
    \ element defined\n   in [9].  The name of the element providing this permission\
    \ is\n   <provide-activities>, and it is a Boolean type.  If its value is\n  \
    \ TRUE, then the <activities> element in the person data element is\n   reported\
    \ to the watcher.  If FALSE, this presence attribute is\n   removed if present.\n"
- title: 3.3.2.2.  Provide Class
  contents:
  - "3.3.2.2.  Provide Class\n   This permission controls access to the <class> element\
    \ defined in\n   [9].  The name of the element providing this permission is <provide-\n\
    \   class>, and it is a Boolean type.  If its value is TRUE, then any\n   <class>\
    \ element in a person, service, or device data element is\n   reported to the\
    \ watcher.  If FALSE, this presence attribute is\n   removed if present.\n"
- title: 3.3.2.3.  Provide DeviceID
  contents:
  - "3.3.2.3.  Provide DeviceID\n   This permission controls access to the <deviceID>\
    \ element in a\n   <tuple> element, as defined in [9].  The name of the element\n\
    \   providing this permission is <provide-deviceID>, and it is a Boolean\n   type.\
    \  If its value is TRUE, then the <deviceID> element in the\n   service data element\
    \ is reported to the watcher.  If FALSE, this\n   presence attribute is removed\
    \ if present.  Note that the <deviceID>\n   in a device data element is always\
    \ included, and not controlled by\n   this permission.\n"
- title: 3.3.2.4.  Provide Mood
  contents:
  - "3.3.2.4.  Provide Mood\n   This permission controls access to the <mood> element\
    \ defined in [9].\n   The name of the element providing this permission is <provide-mood>,\n\
    \   and it is a Boolean type.  If its value is TRUE, then the <mood>\n   element\
    \ in the person data element is reported to the watcher.  If\n   FALSE, this presence\
    \ attribute is removed if present.\n"
- title: 3.3.2.5.  Provide Place-is
  contents:
  - "3.3.2.5.  Provide Place-is\n   This permission controls access to the <place-is>\
    \ element defined in\n   [9].  The name of the element providing this permission\
    \ is <provide-\n   place-is>, and it is a Boolean type.  If its value is TRUE,\
    \ then the\n   <place-is> element in the person data element is reported to the\n\
    \   watcher.  If FALSE, this presence attribute is removed if present.\n"
- title: 3.3.2.6.  Provide Place-type
  contents:
  - "3.3.2.6.  Provide Place-type\n   This permission controls access to the <place-type>\
    \ element defined\n   in [9].  The name of the element providing this permission\
    \ is\n   <provide-place-type>, and it is a Boolean type.  If its value is\n  \
    \ TRUE, then the <place-type> element in the person data element is\n   reported\
    \ to the watcher.  If FALSE, this presence attribute is\n   removed if present.\n"
- title: 3.3.2.7.  Provide Privacy
  contents:
  - "3.3.2.7.  Provide Privacy\n   This permission controls access to the <privacy>\
    \ element defined in\n   [9].  The name of the element providing this permission\
    \ is <provide-\n   privacy>, and it is a Boolean type.  If its value is TRUE,\
    \ then the\n   <privacy> element in the person or service data element is reported\n\
    \   to the watcher.  If FALSE, this presence attribute is removed if\n   present.\n"
- title: 3.3.2.8.  Provide Relationship
  contents:
  - "3.3.2.8.  Provide Relationship\n   This permission controls access to the <relationship>\
    \ element defined\n   in [9].  The name of the element providing this permission\
    \ is\n   <provide-relationship>, and it is a Boolean type.  If its value is\n\
    \   TRUE, then the <relationship> element in the service data element is\n   reported\
    \ to the watcher.  If FALSE, this presence attribute is\n   removed if present.\n"
- title: 3.3.2.9.  Provide Sphere
  contents:
  - "3.3.2.9.  Provide Sphere\n   This permission controls access to the <sphere>\
    \ element defined in\n   [9].  The name of the element providing this permission\
    \ is <provide-\n   sphere>, and it is a Boolean type.  If its value is TRUE, then\
    \ the\n   <sphere> element in the person data element is reported to the\n   watcher.\
    \  If FALSE, this presence attribute is removed if present.\n"
- title: 3.3.2.10.  Provide Status-Icon
  contents:
  - "3.3.2.10.  Provide Status-Icon\n   This permission controls access to the <status-icon>\
    \ element defined\n   in [9].  The name of the element providing this permission\
    \ is\n   <provide-status-icon>, and it is a Boolean type.  If its value is\n \
    \  TRUE, then any <status-icon> element in the person or service data\n   element\
    \ is reported to the watcher.  If FALSE, this presence\n   attribute is removed\
    \ if present.\n"
- title: 3.3.2.11.  Provide Time-Offset
  contents:
  - "3.3.2.11.  Provide Time-Offset\n   This permission controls access to the <time-offset>\
    \ element defined\n   in [9].  The name of the element providing this permission\
    \ is\n   <provide-time-offset>, and it is a Boolean type.  If its value is\n \
    \  TRUE, then the <time-offset> element in the person data element is\n   reported\
    \ to the watcher.  If FALSE, this presence attribute is\n   removed if present.\n"
- title: 3.3.2.12.  Provide User-Input
  contents:
  - "3.3.2.12.  Provide User-Input\n   This permission controls access to the <user-input>\
    \ element defined\n   in [9].  The name of the element providing this permission\
    \ is\n   <provide-user-input>, and it is an enumerated integer type.  Its\n  \
    \ value defines what information is provided to watchers in person,\n   device,\
    \ or service data elements:\n   false:  This value indicates that the <user-input>\
    \ element is removed\n      from the document.  It is assigned the numeric value\
    \ of 0.\n   bare:  This value indicates that the <user-input> element is to be\n\
    \      retained.  However, any \"idle-threshold\" and \"since\" attributes\n \
    \     are to be removed.  This value is assigned the numeric value of\n      10.\n\
    \   thresholds:  This value indicates that the <user-input> element is to\n  \
    \    be retained.  However, only the \"idle-threshold\" attribute is to\n    \
    \  be retained.  This value is assigned the numeric value of 20.\n   full:  This\
    \ value indicates that the <user-input> element is to be\n      retained, including\
    \ any attributes.  This value is assigned the\n      numeric value of 30.\n"
- title: 3.3.2.13.  Provide Note
  contents:
  - "3.3.2.13.  Provide Note\n   This permission controls access to the <note> element\
    \ defined in [3]\n   for <tuple> and [10] for <person> and <device>.  The name\
    \ of the\n   element providing this permission is <provide-note>, and it is a\n\
    \   Boolean type.  If its value is TRUE, then any <note> elements in the\n   person,\
    \ service, or device data elements are reported to the watcher.\n   If FALSE,\
    \ this presence attribute is removed if present.\n   This permission has no bearing\
    \ on any <note> values present within\n   <activities>, <mood>, <place-is>, <place-type>,\
    \ <privacy>,\n   <relationship>, or <service-class> elements.  Notes within these\n\
    \   elements are essentially values for their respective elements, and\n   are\
    \ present if the respective element is permitted in the presence\n   document.\
    \  For example, if an <activities> element is present in a\n   presence document,\
    \ and there is a <note> value for it, that note is\n   present in the document\
    \ sent to the watcher if the <provide-\n   activities> permission is given, regardless\
    \ of whether the <provide-\n   note> permission is given.\n"
- title: 3.3.2.14.  Provide Unknown Attribute
  contents:
  - "3.3.2.14.  Provide Unknown Attribute\n   It is important that systems be allowed\
    \ to include proprietary or new\n   presence information and that users be able\
    \ to set permissions for\n   that information, without requiring an upgrade of\
    \ the presence server\n   and authorization system.  For this reason, the <provide-unknown-\n\
    \   attribute> permission is defined.  This permission indicates that the\n  \
    \ unknown presence attribute with the given name and namespace\n   (supplied as\
    \ mandatory attributes of the <provide-unknown-attribute>\n   element) should\
    \ be included in the document.  Its type is Boolean.\n   The value of the name\
    \ attribute MUST be an unqualified element name\n   (meaning that a namespace\
    \ prefix MUST NOT be included), and the value\n   of the ns attribute MUST be\
    \ a namespace URI.  The two are combined to\n   form a qualified element name,\
    \ which will be matched to all unknown\n   child elements of the Presence Information\
    \ Data Format (PIDF)\n   <tuple>, <device>, or <person> elements with the same\
    \ qualified name.\n   In this context, \"unknown\" means that the presence server\
    \ is not\n   aware of any schemas that define authorization policies for that\n\
    \   element.  By definition, this will exclude the <provide-unknown-\n   attribute>\
    \ rule from being applied to any of the presence status\n   extensions defined\
    \ by RPID, since authorization policies for those\n   are defined here.\n   Another\
    \ consequence of this definition is that the interpretation of\n   the <provide-unknown-attribute>\
    \ element can change should the\n   presence server be upgraded.  For example,\
    \ consider a server that,\n   prior to the upgrade, had an authorization document\
    \ that used\n   <provide-unknown-attribute> with a value of TRUE for some attribute,\n\
    \   say foo.  This attribute was from a namespace and schema unknown to\n   the\
    \ server, and so the attribute was provided to watchers.  However,\n   after upgrade,\
    \ the server is now aware of a new namespace and schema\n   for a permission that\
    \ grants access to the foo attribute.  Now, the\n   <provide-unknown-attribute>\
    \ permission for the foo attribute will be\n   ignored, resulting in a removal\
    \ of those elements from presence\n   documents sent to watchers.  The system\
    \ remains privacy safe, but\n   behavior might not be as expected.  Developers\
    \ of systems that allow\n   clients to set policies are advised to check the capabilities\
    \ of the\n   server (using the mechanism described in Section 8) before uploading\n\
    \   a new authorization document, to make sure that the behavior will be\n   as\
    \ expected.\n"
- title: 3.3.2.15.  Provide All Attributes
  contents:
  - "3.3.2.15.  Provide All Attributes\n   This permission grants access to all presence\
    \ attributes in all of\n   the person, device, and tuple elements that are present\
    \ in the\n   document (the ones present in the document are determined by the\n\
    \   <provide-persons>, <provide-devices>, and <provide-services>\n   permissions).\
    \  It is effectively a macro that expands into a set of\n   provide-activities,\
    \ provide-class, provide-deviceID, provide-mood,\n   provide-place-is, provide-place-type,\
    \ provide-privacy, provide-\n   relationship, provide-sphere, provide-status-icon,\
    \ provide-time-\n   offset, provide-user-input, provide-note, and provide-unknown-\n\
    \   attribute permissions such that each presence attribute in the\n   document\
    \ has a permission for it.  This implies that, so long as an\n   entire person,\
    \ service, or device occurrence is provided, every\n   single presence attribute,\
    \ including ones not known to the server\n   and/or defined in future presence\
    \ document extensions, is granted to\n   the watcher.\n"
- title: 4.  When to Apply the Authorization Policies
  contents:
  - "4.  When to Apply the Authorization Policies\n   This specification does not\
    \ mandate at what point in the processing\n   of presence data the privacy filtering\
    \ aspects of the authorization\n   policy are applied.  However, they must be\
    \ applied such that the\n   final presence document sent to the watcher is compliant\
    \ to the\n   privacy policy described in the authorization documents that apply\
    \ to\n   the user (there can be more than one; the rules for combining them\n\
    \   are described in [8]).  More concretely, if the presence document\n   sent\
    \ to a watcher is D, and the privacy filtering operation applied\n   do a presence\
    \ document x is F(x), then D MUST have the property that\n   D = F(D).  In other\
    \ words, further applications of the privacy\n   filtering operation would not\
    \ result in any further changes of the\n   presence document, making further application\
    \ of the filtering\n   operation a no-op.  A corollary of this is that F(F(D))\
    \ = D for all\n   D.\n   The subscription processing aspects of the document get\
    \ applied by\n   the server when it decides to accept or reject the subscription.\n"
- title: 5.  Implementation Requirements
  contents:
  - "5.  Implementation Requirements\n   The rules defined by the document in this\
    \ specification form a\n   \"contract\" of sorts between a client that creates\
    \ this document and\n   the server that executes the policies it contains.  Consequently,\n\
    \   presence servers implementing this specification MUST support all of\n   the\
    \ conditions, actions, and transformations defined in this\n   specification.\
    \  If servers were to implement a subset of these,\n   clients would need a mechanism\
    \ to discover which subset is supported.\n   No such mechanism is defined.\n \
    \  It is RECOMMENDED that clients support all of the actions,\n   transformations,\
    \ and conditions defined in this specification.  If a\n   client supports a subset,\
    \ it is possible that a user might manipulate\n   their authorization rules from\
    \ a different client, supporting a\n   different subset, and store those results\
    \ on the server.  When the\n   user goes back to the first client and views their\
    \ presence\n   authorization rules there, the client may not be able to properly\n\
    \   render or manipulate the document retrieved from the server, since it\n  \
    \ may contain conditions, actions, or transformations not supported by\n   the\
    \ client.  The only reason that this normative requirement is not a\n   MUST is\
    \ that there are valid conditions in which a user manipulates\n   their presence\
    \ authorization rules from a single client, in which\n   case this problem does\
    \ not occur.\n   This specification makes no normative recommendations on the\n\
    \   mechanism used to transport presence authorization documents from\n   clients\
    \ to their servers.  Although Section 9 defines how to utilize\n   XCAP, XCAP\
    \ is not normatively required by this specification.\n"
- title: 6.  Example Document
  contents:
  - "6.  Example Document\n   The following presence authorization document specifies\
    \ permissions\n   for the user \"user@example.com\".  The watcher is allowed to\
    \ access\n   presence information (the 'allow' value for <sub-handling>).  They\n\
    \   will be granted access to the presence data of all services whose\n   contact\
    \ URI schemes are sip and mailto.  Person information is also\n   provided.  However,\
    \ since there is no <provide-devices>, no device\n   information will be given\
    \ to the watcher.  Within the service and\n   person information provided to the\
    \ watcher, the <activities> element\n   will be shown, as will the <user-input>\
    \ element.  However, any\n   \"idle-threshold\" and \"since\" attributes in the\
    \ <user-input> element\n   will be removed.  Finally, the presence attribute <foo>\
    \ will be shown\n   to the watcher.  Any other presence attributes will be removed.\n\
    \   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <cr:ruleset xmlns=\"urn:ietf:params:xml:ns:pres-rules\"\
    \n    xmlns:pr=\"urn:ietf:params:xml:ns:pres-rules\"\n    xmlns:cr=\"urn:ietf:params:xml:ns:common-policy\"\
    >\n    <cr:rule id=\"a\">\n     <cr:conditions>\n      <cr:identity>\n       <cr:one\
    \ id=\"sip:user@example.com\"/>\n      </cr:identity>\n     </cr:conditions>\n\
    \     <cr:actions>\n      <pr:sub-handling>allow</pr:sub-handling>\n     </cr:actions>\n\
    \     <cr:transformations>\n      <pr:provide-services>\n        <pr:service-uri-scheme>sip</pr:service-uri-scheme>\n\
    \        <pr:service-uri-scheme>mailto</pr:service-uri-scheme>\n      </pr:provide-services>\n\
    \      <pr:provide-persons>\n        <pr:all-persons/>\n      </pr:provide-persons>\n\
    \      <pr:provide-activities>true</pr:provide-activities>\n      <pr:provide-user-input>bare</pr:provide-user-input>\n\
    \       <pr:provide-unknown-attribute\n        ns=\"urn:vendor-specific:foo-namespace\"\
    \n        name=\"foo\">true</pr:provide-unknown-attribute>\n     </cr:transformations>\n\
    \    </cr:rule>\n   </cr:ruleset>\n"
- title: 7.  XML Schema
  contents:
  - "7.  XML Schema\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <xs:schema\
    \ targetNamespace=\"urn:ietf:params:xml:ns:pres-rules\"\n    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
    \n    xmlns:cr=\"urn:ietf:params:xml:ns:common-policy\"\n    xmlns:pr=\"urn:ietf:params:xml:ns:pres-rules\"\
    \n    elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n\
    \    <xs:import namespace=\"urn:ietf:params:xml:ns:common-policy\"/>\n    <xs:simpleType\
    \ name=\"booleanPermission\">\n     <xs:restriction base=\"xs:boolean\"/>\n  \
    \  </xs:simpleType>\n    <xs:element name=\"service-uri-scheme\" type=\"xs:token\"\
    />\n    <xs:element name=\"class\" type=\"xs:token\"/>\n    <xs:element name=\"\
    occurrence-id\" type=\"xs:token\"/>\n    <xs:element name=\"service-uri\" type=\"\
    xs:anyURI\"/>\n    <xs:complexType name=\"provideServicePermission\">\n     <xs:choice>\n\
    \      <xs:element name=\"all-services\">\n       <xs:complexType/>\n      </xs:element>\n\
    \      <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n       <xs:choice>\n\
    \        <xs:element ref=\"pr:service-uri\"/>\n        <xs:element ref=\"pr:service-uri-scheme\"\
    />\n        <xs:element ref=\"pr:occurrence-id\"/>\n        <xs:element ref=\"\
    pr:class\"/>\n        <xs:any namespace=\"##other\" processContents=\"lax\"/>\n\
    \       </xs:choice>\n      </xs:sequence>\n     </xs:choice>\n    </xs:complexType>\n\
    \    <xs:element name=\"provide-services\"\n     type=\"pr:provideServicePermission\"\
    />\n    <xs:element name=\"deviceID\" type=\"xs:anyURI\"/>\n    <xs:complexType\
    \ name=\"provideDevicePermission\">\n     <xs:choice>\n      <xs:element name=\"\
    all-devices\">\n       <xs:complexType/>\n      </xs:element>\n      <xs:sequence\
    \ minOccurs=\"0\" maxOccurs=\"unbounded\">\n       <xs:choice>\n        <xs:element\
    \ ref=\"pr:deviceID\"/>\n        <xs:element ref=\"pr:occurrence-id\"/>\n    \
    \    <xs:element ref=\"pr:class\"/>\n        <xs:any namespace=\"##other\" processContents=\"\
    lax\"/>\n       </xs:choice>\n      </xs:sequence>\n     </xs:choice>\n    </xs:complexType>\n\
    \    <xs:element name=\"provide-devices\"\n     type=\"pr:provideDevicePermission\"\
    />\n    <xs:complexType name=\"providePersonPermission\">\n     <xs:choice>\n\
    \      <xs:element name=\"all-persons\">\n       <xs:complexType/>\n      </xs:element>\n\
    \      <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n       <xs:choice>\n\
    \        <xs:element ref=\"pr:occurrence-id\"/>\n        <xs:element ref=\"pr:class\"\
    />\n        <xs:any namespace=\"##other\" processContents=\"lax\"/>\n       </xs:choice>\n\
    \      </xs:sequence>\n     </xs:choice>\n    </xs:complexType>\n    <xs:element\
    \ name=\"provide-persons\"\n     type=\"pr:providePersonPermission\"/>\n    <xs:element\
    \ name=\"provide-activities\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-class\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-deviceID\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-mood\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-place-is\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-place-type\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-privacy\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-relationship\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-status-icon\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-sphere\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-time-offset\"\n     type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"provide-user-input\">\n     <xs:simpleType>\n      <xs:restriction base=\"\
    xs:string\">\n       <xs:enumeration value=\"false\"/>\n       <xs:enumeration\
    \ value=\"bare\"/>\n       <xs:enumeration value=\"thresholds\"/>\n       <xs:enumeration\
    \ value=\"full\"/>\n      </xs:restriction>\n     </xs:simpleType>\n    </xs:element>\n\
    \    <xs:element name=\"provide-note\" type=\"pr:booleanPermission\"/>\n    <xs:element\
    \ name=\"sub-handling\">\n     <xs:simpleType>\n      <xs:restriction base=\"\
    xs:token\">\n       <xs:enumeration value=\"block\"/>\n       <xs:enumeration\
    \ value=\"confirm\"/>\n       <xs:enumeration value=\"polite-block\"/>\n     \
    \  <xs:enumeration value=\"allow\"/>\n      </xs:restriction>\n     </xs:simpleType>\n\
    \    </xs:element>\n    <xs:complexType name=\"unknownBooleanPermission\">\n \
    \    <xs:simpleContent>\n      <xs:extension base=\"pr:booleanPermission\">\n\
    \       <xs:attribute name=\"name\" type=\"xs:string\" use=\"required\"/>\n  \
    \     <xs:attribute name=\"ns\" type=\"xs:string\" use=\"required\"/>\n      </xs:extension>\n\
    \     </xs:simpleContent>\n    </xs:complexType>\n    <xs:element name=\"provide-unknown-attribute\"\
    \n     type=\"pr:unknownBooleanPermission\"/>\n    <xs:element name=\"provide-all-attributes\"\
    >\n     <xs:complexType/>\n    </xs:element>\n   </xs:schema>\n"
- title: 8.  Schema Extensibility
  contents:
  - "8.  Schema Extensibility\n   It is anticipated that future changes to this specification\
    \ are\n   accomplished through extensions that define new types of permissions.\n\
    \   These extensions MUST exist within a different namespace.\n   Furthermore,\
    \ the schema defined above and the namespace for elements\n   defined within it\
    \ MUST NOT be altered by future specifications.\n   Changes in the basic schema,\
    \ or in the interpretation of elements\n   within that schema, may result in violations\
    \ of user privacy due to\n   misinterpretation of documents.\n   When extensions\
    \ are made to the set of permissions, it becomes\n   necessary for the agent constructing\
    \ the permission document\n   (typically a SIP user agent, though not necessarily)\
    \ to know which\n   permissions are supported by the server.  This allows the\
    \ agent to\n   know how to build a document that results in the desired behavior,\n\
    \   since unknown permissions would be ignored by the server.  To handle\n   this,\
    \ when presence authorization documents are transported using\n   XCAP, the XCAP\
    \ capabilities document stored at the server SHOULD\n   contain the namespaces\
    \ for the permissions supported by the presence\n   server.  This way, an agent\
    \ can query for this list prior to\n   constructing a document.\n"
- title: 9.  XCAP Usage
  contents:
  - "9.  XCAP Usage\n   The following section defines the details necessary for clients\
    \ to\n   manipulate presence authorization documents from a server using XCAP.\n"
- title: 9.1.  Application Unique ID
  contents:
  - "9.1.  Application Unique ID\n   XCAP requires application usages to define a\
    \ unique application usage\n   ID (AUID) in either the IETF tree or a vendor tree.\
    \  This\n   specification defines the \"pres-rules\" AUID within the IETF tree,\
    \ via\n   the IANA registration in Section 11.\n"
- title: 9.2.  XML Schema
  contents:
  - "9.2.  XML Schema\n   XCAP requires application usages to define a schema for\
    \ their\n   documents.  The schema for presence authorization documents is in\n\
    \   Section 7.\n"
- title: 9.3.  Default Namespace
  contents:
  - "9.3.  Default Namespace\n   XCAP requires application usages to define the default\
    \ namespace for\n   their URIs.  The default namespace is urn:ietf:params:xml:ns:pres-\n\
    \   rules.\n"
- title: 9.4.  MIME Type
  contents:
  - "9.4.  MIME Type\n   XCAP requires application usages to define the MIME type\
    \ for\n   documents they carry.  Presence authorization documents inherit the\n\
    \   MIME type of common policy documents, application/auth-policy+xml.\n"
- title: 9.5.  Validation Constraints
  contents:
  - "9.5.  Validation Constraints\n   There are no additional constraints defined\
    \ by this specification.\n"
- title: 9.6.  Data Semantics
  contents:
  - "9.6.  Data Semantics\n   Semantics of a presence authorization document are discussed\
    \ in\n   Section 3.\n"
- title: 9.7.  Naming Conventions
  contents:
  - "9.7.  Naming Conventions\n   When a presence agent receives a subscription for\
    \ some user foo\n   within a domain, it will look for all documents within http://[xcap\n\
    \   root]/pres-rules/users/foo, and use all documents found beneath that\n   point\
    \ to guide authorization policy.  If only a single document is\n   used, it SHOULD\
    \ be called \"index\".\n"
- title: 9.8.  Resource Interdependencies
  contents:
  - "9.8.  Resource Interdependencies\n   There are no additional resource interdependencies\
    \ defined by this\n   application usage.\n"
- title: 9.9.  Authorization Policies
  contents:
  - "9.9.  Authorization Policies\n   This application usage does not modify the default\
    \ XCAP authorization\n   policy, which is that only a user can read, write, or\
    \ modify their\n   own documents.  A server can allow privileged users to modify\n\
    \   documents that they don't own, but the establishment and indication\n   of\
    \ such policies are outside the scope of this document.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   Presence authorization policies contain very\
    \ sensitive information.\n   They indicate which other users are \"liked\" or\
    \ \"disliked\" by a user.\n   As such, when these documents are transported over\
    \ a network, they\n   SHOULD be encrypted.\n   Modification of these documents\
    \ by an attacker can disrupt the\n   service seen by a user, often in subtle ways.\
    \  As a result, when\n   these documents are transported, the transport SHOULD\
    \ provide\n   authenticity and message integrity.\n   In the case where XCAP is\
    \ used to transfer the document, both clients\n   and servers MUST implement HTTP\
    \ over Transport Layer Security (TLS)\n   and HTTP Digest authentication.  Sites\
    \ SHOULD authenticate clients\n   using digest authentication over TLS, and sites\
    \ SHOULD define the\n   root services URI as an https URI.\n   Authorization documents\
    \ themselves exist for the purposes of\n   providing a security function - privacy.\
    \  The SIP presence\n   specifications [18] require the usage of an authorization\
    \ function\n   prior to the granting of presence information, and this specification\n\
    \   meets that need.  Presence authorization documents inherit the\n   privacy\
    \ properties of the common policy format on which they are\n   based.  This format\
    \ has been designed to be privacy-safe, which means\n   that failure of the presence\
    \ server to obtain or understand an\n   authorization document can never reveal\
    \ more information than is\n   desired about the user, only less.  This is a consequence\
    \ of the fact\n   that all permissions are positive grants of information, and\
    \ not\n   negative grants.\n   A consequence of this design is that the results\
    \ of combining several\n   authorization documents can be non-obvious to end users.\
    \  For\n   example, if one authorization document grants permission for all\n\
    \   users from the example.com domain to see their presence, and another\n   document\
    \ blocks joe@example.com, the combination of these will still\n   provide presence\
    \ to joe@example.com.  Designers of user interfaces\n   are encouraged to carefully\
    \ pay attention to the results of combining\n   multiple rules.\n   Another concern\
    \ is cases where a user sets their privacy preferences\n   from one client, uploads\
    \ their presence authorization document to a\n   server, and then modifies them\
    \ from a different client.  If the\n   clients support different subsets of the\
    \ document format, users may\n   be confused about what information is being revealed.\
    \  Clients\n   retrieving presence authorization documents from a server SHOULD\n\
    \   render, to the users, information about rules that they do not\n   understand,\
    \ so that users can be certain what rules are in place.\n"
- title: 11.  IANA Considerations
  contents:
  - "11.  IANA Considerations\n   There are several IANA considerations associated\
    \ with this\n   specification.\n"
- title: 11.1.  XCAP Application Usage ID
  contents:
  - "11.1.  XCAP Application Usage ID\n   This section registers an XCAP Application\
    \ Usage ID (AUID) according\n   to the IANA procedures defined in [2].\n     \
    \ Name of the AUID: pres-rules\n      Description: Presence rules are documents\
    \ that describe the\n      permissions that a presentity [17] has granted to users\
    \ that seek\n      to watch their presence.\n"
- title: 11.2.  URN Sub-Namespace Registration
  contents:
  - "11.2.  URN Sub-Namespace Registration\n   This section registers a new XML namespace,\
    \ per the guidelines in\n   [11]\n      URI: The URI for this namespace is\n \
    \     urn:ietf:params:xml:ns:pres-rules.\n      Registrant Contact: IETF, SIMPLE\
    \ working group (simple@ietf.org),\n      Jonathan Rosenberg (jdrosen@jdrosen.net).\n\
    \      XML:\n      BEGIN\n      <?xml version=\"1.0\"?>\n      <!DOCTYPE html\
    \ PUBLIC \"-//W3C//DTD XHTML Basic 1.0//EN\"\n       \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\"\
    >\n      <html xmlns=\"http://www.w3.org/1999/xhtml\">\n      <head>\n       \
    \ <meta http-equiv=\"content-type\"\n           content=\"text/html;charset=iso-8859-1\"\
    />\n        <title>Presence Rules Namespace</title>\n      </head>\n      <body>\n\
    \        <h1>Namespace for Permission Statements</h1>\n        <h2>urn:ietf:params:xml:ns:pres-rules</h2>\n\
    \      <p>See <a href=\"http://www.rfc-editor.org/rfc/rfc5025.txt\">\n      RFC5025</a>.</p>\n\
    \      </body>\n      </html>\n      END\n"
- title: 11.3.  XML Schema Registrations
  contents:
  - "11.3.  XML Schema Registrations\n   This section registers an XML schema per\
    \ the procedures in [11].\n      URI: urn:ietf:params:xml:schema:pres-rules.\n\
    \      Registrant Contact: IETF, SIMPLE working group (simple@ietf.org),\n   \
    \   Jonathan Rosenberg (jdrosen@jdrosen.net).\n      The XML for this schema can\
    \ be found as the sole content of\n      Section 7.\n"
- title: 12.  Acknowledgements
  contents:
  - "12.  Acknowledgements\n   The author would like to thank Richard Barnes, Jari\
    \ Urpalainen, Jon\n   Peterson, and Martin Hynar for their comments.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n \
    \  [2]  Rosenberg, J., \"The Extensible Markup Language (XML)\n        Configuration\
    \ Access Protocol (XCAP)\", RFC 4825, May 2007.\n   [3]  Sugano, H., Fujimoto,\
    \ S., Klyne, G., Bateman, A., Carr, W., and\n        J. Peterson, \"Presence Information\
    \ Data Format (PIDF)\", RFC\n        3863, August 2004.\n   [4]  Franks, J., Hallam-Baker,\
    \ P., Hostetler, J., Lawrence, S.,\n        Leach, P., Luotonen, A., and L. Stewart,\
    \ \"HTTP Authentication:\n        Basic and Digest Access Authentication\", RFC\
    \ 2617, June 1999.\n   [5]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\
    \ A.,\n        Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP:\n\
    \        Session Initiation Protocol\", RFC 3261, June 2002.\n   [6]  Rosenberg,\
    \ J., \"A Watcher Information Event Template-Package for\n        the Session\
    \ Initiation Protocol (SIP)\", RFC 3857, August 2004.\n   [7]  Roach, A., \"Session\
    \ Initiation Protocol (SIP)-Specific Event\n        Notification\", RFC 3265,\
    \ June 2002.\n   [8]  Schulzrinne, H., Tschofenig, H., Morris, J., Cuellar, J.,\
    \ Polk,\n        J., and J. Rosenberg, \"Common Policy: A Document Format for\n\
    \        Expressing Privacy Preferences\", RFC 4745, February 2007.\n   [9]  Schulzrinne,\
    \ H., Gurbani, V., Kyzivat, P., and J. Rosenberg,\n        \"RPID: Rich Presence\
    \ Extensions to the Presence Information Data\n        Format (PIDF)\", RFC 4480,\
    \ July 2006.\n   [10] Rosenberg, J., \"A Data Model for Presence\", RFC 4479,\
    \ July 2006.\n   [11] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\
    \ January\n        2004.\n   [12] Schulzrinne, H., \"The tel URI for Telephone\
    \ Numbers\", RFC 3966,\n        December 2004.\n   [13] Duerst, M. and M. Suignard,\
    \ \"Internationalized Resource\n        Identifiers (IRIs)\", RFC 3987, January\
    \ 2005.\n   [14] Peterson, J., \"A Privacy Mechanism for the Session Initiation\n\
    \        Protocol (SIP)\", RFC 3323, November 2002.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [15] Peterson, J. and C. Jennings, \"Enhancements\
    \ for Authenticated\n        Identity Management in the Session Initiation Protocol\
    \ (SIP)\",\n        RFC 4474, August 2006.\n   [16] Jennings, C., Peterson, J.,\
    \ and M. Watson, \"Private Extensions\n        to the Session Initiation Protocol\
    \ (SIP) for Asserted Identity\n        within Trusted Networks\", RFC 3325, November\
    \ 2002.\n   [17] Day, M., Rosenberg, J., and H. Sugano, \"A Model for Presence\
    \ and\n        Instant Messaging\", RFC 2778, February 2000.\n   [18] Rosenberg,\
    \ J., \"A Presence Event Package for the Session\n        Initiation Protocol\
    \ (SIP)\", RFC 3856, August 2004.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Jonathan Rosenberg\n   Cisco\n   Edison, NJ\n   US\n   EMail:\
    \ jdrosen@cisco.com\n   URI:   http://www.jdrosen.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
