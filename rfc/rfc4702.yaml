- contents:
  - "         The Dynamic Host Configuration Protocol (DHCP) Client\n               Fully
    Qualified Domain Name (FQDN) Option\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes a Dynamic Host Configuration Protocol for\n
    \  IPv4 (DHCPv4) option that can be used to exchange information about a\n   DHCPv4
    client's fully qualified domain name and about responsibility\n   for updating
    the DNS RR related to the client's address assignment.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Terminology ................................................3\n      1.2.
    Models of Operation ........................................3\n   2. The Client
    FQDN Option ..........................................4\n      2.1. The Flags
    Field ............................................5\n      2.2. The RCODE Fields
    ...........................................6\n      2.3. The Domain Name Field
    ......................................6\n           2.3.1. Deprecated ASCII Encoding
    ...........................7\n   3. DHCP Client Behavior ............................................7\n
    \     3.1. Interaction with Other Options .............................7\n      3.2.
    Client Desires to Update A RRs .............................8\n      3.3. Client
    Desires Server to Do DNS Updates ....................8\n      3.4. Client Desires
    No Server DNS Updates .......................8\n      3.5. Domain Name and DNS
    Update Issues ..........................9\n   4. DHCP Server Behavior ...........................................10\n
    \     4.1. When to Perform DNS Updates ...............................11\n   5.
    DNS RR TTLs ....................................................12\n   6. DNS
    Update Conflicts ...........................................12\n   7. IANA Considerations
    ............................................13\n   8. Security Considerations
    ........................................13\n   9. Acknowledgements ...............................................14\n
    \  10. References ....................................................14\n      10.1.
    Normative References .....................................14\n      10.2. Informative
    References ...................................15\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   DNS ([2], [3]) maintains (among other things) the information
    about\n   the mapping between hosts' Fully Qualified Domain Names (FQDNs) [11]\n
    \  and IP addresses assigned to the hosts.  The information is\n   maintained
    in two types of Resource Records (RRs): A and PTR.  The\n   DNS update specification
    ([4]) describes a mechanism that enables DNS\n   information to be updated over
    a network.\n   The Dynamic Host Configuration Protocol for IPv4 (DHCPv4 or just
    DHCP\n   in this document) [5] provides a mechanism by which a host (a DHCP\n
    \  client) can acquire certain configuration information, along with its\n   address.
    \ This document specifies a DHCP option, the Client FQDN\n   option, which can
    be used by DHCP clients and servers to exchange\n   information about the client's
    fully qualified domain name for an\n   address and who has the responsibility
    for updating the DNS with the\n   associated A and PTR RRs.\n"
  - contents:
    - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in [1].\n"
    title: 1.1.  Terminology
  - contents:
    - "1.2.  Models of Operation\n   When a DHCP client acquires a new address, a
      site's administrator may\n   desire that one or both of the A RR for the client's
      FQDN and the PTR\n   RR for the acquired address be updated.  Therefore, two
      separate DNS\n   update transactions may occur.  Acquiring an address via DHCP\n
      \  involves two entities: a DHCP client and a DHCP server.  In\n   principle,
      each of these entities could perform none, one, or both of\n   the transactions.
      \ However, in practice, not all permutations make\n   sense.  The DHCP Client
      FQDN option is primarily intended to operate\n   in the following two cases:\n
      \  1.  DHCP client updates the A RR, DHCP server updates the PTR RR.\n   2.
      \ DHCP server updates both the A and the PTR RRs.\n   The only difference between
      these two cases is whether the FQDN-to-\n   IP-address mapping is updated by
      a DHCP client or by a DHCP server.\n   The IP-address-to-FQDN mapping is updated
      by a DHCP server in both\n   cases.\n   The reason these two are important,
      while others are unlikely, has to\n   do with authority over the respective
      DNS domain names.  A DHCP\n   client may be given authority over mapping its
      own A RRs, or that\n   authority may be restricted to a server to prevent the
      client from\n   listing arbitrary addresses or associating its address with
      arbitrary\n   domain names.  In all cases, the only reasonable place for the\n
      \  authority over the PTR RRs associated with the address is in the DHCP\n   server
      that allocates the address.\n   Note: A third case is supported: the client
      requests that the server\n   perform no updates.  However, this case is presumed
      to be rare\n   because of the authority issues.\n   It is considered local policy
      to permit DHCP clients and servers to\n   perform DNS updates to zones.  This
      document does not require any\n   specific administrative policy and does not
      propose one.\n   Furthermore, this specification applies only to DHCP client
      and\n   server processes; it does not apply to other processes that initiate\n
      \  DNS updates.\n   This document describes a DHCP option which a client can
      use to\n   convey all or part of its domain name to a DHCP server.  Site-\n
      \  specific policy determines whether DHCP servers use the names that\n   clients
      offer or not, and what DHCP servers may do in cases where\n   clients do not
      supply domain names.\n"
    title: 1.2.  Models of Operation
  title: 1.  Introduction
- contents:
  - "2.  The Client FQDN Option\n   To update the IP-address-to-FQDN mapping, a DHCP
    server needs to know\n   the FQDN of the client to which the server leases the
    address.  To\n   allow the client to convey its FQDN to the server, this document\n
    \  defines a new DHCP option, called \"Client FQDN\".  The Client FQDN\n   option
    also contains Flags, which DHCP servers can use to convey\n   information about
    DNS updates to clients, and two deprecated RCODEs.\n   Clients MAY send the Client
    FQDN option, setting appropriate Flags\n   values, in both their DHCPDISCOVER
    and DHCPREQUEST messages.  If a\n   client sends the Client FQDN option in its
    DHCPDISCOVER message, it\n   MUST send the option in subsequent DHCPREQUEST messages
    though the\n   contents of the option MAY change.\n   Only one Client FQDN option
    MAY appear in a message, though it may be\n   instantiated in a message as multiple
    options [9].  DHCP clients and\n   servers supporting this option MUST implement
    DHCP option\n   concatenation [9].  In the terminology of [9], the Client FQDN
    option\n   is a concatenation-requiring option.\n   The code for this option is
    81.  Len contains the number of octets\n   that follow the Len field, and the
    minimum value is 3 (octets).\n   The format of the Client FQDN option is:\n        Code
    \  Len    Flags  RCODE1 RCODE2   Domain Name\n       +------+------+------+------+------+------+--\n
    \      |  81  |   n  |      |      |      |       ...\n       +------+------+------+------+------+------+--\n
    \  The above figure follows the conventions of [12].\n"
  - contents:
    - "2.1.  The Flags Field\n   The format of the 1-octet Flags field is:\n        0
      1 2 3 4 5 6 7\n       +-+-+-+-+-+-+-+-+\n       |  MBZ  |N|E|O|S|\n       +-+-+-+-+-+-+-+-+\n
      \  The \"S\" bit indicates whether the server SHOULD or SHOULD NOT perform\n
      \  the A RR (FQDN-to-address) DNS updates.  A client sets the bit to 0\n   to
      indicate the server SHOULD NOT perform the updates and 1 to\n   indicate the
      server SHOULD perform the updates.  The state of the bit\n   in the reply from
      the server indicates the action to be taken by the\n   server; if 1, the server
      has taken responsibility for A RR updates\n   for the FQDN.\n   The \"O\" bit
      indicates whether the server has overridden the client's\n   preference for
      the \"S\" bit.  A client MUST set this bit to 0.  A\n   server MUST set this
      bit to 1 if the \"S\" bit in its reply to the\n   client does not match the
      \"S\" bit received from the client.\n   The \"N\" bit indicates whether the
      server SHOULD NOT perform any DNS\n   updates.  A client sets this bit to 0
      to request that the server\n   SHOULD perform updates (the PTR RR and possibly
      the A RR based on the\n   \"S\" bit) or to 1 to request that the server SHOULD
      NOT perform any\n   DNS updates.  A server sets the \"N\" bit to indicate whether
      the\n   server SHALL (0) or SHALL NOT (1) perform DNS updates.  If the \"N\"\n
      \  bit is 1, the \"S\" bit MUST be 0.\n   The \"E\" bit indicates the encoding
      of the Domain Name field. 1\n   indicates canonical wire format, without compression,
      as described in\n   [3], Section 3.1.  This encoding SHOULD be used by clients
      and MUST\n   be supported by servers. 0 indicates a now-deprecated ASCII encoding\n
      \  (see Section 2.3.1).  A server MUST use the same encoding as that\n   used
      by the client.  A server that does not support the deprecated\n   ASCII encoding
      MUST ignore Client FQDN options that use that\n   encoding.\n   The remaining
      bits in the Flags field are reserved for future\n   assignment.  DHCP clients
      and servers that send the Client FQDN\n   option MUST clear the MBZ bits, and
      they MUST ignore these bits.\n"
    title: 2.1.  The Flags Field
  - contents:
    - "2.2.  The RCODE Fields\n   The two 1-octet RCODE1 and RCODE2 fields are deprecated.
      \ A client\n   SHOULD set these to 0 when sending the option and SHOULD ignore
      them\n   on receipt.  A server SHOULD set these to 255 when sending the option\n
      \  and MUST ignore them on receipt.\n   As this option with these fields is
      already in wide use, the fields\n   are retained.  These fields were originally
      defined for use by a DHCP\n   server to indicate to a DHCP client the Response
      Code from any A\n   (RCODE1) or PTR (RCODE2) RR DNS updates it has performed,
      or a value\n   of 255 was used to indicate that an update had been initiated
      but had\n   not yet completed.  Each of these fields is one octet long.  These\n
      \  fields were defined before EDNS0 [13], which describes a mechanism\n   for
      extending the length of a DNS RCODE to 12 bits, which is another\n   reason
      to deprecate them.\n   If the client needs to confirm that the DNS update has
      been done, it\n   MAY use a DNS query to check whether the mapping is up to
      date.\n   However, depending on the load on the DHCP and DNS servers and the\n
      \  DNS propagation delays, the client can only infer success.  If the\n   information
      is not found to be up to date in DNS, the authoritative\n   servers might not
      have completed the updates or zone transfers, or\n   caching resolvers may yet
      have updated their caches.\n"
    title: 2.2.  The RCODE Fields
  - contents:
    - "2.3.  The Domain Name Field\n   The Domain Name part of the option carries
      all or part of the FQDN of\n   a DHCP client.  The data in the Domain Name field
      SHOULD appear in\n   canonical wire format as specified in [3], Section 3.1.
      \ If the DHCP\n   client uses the canonical wire format, it MUST set the \"E\"
      bit in the\n   Flags field to 1.  In order to determine whether the FQDN has
      changed\n   between message exchanges, the client and server MUST NOT alter
      the\n   Domain Name field contents unless the FQDN has actually changed.\n   A
      client MAY be configured with a fully qualified domain name or with\n   a partial
      name that is not fully qualified.  If a client knows only\n   part of its name,
      it MAY send a name that is not fully qualified,\n   indicating that it knows
      part of the name but does not necessarily\n   know the zone in which the name
      is to be embedded.\n   To send a fully qualified domain name, the Domain Name
      field is set\n   to the DNS-encoded domain name including the terminating zero-length\n
      \  label.  To send a partial name, the Domain Name field is set to the\n   DNS
      encoded domain name without the terminating zero-length label.\n   A client
      MAY also leave the Domain Name field empty if it desires the\n   server to provide
      a name.\n"
    - contents:
      - "2.3.1.  Deprecated ASCII Encoding\n   A substantial population of clients
        implemented an earlier draft of\n   this specification, which permitted an
        ASCII encoding of the Domain\n   Name field.  Server implementations SHOULD
        be aware that clients that\n   send the Client FQDN option with the \"E\"
        bit set to 0 are using an\n   ASCII encoding of the Domain Name field.  Servers
        MAY be prepared to\n   return an ASCII-encoded version of the Domain Name
        field to such\n   clients.  Servers that are not prepared to return an ASCII-encoded\n
        \  version MUST ignore the Client FQDN option if the \"E\" bit is 0.  The\n
        \  use of ASCII encoding in this option SHOULD be considered deprecated.\n
        \  A DHCP client that used ASCII encoding was permitted to suggest a\n   single
        label if it was not configured with a fully qualified name.\n   Such clients
        send a single label as a series of ASCII characters in\n   the Domain Name
        field, excluding the \".\" (dot) character.\n   Clients and servers SHOULD
        follow the character set rules of [6],\n   fourth section (\"Assumptions\"),
        first 5 sentences, as modified by\n   [7], Section 2.1.  However, implementers
        SHOULD also be aware that\n   some client software may send data intended
        to be in other character\n   sets.  This specification does not require support
        for other\n   character sets.\n"
      title: 2.3.1.  Deprecated ASCII Encoding
    title: 2.3.  The Domain Name Field
  title: 2.  The Client FQDN Option
- contents:
  - "3.  DHCP Client Behavior\n   The following describes the behavior of a DHCP client
    that implements\n   the Client FQDN option.\n"
  - contents:
    - "3.1.  Interaction with Other Options\n   Other DHCP options MAY carry data
      that is related to the Domain Name\n   field of the Client FQDN option.  The
      Host Name option [12], for\n   example, contains an ASCII string representation
      of the client's host\n   name.  In general, a client does not need to send redundant
      data, and\n   therefore clients that send the Client FQDN option in their messages\n
      \  MUST NOT also send the Host Name option.  Clients that receive both\n   the
      Host Name option and the Client FQDN option from a server SHOULD\n   prefer
      Client FQDN option data.  Section 4 instructs servers to\n   ignore the Host
      Name option in client messages that include the\n   Client FQDN option.\n"
    title: 3.1.  Interaction with Other Options
  - contents:
    - "3.2.  Client Desires to Update A RRs\n   If a client that owns/maintains its
      own FQDN wants to be responsible\n   for updating the FQDN-to-IP-address mapping
      for the FQDN and\n   address(es) used by the client, the client MUST include
      the Client\n   FQDN option in the DHCPREQUEST message originated by the client.
      \ A\n   DHCP client MAY choose to include the Client FQDN option in its\n   DHCPDISCOVER
      messages as well as its DHCPREQUEST messages.  The \"S\",\n   \"O\", and \"N\"
      bits in the Flags field in the option MUST be 0.\n   Once the client's DHCP
      configuration is completed (the client\n   receives a DHCPACK message and successfully
      completes a final check\n   on the parameters passed in the message), the client
      MAY originate an\n   update for the A RR (associated with the client's FQDN)
      unless the\n   server has set the \"S\" bit to 1.  If the \"S\" is 1, the DHCP
      client\n   SHOULD NOT initiate an update for the name in the server's returned\n
      \  Client FQDN option Domain Name field.  However, a DHCP client that is\n   explicitly
      configured with a FQDN MAY ignore the state of the \"S\" bit\n   if the server's
      returned name matches the client's configured name.\n"
    title: 3.2.  Client Desires to Update A RRs
  - contents:
    - "3.3.  Client Desires Server to Do DNS Updates\n   A client can choose to delegate
      the responsibility for updating the\n   FQDN-to-IP-address mapping for the FQDN
      and address(es) used by the\n   client to the server.  In order to inform the
      server of this choice,\n   the client SHOULD include the Client FQDN option
      in its DHCPREQUEST\n   message and MAY include the Client FQDN option in its
      DHCPDISCOVER.\n   The \"S\" bit in the Flags field in the option MUST be 1,
      and the \"O\"\n   and \"N\" bits MUST be 0.\n"
    title: 3.3.  Client Desires Server to Do DNS Updates
  - contents:
    - "3.4.  Client Desires No Server DNS Updates\n   A client can choose to request
      that the server perform no DNS updates\n   on its behalf.  In order to inform
      the server of this choice, the\n   client SHOULD include the Client FQDN option
      in its DHCPREQUEST\n   message and MAY include the Client FQDN option in its
      DHCPDISCOVER.\n   The \"N\" bit in the Flags field in the option MUST be 1,
      and the \"S\"\n   and \"O\" bits MUST be 0.\n   Once the client's DHCP configuration
      is completed (the client\n   receives a DHCPACK message and successfully completes
      a final check\n   on the parameters passed in the message), the client MAY originate\n
      \  its DNS updates provided the server's \"N\" bit is 1.  If the server's\n
      \  \"N\" bit is 0, the server MAY perform the PTR RR updates; it MAY also\n
      \  perform the A RR updates if the \"S\" bit is 1.\n"
    title: 3.4.  Client Desires No Server DNS Updates
  - contents:
    - "3.5.  Domain Name and DNS Update Issues\n   As there is a possibility that
      the DHCP server is configured to\n   complete or replace a domain name that
      the client sends, the client\n   MAY find it useful to send the Client FQDN
      option in its DHCPDISCOVER\n   messages.  If the DHCP server returns different
      Domain Name data in\n   its DHCPOFFER message, the client could use that data
      in performing\n   its own eventual A RR update, or in forming the Client FQDN
      option\n   that it sends in its DHCPREQUEST message.  There is no requirement\n
      \  that the client send identical Client FQDN option data in its\n   DHCPDISCOVER
      and DHCPREQUEST messages.  In particular, if a client\n   has sent the Client
      FQDN option to its server, and the configuration\n   of the client changes so
      that its notion of its domain name changes,\n   it MAY send the new name data
      in a Client FQDN option when it\n   communicates with the server again.  This
      MAY cause the DHCP server\n   to update the name associated with the PTR record
      and, if the server\n   updated the A record representing the client, to delete
      that record\n   and attempt an update for the client's current domain name.\n
      \  A client that delegates the responsibility for updating the FQDN-to-\n   IP-address
      mapping to a server will not receive any indication\n   (either positive or
      negative) from the server as to whether the\n   server was able to perform the
      update.  The client MAY use a DNS\n   query to check whether the mapping is
      up to date (see Section 2.2).\n   If a client releases its lease prior to the
      lease expiration time and\n   is responsible for updating its A RR, the client
      SHOULD delete the A\n   RR associated with the leased address before sending
      a DHCPRELEASE\n   message.  Similarly, if a client was responsible for updating
      its A\n   RR, but is unable to renew its lease, the client SHOULD attempt to\n
      \  delete the A RR before its lease expires.  A DHCP client that has not\n   been
      able to delete an A RR that it added (because it has lost the\n   use of its
      DHCP IP address) SHOULD attempt to notify its\n   administrator, perhaps by
      emitting a log message.\n   A client that desires to perform DNS updates to
      A RRs SHOULD NOT do\n   so if the client's address is a private address [8].\n"
    title: 3.5.  Domain Name and DNS Update Issues
  title: 3.  DHCP Client Behavior
- contents:
  - "4.  DHCP Server Behavior\n   The following describes the behavior of a DHCP server
    that implements\n   the Client FQDN option when the client's message includes
    the Client\n   FQDN option.\n   The server examines its configuration and the
    Flag bits in the\n   client's Client FQDN option to determine how to respond:\n
    \  o  If the client's \"E\" bit is 0 and the server does not support ASCII\n      encoding
    (Section 2.3.1), the server SHOULD ignore the Client FQDN\n      option.\n   o
    \ The server sets to 0 the \"S\", \"O\", and \"N\" bits in its copy of the\n      option
    it will return to the client.  The server copies the\n      client's \"E\" bit.\n
    \  o  If the client's \"N\" bit is 1 and the server's configuration allows\n      it
    to honor the client's request for no server initiated DNS\n      updates, the
    server sets the \"N\" bit to 1.\n   o  Otherwise, if the client's \"S\" bit is
    1 and the server's\n      configuration allows it to honor the client's request
    for the\n      server to initiate A RR DNS updates, the server sets the \"S\"
    to 1.\n      If the server's \"S\" bit does not match the client's \"S\" bit,
    the\n      server sets the \"O\" bit to 1.\n   The server MAY be configured to
    use the name supplied in the client's\n   Client FQDN option, or it MAY be configured
    to modify the supplied\n   name or to substitute a different name.  The server
    SHOULD send its\n   notion of the complete FQDN for the client in the Domain Name
    field.\n   The server MAY simply copy the Domain Name field from the Client FQDN\n
    \  option that the client sent to the server.  The server MUST use the\n   same
    encoding format (ASCII or DNS binary encoding) that the client\n   used in the
    Client FQDN option in its DHCPDISCOVER or DHCPREQUEST,\n   and it MUST set the
    \"E\" bit in the option's Flags field accordingly.\n   If a client sends both
    the Client FQDN and Host Name option, the\n   server SHOULD ignore the Host Name
    option.\n   The server SHOULD set the RCODE1 and RCODE2 fields to 255 before\n
    \  sending the Client FQDN message to the client in a DHCPOFFER or\n   DHCPACK.\n"
  - contents:
    - "4.1.  When to Perform DNS Updates\n   The server SHOULD NOT perform any DNS
      updates if the \"N\" bit is 1 in\n   the Flags field of the Client FQDN option
      in the DHCPACK messages (to\n   be) sent to the client.  However, the server
      SHOULD delete any RRs\n   that it previously added via DNS updates for the client.\n
      \  The server MAY perform the PTR RR DNS update (unless the \"N\" bit is\n   1).\n
      \  The server MAY perform the A RR DNS update if the \"S\" bit is 1 in the\n
      \  Flags field of the Client FQDN option in the DHCPACK message (to be)\n   sent
      to the client.\n   The server MAY perform these updates even if the client's
      DHCPREQUEST\n   did not carry the Client FQDN option.  The server MUST NOT initiate\n
      \  DNS updates when responding to DHCPDISCOVER messages from a client.\n   The
      server MAY perform its DNS updates (PTR RR or PTR and A RR)\n   before or after
      sending the DHCPACK message to the client.\n   If the server's A RR DNS update
      does not complete until after the\n   server has replied to the DHCP client,
      the server's interaction with\n   the DNS server MAY cause the DHCP server to
      change the domain name\n   that it associates with the client.  This can occur,
      for example, if\n   the server detects and resolves a domain-name conflict [10].
      \ In such\n   cases, the domain name that the server returns to the DHCP client\n
      \  would change between two DHCP exchanges.\n   If the server previously performed
      DNS updates for the client and the\n   client's information has not changed,
      the server MAY skip performing\n   additional DNS updates.\n   When a server
      detects that a lease on an address that the server\n   leases to a client has
      expired, the server SHOULD delete any PTR RR\n   that it added via DNS update.
      \ In addition, if the server added an A\n   RR on the client's behalf, the server
      SHOULD also delete the A RR.\n   When a server terminates a lease on an address
      prior to the lease's\n   expiration time (for instance, by sending a DHCPNAK
      to a client), the\n   server SHOULD delete any PTR RR that it associated with
      the address\n   via DNS update.  In addition, if the server took responsibility
      for\n   an A RR, the server SHOULD also delete that A RR.\n"
    title: 4.1.  When to Perform DNS Updates
  title: 4.  DHCP Server Behavior
- contents:
  - "5.  DNS RR TTLs\n   RRs associated with DHCP clients may be more volatile than
    statically\n   configured RRs.  DHCP clients and servers that perform dynamic\n
    \  updates should attempt to specify resource-record TTLs that reflect\n   this
    volatility, in order to minimize the possibility that answers to\n   DNS queries
    will return records that refer to DHCP IP address\n   assignments that have expired
    or been released.\n   The coupling among primary, secondary, and caching DNS servers
    is\n   'loose'; that is a fundamental part of the design of the DNS.  This\n   looseness
    makes it impossible to prevent all possible situations in\n   which a resolver
    may return a record reflecting a DHCP-assigned IP\n   address that has expired
    or been released.  In deployment, this\n   rarely, if ever, represents a significant
    problem.  Most DHCP-managed\n   clients are infrequently looked up by name in
    the DNS, and the\n   deployment of IXFR ([16]) and NOTIFY ([17]) can reduce the
    latency\n   between updates and their visibility at secondary servers.\n   We
    suggest these basic guidelines for implementers.  In general, the\n   TTLs for
    RRs added as a result of DHCP IP address assignment activity\n   SHOULD be less
    than the initial lease time.  The RR TTL on a DNS\n   record added SHOULD NOT
    exceed 1/3 of the lease time, but SHOULD NOT\n   be less than 10 minutes.  We
    recognize that individual administrators\n   will have varying requirements: DHCP
    servers and clients SHOULD allow\n   administrators to configure TTLs and upper
    and lower bounds on the\n   TTL values, either as an absolute time interval or
    as a percentage of\n   the lease time.\n   While clients and servers MAY update
    the TTL of the records as the\n   lease is about to expire, there is no requirement
    that they do so, as\n   this puts additional load on the DNS system with likely
    little\n   benefit.\n"
  title: 5.  DNS RR TTLs
- contents:
  - "6.  DNS Update Conflicts\n   This document does not resolve how a DHCP client
    or server prevents\n   name conflicts.  This document addresses only how a DHCP
    client and\n   server negotiate who will perform the DNS updates and the fully\n
    \  qualified domain name requested or used.\n   Implementers of this work will
    need to consider how name conflicts\n   will be prevented.  If a DNS updater needs
    a security token in order\n   to successfully perform DNS updates on a specific
    name, name\n   conflicts can only occur if multiple updaters are given a security\n
    \  token for that name.  Or, if the fully qualified domains are based on\n   the
    specific address bound to a client, conflicts will not occur.\n   Or, a name conflict
    resolution technique as described in \"Resolving\n   Name Conflicts\" [10] SHOULD
    be used.\n"
  title: 6.  DNS Update Conflicts
- contents:
  - "7.  IANA Considerations\n   IANA has already assigned DHCP option 81 to the Client
    FQDN option.\n   As this document describes the option's use, IANA is requested
    to\n   reference this document for option 81.\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   Unauthenticated updates to the DNS can lead to
    tremendous confusion,\n   through malicious attack or through inadvertent misconfiguration.\n
    \  Administrators need to be wary of permitting unsecured DNS updates to\n   zones
    that are exposed to the global Internet.  Both DHCP clients and\n   servers should
    use some form of update request origin authentication\n   procedure (e.g., Secure
    DNS Dynamic Update [14]) when performing DNS\n   updates.\n   Whether a DHCP client
    is responsible for updating an FQDN-to-IP-\n   address mapping or whether this
    is the responsibility of the DHCP\n   server is a site-local matter.  The choice
    between the two\n   alternatives is likely based on the security model that is
    used with\n   the DNS update protocol (e.g., only a client may have sufficient\n
    \  credentials to perform updates to the FQDN-to-IP-address mapping for\n   its
    FQDN).\n   Whether a DHCP server is always responsible for updating the FQDN-\n
    \  to-IP-address mapping (in addition to updating the IP to FQDN\n   mapping),
    regardless of the wishes of an individual DHCP client, is\n   also a site-local
    matter.  The choice between the two alternatives is\n   likely based on the security
    model that is being used with DNS\n   updates.  In cases where a DHCP server is
    performing DNS updates on\n   behalf of a client, the DHCP server should be sure
    of the DNS name to\n   use for the client, and of the identity of the client.\n
    \  Currently, it is difficult for DHCP servers to develop much\n   confidence
    in the identities of its clients, given the absence of\n   entity authentication
    from the DHCP protocol itself.  There are many\n   ways for a DHCP server to develop
    a DNS name to use for a client, but\n   only in certain relatively unusual circumstances
    will the DHCP server\n   know for certain the identity of the client.  If DHCP
    Authentication\n   [15] becomes widely deployed, this may become more customary.\n
    \  One example of a situation that offers some extra assurances is when\n   the
    DHCP client is connected to a network through an Multimedia Cable\n   Network
    System (MCNS) cable modem, and the cable modem termination\n   system (CMTS),
    i.e., head-end, ensures that MAC address spoofing\n   simply does not occur.  Another
    example of a configuration that might\n   be trusted is one where clients obtain
    network access via a network\n   access server using PPP.  The NAS itself might
    be obtaining IP\n   addresses via DHCP, encoding a client identification into
    the DHCP\n   client-id option.  In this case, the network access server as well
    as\n   the DHCP server might be operating within a trusted environment, in\n   which
    case the DHCP server could be configured to trust that the user\n   authentication
    and authorization procedure of the remote access\n   server was sufficient, and
    would therefore trust the client\n   identification encoded within the DHCP client-id.\n
    \  It is critical to implement proper conflict resolution, and the\n   security
    considerations of conflict resolution apply [10].\n"
  title: 8.  Security Considerations
- contents:
  - "9.  Acknowledgements\n   Many thanks to Mark Beyer, Jim Bound, Ralph Droms, Robert
    Elz, Peter\n   Ford, Olafur Gudmundsson, Edie Gunter, Andreas Gustafsson, David
    W.\n   Hankins, R. Barr Hibbs, Kim Kinnear, Stuart Kwan, Ted Lemon, Ed\n   Lewis,
    Michael Lewis, Josh Littlefield, Michael Patton, Pekka Savola,\n   Jyrki Soini,
    and Glenn Stump for their review and comments.\n"
  title: 9.  Acknowledgements
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs
      to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n
      \  [2]   Mockapetris, P., \"Domain names - concepts and facilities\",\n         STD
      13, RFC 1034, November 1987.\n   [3]   Mockapetris, P., \"Domain names - implementation
      and\n         specification\", STD 13, RFC 1035, November 1987.\n   [4]   Vixie,
      P., Thomson, S., Rekhter, Y., and J. Bound, \"Dynamic\n         Updates in the
      Domain Name System (DNS UPDATE)\", RFC 2136,\n         April 1997.\n   [5]   Droms,
      R., \"Dynamic Host Configuration Protocol\", RFC 2131,\n         March 1997.\n
      \  [6]   Harrenstien, K., Stahl, M., and E. Feinler, \"DoD Internet host\n         table
      specification\", RFC 952, October 1985.\n   [7]   Braden, R., \"Requirements
      for Internet Hosts - Application and\n         Support\", STD 3, RFC 1123, October
      1989.\n   [8]   Rekhter, Y., Moskowitz, R., Karrenberg, D., Groot, G., and E.\n
      \        Lear, \"Address Allocation for Private Internets\", BCP 5,\n         RFC
      1918, February 1996.\n   [9]   Lemon, T. and S. Cheshire, \"Encoding Long Options
      in the\n         Dynamic Host Configuration Protocol (DHCPv4)\", RFC 3396,\n
      \        November 2002.\n   [10]  Stapp, M. and B. Volz, \"Resolution of Fully
      Qualified Domain\n         Name (FQDN) Conflicts among Dynamic Host Configuration
      Protocol\n         (DHCP) Clients\", RFC 4703, October 2006.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [11]  Marine, A., Reynolds, J., and G. Malkin,
      \"FYI on Questions and\n         Answers - Answers to Commonly asked \"New Internet
      User\"\n         Questions\", FYI 4, RFC 1594, March 1994.\n   [12]  Alexander,
      S. and R. Droms, \"DHCP Options and BOOTP Vendor\n         Extensions\", RFC
      2132, March 1997.\n   [13]  Vixie, P., \"Extension Mechanisms for DNS (EDNS0)\",
      RFC 2671,\n         August 1999.\n   [14]  Wellington, B., \"Secure Domain Name
      System (DNS) Dynamic\n         Update\", RFC 3007, November 2000.\n   [15]  Droms,
      R. and W. Arbaugh, \"Authentication for DHCP Messages\",\n         RFC 3118,
      June 2001.\n   [16]  Ohta, M., \"Incremental Zone Transfer in DNS\", RFC 1995,\n
      \        August 1996.\n   [17]  Vixie, P., \"A Mechanism for Prompt Notification
      of Zone Changes\n         (DNS NOTIFY)\", RFC 1996, August 1996.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Authors' Addresses\n   Mark Stapp\n   Cisco Systems, Inc.\n   1414 Massachusetts
    Ave.\n   Boxborough, MA  01719\n   USA\n   Phone: 978.936.1535\n   EMail: mjs@cisco.com\n
    \  Bernie Volz\n   Cisco Systems, Inc.\n   1414 Massachusetts Ave.\n   Boxborough,
    MA  01719\n   USA\n   Phone: 978.936.0382\n   EMail: volz@cisco.com\n   Yakov
    Rekhter\n   Juniper Networks\n   1194 North Mathilda Avenue\n   Sunnyvale, CA
    \ 94089\n   USA\n   Phone: 408.745.2000\n   EMail: yakov@juniper.net\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
