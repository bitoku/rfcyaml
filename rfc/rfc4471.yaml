- title: __initial_text__
  contents:
  - '            Derivation of DNS Name Predecessor and Successor

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes two methods for deriving the canonically-\n\
    \   ordered predecessor and successor of a DNS name.  These methods may\n   be\
    \ used for dynamic NSEC resource record synthesis, enabling\n   security-aware\
    \ name servers to provide authenticated denial of\n   existence without disclosing\
    \ other owner names in a DNSSEC secured\n   zone.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n           4.5.1. Restriction of Effective Maximum DNS Name\
    \ Length ....8\n           4.5.2. Use of Modified Method with Zones Containing\n\
    \                  SRV RRs .............................................8\n  \
    \ 5. Examples ........................................................9\n    \
    \  5.1. Examples of Immediate Predecessors Using Absolute Method ..10\n      5.2.\
    \ Examples of Immediate Successors Using Absolute Method ....14\n      5.3. Examples\
    \ of Predecessors Using Modified Method ............19\n      5.4. Examples of\
    \ Successors Using Modified Method ..............20\n   6. Security Considerations\
    \ ........................................21\n   7. Acknowledgements ...............................................21\n\
    \   8. References .....................................................21\n  \
    \    8.1. Normative References ......................................21\n    \
    \  8.2. Informative References ....................................22\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   One of the proposals for avoiding the exposure of zone information\n\
    \   during the deployment DNSSEC is dynamic NSEC resource record (RR)\n   synthesis.\
    \  This technique is described in [DNSSEC-TRANS] and\n   [RFC4470], and involves\
    \ the generation of NSEC RRs that just span the\n   query name for non-existent\
    \ owner names.  In order to do this, the\n   DNS names that would occur just prior\
    \ to and just following a given\n   query name must be calculated in real time,\
    \ as maintaining a list of\n   all possible owner names that might occur in a\
    \ zone would be\n   impracticable.\n   Section 6.1 of [RFC4034] defines canonical\
    \ DNS name order.  This\n   document does not amend or modify this definition.\
    \  However, the\n   derivation of immediate predecessor and successor, although\
    \ trivial,\n   is non-obvious.  Accordingly, several methods are described here\
    \ as\n   an aid to implementors and a reference to other interested parties.\n\
    \   This document describes two methods:\n   1.  An \"absolute method\", which\
    \ returns the immediate predecessor or\n       successor of a domain name such\
    \ that no valid DNS name could\n       exist between that DNS name and the predecessor\
    \ or successor.\n   2.  A \"modified method\", which returns a predecessor and\
    \ successor\n       that are more economical in size and computation.  This method\
    \ is\n       restricted to use with zones consisting exclusively of owner\n  \
    \     names that contain no more than one label more than the owner\n       name\
    \ of the apex, where the longest possible owner name (i.e.,\n       one with a\
    \ maximum length left-most label) would not exceed the\n       maximum DNS name\
    \ length.  This is, however, the type of zone for\n       which the technique\
    \ of online signing is most likely to be used.\n"
- title: 2.  Notational Conventions
  contents:
  - "2.  Notational Conventions\n   The following notational conventions are used\
    \ in this document for\n   economy of expression:\n   N: An unspecified DNS name.\n\
    \   P(N): Immediate predecessor to N (absolute method).\n   S(N): Immediate successor\
    \ to N (absolute method).\n   P'(N): Predecessor to N (modified method).\n   S'(N):\
    \ Successor to N (modified method).\n"
- title: 3.  Derivations
  contents:
  - "3.  Derivations\n   These derivations assume that all uppercase US-ASCII letters\
    \ in N\n   have already been replaced by their corresponding lowercase\n   equivalents.\
    \  Unless otherwise specified, processing stops after the\n   first step in which\
    \ a condition is met.\n   The derivations make reference to maximum label length\
    \ and maximum\n   DNS name length; these are defined in Section 3.1 of [RFC1034]\
    \ to be\n   63 and 255 octets, respectively.\n"
- title: 3.1.  Absolute Method
  contents:
  - '3.1.  Absolute Method

    '
- title: 3.1.1.  Derivation of DNS Name Predecessor
  contents:
  - "3.1.1.  Derivation of DNS Name Predecessor\n   To derive P(N):\n   1.  If N is\
    \ the same as the owner name of the zone apex, prepend N\n       repeatedly with\
    \ labels of the maximum length possible consisting\n       of octets of the maximum\
    \ sort value (e.g., 0xff) until N is the\n       maximum length possible; otherwise\
    \ proceed to the next step.\n   2.  If the least significant (left-most) label\
    \ of N consists of a\n       single octet of the minimum sort value (e.g., 0x00),\
    \ remove that\n       label; otherwise proceed to the next step.\n   3.  If the\
    \ least significant (right-most) octet in the least\n       significant (left-most)\
    \ label of N is the minimum sort value,\n       remove the least significant octet\
    \ and proceed to step 5.\n   4.  Decrement the value of the least significant\
    \ (right-most) octet\n       of the least significant (left-most) label, skipping\
    \ any values\n       that correspond to uppercase US-ASCII letters, and then append\n\
    \       the least significant (left-most) label with as many octets as\n     \
    \  possible of the maximum sort value.  Proceed to the next step.\n   5.  Prepend\
    \ N repeatedly with labels of as long a length as possible\n       consisting\
    \ of octets of the maximum sort value until N is the\n       maximum length possible.\n"
- title: 3.1.2.  Derivation of DNS Name Successor
  contents:
  - "3.1.2.  Derivation of DNS Name Successor\n   To derive S(N):\n   1.  If N is\
    \ two or more octets shorter than the maximum DNS name\n       length, prepend\
    \ N with a label containing a single octet of the\n       minimum sort value (e.g.,\
    \ 0x00); otherwise proceed to the next\n       step.\n   2.  If N is one octet\
    \ shorter than the maximum DNS name length and\n       the least significant (left-most)\
    \ label is one or more octets\n       shorter than the maximum label length, append\
    \ an octet of the\n       minimum sort value to the least significant label; otherwise\n\
    \       proceed to the next step.\n   3.  Increment the value of the least significant\
    \ (right-most) octet\n       in the least significant (left-most) label that is\
    \ less than the\n       maximum sort value (e.g., 0xff), skipping any values that\n\
    \       correspond to uppercase US-ASCII letters, and then remove any\n      \
    \ octets to the right of that one.  If all octets in the label are\n       the\
    \ maximum sort value, then proceed to the next step.\n   4.  Remove the least\
    \ significant (left-most) label.  Unless N is now\n       the same as the owner\
    \ name of the zone apex (this will occur only\n       if N was the maximum possible\
    \ name in canonical DNS name order,\n       and thus has wrapped to the owner\
    \ name of zone apex), repeat\n       starting at step 2.\n"
- title: 3.2.  Modified Method
  contents:
  - "3.2.  Modified Method\n   This method is for use with zones consisting only of\
    \ single-label\n   owner names where an owner name consisting of label of maximum\
    \ length\n   would not result in a DNS name that exceeded the maximum DNS name\n\
    \   length.  This method is computationally simpler and returns values\n   that\
    \ are more economical in size than the absolute method.  It\n   differs from the\
    \ absolute method detailed above in the following\n   ways:\n   1.  Step 1 of\
    \ the derivation P(N) has been omitted as the existence\n       of the owner name\
    \ of the zone apex never requires denial.\n   2.  A new step 1 has been introduced\
    \ that removes unnecessary labels.\n   3.  Step 4 of the derivation P(N) has been\
    \ omitted as it is only\n       necessary for zones containing owner names consisting\
    \ of more\n       than one label.  This omission generally results in a significant\n\
    \       reduction of the length of derived predecessors.\n   4.  Step 1 of the\
    \ derivation S(N) had been omitted as it is only\n       necessary for zones containing\
    \ owner names consisting of more\n       than one label.  This omission results\
    \ in a tiny reduction of the\n       length of derived successors, and maintains\
    \ consistency with the\n       modification of step 4 of the derivation P(N) described\
    \ above.\n   5.  Steps 2 and 4 of the derivation S(N) have been modified to\n\
    \       eliminate checks for maximum DNS name length, as it is an\n       assumption\
    \ of this method that no DNS name in the zone can exceed\n       the maximum DNS\
    \ name length.\n"
- title: 3.2.1.  Derivation of DNS Name Predecessor
  contents:
  - "3.2.1.  Derivation of DNS Name Predecessor\n   To derive P'(N):\n   1.  If N\
    \ is two or more labels longer than the owner name of the\n       apex, repeatedly\
    \ remove the least significant (left-most) label\n       until N is only one label\
    \ longer than the owner name of the apex;\n       otherwise proceed to the next\
    \ step.\n   2.  If the least significant (left-most) label of N consists of a\n\
    \       single octet of the minimum sort value (e.g., 0x00), remove that\n   \
    \    label; otherwise proceed to the next step.  (If this condition is\n     \
    \  met, P'(N) is the owner name of the apex.)\n   3.  If the least significant\
    \ (right-most) octet in the least\n       significant (left-most) label of N is\
    \ the minimum sort value,\n       remove the least significant octet.\n   4. \
    \ Decrement the value of the least significant (right-most) octet,\n       skipping\
    \ any values that correspond to uppercase US-ASCII\n       letters, and then append\
    \ the label with as many octets as\n       possible of the maximum sort value.\n"
- title: 3.2.2.  Derivation of DNS Name Successor
  contents:
  - "3.2.2.  Derivation of DNS Name Successor\n   To derive S'(N):\n   1.  If N is\
    \ two or more labels longer than the owner name of the\n       apex, repeatedly\
    \ remove the least significant (left-most) label\n       until N is only one label\
    \ longer than the owner name of the apex.\n       Proceed to the next step.\n\
    \   2.  If the least significant (left-most) label of N is one or more\n     \
    \  octets shorter than the maximum label length, append an octet of\n       the\
    \ minimum sort value to the least significant label; otherwise\n       proceed\
    \ to the next step.\n   3.  Increment the value of the least significant (right-most)\
    \ octet\n       in the least significant (left-most) label that is less than the\n\
    \       maximum sort value (e.g., 0xff), skipping any values that\n       correspond\
    \ to uppercase US-ASCII letters, and then remove any\n       octets to the right\
    \ of that one.  If all octets in the label are\n       the maximum sort value,\
    \ then proceed to the next step.\n   4.  Remove the least significant (left-most)\
    \ label.  (This will occur\n       only if the least significant label is the\
    \ maximum label length\n       and consists entirely of octets of the maximum\
    \ sort value, and\n       thus has wrapped to the owner name of the zone apex.)\n"
- title: 4.  Notes
  contents:
  - '4.  Notes

    '
- title: 4.1.  Test for Existence
  contents:
  - "4.1.  Test for Existence\n   Before using the result of P(N) or P'(N) as the\
    \ owner name of an NSEC\n   RR in a DNS response, a name server should test to\
    \ see whether the\n   name exists.  If it does, either a standard non-synthesised\
    \ NSEC RR\n   should be used, or the synthesised NSEC RR should reflect the RRset\n\
    \   types that exist at the NSEC RR's owner name in the Type Bit Map\n   field\
    \ as specified by Section 4.1.2 of [RFC4034].  Implementors will\n   likely find\
    \ it simpler to use a non-synthesised NSEC RR.  For further\n   details, see Section\
    \ 2 of [RFC4470].\n"
- title: 4.2.  Case Considerations
  contents:
  - "4.2.  Case Considerations\n   Section 3.5 of [RFC1034] specifies that \"while\
    \ upper and lower case\n   letters are allowed in names, no significance is attached\
    \ to the\n   case\".  Additionally, Section 6.1 of [RFC4034] states that when\n\
    \   determining canonical DNS name order, \"uppercase US-ASCII letters are\n \
    \  treated as if they were lowercase US-ASCII letters\".  Consequently,\n   values\
    \ corresponding to US-ASCII uppercase letters must be skipped\n   when decrementing\
    \ and incrementing octets in the derivations\n   described in Section 3.\n   The\
    \ following pseudo-code is illustrative:\n   Decrement the value of an octet:\n\
    \      if (octet == '[')       // '[' is just after uppercase 'Z'\n          \
    \    octet = '@';    // '@' is just prior to uppercase 'A'\n      else\n     \
    \         octet--;\n   Increment the value of an octet:\n      if (octet == '@')\
    \       // '@' is just prior to uppercase 'A'\n              octet = '[';    //\
    \ '[' is just after uppercase 'Z'\n      else\n              octet++;\n"
- title: 4.3.  Choice of Range
  contents:
  - "4.3.  Choice of Range\n   [RFC2181] makes the clarification that \"any binary\
    \ string whatever\n   can be used as the label of any resource record\".  Consequently,\
    \ the\n   minimum sort value may be set as 0x00 and the maximum sort value as\n\
    \   0xff, and the range of possible values will be any DNS name that\n   contains\
    \ octets of any value other than those corresponding to\n   uppercase US-ASCII\
    \ letters.\n   However, if all owner names in a zone are in the letter-digit-hyphen,\n\
    \   or LDH, format specified in [RFC1034], it may be desirable to\n   restrict\
    \ the range of possible values to DNS names containing only\n   LDH values.  This\
    \ has the effect of\n   1.  making the output of tools such as `dig' and `nslookup'\
    \ less\n       subject to confusion,\n   2.  minimising the impact that NSEC RRs\
    \ containing DNS names with\n       non-LDH values (or non-printable values) might\
    \ have on faulty DNS\n       resolver implementations, and\n   3.  preventing\
    \ the possibility of results that are wildcard DNS names\n       (see Section\
    \ 4.4).\n   This may be accomplished by using a minimum sort value of 0x1f (US-\n\
    \   ASCII character `-') and a maximum sort value of 0x7a (US-ASCII\n   character\
    \ lowercase `z'), and then skipping non-LDH, non-lowercase\n   values when incrementing\
    \ or decrementing octets.\n"
- title: 4.4.  Wild Card Considerations
  contents:
  - "4.4.  Wild Card Considerations\n   Neither derivation avoids the possibility\
    \ that the result may be a\n   DNS name containing a wildcard label, i.e., a label\
    \ containing a\n   single octet with the value 0x2a (US-ASCII character `*').\
    \  With\n   additional tests, wildcard DNS names may be explicitly avoided;\n\
    \   alternatively, if the range of octet values can be restricted to\n   those\
    \ corresponding to letter-digit-hyphen, or LDH, characters (see\n   Section 4.3),\
    \ such DNS names will not occur.\n   Note that it is improbable that a result\
    \ that is a wildcard DNS name\n   will occur unintentionally; even if one does\
    \ occur either as the\n   owner name of, or in the RDATA of an NSEC RR, it is\
    \ treated as a\n   literal DNS name with no special meaning.\n"
- title: 4.5.  Possible Modifications
  contents:
  - '4.5.  Possible Modifications

    '
- title: 4.5.1.  Restriction of Effective Maximum DNS Name Length
  contents:
  - "4.5.1.  Restriction of Effective Maximum DNS Name Length\n   [RFC1034] specifies\
    \ that \"the total number of octets that represent a\n   name (i.e., the sum of\
    \ all label octets and label lengths) is limited\n   to 255\", including the null\
    \ (zero-length) label that represents the\n   root.  For the purpose of deriving\
    \ predecessors and successors during\n   NSEC RR synthesis, the maximum DNS name\
    \ length may be effectively\n   restricted to the length of the longest DNS name\
    \ in the zone.  This\n   will minimise the size of responses containing synthesised\
    \ NSEC RRs\n   but, especially in the case of the modified method, may result\
    \ in\n   some additional computational complexity.\n   Note that this modification\
    \ will have the effect of revealing\n   information about the longest name in\
    \ the zone.  Moreover, when the\n   contents of the zone changes, e.g., during\
    \ dynamic updates and zone\n   transfers, care must be taken to ensure that the\
    \ effective maximum\n   DNS name length agrees with the new contents.\n"
- title: 4.5.2.  Use of Modified Method with Zones Containing SRV RRs
  contents:
  - "4.5.2.  Use of Modified Method with Zones Containing SRV RRs\n   Normally, the\
    \ modified method cannot be used in zones that contain\n   Service Record (SRV)\
    \ RRs [RFC2782], as SRV RRs have owner names that\n   contain multiple labels.\
    \  However, the use of SRV RRs can be\n   accommodated by various techniques.\
    \  There are at least four possible\n   ways to do this:\n   1.  Use conventional\
    \ NSEC RRs for the region of the zone that\n       contains first-level labels\
    \ beginning with the underscore (`_')\n       character.  For the purposes of\
    \ generating these NSEC RRs, the\n       existence of (possibly fictional) ownernames\
    \ `9{63}' and `a'\n       could be assumed, providing a lower and upper bound\
    \ for this\n       region.  Then all queries where the QNAME does not exist but\n\
    \       contains a first-level label beginning with an underscore could\n    \
    \   be handled using the normal DNSSEC protocol.\n       This approach would make\
    \ it possible to enumerate all DNS names\n       in the zone containing a first-level\
    \ label beginning with\n       underscore, including all SRV RRs, but this may\
    \ be of less a\n       concern to the zone administrator than incurring the overhead\
    \ of\n       the absolute method or of the following variants of the modified\n\
    \       method.\n   2.  The absolute method could be used for synthesising NSEC\
    \ RRs for\n       all queries where the QNAME contains a leading underscore.\n\
    \       However, this re-introduces the susceptibility of the absolute\n     \
    \  method to denial of service activity, as an attacker could send\n       queries\
    \ for an effectively inexhaustible supply of domain names\n       beginning with\
    \ a leading underscore.\n   3.  A variant of the modified method could be used\
    \ for synthesising\n       NSEC RRs for all queries where the QNAME contains a\
    \ leading\n       underscore.  This variant would assume that all predecessors\
    \ and\n       successors to queries where the QNAME contains a leading\n     \
    \  underscore may consist of two labels rather than only one.  This\n       introduces\
    \ a little additional complexity without incurring the\n       full increase in\
    \ response size and computational complexity as\n       the absolute method.\n\
    \   4.  Finally, a variant of the modified method that assumes that all\n    \
    \   owner names in the zone consist of one or two labels could be\n       used.\
    \  However, this negates much of the reduction in response\n       size of the\
    \ modified method and may be nearly as computationally\n       complex as the\
    \ absolute method.\n"
- title: 5.  Examples
  contents:
  - "5.  Examples\n   In the following examples,\n      the owner name of the zone\
    \ apex is \"example.com.\",\n      the range of octet values is 0x00 - 0xff excluding\
    \ values\n      corresponding to uppercase US-ASCII letters, and\n      non-printable\
    \ octet values are expressed as three-digit decimal\n      numbers preceded by\
    \ a backslash (as specified in Section 5.1 of\n      [RFC1035]).\n"
- title: 5.1.  Examples of Immediate Predecessors Using Absolute Method
  contents:
  - "5.1.  Examples of Immediate Predecessors Using Absolute Method\n   Example of\
    \ a typical case:\n      P(foo.example.com.) =\n           \\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\n           \\255.\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n\
    \           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n   \
    \        \\255\\255\\255\\255\\255.\\255\\255\\255\\255\\255\\255\n          \
    \ \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\\
    255\\255\\255\\255\\255\\255.fon\\255\\255\n           \\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255.example.com.\n      or, in alternate notation:\n           \\255{49}.\\\
    255{63}.\\255{63}.fon\\255{60}.example.com.\n      where {n} represents the number\
    \ of repetitions of an octet.\n   Example where least significant (left-most)\
    \ label of DNS name\n   consists of a single octet of the minimum sort value:\n\
    \      P(\\000.foo.example.com.) = foo.example.com.\n   Example where least significant\
    \ (right-most) octet of least\n   significant (left-most) label has the minimum\
    \ sort value:\n      P(foo\\000.example.com.) =\n           \\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\\
    255\\255\\255.\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n\
    \           \\255.\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n       \
    \    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n          \
    \ \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\\
    255\\255\\255.\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\\
    255.foo.example.com.\n      or, in alternate notation:\n           \\255{45}.\\\
    255{63}.\\255{63}.\\255{63}.foo.example.com.\n   Example where DNS name contains\
    \ an octet that must be decremented by\n   skipping values corresponding to US-ASCII\
    \ uppercase letters:\n      P(fo\\[.example.com.) =\n           \\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\n           \\255.\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n\
    \           \\255\\255\\255\\255\\255.\\255\\255\\255\\255\\255\\255\n       \
    \    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n          \
    \ \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\\
    255\\255\\255\\255\\255\\255\\255.fo\\@\\255\n           \\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255.example.com.\n      or, in alternate notation:\n           \\255{49}.\\\
    255{63}.\\255{63}.fo\\@\\255{60}.example.com.\n      where {n} represents the\
    \ number of repetitions of an octet.\n   Example where DNS name is the owner name\
    \ of the zone apex, and\n   consequently wraps to the DNS name with the maximum\
    \ possible sort\n   order in the zone:\n      P(example.com.) =\n           \\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255.\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\n           \\255\\255\\255\\255\\255.\\255\\255\\255\\255\\255\\\
    255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n\
    \           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n   \
    \        \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n      \
    \     \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n         \
    \  \\255\\255\\255\\255\\255\\255\\255\\255\\255.\\255\\255\n           \\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\n           \\255.example.com.\n      or, in\
    \ alternate notation:\n           \\255{49}.\\255{63}.\\255{63}.\\255{63}.example.com.\n"
- title: 5.2.  Examples of Immediate Successors Using Absolute Method
  contents:
  - "5.2.  Examples of Immediate Successors Using Absolute Method\n   Example of typical\
    \ case:\n      S(foo.example.com.) = \\000.foo.example.com.\n   Example where\
    \ DNS name is one octet short of the maximum DNS name\n   length:\n      N = \
    \ fooooooooooooooooooooooooooooooooooooooooooooooo\n           .ooooooooooooooooooooooooooooooooooooooooooooooo\n\
    \           oooooooooooooooo.ooooooooooooooooooooooooooooooo\n           oooooooooooooooooooooooooooooooo.ooooooooooooooo\n\
    \           oooooooooooooooooooooooooooooooooooooooooooooooo.example.com.\n  \
    \    or, in alternate notation:\n           fo{47}.o{63}.o{63}.o{63}.example.com.\n\
    \      S(N) =\n           fooooooooooooooooooooooooooooooooooooooooooooooo\n \
    \          \\000.ooooooooooooooooooooooooooooooooooooooooooo\n           oooooooooooooooooooo.ooooooooooooooooooooooooooo\n\
    \           oooooooooooooooooooooooooooooooooooo.ooooooooooo\n           oooooooooooooooooooooooooooooooooooooooooooooooo\n\
    \           oooo.example.com.\n      or, in alternate notation:\n           fo{47}\\\
    000.o{63}.o{63}.o{63}.example.com.\n   Example where DNS name is the maximum DNS\
    \ name length:\n      N  = fooooooooooooooooooooooooooooooooooooooooooooooo\n\
    \           o.oooooooooooooooooooooooooooooooooooooooooooooo\n           ooooooooooooooooo.oooooooooooooooooooooooooooooo\n\
    \           ooooooooooooooooooooooooooooooooo.oooooooooooooo\n           oooooooooooooooooooooooooooooooooooooooooooooooo\n\
    \           o.example.com.\n      or, in alternate notation:\n           fo{48}.o{63}.o{63}.o{63}.example.com.\n\
    \      S(N) =\n           fooooooooooooooooooooooooooooooooooooooooooooooo\n \
    \          p.oooooooooooooooooooooooooooooooooooooooooooooo\n           ooooooooooooooooo.oooooooooooooooooooooooooooooo\n\
    \           ooooooooooooooooooooooooooooooooo.oooooooooooooo\n           oooooooooooooooooooooooooooooooooooooooooooooooo\n\
    \           o.example.com.\n      or, in alternate notation:\n           fo{47}p.o{63}.o{63}.o{63}.example.com.\n\
    \   Example where DNS name is the maximum DNS name length and the least\n   significant\
    \ (left-most) label has the maximum sort value:\n      N =  \\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\n           \\255.ooooooooooooooooooooooooooooooooooooooooooo\n\
    \           oooooooooooooooooooo.ooooooooooooooooooooooooooo\n           oooooooooooooooooooooooooooooooooooo.ooooooooooo\n\
    \           oooooooooooooooooooooooooooooooooooooooooooooooo\n           oooo.example.com.\n\
    \      or, in alternate notation:\n           \\255{49}.o{63}.o{63}.o{63}.example.com.\n\
    \      S(N) =\n           oooooooooooooooooooooooooooooooooooooooooooooooo\n \
    \          oooooooooooooop.oooooooooooooooooooooooooooooooo\n           ooooooooooooooooooooooooooooooo.oooooooooooooooo\n\
    \           ooooooooooooooooooooooooooooooooooooooooooooooo.\n           example.com.\n\
    \      or, in alternate notation:\n           o{62}p.o{63}.o{63}.example.com.\n\
    \   Example where DNS name is the maximum DNS name length and the eight\n   least\
    \ significant (right-most) octets of the least significant\n   (left-most) label\
    \ have the maximum sort value:\n      N  = foooooooooooooooooooooooooooooooooooooooo\\\
    255\n           \\255\\255\\255\\255\\255\\255\\255.ooooooooooooooooooo\n    \
    \       oooooooooooooooooooooooooooooooooooooooooooo.ooo\n           oooooooooooooooooooooooooooooooooooooooooooooooo\n\
    \           oooooooooooo.ooooooooooooooooooooooooooooooooooo\n           oooooooooooooooooooooooooooo.example.com.\n\
    \      or, in alternate notation:\n           fo{40}\\255{8}.o{63}.o{63}.o{63}.example.com.\n\
    \      S(N) =\n           fooooooooooooooooooooooooooooooooooooooop.oooooo\n \
    \          oooooooooooooooooooooooooooooooooooooooooooooooo\n           ooooooooo.oooooooooooooooooooooooooooooooooooooo\n\
    \           ooooooooooooooooooooooooo.oooooooooooooooooooooo\n           ooooooooooooooooooooooooooooooooooooooooo.example.com.\n\
    \      or, in alternate notation:\n           fo{39}p.o{63}.o{63}.o{63}.example.com.\n\
    \   Example where DNS name is the maximum DNS name length and contains an\n  \
    \ octet that must be incremented by skipping values corresponding to\n   US-ASCII\
    \ uppercase letters:\n      N  = fooooooooooooooooooooooooooooooooooooooooooooooo\n\
    \           \\@.ooooooooooooooooooooooooooooooooooooooooooooo\n           oooooooooooooooooo.ooooooooooooooooooooooooooooo\n\
    \           oooooooooooooooooooooooooooooooooo.ooooooooooooo\n           oooooooooooooooooooooooooooooooooooooooooooooooo\n\
    \           oo.example.com.\n      or, in alternate notation:\n           fo{47}\\\
    @.o{63}.o{63}.o{63}.example.com.\n      S(N) =\n           fooooooooooooooooooooooooooooooooooooooooooooooo\n\
    \           \\[.ooooooooooooooooooooooooooooooooooooooooooooo\n           oooooooooooooooooo.ooooooooooooooooooooooooooooo\n\
    \           oooooooooooooooooooooooooooooooooo.ooooooooooooo\n           oooooooooooooooooooooooooooooooooooooooooooooooo\n\
    \           oo.example.com.\n      or, in alternate notation:\n           fo{47}\\\
    [.o{63}.o{63}.o{63}.example.com.\n   Example where DNS name has the maximum possible\
    \ sort order in the\n   zone, and consequently wraps to the owner name of the\
    \ zone apex:\n      N  = \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n\
    \           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n   \
    \        \\255.\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n          \
    \ \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\\
    255\\255.\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255.\\\
    255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n\
    \           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n   \
    \        \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n      \
    \     \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n         \
    \  \\255.example.com.\n      or, in alternate notation:\n           \\255{49}.\\\
    255{63}.\\255{63}.\\255{63}.example.com.\n      S(N) = example.com.\n"
- title: 5.3.  Examples of Predecessors Using Modified Method
  contents:
  - "5.3.  Examples of Predecessors Using Modified Method\n   Example of a typical\
    \ case:\n      P'(foo.example.com.) =\n           fon\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\n           \\255.example.com.\n      or, in alternate notation:\n  \
    \         fon\\255{60}.example.com.\n   Example where DNS name contains more labels\
    \ than DNS names in the\n   zone:\n      P'(bar.foo.example.com.) = foo.example.com.\n\
    \   Example where least significant (right-most) octet of least\n   significant\
    \ (left-most) label has the minimum sort value:\n      P'(foo\\000.example.com.)\
    \ = foo.example.com.\n   Example where least significant (left-most) label has\
    \ the minimum\n   sort value:\n      P'(\\000.example.com.) = example.com.\n \
    \  Example where DNS name is the owner name of the zone apex, and\n   consequently\
    \ wraps to the DNS name with the maximum possible sort\n   order in the zone:\n\
    \      P'(example.com.) =\n           \\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n\
    \           \\255\\255\\255.example.com.\n      or, in alternate notation:\n \
    \          \\255{63}.example.com.\n"
- title: 5.4.  Examples of Successors Using Modified Method
  contents:
  - "5.4.  Examples of Successors Using Modified Method\n   Example of a typical case:\n\
    \      S'(foo.example.com.) = foo\\000.example.com.\n   Example where DNS name\
    \ contains more labels than DNS names in the\n   zone:\n      S'(bar.foo.example.com.)\
    \ = foo\\000.example.com.\n   Example where least significant (left-most) label\
    \ has the maximum\n   sort value, and consequently wraps to the owner name of\
    \ the zone\n   apex:\n      N  = \\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\n           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n\
    \           \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n   \
    \        \\255\\255\\255.example.com.\n      or, in alternate notation:\n    \
    \       \\255{63}.example.com.\n      S'(N) = example.com.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The derivation of some predecessors/successors\
    \ requires the testing\n   of more conditions than others.  Consequently, the\
    \ effectiveness of a\n   denial-of-service attack may be enhanced by sending queries\
    \ that\n   require more conditions to be tested.  The modified method involves\n\
    \   the testing of fewer conditions than the absolute method and\n   consequently\
    \ is somewhat less susceptible to this exposure.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The authors would like to thank Sam Weiler, Olaf Kolkman,\
    \ Olafur\n   Gudmundsson, and Niall O'Reilly for their review and input.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC1034]      Mockapetris, P., \"Domain names\
    \ - concepts and\n                  facilities\", STD 13, RFC 1034, November 1987.\n\
    \   [RFC1035]      Mockapetris, P., \"Domain names - implementation and\n    \
    \              specification\", STD 13, RFC 1035, November 1987.\n   [RFC2181]\
    \      Elz, R. and R. Bush, \"Clarifications to the DNS\n                  Specification\"\
    , RFC 2181, July 1997.\n   [RFC2782]      Gulbrandsen, A., Vixie, P., and L. Esibov,\
    \ \"A DNS RR\n                  for specifying the location of services (DNS SRV)\"\
    ,\n                  RFC 2782, February 2000.\n   [RFC4034]      Arends, R., Austein,\
    \ R., Larson, M., Massey, D., and\n                  S. Rose, \"Resource Records\
    \ for the DNS Security\n                  Extensions\", RFC 4034, March 2005.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC4470]      Weiler, S. and J. Ihren, \"Minimally\
    \ Covering NSEC\n                  Records and DNSSEC On-line Signing\", RFC 4470,\
    \ April\n                  2006.\n   [DNSSEC-TRANS] Arends, R., Koch, P., and\
    \ J. Schlyter, \"Evaluating\n                  DNSSEC Transition Mechanisms\"\
    , Work in Progress,\n                  February 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Geoffrey Sisson\n   Nominet\n   Sandford Gate\n   Sandy\
    \ Lane West\n   Oxford\n   OX4 6LB\n   GB\n   Phone: +44 1865 332211\n   EMail:\
    \ geoff@nominet.org.uk\n   Ben Laurie\n   Nominet\n   17 Perryn Road\n   London\n\
    \   W3 7LR\n   GB\n   Phone: +44 20 8735 0686\n   EMail: ben@algroup.co.uk\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
