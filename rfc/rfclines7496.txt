Abstract This document defines two additional policies for the Partially Reliable Stream Control Transmission Protocol (PR SCTP) extension.
These policies allow limitation of the number of retransmissions and prioritization of user messages for more efficient usage of the send buffer.
The Partially Reliable SCTP (PR SCTP) extension defined in [RFC3758] provides a generic method for senders to abandon user messages.
The decision to abandon a user message is sender side only, and the exact condition is called a "PR SCTP policy" ([RFC3758] refers to them as "PR SCTP Services").
[RFC3758] also defines one particular PR SCTP policy, called "Timed Reliability".
This allows the sender to specify a timeout for a user message after which the SCTP stack abandons the user message.
This document specifies the following two additional PR SCTP policies: Limited Retransmission Policy:
Allows limitation of the number of retransmissions.
Priority Policy:  Allows removal of lower priority messages if space for higher priority messages is needed in the send buffer.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
This section defines two new PR SCTP policies, one in each subsection.
Please note that it is REQUIRED to implement [RFC3758], if you want to implement these additional policies.
However, these additional policies are OPTIONAL when implementing [RFC3758].
Limited Retransmissions Policy Using the Limited Retransmission Policy allows the sender of a user message to specify an upper limit for the number of retransmissions for each DATA chunk of the given user messages.
The sender MUST abandon a user message if the number of retransmissions of any of the DATA chunks of the user message would exceed the provided limit.
The sender MUST perform all other actions required for processing the retransmission event, such as adapting the congestion window and the retransmission timeout.
Please note that the number of retransmissions includes both fast and timer based retransmissions.
The sender MAY limit the number of retransmissions to 0.
This will result in abandoning the message when it would get retransmitted for the first time.
The use of this setting provides a service similar to UDP, which also does not perform any retransmissions.
Please note that using this policy does not affect the handling of the thresholds 'Association.
Retrans' as specified in Section 8 of [RFC4960].
The WebRTC protocol stack (see [DATA CHAN]) is an example of where the Limited Retransmissions Policy is used.
Priority Policy Using the Priority Policy allows the sender of a user message to specify a priority.
When storing a user message in the send buffer while there is not enough available space, the SCTP stack at the sender side MAY abandon other user message(s) of the same SCTP association (with the same or a different stream) with a priority lower than the provided one.
User messages sent reliably are considered to have a priority higher than all messages sent with the Priority Policy.
The algorithm for selecting the message(s) being abandoned is implementation specific.
After lower priority messages have been abandoned, high priority messages can be transferred without the send call blocking (if used in blocking mode) or the send call failing (if used in non blocking mode).
The IP Flow Information Export (IPFIX) protocol stack (see [RFC7011]) is an example of where the Priority Policy can be used.
Template records would be sent with full reliability, while flow records related to billing, security, and other monitoring would be sent using the Priority Policy with varying priority.
The priority of security related flow records would be set higher than the priority of monitoring related flow records.
This section describes how the socket API defined in [RFC6458] is extended to support the newly defined PR SCTP policies, to provide some statistical information, and to control the negotiation of the PR SCTP extension during the SCTP association setup.
Please note that this section is informational only.
This section uses data types from [IEEE.1003 1G.1997]: uintN t means an unsigned integer of exactly N bits (e.g., uint16 t).
This is the same as in [RFC6458].
Support for Added PR SCTP Policies
When using the Priority Policy described in Section 3.2, pr policy has the value SCTP PR SCTP PRIO.
The priority is given in pr value.
The value of zero is the highest priority, and larger numbers in pr value denote lower priorities.
The following table summarizes the possible parameter settings defined in [RFC6458] and
PR SCTP TTL    Lifetime in ms
PR SCTP RTX    Number of retransmissions
Socket Option for Getting the Stream Specific PR SCTP Status
This socket option uses IPPROTO SCTP as its level and SCTP PR STREAM STATUS as its name.
It can only be used with getsockopt() but not with setsockopt().
The socket option value uses the following structure: struct sctp prstatus { sctp assoc t sprstat assoc id;
This parameter is ignored for one to one style sockets.
For one to many style sockets, this parameter indicates for which association the user wants the information.
It is an error to use SCTP {CURRENT ALL FUTURE
} ASSOC in sprstat assoc
This parameter indicates for which outgoing SCTP stream the user wants the information.
This parameter indicates for which PR SCTP policy the user wants the information.
It is an error to use SCTP PR SCTP NONE in sprstat policy.
ALL is used, the counters provided are aggregated over all supported policies.
The number of user messages that have been abandoned using the policy specified in sprstat policy on the stream specified in sprstat sid for the association specified by sprstat assoc id, before any part of the user message could be sent.
The number of user messages that have been abandoned using the policy specified in sprstat policy on the stream specified in sprstat sid for the association specified by sprstat assoc id, after a part of the user message has been sent.
There are separate counters for unsent and sent user messages because the SCTP SEND FAILED EVENT supports a similar differentiation.
Please note that an abandoned large user message requiring SCTP level fragmentation is reported in the sprstat abandoned sent counter as soon as at least one fragment of it has been sent.
Therefore, each abandoned user message is counted in either sprstat abandoned unsent or sprstat abandoned sent.
If more detailed information about abandoned user messages is required, the subscription to the SCTP SEND FAILED EVENT is recommended.
Please note that some implementations might choose not to support this option, since it increases the resources needed for an outgoing SCTP stream.
For the same reasons, some implementations might only support using SCTP PR SCTP ALL in sprstat policy.
sctp opt info() needs to be extended to support SCTP PR STREAM STATUS.
Socket Option for Getting the Association Specific PR SCTP Status
This socket option uses IPPROTO SCTP as its level and SCTP PR ASSOC STATUS as its name.
It can only be used with getsockopt(), but not with setsockopt().
This parameter is ignored for one to one style sockets.
For one to many style sockets, this parameter indicates for which association the user wants the information.
It is an error to use SCTP {CURRENT ALL FUTURE
} ASSOC in sprstat assoc
This parameter indicates for which PR SCTP policy the user wants the information.
It is an error to use SCTP PR SCTP NONE in sprstat policy.
ALL is used, the counters provided are aggregated over all supported policies.
The number of user messages that have been abandoned using the policy specified in sprstat policy for the association specified by sprstat assoc id, before any part of the user message could be sent.
The number of user messages that have been abandoned using the policy specified in sprstat policy for the association specified by sprstat assoc id, after a part of the user message has been sent.
There are separate counters for unsent and sent user messages because the SCTP SEND FAILED EVENT supports a similar differentiation.
Please note that an abandoned large user message requiring SCTP level fragmentation is reported in the sprstat abandoned sent counter as soon as at least one fragment of it has been sent.
Therefore, each abandoned user message is counted in either sprstat abandoned unsent or sprstat abandoned sent.
If more detailed information about abandoned user messages is required, the usage of the option described in Section 4.3 or the subscription to the SCTP SEND FAILED EVENT is recommended.
sctp opt info() needs to be extended to support SCTP
Socket Option for Getting and Setting the PR SCTP Support (SCTP PR SUPPORTED)
This socket option allows the enabling or disabling of the negotiation of PR SCTP support for future associations.
For existing associations, it allows one to query whether or not PR SCTP support was negotiated on a particular association.
Whether or not PR SCTP is enabled by default is implementation specific.
This socket option uses IPPROTO SCTP as its level and SCTP PR SUPPORTED as its name.
It can be used with getsockopt() and setsockopt().
This parameter is ignored for one to one style sockets.
For one to many style sockets, this parameter indicates upon which association the user is performing an action.
The special sctp assoc t SCTP FUTURE ASSOC can also be used; it is an error to use SCTP {CURRENT ALL} ASSOC in assoc
A non zero value encodes the enabling of PR SCTP, whereas a value of 0 encodes the disabling of PR SCTP.
sctp opt info() needs to be extended to support SCTP
This document does not add any security considerations to those given in [RFC4960], [RFC3758], and [RFC6458].
As indicated in the Security Considerations of [RFC3758], transport layer security in the form of TLS over SCTP (see [RFC3436]) can't be used for PR SCTP.
However, DTLS over SCTP (see [RFC6083]) could be used instead.
If DTLS over SCTP as specified in [RFC6083] is used, the Security Considerations of [RFC6083] do apply.
It should also be noted that using PR SCTP for an SCTP association doesn't allow that association to behave more aggressively than an SCTP association not using PR SCTP.
