- title: __initial_text__
  contents:
  - '   Bidirectional Flow Export Using IP Flow Information Export (IPFIX)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an efficient method for exporting\n   bidirectional\
    \ flow (Biflow) information using the IP Flow Information\n   Export (IPFIX) protocol,\
    \ representing each Biflow using a single Flow\n   Record.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  IPFIX Documents Overview . . . . . . . . . . . .\
    \ . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n   3.  Rationale and History  . . . . . . . . . . . . . . . . .\
    \ . . .  5\n   4.  Biflow Semantics . . . . . . . . . . . . . . . . . . . . .\
    \ . .  6\n   5.  Direction Assignment . . . . . . . . . . . . . . . . . . . .\
    \ .  8\n     5.1.  Direction by Initiator . . . . . . . . . . . . . . . . . .\
    \  9\n     5.2.  Direction by Perimeter . . . . . . . . . . . . . . . . . . 10\n\
    \     5.3.  Arbitrary Direction  . . . . . . . . . . . . . . . . . . . 10\n  \
    \ 6.  Record Representation  . . . . . . . . . . . . . . . . . . . . 11\n    \
    \ 6.1.  Reverse Information Element Private Enterprise Number  . . 11\n     6.2.\
    \  Enterprise-Specific Reverse Information Elements . . . . . 13\n     6.3.  biflowDirection\
    \ Information Element  . . . . . . . . . . . 13\n   7.  IANA Considerations  .\
    \ . . . . . . . . . . . . . . . . . . . . 14\n   8.  Security Considerations \
    \ . . . . . . . . . . . . . . . . . . . 15\n   9.  Acknowledgments  . . . . .\
    \ . . . . . . . . . . . . . . . . . . 15\n   10. References . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . 15\n     10.1. Normative References . . .\
    \ . . . . . . . . . . . . . . . . 15\n     10.2. Informative References . . .\
    \ . . . . . . . . . . . . . . . 15\n   Appendix A.  Examples  . . . . . . . .\
    \ . . . . . . . . . . . . . . 17\n   Appendix B.  XML Specification of biflowDirection\
    \ Information\n                Element . . . . . . . . . . . . . . . . . . . .\
    \ . . . 21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Many flow analysis tasks benefit from association of the\
    \ upstream and\n   downstream flows of a bidirectional communication, e.g., separating\n\
    \   answered and unanswered TCP requests, calculating round trip times,\n   etc.\
    \  Metering processes that are not part of an asymmetric routing\n   infrastructure,\
    \ especially those deployed at a single point through\n   which bidirectional\
    \ traffic flows, are well positioned to observe\n   bidirectional flows (Biflows).\
    \  In such topologies, the total\n   resource requirements for Biflow assembly\
    \ are often lower if the\n   Biflows are assembled at the measurement interface\
    \ as opposed to the\n   Collector.  The IPFIX Protocol requires only information\
    \ model\n   extensions to be complete as a solution for exporting Biflow data.\n\
    \   To that end, we propose a Biflow export method using a single Flow\n   Record\
    \ per Biflow in this document.  We explore the semantics of\n   bidirectional\
    \ flow data in Section 4, \"Biflow Semantics\"; examine the\n   various possibilities\
    \ for determining the direction of Biflows in\n   Section 5, \"Direction Assignment\"\
    ; then define the Biflow export\n   method in Section 6, \"Record Representation\"\
    .\n   This export method requires additional Information Elements to\n   represent\
    \ data values for the reverse direction of each Biflow, and a\n   single additional\
    \ Information Element to represent direction\n   assignment information, as described\
    \ in Sections 6.1 through 6.3.\n   The selection of this method was motivated\
    \ by an exploration of other\n   possible methods of Biflow export using IPFIX;\
    \ however, these methods\n   have important drawbacks, as discussed in Section\
    \ 3, \"Rationale and\n   History\".\n"
- title: 1.1.  IPFIX Documents Overview
  contents:
  - "1.1.  IPFIX Documents Overview\n   \"Specification of the IPFIX Protocol for\
    \ the Exchange of IP Traffic\n   Flow Information\" [RFC5101] (informally, the\
    \ IPFIX Protocol document)\n   and its associated documents define the IPFIX Protocol,\
    \ which\n   provides network engineers and administrators with access to IP\n\
    \   traffic flow information.\n   \"Architecture for IP Flow Information Export\"\
    \ [IPFIX-ARCH] (the IPFIX\n   Architecture document) defines the architecture\
    \ for the export of\n   measured IP flow information out of an IPFIX Exporting\
    \ Process to an\n   IPFIX Collecting Process, and the basic terminology used to\
    \ describe\n   the elements of this architecture, per the requirements defined\
    \ in\n   \"Requirements for IP Flow Information Export\" [RFC3917].  The IPFIX\n\
    \   Protocol document [RFC5101] then covers the details of the method for\n  \
    \ transporting IPFIX Data Records and Templates via a congestion-aware\n   transport\
    \ protocol from an IPFIX Exporting Process to an IPFIX\n   Collecting Process.\n\
    \   \"Information Model for IP Flow Information Export\" [RFC5102]\n   (informally,\
    \ the IPFIX Information Model document) describes the\n   Information Elements\
    \ used by IPFIX, including details on Information\n   Element naming, numbering,\
    \ and data type encoding.  Finally, \"IPFIX\n   Applicability\" [IPFIX-AS] describes\
    \ the various applications of the\n   IPFIX protocol and their use of information\
    \ exported via IPFIX, and\n   relates the IPFIX architecture to other measurement\
    \ architectures and\n   frameworks.\n   This document references the Protocol\
    \ and Architecture documents for\n   terminology, uses the IPFIX Protocol to define\
    \ a bidirectional flow\n   export method, and proposes additions to the information\
    \ model\n   defined in the IPFIX Information Model document.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Capitalized terms used in this document that are defined\
    \ in the\n   Terminology section of the IPFIX Protocol document [RFC5101] are\
    \ to\n   be interpreted as defined there.  The following additional terms are\n\
    \   defined in terms of the IPFIX Protocol document terminology.\n   Directional\
    \ Key Field:  A Directional Key Field is a single field in\n      a Flow Key as\
    \ defined in the IPFIX Protocol document [RFC5101]\n      that is specifically\
    \ associated with a single endpoint of the\n      Flow. sourceIPv4Address and\
    \ destinationTransportPort are example\n      Directional Key Fields.\n   Non-directional\
    \ Key Field:  A Non-directional Key Field is a single\n      field within a Flow\
    \ Key as defined in the IPFIX Protocol document\n      [RFC5101] that is not specifically\
    \ associated with either endpoint\n      of the Flow. protocolIdentifier is an\
    \ example Non-directional Key\n      Field.\n   Uniflow (Unidirectional Flow):\
    \  A Uniflow is a Flow as defined in the\n      IPFIX Protocol document [RFC5101],\
    \ restricted such that the Flow\n      is composed only of packets sent from a\
    \ single endpoint to another\n      single endpoint.\n   Biflow (Bidirectional\
    \ Flow):  A Biflow is a Flow as defined in the\n      IPFIX Protocol document\
    \ [RFC5101], composed of packets sent in\n      both directions between two endpoints.\
    \  A Biflow is composed from\n      two Uniflows such that:\n      1.  the value\
    \ of each Non-directional Key Field of each Uniflow is\n          identical to\
    \ its counterpart in the other, and\n      2.  the value of each Directional Key\
    \ Field of each Uniflow is\n          identical to its reverse direction counterpart\
    \ in the other.\n      A Biflow contains two non-key fields for each value it\
    \ represents\n      associated with a single direction or endpoint: one for the\n\
    \      forward direction and one for the reverse direction, as defined\n     \
    \ below.\n   Biflow Source:  The Biflow Source is the endpoint identified by the\n\
    \      source Directional Key Fields in the Biflow.\n   Biflow Destination:  The\
    \ Biflow Destination is the endpoint\n      identified by the destination Directional\
    \ Key Fields in the\n      Biflow.\n   forward direction (of a Biflow):  The direction\
    \ of a Biflow composed\n      of packets sent by the Biflow Source.  Values associated\
    \ with the\n      forward direction of a Biflow are represented using normal\n\
    \      Information Elements.  In other words, a Uniflow may be defined as\n  \
    \    a Biflow having only a forward direction.\n   reverse direction (of a Biflow):\
    \  The direction of a Biflow composed\n      of packets sent by the Biflow Destination.\
    \  Values associated with\n      the reverse direction of a Biflow are represented\
    \ using Reverse\n      Information Elements, as defined below.\n   Reverse Information\
    \ Element:  An Information Element defined as\n      corresponding to a normal\
    \ (or forward) Information Element, but\n      associated with the reverse direction\
    \ of a Biflow.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  Rationale and History
  contents:
  - "3.  Rationale and History\n   In selecting the Single Record Biflow export method\
    \ described in this\n   document as the recommendation for bidirectional flow\
    \ export using\n   IPFIX, we considered several other possible methods.\n   The\
    \ first and most obvious would be simply to export Biflows as two\n   Uniflows\
    \ adjacent in the record stream; a Collecting Process could\n   then reassemble\
    \ them with minimal state requirements.  However, this\n   has the drawbacks that\
    \ it is merely an informal arrangement the\n   Collecting Process cannot rely\
    \ upon, and that it is not bandwidth-\n   efficient, duplicating the export of\
    \ Flow Key data in each Uniflow\n   record.\n   We then considered the method\
    \ outlined in Reducing Redundancy in\n   IPFIX and Packet Sampling (PSAMP) Reports\
    \ [IPFIX-REDUCING] for\n   reducing this bandwidth inefficiency.  This would also\
    \ formally link\n   the two Uniflows into a single construct, by exporting the\
    \ Flow Key\n   as Common Properties then exporting each direction's information\
    \ as\n   Specific Properties.  However, it would do so at the expense of\n   additional\
    \ overhead to transmit the commonPropertiesId, and\n   additional state management\
    \ requirements at both the Collecting and\n   Exporting Processes.\n   A proposal\
    \ was made on the IPFIX mailing list to use the Multiple\n   Information Element\
    \ feature of the protocol to export forward and\n   reverse counters using identical\
    \ Information Elements in the same\n   Flow Record.  In this approach, the first\
    \ instance of a counter would\n   represent the forward direction, and the second\
    \ instance of the same\n   counter would represent the reverse.  This had the\
    \ disadvantage of\n   conflicting with the presently defined semantics for these\
    \ counters,\n   and, as such, was abandoned.\n"
- title: 4.  Biflow Semantics
  contents:
  - "4.  Biflow Semantics\n   As stated in the Terminology section above, a Biflow\
    \ is simply a Flow\n   representing packets flowing in both directions between\
    \ two endpoints\n   on a network.  There are compelling reasons to treat Biflows\
    \ as\n   single entities (as opposed to merely ad-hoc combinations of\n   Uniflows)\
    \ within IPFIX.  First, as most application-layer network\n   protocols are inherently\
    \ bidirectional, a Biflow-based data model\n   more accurately represents the\
    \ behavior of the network, and enables\n   easier application of flow data to\
    \ answering interesting questions\n   about network behavior.  Second, exporting\
    \ Biflow data can result in\n   improved export efficiency by eliminating the\
    \ duplication of Flow Key\n   data in an IPFIX message stream, and improve collection\
    \ efficiency by\n   removing the burden of Biflow matching from the Collecting\
    \ Process\n   where possible.\n   Biflows are somewhat more semantically complicated\
    \ than Uniflows.\n   When handling Uniflows, the semantics of source and destination\n\
    \   Information Elements are clearly defined by the semantics of the\n   underlying\
    \ packet header data: the source Information Elements\n   represent the source\
    \ header fields, and the destination Information\n   Elements represent the destination\
    \ header fields.  When representing\n   Biflows with single IPFIX Data Records,\
    \ the definitions of source and\n   destination must be chosen more carefully.\n\
    \   As in the Terminology section above, we define the Source of a Biflow\n  \
    \ to be that identified by the source Directional Key Field(s), and the\n   Destination\
    \ of the Biflow to be that identified by the destination\n   Directional Key Field(s).\
    \  Note that, for IANA-registered Information\n   Elements, or those defined by\
    \ the IPFIX Information Model [RFC5102],\n   Directional Key Fields associated\
    \ with the Biflow Source are\n   represented by Information Elements whose names\
    \ begin with \"source\",\n   and Directional Key Fields associated with the Biflow\
    \ Destination are\n   represented by Information Elements whose names begin with\n\
    \   \"destination\"; it is recommended that enterprise-specific Information\n\
    \   Elements follow these conventions, as well.\n   Methods for assignment of\
    \ Source and Destination by the Metering and\n   Exporting Processes are described\
    \ in the following section.\n   As the Source and Destination of a Biflow are\
    \ defined in terms of its\n   Directional Keys, Biflow values are also split info\
    \ forward and\n   reverse directions.  As in the Terminology section above, the\
    \ forward\n   direction of a Biflow is composed of packets sent by the Biflow\n\
    \   Source, and the reverse direction of a Biflow is composed of packets\n   sent\
    \ by the Destination.  In other words, the two directions of a\n   Biflow may\
    \ be roughly thought of as the two Uniflows that were\n   matched to compose the\
    \ Biflow.  A Biflow record, then, contains each\n   Flow Key record once, and\
    \ both forward Information Elements and\n   Reverse Information Elements for each\
    \ non-key field.  See Figure 1\n   for an illustration of the composition of Biflows\
    \ from Uniflows.\n              Uniflow                             Uniflow\n\
    \ +-------+-------+-----------------+ +-------+-------+-----------------+\n |\
    \ src A | dst B | counters/values | | src B | dst A | counters/values |\n +-------+-------+-----------------+\
    \ +-------+-------+-----------------+\n        |       |          |          \
    \                         |\n        V       V          V                    \
    \               V\n       +-------+-------+---------------------+---------------------+\n\
    \       | src A | dst B | fwd counters/values | rev counters/values |\n      \
    \ +-------+-------+---------------------+---------------------+\n            \
    \                     Biflow\n              Figure 1: Bidirectional Flow Conceptual\
    \ Diagram\n   The reverse direction values are represented by Reverse Information\n\
    \   Elements.  The representation of these Reverse Information Elements\n   within\
    \ Templates is detailed in Section 5.  A Flow Record may be\n   considered to\
    \ be a Biflow record by the Collecting Process if it\n   contains at least one\
    \ Reverse Information Element AND at least one\n   Directional Key Field.  Flow\
    \ Records containing Reverse Information\n   Elements but no Directional Key Fields\
    \ are illegal, MUST NOT be sent\n   by the Exporting Process, and SHOULD be dropped\
    \ by the Collecting\n   Process.  The Collecting Process SHOULD log the receipt\
    \ of such\n   illegal Flow Records.\n   When exporting Uniflows, Exporting Processes\
    \ SHOULD use a Template\n   containing no Reverse Information Elements.  Note\
    \ that a Template\n   whose only Reverse Information Elements are counters MAY\
    \ be used to\n   export Uniflows, as counters with values of 0 are semantically\n\
    \   equivalent to no reverse direction.  However, this approach is not\n   possible\
    \ for Reverse Information Elements whose zero values have a\n   distinct meaning\
    \ (e.g., tcpControlBits).\n   Note that a Biflow traversing a middlebox [RFC3234]\
    \ may show\n   different flow properties on each side of the middlebox due to\n\
    \   changes to the packet header or payload performed by the middlebox\n   itself.\
    \  Therefore, it MUST be clear at a Collecting Process whether\n   packets were\
    \ observed and metered before or after modification.  The\n   Observation Process\
    \ SHOULD be located on one side of a middlebox, and\n   the Exporting Process\
    \ SHOULD communicate to the Collecting Process\n   both the incoming value of\
    \ the flow property changed within the\n   middlebox and the changed value on\
    \ the \"other side\".  The IPFIX\n   Information Model [RFC5102] provides Information\
    \ Elements with prefix\n   \"post\" for this purpose.  The location of the Observation\
    \ Point(s)\n   with respect to the middlebox can be communicated using Options\
    \ with\n   Observation Point as Scope and elements such as lineCardID or\n   samplerID.\n\
    \   For further information on the effect of middleboxes within the IPFIX\n  \
    \ architecture, refer to Section 7 of the IPFIX Implementation\n   Guidelines\
    \ [IPFIX-IMPLEMENTATION].\n   By the definition of Observation Domain in Section\
    \ 2 of the IPFIX\n   Protocol document [RFC5101], Biflows may be composed only\
    \ of packets\n   observed within the same Observation Domain.  This implies that\n\
    \   Metering Processes that build Biflows out of Uniflows must ensure\n   that\
    \ the two Uniflows were observed within the same Observation\n   Domain.\n"
- title: 5.  Direction Assignment
  contents:
  - "5.  Direction Assignment\n   Due to the variety of flow measurement applications\
    \ and restrictions\n   on Metering Process deployment, one single method of assigning\
    \ the\n   directions of a Biflow will not apply in all cases.  This section\n\
    \   describes three methods of direction assignment, and recommends them\n   based\
    \ upon Metering Process position and measurement application\n   requirements.\
    \  In each of the figures in this section, the \"MP\" box\n   represents the Metering\
    \ Process.\n   As the method selection is dependent on Metering Process position,\
    \ it\n   is sufficient to configure the direction assignment method at the\n \
    \  Collecting and/or the Exporting Process out-of-band.  For example, a\n   Collecting\
    \ Process might be configured that a specific Exporting\n   Process identified\
    \ by exporterIPv4Address is assigning direction by\n   initiator; or both a Collecting\
    \ Process and an Exporting Process\n   could be simultaneously configured with\
    \ a specific direction\n   assignment perimeter.  However, for Exporting Processes\
    \ that use\n   multiple direction selection methods, or for Collecting Processes\n\
    \   accepting data from Exporting Processes using a variety of methods, a\n  \
    \ biflowDirection Information Element is provided for optional\n   representation\
    \ of direction assignment information.\n"
- title: 5.1.  Direction by Initiator
  contents:
  - "5.1.  Direction by Initiator\n   If the measurement application requires the\
    \ determination of the\n   initiator and responder of a given communication, the\
    \ Metering\n   Process SHOULD define the Biflow Source to be the initiator of\
    \ the\n   Biflow, where possible.  This can be roughly approximated by a\n   Metering\
    \ Process observing packets in both directions simply assuming\n   that the first\
    \ packet seen in a given Biflow is the packet initiating\n   the Biflow.  A Metering\
    \ Process may improve upon this method by using\n   knowledge of the transport\
    \ or application protocols (e.g., TCP flags,\n   DNS question/answer counts) to\
    \ better approximate the flow-initiating\n   packet.\n   Note that direction assignment\
    \ by initiator is most easily done by a\n   single Metering Process positioned\
    \ on a local link layer, as in\n   Figure 2, or a single Metering Process observing\
    \ bidirectional packet\n   flows at a symmetric perimeter routing point, as in\
    \ Figure 3.\n   Note also that many Metering Processes have an \"active\" timeout,\
    \ such\n   that any flow with a duration longer than the active timeout is\n \
    \  expired and any further packets belonging to that flow are accounted\n   for\
    \ as part of a new flow.  This mechanism may cause issues with the\n   assumption\
    \ that a first packet seen is from the flow initiator, if\n   the \"first\" packet\
    \ is a middle packet in a long-duration flow.\n   +-------+   +-------+\n   |\
    \ node  |   | node  |\n   +---+---+   +---+---+\n       |           |       +---------+\n\
    \   <===+=====+=====+======>+         +<===> Internet\n             |        \
    \     | router  |\n         +---+---+         +---------+\n         |   MP  |\n\
    \         +---+---+\n              Figure 2: Local Link Metering Process Position\n\
    \   +-------+   +-------+\n   | node  |   | node  |\n   +---+---+   +---+---+\n\
    \       |           |       +---------+\n   <===+===========+======>+        \
    \ +<===> Internet\n                           | router  |\n                  \
    \         |    +----+--+\n                           +----+  MP   |\n        \
    \                        +-------+\n        Figure 3: Symmetric Routing Point\
    \ Metering Process Position\n"
- title: 5.2.  Direction by Perimeter
  contents:
  - "5.2.  Direction by Perimeter\n   If the measurement application is deployed at\
    \ a network perimeter, as\n   illustrated in Figure 4, such that there is a stable\
    \ set of addresses\n   that can be defined as \"inside\" that perimeter, and there\
    \ is no\n   measurement application requirement to determine the initiator and\n\
    \   responder of a given communication, then the Metering Process SHOULD\n   assign\
    \ the Biflow Source to be the endpoint outside the perimeter.\n   No facility\
    \ is provided for exporting the address set defining the\n   interior of a perimeter;\
    \ this set may be deduced by the Collecting\n   Process observing the set of Biflow\
    \ Source and Biflow Destination\n   addresses, or configured out-of-band.\n  \
    \               +---------+               +---------+\n            ====>+ access\
    \  +====>     ====>+ access  +====>\n   Internet      | router  |   Local Net\
    \   | router  |      Internet\n   (link A) <====+    A    +<====     <====+  \
    \  B    +<==== (link B)\n                 +----+----+               +---------+\n\
    \                      |\n                  +---+---+\n                  |  MP\
    \   |\n                  +-------+\n               Figure 4: Perimeter Metering\
    \ Process Position\n"
- title: 5.3.  Arbitrary Direction
  contents:
  - "5.3.  Arbitrary Direction\n   If the measurement application is deployed in a\
    \ network core, such\n   that there is no stable set of addresses defining a perimeter\
    \ (e.g.,\n   due to BGP updates), as in Figure 5, and no requirement or ability\
    \ to\n   determine the initiator or responder of a given communication, then\n\
    \   the Metering Process MAY assign the Biflow Source and Biflow\n   Destination\
    \ endpoints arbitrarily.\n   In this case, the Metering Process SHOULD be consistent\
    \ in its choice\n   of direction.  Once assigned, direction SHOULD be maintained\
    \ for the\n   lifetime of the Biflow, even in the case of active timeout of a\n\
    \   long-lived Biflow.\n            |\n            V\n       +----+----+     \
    \     +---------+\n   <===+ core    |          | core    +===>\n       | router\
    \  +<========>+ router  |\n   ===>+         |          |         +<===\n     \
    \  +----+----+          +----+----+\n            |                    |\n    \
    \    +---+---+                V\n        |  MP   |\n        +-------+\n      \
    \       Figure 5: Transit/Core Metering Process Position\n"
- title: 6.  Record Representation
  contents:
  - "6.  Record Representation\n   As noted above, Biflows are exported using a single\
    \ Flow Record, each\n   of which contains the Flow Key fields once, and both forward\n\
    \   Information Elements and Reverse Information Elements for each non-\n   key\
    \ field.  The IPFIX Information Model is extended to provide a\n   Reverse Information\
    \ Element counterpart to each presently defined\n   forward Information Element,\
    \ as required by any Information Element\n   that may be a non-key field in a\
    \ Biflow.\n"
- title: 6.1.  Reverse Information Element Private Enterprise Number
  contents:
  - "6.1.  Reverse Information Element Private Enterprise Number\n   Reverse Information\
    \ Elements are specified as a separate \"dimension\"\n   in the Information Element\
    \ space, assigning Private Enterprise Number\n   (PEN) 29305 to this document,\
    \ and defining that PEN to signify \"IPFIX\n   Reverse Information Element\" (the\
    \ Reverse PEN).  This Reverse PEN\n   serves as a \"reverse direction flag\" in\
    \ the Template; each\n   Information Element number within this PEN space is assigned\
    \ to the\n   reverse counterpart of the corresponding IANA-assigned public\n \
    \  Information Element number.  In other words, to generate a Reverse\n   Information\
    \ Element in a Template corresponding to a given forward\n   Information Element,\
    \ simply set the enterprise bit and define the\n   Information Element within\
    \ the Reverse PEN space, as in Figure 6\n   below.\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0| flowStartSeconds        150 |       Field Length =  4       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                  forward           |\n                                    |\n\
    \                  reverse           V\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |1| (rev) flowStartSeconds  150 |       Field Length =  4       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |   Reverse PEN                                      29305      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Figure 6: Example Mapping between Forward and Reverse IEs\n   As the\
    \ Reverse Information Element dimension is treated explicitly as\n   such, new\
    \ Information Elements can be added freely to the IANA-\n   managed space without\
    \ concern for whether a Reverse Information\n   Element should also be added.\
    \  Aside from the initial allocation of a\n   Private Enterprise Number for this\
    \ purpose, there is no additional\n   maintenance overhead for supporting Reverse\
    \ Information Elements in\n   the IPFIX Information Model.\n   Note that certain\
    \ Information Elements in the IPFIX Information Model\n   [RFC5102] are not reversible;\
    \ that is, they are semantically\n   meaningless as Reverse Information Elements.\
    \  An Exporting Process\n   MUST NOT export a Template containing the reverse\
    \ counterpart of a\n   non-reversible Information Element.  A Collecting Process\
    \ receiving\n   the reverse counterpart of a non-reversible Information Element\
    \ MAY\n   discard that Information Element from the Flow Record.  Non-\n   reversible\
    \ Information Elements represent properties of the Biflow\n   record as a whole,\
    \ or are intended for internal the use of the IPFIX\n   Protocol itself.  Therefore,\
    \ by definition, they cannot be associated\n   with a single direction or endpoint\
    \ of the Flow.\n   The following specific Information Elements are not reversible:\n\
    \   1.  Identifiers defined in Section 5.1 of [RFC5102] that cannot be\n     \
    \  associated with a single direction of Uniflow collection: flowId\n       (5.1.7),\
    \ templateId (5.1.8), observationDomainId (5.1.9), and\n       commonPropertiesId\
    \ (5.1.11).\n   2.  Process configuration elements defined in Section 5.2 of\n\
    \       [RFC5102].\n   3.  Process statistics elements defined in Section 5.3\
    \ of [RFC5102].\n   4.  paddingOctets defined in Section 5.12.1 of [RFC5102].\n\
    \   5.  biflowDirection (defined in Section 6.3 of this document).\n   Any future\
    \ addition to the Information Element Registry by IANA that\n   meets the criteria\
    \ defined above SHOULD also be considered to be non-\n   reversible by the Collecting\
    \ Process.\n   Note that Information Elements commonly used as Flow Keys (e.g.,\n\
    \   header fields defined in Sections 5.4 and 5.5 of the Information\n   Model)\
    \ are reversible, as they may be used as value fields in certain\n   contexts,\
    \ as when associating ICMP error messages with the flows that\n   caused them.\n"
- title: 6.2.  Enterprise-Specific Reverse Information Elements
  contents:
  - "6.2.  Enterprise-Specific Reverse Information Elements\n   Note that the Reverse\
    \ PEN defined above is only available for\n   allocating reverse counterparts\
    \ of IANA-registered IPFIX Information\n   Elements.  No facility is provided\
    \ for allocating reverse\n   counterparts of enterprise-specific Information Elements.\n\
    \   The allocation of enterprise-specific Information Elements for IPFIX\n   is\
    \ left to the discretion of the organization allocating them.  Note\n   that,\
    \ as enterprise-specific Information Elements are designed for\n   the internal\
    \ use of private enterprises, the lack of any guidance or\n   standard on Information\
    \ Element allocation policies poses no\n   interoperability issues.  However,\
    \ if a private enterprise's own\n   Information Element registry anticipates the\
    \ allocation of reversible\n   Information Elements, and the use of this specification\
    \ for the\n   export of Biflow data, that registry MAY reserve one of the fifteen\n\
    \   available bits in the Information Element ID to signify the reverse\n   direction.\
    \  For example, if the most significant bit were selected,\n   this would reserve\
    \ Information Element IDs 0x4000 to 0x7FFF for the\n   reverse direction of Information\
    \ Element IDs 0x0000 to 0x3FFF.\n"
- title: 6.3.  biflowDirection Information Element
  contents:
  - "6.3.  biflowDirection Information Element\n   Description:   A description of\
    \ the direction assignment method used\n      to assign the Biflow Source and\
    \ Destination.  This Information\n      Element MAY be present in a Flow Record,\
    \ or applied to all flows\n      exported from an Exporting Process or Observation\
    \ Domain using\n      IPFIX Options.  If this Information Element is not present\
    \ in a\n      Flow Record or associated with a Biflow via scope, it is assumed\n\
    \      that the configuration of the direction assignment method is done\n   \
    \   out-of-band.  Note that when using IPFIX Options to apply this\n      Information\
    \ Element to all flows within an Observation Domain or\n      from an Exporting\
    \ Process, the Option SHOULD be sent reliably.  If\n      reliable transport is\
    \ not available (i.e., when using UDP), this\n      Information Element SHOULD\
    \ appear in each Flow Record.  This field\n      may take the following values:\n\
    \   +-------+------------------+----------------------------------------+\n  \
    \ | Value | Name             | Description                            |\n   +-------+------------------+----------------------------------------+\n\
    \   | 0x00  | arbitrary        | Direction was assigned arbitrarily.    |\n  \
    \ | 0x01  | initiator        | The Biflow Source is the flow          |\n   |\
    \       |                  | initiator, as determined by the        |\n   |  \
    \     |                  | Metering Process' best effort to       |\n   |    \
    \   |                  | detect the initiator.                  |\n   | 0x02 \
    \ | reverseInitiator | The Biflow Destination is the flow     |\n   |       |\
    \                  | initiator, as determined by the        |\n   |       |  \
    \                | Metering Process' best effort to       |\n   |       |    \
    \              | detect the initiator.  This value is   |\n   |       |      \
    \            | provided for the convenience of        |\n   |       |        \
    \          | Exporting Processes to revise an       |\n   |       |          \
    \        | initiator estimate without re-encoding |\n   |       |            \
    \      | the Biflow Record.                     |\n   | 0x03  | perimeter    \
    \    | The Biflow Source is the endpoint      |\n   |       |                \
    \  | outside of a defined perimeter.  The   |\n   |       |                  |\
    \ perimeter's definition is implicit in  |\n   |       |                  | the\
    \ set of Biflow Source and Biflow    |\n   |       |                  | Destination\
    \ addresses exported in the  |\n   |       |                  | Biflow Records.\
    \                        |\n   +-------+------------------+----------------------------------------+\n\
    \   Abstract Data Type:   unsigned8\n   Data Type Semantics:   identifier\n  \
    \ ElementId:   239\n   Status:   current\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document specifies the creation of a new dimension\
    \ in the\n   Information Element space defined by the IPFIX Information Model\n\
    \   [RFC5102].  This new dimension is defined by the allocation of a new\n   Private\
    \ Enterprise Number (PEN).  The Internet Assigned Numbers\n   Authority (IANA)\
    \ has assigned Private Enterprise Number 29305 to this\n   document as the \"\
    IPFIX Reverse Information Element Private\n   Enterprise\", with this document's\
    \ authors as point of contact.\n   This document specifies the creation of a new\
    \ IPFIX Information\n   Element, biflowDirection, as defined in Section 6.3. \
    \ IANA has\n   assigned Information Element number 239 in the IPFIX Information\n\
    \   Element registry for the biflowDirection Information Element.  The\n   values\
    \ defined for this Information Element are static, and as such\n   do not need\
    \ to be maintained by IANA in a sub-registry.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The same security considerations as for the IPFIX\
    \ Protocol [RFC5101]\n   apply.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   We would like to thank Lutz Mark, Juergen Quittek, Andrew\
    \ Johnson,\n   Paul Aitken, Benoit Claise, and Carsten Schmoll for their\n   contributions\
    \ and comments.  Special thanks to Michelle Cotton for\n   her assistance in navigating\
    \ the IANA process for Enterprise Number\n   assignment, and for the IANA pre-review\
    \ of the document.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC5101]               Claise, B., Ed., \"Specification\
    \ of the IP\n                           Flow Information Export (IPFIX) Protocol\
    \ for\n                           the Exchange of IP Traffic Flow Information\"\
    ,\n                           RFC 5101, January 2008.\n   [RFC5102]          \
    \     Quittek, J., Bryant, S., Claise, B., Aitken,\n                         \
    \  P., and J. Meyer, \"Information Model for IP\n                           Flow\
    \ Information Export\", RFC 5102, January\n                           2008.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC2119]               Bradner, S., \"Key\
    \ words for use in RFCs to\n                           Indicate Requirement Levels\"\
    , BCP 14,\n                           RFC 2119, March 1997.\n   [RFC3234]    \
    \           Carpenter, B. and S. Brim, \"Middleboxes:\n                      \
    \     Taxonomy and Issues\", RFC 3234,\n                           February 2002.\n\
    \   [RFC3917]               Quittek, J., Zseby, T., Claise, B., and S.\n     \
    \                      Zander, \"Requirements for IP Flow Information\n      \
    \                     Export (IPFIX)\", RFC 3917, October 2004.\n   [IPFIX-ARCH]\
    \            Sadasivan, G., Brownlee, N., Claise, B., and\n                  \
    \         J. Quittek, \"Architecture for IP Flow\n                           Information\
    \ Export\", Work in Progress,\n                           September 2006.\n  \
    \ [IPFIX-AS]              Zseby, T., Boschi, E., Brownlee, N., and B.\n      \
    \                     Claise, \"IPFIX Applicability\", Work\n                \
    \           in Progress, July 2007.\n   [IPFIX-IMPLEMENTATION]  Boschi, E., Mark,\
    \ L., Quittek, j.,\n                           Stiemerling, M., and P. Aitken,\
    \ \"IPFIX\n                           Implementation Guidelines\", Work in Progress,\n\
    \                           September 2007.\n   [IPFIX-REDUCING]        Boschi,\
    \ E., Mark, L., and B. Claise,\n                           \"Reducing Redundancy\
    \ in IP Flow Information\n                           Export (IPFIX) and Packet\
    \  Sampling (PSAMP)\n                           Reports\", Work in Progress, May\
    \ 2007.\n"
- title: Appendix A.  Examples
  contents:
  - "Appendix A.  Examples\n   The following example describes a Biflow record as\
    \ specified in\n   Section 6, above.  The Reverse PEN is assigned for the purpose\
    \ of\n   differentiating forward from Reverse Information Elements.\n   The information\
    \ exported in this case is:\n   o  The start time of the flow: flowStartSeconds\
    \ in the IPFIX\n      Information Model [RFC5102], with a length of 4 octets.\n\
    \   o  The reverse start time of the flow: flowStartSeconds in the IPFIX\n   \
    \   Information Model [RFC5102], with a length of 4 octets, and the\n      enterprise\
    \ bit set to 1.  The following PEN is the Reverse PEN.\n   o  The IPv4 source\
    \ IP address: sourceIPv4Address in the IPFIX\n      Information Model [RFC5102],\
    \ with a length of 4 octets.\n   o  The IPv4 destination IP address: destinationIPv4Address\
    \ in the\n      IPFIX Information Model [RFC5102], with a length of 4 octets.\n\
    \   o  The source port: sourceTransportPort in the IPFIX Information\n      Model\
    \ [RFC5102], with a length of 2 octets.\n   o  The destination port: destinationTransportPort\
    \ in the IPFIX\n      Information Model [RFC5102], with a length of 2 octets.\n\
    \   o  The protocol identifier: protocolIdentifier in the IPFIX\n      Information\
    \ Model [RFC5102], with a length of 1 octet.\n   o  The number of octets of the\
    \ Flow: octetTotalCount in the IPFIX\n      Information Model [RFC5102], with\
    \ a length of 4 octets.\n   o  The reverse number of octets of the Flow: octetTotalCount\
    \ in the\n      IPFIX Information Model [RFC5102], with a length of 4 octets,\
    \ and\n      the enterprise bit set to 1.  The following PEN is the Reverse\n\
    \      PEN.\n   o  The number of packets of the Flow: packetTotalCount in the\
    \ IPFIX\n      Information Model [RFC5102], with a length of 4 octets.\n   o \
    \ The reverse number of packets of the Flow: packetTotalCount in the\n      IPFIX\
    \ Information Model [RFC5102], with a length of 4 octets, and\n      the enterprise\
    \ bit set to 1.  The following PEN is the Reverse\n      PEN.\n   and the resulting\
    \ Template Set would look like the diagram below:\n                         1\
    \                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |          Set ID = 2           |          Length =  64         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |      Template ID >= 256       |        Field Count = 11       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0| flowStartSeconds        150 |       Field Length =  4       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |1| flowStartSeconds        150 |       Field Length =  4       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |   Reverse PEN                                      29305      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0| sourceIPv4Address         8 |       Field Length =  4       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0| destinationIPv4Address   12 |       Field Length =  4       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0| sourceTransportPort       7 |       Field Length =  2       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0| destinationTransportPort 11 |       Field Length =  2       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0| protocolIdentifier        4 |       Field Length =  1       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0| octetTotalCount          85 |       Field Length =  4       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |1| octetTotalCount          85 |       Field Length =  4       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |   Reverse PEN                                     29305       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0| packetTotalCount         86 |       Field Length =  4       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |1| packetTotalCount         86 |       Field Length =  4       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |   Reverse PEN                                     29305       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                Figure 7: Single Record Biflow Template Set\n   The following\
    \ example Data Set represents a typical HTTP transaction.\n   Its format is defined\
    \ by the example Template, above.\n                         1                \
    \   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |       Set ID >= 256           |          Length =  41         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                     2006-02-01  17:00:00                      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                     2006-02-01  17:00:01                      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                           192.0.2.2                           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                           192.0.2.3                           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |          32770                |               80              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |       6       |                 18000                     . . .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    . . .           |                128000                     . . .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    . . .           |                  65                       . . .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    . . .           |                 110                       . . .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    . . .           |\n    +-+-+-+-+-+-+-+-+\n                  Figure 8: Single\
    \ Record Biflow Data Set\n   The following example demonstrates the use of the\
    \ biflowDirection\n   Information Element, as specified in Section 6.2, using\
    \ the IPFIX\n   Options mechanism to specify that perimeter direction selection\
    \ is in\n   effect for a given Observation Domain.\n   The information exported\
    \ in this case is:\n   o  The Observation Domain: observationDomainId in the IPFIX\n\
    \      Information Model [RFC5102], with a length of 4 octets.\n   o  The direction\
    \ assignment method: biflowDirection as defined in\n      Section 6.2, above,\
    \ with a length of 1 octet.\n   and the resulting Options Template Set would look\
    \ like the diagram\n   below:\n                         1                   2\
    \                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |          Set ID = 3           |          Length =  18         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |      Template ID >= 256       |        Field Count = 2        |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |       Scope Count = 1         |0| observationDomainId     149 |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |       Field Length = 4        |0| biflowDirection         239 |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |       Field Length = 1        |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Figure 9: Biflow Direction Options Template Set\n   The following\
    \ example Data Set would specify that perimeter direction\n   selection is in\
    \ effect for the Observation Domain with ID 33.  Its\n   format is defined by\
    \ the example Options Template, above.  Note that\n   this example data set would\
    \ be sent reliably, as specified in the\n   description of the biflowDirection\
    \ Information Element.\n                         1                   2       \
    \            3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |       Set ID >= 256           |          Length =  9          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                              33                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |       3       |\n    +-+-+-+-+-+-+-+-+\n               Figure 10: Biflow\
    \ Direction Options Data Set\n"
- title: Appendix B.  XML Specification of biflowDirection Information Element
  contents:
  - "Appendix B.  XML Specification of biflowDirection Information Element\n   This\
    \ appendix contains a machine-readable description of the\n   biflowDirection\
    \ information element defined in this document, coded\n   in XML.  Note that this\
    \ appendix is of informational nature, while\n   the text in Section 6.3 is normative.\n\
    \   The format in which this specification is given is described by the\n   XML\
    \ Schema in Appendix B of the IPFIX Information Model [RFC5102].\n   <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n   <fieldDefinitions xmlns=\"urn:ietf:params:xml:ns:ipfix-info\"\
    \n                xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  \
    \              xsi:schemaLocation=\"urn:ietf:params:xml:ns:ipfix-info\n      \
    \          ipfix-info.xsd\">\n     <field name=\"biflowDirection\" dataType=\"\
    unsigned8\"\n            dataTypeSemantics=\"identifier\" group=\"misc\"\n   \
    \         elementId=\"239\" applicability=\"all\" status=\"current\">\n      \
    \ <description>\n         <paragraph>\n          A description of the direction\
    \ assignment method used to\n          assign the Biflow Source and Destination.\
    \  This\n          Information Element MAY be present in a Flow Data Record, or\n\
    \          applied to all flows exported from an Exporting Process or\n      \
    \    Observation Domain using IPFIX Options.  If this Information\n          Element\
    \ is not present in a Flow Record or associated with a\n          Biflow via scope,\
    \ it is assumed that the configuration of\n          the direction assignment\
    \ method is done out-of-band.  Note\n          that when using IPFIX Options to\
    \ apply this Information\n          Element to all flows within an Observation\
    \ Domain or from an\n          Exporting Process, the Option SHOULD be sent reliably.\
    \  If\n          reliable transport is not available (i.e., when using UDP),\n\
    \          this Information Element SHOULD appear in each Flow\n          Record.\
    \  This field may take the following values:\n              </paragraph>\n   \
    \           <artwork>\n   +-------+------------------+----------------------------------------+\n\
    \   | Value | Name             | Description                            |\n  \
    \ +-------+------------------+----------------------------------------+\n   |\
    \ 0x00  | arbitrary        | Direction was assigned arbitrarily.    |\n   | 0x01\
    \  | initiator        | The Biflow Source is the flow          |\n   |       |\
    \                  | initiator, as determined by the        |\n   |       |  \
    \                | Metering Process' best effort to       |\n   |       |    \
    \              | detect the initiator.                  |\n   | 0x02  | reverseInitiator\
    \ | The Biflow Destination is the flow     |\n   |       |                  |\
    \ initiator, as determined by the        |\n   |       |                  | Metering\
    \ Process' best effort to       |\n   |       |                  | detect the\
    \ initiator.  This value is   |\n   |       |                  | provided for\
    \ the convenience of        |\n   |       |                  | Exporting Processes\
    \ to revise an       |\n   |       |                  | initiator estimate without\
    \ re-encoding |\n   |       |                  | the Biflow Record.          \
    \           |\n   | 0x03  | perimeter        | The Biflow Source is the endpoint\
    \      |\n   |       |                  | outside of a defined perimeter.  The\
    \   |\n   |       |                  | perimeter's definition is implicit in \
    \ |\n   |       |                  | the set of Biflow Source and Biflow    |\n\
    \   |       |                  | Destination addresses exported in the  |\n  \
    \ |       |                  | Biflow Records.                        |\n   +-------+------------------+----------------------------------------+\n\
    \              </artwork>\n       </description>\n     </field>\n   </fieldDefinitions>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Brian H. Trammell\n   CERT Network Situational Awareness\n\
    \   Software Engineering Institute\n   4500 Fifth Avenue\n   Pittsburgh, PA  15213\n\
    \   United States\n   Phone: +1 412 268 9748\n   EMail: bht@cert.org\n   Elisa\
    \ Boschi\n   Hitachi Europe\n   c/o ETH Zurich\n   Gloriastrasse 35\n   8092 Zurich\n\
    \   Switzerland\n   Phone: +41 44 6327057\n   EMail: elisa.boschi@hitachi-eu.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
