- title: __initial_text__
  contents:
  - '          The QCP File Format and Media Types for Speech Data

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   RFC 2658 specifies the streaming format for 3GPP2 13K vocoder (High\n\
    \   Rate Speech Service Option 17 for Wideband Spread Spectrum\n   Communications\
    \ Systems, also known as QCELP 13K vocoder) data, but\n   does not specify a storage\
    \ format.  Many implementations have been\n   using the \"QCP\" file format (named\
    \ for its file extension) for\n   exchanging QCELP 13K data as well as Enhanced\
    \ Variable Rate Coder\n   (EVRC) and Selectable Mode Vocoders (SMV) data.  (For\
    \ example,\n   Eudora(r), QuickTime(r), and cmda2000(r) handsets).\n   This document\
    \ specifies the QCP file format and updates the\n   audio/qcelp media registration\
    \ to specify this format for storage,\n   and registers the audio/evrc-qcp and\
    \ audio/smv-qcp media types for\n   EVRC and SMV (respectively) data stored in\
    \ this format.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Conventions Used in this Document. . . . . . . . . .\
    \ . . . . .  2\n   3.  QCP File Format. . . . . . . . . . . . . . . . . . . .\
    \ . . . .  2\n   4.  IANA Considerations. . . . . . . . . . . . . . . . . . .\
    \ . . . 10\n       4.1.  Update of Media Type Audio/qcelp . . . . . . . . . .\
    \ . . 10\n       4.2.  Update of Media Type Audio/vnd.qcelp . . . . . . . . .\
    \ . 10\n       4.3.  Registration of Audio/EVRC-QCP . . . . . . . . . . . . .\
    \ 11\n       4.4.  Registration of Audio/SMV-QCP. . . . . . . . . . . . . . 12\n\
    \   5.  Security Considerations. . . . . . . . . . . . . . . . . . . . 13\n  \
    \ 6.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 13\n   7.\
    \  References . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n       7.1.\
    \  Normative References . . . . . . . . . . . . . . . . . . 13\n       7.2.  Informative\
    \ References . . . . . . . . . . . . . . . . . 13\n   8.  Intellectual Property\
    \ Statement. . . . . . . . . . . . . . . . 14\n   9.  Editors' Addresses . . .\
    \ . . . . . . . . . . . . . . . . . . . 14\n   10. Full Copyright Statement .\
    \ . . . . . . . . . . . . . . . . . . 15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies the QCP format for storage of [QCELP]\
    \ 13K,\n   [EVRC], and [SMV] vocoder frames in files which may reside on network\n\
    \   elements (e.g., media servers, Multimedia Messaging System (MMS)\n   centers,\
    \ etc.) and third-generation cellular (3G) handsets, or be\n   transmitted via\
    \ email or other mechanisms.\n   Vocoder frames read from a QCP file may be streamed\
    \ using protocols\n   and formats outside the scope of this document, delivered\
    \ to an\n   [EVRC], [SMV], or [QCELP] 13K decoder, or otherwise processed.\n \
    \  The QCP format supports [QCELP] 13K as well as [EVRC] and [SMV] data.\n   Note\
    \ that this format is different from the EVRC and SMV storage\n   format specified\
    \ in [EVRC-SMV].\n"
- title: 2.  Conventions Used in this Document
  contents:
  - "2.  Conventions Used in this Document\n   The key words \"REQUIRED\", \"MUST\"\
    , \"MUST NOT\", \"SHOULD\", \"SHOULD NOT\",\n   and \"MAY\" in this document are\
    \ to be interpreted as described in BCP\n   14, RFC 2119 [KEYWORDS].\n"
- title: 3.  QCP File Format
  contents:
  - "3.  QCP File Format\n   The following describes the QCP file format using [ABNF].\n\
    \   A qcp file contains data frames generated by the [QCELP], [EVRC], or\n   [SMV]\
    \ vocoders.\n   qcp-file        = riff-qlcm fmt vrat [labl] [offs] data [cnfg]\n\
    \                     [text]\n   riff-qlcm       = RIFF riff-size QLCM\n   fmt\
    \             = FMT chunk-size major minor codec-info\n                     ;\
    \ major and minor are set to the version of\n                     ; the QCP file\
    \ format used to generate the\n                     ; file - currently, the following\
    \ versions\n                     ; are defined:\n                     ;\n    \
    \                 ; major = 2, minor = 0\n                     ;    used for SMV.\n\
    \                     ; major = 1, minor = 0\n                     ;    used for\
    \ QCELP-13K and EVRC\n   vrat            = VRAT chunk-size var-rate-flag size-in-packets\n\
    \   labl            = LABL chunk-size label\n   offs            = OFFS chunk-size\
    \ step-size num-offsets *offset\n                     ; number of repetitions\
    \ of offset must equal\n                     ; num-offsets\n   data          \
    \  = DATA chunk-size *packet [pad]\n                     ; repetitions of packet\
    \ contain the actual\n                     ; packet data -- there should be as\
    \ many\n                     ; packets as indicated by the size-in-packets\n \
    \                    ; element found elsewhere in this file format\n   cnfg  \
    \          = CNFG chunk-size config\n   text            = TEXT chunk-size string\
    \ [pad]\n                     ; string contains any information defined\n    \
    \                 ; by the application\n   riff-size       = UINT32\n        \
    \             ; riff-size should equal total size of file\n                  \
    \   ; in bytes, excluding the size of RIFF and\n                     ; riff-size\n\
    \   chunk-size      = UINT32\n                     ; chunk-size should equal the\
    \ total size of\n                     ; the chunk described by the rule containing\n\
    \                     ; chunk-size, excluding the size of\n                  \
    \   ; chunk-size itself and any elements that\n                     ; come before\
    \ it in the rule, as well as\n                     ; the pad element, if present\n\
    \   major           = OCTET\n                     ; major version number of QCP\
    \ format --\n                     ; currently set as \"2\" -- however, \"1\" should\n\
    \                     ; be used instead for QCELP-13K and EVRC, to\n         \
    \            ; maintain compatibility with older software\n                  \
    \   ; platforms\n   minor           = OCTET\n                     ; minor version\
    \ number: currently set to \"0\"\n   codec-info      = codec-guid codec-version\
    \ codec-name\n                             average-bps packet-size\n         \
    \                    block-size sampling-rate\n                             sample-size\
    \ variable-rate 5*UINT32\n                     ; this identifies the codec used\
    \ to encode\n                     ; the speech in this file, and any parameters\n\
    \                     ; needed in order to decode the speech\n               \
    \      ; the five UINT32 elements are reserved for\n                     ; use\
    \ in future versions of this format,\n                     ; should be set to\
    \ zero for now, and readers\n                     ; should allow non-zero values\
    \ when reading\n                     ; files in this format\n   var-rate-flag\
    \   = UINT32\n                     ; if zero, sizes of packets in data chunk are\n\
    \                     ; fixed at the value indicated by the\n                \
    \     ; packet-size field, found elsewhere in this\n                     ; file\
    \ format\n                     ; if var-rate-flag is greater than zero but\n \
    \                    ; less than %xFFFF0000, packets are variable\n          \
    \           ; rate, and rate is determined by rate octet\n                   \
    \  ; in each packet -- to determine the size of\n                     ; a packet,\
    \ map the first octet (the rate\n                     ; octet) to the size of\
    \ the rest of the\n                     ; packet, according to the rate-map-table\n\
    \                     ; information found elsewhere in this file\n           \
    \          ; values %xFFFF0001 and higher are reserved\n                     ;\
    \ for use in future versions of this format\n   size-in-packets = UINT32\n   \
    \                  ; this is the total number of packets in the\n            \
    \         ; data chunk in the file\n   label           = 48OCTET\n           \
    \          ; label is for generic storage for\n                     ; application\
    \ use\n   step-size       = UINT32\n                     ; difference in the times\
    \ of sequential\n                     ; application stored in this chunk, in\n\
    \                     ; 100ms increments (step-size of 10 means\n            \
    \         ; 1 second)\n                     ; currently only a step-size of \"\
    10\" is\n                     ; guaranteed to be supported by software\n     \
    \                ; capable of reading this file format\n   num-offsets     = UINT32\n\
    \                     ; number of offsets in offs chunk -- must\n            \
    \         ; equal number of repetitions of offset\n                     ; element\n\
    \   offset          = UINT32\n                     ; absolute octet offset in\
    \ this QCP file\n                     ; where the beginning of the packet that\
    \ is\n                     ; at a time index one step past the last\n        \
    \             ; offset is located -- step size is given\n                    \
    \ ; in step-size\n   packet          = [rate-octet] (1*OCTET)\n              \
    \       ; the rate-octet element is present only if\n                     ; the\
    \ var-rate-flag found elsewhere in the file\n                     ; indicates\
    \ that the file contains\n                     ; variable-rate packets - if it\
    \ is present, the\n                     ; octet is used to determine the size\
    \ of the\n                     ; remainder of the packet (the number of octets\n\
    \                     ; which follow the rate-octet)\n                     ; No\
    \ rate-octet is present if the var-rate-flag\n                     ; is set to\
    \ zero, indicating a fixed size\n                     ; packet file - in this\
    \ case, the number of\n                     ; octets in packet is equal to the\
    \ value set\n                     ; in packet-size, found elsewhere in this\n\
    \                     ; file format\n                     ; It should be noted\
    \ that there is always a\n                     ; codec rate octet in a packet,\
    \ even if the\n                     ; var-rate-flag is zero, indicating fixed\
    \ size\n                     ; packet files - in this case, although there\n \
    \                    ; is no rate-octet element in this syntax, the\n        \
    \             ; first octet in the packet is still considered\n              \
    \       ; the \"rate\" for the packet.\n                     ; Two examples follow\
    \ to illustrate this.\n                     ; Example 1.  Variable-rate QCELP\n\
    \                     ; var-rate-flag = %d1\n                     ; variable-rate\
    \ = %d5 %d34 %d4 %d16 %d3 %d7 %d2\n                     ;                 %d3\
    \ %d1 %d0 %d0 3(%d0 %d0)\n                     ; packet        = %d4 (34OCTET)\n\
    \                     ; packet        = %d4 (34OCTET)\n                     ;\
    \ packet        = %d3 (16OCTET)\n                     ; packet        = %d1 (3OCTET)\n\
    \                     ; Example 2.  Fixed-rate, full-rate QCELP\n            \
    \         ; var-rate-flag = %d0\n                     ; packet-size   = %d35\n\
    \                     ; packet        = (35OCTET)  ; first octet is %d4\n    \
    \                 ; packet        = (35OCTET)  ; first octet is %d4\n        \
    \             ; packet        = (35OCTET)  ; first octet is %d4\n            \
    \         ; packet        = (35OCTET)  ; first octet is %d4\n   pad          \
    \   = %x00\n                     ; pad is present only if the number of bytes\
    \ in\n                     ; the chunk described by the rule containing\n    \
    \                 ; pad would otherwise be odd - if present, its\n           \
    \          ; size should NOT be included in the\n                     ; calculation\
    \ for any chunk-size element also\n                     ; present in the chunk\n\
    \   config          = UINT16\n                     ; config is a bitmapped configuration\
    \ word,\n                     ; for application use\n   string          = *(%x01-FF)\
    \ %x00\n                     ; this is a zero-terminated string of octets --\n\
    \                     ; although not limited to it, typically the\n          \
    \           ; string consists of us-ascii characters\n   codec-guid      = UINT32\
    \ UINT16 UINT16 8OCTET\n                     ; this is the unique identifier for\
    \ the codec\n                     ; used to encode the packets in the data chunk\n\
    \                     ; The elements of this rule match the structure\n      \
    \               ; defined for a GUID in other specifications\n               \
    \      ; and formats.  The first three elements are\n                     ; stored\
    \ in little-endian octet order.\n                     ; When values for a GUID\
    \ are expressed, the\n                     ; first three elements are expressed\
    \ as a\n                     ; sequence of hexadecimal digits in normal\n    \
    \                 ; network ordering (big-endian or most\n                   \
    \  ; significant digit first) while the eight\n                     ; octet element\
    \ is broken up into two groups,\n                     ; the first having four\
    \ hexadecimal digits,\n                     ; and the second having twelve digits,\
    \ all\n                     ; expressed in network ordering.\n               \
    \      ; For example, if the octets in a GUID as\n                     ; stored\
    \ in a file are:\n                     ;   %12 %34 %56 %78 %9A %BC %DE %F0\n \
    \                    ;   %0F %ED %CB %A9 %87 %65 %43 %21\n                   \
    \  ; then the GUID would have these values:\n                     ;   UINT32 =\
    \ %x78563412\n                     ;   UINT16 = %xBC9A\n                     ;\
    \   UINT16 = %xF0DE\n                     ;   8OCTET = %x0F.ED.CB.A9.87.65.43.21\n\
    \                     ; and the whole GUID would be expressed as:\n          \
    \           ;   {78563412-BC9A-F0DE-0FED-CBA987654321}\n                     ;\
    \ The following codec GUIDs are currently\n                     ; defined for\
    \ QCP file format:\n                     ;\n                     ; QCELP-13K:\n\
    \                     ;   {5E7F6D41-B115-11D0-BA91-00805FB4B97E}\n           \
    \          ;   {5E7F6D42-B115-11D0-BA91-00805FB4B97E}\n                     ;\
    \ EVRC:\n                     ;   {E689D48D-9076-46B5-91EF-736A5100CEB4}\n   \
    \                  ; SMV:\n                     ;   {8D7C2B75-A797-ED49-985E-D53C8CC75F84}\n\
    \   codec-version   = UINT16\n                     ; version number of codec used\
    \ to encode the\n                     ; packets in the data chunk\n          \
    \           ; This value depends on the particular codec\n                   \
    \  ; used to encode the packets.  The following\n                     ; versions\
    \ are currently defined:\n                     ; QCELP-13K:\n                \
    \     ;   1 or 2\n                     ; EVRC, and SMV:\n                    \
    \ ;   1\n   codec-name      = 80OCTET\n                     ; the proper name\
    \ of the codec, in us-ascii -\n                     ; unused octets after the\
    \ name are set to zero\n   average-bps     = UINT16\n                     ; average\
    \ data rate, in bits per second, of\n                     ; the speech data represented\
    \ in this file\n   packet-size     = UINT16\n                     ; the size in\
    \ octets of the largest possible\n                     ; packet in the data chunk\n\
    \   block-size      = UINT16\n                     ; the number of samples encoded\
    \ in every packet\n                     ; in the data chunk\n   sampling-rate\
    \   = UINT16\n                     ; number of speech samples per second\n   \
    \                  ; (typically 8000)\n   sample-size     = UINT16\n         \
    \            ; number of bits per speech sample\n                     ; (typically\
    \ 16)\n   variable-rate   = num-rates rate-map-table\n                     ; if\
    \ num-rates is zero, and major version\n                     ; number of the QCP\
    \ file is 2, then the\n                     ; rate-map-table is not used - instead,\n\
    \                     ; it is up to the decoder to determine the\n           \
    \          ; sizes of packets in the data chunk, even\n                     ;\
    \ if var-rate-flag indicates the file uses\n                     ; variable rate\
    \ packets\n                     ; otherwise, num-rates specifies how many\n  \
    \                   ; different possible rate octets there are\n             \
    \        ; for the packets in the data chunk, and\n                     ; thus\
    \ how many of the rate-map-entry elements\n                     ; contain valid\
    \ information\n   num-rates       = UINT32\n                     ; this is the\
    \ number of possible rate octets\n                     ; used in the packets in\
    \ the data chunk\n   rate-map-table  = 8rate-map-entry\n                     ;\
    \ any unused entries SHOULD be filled with\n                     ; %d0 %d0\n \
    \  rate-map-entry  = rate-size rate-octet\n                     ; this maps a\
    \ possible rate octet for a packet\n                     ; to the size of the\
    \ rest of the packet having\n                     ; that value for the rate octet\n\
    \   rate-size       = OCTET\n                     ; this is the size of a packet,\
    \ excluding the\n                     ; value for the rate octet\n   rate-octet\
    \      = OCTET\n                     ; this is the first octet of a packet in\
    \ the\n                     ; data chunk, when the var-rate-flag set for\n   \
    \                  ; the file indicates the file is variable rate\n   UINT32 \
    \         = 4OCTET\n                     ; this field contains a 32-bit integer\
    \ stored\n                     ; as a sequence of four octets, in\n          \
    \           ; little-endian order (least significant\n                     ; octet\
    \ first)\n   UINT16          = 2OCTET\n                     ; this field contains\
    \ a 16-bit integer stored\n                     ; as a sequence of two octets,\
    \ in\n                     ; little-endian order (least significant\n        \
    \             ; octet first)\n   OCTET           = %x00-FF\n                 \
    \    ; an octet, also called a byte - any possible\n                     ; combination\
    \ of eight bits, forming a single\n                     ; integer or part of a\
    \ larger integer having\n                     ; more than eight bits\n   RIFF\
    \            = %x52 %x49 %x46 %x46\n   QLCM            = %x51 %x4C %x43 %x4D\n\
    \   FMT             = %x66 %x6D %x74 %x20\n   LABL            = %x6C %x61 %x62\
    \ %x6C\n   OFFS            = %x6F %x66 %x66 %x73\n   DATA            = %x64 %x61\
    \ %x74 %x61\n   CNFG            = %x63 %x6E %x66 %x67\n   TEXT            = %x74\
    \ %x65 %x78 %x74\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   IANA has updated the audio/qcelp and audio/vnd.qcelp\
    \ registrations\n   and has added the audio/evrc-qcp and audio/smv-qcp registrations\
    \ as\n   specified here.\n"
- title: 4.1.  Update of Media Type Audio/qcelp
  contents:
  - "4.1.  Update of Media Type Audio/qcelp\n   The audio/qcelp media registration\
    \ has been updated to indicate that\n   this specification is to be used for storage.\n"
- title: 4.2.  Update of Media Type Audio/vnd.qcelp
  contents:
  - "4.2.  Update of Media Type Audio/vnd.qcelp\n   The audio/vnd.qcelp media registration\
    \ has been updated to indicate\n   that use of this media type is deprecated and\
    \ to note that the media\n   type audio/qcelp should be used instead.\n"
- title: 4.3.  Registration of Audio/EVRC-QCP
  contents:
  - "4.3.  Registration of Audio/EVRC-QCP\n   Media Type Name:           audio\n \
    \  Media Subtype Name:        evrc-qcp\n   Required Parameter:        none\n \
    \  Optional parameters:       none\n   Encoding considerations:\n       The storage\
    \ format specified in this document may be used with\n       any transport mechanism.\n\
    \   Security considerations:\n       See Section 5 \"Security Considerations\"\
    \ of this document.\n   Public specification:       this document\n   Additional\
    \ information:     no\n       Magic number: First four octets: RIFF\n        \
    \             Octets 9-12: QLCM\n       (Note: octets 5-8 constitute the riff-size\
    \ field, which is the\n       size of the file minus the RIFF header.  Since this\
    \ could be\n       anything, it is not fixed and thus can not be used as part\
    \ of the\n       magic number.)\n       File extensions: qcp, QCP\n       Macintosh\
    \ file type code: none\n       Object identifier or OID: none\n   Intended usage:\n\
    \       COMMON.  This file format is already in wide use in Internet\n       email\
    \ user agents, multimedia authoring and playing software,\n       and cdma2000(r)\
    \ handsets.\n   Person & email address to contact for further information:\n \
    \      Harinath Garudadri hgarudad@qualcomm.com\n   Change controller:\n     \
    \  The IETF\n"
- title: 4.4.  Registration of Audio/SMV-QCP
  contents:
  - "4.4.  Registration of Audio/SMV-QCP\n   Media Type Name:           audio\n  \
    \ Media Subtype Name:        smv-qcp\n   Required Parameter:        none\n   Optional\
    \ parameters:       none\n   Encoding considerations:\n       The storage format\
    \ specified in this document may be used with\n       any transport mechanism.\n\
    \   Security considerations:\n       See Section 5 \"Security Considerations\"\
    \ of this document.\n   Public specification:       this document\n   Additional\
    \ information:     no\n       Magic number: First four octets: RIFF\n        \
    \             Octets 9-12: QLCM\n       (Note: octets 5-8 constitute the riff-size\
    \ field, which is the\n       size of the file minus the RIFF header.  Since this\
    \ could be\n       anything, it is not fixed and thus can not be used as part\
    \ of the\n       magic number.)\n       File extensions: qcp, QCP\n       Macintosh\
    \ file type code: none\n       Object identifier or OID: none\n   Intended usage:\n\
    \       COMMON.  This file format is already in wide use in Internet\n       email\
    \ user agents, multimedia authoring and playing software,\n       and cdma2000(r)\
    \ handsets.\n   Person & email address to contact for further information:\n \
    \      Harinath Garudadri hgarudad@qualcomm.com\n   Change controller:\n     \
    \  The IETF\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document specifies a file format only, not\
    \ a streaming protocol\n   payload format, nor a transfer method.  As such, it\
    \ introduces no\n   security risks aside from those associated with any audio\
    \ codec or\n   media file format (for example, denial of service by transmitting\
    \ a\n   file larger than the receiver can handle).  Note that those security\n\
    \   concerns should be understood before using the file format specified\n   here.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Richard Walters created the ABNF notation for this specification\
    \ and\n   proof-read the text, among other helpful tasks.\n   The qcp file format\
    \ was originally developed by others within\n   Qualcomm.  The editor would like\
    \ to thank Chuck Han and Livingstone\n   Song for their contributions leading\
    \ to this specification.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [ABNF]      Crocker, D., Ed. and P. Overell, \"\
    Augmented BNF for\n               Syntax Specifications: ABNF\", RFC 2234, November\
    \ 1997.\n   [KEYWORDS]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [QCELP]\
    \     3GPP2 C.S0020 \"High Rate Speech Service Option 17 for\n               Wideband\
    \ Spread Spectrum Communications Systems\".\n   [EVRC]      3GPP2 C.S0014 \"Enhanced\
    \ Variable Rate Codec, Speech\n               Service Option 3 for Wideband Spread\
    \ Spectrum Digital\n               Systems \". (Used to be TIA/EIA/IS-127)\n \
    \  [PureVoice] McKay, K., \"RTP Payload Format for PureVoice(tm) Audio\",\n  \
    \             RFC 2658, August 1999.\n   [SMV]       3GPP2 C.S0030 \"Selectable\
    \ Mode Vocoder, Service Option\n               for Wideband Spread Spectrum Communication\
    \ Systems\".\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [EVRC-SMV]  Li, A., \"RTP Payload Format for\
    \ Enhanced Variable Rate\n               Codecs (EVRC) and Selectable Mode Vocoders\
    \ (SMV)\", RFC\n               3558, July 2003.\n"
- title: 8.  Intellectual Property Statement
  contents:
  - "8.  Intellectual Property Statement\n   The IETF takes no position regarding\
    \ the validity or scope of any\n   intellectual property or other rights that\
    \ might be claimed to\n   pertain to the implementation or use of the technology\
    \ described in\n   this document or the extent to which any license under such\
    \ rights\n   might or might not be available; neither does it represent that it\n\
    \   has made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: 9.  Editors' Addresses
  contents:
  - "9.  Editors' Addresses\n   Randall Gellens\n   QUALCOMM Incorporated\n   5775\
    \ Morehouse Drive\n   San Diego, CA  92121\n   USA\n   EMail: randy@qualcomm.com\n\
    \   Harinath Garudadri\n   QUALCOMM Incorporated\n   5775 Morehouse Drive\n  \
    \ San Diego, CA  92121\n   USA\n   EMail: hgarudad@qualcomm.com\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
