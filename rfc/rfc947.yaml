- title: __initial_text__
  contents:
  - '             Multi-network Broadcasting within the Internet

    '
- title: 1. Status of this Memo
  contents:
  - "1. Status of this Memo\n   This RFC describes the extension of a network's broadcast\
    \ domain to\n   include more than one physical network through the use of a broadcast\n\
    \   packet repeater.\n   The following paper will present the problem of multi-network\n\
    \   broadcasting and our motivation for solving this problem which is in\n   the\
    \ context of developing a distributed operating system.  We discuss\n   different\
    \ solutions to extending a broadcast domain and why we chose\n   the one that\
    \ has been implemented.  In addition, there is information\n   on the implementation\
    \ itself and some notes on its performance.\n   It is hoped that the ideas presented\
    \ here will help people in the\n   Internet who have applications which make use\
    \ of broadcasting and\n   have come up against the limitation of only being able\
    \ to broadcast\n   within a single network.\n   The information presented here\
    \ is accurate as of the date of\n   publication but specific details, particularly\
    \ those regarding our\n   implementation, may change in the future.  Distribution\
    \ of this memo\n   is unlimited.\n"
- title: 2. The Problem
  contents:
  - "2. The Problem\n   Communication between hosts on separate networks has been\
    \ addressed\n   largely through the use of Internet protocols and gateways. One\n\
    \   aspect of internetwork communication that hasn't been solved in the\n   Internet\
    \ is extending broadcasting to encompass two or more networks.\n   Broadcasting\
    \ is an efficient way to send information to many hosts\n   while only having\
    \ to transmit a single packet.  Many of the current\n   local area network (LAN)\
    \ architectures directly support a broadcast\n   mechanism.  Unfortunately, this\
    \ broadcast mechanism has a shortcoming\n   when it is used in networking environments\
    \ which include multiple\n   LANs connected by gateways such as in the DARPA Internet.\
    \  This\n   shortcoming is that broadcasted packets are only received by hosts\
    \ on\n   the physical network on which the packet was broadcast.  As a result,\n\
    \   any application which takes advantage of LAN broadcasting can only\n   broadcast\
    \ to those hosts on its physical network.\n   We took advantage of broadcasting\
    \ in developing the Cronus\n   Distributed Operating System [1].  Cronus provides\
    \ services and\n   communication to processes distributed among a variety of different\n"
- title: RFC 947                                                        June 1985
  contents:
  - 'RFC 947                                                        June 1985

    '
- title: Multi-network Broadcasting within the Internet
  contents:
  - "Multi-network Broadcasting within the Internet\n   types of computer systems.\
    \  Cronus is built around logical clusters\n   of hosts connected to one or more\
    \ high-speed LANs.  Communication in\n   Cronus is built upon the TCP and UDP\
    \ protocols.  Cronus makes use of\n   broadcasting for dynamically locating resources\
    \ on other hosts and\n   collecting status information from a collection of servers.\
    \  Since\n   Cronus's broadcast capabilities are not intended to be limited to\
    \ the\n   boundaries of a single LAN, we needed to find some way to extend our\n\
    \   broadcasting domain to include hosts on distant LANs in order to\n   experiment\
    \ with clusters that span several physical networks.  Cronus\n   predominantly\
    \ uses broadcasting to communicate with a subset of the\n   hosts that actually\
    \ receive the broadcasted message.  A multicast\n   mechanism would be more appropriate,\
    \ but was unavailable in some of\n   our network implementations, so we chose\
    \ broadcast for the initial\n   implementation of Cronus utilities.\n"
- title: 3. Our Solution
  contents:
  - "3. Our Solution\n   The technique we chose to experiment with the multi-network\n\
    \   broadcasting problem can be described as a \"broadcast repeater\".  A\n  \
    \ broadcast repeater is a mechanism which transparently relays\n   broadcast packets\
    \ from one LAN to another, and may also forward\n   broadcast packets to hosts\
    \ on a network which doesn't support\n   broadcasting at the link-level.  This\
    \ mechanism provides flexibility\n   while still taking advantage of the convenience\
    \ of LAN broadcasts.\n   Our broadcast repeater is a process on a network host\
    \ which listens\n   for broadcast packets.  These packets are picked up and\n\
    \   retransmitted, using a simple repeater-to-repeater protocol, to one\n   or\
    \ more repeaters that are connected to distant LANs.  The repeater\n   on the\
    \ receiving end will rebroadcast the packet on its LAN,\n   retaining the original\
    \ packet's source address.  The broadcast\n   repeater can be made very intelligent\
    \ in its selection of messages to\n   be forwarded.  We currently have the repeater\
    \ forward only broadcast\n   messages sent using the UDP ports used by Cronus,\
    \ but messages may be\n   selected using any field in the UDP or IP headers, or\
    \ all IP-level\n   broadcast messages may be forwarded.\n"
- title: 4. Alternatives to the Broadcast Repeater
  contents:
  - "4. Alternatives to the Broadcast Repeater\n   We explored a few alternatives\
    \ before deciding on our technique to\n   forward broadcast messages.  One of\
    \ these methods was to put\n   additional functions into the Internet gateways.\
    \  Gateways could\n   listen at the link-level for broadcast packets and relay\
    \ the packets\n   to one or more gateways on distant LANs.  These gateways could\
    \ then\n   transmit the same packet onto their networks using the local\n   network's\
    \ link-level broadcast capability, if one is available.  All\n   gateways participating\
    \ in this scheme would have to maintain tables\n"
- title: RFC 947                                                        June 1985
  contents:
  - 'RFC 947                                                        June 1985

    '
- title: Multi-network Broadcasting within the Internet
  contents:
  - "Multi-network Broadcasting within the Internet\n   of all other gateways which\
    \ are to receive broadcasts.  If the\n   recipient gateway was serving a network\
    \ without a capacity to\n   broadcast it could forward the messages directly to\
    \ one or more\n   designated hosts on its network but, again, it would require\
    \ that\n   tables be kept in the gateway.  Putting this sort of function into\n\
    \   gateways was rejected for a number of reasons: (a) it would require\n   extensions\
    \ to the gateway control protocol to allow updating the\n   lists gateways would\
    \ have to maintain, (b) since not all messages\n   (e.g., LAN address- resolution\
    \ messages) need be forwarded, the need\n   to control forwarding should be under\
    \ the control of higher levels of\n   the protocol than may be available to the\
    \ gateways, (c) Cronus could\n   be put into environments where the gateways may\
    \ be provided by\n   alternative vendors who may not implement broadcast propagation,\
    \ (d)\n   as a part of the underlying network, gateways are likely to be\n   controlled\
    \ by a different agency from that controlling the\n   configuration of a Cronus\
    \ system, adding bureaucratic complexity to\n   reconfiguration.\n   Another idea\
    \ which was rejected was to put broadcast functionality\n   into the Cronus kernel.\
    \  The Cronus kernel is a process which runs on\n   each host participating in\
    \ Cronus, and has the task of routing all\n   messages passed between Cronus processes.\
    \  The Cronus kernel is the\n   only program in the Cronus system which directly\
    \ uses broadcast\n   capability (other parts of Cronus communicate using mechanisms\n\
    \   provided by the kernel).  We could either entirely remove the Cronus\n   kernel's\
    \ dependence on broadcast, or add a mechanism for emulating\n   broadcast using\
    \ serially-transmitted messages when the underlying\n   network does not provide\
    \ a broadcast facility itself.  Either\n   solution requires all Cronus kernel\
    \ processes to know the addresses\n   of all other participants in a Cronus system,\
    \ which we view as an\n   undesirable limit on configuration flexibility.  Also,\
    \ this solution\n   would be Cronus-specific, while the broadcast-repeater solution\
    \ is\n   applicable to other broadcast-based protocols.\n"
- title: 5. Implementation
  contents:
  - "5. Implementation\n   The broadcast repeater is implemented as two separate processes\
    \ - the\n   forwarder and the repeater.  The forwarder process waits for\n   broadcast\
    \ UDP packets to come across its local network which match\n   one or more specific\
    \ port numbers (or destination addresses).  When\n   such a packet is found, it\
    \ is encapsulated in a forwarder-repeater\n   message sent to a repeater process\
    \ on a foreign network.  The\n   repeater then relays the forwarded packet onto\
    \ its LAN using that\n   network's link-level broadcast address in the packet's\
    \ destination\n   field, but preserving the source address from the original packet.\n\
    \   When the forwarder process starts for the first time it reads a\n"
- title: RFC 947                                                        June 1985
  contents:
  - 'RFC 947                                                        June 1985

    '
- title: Multi-network Broadcasting within the Internet
  contents:
  - "Multi-network Broadcasting within the Internet\n   configuration file.  This\
    \ file specifies the addresses of repeater\n   processes, and selects which packets\
    \ should be forwarded to each\n   repeater process (different repeaters may select\
    \ different sets of\n   UDP packets).  The forwarder attempts to establish a TCP\
    \ connection\n   to each repeater listed in the configuration file.  If a TCP\
    \ link to\n   a repeater fails, the forwarder will periodically retry connecting\
    \ to\n   it.  Non-repeater hosts may also be listed in the configuration file.\n\
    \   For these hosts the forwarder will simply replace the destination\n   broadcast\
    \ address in the UDP packet with the host's address and send\n   this new datagram\
    \ directly to the non-repeater host.\n   If a repeater and a forwarder co-exist\
    \ on the same LAN a problem may\n   arise if the forwarder picks up packets which\
    \ have been rebroadcast\n   by the repeater.  As a precaution against rebroadcast\
    \ of forwarded\n   packets (\"feedback\" or \"ringing\"), the forwarder does not\
    \ connect to\n   any repeaters listed in its configuration file which are on the\
    \ same\n   network as the forwarder itself.  Also, to avoid a broadcast loop\n\
    \   involving two LANs, each with a forwarder talking to a repeater on\n   the\
    \ other LAN, forwarders do not forward packets whose source address\n   is not\
    \ on the forwarder's LAN.\n"
- title: 6. Experience
  contents:
  - "6. Experience\n   To date, the broadcast repeater has been implemented on the\
    \ VAX\n   running 4.2 BSD UNIX operating system with BBN's networking software\n\
    \   and has proven to work quite well for our purposes.  Our current\n   configuration\
    \ includes two Ethernets which are physically separated\n   by two other LANs.\
    \  For the past few months the broadcast repeater\n   has successfully extended\
    \ our broadcast domain to include both\n   Ethernets even though messages between\
    \ the two networks must pass\n   through at least two gateways.  We were forced\
    \ to add a special\n   capability to the BBN TCP/IP implementation which allows\
    \ privileged\n   processes to send out IP packets with another host's source address.\n\
    \   The repeater imposes a fair amount of overhead on the shared hosts\n   that\
    \ currently support it due to the necessity of waking the\n   forwarder process\
    \ on all UDP packets which arrive at the host, since\n   the decision to reject\
    \ a packet is made by user-level software,\n   rather than in the network protocol\
    \ drivers.  One solution to this\n   problem would be to implement the packet\
    \ filtering in the system\n   kernel (leaving the configuration management and\
    \ rebroadcast\n   mechanism in user code) as has been done by Stanford/CMU in\
    \ a UNIX\n   packet filter they have developed.  As an alternative we are planning\n\
    \   to rehost the implementation of the repeater function as a\n   specialized\
    \ network service provided by a microcomputer based\n"
- title: RFC 947                                                        June 1985
  contents:
  - 'RFC 947                                                        June 1985

    '
- title: Multi-network Broadcasting within the Internet
  contents:
  - "Multi-network Broadcasting within the Internet\n   real-time system which is\
    \ already part of our Cronus configuration.\n   Such a machine is better suited\
    \ to the task since scheduling overhead\n   is much less for them than it is on\
    \ a multi-user timesharing system.\n"
- title: 7. Reference
  contents:
  - "7. Reference\n   [1]  \"Cronus, A Distributed Operating System: Phase 1 Final\
    \ Report\",\n        R. Schantz, R. Thomas, R. Gurwitz, G. Bono, M. Dean,\n  \
    \      K. Lebowitz, K.  Schroder, M. Barrow and R. Sands, Technical\n        Report\
    \ No. 5885, Bolt Beranek and Newman, Inc., January 1985.\n        The Cronus project\
    \ is supported by the Rome Air Development\n        Center.\n"
- title: 8. Editors Note
  contents:
  - "8. Editors Note\n   Also see RFCs 919 and 940 on this topic.\n"
