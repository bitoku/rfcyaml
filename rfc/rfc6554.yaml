- title: __initial_text__
  contents:
  - "             An IPv6 Routing Header for Source Routes with\n      the Routing\
    \ Protocol for Low-Power and Lossy Networks (RPL)\n"
- title: Abstract
  contents:
  - "Abstract\n   In Low-Power and Lossy Networks (LLNs), memory constraints on routers\n\
    \   may limit them to maintaining, at most, a few routes.  In some\n   configurations,\
    \ it is necessary to use these memory-constrained\n   routers to deliver datagrams\
    \ to nodes within the LLN.  The Routing\n   Protocol for Low-Power and Lossy Networks\
    \ (RPL) can be used in some\n   deployments to store most, if not all, routes\
    \ on one (e.g., the\n   Directed Acyclic Graph (DAG) root) or a few routers and\
    \ forward the\n   IPv6 datagram using a source routing technique to avoid large\
    \ routing\n   tables on memory-constrained routers.  This document specifies a\
    \ new\n   IPv6 Routing header type for delivering datagrams within a RPL\n   routing\
    \ domain.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6554.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Requirements Language ......................................3\n  \
    \ 2. Overview ........................................................3\n   3.\
    \ Format of the RPL Routing Header ................................6\n   4. RPL\
    \ Router Behavior .............................................8\n      4.1. Generating\
    \ Source Routing Headers ..........................8\n      4.2. Processing Source\
    \ Routing Headers ..........................9\n   5. Security Considerations ........................................11\n\
    \      5.1. Source Routing Attacks ....................................11\n  \
    \    5.2. ICMPv6 Attacks ............................................12\n   6.\
    \ IANA Considerations ............................................12\n   7. Acknowledgements\
    \ ...............................................12\n   8. References .....................................................12\n\
    \      8.1. Normative References ......................................12\n  \
    \    8.2. Informative References ....................................13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Routing Protocol for Low-Power and Lossy Networks (RPL)\
    \ is a\n   distance vector IPv6 routing protocol designed for Low-Power and\n\
    \   Lossy Networks (LLNs) [RFC6550].  Such networks are typically\n   constrained\
    \ in resources (limited communication data rate, processing\n   power, energy\
    \ capacity, memory).  In particular, some LLN\n   configurations may utilize LLN\
    \ routers where memory constraints limit\n   nodes to maintaining only a small\
    \ number of default routes and no\n   other destinations.  However, it may be\
    \ necessary to utilize such\n   memory-constrained routers to forward datagrams\
    \ and maintain\n   reachability to destinations within the LLN.\n   To utilize\
    \ paths that include memory-constrained routers, RPL relies\n   on source routing.\
    \  In one deployment model of RPL, more-capable\n   routers collect routing information\
    \ and form paths to arbitrary\n   destinations within a RPL routing domain.  However,\
    \ a source routing\n   mechanism supported by IPv6 is needed to deliver datagrams.\n\
    \   This document specifies the Source Routing Header (SRH) for use\n   strictly\
    \ between RPL routers in the same RPL routing domain.  A RPL\n   routing domain\
    \ is a collection of RPL routers under the control of a\n   single administration.\
    \  The boundaries of routing domains are defined\n   by network management by\
    \ setting some links to be exterior, or inter-\n   domain, links.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   The format of the SRH draws from that of the Type 0 Routing\
    \ header\n   (RH0) [RFC2460].  However, the SRH introduces mechanisms to compact\n\
    \   the source route entries when all entries share the same prefix with\n   the\
    \ IPv6 Destination Address of a packet carrying an SRH, a typical\n   scenario\
    \ in LLNs using source routing.  The compaction mechanism\n   reduces consumption\
    \ of scarce resources such as channel capacity.\n   The SRH also differs from\
    \ RH0 in the processing rules to alleviate\n   security concerns that led to the\
    \ deprecation of RH0 [RFC5095].\n   First, RPL routers implement a strict source\
    \ route policy where each\n   and every IPv6 hop between the source and destination\
    \ of the source\n   route is specified within the SRH.  Note that the source route\
    \ may be\n   a subset of the path between the actual source and destination and\
    \ is\n   discussed further below.  Second, an SRH is only used between RPL\n \
    \  routers within a RPL routing domain.  RPL Border Routers, responsible\n   for\
    \ connecting other RPL routing domains and IP domains that use\n   other routing\
    \ protocols, do not allow datagrams already carrying an\n   SRH header to enter\
    \ or exit a RPL routing domain.  Third, a RPL\n   router drops datagrams that\
    \ include multiple addresses assigned to\n   any interfaces on that router to\
    \ avoid forwarding loops.\n   There are two cases that determine how to include\
    \ an SRH when a RPL\n   router requires the use of an SRH to deliver a datagram\
    \ to its\n   destination.\n   1.  If the SRH specifies the complete path from\
    \ source to\n       destination, the router places the SRH directly in the datagram\n\
    \       itself.\n   2.  If the SRH only specifies a subset of the path from source\
    \ to\n       destination, the router uses IPv6-in-IPv6 tunneling [RFC2473] and\n\
    \       places the SRH in the outer IPv6 header.  Use of tunneling\n       ensures\
    \ that the datagram is delivered unmodified and that ICMP\n       errors return\
    \ to the source of the SRH rather than the source of\n       the original datagram.\n\
    \   In a RPL network, Case 1 occurs when both source and destination are\n   within\
    \ a RPL routing domain and a single SRH is used to specify the\n   entire path\
    \ from source to destination, as shown in the following\n   figure:\n        \
    \                   +--------------------+\n                           |     \
    \               |\n                           |  (S) -------> (D)  |\n       \
    \                    |                    |\n                           +--------------------+\n\
    \                             RPL Routing Domain\n   In the above scenario, datagrams\
    \ traveling from source, S, to\n   destination, D, have the following packet structure:\n\
    \                   +--------+---------+-------------//-+\n                  \
    \ | IPv6   | Source  | IPv6           |\n                   | Header | Routing\
    \ | Payload        |\n                   |        | Header  |                |\n\
    \                   +--------+---------+-------------//-+\n   S's address is carried\
    \ in the IPv6 header's Source Address field.\n   D's address is carried in the\
    \ last entry of the SRH for all but the\n   last hop, when D's address is carried\
    \ in the IPv6 header's\n   Destination Address field of the packet carrying the\
    \ SRH.\n   In a RPL network, Case 2 occurs for all datagrams that have a source\n\
    \   and/or destination outside the RPL routing domain, as shown in the\n   following\
    \ diagram:\n                            +-----------------+\n                \
    \            |                 |\n                            |  (S) -------->\
    \ (R) --------> (D)\n                            |                 |\n       \
    \                     +-----------------+\n                            RPL Routing\
    \ Domain\n                            +-----------------+\n                  \
    \          |                 |\n             (S) --------> (R) --------> (D) \
    \ |\n                            |                 |\n                       \
    \     +-----------------+\n                            RPL Routing Domain\n  \
    \                          +-----------------+\n                            |\
    \                 |\n             (S) --------> (R) ------------> (R) -------->\
    \ (D)\n                            |                 |\n                     \
    \       +-----------------+\n                            RPL Routing Domain\n\
    \   In the scenarios above, R may indicate a RPL Border Router (when\n   connecting\
    \ to other routing domains) or a RPL Router (when connecting\n   to hosts).  The\
    \ datagrams have the following structure when traveling\n   within the RPL routing\
    \ domain:\n               +--------+---------+--------+-------------//-+\n   \
    \            | Outer  | Source  | Inner  | IPv6           |\n               |\
    \ IPv6   | Routing | IPv6   | Payload        |\n               | Header | Header\
    \  | Header |                |\n               +--------+---------+--------+-------------//-+\n\
    \                                   <--- Original Packet --->\n              \
    \  <---          Tunneled Packet           --->\n   Note that the outer header\
    \ (including the SRH) is added and removed\n   by the RPL router.\n   Case 2 also\
    \ occurs whenever a RPL router needs to insert a source\n   route when forwarding\
    \ a datagram.  One such use case with RPL is to\n   have all RPL traffic flow\
    \ through a Border Router and have the Border\n   Router use source routes to\
    \ deliver datagrams to their final\n   destination.  When including the SRH using\
    \ tunneled mode, the Border\n   Router would encapsulate the received datagram\
    \ unmodified using IPv6-\n   in-IPv6 and include an SRH in the outer IPv6 header.\n\
    \                           +-----------------+\n                           |\
    \                 |\n                           |  (S) -------\\   |\n       \
    \                    |              \\  |\n                           |      \
    \         (LBR)\n                           |              /  |\n            \
    \               |  (D) <------/   |\n                           |            \
    \     |\n                           +-----------------+\n                    \
    \       RPL Routing Domain\n   In the above scenario, datagrams travel from S\
    \ to D through the Low-\n   Power and Lossy Network Border Router (LBR).  Between\
    \ S and the LBR,\n   the datagrams are routed using the DAG built by the RPL and\
    \ do not\n   contain an SRH.  The LBR encapsulates received datagrams unmodified\n\
    \   using IPv6-in-IPv6 and the SRH is included in the outer IPv6 header.\n"
- title: 3.  Format of the RPL Routing Header
  contents:
  - "3.  Format of the RPL Routing Header\n   The Source Routing Header has the following\
    \ format:\n      0                   1                   2                   3\n\
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |  Next Header  |  Hdr Ext Len  | Routing Type  | Segments Left |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     | CmprI\
    \ | CmprE |  Pad  |               Reserved                |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ .                                                               .\n     .  \
    \                      Addresses[1..n]                        .\n     .      \
    \                                                         .\n     |          \
    \                                                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Next Header         8-bit selector.  Identifies the type of header\n     \
    \                  immediately following the Routing header.  Uses\n         \
    \              the same values as the IPv6 Next Header field\n               \
    \        [RFC2460].\n   Hdr Ext Len         8-bit unsigned integer.  Length of\
    \ the Routing\n                       header in 8-octet units, not including the\
    \ first\n                       8 octets.  Note that when Addresses[1..n] are\n\
    \                       compressed (i.e., value of CmprI or CmprE is not\n   \
    \                    0), Hdr Ext Len does not equal twice the number\n       \
    \                of Addresses.\n   Routing Type        8-bit selector.  Identifies\
    \ the particular\n                       Routing header variant.  An SRH should\
    \ set the\n                       Routing Type to 3.\n   Segments Left       8-bit\
    \ unsigned integer.  Number of route segments\n                       remaining,\
    \ i.e., number of explicitly listed\n                       intermediate nodes\
    \ still to be visited before\n                       reaching the final destination.\
    \  The originator\n                       of an SRH sets this field to n, the\
    \ number of\n                       addresses contained in Addresses[1..n].\n\
    \   CmprI               4-bit unsigned integer.  Number of prefix octets\n   \
    \                    from each segment, except than the last segment,\n      \
    \                 (i.e., segments 1 through n-1) that are elided.\n          \
    \             For example, an SRH carrying full IPv6 addresses\n             \
    \          in Addresses[1..n-1] sets CmprI to 0.\n   CmprE               4-bit\
    \ unsigned integer.  Number of prefix octets\n                       from the\
    \ last segment (i.e., segment n) that are\n                       elided.  For\
    \ example, an SRH carrying a full IPv6\n                       address in Addresses[n]\
    \ sets CmprE to 0.\n   Pad                 4-bit unsigned integer.  Number of\
    \ octets that\n                       are used for padding after Address[n] at\
    \ the end\n                       of the SRH.\n   Reserved            This field\
    \ is unused.  It MUST be initialized to\n                       zero by the sender\
    \ and MUST be ignored by the\n                       receiver.\n   Address[1..n]\
    \       Vector of addresses, numbered 1 to n.  Each\n                       vector\
    \ element in [1..n-1] has size (16 - CmprI)\n                       and element\
    \ [n] has size (16-CmprE).  The\n                       originator of an SRH places\
    \ the next (first)\n                       hop's IPv6 address in the IPv6 header's\
    \ IPv6\n                       Destination Address and the second hop's IPv6\n\
    \                       address as the first address in Address[1..n]\n      \
    \                 (i.e., Address[1]).\n   The SRH shares the same basic format\
    \ as the Type 0 Routing header\n   [RFC2460].  When carrying full IPv6 addresses,\
    \ the CmprI, CmprE, and\n   Pad fields are set to 0 and the only difference between\
    \ the SRH and\n   Type 0 encodings is the value of the Routing Type field.\n \
    \  A common network configuration for a RPL routing domain is that all\n   routers\
    \ within a RPL routing domain share a common prefix.  The SRH\n   introduces the\
    \ CmprI, CmprE, and Pad fields to allow compaction of\n   the Address[1..n] vector\
    \ when all entries share the same prefix as\n   the IPv6 Destination Address field\
    \ of the packet carrying the SRH.\n   The CmprI and CmprE fields indicate the\
    \ number of prefix octets that\n   are shared with the IPv6 Destination Address\
    \ of the packet carrying\n   the SRH.  The shared prefix octets are not carried\
    \ within the Routing\n   header and each entry in Address[1..n-1] has size (16\
    \ - CmprI) octets\n   and Address[n] has size (16 - CmprE) octets.  When CmprI\
    \ or CmprE is\n   non-zero, there may exist unused octets between the last entry,\n\
    \   Address[n], and the end of the Routing header.  The Pad field\n   indicates\
    \ the number of unused octets that are used for padding.\n   Note that when CmprI\
    \ and CmprE are both 0, Pad MUST carry a value of\n   0.\n   The SRH MUST NOT\
    \ specify a path that visits a node more than once.\n   When generating an SRH,\
    \ the source may not know the mapping between\n   IPv6 addresses and nodes.  Minimally,\
    \ the source MUST ensure that\n   IPv6 addresses do not appear more than once\
    \ and the IPv6 Source and\n   Destination addresses of the encapsulating datagram\
    \ do not appear in\n   the SRH.\n   Multicast addresses MUST NOT appear in an\
    \ SRH or in the IPv6\n   Destination Address field of a datagram carrying an SRH.\n"
- title: 4.  RPL Router Behavior
  contents:
  - '4.  RPL Router Behavior

    '
- title: 4.1.  Generating Source Routing Headers
  contents:
  - "4.1.  Generating Source Routing Headers\n   To deliver an IPv6 datagram to its\
    \ destination, a router may need to\n   generate a new SRH and specify a strict\
    \ source route.  When the\n   router is the source of the original packet and\
    \ the destination is\n   known to be within the same RPL routing domain, the router\
    \ SHOULD\n   include the SRH directly within the original packet.  Otherwise,\
    \ the\n   router MUST use IPv6-in-IPv6 tunneling [RFC2473] and place the SRH in\n\
    \   the tunnel header.  Using IPv6-in-IPv6 tunneling ensures that the\n   delivered\
    \ datagram remains unmodified and that ICMPv6 errors\n   generated by an SRH are\
    \ sent back to the router that generated the\n   SRH.\n   When using IPv6-in-IPv6\
    \ tunneling, in order to respect the IPv6 Hop\n   Limit value of the original\
    \ datagram, a RPL router generating an SRH\n   MUST set the Segments Left to less\
    \ than the original datagram's IPv6\n   Hop Limit value upon forwarding.  In the\
    \ case that the source route\n   is longer than the original datagram's IPv6 Hop\
    \ Limit, only the\n   initial hops (determined by the original datagram's IPv6\
    \ Hop Limit)\n   should be included in the SRH.  If the RPL router is not the\
    \ source\n   of the original datagram, the original datagram's IPv6 Hop Limit\n\
    \   field is decremented before generating the SRH.  After generating the\n  \
    \ SRH, the RPL router decrements the original datagram's IPv6 Hop Limit\n   value\
    \ by the SRH Segments Left value.  Processing the SRH Segments\n   Left and original\
    \ datagram's IPv6 Hop Limit fields in this way\n   ensures that ICMPv6 Time Exceeded\
    \ errors occur as would be expected\n   on more traditional IPv6 networks that\
    \ forward datagrams without\n   tunneling.\n   To avoid fragmentation, it is desirable\
    \ to employ MTU sizes that\n   allow for the header expansion (i.e., at least\
    \ 1280 + 40 (outer IP\n   header) + SRH_MAX_SIZE), where SRH_MAX_SIZE is the maximum\
    \ path\n   length for a given RPL network.  To take advantage of this, however,\n\
    \   the communicating endpoints need to be aware of the MTU along the\n   path\
    \ (i.e., through Path MTU Discovery).  Unfortunately, the larger\n   MTU size\
    \ may not be available on all links (e.g., 1280 octets on IPv6\n   Low-Power Wireless\
    \ Personal Area Network (6LoWPAN) links).  However,\n   it is expected that much\
    \ of the traffic on these types of networks\n   consists of much smaller messages\
    \ than the MTU, so performance\n   degradation through fragmentation would be\
    \ limited.\n"
- title: 4.2.  Processing Source Routing Headers
  contents:
  - "4.2.  Processing Source Routing Headers\n   As specified in [RFC2460], a routing\
    \ header is not examined or\n   processed until it reaches the node identified\
    \ in the Destination\n   Address field of the IPv6 header.  In that node, dispatching\
    \ on the\n   Next Header field of the immediately preceding header causes the\n\
    \   Routing header module to be invoked.\n   The function of the SRH is intended\
    \ to be very similar to the Type 0\n   Routing header defined in [RFC2460].  After\
    \ the routing header has\n   been processed and the IPv6 datagram resubmitted\
    \ to the IPv6 module\n   for processing, the IPv6 Destination Address contains\
    \ the next hop's\n   address.  When forwarding an IPv6 datagram that contains\
    \ an SRH with\n   a non-zero Segments Left value, if the IPv6 Destination Address\
    \ is\n   not on-link, a router MUST drop the datagram and SHOULD send an ICMP\n\
    \   Destination Unreachable (ICMPv6 Type 1) message with ICMPv6 Code set\n   to\
    \ 7 to the packet's Source Address.  This ICMPv6 Code indicates that\n   the IPv6\
    \ Destination Address is not on-link and the router cannot\n   satisfy the strict\
    \ source route requirement.  When generating ICMPv6\n   error messages, the rules\
    \ in Section 2.4 of [RFC4443] MUST be\n   observed.\n   To detect loops in the\
    \ SRH, a router MUST determine if the SRH\n   includes multiple addresses assigned\
    \ to any interface on that router.\n   If such addresses appear more than once\
    \ and are separated by at least\n   one address not assigned to that router, the\
    \ router MUST drop the\n   packet and SHOULD send an ICMP Parameter Problem, Code\
    \ 0, to the\n   Source Address.  While this loop check does add significant per-\n\
    \   packet processing overhead, it is required to mitigate bandwidth\n   exhaustion\
    \ attacks that led to the deprecation of RH0 [RFC5095].\n   The following describes\
    \ the algorithm performed when processing an\n   SRH:\n   if Segments Left = 0\
    \ {\n      proceed to process the next header in the packet, whose type is\n \
    \     identified by the Next Header field in the Routing header\n   }\n   else\
    \ {\n      compute n, the number of addresses in the Routing header, by\n    \
    \  n = (((Hdr Ext Len * 8) - Pad - (16 - CmprE)) / (16 - CmprI)) + 1\n      if\
    \ Segments Left is greater than n {\n         send an ICMP Parameter Problem,\
    \ Code 0, message to the Source\n         Address, pointing to the Segments Left\
    \ field, and discard the\n         packet\n      }\n      else {\n         decrement\
    \ Segments Left by 1\n         compute i, the index of the next address to be\
    \ visited in\n         the address vector, by subtracting Segments Left from n\n\
    \         if Address[i] or the IPv6 Destination Address is multicast {\n     \
    \       discard the packet\n         }\n         else if 2 or more entries in\
    \ Address[1..n] are assigned to\n                 local interface and are separated\
    \ by at least one\n                 address not assigned to local interface {\n\
    \            send an ICMP Parameter Problem (Code 0) and discard the\n       \
    \     packet\n         }\n         else {\n            swap the IPv6 Destination\
    \ Address and Address[i]\n            if the IPv6 Hop Limit is less than or equal\
    \ to 1 {\n               send an ICMP Time Exceeded -- Hop Limit Exceeded in\n\
    \               Transit message to the Source Address and discard the\n      \
    \         packet\n            }\n            else {\n               decrement\
    \ the Hop Limit by 1\n               resubmit the packet to the IPv6 module for\
    \ transmission\n               to the new destination\n            }\n       \
    \  }\n      }\n   }\n   RPL routers are responsible for ensuring that an SRH is\
    \ only used\n   between RPL routers:\n   1.  For datagrams destined to a RPL router,\
    \ the router processes the\n       packet in the usual way.  For instance, if\
    \ the SRH was included\n       using tunneled mode and the RPL router serves as\
    \ the tunnel\n       endpoint, the router removes the outer IPv6 header, at the\
    \ same\n       time removing the SRH as well.\n   2.  Datagrams destined elsewhere\
    \ within the same RPL routing domain\n       are forwarded to the correct interface.\n\
    \   3.  Datagrams destined to nodes outside the RPL routing domain are\n     \
    \  dropped if the outermost IPv6 header contains an SRH not\n       generated\
    \ by the RPL router forwarding the datagram.\n"
- title: 5.  Security Considerations
  contents:
  - '5.  Security Considerations

    '
- title: 5.1.  Source Routing Attacks
  contents:
  - "5.1.  Source Routing Attacks\n   The RPL message security mechanisms defined\
    \ in [RFC6550] do not apply\n   to the RPL Source Route Header.  This specification\
    \ does not provide\n   any confidentiality, integrity, or authenticity mechanisms\
    \ to protect\n   the SRH.\n   [RFC5095] deprecates the Type 0 Routing header due\
    \ to a number of\n   significant attacks that are referenced in that document.\
    \  Such\n   attacks include bypassing filtering devices, reaching otherwise\n\
    \   unreachable Internet systems, network topology discovery, bandwidth\n   exhaustion,\
    \ and defeating anycast.\n   Because this document specifies that the SRH is only\
    \ for use within a\n   RPL routing domain, such attacks cannot be mounted from\
    \ outside a RPL\n   routing domain.  As specified in this document, RPL routers\
    \ MUST drop\n   datagrams entering or exiting a RPL routing domain that contain\
    \ an\n   SRH in the IPv6 Extension headers.\n   Such attacks, however, can be\
    \ mounted from within a RPL routing\n   domain.  To mitigate bandwidth exhaustion\
    \ attacks, this specification\n   requires RPL routers to check for loops in the\
    \ SRH and drop datagrams\n   that contain such loops.  Attacks that include bypassing\
    \ filtering\n   devices and reaching otherwise unreachable Internet systems are\
    \ not\n   as relevant in mesh networks since the topologies are, by their very\n\
    \   nature, highly dynamic.  The RPL routing protocol is designed to\n   provide\
    \ reachability to all devices within a RPL routing domain and\n   may utilize\
    \ routes that traverse any number of devices in any order.\n   Even so, these\
    \ attacks and others (e.g., defeating anycast and\n   routing topology discovery)\
    \ can occur within a RPL routing domain\n   when using this specification.\n"
- title: 5.2.  ICMPv6 Attacks
  contents:
  - "5.2.  ICMPv6 Attacks\n   The generation of ICMPv6 error messages may be used\
    \ to attempt\n   denial-of-service attacks by sending an error-causing SRH in\
    \ back-to-\n   back datagrams.  An implementation that correctly follows Section\
    \ 2.4\n   of [RFC4443] would be protected by the ICMPv6 rate-limiting\n   mechanism.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document defines a new IPv6 Routing Type, the\
    \ \"RPL Source Route\n   Header\", and has been assigned number 3 by IANA.\n \
    \  This document defines a new ICMPv6 Destination Unreachable Code,\n   \"Error\
    \ in Source Routing Header\", and has been assigned number 7 by\n   IANA.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The authors thank Jari Arkko, Ralph Droms, Adrian Farrel,\
    \ Stephen\n   Farrell, Richard Kelsey, Suresh Krishnan, Erik Nordmark, Pascal\n\
    \   Thubert, Sean Turner, and Tim Winter for their comments and\n   suggestions\
    \ that helped shape this document.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2460]  Deering, S. and R. Hinden, \"Internet Protocol, Version\
    \ 6\n              (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC2473]\
    \  Conta, A. and S. Deering, \"Generic Packet Tunneling in\n              IPv6\
    \ Specification\", RFC 2473, December 1998.\n   [RFC4443]  Conta, A., Deering,\
    \ S., and M. Gupta, \"Internet Control\n              Message Protocol (ICMPv6)\
    \ for the Internet Protocol\n              Version 6 (IPv6) Specification\", RFC\
    \ 4443, March 2006.\n   [RFC5095]  Abley, J., Savola, P., and G. Neville-Neil,\
    \ \"Deprecation\n              of Type 0 Routing Headers in IPv6\", RFC 5095,\n\
    \              December 2007.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC6550]  Winter, T., Ed., Thubert, P., Ed.,\
    \ Brandt, A., Hui, J.,\n              Kelsey, R., Levis, P., Pister, K., Struik,\
    \ R., Vasseur,\n              JP., and R. Alexander, \"RPL: IPv6 Routing Protocol\
    \ for\n              Low-Power and Lossy Networks\", RFC 6550, March 2012.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jonathan W. Hui\n   Cisco Systems\n   170 West Tasman\
    \ Drive\n   San Jose, California  95134\n   USA\n   Phone: +408 424 1547\n   EMail:\
    \ jonhui@cisco.com\n   JP. Vasseur\n   Cisco Systems\n   11, Rue Camille Desmoulins\n\
    \   Issy Les Moulineaux  92782\n   France\n   EMail: jpv@cisco.com\n   David E.\
    \ Culler\n   UC Berkeley\n   465 Soda Hall\n   Berkeley, California  94720\n \
    \  USA\n   Phone: +510 643 7572\n   EMail: culler@cs.berkeley.edu\n   Vishwas\
    \ Manral\n   Hewlett Packard Co.\n   19111 Pruneridge Ave.\n   Cupertino, California\
    \  95014\n   USA\n   EMail: vishwas.manral@hp.com\n"
