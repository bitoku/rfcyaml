- title: __initial_text__
  contents:
  - ''
- title: 'Requests for Comments: 2740                                Siara Systems'
  contents:
  - "Requests for Comments: 2740                                Siara Systems\n  \
    \                           OSPF for IPv6\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the modifications to OSPF to support version\n\
    \   6 of the Internet Protocol (IPv6).  The fundamental mechanisms of\n   OSPF\
    \ (flooding, DR election, area support, SPF calculations, etc.)\n   remain unchanged.\
    \ However, some changes have been necessary, either\n   due to changes in protocol\
    \ semantics between IPv4 and IPv6, or simply\n   to handle the increased address\
    \ size of IPv6.\n   Changes between OSPF for IPv4 and this document include the\n\
    \   following. Addressing semantics have been removed from OSPF packets\n   and\
    \ the basic LSAs. New LSAs have been created to carry IPv6\n   addresses and prefixes.\
    \ OSPF now runs on a per-link basis, instead of\n   on a per-IP-subnet basis.\
    \ Flooding scope for LSAs has been\n   generalized. Authentication has been removed\
    \ from the OSPF protocol\n   itself, instead relying on IPv6's Authentication\
    \ Header and\n   Encapsulating Security Payload.\n   Most packets in OSPF for\
    \ IPv6 are almost as compact as those in OSPF\n   for IPv4, even with the larger\
    \ IPv6 addresses. Most field-XSand\n   packet-size limitations present in OSPF\
    \ for IPv4 have been relaxed.\n   In addition, option handling has been made more\
    \ flexible.\n   All of OSPF for IPv4's optional capabilities, including on-demand\n\
    \   circuit support, NSSA areas, and the multicast extensions to OSPF\n   (MOSPF)\
    \ are also supported in OSPF for IPv6.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1        Introduction ...........................................\
    \ 4\n   1.1      Terminology ............................................ 4\n\
    \   2        Differences from OSPF for IPv4 ......................... 4\n   2.1\
    \      Protocol processing per-link, not per-subnet ........... 5\n   2.2    \
    \  Removal of addressing semantics ........................ 5\n   2.3      Addition\
    \ of Flooding scope ............................. 5\n   2.4      Explicit support\
    \ for multiple instances per link ....... 6\n   2.5      Use of link-local addresses\
    \ ............................ 6\n   2.6      Authentication changes .................................\
    \ 7\n   2.7      Packet format changes .................................. 7\n\
    \   2.8      LSA format changes ..................................... 8\n   2.9\
    \      Handling unknown LSA types ............................ 10\n   2.10   \
    \  Stub area support ..................................... 10\n   2.11     Identifying\
    \ neighbors by Router ID .................... 11\n   3        Implementation details\
    \ ................................ 11\n   3.1      Protocol data structures ..............................\
    \ 12\n   3.1.1    The Area Data structure ............................... 13\n\
    \   3.1.2    The Interface Data structure .......................... 13\n   3.1.3\
    \    The Neighbor Data Structure ........................... 14\n   3.2      Protocol\
    \ Packet Processing ............................ 15\n   3.2.1    Sending protocol\
    \ packets .............................. 15\n   3.2.1.1  Sending Hello packets\
    \ ................................. 16\n   3.2.1.2  Sending Database Description\
    \ Packets .................. 17\n   3.2.2    Receiving protocol packets ............................\
    \ 17\n   3.2.2.1  Receiving Hello Packets ............................... 19\n\
    \   3.3      The Routing table Structure ........................... 19\n   3.3.1\
    \    Routing table lookup .................................. 20\n   3.4      Link\
    \ State Advertisements ............................. 20\n   3.4.1    The LSA Header\
    \ ........................................ 21\n   3.4.2    The link-state database\
    \ ............................... 22\n   3.4.3    Originating LSAs ......................................\
    \ 22\n   3.4.3.1  Router-LSAs ........................................... 25\n\
    \   3.4.3.2  Network-LSAs .......................................... 27\n   3.4.3.3\
    \  Inter-Area-Prefix-LSAs ................................ 28\n   3.4.3.4  Inter-Area-Router-LSAs\
    \ ................................ 29\n   3.4.3.5  AS-external-LSAs ......................................\
    \ 29\n   3.4.3.6  Link-LSAs ............................................. 31\n\
    \   3.4.3.7  Intra-Area-Prefix-LSAs ................................ 32\n   3.5\
    \      Flooding .............................................. 35\n   3.5.1  \
    \  Receiving Link State Update packets ................... 36\n   3.5.2    Sending\
    \ Link State Update packets ..................... 36\n   3.5.3    Installing LSAs\
    \ in the database ....................... 38\n   3.6      Definition of self-originated\
    \ LSAs .................... 39\n   3.7      Virtual links .........................................\
    \ 39\n   3.8      Routing table calculation ............................. 39\n\
    \   3.8.1    Calculating the shortest path tree for an area ........ 40\n   3.8.1.1\
    \  The next hop calculation .............................. 41\n   3.8.2    Calculating\
    \ the inter-area routes ..................... 42\n   3.8.3    Examining transit\
    \ areas' summary-LSAs ................. 42\n   3.8.4    Calculating AS external\
    \ routes ........................ 42\n   3.9      Multiple interfaces to a single\
    \ link .................. 43\n            References ............................................\
    \ 44\n   A        OSPF data formats ..................................... 46\n\
    \   A.1      Encapsulation of OSPF packets ......................... 46\n   A.2\
    \      The Options field ..................................... 47\n   A.3    \
    \  OSPF Packet Formats ................................... 48\n   A.3.1    The\
    \ OSPF packet header ................................ 49\n   A.3.2    The Hello\
    \ packet ...................................... 50\n   A.3.3    The Database Description\
    \ packet ....................... 52\n   A.3.4    The Link State Request packet\
    \ ......................... 54\n   A.3.5    The Link State Update packet ..........................\
    \ 55\n   A.3.6    The Link State Acknowledgment packet .................. 56\n\
    \   A.4      LSA formats ........................................... 57\n   A.4.1\
    \    IPv6 Prefix Representation ............................ 58\n   A.4.1.1  Prefix\
    \ Options ........................................ 58\n   A.4.2    The LSA header\
    \ ........................................ 59\n   A.4.2.1  LS type ...............................................\
    \ 60\n   A.4.3    Router-LSAs ........................................... 61\n\
    \   A.4.4    Network-LSAs .......................................... 64\n   A.4.5\
    \    Inter-Area-Prefix-LSAs ................................ 65\n   A.4.6    Inter-Area-Router-LSAs\
    \ ................................ 66\n   A.4.7    AS-external-LSAs ......................................\
    \ 67\n   A.4.8    Link-LSAs ............................................. 69\n\
    \   A.4.9    Intra-Area-Prefix-LSAs ................................ 71\n   B\
    \        Architectural Constants ............................... 73\n   C    \
    \    Configurable Constants ................................ 73\n   C.1      Global\
    \ parameters ..................................... 73\n   C.2      Area parameters\
    \ ....................................... 74\n   C.3      Router interface parameters\
    \ ........................... 75\n   C.4      Virtual link parameters ...............................\
    \ 77\n   C.5      NBMA network parameters ............................... 77\n\
    \   C.6      Point-to-MultiPoint network parameters ................ 78\n   C.7\
    \      Host route parameters ................................. 78\n          \
    \  Security Considerations ............................... 79\n            Authors'\
    \ Addresses .................................... 79\n            Full Copyright\
    \ Statement .............................. 80\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes the modifications to OSPF to support\
    \ version\n   6 of the Internet Protocol (IPv6).  The fundamental mechanisms of\n\
    \   OSPF (flooding, DR election, area support, SPF calculations, etc.)\n   remain\
    \ unchanged. However, some changes have been necessary, either\n   due to changes\
    \ in protocol semantics between IPv4 and IPv6, or simply\n   to handle the increased\
    \ address size of IPv6.\n   This document is organized as follows. Section 2 describes\
    \ the\n   differences between OSPF for IPv4 and OSPF for IPv6 in detail.\n   Section\
    \ 3 provides implementation details for the changes. Appendix A\n   gives the\
    \ OSPF for IPv6 packet and LSA formats. Appendix B lists the\n   OSPF architectural\
    \ constants. Appendix C describes configuration\n   parameters.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document attempts to use terms from both the OSPF\
    \ for IPv4\n   specification ([Ref1]) and the IPv6 protocol specifications\n \
    \  ([Ref14]). This has produced a mixed result. Most of the terms used\n   both\
    \ by OSPF and IPv6 have roughly the same meaning (e.g.,\n   interfaces). However,\
    \ there are a few conflicts. IPv6 uses \"link\"\n   similarly to IPv4 OSPF's \"\
    subnet\" or \"network\". In this case, we have\n   chosen to use IPv6's \"link\"\
    \ terminology. \"Link\" replaces OSPF's\n   \"subnet\" and \"network\" in most\
    \ places in this document, although\n   OSPF's Network-LSA remains unchanged (and\
    \ possibly unfortunately, a\n   new Link-LSA has also been created).\n   The names\
    \ of some of the OSPF LSAs have also changed. See Section 2.8\n   for details.\n"
- title: 2.  Differences from OSPF for IPv4
  contents:
  - "2.  Differences from OSPF for IPv4\n   Most of the algorithms from OSPF for IPv4\
    \ [Ref1] have preserved in\n   OSPF for IPv6. However, some changes have been\
    \ necessary, either due\n   to changes in protocol semantics between IPv4 and\
    \ IPv6, or simply to\n   handle the increased address size of IPv6.\n   The following\
    \ subsections describe the differences between this\n   document and [Ref1].\n"
- title: 2.1.  Protocol processing per-link, not per-subnet
  contents:
  - "2.1.  Protocol processing per-link, not per-subnet\n   IPv6 uses the term \"\
    link\" to indicate \"a communication facility or\n   medium over which nodes can\
    \ communicate at the link layer\" ([Ref14]).\n   \"Interfaces\" connect to links.\
    \ Multiple IP subnets can be assigned to\n   a single link, and two nodes can\
    \ talk directly over a single link,\n   even if they do not share a common IP\
    \ subnet (IPv6 prefix).\n   For this reason, OSPF for IPv6 runs per-link instead\
    \ of the IPv4\n   behavior of per-IP-subnet. The terms \"network\" and \"subnet\"\
    \ used in\n   the IPv4 OSPF specification ([Ref1]) should generally be relaced\
    \ by\n   link. Likewise, an OSPF interface now connects to a link instead of\n\
    \   an IP subnet, etc.\n   This change affects the receiving of OSPF protocol\
    \ packets, and the\n   contents of Hello Packets and Network-LSAs.\n"
- title: 2.2.  Removal of addressing semantics
  contents:
  - "2.2.  Removal of addressing semantics\n   In OSPF for IPv6, addressing semantics\
    \ have been removed from the\n   OSPF protocol packets and the main LSA types,\
    \ leaving a network-\n   protocol-independent core. In particular:\n   o   IPv6\
    \ Addresses are not present in OSPF packets, except in\n       LSA payloads carried\
    \ by the Link State Update Packets. See\n       Section 2.7 for details.\n   o\
    \   Router-LSAs and Network-LSAs no longer contain network\n       addresses,\
    \ but simply express topology information. See\n       Section 2.8 for details.\n\
    \   o   OSPF Router IDs, Area IDs and LSA Link State IDs remain at\n       the\
    \ IPv4 size of 32-bits. They can no longer be assigned as\n       (IPv6) addresses.\n\
    \   o   Neighboring routers are now always identified by Router ID,\n       where\
    \ previously they had been identified by IP address on\n       broadcast and NBMA\
    \ \"networks\".\n"
- title: 2.3.  Addition of Flooding scope
  contents:
  - "2.3.  Addition of Flooding scope\n   Flooding scope for LSAs has been generalized\
    \ and is now explicitly\n   coded in the LSA's LS type field. There are now three\
    \ separate\n   flooding scopes for LSAs:\n   o   Link-local scope. LSA is flooded\
    \ only on the local link, and\n       no further. Used for the new Link-LSA (see\
    \ Section A.4.8).\n   o   Area scope. LSA is flooded throughout a single OSPF\
    \ area\n       only. Used for Router-LSAs, Network-LSAs, Inter-Area-Prefix-\n\
    \       LSAs, Inter-Area-Router-LSAs and Intra-Area-Prefix-LSAs.\n   o   AS scope.\
    \ LSA is flooded throughout the routing domain. Used\n       for AS-external-LSAs.\n"
- title: 2.4.  Explicit support for multiple instances per link
  contents:
  - "2.4.  Explicit support for multiple instances per link\n   OSPF now supports\
    \ the ability to run multiple OSPF protocol instances\n   on a single link. For\
    \ example, this may be required on a NAP segment\n   shared between several providers\
    \ -- providers may be running separate\n   OSPF routing domains that want to remain\
    \ separate even though they\n   have one or more physical network segments (i.e.,\
    \ links) in common.\n   In OSPF for IPv4 this was supported in a haphazard fashion\
    \ using the\n   authentication fields in the OSPF for IPv4 header.\n   Another\
    \ use for running multiple OSPF instances is if you want, for\n   one reason or\
    \ another, to have a single link belong to two or more\n   OSPF areas.\n   Support\
    \ for multiple protocol instances on a link is accomplished via\n   an \"Instance\
    \ ID\" contained in the OSPF packet header and OSPF\n   interface structures.\
    \ Instance ID solely affects the reception of\n   OSPF packets.\n"
- title: 2.5.  Use of link-local addresses
  contents:
  - "2.5.  Use of link-local addresses\n   IPv6 link-local addresses are for use on\
    \ a single link, for purposes\n   of neighbor discovery, auto-configuration, etc.\
    \ IPv6 routers do not\n   forward IPv6 datagrams having link-local source addresses\
    \ [Ref15].\n   Link-local unicast addresses are assigned from the IPv6 address\
    \ range\n   FF80/10.\n   OSPF for IPv6 assumes that each router has been assigned\
    \ link-local\n   unicast addresses on each of the router's attached physical segments.\n\
    \   On all OSPF interfaces except virtual links, OSPF packets are sent\n   using\
    \ the interface's associated link-local unicast address as\n   source.  A router\
    \ learns the link-local addresses of all other\n   routers attached to its links,\
    \ and uses these addresses as next hop\n   information during packet forwarding.\n\
    \   On virtual links, global scope or site-local IP addresses must be\n   used\
    \ as the source for OSPF protocol packets.\n   Link-local addresses appear in\
    \ OSPF Link-LSAs (see Section 3.4.3.6).\n   However, link-local addresses are\
    \ not allowed in other OSPF LSA\n   types.  In particular, link-local addresses\
    \ must not be advertised in\n   inter-area-prefix-LSAs (Section 3.4.3.3), AS-external-LSAs\
    \ (Section\n   3.4.3.5) or intra-area-prefix-LSAs (Section 3.4.3.7).\n"
- title: 2.6.  Authentication changes
  contents:
  - "2.6.  Authentication changes\n   In OSPF for IPv6, authentication has been removed\
    \ from OSPF itself.\n   The \"AuType\" and \"Authentication\" fields have been\
    \ removed from the\n   OSPF packet header, and all authentication related fields\
    \ have been\n   removed from the OSPF area and interface structures.\n   When\
    \ running over IPv6, OSPF relies on the IP Authentication Header\n   (see [Ref19])\
    \ and the IP Encapsulating Security Payload (see [Ref20])\n   to ensure integrity\
    \ and authentication/confidentiality of routing\n   exchanges.\n   Protection\
    \ of OSPF packet exchanges against accidental data\n   corruption is provided\
    \ by the standard IPv6 16-bit one's complement\n   checksum, covering the entire\
    \ OSPF packet and prepended IPv6 pseudo-\n   header (see Section A.3.1).\n"
- title: 2.7.  Packet format changes
  contents:
  - "2.7.  Packet format changes\n   OSPF for IPv6 runs directly over IPv6. Aside\
    \ from this, all\n   addressing semantics have been removed from the OSPF packet\
    \ headers,\n   making it essentially \"network-protocol-independent\".  All addressing\n\
    \   information is now contained in the various LSA types only.\n   In detail,\
    \ changes in OSPF packet format consist of the following:\n   o  The OSPF version\
    \ number has been increased from 2 to 3.\n   o  The Options field in Hello Packets\
    \ and Database description Packet\n      has been expanded to 24-bits.\n   o \
    \ The Authentication and AuType fields have been removed from the\n      OSPF\
    \ packet header (see Section 2.6).\n   o  The Hello packet now contains no address\
    \ information at all, and\n      includes an Interface ID which the originating\
    \ router has assigned\n      to uniquely identify (among its own interfaces) its\
    \ interface to\n      the link.  This Interface ID becomes the Netowrk-LSA's Link\
    \ State\n      ID, should the router become Designated-Router on the link.\n \
    \  o  Two option bits, the \"R-bit\" and the \"V6-bit\", have been added to\n\
    \      the  Options field for processing Router-LSAs during the SPF\n      calculation\
    \ (see Section A.2).  If the \"R-bit\" is clear an OSPF\n      speaker can participate\
    \ in OSPF topology distribution without\n      being used to forward transit traffic;\
    \ this can be used in multi-\n      homed hosts that want to participate in the\
    \ routing protocol. The\n      V6-bit specializes the R-bit; if the V6-bit is\
    \ clear an OSPF\n      speaker can participate in OSPF topology distribution without\n\
    \      being used to forward IPv6 datagrams. If the R-bit is set and the\n   \
    \   V6-bit is clear, IPv6 datagrams are not forwarded but diagrams\n      belonging\
    \ to another protocol family may be forwarded.\n   o  TheOSPF packet header now\
    \ includes an \"Instance ID\" which allows\n      multiple OSPF protocol instances\
    \ to be run on a single link (see\n      Section 2.4).\n"
- title: 2.8.  LSA format changes
  contents:
  - "2.8.  LSA format changes\n   All addressing semantics have been removed from\
    \ the LSA header, and\n   from Router-LSAs and Network-LSAs. These two LSAs now\
    \ describe the\n   routing domain's topology in a network-protocol-independent\
    \ manner.\n   New LSAs have been added to distribute IPv6 address information,\
    \ and\n   data required for next hop resolution.  The names of some of IPv4's\n\
    \   LSAs have been changed to be more consistent with each other.\n   In detail,\
    \ changes in LSA format consist of the following:\n   o  The Options field has\
    \ been removed from the LSA header, expanded\n      to 24 bits, and moved into\
    \ the body of Router-LSAs, Network-LSAs,\n      Inter-Area-Router-LSAs and Link-LSAs.\
    \ See Section A.2 for details.\n   o  The LSA Type field has been expanded (into\
    \ the former Options\n      space) to 16 bits, with the upper three bits encoding\
    \ flooding\n      scope and the handling of unknown LSA types (see Section 2.9).\n\
    \   o  Addresses in LSAs are now expressed as [prefix, prefix length]\n      instead\
    \ of [address, mask] (see Section A.4.1). The default route\n      is expressed\
    \ as a prefix with length 0.\n   o  The Router and Network LSAs now have no address\
    \ information, and\n      are network-protocol-independent.\n   o  Router interface\
    \ information may be spread across multiple Router\n      LSAs. Receivers must\
    \ concatenate all the Router-LSAs originated by\n      a given router when running\
    \ the SPF calculation.\n   o  A new LSA called the Link-LSA has been introduced.\
    \ The LSAs have\n      local-link flooding scope; they are never flooded beyond\
    \ the link\n      that they are associated with. Link-LSAs have three purposes:\
    \ 1)\n      they provide the router's link-local address to all other routers\n\
    \      attached to the link, 2) they inform other routers attached to the\n  \
    \    link of a list of IPv6 prefixes to associate with the link and 3)\n     \
    \ they allow the router to assert a collection of Options bits to\n      associate\
    \ with the Network-LSA that will be originated for the\n      link.  See Section\
    \ A.4.8 for details.\n      In IPv4, the router-LSA carries a router's IPv4 interface\n\
    \      addresses, the IPv4 equivalent of link-local addresses.  These are\n  \
    \    only used when calculating next hops during the OSPF routing\n      calculation\
    \ (see Section 16.1.1 of [Ref1]), so they do not need to\n      be flooded past\
    \ the local link; hence using link-LSAs to\n      distribute these addresses is\
    \ more efficient. Note that link-local\n      addresses cannot be learned through\
    \ the reception of Hellos in all\n      cases: on NBMA links next hop routers\
    \ do not necessarily exchange\n      hellos, but rather learn of each other's\
    \ existence by way of the\n      Designated Router.\n   o  The Options field in\
    \ the Network LSA is set to the logical OR of\n      the Options that each router\
    \ on the link advertises in its Link-\n      LSA.\n   o  Type-3 summary-LSAs have\
    \ been renamed \"Inter-Area-Prefix-LSAs\".\n      Type-4 summary LSAs have been\
    \ renamed \"Inter-Area-Router-LSAs\".\n   o  The Link State ID in Inter-Area-Prefix-LSAs,\
    \ Inter-Area-Router-\n      LSAs and AS-external-LSAs has lost its addressing\
    \ semantics, and\n      now serves solely to identify individual pieces of the\
    \ Link State\n      Database. All addresses or Router IDs that were formerly expressed\n\
    \      by the Link State ID are now carried in the LSA bodies.\n   o  Network-LSAs\
    \ and Link-LSAs are the only LSAs whose Link State ID\n      carries additional\
    \ meaning. For these LSAs, the Link State ID is\n      always the Interface ID\
    \ of the originating router on the link\n      being described. For this reason,\
    \ Network-LSAs and Link-LSAs are\n      now the only LSAs whose size cannot be\
    \ limited: a Network-LSA must\n      list all routers connected to the link, and\
    \ a Link-LSA must list\n      all of a router's addresses on the link.\n   o \
    \ A new LSA called the Intra-Area-Prefix-LSA has been introduced.\n      This\
    \ LSA carries all IPv6 prefix information that in IPv4 is\n      included in Router-LSAs\
    \ and Network-LSAs.  See Section A.4.9 for\n      details.\n   o  Inclusion of\
    \ a forwarding address in AS-external-LSAs is now\n      optional, as is the inclusion\
    \ of an external route tag (see\n      [Ref5]). In addition, AS-external-LSAs\
    \ can now reference another\n      LSA, for inclusion of additional route attributes\
    \ that are outside\n      the scope of the OSPF protocol itself. For example,\
    \ this can be\n      used to attach BGP path attributes to external routes as\
    \ proposed\n      in [Ref10].\n"
- title: 2.9.  Handling unknown LSA types
  contents:
  - "2.9.  Handling unknown LSA types\n   Handling of unknown LSA types has been made\
    \ more flexible so that,\n   based on LS type, unknown LSA types are either treated\
    \ as having\n   link-local flooding scope, or are stored and flooded as if they\
    \ were\n   understood (desirable for things like the proposed External-\n   Attributes-LSA\
    \ in [Ref10]). This behavior is explicitly coded in the\n   LSA Handling bit of\
    \ the link state header's LS type field (see\n   Section A.4.2.1).\n   The IPv4\
    \ OSPF behavior of simply discarding unknown types is\n   unsupported due to the\
    \ desire to mix router capabilities on a single\n   link. Discarding unknown types\
    \ causes problems when the Designated\n   Router supports fewer options than the\
    \ other routers on the link.\n"
- title: 2.10.  Stub area support
  contents:
  - "2.10.  Stub area support\n   In OSPF for IPv4, stub areas were designed to minimize\
    \ link-state\n   database and routing table sizes for the areas' internal routers.\n\
    \   This allows routers with minimal resources to participate in even\n   very\
    \ large OSPF routing domains.\n   In OSPF for IPv6, the concept of stub areas\
    \ is retained. In IPv6, of\n   the mandatory LSA types, stub areas carry only\
    \ router-LSAs, network-\n   LSAs, Inter-Area-Prefix-LSAs, Link-LSAs, and Intra-Area-Prefix-LSAs.\n\
    \   This is the IPv6 equivalent of the LSA types carried in IPv4 stub\n   areas:\
    \ router-LSAs, network-LSAs and type 3 summary-LSAs.\n   However, unlike in IPv4,\
    \ IPv6 allows LSAs with unrecognized LS types\n   to be labeled \"Store and flood\
    \ the LSA, as if type understood\" (see\n   the U-bit in Section A.4.2.1). Uncontrolled\
    \ introduction of such LSAs\n   could cause a stub area's link-state database\
    \ to grow larger than its\n   component routers' capacities.\n   To guard against\
    \ this, the following rule regarding stub areas has\n   been established: an LSA\
    \ whose LS type is unrecognized may only be\n   flooded into/throughout a stub\
    \ area if both a) the LSA has area or\n   link-local flooding scope and b) the\
    \ LSA has U-bit set to 0. See\n   Section 3.5 for details.\n"
- title: 2.11.  Identifying neighbors by Router ID
  contents:
  - "2.11.  Identifying neighbors by Router ID\n   In OSPF for IPv6, neighboring routers\
    \ on a given link are always\n   identified by their OSPF Router ID. This contrasts\
    \ with the IPv4\n   behavior where neighbors on point-to-point networks and virtual\
    \ links\n   are identified by their Router IDs, and neighbors on broadcast, NBMA\n\
    \   and Point-to-MultiPoint links are identified by their IPv4 interface\n   addresses.\n\
    \   This change affects the reception of OSPF packets (see Section 8.2 of\n  \
    \ [Ref1]), the lookup of neighbors (Section 10 of [Ref1]) and the\n   reception\
    \ of Hello Packets (Section 10.5 of [Ref1]).\n   The Router ID of 0.0.0.0 is reserved,\
    \ and should not be used.\n"
- title: 3.  Implementation details
  contents:
  - "3.  Implementation details\n   When going from IPv4 to IPv6, the basic OSPF mechanisms\
    \ remain\n   unchanged from those documented in [Ref1]. These mechanisms are\n\
    \   briefly outlined in Section 4 of [Ref1]. Both IPv6 and IPv4 have a\n   link-state\
    \ database composed of LSAs and synchronized between\n   adjacent routers. Initial\
    \ synchronization is performed through the\n   Database Exchange process, through\
    \ the exchange of Database\n   Description, Link State Request and Link State\
    \ Update packets.\n   Thereafter database synchronization is maintained via flooding,\n\
    \   utilizing Link State Update and Link State Acknowledgment packets.\n   Both\
    \ IPv6 and IPv4 use OSPF Hello Packets to discover and maintain\n   neighbor relationships,\
    \ and to elect Designated Routers and Backup\n   Designated Routers on broadcast\
    \ and NBMA links. The decision as to\n   which neighbor relationships become adjacencies,\
    \ along with the basic\n   ideas behind inter-area routing, importing external\
    \ information in\n   AS-external-LSAs and the various routing calculations are\
    \ also the\n   same.\n   In particular, the following IPv4 OSPF functionality\
    \ described in\n   [Ref1] remains completely unchanged for IPv6:\n   o  Both IPv4\
    \ and IPv6 use OSPF packet types described in Section 4.3\n      of [Ref1], namely:\
    \ Hello, Database Description, Link State\n      Request, Link State Update and\
    \ Link State Acknowledgment packets.\n      While in some cases (e.g., Hello packets)\
    \ their format has changed\n      somewhat, the functions of the various packet\
    \ types remains the\n      same.\n   o  The system requirements for an OSPF implementation\
    \ remain\n      unchanged, although OSPF for IPv6 requires an IPv6 protocol stack\n\
    \      (from the network layer on down) since it runs directly over the\n    \
    \  IPv6 network layer.\n   o  The discovery and maintenance of neighbor relationships,\
    \ and the\n      selection and establishment of adjacencies remain the same. This\n\
    \      includes election of the Designated Router and Backup Designated\n    \
    \  Router on broadcast and NBMA links. These mechanisms are described\n      in\
    \ Sections 7, 7.1, 7.2, 7.3, 7.4 and 7.5 of [Ref1].\n   o  The link types (or\
    \ equivalently, interface types) supported by\n      OSPF remain unchanged, namely:\
    \ point-to-point, broadcast, NBMA,\n      Point-to-MultiPoint and virtual links.\n\
    \   o  The interface state machine, including the list of OSPF interface\n   \
    \   states and events, and the Designated Router and Backup Designated\n     \
    \ Router election algorithm, remain unchanged.  These are described\n      in\
    \ Sections 9.1, 9.2, 9.3 and 9.4 of [Ref1].\n   o  The neighbor state machine,\
    \ including the list of OSPF neighbor\n      states and events, remain unchanged.\
    \ These are described in\n      Sections 10.1, 10.2, 10.3 and 10.4 of [Ref1].\n\
    \   o  Aging of the link-state database, as well as flushing LSAs from\n     \
    \ the routing domain through the premature aging process, remains\n      unchanged\
    \ from the description in Sections 14 and 14.1 of [Ref1].\n   However, some OSPF\
    \ protocol mechanisms have changed, as outlined in\n   Section 2 above. These\
    \ changes are explained in detail in the\n   following subsections, making references\
    \ to the appropriate sections\n   of [Ref1].\n   The following subsections provide\
    \ a recipe for turning an IPv4 OSPF\n   implementation into an IPv6 OSPF implementation.\n"
- title: 3.1.  Protocol data structures
  contents:
  - "3.1.  Protocol data structures\n   The major OSPF data structures are the same\
    \ for both IPv4 and IPv6:\n   areas, interfaces, neighbors, the link-state database\
    \ and the routing\n   table. The top-level data structures for IPv6 remain those\
    \ listed in\n   Section 5 of [Ref1], with the following modifications:\n   o \
    \ All LSAs with known LS type and AS flooding scope appear in the\n      top-level\
    \ data structure, instead of belonging to a specific area\n      or link. AS-external-LSAs\
    \ are the only LSAs defined by this\n      specification which have AS flooding\
    \ scope.  LSAs with unknown LS\n      type, U-bit set to 1 (flood even when unrecognized)\
    \ and AS\n      flooding scope also appear in the top-level data structure.\n"
- title: 3.1.1.  The Area Data structure
  contents:
  - "3.1.1.  The Area Data structure\n   The IPv6 area data structure contains all\
    \ elements defined for IPv4\n   areas in Section 6 of [Ref1]. In addition, all\
    \ LSAs of known type\n   which have area flooding scope are contained in the IPv6\
    \ area data\n   structure. This always includes the following LSA types: router-LSAs,\n\
    \   network-LSAs, inter-area-prefix-LSAs, inter-area-router-LSAs and\n   intra-area-prefix-LSAs.\
    \ LSAs with unknown LS type, U-bit set to 1\n   (flood even when unrecognized)\
    \ and area scope also appear in the area\n   data structure. IPv6 routers implementing\
    \ MOSPF add group-\n   membership-LSAs to the area data structure. Type-7-LSAs\
    \ belong to an\n   NSSA area's data structure.\n"
- title: 3.1.2.  The Interface Data structure
  contents:
  - "3.1.2.  The Interface Data structure\n   In OSPF for IPv6, an interface connects\
    \ a router to a link.  The IPv6\n   interface structure modifies the IPv4 interface\
    \ structure (as defined\n   in Section 9 of [Ref1]) as follows:\n   Interface\
    \ ID\n      Every interface is assigned an Interface ID, which uniquely\n    \
    \  identifies the interface with the router. For example, some\n      implementations\
    \ may be able to use the MIB-II IfIndex ([Ref3]) as\n      Interface ID. The Interface\
    \ ID appears in Hello packets sent out\n      the interface, the link-local-LSA\
    \ originated by router for the\n      attached link, and the router-LSA originated\
    \ by the router-LSA for\n      the associated area. It will also serve as the\
    \ Link State ID for\n      the network-LSA that the router will originate for\
    \ the link if the\n      router is elected Designated Router.\n   Instance ID\n\
    \      Every interface is assigned an Instance ID. This should default to\n  \
    \    0, and is only necessary to assign differently on those links that\n    \
    \  will contain multiple separate communities of OSPF Routers. For\n      example,\
    \ suppose that there are two communities of routers on a\n      given ethernet\
    \ segment that you wish to keep separate.\n      The first community is given\
    \ an Instance ID of 0, by assigning 0\n      as the Instance ID of all its routers'\
    \ interfaces to the ethernet.\n      An Instance ID of 1 is assigned to the other\
    \ routers' interfaces\n      to the ethernet. The OSPF transmit and receive processing\
    \ (see\n      Section 3.2) will then keep the two communities separate.\n   List\
    \ of LSAs with link-local scope\n      All LSAs with link-local scope and which\
    \ were originated/flooded\n      on the link belong to the interface structure\
    \ which connects to\n      the link. This includes the collection of the link's\
    \ link-LSAs.\n   List of LSAs with unknown LS type\n      All LSAs with unknown\
    \ LS type and U-bit set to 0 (if unrecognized,\n      treat the LSA as if it had\
    \ link-local flooding scope) are kept in\n      the data structure for the interface\
    \ that received the LSA.\n   IP interface address\n      For IPv6, the IPv6 address\
    \ appearing in the source of OSPF packets\n      sent out the interface is almost\
    \ always a link-local address. The\n      one exception is for virtual links,\
    \ which must use one of the\n      router's own site-local or global IPv6 addresses\
    \ as IP interface\n      address.\n   List of link prefixes\n      A list of IPv6\
    \ prefixes can be configured for the attached link.\n      These will be advertised\
    \ by the router in link-LSAs, so that they\n      can be advertised by the link's\
    \ Designated Router in intra-area-\n      prefix-LSAs.\n   In OSPF for IPv6, each\
    \ router interface has a single metric,\n   representing the cost of sending packets\
    \ out the interface.  In\n   addition, OSPF for IPv6 relies on the IP Authentication\
    \ Header (see\n   [Ref19]) and the IP Encapsulating Security Payload (see [Ref20])\
    \ to\n   ensure integrity and authentication/confidentiality of routing\n   exchanges.\
    \  For that reason, AuType and Authentication key are not\n   associated with\
    \ IPv6 OSPF interfaces.\n   Interface states, events, and the interface state\
    \ machine remain\n   unchanged from IPv4, and are documented in Sections 9.1,\
    \ 9.2 and 9.3\n   of [Ref1] respectively. The Designated Router and Backup Designated\n\
    \   Router election algorithm also remains unchanged from the IPv4\n   election\
    \ in Section 9.4 of [Ref1].\n"
- title: 3.1.3.  The Neighbor Data Structure
  contents:
  - "3.1.3.  The Neighbor Data Structure\n   The neighbor structure performs the same\
    \ function in both IPv6 and\n   IPv4. Namely, it collects all information required\
    \ to form an\n   adjacency between two routers, if an adjacency becomes necessary.\n\
    \   Each neighbor structure is bound to a single OSPF interface. The\n   differences\
    \ between the IPv6 neighbor structure and the neighbor\n   structure defined for\
    \ IPv4 in Section 10 of [Ref1] are:\n   Neighbor's Interface ID\n      The Interface\
    \ ID that the neighbor advertises in its Hello Packets\n      must be recorded\
    \ in the neighbor structure. The router will\n      include the neighbor's Interface\
    \ ID in the router's router-LSA\n      when either a) advertising a point-to-point\
    \ link to the neighbor\n      or b) advertising a link to a network where the\
    \ neighbor has\n      become Designated Router.\n   Neighbor IP address\n    \
    \  Except on virtual links, the neighbor's IP address will be an IPv6\n      link-local\
    \ address.\n   Neighbor's Designated Router\n      The neighbor's choice of Designated\
    \ Router is now encoded as a\n      Router ID, instead of as an IP address.\n\
    \   Neighbor's Backup Designated Router\n      The neighbor's choice of Designated\
    \ Router is now encoded as a\n      Router ID, instead of as an IP address.\n\
    \   Neighbor states, events, and the neighbor state machine remain\n   unchanged\
    \ from IPv4, and are documented in Sections 10.1, 10.2 and\n   10.3 of [Ref1]\
    \ respectively. The decision as to which adjacencies to\n   form also remains\
    \ unchanged from the IPv4 logic documented in Section\n   10.4 of [Ref1].\n"
- title: 3.2.  Protocol Packet Processing
  contents:
  - "3.2.  Protocol Packet Processing\n   OSPF for IPv6 runs directly over IPv6's\
    \ network layer. As such, it is\n   encapsulated in one or more IPv6 headers,\
    \ with the Next Header field\n   of the immediately encapsulating IPv6 header\
    \ set to the value 89.\n   As for IPv4, in IPv6 OSPF routing protocol packets\
    \ are sent along\n   adjacencies only (with the exception of Hello packets, which\
    \ are used\n   to discover the adjacencies). OSPF packet types and functions are\
    \ the\n   same in both IPv4 and IPv4, encoded by the\n   Type field of the standard\
    \ OSPF packet header.\n"
- title: 3.2.1.  Sending protocol packets
  contents:
  - "3.2.1.  Sending protocol packets\n   When an IPv6 router sends an OSPF routing\
    \ protocol packet, it fills\n   in the fields of the standard OSPF for IPv6 packet\
    \ header (see\n   Section A.3.1) as follows:\n   Version #\n      Set to 3, the\
    \ version number of the protocol as documented in this\n      specification.\n\
    \   Type\n      The type of OSPF packet, such as Link state Update or Hello\n\
    \      Packet.\n   Packet length\n      The length of the entire OSPF packet in\
    \ bytes, including the\n      standard OSPF packet header.\n   Router ID\n   \
    \   The identity of the router itself (who is originating the packet).\n   Area\
    \ ID\n      The OSPF area that the packet is being sent into.\n   Instance ID\n\
    \      The OSPF Instance ID associated with the interface that the packet\n  \
    \    is being sent out of.\n   Checksum\n      The standard IPv6 16-bit one's\
    \ complement checksum, covering the\n      entire OSPF packet and prepended IPv6\
    \ pseudo-header (see Section\n      A.3.1).\n   Selection of OSPF routing protocol\
    \ packets' IPv6 source and\n   destination addresses is performed identically\
    \ to the IPv4 logic in\n   Section 8.1 of [Ref1]. The IPv6 destination address\
    \ is chosen from\n   among the addresses AllSPFRouters, AllDRouters and the Neighbor\
    \ IP\n   address associated with the other end of the adjacency (which in\n  \
    \ IPv6, for all links except virtual links, is an IPv6 link-local\n   address).\n\
    \   The sending of Link State Request Packets and Link State\n   Acknowledgment\
    \ Packets remains unchanged from the IPv4 procedures\n   documented in Sections\
    \ 10.9 and 13.5 of [Ref1] respectively. Sending\n   Hello Packets is documented\
    \ in Section 3.2.1.1, and the sending of\n   Database Description Packets in Section\
    \ 3.2.1.2. The sending of Link\n   State Update Packets is documented in Section\
    \ 3.5.2.\n"
- title: 3.2.1.1.  Sending Hello packets
  contents:
  - "3.2.1.1.  Sending Hello packets\n   IPv6 changes the way OSPF Hello packets are\
    \ sent in the following\n   ways (compare to Section 9.5 of [Ref1]):\n   o  Before\
    \ the Hello Packet is sent out an interface, the interface's\n      Interface\
    \ ID must be copied into the Hello Packet.\n   o  The Hello Packet no longer contains\
    \ an IP network mask, as OSPF\n      for IPv6 runs per-link instead of per-subnet.\n\
    \   o  The choice of Designated Router and Backup Designated Router are\n    \
    \  now indicated within Hellos by their Router IDs, instead of by\n      their\
    \ IP interface addresses.      Advertising the Designated\n      Router (or Backup\
    \ Designated Router) as 0.0.0.0 indicates that the\n      Designated Router (or\
    \ Backup Designated Router) has not yet been\n      chosen.\n   o  The Options\
    \ field within Hello packets has moved around, getting\n      larger in the process.\
    \ More options bits are now possible. Those\n      that must be set correctly\
    \ in Hello packets are: The E-bit is set\n      if and only if the interface attaches\
    \ to a non-stub area, the N-\n      bit is set if and only if the interface attaches\
    \ to an NSSA area\n      (see [Ref9]), and the DC- bit is set if and only if the\
    \ router\n      wishes to suppress the sending of future Hellos over the interface\n\
    \      (see [Ref11]). Unrecognized bits in the Hello Packet's Options\n      field\
    \ should be cleared.\n   Sending Hello packets on NBMA networks proceeds for IPv6\
    \ in exactly\n   the same way as for IPv4, as documented in Section 9.5.1 of [Ref1].\n"
- title: 3.2.1.2.  Sending Database Description Packets
  contents:
  - "3.2.1.2.  Sending Database Description Packets\n   The sending of Database Description\
    \ packets differs from Section 10.8\n   of [Ref1] in the following ways:\n   o\
    \  The Options field within Database Description packets has moved\n      around,\
    \ getting larger in the process. More options bits are now\n      possible. Those\
    \ that must be set correctly in Database Description\n      packets are: The MC-bit\
    \ is set if and only if the router is\n      forwarding multicast datagrams according\
    \ to the MOSPF\n      specification in [Ref7], and the DC-bit is set if and only\
    \ if the\n      router wishes to suppress the sending of Hellos over the interface\n\
    \      (see [Ref11]).  Unrecognized bits in the Database Description\n      Packet's\
    \ Options field should be cleared.\n"
- title: 3.2.2.  Receiving protocol packets
  contents:
  - "3.2.2.  Receiving protocol packets\n   Whenever an OSPF protocol packet is received\
    \ by the router it is\n   marked with the interface it was received on.  For routers\
    \ that have\n   virtual links configured, it may not be immediately obvious which\n\
    \   interface to associate the packet with.  For example, consider the\n   Router\
    \ RT11 depicted in Figure 6 of [Ref1].  If RT11 receives an OSPF\n   protocol\
    \ packet on its interface to Network N8, it may want to\n   associate the packet\
    \ with the interface to Area 2, or with the\n   virtual link to Router RT10 (which\
    \ is part of the backbone).      In\n   the following, we assume that the packet\
    \ is initially associated with\n   the non-virtual link.\n   In order for the\
    \ packet to be passed to OSPF for processing, the\n   following tests must be\
    \ performed on the encapsulating IPv6 headers:\n   o  The packet's IP destination\
    \ address must be one of the IPv6\n      unicast addresses associated with the\
    \ receiving interface (this\n      includes link-local addresses), or one of the\
    \ IP multicast\n      addresses AllSPFRouters or AllDRouters.\n   o  The Next\
    \ Header field of the immediately encapsulating IPv6 header\n      must specify\
    \ the OSPF protocol (89).\n   o  Any encapsulating IP Authentication Headers (see\
    \ [Ref19]) and the\n      IP Encapsulating Security Payloads (see [Ref20]) must\
    \ be processed\n      and/or verified to ensure integrity and\n      authentication/confidentiality\
    \ of OSPF routing exchanges.\n   o  Locally originated packets should not be passed\
    \ on to OSPF.  That\n      is, the source IPv6 address should be examined to make\
    \ sure this\n      is not a multicast packet that the router itself generated.\n\
    \   After processing the encapsulating IPv6 headers, the OSPF packet\n   header\
    \ is processed.  The fields specified in the header must match\n   those configured\
    \ for the receiving interface.  If they do not, the\n   packet should be discarded:\n\
    \   o  The version number field must specify protocol version 3.\n   o  The standard\
    \ IPv6 16-bit one's complement checksum, covering the\n      entire OSPF packet\
    \ and prepended IPv6 pseudo-header, must be\n      verified (see Section A.3.1).\n\
    \   o  The Area ID found in the OSPF header must be verified.  If both of\n  \
    \    the following cases fail, the packet should be discarded.  The\n      Area\
    \ ID specified in the header must either:\n      (1)   Match the Area ID of the\
    \ receiving interface. In\n            this case, unlike for IPv4, the IPv6 source\n\
    \            address is not restricted to lie on the same IP\n            subnet\
    \ as the receiving interface. IPv6 OSPF runs\n            per-link, instead of\
    \ per-IP-subnet.\n      (2)   Indicate the backbone.  In this case, the packet\n\
    \            has been sent over a virtual link.  The receiving\n            router\
    \ must be an area border router, and the\n            Router ID specified in the\
    \ packet (the source\n            router) must be the other end of a configured\n\
    \            virtual link.  The receiving interface must also\n            attach\
    \ to the virtual link's configured Transit\n            area.  If all of these\
    \ checks succeed, the packet\n            is accepted and is from now on associated\
    \ with\n            the virtual link (and the backbone area).\n   o  The Instance\
    \ ID specified in the OSPF header must match the\n      receiving interface's\
    \ Instance ID.\n   o  Packets whose IP destination is AllDRouters should only\
    \ be\n      accepted if the state of the receiving interface is DR or Backup\n\
    \      (see Section 9.1).\n   After header processing, the packet is further processed\
    \ according to\n   its OSPF packet type.  OSPF packet types and functions are\
    \ the same\n   for both IPv4 and IPv6.\n   If the packet type is Hello, it should\
    \ then be further processed by\n   the Hello Protocol.  All other packet types\
    \ are sent/received only on\n   adjacencies.  This means that the packet must\
    \ have been sent by one\n   of the router's active neighbors. The neighbor is\
    \ identified by the\n   Router ID appearing the the received packet's OSPF header.\
    \ Packets\n   not matching any active neighbor are discarded.\n   The receive\
    \ processing of Database Description Packets, Link State\n   Request Packets and\
    \ Link State Acknowledgment Packets remains\n   unchanged from the IPv4 procedures\
    \ documented in Sections 10.6, 10.7\n   and 13.7 of [Ref1] respectively. The receiving\
    \ of Hello Packets is\n   documented in Section 3.2.2.1, and the receiving of\
    \ Link State Update\n   Packets is documented in Section 3.5.1.\n"
- title: 3.2.2.1.  Receiving Hello Packets
  contents:
  - "3.2.2.1.  Receiving Hello Packets\n   The receive processing of Hello Packets\
    \ differs from Section 10.5 of\n   [Ref1] in the following ways:\n   o  On all\
    \ link types (e.g., broadcast, NBMA, point-to- point, etc),\n      neighbors are\
    \ identified solely by their OSPF Router ID. For all\n      link types except\
    \ virtual links, the Neighbor IP address is set to\n      the IPv6 source address\
    \ in the IPv6 header of the received OSPF\n      Hello packet.\n   o There is\
    \ no longer a Network Mask field in the Hello Packet.\n   o  The neighbor's choice\
    \ of Designated Router and Backup Designated\n      Router is now encoded as an\
    \ OSPF Router ID instead of an IP\n      interface address.\n"
- title: 3.3.  The Routing table Structure
  contents:
  - "3.3.  The Routing table Structure\n   The routing table used by OSPF for IPv4\
    \ is defined in Section 11 of\n   [Ref1]. For IPv6 there are analogous routing\
    \ table entries: there are\n   routing table entries for IPv6 address prefixes,\
    \ and also for AS\n   boundary routers. The latter routing table entries are only\
    \ used to\n   hold intermediate results during the routing table build process\
    \ (see\n   Section 3.8).\n   Also, to hold the intermediate results during the\
    \ shortest-path\n   calculation for each area, there is a separate routing table\
    \ for each\n   area holding the following entries:\n   o  An entry for each router\
    \ in the area. Routers are identified by\n      their OSPF router ID. These routing\
    \ table entries hold the set of\n      shortest paths through a given area to\
    \ a given router, which in\n      turn allows calculation of paths to the IPv6\
    \ prefixes advertised\n      by that router in Intra-area-prefix-LSAs. If the\
    \ router is also an\n      area-border router, these entries are also used to\
    \ calculate paths\n      for inter-area address prefixes. If in addition the router\
    \ is the\n      other endpoint of a virtual link, the routing table entry\n  \
    \    describes the cost and viability of the virtual link.\n   o  An entry for\
    \ each transit link in the area. Transit links have\n      associated network-LSAs.\
    \ Both the transit link and the network-LSA\n      are identified by a combination\
    \ of the Designated Router's\n      Interface ID on the link and the Designated\
    \ Router's OSPF Router\n      ID. These routing table entries allow later calculation\
    \ of paths\n      to IP prefixes advertised for the transit link in intra-area-\n\
    \      prefix-LSAs.\n   The fields in the IPv4 OSPF routing table (see Section\
    \ 11 of [Ref1])\n   remain valid for IPv6: Optional capabilities (routers only),\
    \ path\n   type, cost, type 2 cost, link state origin, and for each of the equal\n\
    \   cost paths to the destination, the next hop and advertising router.\n   For\
    \ IPv6, the link-state origin field in the routing table entry is\n   the router-LSA\
    \ or network-LSA that has directly or indirectly\n   produced the routing table\
    \ entry. For example, if the routing table\n   entry describes a route to an IPv6\
    \ prefix, the link state origin is\n   the router-LSA or network-LSA that is listed\
    \ in the body of the\n   intra-area-prefix-LSA that has produced the route (see\
    \ Section\n   A.4.9).\n"
- title: 3.3.1.  Routing table lookup
  contents:
  - "3.3.1.  Routing table lookup\n   Routing table lookup (i.e., determining the\
    \ best matching routing\n   table entry during IP forwarding) is the same for\
    \ IPv6 as for IPv4.\n"
- title: 3.4.  Link State Advertisements
  contents:
  - "3.4.  Link State Advertisements\n   For IPv6, the OSPF LSA header has changed\
    \ slightly, with the LS type\n   field expanding and the Options field being moved\
    \ into the body of\n   appropriate LSAs. Also, the formats of some LSAs have changed\n\
    \   somewhat (namely router-LSAs, network-LSAs and AS-external-LSAs),\n   while\
    \ the names of other LSAs have been changed (type 3 and 4\n   summary-LSAs are\
    \ now inter-area-prefix-LSAs and inter-area-router-\n   LSAs respectively) and\
    \ additional LSAs have been added (Link-LSAs and\n   Intra-Area-Prefix-LSAs).\
    \ Type of Service (TOS) has been removed from\n   the OSPFv2 specification [Ref1],\
    \ and is not encoded within OSPF for\n   IPv6's LSAs.\n   These changes will be\
    \ described in detail in the following\n   subsections.\n"
- title: 3.4.1.  The LSA Header
  contents:
  - "3.4.1.  The LSA Header\n   In both IPv4 and IPv6, all OSPF LSAs begin with a\
    \ standard 20 byte\n   LSA header. However, the contents of this 20 byte header\
    \ have changed\n   in IPv6. The LS age, Advertising Router, LS Sequence Number,\
    \ LS\n   checksum and length fields within the LSA header remain unchanged, as\n\
    \   documented in Sections 12.1.1, 12.1.5, 12.1.6, 12.1.7 and A.4.1 of\n   [Ref1]\
    \ respectively.  However, the following fields have changed for\n   IPv6:\n  \
    \ Options\n      The Options field has been removed from the standard 20 byte\
    \ LSA\n      header, and into the body of router-LSAs, network-LSAs, inter-\n\
    \      area-router-LSAs and link-LSAs. The size of the Options field has\n   \
    \   increased from 8 to 24 bits, and some of the bit definitions have\n      changed\
    \ (see Section A.2). In addition a separate PrefixOptions\n      field, 8 bits\
    \ in length, is attached to each prefix advertised\n      within the body of an\
    \ LSA.\n   LS type\n      The size of the LS type field has increased from 8 to\
    \ 16 bits,\n      with the top two bits encoding flooding scope and the next bit\n\
    \      encoding the handling of unknown LS types.  See Section A.4.2.1\n     \
    \ for the current coding of the LS type field.\n   Link State ID\n      Link State\
    \ ID remains at 32 bits in length, but except for\n      network-LSAs and link-LSAs,\
    \ Link State ID has shed any addressing\n      semantics. For example, an IPv6\
    \ router originating multiple AS-\n      external-LSAs could start by assigning\
    \ the first a Link State ID\n      of 0.0.0.1, the second a Link State ID of 0.0.0.2,\
    \ and so on.\n      Instead of the IPv4 behavior of encoding the network number\
    \ within\n      the AS-external-LSA's Link State ID, the IPv6 Link State ID simply\n\
    \      serves as a way to differentiate multiple LSAs originated by the\n    \
    \  same router.\n      For network-LSAs, the Link State ID is set to the Designated\n\
    \      Router's Interface ID on the link. When a router originates a\n      Link-LSA\
    \ for a given link, its Link State ID is set equal to the\n      router's Interface\
    \ ID on the link.\n"
- title: 3.4.2.  The link-state database
  contents:
  - "3.4.2.  The link-state database\n   In IPv6, as in IPv4, individual LSAs are\
    \ identified by a combination\n   of their LS type, Link State ID and Advertising\
    \ Router fields. Given\n   two instances of an LSA, the most recent instance is\
    \ determined by\n   examining the LSAs' LS Sequence Number, using LS checksum\
    \ and LS age\n   as tiebreakers (see Section 13.1 of [Ref1]).\n   In IPv6, the\
    \ link-state database is split across three separate data\n   structures. LSAs\
    \ with AS flooding scope are contained within the\n   top-level OSPF data structure\
    \ (see Section 3.1) as long as either\n   their LS type is known or their U-bit\
    \ is 1 (flood even when\n   unrecognized); this includes the AS-external-LSAs.\
    \ LSAs with area\n   flooding scope are contained within the appropriate area\
    \ structure\n   (see Section 3.1.1) as long as either their LS type is known or\
    \ their\n   U-bit is 1 (flood even when unrecognized); this includes router-LSAs,\n\
    \   network-LSAs, inter-area-prefix-LSAs, inter-area-router-LSAs, and\n   intra-area-prefix-LSAs.\
    \ LSAs with unknown LS type and U-bit set to 0\n   and/or link-local flooding\
    \ scope are contained within the appropriate\n   interface structure (see Section\
    \ 3.1.2); this includes link-LSAs.\n   To lookup or install an LSA in the database,\
    \ you first examine the LS\n   type and the LSA's context (i.e., to which area\
    \ or link does the LSA\n   belong). This information allows you to find the correct\
    \ list of\n   LSAs, all of the same LS type, where you then search based on the\n\
    \   LSA's Link State ID and Advertising Router.\n"
- title: 3.4.3.  Originating LSAs
  contents:
  - "3.4.3.  Originating LSAs\n   The process of reoriginating an LSA in IPv6 is the\
    \ same as in IPv4:\n   the LSA's LS sequence number is incremented, its LS age\
    \ is set to 0,\n   its LS checksum is calculated, and the LSA is added to the\
    \ link state\n   database and flooded out the appropriate interfaces.\n   To the\
    \ list of events causing LSAs to be reoriginated, which for IPv4\n   is given\
    \ in Section 12.4 of [Ref1], the following events and/or\n   actions are added\
    \ for IPv6:\n   o  The state of one of the router's interfaces changes. The router\n\
    \      may need to (re)originate or flush its Link-LSA and one or more\n     \
    \ router-LSAs and/or intra-area-prefix-LSAs.\n   o  The identity of a link's Designated\
    \ Router changes. The router may\n      need to (re)originate or flush the link's\
    \ network-LSA and one or\n      more router-LSAs and/or intra-area-prefix-LSAs.\n\
    \   o  A neighbor transitions to/from \"Full\" state.  The router may need\n \
    \     to (re)originate or flush the link's network-LSA and one or more\n     \
    \ router-LSAs and/or intra-area-prefix-LSAs.\n   o  The Interface ID of a neighbor\
    \ changes. This may cause a new\n      instance of a router-LSA to be originated\
    \ for the associated area,\n      and the reorigination of one or more intra-area-prefix-LSAs.\n\
    \   o  A new prefix is added to an attached link, or a prefix is deleted\n   \
    \   (both through configuration). This causes the router to\n      reoriginate\
    \ its link-LSA for the link, or, if it is the only\n      router attached to the\
    \ link, causes the router to reoriginate an\n      intra-area-prefix-LSA.\n  \
    \ o  A new link-LSA is received, causing the link's collection of\n      prefixes\
    \ to change. If the router is Designated Router for the\n      link, it originates\
    \ a new intra-area-prefix-LSA.\n   Detailed construction of the seven required\
    \ IPv6 LSA types is\n   supplied by the following subsections. In order to display\
    \ example\n   LSAs, the network map in Figure 15 of [Ref1] has been reworked to\n\
    \   show IPv6 addressing, resulting in Figure 1. The OSPF cost of each\n   interface\
    \ is has been displayed in Figure 1. The assignment of IPv6\n   prefixes to network\
    \ links is shown in Table 1. A single area address\n   range has been configured\
    \ for Area 1, so that outside of Area 1 all\n   of its prefixes are covered by\
    \ a single route to 5f00:0000:c001::/48.\n   The OSPF interface IDs and the link-local\
    \ addresses for the router\n   interfaces in Figure 1 are given in Table 2.\n\
    \       ..........................................\n       .                 \
    \                 Area 1.\n       .     +                                  .\n\
    \       .     |                                  .\n       .     | 3+---+1   \
    \                       .\n       .  N1 |--|RT1|-----+                     .\n\
    \       .     |  +---+      \\                    .\n       .     |          \
    \    \\  ______           .\n       .     +               \\/       \\      1+---+\n\
    \       .                     *    N3   *------|RT4|------\n       .     +   \
    \            /\\_______/       +---+\n       .     |              /     |    \
    \         .\n       .     | 3+---+1     /      |             .\n       .  N2 |--|RT2|-----+\
    \      1|             .\n       .     |  +---+           +---+           .\n \
    \      .     |                  |RT3|----------------\n       .     +        \
    \          +---+           .\n       .                          |2           \
    \ .\n       .                          |             .\n       .             \
    \      +------------+       .\n       .                          N4          \
    \  .\n       ..........................................\n       Figure 1: Area\
    \ 1 with IP addresses shown\n              Network   IPv6 prefix\n           \
    \   -----------------------------------\n              N1        5f00:0000:c001:0200::/56\n\
    \              N2        5f00:0000:c001:0300::/56\n              N3        5f00:0000:c001:0100::/56\n\
    \              N4        5f00:0000:c001:0400::/56\n       Table 1: IPv6 link prefixes\
    \ for sample network\n            Router   interface   Interface ID   link-local\
    \ address\n            -------------------------------------------------------\n\
    \            RT1      to N1       1              fe80:0001::RT1\n            \
    \         to N3       2              fe80:0002::RT1\n            RT2      to N2\
    \       1              fe80:0001::RT2\n                     to N3       2    \
    \          fe80:0002::RT2\n            RT3      to N3       1              fe80:0001::RT3\n\
    \                     to N4       2              fe80:0002::RT3\n            RT4\
    \      to N3       1              fe80:0001::RT4\n       Table 2: OSPF Interface\
    \ IDs and link-local addresses\n"
- title: 3.4.3.1.  Router-LSAs
  contents:
  - "3.4.3.1.  Router-LSAs\n   The LS type of a router-LSA is set to the value 0x2001.\
    \  Router-LSAs\n   have area flooding scope. A router may originate one or more\
    \ router-\n   LSAs for a given area. Each router-LSA contains an integral number\
    \ of\n   interface descriptions; taken together, the collection of router-LSAs\n\
    \   originated by the router for an area describes the collected states\n   of\
    \ all the router's interfaces to the area. When multiple router-LSAs\n   are used,\
    \ they are distinguished by their Link State ID fields.\n   The Options field\
    \ in the router-LSA should be coded as follows. The\n   V6-bit should be set.\
    \ The E-bit should be clear if and only if the\n   attached area is an OSPF stub\
    \ area. The MC-bit should be set if and\n   only if the router is running MOSPF\
    \ (see [Ref8]). The N-bit should be\n   set if and only if the attached area is\
    \ an OSPF NSSA area.  The R-bit\n   should be set. The DC-bit should be set if\
    \ and only if the router can\n   correctly process the DoNotAge bit when it appears\
    \ in the LS age\n   field of LSAs (see [Ref11]). All unrecognized bits in the\
    \ Options\n   field should be cleared\n   To the left of the Options field, the\
    \ router capability bits V, E and\n   B should be coded according to Section 12.4.1\
    \ of [Ref1]. Bit W should\n   be coded according to [Ref8].\n   Each of the router's\
    \ interfaces to the area are then described by\n   appending \"link descriptions\"\
    \ to the router-LSA. Each link\n   description is 16 bytes long, consisting of\
    \ 5 fields: (link) Type,\n   Metric, Interface ID, Neighbor Interface ID and Neighbor\
    \ Router ID\n   (see Section A.4.3). Interfaces in state \"Down\" or \"Loopback\"\
    \ are not\n   described (although looped back interfaces can contribute prefixes\
    \ to\n   Intra-Area-Prefix-LSAs). Nor are interfaces without any full\n   adjacencies\
    \ described. All other interfaces to the area add zero, one\n   or more link descriptions,\
    \ the number and content of which depend on\n   the interface type. Within each\
    \ link description, the Metric field is\n   always set the interface's output\
    \ cost and the Interface ID field is\n   set to the interface's OSPF Interface\
    \ ID.\n   Point-to-point interfaces\n      If the neighboring router is fully\
    \ adjacent, add a Type 1 link\n      description (point-to-point). The Neighbor\
    \ Interface ID field is\n      set to the Interface ID advertised by the neighbor\
    \ in its Hello\n      packets, and the Neighbor Router ID field is set to the\
    \ neighbor's\n      Router ID.\n   Broadcast and NBMA interfaces\n      If the\
    \ router is fully adjacent to the link's Designated Router,\n      or if the router\
    \ itself is Designated Router and is fully adjacent\n      to at least one other\
    \ router, add a single Type 2 link description\n      (transit network). The Neighbor\
    \ Interface ID field is set to the\n      Interface ID advertised by the Designated\
    \ Router in its Hello\n      packets, and the Neighbor Router ID field is set\
    \ to the Designated\n      Router's Router ID.\n   Virtual links\n      If the\
    \ neighboring router is fully adjacent, add a Type 4 link\n      description (virtual).\
    \ The Neighbor Interface ID field is set to\n      the Interface ID advertised\
    \ by the neighbor in its Hello packets,\n      and the Neighbor Router ID field\
    \ is set to the neighbor's Router\n      ID. Note that the output cost of a virtual\
    \ link is calculated\n      during the routing table calculation (see Section\
    \ 3.7).\n   Point-to-MultiPoint interfaces\n      For each fully adjacent neighbor\
    \ associated with the interface,\n      add a separate Type 1 link description\
    \ (point-to-point) with\n      Neighbor Interface ID field set to the Interface\
    \ ID advertised by\n      the neighbor in its Hello packets, and Neighbor Router\
    \ ID field\n      set to the neighbor's Router ID.\n   As an example, consider\
    \ the router-LSA that router RT3 would\n   originate for Area 1 in Figure 1. Only\
    \ a single interface must be\n   described, namely that which connects to the\
    \ transit network N3. It\n   assumes that RT4 has been elected Designated Router\
    \ of Network N3.\n     ; RT3's router-LSA for Area 1\n     LS age = 0        \
    \             ;newly (re)originated\n     LS type = 0x2001               ;router-LSA\n\
    \     Link State ID = 0              ;first fragment\n     Advertising Router\
    \ = 192.1.1.3 ;RT3's Router ID\n     bit E = 0                      ;not an AS\
    \ boundary router\n     bit B = 1                      ;area border router\n \
    \    Options = (V6-bit|E-bit|R-bit)\n         Type = 2                     ;connects\
    \ to N3\n         Metric = 1            ;cost to N3\n         Interface ID = 1\
    \             ;RT3's Interface ID on N3\n         Neighbor Interface ID = 1  \
    \  ;RT4's Interface ID on N3\n         Neighbor Router ID = 192.1.1.4 ; RT4's\
    \ Router ID\n   If for example another router was added to Network N4, RT3 would\
    \ have\n   to advertise a second link description for its connection to (the now\n\
    \   transit) network N4. This could be accomplished by reoriginating the\n   above\
    \ router-LSA, this time with two link descriptions. Or, a\n   separate router-LSA\
    \ could be originated with a separate Link State ID\n   (e.g., using a Link State\
    \ ID of 1) to describe the connection to N4.\n   Host routes no longer appear\
    \ in the router-LSA, but are instead\n   included in intra-area-prefix-LSAs.\n"
- title: 3.4.3.2.  Network-LSAs
  contents:
  - "3.4.3.2.  Network-LSAs\n   The LS type of a network-LSA is set to the value 0x2002.\
    \  Network-\n   LSAs have area flooding scope. A network-LSA is originated for\
    \ every\n   broadcast or NBMA link having two or more attached routers, by the\n\
    \   link's Designated Router. The network-LSA lists all routers attached\n   to\
    \ the link.\n   The procedure for originating network-LSAs in IPv6 is the same\
    \ as the\n   IPv4 procedure documented in Section 12.4.2 of [Ref1], with the\n\
    \   following exceptions:\n   o  An IPv6 network-LSA's Link State ID is set to\
    \ the Interface ID of\n      the Designated Router on the link.\n   o  IPv6 network-LSAs\
    \ do not contain a Network Mask. All addressing\n      information formerly contained\
    \ in the IPv4 network-LSA has now\n      been consigned to intra-Area-Prefix-LSAs.\n\
    \   o  The Options field in the network-LSA is set to the logical OR of\n    \
    \  the Options fields contained within the link's associated link-\n      LSAs.\
    \  In this way, the network link exhibits a capability when at\n      least one\
    \ of the link's routers requests that the capability be\n      asserted.\n   As\
    \ an example, assuming that Router RT4 has been elected Designated\n   Router\
    \ of Network N3 in Figure 1, the following network-LSA is\n   originated:\n  \
    \   ; Network-LSA for Network N3\n     LS age = 0                     ;newly (re)originated\n\
    \     LS type = 0x2002               ;network-LSA\n     Link State ID = 1    \
    \          ;RT4's Interface ID on N3\n     Advertising Router = 192.1.1.4 ;RT4's\
    \ Router ID\n     Options = (V6-bit|E-bit|R-bit)\n            Attached Router\
    \ = 192.1.1.4    ;Router ID\n            Attached Router = 192.1.1.1    ;Router\
    \ ID\n            Attached Router = 192.1.1.2    ;Router ID\n            Attached\
    \ Router = 192.1.1.3    ;Router ID\n"
- title: 3.4.3.3.  Inter-Area-Prefix-LSAs
  contents:
  - "3.4.3.3.  Inter-Area-Prefix-LSAs\n   The LS type of an inter-area-prefix-LSA\
    \ is set to the value 0x2003.\n   Inter-area-prefix-LSAs have area flooding scope.\
    \ In IPv4, inter-\n   area-prefix-LSAs were called type 3 summary-LSAs. Each inter-area-\n\
    \   prefix-LSA describes a prefix external to the area, yet internal to\n   the\
    \ Autonomous System.\n   The procedure for originating inter-area-prefix-LSAs\
    \ in IPv6 is the\n   same as the IPv4 procedure documented in Sections 12.4.3\
    \ and 12.4.3.1\n   of [Ref1], with the following exceptions:\n   o  The Link State\
    \ ID of an inter-area-prefix-LSA has lost all of its\n      addressing semantics,\
    \ and instead simply serves to distinguish\n      multiple inter-area-prefix-LSAs\
    \ that are originated by the same\n      router.\n   o  The prefix is described\
    \ by the PrefixLength, PrefixOptions and\n      Address Prefix fields embedded\
    \ within the LSA body. Network Mask\n      is no longer specified.\n   o  The\
    \ NU-bit in the PrefixOptions field should be clear. The coding\n      of the\
    \ MC-bit depends upon whether, and if so how, MOSPF is\n      operating in the\
    \ routing domain (see [Ref8]).\n   o  Link-local addresses must never be advertised\
    \ in inter-area-\n      prefix-LSAs.\n      As an example, the following shows\
    \ the inter-area-prefix-LSA that\n      Router RT4 originates into the OSPF backbone\
    \ area, condensing all\n      of Area 1's prefixes into the single prefix 5f00:0000:c001::/48.\n\
    \      The cost is set to 4, which is the maximum cost to all of the\n      prefix'\
    \ individual components. The prefix is padded out to an even\n      number of\
    \ 32-bit words, so that it consumes 64-bits of space\n      instead of 48 bits.\n\
    \        ; Inter-area-prefix-LSA for Area 1 addresses\n        ; originated by\
    \ Router RT4 into the backbone\n        LS age = 0                  ;newly (re)originated\n\
    \        LS type = 0x2003            ;inter-area-prefix-LSA\n        Advertising\
    \ Router = 192.1.1.4       ;RT4's ID\n        Metric = 4                  ;maximum\
    \ to components\n        PrefixLength = 48\n        PrefixOptions = 0\n      \
    \  Address Prefix = 5f00:0000:c001 ;padded to 64-bits\n"
- title: 3.4.3.4.  Inter-Area-Router-LSAs
  contents:
  - "3.4.3.4.  Inter-Area-Router-LSAs\n      The LS type of an inter-area-router-LSA\
    \ is set to the value\n      0x2004. Inter-area-router-LSAs have area flooding\
    \ scope. In IPv4,\n      inter-area-router-LSAs were called type 4 summary-LSAs.\
    \ Each\n      inter-area-router-LSA describes a path to a destination OSPF\n \
    \     router (an ASBR) that is external to the area, yet internal to the\n   \
    \   Autonomous System.\n      The procedure for originating inter-area-router-LSAs\
    \ in IPv6 is\n      the same as the IPv4 procedure documented in Section 12.4.3\
    \ of\n      [Ref1], with the following exceptions:\n   o  The Link State ID of\
    \ an inter-area-router-LSA is no longer the\n      destination router's OSPF Router\
    \ ID, but instead simply serves to\n      distinguish multiple inter-area-router-LSAs\
    \ that are originated by\n      the same router. The destination router's Router\
    \ ID is now found\n      in the body of the LSA.\n   o  The Options field in an\
    \ inter-area-router-LSA should be set equal\n      to the Options field contained\
    \ in the destination router's own\n      router-LSA. The Options field thus describes\
    \ the capabilities\n      supported by the destination router.\n   As an example,\
    \ consider the OSPF Autonomous System depicted in Figure\n   6 of [Ref1]. Router\
    \ RT4 would originate into Area 1 the following\n   inter-area-router-LSA for\
    \ destination router RT7.\n     ; inter-area-router-LSA for AS boundary router\
    \ RT7\n     ; originated by Router RT4 into Area 1\n     LS age = 0          \
    \        ;newly (re)originated\n     LS type = 0x2004            ;inter-area-router-LSA\n\
    \     Advertising Router = 192.1.1.4  ;RT4's ID\n     Options = (V6-bit|E-bit|R-bit)\
    \  ;RT7's capabilities\n     Metric = 14                     ;cost to RT7\n  \
    \   Destination Router ID = Router RT7's ID\n"
- title: 3.4.3.5.  AS-external-LSAs
  contents:
  - "3.4.3.5.  AS-external-LSAs\n   The LS type of an AS-external-LSA is set to the\
    \ value 0x4005. AS-\n   external-LSAs have AS flooding scope. Each AS-external-LSA\
    \ describes\n   a path to a prefix external to the Autonomous System.\n   The\
    \ procedure for originating AS-external-LSAs in IPv6 is the same as\n   the IPv4\
    \ procedure documented in Section 12.4.4 of [Ref1], with the\n   following exceptions:\n\
    \   o  The Link State ID of an AS-external-LSA has lost all of its\n      addressing\
    \ semantics, and instead simply serves to distinguish\n      multiple AS-external-LSAs\
    \ that are originated by the same router.\n   o  The prefix is described by the\
    \ PrefixLength, PrefixOptions and\n      Address Prefix fields embedded within\
    \ the LSA body. Network Mask\n      is no longer specified.\n   o  The NU-bit\
    \ in the PrefixOptions field should be clear. The coding\n      of the MC-bit\
    \ depends upon whether, and if so how, MOSPF is\n      operating in the routing\
    \ domain (see [Ref8]).\n   o  Link-local addresses can never be advertised in\
    \ AS-external-LSAs.\n   o  The forwarding address is present in the AS-external-LSA\
    \ if and\n      only if the AS-external-LSA's bit F is set.\n   o  The external\
    \ route tag is present in the AS-external-LSA if and\n      only if the AS-external-LSA's\
    \ bit T is set.\n   o  The capability for an AS-external-LSA to reference another\
    \ LSA has\n      been included, by inclusion of the Referenced LS Type field and\n\
    \      the optional Referenced Link State ID field (the latter present if\n  \
    \    and only if Referenced LS Type is non-zero). This capability is\n      for\
    \ future use; for now Referenced LS Type should be set to 0 and\n      received\
    \ non-zero values for this field should be ignored.\n   As an example, consider\
    \ the OSPF Autonomous System depicted in Figure\n   6 of [Ref1]. Assume that RT7\
    \ has learned its route to N12 via BGP,\n   and that it wishes to advertise a\
    \ Type 2 metric into the AS.  Further\n   assume the the IPv6 prefix for N12 is\
    \ the value 5f00:0000:0a00::/40.\n   RT7 would then originate the following AS-external-LSA\
    \ for the\n   external network N12.  Note that within the AS-external-LSA, N12's\n\
    \   prefix occupies 64 bits of space, to maintain 32-bit alignment.\n     ; AS-external-LSA\
    \ for Network N12,\n     ; originated by Router RT7\n     LS age = 0         \
    \         ;newly (re)originated\n     LS type = 0x4005            ;AS-external-LSA\n\
    \     Link State ID = 123         ;or something else\n     Advertising Router\
    \ = Router RT7's ID\n     bit E = 1                   ;Type 2 metric\n     bit\
    \ F = 0                   ;no forwarding address\n     bit T = 1             \
    \      ;external route tag included\n     Metric = 2\n     PrefixLength = 40\n\
    \     PrefixOptions = 0\n     Referenced LS Type = 0      ;no Referenced Link\
    \ State ID\n     Address Prefix = 5f00:0000:0a00 ;padded to 64-bits\n     External\
    \ Route Tag = as per BGP/OSPF interaction\n"
- title: 3.4.3.6.  Link-LSAs
  contents:
  - "3.4.3.6.  Link-LSAs\n   The LS type of a Link-LSA is set to the value 0x0008.\
    \  Link-LSAs have\n   link-local flooding scope. A router originates a separate\
    \ Link-LSA\n   for each attached link that supports 2 or more (including the\n\
    \   originating router itself) routers.\n   Link-LSAs have three purposes: 1)\
    \ they provide the router's link-\n   local address to all other routers attached\
    \ to the link and 2) they\n   inform other routers attached to the link of a list\
    \ of IPv6 prefixes\n   to associate with the link and 3) they allow the router\
    \ to assert a\n   collection of Options bits in the Network-LSA that will be originated\n\
    \   for the link.\n   A Link-LSA for a given Link L is built in the following\
    \ fashion:\n   o  The Link State ID is set to the router's Interface ID on Link\
    \ L.\n   o  The Router Priority of the router's interface to Link L is\n     \
    \ inserted into the Link-LSA.\n   o  The Link-LSA's Options field is set to those\
    \ bits that the router\n      wishes set in Link L's Network LSA.\n   o  The router\
    \ inserts its link-local address on Link L into the\n      Link-LSA. This information\
    \ will be used when the other routers on\n      Link L do their next hop calculations\
    \ (see Section 3.8.1.1).\n   o  Each IPv6 address prefix that has been configured\
    \ into the router\n      for Link L is added to the Link-LSA, by specifying values\
    \ for\n      PrefixLength, PrefixOptions, and Address Prefix fields.\n   After\
    \ building a Link-LSA for a given link, the router installs the\n   link-LSA into\
    \ the associate interface data structure and floods the\n   Link-LSA onto the\
    \ link. All other routers on the link will receive\n   the Link-LSA, but it will\
    \ go no further.\n   As an example, consider the Link-LSA that RT3 will build\
    \ for N3 in\n   Figure 1. Suppose that the prefix 5f00:0000:c001:0100::/56 has\
    \ been\n   configured within RT3 for N3. This will give rise to the following\n\
    \   Link-LSA, which RT3 will flood onto N3, but nowhere else. Note that\n   not\
    \ all routers on N3 need be configured with the prefix; those not\n   configured\
    \ will learn the prefix when receiving RT3's Link-LSA.\n     ; RT3's Link-LSA\
    \ for N3\n     LS age = 0                  ;newly (re)originated\n     LS type\
    \ = 0x0008            ;Link-LSA\n     Link State ID = 1           ;RT3's Interface\
    \ ID on N3\n     Advertising Router = 192.1.1.3 ;RT3's Router ID\n     Rtr Pri\
    \ = 1                 ;RT3's N3 Router Priority\n     Options = (V6-bit|E-bit|R-bit)\n\
    \     Link-local Interface Address = fe80:0001::RT3\n     # prefixes = 1\n   \
    \  PrefixLength = 56\n     PrefixOptions = 0\n     Address Prefix = 5f00:0000:c001:0100\
    \ ;pad to 64-bits\n"
- title: 3.4.3.7.  Intra-Area-Prefix-LSAs
  contents:
  - "3.4.3.7.  Intra-Area-Prefix-LSAs\n   The LS type of an intra-area-prefix-LSA\
    \ is set to the value 0x2009.\n   Intra-area-prefix-LSAs have area flooding scope.\
    \ An intra-area-\n   prefix-LSA has one of two functions. It associates a list\
    \ of IPv6\n   address prefixes with a transit network link by referencing a\n\
    \   network- LSA, or associates a list of IPv6 address prefixes with a\n   router\
    \ by referencing a router-LSA. A stub link's prefixes are\n   associated with\
    \ its attached router.\n   A router may originate multiple intra-area-prefix-LSAs\
    \ for a given\n   area, distinguished by their Link State ID fields. Each intra-area-\n\
    \   prefix-LSA contains an integral number of prefix descriptions.\n   A link's\
    \ Designated Router originates one or more intra-area-prefix-\n   LSAs to advertise\
    \ the link's prefixes throughout the area. For a link\n   L, L's Designated Router\
    \ builds an intra-area-prefix-LSA in the\n   following fashion:\n   o  In order\
    \ to indicate that the prefixes are to be associated with\n      the Link L, the\
    \ fields Referenced LS type, Referenced Link State\n      ID, and Referenced\n\
    \      Advertising Router are set to the corresponding fields in Link L's\n  \
    \    network-LSA (namely LS type, Link State ID, and Advertising Router\n    \
    \  respectively). This means that Referenced LS Type is set to\n      0x2002,\
    \ Referenced Link State ID is set to the Designated Router's\n      Interface\
    \ ID on Link L, and Referenced Advertising Router is set\n      to the Designated\
    \ Router's Router ID.\n   o  Each Link-LSA associated with Link L is examined\
    \ (these are in the\n      Designated Router's interface structure for Link L).\
    \ If the Link-\n      LSA's Advertising Router is fully adjacent to the Designated\n\
    \      Router, the list of prefixes in the Link-LSA is copied into the\n     \
    \ intra-area-prefix-LSA that is being built.  Prefixes having the\n      NU-bit\
    \ and/or LA-bit set in their Options field should not be\n      copied, nor should\
    \ link-local addresses be copied.  Each prefix is\n      described by the PrefixLength,\
    \ PrefixOptions, and Address Prefix\n      fields. Multiple prefixes having the\
    \ same PrefixLength and Address\n      Prefix are considered to be duplicates;\
    \ in this case their Prefix\n      Options fields should be merged by logically\
    \ OR'ing the fields\n      together, and a single resulting prefix should be copied\
    \ into the\n      intra-area-prefix-LSA. The Metric field for all prefixes is\
    \ set to\n      0.\n   o  The \"# prefixes\" field is set to the number of prefixes\
    \ that the\n      router has copied into the LSA. If necessary, the list of prefixes\n\
    \      can be spread across multiple intra-area-prefix-LSAs in order to\n    \
    \  keep the LSA size small.\n      A router builds an intra-area-prefix-LSA to\
    \ advertise its own\n      prefixes, and those of its attached stub links.  A\
    \ Router RTX\n      would build its intra-area-prefix-LSA in the following fashion:\n\
    \   o  In order to indicate that the prefixes are to be associated with\n    \
    \  the Router RTX itself, RTX sets Referenced LS type to 0x2001,\n      Referenced\
    \ Link State ID to 0, and Referenced Advertising Router\n      to RTX's own Router\
    \ ID.\n   o  Router RTX examines its list of interfaces to the area. If the\n\
    \      interface is in state Down, its prefixes are not included. If the\n   \
    \   interface has been reported in RTX's router-LSA as a Type 2 link\n      description\
    \ (link to transit network), its prefixes are not\n      included (they will be\
    \ included in the intra-area-prefix-LSA for\n      the link instead). If the interface\
    \ type is Point-to-MultiPoint,\n      or the interface is in state Loopback, or\
    \ the interface connects\n      to a point-to-point link which has not been assigned\
    \ a prefix,\n      then the site-local and global scope IPv6 addresses associated\n\
    \      with the interface (if any) are copied into the intra-area-\n      prefix-LSA,\
    \ setting the LA-bit in the PrefixOptions field, and\n      setting the PrefixLength\
    \ to 128 and the Metric to 0.  Otherwise,\n      the list of site-local and global\
    \ prefixes configured in RTX for\n      the link are copied into the intra-area-prefix-LSA\
    \ by specifying\n      the PrefixLength, PrefixOptions, and Address Prefix fields.\
    \ The\n      Metric field for each of these prefixes is set to the interface's\n\
    \      output cost.\n   o  RTX adds the IPv6 prefixes for any directly attached\
    \ hosts\n      belonging to the area (see Section C.7) to the intra-area-prefix-\n\
    \      LSA.\n   o  If RTX has one or more virtual links configured through the\
    \ area,\n      it includes one of its site-local or global scope IPv6 interface\n\
    \      addresses in the LSA (if it hasn't already), setting the LA-bit in\n  \
    \    the PrefixOptions field, and setting the PrefixLength to 128 and\n      the\
    \ Metric to 0. This information will be used later in the\n      routing calculation\
    \ so that the two ends of the virtual link can\n      discover each other's IPv6\
    \ addresses.\n   o  The \"# prefixes\" field is set to the number of prefixes\
    \ that the\n      router has copied into the LSA. If necessary, the list of prefixes\n\
    \      can be spread across multiple intra-area-prefix-LSAs in order to\n    \
    \  keep the LSA size small.\n   For example, the intra-area-prefix-LSA originated\
    \ by RT4 for Network\n   N3 (assuming that RT4 is N3's Designated Router), and\
    \ the intra-\n   area-prefix-LSA originated into Area 1 by Router RT3 for its\
    \ own\n   prefixes, are pictured below.\n     ; Intra-area-prefix-LSA\n     ;\
    \ for network link N3\n     LS age = 0                  ;newly (re)originated\n\
    \     LS type = 0x2009            ;Intra-area-prefix-LSA\n     Link State ID =\
    \ 5           ;or something\n     Advertising Router = 192.1.1.4 ;RT4's Router\
    \ ID\n     # prefixes = 1\n     Referenced LS type = 0x2002 ;network-LSA reference\n\
    \     Referenced Link State ID = 1\n     Referenced Advertising Router = 192.1.1.4\n\
    \     PrefixLength = 56           ;N3's prefix\n     PrefixOptions = 0\n     Metric\
    \ = 0\n     Address Prefix = 5f00:0000:c001:0100 ;pad\n     ; RT3's Intra-area-prefix-LSA\n\
    \     ; for its own prefixes\n     LS age = 0                  ;newly (re)originated\n\
    \     LS type = 0x2009            ;Intra-area-prefix-LSA\n     Link State ID =\
    \ 177         ;or something\n     Advertising Router = 192.1.1.3 ;RT3's Router\
    \ ID\n     # prefixes = 1\n     Referenced LS type = 0x2001 ;router-LSA reference\n\
    \     Referenced Link State ID = 0\n     Referenced Advertising Router = 192.1.1.3\n\
    \     PrefixLength = 56           ;N4's prefix\n     PrefixOptions = 0\n     Metric\
    \ = 2                  ;N4 interface cost\n     Address Prefix = 5f00:0000:c001:0400\
    \ ;pad\n   When network conditions change, it may be necessary for a router to\n\
    \   move prefixes from one intra-area-prefix-LSA to another. For example,\n  \
    \ if the router is Designated Router for a link but the link has no\n   other\
    \ attached routers, the link's prefixes are advertised in an\n   intra-area-prefix-LSA\
    \ referring to the Designated Router's router-\n   LSA.  When additional routers\
    \ appear on the link, a network-LSA is\n   originated for the link and the link's\
    \ prefixes are moved to an\n   intra-area-prefix-LSA referring to the network-LSA.\n\
    \   Note that in the intra-area-prefix-LSA, the \"Referenced Advertising\n   Router\"\
    \ is always equal to the router that is originating the intra-\n   area-prefix-LSA\
    \ (i.e., the LSA's Advertising Router). The reason that\n   the Referenced Advertising\
    \ Router field appears is that, even though\n   it is currently redundant, it\
    \ may not be in the future. We may\n   sometime want to use the same LSA format\
    \ to advertise address\n   prefixes for other protocol suites. In that event,\
    \ the Designated\n   Router may not be running the other protocol suite, and so\
    \ another of\n   the link's routers may need to send out the prefix-LSA. In that\
    \ case,\n   \"Referenced Advertising Router\" and \"Advertising Router\" would\
    \ be\n   different.\n"
- title: 3.5.  Flooding
  contents:
  - "3.5.  Flooding\n   Most of the flooding algorithm remains unchanged from the\
    \ IPv4\n   flooding mechanisms described in Section 13 of [Ref1]. In particular,\n\
    \   the processes for determining which LSA instance is newer (Section\n   13.1\
    \ of [Ref1]), responding to updates of self-originated LSAs\n   (Section 13.4\
    \ of [Ref1]), sending Link State Acknowledgment packets\n   (Section 13.5 of [Ref1]),\
    \ retransmitting LSAs (Section 13.6 of\n   [Ref1]) and receiving Link State Acknowledgment\
    \ packets (Section 13.7\n   of [Ref1]) are exactly the same for IPv6 and IPv4.\n\
    \   However, the addition of flooding scope and handling options for\n   unrecognized\
    \ LSA types (see Section A.4.2.1) has caused some changes\n   in the OSPF flooding\
    \ algorithm: the reception of Link State Updates\n   (Section 13 in [Ref1]) and\
    \ the sending of Link State Updates (Section\n   13.3 of [Ref1]) must take into\
    \ account the LSA's scope and U-bit\n   setting. Also, installation of LSAs into\
    \ the OSPF database (Section\n   13.2 of [Ref1]) causes different events in IPv6,\
    \ due to the\n   reorganization of LSA types and contents in IPv6. These changes\
    \ are\n   described in detail below.\n"
- title: 3.5.1.  Receiving Link State Update packets
  contents:
  - "3.5.1.  Receiving Link State Update packets\n   The encoding of flooding scope\
    \ in the LS type and the need to process\n   unknown LS types causes modifications\
    \ to the processing of received\n   Link State Update packets. As in IPv4, each\
    \ LSA in a received Link\n   State Update packet is examined. In IPv4, eight steps\
    \ are executed\n   for each LSA, as described in Section 13 of [Ref1]. For IPv6,\
    \ all the\n   steps are the same, except that Steps 2 and 3 are modified as\n\
    \   follows:\n   (2)   Examine the LSA's LS type.  If the LS type is\n       \
    \  unknown, the area has been configured as a stub area,\n         and either\
    \ the LSA's flooding scope is set to \"AS\n         flooding scope\" or the U-bit\
    \ of the LS type is set to\n         1 (flood even when unrecognized), then discard\
    \ the\n         LSA and get the next one from the Link State Update\n        \
    \ Packet. This generalizes the IPv4 behavior where AS-\n         external-LSAs\
    \ are not flooded into/throughout stub\n         areas.\n   (3)   Else if the\
    \ flooding scope of the LSA is set to\n         \"reserved\", discard the LSA\
    \ and get the next one from\n         the Link State Update Packet.\n   Steps\
    \ 5b (sending Link State Update packets) and 5d (installing LSAs\n   in the link\
    \ state database) in Section 13 of [Ref1] are also somewhat\n   different for\
    \ IPv6, as described in Sections 3.5.2 and 3.5.3 below.\n"
- title: 3.5.2.  Sending Link State Update packets
  contents:
  - "3.5.2.  Sending Link State Update packets\n   The sending of Link State Update\
    \ packets is described in Section 13.3\n   of [Ref1]. For IPv4 and IPv6, the steps\
    \ for sending a Link State\n   Update packet are the same (steps 1 through 5 of\
    \ Section 13.3 in\n   [Ref1]). However, the list of eligible interfaces out which\
    \ to flood\n   the LSA is different.  For IPv6, the eligible interfaces are selected\n\
    \   based on the following factors:\n   o  The LSA's flooding scope.\n   o  For\
    \ LSAs with area or link-local flooding scoping, the particular\n      area or\
    \ interface that the LSA is associated with.\n   o  Whether the LSA has a recognized\
    \ LS type.\n   o  The setting of the U-bit in the LS type. If the U-bit is set\
    \ to 0,\n      unrecognized LS types are treated as having link-local scope. If\n\
    \      set to 1, unrecognized LS types are stored and flooded as if they\n   \
    \   were recognized.\n   Choosing the set of eligible interfaces then breaks into\
    \ the\n   following cases:\n   Case 1\n      The LSA's LS type is recognized.\
    \ In this case, the set of eligible\n      interfaces is set depending on the\
    \ flooding scope encoded in the\n      LS type. If the flooding scope is \"AS\
    \ flooding scope\", the\n      eligible interfaces are all router interfaces excepting\
    \ virtual\n      links. In addition, AS-external-LSAs are not flooded out\n  \
    \    interfaces connecting to stub areas. If the flooding scope is\n      \"area\
    \ flooding scope\", the set of eligible interfaces are those\n      interfaces\
    \ connecting to the LSA's associated area. If the\n      flooding scope is \"\
    link-local flooding scope\", then there is a\n      single eligible interface,\
    \ the one connecting to the LSA's\n      associated link (which, when the LSA\
    \ is received in a Link State\n      Update packet, is also the interface the\
    \ LSA was received on).\n   Case 2\n      The LS type is unrecognized, and the\
    \ U-bit in the LS Type is set\n      to 0 (treat the LSA as if it had link-local\
    \ flooding scope). In\n      this case there is a single eligible interface, namely,\
    \ the\n      interface on which the LSA was received.\n   Case 3\n      The LS\
    \ type is unrecognized, and the U-bit in the LS Type is set\n      to 1 (store\
    \ and flood the LSA, as if type understood). In this\n      case, select the eligible\
    \ interfaces based on the encoded flooding\n      scope as in Case 1 above. However,\
    \ in this case interfaces\n      attached to stub areas are always excluded.\n\
    \   A further decision must sometimes be made before adding an LSA to a\n   given\
    \ neighbor's link-state retransmission list (Step 1d in Section\n   13.3 of [Ref1]).\
    \ If the LS type is recognized by the router, but not\n   by the neighbor (as\
    \ can be determined by examining the Options field\n   that the neighbor advertised\
    \ in its Database Description packet) and\n   the LSA's U-bit is set to 0, then\
    \ the LSA should be added to the\n   neighbor's link-state retransmission list\
    \ if and only if that\n   neighbor is the Designated Router or Backup Designated\
    \ Router for the\n   attached link. The LS types described in detail by this memo,\
    \ namely\n   router-LSAs (LS type 0x2001), network-LSAs (0x2002), Inter-Area-\n\
    \   Prefix-LSAs (0x2003), Inter-Area-Router-LSAs (0x2004), AS-External-\n   LSAs\
    \ (0x4005), Link-LSAs (0x0008) and Intra-Area-Prefix-LSAs (0x2009)\n   are assumed\
    \ to be understood by all routers. However, as an example\n   the group-membership-LSA\
    \ (0x2006) is understood only by MOSPF routers\n   and since it has its U-bit\
    \ set to 0, it should only be forwarded to a\n   non-MOSPF neighbor (determined\
    \ by examining the MC-bit in the\n   neighbor's Database Description packets'\
    \ Options field) when the\n   neighbor is Designated Router or Backup Designated\
    \ Router for the\n   attached link.\n   The previous paragraph solves a problem\
    \ in IPv4 OSPF extensions such\n   as MOSPF, which require that the Designated\
    \ Router support the\n   extension in order to have the new LSA types flooded\
    \ across broadcast\n   and NBMA networks (see Section 10.2 of [Ref8]).\n"
- title: 3.5.3.  Installing LSAs in the database
  contents:
  - "3.5.3.  Installing LSAs in the database\n   There are three separate places to\
    \ store LSAs, depending on their\n   flooding scope. LSAs with AS flooding scope\
    \ are stored in the global\n   OSPF data structure (see Section 3.1) as long as\
    \ their LS type is\n   known or their U-bit is 1. LSAs with area flooding scope\
    \ are stored\n   in the appropriate area data structure (see Section 3.1.1) as\
    \ long as\n   their LS type is known or their U-bit is 1. LSAs with link-local\n\
    \   flooding scope, and those LSAs with unknown LS type and U-bit set to\n   0\
    \ (treat the LSA as if it had link-local flooding scope) are stored\n   in the\
    \ appropriate interface structure.\n   When storing the LSA into the link-state\
    \ database, a check must be\n   made to see whether the LSA's contents have changed.\
    \  Changes in\n   contents are indicated exactly as in Section 13.2 of [Ref1].\
    \ When an\n   LSA's contents have been changed, the following parts of the routing\n\
    \   table must be recalculated, based on the LSA's LS type:\n   Router-LSAs, Network-LSAs,\
    \ Intra-Area-Prefix-LSAs and Link-LSAs\n      The entire routing table is recalculated,\
    \ starting with the\n      shortest path calculation for each area (see Section\
    \ 3.8).\n   Inter-Area-Prefix-LSAs and Inter-Area-Router-LSAs\n      The best\
    \ route to the destination described by the LSA must be\n      recalculated (see\
    \ Section 16.5 in [Ref1]).  If this destination is\n      an AS boundary router,\
    \ it may also be necessary to re-examine all\n      the AS-external-LSAs.\n  \
    \ AS-external-LSAs\n      The best route to the destination described by the AS-external-LSA\n\
    \      must be recalculated (see Section 16.6 in [Ref1]).\n   As in IPv4, any\
    \ old instance of the LSA must be removed from the\n   database when the new LSA\
    \ is installed.  This old instance must also\n   be removed from all neighbors'\
    \ Link state retransmission lists.\n"
- title: 3.6.  Definition of self-originated LSAs
  contents:
  - "3.6.  Definition of self-originated LSAs\n   In IPv6 the definition of a self-originated\
    \ LSA has been simplified\n   from the IPv4 definition appearing in Sections 13.4\
    \ and 14.1 of\n   [Ref1]. For IPv6, self-originated LSAs are those LSAs whose\n\
    \   Advertising Router is equal to the router's own Router ID.\n"
- title: 3.7.  Virtual links
  contents:
  - "3.7.  Virtual links\n   OSPF virtual links for IPv4 are described in Section\
    \ 15 of [Ref1].\n   Virtual links are the same in IPv6, with the following exceptions:\n\
    \   o  LSAs having AS flooding scope are never flooded over virtual\n      adjacencies,\
    \ nor are LSAs with AS flooding scope summarized over\n      virtual adjacencies\
    \ during the Database Exchange process. This is\n      a generalization of the\
    \ IPv4 treatment of AS-external-LSAs.\n   o  The IPv6 interface address of a virtual\
    \ link must be an IPv6\n      address having site-local or global scope, instead\
    \ of the link-\n      local addresses used by other interface types. This address\
    \ is\n      used as the IPv6 source for OSPF protocol packets sent over the\n\
    \      virtual link.\n   o  Likewise, the virtual neighbor's IPv6 address is an\
    \ IPv6 address\n      with site-local or global scope. To enable the discovery\
    \ of a\n      virtual neighbor's IPv6 address during the routing calculation,\n\
    \      the neighbor advertises its virtual link's IPv6 interface address\n   \
    \   in an Intra-Area-Prefix-LSA originated for the virtual link's\n      transit\
    \ area (see Sections 3.4.3.7 and 3.8.1).\n   o  Like all other IPv6 OSPF interfaces,\
    \ virtual links are assigned\n      unique (within the router) Interface IDs.\
    \ These are advertised in\n      Hellos sent over the virtual link, and in the\
    \ router's router-\n      LSAs.\n"
- title: 3.8.  Routing table calculation
  contents:
  - "3.8.  Routing table calculation\n   The IPv6 OSPF routing calculation proceeds\
    \ along the same lines as\n   the IPv4 OSPF routing calculation, following the\
    \ five steps specified\n   by Section 16 of [Ref1]. High level differences between\
    \ the IPv6 and\n   IPv4 calculations include:\n   o  Prefix information has been\
    \ removed from router-LSAs, and now is\n      advertised in intra-area-prefix-LSAs.\
    \ Whenever [Ref1] specifies\n      that stub networks within router-LSAs be examined,\
    \ IPv6 will\n      instead examine prefixes within intra-area-prefix-LSAs.\n \
    \  o  Type 3 and 4 summary-LSAs have been renamed inter-area-prefix-LSAs\n   \
    \   and inter-area-router-LSAs (respectively).\n   o  Addressing information is\
    \ no longer encoded in Link State IDs, and\n      must instead be found within\
    \ the body of LSAs.\n   o  In IPv6, a router can originate multiple router-LSAs\
    \ within a\n      single area, distinguished by Link State ID. These router-LSAs\n\
    \      must be treated as a single aggregate by the area's shortest path\n   \
    \   calculation (see Section 3.8.1).\n   For each area, routing table entries\
    \ have been created for the area's\n   routers and transit links, in order to\
    \ store the results of the\n   area's shortest-path tree calculation (see Section\
    \ 3.8.1). These\n   entries are then used when processing intra-area-prefix-LSAs,\
    \ inter-\n   area-prefix-LSAs and inter-area-router-LSAs, as described in Section\n\
    \   3.8.2.\n   Events generated as a result of routing table changes (Section\
    \ 16.7\n   of [Ref1]), and the equal-cost multipath logic (Section 16.8 of\n \
    \  [Ref1]) are identical for both IPv4 and IPv6.\n"
- title: 3.8.1.  Calculating the shortest path tree for an area
  contents:
  - "3.8.1.  Calculating the shortest path tree for an area\n   The IPv4 shortest\
    \ path calculation is contained in Section 16.1 of\n   [Ref1].  The graph used\
    \ by the shortest-path tree calculation is\n   identical for both IPv4 and IPv6.\
    \ The graph's vertices are routers\n   and transit links, represented by router-LSAs\
    \ and network-LSAs\n   respectively. A router is identified by its OSPF Router\
    \ ID, while a\n   transit link is identified by its Designated Router's Interface\
    \ ID\n   and OSPF Router ID. Both routers and transit links have associated\n\
    \   routing table entries within the area (see Section 3.3).\n   Section 16.1\
    \ of [Ref1] splits up the shortest path calculations into\n   two stages. First\
    \ the Dijkstra calculation is performed, and then the\n   stub links are added\
    \ onto the tree as leaves. The IPv6 calculation\n   maintains this split.\n  \
    \ The Dijkstra calculation for IPv6 is identical to that specified for\n   IPv4,\
    \ with the following exceptions (referencing the steps from the\n   Dijkstra calculation\
    \ as described in Section 16.1 of [Ref1]):\n   o  The Vertex ID for a router is\
    \ the OSPF Router ID. The Vertex ID\n      for a transit network is a combination\
    \ of the Interface ID and\n      OSPF Router ID of the network's Designated Router.\n\
    \   o  In Step 2, when a router Vertex V has just been added to the\n      shortest\
    \ path tree, there may be multiple LSAs associated with the\n      router. All\
    \ Router-LSAs with Advertising Router set to V's OSPF\n      Router ID must processed\
    \ as an aggregate, treating them as\n      fragments of a single large router-LSA.\
    \ The Options field and the\n      router type bits (bits W, V, E and B) should\
    \ always be taken from\n      \"fragment\" with the smallest Link State ID.\n\
    \   o  Step 2a is not needed in IPv6, as there are no longer stub network\n  \
    \    links in router-LSAs.\n   o  In Step 2b, if W is a router, there may again\
    \ be multiple LSAs\n      associated with the router. All Router-LSAs with Advertising\n\
    \      Router set to W's OSPF Router ID must processed as an aggregate,\n    \
    \  treating them as fragments of a single large router-LSA.\n   o  In Step 4,\
    \ there are now per-area routing table entries for each\n      of an area's routers,\
    \ instead of just the area border routers.\n      These entries subsume all the\
    \ functionality of IPv4's area border\n      router routing table entries, including\
    \ the maintenance of virtual\n      links.  When the router added to the area\
    \ routing table in this\n      step is the other end of a virtual link, the virtual\
    \ neighbor's IP\n      address is set as follows: The collection of intra-area-prefix-\n\
    \      LSAs originated by the virtual neighbor is examined, with the\n      virtual\
    \ neighbor's IP address being set to the first prefix\n      encountered having\
    \ the \"LA-bit\" set.\n   o  Routing table entries for transit networks, which\
    \ are no longer\n      associated with IP networks, are also modified in Step\
    \ 4.\n   The next stage of the shortest path calculation proceeds similarly to\n\
    \   the two steps of the second stage of Section 16.1 in [Ref1]. However,\n  \
    \ instead of examining the stub links within router-LSAs, the list of\n   the\
    \ area's intra-area-prefix-LSAs is examined. A prefix advertisement\n   whose\
    \ \"NU-bit\" is set should not be included in the routing\n   calculation. The\
    \ cost of any advertised prefix is the sum of the\n   prefix' advertised metric\
    \ plus the cost to the transit vertex (either\n   router or transit network) identified\
    \ by intra-area-prefix-LSA's\n   Referenced LS type, Referenced Link State ID\
    \ and Referenced\n   Advertising Router fields. This latter cost is stored in\
    \ the transit\n   vertex' routing table entry for the area.\n"
- title: 3.8.1.1.  The next hop calculation
  contents:
  - "3.8.1.1.  The next hop calculation\n   In IPv6, the calculation of the next hop's\
    \ IPv6 address (which will\n   be a link-local address) proceeds along the same\
    \ lines as the IPv4\n   next hop calculation (see Section 16.1.1 of [Ref1]). The\
    \ only\n   difference is in calculating the next hop IPv6 address for a router\n\
    \   (call it Router X) which shares a link with the calculating router.\n   In\
    \ this case the calculating router assigns the next hop IPv6 address\n   to be\
    \ the link-local interface address contained in Router X's Link-\n   LSA (see\
    \ Section A.4.8) for the link. This procedure is necessary\n   since on some links,\
    \ such as NBMA links, the two routers need not be\n   neighbors, and therefore\
    \ might not be exchanging OSPF Hellos.\n"
- title: 3.8.2.  Calculating the inter-area routes
  contents:
  - "3.8.2.  Calculating the inter-area routes\n   Calculation of inter-area routes\
    \ for IPv6 proceeds along the same\n   lines as the IPv4 calculation in Section\
    \ 16.2 of [Ref1], with the\n   following modifications:\n   o  The names of the\
    \ Type 3 summary-LSAs and Type 4 summary-LSAs have\n      been changed to inter-area-prefix-LSAs\
    \ and inter-area-router-LSAs\n      respectively.\n   o  The Link State ID of\
    \ the above LSA types no longer encodes the\n      network or router described\
    \ by the LSA.  Instead, an address\n      prefix is contained in the body of an\
    \ inter-area-prefix-LSA, and a\n      described router's OSPF Router ID is carried\
    \ in the body of an\n      inter-area- router-LSA.\n   o  Prefixes having the\
    \ \"NU-bit\" set in their Prefix Options field\n      should be ignored by the\
    \ inter-area route calculation.\n   When a single inter-area-prefix-LSA or inter-area-router-LSA\
    \ has\n   changed, the incremental calculations outlined in Section 16.5 of\n\
    \   [Ref1] can be performed instead of recalculating the entire routing\n   table.\n"
- title: 3.8.3.  Examining transit areas' summary-LSAs
  contents:
  - "3.8.3.  Examining transit areas' summary-LSAs\n   Examination of transit areas'\
    \ summary-LSAs in IPv6 proceeds along the\n   same lines as the IPv4 calculation\
    \ in Section 16.3 of [Ref1],\n   modified in the same way as the IPv6 inter-area\
    \ route calculation in\n   Section 3.8.2.\n"
- title: 3.8.4.  Calculating AS external routes
  contents:
  - "3.8.4.  Calculating AS external routes\n   The IPv6 AS external route calculation\
    \ proceeds along the same lines\n   as the IPv4 calculation in Section 16.4 of\
    \ [Ref1], with the following\n   exceptions:\n   o  The Link State ID of the AS-external-LSA\
    \ types no longer encodes\n      the network described by the LSA. Instead, an\
    \ address prefix is\n      contained in the body of an AS- external-LSA.\n   o\
    \  The default route is described by AS-external-LSAs which advertise\n      zero\
    \ length prefixes.\n   o  Instead of comparing the AS-external-LSA's Forwarding\
    \ address\n      field to 0.0.0.0 to see whether a forwarding address has been\n\
    \      used, bit F of the external-LSA is examined. A forwarding address\n   \
    \   is in use if and only if bit F is set.\n   o  Prefixes having the \"NU-bit\"\
    \ set in their Prefix Options field\n      should be ignored by the inter-area\
    \ route calculation.\n   When a single AS-external-LSA has changed, the incremental\n\
    \   calculations outlined in Section 16.6 of [Ref1] can be performed\n   instead\
    \ of recalculating the entire routing table.\n"
- title: 3.9.  Multiple interfaces to a single link
  contents:
  - "3.9.  Multiple interfaces to a single link\n   In OSPF for IPv6, a router may\
    \ have multiple interfaces to a single\n   link. All interfaces are involved in\
    \ the reception and transmission\n   of data traffic, however only a single interface\
    \ sends and receives\n   OSPF control traffic. In more detail:\n   o  Each of\
    \ the multiple interfaces are assigned different Interface\n      IDs.  In this\
    \ way the router can automatically detect when\n      multiple interfaces attach\
    \ to the same link, when receiving Hellos\n      from its own Router ID but with\
    \ an Interface ID other than the\n      receiving interface's.\n   o  The router\
    \ turns off the sending and receiving of OSPF packets\n      (that is, control\
    \ traffic) on all but one of the interfaces to the\n      link. The choice of\
    \ interface to send and receive control traffic\n      is implementation dependent;\
    \ as one example, the interface with\n      the highest Interface ID could be\
    \ chosen.  If the router is\n      elected DR, it will be this interface's Interface\
    \ ID that will be\n      used as the network-LSA's Link State ID.\n   o  All the\
    \ multiple interfaces to the link will however appear in the\n      router-LSA.\
    \ In addition, a Link-LSA will be generated for each of\n      the multiple interfaces.\
    \ In this way, all interfaces will be\n      included in OSPF's routing calculations.\n\
    \   o  If the interface which is responsible for sending and receiving\n     \
    \ control traffic fails,  another will have to take over, reforming\n      all\
    \ neighbor adjacencies from scratch. This failure can be\n      detected by the\
    \ router itself, when the other interfaces to the\n      same link cease to hear\
    \ the router's own Hellos.\n"
- title: References
  contents:
  - "References\n   [Ref1]  Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April 1998.\n\
    \   [Ref2]  McKenzie, A., \"ISO Transport Protocol specification ISO DP\n    \
    \       8073\", RFC 905, April 1984.\n   [Ref3]  McCloghrie, K. and F. Kastenholz,\
    \ \"The Interfaces Group MIB\n           using SMIv2\", RFC 2233, November 1997.\n\
    \   [Ref4]  Fuller, V., Li, T, Yu, J. and K. Varadhan, \"Classless Inter-\n  \
    \         Domain Routing (CIDR): an Address Assignment and Aggregation\n     \
    \      Strategy\", RFC 1519, September 1993.\n   [Ref5]  Varadhan, K., Hares,\
    \ S. and Y. Rekhter, \"BGP4/IDRP for IP---\n           OSPF Interaction\", RFC\
    \ 1745, December 1994\n   [Ref6]  Reynolds, J. and J. Postel, \"Assigned Numbers\"\
    , STD 2, RFC\n           1700, October 1994.\n   [Ref7]  deSouza, O. and M. Rodrigues,\
    \ \"Guidelines for Running OSPF\n           Over Frame Relay Networks\", RFC 1586,\
    \ March 1994.\n   [Ref8]  Moy, J., \"Multicast Extensions to OSPF\", RFC 1584,\
    \ March\n           1994.\n   [Ref9]  Coltun, R. and V. Fuller, \"The OSPF NSSA\
    \ Option\", RFC 1587,\n           March 1994.\n   [Ref10] Ferguson, D., \"The\
    \ OSPF External Attributes LSA\",\n           unpublished.\n   [Ref11] Moy, J.,\
    \ \"Extending OSPF to Support Demand Circuits\", RFC\n           1793, April 1995.\n\
    \   [Ref12] Mogul, J. and S. Deering, \"Path MTU Discovery\", RFC 1191,\n    \
    \       November 1990.\n   [Ref13] Rekhter, Y. and T. Li, \"A Border Gateway Protocol\
    \ 4 (BGP-4)\",\n           RFC 1771, March 1995.\n   [Ref14] Deering, S. and R.\
    \ Hinden, \"Internet Protocol, Version 6\n           (IPv6) Specification\", RFC\
    \ 2460, December 1998.\n   [Ref15] Hinden, R. and S. Deering, \"IP Version 6 Addressing\n\
    \           Architecture\", RFC 2373, July 1998.\n   [Ref16] Conta, A. and S.\
    \ Deering, \"Internet Control Message Protocol\n           (ICMPv6) for the Internet\
    \ Protocol Version 6 (IPv6)\n           Specification\" RFC 2463, December 1998.\n\
    \   [Ref17] Narten, T., Nordmark, E. and W. Simpson, \"Neighbor Discovery\n  \
    \         for IP Version 6 (IPv6)\", RFC 2461, December 1998.\n   [Ref18] McCann,\
    \ J., Deering, S. and J. Mogul, \"Path MTU Discovery for\n           IP version\
    \ 6\", RFC 1981, August 1996.\n   [Ref19] Kent, S. and R. Atkinson, \"IP Authentication\
    \ Header\", RFC\n           2402, November 1998.\n   [Ref20] Kent, S. and R. Atkinson,\
    \ \"IP Encapsulating Security Payload\n           (ESP)\", RFC 2406, November\
    \ 1998.\n"
- title: A. OSPF data formats
  contents:
  - "A. OSPF data formats\n   This appendix describes the format of OSPF protocol\
    \ packets and OSPF\n   LSAs.  The OSPF protocol runs directly over the IPv6 network\
    \ layer.\n   Before any data formats are described, the details of the OSPF\n\
    \   encapsulation are explained.\n   Next the OSPF Options field is described.\
    \  This field describes\n   various capabilities that may or may not be supported\
    \ by pieces of\n   the OSPF routing domain. The OSPF Options field is contained\
    \ in OSPF\n   Hello packets, Database Description packets and in OSPF LSAs.\n\
    \   OSPF packet formats are detailed in Section A.3.\n   A description of OSPF\
    \ LSAs appears in Section A.4. This section\n   describes how IPv6 address prefixes\
    \ are represented within LSAs,\n   details the standard LSA header, and then provides\
    \ formats for each\n   of the specific LSA types.\n"
- title: A.1 Encapsulation of OSPF packets
  contents:
  - "A.1 Encapsulation of OSPF packets\n   OSPF runs directly over the IPv6's network\
    \ layer.  OSPF packets are\n   therefore encapsulated solely by IPv6 and local\
    \ data-link headers.\n   OSPF does not define a way to fragment its protocol packets,\
    \ and\n   depends on IPv6 fragmentation when transmitting packets larger than\n\
    \   the link MTU. If necessary, the length of OSPF packets can be up to\n   65,535\
    \ bytes.  The OSPF packet types that are likely to be large\n   (Database Description\
    \ Packets, Link State Request, Link State Update,\n   and Link State Acknowledgment\
    \ packets) can usually be split into\n   several separate protocol packets, without\
    \ loss of functionality.\n   This is recommended; IPv6 fragmentation should be\
    \ avoided whenever\n   possible.  Using this reasoning, an attempt should be made\
    \ to limit\n   the sizes of OSPF packets sent over virtual links to 1280 bytes\n\
    \   unless Path MTU Discovery is being performed [Ref14].\n   The other important\
    \ features of OSPF's IPv6 encapsulation are:\n   o   Use of IPv6 multicast. Some\
    \ OSPF messages are multicast, when\n       sent over broadcast networks.  Two\
    \ distinct IP multicast\n       addresses are used.  Packets sent to these multicast\
    \ addresses\n       should never be forwarded; they are meant to travel a single\
    \ hop\n       only. As such, the multicast addresses have been chosen with\n \
    \      link-local scope, and packets sent to these addresses should have\n   \
    \    their IPv6 Hop Limit set to 1.\n   AllSPFRouters\n      This multicast address\
    \ has been assigned the value FF02::5.  All\n      routers running OSPF should\
    \ be prepared to receive packets sent to\n      this address.  Hello packets are\
    \ always sent to this destination.\n      Also, certain OSPF protocol packets\
    \ are sent to this address\n      during the flooding procedure.\n   AllDRouters\n\
    \      This multicast address has been assigned the value FF02::6.  Both\n   \
    \   the Designated Router and Backup Designated Router must be\n      prepared\
    \ to receive packets destined to this address.  Certain\n      OSPF protocol packets\
    \ are sent to this address during the flooding\n      procedure.\n   o  OSPF is\
    \ IP protocol 89.  This number should be inserted in the\n      Next Header field\
    \ of the encapsulating IPv6 header.\n"
- title: A.2 The Options field
  contents:
  - "A.2 The Options field\n   The 24-bit OSPF Options field is present in OSPF Hello\
    \ packets,\n   Database Description packets and certain LSAs (router-LSAs, network-\n\
    \   LSAs, inter-area-router-LSAs and link-LSAs). The Options field\n   enables\
    \ OSPF routers to support (or not support) optional\n   capabilities, and to communicate\
    \ their capability level to other OSPF\n   routers.  Through this mechanism routers\
    \ of differing capabilities\n   can be mixed within an OSPF routing domain.\n\
    \   An option mismatch between routers can cause a variety of behaviors,\n   depending\
    \ on the particular option. Some option mismatches prevent\n   neighbor relationships\
    \ from forming (e.g., the E-bit below); these\n   mismatches are discovered through\
    \ the sending and receiving of Hello\n   packets. Some option mismatches prevent\
    \ particular LSA types from\n   being flooded across adjacencies (e.g., the MC-bit\
    \ below); these are\n   discovered through the sending and receiving of Database\
    \ Description\n   packets. Some option mismatches prevent routers from being included\n\
    \   in one or more of the various routing calculations because of their\n   reduced\
    \ functionality (again the MC-bit is an example); these\n   mismatches are discovered\
    \ by examining LSAs.\n   Six bits of the OSPF Options field have been assigned.\
    \ Each bit is\n   described briefly below. Routers should reset (i.e.  clear)\n\
    \   unrecognized bits in the Options field when sending Hello packets or\n   Database\
    \ Description packets and when originating LSAs. Conversely,\n   routers encountering\
    \ unrecognized Option bits in received Hello\n   Packets, Database Description\
    \ packets or LSAs should ignore the\n   capability and process the packet/LSA\
    \ normally.\n                             1                     2\n         0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8  9  0  1  2  3\n        -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+--+--+--+--+--+\n\
    \         | | | | | | | | | | | | | | | | | |DC| R| N|MC| E|V6|\n        -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+--+--+--+--+--+\n\
    \                        The Options field\n   V6-bit\n     If this bit is clear,\
    \ the router/link should be excluded from IPv6\n     routing calculations. See\
    \ Section 3.8 of this memo.\n   E-bit\n     This bit describes the way AS-external-LSAs\
    \ are flooded, as\n     described in Sections 3.6, 9.5, 10.8 and 12.1.2 of [Ref1].\n\
    \   MC-bit\n     This bit describes whether IP multicast datagrams are forwarded\n\
    \     according to the specifications in [Ref7].\n   N-bit\n     This bit describes\
    \ the handling of Type-7 LSAs, as specified in\n     [Ref8].\n   R-bit\n     This\
    \ bit (the `Router' bit) indicates whether the originator is an\n     active router.\
    \  If the router bit is clear routes which transit the\n     advertising node\
    \ cannot be computed. Clearing the router bit would\n     be appropriate for a\
    \ multi-homed host that wants to participate in\n     routing, but does not want\
    \ to forward non-locally addressed\n     packets.\n   DC-bit\n     This bit describes\
    \ the router's handling of demand circuits, as\n     specified in [Ref10].\n"
- title: A.3 OSPF Packet Formats
  contents:
  - "A.3 OSPF Packet Formats\n   There are five distinct OSPF packet types.  All OSPF\
    \ packet types\n   begin with a standard 16 byte header.  This header is described\n\
    \   first.  Each packet type is then described in a succeeding section.\n   In\
    \ these sections each packet's division into fields is displayed,\n   and then\
    \ the field definitions are enumerated.\n   All OSPF packet types (other than\
    \ the OSPF Hello packets) deal with\n   lists of LSAs.  For example, Link State\
    \ Update packets implement the\n   flooding of LSAs throughout the OSPF routing\
    \ domain. The format of\n   LSAs is described in Section A.4.\n   The receive\
    \ processing of OSPF packets is detailed in Section 3.2.2.\n   The sending of\
    \ OSPF packets is explained in Section 3.2.1.\n"
- title: A.3.1 The OSPF packet header
  contents:
  - "A.3.1 The OSPF packet header\n   Every OSPF packet starts with a standard 16\
    \ byte header. Together\n   with the encapsulating IPv6 headers, the OSPF header\
    \ contains all the\n   information necessary to determine whether the packet should\
    \ be\n   accepted for further processing.  This determination is described in\n\
    \   Section 3.2.2 of this memo.\n    0                   1                   2\
    \                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Version #   |     Type      |         Packet length         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Router ID                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Area ID                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Checksum             |  Instance ID  |      0        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Version #\n       The OSPF version number.  This specification documents version\
    \ 3\n       of the OSPF protocol.\n   Type\n       The OSPF packet types are as\
    \ follows. See Sections A.3.2 through\n       A.3.6 for details.\n         Type\
    \   Description\n         ---------------------------------\n         1      Hello\n\
    \         2      Database Description\n         3      Link State Request\n  \
    \       4      Link State Update\n         5      Link State Acknowledgment\n\
    \   Packet length\n       The length of the OSPF protocol packet in bytes.  This\
    \ length\n       includes the standard OSPF header.\n   Router ID\n       The\
    \ Router ID of the packet's source.\n   Area ID\n       A 32 bit number identifying\
    \ the area that this packet belongs to.\n       All OSPF packets are associated\
    \ with a single area.  Most travel\n       a single hop only.  Packets travelling\
    \ over a virtual link are\n       labelled with the backbone Area ID of 0.\n \
    \  Checksum\n       OSPF uses the standard checksum calculation for IPv6\n   \
    \    applications: The 16-bit one's complement of the one's complement\n     \
    \  sum of the entire contents of the packet, starting with the OSPF\n       packet\
    \ header, and prepending a \"pseudo-header\" of IPv6 header\n       fields, as\
    \ specified in [Ref14, section 8.1]. The \"Upper-Layer\n       Packet Length\"\
    \ in the pseudo-header is set to value of the OSPF\n       packet header's length\
    \ field.  The Next Header value used in the\n       pseudo-header is 89. If the\
    \ packet's length is not an integral\n       number of 16-bit words, the packet\
    \ is padded with a byte of zero\n       before checksumming. Before computing\
    \ the checksum, the checksum\n       field in the OSPF packet header is set to\
    \ 0.\n   Instance ID\n       Enables multiple instances of OSPF to be run over\
    \ a single link.\n       Each protocol instance would be assigned a separate Instance\
    \ ID;\n       the Instance ID has local link significance only. Received\n   \
    \    packets whose Instance ID is not equal to the receiving\n       interface's\
    \ Instance ID are discarded.\n       0       These fields are reserved.  They\
    \ must be 0.\n"
- title: A.3.2 The Hello packet
  contents:
  - "A.3.2 The Hello packet\n   Hello packets are OSPF packet type 1.  These packets\
    \ are sent\n   periodically on all interfaces (including virtual links) in order\
    \ to\n   establish and maintain neighbor relationships.  In addition, Hello\n\
    \   Packets are multicast on those links having a multicast or broadcast\n   capability,\
    \ enabling dynamic discovery of neighboring routers.\n   All routers connected\
    \ to a common link must agree on certain\n   parameters (HelloInterval and RouterDeadInterval).\
    \  These parameters\n   are included in Hello packets, so that differences can\
    \ inhibit the\n   forming of neighbor relationships. The Hello packet also contains\n\
    \   fields used in Designated Router election (Designated Router ID and\n   Backup\
    \ Designated Router ID), and fields used to detect bi-\n   directionality (the\
    \ Router IDs of all neighbors whose Hellos have\n   been recently received).\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      3               |       1       |  Packet length         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Router ID                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Area ID                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Checksum            |  Instance ID  |      0         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Interface ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Rtr Pri    |             Options                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        HelloInterval         |        RouterDeadInterval      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Designated Router ID                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                Backup Designated Router ID                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Neighbor ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    ...                              |\n   Interface ID\n\
    \       32-bit number uniquely identifying this interface among the\n       collection\
    \ of this router's interfaces. For example, in some\n       implementations it\
    \ may be possible to use the MIB-II IfIndex\n       ([Ref3]).\n   Rtr Pri\n  \
    \     This router's Router Priority.  Used in (Backup) Designated\n       Router\
    \ election.  If set to 0, the router will be ineligible to\n       become (Backup)\
    \ Designated Router.\n   Options\n       The optional capabilities supported by\
    \ the router, as documented\n       in Section A.2.\n   HelloInterval\n      \
    \ The number of seconds between this router's Hello packets.\n   RouterDeadInterval\n\
    \       The number of seconds before declaring a silent router down.\n   Designated\
    \ Router ID\n       The identity of the Designated Router for this network, in\
    \ the\n       view of the sending router.  The Designated Router is identified\n\
    \       by its Router ID. Set to 0.0.0.0 if there is no Designated\n       Router.\n\
    \   Backup Designated Router ID\n       The identity of the Backup Designated\
    \ Router for this network, in\n       the view of the sending router.  The Backup\
    \ Designated Router is\n       identified by its IP Router ID.  Set to 0.0.0.0\
    \ if there is no\n       Backup Designated Router.\n   Neighbor ID\n       The\
    \ Router IDs of each router from whom valid Hello packets have\n       been seen\
    \ recently on the network.  Recently means in the last\n       RouterDeadInterval\
    \ seconds.\n"
- title: A.3.3 The Database Description packet
  contents:
  - "A.3.3 The Database Description packet\n   Database Description packets are OSPF\
    \ packet type 2.  These packets\n   are exchanged when an adjacency is being initialized.\
    \  They describe\n   the contents of the link-state database.  Multiple packets\
    \ may be\n   used to describe the database.  For this purpose a poll-response\n\
    \   procedure is used.      One of the routers is designated to be the\n   master,\
    \ the other the slave.  The master sends Database Description\n   packets (polls)\
    \ which are acknowledged by Database Description\n   packets sent by the slave\
    \ (responses).  The responses are linked to\n   the polls via the packets' DD\
    \ sequence numbers.\n    0                  1                   2            \
    \       3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \    3        |       2       |        Packet length          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Router ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Area ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Checksum            |  Instance ID  |      0        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       0       |               Options                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Interface MTU         |       0        |0|0|0|0|0|I|M|MS\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    DD sequence number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +- \
    \                                                            -+\n   |        \
    \                                                       |\n   +-             \
    \        An LSA Header                           -+\n   |                    \
    \                                           |\n   +-                         \
    \                                    -+\n   |                                \
    \                               |\n   +-                                     \
    \                        -+\n   |                                            \
    \                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    ...                              |\n   The format of\
    \ the Database Description packet is very similar to both\n   the Link State Request\
    \ and Link State Acknowledgment packets.  The\n   main part of all three is a\
    \ list of items, each item describing a\n   piece of the link-state database.\
    \      The sending of Database\n   Description Packets is documented in Section\
    \ 10.8 of [Ref1].  The\n   reception of Database Description packets is documented\
    \ in Section\n   10.6 of [Ref1].\n   Options\n      The optional capabilities\
    \ supported by the router, as documented\n      in Section A.2.\n   Interface\
    \ MTU\n      The size in bytes of the largest IPv6 datagram that can be sent\n\
    \      out the    associated interface, without fragmentation.  The MTUs\n   \
    \   of common Internet link  types can be found in Table 7-1    of\n      [Ref12].\
    \ Interface MTU should be set to 0 in Database Description\n      packets sent\
    \ over virtual links.\n   I-bit\n      The Init bit.  When set to 1, this packet\
    \ is the first in the\n      sequence of Database Description Packets.\n   M-bit\n\
    \      The More bit.  When set to 1, it indicates that more Database\n      Description\
    \ Packets are to follow.\n   MS-bit\n      The Master/Slave bit.  When set to\
    \ 1, it indicates that the router\n      is the master during the Database Exchange\
    \ process.  Otherwise,\n      the router is the slave.\n   DD sequence number\n\
    \      Used to sequence the collection of Database Description Packets.\n    \
    \  The initial value (indicated by the Init bit being set) should be\n      unique.\
    \  The DD sequence number then increments until the complete\n      database description\
    \ has been sent.\n   The rest of the packet consists of a (possibly partial) list\
    \ of the\n   link-state database's pieces.  Each LSA in the database is described\n\
    \   by its LSA header.      The LSA header is documented in Section\n   A.4.1.\
    \  It contains all the information required to uniquely identify\n   both the\
    \ LSA and the LSA's current instance.\n"
- title: A.3.4 The Link State Request packet
  contents:
  - "A.3.4 The Link State Request packet\n   Link State Request packets are OSPF packet\
    \ type 3.  After exchanging\n   Database Description packets with a neighboring\
    \ router, a router may\n   find that parts of its link-state database are out-of-date.\
    \ The Link\n   State Request packet is used to request the pieces of the neighbor's\n\
    \   database that are more up-to-date.  Multiple Link State Request\n   packets\
    \ may need to be used.\n   A router that sends a Link State Request packet has\
    \ in mind the\n   precise instance of the database pieces it is requesting. Each\n\
    \   instance is defined by its LS sequence number, LS checksum, and LS\n   age,\
    \ although these fields are not specified in the Link State\n   Request Packet\
    \ itself.  The router may receive even more recent\n   instances in response.\n\
    \   The sending of Link State Request packets is documented in Section\n   10.9\
    \ of [Ref1].  The reception of Link State Request packets is\n   documented in\
    \ Section 10.7 of [Ref1].\n    0                   1                   2     \
    \              3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      3           |       3       |     Packet length          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Router ID                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Area ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Checksum               |  Instance ID  |      0      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              0                  |        LS type              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Link State ID                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Advertising Router                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       ...                     |\n   Each LSA requested is\
    \ specified by its LS type, Link State ID, and\n   Advertising Router.  This uniquely\
    \ identifies the LSA, but not its\n   instance.  Link State Request packets are\
    \ understood to be requests\n   for the most recent instance (whatever that might\
    \ be).\n"
- title: A.3.5 The Link State Update packet
  contents:
  - "A.3.5 The Link State Update packet\n   Link State Update packets are OSPF packet\
    \ type 4.  These packets\n   implement the flooding of LSAs.  Each Link State\
    \ Update packet\n   carries a collection of LSAs one hop further from their origin.\n\
    \   Several LSAs may be included in a single packet.\n   Link State Update packets\
    \ are multicast on those physical networks\n   that support multicast/broadcast.\
    \  In order to make the flooding\n   procedure reliable, flooded LSAs are acknowledged\
    \ in Link State\n   Acknowledgment packets.  If retransmission of certain LSAs\
    \ is\n   necessary, the retransmitted LSAs are always carried by unicast Link\n\
    \   State Update packets. For more information on the reliable flooding\n   of\
    \ LSAs, consult Section 3.5.\n    0                   1                   2  \
    \                 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      3        |       4       |         Packet length         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Router ID                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Area ID                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Checksum            |  Instance ID  |      0         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           # LSAs                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +- \
    \                                                           +-+\n   |        \
    \                    LSAs                               |\n   +-             \
    \                                               +-+\n   |                    ...\
    \                              |\n   # LSAs\n      The number of LSAs included\
    \ in this update.\n   The body of the Link State Update packet consists of a list\
    \ of LSAs.\n   Each LSA begins with a common 20 byte header, described in Section\n\
    \   A.4.2. Detailed formats of the different types of LSAs are described\n   in\
    \ Section A.4.\n"
- title: A.3.6 The Link State Acknowledgment packet
  contents:
  - "A.3.6 The Link State Acknowledgment packet\n   Link State Acknowledgment Packets\
    \ are OSPF packet type 5.  To make\n   the flooding of LSAs reliable, flooded\
    \ LSAs are explicitly\n   acknowledged.  This acknowledgment is accomplished through\
    \ the\n   sending and receiving of Link State Acknowledgment packets. The\n  \
    \ sending of Link State Acknowledgement packets is documented in\n   Section 13.5\
    \ of [Ref1].  The reception of Link State Acknowledgement\n   packets is documented\
    \ in Section 13.7 of [Ref1].\n   Multiple LSAs can be acknowledged in a single\
    \ Link State\n   Acknowledgment packet.  Depending on the state of the sending\n\
    \   interface and the sender of the corresponding Link State Update\n   packet,\
    \ a Link State Acknowledgment packet is sent either to the\n   multicast address\
    \ AllSPFRouters, to the multicast address\n   AllDRouters, or as a unicast (see\
    \ Section 13.5 of [Ref1] for\n   details).\n   The format of this packet is similar\
    \ to that of the Data Description\n   packet.  The body of both packets is simply\
    \ a list of LSA headers.\n    0                   1                   2      \
    \             3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      3              |       5       |  Packet length          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Router ID                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Area ID                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Checksum            |  Instance ID  |      0         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +- \
    \                                                            -+\n   |        \
    \                                                       |\n   +-             \
    \           An LSA Header                        -+\n   |                    \
    \                                           |\n   +-                         \
    \                                    -+\n   |                                \
    \                               |\n   +-                                     \
    \                        -+\n   |                                            \
    \                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    ...                              |\n   Each acknowledged\
    \ LSA is described by its LSA header.  The LSA header\n   is documented in Section\
    \ A.4.2.  It contains all the information\n   required to uniquely identify both\
    \ the LSA and the LSA's current\n   instance.\n"
- title: A.4 LSA formats
  contents:
  - "A.4 LSA formats\n   This memo defines seven distinct types of LSAs.  Each LSA\
    \ begins with\n   a standard 20 byte LSA header.  This header is explained in\
    \ Section\n   A.4.2.  Succeeding sections then diagram the separate LSA types.\n\
    \   Each LSA describes a piece of the OSPF routing domain.  Every router\n   originates\
    \ a router-LSA. A network-LSA is advertised for each link by\n   its Designated\
    \ Router. A router's link-local addresses are advertised\n   to its neighbors\
    \ in link-LSAs. IPv6 prefixes are advertised in\n   intra-area-prefix-LSAs, inter-area-prefix-LSAs\
    \ and AS-external-LSAs.\n   Location of specific routers can be advertised across\
    \ area boundaries\n   in inter-area-router-LSAs. All LSAs are then flooded throughout\
    \ the\n   OSPF routing domain.  The flooding algorithm is reliable, ensuring\n\
    \   that all routers have the same collection of LSAs.  (See Section 3.5\n   for\
    \ more information concerning the flooding algorithm).  This\n   collection of\
    \ LSAs is called the link-state database.\n   From the link state database, each\
    \ router constructs a shortest path\n   tree with itself as root.  This yields\
    \ a routing table (see Section\n   11 of [Ref1]).  For the details of the routing\
    \ table build process,\n   see Section 3.8.\n"
- title: A.4.1 IPv6 Prefix Representation
  contents:
  - "A.4.1 IPv6 Prefix Representation\n   IPv6 addresses are bit strings of length\
    \ 128. IPv6 routing\n   algorithms, and OSPF for IPv6 in particular, advertise\
    \ IPv6 address\n   prefixes. IPv6 address prefixes are bit strings whose length\
    \ ranges\n   between 0 and 128 bits (inclusive).\n   Within OSPF, IPv6 address\
    \ prefixes are always represented by a\n   combination of three fields: PrefixLength,\
    \ PrefixOptions, and Address\n   Prefix. PrefixLength is the length in bits of\
    \ the prefix.\n   PrefixOptions is an 8-bit field describing various capabilities\n\
    \   associated with the prefix (see Section A.4.2). Address Prefix is an\n   encoding\
    \ of the prefix itself as an even multiple of 32-bit words,\n   padding with zero\
    \ bits as necessary; this encoding consumes\n   (PrefixLength + 31) / 32) 32-bit\
    \ words.\n   The default route is represented by a prefix of length 0.\n   Examples\
    \ of IPv6 Prefix representation in OSPF can be found in\n   Sections A.4.5, A.4.7,\
    \ A.4.8 and A.4.9.\n"
- title: A.4.1.1 Prefix Options
  contents:
  - "A.4.1.1 Prefix Options\n   Each prefix is advertised along with an 8-bit field\
    \ of capabilities.\n   These serve as input to the various routing calculations,\
    \ allowing,\n   for example, certain prefixes to be ignored in some cases, or\
    \ to be\n   marked as not readvertisable in others.\n                  0  1  2\
    \  3  4  5  6  7\n                 +--+--+--+--+--+--+--+--+\n               \
    \  |  |  |  |  | P|MC|LA|NU|\n                 +--+--+--+--+--+--+--+--+\n   \
    \              The Prefix Options field\n   NU-bit\n      The \"no unicast\" capability\
    \ bit. If set, the prefix should be\n      excluded from IPv6 unicast calculations,\
    \ otherwise it should be\n      included.\n   LA-bit\n      The \"local address\"\
    \ capability bit. If set, the prefix is actually\n      an IPv6 interface address\
    \ of the advertising router.\n   MC-bit\n      The \"multicast\" capability bit.\
    \ If set, the prefix should be\n      included in IPv6 multicast routing calculations,\
    \ otherwise it\n      should be excluded.\n   P-bit\n      The \"propagate\" bit.\
    \ Set on NSSA area prefixes that should be\n      readvertised at the NSSA area\
    \ border.\n"
- title: A.4.2 The LSA header
  contents:
  - "A.4.2 The LSA header\n   All LSAs begin with a common 20 byte header.  This header\
    \ contains\n   enough information to uniquely identify the LSA (LS type, Link\
    \ State\n   ID, and Advertising Router).  Multiple instances of the LSA may exist\n\
    \   in the routing domain at the same time.  It is then necessary to\n   determine\
    \ which instance is more recent.  This is accomplished by\n   examining the LS\
    \ age, LS sequence number and LS checksum fields that\n   are also contained in\
    \ the LSA header.\n    0                   1                   2             \
    \      3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \         LS age             |           LS type              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Link State ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Advertising Router                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    LS sequence number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        LS checksum           |             length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   LS age\n      The time in seconds since the LSA was originated.\n   LS type\n\
    \      The LS type field indicates the function performed by the LSA.\n      The\
    \ high-order three bits of LS type encode generic properties of\n      the LSA,\
    \ while the remainder (called LSA function code) indicate\n      the LSA's specific\
    \ functionality. See Section A.4.2.1 for a\n      detailed description of LS type.\n\
    \   Link State ID\n      Together with LS type and Advertising Router, uniquely\
    \ identifies\n      the LSA in the link-state database.\n   Advertising Router\n\
    \      The Router ID of the router that originated the LSA.  For example,\n  \
    \    in network-LSAs this field is equal to the Router ID of the\n      network's\
    \ Designated Router.\n   LS sequence number\n      Detects old or duplicate LSAs.\
    \  Successive instances of an LSA are\n      given successive LS sequence numbers.\
    \  See Section 12.1.6 in\n      [Ref1] for more details.\n   LS checksum\n   \
    \   The Fletcher checksum of the complete contents of the LSA,\n      including\
    \ the LSA header but excluding the LS age field. See\n      Section 12.1.7 in\
    \ [Ref1] for more details.\n   length\n      The length in bytes of the LSA. \
    \ This includes the 20 byte LSA\n      header.\n"
- title: A.4.2.1 LS type
  contents:
  - "A.4.2.1 LS type\n   The LS type field indicates the function performed by the\
    \ LSA.  The\n   high-order three bits of LS type encode generic properties of\
    \ the\n   LSA, while the remainder (called LSA function code) indicate the\n \
    \  LSA's specific functionality. The format of the LS type is as\n   follows:\n\
    \           0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5\n         +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \         |U |S2|S1|           LSA Function Code          |\n         +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \   The U bit indicates how the LSA should be handled by a router which\n   does\
    \ not recognize the LSA's function code.  Its values are:\n     U-bit   LSA Handling\n\
    \     -------------------------------------------------------------\n     0  \
    \     Treat the LSA as if it had link-local flooding scope\n     1       Store\
    \ and flood the LSA, as if type understood\n   The S1 and S2 bits indicate the\
    \ flooding scope of the LSA. The values\n   are:\n   S2  S1   Flooding Scope\n\
    \   ---------------------------------------------------------------------\n  \
    \ 0  0    Link-Local Scoping. Flooded only on link it is originated on.\n   0\
    \  1    Area Scoping. Flooded to all routers in the originating area\n   1  0\
    \    AS Scoping. Flooded to all routers in the AS\n   1  1    Reserved\n   The\
    \ LSA function codes are defined as follows. The origination and\n   processing\
    \ of these LSA function codes are defined elsewhere in this\n   memo, except for\
    \ the group-membership-LSA (see [Ref7]) and the Type-\n   7-LSA (see [Ref8]).\
    \ Each LSA function code also implies a specific\n   setting for the U, S1 and\
    \ S2 bits, as shown below.\n         LSA function code   LS Type   Description\n\
    \         ----------------------------------------------------\n         1   \
    \                0x2001    Router-LSA\n         2                   0x2002   \
    \ Network-LSA\n         3                   0x2003    Inter-Area-Prefix-LSA\n\
    \         4                   0x2004    Inter-Area-Router-LSA\n         5    \
    \               0x4005    AS-External-LSA\n         6                   0x2006\
    \    Group-membership-LSA\n         7                   0x2007    Type-7-LSA\n\
    \         8                   0x0008    Link-LSA\n         9                 \
    \  0x2009    Intra-Area-Prefix-LSA\n"
- title: A.4.3 Router-LSAs
  contents:
  - "A.4.3 Router-LSAs\n   Router-LSAs have LS type equal to 0x2001.  Each router\
    \ in an area\n   originates one or more router-LSAs.   The complete collection\
    \ of\n   router-LSAs originated by the router describe the state and cost of\n\
    \   the router's interfaces to the area. For details concerning the\n   construction\
    \ of router-LSAs, see Section 3.4.3.1. Router-LSAs are\n   flooded throughout\
    \ a single area only.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           LS age             |0|0|1|          1               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Link State ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Advertising Router                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    LS sequence number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        LS checksum           |             length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    0  |W|V|E|B|            Options                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |       0       |          Metric               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Interface ID                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Neighbor Interface ID                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Neighbor Router ID                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             ...                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |       0       |          Metric               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Interface ID                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Neighbor Interface ID                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Neighbor Router ID                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             ...                               |\n   A single\
    \ router may originate one or more Router LSAs, distinguished\n   by their Link-State\
    \ IDs (which are chosen arbitrarily by the\n   originating router).  The Options\
    \ field and V, E and B bits should be\n   the same in all Router LSAs from a single\
    \ originator.  However, in\n   the case of a mismatch the values in the LSA with\
    \ the lowest Link\n   State ID take precedence. When more than one Router LSA\
    \ is received\n   from a single router, the links are processed as if concatenated\
    \ into\n   a single LSA.\n   bit V\n      When set, the router is an endpoint\
    \ of one or more fully adjacent\n      virtual links having the described area\
    \ as Transit area (V is for\n      virtual link endpoint).\n   bit E\n      When\
    \ set, the router is an AS boundary router (E is for external).\n   bit B\n  \
    \    When set, the router is an area border router (B is for border).\n   bit\
    \ W\n      When set, the router is a wild-card multicast receiver.  When\n   \
    \   running MOSPF, these routers receive all multicast datagrams,\n      regardless\
    \ of destination. See Sections 3, 4 and A.2 of [Ref8] for\n      details.\n  \
    \ Options\n      The optional capabilities supported by the router, as documented\n\
    \      in Section A.2.\n   The following fields are used to describe each router\
    \ interface.  The\n   Type field indicates the kind of interface being described.\
    \  It may\n   be an interface to a transit network, a point-to-point connection\
    \ to\n   another router or a virtual link.  The values of all the other fields\n\
    \   describing a router interface depend on the interface's Type field.\n   Type\n\
    \      The kind of interface being described.  One of the following:\n       \
    \   Type   Description\n          ---------------------------------------------------\n\
    \          1      Point-to-point connection to another router\n          2   \
    \   Connection to a transit network\n          3      Reserved\n          4  \
    \    Virtual link\n   Metric\n      The cost of using this router interface, for\
    \ outbound traffic.\n   Interface ID\n      The Interface ID assigned to the interface\
    \ being described. See\n      Sections 3.1.2 and C.3.\n   Neighbor Interface ID\n\
    \      The Interface ID the neighbor router (or the attached link's\n      Designated\
    \ Router, for Type 2 interfaces) has been advertising\n      in hello packets\
    \ sent on the attached link.\n   Neighbor Router ID\n      The Router ID the neighbor\
    \ router (or the attached link's\n      Designated Router, for Type 2 interfaces).\n\
    \      For Type 2 links, the combination of Neighbor Interface ID and\n      Neighbor\
    \ Router ID allows the network-LSA for the attached link\n      to be found in\
    \ the link-state database.\n"
- title: A.4.4 Network-LSAs
  contents:
  - "A.4.4 Network-LSAs\n   Network-LSAs have LS type equal to 0x2002.  A network-LSA\
    \ is\n   originated for each broadcast and NBMA link in the area which\n   supports\
    \ two or more routers.  The network-LSA is originated by the\n   link's Designated\
    \ Router.  The LSA describes all routers attached to\n   the link, including the\
    \ Designated Router itself.  The LSA's Link\n   State ID field is set to the Interface\
    \ ID that the Designated Router\n   has been advertising in Hello packets on the\
    \ link.\n   The distance from the network to all attached routers is zero.  This\n\
    \   is why the metric fields need not be specified in the network-LSA.\n   For\
    \ details concerning the construction of network-LSAs, see Section\n   3.4.3.2.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           LS age             |0|0|1|          2               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Link State ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Advertising Router                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    LS sequence number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        LS checksum           |             length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      0               |              Options                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Attached Router                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             ...                               |\n   Attached\
    \ Router\n      The Router IDs of each of the routers attached to the link.\n\
    \      Actually, only those routers that are fully adjacent to the\n      Designated\
    \ Router are listed.  The Designated Router includes\n      itself in this list.\
    \  The number of routers included can be\n      deduced from the LSA header's\
    \ length field.\n"
- title: A.4.5 Inter-Area-Prefix-LSAs
  contents:
  - "A.4.5 Inter-Area-Prefix-LSAs\n   Inter-Area-Prefix-LSAs have LS type equal to\
    \ 0x2003.  These LSAs are\n   are the IPv6 equivalent of OSPF for IPv4's type\
    \ 3 summary-LSAs (see\n   Section 12.4.3 of [Ref1]).  Originated by area border\
    \ routers, they\n   describe routes to IPv6 address prefixes that belong to other\
    \ areas.\n   A separate Inter-Area-Prefix-LSA is originated for each IPv6 address\n\
    \   prefix. For details concerning the construction of Inter-Area-\n   Prefix-LSAs,\
    \ see Section 3.4.3.3.\n   For stub areas, Inter-Area-Prefix-LSAs can also be\
    \ used to describe a\n   (per-area) default route.  Default summary routes are\
    \ used in stub\n   areas instead of flooding a complete set of external routes.\
    \  When\n   describing a default summary route, the Inter-Area-Prefix-LSA's\n\
    \   PrefixLength is set to 0.\n    0                   1                   2 \
    \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           LS age             |0|0|1|          3               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Link State ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Advertising Router                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    LS sequence number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        LS checksum           |             length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      0               |                  Metric                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | PrefixLength  | PrefixOptions |             (0)               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Address Prefix                         |\n   |  \
    \                           ...                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Metric\n      The cost of this route.  Expressed in the same units as the\n\
    \      interface costs in the router-LSAs. When the Inter-Area-Prefix-LSA\n  \
    \    is describing a route to a range of addresses (see Section C.2)\n      the\
    \ cost is set to the maximum cost to any reachable component of\n      the address\
    \ range.\n   PrefixLength, PrefixOptions and Address Prefix\n      Representation\
    \ of the IPv6 address prefix, as described in Section\n      A.4.1.\n"
- title: A.4.6 Inter-Area-Router-LSAs
  contents:
  - "A.4.6 Inter-Area-Router-LSAs\n   Inter-Area-Router-LSAs have LS type equal to\
    \ 0x2004.  These LSAs are\n   are the IPv6 equivalent of OSPF for IPv4's type\
    \ 4 summary-LSAs (see\n   Section 12.4.3 of [Ref1]).  Originated by area border\
    \ routers, they\n   describe routes to routers in other areas.  (To see why it\
    \ is\n   necessary to advertise the location of each ASBR, consult Section\n \
    \  16.4 in [Ref1].)  Each LSA describes a route to a single router. For\n   details\
    \ concerning the construction of Inter-Area-Router-LSAs, see\n   Section 3.4.3.4.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           LS age             |0|0|1|        4                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Link State ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Advertising Router                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    LS sequence number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        LS checksum           |             length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      0               |          Options                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      0               |          Metric                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Destination Router ID                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Options\n      The optional capabilities supported by the router, as documented\n\
    \      in Section A.2.\n   Metric\n      The cost of this route.  Expressed in\
    \ the same units as the\n      interface costs in the router-LSAs.\n   Destination\
    \ Router ID\n      The Router ID of the router being described by the LSA.\n"
- title: A.4.7 AS-external-LSAs
  contents:
  - "A.4.7 AS-external-LSAs\n   AS-external-LSAs have LS type equal to 0x4005.  These\
    \ LSAs are\n   originated by AS boundary routers, and describe destinations external\n\
    \   to the AS. Each LSA describes a route to a single IPv6 address\n   prefix.\
    \ For details concerning the construction of AS-external-LSAs,\n   see Section\
    \ 3.4.3.5.\n   AS-external-LSAs can be used to describe a default route.  Default\n\
    \   routes are used when no specific route exists to the destination.\n   When\
    \ describing a default route, the AS-external-LSA's PrefixLength\n   is set to\
    \ 0.\n    0                   1                   2                   3\n    0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           LS age             |0|1|0|          5               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Link State ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Advertising Router                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    LS sequence number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        LS checksum           |             length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        |E|F|T|                 Metric                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | PrefixLength  | PrefixOptions |     Referenced LS Type        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Address Prefix                         |\n   |  \
    \                           ...                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +- \
    \                                                            -+\n   |        \
    \                                                       |\n   +-             \
    \   Forwarding Address (Optional)                -+\n   |                    \
    \                                           |\n   +-                         \
    \                                    -+\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           External Route Tag (Optional)                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |               Referenced Link State ID (Optional)             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   bit E\n      The type of external metric.  If bit E is set, the metric\n \
    \     specified is a Type 2 external metric.  This means the metric is\n     \
    \ considered larger than any intra-AS path.  If bit E is zero, the\n      specified\
    \ metric is a Type 1 external metric.  This means that it\n      is expressed\
    \ in the same units as the link state metric (i.e., the\n      same units as interface\
    \ cost).\n   bit F\n      If set, a Forwarding Address has been included in the\
    \ LSA.\n   bit T\n      If set, an External Route Tag has been included in the\
    \ LSA.\n   Metric\n      The cost of this route.  Interpretation depends on the\
    \ external\n      type indication (bit E above).\n   PrefixLength, PrefixOptions\
    \ and Address Prefix\n      Representation of the IPv6 address prefix, as described\
    \ in Section\n      A.4.1.\n   Referenced LS type\n      If non-zero, an LSA with\
    \ this LS type is to be associated with\n      this LSA (see Referenced Link State\
    \ ID below).\n   Forwarding address\n      A fully qualified IPv6 address (128\
    \ bits).  Included in the LSA if\n      and only if bit F has been set.  If included,\
    \ Data traffic for the\n      advertised destination will be forwarded to this\
    \ address. Must not\n      be set to the IPv6 Unspecified Address (0:0:0:0:0:0:0:0).\n\
    \   External Route Tag\n      A 32-bit field which may be used to communicate\
    \ additional\n      information between AS boundary routers; see [Ref5] for example\n\
    \      usage. Included in the LSA if and only if bit T has been set.\n   Referenced\
    \ Link State ID Included if and only if Reference LS Type is\n      non-zero.\
    \  If included, additional information concerning the\n      advertised external\
    \ route can be found in the LSA having LS type\n      equal to \"Referenced LS\
    \ Type\", Link State ID equal to \"Referenced\n      Link State ID\" and Advertising\
    \ Router the same as that specified\n      in the AS-external-LSA's link state\
    \ header. This additional\n      information is not used by the OSPF protocol\
    \ itself.  It may be\n      used to communicate information between AS boundary\
    \ routers; the\n      precise nature of such information is outside the scope\
    \ of this\n      specification.\n   All, none or some of the fields labeled Forwarding\
    \ address, External\n   Route Tag and Referenced Link State ID may be present\
    \ in the AS-\n   external-LSA (as indicated by the setting of bit F, bit T and\n\
    \   Referenced LS type respectively). However, when present Forwarding\n   Address\
    \ always comes first, with External Route Tag always preceding\n   Referenced\
    \ Link State ID.\n"
- title: A.4.8 Link-LSAs
  contents:
  - "A.4.8 Link-LSAs\n   Link-LSAs have LS type equal to 0x0008.  A router originates\
    \ a\n   separate Link-LSA for each link it is attached to. These LSAs have\n \
    \  local-link flooding scope; they are never flooded beyond the link\n   that\
    \ they are associated with. Link-LSAs have three purposes: 1) they\n   provide\
    \ the router's link-local address to all other routers attached\n   to the link\
    \ and 2) they inform other routers attached to the link of\n   a list of IPv6\
    \ prefixes to associate with the link and 3) they allow\n   the router to assert\
    \ a collection of Options bits to associate with\n   the Network-LSA that will\
    \ be originated for the link.\n   A link-LSA's Link State ID is set equal to the\
    \ originating router's\n   Interface ID on the link.\n    0                  \
    \ 1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           LS age             |0|0|0|           8              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Link State ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Advertising Router                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     LS sequence number                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        LS checksum           |             length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Rtr Pri    |                Options                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +- \
    \                                                            -+\n   |        \
    \                                                       |\n   +-             \
    \   Link-local Interface Address                 -+\n   |                    \
    \                                           |\n   +-                         \
    \                                    -+\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         # prefixes                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  PrefixLength | PrefixOptions |             (0)               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Address Prefix                         |\n   |  \
    \                           ...                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             ...                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  PrefixLength | PrefixOptions |             (0)               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Address Prefix                         |\n   |  \
    \                           ...                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Rtr Pri\n      The Router Priority of the interface attaching the originating\n\
    \      router to the link.\n   Options\n      The set of Options bits that the\
    \ router would like set in the\n      Network-LSA that will be originated for\
    \ the link.\n   Link-local Interface Address\n      The originating router's link-local\
    \ interface address on the\n      link.\n   # prefixes\n      The number of IPv6\
    \ address prefixes contained in the LSA.\n      The rest of the link-LSA contains\
    \ a list of IPv6 prefixes to be\n      associated with the link.\n   PrefixLength,\
    \ PrefixOptions and Address Prefix\n      Representation of an IPv6 address prefix,\
    \ as described in\n      Section A.4.1.\n"
- title: A.4.9 Intra-Area-Prefix-LSAs
  contents:
  - "A.4.9 Intra-Area-Prefix-LSAs\n   Intra-Area-Prefix-LSAs have LS type equal to\
    \ 0x2009. A router uses\n   Intra-Area-Prefix-LSAs to advertise one or more IPv6\
    \ address\n   prefixes that are associated with a) the router itself, b) an\n\
    \   attached stub network segment or c) an attached transit network\n   segment.\
    \ In IPv4, a) and b) were accomplished via the router's\n   router-LSA, and c)\
    \ via a network-LSA. However, in OSPF for IPv6 all\n   addressing information\
    \ has been removed from router-LSAs and\n   network-LSAs, leading to the introduction\
    \ of the Intra-Area-Prefix-LSA.\n   A router can originate multiple Intra-Area-Prefix-LSAs\
    \ for each\n   router or transit network; each such LSA is distinguished by its\n\
    \   Link State ID.\n    0                  1                   2             \
    \      3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \         LS age             |0|0|1|            9             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Link State ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Advertising Router                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    LS sequence number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        LS checksum           |             length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         # prefixes           |     Referenced LS type         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  Referenced Link State ID                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |               Referenced Advertising Router                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  PrefixLength | PrefixOptions |          Metric               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Address Prefix                          |\n   |  \
    \                           ...                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             ...                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  PrefixLength | PrefixOptions |          Metric               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Address Prefix                          |\n   |  \
    \                           ...                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   # prefixes\n      The number of IPv6 address prefixes contained in the LSA.\n\
    \      Router\n   Referenced LS type, Referenced Link State ID and Referenced\n\
    \      Advertising\n      Identifies the router-LSA or network-LSA with which\
    \ the IPv6\n      address prefixes should be associated. If Referenced LS type\
    \ is 1,\n      the prefixes are associated with a router-LSA, Referenced Link\n\
    \      State ID should be 0 and Referenced Advertising Router should be\n    \
    \  the originating router's Router ID. If Referenced LS type is 2,\n      the\
    \ prefixes are associated with a network-LSA, Referenced Link\n      State ID\
    \ should be the Interface ID of the link's Designated\n      Router and Referenced\
    \ Advertising Router should be the Designated\n      Router's Router ID.\n   The\
    \ rest of the Intra-Area-Prefix-LSA contains a list of IPv6\n   prefixes to be\
    \ associated with the router or transit link, together\n   with the cost of each\
    \ prefix.\n   PrefixLength, PrefixOptions and Address Prefix\n      Representation\
    \ of an IPv6 address prefix, as described in Section\n      A.4.1.\n   Metric\n\
    \      The cost of this prefix.  Expressed in the same units as the\n      interface\
    \ costs in the router-LSAs.\n"
- title: B. Architectural Constants
  contents:
  - "B. Architectural Constants\n   Architectural constants for the OSPF protocol\
    \ are defined in Appendix\n   B of [Ref1]. The only difference for OSPF for IPv6\
    \ is that\n   DefaultDestination is encoded as a prefix of length 0 (see Section\n\
    \   A.4.1).\n"
- title: C. Configurable Constants
  contents:
  - "C. Configurable Constants\n   The OSPF protocol has quite a few configurable\
    \ parameters.  These\n   parameters are listed below.  They are grouped into general\n\
    \   functional categories (area parameters, interface parameters, etc.).\n   Sample\
    \ values are given for some of the parameters.\n   Some parameter settings need\
    \ to be consistent among groups of\n   routers.  For example, all routers in an\
    \ area must agree on that\n   area's parameters, and all routers attached to a\
    \ network must agree\n   on that network's HelloInterval and RouterDeadInterval.\n\
    \   Some parameters may be determined by router algorithms outside of\n   this\
    \ specification (e.g., the address of a host connected to the\n   router via a\
    \ SLIP line).  From OSPF's point of view, these items are\n   still configurable.\n"
- title: C.1 Global parameters
  contents:
  - "C.1 Global parameters\n   In general, a separate copy of the OSPF protocol is\
    \ run for each\n   area.  Because of this, most configuration parameters are defined\
    \ on\n   a per-area basis.  The few global configuration parameters are listed\n\
    \   below.\n   Router ID\n      This is a 32-bit number that uniquely identifies\
    \ the router in the\n      Autonomous System. If a router's OSPF Router ID is\
    \ changed, the\n      router's OSPF software should be restarted before the new\
    \ Router\n      ID takes effect. Before restarting in order to change its Router\n\
    \      ID, the router should flush its self-originated LSAs from the\n      routing\
    \ domain (see Section 14.1 of [Ref1]), or they will persist\n      for up to MaxAge\
    \ minutes.\n      Because the size of the Router ID is smaller than an IPv6 address,\n\
    \      it cannot be set to one of the router's IPv6 addresses (as is\n      commonly\
    \ done for IPv4). Possible Router ID assignment procedures\n      for IPv6 include:\
    \ a) assign the IPv6 Router ID as one of the\n      router's IPv4 addresses or\
    \ b) assign IPv6 Router IDs through some\n      local administrative procedure\
    \ (similar to procedures used by\n      manufacturers to assign product serial\
    \ numbers).\n      The Router ID of 0.0.0.0 is reserved, and should not be used.\n"
- title: C.2 Area parameters
  contents:
  - "C.2 Area parameters\n   All routers belonging to an area must agree on that area's\n\
    \   configuration.  Disagreements between two routers will lead to an\n   inability\
    \ for adjacencies to form between them, with a resulting\n   hindrance to the\
    \ flow of routing protocol and data traffic.  The\n   following items must be\
    \ configured for an area:\n   Area ID\n       This is a 32-bit number that identifies\
    \ the area.  The Area\n       ID of 0 is reserved for the backbone.\n   List of\
    \ address ranges\n       Address ranges control the advertisement of routes across\n\
    \       area boundaries. Each address range consists of the\n       following\
    \ items:\n       [IPv6 prefix, prefix length]\n               Describes the collection\
    \ of IPv6 addresses contained in\n               the address range.\n       Status\
    \  Set to either Advertise or DoNotAdvertise.  Routing\n               information\
    \ is condensed at area boundaries.  External to\n               the area, at most\
    \ a single route is advertised (via a\n               inter-area-prefix-LSA) for\
    \ each address range. The route\n               is advertised if and only if the\
    \ address range's Status\n               is set to Advertise.  Unadvertised ranges\
    \ allow the\n               existence of certain networks to be intentionally\
    \ hidden\n               from other areas. Status is set to Advertise by default.\n\
    \   ExternalRoutingCapability\n      Whether AS-external-LSAs will be flooded\
    \ into/throughout the area.\n      If AS-external-LSAs are excluded from the area,\
    \ the area is called\n      a \"stub\".  Internal to stub areas, routing to external\n\
    \      destinations will be based solely on a default inter-area route.\n    \
    \  The backbone cannot be configured as a stub area. Also, virtual\n      links\
    \ cannot be configured through stub areas. For more\n      information, see Section\
    \ 3.6 of [Ref1].\n   StubDefaultCost\n      If the area has been configured as\
    \ a stub area, and the router\n      itself is an area border router, then the\
    \ StubDefaultCost\n      indicates the cost of the default inter-area-prefix-LSA\
    \ that the\n      router should advertise into the area. See Section 12.4.3.1\
    \ of\n      [Ref1] for more information.\n"
- title: C.3 Router interface parameters
  contents:
  - "C.3 Router interface parameters\n   Some of the configurable router interface\
    \ parameters (such as Area\n   ID, HelloInterval and RouterDeadInterval) actually\
    \ imply properties\n   of the attached links, and therefore must be consistent\
    \ across all\n   the routers attached to that link.  The parameters that must\
    \ be\n   configured for a router interface are:\n   IPv6 link-local address\n\
    \      The IPv6 link-local address associated with this interface.  May\n    \
    \  be learned through auto-configuration.\n   Area ID\n      The OSPF area to\
    \ which the attached link belongs.\n   Instance ID\n      The OSPF protocol instance\
    \ associated with this OSPF interface.\n      Defaults to 0.\n   Interface ID\n\
    \      32-bit number uniquely identifying this interface among the\n      collection\
    \ of this router's interfaces. For example, in some\n      implementations it\
    \ may be possible to use the MIB-II IfIndex\n      ([Ref3]).\n   IPv6 prefixes\n\
    \      The list of IPv6 prefixes to associate with the link. These will\n    \
    \  be advertised in intra-area-prefix-LSAs.\n   Interface output cost(s)\n   \
    \   The cost of sending a packet on the interface, expressed in the\n      link\
    \ state metric.  This is advertised as the link cost for this\n      interface\
    \ in the router's router-LSA. The interface output cost\n      must always be\
    \ greater than 0.\n   RxmtInterval\n      The number of seconds between LSA retransmissions,\
    \ for adjacencies\n      belonging to this interface.  Also used when retransmitting\n\
    \      Database Description and Link State Request Packets.  This should\n   \
    \   be well over the expected round-trip delay between any two routers\n     \
    \ on the attached link.  The setting of this value should be\n      conservative\
    \ or needless retransmissions will result.  Sample\n      value for a local area\
    \ network: 5 seconds.\n   InfTransDelay\n      The estimated number of seconds\
    \ it takes to transmit a Link State\n      Update Packet over this interface.\
    \  LSAs contained in the update\n      packet must have their age incremented\
    \ by this amount before\n      transmission.  This value should take into account\
    \ the\n      transmission and propagation delays of the interface. It must be\n\
    \      greater than 0.  Sample value for a local area network: 1 second.\n   Router\
    \ Priority\n      An 8-bit unsigned integer. When two routers attached to a network\n\
    \      both attempt to become Designated Router, the one with the highest\n  \
    \    Router Priority takes precedence. If there is still a tie, the\n      router\
    \ with the highest Router ID takes precedence.  A router\n      whose Router Priority\
    \ is set to 0 is ineligible to become\n      Designated Router on the attached\
    \ link.  Router Priority is only\n      configured for interfaces to broadcast\
    \ and NBMA networks.\n   HelloInterval\n      The length of time, in seconds,\
    \ between the Hello Packets that the\n      router sends on the interface.  This\
    \ value is advertised in the\n      router's Hello Packets.  It must be the same\
    \ for all routers\n      attached to a common link.  The smaller the HelloInterval,\
    \ the\n      faster topological changes will be detected; however, more OSPF\n\
    \      routing protocol traffic will ensue.  Sample value for a X.25 PDN:\n  \
    \    30 seconds.  Sample value for a local area network (LAN): 10\n      seconds.\n\
    \   RouterDeadInterval\n      After ceasing to hear a router's Hello Packets,\
    \ the number of\n      seconds before its neighbors declare the router down. \
    \ This is\n      also advertised in the router's Hello Packets in their\n    \
    \  RouterDeadInterval field.  This should be some multiple of the\n      HelloInterval\
    \ (say 4).  This value again must be the same for all\n      routers attached\
    \ to a common link.\n"
- title: C.4 Virtual link parameters
  contents:
  - "C.4 Virtual link parameters\n   Virtual links are used to restore/increase connectivity\
    \ of the\n   backbone.  Virtual links may be configured between any pair of area\n\
    \   border routers having interfaces to a common (non-backbone) area.\n   The\
    \ virtual link appears as an unnumbered point-to-point link in the\n   graph for\
    \ the backbone.  The virtual link must be configured in both\n   of the area border\
    \ routers.\n   A virtual link appears in router-LSAs (for the backbone) as if\
    \ it\n   were a separate router interface to the backbone.  As such, it has\n\
    \   most of the parameters associated with a router interface (see\n   Section\
    \ C.3).  Virtual links do not have link-local addresses, but\n   instead use one\
    \ of the router's global-scope or site-local IPv6\n   addresses as the IP source\
    \ in OSPF protocol packets it sends along\n   the virtual link.  Router Priority\
    \ is not used on virtual links.\n   Interface output cost is not configured on\
    \ virtual links, but is\n   dynamically set to be the cost of the intra-area path\
    \ between the two\n   endpoint routers.  The parameter RxmtInterval must be configured,\
    \ and\n   should be well over the expected round-trip delay between the two\n\
    \   routers.  This may be hard to estimate for a virtual link; it is\n   better\
    \ to err on the side of making it too large.\n   A virtual link is defined by\
    \ the following two configurable\n   parameters: the Router ID of the virtual\
    \ link's other endpoint, and\n   the (non-backbone) area through which the virtual\
    \ link runs (referred\n   to as the virtual link's Transit area).  Virtual links\
    \ cannot be\n   configured through stub areas.\n"
- title: C.5 NBMA network parameters
  contents:
  - "C.5 NBMA network parameters\n   OSPF treats an NBMA network much like it treats\
    \ a broadcast network.\n   Since there may be many routers attached to the network,\
    \ a Designated\n   Router is selected for the network.  This Designated Router\
    \ then\n   originates a network-LSA, which lists all routers attached to the\n\
    \   NBMA network.\n   However, due to the lack of broadcast capabilities, it may\
    \ be\n   necessary to use configuration parameters in the Designated Router\n\
    \   selection.  These parameters will only need to be configured in those\n  \
    \ routers that are themselves eligible to become Designated Router\n   (i.e.,\
    \ those router's whose Router Priority for the network is non-\n   zero), and\
    \ then only if no automatic procedure for discovering\n   neighbors exists:\n\
    \   List of all other attached routers\n      The list of all other routers attached\
    \ to the NBMA network.  Each\n      router is configured with its Router ID and\
    \ IPv6 link-local\n      address on the network.  Also, for each router listed,\
    \ that\n      router's eligibility to become Designated Router must be defined.\n\
    \      When an interface to a NBMA network comes up, the router sends\n      Hello\
    \ Packets only to those neighbors eligible to become\n      Designated Router,\
    \ until the identity of the Designated Router is\n      discovered.\n   PollInterval\
    \ If a neighboring router has become inactive (Hello\n      Packets have not been\
    \ seen for RouterDeadInterval seconds), it may\n      still be necessary to send\
    \ Hello Packets to the dead neighbor.\n      These Hello Packets will be sent\
    \ at the reduced rate PollInterval,\n      which should be much larger than HelloInterval.\
    \  Sample value for\n      a PDN X.25 network: 2 minutes.\n"
- title: C.6 Point-to-MultiPoint network parameters
  contents:
  - "C.6 Point-to-MultiPoint network parameters\n   On Point-to-MultiPoint networks,\
    \ it may be necessary to configure the\n   set of neighbors that are directly\
    \ reachable over the Point-to-\n   MultiPoint network. Each neighbor is configured\
    \ with its Router ID\n   and IPv6 link-local address on the network.  Designated\
    \ Routers are\n   not elected on Point-to-MultiPoint networks, so the Designated\
    \ Router\n   eligibility of configured neighbors is undefined.\n"
- title: C.7 Host route parameters
  contents:
  - "C.7 Host route parameters\n   Host prefixes are advertised in intra-area-prefix-LSAs.\
    \  They\n   indicate either internal router addresses, router interfaces to\n\
    \   point-to-point networks, looped router interfaces, or IPv6 hosts that\n  \
    \ are directly connected to the router (e.g., via a PPP connection).\n   For each\
    \ host directly connected to the router, the following items\n   must be configured:\n\
    \   Host IPv6 prefix\n      The IPv6 prefix belonging to the host.\n   Cost of\
    \ link to host\n      The cost of sending a packet to the host, in terms of the\
    \ link\n      state metric. However, since the host probably has only a single\n\
    \      connection to the internet, the actual configured cost(s) in many\n   \
    \   cases is unimportant (i.e., will have no effect on routing).\n   Area ID\n\
    \      The OSPF area to which the host's prefix belongs.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   When running over IPv6, OSPF relies on the IP Authentication\
    \ Header\n   (see [Ref19]) and the IP Encapsulating Security Payload (see [Ref20])\n\
    \   to ensure integrity and authentication/confidentiality of routing\n   exchanges.\n\
    \   Most OSPF implementations will be running on systems that support\n   multiple\
    \ protocols, many of them having independent security\n   assumptions and domains.\
    \  When IPSEC is used to protect OSPF packets,\n   it is important for the implementation\
    \ to check the IPSEC SA, and\n   local SA database to make sure that the packet\
    \ originates from a\n   source THAT IS TRUSTED FOR OSPF PURPOSES.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Rob Coltun\n   Siara Systems\n   300 Ferguson Drive\n\
    \   Mountain View, CA 94043\n   Phone: (650) 390-9030\n   EMail: rcoltun@siara.com\n\
    \   Dennis Ferguson\n   Juniper Networks\n   385 Ravendale Drive\n   Mountain\
    \ View, CA  94043\n   Phone: +1 650 526 8004\n   EMail: dennis@juniper.com\n \
    \  John Moy\n   Sycamore Networks, Inc.\n   10 Elizabeth Drive\n   Chelmsford,\
    \ MA 01824\n   Phone: (978) 367-2161\n   Fax:   (978) 250-3350\n   EMail: jmoy@sycamorenet.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
