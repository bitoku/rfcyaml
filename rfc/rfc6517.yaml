- title: __initial_text__
  contents:
  - '    Mandatory Features in a Layer 3 Multicast BGP/MPLS VPN Solution

    '
- title: Abstract
  contents:
  - "Abstract\n   More that one set of mechanisms to support multicast in a layer\
    \ 3\n   BGP/MPLS VPN has been defined.  These are presented in the documents\n\
    \   that define them as optional building blocks.\n   To enable interoperability\
    \ between implementations, this document\n   defines a subset of features that\
    \ is considered mandatory for a\n   multicast BGP/MPLS VPN implementation.  This\
    \ will help implementers\n   and deployers understand which L3VPN multicast requirements\
    \ are best\n   satisfied by each option.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6517.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  Examining Alternative Mechanisms for MVPN Functions  .\
    \ . . . .  4\n     3.1.  MVPN Auto-Discovery  . . . . . . . . . . . . . . . .\
    \ . . .  4\n     3.2.  S-PMSI Signaling . . . . . . . . . . . . . . . . . . .\
    \ . .  5\n     3.3.  PE-PE Exchange of C-Multicast Routing  . . . . . . . . .\
    \ .  7\n       3.3.1.  PE-PE C-Multicast Routing Scalability  . . . . . . . .\
    \  7\n       3.3.2.  PE-CE Multicast Routing Exchange Scalability . . . . . 10\n\
    \       3.3.3.  Scalability of P Routers . . . . . . . . . . . . . . . 10\n  \
    \     3.3.4.  Impact of C-Multicast Routing on Inter-AS Deployments  10\n    \
    \   3.3.5.  Security and Robustness  . . . . . . . . . . . . . . . 11\n      \
    \ 3.3.6.  C-Multicast VPN Join Latency . . . . . . . . . . . . . 12\n       3.3.7.\
    \  Conclusion on C-Multicast Routing  . . . . . . . . . . 14\n     3.4.  Encapsulation\
    \ Techniques for P-Multicast Trees . . . . . . 15\n     3.5.  Inter-AS Deployments\
    \ Options . . . . . . . . . . . . . . . 16\n     3.6.  BIDIR-PIM Support  . .\
    \ . . . . . . . . . . . . . . . . . . 19\n   4.  Co-Located RPs . . . . . . .\
    \ . . . . . . . . . . . . . . . . . 20\n   5.  Avoiding Duplicates  . . . . .\
    \ . . . . . . . . . . . . . . . . 21\n   6.  Existing Deployments . . . . . .\
    \ . . . . . . . . . . . . . . . 21\n   7.  Summary of Recommendations . . . .\
    \ . . . . . . . . . . . . . . 22\n   8.  Security Considerations  . . . . . .\
    \ . . . . . . . . . . . . . 22\n   9.  Acknowledgements . . . . . . . . . . .\
    \ . . . . . . . . . . . . 23\n   10. References . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 23\n     10.1. Normative References . . . . . . . . .\
    \ . . . . . . . . . . 23\n     10.2. Informative References . . . . . . . . .\
    \ . . . . . . . . . 23\n   Appendix A.  Scalability of C-Multicast Routing Processing\
    \ Load  . 25\n     A.1.  Scalability with an Increased Number of PEs  . . . .\
    \ . . . 26\n       A.1.1.  SSM Scalability  . . . . . . . . . . . . . . . . .\
    \ . . 26\n       A.1.2.  ASM Scalability  . . . . . . . . . . . . . . . . . .\
    \ . 35\n     A.2.  Cost of PEs Leaving and Joining  . . . . . . . . . . . . .\
    \ 37\n   Appendix B.  Switching to S-PMSI . . . . . . . . . . . . . . . . . 40\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Specifications for multicast in BGP/MPLS [RFC6513] include\
    \ multiple\n   alternative mechanisms for some of the required building blocks\
    \ of\n   the solution.  However, they do not identify which of these\n   mechanisms\
    \ are mandatory to implement in order to ensure\n   interoperability.  Not defining\
    \ a set of mandatory-to-implement\n   mechanisms leads to a situation where implementations\
    \ may support\n   different subsets of the available optional mechanisms that\
    \ do not\n   interoperate, which is a problem for the numerous operators having\n\
    \   multi-vendor backbones.\n   The aim of this document is to leverage the already\
    \ expressed\n   requirements [RFC4834] and study the properties of each approach\
    \ to\n   identify mechanisms that are good candidates for being part of a core\n\
    \   set of mandatory mechanisms that can be used to provide a base for\n   interoperable\
    \ solutions.\n   This document goes through the different building blocks of the\n\
    \   solution and concludes which mechanisms an implementation is required\n  \
    \ to implement.  Section 7 summarizes these requirements.\n   Considering the\
    \ history of the multicast VPN proposals and\n   implementations, it is also useful\
    \ to discuss how existing\n   deployments of early implementations [RFC6037] [MVPN]\
    \ can be\n   accommodated and provide suggestions in this respect.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Please refer to [RFC6513] and [RFC4834].  As a reminder,\
    \ in Section\n   3.1 of [RFC6513], the \"C-\" and \"P-\" notations are used to\n\
    \   disambiguate between the provider scope and the scope of a specific\n   VPN\
    \ customer; for instance, \"C-PIM\" designates a PIM protocol\n   instance in\
    \ a VPN or VRF, while \"P-PIM\" would designate the instance\n   of PIM eventually\
    \ deployed by the provider across its core between P\n   and PE routers.\n   Other\
    \ acronyms used in this document include the following:\n   o  LSP: Label Switched\
    \ Path\n   o  P2MP: Point to Multipoint\n   o  MP2MP: Multipoint to Multipoint\n\
    \   o  GRE: Generic Routing Encapsulation\n   o  mLDP: Multicast LDP\n   o  I-PMSI:\
    \ Inclusive Provider Multiservice Interface\n   o  MI-PMSI: Multidirectional Inclusive\
    \ Provider Multiservice\n      Interface\n   o  S-PMSI: Selective Provider Multiservice\
    \ Interface\n   o  SSM: Source-Specific Multicast\n   o  ASM: Any-Source Multicast\n\
    \   o  PIM-SM: PIM Sparse Mode\n   o  PIM-SSM: PIM Sparse Mode in SSM Mode\n \
    \  o  BIDIR-PIM: Bidirectional PIM\n   o  AS: Autonomous System\n   o  ASBR: Autonomous\
    \ System Border Router\n   o  VRF: VPN Routing and Forwarding\n   o  PE: Provider\
    \ Edge\n   o  CE: Customer Edge\n   o  RPA: Rendezvous Point Address\n   o  RPL:\
    \ Rendezvous Point Link\n   Additionally, the key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\",\n   \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   [RFC2119].\n"
- title: 3.  Examining Alternative Mechanisms for MVPN Functions
  contents:
  - '3.  Examining Alternative Mechanisms for MVPN Functions

    '
- title: 3.1.  MVPN Auto-Discovery
  contents:
  - "3.1.  MVPN Auto-Discovery\n   The current solution document [RFC6513] proposes\
    \ two different\n   mechanisms for Multicast VPN (MVPN) auto-discovery:\n   1.\
    \  BGP-based auto-discovery\n   2.  \"PIM/shared P-tunnel\": discovery done through\
    \ the exchange of PIM\n       Hellos by C-PIM instances, across an MI-PMSI implemented\
    \ with one\n       shared P-tunnel per VPN (using ASM or MP2MP LDP)\n   Both solutions\
    \ address Section 5.2.10 of [RFC4834], which states that\n   \"the operation of\
    \ a multicast VPN solution SHALL be as light as\n   possible, and providing automatic\
    \ configuration and discovery SHOULD\n   be a priority when designing a multicast\
    \ VPN solution.  Particularly,\n   the operational burden of setting up multicast\
    \ on a PE or for a VR/\n   VRF SHOULD be as low as possible\".\n   The key consideration\
    \ is that PIM-based discovery is only applicable\n   to deployments using a shared\
    \ P-tunnel to instantiate an MI-PMSI (it\n   is not applicable if only P2P, PIM-SSM,\
    \ and P2MP LDP/RSVP-TE\n   P-tunnels are used, because contrary to ASM and MP2MP\
    \ LDP, building\n   these types of P-tunnels cannot happen before the auto-discovery\
    \ has\n   been done).  In contrast, the BGP-based auto-discovery does not place\n\
    \   any constraint on the type of P-tunnel that would have to be used.\n   BGP-based\
    \ auto-discovery is independent of the type of P-tunnel used,\n   thus satisfying\
    \ the requirement in Section 5.2.4.1 of [RFC4834] that\n   \"a multicast VPN solution\
    \ SHOULD be designed so that control and\n   forwarding planes are not interdependent\"\
    .\n   Additionally, it is to be noted that a number of service providers\n   have\
    \ chosen to use SSM-based P-tunnels for the default multicast\n   distribution\
    \ trees within their current deployments, therefore\n   relying already on some\
    \ BGP-based auto-discovery.\n   Moreover, when shared P-tunnels are used, the\
    \ use of BGP auto-\n   discovery would allow inconsistencies in the addresses/identifiers\n\
    \   used for the shared P-tunnel to be detected (e.g., the same shared\n   P-tunnel\
    \ identifier being used for different VPNs with distinct BGP\n   route targets).\
    \  This is particularly attractive in the context of\n   inter-AS VPNs where the\
    \ impact of any misconfiguration could be\n   magnified and where a single service\
    \ provider may not operate all the\n   ASes.  Note that this technique to detect\
    \ some misconfiguration cases\n   may not be usable during a transition period\
    \ from a shared-P-tunnel\n   auto-discovery to a BGP-based auto-discovery.\n \
    \  Thus, the recommendation is that implementation of the BGP-based\n   auto-discovery\
    \ is mandated and should be supported by all MVPN\n   implementations.\n"
- title: 3.2.  S-PMSI Signaling
  contents:
  - "3.2.  S-PMSI Signaling\n   The current solution document [RFC6513] proposes two\
    \ mechanisms for\n   signaling that multicast flows will be switched to a Selective\
    \ PMSI\n   (S-PMSI):\n   1.  a UDP-based TLV protocol specifically for S-PMSI\
    \ signaling\n       (described in Section 7.4.2)\n   2.  a BGP-based mechanism\
    \ for S-PMSI signaling (described in Section\n       7.4.1)\n   Section 5.2.10\
    \ of [RFC4834] states that \"as far as possible, the\n   design of a solution\
    \ SHOULD carefully consider the number of\n   protocols within the core network:\
    \ if any additional protocols are\n   introduced compared with the unicast VPN\
    \ service, the balance between\n   their advantage and operational burden SHOULD\
    \ be examined\n   thoroughly\".  The UDP-based mechanism would be an additional\
    \ protocol\n   in the MVPN stack, which isn't the case for the BGP-based S-PMSI\n\
    \   switching signaling, since (a) BGP is identified as a requirement for\n  \
    \ auto-discovery and (b) the BGP-based S-PMSI switching signaling\n   procedures\
    \ are very similar to the auto-discovery procedures.\n   Furthermore, the UDP-based\
    \ S-PMSI switching signaling mechanism\n   requires an MI-PMSI, while the BGP-based\
    \ protocol does not.  In\n   practice, this mean that with the UDP-based protocol,\
    \ a PE will have\n   to join to all P-tunnels of all PEs in an MVPN, while in\
    \ the\n   alternative where BGP-based S-PMSI switching signaling is used, it\n\
    \   could delay joining a P-tunnel rooted at a PE until traffic from that\n  \
    \ PE is needed, thus reducing the amount of state maintained on P\n   routers.\n\
    \   S-PMSI switching signaling approaches can also be compared in an\n   inter-AS\
    \ context (see Section 3.5).  The proposed BGP-based approach\n   for S-PMSI switching\
    \ signaling provides a good fit with both the\n   segmented and non-segmented\
    \ inter-AS approaches (see Section 3.5).\n   By contrast, while the UDP-based\
    \ approach for S-PMSI switching\n   signaling appears to be usable with segmented\
    \ inter-AS tunnels, key\n   advantages of the segmented approach are lost:\n \
    \  o  ASes are no longer independent in their ability to choose when\n      S-PMSIs\
    \ tunnels will be triggered in their AS (and thus control\n      the amount of\
    \ state created on their P routers).\n   o  ASes are no longer independent in\
    \ their ability to choose the\n      tunneling technique for the P-tunnels used\
    \ for an S-PMSI.\n   o  In an inter-AS option B context, an isolation of ASes\
    \ is obtained\n      as PEs in one AS don't have (direct) exchange of routing\n\
    \      information with PEs of other ASes.  This property is not\n      preserved\
    \ if UDP-based S-PMSI switching signaling is used.  By\n      contrast, BGP-based\
    \ C-multicast switching signaling does preserve\n      this property.\n   Given\
    \ all the above, it is the recommendation of the authors that BGP\n   is the preferred\
    \ solution for S-PMSI switching signaling and should\n   be supported by all implementations.\n\
    \   If nothing prevents a fast-paced creation of S-PMSI, then S-PMSI\n   switching\
    \ signaling with BGP would possibly impact the route\n   reflectors (RRs) used\
    \ for MVPN routes.  However, such a fast-paced\n   behavior would have an impact\
    \ on P and PE routers resulting from\n   S-PMSI tunnels signaling, which will\
    \ be the same independent of the\n   S-PMSI signaling approach that is used and\
    \ which is certainly best to\n   avoid by setting up proper mechanisms.\n   The\
    \ UDP-based S-PMSI switching signaling protocol can also be\n   considered, as\
    \ an option, given that this protocol has been in\n   deployment for some time.\
    \  Implementations supporting both protocols\n   would be expected to provide\
    \ a per-VRF (VPN Routing and Forwarding)\n   configuration knob to allow an implementation\
    \ to use the UDP-based\n   TLV protocol for S-PMSI switching signaling for specific\
    \ VRFs in\n   order to support the co-existence of both protocols (for example,\n\
    \   during migration scenarios).  Apart from such migration-facilitating\n   mechanisms,\
    \ the authors specifically do not recommend extending the\n   already proposed\
    \ UDP-based TLV protocol to new types of P-tunnels.\n"
- title: 3.3.  PE-PE Exchange of C-Multicast Routing
  contents:
  - "3.3.  PE-PE Exchange of C-Multicast Routing\n   The current solution document\
    \ [RFC6513] proposes multiple mechanisms\n   for PE-PE exchange of customer multicast\
    \ routing information\n   (C-multicast routing):\n   1.  Full per-MVPN PIM peering\
    \ across an MI-PMSI (described in Section\n       3.4.1.1)\n   2.  Lightweight\
    \ PIM peering across an MI-PMSI (described in Section\n       3.4.1.2)\n   3.\
    \  The unicasting of PIM C-Join/Prune messages (described in Section\n       3.4.1.3)\n\
    \   4.  The use of BGP for carrying C-multicast routing (described in\n      \
    \ Section 3.4.2)\n"
- title: 3.3.1.  PE-PE C-Multicast Routing Scalability
  contents:
  - "3.3.1.  PE-PE C-Multicast Routing Scalability\n   Scalability being one of the\
    \ core requirements for multicast VPN, it\n   is useful to compare the proposed\
    \ C-multicast routing mechanisms from\n   this perspective: Section 4.2.4 of [RFC4834]\
    \ recommends that \"a\n   multicast VPN solution SHOULD support several hundreds\
    \ of PEs per\n   multicast VPN, and MAY usefully scale up to thousands\" and Section\n\
    \   4.2.5 states that \"a solution SHOULD scale up to thousands of PEs\n   having\
    \ multicast service enabled\".\n   Scalability with an increased number of VPNs\
    \ per PE, or with an\n   increased amount of multicast state per VPN, are also\
    \ important but\n   are not focused on in this section since we didn't identify\n\
    \   differences between the various approaches for these matters: all\n   others\
    \ things equal, the load on PE due to C-multicast routing\n   increases roughly\
    \ linearly with the number of VPNs per PE and with\n   the amount of multicast\
    \ state per VPN.\n   This section presents conclusions related to PE-PE C-multicast\n\
    \   routing scalability.  Appendix A provides more detailed explanations\n   on\
    \ the differences in ways PIM-based approaches and the BGP-based\n   approach\
    \ handle the C-multicast routing load, along with quantified\n   evaluations of\
    \ the amount of state and messages with the different\n   approaches.  Many points\
    \ made in this section are detailed in\n   Appendix A.1.\n   At high scales of\
    \ multicast deployment, the first and third\n   mechanisms require the PEs to\
    \ maintain a large number of PIM\n   adjacencies with other PEs of the same multicast\
    \ VPN (which implies\n   the regular exchange of PIM Hellos with each other) and\
    \ to\n   periodically refresh C-Join/Prune states, resulting in an increased\n\
    \   processing cost when the number of PEs increases (as detailed in\n   Appendix\
    \ A.1).  The second approach is less subject to this, and the\n   fourth approach\
    \ is not subject to this.\n   The third mechanism would reduce the amount of C-Join/Prune\n\
    \   processing for a given multicast flow for PEs that are not the\n   upstream\
    \ neighbor for this flow but would require \"explicit tracking\"\n   state to\
    \ be maintained by the upstream PE.  It also isn't compatible\n   with the \"\
    Join suppression\" mechanism.  A possible way to reduce the\n   amount of signaling\
    \ with this approach would be the use of a PIM\n   refresh-reduction mechanism.\
    \  Such a mechanism, based on TCP, is\n   being specified by the PIM IETF Working\
    \ Group ([PIM-PORT]); its use\n   in a multicast VPN context is not described\
    \ in [RFC6513], but it is\n   expected that this approach will provide a scalability\
    \ similar to the\n   BGP-based approach without RRs.\n   The second mechanism\
    \ would operate in a similar manner to full per-\n   MVPN PIM peering except that\
    \ PIM Hello messages are not transmitted\n   and PIM C-Join/Prune refresh-reduction\
    \ would be used, thereby\n   improving scalability, but this approach has yet\
    \ to be fully\n   described.  In any case, it seems that it only improves one\
    \ thing\n   among the things that will impact scalability when the number of PEs\n\
    \   increases.\n   The first and second mechanisms can leverage the \"Join suppression\"\
    \n   behavior and thus improve the processing burden of an upstream PE,\n   sparing\
    \ the processing of a Join refresh message for each remote PE\n   joined to a\
    \ multicast stream.  This improvement requires all PEs of a\n   multicast VPN\
    \ to process all PIM Join and Prune messages sent by any\n   other PE participating\
    \ in the same multicast VPN whether they are the\n   upstream PE or not.\n   The\
    \ fourth mechanism (the use of BGP for carrying C-multicast\n   routing) would\
    \ have a comparable drawback of requiring all PEs to\n   process a BGP C-multicast\
    \ route only interesting a specific upstream\n   PE.  For this reason, Section\
    \ 16 of [RFC6514] recommends the use of\n   the Route Target constrained BGP distribution\
    \ [RFC4684] mechanisms,\n   which eliminate this drawback by having only the interested\
    \ upstream\n   PE receive a BGP C-multicast route.  Specifically, when Route Target\n\
    \   constrained BGP distribution is used, the fourth mechanism reduces\n   the\
    \ total amount of the C-multicast routing processing load put on\n   the PEs by\
    \ avoiding any processing of customer multicast routing\n   information on the\
    \ \"unrelated\" PEs that are neither the joining PE\n   nor the upstream PE.\n\
    \   Moreover, the fourth mechanism further reduces the total amount of\n   message\
    \ processing load by avoiding the use of periodic refreshes and\n   by inheriting\
    \ BGP features that are expected to improve scalability\n   (for instance, providing\
    \ a means to offload some of the processing\n   burden associated with customer\
    \ multicast routing onto one or many\n   BGP route reflectors).  The advantages\
    \ of the fourth mechanism come\n   at a cost of maintaining an amount of state\
    \ linear with the number of\n   PEs joined to a stream.  However, the use of route\
    \ reflectors allows\n   this cost to be spread among multiple route reflectors,\
    \ thus\n   eliminating the need for a single route reflector to maintain all\n\
    \   this state.\n   However, the fourth mechanism is specific in that it offers\
    \ the\n   possibility of offloading customer multicast routing processing onto\n\
    \   one or more BGP route reflector(s).  When this is used, there is a\n   drawback\
    \ of increasing the processing load placed on the route\n   reflector infrastructure.\
    \  In the higher scale scenarios, it may be\n   required to adapt the route reflector\
    \ infrastructure to the MVPN\n   routing load by using, for example:\n   o  a\
    \ separation of resources for unicast and multicast VPN routing:\n      using\
    \ dedicated MVPN route reflector(s) (or using dedicated MVPN\n      BGP sessions\
    \ or dedicated MVPN BGP instances), and\n   o  the deployment of additional route\
    \ reflector resources, for\n      example, increasing the processing resources\
    \ on existing route\n      reflectors or deployment of additional route reflectors.\n\
    \   The most straightforward approach is to consider the introduction of\n   route\
    \ reflectors dedicated to the MVPN service and dimension them\n   according to\
    \ the need of that service (but doing so is not required\n   and is left as an\
    \ operator engineering decision).\n"
- title: 3.3.2.  PE-CE Multicast Routing Exchange Scalability
  contents:
  - "3.3.2.  PE-CE Multicast Routing Exchange Scalability\n   The overhead associated\
    \ with the PE-CE exchange of C-multicast\n   routing is independent of the choice\
    \ of the mechanism used for the\n   PE-PE C-multicast routing.  Therefore, the\
    \ impact of the PE-CE\n   C-multicast routing overhead on the overall system scalability\
    \ is\n   independent of the protocol used for PE-PE signaling and is therefore\n\
    \   not relevant when comparing the different approaches proposed for the\n  \
    \ PE-PE C-multicast routing.  This is true even if in some operational\n   contexts,\
    \ the PE-CE C-multicast routing overhead is a significant\n   factor in the overall\
    \ system overhead.\n"
- title: 3.3.3.  Scalability of P Routers
  contents:
  - "3.3.3.  Scalability of P Routers\n   The first and second mechanisms are restricted\
    \ to use within\n   multicast VPNs that use an MI-PMSI, thereby necessitating:\n\
    \   o  the use of a P-tunnel technique that allows shared P-tunnels (for\n   \
    \   example, PIM-SM in ASM mode or MP2MP LDP), or\n   o  the use of one P-tunnel\
    \ per PE per VPN, even for PEs that do not\n      have sources in their directly\
    \ attached sites for that VPN.\n   By comparison, the fourth mechanism doesn't\
    \ impose either of these\n   restrictions and, when P2MP P-tunnels are used, only\
    \ necessitates the\n   use of one P-tunnel per VPN per PE attached to a site with\
    \ a\n   multicast source or Rendezvous Point (RP) (or with a candidate\n   Bootstrap\
    \ Router (BSR), if BSR is used).\n   In cases where there are fewer PEs connected\
    \ with sources than the\n   total number of PEs, the fourth mechanism improves\
    \ the amount of\n   state maintained by P routers compared to the amount required\
    \ to\n   build an MI-PMSI with P2MP P-tunnels.  Such cases are expected to be\n\
    \   frequent for multicast VPN deployments (see Section 4.2.4.1 of\n   [RFC4834]).\n"
- title: 3.3.4.  Impact of C-Multicast Routing on Inter-AS Deployments
  contents:
  - "3.3.4.  Impact of C-Multicast Routing on Inter-AS Deployments\n   Co-existence\
    \ with unicast inter-AS VPN options, and an equal level of\n   security for multicast\
    \ and unicast including in an inter-AS context,\n   are specifically mentioned\
    \ in Sections 5.2.6 and 5.2.8 of [RFC4834].\n   In an inter-AS option B context,\
    \ an isolation of ASes is obtained as\n   PEs in one AS don't have (direct) exchange\
    \ of routing information\n   with PEs of other ASes.  This property is not preserved\
    \ if PIM-based\n   PE-PE C-multicast routing is used.  By contrast, the fourth\
    \ option\n   (BGP-based C-multicast routing) does preserve this property.\n  \
    \ Additionally, the authors note that the proposed BGP-based approach\n   for\
    \ C-multicast routing provides a good fit with both the segmented\n   and non-segmented\
    \ inter-AS approaches.  By contrast, though the PIM-\n   based C-multicast routing\
    \ is usable with segmented inter-AS tunnels,\n   the inter-AS scalability advantage\
    \ of the approach is lost, since PEs\n   in an AS will see the C-multicast routing\
    \ activity of all other PEs\n   of all other ASes.\n"
- title: 3.3.5.  Security and Robustness
  contents:
  - "3.3.5.  Security and Robustness\n   BGP supports MD5 authentication of its peers\
    \ for additional security,\n   thereby possibly directly benefiting multicast\
    \ VPN customer multicast\n   routing, whether for intra-AS or inter-AS communications.\
    \  By\n   contrast, with a PIM-based approach, no mechanism providing a\n   comparable\
    \ level of security to authenticate communications between\n   remote PEs has\
    \ yet been fully described [RFC5796] and, in any case,\n   would require significant\
    \ additional operations for the provider to\n   be usable in a multicast VPN context.\n\
    \   The robustness of the infrastructure, especially the existing\n   infrastructure\
    \ providing unicast VPN connectivity, is key.  The\n   C-multicast routing function,\
    \ especially under load, will compete\n   with the unicast routing infrastructure.\
    \  With the PIM-based\n   approaches, the unicast and multicast VPN routing functions\
    \ are\n   expected to only compete in the PE, for control plane processing\n \
    \  resources.  In the case of the BGP-based approach, they will compete\n   on\
    \ the PE for processing resources and in the route reflectors\n   (supposing they\
    \ are used for MVPN routing).  In both cases,\n   mechanisms will be required\
    \ to arbitrate resources (e.g., processing\n   priorities).  In the case of PIM-based\
    \ procedures, this arbitration\n   occurs between the different control plane\
    \ routing instances in the\n   PE.  In the case of the BGP-based approach, this\
    \ is likely to require\n   using distinct BGP sessions for multicast and unicast\
    \ (e.g., through\n   the use of dedicated MVPN BGP route reflectors or the use\
    \ of a\n   distinct session with an existing route reflector).\n   Multicast routing\
    \ is dynamic by nature, and multicast VPN routing has\n   to follow the VPN customers'\
    \ multicast routing events.  The different\n   approaches can be compared on how\
    \ they are expected to behave in\n   scenarios where multicast routing in the\
    \ VPNs is subject to an\n   intense activity.  Scalability of each approach under\
    \ such a load is\n   detailed in Appendix A.2, and the fourth approach (BGP-based)\
    \ used in\n   conjunction with the Route Target Constraint mechanisms [RFC4684]\
    \ is\n   the only one having a cost for join/leave operations independent of\n\
    \   the number of PEs in the VPN (with one exception detailed in\n   Appendix\
    \ A.2) and state maintenance not concentrated on the upstream\n   PE.\n   On the\
    \ other hand, while the BGP-based approach is likely to suffer a\n   slowdown\
    \ under a load that is greater than the available processing\n   resources (because\
    \ of possibly congested TCP sockets), the PIM-based\n   approaches would react\
    \ to such a load by dropping messages, with\n   failure-recovery obtained through\
    \ message refreshes.  Thus, the BGP-\n   based approach could result in a degradation\
    \ of join/leave latency\n   performance typically spread evenly across all multicast\
    \ streams\n   being joined in that period, while the PIM-based approach could\n\
    \   result in increased join/leave latency, for some random streams, by a\n  \
    \ multiple of the time between refreshes (e.g., tens of seconds), and\n   possibly\
    \ in some states, the adjacency may timeout, resulting in\n   disruption of multicast\
    \ streams.\n   The behavior of the PIM-based approach under such a load is also\n\
    \   harder to predict, given that the performance of the \"Join\n   suppression\"\
    \ mechanism (an important mechanism for this approach to\n   scale) will itself\
    \ be impeded by delays in Join processing.  For\n   these reasons, the BGP-based\
    \ approach would be able to provide a\n   smoother degradation and more predictable\
    \ behavior under a highly\n   dynamic load.\n   In fact, both an \"evenly spread\
    \ degradation\" and an \"unevenly spread\n   larger degradation\" can be problematic,\
    \ and what seems important is\n   the ability for the VPN backbone operator to\
    \ (a) limit the amount of\n   multicast routing activity that can be triggered\
    \ by a multicast VPN\n   customer and (b) provide the best possible independence\
    \ between\n   distinct VPNs.  It seems that both of these can be addressed through\n\
    \   local implementation improvements and that both the BGP-based and\n   PIM-based\
    \ approaches could be engineered to provide (a) and (b).  It\n   can be noted\
    \ though that the BGP approach proposes ways to dampen\n   C-multicast route withdrawals\
    \ and/or advertisements and thus already\n   describes a way to provide (a), while\
    \ nothing comparable has yet been\n   described for the PIM-based approaches (even\
    \ though it doesn't appear\n   difficult).  The PIM-based approaches rely on a\
    \ per-VPN data plane to\n   carry the MVPN control plane and thus may benefit\
    \ from this first\n   level of separation to solve (b).\n"
- title: 3.3.6.  C-Multicast VPN Join Latency
  contents:
  - "3.3.6.  C-Multicast VPN Join Latency\n   Section 5.1.3 of [RFC4834] states that\
    \ the \"group join delay [...] is\n   also considered one important QoS parameter.\
    \  It is thus RECOMMENDED\n   that a multicast VPN solution be designed appropriately\
    \ in this\n   regard\".  In a multicast VPN context, the \"group join delay\"\
    \ of\n   interest is the time between a CE sending a PIM Join to its PE and\n\
    \   the first packet of the corresponding multicast stream being received\n  \
    \ by the CE.\n   It is to be noted that the C-multicast routing procedures will\
    \ only\n   impact the group join latency of a said multicast stream for the\n\
    \   first receiver that is located across the provider backbone from the\n   multicast\
    \ source-connected PE (or the first <n> receivers in the\n   specific case where\
    \ a specific Upstream Multicast Hop selection\n   algorithm is used, which allows\
    \ <n> distinct PEs to be selected as\n   the Upstream Multicast Hop by distinct\
    \ downstream PEs).\n   The different approaches proposed seem to have different\n\
    \   characteristics in how they are expected to impact join latency:\n   o  The\
    \ PIM-based approaches minimize the number of control plane\n      processing\
    \ hops between a new receiver-connected PE and the\n      source-connected PE\
    \ and, being datagram-based, introduce minimal\n      delay, thereby possibly\
    \ having a join latency as good as possible\n      depending on implementation\
    \ efficiency.\n   o  Under degraded conditions (packet loss, congestion, or high\n\
    \      control plane load) the PIM-based approach may impact the latency\n   \
    \   for a given multicast stream in an all-or-nothing manner: if a\n      C-multicast\
    \ routing PIM Join packet is lost, latency can reach a\n      high time (a multiple\
    \ of the periodicity of PIM Join refreshes).\n   o  The BGP-based approach uses\
    \ TCP exchanges, which may introduce an\n      additional delay depending on BGP\
    \ and TCP implementation but which\n      would typically result, under degraded\
    \ conditions (such packet\n      loss, congestion, or high control plane load),\
    \ in a comparably\n      lower increase of latency spread more evenly across the\
    \ streams.\n   o  As shown in Appendix A, the BGP-based approach is particular\
    \ in\n      that it removes load from all the PEs (without putting this load\n\
    \      on the upstream PE for a stream); this improvement of background\n    \
    \  load can bring improved performance when a PE acts as the upstream\n      PE\
    \ for a stream and thus benefits join latency.\n   This qualitative comparison\
    \ of approaches shows that the BGP-based\n   approach is designed for a smoother\
    \ degradation of latency under\n   degraded conditions such as packet loss, congestion,\
    \ or high control\n   plane load.  On the other hand, the PIM-based approaches\
    \ seem to\n   structurally be able to reach the shorter \"best-case\" group join\n\
    \   latency (especially compared to deployment of the BGP-based approach\n   where\
    \ route reflectors are used).\n   Doing a quantitative comparison of latencies\
    \ is not possible without\n   referring to specific implementations and benchmarking\
    \ procedures and\n   would possibly expose different conclusions, especially for\
    \ best-case\n   group join latency for which performance is expected to vary with\
    \ PIM\n   and BGP implementations.  We can also note that improving a BGP\n  \
    \ implementation for reduced latency of route processing would not only\n   benefit\
    \ multicast VPN group join latency but the whole BGP-based\n   routing, which\
    \ means that the need for good BGP/RR performance is not\n   specific to multicast\
    \ VPN routing.\n   Last, C-multicast join latency will be impacted by the overall\
    \ load\n   put on the control plane, and the scalability of the C-multicast\n\
    \   routing approach is thus to be taken into account.  As explained in\n   Section\
    \ 3.3.1 and Appendix A, the BGP-based approach will provide the\n   best scalability\
    \ with an increased number of PEs per VPN, thereby\n   benefiting group join latency\
    \ in such higher-scale scenarios.\n"
- title: 3.3.7.  Conclusion on C-Multicast Routing
  contents:
  - "3.3.7.  Conclusion on C-Multicast Routing\n   The first and fourth approaches\
    \ are relevant contenders for\n   C-multicast routing.  Comparisons from a theoretical\
    \ standpoint lead\n   to identification of some advantages as well as possible\
    \ drawbacks in\n   the fourth approach.  Comparisons from a practical standpoint\
    \ are\n   harder to make: since only reduced deployment and implementation\n \
    \  information is available for the fourth approach, advantages would be\n   seen\
    \ in the first approach that has been applied through multiple\n   deployments\
    \ and shown to be operationally viable.\n   Moreover, the first mechanism (full\
    \ per-MVPN PIM peering across an\n   MI-PMSI) is the mechanism used by [RFC6037];\
    \ therefore, it is\n   deployed and operating in MVPNs today.  The fourth approach\
    \ may or\n   may not end up being preferred for a said deployment, but because\
    \ the\n   first approach has been in deployment for some time, the support for\n\
    \   this mechanism will in any case be helpful to facilitate an eventual\n   migration\
    \ from a deployment using mechanism close to the first\n   approach.\n   Consequently,\
    \ at the present time, implementations are recommended to\n   support both the\
    \ fourth (BGP-based) and first (full per-MVPN PIM\n   peering) mechanisms.  Further\
    \ experience on deployments of the fourth\n   approach is needed before some best\
    \ practices can be defined.  In the\n   meantime, this recommendation would enable\
    \ a service provider to\n   choose between the first and the fourth mechanisms,\
    \ without this\n   choice being constrained by vendor implementation choices.\
    \  A service\n   provider can also take into account the peculiarities of its\
    \ own\n   deployment context by pondering the weight of the different factors\n\
    \   into account.\n"
- title: 3.4.  Encapsulation Techniques for P-Multicast Trees
  contents:
  - "3.4.  Encapsulation Techniques for P-Multicast Trees\n   In this section, the\
    \ authors will not make any restricting\n   recommendations since the appropriateness\
    \ of a specific provider core\n   data plane technology will depend on a large\
    \ number of factors, for\n   example, the service provider's currently deployed\
    \ unicast data\n   plane, many of which are service provider specific.\n   However,\
    \ implementations should not unreasonably restrict the data\n   plane technology\
    \ that can be used and should not force the use of the\n   same technology for\
    \ different VPNs attached to a single PE.  Initial\n   implementations may only\
    \ support a reduced set of encapsulation\n   techniques and data plane technologies,\
    \ but this should not be a\n   limiting factor that hinders future support for\
    \ other encapsulation\n   techniques, data plane technologies, or interoperability.\n\
    \   Section 5.2.4.1 of [RFC4834] states, \"In a multicast VPN solution\n   extending\
    \ a unicast layer 3 PPVPN solution, consistency in the\n   tunneling technology\
    \ has to be favored: such a solution SHOULD allow\n   the use of the same tunneling\
    \ technology for multicast as for\n   unicast.  Deployment consistency, ease of\
    \ operation, and potential\n   migrations are the main motivations behind this\
    \ requirement\".\n   Current unicast VPN deployments use a variety of LDP, RSVP-TE,\
    \ and\n   GRE/IP-Multicast for encapsulating customer packets for transport\n\
    \   across the provider core of VPN services.  In order to allow the same\n  \
    \ encapsulations to be used for unicast and multicast VPN traffic, it\n   is recommended\
    \ that multicast VPN standards should recommend that\n   implementations support\
    \ multicast VPNs and all the P2MP variants of\n   the encapsulations and signaling\
    \ protocols that they support for\n   unicast and for which some multipoint extension\
    \ is defined, such as\n   mLDP, P2MP RSVP-TE, and GRE/IP-multicast.\n   All three\
    \ of the above encapsulation techniques support the building\n   of P2MP multicast\
    \ P-tunnels.  In addition, mLDP and GRE/\n   IP-ASM-Multicast implementations\
    \ may also support the building of\n   MP2MP multicast P-tunnels.  The use of\
    \ MP2MP P-tunnels may provide\n   some scaling benefits to the service provider\
    \ as only a single MP2MP\n   P-tunnel need be deployed per VPN, thus reducing\
    \ by an order of\n   magnitude the amount of multicast state that needs to be\
    \ maintained\n   by P routers.  This gain in state is at the expense of bandwidth\n\
    \   optimization, since sites that do not have multicast receivers for\n   multicast\
    \ streams sourced behind a said PE group will still receive\n   packets of such\
    \ streams, leading to non-optimal bandwidth utilization\n   across the VPN core.\
    \  One thing to consider is that the use of MP2MP\n   multicast P-tunnel will\
    \ require additional configuration to define\n   the same P-tunnel identifier\
    \ or multicast ASM group address in all\n   PEs (it has been noted that some auto-configuration\
    \ could be possible\n   for MP2MP P-tunnels, but this is not currently supported\
    \ by the auto-\n   discovery procedures).  (It has been noted that C-multicast\
    \ routing\n   schemes not covered in [RFC6513] could expose different advantages\
    \ of\n   MP2MP multicast P-tunnels; this is out of the scope of this\n   document.)\n\
    \   MVPN services can also be supported over a unicast VPN core through\n   the\
    \ use of ingress PE replication whereby the ingress PE replicates\n   any multicast\
    \ traffic over the P2P tunnels used to support unicast\n   traffic.  While this\
    \ option does not require the service provider to\n   modify their existing P\
    \ routers (in terms of protocol support) and\n   does not require maintaining\
    \ multicast-specific state on the P\n   routers in order for the service provider\
    \ to be able deploy a\n   multicast VPN service, the use of ingress PE replication\
    \ obviously\n   leads to non-optimal bandwidth utilization, and it is therefore\n\
    \   unlikely to be the long-term solution chosen by service providers.\n   However,\
    \ ingress PE replication may be useful during some migration\n   scenarios or\
    \ where a service provider considers the level of\n   multicast traffic on their\
    \ network to be too low to justify deploying\n   multicast-specific support within\
    \ their VPN core.\n   All proposed approaches for control plane and data plane\
    \ can be used\n   to provide aggregation amongst multicast groups within a VPN\
    \ and\n   amongst different multicast VPNs, and potentially reduce the amount\n\
    \   of state to be maintained by P routers.  However, the latter (the\n   aggregation\
    \ amongst different multicast VPNs) will require support\n   for upstream-assigned\
    \ labels on the PEs.  Support for upstream-\n   assigned labels may require changes\
    \ to the data plane processing of\n   the PEs, and this should be taken into consideration\
    \ by service\n   providers considering the use of aggregate PMSI tunnels for the\n\
    \   specific platforms that the service provider has deployed.\n"
- title: 3.5.  Inter-AS Deployments Options
  contents:
  - "3.5.  Inter-AS Deployments Options\n   There are a number of scenarios that lead\
    \ to the requirement for\n   inter-AS multicast VPNs, including:\n   1.  A service\
    \ provider may have a large network that it has segmented\n       into a number\
    \ of ASes.\n   2.  A service provider's multicast VPN may consist of a number\
    \ of\n       ASes due to acquisitions and mergers with other service\n       providers.\n\
    \   3.  A service provider may wish to interconnect its multicast VPN\n      \
    \ platform with that of another service provider.\n   The first scenario can be\
    \ considered the \"simplest\" because the\n   network is wholly managed by a single\
    \ service provider under a single\n   strategy and is therefore likely to use\
    \ a consistent set of\n   technologies across each AS.\n   The second scenario\
    \ may be more complex than the first because the\n   strategy and technology choices\
    \ made for each AS may have been\n   different due to their differing histories,\
    \ and the service provider\n   may not have unified (or may be unwilling to unify)\
    \ the strategy and\n   technology choices for each AS.\n   The third scenario\
    \ is the most complex because in addition to the\n   complexity of the second\
    \ scenario, the ASes are managed by different\n   service providers and therefore\
    \ may be subject to a different trust\n   model than the other scenarios.\n  \
    \ Section 5.2.6 of [RFC4834] states that \"a solution MUST support\n   inter-AS\
    \ multicast VPNs, and SHOULD support inter-provider multicast\n   VPNs\", \"considerations\
    \ about co-existence with unicast inter-AS VPN\n   Options A, B, and C (as described\
    \ in Section 10 of [RFC4364]) are\n   strongly encouraged\", and \"a multicast\
    \ VPN solution SHOULD provide\n   inter-AS mechanisms requiring the least possible\
    \ coordination between\n   providers, and keep the need for detailed knowledge\
    \ of providers'\n   networks to a minimum -- all this being in comparison with\n\
    \   corresponding unicast VPN options\".\n   Section 8 of [RFC6513] addresses\
    \ these requirements by proposing two\n   approaches for MVPN inter-AS deployments:\n\
    \   1.  Non-segmented inter-AS tunnels where the multicast tunnels are\n     \
    \  end-to-end across ASes, so even though the PEs belonging to a\n       given\
    \ MVPN may be in different ASes, the ASBRs play no special\n       role and function\
    \ merely as P routers (described in Section 8.1).\n   2.  Segmented inter-AS tunnels\
    \ where each AS constructs its own\n       separate multicast tunnels that are\
    \ then 'stitched' together by\n       the ASBRs (described in Section 8.2).\n\
    \   (Note that an inter-AS deployment can alternatively rely on Option A\n   --\
    \ so-called \"back-to-back\" VRFs -- that option is not considered in\n   this\
    \ section given that it can be used without any inter-AS-specific\n   mechanism.)\n\
    \   Section 5.2.6 of [RFC4834] also states, \"Within each service\n   provider,\
    \ the service provider SHOULD be able on its own to pick the\n   most appropriate\
    \ tunneling mechanism to carry (multicast) traffic\n   among PEs (just like what\
    \ is done today for unicast)\".  The segmented\n   approach is the only one capable\
    \ of meeting this requirement.\n   The segmented inter-AS solution would appear\
    \ to offer the largest\n   degree of deployment flexibility to operators.  However,\
    \ the non-\n   segmented inter-AS solution can simplify deployment in a restricted\n\
    \   number of scenarios.  [RFC6037] only supports the non-segmented\n   inter-AS\
    \ solution; therefore, the non-segmented inter-AS solution is\n   likely to be\
    \ useful to some operators for backward compatibility and\n   during migration\
    \ from [RFC6037] to [RFC6513].\n   The following is a comparison matrix between\
    \ the \"segmented inter-AS\n   P-tunnels\" and \"non-segmented inter-AS P-tunnels\"\
    \ approaches:\n   o  Scalability for I-PMSIs: The \"segmented inter-AS P-tunnels\"\
    \n      approach is more scalable, because of the ability of an ASBR to\n    \
    \  aggregate multiple intra-AS P-tunnels used for I-PMSI within its\n      own\
    \ AS into one inter-AS P-tunnel to be used by other ASes.  Note\n      that the\
    \ I-PMSI scalability improvement brought by the \"segmented\n      inter-AS P-tunnels\"\
    \ approach is higher when segmented P-tunnels\n      have a granularity of source\
    \ AS (see item below).\n   o  Scalability for S-PMSIs: The \"segmented inter-AS\
    \ P-tunnels\"\n      approach, when used with the BGP-based C-multicast routing\n\
    \      approach, provides flexibility in how the bandwidth/state trade-\n    \
    \  off is handled, to help with scalability.  Indeed, in that case,\n      the\
    \ trade-off made for a said (C-S,C-G) in a downstream AS can be\n      made more\
    \ in favor of scalability than the trade-off made by the\n      neighbor upstream\
    \ AS, thanks to the ability to aggregate one or\n      more S-PMSIs of the upstream\
    \ AS in one I-PMSI tunnel in a\n      downstream AS.\n   o  Configuration at ASBRs:\
    \ Depending on whether segmented P-tunnels\n      have a granularity of source\
    \ ASBR or source AS, the \"segmented\n      inter-AS P-tunnels\" approach would\
    \ require respectively the same\n      or additional configuration on ASBRs as\
    \ the \"non-segmented\n      inter-AS P-tunnels\" approach.\n   o  Independence\
    \ of tunneling technology from one AS to another: The\n      \"segmented inter-AS\
    \ P-tunnels\" approach provides this; the \"non-\n      segmented inter-AS P-tunnels\"\
    \ approach does not.\n   o  Facilitated coexistence with, and migration from,\
    \ existing\n      deployments and lighter engineering in some scenarios: The \"\
    non-\n      segmented inter-AS P-tunnels\" approach provides this; the\n     \
    \ \"segmented inter-AS P-tunnels\" approach does not.\n   The applicability of\
    \ segmented or non-segmented inter-AS tunnels to a\n   given deployment or inter-provider\
    \ interconnect will depend on a\n   number of factors specific to each service\
    \ provider.  However, given\n   the different elements reminded above, it is the\
    \ recommendation of\n   the authors that all implementations should support the\
    \ segmented\n   inter-AS model.  Additionally, the authors recommend that\n  \
    \ implementations should consider supporting the non-segmented inter-AS\n   model\
    \ in order to facilitate coexistence with, and migration from,\n   existing deployments,\
    \ and to provide a lighter engineering in a\n   restricted set of scenarios, although\
    \ it is recognized that initial\n   implementations may only support one or the\
    \ other.\n"
- title: 3.6.  BIDIR-PIM Support
  contents:
  - "3.6.  BIDIR-PIM Support\n   In BIDIR-PIM, the packet-forwarding rules have been\
    \ improved over\n   PIM-SM, allowing traffic to be passed up the shared tree toward\
    \ the\n   RPA.  To avoid multicast packet looping, BIDIR-PIM uses a mechanism\n\
    \   called the designated forwarder (DF) election, which establishes a\n   loop-free\
    \ tree rooted at the RPA.  Use of this method ensures that\n   only one copy of\
    \ every packet will be sent to an RPA, even if there\n   are parallel equal cost\
    \ paths to the RPA.  To avoid loops, the DF\n   election process enforces a consistent\
    \ view of the DF on all routers\n   on network segment, and during periods of\
    \ ambiguity or routing\n   convergence, the traffic forwarding is suspended.\n\
    \   In the context of a multicast VPN solution, a solution for BIDIR-PIM\n   support\
    \ must preserve this property of similarly avoiding packet\n   loops, including\
    \ in the case where multicast VRFs in a given MVPN\n   don't have a consistent\
    \ view of the routing to C-RPL/C-RPA (Customer-\n   RPL/Customer-RPA, i.e., RPL/RPA\
    \ of a Bidir customer PIM instance).\n   Section 11 of the current MVPN specification\
    \ [RFC6513] defines three\n   methods to support BIDIR-PIM, as RECOMMENDED in\
    \ [RFC4834]:\n   1.  Standard DF election procedure over an MI-PMSI\n   2.  VPN\
    \ Backbone as the RPL (Section 11.1)\n   3.  Partitioned Sets of PEs (Section\
    \ 11.2)\n   Method (1) is naturally applied to deployments using \"Full per-MVPN\n\
    \   PIM peering across an MI-PMSI\" for C-multicast routing, but as\n   indicated\
    \ in [RFC6513], Section 11, the DF election may not work well\n   in an MVPN environment,\
    \ and an alternative to DF election would be\n   desirable.\n   The advantage\
    \ of methods (2) and (3) is that they do not require\n   running the DF election\
    \ procedure among PEs.\n   Method (2) leverages the fact that in BIDIR-PIM, running\
    \ the DF\n   election procedure is not needed on the RPL.  This approach thus\
    \ has\n   the benefit of simplicity of implementation, especially in a context\n\
    \   where BGP-based C-multicast routing is used.  However, it has the\n   drawback\
    \ of putting constraints on how BIDIR-PIM is deployed, which\n   may not always\
    \ match the requirements of MVPN customers.\n   Method (3) treats an MVPN as a\
    \ collection of sets of multicast VRFs,\n   all PEs in a set having the same reachability\
    \ information towards\n   C-RPA but distinct from PEs in other sets.  Hence, with\
    \ this method,\n   C-Bidir packet loops in MVPN are resolved by the ability to\
    \ partition\n   a VPN into disjoint sets of VRFs, each having a distinct view\
    \ of the\n   converged network.  The partitioning approach to BIDIR-PIM requires\n\
    \   either upstream-assigned MPLS labels (to denote the partition) or a\n   unique\
    \ MP2MP LSP per partition.  The former is based on PE\n   Distinguisher Labels\
    \ that have to be distributed using auto-discovery\n   BGP routes, and their handling\
    \ requires the support for upstream\n   assigned labels and context label lookups\
    \ [RFC5331].  The latter,\n   using MP2MP LSP per partition, does not have these\
    \ constraints but is\n   restricted to P-tunnel types supporting MP2MP connectivity\
    \ (such as\n   mLDP [RFC6388]).\n   This approach to C-Bidir can work with PIM-based\
    \ or BGP-based\n   C-multicast routing procedures and is also generic in the sense\
    \ that\n   it does not impose any requirements on the BIDIR-PIM service\n   offering.\n\
    \   Given the above considerations, method (3) \"Partitioned Sets of PEs\"\n \
    \  is the RECOMMENDED approach.\n   In the event where method (3) is not applicable\
    \ (lack of support for\n   upstream assigned labels or for a P-tunnel type providing\
    \ MP2MP\n   connectivity), then method (1) \"Standard DF election procedure over\n\
    \   an MI-PMSI\" and (2) \"VPN Backbone as the RPL\" are RECOMMENDED as\n   interim\
    \ solutions, (1) having the advantage over (2) of not putting\n   constraints\
    \ on how BIDIR-PIM is deployed and the drawbacks of only\n   being applicable\
    \ when PIM-based C-multicast is used and of possibly\n   not working well in an\
    \ MVPN environment.\n"
- title: 4.  Co-Located RPs
  contents:
  - "4.  Co-Located RPs\n   Section 5.1.10.1 of [RFC4834] states, \"In the case of\
    \ PIM-SM in ASM\n   mode, engineering of the RP function requires the deployment\
    \ of\n   specific protocols and associated configurations.  A service provider\n\
    \   may offer to manage customers' multicast protocol operation on their\n   behalf.\
    \  This implies that it is necessary to consider cases where a\n   customer's\
    \ RPs are outsourced (e.g., on PEs).  Consequently, a VPN\n   solution MAY support\
    \ the hosting of the RP function in a VR or VRF\".\n   However, customers who\
    \ have already deployed multicast within their\n   networks and have therefore\
    \ already deployed their own internal RPs\n   are often reluctant to hand over\
    \ the control of their RPs to their\n   service provider and make use of a co-located\
    \ RP model, and providing\n   RP-collocation on a PE will require the activation\
    \ of Multicast\n   Source Discovery Protocol (MSDP) or the processing of PIM Registers\n\
    \   on the PE.  Securing the PE routers for such activity requires\n   special\
    \ care and additional work and will likely rely on specific\n   features to be\
    \ provided by the routers themselves.\n   The applicability of the co-located\
    \ RP model to a given MVPN will\n   thus depend on a number of factors specific\
    \ to each customer and\n   service provider.\n   It is therefore the recommendation\
    \ that implementations should\n   support a co-located RP model but that support\
    \ for a co-located RP\n   model within an implementation should not restrict deployments\
    \ to\n   using a co-located RP model: implementations MUST support deployments\n\
    \   when activation of a PIM RP function (PIM Register processing and RP-\n  \
    \ specific PIM procedures) or a VRF MSDP instance is not required on\n   any PE\
    \ router and where all the RPs are deployed within the\n   customers' networks\
    \ or CEs.\n"
- title: 5.  Avoiding Duplicates
  contents:
  - "5.  Avoiding Duplicates\n   It is recommended that implementations support the\
    \ procedures\n   described in Section 9.1.1 of [RFC6513] \"Discarding Packets\
    \ from\n   Wrong PE\", allowing fully avoiding duplicates.\n"
- title: 6.  Existing Deployments
  contents:
  - "6.  Existing Deployments\n   Some suggestions provided in this document can be\
    \ used to\n   incrementally modify currently deployed implementations without\n\
    \   hindering these deployments and without hindering the consistency of\n   the\
    \ standardized solution by providing optional per-VRF configuration\n   knobs\
    \ to support modes of operation compatible with currently\n   deployed implementations,\
    \ while at the same time using the\n   recommended approach on implementations\
    \ supporting the standard.\n   In cases where this may not be easily achieved,\
    \ a recommended\n   approach would be to provide a per-VRF configuration knob\
    \ that allows\n   incremental per-VPN migration of the mechanisms used by a PE\
    \ device,\n   which would allow migration with some per-VPN interruption of service\n\
    \   (e.g., during a maintenance window).\n   Mechanisms allowing \"live\" migration\
    \ by providing concurrent use of\n   multiple alternatives for a given PE and\
    \ a given VPN are not seen as\n   a priority considering the expected implementation\
    \ complexity\n   associated with such mechanisms.  However, if there happen to\
    \ be\n   cases where they could be viably implemented relatively simply, such\n\
    \   mechanisms may help improve migration management.\n"
- title: 7.  Summary of Recommendations
  contents:
  - "7.  Summary of Recommendations\n   The following list summarizes conclusions\
    \ on the mechanisms that\n   define the set of mandatory-to-implement mechanisms\
    \ in the context of\n   [RFC6513].\n   Note well that the implementation of the\
    \ non-mandatory alternative\n   mechanisms is not precluded.\n   Recommendations\
    \ are:\n   o  that BGP-based auto-discovery be the mandated solution for auto-\n\
    \      discovery;\n   o  that BGP be the mandated solution for S-PMSI switching\
    \ signaling;\n   o  that implementations support both the BGP-based and the full\
    \ per-\n      MVPN PIM peering solutions for PE-PE exchange of customer\n    \
    \  multicast routing until further operational experience is gained\n      with\
    \ both solutions;\n   o  that implementations use the \"Partitioned Sets of PEs\"\
    \ approach\n      for BIDIR-PIM support;\n   o  that implementations implement\
    \ the P2MP variants of the P2P\n      protocols that they already implement, such\
    \ as mLDP, P2MP RSVP-TE,\n      and GRE/IP-Multicast;\n   o  that implementations\
    \ support segmented inter-AS tunnels and\n      consider supporting non-segmented\
    \ inter-AS tunnels (in order to\n      maintain backward compatibility and for\
    \ migration);\n   o  that implementations MUST support deployments when the activation\n\
    \      of a PIM RP function (PIM Register processing and RP-specific PIM\n   \
    \   procedures) or VRF MSDP instance is not required on any PE router;\n     \
    \ and\n   o  that implementations support the procedures described in Section\n\
    \      9.1.1 of [RFC6513].\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document does not by itself raise any particular\
    \ security\n   considerations.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   We would like to thank Adrian Farrel, Eric Rosen, Yakov\
    \ Rekhter, and\n   Maria Napierala for their feedback that helped shape this document.\n\
    \   Additional credit is due to Maria Napierala for co-authoring\n   Section 3.6\
    \ on BIDIR-PIM Support.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC6513]   Rosen, E., Ed. and R. Aggarwal, Ed., \"Multicast\
    \ in MPLS/\n               BGP IP VPNs\", RFC 6513, February 2012.\n   [RFC6514]\
    \   Aggarwal, R., Rosen, E., Morin, T., and Y. Rekhter, \"BGP\n              \
    \ Encodings and Procedures for Multicast in MPLS/BGP IP\n               VPNs\"\
    , RFC 6514, February 2012.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [MVPN]      Aggarwal, R., \"Base Specification\
    \ for Multicast in BGP/\n               MPLS VPNs\", Work in Progress, June 2004.\n\
    \   [PIM-PORT]  Farinacci, D., Wijnands, I., Venaas, S., and M.\n            \
    \   Napierala, \"A Reliable Transport Mechanism for PIM\", Work\n            \
    \   in Progress, October 2011.\n   [RFC4364]   Rosen, E. and Y. Rekhter, \"BGP/MPLS\
    \ IP Virtual Private\n               Networks (VPNs)\", RFC 4364, February 2006.\n\
    \   [RFC4684]   Marques, P., Bonica, R., Fang, L., Martini, L., Raszuk,\n    \
    \           R., Patel, K., and J. Guichard, \"Constrained Route\n            \
    \   Distribution for Border Gateway Protocol/MultiProtocol\n               Label\
    \ Switching (BGP/MPLS) Internet Protocol (IP) Virtual\n               Private\
    \ Networks (VPNs)\", RFC 4684, November 2006.\n   [RFC4834]   Morin, T., Ed.,\
    \ \"Requirements for Multicast in Layer 3\n               Provider-Provisioned\
    \ Virtual Private Networks (PPVPNs)\",\n               RFC 4834, April 2007.\n\
    \   [RFC5331]   Aggarwal, R., Rekhter, Y., and E. Rosen, \"MPLS Upstream\n   \
    \            Label Assignment and Context-Specific Label Space\",\n          \
    \     RFC 5331, August 2008.\n   [RFC5796]   Atwood, W., Islam, S., and M. Siami,\
    \ \"Authentication and\n               Confidentiality in Protocol Independent\
    \ Multicast Sparse\n               Mode (PIM-SM) Link-Local Messages\", RFC 5796,\
    \ March 2010.\n   [RFC6037]   Rosen, E., Cai, Y., and IJ. Wijnands, \"Cisco Systems'\n\
    \               Solution for Multicast in BGP/MPLS IP VPNs\", RFC 6037,\n    \
    \           October 2010.\n   [RFC6388]   Wijnands, IJ., Minei, I., Kompella,\
    \ K., and B. Thomas,\n               \"Label Distribution Protocol Extensions\
    \ for Point-to-\n               Multipoint and Multipoint-to-Multipoint Label\
    \ Switched\n               Paths\", RFC 6388, November 2011.\n"
- title: Appendix A.  Scalability of C-Multicast Routing Processing Load
  contents:
  - "Appendix A.  Scalability of C-Multicast Routing Processing Load\n   The main\
    \ role of multicast routing is to let routers determine that\n   they should start\
    \ or stop forwarding a said multicast stream on a\n   said link.  In an MVPN context,\
    \ this has to be done for each MVPN,\n   and the associated function is thus named\
    \ \"customer-multicast\n   routing\" or \"C-multicast routing\", and its role\
    \ is to let PE routers\n   determine that they should start or stop forwarding\
    \ the traffic of a\n   said multicast stream toward the remote PEs, on some PMSI\
    \ tunnel.\n   When a Join message is received by a PE, this PE knows that it should\n\
    \   be sending traffic for the corresponding multicast group of the\n   corresponding\
    \ MVPN.  However, the reception of a Prune message from a\n   remote PE is not\
    \ enough by itself for a PE to know that it should\n   stop forwarding the corresponding\
    \ multicast traffic: it has to make\n   sure that there aren't any other PEs that\
    \ still have receivers for\n   this traffic.\n   There are many ways that the\
    \ \"C-multicast routing\" building block can\n   be designed, and they differ,\
    \ among other things, in how a PE\n   determines when it can stop forwarding a\
    \ said multicast stream toward\n   other PEs:\n   PIM LAN Procedures, by default\n\
    \      By default, when PIM LAN procedures are used when a PE on a LAN\n     \
    \ Prunes itself from a multicast tree, all other PEs on that LAN\n      check\
    \ their own state to known if they are on the tree, in which\n      case they\
    \ send a PIM Join message on that LAN to override the\n      Prune.  Thus, for\
    \ each PIM Prune message, all PE routers on the\n      LAN work to let the upstream\
    \ PE determine the answer to the \"did\n      the last receiver leave?\" question.\n\
    \   BGP-based C-multicast routing\n      When BGP-based procedures are used for\
    \ C-multicast routing, if no\n      BGP route reflector is used, the \"did the\
    \ last receiver leave?\"\n      question is answered by having the upstream PE\
    \ maintain an up-to-\n      date list of the PEs that are joined to the tree,\
    \ thus making it\n      possible to instantly know the answer to the \"did the\
    \ last\n      receiver leave?\" question whenever a PE leaves the said multicast\n\
    \      tree.\n      However, when a BGP route reflector is used (which is expected\
    \ to\n      be the recommended approach), the role of maintaining an updated\n\
    \      list of the PEs that are part of a said multicast tree is taken\n     \
    \ care of by the route reflector(s).  Using BGP procedures, a route\n      reflector\
    \ that had advertised a C-multicast Source Tree Join route\n      for a said (C-S,C-G)\
    \ to other route reflectors before will\n      withdraw this route when there\
    \ is no of its clients PEs\n      advertising this route anymore.  Similarly,\
    \ a route reflector that\n      had advertised this route to its client PEs before\
    \ will withdraw\n      this route when its (other) client PEs and its route reflectors\n\
    \      peers are no longer advertising this route.  In this context, the\n   \
    \   \"did the last receiver leave?\" question can be said to be answered\n   \
    \   by the route reflector(s).\n      Furthermore, the BGP route distribution\
    \ can leverage more than one\n      route reflector: if multiple route reflectors\
    \ are used with PEs\n      being distributed (as clients) among these route reflectors,\
    \ the\n      \"did the last receiver leave?\" question is partly answered by each\n\
    \      of these route reflectors.\n   We can see that the \"last receiver leaves\"\
    \ question is a part of the\n   work that the C-multicast routing building block\
    \ has to address, and\n   the different approaches significantly differ.  The\
    \ different\n   approaches for handling C-multicast routing can indeed result\
    \ in a\n   different amount of processing and how this processing is spread\n\
    \   among the different functions.  These differences can be better\n   estimated\
    \ by quantifying the amount of message processing and state\n   maintenance.\n\
    \   Though the type of processing, messages, and states may vary with the\n  \
    \ different approaches, we propose here a rough estimation of the load\n   of\
    \ PEs, in terms of number of messages processed and number of\n   control plane\
    \ states maintained.  A \"message processed\" is a message\n   being parsed, a\
    \ lookup being done, and some action being taken (such\n   as, for instance, updating\
    \ a control plane or data plane state or\n   discarding the information in the\
    \ message).  A \"state maintained\" is\n   a multicast state kept in the control\
    \ plane memory of a PE, related\n   to an interface or a PE being subscribed to\
    \ a multicast stream (note\n   that a state will be counted on an equipment as\
    \ many times as the\n   number of protocols in which it is present, e.g., two\
    \ times when\n   present both as a PIM state and a BGP route).  Note that here\
    \ we\n   don't compare the data plane states on PE routers, which wouldn't\n \
    \  vary between the different options chosen.\n"
- title: A.1.  Scalability with an Increased Number of PEs
  contents:
  - "A.1.  Scalability with an Increased Number of PEs\n   The following sections\
    \ evaluate the processing and state maintenance\n   load for an increasingly high\
    \ number of PEs in a VPN.\n"
- title: A.1.1.  SSM Scalability
  contents:
  - "A.1.1.  SSM Scalability\n   The following subsections do such an estimation for\
    \ each proposed\n   approach for C-multicast routing, for different phases of\
    \ the\n   following scenario:\n   o  One SSM multicast stream is considered.\n\
    \   o  Only the intra-AS case is concerned (with the segmented inter-AS\n    \
    \  tunnels and BGP-based C-multicast routing, #mvpn_PE and #R_PE\n      should\
    \ refer to the PEs of the MVPN in the AS, not to all PEs of\n      the MVPN).\n\
    \   o  The scenario is as follows:\n      *  One PE joins the multicast stream\
    \ (because of a new receiver-\n         connected site has sent a Join on the\
    \ PE-CE link), followed by\n         a number of additional PEs that also join\
    \ the same multicast\n         stream, one after the other; we evaluate the processing\n\
    \         required for the addition of each PE.\n      *  A period of time T passes,\
    \ without any PE joining or leaving\n         (baseline).\n      *  All PEs leave,\
    \ one after the other, until the last one leaves;\n         we evaluate the processing\
    \ required for the leave of each PE.\n   o  The parameters used are:\n      *\
    \  #mvpn_PE: the number of PEs in the MVPN\n      *  #R_PE: the number of PEs\
    \ joining the multicast stream\n      *  #RR: the number of route reflectors\n\
    \      *  T_PIM_r: the time between two refreshes of a PIM Join (default\n   \
    \      is 60s)\n   The estimation unit used is the \"message.equipment\" (or \"\
    m.e\"): one\n   \"message.equipment\" corresponds to \"one equipment processing\
    \ one\n   message\" (10 m.e being \"10 equipments processing each one message\"\
    ,\n   \"5 messages each processed by 2 equipments\", or \"1 message processed\n\
    \   by 10 equipment\", etc.).  Similarly, for the amount of control plane\n  \
    \ state, the unit used is \"state.equipment\" or \"s.e\".  This accounts\n   for\
    \ the fact that a message (or a state) can be processed (or\n   maintained) by\
    \ more than one node.\n   We distinguish three different types of equipments:\
    \ the upstream PE\n   for the considered multicast stream, the RR (if any), and\
    \ the other\n   PEs (which are not the upstream PE).\n   The numbers or orders\
    \ of magnitude given in the tables in the\n   following subsections are totals\
    \ across all equipments of a same\n   type, for each type of equipment, in the\
    \ \"m.e\" and \"s.e\" units\n   defined above.\n   Additionally:\n   o  For PIM,\
    \ only Join and Prune messages are counted:\n      *  The load due to PIM Hellos\
    \ can be easily computed separately\n         and only depends on the number of\
    \ PEs in the VPN.\n      *  Message processing related to the PIM Assert mechanism\
    \ is also\n         not taken into account, for the sake of simplicity.\n   o\
    \  For BGP, all advertisements and withdrawals of C-multicast Source\n      Tree\
    \ Join routes are considered (Source-Active auto-discovery\n      routes are not\
    \ used in an SSM context); following the\n      recommendation in Section 16 of\
    \ [RFC6514], the case where the\n      Route Target Constraint mechanisms [RFC4684]\
    \ is not used is not\n      covered.\n   (Note that for all options provided for\
    \ C-multicast routing, the\n   procedures to set up and maintain a shortest path\
    \ tree toward the\n   source of an SSM group are the same as the procedures used\
    \ to set up\n   and maintain a shortest path tree toward an RP or a non-SSM source;\n\
    \   the results of this section are thus re-used in Appendix A.1.2.)\n"
- title: A.1.1.1.  PIM LAN Procedures, by Default
  contents:
  - "A.1.1.1.  PIM LAN Procedures, by Default\n   +------------+------------+---------------+----------+--------------+\n\
    \   |            | upstream   | other PEs     | RR       | total across |\n  \
    \ |            | PE (1)     | (total across | (none)   | all          |\n   |\
    \            |            | (#mvpn_PE-1)  |          | equipments   |\n   |  \
    \          |            | PEs)          |          |              |\n   +------------+------------+---------------+----------+--------------+\n\
    \   | first PE   | 1 m.e      | #mvpn_PE-1    | /        | #mvpn_PE m.e |\n  \
    \ | joins      |            | m.e           |          |              |\n   +------------+------------+---------------+----------+--------------+\n\
    \   | for *each* | 1 m.e      | #mvpn_PE-1    | /        | #mvpn_PE m.e |\n  \
    \ | additional |            | m.e           |          |              |\n   |\
    \ PE joining |            |               |          |              |\n   +------------+------------+---------------+----------+--------------+\n\
    \   | baseline   | T/T_PIM_r  | (T/T_PIM_r) . | /        | (T/T_PIM_r)  |\n  \
    \ | processing | m.e        | (#mvpn_PE-1)  |          | x #mvpn_PE   |\n   |\
    \ over a     |            | m.e           |          | m.e          |\n   | period\
    \ T   |            |               |          |              |\n   +------------+------------+---------------+----------+--------------+\n\
    \   | for *each* | 2 m.e      | 2(#mvpn_PE-1) | /        | 2 x #mvpn_PE |\n  \
    \ | PE leaving |            | m.e           |          | m.e          |\n   +------------+------------+---------------+----------+--------------+\n\
    \   | the last   | 1 m.e      | #mvpn_PE-1    | /        | #mvpn_PE m.e |\n  \
    \ | PE leaves  |            | m.e           |          |              |\n   +------------+------------+---------------+----------+--------------+\n\
    \   | total for  | #R_PE x 2  | (#mvpn_PE-1)  | 0        | #mvpn_PE x ( |\n  \
    \ | #R_PE PEs  | +          | x (#R_PE) x 2 |          | 3 x #R_PE +  |\n   |\
    \            | T/T_PIM_r  | + T/T_PIM_r)  |          | T/T_PIM_r )  |\n   |  \
    \          | m.e        | .             |          | m.e          |\n   |    \
    \        |            | (#mvpn_PE-1)  |          |              |\n   |      \
    \      |            | m.e           |          |              |\n   +------------+------------+---------------+----------+--------------+\n\
    \   | total      | 1 s.e      | #R_PE s.e     | 0        | #R_PE+1 s.e  |\n  \
    \ | state      |            |               |          |              |\n   |\
    \ maintained |            |               |          |              |\n   +------------+------------+---------------+----------+--------------+\n\
    \    Messages Processing and State Maintenance - PIM LAN Procedures, by\n    \
    \                              Default\n   We suppose here that the PIM Join suppression\
    \ and Prune Override\n   mechanisms are fully effective, i.e., that a Join or\
    \ Prune message\n   sent by a PE is instantly seen by other PEs.  Strictly speaking,\
    \ this\n   is not true, and depending on network delays and timing, there could\n\
    \   be cases where more messages are exchanged, and the number given in\n   this\
    \ table is a lower bound to the number of PIM messages exchanged.\n"
- title: A.1.1.2.  BGP-Based C-Multicast Routing
  contents:
  - "A.1.1.2.  BGP-Based C-Multicast Routing\n   The following analysis assumes that\
    \ BGP route reflectors (RRs) are\n   used, and no hierarchy of RRs (note that\
    \ the analysis also assumes\n   that Route Target Constraint mechanisms are used).\n\
    \   Given these assumptions, a message carrying a C-multicast route from\n   a\
    \ downstream PE would need to be processed by the RRs that have that\n   PE as\
    \ their client.  Due to the use of Route Target Constraint\n   mechanisms [RFC4684],\
    \ these RRs would then send this message to only\n   the RRs that have the upstream\
    \ PE as a client.  None of the other RRs\n   and none of the other PEs will receive\
    \ this message.  Thus, for a\n   message associated with a given MVPN, the total\
    \ number of RRs that\n   would need to process this message only depends on the\
    \ number of RRs\n   that maintain C-multicast routes for that MVPN and that have\
    \ either\n   the receiver-connected PE or the source-connected PE as their clients\n\
    \   and is independent of the total number of RRs or the total number of\n   PEs.\n\
    \   In practice, for a given MVPN, a PE would be a client of just 2 RRs\n   (for\
    \ redundancy, an RR cluster would typically have 2 RRs).\n   Therefore, in practice\
    \ the message would need to be processed by at\n   most 4 RRs (2 RRs if both the\
    \ downstream PE and the upstream PE are\n   the clients of the same RRs).  Thus,\
    \ the number of RRs that have to\n   process a given message is at most 4.  Since\
    \ RRs in different RR\n   clusters have a full Internal BGP (iBGP) mesh among\
    \ themselves, each\n   RR in the RR cluster that contains the upstream PE would\
    \ receive the\n   message from each of the RRs in the RR cluster that contains\
    \ the\n   downstream PE.  Given 2 RRs per cluster, the total number of messages\n\
    \   processed by all the RRs is 6.\n   Additionally, as soon as there is a receiver-connected\
    \ PE in each RR\n   cluster, the number of RRs processing a C-multicast route\
    \ tends\n   quickly toward 2 (taking into account that a PE peering to RRs will\n\
    \   be made redundant).\n   +------------+----------+--------------+-----------+----------------+\n\
    \   |            | upstream | other PEs    | RRs (#RR) | total across   |\n  \
    \ |            | PE (1)   | (total       |           | all equipments |\n   |\
    \            |          | across       |           |                |\n   |  \
    \          |          | (#mvpn_PE-1) |           |                |\n   |    \
    \        |          | PEs)         |           |                |\n   +------------+----------+--------------+-----------+----------------+\n\
    \   | first PE   | 2 m.e    | 2 m.e        | 6 m.e     | 10 m.e         |\n  \
    \ | joins      |          |              |           |                |\n   +------------+----------+--------------+-----------+----------------+\n\
    \   | for *each* | between  | 2 m.e        | (at most) | (at most) 10   |\n  \
    \ | additional | 0 and 2  |              | 6 m.e     | m.e tending    |\n   |\
    \ PE joining | m.e      |              | tending   | toward 4 m.e   |\n   |  \
    \          |          |              | toward 2  |                |\n   |    \
    \        |          |              | m.e       |                |\n   +------------+----------+--------------+-----------+----------------+\n\
    \   | baseline   | 0        | 0            | 0         | 0              |\n  \
    \ | processing |          |              |           |                |\n   |\
    \ over a     |          |              |           |                |\n   | period\
    \ T   |          |              |           |                |\n   +------------+----------+--------------+-----------+----------------+\n\
    \   | for *each* | between  | 2 m.e        | (at most) | (at most) 10   |\n  \
    \ | PE leaving | 0 and 2  |              | 6 m.e     | m.e tending    |\n   |\
    \            | m.e      |              | tending   | toward 4 m.e   |\n   |  \
    \          |          |              | toward 2  |                |\n   +------------+----------+--------------+-----------+----------------+\n\
    \   | the last   | 2 m.e    | 2 m.e        | 6 m.e     | 10 m.e         |\n  \
    \ | PE leaves  |          |              |           |                |\n   +------------+----------+--------------+-----------+----------------+\n\
    \   | total for  | at most  | #R_PE x 4    | (at most) | at most 10 x   |\n  \
    \ | #R_PE PEs  | 2 x #RRs | m.e          | 6 x #R_PE | #R_PE + 2 x    |\n   |\
    \            | m.e (see |              | m.e       | #RRs m.e       |\n   |  \
    \          | note     |              | (tending  | (tending       |\n   |    \
    \        | below)   |              | toward 2  | toward 6 x     |\n   |      \
    \      |          |              | x #R_PE   | #R_PE + #RRs   |\n   |        \
    \    |          |              | m.e)      | m.e )          |\n   +------------+----------+--------------+-----------+----------------+\n\
    \   | total      | 4 s.e    | 2 x #R_PE    | approx. 2 | approx. 4      |\n  \
    \ | state      |          | s.e          | #R_PE +   | #R_PE + #RRx   |\n   |\
    \ maintained |          |              | #RR x     | #clusters + 4  |\n   |  \
    \          |          |              | #clusters | m.e            |\n   |    \
    \        |          |              | s.e       |                |\n   +------------+----------+--------------+-----------+----------------+\n\
    \      Message Processing and State Maintenance - BGP-Based Procedures\n   Note\
    \ on the total of m.e on the upstream PE:\n   o  There are as many \"message.equipment\"\
    s on the upstream PE as the\n      number of times the RRs of the cluster of the\
    \ upstream PE need to\n      re-advertise the C-multicast (C-S,C-G) route; such\
    \ a re-\n      advertisement is not useful for the upstream PE, because the\n\
    \      behavior of the upstream PE for a said (VPN associated to the\n      Route\
    \ Target, C-S,C-G) will not depend on the precise attributes\n      carried by\
    \ the route (other than the Route Target, of course) but\n      will happen in\
    \ some cases due to how BGP processes these routes.\n      Indeed, a BGP peer\
    \ will possibly re-advertise a route when its\n      current best path changes\
    \ for the said NLRI if the set of\n      attributes to advertise also changes.\n\
    \   o  Let's look at the different relevant attributes and when they can\n   \
    \   influence when a re-advertisement of a C-multicast route will\n      happen:\n\
    \      *  next-hop and originator-id: A new PE joining will not\n         mechanically\
    \ result in a need to re-advertise a C-multicast\n         route because as the\
    \ RR aggregates C-multicast routes with the\n         same NLRI received from\
    \ PEs in its own cluster (Section 11.4 of\n         [RFC6514]), the RR rewrites\
    \ the values of these attributes;\n         however, the advertisements made by\
    \ different RRs peering with\n         the RRs in the cluster of the upstream\
    \ PE may lead to updates\n         of the value of these attributes.\n      *\
    \  cluster-list: The value of this attribute only varies between\n         clusters,\
    \ changes of the value of this attributes does not\n         \"follow\" PE advertisements,\
    \ and only advertisements made by\n         different RRs may possibly lead to\
    \ updates of the value of this\n         attribute.\n      *  local-pref: The\
    \ value of this attribute is determined locally;\n         this is true both for\
    \ the routes advertised by each PE (which\n         could all be configured to\
    \ use the same value) and for a route\n         that results from the aggregation\
    \ by an RR of the route with\n         the same NLRI advertised by the PEs of\
    \ his cluster (the RRs\n         could also be configured to use a local pref\
    \ independent of the\n         local_pref of the routes advertised to him).  Thus,\
    \ this\n         attribute can be considered to result in a need to re-advertise\n\
    \         a C-multicast route.\n      *  Other BGP attributes do not have a particular\
    \ reason to be set\n         for C-multicast routes in intra-AS, and if they were,\
    \ an RR\n         (or, for attributes relevant for inter-AS, an ASBR) would also\n\
    \         overwrite these values when aggregating these routes.\n   o  Given the\
    \ above, for a said C-multicast Source Tree Join (S,G)\n      NLRI, what may force\
    \ an RR to re-advertise the route with\n      different attributes to the upstream\
    \ PE would be the case of an RR\n      of another cluster advertising a route\
    \ better than its current\n      best route, because of the values of attributes\
    \ specific to that\n      RR (next-hop, originator-id, cluster-list) but not because\
    \ of\n      anything specific to the PEs behind that RR.  If we consider our\n\
    \      (#R_PE -1) joining a said (C-S,C-G), one after the other after the\n  \
    \    first PE joining, some of these events may thus lead to a re-\n      advertisement\
    \ to the upstream PE, but the number of times this can\n      happen is at worse\
    \ the number of RRs in clusters having receivers\n      (plus one because of the\
    \ possible advertisement of the same route\n      by a PE of the local cluster).\n\
    \   o  Given that we look at scalability with an increased number of PEs\n   \
    \   in this section, we need to consider the possibility that all\n      clusters\
    \ may have a client PE with a receiver.  We also need to\n      consider that\
    \ the two RRs of the cluster of the upstream PE may\n      need to re-advertise\
    \ the route.  With this in mind, we know that\n      2x#RRs is an upper bound\
    \ to the number of updates made by RRs to\n      the upstream PE, for the considered\
    \ C-multicast route.\n"
- title: A.1.1.3.  Side-by-Side Orders of Magnitude Comparison
  contents:
  - "A.1.1.3.  Side-by-Side Orders of Magnitude Comparison\n   This section concludes\
    \ the previous section by considering the orders\n   of magnitude when the number\
    \ of PEs in a VPN increases.\n   +------------+--------------------------------+---------------------+\n\
    \   |            | PIM LAN Procedures             | BGP-based           |\n  \
    \ +------------+--------------------------------+---------------------+\n   |\
    \ first PE   | O(#mvpn_PE)                    | O(1)                |\n   | joins\
    \ (in  |                                |                     |\n   | m.e)   \
    \    |                                |                     |\n   +------------+--------------------------------+---------------------+\n\
    \   | for *each* | O(#mvpn_PE)                    | O(1)                |\n  \
    \ | additional |                                |                     |\n   |\
    \ PE joining |                                |                     |\n   | (in\
    \ m.e)   |                                |                     |\n   +------------+--------------------------------+---------------------+\n\
    \   | baseline   | (T/T_PIM_r) x O(#mvpn_PE)      | 0                   |\n  \
    \ | processing |                                |                     |\n   |\
    \ over a     |                                |                     |\n   | period\
    \ T   |                                |                     |\n   | (in m.e)\
    \   |                                |                     |\n   +------------+--------------------------------+---------------------+\n\
    \   | for *each* | O(#mvpn_PE)                    | O(1)                |\n  \
    \ | PE leaving |                                |                     |\n   |\
    \ (in m.e)   |                                |                     |\n   +------------+--------------------------------+---------------------+\n\
    \   | the last   | O(#mvpn_PE)                    | O(1)                |\n  \
    \ | PE leaves  |                                |                     |\n   |\
    \ (in m.e)   |                                |                     |\n   +------------+--------------------------------+---------------------+\n\
    \   | total for  | O(#mvpn_PE x #R_PE) +          | O(#R_PE)            |\n  \
    \ | #R_PE PEs  | O(#mvpn_PE x T/T_PIM_r)        |                     |\n   |\
    \ (in m.e)   |                                |                     |\n   +------------+--------------------------------+---------------------+\n\
    \   | states (in | O(#R_PE)                       | O(#R_PE)            |\n  \
    \ | s.e)       |                                |                     |\n   |\
    \ notes      | (processing and state          | (processing and     |\n   |  \
    \          | maintenance are essentially    | state maintenance   |\n   |    \
    \        | done by, and spread amongst,   | is essentially done |\n   |      \
    \      | the PEs of the MVPN;           | by, and spread      |\n   |        \
    \    | non-upstream PEs have          | amongst, the RRs)   |\n   |          \
    \  | processing to do)              |                     |\n   +------------+--------------------------------+---------------------+\n\
    \    Comparison of Orders of Magnitude for Message Processing and State\n    \
    \            Maintenance (Totals across All Equipments)\n   The conclusions that\
    \ can be drawn from the above are as follows:\n   o  In the PIM-based approach,\
    \ any message will be processed by all\n      PEs, including those that are neither\
    \ upstream nor downstream for\n      the message; as a result, the total number\
    \ of messages to process\n      is in O(#mvpn_PE x #R_PE), i.e., O(#mvpn_PE ^\
    \ 2) if the proportion\n      of receiver PEs is considered constant when the\
    \ number of PEs\n      increases.  The refreshes of Join messages introduce a\
    \ linear\n      factor not changing the order of magnitude, but which can be\n\
    \      significant for long-lived streams;\n   o  The BGP-based approach requires\
    \ an amount of message processing in\n      O(#R_PE) lower than the PIM-based\
    \ approach.  The amount is\n      independent of the duration of streams.\n  \
    \ o  State maintenance is of the same order of magnitude for all\n      approaches:\
    \ O(#R_PE), but the repartition is different:\n      *  The PIM-based approach\
    \ fully spreads, and minimizes, the amount\n         of state (one state per PE).\n\
    \      *  The BGP-based procedures spread all the state on the set of\n      \
    \   route reflectors.\n"
- title: A.1.2.  ASM Scalability
  contents:
  - "A.1.2.  ASM Scalability\n   The conclusions in Appendix A.1.1 are reused in this\
    \ section, for the\n   parts that are common to the setup and maintenance of states\
    \ related\n   to a source tree or a shared tree.\n   When PIM-SM is used in a\
    \ VPN and an ASM multicast group is joined by\n   some PEs (#R_PEs) with some\
    \ sources sending toward this multicast\n   group address, we can note the following:\n\
    \   PEs will generally have to maintain one shared tree, plus one source\n   tree\
    \ for each source sending toward G; each tree resulting in an\n   amount of processing\
    \ and state maintenance similar to what is\n   described in the scenario in Appendix\
    \ A.1.1, with the same\n   differences in order of magnitudes between the different\
    \ approaches\n   when the number of PEs is high.\n   An exception to this is when,\
    \ for a said group in a VPN among the PIM\n   instances in the customer routers\
    \ and VRFs, none would switch to the\n   shortest path tree (SPT) (SwitchToSptDesired\
    \ always false): in that\n   case, the processing and state maintenance load is\
    \ the one required\n   for maintenance of the shared tree only.  It has to be\
    \ noted that\n   this scenario is dependent on customer policy.  To compare the\n\
    \   resulting load in that case, between PIM-based approaches and the\n   BGP-based\
    \ approach configured to use inter-site shared trees, the\n   scenario in Appendix\
    \ A.1.1 can be used with #R_PEs joining a (C-*,\n   C-G) ASM group instead of\
    \ an SSM group, and the same differences in\n   order of magnitude remain true.\
    \  In the case of the BGP-based\n   approach used without inter-site shared trees,\
    \ we must take into\n   account the load resulting from the fact that to build\
    \ the C-PIM\n   shared tree, each PE has to join the source tree to each source;\n\
    \   using the notations of Appendix A.1.1, this adds an amount of load\n   (total\
    \ load across all equipments) that is proportional to #R_PEs and\n   the number\
    \ of sources.  The order of magnitude with an increasing\n   number of PEs is\
    \ thus unchanged, and the differences in order of\n   magnitude also remain the\
    \ same.\n   Additionally, to the maintenance of trees, PEs have to ensure some\n\
    \   processing and state maintenance related to individual sources\n   sending\
    \ to a multicast group; the related procedures and behaviors\n   largely may differ\
    \ depending on which C-multicast routing protocol is\n   used, how it is configured,\
    \ how the multicast source discovery\n   mechanism is used in the customer VPN,\
    \ and which SwitchToSptDesired\n   policy is used.  However, the following can\
    \ be observed:\n   o  When BGP-based C-multicast routing is used:\n      *  Each\
    \ PE will possibly have to process and maintain a BGP\n         Source-Active\
    \ auto-discovery route for (some or all) sources of\n         an ASM group.  The\
    \ number of Source-Active auto-discovery\n         routes will typically be one\
    \ but may be related to the number\n         of upstream PEs in the following\
    \ cases: when inter-site shared\n         trees are used and simultaneously more\
    \ than one PE is used as\n         the upstream PE for SPT (C-S,C-G) trees and\
    \ when inter-site\n         shared trees are used and there are multiple PEs that\
    \ are\n         possible upstream for this (S,G).\n      *  This results in message\
    \ processing and state maintenance (total\n         across all the equipments)\
    \ linearly dependent on the number of\n         PEs in the VPN (#mvpn_PE) for\
    \ each source, independent of the\n         number of PEs joined to the group.\n\
    \      *  Depending on whether or not inter-site shared trees are used,\n    \
    \     on the SwitchToSptDesired policy in the PIM instances in the\n         customer\
    \ routers and VRFs, and on the relative locations of\n         sources and RPs,\
    \ this will happen for all (S,G) of an ASM group\n         or only for some of\
    \ them and will be done in parallel to the\n         maintenance of shared and/or\
    \ source trees or at the first join\n         of a PE on a source tree.\n   o\
    \  When PIM-based C-multicast routing is used, depending on the\n      SwitchToSptDesired\
    \ policy in the PIM instances in the customer\n      routers and VRFs and depending\
    \ on the relative locations of\n      sources and RPs, there are:\n      *  Possible\
    \ control plane state transitions triggered by the\n         reception of (S,G)\
    \ packets.  Such events would induce\n         processing on all PEs joined to\
    \ G.\n      *  Possible PIM Assert messages specific to (S,G).  This would\n \
    \        induce a message processing on each PE of the VPN for each PIM\n    \
    \     Assert message.\n   Given the above, the additional processing that may\
    \ happen for each\n   individual source sending to the group, beyond the maintenance\
    \ of\n   source and shared trees, does not change the order of magnitude\n   identified\
    \ above.\n"
- title: A.2.  Cost of PEs Leaving and Joining
  contents:
  - "A.2.  Cost of PEs Leaving and Joining\n   The quantification of message processing\
    \ in Appendix A.1.1 is done\n   based on a use case where each PE with receivers\
    \ has joined and left\n   once.  Drawing scalability-related conclusions for other\
    \ patterns of\n   changes of the set of receiver-connected PEs can be done by\n\
    \   considering the cost of each approach for \"a new PE joining\" and \"a\n \
    \  PE leaving\".\n   For the \"PIM LAN Procedure\" approach, in the case of a\
    \ single SSM or\n   SPT tree, the total amount of message processing across all\
    \ nodes\n   depends linearly on the number of PEs in the VPN when a PE joins such\n\
    \   a tree.\n   For the \"BGP-based\" approach:\n   o  In the case of a single\
    \ SSM tree, the total amount of message\n      processing across all nodes is\
    \ independent of the number of PEs,\n      for \"a new PE\" joining and \"a PE\
    \ leaving\"; it also depends on how\n      route reflectors are meshed, but not\
    \ on linear dependency.\n   o  In the case of an SPT tree for an ASM group, BGP\
    \ has additional\n      processing due to possible Source-Active auto-discovery\
    \ routes:\n      *  When BGP-based C-multicast routing is used with inter-site\n\
    \         shared trees, for the first PE joining (and the last PE\n         leaving)\
    \ a said SPT, the processing of the corresponding\n         Source-Active auto-discovery\
    \ routes results in a processing\n         cost linearly dependent on the number\
    \ of PEs in the VPN.  For\n         subsequent PEs joining (and non-last PE leaving),\
    \ there is no\n         processing due to advertisement or withdrawal of Source-Active\n\
    \         auto-discovery routes.\n      *  When BGP-based C-multicast routing\
    \ is used without inter-site\n         shared trees, the processing of Source-Active\
    \ auto-discovery\n         routes for an (S,G) happens independently of PEs joining\
    \ and\n         leaving the SPT for (S,G).\n   In the case of a new PE having\
    \ to join a shared tree for an ASM group\n   G, we see the following:\n   o  The\
    \ processing due to the PE joining the shared tree itself is the\n      same as\
    \ the processing required to set up an SSM tree, as\n      described before (note\
    \ that this does not happen when BGP-based\n      C-multicast routing is used\
    \ without inter-site shared trees).\n   o  For each source for which the PE joins\
    \ the SPT, the resulting\n      processing cost is the same as one SPT tree, as\
    \ described before.\n      *  The conditions under which a PE will join the SPT\
    \ for a said\n         (C-S,C-G) are the same between the BGP-based with inter-site\n\
    \         shared tree approach and the PIM-based approach, and depend\n      \
    \   solely on the SwitchToSptDesired policy in the PIM instances in\n        \
    \ the customer routers in the sites connected to the PE and/or in\n         the\
    \ VRF.\n      *  The conditions under which a PE will join the SPT for a said\n\
    \         (C-S,C-G) differ between the BGP-based without inter-site\n        \
    \ shared trees approach and the PIM-based approach.\n      *  The SPT for a said\
    \ (S,G) can be joined by the PE in the\n         following cases:\n         +\
    \  as soon as one router, or the VPN VRF on the PE, has\n            SwitchToSptDesired(S,G)\
    \ being true\n         +  when BGP-based routing is used and configured to not\
    \ use\n            inter-site shared trees\n      *  Said differently, the only\
    \ case where the PE will not join the\n         SPT for (S,G) is when all routers\
    \ in the sites of the VPN\n         connected to the PE, or the VPN VRF itself,\
    \ will never have\n         SwitchToSptDesired(S,G) being true, with the additional\n\
    \         condition that inter-site shared trees are used when BGP-based\n   \
    \      C-multicast routing is used.\n   Thus, when one PE joins a group G to which\
    \ n sources are sending\n   traffic, we note the following with regards to the\
    \ dependency of the\n   cost (in total amount of processing across all equipments)\
    \ to the\n   number of PEs:\n   o  In the general case (where any router in the\
    \ site of the VPN\n      connected to the PE, or the VRF itself, may have\n  \
    \    SwitchToSptDesired(S,G) being true):\n      *  For the \"PIM LAN Procedure\"\
    \ approach, the cost is linearly\n         dependent on the number of PEs in the\
    \ VPN and linearly\n         dependent on the number of sources.\n      *  For\
    \ the \"BGP-based\" approach, the cost is linearly dependent on\n         the\
    \ number of sources, and, in the sub-case of the BGP-based\n         approach\
    \ used with inter-site shared trees, is also dependent\n         on the number\
    \ of PEs in the VPN only if the PE is the first to\n         join the group or\
    \ the SPT for some source sending to the group.\n   o  Else, under the assumption\
    \ that routers in the sites of the VPN\n      connected to the PE, and the VPN\
    \ VRF itself, will never have the\n      policy function SwitchToSptDesired(S,G)\
    \ being possibly true, then:\n      *  In the case of the PIM-based approach,\
    \ the cost is linearly\n         dependent on the number of PEs in the VPN, and\
    \ there is no\n         dependency on the number of sources.\n      *  In the\
    \ case of the BGP-based approach with inter-site shared\n         trees, the cost\
    \ is linearly dependent on the number of RRs, and\n         there is no dependency\
    \ on the number of sources.\n      *  In the case of the BGP-based approach without\
    \ inter-site shared\n         trees, the cost is linearly dependent on the number\
    \ of RRs and\n         on the number of sources.\n   Hence, with the PIM-based\
    \ approach, the overall cost across all\n   equipments of any PE joining an ASM\
    \ group G is always dependent on\n   the number of PEs (same for a PE that leaves),\
    \ while the BGP-based\n   approach has a cost independent of the number of PEs.\
    \  An exception\n   is the first PE joining the ASM group for the BGP-based approach\
    \ used\n   without inter-site shared trees; in that case, there is a dependency\n\
    \   with the number of PEs.\n   On the dependency with the number of sources,\
    \ without making any\n   assumption on the SwitchToSptDesired policy on PIM routers\
    \ and VRFs\n   of a VPN, we see that a PE joining an ASM group may induce a\n\
    \   processing cost linearly dependent on the number of sources.  Apart\n   from\
    \ this general case, under the condition where the\n   SwitchToSptDesired is always\
    \ false on all PIM routers and VRFs of the\n   VPN, then with the PIM-based approach,\
    \ and with the BGP-based\n   approach used with inter-site shared trees, the cost\
    \ in amount of\n   messages processed will be independent of the number of sources\
    \ (it\n   has to be noted that this condition depends on customer policy).\n"
- title: Appendix B.  Switching to S-PMSI
  contents:
  - "Appendix B.  Switching to S-PMSI\n   (The following point was fixed in a draft\
    \ version of the document\n   that became [RFC6513] and is here for reference\
    \ only.)\n   In early versions of the document that became [RFC6513], two\n  \
    \ approaches were proposed for how a source PE can decide when to start\n   transmitting\
    \ customer multicast traffic on a S-PMSI:\n   1.  The source PE sends multicast\
    \ packets for the (C-S,C-G) on both\n       the I-PMSI P-multicast tree and the\
    \ S-PMSI P-multicast tree\n       simultaneously for a pre-configured period of\
    \ time, letting the\n       receiver PEs select the new tree for reception before\
    \ switching\n       to only the S-PMSI.\n   2.  The source PE waits for a pre-configured\
    \ period of time after\n       advertising the (C-S,C-G) entry bound to the S-PMSI\
    \ before fully\n       switching the traffic onto the S-PMSI-bound P-multicast\
    \ tree.\n   The first alternative had essentially two drawbacks:\n   o  (C-S,C-G)\
    \ traffic is sent twice for some period of time, which\n      would appear to\
    \ be at odds with the motivation for switching to an\n      S-PMSI in order to\
    \ optimize the bandwidth used by the multicast\n      tree for that stream.\n\
    \   o  It is unlikely that the switchover can occur without packet loss\n    \
    \  or duplication if the transit delays of the I-PMSI P-multicast\n      tree\
    \ and the S-PMSI P-multicast tree differ.\n   By contrast, the second alternative\
    \ has none of these drawbacks and\n   satisfies the requirement in Section 5.1.3\
    \ of [RFC4834], which states\n   that \"a multicast VPN solution SHOULD as much\
    \ as possible ensure that\n   client multicast traffic packets are neither lost\
    \ nor duplicated,\n   even when changes occur in the way a client multicast data\
    \ stream is\n   carried over the provider network\".  The second alternative also\n\
    \   happens to be the one used in existing deployments.\n   Consistent with this\
    \ analysis, only the second alternative is\n   discussed in [RFC6513].\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Thomas Morin (editor)\n   France Telecom - Orange\n  \
    \ 2 rue Pierre Marzin\n   Lannion  22307\n   France\n   EMail: thomas.morin@orange.com\n\
    \   Ben Niven-Jenkins (editor)\n   BT\n   208 Callisto House, Adastral Park\n\
    \   Ipswich, Suffolk  IP5 3RE\n   UK\n   EMail: ben@niven-jenkins.co.uk\n   Yuji\
    \ Kamite\n   NTT Communications Corporation\n   Granpark Tower\n   3-4-1 Shibaura,\
    \ Minato-ku\n   Tokyo  108-8118\n   Japan\n   EMail: y.kamite@ntt.com\n   Raymond\
    \ Zhang\n   Alcatel-Lucent\n   777 Middlefield Rd.\n   Mountain View, CA  94043\n\
    \   USA\n   EMail: raymond.zhang@alcatel-lucent.com\n   Nicolai Leymann\n   Deutsche\
    \ Telekom\n   Winterfeldtstrasse 21-27\n   10781 Berlin\n   Germany\n   EMail:\
    \ n.leymann@telekom.de\n   Nabil Bitar\n   Verizon\n   60 Sylvan Road\n   Waltham,\
    \ MA  02451\n   USA\n   EMail: nabil.n.bitar@verizon.com\n"
