- title: __initial_text__
  contents:
  - "               Negotiation of Generic Image Attributes in\n                 the\
    \ Session Description Protocol (SDP)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document proposes a new generic session setup attribute to\
    \ make\n   it possible to negotiate different image attributes such as image\n\
    \   size.  A possible use case is to make it possible for a low-end hand-\n  \
    \ held terminal to display video without the need to rescale the image,\n   something\
    \ that may consume large amounts of memory and processing\n   power.  The document\
    \ also helps to maintain an optimal bitrate for\n   video as only the image size\
    \ that is desired by the receiver is\n   transmitted.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6236.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Requirements . . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n   2.  Conventions Used in This Document  . . . . . . . . . .\
    \ . . . .  5\n   3.  Specification of the 'imageattr' SDP Attribute . . . . .\
    \ . . .  5\n     3.1.  Attribute Syntax . . . . . . . . . . . . . . . . . . .\
    \ . .  5\n       3.1.1.  Overall View of Syntax . . . . . . . . . . . . . . .\
    \ .  5\n     3.2.  Considerations . . . . . . . . . . . . . . . . . . . . . .\
    \ 11\n       3.2.1.  No imageattr in First Offer  . . . . . . . . . . . . . 11\n\
    \       3.2.2.  Different Payload Type Numbers in Offer and Answer . . 11\n  \
    \     3.2.3.  Asymmetry  . . . . . . . . . . . . . . . . . . . . . . 12\n    \
    \   3.2.4.  sendonly and recvonly  . . . . . . . . . . . . . . . . 12\n      \
    \ 3.2.5.  Sample Aspect Ratio  . . . . . . . . . . . . . . . . . 13\n       3.2.6.\
    \  SDPCapNeg Support  . . . . . . . . . . . . . . . . . . 13\n       3.2.7.  Interaction\
    \ with Codec Parameters  . . . . . . . . . . 14\n       3.2.8.  Change of Display\
    \ in Middle of Session . . . . . . . . 16\n       3.2.9.  Use with Layered Codecs\
    \  . . . . . . . . . . . . . . . 16\n       3.2.10. Addition of Parameters . .\
    \ . . . . . . . . . . . . . . 16\n   4.  Examples . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . 16\n     4.1.  A High-Level Example . . . . . . .\
    \ . . . . . . . . . . . . 16\n     4.2.  Detailed Examples  . . . . . . . . .\
    \ . . . . . . . . . . . 17\n       4.2.1.  Example 1  . . . . . . . . . . . .\
    \ . . . . . . . . . . 17\n       4.2.2.  Example 2  . . . . . . . . . . . . .\
    \ . . . . . . . . . 18\n       4.2.3.  Example 3  . . . . . . . . . . . . . .\
    \ . . . . . . . . 19\n       4.2.4.  Example 4  . . . . . . . . . . . . . . .\
    \ . . . . . . . 20\n   5.  IANA Considerations  . . . . . . . . . . . . . . .\
    \ . . . . . . 20\n   6.  Security Considerations  . . . . . . . . . . . . . .\
    \ . . . . . 21\n   7.  Acknowledgements . . . . . . . . . . . . . . . . . . .\
    \ . . . . 21\n   8.  References . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 22\n     8.1.  Normative References . . . . . . . . . . . . . . . . .\
    \ . . 22\n     8.2.  Informative References . . . . . . . . . . . . . . . . .\
    \ . 22\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document proposes a new SDP attribute to make it possible\
    \ to\n   negotiate different image attributes, such as image size.  The term\n\
    \   image size is defined here, as it may differ from the physical screen\n  \
    \ size of, for instance, a hand-held terminal.  As an example, it may\n   be beneficial\
    \ to display a video image on a part of the physical\n   screen and leave space\
    \ on the screen for other features such as menus\n   and other info.\n   Allowing\
    \ negotiation of the image size provides a number of benefits:\n   o  Less image\
    \ distortion: Rescaling of images introduces additional\n      distortion, something\
    \ that can be avoided (at least on the\n      receiver side) if the image size\
    \ can be negotiated.\n   o  Reduced receiver complexity: Image rescaling can be\
    \ quite\n      computation intensive.  For low-end devices, this can be a\n  \
    \    problem.\n   o  Optimal quality for the given bitrate: The sender does not\
    \ need to\n      encode an entire CIF (352x288) image if only an image size of\n\
    \      288x256 is displayed on the receiver screen.\n   o  Memory requirement:\
    \ The receiver device will know the size of the\n      image and can then allocate\
    \ memory accordingly.\n   o  Optimal aspect ratio: The indication of the supported\
    \ image sizes\n      and aspect ratio allows the receiver to select the most\n\
    \      appropriate combination based on its rescaling capabilities and\n     \
    \ the desired rendering.  For example, if a sender proposes three\n      resolutions\
    \ in its SDP offer (100x200, 200x100, and 100x100) with\n      sar=1.0 (1:1) etc.,\
    \ then the receiver can select the option that\n      fits the receiver screen\
    \ best.\n   In cases where rescaling is not implemented (for example, rescaling\n\
    \   is not mandatory to implement in H.264 [H.264]), the indication of\n   the\
    \ image attributes may still provide an optimal use of bandwidth\n   because the\
    \ attribute will give the encoder a better indication about\n   what image size\
    \ is preferred anyway and will thus help to avoid\n   wasting bandwidth by encoding\
    \ with an unnecessarily large resolution.\n   For implementers that are considering\
    \ rescaling issues, it is worth\n   noting that there are several benefits to\
    \ doing it on the sender\n   side:\n   o  Rescaling on the sender/encoder side\
    \ is likely to be easier to do\n      as the camera-related software/hardware\
    \ already contains the\n      necessary functionality for zooming/cropping/trimming/sharpening\n\
    \      the video signal.  Moreover, rescaling is generally done in RGB or\n  \
    \    YUV domains and should not depend on the codecs used.\n   o  The encoder\
    \ may be able to encode in a number of formats but may\n      not know which format\
    \ to choose as, without the image attribute,\n      it does not know the receiver's\
    \ performance or preference.\n   o  The quality drop due to digital domain rescaling\
    \ using\n      interpolation is likely to be lower if it is done before the video\n\
    \      encoding rather than after the decoding especially when low\n      bitrate\
    \ video coding is used.\n   o  If low-complexity rescaling operations such as\
    \ simple cropping\n      must be performed, the benefit with having this functionality\
    \ on\n      the sender side is that it is then possible to present a miniature\n\
    \      \"what you send\" image on the display to help the user to frame the\n\
    \      image correctly.\n   Several of the existing standards ([H.263], [H.264],\
    \ and [MPEG-4])\n   have support for different resolutions at different framerates.\
    \  The\n   purpose of this document is to provide for a generic mechanism, which\n\
    \   is targeted mainly at the negotiation of the image size.  However, to\n  \
    \ make it more general, the attribute is named 'imageattr'.\n   This document\
    \ is limited to point-to-point unicast communication\n   scenarios.  The attribute\
    \ may be used in centralized conferencing\n   scenarios as well but due to the\
    \ abundance of configuration options,\n   it may then be difficult to come up\
    \ with a configuration that fits\n   all parties.\n"
- title: 1.1.  Requirements
  contents:
  - "1.1.  Requirements\n   The design of the image attribute is based on the following\n\
    \   requirements, which are listed only for informational purposes:\n   REQ-1:\
    \  Support the indication of one or more set(s) of image\n      attributes that\
    \ the SDP endpoint wishes to receive or send.  Each\n      image attribute set\
    \ must include a specific image size.\n   REQ-2:  Support setup/negotiation of\
    \ image attributes, meaning that\n      each side in the Offer/Answer should be\
    \ able to negotiate the\n      image attributes it prefers to send and receive.\n\
    \   REQ-3:  Interoperate with codec-specific parameters such as sprop-\n     \
    \ parameter-sets in [H.264] or config in [MPEG-4].\n   REQ-4:  Make the attribute\
    \ generic with as few codec specific\n      details/tricks as possible in order\
    \ to be codec agnostic.\n   Besides the above mentioned requirements, the requirement\
    \ below may\n   be applicable.\n   OPT-1:  The image attribute should support\
    \ the description of image-\n      related attributes for various types of media,\
    \ including video,\n      pictures, images, etc.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Specification of the 'imageattr' SDP Attribute
  contents:
  - "3.  Specification of the 'imageattr' SDP Attribute\n   This section defines the\
    \ SDP image attribute 'imageattr', which can\n   be used in an SDP Offer/Answer\
    \ exchange to indicate various image\n   attribute parameters.  In this document,\
    \ we define the following\n   image attribute parameters: image resolution, sample\
    \ aspect ratio\n   (sar), allowed range in picture aspect ratio (par) and the\
    \ preference\n   of a given parameter set over another (q).  The attribute is\n\
    \   extensible and guidelines for defining additional parameters are\n   provided\
    \ in Section 3.2.10.\n"
- title: 3.1.  Attribute Syntax
  contents:
  - "3.1.  Attribute Syntax\n   In this section, the syntax of the 'imageattr' attribute\
    \ is\n   described.  The 'imageattr' attribute is a media-level attribute.\n \
    \  The section is split up in two parts: the first gives an overall view\n   of\
    \ the syntax, and the second describes how the syntax is used.\n"
- title: 3.1.1.  Overall View of Syntax
  contents:
  - "3.1.1.  Overall View of Syntax\n   The syntax for the image attribute is in ABNF\
    \ [RFC5234]:\n       image-attr = \"imageattr:\" PT 1*2( 1*WSP ( \"send\" / \"\
    recv\" )\n                                         1*WSP attr-list )\n       PT\
    \ = 1*DIGIT / \"*\"\n       attr-list = ( set *(1*WSP set) ) / \"*\"\n       \
    \  ;  WSP and DIGIT defined in [RFC5234]\n       set= \"[\" \"x=\" xyrange \"\
    ,\" \"y=\" xyrange *( \",\" key-value ) \"]\"\n                  ; x is the horizontal\
    \ image size range (pixel count)\n                  ; y is the vertical image\
    \ size range (pixel count)\n       key-value = ( \"sar=\" srange )\n         \
    \        / ( \"par=\" prange )\n                 / ( \"q=\" qvalue )\n       \
    \           ; Key-value MAY be extended with other keyword\n                 \
    \ ;  parameters.\n                  ; At most, one instance each of sar, par,\
    \ or q\n                  ;  is allowed in a set.\n                  ;\n     \
    \             ; sar (sample aspect ratio) is the sample aspect ratio\n       \
    \           ;  associated with the set (optional, MAY be ignored)\n          \
    \        ; par (picture aspect ratio) is the allowed\n                  ;  ratio\
    \ between the display's x and y physical\n                  ;  size (optional)\n\
    \                  ; q (optional, range [0.0..1.0], default value 0.5)\n     \
    \             ;  is the preference for the given set,\n                  ;  a\
    \ higher value means a higher preference\n       onetonine = \"1\" / \"2\" / \"\
    3\" / \"4\" / \"5\" / \"6\" / \"7\" / \"8\" / \"9\"\n                  ; Digit\
    \ between 1 and 9\n       xyvalue = onetonine *5DIGIT\n                  ; Digit\
    \ between 1 and 9 that is\n                  ; followed by 0 to 5 other digits\n\
    \       step = xyvalue\n       xyrange = ( \"[\" xyvalue \":\" [ step \":\" ]\
    \ xyvalue \"]\" )\n                  ; Range between a lower and an upper value\n\
    \                  ; with an optional step, default step = 1\n               \
    \   ; The rightmost occurrence of xyvalue MUST have a\n                  ; higher\
    \ value than the leftmost occurrence.\n               / ( \"[\" xyvalue 1*( \"\
    ,\" xyvalue ) \"]\" )\n                  ; Discrete values separated by ','\n\
    \               / ( xyvalue )\n                  ; A single value\n       spvalue\
    \ = ( \"0\" \".\" onetonine *3DIGIT )\n                  ; Values between 0.1000\
    \ and 0.9999\n               / ( onetonine \".\" 1*4DIGIT )\n                \
    \  ; Values between 1.0000 and 9.9999\n       srange =  ( \"[\" spvalue 1*( \"\
    ,\" spvalue ) \"]\" )\n                  ; Discrete values separated by ','.\n\
    \                  ; Each occurrence of spvalue MUST be\n                  ; greater\
    \ than the previous occurrence.\n               / ( \"[\" spvalue \"-\" spvalue\
    \ \"]\" )\n                  ; Range between a lower and an upper level (inclusive)\n\
    \                  ; The second occurrence of spvalue MUST have a higher\n   \
    \               ; value than the first\n               / ( spvalue )\n       \
    \           ; A single value\n       prange =  ( \"[\" spvalue \"-\" spvalue \"\
    ]\" )\n                  ; Range between a lower and an upper level (inclusive)\n\
    \                  ; The second occurrence of spvalue MUST have a higher\n   \
    \               ; value than the first\n       qvalue  = ( \"0\" \".\" 1*2DIGIT\
    \ )\n               / ( \"1\" \".\" 1*2(\"0\") )\n                  ; Values between\
    \ 0.00 and 1.00\n   o  The attribute typically contains a \"send\" and a \"recv\"\
    \ keyword.\n      These specify the preferences for the media once the session\
    \ is\n      set up, in the send and receive direction respectively from the\n\
    \      point of view of the sender of the session description.  One of\n     \
    \ the keywords (\"send\" or \"recv\") MAY be omitted; see Section 3.2.4\n    \
    \  and Section 3.2.2 for a description of cases when this may be\n      appropriate.\n\
    \   o  The \"send\" keyword and corresponding attribute list (attr-list)\n   \
    \   MUST NOT occur more than once per image attribute.\n   o  The \"recv\" keyword\
    \ and corresponding attribute list (attr-list)\n      MUST NOT occur more than\
    \ once per image attribute.\n   o  PT is the payload type number; it MAY be set\
    \ to \"*\" (wild card) to\n      indicate that the attribute applies to all payload\
    \ types in the\n      media description.\n   o  For sendrecv streams, both of\
    \ the send and recv directions SHOULD\n      be present in the SDP.\n   o  For\
    \ inactive streams it is RECOMMENDED that both of the send and\n      recv directions\
    \ are present in the SDP.\n"
- title: 3.1.1.1.  Parameter Rules
  contents:
  - "3.1.1.1.  Parameter Rules\n   The following rules apply for the parameters.\n\
    \   Payload type number (PT):  The image attribute is bound to a specific\n  \
    \    codec by means of the payload type number.  A wild card (*) can be\n    \
    \  specified for the payload type number to indicate that it applies\n      to\
    \ all payload types in the media description.  Several image\n      attributes\
    \ can be defined, for instance for different video codec\n      alternatives.\
    \  This however requires that the payload type numbers\n      differ.  Note that\
    \ the attribute is associated to the codec(s),\n      for instance an SDP offer\
    \ may specify payload type number 101\n      while the answer may specify 102,\
    \ this may make it troublesome to\n      specify a payload type number with the\
    \ 'imageattr' attribute.  See\n      Section 3.2.2 for a discussion and recommendation\
    \ how this is\n      solved.\n   Preference (q):  The preference for each set\
    \ is 0.5 by default;\n      setting the optional q parameter to another value\
    \ makes it\n      possible to set different preferences for the sets.  A higher\n\
    \      value gives a higher preference for the given set.\n   sar:  The sar (storage\
    \ aspect ratio) parameter specifies the sample\n      aspect ratio associated\
    \ to the given range of x and y values.  The\n      sar parameter is defined as\
    \ dx/dy where dx and dy are the physical\n      size of the pixels.  Square pixels\
    \ gives a sar=1.0.  The parameter\n      sar MAY be expressed as a range or as\
    \ a single value.\n      If this parameter is not present, a default sar value\
    \ of 1.0 is\n      assumed.\n      The interpretation of sar differs between the\
    \ send and the receive\n      directions.\n      *  In the send direction, sar\
    \ defines a specific sample aspect\n         ratio associated to a given x and\
    \ y image size (range).\n      *  In the recv direction, sar expresses that the\
    \ receiver of the\n         given medium prefers to receive a given x and y resolution\
    \ with\n         a given sample aspect ratio.\n      See Section 3.2.5 for a more\
    \ detailed discussion.\n      The sar parameter will likely not solve all the\
    \ issues that are\n      related to different sample aspect ratios, but it can\
    \ help to\n      solve them and reduce aspect ratio distortion.\n      The response\
    \ MUST NOT include a sar parameter if there is no\n      acceptable value given.\
    \  The reason for this is that if the\n      response includes a sar parameter\
    \ it is interpreted as \"sar\n      parameter accepted\", while removal of the\
    \ sar parameter is treated\n      as \"sar parameter not accepted\".  For this\
    \ reason, it is safer to\n      remove an unacceptable sar parameter altogether.\n\
    \   par:  The par (width/height = x/y ratio) parameter indicates a range\n   \
    \   of allowed ratios between x and y physical size (picture aspect\n      ratio).\
    \  This is used to limit the number of x and y image size\n      combinations;\
    \ par is given as\n       par=[ratio_min-ratio_max]\n   where ratio_min and ratio_max\
    \ are the min and max allowed picture\n   aspect ratios.\n   If sar and the sample\
    \ aspect ratio that the receiver actually uses in\n   the display are the same\
    \ (or close), the relation between the x and y\n   pixel resolution and the physical\
    \ size of the image is\n   straightforward.  If however sar differs from the sample\
    \ aspect ratio\n   of the receiver display, this must be taken into consideration\
    \ when\n   the x and y pixel resolution alternatives are sorted out.  See\n  \
    \ Section 4.2.4 for an example of this.\n"
- title: 3.1.1.2.  Offer/Answer Rules
  contents:
  - "3.1.1.2.  Offer/Answer Rules\n   In accordance with [RFC3264], offer/answer exchange\
    \ of the image\n   attribute is as follows.\n   o  Offerer sending the offer:\n\
    \      *  The offerer must be able to support the image attributes that\n    \
    \     it offers, unless the offerer has expressed a wild card (*) in\n       \
    \  the attribute list.\n      *  It is recommended that a device that sees no\
    \ reason to use the\n         image attribute includes the attribute with wild\
    \ cards (*) in\n         the attribute lists anyway for the send and recv directions.\n\
    \         An example of this looks like:\n          a=imageattr:97 send * recv\
    \ *\n   This gives the answerer the possibility of expressing its\n   preferences.\
    \  The use of wild cards introduces a risk that the\n   message size can increase\
    \ in an uncontrolled way.  To reduce this\n   risk, these wild cards SHOULD only\
    \ be replaced by an as small set as\n   possible.\n   o  Answerer receiving the\
    \ offer and sending the answer:\n      *  The answerer may choose to keep the\
    \ image attribute but is not\n         required to do so.\n      *  The answerer\
    \ may, for its receive and send direction, include\n         one or more entries\
    \ that it can support from the set of entries\n         proposed in the offer.\n\
    \      *  The answerer may also, for its receive and send direction,\n       \
    \  replace the entries with a complete new set of entries\n         different\
    \ from the original proposed by the offerer.  The\n         implementor of this\
    \ feature should however be aware that this\n         may cause extra offer/answer\
    \ exchanges.\n      *  The answerer may also remove its send direction completely\
    \ if\n         it is deemed that it cannot support any of the proposed\n     \
    \    entries.\n      *  The answerer should not include an image attribute in\
    \ the\n         answer if it was not present in the offer.\n   o  Offerer receiving\
    \ the answer:\n      *  If the image attribute is not included in the SDP answer\
    \ the\n         offerer SHOULD continue to process the answer as if this\n   \
    \      mechanism had not been offered.\n      *  If the image attribute is included\
    \ in the SDP answer but none\n         of the entries are usable or acceptable,\
    \ the offerer MUST\n         resort to other methods to determine the appropriate\
    \ image\n         size.  In this case, the offerer must also issue a new offer/\n\
    \         answer without the image attribute to avoid misunderstandings\n    \
    \     between the offerer and answerer.  This will avoid the risk of\n       \
    \  infinite negotiations.\n"
- title: 3.2.  Considerations
  contents:
  - '3.2.  Considerations

    '
- title: 3.2.1.  No imageattr in First Offer
  contents:
  - "3.2.1.  No imageattr in First Offer\n   When the initial offer does not contain\
    \ the 'imageattr' attribute,\n   the rules in Section 3.1.1.2 require the attribute\
    \ to be absent in\n   the answer.  The reasons for this are:\n   o  The offerer\
    \ of the initial SDP is not likely to understand the\n      image attribute if\
    \ it did not include it in the offer, bearing in\n      mind that Section 3.1.1\
    \ recommends that the offerer provide the\n      attribute with wild carded parameters\
    \ if it has no preference.\n   o  Inclusion of the image attribute in the answer\
    \ may come in\n      conflict with the rules in Section 3.1.1.2, especially the\
    \ rules\n      that apply to \"offerer receiving the answer\".\n   For the above\
    \ reasons, it is RECOMMENDED that a device that sees no\n   reason to use the\
    \ image attribute includes the attribute with wild\n   cards (*) in the attribute\
    \ lists anyway for the send and recv\n   directions.\n"
- title: 3.2.2.  Different Payload Type Numbers in Offer and Answer
  contents:
  - "3.2.2.  Different Payload Type Numbers in Offer and Answer\n   In some cases,\
    \ the answer may specify a different media payload type\n   number than the offer.\
    \  As an example, the offer SDP may have the\n   m-line\n       m=video 49154\
    \ RTP/AVP 99\n   while the answer SDP may have the m-line\n       m=video 49154\
    \ RTP/AVP 100\n   If the image attribute in the offer specifies payload type number\
    \ 99,\n   this attribute will then have no meaning in the answerers receive\n\
    \   direction as the m-line specifies media payload type number 100.\n   There\
    \ are a few ways to solve this.\n   1.  Use a wild card \"*\" as the payload type\
    \ number in the image\n       attribute in the offer SDP.  The answer SDP also\
    \ uses the wild\n       card.  The drawback with this approach is that this attribute\n\
    \       then applies to all payload type numbers in the media\n       description.\n\
    \   2.  Specify a wild card \"*\" as the payload type number in the image\n  \
    \     attribute in the answer SDP.  The offer SDP may contain a defined\n    \
    \   payload type number in the image attribute but the answer SDP\n       replaces\
    \ this with a wild card.  The drawback here is similar to\n       what is listed\
    \ above.\n   3.  The image attribute is split in two parts in the SDP answer.\
    \  For\n       example the offer SDP (only the parts of interest in this\n   \
    \    discussion) looks like:\n           m=video 49154 RTP/AVP 99\n          \
    \ a=imageattr:99 send ... recv ...\n   The answer SDP looks like:\n          \
    \ m=video 49154 RTP/AVP 100\n           a=imageattr:99 send ...\n           a=imageattr:100\
    \ recv ...\n   This alternative does not pose any drawbacks.  Moreover, it allows\n\
    \   specification of different image attributes if more than one payload\n   type\
    \ is specified in the offer SDP.\n   Of the alternatives listed above, the last\
    \ one MUST be used as it is\n   the most safe.  The other alternatives MUST NOT\
    \ be used.\n"
- title: 3.2.3.  Asymmetry
  contents:
  - "3.2.3.  Asymmetry\n   While the image attribute supports asymmetry, there are\
    \ some\n   limitations.  One important limitation is that the codec being used\n\
    \   can only support up to a given maximum resolution for a given profile\n  \
    \ level.\n   As an example, H.264 [H.264] with profile level 1.2 does not support\n\
    \   higher resolution than 352x288 (CIF).  The offer/answer rules imply\n   that\
    \ the same profile level must be used in both directions.  This\n   means that\
    \ in an asymmetric scenario where Alice wants an image size\n   of 580x360 and\
    \ Bob wants 150x120, profile level 2.2 is needed in both\n   directions even though\
    \ profile level 1 would have been sufficient in\n   one direction.\n   Currently,\
    \ the only solution to this problem is to specify two\n   unidirectional media\
    \ descriptions.  Note however that the asymmetry\n   issue for the H.264 codec\
    \ is solved by means of the level-asymmetry-\n   allowed parameter in [RFC6184].\n"
- title: 3.2.4.  sendonly and recvonly
  contents:
  - "3.2.4.  sendonly and recvonly\n   If the directional attributes a=sendonly or\
    \ a=recvonly are given for\n   a medium, there is of course no need to specify\
    \ the image attribute\n   for both directions.  Therefore, one of the directions\
    \ in the\n   attribute may be omitted.  However, it may be good to do the image\n\
    \   attribute negotiation in both directions in case the session is\n   updated\
    \ for media in both directions at a later stage.\n"
- title: 3.2.5.  Sample Aspect Ratio
  contents:
  - "3.2.5.  Sample Aspect Ratio\n   The relationship between the sar parameter and\
    \ the x and y pixel\n   resolution deserves some extra discussion.  Consider the\
    \ offer from\n   Alice to Bob (we set the recv direction aside for the moment):\n\
    \       a=imageattr:97 send [x=720,y=576,sar=1.1]\n   If the receiver display\
    \ has square pixels, the 720x576 image would\n   need to be rescaled to for example\
    \ 792x576 or 720x524 to ensure a\n   correct image aspect ratio.  This in practice\
    \ means that rescaling\n   would need to be performed on the receiver side, something\
    \ that is\n   contrary to the spirit of this document.\n   To avoid this problem\
    \ Alice may specify a range of values for the sar\n   parameter like:\n      \
    \ a=imageattr:97 send [x=720,y=576,sar=[0.91,1.0,1.09,1.45]]\n   Meaning that\
    \ Alice can encode with any of the mentioned sample aspect\n   ratios, leaving\
    \ Bob to decide which one he prefers.\n"
- title: 3.2.6.  SDPCapNeg Support
  contents:
  - "3.2.6.  SDPCapNeg Support\n   The image attribute can be used within the SDP\
    \ Capability Negotiation\n   [RFC5939] framework and its use is then specified\
    \ using the \"a=acap\"\n   parameter.  An example is\n       a=acap:1 imageattr:97\
    \ send [x=720,y=576,sar=[0.91,1.0,1.09,1.45]]\n   For use with SDP Media Capability\
    \ Negotiation extension\n   [SDPMedCapNeg], where it is no longer possible to\
    \ specify payload\n   type numbers, it is possible to use the parameter substitution\
    \ rule,\n   an example of this is\n      ...\n      a=mcap:1 video H264/90000\n\
    \      a=acap:1 imageattr:%1% send [x=720,y=576,sar=[0.91,1.0,1.09,1.45]]\n  \
    \    ...\n   where %1% maps to media capability number 1.\n   It is also possible\
    \ to use the a=mscap attribute like in the example\n   below.\n       ...\n  \
    \     a=mcap:1 video H264/90000\n       a=mscap:1 imageattr send [x=720,y=576,sar=[0.91,1.0,1.09,1.45]]\n\
    \       ...\n"
- title: 3.2.7.  Interaction with Codec Parameters
  contents:
  - "3.2.7.  Interaction with Codec Parameters\n   As the SDP for most codecs already\
    \ specifies some kind of indication\n   of, for example, the image size, at session\
    \ setup, measures must be\n   taken to avoid conflicts between the image attribute\
    \ and this already\n   existing information.\n   The following subsections describe\
    \ the most well known codecs and how\n   they define image-size related information.\
    \  Section 3.2.7.4 outlines\n   a few possible solutions, but this document does\
    \ not make a\n   recommendation for any of them.\n"
- title: 3.2.7.1.  H.263
  contents:
  - "3.2.7.1.  H.263\n   The payload format for H.263 [H.263] is described in [RFC4629].\n\
    \   H.263 defines (on the fmtp line) a list of image sizes and their\n   maximum\
    \ frame rates (profiles) that the offerer can receive.  The\n   answerer is not\
    \ allowed to modify this list and must reject a payload\n   type that contains\
    \ an unsupported profile.  The CUSTOM profile may be\n   used for image size negotiation\
    \ but support for asymmetry requires\n   the specification of two unidirectional\
    \ media descriptions using the\n   sendonly/recvonly attributes.\n"
- title: 3.2.7.2.  H.264
  contents:
  - "3.2.7.2.  H.264\n   The payload format for H.264 [H.264] is described in [RFC6184].\n\
    \   H.264 defines information related to image size in the fmtp line by\n   means\
    \ of sprop-parameter-sets.  According to the specification,\n   several sprop-parameter-sets\
    \ may be defined for one payload type.\n   The sprop-parameter-sets describe the\
    \ image size (+ more) that the\n   offerer sends in the stream and need not be\
    \ complete.  This means\n   that sprop-parameter-sets does not represent any negotiation\
    \ and the\n   answer is not allowed to change the sprop-parameter-sets.\n   This\
    \ configuration may be changed later inband if for instance image\n   sizes need\
    \ to be changed or added.\n"
- title: 3.2.7.3.  MPEG-4
  contents:
  - "3.2.7.3.  MPEG-4\n   The payload format for MPEG-4 [MPEG-4] is described in [RFC3016].\n\
    \   MPEG-4 defines a config parameter on the fmtp line, which is a\n   hexadecimal\
    \ representation of the MPEG-4 visual configuration\n   information.  This configuration\
    \ does not represent any negotiation\n   and the answer is not allowed to change\
    \ the parameter.\n   It is not possible to change the configuration using inband\n\
    \   signaling.\n"
- title: 3.2.7.4.  Possible Solutions
  contents:
  - "3.2.7.4.  Possible Solutions\n   The subsections above clearly indicate that\
    \ this kind of information\n   must be aligned well with the image attribute to\
    \ avoid conflicts.\n   There are a number of possible solutions, listed below\
    \ without any\n   preference:\n   o  Ignore payload format parameters: This may\
    \ not work well in the\n      presence of bad channel conditions especially in\
    \ the beginning of\n      a session.  Moreover, this is not a good option for\
    \ MPEG-4.\n   o  Second session-wide offer/answer round: In the second offer/\n\
    \      answer, the parameters specific to codec payload format are\n      defined\
    \ based on the outcome of the 'imageattr' negotiation.  The\n      drawback with\
    \ this is that setup of the entire session (including\n      audio) may be delayed\
    \ considerably, especially as the 'imageattr'\n      negotiation can already itself\
    \ cost up to two offer/answer rounds.\n      Also, the conflict between the 'imageattr'\
    \ negotiation and the\n      parameters specific to payload format is still present\
    \ after the\n      first offer/answer round and a fuzzy/buggy implementation may\n\
    \      start media before the second offer/answer is completed with\n      unwanted\
    \ results.\n   o  Second session-wide offer/answer round only for video: This\
    \ is\n      similar to the alternative above with the exception that setup\n \
    \     time for audio is not increased; moreover, the port number for\n      video\
    \ is set to 0 during the first offer answer round to avoid the\n      flow of\
    \ media.\n      This has the effect that video will blend in some time after the\n\
    \      audio is started (up to 2 seconds delay).  This alternative is\n      likely\
    \ the most clean-cut and failsafe.  The drawback is, as the\n      port number\
    \ in the first offer is always zero, the media startup\n      will always be delayed\
    \ even though it would in fact have been\n      possible to start media after\
    \ the first offer/answer round.\n      Note that according to [RFC3264], a port\
    \ number of zero means that\n      the whole media line is rejected, meaning that\
    \ a new offer for the\n      same port number should be treated as a completely\
    \ new stream and\n      not as an update.  The safest way to solve this problem\
    \ is to use\n      preconditions; this is however outside the scope of this document.\n"
- title: 3.2.8.  Change of Display in Middle of Session
  contents:
  - "3.2.8.  Change of Display in Middle of Session\n   A very likely scenario is\
    \ that a user switches to another phone\n   during a video telephony call or plugs\
    \ a cellphone into an external\n   monitor.  In both cases, it is very likely\
    \ that a renegotiation is\n   initiated using the SIP-REFER [RFC3515] or SIP-UPDATE\
    \ [RFC3311]\n   methods.  It is RECOMMENDED to negotiate the image size during\
    \ this\n   renegotiation.\n"
- title: 3.2.9.  Use with Layered Codecs
  contents:
  - "3.2.9.  Use with Layered Codecs\n   As the image attribute is a media-level attribute,\
    \ its use with\n   layered codecs causes some concern.  If the layers are transported\
    \ in\n   different RTP streams, the layers are specified on different media\n\
    \   descriptions, and the relation is specified using the grouping\n   framework\
    \ [RFC5888] and the depend attribute [RFC5583].  As it is not\n   possible to\
    \ specify only one image attribute for several media\n   descriptions the solution\
    \ is either to specify the same image\n   attribute for each media description,\
    \ or to only specify the image\n   attribute for the base layer.\n"
- title: 3.2.10.  Addition of Parameters
  contents:
  - "3.2.10.  Addition of Parameters\n   The image attribute allows for the addition\
    \ of parameters in the\n   future.  To make backwards adaptation possible, an\
    \ entity that\n   processes the attribute MUST ignore any unknown parameters in\
    \ the\n   offer and MUST NOT include them in the answer it generates.  Addition\n\
    \   of future parameters that are not understood by the receiving\n   endpoint\
    \ may lead to ambiguities if mutual dependencies between\n   parameters exist;\
    \ therefore, addition of parameters must be done with\n   great care.\n"
- title: 4.  Examples
  contents:
  - "4.  Examples\n   This section gives some more information on how to use the attribute\n\
    \   by means of a high-level example and a few detailed examples.\n"
- title: 4.1.  A High-Level Example
  contents:
  - "4.1.  A High-Level Example\n   Assume that Alice wishes to set up a session with\
    \ Bob and that Alice\n   takes the first initiative.  The syntactical white-space\
    \ delimiters\n   (1*WSP) and double-quotes are removed to make reading easier.\n\
    \   In the offer, Alice provides information for both the send and\n   receive\
    \ (recv) directions.  For the send direction, Alice provides a\n   list that the\
    \ answerer can select from.  For the receive direction,\n   Alice may either specify\
    \ a desired image size range right away or a *\n   to instruct Bob to reply with\
    \ a list of image sizes that Bob can\n   support for sending.  Using the overall\
    \ high level syntax the image\n   attribute may then look like\n       a=imageattr:PT\
    \ send attr-list recv attr-list\n   or\n       a=imageattr:PT send attr-list recv\
    \ *\n   In the first alternative, the recv direction may be a full list of\n \
    \  desired image size formats.  It may however (and most likely) just be\n   a\
    \ list with one alternative for the preferred x and y resolution.\n   If Bob supports\
    \ an x and y resolution in at least one of the X and Y\n   ranges given in the\
    \ send attr-list and in the recv attr-list of the\n   offer, the answer from Bob\
    \ will look like:\n       a=imageattr:PT send attr-list recv attr-list\n   and\
    \ the offer/answer negotiation is done.  Note that the attr-list\n   will likely\
    \ be pruned in the answer.  While it may contain many\n   different alternatives\
    \ in the offer, it may in the end contain just\n   one or two alternatives.\n\
    \   If Bob does not support any x and y resolution in one of the provided\n  \
    \ send or recv ranges given in the send attr-list or in the recv attr-\n   list,\
    \ the corresponding part is removed completely.  For instance, if\n   Bob doesn't\
    \ support any of the offered alternatives in the recv attr-\n   list in the offer,\
    \ the answer from Bob would look like:\n       a=imageattr:PT recv attr-list\n"
- title: 4.2.  Detailed Examples
  contents:
  - "4.2.  Detailed Examples\n   This section gives a few detailed examples.  It is\
    \ assumed where\n   needed that Alice initiates a session with Bob.\n"
- title: 4.2.1.  Example 1
  contents:
  - "4.2.1.  Example 1\n   Two image resolution alternatives are offered with 800x640\
    \ with\n   sar=1.1 having the highest preference.\n   It is also indicated that\
    \ Alice wishes to display video with a\n   resolution of 330x250 on her display.\n\
    \    a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] \\\n      \
    \             recv [x=330,y=250]\n   In case Bob accepts the \"recv [x=330,y=250]\"\
    , the answer may look\n   like\n    a=imageattr:97 recv [x=800,y=640,sar=1.1]\
    \ \\\n                   send [x=330,y=250]\n   indicating that the receiver (Bob)\
    \ wishes the encoder (on Alice's\n   side) to compensate for a sample aspect ratio\
    \ of 1.1 (11:10) and\n   desires an image size on its screen of 800x640.\n   There\
    \ is however a possibility that \"recv [x=330,y=250]\" is not\n   supported. \
    \ If the case, Bob may completely remove this part or\n   replace it with a list\
    \ of supported image sizes.\n    a=imageattr:97 recv [x=800,y=640,sar=1.1] \\\n\
    \                   send [x=[320:16:640],y=[240:16:480],par=[1.2-1.3]]\n   Alice\
    \ can then select a valid image size that is closest to the one\n   that was originally\
    \ desired (336x256) and performs a second offer/\n   answer.\n    a=imageattr:97\
    \ send [x=800,y=640,sar=1.1] \\\n                   recv [x=336,y=256]\n   Bob\
    \ replies with:\n    a=imageattr:97 recv [x=800,y=640,sar=1.1] \\\n          \
    \         send [x=336,y=256]\n"
- title: 4.2.2.  Example 2
  contents:
  - "4.2.2.  Example 2\n   Two image resolution sets are offered with the first having\
    \ a higher\n   preference (q=0.6).\n    a=imageattr:97 \\\n      send [x=[480:16:800],y=[320:16:640],par=[1.2-1.3],q=0.6]\
    \ \\\n           [x=[176:8:208],y=[144:8:176],par=[1.2-1.3]] \\\n      recv *\n\
    \   The x-axis resolution can take the values 480 to 800 in 16 pixels\n   steps\
    \ and 176 to 208 in 8 pixels steps.  The par parameter limits the\n   set of possible\
    \ x and y screen resolution combinations such that\n   800x640 (ratio=1.25) is\
    \ a valid combination while 720x608\n   (ratio=1.18) or 800x608 (ratio=1.31) are\
    \ invalid combinations.\n   For the recv direction (Bob->Alice), Bob is requested\
    \ to provide a\n   list of supported image sizes.\n"
- title: 4.2.3.  Example 3
  contents:
  - "4.2.3.  Example 3\n   In this example, more of the SDP offer is shown.  A complicating\n\
    \   factor is that the answerer changes the media payload type number in\n   the\
    \ offer/answer exchange.\n    m=video 49154 RTP/AVP 99\n    a=rtpmap:99 H264/90000\n\
    \    a=fmtp:99 packetization-mode=0;profile-level-id=42e011; \\\n      sprop-parameter-sets=Z0LgC5ZUCg/I,aM4BrFSAa\n\
    \    a=imageattr:99 \\\n      send [x=176,y=144] [x=224,y=176] [x=272,y=224] [x=320,y=240]\
    \ \\\n      recv [x=176,y=144] [x=224,y=176] [x=272,y=224,q=0.6] [x=320,y=240]\n\
    \   In the send direction, sprop-parameter-sets is defined for a\n   resolution\
    \ of 320x240, which is the largest image size offered in the\n   send direction.\
    \  This means that if 320x240 is selected, no\n   additional offer/answer is necessary.\
    \  In the receive direction, four\n   alternative image sizes are offered with\
    \ 272x224 being the preferred\n   choice.\n   The answer may look like:\n    m=video\
    \ 49154 RTP/AVP 100\n    a=rtpmap:100 H264/90000\n    a=fmtp:100 packetization-mode=0;profile-level-id=42e011;\
    \ \\\n      sprop-parameter-sets=Z0LgC5ZUCg/I,aM4BrFSAa\n    a=imageattr:99 send\
    \ [x=320,y=240]\n    a=imageattr:100 recv [x=320,y=240]\n   indicating (in this\
    \ example) that the image size is 320x240 in both\n   directions.  Although the\
    \ offerer preferred 272x224 for the receive\n   direction, the answerer might\
    \ not be able to offer 272x224 or not\n   allow encoding and decoding of video\
    \ of different image sizes\n   simultaneously.  The answerer sets new sprop-parameter-sets,\n\
    \   constructed for both send and receive directions at the restricted\n   conditions\
    \ and image size of 320x240.\n   Note also that, because the payload type number\
    \ is changed by the\n   answerer, the image attribute is also split in two parts\
    \ according to\n   the recommendation in Section 3.2.2.\n"
- title: 4.2.4.  Example 4
  contents:
  - "4.2.4.  Example 4\n   This example illustrates in more detail how compensation\
    \ for\n   different sample aspect ratios can be negotiated with the image\n  \
    \ attribute.\n   We set up a session between Alice and Bob; Alice is the offerer\
    \ of\n   the session.  The offer (from Alice) contains the image attribute\n \
    \  below:\n     a=imageattr:97 \\\n       send [x=400:16:800],y=[320:16:640],sar=[1.0-1.3],par=[1.2-1.3]]\
    \ \\\n       recv [x=800,y=600,sar=1.1]\n   First we consider the recv direction:\
    \ The offerer (Alice) explicitly\n   states that she wishes to receive the screen\
    \ resolution 800x600.\n   However, she also indicates that the screen on her display\
    \ does not\n   use square pixels; the sar value=1.1 means that Bob must (preferably)\n\
    \   compensate for this.\n   So, if Bob's video camera produces square pixels,\
    \ and if Bob wishes\n   to satisfy Alice's sar requirement, the image processing\
    \ algorithm\n   must rescale a 880x600 pixel image (880=800*1.1) to 800x600 pixels\n\
    \   (could be done other ways).\n   ... and now the send direction: Alice indicates\
    \ that she can (in the\n   image processing algorithms) rescale the image for\
    \ sample aspect\n   ratios in the range 1.0 to 1.3.  She can also provide a number\
    \ of\n   different image sizes (in pixels) ranging from 400x320 to 800x640.\n\
    \   Bob inspects the offered sar and image sizes and responds with the\n   modified\
    \ image attribute.\n    a=imageattr:97 \\\n      recv [x=464,y=384,sar=1.15] \\\
    \n      send [x=800,y=600,sar=1.1]\n   Alice will (in order to satisfy Bob's request)\
    \ need to rescale the\n   image from her video camera from 534x384 (534=464*1.15)\
    \ to 464x384.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   Following the guidelines in [RFC4566], the IANA is\
    \ requested to\n   register one new SDP attribute:\n   Attribute name:     imageattr\n\
    \   Long form name:     Image attribute\n   Type of attribute:  Media-level\n\
    \   Subject to charset: No\n   Purpose:            This attribute defines the\
    \ ability to negotiate\n                       various image attributes such as\
    \ image sizes.\n                       The attribute contains a number of parameters\n\
    \                       which can be modified in an offer/answer\n           \
    \            exchange.\n   Appropriate values: See Section 3.1.1 of RFC 6236\n\
    \   Contact name:       Authors of RFC 6236\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The image attribute and especially the parameters\
    \ that denote the\n   image size can take on values that may cause memory or CPU\
    \ exhaustion\n   problems.  This may happen either as a consequence of a mistake\
    \ by\n   the sender of the SDP or as a result of an attack issued by a\n   malicious\
    \ SDP sender.  This issue is similar to the case where the\n   a=fmtp line(s)\
    \ may take on extreme values for the same reasons\n   outlined above.\n   A receiver\
    \ of the SDP containing the image attribute MUST ensure that\n   the parameters\
    \ have values that are reasonable and that the device\n   can handle the implications\
    \ in terms of memory and CPU usage.\n   Failure to do a sanity check on the parameters\
    \ may result in memory\n   or CPU exhaustion.\n   In principle, for some SDPs\
    \ containing the image attribute and for\n   some deployments, it could be the\
    \ case that simply checking the\n   parameters is not sufficient to detect all\
    \ potential Denial-of-\n   Service (DoS) problems.  Implementers ought to consider\
    \ whether there\n   are any potential DoS attacks that would not be detected by\
    \ simply\n   checking parameters.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The authors would like to thank the people who have\
    \ contributed with\n   objections and suggestions to this document and provided\
    \ valuable\n   guidance in the amazing video-coding world.  Special thanks to\n\
    \   Clinton Priddle, Roni Even, Randell Jesup, and Dan Wing.  Thanks also\n  \
    \ to Robert Sparks and Paul Kyzivat for the help with the last fixes to\n   get\
    \ the attribute to work well with the offer/answer model.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]       Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                   Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC3264]       Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer\n\
    \                   Model with Session Description Protocol (SDP)\",\n       \
    \            RFC 3264, June 2002.\n   [RFC4566]       Handley, M., Jacobson, V.,\
    \ and C. Perkins, \"SDP:\n                   Session Description Protocol\", RFC\
    \ 4566, July 2006.\n   [RFC5234]       Crocker, D. and P. Overell, \"Augmented\
    \ BNF for Syntax\n                   Specifications: ABNF\", STD 68, RFC 5234,\n\
    \                   January 2008.\n   [RFC5583]       Schierl, T. and S. Wenger,\
    \ \"Signaling Media Decoding\n                   Dependency in the Session Description\
    \ Protocol\n                   (SDP)\", RFC 5583, July 2009.\n   [RFC5888]   \
    \    Camarillo, G. and H. Schulzrinne, \"The Session\n                   Description\
    \ Protocol (SDP) Grouping Framework\",\n                   RFC 5888, June 2010.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [H.263]         ITU-T, ITU-T Recommendation\
    \ H.263 (2005): \"Video\n                   coding for low bit rate communication\"\
    .\n   [H.264]         ITU-T, ITU-T Recommendation H.264: \"Advanced video\n  \
    \                 coding for generic audiovisual services\",\n               \
    \    <http://www.itu.int/rec/T-REC-H.264-200711-S/en>.\n   [MPEG-4]        ISO/IEC,\
    \ ISO/IEC 14496-2:2004: \"Information\n                   technology - Coding\
    \ of audio-visual objects - Part 2:\n                   Visual\".\n   [RFC3016]\
    \       Kikuchi, Y., Nomura, T., Fukunaga, S., Matsui, Y.,\n                 \
    \  and H. Kimata, \"RTP Payload Format for MPEG-4 Audio/\n                   Visual\
    \ Streams\", RFC 3016, November 2000.\n   [RFC3311]       Rosenberg, J., \"The\
    \ Session Initiation Protocol (SIP)\n                   UPDATE Method\", RFC 3311,\
    \ October 2002.\n   [RFC3515]       Sparks, R., \"The Session Initiation Protocol\
    \ (SIP)\n                   Refer Method\", RFC 3515, April 2003.\n   [RFC4629]\
    \       Ott, H., Bormann, C., Sullivan, G., Wenger, S., and\n                \
    \   R. Even, \"RTP Payload Format for ITU-T Rec\",\n                   RFC 4629,\
    \ January 2007.\n   [RFC5939]       Andreasen, F., \"Session Description Protocol\
    \ (SDP)\n                   Capability Negotiation\", RFC 5939, September 2010.\n\
    \   [RFC6184]       Wang, Y., Even, R., Kristensen, T., and R. Jesup,\n      \
    \             \"RTP Payload Format for H.264 Video\", RFC 6184,\n            \
    \       May 2011.\n   [SDPMedCapNeg]  Gilman, R., Even, R., and F. Andreasen,\
    \ \"SDP Media\n                   Mapabilities Negotiation\", Work in Progress,\n\
    \                   February 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ingemar Johansson\n   Ericsson AB\n   Laboratoriegrand\
    \ 11\n   SE-971 28 Luleae\n   SWEDEN\n   Phone: +46 73 0783289\n   EMail: ingemar.s.johansson@ericsson.com\n\
    \   Kyunghun Jung\n   Samsung Electronics Co., Ltd.\n   Dong Suwon P.O. Box 105\n\
    \   416, Maetan-3Dong, Yeongtong-gu\n   Suwon-city, Gyeonggi-do\n   Korea 442-600\n\
    \   Phone: +82 10 9909 4743\n   EMail: kyunghun.jung@samsung.com\n"
