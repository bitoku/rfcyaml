- title: __initial_text__
  contents:
  - "              Provisioning, Auto-Discovery, and Signaling\n              in Layer\
    \ 2 Virtual Private Networks (L2VPNs)\n"
- title: Abstract
  contents:
  - "Abstract\n   Provider Provisioned Layer 2 Virtual Private Networks (L2VPNs) may\n\
    \   have different \"provisioning models\", i.e., models for what\n   information\
    \ needs to be configured in what entities.  Once\n   configured, the provisioning\
    \ information is distributed by a\n   \"discovery process\".  When the discovery\
    \ process is complete, a\n   signaling protocol is automatically invoked to set\
    \ up the mesh of\n   pseudowires (PWs) that form the (virtual) backbone of the\
    \ L2VPN.\n   This document specifies a number of L2VPN provisioning models, and\n\
    \   further specifies the semantic structure of the endpoint identifiers\n   required\
    \ by each model.  It discusses the distribution of these\n   identifiers by the\
    \ discovery process, especially when discovery is\n   based on the Border Gateway\
    \ Protocol (BGP).  It then specifies how\n   the endpoint identifiers are carried\
    \ in the two signaling protocols\n   that are used to set up PWs, the Label Distribution\
    \ Protocol (LDP),\n   and the Layer 2 Tunneling Protocol version 3 (L2TPv3).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6074.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  4\n   2.  Signaling Protocol Framework . . . . . . . . . . . .\
    \ . . . . .  5\n     2.1.  Endpoint Identification  . . . . . . . . . . . . .\
    \ . . . .  5\n     2.2.  Creating a Single Bidirectional Pseudowire . . . . .\
    \ . . .  7\n     2.3.  Attachment Identifiers and Forwarders  . . . . . . . .\
    \ . .  7\n   3.  Applications . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  9\n     3.1.  Individual Point-to-Point Pseudowires  . . . . . . . . . .\
    \  9\n       3.1.1.  Provisioning Models  . . . . . . . . . . . . . . . . .  9\n\
    \         3.1.1.1.  Double-Sided Provisioning  . . . . . . . . . . . .  9\n  \
    \       3.1.1.2.  Single-Sided Provisioning with Discovery . . . . .  9\n    \
    \   3.1.2.  Signaling  . . . . . . . . . . . . . . . . . . . . . . 10\n     3.2.\
    \  Virtual Private LAN Service  . . . . . . . . . . . . . . . 11\n       3.2.1.\
    \  Provisioning . . . . . . . . . . . . . . . . . . . . . 11\n       3.2.2.  Auto-Discovery\
    \ . . . . . . . . . . . . . . . . . . . . 12\n         3.2.2.1.  BGP-Based Auto-Discovery\
    \ . . . . . . . . . . . . . 12\n       3.2.3.  Signaling  . . . . . . . . . .\
    \ . . . . . . . . . . . . 14\n       3.2.4.  Pseudowires as VPLS Attachment Circuits\
    \  . . . . . . . 15\n     3.3.  Colored Pools: Full Mesh of Point-to-Point Pseudowires\
    \ . . 15\n       3.3.1.  Provisioning . . . . . . . . . . . . . . . . . . . .\
    \ . 15\n       3.3.2.  Auto-Discovery . . . . . . . . . . . . . . . . . . . .\
    \ 16\n         3.3.2.1.  BGP-Based Auto-Discovery . . . . . . . . . . . . . 16\n\
    \       3.3.3.  Signaling  . . . . . . . . . . . . . . . . . . . . . . 18\n  \
    \   3.4.  Colored Pools: Partial Mesh  . . . . . . . . . . . . . . . 19\n    \
    \ 3.5.  Distributed VPLS . . . . . . . . . . . . . . . . . . . . . 19\n      \
    \ 3.5.1.  Signaling  . . . . . . . . . . . . . . . . . . . . . . 21\n       3.5.2.\
    \  Provisioning and Discovery . . . . . . . . . . . . . . 23\n       3.5.3.  Non-Distributed\
    \ VPLS as a Sub-Case . . . . . . . . . . 23\n       3.5.4.  Splicing and the Data\
    \ Plane  . . . . . . . . . . . . . 24\n   4.  Inter-AS Operation . . . . . . .\
    \ . . . . . . . . . . . . . . . 24\n     4.1.  Multihop EBGP Redistribution of\
    \ L2VPN NLRIs  . . . . . . . 24\n     4.2.  EBGP Redistribution of L2VPN NLRIs\
    \ with Multi-Segment\n           Pseudowires  . . . . . . . . . . . . . . . .\
    \ . . . . . . . 25\n     4.3.  Inter-Provider Application of Distributed VPLS\n\
    \           Signaling  . . . . . . . . . . . . . . . . . . . . . . . . 26\n  \
    \   4.4.  RT and RD Assignment Considerations  . . . . . . . . . . . 27\n   5.\
    \  Security Considerations  . . . . . . . . . . . . . . . . . . . 28\n   6.  IANA\
    \ Considerations  . . . . . . . . . . . . . . . . . . . . . 28\n   7.  BGP-AD\
    \ and VPLS-BGP Interoperability . . . . . . . . . . . . . 29\n   8.  Acknowledgments\
    \  . . . . . . . . . . . . . . . . . . . . . . . 30\n   9.  References . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . 30\n     9.1.  Normative References\
    \ . . . . . . . . . . . . . . . . . . . 30\n     9.2.  Informative References\
    \ . . . . . . . . . . . . . . . . . . 31\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   [RFC4664] describes a number of different ways in which\
    \ sets of\n   pseudowires may be combined together into \"Provider Provisioned\
    \ Layer\n   2 VPNs\" (L2 PPVPNs, or L2VPNs), resulting in a number of different\n\
    \   kinds of L2VPN.  Different kinds of L2VPN may have different\n   \"provisioning\
    \ models\", i.e., different models for what information\n   needs to be configured\
    \ in what entities.  Once configured, the\n   provisioning information is distributed\
    \ by a \"discovery process\", and\n   once the information is discovered, the\
    \ signaling protocol is\n   automatically invoked to set up the required pseudowires.\
    \  The\n   semantics of the endpoint identifiers that the signaling protocol\n\
    \   uses for a particular type of L2VPN are determined by the\n   provisioning\
    \ model.  That is, different kinds of L2VPN, with\n   different provisioning models,\
    \ require different kinds of endpoint\n   identifiers.  This document specifies\
    \ a number of L2VPN provisioning\n   models and specifies the semantic structure\
    \ of the endpoint\n   identifiers required for each provisioning model.\n   Either\
    \ LDP (as specified in [RFC5036] and extended in [RFC4447]) or\n   L2TP version\
    \ 3 (as specified in [RFC3931] and extended in [RFC4667])\n   can be used as signaling\
    \ protocols to set up and maintain PWs\n   [RFC3985].  Any protocol that sets\
    \ up connections must provide a way\n   for each endpoint of the connection to\
    \ identify the other; each PW\n   signaling protocol thus provides a way to identify\
    \ the PW endpoints.\n   Since each signaling protocol needs to support all the\
    \ different\n   kinds of L2VPN and provisioning models, the signaling protocol\
    \ must\n   have a very general way of representing endpoint identifiers, and it\n\
    \   is necessary to specify rules for encoding each particular kind of\n   endpoint\
    \ identifier into the relevant fields of each signaling\n   protocol.  This document\
    \ specifies how to encode the endpoint\n   identifiers of each provisioning model\
    \ into the LDP and L2TPv3\n   signaling protocols.\n   We make free use of terminology\
    \ from [RFC3985], [RFC4026], [RFC4664],\n   and [RFC5659] -- in particular, the\
    \ terms \"Attachment Circuit\",\n   \"pseudowire\", \"PE\" (provider edge), \"\
    CE\" (customer edge), and \"multi-\n   segment pseudowire\".\n   Section 2 provides\
    \ an overview of the relevant aspects of [RFC4447]\n   and [RFC4667].\n   Section\
    \ 3 details various provisioning models and relates them to the\n   signaling\
    \ process and to the discovery process.  The way in which the\n   signaling mechanisms\
    \ can be integrated with BGP-based auto-discovery\n   is covered in some detail.\n\
    \   Section 4 explains how the procedures for discovery and signaling can\n  \
    \ be applied in a multi-AS environment and outlines several options for\n   the\
    \ establishment of multi-AS L2VPNs.\n   The key words \"MUST\", \"MUST NOT\",\
    \ \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119]\n"
- title: 2.  Signaling Protocol Framework
  contents:
  - '2.  Signaling Protocol Framework

    '
- title: 2.1.  Endpoint Identification
  contents:
  - "2.1.  Endpoint Identification\n   Per [RFC4664], a pseudowire can be thought\
    \ of as a relationship\n   between a pair of \"Forwarders\".  In simple instances\
    \ of Virtual\n   Private Wire Service (VPWS), a Forwarder binds a pseudowire to\
    \ a\n   single Attachment Circuit, such that frames received on the one are\n\
    \   sent on the other, and vice versa.  In Virtual Private LAN Service\n   (VPLS),\
    \ a Forwarder binds a set of pseudowires to a set of Attachment\n   Circuits;\
    \ when a frame is received from any member of that set, a MAC\n   (Media Access\
    \ Control) address table is consulted (and various 802.1d\n   procedures executed)\
    \ to determine the member or members of that set\n   on which the frame is to\
    \ be transmitted.  In more complex scenarios,\n   Forwarders may bind PWs to PWs,\
    \ thereby \"splicing\" two PWs together;\n   this is needed, e.g., to support\
    \ distributed VPLS and some inter-AS\n   scenarios.\n   In simple VPWS, where\
    \ a Forwarder binds exactly one PW to exactly one\n   Attachment Circuit, a Forwarder\
    \ can be identified by identifying its\n   Attachment Circuit.  In simple VPLS,\
    \ a Forwarder can be identified by\n   identifying its PE device and its VPN.\n\
    \   To set up a PW between a pair of Forwarders, the signaling protocol\n   must\
    \ allow the Forwarder at one endpoint to identify the Forwarder at\n   the other.\
    \  In [RFC4447], the term \"Attachment Identifier\", or \"AI\",\n   is used to\
    \ refer to a quantity whose purpose is to identify a\n   Forwarder.  In [RFC4667],\
    \ the term \"Forwarder Identifier\" is used for\n   the same purpose.  In the\
    \ context of this document, \"Attachment\n   Identifier\" and \"Forwarder Identifier\"\
    \ are used interchangeably.\n   [RFC4447] specifies two Forwarding Equivalence\
    \ Class (FEC) elements\n   that can be used when setting up pseudowires, the PWid\
    \ FEC element,\n   and the Generalized ID FEC element.  The PWid FEC element carries\n\
    \   only one Forwarder identifier; it can be thus be used only when both\n   forwarders\
    \ have the same identifier, and when that identifier can be\n   coded as a 32-bit\
    \ quantity.  The Generalized ID FEC element carries\n   two Forwarder identifiers,\
    \ one for each of the two Forwarders being\n   connected.  Each identifier is\
    \ known as an Attachment Identifier, and\n   a signaling message carries both\
    \ a \"Source Attachment Identifier\"\n   (SAI) and a \"Target Attachment Identifier\"\
    \ (TAI).\n   The Generalized ID FEC element also provides some additional\n  \
    \ structuring of the identifiers.  It is assumed that the SAI and TAI\n   will\
    \ sometimes have a common part, called the \"Attachment Group\n   Identifier\"\
    \ (AGI), such that the SAI and TAI can each be thought of\n   as the concatenation\
    \ of the AGI with an \"Attachment Individual\n   Identifier\" (AII).  So the pair\
    \ of identifiers is encoded into three\n   fields: AGI, Source AII (SAII), and\
    \ Target AII (TAII).  The SAI is\n   the concatenation of the AGI and the SAII,\
    \ while the TAI is the\n   concatenation of the AGI and the TAII.\n   Similarly,\
    \ [RFC4667] allows using one or two Forwarder Identifiers to\n   set up pseudowires.\
    \  If only the target Forwarder Identifier is used\n   in L2TP signaling messages,\
    \ both the source and target Forwarders are\n   assumed to have the same value.\
    \  If both the source and target\n   Forwarder Identifiers are carried in L2TP\
    \ signaling messages, each\n   Forwarder uses a locally significant identifier\
    \ value.\n   The Forwarder Identifier in [RFC4667] is an equivalent term to\n\
    \   Attachment Identifier in [RFC4447].  A Forwarder Identifier also\n   consists\
    \ of an Attachment Group Identifier and an Attachment\n   Individual Identifier.\
    \  Unlike the Generalized ID FEC element, the\n   AGI and AII are carried in distinct\
    \ L2TP Attribute-Value Pairs\n   (AVPs).  The AGI is encoded in the AGI AVP, and\
    \ the SAII and TAII are\n   encoded in the Local End ID AVP and the Remote End\
    \ ID AVP,\n   respectively.  The source Forwarder Identifier is the concatenation\n\
    \   of the AGI and SAII, while the target Forwarder Identifier is the\n   concatenation\
    \ of the AGI and TAII.\n   In applications that group sets of PWs into \"Layer\
    \ 2 Virtual Private\n   Networks\", the AGI can be thought of as a \"VPN Identifier\"\
    .\n   It should be noted that while different forwarders support different\n \
    \  applications, the type of application (e.g., VPLS vs. VPWS) cannot\n   necessarily\
    \ be inferred from the forwarders' identifiers.  A router\n   receiving a signaling\
    \ message with a particular TAI will have to be\n   able to determine which of\
    \ its local forwarders is identified by that\n   TAI, and to determine the application\
    \ provided by that forwarder.\n   But other nodes may not be able to infer the\
    \ application simply by\n   inspection of the signaling messages.\n   In this\
    \ document, some further structure of the AGI and AII is\n   proposed for certain\
    \ L2VPN applications.  We note that [RFC4447]\n   defines a TLV structure for\
    \ AGI and AII fields.  Thus, an operator\n   who chooses to use the AII structure\
    \ defined here could also make use\n   of different AGI or AII types if he also\
    \ wanted to use a different\n   structure for these identifiers for some other\
    \ application.  For\n   example, the long prefix type of [RFC5003] could be used\
    \ to enable\n   the communication of administrative information, perhaps combined\n\
    \   with information learned during auto-discovery.\n"
- title: 2.2.  Creating a Single Bidirectional Pseudowire
  contents:
  - "2.2.  Creating a Single Bidirectional Pseudowire\n   In any form of LDP-based\
    \ signaling, each PW endpoint must initiate\n   the creation of a unidirectional\
    \ LSP.  A PW is a pair of such LSPs.\n   In most of the L2VPN provisioning models,\
    \ the two endpoints of a\n   given PW can simultaneously initiate the signaling\
    \ for it.  They must\n   therefore have some way of determining when a given pair\
    \ of LSPs are\n   intended to be associated together as a single PW.\n   The way\
    \ in which this association is done is different for the\n   various different\
    \ L2VPN services and provisioning models.  The\n   details appear in later sections.\n\
    \   L2TP signaling inherently establishes a bidirectional session that\n   carries\
    \ a PW between two PW endpoints.  The two endpoints can also\n   simultaneously\
    \ initiate the signaling for a given PW.  It is possible\n   that two PWs can\
    \ be established for a pair of Forwarders.\n   In order to avoid setting up duplicated\
    \ pseudowires between two\n   Forwarders, each PE must be able to independently\
    \ detect such a\n   pseudowire tie.  The procedures of detecting a pseudowire\
    \ tie are\n   described in [RFC4667].\n"
- title: 2.3.  Attachment Identifiers and Forwarders
  contents:
  - "2.3.  Attachment Identifiers and Forwarders\n   Every Forwarder in a PE must\
    \ be associated with an Attachment\n   Identifier (AI), either through configuration\
    \ or through some\n   algorithm.  The Attachment Identifier must be unique in\
    \ the context\n   of the PE router in which the Forwarder resides.  The combination\n\
    \   <PE router, AI> must be globally unique.\n   As specified in [RFC4447], the\
    \ Attachment Identifier may consist of\n   an Attachment Group Identifier (AGI)\
    \ plus an Attachment Individual\n   Identifier (AII).  In the context of this\
    \ document, an AGI may be\n   thought of as a VPN-ID, or some attribute that is\
    \ shared by all the\n   Attachment Circuits that are allowed to be connected.\n\
    \   It is sometimes helpful to consider a set of attachment circuits at a\n  \
    \ single PE to belong to a common \"pool\".  For example, a set of\n   attachment\
    \ circuits that connect a single CE to a given PE may be\n   considered a pool.\
    \  The use of pools is described in detail in\n   Section 3.3.\n   The details\
    \ for how to construct the AGI and AII fields identifying\n   the pseudowire endpoints\
    \ in particular provisioning models are\n   discussed later in this document.\n\
    \   We can now consider an LSP for one direction of a pseudowire to be\n   identified\
    \ by:\n   o  <PE1, <AGI, AII1>, PE2, <AGI, AII2>>\n   and the LSP in the opposite\
    \ direction of the pseudowire will be\n   identified by:\n   o  <PE2, <AGI, AII2>,\
    \ PE1, <AGI, AII1>>\n   A pseudowire is a pair of such LSPs.  In the case of using\
    \ L2TP\n   signaling, these refer to the two directions of an L2TP session.\n\
    \   When a signaling message is sent from PE1 to PE2, and PE1 needs to\n   refer\
    \ to an Attachment Identifier that has been configured on one of\n   its own Attachment\
    \ Circuits (or pools), the Attachment Identifier is\n   called a \"Source Attachment\
    \ Identifier\".  If PE1 needs to refer to an\n   Attachment Identifier that has\
    \ been configured on one of PE2's\n   Attachment Circuits (or pools), the Attachment\
    \ Identifier is called a\n   \"Target Attachment Identifier\".  (So an SAI at\
    \ one endpoint is a TAI\n   at the remote endpoint, and vice versa.)\n   In the\
    \ signaling protocol, we define encodings for the following\n   three fields:\n\
    \   o  Attachment Group Identifier (AGI)\n   o  Source Attachment Individual Identifier\
    \ (SAII)\n   o  Target Attachment Individual Identifier (TAII)\n   If the AGI\
    \ is non-null, then the SAI consists of the AGI together\n   with the SAII, and\
    \ the TAI consists of the TAII together with the\n   AGI.  If the AGI is null,\
    \ then the SAII and TAII are the SAI and TAI,\n   respectively.\n   The intention\
    \ is that the PE that receives an LDP Label Mapping\n   message or an L2TP Incoming\
    \ Call Request (ICRQ) message containing a\n   TAI will be able to map that TAI\
    \ uniquely to one of its Attachment\n   Circuits (or pools).  The way in which\
    \ a PE maps a TAI to an\n   Attachment Circuit (or pool) should be a local matter\
    \ (including the\n   choice of whether to use some or all of the bytes in the\
    \ TAI for the\n   mapping).  So as far as the signaling procedures are concerned,\
    \ the\n   TAI is really just an arbitrary string of bytes, a \"cookie\".\n"
- title: 3.  Applications
  contents:
  - "3.  Applications\n   In this section, we specify the way in which the pseudowire\
    \ signaling\n   using the notion of source and target Forwarder is applied for\
    \ a\n   number of different applications.  For some of the applications, we\n\
    \   specify the way in which different provisioning models can be used.\n   However,\
    \ this is not meant to be an exhaustive list of the\n   applications, or an exhaustive\
    \ list of the provisioning models that\n   can be applied to each application.\n"
- title: 3.1.  Individual Point-to-Point Pseudowires
  contents:
  - "3.1.  Individual Point-to-Point Pseudowires\n   The signaling specified in this\
    \ document can be used to set up\n   individually provisioned point-to-point pseudowires.\
    \  In this\n   application, each Forwarder binds a single PW to a single Attachment\n\
    \   Circuit.  Each PE must be provisioned with the necessary set of\n   Attachment\
    \ Circuits, and then certain parameters must be provisioned\n   for each Attachment\
    \ Circuit.\n"
- title: 3.1.1.  Provisioning Models
  contents:
  - '3.1.1.  Provisioning Models

    '
- title: 3.1.1.1.  Double-Sided Provisioning
  contents:
  - "3.1.1.1.  Double-Sided Provisioning\n   In this model, the Attachment Circuit\
    \ must be provisioned with a\n   local name, a remote PE address, and a remote\
    \ name.  During\n   signaling, the local name is sent as the SAII, the remote\
    \ name as the\n   TAII, and the AGI is null.  If two Attachment Circuits are to\
    \ be\n   connected by a PW, the local name of each must be the remote name of\n\
    \   the other.\n   Note that if the local name and the remote name are the same,\
    \ the\n   PWid FEC element can be used instead of the Generalized ID FEC\n   element\
    \ in the LDP-based signaling.\n   With L2TP signaling, the local name is sent\
    \ in Local End ID AVP, and\n   the remote name in Remote End ID AVP.  The AGI\
    \ AVP is optional.  If\n   present, it contains a zero-length AGI value.  If the\
    \ local name and\n   the remote name are the same, Local End ID AVP can be omitted\
    \ from\n   L2TP signaling messages.\n"
- title: 3.1.1.2.  Single-Sided Provisioning with Discovery
  contents:
  - "3.1.1.2.  Single-Sided Provisioning with Discovery\n   In this model, each Attachment\
    \ Circuit must be provisioned with a\n   local name.  The local name consists\
    \ of a VPN-ID (signaled as the\n   AGI) and an Attachment Individual Identifier\
    \ that is unique relative\n   to the AGI.  If two Attachment Circuits are to be\
    \ connected by a PW,\n   only one of them needs to be provisioned with a remote\
    \ name (which of\n   course is the local name of the other Attachment Circuit).\
    \  Neither\n   needs to be provisioned with the address of the remote PE, but\
    \ both\n   must have the same VPN-ID.\n   As part of an auto-discovery procedure,\
    \ each PE advertises its\n   <VPN-id, local AII> pairs.  Each PE compares its\
    \ local <VPN-id,\n   remote AII> pairs with the <VPN-id, local AII> pairs advertised\
    \ by\n   the other PEs.  If PE1 has a local <VPN-id, remote AII> pair with\n \
    \  value <V, fred>, and PE2 has a local <VPN-id, local AII> pair with\n   value\
    \ <V, fred>, PE1 will thus be able to discover that it needs to\n   connect to\
    \ PE2.  When signaling, it will use \"fred\" as the TAII, and\n   will use V as\
    \ the AGI.  PE1's local name for the Attachment Circuit\n   is sent as the SAII.\n\
    \   The primary benefit of this provisioning model when compared to\n   Double-Sided\
    \ Provisioning is that it enables one to move an\n   Attachment Circuit from one\
    \ PE to another without having to\n   reconfigure the remote endpoint.  However,\
    \ compared to the approach\n   described in Section 3.3 below, it imposes a greater\
    \ burden on the\n   discovery mechanism, because each Attachment Circuit's name\
    \ must be\n   advertised individually (i.e., there is no aggregation of Attachment\n\
    \   Circuit names in this simple scheme).\n"
- title: 3.1.2.  Signaling
  contents:
  - "3.1.2.  Signaling\n   The LDP-based signaling follows the procedures specified\
    \ in\n   [RFC4447].  That is, one PE (PE1) sends a Label Mapping message to\n\
    \   another PE (PE2) to establish an LSP in one direction.  If that\n   message\
    \ is processed successfully, and there is not yet an LSP for\n   the pseudowire\
    \ in the opposite (PE1->PE2) direction, then PE2 sends a\n   Label Mapping message\
    \ to PE1.\n   In addition to the procedures of [RFC4447], when a PE receives a\n\
    \   Label Mapping message, and the TAI identifies a particular Attachment\n  \
    \ Circuit that is configured to be bound to a point-to-point PW, then\n   the\
    \ following checks must be made.\n   If the Attachment Circuit is already bound\
    \ to a pseudowire (including\n   the case where only one of the two LSPs currently\
    \ exists), and the\n   remote endpoint is not PE1, then PE2 sends a Label Release\
    \ message to\n   PE1, with a Status Code meaning \"Attachment Circuit bound to\n\
    \   different PE\", and the processing of the Mapping message is complete.\n \
    \  If the Attachment Circuit is already bound to a pseudowire (including\n   the\
    \ case where only one of the two LSPs currently exists), but the AI\n   at PE1\
    \ is different than that specified in the AGI/SAII fields of the\n   Mapping message\
    \ then PE2 sends a Label Release message to PE1, with a\n   Status Code meaning\
    \ \"Attachment Circuit bound to different remote\n   Attachment Circuit\", and\
    \ the processing of the Mapping message is\n   complete.\n   Similarly, with the\
    \ L2TP-based signaling, when a PE receives an ICRQ\n   message, and the TAI identifies\
    \ a particular Attachment Circuit that\n   is configured to be bound to a point-to-point\
    \ PW, it performs the\n   following checks.\n   If the Attachment Circuit is already\
    \ bound to a pseudowire, and the\n   remote endpoint is not PE1, then PE2 sends\
    \ a Call Disconnect Notify\n   (CDN) message to PE1, with a Status Code meaning\
    \ \"Attachment Circuit\n   bound to different PE\", and the processing of the\
    \ ICRQ message is\n   complete.\n   If the Attachment Circuit is already bound\
    \ to a pseudowire, but the\n   pseudowire is bound to a Forwarder on PE1 with\
    \ the AI different than\n   that specified in the SAI fields of the ICRQ message,\
    \ then PE2 sends\n   a CDN message to PE1, with a Status Code meaning \"Attachment\
    \ Circuit\n   bound to different remote Attachment Circuit\", and the processing\
    \ of\n   the ICRQ message is complete.\n   These errors could occur as the result\
    \ of misconfigurations.\n"
- title: 3.2.  Virtual Private LAN Service
  contents:
  - "3.2.  Virtual Private LAN Service\n   In the VPLS application [RFC4762], the\
    \ Attachment Circuits can be\n   thought of as LAN interfaces that attach to \"\
    virtual LAN switches\",\n   or, in the terminology of [RFC4664], \"Virtual Switching\
    \ Instances\"\n   (VSIs).  Each Forwarder is a VSI that attaches to a number of\
    \ PWs and\n   a number of Attachment Circuits.  The VPLS service requires that\
    \ a\n   single pseudowire be created between each pair of VSIs that are in\n \
    \  the same VPLS.  Each PE device may have multiple VSIs, where each VSI\n   belongs\
    \ to a different VPLS.\n"
- title: 3.2.1.  Provisioning
  contents:
  - "3.2.1.  Provisioning\n   Each VPLS must have a globally unique identifier, which\
    \ in [RFC4762]\n   is referred to as the VPLS identifier (or VPLS-id).  Every\
    \ VSI must\n   be configured with the VPLS-id of the VPLS to which it belongs.\n\
    \   Each VSI must also have a unique identifier, which we call a VSI-ID.\n   This\
    \ can be formed automatically by concatenating its VPLS-id with an\n   IP address\
    \ of its PE router.  (Note that the PE address here is used\n   only as a form\
    \ of unique identifier; a service provider could choose\n   to use some other\
    \ numbering scheme if that was desired, as long as\n   each VSI is assigned an\
    \ identifier that is unique within the VPLS\n   instance.  See Section 4.4 for\
    \ a discussion of the assignment of\n   identifiers in the case of multiple providers.)\n"
- title: 3.2.2.  Auto-Discovery
  contents:
  - '3.2.2.  Auto-Discovery

    '
- title: 3.2.2.1.  BGP-Based Auto-Discovery
  contents:
  - "3.2.2.1.  BGP-Based Auto-Discovery\n   This section specifies how BGP can be\
    \ used to discover the\n   information necessary to build VPLS instances.\n  \
    \ When BGP-based auto-discovery is used for VPLS, the AFI/SAFI (Address\n   Family\
    \ Identifier / Subsequent Address Family Identifier) [RFC4760]\n   will be:\n\
    \   o  An AFI (25) for L2VPN.  (This is the same for all L2VPN schemes.)\n   o\
    \  A SAFI (65) specifically for an L2VPN service whose pseudowires\n      are\
    \ set up using the procedures described in the current document.\n   See Section\
    \ 6 for further discussion of AFI/SAFI assignment.\n   In order to use BGP-based\
    \ auto-discovery, there must be at least one\n   globally unique identifier associated\
    \ with a VPLS, and each such\n   identifier must be encodable as an 8-byte Route\
    \ Distinguisher (RD).\n   Any method of assigning one or more unique identifiers\
    \ to a VPLS and\n   encoding each of them as an RD (using the encoding techniques\
    \ of\n   [RFC4364]) will do.\n   Each VSI needs to have a unique identifier that\
    \ is encodable as a BGP\n   Network Layer Reachability Information (NLRI).  This\
    \ is formed by\n   prepending the RD (from the previous paragraph) to an IP address\
    \ of\n   the PE containing the VSI.  Note that the role of this address is\n \
    \  simply as a readily available unique identifier for the VSIs within a\n   VPN;\
    \ it does not need to be globally routable, but it must be unique\n   within the\
    \ VPLS instance.  An alternate scheme to assign unique\n   identifiers to each\
    \ VSI within a VPLS instance (e.g., numbering the\n   VSIs of a single VPN from\
    \ 1 to n) could be used if desired.\n   When using the procedures described in\
    \ this document, it is necessary\n   to assign a single, globally unique VPLS-id\
    \ to each VPLS instance\n   [RFC4762].  This VPLS-id must be encodable as a BGP\
    \ Extended\n   Community [RFC4360].  As described in Section 6, two Extended\n\
    \   Community subtypes are defined by this document for this purpose.\n   The\
    \ Extended Community MUST be transitive.\n   The first Extended Community subtype\
    \ is a Two-octet AS Specific\n   Extended Community.  The second Extended Community\
    \ subtype is an IPv4\n   Address Specific Extended Community.  The encoding of\
    \ such\n   Communities is defined in [RFC4360].  These encodings ensure that a\n\
    \   service provider can allocate a VPLS-id without risk of collision\n   with\
    \ another provider.  However, note that coordination of VPLS-ids\n   among providers\
    \ is necessary for inter-provider L2VPNs, as described\n   in Section 4.4.\n \
    \  Each VSI also needs to be associated with one or more Route Target\n   (RT)\
    \ Extended Communities.  These control the distribution of the\n   NLRI, and hence\
    \ will control the formation of the overlay topology of\n   pseudowires that constitutes\
    \ a particular VPLS.\n   Auto-discovery proceeds by having each PE distribute,\
    \ via BGP, the\n   NLRI for each of its VSIs, with itself as the BGP next hop,\
    \ and with\n   the appropriate RT for each such NLRI.  Typically, each PE would\
    \ be a\n   client of a small set of BGP route reflectors, which would\n   redistribute\
    \ this information to the other clients.\n   If a PE receives a BGP update from\
    \ which any of the elements\n   specified above is absent, the update should be\
    \ ignored.\n   If a PE has a VSI with a particular RT, it can then import all\
    \ the\n   NLRIs that have that same RT, and from the BGP next hop attribute of\n\
    \   these NLRI it will learn the IP addresses of the other PE routers\n   which\
    \ have VSIs with the same RT.  The considerations in Section\n   4.3.3 of [RFC4364]\
    \ on the use of route reflectors apply.\n   If a particular VPLS is meant to be\
    \ a single fully connected LAN, all\n   its VSIs will have the same RT, in which\
    \ case the RT could be (though\n   it need not be) an encoding of the VPN-id.\
    \  A VSI can be placed in\n   multiple VPLSes by assigning it multiple RTs.\n\
    \   Note that hierarchical VPLS can be set up by assigning multiple RTs\n   to\
    \ some of the VSIs; the RT mechanism allows one to have complete\n   control over\
    \ the pseudowire overlay that constitutes the VPLS\n   topology.\n   If Distributed\
    \ VPLS (described in Section 3.5) is deployed, only the\n   Network-facing PEs\
    \ (N-PEs) participate in BGP-based auto-discovery.\n   This means that an N-PE\
    \ would need to advertise reachability to each\n   of the VSIs that it supports,\
    \ including those located in User-facing\n   PEs (U-PEs) to which it is connected.\
    \  To create a unique identifier\n   for each such VSI, an IP address of each\
    \ U-PE combined with the RD\n   for the VPLS instance could be used.\n   In summary,\
    \ the BGP advertisement for a particular VSI at a given PE\n   will contain:\n\
    \   o  an NLRI of AFI = L2VPN, SAFI = VPLS, encoded as RD:PE_addr\n   o  a BGP\
    \ next hop equal to the loopback address of the PE\n   o  an Extended Community\
    \ Attribute containing the VPLS-id\n   o  an Extended Community Attribute containing\
    \ one or more RTs.\n   See Section 6 for discussion of the AFI and SAFI values.\
    \  The format\n   for the NLRI encoding is:\n        +------------------------------------+\n\
    \        |  Length (2 octets)                 |\n        +------------------------------------+\n\
    \        |  Route Distinguisher (8 octets)    |\n        +------------------------------------+\n\
    \        |  PE_addr (4 octets)                |\n        +------------------------------------+\n\
    \   Note that this advertisement is quite similar to the NLRI format\n   defined\
    \ in [RFC4761], the main difference being that [RFC4761] also\n   includes a label\
    \ block in the NLRI.  Interoperability between the\n   VPLS scheme defined here\
    \ and that defined in [RFC4761] is beyond the\n   scope of this document.\n"
- title: 3.2.3.  Signaling
  contents:
  - "3.2.3.  Signaling\n   It is necessary to create Attachment Identifiers that identify\
    \ the\n   VSIs.  In the preceding section, a VSI-ID was encoded as RD:PE_addr,\n\
    \   and the VPLS-id was carried in a BGP Extended Community.  For\n   signaling\
    \ purposes, this information is encoded as follows.  We\n   encode the VPLS-id\
    \ in the AGI field, and place the PE_addr (or, more\n   precisely, the VSI-ID\
    \ that was contained in the NLRI in BGP, minus\n   the RD) in the TAII field.\
    \  The combination of AGI and TAII is\n   sufficient to fully specify the VSI\
    \ to which this pseudowire is to be\n   connected, in both single AS and inter-AS\
    \ environments.  The SAII\n   MUST be set to the PE_addr of the sending PE (or,\
    \ more precisely, the\n   VSI-ID, without the RD, of the VSI associated with this\
    \ VPLS in the\n   sending PE) to enable signaling of the reverse half of the PW\
    \ if\n   needed.\n   The structure of the AGI and AII fields for the Generalized\
    \ ID FEC in\n   LDP is defined in [RFC4447].  The AGI field in this case consists\
    \ of\n   a Type of 1, a length field of value 8, and the 8 bytes of the\n   VPLS-id.\
    \  The AIIs consist of a Type of 1, a length field of value 4,\n   followed by\
    \ the 4-byte PE address (or other 4-byte identifier).  See\n   Section 6 for discussion\
    \ of the AGI and AII Type assignment.\n   The encoding of the AGI and AII in L2TP\
    \ is specified in [RFC4667].\n   Note that it is not possible using this technique\
    \ to set up more than\n   one PW per pair of VSIs.\n"
- title: 3.2.4.  Pseudowires as VPLS Attachment Circuits
  contents:
  - "3.2.4.  Pseudowires as VPLS Attachment Circuits\n   It is also possible using\
    \ this technique to set up a PW that attaches\n   at one endpoint to a VSI, but\
    \ at the other endpoint only to an\n   Attachment Circuit.  There may be more\
    \ than one PW terminating on a\n   given VSI, which must somehow be distinguished,\
    \ so each PW must have\n   an SAII that is unique relative to the VSI-ID.\n"
- title: '3.3.  Colored Pools: Full Mesh of Point-to-Point Pseudowires'
  contents:
  - "3.3.  Colored Pools: Full Mesh of Point-to-Point Pseudowires\n   The \"Colored\
    \ Pools\" model of operation provides an automated way to\n   deliver VPWS.  In\
    \ this model, each PE may contain several pools of\n   Attachment Circuits, each\
    \ pool associated with a particular VPN.  A\n   PE may contain multiple pools\
    \ per VPN, as each pool may correspond to\n   a particular CE device.  It may\
    \ be desired to create one pseudowire\n   between each pair of pools that are\
    \ in the same VPN; the result would\n   be to create a full mesh of CE-CE Virtual\
    \ Circuits for each VPN.\n"
- title: 3.3.1.  Provisioning
  contents:
  - "3.3.1.  Provisioning\n   Each pool is configured, and associated with:\n   o\
    \  a set of Attachment Circuits;\n   o  a \"color\", which can be thought of as\
    \ a VPN-id of some sort;\n   o  a relative pool identifier, which is unique relative\
    \ to the color.\n   [Note: depending on the technology used for Attachment Circuits\n\
    \   (ACs), it may or may not be necessary to provision these circuits as\n   well.\
    \  For example, if the ACs are frame relay circuits, there may be\n   some separate\
    \ provisioning system to set up such circuits.\n   Alternatively, \"provisioning\"\
    \ an AC may be as simple as allocating an\n   unused VLAN ID on an interface and\
    \ communicating the choice to the\n   customer.  These issues are independent\
    \ of the procedures described\n   in this document.]\n   The pool identifier and\
    \ color, taken together, constitute a globally\n   unique identifier for the pool.\
    \  Thus, if there are n pools of a\n   given color, their pool identifiers can\
    \ be (though they do not need\n   to be) the numbers 1-n.\n   The semantics are\
    \ that a pseudowire will be created between every\n   pair of pools that have\
    \ the same color, where each such pseudowire\n   will be bound to one Attachment\
    \ Circuit from each of the two pools.\n   If each pool is a set of Attachment\
    \ Circuits leading to a single CE\n   device, then the Layer 2 connectivity among\
    \ the CEs is controlled by\n   the way the colors are assigned to the pools. \
    \ To create a full mesh,\n   the \"color\" would just be a VPN-id.\n   Optionally,\
    \ a particular Attachment Circuit may be configured with\n   the relative pool\
    \ identifier of a remote pool.  Then, that Attachment\n   Circuit would be bound\
    \ to a particular pseudowire only if that\n   pseudowire's remote endpoint is\
    \ the pool with that relative pool\n   identifier.  With this option, the same\
    \ pairs of Attachment Circuits\n   will always be bound via pseudowires.\n"
- title: 3.3.2.  Auto-Discovery
  contents:
  - '3.3.2.  Auto-Discovery

    '
- title: 3.3.2.1.  BGP-Based Auto-Discovery
  contents:
  - "3.3.2.1.  BGP-Based Auto-Discovery\n   This section specifies how BGP can be\
    \ used to discover the\n   information necessary to build VPWS instances.\n  \
    \ When BGP-based auto-discovery is used for VPWS, the AFI/SAFI will be:\n   o\
    \  An AFI specified by IANA for L2VPN.  (This is the same for all\n      L2VPN\
    \ schemes.)\n   o  A SAFI specified by IANA specifically for an L2VPN service\
    \ whose\n      pseudowires are set up using the procedures described in the\n\
    \      current document.\n   See Section 6 for further discussion of AFI/SAFI\
    \ assignment.\n   In order to use BGP-based auto-discovery, there must be one\
    \ or more\n   unique identifiers associated with a particular VPWS instance. \
    \ Each\n   identifier must be encodable as an RD (Route Distinguisher).  The\n\
    \   globally unique identifier of a pool must be encodable as NLRI; the\n   pool\
    \ identifier, which we define to be a 4-byte quantity, is appended\n   to the\
    \ RD to create the NLRI.\n   When using the procedures described in this document,\
    \ it is necessary\n   to assign a single, globally unique identifier to each VPWS\
    \ instance.\n   This identifier must be encodable as a BGP Extended Community\n\
    \   [RFC4360].  As described in Section 6, two Extended Community\n   subtypes\
    \ are defined by this document for this purpose.  The Extended\n   Community MUST\
    \ be transitive.\n   The first Extended Community subtype is a Two-octet AS Specific\n\
    \   Extended Community.  The second Extended Community subtype is an IPv4\n  \
    \ Address Specific Extended Community.  The encoding of such\n   Communities is\
    \ defined in [RFC4360].  These encodings ensure that a\n   service provider can\
    \ allocate a VPWS identifier without risk of\n   collision with another provider.\
    \  However, note that co-ordination of\n   VPWS identifiers among providers is\
    \ necessary for inter-provider\n   L2VPNs, as described in Section 4.4.\n   Each\
    \ pool must also be associated with an RT (route target), which\n   may also be\
    \ an encoding of the color.  If the desired topology is a\n   full mesh of pseudowires,\
    \ all pools may have the same RT.  See\n   Section 3.4 for a discussion of other\
    \ topologies.\n   Auto-discovery proceeds by having each PE distribute, via BGP,\
    \ the\n   NLRI for each of its pools, with itself as the BGP next hop, and with\n\
    \   the RT that encodes the pool's color.  If a given PE has a pool with\n   a\
    \ particular color (RT), it must receive, via BGP, all NLRI with that\n   same\
    \ color (RT).  Typically, each PE would be a client of a small set\n   of BGP\
    \ route reflectors, which would redistribute this information to\n   the other\
    \ clients.\n   If a PE receives a BGP update from which any of the elements\n\
    \   specified above is absent, the update should be ignored.\n   If a PE has a\
    \ pool with a particular color, it can then receive all\n   the NLRI that have\
    \ that same color, and from the BGP next hop\n   attribute of these NLRI will\
    \ learn the IP addresses of the other PE\n   routers that have pools switches\
    \ with the same color.  It also learns\n   the unique identifier of each such\
    \ remote pool, as this is encoded in\n   the NLRI.  The remote pool's relative\
    \ identifier can be extracted\n   from the NLRI and used in the signaling, as\
    \ specified below.\n   In summary, the BGP advertisement for a particular pool\
    \ of attachment\n   circuits at a given PE will contain:\n   o  an NLRI of AFI\
    \ = L2VPN, SAFI = VPLS, encoded as RD:pool_num;\n   o  a BGP next hop equal to\
    \ the loopback address of the PE;\n   o  an Extended Community Attribute containing\
    \ the VPWS identifier;\n   o  an Extended Community Attribute containing one or\
    \ more RTs.\n   See Section 6 for discussion of the AFI and SAFI values.\n"
- title: 3.3.3.  Signaling
  contents:
  - "3.3.3.  Signaling\n   The LDP-based signaling follows the procedures specified\
    \ in\n   [RFC4447].  That is, one PE (PE1) sends a Label Mapping message to\n\
    \   another PE (PE2) to establish an LSP in one direction.  The address\n   of\
    \ PE2 is the next-hop address learned via BGP as described above.\n   If the message\
    \ is processed successfully, and there is not yet an LSP\n   for the pseudowire\
    \ in the opposite (PE1->PE2) direction, then PE2\n   sends a Label Mapping message\
    \ to PE1.  Similarly, the L2TPv3-based\n   signaling follows the procedures of\
    \ [RFC4667].  Additional details on\n   the use of these signaling protocols follow.\n\
    \   When a PE sends a Label Mapping message or an ICRQ message to set up\n   a\
    \ PW between two pools, it encodes the VPWS identifier (as\n   distributed in\
    \ the Extended Community Attribute by BGP) as the AGI,\n   the local pool's relative\
    \ identifier as the SAII, and the remote\n   pool's relative identifier as the\
    \ TAII.\n   The structure of the AGI and AII fields for the Generalized ID FEC\
    \ in\n   LDP is defined in [RFC4447].  The AGI field in this case consists of\n\
    \   a Type of 1, a length field of value 8, and the 8 bytes of the VPWS\n   identifier.\
    \  The TAII consists of a Type of 1, a length field of\n   value 4, followed by\
    \ the 4-byte remote pool number.  The SAII\n   consists of a Type of 1, a length\
    \ field of value 4, followed by the\n   4-byte local pool number.  See Section\
    \ 6 for discussion of the AGI\n   and AII Type assignment.  Note that the VPLS\
    \ and VPWS procedures\n   defined in this document can make use of the same AGI\
    \ Type (1) and\n   the same AII Type (1).\n   The encoding of the AGI and AII\
    \ in L2TP is specified in [RFC4667].\n   When PE2 receives a Label Mapping message\
    \ or an ICRQ message from\n   PE1, and the TAI identifies a pool, and there is\
    \ already a pseudowire\n   connecting an Attachment Circuit in that pool to an\
    \ Attachment\n   Circuit at PE1, and the AI at PE1 of that pseudowire is the same\
    \ as\n   the SAI of the Label Mapping or ICRQ message, then PE2 sends a Label\n\
    \   Release or CDN message to PE1, with a Status Code meaning \"Attachment\n \
    \  Circuit already bound to remote Attachment Circuit\".  This prevents\n   the\
    \ creation of multiple pseudowires between a given pair of pools.\n   Note that\
    \ the signaling itself only identifies the remote pool to\n   which the pseudowire\
    \ is to lead, not the remote Attachment Circuit\n   that is to be bound to the\
    \ pseudowire.  However, the remote PE may\n   examine the SAII field to determine\
    \ which Attachment Circuit should\n   be bound to the pseudowire.\n"
- title: '3.4.  Colored Pools: Partial Mesh'
  contents:
  - "3.4.  Colored Pools: Partial Mesh\n   The procedures for creating a partial mesh\
    \ of pseudowires among a set\n   of colored pools are substantially the same as\
    \ those for creating a\n   full mesh, with the following exceptions:\n   o  Each\
    \ pool is optionally configured with a set of \"import RTs\" and\n      \"export\
    \ RTs\";\n   o  During BGP-based auto-discovery, the pool color is still encoded\n\
    \      in the RD, but if the pool is configured with a set of \"export\n     \
    \ RTs\", these are encoded in the RTs of the BGP Update messages\n      INSTEAD\
    \ of the color;\n   o  If a pool has a particular \"import RT\" value X, it will\
    \ create a\n      PW to every other pool that has X as one of its \"export RTs\"\
    .  The\n      signaling messages and procedures themselves are as in\n      Section\
    \ 3.3.3.\n   As a simple example, consider the task of building a hub-and-spoke\n\
    \   topology with a single hub.  One pool, the \"hub\" pool, is configured\n \
    \  with an export RT of RT_hub and an import RT of RT_spoke.  All other\n   pools\
    \ (the spokes) are configured with an export RT of RT_spoke and\n   an import\
    \ RT of RT_hub.  Thus, the hub pool will connect to the\n   spokes, and vice-versa,\
    \ but the spoke pools will not connect to each\n   other.\n"
- title: 3.5.  Distributed VPLS
  contents:
  - "3.5.  Distributed VPLS\n   In Distributed VPLS ([RFC4664]), the VPLS functionality\
    \ of a PE\n   router is divided among two systems: a U-PE and an N-PE.  The U-PE\n\
    \   sits between the user and the N-PE.  VSI functionality (e.g., MAC\n   address\
    \ learning and bridging) is performed on the U-PE.  A number of\n   U-PEs attach\
    \ to an N-PE.  For each VPLS supported by a U-PE, the U-PE\n   maintains a pseudowire\
    \ to each of the other U-PEs in the same VPLS.\n   However, the U-PEs do not maintain\
    \ signaling control connections with\n   each other.  Rather, each U-PE has only\
    \ a single signaling\n   connection, to its N-PE.  In essence, each U-PE-to-U-PE\
    \ pseudowire is\n   composed of three pseudowires spliced together: one from U-PE\
    \ to\n   N-PE, one from N-PE to N-PE, and one from N-PE to U-PE.  In the\n   terminology\
    \ of [RFC5659], the N-PEs perform the pseudowire switching\n   function to establish\
    \ multi-segment PWs from U-PE to U-PE.\n   Consider, for example, the following\
    \ topology:\n           U-PE A-----|             |----U-PE C\n               \
    \       |             |\n                      |             |\n             \
    \       N-PE E--------N-PE F\n                      |             |\n        \
    \              |             |\n           U-PE B-----|             |-----U-PE\
    \ D\n   where the four U-PEs are in a common VPLS.  We now illustrate how PWs\n\
    \   get spliced together in the above topology in order to establish the\n   necessary\
    \ PWs from U-PE A to the other U-PEs.\n   There are three PWs from A to E.  Call\
    \ these A-E/1, A-E/2, and A-E/3.\n   In order to connect A properly to the other\
    \ U-PEs, there must be two\n   PWs from E to F (call these E-F/1 and E-F/2), one\
    \ PW from E to B\n   (E-B/1), one from F to C (F-C/1), and one from F to D (F-D/1).\n\
    \   The N-PEs must then splice these pseudowires together to get the\n   equivalent\
    \ of what the non-distributed VPLS signaling mechanism would\n   provide:\n  \
    \ o  PW from A to B: A-E/1 gets spliced to E-B/1.\n   o  PW from A to C: A-E/2\
    \ gets spliced to E-F/1 gets spliced to F-C/1.\n   o  PW from A to D: A-E/3 gets\
    \ spliced to E-F/2 gets spliced to F-D/1.\n   It doesn't matter which PWs get\
    \ spliced together, as long as the\n   result is one from A to each of B, C, and\
    \ D.\n   Similarly, there are additional PWs that must get spliced together to\n\
    \   properly interconnect U-PE B with U-PEs C and D, and to interconnect\n   U-PE\
    \ C with U-PE D.\n   The following figure illustrates the PWs from A to C and\
    \ from B to D.\n   For clarity of the figure, the other four PWs are not shown.\n\
    \                      splicing points\n                       |           |\n\
    \                       V           V\n      A-C PW    <-----><-----------><------>\n\
    \           U-PE A-----|             |----U-PE C\n                      |    \
    \         |\n                      |             |\n                    N-PE E--------N-PE\
    \ F\n                      |             |\n                      |          \
    \   |\n           U-PE B-----|             |-----U-PE D\n      B-D PW    <-----><-----------><------>\n\
    \                       ^           ^\n                       |           |\n\
    \                      splicing points\n   One can see that distributed VPLS does\
    \ not reduce the number of\n   pseudowires per U-PE, but it does reduce the number\
    \ of control\n   connections per U-PE.  Whether this is worthwhile depends, of\
    \ course,\n   on what the bottleneck is.\n"
- title: 3.5.1.  Signaling
  contents:
  - "3.5.1.  Signaling\n   The signaling to support Distributed VPLS can be done with\
    \ the\n   mechanisms described in this document.  However, the procedures for\n\
    \   VPLS (Section 3.2.3) need some additional machinery to ensure that\n   the\
    \ appropriate number of PWs are established between the various\n   N-PEs and\
    \ U-PEs, and among the N-PEs.\n   At a given N-PE, the directly attached U-PEs\
    \ in a given VPLS can be\n   numbered from 1 to n.  This number identifies the\
    \ U-PE relative to a\n   particular VPN-id and a particular N-PE.  (That is, to\
    \ uniquely\n   identify the U-PE, the N-PE, the VPN-id, and the U-PE number must\
    \ be\n   known.)\n   As a result of configuration/discovery, each U-PE must be\
    \ given a\n   list of <j, IP address> pairs.  Each element in this list tells\
    \ the\n   U-PE to set up j PWs to the specified IP address.  When the U-PE\n \
    \  signals to the N-PE, it sets the AGI to the proper-VPN-id, and sets\n   the\
    \ SAII to the PW number, and sets the TAII to null.\n   In the above example,\
    \ U-PE A would be told <3, E>, telling it to set\n   up 3 PWs to E.  When signaling,\
    \ A would set the AGI to the proper\n   VPN-id, and would set the SAII to 1, 2,\
    \ or 3, depending on which of\n   the three PWs it is signaling.\n   As a result\
    \ of configuration/discovery, each N-PE must be given the\n   following information\
    \ for each VPLS:\n   o  A \"Local\" list: {<j, IP address>}, where each element\
    \ tells it to\n      set up j PWs to the locally attached U-PE at the specified\n\
    \      address.  The number of elements in this list will be n, the\n      number\
    \ of locally attached U-PEs in this VPLS.  In the above\n      example, E would\
    \ be given the local list: {<3, A>, <3, B>},\n      telling it to set up 3 PWs\
    \ to A and 3 to B.\n   o  A local numbering, relative to the particular VPLS and\
    \ the\n      particular N-PE, of its U-PEs.  In the above example, E could be\n\
    \      told that U-PE A is 1, and U-PE B is 2.\n   o  A \"Remote\" list: {<IP\
    \ address, k>}, telling it to set up k PWs,\n      for each U-PE, to the specified\
    \ IP address.  Each of these IP\n      addresses identifies an N-PE, and k specifies\
    \ the number of U-PEs\n      at the N-PE that are in the VPLS.  In the above example,\
    \ E would\n      be given the remote list: {<2, F>}.  Since N-PE E has 2 U-PEs,\n\
    \      this tells it to set up 4 PWs to N-PE F, 2 for each of its E's\n      U-PEs.\n\
    \   The signaling of a PW from N-PE to U-PE is based on the local list\n   and\
    \ the local numbering of U-PEs.  When signaling a particular PW\n   from an N-PE\
    \ to a U-PE, the AGI is set to the proper VPN-id, and SAII\n   is set to null,\
    \ and the TAII is set to the PW number (relative to\n   that particular VPLS and\
    \ U-PE).  In the above example, when E signals\n   to A, it would set the TAII\
    \ to be 1, 2, or 3, respectively, for the 3\n   PWs it must set up to A.  It would\
    \ similarly signal 3 PWs to B.\n   The LSP signaled from U-PE to N-PE is associated\
    \ with an LSP from\n   N-PE to U-PE in the usual manner.  A PW between a U-PE\
    \ and an N-PE is\n   known as a \"U-PW\".\n   The signaling of the appropriate\
    \ set of PWs from N-PE to N-PE is\n   based on the remote list.  The PWs between\
    \ the N-PEs can all be\n   considered equivalent.  As long as the correct total\
    \ number of PWs\n   are established, the N-PEs can splice these PWs to appropriate\
    \ U-PWs.\n   The signaling of the correct number of PWs from N-PE to N-PE is based\n\
    \   on the remote list.  The remote list specifies the number of PWs to\n   set\
    \ up, per local U-PE, to a particular remote N-PE.\n   When signaling a particular\
    \ PW from an N-PE to an N-PE, the AGI is\n   set to the appropriate VPN-id.  The\
    \ TAII identifies the remote N-PE,\n   as in the non-distributed case, i.e., it\
    \ contains an IP address of\n   the remote N-PE.  If there are n such PWs, they\
    \ are distinguished by\n   the setting of the SAII.  In order to allow multiple\
    \ different SAII\n   values in a single VPLS, the sending N-PE needs to have as\
    \ many VSI-\n   IDs as it has U-PEs.  As noted above in Section 3.2.2, this may\
    \ be\n   achieved by using an IP address of each attached U-PE, for example.\n\
    \   A PW between two N-PEs is known as an \"N-PW\".\n   Each U-PW must be \"spliced\"\
    \ to an N-PW.  This is based on the remote\n   list.  If the remote list contains\
    \ an element <i, F>, then i U-PWs\n   from each local U-PE must be spliced to\
    \ i N-PWs from the remote N-PE\n   F.  It does not matter which U-PWs are spliced\
    \ to which N-PWs, as\n   long as this constraint is met.\n   If an N-PE has more\
    \ than one local U-PE for a given VPLS, it must\n   also ensure that a U-PW from\
    \ each such U-PE is spliced to a U-PW from\n   each of the other U-PEs.\n"
- title: 3.5.2.  Provisioning and Discovery
  contents:
  - "3.5.2.  Provisioning and Discovery\n   Every N-PE must be provisioned with the\
    \ set of VPLS instances it\n   supports, a VPN-id for each one, and a list of\
    \ local U-PEs for each\n   such VPLS.  As part of the discovery procedure, the\
    \ N-PE advertises\n   the number of U-PEs for each VPLS.  See Section 3.2.2 for\
    \ details.\n   Auto-discovery (e.g., BGP-based) can be used to discover all the\n\
    \   other N-PEs in the VPLS, and for each, the number of U-PEs local to\n   that\
    \ N-PE.  From this, one can compute the total number of U-PEs in\n   the VPLS.\
    \  This information is sufficient to enable one to compute\n   the local list\
    \ and the remote list for each N-PE.\n"
- title: 3.5.3.  Non-Distributed VPLS as a Sub-Case
  contents:
  - "3.5.3.  Non-Distributed VPLS as a Sub-Case\n   A PE that is providing \"non-distributed\
    \ VPLS\" (i.e., a PE that\n   performs both the U-PE and N-PE functions) can interoperate\
    \ with\n   N-PE/U-PE pairs that are providing distributed VPLS.  The \"non-\n\
    \   distributed PE\" simply advertises, in the discovery procedure, that\n   it\
    \ has one local U-PE per VPLS.  And of course, the non-distributed\n   PE does\
    \ no PW switching.\n   If every PE in a VPLS is providing non-distributed VPLS,\
    \ and thus\n   every PE is advertising itself as an N-PE with one local U-PE,\
    \ the\n   resultant signaling is exactly the same as that specified in\n   Section\
    \ 3.2.3 above.\n"
- title: 3.5.4.  Splicing and the Data Plane
  contents:
  - "3.5.4.  Splicing and the Data Plane\n   Splicing two PWs together is quite straightforward\
    \ in the MPLS data\n   plane, as moving a packet from one PW directly to another\
    \ is just a\n   'label replace' operation on the PW label.  When a PW consists\
    \ of two\n   or more PWs spliced together, it is assumed that the data will go\
    \ to\n   the node where the splicing is being done, i.e., that the data path\n\
    \   will pass through the nodes that participate in PW signaling.\n   Further\
    \ details on splicing are discussed in [RFC6073].\n"
- title: 4.  Inter-AS Operation
  contents:
  - "4.  Inter-AS Operation\n   The provisioning, auto-discovery, and signaling mechanisms\
    \ described\n   above can all be applied in an inter-AS environment.  As in\n\
    \   [RFC4364], there are a number of options for inter-AS operation.\n"
- title: 4.1.  Multihop EBGP Redistribution of L2VPN NLRIs
  contents:
  - "4.1.  Multihop EBGP Redistribution of L2VPN NLRIs\n   This option is most like\
    \ option (c) in [RFC4364].  That is, we use\n   multihop External BGP (EBGP) redistribution\
    \ of L2VPN NLRIs between\n   source and destination ASes, with EBGP redistribution\
    \ of labeled IPv4\n   or IPv6 routes from AS to neighboring AS.\n   An Autonomous\
    \ System Border Router (ASBR) must maintain labeled IPv4\n   /32 (or IPv6 /128)\
    \ routes to the PE routers within its AS.  It uses\n   EBGP to distribute these\
    \ routes to other ASes, and sets itself as the\n   BGP next hop for these routes.\
    \  ASBRs in any transit ASes will also\n   have to use EBGP to pass along the\
    \ labeled /32 (or /128) routes.\n   This results in the creation of a set of label\
    \ switched paths from\n   all ingress PE routers to all egress PE routers.  Now,\
    \ PE routers in\n   different ASes can establish multi-hop EBGP connections to\
    \ each other\n   and can exchange L2VPN NLRIs over those connections.  Following\
    \ such\n   exchanges, a pair of PEs in different ASes could establish an LDP\n\
    \   session to signal PWs between each other.\n   For VPLS, the BGP advertisement\
    \ and PW signaling are exactly as\n   described in Section 3.2.  As a result of\
    \ the multihop EBGP session\n   that exists between source and destination AS,\
    \ the PEs in one AS that\n   have VSIs of a certain VPLS will discover the PEs\
    \ in another AS that\n   have VSIs of the same VPLS.  These PEs will then be able\
    \ to establish\n   the appropriate PW signaling protocol session and establish\
    \ the full\n   mesh of VSI-VSI pseudowires to build the VPLS as described in\n\
    \   Section 3.2.3.\n   For VPWS, the BGP advertisement and PW signaling are exactly\
    \ as\n   described in Section 3.3.  As a result of the multihop EBGP session\n\
    \   that exists between source and destination AS, the PEs in one AS that\n  \
    \ have pools of a certain color (VPN) will discover PEs in another AS\n   that\
    \ have pools of the same color.  These PEs will then be able to\n   establish\
    \ the appropriate PW signaling protocol session and establish\n   the full mesh\
    \ of pseudowires as described in Section 3.2.3.  A\n   partial mesh can similarly\
    \ be established using the procedures of\n   Section 3.4.\n   As in Layer 3 VPNs,\
    \ building an L2VPN that spans the networks of more\n   than one provider requires\
    \ some co-ordination in the use of RTs and\n   RDs.  This subject is discussed\
    \ in more detail in Section 4.4.\n"
- title: 4.2.  EBGP Redistribution of L2VPN NLRIs with Multi-Segment Pseudowires
  contents:
  - "4.2.  EBGP Redistribution of L2VPN NLRIs with Multi-Segment Pseudowires\n   A\
    \ possible drawback of the approach of the previous section is that\n   it creates\
    \ PW signaling sessions among all the PEs of a given L2VPN\n   (VPLS or VPWS).\
    \  This means a potentially large number of LDP or\n   L2TPv3 sessions will cross\
    \ the AS boundary and that these sessions\n   connect to many devices within an\
    \ AS.  In the case where the ASes\n   belong to different providers, one might\
    \ imagine that providers would\n   like to have fewer signaling sessions crossing\
    \ the AS boundary and\n   that the entities that terminate the sessions could\
    \ be restricted to\n   a smaller set of devices.  Furthermore, by forcing the\
    \ LDP or L2TPv3\n   signaling sessions to terminate on a small set of ASBRs, a\
    \ provider\n   could use standard authentication procedures on a small set of\
    \ inter-\n   provider sessions.  These concerns motivate the approach described\n\
    \   here.\n   [RFC6073] describes an approach to \"switching\" packets from one\n\
    \   pseudowire to another at a particular node.  This approach allows an\n   end-to-end,\
    \ multi-segment pseudowire to be constructed out of several\n   pseudowire segments,\
    \ without maintaining an end-to-end control\n   connection.  We can use this approach\
    \ to produce an inter-AS solution\n   that more closely resembles option (b) in\
    \ [RFC4364].\n   In this model, we use EBGP redistribution of L2VPN NLRI from\
    \ AS to\n   neighboring AS.  First, the PE routers use Internal BGP (IBGP) to\n\
    \   redistribute L2VPN NLRI either to an ASBR, or to a route reflector of\n  \
    \ which an ASBR is a client.  The ASBR then uses EBGP to redistribute\n   those\
    \ L2VPN NLRI to an ASBR in another AS, which in turn distributes\n   them to the\
    \ PE routers in that AS, or perhaps to another ASBR which\n   in turn distributes\
    \ them, and so on.\n   In this case, a PE can learn the address of an ASBR through\
    \ which it\n   could reach another PE to which it wishes to establish a PW.  That\n\
    \   is, a local PE will receive a BGP advertisement containing L2VPN NLRI\n  \
    \ corresponding to an L2VPN instance in which the local PE has some\n   attached\
    \ members.  The BGP next-hop for that L2VPN NLRI will be an\n   ASBR of the local\
    \ AS.  Then, rather than building a control\n   connection all the way to the\
    \ remote PE, it builds one only to the\n   ASBR.  A pseudowire segment can now\
    \ be established from the PE to the\n   ASBR.  The ASBR in turn can establish\
    \ a PW to the ASBR of the next\n   AS, and splice that PW to the PW from the PE\
    \ as described in\n   Section 3.5.4 and [RFC6073].  Repeating the process at each\
    \ ASBR\n   leads to a sequence of PW segments that, when spliced together,\n \
    \  connect the two PEs.\n   Note that in the approach just described, the local\
    \ PE may never\n   learn the IP address of the remote PE.  It learns the L2VPN\
    \ NLRI\n   advertised by the remote PE, which need not contain the remote PE\n\
    \   address, and it learns the IP address of the ASBR that is the BGP\n   next\
    \ hop for that NLRI.\n   When this approach is used for VPLS, or for full-mesh\
    \ VPWS, it leads\n   to a full mesh of pseudowires among the PEs, just as in the\
    \ previous\n   section, but it does not require a full mesh of control connections\n\
    \   (LDP or L2TPv3 sessions).  Instead, the control connections within a\n   single\
    \ AS run among all the PEs of that AS and the ASBRs of the AS.\n   A single control\
    \ connection between the ASBRs of adjacent ASes can be\n   used to support however\
    \ many AS-to-AS pseudowire segments are needed.\n   Note that the procedures described\
    \ here will result in the splicing\n   points (PW Switching PEs (S-PEs) in the\
    \ terminology of [RFC5659])\n   being co-located with the ASBRs.  It is of course\
    \ possible to have\n   multiple ASBR-ASBR connections between a given pair of\
    \ ASes.  In this\n   case, a given PE could choose among the available ASBRs based\
    \ on a\n   range of criteria, such as IGP metric, local configuration, etc.,\n\
    \   analogous to choosing an exit point in normal IP routing.  The use of\n  \
    \ multiple ASBRs would lead to greater resiliency (at the timescale of\n   BGP\
    \ routing convergence) since a PE could select a new ASBR in the\n   event of\
    \ the failure of the one currently in use.\n   As in layer 3 VPNs, building an\
    \ L2VPN that spans the networks of more\n   than one provider requires some co-ordination\
    \ in the use of RTs and\n   RDs.  This subject is discussed in more detail in\
    \ Section 4.4.\n"
- title: 4.3.  Inter-Provider Application of Distributed VPLS Signaling
  contents:
  - "4.3.  Inter-Provider Application of Distributed VPLS Signaling\n   An alternative\
    \ approach to inter-provider VPLS can be derived from\n   the Distributed VPLS\
    \ approach described above.  Consider the\n   following topology:\n   PE A ---\
    \ Network 1 ----- Border ----- Border ----- Network 2 --- PE B\n             \
    \               Router 12    Router 21       |\n                             \
    \                            |\n                                             \
    \           PE C\n   where A, B, and C are PEs in a common VPLS, but Networks\
    \ 1 and 2 are\n   networks of different service providers.  Border Router 12 is\
    \ Network\n   1's border router to network 2, and Border Router 21 is Network\
    \ 2's\n   border router to Network 1.  We suppose further that the PEs are not\n\
    \   \"distributed\", i.e, that each provides both the U-PE and N-PE\n   functions.\n\
    \   In this topology, one needs two inter-provider pseudowires: A-B and\n   A-C.\n\
    \   Suppose a service provider decides, for whatever reason, that it does\n  \
    \ not want each of its PEs to have a control connection to any PEs in\n   the\
    \ other network.  Rather, it wants the inter-provider control\n   connections\
    \ to run only between the two border routers.\n   This can be achieved using the\
    \ techniques of Section 3.5, where the\n   PEs behave like U-PEs, and the BRs\
    \ behave like N-PEs.  In the example\n   topology, PE A would behave like a U-PE\
    \ that is locally attached to\n   BR12; PEs B and C would be have like U-PEs that\
    \ are locally attached\n   to BR21; and the two BRs would behave like N-PEs.\n\
    \   As a result, the PW from A to B would consist of three segments:\n   A-BR12,\
    \ BR12-BR21, and BR21-B.  The border routers would have to\n   splice the corresponding\
    \ segments together.\n   This requires the PEs within a VPLS to be numbered from\
    \ 1-n (relative\n   to that VPLS) within a given network.\n"
- title: 4.4.  RT and RD Assignment Considerations
  contents:
  - "4.4.  RT and RD Assignment Considerations\n   We note that, in order for any\
    \ of the inter-AS procedures described\n   above to work correctly, the two ASes\
    \ must use RTs and RDs\n   consistently, just as in Layer 3 VPNs [RFC4364].  The\
    \ structure of\n   RTs and RDs is such that there is not a great risk of accidental\n\
    \   collisions.  The main challenge is that it is necessary for the\n   operator\
    \ of one AS to know what RT or RTs have been chosen in another\n   AS for any\
    \ VPN that has sites in both ASes.  As in Layer 3 VPNs,\n   there are many ways\
    \ to make this work, but all require some co-\n   operation among the providers.\
    \  For example, provider A may tag all\n   the NLRI for a given VPN with a single\
    \ RT, say RT_A, and provider B\n   can then configure the PEs that connect to\
    \ sites of that VPN to\n   import NLRI that contains that RT.  Provider B can\
    \ choose a different\n   RT, RT_B, tag all NLRI for this VPN with that RT, and\
    \ then provider A\n   can import NLRI with that RT at the appropriate PEs.  However,\
    \ this\n   does require both providers to communicate their choice of RTs for\n\
    \   each VPN.  Alternatively, both providers could agree to use a common\n   RT\
    \ for a given VPN.  In any case, communication of RTs between the\n   providers\
    \ is essential.  As in Layer 3 VPNs, providers may configure\n   RT filtering\
    \ to ensure that only coordinated RT values are allowed\n   across the AS boundary.\n\
    \   Note that a single VPN identifier (carried in a BGP Extended\n   Community)\
    \ is required for each VPLS or VPWS instance.  The encoding\n   rules for these\
    \ identifiers [RFC4360] ensure that collisions do not\n   occur with other providers.\
    \  However, for a single VPLS or VPWS\n   instance that spans the networks of\
    \ two or more providers, one\n   provider will need to allocate the identifier\
    \ and communicate this\n   choice to the other provider(s), who must use the same\
    \ value for\n   sites in the same VPLS or VPWS instance.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document describes a number of different\
    \ L2VPN provisioning\n   models, and specifies the endpoint identifiers that are\
    \ required to\n   support each of the provisioning models.  It also specifies\
    \ how those\n   endpoint identifiers are mapped into fields of auto-discovery\n\
    \   protocols and signaling protocols.\n   The security considerations related\
    \ to the signaling protocols are\n   discussed in the relevant protocol specifications\
    \ ([RFC5036],\n   [RFC4447], [RFC3931], and [RFC4667]).\n   The security considerations\
    \ related to BGP-based auto-discovery,\n   including inter-AS issues, are discussed\
    \ in [RFC4364].  L2VPNs that\n   use BGP-based auto-discovery may automate setup\
    \ of security\n   mechanisms as well.  Specification of automated security mechanisms\n\
    \   are outside the scope of this document, but are recommended as a\n   future\
    \ work item.\n   The security considerations related to the particular kind of\
    \ L2VPN\n   service being supported are discussed in [RFC4664], [RFC4665], and\n\
    \   [RFC4762].\n   The way in which endpoint identifiers are mapped into protocol\
    \ fields\n   does not create any additional security issues.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   IANA has assigned an AFI and a SAFI for L2VPN NLRI.\
    \  Both the AFI and\n   SAFI are the same as the values assigned for [RFC4761].\
    \  That is, the\n   AFI is 25 (L2VPN) and the SAFI is 65 (already allocated for\
    \ VPLS).\n   The same AFI and SAFI are used for both VPLS and VPWS auto-discovery\n\
    \   as described in this document.\n   [RFC4446] defines registries for \"Attachment\
    \ Group Identifier (AGI)\n   Type\" and \"Attachment Individual Identifier (AII)\
    \ Type\".  Type 1 in\n   each registry has been assigned to the AGI and AII formats\
    \ defined in\n   this document.\n   IANA has assigned two new LDP status codes.\
    \  IANA already maintains a\n   registry of name \"STATUS CODE NAME SPACE\" defined\
    \ by [RFC5036].  The\n   following values have been assigned:\n   0x00000030 Attachment\
    \ Circuit bound to different PE\n   0x0000002D Attachment Circuit bound to different\
    \ remote Attachment\n   Circuit\n   Two new L2TP Result Codes have been registered\
    \ for the CDN message.\n   IANA already maintains a registry of L2TP Result Code\
    \ Values for the\n   CDN message, defined by [RFC3438].  The following values\
    \ have been\n   assigned:\n   27: Attachment Circuit bound to different PE\n \
    \  28: Attachment Circuit bound to different remote Attachment Circuit\n   [RFC4360]\
    \ defines a registry entitled \"Two-octet AS Specific Extended\n   Community\"\
    .  IANA has assigned a value in this registry from the\n   \"transitive\" range\
    \ (0x0000-0x00FF).  The value is as follows:\n   o  0x000A Two-octet AS specific\
    \ Layer 2 VPN Identifier\n   [RFC4360] defines a registry entitled \"IPv4 Address\
    \ Specific Extended\n   Community\".  IANA has assigned a value in this registry\
    \ from the\n   \"transitive\" range (0x0100-0x01FF).  The value is as follows:\n\
    \   o  0x010A Layer 2 VPN Identifier\n"
- title: 7.  BGP-AD and VPLS-BGP Interoperability
  contents:
  - "7.  BGP-AD and VPLS-BGP Interoperability\n   Both BGP-AD and VPLS-BGP [RFC4761]\
    \ use the same AFI/SAFI.  In order\n   for both BGP-AD and VPLS-BGP to co-exist,\
    \ the NLRI length must be\n   used as a demultiplexer.\n   The BGP-AD NLRI has\
    \ an NLRI length of 12 bytes, containing only an\n   8-byte RD and a 4-byte VSI-ID.\
    \  VPLS-BGP [RFC4761] uses a 17-byte\n   NLRI length.  Therefore, implementations\
    \ of BGP-AD must ignore NLRI\n   that are greater than 12 bytes.\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   Thanks to Dan Tappan, Ted Qian, Ali Sajassi, Skip Booth,\
    \ Luca\n   Martini, Dave McDysan, Francois Le Faucheur, Russ Gardo, Keyur Patel,\n\
    \   Sam Henderson, and Matthew Bocci for their comments, criticisms, and\n   helpful\
    \ suggestions.\n   Thanks to Tissa Senevirathne, Hamid Ould-Brahim, and Yakov\
    \ Rekhter\n   for discussing the auto-discovery issues.\n   Thanks to Vach Kompella\
    \ for a continuing discussion of the proper\n   semantics of the generalized identifiers.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3438]  Townsley, W., \"Layer Two Tunneling Protocol (L2TP)\n \
    \             Internet Assigned Numbers Authority (IANA) Considerations\n    \
    \          Update\", BCP 68, RFC 3438, December 2002.\n   [RFC3931]  Lau, J.,\
    \ Townsley, M., and I. Goyret, \"Layer Two Tunneling\n              Protocol -\
    \ Version 3 (L2TPv3)\", RFC 3931, March 2005.\n   [RFC4360]  Sangli, S., Tappan,\
    \ D., and Y. Rekhter, \"BGP Extended\n              Communities Attribute\", RFC\
    \ 4360, February 2006.\n   [RFC4364]  Rosen, E. and Y. Rekhter, \"BGP/MPLS IP\
    \ Virtual Private\n              Networks (VPNs)\", RFC 4364, February 2006.\n\
    \   [RFC4447]  Martini, L., Rosen, E., El-Aawar, N., Smith, T., and G.\n     \
    \         Heron, \"Pseudowire Setup and Maintenance Using the Label\n        \
    \      Distribution Protocol (LDP)\", RFC 4447, April 2006.\n   [RFC4667]  Luo,\
    \ W., \"Layer 2 Virtual Private Network (L2VPN)\n              Extensions for\
    \ Layer 2 Tunneling Protocol (L2TP)\",\n              RFC 4667, September 2006.\n\
    \   [RFC4760]  Bates, T., Chandra, R., Katz, D., and Y. Rekhter,\n           \
    \   \"Multiprotocol Extensions for BGP-4\", RFC 4760,\n              January 2007.\n\
    \   [RFC5036]  Andersson, L., Minei, I., and B. Thomas, \"LDP\n              Specification\"\
    , RFC 5036, October 2007.\n   [RFC6073]  Martini, L., Metz, C., Nadeau, T., Bocci,\
    \ M., and M.\n              Aissaoui, \"Segmented Pseudowire\", RFC 6073, January\
    \ 2011.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC3985]  Bryant, S. and P. Pate, \"Pseudo\
    \ Wire Emulation Edge-to-\n              Edge (PWE3) Architecture\", RFC 3985,\
    \ March 2005.\n   [RFC4026]  Andersson, L. and T. Madsen, \"Provider Provisioned\
    \ Virtual\n              Private Network (VPN) Terminology\", RFC 4026, March\
    \ 2005.\n   [RFC4446]  Martini, L., \"IANA Allocations for Pseudowire Edge to\
    \ Edge\n              Emulation (PWE3)\", BCP 116, RFC 4446, April 2006.\n   [RFC4664]\
    \  Andersson, L. and E. Rosen, \"Framework for Layer 2 Virtual\n             \
    \ Private Networks (L2VPNs)\", RFC 4664, September 2006.\n   [RFC4665]  Augustyn,\
    \ W. and Y. Serbest, \"Service Requirements for\n              Layer 2 Provider-Provisioned\
    \ Virtual Private Networks\",\n              RFC 4665, September 2006.\n   [RFC4761]\
    \  Kompella, K. and Y. Rekhter, \"Virtual Private LAN Service\n              (VPLS)\
    \ Using BGP for Auto-Discovery and Signaling\",\n              RFC 4761, January\
    \ 2007.\n   [RFC4762]  Lasserre, M. and V. Kompella, \"Virtual Private LAN Service\n\
    \              (VPLS) Using Label Distribution Protocol (LDP) Signaling\",\n \
    \             RFC 4762, January 2007.\n   [RFC5003]  Metz, C., Martini, L., Balus,\
    \ F., and J. Sugimoto,\n              \"Attachment Individual Identifier (AII)\
    \ Types for\n              Aggregation\", RFC 5003, September 2007.\n   [RFC5659]\
    \  Bocci, M. and S. Bryant, \"An Architecture for Multi-\n              Segment\
    \ Pseudowire Emulation Edge-to-Edge\", RFC 5659,\n              October 2009.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Eric Rosen\n   Cisco Systems, Inc.\n   1414 Mass. Ave.\n\
    \   Boxborough, MA  01719\n   USA\n   EMail: erosen@cisco.com\n   Bruce Davie\n\
    \   Cisco Systems, Inc.\n   1414 Mass. Ave.\n   Boxborough, MA  01719\n   USA\n\
    \   EMail: bsd@cisco.com\n   Vasile Radoaca\n   Alcatel-Lucent\n   Think Park\
    \ Tower 6F\n   2-1-1 Osaki, Tokyo, 141-6006\n   Japan\n   EMail: vasile.radoaca@alcatel-lucent.com\n\
    \   Wei Luo\n   EMail: luo@weiluo.net\n"
