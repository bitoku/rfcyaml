- title: __initial_text__
  contents:
  - "                   Unified Layer 2 (L2) Abstractions\n                 for Layer\
    \ 3 (L3)-Driven Fast Handover\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This document is not an IETF Internet Standard.  It represents\
    \ the\n   consensus of the MOBOPTS Research Group of the Internet Research Task\n\
    \   Force.  It may be considered for standardization by the IETF in the\n   future.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document proposes unified Layer 2 (L2) abstractions for Layer\
    \ 3\n   (L3)-driven fast handovers.  For efficient network communication, it\n\
    \   is vital for a protocol layer to know or utilize other layers'\n   information,\
    \ such as the form of L2 triggers.  However, each protocol\n   layer is basically\
    \ designed independently.  Since each protocol layer\n   is also implemented independently\
    \ in current operating systems, it is\n   very hard to exchange control information\
    \ between protocol layers.\n   This document defines nine kinds of L2 abstractions\
    \ in the form of\n   \"primitives\" to achieve fast handovers in the network layer\
    \ as a\n   means of solving the problem.  This mechanism is called \"L3-driven\n\
    \   fast handovers\" because the network layer initiates L2 and L3\n   handovers\
    \ by using the primitives.  This document is a product of the\n   IP Mobility\
    \ Optimizations (MobOpts) Research Group.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Primitives for L2 Abstractions ..................................4\n   4.\
    \ Definitions of Primitives .......................................6\n      4.1.\
    \ L2-LinkStatus (Type 1) .....................................6\n      4.2. L2-PoAList\
    \ (Type 1) ........................................6\n      4.3. L2-PoAFound (Type\
    \ 2) .......................................6\n      4.4. L2-PoALost (Type 2)\
    \ ........................................6\n      4.5. L2-LinkUp (Type 2) .........................................7\n\
    \      4.6. L2-LinkDown (Type 2) .......................................7\n  \
    \    4.7. L2-LinkStatusChanged (Type 2) ..............................7\n    \
    \  4.8. L2-LinkConnect (Type 3) ....................................7\n      4.9.\
    \ L2-LinkDisconnect (Type 3) .................................8\n   5. Definitions\
    \ of Static Parameters ................................8\n      5.1. Network Interface\
    \ ID .......................................8\n   6. Definitions of Dynamic Parameters\
    \ ...............................8\n      6.1. PoA (Point of Attachment) ..................................8\n\
    \      6.2. Condition ..................................................8\n  \
    \    6.3. PoA List ...................................................9\n    \
    \  6.4. Enable/Disable .............................................9\n      6.5.\
    \ Ack/Error ..................................................9\n   7. Architectural\
    \ Considerations ....................................9\n   8. Security Considerations\
    \ ........................................13\n   9. Acknowledgements ...............................................14\n\
    \   10. References ....................................................14\n  \
    \    10.1. Normative References .....................................14\n    \
    \  10.2. Informative References ...................................14\n   Appendix\
    \ A.  Example Scenario  ....................................16\n   Appendix B.\
    \  Example Operation for FMIPv6  ........................17\n     B.1.  Example\
    \ Operation-1 for FMIPv6 ............................18\n     B.2.  Example Operation-2\
    \ for FMIPv6 ............................20\n     B.3.  Experiment ................................................21\n\
    \   Appendix C.  Example Mapping between L2 Primitives and\n                Primitives\
    \ in IEEE 802.11 and IEEE 802.16e  ..........22\n   Appendix D.  Example Mapping\
    \ of Primitives and IEEE 802.11  .......24\n     D.1.  L2-LinkStatus  ............................................24\n\
    \     D.2.  L2-PoAList ................................................24\n  \
    \   D.3.  L2-PoAFound  ..............................................24\n    \
    \ D.4.  L2-PoALost ................................................25\n     D.5.\
    \  L2-LinkUp  ................................................25\n     D.6.  L2-LinkDown\
    \  ..............................................25\n     D.7.  L2-LinkStatusChanged\
    \ ......................................25\n     D.8.  L2-LinkConnect ............................................26\n\
    \     D.9.  L2-LinkDisconnect  ........................................26\n  \
    \ Appendix E.  Implementation and Evaluation of the Proposed\n               \
    \ Model ................................................26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Recent years have witnessed the rapid proliferation of wireless\n\
    \   networks as well as mobile devices accessing them.  Unlike wired\n   network\
    \ environments, wireless networks are characterized by\n   dynamically changing\
    \ radio conditions, connectivity, and available\n   bandwidth.  For efficient\
    \ network communication, it is vital for a\n   protocol layer to know or utilize\
    \ other layers' control information.\n   Mobile IPv4 [2] and Mobile IPv6 [3] have\
    \ been standardized to support\n   communication with mobile nodes.  There are\
    \ several proposals for\n   seamless handovers in IPv6 networks, such as Fast\
    \ Handovers for\n   Mobile IPv6 (FMIPv6) [4] and Hierarchical Mobile IPv6 (HMIPv6)\
    \ [5].\n   In FMIPv6, the network layer must know in advance the indication of\
    \ a\n   handover from the link layer to achieve seamless handovers.  However,\n\
    \   control information exchange between protocol layers is typically not\n  \
    \ available because each protocol layer is designed independently.\n   To solve\
    \ the problem, this document defines nine kinds of L2\n   abstractions in the\
    \ form of \"primitives\" to achieve fast handovers in\n   the network layer. \
    \ This mechanism is called \"L3-driven fast\n   handovers\" because the network\
    \ layer initiates L2 and L3 handovers by\n   using the primitives.\n   IEEE 802.21\
    \ [6] also defines several services that make use of L2\n   information.  For\
    \ the sake of ease of implementation and deployment,\n   the primitives defined\
    \ in this document make use of only the\n   information available in the mobile\
    \ node, while IEEE 802.21 [6]\n   introduces the information server in the network\
    \ to provide the\n   mobile node with network-related information, such as a global\n\
    \   network map.\n   This document represents the consensus of the MobOpts Research\
    \ Group.\n   It has been reviewed by Research Group members active in the specific\n\
    \   area of work.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document uses the following terms:\n   L3-Driven Fast\
    \ Handover\n      The handover mechanism that is initiated by the network layer\
    \ on a\n      mobile node.  Since this mechanism allows handover preparation in\n\
    \      L3 before the start of an L2 handover on the mobile node, it can\n    \
    \  reduce packet loss during a handover.  The L3-driven fast handover\n      mechanism\
    \ requires L2 information as a trigger for a handover\n      procedure.\n   PoA\n\
    \      The point of attachment of a mobile node (e.g., an access point in\n  \
    \    IEEE 802.11 networks [7]).\n   Primitive\n      A unit of information that\
    \ is sent from one layer to another.\n      There are four classes of primitives:\
    \ Request, Confirm,\n      Indication, and Response.  One or more classes of a\
    \ primitive are\n      exchanged, depending on the type of primitive.\n   The\
    \ key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n\
    \   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in RFC 2119 [1].\n"
- title: 3.  Primitives for L2 Abstractions
  contents:
  - "3.  Primitives for L2 Abstractions\n   Each layer offers its services in the\
    \ form of primitives.  Four\n   classes of primitives are defined, as shown in\
    \ Figure 1.  Request is\n   issued by the layer that wants to get the services\
    \ or information\n   from another layer, and Confirm is the acknowledgment of\
    \ the request.\n   Indication is the notification of the information to the layer\
    \ that\n   requested the service, and Response is the acknowledgment of the\n\
    \   indication.  In this architecture, communication between layers is\n   symmetrical.\n\
    \      -------------------------   -----------------------------\n           \
    \     Request                       Response\n                  ||      /\\  \
    \           /\\      ||\n      Layer N     ||      ||             ||      ||\n\
    \      ------------||------||---   -------||------||------------\n           \
    \       ||      ||             ||      ||\n                  \\/      ||     \
    \        ||      \\/\n      Layer N-m        Confirm       Indication\n      -------------------------\
    \   -----------------------------\n      Figure 1: Interaction Model between Layers\n\
    \   The primitive consists of five fields: protocol layer ID, protocol\n   ID,\
    \ primitive class (Request, Response, Indication, or Confirm),\n   primitive name,\
    \ and parameters.  The protocol layer ID specifies to\n   which layer this primitive\
    \ should be sent, e.g., Layer 2 or Layer 3.\n   The protocol ID specifies to which\
    \ protocol entity this primitive\n   should be sent, e.g., IEEE 802.11 [7] or\
    \ IEEE 802.3 [8].\n   For unified L2 abstractions for L3-driven fast handovers,\
    \ three\n   different usages of primitives are defined, as described below:\n\
    \   Type 1.  To provide L2 information to upper layers immediately\n      This\
    \ type of primitive is used to provide the L2 information to\n      upper layers\
    \ immediately.  The Request and Confirm classes of\n      primitives MUST be exchanged\
    \ for the interaction.  The Request\n      primitive is for an acquisition request\
    \ for the L2 information.\n      The Confirm primitive is for the answer.\n  \
    \ Type 2.  To notify upper layers of L2 events asynchronously\n      This type\
    \ of primitive is used to notify upper layers of L2 events\n      asynchronously.\
    \  The Request, Confirm, and Indication classes of\n      primitive MUST be exchanged,\
    \ and the Response class MAY be\n      exchanged for the interaction.  The Request\
    \ and Confirm primitives\n      are used just for registration.  When an event\
    \ occurs, the\n      Indication primitive is asynchronously delivered to the upper\n\
    \      layer.\n   Type 3.  To control L2 actions from upper layers\n      This\
    \ type of primitive is used to control L2 actions from upper\n      layers.  The\
    \ Request and Confirm classes of primitives MUST be\n      exchanged for the interaction.\
    \  The Request primitive is a request\n      for operation.  Ack or Nack returns\
    \ immediately as the Confirm\n      primitive.\n   A protocol entity can register\
    \ primitives anytime by exchanging the\n   Request and Confirm messages that include\
    \ the fields defined above.\n   When the registered event occurs, the Indication\
    \ and Response\n   messages are exchanged as well.\n   The way to exchange a message\
    \ between protocol entities is beyond the\n   scope of this document.  Any information-exchange\
    \ method between\n   layers, such as the work in [10], can be used.\n   The timing\
    \ for sending an Indication primitive is also beyond the\n   scope of this document.\
    \  For example, a layer 2 event is generated\n   when layer 2 status has been\
    \ changed, and this depends upon how\n   scanning algorithms, for example, are\
    \ implemented.\n"
- title: 4.  Definitions of Primitives
  contents:
  - "4.  Definitions of Primitives\n   To obtain and exchange L2 information, the\
    \ following primitives are\n   defined.  Appendix C shows example mapping between\
    \ the L2 primitives\n   and the primitives in IEEE 802.11 [7] and IEEE 802.16e\
    \ [9].\n"
- title: 4.1.  L2-LinkStatus (Type 1)
  contents:
  - "4.1.  L2-LinkStatus (Type 1)\n   The L2-LinkStatus.request primitive is sent\
    \ to the link layer when an\n   upper layer requires the current information of\
    \ a link.  The\n   L2-LinkStatus.request primitive contains the \"Network Interface\
    \ ID\"\n   parameter (see Section 5.1).  In response, the L2-LinkStatus.confirm\n\
    \   primitive returns.  The L2-LinkStatus.confirm primitive contains\n   three\
    \ parameters: \"Network Interface ID\", \"PoA\", and \"Condition\".\n   \"PoA\"\
    \ and \"Condition\" indicate the current status of the link between\n   the mobile\
    \ node and a PoA.\n"
- title: 4.2.  L2-PoAList (Type 1)
  contents:
  - "4.2.  L2-PoAList (Type 1)\n   The L2-PoAList.request primitive is sent to the\
    \ link layer when an\n   upper layer requires a list of the candidate PoAs.  The\n\
    \   L2-PoAList.request primitive contains the \"Network Interface ID\"\n   parameter.\
    \  In response, the L2-PoAList.confirm primitive returns the\n   \"Network Interface\
    \ ID\" parameter and the \"PoA List\" parameter.  The\n   \"PoA List\" parameter\
    \ is a list of the candidate PoAs.\n"
- title: 4.3.  L2-PoAFound (Type 2)
  contents:
  - "4.3.  L2-PoAFound (Type 2)\n   The L2-PoAFound.indication primitive is asynchronously\
    \ provided to an\n   upper layer when new PoAs are detected.  This primitive carries\
    \ the\n   \"Network Interface ID\" parameter and the \"PoA List\" parameter. \
    \ The\n   \"PoA List\" parameter contains information on new PoAs detected by\
    \ the\n   mobile node.  In order to use this notification, the registration\n\
    \   process using the L2-PoAFound.request primitive and the\n   L2-PoAFound.confirm\
    \ primitive is needed in advance.  The\n   L2-PoAFound.request primitive has two\
    \ parameters: \"Network Interface\n   ID\" and \"Enable/Disable\".  The \"Enable/Disable\"\
    \ parameter shows\n   whether this notification function is turned on.  When this\n\
    \   registration succeeds, the L2-PoAFound.confirm primitive returns with\n  \
    \ the \"Network Interface ID\" parameter and the \"Ack\" parameter in\n   response.\n"
- title: 4.4.  L2-PoALost (Type 2)
  contents:
  - "4.4.  L2-PoALost (Type 2)\n   The L2-PoALost.indication primitive is asynchronously\
    \ provided to an\n   upper layer when a PoA included in the list of candidate\
    \ PoAs\n   disappears.  This primitive carries the \"Network Interface ID\"\n\
    \   parameter and the \"PoA List\" parameter.  The \"PoA List\" parameter\n  \
    \ contains information on the PoAs that disappeared from the list of\n   candidates.\
    \  The registration process using the L2-PoALost.request\n   primitive and the\
    \ L2-PoALost.confirm primitive is similar to the\n   L2-PoAFound primitive described\
    \ above.\n"
- title: 4.5.  L2-LinkUp (Type 2)
  contents:
  - "4.5.  L2-LinkUp (Type 2)\n   The L2-LinkUp.indication primitive is asynchronously\
    \ provided to an\n   upper layer when a new link is connected and IP packets can\
    \ be\n   transmitted through the new link.  As described in RFC 4957 [12],\n \
    \  what \"link is connected\" means depends on link types.  For example,\n   in\
    \ case of the infrastructure mode in IEEE 802.11 [7] (WiFi), this\n   primitive\
    \ is provided when an association to an access point is\n   established.  This\
    \ primitive carries the \"Network Interface ID\"\n   parameter and the \"PoA\"\
    \ parameter.  The L2-LinkUp.request primitive\n   contains the \"Network Interface\
    \ ID\" parameter and the\n   \"Enable/Disable\" parameter for registration.  When\
    \ the registration\n   succeeds, the L2-LinkUp.confirm primitive with the \"Network\
    \ Interface\n   ID\" parameter and the \"Ack\" parameter returns.\n"
- title: 4.6.  L2-LinkDown (Type 2)
  contents:
  - "4.6.  L2-LinkDown (Type 2)\n   The L2-LinkDown.indication primitive is asynchronously\
    \ provided to an\n   upper layer when an existing link is disconnected and IP\
    \ packets\n   cannot be transmitted through the link.  The registration processing\n\
    \   is the same as the L2-LinkUp primitive described above.\n"
- title: 4.7.  L2-LinkStatusChanged (Type 2)
  contents:
  - "4.7.  L2-LinkStatusChanged (Type 2)\n   The L2-LinkStatusChanged.indication primitive\
    \ is asynchronously\n   provided to an upper layer when the status of a link has\
    \ changed.\n   This notification contains three parameters: \"Network Interface\
    \ ID\",\n   \"PoA\", and \"Condition\".  The \"PoA\" parameter indicates the attachment\n\
    \   point at which the link quality changed.  In the registration\n   processing,\
    \ the L2-LinkStatusChanged.request primitive carries the\n   \"Network Interface\
    \ ID\" parameter, the \"Enable/Disable\" parameter, and\n   the \"Condition\"\
    \ parameter.  \"Condition\" indicates the event type and\n   the threshold for\
    \ the Indication.\n"
- title: 4.8.  L2-LinkConnect (Type 3)
  contents:
  - "4.8.  L2-LinkConnect (Type 3)\n   The L2-LinkConnect.request primitive is sent\
    \ to the link layer when\n   an upper layer has to establish a new link to the\
    \ specific \"PoA\".\n   This primitive carries the \"Network Interface ID\" parameter\
    \ and the\n   \"PoA\" parameter.  This operation begins after the link layer returns\n\
    \   the L2-LinkConnect.confirm primitive with \"Ack\".\n"
- title: 4.9.  L2-LinkDisconnect (Type 3)
  contents:
  - "4.9.  L2-LinkDisconnect (Type 3)\n   The L2-LinkDisconnect.request primitive\
    \ is sent to the link layer\n   when an upper layer has to tear down an existing\
    \ link to the specific\n   \"PoA\".  This primitive carries the \"Network Interface\
    \ ID\" parameter\n   and the \"PoA\" parameter.  This operation begins after the\
    \ link layer\n   returns the L2-LinkDisconnect.confirm primitive with \"Ack\"\
    .\n"
- title: 5.  Definitions of Static Parameters
  contents:
  - "5.  Definitions of Static Parameters\n   This section lists static parameters.\
    \  Once the values of static\n   parameters are configured, they basically remain\
    \ unchanged during\n   communication.  The following parameters are transferred\
    \ as a part of\n   primitives.\n"
- title: 5.1.  Network Interface ID
  contents:
  - "5.1.  Network Interface ID\n   The \"Network Interface ID\" parameter uniquely\
    \ identifies the network\n   interface in the node.  The syntax of the identifier\
    \ is\n   implementation-specific (e.g., name, index, or unique address\n   assigned\
    \ to each interface).  This parameter also contains the\n   network interface\
    \ type that indicates the kind of technology of the\n   network interface (e.g.,\
    \ IEEE 802.11a/b/g [7], Third Generation\n   Partnership Project (3GPP), etc.).\
    \  This parameter is required in all\n   primitives.\n"
- title: 6.  Definitions of Dynamic Parameters
  contents:
  - "6.  Definitions of Dynamic Parameters\n   This section lists dynamic parameters.\
    \  The values of dynamic\n   parameters change frequently during communication.\
    \  The following\n   parameters are transferred as a part of primitives.\n"
- title: 6.1.  PoA (Point of Attachment)
  contents:
  - "6.1.  PoA (Point of Attachment)\n   The \"PoA\" parameter uniquely identifies\
    \ the PoA.\n"
- title: 6.2.  Condition
  contents:
  - "6.2.  Condition\n   The \"Condition\" parameter consists of the following sub-parameters:\n\
    \   available bandwidth and link quality level.  These sub-parameters are\n  \
    \ the abstracted information that indicates the current quality of\n   service.\
    \  The abstraction algorithms of sub-parameters depend on\n   hardware devices\
    \ and software implementation.  The useful range of\n   link quality is divided\
    \ into five levels: EXCELLENT, GOOD, FAIR, BAD,\n   and NONE, in descending order.\
    \  The quality levels of an L2 device\n   are independent of those of other devices.\
    \  However, making decisions\n   based on these metrics is error prone and not\
    \ guaranteed to result in\n   an optimal choice of links.  An example of the thresholds\
    \ among the\n   five levels in IEEE 802.11 [7] is described in Appendix E.\n"
- title: 6.3.  PoA List
  contents:
  - "6.3.  PoA List\n   The \"PoA List\" parameter consists of arbitrary couples of\
    \ two\n   sub-parameters: \"PoA\" and \"Condition\".  This parameter shows a list\n\
    \   of PoAs and their conditions.\n"
- title: 6.4.  Enable/Disable
  contents:
  - "6.4.  Enable/Disable\n   The \"Enable/Disable\" flag is used for turning event\
    \ notification on/\n   off.  When an upper layer needs notifications, the Request\
    \ primitive\n   with \"Enable\" is sent to the link layer as registration.  When\
    \ an\n   upper layer needs no more notifications, the Request primitive with\n\
    \   \"Disable\" is sent.\n"
- title: 6.5.  Ack/Error
  contents:
  - "6.5.  Ack/Error\n   When an upper layer requests some notifications, the link\
    \ layer\n   receives and confirms this Request.  If the Request is valid, the\n\
    \   Confirm primitive with \"Ack\" is sent to the upper layer.  If it is\n   invalid,\
    \ the Confirm with \"Error\" is sent to the upper layer.\n"
- title: 7.  Architectural Considerations
  contents:
  - "7.  Architectural Considerations\n   RFC 4907 [11] discusses the role and the\
    \ issues of link indications\n   within the Internet Architecture.  This section\
    \ discusses the\n   architectural considerations mentioned in Section 2 of RFC\
    \ 4907.\n   1.    Proposals should avoid use of simplified link models in\n  \
    \       circumstances where they do not apply.\n         The information in each\
    \ layer should be abstracted before it is\n         sent to another layer.  For\
    \ example, in IEEE 802.11 [7], the\n         Received Signal Strength Indicator\
    \ (RSSI), the number of\n         retransmissions, and the existence of association\
    \ between the\n         mobile node and the access point are used so that the\
    \ link\n         layer indications can adjust themselves to various environments\n\
    \         or situations.  The thresholds needed for some link indications\n  \
    \       are defined from empirical study.\n         In the conventional protocol-layering\
    \ model, the Protocol\n         Entity (PE) is defined as the entity that processes\
    \ a specific\n         protocol.  Our proposal introduced the Abstract Entity\
    \ (AE) to\n         achieve link independency of the link indications.  An AE\
    \ and a\n         PE make a pair.  An AE abstracts the PE-dependent information\n\
    \         to the PE-independent information.\n         Figure 2 shows AEs and\
    \ PEs using primitives.\n   2.    Link indications should be clearly defined,\
    \ so that it is\n         understood when they are generated on different link\
    \ layers.\n         To make the link information/indications clear, our proposal\n\
    \         defines the 4 types of primitives: Request/Confirm and\n         Indication/Response,\
    \ as described in Section 3.  The Request is\n         used to obtain the information\
    \ of another layer.  The Confirm\n         is the reply to the request and it\
    \ includes the requested\n         information.  The Indication is generated when\
    \ a particular\n         event occurs.  The Response is the reply to the indication.\n\
    \         In our proposal on IEEE 802.11b [7], L2-LinkUp is defined as\n     \
    \    the status in which an association to the Access Point (AP) is\n        \
    \ established, and L2-LinkDown is defined as the status in which\n         an\
    \ association to the AP is not established.\n         L2-LinkStatusChanged is\
    \ generated when the link quality goes\n         below the predefined threshold.\
    \  Since the Received Signal\n         Strength Indicator (RSSI) and the number\
    \ of retransmissions are\n         used to abstract and evaluate the link quality,\
    \ L2-\n         LinkStatusChanged represents the link quality in both\n      \
    \   directions.  It should use an average of the RSSI or the number\n        \
    \ of retransmissions damped for one second or more to cope with\n         transient\
    \ link conditions.\n   3.    Proposals must demonstrate robustness against misleading\n\
    \         indications.\n         Since RSSI changes significantly even when the\
    \ mobile node\n         stands still according to the measurements in our experiments,\n\
    \         our proposal uses the RSSI, the number of retransmissions, and\n   \
    \      the existence of an association to calculate the link status,\n       \
    \  as described above.  In our experiments, there were some\n         \"ping-pong\"\
    \ handovers between two APs.  Such ping-pong\n         handovers could be reduced\
    \ by detecting the most suitable AP by\n         L2-LinkStatus when L2-LinkStatusChanged\
    \ is notified.  The use\n         of L2 indications is related to parameter thresholds\
    \ that\n         trigger handover.  These thresholds vary based on the\n     \
    \    deployment scenario and, if not configured properly, could lead\n       \
    \  to misleading indications.\n   4.    Upper layers should utilize a timely recovery\
    \ step so as to\n         limit the potential damage from link indications determined\
    \ to\n         be invalid after they have been acted on.\n         The proposed\
    \ L3-driven handover described in Appendix E uses\n         the L2-LinkStatusChanged\
    \ indication as the trigger for starting\n         handover.  L2-LinkStatusChanged\
    \ is indicated when the link\n         quality goes below a specific threshold.\
    \  This indication is\n         not canceled even if the link quality goes up\
    \ soon.  As\n         described above, L2-LinkStatus can be used to detect the\
    \ most\n         suitable AP.  The IP layer can cancel a handover if it finds\n\
    \         that the current AP is the most suitable one by using\n         L2-LinkStatus\
    \ when L2-LinkStatusChanged is notified.\n   5.    Proposals must demonstrate\
    \ that effective congestion control is\n         maintained.\n         Since this\
    \ mechanism is coupled to the IP layer, and not\n         directly to the transport\
    \ layer, the proposed mechanism does\n         not directly affect congestion\
    \ control.\n   6.    Proposals must demonstrate the effectiveness of proposed\n\
    \         optimizations.\n         In IPv6 mobility, the L3-driven handover mechanism\
    \ using link\n         indications can dramatically reduce gap time due to handover.\n\
    \         The L3-driven handover mechanism needs the L2-LinkStatusChanged\n  \
    \       indication to predict disconnection.  But L2-LinkStatusChanged\n     \
    \    is not trusted sometimes because it is difficult to abstract\n         the\
    \ link quality.  Invalid L2-LinkStatusChanged may cause\n         redundant handover.\
    \  A handover mechanism using only L2-LinkUp/\n         L2-LinkDown can also reduce\
    \ gap time modestly.  An example of\n         an implementation and evaluation\
    \ of the L3-driven handover\n         mechanism is described in Appendix E.\n\
    \   7.    Link indications should not be required by upper layers in\n       \
    \  order to maintain link independence.\n         Our proposal does not require\
    \ any modifications to the\n         transport and upper layers.\n   8.    Proposals\
    \ should avoid race conditions, which can occur where\n         link indications\
    \ are utilized directly by multiple layers of\n         the stack.\n         Since\
    \ our proposal defines the link indications only to the IP\n         layer, race\
    \ conditions between multiple layers never occur.\n   9.    Proposals should avoid\
    \ inconsistencies between link and routing\n         layer metrics.\n        \
    \ Our proposal does not deal with routing metrics.\n   10.   Overhead reduction\
    \ schemes must avoid compromising\n         interoperability and introducing link-layer\
    \ dependencies into\n         the Internet and transport layers.\n         As\
    \ described above, the link indications in our proposal are\n         abstracted\
    \ to the information independent of link types to\n         reduce the gap time\
    \ due to a handover, and the ordinary host\n         can execute handover without\
    \ using the link indications defined\n         in our proposal.\n   11.   Proposals\
    \ advocating the transport of link indications beyond\n         the local host\
    \ need to carefully consider the layering,\n         security, and transport implications.\
    \  In general, implicit\n         signals are preferred to explicit transport\
    \ of link indications\n         since they add no new packets in times of network\
    \ distress,\n         operate more reliably in the presence of middle boxes, such\
    \ as\n         NA(P)Ts (Network Address (Port) Translations), are more likely\n\
    \         to be backward compatible, and are less likely to result in\n      \
    \   security vulnerabilities.\n         Our proposal does not define the exchange\
    \ of link indications\n         between nodes.\n      ---------------------------------------------------------\n\
    \      ----------===========     ----------===========\n      |         |[   \
    \     ]     |         |[        ]\n      |   PE    |[   AE   ]     |   PE    |[\
    \   AE   ]\n      |         |[        ]     |         |[        ]\n      ----------===========\
    \     ----------===========\n      Layer N     ||   /\\                   || \
    \  /\\\n      ------------||---||-------------------||---||------------\n    \
    \       Request||   ||           Response||   ||\n                  ||   ||  \
    \                 ||   ||\n                  ||   ||                   ||   ||\n\
    \                  ||   ||Confirm            ||   ||Indication\n      ------------||---||-------------------||---||------------\n\
    \                  \\/   ||                   \\/   ||\n      ----------===========\
    \     ----------===========\n      |         |[        ]     |         |[    \
    \    ]\n      |   PE    |[   AE   ]     |   PE    |[   AE   ]\n      |       \
    \  |[        ]     |         |[        ]\n      ----------===========     ----------===========\n\
    \      Layer N-m\n      ---------------------------------------------------------\n\
    \      Figure 2: AE and PE with Primitives\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   RFC 4907 [11] discusses the role and issues of\
    \ link indications\n   within the Internet Architecture.  This section discusses\
    \ the\n   security considerations mentioned in Section 4 of RFC 4907.\n   1. \
    \ Spoofing\n         The proposed primitives suffer from spoofed link-layer control\n\
    \         frames.  For example, if a malicious access point is set up and\n  \
    \       spoofed beacon frames are transmitted, L2-PoAFound.indication\n      \
    \   is generated in the mobile node.  As a result, the mobile node\n         may\
    \ establish an association with the malicious access point by\n         an L2-LinkConnect.request.\n\
    \   2.  Indication validation\n         Transportation of the link indications\
    \ between nodes is not\n         assumed; hence, this consideration is beyond\
    \ the scope of our\n         proposal.\n   3.  Denial of service\n         Since\
    \ this proposal does not change link-layer protocols, no\n         more insecurity\
    \ is added to a particular link-layer protocol.\n         However, the proposed\
    \ primitives suffer from denial-of-service\n         attacks by spoofed link-layer\
    \ frames.  For example, L2-\n         PoAFound.indication and L2-PoALost.indication\
    \ may frequently be\n         generated alternately if a malicious access point\
    \ frequently\n         transmits control frames that indicate strong RSSI and\
    \ weak\n         RSSI alternately.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors gratefully acknowledge the contributions\
    \ of Jukka Manner,\n   Christian Vogt, and John Levine for their review.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [2]  Perkins, C., Ed., \"IP Mobility Support\
    \ for IPv4\", RFC 3344,\n        August 2002.\n   [3]  Johnson, D., Perkins, C.,\
    \ and J. Arkko, \"Mobility Support in\n        IPv6\", RFC 3775, June 2004.\n\
    \   [4]  Koodli, R., Ed., \"Fast Handovers for Mobile IPv6\", RFC 4068,\n    \
    \    July 2005.\n   [5]  Soliman, H., Castelluccia, C., El Malki, K., and L. Bellier,\n\
    \        \"Hierarchical Mobile IPv6 Mobility Management (HMIPv6)\", RFC\n    \
    \    4140, August 2005.\n   [6]  \"Draft IEEE Standard for Local and Metropolitan\
    \ Area Networks:\n        Media Independent Handover Services\", IEEE P802.21/D02.00,\n\
    \        September 2006.\n   [7]  IEEE, \"802.11-2007 IEEE Standard for LAN/MAN\
    \ - Specific\n        requirements Part 11: Wireless LAN Medium Access Control\
    \ (MAC)\n        and Physical Layer (PHY) Specifications\", 2007.\n   [8]  IEEE,\
    \ \"802.3, 2000 EDITION ISO/IEC 8802-3:2000 (E) Information\n        Technology\
    \ - LAN/MAN - Part 3: Carrier Sense Multiple Access\n        with Collision Detection\
    \ (CSMA/CD) Access Method and Physical\n        Layer Specifications\", 2000.\n\
    \   [9]  IEEE, \"802.16e-2005 & 802.16/COR1 Part 16: Amendment for\n        Physical\
    \ & Medium Access Control Layers for Combined Fixed &\n        Mobile Operation\"\
    , 2006.\n   [10] Gogo, K., Shibu, R., and F. Teraoka, \"An L3-Driven Fast Handover\n\
    \        Mechanism in IPv6 Mobility\", In Proc. of International Symposium\n \
    \       on Applications and the Internet (SAINT2006) Workshop in IPv6,\n     \
    \   February 2006.\n   [11] Aboba, B., Ed., \"Architectural Implications of Link\n\
    \        Indications\", RFC 4907, June 2007.\n   [12] Krishnan, S., Ed., Montavont,\
    \ N., Njedjou, E., Veerepalli, S.,\n        and A. Yegin, Ed., \"Link-Layer Event\
    \ Notifications for Detecting\n        Network Attachments\", RFC 4957, August\
    \ 2007.\n   [13] Ishiyama, M., Kunishi, M., Uehara, K., Esaki, H., and F.\n  \
    \      Teraoka, \"LINA: A New Approach to Mobility Support in Wide Area\n    \
    \    Networks\", IEICE Transactions on Communication vol. E84-B, no.\n       \
    \ 8, pp. 2076-2086, August 2001.\n"
- title: Appendix A.  Example Scenario
  contents:
  - "Appendix A.  Example Scenario\n   For example, the picture below shows L3-driven\
    \ fast handover\n   mechanism using the L2 triggers on a mobile node (MN).\n \
    \         L2                               L3\n           |                  \
    \              |\n           |<----------LinkUP.req-----------|\n           |-----------LinkUP.cnf---------->|\n\
    \           |<-----LinkStatusChanged.req-----|\n           |------LinkStatusChanged.cnf---->|\n\
    \           =                                =\n           |                 \
    \               |\n          Low                               |\n         Signal---LinkStatusChanged.ind---->|\n\
    \           |                                |\n           |<----------PoAList.req----------|\n\
    \           |-----------PoAList.cnf------>Handover\n           |             \
    \               Preparation\n           |<-------LinkConnect.req---------|\n \
    \      L2 Handover--LinkConnect.cnf-------->:\n           :                  \
    \              :\n           :                                :\n           finish---------LinkUp.ind----->L3\
    \ Handover\n           |                             finish\n           |    \
    \                            |\n        L2: Link Layer on MN\n        L3: Network\
    \ Layer on MN\n       req: Request\n       cnf: Confirm\n       ind: Indication\n\
    \      Figure 3: L3-Driven Fast Handover Mechanism\n   First, L3 issues LinkUp.request\
    \ to receive LinkUp.indication when the\n   link becomes available.  L3 also issues\
    \ LinkStatusChanged.request to\n   receive LinkStatusChanged.indication when the\
    \ link quality goes below\n   the threshold.\n   In the beginning of the L3-driven\
    \ handover procedure, L2 detects that\n   the radio signal strength is going down.\
    \  Then, L2 sends\n   L2-LinkStatusChanged.indication to L3.  L3 prepares for\
    \ handover\n   (e.g., Care-of Address (CoA) generation, Duplicate Address Detection\n\
    \   (DAD), Neighbor Discovery (ND) cache creation, and routing table\n   setting)\
    \ and sends L2-PoAList.request to L2 if the list of access\n   points is needed.\n\
    \   If L3 decides to perform handover according to some rules, L3 sends\n   L2-LinkConnect.request\
    \ with some parameters about candidate access\n   points to request L2 handover.\
    \  L2 handover begins after L2 sends\n   L2-LinkConnect.confirm to L3.  When the\
    \ L2 handover finishes, L2\n   sends L2-LinkUp.indication to notify L3.  Finally,\
    \ L3 performs\n   handover (e.g., sending a Binding Update (BU)).\n   One of the\
    \ important features of L3-driven fast handover using\n   primitives is that L3\
    \ handover preparation can be done during\n   communication.  So, it can reduce\
    \ disruption time during handover.\n"
- title: Appendix B.  Example Operation for FMIPv6
  contents:
  - "Appendix B.  Example Operation for FMIPv6\n   There are two scenarios of L3-driven\
    \ fast handover for FMIPv6.\n   Scenario 2 is different from scenario 1 for the\
    \ timing of sending\n   some messages.\n"
- title: B.1.  Example Operation-1 for FMIPv6
  contents:
  - "B.1.  Example Operation-1 for FMIPv6\n   Figure 4 shows the predictive mode of\
    \ FMIPv6 operation with an\n   L3-driven link-switching mechanism.\n      MN-L2\
    \                            MN-L3        PAR-L3\n        |                  \
    \              |             |\n       AP<----------PoAList.req----------|   \
    \          |\n      Scan----------PoAList.cnf--------->|             |\n     \
    \   |                                |---RtSolPr-->|\n        |              \
    \                  |<--PrRtAdv---|\n        |----------PoAFound.ind--------->|\
    \             |\n        |                                |---RtSolPr-->|\n  \
    \      |                                |<--PrRtAdv---|\n        |           \
    \                     |             |\n        ~                             \
    \   ~             ~\n        |                                |             |\n\
    \       Low                               |             |\n      Signal---LinkStatusChanged.ind---->|\
    \             |        NAR-L3\n        |                                |-----FBU---->|\
    \           |\n        |                                |             |----HI---->|\n\
    \        |                                |             |<--HAck----|\n      \
    \  |                                |<----FBack---|           |\n        |<-------LinkConnect.req---L3\
    \ Handover         |           |\n    L2 Handover--LinkConnect.cnf-------->: \
    \                        |\n        :                                :       \
    \                  |\n        :                                :             \
    \            |\n     finish---------LinkUp.ind---------->:                   \
    \      |\n        |                                :-----------FNA---------->|\n\
    \        |                             finish<======packets=========|\n      \
    \  |                                |                         |\n   MN-L2   :\
    \ Link Layer on Mobile Node\n   MN-L3   : Network Layer on Mobile Node\n   PAR-L3\
    \  : Network Layer on Previous Access Router\n   NAR-L3  : Network Layer on New\
    \ Access Router\n   req     : Request\n   cnf     : Confirm\n   ind     : Indication\n\
    \   RtSolPr : Router Solicitation for Proxy\n   PrRtAdv : Proxy Router Advertisement\n\
    \   FBU     : Fast Binding Update\n   FBack   : Fast Binding Acknowledgment\n\
    \   FNA     : Fast Neighbor Advertisement\n   HI      : Handover Initiate\n  \
    \ HAck    : Handover Acknowledge\n   Figure 4: L3-Driven Fast Handover Mechanism\
    \ with FMIPv6 Scenario 1\n   When MN establishes link connectivity to PAR, it\
    \ performs router\n   discovery.  MN sends an RtSolPr message to PAR to resolve\
    \ the access\n   point identifiers to the subnet router information.  To send\
    \ RtSolPr,\n   MN discovers one or more access points by sending L2-PoAList.request\n\
    \   to the link layer.  As a response to L2-PoAList.request,\n   L2-PoAList.confirm\
    \ returns with \"PoA List\" parameter that contains\n   identifiers and conditions\
    \ of nearby access points.  After initial AP\n   discovery, L2-PoAFound.indication\
    \ with \"PoA List\" is also sent from\n   the link layer when one or more access\
    \ points are discovered.\n   When the link layer of MN detects that radio signal\
    \ strength is\n   dropping, it sends L2-LinkStatusChanged.indication to the network\n\
    \   layer.  Then, MN sends the FBU message to PAR as the beginning of the\n  \
    \ L3 handover procedure.  The NCoA required for the FBU message is\n   determined\
    \ according to the MN's policy database and the received\n   PrRtAdv message.\
    \  As a response to the FBU message, MN receives the\n   FBack message and then\
    \ immediately switches its link by\n   L2-LinkConnect.request with the specific\
    \ \"PoA\" parameter.  The\n   handover policy of the MN is outside the scope of\
    \ this document.\n   After L2 handover, the link layer of the MN sends\n   L2-LinkUp.indication\
    \ to the network layer.  MN immediately sends the\n   FNA message to the New Access\
    \ Router (NAR).  The NAR will send\n   tunneled and buffered packets to MN.\n"
- title: B.2.  Example Operation-2 for FMIPv6
  contents:
  - "B.2.  Example Operation-2 for FMIPv6\n   Figure 5 shows the predictive mode of\
    \ FMIPv6 operation with an\n   L3-driven link-switching mechanism.\n      MN-L2\
    \                            MN-L3        PAR-L3\n        |                  \
    \              |             |\n       AP<----------PoAList.req----------|   \
    \          |\n      Scan----------PoAList.cnf--------->|             |\n     \
    \   |                                |---RtSolPr-->|\n        |              \
    \                  |<--PrRtAdv---|\n        |----------PoAFound.ind--------->|\
    \             |\n        |                                |---RtSolPr-->|\n  \
    \      |                                |<--PrRtAdv---|\n        |           \
    \                     |             |\n        ~                             \
    \   ~             ~\n        |                                |             |\n\
    \       Low                               |             |\n      Signal---LinkStatusChanged.ind---->|\
    \             |        NAR-L3\n        |                                |-----FBU---->|\
    \           |\n        |<-------LinkConnect.req---L3 Handover         |      \
    \     |\n    L2 Handover--LinkConnect.cnf-------->:             |           |\n\
    \        |                                |             |----HI---->|\n      \
    \  |                                |             |<--HAck----|\n        |   \
    \                             |     <-FBack-|---FBack-->|\n        |         \
    \                       |<----FBack---------------|\n        :               \
    \                 :                         |\n     finish---------LinkUp.ind---------->:\
    \                         |\n        |                                :-----------FNA---------->|\n\
    \        |                             finish<======packets=========|\n      \
    \  |                                |                         |\n   MN-L2   :\
    \ Link Layer on Mobile Node\n   MN-L3   : Network Layer on Mobile Node\n   PAR-L3\
    \  : Network Layer on Previous Access Router\n   NAR-L3  : Network Layer on New\
    \ Access Router\n   req     : Request\n   cnf     : Confirm\n   ind     : Indication\n\
    \   RtSolPr : Router Solicitation for Proxy\n   PrRtAdv : Proxy Router Advertisement\n\
    \   FBU     : Fast Binding Update\n   FBack   : Fast Binding Acknowledgment\n\
    \   FNA     : Fast Neighbor Advertisement\n   HI      : Handover Initiate\n  \
    \ HAck    : Handover Acknowledge\n   Figure 5: L3-Driven Fast Handover Mechanism\
    \ with FMIPv6 Scenario 2\n   Unlike scenario 1, MN in scenario 2 sends LinkConnect.req\
    \ from the\n   network layer to the link layer after MN sends the FBU message.\
    \  As\n   PAR sends the FBack messages not only to PAR's subnet but also to\n\
    \   NAR's subnet, MN can get the FBack message sent by PAR through NAR,\n   and\
    \ then it moves to NAR.\n"
- title: B.3.  Experiment
  contents:
  - "B.3.  Experiment\n   We implemented FMIPv6 and the proposed L2 primitives on\
    \ FreeBSD-5.4.\n   Figure 6 shows our test network.  MN is connected to access\
    \ routers\n   by using IEEE802.11a wireless LAN.  MN moves from PAR to NAR.\n\
    \                  |\n               +--+---+\n               |Router|\n     \
    \          +--+---+\n                  |                                 100BaseTX\n\
    \      ---+--------+---------+---------+---------+------------\n         |   \
    \               |         |         |\n      +--+--+            +--+--+   +--+--+\
    \   +--+--+\n      | PAR |            | NAR |   | HA  |   | CN  |\n      +-----+\
    \            +-----+   +-----+   +-----+\n         |                  |\n    \
    \      IEEE802.11a        IEEE802.11a         PAR, NAR: nexcom EBC\n         |Channel\
    \ 7         |Channel7            MN: ThinkPad X31\n                          \
    \                       OS: FreeBSD-5.4\n         |                  |       \
    \                 KAME/SHISA/TARZAN\n      +-----+            +-----+\n      |\
    \ MN  |  ------->  | MN  |\n      +-----+            +-----+\n      Figure 6:\
    \ Test Network\n   Scenario 1 was used in this experiment since it was more stable\
    \ than\n   scenario 2.  Upon receiving L2-LinkStatusChanged.indication, L3 of\
    \ MN\n   sent the FBU message and then received the FBack message.  It took\n\
    \   20ms from the transmission of the FBU message to the reception of the\n  \
    \ FBack message.  After receiving the FBack message, L3 of MN issued\n   L2-LinkConnect.request\
    \ to L2.  When L2 handover finished, L3 received\n   L2-LinkUp.indication from\
    \ L2.  It took 1ms for an L2 handover.  Next,\n   MN sent the FNA message to NAR.\
    \  Upon receiving the FNA message, NAR\n   started forwarding packets to NM. \
    \ ICMP echo request packets were\n   sent at 10ms intervals.  It was observed\
    \ that zero or one ICMP echo\n   reply packet was lost during a handover.\n  \
    \                MN                PAR                NAR\n                  |\
    \                  |                  |\n                  |----- RtSolPr --->|\
    \                  |\n                  |<---- PrRtAdv ----|                 \
    \ |\n                  |                  |                  |\n            +---\
    \  |------ FBU ------>|                  |\n            |     |              \
    \    |------- HI ------>|\n        20ms|     |                  |            \
    \      |\n            |     |                  |<----- HAck ------|\n        \
    \    |     |                  |                  |\n            +---  |<--------------\
    \ FBack -------------->|\n                  |                  |             \
    \     |\n            +-- disconnect           |                  |\n         \
    \   |  1ms|                  |                  |\n            |   connect   \
    \           |                  |\n      8-10ms|     |                  |     \
    \             |\n            |  7ms|                  |                  |\n \
    \           |     |                  |                  |\n            |     +-----\
    \ FNA -------------------------->|\n            +--   |<------------------------\
    \ deliver packets\n                  |                  |                  |\n\
    \                   Figure 7: Measured Results\n"
- title: Appendix C.  Example Mapping between L2 Primitives and the Primitives in
  contents:
  - "Appendix C.  Example Mapping between L2 Primitives and the Primitives in\n  \
    \           IEEE 802.11 and IEEE 802.16e\n   This section shows example mapping\
    \ between the L2 primitives and the\n   primitives in IEEE 802.11 [7] and IEEE\
    \ 802.16e [9] in Table 1.\n      +-------------------+----------------------+------------------+\n\
    \      | L2 Primitive      | IEEE802.11           | IEEE802.16e      |\n     \
    \ +-------------------+----------------------+------------------+\n      | L2-LinkStatus\
    \     | PMD_RSSI             | Available        |\n      |                   |\
    \                      |                  |\n      |                   | PMD_RATE\
    \             |                  |\n      |                   |              \
    \        |                  |\n      | L2-PoAList        | MLME-SCAN         \
    \   | M_ScanScheduling |\n      |                   |                      | \
    \                 |\n      |                   |                      | M_Scanning\
    \       |\n      |                   |                      |                \
    \  |\n      | L2-PoAFound       | MLME-SCAN            | M_Neighbor       |\n\
    \      |                   |                      |                  |\n     \
    \ |                   |                      | M_Scanning       |\n      |   \
    \                |                      |                  |\n      | L2-PoALost\
    \        | MLME-SCAN            | M_Neighbor       |\n      |                \
    \   |                      |                  |\n      |                   | \
    \                     | M_Scanning       |\n      |                   |      \
    \                |                  |\n      | L2-LinkUp         | MLME-ASSOCIATE\
    \       | M_Registration   |\n      |                   |                    \
    \  |                  |\n      |                   | MLME-AUTHENTICATE    |  \
    \                |\n      |                   |                      |       \
    \           |\n      | L2-LinkDown       | MLME-DEASSOCIATE     | M_Ranging  \
    \      |\n      |                   |                      |                 \
    \ |\n      |                   | MLME-DISAUTHENTICATE |                  |\n \
    \     |                   |                      |                  |\n      |\
    \ L2-StatusChanged  | PMD_RSSI             | M_Ranging        |\n      |     \
    \              |                      |                  |\n      |          \
    \         |                      | M_ScanReport     |\n      |               \
    \    |                      |                  |\n      |                   |\
    \                      | M_Scanning       |\n      |                   |     \
    \                 |                  |\n      | L2-LinkConnect    | MLME-JOIN\
    \            | M_MACHandover    |\n      |                   |               \
    \       |                  |\n      |                   | MLME-ASSOCIATE     \
    \  | M_HOIND          |\n      |                   |                      |  \
    \                |\n      |                   | MLME-REASSOCIATE     |       \
    \           |\n      |                   |                      |            \
    \      |\n      |                   | MLME-AUTHENTICATE    |                 \
    \ |\n      |                   |                      |                  |\n \
    \     | L2-LinkDisconnect | MLME-DISASSOCIATE    | M_Management     |\n      |\
    \                   |                      |                  |\n      |     \
    \              | MLME-DEASSOCIATE     | (Deregistration) |\n      +-------------------+----------------------+------------------+\n\
    \      Table 1: Mapping between L2 Primitives and the Primitives in\n        \
    \       IEEE 802.11 and IEEE 802.16e\n"
- title: Appendix D.  Example Mapping of Primitives and IEEE 802.11
  contents:
  - "Appendix D.  Example Mapping of Primitives and IEEE 802.11\n   This section shows\
    \ examples of the mapping between primitives and\n   IEEE 802.11 [7] parameters.\n"
- title: D.1.  L2-LinkStatus
  contents:
  - "D.1.  L2-LinkStatus\n   Most parameters of L2-LinkStatus are related to the configuration\
    \ of\n   network-interface hardware.  The operating system and the\n   device-driver\
    \ module can easily collect such information.  However,\n   to create the \"Condition\"\
    \ parameter, the MN should maintain\n   statistics and parameters related to the\
    \ current wireless\n   environment.\n   There are two sub-parameters of the \"\
    Condition\" parameter: available\n   bandwidth and link quality level.  The available\
    \ bandwidth of the\n   current PoA can be obtained by maintaining the transmission\
    \ rate\n   indication and the statistics of frame transmission every time a\n\
    \   frame is sent.  A link quality level can be updated by maintaining\n   the\
    \ following parameters and statistics every time a frame is\n   received: Received\
    \ Signal Strength Indicator (RSSI), transmission/\n   reception rate indication,\
    \ transmit/receive latency, bit-error rate,\n   frame-error rate, and noise level.\
    \  Link quality level is divided\n   into five levels: EXCELLENT, GOOD, FAIR,\
    \ BAD, and NONE, in descending\n   order.  Some parameters can be managed by setting\
    \ thresholds from\n   software.  When the parameters cross the threshold, an interrupt\
    \ is\n   generated for the software.\n"
- title: D.2.  L2-PoAList
  contents:
  - "D.2.  L2-PoAList\n   In IEEE 802.11 networks, L2-PoAList returns the detected\
    \ APs whose\n   quality level exceeds the specified threshold for PoA candidates\
    \ (by\n   the \"PoA List\" parameter).  Therefore, an MN should always maintain\n\
    \   the database of available access points according to reception of\n   beacon\
    \ frame, probe response frame, and all frames.  This AP database\n   is managed\
    \ in consideration of time, number of frames, and signal\n   strength.  There\
    \ are some kinds of network-interface hardware that\n   can notify events to operating\
    \ system only when the desired event\n   occurs by setting a threshold from software.\
    \  Moreover, MN can\n   transmit the probe request frame for access point discovery,\
    \ if\n   needed.\n"
- title: D.3.  L2-PoAFound
  contents:
  - "D.3.  L2-PoAFound\n   In IEEE 802.11 networks, L2-PoAFound is notified when new\
    \ PoAs whose\n   link quality level exceeds the specified threshold are detected\
    \ by\n   listening beacons or scanning APs.  If the received frame (mainly the\n\
    \   beacon or the probe response) is not in the AP database described in\n   Appendix\
    \ D.2, then the link layer creates L2-PoAFound.indication.\n   For example, if\
    \ the threshold of link quality level specified by\n   L2-PoAFound.request is\
    \ GOOD, L2-PoAFound.indication is created and\n   sent to the upper layer when\
    \ PoA's link quality becomes better than\n   GOOD.\n"
- title: D.4.  L2-PoALost
  contents:
  - "D.4.  L2-PoALost\n   In IEEE 802.11 networks, L2-PoALost is notified when an\
    \ AP included\n   in the list of candidate APs is lost by listening beacons or\
    \ scanning\n   APs.  If the entry in the AP database described in Appendix D.2\n\
    \   expires, or link quality level goes under the threshold, then the\n   link\
    \ layer creates L2-PoALost.indication.  To calculate the link\n   quality level,\
    \ the signal strength of the received frame (mainly the\n   beacon or the probe\
    \ response) can be used.  For example, if the\n   threshold of the link quality\
    \ specified by L2-PoALost is BAD,\n   L2-PoALost.indication is created and sent\
    \ to the upper layer when\n   PoA's link quality becomes worse than BAD.\n"
- title: D.5.  L2-LinkUp
  contents:
  - "D.5.  L2-LinkUp\n   In IEEE 802.11 networks, L2-LinkUp is notified when association\
    \ or\n   reassociation event occurs.  When such an event occurs, MN receives\n\
    \   the association response frame or the reassociation response frame.\n   Immediately\
    \ after receiving it, the link layer creates\n   L2-LinkUp.indication.\n"
- title: D.6.  L2-LinkDown
  contents:
  - "D.6.  L2-LinkDown\n   In IEEE 802.11 networks, L2-LinkDown is notified when a\n\
    \   disassociation event occurs or when no beacon is received during a\n   certain\
    \ time.  When such an event occurs, MN sends the disassociation\n   frame to AP,\
    \ or the entry of the specific AP is deleted from the AP\n   database described\
    \ in Appendix D.2.  By detecting such events, the\n   link layer creates an L2-LinkDown.indication.\n"
- title: D.7.  L2-LinkStatusChanged
  contents:
  - "D.7.  L2-LinkStatusChanged\n   In IEEE 802.11 networks, L2-LinkStatusChanged\
    \ is notified when the\n   radio signal strength of the connected AP drops below\
    \ the specified\n   threshold.\n"
- title: D.8.  L2-LinkConnect
  contents:
  - "D.8.  L2-LinkConnect\n   In IEEE 802.11 networks, each AP is identified by the\
    \ BSSID and the\n   service set of several APs is identified by the SSID.  When\n\
    \   L2-LinkConnect is used to connect a specific AP or a service set, the\n  \
    \ link layer should set the Basic Service Set Identifier (BSSID) or the\n   Service\
    \ Set Identifier (SSID).  Also, the channel should be set\n   appropriately at\
    \ the same time by searching the database described in\n   Appendix D.2.  To connect\
    \ to AP, MN should be authenticated by AP.\n   MN sends the authentication message\
    \ to AP, and then MN sends the\n   association message to associate with AP.\n"
- title: D.9.  L2-LinkDisconnect
  contents:
  - "D.9.  L2-LinkDisconnect\n   In IEEE 802.11 networks, MN sends the disassociation\
    \ message to AP\n   for disconnection.  When L2-LinkDisconnect is used for disconnection\n\
    \   from the current AP, the link layer should send the disassociation\n   message\
    \ to the appropriate AP, and stop data transmission.\n"
- title: Appendix E.  Implementation and Evaluation of the Proposed Model
  contents:
  - "Appendix E.  Implementation and Evaluation of the Proposed Model\n   This section\
    \ describes an implementation of the proposed link\n   indication architecture\
    \ and its evaluation.\n   An IEEE 802.11a wireless LAN device driver was modified\
    \ to provide\n   abstract link-layer information in the form of primitives defined\
    \ in\n   Section 4.  The modified driver has two AP lists.  One contains the\n\
    \   device-dependent information such as RSSI, retransmission count,\n   various\
    \ AP parameters, and various statistics.  The device-dependent\n   information,\
    \ except for the AP parameters, is updated whenever the\n   device receives a\
    \ frame.  If the received frame is the management\n   frame, the AP parameters\
    \ are also updated according to the parameters\n   in the frame.\n   Another AP\
    \ list contains the abstract information.  The abstract\n   information is updated\
    \ periodically by using the device-dependent\n   information.  In the abstraction\
    \ processing, for example, RSSI or the\n   retransmission count is converted to\
    \ the common indicator \"link\n   quality\".  In our outdoor testbed described\
    \ below, the thresholds of\n   the RSSI value between the link quality levels\
    \ were defined as\n   follows:\n   o  EXCELLENT -- 34 -- GOOD\n   o  GOOD -- 27\
    \ -- FAIR\n   o  FIAR -- 22 -- BAD\n   o  BAD -- 15 -- NONE\n   L2-PoAList and\
    \ L2-LinkStatus were implemented by using only the\n   abstract information. \
    \ Thus, the upper layers can use information of\n   the current AP and the adjacent\
    \ APs without depending on the devices.\n   L2-PoAFound or L2-PoALost is notified\
    \ if the link quality rises or\n   falls beyond the thresholds when the abstract\
    \ information is updated.\n   If the link quality of the current AP goes below\
    \ the specific\n   threshold, L2-LinkStatusChanged is notified.  L2-LinkUp or\n\
    \   L2-LinkDown is notified when an association with an AP is established\n  \
    \ or destroyed.  To realize L2-LinkConnect and L2-LinkDisconnect,\n   functions\
    \ to connect or disconnect to the specified AP were\n   implemented.  In these\
    \ functions, since only abstract information is\n   needed to specify the AP,\
    \ other layers need not know the\n   device-dependent information.\n   In our\
    \ outdoor testbed, there are eight Access Routers (ARs) located\n   at 80-100m\
    \ intervals.  AP is collocated at AR.  IEEE 802.11a was used\n   as the link layer.\
    \  The same wireless channel was used at all APs.\n   Thus, there are eight wireless\
    \ IPv6 subnets in the testbed.  The\n   mobile node was in a car moving at a speed\
    \ of 30-40 km/h.  When link\n   quality of the current AP goes down, the mobile\
    \ node executes\n   L3-driven handover, described in Appendix A.  An application\
    \ called\n   Digital Video Transport System (DVTS) was running on the mobile node\n\
    \   and sent digital video data at a data rate of about 15Mbps through\n   the\
    \ wireless IPv6 subnet to the correspondent node, which replayed\n   received\
    \ digital video data.  In this environment, the L2 handover\n   required less\
    \ than 1 msec, and the mobility protocol Location\n   Independent Networking in\
    \ IPv6 (LIN6) [13] required a few msecs for\n   location registration.  Thus,\
    \ the total gap time due to the handover\n   was 3-4 msec.  In most cases, there\
    \ was no effect on the replayed\n   pictures due to handover.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Fumio Teraoka\n   Faculty of Science and Technology, KEIO\
    \ University\n   3-14-1 Hiyoshi, Kohoku-ku\n   Yokohama, Kanagawa  223-8522\n\
    \   Japan\n   Phone: +81-45-566-1425\n   EMail: tera@ics.keio.ac.jp\n   URI: \
    \  http://www.tera.ics.keio.ac.jp/\n   Kazutaka Gogo\n   Graduate School of Science\
    \ and Technology, KEIO University\n   3-14-1 Hiyoshi, Kohoku-ku\n   Yokohama,\
    \ Kanagawa  223-8522\n   Japan\n   Phone: +81-45-566-1425\n   EMail: gogo@tera.ics.keio.ac.jp\n\
    \   URI:   http://www.tera.ics.keio.ac.jp/\n   Koshiro Mitsuya\n   Jun Murai Lab,\
    \ Shonan Fujisawa Campus, KEIO University\n   5322 Endo\n   Fujisawa, Kanagawa\
    \  252-8520\n   Japan\n   Phone: +81-466-49-1100\n   EMail: mitsuya@sfc.wide.ad.jp\n\
    \   Rie Shibui\n   Graduate School of Science and Technology, KEIO University\n\
    \   3-14-1 Hiyoshi, Kohoku-ku\n   Yokohama, Kanagawa  223-8522\n   Japan\n   Phone:\
    \ +81-45-566-1425\n   EMail: shibrie@tera.ics.keio.ac.jp\n   URI:   http://www.tera.ics.keio.ac.jp/\n\
    \   Koki Mitani\n   Graduate School of Science and Technology, KEIO University\n\
    \   3-14-1 Hiyoshi, Kohoku-ku\n   Yokohama, Kanagawa  223-8522\n   Japan\n   Phone:\
    \ +81-45-566-1425\n   EMail: koki@tera.ics.keio.ac.jp\n   URI:   http://www.tera.ics.keio.ac.jp/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78\
    \ and at http://www.rfc-editor.org/copyright.html,\n   and except as set forth\
    \ therein, the authors retain all their rights.\n   This document and the information\
    \ contained herein are provided on an\n   \"AS IS\" basis and THE CONTRIBUTOR,\
    \ THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED BY (IF ANY), THE INTERNET\
    \ SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING TASK FORCE DISCLAIM\
    \ ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY\
    \ THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\
    \ IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
