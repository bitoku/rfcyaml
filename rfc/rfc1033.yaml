- title: __initial_text__
  contents:
  - '                 DOMAIN ADMINISTRATORS OPERATIONS GUIDE

    '
- title: STATUS OF THIS MEMO
  contents:
  - "STATUS OF THIS MEMO\n   This RFC provides guidelines for domain administrators\
    \ in operating a\n   domain server and maintaining their portion of the hierarchical\n\
    \   database.  Familiarity with the domain system is assumed.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: ACKNOWLEDGMENTS
  contents:
  - "ACKNOWLEDGMENTS\n   This memo is a formatted collection of notes and excerpts\
    \ from the\n   references listed at the end of this document.  Of particular mention\n\
    \   are Paul Mockapetris and Kevin Dunlap.\n"
- title: INTRODUCTION
  contents:
  - "INTRODUCTION\n   A domain server requires a few files to get started.  It will\n\
    \   normally have some number of boot/startup files (also known as the\n   \"\
    safety belt\" files).  One section will contain a list of possible\n   root servers\
    \ that the server will use to find the up-to-date list of\n   root servers.  Another\
    \ section will list the zone files to be loaded\n   into the server for your local\
    \ domain information.  A zone file\n   typically contains all the data for a particular\
    \ domain.  This guide\n   describes the data formats that can be used in zone\
    \ files and\n   suggested parameters to use for certain fields.  If you are\n\
    \   attempting to do anything advanced or tricky, consult the appropriate\n  \
    \ domain RFC's for more details.\n   Note:  Each implementation of domain software\
    \ may require different\n   files.  Zone files are standardized but some servers\
    \ may require\n   other startup files.  See the appropriate documentation that\
    \ comes\n   with your software.  See the appendix for some specific examples.\n"
- title: ZONES
  contents:
  - "ZONES\n   A zone defines the contents of a contiguous section of the domain\n\
    \   space, usually bounded by administrative boundaries.  There will\n   typically\
    \ be a separate data file for each zone.  The data contained\n   in a zone file\
    \ is composed of entries called Resource Records (RRs).\n   You may only put data\
    \ in your domain server that you are\n   authoritative for.  You must not add\
    \ entries for domains other than\n   your own (except for the special case of\
    \ \"glue records\").\n   A domain server will probably read a file on start-up\
    \ that lists the\n   zones it should load into its database.  The format of this\
    \ file is\n   not standardized and is different for most domain server\n   implementations.\
    \  For each zone it will normally contain the domain\n   name of the zone and\
    \ the file name that contains the data to load for\n   the zone.\n"
- title: ROOT SERVERS
  contents:
  - "ROOT SERVERS\n   A resolver will need to find the root servers when it first\
    \ starts.\n   When the resolver boots, it will typically read a list of possible\n\
    \   root servers from a file.\n   The resolver will cycle through the list trying\
    \ to contact each one.\n   When it finds a root server, it will ask it for the\
    \ current list of\n   root servers.  It will then discard the list of root servers\
    \ it read\n   from the data file and replace it with the current list it received.\n\
    \   Root servers will not change very often.  You can get the names of\n   current\
    \ root servers from the NIC.\n   FTP the file NETINFO:ROOT-SERVERS.TXT or send\
    \ a mail request to\n   NIC@SRI-NIC.ARPA.\n   As of this date (June 1987) they\
    \ are:\n           SRI-NIC.ARPA       10.0.0.51    26.0.0.73\n           C.ISI.EDU\
    \          10.0.0.52\n           BRL-AOS.ARPA       192.5.25.82  192.5.22.82 \
    \  128.20.1.2\n           A.ISI.EDU          26.3.0.103\n"
- title: RESOURCE RECORDS
  contents:
  - "RESOURCE RECORDS\n   Records in the zone data files are called resource records\
    \ (RRs).\n   They are specified in RFC-883 and RFC-973.  An RR has a standard\n\
    \   format as shown:\n           <name>   [<ttl>]   [<class>]   <type>   <data>\n\
    \   The record is divided into fields which are separated by white space.\n  \
    \    <name>\n         The name field defines what domain name applies to the given\n\
    \         RR.  In some cases the name field can be left blank and it will\n  \
    \       default to the name field of the previous RR.\n      <ttl>\n         TTL\
    \ stands for Time To Live.  It specifies how long a domain\n         resolver\
    \ should cache the RR before it throws it out and asks a\n         domain server\
    \ again.  See the section on TTL's.  If you leave\n         the TTL field blank\
    \ it will default to the minimum time\n         specified in the SOA record (described\
    \ later).\n      <class>\n         The class field specifies the protocol group.\
    \  If left blank it\n         will default to the last class specified.\n    \
    \  <type>\n         The type field specifies what type of data is in the RR. \
    \ See\n         the section on types.\n      <data>\n         The data field is\
    \ defined differently for each type and class\n         of data.  Popular RR data\
    \ formats are described later.\n   The domain system does not guarantee to preserve\
    \ the order of\n   resource records.  Listing RRs (such as multiple address records)\
    \ in\n   a certain order does not guarantee they will be used in that order.\n\
    \   Case is preserved in names and data fields when loaded into the name\n   server.\
    \  All comparisons and lookups in the name server are case\n   insensitive.\n\
    \   Parenthesis (\"(\",\")\") are used to group data that crosses a line\n   boundary.\n\
    \   A semicolon (\";\") starts a comment; the remainder of the line is\n   ignored.\n\
    \   The asterisk (\"*\") is used for wildcarding.\n   The at-sign (\"@\") denotes\
    \ the current default domain name.\n"
- title: NAMES
  contents:
  - "NAMES\n   A domain name is a sequence of labels separated by dots.\n   Domain\
    \ names in the zone files can be one of two types, either\n   absolute or relative.\
    \  An absolute name is the fully qualified domain\n   name and is terminated with\
    \ a period.  A relative name does not\n   terminate with a period, and the current\
    \ default domain is appended\n   to it.  The default domain is usually the name\
    \ of the domain that was\n   specified in the boot file that loads each zone.\n\
    \   The domain system allows a label to contain any 8-bit character.\n   Although\
    \ the domain system has no restrictions, other protocols such\n   as SMTP do have\
    \ name restrictions.  Because of other protocol\n   restrictions, only the following\
    \ characters are recommended for use\n   in a host name (besides the dot separator):\n\
    \           \"A-Z\", \"a-z\", \"0-9\", dash and underscore\n"
- title: TTL's  (Time To Live)
  contents:
  - "TTL's  (Time To Live)\n   It is important that TTLs are set to appropriate values.\
    \  The TTL is\n   the time (in seconds) that a resolver will use the data it got\
    \ from\n   your server before it asks your server again.  If you set the value\n\
    \   too low, your server will get loaded down with lots of repeat\n   requests.\
    \  If you set it too high, then information you change will\n   not get distributed\
    \ in a reasonable amount of time.  If you leave the\n   TTL field blank, it will\
    \ default to what is specified in the SOA\n   record for the zone.\n   Most host\
    \ information does not change much over long time periods.  A\n   good way to\
    \ set up your TTLs would be to set them at a high value,\n   and then lower the\
    \ value if you know a change will be coming soon.\n   You might set most TTLs\
    \ to anywhere between a day (86400) and a week\n   (604800).  Then, if you know\
    \ some data will be changing in the near\n   future, set the TTL for that RR down\
    \ to a lower value (an hour to a\n   day) until the change takes place, and then\
    \ put it back up to its\n   previous value.\n   Also, all RRs with the same name,\
    \ class, and type should have the\n   same TTL value.\n"
- title: CLASSES
  contents:
  - "CLASSES\n   The domain system was designed to be protocol independent.  The class\n\
    \   field is used to identify the protocol group that each RR is in.\n   The class\
    \ of interest to people using TCP/IP software is the class\n   \"Internet\". \
    \ Its standard designation is \"IN\".\n   A zone file should only contain RRs\
    \ of the same class.\n"
- title: TYPES
  contents:
  - "TYPES\n   There are many defined RR types.  For a complete list, see the domain\n\
    \   specification RFCs.  Here is a list of current commonly used types.\n   The\
    \ data for each type is described in the data section.\n                Designation\
    \                Description\n              ==========================================\n\
    \               SOA                 Start Of Authority\n               NS    \
    \              Name Server\n               A                   Internet Address\n\
    \               CNAME               Canonical Name (nickname pointer)\n      \
    \         HINFO               Host Information\n               WKS           \
    \      Well Known Services\n               MX                  Mail Exchanger\n\
    \               PTR                 Pointer\n"
- title: SOA  (Start Of Authority)
  contents:
  - "SOA  (Start Of Authority)\n           <name>  [<ttl>]  [<class>]  SOA  <origin>\
    \  <person>  (\n                           <serial>\n                        \
    \   <refresh>\n                           <retry>\n                          \
    \ <expire>\n                           <minimum> )\n   The Start Of Authority\
    \ record designates the start of a zone.  The\n   zone ends at the next SOA record.\n\
    \   <name> is the name of the zone.\n   <origin> is the name of the host on which\
    \ the master zone file\n   resides.\n   <person> is a mailbox for the person responsible\
    \ for the zone.  It is\n   formatted like a mailing address but the at-sign that\
    \ normally\n   separates the user from the host name is replaced with a dot.\n\
    \   <serial> is the version number of the zone file.  It should be\n   incremented\
    \ anytime a change is made to data in the zone.\n   <refresh> is how long, in\
    \ seconds, a secondary name server is to\n   check with the primary name server\
    \ to see if an update is needed.  A\n   good value here would be one hour (3600).\n\
    \   <retry> is how long, in seconds, a secondary name server is to retry\n   after\
    \ a failure to check for a refresh.  A good value here would be\n   10 minutes\
    \ (600).\n   <expire> is the upper limit, in seconds, that a secondary name server\n\
    \   is to use the data before it expires for lack of getting a refresh.\n   You\
    \ want this to be rather large, and a nice value is 3600000, about\n   42 days.\n\
    \   <minimum> is the minimum number of seconds to be used for TTL values\n   in\
    \ RRs.  A minimum of at least a day is a good value here (86400).\n   There should\
    \ only be one SOA record per zone.  A sample SOA record\n   would look something\
    \ like:\n           @   IN   SOA   SRI-NIC.ARPA.   HOSTMASTER.SRI-NIC.ARPA. (\n\
    \                           45         ;serial\n                           3600\
    \       ;refresh\n                           600        ;retry\n             \
    \              3600000    ;expire\n                           86400 )    ;minimum\n"
- title: NS  (Name Server)
  contents:
  - "NS  (Name Server)\n           <domain>   [<ttl>] [<class>]   NS   <server>\n\
    \   The NS record lists the name of a machine that provides domain\n   service\
    \ for a particular domain.  The name associated with the RR is\n   the domain\
    \ name and the data portion is the name of a host that\n   provides the service.\
    \  If machines SRI-NIC.ARPA and C.ISI.EDU provide\n   name lookup service for\
    \ the domain COM then the following entries\n   would be used:\n           COM.\
    \    NS      SRI-NIC.ARPA.\n                   NS      C.ISI.EDU.\n   Note that\
    \ the machines providing name service do not have to live in\n   the named domain.\
    \  There should be one NS record for each server for\n   a domain.  Also note\
    \ that the name \"COM\" defaults for the second NS\n   record.\n   NS records\
    \ for a domain exist in both the zone that delegates the\n   domain, and in the\
    \ domain itself.\n"
- title: GLUE RECORDS
  contents:
  - "GLUE RECORDS\n   If the name server host for a particular domain is itself inside\
    \ the\n   domain, then a 'glue' record will be needed.  A glue record is an A\n\
    \   (address) RR that specifies the address of the server.  Glue records\n   are\
    \ only needed in the server delegating the domain, not in the\n   domain itself.\
    \  If for example the name server for domain SRI.COM was\n   KL.SRI.COM, then\
    \ the NS record would look like this, but you will\n   also need to have the following\
    \ A record.\n           SRI.COM.  NS\n           KL.SRI.COM.  KL.SRI.COM.  A 10.1.0.2.\n"
- title: A  (Address)
  contents:
  - "A  (Address)\n           <host>   [<ttl>] [<class>]   A   <address>\n   The data\
    \ for an A record is an internet address in dotted decimal\n   form.  A sample\
    \ A record might look like:\n           SRI-NIC.ARPA.           A       10.0.0.51\n\
    \   There should be one A record for each address of a host.\n"
- title: CNAME ( Canonical Name)
  contents:
  - "CNAME ( Canonical Name)\n           <nickname>   [<ttl>] [<class>]   CNAME  \
    \ <host>\n   The CNAME record is used for nicknames.  The name associated with\
    \ the\n   RR is the nickname.  The data portion is the official name.  For\n \
    \  example, a machine named SRI-NIC.ARPA may want to have the nickname\n   NIC.ARPA.\
    \  In that case, the following RR would be used:\n           NIC.ARPA.       CNAME\
    \   SRI-NIC.ARPA.\n   There must not be any other RRs associated with a nickname\
    \ of the\n   same class.\n   Nicknames are also useful when a host changes it's\
    \ name.  In that\n   case, it is usually a good idea to have a CNAME pointer so\
    \ that\n   people still using the old name will get to the right place.\n"
- title: HINFO (Host Info)
  contents:
  - "HINFO (Host Info)\n           <host>   [<ttl>] [<class>]   HINFO   <hardware>\
    \   <software>\n   The HINFO record gives information about a particular host.\
    \  The data\n   is two strings separated by whitespace.  The first string is a\n\
    \   hardware description and the second is software.  The hardware is\n   usually\
    \ a manufacturer name followed by a dash and model designation.\n   The software\
    \ string is usually the name of the operating system.\n   Official HINFO types\
    \ can be found in the latest Assigned Numbers RFC,\n   the latest of which is\
    \ RFC-1010.  The Hardware type is called the\n   Machine name and the Software\
    \ type is called the System name.\n   Some sample HINFO records:\n           SRI-NIC.ARPA.\
    \           HINFO   DEC-2060 TOPS20\n           UCBARPA.Berkeley.EDU.   HINFO\
    \   VAX-11/780 UNIX\n"
- title: WKS (Well Known Services)
  contents:
  - "WKS (Well Known Services)\n           <host> [<ttl>] [<class>] WKS <address>\
    \ <protocol> <services>\n   The WKS record is used to list Well Known Services\
    \ a host provides.\n   WKS's are defined to be services on port numbers below\
    \ 256.  The WKS\n   record lists what services are available at a certain address\
    \ using a\n   certain protocol.  The common protocols are TCP or UDP.  A sample\
    \ WKS\n   record for a host offering the same services on all address would\n\
    \   look like:\n   Official protocol names can be found in the latest Assigned\
    \ Numbers\n   RFC, the latest of which is RFC-1010.\n           SRI-NIC.ARPA.\
    \   WKS  10.0.0.51  TCP  TELNET FTP SMTP\n                           WKS  10.0.0.51\
    \  UDP  TIME\n                           WKS  26.0.0.73  TCP  TELNET FTP SMTP\n\
    \                           WKS  26.0.0.73  UDP  TIME\n"
- title: MX (Mail Exchanger)  (See RFC-974 for more details.)
  contents:
  - "MX (Mail Exchanger)  (See RFC-974 for more details.)\n           <name>   [<ttl>]\
    \ [<class>]   MX   <preference>   <host>\n   MX records specify where mail for\
    \ a domain name should be delivered.\n   There may be multiple MX records for\
    \ a particular name.  The\n   preference value specifies the order a mailer should\
    \ try multiple MX\n   records when delivering mail.  Zero is the highest preference.\n\
    \   Multiple records for the same name may have the same preference.\n   A host\
    \ BAR.FOO.COM may want its mail to be delivered to the host\n   PO.FOO.COM and\
    \ would then use the MX record:\n           BAR.FOO.COM.    MX      10      PO.FOO.COM.\n\
    \   A host BAZ.FOO.COM may want its mail to be delivered to one of three\n   different\
    \ machines, in the following order:\n           BAZ.FOO.COM.    MX      10   \
    \   PO1.FOO.COM.\n                           MX      20      PO2.FOO.COM.\n  \
    \                         MX      30      PO3.FOO.COM.\n   An entire domain of\
    \ hosts not connected to the Internet may want\n   their mail to go through a\
    \ mail gateway that knows how to deliver\n   mail to them.  If they would like\
    \ mail addressed to any host in the\n   domain FOO.COM to go through the mail\
    \ gateway they might use:\n           FOO.COM.        MX       10     RELAY.CS.NET.\n\
    \           *.FOO.COM.      MX       20     RELAY.CS.NET.\n   Note that you can\
    \ specify a wildcard in the MX record to match on\n   anything in FOO.COM, but\
    \ that it won't match a plain FOO.COM.\n"
- title: IN-ADDR.ARPA
  contents:
  - "IN-ADDR.ARPA\n   The structure of names in the domain system is set up in a\n\
    \   hierarchical way such that the address of a name can be found by\n   tracing\
    \ down the domain tree contacting a server for each label of\n   the name.  Because\
    \ of this 'indexing' based on name, there is no easy\n   way to translate a host\
    \ address back into its host name.\n   In order to do the reverse translation\
    \ easily, a domain was created\n   that uses hosts' addresses as part of a name\
    \ that then points to the\n   data for that host.  In this way, there is now an\
    \ 'index' to hosts'\n   RRs based on their address.  This address mapping domain\
    \ is called\n   IN-ADDR.ARPA.  Within that domain are subdomains for each network,\n\
    \   based on network number.  Also, for consistency and natural\n   groupings,\
    \ the 4 octets of a host number are reversed.\n   For example, the ARPANET is\
    \ net 10.  That means there is a domain\n   called 10.IN-ADDR.ARPA.  Within this\
    \ domain there is a PTR RR at\n   51.0.0.10.IN-ADDR that points to the RRs for\
    \ the host SRI-NIC.ARPA\n   (who's address is 10.0.0.51).  Since the NIC is also\
    \ on the MILNET\n   (Net 26, address 26.0.0.73), there is also a PTR RR at 73.0.0.26.IN-\n\
    \   ADDR.ARPA that points to the same RR's for SRI-NIC.ARPA.  The format\n   of\
    \ these special pointers is defined below along with the examples\n   for the\
    \ NIC.\n"
- title: PTR
  contents:
  - "PTR\n           <special-name>   [<ttl>] [<class>]   PTR   <name>\n   The PTR\
    \ record is used to let special names point to some other\n   location in the\
    \ domain tree.  They are mainly used in the IN-\n   ADDR.ARPA records for translation\
    \ of addresses to names.  PTR's\n   should use official names and not aliases.\n\
    \   For example, host SRI-NIC.ARPA with addresses 10.0.0.51 and 26.0.0.73\n  \
    \ would have the following records in the respective zone files for net\n   10\
    \ and net 26:\n           51.0.0.10.IN-ADDR.ARPA.  PTR   SRI-NIC.ARPA.\n     \
    \      73.0.0.26.IN-ADDR.ARPA.  PTR   SRI-NIC.ARPA.\n"
- title: GATEWAY PTR's
  contents:
  - "GATEWAY PTR's\n   The IN-ADDR tree is also used to locate gateways on a particular\n\
    \   network.  Gateways have the same kind of PTR RRs as hosts (as above)\n   but\
    \ in addition they have other PTRs used to locate them by network\n   number alone.\
    \  These records have only 1, 2, or 3 octets as part of\n   the name depending\
    \ on whether they are class A, B, or C networks,\n   respectively.\n   Lets take\
    \ the SRI-CSL gateway for example.  It connects 3 different\n   networks, one\
    \ class A, one class B and one class C.  It will have the\n   standard RR's for\
    \ a host in the CSL.SRI.COM zone:\n           GW.CSL.SRI.COM.    A    10.2.0.2\n\
    \                              A    128.18.1.1\n                             \
    \ A    192.12.33.2\n   Also, in 3 different zones (one for each network), it will\
    \ have one\n   of the following number to name translation pointers:\n       \
    \    2.0.2.10.IN-ADDR.ARPA.      PTR   GW.CSL.SRI.COM.\n           1.1.18.128.IN-ADDR.ARPA.\
    \    PTR   GW.CSL.SRI.COM.\n           1.33.12.192.IN-ADDR.ARPA.   PTR   GW.CSL.SRI.COM.\n\
    \   In addition, in each of the same 3 zones will be one of the following\n  \
    \ gateway location pointers:\n           10.IN-ADDR.ARPA.            PTR   GW.CSL.SRI.COM.\n\
    \           18.128.IN-ADDR.ARPA.        PTR   GW.CSL.SRI.COM.\n           33.12.192.IN-ADDR.ARPA.\
    \     PTR   GW.CSL.SRI.COM.\n"
- title: INSTRUCTIONS
  contents:
  - "INSTRUCTIONS\n   Adding a subdomain.\n      To add a new subdomain to your domain:\n\
    \         Setup the other domain server and/or the new zone file.\n         Add\
    \ an NS record for each server of the new domain to the zone\n         file of\
    \ the parent domain.\n         Add any necessary glue RRs.\n   Adding a host.\n\
    \      To add a new host to your zone files:\n         Edit the appropriate zone\
    \ file for the domain the host is in.\n         Add an entry for each address\
    \ of the host.\n         Optionally add CNAME, HINFO, WKS, and MX records.\n \
    \        Add the reverse IN-ADDR entry for each host address in the\n        \
    \ appropriate zone files for each network the host in on.\n   Deleting a host.\n\
    \      To delete a host from the zone files:\n         Remove all the hosts' resource\
    \ records from the zone file of\n         the domain the host is in.\n       \
    \  Remove all the hosts' PTR records from the IN-ADDR zone files\n         for\
    \ each network the host was on.\n   Adding gateways.\n         Follow instructions\
    \ for adding a host.\n         Add the gateway location PTR records for each network\
    \ the\n         gateway is on.\n   Deleting gateways.\n         Follow instructions\
    \ for deleting a host.\n         Also delete the gateway location PTR records\
    \ for each network\n         the gateway was on.\n"
- title: COMPLAINTS
  contents:
  - "COMPLAINTS\n   These are the suggested steps you should take if you are having\n\
    \   problems that you believe are caused by someone else's name server:\n   1.\
    \  Complain privately to the responsible person for the domain.  You\n   can find\
    \ their mailing address in the SOA record for the domain.\n   2.  Complain publicly\
    \ to the responsible person for the domain.\n   3.  Ask the NIC for the administrative\
    \ person responsible for the\n   domain.  Complain.  You can also find domain\
    \ contacts on the NIC in\n   the file NETINFO:DOMAIN-CONTACTS.TXT\n   4.  Complain\
    \ to the parent domain authorities.\n   5.  Ask the parent authorities to excommunicate\
    \ the domain.\n"
- title: EXAMPLE DOMAIN SERVER DATABASE FILES
  contents:
  - "EXAMPLE DOMAIN SERVER DATABASE FILES\n   The following examples show how zone\
    \ files are set up for a typical\n   organization.  SRI will be used as the example\
    \ organization.  SRI has\n   decided to divided their domain SRI.COM into a few\
    \ subdomains, one\n   for each group that wants one.  The subdomains are CSL and\
    \ ISTC.\n   Note the following interesting items:\n      There are both hosts\
    \ and domains under SRI.COM.\n      CSL.SRI.COM is both a domain name and a host\
    \ name.\n      All the domains are serviced by the same pair of domain servers.\n\
    \      All hosts at SRI are on net 128.18 except hosts in the CSL domain\n   \
    \   which are on net 192.12.33.  Note that a domain does not have to\n      correspond\
    \ to a physical network.\n      The examples do not necessarily correspond to\
    \ actual data in use\n      by the SRI domain.\n                       SRI Domain\
    \ Organization\n                               +-------+\n                   \
    \            |  COM  |\n                               +-------+\n           \
    \                        |\n                               +-------+\n       \
    \                        |  SRI  |\n                               +-------+\n\
    \                                   |\n                        +----------++-----------+\n\
    \                        |           |           |\n                    +-------+\
    \    +------+   +-------+\n                    |  CSL  |    | ISTC |   | Hosts\
    \ |\n                    +-------+    +------+   +-------+\n                 \
    \       |           |\n                    +-------+    +-------+\n          \
    \          | Hosts |    | Hosts |\n                    +-------+    +-------+\n\
    \   [File \"CONFIG.CMD\".  Since bootstrap files are not standardized, this\n\
    \   file is presented using a pseudo configuration file syntax.]\n   load root\
    \ server list             from file ROOT.SERVERS\n   load zone SRI.COM.      \
    \          from file SRI.ZONE\n   load zone CSL.SRI.COM.            from file\
    \ CSL.ZONE\n   load zone ISTC.SRI.COM.           from file ISTC.ZONE\n   load\
    \ zone 18.128.IN-ADDR.ARPA.    from file SRINET.ZONE\n   load zone 33.12.192.IN-ADDR.ARPA.\
    \ from file SRI-CSL-NET.ZONE\n   [File \"ROOT.SERVERS\".  Again, the format of\
    \ this file is not\n   standardized.]\n   ;list of possible root servers\n   SRI-NIC.ARPA\
    \       10.0.0.51    26.0.0.73\n   C.ISI.EDU          10.0.0.52\n   BRL-AOS.ARPA\
    \       192.5.25.82  192.5.22.82   128.20.1.2\n   A.ISI.EDU          26.3.0.103\n\
    \   [File \"SRI.ZONE\"]\n   SRI.COM.        IN      SOA     KL.SRI.COM. DLE.STRIPE.SRI.COM.\
    \ (\n                                   870407  ;serial\n                    \
    \               1800    ;refresh every 30 minutes\n                          \
    \         600     ;retry every 10 minutes\n                                  \
    \ 604800  ;expire after a week\n                                   86400   ;default\
    \ of an hour\n                                   )\n   SRI.COM.        NS    \
    \  KL.SRI.COM.\n                   NS      STRIPE.SRI.COM.\n                 \
    \  MX      10      KL.SRI.COM.\n   ;SRI.COM hosts\n   KL              A      \
    \ 10.1.0.2\n                   A       128.18.10.6\n                   MX    \
    \  10      KL.SRI.COM.\n   STRIPE          A       10.4.0.2\n   STRIPE       \
    \   A       128.18.10.4\n                   MX      10      STRIPE.SRI.COM.\n\
    \   NIC             CNAME   SRI-NIC.ARPA.\n   Blackjack       A       128.18.2.1\n\
    \                   HINFO   VAX-11/780      UNIX\n                   WKS     128.18.2.1\
    \      TCP TELNET FTP\n   CSL             A       192.12.33.2\n              \
    \     HINFO   FOONLY-F4       TOPS20\n                   WKS     192.12.33.2 \
    \    TCP TELNET FTP SMTP FINGER\n                   MX      10      CSL.SRI.COM.\n\
    \   [File \"CSL.ZONE\"]\n   CSL.SRI.COM.    IN      SOA     KL.SRI.COM. DLE.STRIPE.SRI.COM.\
    \ (\n                                   870330  ;serial\n                    \
    \               1800    ;refresh every 30 minutes\n                          \
    \         600     ;retry every 10 minutes\n                                  \
    \ 604800  ;expire after a week\n                                   86400   ;default\
    \ of a day\n                                   )\n   CSL.SRI.COM.    NS      \
    \        KL.SRI.COM.\n                   NS              STRIPE.SRI.COM.\n   \
    \                A               192.12.33.2\n   ;CSL.SRI.COM hosts\n   A    \
    \           CNAME   CSL.SRI.COM.\n   B               A       192.12.33.3\n   \
    \                HINFO   FOONLY-F4       TOPS20\n                   WKS     192.12.33.3\
    \     TCP TELNET FTP SMTP\n   GW              A       10.2.0.2\n             \
    \      A       192.12.33.1\n                   A       128.18.1.1\n          \
    \         HINFO   PDP-11/23       MOS\n   SMELLY          A       192.12.33.4\n\
    \                   HINFO   IMAGEN          IMAGEN\n   SQUIRREL        A     \
    \  192.12.33.5\n                   HINFO   XEROX-1100      INTERLISP\n   VENUS\
    \           A       192.12.33.7\n                   HINFO   SYMBOLICS-3600  LISPM\n\
    \   HELIUM          A       192.12.33.30\n                   HINFO   SUN-3/160\
    \       UNIX\n   ARGON           A       192.12.33.31\n                   HINFO\
    \   SUN-3/75        UNIX\n   RADON           A       192.12.33.32\n          \
    \         HINFO   SUN-3/75        UNIX\n   [File \"ISTC.ZONE\"]\n   ISTC.SRI.COM.\
    \   IN  SOA     KL.SRI.COM. roemers.JOYCE.ISTC.SRI.COM. (\n                  \
    \             870406      ;serial\n                               1800       \
    \ ;refresh every 30 minutes\n                               600         ;retry\
    \ every 10 minutes\n                               604800      ;expire after a\
    \ week\n                               86400       ;default of a day\n       \
    \                        )\n   ISTC.SRI.COM.   NS              KL.SRI.COM.\n \
    \                  NS              STRIPE.SRI.COM.\n                   MX    \
    \          10      SPAM.ISTC.SRI.COM.\n   ; ISTC hosts\n   joyce           A \
    \      128.18.4.2\n                   HINFO   VAX-11/750 UNIX\n   bozo       \
    \     A       128.18.0.6\n                   HINFO   SUN UNIX\n   sundae     \
    \     A       128.18.0.11\n                   HINFO   SUN UNIX\n   tsca      \
    \      A       128.18.0.201\n                   A       10.3.0.2\n           \
    \        HINFO   VAX-11/750 UNIX\n                   MX      10  TSCA.ISTC.SRI.COM.\n\
    \   tsc             CNAME   tsca\n   prmh            A       128.18.0.203\n  \
    \                 A       10.2.0.51\n                   HINFO   PDP-11/44 UNIX\n\
    \   spam            A       128.18.4.3\n                   A       10.2.0.107\n\
    \                   HINFO   VAX-11/780 UNIX\n                   MX      10  SPAM.ISTC.SRI.COM.\n\
    \   [File \"SRINET.ZONE\"]\n   18.128.IN-ADDR.ARPA.    IN  SOA  KL.SRI.COM  DLE.STRIPE.SRI.COM.\
    \ (\n                               870406  ;serial\n                        \
    \       1800    ;refresh every 30 minutes\n                               600\
    \     ;retry every 10 minutes\n                               604800  ;expire\
    \ after a week\n                               86400   ;default of a day\n   \
    \                            )\n   18.128.IN-ADDR.ARPA.    NS      KL.SRI.COM.\n\
    \                           NS      STRIPE.SRI.COM.\n                        \
    \   PTR     GW.CSL.SRI.COM.\n   ; SRINET [128.18.0.0] Address Translations\n \
    \  ; SRI.COM Hosts\n   1.2.18.128.IN-ADDR.ARPA.        PTR     Blackjack.SRI.COM.\n\
    \   ; ISTC.SRI.COM Hosts\n   2.4.18.128.IN-ADDR.ARPA.        PTR     joyce.ISTC.SRI.COM.\n\
    \   6.0.18.128.IN-ADDR.ARPA.        PTR     bozo.ISTC.SRI.COM.\n   11.0.18.128.IN-ADDR.ARPA.\
    \       PTR     sundae.ISTC.SRI.COM.\n   201.0.18.128.IN-ADDR.ARPA.      PTR \
    \    tsca.ISTC.SRI.COM.\n   203.0.18.128.IN-ADDR.ARPA.      PTR     prmh.ISTC.SRI.COM.\n\
    \   3.4.18.128.IN-ADDR.ARPA.        PTR     spam.ISTC.SRI.COM.\n   ; CSL.SRI.COM\
    \ Hosts\n   1.1.18.128.IN-ADDR.ARPA.        PTR     GW.CSL.SRI.COM.\n   [File\
    \ \"SRI-CSL-NET.ZONE\"]\n   33.12.192.IN-ADDR.ARPA. IN  SOA KL.SRI.COM  DLE.STRIPE.SRI.COM.\
    \ (\n                               870404  ;serial\n                        \
    \       1800    ;refresh every 30 minutes\n                               600\
    \     ;retry every 10 minutes\n                               604800  ;expire\
    \ after a week\n                               86400   ;default of a day\n   \
    \                            )\n   33.12.192.IN-ADDR.ARPA. NS      KL.SRI.COM.\n\
    \                           NS      STRIPE.SRI.COM.\n                        \
    \   PTR     GW.CSL.SRI.COM.\n   ; SRI-CSL-NET [192.12.33.0] Address Translations\n\
    \   ; SRI.COM Hosts\n   2.33.12.192.IN-ADDR.ARPA.       PTR     CSL.SRI.COM.\n\
    \   ; CSL.SRI.COM Hosts\n   1.33.12.192.IN-ADDR.ARPA.       PTR     GW.CSL.SRI.COM.\n\
    \   3.33.12.192.IN-ADDR.ARPA.       PTR     B.CSL.SRI.COM.\n   4.33.12.192.IN-ADDR.ARPA.\
    \       PTR     SMELLY.CSL.SRI.COM.\n   5.33.12.192.IN-ADDR.ARPA.       PTR  \
    \   SQUIRREL.CSL.SRI.COM.\n   7.33.12.192.IN-ADDR.ARPA.       PTR     VENUS.CSL.SRI.COM.\n\
    \   30.33.12.192.IN-ADDR.ARPA.      PTR     HELIUM.CSL.SRI.COM.\n   31.33.12.192.IN-ADDR.ARPA.\
    \      PTR     ARGON.CSL.SRI.COM.\n   32.33.12.192.IN-ADDR.ARPA.      PTR    \
    \ RADON.CSL.SRI.COM.\n"
- title: APPENDIX
  contents:
  - "APPENDIX\n   BIND (Berkeley Internet Name Domain server) distributed with 4.3\
    \ BSD\n   UNIX\n   This section describes two BIND implementation specific files;\
    \ the\n   boot file and the cache file.  BIND has other options, files, and\n\
    \   specifications that are not described here.  See the Name Server\n   Operations\
    \ Guide for BIND for details.\n   The boot file for BIND is usually called \"\
    named.boot\".  This\n   corresponds to file \"CONFIG.CMD\" in the example section.\n\
    \           --------------------------------------------------------\n       \
    \    cache         .                         named.ca\n           primary    \
    \   SRI.COM                   SRI.ZONE\n           primary       CSL.SRI.COM \
    \              CSL.ZONE\n           primary       ISTC.SRI.COM              ISTC.ZONE\n\
    \           primary       18.128.IN-ADDR.ARPA       SRINET.ZONE\n           primary\
    \       33.12.192.IN-ADDR.ARPA    SRI-CSL-NET.ZONE\n           --------------------------------------------------------\n\
    \   The cache file for BIND is usually called \"named.ca\".  This\n   corresponds\
    \ to file \"ROOT.SERVERS\" in the example section.\n           -------------------------------------------------\n\
    \           ;list of possible root servers\n           .       1          IN \
    \  NS   SRI-NIC.ARPA.\n                                   NS   C.ISI.EDU.\n  \
    \                                 NS   BRL-AOS.ARPA.\n                       \
    \            NS   C.ISI.EDU.\n           ;and their addresses\n           SRI-NIC.ARPA.\
    \           A    10.0.0.51\n                                   A    26.0.0.73\n\
    \           C.ISI.EDU.              A    10.0.0.52\n           BRL-AOS.ARPA. \
    \          A    192.5.25.82\n                                   A    192.5.22.82\n\
    \                                   A    128.20.1.2\n           A.ISI.EDU.   \
    \           A    26.3.0.103\n           -------------------------------------------------\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n   [1]  Dunlap, K., \"Name Server Operations Guide for BIND\", CSRG,\n\
    \        Department of Electrical Engineering and Computer Sciences,\n       \
    \ University of California, Berkeley, California.\n   [2]  Partridge, C., \"Mail\
    \ Routing and the Domain System\", RFC-974,\n        CSNET CIC BBN Laboratories,\
    \ January 1986.\n   [3]  Mockapetris, P., \"Domains Names - Concepts and Facilities\"\
    ,\n        RFC-1034, USC/Information Sciences Institute, November 1987.\n   [4]\
    \  Mockapetris, P., \"Domain Names - Implementations Specification\",\n      \
    \  RFC-1035, USC/Information Sciences Institute, November 1987.\n"
