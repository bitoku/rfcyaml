- title: __initial_text__
  contents:
  - '  Population Count Extensions to Protocol Independent Multicast (PIM)

    '
- title: Abstract
  contents:
  - "Abstract\n   This specification defines a method for providing multicast\n  \
    \ distribution-tree accounting data.  Simple extensions to the Protocol\n   Independent\
    \ Multicast (PIM) protocol allow a rough approximation of\n   tree-based data\
    \ in a scalable fashion.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6807.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Requirements Notation  . . . . . . . . . . . . .\
    \ . . . . .  4\n     1.2.  Terminology  . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n   2.  Pop-Count-Supported Hello Option . . . . . . . . . . . .\
    \ . . .  4\n   3.  New Pop-Count Join Attribute Format  . . . . . . . . . . .\
    \ . .  5\n     3.1.  Options  . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  8\n       3.1.1.  Link Speed Encoding  . . . . . . . . . . . . . . . . .\
    \ 10\n     3.2.  Example Message Layouts  . . . . . . . . . . . . . . . . . 10\n\
    \   4.  How to Use Pop-Count Encoding  . . . . . . . . . . . . . . . . 11\n  \
    \ 5.  Implementation Approaches  . . . . . . . . . . . . . . . . . . 12\n   6.\
    \  Caveats  . . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n   7.  IANA\
    \ Considerations  . . . . . . . . . . . . . . . . . . . . . 13\n   8.  Security\
    \ Considerations  . . . . . . . . . . . . . . . . . . . 13\n   9.  Acknowledgments\
    \  . . . . . . . . . . . . . . . . . . . . . . . 14\n   10. References . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . 14\n     10.1. Normative References\
    \ . . . . . . . . . . . . . . . . . . . 14\n     10.2. Informative References\
    \ . . . . . . . . . . . . . . . . . . 14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies a mechanism to convey accounting\
    \ information\n   using the Protocol Independent Multicast (PIM) protocol [RFC4601]\n\
    \   [RFC5015].  Putting the mechanism in PIM allows efficient\n   distribution\
    \ and maintenance of such accounting information.\n   Previous mechanisms require\
    \ data to be correlated from multiple\n   router sources.\n   This mechanism allows\
    \ a single router to be queried to obtain\n   accounting and statistic information\
    \ for a multicast distribution\n   tree as a whole or any distribution sub-tree\
    \ downstream from a\n   queried router.  The amount of information is fixed and\
    \ does not\n   increase as multicast membership, tree diameter, or branching\n\
    \   increases.\n   The sort of accounting data this specification provides, on\
    \ a per-\n   multicast-route basis, are:\n   1.  The number of branches in a distribution\
    \ tree.\n   2.  The membership type of the distribution tree, that is, Source-\n\
    \       Specific Multicast (SSM) or Any-Source Multicast (ASM).\n   3.  Routing\
    \ domain and time zone boundary information.\n   4.  On-tree node and tree diameter\
    \ counters.\n   5.  Effective MTU and bandwidth.\n   This document defines a new\
    \ PIM Join Attribute type [RFC5384] for the\n   Join/Prune message as well as\
    \ a new Hello option.  The mechanism is\n   applicable to IPv4 and IPv6 multicast.\n\
    \   This is a new extension to PIM, and it is not completely understood\n   what\
    \ impact collecting information using PIM would have on the\n   operation of PIM.\
    \  This is an entirely new concept.  Many PIM\n   features (including the core\
    \ protocols) were first introduced in\n   Experimental RFCs, and it seems appropriate\
    \ to advance this work as\n   Experimental.  Reports of implementation and deployment\
    \ across whole\n   distribution trees or within sub-trees (see Section 6) will\
    \ enable an\n   assessment of the desirability and stability of this specification.\n\
    \   The PIM Working Group will then consider whether to move this work to\n  \
    \ the Standards Track.\n   This document does not specify how an administrator\
    \ or user can\n   access this information.  It is expected that an implementation\
    \ may\n   have a command-line interface or other ways of requesting and\n   displaying\
    \ this information.  As this is currently an Experimental\n   document, defining\
    \ a MIB module has not been considered.  If the PIM\n   Working Group finds that\
    \ this should move on to Standards Track, a\n   MIB module should be considered.\n"
- title: 1.1.  Requirements Notation
  contents:
  - "1.1.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   This section defines the terms used in this document.\n\
    \   Multicast Route:  An (S,G) or (*,G) entry regardless of whether the\n    \
    \  route is in ASM, SSM, or BIDIR mode of operation.\n   Stub Link:  A link with\
    \ members joined to the group via IGMP or\n      Multicast Listener Discovery\
    \ (MLD).\n   Transit Link:  A link put in the oif-list (outgoing interface list)\n\
    \      for a multicast route because it was joined by PIM routers.\n   Note that\
    \ a link can be both a Stub Link and a Transit Link at the\n   same time.\n"
- title: 2.  Pop-Count-Supported Hello Option
  contents:
  - "2.  Pop-Count-Supported Hello Option\n   A PIM router indicates that it supports\
    \ the mechanism specified in\n   this document by including the Pop-Count-Supported\
    \ Hello option in\n   its PIM Hello message.  Note that it also needs to include\
    \ the Join-\n   Attribute Hello option as specified in [RFC5384].  The format\
    \ of the\n   Pop-Count-Supported Hello option is defined to be:\n       0    \
    \               1                   2                   3\n       0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          OptionType           |         OptionLength          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   OptionType\
    \ = 29, OptionLength = 0.  Note that there is no option\n   value included.  In\
    \ order to allow future updates of this\n   specification that may include an\
    \ option value, implementations of\n   this document MUST accept and process this\
    \ option even if the length\n   is non-zero.  Implementations of this specification\
    \ MUST accept and\n   process the option ignoring any option value that may be\
    \ included.\n"
- title: 3.  New Pop-Count Join Attribute Format
  contents:
  - "3.  New Pop-Count Join Attribute Format\n   When a PIM router supports this mechanism\
    \ and has determined from a\n   received Hello that the neighbor supports this\
    \ mechanism, and also\n   that all the neighbors on the interface support the\
    \ use of join\n   attributes, it will send Join/Prune messages that MAY include\
    \ a Pop-\n   Count Join Attribute.  The mechanism to process a PIM Join Attribute\n\
    \   is described in [RFC5384].  The format of the new attribute is\n   specified\
    \ in the following.\n       0                   1                   2        \
    \           3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |F|E| Attr_Type |    Length     |        Effective MTU          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \             Flags             |        Options Bitmap         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                            Options                            |\n   \
    \   .                               .                               .\n      .\
    \                               .                               .\n      .   \
    \                            .                               .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The above format is used only for entries in the join-list section of\n  \
    \ the Join/Prune message.\n   F bit:  0 (Non-Transitive Attribute).\n   E bit:\
    \  As specified by [RFC5384].\n   Attr_Type:  3.\n   Length:  The minimum length\
    \ is 6.\n   Effective MTU:  This contains the minimum MTU for any link in the\n\
    \      oif-list.  The sender of a Join/Prune message takes the minimum\n     \
    \ value for the MTU (in bytes) from each link in the oif-list.  If\n      this\
    \ value is less than the value stored for the multicast route\n      (the one\
    \ received from downstream joiners), then the value should\n      be reset and\
    \ sent in a Join/Prune message.  Otherwise, the value\n      should remain unchanged.\n\
    \      This provides the MTU supported by multicast distribution tree\n      when\
    \ examined at the first-hop router(s) or for sub-tree for any\n      router on\
    \ the distribution tree.\n   Flags:  The flags field has the following format:\n\
    \           0                   1\n           0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n\
    \          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n          |  Unalloc/Reserved  \
    \ |P|a|t|A|S|\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Unallocated/Reserved\
    \ Flags:  The flags that are currently not\n         defined.  If a new flag is\
    \ defined and used by a new\n         implementation, an old implementation should\
    \ preserve the bit\n         settings.  This means that a router MUST preserve\
    \ the settings\n         of all Unallocated/Reserved Flags in PIM Join messages\
    \ received\n         from downstream routers in any PIM Join sent upstream.\n\
    \      S flag:  This flag is set if an IGMPv3 or MLDv2 report with an\n      \
    \   INCLUDE mode group record was received on any oif-list entry or\n        \
    \ the bit was set from any PIM Join message.  This bit should\n         only be\
    \ cleared when the above becomes untrue.\n      A flag:  This flag is set if an\
    \ IGMPv3 or MLDv2 report with an\n         EXCLUDE mode group record, or an IGMPv1,\
    \ IGMPv2, or MLDv1\n         report, was received on any oif-list entry or the\
    \ bit was set\n         from any PIM Join message.  This bit should only be cleared\n\
    \         when the above becomes untrue.\n         A combination of settings for\
    \ these bits indicate:\n           A flag   S flag   Description\n           ------\
    \   ------   --------------------------------------\n             0        0 \
    \     There are no members for the group.\n                             ('Stub\
    \ Oif-List Count' is 0)\n             0        1      All group members are using\
    \ SSM.\n             1        0      All group members are using ASM.\n      \
    \       1        1      A mixture of SSM and ASM group members.\n      t flag:\
    \  This flag is set if there are any manually configured\n         tunnels on\
    \ the distribution tree.  This means any tunnel that\n         is not an auto-tunnel.\
    \  If a manually configured tunnel is in\n         the oif-list, a router sets\
    \ this bit in its Join/Prune\n         messages.  Otherwise, it propagates the\
    \ bit setting from\n         downstream joiners.\n      a flag:  This flag is\
    \ set if there are any auto-tunnels on the\n         distribution tree.  If an\
    \ auto-tunnel is in the oif-list, a\n         router sets this bit in its Join/Prune\
    \ messages.  Otherwise, it\n         propagates the bit setting from downstream\
    \ joiners.  An example\n         of an auto-tunnel is a tunnel set up by the Automatic\
    \ Multicast\n         Tunneling [AMT] protocol.\n      P flag:  This flag is set\
    \ by a router if all downstream routers\n         support this specification.\
    \  That is, they are all PIM Pop-\n         Count capable.  If a downstream router\
    \ does not support this\n         specification, it MUST be cleared.  This allows\
    \ one to tell if\n         the entire sub-tree is completely accounting capable.\n\
    \   Options Bitmap:  This is a bitmap that shows which options are\n      present.\
    \  The format of the bitmap is as follows:\n            0                   1\n\
    \            0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n           +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \           |T|s|m|M|d|n|D|z| Unalloc/Rsrvd |\n           +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Each one of the bits T, s, m, M, d, n, D and z is associated with\n   \
    \   one option, where the option is included if and only if the\n      respective\
    \ bit is set.  Included options MUST be in the same order\n      as these bits\
    \ are listed.  The bits denote the following options:\n            bit     Option\n\
    \           -----   ------------------------\n             T      Transit Oif-List\
    \ Count\n             s      Stub Oif-List Count\n             m      Minimum\
    \ Speed Link\n             M      Maximum Speed Link\n             d      Domain\
    \ Count\n             n      Node Count\n             D      Diameter Count\n\
    \             z      TZ Count\n      See Section 3.1 for details on the different\
    \ options.  The\n      unallocated bits are reserved.  Any unknown bits MUST be\
    \ set to 0\n      when a message is sent, and treated as 0 (ignored) when received.\n\
    \      This means that unknown options that are denoted by unknown bits\n    \
    \  are ignored.\n      By using this bitmap we can specify at most 16 options.\
    \  If there\n      becomes a need for more than 16 options, one can define a new\n\
    \      option that contains a bitmap that can then be used to specify\n      which\
    \ further options are present.  The last bit in the current\n      bitmap could\
    \ be used for that option.  However, the exact\n      definition of this is left\
    \ for future documents.\n   Options:  This field contains options.  Which options\
    \ are present is\n      determined by the flag bits.  As new flags and options\
    \ may be\n      defined in the future, any unknown/reserved flags MUST be ignored,\n\
    \      and any additional trailing options MUST be ignored.  See\n      Section\
    \ 3.1 for details on the options defined in this document.\n"
- title: 3.1.  Options
  contents:
  - "3.1.  Options\n   There are several options defined in this document.  For each\
    \ option,\n   there is also a related flag that shows whether the option is\n\
    \   present.  See the Options Bitmap above for a list of the options and\n   their\
    \ respective bits.  Each option has a fixed size.  Note that\n   there are no\
    \ alignment requirements for the options, so an\n   implementation cannot assume\
    \ they are aligned.\n   Transit Oif-List Count:  This is filled in by a router\
    \ sending a\n      Join/Prune message indicating the number of transit links on\
    \ the\n      multicast distribution tree.  The value is the number of oifs\n \
    \     (outgoing interfaces) for the multicast route that have been\n      joined\
    \ by PIM plus the sum of the values advertised by each of the\n      downstream\
    \ PIM routers that have joined on this oif.  Length is 4\n      octets.\n   Stub\
    \ Oif-List Count:  This is filled in by a router sending a Join/\n      Prune\
    \ message indicating the number of stub links (links where\n      there are host\
    \ members) on the multicast distribution tree.  The\n      value is the number\
    \ of oifs for the multicast route that have been\n      joined by IGMP or MLD\
    \ plus the sum of the values advertised by\n      each of the downstream PIM routers\
    \ that have joined on this oif.\n      Length is 4 octets.\n   Minimum Speed Link:\
    \  This contains the minimum bandwidth rate for any\n      link in the oif-list\
    \ and is encoded as specified in Section 3.1.1.\n      The sender of a Join/Prune\
    \ message takes the minimum value for\n      each link in the oif-list for the\
    \ multicast route.  If this value\n      is less than the value stored for the\
    \ multicast route (the\n      smallest value received from downstream joiners),\
    \ then the value\n      should be reset and sent in a Join/Prune message.  Otherwise,\
    \ the\n      value should remain unchanged.  This, together with the Maximum\n\
    \      Speed Link option, provides a way to obtain the lowest- and\n      highest-speed\
    \ links for the multicast distribution tree.  Length\n      is 2 octets.\n   Maximum\
    \ Speed Link:  This contains the maximum bandwidth rate for any\n      link in\
    \ the oif-list and is encoded as specified in Section 3.1.1.\n      The sender\
    \ of a Join/Prune message takes the maximum value for\n      each link in the\
    \ oif-list for the multicast route.  If this value\n      is greater than the\
    \ value stored for the multicast route (the\n      largest value received from\
    \ downstream joiners), then the value\n      should be reset and sent in a Join/Prune\
    \ message.  Otherwise, the\n      value should remain unchanged.  This, together\
    \ with the Minimum\n      Speed Link option, provides a way to obtain the lowest-\
    \ and\n      highest-speed links for the multicast distribution tree.  Length\n\
    \      is 2 octets.\n   Domain Count:  This indicates the number of routing domains\
    \ the\n      distribution tree traverses.  A router should increment this value\n\
    \      if it is sending a Join/Prune message over a link that traverses a\n  \
    \    domain boundary.  For this to work, an implementation needs a way\n     \
    \ of knowing that a neighbor or an interface is in a different\n      domain.\
    \  There is no standard way of doing this.  Length is 1\n      octet.\n   Node\
    \ Count:  This indicates the number of routers on the distribution\n      tree.\
    \  Each router will sum up all the Node Counts from all\n      joiners on all\
    \ oifs and increment by 1 before including this value\n      in the Join/Prune\
    \ message.  Length is 1 octet.\n   Diameter Count:  This indicates the longest\
    \ length of any given\n      branch of the tree in router hops.  Each router that\
    \ sends a Join\n      increments the max value received by all downstream joiners\
    \ by 1.\n      Length is 1 octet.\n   TZ Count:  This indicates the number of\
    \ time zones the distribution\n      tree traverses.  A router should increment\
    \ this value if it is\n      sending a Join/Prune message over a link that traverses\
    \ a time\n      zone.  This can be a configured link attribute, or using other\n\
    \      means to determine the time zone is acceptable.  Length is 1\n      octet.\n"
- title: 3.1.1.  Link Speed Encoding
  contents:
  - "3.1.1.  Link Speed Encoding\n   The speed is encoded using 2 octets as follows:\n\
    \            0                   1\n            0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5\n           +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n           | Exponent  |  \
    \  Significand    |\n           +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Using this\
    \ format, the speed of the link is Significand * 10 ^\n   Exponent kbps.  This\
    \ allows specifying link speeds with up to 3\n   decimal digits precision and\
    \ speeds from 1 kbps to 10 ^ 67 kbps.  A\n   computed speed of 0 kbps means the\
    \ link speed is < 1 kbps.\n   Here are some examples of how this is used:\n  \
    \          Link Speed     Exponent     Significand\n           ------------  \
    \ ----------   -------------\n            500 kbps       0            500\n  \
    \          500 kbps       2              5\n            155 Mbps       3     \
    \       155\n             40 Gpbs       6             40\n            100 Gpbs\
    \       6            100\n            100 Gpbs       8              1\n"
- title: 3.2.  Example Message Layouts
  contents:
  - "3.2.  Example Message Layouts\n   Here, we will give a few examples to illustrate\
    \ the use of flags and\n   options.\n   A minimum-size message has no option flags\
    \ set and looks like this:\n       0                   1                   2 \
    \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |F|E| Attr_Type |  Length = 6   |        Effective MTU          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  Unalloc/Reserved   |P|a|t|A|S|0|0|0|0|0|0|0|0| Unalloc/Rsrvd |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   A message containing all the options defined in this document would\n   look\
    \ like this:\n       0                   1                   2               \
    \    3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |F|E| Attr_Type |  Length = 18  |        Effective MTU          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Unalloc/Reserved   |P|a|t|A|S|1|1|1|1|1|1|1|1| Unalloc/Rsrvd |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    Transit Oif-List Count                     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      Stub Oif-List Count                      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      Minimum Speed Link       |      Maximum Speed Link       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Domain Count |  Node Count   | Diameter Count|    TZ Count   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   A message\
    \ containing only Stub Oif-List Count and Node Count would\n   look like this:\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |F|E| Attr_Type |  Length = 9   |        Effective MTU          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  Unalloc/Reserved   |P|a|t|A|S|0|1|0|0|0|1|0|0| Unalloc/Rsrvd |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      Stub Oif-List Count                      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  Node count   |\n      +-+-+-+-+-+-+-+-+\n"
- title: 4.  How to Use Pop-Count Encoding
  contents:
  - "4.  How to Use Pop-Count Encoding\n   A router supporting this mechanism MUST,\
    \ unless administratively\n   disabled, include the PIM Join Attribute option\
    \ in its PIM Hellos.\n   See [RFC5384] and \"PIM-Hello Options\" on [PIM-REG]\
    \ for details.\n   It is RECOMMENDED that implementations allow for administrative\n\
    \   control of whether to make use of this mechanism.  Implementations\n   MAY\
    \ also allow further control of what information to store and send\n   upstream.\n\
    \   It is very important to note that any changes to the values\n   maintained\
    \ by this mechanism MUST NOT trigger a new Join/Prune\n   message.  Due to the\
    \ periodic nature of PIM, the values can be\n   accurately obtained at 1-minute\
    \ intervals (or whatever Join/Prune\n   interval used).\n   When a router removes\
    \ a link from an oif-list, it needs to be able to\n   reevaluate the values that\
    \ it will advertise upstream.  This happens\n   when an oif-list entry is timed\
    \ out or a Prune is received.\n   It is RECOMMENDED that the Join Attribute defined\
    \ in this document be\n   used only for entries in the join-list part of the Join/Prune\n\
    \   message.  If the attribute is used in the prune-list, an\n   implementation\
    \ MUST ignore it and process the Prune as if the\n   attribute were not present.\n\
    \   It is also RECOMMENDED that join suppression be disabled on a LAN\n   when\
    \ Pop-Count is used.\n   It is RECOMMENDED that, when triggered Join/Prune messages\
    \ are sent\n   by a downstream router, the accounting information not be included\
    \ in\n   the message.  This way, when convergence is important, avoiding the\n\
    \   processing time to build an accounting record in a downstream router\n   and\
    \ processing time to parse the message in the upstream router will\n   help reduce\
    \ convergence time.  If an upstream router receives a Join/\n   Prune message\
    \ with no accounting data, it SHOULD NOT interpret the\n   message as a trigger\
    \ to clear or reset the accounting data it has\n   cached.\n"
- title: 5.  Implementation Approaches
  contents:
  - "5.  Implementation Approaches\n   This section offers some non-normative suggestions\
    \ for how Pop-Count\n   may be implemented.\n   An implementation can decide how\
    \ the accounting attributes are\n   maintained.  The values can be stored as part\
    \ of the multicast route\n   data structure by combining the local information\
    \ it has with the\n   joined information on a per-oif basis.  So, when it is time\
    \ to send a\n   Join/Prune message, the values stored in the multicast route can\
    \ be\n   copied to the message.\n   Or, an implementation could store the accounting\
    \ values per oif and,\n   when a Join/Prune message is sent, it can combine the\
    \ oifs with its\n   local information.  Then, the combined information can be\
    \ copied to\n   the message.\n   When a downstream joiner stops joining, accounting\
    \ values cached must\n   be evaluated.  There are two approaches that can be taken.\
    \  One is to\n   keep values learned from each joiner, so when the joiner goes\
    \ away,\n   the count/max/min values are known and the combined value can be\n\
    \   adjusted.  The other approach is to set the value to 0 for the oif,\n   and\
    \ then start accumulating new values as subsequent Joins are\n   received.\n \
    \  The same issue arises when an oif is removed from the oif-list.\n   Keeping\
    \ per-oif values allows you to adjust the per-route values when\n   an oif goes\
    \ away.  Or, alternatively, a delay for reporting the new\n   set a values from\
    \ the route can occur while all oif values are zeroed\n   (where accumulation\
    \ of new values from subsequent Joins cause\n   repopulation of values and a new\
    \ max/min/count can be reevaluated for\n   the route).\n"
- title: 6.  Caveats
  contents:
  - "6.  Caveats\n   This specification requires each router on a multicast distribution\n\
    \   tree to support this specification or else the accounting attributes\n   for\
    \ the tree will not be known.\n   However, if there is a contiguous set of routers\
    \ downstream in the\n   distribution tree, they can maintain accounting information\
    \ for the\n   sub-tree.\n   If there is a set of contiguous routers supporting\
    \ this specification\n   upstream on the multicast distribution tree, accounting\
    \ information\n   will be available, but it will not represent an accurate assessment\n\
    \   of the entire tree.  Also, it will not be clear how much of the\n   distribution\
    \ tree the accounting information covers.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   A new PIM-Hello Option type, 29, has been assigned\
    \ by IANA.  Although\n   the length is specified as 0 in this specification, non-zero\
    \ length\n   is allowed, so IANA has listed the length as being variable.\n  \
    \ A new PIM Join Attribute type, 3, has been assigned by IANA.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The use of this specification requires some additional\
    \ processing of\n   PIM Join/Prune messages.  However, the additional amount of\n\
    \   processing is fairly limited, so this is not believed to be a\n   significant\
    \ concern.\n   The use of this mechanism includes information like the number\
    \ of\n   receivers.  This information is assumed to not be of a sensitive\n  \
    \ nature.  If an operator has concerns about revealing this information\n   to\
    \ upstream routers or other routers/hosts that may potentially\n   inspect this\
    \ information, there should be a way to disable the\n   mechanism or, alternatively,\
    \ more detailed control of what\n   information to include.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   The authors would like to thank John Zwiebel, Amit Jain,\
    \ and Clayton\n   Wagar for their review comments on the initial versions of this\n\
    \   document.  Adrian Farrel did a detailed review of the document and\n   proposed\
    \ textual changes that have been incorporated.  Further review\n   and comments\
    \ were provided by Thomas Morin and Zhaohui (Jeffrey)\n   Zhang.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC4601]  Fenner, B., Handley, M., Holbrook, H., and I. Kouvelas,\n\
    \              \"Protocol Independent Multicast - Sparse Mode (PIM-SM):\n    \
    \          Protocol Specification (Revised)\", RFC 4601, August 2006.\n   [RFC5015]\
    \  Handley, M., Kouvelas, I., Speakman, T., and L. Vicisano,\n              \"\
    Bidirectional Protocol Independent Multicast (BIDIR-\n              PIM)\", RFC\
    \ 5015, October 2007.\n   [RFC5384]  Boers, A., Wijnands, I., and E. Rosen, \"\
    The Protocol\n              Independent Multicast (PIM) Join Attribute Format\"\
    ,\n              RFC 5384, November 2008.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [AMT]      Bumgardner, G., \"Automatic Multicast\
    \ Tunneling\", Work\n              in Progress, June 2012.\n   [PIM-REG]  IANA,\
    \ \"Protocol Independent Multicast (PIM) Parameters\",\n              <http://www.iana.org/assignments/pim-parameters>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dino Farinacci\n   Cisco Systems\n   Tasman Drive\n  \
    \ San Jose, CA  95134\n   USA\n   EMail: dino@cisco.com\n   Greg Shepherd\n  \
    \ Cisco Systems\n   Tasman Drive\n   San Jose, CA  95134\n   USA\n   EMail: gjshep@gmail.com\n\
    \   Stig Venaas\n   Cisco Systems\n   Tasman Drive\n   San Jose, CA  95134\n \
    \  USA\n   EMail: stig@cisco.com\n   Yiqun Cai\n   Microsoft\n   1065 La Avenida\n\
    \   Mountain View, CA  94043\n   USA\n   EMail: yiqunc@microsoft.com\n"
