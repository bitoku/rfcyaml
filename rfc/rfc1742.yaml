- title: __initial_text__
  contents:
  - '                AppleTalk Management Information Base II

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in TCP/IP-based internets.\n   In\
    \ particular, it defines objects for managing AppleTalk networks.\n   RFC 1243\
    \ defines a set of MIB objects for managing the lower layers\n   of the AppleTalk\
    \ protocol stack, up to the Network layer.  This memo\n   defines additional objects\
    \ that exist in the AppleTalk portion of the\n   MIB.  These objects provide for\
    \ the management of the transport and\n   session layers of the AppleTalk protocol\
    \ stack, as well as extensions\n   to the lower layers.  This is achieved in an\
    \ upwardly-compatable\n   fashion.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   3.1 Format of Definitions ................................\
    \    6\n   4. Overview ..............................................    6\n \
    \  4.1 Structure of MIB .....................................    7\n   4.2 The\
    \ LocalTalk Link Access Protocol Group .............    7\n   4.3 The AppleTalk\
    \ Address Resolution Protocol Group ......    7\n   4.4 The AppleTalk Port Group\
    \ .............................    8\n   4.5 The Datagram Delivery Protocol Group\
    \ .................    8\n   4.6 The Datagram Delivery Protocol Router Group ..........\
    \    8\n   4.7 The Routing Table Maintenance Protocol Group .........    8\n \
    \  4.8 The Routing Table Maintenance Protocol Stub Group ....    8\n   4.9 The\
    \ Kinetics Internet Protocol Group .................    8\n   4.10 The Zone Information\
    \ Protocol Router Group ..........    9\n   4.11 The Zone Information Protocol\
    \ End Node Group ........    9\n   4.12 The Name Binding Protocol Group .....................\
    \    9\n   4.13 The AppleTalk Echo Protocol Group ...................    9\n \
    \  4.14 The AppleTalk Transaction Protocol Group ............    9\n   4.15 The\
    \ Printer Access Protocol Group ...................    9\n   4.16 The AppleTalk\
    \ Session Protocol Group ................    9\n   4.17 The AppleTalk Data Stream\
    \ Protocol Group ............   10\n   4.18 The AppleTalk Port Point to Point\
    \ Group .............   10\n   4.19 The Per Port Counters Group .........................\
    \   10\n   4.20 Textual Conventions .................................   10\n \
    \  5. Definitions ...........................................   11\n   6. Acknowledgmnts\
    \ ........................................   82\n   7. References ............................................\
    \   83\n   8. Security Considerations ...............................   84\n \
    \  9. Authors' Addresses ....................................   84\n"
- title: 1. The Network Management Framework
  contents:
  - "1. The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of three\n   components.  They are:\n      STD 16/RFC 1155\
    \ which defines the SMI, the mechanisms used for\n         describing and naming\
    \ objects for the purpose of management.\n      STD 16/RFC 1212 defines a more\
    \ concise description mechanism,\n         which is wholly consistent with the\
    \ SMI.\n      RFC 1156 which defines MIB-I, the core set of managed objects for\n\
    \         the Internet suite of protocols.  STD 17/RFC 1213 defines MIB-\n   \
    \      II, an evolution of MIB-I based on implementation experience\n        \
    \ and new operational requirements.\n      STD 15/RFC 1157 which defines the SNMP,\
    \ the protocol used for\n         network access to managed objects.\n   The Framework\
    \ permits new objects to be defined for the purpose of\n   experimentation and\
    \ evaluation.\n"
- title: 2.  Additions and Changes
  contents:
  - "2.  Additions and Changes\n   This MIB includes additions and changes to RFC\
    \ 1243.  These changes\n   are outlined in the following sections.\n"
- title: 2.1.  New Groups
  contents:
  - "2.1.  New Groups\n   The following groups are introduced in this MIB:\n     \
    \             - DDP Router\n                  - RTMP Stub\n                  -\
    \ ZIP Router\n                  - ATP\n                  - PAP\n             \
    \     - ASP\n                  - ADSP\n                  - ATPortPtoP\n      \
    \            - Per Port Counters\n"
- title: 2.2.  Additional Variables
  contents:
  - "2.2.  Additional Variables\n   Many variables, mostly counters, were added to\
    \ groups that existed in\n   RFC 1243.  These variables are listed in the following\
    \ sections.\n"
- title: 2.2.1.  AARP Additions
  contents:
  - "2.2.1.  AARP Additions\n                     aarpStatus\n                   \
    \  aarpLookups\n                     aarpHits\n"
- title: 2.2.2.  ATPort Additions
  contents:
  - "2.2.2.  ATPort Additions\n                     atportNetFrom\n              \
    \       atportZoneFrom\n                     atportInPkts\n                  \
    \   atportOutPkts\n                     atportHome\n                     atportCurrentZone\n\
    \                     atportConflictPhysAddr\n                     atportZoneTable\n"
- title: 2.2.3.  DDP Addition
  contents:
  - "2.2.3.  DDP Addition\n                     ddpListenerTable\n"
- title: 2.2.4.  RTMP Additions
  contents:
  - "2.2.4.  RTMP Additions\n                     rtmpInDataPkts\n               \
    \      rtmpOutDataPkts\n                     rtmpInRequestPkts\n             \
    \        rtmpNextIREqualChanges\n                     rtmpNextIRLessChanges\n\
    \                     rtmpRouteDeletes\n                     rtmpRoutingTableOverflows\n"
- title: 2.2.5.  KIP Addition
  contents:
  - "2.2.5.  KIP Addition\n                     kipFrom\n"
- title: 2.2.6.  ZIP Additions
  contents:
  - "2.2.6.  ZIP Additions\n                     zipNetInfoTable\n               \
    \      zipInErrors\n"
- title: 2.2.7.  NBP Additions
  contents:
  - "2.2.7.  NBP Additions\n                     nbpAddress\n                    \
    \ nbpSocket\n                     nbpEnumerator\n                     nbpInLookUpRequests\n\
    \                     nbpInLookUpReplies\n                     nbpInBroadcastRequests\n\
    \                     nbpInForwardRequests\n                     nbpOutLookUpReplies\n\
    \                     nbpRegistrationFailures\n                     nbpInErrors\n"
- title: 2.2.8.  ATEcho Additions
  contents:
  - "2.2.8.  ATEcho Additions\n                     atechoOutRequests\n          \
    \           atechoInReplies\n"
- title: 2.3.  Deprecations
  contents:
  - "2.3.  Deprecations\n   The following variables have been deprecated in this version\
    \ of the\n   MIB:\n                  llapInPkts\n                  llapOutPkts\n\
    \                  llapInNoHandlers\n                  llapInErrors\n   These\
    \ llap variables were duplicated in the interfaces table of MIB-\n   II.\n"
- title: 2.4.  Changes
  contents:
  - "2.4.  Changes\n   The IMPORTS list has been updated to reflect the current SNMP\n\
    \   documents.\n   New textual conventions have been defined.\n   Hyphens have\
    \ been removed from enumeration strings.\n   Variables used as INDEXes to new\
    \ tables have ACCESS not-accessible.\n   This is because the values of the INDEX\
    \ variables are contained in\n   the object identifier for any of the other variables\
    \ in the table;\n   therefore, it does not need to be explicitly available as\
    \ data.\n   The atportNetConfig and atportZoneConfig variables have been changed\n\
    \   from read-only to read-write.\n   The atportZone variable has be renamed to\
    \ atportZoneDefault, and its\n   DESCRIPTION clause has been clarified.\n   The\
    \ atportType, atportStatus, and kipType variables have had more\n   values added\
    \ to their enumeration lists.\n   The DDP group has been split into two groups;\
    \ one includes variables\n   that any AppleTalk node would implement and the other\
    \ includes\n   variables only a router would implement.\n   The rtmpState variable\
    \ now includes another enumeration, invalid(5),\n   which is used when deleting\
    \ rows.\n   The variables rtmpRangeStart, rtmpRangeEnd, rtmpNextHop, rtmpType,\n\
    \   rtmpPort, and rtmpHops have been changed from read-write to read-\n   only.\n\
    \   The ZIP Group has been renamed the ZIP End Node Group.\n   The DESCRIPTION\
    \ clause for zipZoneIndex has been clarified.\n   The variables zipZoneName, zipZoneNetStart,\
    \ and zipZoneNetEnd have\n   been changed from read-write to read-only.\n   The\
    \ nbpIndex variable has been changed from read-only to read-write.\n   The nbpObject,\
    \ nbpType, and nbpZone variables now suggest that the\n   agent reregister its\
    \ service when any of these variables is changed.\n   The nbpState variable includes\
    \ new enumerations.\n"
- title: 3.  Objects
  contents:
  - "3.  Objects\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB.  Objects in the MIB are\n\
    \   defined using the subset of Abstract Syntax Notation One (ASN.1) [7]\n   defined\
    \ in the SMI.  In particular, each object has a name, a syntax,\n   and an encoding.\
    \  The name is an object identifier, an\n   administratively assigned name, which\
    \ specifies an object type.  The\n   object type together with an object instance\
    \ serves to uniquely\n   identify a specific instantiation of the object.  For\
    \ human\n   convenience, we often use a textual string, termed the OBJECT\n  \
    \ DESCRIPTOR, to also refer to the object type.\n   The syntax of an object type\
    \ defines the abstract data structure\n   corresponding to that object type. \
    \ The ASN.1 language is used for\n   this purpose.  However, the SMI [3] purposely\
    \ restricts the ASN.1\n   constructs which may be used.  These restrictions are\
    \ explicitly made\n   for simplicity.\n   The encoding of an object type is simply\
    \ how that object type is\n   represented using the object type's syntax.  Implicitly\
    \ tied to the\n   notion of an object type's syntax and encoding is how the object\
    \ type\n   is represented when being transmitted on the network.\n   The SMI specifies\
    \ the use of the basic encoding rules of ASN.1 [8],\n   subject to the additional\
    \ requirements imposed by the SNMP.\n"
- title: 3.1.  Format of Definitions
  contents:
  - "3.1.  Format of Definitions\n   Section 5 contains the specification of all object\
    \ types contained in\n   this MIB module.  The object types are defined using\
    \ the conventions\n   defined in the SMI, as amended by the extensions specified\
    \ in [9].\n"
- title: 4.  Overview
  contents:
  - "4.  Overview\n   AppleTalk is a protocol suite which features an open peer-to-peer\n\
    \   architecture that runs over a variety of transmission media.\n   AppleTalk\
    \ is defined in [10].  This protocol suite interoperates with\n   the IP protocol\
    \ suite through various encapsulation methods.  As\n   large AppleTalk networks\
    \ are built that coexist with large IP\n   networks, a method to manage the AppleTalk\
    \ networks with SNMP becomes\n   necessary.  This MIB defines managed objects\
    \ to be used for managing\n   AppleTalk networks.\n"
- title: 4.1.  Structure of MIB
  contents:
  - "4.1.  Structure of MIB\n   The objects are arranged into the following groups:\n\
    \                  - LLAP\n                  - AARP\n                  - ATPort\n\
    \                  - DDP\n                  - DDP Router\n                  -\
    \ RTMP\n                  - RTMP Stub\n                  - KIP\n             \
    \     - ZIP Router\n                  - ZIP End Node\n                  - NBP\n\
    \                  - ATEcho\n                  - ATP\n                  - PAP\n\
    \                  - ASP\n                  - ADSP\n                  - ATPortPtoP\n\
    \                  - Per Port Counters\n   These groups are the basic unit of\
    \ conformance. If the semantics of a\n   group is applicable to an implementation,\
    \ then it must implement all\n   objects in that group.  For example, a managed\
    \ agent must implement\n   the KIP group if and only if it implements the KIP\
    \ protocol.\n   These groups are defined to provide a method for managed agents\
    \ to\n   know which objects they must implement.\n"
- title: 4.2.  The LocalTalk Link Access Protocol Group
  contents:
  - "4.2.  The LocalTalk Link Access Protocol Group\n   The LocalTalk Link Access\
    \ Protocol (LLAP) is a medium-speed data-link\n   protocol designed for low cost\
    \ and plug-and-play operation.  The LLAP\n   group is designed to manage all interfaces\
    \ on a managed device that\n   use this protocol.\n"
- title: 4.3.  The AppleTalk Address Resolution Protocol Group
  contents:
  - "4.3.  The AppleTalk Address Resolution Protocol Group\n   The AppleTalk Address\
    \ Resolution Protocol (AARP) is used to map\n   between AppleTalk node addresses,\
    \ used by the Datagram Delivery\n   Protocol, and the addresses of the underlying\
    \ data link layer.  The\n   AARP table allows for management of the Address Mapping\
    \ Table on the\n   managed device.\n"
- title: 4.4.  The AppleTalk Port Group
  contents:
  - "4.4.  The AppleTalk Port Group\n   An AppleTalk Port is a logical connection\
    \ to a network over which\n   AppleTalk packets can be transmitted.  The \"network\"\
    \ could be a\n   tunnel, backbone network, point-to-point link, etc, as well as\
    \ a\n   native AppleTalk network.  This group allows the management of the\n \
    \  configuration of these AppleTalk ports.\n"
- title: 4.5.  The Datagram Delivery Protocol Group
  contents:
  - "4.5.  The Datagram Delivery Protocol Group\n   The Datagram Delivery Protocol\
    \ (DDP) is the network-layer protocol\n   that is responsible for the socket-to-socket\
    \ delivery of datagrams\n   over the AppleTalk Internet.  This group manages the\
    \ DDP layer on the\n   managed device.\n   The DDP group contains statistical\
    \ counters for the DDP protocol, and\n   a table describing the DDP sockets that\
    \ have protocol handlers\n   registered.\n"
- title: 4.6.  The Datagram Delivery Protocol Router Group
  contents:
  - "4.6.  The Datagram Delivery Protocol Router Group\n   Some variables relevant\
    \ to the Datagram Delivery Protocol (DDP) are\n   only applicable to AppleTalk\
    \ routers.  These variables are included\n   in this group.\n"
- title: 4.7.  The Routing Table Maintenance Protocol Group
  contents:
  - "4.7.  The Routing Table Maintenance Protocol Group\n   The Routing Table Maintenance\
    \ Protocol (RTMP) is used by AppleTalk\n   routers to create and maintain the\
    \ routing tables that dictate the\n   process of forwarding datagrams on the AppleTalk\
    \ internet.  The RTMP\n   group manages the RTMP protocol as well as the routing\
    \ tables\n   generated by this protocol.\n"
- title: 4.8.  The Routing Table Maintenance Protocol Stub Group
  contents:
  - "4.8.  The Routing Table Maintenance Protocol Stub Group\n   The RTMP Stub process\
    \ is implemented by end nodes in order to\n   maintain information about the routers\
    \ on their networks.  The\n   variables in this group apply to both routers and\
    \ end nodes.  This\n   group manages the RTMP stub process.\n"
- title: 4.9.  The Kinetics Internet Protocol Group
  contents:
  - "4.9.  The Kinetics Internet Protocol Group\n   The Kinetics Internet Protocol\
    \ (KIP) is a protocol for encapsulating\n   and routing AppleTalk datagrams over\
    \ an IP internet.  This name is\n   historical.  The KIP group manages the KIP\
    \ routing protocol as well\n   as the routing tables generated by this protocol.\n"
- title: 4.10.  The Zone Information Protocol Router Group
  contents:
  - "4.10.  The Zone Information Protocol Router Group\n   The Zone Information Protocol\
    \ (ZIP) is used to maintain a mapping\n   between networks and zone names to facilitate\
    \ the name lookup process\n   performed by the Name Binding Protocol.  Some variables\
    \ relevant to\n   the Zone Information Protocol (ZIP) are only applicable to AppleTalk\n\
    \   routers.  These variables are included in this group.\n"
- title: 4.11.  The Zone Information Protocol End Node Group
  contents:
  - "4.11.  The Zone Information Protocol End Node Group\n   The ZIP End Node group\
    \ manages the variables relevant to the Zone\n   Information Protocol (ZIP) that\
    \ are applicable to both routers and\n   end nodes.\n"
- title: 4.12.  The Name Binding Protocol Group
  contents:
  - "4.12.  The Name Binding Protocol Group\n   The Name Binding Protocol (NBP) is\
    \ a transport-level protocol that is\n   used to convert human readable service\
    \ names into the numeric\n   AppleTalk network addresses needed for communicating\
    \ across the\n   AppleTalk network.  The NBP group manages this protocol and the\
    \ NBP\n   services that exist on the managed device.\n"
- title: 4.13.  The AppleTalk Echo Protocol Group
  contents:
  - "4.13.  The AppleTalk Echo Protocol Group\n   The AppleTalk Echo Protocol is a\
    \ transport-level protocol used to\n   test and verify the status of the AppleTalk\
    \ internet.  The AtEcho\n   group manages this protocol.\n"
- title: 4.14.  The AppleTalk Transaction Protocol Group
  contents:
  - "4.14.  The AppleTalk Transaction Protocol Group\n   The AppleTalk Transaction\
    \ Protocol (ATP) is a transport-level\n   protocol that is defined to support\
    \ transaction based communications.\n   The ATP group manages this protocol.\n"
- title: 4.15.  The Printer Access Protocol Group
  contents:
  - "4.15.  The Printer Access Protocol Group\n   The Printer Access Protocol (PAP)\
    \ is a session-level protocol that\n   enables communications between workstations\
    \ and print servers.  The\n   PAP group manages this protocol.\n"
- title: 4.16.  The AppleTalk Session Protocol Group
  contents:
  - "4.16.  The AppleTalk Session Protocol Group\n   The AppleTalk Session Protocol\
    \ (ASP) is a session-level protocol that\n   enables sequences of communications\
    \ to occur.  ASP uses the services\n   of the AppleTalk Transaction Protocol (ATP),\
    \ but extends these\n   services into the session layer.  The ASP group manages\
    \ this\n   protocol.\n"
- title: 4.17.  The AppleTalk Data Stream Protocol Group
  contents:
  - "4.17.  The AppleTalk Data Stream Protocol Group\n   The AppleTalk Data Stream\
    \ Protocol (ADSP) is a session-level protocol\n   that provides symmetric, connection-oriented,\
    \ full-duplex\n   communication between two sockets on the AppleTalk internet.\
    \  In\n   addition, ADSP handles flow-control and reliability.  The ADSP group\n\
    \   manages this protocol.\n"
- title: 4.18.  The AppleTalk Port Point to Point Group
  contents:
  - "4.18.  The AppleTalk Port Point to Point Group\n   The AppleTalk Port Point to\
    \ Point Group manages ports that have one\n   or more associated point-to-point\
    \ connections.\n"
- title: 4.19.  The Per Port Counters Group
  contents:
  - "4.19.  The Per Port Counters Group\n   The Per Port Counters Group contains a\
    \ set of counters which are\n   deemed useful on a per port basis.\n"
- title: 4.20.  Textual Conventions
  contents:
  - "4.20.  Textual Conventions\n   New data types are introduced as textual conventions\
    \ in this MIB\n   document.  These textual conventions enhance the readability\
    \ of the\n   specification and can ease comparison with other specifications if\n\
    \   appropriate.  It should be noted that the introduction of these\n   textual\
    \ conventions has no effect on either the syntax or the\n   semantics of any managed\
    \ objects.  The use of this is merely an\n   artifact of the explanatory method\
    \ used.  Objects defined in terms of\n   this method are always encoded by means\
    \ of the rules that define the\n   primitive type.  Hence, no changes to the SMI\
    \ or the SNMP are\n   necessary to accommodate these textual conventions which\
    \ are adopted\n   merely for the convenience of readers and writers in pursuit\
    \ of the\n   elusive goal of clear, concise, and unambiguous MIB documents.\n\
    \   The new data types are:\n                  ATNetworkNumber ::=         --\
    \ 2 octets of network\n                                              -- number\
    \ in network\n                                              -- byte order\n  \
    \                        OCTET STRING (SIZE (2))\n                  DdpNodeAddress\
    \ ::=          -- 2 octets of net number\n                                   \
    \           -- in network byte order,\n                                      \
    \        -- 1 octet of node number\n                          OCTET STRING (SIZE\
    \ (3))\n                  DdpSocketAddress ::=        -- 2 octets of net number\n\
    \                                              -- in network byte order,\n   \
    \                                           -- 1 octet of node number,\n     \
    \                                         -- 1 octet of socket\n             \
    \                                 -- number (0..255)\n                       \
    \   OCTET STRING (SIZE (4))\n                  ATName ::=              -- 0 to\
    \ 32 octets of\n                                              -- AppleTalk ASCII\
    \ [10]\n                          OCTET STRING (SIZE (0..32))\n"
- title: 5.  Definitions
  contents:
  - "5.  Definitions\n          APPLETALK-MIB DEFINITIONS ::= BEGIN\n          IMPORTS\n\
    \              Counter, IpAddress, TimeTicks\n                  FROM RFC1155-SMI\n\
    \              DisplayString, mib-2\n                  FROM RFC1213-MIB\n    \
    \          OBJECT-TYPE\n                  FROM RFC-1212;\n          --  This MIB\
    \ module uses the extended OBJECT-TYPE macro as\n          --  defined in RFC-1212.\n\
    \          --  The following reference is used in this MIB:\n          --  [Inside\
    \ AppleTalk]\n          --  This refers to Gursharan S. Sidhu, Richard F. Andrews,\
    \ and\n          --  Alan B. Oppenheimer, Inside AppleTalk, Second Edition,\n\
    \          --  Addison Wesley, (1990).\n          --  AppleTalk MIB\n        \
    \      appletalk    OBJECT IDENTIFIER ::= { mib-2 13 }\n                  ATNetworkNumber\
    \ ::=         -- 2 octets of net number\n                                    \
    \          -- in network byte order\n                          OCTET STRING (SIZE\
    \ (2))\n                  DdpNodeAddress ::=          -- 2 octets of net number\n\
    \                                              -- in network byte order,\n   \
    \                                           -- 1 octet of node number\n      \
    \                    OCTET STRING (SIZE (3))\n                  DdpSocketAddress\
    \ ::=        -- 2 octets of net number\n                                     \
    \         -- in network byte order,\n                                        \
    \      -- 1 octet of node number,\n                                          \
    \    -- 1 octet of socket number\n                                           \
    \   -- (0..255)\n                          OCTET STRING (SIZE (4))\n         \
    \         ATName ::=              -- 0 to 32 octets of AppleTalk\n           \
    \                                   -- ASCII [Inside AppleTalk]\n            \
    \              OCTET STRING (SIZE (0..32))\n              llap         OBJECT\
    \ IDENTIFIER ::= { appletalk 1 }\n              aarp         OBJECT IDENTIFIER\
    \ ::= { appletalk 2 }\n              atport       OBJECT IDENTIFIER ::= { appletalk\
    \ 3 }\n              ddp          OBJECT IDENTIFIER ::= { appletalk 4 }\n    \
    \          rtmp         OBJECT IDENTIFIER ::= { appletalk 5 }\n              kip\
    \          OBJECT IDENTIFIER ::= { appletalk 6 }\n              zipRouter    OBJECT\
    \ IDENTIFIER ::= { appletalk 7 }\n              nbp          OBJECT IDENTIFIER\
    \ ::= { appletalk 8 }\n              atecho       OBJECT IDENTIFIER ::= { appletalk\
    \ 9 }\n              atp          OBJECT IDENTIFIER ::= { appletalk 10 }\n   \
    \           pap          OBJECT IDENTIFIER ::= { appletalk 11 }\n            \
    \  asp          OBJECT IDENTIFIER ::= { appletalk 12 }\n              adsp   \
    \      OBJECT IDENTIFIER ::= { appletalk 13 }\n              atportptop   OBJECT\
    \ IDENTIFIER ::= { appletalk 14 }\n              rtmpStub     OBJECT IDENTIFIER\
    \ ::= { appletalk 16 }\n              zipEndNode   OBJECT IDENTIFIER ::= { appletalk\
    \ 17 }\n              perPort  OBJECT IDENTIFIER ::= { appletalk 18 }\n      \
    \    -- The LLAP Group\n          --\n          -- Implementation of this group\
    \ is mandatory for all\n          -- entities that implement LLAP\n          --\n\
    \          -- Notes for the interfaces group\n          --\n          -- When\
    \ implementing the Interfaces Group of MIB-II, it is\n          -- suggested that\
    \ the following values be used for any\n          -- LocalTalk interfaces:\n \
    \         --  ifMtu: 600\n          --  ifSpeed: 230000\n          --  ifPhysAddress:\
    \ the one octet node number for the\n          --      particular interface\n\
    \          --\n          -- Note also that LLAP control packets should not be\n\
    \          -- included in the Interfaces Group packet or octet\n          -- counters.\n\
    \          llapTable OBJECT-TYPE\n              SYNTAX SEQUENCE OF LlapEntry\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The list of LLAP entries.\"\n       \
    \       ::= { llap 1 }\n          llapEntry OBJECT-TYPE\n              SYNTAX\
    \ LlapEntry\n              ACCESS not-accessible\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"An LLAP entry containing objects\
    \ for the LocalTalk\n                  Link Access Protocol for a particular LocalTalk\n\
    \                  interface.\n                  As an example, an instance of\
    \ the llapOutPkts object\n                  might be named llapOutPks.1\"\n  \
    \            INDEX { llapIfIndex }\n              ::= { llapTable 1 }\n      \
    \    LlapEntry ::= SEQUENCE {\n              llapIfIndex             INTEGER,\n\
    \              llapInPkts              Counter,\n              llapOutPkts   \
    \          Counter,\n              llapInNoHandlers        Counter,\n        \
    \      llapInLengthErrors      Counter,\n              llapInErrors          \
    \  Counter,\n              llapCollisions          Counter,\n              llapDefers\
    \              Counter,\n              llapNoDataErrors        Counter,\n    \
    \          llapRandomCTSErrors     Counter,\n              llapFCSErrors     \
    \      Counter\n          }\n          llapIfIndex OBJECT-TYPE\n             \
    \ SYNTAX INTEGER\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The LLAP interface to which this\
    \ entry pertains.\n                  The interface identified by a particular\
    \ value of\n                  this index is the same interface as identified\n\
    \                  by the same value of ifIndex.\"\n              ::= { llapEntry\
    \ 1 }\n          -- this object has been deprecated because it duplicates the\n\
    \          -- sum of the MIB-II variables ifInUcastPkts and\n          -- ifInNUcastPkts\n\
    \          llapInPkts OBJECT-TYPE\n              SYNTAX Counter\n            \
    \  ACCESS read-only\n              STATUS deprecated\n              DESCRIPTION\n\
    \                  \"The total number of good data packets received on\n     \
    \             this LocalTalk interface.\"\n              ::= { llapEntry 2 }\n\
    \          -- this object has been deprecated because it duplicates the\n    \
    \      -- sum of the MIB-II variables ifOutUcastPkts and\n          -- ifOutNUcastPkts\n\
    \          llapOutPkts OBJECT-TYPE\n              SYNTAX Counter\n           \
    \   ACCESS read-only\n              STATUS deprecated\n              DESCRIPTION\n\
    \                  \"The total number of data packets transmitted on\n       \
    \           this LocalTalk interface.\"\n              ::= { llapEntry 3 }\n \
    \         -- this object has been deprecated because it duplicates the\n     \
    \     -- MIB-II variable ifInUnknownProtos\n          llapInNoHandlers OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ deprecated\n              DESCRIPTION\n                  \"The total number\
    \ of good packets received on this\n                  LocalTalk interface for\
    \ which there was no protocol\n                  handler.\"\n              ::=\
    \ { llapEntry 4 }\n          llapInLengthErrors OBJECT-TYPE\n              SYNTAX\
    \ Counter\n              ACCESS read-only\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The total number of packets received\
    \ on this LocalTalk\n                  interface whose actual length did not match\
    \ the length\n                  in the header.\"\n              ::= { llapEntry\
    \ 5 }\n          -- this object has been deprecated because it duplicates the\n\
    \          -- MIB-II variable ifInErrors\n          llapInErrors OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ deprecated\n              DESCRIPTION\n                  \"The total number\
    \ of packets containing errors received\n                  on this LocalTalk interface.\"\
    \n              ::= { llapEntry 6 }\n          llapCollisions OBJECT-TYPE\n  \
    \            SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The total number of\
    \ collisions assumed on this\n                  LocalTalk interface due to the\
    \ lack of a lapCTS reply.\"\n              ::= { llapEntry 7 }\n          llapDefers\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The total number of times this LocalTalk interface\n                  deferred\
    \ to other packets.\"\n              ::= { llapEntry 8 }\n          llapNoDataErrors\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The total number of times this LocalTalk interface\n                  received\
    \ a lapRTS packet and expected a data packet,\n                  but did not receive\
    \ any data packet.\"\n              ::= { llapEntry 9 }\n          llapRandomCTSErrors\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The total number of times this LocalTalk interface\n                  received\
    \ a lapCTS packet that was not solicited by a\n                  lapRTS packet.\"\
    \n              ::= { llapEntry 10 }\n          llapFCSErrors OBJECT-TYPE\n  \
    \            SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The total number of\
    \ times this LocalTalk interface\n                  received a packet with an\
    \ FCS (Frame Check Sequence)\n                  error.\"\n              ::= {\
    \ llapEntry 11 }\n          -- The AARP Group\n          --\n          -- Implementation\
    \ of this group is mandatory for all entities\n          -- that implement AARP\n\
    \          aarpTable OBJECT-TYPE\n              SYNTAX SEQUENCE OF AarpEntry\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The AppleTalk Address Translation Table\
    \ contains an\n                  equivalence of AppleTalk Network Addresses to\
    \ the link\n                  layer physical address.\"\n              ::= { aarp\
    \ 1 }\n          aarpEntry OBJECT-TYPE\n              SYNTAX AarpEntry\n     \
    \         ACCESS not-accessible\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"Each entry contains one AppleTalk Network\
    \ Address to\n                  physical address equivalence.\n              \
    \    As an example, an instance of the aarpPhysAddress\n                  object\
    \ might be named aarpPhysAddress.1.0.80.234\"\n              INDEX { aarpIfIndex,\
    \ aarpNetAddress }\n              ::= { aarpTable 1 }\n          AarpEntry ::=\
    \ SEQUENCE {\n              aarpIfIndex     INTEGER,\n              aarpPhysAddress\
    \ OCTET STRING,\n              aarpNetAddress  DdpNodeAddress,\n             \
    \ aarpStatus      INTEGER\n          }\n          aarpIfIndex OBJECT-TYPE\n  \
    \            SYNTAX INTEGER\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The interface on which\
    \ this entry's equivalence is\n                  effective.  The interface identified\
    \ by a particular\n                  value of this index is the same interface\
    \ as\n                  identified by the same value of ifIndex.\"\n         \
    \     ::= { aarpEntry 1 }\n          aarpPhysAddress OBJECT-TYPE\n           \
    \   SYNTAX OCTET STRING\n              ACCESS read-write\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The media-dependent\
    \ physical address.\"\n              ::= { aarpEntry 2 }\n          aarpNetAddress\
    \ OBJECT-TYPE\n              SYNTAX DdpNodeAddress\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The AppleTalk Network Address corresponding to the\n                  media-dependent\
    \ physical address.\"\n              ::= { aarpEntry 3 }\n          aarpStatus\
    \ OBJECT-TYPE\n              SYNTAX INTEGER {\n                  valid(1),\n \
    \                 invalid(2)\n              }\n              ACCESS read-write\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The status of this AARP entry.\n                  Setting this object to the\
    \ value invalid(2) has the\n                  effect of invalidating the corresponding\
    \ entry in the\n                  aarpTable.  That is, it effectively disassociates\n\
    \                  the mapping identified with said entry.  It is an\n       \
    \           implementation-specific matter as to whether the agent\n         \
    \         removes an invalidated entry from the table.\n                  Accordingly,\
    \ management stations must be prepared to\n                  receive from agents\
    \ tabular information corresponding\n                  to entries not currently\
    \ in use.  Proper\n                  interpretation of such entries requires examination\n\
    \                  of the relevant aarpStatus object.\"\n              ::= { aarpEntry\
    \ 4 }\n          aarpLookups OBJECT-TYPE\n              SYNTAX Counter\n     \
    \         ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of times the AARP cache for this entity\n    \
    \              was searched.\"\n              ::= { aarp 2 }\n          aarpHits\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of times an entry was searched for and\n                  found\
    \ in the AARP cache for this entity.\"\n              ::= { aarp 3 }\n       \
    \   -- The ATPort Group\n          --\n          -- Implementation of this group\
    \ is mandatory for all entities\n          -- that implement AppleTalk ports\n\
    \          --\n          -- Note that to be compliant with this group, all variables\n\
    \          -- that have read-write access must be implemented as\n          --\
    \ read-write.\n          atportTable OBJECT-TYPE\n              SYNTAX SEQUENCE\
    \ OF AtportEntry\n              ACCESS not-accessible\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"A list of AppleTalk ports for\
    \ this entity.\"\n              ::= { atport 1 }\n          atportEntry OBJECT-TYPE\n\
    \              SYNTAX AtportEntry\n              ACCESS not-accessible\n     \
    \         STATUS mandatory\n              DESCRIPTION\n                  \"The\
    \ description of one of the AppleTalk\n                  ports on this entity.\n\
    \                  As an example, an instance of the atportNetFrom object\n  \
    \                might be named atportNetFrom.2\"\n              INDEX { atportIndex\
    \ }\n              ::= { atportTable 1 }\n          AtportEntry ::= SEQUENCE {\n\
    \              atportIndex               INTEGER,\n              atportDescr \
    \              DisplayString,\n              atportType                INTEGER,\n\
    \              atportNetStart            ATNetworkNumber,\n              atportNetEnd\
    \              ATNetworkNumber,\n              atportNetAddress          DdpNodeAddress,\n\
    \              atportStatus              INTEGER,\n              atportNetConfig\
    \           INTEGER,\n              atportZoneConfig          INTEGER,\n     \
    \         atportZoneDefault         ATName,\n              atportIfIndex     \
    \        INTEGER,\n              atportNetFrom             DdpNodeAddress,\n \
    \             atportZoneFrom            DdpNodeAddress,\n              atportInPkts\
    \              Counter,\n              atportOutPkts             Counter,\n  \
    \            atportHome                INTEGER,\n              atportCurrentZone\
    \         ATName,\n              atportConflictPhysAddr    OCTET STRING\n    \
    \      }\n          atportIndex OBJECT-TYPE\n              SYNTAX INTEGER\n  \
    \            ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"A unique value for each AppleTalk port.\n               \
    \   Its value is between 1 and the total number of\n                  AppleTalk\
    \ ports.  The value for each port must\n                  remain constant at least\
    \ from the re-initialization\n                  of the entity's network management\
    \ system to the\n                  next re-initialization.\"\n              ::=\
    \ { atportEntry 1 }\n          atportDescr OBJECT-TYPE\n              SYNTAX DisplayString\n\
    \              ACCESS read-write\n              STATUS mandatory\n           \
    \   DESCRIPTION\n                  \"A text string containing information about\
    \ the\n                  port.  This string is intended for presentation\n   \
    \               to a human; it must not contain anything but printable\n     \
    \             ASCII characters.\"\n              ::= { atportEntry 2 }\n     \
    \     -- Several objects throughout the MIB key off of atportType to\n       \
    \   -- determine the format of OCTET STRING addresses of peers.\n          --\
    \ The address formats are as follows:\n          --     localtalk, ethertalk1,\
    \ ethertalk2, tokentalk, iptalk,\n          --       fdditalk, smdstalk, arctalk,\
    \ and virtual take the\n          --       format of DdpNodeAddress\n        \
    \  --     serialPPP: null OCTET STRING\n          --     serialNonstandard: vendor\
    \ specific\n          --     aurp: see AURP MIB to determine format\n        \
    \  --     frameRelay: 32 bit DLCI in network byte order\n          --       (OCTET\
    \ STRING (SIZE (4)))\n          --     x25: X121Address (see RFC 1382)\n     \
    \     --     ip: IP address (OCTET STRING (SIZE (4)))\n          --     osi: NSAP\
    \ (OCTET STRING (SIZE (3..20)))\n          --     decnetIV: 6 bit area, 10 bit\
    \ host in network byte order\n          --       (OCTET STRING (SIZE (2)))\n \
    \         --     arap: ???\n          --     nonAppleTalk3Com: based on ifType\n\
    \          --     ipx: 32 bit network number in network byte order\n         \
    \ --       followed by datalink address of host\n          --     arns: 32 bit\
    \ ARNS header\n          --     hdlc: DdpNodeAddress or null OCTET STRING\n  \
    \        atportType OBJECT-TYPE\n              SYNTAX INTEGER {\n            \
    \       other(1),       -- none of the following\n                   localtalk(2),\n\
    \                   ethertalk1(3),\n                   ethertalk2(4),\n      \
    \             tokentalk(5),\n                   iptalk(6),\n                 \
    \  serialPPP(7),\n                   serialNonstandard(8),\n                 \
    \  virtual(9),    -- an internal interface\n                   fdditalk(10),\n\
    \                   arctalk(11),\n                   smdstalk(12),\n         \
    \          aurp(13),\n                   frameRelay(14),\n                   x25(15),\n\
    \                   ip(16),\n                   osi(17),\n                   decnetIV(18),\n\
    \                   arap(19),\n                   isdnInThePacketMode(20),\n \
    \                  nonAppleTalk3Com(21),\n                   ipx(22),\n      \
    \             arns(23),\n                   hdlc(24)\n              }\n      \
    \        ACCESS read-write\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The type of port, distinguished by the protocol\n       \
    \           immediately below DDP in the protocol stack.\"\n              ::=\
    \ { atportEntry 3 }\n          atportNetStart OBJECT-TYPE\n              SYNTAX\
    \ ATNetworkNumber\n              ACCESS read-write\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The first AppleTalk network address\
    \ in the range\n                  configured for this port.  If this port is not\
    \ a\n                  native AppleTalk port, this object shall have the\n   \
    \               value of two octets of zero.\"\n              ::= { atportEntry\
    \ 4 }\n          atportNetEnd OBJECT-TYPE\n              SYNTAX ATNetworkNumber\n\
    \              ACCESS read-write\n              STATUS mandatory\n           \
    \   DESCRIPTION\n                  \"The last AppleTalk network address in the\
    \ range\n                  configured for this port.  If the network to which\n\
    \                  this AppleTalk port is connected is a non-extended\n      \
    \            network, or if it is not a native AppleTalk port,\n             \
    \     the value for atportNetEnd shall be two octets of\n                  zero.\"\
    \n              ::= { atportEntry 5 }\n          atportNetAddress OBJECT-TYPE\n\
    \              SYNTAX DdpNodeAddress\n              ACCESS read-write\n      \
    \        STATUS mandatory\n              DESCRIPTION\n                  \"The\
    \ AppleTalk network address configured for this\n                  port.  In addition,\
    \ this value may be used as a hint\n                  for an initial node number\
    \ used during node-finding.\n                  If this port is not a native AppleTalk\
    \ port, this\n                  object shall have the value of three octets of\
    \ zero.\"\n              ::= { atportEntry 6 }\n          atportStatus OBJECT-TYPE\n\
    \              SYNTAX INTEGER {\n                   routing(1), --this port is\
    \ fully configured & routing\n                   unconfigured(2),\n          \
    \         off(3),\n                   invalid(4),\n                   endNode(5),\
    \ -- this port is acting as an end node\n                   offDueToConflict(6),\
    \ -- port is off due to\n                                -- configuration conflict\n\
    \                   other(7) -- none of the states defined above\n           \
    \   }\n              ACCESS read-write\n              STATUS mandatory\n     \
    \         DESCRIPTION\n                  \"The configuration status of this port.\n\
    \                  Setting this object to the value invalid(4) has the\n     \
    \             effect of invalidating the corresponding entry in the\n        \
    \          atportTable.  That is, it effectively disassociates the\n         \
    \         mapping identified with said entry.  It is an\n                  implementation-specific\
    \ matter as to whether the agent\n                  removes an invalidated entry\
    \ from the table.\n                  Accordingly, management stations must be\
    \ prepared to\n                  receive from agents tabular information corresponding\n\
    \                  to entries not currently in use.  Proper\n                \
    \  interpretation of such entries requires examination\n                  of the\
    \ relevant atportStatus object.\"\n              ::= { atportEntry 7 }\n     \
    \     atportNetConfig OBJECT-TYPE\n              SYNTAX INTEGER {\n          \
    \        conflictOrientedSeed(1),  -- use configured network\n               \
    \         -- range even if it conflicts with another\n                       \
    \ -- AppleTalk device\n                  garnered(2), -- acquire from another\
    \ AppleTalk device\n                  guessed(3),  -- generate a \"random\" network\
    \ range\n                  unconfigured(4), -- no other value applies\n      \
    \            conflictAverseSeed(5),  -- use configured network\n             \
    \           -- range, but don't come up if it conflicts\n                  softSeed(6)\
    \  -- attempt to use configured network\n                        -- range, but\
    \ use network range from another\n                        -- router if our configuration\
    \ conflicts\n              }\n              ACCESS read-write\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The status of the\
    \ network information for this port.\n                  If this port is not a\
    \ native AppleTalk port, this\n                  object shall have the value unconfigured(4).\"\
    \n              ::= { atportEntry 8 }\n          atportZoneConfig OBJECT-TYPE\n\
    \              SYNTAX INTEGER {\n                  conflictOrientedSeed(1), --\
    \ use configured zone\n                       -- information even if it conflicts\
    \ with\n                       -- another AppleTalk device\n                 \
    \ garnered(2), -- acquire from another AppleTalk device\n                  guessed(3),\
    \  -- generate \"random\" zone information\n                  unconfigured(4),\
    \ -- no other value applies\n                  conflictAverseSeed(5),  -- use\
    \ configured zone\n                        -- information, but don't come up if\
    \ it\n                        -- conflicts\n                  softSeed(6)  --\
    \ attempt to use configured zone\n                        -- information, but\
    \ use zone information\n                        -- from another router if our\
    \ configuration\n                        -- conflicts\n              }\n     \
    \         ACCESS read-write\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The status of the zone information for this port.\n     \
    \             If this port is not a native AppleTalk port, this\n            \
    \      object shall have the value unconfigured(4).\"\n              ::= { atportEntry\
    \ 9 }\n          atportZoneDefault OBJECT-TYPE\n              SYNTAX ATName\n\
    \              ACCESS read-write\n              STATUS mandatory\n           \
    \   DESCRIPTION\n                  \"The name of the default zone for this port.\
    \  If\n                  this port only has one zone, that zone is\n         \
    \         represented here. If this port is not a native\n                  AppleTalk\
    \ port, this object shall contain an octet\n                  string of zero length.\n\
    \                  When this value is changed in a router, the router\n      \
    \            must send a zipNotify packet on the associated\n                \
    \  network.\"\n              ::= { atportEntry 10 }\n          atportIfIndex OBJECT-TYPE\n\
    \              SYNTAX INTEGER\n              ACCESS read-write\n             \
    \ STATUS mandatory\n              DESCRIPTION\n                  \"The physical\
    \ interface associated with this\n                  AppleTalk port.  The interface\
    \ identified by a\n                  particular value of this index is the same\
    \ interface\n                  as identified by the same value of ifIndex.\"\n\
    \              ::= { atportEntry 11 }\n          atportNetFrom OBJECT-TYPE\n \
    \             SYNTAX DdpNodeAddress\n              ACCESS read-only\n        \
    \      STATUS mandatory\n              DESCRIPTION\n                  \"When atportNetConfig\
    \ is set to garnered(2), this\n                  variable contains the DDP address\
    \ of an entity from\n                  which the AppleTalk network number was\
    \ garnered.\n                  When atportNetConfig is set to\n              \
    \    conflictOrientedSeed(1), conflictAverseSeed(5),\n                  or softSeed(6),\
    \ this variable contains the DDP\n                  address of an entity which\
    \ confirmed or supplied our\n                  AppleTalk network number, for example\
    \ by replying to\n                  a ZIP GetNetInfo request.\n              \
    \    If atportNetConfig is set to guessed(3) or\n                  unconfigured(4),\
    \ or if the entity has not received\n                  any network number confirmation,\
    \ this variable\n                  should be set to three octets of zero.\"\n\
    \              ::= { atportEntry 12 }\n          atportZoneFrom OBJECT-TYPE\n\
    \              SYNTAX DdpNodeAddress\n              ACCESS read-only\n       \
    \       STATUS mandatory\n              DESCRIPTION\n                  \"When\
    \ atportZoneConfig is set to garnered(2), this\n                  variable contains\
    \ the DDP address of an entity from\n                  which the AppleTalk zone\
    \ list was garnered.\n                  When atportZoneConfig is set to\n    \
    \              conflictOrientedSeed(1), conflictAverseSeed(5), or\n          \
    \        softSeed(6), this variable contains the DDP address\n               \
    \   of an entity which confirmed or supplied our\n                  AppleTalk\
    \ zone information, for example by replying\n                  to a ZIP GetNetInfo\
    \ request or a ZIP Query.\n                  If atportZoneConfig is set to guessed(3)\
    \ or\n                  unconfigured(4), or if the entity has not received\n \
    \                 any zone confirmation, this variable should be set\n       \
    \           to three octets of zero.\"\n              ::= { atportEntry 13 }\n\
    \          atportInPkts OBJECT-TYPE\n              SYNTAX Counter\n          \
    \    ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of packets received by this entity on\n      \
    \            this port.\"\n              ::= { atportEntry 14 }\n          atportOutPkts\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of packets transmitted by this entity on\n                  this\
    \ port.\"\n              ::= { atportEntry 15 }\n          atportHome OBJECT-TYPE\n\
    \              SYNTAX INTEGER {\n                  home(1),\n                \
    \  notHome(2)\n              }\n              ACCESS read-only\n             \
    \ STATUS mandatory\n              DESCRIPTION\n                  \"An indication\
    \ of whether or not the entity is\n                  homed on this port, that\
    \ is to say, a port on which\n                  the entity could perform NBP registrations\
    \ for\n                  services that it chooses to advertise.\"\n          \
    \    ::= { atportEntry 16 }\n          atportCurrentZone OBJECT-TYPE\n       \
    \       SYNTAX ATName\n              ACCESS read-write\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The current zone for the port.\
    \  In general, this is\n                  the zone name in which services on this\
    \ port will\n                  be registered.  If this port is not a native\n\
    \                  AppleTalk port, this object shall contain an octet\n      \
    \            string of zero length.  Note that modifications to\n            \
    \      this object do not affect the nbpTable.\"\n              ::= { atportEntry\
    \ 17 }\n          atportConflictPhysAddr OBJECT-TYPE\n              SYNTAX OCTET\
    \ STRING\n              ACCESS read-only\n              STATUS mandatory\n   \
    \           DESCRIPTION\n                  \"The link-layer address of a device\
    \ which caused\n                  this entity to set atportStatus to\n       \
    \           offDueToConflict(6). If this address is not\n                  available,\
    \ or if the entity has not set atportStatus\n                  to offDueToConflict,\
    \ this object shall be a zero\n                  length OCTET STRING.\"\n    \
    \          ::= { atportEntry 18 }\n          -- The atportZoneTable stores information\
    \ about the zones\n          -- associated with each port.  The default zone for\
    \ each\n          -- port is stored in the port's atportZoneDefault variable;\n\
    \          -- all other zones for the port are listed in this table.\n       \
    \   -- If a port only has one zone, it should be stored in the\n          -- port's\
    \ atportZoneDefault variable, and this table should\n          -- be empty.\n\
    \          --\n          -- One of the indexes for this table is atportZoneName.\n\
    \          -- Even though AppleTalk zone name matches are\n          -- case-insensitive,\
    \ this table will store zone names\n          -- regardless of case.  SNMP Get,\
    \ GetNext and Set operations\n          -- are performed on these (potentially)\
    \ mixed case strings\n          -- according to the normal SNMP rules with the\
    \ following\n          -- caveat: in processing a SET request, the agent shall\n\
    \          -- perform a case-insensitive search and a case-sensitive\n       \
    \   -- search.  If the case-insensitive search matches and the\n          -- case-sensitive\
    \ search does not match, the \"equivalent\"\n          -- zone name exists in\
    \ another entry with a different\n          -- capitalization and the SET request\
    \ shall fail due\n          -- to the name being inconsistent (SNMPv1 should return\
    \ a\n          -- genErr.) This insures that only one version of a zone\n    \
    \      -- name will appear in each agent, at the expense of forcing\n        \
    \  -- a management station to query using that exact name.\n          atportZoneTable\
    \ OBJECT-TYPE\n              SYNTAX SEQUENCE OF AtportZoneEntry\n            \
    \  ACCESS not-accessible\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The table of zone information for non-default\n         \
    \         zones on ports.\"\n              ::= { atport 2 }\n          atportZoneEntry\
    \ OBJECT-TYPE\n              SYNTAX AtportZoneEntry\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"An entry of zone information for a port.\n                  As an example,\
    \ an instance of the atportZoneStatus\n                  object might be named\n\
    \                  atportZoneStatus.2.8.84.119.105.108.105.103.104.116\"\n   \
    \           INDEX { atportZonePort, atportZoneName }\n              ::= { atportZoneTable\
    \ 1 }\n          AtportZoneEntry ::= SEQUENCE {\n              atportZonePort\
    \     INTEGER,\n              atportZoneName     ATName (SIZE (1..32)),\n    \
    \          atportZoneStatus   INTEGER\n          }\n          atportZonePort OBJECT-TYPE\n\
    \              SYNTAX INTEGER\n              ACCESS not-accessible\n         \
    \     STATUS mandatory\n              DESCRIPTION\n                  \"An integer\
    \ representing the port to which this zone\n                  belongs. The port\
    \ identified by a particular value\n                  of this object is the same\
    \ port as identified by the\n                  same value of atportIndex.\"\n\
    \              ::= { atportZoneEntry 1 }\n          atportZoneName OBJECT-TYPE\n\
    \              SYNTAX ATName (SIZE (1..32))\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"A zone name configured for the AppleTalk port\n                  referred\
    \ to in the corresponding entry of\n                  atportZonePort.\n      \
    \            When this value is changed in a router, the router\n            \
    \      must send a zipNotify packet on the associated\n                  network.\"\
    \n              ::= { atportZoneEntry 2 }\n          atportZoneStatus OBJECT-TYPE\n\
    \              SYNTAX INTEGER {\n                  valid(1),\n               \
    \   invalid(2)\n              }\n              ACCESS read-write\n           \
    \   STATUS mandatory\n              DESCRIPTION\n                  \"The status\
    \ of this zone entry.\n                  Setting this object to the value invalid(2)\
    \ has the\n                  effect of invalidating the corresponding entry in\n\
    \                  the atportZoneTable.  That is, it effectively\n           \
    \       disassociates the mapping identified with said\n                  entry.\
    \  It is an implementation-specific matter as\n                  to whether the\
    \ agent removes an invalidated entry\n                  from the table. Accordingly,\
    \ management stations\n                  must be prepared to receive from agents\
    \ tabular\n                  information corresponding to entries not currently\n\
    \                  in use.  Proper interpretation of such entries\n          \
    \        requires examination of the relevant\n                  atportZoneStatus\
    \ object.\"\n              ::= { atportZoneEntry 3 }\n          -- The DDP Group\n\
    \          --\n          -- Implementation of this group is mandatory for all\n\
    \          -- entities that implement DDP\n          --\n          -- This group\
    \ consists of DDP variables that would be\n          -- implemented by either\
    \ a router or an end node.  The\n          -- following variables are included:\n\
    \          --     ddpOutRequests\n          --     ddpOutShorts\n          --\
    \     ddpOutLongs\n          --     ddpInReceives\n          --     ddpInLocalDatagrams\n\
    \          --     ddpNoProtocolHandlers\n          --     ddpTooShortErrors\n\
    \          --     ddpTooLongErrors\n          --     ddpShortDDPErrors\n     \
    \     --     ddpChecksumErrors\n          --     ddpListenerTable\n          --\n\
    \          -- Note that the variables in this group are not numbered\n       \
    \   -- sequentially.  This was done so that it was not necessary\n          --\
    \ to deprecate variables from RFC 1243.\n          ddpOutRequests OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The total number of\
    \ DDP datagrams which were\n                  supplied to DDP by local DDP clients\
    \ in requests for\n                  transmission.  Note that this counter does\
    \ not\n                  include any datagrams counted in ddpForwRequests.\"\n\
    \              ::= { ddp 1 }\n          ddpOutShorts OBJECT-TYPE\n           \
    \   SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The total number of short DDP\
    \ datagrams which were\n                  transmitted from this entity.\"\n  \
    \            ::= { ddp 2 }\n          ddpOutLongs OBJECT-TYPE\n              SYNTAX\
    \ Counter\n              ACCESS read-only\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The total number of long DDP datagrams\
    \ which were\n                  transmitted from this entity.\"\n            \
    \  ::= { ddp 3 }\n          ddpInReceives OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The total number of input datagrams received\
    \ by\n                  DDP, including those received in error.\"\n          \
    \    ::= { ddp 4 }\n          ddpInLocalDatagrams OBJECT-TYPE\n              SYNTAX\
    \ Counter\n              ACCESS read-only\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The total number of input DDP datagrams\
    \ for which\n                  this\n                  entity was their final\
    \ DDP destination.\"\n              ::= { ddp 6 }\n          ddpNoProtocolHandlers\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The total number of DDP datagrams addressed to this\n                  entity\
    \ that were addressed to an upper layer protocol\n                  for which\
    \ no protocol handler existed.\"\n              ::= { ddp 7 }\n          ddpTooShortErrors\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The total number of input DDP datagrams dropped\n                  because\
    \ the received data length was less than the\n                  data length specified\
    \ in the DDP header or the\n                  received data length was less than\
    \ the length of the\n                  expected DDP header.\"\n              ::=\
    \ { ddp 9 }\n          ddpTooLongErrors OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The total number of input DDP datagrams dropped\n\
    \                  because they exceeded the maximum DDP datagram\n          \
    \        size.\"\n              ::= { ddp 10 }\n          ddpShortDDPErrors OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The total number of\
    \ input DDP datagrams dropped\n                  because this entity was not their\
    \ final destination\n                  and their type was short DDP.\"\n     \
    \         ::= { ddp 12 }\n          ddpChecksumErrors OBJECT-TYPE\n          \
    \    SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The total number of input DDP\
    \ datagrams for which\n                  this DDP entity was their final destination,\
    \ and\n                  which were dropped because of a checksum error.\"\n \
    \             ::= { ddp 14 }\n          ddpListenerTable OBJECT-TYPE\n       \
    \       SYNTAX SEQUENCE OF DdpListenerEntry\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The ddpListenerTable stores information for each\n                  DDP socket\
    \ that has a listener.\"\n              ::= { ddp 15 }\n          ddpListenerEntry\
    \ OBJECT-TYPE\n              SYNTAX DdpListenerEntry\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"This ddpListenerEntry contains information about a\n                  particular\
    \ socket that has a socket listener.\n                  As an example, an instance\
    \ of the ddpListenerStatus\n                  object might be named ddpListenerStatus.0.80.220.1\"\
    \n              INDEX { ddpListenerAddress }\n              ::= { ddpListenerTable\
    \ 1 }\n          DdpListenerEntry ::= SEQUENCE {\n              ddpListenerAddress\
    \         DdpSocketAddress,\n              ddpListenerInPkts          Counter,\n\
    \              ddpListenerStatus          INTEGER\n          }\n          ddpListenerAddress\
    \ OBJECT-TYPE\n              SYNTAX DdpSocketAddress\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The DDP address that this socket listener is bound\n                  to.\
    \  If this socket listener isn't bound to a\n                  particular address,\
    \ for instance if it is intended\n                  for all interfaces, this object\
    \ shall have the value\n                  of three octets of zero followed by\
    \ one octet of\n                  socket number. The socket number must not equal\n\
    \                  zero.\"\n              ::= { ddpListenerEntry 1 }\n       \
    \   ddpListenerInPkts OBJECT-TYPE\n              SYNTAX Counter\n            \
    \  ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of packets received for this listener.\"\n   \
    \           ::= { ddpListenerEntry 2 }\n          ddpListenerStatus OBJECT-TYPE\n\
    \              SYNTAX INTEGER {\n                  valid(1),\n               \
    \   invalid(2)\n              }\n              ACCESS read-write\n           \
    \   STATUS mandatory\n              DESCRIPTION\n                  \"The status\
    \ of this socket listener.\n                  Setting this object to the value\
    \ invalid(2) has the\n                  effect of invalidating the corresponding\
    \ entry in the\n                  ddpListenerTable.  That is, it effectively\n\
    \                  disassociates the mapping identified with said\n          \
    \        entry.  It is an implementation-specific matter as\n                \
    \  to whether the agent removes an invalidated entry\n                  from the\
    \ table. Accordingly, management stations\n                  must be prepared\
    \ to receive from agents tabular\n                  information corresponding\
    \ to entries not currently\n                  in use.  Proper interpretation of\
    \ such entries\n                  requires examination of the relevant\n     \
    \             ddpListenerStatus object.\"\n              ::= { ddpListenerEntry\
    \ 3 }\n          -- The DDP Router Group\n          --\n          -- Implementation\
    \ of this group is required for all routers\n          -- which implement DDP\n\
    \          --\n          -- This group consists of DDP variables that only a router\n\
    \          -- would implement.  The following variables are included:\n      \
    \    --     ddpForwRequests\n          --     ddpOutNoRoutes\n          --   \
    \  ddpBroadcastErrors\n          --     ddpHopCountErrors\n          --     ddpForwardingTable\n\
    \          --\n          -- Note that the variables in this group are not numbered\n\
    \          -- sequentially.  This was done so that variables from\n          --\
    \ RFC 1243 did not need to be deprecated.\n          ddpForwRequests OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of input\
    \ datagrams for which this entity\n                  was not their final DDP destination,\
    \ as a result of\n                  which an attempt was made to find a route\
    \ to forward\n                  them to that final destination.\"\n          \
    \    ::= { ddp 5 }\n          ddpOutNoRoutes OBJECT-TYPE\n              SYNTAX\
    \ Counter\n              ACCESS read-only\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The total number of DDP datagrams\
    \ dropped because a\n                  route could not be found to their final\
    \ destination.\"\n              ::= { ddp 8 }\n          ddpBroadcastErrors OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The total number of\
    \ input DDP datagrams dropped\n                  because this entity was not their\
    \ final destination\n                  and they were addressed to the link level\
    \ broadcast.\"\n              ::= { ddp 11 }\n          ddpHopCountErrors OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The total number of\
    \ input DDP datagrams dropped\n                  because this entity was not their\
    \ final destination\n                  and their hop count would exceed 15.\"\n\
    \              ::= { ddp 13 }\n          -- The ddpForwardingTable is a read-only\
    \ table which shows the\n          -- next hop that a datagram will take when\
    \ being routed to a\n          -- specific network.  If a manager wishes to change\
    \ data in\n          -- this table via SNMP, he must change it in the MIB for\
    \ the\n          -- routing protocol itself (by incrementing hop counts,\n   \
    \       -- etc), rather than in this table.  This table is derived\n         \
    \ -- by the managed entity from the information it receives\n          -- from\
    \ the routing protocols that it supports.\n          --\n          -- This table\
    \ also shows the routing table from which the next\n          -- hop was derived.\
    \  When a MIB is written for an AppleTalk\n          -- routing protocol, it should\
    \ include the definition of an\n          -- object identifier which will be used\
    \ in the\n          -- ddpForwardingProto variable defined here.  (For example,\n\
    \          -- a value for RTMP is defined as { ddp-forw-proto-oids 1 }\n     \
    \     -- below.)\n          --\n          -- To look for a specific net N in this\
    \ table, it is suggested\n          -- that the management station perform a get-next\
    \ query for\n          -- ddpForwardingNetEnd.(N-1).  This will retrieve the correct\n\
    \          -- row if it exists in the table.\n          ddpForwardingTable OBJECT-TYPE\n\
    \              SYNTAX SEQUENCE OF DdpForwardingEntry\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"A table of forwarding entries for DDP.  This table\n                  contains\
    \ a route for each AppleTalk network currently\n                  known to the\
    \ entity.\"\n              ::= { ddp 16 }\n          ddpForwardingEntry OBJECT-TYPE\n\
    \              SYNTAX DdpForwardingEntry\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"A forwarding entry for a particular AppleTalk\n                  network.\n\
    \                  As an example, an instance of the ddpForwardingPort\n     \
    \             object might be named ddpForwardingPort.0.90\"\n              INDEX\
    \ { ddpForwardingNetEnd }\n              ::= { ddpForwardingTable 1 }\n      \
    \    DdpForwardingEntry ::= SEQUENCE {\n              ddpForwardingNetEnd    \
    \     ATNetworkNumber,\n              ddpForwardingNetStart       ATNetworkNumber,\n\
    \              ddpForwardingNextHop        OCTET STRING,\n              ddpForwardingProto\
    \          OBJECT IDENTIFIER,\n              ddpForwardingModifiedTime   TimeTicks,\n\
    \              ddpForwardingUseCounts      Counter,\n              ddpForwardingPort\
    \           INTEGER\n          }\n          ddpForwardingNetEnd OBJECT-TYPE\n\
    \              SYNTAX ATNetworkNumber\n              ACCESS not-accessible\n \
    \             STATUS mandatory\n              DESCRIPTION\n                  \"\
    The last network number in the network range\n                  matched by this\
    \ forwarding entry.  This will not be\n                  zero even if this corresponds\
    \ to a non-extended\n                  net.\"\n              ::= { ddpForwardingEntry\
    \ 1 }\n          ddpForwardingNetStart OBJECT-TYPE\n              SYNTAX ATNetworkNumber\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The first network number in the network range\n\
    \                  matched by this forwarding entry.\"\n              ::= { ddpForwardingEntry\
    \ 2 }\n          ddpForwardingNextHop OBJECT-TYPE\n              SYNTAX OCTET\
    \ STRING\n              ACCESS read-only\n              STATUS mandatory\n   \
    \           DESCRIPTION\n                  \"The next hop in the route to this\
    \ entry's\n                  destination network.  The format of this address\
    \ can\n                  be determined by examinating the atportType\n       \
    \           corresponding to this entry.\"\n              ::= { ddpForwardingEntry\
    \ 3 }\n          ddpForwardingProto OBJECT-TYPE\n              SYNTAX OBJECT IDENTIFIER\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The routing mechanism by which this route\
    \ was\n                  learned.\"\n              ::= { ddpForwardingEntry 4\
    \ }\n          ddpForwardingModifiedTime OBJECT-TYPE\n              SYNTAX TimeTicks\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The value of sysUpTime at the time of the\
    \ last\n                  modification to this entry.  The initial value of\n\
    \                  ddpForwardingModified time shall be the value of\n        \
    \          sysUpTime at the time the entry is created.\"\n              ::= {\
    \ ddpForwardingEntry 5 }\n          ddpForwardingUseCounts OBJECT-TYPE\n     \
    \         SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of times\
    \ this entry has been used to\n                  route a packet to the destination\
    \ network.  Note\n                  that this counter is not cleared when the\n\
    \                  corresponding ddpForwardingNextHop variable\n             \
    \     changes.\"\n             ::= { ddpForwardingEntry 6 }\n          ddpForwardingPort\
    \ OBJECT-TYPE\n              SYNTAX INTEGER\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The AppleTalk port through which\n                  ddpForwardingNextHop is\
    \ reached.  The interface\n                  identified by a particular value\
    \ of this variable is\n                  the same interface as identified by the\
    \ same value\n                  of atportIndex.\"\n              ::= { ddpForwardingEntry\
    \ 7 }\n          ddpForwProtoOids OBJECT IDENTIFIER ::= { ddp 17 }\n         \
    \ -- The value to be assigned to ddpForwardingProto when the\n          -- routing\
    \ protocol is RTMP.\n          rtmpRoutingProto OBJECT IDENTIFIER ::= { ddpForwProtoOids\
    \ 1 }\n          -- The value to be assigned to ddpForwardingProto when the\n\
    \          -- routing protocol is KIP.\n          kipRoutingProto OBJECT IDENTIFIER\
    \ ::= { ddpForwProtoOids 2 }\n          ddpForwardingTableOverflows OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of times\
    \ the entity attempted to add an\n                  entry to the forwarding table\
    \ but failed due to\n                  overflow.\"\n              ::= { ddp 18\
    \ }\n          -- The RTMP Group\n          --\n          -- Implementation of\
    \ this group is required for all routers\n          -- which implement RTMP\n\
    \          rtmpTable OBJECT-TYPE\n              SYNTAX SEQUENCE OF RtmpEntry\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"A list of Routing Table Maintenance Protocol\n\
    \                  entries for this entity.\"\n              ::= { rtmp 1 }\n\
    \          rtmpEntry OBJECT-TYPE\n              SYNTAX RtmpEntry\n           \
    \   ACCESS not-accessible\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The route entry to a particular network range.\n        \
    \          As an example, an instance of the rtmpPort object\n               \
    \   might be named rtmpPort.0.80\"\n              INDEX { rtmpRangeStart }\n \
    \             ::= { rtmpTable 1 }\n          RtmpEntry ::= SEQUENCE {\n      \
    \        rtmpRangeStart  ATNetworkNumber,\n              rtmpRangeEnd    ATNetworkNumber,\n\
    \              rtmpNextHop     OCTET STRING,\n              rtmpType        INTEGER,\n\
    \              rtmpPort        INTEGER,\n              rtmpHops        INTEGER,\n\
    \              rtmpState       INTEGER\n          }\n          rtmpRangeStart\
    \ OBJECT-TYPE\n              SYNTAX ATNetworkNumber\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The first DDP network address in the network range\n                  to which\
    \ this routing entry pertains.  This is a two\n                  octet DDP network\
    \ address in network byte order.\"\n              ::= { rtmpEntry 1 }\n      \
    \    rtmpRangeEnd OBJECT-TYPE\n              SYNTAX ATNetworkNumber\n        \
    \      ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The last DDP network address in the network range\n     \
    \             to which this routing entry pertains.  This is a two\n         \
    \         octet DDP network address in network byte order.  If\n             \
    \     the network to which this routing entry pertains is\n                  a\
    \ non-extended network, the value for rtmpRangeEnd\n                  shall be\
    \ two octets of zero.\"\n              ::= { rtmpEntry 2 }\n          rtmpNextHop\
    \ OBJECT-TYPE\n              SYNTAX OCTET STRING\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The next internet router in the route to this\n                  entry's destination\
    \ network.  The format of this\n                  address can be determined by\
    \ examinating the\n                  atportType corresponding to this entry.\"\
    \n              ::= { rtmpEntry 3 }\n          rtmpType OBJECT-TYPE\n        \
    \      SYNTAX INTEGER {\n                  other(1),\n                  appletalk(2),\n\
    \                  serialPPP(3),\n                  serialNonstandard(4)\n   \
    \           }\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The type of network over which\
    \ this route points.\"\n              ::= { rtmpEntry 4 }\n          rtmpPort\
    \ OBJECT-TYPE\n              SYNTAX INTEGER\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The AppleTalk port over which this route points.\n                  The interface\
    \ identified by a particular value of\n                  this variable is the\
    \ same interface as identified by\n                  the same value of atportIndex.\"\
    \n              ::= { rtmpEntry 5 }\n          rtmpHops OBJECT-TYPE\n        \
    \      SYNTAX INTEGER\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of hops required to\
    \ reach the\n                  destination network to which this routing entry\n\
    \                  pertains.\"\n              ::= { rtmpEntry 6 }\n          rtmpState\
    \ OBJECT-TYPE\n              SYNTAX INTEGER {\n                  good(1),\n  \
    \                suspect(2),\n                  badZero(3),\n                \
    \  badOne(4),\n                  invalid(5)\n              }\n              ACCESS\
    \ read-write\n              STATUS mandatory\n              DESCRIPTION\n    \
    \              \"The status of the information contained in this\n           \
    \       route entry.\n                  Setting this object to the value invalid(5)\
    \ has the\n                  effect of invalidating the corresponding entry in\n\
    \                  the rtmpTable.  That is, it  effectively\n                \
    \  disassociates the mapping identified with said\n                  entry.  It\
    \ is an implementation-specific matter as\n                  to whether the agent\
    \ removes an invalidated entry\n                  from the table. Accordingly,\
    \ management stations\n                  must be prepared to receive from agents\
    \ tabular\n                  information corresponding to entries not currently\n\
    \                  in use.  Proper interpretation of such entries\n          \
    \        requires examination of the relevant rtmpState\n                  object.\"\
    \n              ::= { rtmpEntry 7 }\n          rtmpInDataPkts OBJECT-TYPE\n  \
    \            SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"A count of the number\
    \ of good RTMP data packets\n                  received by this entity.\"\n  \
    \            ::= { rtmp 2 }\n          rtmpOutDataPkts OBJECT-TYPE\n         \
    \     SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"A count of the number of RTMP\
    \ packets sent by this\n                  entity.\"\n              ::= { rtmp\
    \ 3 }\n          rtmpInRequestPkts OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"A count of the number of good RTMP Request\
    \ packets\n                  received by this entity.\"\n              ::= { rtmp\
    \ 4 }\n          rtmpNextIREqualChanges OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"A count of the number of times RTMP changes\
    \ the\n                  Next Internet Router in a routing entry because the\n\
    \                  hop count advertised in a routing tuple was equal to\n    \
    \              the current hop count for a particular network.\"\n           \
    \   ::= { rtmp 5 }\n          rtmpNextIRLessChanges OBJECT-TYPE\n            \
    \  SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"A count of the number of times\
    \ RTMP changes the\n                  Next Internet Router in a routing entry\
    \ because the\n                  hop count advertised in a routing tuple was less\n\
    \                  than the current hop count for a particular network.\"\n  \
    \            ::= { rtmp 6 }\n          rtmpRouteDeletes OBJECT-TYPE\n        \
    \      SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"A count of the number of times\
    \ RTMP deletes a route\n                  because it was aged out of the table.\
    \  This can help\n                  to detect routing problems.\"\n          \
    \    ::= { rtmp 7 }\n          rtmpRoutingTableOverflows OBJECT-TYPE\n       \
    \       SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of times RTMP attempted\
    \ to add a route\n                  to the RTMP table but failed due to lack of\
    \ space.\"\n              ::= { rtmp 8 }\n          -- The RTMP Stub Group\n \
    \         --\n          -- Implementation of this group is mandatory for all\n\
    \          -- entities that implement RTMP\n          --\n          -- It is intended\
    \ that this group be implemented by routers\n          -- and end nodes.\n   \
    \       rtmpOutRequestPkts OBJECT-TYPE\n              SYNTAX Counter\n       \
    \       ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"A count of the number of RTMP Request packets sent\n    \
    \              by this entity.\"\n              ::= { rtmpStub 1 }\n         \
    \ rtmpInVersionMismatches OBJECT-TYPE\n              SYNTAX Counter\n        \
    \      ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"A count of the number of RTMP packets received by\n     \
    \             this entity that were rejected due to a version\n              \
    \    mismatch.\"\n              ::= { rtmpStub 2 }\n          rtmpInErrors OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"A count of the number\
    \ of RTMP packets received by\n                  this entity that were rejected\
    \ for an error other\n                  than version mismatch.\"\n           \
    \   ::= { rtmpStub 3 }\n          -- The KIP Group\n          --\n          --\
    \ Implementation of this group is mandatory for all\n          -- entities that\
    \ implement KIP\n          kipTable OBJECT-TYPE\n              SYNTAX SEQUENCE\
    \ OF KipEntry\n              ACCESS not-accessible\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The table of routing information\
    \ for KIP networks.\"\n              ::= { kip 1 }\n          kipEntry OBJECT-TYPE\n\
    \              SYNTAX KipEntry\n              ACCESS not-accessible\n        \
    \      STATUS mandatory\n              DESCRIPTION\n                  \"An entry\
    \ in the routing table for KIP networks.\n                  As an example, an\
    \ instance of the kipCore object\n                  might be named kipCore.0.80\"\
    \n              INDEX { kipNetStart }\n              ::= { kipTable 1 }\n    \
    \      KipEntry ::= SEQUENCE {\n              kipNetStart     ATNetworkNumber,\n\
    \              kipNetEnd       ATNetworkNumber,\n              kipNextHop    \
    \  IpAddress,\n              kipHopCount     INTEGER,\n              kipBCastAddr\
    \    IpAddress,\n              kipCore         INTEGER,\n              kipType\
    \         INTEGER,\n              kipState        INTEGER,\n              kipShare\
    \        INTEGER,\n              kipFrom         IpAddress\n          }\n    \
    \      kipNetStart OBJECT-TYPE\n              SYNTAX ATNetworkNumber\n       \
    \       ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The first AppleTalk network address in the range\n      \
    \            for this routing entry.  This address is a two octet\n          \
    \        DDP network address in network byte order.\"\n              ::= { kipEntry\
    \ 1 }\n          kipNetEnd OBJECT-TYPE\n              SYNTAX ATNetworkNumber\n\
    \              ACCESS read-write\n              STATUS mandatory\n           \
    \   DESCRIPTION\n                  \"The last AppleTalk network address in the\
    \ range for\n                  this routing entry.  This address is a two octet\
    \ DDP\n                  network address in network byte order.  If the\n    \
    \              network to which this AppleTalk port is connected is\n        \
    \          a non-extended network, the value for kipNetEnd\n                 \
    \ shall be two octets of zero.\"\n              ::= { kipEntry 2 }\n         \
    \ kipNextHop OBJECT-TYPE\n              SYNTAX IpAddress\n              ACCESS\
    \ read-write\n              STATUS mandatory\n              DESCRIPTION\n    \
    \              \"The IP address of the next hop in the route to this\n       \
    \           entry's destination network.\"\n              ::= { kipEntry 3 }\n\
    \          kipHopCount OBJECT-TYPE\n              SYNTAX INTEGER\n           \
    \   ACCESS read-write\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of hops required to reach the destination\n  \
    \                network to which this entry pertains.\"\n              ::= {\
    \ kipEntry 4 }\n          kipBCastAddr OBJECT-TYPE\n              SYNTAX IpAddress\n\
    \              ACCESS read-write\n              STATUS mandatory\n           \
    \   DESCRIPTION\n                  \"The form of the IP address used to broadcast\
    \ on this\n                  network.\"\n              ::= { kipEntry 5 }\n  \
    \        kipCore OBJECT-TYPE\n              SYNTAX INTEGER {\n               \
    \    core(1),\n                   notcore(2)\n              }\n              ACCESS\
    \ read-write\n              STATUS mandatory\n              DESCRIPTION\n    \
    \              \"The status of kipNextHop as a core gateway.\"\n             \
    \ ::= { kipEntry 6 }\n          kipType OBJECT-TYPE\n              SYNTAX INTEGER\
    \ {\n                   kipRouter(1),\n                   net(2),\n          \
    \         host(3),\n                   other(4),\n                   async(5)\n\
    \              }\n              ACCESS read-write\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The type of the entity that this\
    \ route points to.\"\n              ::= { kipEntry 7 }\n          kipState OBJECT-TYPE\n\
    \              SYNTAX INTEGER {\n                   configured(1),  -- this entry\
    \ is not aged\n                   learned(2),\n                   invalid(3)\n\
    \              }\n              ACCESS read-write\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The state of this network entry.\n\
    \                  Setting this object to the value invalid(3) has the\n     \
    \             effect of invalidating the corresponding entry in the\n        \
    \          kipTable.  That is, it  effectively disassociates the\n           \
    \       mapping identified with said entry.  It is an\n                  implementation-specific\
    \ matter as to whether the agent\n                  removes an invalidated entry\
    \ from the table.\n                  Accordingly, management stations must be\
    \ prepared to\n                  receive from agents tabular information corresponding\n\
    \                  to entries not currently in use.  Proper\n                \
    \  interpretation of such entries requires examination\n                  of the\
    \ relevant kipState object.\"\n              ::= { kipEntry 8 }\n          kipShare\
    \ OBJECT-TYPE\n              SYNTAX INTEGER {\n                   shared(1),\n\
    \                   private(2)\n              }\n              ACCESS read-write\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"If the information in this entry is propagated to\n                  other\
    \ routers as part of the AA routing protocol,\n                  the value of\
    \ this variable is equal to shared(1).\n                  Otherwise its value\
    \ is private(2).\"\n              ::= { kipEntry 9 }\n          kipFrom OBJECT-TYPE\n\
    \              SYNTAX IpAddress\n              ACCESS read-only\n            \
    \  STATUS mandatory\n              DESCRIPTION\n                  \"The IP address\
    \ from which the routing entry was\n                  learned via the AA protocol.\
    \  If this entry was not\n                  created via the AA protocol, it should\
    \ contain IP\n                  address 0.0.0.0.\"\n              ::= { kipEntry\
    \ 10 }\n          -- The ZIP Router Group\n          --\n          -- Implementation\
    \ of this group is required for all routers\n          -- which implement ZIP\n\
    \          --\n          -- This group consists of ZIP variables that would be\n\
    \          -- implemented by a router.\n          zipTable OBJECT-TYPE\n     \
    \         SYNTAX SEQUENCE OF ZipEntry\n              ACCESS not-accessible\n \
    \             STATUS mandatory\n              DESCRIPTION\n                  \"\
    The table of zone information for reachable\n                  AppleTalk networks.\"\
    \n              ::= { zipRouter 1 }\n          zipEntry OBJECT-TYPE\n        \
    \      SYNTAX ZipEntry\n              ACCESS not-accessible\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"An entry of zone information\
    \ for a particular zone\n                  and network combination.\n        \
    \          As an example, an instance of the zipZoneState object\n           \
    \       might be named zipZoneState.0.80.4\"\n              INDEX { zipZoneNetStart,\
    \ zipZoneIndex }\n              ::= { zipTable 1 }\n          ZipEntry ::= SEQUENCE\
    \ {\n              zipZoneName     ATName,\n              zipZoneIndex    INTEGER,\n\
    \              zipZoneNetStart ATNetworkNumber,\n              zipZoneNetEnd \
    \  ATNetworkNumber,\n              zipZoneState    INTEGER,\n              zipZoneFrom\
    \     OCTET STRING,\n              zipZonePort     INTEGER\n          }\n    \
    \      zipZoneName OBJECT-TYPE\n              SYNTAX ATName\n              ACCESS\
    \ read-only\n              STATUS mandatory\n              DESCRIPTION\n     \
    \             \"The zone name of this entry.  This is stored in\n            \
    \      Mac ASCII format.  If the full zone list for the\n                  entry\
    \ is not known, the value for zipZoneName shall\n                  be a zero length\
    \ octet string.\"\n              ::= { zipEntry 1 }\n          zipZoneIndex OBJECT-TYPE\n\
    \              SYNTAX INTEGER\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"An integer that is\
    \ unique to the zipZoneName that\n                  is present in this entry.\
    \  For any given zone name,\n                  every zipEntry that has an equal\
    \ zone name will have\n                  the same zipZoneIndex.  When a zone name\
    \ is\n                  discovered which is not currently in the table, it\n \
    \                 will be assigned an index greater than any\n               \
    \   previously assigned index.\"\n              ::= { zipEntry 2 }\n         \
    \ zipZoneNetStart OBJECT-TYPE\n              SYNTAX ATNetworkNumber\n        \
    \      ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The network that starts the range for this entry.\n     \
    \             This address is a two octet DDP network address in\n           \
    \       network byte order.\"\n              ::= { zipEntry 3 }\n          zipZoneNetEnd\
    \ OBJECT-TYPE\n              SYNTAX ATNetworkNumber\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The network that ends the range for this entry.\n                  This address\
    \ is a two octet DDP network address in\n                  network byte order.\
    \  If the network to which this\n                  zip entry pertains is a non-extended\
    \ network, the\n                  value for zipZoneNetEnd shall be two octets\
    \ of\n                  zero.\"\n              ::= { zipEntry 4 }\n          zipZoneState\
    \ OBJECT-TYPE\n              SYNTAX INTEGER {\n                  valid(1),\n \
    \                 invalid(2)\n              }\n              ACCESS read-write\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The state of this zip entry.\n                  Setting this object to the\
    \ value invalid(2) has the\n                  effect of invalidating the corresponding\
    \ entry in\n                  the zipTable.  That is, it  effectively\n      \
    \            disassociates the mapping identified with said\n                \
    \  entry.  It is an implementation-specific matter as\n                  to whether\
    \ the agent removes an invalidated entry\n                  from the table. Accordingly,\
    \ management stations\n                  must be prepared to receive from agents\
    \ tabular\n                  information corresponding to entries not currently\n\
    \                  in use.  Proper interpretation of such entries\n          \
    \        requires examination of the relevant zipZoneState\n                 \
    \ object.\"\n              ::= { zipEntry 5 }\n          zipZoneFrom OBJECT-TYPE\n\
    \              SYNTAX OCTET STRING\n              ACCESS read-only\n         \
    \     STATUS mandatory\n              DESCRIPTION\n                  \"The address\
    \ from which this zone name to network\n                  number mapping was learned.\
    \  The format of this\n                  address can be determined by examining\
    \ the\n                  atportType corresponding to this entry.  When this\n\
    \                  mapping is learned from the entity itself, this\n         \
    \         object shall have the value of three\n                  octets of zero.\"\
    \n              ::= { zipEntry 6 }\n          zipZonePort OBJECT-TYPE\n      \
    \        SYNTAX INTEGER\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The AppleTalk port\
    \ through which this zone name to\n                  network number mapping was\
    \ learned.  The interface\n                  identified by a particular value\
    \ of this variable is\n                  the same interface as identified by the\
    \ same value\n                  of atportIndex.\"\n              ::= { zipEntry\
    \ 7 }\n          zipInZipQueries OBJECT-TYPE\n              SYNTAX Counter\n \
    \             ACCESS read-only\n              STATUS mandatory\n             \
    \ DESCRIPTION\n                  \"The number of ZIP Queries received by this\
    \ entity.\"\n              ::= { zipRouter 2 }\n          zipInZipReplies OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of ZIP\
    \ Replies received by this entity.\"\n              ::= { zipRouter 3 }\n    \
    \      zipInZipExtendedReplies OBJECT-TYPE\n              SYNTAX Counter\n   \
    \           ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of ZIP Extended Replies received by this\n   \
    \               entity.\"\n              ::= { zipRouter 4 }\n          zipZoneConflictErrors\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of times a conflict has been detected\n                  between\
    \ this entity's zone information and another\n                  entity's zone\
    \ information.\"\n              ::= { zipRouter 5 }\n          zipInObsoletes\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of ZIP Takedown or ZIP Bringup packets\n                  received\
    \ by this entity.  Note that as the ZIP\n                  Takedown and ZIP Bringup\
    \ packets have been\n                  obsoleted, the receipt of one of these\
    \ packets\n                  indicates that a node sent it in error.\"\n     \
    \         ::= { zipRouter 6 }\n          -- The zipRouterNetInfoTable is used\
    \ to record information\n          -- about zipGetNetInfo and zipGetNetInfo Reply\
    \ packets that\n          -- were received on each port for a router.  This table\n\
    \          -- augments the atportTable.\n          zipRouterNetInfoTable OBJECT-TYPE\n\
    \              SYNTAX SEQUENCE OF ZipRouterNetInfoEntry\n              ACCESS\
    \ not-accessible\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The table of Net Info packets received by each port\n   \
    \               on this entity.\"\n              ::= { zipRouter 7 }\n       \
    \   zipRouterNetInfoEntry OBJECT-TYPE\n              SYNTAX ZipRouterNetInfoEntry\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The description of the Net Info packets\
    \ received on\n                  a particular port on this entity.  One such entry\n\
    \                  shall exist for each atport on this router entity.\n      \
    \            As an example, an instance of the zipInGetNetInfos\n            \
    \      object might be named zipInGetNetInfos.2\"\n              INDEX { atportIndex\
    \ }\n              ::= { zipRouterNetInfoTable 1 }\n          ZipRouterNetInfoEntry\
    \ ::= SEQUENCE {\n              zipInGetNetInfos        Counter,\n           \
    \   zipOutGetNetInfoReplies Counter,\n              zipZoneOutInvalids      Counter,\n\
    \              zipAddressInvalids      Counter\n          }\n          zipInGetNetInfos\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of ZIP GetNetInfo packets received on\n                  this port\
    \ by this entity.\"\n              ::= { zipRouterNetInfoEntry 1 }\n         \
    \ zipOutGetNetInfoReplies OBJECT-TYPE\n              SYNTAX Counter\n        \
    \      ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of ZIP GetNetInfo Reply packets sent out\n   \
    \               this port by this entity.\"\n              ::= { zipRouterNetInfoEntry\
    \ 2 }\n          zipZoneOutInvalids OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of times this entity has sent a\
    \ ZIP\n                  GetNetInfo Reply with the zone invalid bit set in\n \
    \                 response to a GetNetInfo Request with an invalid\n         \
    \         zone name.\"\n              ::= { zipRouterNetInfoEntry 3 }\n      \
    \    zipAddressInvalids OBJECT-TYPE\n              SYNTAX Counter\n          \
    \    ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of times this entity had to broadcast a\n    \
    \              ZIP GetNetInfo Reply because the GetNetInfo Request\n         \
    \         had an invalid address.\"\n              ::= { zipRouterNetInfoEntry\
    \ 4 }\n          -- The ZIP End Node Group\n          --\n          -- Implementation\
    \ of this group is mandatory for all entities\n          -- that implement ZIP\n\
    \          --\n          -- This group consists of ZIP variables that would be\n\
    \          -- implemented by either a router or an end node.\n          -- The\
    \ zipNetInfoTable is used to record information about\n          -- zipGetNetInfo\
    \ and zipGetNetInfo Reply packets that were\n          -- received on each port\
    \ of an entity.  This table augments\n          -- the atportTable.\n        \
    \  zipNetInfoTable OBJECT-TYPE\n              SYNTAX SEQUENCE OF ZipNetInfoEntry\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The table of Net Info packets received\
    \ by each port\n                  on this entity.\"\n              ::= { zipEndNode\
    \ 1 }\n          zipNetInfoEntry OBJECT-TYPE\n              SYNTAX ZipNetInfoEntry\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The description of the Net Info packets\
    \ received on\n                  a particular port on this entity.  One such entry\n\
    \                  shall exist for each atport on this entity.\n             \
    \     As an example, an instance of the zipOutGetNetInfos\n                  object\
    \ might be named zipOutGetNetInfos.2\"\n              INDEX { atportIndex }\n\
    \              ::= { zipNetInfoTable 1 }\n          ZipNetInfoEntry ::= SEQUENCE\
    \ {\n              zipOutGetNetInfos       Counter,\n              zipInGetNetInfoReplies\
    \  Counter,\n              zipZoneInInvalids       Counter\n          }\n    \
    \      zipOutGetNetInfos OBJECT-TYPE\n              SYNTAX Counter\n         \
    \     ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of ZIP GetNetInfo packets sent out this\n    \
    \              port by this entity.\"\n              ::= { zipNetInfoEntry 1 }\n\
    \          zipInGetNetInfoReplies OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of ZIP GetNetInfo Reply packets\
    \ received\n              on this port by this entity.\"\n              ::= {\
    \ zipNetInfoEntry 2 }\n          zipZoneInInvalids OBJECT-TYPE\n             \
    \ SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of times this entity\
    \ has received a ZIP\n                  GetNetInfo Reply with the zone invalid\
    \ bit set\n                  because the corresponding GetNetInfo Request had\
    \ an\n                  invalid zone name.\"\n              ::= { zipNetInfoEntry\
    \ 3 }\n          zipInErrors OBJECT-TYPE\n              SYNTAX Counter\n     \
    \         ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of ZIP packets received by this entity\n     \
    \             that were rejected for any error.\"\n              ::= { zipEndNode\
    \ 2 }\n          -- The NBP Group\n          --\n          -- Implementation of\
    \ this group is mandatory for all entities\n          -- that implement NBP\n\
    \          nbpTable OBJECT-TYPE\n              SYNTAX SEQUENCE OF NbpEntry\n \
    \             ACCESS not-accessible\n              STATUS mandatory\n        \
    \      DESCRIPTION\n                  \"The table of NBP services registered on\
    \ this entity.\"\n              ::= { nbp 1 }\n          nbpEntry OBJECT-TYPE\n\
    \              SYNTAX NbpEntry\n              ACCESS not-accessible\n        \
    \      STATUS mandatory\n              DESCRIPTION\n                  \"The description\
    \ of an NBP service registered on this\n                  entity.\n          \
    \        As an example, an instance of the nbpZone object\n                  might\
    \ be named nbpZone.2\"\n              INDEX { nbpIndex }\n              ::= {\
    \ nbpTable  1 }\n          NbpEntry ::= SEQUENCE {\n              nbpIndex   \
    \     INTEGER,\n              nbpObject       ATName (SIZE (1..32)),\n       \
    \       nbpType         ATName (SIZE (1..32)),\n              nbpZone        \
    \ ATName,\n              nbpState        INTEGER,\n              nbpAddress  \
    \    DdpSocketAddress,\n              nbpEnumerator   INTEGER (0..255)\n     \
    \     }\n          nbpIndex OBJECT-TYPE\n              SYNTAX INTEGER\n      \
    \        ACCESS read-write\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The index of this NBP entry.  This index is unique\n    \
    \              with respect to the indexes of all other NBP entries,\n       \
    \           and shall remain constant throughout the lifetime\n              \
    \    of this object.\"\n              ::= { nbpEntry 1 }\n          nbpObject\
    \ OBJECT-TYPE\n              SYNTAX ATName (SIZE (1..32))\n              ACCESS\
    \ read-write\n              STATUS mandatory\n              DESCRIPTION\n    \
    \              \"The name of the service described by this entity.\n         \
    \         When this variable is changed, the entity should\n                 \
    \ perform an NBP registration using the new nbpObject.\"\n              ::= {\
    \ nbpEntry 2 }\n          nbpType OBJECT-TYPE\n              SYNTAX ATName (SIZE\
    \ (1..32))\n              ACCESS read-write\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The type of the service described\
    \ by this entity.\n                  When this variable is changed, the entity\
    \ should\n                  perform an NBP registration using the new nbpType.\"\
    \n              ::= { nbpEntry 3 }\n          nbpZone OBJECT-TYPE\n          \
    \    SYNTAX ATName\n              ACCESS read-write\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The zone the service described\
    \ by this entity is\n                  registered in.  This must be the actual\
    \ zone name,\n                  without any wildcard characters.  When this variable\n\
    \                  is changed, the entity should perform an NBP\n            \
    \      registration using the new nbpZone.\"\n                  ::= { nbpEntry\
    \ 4 }\n          nbpState OBJECT-TYPE\n              SYNTAX INTEGER {\n      \
    \            valid(1),\n                  registering(2), -- attempting to register\
    \ the service\n                  registrationFailed(3),\n                  invalid(4)\n\
    \              }\n              ACCESS read-write\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The state of this NBP entry.\n\
    \                  When the registration for an entry in the nbpTable\n      \
    \            fails, it is an implementation-specific matter as to\n          \
    \        how long the entry will remain in the\n                  registrationFailed(3)\
    \ state before moving to the\n                  invalid(4) state.  Note that the\
    \ entry may pass\n                  immediately from the registrationFailed state\
    \ to\n                  the invalid state.\n                  Setting this object\
    \ to the value invalid(4) has the\n                  effect of invalidating the\
    \ corresponding entry in the\n                  nbpTable.  That is, it  effectively\
    \ disassociates the\n                  mapping identified with said entry.  It\
    \ is an\n                  implementation-specific matter as to whether the agent\n\
    \                  removes an invalidated entry from the table.\n            \
    \      Accordingly, management stations must be prepared to\n                \
    \  receive from agents tabular information corresponding\n                  to\
    \ entries not currently in use.  Proper\n                  interpretation of such\
    \ entries requires examination\n                  of the relevant nbpState object.\"\
    \n              ::= { nbpEntry 5 }\n          nbpAddress OBJECT-TYPE\n       \
    \       SYNTAX DdpSocketAddress\n              ACCESS read-write\n           \
    \   STATUS mandatory\n              DESCRIPTION\n                  \"The DDP network,\
    \ node, and socket number of this\n                  entity. If this is unspecified,\
    \ for instance if the\n                  registration is on all ports of a multiport\
    \ device,\n                  this object shall have the value of three octets\
    \ of\n                  zero, followed by one octet of socket number.\"\n    \
    \          ::= { nbpEntry 6 }\n          nbpEnumerator OBJECT-TYPE\n         \
    \     SYNTAX INTEGER (0..255)\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The enumerator assigned\
    \ to this entity.\"\n              ::= { nbpEntry 7 }\n          nbpInLookUpRequests\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of NBP LookUp Requests received.\"\n              ::= { nbp 2 }\n\
    \          nbpInLookUpReplies OBJECT-TYPE\n              SYNTAX Counter\n    \
    \          ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of NBP LookUp Replies received.\"\n          \
    \    ::= { nbp 3 }\n          nbpInBroadcastRequests OBJECT-TYPE\n           \
    \   SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of NBP Broadcast Requests\
    \ received.\"\n              ::= { nbp 4 }\n          nbpInForwardRequests OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of NBP\
    \ Forward Requests received.\"\n              ::= { nbp 5 }\n          nbpOutLookUpReplies\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of NBP LookUp Replies sent.\"\n              ::= { nbp 6 }\n  \
    \        nbpRegistrationFailures OBJECT-TYPE\n              SYNTAX Counter\n \
    \             ACCESS read-only\n              STATUS mandatory\n             \
    \ DESCRIPTION\n                  \"The number of times this node experienced a\
    \ failure\n                  in attempting to register an NBP entity.\"\n    \
    \          ::= { nbp 7 }\n              nbpInErrors OBJECT-TYPE\n            \
    \  SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of NBP packets received\
    \ by this entity\n                  that were rejected for any error.\"\n    \
    \          ::= { nbp 8 }\n          -- The ATEcho Group\n          --\n      \
    \    -- Implementation of this group is mandatory for all\n          -- entities\
    \ that implement ATEcho\n          atechoRequests OBJECT-TYPE\n              SYNTAX\
    \ Counter\n              ACCESS read-only\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The number of AppleTalk Echo requests\
    \ received.\"\n              ::= { atecho 1 }\n          atechoReplies OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of AppleTalk\
    \ Echo replies sent.\"\n              ::= { atecho 2 }\n          atechoOutRequests\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The count of AppleTalk Echo requests sent.\"\n              ::= { atecho 3\
    \ }\n          atechoInReplies OBJECT-TYPE\n              SYNTAX Counter\n   \
    \           ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The count of AppleTalk Echo replies received.\"\n       \
    \       ::= { atecho 4 }\n          -- The ATP Group\n          --\n         \
    \ -- Implementation of this group is mandatory for all entities\n          --\
    \ that implement ATP\n          atpInPkts OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of ATP packets received by this\
    \ entity.\"\n              ::= { atp 1 }\n          atpOutPkts OBJECT-TYPE\n \
    \             SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of ATP\
    \ packets sent by this entity.\"\n              ::= { atp 2 }\n          atpTRequestRetransmissions\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of times that a timeout occurred and a\n                  Transaction\
    \ Request packet needed to be\n                  retransmitted by this host.\"\
    \n              ::= { atp 3 }\n          atpTResponseRetransmissions OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of times\
    \ a timeout was detected and a\n                  Transaction Response packet\
    \ needed to be\n                  retransmitted by this host.\"\n            \
    \  ::= { atp 4 }\n          atpReleaseTimerExpiredCounts OBJECT-TYPE\n       \
    \       SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of times the release\
    \ timer expired, as a\n                  result of which a Request Control Block\
    \ had to be\n                  deleted.\"\n              ::= { atp 5 }\n     \
    \     atpRetryCountExceededs OBJECT-TYPE\n              SYNTAX Counter\n     \
    \         ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of times the retry count was exceeded,\n     \
    \             and an error was returned to the client of ATP.\"\n            \
    \  ::= { atp 6 }\n          atpListenerTable OBJECT-TYPE\n              SYNTAX\
    \ SEQUENCE OF AtpListenerEntry\n              ACCESS not-accessible\n        \
    \      STATUS mandatory\n              DESCRIPTION\n                  \"The atpListenerTable\
    \ stores information for each ATP\n                  socket that has a listener.\"\
    \n              ::= { atp 7 }\n          atpListenerEntry OBJECT-TYPE\n      \
    \        SYNTAX AtpListenerEntry\n              ACCESS not-accessible\n      \
    \        STATUS mandatory\n              DESCRIPTION\n                  \"This\
    \ atpListenerEntry contains information about a\n                  particular\
    \ socket that has a socket listener.\n                  As an example, an instance\
    \ of the atpListenerStatus\n                  object might be named atpListenerStatus.0.80.220.3\"\
    \n              INDEX { atpListenerAddress }\n              ::= { atpListenerTable\
    \ 1 }\n          AtpListenerEntry ::= SEQUENCE {\n              atpListenerAddress\
    \   DdpSocketAddress,\n              atpListenerStatus    INTEGER\n          }\n\
    \          atpListenerAddress OBJECT-TYPE\n              SYNTAX DdpSocketAddress\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The DDP address that this socket listener\
    \ is bound\n                  to. If this socket listener isn't bound to a\n \
    \                 particular address, for instance if it is intended\n       \
    \           for all interfaces, this object shall have the value\n           \
    \       of three octets of zero followed by one octet of\n                  socket\
    \ number.\"\n              ::= { atpListenerEntry 1 }\n          atpListenerStatus\
    \ OBJECT-TYPE\n              SYNTAX INTEGER {\n                  valid(1),\n \
    \                 invalid(2)\n              }\n              ACCESS read-write\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The status of this socket.\n                  Setting this object to the value\
    \ invalid(2) has the\n                  effect of invalidating the corresponding\
    \ entry in\n                  the atpListenerTable.  That is, it effectively\n\
    \                  disassociates the mapping identified with said\n          \
    \        entry.  It is an implementation-specific matter as\n                \
    \  to whether the agent removes an invalidated entry\n                  from the\
    \ table. Accordingly, management stations\n                  must be prepared\
    \ to receive from agents tabular\n                  information corresponding\
    \ to entries not currently\n                  in use.  Proper interpretation of\
    \ such entries\n                  requires examination of the relevant\n     \
    \             atpListenerStatus object.\"\n              ::= { atpListenerEntry\
    \ 2 }\n          -- The PAP group\n          --\n          -- Implementation of\
    \ this group is mandatory for all entities\n          -- that implement PAP\n\
    \          papInOpenConns OBJECT-TYPE\n              SYNTAX Counter\n        \
    \      ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of PAP Open Connection requests received\n   \
    \               by this entity.\"\n              ::= { pap 1 }\n          papOutOpenConns\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of PAP Open Connection requests sent by\n                  this\
    \ entity.\"\n              ::= { pap 2 }\n          papInDatas OBJECT-TYPE\n \
    \             SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of PAP\
    \ Data messages received by\n                  this entity.\"\n              ::=\
    \ { pap 3 }\n          papOutDatas OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of PAP Data messages sent by\n\
    \                  this entity.\"\n              ::= { pap 4 }\n          papInCloseConns\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of PAP Close Connection requests\n                  received by\
    \ this entity.\"\n              ::= { pap 5 }\n          papOutCloseConns OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of PAP\
    \ Close Connection requests sent by\n                  this entity.\"\n      \
    \        ::= { pap 6 }\n          papTickleTimeoutCloses OBJECT-TYPE\n       \
    \       SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of times the PAP entity\
    \ on this node\n                  closed a connection because it didn't receive\
    \ a\n                  Tickle message before its timer expired.\"\n          \
    \    ::= { pap 7 }\n          papServerTable OBJECT-TYPE\n              SYNTAX\
    \ SEQUENCE OF PapServerEntry\n              ACCESS not-accessible\n          \
    \    STATUS mandatory\n              DESCRIPTION\n                  \"A list of\
    \ servers on this entity that are\n                  accessible through the Printer\
    \ Access Protocol.\"\n              ::= { pap 8 }\n          papServerEntry OBJECT-TYPE\n\
    \              SYNTAX PapServerEntry\n              ACCESS not-accessible\n  \
    \            STATUS mandatory\n              DESCRIPTION\n                  \"\
    A set of information about a particular PAP server's\n                  configuration\
    \ and performance.\n                  As an example, an instance of the papServerStatus\n\
    \                  object might be named papServerStatus.1\"\n              INDEX\
    \ { papServerIndex }\n              ::= { papServerTable 1 }\n          PapServerEntry\
    \ ::= SEQUENCE {\n              papServerIndex                          INTEGER,\n\
    \              papServerListeningSocket                DdpSocketAddress,\n   \
    \           papServerStatus                         DisplayString,\n         \
    \     papServerCompletedJobs                  Counter,\n              papServerBusyJobs\
    \                       INTEGER,\n              papServerFreeJobs            \
    \           INTEGER,\n              papServerAuthenticationFailures         Counter,\n\
    \              papServerAccountingFailures             Counter,\n            \
    \  papServerGeneralFailures                Counter,\n              papServerState\
    \                          INTEGER,\n              papServerLastStatusMsg    \
    \              DisplayString\n          }\n          papServerIndex OBJECT-TYPE\n\
    \              SYNTAX INTEGER\n              ACCESS not-accessible\n         \
    \     STATUS mandatory\n              DESCRIPTION\n                  \"An unique\
    \ value for each Printer Access Protocol\n                  Server.\"\n      \
    \        ::= { papServerEntry 1 }\n          papServerListeningSocket OBJECT-TYPE\n\
    \              SYNTAX DdpSocketAddress\n              ACCESS read-write\n    \
    \          STATUS mandatory\n              DESCRIPTION\n                  \"The\
    \ Server Listening Socket that this PAP server is\n                  listening\
    \ on.\"\n              ::= { papServerEntry 2 }\n          papServerStatus OBJECT-TYPE\n\
    \              SYNTAX DisplayString\n              ACCESS read-only\n        \
    \      STATUS mandatory\n              DESCRIPTION\n                  \"The status\
    \ string of this server.  This is the\n                  message as it would appear\
    \ in a PAP Status Reply\n                  from this server.\"\n             \
    \ ::= { papServerEntry 3 }\n          papServerCompletedJobs OBJECT-TYPE\n   \
    \           SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of jobs\
    \ that have been accepted and\n                  successfully executed by this\
    \ server.\"\n              ::= { papServerEntry 4 }\n          papServerBusyJobs\
    \ OBJECT-TYPE\n              SYNTAX INTEGER\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of GetNextJob calls that have accepted\n                  and are\
    \ currently executing a job.\"\n              ::= { papServerEntry 5 }\n     \
    \     papServerFreeJobs OBJECT-TYPE\n              SYNTAX INTEGER\n          \
    \    ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The minimum number of GetNextJob calls that are\n       \
    \           currently waiting for a job.\"\n              ::= { papServerEntry\
    \ 6 }\n          papServerAuthenticationFailures OBJECT-TYPE\n              SYNTAX\
    \ Counter\n              ACCESS read-only\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The number of times this PAP server\
    \ rejected a job\n                  because the job was not correctly authenticated.\"\
    \n              ::= { papServerEntry 7 }\n          papServerAccountingFailures\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of times this PAP server rejected a job\n                  because\
    \ the job did not fit some accounting rule,\n                  such as exceeding\
    \ a quota.\"\n              ::= { papServerEntry 8 }\n          papServerGeneralFailures\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of times this PAP server rejected a job\n                  for\
    \ some reason other than authentication or\n                  accounting failures.\"\
    \n              ::= { papServerEntry 9 }\n          papServerState OBJECT-TYPE\n\
    \              SYNTAX INTEGER {\n                  valid(1),\n               \
    \   invalid(2)\n              }\n              ACCESS read-write\n           \
    \   STATUS mandatory\n              DESCRIPTION\n                  \"The state\
    \ of this PAP Server entry.\n                  Setting this object to the value\
    \ invalid(2) has the\n                  effect of invalidating the corresponding\
    \ entry in\n                  the papServerTable.  That is, it  effectively\n\
    \                  disassociates the mapping identified with said\n          \
    \        entry.  It is an implementation-specific matter as\n                \
    \  to whether the agent removes an invalidated entry\n                  from the\
    \ table. Accordingly, management stations\n                  must be prepared\
    \ to receive from agents tabular\n                  information corresponding\
    \ to entries not currently\n                  in use.  Proper interpretation of\
    \ such entries\n                  requires examination of the relevant papServerState\n\
    \                  object.\"\n              ::= { papServerEntry 10 }\n      \
    \    papServerLastStatusMsg OBJECT-TYPE\n              SYNTAX DisplayString\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The last status message that was transmitted\
    \ by\n                  this server.\"\n              ::= { papServerEntry 11\
    \ }\n          -- The ASP Group\n          --\n          -- Implementation of\
    \ this group is mandatory for all entities\n          -- that implement ASP\n\
    \          aspInputTransactions OBJECT-TYPE\n              SYNTAX Counter\n  \
    \            ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of ASP requests and replies received by\n    \
    \              this entity.  Note that this is not necessarily the\n         \
    \         number of packets containing ASP transactions.\"\n              ::=\
    \ { asp 1 }\n          aspOutputTransactions OBJECT-TYPE\n              SYNTAX\
    \ Counter\n              ACCESS read-only\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The number of ASP requests and replies\
    \ sent by this\n                  entity.  Note that this is not necessarily the\
    \ number\n                  of packets containing ASP transactions.\"\n      \
    \        ::= { asp 2 }\n          aspInOpenSessions OBJECT-TYPE\n            \
    \  SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of ASP Open Session\
    \ requests and replies\n                  received by this entity.\"\n       \
    \       ::= { asp 3 }\n          aspOutOpenSessions OBJECT-TYPE\n            \
    \  SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of ASP Open Session\
    \ requests and replies\n                  sent by this entity.\"\n           \
    \   ::= { asp 4 }\n          aspInCloseSessions OBJECT-TYPE\n              SYNTAX\
    \ Counter\n              ACCESS read-only\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The number of ASP Close Session\
    \ requests and replies\n                  received by this entity.\"\n       \
    \       ::= { asp 5 }\n          aspOutCloseSessions OBJECT-TYPE\n           \
    \   SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of ASP Close Session\
    \ requests and replies\n                  sent by this entity.\"\n           \
    \  ::= { asp 6 }\n          aspNoMoreSessionsErrors OBJECT-TYPE\n            \
    \  SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of times an error condition\
    \ was returned\n                  because this server implementation could not\
    \ support\n                  another session.\"\n              ::= { asp 7 }\n\
    \          aspTickleTimeOutCloses OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of times the ASP entity on this\
    \ node\n                  closed a connection because it didn't receive any\n\
    \                  messages from the remote end before its timer\n           \
    \       expired.\"\n              ::= { asp 8 }\n          aspConnTable OBJECT-TYPE\n\
    \              SYNTAX SEQUENCE OF AspConnEntry\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"A list of ASP connections on this entity.\"\n              ::= { asp 9 }\n\
    \          aspConnEntry OBJECT-TYPE\n              SYNTAX AspConnEntry\n     \
    \         ACCESS not-accessible\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"A set of information describing an ASP connection.\n\
    \                  As an example, an instance of the aspConnState object\n   \
    \               might be named\n                  aspConnState.0.80.220.135.0.80.239.119.12\"\
    \n              INDEX { aspConnLocalAddress, aspConnRemoteAddress,\n         \
    \             aspConnID }\n              ::= { aspConnTable 1 }\n          AspConnEntry\
    \ ::= SEQUENCE {\n              aspConnLocalAddress        DdpSocketAddress,\n\
    \              aspConnRemoteAddress       DdpSocketAddress,\n              aspConnID\
    \                  INTEGER (1..255),\n              aspConnLastReqNum        \
    \  INTEGER (1..65535),\n              aspConnServerEnd           INTEGER,\n  \
    \            aspConnState               INTEGER\n          }\n          aspConnLocalAddress\
    \ OBJECT-TYPE\n              SYNTAX DdpSocketAddress\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The local address of this ASP connection.\"\n              ::= { aspConnEntry\
    \ 1 }\n          aspConnRemoteAddress OBJECT-TYPE\n              SYNTAX DdpSocketAddress\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The remote address of this ASP connection.\
    \  If\n                  this entry is in the listening mode, this object\n  \
    \                shall have a value of four octets of zero.\"\n              ::=\
    \ { aspConnEntry 2 }\n          aspConnID OBJECT-TYPE\n              SYNTAX INTEGER\
    \ (1..255)\n              ACCESS not-accessible\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The remote Connection ID of this\
    \ ASP connection.  If\n                  this entry is in the listening mode,\
    \ this object\n                  shall have a value of zero.\"\n             \
    \ ::= { aspConnEntry 3 }\n          aspConnLastReqNum  OBJECT-TYPE\n         \
    \     SYNTAX INTEGER (1..65535)\n              ACCESS read-only\n            \
    \  STATUS mandatory\n              DESCRIPTION\n                  \"The last request\
    \ number on this ASP connection.  If\n                  this entry is in the listening\
    \ mode, this object\n                  shall have a value of zero.\"\n       \
    \       ::= { aspConnEntry 4 }\n          aspConnServerEnd OBJECT-TYPE\n     \
    \         SYNTAX INTEGER {\n                  sss(1), -- Server Session Socket\n\
    \                  wss(2), -- Workstation Session Socket\n                  sls(3)\
    \  -- Server Listening Socket\n              }\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"Specifies what mode the local session end is in.\"\n              ::= { aspConnEntry\
    \ 5 }\n          aspConnState OBJECT-TYPE\n              SYNTAX INTEGER {\n  \
    \                open(1),\n                  closed(2),\n                  invalid(3)\n\
    \              }\n              ACCESS read-write\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The state of this ASP connection.\n\
    \                  Setting this object to the value invalid(3) has the\n     \
    \             effect of invalidating the corresponding entry in the\n        \
    \          aspConnTable.  That is, it  effectively disassociates\n           \
    \       the mapping identified with said entry.  It is an\n                  implementation-specific\
    \ matter as to whether the agent\n                  removes an invalidated entry\
    \ from the table.\n                  Accordingly, management stations must be\
    \ prepared to\n                  receive from agents tabular information corresponding\n\
    \                  to entries not currently in use.  Proper\n                \
    \  interpretation of such entries requires examination\n                  of the\
    \ relevant aspConnState object.\"\n              ::= { aspConnEntry 6 }\n    \
    \      -- The ADSP Group\n          --\n          -- Implementation of this group\
    \ is mandatory for all entities\n          -- that implement ADSP\n          adspInPkts\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of ADSP packets received by this entity.\"\n              ::= {\
    \ adsp 1 }\n          adspOutPkts OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of ADSP packets sent by this entity.\"\
    \n              ::= { adsp 2 }\n          adspInOctets OBJECT-TYPE\n         \
    \     SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The number of data octets contained\
    \ in ADSP packets\n                  received by this entity.  Note that this\
    \ does not\n                  include EOM bits.\"\n              ::= { adsp 3\
    \ }\n          adspOutOctets OBJECT-TYPE\n              SYNTAX Counter\n     \
    \         ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The number of data octets contained in ADSP packets\n   \
    \               sent by this entity.  Note that this does not include\n      \
    \            EOM bits.\"\n              ::= { adsp 4 }\n          adspInDataPkts\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of ADSP data packets this entity has\n                  received.\"\
    \n              ::= { adsp 5 }\n          adspOutDataPkts OBJECT-TYPE\n      \
    \        SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of ADSP\
    \ data packets this entity has\n                  sent.\"\n              ::= {\
    \ adsp 6 }\n          adspTimeoutErrors OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of times the ADSP on this entity\
    \ detected\n                  an expired connection timer.\"\n              ::=\
    \ { adsp 7 }\n          adspTimeoutCloseErrors OBJECT-TYPE\n              SYNTAX\
    \ Counter\n              ACCESS read-only\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The number of times the ADSP on\
    \ this entity closed a\n                  connection because of too many timeouts.\"\
    \n              ::= { adsp 8 }\n          adspConnTable OBJECT-TYPE\n        \
    \      SYNTAX SEQUENCE OF AdspConnEntry\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"A list of ADSP connections on this entity.\"\n              ::= { adsp 9 }\n\
    \          adspConnEntry OBJECT-TYPE\n              SYNTAX AdspConnEntry\n   \
    \           ACCESS not-accessible\n              STATUS mandatory\n          \
    \    DESCRIPTION\n                  \"A set of information describing an ADSP\
    \ connection.\n                  As an example, an instance of the adspConnState\
    \ object\n                  might be named\n                  adspConnState.0.80.220.7.0.80.239.142.31231\"\
    \n              INDEX { adspConnLocalAddress, adspConnRemoteAddress,\n       \
    \               adspConnLocalConnID }\n              ::= { adspConnTable 1 }\n\
    \          AdspConnEntry ::= SEQUENCE {\n              adspConnLocalAddress  \
    \      DdpSocketAddress,\n              adspConnLocalConnID         INTEGER (0..65535),\n\
    \              adspConnRemoteAddress       DdpSocketAddress,\n              adspConnRemoteConnID\
    \        INTEGER (0..65535),\n              adspConnState               INTEGER\n\
    \          }\n          adspConnLocalAddress OBJECT-TYPE\n              SYNTAX\
    \ DdpSocketAddress\n              ACCESS not-accessible\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The local DDP address\
    \ of this ADSP connection.\"\n              ::= { adspConnEntry 1 }\n        \
    \  adspConnLocalConnID OBJECT-TYPE\n              SYNTAX INTEGER (0..65535)\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The local Connection ID of this ADSP\
    \ connection.  If\n                  this entry specifies an ADSP listener, this\
    \ value\n                  shall be zero.\"\n              ::= { adspConnEntry\
    \ 2 }\n          adspConnRemoteAddress OBJECT-TYPE\n              SYNTAX DdpSocketAddress\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The remote DDP address of this ADSP connection.\
    \  If\n                  this entry specifies an ADSP listener, this value\n \
    \                 shall be zero.\"\n              ::= { adspConnEntry 3 }\n  \
    \        adspConnRemoteConnID OBJECT-TYPE\n              SYNTAX INTEGER (0..65535)\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The remote Connection ID of this ADSP connection.\n\
    \                  If this entry specifies an ADSP listener, this value\n    \
    \              shall be zero.\"\n              ::= { adspConnEntry 4 }\n     \
    \     adspConnState OBJECT-TYPE\n              SYNTAX INTEGER {\n            \
    \      open(1),\n                  localHalfOpen(2),\n                  remoteHalfOpen(3),\n\
    \                  listening(4),\n                  closed(5),\n             \
    \     invalid(6)\n              }\n              ACCESS read-write\n         \
    \     STATUS mandatory\n              DESCRIPTION\n                  \"The state\
    \ of this ADSP connection.  The state is\n                  open if both ends\
    \ are established.  If only one end\n                  is established, then the\
    \ state is half-open.  If\n                  neither end is established, then\
    \ the state is\n                  closed.  If an ADSP server is listening on a\
    \ socket\n                  and is not yet connected, its state is set to\n  \
    \                listening, and the adspConnRemoteAddress,\n                 \
    \ adspConnRemoteSocket, adspConnRemoteConnID, and\n                  adspConnRemoteWindowSize\
    \ are all set to zero.\n                  Setting this object to the value invalid(6)\
    \ has the\n                  effect of invalidating the corresponding entry in\n\
    \                  the adspConnTable.  That is, it  effectively\n            \
    \      disassociates the mapping identified with said\n                  entry.\
    \  It is an implementation-specific matter as\n                  to whether the\
    \ agent removes an invalidated entry\n                  from the table. Accordingly,\
    \ management stations\n                  must be prepared to receive from agents\
    \ tabular\n                  information corresponding to entries not currently\n\
    \                  in use.  Proper interpretation of such entries\n          \
    \        requires examination of the relevant adspConnState\n                \
    \  object.\"\n              ::= { adspConnEntry 5 }\n          -- The ATPortPtoP\
    \ Group\n          --\n          -- Implementation of this group is mandatory\
    \ for all entities\n          -- that implement AppleTalk point-to-point links\n\
    \          atportPtoPTable OBJECT-TYPE\n              SYNTAX SEQUENCE OF AtportPtoPEntry\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"A list of AppleTalk point-to-point connections\
    \ for\n                  this entity.\"\n              ::= { atportptop 1 }\n\
    \          atportPtoPEntry OBJECT-TYPE\n              SYNTAX AtportPtoPEntry\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The description of one of the AppleTalk\n\
    \                  point-to-point connections on this entity.\n              \
    \    As an example, an instance of the\n                  atportPtoPRemoteAddress\
    \ object might be named\n                  atportPtoPRemoteAddress.2\"\n     \
    \         INDEX { atportPtoPIndex }\n              ::= { atportPtoPTable 1 }\n\
    \          AtportPtoPEntry ::= SEQUENCE {\n              atportPtoPIndex     \
    \      INTEGER,\n              atportPtoPProtocol        OBJECT IDENTIFIER,\n\
    \              atportPtoPRemoteName      DisplayString,\n              atportPtoPRemoteAddress\
    \   OCTET STRING,\n              atportPtoPPortIndex       INTEGER,\n        \
    \      atportPtoPStatus          INTEGER\n          }\n          atportPtoPIndex\
    \ OBJECT-TYPE\n              SYNTAX INTEGER\n              ACCESS not-accessible\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"A unique value for each AppleTalk point-to-point\n                  connection.\
    \  Its value is between 1 and the total\n                  number of AppleTalk\
    \ point-to-point connections.  The\n                  value for each connection\
    \ must remain constant at\n                  least from the re-initialization\
    \ of the entity's\n                  network management system to the next\n \
    \                 re-initialization.\"\n              ::= { atportPtoPEntry 1\
    \ }\n          atportPtoPProtocol OBJECT-TYPE\n              SYNTAX OBJECT IDENTIFIER\n\
    \              ACCESS read-write\n              STATUS mandatory\n           \
    \   DESCRIPTION\n                  \"The protocol type used over the point-to-point\n\
    \                  connection.\"\n              ::= { atportPtoPEntry 2 }\n  \
    \        atportPtoPRemoteName OBJECT-TYPE\n              SYNTAX DisplayString\n\
    \              ACCESS read-write\n              STATUS mandatory\n           \
    \   DESCRIPTION\n                  \"A text string containing the network node\
    \ name of the\n                  entity at the other end of the point-to-point\
    \ link.\n                  If the name is unknown or undefined, then this\n  \
    \                string is zero length.\"\n              ::= { atportPtoPEntry\
    \ 3 }\n          atportPtoPRemoteAddress OBJECT-TYPE\n              SYNTAX OCTET\
    \ STRING\n              ACCESS read-write\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The network address of the entity\
    \ at the other end\n                  of the point-to-point link in network byte\
    \ order.\n                  The format of this address can be determined\n   \
    \               by examinating the atportType corresponding to this\n        \
    \          entry.  If the address is unknown or undefined, then\n            \
    \      this string is zero length.\"\n              ::= { atportPtoPEntry 4 }\n\
    \          atportPtoPPortIndex OBJECT-TYPE\n              SYNTAX INTEGER\n   \
    \           ACCESS read-write\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The AppleTalk port associated with this\n               \
    \   point-to-point connection.  The interface identified\n                  by\
    \ a particular value of this index is the same\n                  interface as\
    \ identified by the same value of\n                  atportIndex.\"\n        \
    \      ::= { atportPtoPEntry 5 }\n          atportPtoPStatus OBJECT-TYPE\n   \
    \           SYNTAX INTEGER {\n                  valid(1),\n                  invalid(2)\n\
    \              }\n              ACCESS read-write\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The status of this entry in the\
    \ atportPtoPTable.\n                  Setting this object to the value invalid(2)\
    \ has the\n                  effect of invalidating the corresponding entry in\n\
    \                  the atportPtoPTable.  That is, it  effectively\n          \
    \        disassociates the mapping identified with said\n                  entry.\
    \  It is an implementation-specific matter as\n                  to whether the\
    \ agent removes an invalidated entry\n                  from the table. Accordingly,\
    \ management stations\n                  must be prepared to receive from agents\
    \ tabular\n                  information corresponding to entries not currently\n\
    \                  in use.  Proper interpretation of such entries\n          \
    \        requires examinationr of the relevant\n                  atportPtoPStatus\
    \ object.\"\n              ::= { atportPtoPEntry 6 }\n          atportPtoPProtoOids\
    \ OBJECT IDENTIFIER ::= { atportptop 2 }\n          -- A list of values to be\
    \ used for the atportPtoPProtocol\n          -- variable.\n          -- When new\
    \ protocols are defined, their oids may be defined\n          -- in separate MIB\
    \ documents in different branches of the tree.\n          pToPProtoOther OBJECT\
    \ IDENTIFIER ::= { atportPtoPProtoOids 1 }\n          pToPProtoAurp OBJECT IDENTIFIER\
    \ ::= { atportPtoPProtoOids 2 }\n          pToPProtoCaymanUdp OBJECT IDENTIFIER\
    \ ::=\n                      { atportPtoPProtoOids 3 }\n          pToPProtoAtkvmsDecnetIV\
    \ OBJECT IDENTIFIER ::=\n                      { atportPtoPProtoOids 4 }\n   \
    \       pToPProtoLiaisonUdp OBJECT IDENTIFIER ::=\n                      { atportPtoPProtoOids\
    \ 5 }\n          pToPProtoIpx OBJECT IDENTIFIER ::= { atportPtoPProtoOids 6 }\n\
    \          pToPProtoShivaIp OBJECT IDENTIFIER ::=\n                      { atportPtoPProtoOids\
    \ 7 }\n          -- The Per Port Counters Group\n          --\n          -- Implementation\
    \ of this group is optional.\n          perPortTable OBJECT-TYPE\n           \
    \   SYNTAX SEQUENCE OF PerPortEntry\n              ACCESS not-accessible\n   \
    \           STATUS mandatory\n              DESCRIPTION\n                  \"\
    The table of per-port statistics for this entity.\"\n              ::= { perPort\
    \ 1 }\n          perPortEntry OBJECT-TYPE\n              SYNTAX PerPortEntry\n\
    \              ACCESS not-accessible\n              STATUS mandatory\n       \
    \       DESCRIPTION\n                  \"The statistics available for a particular\
    \ port on\n                  this entity.\n                  As an example, an\
    \ instance of the perPortAarpInProbes\n                  object might be named\
    \ perPortAarpInProbes.2\"\n              INDEX { atportIndex }\n             \
    \ ::= { perPortTable  1 }\n          PerPortEntry ::= SEQUENCE {\n           \
    \   perPortAarpInProbes             Counter,\n              perPortAarpOutProbes\
    \            Counter,\n              perPortAarpInReqs               Counter,\n\
    \              perPortAarpOutReqs              Counter,\n              perPortAarpInRsps\
    \               Counter,\n              perPortAarpOutRsps              Counter,\n\
    \              perPortDdpInReceives            Counter,\n              perPortDdpInLocalDatagrams\
    \      Counter,\n              perPortDdpNoProtocolHandlers    Counter,\n    \
    \          perPortDdpTooShortErrors        Counter,\n              perPortDdpTooLongErrors\
    \         Counter,\n              perPortDdpChecksumErrors        Counter,\n \
    \             perPortDdpForwRequests          Counter,\n              perPortRtmpInDataPkts\
    \           Counter,\n              perPortRtmpOutDataPkts          Counter,\n\
    \              perPortRtmpInRequestPkts        Counter,\n              perPortRtmpRouteDeletes\
    \         Counter,\n              perPortZipInZipQueries          Counter,\n \
    \             perPortZipInZipReplies          Counter,\n              perPortZipInZipExtendedReplies\
    \  Counter,\n              perPortZipZoneConflictErrors    Counter,\n        \
    \      perPortZipInErrors              Counter,\n              perPortNbpInLookUpRequests\
    \      Counter,\n              perPortNbpInLookUpReplies       Counter,\n    \
    \          perPortNbpInBroadcastRequests   Counter,\n              perPortNbpInForwardRequests\
    \     Counter,\n              perPortNbpOutLookUpReplies      Counter,\n     \
    \         perPortNbpRegistrationFailures  Counter,\n              perPortNbpInErrors\
    \              Counter,\n              perPortEchoRequests             Counter,\n\
    \              perPortEchoReplies              Counter\n          }\n        \
    \  perPortAarpInProbes OBJECT-TYPE\n              SYNTAX Counter\n           \
    \   ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The total number of AARP Probe packets received\n       \
    \           by this entity on this port.\"\n              ::= { perPortEntry 1\
    \ }\n          perPortAarpOutProbes OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The total number of AARP Probe packets sent\
    \ by\n                  this entity on this port.\"\n              ::= { perPortEntry\
    \ 2 }\n          perPortAarpInReqs OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The total number of AARP Request packets received\n\
    \                  by this entity on this port.\"\n              ::= { perPortEntry\
    \ 3 }\n          perPortAarpOutReqs OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The total number of AARP Request packets sent\
    \ by\n                  this entity on this port.\"\n              ::= { perPortEntry\
    \ 4 }\n          perPortAarpInRsps OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The total number of AARP Response packets\
    \ received\n                  by this entity on this port.\"\n              ::=\
    \ { perPortEntry 5 }\n          perPortAarpOutRsps OBJECT-TYPE\n             \
    \ SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"The total number of AARP Response\
    \ packets sent by\n                  this entity on this port.\"\n           \
    \   ::= { perPortEntry 6 }\n          perPortDdpInReceives OBJECT-TYPE\n     \
    \         SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The total number of\
    \ input datagrams received by DDP\n                  on this port, including those\
    \ received in error.\"\n              ::= { perPortEntry 7 }\n          perPortDdpInLocalDatagrams\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The total number of input DDP datagrams on this\n                  port for\
    \ which this entity was their final DDP\n                  destination.\"\n  \
    \            ::= { perPortEntry 8 }\n          perPortDdpNoProtocolHandlers OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The total number of\
    \ DDP datagrams addressed to this\n                  entity on this port that\
    \ were addressed to an upper\n                  layer protocol for which no protocol\
    \ handler\n                  existed.\"\n              ::= { perPortEntry 9 }\n\
    \          perPortDdpTooShortErrors OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The total number of input DDP datagrams on\
    \ this\n                  port dropped because the received data length was\n\
    \                  less than the data length specified in the DDP\n          \
    \        header or the received data length was less than the\n              \
    \    length of the expected DDP header.\"\n              ::= { perPortEntry 10\
    \ }\n          perPortDdpTooLongErrors OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The total number of input DDP datagrams on\
    \ this\n                  port dropped because they exceeded the maximum DDP\n\
    \                  datagram size.\"\n              ::= { perPortEntry 11 }\n \
    \         perPortDdpChecksumErrors OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The total number of input DDP datagrams on\
    \ this\n                  port for which this DDP entity was their final\n   \
    \               destination, and which were dropped because of a\n           \
    \       checksum error.\" ::= { perPortEntry 12 }\n          perPortDdpForwRequests\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of input datagrams on this port for\n                  which this\
    \ entity was not their final DDP\n                  destination, as a result of\
    \ which an attempt was\n                  made to find a route to forward them\
    \ to that final\n                  destination.\"\n              ::= { perPortEntry\
    \ 13 }\n          perPortRtmpInDataPkts OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"A count of the number of good RTMP data packets\n\
    \                  received by this entity on this port.\"\n              ::=\
    \ { perPortEntry 14 }\n          perPortRtmpOutDataPkts OBJECT-TYPE\n        \
    \      SYNTAX Counter\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                  \"A count of the number of RTMP\
    \ packets sent by this\n                  entity on this port.\"\n           \
    \   ::= { perPortEntry 15 }\n          perPortRtmpInRequestPkts OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"A count of the number\
    \ of good RTMP Request packets\n                  received by this entity on this\
    \ port.\"\n              ::= { perPortEntry 16 }\n          perPortRtmpRouteDeletes\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"A count of the number of times RTMP deletes a route\n                  on\
    \ this port because it was aged out of the table.\"\n              ::= { perPortEntry\
    \ 17 }\n          perPortZipInZipQueries OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of ZIP Queries received by this\
    \ entity\n                  on this port.\"\n              ::= { perPortEntry\
    \ 18 }\n          perPortZipInZipReplies OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of ZIP Replies received by this\
    \ entity\n                  on this port.\"\n              ::= { perPortEntry\
    \ 19 }\n          perPortZipInZipExtendedReplies OBJECT-TYPE\n              SYNTAX\
    \ Counter\n              ACCESS read-only\n              STATUS mandatory\n  \
    \            DESCRIPTION\n                  \"The number of ZIP Extended Replies\
    \ received by this\n                  entity on this port.\"\n              ::=\
    \ { perPortEntry 20 }\n          perPortZipZoneConflictErrors OBJECT-TYPE\n  \
    \            SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of times\
    \ a conflict has been detected on\n                  this port between this entity's\
    \ zone information and\n                  another entity's zone information.\"\
    \n              ::= { perPortEntry 21 }\n          perPortZipInErrors OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of ZIP\
    \ packets received by this entity\n                  on this port that were rejected\
    \ for any error.\"\n              ::= { perPortEntry 22 }\n          perPortNbpInLookUpRequests\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of NBP LookUp Requests received on this\n                  port.\"\
    \n              ::= { perPortEntry 23 }\n          perPortNbpInLookUpReplies OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of NBP\
    \ LookUp Replies received on this\n                  port.\"\n              ::=\
    \ { perPortEntry 24 }\n          perPortNbpInBroadcastRequests OBJECT-TYPE\n \
    \             SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of NBP\
    \ Broadcast Requests received on\n                  this port.\"\n           \
    \   ::= { perPortEntry 25 }\n          perPortNbpInForwardRequests OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of NBP\
    \ Forward Requests received on this\n                  port.\"\n             \
    \ ::= { perPortEntry 26 }\n          perPortNbpOutLookUpReplies OBJECT-TYPE\n\
    \              SYNTAX Counter\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                  \"The number of NBP\
    \ LookUp Replies sent on this port.\"\n              ::= { perPortEntry 27 }\n\
    \          perPortNbpRegistrationFailures OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of times this node experienced\
    \ a failure\n                  in attempting to register an NBP entity on this\n\
    \                  port.\"\n              ::= { perPortEntry 28 }\n          perPortNbpInErrors\
    \ OBJECT-TYPE\n              SYNTAX Counter\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \ \"The number of NBP packets received by this entity\n                  on this\
    \ port that were rejected for any error.\"\n              ::= { perPortEntry 29\
    \ }\n          perPortEchoRequests OBJECT-TYPE\n              SYNTAX Counter\n\
    \              ACCESS read-only\n              STATUS mandatory\n            \
    \  DESCRIPTION\n                  \"The number of AppleTalk Echo requests received\
    \ on\n                  this port.\"\n              ::= { perPortEntry 30 }\n\
    \          perPortEchoReplies OBJECT-TYPE\n              SYNTAX Counter\n    \
    \          ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                  \"The count of AppleTalk Echo replies received on\n       \
    \           this port.\"\n              ::= { perPortEntry 31 }\n          END\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   This document was produced by the IETF AppleTalk-IP Working\
    \ Group.\n   In addition, the contribution of the following individuals is also\n\
    \   acknowledged:\n               Greg Bruell, Wellfleet\n               Phil\
    \ Budne, Shiva\n               Robert Jeckell, 3Com\n               Greg Merrell,\
    \ DEC\n               Greg Minshall, Novell, Inc.\n               Bob Morgan,\
    \ Stanford University\n               Brad Parker, FCR\n               Marshall\
    \ T. Rose, Dover Beach Consulting\n               Wayne Tackabury, Cayman\n  \
    \             Jonathan Wenocur, Shiva\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n       Network Management Standards\", RFC 1052, IAB, April 1988.\n\
    \   [2] Cerf, V., \"Report of the Second Ad Hoc Network Management Review\n  \
    \     Group\", RFC 1109, IAB, August 1989.\n   [3] Rose M., and K. McCloghrie,\
    \ \"Structure and Identification of\n       Management Information for TCP/IP-based\
    \ internets\", STD 16, RFC\n       1155, Performance Systems International, Hughes\
    \ LAN Systems, May\n       1990.\n   [4] McCloghrie K., and M. Rose, \"Management\
    \ Information Base for\n       Network Management of TCP/IP-based internets\"\
    , RFC 1156, Hughes\n       LAN Systems, Performance Systems International, May\
    \ 1990.\n   [5] Case, J., Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n\
    \       Network Management Protocol\", STD 15, RFC 1157, SNMP Research,\n    \
    \   Performance Systems International, Performance Systems\n       International,\
    \ MIT Laboratory for Computer Science, May 1990.\n   [6] Rose, M., Editor, \"\
    Management Information Base for Network\n       Management of TCP/IP-based internets:\
    \ MIB-II\", RFC 1158,\n       Performance Systems International, May 1990.\n \
    \  [7] Information processing systems - Open Systems Interconnection -\n     \
    \  Specification of Abstract Syntax Notation One (ASN.1),\n       International\
    \ Organization for Standardization, International\n       Standard 8824, December\
    \ 1987.\n   [8] Information processing systems - Open Systems Interconnection\
    \ -\n       Specification of Basic Encoding Rules for Abstract Notation One\n\
    \       (ASN.1), International Organization for Standardization,\n       International\
    \ Standard 8825, December 1987.\n   [9] Rose, M., and K. McCloghrie, Editors,\
    \ \"Concise MIB Definitions\",\n       STD 16, RFC 1212, Performance Systems International,\
    \ Hughes LAN\n       Systems, March 1991.\n  [10] Gursharan S., Andrews, R., and\
    \ A. Oppenheimer, \"Inside\n       AppleTalk\", Second Edition, Addison Wesley,\
    \ 1990.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Steven Waldbusser\n   Carnegie Mellon University\n\
    \   5000 Forbes Ave.\n   Pittsburgh, PA 15213\n   Phone: 412-268-6628\n   EMail:\
    \ waldbusser@cmu.edu\n   Karen Frisa\n   FORE Systems, Inc.\n   174 Thorn Hill\
    \ Road\n   Warrendale, PA 15086-7535\n   Phone: 412-772-6541\n   EMail: kfrisa@fore.com\n"
