Abstract The offer/answer model for the Session Description Protocol (SDP) assumes that endpoints somehow establish the Quality of Service (QoS) required for the media streams they establish.
Endpoints in closed environments typically agree out of band (e.g., using configuration information) regarding which QoS mechanism to use.
However, on the Internet, there is more than one QoS service available.
Consequently, there is a need for a mechanism to negotiate which QoS mechanism to use for a particular media stream.
This document defines such a mechanism.
The offer/answer model [RFC3264] for SDP [RFC4566] does not provide any mechanism for endpoints to negotiate the QoS mechanism to be used for a particular media stream.
Even when QoS preconditions [RFC3312] are used, the choice of the QoS mechanism is left unspecified and is up to the endpoints.
Endpoints that support more than one QoS mechanism need a way to negotiate which one to use for a particular media stream.
Examples of QoS mechanisms are RSVP (Resource Reservation Protocol) [RFC2205] and NSIS
This document defines a mechanism that allows endpoints to negotiate the QoS mechanism to be used for a particular media stream.
However, the fact that endpoints agree on a particular QoS mechanism does not imply that that particular mechanism is supported by the network.
Discovering which QoS mechanisms are supported at the network layer is out of the scope of this document.
In any case, the information the endpoints exchange to negotiate QoS mechanisms, as defined in this document, can be useful for a network operator to resolve a subset of the QoS interoperability problem   namely, to ensure that a mechanism commonly acceptable to the endpoints is chosen and make it possible to debug potential misconfiguration situations.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
This document defines the 'qos mech send' and 'qos mech recv' session and media level SDP [RFC4566] attributes.
identifies a QoS mechanism that is supported by the entity generating the session description.
A token that appears in a 'qos mech send' attribute identifies a QoS mechanism that can be used to reserve resources for traffic sent by the entity generating the session description.
A token that appears in a 'qos mech recv' attribute identifies a QoS mechanism that can be used to reserve resources for traffic received by the entity generating the session description.
The 'qos mech send' and 'qos mech recv' attributes are not interdependent; one can be used without the other.
The following is an example of an 'm' line with 'qos mech send' and 'qos mech recv' attributes:
m audio 50000 RTP/AVP 0 a qos mech send:
rsvp nsis a qos mech recv:
Through the use of the 'qos mech send' and 'qos mech recv' attributes, an offer/answer exchange allows endpoints to come up with a list of common QoS mechanisms sorted by preference.
However, note that endpoints negotiate in which direction QoS is needed using other mechanisms, such as preconditions [RFC3312].
Endpoints may also use other mechanisms to negotiate, if needed, the parameters to use with a given QoS mechanism (e.g., bandwidth to be reserved).
Offerer Behavior Offerers include a 'qos mech send' attribute with the tokens corresponding to the QoS mechanisms (in order of preference) that are supported in the send direction.
Similarly, offerers include a 'qos mech recv' attribute with the tokens corresponding to the QoS mechanisms (in order of preference) that are supported in the receive direction.
On receiving an offer with a set of tokens in a 'qos mech send' attribute, the answerer takes those tokens corresponding to QoS mechanisms that it supports in the receive direction and includes them, in order of preference, in a 'qos mech recv' attribute in the answer.
On receiving an offer with a set of tokens in a 'qos mech  recv' attribute, the answerer takes those tokens corresponding to QoS mechanisms that it supports in the send direction and includes them, in order of preference, in a 'qos mech send' attribute in the answer.
When ordering the tokens in a 'qos mech send' or a 'qos mech recv' attribute by preference, the answerer may take into account its own preferences and those expressed in the offer.
However, the exact algorithm to be used to order such token lists is outside the scope of this specification.
Note that if the answerer does not have any QoS mechanism in common with the offerer, it will return empty 'qos mech send' and 'qos mech  recv' attributes.
Once the offer/answer exchange completes, both offerer and answerer use the token lists in the 'qos mech send' and 'qos mech recv' attributes of the answer to perform resource reservations.
Offerers and answerers SHOULD attempt to use the QoS mechanism with highest priority in each direction first.
If an endpoint (the offerer or the answerer) does not succeed in using the mechanism with highest priority in a given direction, it SHOULD attempt to use the next QoS mechanism in order of priority in that direction, and so on.
If an endpoint unsuccessfully tries all the common QoS mechanisms for a given direction, the endpoint MAY attempt to use additional QoS mechanisms not supported by the remote endpoint.
This is because there may be network entities out of the endpoint's control (e.g., an RSVP proxy) that make those mechanisms work.
If, during an established session for which the QoS mechanism to be used for a given direction was agreed upon using the mechanism defined in this specification, an endpoint receives a subsequent offer that does not contain the QoS selection attribute corresponding to that direction (i.e., the 'qos mech send' or 'qos mech recv' attribute is missing), the endpoints SHOULD continue using the same QoS mechanism used up to that moment.
The following is an offer/answer exchange between two endpoints using the 'qos mech send' and 'qos mech recv' attributes.
Parts of the session descriptions are omitted for clarity purposes.
The offerer generates the following session description, listing both RSVP and NSIS for both directions.
The offerer would prefer to use RSVP and, thus, includes it before NSIS.
m audio 50000 RTP/AVP 0 a qos mech send:
rsvp nsis a qos mech recv:
The answerer supports NSIS in both directions, but not RSVP.
Consequently, it returns the following session description:
m audio 55000 RTP/AVP 0 a qos mech send: nsis a qos mech recv: nsis 6.
This specification registers two new SDP attributes and creates a new registry for QoS mechanisms.
Registration of the SDP 'qos mech send' Attribute IANA has registered the following SDP att field under the Session Description Protocol (SDP) Parameters registry:
qos mech send Long form attribute name:
QoS Mechanism for the Send Direction Type of attribute:   Session and Media levels Subject to charset:
To list QoS mechanisms supported in the send direction Allowed attribute values:
Registration of the SDP 'qos mech recv' Attribute IANA has registered the following SDP att field under the Session Description Protocol (SDP) Parameters registry:
qos mech recv Long form attribute name:
QoS Mechanism for the Receive Direction Type of attribute:   Session and Media levels Subject to charset:
To list QoS mechanisms supported in the receive direction Allowed attribute values:   IANA Registered Tokens 6.3.
The IANA has created a subregistry for QoS mechanism token values to be used in the 'qos mech send' and 'qos mech recv' attributes under the Session Description Protocol (SDP) Parameters registry.
The initial values for the subregistry are as follows:
As per the terminology in [RFC5226], the registration policy for new QoS mechanism token values shall be 'Specification Required'.
An attacker may attempt to add, modify, or remove 'qos mech send' and 'qos mech recv' attributes from a session description.
This could result in an application behaving in a non desirable way.
For example, the endpoints under attack may not be able to find a common QoS mechanism to use.
Consequently, it is strongly RECOMMENDED that integrity and authenticity protection be applied to SDP session descriptions carrying these attributes.
For session descriptions carried in SIP [RFC3261], S/MIME
[RFC3851] is the natural choice to provide such end to end integrity protection, as described in [RFC3261].
Other applications MAY use a different form of integrity protection.
