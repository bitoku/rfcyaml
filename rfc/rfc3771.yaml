- title: __initial_text__
  contents:
  - "           The Lightweight Directory Access Protocol (LDAP)\n               \
    \      Intermediate Response Message\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines and describes the IntermediateResponse message,\n\
    \   a general mechanism for defining single-request/multiple-response\n   operations\
    \ in Lightweight Directory Access Protocol (LDAP).  The\n   IntermediateResponse\
    \ message is defined in such a way that the\n   protocol behavior of existing\
    \ LDAP operations is maintained.  This\n   message is intended to be used in conjunction\
    \ with the LDAP\n   ExtendedRequest and ExtendedResponse to define new single-\n\
    \   request/multiple-response operations or in conjunction with a control\n  \
    \ when extending existing LDAP operations in a way that requires them\n   to return\
    \ intermediate response information.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Lightweight Directory Access Protocol (LDAP), version\
    \ 3 [RFC3377]\n   is an extensible protocol.  Extended operations ([RFC2251] Section\n\
    \   4.12) are defined to allow for the addition of operations to LDAP,\n   without\
    \ requiring revisions of the protocol.  Similarly, controls\n   ([RFC2251] Section\
    \ 4.1.12) are defined to extend or modify the\n   behavior of existing LDAP operations.\n\
    \   LDAP is a client-request/server-response based protocol.  With the\n   exception\
    \ of the search operation, the entire response to an\n   operation request is\
    \ returned in a single protocol data unit (i.e.,\n   LDAP message).  While this\
    \ single-request/single-response paradigm is\n   sufficient for many operations\
    \ (including all but one of those\n   currently defined by [RFC3377]), both intuition\
    \ and practical\n   experience validate the notion that it is insufficient for\
    \ others.\n   For example, the LDAP delete operation could be extended via a\n\
    \   subtree control to mean that an entire subtree is to be deleted.  A\n   subtree\
    \ delete operation needs to return continuation references\n   based upon subordinate\
    \ knowledge information contained in the server\n   so that the client can complete\
    \ the operation.  Returning references\n   as they are found, instead of with\
    \ the final result, allows the\n   client to perform the operation more efficiently\
    \ because it does not\n   have to wait for the final result to get this continuation\
    \ reference\n   information.\n   Similarly, an engineer might choose to design\
    \ the subtree delete\n   operation as an extended operation of its own rather\
    \ than using a\n   subtree control in conjunction with the delete operation. \
    \ Once\n   again, the same continuation reference information is needed by the\n\
    \   client to complete the operation, and sending the continuation\n   references\
    \ as they are found would allow the client to perform the\n   operation more efficiently.\n\
    \   Operations that are completed in stages or that progress through\n   various\
    \ states as they are completed might want to send intermediate\n   responses to\
    \ the client, thereby informing it of the status of the\n   operation.  For example,\
    \ an LDAP implementation might define an\n   extended operation to create a new\
    \ replica of an administrative area\n   on a server, and the operation is completed\
    \ in three stages: (1)\n   begin creation of replica, (2) send replica data to\
    \ server, (3)\n   replica creation complete.  Intermediate messages might be sent\
    \ from\n   the server to the client at the beginning of each stage with the\n\
    \   final response for the extended operation being sent after stage (3)\n   is\
    \ complete.\n   As LDAP [RFC3377] is currently defined, there is no general LDAP\n\
    \   message type that can be used to return intermediate results.  A\n   single,\
    \ reusable LDAP message for carrying intermediate response\n   information is\
    \ desired to avoid repeated modification of the\n   protocol.  Although the ExtendedResponse\
    \ message is defined in LDAP,\n   it is defined to be the one and only response\
    \ message to an\n   ExtendedRequest message ([RFC2251] Section 4.12), for unsolicited\n\
    \   notifications ([RFC2251] Section 4.4), and to return intermediate\n   responses\
    \ for the search operation ([RFC3377] Section 4.5.2, also see\n   Section 5 below).\
    \  The adaptation of ExtendedResponse as a general\n   intermediate response mechanism\
    \ would be problematic.  In particular,\n   existing APIs would likely have to\
    \ be redesigned.  It is believed\n   (based upon operational experience) that\
    \ the addition of a new\n   message to carry intermediate result information is\
    \ easier to\n   implement and is less likely to cause interoperability problems\
    \ with\n   existing deployed implementations.\n   This document defines and describes\
    \ the LDAP IntermediateResponse\n   message.  This message is intended to be used\
    \ in conjunction with\n   ExtendedRequest and ExtendedResponse to define new single-\n\
    \   request/multiple-response operations or in conjunction with a control\n  \
    \ when extending existing LDAP operations in a way that requires them\n   to return\
    \ intermediate response information.\n   It is intended that the definitions and\
    \ descriptions of extended\n   operations and controls using the IntermediateResponse\
    \ message will\n   define the circumstances in which an IntermediateResponse message\
    \ can\n   be sent by a server and the associated meaning of the\n   IntermediateResponse\
    \ message sent in a particular circumstance.\n   Similarly, it is intended that\
    \ clients will explicitly solicit\n   IntermediateResponse messages by issuing\
    \ operations that specifically\n   call for their return.\n   The LDAP Content\
    \ Sync Operation [ZEILENGA] demonstrates one use of\n   LDAP Intermediate Response\
    \ messages.\n"
- title: 2.  Conventions used in this document
  contents:
  - "2.  Conventions used in this document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   The term \"request control\" is used to describe a control\
    \ that is\n   included in an LDAP request message sent from an LDAP client to\
    \ an\n   LDAP server.\n"
- title: 3.  The IntermediateResponse Message
  contents:
  - "3.  The IntermediateResponse Message\n   This document extends the protocolOp\
    \ CHOICE of LDAPMessage ([RFC2251]\n   Section 4.1.1) to include the field:\n\
    \           intermediateResponse  IntermediateResponse\n   where IntermediateResponse\
    \ is defined as:\n           IntermediateResponse ::= [APPLICATION 25] SEQUENCE\
    \ {\n                   responseName     [0] LDAPOID OPTIONAL,\n             \
    \      responseValue    [1] OCTET STRING OPTIONAL }\n   IntermediateResponse messages\
    \ SHALL NOT be returned to the client\n   unless the client issues a request that\
    \ specifically solicits their\n   return.  This document defines two forms of\
    \ solicitation: extended\n   operation and request control.\n   Although the responseName\
    \ and responseValue are optional in some\n   circumstances, IntermediateResponse\
    \ messages usually have a\n   predefined responseName and a responseValue.  The\
    \ value of the\n   responseName (if present), the syntax of the responseValue\
    \ (if\n   present) and the semantics associated with a particular\n   IntermediateResponse\
    \ message MUST be specified in documents\n   describing the extended operation\
    \ or request control that uses them.\n   Sections 3.1 and 3.2 describe additional\
    \ requirements for the\n   inclusion of responseName and responseValue in IntermediateResponse\n\
    \   messages.\n"
- title: 3.1.  Usage with LDAP ExtendedRequest and ExtendedResponse
  contents:
  - "3.1.  Usage with LDAP ExtendedRequest and ExtendedResponse\n   A single-request/multiple-response\
    \ operation may be defined using a\n   single ExtendedRequest message to solicit\
    \ zero or more\n   IntermediateResponse messages, of one or more kinds, followed\
    \ by an\n   ExtendedResponse message.\n   An extended operation that defines the\
    \ return of multiple kinds of\n   IntermediateResponse messages MUST provide and\
    \ document a mechanism\n   for the client to distinguish the kind of IntermediateResponse\n\
    \   message being sent.  This SHALL be accomplished by using different\n   responseName\
    \ values for each type of IntermediateResponse message\n   associated with the\
    \ extended operation or by including identifying\n   information in the responseValue\
    \ of each type of IntermediateResponse\n   message associated with the extended\
    \ operation.\n"
- title: 3.2.  Usage with LDAP Request Controls
  contents:
  - "3.2.  Usage with LDAP Request Controls\n   Any LDAP operation may be extended\
    \ by the addition of one or more\n   controls ([RFC2251] Section 4.1.12).  A control's\
    \ semantics may\n   include the return of zero or more IntermediateResponse messages\n\
    \   prior to returning the final result code for the operation.  One or\n   more\
    \ kinds of IntermediateResponse messages may be sent in response\n   to a request\
    \ control.\n   All IntermediateResponse messages associated with request controls\n\
    \   SHALL include a responseName.  This requirement ensures that the\n   client\
    \ can correctly identify the source of IntermediateResponse\n   messages when:\n\
    \      a) two or more controls using IntermediateResponse messages are\n     \
    \    included in a request for any LDAP operation or\n      b) one or more controls\
    \ using IntermediateResponse messages are\n         included in a request with\
    \ an LDAP extended operation that uses\n         IntermediateResponse messages.\n\
    \   A request control that defines the return of multiple kinds of\n   IntermediateResponse\
    \ messages MUST provide and document a mechanism\n   for the client to distinguish\
    \ the kind of IntermediateResponse\n   message being sent.  This SHALL be accomplished\
    \ by using different\n   responseName values for each type of IntermediateResponse\
    \ message\n   associated with the request control or by including identifying\n\
    \   information in the responseValue of each type of IntermediateResponse\n  \
    \ message associated with the request control.\n"
- title: 4.  Advertising Support for IntermediateResponse Messages
  contents:
  - "4.  Advertising Support for IntermediateResponse Messages\n   Because IntermediateResponse\
    \ messages are associated with extended\n   operations or controls and LDAP provides\
    \ a means for advertising the\n   extended operations and controls supported by\
    \ a server (using the\n   supportedExtension ([RFC2252] Section 5.2.3) and supportedControl\n\
    \   ([RFC2252] Section 5.2.4) attributes of the root DSE), there is no\n   need\
    \ for a separate means of advertising support for intermediate\n   response messages.\n"
- title: 5.  Use of IntermediateResponse and ExtendedResponse with Search
  contents:
  - "5.  Use of IntermediateResponse and ExtendedResponse with Search\n   It is noted\
    \ that ExtendedResponse messages may be sent in response to\n   LDAP search operations\
    \ with controls ([RFC2251] Section 4.5.2).  This\n   use of ExtendedResponse messages\
    \ SHOULD be viewed as deprecated, in\n   favor of use of the IntermediateResponse\
    \ messages.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document describes an enhancement to LDAP.\
    \  All security\n   considerations of [RFC3377] apply to this document; however,\
    \ it does\n   not introduce any new security considerations to LDAP.\n   Security\
    \ considerations specific to each extension using this\n   protocol mechanism\
    \ shall be discussed in the technical specification\n   detailing the extension.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   Registration of the following value has been completed\
    \ [RFC3383].\n"
- title: 7.1.  LDAP Message Type
  contents:
  - "7.1.  LDAP Message Type\n   The IANA has registered an LDAP Message Type (25)\
    \ to identify the\n   LDAP IntermediateResponse message as defined in section\
    \ 3 of this\n   document.\n   The following registration template is suggested:\n\
    \   Subject: Request for LDAP Message Type Registration\n   Person & email address\
    \ to contact for further information:\n      Roger Harrison <roger_harrison@novell.com>\n\
    \      Specification: RFC3771\n      Author/Change Controller: IESG\n      Comments:\
    \ Identifies the LDAP IntermediateResponse Message\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   The authors would like to acknowledge the members of\
    \ the IETF LDAP\n   Extensions (ldapext) working group mail list who responded\
    \ to the\n   suggestion that a multiple-response paradigm might be useful for\
    \ LDAP\n   extended requests.  Special thanks to two individuals: David Wilbur\n\
    \   who first introduced the idea on the working group list, and Thomas\n   Salter,\
    \ who succinctly summarized the group's discussion.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key Words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2251]  Wahl, M., Howes, T. and S. Kille, \"Lightweight Directory\n\
    \              Access Protocol (v3)\", RFC 2251, December 1997.\n   [RFC2252]\
    \  Wahl, M., Coulbeck, A., Howes, T. and S.  Kille,\n              \"Lightweight\
    \ Directory Access Protocol (v3): Attribute\n              Syntax Definitions\"\
    , RFC 2252, December 1997.\n   [RFC3377]  Hodges, J. and R. Morgan, \"Lightweight\
    \ Directory Access\n              Protocol (v3): Technical Specification\", RFC\
    \ 3377,\n              September 2002.\n   [RFC3383]  Zeilenga, K., \"Internet\
    \ Assigned Numbers Authority (IANA)\n              Considerations for the Lightweight\
    \ Directory Access\n              Protocol (LDAP)\", BCP 64, RFC 3383, September\
    \ 2002.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [ZEILENGA] Zeilenga, K., \"LDAP Content Synchronization\
    \ Operation\",\n              Work in Progress, February 2004.\n"
- title: 10.  Authors' Addresses
  contents:
  - "10.  Authors' Addresses\n   Roger Harrison\n   Novell, Inc.\n   1800 S. Novell\
    \ Place\n   Provo, UT 84606\n   Phone: +1 801 861 2642\n   EMail: roger_harrison@novell.com\n\
    \   Kurt D. Zeilenga\n   OpenLDAP Foundation\n   EMail: Kurt@OpenLDAP.org\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78, and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
