- contents:
  - '    Duplication Delay Attribute in the Session Description Protocol

    '
  title: __initial_text__
- contents:
  - "Abstract\n   A straightforward approach to provide protection against packet\n
    \  losses due to network outages with a longest duration of T time units\n   is
    to duplicate the original packets and send each copy separated in\n   time by
    at least T time units.  This approach is commonly referred to\n   as \"time-shifted
    redundancy\", \"temporal redundancy\", or simply\n   \"delayed duplication\".
    \ This document defines an attribute to\n   indicate the presence of temporally
    redundant media streams and the\n   duplication delay in the Session Description
    Protocol.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7197.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Requirements Notation ...........................................4\n   3.
    The 'duplication-delay' Attribute ...............................5\n   4. SDP
    Examples ....................................................6\n   5. Security
    Considerations .........................................7\n   6. IANA Considerations
    .............................................8\n      6.1. Registration of SDP
    Attributes .............................9\n   7. Acknowledgements ................................................9\n
    \  8. References ......................................................9\n      8.1.
    Normative References .......................................9\n      8.2. Informative
    References ....................................10\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Inside an IP network, packet delivery may be interrupted
    due to\n   failure of a physical link, interface, or device.  To reduce the\n
    \  impact of such interruptions, some networks are built in a resilient\n   manner,
    allowing for multiple alternative paths between two\n   endpoints.  However, if
    there is no resiliency in the network or the\n   failure happens in a non-resilient
    part of the network, a temporary\n   outage will occur (i.e., packets will get
    dropped).  The outage will\n   last until network reconvergence takes place (i.e.,
    until\n   connectivity is restored) around the failure.  Typically, network\n
    \  reconvergence takes between tens and hundreds of milliseconds,\n   depending
    on the size and features of the network.\n   There are a number of network-reconvergence
    technologies available\n   today, such as IP Fast Convergence, MPLS Traffic Engineering
    Fast\n   Reroute, and Multicast Only Fast Reroute.  These technologies can be\n
    \  augmented by different types of application-layer loss-repair methods\n   such
    as Forward Error Correction (FEC), retransmission, temporal\n   redundancy, and
    spatial redundancy to minimize (and sometimes totally\n   eliminate) the impact
    of outages.  Each combination has its distinct\n   requirements in terms of bandwidth
    consumption and results in a\n   different network complexity.  Thus, a network
    operator has to\n   carefully consider what combination to deploy for different
    parts of\n   a network (e.g., core vs. edge).  A detailed overview of network-\n
    \  convergence technologies and loss-repair methods is provided in\n   [IC2011].\n
    \  One of the loss-repair methods is temporal redundancy, also known as\n   delayed
    duplication.  A media sender using this method transmits an\n   original source
    packet and transmits its duplicate after a certain\n   delay following the original
    transmission.  If a network outage hits\n   the original transmission, the expectation
    is that the second\n   transmission arrives at the receiver (with a high probability).\n
    \  Alternatively, the second transmission may be hit by an outage and so\n   gets
    dropped, and the original transmission completes successfully.\n   Also, both
    transmissions can arrive on the receiver side; in that\n   case, the receiver
    (or the node that does the duplicate suppression)\n   needs to identify the duplicate
    packets and discard them\n   appropriately, thereby producing a duplicate-free
    stream.\n   Delayed duplication can be used in a variety of multimedia\n   applications
    where there is sufficient bandwidth for the duplicated\n   traffic and the application
    can tolerate the introduced delay.\n   However, it must be used with care, since
    it might easily result in a\n   new series of denial-of-service attacks.  Delayed
    duplication is\n   harmful in cases where the primary cause of packet loss is\n
    \  congestion, rather than a network outage due to a temporary link or\n   network
    element failure.  Duplication should only be used by\n   endpoints that want to
    protect against network failures; protection\n   against congestion must be achieved
    through other means, as\n   duplication will only make congestion worse.\n   One
    particular use case for delayed duplication is to improve the\n   reliability
    of real-time video feeds inside a core IP network where\n   bandwidth is plentiful
    and maximum reliability (preferably zero loss)\n   is desired [IC2011].  Compared
    to other redundancy approaches such as\n   FEC [RFC6363] and redundant data encoding
    (e.g., [RFC2198]), delayed\n   duplication is easy to implement, since it does
    not require any\n   special type of encoding or decoding.\n   For duplicate suppression,
    the receiver has to be able to identify\n   the identical packets.  This is straightforward
    for media packets\n   that carry one or more unique identifiers such as the sequence
    number\n   field in the RTP header [RFC3550].  In non-RTP applications, the\n
    \  receiver can use unique sequence numbers if available or other\n   alternative
    approaches to compare the incoming packets and discard\n   the duplicate ones.\n
    \  This specification introduces a new Session Description Protocol\n   (SDP)
    [RFC4566] attribute for applications/services using the delayed\n   duplication
    method to indicate the relative delay for each additional\n   duplication.  The
    attribute is used with the duplication grouping\n   semantics defined in [RFC7104].\n
    \  This specification does not explain how to select the duplication\n   delay
    that a sender should use; the selection technique depends on\n   the underlying
    network and the reconvergence technologies used inside\n   such a network.  This
    specification does not explain how the receiver\n   should suppress the duplicate
    packets and merge the incoming streams\n   to produce a loss-free and duplication-free
    output stream (a process\n   commonly called \"stream merging\"), either.  An
    application or a\n   transport service that will use the delayed duplication method
    must\n   determine its own rules about stream merging.\n   In practice, more than
    two redundant streams are unlikely to be used,\n   since the additional delay
    and increased overhead are not easily\n   justified.  However, we define the new
    attribute in a general way so\n   that it could be used with more than two redundant
    streams (i.e.,\n   multiple duplications), if needed.  While the primary focus
    in this\n   specification is the RTP-based transport, the new attribute is\n   applicable
    to both RTP and non-RTP streams.  Protocol issues and\n   details on duplicating
    RTP streams are presented in [RFC7198].\n"
  title: 1.  Introduction
- contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
    RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
    as described in\n   [RFC2119].\n"
  title: 2.  Requirements Notation
- contents:
  - "3.  The 'duplication-delay' Attribute\n   The following ABNF [RFC5234] syntax
    formally describes the\n   'duplication-delay' attribute:\n      delaying-attribute
    \    = \"a=duplication-delay:\" periods CRLF\n      periods                = period
    *( SP period)\n      period                 = 1*DIGIT ; in milliseconds\n             ABNF
    Syntax for the 'duplication-delay' Attribute\n   The 'duplication-delay' attribute
    is defined as both a media-level\n   and session-level attribute.  It specifies
    the relative delay with\n   respect to the previous transmission of each duplication
    in\n   milliseconds (ms) at the time of transmission.  The following rules\n   apply:\n
    \  o  If used as a media-level attribute, it MUST be used with the\n      'ssrc-group'
    attribute and \"DUP\" grouping semantics as defined in\n      [RFC7104].  When
    used as a media-level attribute, the relative\n      delay value(s) it specifies
    SHALL apply to every Synchronization\n      Source (SSRC)-based duplication grouping
    in the same media\n      description.  In other words, one cannot specify different\n
    \     duplication delay values for different duplication groups in the\n      same
    media description.\n   o  If used as a session-level attribute, it MUST be used
    with 'group'\n      attribute and \"DUP\" grouping semantics as defined in [RFC7104].\n
    \     When used as a session-level attribute, the relative delay\n      value(s)
    it specifies SHALL apply to every duplication grouping in\n      the same SDP
    description.  In other words, one cannot specify\n      different duplication
    delay values for different duplication\n      groups in the same SDP description.
    \ If one needs to specify\n      different duplication delay values for different
    duplication\n      groups, then one MUST use different SDP descriptions for each
    or\n      MUST use the 'duplication-delay' attribute at the media level.  In\n
    \     that case, the 'duplication-delay' attribute MUST NOT be used at\n      the
    session level.\n   o  For offer/answer model considerations, refer to [RFC7104].\n"
  title: 3.  The 'duplication-delay' Attribute
- contents:
  - "4.  SDP Examples\n   In the first example below, the multicast stream consists
    of two RTP\n   streams, each duplicated once, resulting in two sets of two-stream\n
    \  groups.  The same duplication delay of 100 ms is applied to each\n   grouping.
    \ The first set's streams have SSRCs of 1000 and 1010, and\n   the second set's
    streams have SSRCs of 1020 and 1030.\n      v=0\n      o=ali 1122334455 1122334466
    IN IP4 dup.example.com\n      s=Delayed Duplication\n      t=0 0\n      m=video
    30000 RTP/AVP 100 101\n      c=IN IP4 233.252.0.1/127\n      a=source-filter:incl
    IN IP4 233.252.0.1 198.51.100.1\n      a=rtpmap:100 MP2T/90000\n      a=ssrc:1000
    cname:ch1a@example.com\n      a=ssrc:1010 cname:ch1a@example.com\n      a=ssrc-group:DUP
    1000 1010\n      a=rtpmap:101 MP2T/90000\n      a=ssrc:1020 cname:ch1b@example.com\n
    \     a=ssrc:1030 cname:ch1b@example.com\n      a=ssrc-group:DUP 1020 1030\n      a=duplication-delay:100\n
    \     a=mid:Ch1\n   Note that in actual use, SSRC values, which are random 32-bit\n
    \  numbers, could be much larger than the ones shown in this example.\n   In the
    second example below, the multicast stream is duplicated\n   twice.  50 ms after
    the original transmission, the first duplicate is\n   transmitted, and 100 ms
    after that, the second duplicate is\n   transmitted.  In other words, the same
    packet is transmitted three\n   times over a period of 150 ms.\n      v=0\n      o=ali
    1122334455 1122334466 IN IP4 dup.example.com\n      s=Delayed Duplication\n      t=0
    0\n      m=video 30000 RTP/AVP 100\n      c=IN IP4 233.252.0.1/127\n      a=source-filter:incl
    IN IP4 233.252.0.1 198.51.100.1\n      a=rtpmap:100 MP2T/90000\n      a=ssrc:1000
    cname:ch1c@example.com\n      a=ssrc:1010 cname:ch1c@example.com\n      a=ssrc:1020
    cname:ch1c@example.com\n      a=ssrc-group:DUP 1000 1010 1020\n      a=duplication-delay:50
    100\n      a=mid:Ch1\n   In the third example below, the multicast UDP stream
    is duplicated\n   with a duplication delay of 50 ms.  Redundant streams are sent
    in\n   separate source-specific multicast (SSM) sessions, so the receiving\n   host
    has to join both SSM sessions if it wants to receive both\n   streams.\n      v=0\n
    \     o=ali 1122334455 1122334466 IN IP4 dup.example.com\n      s=Delayed Duplication\n
    \     t=0 0\n      a=group:DUP S1a S1b\n      a=duplication-delay:50\n      m=audio
    30000 udp mp4\n      c=IN IP4 233.252.0.1/127\n      a=source-filter:incl IN IP4
    233.252.0.1 198.51.100.1\n      a=mid:S1a\n      m=audio 40000 udp mp4\n      c=IN
    IP4 233.252.0.2/127\n      a=source-filter:incl IN IP4 233.252.0.2 198.51.100.1\n
    \     a=mid:S1b\n"
  title: 4.  SDP Examples
- contents:
  - "5.  Security Considerations\n   The 'duplication-delay' attribute is not believed
    to introduce any\n   significant security risk to multimedia applications.  A
    malevolent\n   third party could use this attribute to misguide the receiver(s)\n
    \  about the duplication delays and/or the number of redundant streams.\n   For
    example, if the malevolent third party increases the value of the\n   duplication
    delay, the receiver(s) will unnecessarily incur a longer\n   delay, since they
    will have to wait for the entire period.  Or, if\n   the duplication delay is
    reduced by the malevolent third party, the\n   receiver(s) might not wait long
    enough for the duplicated\n   transmission and incur unnecessary packet losses.
    \ However, these\n   require intercepting and rewriting the packets carrying the
    SDP\n   description; if an interceptor can do that, many more attacks are\n   also
    possible.\n   In order to avoid attacks of this sort, the SDP description needs
    to\n   be integrity protected and provided with source authentication.  This\n
    \  can, for example, be achieved on an end-to-end basis using S/MIME\n   [RFC5652]
    [RFC5751] when SDP is used in a signaling packet using MIME\n   types (application/sdp).
    \ Alternatively, HTTPS [RFC2818] or the\n   authentication method in the Session
    Announcement Protocol (SAP)\n   [RFC2974] could be used as well.\n   Another security
    risk is due to possible software misconfiguration or\n   a software bug where
    a large number of duplicates could be\n   unwillingly signaled in the 'duplication-delay'
    attribute.\n   Similarly, an attacker can use this attribute to start a denial-of-\n
    \  service attack by signaling and sending too many duplicated streams.\n   In
    applications where this attribute is to be used, it is a good\n   practice to
    put a hard limit on both the number of duplicate streams\n   and the total delay
    introduced due to duplication, regardless of what\n   the SDP description specifies.\n
    \  Since this mechanism causes duplication of media packets, if those\n   packets
    are also cryptographically protected (e.g., encrypted) then\n   such duplication
    could act as an accelerator if any Million Message\n   [RFC3218] or similar attack
    such as Lucky 13 [Lucky13] exists against\n   the security mechanism that is in
    use.  Such acceleration could turn\n   an otherwise infeasible attack into one
    that is practical; however,\n   assuming that the amount of duplication is small
    and that such weak\n   or broken security mechanisms should really not be used,
    the overall\n   security impact of the duplication should be minimal.  If, however,
    a\n   bad actor were in control of the SDP but did not have access to the\n   keying
    material used for media, then such a bad actor could\n   potentially use the SDP
    to cause the media handling to use a weak or\n   broken mechanism with a lot of
    duplication, in which case the\n   duplication could be significant.  Deployments
    where the SDP is\n   controlled by an actor who should not have access to the
    media keying\n   material should therefore be cautious in their use of this\n
    \  duplication mechanism.\n   If this mechanism were used in conjunction with
    a source description\n   (SDES) and if the key being used for media protection
    is derived from\n   a human-memorable or otherwise dictionary-attackable secret,
    then the\n   duplication done here could allow for a more efficient dictionary\n
    \  attack against the media.  The right countermeasure is to use proper\n   keying
    or, if using an SDES, to ensure that the keys used are not\n   dictionary-attackable.\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   The following contact information shall be used for
    the registration\n   in this document:\n      Ali Begen\n      abegen@cisco.com\n"
  - contents:
    - "6.1.  Registration of SDP Attributes\n   This document registers a new attribute
      name in SDP.\n      SDP Attribute (\"att-field\"):\n         Attribute name:
      \    duplication-delay\n         Long form:          Duplication delay for temporally
      redundant\n                             streams\n         Type of name:       att-field\n
      \        Type of attribute:  Media or session level\n         Subject to charset:
      No\n         Purpose:            Specifies the relative duplication delay(s)\n
      \                            for redundant stream(s)\n         Reference:          [RFC7197]\n
      \        Values:             See [RFC7197]\n"
    title: 6.1.  Registration of SDP Attributes
  title: 6.  IANA Considerations
- contents:
  - "7.  Acknowledgements\n   The authors would like to thank Colin Perkins, Paul
    Kyzivat, and\n   Stephen Farrell for their suggestions and reviews.\n"
  title: 7.  Acknowledgements
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n
      \             Description Protocol\", RFC 4566, July 2006.\n   [RFC3550]  Schulzrinne,
      H., Casner, S., Frederick, R., and V.\n              Jacobson, \"RTP: A Transport
      Protocol for Real-Time\n              Applications\", STD 64, RFC 3550, July
      2003.\n   [RFC5234]  Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n
      \             Specifications: ABNF\", STD 68, RFC 5234, January 2008.\n   [RFC7104]
      \ Begen, A., Cai, Y., and H. Ou, \"Duplication Grouping\n              Semantics
      in the Session Description Protocol\", RFC 7104,\n              January 2014.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC6363]  Watson, M., Begen, A., and V. Roca,
      \"Forward Error\n              Correction (FEC) Framework\", RFC 6363, October
      2011.\n   [RFC2198]  Perkins, C., Kouvelas, I., Hodson, O., Hardman, V.,\n              Handley,
      M., Bolot, J., Vega-Garcia, A., and S. Fosse-\n              Parisis, \"RTP
      Payload for Redundant Audio Data\", RFC 2198,\n              September 1997.\n
      \  [RFC7198]  Begen, A. and C. Perkins, \"Duplicating RTP Streams\",\n              RFC
      7198, April 2014.\n   [IC2011]   Evans, J., Begen, A., Greengrass, J., and C.
      Filsfils,\n              \"Toward Lossless Video Transport\", IEEE Internet\n
      \             Computing, Vol. 15, No. 6, pp. 48-57, November 2011.\n   [RFC5652]
      \ Housley, R., \"Cryptographic Message Syntax (CMS)\", STD 70,\n              RFC
      5652, September 2009.\n   [RFC5751]  Ramsdell, B. and S. Turner, \"Secure/Multipurpose
      Internet\n              Mail Extensions (S/MIME) Version 3.2 Message\n              Specification\",
      RFC 5751, January 2010.\n   [RFC2818]  Rescorla, E., \"HTTP Over TLS\", RFC
      2818, May 2000.\n   [RFC2974]  Handley, M., Perkins, C., and E. Whelan, \"Session\n
      \             Announcement Protocol\", RFC 2974, October 2000.\n   [RFC3218]
      \ Rescorla, E., \"Preventing the Million Message Attack on\n              Cryptographic
      Message Syntax\", RFC 3218, January 2002.\n   [Lucky13]  AlFardan, N. and K.
      Paterson, \"Lucky Thirteen: Breaking\n              the TLS and DTLS Record
      Protocols\", IEEE Symposium on\n              Security and Privacy, May 2013,\n
      \             <http://ieeexplore.ieee.org/xpl/articleDetails.jsp?\n              tp=&arnumber=6547131&queryText%3DLucky+Thirteen>.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Authors' Addresses\n   Ali Begen\n   Cisco\n   181 Bay Street\n   Toronto, ON
    \ M5J 2T3\n   Canada\n   EMail: abegen@cisco.com\n   Yiqun Cai\n   Microsoft\n
    \  1065 La Avenida\n   Mountain View, CA  94043\n   USA\n   EMail: yiqunc@microsoft.com\n
    \  Heidi Ou\n   Cisco\n   170 W. Tasman Dr.\n   San Jose, CA  95134\n   USA\n
    \  EMail: hou@cisco.com\n"
  title: Authors' Addresses
