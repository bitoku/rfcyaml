- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                   F. Templin, Ed.
  contents:
  - "Independent Submission                                   F. Templin, Ed.\n  \
    \                 Virtual Enterprise Traversal (VET)\n"
- title: Abstract
  contents:
  - "Abstract\n   Enterprise networks connect routers over various link types, and\
    \ may\n   also connect to provider networks and/or the global Internet.\n   Enterprise\
    \ network nodes require a means to automatically provision\n   IP addresses/prefixes\
    \ and support internetworking operation in a wide\n   variety of use cases including\
    \ Small Office, Home Office (SOHO)\n   networks, Mobile Ad hoc Networks (MANETs),\
    \ multi-organizational\n   corporate networks and the interdomain core of the\
    \ global Internet\n   itself.  This document specifies a Virtual Enterprise Traversal\
    \ (VET)\n   abstraction for autoconfiguration and operation of nodes in\n   enterprise\
    \ networks.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5558.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This RFC is not a candidate for any level of Internet Standard.\
    \  The\n   IETF disclaims any knowledge of the fitness of this RFC for any\n \
    \  purpose and in particular notes that the decision to publish is not\n   based\
    \ on IETF review for such things as security, congestion control,\n   or inappropriate\
    \ interaction with deployed protocols.  The RFC Editor\n   has chosen to publish\
    \ this document at its discretion.  Readers of\n   this RFC should exercise caution\
    \ in evaluating its value for\n   implementation and deployment.  See RFC 3932\
    \ for more information.\n   Note that the IETF AUTOCONF Working Group is working\
    \ on a similar\n   protocol solution that may become available in the future.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Terminology .....................................................6\n  \
    \ 3. Enterprise Characteristics .....................................10\n   4.\
    \ Autoconfiguration ..............................................11\n      4.1.\
    \ Enterprise Router (ER) Autoconfiguration ..................12\n      4.2. Enterprise\
    \ Border Router (EBR) Autoconfiguration ..........13\n           4.2.1. VET Interface\
    \ Autoconfiguration ....................13\n                  4.2.1.1. Interface\
    \ Initialization ..................14\n                  4.2.1.2. Enterprise Border\
    \ Gateway\n                           Discovery and Enterprise Identification\
    \ ...14\n                  4.2.1.3. EID Configuration .........................15\n\
    \           4.2.2. Provider-Aggregated (PA) EID Prefix\n                  Autoconfiguration\
    \ ..................................15\n           4.2.3. Provider-Independent\
    \ (PI) EID Prefix\n                  Autoconfiguration ..................................16\n\
    \      4.3. Enterprise Border Gateway (EBG) Autoconfiguration .........17\n  \
    \    4.4. VET Host Autoconfiguration ................................17\n   5.\
    \ Internetworking Operation ......................................18\n      5.1.\
    \ Routing Protocol Participation ............................18\n      5.2. RLOC-Based\
    \ Communications .................................18\n      5.3. EID-Based Communications\
    \ ..................................18\n      5.4. IPv6 Router Discovery and Prefix\
    \ Registration .............18\n           5.4.1. IPv6 Router and Prefix Discovery\
    \ ...................18\n           5.4.2. IPv6 PA Prefix Registration ........................19\n\
    \           5.4.3. IPv6 PI Prefix Registration ........................20\n  \
    \         5.4.4. IPv6 Next-Hop EBR Discovery ........................21\n    \
    \  5.5. IPv4 Router Discovery and Prefix Registration .............23\n      5.6.\
    \ VET Encapsulation .........................................24\n      5.7. SEAL\
    \ Encapsulation ........................................24\n      5.8. Generating\
    \ Errors .........................................25\n      5.9. Processing Errors\
    \ .........................................25\n      5.10. Mobility and Multihoming\
    \ Considerations ..................26\n      5.11. Multicast ................................................27\n\
    \      5.12. Service Discovery ........................................28\n  \
    \    5.13. Enterprise Partitioning ..................................29\n    \
    \  5.14. EBG Prefix State Recovery ................................29\n   6. Security\
    \ Considerations ........................................30\n   7. Related Work\
    \ ...................................................30\n   8. Acknowledgements\
    \ ...............................................31\n   9. Contributors ...................................................31\n\
    \   10. References ....................................................31\n  \
    \    10.1. Normative References .....................................31\n    \
    \  10.2. Informative References ...................................33\n   Appendix\
    \ A.  Duplicate Address Detection (DAD) Considerations .... 36\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Enterprise networks [RFC4852] connect routers over various\
    \ link types\n   (see [RFC4861], Section 2.2).  The term \"enterprise network\"\
    \ in this\n   context extends to a wide variety of use cases and deployment\n\
    \   scenarios.  For example, an \"enterprise\" can be as small as a SOHO\n   network,\
    \ as complex as a multi-organizational corporation, or as\n   large as the global\
    \ Internet itself.  Mobile Ad hoc Networks (MANETs)\n   [RFC2501] can also be\
    \ considered as a challenging example of an\n   enterprise network, in that their\
    \ topologies may change dynamically\n   over time and that they may employ little/no\
    \ active management by a\n   centralized network administrative authority.  These\
    \ specialized\n   characteristics for MANETs require careful consideration, but\
    \ the\n   same principles apply equally to other enterprise network scenarios.\n\
    \   This document specifies a Virtual Enterprise Traversal (VET)\n   abstraction\
    \ for autoconfiguration and internetworking operation,\n   where addresses of\
    \ different scopes may be assigned on various types\n   of interfaces with diverse\
    \ properties.  Both IPv4 [RFC0791] and IPv6\n   [RFC2460] are discussed within\
    \ this context.  The use of standard\n   DHCP [RFC2131] [RFC3315] and neighbor\
    \ discovery [RFC0826] [RFC1256]\n   [RFC4861] mechanisms is assumed unless otherwise\
    \ specified.\n                         Provider-Edge Interfaces\n            \
    \                  x   x        x\n                              |   |       \
    \ |\n         +--------------------+---+--------+----------+    E\n         |\
    \                    |   |        |          |    n\n         |    I         \
    \      |   |  ....  |          |    t\n         |    n           +---+---+--------+---+\
    \      |    e\n         |    t           |   +--------+      /|      |    r\n\
    \         |    e  I   x----+   |  Host  |   I /*+------+--< p  I\n         | \
    \   r  n        |   |Function|   n|**|      |    r  n\n         |    n  t    \
    \    |   +--------+   t|**|      |    i  t\n         |    a  e   x----+      \
    \        V e|**+------+--< s  e\n         |    l  r      . |              E r|**|\
    \  .   |    e  r\n         |       f      . |              T f|**|  .   |    \
    \   f\n         |    V  a      . |   +--------+   a|**|  .   |    I  a\n     \
    \    |    i  c      . |   | Router |   c|**|  .   |    n  c\n         |    r \
    \ e   x----+   |Function|   e \\*+------+--< t  e\n         |    t  s        |\
    \   +--------+      \\|      |    e  s\n         |    u           +---+---+--------+---+\
    \      |    r\n         |    a               |   |  ....  |          |    i\n\
    \         |    l               |   |        |          |    o\n         +--------------------+---+--------+----------+\
    \    r\n                              |   |        |\n                       \
    \       x   x        x\n                       Enterprise-Edge Interfaces\n  \
    \             Figure 1: Enterprise Router (ER) Architecture\n   Figure 1 above\
    \ depicts the architectural model for an Enterprise\n   Router (ER).  As shown\
    \ in the figure, an ER may have a variety of\n   interface types including enterprise-edge,\
    \ enterprise-interior,\n   provider-edge, internal-virtual, as well as VET interfaces\
    \ used for\n   IP-in-IP encapsulation.  The different types of interfaces are\n\
    \   defined, and the autoconfiguration mechanisms used for each type are\n   specified.\
    \  This architecture applies equally for MANET routers, in\n   which enterprise-interior\
    \ interfaces correspond to the wireless\n   multihop radio interfaces typically\
    \ associated with MANETs.  Out of\n   scope for this document is the autoconfiguration\
    \ of provider\n   interfaces, which must be coordinated in a manner specific to\
    \ the\n   service provider's network.\n   Enterprise networks must have a means\
    \ for supporting both Provider-\n   Independent (PI) and Provider-Aggregated (PA)\
    \ IP prefixes.  This is\n   especially true for enterprise scenarios that involve\
    \ mobility and\n   multihoming.  Also in scope are ingress filtering for multihomed\n\
    \   sites, adaptation based on authenticated ICMP feedback from on-path\n   routers,\
    \ effective tunnel path MTU mitigations, and routing scaling\n   suppression as\
    \ required in many enterprise network scenarios.\n   Recognizing that one size\
    \ does not fit all, the VET specification\n   provides adaptable mechanisms that\
    \ address these issues, and more, in\n   a wide variety of enterprise network\
    \ use cases.\n   VET represents a functional superset of 6over4 [RFC2529] and\
    \ Intra-\n   Site Automatic Tunnel Addressing Protocol (ISATAP) [RFC5214], and\
    \ it\n   further supports additional encapsulations such as IPsec [RFC4301],\n\
    \   Subnetwork Encapsulation and Adaptation Layer (SEAL) [RFC5320], etc.\n   Together,\
    \ these technologies serve as functional building blocks for\n   a new Internetworking\
    \ architecture known as Routing and Addressing in\n   Networks with Global Enterprise\
    \ Recursion [RFC5720][RANGERS].\n   The VET principles can be either directly\
    \ or indirectly traced to the\n   deliberations of the ROAD group in January 1992,\
    \ and also to still\n   earlier works including NIMROD [RFC1753], the Catenet\
    \ model for\n   internetworking [CATENET] [IEN48] [RFC2775], etc.  [RFC1955] captures\n\
    \   the high-level architectural aspects of the ROAD group deliberations\n   in\
    \ a \"New Scheme for Internet Routing and Addressing (ENCAPS) for\n   IPNG\".\n\
    \   VET is related to the present-day activities of the IETF AUTOCONF,\n   DHC,\
    \ IPv6, MANET, and v6OPS working groups, as well as the IRTF RRG\n   working group.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The mechanisms within this document build upon the fundamental\n\
    \   principles of IP-in-IP encapsulation.  The terms \"inner\" and \"outer\"\n\
    \   are used to, respectively, refer to the innermost IP {address,\n   protocol,\
    \ header, packet, etc.} *before* encapsulation, and the\n   outermost IP {address,\
    \ protocol, header, packet, etc.} *after*\n   encapsulation.  VET also allows\
    \ for inclusion of \"mid-layer\"\n   encapsulations between the inner and outer\
    \ layers, including IPsec\n   [RFC4301], the Subnetwork Encapsulation and Adaptation\
    \ Layer (SEAL)\n   [RFC5320], etc.\n   The terminology in the normative references\
    \ apply; the following\n   terms are defined within the scope of this document:\n\
    \   subnetwork\n      the same as defined in [RFC3819].\n   enterprise\n     \
    \ the same as defined in [RFC4852].  An enterprise is also\n      understood to\
    \ refer to a cooperative networked collective with a\n      commonality of business,\
    \ social, political, etc. interests.\n      Minimally, the only commonality of\
    \ interest in some enterprise\n      network scenarios may be the cooperative\
    \ provisioning of\n      connectivity itself.\n   site\n      a logical and/or\
    \ physical grouping of interfaces that connect a\n      topological area less\
    \ than or equal to an enterprise in scope.  A\n      site within an enterprise\
    \ can, in some sense, be considered as an\n      enterprise unto itself.\n   Mobile\
    \ Ad hoc Network (MANET)\n      a connected topology of mobile or fixed routers\
    \ that maintain a\n      routing structure among themselves over dynamic links,\
    \ where a\n      wide variety of MANETs share common properties with enterprise\n\
    \      networks.  The characteristics of MANETs are defined in [RFC2501],\n  \
    \    Section 3.\n   enterprise/site/MANET\n      throughout the remainder of this\
    \ document, the term \"enterprise\"\n      is used to collectively refer to any\
    \ of enterprise/site/MANET,\n      i.e., the VET mechanisms and operational principles\
    \ can be applied\n      to enterprises, sites, and MANETs of any size or shape.\n\
    \   Enterprise Router (ER)\n      As depicted in Figure 1, an Enterprise Router\
    \ (ER) is a fixed or\n      mobile router that comprises a router function, a\
    \ host function,\n      one or more enterprise-interior interfaces, and zero or\
    \ more\n      internal virtual, enterprise-edge, provider-edge, and VET\n    \
    \  interfaces.  At a minimum, an ER forwards outer IP packets over\n      one\
    \ or more sets of enterprise-interior interfaces, where each set\n      connects\
    \ to a distinct enterprise.\n   Enterprise Border Router (EBR)\n      an ER that\
    \ connects edge networks to the enterprise and/or\n      connects multiple enterprises\
    \ together.  An EBR is a tunnel\n      endpoint router, and it configures a separate\
    \ VET interface over\n      each set of enterprise-interior interfaces that connect\
    \ the EBR to\n      each distinct enterprise.  In particular, an EBR may configure\n\
    \      multiple VET interfaces -- one for each distinct enterprise.  All\n   \
    \   EBRs are also ERs.\n   Enterprise Border Gateway (EBG)\n      an EBR that\
    \ connects VET interfaces configured over child\n      enterprises to a provider\
    \ network -- either directly via a\n      provider-edge interface or indirectly\
    \ via another VET interface\n      configured over a parent enterprise.  EBRs\
    \ may act as EBGs on some\n      VET interfaces and as ordinary EBRs on other\
    \ VET interfaces.  All\n      EBGs are also EBRs.\n   enterprise-interior interface\n\
    \      an ER's attachment to a link within an enterprise.  Packets sent\n    \
    \  over enterprise-interior interfaces may be forwarded over multiple\n      additional\
    \ enterprise-interior interfaces within the enterprise\n      before they are\
    \ forwarded via an enterprise-edge interface,\n      provider-edge interface,\
    \ or a VET interface configured over a\n      different enterprise.  Enterprise-interior\
    \ interfaces connect\n      laterally within the IP network hierarchy.\n   enterprise-edge\
    \ interface\n      an EBR's attachment to a link (e.g., an Ethernet, a wireless\n\
    \      personal area network, etc.) on an arbitrarily complex edge\n      network\
    \ that the EBR connects to an enterprise and/or provider\n      network.  Enterprise-edge\
    \ interfaces connect to lower levels\n      within the IP network hierarchy.\n\
    \   provider-edge interface\n      an EBR's attachment to the Internet or to a\
    \ provider network\n      outside of the enterprise via which the Internet can\
    \ be reached.\n      Provider-edge interfaces connect to higher levels within\
    \ the IP\n      network hierarchy.\n   internal-virtual interface\n      an interface\
    \ that is internal to an EBR and does not in itself\n      directly attach to\
    \ a tangible physical link, e.g., an Ethernet\n      cable.  Examples include\
    \ a loopback interface, a virtual LAN\n      interface, or some form of tunnel\
    \ interface.\n   Virtual Enterprise Traversal (VET)\n      an abstraction that\
    \ uses IP-in-IP encapsulation to create an\n      overlay that spans an enterprise\
    \ in a single (inner) IP hop.\n   VET interface\n      an EBR's tunnel virtual\
    \ interface used for Virtual Enterprise\n      Traversal.  The EBR configures\
    \ a VET interface over a set of\n      underlying interfaces belonging to the\
    \ same enterprise.  When\n      there are multiple distinct enterprises (each\
    \ with their own\n      distinct set of underlying interfaces), the EBR configures\
    \ a\n      separate VET interface over each set of underlying interfaces,\n  \
    \    i.e., the EBR configures multiple VET interfaces.\n      The VET interface\
    \ encapsulates each inner IP packet in any mid-\n      layer headers plus an outer\
    \ IP header, then it forwards it on an\n      underlying interface such that the\
    \ Time to Live (TTL) / Hop Limit\n      in the inner header is not decremented\
    \ as the packet traverses the\n      enterprise.  The VET interface therefore\
    \ presents an automatic\n      tunneling abstraction that represents the enterprise\
    \ as a single\n      IP hop.\n      VET interfaces in non-multicast environments\
    \ are Non-Broadcast,\n      Multiple Access (NBMA); VET interfaces in multicast\
    \ environments\n      are multicast capable.\n   VET host\n      any node (host\
    \ or router) that configures a VET interface for host\n      operation only. \
    \ Note that a single node may configure some of its\n      VET interfaces as host\
    \ interfaces and others as router interfaces.\n   VET node\n      any node that\
    \ configures and uses a VET interface.\n   Provider-Independent (PI) prefix\n\
    \      an IPv6 or IPv4 prefix (e.g., 2001:DB8::/48, 192.0.2/24, etc.)\n      that\
    \ is either self-generated by an ER or delegated to an\n      enterprise by a\
    \ registry.\n   Provider Aggregated (PA) prefix\n      an IPv6 or IPv4 prefix\
    \ that is delegated to an enterprise by a\n      provider network.\n   Routing\
    \ Locator (RLOC)\n      a non-link-local IPv4 or IPv6 address taken from a PI/PA\
    \ prefix\n      that can appear in enterprise-interior and/or interdomain routing\n\
    \      tables.  Global-scope RLOC prefixes are delegated to specific\n      enterprises\
    \ and are routable within both the enterprise-interior\n      and interdomain\
    \ routing regions.  Enterprise-local-scope RLOC\n      prefixes (e.g., IPv6 Unique\
    \ Local Addresses [RFC4193], IPv4\n      privacy addresses [RFC1918], etc.) are\
    \ self-generated by\n      individual enterprises and routable only within the\
    \ enterprise-\n      interior routing region.\n      ERs use RLOCs for operating\
    \ the enterprise-interior routing\n      protocol and for next-hop determination\
    \ in forwarding packets\n      addressed to other RLOCs.  End systems use RLOCs\
    \ as addresses for\n      communications between endpoints within the same enterprise.\
    \  VET\n      interfaces treat RLOCs as *outer* IP addresses during IP-in-IP\n\
    \      encapsulation.\n   Endpoint Interface iDentifier (EID)\n      an IPv4 or\
    \ IPv6 address taken from a PI/PA prefix that is routable\n      within an enterprise-edge\
    \ or VET overlay network scope, and may\n      also appear in enterprise-interior\
    \ and/or interdomain mapping\n      tables.  EID prefixes are typically separate\
    \ and distinct from any\n      RLOC prefix space.\n      Edge network routers\
    \ use EIDs for operating the enterprise-edge or\n      VET overlay network routing\
    \ protocol and for next-hop\n      determination in forwarding packets addressed\
    \ to other EIDs.  End\n      systems use EIDs as addresses for communications\
    \ between endpoints\n      either within the same enterprise or within different\
    \ enterprises.\n      VET interfaces treat EIDs as *inner* IP addresses during\
    \ IP-in-IP\n      encapsulation.\n   The following additional acronyms are used\
    \ throughout the document:\n   CGA          - Cryptographically Generated Address\n\
    \   DHCP(v4, v6) - Dynamic Host Configuration Protocol\n   FIB          - Forwarding\
    \ Information Base\n   ISATAP       - Intra-Site Automatic Tunnel Addressing Protocol\n\
    \   NBMA         - Non-Broadcast, Multiple Access\n   ND           - Neighbor\
    \ Discovery\n   PIO          - Prefix Information Option\n   PRL          - Potential\
    \ Router List\n   PRLNAME      - Identifying name for the PRL (default is \"isatap\"\
    )\n   RIO          - Route Information Option\n   RS/RA        - IPv6 ND Router\
    \ Solicitation/Advertisement\n   SEAL         - Subnetwork Encapsulation and Adaptation\
    \ Layer\n   SLAAC        - IPv6 StateLess Address AutoConfiguation\n"
- title: 3.  Enterprise Characteristics
  contents:
  - "3.  Enterprise Characteristics\n   Enterprises consist of links that are connected\
    \ by Enterprise Routers\n   (ERs) as depicted in Figure 1.  ERs typically participate\
    \ in a\n   routing protocol over enterprise-interior interfaces to discover\n\
    \   routes that may include multiple Layer 2 or Layer 3 forwarding hops.\n   Enterprise\
    \ Border Routers (EBRs) are ERs that connect edge networks\n   to the enterprise\
    \ and/or join multiple enterprises together.\n   Enterprise Border Gateways (EBGs)\
    \ are EBRs that either directly or\n   indirectly connect enterprises to provider\
    \ networks.\n   An enterprise may be as simple as a small collection of ERs and\
    \ their\n   attached edge networks; an enterprise may also contain other\n   enterprises\
    \ and/or be a subnetwork of a larger enterprise.  An\n   enterprise may further\
    \ encompass a set of branch offices and/or\n   nomadic hosts connected to a home\
    \ office over one or several service\n   providers, e.g., through Virtual Private\
    \ Network (VPN) tunnels.\n   Enterprises that comprise link types with sufficiently\
    \ similar\n   properties (e.g., Layer 2 (L2) address formats, maximum transmission\n\
    \   units (MTUs), etc.) can configure a sub-IP layer routing service such\n  \
    \ that IP sees the enterprise as an ordinary shared link the same as\n   for a\
    \ (bridged) campus LAN.  In that case, a single IP hop is\n   sufficient to traverse\
    \ the enterprise without IP layer encapsulation.\n   Enterprises that comprise\
    \ link types with diverse properties and/or\n   configure multiple IP subnets\
    \ must also provide a routing service\n   that operates as an IP layer mechanism.\
    \  In that case, multiple IP\n   hops may be necessary to traverse the enterprise\
    \ such that care must\n   be taken to avoid multi-link subnet issues [RFC4903].\n\
    \   Conceptually, an ER embodies both a host function and router\n   function.\
    \  The host function supports Endpoint Interface iDentifier\n   (EID)-based and/or\
    \ Routing LOCator (RLOC)-based communications\n   according to the weak end-system\
    \ model [RFC1122].  The router\n   function engages in the enterprise-interior\
    \ routing protocol,\n   connects any of the ER's edge networks to the enterprise,\
    \ and may\n   also connect the enterprise to provider networks (see Figure 1).\n\
    \   In addition to other interface types, VET nodes configure VET\n   interfaces\
    \ that view all other VET nodes in an enterprise as single-\n   hop neighbors\
    \ attached to a virtual link.  VET nodes configure a\n   separate VET interface\
    \ for each distinct enterprise to which they\n   connect, and discover other EBRs\
    \ on each VET interface that can be\n   used for forwarding packets to off-enterprise\
    \ destinations.\n   For each distinct enterprise, an enterprise trust basis must\
    \ be\n   established and consistently applied.  For example, in enterprises in\n\
    \   which EBRs establish symmetric security associations, mechanisms such\n  \
    \ as IPsec [RFC4301] can be used to assure authentication and\n   confidentiality.\
    \  In other enterprise network scenarios, asymmetric\n   securing mechanisms such\
    \ as SEcure Neighbor Discovery (SEND)\n   [RFC3971] may be necessary to authenticate\
    \ exchanges based on trust\n   anchors.\n   Finally, in enterprises with a centralized\
    \ management structure\n   (e.g., a corporate campus network), the enterprise\
    \ name service and a\n   synchronized set of EBGs can provide infrastructure support\
    \ for\n   virtual enterprise traversal.  In that case, the EBGs can provide a\n\
    \   \"default mapper\" [APT] service used for short-term packet forwarding\n \
    \  until EBR neighbor relationships can be established.  In enterprises\n   with\
    \ a distributed management structure (e.g., MANETs), peer-to-peer\n   coordination\
    \ between the EBRs themselves may be required.\n   Recognizing that various use\
    \ cases will entail a continuum between a\n   fully distributed and fully centralized\
    \ approach, the following\n   sections present the mechanisms of Virtual Enterprise\
    \ Traversal as\n   they apply to a wide variety of scenarios.\n"
- title: 4.  Autoconfiguration
  contents:
  - "4.  Autoconfiguration\n   ERs, EBRs, EBGs, and VET hosts configure themselves\
    \ for operation as\n   specified in the following subsections.\n"
- title: 4.1.  Enterprise Router (ER) Autoconfiguration
  contents:
  - "4.1.  Enterprise Router (ER) Autoconfiguration\n   ERs configure enterprise-interior\
    \ interfaces and engage in any\n   routing protocols over those interfaces.\n\
    \   When an ER joins an enterprise, it first configures a unique IPv6\n   link-local\
    \ address on each enterprise-interior interface and\n   configures an IPv4 link-local\
    \ address on each enterprise-interior\n   interface that requires an IPv4 link-local\
    \ capability.  IPv6 link-\n   local address generation mechanisms that provide\
    \ sufficient\n   uniqueness include Cryptographically Generated Addresses (CGAs)\n\
    \   [RFC3972], IPv6 Privacy Addresses [RFC4941], StateLess Address\n   AutoConfiguration\
    \ (SLAAC) using EUI-64 interface identifiers\n   [RFC4291] [RFC4862], etc.  The\
    \ mechanisms specified in [RFC3927]\n   provide an IPv4 link-local address generation\
    \ capability.\n   Next, the ER configures an RLOC on each of its enterprise-interior\n\
    \   interfaces and engages in any routing protocols on those interfaces.\n   The\
    \ ER can configure an RLOC via explicit management, DHCP\n   autoconfiguration,\
    \ pseudo-random self-generation from a suitably\n   large address pool, or through\
    \ an alternate autoconfiguration\n   mechanism.\n   Alternatively (or in addition),\
    \ the ER can request RLOC prefix\n   delegations via an automated prefix delegation\
    \ exchange over an\n   enterprise-interior interface and can assign the prefix(es)\
    \ on\n   enterprise-edge interfaces.  In that case, the ER can use an RLOC\n \
    \  assigned to an enterprise-edge interface for enterprise-interior\n   routing\
    \ protocol operation and next-hop determination purposes.  Note\n   that in some\
    \ cases, the same enterprise-edge interfaces may assign\n   both RLOC and an EID\
    \ addresses if there is a means for source address\n   selection.  In other cases\
    \ (e.g., for separation of security\n   domains), RLOCs and EIDs must be assigned\
    \ on separate sets of\n   enterprise-edge interfaces.\n   Self-generation of RLOCs\
    \ for IPv6 can be from a large IPv6 local-use\n   address range, e.g., IPv6 Unique\
    \ Local Addresses [RFC4193].  Self-\n   generation of RLOCs for IPv4 can be from\
    \ a large IPv4 private address\n   range (e.g., [RFC1918]).  When self-generation\
    \ is used alone, the ER\n   must continuously monitor the RLOCs for uniqueness,\
    \ e.g., by\n   monitoring the routing protocol.\n   DHCP generation of RLOCs may\
    \ require support from relays within the\n   enterprise.  For DHCPv6, relays that\
    \ do not already know the RLOC of\n   a server within the enterprise forward requests\
    \ to the\n   'All_DHCP_Servers' site-scoped IPv6 multicast group [RFC3315].  For\n\
    \   DHCPv4, relays that do not already know the RLOC of a server within\n   the\
    \ enterprise forward requests to the site-scoped IPv4 multicast\n   group address\
    \ 'All_DHCPv4_Servers', which should be set to\n   239.255.2.1 unless an alternate\
    \ multicast group for the site is\n   known.  DHCPv4 servers that delegate RLOCs\
    \ should therefore join the\n   'All_DHCPv4_Servers' multicast group and service\
    \ any DHCPv4 messages\n   received for that group.\n   A combined approach using\
    \ both DHCP and self-generation is also\n   possible when the ER configures both\
    \ a DHCP client and relay that are\n   connected, e.g., via a pair of back-to-back\
    \ connected Ethernet\n   interfaces, a tun/tap interface, a loopback interface,\
    \ inter-process\n   communication, etc.  The ER first self-generates a temporary\
    \ RLOC\n   used only for the purpose of procuring an actual RLOC taken from a\n\
    \   disjoint addressing range.  The ER then engages in the routing\n   protocol\
    \ and performs a DHCP client/relay exchange using the\n   temporary RLOC as the\
    \ address of the relay.  When the DHCP server\n   delegates an actual RLOC address/prefix,\
    \ the ER abandons the\n   temporary RLOC and re-engages in the routing protocol\
    \ using an RLOC\n   taken from the delegation.\n   In some enterprise use cases\
    \ (e.g., MANETs), assignment of RLOCs on\n   enterprise-interior interfaces as\
    \ singleton addresses (i.e., as\n   addresses with /32 prefix lengths for IPv4,\
    \ and as addresses with\n   /128 prefix lengths for IPv6) may be necessary to\
    \ avoid multi-link\n   subnet issues.\n"
- title: 4.2.  Enterprise Border Router (EBR) Autoconfiguration
  contents:
  - "4.2.  Enterprise Border Router (EBR) Autoconfiguration\n   EBRs are ERs that\
    \ configure VET interfaces over distinct sets of\n   underlying interfaces belonging\
    \ to the same enterprise; an EBR can\n   connect to multiple enterprises, in which\
    \ case it would configure\n   multiple VET interfaces.  In addition to the ER\
    \ autoconfiguration\n   procedures specified in Section 4.1, EBRs perform the\
    \ following\n   autoconfiguration operations.\n"
- title: 4.2.1.  VET Interface Autoconfiguration
  contents:
  - "4.2.1.  VET Interface Autoconfiguration\n   VET interface autoconfiguration entails:\n\
    \   1) interface initialization,\n   2) EBG discovery and enterprise identification,\
    \ and\n   3) EID configuration.\n   These functions are specified in the following\
    \ sections.\n"
- title: 4.2.1.1.  Interface Initialization
  contents:
  - "4.2.1.1.  Interface Initialization\n   EBRs configure a VET interface over a\
    \ set of underlying interfaces\n   belonging to the same enterprise, where the\
    \ VET interface presents a\n   virtual-link abstraction in which all EBRs in the\
    \ enterprise appear\n   as single-hop neighbors through the use of IP-in-IP encapsulation.\n\
    \   After the EBR configures a VET interface, it initializes the\n   interface\
    \ and assigns an IPv6 link-local address and an IPv4 link-\n   local address if\
    \ necessary.\n   When IPv6 and IPv4 are used as the inner/outer protocols\n  \
    \ (respectively), the EBR autoconfigures an ISATAP link-local address\n   ([RFC5214],\
    \ Section 6.2) on the VET interface to support packet\n   forwarding and operation\
    \ of the IPv6 neighbor discovery protocol.\n   The ISATAP link-local address embeds\
    \ an IPv4 RLOC, and need not be\n   checked for uniqueness since the IPv4 RLOC\
    \ itself is managed for\n   uniqueness (see Section 4.1).\n   Link-local address\
    \ configuration for other inner/outer IP protocol\n   combinations is through\
    \ administrative configuration or through an\n   unspecified alternate method.\
    \  Link-local address configuration for\n   other inner/outer IP protocol combinations\
    \ may not be necessary if an\n   EID can be configured through other means (see\
    \ Section 4.2.1.3).\n   After the EBR initializes a VET interface, it can communicate\
    \ with\n   other VET nodes as single-hop neighbors on the VET interface from the\n\
    \   viewpoint of the inner IP protocol.\n"
- title: 4.2.1.2.  Enterprise Border Gateway Discovery and Enterprise
  contents:
  - "4.2.1.2.  Enterprise Border Gateway Discovery and Enterprise\n          Identification\n\
    \   The EBR next discovers a list of EBGs for each of its VET interfaces.\n  \
    \ The list can be discovered through information conveyed in the\n   routing protocol,\
    \ through the Potential Router List (PRL) discovery\n   mechanisms outlined in\
    \ Section 8.3.2 of [RFC5214], through DHCP\n   options, etc.  In multicast-capable\
    \ enterprises, EBRs can also listen\n   for advertisements on the 'rasadv' [RASADV]\
    \ multicast group address.\n   In particular, whether or not routing information\
    \ is available, the\n   EBR can discover the list of EBGs by resolving an identifying\
    \ name\n   for the PRL ('PRLNAME') formed as 'hostname.domainname', where\n  \
    \ 'hostname' is an enterprise-specific name string and 'domainname' is\n   an\
    \ enterprise-specific DNS suffix.  The EBR discovers 'PRLNAME'\n   through manual\
    \ configuration, a DHCP option, 'rasadv' protocol\n   advertisements, link-layer\
    \ information (e.g., an IEEE 802.11 Service\n   Set Identifier (SSID)), or through\
    \ some other means specific to the\n   enterprise.  In the absence of other information,\
    \ the EBR sets the\n   'hostname' component of 'PRLNAME' to \"isatap\" and sets\
    \ the\n   'domainname' component only if an enterprise-specific DNS suffix\n \
    \  \"example.com\" is known (e.g., as \"isatap.example.com\").\n   The global\
    \ Internet interdomain routing core represents a specific\n   example of an enterprise\
    \ network scenario, albeit on an enormous\n   scale.  The 'PRLNAME' assigned to\
    \ the global Internet interdomain\n   routing core is \"isatap.net\".\n   After\
    \ discovering 'PRLNAME', the EBR can discover the list of EBGs by\n   resolving\
    \ 'PRLNAME' to a list of RLOC addresses through a name\n   service lookup.  For\
    \ centrally managed enterprises, the EBR resolves\n   'PRLNAME' using an enterprise-local\
    \ name service (e.g., the\n   enterprise-local DNS).  For enterprises with a distributed\
    \ management\n   structure, the EBR resolves 'PRLNAME' using Link-Local Multicast\
    \ Name\n   Resolution (LLMNR) [RFC4795] over the VET interface.  In that case,\n\
    \   all EBGs in the PRL respond to the LLMNR query, and the EBR accepts\n   the\
    \ union of all responses.\n   Each distinct enterprise must have a unique identity\
    \ that EBRs can\n   use to uniquely discern their enterprise affiliations.  'PRLNAME'\
    \ as\n   well as the RLOCs of EBGs and the IP prefixes they aggregate serve as\n\
    \   an identifier for the enterprise.\n"
- title: 4.2.1.3.  EID Configuration
  contents:
  - "4.2.1.3.  EID Configuration\n   After EBG discovery, the EBR configures EIDs\
    \ on its VET interfaces.\n   When IPv6 and IPv4 are used as the inner/outer protocols\n\
    \   (respectively), the EBR autoconfigures EIDs as specified in Section\n   5.4.1.\
    \  In particular, the EBR acts as a host on its VET interfaces\n   for router\
    \ and prefix discovery purposes but acts as a router on its\n   VET interfaces\
    \ for routing protocol operation and packet forwarding\n   purposes.\n   EID configuration\
    \ for other inner/outer IP protocol combinations is\n   through administrative\
    \ configuration or through an unspecified\n   alternate method; in some cases,\
    \ such EID configuration can be\n   performed independently of EBG discovery.\n"
- title: 4.2.2.  Provider-Aggregated (PA) EID Prefix Autoconfiguration
  contents:
  - "4.2.2.  Provider-Aggregated (PA) EID Prefix Autoconfiguration\n   EBRs can acquire\
    \ Provider-Aggregated (PA) EID prefixes through\n   autoconfiguration exchanges\
    \ with EBGs over VET interfaces, where each\n   EBG may be configured as either\
    \ a DHCP relay or DHCP server.\n   For IPv4 EIDs, the EBR acquires prefixes via\
    \ an automated IPv4 prefix\n   delegation exchange, explicit management, etc.\n\
    \   For IPv6 EIDs, the EBR acquires prefixes via DHCPv6 Prefix Delegation\n  \
    \ exchanges.  In particular, the EBR (acting as a requesting router)\n   can use\
    \ DHCPv6 prefix delegation [RFC3633] over the VET interface to\n   obtain IPv6\
    \ EID prefixes from the server (acting as a delegating\n   router).\n   The EBR\
    \ obtains prefixes using either a 2-message or 4-message DHCPv6\n   exchange [RFC3315].\
    \  For example, to perform the 2-message exchange,\n   the EBR's DHCPv6 client\
    \ forwards a Solicit message with an IA_PD\n   option to its DHCPv6 relay, i.e.,\
    \ the EBR acts as a combined client/\n   relay (see Section 4.1).  The relay then\
    \ forwards the message over\n   the VET interface to an EBG, which either services\
    \ the request or\n   relays it further.  The forwarded Solicit message will elicit\
    \ a reply\n   from the server containing PA IPv6 prefix delegations.\n   The EBR\
    \ can propose a specific prefix to the DHCPv6 server per\n   Section 7 of [RFC3633],\
    \ e.g., if a prefix delegation hint is\n   available.  The server will check the\
    \ proposed prefix for consistency\n   and uniqueness, then return it in the reply\
    \ to the EBR if it was able\n   to perform the delegation.\n   After the EBR receives\
    \ PA prefix delegations, it can provision the\n   prefixes on enterprise-edge\
    \ interfaces as well as on other VET\n   interfaces for which it is configured\
    \ as an EBG.  It can also\n   provision the prefixes on enterprise-interior interfaces\
    \ as long as\n   other nodes on those interfaces unambiguously associate the prefixes\n\
    \   with the EBR.\n"
- title: 4.2.3.  Provider-Independent (PI) EID Prefix Autoconfiguration
  contents:
  - "4.2.3.  Provider-Independent (PI) EID Prefix Autoconfiguration\n   Independent\
    \ of any PA prefixes, EBRs can acquire and use Provider-\n   Independent (PI)\
    \ EID prefixes that are self-configured (e.g., using\n   [RFC4193], etc.) and/or\
    \ delegated by a registration authority (e.g.,\n   using [CENTRL-ULA], etc.).\
    \  When an EBR acquires a PI prefix, it must\n   also obtain credentials that\
    \ it can use to prove prefix ownership\n   when it registers the prefixes with\
    \ EBGs within an enterprise (see\n   Sections 5.4 and 5.5).\n   After the EBR\
    \ receives PI prefix delegations, it can provision the\n   prefixes on enterprise-edge\
    \ interfaces as well as on other VET\n   interfaces for which it is configured\
    \ as an EBG.  It can also\n   provision the prefixes on enterprise-interior interfaces\
    \ as long as\n   other nodes on those interfaces can unambiguously associate the\n\
    \   prefixes with the EBR.\n   The minimum-sized IPv6 PI prefix that an EBR may\
    \ acquire is a /56.\n   The minimum-sized IPv4 PI prefix that an EBR may acquire\
    \ is a /24.\n"
- title: 4.3.  Enterprise Border Gateway (EBG) Autoconfiguration
  contents:
  - "4.3.  Enterprise Border Gateway (EBG) Autoconfiguration\n   EBGs are EBRs that\
    \ connect child enterprises to provider networks via\n   provider-edge interfaces\
    \ and/or via VET interfaces configured over\n   parent enterprises.  EBGs autoconfigure\
    \ their provider-edge\n   interfaces in a manner that is specific to the provider\
    \ connections,\n   and they autoconfigure their VET interfaces that were configured\
    \ over\n   parent enterprises, using the EBR autoconfiguration procedures\n  \
    \ specified in Section 4.2.\n   For each of its VET interfaces configured over\
    \ a child enterprise,\n   the EBG initializes the interface and configures an\
    \ EID the same as\n   for an ordinary EBR (see Section 4.2.1).  It must then arrange\
    \ to add\n   one or more of its RLOCs associated with the child enterprise to\
    \ the\n   PRL, and it must maintain these resource records in accordance with\n\
    \   [RFC5214], Section 9.  In particular, for each VET interface\n   configured\
    \ over a child enterprise, the EBG adds the RLOCs to name-\n   service resource\
    \ records for 'PRLNAME'.\n   EBGs respond to LLMNR queries for 'PRLNAME' on VET\
    \ interfaces\n   configured over child enterprises with a distributed management\n\
    \   structure.\n   EBGs configure a DHCP relay/server on VET interfaces configured\
    \ over\n   child enterprises that require DHCP services.\n   To avoid looping,\
    \ EBGs must not configure a default route on a VET\n   interface configured over\
    \ a child interface.\n"
- title: 4.4.  VET Host Autoconfiguration
  contents:
  - "4.4.  VET Host Autoconfiguration\n   Nodes that cannot be attached via an EBR's\
    \ enterprise-edge interface\n   (e.g., nomadic laptops that connect to a home\
    \ office via a Virtual\n   Private Network (VPN)) can instead be configured for\
    \ operation as a\n   simple host connected to the VET interface.  Such VET hosts\
    \ perform\n   the same VET interface autoconfiguration procedures as specified\
    \ for\n   EBRs in Section 4.2.1, but they configure their VET interfaces as\n\
    \   host interfaces (and not router interfaces).  VET hosts can then send\n  \
    \ packets to the EID addresses of other hosts on the VET interface, or\n   to\
    \ off-enterprise EID destinations via a next-hop EBR.\n   Note that a node may\
    \ be configured as a host on some VET interfaces\n   and as an EBR/EBG on other\
    \ VET interfaces.\n"
- title: 5.  Internetworking Operation
  contents:
  - "5.  Internetworking Operation\n   Following the autoconfiguration procedures\
    \ specified in Section 4,\n   ERs, EBRs, EBGs, and VET hosts engage in normal\
    \ internetworking\n   operations as discussed in the following sections.\n"
- title: 5.1.  Routing Protocol Participation
  contents:
  - "5.1.  Routing Protocol Participation\n   Following autoconfiguration, ERs engage\
    \ in any RLOC-based IP routing\n   protocols and forward IP packets with RLOC\
    \ addresses.  EBRs can\n   additionally engage in any EID-based IP routing protocols\
    \ and forward\n   IP packets with EID addresses.  Note that the EID-based IP routing\n\
    \   domains are separate and distinct from any RLOC-based IP routing\n   domains.\n"
- title: 5.2.  RLOC-Based Communications
  contents:
  - "5.2.  RLOC-Based Communications\n   When permitted by policy and supported by\
    \ routing, end systems can\n   avoid VET interface encapsulation through communications\
    \ that\n   directly invoke the outer IP protocol using RLOC addresses instead\
    \ of\n   EID addresses.  End systems can use source address selection rules to\n\
    \   determine whether to use EID or RLOC addresses based on, e.g., name-\n   service\
    \ records.\n"
- title: 5.3.  EID-Based Communications
  contents:
  - "5.3.  EID-Based Communications\n   In many enterprise scenarios, the use of EID-based\
    \ communications\n   (i.e., instead of RLOC-based communications) may be necessary\
    \ and/or\n   beneficial to support address scaling, NAT avoidance, security domain\n\
    \   separation, site multihoming, traffic engineering, etc.\n   The remainder\
    \ of this section discusses internetworking operation for\n   EID-based communications\
    \ using the VET interface abstraction.\n"
- title: 5.4.  IPv6 Router Discovery and Prefix Registration
  contents:
  - "5.4.  IPv6 Router Discovery and Prefix Registration\n   The following sections\
    \ discuss router and prefix discovery\n   considerations for the case of IPv6\
    \ as the inner IP protocol.\n"
- title: 5.4.1.  IPv6 Router and Prefix Discovery
  contents:
  - "5.4.1.  IPv6 Router and Prefix Discovery\n   EBGs follow the router and prefix\
    \ discovery procedures specified in\n   [RFC5214], Section 8.2.  They send solicited\
    \ RAs over VET interfaces\n   for which they are configured as gateways with default\
    \ router\n   lifetimes, with PIOs that contain PA prefixes for SLAAC, and with\
    \ any\n   other required options/parameters.  The RAs can also include PIOs\n\
    \   with the 'L' bit set to 0 and with a prefix such as '2001: DB8::/48'\n   as\
    \ a hint of an aggregated prefix from which the EBG is willing to\n   delegate\
    \ longer PA prefixes.  When PIOs that contain PA prefixes for\n   SLAAC are included,\
    \ the 'M' flag in the RA should also be set to 0.\n   VET nodes follow the router\
    \ and prefix discovery procedures specified\n   in [RFC5214], Section 8.3.  They\
    \ discover EBGs within the enterprise\n   as specified in Section 4.2.1.2, then\
    \ perform RS/RA exchanges with\n   the EBGs to establish and maintain default\
    \ routes.  In particular,\n   the VET node sends unicast RS messages to EBGs over\
    \ its VET\n   interface(s) to receive RAs.  Depending on the enterprise network\n\
    \   trust basis, VET nodes may be required to use SEND to secure the\n   RS/RA\
    \ exchanges.\n   When the VET node receives an RA, it authenticates the message,\
    \ then\n   configures a default route based on the Router Lifetime.  If the RA\n\
    \   contains Prefix Information Options (PIOs) with the 'A' and 'L' bits\n   set\
    \ to 1, the VET node also autoconfigures IPv6 addresses from the\n   advertised\
    \ prefixes using SLAAC and assigns them to the VET\n   interface.  Thereafter,\
    \ the VET node accepts packets that are\n   forwarded by EBGs for which it has\
    \ current default routing\n   information (i.e., ingress filtering is based on\
    \ the default router\n   trust relationship rather than a prefix-specific ingress\
    \ filter\n   entry).\n   In enterprises in which DHCPv6 is preferred, DHCPv6 exchanges\
    \ between\n   EBRs and EBGs may be sufficient to convey default router and prefix\n\
    \   information.  In that case, RS/RA exchanges may not be necessary.\n"
- title: 5.4.2.  IPv6 PA Prefix Registration
  contents:
  - "5.4.2.  IPv6 PA Prefix Registration\n   After an EBR discovers default routes,\
    \ it can use DHCP prefix\n   delegation to obtain PA prefixes via an EBG as specified\
    \ in Section\n   4.2.2.  The DHCP server ensures that the delegations are unique\
    \ and\n   that the EBG's router function will forward IP packets over the VET\n\
    \   interface to the correct EBR.  In particular, the EBG must register\n   and\
    \ track the PA prefixes that are delegated to each EBR.\n   The PA prefix registrations\
    \ remain active in the EBGs as long as the\n   EBR continues to issue DHCP renewals\
    \ over the VET interface before\n   lease lifetimes expire.  The lease lifetime\
    \ also keeps the delegation\n   state active even if communications between the\
    \ EBR and DHCP server\n   are disrupted for a period of time (e.g., due to an\
    \ enterprise\n   network partition) before being reestablished (e.g., due to an\n\
    \   enterprise network merge).\n"
- title: 5.4.3.  IPv6 PI Prefix Registration
  contents:
  - "5.4.3.  IPv6 PI Prefix Registration\n   After an EBR discovers default routes,\
    \ it must register its PI\n   prefixes by sending RAs to a set of one or more\
    \ EBGs with Route\n   Information Options (RIOs) [RFC4191] that contain the EBR's\
    \ PI\n   prefixes.  Each RA must include the RLOC of an EBG as the outer IP\n\
    \   destination address and a link-local address assigned to the VET\n   interface\
    \ as the inner IP destination address.  For enterprises that\n   use SEND, the\
    \ RAs also include a CGA link-local inner source address,\n   SEND credentials,\
    \ plus any certificates needed to prove ownership of\n   the PI prefixes.  The\
    \ EBR additionally tracks the set of EBGs to\n   which it sends RAs so that it\
    \ can send subsequent RAs to the same\n   set.\n   When the EBG receives the RA,\
    \ it first authenticates the message; if\n   the authentication fails, the EBG\
    \ discards the RA.  Otherwise, the\n   EBG installs the PI prefixes with their\
    \ respective lifetimes in its\n   Forwarding Information Base (FIB) and configures\
    \ them for both\n   ingress filtering [RFC3704] and forwarding purposes.  In particular,\n\
    \   the EBG configures the FIB entries as ingress filter rules to accept\n   packets\
    \ received on the VET interface that have a source address\n   taken from the\
    \ PI prefixes.  It also configures the FIB entries to\n   forward packets received\
    \ on other interfaces with a destination\n   address taken from the PI prefixes\
    \ to the EBR that registered the\n   prefixes on the VET interface.\n   The EBG\
    \ then publishes the PI prefixes in a distributed database\n   (e.g., in a private\
    \ instance of a routing protocol in which only EBGs\n   participate, via an automated\
    \ name-service update mechanism\n   [RFC3007], etc.).  For enterprises that are\
    \ managed under a\n   centralized administrative authority, the EBG also publishes\
    \ the PI\n   prefixes in the enterprise-local name-service (e.g., the enterprise-\n\
    \   local DNS [RFC1035]).\n   In particular, the EBG publishes each /56 prefix\
    \ taken from the PI\n   prefixes as a separate Fully Qualified Domain Name (FQDN)\
    \ that\n   consists of a sequence of 14 nibbles in reverse order (i.e., the same\n\
    \   as in [RFC3596], Section 2.5) followed by the string 'ip6' followed\n   by\
    \ the string 'PRLNAME'.  For example, when 'PRLNAME' is\n   \"isatap.example.com\"\
    , the EBG publishes the prefix '2001:DB8::/56'\n   as:\n   '0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.isatap.example.com'.\n\
    \   The EBG includes the outer RLOC source address of the RA (e.g., in a\n   DNS\
    \ A resource record) in each prefix publication.  For enterprises\n   that use\
    \ SEND, the EBG also includes the inner IPv6 CGA source\n   address (e.g., in\
    \ a DNS AAAA record) in each prefix publication.  If\n   the prefix was already\
    \ installed in the distributed database, the EBG\n   instead adds the outer RLOC\
    \ source address (e.g., in an additional\n   DNS A record) to the preexisting\
    \ publication to support PI prefixes\n   that are multihomed.  For enterprises\
    \ that use SEND, this latter\n   provision requires all EBRs of a multihomed site\
    \ that advertise the\n   same PI prefixes in RAs to use the same CGA and the same\
    \ SEND\n   credentials.\n   After the EBG authenticates the RA and publishes the\
    \ PI prefixes, it\n   next acts as a Neighbor Discovery proxy (NDProxy) [RFC4389]\
    \ on the\n   VET interfaces configured over any of its parent enterprises, and\
    \ it\n   relays a proxied RA to the EBGs on those interfaces.  (For\n   enterprises\
    \ that use SEND, the EBG additionally acts as a SEcure\n   Neighbor Discovery\
    \ Proxy (SENDProxy) [SEND-PROXY].)  EBGs in parent\n   enterprises that receive\
    \ the proxied RAs in turn act as\n   NDProxys/SENDProxys to relay the RAs to EBGs\
    \ on their parent\n   enterprises, etc.  The RA proxying and PI prefix publication\
    \ recurses\n   in this fashion and ends when an EBR attached to an interdomain\n\
    \   routing core is reached.\n   After the initial PI prefix registration, the\
    \ EBR that owns the\n   prefix(es) must periodically send additional RAs to its\
    \ set of EBGs\n   to refresh prefix lifetimes.  Each such EBG tracks the set of\
    \ EBGs in\n   parent enterprises to which it relays the proxied RAs, and should\n\
    \   relay subsequent RAs to the same set.\n   This procedure has a direct analogy\
    \ in the Teredo method of\n   maintaining state in network middleboxes through\
    \ the periodic\n   transmission of \"bubbles\" [RFC4380].\n"
- title: 5.4.4.  IPv6 Next-Hop EBR Discovery
  contents:
  - "5.4.4.  IPv6 Next-Hop EBR Discovery\n   VET nodes discover destination-specific\
    \ next-hop EBRs within the\n   enterprise by querying the name service for the\
    \ /56 IPv6 PI prefix\n   taken from a packet's destination address, by forwarding\
    \ packets via\n   a default route to an EBG, or by some other inner-IP-to-outer-IP\n\
    \   address mapping mechanism.  For example, for the IPv6 destination\n   address\
    \ '2001:DB8:1:2::1' and 'PRLNAME' \"isatap.example.com\" the VET\n   node can\
    \ lookup the domain name:\n   '0.0.1.0.0.0.8.b.d.0.1.0.0.2.ip6.isatap.example.com'.\n\
    \   If the name-service lookup succeeds, it will return RLOC addresses\n   (e.g.,\
    \ in DNS A records) that correspond to next-hop EBRs to which\n   the VET node\
    \ can forward packets.  (In enterprises that use SEND, it\n   will also return\
    \ an IPv6 CGA address, e.g., in a DNS AAAA record.)\n   Name-service lookups in\
    \ enterprises with a centralized management\n   structure use an infrastructure-based\
    \ service, e.g., an enterprise-\n   local DNS.  Name-service lookups in enterprises\
    \ with a distributed\n   management structure and/or that lack an infrastructure-based\
    \ name-\n   service instead use LLMNR over the VET interface.  When LLMNR is\n\
    \   used, the EBR that performs the lookup sends an LLMNR query (with the\n  \
    \ /56 prefix taken from the IP destination address encoded in dotted-\n   nibble\
    \ format as shown above) and accepts the union of all replies it\n   receives\
    \ from other EBRs on the VET interface.  When an EBR receives\n   an LLMNR query,\
    \ it responds to the query IFF it aggregates an IP\n   prefix that covers the\
    \ prefix in the query.\n   Alternatively, in enterprises with a stable and highly-available\
    \ set\n   of EBGs, the VET node can simply forward an initial packet via a\n \
    \  default route to an EBG.  The EBG will forward the packet to a next-\n   hop\
    \ EBR on the VET interface and return an ICMPv6 Redirect [RFC4861]\n   (using\
    \ SEND, if necessary).  If the packet's source address is on-\n   link on the\
    \ VET interface, the EBG returns an ordinary \"router-to-\n   host\" redirect\
    \ with the source address of the packet as its\n   destination.  If the packet's\
    \ source address is not on-link, the EBG\n   instead returns a \"router-to-router\"\
    \ redirect with the link-local\n   ISATAP address of the previous-hop EBR as its\
    \ destination.  When IPv4\n   is used as the outer IP protocol, the EBG also includes\
    \ in the\n   redirect one or more IPv6 Link-Layer Address Options (LLAOs) that\n\
    \   contain the IPv4 RLOCs of potential next-hop EBRs arranged in order\n   from\
    \ lowest to highest priority (i.e., the first LLAO contains the\n   lowest priority\
    \ RLOC and the final LLAO option contains the highest\n   priority).  These LLAOs\
    \ are formatted using a modified version of the\n   form specified in Section\
    \ 5 of [RFC2529], as shown in Figure 2 (the\n   LLAO format for IPv6 as the outer\
    \ IP protocol is out of scope).\n   +-------+-------+-------+-------+-------+-------+-------+-------+\n\
    \   | Type  |Length |      TTL      |        IPv4 Address           |\n   +-------+-------+-------+-------+-------+-------+-------+-------+\n\
    \              Figure 2: VET Link-Layer Address Option Format\n   For each such\
    \ IPv6/IPv4 LLAO, the Type is set to 2 (for Target Link-\n   Layer Address Option),\
    \ Length is set to 1, and IPv4 Address is set to\n   the IPv4 RLOC of the next-hop\
    \ EBR.  TTL is set to the time in seconds\n   that the recipient may cache the\
    \ RLOC, where the value 65535\n   represents infinity and the value 0 suspends\
    \ forwarding through this\n   RLOC.\n   When a VET host receives an ordinary \"\
    router-to-host\" redirect, it\n   processes the redirect exactly as specified\
    \ in [RFC4861], Section 8.\n   When an EBR receives a \"router-to-router\" redirect,\
    \ it discovers the\n   RLOC addresses of potential next-hop EBRs by examining\
    \ the LLAOs\n   included in the redirect.  The EBR then installs a FIB entry that\n\
    \   contains the /56 prefix of the destination address encoded in the\n   redirect\
    \ and the list of RLOCs of potential next-hop EBRs.  The EBR\n   then enables\
    \ the FIB entry for forwarding to next-hop EBRs but DOES\n   NOT enable it for\
    \ ingress filtering acceptance of packets from next-\n   hop EBRs (i.e., the forwarding\
    \ determination is unidirectional).\n   In enterprises in which spoofing is possible,\
    \ after discovering\n   potential next-hop EBRs (either through name-service lookup\
    \ or ICMP\n   redirect) the EBR must send authenticating credentials before\n\
    \   forwarding packets via the next-hops.  To do so, the EBR must send\n   RAs\
    \ over the VET interface (using SEND, if necessary) to one or more\n   of the\
    \ potential next-hop EBRs with an RLOC as the outer IP\n   destination address.\
    \  The RAs must include a Route Information Option\n   (RIO) [RFC4191] that contains\
    \ the /56 PI prefix of the original\n   packet's source address.  After sending\
    \ the RAs, the EBR can either\n   enable the new FIB entry for forwarding immediately\
    \ or delay until it\n   receives an explicit acknowledgement that a next-hop EBR\
    \ received the\n   RA (e.g., using the SEAL explicit acknowledgement mechanism\
    \ -- see\n   Section 5.7).\n   When a next-hop EBR receives the RA, it authenticates\
    \ the message\n   then it performs a name-service lookup on the prefix in the\
    \ RIO if\n   further authenticating evidence is required.  If the name service\n\
    \   returns resource records that are consistent with the inner and outer\n  \
    \ IP addresses of the RA, the next-hop EBR then installs the prefix in\n   the\
    \ RIO in its FIB and enables the FIB entry for ingress filtering\n   but DOES\
    \ NOT enable it for forwarding purposes.  After an EBR sends\n   initial RAs following\
    \ a redirect, it should send periodic RAs to\n   refresh the next-hop EBR's ingress\
    \ filter prefix lifetimes as long as\n   traffic is flowing.\n   EBRs retain the\
    \ FIB entries created as a result of an ICMP redirect\n   until all RLOC TTLs\
    \ expire, or until no hints of forward progress\n   through any of the associated\
    \ RLOCs are received.  In this way, RLOC\n   liveness detection exactly parallels\
    \ IPv6 Neighbor Unreachability\n   Detection ([RFC4861], Section 3).\n"
- title: 5.5.  IPv4 Router Discovery and Prefix Registration
  contents:
  - "5.5.  IPv4 Router Discovery and Prefix Registration\n   When IPv4 is used as\
    \ the inner IP protocol, router discovery and\n   prefix registration exactly\
    \ parallel the mechanisms specified for\n   IPv6 in Section 5.4.  To support this,\
    \ modifications to the ICMPv4\n   Router Advertisement [RFC1256] function to include\
    \ SEND constructs\n   and modifications to the ICMPv4 Redirect [RFC0792] function\
    \ to\n   support router-to-router redirects will be specified in a future\n  \
    \ document.  Additionally, publications for IPv4 prefixes will be in\n   dotted-nibble\
    \ format in the 'ip4.isatap.example.com' domain.  For\n   example, the IPv4 prefix\
    \ 192.0.2/24 would be represented as:\n   '2.0.0.0.0.c.ip4.isatap.example.com'\n"
- title: 5.6.  VET Encapsulation
  contents:
  - "5.6.  VET Encapsulation\n   VET nodes forward packets by consulting the FIB to\
    \ determine a\n   specific EBR/EBG as the next-hop router on a VET interface.\
    \  When\n   multiple next-hop routers are available, VET nodes can use default\n\
    \   router preferences, routing protocol information, traffic engineering\n  \
    \ configurations, etc. to select the best exit router.  When there is\n   no FIB\
    \ information other than \"default\" available, VET nodes can\n   discover the\
    \ next-hop EBR/EBG through the mechanisms specified in\n   Section 5.4 and Section\
    \ 5.5.\n   VET interfaces encapsulate inner IP packets in any mid-layer headers\n\
    \   followed by an outer IP header according to the specific\n   encapsulation\
    \ type (e.g., [RFC4301], [RFC5214], [RFC5320], etc.);\n   they next submit the\
    \ encapsulated packet to the outer IP forwarding\n   engine for transmission on\
    \ an underlying interface.\n   For forwarding to next-hop addresses over VET interfaces\
    \ that use\n   IPv6-in-IPv4 encapsulation, VET nodes determine the outer destination\n\
    \   address (i.e., the IPv4 RLOC of the next-hop EBR) through static\n   extraction\
    \ of the IPv4 address embedded in the next-hop ISATAP\n   address.  For other\
    \ IP-in-IP encapsulations, determination of the\n   outer destination address\
    \ is through administrative configuration or\n   through an unspecified alternate\
    \ method.  When there are multiple\n   candidate destination RLOCs available,\
    \ the VET node should only\n   select an RLOC for which there is current forwarding\
    \ information in\n   the outer IP protocol FIB.\n"
- title: 5.7.  SEAL Encapsulation
  contents:
  - "5.7.  SEAL Encapsulation\n   VET nodes should use SEAL encapsulation [RFC5320]\
    \ over VET interfaces\n   to accommodate path MTU diversity, to defeat source\
    \ address spoofing,\n   and to monitor next-hop EBR reachability.  SEAL encapsulation\n\
    \   maintains a unidirectional and monotonically incrementing per-packet\n   identification\
    \ value known as the 'SEAL_ID'.  When a VET node that\n   uses SEAL encapsulation\
    \ sends a SEND-protected Router Advertisement\n   (RA) or Router Solicitation\
    \ (RS) message to another VET node, both\n   nodes cache the new SEAL_ID as per-tunnel\
    \ state used for maintaining\n   a window of unacknowledged SEAL_IDs.\n   In terms\
    \ of security, when a VET node receives an ICMP message, it\n   can confirm that\
    \ the packet-in-error within the ICMP message\n   corresponds to one of its recently\
    \ sent packets by examining the\n   SEAL_ID along with source and destination\
    \ addresses, etc.\n   Additionally, a next-hop EBR can track the SEAL_ID in packets\n\
    \   received from EBRs for which there is an ingress filter entry and\n   discard\
    \ packets that have SEAL_ID values outside of the current\n   window.\n   In terms\
    \ of next-hop reachability, an EBR can set the SEAL\n   \"Acknowledgement Requested\"\
    \ bit in messages to receive confirmation\n   that a next-hop EBR is reachable.\
    \  Setting the \"Acknowledgement\n   Requested\" bit is also used as the method\
    \ for maintaining the window\n   of outstanding SEAL_IDs.\n"
- title: 5.8.  Generating Errors
  contents:
  - "5.8.  Generating Errors\n   When an EBR receives an IPv6 packet over a VET interface\
    \ and there is\n   no matching ingress filter entry, it drops the packet and returns\
    \ an\n   ICMPv6 [RFC4443] \"Destination Unreachable; Source address failed\n \
    \  ingress/egress policy\" message to the previous-hop EBR subject to\n   rate\
    \ limiting.\n   When an EBR receives an IPv6 packet over a VET interface, and\
    \ there\n   is no longest-prefix-match FIB entry for the destination, it returns\n\
    \   an ICMPv6 \"Destination Unreachable; No route to destination\" message\n \
    \  to the previous hop EBR subject to rate limiting.\n   When an EBR receives\
    \ an IPv6 packet over a VET interface and the\n   longest-prefix-match FIB entry\
    \ for the destination is via a next-hop\n   configured over the same VET interface\
    \ the packet arrived on, the EBR\n   forwards the packet, then (if the FIB prefix\
    \ is longer than ::/0)\n   sends a router-to-router ICMPv6 Redirect message (using\
    \ SEND, if\n   necessary) to the previous-hop EBR as specified in Section 5.4.4.\n\
    \   Generation of other ICMP messages [RFC0792] [RFC4443] is the same as\n   for\
    \ any IP interface.\n"
- title: 5.9.  Processing Errors
  contents:
  - "5.9.  Processing Errors\n   When an EBR receives an ICMPv6 \"Destination Unreachable;\
    \ Source\n   address failed ingress/egress policy\" message from a next-hop EBR,\n\
    \   and there is a longest-prefix-match FIB entry for the original\n   packet's\
    \ destination that is more specific than ::/0, the EBR\n   discards the message\
    \ and marks the FIB entry for the destination as\n   \"forwarding suspended\"\
    \ for the RLOC taken from the source address of\n   the ICMPv6 message.  The EBR\
    \ should then allow subsequent packets to\n   flow through different RLOCs associated\
    \ with the FIB entry until it\n   forwards a new RA to the suspended RLOC.  If\
    \ the EBR receives\n   excessive ICMPv6 ingress/egress policy errors through multiple\
    \ RLOCs\n   associated with the same FIB entry, it should delete the FIB entry\n\
    \   and allow subsequent packets to flow through an EBG if supported in\n   the\
    \ specific enterprise scenario.\n   When a VET node receives an ICMPv6 \"Destination\
    \ Unreachable; No route\n   to destination\" message from a next-hop EBR, it forwards\
    \ the ICMPv6\n   message to the source of the original packet as normal.  If the\
    \ EBR\n   has longest-prefix-match FIB entry for the original packet's\n   destination\
    \ that is more specific than ::/0, the EBR also deletes the\n   FIB entry.\n \
    \  When an EBR receives an authentic ICMPv6 Redirect, it processes the\n   packet\
    \ as specified in Section 5.4.4.\n   When an EBG receives new mapping information\
    \ for a specific\n   destination prefix, it can propagate the update to other\
    \ EBRs/EBGs by\n   sending an ICMPv6 redirect message to the 'All Routers' link-local\n\
    \   multicast address with an LLAO with the TTL for the unreachable LLAO\n   set\
    \ to zero, and with a NULL packet in error.\n   Additionally, a VET node may receive\
    \ ICMP \"Destination Unreachable;\n   net / host unreachable\" messages from an\
    \ ER indicating that the path\n   to a VET neighbor may be failing.  The VET node\
    \ should first check,\n   e.g., the SEAL_ID, IPsec sequence number, source address\
    \ of the\n   original packet if available, etc. to obtain reasonable assurance\n\
    \   that the ICMP message is authentic, then should mark the longest-\n   prefix-match\
    \ FIB entry for the destination as \"forwarding suspended\"\n   for the RLOC destination\
    \ address of the ICMP packet-in-error.  If the\n   VET node receives excessive\
    \ ICMP unreachable errors through multiple\n   RLOCs associated with the same\
    \ FIB entry, it should delete the FIB\n   entry and allow subsequent packets to\
    \ flow through a different route.\n"
- title: 5.10.  Mobility and Multihoming Considerations
  contents:
  - "5.10.  Mobility and Multihoming Considerations\n   EBRs that travel between distinct\
    \ enterprise networks must either\n   abandon their PA prefixes that are relative\
    \ to the \"old\" enterprise\n   and obtain new ones relative to the \"new\" enterprise\
    \ or somehow\n   coordinate with a \"home\" enterprise to retain ownership of\
    \ the\n   prefixes.  In the first instance, the EBR would be required to\n   coordinate\
    \ a network renumbering event using the new PA prefixes\n   [RFC4192].  In the\
    \ second instance, an ancillary mobility management\n   mechanism must be used.\n\
    \   EBRs can retain their PI prefixes as they travel between distinct\n   enterprise\
    \ networks as long as they register the prefixes with new\n   EBGs and (preferably)\
    \ withdraw the prefixes from old EBGs prior to\n   departure.  Prefix registration\
    \ with new EBGs is coordinated exactly\n   as specified in Section 5.4.3; prefix\
    \ withdrawal from old EBGs is\n   simply through re-announcing the PI prefixes\
    \ with zero lifetimes.\n   Since EBRs can move about independently of one another,\
    \ stale FIB\n   entry state may be left in VET nodes when a neighboring EBR departs.\n\
    \   Additionally, EBRs can lose state for various reasons, e.g., power\n   failure,\
    \ machine reboot, etc.  For this reason, EBRs are advised to\n   set relatively\
    \ short PI prefix lifetimes in RIO options, and to send\n   additional RAs to\
    \ refresh lifetimes before they expire.  (EBRs should\n   place conservative limits\
    \ on the RAs they send to reduce congestion,\n   however.)\n   EBRs may register\
    \ their PI prefixes with multiple EBGs for\n   multihoming purposes.  EBRs should\
    \ only forward packets via EBGs with\n   which it has registered its PI prefixes,\
    \ since other EBGs may drop\n   the packets and return ICMPv6 \"Destination Unreachable;\
    \ Source\n   address failed ingress/egress policy\" messages.\n   EBRs can also\
    \ act as delegating routers to sub-delegate portions of\n   their PI prefixes\
    \ to requesting routers on their enterprise-edge\n   interfaces and on VET interfaces\
    \ for which they are configured as\n   EBGs.  In this sense, the sub-delegations\
    \ of an EBR's PI prefixes\n   become the PA prefixes for downstream-dependent\
    \ nodes.  Downstream-\n   dependent nodes that travel with a mobile provider EBR\
    \ can continue\n   to use addresses configured from PA prefixes; downstream-dependent\n\
    \   nodes that move away from their provider EBR must perform address/\n   prefix\
    \ renumbering when they associate with a new provider.\n   The EBGs of a multihomed\
    \ enterprise should participate in a private\n   inner IP routing protocol instance\
    \ between themselves (possibly over\n   an alternate topology) to accommodate\
    \ enterprise partitions/merges as\n   well as intra-enterprise mobility events.\
    \  These peer EBGs should\n   accept packets from one another without respect\
    \ to the destination\n   (i.e., ingress filtering is based on the peering relationship\
    \ rather\n   than a prefix-specific ingress filter entry).\n"
- title: 5.11.  Multicast
  contents:
  - "5.11.  Multicast\n   In multicast-capable deployments, ERs provide an enterprise-wide\n\
    \   multicasting service (e.g., Simplified Multicast Forwarding (SMF)\n   [MANET-SMF],\
    \ Protocol Independent Multicast (PIM) routing, Distance\n   Vector Multicast\
    \ Routing Protocol (DVMRP) routing, etc.) over their\n   enterprise-interior interfaces\
    \ such that outer IP multicast messages\n   of site-scope or greater scope will\
    \ be propagated across the\n   enterprise.  For such deployments, VET nodes can\
    \ also provide an\n   inner IP multicast/broadcast capability over their VET interfaces\n\
    \   through mapping of the inner IP multicast address space to the outer\n   IP\
    \ multicast address space.  In that case, operation of link-scoped\n   (or greater\
    \ scoped) inner IP multicasting services (e.g., a link-\n   scoped neighbor discovery\
    \ protocol) over the VET interface is\n   available, but link-scoped services\
    \ should be used sparingly to\n   minimize enterprise-wide flooding.\n   VET nodes\
    \ encapsulate inner IP multicast messages sent over the VET\n   interface in any\
    \ mid-layer headers (e.g., IPsec, SEAL, etc.) plus an\n   outer IP header with\
    \ a site-scoped outer IP multicast address as the\n   destination.  For the case\
    \ of IPv6 and IPv4 as the inner/outer\n   protocols (respectively), [RFC2529]\
    \ provides mappings from the IPv6\n   multicast address space to a site-scoped\
    \ IPv4 multicast address space\n   (for other IP-in-IP encapsulations, mappings\
    \ are established through\n   administrative configuration or through an unspecified\
    \ alternate\n   static mapping).\n   Multicast mapping for inner IP multicast\
    \ groups over outer IP\n   multicast groups can be accommodated, e.g., through\
    \ VET interface\n   snooping of inner multicast group membership and routing protocol\n\
    \   control messages.  To support inner-to-outer IP multicast mapping,\n   the\
    \ VET interface acts as a virtual outer IP multicast host connected\n   to its\
    \ underlying interfaces.  When the VET interface detects that an\n   inner IP\
    \ multicast group joins or leaves, it forwards corresponding\n   outer IP multicast\
    \ group membership reports on an underlying\n   interface over which the VET interface\
    \ is configured.  If the VET\n   node is configured as an outer IP multicast router\
    \ on the underlying\n   interfaces, the VET interface forwards locally looped-back\
    \ group\n   membership reports to the outer IP multicast routing process.  If\
    \ the\n   VET node is configured as a simple outer IP multicast host, the VET\n\
    \   interface instead forwards actual group membership reports (e.g.,\n   IGMP\
    \ messages) directly over an underlying interface.\n   Since inner IP multicast\
    \ groups are mapped to site-scoped outer IP\n   multicast groups, the VET node\
    \ must ensure that the site-scope outer\n   IP multicast messages received on\
    \ the underlying interfaces for one\n   VET interface do not \"leak out\" to the\
    \ underlying interfaces of\n   another VET interface.  This is accommodated through\
    \ normal site-\n   scoped outer IP multicast group filtering at enterprise boundaries.\n"
- title: 5.12.  Service Discovery
  contents:
  - "5.12.  Service Discovery\n   VET nodes can perform enterprise-wide service discovery\
    \ using a\n   suitable name-to-address resolution service.  Examples of flooding-\n\
    \   based services include the use of LLMNR [RFC4795] over the VET\n   interface\
    \ or multicast DNS [mDNS] over an underlying interface.  More\n   scalable and\
    \ efficient service discovery mechanisms are for further\n   study.\n"
- title: 5.13.  Enterprise Partitioning
  contents:
  - "5.13.  Enterprise Partitioning\n   EBGs can physically partition an enterprise\
    \ by configuring multiple\n   VET interfaces over multiple distinct sets of underlying\
    \ interfaces.\n   In that case, each partition (i.e., each VET interface) must\n\
    \   configure its own distinct 'PRLNAME' (e.g.,\n   'isatap.zone1.example.com',\
    \ 'isatap.zone2.example.com', etc.).\n   EBGs can logically partition an enterprise\
    \ using a single VET\n   interface by sending RAs with PIOs containing different\
    \ IPv6 PA\n   prefixes to group nodes into different logical partitions.  EBGs\
    \ can\n   identify partitions, e.g., by examining RLOC prefixes, observing the\n\
    \   interfaces over which RSs are received, etc.  In that case, a single\n   'PRLNAME'\
    \ can cover all partitions.\n"
- title: 5.14.  EBG Prefix State Recovery
  contents:
  - "5.14.  EBG Prefix State Recovery\n   EBGs must retain explicit state that tracks\
    \ the inner IP prefixes\n   owned by EBRs within the enterprise, e.g., so that\
    \ packets are\n   delivered to the correct EBRs and not incorrectly \"leaked out\"\
    \ of the\n   enterprise via a default route.  For PA prefixes, the state is\n\
    \   maintained via an EBR's DHCP prefix delegation lease renewals, while\n   for\
    \ PI prefixes the state is maintained via an EBR's periodic prefix\n   registration\
    \ RAs.\n   When an EBG loses some or all of its state (e.g., due to a power\n\
    \   failure), it must recover the state so that packets can be forwarded\n   over\
    \ correct routes.  If the EBG aggregates PA prefixes from which\n   the IP prefixes\
    \ of all EBRs in the enterprise are sub-delegated, then\n   the EBG can recover\
    \ state through DHCP prefix delegation lease\n   renewals, through bulk lease\
    \ queries, or through on-demand name-\n   service lookups based due to IP packet\
    \ forwarding.  If the EBG serves\n   as an anchor for PI prefixes, however, care\
    \ must be taken to avoid\n   looping while state is recovered through prefix registration\
    \ RAs from\n   EBRs.  In that case, when the EBG that is recovering state forwards\n\
    \   an IP packet for which it has no explicit route other than ::/0, it\n   must\
    \ first perform an on-demand name-service lookup to refresh state.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Security considerations for MANETs are found\
    \ in [RFC2501].\n   Security considerations with tunneling that apply also to\
    \ VET are\n   found in [RFC2529] [RFC5214].  In particular, VET nodes must verify\n\
    \   that the outer IP source address of a packet received on a VET\n   interface\
    \ is correct for the inner IP source address using the\n   procedures specified\
    \ in Section 7.3 of [RFC5214] in conjunction with\n   the ingress filtering mechanisms\
    \ specified in this document.\n   SEND [RFC3971], IPsec [RFC4301], and SEAL [RFC5320]\
    \ provide\n   additional securing mitigations to detect source address spoofing\
    \ and\n   bogus RA messages sent by rogue routers.\n   Rogue routers can send\
    \ bogus RA messages with spoofed RLOC source\n   addresses that can consume network\
    \ resources and cause EBGs to\n   perform extra work.  Nonetheless, EBGs should\
    \ not \"blacklist\" such\n   RLOCs, as that may result in a denial of service\
    \ to the RLOCs'\n   legitimate owners.\n"
- title: 7.  Related Work
  contents:
  - "7.  Related Work\n   Brian Carpenter and Cyndi Jung introduced the concept of\
    \ intra-site\n   automatic tunneling in [RFC2529]; this concept was later called:\n\
    \   \"Virtual Ethernet\" and investigated by Quang Nguyen under the\n   guidance\
    \ of Dr. Lixia Zhang.  Subsequent works by these authors and\n   their colleagues\
    \ have motivated a number of foundational concepts on\n   which this work is based.\n\
    \   Telcordia has proposed DHCP-related solutions for MANETs through the\n   CECOM\
    \ MOSAIC program.\n   The Naval Research Lab (NRL) Information Technology Division\
    \ uses\n   DHCP in their MANET research testbeds.\n   Security concerns pertaining\
    \ to tunneling mechanisms are discussed in\n   [TUNNEL-SEC].\n   Default router\
    \ and prefix information options for DHCPv6 are\n   discussed in [DEF-ROUTER].\n\
    \   An automated IPv4 prefix delegation mechanism is proposed in\n   [SUBNET].\n\
    \   RLOC prefix delegation for enterprise-edge interfaces is discussed in\n  \
    \ [MANET-REC].\n   MANET link types are discussed in [LINKTYPE].\n   Various proposals\
    \ within the IETF have suggested similar mechanisms.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The following individuals gave direct and/or indirect\
    \ input that was\n   essential to the work: Jari Arkko, Teco Boot, Emmanuel Bacelli,\
    \ James\n   Bound, Scott Brim, Brian Carpenter, Thomas Clausen, Claudiu Danilov,\n\
    \   Ralph Droms, Dino Farinacci, Vince Fuller, Thomas Goff, Joel Halpern,\n  \
    \ Bob Hinden, Sapumal Jayatissa, Dan Jen, Darrel Lewis, Tony Li, Joe\n   Macker,\
    \ David Meyer, Thomas Narten, Pekka Nikander, Dave Oran,\n   Alexandru Petrescu,\
    \ John Spence, Jinmei Tatuya, Dave Thaler, Ole\n   Troan, Michaela Vanderveen,\
    \ Lixia Zhang, and others in the IETF\n   AUTOCONF and MANET working groups. \
    \ Many others have provided\n   guidance over the course of many years.\n"
- title: 9.  Contributors
  contents:
  - "9.  Contributors\n   The following individuals have contributed to this document:\n\
    \      Eric Fleischman (eric.fleischman@boeing.com)\n      Thomas Henderson (thomas.r.henderson@boeing.com)\n\
    \      Steven Russert (steven.w.russert@boeing.com)\n      Seung Yi (seung.yi@boeing.com)\n\
    \   Ian Chakeres (ian.chakeres@gmail.com) contributed to earlier versions\n  \
    \ of the document.\n   Jim Bound's foundational work on enterprise networks provided\n\
    \   significant guidance for this effort.  We mourn his loss and honor\n   his\
    \ contributions.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC0791]    Postel, J., \"Internet Protocol\"\
    , STD 5, RFC 791,\n                September 1981.\n   [RFC0792]    Postel, J.,\
    \ \"Internet Control Message Protocol\", STD 5,\n                RFC 792, September\
    \ 1981.\n   [RFC0826]    Plummer, D., \"Ethernet Address Resolution Protocol:\
    \ Or\n                Converting Network Protocol Addresses to 48.bit Ethernet\n\
    \                Address for Transmission on Ethernet Hardware\", STD 37,\n  \
    \              RFC 826, November 1982.\n   [RFC1035]    Mockapetris, P., \"Domain\
    \ names - implementation and\n                specification\", STD 13, RFC 1035,\
    \ November 1987.\n   [RFC2131]    Droms, R., \"Dynamic Host Configuration Protocol\"\
    , RFC\n                2131, March 1997.\n   [RFC2460]    Deering, S. and R. Hinden,\
    \ \"Internet Protocol, Version 6\n                (IPv6) Specification\", RFC\
    \ 2460, December 1998.\n   [RFC3007]    Wellington, B., \"Secure Domain Name System\
    \ (DNS) Dynamic\n                Update\", RFC 3007, November 2000.\n   [RFC3315]\
    \    Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n              \
    \  C., and M. Carney, \"Dynamic Host Configuration Protocol\n                for\
    \ IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3596]    Thomson, S., Huitema,\
    \ C., Ksinant, V., and M. Souissi,\n                \"DNS Extensions to Support\
    \ IP Version 6\", RFC 3596,\n                October 2003.\n   [RFC3633]    Troan,\
    \ O. and R. Droms, \"IPv6 Prefix Options for Dynamic\n                Host Configuration\
    \ Protocol (DHCP) version 6\", RFC 3633,\n                December 2003.\n   [RFC3971]\
    \    Arkko, J., Ed., Kempf, J., Zill, B., and P. Nikander,\n                \"\
    SEcure Neighbor Discovery (SEND)\", RFC 3971, March\n                2005.\n \
    \  [RFC3972]    Aura, T., \"Cryptographically Generated Addresses (CGA)\",\n \
    \               RFC 3972, March 2005.\n   [RFC4191]    Draves, R. and D. Thaler,\
    \ \"Default Router Preferences\n                and More-Specific Routes\", RFC\
    \ 4191, November 2005.\n   [RFC4291]    Hinden, R. and S. Deering, \"IP Version\
    \ 6 Addressing\n                Architecture\", RFC 4291, February 2006.\n   [RFC4443]\
    \    Conta, A., Deering, S., and M. Gupta, Ed., \"Internet\n                Control\
    \ Message Protocol (ICMPv6) for the Internet\n                Protocol Version\
    \ 6 (IPv6) Specification\", RFC 4443,\n                March 2006.\n   [RFC4861]\
    \    Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n                \"\
    Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n                September\
    \ 2007.\n   [RFC4862]    Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n\
    \                Address Autoconfiguration\", RFC 4862, September 2007.\n   [RFC5214]\
    \    Templin, F., Gleeson, T., and D. Thaler, \"Intra-Site\n                Automatic\
    \ Tunnel Addressing Protocol (ISATAP)\", RFC\n                5214, March 2008.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [CATENET]    Pouzin, L., \"A Proposal for Interconnecting\
    \ Packet\n                Switching Networks\", May 1974.\n   [mDNS]       Cheshire,\
    \ S. and M. Krochmal, \"Multicast DNS\", Work in\n                Progress, September\
    \ 2009.\n   [MANET-REC]  Clausen, T. and U. Herberg, \"MANET Router Configuration\n\
    \                Recommendations\", Work in Progress, February 2009.\n   [LINKTYPE]\
    \   Clausen, T., \"The MANET Link Type\", Work in Progress,\n                October\
    \ 2008.\n   [DEF-ROUTER] Droms, R. and T. Narten, \"Default Router and Prefix\n\
    \                Advertisement Options for DHCPv6\", Work in Progress,\n     \
    \           October 2009.\n   [SEND-PROXY] Krishnan, S., Laganier, J., and M.\
    \ Bonola, \"Secure Proxy\n                ND Support for SEND\", Work in progress,\
    \ July 2009.\n   [SUBNET]     Johnson, R., Kumarasamy, J., Kinnear, K., and M.\
    \ Stapp,\n                \"Subnet Allocation Option\", Work in Progress, October\n\
    \                2009.\n   [CENTRL-ULA] Hinden, R., Huston, G., and T. Narten,\
    \ \"Centrally\n                Assigned Unique Local IPv6 Unicast Addresses\"\
    , Work in\n                Progress, June 2007.\n   [MANET-SMF]  Macker, J., Ed.\
    \ and SMF Design Team, \"Simplified\n                Multicast Forwarding for\
    \ MANET\", Work in Progress, July\n                2009.\n   [TUNNEL-SEC] Hoagland,\
    \ J., Krishnan, S., and D. Thaler, \"Security\n                Concerns With IP\
    \ Tunneling\", Work in Progress, October\n                2008.\n   [APT]    \
    \    Jen, D., Meisel, M., Massey, D., Wang, L., Zhang, B.,\n                and\
    \ L. Zhang, \"APT: A Practical Transit Mapping\n                Service\", Work\
    \ in Progress, November 2007.\n   [IEN48]      Cerf, V., \"The Catenet Model for\
    \ Internetworking\", IEN\n                48, July 1978.\n   [RASADV]     Microsoft,\
    \ \"Remote Access Server Advertisement (RASADV)\n                Protocol Specification\"\
    , October 2008.\n   [RFC1122]    Braden, R., Ed., \"Requirements for Internet\
    \ Hosts -\n                Communication Layers\", STD 3, RFC 1122, October 1989.\n\
    \   [RFC1256]    Deering, S., Ed., \"ICMP Router Discovery Messages\", RFC\n \
    \               1256, September 1991.\n   [RFC1753]    Chiappa, N., \"IPng Technical\
    \ Requirements Of the Nimrod\n                Routing and Addressing Architecture\"\
    , RFC 1753, December\n                1994.\n   [RFC1918]    Rekhter, Y., Moskowitz,\
    \ B., Karrenberg, D., de Groot,\n                G., and E. Lear, \"Address Allocation\
    \ for Private\n                Internets\", BCP 5, RFC 1918, February 1996.\n\
    \   [RFC1955]    Hinden, R., \"New Scheme for Internet Routing and\n         \
    \       Addressing (ENCAPS) for IPNG\", RFC 1955, June 1996.\n   [RFC2501]   \
    \ Corson, S. and J. Macker, \"Mobile Ad hoc Networking\n                (MANET):\
    \ Routing Protocol Performance Issues and\n                Evaluation Considerations\"\
    , RFC 2501, January 1999.\n   [RFC2529]    Carpenter, B. and C. Jung, \"Transmission\
    \ of IPv6 over\n                IPv4 Domains without Explicit Tunnels\", RFC 2529,\
    \ March\n                1999.\n   [RFC2775]    Carpenter, B., \"Internet Transparency\"\
    , RFC 2775,\n                February 2000.\n   [RFC3704]    Baker, F. and P.\
    \ Savola, \"Ingress Filtering for\n                Multihomed Networks\", BCP\
    \ 84, RFC 3704, March 2004.\n   [RFC3819]    Karn, P., Ed., Bormann, C., Fairhurst,\
    \ G., Grossman, D.,\n                Ludwig, R., Mahdavi, J., Montenegro, G.,\
    \ Touch, J., and\n                L. Wood, \"Advice for Internet Subnetwork Designers\"\
    , BCP\n                89, RFC 3819, July 2004.\n   [RFC3927]    Cheshire, S.,\
    \ Aboba, B., and E. Guttman, \"Dynamic\n                Configuration of IPv4\
    \ Link-Local Addresses\", RFC 3927,\n                May 2005.\n   [RFC4192] \
    \   Baker, F., Lear, E., and R. Droms, \"Procedures for\n                Renumbering\
    \ an IPv6 Network without a Flag Day\", RFC\n                4192, September 2005.\n\
    \   [RFC4193]    Hinden, R. and B. Haberman, \"Unique Local IPv6 Unicast\n   \
    \             Addresses\", RFC 4193, October 2005.\n   [RFC4301]    Kent, S. and\
    \ K. Seo, \"Security Architecture for the\n                Internet Protocol\"\
    , RFC 4301, December 2005.\n   [RFC4380]    Huitema, C., \"Teredo: Tunneling IPv6\
    \ over UDP through\n                Network Address Translations (NATs)\", RFC\
    \ 4380, February\n                2006.\n   [RFC4389]    Thaler, D., Talwar, M.,\
    \ and C. Patel, \"Neighbor\n                Discovery Proxies (ND Proxy)\", RFC\
    \ 4389, April 2006.\n   [RFC4795]    Aboba, B., Thaler, D., and L. Esibov, \"\
    Link-Local\n                Multicast Name Resolution (LLMNR)\", RFC 4795, January\n\
    \                2007.\n   [RFC4852]    Bound, J., Pouffary, Y., Klynsma, S.,\
    \ Chown, T., and D.\n                Green, \"IPv6 Enterprise Network Analysis\
    \ - IP Layer 3\n                Focus\", RFC 4852, April 2007.\n   [RFC4903] \
    \   Thaler, D., \"Multi-Link Subnet Issues\", RFC 4903, June\n               \
    \ 2007.\n   [RFC4941]    Narten, T., Draves, R., and S. Krishnan, \"Privacy\n\
    \                Extensions for Stateless Address Autoconfiguration in\n     \
    \           IPv6\", RFC 4941, September 2007.\n   [RFC5320]    Templin, F., \"\
    The Subnetwork Encapsulation and\n                Adaptation Layer (SEAL)\", RFC\
    \ 5320, February 2010.\n   [RFC5720]    Templin, F., \"Routing and Addressing\
    \ in Networks with\n                Global Enterprise Recursion (RANGER)\", RFC\
    \ 5720,\n                February 2010.\n   [RANGERS]    Russert, S., Ed., Fleischman,\
    \ E., Ed., and F. Templin,\n                Ed., \"RANGER Scenarios\", Work in\
    \ Progress, September\n                2009.\n"
- title: Appendix A.  Duplicate Address Detection (DAD) Considerations
  contents:
  - "Appendix A.  Duplicate Address Detection (DAD) Considerations\n   A priori uniqueness\
    \ determination (also known as \"pre-service DAD\")\n   for an RLOC assigned on\
    \ an enterprise-interior interface would\n   require either flooding the entire\
    \ enterprise or somehow discovering\n   a link in the enterprise on which a node\
    \ that configures a duplicate\n   address is attached and performing a localized\
    \ DAD exchange on that\n   link.  But, the control message overhead for such an\
    \ enterprise-wide\n   DAD would be substantial and prone to false-negatives due\
    \ to packet\n   loss and intermittent connectivity.  An alternative to pre-service\n\
    \   DAD is to autoconfigure pseudo-random RLOCs on enterprise-interior\n   interfaces\
    \ and employ a passive in-service DAD (e.g., one that\n   monitors routing protocol\
    \ messages for duplicate assignments).\n   Pseudo-random IPv6 RLOCs can be generated\
    \ with mechanisms such as\n   CGAs, IPv6 privacy addresses, etc. with very small\
    \ probability of\n   collision.  Pseudo-random IPv4 RLOCs can be generated through\
    \ random\n   assignment from a suitably large IPv4 prefix space.\n   Consistent\
    \ operational practices can assure uniqueness for EBG-\n   aggregated addresses/prefixes,\
    \ while statistical properties for\n   pseudo-random address self-generation can\
    \ assure uniqueness for the\n   RLOCs assigned on an ER's enterprise-interior\
    \ interfaces.  Still, an\n   RLOC delegation authority should be used when available,\
    \ while a\n   passive in-service DAD mechanism should be used to detect RLOC\n\
    \   duplications when there is no RLOC delegation authority.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Fred L. Templin (editor)\n   Boeing Research & Technology\n\
    \   P.O. Box 3707 MC 7L-49\n   Seattle, WA  98124\n   USA\n   EMail: fltemplin@acm.org\n"
