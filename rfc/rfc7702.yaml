- title: __initial_text__
  contents:
  - "   Interworking between the Session Initiation Protocol (SIP) and the\n     \
    \ Extensible Messaging and Presence Protocol (XMPP): Groupchat\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a bidirectional protocol mapping for the\n\
    \   exchange of instant messages in the context of a multi-party chat\n   session\
    \ among users of the Session Initiation Protocol (SIP) and\n   users of the Extensible\
    \ Messaging and Presence Protocol (XMPP).\n   Specifically, this document defines\
    \ a mapping between the SIP-based\n   Message Session Relay Protocol (MSRP) and\
    \ the XMPP Multi-User Chat\n   (MUC) extension.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7702.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Intended Audience ...............................................4\n  \
    \ 3. Terminology .....................................................5\n   4.\
    \ Architectural Assumptions .......................................5\n   5. Multi-party\
    \ Messaging Session from XMPP MUC to MSRP .............8\n      5.1. Enter Room\
    \ ................................................11\n      5.2. Set Nickname\
    \ ..............................................14\n      5.3. Conference Subscription\
    \ ...................................14\n      5.4. Presence Broadcast ........................................15\n\
    \      5.5. Exchange Messages .........................................19\n  \
    \         5.5.1. Send a Message to All Occupants ....................19\n    \
    \       5.5.2. Send a Private Message .............................21\n      5.6.\
    \ Change Nickname ...........................................22\n      5.7. Invite\
    \ Another User to a Room .............................23\n      5.8. Exit Room\
    \ .................................................25\n   6. MSRP Multi-party\
    \ Messaging Session to XMPP MUC .................25\n      6.1. Enter Room ................................................28\n\
    \      6.2. Presence Broadcast ........................................30\n  \
    \    6.3. Exchange Messages .........................................32\n    \
    \       6.3.1. Send a Message to All Occupants ....................32\n      \
    \     6.3.2. Send a Private Message .............................34\n      6.4.\
    \ Change Nickname ...........................................34\n      6.5. Invite\
    \ Another User to a Room .............................35\n      6.6. Exit Room\
    \ .................................................36\n   7. Handling of Nicknames\
    \ and Display Names ........................37\n   8. Message Size ...................................................38\n\
    \   9. Security Considerations ........................................38\n  \
    \ 10. References ....................................................39\n    \
    \  10.1. Normative References .....................................39\n      10.2.\
    \ Informative References ...................................40\n   Acknowledgements\
    \ ..................................................42\n   Authors' Addresses\
    \ ................................................43\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Both the Session Initiation Protocol (SIP) [RFC3261] and\
    \ the\n   Extensible Messaging and Presence Protocol (XMPP) [RFC6120] can be\n\
    \   used for the purpose of multi-party text chat over the Internet.  To\n   ensure\
    \ interworking between these technologies, it is important to\n   define bidirectional\
    \ protocol mappings.\n   The architectural assumptions underlying such protocol\
    \ mappings are\n   provided in [RFC7247], including the mapping of addresses and\
    \ error\n   conditions.  This document specifies mappings for multi-party text\n\
    \   chat sessions (often called \"groupchat\"); specifically, this document\n\
    \   defines a mapping between the XMPP Multi-User Chat (MUC) extension\n   [XEP-0045]\
    \ and SIP-based multi-party chat using Message Session Relay\n   Protocol (MSRP)\
    \ [RFC4975] as specified in [RFC7701].\n   Both MUC and MSRP contain a large set\
    \ of features, such as the\n   ability to administer rooms, kick out and ban users,\
    \ reserve a\n   nickname within a room, change room subject, enable room moderation,\n\
    \   and destroy the room.  This document covers only a basic subset of\n   groupchat\
    \ features: joining a room, establishing or changing (but not\n   permanently\
    \ registering) a room nickname, modifying presence\n   information within the\
    \ room, sending a message to all participants,\n   sending a private message to\
    \ a single participant, inviting another\n   user to the room, and leaving the\
    \ room.  Future documents might\n   define mappings for additional features beyond\
    \ this set.\n"
- title: 2.  Intended Audience
  contents:
  - "2.  Intended Audience\n   The documents in this series are intended for use by\
    \ software\n   developers who have an existing system based on one of these\n\
    \   technologies (e.g., SIP), and who would like to enable communication\n   from\
    \ that existing system to systems based on the other technology\n   (e.g., XMPP).\
    \  We assume that readers are familiar with the core\n   specifications for both\
    \ SIP [RFC3261] and XMPP [RFC6120], with the\n   base document for this series\
    \ [RFC7247], and with the following\n   groupchat-related specifications:\n  \
    \ o  Multi-party Chat Using MSRP [RFC7701]\n   o  Multi-User Chat [XEP-0045]\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   A number of technical terms used here are defined in [RFC3261],\n\
    \   [RFC4975], [RFC6120], and [XEP-0045].\n   In flow diagrams, MSRP traffic is\
    \ shown using arrows such as \"%%%>\",\n   SIP traffic is shown using arrows such\
    \ as \"***>\", XMPP traffic is\n   shown using arrows such as \"...>\".\n   In\
    \ protocol flows and examples, provisional SIP responses have been\n   elided\
    \ for the sake of brevity.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   [RFC2119].\n"
- title: 4.  Architectural Assumptions
  contents:
  - "4.  Architectural Assumptions\n   XMPP and MSRP differ in their assumptions regarding\
    \ groupchat\n   traffic.  In XMPP, a message of type \"groupchat\" is just another\n\
    \   stanza and is handled directly by an XMPP server or routed to an\n   associated\
    \ server component for multi-user chat.  By contrast,\n   sessions (including\
    \ groupchat sessions) in MSRP are considered to be\n   a type of media (similar\
    \ to audio/video sessions): signaling to set\n   up, manage, and tear down the\
    \ session is handled by a \"conference\n   focus\" [RFC4353] (here we assume via\
    \ SIP), but the session data\n   itself is handled by a separate entity called\
    \ an MSRP switch.  How\n   the conference focus and MSRP switch communicate is\
    \ a matter of\n   implementation and deployment.\n   An architectural diagram\
    \ for a possible gateway deployment is shown\n   below, where the entities have\
    \ the following significance:\n   o  romeo@example.org -- a SIP user.\n   o  romeo@example.org;gr=dr4hcr0st3lup4c\
    \ -- a particular endpoint\n      associated with the SIP user.\n   o  example.org\
    \ -- a SIP proxy with an associated SIP-to-XMPP gateway\n      (\"S2X GW\") to\
    \ XMPP.\n   o  chat.example.org -- a SIP-based conference focus and MSRP switch\n\
    \      with an associated MSRP-to-SIP gateway (\"M2X GW\") to XMPP.\n   o  montague@chat.example.org\
    \ -- a conference at an MSRP switch; not\n      shown in diagram.\n   o  juliet@example.com\
    \ -- an XMPP user.\n   o  juliet@example.com/yn0cl4bnw0yr3vym -- a particular\
    \ endpoint\n      associated with the XMPP user.\n   o  example.com -- an XMPP\
    \ server with an associated XMPP-to-SIP\n      gateway (\"X2S GW\") to SIP and\
    \ an XMPP-to-MSRP gateway (\"X2M GW\")\n      to MSRP.\n   o  rooms.example.com\
    \ -- an XMPP MUC service associated with\n      example.com.\n   o  capulet@rooms.example.com\
    \ -- a chat room at an XMPP MUC service;\n      not shown in diagram.\n   These\
    \ are logical entities, and several of them might be co-located\n   in the same\
    \ physical entity.  For example, the SIP conference focus\n   and MSRP switch\
    \ and associated gateways, or the XMPP server and MUC\n   service and associated\
    \ gateways, might be part of the same deployed\n   code.  In addition, it is likely\
    \ that an XMPP service would not have\n   separate gateways for XMPP-to-SIP translation\
    \ and XMPP-to-MSRP\n   translation, but would instead have a single gateway.\n\
    \   #####################################################################\n  \
    \ #                                                                   #\n   #\
    \                  +------------------+                             #\n   #  &&&&&&&&&&&&&&&&|\
    \ chat.example.org |<%%%%%%%%%%%                 #\n   #  &           &&&&| (MSRP\
    \ switch) +-----+        %                 #\n   #  &           &   +---------------|\
    \ M2X |        %                 #\n   #  &           &           %       | GW\
    \  |        %                 #\n   #  &           &           %       +-----+\
    \        %                 #\n   #  &           &           %        :       \
    \      %                 #\n   #  &           &           %     ///////////////////////////////////#\n\
    \   #  &           &           %     /  :             %                 #\n  \
    \ #  &           &           %     /  :          +-----+              #\n   #\
    \  &           &           %     /  :          | X2M |              #\n   #  &\
    \           &           %     /  :  +-------| GW  |---+          #\n   #  &  \
    \         &           %     /  :.>|       +-----+   |          #\n   #  &    \
    \       &           %     /     |                 |          #\n   #  & +------------------+\
    \  %     / +-----+               |          #\n   #  & | chat.example.org |<*******/*|\
    \ X2S | example.com   |          #\n   #  & | (conference      |  %   **/*| GW\
    \  | (XMPP server) |          #\n   #  & | focus)     +-----+  %   * / +-----+\
    \               |          #\n   #  & +------------| S2X |  %   * /     |    \
    \ +-------------------+  #\n   #  &       *      | GW  |......*./....>|     |\
    \ rooms.example.com |  #\n   #  &       *      +-----+  %   * /     +-----| (MUC\
    \ service)     |  #\n   #  &       *               %   * /       ^ : +-------------------+\
    \  #\n   #  & +---------------+     %   * /       : :                        #\n\
    \   #  &&| example.org   |<********* /       : :                        #\n  \
    \ #    | (SIP proxy) +-----+ %     /       : :                        #\n   #\
    \    +-------------| S2X | %     /       : :                        #\n   #  \
    \        *       | GW  |......./........ :                        #\n   #    \
    \      *       +-----+ %     /         :                        #\n   #      \
    \    *               %     /         :                        #\n   #        \
    \  romeo@example.org     /         juliet@example.com       #\n   #          ;gr=dr4hcr0st3lup4c\
    \   /         /yn0cl4bnw0yr3vym        #\n   #                               \
    \ /                                  #\n   #      --SIP/MSRP DOMAIN--       /\
    \         --XMPP DOMAIN--          #\n   #                                /  \
    \                                #\n   #####################################################################\n\
    \      Legend:\n          . = XMPP\n          % = MSRP\n          * = SIP\n  \
    \        & = unstandardized communication paths\n          / = separation of administrative\
    \ domains\n                 Figure 1: Logical Deployment Architecture\n   In SIP,\
    \ there is no necessity for a SIP user such as\n   romeo@example.org to make use\
    \ of his SIP proxy in order to join a\n   chat room on the XMPP network; for example,\
    \ he could try to directly\n   find a SIP service at example.com or independently\
    \ locate a SIP-to-\n   XMPP gateway.  Although, as a simplifying assumption, this\
    \ document\n   shows the more expected path of using one's \"home\" SIP proxy\
    \ and\n   shows gateways as associated with the sending domain, nothing in this\n\
    \   document ought to be construed as discouraging other deployment\n   architectures\
    \ or communication paths (e.g., services hosting their\n   own inbound gateways).\n"
- title: 5.  Multi-party Messaging Session from XMPP MUC to MSRP
  contents:
  - "5.  Multi-party Messaging Session from XMPP MUC to MSRP\n   This section describes\
    \ how to map an XMPP MUC session to an MSRP\n   Multi-party Messaging session.\
    \  The following diagram outlines the\n   overall protocol flow of a sample session,\
    \ which includes some\n   optional exchanges (such as sending messages, changing\
    \ a nickname,\n   and inviting another user).\n   XMPP             XMPP      \
    \         SIP               MSRP\n   User            Server           Conference\
    \          Switch\n    |             + X2S GW            Focus           + M2X\
    \ GW\n    |             & X2M GW          + S2X GW              |\n    |     \
    \            |                 |                 |\n    | (F1) XMPP       |  \
    \               |                 |\n    | enter room      |                 |\
    \                 |\n    |................>|                 |               \
    \  |\n    |                 | (F2) SIP INVITE |                 |\n    |     \
    \            |****************>|                 |\n    |                 |  \
    \               | (F3)            |\n    |                 |                 |\
    \ unstandardized  |\n    |                 |                 | interaction   \
    \  |\n    |                 |                 |<&&&&&&&&&&&&&&&>|\n    |     \
    \            | (F4) SIP 200 OK |                 |\n    |                 |<****************|\
    \                 |\n    |                 | (F5) SIP ACK    |               \
    \  |\n    |                 |****************>|                 |\n    |     \
    \            | (F6) MSRP SEND (bodiless)         |\n    |                 |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>|\n\
    \    |                 | (F7) MSRP 200 OK                  |\n    |          \
    \       |<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|\n    |                 | (F8) MSRP\
    \ NICKNAME                |\n    |                 |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>|\n\
    \    |                 | (F9) MSRP 200 OK                  |\n    |          \
    \       |<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|\n    |                 | (F10) SIP\
    \       |                 |\n    |                 | SUBSCRIBE       |       \
    \          |\n    |                 | Event:          |                 |\n  \
    \  |                 | conference      |                 |\n    |            \
    \     |****************>|                 |\n    |                 | (F11) SIP\
    \ 200 OK|                 |\n    |                 |<****************|       \
    \          |\n    |                 | (F12) SIP NOTIFY|                 |\n  \
    \  |                 |<****************|                 |\n    |            \
    \     | (F13) SIP 200 OK|                 |\n    |                 |****************>|\
    \                 |\n    | (F14) XMPP      |                 |               \
    \  |\n    | presence        |                 |                 |\n    |<................|\
    \                 |                 |\n    | (F15) XMPP      |               \
    \  |                 |\n    | MUC subject     |                 |            \
    \     |\n    |<................|                 |                 |\n    .  \
    \               .                 .                 .\n    .                 .\
    \                 .                 .\n    | (F16) XMPP      |               \
    \  |                 |\n    | groupchat       |                 |            \
    \     |\n    | message         |                 |                 |\n    |................>|\
    \                 |                 |\n    |                 | (F17) MSRP SEND\
    \                   |\n    |                 |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>|\n\
    \    |                 | (F18) MSRP 200 OK\n    |                 |<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|\n\
    \    | (F19) XMPP      |                 |                 |\n    | groupchat\
    \       |                 |                 |\n    | message         |       \
    \          |                 |\n    |<................|                 |    \
    \             |\n    .                 .                 .                 .\n\
    \    .                 .                 .                 .\n    | (F20) XMPP\
    \      |                 |                 |\n    | private         |        \
    \         |                 |\n    | message         |                 |     \
    \            |\n    |................>|                 |                 |\n\
    \    |                 | (F21) MSRP SEND                   |\n    |          \
    \       |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>|\n    |                 | (F22) MSRP\
    \ 200 OK\n    |                 |<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|\n    . \
    \                .                 .                 .\n    .                \
    \ .                 .                 .\n    | (F23) XMPP      |             \
    \    |                 |\n    | presence:       |                 |          \
    \       |\n    | change nick     |                 |                 |\n    |................>|\
    \                 |                 |\n    |                 | (F24) MSRP NICKNAME\
    \               |\n    |                 |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>|\n\
    \    |                 | (F25) MSRP 425 Error              |\n    |          \
    \       |<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|\n    | (F26) XMPP      |       \
    \          |                 |\n    | presence        |                 |    \
    \             |\n    | error           |                 |                 |\n\
    \    |<................|                 |                 |\n    .          \
    \       .                 .                 .\n    .                 .       \
    \          .                 .\n    | (F27) XMPP      |                 |    \
    \             |\n    | message:        |                 |                 |\n\
    \    | invite          |                 |                 |\n    |................>|\
    \                 |                 |\n    |                 | (F28) SIP     \
    \  |                 |\n    |                 | REFER           |            \
    \     |\n    |                 |****************>|                 |\n    |  \
    \               | (F29) SIP       |                 |\n    |                 |\
    \ 200 OK          |                 |\n    |                 |<****************|\
    \                 |\n    |                 | (F30) SIP       |               \
    \  |\n    |                 | NOTIFY          |                 |\n    |     \
    \            |<****************|                 |\n    .                 .  \
    \               .                 .\n    .                 .                 .\
    \                 .\n    | (F31) XMPP      |                 |               \
    \  |\n    | presence:       |                 |                 |\n    | exit\
    \ room       |                 |                 |\n    |................>|  \
    \               |                 |\n    |                 | (F32) SIP BYE   |\
    \                 |\n    |                 |****************>|               \
    \  |\n    |                 | (F33) SIP       |                 |\n    |     \
    \            | 200 OK          |                 |\n    |                 |<****************|\
    \                 |\n    | (F34) XMPP      |                 |               \
    \  |\n    | presence        |                 |                 |\n    | unavailable\
    \     |                 |                 |\n    |<................|         \
    \        |                 |\n    |                 |                 |      \
    \           |\n   Detailed protocol flows and mappings are provided in the following\n\
    \   sections.\n"
- title: 5.1.  Enter Room
  contents:
  - "5.1.  Enter Room\n   As defined in the XMPP Multi-User Chat (MUC) specification\n\
    \   [XEP-0045], when an XMPP user (say, \"juliet@example.com\") wants to\n   join\
    \ a groupchat room (say, \"montague@chat.example.org\"), she sends a\n   directed\
    \ <presence/> stanza [RFC6121] to that chat room.  In her\n   request she also\
    \ specifies the nickname she wants to use within the\n   room (say, \"JuliC\"\
    ); in XMPP this room nickname is the resourcepart\n   of an occupant JID (thus\
    \ \"montague@chat.example.org/JuliC\").  The\n   joining client signals its ability\
    \ to speak the multi-user chat\n   protocol by including in the initial presence\
    \ stanza an empty <x/>\n   element qualified by the 'http://jabber.org/protocol/muc'\
    \ namespace.\n   Example 1: Juliet Enters Room (F1)\n   |  <presence from='juliet@example.com/yn0cl4bnw0yr3vym'\n\
    \   |            to='montague@chat.example.org/JuliC'>\n   |    <x xmlns='http://jabber.org/protocol/muc'/>\n\
    \   |  </presence>\n   Upon receiving such a presence stanza, the XMPP server\
    \ needs to\n   determine the identity of the domainpart in the 'to' address, which\n\
    \   it does by following the procedures discussed in [RFC7247].  Here we\n   assume\
    \ that the XMPP server has determined the domain is serviced by\n   a SIP server,\
    \ that it contains or has available to it an XMPP-to-SIP\n   gateway or connection\
    \ manager (which enables it to speak natively to\n   SIP servers), and that it\
    \ hands off the presence stanza to the\n   XMPP-to-SIP gateway.\n   Because a\
    \ multi-user chat service accepts the presence stanza shown\n   above as a request\
    \ to enter a room, the XMPP-to-SIP gateway\n   transforms it into a SIP INVITE\
    \ request.\n   Example 2: SIP Mapping of Room Join (F2)\n   |  INVITE sip:montague@chat.example.org\
    \ SIP/2.0\n   |  To: <sip:montague@chat.example.org>\n   |  From: \"Juliet\" <sip:juliet@example.com>;tag=786\n\
    \   |  Contact: <sip:juliet@example.com>;gr=yn0cl4bnw0yr3vym\n   |  Call-ID: BC466C1C-E01D-4FD1-B766-9AD174BAF2E7\n\
    \   |  CSeq: 1 INVITE\n   |  Content-Type: application/sdp\n   |  Content-Length:\
    \ ...\n   |\n   |  c=IN IP4 x2s.example.org\n   |  m=message 7654 TCP/MSRP *\n\
    \   |  a=accept-types:text/cpim\n   |  a=accept-wrapped-types:text/plain text/html\n\
    \   |  a=path:msrp://x2m.example.com:7654/jshA7weztas;tcp\n   |  a=chatroom:nickname\
    \ private-messages\n   Here the Session Description Protocol (SDP) offer specifies\
    \ the XMPP-\n   to-MSRP gateway on the XMPP side (in the SDP 'path' attribute\n\
    \   specified in [RFC4975]) as well as other particulars of the session.\n   \
    \   There is no direct mapping for the MSRP URIs.  In fact, an MSRP\n      URI\
    \ identifies a session of instant messages at a particular\n      device; it is\
    \ ephemeral and has no meaning outside the scope of\n      that session.  The\
    \ authority component of the MSRP URI here MUST\n      contain the XMPP-to-MSRP\
    \ gateway hostname or numeric IP address\n      (as well as, in accordance with\
    \ [RFC4975], an explicit port\n      number).\n   The mapping of XMPP syntax elements\
    \ to SIP and [RFC4566] syntax\n   elements MUST be as shown in the following table.\n\
    \   Table 1: Message Syntax Mapping from XMPP to SIP/SDP\n       +-----------------------------+-----------------------------+\n\
    \       |  XMPP Element or Attribute  |  SIP Header or SDP Contents |\n      \
    \ +-----------------------------+-----------------------------+\n       |  from\
    \                       |  From                       |\n       |  to (without\
    \ the /nick)     |  To                         |\n       +-----------------------------+-----------------------------+\n\
    \   As shown in the foregoing example and described in [RFC7247], the\n   XMPP-to-SIP\
    \ gateway MUST map the bare JID (\"localpart@domainpart\") of\n   the XMPP sender\
    \ to the SIP From header and include the resourcepart\n   of the full JID as the\
    \ Globally Routable User Agent URI (GRUU)\n   portion [RFC5627] of the SIP URI.\
    \  However, note that a SIP response\n   uses the same From and To as in the SIP\
    \ request, whereas an XMPP\n   response swaps the from and to attributes.\n  \
    \ Here we assume that the SIP conference focus accepts the session\n   establishment.\
    \  The Contact header field of the SIP 200 OK response\n   includes the 'isfocus'\
    \ feature tag specified in [RFC4353] along with\n   other relevant feature tags.\
    \  The conference focus also includes an\n   answer session description that acknowledges\
    \ the choice of media,\n   specifies the MSRP URI of the switch (in the 'path'\
    \ attribute\n   specified in [RFC4975]), and contains the extensions specified\
    \ in\n   [RFC7701].\n   Example 3: Chat Room Accepts Session Establishment (F4)\n\
    \   |  SIP/2.0 200 OK\n   |  From: \"Juliet\" <sip:juliet@example.com>;tag=786\n\
    \   |  To: <sip:montague@chat.example.org>;tag=087js\n   |  Call-ID: BC466C1C-E01D-4FD1-B766-9AD174BAF2E7\n\
    \   |  CSeq: 1 INVITE\n   |  Contact: <sip:montague@chat.example.org;transport=tcp>;isfocus\n\
    \   |  Content-Type: application/sdp\n   |  Content-Length: ...\n   |\n   |  v=0\n\
    \   |  c=IN IP4 example.org\n   |  s=-\n   |  m=message 12763 TCP/MSRP *\n   |\
    \  a=accept-types:message/cpim\n   |  a=accept-wrapped-types:text/plain text/html\n\
    \   |  a=path:msrp://chat.example.org:12763/kjhd37s2s20w2a;tcp\n   |  a=chatroom:nickname\
    \ private-messages\n   Upon receiving such a response, the XMPP-to-SIP gateway\
    \ sends a SIP\n   ACK to the conference focus on behalf of the joining user.\n\
    \   Example 4: Gateway Sends ACK to Conference Focus (F5)\n   |  ACK sip:montague@chat.example.org\
    \ SIP/2.0\n   |  To: <sip:montague@chat.example.org>;tag=087js\n   |  From: \"\
    Juliet\" <sip:juliet@example.com>;tag=786\n   |  Call-ID: BC466C1C-E01D-4FD1-B766-9AD174BAF2E7\n\
    \   |  CSeq: 2 ACK\n   In accordance with [RFC4975], the gateway sends a bodiless\
    \ MSRP\n   message (F6) to the switch immediately upon establishing the\n   connection,\
    \ and the switch acknowledges that message (F7).\n"
- title: 5.2.  Set Nickname
  contents:
  - "5.2.  Set Nickname\n   If the chat room server accepted the session, the XMPP-to-MSRP\n\
    \   gateway sets up the nickname as received in the presence stanza\n   (i.e.,\
    \ the resourcepart of the 'to' address, such as \"JuliC\" in\n   \"montague@chat.example.org/JuliC\"\
    ).  This is done using the extension\n   specified in [RFC7701].\n   Example 5:\
    \ Gateway Sets Up Nickname (F8)\n   |  MSRP a786hjs2 NICKNAME\n   |  To-Path:\
    \ msrp://montague@chat.example.org:12763/kjhd37s2s20w2a;tcp\n   |  From-Path:\
    \ msrp://x2m.example.com:7654/jshA7weztas;tcp\n   |  Use-Nickname: \"JuliC\"\n\
    \   |  -------a786hjs2\n   The MSRP switch analyzes the existing allocation of\
    \ nicknames,\n   accepts the nickname proposal, and answers with a 200 response.\n\
    \   Example 6: MSRP Switch Accepts Nickname Proposal (F9)\n   |  MSRP a786hjs2\
    \ 200 OK\n   |  To-Path: msrp://x2m.example.com:7654/jshA7weztas;tcp\n   |  From-Path:\
    \ msrp://montague@chat.example.org:12763/kjhd37s2s20w2a\n   |             ;tcp\n\
    \   |  -------a786hjs2\n   This section assumes that the nickname request is successful.\
    \  The\n   error flow resulting from a nickname conflict is described under\n\
    \   Section 5.6.\n"
- title: 5.3.  Conference Subscription
  contents:
  - "5.3.  Conference Subscription\n   As mentioned in [RFC7701], the joining user\
    \ will typically also\n   subscribe to a conference event package (see [RFC4575]\
    \ and [RFC6502])\n   at the focus.  Although such a subscription is not required\
    \ by\n   [RFC7701] in practice the temporary and context-dependent presence\n\
    \   subscriptions and room rosters involved in joining an XMPP MUC room\n   are\
    \ best mapped to the conference event package.\n   Example 7: Gateway Subscribes\
    \ to the Conference (F10)\n   |  SUBSCRIBE sip:montague@chat.example.org SIP/2.0\n\
    \   |  To: <sip:montague@chat.example.org>;tag=087js\n   |  From: \"Juliet\" <sip:juliet@example.com>;tag=786\n\
    \   |  Contact: <sip:juliet@example.com>;gr=yn0cl4bnw0yr3vym\n   |  Call-ID: BC466C1C-E01D-4FD1-B766-9AD174BAF2E7\n\
    \   |  CSeq: 3 SUBSCRIBE\n   |  Event: conference\n   |  Expires: 600\n   |  Accept:\
    \ application/conference-info+xml\n   |  Allow-Events: conference\n   |  Content-Length:\
    \ 0\n   The focus will accept or reject the request based on local policy.\n \
    \  Example 8: Focus Accepts Subscription Request (F11)\n   |  SIP/2.0 200 OK\n\
    \   |  To: <sip:montague@chat.example.org>;tag=087js\n   |  From: \"Juliet\" <sip:juliet@example.com>;tag=786\n\
    \   |  Call-ID: BC466C1C-E01D-4FD1-B766-9AD174BAF2E7\n   |  CSeq: 3 SUBSCRIBE\n\
    \   |  Contact: <sip:montague@chat.example.org;transport=tcp>;isfocus\n   |  Expires:\
    \ 600\n   |  Content-Length: 0\n   If the conference focus accepts the request\
    \ to enter a room, the XMPP\n   user expects to receive back presence information\
    \ from all the\n   existing occupants of the room.  To make this happen, the XMPP-to-SIP\n\
    \   gateway subscribes to the conference event package [RFC4575] at the\n   focus.\n"
- title: 5.4.  Presence Broadcast
  contents:
  - "5.4.  Presence Broadcast\n   When the conference event package subscription is\
    \ completed, the\n   focus sends to the XMPP-to-SIP gateway a NOTIFY request containing\n\
    \   the presence information of all the existing occupants, represented\n   using\
    \ the format defined in [RFC4575].\n   Example 9: Conference Focus Sends Presence\
    \ Information (F12)\n   |  NOTIFY sip:montague@chat.example.org SIP/2.0\n   |\
    \  To: \"Juliet\" <sip:juliet@example.com>;tag=786\n   |  From: <sip:montague@chat.example.org>;tag=087js\n\
    \   |  Call-ID: BC466C1C-E01D-4FD1-B766-9AD174BAF2E7\n   |  CSeq: 4 NOTIFY\n \
    \  |  Event: conference\n   |  Subscription-State: active;expires=3600\n   | \
    \ Content-Type: application/conference-info+xml\n   |  Content-Length: ...\n \
    \  |\n   |  <conference-info version=\"0\" state=\"full\"\n   |      entity=\"\
    sip:3402934234@chat.example.org\">\n   |    <conference-description>\n   |   \
    \   <subject>Today in Verona</subject>\n   |      <conf-uris>\n   |        <entry>\n\
    \   |          <uri>tel:+18882934234</uri>\n   |        </entry>\n   |      </conf-uris>\n\
    \   |    </conference-description>\n   |    <users>\n   |      <user entity=\"\
    sip:montague@chat.example.org;gr=Romeo\"\n   |            state=\"full\">\n  \
    \ |        <display-text>Romeo</display-text>\n   |        <roles>\n   |     \
    \     <entry>participant</entry>\n   |        </roles>\n   |        <associated-aors>\n\
    \   |          <entry>\n   |            <uri>xmpp:romeo@example.org/dr4hcr0st3lup4c</uri>\n\
    \   |          </entry>\n   |        </associated-aors>\n   |        <endpoint\
    \ entity=\"sip:montague@chat.example.org;gr=Romeo\"\n   |                  state=\"\
    full\">\n   |          <status>connected</status>\n   |          <joining-info>\n\
    \   |            <when>2013-12-12T10:01:03.691128+01:00</when>\n   |         \
    \ </joining-info>\n   |          <media id=\"211835820\">\n   |            <type>message</type>\n\
    \   |          </media>\n   |        </endpoint>\n   |      </user>\n   |    \
    \  <user entity=\"sip:montague@chat.example.org;gr=Ben\"\n   |            state=\"\
    full\">\n   |        <display-text>Ben</display-text>\n   |        <roles>\n \
    \  |          <entry>participant</entry>\n   |        </roles>\n   |        <endpoint\
    \ entity=\"sip:montague@chat.example.org;gr=Ben\"\n   |                  state=\"\
    full\">\n   |          <status>connected</status>\n   |          <media id=\"\
    211835821\">\n   |            <type>message</type>\n   |          </media>\n \
    \  |        </endpoint>\n   |      </user>\n   |      <user entity=\"sip:montague@chat.example.org;gr=JuliC\"\
    \n   |            state=\"full\">\n   |        <display-text>JuliC</display-text>\n\
    \   |        <roles>\n   |          <entry>participant</entry>\n   |        </roles>\n\
    \   |         <endpoint entity=\"sip:montague@chat.example.org;gr=JuliC\"\n  \
    \ |                   state=\"full\">\n   |           <status>connected</status>\n\
    \   |           <media id=\"211835822\">\n   |             <type>message</type>\n\
    \   |           </media>\n   |         </endpoint>\n   |      </user>\n   |  \
    \  </users>\n   |  </conference-info>\n   The syntax mapping from the RFC 4575\
    \ payload to the XMPP participant\n   list MUST be as shown in the following table.\
    \  (Mappings for elements\n   not mentioned are undefined.)\n   Table 2: Participant\
    \ list mapping\n       +--------------------------------+-----------------------------+\n\
    \       |  RFC 4575 Element or Attribute |  XMPP Element or Attribute  |\n   \
    \    +--------------------------------+-----------------------------+\n      \
    \ |  <conference-info/> 'entity'   |  room JID                   |\n       | \
    \ <subject/>                    |  room subject               |\n       |  <user/>\
    \ 'entity'              |  occupant JID               |\n       |  <display-text/>\
    \               |  participant nickname       |\n       |  <endpoint/> 'entity'\
    \          |  occupant JID               |\n       |  <user/> 'associated-aors'\
    \     |  user full JID (if avail.)  |\n       +--------------------------------+-----------------------------+\n\
    \   Upon receiving such a response, the XMPP-to-SIP gateway sends a SIP\n   200\
    \ OK response to the conference focus (example not shown) and\n   translates the\
    \ participant list into a series of XMPP presence\n   stanzas.\n   Example 10:\
    \ XMPP Mapping of Chat Room Presence (F14)\n   |  <presence from='montague@chat.example.org/Romeo'\n\
    \   |            to='juliet@example.com/yn0cl4bnw0yr3vym'>\n   |    <x xmlns='http://jabber.org/protocol/muc#user'>\n\
    \   |      <item affiliation='none' role='participant'/>\n   |    </x>\n   | \
    \ </presence>\n   |  <presence from='montague@chat.example.org/Ben'\n   |    \
    \        to='juliet@example.com/yn0cl4bnw0yr3vym'>\n   |    <x xmlns='http://jabber.org/protocol/muc#user'>\n\
    \   |      <item affiliation='none' role='participant'/>\n   |    </x>\n   | \
    \ </presence>\n   |  <presence from='montague@chat.example.org/JuliC'\n   |  \
    \          to='juliet@example.com/yn0cl4bnw0yr3vym'>\n   |    <x xmlns='http://jabber.org/protocol/muc#user'>\n\
    \   |      <item affiliation='none' role='participant'/>\n   |      <status code='110'/>\n\
    \   |    </x>\n   |  </presence>\n   If the NOTIFY request included a subject,\
    \ the gateway converts that\n   into a separate XMPP message.\n   Example 11:\
    \ XMPP Mapping of Chat Room Subject (F15)\n   |  <message from='montague@chat.example.org/mayor'\n\
    \   |           to='juliet@example.com/yn0cl4bnw0yr3vym'\n   |           id='mbh2vd68'>\n\
    \   |    <subject>Today in Verona</subject>\n   |  </message>\n   The mapping\
    \ of SIP and [RFC4575] payload syntax elements to XMPP\n   syntax elements MUST\
    \ be as shown in the following table.  (Mappings\n   for elements not mentioned\
    \ are undefined.)\n   Table 3: Message Syntax Mapping from SIP to XMPP\n     \
    \  +---------------------------------+-----------------------------+\n       |\
    \ SIP Header or RFC 4575 Contents | XMPP Element or Attribute   |\n       +---------------------------------+-----------------------------+\n\
    \       |  <user/> 'entity'               |  from                       |\n  \
    \     |  To with <display-text>         |  occupant JID               |\n    \
    \   |  <role>participant</role>       |  role='participant'         |\n      \
    \ |  [N/A]                          |  affiliation='none'         |\n       +---------------------------------+-----------------------------+\n"
- title: 5.5.  Exchange Messages
  contents:
  - "5.5.  Exchange Messages\n   Once the user has joined the chat room, the user\
    \ can exchange an\n   unbounded number of messages, both public and private.\n\
    \   The mapping of XMPP syntax elements to MSRP syntax elements MUST be\n   as\
    \ shown in the following table.  (Mappings for elements not\n   mentioned are\
    \ undefined.)\n   Table 4: Message Syntax Mapping from XMPP Message to MSRP\n\
    \       +-----------------------------+-----------------------------+\n      \
    \ |  XMPP Element or Attribute  |  CPIM Header                |\n       +-----------------------------+-----------------------------+\n\
    \       |  to                         |  To                         |\n      \
    \ |  from                       |  From                       |\n       |  <body/>\
    \                    |  body of the SEND request   |\n       +-----------------------------+-----------------------------+\n"
- title: 5.5.1.  Send a Message to All Occupants
  contents:
  - "5.5.1.  Send a Message to All Occupants\n   When Juliet wants to sends a message\
    \ to all other occupants in the\n   room, she sends a message of type \"groupchat\"\
    \ to the <room@service>\n   itself (in our example, <montague@chat.example.org>).\n\
    \   The following examples show an exchange of a public message.\n   Example 12:\
    \ Juliet Sends Message to All Occupants (F16)\n   |  <message from='juliet@example.com/yn0cl4bnw0yr3vym'\n\
    \   |           to='montague@chat.example.org'\n   |           type='groupchat'\n\
    \   |           id='lzfed24s'>\n   |        <body>Who knows where Romeo is?</body>\n\
    \   |  </message>\n   Upon receiving such a message, the XMPP-to-MSRP gateway\
    \ translates it\n   into an MSRP SEND message.\n   Example 13: Gateway Maps XMPP\
    \ Message to MSRP (F17)\n   |  MSRP a786hjs2 SEND\n   |  To-Path: msrp://chat.example.org:12763/kjhd37s2s20w2a;tcp\n\
    \   |  From-Path: msrp://x2m.example.com:7654/jshA7weztas;tcp\n   |  Message-ID:\
    \ 87652491\n   |  Byte-Range: 1-*/*\n   |  Content-Type: message/cpim\n   |\n\
    \   |  To: <sip:montague@chat.example.org>\n   |  From: \"Juliet\" <sip:juliet@example.com>\n\
    \   |  DateTime: 2008-10-15T15:02:31-03:00\n   |  Content-Type: text/plain\n \
    \  |\n   |  Who knows where Romeo is?\n   |  -------a786hjs2$\n   Upon receiving\
    \ the SEND request, if the request either contains a\n   Failure-Report header\
    \ field value of \"yes\" or does not contain a\n   Failure-Report header at all,\
    \ the MSRP switch immediately generates\n   and sends a response.\n   Example\
    \ 14: MSRP Switch Returns 200 OK (F18)\n   |  MSRP d93kswow 200 OK\n   |  To-Path:\
    \ msrp://x2m.example.com:7654/jshA7weztas;tcp\n   |  From-Path: msrp://chat.example.org:12763/kjhd37s2s20w2a;tcp\n\
    \   |  -------d93kswow$\n   Since an XMPP MUC room could be moderated and an XMPP\
    \ user cannot be\n   sure whether her message has been accepted without receiving\
    \ it back\n   from the server, [XEP-0045] states that the sender needs to receive\
    \ a\n   reflected copy of the message it sent.  So, in this scenario, the\n  \
    \ XMPP-to-MSRP gateway has to reflect the message back to the sender.\n   This\
    \ procedure only applies to XMPP endpoints.\n   Example 15: Gateway Reflects Message\
    \ to XMPP User (F19)\n   |  <message from='montague@chat.example.org/JuliC'\n\
    \   |           to='juliet@example.com/yn0cl4bnw0yr3vym'\n   |           type='groupchat'\n\
    \   |           id='ix51z73m'>\n   |        <body>Who knows where Romeo is?</body>\n\
    \   |  </message>\n"
- title: 5.5.2.  Send a Private Message
  contents:
  - "5.5.2.  Send a Private Message\n   Since each occupant has a unique JID, Juliet\
    \ can send a \"private\n   message\" to a selected occupant through the service\
    \ by sending a\n   message to the user's occupant JID.  The XMPP message type\
    \ ought to\n   be \"chat\" (and is not allowed to be \"groupchat\").\n   The following\
    \ examples show an exchange of a private message.\n   Example 16: Juliet Sends\
    \ Private Message (F20)\n   |  <message from='juliet@example.com/yn0cl4bnw0yr3vym'\n\
    \   |           to='montague@chat.example.org/Romeo'\n   |           type='chat'\n\
    \   |           id='6sfln45q'>\n   |        <body>O Romeo, Romeo! wherefore art\
    \ thou Romeo?</body>\n   |  </message>\n   Upon receiving such a message, the\
    \ XMPP-to-MSRP gateway translates it\n   into an MSRP SEND message.\n   Example\
    \ 17: Gateway Maps Private Message from XMPP to MSRP (F21)\n   |  MSRP a786hjs2\
    \ SEND\n   |  To-Path: msrp://chat.example.org:12763/kjhd37s2s20w2a;tcp\n   |\
    \  From-Path: msrp://x2m.example.com:7654/jshA7weztas;tcp\n   |  Message-ID: 87652491\n\
    \   |  Byte-Range: 1-*/*\n   |  Content-Type: message/cpim\n   |\n   |  To: <sip:montague@chat.example.org>;gr=Romeo\n\
    \   |  From: <sip:juliet@example.org>;gr=yn0cl4bnw0yr3vym\n   |  DateTime: 2008-10-15T15:02:31-03:00\n\
    \   |  Content-Type: text/plain\n   |\n   |  O Romeo, Romeo! wherefore art thou\
    \ Romeo?\n   |  -------a786hjs2$\n   After acknowledging the message by sending\
    \ an MSRP 200 OK message\n   (step F22, not shown), the MSRP switch is responsible\
    \ for sending the\n   message to the intended recipient.  When doing so, it modifies\
    \ the\n   From header to the sender's address within the chat room.\n   Example\
    \ 18: Switch Sends Private Message to SIP User\n   |  MSRP a786hjs2 SEND\n   |\
    \  To-Path: msrp://chat.example.org:12763/kjhd37s2s20w2a;tcp\n   |  From-Path:\
    \ msrp://x2m.example.com:7654/jshA7weztas;tcp\n   |  Message-ID: 87652491\n  \
    \ |  Byte-Range: 1-*/*\n   |  Content-Type: message/cpim\n   |\n   |  To: <sip:romeo@example.org>\n\
    \   |  From: <sip:montague@chat.example.org>;gr=JuliC\n   |  DateTime: 2008-10-15T15:02:31-03:00\n\
    \   |  Content-Type: text/plain\n   |\n   |  O Romeo, Romeo! wherefore art thou\
    \ Romeo?\n   |  -------a786hjs2$\n   Note: If an XMPP-to-MSRP gateway has support\
    \ for private messaging,\n   it MUST advertise that fact by adding a \"private-messages\"\
    \ value to\n   the a=chatroom SDP attribute it sends to the conference focus,\
    \ as\n   specified in [RFC7701].\n   |  a=chatroom:nickname private-messages\n"
- title: 5.6.  Change Nickname
  contents:
  - "5.6.  Change Nickname\n   The XMPP user might want to change her nickname.  She\
    \ can do so by\n   sending an updated presence stanza to the room, containing\
    \ a new\n   nickname.\n   Example 19: Juliet Changes Her Nickname (F23)\n   |\
    \  <presence from='juliet@example.com/yn0cl4bnw0yr3vym'\n   |            to='montague@chat.example.org/CapuletGirl'/>\n\
    \   So far we have assumed that the requested nickname did not conflict\n   with\
    \ any existing nicknames.  The following text describes the\n   handling of a\
    \ nickname conflict.\n   The MSRP switch analyzes the existing allocation of nicknames,\
    \ and\n   detects that the nickname proposal is already provided to another\n\
    \   participant.  In this case, the MSRP switch answers with a 425\n   response.\n\
    \   Example 20: MSRP Switch Does Not Accept Nickname Proposal (F25)\n   |  MSRP\
    \ a786hjs2 425 Nickname usage failed\n   |  To-Path: msrp://x2m.example.com:7654/jshA7weztas;tcp\n\
    \   |  From-Path: msrp://chat.example.org:12763/kjhd37s2s20w2a;tcp\n   |  -------a786hjs2\n\
    \   Upon receiving such a response, the XMPP-to-MSRP gateway translates\n   it\
    \ into an XMPP presence stanza of type \"error\", specifying a\n   <conflict/>\
    \ error condition (which implies that the XMPP client will\n   then need to choose\
    \ another nickname and repeat the process of\n   joining).\n   Example 21: Conflict\
    \ Error for Nickname (F26)\n   |  <presence from='montague@chat.example.org/JuliC'\n\
    \   |            to='juliet@example.com/yn0cl4bnw0yr3vym'\n   |            type='error'>\n\
    \   |    <x xmlns='http://jabber.org/protocol/muc'/>\n   |    <error type='cancel'\
    \ by='montague@chat.example.org'>\n   |      <conflict xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n\
    \   |    </error>\n   |  </presence>\n   Alternatively, the gateway might generate\
    \ a new nickname request on\n   behalf of the XMPP user, thus shielding the XMPP\
    \ client from handling\n   the conflict error.\n"
- title: 5.7.  Invite Another User to a Room
  contents:
  - "5.7.  Invite Another User to a Room\n   In XMPP, there are two methods for inviting\
    \ another user to a room:\n   direct invitations [XEP-0249] (sent directly from\
    \ the user's real JID\n   outside the room to the invitee's real JID) and mediated\
    \ invitations\n   (sent through the room from the user's occupant JID to the invitee's\n\
    \   JID).  In this document, we cover mediated invitations only.\n   For example,\
    \ if Juliet decides to invite Benvolio to the room, she\n   sends a message stanza\
    \ with an invite and Benvolio's JID (which could\n   be his real JID or an occupant\
    \ JID in another room).\n   Example 22: Juliet Invites Benvolio to the Room (F27)\n\
    \   |  <message from='juliet@example.com/yn0cl4bnw0yr3vym'\n   |           id='nzd143v8'\n\
    \   |           to='montague@chat.example.org'>\n   |    <x xmlns='http://jabber.org/protocol/muc#user'>\n\
    \   |      <invite to='benvolio@example.com'/>\n   |    </x>\n   |  </message>\n\
    \   The XMPP-to-SIP gateway then sends a SIP REFER request to the\n   conference\
    \ focus indicating who needs to be invited in the Refer-To\n   header, as per\
    \ Section 5.5 of [RFC4579].\n   Example 23: SIP Mapping of Invite (F28)\n   |\
    \  REFER sip:montague@chat.example.org SIP/2.0\n   |  To: <sip:montague@chat.example.org>\n\
    \   |  From: \"Juliet\" <sip:juliet@example.com>;tag=786\n   |  Call-ID: BC466C1C-E01D-4FD1-B766-9AD174BAF2E7\n\
    \   |  CSeq: 5 REFER\n   |  Contact: <sip:juliet@example.com>;gr=yn0cl4bnw0yr3vym\n\
    \   |  Accept: message/sipfrag\n   |  Refer-To: <sip:benvolio@example.com>\n \
    \  |  Supported: replaces\n   |  Content-Length: 0\n   The conference focus then\
    \ acknowledges the SIP REFER request with a\n   200 OK response (step F29, not\
    \ shown).\n   The progress of the invitation will be tracked by the received NOTIFY\n\
    \   requests as per [RFC3515].\n   Example 24: Progress Notification for Invitation\
    \ (F30)\n   |  NOTIFY sip:juliet@example.com SIP/2.0\n   |  To: <sip:juliet@example.com>;tag=786\n\
    \   |  From: <sip:montague@chat.example.org>;tag=087js\n   |  Call-ID: BC466C1C-E01D-4FD1-B766-9AD174BAF2E7\n\
    \   |  CSeq: 6 NOTIFY\n   |  Max-Forwards: 70\n   |  Event: refer\n   |  Subscription-State:\
    \ active;expires=60\n   |  Contact: <sip:montague@chat.example.org;transport=tcp>;isfocus\n\
    \   |  Content-Type: message/sipfrag;version=2.0\n   |  Content-Length: ...\n\
    \   Note: Implementers might want to be aware that several recently\n   published\
    \ specifications modify the way in which REFER requests\n   handle SIP notifications\
    \ (see [RFC7647] and [RFC7614]).\n"
- title: 5.8.  Exit Room
  contents:
  - "5.8.  Exit Room\n   If Juliet decides to exit the chat room, her client sends\
    \ a directed\n   presence stanza of type \"unavailable\" to the occupant JID she\
    \ is\n   currently using in the room (here <montague@chat.example.org/JuliC>).\n\
    \   Example 25: Juliet Exits Room (F31)\n   |  <presence from='juliet@example.com/yn0cl4bnw0yr3vym'\n\
    \   |            to='montague@chat.example.org/JuliC'\n   |            type='unavailable'/>\n\
    \   Upon receiving such a stanza, the XMPP-to-SIP gateway terminates the\n   SIP\
    \ session by sending a SIP BYE to the conference focus and the\n   conference\
    \ focus responds with a SIP 200 OK (steps F32 and F33, not\n   shown).\n   Juliet\
    \ can include a custom exit message in the presence stanza of\n   type \"unavailable\"\
    , in which case it is broadcast to other\n   participants using the methods described\
    \ above.\n   Example 26: Juliet Exits the Chat Room (F31)\n   |  <presence from='juliet@example.com/yn0cl4bnw0yr3vym'\n\
    \   |            to='montague@chat.example.org/JuliC'\n   |            type='unavailable'>\n\
    \   |    <status>O, look! methinks I see my cousin's ghost</status>\n   |  </presence>\n"
- title: 6.  MSRP Multi-party Messaging Session to XMPP MUC
  contents:
  - "6.  MSRP Multi-party Messaging Session to XMPP MUC\n   This section describes\
    \ how to map a Multi-party Instant Message (IM)\n   MSRP session to an XMPP MUC\
    \ session.  As before, the following\n   diagram outlines the overall protocol\
    \ flow of a sample session, which\n   includes some optional exchanges (such as\
    \ sending messages, changing\n   nickname, and inviting another user).\n   SIP\
    \               SIP               MSRP             XMPP\n   User             Proxy\
    \             Switch           Server\n    |             + S2X GW          + M2X\
    \ GW          +X2S GW\n    |                 |                 |             +X2M\
    \ GW\n    |                 |                 |                 |\n    | (F35)\
    \ SIP       |                 |                 |\n    | INVITE          |   \
    \              |                 |\n    |****************>|                 |\
    \                 |\n    | (F36) SIP       |                 |               \
    \  |\n    | 200 OK          |                 |                 |\n    |<****************|\
    \                 |                 |\n    | (F37) SIP ACK   |               \
    \  |                 |\n    |****************>|                 |            \
    \     |\n    | (F38) SIP       |                 |                 |\n    | SUBSCRIBE\
    \       |                 |                 |\n    | Event:          |       \
    \          |                 |\n    | conference      |                 |    \
    \             |\n    |****************>|                 |                 |\n\
    \    | (F39) SIP       |                 |                 |\n    | 200 OK   \
    \       |                 |                 |\n    |<****************|       \
    \          |                 |\n    |                 | (F40) XMPP presence: enter\
    \ room   |\n    |                 |..................................>|\n    |\
    \                 | (F41) XMPP presence               |\n    |               \
    \  |<..................................|\n    | (F42) SIP       |            \
    \     |                 |\n    | NOTIFY          |                 |         \
    \        |\n    |<****************|                 |                 |\n    |\
    \ (F43) SIP       |                 |                 |\n    | 200 OK        \
    \  |                 |                 |\n    |****************>|            \
    \     |                 |\n    .                 .                 .         \
    \        .\n    .                 .                 .                 .\n    |\
    \ (F44) MSRP SEND                   |                 |\n    |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>|\
    \                 |\n    |                 |                 | (F45) XMPP    \
    \  |\n    |                 |                 | groupchat       |\n    |     \
    \            |                 | message         |\n    |                 |  \
    \               |................>|\n    |                 |                 |\
    \ (F46) XMPP      |\n    |                 |                 | groupchat     \
    \  |\n    |                 |                 | message         |\n    |     \
    \            |                 |<................|\n    | (F47) MSRP 200 OK  \
    \               |                 |\n    |<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|\
    \                 |\n    .                 .                 .               \
    \  .\n    .                 .                 .                 .\n    | (F48)\
    \ MSRP SEND                   |                 |\n    |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>|\
    \                 |\n    | (F49) MSRP 200 OK                 |               \
    \  |\n    |<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|                 |\n    |     \
    \            |                 | (F50) XMPP      |\n    |                 |  \
    \               | message         |\n    |                 |                 |................>|\n\
    \    .                 .                 .                 .\n    .          \
    \       .                 .                 .\n    | (F51) MSRP NICKNAME     \
    \          |                 |\n    |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>|    \
    \             |\n    |                 |                 | (F52) XMPP      |\n\
    \    |                 |                 | presence        |\n    |          \
    \       |                 |................>|\n    |                 |       \
    \          | (F53) XMPP      |\n    |                 |                 | presence\
    \        |\n    |                 |                 | error           |\n    |\
    \                 |                 |<................|\n    | (F54) MSRP 425\
    \ Error              |                 |\n    |<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|\
    \                 |\n    .                 .                 .               \
    \  .\n    .                 .                 .                 .\n    | (F55)\
    \ SIP REFER |                 |                 |\n    |****************>|   \
    \              |                 |\n    | (F56) SIP       |                 |\
    \                 |\n    | 200 OK          |                 |               \
    \  |\n    |<****************|                 |                 |\n    | (F57)\
    \ SIP       |                 |                 |\n    | NOTIFY          |   \
    \              |                 |\n    |<****************|                 |\
    \                 |\n    |                 | (F58) XMPP message invite       \
    \  |\n    |                 |..................................>|\n    .     \
    \            .                 .                 .\n    .                 .  \
    \               .                 .\n    | (F59) SIP BYE   |                 |\
    \                 |\n    |****************>|                 |               \
    \  |\n    |                 | (F60) XMPP presence unavailable   |\n    |     \
    \            |..................................>|\n    |                 | (F61)\
    \ XMPP presence unavailable   |\n    |                 |<..................................|\n\
    \    | (F62) SIP       |                 |                 |\n    | 200 OK   \
    \       |                 |                 |\n    |<****************|       \
    \          |                 |\n    |                 |                 |    \
    \             |\n   If the XMPP presence stanza is received before the SIP SUBSCRIBE\n\
    \   dialog is established for the conference event, then the server\n   SHOULD\
    \ cache the participant list until the subscription is\n   established and delivered\
    \ in a SIP NOTIFY request.\n"
- title: 6.1.  Enter Room
  contents:
  - "6.1.  Enter Room\n   When the SIP user (\"Romeo\") wants to join a groupchat\
    \ room\n   (\"capulet\"), he first has to start the SIP session by sending out\
    \ a\n   SIP INVITE request containing an offered session description that\n  \
    \ includes an MSRP media line accompanied by mandatory 'path' and\n   'chatroom'\
    \ attributes.  Here we assume that Romeo's user agent has\n   been configured\
    \ to be aware of an MSRP switch (chat.example.org) it\n   can use.  The MSRP media\
    \ line is also accompanied by an 'accept-\n   types' attribute specifying support\
    \ for a Message/CPIM [RFC3862] top-\n   level wrapper for the MSRP message.\n\
    \   Example 27: SIP User Starts Session (F35)\n   |  INVITE sip:capulet@rooms.example.com\
    \ SIP/2.0\n   |  From: \"Romeo\" <sip:romeo@example.org>;tag=43524545\n   |  To:\
    \ <sip:capulet@rooms.example.com>\n   |  Contact: <sip:romeo@example.org>;gr=dr4hcr0st3lup4c\n\
    \   |  Call-ID: 08CFDAA4-FAED-4E83-9317-253691908CD2\n   |  CSeq: 1 INVITE\n \
    \  |  Content-Type: application/sdp\n   |  Content-Length: ...\n   |\n   |  c=IN\
    \ IP4 s2x.example.org\n   |  m=message 7313 TCP/MSRP *\n   |  a=accept-types:message/cpim\
    \ text/plain text/html\n   |  a=accept-wrapped-types:text/plain text/html\n  \
    \ |  a=path:msrp://chat.example.org:7313/ansp71weztas;tcp\n   |  a=chatroom:nickname\
    \ private-messages\n   Upon receiving the INVITE, the SIP proxy needs to determine\
    \ the\n   identity of the domain portion of the Request-URI or To header, which\n\
    \   it does by following the procedures discussed in [RFC7247].  Here we\n   assume\
    \ that the SIP proxy has determined that the domain is serviced\n   by an XMPP\
    \ server, that it contains or has available to it a SIP-to-\n   XMPP gateway or\
    \ connection manager (which enables it to speak\n   natively to XMPP servers),\
    \ and that it hands off the message to the\n   gateway.\n   Implementations MAY\
    \ wait until the nickname is set with an MSRP\n   NICKNAME chunk before joining\
    \ the XMPP MUC or MAY choose a temporary\n   nickname (such as the SIP From header\
    \ display name) and use it to\n   join the room.  Here we assume the latter.\n\
    \   Example 28: SIP-to-XMPP Gateway ACKs Session (F36)\n   |  SIP/2.0 200 OK\n\
    \   |  From: \"Romeo\" <sip:romeo@example.org>;tag=43524545\n   |  To: <sip:capulet@rooms.example.com>;tag=a3343df32\n\
    \   |  Contact: <sip:rooms.example.com;transport=tcp>;isfocus\n   |  Call-ID:\
    \ 08CFDAA4-FAED-4E83-9317-253691908CD2\n   |  CSeq: 1 INVITE\n   |  Content-Type:\
    \ application/sdp\n   |\n   |  m=message 8763 TCP/MSRP *\n   |  a=accept-types:message/cpim\
    \ text/plain text/html\n   |  a=accept-wrapped-types:text/plain text/html\n  \
    \ |  a=path:msrp://chat.example.org:8763/lkjh37s2s20w2a;tcp\n   |  a=chatroom:nickname\
    \ private-messages\n   The SIP/MSRP user agent subscribes to a conference event\
    \ package at\n   the destination groupchat service.\n   Example 29: Gateway Subscribes\
    \ to the Conference (F38)\n   |  SUBSCRIBE sip:capulet@rooms.example.com SIP/2.0\n\
    \   |  To: <sip:capulet@rooms.example.com>;tag=a3343df32\n   |  From: \"Romeo\"\
    \ <sip:romeo@example.org>;tag=43524545\n   |  Contact: <sip:romeo@example.org>;gr=dr4hcr0st3lup4c\n\
    \   |  Call-ID: 08CFDAA4-FAED-4E83-9317-253691908CD2\n   |  CSeq: 2 SUBSCRIBE\n\
    \   |  Event: conference\n   |  Expires: 600\n   |  Accept: application/conference-info+xml\n\
    \   |  Allow-Events: conference\n   |  Content-Length: 0\n   After the conference\
    \ subscription request is acknowledged, the SIP-\n   to-XMPP gateway sends presence\
    \ from Romeo to the MUC chat room.\n   Example 30: Romeo Enters XMPP Chat Room\
    \ (F40)\n   |  <presence from='romeo@example.org/dr4hcr0st3lup4c'\n   |      \
    \      to='montague@chat.example.org/Romeo'>\n   |    <x xmlns='http://jabber.org/protocol/muc'/>\n\
    \   |  </presence>\n"
- title: 6.2.  Presence Broadcast
  contents:
  - "6.2.  Presence Broadcast\n   If the MUC service is able to add the SIP/MSRP user\
    \ to the room, it\n   sends presence from all the existing occupants' room JIDs\
    \ to the new\n   occupant's full JID, including extended presence information\
    \ about\n   roles in an <x/> element.\n   Example 31: XMPP Service Sends Presence\
    \ from Existing Occupants to\n   New Occupant (F41)\n   |  <presence from='capulet@rooms.example.com/Romeo'\n\
    \   |            to='romeo@example.org/dr4hcr0st3lup4c'>\n   |    <x xmlns='http://jabber.org/protocol/muc#user'>\n\
    \   |      <item affiliation='none' role='participant'/>\n   |      <status code='110'/>\n\
    \   |    </x>\n   |  </presence>\n   |\n   |  <presence from='capulet@rooms.example.com/Ben'\n\
    \   |            to='romeo@example.org/dr4hcr0st3lup4c'>\n   |    <x xmlns='http://jabber.org/protocol/muc#user'>\n\
    \   |      <item affiliation='none' role='participant'/>\n   |    </x>\n   | \
    \ </presence>\n   |\n   |  <presence from='capulet@rooms.example.com/JuliC'\n\
    \   |            to='romeo@example.org/dr4hcr0st3lup4c'>\n   |    <x xmlns='http://jabber.org/protocol/muc#user'>\n\
    \   |      <item affiliation='none' role='participant'/>\n   |    </x>\n   | \
    \ </presence>\n   Upon receiving these presence stanzas, if the conference focus\
    \ has\n   already completed the subscription to the conference event package\n\
    \   [RFC4575], the XMPP-to-SIP gateway translates them into a SIP NOTIFY\n   request\
    \ containing the participant list (represented in the\n   conference-info format\
    \ specified in [RFC4575]).\n   Example 32: SIP Mapping of XMPP Participant Presence\
    \ Stanzas (F42)\n   |  NOTIFY sip:romeo@example.org SIP/2.0\n   |  To: <sip:romeo@example.org>;tag=43524545\n\
    \   |  From: <sip:capulet@rooms.example.com>;tag=a3343df32\n   |  Call-ID: 08CFDAA4-FAED-4E83-9317-253691908CD2\n\
    \   |  CSeq: 3 NOTIFY\n   |  Event: conference\n   |  Subscription-State: active;expires=3600\n\
    \   |  Content-Type: application/conference-info+xml\n   |  Content-Length: ...\n\
    \   |\n   |  <conference-info version=\"0\" state=\"full\"\n   |      entity=\"\
    sip:capulet@rooms.example.com\">\n   |    <conference-description>\n   |     \
    \ <subject>Today in Verona</subject>\n   |      <conf-uris>\n   |        <entry>\n\
    \   |          <uri>tel:+18882934234</uri>\n   |          <uri>sip:capulet@rooms.example.com</uri>\n\
    \   |        </entry>\n   |      </conf-uris>\n   |   </conference-description>\n\
    \   |   <users>\n   |     <user entity=\"sip:capulet@rooms.example.com;gr=JuliC\"\
    \n   |           state=\"full\">\n   |       <display-text>JuliC</display-text>\n\
    \   |       <roles>\n   |         <entry>participant</entry>\n   |       </roles>\n\
    \   |       <endpoint entity=\"sip:capulet@rooms.example.com;gr=JuliC\"\n   |\
    \                 state=\"full\">\n   |         <status>connected</status>\n \
    \  |         <media id=\"211835821\">\n   |           <type>message</type>\n \
    \  |         </media>\n   |       </endpoint>\n   |     </user>\n   |     <user\
    \ entity=\"sip:capulet@rooms.example.com;gr=Ben\"\n   |           state=\"full\"\
    >\n   |       <display-text>Ben</display-text>\n   |       <roles>\n   |     \
    \    <entry>participant</entry>\n   |       </roles>\n   |       <endpoint entity=\"\
    sip:capulet@rooms.example.com;gr=Ben\"\n   |                 state=\"full\">\n\
    \   |         <status>connected</status>\n   |         <media id=\"211835822\"\
    >\n   |           <type>message</type>\n   |         </media>\n   |       </endpoint>\n\
    \   |     </user>\n   |   </users>\n   |  </conference-info>\n   Because the \"\
    room roster\" is communicated in XMPP by means of\n   multiple presence stanzas\
    \ (one for each participant) whereas the\n   participant list is communicated\
    \ in SIP by means of a single\n   conference information document, the SIP-to-XMPP\
    \ gateway will need to\n   keep track of the user's SIP URI and the mapping of\
    \ that URI into an\n   XMPP address; then, based on that mapping, it will need\
    \ to determine\n   when it has received a complete room roster from the MUC room,\
    \ i.e.,\n   when it has received the in-room presence of the SIP user (which\n\
    \   according to [XEP-0045] is the last presence stanza received in the\n   initial\
    \ batch sent after joining).  Once that happens, the SIP-to-\n   XMPP gateway\
    \ can construct the conference information document\n   containing the complete\
    \ participant list and send that to the SIP\n   user.\n"
- title: 6.3.  Exchange Messages
  contents:
  - "6.3.  Exchange Messages\n   Once the user has joined the chat room, the user\
    \ can exchange an\n   unbounded number of messages, both public and private.\n\
    \   The mapping of MSRP syntax elements to XMPP syntax elements MUST be\n   as\
    \ shown in the following table.  (Mappings for elements not\n   mentioned are\
    \ undefined.)\n   Table 5: Message Syntax Mapping from MSRP Message to XMPP\n\
    \       +-----------------------------+-----------------------------+\n      \
    \ |  CPIM Header                |XMPP Element or Attribute    |\n       +-----------------------------+-----------------------------+\n\
    \       |  To                         |  to                         |\n      \
    \ |  From                       |  from                       |\n       |  body\
    \ of the SEND request   |  <body/>                    |\n       +-----------------------------+-----------------------------+\n"
- title: 6.3.1.  Send a Message to All Occupants
  contents:
  - "6.3.1.  Send a Message to All Occupants\n   When Romeo wants to send a message\
    \ to all other occupants in the\n   room, he sends an MSRP SEND request to <room@service>\n\
    \   (<capulet@rooms.example.com> in our example).\n   The following examples show\
    \ an exchange of a public message.\n   Example 33: Romeo Sends a Message to the\
    \ Chat Room (F44)\n   |  MSRP a786hjs2 SEND\n   |  To-Path: msrp://room.example.com:7313/ansp71weztas;tcp\n\
    \   |  From-Path: msrp://chat.example.org:8763/lkjh37s2s20w2a;tcp\n   |  Message-ID:\
    \ 87652492\n   |  Byte-Range: 1-*/*\n   |  Content-Type: message/cpim\n   |\n\
    \   |  To: <sip:capulet@rooms.example.com>\n   |  From: \"Romeo\" <sip:romeo@example.org>;gr=dr4hcr0st3lup4c\n\
    \   |  DateTime: 2008-10-15T15:02:31-03:00\n   |  Content-Type: text/plain\n \
    \  |\n   |  Romeo is here!\n   |  -------a786hjs2$\n   Upon receiving the SEND\
    \ request, if the request either contains a\n   Failure-Report header field value\
    \ of \"yes\" or does not contain a\n   Failure-Report header at all, the SIP-to-XMPP\
    \ gateway immediately\n   translates it into an XMPP message stanza and then generates\
    \ and\n   sends an MSRP response.\n   Example 34: XMPP Mapping of Message (F45)\n\
    \   |  <message from='romeo@example.org/dr4hcr0st3lup4c'\n   |           to='capulet@rooms.example.com'\n\
    \   |           type='groupchat'\n   |           id='8gbx1g4p'>\n   |    <body>Romeo\
    \ is here!</body>\n   |  </message>\n   Example 35: MSRP Response to Public Message\
    \ (F47)\n   |  MSRP d93kswow 200 OK\n   |  To-Path: msrp://rooms.example.com:8763/lkjh37s2s20w2a;tcp\n\
    \   |  From-Path: msrp://chat.example.org:7313/ansp71weztas;tcp\n   |  -------d93kswow$\n\
    \   Note well that the XMPP MUC room will reflect the sender's message\n   back\
    \ to all users, including the sender.  The MSRP-to-XMPP gateway\n   SHOULD wait\
    \ until receiving this reflected message before sending an\n   MSRP 200 OK reply\
    \ to the original sender.\n"
- title: 6.3.2.  Send a Private Message
  contents:
  - "6.3.2.  Send a Private Message\n   Romeo can send a \"private message\" to a\
    \ selected occupant via the\n   chat room service by sending a message to the\
    \ occupant's room\n   nickname.\n   The following examples show an exchange of\
    \ a private message.\n   Example 36: Romeo Sends a Private Message (F48)\n   |\
    \  MSRP a786hjs2 SEND\n   |  To-Path: msrp://rooms.example.com:7313/ansp71weztas;tcp\n\
    \   |  From-Path: msrp://chat.example.org:8763/lkjh37s2s20w2a;tcp\n   |  Message-ID:\
    \ 87652492\n   |  Byte-Range: 1-*/*\n   |  Content-Type: message/cpim\n   |\n\
    \   |  To: <sip:capulet@rooms.example.com>;gr=JuliC\n   |  From: \"Romeo\" <sip:romeo@example.org>;gr=dr4hcr0st3lup4c\n\
    \   |  DateTime: 2008-10-15T15:02:31-03:00\n   |  Content-Type: text/plain\n \
    \  |\n   |  I am here!!!\n   |  -------a786hjs2$\n   The MSRP switch is responsible\
    \ for transforming the 'From' address\n   into an in-room address (not shown).\n\
    \   Once the MSRP switch sends that message to the gateway, the gateway\n   is\
    \ responsible for translating it into XMPP syntax.\n   Example 37: XMPP Mapping\
    \ of Private Message (F50)\n   |  <message from='capulet@rooms.example.com/Romeo'\n\
    \   |           to='capulet@rooms.example.com/JuliC'\n   |           type='chat'\n\
    \   |           id='rg2ca9k7'>\n   |    <body>I am here!!!</body>\n   |  </message>\n"
- title: 6.4.  Change Nickname
  contents:
  - "6.4.  Change Nickname\n   If Romeo decides to change his nickname within the\
    \ room, he sends a\n   new MSRP NICKNAME request.  In fact, modification of the\
    \ nickname in\n   MSRP is not different from the initial reservation and usage\
    \ of a\n   nickname.\n   Example 38: MSRP User Changes Nickname (F51)\n   |  MSRP\
    \ a786hjs2 NICKNAME\n   |  To-Path: msrp://chat.example.org:7313/ansp71weztas;tcp\n\
    \   |  From-Path: msrp://rooms.example.com:8763/lkjh37s2s20w2a;tcp\n   |  Use-Nickname:\
    \ \"montecchi\"\n   |  -------a786hjs2\n   Upon receiving such a message, the\
    \ MSRP-to-XMPP gateway translates it\n   into an XMPP presence stanza.\n   Example\
    \ 39: XMPP Mapping of Nickname Change (F52)\n   |  <presence from='romeo@example.org/dr4hcr0st3lup4c'\n\
    \   |            to='capulet@rooms.example.com/montecchi'/>\n   The XMPP server\
    \ will analyze the nickname allocation and determine if\n   the requested nickname\
    \ is available.  In case the nickname is not\n   available or not usable, the\
    \ server will generate a presence stanza\n   of type \"error\" specifying a <conflict/>\
    \ error condition.\n   Example 40: XMPP Conflict Error for Nickname (F53)\n  \
    \ |  <presence from='capulet@rooms.example.com/Romeo'\n   |            to='romeo@example.org/dr4hcr0st3lup4c'\n\
    \   |            type='error'>\n   |    <x xmlns='http://jabber.org/protocol/muc'/>\n\
    \   |    <error type='cancel' by='capulet@rooms.example.com'>\n   |      <conflict\
    \ xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n   |    </error>\n   |  </presence>\n\
    \   Upon receiving this stanza, the XMPP-to-MSRP gateway will reply to\n   the\
    \ NICKNAME request with code 425.\n   Example 41: Gateway Translates XMPP Nickname\
    \ Conflict to MSRP Error\n   Code (F54)\n   |  MSRP a786hjs2 425 Nickname usage\
    \ failed\n   |  To-Path: msrp://chat.example.org:7313/ansp71weztas;tcp\n   | \
    \ From-Path: msrp://rooms.example.com:8763/lkjh37s2s20w2a;tcp\n   |  -------a786hjs2\n"
- title: 6.5.  Invite Another User to a Room
  contents:
  - "6.5.  Invite Another User to a Room\n   If a SIP user wants to invite another\
    \ user to join the conference he\n   will send a REFER request indicating who\
    \ needs to be invited in the\n   Refer-To header, as per Section 5.5 of [RFC4579].\n\
    \   Example 42: SIP User Invites Another User (F55)\n   |  REFER sip:capulet@rooms.example.com\
    \ SIP/2.0\n   |  To: <sip:capulet@rooms.example.com>;tag=a3343df32\n   |  From:\
    \ \"Romeo\" <sip:romeo@example.org>;tag=5534562\n   |  Call-ID: 08CFDAA4-FAED-4E83-9317-253691908CD2\n\
    \   |  CSeq: 4 REFER\n   |  Contact: <sip:romeo@example.org>;gr=dr4hcr0st3lup4c\n\
    \   |  Accept: message/sipfrag\n   |  Refer-To: <sip:benvolio@example.com>\n \
    \  |  Supported: replaces\n   |  Content-Length: 0\n   The SIP-to-XMPP gateway\
    \ then acknowledges the SIP REFER request with\n   a 200 OK response (step F56).\n\
    \   The gateway will then send a NOTIFY request as per [RFC3515]\n   indicating\
    \ that the invitation is in progress.  Since there is no way\n   to know the progress\
    \ of the invitation until the user has joined,\n   implementations are advised\
    \ to terminate the REFER dialog\n   subscription upon receiving the first NOTIFY\
    \ request, with a status\n   code of 100 Trying.\n   Example 43: Progress Notification\
    \ for Invitation (F56)\n   |  NOTIFY sip:romeo@example.org SIP/2.0\n   |  To:\
    \ <sip:romeo@example.org>;tag=5534562\n   |  From: <sip:capulet@rooms.example.com>;tag=a3343df32\n\
    \   |  Call-ID: 08CFDAA4-FAED-4E83-9317-253691908CD2\n   |  CSeq: 5 NOTIFY\n \
    \  |  Event: refer\n   |  Subscription-State: terminated;reason=noresource\n \
    \  |  Contact: <sip:capulet@rooms.example.com;transport=tcp>;isfocus\n   |  Content-Type:\
    \ message/sipfrag;version=2.0\n   |  Content-Length: ...\n   |\n   |  SIP/2.0\
    \ 100 Trying\n"
- title: 6.6.  Exit Room
  contents:
  - "6.6.  Exit Room\n   If Romeo decides to exit the chat room, his client sends\
    \ a SIP BYE to\n   the <montague@chat.example.org> chat room.\n   Example 44:\
    \ Romeo Terminates Session (F59)\n   |  BYE sip:capulet@rooms.example.com SIP/2.0\n\
    \   |  Max-Forwards: 70\n   |  From: \"Romeo\" <sip:romeo@example.org>;tag=5534562\n\
    \   |  To: <sip:capulet@rooms.example.com>;tag=a3343df32\n   |  Call-ID: 08CFDAA4-FAED-4E83-9317-253691908CD2\n\
    \   |  CSeq: 6 BYE\n   |  Content-Length: 0\n   Upon receiving the SIP BYE, the\
    \ SIP-to-XMPP gateway translates it\n   into a presence stanza of type \"unavailable\"\
    \ (F60) and sends it to\n   the XMPP MUC room service.  Then, the SIP-to-XMPP\
    \ gateway responds\n   with a 200 OK to the MSRP user (F62).\n   Example 45: Romeo\
    \ Exits Chat Room (F60)\n   |  <presence from='romeo@example.org/dr4hcr0st3lup4c'\n\
    \   |            to='capulet@rooms.example.com/Romeo'\n   |            type='unavailable'/>\n"
- title: 7.  Handling of Nicknames and Display Names
  contents:
  - "7.  Handling of Nicknames and Display Names\n   Fundamental rules for mapping\
    \ addresses between XMPP and SIP are\n   provided in [RFC7247].  However, chat\
    \ rooms include a more\n   specialized, unique identifier for each participant\
    \ in a room, called\n   a \"nickname\".  Implementations SHOULD apply the rules\
    \ for preparation\n   and comparison of nicknames specified in [RFC7700].\n  \
    \ In addition to nicknames, some groupchat implementations also include\n   display\
    \ names (which might or might not be different from users'\n   nicknames).  A\
    \ display name need not be unique within the context of\n   a room but instead\
    \ simply provides a user-friendly name for a\n   participant.\n   In the SIP conference\
    \ event package, the nickname is the value of the\n   Centralized Conferencing\
    \ (XCON) 'nickname' attribute of the <user/>\n   element [RFC6501] and the display\
    \ name is the XML character data of\n   the conference-info <display-text/> element\
    \ [RFC4575].  In XMPP, the\n   nickname is the value of the resourcepart of the\
    \ occupant JID\n   [XEP-0045] and the display name is the XML character data of\
    \ the\n   <nick/> element [XEP-0172].\n   In practice, the <display-text/> element\
    \ is treated as canonical in\n   SIP implementations, and the <nick/> element\
    \ is rarely used in XMPP\n   implementations.  Therefore, for display purposes,\
    \ SIP\n   implementations ought to use the <display-text/> element if the XCON\n\
    \   'nickname' attribute is not present, and XMPP implementations ought\n   to\
    \ use the resourcepart of the occupant JID if the <nick/> element is\n   not present.\n\
    \   If there is a conflict between the SIP nickname and the XMPP\n   nickname,\
    \ the SIP-to-XMPP or XMPP-to-SIP gateway is responsible for\n   adjusting the\
    \ nickname to avoid the conflict and for informing the\n   SIP or XMPP client\
    \ of the unique nickname used to join the chat room.\n"
- title: 8.  Message Size
  contents:
  - "8.  Message Size\n   It is possible for MSRP messages to exceed the size allowed\
    \ by an\n   XMPP service on the far end of an MSRP-to-XMPP gateway; see [RFC7573]\n\
    \   for a discussion of this issue.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   The security considerations of [RFC3261], [RFC4975],\
    \ [RFC6120],\n   [RFC7247], [RFC7701], and [XEP-0045] apply.\n   This document\
    \ specifies methods for exchanging groupchat messages\n   through a gateway that\
    \ translates between SIP and XMPP.  Such a\n   gateway MUST be compliant with\
    \ the minimum security requirements of\n   the protocols for which it translates\
    \ (i.e., MSRP/SIP and XMPP).  The\n   addition of gateways to the security models\
    \ of MSRP, SIP, and XMPP\n   introduces some new risks.  In particular, end-to-end\
    \ security\n   properties (especially confidentiality and integrity) between user\n\
    \   agents that interface through an MSRP-to-XMPP gateway can be provided\n  \
    \ only if common formats are supported; unfortunately, although\n   [RFC3862]\
    \ specifies such a format for one-to-one instant messages,\n   the problem of\
    \ end-to-end security for multi-party messaging has not\n   been solved in a standardized\
    \ way.\n   Some of the features that are not addressed by the minimal\n   interoperability\
    \ baseline defined in this document are relevant to\n   security, such as the\
    \ ability to administer rooms, kick out and ban\n   users, and enable room moderation.\
    \  Users needing to take advantage\n   of such features cannot do so through a\
    \ gateway in a standardized\n   manner and therefore will need to use native clients\
    \ for the relevant\n   protocol (MSRP or XMPP).\n   As mentioned in [RFC7572],\
    \ there are several possible methods for\n   end-to-end encryption of one-to-one\
    \ instant messages.  Unfortunately,\n   because there is no widely deployed method\
    \ for end-to-end encryption\n   of multi-party instant messages, this document\
    \ cannot provide a\n   recommendation in this regard.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n    \
    \          A., Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler,\
    \ \"SIP: Session Initiation Protocol\", RFC 3261,\n              DOI 10.17487/RFC3261,\
    \ June 2002,\n              <http://www.rfc-editor.org/info/rfc3261>.\n   [RFC4579]\
    \  Johnston, A. and O. Levin, \"Session Initiation Protocol\n              (SIP)\
    \ Call Control - Conferencing for User Agents\",\n              BCP 119, RFC 4579,\
    \ DOI 10.17487/RFC4579, August 2006,\n              <http://www.rfc-editor.org/info/rfc4579>.\n\
    \   [RFC4975]  Campbell, B., Ed., Mahy, R., Ed., and C. Jennings, Ed.,\n     \
    \         \"The Message Session Relay Protocol (MSRP)\", RFC 4975,\n         \
    \     DOI 10.17487/RFC4975, September 2007,\n              <http://www.rfc-editor.org/info/rfc4975>.\n\
    \   [RFC5627]  Rosenberg, J., \"Obtaining and Using Globally Routable User\n \
    \             Agent URIs (GRUUs) in the Session Initiation Protocol\n        \
    \      (SIP)\", RFC 5627, DOI 10.17487/RFC5627, October 2009,\n              <http://www.rfc-editor.org/info/rfc5627>.\n\
    \   [RFC6120]  Saint-Andre, P., \"Extensible Messaging and Presence\n        \
    \      Protocol (XMPP): Core\", RFC 6120, DOI 10.17487/RFC6120,\n            \
    \  March 2011, <http://www.rfc-editor.org/info/rfc6120>.\n   [RFC6121]  Saint-Andre,\
    \ P., \"Extensible Messaging and Presence\n              Protocol (XMPP): Instant\
    \ Messaging and Presence\",\n              RFC 6121, DOI 10.17487/RFC6121, March\
    \ 2011,\n              <http://www.rfc-editor.org/info/rfc6121>.\n   [RFC7247]\
    \  Saint-Andre, P., Houri, A., and J. Hildebrand,\n              \"Interworking\
    \ between the Session Initiation Protocol\n              (SIP) and the Extensible\
    \ Messaging and Presence Protocol\n              (XMPP): Architecture, Addresses,\
    \ and Error Handling\",\n              RFC 7247, DOI 10.17487/RFC7247, May 2014,\n\
    \              <http://www.rfc-editor.org/info/rfc7247>.\n   [RFC7573]  Saint-Andre,\
    \ P. and S. Loreto, \"Interworking between the\n              Session Initiation\
    \ Protocol (SIP) and the Extensible\n              Messaging and Presence Protocol\
    \ (XMPP): One-to-One Text\n              Chat Sessions\", RFC 7573, DOI 10.17487/RFC7573,\
    \ June 2015,\n              <http://www.rfc-editor.org/info/rfc7573>.\n   [RFC7700]\
    \  Saint-Andre, P., \"Preparation, Enforcement, and Comparison\n             \
    \ of Internationalized Strings Representing Nicknames\",\n              RFC 7700,\
    \ DOI 10.17487/RFC7700, December 2015,\n              <http://www.rfc-editor.org/info/rfc7700>.\n\
    \   [RFC7701]  Niemi, A., Garcia-Martin, M., and G. Sandbakken, \"Multi-\n   \
    \           party Chat Using the Message Session Relay Protocol\n            \
    \  (MSRP)\", RFC 7701, DOI 10.17487/RFC7701, December 2015,\n              <http://www.rfc-editor.org/info/rfc7701>.\n\
    \   [XEP-0045] Saint-Andre, P., \"Multi-User Chat\", XSF XEP 0045, February\n\
    \              2012, <http://www.xmpp.org/extensions/xep-0045.html>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC3515]  Sparks, R., \"The Session Initiation\
    \ Protocol (SIP) Refer\n              Method\", RFC 3515, DOI 10.17487/RFC3515,\
    \ April 2003,\n              <http://www.rfc-editor.org/info/rfc3515>.\n   [RFC3862]\
    \  Klyne, G. and D. Atkins, \"Common Presence and Instant\n              Messaging\
    \ (CPIM): Message Format\", RFC 3862,\n              DOI 10.17487/RFC3862, August\
    \ 2004,\n              <http://www.rfc-editor.org/info/rfc3862>.\n   [RFC4353]\
    \  Rosenberg, J., \"A Framework for Conferencing with the\n              Session\
    \ Initiation Protocol (SIP)\", RFC 4353,\n              DOI 10.17487/RFC4353,\
    \ February 2006,\n              <http://www.rfc-editor.org/info/rfc4353>.\n  \
    \ [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n     \
    \         Description Protocol\", RFC 4566, DOI 10.17487/RFC4566,\n          \
    \    July 2006, <http://www.rfc-editor.org/info/rfc4566>.\n   [RFC4575]  Rosenberg,\
    \ J., Schulzrinne, H., and O. Levin, Ed., \"A\n              Session Initiation\
    \ Protocol (SIP) Event Package for\n              Conference State\", RFC 4575,\
    \ DOI 10.17487/RFC4575, August\n              2006, <http://www.rfc-editor.org/info/rfc4575>.\n\
    \   [RFC6501]  Novo, O., Camarillo, G., Morgan, D., and J. Urpalainen,\n     \
    \         \"Conference Information Data Model for Centralized\n              Conferencing\
    \ (XCON)\", RFC 6501, DOI 10.17487/RFC6501,\n              March 2012, <http://www.rfc-editor.org/info/rfc6501>.\n\
    \   [RFC6502]  Camarillo, G., Srinivasan, S., Even, R., and J.\n             \
    \ Urpalainen, \"Conference Event Package Data Format\n              Extension\
    \ for Centralized Conferencing (XCON)\", RFC 6502,\n              DOI 10.17487/RFC6502,\
    \ March 2012,\n              <http://www.rfc-editor.org/info/rfc6502>.\n   [RFC7572]\
    \  Saint-Andre, P., Houri, A., and J. Hildebrand,\n              \"Interworking\
    \ between the Session Initiation Protocol\n              (SIP) and the Extensible\
    \ Messaging and Presence Protocol\n              (XMPP): Instant Messaging\",\
    \ RFC 7572,\n              DOI 10.17487/RFC7572, June 2015,\n              <http://www.rfc-editor.org/info/rfc7572>.\n\
    \   [RFC7614]  Sparks, R., \"Explicit Subscriptions for the REFER Method\",\n\
    \              RFC 7614, DOI 10.17487/RFC7614, August 2015,\n              <http://www.rfc-editor.org/info/rfc7614>.\n\
    \   [RFC7647]  Sparks, R. and A. Roach, \"Clarifications for the Use of\n    \
    \          REFER with RFC 6665\", RFC 7647, DOI 10.17487/RFC7647,\n          \
    \    September 2015, <http://www.rfc-editor.org/info/rfc7647>.\n   [XEP-0172]\
    \ Saint-Andre, P. and V. Mercier, \"User Nickname\", XSF\n              XEP 0172,\
    \ March 2012,\n              <http://xmpp.org/extensions/xep-0172.html>.\n   [XEP-0249]\
    \ Saint-Andre, P., \"Direct MUC Invitations\", XSF XEP 0249,\n              September\
    \ 2011,\n              <http://xmpp.org/extensions/xep-0249.html>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Special thanks to Fabio Forno for coauthoring an early draft\
    \ version\n   of this document and to Ben Campbell for his detailed and insightful\n\
    \   reviews.\n   Thanks also to Dave Crocker, Philipp Hancke, Olle Johansson,\
    \ Paul\n   Kyzivat, and Matt Ryan for their feedback.\n   Leif Johansson reviewed\
    \ the document on behalf of the Security\n   Directorate.\n   Stephen Farrell,\
    \ Barry Leiba, Pete Resnick, and Martin Stiemerling\n   provided helpful input\
    \ during IESG review.\n   The authors gratefully acknowledge the assistance of\
    \ Markus Isomaki\n   and Yana Stamcheva as the working group Chairs and Gonzalo\
    \ Camarillo\n   and Alissa Cooper as the sponsoring Area Directors.\n   Peter\
    \ Saint-Andre wishes to acknowledge Cisco Systems, Inc., for\n   employing him\
    \ during his work on earlier draft versions of this\n   document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Peter Saint-Andre\n   &yet\n   Email: peter@andyet.com\n\
    \   URI:   https://andyet.com/\n   Saul Ibarra Corretge\n   AG Projects\n   Dr.\
    \ Leijdsstraat 92\n   Haarlem  2021RK\n   The Netherlands\n   Email: saul@ag-projects.com\n\
    \   Salvatore Loreto\n   Ericsson\n   Hirsalantie 11\n   Jorvas  02420\n   Finland\n\
    \   Email: Salvatore.Loreto@ericsson.com\n"
