- title: __initial_text__
  contents:
  - '                           Host Resources MIB

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" for the standardization state and status\n   of this protocol.\
    \  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a MIB for use with managing host systems.  The\
    \ term\n   \"host\" is construed to mean any computer that communicates with other\n\
    \   similar computers attached to the internet and that is directly used\n   by\
    \ one or more human beings. Although this MIB does not necessarily\n   apply to\
    \ devices whose primary function is communications services\n   (e.g., terminal\
    \ servers, routers, bridges, monitoring equipment),\n   such relevance is not\
    \ explicitly precluded.  This MIB instruments\n   attributes common to all internet\
    \ hosts including, for example, both\n   personal computers and systems that run\
    \ variants of Unix.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   4.6 The Host Resources  Running  Software  Performance\n"
- title: 1.  The Network Management Framework
  contents:
  - "1.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of three\n   components.  They are:\n      STD 16, RFC 1155\
    \ [1] which defines the SMI, the mechanisms used\n      for describing and naming\
    \ objects for the purpose of management.\n      STD 16, RFC 1212 [2] defines a\
    \ more concise description mechanism,\n      which is wholly consistent with the\
    \ SMI.\n      STD 17, RFC 1213 [3] which defines MIB-II, the core set of managed\n\
    \      objects for the Internet suite of protocols.\n      STD 15, RFC 1157 [4]\
    \ which defines the SNMP, the protocol used for\n      network access to managed\
    \ objects.\n   The Framework permits new objects to be defined for the purpose\
    \ of\n   experimentation and evaluation.\n   Managed objects are accessed via\
    \ a virtual information store, termed\n   the Management Information Base or MIB.\
    \  Within a given MIB module,\n   objects are defined using STD 16, RFC 1212's\
    \ OBJECT-TYPE macro.  At a\n   minimum, each object has a name, a syntax, an access-level,\
    \ and an\n   implementation-status.\n   The name is an object identifier, an administratively\
    \ assigned name,\n   which specifies an object type.  The object type together\
    \ with an\n   object instance serves to uniquely identify a specific instantiation\n\
    \   of the object.  For human convenience, we often use a textual string,\n  \
    \ termed the object descriptor, to also refer to the object type.\n   The syntax\
    \ of an object type defines the abstract data structure\n   corresponding to that\
    \ object type.  The ASN.1[5] language is used for\n   this purpose.  However,\
    \ RFC 1155 purposely restricts the ASN.1\n   constructs which may be used.  These\
    \ restrictions are explicitly made\n   for simplicity.\n   The access-level of\
    \ an object type defines whether it makes \"protocol\n   sense\" to read and/or\
    \ write the value of an instance of the object\n   type.  (This access-level is\
    \ independent of any administrative\n   authorization policy.)\n   The implementation-status\
    \ of an object type indicates whether the\n   object is mandatory, optional, obsolete,\
    \ or deprecated.\n"
- title: 2.  Host Resources MIB
  contents:
  - "2.  Host Resources MIB\n   The Host Resources MIB defines a uniform set of objects\
    \ useful for\n   the management of host computers.  Host computers  are independent\
    \ of\n   the operating system, network services, or any software application.\n\
    \   The Host Resources MIB defines objects which are common across many\n   computer\
    \ system architectures.\n   In addition, there are objects in MIB-II [3] which\
    \ also provide host\n   management functionality. Implementation of the System\
    \ and Interfaces\n   groups is mandatory for implementors of the Host Resources\
    \ MIB.\n"
- title: 3.  Definitions
  contents:
  - "3.  Definitions\n   HOST-RESOURCES-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n  \
    \     OBJECT-TYPE               FROM RFC-1212\n       DisplayString          \
    \   FROM RFC1213-MIB\n       TimeTicks,\n       Counter, Gauge            FROM\
    \ RFC1155-SMI;\n   host     OBJECT IDENTIFIER ::= { mib-2 25 }\n   hrSystem  \
    \      OBJECT IDENTIFIER ::= { host 1 }\n   hrStorage       OBJECT IDENTIFIER\
    \ ::= { host 2 }\n   hrDevice        OBJECT IDENTIFIER ::= { host 3 }\n   hrSWRun\
    \         OBJECT IDENTIFIER ::= { host 4 }\n   hrSWRunPerf     OBJECT IDENTIFIER\
    \ ::= { host 5 }\n   hrSWInstalled   OBJECT IDENTIFIER ::= { host 6 }\n   -- textual\
    \ conventions\n   -- a truth value\n   Boolean ::=   INTEGER { true(1), false(2)\
    \ }\n   -- memory size, expressed in units of 1024bytes\n   KBytes ::=    INTEGER\
    \ (0..2147483647)\n   -- This textual convention is intended to identify the manufacturer,\n\
    \   -- model, and version of a specific hardware or software product.\n   -- It\
    \ is suggested that these OBJECT IDENTIFIERs are allocated such\n   -- that all\
    \ products from a particular manufacturer are registered\n   -- under a subtree\
    \ distinct to that manufacturer.  In addition, all\n   -- versions of a product\
    \ should be registered under a subtree\n   -- distinct to that product.  With\
    \ this strategy, a management\n   -- station may uniquely determine the manufacturer\
    \ and/or model of a\n   -- product whose productID is unknown to the management\
    \ station.\n   -- Objects of this type may be useful for inventory purposes or\
    \ for\n   -- automatically detecting incompatibilities or version mismatches\n\
    \   -- between various hardware and software components on a system.\n   ProductID\
    \ ::= OBJECT IDENTIFIER\n   -- unknownProduct will be used for any unknown ProductID\n\
    \   -- unknownProduct OBJECT IDENTIFIER ::= { 0 0 }\n   -- For example, the product\
    \ ID for the ACME 4860 66MHz clock doubled\n   -- processor might be:\n   -- enterprises.acme.acmeProcessors.a4860DX2.MHz66\n\
    \   -- A software product might be registered as:\n   -- enterprises.acme.acmeOperatingSystems.acmeDOS.six(6).one(1)\n\
    \   DateAndTime ::= OCTET STRING (SIZE (8 | 11))\n   --        A date-time specification\
    \ for the local time of day.\n   --        This data type is intended to provide\
    \ a consistent\n   --        method of reporting date information.\n   --\n  \
    \ --            field  octets  contents                  range\n   --        \
    \    _____  ______  ________                  _____\n   --              1    \
    \  1-2   year                      0..65536\n   --                           (in\
    \ network byte order)\n   --              2       3    month                 \
    \    1..12\n   --              3       4    day                       1..31\n\
    \   --              4       5    hour                      0..23\n   --      \
    \        5       6    minutes                   0..59\n   --              6  \
    \     7    seconds                   0..60\n   --                           (use\
    \ 60 for leap-second)\n   --              7       8    deci-seconds          \
    \    0..9\n   --              8       9    direction from UTC        \"+\" / \"\
    -\"\n   --                           (in ascii notation)\n   --              9\
    \      10    hours from UTC            0..11\n   --             10      11   \
    \ minutes from UTC          0..59\n   --\n   --            Note that if only local\
    \ time is known, then\n   --            timezone information (fields 8-10) is\
    \ not present.\n   InternationalDisplayString ::= OCTET STRING\n   --  This data\
    \ type is used to model textual information in some\n   --  character set.  A\
    \ network management station should use a local\n   --  algorithm to determine\
    \ which character set is in use and how it\n   --  should be displayed.  Note\
    \ that this character set may be encoded\n   --  with more than one octet per\
    \ symbol, but will most often be NVT\n   --  ASCII.\n   -- The Host Resources\
    \ System Group\n   --\n   -- Implementation of this group is mandatory for all\
    \ host systems.\n   hrSystemUptime OBJECT-TYPE\n       SYNTAX TimeTicks\n    \
    \   ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n          \
    \    \"The amount of time since this host was last\n              initialized.\
    \  Note that this is different from\n              sysUpTime in MIB-II [3] because\
    \ sysUpTime is the\n              uptime of the network management portion of\
    \ the\n              system.\"\n       ::= { hrSystem 1 }\n   hrSystemDate OBJECT-TYPE\n\
    \       SYNTAX DateAndTime\n       ACCESS read-write\n       STATUS mandatory\n\
    \       DESCRIPTION\n              \"The host's notion of the local date and time\
    \ of\n              day.\"\n       ::= { hrSystem 2 }\n   hrSystemInitialLoadDevice\
    \ OBJECT-TYPE\n       SYNTAX INTEGER (1..2147483647)\n       ACCESS read-write\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"The index of the\
    \ hrDeviceEntry for the device from\n              which this host is configured\
    \ to load its initial\n              operating system configuration.\"\n     \
    \  ::= { hrSystem 3 }\n   hrSystemInitialLoadParameters OBJECT-TYPE\n       SYNTAX\
    \ InternationalDisplayString (SIZE (0..128))\n       ACCESS read-write\n     \
    \  STATUS mandatory\n       DESCRIPTION\n              \"This object contains\
    \ the parameters (e.g. a\n              pathname and parameter) supplied to the\
    \ load device\n              when requesting the initial operating system\n  \
    \            configuration from that device.\"\n       ::= { hrSystem 4 }\n  \
    \ hrSystemNumUsers OBJECT-TYPE\n       SYNTAX Gauge\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"The number of user\
    \ sessions for which this host is\n              storing state information.  A\
    \ session is a\n              collection of processes requiring a single act of\n\
    \              user authentication and possibly subject to\n              collective\
    \ job control.\"\n       ::= { hrSystem 5 }\n   hrSystemProcesses OBJECT-TYPE\n\
    \       SYNTAX Gauge\n       ACCESS read-only\n       STATUS mandatory\n     \
    \  DESCRIPTION\n              \"The number of process contexts currently loaded\
    \ or\n              running on this system.\"\n       ::= { hrSystem 6 }\n   hrSystemMaxProcesses\
    \ OBJECT-TYPE\n       SYNTAX INTEGER (0..2147483647)\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"The maximum number\
    \ of process contexts this system\n              can support.  If there is no\
    \ fixed maximum, the\n              value should be zero.  On systems that have\
    \ a fixed\n              maximum, this object can help diagnose failures\n   \
    \           that occur when this maximum is reached.\"\n       ::= { hrSystem\
    \ 7 }\n   -- The Host Resources Storage Group\n   --\n   -- Implementation of\
    \ this group is mandatory for all host systems.\n   -- Registration for some storage\
    \ types, for use with hrStorageType\n   hrStorageTypes          OBJECT IDENTIFIER\
    \ ::= { hrStorage 1 }\n   hrStorageOther          OBJECT IDENTIFIER ::= { hrStorageTypes\
    \ 1 }\n   hrStorageRam            OBJECT IDENTIFIER ::= { hrStorageTypes 2 }\n\
    \   -- hrStorageVirtualMemory is temporary storage of swapped\n   -- or paged\
    \ memory\n   hrStorageVirtualMemory  OBJECT IDENTIFIER ::= { hrStorageTypes 3\
    \ }\n   hrStorageFixedDisk      OBJECT IDENTIFIER ::= { hrStorageTypes 4 }\n \
    \  hrStorageRemovableDisk  OBJECT IDENTIFIER ::= { hrStorageTypes 5 }\n   hrStorageFloppyDisk\
    \     OBJECT IDENTIFIER ::= { hrStorageTypes 6 }\n   hrStorageCompactDisc    OBJECT\
    \ IDENTIFIER ::= { hrStorageTypes 7 }\n   hrStorageRamDisk        OBJECT IDENTIFIER\
    \ ::= { hrStorageTypes 8 }\n   hrMemorySize OBJECT-TYPE\n       SYNTAX KBytes\n\
    \       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n      \
    \        \"The amount of physical main memory contained by\n              the\
    \ host.\"\n       ::= { hrStorage 2 }\n   hrStorageTable OBJECT-TYPE\n       SYNTAX\
    \ SEQUENCE OF HrStorageEntry\n       ACCESS not-accessible\n       STATUS mandatory\n\
    \       DESCRIPTION\n              \"The (conceptual) table of logical storage\
    \ areas on\n              the host.\n              An entry shall be placed in\
    \ the storage table for\n              each logical area of storage that is allocated\
    \ and\n              has fixed resource limits.  The amount of storage\n     \
    \         represented in an entity is the amount actually\n              usable\
    \ by the requesting entity, and excludes loss\n              due to formatting\
    \ or file system reference\n              information.\n              These entries\
    \ are associated with logical storage\n              areas, as might be seen by\
    \ an application, rather\n              than physical storage entities which are\
    \ typically\n              seen by an operating system.  Storage such as tapes\n\
    \              and floppies without file systems on them are\n              typically\
    \ not allocated in chunks by the operating\n              system to requesting\
    \ applications, and therefore\n              shouldn't appear in this table. \
    \ Examples of valid\n              storage for this table include disk partitions,\n\
    \              file systems, ram (for some architectures this is\n           \
    \   further segmented into regular memory, extended\n              memory, and\
    \ so on), backing store for virtual\n              memory (`swap space').\n  \
    \            This table is intended to be a useful diagnostic\n              for\
    \ `out of memory' and `out of buffers' types of\n              failures.  In addition,\
    \ it can be a useful\n              performance monitoring tool for tracking memory,\n\
    \              disk, or buffer usage.\"\n       ::= { hrStorage 3 }\n   hrStorageEntry\
    \ OBJECT-TYPE\n       SYNTAX HrStorageEntry\n       ACCESS not-accessible\n  \
    \     STATUS mandatory\n       DESCRIPTION\n              \"A (conceptual) entry\
    \ for one logical storage area\n              on the host.  As an example, an\
    \ instance of the\n              hrStorageType object might be named\n       \
    \       hrStorageType.3\"\n       INDEX { hrStorageIndex }\n       ::= { hrStorageTable\
    \ 1 }\n   HrStorageEntry ::= SEQUENCE {\n           hrStorageIndex           \
    \    INTEGER,\n           hrStorageType                OBJECT IDENTIFIER,\n  \
    \         hrStorageDescr               DisplayString,\n           hrStorageAllocationUnits\
    \     INTEGER,\n           hrStorageSize                INTEGER,\n           hrStorageUsed\
    \                INTEGER,\n           hrStorageAllocationFailures  Counter\n \
    \      }\n   hrStorageIndex OBJECT-TYPE\n       SYNTAX INTEGER (1..2147483647)\n\
    \       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n      \
    \        \"A unique value for each logical storage area\n              contained\
    \ by the host.\"\n       ::= { hrStorageEntry 1 }\n   hrStorageType OBJECT-TYPE\n\
    \       SYNTAX OBJECT IDENTIFIER\n       ACCESS read-only\n       STATUS mandatory\n\
    \       DESCRIPTION\n              \"The type of storage represented by this entry.\"\
    \n       ::= { hrStorageEntry 2 }\n   hrStorageDescr OBJECT-TYPE\n       SYNTAX\
    \ DisplayString\n       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n\
    \              \"A description of the type and instance of the\n             \
    \ storage described by this entry.\"\n       ::= { hrStorageEntry 3 }\n   hrStorageAllocationUnits\
    \ OBJECT-TYPE\n       SYNTAX      INTEGER (1..2147483647)\n       ACCESS     \
    \ read-only\n       STATUS      mandatory\n       DESCRIPTION\n              \
    \ \"The size, in bytes, of the data objects allocated\n               from this\
    \ pool.  If this entry is monitoring\n               sectors, blocks, buffers,\
    \ or packets, for example,\n               this number will commonly be greater\
    \ than one.\n               Otherwise this number will typically be one.\"\n \
    \      ::= { hrStorageEntry 4 }\n   hrStorageSize OBJECT-TYPE\n       SYNTAX INTEGER\
    \ (0..2147483647)\n       ACCESS read-write\n       STATUS mandatory\n       DESCRIPTION\n\
    \              \"The size of the storage represented by this entry,\n        \
    \      in units of hrStorageAllocationUnits.\"\n       ::= { hrStorageEntry 5\
    \ }\n   hrStorageUsed OBJECT-TYPE\n       SYNTAX INTEGER (0..2147483647)\n   \
    \    ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n         \
    \     \"The amount of the storage represented by this\n              entry that\
    \ is allocated, in units of\n              hrStorageAllocationUnits.\"\n     \
    \  ::= { hrStorageEntry 6 }\n   hrStorageAllocationFailures OBJECT-TYPE\n    \
    \   SYNTAX Counter\n       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n\
    \              \"The number of requests for storage represented by\n         \
    \     this entry that could not be honored due to not\n              enough storage.\
    \  It should be noted that as this\n              object has a SYNTAX of Counter,\
    \ that it does not\n              have a defined initial value.  However, it is\n\
    \              recommended that this object be initialized to\n              zero.\"\
    \n       ::= { hrStorageEntry 7 }\n   -- The Host Resources Device Group\n   --\n\
    \   -- Implementation of this group is mandatory for all host systems.\n   --\n\
    \   -- The device group is useful for identifying and diagnosing the\n   -- devices\
    \ on a system.  The hrDeviceTable contains common\n   -- information for any type\
    \ of device.  In addition, some devices\n   -- have device-specific tables for\
    \ more detailed information.  More\n   -- such tables may be defined in the future\
    \ for other device types.\n   -- Registration for some device types, for use with\
    \ hrDeviceType\n   hrDeviceTypes             OBJECT IDENTIFIER ::= { hrDevice\
    \ 1 }\n   hrDeviceOther             OBJECT IDENTIFIER ::= { hrDeviceTypes 1 }\n\
    \   hrDeviceUnknown           OBJECT IDENTIFIER ::= { hrDeviceTypes 2 }\n   hrDeviceProcessor\
    \         OBJECT IDENTIFIER ::= { hrDeviceTypes 3 }\n   hrDeviceNetwork      \
    \     OBJECT IDENTIFIER ::= { hrDeviceTypes 4 }\n   hrDevicePrinter          \
    \ OBJECT IDENTIFIER ::= { hrDeviceTypes 5 }\n   hrDeviceDiskStorage       OBJECT\
    \ IDENTIFIER ::= { hrDeviceTypes 6 }\n   hrDeviceVideo             OBJECT IDENTIFIER\
    \ ::= { hrDeviceTypes 10 }\n   hrDeviceAudio             OBJECT IDENTIFIER ::=\
    \ { hrDeviceTypes 11 }\n   hrDeviceCoprocessor       OBJECT IDENTIFIER ::= { hrDeviceTypes\
    \ 12 }\n   hrDeviceKeyboard          OBJECT IDENTIFIER ::= { hrDeviceTypes 13\
    \ }\n   hrDeviceModem             OBJECT IDENTIFIER ::= { hrDeviceTypes 14 }\n\
    \   hrDeviceParallelPort      OBJECT IDENTIFIER ::= { hrDeviceTypes 15 }\n   hrDevicePointing\
    \          OBJECT IDENTIFIER ::= { hrDeviceTypes 16 }\n   hrDeviceSerialPort \
    \       OBJECT IDENTIFIER ::= { hrDeviceTypes 17 }\n   hrDeviceTape          \
    \    OBJECT IDENTIFIER ::= { hrDeviceTypes 18 }\n   hrDeviceClock            \
    \ OBJECT IDENTIFIER ::= { hrDeviceTypes 19 }\n   hrDeviceVolatileMemory    OBJECT\
    \ IDENTIFIER ::= { hrDeviceTypes 20 }\n   hrDeviceNonVolatileMemory OBJECT IDENTIFIER\
    \ ::= { hrDeviceTypes 21 }\n   hrDeviceTable OBJECT-TYPE\n       SYNTAX SEQUENCE\
    \ OF HrDeviceEntry\n       ACCESS not-accessible\n       STATUS mandatory\n  \
    \     DESCRIPTION\n              \"The (conceptual) table of devices contained\
    \ by the\n              host.\"\n       ::= { hrDevice 2 }\n   hrDeviceEntry OBJECT-TYPE\n\
    \       SYNTAX HrDeviceEntry\n       ACCESS not-accessible\n       STATUS mandatory\n\
    \       DESCRIPTION\n              \"A (conceptual) entry for one device contained\
    \ by\n              the host.  As an example, an instance of the\n           \
    \   hrDeviceType object might be named hrDeviceType.3\"\n       INDEX { hrDeviceIndex\
    \ }\n       ::= { hrDeviceTable 1 }\n   HrDeviceEntry ::= SEQUENCE {\n       \
    \    hrDeviceIndex           INTEGER,\n           hrDeviceType            OBJECT\
    \ IDENTIFIER,\n           hrDeviceDescr           DisplayString,\n           hrDeviceID\
    \              ProductID,\n           hrDeviceStatus          INTEGER,\n     \
    \      hrDeviceErrors          Counter\n       }\n   hrDeviceIndex OBJECT-TYPE\n\
    \       SYNTAX INTEGER (1..2147483647)\n       ACCESS read-only\n       STATUS\
    \ mandatory\n       DESCRIPTION\n              \"A unique value for each device\
    \ contained by the\n              host.  The value for each device must remain\n\
    \              constant at least from one re-initialization of the\n         \
    \     agent to the next re-initialization.\"\n       ::= { hrDeviceEntry 1 }\n\
    \   hrDeviceType OBJECT-TYPE\n       SYNTAX OBJECT IDENTIFIER\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"An indication of\
    \ the type of device.\n              If this value is `hrDeviceProcessor { hrDeviceTypes\n\
    \              3 }' then an entry exists in the hrProcessorTable\n           \
    \   which corresponds to this device.\n              If this value is `hrDeviceNetwork\
    \ { hrDeviceTypes 4\n              }', then an entry exists in the hrNetworkTable\n\
    \              which corresponds to this device.\n              If this value\
    \ is `hrDevicePrinter { hrDeviceTypes 5\n              }', then an entry exists\
    \ in the hrPrinterTable\n              which corresponds to this device.\n   \
    \           If this value is `hrDeviceDiskStorage {\n              hrDeviceTypes\
    \ 6 }', then an entry exists in the\n              hrDiskStorageTable which corresponds\
    \ to this\n              device.\"\n       ::= { hrDeviceEntry 2 }\n   hrDeviceDescr\
    \ OBJECT-TYPE\n       SYNTAX DisplayString (SIZE (0..64))\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"A textual description\
    \ of this device, including\n              the device's manufacturer and revision,\
    \ and\n              optionally, its serial number.\"\n       ::= { hrDeviceEntry\
    \ 3 }\n   hrDeviceID OBJECT-TYPE\n       SYNTAX ProductID\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"The product ID for\
    \ this device.\"\n       ::= { hrDeviceEntry 4 }\n   hrDeviceStatus OBJECT-TYPE\n\
    \        SYNTAX  INTEGER {\n             unknown(1),\n             running(2),\n\
    \             warning(3),\n             testing(4),\n             down(5)\n  \
    \      }\n        ACCESS  read-only\n        STATUS  mandatory\n        DESCRIPTION\n\
    \              \"The current operational state of the device\n              described\
    \ by this row of the table.  A value\n              unknown(1) indicates that\
    \ the current state of the\n              device is unknown.  running(2) indicates\
    \ that the\n              device is up and running and that no unusual error\n\
    \              conditions are known.  The warning(3) state\n              indicates\
    \ that agent has been informed of an\n              unusual error condition by\
    \ the operational software\n              (e.g., a disk device driver) but that\
    \ the device is\n              still 'operational'.  An example would be high\n\
    \              number of soft errors on a disk.  A value of\n              testing(4),\
    \ indicates that the device is not\n              available for use because it\
    \ is in the testing\n              state.  The state of down(5) is used only when\
    \ the\n              agent has been informed that the device is not\n        \
    \      available for any use.\"\n        ::= { hrDeviceEntry 5 }\n   hrDeviceErrors\
    \ OBJECT-TYPE\n       SYNTAX Counter\n       ACCESS read-only\n       STATUS mandatory\n\
    \       DESCRIPTION\n               \"The number of errors detected on this device.\
    \  It\n               should be noted that as this object has a SYNTAX\n     \
    \          of Counter, that it does not have a defined\n               initial\
    \ value.  However, it is recommended that\n               this object be initialized\
    \ to zero.\"\n       ::= { hrDeviceEntry 6 }\n   hrProcessorTable OBJECT-TYPE\n\
    \       SYNTAX SEQUENCE OF HrProcessorEntry\n       ACCESS not-accessible\n  \
    \     STATUS mandatory\n       DESCRIPTION\n              \"The (conceptual) table\
    \ of processors contained by\n              the host.\n              Note that\
    \ this table is potentially sparse: a\n              (conceptual) entry exists\
    \ only if the correspondent\n              value of the hrDeviceType object is\n\
    \              `hrDeviceProcessor'.\"\n       ::= { hrDevice 3 }\n   hrProcessorEntry\
    \ OBJECT-TYPE\n       SYNTAX HrProcessorEntry\n       ACCESS not-accessible\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"A (conceptual) entry\
    \ for one processor contained\n              by the host.  The hrDeviceIndex in\
    \ the index\n              represents the entry in the hrDeviceTable that\n  \
    \            corresponds to the hrProcessorEntry.\n              As an example\
    \ of how objects in this table are\n              named, an instance of the hrProcessorFrwID\
    \ object\n              might be named hrProcessorFrwID.3\"\n       INDEX { hrDeviceIndex\
    \ }\n       ::= { hrProcessorTable 1 }\n   HrProcessorEntry ::= SEQUENCE {\n \
    \          hrProcessorFrwID            ProductID,\n           hrProcessorLoad\
    \             INTEGER\n       }\n   hrProcessorFrwID OBJECT-TYPE\n       SYNTAX\
    \ ProductID\n       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n\
    \              \"The product ID of the firmware associated with the\n        \
    \      processor.\"\n       ::= { hrProcessorEntry 1 }\n   hrProcessorLoad OBJECT-TYPE\n\
    \       SYNTAX INTEGER (0..100)\n       ACCESS read-only\n       STATUS mandatory\n\
    \       DESCRIPTION\n              \"The average, over the last minute, of the\n\
    \              percentage of time that this processor was not\n              idle.\"\
    \n       ::= { hrProcessorEntry 2 }\n   hrNetworkTable OBJECT-TYPE\n       SYNTAX\
    \ SEQUENCE OF HrNetworkEntry\n       ACCESS not-accessible\n       STATUS mandatory\n\
    \       DESCRIPTION\n              \"The (conceptual) table of network devices\n\
    \              contained by the host.\n              Note that this table is potentially\
    \ sparse: a\n              (conceptual) entry exists only if the correspondent\n\
    \              value of the hrDeviceType object is\n              `hrDeviceNetwork'.\"\
    \n       ::= { hrDevice 4 }\n   hrNetworkEntry OBJECT-TYPE\n       SYNTAX HrNetworkEntry\n\
    \       ACCESS not-accessible\n       STATUS mandatory\n       DESCRIPTION\n \
    \             \"A (conceptual) entry for one network device\n              contained\
    \ by the host.  The hrDeviceIndex in the\n              index represents the entry\
    \ in the hrDeviceTable\n              that corresponds to the hrNetworkEntry.\n\
    \              As an example of how objects in this table are\n              named,\
    \ an instance of the hrNetworkIfIndex object\n              might be named hrNetworkIfIndex.3\"\
    \n       INDEX { hrDeviceIndex }\n       ::= { hrNetworkTable 1 }\n   HrNetworkEntry\
    \ ::= SEQUENCE {\n           hrNetworkIfIndex    INTEGER\n       }\n   hrNetworkIfIndex\
    \ OBJECT-TYPE\n       SYNTAX INTEGER\n       ACCESS read-only\n       STATUS mandatory\n\
    \       DESCRIPTION\n              \"The value of ifIndex which corresponds to\
    \ this\n              network device.\"\n       ::= { hrNetworkEntry 1 }\n   hrPrinterTable\
    \ OBJECT-TYPE\n       SYNTAX SEQUENCE OF HrPrinterEntry\n       ACCESS not-accessible\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"The (conceptual)\
    \ table of printers local to the\n              host.\n              Note that\
    \ this table is potentially sparse: a\n              (conceptual) entry exists\
    \ only if the correspondent\n              value of the hrDeviceType object is\n\
    \              `hrDevicePrinter'.\"\n       ::= { hrDevice 5 }\n   hrPrinterEntry\
    \ OBJECT-TYPE\n       SYNTAX HrPrinterEntry\n       ACCESS not-accessible\n  \
    \     STATUS mandatory\n       DESCRIPTION\n              \"A (conceptual) entry\
    \ for one printer local to the\n              host.  The hrDeviceIndex in the\
    \ index represents\n              the entry in the hrDeviceTable that corresponds\
    \ to\n              the hrPrinterEntry.\n              As an example of how objects\
    \ in this table are\n              named, an instance of the hrPrinterStatus object\n\
    \              might be named hrPrinterStatus.3\"\n       INDEX { hrDeviceIndex\
    \ }\n       ::= { hrPrinterTable 1 }\n   HrPrinterEntry ::= SEQUENCE {\n     \
    \      hrPrinterStatus             INTEGER,\n           hrPrinterDetectedErrorState\
    \ OCTET STRING\n       }\n   hrPrinterStatus OBJECT-TYPE\n       SYNTAX INTEGER\
    \ {\n           other(1),\n           unknown(2),\n           idle(3),\n     \
    \      printing(4),\n           warmup(5)\n       }\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n               \"The current status\
    \ of this printer device.  When\n               in the idle(1), printing(2), or\
    \ warmup(3) state,\n               the corresponding hrDeviceStatus should be\n\
    \               running(2) or warning(3).  When in the unknown\n             \
    \  state, the corresponding hrDeviceStatus should be\n               unknown(1).\"\
    \n       ::= { hrPrinterEntry 1 }\n   hrPrinterDetectedErrorState OBJECT-TYPE\n\
    \       SYNTAX OCTET STRING\n       ACCESS read-only\n       STATUS mandatory\n\
    \       DESCRIPTION\n               \"This object represents any error conditions\n\
    \               detected by the printer.  The error conditions are\n         \
    \      encoded as bits in an octet string, with the\n               following\
    \ definitions:\n                    Condition         Bit #    hrDeviceStatus\n\
    \                    lowPaper          0        warning(3)\n                 \
    \   noPaper           1        down(5)\n                    lowToner         \
    \ 2        warning(3)\n                    noToner           3        down(5)\n\
    \                    doorOpen          4        down(5)\n                    jammed\
    \            5        down(5)\n                    offline           6       \
    \ down(5)\n                    serviceRequested  7        warning(3)\n       \
    \        If multiple conditions are currently detected and\n               the\
    \ hrDeviceStatus would not otherwise be\n               unknown(1) or testing(4),\
    \ the hrDeviceStatus shall\n               correspond to the worst state of those\
    \ indicated,\n               where down(5) is worse than warning(3) which is\n\
    \               worse than running(2).\n               Bits are numbered starting\
    \ with the most\n               significant bit of the first byte being bit 0,\
    \ the\n               least significant bit of the first byte being bit\n    \
    \           7, the most significant bit of the second byte\n               being\
    \ bit 8, and so on.  A one bit encodes that\n               the condition was\
    \ detected, while a zero bit\n               encodes that the condition was not\
    \ detected.\n               This object is useful for alerting an operator to\n\
    \               specific warning or error conditions that may\n              \
    \ occur, especially those requiring human\n               intervention.\"\n  \
    \     ::= { hrPrinterEntry 2 }\n   hrDiskStorageTable OBJECT-TYPE\n       SYNTAX\
    \ SEQUENCE OF HrDiskStorageEntry\n       ACCESS not-accessible\n       STATUS\
    \ mandatory\n       DESCRIPTION\n              \"The (conceptual) table of long-term\
    \ storage\n              devices contained by the host.  In particular, disk\n\
    \              devices accessed remotely over a network are not\n            \
    \  included here.\n              Note that this table is potentially sparse: a\n\
    \              (conceptual) entry exists only if the correspondent\n         \
    \     value of the hrDeviceType object is\n              `hrDeviceDiskStorage'.\"\
    \n       ::= { hrDevice 6 }\n   hrDiskStorageEntry OBJECT-TYPE\n       SYNTAX\
    \ HrDiskStorageEntry\n       ACCESS not-accessible\n       STATUS mandatory\n\
    \       DESCRIPTION\n              \"A (conceptual) entry for one long-term storage\n\
    \              device contained by the host.  The hrDeviceIndex in\n         \
    \     the index represents the entry in the hrDeviceTable\n              that\
    \ corresponds to the hrDiskStorageEntry. As an\n              example, an instance\
    \ of the hrDiskStorageCapacity\n              object might be named hrDiskStorageCapacity.3\"\
    \n       INDEX { hrDeviceIndex }\n       ::= { hrDiskStorageTable 1 }\n   HrDiskStorageEntry\
    \ ::= SEQUENCE {\n           hrDiskStorageAccess         INTEGER,\n          \
    \ hrDiskStorageMedia          INTEGER,\n           hrDiskStorageRemoveble    \
    \  Boolean,\n           hrDiskStorageCapacity       KBytes\n       }\n   hrDiskStorageAccess\
    \ OBJECT-TYPE\n       SYNTAX INTEGER {\n                       readWrite(1),\n\
    \                       readOnly(2)\n               }\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"An indication if\
    \ this long-term storage device is\n              readable and writable or only\
    \ readable.  This\n              should reflect the media type, any write-protect\n\
    \              mechanism, and any device configuration that\n              affects\
    \ the entire device.\"\n       ::= { hrDiskStorageEntry 1 }\n   hrDiskStorageMedia\
    \ OBJECT-TYPE\n       SYNTAX INTEGER {\n                   other(1),\n       \
    \            unknown(2),\n                   hardDisk(3),\n                  \
    \ floppyDisk(4),\n                   opticalDiskROM(5),\n                   opticalDiskWORM(6),\
    \     -- Write Once Read Many\n                   opticalDiskRW(7),\n        \
    \           ramDisk(8)\n               }\n       ACCESS read-only\n       STATUS\
    \ mandatory\n       DESCRIPTION\n              \"An indication of the type of\
    \ media used in this\n              long-term storage device.\"\n       ::= {\
    \ hrDiskStorageEntry 2 }\n   hrDiskStorageRemoveble OBJECT-TYPE\n       SYNTAX\
    \ Boolean\n       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n\
    \               \"Denotes whether or not the disk media may be\n             \
    \  removed from the drive.\"\n       ::= { hrDiskStorageEntry 3 }\n   hrDiskStorageCapacity\
    \ OBJECT-TYPE\n       SYNTAX KBytes\n       ACCESS read-only\n       STATUS mandatory\n\
    \       DESCRIPTION\n              \"The total size for this long-term storage\
    \ device.\"\n       ::= { hrDiskStorageEntry 4 }\n   hrPartitionTable OBJECT-TYPE\n\
    \       SYNTAX SEQUENCE OF HrPartitionEntry\n       ACCESS not-accessible\n  \
    \     STATUS mandatory\n       DESCRIPTION\n              \"The (conceptual) table\
    \ of partitions for long-term\n              storage devices contained by the\
    \ host.  In\n              particular, partitions accessed remotely over a\n \
    \             network are not included here.\"\n       ::= { hrDevice 7 }\n  \
    \ hrPartitionEntry OBJECT-TYPE\n       SYNTAX HrPartitionEntry\n       ACCESS\
    \ not-accessible\n       STATUS mandatory\n       DESCRIPTION\n              \"\
    A (conceptual) entry for one partition.  The\n              hrDeviceIndex in the\
    \ index represents the entry in\n              the hrDeviceTable that corresponds\
    \ to the\n              hrPartitionEntry.\n              As an example of how\
    \ objects in this table are\n              named, an instance of the hrPartitionSize\
    \ object\n              might be named hrPartitionSize.3.1\"\n       INDEX { hrDeviceIndex,\
    \ hrPartitionIndex }\n       ::= { hrPartitionTable 1 }\n   HrPartitionEntry ::=\
    \ SEQUENCE {\n           hrPartitionIndex                INTEGER,\n          \
    \ hrPartitionLabel                InternationalDisplayString,\n           hrPartitionID\
    \                   OCTET STRING,\n           hrPartitionSize                \
    \ KBytes,\n           hrPartitionFSIndex              INTEGER\n       }\n   hrPartitionIndex\
    \ OBJECT-TYPE\n       SYNTAX INTEGER (1..2147483647)\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"A unique value for\
    \ each partition on this long-\n              term storage device.  The value\
    \ for each long-term\n              storage device must remain constant at least\
    \ from\n              one re-initialization of the agent to the next re-\n   \
    \           initialization.\"\n       ::= { hrPartitionEntry 1 }\n   hrPartitionLabel\
    \ OBJECT-TYPE\n       SYNTAX InternationalDisplayString (SIZE (0..128))\n    \
    \   ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n          \
    \    \"A textual description of this partition.\"\n       ::= { hrPartitionEntry\
    \ 2 }\n   hrPartitionID OBJECT-TYPE\n       SYNTAX OCTET STRING\n       ACCESS\
    \ read-only\n       STATUS mandatory\n       DESCRIPTION\n              \"A descriptor\
    \ which uniquely represents this\n              partition to the responsible operating\
    \ system.  On\n              some systems, this might take on a binary\n     \
    \         representation.\"\n       ::= { hrPartitionEntry 3 }\n   hrPartitionSize\
    \ OBJECT-TYPE\n       SYNTAX KBytes\n       ACCESS read-only\n       STATUS mandatory\n\
    \       DESCRIPTION\n               \"The size of this partition.\"\n       ::=\
    \ { hrPartitionEntry 4 }\n   hrPartitionFSIndex OBJECT-TYPE\n       SYNTAX INTEGER\
    \ (0..2147483647)\n       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n\
    \               \"The index of the file system mounted on this\n             \
    \  partition.  If no file system is mounted on this\n               partition,\
    \ then this value shall be zero.  Note\n               that multiple partitions\
    \ may point to one file\n               system, denoting that that file system\
    \ resides on\n               those partitions.  Multiple file systems may not\n\
    \               reside on one partition.\"\n       ::= { hrPartitionEntry 5 }\n\
    \   -- The File System Table\n   hrFSTable OBJECT-TYPE\n       SYNTAX SEQUENCE\
    \ OF HrFSEntry\n       ACCESS not-accessible\n       STATUS mandatory\n      \
    \ DESCRIPTION\n               \"The (conceptual) table of file systems local to\n\
    \               this host or remotely mounted from a file server.\n          \
    \     File systems that are in only one user's\n               environment on\
    \ a multi-user system will not be\n               included in this table.\"\n\
    \       ::= { hrDevice 8 }\n   hrFSEntry OBJECT-TYPE\n       SYNTAX HrFSEntry\n\
    \       ACCESS not-accessible\n       STATUS mandatory\n       DESCRIPTION\n \
    \              \"A (conceptual) entry for one file system local to\n         \
    \      this host or remotely mounted from a file server.\n               File\
    \ systems that are in only one user's\n               environment on a multi-user\
    \ system will not be\n               included in this table.\n               As\
    \ an example of how objects in this table are\n               named, an instance\
    \ of the hrFSMountPoint object\n               might be named hrFSMountPoint.3\"\
    \n       INDEX { hrFSIndex }\n       ::= { hrFSTable 1 }\n   -- Registration for\
    \ some popular File System types,\n   -- for use with hrFSType.\n   hrFSTypes\
    \               OBJECT IDENTIFIER ::= { hrDevice 9 }\n   hrFSOther           \
    \    OBJECT IDENTIFIER ::= { hrFSTypes 1 }\n   hrFSUnknown             OBJECT\
    \ IDENTIFIER ::= { hrFSTypes 2 }\n   hrFSBerkeleyFFS         OBJECT IDENTIFIER\
    \ ::= { hrFSTypes 3 }\n   hrFSSys5FS              OBJECT IDENTIFIER ::= { hrFSTypes\
    \ 4 }\n   -- DOS\n   hrFSFat                 OBJECT IDENTIFIER ::= { hrFSTypes\
    \ 5 }\n   -- OS/2 High Performance File System\n   hrFSHPFS                OBJECT\
    \ IDENTIFIER ::= { hrFSTypes 6 }\n   --  Macintosh Hierarchical File System\n\
    \   hrFSHFS                 OBJECT IDENTIFIER ::= { hrFSTypes 7 }\n   -- Macintosh\
    \ File System\n   hrFSMFS                 OBJECT IDENTIFIER ::= { hrFSTypes 8\
    \ }\n   -- Windows NT\n   hrFSNTFS                OBJECT IDENTIFIER ::= { hrFSTypes\
    \ 9 }\n   hrFSVNode               OBJECT IDENTIFIER ::= { hrFSTypes 10 }\n   hrFSJournaled\
    \           OBJECT IDENTIFIER ::= { hrFSTypes 11 }\n   -- CD File systems\n  \
    \ hrFSiso9660             OBJECT IDENTIFIER ::= { hrFSTypes 12 }\n   hrFSRockRidge\
    \           OBJECT IDENTIFIER ::= { hrFSTypes 13 }\n   hrFSNFS               \
    \  OBJECT IDENTIFIER ::= { hrFSTypes 14 }\n   hrFSNetware             OBJECT IDENTIFIER\
    \ ::= { hrFSTypes 15 }\n   -- Andrew File System\n   hrFSAFS                 OBJECT\
    \ IDENTIFIER ::= { hrFSTypes 16 }\n   -- OSF DCE Distributed File System\n   hrFSDFS\
    \                 OBJECT IDENTIFIER ::= { hrFSTypes 17 }\n   hrFSAppleshare  \
    \        OBJECT IDENTIFIER ::= { hrFSTypes 18 }\n   hrFSRFS                 OBJECT\
    \ IDENTIFIER ::= { hrFSTypes 19 }\n   -- Data General\n   hrFSDGCFS          \
    \     OBJECT IDENTIFIER ::= { hrFSTypes 20 }\n   -- SVR4 Boot File System\n  \
    \ hrFSBFS                 OBJECT IDENTIFIER ::= { hrFSTypes 21 }\n   HrFSEntry\
    \ ::= SEQUENCE {\n           hrFSIndex                   INTEGER,\n          \
    \ hrFSMountPoint              InternationalDisplayString,\n           hrFSRemoteMountPoint\
    \        InternationalDisplayString,\n           hrFSType                    OBJECT\
    \ IDENTIFIER,\n           hrFSAccess                  INTEGER,\n           hrFSBootable\
    \                Boolean,\n           hrFSStorageIndex            INTEGER,\n \
    \          hrFSLastFullBackupDate      DateAndTime,\n           hrFSLastPartialBackupDate\
    \   DateAndTime\n       }\n   hrFSIndex OBJECT-TYPE\n       SYNTAX INTEGER (1..2147483647)\n\
    \       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n      \
    \         \"A unique value for each file system local to this\n              \
    \ host.  The value for each file system must remain\n               constant at\
    \ least from one re-initialization of\n               the agent to the next re-initialization.\"\
    \n       ::= { hrFSEntry 1 }\n   hrFSMountPoint OBJECT-TYPE\n       SYNTAX InternationalDisplayString\
    \ (SIZE(0..128))\n       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n\
    \               \"The path name of the root of this file system.\"\n       ::=\
    \ { hrFSEntry 2 }\n   hrFSRemoteMountPoint OBJECT-TYPE\n       SYNTAX InternationalDisplayString\
    \ (SIZE(0..128))\n       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n\
    \               \"A description of the name and/or address of the\n          \
    \     server that this file system is mounted from.\n               This may also\
    \ include parameters such as the mount\n               point on the remote file\
    \ system.  If this is not a\n               remote file system, this string should\
    \ have a\n               length of zero.\"\n       ::= { hrFSEntry 3 }\n   hrFSType\
    \ OBJECT-TYPE\n       SYNTAX OBJECT IDENTIFIER\n       ACCESS read-only\n    \
    \   STATUS mandatory\n       DESCRIPTION\n              \"The value of this object\
    \ identifies the type of\n              this file system.\"\n       ::= { hrFSEntry\
    \ 4 }\n   hrFSAccess OBJECT-TYPE\n       SYNTAX INTEGER {\n               readWrite(1),\n\
    \               readOnly(2)\n           }\n       ACCESS read-only\n       STATUS\
    \ mandatory\n       DESCRIPTION\n              \"An indication if this file system\
    \ is logically\n              configured by the operating system to be readable\n\
    \              and writable or only readable.  This does not\n              represent\
    \ any local access-control policy, except\n              one that is applied to\
    \ the file system as a whole.\"\n       ::= { hrFSEntry 5 }\n   hrFSBootable OBJECT-TYPE\n\
    \       SYNTAX Boolean\n       ACCESS read-only\n       STATUS mandatory\n   \
    \    DESCRIPTION\n              \"A flag indicating whether this file system is\n\
    \              bootable.\"\n       ::= { hrFSEntry 6 }\n   hrFSStorageIndex OBJECT-TYPE\n\
    \       SYNTAX INTEGER (0..2147483647)\n       ACCESS read-only\n       STATUS\
    \ mandatory\n       DESCRIPTION\n               \"The index of the hrStorageEntry\
    \ that represents\n               information about this file system.  If there\
    \ is\n               no such information available, then this value\n        \
    \       shall be zero.  The relevant storage entry will be\n               useful\
    \ in tracking the percent usage of this file\n               system and diagnosing\
    \ errors that may occur when\n               it runs out of space.\"\n       ::=\
    \ { hrFSEntry 7 }\n   hrFSLastFullBackupDate OBJECT-TYPE\n       SYNTAX DateAndTime\n\
    \       ACCESS read-write\n       STATUS mandatory\n       DESCRIPTION\n     \
    \         \"The last date at which this complete file system\n              was\
    \ copied to another storage device for backup.\n              This information\
    \ is useful for ensuring that\n              backups are being performed regularly.\n\
    \              If this information is not known, then this\n              variable\
    \ shall have the value corresponding to\n              January 1, year 0000, 00:00:00.0,\
    \ which is encoded\n              as (hex)'00 00 01 01 00 00 00 00'.\"\n     \
    \  ::= { hrFSEntry 8 }\n   hrFSLastPartialBackupDate OBJECT-TYPE\n       SYNTAX\
    \ DateAndTime\n       ACCESS read-write\n       STATUS mandatory\n       DESCRIPTION\n\
    \              \"The last date at which a portion of this file\n             \
    \ system was copied to another storage device for\n              backup.  This\
    \ information is useful for ensuring\n              that backups are being performed\
    \ regularly.\n              If this information is not known, then this\n    \
    \          variable shall have the value corresponding to\n              January\
    \ 1, year 0000, 00:00:00.0, which is encoded\n              as (hex)'00 00 01\
    \ 01 00 00 00 00'.\"\n       ::= { hrFSEntry 9 }\n   -- The Host Resources Running\
    \ Software Group\n   --\n   -- Implementation of this group is optional.\n   --\n\
    \   -- The hrSWRunTable contains an entry for each distinct piece of\n   -- software\
    \ that is running or loaded into physical or virtual\n   -- memory in preparation\
    \ for running.  This includes the host's\n   -- operating system, device drivers,\
    \ and applications.\n   hrSWOSIndex OBJECT-TYPE\n       SYNTAX INTEGER (1..2147483647)\n\
    \       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n      \
    \         \"The value of the hrSWRunIndex for the\n               hrSWRunEntry\
    \ that represents the primary operating\n               system running on this\
    \ host.  This object is\n               useful for quickly and uniquely identifying\
    \ that\n               primary operating system.\"\n       ::= { hrSWRun 1 }\n\
    \   hrSWRunTable OBJECT-TYPE\n       SYNTAX SEQUENCE OF HrSWRunEntry\n       ACCESS\
    \ not-accessible\n       STATUS mandatory\n       DESCRIPTION\n              \"\
    The (conceptual) table of software running on the\n              host.\"\n   \
    \    ::= { hrSWRun 2 }\n   hrSWRunEntry OBJECT-TYPE\n       SYNTAX HrSWRunEntry\n\
    \       ACCESS not-accessible\n       STATUS mandatory\n       DESCRIPTION\n \
    \             \"A (conceptual) entry for one piece of software\n             \
    \ running on the host Note that because the installed\n              software\
    \ table only contains information for\n              software stored locally on\
    \ this host, not every\n              piece of running software will be found\
    \ in the\n              installed software table.  This is true of software\n\
    \              that was loaded and run from a non-local source,\n            \
    \  such as a network-mounted file system.\n              As an example of how\
    \ objects in this table are\n              named, an instance of the hrSWRunName\
    \ object might\n              be named hrSWRunName.1287\"\n       INDEX { hrSWRunIndex\
    \ }\n       ::= { hrSWRunTable 1 }\n   HrSWRunEntry ::= SEQUENCE {\n         \
    \  hrSWRunIndex       INTEGER,\n           hrSWRunName        InternationalDisplayString,\n\
    \           hrSWRunID          ProductID,\n           hrSWRunPath        InternationalDisplayString,\n\
    \           hrSWRunParameters  InternationalDisplayString,\n           hrSWRunType\
    \        INTEGER,\n           hrSWRunStatus      INTEGER\n       }\n   hrSWRunIndex\
    \ OBJECT-TYPE\n       SYNTAX INTEGER (1..2147483647)\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"A unique value for\
    \ each piece of software running\n              on the host.  Wherever possible,\
    \ this should be the\n              system's native, unique identification number.\"\
    \n       ::= { hrSWRunEntry 1 }\n   hrSWRunName OBJECT-TYPE\n       SYNTAX InternationalDisplayString\
    \ (SIZE (0..64))\n       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n\
    \              \"A textual description of this running piece of\n            \
    \  software, including the manufacturer, revision,\n              and the name\
    \ by which it is commonly known.  If\n              this software was installed\
    \ locally, this should be\n              the same string as used in the corresponding\n\
    \              hrSWInstalledName.\"\n       ::= { hrSWRunEntry 2 }\n   hrSWRunID\
    \ OBJECT-TYPE\n       SYNTAX ProductID\n       ACCESS read-only\n       STATUS\
    \ mandatory\n       DESCRIPTION\n              \"The product ID of this running\
    \ piece of software.\"\n       ::= { hrSWRunEntry 3 }\n   hrSWRunPath OBJECT-TYPE\n\
    \       SYNTAX InternationalDisplayString (SIZE(0..128))\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"A description of\
    \ the location on long-term storage\n              (e.g. a disk drive) from which\
    \ this software was\n              loaded.\"\n       ::= { hrSWRunEntry 4 }\n\
    \   hrSWRunParameters OBJECT-TYPE\n       SYNTAX InternationalDisplayString (SIZE(0..128))\n\
    \       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n      \
    \        \"A description of the parameters supplied to this\n              software\
    \ when it was initially loaded.\"\n       ::= { hrSWRunEntry 5 }\n   hrSWRunType\
    \ OBJECT-TYPE\n       SYNTAX INTEGER {\n                   unknown(1),\n     \
    \              operatingSystem(2),\n                   deviceDriver(3),\n    \
    \               application(4)\n              }\n       ACCESS read-only\n   \
    \    STATUS mandatory\n       DESCRIPTION\n               \"The type of this software.\"\
    \n       ::= { hrSWRunEntry 6 }\n   hrSWRunStatus OBJECT-TYPE\n       SYNTAX INTEGER\
    \ {\n               running(1),\n               runnable(2),    -- waiting for\
    \ resource (CPU, memory, IO)\n               notRunnable(3), -- loaded but waiting\
    \ for event\n               invalid(4)      -- not loaded\n           }\n    \
    \   ACCESS read-write\n       STATUS mandatory\n       DESCRIPTION\n         \
    \     \"The status of this running piece of software.\n              Setting this\
    \ value to invalid(4) shall cause this\n              software to stop running\
    \ and to be unloaded.\"\n       ::= { hrSWRunEntry 7 }\n   -- The Host Resources\
    \ Running Software Performance Group\n   -- Implementation of this group is optional.\n\
    \   --\n   -- The hrSWRunPerfTable contains an entry corresponding to\n   -- each\
    \ entry in the hrSWRunTable.\n   hrSWRunPerfTable OBJECT-TYPE\n       SYNTAX SEQUENCE\
    \ OF HrSWRunPerfEntry\n       ACCESS not-accessible\n       STATUS mandatory\n\
    \       DESCRIPTION\n               \"The (conceptual) table of running software\n\
    \               performance metrics.\"\n       ::= { hrSWRunPerf 1 }\n   hrSWRunPerfEntry\
    \ OBJECT-TYPE\n       SYNTAX HrSWRunPerfEntry\n       ACCESS not-accessible\n\
    \       STATUS mandatory\n       DESCRIPTION\n               \"A (conceptual)\
    \ entry containing software\n               performance metrics.  As an example,\
    \ an instance\n               of the hrSWRunPerfCPU object might be named\n  \
    \             hrSWRunPerfCPU.1287\"\n       INDEX  { hrSWRunIndex }  -- This table\
    \ augments information in\n                                -- the hrSWRunTable.\n\
    \       ::= { hrSWRunPerfTable 1 }\n   HrSWRunPerfEntry ::= SEQUENCE {\n     \
    \      hrSWRunPerfCPU          INTEGER,\n           hrSWRunPerfMem          KBytes\n\
    \   }\n   hrSWRunPerfCPU OBJECT-TYPE\n       SYNTAX INTEGER\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n               \"The number of centi-seconds\
    \ of the total system's\n               CPU resources consumed by this process.\
    \  Note that\n               on a multi-processor system, this value may\n   \
    \            increment by more than one centi-second in one\n               centi-second\
    \ of real (wall clock) time.\"\n       ::= { hrSWRunPerfEntry 1 }\n   hrSWRunPerfMem\
    \ OBJECT-TYPE\n       SYNTAX KBytes\n       ACCESS read-only\n       STATUS mandatory\n\
    \       DESCRIPTION\n               \"The total amount of real system memory allocated\n\
    \               to this process.\"\n       ::= { hrSWRunPerfEntry 2 }\n   -- The\
    \ Host Resources Installed Software Group\n   --\n   -- Implementation of this\
    \ group is optional.\n   --\n   -- The hrSWInstalledTable contains an entry for\
    \ each piece\n   -- of software installed in long-term storage (e.g. a disk\n\
    \   -- drive) locally on this host.  Note that this does not\n   -- include software\
    \ loadable remotely from a network\n   -- server.\n   --\n   -- This table is\
    \ useful for identifying and inventorying\n   -- software on a host and for diagnosing\
    \ incompatibility\n   -- and version mismatch problems between various pieces\n\
    \   -- of hardware and software.\n   hrSWInstalledLastChange OBJECT-TYPE\n   \
    \    SYNTAX TimeTicks\n       ACCESS read-only\n       STATUS mandatory\n    \
    \   DESCRIPTION\n              \"The value of sysUpTime when an entry in the\n\
    \              hrSWInstalledTable was last added, renamed, or\n              deleted.\
    \  Because this table is likely to contain\n              many entries, polling\
    \ of this object allows a\n              management station to determine when\
    \ re-downloading\n              of the table might be useful.\"\n       ::= {\
    \ hrSWInstalled 1 }\n   hrSWInstalledLastUpdateTime OBJECT-TYPE\n       SYNTAX\
    \ TimeTicks\n       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n\
    \              \"The value of sysUpTime when the hrSWInstalledTable\n        \
    \      was last completely updated.  Because caching of\n              this data\
    \ will be a popular implementation\n              strategy, retrieval of this\
    \ object allows a\n              management station to obtain a guarantee that\
    \ no\n              data in this table is older than the indicated\n         \
    \     time.\"\n       ::= { hrSWInstalled 2 }\n   hrSWInstalledTable OBJECT-TYPE\n\
    \       SYNTAX SEQUENCE OF HrSWInstalledEntry\n       ACCESS not-accessible\n\
    \       STATUS mandatory\n       DESCRIPTION\n              \"The (conceptual)\
    \ table of software installed on\n              this host.\"\n       ::= { hrSWInstalled\
    \ 3 }\n   hrSWInstalledEntry OBJECT-TYPE\n       SYNTAX HrSWInstalledEntry\n \
    \      ACCESS not-accessible\n       STATUS mandatory\n       DESCRIPTION\n  \
    \            \"A (conceptual) entry for a piece of software\n              installed\
    \ on this host.\n              As an example of how objects in this table are\n\
    \              named, an instance of the hrSWInstalledName object\n          \
    \    might be named hrSWInstalledName.96\"\n       INDEX { hrSWInstalledIndex\
    \ }\n       ::= { hrSWInstalledTable 1 }\n   HrSWInstalledEntry ::= SEQUENCE {\n\
    \           hrSWInstalledIndex       INTEGER,\n           hrSWInstalledName  \
    \      InternationalDisplayString,\n           hrSWInstalledID          ProductID,\n\
    \           hrSWInstalledType        INTEGER,\n           hrSWInstalledDate  \
    \      DateAndTime\n   }\n   hrSWInstalledIndex OBJECT-TYPE\n       SYNTAX INTEGER\
    \ (1..2147483647)\n       ACCESS read-only\n       STATUS mandatory\n       DESCRIPTION\n\
    \              \"A unique value for each piece of software\n              installed\
    \ on the host.  This value shall be in the\n              range from 1 to the\
    \ number of pieces of software\n              installed on the host.\"\n     \
    \  ::= { hrSWInstalledEntry 1 }\n   hrSWInstalledName OBJECT-TYPE\n       SYNTAX\
    \ InternationalDisplayString (SIZE (0..64))\n       ACCESS read-only\n       STATUS\
    \ mandatory\n       DESCRIPTION\n              \"A textual description of this\
    \ installed piece of\n              software, including the manufacturer, revision,\
    \ the\n              name by which it is commonly known, and optionally,\n   \
    \           its serial number.\"\n       ::= { hrSWInstalledEntry 2 }\n   hrSWInstalledID\
    \ OBJECT-TYPE\n       SYNTAX ProductID\n       ACCESS read-only\n       STATUS\
    \ mandatory\n       DESCRIPTION\n              \"The product ID of this installed\
    \ piece of\n              software.\"\n       ::= { hrSWInstalledEntry 3 }\n \
    \  hrSWInstalledType OBJECT-TYPE\n       SYNTAX INTEGER {\n                  \
    \ unknown(1),\n                   operatingSystem(2),\n                   deviceDriver(3),\n\
    \                   application(4)\n              }\n       ACCESS read-only\n\
    \       STATUS mandatory\n       DESCRIPTION\n               \"The type of this\
    \ software.\"\n       ::= { hrSWInstalledEntry 4 }\n   hrSWInstalledDate OBJECT-TYPE\n\
    \       SYNTAX DateAndTime\n       ACCESS read-only\n       STATUS mandatory\n\
    \       DESCRIPTION\n              \"The last-modification date of this application\
    \ as\n              it would appear in a directory listing.\"\n       ::= { hrSWInstalledEntry\
    \ 5 }\n   END\n"
- title: 5.  References
  contents:
  - "5.  References\n   [1]  Rose M., and K. McCloghrie, \"Structure and Identification\
    \ of\n        Management Information for TCP/IP-based internets\", STD 16, RFC\n\
    \        1155, Performance Systems International, Hughes LAN Systems, May\n  \
    \      1990.\n   [2]  Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\"\
    ,\n        STD 16, RFC 1212, Performance Systems International, Hughes LAN\n \
    \       Systems, March 1991.\n   [3]  McCloghrie K., and M. Rose, Editors, \"\
    Management Information\n        Base for Network Management of TCP/IP-based internets\"\
    , STD 17,\n        RFC 1213, Performance Systems International, March 1991.\n\
    \   [4]  Case, J., Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n      \
    \  Network Management Protocol\", STD 15, RFC 1157, SNMP Research,\n        Performance\
    \ Systems International, Performance Systems\n        International, MIT Laboratory\
    \ for Computer Science, May 1990.\n   [5]  Information processing systems - Open\
    \ Systems Interconnection -\n        Specification of Abstract Syntax Notation\
    \ One (ASN.1),\n        International Organization for Standardization.  International\n\
    \        Standard 8824, (December, 1987).\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   This document was produced by the Host Resources MIB\
    \ working group.\n   In addition, the authors gratefully acknowledge the comments\
    \ of the\n   following individuals:\n              Amatzia Ben-Artzi NetManage\n\
    \              Steve Bostock     Novell\n              Stephen Bush      GE Information\
    \ Systems\n              Jeff Case         SNMP Research\n              Chuck\
    \ Davin       Bellcore\n              Ray Edgarton      Bell Atlantic\n      \
    \        Mike Erlinger     Aerospace Corporation\n              Tim Farley   \
    \     Magee Enterprises\n              Mark Kepke        Hewlett-Packard\n   \
    \           Bobby Krupczak    Georgia Tech\n              Cheryl Krupczak   Georgia\
    \ Tech\n              Keith McCloghrie  Hughes Lan Systems\n              Greg\
    \ Minshall     Novell\n              Dave Perkins      Synoptics\n           \
    \   Ed Reeder         Objective Systems Integrators\n              Mike Ritter\
    \       Apple Computer\n              Marshall Rose     Dover Beach Consulting\n\
    \              Jon Saperia       DEC\n              Rodney Thayer     Sable Technology\n\
    \              Kaj Tesink        Bellcore\n              Dean Throop       Data\
    \ General\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8.  Authors' Addresses
  contents:
  - "8.  Authors' Addresses\n   Pete Grillo\n   10915 NW Lost Park Drive\n   Portland\
    \ OR 97229\n   Phone: +1 503 526 9766\n   EMail: pl0143@mail.psi.net\n   Steven\
    \ Waldbusser\n   Carnegie Mellon University\n   4910 Forbes Ave.\n   Pittsburgh,\
    \ PA 15213\n   Phone: +1 412 268 6628\n   Fax:   +1 412 268 4987\n   EMail: waldbusser@cmu.edu\n"
