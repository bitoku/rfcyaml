- contents:
  - '      RPC: Remote Procedure Call Protocol Specification Version 2

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes the Open Network Computing (ONC) Remote\n
    \  Procedure Call (RPC) version 2 protocol as it is currently deployed\n   and
    accepted.  This document obsoletes RFC 1831.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Requirements Language ......................................3\n   2.
    Changes since RFC 1831 ..........................................3\n   3. Terminology
    .....................................................3\n   4. The RPC Model ...................................................4\n
    \  5. Transports and Semantics ........................................5\n   6.
    Binding and Rendezvous Independence .............................7\n   7. Authentication
    ..................................................7\n   8. RPC Protocol Requirements
    .......................................7\n      8.1. RPC Programs and Procedures
    ................................8\n      8.2. Authentication, Integrity, and Privacy
    .....................9\n      8.3. Program Number Assignment .................................10\n
    \     8.4. Other Uses of the RPC Protocol ............................10\n           8.4.1.
    Batching ...........................................10\n           8.4.2. Broadcast
    Remote Procedure Calls ...................11\n   9. The RPC Message Protocol .......................................11\n
    \  10. Authentication Protocols ......................................15\n      10.1.
    Null Authentication ......................................15\n   11. Record Marking
    Standard .......................................16\n   12. The RPC Language ..............................................16\n
    \     12.1. An Example Service Described in the RPC Language .........17\n      12.2.
    The RPC Language Specification ...........................18\n      12.3. Syntax
    Notes .............................................18\n   13. IANA Considerations
    ...........................................19\n      13.1. Numbering Requests
    to IANA ...............................19\n      13.2. Protecting Past Assignments
    ..............................19\n      13.3. RPC Number Assignment ....................................19\n
    \          13.3.1. To be assigned by IANA ............................20\n           13.3.2.
    Defined by Local Administrator ....................20\n           13.3.3. Transient
    Block ...................................20\n           13.3.4. Reserved Block
    ....................................21\n           13.3.5. RPC Number Sub-Blocks
    .............................21\n      13.4. RPC Authentication Flavor Number
    Assignment ..............22\n           13.4.1. Assignment Policy .................................22\n
    \          13.4.2. Auth Flavors vs. Pseudo-Flavors ...................23\n      13.5.
    Authentication Status Number Assignment ..................23\n           13.5.1.
    Assignment Policy .................................23\n   14. Security Considerations
    .......................................24\n   Appendix A: System Authentication
    .................................25\n   Appendix B: Requesting RPC-Related Numbers
    from IANA  .............26\n   Appendix C: Current Number Assignments  ...........................27\n
    \  Normative References  .............................................62\n   Informative
    References  ...........................................62\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document specifies version 2 of the message protocol
    used in ONC\n   Remote Procedure Call (RPC).  The message protocol is specified
    with\n   the eXternal Data Representation (XDR) language [RFC4506].  This\n   document
    assumes that the reader is familiar with XDR.  It does not\n   attempt to justify
    remote procedure call systems or describe their\n   use.  The paper by Birrell
    and Nelson [XRPC] is recommended as an\n   excellent background for the remote
    procedure call concept.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      [RFC2119].\n"
    title: 1.1.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  Changes since RFC 1831\n   This document obsoletes [RFC1831] as the authoritative
    document\n   describing RPC, without introducing any over-the-wire protocol\n
    \  changes.  The main changes from RFC 1831 are:\n   o  Addition of an Appendix
    that describes how an implementor can\n      request new RPC program numbers,
    authentication flavor numbers,\n      and authentication status numbers from IANA,
    rather than from Sun\n      Microsystems\n   o  Addition of an \"IANA Considerations\"
    section that describes past\n      number assignment policy and how IANA is intended
    to assign them\n      in the future\n   o  Clarification of the RPC Language Specification
    to match current\n      usage\n   o  Enhancement of the \"Security Considerations\"
    section to reflect\n      experience with strong security flavors\n   o  Specification
    of new authentication errors that are in common use\n      in modern RPC implementations\n
    \  o  Updates for the latest IETF intellectual property statements\n"
  title: 2.  Changes since RFC 1831
- contents:
  - "3.  Terminology\n   This document discusses clients, calls, servers, replies,
    services,\n   programs, procedures, and versions.  Each remote procedure call
    has\n   two sides: an active client side that makes the call to a server\n   side,
    which sends back a reply.  A network service is a collection of\n   one or more
    remote programs.  A remote program implements one or more\n   remote procedures;
    the procedures, their parameters, and results are\n   documented in the specific
    program's protocol specification.  A\n   server may support more than one version
    of a remote program in order\n   to be compatible with changing protocols.\n   For
    example, a network file service may be composed of two programs.\n   One program
    may deal with high-level applications such as file system\n   access control and
    locking.  The other may deal with low-level file\n   input and output and have
    procedures like \"read\" and \"write\".  A\n   client of the network file service
    would call the procedures\n   associated with the two programs of the service
    on behalf of the\n   client.\n   The terms \"client\" and \"server\" only apply
    to a particular\n   transaction; a particular hardware entity (host) or software
    entity\n   (process or program) could operate in both roles at different times.\n
    \  For example, a program that supplies remote execution service could\n   also
    be a client of a network file service.\n"
  title: 3.  Terminology
- contents:
  - "4.  The RPC Model\n   The ONC RPC protocol is based on the remote procedure call
    model,\n   which is similar to the local procedure call model.  In the local\n
    \  case, the caller places arguments to a procedure in some well-\n   specified
    location (such as a register window).  It then transfers\n   control to the procedure,
    and eventually regains control.  At that\n   point, the results of the procedure
    are extracted from the well-\n   specified location, and the caller continues
    execution.\n   The remote procedure call model is similar.  One thread of control\n
    \  logically winds through two processes: the caller's process and a\n   server's
    process.  The caller first sends a call message to the\n   server process and
    waits (blocks) for a reply message.  The call\n   message includes the procedure's
    parameters, and the reply message\n   includes the procedure's results.  Once
    the reply message is\n   received, the results of the procedure are extracted,
    and the\n   caller's execution is resumed.\n   On the server side, a process is
    dormant awaiting the arrival of a\n   call message.  When one arrives, the server
    process extracts the\n   procedure's parameters, computes the results, sends a
    reply message,\n   and then awaits the next call message.\n   In this model, only
    one of the two processes is active at any given\n   time.  However, this model
    is only given as an example.  The ONC RPC\n   protocol makes no restrictions on
    the concurrency model implemented,\n   and others are possible.  For example,
    an implementation may choose\n   to have RPC calls be asynchronous so that the
    client may do useful\n   work while waiting for the reply from the server.  Another\n
    \  possibility is to have the server create a separate task to process\n   an
    incoming call so that the original server can be free to receive\n   other requests.\n
    \  There are a few important ways in which remote procedure calls differ\n   from
    local procedure calls.\n   o  Error handling: failures of the remote server or
    network must be\n      handled when using remote procedure calls.\n   o  Global
    variables and side effects: since the server does not have\n      access to the
    client's address space, hidden arguments cannot be\n      passed as global variables
    or returned as side effects.\n   o  Performance:  remote procedures usually operate
    at one or more\n      orders of magnitude slower than local procedure calls.\n
    \  o  Authentication: since remote procedure calls can be transported\n      over
    unsecured networks, authentication may be necessary.\n      Authentication prevents
    one entity from masquerading as some other\n      entity.\n   The conclusion is
    that even though there are tools to automatically\n   generate client and server
    libraries for a given service, protocols\n   must still be designed carefully.\n"
  title: 4.  The RPC Model
- contents:
  - "5.  Transports and Semantics\n   The RPC protocol can be implemented on several
    different transport\n   protocols.  The scope of the definition of the RPC protocol
    excludes\n   how a message is passed from one process to another, and includes\n
    \  only the specification and interpretation of messages.  However, the\n   application
    may wish to obtain information about (and perhaps control\n   over) the transport
    layer through an interface not specified in this\n   document.  For example, the
    transport protocol may impose a\n   restriction on the maximum size of RPC messages,
    or it may be\n   stream-oriented like TCP [RFC0793] with no size limit.  The client\n
    \  and server must agree on their transport protocol choices.\n   It is important
    to point out that RPC does not try to implement any\n   kind of reliability and
    that the application may need to be aware of\n   the type of transport protocol
    underneath RPC.  If it knows it is\n   running on top of a reliable transport
    such as TCP, then most of the\n   work is already done for it.  On the other hand,
    if it is running on\n   top of an unreliable transport such as UDP [RFC0768],
    it must\n   implement its own time-out, retransmission, and duplicate detection\n
    \  policies as the RPC protocol does not provide these services.\n   Because of
    transport independence, the RPC protocol does not attach\n   specific semantics
    to the remote procedures or their execution\n   requirements.  Semantics can be
    inferred from (but should be\n   explicitly specified by) the underlying transport
    protocol.  For\n   example, consider RPC running on top of an unreliable transport
    such\n   as UDP.  If an application retransmits RPC call messages after time-\n
    \  outs, and does not receive a reply, it cannot infer anything about\n   the
    number of times the procedure was executed.  If it does receive a\n   reply, then
    it can infer that the procedure was executed at least\n   once.\n   A server may
    wish to remember previously granted requests from a\n   client and not regrant
    them, in order to insure some degree of\n   execute-at-most-once semantics.  A
    server can do this by taking\n   advantage of the transaction ID that is packaged
    with every RPC\n   message.  The main use of this transaction ID is by the client
    RPC\n   entity in matching replies to calls.  However, a client application\n
    \  may choose to reuse its previous transaction ID when retransmitting a\n   call.
    \ The server may choose to remember this ID after executing a\n   call and not
    execute calls with the same ID, in order to achieve some\n   degree of execute-at-most-once
    semantics.  The server is not allowed\n   to examine this ID in any other way
    except as a test for equality.\n   On the other hand, if using a \"reliable\"
    transport such as TCP, the\n   application can infer from a reply message that
    the procedure was\n   executed exactly once, but if it receives no reply message,
    it cannot\n   assume that the remote procedure was not executed.  Note that even
    if\n   a connection-oriented protocol like TCP is used, an application still\n
    \  needs time-outs and reconnections to handle server crashes.\n   There are other
    possibilities for transports besides datagram- or\n   connection-oriented protocols.
    \ For example, a request-reply protocol\n   such as [VMTP] is perhaps a natural
    transport for RPC.  ONC RPC\n   currently uses both TCP and UDP transport protocols.
    \ Section 11\n   (\"Record Marking Standard\") describes the mechanism employed
    by ONC\n   RPC to utilize a connection-oriented, stream-oriented transport such\n
    \  as TCP.  The mechanism by which future transports having different\n   structural
    characteristics should be used to transfer ONC RPC\n   messages should be specified
    by means of a Standards Track RFC, once\n   such additional transports are defined.\n"
  title: 5.  Transports and Semantics
- contents:
  - "6.  Binding and Rendezvous Independence\n   The act of binding a particular client
    to a particular service and\n   transport parameters is NOT part of this RPC protocol
    specification.\n   This important and necessary function is left up to some higher-level\n
    \  software.\n   Implementors could think of the RPC protocol as the jump-subroutine\n
    \  instruction (JSR) of a network; the loader (binder) makes JSR useful,\n   and
    the loader itself uses JSR to accomplish its task.  Likewise, the\n   binding
    software makes RPC useful, possibly using RPC to accomplish\n   this task.\n"
  title: 6.  Binding and Rendezvous Independence
- contents:
  - "7.  Authentication\n   The RPC protocol provides the fields necessary for a client
    to\n   identify itself to a service, and vice-versa, in each call and reply\n
    \  message.  Security and access control mechanisms can be built on top\n   of
    this message authentication.  Several different authentication\n   protocols can
    be supported.  A field in the RPC header indicates\n   which protocol is being
    used.  More information on specific\n   authentication protocols is in Section
    8.2, \"Authentication,\n   Integrity and Privacy\".\n"
  title: 7.  Authentication
- contents:
  - "8.  RPC Protocol Requirements\n   The RPC protocol must provide for the following:\n
    \  o  Unique specification of a procedure to be called\n   o  Provisions for matching
    response messages to request messages\n   o  Provisions for authenticating the
    caller to service and vice-versa\n   Besides these requirements, features that
    detect the following are\n   worth supporting because of protocol roll-over errors,
    implementation\n   bugs, user error, and network administration:\n   o  RPC protocol
    mismatches\n   o  Remote program protocol version mismatches\n   o  Protocol errors
    (such as misspecification of a procedure's\n      parameters)\n   o  Reasons why
    remote authentication failed\n   o  Any other reasons why the desired procedure
    was not called\n"
  - contents:
    - "8.1.  RPC Programs and Procedures\n   The RPC call message has three unsigned-integer
      fields -- remote\n   program number, remote program version number, and remote
      procedure\n   number -- that uniquely identify the procedure to be called.  Program\n
      \  numbers are administered by a central authority (IANA).  Once\n   implementors
      have a program number, they can implement their remote\n   program; the first
      implementation would most likely have the version\n   number 1 but MUST NOT
      be the number zero.  Because most new protocols\n   evolve, a \"version\" field
      of the call message identifies which\n   version of the protocol the caller
      is using.  Version numbers enable\n   support of both old and new protocols
      through the same server\n   process.\n   The procedure number identifies the
      procedure to be called.  These\n   numbers are documented in the specific program's
      protocol\n   specification.  For example, a file service's protocol specification\n
      \  may state that its procedure number 5 is \"read\" and procedure number\n
      \  12 is \"write\".\n   Just as remote program protocols may change over several
      versions,\n   the actual RPC message protocol could also change.  Therefore,
      the\n   call message also has in it the RPC version number, which is always\n
      \  equal to 2 for the version of RPC described here.\n   The reply message to
      a request message has enough information to\n   distinguish the following error
      conditions:\n   o  The remote implementation of RPC does not support protocol
      version\n      2.  The lowest and highest supported RPC version numbers are\n
      \     returned.\n   o  The remote program is not available on the remote system.\n
      \  o  The remote program does not support the requested version number.\n      The
      lowest and highest supported remote program version numbers\n      are returned.\n
      \  o  The requested procedure number does not exist.  (This is usually a\n      client-side
      protocol or programming error.)\n   o  The parameters to the remote procedure
      appear to be garbage from\n      the server's point of view.  (Again, this is
      usually caused by a\n      disagreement about the protocol between client and
      service.)\n"
    title: 8.1.  RPC Programs and Procedures
  - contents:
    - "8.2.  Authentication, Integrity, and Privacy\n   Provisions for authentication
      of caller to service and vice-versa are\n   provided as a part of the RPC protocol.
      \ The call message has two\n   authentication fields: the credential and the
      verifier.  The reply\n   message has one authentication field: the response
      verifier.  The RPC\n   protocol specification defines all three fields to be
      the following\n   opaque type (in the eXternal Data Representation (XDR) language\n
      \  [RFC4506]):\n         enum auth_flavor {\n            AUTH_NONE       = 0,\n
      \           AUTH_SYS        = 1,\n            AUTH_SHORT      = 2,\n            AUTH_DH
      \        = 3,\n            RPCSEC_GSS      = 6\n            /* and more to be
      defined */\n         };\n         struct opaque_auth {\n            auth_flavor
      flavor;\n            opaque body<400>;\n         };\n   In other words, any
      \"opaque_auth\" structure is an \"auth_flavor\"\n   enumeration followed by
      up to 400 bytes that are opaque to\n   (uninterpreted by) the RPC protocol implementation.\n
      \  The interpretation and semantics of the data contained within the\n   authentication
      fields are specified by individual, independent\n   authentication protocol
      specifications.\n   If authentication parameters were rejected, the reply message\n
      \  contains information stating why they were rejected.\n   As demonstrated
      by RPCSEC_GSS, it is possible for an \"auth_flavor\" to\n   also support integrity
      and privacy.\n"
    title: 8.2.  Authentication, Integrity, and Privacy
  - contents:
    - "8.3.  Program Number Assignment\n   Program numbers are given out in groups
      according to the following\n   chart:\n             0x00000000                Reserved\n
      \            0x00000001 - 0x1fffffff   To be assigned by IANA\n             0x20000000
      - 0x3fffffff   Defined by local administrator\n                                       (some
      blocks assigned here)\n             0x40000000 - 0x5fffffff   Transient\n             0x60000000
      - 0x7effffff   Reserved\n             0x7f000000 - 0x7fffffff   Assignment outstanding\n
      \            0x80000000 - 0xffffffff   Reserved\n   The first group is a range
      of numbers administered by IANA and should\n   be identical for all sites.  The
      second range is for applications\n   peculiar to a particular site.  This range
      is intended primarily for\n   debugging new programs.  When a site develops
      an application that\n   might be of general interest, that application should
      be given an\n   assigned number in the first range.  Application developers
      may apply\n   for blocks of RPC program numbers in the first range by methods\n
      \  described in Appendix B.  The third group is for applications that\n   generate
      program numbers dynamically.  The final groups are reserved\n   for future use,
      and should not be used.\n"
    title: 8.3.  Program Number Assignment
  - contents:
    - "8.4.  Other Uses of the RPC Protocol\n   The intended use of this protocol
      is for calling remote procedures.\n   Normally, each call message is matched
      with a reply message.\n   However, the protocol itself is a message-passing
      protocol with which\n   other (non-procedure-call) protocols can be implemented.\n"
    - contents:
      - "8.4.1.  Batching\n   Batching is useful when a client wishes to send an arbitrarily
        large\n   sequence of call messages to a server.  Batching typically uses\n
        \  reliable byte stream protocols (like TCP) for its transport.  In the\n
        \  case of batching, the client never waits for a reply from the server,\n
        \  and the server does not send replies to batch calls.  A sequence of\n   batch
        calls is usually terminated by a legitimate remote procedure\n   call operation
        in order to flush the pipeline and get positive\n   acknowledgement.\n"
      title: 8.4.1.  Batching
    - contents:
      - "8.4.2.  Broadcast Remote Procedure Calls\n   In broadcast protocols, the
        client sends a broadcast call to the\n   network and waits for numerous replies.
        \ This requires the use of\n   packet-based protocols (like UDP) as its transport
        protocol.  Servers\n   that support broadcast protocols usually respond only
        when the call\n   is successfully processed and are silent in the face of
        errors, but\n   this varies with the application.\n   The principles of broadcast
        RPC also apply to multicasting -- an RPC\n   request can be sent to a multicast
        address.\n"
      title: 8.4.2.  Broadcast Remote Procedure Calls
    title: 8.4.  Other Uses of the RPC Protocol
  title: 8.  RPC Protocol Requirements
- contents:
  - "9.  The RPC Message Protocol\n   This section defines the RPC message protocol
    in the XDR data\n   description language [RFC4506].\n         enum msg_type {\n
    \           CALL  = 0,\n            REPLY = 1\n         };\n   A reply to a call
    message can take on two forms: the message was\n   either accepted or rejected.\n
    \        enum reply_stat {\n            MSG_ACCEPTED = 0,\n            MSG_DENIED
    \  = 1\n         };\n   Given that a call message was accepted, the following
    is the status\n   of an attempt to call a remote procedure.\n         enum accept_stat
    {\n            SUCCESS       = 0, /* RPC executed successfully       */\n            PROG_UNAVAIL
    \ = 1, /* remote hasn't exported program  */\n            PROG_MISMATCH = 2, /*
    remote can't support version #  */\n            PROC_UNAVAIL  = 3, /* program
    can't support procedure */\n            GARBAGE_ARGS  = 4, /* procedure can't
    decode params   */\n            SYSTEM_ERR    = 5  /* e.g. memory allocation failure
    \ */\n         };\n   Reasons why a call message was rejected:\n         enum
    reject_stat {\n            RPC_MISMATCH = 0, /* RPC version number != 2          */\n
    \           AUTH_ERROR = 1    /* remote can't authenticate caller */\n         };\n
    \  Why authentication failed:\n      enum auth_stat {\n         AUTH_OK           =
    0,  /* success                        */\n         /*\n          * failed at remote
    end\n          */\n         AUTH_BADCRED      = 1,  /* bad credential (seal broken)
    \  */\n         AUTH_REJECTEDCRED = 2,  /* client must begin new session  */\n
    \        AUTH_BADVERF      = 3,  /* bad verifier (seal broken)     */\n         AUTH_REJECTEDVERF
    = 4,  /* verifier expired or replayed   */\n         AUTH_TOOWEAK      = 5,  /*
    rejected for security reasons  */\n         /*\n          * failed locally\n          */\n
    \        AUTH_INVALIDRESP  = 6,  /* bogus response verifier        */\n         AUTH_FAILED
    \      = 7,  /* reason unknown                 */\n         /*\n          * AUTH_KERB
    errors; deprecated.  See [RFC2695]\n          */\n         AUTH_KERB_GENERIC =
    8,  /* kerberos generic error */\n         AUTH_TIMEEXPIRE = 9,    /* time of
    credential expired */\n         AUTH_TKT_FILE = 10,     /* problem with ticket
    file */\n         AUTH_DECODE = 11,       /* can't decode authenticator */\n         AUTH_NET_ADDR
    = 12,     /* wrong net address in ticket */\n         /*\n          * RPCSEC_GSS
    GSS related errors\n          */\n         RPCSEC_GSS_CREDPROBLEM = 13, /* no
    credentials for user */\n         RPCSEC_GSS_CTXPROBLEM = 14   /* problem with
    context */\n      };\n   As new authentication mechanisms are added, there may
    be a need for\n   more status codes to support them.  IANA will hand out new auth_stat\n
    \  numbers on a simple First Come First Served basis as defined in the\n   \"IANA
    Considerations\" and Appendix B.\n   The RPC message:\n   All messages start with
    a transaction identifier, xid, followed by a\n   two-armed discriminated union.
    \ The union's discriminant is a\n   msg_type that switches to one of the two types
    of the message.  The\n   xid of a REPLY message always matches that of the initiating
    CALL\n   message.  NB: The \"xid\" field is only used for clients matching reply\n
    \  messages with call messages or for servers detecting retransmissions;\n   the
    service side cannot treat this id as any type of sequence number.\n         struct
    rpc_msg {\n            unsigned int xid;\n            union switch (msg_type mtype)
    {\n            case CALL:\n               call_body cbody;\n            case REPLY:\n
    \              reply_body rbody;\n            } body;\n         };\n   Body of
    an RPC call:\n   In version 2 of the RPC protocol specification, rpcvers MUST
    be equal\n   to 2.  The fields \"prog\", \"vers\", and \"proc\" specify the remote\n
    \  program, its version number, and the procedure within the remote\n   program
    to be called.  After these fields are two authentication\n   parameters: cred
    (authentication credential) and verf (authentication\n   verifier).  The two authentication
    parameters are followed by the\n   parameters to the remote procedure, which are
    specified by the\n   specific program protocol.\n   The purpose of the authentication
    verifier is to validate the\n   authentication credential.  Note that these two
    items are\n   historically separate, but are always used together as one logical\n
    \  entity.\n        struct call_body {\n           unsigned int rpcvers;       /*
    must be equal to two (2) */\n           unsigned int prog;\n           unsigned
    int vers;\n           unsigned int proc;\n           opaque_auth cred;\n           opaque_auth
    verf;\n           /* procedure-specific parameters start here */\n        };\n
    \  Body of a reply to an RPC call:\n         union reply_body switch (reply_stat
    stat) {\n         case MSG_ACCEPTED:\n            accepted_reply areply;\n         case
    MSG_DENIED:\n            rejected_reply rreply;\n         } reply;\n   Reply to
    an RPC call that was accepted by the server:\n   There could be an error even
    though the call was accepted.  The first\n   field is an authentication verifier
    that the server generates in\n   order to validate itself to the client.  It is
    followed by a union\n   whose discriminant is an enum accept_stat.  The SUCCESS
    arm of the\n   union is protocol-specific.  The PROG_UNAVAIL, PROC_UNAVAIL,\n
    \  GARBAGE_ARGS, and SYSTEM_ERR arms of the union are void.  The\n   PROG_MISMATCH
    arm specifies the lowest and highest version numbers of\n   the remote program
    supported by the server.\n         struct accepted_reply {\n            opaque_auth
    verf;\n            union switch (accept_stat stat) {\n            case SUCCESS:\n
    \              opaque results[0];\n               /*\n                * procedure-specific
    results start here\n                */\n             case PROG_MISMATCH:\n                struct
    {\n                   unsigned int low;\n                   unsigned int high;\n
    \               } mismatch_info;\n             default:\n                /*\n
    \                * Void.  Cases include PROG_UNAVAIL, PROC_UNAVAIL,\n                 *
    GARBAGE_ARGS, and SYSTEM_ERR.\n                 */\n                void;\n             }
    reply_data;\n         };\n   Reply to an RPC call that was rejected by the server:\n
    \  The call can be rejected for two reasons: either the server is not\n   running
    a compatible version of the RPC protocol (RPC_MISMATCH) or\n   the server rejects
    the identity of the caller (AUTH_ERROR).  In case\n   of an RPC version mismatch,
    the server returns the lowest and highest\n   supported RPC version numbers.  In
    case of invalid authentication,\n   failure status is returned.\n         union
    rejected_reply switch (reject_stat stat) {\n         case RPC_MISMATCH:\n            struct
    {\n               unsigned int low;\n               unsigned int high;\n            }
    mismatch_info;\n         case AUTH_ERROR:\n            auth_stat stat;\n         };\n"
  title: 9.  The RPC Message Protocol
- contents:
  - "10.  Authentication Protocols\n   As previously stated, authentication parameters
    are opaque, but\n   open-ended to the rest of the RPC protocol.  This section
    defines two\n   standard flavors of authentication.  Implementors are free to
    invent\n   new authentication types, with the same rules of flavor number\n   assignment
    as there are for program number assignment.  The flavor of\n   a credential or
    verifier refers to the value of the \"flavor\" field in\n   the opaque_auth structure.
    \ Flavor numbers, like RPC program numbers,\n   are also administered centrally,
    and developers may assign new flavor\n   numbers by methods described in Appendix
    B.  Credentials and\n   verifiers are represented as variable-length opaque data
    (the \"body\"\n   field in the opaque_auth structure).\n   In this document, two
    flavors of authentication are described.  Of\n   these, Null authentication (described
    in the next subsection) is\n   mandatory -- it MUST be available in all implementations.
    \ System\n   authentication (AUTH_SYS) is described in Appendix A.  Implementors\n
    \  MAY include AUTH_SYS in their implementations to support existing\n   applications.
    \ See \"Security Considerations\" for information about\n   other, more secure,
    authentication flavors.\n"
  - contents:
    - "10.1.  Null Authentication\n   Often, calls must be made where the client does
      not care about its\n   identity or the server does not care who the client is.
      \ In this\n   case, the flavor of the RPC message's credential, verifier, and
      reply\n   verifier is \"AUTH_NONE\".  Opaque data associated with \"AUTH_NONE\"
      is\n   undefined.  It is recommended that the length of the opaque data be\n
      \  zero.\n"
    title: 10.1.  Null Authentication
  title: 10.  Authentication Protocols
- contents:
  - "11.  Record Marking Standard\n   When RPC messages are passed on top of a byte
    stream transport\n   protocol (like TCP), it is necessary to delimit one message
    from\n   another in order to detect and possibly recover from protocol errors.\n
    \  This is called record marking (RM).  One RPC message fits into one RM\n   record.\n
    \  A record is composed of one or more record fragments.  A record\n   fragment
    is a four-byte header followed by 0 to (2**31) - 1 bytes of\n   fragment data.
    \ The bytes encode an unsigned binary number; as with\n   XDR integers, the byte
    order is from highest to lowest.  The number\n   encodes two values -- a boolean
    that indicates whether the fragment\n   is the last fragment of the record (bit
    value 1 implies the fragment\n   is the last fragment) and a 31-bit unsigned binary
    value that is the\n   length in bytes of the fragment's data.  The boolean value
    is the\n   highest-order bit of the header; the length is the 31 low-order bits.\n
    \  (Note that this record specification is NOT in XDR standard form!)\n"
  title: 11.  Record Marking Standard
- contents:
  - "12.  The RPC Language\n   Just as there was a need to describe the XDR data-types
    in a formal\n   language, there is also need to describe the procedures that operate\n
    \  on these XDR data-types in a formal language as well.  The RPC\n   language
    is an extension to the XDR language, with the addition of\n   \"program\", \"procedure\",
    and \"version\" declarations.  The keywords\n   \"program\" and \"version\" are
    reserved in the RPC language, and\n   implementations of XDR compilers MAY reserve
    these keywords even when\n   provided with pure XDR, non-RPC, descriptions.  The
    following example\n   is used to describe the essence of the language.\n"
  - contents:
    - "12.1.  An Example Service Described in the RPC Language\n   Here is an example
      of the specification of a simple ping program.\n      program PING_PROG {\n
      \           /*\n             * Latest and greatest version\n             */\n
      \           version PING_VERS_PINGBACK {\n               void\n               PINGPROC_NULL(void)
      = 0;\n               /*\n                * Ping the client, return the round-trip
      time\n                * (in microseconds).  Returns -1 if the operation\n                *
      timed out.\n                */\n               int\n               PINGPROC_PINGBACK(void)
      = 1;\n            } = 2;\n            /*\n             * Original version\n
      \            */\n            version PING_VERS_ORIG {\n               void\n
      \              PINGPROC_NULL(void) = 0;\n            } = 1;\n         } = 1;\n
      \        const PING_VERS = 2;      /* latest version */\n   The first version
      described is PING_VERS_PINGBACK with two\n   procedures: PINGPROC_NULL and PINGPROC_PINGBACK.
      \ PINGPROC_NULL takes\n   no arguments and returns no results, but it is useful
      for computing\n   round-trip times from the client to the server and back again.
      \ By\n   convention, procedure 0 of any RPC protocol should have the same\n
      \  semantics and never require any kind of authentication.  The second\n   procedure
      is used for the client to have the server do a reverse ping\n   operation back
      to the client, and it returns the amount of time (in\n   microseconds) that
      the operation used.  The next version,\n   PING_VERS_ORIG, is the original version
      of the protocol, and it does\n   not contain the PINGPROC_PINGBACK procedure.
      \ It is useful for\n   compatibility with old client programs, and as this program
      matures,\n   it may be dropped from the protocol entirely.\n"
    title: 12.1.  An Example Service Described in the RPC Language
  - contents:
    - "12.2.  The RPC Language Specification\n   The RPC language is identical to
      the XDR language defined in RFC\n   4506, except for the added definition of
      a \"program-def\", described\n   below.\n      program-def:\n         \"program\"
      identifier \"{\"\n            version-def\n            version-def *\n         \"}\"
      \"=\" constant \";\"\n      version-def:\n         \"version\" identifier \"{\"\n
      \            procedure-def\n             procedure-def *\n         \"}\" \"=\"
      constant \";\"\n      procedure-def:\n         proc-return identifier \"(\"
      proc-firstarg\n           (\",\" type-specifier )* \")\" \"=\" constant \";\"\n
      \     proc-return: \"void\" | type-specifier\n      proc-firstarg: \"void\"
      | type-specifier\n"
    title: 12.2.  The RPC Language Specification
  - contents:
    - "12.3.  Syntax Notes\n   o  The following keywords are added and cannot be used
      as\n      identifiers: \"program\" and \"version\".\n   o  A version name cannot
      occur more than once within the scope of a\n      program definition.  Neither
      can a version number occur more than\n      once within the scope of a program
      definition.\n   o  A procedure name cannot occur more than once within the scope
      of a\n      version definition.  Neither can a procedure number occur more\n
      \     than once within the scope of version definition.\n   o  Program identifiers
      are in the same name space as constant and\n      type identifiers.\n   o  Only
      unsigned constants can be assigned to programs, versions, and\n      procedures.\n
      \  o  Current RPC language compilers do not generally support more than\n      one
      type-specifier in procedure argument lists; the usual practice\n      is to
      wrap arguments into a structure.\n"
    title: 12.3.  Syntax Notes
  title: 12.  The RPC Language
- contents:
  - "13.  IANA Considerations\n   The assignment of RPC program numbers, authentication
    flavor numbers,\n   and authentication status numbers has in the past been performed
    by\n   Sun Microsystems, Inc (Sun).  This is inappropriate for an IETF\n   Standards
    Track protocol, as such work is done well by the Internet\n   Assigned Numbers
    Authority (IANA).  This document proposes the\n   transfer of authority over RPC
    program numbers, authentication flavor\n   numbers, and authentication status
    numbers described here from Sun\n   Microsystems, Inc. to IANA and describes how
    IANA will maintain and\n   assign these numbers.  Users of RPC protocols will
    benefit by having\n   an independent body responsible for these number assignments.\n"
  - contents:
    - "13.1.  Numbering Requests to IANA\n   Appendix B of this document describes
      the information to be sent to\n   IANA to request one or more RPC numbers and
      the rules that apply.\n   IANA will store the request for documentary purposes
      and put the\n   following information into the public registry:\n   o  The short
      description of purpose and use\n   o  The program number(s) assigned\n   o  The
      short identifier string(s)\n"
    title: 13.1.  Numbering Requests to IANA
  - contents:
    - "13.2.  Protecting Past Assignments\n   Sun has made assignments in both the
      RPC program number space and the\n   RPC authentication flavor number space
      since the original deployment\n   of RPC.  The assignments made by Sun Microsystems
      are still valid,\n   and will be preserved.  Sun has communicated all current
      assignments\n   in both number spaces to IANA and final handoff of number assignment\n
      \  is complete.  Current program and auth number assignments are\n   provided
      in Appendix C.  Current authentication status numbers are\n   listed in Section
      9 of this document in the \"enum auth_stat\"\n   definition.\n"
    title: 13.2.  Protecting Past Assignments
  - contents:
    - "13.3.  RPC Number Assignment\n   Future IANA practice will deal with the following
      partitioning of the\n   32-bit number space as listed in Section 8.3.  Detailed
      information\n   for the administration of the partitioned blocks in Section
      8.3 is\n   given below.\n"
    - contents:
      - "13.3.1.  To Be Assigned By IANA\n   The first block will be administered
        by IANA, with previous\n   assignments by Sun protected.  Previous assignments
        were restricted\n   to the range decimal 100000-399999 (0x000186a0 to 0x00061a7f);\n
        \  therefore, IANA will begin assignments at decimal 400000.  Individual\n
        \  numbers should be grated on a First Come First Served basis, and\n   blocks
        should be granted under rules related to the size of the\n   block.\n"
      title: 13.3.1.  To Be Assigned By IANA
    - contents:
      - "13.3.2.  Defined by Local Administrator\n   The \"Defined by local administrator\"
        block is available for any local\n   administrative domain to use, in a similar
        manner to IP address\n   ranges reserved for private use.  The expected use
        would be through\n   the establishment of a local domain \"authority\" for
        assigning numbers\n   from this range.  This authority would establish any
        policies or\n   procedures to be used within that local domain for use or
        assignment\n   of RPC numbers from the range.  The local domain should be\n
        \  sufficiently isolated that it would be unlikely that RPC applications\n
        \  developed by other local domains could communicate with the domain.\n   This
        could result in RPC number contention, which would cause one of\n   the applications
        to fail.  In the absence of a local administrator,\n   this block can be utilized
        in a \"Private Use\" manner per [RFC5226].\n"
      title: 13.3.2.  Defined by Local Administrator
    - contents:
      - "13.3.3.  Transient Block\n   The \"Transient\" block can be used by any RPC
        application on an \"as\n   available\" basis.  This range is intended for
        services that can\n   communicate a dynamically selected RPC program number
        to clients of\n   the service.  Any mechanism can be used to communicate the
        number.\n   For example, either shared memory when the client and server are\n
        \  located on the same system or a network message (either RPC or\n   otherwise)
        that disseminates the selected number can be used.\n   The transient block
        is not administered.  An RPC service uses this\n   range by selecting a number
        in the transient range and attempting to\n   register that number with the
        local system's RPC bindery (see the\n   RPCBPROC_SET or PMAPPROC_SET procedures
        in \"Binding Protocols for ONC\n   RPC Version 2\", [RFC1833]).  If successful,
        no other RPC service was\n   using that number and the RPC Bindery has assigned
        that number to the\n   requesting RPC application.  The registration is valid
        until the RPC\n   Bindery terminates, which normally would only happen if
        the system\n   reboots, causing all applications, including the RPC service
        using\n   the transient number, to terminate.  If the transient number\n   registration
        fails, another RPC application is using the number and\n   the requestor must
        select another number and try again.  To avoid\n   conflicts, the recommended
        method is to select a number randomly from\n   the transient range.\n"
      title: 13.3.3.  Transient Block
    - contents:
      - "13.3.4.  Reserved Block\n   The \"Reserved\" blocks are available for future
        use.  RPC applications\n   must not use numbers in these ranges unless their
        use is allowed by\n   future action by the IESG.\n"
      title: 13.3.4.  Reserved Block
    - contents:
      - "13.3.5.  RPC Number Sub-Blocks\n   RPC numbers are usually assigned for specific
        RPC services.  Some\n   applications, however, require multiple RPC numbers
        for a service.\n   The most common example is an RPC service that needs to
        have multiple\n   instances of the service active simultaneously at a specific
        site.\n   RPC does not have an \"instance identifier\" in the protocol, so
        either\n   a mechanism must be implemented to multiplex RPC requests amongst\n
        \  various instances of the service or unique RPC numbers must be used\n   by
        each instance.\n   In these cases, the RPC protocol used with the various
        numbers may be\n   different or the same.  The numbers may either be assigned\n
        \  dynamically by the application, or as part of a site-specific\n   administrative
        decision.  If possible, RPC services that dynamically\n   assign RPC numbers
        should use the \"Transient\" RPC number block\n   defined in Section 13.3.3.
        \ If not possible, RPC number sub-blocks\n   may be requested.\n   Assignment
        of RPC Number Sub-Blocks is controlled by the size of the\n   sub-block being
        requested.  \"Specification Required\" and \"IESG\n   Approval\" are used
        as defined by Section 4.1 of [RFC5226].\n   Size of sub-block        Assignment
        Method         Authority\n   -----------------        -----------------         ---------\n
        \  Up to 100 numbers        First Come First Served   IANA\n   Up to 1000
        numbers       Specification Required    IANA\n   More than 1000 numbers   IESG
        Approval required    IESG\n   Note: sub-blocks can be any size.  The limits
        given above are\n   maximums, and smaller size sub-blocks are allowed.\n   Sub-blocks
        sized up to 100 numbers may be assigned by IANA on a First\n   Come First
        Served basis.  The RPC Service Description included in the\n   range must
        include an indication of how the sub-block is managed.  At\n   a minimum,
        the statement should indicate whether the sub-block is\n   used with a single
        RPC protocol or multiple RPC protocols, and\n   whether the numbers are dynamically
        assigned or statically (through\n   administrative action) assigned.\n   Sub-blocks
        of up to 1000 numbers must be documented in detail.  The\n   documentation
        must describe the RPC protocol or protocols that are to\n   be used in the
        range.  It must also describe how the numbers within\n   the sub-block are
        to be assigned or used.\n   Sub-blocks sized over 1000 numbers must be documented
        as described\n   above, and the assignment must be approved by the IESG.  It
        is\n   expected that this will be rare.\n   In order to avoid multiple requests
        of large blocks of numbers, the\n   following rule is proposed.\n   Requests
        up to and including 100 RPC numbers are handled via the\n   First Come First
        Served assignment method.  This 100 number threshold\n   applies to the total
        number of RPC numbers assigned to an individual\n   or entity.  For example,
        if an individual or entity first requests,\n   say, 70 numbers, and then later
        requests 40 numbers, then the request\n   for the 40 numbers will be assigned
        via the Specification Required\n   method.  As long as the total number of
        numbers assigned does not\n   exceed 1000, IANA is free to waive the Specification
        Required\n   assignment for incremental requests of less than 100 numbers.\n
        \  If an individual or entity has under 1000 numbers and later requests\n
        \  an additional set of numbers such that the individual or entity would\n
        \  be granted over 1000 numbers, then the additional request will\n   require
        IESG Approval.\n"
      title: 13.3.5.  RPC Number Sub-Blocks
    title: 13.3.  RPC Number Assignment
  - contents:
    - "13.4.  RPC Authentication Flavor Number Assignment\n   The second number space
      is the authentication mechanism identifier,\n   or \"flavor\", number.  This
      number is used to distinguish between\n   various authentication mechanisms
      that can be optionally used with an\n   RPC message.  An authentication identifier
      is used in the \"flavor\"\n   field of the \"opaque_auth\" structure.\n"
    - contents:
      - "13.4.1.  Assignment Policy\n   Appendix B of this document describes the
        information to be sent to\n   IANA to request one or more RPC auth numbers
        and the rules that\n   apply.  IANA will store the request for documentary
        purposes and put\n   the following information into the public registry:\n
        \  o  The short identifier string(s)\n   o  The auth number(s) assigned\n
        \  o  The short description of purpose and use\n"
      title: 13.4.1.  Assignment Policy
    - contents:
      - "13.4.2.  Auth Flavors vs. Pseudo-Flavors\n   Recent progress in RPC security
        has moved away from new auth flavors\n   as used by AUTH_DH [DH], and has
        focused on using the existing\n   RPCSEC_GSS [RFC2203] flavor and inventing
        novel GSS-API (Generic\n   Security Services Application Programming Interface)
        mechanisms that\n   can be used with it.  Even though RPCSEC_GSS is an assigned\n
        \  authentication flavor, use of a new RPCSEC_GSS mechanism with the\n   Network
        File System (NFS) ([RFC1094] [RFC1813], and [RFC3530]) will\n   require the
        registration of 'pseudo-flavors' that are used to\n   negotiate security mechanisms
        in an unambiguous way, as defined by\n   [RFC2623].  Existing pseudo-flavors
        have been granted in the decimal\n   range 390000-390255.  New pseudo-flavor
        requests will be granted by\n   IANA within this block on a First Come First
        Served basis.\n   For non-pseudo-flavor requests, IANA will begin granting
        RPC\n   authentication flavor numbers at 400000 on a First Come First Served\n
        \  basis to avoid conflicts with currently granted numbers.\n   For authentication
        flavors or RPCSEC_GSS mechanisms to be used on the\n   Internet, it is strongly
        advised that an Informational or Standards\n   Track RFC be published describing
        the authentication mechanism\n   behaviour and parameters.\n"
      title: 13.4.2.  Auth Flavors vs. Pseudo-Flavors
    title: 13.4.  RPC Authentication Flavor Number Assignment
  - contents:
    - "13.5.  Authentication Status Number Assignment\n   The final number space is
      the authentication status or \"auth_stat\"\n   values that describe the nature
      of a problem found during an attempt\n   to authenticate or validate authentication.
      \ The complete initial\n   list of these values is found in Section 9 of this
      document, in the\n   \"auth_stat\" enum listing.  It is expected that it will
      be rare to add\n   values, but that a small number of new values may be added
      from time\n   to time as new authentication flavors introduce new possibilities.\n
      \  Numbers should be granted on a First Come First Served basis to avoid\n   conflicts
      with currently granted numbers.\n"
    - contents:
      - "13.5.1.  Assignment Policy\n   Appendix B of this document describes the
        information to be sent to\n   IANA to request one or more auth_stat values
        and the rules that\n   apply.  IANA will store the request for documentary
        purposes, and put\n   the following information into the public registry:\n
        \  o  The short identifier string(s)\n   o  The auth_stat number(s) assigned\n
        \  o  The short description of purpose and use\n"
      title: 13.5.1.  Assignment Policy
    title: 13.5.  Authentication Status Number Assignment
  title: 13.  IANA Considerations
- contents:
  - "14.  Security Considerations\n   AUTH_SYS as described in Appendix A is known
    to be insecure due to\n   the lack of a verifier to permit the credential to be
    validated.\n   AUTH_SYS SHOULD NOT be used for services that permit clients to\n
    \  modify data.  AUTH_SYS MUST NOT be specified as RECOMMENDED or\n   REQUIRED
    for any Standards Track RPC service.\n   AUTH_DH as mentioned in Sections 8.2
    and 13.4.2 is considered\n   obsolete and insecure; see [RFC2695].  AUTH_DH SHOULD
    NOT be used for\n   services that permit clients to modify data.  AUTH_DH MUST
    NOT be\n   specified as RECOMMENDED or REQUIRED for any Standards Track RPC\n
    \  service.\n   [RFC2203] defines a new security flavor, RPCSEC_GSS, which permits\n
    \  GSS-API [RFC2743] mechanisms to be used for securing RPC.  All non-\n   trivial
    RPC programs developed in the future should implement\n   RPCSEC_GSS-based security
    appropriately.  [RFC2623] describes how\n   this was done for a widely deployed
    RPC program.\n   Standards Track RPC services MUST mandate support for RPCSEC_GSS,
    and\n   MUST mandate support for an authentication pseudo-flavor with\n   appropriate
    levels of security, depending on the need for simple\n   authentication, integrity
    (a.k.a. non-repudiation), or data privacy.\n"
  title: 14.  Security Considerations
- contents:
  - "Appendix A: System Authentication\n   The client may wish to identify itself,
    for example, as it is\n   identified on a UNIX(tm) system.  The flavor of the
    client credential\n   is \"AUTH_SYS\".  The opaque data constituting the credential
    encodes\n   the following structure:\n         struct authsys_parms {\n            unsigned
    int stamp;\n            string machinename<255>;\n            unsigned int uid;\n
    \           unsigned int gid;\n            unsigned int gids<16>;\n         };\n
    \  The \"stamp\" is an arbitrary ID that the caller machine may generate.\n   The
    \"machinename\" is the name of the caller's machine (like\n   \"krypton\").  The
    \"uid\" is the caller's effective user ID.  The \"gid\"\n   is the caller's effective
    group ID.  \"gids\" are a counted array of\n   groups that contain the caller
    as a member.  The verifier\n   accompanying the credential should have \"AUTH_NONE\"
    flavor value\n   (defined above).  Note that this credential is only unique within
    a\n   particular domain of machine names, uids, and gids.\n   The flavor value
    of the verifier received in the reply message from\n   the server may be \"AUTH_NONE\"
    or \"AUTH_SHORT\".  In the case of\n   \"AUTH_SHORT\", the bytes of the reply
    verifier's string encode an\n   opaque structure.  This new opaque structure may
    now be passed to the\n   server instead of the original \"AUTH_SYS\" flavor credential.
    \ The\n   server may keep a cache that maps shorthand opaque structures (passed\n
    \  back by way of an \"AUTH_SHORT\" style reply verifier) to the original\n   credentials
    of the caller.  The caller can save network bandwidth and\n   server cpu cycles
    by using the shorthand credential.\n   The server may flush the shorthand opaque
    structure at any time.  If\n   this happens, the remote procedure call message
    will be rejected due\n   to an authentication error.  The reason for the failure
    will be\n   \"AUTH_REJECTEDCRED\".  At this point, the client may wish to try
    the\n   original \"AUTH_SYS\" style of credential.\n   It should be noted that
    use of this flavor of authentication does not\n   guarantee any security for the
    users or providers of a service, in\n   itself.  The authentication provided by
    this scheme can be considered\n   legitimate only when applications using this
    scheme and the network\n   can be secured externally, and privileged transport
    addresses are\n   used for the communicating end-points (an example of this is
    the use\n   of privileged TCP/UDP ports in UNIX systems -- note that not all\n
    \  systems enforce privileged transport address mechanisms).\n"
  title: 'Appendix A: System Authentication'
- contents:
  - "Appendix B: Requesting RPC-Related Numbers from IANA\n   RPC program numbers,
    authentication flavor numbers, and\n   authentication status numbers that must
    be unique across all networks\n   are assigned by the Internet Assigned Number
    Authority.  To apply for\n   a single number or a block of numbers, electronic
    mail must be sent\n   to IANA <iana@iana.org> with the following information:\n
    \  o  The type of number(s) (program number or authentication flavor\n      number
    or authentication status number) sought\n   o  How many numbers are sought\n   o
    \ The name of the person or company that will use the number\n   o  An \"identifier
    string\" that associates the number with a service\n   o  Email address of the
    contact person for the service that will be\n      using the number\n   o  A short
    description of the purpose and use of the number\n   o  If an authentication flavor
    number is sought, and the number will\n      be a 'pseudo-flavor' intended for
    use with RPCSEC_GSS and NFS,\n      mappings analogous to those in Section 4.2
    of [RFC2623]\n   Specific numbers cannot be requested.  Numbers are assigned on
    a\n   First Come First Served basis.\n   For all RPC authentication flavor and
    authentication status numbers\n   to be used on the Internet, it is strongly advised
    that an\n   Informational or Standards Track RFC be published describing the\n
    \  authentication mechanism behaviour and parameters.\n"
  title: 'Appendix B: Requesting RPC-Related Numbers from IANA'
- contents:
  - "Appendix C: Current Number Assignments\n   #\n   # Sun-assigned RPC numbers\n
    \  #\n   # Description/Owner        RPC Program Number        Short Name\n   #
    -----------------------------------------------------------------\n   portmapper
    \                        100000    pmapprog portmap rpcbind\n   remote stats                       100001
    \   rstatprog\n   remote users                       100002    rusersprog\n   nfs
    \                               100003    nfs\n   yellow pages (NIS)                 100004
    \   ypprog ypserv\n   mount demon                        100005    mountprog\n
    \  remote dbx                         100006    dbxprog\n   yp binder (NIS)                    100007
    \   ypbindprog ypbind\n   shutdown msg                       100008    wall\n
    \  yppasswd server                    100009    yppasswdprog yppasswdd\n   ether
    stats                        100010    etherstatprog\n   disk quotas                        100011
    \   rquota\n   spray packets                      100012    spray\n   3270 mapper
    \                       100013    ibm3270prog\n   RJE mapper                         100014
    \   ibmrjeprog\n   selection service                  100015    selnsvcprog\n
    \  remote database access             100016    rdatabaseprog\n   remote execution
    \                  100017    rexec\n   Alice Office Automation            100018
    \   aliceprog\n   scheduling service                 100019    schedprog\n   local
    lock manager                 100020    lockprog llockmgr\n   network lock manager
    \              100021    netlockprog nlockmgr\n   x.25 inr protocol                  100022
    \   x25prog\n   status monitor 1                   100023    statmon1\n   status
    monitor 2                   100024    statmon2\n   selection library                  100025
    \   selnlibprog\n   boot parameters service            100026    bootparam\n   mazewars
    game                      100027    mazeprog\n   yp update (NIS)                    100028
    \   ypupdateprog ypupdate\n   key server                         100029    keyserveprog\n
    \  secure login                       100030    securecmdprog\n   nfs net forwarder
    init             100031    netfwdiprog\n   nfs net forwarder trans            100032
    \   netfwdtprog\n   sunlink MAP                        100033    sunlinkmap\n
    \  network monitor                    100034    netmonprog\n   lightweight database
    \              100035    dbaseprog\n   password authorization             100036
    \   pwdauthprog\n   translucent file svc               100037    tfsprog\n   nse
    server                         100038    nseprog\n   nse activate daemon                100039
    \   nse_activate_prog\n   sunview help                       100040    sunview_help_prog\n
    \  pnp install                        100041    pnp_prog\n   ip addr allocator
    \                 100042    ipaddr_alloc_prog\n   show filehandle                    100043
    \   filehandle\n   MVS NFS mount                      100044    mvsnfsprog\n   remote
    user file operations        100045    rem_fileop_user_prog\n   batched ypupdate
    \                  100046    batch_ypupdateprog\n   network execution mgr              100047
    \   nem_prog\n   raytrace/mandelbrot remote daemon  100048    raytrace_rd_prog\n
    \  raytrace/mandelbrot local daemon   100049    raytrace_ld_prog\n   remote group
    file operations       100050    rem_fileop_group_prog\n   remote system file operations
    \     100051    rem_fileop_system_prog\n   remote system role operations      100052
    \   rem_system_role_prog\n   gpd lego fb simulator              100053    [unknown]\n
    \  gpd simulator interface            100054    [unknown]\n   ioadmd                             100055
    \   ioadmd\n   filemerge                          100056    filemerge_prog\n   Name
    Binding Program               100057    namebind_prog\n   sunlink NJE                        100058
    \   njeprog\n   MVSNFS get attribute service       100059    mvsattrprog\n   SunAccess/SunLink
    resource manager 100060    rmgrprog\n   UID allocation service             100061
    \   uidallocprog\n   license broker                     100062    lbserverprog\n
    \  NETlicense client binder           100063    lbbinderprog\n   GID allocation
    service             100064    gidallocprog\n   SunIsam                            100065
    \   sunisamprog\n   Remote Debug Server                100066    rdbsrvprog\n
    \  Network Directory Daemon           100067    [unknown]\n   Network Calendar
    Program           100068    cmsd cm\n   ypxfrd                             100069
    \   ypxfrd\n   rpc.timed                          100070    timedprog\n   bugtraqd
    \                          100071    bugtraqd\n                                      100072
    \   [unknown]\n   Connectathon Billboard - NFS       100073    [unknown]\n   Connectathon
    Billboard - X         100074    [unknown]\n   Sun tool for scheduling rooms      100075
    \   schedroom\n   Authentication Negotiation         100076    authnegotiate_prog\n
    \  Database manipulation              100077    attribute_prog\n   Kerberos authentication
    daemon     100078    kerbprog\n   Internal testing product (no name) 100079    [unknown]\n
    \  Sun Consulting Special             100080    autodump_prog\n   Event protocol
    \                    100081    event_svc\n   bugtraq_qd                         100082
    \   bugtraq_qd\n   ToolTalk and Link Service Project  100083    database service\n
    \  Consulting Services                100084    [unknown]\n   Consulting Services
    \               100085    [unknown]\n   Consulting Services                100086
    \   [unknown]\n   Jupiter Administration             100087    adm_agent admind\n
    \                                     100088    [unknown]\n                                      100089
    \   [unknown]\n   Dual Disk support                  100090    libdsd/dsd\n   DocViewer
    1.1                      100091    [unknown]\n   ToolTalk                           100092
    \   remote_activation_svc\n   Consulting Services                100093    host_checking\n
    \  SNA peer-to-peer                   100094    [unknown]\n   Roger Riggs                        100095
    \   searchit\n   Robert Allen                       100096    mesgtool\n   SNA
    \                               100097    [unknown]\n   SISU                               100098
    \   networked version of CS5\n   NFS Automount File System          100099    autofs\n
    \                                     100100    msgboard\n   event dispatching
    agent [eventd]   100101    netmgt_eventd_prog\n   statistics/event logger [netlogd]
    \ 100102    netmgt_netlogd_prog\n   topology display manager [topology]100103
    \   netmgt_topology_prog\n   syncstat agent [syncstatd]         100104    netmgt_syncstatd_prog\n
    \  ip packet stats agent [ippktd]     100105    netmgt_ippktd_prog\n   netmgt
    config agent [configd]      100106    netmgt_configd_prog\n   restat agent [restatd]
    \            100107    netmgt_restatd_prog\n   lpq agent [lprstatd]               100108
    \   netmgt_lprstatd_prog\n   netmgt activity agent [mgtlogd]    100109    netmgt_mgtlogd_prog\n
    \  proxy DECnet NCP agent [proxydni]  100110    netmgt_proxydni_prog\n   topology
    mapper agent [mapperd]    100111    netmgt_mapperd_prog\n   netstat agent [netstatd]
    \          100112    netmgt_netstatd_prog\n   sample netmgt agent [sampled]      100113
    \   netmgt_sampled_prog\n   X.25 statistics agent [vcstatd]    100114    netmgt_vcstatd_prog\n
    \  Frame Relay                        100128    [unknown]\n   PPP agent                          100129
    \   [unknown]\n   localhad                           100130    rpc.localhad\n
    \  layers2                            100131    na.layers2\n   token ring agent
    \                  100132    na.tr\n   related to lockd and statd         100133
    \   nsm_addr\n   Kerberos project                   100134    kwarn\n   ertherif2
    \                         100135    na.etherif2\n   hostmem2                           100136
    \   na.hostmem2\n   iostat2                            100137    na.iostat2\n
    \  snmpv2                             100138    na.snmpv2\n   Cooperative Console
    \               100139    cc_sender\n   na.cpustat                         100140
    \   na.cpustat\n   Sun Cluster SC3.0                  100141    rgmd_receptionist\n
    \                                     100142    fed\n   Network Storage                    100143
    \   rdc\n   Sun Cluster products               100144    nafo\n   SunCluster 3.0
    \                    100145    scadmd\n   ASN.1                              100146
    \   amiserv\n                                      100147    amiaux # BER and
    DER\n                                                 encode and decode\n   Delegate
    Management Server         100148    dm\n                                      100149
    \   rkstat\n                                      100150    ocfserv\n                                      100151
    \   sccheckd\n                                      100152    autoclientd\n                                      100153
    \   sunvts\n                                      100154    ssmond\n                                      100155
    \   smserverd\n                                      100156    test1\n                                      100157
    \   test2\n                                      100158    test3\n                                      100159
    \   test4\n                                      100160    test5\n                                      100161
    \   test6\n                                      100162    test7\n                                      100163
    \   test8\n                                      100164    test9\n                                      100165
    \   test10\n                                      100166    nfsmapid\n                                      100167
    \   SUN_WBEM_C_CIMON_HANDLE\n                                      100168    sacmmd\n
    \                                     100169    fmd_adm\n                                      100170
    \   fmd_api\n                                      100171    [unknown]\n                                      100172
    \   idmapd\n   unassigned                         100173 - 100174\n   snmptrap
    \                          100175    na.snmptrap\n   unassigned                         100176-100199\n
    \  unassigned                         100200\n   MVS/NFS Memory usage stats server
    \ 100201    [unknown]\n   Netapp                             100202-100207\n   unassigned
    \                        100208-100210\n   8.0 SunLink SNA RJE                100211
    \   [unknown]\n   8.0 SunLink SNA RJE                100212    [unknown]\n                                      100213
    \   ShowMe\n                                      100214    [unknown]\n                                      100215
    \   [unknown]\n   AUTH_RSA Key service               100216    keyrsa\n   SunSelect
    PC license service       100217    [unknown]\n   WWCS (Corporate)                   100218
    \   sunsolve\n                                      100219    cstatd\n   X/Open
    Federated Naming            100220    xfn_server_prog\n   Kodak Color Management
    System      100221    kcs_network_io kcs\n   HA-DBMS                            100222
    \   ha_dbms_serv\n                                      100223-100225    [unknown]\n
    \                                     100226    hafaultd\n   NFS ACL Service                    100227
    \   nfs_acl\n   distributed lock manager           100228    dlmd\n                                      100229
    \   metad\n                                      100230    metamhd\n                                      100231
    \   nfsauth\n                                      100232    sadmind\n                                      100233
    \   ufsd\n                                      100234    grpservd\n                                      100235
    \   cachefsd\n                                      100236    msmprog Media_Server\n
    \                                     100237    ihnamed\n                                      100238
    \   ihnetd\n                                      100239    ihsecured\n                                      100240
    \   ihclassmgrd\n                                      100241    ihrepositoryd\n
    \                                     100242    metamedd rpc.metamedd\n                                      100243
    \   contentmanager cm\n                                      100244    symon\n
    \                                     100245    pld genesil\n                                      100246
    \   ctid\n                                            cluster_transport_interface\n
    \                                     100247    ccd\n                                            cluster_configuration_db\n
    \                                     100248    pmfd\n                                      100249
    \   dmi2_client\n                                      100250    mfs_admin\n                                      100251
    \   ndshared_unlink\n                                      100252    ndshared_touch\n
    \                                     100253    ndshared_slink\n                                      100254
    \   cbs control_board_server\n                                      100255    skiserv\n
    \                                     100256    nfsxa nfsxattr\n                                      100257
    \   ndshared_disable\n                                      100258    ndshared_enable\n
    \                                     100259    sms_account_admin\n                                      100260
    \   sms_modem_admin\n                                      100261    sms_r_login\n
    \                                     100262    sms_r_subaccount_mgt\n                                      100263
    \   sms_service_admin\n                                      100264    session_admin\n
    \                                     100265    canci_ancs_program\n                                      100266
    \   canci_sms_program\n                                      100267    msmp\n
    \                                     100268    halck\n                                      100269
    \   halogmsg\n                                      100270    nfs_id_map\n                                      100271
    \   ncall\n                                      100272    hmip\n                                      100273
    \   repl_mig\n                                      100274    repl_mig_cb\n   NIS+
    \                              100300    nisplus\n   NIS+                               100301
    \   nis_cachemgr\n   NIS+ call back protocol            100302    [unknown]\n
    \  NIS+ Password Update Daemon        100303    nispasswdd\n   FNS context update
    in NIS          100304    fnsypd\n                                      100305
    \   [unknown]\n                                      100306    [unknown]\n                                      100307
    \   [unknown]\n                                      100308    [unknown]\n                                      100309
    \   [unknown]\n   unassigned                         100310 - 100398\n   nfscksum
    \                          100399    nfscksum\n   network utilization agent          100400
    \   netmgt_netu_prog\n   network rpc ping agent             100401    netmgt_rping_prog\n
    \                                     100402    na.shell\n   picsprint                          100403
    \   na.picslp\n                                      100404    traps\n                                      100405
    - 100409 [unknown]\n                                      100410    jdsagent\n
    \                                     100411    na.haconfig\n                                      100412
    \   na.halhost\n                                      100413    na.hadtsrvc\n
    \                                     100414    na.hamdstat\n                                      100415
    \   na.neoadmin\n                                      100416    ex1048prog\n
    \  rdmaconfig                         100417    rpc.rdmaconfig\n   IETF NFSv4
    Working Group - FedFS   100418 - 100421\n                                      100422
    \   mdcommd\n                                      100423    kiprop krb5_iprop\n
    \                                     100424    stsf\n   unassigned                         100425
    - 100499\n   Sun Microsystems                   100500 - 100531 [unknown]\n                                      100532
    \   ucmmstate\n                                      100533    scrcmd\n   unassigned
    \                        100534 - 100999\n   nse link daemon                    101002
    \   nselinktool\n   nse link application               101003    nselinkapp\n
    \  unassigned                         101004 - 101900\n                                      101901
    \   [unknown]\n   unassigned                         101902 - 101999\n   AssetLite
    \                         102000    [unknown]\n   PagerTool                          102001
    \   [unknown]\n   Discover                           102002    [unknown]\n   unassigned
    \                        102003 - 105000\n   ShowMe                             105001
    \   sharedapp\n   Registry                           105002    REGISTRY_PROG\n
    \  Print-server                       105003    print-server\n   Proto-server
    \                      105004    proto-server\n   Notification-server                105005
    \   notification-server\n   Transfer-agent-server              105006    transfer-agent-server\n
    \  unassigned                         105007 - 110000\n                                      110001
    \   tsolrpcb\n                                      110002    tsolpeerinfo\n                                      110003
    \   tsolboot\n                                      120001    cmip na.cmip\n                                      120002
    \   na.osidiscover\n                                      120003    cmiptrap\n
    \  unassigned                         120004 - 120099\n                                      120100
    \   eserver\n                                      120101    repserver\n                                      120102
    \   swserver\n                                      120103    dmd\n                                      120104
    \   ca\n   unassigned                         120105 - 120125\n                                      120126
    \   nf_fddi\n                                      120127    nf_fddismt7_2\n   unassigned
    \                        120128 - 150000\n   pc passwd authorization            150001
    \   pcnfsdprog\n   TOPS name mapping                  150002    [unknown]\n   TOPS
    external attribute storage    150003    [unknown]\n   TOPS hierarchical file system
    \     150004    [unknown]\n   TOPS NFS transparency extensions   150005    [unknown]\n
    \  PC NFS License                     150006    pcnfslicense\n   RDA                                150007
    \   rdaprog\n   WabiServer                         150008    wsprog\n   WabiServer
    \                        150009    wsrlprog\n   unassigned                         150010
    - 160000\n                                      160001    nihon-cm\n                                      160002
    \   nihon-ce\n   unassigned                         160003 - 170099\n                                      170100
    \   domf_daemon0\n                                      170101    domf_daemon1\n
    \                                     170102    domf_daemon2\n                                      170103
    \   domf_daemon3\n                                      170104    domf_daemon4\n
    \                                     170105    domf_daemon5\n   unassigned                         170106
    - 179999\n                                      180000    cecprog\n                                      180001
    \   cecsysprog\n                                      180002    cec2cecprog\n
    \                                     180003    cesprog\n                                      180004
    \   ces2cesprog\n                                      180005    cet2cetprog\n
    \                                     180006    cet2cetdoneprog\n                                      180007
    \   cetcomprog\n                                      180008    cetsysprog\n                                      180009
    \   cghapresenceprog\n                                      180010    cgdmsyncprog\n
    \                                     180011    cgdmcnscliprog\n                                      180012
    \   cgdmcrcscliprog\n                                      180013    cgdmcrcssvcproG\n
    \                                     180014    chmprog\n                                      180015
    \   chmsysprog\n                                      180016    crcsapiprog\n
    \                                     180017    ckptmprog\n                                      180018
    \   crimcomponentprog\n                                      180019    crimqueryprog\n
    \                                     180020    crimsecondaryprog\n                                      180021
    \   crimservicesprog\n                                      180022    crimsyscomponentprog\n
    \                                     180023    crimsysservicesprog\n                                      180024
    \   csmagtapiprog\n                                      180025    csmagtcallbackprog\n
    \                                     180026    csmreplicaprog\n                                      180027
    \   csmsrvprog\n                                      180028    cssccltprog\n
    \                                     180029    csscsvrprog\n                                      180030
    \   csscopresultprog\n   unassigned                         180031 - 199999\n
    \                                     200000    pyramid_nfs\n                                      200001
    \   pyramid_reserved\n                                      200002    cadds_image\n
    \                                     200003    stellar_name_prog\n                                      200004
    \   [unknown]\n                                      200005    [unknown]\n                                      200006
    \   pacl\n                                      200007    lookupids\n                                      200008
    \   ax_statd_prog\n                                      200009    ax_statd2_prog\n
    \                                     200010    edm\n                                      200011
    \   dtedirwd\n                                      200012    [unknown]\n                                      200013
    \   [unknown]\n                                      200014    [unknown]\n                                      200015
    \   [unknown]\n                                      200016    easerpcd\n                                      200017
    \   rlxnfs\n                                      200018    sascuiddprog\n                                      200019
    \   knfsd\n                                      200020    ftnfsd ftnfsd_program\n
    \                                     200021    ftsyncd ftsyncd_program\n                                      200022
    \   ftstatd ftstatd_program\n                                      200023    exportmap\n
    \                                     200024    nfs_metadata\n   unassigned                         200025
    - 200200\n                                      200201    ecoad\n                                      200202
    \   eamon\n                                      200203    ecolic\n                                      200204
    \   cs_printstatus_svr\n                                      200205    ecodisc\n
    \  unassigned                         200206 - 300000\n                                      300001
    \   adt_rflockprog\n                                      300002    columbine1\n
    \                                     300003    system33_prog\n                                      300004
    \   frame_prog1\n                                      300005    uimxprog\n                                      300006
    \   rvd\n                                      300007    entombing daemon\n                                      300008
    \   account mgmt system\n                                      300009    frame_prog2\n
    \                                     300010    beeper access\n                                      300011
    \   dptuprog\n                                      300012    mx-bcp\n                                      300013
    \   instrument-file-access\n                                      300014    file-system-statistics\n
    \                                     300015    unify-database-server\n                                      300016
    \   tmd_msg\n                                      300017    [unknown]\n                                      300018
    \   [unknown]\n                                      300019    automounter access\n
    \                                     300020    lock server\n                                      300021
    \   [unknown]\n                                      300022    office-automation-1\n
    \                                     300023    office-automation-2\n                                      300024
    \   office-automation-3\n                                      300025    office-automation-4\n
    \                                     300026    office-automation-5\n                                      300027
    \   office-automation-6\n                                      300028    office-automation-7\n
    \                                     300029    local-data-manager\n                                      300030
    \   chide\n                                      300031    csi_program\n                                      300032
    \   [unknown]\n                                      300033    online-help\n                                      300034
    \   case-tool\n                                      300035    delta\n                                      300036
    \   rgi\n                                      300037    instrument-config-server\n
    \                                     300038    [unknown]\n                                      300039
    \   [unknown]\n                                      300040    dtia-rpc-server\n
    \                                     300041    cms\n                                      300042
    \   viewer\n                                      300043    aqm\n                                      300044
    \   exclaim\n                                      300045    masterplan\n                                      300046
    \   fig_tool\n                                      300047    [unknown]\n                                      300048
    \   [unknown]\n                                      300049    [unknown]\n                                      300050
    \   remote-lock-manager\n                                      300051    [unknown]\n
    \                                     300052    gdebug\n                                      300053
    \   ldebug\n                                      300054    rscanner\n                                      300055
    \   [unknown]\n                                      300056    [unknown]\n                                      300057
    \   [unknown]\n                                      300058    [unknown]\n                                      300059
    \   [unknown]\n                                      300060    [unknown]\n                                      300061
    \   [unknown]\n                                      300062    [unknown]\n                                      300063
    \   [unknown]\n                                      300064    [unknown]\n                                      300065
    \   [unknown]\n                                      300066    nSERVER\n                                      300067
    \   [unknown]\n                                      300068    [unknown]\n                                      300069
    \   [unknown]\n                                      300070    [unknown]\n                                      300071
    \   BioStation\n                                      300072    [unknown]\n                                      300073
    \   NetProb\n                                      300074    Logging\n                                      300075
    \   Logging\n                                      300076    [unknown]\n                                      300077
    \   [unknown]\n                                      300078    [unknown]\n                                      300079
    \   [unknown]\n                                      300080    [unknown]\n                                      300081
    \   [unknown]\n                                      300082    sw_twin\n                                      300083
    \   remote_get_login\n                                      300084    odcprog\n
    \                                     300085    [unknown]\n                                      300086
    \   [unknown]\n                                      300087    [unknown]\n                                      300088
    \   [unknown]\n                                      300089    [unknown]\n                                      300090
    \   [unknown]\n                                      300091    smartdoc\n                                      300092
    \   superping\n                                      300093    distributed-chembench\n
    \                                     300094    uacman/alfil-uacman\n                                      300095
    \   ait_rcagent_prog\n                                      300096    ait_rcagent_appl_prog\n
    \                                     300097    smart\n                                      300098
    \   ecoprog\n                                      300099    leonardo\n                                      300100
    \   [unknown]\n                                      300101    [unknown]\n                                      300102
    \   [unknown]\n                                      300103    [unknown]\n                                      300104
    \   [unknown]\n                                      300105    [unknown]\n                                      300106
    \   [unknown]\n                                      300107    [unknown]\n                                      300108
    \   wingz\n                                      300109    teidan\n                                      300110
    \   [unknown]\n                                      300111    [unknown]\n                                      300112
    \   [unknown]\n                                      300113    [unknown]\n                                      300114
    \   [unknown]\n                                      300115    [unknown]\n                                      300116
    \   cadc_fhlockprog\n                                      300117    highscan\n
    \                                     300118    [unknown]\n                                      300119
    \   [unknown]\n                                      300120    [unknown]\n                                      300121
    \   opennavigator\n                                      300122    aarpcxfer\n
    \                                     300123    [unknown]\n                                      300124
    \   [unknown]\n                                      300125    [unknown]\n                                      300126
    \   groggs\n                                      300127    licsrv\n                                      300128
    \   issdemon\n                                      300129    [unknown]\n                                      300130
    \   maximize\n                                      300131    cgm_server\n                                      300132
    \   [unknown]\n                                      300133    agent_rpc\n                                      300134
    \   docmaker\n                                      300135    docmaker\n                                      300136
    \   [unknown]\n                                      300137    [unknown]\n                                      300138
    \   [unknown]\n                                      300139    iesx\n                                      300140
    \   [unknown]\n                                      300141    [unknown]\n                                      300142
    \   [unknown]\n                                      300143    [unknown]\n                                      300144
    \   smart-mbs\n                                      300145    [unknown]\n                                      300146
    \   [unknown]\n                                      300147    docimage\n                                      300148
    \   [unknown]\n                                      300149    dmc-interface\n
    \                                     300150    [unknown]\n                                      300151
    \   jss\n                                      300152    [unknown]\n                                      300153
    \   arimage\n                                      300154    xdb-workbench\n                                      300155
    \   frontdesk\n                                      300156    dmc\n                                      300157
    \   expressight-6000\n                                      300158    graph service
    program\n                                      300159    [unknown]\n                                      300160
    \   [unknown]\n                                      300161    [unknown]\n                                      300162
    \   [unknown]\n                                      300163    [unknown]\n                                      300164
    \   [unknown]\n                                      300165    [unknown]\n                                      300166
    \   [unknown]\n                                      300167    [unknown]\n                                      300168
    \   [unknown]\n                                      300169    [unknown]\n                                      300170
    \   [unknown]\n                                      300171    [unknown]\n                                      300172
    \   [unknown]\n                                      300173    [unknown]\n                                      300174
    \   [unknown]\n                                      300175    [unknown]\n                                      300176
    \   rlpr\n                                      300177    nx_hostdprog\n                                      300178
    \   netuser-x\n                                      300179    rmntprog\n                                      300180
    \   [unknown]\n                                      300181    mipe\n                                      300182
    \   [unknown]\n                                      300183    collectorprog\n
    \                                     300184    uslookup_PROG\n                                      300185
    \   viewstation\n                                      300186    iate\n                                      300187
    \   [unknown]\n                                      300188    [unknown]\n                                      300189
    \   [unknown]\n                                      300190    imsvtprog\n                                      300191
    \   [unknown]\n                                      300192    [unknown]\n                                      300193
    \   [unknown]\n                                      300194    pmdb\n                                      300195
    \   pmda\n                                      300196    [unknown]\n                                      300197
    \   [unknown]\n                                      300198    trend_idbd\n                                      300199
    \   rres\n                                      300200    sd.masterd\n                                      300201
    \   sd.executiond\n                                      300202    sd.listend\n
    \                                     300203    sd.reserve1\n                                      300204
    \   sd.reserve2\n                                      300205    msbd\n                                      300206
    \   stagedprog\n                                      300207    mountprog\n                                      300208
    \   watchdprog\n                                      300209    pms\n                                      300210
    \   [unknown]\n                                      300211    session_server_program\n
    \                                     300212    session_program\n                                      300213
    \   debug_serverprog\n                                      300214    [unknown]\n
    \                                     300215    [unknown]\n                                      300216
    \   paceprog\n                                      300217    [unknown]\n                                      300218
    \   mbus\n                                      300219    aframes2ps\n                                      300220
    \   npartprog\n                                      300221    cm1server\n                                      300222
    \   cm1bridge\n                                      300223    sailfrogfaxprog\n
    \                                     300224    sailfrogphoneprog\n                                      300225
    \   sailfrogvmailprog\n                                      300226    wserviceprog
    arcstorm\n                                      300227    hld\n                                      300228
    \   alive\n                                      300229    radsp\n                                      300230
    \   radavx\n                                      300231    radview\n                                      300232
    \   rsys_prog\n                                      300233    rsys_prog\n                                      300234
    \   fm_rpc_prog\n                                      300235    aries\n                                      300236
    \   uapman\n                                      300237    ddman\n                                      300238
    \   top\n                                      300239    [unknown]\n                                      300240
    \   trendlink\n                                      300241    licenseprog\n                                      300242
    \   statuslicenseprog\n                                      300243    oema_rmpf_svc\n
    \                                     300244    oema_smpf_svc\n                                      300245
    \   oema_rmsg_svc\n                                      300246    grapes-sd\n
    \                                     300247    ds_master\n                                      300248
    \   ds_transfer\n                                      300249    ds_logger\n                                      300250
    \   ds_query\n                                      300251    [unknown]\n                                      300252
    \   [unknown]\n                                      300253    nsd_prog\n                                      300254
    \   browser\n                                      300255    epoch\n                                      300256
    \   floorplanner\n                                      300257    reach\n                                      300258
    \   tactic\n                                      300259    cachescientific1\n
    \                                     300260    cachescientific2\n                                      300261
    \   desksrc_prog\n                                      300262    photo3d1\n                                      300263
    \   photo3d2\n                                      300264    [unknown]\n                                      300265
    \   soundmgr\n                                      300266    s6k\n                                      300267
    \   aims_referenced_\n                                                text_processor\n
    \                                     300268    xess\n                                      300269
    \   ds_queue\n                                      300270    [unknown]\n                                      300271
    \   orionscanplus\n                                      300272    openlink-xx\n
    \                                     300273    kbmsprog\n                                      300274
    \   [unknown]\n                                      300275    futuresource\n
    \                                     300276    the_xprt\n                                      300277
    \   cmg_srvprog\n                                      300278    [unknown]\n                                      300279
    \   [unknown]\n                                      300280    front\n                                      300281
    \   [unknown]\n                                      300282    [unknown]\n                                      300283
    \   [unknown]\n                                      300284    conmanprog\n                                      300285
    \   jincv2\n                                      300286    isls\n                                      300287
    \   systemstatprog\n                                      300288    fxpsprog\n
    \                                     300289    callpath\n                                      300290
    \   axess\n                                      300291    armor_rpcd\n                                      300292
    \   armor_dictionary_rpcd\n                                      300293    armor_miscd\n
    \                                     300294    filetransfer_prog\n                                      300295
    \   bl_swda\n                                      300296    bl_hwda\n                                      300297
    \   [unknown]\n                                      300298    [unknown]\n                                      300299
    \   [unknown]\n                                      300300    filemon\n                                      300301
    \   acunetprog\n                                      300302    rbuild\n                                      300303
    \   assistprog\n                                      300304    tog\n                                      300305
    \   [unknown]\n                                      300306    sns7000\n                                      300307
    \   igprog\n                                      300308    tgprog\n                                      300309
    \   plc\n                                      300310    pxman pxlsprog\n                                      300311
    \   hde_server hdeserver\n                                      300312    tsslicenseprog\n
    \                                     300313    rpc.explorerd\n                                      300314
    \   chrd\n                                      300315    tbisam\n                                      300316
    \   tbis\n                                      300317    adsprog\n                                      300318
    \   sponsorprog\n                                      300319    querycmprog\n
    \                                     300320    [unknown]\n                                      300321
    \   [unknown]\n                                      300322    mobil1\n                                      300323
    \   sld\n                                                service_locator_daemon\n
    \                                     300324    linkprog\n                                      300325
    \   codexdaemonprog\n                                      300326    drprog\n
    \                                     300327    ressys_commands\n                                      300328
    \   stamp\n                                      300329    matlab\n                                      300330
    \   sched1d\n                                      300331    upcprog\n                                      300332
    \   xferbkch\n                                      300333    xfer\n                                      300334
    \   qbthd\n                                      300335    qbabort\n                                      300336
    \   lsd\n                                      300337    geomgrd\n                                      300338
    \   generic_fts\n                                      300339    ft_ack\n                                      300340
    \   lymb\n                                      300341    vantage\n                                      300342
    \   cltstd clooptstdprog\n                                      300343    clui
    clui_prog\n                                      300344    testerd tstdprog\n
    \                                     300345    extsim\n                                      300346
    \   cmd_dispatch maxm_ems\n                                      300347    callpath_receive_program\n
    \                                     300348    x3270prog\n                                      300349
    \   sbc_lag\n                                      300350    sbc_frsa\n                                      300351
    \   sbc_frs\n                                      300352    atommgr\n                                      300353
    \   geostrat\n                                      300354    dbvialu6.2\n                                      300355
    \   [unknown]\n                                      300356    fxncprog\n                                      300357
    \   infopolic\n                                      300358    [unknown]\n                                      300359
    \   aagns\n                                      300360    aagms\n                                      300361
    \   [unknown]\n                                      300362    clariion_mgr\n
    \                                     300363    setcimrpc\n                                      300364
    \   virtual_protocol_adapter\n                                      300365    unibart\n
    \                                     300366    uniarch\n                                      300367
    \   unifile\n                                      300368    unisrex\n                                      300369
    \   uniscmd\n                                      300370    rsc\n                                      300371
    \   set\n                                      300372    desaf-ws/key\n                                      300373
    \   reeldb\n                                      300374    nl\n                                      300375
    \   rmd\n                                      300376    agcd\n                                      300377
    \   rsynd\n                                      300378    rcnlib\n                                      300379
    \   rcnlib_attach\n                                      300380    evergreen_mgmt_agent\n
    \                                     300381    fx104prog\n                                      300382
    \   rui\n                                                remote_user_interface\n
    \                                     300383    ovomd\n                                      300384
    \   [unknown]\n                                      300385    [unknown]\n                                      300386
    \   system_server\n                                      300387    pipecs cs_pipeprog\n
    \                                               ppktrpc\n                                      300388
    \   uv-net univision\n                                      300389    auexe\n
    \                                     300390    audip\n                                      300391
    \   mqi\n                                      300392    eva\n                                      300393
    \   eeei_reserved_1\n                                      300394    eeei_reserved_2\n
    \                                     300395    eeei_reserved_3\n                                      300396
    \   eeei_reserved_4\n                                      300397    eeei_reserved_5\n
    \                                     300398    eeei_reserved_6\n                                      300399
    \   eeei_reserved_7\n                                      300400    eeei_reserved_8\n
    \                                     300401    cprlm\n                                      300402
    \   wg_idms_manager\n                                      300403    timequota\n
    \                                     300404    spiff\n                                      300405-300414
    \       ov_oem_svc\n                                      300415    ov_msg_ctlg_svc\n
    \                                     300416    ov_advt_reg_svc\n                                      300417-300424
    \ showkron\n                                      300425    daatd\n                                      300426
    \   swiftnet\n                                      300427    ovomdel\n                                      300428
    \   ovomreq\n                                      300429    msg_dispatcher\n
    \                                     300430    pcshare server\n                                      300431
    \   rcvs\n                                      300432    fdfserver\n                                      300433
    \   bssd\n                                      300434    drdd\n                                      300435
    \   mif_gutsprog\n                                      300436    mif_guiprog\n
    \                                     300437    twolfd\n                                      300438
    \   twscd\n                                      300439    nwsbumv\n                                      300440
    \   dgux_mgr\n                                      300441    pfxd\n                                      300442
    \   tds\n                                      300443    ovomadmind\n                                      300444
    \   ovomgate\n                                      300445    omadmind\n                                      300446
    \   nps\n                                      300447    npd\n                                      300448
    \   tsa\n                                      300449    cdaimc\n   unassigned
    \                        300450-300452\n                                      300453
    \   ckt_implementation\n                                      300454    mda-tactical\n
    \  unassigned                         300455-300458\n                                      300459
    \   atrrun\n                                      300460    RoadRunner\n                                      300461
    \   nas\n                                      300462    undelete\n                                      300463
    \   ovacadd\n                                      300464    tbdesmai\n                                      300465
    \   arguslm\n                                      300466    dmd\n                                      300467
    \   drd\n                                      300468    fm_help\n                                      300469
    \   ftransrpc_prog\n                                      300470    finrisk\n
    \                                     300471    dg_pc_idisched\n                                      300472
    \   dg_pc_idiserv\n                                      300473    apd\n                                      300474
    \   ap_sspd\n                                      300475    callpatheventrecorder\n
    \                                     300476    flc\n                                      300477
    \   dg_osm\n                                      300478    dspnamed\n                                      300479
    \   iqddsrv\n                                      300480    iqjobsrv\n                                      300481
    \   tacosxx\n                                      300482    wheeldbmg\n                                      300483
    \   cnxmgr_nm_prog\n                                      300484    cnxmgr_cfg_prog\n
    \                                     300485    3dsmapper\n                                      300486
    \   ids\n                                      300487    imagine_rpc_svc\n                                      300488
    \   lfn\n                                      300489    salesnet\n                                      300490
    \   defaxo\n                                      300491    dbqtsd\n                                      300492
    \   kms\n                                      300493    rpc.iced\n                                      300494
    \   calc2s\n                                      300495    ptouidprog\n                                      300496
    \   docsls\n                                      300497    new\n                                      300498
    \   collagebdg\n                                      300499    ars_server\n                                      300500
    \   ars_client\n                                      300501    vr_catalog\n                                      300502
    \   vr_tdb\n                                      300503    ama\n                                      300504
    \   evama\n                                      300505    conama\n                                      300506
    \   service_process\n                                      300507    reuse_proxy\n
    \                                     300508    mars_ctrl\n                                      300509
    \   mars_db\n                                      300510    mars_com\n                                      300511
    \   mars_admch\n                                      300512    tbpipcip\n                                      300513
    \   top_acs_svc\n                                      300514    inout_svc\n                                      300515
    \   csoft_wp\n                                      300516    mcfs\n                                      300517
    \   eventprog\n                                      300518    dg_pc_idimsg\n
    \                                     300519    dg_pc_idiaux\n                                      300520
    \   atsr_gc\n                                      300521    alarm alarm_prog\n
    \                                     300522    fts_prog\n                                      300523
    \   dcs_prog\n                                      300524    ihb_prog\n                                      300525
    \   [unknown]\n                                      300526    [unknown]\n                                      300527
    \   clu_info_prog\n                                      300528    rmfm\n                                      300529
    \   c2sdocd\n                                      300530    interahelp\n                                      300531
    \   callpathasyncmsghandler\n                                      300532    optix_arc\n
    \                                     300533    optix_ts\n                                      300534
    \   optix_wf\n                                      300535    maxopenc\n                                      300536
    \   cev cev_server\n                                      300537    sitewideprog\n
    \                                     300538    drs\n                                      300539
    \   drsdm\n                                      300540    dasgate\n                                      300541
    \   dcdbd\n                                      300542    dcpsd\n                                      300543
    \   supportlink_prog\n                                      300544    broker\n
    \                                     300545    listner\n                                      300546
    \   multiaccess\n                                      300547    spai_interface\n
    \                                     300548    spai_adaption\n                                      300549
    \   chimera_ci\n                                                chimera_clientinterface\n
    \                                     300550    chimera_pi\n                                                chimera_processinvoker\n
    \                                     300551    teamware_fl\n                                                teamware_foundationlevel\n
    \                                     300552    teamware_sl\n                                                teamware_systemlevel\n
    \                                     300553    teamware_ui\n                                                teamware_userinterface\n
    \                                     300554    lprm\n                                      300555
    \   mpsprog\n                                                Mensuration_Proxy_Server\n
    \                                     300556    mo_symdis\n                                      300557
    \   retsideprog\n                                      300558    slp\n                                      300559
    \   slm-api\n                                      300560    im_rpc teamconference\n
    \                                     300561    license_prog license\n                                      300562
    \   stuple stuple_prog\n                                      300563    upasswd_prog\n
    \                                     300564    gentranmentorsecurity\n                                      300565
    \   gentranmentorprovider\n                                      300566    latituded\n
    \                                               latitude_license_server\n                                      300567
    \   gentranmentorreq1\n                                      300568    gentranmentorreq2\n
    \                                     300569    gentranmentorreq3\n                                      300570
    \   rj_server\n                                      300571    gws-rdb\n                                      300572
    \   gws-mpmd\n                                      300573    gws-spmd\n                                      300574
    \   vwcalcd\n                                      300575    vworad\n                                      300576
    \   vwsybd\n                                      300577    vwave\n                                      300578
    \   online_assistant\n                                      300579    internet_assistant\n
    \                                     300580    spawnd\n                                      300581
    \   procmgrg\n                                      300582    cfgdbd\n                                      300583
    \   logutild\n                                      300584    ibis\n                                      300585
    \   ibisaux\n                                      300586    aapi\n                                      300587
    \   rstrt\n                                      300588    hbeat\n                                      300589
    \   pcspu\n                                      300590    empress\n                                      300591
    \   sched_server\n                                                LiveScheduler\n
    \                                     300592    path_server\n                                                LiveScheduler\n
    \                                     300593    c2sdmd\n                                      300594
    \   c2scf\n                                      300595    btsas\n                                      300596
    \   sdtas\n                                      300597    appie\n                                      300598
    \   dmi\n                                      300599    pscd\n                                            panther
    software corp daemon\n                                      300600    sisd\n                                      300601
    \   cpwebserver\n                                      300602    wwcommo\n                                      300603
    \   mx-mie\n                                      300604    mx-mie-debug\n                                      300605
    \   idmn\n                                      300606    ssrv\n                                      300607
    \   vpnserver\n                                      300608    samserver\n                                      300609
    \   sams_server\n                                      300610    chrysalis\n                                      300611
    \   ddm\n                                      300612    ddm-is\n                                      300613
    \   mx-bcp-debug\n                                      300614    upmrd\n                                      300615
    \   upmdsd\n                                      300616    res\n                                      300617
    \   colortron\n                                      300618    zrs\n                                      300619
    \   afpsrv\n                                      300620    apxft\n                                      300621
    \   nrp\n                                      300622    hpid\n                                      300623
    \   mailwatch\n                                      300624    fos bc_fcrb_receiver\n
    \                                     300625    cs_sysadmin_svr\n                                      300626
    \   cs_controller_svr\n                                      300627    nokia_nms_eai\n
    \                                     300628    dbg\n                                      300629
    \   remex\n                                      300630    cs_bind\n                                      300631
    \   idm\n                                      300632    prpasswd\n                                      300633
    \   iw-pw\n                                      300634    starrb\n                                      300635
    \   Impress_Server\n                                      300636    colorstar\n
    \                                     300637    gwugui\n                                      300638
    \   gwsgui\n                                      300639    dai_command_proxy\n
    \                                     300640    dai_alarm_server\n                                      300641
    \   dai_fui_proxy\n                                      300642    spai_command_proxy\n
    \                                     300643    spai_alarm_server\n                                      300644
    \   iris\n                                      300645    hcxttp\n                                      300646
    \   updatedb rsched\n                                      300647    urnd urn\n
    \                                     300648    iqwpsrv\n                                      300649
    \   dskutild\n                                      300650    online\n                                      300651
    \   nlserv\n                                      300652    acsm\n                                      300653
    \   dg_clar_sormsg\n                                      300654    wwpollerrpc\n
    \                                     300655    wwmodelrpc\n                                      300656
    \   nsprofd\n                                      300657    nsdistd\n                                      300658
    \   recollect\n                                      300659    lssexecd lss_res\n
    \                                     300660    lssagend lss_rea\n                                      300661
    \   cdinfo\n                                      300662    sninsr_addon\n                                      300663
    \   mm-sap\n                                      300664    ks\n                                      300665
    \   psched\n                                      300666    tekdvfs\n                                      300667
    \   storxll\n                                      300668    nisse\n                                      300669
    \   lbadvise\n                                      300670    atcinstaller\n                                      300671
    \   atntstarter\n                                      300672    NetML\n                                      300673
    \   tdmesmge\n                                      300674    tdmesmgd\n                                      300675
    \   tdmesmgt\n                                      300676    olm\n                                      300677
    \   mediamanagement\n                                      300678    rdbprog fieldowsrv\n
    \                                     300679    rpwdprog rpwd\n                                      300680
    \   sapi-trace\n                                      300681    sapi-master-daemon\n
    \                                     300682    omdcuprog om-dcu\n                                      300683
    \   wwprocmon\n                                      300684    tndidprog\n                                      300685
    \   rkey_setsecretprog\n                                      300686    asdu_server_prog\n
    \                                     300687    pwrcntrl\n                                      300688
    \   siunixd\n                                      300689    wmapi\n                                      300690
    \   cross_reference_ole\n                                      300691    rtc\n
    \                                     300692    disp\n                                      300693
    \   sql_compilation_agent\n                                      300694    tnsysprog\n
    \                                     300695    ius-sapimd\n                                      300696
    \   apteam-dx\n                                      300697    rmsrpc\n                                      300698
    \   seismic_system\n                                      300699    remote\n                                      300700
    \   tt1_ts_event nokia_nms\n                                      300701    fxrs\n
    \                                     300702    onlicense\n                                      300703
    \   vxkey\n                                      300704    dinis\n                                      300705
    \   sched2d schedule-2\n                                      300706    sched3d
    schedule-3\n                                      300707    sched4d schedule-4\n
    \                                     300708    sched5d schedule-5\n                                      300709
    \   sched6d schedule-6\n                                      300710    sched7d
    schedule-7\n                                      300711    sched8d schedule-8\n
    \                                     300712    sched9d schedule-9\n                                      300713
    \   adtsqry\n                                      300714    adserv\n                                      300715
    \   adrepserv\n                                      300716    [unknown]\n                                      300717
    \   caad\n                                      300718    caaui\n                                      300719
    \   cescda\n                                      300720    vcapiadmin\n                                      300721
    \   vcapi20\n                                      300722    tcfs\n                                      300723
    \   csed\n                                      300724    nothand\n                                      300725
    \   hacb\n                                      300726    nfauth\n                                      300727
    \   imlm\n                                      300728    bestcomm\n                                      300729
    \   lprpasswd\n                                      300730    rprpasswd\n                                      300731
    \   proplistd\n                                      300732    mikomomc\n                                      300733
    \   arepa-cas\n                                      300734    [unknown]\n                                      300735
    \   [unknown]\n                                      300736    ando_ts\n                                      300737
    \   intermezzo\n                                      300738    ftel-sdh-request\n
    \                                     300739    ftel-sdh-response\n                                      300740
    \   [unknown]\n                                      300741    [unknown]\n                                      300742
    \   [unknown]\n                                      300743    [unknown]\n                                      300744
    \   [unknown]\n                                      300745    vrc_abb\n                                      300746
    \   vrc_comau\n                                      300747    vrc_fanuc\n                                      300748
    \   vrc_kuka\n                                      300749    vrc_reis\n                                      300750
    \   hp_sv6d\n                                      300751    correntmgr01\n                                      300752
    \   correntike\n                                      300753    [unknown]\n                                      300754
    \   [unknown]\n                                      300755    intransa_location\n
    \                                     300756    intransa_management\n                                      300757
    \   intransa_federation\n                                      300758    portprot\n
    \                                     300759    ipmiprot\n                                      300760
    \   aceapi\n                                      300761    f6000pss\n                                      300762
    \   vsmapi_program\n                                      300763    ubertuple\n
    \                                     300764    ctconcrpcif\n                                      300765
    \   mfuadmin\n                                      300766    aiols\n                                      300767
    \   dsmrootd\n                                      300768    htdl\n                                      300769
    \   caba\n                                      300770    vrc_cosimir\n                                      300771
    \   cmhelmd\n                                      300772    polynsm\n                                      300773
    \   [unknown]\n                                      300774    [unknown]\n                                      300775
    \   [unknown]\n                                      300776    [unknown]\n                                      300777
    \   [unknown]\n                                      300778    [unknown]\n                                      300779
    \   [unknown]\n                                      300780    [unknown]\n                                      300781
    \   dsmrecalld\n                                      300782    [unknown]\n                                      300783
    \   [unknown]\n                                      300784    twrgcontrol\n                                      300785
    \   twrled\n                                      300786    twrcfgdb\n   BMC software
    \                      300787-300886\n   unassigned                         300887
    - 300999\n   Sun Microsystems                   301000-302000 [ 2000 numbers ]\n
    \  unassigned                         302001-349999\n   American Airlines                  350000
    - 350999\n   Acucobol Inc.                      351000 - 351099\n   The Bristol
    Group                  351100 - 351249\n   Amteva Technologies                351250
    - 351349\n                                      351350    wfmMgmtApp\n                                      351351
    \   wfmMgmtDataSrv\n                                      351352    wfmMgmtFut1\n
    \                                     351353    wfmMgmtFut1\n                                      351354
    \   wfmAPM\n                                      351355    wfmIAMgr\n                                      351356
    \   wfmECMgr\n                                      351357    wfmLookOut\n                                      351358
    \   wfmAgentFut1\n                                      351359    wfmAgentFut2\n
    \  unassigned                         351360 - 351406\n   Sterling Software ITD
    \             351407    csed\n                                      351360    sched10d\n
    \                                     351361    sched11d\n                                      351362
    \   sched12d\n                                      351363    sched13d\n                                      351364
    \   sched14d\n                                      351365    sched15d\n                                      351366
    \   sched16d\n                                      351367    sched17d\n                                      351368
    \   sched18d\n                                      351369    sched19d\n                                      351370
    \   sched20d\n                                      351371    sched21d\n                                      351372
    \   sched22d\n                                      351373    sched23d\n                                      351374
    \   sched24d\n                                      351375    sched25d\n                                      351376
    \   sched26d\n                                      351377    sched27d\n                                      351378
    \   sched28d\n                                      351379    sched29d\n                                      351380
    \   sched30d\n                                      351381    sched31d\n                                      351382
    \   sched32d\n                                      351383    sched33d\n                                      351384
    \   sched34d\n                                      351385    sched35d\n                                      351386
    \   sched36d\n                                      351387    sched37d\n                                      351388
    \   sched38d\n                                      351389    sched39d\n                                      351390
    \   consoleserver\n                                      351391    scheduleserver\n
    \                                     351392    RDELIVER\n                                      351393
    \   REVENTPROG\n                                      351394    RSENDEVENTPROG\n
    \                                     351395    snapp\n                                      351396
    \   snapad\n                                      351397    sdsoodb\n                                      351398
    \   sdsmain\n                                      351399    sdssrv\n                                      351400
    \   sdsclnt\n                                      351401    sdsreg\n                                      351402
    \   fsbatch\n                                      351403    fsmonitor\n                                      351404
    \   fsdisp\n                                      351405    fssession\n                                      351406
    \   fslog\n                                      351407    svdpappserv\n                                      351408
    \   gns\n                                      351409    [unkonwn]\n                                      351410
    \   [unkonwn]\n                                      351411    [unkonwn]\n                                      351412
    \   axi\n                                      351413    rpcxfr\n                                      351414
    \   slm\n                                      351415    smbpasswdd\n                                      351416
    \   tbdbserv\n                                      351417    tbprojserv\n                                      351418
    \   genericserver\n                                      351419    dynarc_ds\n
    \                                     351420    dnscmdr\n                                      351421
    \   ipcmdr\n                                      351422    faild\n                                      351423
    \   failmon\n                                      351424    faildebug\n                                      351425
    \   [unknown]\n                                      351426    [unknown]\n                                      351427
    \   siemens_srs\n                                      351428    bsproxy\n                                      351429
    \   ifsrpc\n                                      351430    CesPvcSm\n                                      351431
    \   FrPvcSm\n                                      351432    AtmPvcSm\n                                      351433
    \   radius\n                                      351434    auditor\n                                      351435
    \   sft\n                                      351436    voicemail\n                                      351437
    \   kis\n                                      351438    SOFTSERV_NOTIFY\n                                      351439
    \   dynarpc\n                                      351440    hc\n                                      351441
    \   iopas\n                                      351442    iopcs\n                                      351443
    \   iopss\n                                      351444    spcnfs\n                                      351445
    \   spcvss\n                                      351446    matilda_sms\n                                      351447
    \   matilda_brs\n                                      351448    matilda_dbs\n
    \                                     351449    matilda_sps\n                                      351450
    \   matilda_svs\n                                      351451    matilda_sds\n
    \                                     351452    matilda_vvs\n                                      351453
    \   matilda_stats\n                                      351454    xtrade\n                                      351455
    \   mapsvr\n                                      351456    hp_graphicsd\n                                      351457
    \   berkeley_db\n                                                berkeley_db_svc\n
    \                                     351458    io_server\n                                      351459
    \   rpc.niod\n                                      351460    rpc.kill\n                                      351461
    \   hmdisproxy\n                                      351462    smdisproxy\n                                      351463
    \   avatard\n                                      351464    namu\n                                      351465
    \   BMCSess\n                                      351466    FENS_Sport\n                                      351467
    \   EM_CONFIG\n                                      351468    EM_CONFIG_RESP\n
    \                                     351469    lodge_proof\n                                      351470
    \   ARCserveIT-Queue\n                                      351471    ARCserveIT-Device\n
    \                                     351472    ARCserveIT-Discover\n                                      351473
    \   ARCserveIT-Alert\n                                      351474    ARCserveIT-Database\n
    \                                     351475    scand1\n                                      351476
    \   scand2\n                                      351477    scand3\n                                      351478
    \   scand4\n                                      351479    scand5\n                                      351480
    \   dscv\n                                      351481    cb_svc\n                                      351482
    \   [unknown]\n                                      351483    iprobe\n                                      351484
    \   omniconf\n                                      351485    isan\n   BG Partners
    \                       351486 - 351500\n                                      351501
    \   mond\n                                      351502    iqlremote\n                                      351503
    \   iqlalarm\n   unassigned                         351504 - 351599\n   Orion
    Multisystems                 351600-351855\n   unassigned                         351856
    - 351899\n   NSP lab                            351900 - 351999\n   unassigned
    \                        351999 - 352232\n                                      352233
    \   asautostart\n                                      352234    asmediad1\n                                      352235
    \   asmediad2\n                                      352236    asmediad3\n                                      352237
    \   asmediad4\n                                      352238    asmediad5\n                                      352239
    \   asmediad6\n                                      352240    asmediad7\n                                      352241
    \   asmediad8\n                                      352242    asmediad9\n                                      352243
    \   asmediad10\n                                      352244    asmediad11\n                                      352245
    \   asmediad12\n                                      352246    asmediad13\n                                      352247
    \   asmediad14\n                                      352248    asmediad15\n                                      352249
    \   asmediad16\n                                      352250    waruser\n                                      352251
    \   warlogd\n                                      352252    warsvrmgr\n                                      352253
    \   warvfsysd\n                                      352254    warftpd\n                                      352255
    \   warnfsd\n                                      352256    bofproxyc0\n                                      352257
    \   bofproxys0\n                                      352258    bofproxyc1\n                                      352259
    \   bofproxys1\n                                      352260    bofproxyc2\n                                      352261
    \   bofproxys2\n                                      352262    bofproxyc3\n                                      352263
    \   bofproxys3\n                                      352264    bofproxyc4\n                                      352265
    \   bofproxys4\n                                      352266    bofproxyc5\n                                      352267
    \   bofproxys5\n                                      352268    bofproxyc6\n                                      352269
    \   bofproxys6\n                                      352270    bofproxyc7\n                                      352271
    \   bofproxys7\n                                      352272    bofproxyc8\n                                      352273
    \   bofproxys8\n                                      352274    bofproxyc9\n                                      352275
    \   bofproxys9\n                                      352276    bofproxyca\n                                      352277
    \   bofproxysa\n                                      352278    bofproxycb\n                                      352279
    \   bofproxysb\n                                      352280    bofproxycc\n                                      352281
    \   bofproxysc\n                                      352282    bofproxycd\n                                      352283
    \   bofproxysd\n                                      352284    bofproxyce\n                                      352285
    \   bofproxyse\n                                      352286    bofproxycf\n                                      352287
    \   bofproxysf\n                                      352288    bofproxypo0\n
    \                                     352289    bofproxypo1\n                                      352290
    \   bofproxypo2\n                                      352291    bofproxypo3\n
    \                                     352292    bofproxypo4\n   unassigned                         352293-370000\n
    \                                     370001    [unknown]\n                                      370002
    \   [unknown]\n                                      370003    [unknown]\n                                      370004
    \   [unknown]\n                                      370005    [unknown]\n                                      370006
    \   [unknown]\n                                      370007    [unknown]\n                                      370008
    \   [unknown]\n                                      370009    [unknown]\n                                      370010
    \   [unknown]\n                                      370011    [unknown]\n                                      370012
    \   [unknown]\n                                      370013    [unknown]\n                                      370014
    \   [unknown]\n                                      370015    [unknown]\n                                      370016
    \   [unknown]\n                                      370017    [unknown]\n                                      370018
    \   [unknown]\n                                      370019    [unknown]\n                                      370020
    \   [unknown]\n                                      370021    [unknown]\n                                      370022
    \   [unknown]\n                                      370023    [unknown]\n                                      370024
    \   [unknown]\n                                      370025    [unknown]\n                                      370026
    \   [unknown]\n                                      370027    [unknown]\n   unassigned
    \                        370028 - 379999\n                                      380000
    \   opensna\n                                      380001    probenet\n                                      380002
    \   [unknown]\n                                      380003    license\n                                      380004
    \   na.3com-remote\n                                      380005    na.ntp\n                                      380006
    \   probeutil\n                                      380007    na.vlb\n                                      380008
    \   cds_mhs_agent\n                                      380009    cds_x500_agent\n
    \                                     380010    cds_mailhub_agent\n                                      380011
    \   codex_6500_proxy\n                                      380012    codex_6500_trapd\n
    \                                     380013    na.nm212\n                                      380014
    \   cds_mta_metrics_agent\n                                      380015    [unkonwn]\n
    \                                     380016    na.caple\n                                      380017
    \   codexcapletrap\n   Swiss Re                           380018-380028\n                                      380029
    \   ncstat\n                                      380030    ncnfsstat\n                                      380031
    \   ftams\n                                      380032    na.isotp\n                                      380033
    \   na.rfc1006\n   unassigned                         380034 - 389999\n   Epoch
    Systems                      390000 - 390049\n   Quickturn Systems                  390050
    - 390065\n   Team One Systems                   390066 - 390075\n   General Electric
    CRD               390076 - 390085\n   TSIG NFS subcommittee              390086
    - 390089\n   SoftLab ab                         390090 - 390099\n   Legato Network
    Services            390100 - 390115\n                                      390116
    \   cdsmonitor\n                                      390117    cdslock\n                                      390118
    \   cdslicense\n                                      390119    shm\n                                      390120
    \   rws\n                                      390121    cdc\n   Data General
    \                      390122 - 390141\n   Perfect Byte                       390142
    - 390171\n   JTS Computer Systems               390172 - 390181\n   Parametric
    Technology              390182 - 390191\n   Voxem                              390192
    - 390199\n   Effix Systems                      390200 - 390299\n   Motorola                           390300
    - 390309\n   Mobile Data Intl.                  390310 - 390325\n   Physikalisches
    Institut            390326 - 390330\n   Ergon Informatik AG                390331
    - 390340\n   Analog Devices Inc.                390341 - 390348\n   Interphase
    Corporation             390349 - 390358\n   NeWsware                           390359
    - 390374\n   Qualix Group                       390375 - 390379\n   Xerox Imaging
    Systems              390380 - 390389\n   Noble Net                          390390
    - 390399\n   Legato Network Services            390400 - 390499\n   Client Server
    Tech.                390500 - 390511\n   Atria                              390512
    - 390517\n   GE NMR Instruments                 390518 - 390525\n   Harris Corp.
    \                      390526 - 390530\n   Unisys                             390531
    - 390562\n   Aggregate Computing                390563 - 390572\n   Interactive
    Data                   390573 - 390580\n   OKG AB                             390581
    - 390589\n   K2 Software                        390591 - 390594\n   Collier Jackson
    \                   390595 - 390599\n   Remedy Corporation                 390600
    - 390699\n   Mentor Graphics                    390700 - 390799\n   AT&T Bell
    Labs (Lucent)            390800 - 390899\n   Xerox                              390900
    - 390999\n   Silicon Graphics                   391000 - 391063\n   Data General
    \                      391064 - 391095\n   Computer Support Corp.             391096
    - 391099\n   Quorum Software Systems            391100 - 391199\n   InterLinear
    Technology             391200 - 391209\n   Highland Software                  391210
    - 391229\n   Boeing Comp. Svcs.                 391230 - 391249\n   IBM Sweden
    \                        391250 - 391259\n   Signature Authority Svc            391260
    - 391271\n   ZUMTOBEL Licht GmbH                391272 - 391283\n   NOAA/ERL                           391284
    - 391299\n   NCR Corp.                          391300 - 391399\n   FTP Software
    \                      391400 - 391409\n   Cadre Technologies                 391410
    - 391433\n   Visionware Ltd (UK)                391434 - 391439\n   IBR-Partner
    AG                     391440 - 391449\n   CAP Programator AB                 391450
    - 391459\n   Reichle+De-Massari AG              391460 - 391474\n   Swiss Bank
    Corp (London)           391475 - 391484\n   Unisys Enterprise Svr              391485
    - 391489\n   Intel - Test Dev. Tech.            391490 - 391499\n   Ampex                              391500
    - 391755\n                                      391756    naas-spare\n                                      391757
    \   naas-admin\n                                      391758    isps\n                                      391759
    \   isps-admin\n                                      391760    mars\n                                      391761
    \   mars-admin\n                                      391762    attcis_spare0\n
    \                                     391763    attcis_spare1\n                                      391764
    \   mail-server\n                                      391765    mail-server-spare\n
    \                                     391766    attcis_spare2\n                                      391767
    \   attcis_spare3\n                                      391768    attcis_spare4\n
    \                                     391769    attcis_spare5\n                                      391770
    \   attcis_spare6\n                                      391771    attcis_spare7\n
    \  Integrated Systems, Inc.           391772 - 391779\n   Parametric Tech., Inc.
    \            391780 - 391789\n   Ericsson Telecom AB                391790 - 391799\n
    \  SLAC                               391800 - 391849\n                                      391850
    \   qhrdata\n                                      391851    qhrbackup\n                                      391852
    \   minutedata\n                                      391853    prefecture\n                                      391854
    \   supc\n                                      391855    suadmincrw\n                                      391856
    \   suadminotas\n                                      391857    sumessage\n                                      391858
    \   sublock\n                                      391859    sumotd\n   staffware
    dev. (uk)                391860 - 391869\n   Staffware Dev. (UK)                391870
    - 391879\n                                      391880    namesrvr\n                                      391881
    \   disksrvr\n                                      391882    tapesrvr\n                                      391883
    \   migsrvr\n                                      391884    pdmsrvr\n                                      391885
    \   pvrsrvr\n                                      391886    repacksrvr\n                                      391887
    \   [unknown]\n   Convex Computer Corp.              391888 - 391951\n                                      391952
    \   lookoutsrv\n                                      391953    lookoutagnt\n
    \                                     391954    lookoutprxy\n                                      391955
    \   lookoutsnmp\n                                      391956    lookoutrmon\n
    \                                     391957    lookoutfut1\n                                      391958
    \   lookoutfut2\n   windward                           391959 - 391967\n                                      391968
    \   sra_legato\n                                      391969    sra_legato_imgsvr\n
    \                                     391970    sra_legato_0\n                                      391971
    \   sra_legato_1\n                                      391972    sra_legato_2\n
    \                                     391973    sra_legato_3\n                                      391974
    \   sra_legato_4\n                                      391975    sra_legato_5\n
    \                                     391976    sra_legato_6\n                                      391977
    \   sra_legato_7\n                                      391978    sra_legato_8\n
    \                                     391979    sra_legato_9\n   Brooktree Corp.
    \                   391980 - 391989\n   Cadence        Design Systems      391990
    - 391999\n   J. Frank & Associates              392000 - 392999\n   Cooperative
    Solutions              393000 - 393999\n   Xerox Corp.                        394000
    - 395023\n                                      395024    odbc_sqlretriever\n
    \  3M                                 395025 - 395091\n   Digital Zone Intl.                 395092
    - 395099\n   Software Professionals             395100 - 395159\n   Del Mar Solutions
    \                 395160 - 395164\n                                      395165
    \   ife-es\n                                      395166    ife-resmgr\n                                      395167
    \   ife-aes\n                                      395168    ife-bite\n                                      395169
    \   ife-loader\n                                      395170    ife-satcom\n                                      395171
    \   ife-seat\n                                      395172    ife-dbmgr\n                                      395173
    \   ife-testmgr\n                                      395174    atrium_server\n
    \                                     395175    ase_director\n                                      395176
    \   ase_agent\n                                      395177    ase_hsm\n                                      395178
    \   ase_mgr\n                                      395179    ase_sim\n   Hewlett-Packard
    \                   395180 - 395194\n   XES, Inc.                          395195
    - 395199\n   Unitech Products                   395200 - 395249\n   TransSys                           395250
    - 395505\n   Unisys Govt Systems                395506 - 395519\n   Bellcore                           395520
    - 395529\n   IBM                                395530 - 395561\n   AT&T Network
    Services              395562 - 395571\n   Data General                       395572
    - 395577\n   Swiss Bank Corp                    395578 - 395597\n   Swiss Bank
    Corp                    395598 - 395637\n   Novell                             395638
    - 395643\n   Computer Associates                395644 - 395650\n   Omneon Video
    Networks              395651 - 395656\n   unassigned                         395657
    - 395908\n   UK Post Office                     395909 - 395924\n   AEROSPATIALE
    \                      395925 - 395944\n   Result d.o.o.                      395945
    - 395964\n   DataTools, Inc.                    395965 - 395980\n   CADIS, Inc.
    \                       395981 - 395990\n   Cummings Group, Inc.               395991
    - 395994\n   Cadre Technologies                 395995 - 395999\n   American Airlines
    \                 396000 - 396999\n   Ericsson Telecom TM Div            397000
    - 398023\n   IBM                                398024 - 398028\n   Toshiba OME
    Works                  398029 - 398033\n   TUSC Computer Systems              398034
    - 398289\n   AT&T                               398290 - 398320\n   Ontario Hydro
    \                     398321 - 398346\n   Micrion Corporation                398347
    - 398364\n   unassigned                         398365 - 398591\n   Pegasystems,
    Inc.                  398592 - 399616\n   Spectra Securities Soft            399617
    - 399850\n   QualCom                            399851 - 399866\n   unassigned
    \                        399867 - 399884\n   Altris Software Ltd.               399885
    - 399899\n   ISO/IEC WG11                       399900 - 399919\n   Parametric
    Technology              399920 - 399949\n   Dolby Laboratories                 399950
    - 399981\n   unassigned                         399982 - 399991\n   Xerox PARC
    \                        399992 - 399999\n   #\n   Next Inc.                          200100000
    - 200199999\n   Netwise (RPCtool)                  200200000\n   Concurrent Computer
    Corp           200200001 - 200200007\n   AIM Technology                     200300000
    - 200399999\n   TGV                                200400000 - 200499999\n   #\n
    \  # Sun-assigned authentication flavor numbers\n   #\n   AUTH_NONE       0               /*
    no authentication, see RFC 1831 */\n                                   /* a.k.a.
    AUTH_NULL */\n   AUTH_SYS        1               /* unix style (uid+gids), RFC
    1831 */\n                                   /* a.k.a. AUTH_UNIX */\n   AUTH_SHORT
    \     2               /* short hand unix style, RFC 1831 */\n   AUTH_DH         3
    \              /* des style (encrypted timestamp) */\n                                   /*
    a.k.a. AUTH_DES, see RFC 2695 */\n   AUTH_KERB       4               /* kerberos
    auth, see RFC 2695 */\n   AUTH_RSA        5               /* RSA authentication
    */\n   RPCSEC_GSS      6               /* GSS-based RPC security for auth,\n                                      integrity
    and privacy, RPC 5403 */\n   AUTH_NW         30001           NETWARE\n   AUTH_SEC
    \       200000          TSIG NFS subcommittee\n   AUTH_ESV        200004          SVr4
    ES\n   AUTH_NQNFS      300000          Univ. of Guelph - Not Quite NFS\n   AUTH_GSSAPI
    \    300001          OpenVision <john.linn@ov.com>\n   AUTH_ILU_UGEN   300002
    \         Xerox <janssen@parc.xerox.com>\n                                    -
    ILU Unsecured Generic Identity\n   #\n   #  Small blocks are assigned out of the
    39xxxx series of numbers\n   #\n   AUTH_SPNEGO     390000\n                   390000
    - 390255 NFS 'pseudo' flavors for RPCSEC_GSS\n                   390003 - kerberos_v5
    authentication, RFC 2623\n                   390004 - kerberos_v5 with data integrity,
    RFC 2623\n                   390005 - kerberos_v5 with data privacy, RFC 2623\n
    \                  200000000       Reserved\n                   200100000       NeXT
    Inc.\n"
  title: 'Appendix C: Current Number Assignments'
- contents:
  - "Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
    \  [RFC2203]  Eisler, M., Chiu, A., and L. Ling, \"RPCSEC_GSS Protocol\n              Specification\",
    RFC 2203, September 1997.\n   [RFC4506]  Eisler, M., Ed., \"XDR: External Data
    Representation\n              Standard\", STD 67, RFC 4506, May 2006.\n"
  title: Normative References
- contents:
  - "Informative References\n   [DH]       Diffie & Hellman, \"New Directions in Cryptography\",
    IEEE\n              Transactions on Information Theory IT-22, November 1976.\n
    \  [RFC0768]   Postel, J., \"User Datagram Protocol\", STD 6, RFC 768,\n              August
    1980.\n   [RFC0793]  Postel, J., \"Transmission Control Protocol\", STD 7, RFC\n
    \             793, September 1981.\n   [RFC1094]  Sun Microsystems, \"NFS: Network
    File System Protocol\n              specification\", RFC 1094, March 1989.\n   [RFC1813]
    \ Callaghan, B., Pawlowski, B., and P. Staubach, \"NFS\n              Version
    3 Protocol Specification\", RFC 1813, June 1995.\n   [RFC1831]  Srinivasan, R.,
    \"RPC: Remote Procedure Call Protocol\n              Specification Version 2\",
    RFC 1831, August 1995.\n   [RFC1833]  Srinivasan, R., \"Binding Protocols for
    ONC RPC Version 2\",\n              RFC 1833, August 1995.\n   [RFC2623]  Eisler,
    M., \"NFS Version 2 and Version 3 Security Issues\n              and the NFS Protocol's
    Use of RPCSEC_GSS and Kerberos V5\",\n              RFC 2623, June 1999.\n   [RFC2695]
    \ Chiu, A., \"Authentication Mechanisms for ONC RPC\", RFC\n              2695,
    September 1999.\n   [RFC2743]  Linn, J., \"Generic Security Service Application
    Program\n              Interface Version 2, Update 1\", RFC 2743, January 2000.\n
    \  [RFC3530]  Shepler, S., Callaghan, B., Robinson, D., Thurlow, R.,\n              Beame,
    C., Eisler, M., and D. Noveck, \"Network File System\n              (NFS) version
    4 Protocol\", RFC 3530, April 2003.\n   [RFC5226]  Narten, T. and H. Alvestrand,
    \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\",
    BCP 26, RFC 5226,\n              May 2008.\n   [VMTP]     Cheriton, D., \"VMTP:
    Versatile Message Transaction\n              Protocol\", Preliminary Version 0.3,
    Stanford University,\n              January 1987.\n   [XRPC]     Birrell, A. D.
    \ & B. J. Nelson, \"Implementing Remote\n              Procedure Calls\", XEROX
    CSL-83-7, October 1983.\n"
  title: Informative References
- contents:
  - "Author's Address\n   Robert Thurlow\n   Sun Microsystems, Inc.\n   500 Eldorado
    Boulevard, UBRM05-171\n   Broomfield, CO 80021\n   Phone: 877-718-3419\n   EMail:
    robert.thurlow@sun.com\n"
  title: Author's Address
