- title: __initial_text__
  contents:
  - "                    Detecting Data-Plane Failures in\n           Point-to-Multipoint\
    \ MPLS - Extensions to LSP Ping\n"
- title: Abstract
  contents:
  - "Abstract\n   Recent proposals have extended the scope of Multiprotocol Label\n\
    \   Switching (MPLS) Label Switched Paths (LSPs) to encompass point-to-\n   multipoint\
    \ (P2MP) LSPs.\n   The requirement for a simple and efficient mechanism that can\
    \ be used\n   to detect data-plane failures in point-to-point (P2P) MPLS LSPs\
    \ has\n   been recognized and has led to the development of techniques for\n \
    \  fault detection and isolation commonly referred to as \"LSP ping\".\n   The\
    \ scope of this document is fault detection and isolation for P2MP\n   MPLS LSPs.\
    \  This documents does not replace any of the mechanisms of\n   LSP ping, but\
    \ clarifies their applicability to MPLS P2MP LSPs, and\n   extends the techniques\
    \ and mechanisms of LSP ping to the MPLS P2MP\n   environment.\n   This document\
    \ updates RFC 4379.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6425.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Design Considerations ......................................4\n  \
    \    1.2. Terminology ................................................4\n   2.\
    \ Notes on Motivation .............................................5\n      2.1.\
    \ Basic Motivations for LSP Ping .............................5\n      2.2. Motivations\
    \ for LSP Ping for P2MP LSPs .....................6\n   3. Packet Format ...................................................7\n\
    \      3.1. Identifying the LSP Under Test .............................8\n  \
    \         3.1.1. Identifying a P2MP MPLS TE LSP ......................8\n    \
    \              3.1.1.1. RSVP P2MP IPv4 Session Sub-TLV .............8\n      \
    \            3.1.1.2. RSVP P2MP IPv6 Session Sub-TLV .............9\n        \
    \   3.1.2. Identifying a Multicast LDP LSP .....................9\n          \
    \        3.1.2.1. Multicast LDP FEC Stack Sub-TLVs ..........10\n            \
    \      3.1.2.2. Applicability to\n                           Multipoint-to-Multipoint\
    \ LSPs .............11\n      3.2. Limiting the Scope of Responses ...........................11\n\
    \           3.2.1. Egress Address P2MP Responder Sub-TLVs .............12\n  \
    \         3.2.2. Node Address P2MP Responder Sub-TLVs ...............13\n    \
    \  3.3. Preventing Congestion of Echo Replies .....................14\n      3.4.\
    \ Respond Only If TTL Expired Flag ..........................14\n      3.5. Downstream\
    \ Detailed Mapping TLV ...........................15\n   4. Operation of LSP Ping\
    \ for a P2MP LSP ...........................15\n      4.1. Initiating LSR Operations\
    \ .................................16\n           4.1.1. Limiting Responses to\
    \ Echo Requests ................16\n           4.1.2. Jittered Responses to Echo\
    \ Requests ................16\n      4.2. Responding LSR Operations .................................17\n\
    \           4.2.1. Echo Reply Reporting ...............................18\n  \
    \                4.2.1.1. Responses from Transit and Branch Nodes ...19\n    \
    \              4.2.1.2. Responses from Egress Nodes ...............19\n      \
    \            4.2.1.3. Responses from Bud Nodes ..................19\n      4.3.\
    \ Special Considerations for Traceroute .....................21\n           4.3.1.\
    \ End of Processing for Traceroutes ..................21\n           4.3.2. Multiple\
    \ Responses from Bud and Egress Nodes .......22\n           4.3.3. Non-Response\
    \ to Traceroute Echo Requests ...........22\n           4.3.4. Use of Downstream\
    \ Detailed Mapping TLV in\n                  Echo Requests ......................................23\n\
    \           4.3.5. Cross-Over Node Processing .........................23\n  \
    \ 5. Non-Compliant Routers ..........................................24\n   6.\
    \ OAM and Management Considerations ..............................24\n   7. IANA\
    \ Considerations ............................................25\n      7.1. New\
    \ Sub-TLV Types .........................................25\n      7.2. New TLVs\
    \ ..................................................25\n      7.3. New Global\
    \ Flags Registry .................................26\n   8. Security Considerations\
    \ ........................................26\n   9. Acknowledgements ...............................................26\n\
    \   10. References ....................................................27\n  \
    \    10.1. Normative References .....................................27\n    \
    \  10.2. Informative References ...................................27\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Simple and efficient mechanisms that can be used to detect\
    \ data-plane\n   failures in point-to-point (P2P) Multiprotocol Label Switching\
    \ (MPLS)\n   Label Switched Paths (LSP) are described in [RFC4379].  The\n   techniques\
    \ involve information carried in MPLS \"echo request\" and\n   \"echo reply\"\
    \ messages, and mechanisms for transporting them.  The\n   echo request and reply\
    \ messages provide sufficient information to\n   check correct operation of the\
    \ data plane, as well as a mechanism to\n   verify the data plane against the\
    \ control plane, and thereby localize\n   faults.  The use of reliable channels\
    \ for echo reply messages as\n   described in [RFC4379] enables more robust fault\
    \ isolation.  This\n   collection of mechanisms is commonly referred to as \"\
    LSP ping\".\n   The requirements for point-to-multipoint (P2MP) MPLS traffic\n\
    \   engineered (TE) LSPs are stated in [RFC4461].  [RFC4875] specifies a\n   signaling\
    \ solution for establishing P2MP MPLS TE LSPs.\n   The requirements for P2MP extensions\
    \ to the Label Distribution\n   Protocol (LDP) are stated in [RFC6348].  [RFC6388]\
    \ specifies\n   extensions to LDP for P2MP MPLS.\n   P2MP MPLS LSPs are at least\
    \ as vulnerable to data-plane faults or to\n   discrepancies between the control\
    \ and data planes as their P2P\n   counterparts.  Therefore, mechanisms are needed\
    \ to detect such data\n   plane faults in P2MP MPLS LSPs as described in [RFC4687].\n\
    \   This document extends the techniques described in [RFC4379] such that\n  \
    \ they may be applied to P2MP MPLS LSPs.  This document stresses the\n   reuse\
    \ of existing LSP ping mechanisms used for P2P LSPs, and applies\n   them to P2MP\
    \ MPLS LSPs in order to simplify implementation and\n   network operation.\n"
- title: 1.1.  Design Considerations
  contents:
  - "1.1.  Design Considerations\n   An important consideration for designing LSP\
    \ ping for P2MP MPLS LSPs\n   is that every attempt is made to use or extend existing\
    \ mechanisms\n   rather than invent new mechanisms.\n   As for P2P LSPs, a critical\
    \ requirement is that the echo request\n   messages follow the same data path\
    \ that normal MPLS packets traverse.\n   However, as can be seen, this notion\
    \ needs to be extended for P2MP\n   MPLS LSPs, as in this case an MPLS packet\
    \ is replicated so that it\n   arrives at each egress (or leaf) of the P2MP tree.\n\
    \   MPLS echo requests are meant primarily to validate the data plane,\n   and\
    \ they can then be used to validate data-plane state against the\n   control plane.\
    \  They may also be used to bootstrap other Operations,\n   Administration, and\
    \ Maintenance (OAM) procedures such as [RFC5884].\n   As pointed out in [RFC4379],\
    \ mechanisms to check the liveness,\n   function, and consistency of the control\
    \ plane are valuable, but such\n   mechanisms are not a feature of LSP ping and\
    \ are not covered in this\n   document.\n   As is described in [RFC4379], to avoid\
    \ potential denial-of-service\n   attacks, it is RECOMMENDED to regulate the LSP\
    \ ping traffic passed to\n   the control plane.  A rate limiter should be applied\
    \ to the incoming\n   LSP ping traffic.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   The terminology used in this document for P2MP MPLS can\
    \ be found in\n   [RFC4461].  The terminology for MPLS OAM can be found in [RFC4379].\n\
    \   In particular, the notation <RSC> refers to the Return Subcode as\n   defined\
    \ in Section 3.1. of [RFC4379].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Notes on Motivation
  contents:
  - '2.  Notes on Motivation

    '
- title: 2.1.  Basic Motivations for LSP Ping
  contents:
  - "2.1.  Basic Motivations for LSP Ping\n   The motivations listed in [RFC4379]\
    \ are reproduced here for\n   completeness.\n      When an LSP fails to deliver\
    \ user traffic, the failure cannot\n      always be detected by the MPLS control\
    \ plane.  There is a need to\n      provide a tool that enables users to detect\
    \ such traffic \"black\n      holes\" or misrouting within a reasonable period\
    \ of time.  A\n      mechanism to isolate faults is also required.\n      [RFC4379]\
    \ describes a mechanism that accomplishes these goals.\n      This mechanism is\
    \ modeled after the ping/traceroute paradigm: ping\n      (ICMP echo request [RFC792])\
    \ is used for connectivity checks, and\n      traceroute is used for hop-by-hop\
    \ fault localization as well as\n      path tracing.  [RFC4379] specifies a \"\
    ping mode\" and a\n      \"traceroute\" mode for testing MPLS LSPs.\n      The\
    \ basic idea as expressed in [RFC4379] is to test that the\n      packets that\
    \ belong to a particular Forwarding Equivalence Class\n      (FEC) actually end\
    \ their MPLS path on an LSR that is an egress for\n      that FEC.  [RFC4379]\
    \ achieves this test by sending a packet\n      (called an \"MPLS echo request\"\
    ) along the same data path as other\n      packets belonging to this FEC.  An\
    \ MPLS echo request also carries\n      information about the FEC whose MPLS path\
    \ is being verified.  This\n      echo request is forwarded just like any other\
    \ packet belonging to\n      that FEC.  In \"ping\" mode (basic connectivity check),\
    \ the packet\n      should reach the end of the path, at which point it is sent\
    \ to the\n      control plane of the egress LSR, which then verifies that it is\n\
    \      indeed an egress for the FEC.  In \"traceroute\" mode (fault\n      isolation),\
    \ the packet is sent to the control plane of each\n      transit LSR, which performs\
    \ various checks that it is indeed a\n      transit LSR for this path; this LSR\
    \ also returns further\n      information that helps to check the control plane\
    \ against the data\n      plane, i.e., that forwarding matches what the routing\
    \ protocols\n      determined as the path.\n      One way these tools can be used\
    \ is to periodically ping a FEC to\n      ensure connectivity.  If the ping fails,\
    \ one can then initiate a\n      traceroute to determine where the fault lies.\
    \  One can also\n      periodically traceroute FECs to verify that forwarding\
    \ matches the\n      control plane; however, this places a greater burden on transit\n\
    \      LSRs and should be used with caution.\n"
- title: 2.2.  Motivations for LSP Ping for P2MP LSPs
  contents:
  - "2.2.  Motivations for LSP Ping for P2MP LSPs\n   As stated in [RFC4687], MPLS\
    \ has been extended to encompass P2MP\n   LSPs.  As with P2P MPLS LSPs, the requirement\
    \ to detect, handle, and\n   diagnose control- and data-plane defects is critical.\
    \  For operators\n   deploying services based on P2MP MPLS LSPs, the detection\
    \ and\n   specification of how to handle those defects is important because\n\
    \   such defects may affect the fundamentals of an MPLS network, but also\n  \
    \ because they may impact service-level-specification commitments for\n   customers\
    \ of their network.\n   P2MP LDP [RFC6388] uses LDP to establish multicast LSPs.\
    \  These LSPs\n   distribute data from a single source to one or more destinations\n\
    \   across the network according to the next hops indicated by the\n   routing\
    \ protocols.  Each LSP is identified by an MPLS multicast FEC.\n   P2MP MPLS TE\
    \ LSPs [RFC4875] may be viewed as MPLS tunnels with a\n   single ingress and multiple\
    \ egresses.  The tunnels, built on P2MP\n   LSPs, are explicitly routed through\
    \ the network.  There is no concept\n   or applicability of a FEC in the context\
    \ of a P2MP MPLS TE LSP.\n   MPLS packets inserted at the ingress of a P2MP LSP\
    \ are delivered\n   equally (barring faults) to all egresses.  In consequence,\
    \ the basic\n   idea of LSP ping for P2MP MPLS LSPs may be expressed as an intention\n\
    \   to test that packets that enter (at the ingress) a particular P2MP\n   LSP\
    \ actually end their MPLS path on the LSRs that are the (intended)\n   egresses\
    \ for that LSP.  The idea may be extended to check selectively\n   that such packets\
    \ reach specific egresses.\n   The technique in this document makes this test\
    \ by sending an LSP ping\n   echo request message along the same data path as\
    \ the MPLS packets.\n   An echo request also carries the identification of the\
    \ P2MP MPLS LSP\n   (multicast LSP or P2MP TE LSP) that it is testing.  The echo\
    \ request\n   is forwarded just as any other packet using that LSP, and so is\n\
    \   replicated at branch points of the LSP and should be delivered to all\n  \
    \ egresses.\n   In \"ping\" mode (basic connectivity check), the echo request\
    \ should\n   reach the end of the path, at which point it is sent to the control\n\
    \   plane of the egress LSRs, which verify that they are indeed an egress\n  \
    \ (leaf) of the P2MP LSP.  An echo reply message is sent by an egress\n   to the\
    \ ingress to confirm the successful receipt (or announce the\n   erroneous arrival)\
    \ of the echo request.\n   In \"traceroute\" mode (fault isolation), the echo\
    \ request is sent to\n   the control plane at each transit LSR, and the control\
    \ plane checks\n   that it is indeed a transit LSR for this P2MP MPLS LSP.  The\
    \ transit\n   LSR returns information about the outgoing paths.  This information\n\
    \   can be used by ingress LSRs to build topology or by downstream LSRs\n   to\
    \ do extra label verification.\n   P2MP MPLS LSPs may have many egresses, and\
    \ it is not necessarily the\n   intention of the initiator of the ping or traceroute\
    \ operation to\n   collect information about the connectivity or path to all egresses.\n\
    \   Indeed, in the event of pinging all egresses of a large P2MP MPLS\n   LSP,\
    \ it might be expected that a large number of echo replies would\n   arrive at\
    \ the ingress independently but at approximately the same\n   time.  Under some\
    \ circumstances this might cause congestion at or\n   around the ingress LSR.\
    \  The procedures described in this document\n   provide two mechanisms to control\
    \ echo replies.\n   The first procedure allows the responders to randomly delay\
    \ (or\n   jitter) their replies so that the chances of swamping the ingress are\n\
    \   reduced.  The second procedure allows the initiator to limit the\n   scope\
    \ of an LSP ping echo request (ping or traceroute mode) to one\n   specific intended\
    \ egress.\n   LSP ping can be used to periodically ping a P2MP MPLS LSP to ensure\n\
    \   connectivity to any or all of the egresses.  If the ping fails, the\n   operator\
    \ or an automated process can then initiate a traceroute to\n   determine where\
    \ the fault is located within the network.  A\n   traceroute may also be used\
    \ periodically to verify that data-plane\n   forwarding matches the control-plane\
    \ state; however, this places an\n   increased burden on transit LSRs and should\
    \ be used infrequently and\n   with caution.\n"
- title: 3.  Packet Format
  contents:
  - "3.  Packet Format\n   The basic structure of the LSP ping packet remains the\
    \ same as\n   described in [RFC4379].  Some new TLVs and sub-TLVs are required\
    \ to\n   support the new functionality.  They are described in the following\n\
    \   sections.\n"
- title: 3.1.  Identifying the LSP Under Test
  contents:
  - '3.1.  Identifying the LSP Under Test

    '
- title: 3.1.1.  Identifying a P2MP MPLS TE LSP
  contents:
  - "3.1.1.  Identifying a P2MP MPLS TE LSP\n   [RFC4379] defines how an MPLS TE LSP\
    \ under test may be identified in\n   an echo request.  A Target FEC Stack TLV\
    \ is used to carry either an\n   RSVP IPv4 Session or an RSVP IPv6 Session sub-TLV.\n\
    \   In order to identify the P2MP MPLS TE LSP under test, the echo\n   request\
    \ message MUST carry a Target FEC Stack TLV, and this MUST\n   carry exactly one\
    \ of two new sub-TLVs: either an RSVP P2MP IPv4\n   Session sub-TLV or an RSVP\
    \ P2MP IPv6 Session sub-TLV.  These sub-TLVs\n   carry fields from the RSVP-TE\
    \ P2MP SESSION and SENDER_TEMPLATE\n   objects [RFC4875] and so provide sufficient\
    \ information to uniquely\n   identify the LSP.\n   The new sub-TLVs are assigned\
    \ Sub-Type identifiers as follows, and\n   are described in the following sections.\n\
    \      Sub-Type #       Length              Value Field\n      ----------    \
    \   ------              -----------\n              17         20             \
    \   RSVP P2MP IPv4 Session\n              18         56                RSVP P2MP\
    \ IPv6 Session\n"
- title: 3.1.1.1.  RSVP P2MP IPv4 Session Sub-TLV
  contents:
  - "3.1.1.1.  RSVP P2MP IPv4 Session Sub-TLV\n   The format of the RSVP P2MP IPv4\
    \ Session sub-TLV value field is\n   specified in the following figure.  The value\
    \ fields are taken from\n   the definitions of the P2MP IPv4 LSP SESSION Object\
    \ and the P2MP IPv4\n   SENDER_TEMPLATE Object in Sections 19.1.1 and 19.2.1 of\
    \ [RFC4875].\n   Note that the Sub-Group ID of the SENDER_TEMPLATE is not required.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           P2MP ID                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          MUST Be Zero         |     Tunnel ID                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Extended Tunnel ID                      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                   IPv4 Tunnel Sender Address                  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          MUST Be Zero         |            LSP ID             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 3.1.1.2.  RSVP P2MP IPv6 Session Sub-TLV
  contents:
  - "3.1.1.2.  RSVP P2MP IPv6 Session Sub-TLV\n   The format of the RSVP P2MP IPv6\
    \ Session sub-TLV value field is\n   specified in the following figure.  The value\
    \ fields are taken from\n   the definitions of the P2MP IPv6 LSP SESSION Object\
    \ and the P2MP IPv6\n   SENDER_TEMPLATE Object in Sections 19.1.2 and 19.2.2 of\
    \ [RFC4875].\n   Note that the Sub-Group ID of the SENDER_TEMPLATE is not required.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           P2MP ID                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          MUST Be Zero         |     Tunnel ID                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                       Extended Tunnel ID                      |\n      |\
    \                                                               |\n      |   \
    \                                                            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                   IPv6 Tunnel Sender Address                  |\n      |\
    \                                                               |\n      |   \
    \                                                            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          MUST Be Zero         |            LSP ID             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 3.1.2.  Identifying a Multicast LDP LSP
  contents:
  - "3.1.2.  Identifying a Multicast LDP LSP\n   [RFC4379] defines how a P2P LDP LSP\
    \ under test may be identified in\n   an echo request.  A Target FEC Stack TLV\
    \ is used to carry one or more\n   sub-TLVs (for example, an IPv4 Prefix FEC sub-TLV)\
    \ that identify the\n   LSP.\n   In order to identify a multicast LDP LSP under\
    \ test, the echo request\n   message MUST carry a Target FEC Stack TLV, and this\
    \ MUST carry\n   exactly one of two new sub-TLVs: either a Multicast P2MP LDP\
    \ FEC\n   Stack sub-TLV or a Multicast MP2MP LDP FEC Stack sub-TLV.  These sub-\n\
    \   TLVs use fields from the multicast LDP messages [RFC6388] and so\n   provide\
    \ sufficient information to uniquely identify the LSP.\n   The new sub-TLVs are\
    \ assigned sub-type identifiers as follows and are\n   described in the following\
    \ section.\n      Sub-Type #       Length              Value Field\n      ----------\
    \       ------              -----------\n              19       Variable     \
    \       Multicast P2MP LDP FEC Stack\n              20       Variable        \
    \    Multicast MP2MP LDP FEC Stack\n"
- title: 3.1.2.1.  Multicast LDP FEC Stack Sub-TLVs
  contents:
  - "3.1.2.1.  Multicast LDP FEC Stack Sub-TLVs\n   Both Multicast P2MP and MP2MP\
    \ LDP FEC Stack have the same format, as\n   specified in the following figure.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Address Family         | Address Length| Root LSR Addr |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                 Root LSR Address (Cont.)                    ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Opaque Length          |         Opaque Value ...      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n   ~                                      \
    \                         ~\n   |                                            \
    \                   |\n   |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Address Family\n      Two-octet quantity containing a value from ADDRESS FAMILY\
    \ NUMBERS\n      in [IANA-AF] that encodes the address family for the Root LSR\n\
    \      Address.\n   Address Length\n      Length of the Root LSR Address in octets.\n\
    \   Root LSR Address\n      Address of the LSR at the root of the P2MP LSP encoded\
    \ according\n      to the Address Family field.\n   Opaque Length\n      The length\
    \ of the opaque value, in octets.  Depending on the\n      length of the Root\
    \ LSR Address, this field may not be aligned to a\n      word boundary.\n   Opaque\
    \ Value\n      An opaque value element that uniquely identifies the P2MP LSP in\n\
    \      the context of the Root LSR.\n   If the Address Family is IPv4, the Address\
    \ Length MUST be 4.  If the\n   Address Family is IPv6, the Address Length MUST\
    \ be 16.  No other\n   Address Family values are defined at present.\n"
- title: 3.1.2.2.  Applicability to Multipoint-to-Multipoint LSPs
  contents:
  - "3.1.2.2.  Applicability to Multipoint-to-Multipoint LSPs\n   The mechanisms defined\
    \ in this document can be extended to include\n   Multipoint-to-Multipoint (MP2MP)\
    \ Multicast LSPs.  In an MP2MP LSP\n   tree, any leaf node can be treated like\
    \ a head node of a P2MP tree.\n   In other words, for MPLS OAM purposes, the MP2MP\
    \ tree can be treated\n   like a collection of P2MP trees, with each MP2MP leaf\
    \ node acting\n   like a P2MP head-end node.  When a leaf node is acting like\
    \ a P2MP\n   head-end node, the remaining leaf nodes act like egress or bud nodes.\n"
- title: 3.2.  Limiting the Scope of Responses
  contents:
  - "3.2.  Limiting the Scope of Responses\n   A new TLV is defined for inclusion\
    \ in the echo request message.\n   The P2MP Responder Identifier TLV is assigned\
    \ the TLV type value 11\n   and is encoded as follows.\n       0             \
    \      1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |Type = 11   (P2MP Responder ID)|       Length = Variable       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      ~\
    \                          Sub-TLVs                             ~\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Sub-TLVs:\n         Zero, one, or more sub-TLVs as defined below.\n   \
    \      If no sub-TLVs are present, the TLV MUST be processed as if it\n      \
    \   were absent.  If more than one sub-TLV is present, the first\n         TLV\
    \ MUST be processed as described in this document, and\n         subsequent sub-TLVs\
    \ SHOULD be ignored.  Interpretation of\n         additional sub-TLVs may be defined\
    \ in future documents.\n   The P2MP Responder Identifier TLV only has meaning\
    \ on an echo request\n   message.  If present on an echo reply message, it MUST\
    \ be ignored.\n   Four sub-TLVs are defined for inclusion in the P2MP Responder\n\
    \   Identifier TLV carried on the echo request message.  These are:\n   Sub-Type\
    \ #   Length   Value Field\n   ----------   ------   -----------\n           1\
    \        4    IPv4 Egress Address P2MP Responder\n           2       16    IPv6\
    \ Egress Address P2MP Responder\n           3        4    IPv4 Node Address P2MP\
    \ Responder\n           4       16    IPv6 Node Address P2MP Responder\n   The\
    \ content of these sub-TLVs are defined in the following sections.\n   Also defined\
    \ is the intended behavior of the responding node upon\n   receiving any of these\
    \ sub-TLVs.\n"
- title: 3.2.1.  Egress Address P2MP Responder Sub-TLVs
  contents:
  - "3.2.1.  Egress Address P2MP Responder Sub-TLVs\n   The encoding of the IPv4 Egress\
    \ Address P2MP Responder sub-TLV is as\n   follows:\n       0                \
    \   1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         Sub-Type = 1          |        Length = 4             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    32-bit IPv4 Address                        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The encoding of the IPv6 Egress Address P2MP Responder sub-TLV is as\n   follows:\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         Sub-Type = 2          |        Length = 16            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      |   \
    \                 128-bit IPv6 Address                       |\n      |      \
    \                                                         |\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   A node that receives an echo request with this sub-TLV present MUST\n   respond\
    \ if the node lies on the path to the address in the sub-TLV\n   and MUST NOT\
    \ respond if it does not lie on the path to the address in\n   the sub-TLV.  For\
    \ this to be possible, the address in the sub-TLV\n   must be known to the nodes\
    \ that lie upstream in the LSP.  This can be\n   the case if RSVP-TE is used to\
    \ signal the P2MP LSP, in which case\n   this address will be the address used\
    \ in the Destination Address\n   field of the S2L_SUB_LSP object, when corresponding\
    \ egress or bud\n   node is signaled.  Thus, the IPv4 or IPv6 Egress Address P2MP\n\
    \   Responder sub-TLV MAY be used in an echo request carrying RSVP P2MP\n   Session\
    \ sub-TLV.\n   However, in Multicast LDP, there is no way for upstream LSRs to\
    \ know\n   the identity of the downstream leaf nodes.  Hence, these TLVs cannot\n\
    \   be used to perform traceroute to a single node when Multicast LDP FEC\n  \
    \ is used, and the IPv4 or IPv6 Egress Address P2MP Responder sub-TLV\n   SHOULD\
    \ NOT be used with an echo request carrying a Multicast LDP FEC\n   Stack sub-TLV.\
    \  If a node receives these TLVs in an echo request\n   carrying Multicast LDP,\
    \ then it will not respond since it is unaware\n   of whether it lies on the path\
    \ to the address in the sub-TLV.\n"
- title: 3.2.2.  Node Address P2MP Responder Sub-TLVs
  contents:
  - "3.2.2.  Node Address P2MP Responder Sub-TLVs\n   The encoding of the IPv4 Node\
    \ Address P2MP Responder sub-TLV is as\n   follows:\n       0                \
    \   1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         Sub-Type = 3          |        Length = 4             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    32-bit IPv4 Address                        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The encoding of the IPv6 Node Address P2MP Responder sub-TLV is as\n   follows:\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         Sub-Type = 4          |        Length = 16            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      |   \
    \                 128-bit IPv6 Address                       |\n      |      \
    \                                                         |\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The IPv4 or IPv6 Node Address P2MP Responder sub-TLVs MAY be used in\n   an\
    \ echo request carrying either RSVP P2MP Session or Multicast LDP\n   FEC Stack\
    \ sub-TLVs.\n   A node that receives an echo request with one of these sub-TLVs\n\
    \   present MUST respond if the address in the sub-TLV matches any\n   address\
    \ that is local to the node and MUST NOT respond if the address\n   in the sub-TLV\
    \ does not match any address that is local to the node.\n   The address in the\
    \ sub-TLV may be of any physical interface or may be\n   the router ID of the\
    \ node itself.\n   The address in this sub-TLV SHOULD be of any transit, branch,\
    \ bud, or\n   egress node for that P2MP LSP.  The address of a node that is not\
    \ on\n   the P2MP LSP MAY be used as a check for that no reply is received.\n"
- title: 3.3.  Preventing Congestion of Echo Replies
  contents:
  - "3.3.  Preventing Congestion of Echo Replies\n   A new TLV is defined for inclusion\
    \ in the Echo request message.\n   The Echo Jitter TLV is assigned the TLV type\
    \ value 12 and is encoded\n   as follows.\n       0                   1      \
    \             2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      Type = 12 (Jitter TLV)   |          Length = 4           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          Jitter Time                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Jitter Time:\n         This field specifies the upper bound of the jitter\
    \ period that\n         should be applied by a responding node to determine how\
    \ long to\n         wait before sending an echo reply.  A responding node MUST\
    \ wait\n         a random amount of time between zero milliseconds and the value\n\
    \         specified in this field.\n         Jitter time is specified in milliseconds.\n\
    \   The Echo Jitter TLV only has meaning on an echo request message.  If\n   present\
    \ on an echo reply message, it MUST be ignored.\n"
- title: 3.4.  Respond Only If TTL Expired Flag
  contents:
  - "3.4.  Respond Only If TTL Expired Flag\n   A new flag is being introduced in\
    \ the Global Flags field defined in\n   [RFC4379].  The new format of the Global\
    \ Flags field is:\n       0                   1\n       0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |             MBZ\
    \           |T|V|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   The V flag is described\
    \ in [RFC4379].\n   The T (Respond Only If TTL Expired) flag MUST be set only\
    \ in the echo\n   request packet by the sender.  This flag MUST NOT be set in\
    \ the echo\n   reply packet.  If this flag is set in an echo reply packet, then\
    \ it\n   MUST be ignored.\n   If the T flag is set to 0, then the receiving node\
    \ MUST process the\n   incoming echo request.\n   If the T flag is set to 1 and\
    \ the TTL of the incoming MPLS label is\n   equal to 1, then the receiving node\
    \ MUST process the incoming echo\n   request.\n   If the T flag is set to 1 and\
    \ the TTL of the incoming MPLS label is\n   more than 1, then the receiving node\
    \ MUST drop the incoming echo\n   request and MUST NOT send any echo reply to\
    \ the sender.\n   If the T flag is set to 1 and there are no incoming MPLS labels\
    \ in\n   the echo request packet, then a bud node with PHP configured MAY\n  \
    \ choose to not respond to this echo request.  All other nodes MUST\n   ignore\
    \ this bit and respond as per regular processing.\n"
- title: 3.5.  Downstream Detailed Mapping TLV
  contents:
  - "3.5.  Downstream Detailed Mapping TLV\n   The Downstream Detailed Mapping TLV\
    \ is described in [RFC6424].  A\n   transit, branch or bud node can use the Downstream\
    \ Detailed Mapping\n   TLV to return multiple Return Codes for different downstream\
    \ paths.\n   This functionality can not be achieved via the Downstream Mapping\n\
    \   TLV.  As per Section 3.4 of [RFC6424], the Downstream Mapping TLV as\n   described\
    \ in [RFC4379] is being deprecated.\n   Therefore, for P2MP, a node MUST support\
    \ the Downstream Detailed\n   Mapping TLV.  The Downstream Mapping TLV [RFC4379]\
    \ is not appropriate\n   for P2MP traceroute functionality and MUST NOT be included\
    \ in an Echo\n   Request message.  When responding to an RSVP IPv4/IPv6 P2MP Session\n\
    \   FEC type or a Multicast P2MP/MP2MP LDP FEC type, a node MUST ignore\n   any\
    \ Downstream Mapping TLV it receives in the echo request and MUST\n   continue\
    \ processing as if the Downstream Mapping TLV is not present.\n   The details\
    \ of the Return Codes to be used in the Downstream Detailed\n   Mapping TLV are\
    \ provided in Section 4.\n"
- title: 4.  Operation of LSP Ping for a P2MP LSP
  contents:
  - "4.  Operation of LSP Ping for a P2MP LSP\n   This section describes how LSP ping\
    \ is applied to P2MP MPLS LSPs.  As\n   mentioned previously, an important design\
    \ consideration has been to\n   extend the existing LSP ping mechanism in [RFC4379]\
    \ rather than\n   invent new mechanisms.\n   As specified in [RFC4379], MPLS LSPs\
    \ can be tested via a \"ping\" mode\n   or a \"traceroute\" mode.  The ping mode\
    \ is also known as \"connectivity\n   verification\" and traceroute mode is also\
    \ known as \"fault isolation\".\n   Further details can be obtained from [RFC4379].\n\
    \   This section specifies processing of echo requests for both ping and\n   traceroute\
    \ mode at various nodes (ingress, transit, etc.) of the P2MP\n   LSP.\n"
- title: 4.1.  Initiating LSR Operations
  contents:
  - "4.1.  Initiating LSR Operations\n   The LSR initiating the echo request will\
    \ follow the procedures in\n   [RFC4379].  The echo request will contain a Target\
    \ FEC Stack TLV.  To\n   identify the P2MP LSP under test, this TLV will contain\
    \ one of the\n   new sub-TLVs defined in Section 3.1.  Additionally, there may\
    \ be\n   other optional TLVs present.\n"
- title: 4.1.1.  Limiting Responses to Echo Requests
  contents:
  - "4.1.1.  Limiting Responses to Echo Requests\n   As described in Section 2.2,\
    \ it may be desirable to restrict the\n   operation of P2MP ping or traceroute\
    \ to a single egress.  Since echo\n   requests are forwarded through the data\
    \ plane without interception by\n   the control plane, there is no facility to\
    \ limit the propagation of\n   echo requests, and they will automatically be forwarded\
    \ to all\n   reachable egresses.\n   However, a single egress may be identified\
    \ by the inclusion of a P2MP\n   Responder Identifier TLV.  The details of this\
    \ TLV and its sub-TLVs\n   are in Section 3.2.  There are two main types of sub-TLVs\
    \ in the P2MP\n   Responder Identifier TLV: Node Address sub-TLV and Egress Address\n\
    \   sub-TLV.\n   These sub-TLVs limit the replies either to the specified LSR\
    \ only or\n   to any LSR on the path to the specified LSR.  The former capability\n\
    \   is generally useful for ping mode, while the latter is more suited to\n  \
    \ traceroute mode.  An initiating LSR may indicate that it wishes all\n   egresses\
    \ to respond to an echo request by omitting the P2MP Responder\n   Identifier\
    \ TLV.\n"
- title: 4.1.2.  Jittered Responses to Echo Requests
  contents:
  - "4.1.2.  Jittered Responses to Echo Requests\n   The initiating LSR MAY request\
    \ that the responding LSRs introduce a\n   random delay (or jitter) before sending\
    \ the reply.  The randomness of\n   the delay allows the replies from multiple\
    \ egresses to be spread over\n   a time period.  Thus, this technique is particularly\
    \ relevant when\n   the entire P2MP LSP is being pinged or traced since it helps\
    \ prevent\n   the initiating (or nearby) LSRs from being swamped by replies, or\n\
    \   from discarding replies due to rate limits that have been applied.\n   It\
    \ is desirable for the initiating LSR to be able to control the\n   bounds of\
    \ the jitter.  If the tree size is small, only a small amount\n   of jitter is\
    \ required, but if the tree is large, greater jitter is\n   needed.\n   The initiating\
    \ LSR can supply the desired value of the jitter in the\n   Echo Jitter TLV as\
    \ defined in Section 3.3.  If this TLV is present,\n   the responding LSR MUST\
    \ delay sending a reply for a random amount of\n   time between zero milliseconds\
    \ and the value indicated in the TLV.\n   If the TLV is absent, the responding\
    \ egress SHOULD NOT introduce any\n   additional delay in responding to the echo\
    \ request, but MAY delay\n   according to local policy.\n   LSP ping MUST NOT\
    \ be used to attempt to measure the round-trip time\n   for data delivery.  This\
    \ is because the P2MP LSPs are unidirectional,\n   and the echo reply is often\
    \ sent back through the control plane.  The\n   timestamp fields in the echo request\
    \ and echo reply packets MAY be\n   used to deduce some information about delivery\
    \ times, for example the\n   variance in delivery times.\n   The use of echo jittering\
    \ does not change the processes for gaining\n   information, but note that the\
    \ responding node MUST set the value in\n   the Timestamp Received fields before\
    \ applying any delay.\n   Echo reply jittering SHOULD be used for P2MP LSPs, although\
    \ it MAY be\n   omitted for simple P2MP LSPs or when the Node Address P2MP Responder\n\
    \   sub-TLVs are used.  If the Echo Jitter TLV is present in an echo\n   request\
    \ for any other type of LSPs, the responding egress MAY apply\n   the jitter behavior\
    \ as described here.\n"
- title: 4.2.  Responding LSR Operations
  contents:
  - "4.2.  Responding LSR Operations\n   Usually the echo request packet will reach\
    \ the egress and bud nodes.\n   In case of TTL Expiry, i.e., traceroute mode,\
    \ the echo request packet\n   may stop at branch or transit nodes.  In both scenarios,\
    \ the echo\n   request will be passed on to the control plane for reply processing.\n\
    \   The operations at the receiving node are an extension to the existing\n  \
    \ processing as specified in [RFC4379].  As described in that document,\n   a\
    \ responding LSR SHOULD rate-limit the receipt of echo request\n   messages. \
    \ After rate-limiting, the responding LSR must verify the\n   general sanity of\
    \ the packet.  If the packet is malformed or certain\n   TLVs are not understood,\
    \ the [RFC4379] procedures must be followed\n   for echo reply.  Similarly, the\
    \ Reply Mode field determines if the\n   reply is required or not (and the mechanism\
    \ to send it back).\n   For P2MP LSP ping and traceroute, i.e., if the echo request\
    \ is\n   carrying an RSVP P2MP FEC or a Multicast LDP FEC, the responding LSR\n\
    \   MUST determine whether it is part of the P2MP LSP in question by\n   checking\
    \ with the control plane.\n      -  If the node is not part of the P2MP LSP, it\
    \ MUST respond\n         according to [RFC4379] processing rules.\n      -  If\
    \ the node is part of the P2MP LSP, the node must check\n         whether or not\
    \ the echo request is directed to it.\n         -  If a P2MP Responder Identifier\
    \ TLV is present, then the node\n            must follow the procedures defined\
    \ in Section 3.2 to\n            determine whether or not it should respond to\
    \ the request.\n            The presence of a P2MP Responder Identifier TLV or\
    \ a\n            Downstream Detailed Mapping TLV might affect the Return\n   \
    \         Code.  This is discussed in more detail later.\n         -  If the P2MP\
    \ Responder Identifier TLV is not present (or, in\n            the error case,\
    \ is present, but does not contain any sub-\n            TLVs), then the node\
    \ MUST respond according to [RFC4379]\n            processing rules.\n"
- title: 4.2.1.  Echo Reply Reporting
  contents:
  - "4.2.1.  Echo Reply Reporting\n   Echo reply messages carry Return Codes and Subcodes\
    \ to indicate the\n   result of the LSP ping (when the ping mode is being used)\
    \ as\n   described in [RFC4379].\n   When the responding node reports that it\
    \ is an egress, it is clear\n   that the echo reply applies only to that reporting\
    \ node.  Similarly,\n   when a node reports that it does not form part of the\
    \ LSP described\n   by the FEC, then it is clear that the echo reply applies only\
    \ to that\n   reporting node.  However, an echo reply message that reports an\
    \ error\n   from a transit node may apply to multiple egress nodes (i.e., leaves)\n\
    \   downstream of the reporting node.  In the case of the ping mode of\n   operation,\
    \ it is not possible to correlate the reporting node to the\n   affected egresses\
    \ unless the topology of the P2MP tree is already\n   known, and it may be necessary\
    \ to use the traceroute mode of\n   operation to further diagnose the LSP.\n \
    \  Note that a transit node may discover an error, but it may also\n   determine\
    \ that while it does lie on the path of the LSP under test,\n   it does not lie\
    \ on the path to the specific egress being tested.  In\n   this case, the node\
    \ SHOULD NOT generate an echo reply unless there is\n   a specific error condition\
    \ that needs to be communicated.\n   The following sections describe the expected\
    \ values of Return Codes\n   for various nodes in a P2MP LSP.  It is assumed that\
    \ the sanity and\n   other checks have been performed and an echo reply is being\
    \ sent\n   back.  As mentioned in Section 4.2, the Return Code might change\n\
    \   based on the presence of a Responder Identifier TLV or Downstream\n   Detailed\
    \ Mapping TLV.\n"
- title: 4.2.1.1.  Responses from Transit and Branch Nodes
  contents:
  - "4.2.1.1.  Responses from Transit and Branch Nodes\n   The presence of a Responder\
    \ Identifier TLV does not influence the\n   choice of the Return Code.  For a\
    \ success response, the Return Code\n   MAY be set to value 8 ('Label switched\
    \ at stack-depth <RSC>').  The\n   notation <RSC> refers to the Return Subcode\
    \ as defined in Section\n   3.1. of [RFC4379].  For error conditions, use appropriate\
    \ values\n   defined in [RFC4379].\n   The presence of a Downstream Detailed Mapping\
    \ TLV will influence the\n   choice of Return Code.  As per [RFC6424], the Return\
    \ Code in the echo\n   reply header MAY be set to 'See DDM TLV for Return Code\
    \ and Return\n   Subcode' as defined in [RFC6424].  The Return Code for each\n\
    \   Downstream Detailed Mapping TLV will depend on the downstream path as\n  \
    \ described in [RFC6424].\n   There will be a Downstream Detailed Mapping TLV\
    \ for each downstream\n   path being reported in the echo reply.  Hence, for transit\
    \ nodes,\n   there will be only one such TLV, and for branch nodes, there will\
    \ be\n   more than one.  If there is an Egress Address Responder sub-TLV, then\n\
    \   the branch node will include only one Downstream Detailed Mapping TLV\n  \
    \ corresponding to the downstream path required to reach the address\n   specified\
    \ in the Egress Address sub-TLV.\n"
- title: 4.2.1.2.  Responses from Egress Nodes
  contents:
  - "4.2.1.2.  Responses from Egress Nodes\n   The presence of a Responder Identifier\
    \ TLV does not influence the\n   choice of the Return Code.  For a success response,\
    \ the Return Code\n   MAY be set to value 3 ('Replying router is an egress for\
    \ the FEC at\n   stack-depth <RSC>').  For error conditions, use appropriate values\n\
    \   defined in [RFC4379].\n   The presence of the Downstream Detailed Mapping\
    \ TLV does not\n   influence the choice of Return Code.  Egress nodes do not put\
    \ in any\n   Downstream Detailed Mapping TLV in the echo reply [RFC6424].\n"
- title: 4.2.1.3.  Responses from Bud Nodes
  contents:
  - "4.2.1.3.  Responses from Bud Nodes\n   The case of bud nodes is more complex\
    \ than other types of nodes.  The\n   node might behave as either an egress node\
    \ or a transit node, or a\n   combination of an egress and branch node.  This\
    \ behavior is\n   determined by the presence of any Responder Identifier TLV and\
    \ the\n   type of sub-TLV in it.  Similarly, the Downstream Detailed Mapping\n\
    \   TLV can influence the Return Code values.\n   To determine the behavior of\
    \ the bud node, use the following rules.\n   The intent of these rules is to figure\
    \ out if the echo request is\n   meant for all nodes, or just this node, or for\
    \ another node reachable\n   through this node or for a different section of the\
    \ tree.  In the\n   first case, the node will behave like a combination of egress\
    \ and\n   branch node; in the second case, the node will behave like pure\n  \
    \ egress node; in the third case, the node will behave like a transit\n   node;\
    \ and in the last case, no reply will be sent back.\n   Node behavior rules:\n\
    \      -  If the Responder Identifier TLV is not present, then the node\n    \
    \     will behave as a combination of egress and branch node.\n      -  If the\
    \ Responder Identifier TLV containing a Node Address sub-\n         TLV is present,\
    \ and:\n         -  If the address specified in the sub-TLV matches to an\n  \
    \          address in the node, then the node will behave like a\n           \
    \ combination of egress and branch node.\n         -  If the address specified\
    \ in the sub-TLV does not match any\n            address in the node, then no\
    \ reply will be sent.\n      -  If the Responder Identifier TLV containing an\
    \ Egress Address\n        sub-TLV is present, and:\n         -  If the address\
    \ specified in the sub-TLV matches to an\n            address in the node, then\
    \ the node will behave like an\n            egress node only.\n         -  If\
    \ the node lies on the path to the address specified in the\n            sub-TLV,\
    \ then the node will behave like a transit node.\n         -  If the node does\
    \ not lie on the path to the address\n            specified in the sub-TLV, then\
    \ no reply will be sent.\n   Once the node behavior has been determined, the possible\
    \ values for\n   Return Codes are as follows:\n      -  If the node is behaving\
    \ as an egress node only, then for a\n         success response, the Return Code\
    \ MAY be set to value 3\n         ('Replying router is an egress for the FEC at\
    \ stack-depth\n         <RSC>').  For error conditions, use appropriate values\
    \ defined\n         in [RFC4379].  The echo reply MUST NOT contain any Downstream\n\
    \         Detailed Mapping TLV, even if one is present in the echo\n         request.\n\
    \      -  If the node is behaving as a transit node, and:\n         -  If a Downstream\
    \ Detailed Mapping TLV is not present, then\n            for a success response,\
    \ the Return Code MAY be set to value\n            8 ('Label switched at stack-depth\
    \ <RSC>').  For error\n            conditions, use appropriate values defined\
    \ in [RFC4379].\n         -  If a Downstream Detailed Mapping TLV is present,\
    \ then the\n            Return Code MAY be set to 'See DDM TLV for Return Code\
    \ and\n            Return Subcode' as defined in [RFC6424].  The Return Code\n\
    \            for the Downstream Detailed Mapping TLV will depend on the\n    \
    \        downstream path as described in [RFC6424].  There will be\n         \
    \   only one Downstream Detailed Mapping corresponding to the\n            downstream\
    \ path to the address specified in the Egress\n            Address sub-TLV.\n\
    \      -  If the node is behaving as a combination of egress and branch\n    \
    \     node, and:\n         -  If a Downstream Detailed Mapping TLV is not present,\
    \ then\n            for a success response, the Return Code MAY be set to value\n\
    \            3 ('Replying router is an egress for the FEC at stack-depth\n   \
    \         <RSC>').  For error conditions, use appropriate values\n           \
    \ defined in [RFC4379].\n         -  If a Downstream Detailed Mapping TLV is present,\
    \ then for a\n            success response, the Return Code MAY be set to value\
    \ 3\n            ('Replying router is an egress for the FEC at stack-depth\n \
    \           <RSC>').  For error conditions, use appropriate values\n         \
    \   defined in [RFC4379].  The Return Code for the each\n            Downstream\
    \ Detailed Mapping TLV will depend on the\n            downstream path as described\
    \ in [RFC6424].  There will be a\n            Downstream Detailed Mapping for\
    \ each downstream path from\n            the node.\n"
- title: 4.3.  Special Considerations for Traceroute
  contents:
  - '4.3.  Special Considerations for Traceroute

    '
- title: 4.3.1.  End of Processing for Traceroutes
  contents:
  - "4.3.1.  End of Processing for Traceroutes\n   As specified in [RFC4379], the\
    \ traceroute mode operates by sending a\n   series of echo requests with sequentially\
    \ increasing TTL values.  For\n   regular P2P targets, this processing stops when\
    \ a valid reply is\n   received from the intended egress or when some errored\
    \ return code is\n   received.\n   For P2MP targets, there may not be an easy\
    \ way to figure out the end\n   of the traceroute processing, as there are multiple\
    \ egress nodes.\n   Receiving a valid reply from an egress will not signal the\
    \ end of\n   processing.\n   For P2MP TE LSP, the initiating LSR has a priori\
    \ knowledge about the\n   number of egress nodes and their addresses.  Hence,\
    \ it is possible to\n   continue processing until a valid reply has been received\
    \ from each\n   end point, provided that the replies can be matched correctly\
    \ to the\n   egress nodes.\n   However, for Multicast LDP LSP, the initiating\
    \ LSR might not always\n   know about all of the egress nodes.  Hence, there might\
    \ not be a\n   definitive way to estimate the end of processing for traceroute.\n\
    \   Therefore, it is RECOMMENDED that traceroute operations provide for a\n  \
    \ configurable upper limit on TTL values.  Hence, the user can choose\n   the\
    \ depth to which the tree will be probed.\n"
- title: 4.3.2.  Multiple Responses from Bud and Egress Nodes
  contents:
  - "4.3.2.  Multiple Responses from Bud and Egress Nodes\n   The P2MP traceroute\
    \ may continue even after it has received a valid\n   reply from a bud or egress\
    \ node, as there may be more nodes at deeper\n   levels.  Hence, for subsequent\
    \ TTL values, a bud or egress node that\n   has previously replied would continue\
    \ to get new echo requests.\n   Since each echo request is handled independently\
    \ from previous\n   requests, these bud and egress nodes will keep on responding\
    \ to the\n   traceroute echo requests.  This can cause an extra processing burden\n\
    \   for the initiating LSR and these bud or egress LSRs.\n   To prevent a bud\
    \ or egress node from sending multiple replies in the\n   same traceroute operation,\
    \ a new \"Respond Only If TTL Expired\" flag\n   is being introduced.  This flag\
    \ is described in Section 3.4.\n   It is RECOMMENDED that this flag be used for\
    \ P2MP traceroute mode\n   only.  By using this flag, extraneous replies from\
    \ bud and egress\n   nodes can be reduced.  If PHP is being used in the P2MP tree,\
    \ then\n   bud and egress nodes will not get any labels with the echo request\n\
    \   packet.  Hence, this mechanism will not be effective for PHP\n   scenarios.\n"
- title: 4.3.3.  Non-Response to Traceroute Echo Requests
  contents:
  - "4.3.3.  Non-Response to Traceroute Echo Requests\n   There are multiple reasons\
    \ for which an ingress node may not receive\n   a reply to its echo request. \
    \ For example, the transit node has\n   failed or the transit node does not support\
    \ LSP ping.\n   When no reply to an echo request is received by the ingress, then\
    \ (as\n   per [RFC4379]) the subsequent echo request with a larger TTL SHOULD\n\
    \   be sent in order to trace further toward the egress, although the\n   ingress\
    \ MAY halt the procedure at this point.  The time that an\n   ingress waits before\
    \ sending the subsequent echo request is an\n   implementation choice.\n"
- title: 4.3.4.  Use of Downstream Detailed Mapping TLV in Echo Requests
  contents:
  - "4.3.4.  Use of Downstream Detailed Mapping TLV in Echo Requests\n   As described\
    \ in Section 4.6 of [RFC4379], an initiating LSR, during\n   traceroute, SHOULD\
    \ copy the Downstream Mapping(s) into its next echo\n   request(s).  However,\
    \ for P2MP LSPs, the initiating LSR will receive\n   multiple sets of Downstream\
    \ Detailed Mapping TLVs from different\n   nodes.  It is not practical to copy\
    \ all of them into the next echo\n   request.  Hence, this behavior is being modified\
    \ for P2MP LSPs.  If\n   the echo request is destined for more than one node,\
    \ then the\n   Downstream IP Address field of the Downstream Detailed Mapping\
    \ TLV\n   MUST be set to the ALLROUTERS multicast address, and the Address Type\n\
    \   field MUST be set to either IPv4 Unnumbered or IPv6 Unnumbered\n   depending\
    \ on the Target FEC Stack TLV.\n   If an Egress Address Responder sub-TLV is being\
    \ used, then the\n   traceroute is limited to only one egress.  Therefore this\
    \ traceroute\n   is effectively behaving like a P2P traceroute.  In this scenario,\
    \ as\n   per Section 4.2, the echo replies from intermediate nodes will\n   contain\
    \ only one Downstream Detailed Mapping TLV corresponding to the\n   downstream\
    \ path required to reach the address specified in the Egress\n   Address sub-TLV.\
    \  For this case, the echo request packet MAY reuse a\n   received Downstream\
    \ Detailed Mapping TLV.  This will allow interface\n   validation to be performed\
    \ as per [RFC4379].\n"
- title: 4.3.5.  Cross-Over Node Processing
  contents:
  - "4.3.5.  Cross-Over Node Processing\n   A cross-over node will require slightly\
    \ different processing for\n   traceroute mode.  The following definition of cross-over\
    \ is taken\n   from [RFC4875].\n      The term \"cross-over\" refers to the case\
    \ of an ingress or transit\n      node that creates a branch of a P2MP LSP, a\
    \ cross-over branch,\n      that intersects the P2MP LSP at another node farther\
    \ down the\n      tree.  It is unlike re-merge in that, at the intersecting node,\n\
    \      the cross-over branch has a different outgoing interface as well\n    \
    \  as a different incoming interface.\n   During traceroute, a cross-over node\
    \ will receive the echo requests\n   via each of its input interfaces.  Therefore,\
    \ the Downstream Detailed\n   Mapping TLV in the echo reply MUST carry information\
    \ only about the\n   outgoing interface corresponding to the input interface.\n\
    \   If this restriction is applied, the cross-over node will not\n   duplicate\
    \ the outgoing interface information in each of the echo\n   request it receives\
    \ via the different input interfaces.  This will\n   reflect the actual packet\
    \ replication in the data plane.\n"
- title: 5.  Non-Compliant Routers
  contents:
  - "5.  Non-Compliant Routers\n   If a node for a P2MP LSP does not support MPLS\
    \ LSP ping, then no\n   reply will be sent, causing an incorrect result on the\
    \ initiating\n   LSR.  There is no protection for this situation, and operators\
    \ may\n   wish to ensure that all nodes for P2MP LSPs are all equally capable\n\
    \   of supporting this function.\n   If the non-compliant node is an egress, then\
    \ the traceroute mode can\n   be used to verify the LSP nearly all the way to\
    \ the egress, leaving\n   the final hop to be verified manually.\n   If the non-compliant\
    \ node is a branch or transit node, then it should\n   not impact ping mode. \
    \ However the node will not respond during\n   traceroute mode.\n"
- title: 6.  OAM and Management Considerations
  contents:
  - "6.  OAM and Management Considerations\n   The procedures in this document provide\
    \ OAM functions for P2MP MPLS\n   LSPs and may be used to enable bootstrapping\
    \ of other OAM procedures.\n   In order to be fully operational, several considerations\
    \ apply.\n      -  Scaling concerns dictate that only cautious use of LSP ping\n\
    \         should be made.  In particular, sending an LSP ping to all\n       \
    \  egresses of a P2MP MPLS LSP could result in congestion at or\n         near\
    \ the ingress when the replies arrive.\n         Further, incautious use of timers\
    \ to generate LSP ping echo\n         requests either in ping mode or especially\
    \ in traceroute may\n         lead to significant degradation of network performance.\n\
    \      -  Management interfaces should allow an operator full control\n      \
    \   over the operation of LSP ping.  In particular, such interfaces\n        \
    \ should provide the ability to limit the scope of an LSP ping\n         echo\
    \ request for a P2MP MPLS LSP to a single egress.\n         Such interfaces should\
    \ also provide the ability to disable all\n         active LSP ping operations,\
    \ to provide a quick escape if the\n         network becomes congested.\n    \
    \  -  A MIB module is required for the control and management of LSP\n       \
    \  ping operations, and to enable the reported information to be\n         inspected.\n\
    \         There is no reason to believe this should not be a simple\n        \
    \ extension of the LSP ping MIB module used for P2P LSPs.\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  New Sub-TLV Types
  contents:
  - "7.1.  New Sub-TLV Types\n   Four new sub-TLV types are defined for inclusion\
    \ within the LSP ping\n   [RFC4379] Target FEC Stack TLV (TLV type 1).\n   IANA\
    \ has assigned sub-type values to the following sub-TLVs under TLV\n   type 1\
    \ (Target FEC Stack) from the \"Multi-Protocol Label Switching\n   (MPLS) Label\
    \ Switched Paths (LSPs) Ping Parameters\" registry, \"TLVs\n   and sub-TLVs\"\
    \ sub-registry.\n      17 RSVP P2MP IPv4 Session (Section 3.1.1)\n      18 RSVP\
    \ P2MP IPv6 Session (Section 3.1.1)\n      19 Multicast P2MP LDP FEC Stack (Section\
    \ 3.1.2)\n      20 Multicast MP2MP LDP FEC Stack (Section 3.1.2)\n"
- title: 7.2.  New TLVs
  contents:
  - "7.2.  New TLVs\n   Two new LSP ping TLV types are defined for inclusion in LSP\
    \ ping\n   messages.\n   IANA has assigned a new value from the \"Multi-Protocol\
    \ Label\n   Switching Architecture (MPLS) Label Switched Paths (LSPs) Ping\n \
    \  Parameters\" registry, \"TLVs and sub-TLVs\" sub-registry as follows\n   using\
    \ a Standards Action value.\n      11 P2MP Responder Identifier TLV (see Section\
    \ 3.2) is a mandatory\n         TLV.\n        Four sub-TLVs are defined.\n   \
    \     - Sub-Type 1: IPv4 Egress Address P2MP Responder\n        - Sub-Type 2:\
    \ IPv6 Egress Address P2MP Responder\n        - Sub-Type 3: IPv4 Node Address\
    \ P2MP Responder\n        - Sub-Type 4: IPv6 Node Address P2MP Responder\n   \
    \   12 Echo Jitter TLV (see Section 3.3) is a mandatory TLV.\n"
- title: 7.3.  New Global Flags Registry
  contents:
  - "7.3.  New Global Flags Registry\n   IANA has created a new sub-registry of the\
    \ \"Multi-Protocol Label\n   Switching (MPLS) Label Switched Paths (LSPs) Ping\
    \ Parameters\"\n   registry.  The sub-registry is called the \"Global Flags\"\
    \ registry.\n   This registry tracks the assignment of 16 flags in the Global\
    \ Flags\n   field of the MPLS LSP ping echo request message.  The flags are\n\
    \   numbered from 0 (most significant bit, transmitted first) to 15.\n   New entries\
    \ are assigned by Standards Action.\n   Initial entries in the registry are as\
    \ follows:\n   Bit number  |  Name                      | Reference\n   ------------+----------------------------+--------------\n\
    \     15        |  V Flag                    | [RFC4379]\n     14        |  T\
    \ Flag                    | [RFC6425]\n     13-0      |  Unassigned          \
    \      |\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document does not introduce security concerns\
    \ over and above\n   those described in [RFC4379].  Note that because of the scalability\n\
    \   implications of many egresses to P2MP MPLS LSPs, there is a stronger\n   concern\
    \ about regulating the LSP ping traffic passed to the control\n   plane by the\
    \ use of a rate limiter applied to the LSP ping well-known\n   UDP port.  This\
    \ rate limiting might lead to false indications of LSP\n   failure.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors would like to acknowledge the authors of\
    \ [RFC4379] for\n   their work, which is substantially re-used in this document.\
    \  Also,\n   thanks to the members of the MBONED working group for their review\
    \ of\n   this material, to Daniel King and Mustapha Aissaoui for their\n   reviews,\
    \ and to Yakov Rekhter for useful discussions.\n   The authors would like to thank\
    \ Bill Fenner, Vanson Lim, Danny\n   Prairie, Reshad Rahman, Ben Niven-Jenkins,\
    \ Hannes Gredler, Nitin\n   Bahadur, Tetsuya Murakami, Michael Hua, Michael Wildt,\
    \ Dipa Thakkar,\n   Sam Aldrin, and IJsbrand Wijnands for their comments and suggestions.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC4379]   Kompella, K. and G. Swallow, \"Detecting Multi-Protocol\n\
    \               Label Switched (MPLS) Data Plane Failures\", RFC 4379,\n     \
    \          February 2006.\n   [RFC6424]   Bahadur, N., Kompella, K., and G. Swallow,\
    \ \"Mechanism for\n               Performing LSP-Ping over MPLS Tunnels\", RFC\
    \ 6424,\n               November 2011.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [IANA-AF]   IANA Assigned Port Numbers,\n \
    \              <http://www.iana.org/assignments/address-family-numbers>.\n   [RFC792]\
    \    Postel, J., \"Internet Control Message Protocol\", STD 5,\n             \
    \  RFC 792, September 1981.\n   [RFC4461]   Yasukawa, S., Ed., \"Signaling Requirements\
    \ for Point-to-\n               Multipoint Traffic-Engineered MPLS Label Switched\
    \ Paths\n               (LSPs)\", RFC 4461, April 2006.\n   [RFC4687]   Yasukawa,\
    \ S., Farrel, A., King, D., and T. Nadeau,\n               \"Operations and Management\
    \ (OAM) Requirements  for Point-\n               to-Multipoint MPLS Networks\"\
    , RFC 4687, September 2006.\n   [RFC4875]   Aggarwal, R., Ed., Papadimitriou,\
    \ D., Ed., and S.\n               Yasukawa, Ed., \"Extensions to Resource Reservation\n\
    \               Protocol - Traffic Engineering (RSVP-TE) for Point-to-\n     \
    \          Multipoint TE Label Switched Paths (LSPs)\", RFC 4875, May\n      \
    \         2007.\n   [RFC5884]   Aggarwal, R., Kompella, K., Nadeau, T., and G.\
    \ Swallow,\n               \"Bidirectional Forwarding Detection (BFD) for MPLS\
    \ Label\n               Switched Paths (LSPs)\", RFC 5884, June 2010.\n   [RFC6348]\
    \   Le Roux, JL., Ed., and T. Morin, Ed., \"Requirements for\n               Point-to-Multipoint\
    \ Extensions to the Label Distribution\n               Protocol\", RFC 6348, September\
    \ 2011.\n   [RFC6388]   Wijnands, IJ., Ed., Minei, I., Ed., Kompella, K., and\
    \ B.\n               Thomas, \"Label Distribution Protocol Extensions for\n  \
    \             Point-to-Multipoint and Multipoint-to-Multipoint Label\n       \
    \        Switched Paths\", RFC 6388, November 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Shaleen Saxena\n   Cisco Systems, Inc.\n   1414 Massachusetts\
    \ Ave\n   Boxborough, MA 01719\n   EMail: ssaxena@cisco.com\n   George Swallow\n\
    \   Cisco Systems, Inc.\n   1414 Massachusetts Ave\n   Boxborough, MA 01719\n\
    \   EMail: swallow@cisco.com\n   Zafar Ali\n   Cisco Systems Inc.\n   2000 Innovation\
    \ Drive\n   Kanata, ON, K2K 3E8, Canada.\n   Phone: 613-889-6158\n   EMail: zali@cisco.com\n\
    \   Adrian Farrel\n   Juniper Networks\n   EMail: adrian@olddog.co.uk\n   Seisho\
    \ Yasukawa\n   NTT Corporation\n   3-9-11, Midori-Cho Musashino-Shi\n   Tokyo\
    \ 180-8585 Japan\n   Phone: +81 422 59 2684\n   EMail: yasukawa.seisho@lab.ntt.co.jp\n\
    \   Thomas D. Nadeau\n   CA Technologies, Inc.\n   273 Corporate Drive\n   Portsmouth,\
    \ NH 03801\n   EMail: thomas.nadeau@ca.com\n"
