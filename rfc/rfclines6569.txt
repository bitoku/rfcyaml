Abstract This document provides general guidelines for work on developing and specifying an interactive audio codec within the IETF.
These guidelines cover the development process, evaluation, requirements conformance, and intellectual property issues.
This document describes a process for work in the IETF codec WG on standardization of an audio codec that is optimized for use in interactive Internet applications and that can be widely implemented and easily distributed among application developers, service operators, and end users.
The process outlined here is intended to make the work on a codec within the IETF transparent, predictable, and well organized, in a way that is consistent with [PROCESS].
Such work might involve development of a completely new codec, adaptation of an existing codec to meet the requirements of the working group, or integration of two or more existing codecs that results in an improved codec combining the best aspects of each.
To enable such procedural transparency, the contributor of an existing codec must be willing to cede change control to the IETF and should have sufficient knowledge of the codec to assist in the work of adapting it or applying some of its technology to the development or improvement of other codecs.
Furthermore, contributors need to be aware that any codec that results from work within the IETF is likely to be different from any existing codec that was contributed to the Internet Standards Process.
Work on developing an interactive audio codec is expected to proceed as follows:
IETF participants will identify the requirements to be met by an Internet codec in the form of an Internet Draft.
Interested parties are encouraged to make contributions proposing existing or new codecs, or elements thereof, to the codec WG as long as these contributions are within the scope of the WG.
Ideally, these contributions should be in the form of Internet  Drafts, although other forms of contributions are also possible, as discussed in [PROCESS].
Given the importance of intellectual property rights (IPR) to the activities of the working group, any IPR disclosures must be made in a timely way.
Contributors are required, as described in [IPR], to disclose any known IPR, both first and third party.
Timely disclosures are particularly important, since those disclosures may be material to the decision process of the working group.
As contributions are received and discussed within the working group, the group should gain a clearer understanding of what is achievable within the design space.
As a result, the authors of the requirements document should iteratively clarify and improve their document to reflect the emerging working group consensus.
This is likely to involve collaboration with IETF working groups in other areas, such as collaboration with working groups in the Transport area to identify important aspects of packet transmission over the Internet and to understand the degree of rate adaptation desirable and with working groups in the RAI area to ensure that information about and negotiation of the codec can be easily represented at the signaling layer.
In parallel with this work, interested parties should evaluate the contributions at a higher level to see which requirements might be met by each codec.
Once a sufficient number of proposals has been received, the interested parties will identify the strengths, weaknesses, and innovative aspects of the contributed codecs.
This step will consider not only the codecs as a whole, but also key features of the individual algorithms (predictors, quantizers, transforms, etc.).
Interested parties are encouraged to collaborate and combine the best ideas from the various codec contributions into a consolidated codec definition, representing the merging of some of the contributions.
Through this iterative process, the number of proposals will reduce, and consensus will generally form around one of them.
At that point, the working group should adopt that document as a working group item, forming a baseline codec.
IETF participants should then attempt to iteratively add to or improve each component of the baseline codec reference implementation, where by "component" we mean individual algorithms such as predictors, transforms, quantizers, and entropy coders.
The participants should proceed by trying new designs, applying ideas from the contributed codecs, evaluating "proof of concept" ideas, and using their expertise in codec development to improve the baseline codec.
Any aspect of the baseline codec might be changed (even the fundamental principles of the codec), or the participants might start over entirely by scrapping the baseline codec and designing a completely new one.
The overriding goal shall be to design a codec that will meet the requirements defined in the requirements document [CODEC REQ].
Given the IETF's open standards process, any interested party will be able to contribute to this work, whether or not they submitted an Internet Draft for one of the contributed codecs.
The codec itself should be normatively specified with code in an Internet Draft.
In parallel with work on the codec reference implementation, developers and other interested parties should perform evaluation of the codec as described under Section 3.
IETF participants should define (within the PAYLOAD working group)
the codec's payload format for use with the Real time Transport Protocol [RTP].
Ideally, application developers should test the codec by implementing it in code and deploying it in actual Internet applications.
Unfortunately, developers will frequently wait to deploy the codec until it is published as an RFC or until a stable bitstream is guaranteed.
As such, this is a nice to have and not a requirement for this process.
Lab implementations are certainly encouraged.
The group will produce a testing results document.
The document will be a living document that captures testing done before the codec stabilized, after it has stabilized, and after the codec specification is issued as an RFC.
The document serves the purpose of helping the group determine whether the codec meets the requirements.
Any testing done after the codec RFC is issued helps implementers understand the final performance of the codec.
The process of testing is described in Section 3.
Evaluation, Testing, and Characterization Lab evaluation of the codec being developed should happen throughout the development process because it will help ensure that progress is being made toward fulfillment of the requirements.
There are many ways in which continuous evaluation can be performed.
For minor, uncontroversial changes to the codec, it should usually be sufficient to use objective measurements (e.g., Perceptual Evaluation of Speech Quality (PESQ) [ITU T P.862], Perceptual Evaluation of Audio Quality (PEAQ)
[ITU R BS.1387 1], and segmental signal to noise ratio) validated by informal subjective evaluation.
For more complex changes (e.g., when psychoacoustic aspects are involved) or for controversial issues, internal testing should be performed.
An example of internal testing would be to have individual participants rate the decoded samples using one of the established testing methodologies, such as MUltiple Stimuli with Hidden Reference and Anchor (MUSHRA)
Throughout the process, it will be important to make use of the Internet community at large for real world distributed testing.
This will enable many different people with different equipment and use cases to test the codec and report any problems they experience.
In the same way, third party developers will be encouraged to integrate the codec into their software (with a warning about the bitstream not being final) and provide feedback on its performance in real world use cases.
Characterization of the final codec must be based on the reference implementation only (and not on any "private implementation").
This can be performed by independent testing labs or, if this is not possible, by testing labs of the organizations that contribute to the Internet Standards Process.
Packet loss robustness should be evaluated using actual loss patterns collected from use over the Internet, rather than theoretical models.
The goals of the characterization phase are to:  ensure that the requirements have been fulfilled  guide the IESG in its evaluation of the resulting work  assist application developers in understanding whether the codec is suitable for a particular application The exact methodology for the characterization phase can be determined by the working group.
Because the IETF does not have testing resources of its own, it has to rely on the resources of its participants.
For this reason, even if the group agrees that a particular test is important, if no one volunteers to do it, or if volunteers do not complete it in a timely fashion, then that test should be discarded.
This ensures that only important tests be done   in particular, the tests that are important to participants.
Specifying the Codec Specifying a codec requires careful consideration regarding what is required versus what is left to the implementation.
The following text provides guidelines for consideration by the working group: 1.
Any audio codec specified by the codec working group must include source code for a normative software implementation, documented in an Internet Draft intended for publication as a Standards Track RFC.
This implementation will be used to verify conformance of an implementation.
Although a text description of the algorithm should be provided, its use should be limited to helping the reader in understanding the source code.
Should the description contradict the source code, the latter shall take precedence.
For convenience, the source code may be provided in compressed form, with base64 [BASE64] encoding.
Because of the size and complexity of most codecs, it is possible that even after publishing the RFC, bugs will be found in the reference implementation, or differences will be found between the implementation and the text description.
As usual, an errata list should be maintained for the RFC.
Although a public software repository containing the current reference implementation is desirable, the normative implementation would still be the RFC.
It is the intention of the group to allow the greatest possible choice of freedom in implementing the specification.
Accordingly, the number of binding RFC 2119 [KEYWORDS] keywords will be the minimum that still allows interoperable implementations.
In practice, this generally means that only the decoder needs to be normative, so that the encoder can improve over time.
This also enables different trade offs between quality and complexity.
To reduce the risk of bias towards certain CPU/DSP (central processing unit / digital signal processor) architectures, ideally the decoder specification should not require "bit exact" conformance with the reference implementation.
In that case, the output of a decoder implementation should only be "close enough" to the output of the reference decoder, and a comparison tool should be provided along with the codec to verify objectively that the output of a decoder is likely to be perceptually indistinguishable from that of the reference decoder.
An implementation may still wish to produce an output that is bit  exact with the reference implementation to simplify the testing procedure.
To ensure freedom of implementation, decoder side only error concealment does not need to be specified, although the reference implementation should include the same packet loss concealment (PLC) algorithm as used in the testing phase.
Is it up to the working group to decide whether minimum requirements on PLC quality will be required for compliance with the specification.
Obviously, any information signaled in the bitstream intended to aid PLC needs to be specified. 6.
An encoder implementation should not be required to make use of all the "features" (tools) in the bitstream definition.
However, the codec specification may require that an encoder implementation be able to generate any possible bitrate.
Unless a particular "profile" is defined in the specification, the decoder must be able to decode all features of the bitstream.
The decoder must also be able to handle any combination of bits, even combinations that cannot be generated by the reference encoder.
It is recommended that the decoder specification shall define how the decoder should react to "impossible" packets (e.g., reject or consider as valid).
However, an encoder must never generate packets that do not conform to the bitstream definition.
Compressed test vectors should be provided as a means to verify conformance with the decoder specification.
These test vectors should be designed to exercise as much of the decoder code as possible.
While the exact encoder will not be specified, it is recommended to specify objective measurement targets for an encoder, below which use of a particular encoder implementation is not recommended.
For example, one such specification could be: "
the use of an encoder whose PESQ mean opinion score (MOS) is better than 0.1 below the reference encoder in the following conditions is not recommended".
It is understood that other SDOs are also involved in the codec development and standardization, including but not necessarily limited to:  The Telecommunication Standardization Sector (ITU T) of the International Telecommunication Union (ITU), in particular Study Group 16
The Moving Picture Experts Group (MPEG) of the International Organization for Standardization and International Electrotechnical Commission (ISO/IEC)
The European Telecommunications Standards Institute (ETSI)
The 3rd Generation Partnership Project (3GPP)  The 3rd Generation Partnership Project 2 (3GPP2)
It is important to ensure that such work does not constitute uncoordinated protocol development of the kind described in [UNCOORD] in the following principle:
[T]he IAB considers it an essential principle of the protocol development process that only one SDO maintains design authority for a given protocol, with that SDO having ultimate authority over the allocation of protocol parameter code points and over defining the intended semantics, interpretation, and actions associated with those code points.
The work envisioned by this guidelines document is not uncoordinated in the sense described in the foregoing quote, since the intention of this process is that two possible outcomes might occur: 1.
The IETF adopts an existing audio codec and specifies that it is the "anointed" IETF Internet codec.
In such a case, codec ownership lies entirely with the SDO that produced the codec, and not with the IETF.
The IETF produces a new codec.
Even if this codec uses concepts, algorithms, or even source code from a codec produced by another SDO, the IETF codec is a specification unto itself and under complete control of the IETF.
Any changes or enhancements made by the original SDO to the codecs whose components the IETF used are not applicable to the IETF codec.
Such changes would be incorporated as a consequence of a revision or extension of the IETF RFC.
In no case should the new codec reuse a name or code point from another SDO.
Although there is already sufficient codec expertise available among IETF participants to complete the envisioned work, additional contributions are welcome within the framework of the Internet Standards Process in the following ways:  Individuals who are technical contributors to codec work within other SDOs can participate directly in codec work within the IETF.
Other SDOs can contribute their expertise (e.g., codec characterization and evaluation techniques) and thus facilitate the testing of a codec produced by the IETF.
Any SDO can provide input to IETF work through liaison statements.
However, it is important to note that final responsibility for the development process and the resulting codec will remain with the IETF as governed by BCP 9 [PROCESS].
Finally, there is precedent for the contribution of codecs developed elsewhere to the ITU T (e.g., Adaptive Multi Rate Wideband (AMR WB) was standardized originally within 3GPP).
This is a model to explore as the IETF coordinates further with the ITU T in accordance with the collaboration guidelines defined in [COLLAB].
The procedural guidelines for codec development do not have security considerations.
However, the resulting codec needs to take appropriate security considerations into account, as outlined in [SECGUIDE] and in the security considerations of [CODEC REQ].
More specifically, the resulting codec must avoid being subject to denial of service [DOS] and buffer overflows, and should take into consideration the impact of variable bitrate (VBR) [SRTP VBR].
