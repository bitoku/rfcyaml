Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in TCP/IP based internets.
In particular, it defines objects for managing remote network monitoring (RMON) devices for use on high speed networks.
This document contains a MIB Module that defines these new objects and also contains definitions of some updated objects from the RMON MIB in RFC 2819 and the RMON2 MIB in RFC 2021.
The SNMP Management Framework presently consists of five major components:  An overall architecture, described in RFC 2571 [1].
Mechanisms for describing and naming objects and events for the purpose of management.
The first version of this Structure of Management Information (SMI) is called SMIv1 and described in STD 16, RFC 1155 [2], STD 16, RFC 1212 [3], and RFC 1215 [4].
The second version, called SMIv2, is described in STD 58, RFC 2578 [5], RFC 2579 [6], and RFC 2580 [7].
Message protocols for transferring management information.
The first version of the SNMP message protocol is called SNMPv1 and is described in STD 15, RFC 1157 [8].
A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and is described in RFC 1901 [9], and RFC 1906 [10].
The third version of the message protocol is called SNMPv3 and is described in RFC 1906 [10], RFC 2572 [11], and RFC 2574 [12].
Protocol operations for accessing management information.
The first set of protocol operations and associated PDU formats is described in STD 15, RFC 1157 [8].
A second set of protocol operations and associated PDU formats is described in RFC 1905 [13].
A set of fundamental applications described in RFC 2573 [14] and the view based access control mechanism described in RFC 2575 [15].
A more detailed introduction to the current SNMP Management Framework can be found in RFC 2570 [22].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the mechanisms defined in the SMI.
This memo specifies a MIB module that is compliant to the SMIv2.
A MIB conforming to the SMIv1 can be produced through the appropriate translations.
The resulting translated MIB must be semantically equivalent, except where objects or events are omitted because no translation is possible (use of Counter64).
Some machine readable information in SMIv2 will be converted into textual descriptions in SMIv1 during the translation process.
However, this loss of machine readable information is not considered to change the semantics of the MIB.
This document continues the architecture created in the RMON MIB [RFC 2819] by supporting high speed networks.
Remote network monitoring devices, often called monitors or probes, are instruments that exist for the purpose of managing a network.
Often these remote probes are stand alone devices and devote significant internal resources for the sole purpose of managing a network.
An organization may employ many of these devices, one per network segment, to manage its internet.
In addition, these devices may be used for a network management service provider to access a client network, often geographically remote.
The objects defined in this document are intended as an interface between an RMON agent and an RMON management application and are not intended for direct manipulation by humans.
While some users may tolerate the direct display of some of these objects, few will tolerate the complexity of manually manipulating objects to accomplish row creation.
These functions should be handled by the management application.
2.1  Structure of MIB Except for the mediaIndependentTable, each of the tables in this MIB adds high capacity capability to an associated table in the RMON 1 MIB or RMON 2 MIB.
The objects are arranged into the following groups:
mediaIndependentGroup etherStatsHighCapacityGroup etherHistoryHighCapacityGroup hostHighCapacityGroup hostTopNHighCapacityGroup
matrixHighCapacityGroup captureBufferHighCapacityGroup protocolDistributionHighCapacityGroup nlHostHighCapacityGroup nlMatrixHighCapacityGroup
These groups are the basic units of conformance.
If a remote monitoring device implements a group, then it must implement all objects in that group.
For example, a managed agent that implements the network layer matrix group must implement the nlMatrixSDHighCapacityTable and the nlMatrixDSHighCapacityTable.
Implementations of this MIB must also implement the system and interfaces group of MIB II [16,17].
MIB II may also mandate the implementation of additional groups.
These groups are defined to provide a means of assigning object identifiers, and to provide a method for agent implementors to know which objects they must implement.
Updates to RMON MIB and RMON2 MIB objects This document extends the enumerations in the following objects from the RMON MIB [18] and
The variable for each host that the hostTopNRate variable is based upon, as well as a control for the table that the results will be reported in.
This object may not be modified if the associated hostTopNStatus object is equal to valid(1).
If this value is less than or equal to 7, when the report is prepared, entries are created in the hostTopNTable associated with this object.
If this value is greater than or equal to 8, when the report is prepared, entries are created in the hostTopNHighCapacityTable associated with this object."
The variable for each nlMatrix[SD/DS] entry that the nlMatrixTopNEntries are sorted by, as well as a control for the table that the results will be reported in.
This object may not be modified if the associated nlMatrixTopNControlStatus object is equal to active(1).
If this value is less than or equal to 2, when the report is prepared, entries are created in the nlMatrixTopNTable associated with this object.
If this value is greater than or equal to 3, when the report is prepared, entries are created in the nlMatrixTopNHighCapacityTable associated with this object."
"The variable for each alMatrix[SD/DS] entry that the alMatrixTopNEntries are sorted by, as well as the selector of the view of the matrix table that will be used, as well as a control for the table that the results will be reported in.
The values alMatrixTopNTerminalsPkts, alMatrixTopNTerminalsOctets, alMatrixTopNTerminalsHighCapacityPkts, and alMatrixTopNTerminalsHighCapacityOctets cause collection only from protocols that have no child protocols that are counted.
The values alMatrixTopNAllPkts, alMatrixTopNAllOctets, alMatrixTopNAllHighCapacityPkts, and alMatrixTopNAllHighCapacityOctets cause collection from all alMatrix entries.
This object may not be modified if the associated alMatrixTopNControlStatus object is equal to active(1).
The following conventions are used throughout the RMON MIB and its companion documents.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119.
Good Packets Good packets are error free packets that have a valid frame length.
For example, on Ethernet, good packets are error free packets that are between 64 octets long and 1518
They follow the form defined in IEEE 802.3 section 3.2.all.
Implementors are urged to consult the appropriate media specific specifications.
Bad packets are packets that have proper framing and are therefore recognized as packets, but contain errors within the packet or have an invalid length.
For example, on Ethernet, bad packets have a valid preamble and SFD (Start of Frame Delimiter), but have a bad FCS (Frame Check Sequence), or are either shorter than 64 octets or longer than 1518 octets.
Implementors are urged to consult the appropriate media specific specifications.
Definitions HC RMON MIB DEFINITIONS ::
TC MODULE COMPLIANCE, OBJECT GROUP FROM SNMPv2 CONF rmon, OwnerString, statistics, history, hosts, hostTopN, matrix, etherStatsIndex, etherHistoryIndex, etherHistorySampleIndex, hostIndex, hostAddress, hostTimeIndex, hostTimeCreationOrder, hostTopNReport, hostTopNIndex, matrixSDIndex, matrixSDSourceAddress, matrixSDDestAddress, matrixDSIndex, matrixDSDestAddress, matrixDSSourceAddress, capture, captureBufferControlIndex, captureBufferIndex FROM RMON MIB protocolDirLocalIndex, protocolDistControlIndex, protocolDist, hlHostControlIndex, nlHost, nlHostTimeMark, nlHostAddress, hlMatrixControlIndex, nlMatrix, nlMatrixSDTimeMark, nlMatrixSDSourceAddress, nlMatrixSDDestAddress, nlMatrixDSTimeMark, nlMatrixDSDestAddress, nlMatrixDSSourceAddress, nlMatrixTopNControlIndex, nlMatrixTopNIndex, alHost, alHostTimeMark, alMatrix, alMatrixSDTimeMark, alMatrixDSTimeMark, alMatrixTopNControlIndex, alMatrixTopNIndex, usrHistory,
usrHistoryControlIndex, usrHistorySampleIndex, usrHistoryObjectIndex, rmonConformance, ZeroBasedCounter32
, probeConfig FROM RMON2 MIB ZeroBasedCounter64, CounterBasedGauge64 FROM HCNUM TC
2002 ORGANIZATION "IETF RMON MIB Working Group" CONTACT INFO "Steve Waldbusser Phone:
1 650 745 0671 Email:
The MIB module for managing remote monitoring device implementations.
The original version of this MIB, published as RFC3273."
The following table defines media independent statistics that provide information for full and/or half duplex links as well as high capacity links.
For half duplex links, or full duplex capable links operating in half duplex mode, the mediaIndependentIn  objects shall be used and the mediaIndependentOut  objects shall not increment.
For full duplex links, the mediaIndependentOut  objects shall be present and shall increment.
Whenever possible, the probe should count packets moving away from the closest terminating equipment as output packets.
Failing that, the probe should count packets moving away from the DTE as output packets."
MediaIndependentEntry MAX ACCESS not accessible
current DESCRIPTION "Media independent statistics for promiscuous monitoring of any media.
MAX ACCESS not accessible STATUS
"The value of this object uniquely identifies this mediaIndependent entry."
"This object identifies the source of the data that this mediaIndependent entry is configured to analyze.
This source can be any interface on this device.
In order to identify a particular interface, this object shall identify the instance of the ifIndex object, defined in RFC 1213 and RFC 2233 [16,17], for the desired interface.
For example, if an entry were to receive data from interface #1, this object would be set to ifIndex.1.
The statistics in this group reflect all packets on the local network segment attached to the identified interface.
An agent may or may not be able to tell if fundamental changes to the media of the interface have occurred and necessitate a deletion of this entry.
For example, a hot pluggable ethernet card could be pulled out and replaced by a token ring card.
In such a case, if the agent has such knowledge of the change, it is recommended that it delete this entry.
This object may not be modified if the associated mediaIndependentStatus object is equal to active(1).
"The total number of events in which packets were dropped by the probe due to lack of resources.
Note that this number is not necessarily
the number of packets dropped; it is just the number of times this condition has been detected."
"The total number of frames which were received by the probe and therefore not accounted for in the mediaIndependentDropEvents, but for which the probe chose not to count for this entry for whatever reason.
Most often, this event occurs when the probe is out of some resources and decides to shed load from this collection.
This count does not include packets that were not counted because they had MAC layer errors.
Note that, unlike the dropEvents counter, this number is the exact number of frames dropped."
"The total number of packets (including bad packets, broadcast packets, and multicast packets) received on a half duplex link or on the inbound connection of a full duplex link."
"The number of times the associated mediaIndependentInPkts counter has overflowed."
"The total number of packets (including bad packets, broadcast packets, and multicast packets) received on a half duplex link or on the inbound connection of a full duplex link."
"The total number of packets (including bad packets, broadcast packets, and multicast packets) received on a full duplex link in the direction of the network."
"The number of times the associated mediaIndependentOutPkts counter has overflowed."
"The total number of packets (including bad packets, broadcast packets, and multicast packets) received on a full duplex link in the direction of the network."
"The number of times the associated mediaIndependentInOctets counter has overflowed."
"The total number of octets of data (including those in bad packets) received (excluding framing bits but including FCS octets) on a half duplex link or on the inbound connection of a full duplex link."
"The total number of octets of data (including those in bad packets) received on a full duplex link in the direction of the network (excluding framing bits but including FCS octets)."
"The number of times the associated mediaIndependentOutOctets counter has overflowed."
"The total number of octets of data (including those in bad packets) received on a full duplex link in the direction of the network (excluding framing bits but including FCS octets)."
"The total number of non unicast packets (including bad packets) received on a half duplex link or on the inbound connection of a full duplex link."
"The number of times the associated mediaIndependentInNUCastPkts counter has overflowed."
"The total number of non unicast packets (including bad packets) received on a half duplex link or on the inbound connection of a full duplex link."
"The total number of non unicast packets (including bad packets) received on a full duplex link in the direction of the network."
"The number of times the associated mediaIndependentOutNUCastPkts counter has overflowed."
"The total number of packets (including bad packets) received on a full duplex link in the direction of the network."
The nominal maximum speed in kilobits per second of this half duplex link or on the inbound connection of this full duplex link.
If the speed is unknown or there is no fixed maximum (e.g. a compressed link), this value shall be zero."
The nominal maximum speed in kilobits per second of this full duplex link in the direction of the network.
If the speed is unknown, the link is half duplex, or there is no fixed maximum (e.g. a compressed link), this value shall be zero."
The current mode of this link.
} mediaIndependentDuplexChanges OBJECT TYPE SYNTAX
"The number of times this link has changed from full duplex mode to half duplex mode or from half duplex mode to full duplex mode."
"The value of sysUpTime at the time the duplex status of this link last changed."
} mediaIndependentOwner OBJECT TYPE SYNTAX
SEQUENCE OF EtherStatsHighCapacityEntry MAX ACCESS
"Contains the High Capacity RMON extensions to the RMON 1 etherStatsTable."
EtherStatsHighCapacityEntry MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 1 etherStatsEntry.
These objects will be created by the agent for all etherStatsEntries
"The number of times the associated etherStatsPkts counter has overflowed."
"The total number of packets (including bad packets, broadcast packets, and multicast packets) received."
"The number of times the associated etherStatsOctets counter has overflowed."
{ etherStatsHighCapacityEntry 3 } etherStatsHighCapacityOctets OBJECT
"The total number of octets of data (including those in bad packets) received on the network (excluding framing bits but including FCS octets).
If the network is half duplex Fast Ethernet, this object can be used as a reasonable estimate of utilization.
If greater precision is desired, the etherStatsHighCapacityPkts and etherStatsHighCapacityOctets objects should be sampled before and after a common interval.
The differences in the sampled values are Pkts and Octets, respectively, and the number of seconds in the interval is Interval.
These values are used to calculate the Utilization as follows:
The result of this equation is the value Utilization which is the percent utilization of the ethernet segment on a scale of 0 to 100 percent.
This table is not appropriate for monitoring full duplex ethernets.
If the network is a full duplex ethernet and the mediaIndependentTable is monitoring that network, the utilization can be calculated as follows:
1) Determine the utilization of the inbound path by using the appropriate equation (for ethernet or fast ethernet) to determine the utilization, substituting mediaIndependentInPkts for etherStatsHighCapacityPkts, and mediaIndependentInOctets for etherStatsHighCapacityOctets.
Call the resulting utilization inUtilization.
2) Determine the utilization of the outbound path by using the same equation to determine the utilization, substituting mediaIndependentOutPkts for etherStatsHighCapacityPkts, and mediaIndependentOutOctets for etherStatsHighCapacityOctets.
Call the resulting utilization outUtilization.
The utilization is the maximum of inUtilization and outUtilization.
This metric shows the amount of percentage of bandwidth that is left before congestion will be experienced on the link."
"The number of times the associated etherStatsPkts64Octets counter has overflowed."
"The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets)."
"The number of times the associated etherStatsPkts65to127Octets counter has overflowed."
"The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets)."
"The number of times the associated etherStatsPkts128to255Octets counter has overflowed."
{ etherStatsHighCapacityEntry 9 } etherStatsHighCapacityPkts128to255Octets OBJECT TYPE SYNTAX
"The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets)."
"The number of times the associated etherStatsPkts256to511Octets counter has overflowed."
"The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets)."
"The number of times the associated etherStatsPkts512to1023Octets counter has overflowed."
"The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets)."
"The number of times the associated etherStatsPkts1024to1518Octets counter has overflowed."
"The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets)."
"Contains the High Capacity RMON extensions to the RMON 1 etherHistoryTable."
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 1 etherHistoryEntry.
These objects will be created by the agent for all etherHistoryEntries associated with whichever historyControlEntries it deems appropriate.
(i.e., either all etherHistoryHighCapacityEntries associated with a particular historyControlEntry will be created, or none of them will be.)
CounterBasedGauge64 } etherHistoryHighCapacityOverflowPkts OBJECT TYPE SYNTAX
"The total number of packets (including bad packets, broadcast packets, and multicast packets) received during this sampling interval."
"The number of times the associated etherHistoryOctets counter has overflowed during this sampling interval."
"The total number of octets of data (including those in bad packets) received on the network (excluding framing bits but including FCS octets) during this sampling interval."
High Capacity Extensions for the hostTable hostHighCapacityTable  OBJECT TYPE SYNTAX
SEQUENCE OF HostHighCapacityEntry MAX ACCESS
"Contains the High Capacity RMON extensions to the RMON 1 hostTable."
"Contains the High Capacity RMON extensions to the RMON 1 hostEntry.
These objects will be created by the agent for all hostEntries associated with whichever hostControlEntries
(i.e., either all hostHighCapacityEntries associated with a particular hostControlEntry will be created, or none of them will be.)
" INDEX { hostIndex, hostAddress }
"The number of times the associated hostInPkts counter has overflowed."
"The number of times the associated hostOutPkts counter has overflowed."
"The number of times the associated hostInOctets counter has overflowed."
"The number of times the associated hostOutOctets counter has overflowed."
SEQUENCE OF HostTimeHighCapacityEntry MAX ACCESS
"Contains the High Capacity RMON extensions to the RMON 1 hostTimeTable."
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 1 hostTimeEntry.
These objects will be created by the agent for all hostTimeEntries associated with whichever hostControlEntries
(i.e., either all hostTimeHighCapacityEntries associated with a particular hostControlEntry will be created, or none of them will be.)
"The number of times the associated hostTimeInPkts counter has overflowed."
"The number of times the associated hostTimeOutPkts counter has overflowed."
"The number of times the associated hostTimeInOctets counter has overflowed."
"The number of times the associated hostTimeOutOctets counter has overflowed."
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 1 hostTopNTable when hostTopNRateBase specifies a High Capacity TopN Report."
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 1 hostTopNEntry when hostTopNRateBase specifies a High Capacity TopN Report.
These objects will be created by the agent for all hostTopNEntries associated with whichever hostTopNControlEntries have a hostTopNRateBase that specify a high capacity report.
The physical address of this host."
The amount of change in the selected variable during this sampling interval, modulo 2^32.
The amount of change in the selected variable during this sampling interval, divided by 2^32, truncating fractions (i.e., X DIV 2^32).
3 } hostTopNHighCapacityRate OBJECT TYPE
The amount of change in the selected variable during this sampling interval.
High Capacity Extensions for the matrixSDTable matrixSDHighCapacityTable  OBJECT TYPE SYNTAX
SEQUENCE OF MatrixSDHighCapacityEntry MAX ACCESS
"Contains the High Capacity RMON extensions to the RMON 1 matrixSDTable."
"Contains the High Capacity RMON extensions to the RMON 1 matrixSDEntry.
These objects will be created by the agent for all matrixSDEntries associated with whichever matrixControlEntries
(i.e., either all matrixSDHighCapacityEntries associated with a particular matrixControlEntry will be created, or none of them will be.)
"The number of times the associated matrixSDPkts counter has overflowed."
} matrixSDHighCapacityPkts OBJECT TYPE SYNTAX
"The number of packets transmitted from the source address to the destination address (this number includes bad packets).
"The number of times the associated matrixSDOctets counter has overflowed."
SEQUENCE OF MatrixDSHighCapacityEntry MAX ACCESS
"Contains the High Capacity RMON extensions to the RMON 1 matrixDSTable."
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 1 matrixDSEntry.
These objects will be created by the agent for all matrixDSEntries associated with whichever matrixControlEntries
(i.e., either all matrixDSHighCapacityEntries associated with a particular matrixControlEntry will be created, or none of them will be.)
"The number of times the associated matrixDSPkts counter has overflowed."
"The number of packets transmitted from the source address to the destination address (this number includes bad packets).
"The number of times the associated matrixDSOctets counter has overflowed."
"Contains the High Capacity RMON extensions to the RMON 1 captureBufferTable."
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 1 captureBufferEntry.
These objects will be created by the agent for all captureBufferEntries associated with whichever bufferControlEntries
(i.e., either all captureBufferHighCapacityEntries associated with a particular bufferControlEntry will be created, or none of them will be.)
"The number of nanoseconds that had passed since this capture buffer was first turned on when this packet was captured, modulo 10^6.
This object is used in conjunction with the captureBufferPacketTime object.
This object returns the number of nano seconds to be added to to number of milli seconds obtained from the captureBufferPacketTime object, to obtain more accurate inter packet arrival time."
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 2 protocolDistStatsTable."
"Contains the High Capacity RMON extensions to the RMON 2 protocolDistStatsTable.
These objects will be created by the agent for all protocolDistStatsEntries associated with whichever protocolDistControlEntries it deems appropriate.
(i.e., either all protocolDistStatsHighCapacityEntries associated with a particular protocolDistControlEntry will be created, or none of them will be.)
"The number of times the associated protocolDistStatsPkts counter has overflowed."
"The number of packets without errors received of this protocol type.
Note that this is the number of link layer packets, so if a single network layer packet is fragmented into several link layer frames, this counter is incremented several times."
"The number of times the associated protocolDistStatsOctets counter has overflowed."
"The number of octets in packets received of this protocol type since it was added to the protocolDistStatsTable (excluding framing bits but including FCS octets), except for those octets in packets that contained errors.
Note this doesn't count just those octets in the particular protocol frames, but includes the entire packet that contained the protocol."
"Contains the High Capacity RMON extensions to the RMON 2 nlHostTable."
"Contains the High Capacity RMON extensions to the RMON 2 nlHostEntry.
These objects will be created by the agent for all nlHostEntries associated with whichever hlHostControlEntries it deems appropriate.
(i.e., either all nlHostHighCapacityEntries associated with a particular hlHostControlEntry will be created, or none of them will be.)
"The number of times the associated nlHostInPkts counter has overflowed."
"The number of packets without errors transmitted to this address since it was added to the nlHostHighCapacityTable.
Note that this is the number of link layer packets, so if a single network layer packet is fragmented into several link layer frames, this counter is incremented several times."
"The number of times the associated nlHostOutPkts counter has overflowed."
"The number of packets without errors transmitted by this address since it was added to the nlHostHighCapacityTable.
Note that this is the number of link layer packets, so if a single network layer packet is fragmented into several link layer frames, this counter is incremented several times."
"The number of times the associated nlHostInOctets counter has overflowed."
"The number of octets transmitted to this address since it was added to the nlHostHighCapacityTable (excluding framing bits but including FCS octets), excluding those octets in packets that contained errors.
Note this doesn't count just those octets in the particular protocol frames, but includes the entire packet that contained the protocol."
"The number of times the associated nlHostOutOctets counter has overflowed."
"The number of octets transmitted by this address since it was added to the nlHostHighCapacityTable (excluding framing bits but including FCS octets), excluding those octets in packets that contained errors.
Note this doesn't count just those octets in the particular protocol frames, but includes the entire packet that contained the protocol."
SEQUENCE OF NlMatrixSDHighCapacityEntry MAX ACCESS
"Contains the High Capacity RMON extensions to the RMON 2 nlMatrixTable."
NlMatrixSDHighCapacityEntry MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 2 nlMatrixEntry.
These objects will be created by the agent for all nlMatrixSDEntries associated with whichever hlMatrixControlEntries it deems appropriate.
(i.e., either all nlMatrixSDHighCapacityEntries associated with a particular hlMatrixControlEntry will be created, or none of them will be.)
"The number of times the associated nlMatrixSDPkts counter has overflowed."
"The number of packets without errors transmitted from the source address to the destination address since this entry was added to the nlMatrixSDHighCapacityTable.
Note that this is the number of link layer packets, so if a single network layer packet is fragmented into several link layer frames, this counter is incremented several times."
"The number of times the associated nlMatrixSDOctets counter has overflowed."
"The number of octets transmitted from the source address to the destination address since this entry was added to the nlMatrixSDHighCapacityTable (excluding framing bits but including FCS octets), excluding those octets in packets that contained errors.
Note this doesn't count just those octets in the particular protocol frames, but includes the entire packet that contained the protocol."
High Capacity extensions for the nlMatrixDSTable nlMatrixDSHighCapacityTable  OBJECT TYPE SYNTAX
SEQUENCE OF NlMatrixDSHighCapacityEntry MAX ACCESS
"Contains the High Capacity RMON extensions to the RMON 2 nlMatrixDSTable."
"Contains the High Capacity RMON extensions to the RMON 2 nlMatrixDSEntry.
These objects will be created by the agent for all nlMatrixDSEntries associated with whichever hlmatrixControlEntries
(i.e., either all nlMatrixDSHighCapacityEntries associated with a particular hlMatrixControlEntry will be created, or none of them will be.)
"The number of times the associated nlMatrixDSPkts counter has overflowed."
"The number of packets without errors transmitted from the source address to the destination address since this entry was added to the nlMatrixDSHighCapacityTable.
Note that this is the number of link layer packets, so if a single network layer packet is fragmented into several link layer frames, this counter is incremented several times."
"The number of times the associated nlMatrixDSOctets counter has overflowed."
"The number of octets transmitted from the source address to the destination address since this entry was added to the nlMatrixDSHighCapacityTable (excluding framing bits but including FCS octets), excluding those octets in packets that contained errors.
Note this doesn't count just those octets in the particular protocol frames, but includes the entire packet that contained the protocol."
High Capacity extensions for the nlMatrixTopNTable nlMatrixTopNHighCapacityTable OBJECT
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 2
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 2 nlMatrixTopNEntry when nlMatrixTopNControlRateBase specifies a High Capacity TopN Report.
These objects will be created by the agent for all nlMatrixTopNEntries associated with whichever nlMatrixTopNControlEntries have a nlMatrixTopNControlRateBase that specify a high capacity report.
The protocolDirLocalIndex of the network layer protocol of this entry's network address."
This is represented as an octet string with specific semantics and length as identified by the associated nlMatrixTopNProtocolDirLocalIndex.
For example, if the protocolDirLocalIndex indicates an encapsulation of ip, this object is encoded as a length octet of 4, followed by the 4 octets of the ip address, in network byte order."
The network layer address of the destination host in this conversation.
This is represented as an octet string with specific semantics and length as identified by the associated nlMatrixTopNProtocolDirLocalIndex.
For example, if the nlMatrixTopNProtocolDirLocalIndex indicates an encapsulation of ip, this object is encoded as a length octet of 4, followed by the 4 octets of the ip address, in network byte order."
"The number of packets seen from the source host to the destination host during this sampling interval, modulo 2^32, counted using the rules for counting the nlMatrixSDPkts object."
"The number of packets seen from the source host to the destination host during this sampling interval, counted using the rules for counting the nlMatrixSDPkts object.
If the value of nlMatrixTopNControlRateBase is nlMatrixTopNHighCapacityPkts, this variable will be used to sort this report."
"The number of packets seen from the destination host to the source host during this sampling interval, modulo 2^32, counted using the rules for counting the nlMatrixSDPkts object (note that the corresponding nlMatrixSDPkts object selected is the one whose source address is equal to nlMatrixTopNDestAddress and
whose destination address is equal to nlMatrixTopNSourceAddress.)
Note that if the value of nlMatrixTopNControlRateBase is equal to nlMatrixTopNHighCapacityPkts, the sort of topN entries is based entirely on nlMatrixTopNHighCapacityPktRate, and not on the value of this object."
"The number of packets seen from the destination host to the source host during this sampling interval, divided by 2^32, truncating fractions (i.e., X DIV 2^32), and counted using the rules for counting the nlMatrixSDPkts object (note that the corresponding nlMatrixSDPkts object selected is the one whose source address is equal to nlMatrixTopNDestAddress and
whose destination address is equal to nlMatrixTopNSourceAddress.)
Note that if the value of nlMatrixTopNControlRateBase is equal to nlMatrixTopNHighCapacityPkts, the sort of topN entries is based entirely on nlMatrixTopNHighCapacityPktRate, and not on the value of this object."
"The number of packets seen from the destination host to the source host during this sampling interval, counted using the rules for counting the nlMatrixSDPkts object (note that the corresponding nlMatrixSDPkts object selected is the one whose source address is equal to nlMatrixTopNDestAddress and
whose destination address is equal to nlMatrixTopNSourceAddress.)
Note that if the value of nlMatrixTopNControlRateBase is equal to nlMatrixTopNHighCapacityPkts, the sort of topN entries is based entirely on nlMatrixTopNHighCapacityPktRate, and not on the value of this object."
"The number of octets seen from the source host to the destination host during this sampling interval, modulo 2^32, counted using the rules for counting the nlMatrixSDOctets object."
"The number of octets seen from the source host to the destination host during this sampling interval, divided by 2^32, truncating fractions (i.e., X DIV 2^32), and counted using the rules for counting the nlMatrixSDOctets object."
"The number of octets seen from the source host to the destination host during this sampling interval, counted using the rules for counting the nlMatrixSDOctets object.
If the value of nlMatrixTopNControlRateBase is nlMatrixTopNHighCapacityOctets, this variable will be used to sort this report."
"The number of octets seen from the destination host to the source host during this sampling interval, modulo 2^32, counted using the rules for counting the nlMatrixSDOctets object (note that the corresponding nlMatrixSDOctets object selected is the one whose source address is equal to nlMatrixTopNDestAddress and
whose destination address is equal to nlMatrixTopNSourceAddress.)
Note that if the value of nlMatrixTopNControlRateBase is equal to nlMatrixTopNHighCapacityOctets, the sort of topN entries is based entirely on nlMatrixTopNHighCapacityOctetRate, and not on the value of this object."
"The number of octets seen from the destination host to the source host during this sampling interval, divided by 2^32, truncating fractions (i.e., X DIV 2^32), and counted using the rules for counting the nlMatrixSDOctets object (note that the corresponding nlMatrixSDOctets object selected is the one whose source address is equal to nlMatrixTopNDestAddress and
whose destination address is equal to nlMatrixTopNSourceAddress.)
Note that if the value of nlMatrixTopNControlRateBase is equal to nlMatrixTopNHighCapacityOctets, the sort of topN entries is based entirely on nlMatrixTopNHighCapacityOctetRate, and not on the value of this object."
"The number of octets seen from the destination host to the source host during this sampling interval, counted using the rules for counting the nlMatrixSDOctets object (note that the corresponding nlMatrixSDOctets object selected is the one whose source address is equal to nlMatrixTopNDestAddress and
whose destination address is equal to nlMatrixTopNSourceAddress.)
Note that if the value of nlMatrixTopNControlRateBase is equal to nlMatrixTopNHighCapacityOctets, the sort of topN entries is based entirely on nlMatrixTopNHighCapacityOctetRate, and not on the value of this object."
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 2 alHostTable."
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 2 alHostEntry.
These objects will be created by the agent for all alHostEntries associated with whichever hlHostControlEntries it deems appropriate.
(i.e., either all alHostHighCapacityEntries associated with a particular hlHostControlEntry will be created, or none of them will be.)
"The number of times the associated alHostInPkts counter has overflowed."
"The number of packets of this protocol type without errors transmitted to this address since it was added to the alHostHighCapacityTable.
Note that this is the number of link layer packets, so if a single network layer packet is fragmented into several link layer frames, this counter is incremented several times."
"The number of times the associated alHostOutPkts counter has overflowed."
"The number of packets of this protocol type without errors transmitted by this address since it was added to the alHostHighCapacityTable.
Note that this is the number of link layer packets, so if a single network layer packet is fragmented into several link layer frames, this counter is incremented several times."
"The number of times the associated alHostInOctets counter has overflowed."
"The number of octets transmitted to this address of this protocol type since it was added to the alHostHighCapacityTable (excluding framing bits but including FCS octets), excluding those octets in packets that contained errors.
Note this doesn't count just those octets in the particular protocol frames, but includes the entire packet that contained the protocol."
"The number of times the associated alHostOutOctets counter has overflowed."
"The number of octets transmitted by this address of this protocol type since it was added to the alHostHighCapacityTable (excluding framing bits but including FCS octets), excluding those octets in packets that contained errors.
Note this doesn't count just those octets in the particular protocol frames, but includes the entire packet that contained the protocol."
High Capacity extensions for the alMatrixSDTable alMatrixSDHighCapacityTable
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 2 alMatrixSDTable."
AlMatrixSDHighCapacityEntry MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 2 alMatrixSDEntry.
These objects will be created by the agent for all alMatrixSDEntries associated with whichever hlMatrixControlEntries it deems appropriate.
(i.e., either all alMatrixSDHighCapacityEntries associated with a particular hlMatrixControlEntry will be created, or none of them will be.)
" INDEX { hlMatrixControlIndex, alMatrixSDTimeMark, protocolDirLocalIndex,
"The number of times the associated alMatrixSDPkts counter has overflowed."
"The number of good packets of this protocol type transmitted from the source address to the destination address since this entry was added to the alMatrixSDHighCapacityTable.
Note that this is the number of link layer packets, so if a single network layer packet is fragmented into several link layer frames, this counter is incremented several times."
"The number of times the associated alMatrixSDOctets counter has overflowed."
"The number of octets in good packets of this protocol type transmitted from the source address to the destination address since this entry was added to the alMatrixSDHighCapacityTable (excluding framing bits but including FCS octets).
Note this doesn't count just those octets in the particular protocol frames, but includes the entire packet that contained the protocol."
SEQUENCE OF AlMatrixDSHighCapacityEntry MAX ACCESS
"Contains the High Capacity RMON extensions to the RMON 2 alMatrixDSTable."
AlMatrixDSHighCapacityEntry MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 2 alMatrixSDTable.
These objects will be created by the agent for all alMatrixDSEntries associated with whichever hlMatrixControlEntries it deems appropriate.
(i.e., either all alMatrixDSHighCapacityEntries associated with a particular hlMatrixControlEntry will be created, or none of them will be.)
"The number of times the associated alMatrixDSPkts counter has overflowed."
"The number of good packets of this protocol type transmitted from the source address to the destination address since this entry was added to the alMatrixDSHighCapacityTable.
Note that this is the number of link layer packets, so if a single network layer packet is fragmented into several link layer frames, this counter is incremented several times."
"The number of times the associated alMatrixDSOctets counter has overflowed."
"The number of octets in good packets of this protocol type transmitted from the source address to the destination address since this entry was added to the alMatrixDSHighCapacityTable (excluding framing bits but including FCS octets).
Note this doesn't count just those octets in the particular protocol frames, but includes the entire packet that contained the protocol."
MAX ACCESS not accessible STATUS
"Contains the High Capacity RMON extensions to the RMON 2
These objects will be created by the agent for all alMatrixTopNEntries associated with whichever alMatrixTopNControlEntries have a alMatrixTopNControlRateBase that specify a high capacity report.
The protocolDirLocalIndex of the network layer protocol of this entry's network address."
This is represented as an octet string with specific semantics and length as identified by the associated alMatrixTopNProtocolDirLocalIndex.
For example, if the alMatrixTopNProtocolDirLocalIndex indicates an encapsulation of ip, this object is encoded as a length octet of 4, followed by the 4 octets of the ip address, in network byte order."
The network layer address of the destination host in this conversation.
This is represented as an octet string with specific semantics and length as identified by the associated alMatrixTopNProtocolDirLocalIndex.
For example, if the alMatrixTopNProtocolDirLocalIndex indicates an encapsulation of ip, this object is encoded as a length octet of 4, followed by the 4 octets of the ip address, in network byte order."
"The number of packets seen of this protocol from the source host to the destination host during this sampling interval, modulo 2^32, counted using the rules for counting the alMatrixSDPkts object."
"The number of packets seen of this protocol from the source host to the destination host during this sampling interval, counted using the rules for counting the alMatrixSDPkts object.
If the value of alMatrixTopNControlRateBase is alMatrixTopNTerminalsPkts, alMatrixTopNAllPkts, alMatrixTopNTerminalsHighCapacityPkts, or alMatrixTopNAllHighCapacityPkts, this variable will be used to sort this report."
"The number of packets seen of this protocol from the destination host to the source host during this sampling interval, modulo 2^32, counted using the rules for counting the alMatrixSDPkts object (note that the corresponding alMatrixSDPkts object selected is the one whose source address is equal to alMatrixTopNDestAddress and whose destination address is equal to alMatrixTopNSourceAddress.)
{ alMatrixTopNHighCapacityEntry 8 } alMatrixTopNHighCapacityReverseOverflowPktRate OBJECT TYPE
"The number of packets seen of this protocol from the destination host to the source host during this sampling interval, counted using the rules for counting the alMatrixSDPkts object (note that the corresponding alMatrixSDPkts object selected is the one whose source address is equal to alMatrixTopNDestAddress and whose destination address is equal to alMatrixTopNSourceAddress.)
} alMatrixTopNHighCapacityBaseOctetRate OBJECT TYPE SYNTAX
"The number of octets seen of this protocol from the source host to the destination host during this sampling interval, modulo 2^32, counted using the rules for counting the alMatrixSDOctets object."
"The number of octets seen of this protocol from the source host to the destination host during this sampling interval, divided by 2^32, truncating fractions (i.e., X DIV 2^32), and counted using the rules for counting the alMatrixSDOctets object."
"The number of octets seen of this protocol from the source host to the destination host during this sampling interval, counted using the rules for counting the alMatrixSDOctets object.
If the value of alMatrixTopNControlRateBase is alMatrixTopNTerminalsOctets, alMatrixTopNAllOctets, alMatrixTopNTerminalsHighCapacityOctets, or alMatrixTopNAllHighCapacityOctets, this variable will be used to sort this report."
"The number of octets seen of this protocol from the destination host to the source host during this sampling interval, modulo 2^32, counted using the rules for counting the alMatrixSDOctets object (note that the corresponding alMatrixSDOctets object selected is the one whose source address is equal to alMatrixTopNDestAddress and whose destination address is equal to alMatrixTopNSourceAddress.)
"The number of octets seen of this protocol from the destination host to the source host during this sampling interval, counted using the rules for counting the alMatrixSDOctets object (note that the corresponding alMatrixSDOctets object selected is the one whose source address is equal to alMatrixTopNDestAddress and whose destination address is equal to alMatrixTopNSourceAddress.)
"Contains the High Capacity RMON extensions to the RMON 2 usrHistoryTable."
"Contains the High Capacity RMON extensions to the RMON 2 usrHistoryEntry.
These objects will be created by the agent for all usrHistoryEntries associated with whichever usrHistoryControlEntries it deems appropriate.
(i.e., either all usrHistoryHighCapacityEntries associated with a particular usrHistoryControlEntry will be created, or none of them will be.)
The absolute value (i.e. unsigned value) of the user specified statistic during the last sampling period, divided by 2^32, truncating fractions (i.e., X DIV 2^32).
The value during the current sampling period is not made available until the period is completed.
To obtain the true value for this sampling interval, the associated instance of usrHistoryValStatus should be checked, and usrHistoryAbsValue adjusted as necessary.
If the MIB instance could not be accessed during the sampling interval, then this object will have a value of zero and the associated instance of usrHistoryValStatus will be set to 'valueNotAvailable(1)'."
MAX ACCESS read only STATUS current DESCRIPTION
"The absolute value (i.e. unsigned value) of the user specified statistic during the last sampling period.
The value during the current sampling period is not made available until the period is completed.
To obtain the true value for this sampling interval, the associated instance of usrHistoryValStatus should be checked, and usrHistoryHighCapacityAbsValue adjusted as necessary.
If the MIB instance could not be accessed during the sampling interval, then this object will have a value of zero and the associated instance of usrHistoryValStatus will be set to 'valueNotAvailable(1)'."
hcRMONCapabilities OBJECT TYPE SYNTAX BITS { mediaIndependentGroup(0), etherStatsHighCapacityGroup(1), etherHistoryHighCapacityGroup(2), hostHighCapacityGroup(3)
, hostTopNHighCapacityGroup(4), matrixHighCapacityGroup(5), captureBufferHighCapacityGroup(6), protocolDistributionHighCapacityGroup(7), nlHostHighCapacityGroup(8), nlMatrixHighCapacityGroup(9), nlMatrixTopNHighCapacityGroup(10)
, alHostHighCapacityGroup(11), alMatrixHighCapacityGroup(12), alMatrixTopNHighCapacityGroup(13), usrHistoryHighCapacityGroup(14) } MAX ACCESS read only STATUS current DESCRIPTION
{ rmonConformance 7 } hcMediaIndependentCompliance MODULE COMPLIANCE STATUS  current DESCRIPTION
"Describes the requirements for conformance to the High Capacity Media Independent Group."
MODULE COMPLIANCE STATUS current DESCRIPTION
"Describes the requirements for conformance to the High Capacity RMON 1 MIB
this module GROUP etherStatsHighCapacityGroup DESCRIPTION
"The etherStatsHighCapacityGroup is optional but requires implementation of the rmonEtherStatsGroup."
"The etherHistoryHighCapacityGroup is optional but requires implementation of the rmonHistoryControlGroup and rmonEthernetHistoryGroup."
The hostHighCapacityGroup is mandatory when the hostTopNHighCapacityGroup is implemented.
This group also requires implementation of the rmonHostGroup.
The hostTopNHighCapacityGroup is optional but requires implementation of the rmonHostTopNGroup."
The matrixHighCapacityGroup is optional but requires implementation of the rmonMatrixGroup."
"The captureBufferHighCapacityGroup is optional but requires implementation of the rmonFilterGroup and rmonPacketCaptureGroup."
MODULE RMON MIB GROUP rmonEtherStatsGroup DESCRIPTION
"The RMON Ethernet Statistics Group is mandatory if the etherStatsHighCapacityGroup is implemented."
The RMON History Control Group is mandatory if the etherHistoryHighCapacityGroup is implemented."
GROUP rmonEthernetHistoryGroup DESCRIPTION "The RMON Ethernet History Group is mandatory if the etherHistoryHighCapacityGroup is implemented."
The RMON Host Group is mandatory if the hostHighCapacityGroup is implemented."
The RMON Host Top N Group is mandatory if the hostTopNHighCapacityGroup is implemented."
GROUP rmonMatrixGroup DESCRIPTION "The RMON Matrix Group is mandatory if the matrixHighCapacityGroup is implemented."
The RMON Filter Group is mandatory when the captureBufferHighCapacityGroup is implemented."
The RMON Packet Capture Group is mandatory when the captureBufferHighCapacityGroup is implemented."
MODULE COMPLIANCE STATUS  current DESCRIPTION
"Describes the requirements for conformance to the High Capacity RMON 2 MIB
this module MANDATORY GROUPS { protocolDistributionHighCapacityGroup, nlHostHighCapacityGroup, nlMatrixHighCapacityGroup, nlMatrixTopNHighCapacityGroup, usrHistoryHighCapacityGroup, hcRMONInformationGroup } MODULE RMON2 MIB
MANDATORY GROUPS { protocolDirectoryGroup, protocolDistributionGroup, addressMapGroup, nlHostGroup, nlMatrixGroup, usrHistoryGroup, probeInformationGroup } GROUP   rmon1EnhancementGroup DESCRIPTION "
MODULE COMPLIANCE STATUS  current DESCRIPTION
"Describes the requirements for conformance to the High Capacity RMON 2 MIB with Application Layer Enhancements."
MODULE    this module MANDATORY GROUPS { protocolDistributionHighCapacityGroup, nlHostHighCapacityGroup, nlMatrixHighCapacityGroup, nlMatrixTopNHighCapacityGroup, alHostHighCapacityGroup, alMatrixHighCapacityGroup, alMatrixTopNHighCapacityGroup, usrHistoryHighCapacityGroup, hcRMONInformationGroup } MODULE RMON2
MIB MANDATORY GROUPS { protocolDirectoryGroup, protocolDistributionGroup, addressMapGroup, nlHostGroup, nlMatrixGroup, alHostGroup, alMatrixGroup, usrHistoryGroup, probeInformationGroup } GROUP   rmon1EnhancementGroup DESCRIPTION "
"Collects utilization statistics for any type of network."
"Collects utilization statistics for ethernet networks."
"Collects utilization statistics for ethernet networks."
"Prepares sorted reports of utilization and error statistics per host."
matrixSDHighCapacityOctets, matrixDSHighCapacityOverflowPkts, matrixDSHighCapacityPkts, matrixDSHighCapacityOverflowOctets, matrixDSHighCapacityOctets } STATUS  current DESCRIPTION
"Collects utilization statistics per conversation."
{ hcRmonMIBGroups 6 } captureBufferHighCapacityGroup OBJECT GROUP OBJECTS { captureBufferPacketHighCapacityTime } STATUS  current DESCRIPTION
"Provides finer granularity time stamps."
{ hcRmonMIBGroups 7 } protocolDistributionHighCapacityGroup OBJECT GROUP OBJECTS { protocolDistStatsHighCapacityOverflowPkts, protocolDistStatsHighCapacityPkts, protocolDistStatsHighCapacityOverflowOctets,
protocolDistStatsHighCapacityOctets } STATUS  current DESCRIPTION
"Collects the relative amounts of octets and packets for the different protocols detected on a network segment."
"Counts the amount of traffic sent from and to each network address discovered by the probe."
"Counts the amount of traffic sent between each pair of network addresses discovered by the probe."
nlMatrixTopNHighCapacityOctetRate, nlMatrixTopNHighCapacityReverseBaseOctetRate, nlMatrixTopNHighCapacityReverseOverflowOctetRate, nlMatrixTopNHighCapacityReverseOctetRate } STATUS  current DESCRIPTION
"Prepares sorted reports of the amount of traffic sent between each pair of network addresses discovered by the probe."
"Counts the amount of traffic, by protocol, sent from and to each network address discovered by the probe."
"Counts the amount of traffic, by protocol, sent between each pair of network addresses discovered by the probe."
, alMatrixTopNHighCapacityOverflowOctetRate, alMatrixTopNHighCapacityOctetRate, alMatrixTopNHighCapacityReverseBaseOctetRate, alMatrixTopNHighCapacityReverseOverflowOctetRate, alMatrixTopNHighCapacityReverseOctetRate } STATUS  current DESCRIPTION
"Prepares sorted reports of the amount of traffic per protocol sent between each pair of network addresses discovered by the probe."
"Provides user defined collection of historical information from MIB objects on the probe with scalability to statistics from high capacity networks."
An indication of the high capacity RMON groups supported on at least one interface by this probe."
In order to implement this MIB, a probe must capture all packets on the locally attached network, including packets between third parties.
These packets are analyzed to collect network addresses, protocol usage information, and conversation statistics.
Data of this nature may be considered sensitive in some environments.
In such environments the administrator may wish to restrict SNMP access to the probe.
A probe implementing this MIB is likely to also implement RMON [RFC 2819], which includes functions for returning the contents of captured packets, potentially including sensitive user data or passwords.
It is recommended that SNMP access to these functions be restricted.
There are a number of management objects defined in this MIB that have a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
by itself is not a secure environment.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB.
It is recommended that the implementers consider the security features as provided by the SNMPv3 framework.
Specifically, the use of the User based Security Model RFC 2574
[RFC2574] and the View  based Access Control Model RFC 2575
It is then a customer/user responsibility to ensure that the SNMP entity giving access to an instance of this MIB, is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
The IETF takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent
to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights.
Information on the IETF's procedures with respect to rights in standards track and standards related documentation can be found in BCP 11.
Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification can be obtained from the IETF Secretariat.
The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to practice this standard.
Please address the information to the IETF Executive Director.
