- title: __initial_text__
  contents:
  - '                         Physical Topology MIB

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in the Internet community.\n   In\
    \ particular, it describes managed objects used for managing\n   physical topology\
    \ identification and discovery.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1 The SNMP Network Management Framework ............................2\n\
    \   2 Overview .........................................................3\n  \
    \ 2.1 Terms ..........................................................3\n   2.2\
    \ Design Goals ...................................................5\n   3 Topology\
    \ Framework ...............................................6\n   3.1 Devices and\
    \ Topology Agents ....................................6\n   3.2 Topology Mechanisms\
    \ ............................................7\n   3.3 Future Considerations\
    \ ..........................................7\n   4 Physical Topology MIB ............................................7\n\
    \   4.1 Persistent Identifiers .........................................8\n  \
    \ 4.2 Relationship to Entity MIB .....................................8\n   4.3\
    \ Relationship to Interfaces MIB .................................9\n   4.4 Relationship\
    \ to RMON-2 MIB .....................................9\n   4.5 Relationship to\
    \ Bridge MIB .....................................9\n   4.6 Relationship to Repeater\
    \ MIB ...................................9\n   4.7 MIB Structure .................................................10\n\
    \   4.7.1 ptopoData Group .............................................10\n  \
    \ 4.7.2 ptopoGeneral Group ..........................................10\n   4.7.3\
    \ ptopoConfig Group ...........................................10\n   4.8 Physical\
    \ Topology MIB Definitions .............................10\n   5 Intellectual\
    \ Property ...........................................27\n   6 Acknowledgements\
    \ ................................................28\n   7 References ......................................................28\n\
    \   8 Security Considerations .........................................30\n  \
    \ 9 Authors' Addresses ..............................................31\n   10\
    \ Full Copyright Statement .......................................32\n"
- title: 1.  The SNMP Network Management Framework
  contents:
  - "1.  The SNMP Network Management Framework\n   The SNMP Management Framework presently\
    \ consists of five major\n   components:\n        o   An overall architecture,\
    \ described in RFC 2571 [RFC2571].\n        o   Mechanisms for describing and\
    \ naming objects and events for\n            the purpose of management.  The first\
    \ version of this\n            Structure of Management Information (SMI) is called\
    \ SMIv1\n            and described in STD 16, RFC 1155 [RFC1155], STD 16, RFC\n\
    \            1212 [RFC1212] and RFC 1215 [RFC1215].  The second version,\n   \
    \         called SMIv2, is described in STD 58, RFC 2578 [RFC2578],\n        \
    \    STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580 [RFC2580].\n        o   Message\
    \ protocols for transferring management information.\n            The first version\
    \ of the SNMP message protocol is called\n            SNMPv1 and described in\
    \ STD 15, RFC 1157 [RFC1157].  A\n            second version of the SNMP message\
    \ protocol, which is not an\n            Internet standards track protocol, is\
    \ called SNMPv2c and\n            described in RFC 1901 [RFC1901] and RFC 1906\
    \ [RFC1906].  The\n            third version of the message protocol is called\
    \ SNMPv3 and\n            described in RFC 1906 [RFC1906], RFC 2572 [RFC2572]\
    \ and RFC\n            2574 [RFC2574].\n        o   Protocol operations for accessing\
    \ management information.\n            The first set of protocol operations and\
    \ associated PDU\n            formats is described in STD 15, RFC 1157 [RFC1157].\
    \  A\n            second set of protocol operations and associated PDU formats\n\
    \            is described in RFC 1905 [RFC1905].\n        o   A set of fundamental\
    \ applications described in RFC 2573\n            [RFC2573] and the view-based\
    \ access control mechanism\n            described in RFC 2575 [RFC2575].\n   A\
    \ more detailed introduction to the current SNMP Management Framework\n   can\
    \ be found in RFC 2570 [RFC2570].\n   Managed objects are accessed via a virtual\
    \ information store, termed\n   the Management Information Base or MIB.  Objects\
    \ in the MIB are\n   defined using the mechanisms defined in the SMI.\n   This\
    \ memo specifies a MIB module that is compliant to the SMIv2.  A\n   MIB conforming\
    \ to the SMIv1 can be produced through the appropriate\n   translations.  The\
    \ resulting translated MIB must be semantically\n   equivalent, except where objects\
    \ or events are omitted because no\n   translation is possible (use of Counter64).\
    \  Some machine readable\n   information in SMIv2 will be converted into textual\
    \ descriptions in\n   SMIv1 during the translation process.  However, this loss\
    \ of machine\n   readable information is not considered to change the semantics\
    \ of the\n   MIB.\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   There is a need for a standardized means of representing the\
    \ physical\n   network connections pertaining to a given management domain.  The\n\
    \   Physical Topology MIB (PTOPO-MIB) provides a standard way to identify\n  \
    \ connections between network ports and to discover network addresses\n   of SNMP\
    \ agents containing management information associated with each\n   port.\n  \
    \ A topology mechanism is used to discover the information required by\n   the\
    \ PTOPO-MIB.  There is a need for a standardized topology mechanism\n   to increase\
    \ the likelihood of multi-vendor interoperability of such\n   physical topology\
    \ management information.  The PTOPO-MIB does not,\n   however, specify or restrict\
    \ the discovery mechanism(s) used for an\n   implementation of the PTOPO-MIB.\
    \  Topology mechanisms exist for\n   certain media types (such as FDDI) and proprietary\
    \ mechanisms exist\n   for other media such as shared media Ethernet, switched\
    \ Ethernet, and\n   Token Ring.  Rather than specifying mechanisms for each type\
    \ of\n   technology, the PTOPO-MIB allows co-existence of multiple topology\n\
    \   mechanisms.  The required objects of the PTOPO-MIB define the core\n   requirements\
    \ for any topology mechanism.\n   The scope of the physical topology (PTOPO) mechanism\
    \ is the\n   identification of connections between two network ports.  Network\n\
    \   addresses of SNMP agents containing management information associated\n  \
    \ with each port can also be identified.\n"
- title: 2.1.  Terms
  contents:
  - "2.1.  Terms\n   Some terms are used throughout this document:\n   Physical Topology\n\
    \         Physical topology represents the topology model for layer 1 of\n   \
    \      the OSI stack - the physical layer.  Physical topology consists\n     \
    \    of identifying the devices on the network and how they are\n         physically\
    \ interconnected.  By definition of this document,\n         physical topology\
    \ does not imply a physical relationship\n         between ports on the same device.\
    \  Other means exist for\n         determining these relationships (e.g., Entity\
    \ MIB [RFC2737])\n         exist for determining these relationships.  Note that\
    \ physical\n         topology is independent of logical topology, which associates\n\
    \         ports based on higher layer attributes, such as network layer\n    \
    \     address.\n   Chassis\n         A chassis is a physical component which contains\
    \ other physical\n         components.  It is identified by an entPhysicalEntry\
    \ with an\n         entPhysicalClass value of 'chassis(3)' and an\n         entPhysicalContainedIn\
    \ value of zero.  A chassis identifier\n         consists of a globally unique\
    \ SnmpAdminString.\n   Local Chassis\n         The particular chassis containing\
    \ the SNMP agent implementing\n         the PTOPO MIB.\n   Port\n         A port\
    \ is a physical component which can be connected to\n         another port through\
    \ some medium.  It is identified by an\n         entPhysicalEntry with an entPhysicalClass\
    \ value of 'port(10)'.\n         A port identifier consists of an SnmpAdminString\
    \ which must be\n         unique within the context of the chassis which contains\
    \ the\n         port.\n   Connection Endpoint\n         A connection endpoint\
    \ consists of a physical port, which is\n         contained within a single physical\
    \ chassis.\n   Connection Endpoint Identifier\n         A connection endpoint\
    \ is identified by a globally unique\n         chassis identifier and a port identifier\
    \ unique within the\n         associated chassis.\n   Connection\n         A connection\
    \ consists of two physical ports, and the attached\n         physical medium,\
    \ configured for the purpose of transferring\n         network traffic between\
    \ the ports.  A connection is identified\n         by its endpoint identifiers.\n\
    \   Non-local Connection\n         A connection for which neither endpoint is\
    \ located on the local\n         chassis.\n   Cloud\n         A cloud identifies\
    \ a portion of the topology for which\n         insufficient information is known\
    \ to completely infer the\n         interconnection of devices that make up that\
    \ portion of the\n         topology.\n"
- title: 2.2.  Design Goals
  contents:
  - "2.2.  Design Goals\n   Several factors influenced the design of this physical\
    \ topology\n   function:\n       - Simplicity\n         The physical topology\
    \ discovery function should be as simple as\n         possible, exposing only\
    \ the information needed to identify\n         connection endpoints and the SNMP\
    \ agent(s) associated with each\n         connection endpoint.\n       - Completeness\n\
    \         At least one standard discovery protocol capable of supporting\n   \
    \      the standard physical topology MIB must be defined.  Multi-\n         vendor\
    \ interoperability will not be achievable unless a simple\n         and extensible\
    \ discovery protocol is available.  However, the\n         PTOPO MIB should not\
    \ specify or restrict the topology discovery\n         mechanisms an agent can\
    \ use.\n       - No Functional Overlap\n         Existing standard MIBs should\
    \ be utilized whenever possible.\n         Physical topology information is tightly\
    \ coupled to\n         functionality found in the Interfaces MIB [RFC2233] and\
    \ Entity\n         MIB [RFC2737].  New physical topology MIB objects should not\n\
    \         duplicate these MIBs.\n       - Identifier Stability\n         Connection\
    \ endpoint identifiers must be persistent (i.e. stable\n         across device\
    \ reboots).  Dynamic primary key objects like\n         ifIndex and entPhysicalIndex\
    \ are not suitable for table indices\n         in a physical topology MIB that\
    \ is replicated and distributed\n         throughout a managed system.\n     \
    \  - Identifier Flexibility\n         Persistent string-based component identifiers\
    \ should be\n         supported from many sources.  Chassis identifiers may be\
    \ found\n         in the Entity MIB [RFC2737], and port identifiers may be found\n\
    \         in the Interfaces MIB [RFC2233] or Entity MIB [RFC2737].\n       - Partial\
    \ Topology Support\n         Physical topology data for remote components may\
    \ only be\n         partially available to an agent.  An enumerated INTEGER\n\
    \         hierarchy of component identifier types allows for incomplete\n    \
    \     physical connection identifier information to be substituted\n         with\
    \ secondary information such as unicast source MAC address\n         or network\
    \ address associated with a particular port.  A PTOPO\n         Agent maintains\
    \ information derived from the 'best' source of\n         information for each\
    \ connection.  If a 'better' identifier\n         source is detected, the PTOPO\
    \ entries are updated accordingly.\n         It is an implementation specific\
    \ matter whether a PTOPO agent\n         replaces 'old' entries or retains them,\
    \ however an agent must\n         remove information known to be incorrect.\n\
    \       - Low Polling Impact\n         Physical topology polling should be minimized\
    \ through\n         techniques such as TimeFiltered data tables (from RMON-2\n\
    \         [RFC2021]), and last-change notifications.\n"
- title: 3.  Topology Framework
  contents:
  - "3.  Topology Framework\n   This section describes the physical topology framework\
    \ in detail.\n"
- title: 3.1.  Devices and Topology Agents
  contents:
  - "3.1.  Devices and Topology Agents\n   The network devices, along with their physical\
    \ connectivity, make up\n   the physical topology.  Some of these devices (but\
    \ maybe not all)\n   provide management agents that report their local physical\
    \ topology\n   information to a manager via the physical topology MIB.\n   These\
    \ devices include communication infrastructure devices, such as\n   hubs, switches,\
    \ and routers, as well as 'leaf' devices such as\n   workstations, printers, and\
    \ servers.  Generally, user data passes\n   through infrastructure devices while\
    \ leaf devices are sources and\n   sinks of data.  Both types of devices may implement\
    \ the physical\n   topology MIB, although implementation within leaf devices is\
    \ much\n   less critical.\n   Each managed device collects physical topology information\
    \ from the\n   network, based on the topology mechanism(s) it is configured to\
    \ use.\n   The data represents this agent's local view of the physical network.\n\
    \   Part of the topology data collected must include the identification\n   of\
    \ other local agents which may contain additional topology\n   information.  The\
    \ definition of 'local' varies based on the topology\n   mechanism or mechanisms\
    \ being used.\n"
- title: 3.2.  Topology Mechanisms
  contents:
  - "3.2.  Topology Mechanisms\n   A topology mechanism is a means, possibly requiring\
    \ some sort of\n   protocol, by which devices determine topology information.\
    \  The\n   topology mechanism must provide sufficient information to populate\n\
    \   the MIB described later in this document.\n   Topology mechanisms can be active\
    \ or passive.  Active mechanisms\n   require a device to send and receive topology\
    \ protocol packets.\n   These packets provide the device ID of the source of the\
    \ packet and\n   may also indicate out which port the packet was transmitted.\
    \  When\n   receiving these packets, devices typically are required to identify\n\
    \   on which port that packet was received.\n   Passive mechanisms take advantage\
    \ of data on the network to populate\n   the topology MIB.  By maintaining a list\
    \ of device identifiers seen\n   on each port of all devices in a network, it\
    \ is possible to populate\n   the PTOPO-MIB.\n   Many instances of a particular\
    \ topology mechanism may be in use on a\n   given network, and many different\
    \ mechanisms may be employed.  In\n   some cases, multiple mechanisms may overlap\
    \ across part of the\n   physical topology with individual ports supporting more\
    \ than one\n   topology mechanism.  In general, this simply allows the port to\n\
    \   collect more robust topology information.  Agents may need to be\n   configured\
    \ so that they know which mechanism(s) are in use on any\n   given portion of\
    \ the network.\n   Most topology mechanisms need to be bounded to a subset of\
    \ the\n   network to contain their impact on the network and limit the size of\n\
    \   topology tables maintained by the agent.  Topology mechanisms are\n   often\
    \ naturally bounded by the media on which they run (e.g. FDDI\n   topology mechanism)\
    \ or by routers in the network that intentionally\n   block the mechanism from\
    \ crossing into other parts of the network.\n"
- title: 3.3.  Future Considerations
  contents:
  - "3.3.  Future Considerations\n   While the framework presented here is focused\
    \ on physical topology,\n   it may well be that the topology mechanisms and MIB\
    \ described could\n   be extended to include logical topology information as well.\
    \  That is\n   not a focus of this memo.\n"
- title: 4.  Physical Topology MIB
  contents:
  - "4.  Physical Topology MIB\n   This section describes and defines the Physical\
    \ Topology MIB.\n"
- title: 4.1.  Persistent Identifiers
  contents:
  - "4.1.  Persistent Identifiers\n   The PTOPO MIB utilizes non-volatile identifiers\
    \ to distinguish\n   individual chassis and port components.  These identifiers\
    \ are\n   associated with external objects in order to relate topology\n   information\
    \ to the existing managed objects.\n   In particular, an object from the Entity\
    \ MIB [RFC2737] or Interfaces\n   MIB [RFC2233] can be used as the 'reference-point'\
    \ for a connection\n   component identifier.\n   The Physical Topology MIB uses\
    \ two identifier types pertaining to the\n   PTOPO MIB:\n       - globally unique\
    \ chassis identifiers.\n       - port identifiers; unique only within the chassis\
    \ which contains\n         the port.\n   Identifiers are stored as OCTET STRINGs,\
    \ which are limited to 32\n   bytes in length, This supports flexible naming conventions\
    \ and\n   constrains the non-volatile storage requirements for an agent.\n"
- title: 4.2.  Relationship to Entity MIB
  contents:
  - "4.2.  Relationship to Entity MIB\n   The first version of the Entity MIB [RFC2037]\
    \ allows the physical\n   component inventory and hierarchy to be identified.\
    \  However, this\n   MIB does not provide persistent component identifiers, which\
    \ are\n   required for the PTOPO MIB.  Therefore, version 2 of the Entity MIB\n\
    \   [RFC2737] is required to support that feature.  Specifically, the\n   entPhysicalAlias\
    \ object is utilized as a persistent chassis\n   identifier.\n   For agents implementing\
    \ the PTOPO MIB, this new object must be used\n   to represent the chassis identifier.\
    \  Port identifiers can be based\n   on the entPhysicalAlias object associated\
    \ with the port, but only if\n   the port is not represented as an interface in\
    \ the ifXTable.\n   Implementation of the entPhysicalGroup [RFC2737] and the\n\
    \   entPhysicalAlias object [RFC2737] are mandatory for SNMP agents which\n  \
    \ implement the PTOPO MIB.  No other objects must be implemented from\n   these\
    \ MIBs to support the physical topology function.\n"
- title: 4.3.  Relationship to Interfaces MIB
  contents:
  - "4.3.  Relationship to Interfaces MIB\n   The PTOPO MIB requires a persistent\
    \ identifier for each port.  The\n   Interfaces MIB [RFC2233] provides a standard\
    \ mechanism for managing\n   network interfaces.  Unfortunately, not all ports\
    \ which may be\n   represented in the PTOPO MIB are also represented in the Interfaces\n\
    \   MIB (e.g., repeater ports).\n   For agents which implement the PTOPO MIB,\
    \ for each port also\n   represented in the Interfaces MIB, the agent must use\
    \ the associated\n   ifAlias value for the port identifier.  For each port not\
    \ represented\n   in the Interfaces MIB, the associated entPhysicalAlias value\
    \ must be\n   used for the port identifier.  Note that the PTOPO MIB requires\
    \ only\n   minimal support from the Interfaces MIB.  Specifically, the '\n   ifGeneralInformationGroup'\
    \ level of conformance must be provided for\n   each port also identified in the\
    \ PTOPO MIB.  The agent may choose to\n   support these objects with read-only\
    \ access, as specified in the\n   conformance section of the Interfaces MIB.\n"
- title: 4.4.  Relationship to RMON-2 MIB
  contents:
  - "4.4.  Relationship to RMON-2 MIB\n   The RMON-2 MIB [RFC2021] contains address\
    \ mapping information which\n   can be integrated with physical topology information.\
    \  The physical\n   ports identified in a physical topology MIB can be related\
    \ to the MAC\n   and network layer addresses found in the addressMapTable.\n"
- title: 4.5.  Relationship to Bridge MIB
  contents:
  - "4.5.  Relationship to Bridge MIB\n   The Bridge MIB [RFC1493] contains information\
    \ which may relate to\n   physical ports represented in the ptopoConnTable.  Entries\
    \ in the\n   dot1dBasePortTable and dot1dStpPortTable can by related to physical\n\
    \   ports represented in the PTOPO MIB.  Also, bridge port MAC addresses\n   may\
    \ be used as chassis and port identifiers in some situations.\n"
- title: 4.6.  Relationship to Repeater MIB
  contents:
  - "4.6.  Relationship to Repeater MIB\n   The Repeater MIB [RFC2108] contains information\
    \ which may relate to\n   physical ports represented in the PTOPO MIB.  Entries\
    \ in the\n   rptrPortTable and rptrMonitorPortTable can by related to physical\n\
    \   ports represented in the ptopoConnTable.  Entries in the\n   rptrInfoTable\
    \ and rptrMonTable can be related to repeater backplanes\n   possibly represented\
    \ in the ptopoConnTable.\n"
- title: 4.7.  MIB Structure
  contents:
  - "4.7.  MIB Structure\n   The PTOPO MIB contains three MIB object groups:\n   \
    \    - ptopoData\n         Exposes physical topology data learned from discovery\
    \ protocols\n         and/or manual configuration.\n       - ptopoGeneral\n  \
    \       Contains general information regarding PTOPO MIB status.\n       - ptopoConfig\n\
    \         Contains configuration variables for the PTOPO MIB agent\n         function.\n"
- title: 4.7.1.  ptopoData Group
  contents:
  - "4.7.1.  ptopoData Group\n   This group contains a single table to identity physical\
    \ topology\n   data.\n   The ptopoConnTable contains information about the connections\
    \ learned\n   or configured on behalf of the PTOPO MIB SNMP Agent.\n"
- title: 4.7.2.  ptopoGeneral Group
  contents:
  - "4.7.2.  ptopoGeneral Group\n   This group contains some scalar objects to report\
    \ the status of the\n   PTOPO MIB information currently known to the SNMP Agent.\
    \  The global\n   last change time, and table add and delete counters allow an\
    \ NMS to\n   set threshold alarms to trigger PTOPO polling.\n"
- title: 4.7.3.  ptopoConfig Group
  contents:
  - "4.7.3.  ptopoConfig Group\n   This group contains tables to configure the behavior\
    \ of the physical\n   topology function.  The transmission of ptopoLastChange\
    \ notifications\n   can be configured using the ptopoConfigTrapInterval scalar\
    \ MIB\n   object.\n"
- title: 4.8.  Physical Topology MIB Definitions
  contents:
  - '4.8.  Physical Topology MIB Definitions

    '
- title: PTOPO-MIB DEFINITIONS ::= BEGIN
  contents:
  - 'PTOPO-MIB DEFINITIONS ::= BEGIN

    '
- title: IMPORTS
  contents:
  - "IMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,\n    Integer32,\
    \ Counter32, mib-2\n        FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION, AutonomousType,\
    \ RowStatus, TimeStamp, TruthValue\n        FROM SNMPv2-TC\n    MODULE-COMPLIANCE,\
    \ OBJECT-GROUP, NOTIFICATION-GROUP\n        FROM SNMPv2-CONF\n    TimeFilter\n\
    \        FROM RMON2-MIB\n    PhysicalIndex\n        FROM ENTITY-MIB\n    AddressFamilyNumbers\n\
    \        FROM IANA-ADDRESS-FAMILY-NUMBERS-MIB;\n"
- title: ptopoMIB MODULE-IDENTITY
  contents:
  - "ptopoMIB MODULE-IDENTITY\n    LAST-UPDATED \"200009210000Z\"\n    ORGANIZATION\
    \ \"IETF; PTOPOMIB Working Group\"\n    CONTACT-INFO\n       \"PTOPOMIB WG Discussion:\n\
    \        ptopo@3com.com\n        Subscription:\n        majordomo@3com.com\n \
    \         msg body: [un]subscribe ptopomib\n        Andy Bierman\n        Cisco\
    \ Systems Inc.\n        170 West Tasman Drive\n        San Jose, CA 95134\n  \
    \      408-527-3711\n        abierman@cisco.com\n        Kendall S. Jones\n  \
    \      Nortel Networks\n        4401 Great America Parkway\n        Santa Clara,\
    \ CA 95054\n        408-495-7356\n        kejones@nortelnetworks.com\"\n    DESCRIPTION\n\
    \            \"The MIB module for physical topology information.\"\n    REVISION\
    \        \"200009210000Z\"\n    DESCRIPTION\n            \"Initial Version of\
    \ the Physical Topology MIB.  This version\n            published as RFC 2922.\"\
    \n    ::= { mib-2 79 }\n"
- title: ptopoMIBObjects   OBJECT IDENTIFIER ::= { ptopoMIB 1 }
  contents:
  - 'ptopoMIBObjects   OBJECT IDENTIFIER ::= { ptopoMIB 1 }

    '
- title: -- MIB groups
  contents:
  - '-- MIB groups

    '
- title: ptopoData         OBJECT IDENTIFIER ::= { ptopoMIBObjects 1 }
  contents:
  - 'ptopoData         OBJECT IDENTIFIER ::= { ptopoMIBObjects 1 }

    '
- title: ptopoGeneral      OBJECT IDENTIFIER ::= { ptopoMIBObjects 2 }
  contents:
  - 'ptopoGeneral      OBJECT IDENTIFIER ::= { ptopoMIBObjects 2 }

    '
- title: ptopoConfig       OBJECT IDENTIFIER ::= { ptopoMIBObjects 3 }
  contents:
  - 'ptopoConfig       OBJECT IDENTIFIER ::= { ptopoMIBObjects 3 }

    '
- title: -- textual conventions
  contents:
  - '-- textual conventions

    '
- title: PtopoGenAddr ::= TEXTUAL-CONVENTION
  contents:
  - "PtopoGenAddr ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n\
    \            \"The value of an address.\"\n    SYNTAX      OCTET STRING (SIZE\
    \ (0..20))\n"
- title: PtopoChassisIdType ::= TEXTUAL-CONVENTION
  contents:
  - "PtopoChassisIdType ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n\
    \            \"This TC describes the source of a chassis identifier.\n       \
    \     The enumeration 'chasIdEntPhysicalAlias(1)' represents a\n            chassis\
    \ identifier based on the value of entPhysicalAlias\n            for a chassis\
    \ component (i.e., an entPhysicalClass value of\n            'chassis(3)').\n\
    \            The enumeration 'chasIdIfAlias(2)' represents a chassis\n       \
    \     identifier based on the value of ifAlias for an interface\n            on\
    \ the containing chassis.\n            The enumeration 'chasIdPortEntPhysicalAlias(3)'\
    \ represents\n            a chassis identifier based on the value of entPhysicalAlias\n\
    \            for a port or backplane component (i.e., entPhysicalClass\n     \
    \       value of 'port(10)' or 'backplane(4)'), within the\n            containing\
    \ chassis.\n            The enumeration 'chasIdMacAddress(4)' represents a chassis\n\
    \            identifier based on the value of a unicast source MAC\n         \
    \   address (encoded in network byte order and IEEE 802.3\n            canonical\
    \ bit order), of a port on the containing chassis.\n            The enumeration\
    \ 'chasIdPtopoGenAddr(5)' represents a\n            chassis identifier based on\
    \ a network address, associated\n            with a particular chassis.  The encoded\
    \ address is actually\n            composed of two fields.  The first field is\
    \ a single octet,\n            representing the IANA AddressFamilyNumbers value\
    \ for the\n            specific address type, and the second field is the\n  \
    \          PtopoGenAddr address value.\"\n    SYNTAX      INTEGER {\n        \
    \    chasIdEntPhysicalAlias(1),\n            chasIdIfAlias(2),\n            chasIdPortEntPhysicalAlias(3),\n\
    \            chasIdMacAddress(4),\n            chasIdPtopoGenAddr(5)\n    }\n"
- title: PtopoChassisId ::= TEXTUAL-CONVENTION
  contents:
  - "PtopoChassisId ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n\
    \            \"This TC describes the format of a chassis identifier\n        \
    \    string.  Objects of this type are always used with an\n            associated\
    \ PtopoChassisIdType object, which identifies the\n            format of the particular\
    \ PtopoChassisId object instance.\n            If the associated PtopoChassisIdType\
    \ object has a value of\n            'chasIdEntPhysicalAlias(1)', then the octet\
    \ string\n            identifies a particular instance of the entPhysicalAlias\n\
    \            object for a chassis component (i.e., an entPhysicalClass\n     \
    \       value of 'chassis(3)').\n            If the associated PtopoChassisIdType\
    \ object has a value of\n            'chasIdIfAlias(2)', then the octet string\
    \ identifies a\n            particular instance of the ifAlias object for an interface\n\
    \            on the containing chassis.\n            If the associated PtopoChassisIdType\
    \ object has a value of\n            'chasIdPortEntPhysicalAlias(3)', then the\
    \ octet string\n            identifies a particular instance of the entPhysicalAlias\n\
    \            object for a port or backplane component within the\n           \
    \ containing chassis.\n            If the associated PtopoChassisIdType object\
    \ has a value of\n            'chasIdMacAddress(4)', then this string identifies\
    \ a\n            particular unicast source MAC address (encoded in network\n \
    \           byte order and IEEE 802.3 canonical bit order), of a port on\n   \
    \         the containing chassis.\n            If the associated PtopoChassisIdType\
    \ object has a value of\n            'chasIdPtopoGenAddr(5)', then this string\
    \ identifies a\n            particular network address, encoded in network byte\
    \ order,\n            associated with one or more ports on the containing chassis.\n\
    \            The first octet contains the IANA Address Family Numbers\n      \
    \      enumeration value for the specific address type, and octets\n         \
    \   2 through N contain the PtopoGenAddr address value in\n            network\
    \ byte order.\"\n    SYNTAX      OCTET STRING (SIZE (1..32))\n"
- title: PtopoPortIdType ::= TEXTUAL-CONVENTION
  contents:
  - "PtopoPortIdType ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n\
    \            \"This TC describes the source of a particular type of port\n   \
    \         identifier used in the PTOPO MIB.\n            The enumeration 'portIdIfAlias(1)'\
    \ represents a port\n            identifier based on the ifAlias MIB object.\n\
    \            The enumeration 'portIdPortEntPhysicalAlias(2)' represents a\n  \
    \          port identifier based on the value of entPhysicalAlias for a\n    \
    \        port or backplane component (i.e., entPhysicalClass value of\n      \
    \      'port(10)' or 'backplane(4)'), within the containing\n            chassis.\n\
    \            The enumeration 'portIdMacAddr(3)' represents a port\n          \
    \  identifier based on a unicast source MAC address, which has\n            been\
    \ detected by the agent and associated with a particular\n            port.\n\
    \            The enumeration 'portIdPtopoGenAddr(4)' represents a port\n     \
    \       identifier based on a network address, detected by the agent\n       \
    \     and associated with a particular port.\"\n    SYNTAX      INTEGER {\n  \
    \          portIdIfAlias(1),\n            portIdEntPhysicalAlias(2),\n       \
    \     portIdMacAddr(3),\n            portIdPtopoGenAddr(4)\n    }\n"
- title: PtopoPortId ::= TEXTUAL-CONVENTION
  contents:
  - "PtopoPortId ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n\
    \            \"This TC describes the format of a port identifier string.\n   \
    \         Objects of this type are always used with an associated\n          \
    \  PtopoPortIdType object, which identifies the format of the\n            particular\
    \ PtopoPortId object instance.\n            If the associated PtopoPortIdType\
    \ object has a value of\n            'portIdIfAlias(1)', then the octet string\
    \ identifies a\n            particular instance of the ifAlias object.\n     \
    \       If the associated PtopoPortIdType object has a value of\n            'portIdEntPhysicalAlias(2)',\
    \ then the octet string\n            identifies a particular instance of the entPhysicalAlias\n\
    \            object for a port component (i.e., entPhysicalClass value of\n  \
    \          'port(10)').\n            If the associated PtopoPortIdType object\
    \ has a value of\n            'portIdMacAddr(3)', then this string identifies\
    \ a particular\n            unicast source MAC address associated with the port.\n\
    \            If the associated PtopoPortIdType object has a value of\n       \
    \     'portIdPtopoGenAddr(4)', then this string identifies a\n            network\
    \ address associated with the port.  The first octet\n            contains the\
    \ IANA AddressFamilyNumbers enumeration value for\n            the specific address\
    \ type, and octets 2 through N contain\n            the PtopoGenAddr address value\
    \ in network byte order.\"\n    SYNTAX      OCTET STRING (SIZE (1..32))\n"
- title: PtopoAddrSeenState ::= TEXTUAL-CONVENTION
  contents:
  - "PtopoAddrSeenState ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n\
    \            \"This TC describes the state of address detection for a\n      \
    \      particular type of port identifier used in the PTOPO MIB.\n           \
    \ The enumeration 'notUsed(1)' represents an entry for which\n            the\
    \ particular MIB object is not applicable to the remote\n            connection\
    \ endpoint,\n            The enumeration 'unknown(2)' represents an entry for\
    \ which\n            the particular address collection state is not known.\n \
    \           The enumeration 'oneAddr(3)'  represents an entry for which\n    \
    \        exactly one source address (of the type indicated by the\n          \
    \  particular MIB object), has been detected.\n            The enumeration 'multiAddr(4)'\
    \  represents an entry for\n            which more than one source address (of\
    \ the type indicated by\n            the particular MIB object), has been detected.\n\
    \            An agent is expected to set the initial state of the\n          \
    \  PtopoAddrSeenState to 'notUsed(1)' or 'unknown(2)'.\n            Note that\
    \ the PTOPO MIB does not restrict or specify the\n            means in which the\
    \ PtopoAddrSeenState is known to an agent.\n            In particular, an agent\
    \ may detect this information through\n            configuration data, or some\
    \ means other than directly\n            monitoring all port traffic.\"\n    SYNTAX\
    \      INTEGER {\n            notUsed(1),\n            unknown(2),\n         \
    \   oneAddr(3),\n            multiAddr(4)\n    }\n"
- title: --  ***********************************************************
  contents:
  - '--  ***********************************************************

    '
- title: --
  contents:
  - '--

    '
- title: --           P T O P O    D A T A     G R O U P
  contents:
  - '--           P T O P O    D A T A     G R O U P

    '
- title: --
  contents:
  - '--

    '
- title: --  ***********************************************************
  contents:
  - '--  ***********************************************************

    '
- title: -- Connection Table
  contents:
  - '-- Connection Table

    '
- title: ptopoConnTable OBJECT-TYPE
  contents:
  - "ptopoConnTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF PtopoConnEntry\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"This\
    \ table contains one or more rows per physical network\n            connection\
    \ known to this agent.  The agent may wish to\n            ensure that only one\
    \ ptopoConnEntry is present for each\n            local port, or it may choose\
    \ to maintain multiple\n            ptopoConnEntries for the same local port.\n\
    \            Entries based on lower numbered identifier types are\n          \
    \  preferred over higher numbered identifier types, i.e., lower\n            values\
    \ of the ptopoConnRemoteChassisType and\n            ptopoConnRemotePortType objects.\"\
    \n    ::= { ptopoData 1 }\n"
- title: ptopoConnEntry       OBJECT-TYPE
  contents:
  - "ptopoConnEntry       OBJECT-TYPE\n    SYNTAX      PtopoConnEntry\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"Information\
    \ about a particular physical network connection.\n            Entries may be\
    \ created and deleted in this table, either\n            manually or by the agent,\
    \ if a physical topology discovery\n            process is active.\"\n    INDEX\
    \   {\n           ptopoConnTimeMark,\n           ptopoConnLocalChassis,\n    \
    \       ptopoConnLocalPort,\n           ptopoConnIndex\n    }\n    ::= { ptopoConnTable\
    \ 1 }\n"
- title: PtopoConnEntry ::= SEQUENCE {
  contents:
  - "PtopoConnEntry ::= SEQUENCE {\n      ptopoConnTimeMark            TimeFilter,\n\
    \      ptopoConnLocalChassis        PhysicalIndex,\n      ptopoConnLocalPort \
    \          PhysicalIndex,\n      ptopoConnIndex               Integer32,\n   \
    \   ptopoConnRemoteChassisType   PtopoChassisIdType,\n      ptopoConnRemoteChassis\
    \       PtopoChassisId,\n      ptopoConnRemotePortType      PtopoPortIdType,\n\
    \      ptopoConnRemotePort          PtopoPortId,\n      ptopoConnDiscAlgorithm\
    \       AutonomousType,\n      ptopoConnAgentNetAddrType    AddressFamilyNumbers,\n\
    \      ptopoConnAgentNetAddr        PtopoGenAddr,\n      ptopoConnMultiMacSASeen\
    \      PtopoAddrSeenState,\n      ptopoConnMultiNetSASeen      PtopoAddrSeenState,\n\
    \      ptopoConnIsStatic            TruthValue,\n      ptopoConnLastVerifyTime\
    \      TimeStamp,\n      ptopoConnRowStatus           RowStatus\n"
- title: '}'
  contents:
  - '}

    '
- title: ptopoConnTimeMark  OBJECT-TYPE
  contents:
  - "ptopoConnTimeMark  OBJECT-TYPE\n    SYNTAX      TimeFilter\n    MAX-ACCESS  not-accessible\n\
    \    STATUS      current\n    DESCRIPTION\n            \"A TimeFilter for this\
    \ entry.  See the TimeFilter textual\n            convention in RFC 2021 to see\
    \ how this works.\"\n    ::= { ptopoConnEntry 1 }\n"
- title: ptopoConnLocalChassis  OBJECT-TYPE
  contents:
  - "ptopoConnLocalChassis  OBJECT-TYPE\n    SYNTAX      PhysicalIndex\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"The\
    \ entPhysicalIndex value used to identify the chassis\n            component associated\
    \ with the local connection endpoint.\"\n    ::= { ptopoConnEntry 2 }\n"
- title: ptopoConnLocalPort     OBJECT-TYPE
  contents:
  - "ptopoConnLocalPort     OBJECT-TYPE\n    SYNTAX      PhysicalIndex\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"The\
    \ entPhysicalIndex value used to identify the port\n            component associated\
    \ with the local connection endpoint.\"\n    ::= { ptopoConnEntry 3 }\n"
- title: ptopoConnIndex    OBJECT-TYPE
  contents:
  - "ptopoConnIndex    OBJECT-TYPE\n    SYNTAX      Integer32  (1..2147483647)\n \
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n   \
    \         \"This object represents an arbitrary local integer value\n        \
    \    used by this agent to identify a particular connection\n            instance,\
    \ unique only for the indicated local connection\n            endpoint.\n    \
    \        A particular ptopoConnIndex value may be reused in the event\n      \
    \      an entry is aged out and later re-learned with the same (or\n         \
    \   different) remote chassis and port identifiers.\n            An agent is encouraged\
    \ to assign monotonically increasing\n            index values to new entries,\
    \ starting with one, after each\n            reboot.  It is considered unlikely\
    \ that the ptopoConnIndex\n            will wrap between reboots.\"\n    ::= {\
    \ ptopoConnEntry 4 }\n"
- title: ptopoConnRemoteChassisType  OBJECT-TYPE
  contents:
  - "ptopoConnRemoteChassisType  OBJECT-TYPE\n    SYNTAX      PtopoChassisIdType\n\
    \    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n     \
    \       \"The type of encoding used to identify the chassis\n            associated\
    \ with the remote connection endpoint.\n            This object may not be modified\
    \ if the associated\n            ptopoConnRowStatus object has a value of active(1).\"\
    \n    ::= { ptopoConnEntry 5 }\n"
- title: ptopoConnRemoteChassis  OBJECT-TYPE
  contents:
  - "ptopoConnRemoteChassis  OBJECT-TYPE\n    SYNTAX      PtopoChassisId\n    MAX-ACCESS\
    \  read-create\n    STATUS      current\n    DESCRIPTION\n            \"The string\
    \ value used to identify the chassis component\n            associated with the\
    \ remote connection endpoint.\n            This object may not be modified if\
    \ the associated\n            ptopoConnRowStatus object has a value of active(1).\"\
    \n    ::= { ptopoConnEntry 6 }\n"
- title: ptopoConnRemotePortType  OBJECT-TYPE
  contents:
  - "ptopoConnRemotePortType  OBJECT-TYPE\n    SYNTAX      PtopoPortIdType\n    MAX-ACCESS\
    \  read-create\n    STATUS      current\n    DESCRIPTION\n            \"The type\
    \ of port identifier encoding used in the associated\n            'ptopoConnRemotePort'\
    \ object.\n            This object may not be modified if the associated\n   \
    \         ptopoConnRowStatus object has a value of active(1).\"\n    ::= { ptopoConnEntry\
    \ 7 }\n"
- title: ptopoConnRemotePort  OBJECT-TYPE
  contents:
  - "ptopoConnRemotePort  OBJECT-TYPE\n    SYNTAX      PtopoPortId\n    MAX-ACCESS\
    \  read-create\n    STATUS      current\n    DESCRIPTION\n            \"The string\
    \ value used to identify the port component\n            associated with the remote\
    \ connection endpoint.\n            This object may not be modified if the associated\n\
    \            ptopoConnRowStatus object has a value of active(1).\"\n    ::= {\
    \ ptopoConnEntry 8 }\n"
- title: ptopoConnDiscAlgorithm OBJECT-TYPE
  contents:
  - "ptopoConnDiscAlgorithm OBJECT-TYPE\n    SYNTAX      AutonomousType\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n            \"An indication\
    \ of the algorithm used to discover the\n            information contained in\
    \ this conceptual row.\n            A value of ptopoDiscoveryLocal indicates this\
    \ entry was\n            configured by the local agent, without use of a discovery\n\
    \            protocol.\n            A value of { 0 0 } indicates this entry was\
    \ created manually\n            by an NMS via the associated RowStatus object.\
    \ \"\n    ::= { ptopoConnEntry 9 }\n"
- title: ptopoConnAgentNetAddrType  OBJECT-TYPE
  contents:
  - "ptopoConnAgentNetAddrType  OBJECT-TYPE\n    SYNTAX      AddressFamilyNumbers\n\
    \    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n     \
    \       \"This network address type of the associated\n            ptopoConnNetAddr\
    \ object, unless that object contains a zero\n            length string.  In such\
    \ a case, an NMS application should\n            ignore any returned value for\
    \ this object.\n            This object may not be modified if the associated\n\
    \            ptopoConnRowStatus object has a value of active(1).\"\n    ::= {\
    \ ptopoConnEntry 10 }\n"
- title: ptopoConnAgentNetAddr  OBJECT-TYPE
  contents:
  - "ptopoConnAgentNetAddr  OBJECT-TYPE\n    SYNTAX      PtopoGenAddr\n    MAX-ACCESS\
    \  read-create\n    STATUS      current\n    DESCRIPTION\n            \"This object\
    \ identifies a network address which may be used\n            to reach an SNMP\
    \ agent entity containing information for the\n            chassis and port components\
    \ represented by the associated\n            'ptopoConnRemoteChassis' and 'ptopoConnRemotePort'\
    \ objects.\n            If no such address is known, then this object shall contain\n\
    \            an empty string.\n            This object may not be modified if\
    \ the associated\n            ptopoConnRowStatus object has a value of active(1).\"\
    \n    ::= { ptopoConnEntry 11 }\n"
- title: ptopoConnMultiMacSASeen  OBJECT-TYPE
  contents:
  - "ptopoConnMultiMacSASeen  OBJECT-TYPE\n    SYNTAX      PtopoAddrSeenState\n  \
    \  MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n         \
    \   \"This object indicates if multiple unicast source MAC\n            addresses\
    \ have been detected by the agent from the remote\n            connection endpoint,\
    \ since the creation of this entry.\n            If this entry has an associated\
    \ ptopoConnRemoteChassisType\n            and/or ptopoConnRemotePortType value\
    \ other than\n            'portIdMacAddr(3)', then the value 'notUsed(1)' is returned.\n\
    \            Otherwise, one of the following conditions must be true:\n      \
    \      If the agent has not yet detected any unicast source MAC\n            addresses\
    \ from the remote port, then the value 'unknown(2)'\n            is returned.\n\
    \            If the agent has detected exactly one unicast source MAC\n      \
    \      address from the remote port, then the value 'oneAddr(3)' is\n        \
    \    returned.\n            If the agent has detected more than one unicast source\
    \ MAC\n            address from the remote port, then the value 'multiAddr(4)'\n\
    \            is returned.\"\n    ::= { ptopoConnEntry 12 }\n"
- title: ptopoConnMultiNetSASeen  OBJECT-TYPE
  contents:
  - "ptopoConnMultiNetSASeen  OBJECT-TYPE\n    SYNTAX      PtopoAddrSeenState\n  \
    \  MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n         \
    \   \"This object indicates if multiple network layer source\n            addresses\
    \ have been detected by the agent from the remote\n            connection endpoint,\
    \ since the creation of this entry.\n            If this entry has an associated\
    \ ptopoConnRemoteChassisType\n            or ptopoConnRemotePortType value other\
    \ than\n            'portIdGenAddr(4)' then the value 'notUsed(1)' is returned.\n\
    \            Otherwise, one of the following conditions must be true:\n      \
    \      If the agent has not yet detected any network source\n            addresses\
    \ of the appropriate type from the remote port, then\n            the value 'unknown(2)'\
    \ is returned.\n            If the agent has detected exactly one network source\
    \ address\n            of the appropriate type from the remote port, then the\
    \ value\n            'oneAddr(3)' is returned.\n            If the agent has detected\
    \ more than one network source\n            address (of the same appropriate type)\
    \ from the remote port,\n            this the value 'multiAddr(4)' is returned.\"\
    \n    ::= { ptopoConnEntry 13 }\n"
- title: ptopoConnIsStatic  OBJECT-TYPE
  contents:
  - "ptopoConnIsStatic  OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-create\n\
    \    STATUS      current\n    DESCRIPTION\n            \"This object identifies\
    \ static ptopoConnEntries.  If this\n            object has the value 'true(1)',\
    \ then this entry is not\n            subject to any age-out mechanisms implemented\
    \ by the agent.\n            If this object has the value 'false(2)', then this\
    \ entry is\n            subject to all age-out mechanisms implemented by the agent.\n\
    \            This object may not be modified if the associated\n            ptopoConnRowStatus\
    \ object has a value of active(1).\"\n    DEFVAL { false }\n    ::= { ptopoConnEntry\
    \ 14 }\n"
- title: ptopoConnLastVerifyTime  OBJECT-TYPE
  contents:
  - "ptopoConnLastVerifyTime  OBJECT-TYPE\n    SYNTAX      TimeStamp\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n            \"If the associated\
    \ value of ptopoConnIsStatic is equal to\n            'false(2)', then this object\
    \ contains the value of sysUpTime\n            at the time the conceptual row\
    \ was last verified by the\n            agent, e.g., via reception of a topology\
    \ protocol message,\n            pertaining to the associated remote chassis and\
    \ port.\n            If the associated value of ptopoConnIsStatic is equal to\n\
    \            'true(1)', then this object shall contain the value of\n        \
    \    sysUpTime at the time this entry was last activated (i.e.,\n            ptopoConnRowStatus\
    \ set to 'active(1)').\"\n    ::= { ptopoConnEntry 15 }\n"
- title: ptopoConnRowStatus OBJECT-TYPE
  contents:
  - "ptopoConnRowStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS  read-create\n\
    \    STATUS      current\n    DESCRIPTION\n            \"The status of this conceptual\
    \ row.\"\n    ::= { ptopoConnEntry 16 }\n"
- title: --  ***********************************************************
  contents:
  - '--  ***********************************************************

    '
- title: --
  contents:
  - '--

    '
- title: --           P T O P O    G E N E R A L     G R O U P
  contents:
  - '--           P T O P O    G E N E R A L     G R O U P

    '
- title: --
  contents:
  - '--

    '
- title: --  ***********************************************************
  contents:
  - '--  ***********************************************************

    '
- title: -- last change time stamp for the whole MIB
  contents:
  - '-- last change time stamp for the whole MIB

    '
- title: ptopoLastChangeTime OBJECT-TYPE
  contents:
  - "ptopoLastChangeTime OBJECT-TYPE\n    SYNTAX      TimeStamp\n    MAX-ACCESS  read-only\n\
    \    STATUS      current\n    DESCRIPTION\n            \"The value of sysUpTime\
    \ at the time a conceptual row is\n            created, modified, or deleted in\
    \ the ptopoConnTable.\n            An NMS can use this object to reduce polling\
    \ of the\n            ptopoData group objects.\"\n    ::= { ptopoGeneral 1 }\n"
- title: ptopoConnTabInserts OBJECT-TYPE
  contents:
  - "ptopoConnTabInserts OBJECT-TYPE\n    SYNTAX      Counter32\n    UNITS       \"\
    table entries\"\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n\
    \            \"The number of times an entry has been inserted into the\n     \
    \       ptopoConnTable.\"\n    ::= { ptopoGeneral 2 }\n"
- title: ptopoConnTabDeletes OBJECT-TYPE
  contents:
  - "ptopoConnTabDeletes OBJECT-TYPE\n    SYNTAX      Counter32\n    UNITS       \"\
    table entries\"\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n\
    \            \"The number of times an entry has been deleted from the\n      \
    \      ptopoConnTable.\"\n    ::= { ptopoGeneral 3 }\n"
- title: ptopoConnTabDrops OBJECT-TYPE
  contents:
  - "ptopoConnTabDrops OBJECT-TYPE\n    SYNTAX      Counter32\n    UNITS       \"\
    table entries\"\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n\
    \            \"The number of times an entry would have been added to the\n   \
    \         ptopoConnTable, (e.g., via information learned from a\n            topology\
    \ protocol), but was not because of insufficient\n            resources.\"\n \
    \   ::= { ptopoGeneral 4 }\n"
- title: ptopoConnTabAgeouts OBJECT-TYPE
  contents:
  - "ptopoConnTabAgeouts OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n\
    \    STATUS      current\n    DESCRIPTION\n            \"The number of times an\
    \ entry has been deleted from the\n            ptopoConnTable because the information\
    \ timeliness interval\n            for that entry has expired.\"\n    ::= { ptopoGeneral\
    \ 5 }\n"
- title: --  ***********************************************************
  contents:
  - '--  ***********************************************************

    '
- title: --
  contents:
  - '--

    '
- title: --           P T O P O    C O N F I G     G R O U P
  contents:
  - '--           P T O P O    C O N F I G     G R O U P

    '
- title: --
  contents:
  - '--

    '
- title: --  ***********************************************************
  contents:
  - '--  ***********************************************************

    '
- title: ptopoConfigTrapInterval OBJECT-TYPE
  contents:
  - "ptopoConfigTrapInterval OBJECT-TYPE\n    SYNTAX      Integer32 (0 | 5..3600)\n\
    \    UNITS       \"seconds\"\n    MAX-ACCESS  read-write\n    STATUS      current\n\
    \    DESCRIPTION\n            \"This object controls the transmission of PTOPO\n\
    \            notifications.\n            If this object has a value of zero, then\
    \ no\n            ptopoConfigChange notifications will be transmitted by the\n\
    \            agent.\n            If this object has a non-zero value, then the\
    \ agent must not\n            generate more than one ptopoConfigChange trap-event\
    \ in the\n            indicated period, where a 'trap-event' is the transmission\n\
    \            of a single notification PDU type to a list of notification\n   \
    \         destinations.  If additional configuration changes occur\n         \
    \   within the indicated throttling period, then these trap-\n            events\
    \ must be suppressed by the agent. An NMS should\n            periodically check\
    \ the value of ptopoLastChangeTime to\n            detect any missed ptopoConfigChange\
    \ trap-events, e.g. due to\n            throttling or transmission loss.\n   \
    \         If notification transmission is enabled, the suggested\n           \
    \ default throttling period is 60 seconds, but transmission\n            should\
    \ be disabled by default.\n            If the agent is capable of storing non-volatile\n\
    \            configuration, then the value of this object must be\n          \
    \  restored after a re-initialization of the management\n            system.\"\
    \n    DEFVAL { 0 }\n    ::= { ptopoConfig 1 }\n"
- title: ptopoConfigMaxHoldTime OBJECT-TYPE
  contents:
  - "ptopoConfigMaxHoldTime OBJECT-TYPE\n    SYNTAX      Integer32 (1..2147483647)\n\
    \    UNITS       \"seconds\"\n    MAX-ACCESS  read-write\n    STATUS      current\n\
    \    DESCRIPTION\n            \"This object specifies the desired time interval\
    \ for which\n            an agent will maintain dynamic ptopoConnEntries.\n  \
    \          After the specified number of seconds since the last time an\n    \
    \        entry was verified, in the absence of new verification\n            (e.g.,\
    \ receipt of a topology protocol message), the agent\n            shall remove\
    \ the entry.  Note that entries may not always be\n            removed immediately,\
    \ but may possibly be removed at periodic\n            garbage collection intervals.\n\
    \            This object only affects dynamic ptopoConnEntries, i.e.  for\n  \
    \          which ptopoConnIsStatic equals 'false(2)'. Static entries\n       \
    \     are not aged out.\n            Note that dynamic ptopoConnEntries may also\
    \ be removed by\n            the agent due to the expired timeliness of learned\
    \ topology\n            information (e.g., timeliness interval for a remote port\n\
    \            expires).  The actual age-out interval for a given entry is\n   \
    \         defined by the following formula:\n              age-out-time =\n  \
    \              min(ptopoConfigMaxHoldTime, <entry-specific hold-time>)\n     \
    \       where <entry-specific hold-time> is determined by the\n            discovery\
    \ algorithm, and may be different for each entry.\"\n    DEFVAL { 300 }\n    ::=\
    \ { ptopoConfig 2 }\n"
- title: -- PTOPO MIB Notification Definitions
  contents:
  - '-- PTOPO MIB Notification Definitions

    '
- title: ptopoMIBNotifications  OBJECT IDENTIFIER ::= { ptopoMIB 2 }
  contents:
  - 'ptopoMIBNotifications  OBJECT IDENTIFIER ::= { ptopoMIB 2 }

    '
- title: ptopoMIBTrapPrefix     OBJECT IDENTIFIER ::=
  contents:
  - "ptopoMIBTrapPrefix     OBJECT IDENTIFIER ::=\n      { ptopoMIBNotifications 0\
    \ }\n"
- title: ptopoConfigChange NOTIFICATION-TYPE
  contents:
  - "ptopoConfigChange NOTIFICATION-TYPE\n    OBJECTS       {\n             ptopoConnTabInserts,\n\
    \             ptopoConnTabDeletes,\n             ptopoConnTabDrops,\n        \
    \     ptopoConnTabAgeouts\n    }\n    STATUS        current\n    DESCRIPTION\n\
    \            \"A ptopoConfigChange notification is sent when the value of\n  \
    \          ptopoLastChangeTime changes. It can be utilized by an NMS to\n    \
    \        trigger physical topology table maintenance polls.\n            Note\
    \ that transmission of ptopoConfigChange notifications\n            are throttled\
    \ by the agent, as specified by the\n            'ptopoConfigTrapInterval' object.\"\
    \n   ::= { ptopoMIBTrapPrefix 1 }\n"
- title: -- PTOPO Registration Points
  contents:
  - '-- PTOPO Registration Points

    '
- title: ptopoRegistrationPoints  OBJECT IDENTIFIER ::= { ptopoMIB 3 }
  contents:
  - 'ptopoRegistrationPoints  OBJECT IDENTIFIER ::= { ptopoMIB 3 }

    '
- title: -- values used with ptopoConnDiscAlgorithm object
  contents:
  - '-- values used with ptopoConnDiscAlgorithm object

    '
- title: ptopoDiscoveryMechanisms OBJECT IDENTIFIER ::=
  contents:
  - "ptopoDiscoveryMechanisms OBJECT IDENTIFIER ::=\n      { ptopoRegistrationPoints\
    \ 1 }\n"
- title: ptopoDiscoveryLocal      OBJECT IDENTIFIER ::=
  contents:
  - "ptopoDiscoveryLocal      OBJECT IDENTIFIER ::=\n      { ptopoDiscoveryMechanisms\
    \ 1 }\n"
- title: -- conformance information
  contents:
  - '-- conformance information

    '
- title: ptopoConformance OBJECT IDENTIFIER ::= { ptopoMIB 4 }
  contents:
  - 'ptopoConformance OBJECT IDENTIFIER ::= { ptopoMIB 4 }

    '
- title: ptopoCompliances OBJECT IDENTIFIER ::= { ptopoConformance 1 }
  contents:
  - 'ptopoCompliances OBJECT IDENTIFIER ::= { ptopoConformance 1 }

    '
- title: ptopoGroups      OBJECT IDENTIFIER ::= { ptopoConformance 2 }
  contents:
  - 'ptopoGroups      OBJECT IDENTIFIER ::= { ptopoConformance 2 }

    '
- title: -- compliance statements
  contents:
  - '-- compliance statements

    '
- title: ptopoCompliance MODULE-COMPLIANCE
  contents:
  - "ptopoCompliance MODULE-COMPLIANCE\n   STATUS  current\n    DESCRIPTION\n    \
    \        \"The compliance statement for SNMP entities which implement\n      \
    \      the PTOPO MIB.\"\n    MODULE  -- this module\n        MANDATORY-GROUPS\
    \ {\n              ptopoDataGroup,\n              ptopoGeneralGroup,\n       \
    \       ptopoConfigGroup,\n              ptopoNotificationsGroup\n        }\n\
    \    ::= { ptopoCompliances 1 }\n"
- title: -- MIB groupings
  contents:
  - '-- MIB groupings

    '
- title: ptopoDataGroup   OBJECT-GROUP
  contents:
  - "ptopoDataGroup   OBJECT-GROUP\n    OBJECTS {\n         ptopoConnRemoteChassisType,\n\
    \         ptopoConnRemoteChassis,\n         ptopoConnRemotePortType,\n       \
    \  ptopoConnRemotePort,\n         ptopoConnDiscAlgorithm,\n         ptopoConnAgentNetAddrType,\n\
    \         ptopoConnAgentNetAddr,\n         ptopoConnMultiMacSASeen,\n        \
    \ ptopoConnMultiNetSASeen,\n         ptopoConnIsStatic,\n         ptopoConnLastVerifyTime,\n\
    \         ptopoConnRowStatus\n    }\n    STATUS  current\n    DESCRIPTION\n  \
    \          \"The collection of objects which are used to represent\n         \
    \   physical topology information for which a single agent\n            provides\
    \ management information.\n            This group is mandatory for all implementations\
    \ of the PTOPO\n            MIB.\"\n    ::= { ptopoGroups 1 }\n"
- title: ptopoGeneralGroup    OBJECT-GROUP
  contents:
  - "ptopoGeneralGroup    OBJECT-GROUP\n    OBJECTS {\n         ptopoLastChangeTime,\n\
    \         ptopoConnTabInserts,\n         ptopoConnTabDeletes,\n         ptopoConnTabDrops,\n\
    \         ptopoConnTabAgeouts\n    }\n    STATUS  current\n    DESCRIPTION\n \
    \           \"The collection of objects which are used to report the\n       \
    \     general status of the PTOPO MIB implementation.\n            This group\
    \ is mandatory for all agents which implement the\n            PTOPO MIB.\"\n\
    \    ::= { ptopoGroups 2 }\n"
- title: ptopoConfigGroup    OBJECT-GROUP
  contents:
  - "ptopoConfigGroup    OBJECT-GROUP\n    OBJECTS {\n         ptopoConfigTrapInterval,\n\
    \         ptopoConfigMaxHoldTime\n    }\n    STATUS  current\n    DESCRIPTION\n\
    \            \"The collection of objects which are used to configure the\n   \
    \         PTOPO MIB implementation behavior.\n            This group is mandatory\
    \ for agents which implement the PTOPO\n            MIB.\"\n    ::= { ptopoGroups\
    \ 3 }\n"
- title: ptopoNotificationsGroup NOTIFICATION-GROUP
  contents:
  - "ptopoNotificationsGroup NOTIFICATION-GROUP\n    NOTIFICATIONS {\n         ptopoConfigChange\n\
    \    }\n    STATUS        current\n    DESCRIPTION\n            \"The collection\
    \ of notifications used to indicate PTOPO MIB\n            data consistency and\
    \ general status information.\n            This group is mandatory for agents\
    \ which implement the PTOPO\n            MIB.\"\n    ::= { ptopoGroups 4 }\n"
- title: END
  contents:
  - 'END

    '
- title: 5.  Intellectual Property
  contents:
  - "5.  Intellectual Property\n   The IETF takes no position regarding the validity\
    \ or scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n   The IETF has been notified of intellectual property rights claimed\
    \ in\n   regard to some or all of the specification contained in this\n   document.\
    \  For more information consult the online list of claimed\n   rights.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The PTOPO Discovery Protocol is a product of the IETF\
    \ PTOPOMIB\n   Working Group.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [RFC1155]   Rose, M. and K. McCloghrie, \"Structure and Identification\n\
    \               of Management Information for TCP/IP-based Internets\",\n    \
    \           STD 16, RFC 1155, May 1990.\n   [RFC1157]   Case, J., Fedor, M., Schoffstall,\
    \ M. and J. Davin,\n               \"Simple Network Management Protocol\", STD\
    \ 15, RFC 1157,\n               May 1990.\n   [RFC1212]   Rose, M. and K. McCloghrie,\
    \ \"Concise MIB Definitions\",\n               STD 16, RFC 1212, March 1991.\n\
    \   [RFC1215]   Rose, M., \"A Convention for Defining Traps for use with\n   \
    \            the SNMP\", RFC 1215, March 1991.\n   [RFC1493]   Decker, E., Langille,\
    \ P., Rijsinghani, A. and K.\n               McCloghrie, \"Definitions of Managed\
    \ Objects for Bridges\",\n               RFC 1493, July 1993.\n   [RFC1700]  \
    \ Reynolds, J. and J. Postel, \"Assigned Numbers\", STD 2,\n               RFC\
    \ 1700, October 1994.\n   [RFC1901]   Case, J., McCloghrie, K., Rose, M. and S.\
    \ Waldbusser,\n               \"Introduction to Community-based SNMPv2\", January\
    \ 1996.\n   [RFC1902]   Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n\
    \               \"Structure of Management Information for version 2 of the\n \
    \              Simple Network Management Protocol (SNMPv2)\", RFC 1902,\n    \
    \           January 1996.\n   [RFC1903]   Case, J., McCloghrie, K., Rose, M. and\
    \ S. Waldbusser,\n               \"Textual Conventions for version 2 of the Simple\
    \ Network\n               Management Protocol (SNMPv2)\", RFC 1903, January 1996.\n\
    \   [RFC1904]   Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n      \
    \         \"Conformance Statements for version 2 of the Simple\n             \
    \  Network Management Protocol (SNMPv2)\", RFC 1904, January\n               1996.\n\
    \   [RFC1905]   Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n      \
    \         \"Protocol Operations for Version 2 of the Simple Network\n        \
    \       Management Protocol (SNMPv2)\", RFC 1905, January 1996.\n   [RFC1906]\
    \   Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n               \"Transport\
    \ Mappings for Version 2 of the  Simple Network\n               Management Protocol\
    \ (SNMPv2)\", RFC 1906, January 1996.\n   [RFC2021]   Waldbusser, S., \"Remote\
    \ Network Monitoring MIB (RMON-2)\",\n               RFC 2021, January 1997.\n\
    \   [RFC2037]   McCloghrie, K. and A. Bierman, \"Entity MIB using SMIv2\",\n \
    \              RFC 2037, October 1996.\n   [RFC2108]   de Graaf, K., Romascanu,\
    \ D., McMaster, D. and K.\n               McCloghrie, \"Definitions of Managed\
    \ Objects for IEEE\n               802.3 Repeater Devices using SMIv2\", RFC 2108,\
    \ February\n               1997.\n   [RFC2233]   McCloghrie, K. and F. Kastenholtz,\
    \ \"The Interfaces Group\n               MIB using SMIv2\", RFC 2233, November\
    \ 1997.\n   [RFC2570]   Case, J., Mundy, R., Partain, D. and B. Stewart,\n   \
    \            \"Introduction to Version 3 of the Internet-standard\n          \
    \     Network Management Framework\", RFC 2570, April 1999.\n   [RFC2571]   Harrington,\
    \ D., Presuhn, R. and B. Wijnen, \"An\n               Architecture for Describing\
    \ SNMP Management Frameworks\",\n               RFC 2571, April 1999.\n   [RFC2572]\
    \   Case, J., Harrington D., Presuhn R. and B. Wijnen,\n               \"Message\
    \ Processing and Dispatching for the Simple\n               Network Management\
    \ Protocol (SNMP)\", RFC 2572, April\n               1999.\n   [RFC2573]   Levi,\
    \ D., Meyer, P. and B. Stewart, \"SNMPv3\n               Applications\", RFC 2573,\
    \ April 1999.\n   [RFC2574]   Blumenthal, U. and B. Wijnen, \"User-based Security\
    \ Model\n               (USM) for version 3 of the Simple Network Management\n\
    \               Protocol (SNMPv3)\", RFC 2574, April 1999.\n   [RFC2575]   Wijnen,\
    \ B., Presuhn, R. and K. McCloghrie, \"View-based\n               Access Control\
    \ Model (VACM) for the Simple Network\n               Management Protocol (SNMP)\"\
    , RFC 2575, April 1999.\n   [RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder,\
    \ J., Case, J.,\n               Rose, M. and S. Waldbusser, \"Structure of Management\n\
    \               Information Version 2 (SMIv2)\", STD 58, RFC 2578, April\n   \
    \            1999.\n   [RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder,\
    \ J., Case, J.,\n               Rose, M. and S. Waldbusser, \"Textual Conventions\
    \ for\n               SMIv2\", STD 58, RFC 2579, April 1999.\n   [RFC2580]   McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J.,\n               Rose, M. and S.\
    \ Waldbusser, \"Conformance Statements for\n               SMIv2\", STD 58, RFC\
    \ 2580, April 1999.\n   [RFC2737]   McCloghrie, K. and A. Bierman, \"Entity MIB\
    \ (Version 2)\",\n               RFC 2737, Cisco Systems, December 1999.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   There are a number of management objects defined\
    \ in this MIB that\n   have a MAX-ACCESS clause of read-write and/or read-create.\
    \  Such\n   objects may be considered sensitive or vulnerable in some network\n\
    \   environments.  The support for SET operations in a non-secure\n   environment\
    \ without proper protection can have a negative effect on\n   network operations.\n\
    \   There are a number of managed objects in this MIB that may contain\n   sensitive\
    \ information. These are:\n       read-create objects:  ptopoConnRemoteChassisType\n\
    \          ptopoConnRemoteChassis ptopoConnRemotePortType\n          ptopoConnRemotePort\
    \ ptopoConnAgentNetAddrType\n          ptopoConnAgentNetAddr ptopoConnIsStatic\n\
    \          ptopoConfigTrapInterval ptopoConfigMaxHoldTime\n       read-only objects:\
    \  ptopoConnDiscAlgorithm\n          ptopoConnMultiMacSASeen ptopoConnMultiNetSASeen\n\
    \          ptopoConnLastVerifyTime ptopoLastChangeTime\n       notifications:\
    \  ptopoConfigChange\n   These MIB objects expose information about the physical\
    \ connectivity\n   for a particular portion of a network.\n   A network administrator\
    \ may also wish to inhibit transmission of any\n   ptopoConfigChange notification\
    \ by setting the ptopoConfigTrapInterval\n   object to zero.\n   It is thus important\
    \ to control even GET access to these objects and\n   possibly to even encrypt\
    \ the values of these object when sending them\n   over the network via SNMP.\
    \  Not all versions of SNMP provide features\n   for such a secure environment.\n\
    \   SNMPv1 by itself is not a secure environment.  Even if the network\n   itself\
    \ is secure (for example by using IPSec), even then, there is no\n   control as\
    \ to who on the secure network is allowed to access and\n   GET/SET (read/change/create/delete)\
    \ the objects in this MIB.\n   It is recommended that the implementers consider\
    \ the security\n   features as provided by the SNMPv3 framework.  Specifically,\
    \ the use\n   of the User-based Security Model RFC 2574 [RFC2574] and the View-\n\
    \   based Access Control Model RFC 2575 [RFC2575] is recommended.\n   It is then\
    \ a customer/user responsibility to ensure that the SNMP\n   entity giving access\
    \ to an instance of this MIB, is properly\n   configured to give access to the\
    \ objects only to those principals\n   (users) that have legitimate rights to\
    \ indeed GET or SET\n   (change/create/delete) them.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Andy Bierman\n   Cisco Systems\n   170 West Tasman\
    \ Drive\n   San Jose, CA USA 95134\n   Phone: +1 408-527-3711\n   EMail: abierman@cisco.com\n\
    \   Kendall S. Jones\n   Nortel Networks\n   4401 Great America Parkway\n   Santa\
    \ Clara, CA USA 95054\n   Phone: +1 408-495-7356\n   EMail: kejones@nortelnetworks.com\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
