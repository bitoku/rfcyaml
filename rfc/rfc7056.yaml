- contents:
  - "                    Name Attributes for the GSS-API\n           Extensible Authentication
    Protocol (EAP) Mechanism\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The naming extensions to the Generic Security Service Application\n
    \  Programming Interface (GSS-API) provide a mechanism for applications\n   to
    discover authorization and personalization information associated\n   with GSS-API
    names.  The Extensible Authentication Protocol GSS-API\n   mechanism allows an
    Authentication, Authorization, and Accounting\n   (AAA) peer to provide authorization
    attributes alongside an\n   authentication response.  It also supplies mechanisms
    to process\n   Security Assertion Markup Language (SAML) messages provided in
    the\n   AAA response.  This document describes how to use the Naming\n   Extensions
    API to access that information.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7056.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Requirements Notation ...........................................3\n   3.
    Naming Extensions and SAML ......................................3\n   4. Federated
    Context ...............................................4\n   5. Name Attributes
    for GSS-EAP .....................................5\n   6. Names of SAML Attributes
    in the Federated Context ...............6\n      6.1. Assertions .................................................6\n
    \     6.2. SAML Attributes ............................................6\n      6.3.
    SAML Name Identifiers ......................................7\n   7. Security
    Considerations .........................................8\n   8. IANA Considerations
    .............................................8\n      8.1. Registration of the
    GSS URN Namespace ......................9\n   9. Acknowledgements ................................................9\n
    \  10. References ....................................................10\n      10.1.
    Normative References .....................................10\n      10.2. Informative
    References ...................................11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The naming extensions [RFC6680] to the Generic Security
    Service\n   Application Programming Interface (GSS-API) [RFC2743] provide a\n
    \  mechanism for applications to discover authorization and\n   personalization
    information associated with GSS-API names.  The\n   Extensible Authentication
    Protocol GSS-API mechanism [RFC7055] allows\n   an Authentication, Authorization,
    and Accounting (AAA) peer to\n   provide authorization attributes alongside an
    authentication\n   response.  It also supplies mechanisms to process Security
    Assertion\n   Markup Language (SAML) messages provided in the AAA response.  Other\n
    \  mechanisms such as SAML Enhanced Client (EC) [SASL-SAML] also support\n   SAML
    assertions and attributes carried in the GSS-API.  This document\n   describes
    how to use the Naming Extensions API to access that\n   information.\n   The semantics
    of setting attributes defined in this specification are\n   undefined and left
    to future work.\n"
  title: 1.  Introduction
- contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Requirements Notation
- contents:
  - "3.  Naming Extensions and SAML\n   SAML assertions can carry attributes describing
    properties of the\n   subject of the assertion.  For example, an assertion might
    carry an\n   attribute describing the organizational affiliation or email address\n
    \  of a subject.  According to Sections 8.2 and 2.7.3.1 of [OASIS], the\n   name
    of an attribute has two parts.  The first is a Universal\n   Resource Identifier
    (URI) describing the format of the name.  The\n   second part, whose form depends
    on the format URI, is the actual\n   name.  GSS-API name attributes may take a
    form starting with a URI\n   describing the form of the name; the rest of the
    name is specified by\n   that URI.\n   SAML attributes carried in GSS-API names
    are named with three parts.\n   The first is a Universal Resource Name (URN) indicating
    that the name\n   is a SAML attribute and describing the context (Section 4).
    \ This URN\n   is followed by a space, the URI indicating the format of the SAML\n
    \  name, a space, and the SAML attribute name.  The URI indicating the\n   format
    of the SAML attribute name is not optional and MUST be\n   present.\n   SAML attribute
    names may not be globally unique.  Many names that are\n   named by URNs or URIs
    are likely to have semantics independent of the\n   issuer.  However, other name
    formats, including unspecified name\n   formats, make it easy for two issuers
    to choose the same name for\n   attributes with different semantics.  Attributes
    using the federated\n   context (Section 4) are issued by the same party performing
    the\n   authentication.  So, based on who is the subject of the name, the\n   semantics
    of the attribute can be determined.\n"
  title: 3.  Naming Extensions and SAML
- contents:
  - "4.  Federated Context\n   GSS-API naming extensions have the concept of an authenticated
    name\n   attribute.  The mechanism guarantees that the contents of an\n   authenticated
    name attribute are an authenticated statement from the\n   trusted source of the
    peer credential.  The fact that an attribute is\n   authenticated does not imply
    that the trusted source of the peer\n   credential is authorized to assert the
    attribute.\n   In the federated context, the trusted source of the peer credential\n
    \  is typically some identity provider.  In the GSS EAP mechanism,\n   information
    is combined from AAA and SAML sources.  The SAML Identity\n   Provider (IdP) and
    home AAA server are assumed to be in the same\n   trust domain.  However, this
    trust domain is not typically the same\n   as the trust domain of the service.
    \ With other SAML mechanisms using\n   this specification, the SAML assertion
    also comes from the party\n   performing authentication.  Typically, the IdP is
    run by another\n   organization in the same federation.  The IdP is trusted to
    make some\n   statements, particularly related to the context of a federation.
    \ For\n   example, an academic federation's participants would typically trust\n
    \  an IdP's assertions about whether someone was a student or a\n   professor.
    \ However, that same IdP would not typically be trusted to\n   make assertions
    about local entitlements such as group membership.\n   Thus, a service MUST make
    a policy decision about whether the IdP is\n   permitted to assert a particular
    attribute and about whether the\n   asserted value is acceptable.  This policy
    can be implemented as\n   local configuration on the service, as rules in AAA
    proxies, or\n   through other deployment-specific mechanisms.\n   In contrast,
    attributes in an enterprise context are often verified\n   by a central authentication
    infrastructure that is trusted to assert\n   most or all attributes.  For example,
    in a Kerberos infrastructure,\n   the Key Distribution Center (KDC) typically
    indicates group\n   membership information for clients to a server using KDC-\n
    \  authenticated authorization data.\n   The context of an attribute is an important
    property of that\n   attribute; trust context is an important part of this overall\n
    \  context.  In order for applications to distinguish the context of\n   attributes,
    attributes with different contexts need different names.\n   This specification
    defines attribute names for SAML and AAA\n   attributes in the federated context.\n
    \  These names MUST NOT be used for attributes issued by a party other\n   than
    one closely associated with the source of credentials unless the\n   source of
    credentials is re-asserting the attributes.  For example, a\n   source of credentials
    can consult whatever sources of attributes it\n   chooses, but acceptors can assume
    attributes in the federated context\n   are from the source of credentials.  This
    requirement is typically\n   enforced in mechanism specifications.  For example,
    [AAA-SAML]\n   provides enough information that we know the attributes it carries\n
    \  today are in the federated context.  Similarly, we know that the\n   requirements
    of this paragraph are met by SAML mechanisms where the\n   assertion is the means
    of authentication.\n"
  title: 4.  Federated Context
- contents:
  - "5.  Name Attributes for GSS-EAP\n   This section describes how RADIUS attributes
    received in an access-\n   accept message by the GSS-EAP [RFC7055] mechanism are
    named.  The use\n   of attributes defined in this section for other RADIUS messages
    or\n   prior to the access-accept message is undefined at this time.  Future\n
    \  specifications can explore these areas giving adequate weight to\n   backward
    compatibility.  In particular, this specification defines\n   the meaning of these
    attributes for the src_name output of\n   GSS_Accept_sec_context after that function
    returns GSS_S_COMPLETE.\n   Attributes MAY be absent or values MAY change in other
    circumstances;\n   future specifications MAY define this behavior.\n   The first
    portion of the name is urn:ietf:params:gss:radius-attribute\n   (a URN indicating
    that this is a GSS-EAP RADIUS AVP).  This is\n   followed by a space and a numeric
    RADIUS name as described by\n   Section 2.7 of [RFC6929].  For example, the name
    of the User-Name\n   attribute is \"urn:ietf:params:gss:radius-attribute 1\".
    \ The name of\n   extended type 1 within type 241 would be\n   \"urn:ietf:params:gss:radius-attribute
    241.1\".\n   Consider a case where the RADIUS access-accept response includes
    the\n   RADIUS User-Name attribute.  An application wishing to retrieve the\n
    \  value of this attribute would first wait until\n   GSS-_Accept_sec_context
    returned GSS_S_COMPLETE.  Then, the\n   application would take the src_name output
    from\n   GSS_Accept_sec_context and call GSS_Get_name_attribute passing this\n
    \  name and an attribute of \"urn:ietf:params:gss:radius-attribute 1\" as\n   inputs.
    \ After confirming that the authenticated boolean output is\n   true, the application
    can find the username in the values output.\n   The value of RADIUS attributes
    is the raw octets of the packet.\n   Integers are in network byte order.  The
    display value SHOULD be a\n   human-readable string; an implementation can only
    produce this string\n   if it knows the type of a given RADIUS attribute.  If
    multiple\n   attributes are present with a given name in the RADIUS message, then\n
    \  a multi-valued GSS-API attribute SHOULD be returned.  As an\n   exception,
    implementations SHOULD concatenate RADIUS attributes such\n   as EAP message or
    large attributes defined in [RFC6929] that use\n   multiple attributes to carry
    more than 253 octets of information.\n"
  title: 5.  Name Attributes for GSS-EAP
- contents:
  - '6.  Names of SAML Attributes in the Federated Context

    '
  - contents:
    - "6.1.  Assertions\n   An assertion generated by the credential source is named
      by\n   \"urn:ietf:params:gss:federated-saml-assertion\".  The value of this\n
      \  attribute is the assertion carried in the AAA protocol or used for\n   authentication
      in a SAML mechanism.  This attribute is absent from a\n   given acceptor name
      if no such assertion is present or if the\n   assertion fails local policy checks.\n
      \  When GSS_Get_name_attribute is called, this attribute will be\n   returned
      with the authenticated output set to true only if the\n   mechanism can successfully
      authenticate the SAML statement.  For the\n   GSS-EAP mechanism, this is true
      if the AAA exchange has successfully\n   authenticated.  However, uses of the
      GSS-API MUST confirm that the\n   attribute is marked authenticated as other
      mechanisms MAY permit an\n   initiator to provide an unauthenticated SAML statement.\n
      \  Mechanisms MAY perform additional local policy checks and MAY remove\n   the
      attribute corresponding to assertions that fail these checks.\n"
    title: 6.1.  Assertions
  - contents:
    - "6.2.  SAML Attributes\n   Each attribute carried in the assertion SHOULD also
      be a GSS name\n   attribute.  The name of this attribute has three parts, all
      separated\n   by an ASCII space character.  The first part is\n   urn:ietf:params:gss:federated-saml-attribute.
      \ The second part is the\n   URI for the <saml:Attribute> element's NameFormat
      XML attribute.  The\n   final part is the <saml:Attribute> element's Name XML
      attribute.  The\n   SAML attribute name may itself contain spaces.  As required
      by the\n   URI specification [RFC3986], spaces within a URI are encoded as\n
      \  \"%20\".  Spaces within a URI, including either the first or second\n   part
      of the name, encoded as \"%20\" do not separate parts of the\n   GSS-API attribute
      name; they are simply part of the URI.\n   As an example, if the eduPersonEntitlement
      attribute is present in an\n   assertion, then an attribute with the name\n
      \  \"urn:ietf:params:gss:federated-saml-attribute\n   urn:oasis:names:tc:SAML:2.0:attrname-format:uri\n
      \  urn:oid:1.3.6.1.4.1.5923.1.1.1.7\" could be returned from\n   GSS_Inquire_Name.
      \ If an application calls GSS_Get_name_attribute\n   with this attribute in
      the attr parameter, then the values output\n   would include one or more URIs
      of entitlements that were associated\n   with the authenticated user.\n   If
      the content of each <saml:AttributeValue> element is a simple text\n   node
      (or nodes), then the raw and \"display\" values of the GSS name\n   attribute
      MUST be the text content of the element(s).  The raw value\n   MUST be encoded
      as UTF-8.\n   If the value is not simple or is empty, then the raw value(s)
      of the\n   GSS name attribute MUST be a namespace well-formed serialization\n
      \  [XMLNS] of the <saml:AttributeValue> element(s) encoded as UTF-8.\n   The
      \"display\" values are implementation defined.\n   These attributes SHOULD be
      marked authenticated if they are contained\n   in SAML assertions that have
      been successfully validated back to the\n   trusted source of the peer credential.
      \ In the GSS-EAP mechanism, a\n   SAML assertion carried in an integrity-protected
      and authenticated\n   AAA protocol SHALL be successfully validated; attributes
      from that\n   assertion SHALL be returned from GSS_Get_name_attribute with the\n
      \  authenticated output set to true.  An implementation MAY apply local\n   policy
      checks to each attribute in this assertion and discard the\n   attribute if
      it is unacceptable according to these checks.\n"
    title: 6.2.  SAML Attributes
  - contents:
    - "6.3.  SAML Name Identifiers\n   The <saml:NameID> carried in the subject of
      the assertion SHOULD also\n   be a GSS name attribute.  The name of this attribute
      has two parts,\n   separated by an ASCII space character.  The first part is\n
      \  urn:ietf:params:gss:federated-saml-nameid.  The second part is the\n   URI
      for the <saml:NameID> element's Format XML attribute.\n   The raw value of the
      GSS name attribute MUST be the well-formed\n   serialization of the <saml:NameID>
      element encoded as UTF-8.  The\n   \"display\" value is implementation defined.
      \ For formats defined by\n   Section 8.3 of [OASIS], missing values of the NameQualifier
      or\n   SPNameQualifier XML attributes MUST be populated in accordance with\n
      \  the definition of the format prior to serialization.  In other words,\n   the
      defaulting rules specified for the \"persistent\" and \"transient\"\n   formats
      MUST be applied prior to serialization.\n   This attribute SHOULD be marked
      authenticated if the name identifier\n   is contained in a SAML assertion that
      has been successfully validated\n   back to the trusted source of the peer credential.
      \ In the GSS-EAP\n   mechanism, a SAML assertion carried in an integrity-protected
      and\n   authenticated AAA protocol SHALL be sufficiently validated.  An\n   implementation
      MAY apply local policy checks to this assertion and\n   discard it if it is
      unacceptable according to these checks.\n"
    title: 6.3.  SAML Name Identifiers
  title: 6.  Names of SAML Attributes in the Federated Context
- contents:
  - "7.  Security Considerations\n   This document describes how to access RADIUS
    attributes, SAML\n   attributes, and SAML assertions from some GSS-API mechanisms.
    \ These\n   attributes are typically used for one of two purposes.  The least\n
    \  sensitive is personalization: a central service MAY provide\n   information
    about an authenticated user so they need not enter it\n   with each acceptor they
    access.  A more sensitive use is\n   authorization.\n   The mechanism is responsible
    for authentication and integrity\n   protection of the attributes.  However, the
    acceptor application is\n   responsible for making a decision about whether the
    credential source\n   is trusted to assert the attribute and validating the asserted
    value.\n   Mechanisms are permitted to perform local policy checks on SAML\n   assertions,
    attributes, and name identifiers exposed through name\n   attributes defined in
    this document.  If there is another way to get\n   access to the SAML assertion,
    for example, the mechanism described in\n   [AAA-SAML], then an application MAY
    get different results depending\n   on how the SAML is accessed.  This is intended
    behavior; applications\n   who choose to bypass local policy checks SHOULD perform
    their own\n   evaluation before relying on information.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  IANA Considerations\n   A new top-level registry has been created titled
    \"Generic Security\n   Service Application Program Interface Parameters\".\n   In
    this top-level registry, a subregistry titled \"GSS-API URN\n   Parameters\" has
    been created.  Registration in this registry is by\n   the IETF Review or Expert
    Review procedures [RFC5226].\n   This paragraph gives guidance to Designated Experts.
    \ Registrations\n   in this registry are generally only expected as part of protocols\n
    \  published as RFCs on the IETF stream; other URIs are expected to be\n   better
    choices for non-IETF work.  Expert Review is permitted mainly\n   to permit early
    registration related to specifications under\n   development when the community
    believes they have reach sufficient\n   maturity.  The expert SHOULD evaluate
    the maturity and stability of\n   such an IETF-stream specification.  Experts
    SHOULD review anything\n   not from the IETF stream for consistency and consensus
    with current\n   practice.  Today, such requests would not typically be approved.\n
    \  If the \"paramname\" parameter is registered in this registry, then its\n   URN
    will be \"urn:ietf:params:gss:paramname\".  The initial\n   registrations are
    as follows:\n                +--------------------------+-------------+\n                |
    Parameter                | Reference   |\n                +--------------------------+-------------+\n
    \               | radius-attribute         | Section 5   |\n                |
    federated-saml-assertion | Section 6.1 |\n                | federated-saml-attribute
    | Section 6.2 |\n                | federated-saml-nameid    | Section 6.3 |\n
    \               +--------------------------+-------------+\n"
  - contents:
    - "8.1.  Registration of the GSS URN Namespace\n   IANA has registered the \"gss\"
      URN sub-namespace in the IETF URN sub-\n   namespace for protocol parameters
      defined in [RFC3553].\n   Registry Name: gss\n   Specification: RFC 7056\n   Repository:
      GSS-API URN Parameters (Section 8)\n   Index Value: Sub-parameters MUST be specified
      in UTF-8 using standard\n   URI encoding where necessary.\n"
    title: 8.1.  Registration of the GSS URN Namespace
  title: 8.  IANA Considerations
- contents:
  - "9.  Acknowledgements\n   Scott Cantor contributed significant text and multiple
    reviews of\n   this document.\n   The authors would like to thank Stephen Farrell,
    Luke Howard, and Jim\n   Schaad.\n   Sam Hartman's work on this specification
    has been funded by Janet.\n"
  title: 9.  Acknowledgements
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [OASIS]     Cantor, S., Kemp, J., Philpott,
      R., and E. Maler,\n               \"Assertions and Protocol for the OASIS Security
      Assertion\n               Markup Language (SAML) V2.0\", OASIS Standard\n               saml-core-2.0-os,
      March 2005.\n   [RFC2119]   Bradner, S., \"Key words for use in RFCs to Indicate\n
      \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2743]
      \  Linn, J., \"Generic Security Service Application Program\n               Interface
      Version 2, Update 1\", RFC 2743, January 2000.\n   [RFC3553]   Mealling, M.,
      Masinter, L., Hardie, T., and G. Klyne, \"An\n               IETF URN Sub-namespace
      for Registered Protocol\n               Parameters\", BCP 73, RFC 3553, June
      2003.\n   [RFC5226]   Narten, T. and H. Alvestrand, \"Guidelines for Writing
      an\n               IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n
      \              May 2008.\n   [RFC6680]   Williams, N., Johansson, L., Hartman,
      S., and S.\n               Josefsson, \"Generic Security Service Application\n
      \              Programming Interface (GSS-API) Naming Extensions\", RFC\n               6680,
      August 2012.\n   [RFC6929]   DeKok, A. and A. Lior, \"Remote Authentication
      Dial In\n               User Service (RADIUS) Protocol Extensions\", RFC 6929,\n
      \              April 2013.\n   [RFC7055]   Hartman, S., Ed. and J. Howlett,
      \"A GSS-API Mechanism for\n               the Extensible Authentication Protocol\",
      RFC 7055,\n               December 2013.\n   [XMLNS]     W3C, \"XML Namespaces
      Conformance\", 2009,\n               <http://www.w3.org/TR/2009/REC-xml-names-20091208/\n
      \              #Conformance>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [AAA-SAML]  Howlett, J. and S. Hartman, \"A
      RADIUS Attribute, Binding,\n               Profiles, Name Identifier Format,
      and Confirmation\n               Methods for SAML\", Work in Progress, July
      2013.\n   [RFC3986]   Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n
      \              Resource Identifier (URI): Generic Syntax\", STD 66, RFC\n               3986,
      January 2005.\n   [SASL-SAML] Cantor, S. and S. Josefsson, \"SAML Enhanced Client
      SASL\n               and GSS-API Mechanisms\", Work in Progress, September\n
      \              2013.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Authors' Addresses\n   Sam Hartman\n   Painless Security\n   EMail: hartmans-ietf@mit.edu\n
    \  Josh Howlett\n   JANET(UK)\n   EMail: josh.howlett@ja.net\n"
  title: Authors' Addresses
