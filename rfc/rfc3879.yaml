- contents:
  - '                    Deprecating Site Local Addresses

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes the issues surrounding the use of IPv6 site-\n
    \  local unicast addresses in their original form, and formally\n   deprecates
    them.  This deprecation does not prevent their continued\n   use until a replacement
    has been standardized and implemented.\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   For some time, the IPv6 working group has been debating
    a set of\n   issues surrounding the use of \"site local\" addresses.  In its meeting\n
    \  in March 2003, the group reached a measure of agreement that these\n   issues
    were serious enough to warrant a replacement of site local\n   addresses in their
    original form.  Although the consensus was far\n   from unanimous, the working
    group confirmed in its meeting in July\n   2003 the need to document these issues
    and the consequent decision to\n   deprecate IPv6 site-local unicast addresses.\n
    \  Site-local addresses are defined in the IPv6 addressing architecture\n   [RFC3513],
    especially in section 2.5.6.\n   The remainder of this document describes the
    adverse effects of\n   site-local addresses according to the above definition,
    and formally\n   deprecates them.\n   Companion documents will describe the goals
    of a replacement solution\n   and specify a replacement solution.  However, the
    formal deprecation\n   allows existing usage of site-local addresses to continue
    until the\n   replacement is standardized and implemented.\n   The key words \"MUST\",
    \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD
    NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to
    be interpreted as described in BCP 14, RFC 2119\n   [RFC2119].\n"
  title: 1.  Introduction
- contents:
  - "2.  Adverse Effects of Site Local Addresses\n   Discussions in the IPv6 working
    group outlined several defects of the\n   current site local addressing scope.
    \ These defects fall in two broad\n   categories: ambiguity of addresses, and
    fuzzy definition of sites.\n   As currently defined, site local addresses are
    ambiguous: an address\n   such as FEC0::1 can be present in multiple sites, and
    the address\n   itself does not contain any indication of the site to which it\n
    \  belongs.  This creates pain for developers of applications, for the\n   designers
    of routers and for the network managers.  This pain is\n   compounded by the fuzzy
    nature of the site concept.  We will develop\n   the specific nature of this pain
    in the following section.\n"
  - contents:
    - "2.1.  Developer Pain, Scope Identifiers\n   Early feedback from developers
      indicates that site local addresses\n   are hard to use correctly in an application.
      \ This is particularly\n   true for multi-homed hosts, which can be simultaneously
      connected to\n   multiple sites, and for mobile hosts, which can be successively\n
      \  connected to multiple sites.\n   Applications would learn or remember that
      the address of some\n   correspondent was \"FEC0::1234:5678:9ABC\", they would
      try to feed the\n   address in a socket address structure and issue a connect,
      and the\n   call will fail because they did not fill up the \"site identifier\"\n
      \  variable, as in \"FEC0::1234:5678:9ABC%1\".  (The use of the %\n   character
      as a delimiter for zone identifiers is specified in\n   [SCOPING].)  The problem
      is compounded by the fact that the site\n   identifier varies with the host
      instantiation, e.g., sometimes %1 and\n   sometimes %2, and thus that the host
      identifier cannot be remembered\n   in memory, or learned from a name server.\n
      \  In short, the developer pain is caused by the ambiguity of site local\n   addresses.
      \ Since site-local addresses are ambiguous, application\n   developers have
      to manage the \"site identifiers\" that qualify the\n   addresses of the hosts.
      \ This management of identifiers has proven\n   hard to understand by developers,
      and also hard to execute by those\n   developers who understand the concept.\n"
    title: 2.1.  Developer Pain, Scope Identifiers
  - contents:
    - "2.2.  Developer Pain, Local Addresses\n   Simple client/server applications
      that do share IP addresses at the\n   application layer are made more complex
      by IPv6 site-local\n   addressing.  These applications need to make intelligent
      decisions\n   about the addresses that should and shouldn't be passed across
      site\n   boundaries.  These decisions, in practice, require that the\n   applications
      acquire some knowledge of the network topology.  Site\n   local addresses may
      be used when client and server are in the same\n   site, but trying to use them
      when client and server are in different\n   sites may result in unexpected errors
      (i.e., connection reset by\n   peer) or the establishment of connections with
      the wrong node.  The\n   robustness and security implications of sending packets
      to an\n   unexpected end-point will differ from application to application.\n
      \  Multi-party applications that pass IP addresses at the application\n   layer
      present a particular challenge.  Even if a node can correctly\n   determine
      whether a single remote node belongs or not to the local\n   site, it will have
      no way of knowing where those addresses may\n   eventually be sent.  The best
      course of action for these applications\n   might be to use only global addresses.
      \ However, this would prevent\n   the use of these applications on isolated
      or intermittently connected\n   networks that only have site-local addresses
      available, and might be\n   incompatible with the use of site-local addresses
      for access control\n   in some cases.\n   In summary, the ambiguity of site
      local addresses leads to unexpected\n   application behavior when application
      payloads carry these addresses\n   outside the local site.\n"
    title: 2.2.  Developer Pain, Local Addresses
  - contents:
    - "2.3.  Manager Pain, Leaks\n   The management of IPv6 site local addresses is
      in many ways similar\n   to the management of RFC 1918 [RFC1918] addresses in
      some IPv4\n   networks.  In theory, the private addresses defined in RFC 1918\n
      \  should only be used locally, and should never appear in the Internet.\n   In
      practice, these addresses \"leak\".  The conjunction of leaks and\n   ambiguity
      ends up causing management problems.\n   Names and literal addresses of \"private\"
      hosts leak in mail messages,\n   web pages, or files.  Private addresses end
      up being used as source\n   or destination of TCP requests or UDP messages,
      for example in DNS or\n   trace-route requests, causing the request to fail,
      or the response to\n   arrive at unsuspecting hosts.\n   The experience with
      RFC 1918 addresses also shows some non trivial\n   leaks, besides placing these
      addresses in IP headers.  Private\n   addresses also end up being used as targets
      of reverse DNS queries\n   for RFC 1918, uselessly overloading the DNS infrastructure.
      \ In\n   general, many applications that use IP addresses directly end up\n
      \  passing RFC 1918 addresses in application payloads, creating\n   confusion
      and failures.\n   The leakage issue is largely unavoidable.  While some applications\n
      \  are intrinsically scoped (e.g., Router Advertisement, Neighbor\n   Discovery),
      most applications have no concept of scope, and no way of\n   expressing scope.
      \ As a result, \"stuff leaks across the borders\".\n   Since the addresses are
      ambiguous, the network managers cannot easily\n   find out \"who did it\".  Leaks
      are thus hard to fix, resulting in a\n   lot of frustration.\n"
    title: 2.3.  Manager Pain, Leaks
  - contents:
    - "2.4.  Router Pain, Increased Complexity\n   The ambiguity of site local addresses
      also creates complications for\n   the routers.  In theory, site local addresses
      are only used within a\n   contiguous site, and all routers in that site can
      treat them as if\n   they were not ambiguous.  In practice, special mechanisms
      are needed\n   when sites are disjoint, or when routers have to handle several\n
      \  sites.\n   In theory, sites should never be disjoint.  In practice, if site\n
      \  local addressing is used throughout a large network, some elements of\n   the
      site will not be directly connected for example, due to network\n   partitioning.
      \ This will create a demand to route the site-local\n   packets across some
      intermediate network (such as the backbone area)\n   that cannot be dedicated
      for a specific site.  In practice, this\n   leads to an extensive use of tunneling
      techniques, or the use of\n   multi-sited routers, or both.\n   Ambiguous addresses
      have fairly obvious consequences on multi-sited\n   routers.  In classic router
      architecture, the exit interface is a\n   direct function of the destination
      address, as specified by a single\n   routing table.  However, if a router is
      connected to multiple sites,\n   the routing of site local packets depends on
      the interface on which\n   the packet arrived.  Interfaces have to be associated
      to sites, and\n   the routing entries for the site local addresses are site-dependent.\n
      \  Supporting this requires special provisions in routing protocols and\n   techniques
      for routing and forwarding table virtualization that are\n   normally used for
      VPNs.  This contributes to additional complexity of\n   router implementation
      and management.\n   Network management complexity is also increased by the fact
      that\n   though sites could be supported using existing routing constructs--\n
      \  such as domains and areas--the factors driving creation and setting\n   the
      boundaries of sites are different from the factors driving those\n   of areas
      and domains.\n   In multi-homed routers, such as for example site border routers,
      the\n   forwarding process should be complemented by a filtering process, to\n
      \  guarantee that packets sourced with a site local address never leave\n   the
      site.  This filtering process will in turn interact with the\n   forwarding
      of packets, for example if implementation defects cause\n   the drop of packets
      sent to a global address, even if that global\n   address happen to belong to
      the target site.\n   In summary, the ambiguity of site local addresses makes
      them hard to\n   manage in multi-sited routers, while the requirement to support\n
      \  disjoint sites and existing routing protocol constructs creates a\n   demand
      for such routers.\n"
    title: 2.4.  Router Pain, Increased Complexity
  - contents:
    - "2.5.  Site is an Ill-Defined Concept\n   The current definition of scopes follows
      an idealized \"concentric\n   scopes\" model.  Hosts are supposed to be attached
      to a link, which\n   belongs to a site, which belongs to the Internet.  Packets
      could be\n   sent to the same link, the same site, or outside that site.  However,\n
      \  experts have been arguing about the definition of sites for years and\n   have
      reached no sort of consensus.  That suggests that there is in\n   fact no consensus
      to be reached.\n   Apart from link-local, scope boundaries are ill-defined.
      \ What is a\n   site? Is the whole of a corporate network a site, or are sites\n
      \  limited to single geographic locations? Many networks today are split\n   between
      an internal area and an outside facing \"DMZ\", separated by a\n   firewall.
      \ Servers in the DMZ are supposedly accessible by both the\n   internal hosts
      and external hosts on the Internet.  Does the DMZ\n   belong to the same site
      as the internal host?\n   Depending on whom we ask, the definition of the site
      scope varies.\n   It may map security boundaries, reachability boundaries, routing\n
      \  boundaries, QOS boundaries, administrative boundaries, funding\n   boundaries,
      some other kinds of boundaries, or a combination of\n   these.  It is very unclear
      that a single scope could satisfy all\n   these requirements.\n   There are
      some well known and important scope-breaking phenomena,\n   such as intermittently
      connected networks, mobile nodes, mobile\n   networks, inter-domain VPNs, hosted
      networks, network merges and\n   splits, etc.  Specifically, this means that
      scope *cannot* be mapped\n   into concentric circles such as a naive link/local/global
      model.\n   Scopes overlap and extend into one another.  The scope relationship\n
      \  between two hosts may even be different for different protocols.\n   In summary,
      the current concept of site is naive, and does not map\n   operational requirements.\n"
    title: 2.5.  Site is an Ill-Defined Concept
  title: 2.  Adverse Effects of Site Local Addresses
- contents:
  - "3.  Development of a Better Alternative\n   The previous section reviewed the
    arguments against site-local\n   addresses.  Obviously, site locals also have
    some benefits, without\n   which they would have been removed from the specification
    long ago.\n   The perceived benefits of site local are that they are simple,\n
    \  stable, and private.  However, it appears that these benefits can be\n   also
    obtained with an alternative architecture, for example\n   [Hinden/Haberman],
    in which addresses are not ambiguous and do not\n   have a simple explicit scope.\n
    \  Having non-ambiguous address solves a large part of the developers'\n   pain,
    as it removes the need to manage site identifiers.  The\n   application can use
    the addresses as if they were regular global\n   addresses, and the stack will
    be able to use standard techniques to\n   discover which interface should be used.
    \ Some level of pain will\n   remain, as these addresses will not always be reachable;
    however,\n   applications can deal with the un-reachability issues by trying\n
    \  connections at a different time, or with a different address.\n   Speculatively,
    a more sophisticated scope mechanism might be\n   introduced at a later date.\n
    \  Having non ambiguous addresses will not eliminate the leaks that\n   cause
    management pain.  However, since the addresses are not\n   ambiguous, debugging
    these leaks will be much simpler.\n   Having non ambiguous addresses will solve
    a large part of the router\n   issues: since addresses are not ambiguous, routers
    will be able to\n   use standard routing techniques, and will not need different
    routing\n   tables for each interface.  Some of the pain will remain at border\n
    \  routers, which will need to filter packets from some ranges of source\n   addresses;
    this is however a fairly common function.\n   Avoiding the explicit declaration
    of scope will remove the issues\n   linked to the ambiguity of the site concept.
    \ Non-reachability can be\n   obtained by using \"firewalls\" where appropriate.
    \ The firewall rules\n   can explicitly accommodate various network configurations,
    by\n   accepting of refusing traffic to and from ranges of the new non-\n   ambiguous
    addresses.\n   One question remains, anycast addressing.  Anycast addresses are\n
    \  ambiguous by construction, since they refer by definition to any host\n   that
    has been assigned a given anycast address.  Link-local or global\n   anycast addresses
    can be \"baked in the code\".  Further study is\n   required on the need for anycast
    addresses with scope between link-\n   local and global.\n"
  title: 3.  Development of a Better Alternative
- contents:
  - "4.  Deprecation\n   This document formally deprecates the IPv6 site-local unicast
    prefix\n   defined in [RFC3513], i.e., 1111111011 binary or FEC0::/10.  The\n
    \  special behavior of this prefix MUST no longer be supported in new\n   implementations.
    \ The prefix MUST NOT be reassigned for other use\n   except by a future IETF
    standards action.  Future versions of the\n   addressing architecture [RFC3513]
    will include this information.\n   However, router implementations SHOULD be configured
    to prevent\n   routing of this prefix by default.\n   The references to site local
    addresses should be removed as soon as\n   practical from the revision of the
    Default Address Selection for\n   Internet Protocol version 6 [RFC3484], the revision
    of the Basic\n   Socket Interface Extensions for IPv6 [RFC3493], and from the
    revision\n   of the Internet Protocol Version 6 (IPv6) Addressing Architecture\n
    \  [RFC3513].  Incidental references to site local addresses should be\n   removed
    from other IETF documents if and when they are updated.\n   These documents include
    [RFC2772, RFC2894, RFC3082, RFC3111, RFC3142,\n   RFC3177, and RFC3316].\n   Existing
    implementations and deployments MAY continue to use this\n   prefix.\n"
  title: 4.  Deprecation
- contents:
  - "5.  Security Considerations\n   The use of ambiguous site-local addresses has
    the potential to\n   adversely affect network security through leaks, ambiguity
    and\n   potential misrouting, as documented in section 2.  Deprecating the\n   use
    of ambiguous addresses helps solving many of these problems.\n   The site-local
    unicast prefix allows for some blocking action in\n   firewall rules and address
    selection rules, which are commonly viewed\n   as a security feature since they
    prevent packets crossing\n   administrative boundaries.  Such blocking rules can
    be configured for\n   any prefix, including the expected future replacement for
    the site-\n   local prefix.  If these blocking rules are actually enforced, the\n
    \  deprecation of the site-local prefix does not endanger security.\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   IANA is requested to mark the FEC0::/10 prefix as
    \"deprecated\",\n   pointing to this document.  Reassignment of the prefix for
    any usage\n   requires justification via an IETF Standards Action [RFC2434].\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Acknowledgements\n   The authors would like to thank Fred Templin, Peter
    Bieringer,\n   Chirayu Patel, Pekka Savola, and Alain Baudot for their review
    of the\n   initial version of the document.  The text of section 2.2 includes
    2\n   paragraphs taken from a version by Margaret Wasserman describing the\n   impact
    of site local addressing.  Alain Durand pointed out the need\n   to revise existing
    RFC that make reference to site local addresses.\n"
  title: 7.  Acknowledgements
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]         Bradner, S., \"Key words for
      use in RFCs to Indicate\n                     Requirement Levels\", BCP 14,
      RFC 2119, March 1997.\n   [RFC2434]         Narten, T. and H. Alvestrand, \"Guidelines
      for\n                     Writing an IANA Considerations Section in RFCs\",\n
      \                    BCP 26, RFC 2434, October 1998.\n   [RFC3513]         Hinden,
      R. and S. Deering, \"Internet Protocol\n                     Version 6 (IPv6)
      Addressing Architecture\", RFC\n                     3513, April 2003.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC1918]         Rekhter, Y., Moskowitz,
      B., Karrenberg, D., de\n                     Groot, G., and E. Lear, \"Address
      Allocation for\n                     Private Internets\", BCP 5, RFC 1918, February
      1996.\n   [RFC2772]         Rockell, R. and R. Fink, \"6Bone Backbone Routing\n
      \                    Guidelines\", RFC 2772, February 2000.\n   [RFC2894]         Crawford,
      M., \"Router Renumbering for IPv6\", RFC\n                     2894, August
      2000.\n   [RFC3082]         Kempf, J. and J. Goldschmidt, \"Notification and\n
      \                    Subscription for SLP\", RFC 3082, March 2001.\n   [RFC3111]
      \        Guttman, E., \"Service Location Protocol\n                     Modifications
      for IPv6\", RFC 3111, May 2001.\n   [RFC3142]         Hagino, J. and K. Yamamoto,
      \"An IPv6-to-IPv4\n                     Transport Relay Translator\", RFC 3142,
      June 2001.\n   [RFC3177]         IAB and IESG, \"IAB/IESG Recommendations on
      IPv6\n                     Address\", RFC 3177, September 2001.\n   [RFC3316]
      \        Arkko, J., Kuijpers, G., Soliman, H., Loughney, J.,\n                     and
      J. Wiljakka, \"Internet Protocol Version 6\n                     (IPv6) for
      Some Second and Third Generation\n                     Cellular Hosts\", RFC
      3316, April 2003.\n   [RFC3484]         Draves, R., \"Default Address Selection
      for Internet\n                     Protocol version 6 (IPv6)\", RFC 3484, February\n
      \                    2003.\n   [RFC3493]         Gilligan, R., Thomson, S.,
      Bound, J., McCann, J.,\n                     and W. Stevens, \"Basic Socket
      Interface Extensions\n                     for IPv6\", RFC 3493, February 2003.\n
      \  [Hinden/Haberman] Hinden, R. and B. Haberman, \"Unique Local IPv6\n                     Unicast
      Addresses\", Work in Progress, June 2004.\n   [SCOPING]         Deering, S.,
      Haberman, B., Jinmei, T., Nordmark,\n                     E., and B. Zill, \"IPv6
      Scoped Address\n                     Architecture\", Work in Progress, August
      2004.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "9.  Authors' Addresses\n   Christian Huitema\n   Microsoft Corporation\n   One
    Microsoft Way\n   Redmond, WA 98052-6399\n   USA\n   EMail: huitema@microsoft.com\n
    \  Brian Carpenter\n   IBM Corporation\n   Sauemerstrasse 4\n   8803 Rueschlikon\n
    \  Switzerland\n   EMail: brc@zurich.ibm.com\n"
  title: 9.  Authors' Addresses
- contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n
    \  This document is subject to the rights, licenses and restrictions\n   contained
    in BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE\n   REPRESENTS OR IS
    SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING TASK
    FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED
    TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: 10.  Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the IETF's procedures with respect
    to rights in IETF Documents can\n   be found in BCP 78 and BCP 79.\n   Copies
    of IPR disclosures made to the IETF Secretariat and any\n   assurances of licenses
    to be made available, or the result of an\n   attempt made to obtain a general
    license or permission for the use of\n   such proprietary rights by implementers
    or users of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
