The Use of 'Set Data Type' Transaction in File Transfer Protocol As mentioned in RFC 265, the opcode of '00' is set aside for the clarify the use of 'set data type' in file transfer operations.
In many systems such as Multics at MIT, there is no provision to identify the type of data (i.e., ASCII or numeric) stored in files.
The manner in which the data is handled is context dependent.
ASCII characters are stored as four 9 bit characters per 36 bit word, right justified with left most bit as zero.
As efficient conversion programs exists in Multics for conversion of data from Multics' ASCII into Network ASCII, it would be useful for a user to be able to instruct the Multics server to convert data into Network ASCII in retrieve operations.
It is suggested that the 'set data type' transaction be used for this purpose.
The 'set data type' transaction preceding a retrieve request should be interpreted by a server to mean that the user wants to receive his data in that form.
[ direction of Alex McKenzie.
The following examples should clarify the use of 'set data type' transactions.
File X (in Network ASCII)
End of File   Acknowledge   Retrieve File X   File X in Network
Set data type '00' ("bit stream")
File Y as stored (no conversion)
End of File   Set data type '02' (Network ASCII)
File Z in Network ASCII
