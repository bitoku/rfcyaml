- contents:
  - ' A Standard for the Transmission of IP Datagrams over Ethernet Networks

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This RFC specifies a standard method of encapsulating
    Internet\n   Protocol (IP) [1] datagrams on an Ethernet [2].  This RFC specifies
    a\n   standard protocol for the ARPA-Internet community.\n"
  title: Status of this Memo
- contents:
  - "Introduction\n   This memo applies to the Ethernet (10-megabit/second, 48-bit\n
    \  addresses).  The procedure for transmission of IP datagrams on the\n   Experimental
    Ethernet (3-megabit/second, 8-bit addresses) is\n   described in [3].\n"
  title: Introduction
- contents:
  - "Frame Format\n   IP datagrams are transmitted in standard Ethernet frames.  The
    type\n   field of the Ethernet frame must contain the value hexadecimal 0800.\n
    \  The data field contains the IP header followed immediately by the IP\n   data.\n
    \  The minimum length of the data field of a packet sent over an\n   Ethernet
    is 46 octets.  If necessary, the data field should be padded\n   (with octets
    of zero) to meet the Ethernet minimum frame size.  This\n   padding is not part
    of the IP packet and is not included in the total\n   length field of the IP header.\n
    \  The minimum length of the data field of a packet sent over an\n   Ethernet
    is 1500 octets, thus the maximum length of an IP datagram\n   sent over an Ethernet
    is 1500 octets.  Implementations are encouraged\n   to support full-length packets.
    \ Gateway implementations MUST be\n   prepared to accept full-length packets and
    fragment them if\n   necessary.  If a system cannot receive full-length packets,
    it should\n   take steps to discourage others from sending them, such as using
    the\n   TCP Maximum Segment Size option [4].\n   Note:  Datagrams on the Ethernet
    may be longer than the general\n   Internet default maximum packet size of 576
    octets.  Hosts connected\n   to an Ethernet should keep this in mind when sending
    datagrams to\n   hosts not on the same Ethernet.  It may be appropriate to send\n
    \  smaller datagrams to avoid unnecessary fragmentation at intermediate\n   gateways.
    \ Please see [4] for further information on this point.\n"
  title: Frame Format
- contents:
  - "Address Mappings\n   The mapping of 32-bit Internet addresses to 48-bit Ethernet
    addresses\n   can be done several ways.  A static table could be used, or a dynamic\n
    \  discovery procedure could be used.\n   Static Table\n      Each host could
    be provided with a table of all other hosts on the\n      local network with both
    their Ethernet and Internet addresses.\n   Dynamic Discovery\n      Mappings between
    32-bit Internet addresses and 48-bit Ethernet\n      addresses could be accomplished
    through the Address Resolution\n      Protocol (ARP) [5].  Internet addresses
    are assigned arbitrarily\n      on some Internet network.  Each host's implementation
    must know\n      its own Internet address and respond to Ethernet Address\n      Resolution
    packets appropriately.  It should also use ARP to\n      translate Internet addresses
    to Ethernet addresses when needed.\n   Broadcast Address\n      The broadcast
    Internet address (the address on that network with a\n      host part of all binary
    ones) should be mapped to the broadcast\n      Ethernet address (of all binary
    ones, FF-FF-FF-FF-FF-FF hex).\n   The use of the ARP dynamic discovery procedure
    is strongly\n   recommended.\n"
  title: Address Mappings
- contents:
  - "Trailer Formats\n   Some versions of Unix 4.2bsd use a different encapsulation
    method in\n   order to get better network performance with the VAX virtual memory\n
    \  architecture.  Consenting systems on the same Ethernet may use this\n   format
    between themselves.\n   No host is required to implement it, and no datagrams
    in this format\n   should be sent to any host unless the sender has positive knowledge\n
    \  that the recipient will be able to interpret them.  Details of the\n   trailer
    encapsulation may be found in [6].\n   (Note:  At the present time Unix 4.2bsd
    will either always use\n   trailers or never use them (per interface), depending
    on a boot-time\n   option.  This is expected to be changed in the future.  Unix
    4.2bsd\n   also uses a non-standard Internet broadcast address with a host part\n
    \  of all zeroes, this may also be changed in the future.)\n"
  title: Trailer Formats
- contents:
  - "Byte Order\n   As described in Appendix B of the Internet Protocol\n   specification
    [1], the IP datagram is transmitted over the Ethernet\n   as a series of 8-bit
    bytes.\n"
  title: Byte Order
- contents:
  - "References\n   [1]  Postel, J., \"Internet Protocol\", RFC-791, USC/Information\n
    \  Sciences Institute, September 1981.\n   [2]  \"The Ethernet - A Local Area
    Network\", Version 1.0, Digital\n   Equipment Corporation, Intel Corporation,
    Xerox Corporation,\n   September 1980.\n   [3]  Postel, J., \"A Standard for the
    Transmission of IP Datagrams\n   over Experimental Ethernet Networks\", RFC-895,
    USC/Information\n   Sciences Institute, April 1984.\n   [4]  Postel, J., \"The
    TCP Maximum Segment Size Option and Related\n   Topics\", RFC-879, USC/Information
    Sciences Institute, November 1983.\n   [5]  Plummer, D., \"An Ethernet Address
    Resolution Protocol\", RFC-826,\n   Symbolics Cambridge Research Center, November
    1982.\n   [6]  Leffler, S., and M. Karels, \"Trailer Encapsulations\", RFC-893,\n
    \  University of California at Berkeley, April 1984.\n"
  title: References
