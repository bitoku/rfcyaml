- title: __initial_text__
  contents:
  - '                   IP over InfiniBand: Connected Mode

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies transmission of IPv4/IPv6 packets and address\n\
    \   resolution over the connected modes of InfiniBand.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. IPoIB-connected Mode ............................................3\n  \
    \    2.1. Multicasting ...............................................3\n    \
    \  2.2. Outline of Address Resolution ..............................4\n      2.3.\
    \ Outline of Connection Setup ................................4\n   3. Address\
    \ Resolution ..............................................4\n      3.1. Link-layer\
    \ Address .........................................4\n      3.2. IB Connection\
    \ Setup ........................................6\n      3.3. Simultaneous IB\
    \ Connections ................................6\n      3.4. IPoIB-CM IB Connection\
    \ Teardown ............................7\n      3.5. Service-ID .................................................7\n\
    \   4. Frame Format ....................................................8\n  \
    \ 5. Maximum Transmission Unit .......................................8\n    \
    \  5.1. Per-Connection MTU .........................................9\n   6. Private-Data\
    \ Format .............................................9\n   7. IPoIB-CM Considerations\
    \ ........................................10\n      7.1. A Cautionary Note on\
    \ IPoIB-RC .............................10\n      7.2. IPoIB-CM Per-Destination\
    \ MTU ..............................10\n   8. Security Considerations ........................................11\n\
    \   9. IANA Considerations ............................................11\n  \
    \ 10. Acknowledgements ..............................................11\n   11.\
    \ Normative References ..........................................11\n   12. Informative\
    \ References ........................................11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The InfiniBand specification [IB_ARCH] can be found at\n\
    \   www.infinibandta.org.  The document [RFC4392] provides a short\n   overview\
    \ of InfiniBand architecture along with consideration for\n   specifying IP over\
    \ InfiniBand networks.\n   The InfiniBand Architecture (IBA) defines multiple\
    \ modes of\n   transports.  Of these the unreliable datagram (UD) transport method\n\
    \   best matches the needs of IP.  IP over InfiniBand (IPoIB) over UD is\n   described\
    \ in [RFC4391].  This document describes IP transmission over\n   the connected\
    \ modes of IBA.\n   IBA defines two connected modes:\n      1.  Reliable Connected\
    \ (RC)\n      2.  Unreliable Connected (UC)\n   As is evident from the nomenclature,\
    \ the two modes differ mainly in\n   providing reliability of data delivery across\
    \ the connection.  This\n   document applies equally to both the connected modes.\
    \  IPoIB over\n   these two modes is referred to as IPoIB-CM (connected mode)\
    \ in this\n   document.  For clarity, IPoIB over the unreliable datagram mode\
    \ as\n   described in [RFC4391] is referred to as IPoIB-UD.\n   IBA requires that\
    \ all Host Channel Adapters (HCAs) support the\n   reliable and unreliable connected\
    \ modes [IB_ARCH].  It is optional\n   for Target Channel Adapters (TCAs) to support\
    \ the connected modes.\n   The connected modes offer link MTUs of up to 2^31 octets\
    \ in length.\n   Thus, the use of connected modes can offer significant benefits\
    \ by\n   supporting reasonably large MTUs.  The datagram modes of InfiniBand\n\
    \   Architecture (IBA) are limited to 4096 octets.\n   Reliability is also enhanced\
    \ if the underlying feature of \"automatic\n   path migration\" supported by the\
    \ connected modes is utilized.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  IPoIB-connected Mode
  contents:
  - "2.  IPoIB-connected Mode\n   IPoIB over connected mode is an OPTIONAL extension\
    \ to IPoIB-UD.\n   Every IPoIB implementation MUST support [RFC4391] and MAY support\
    \ the\n   extensions described in this document.\n   Therefore, IP encapsulation,\
    \ default MTU, link-layer address format,\n   and the IPv6 stateless autoconfiguration\
    \ mechanism apply to IPoIB-CM\n   exactly as described in [RFC4391].\n"
- title: 2.1.  Multicasting
  contents:
  - "2.1.  Multicasting\n   The connected modes of IBA define a non-broadcast, multiple-access\n\
    \   network.  The connected modes of IBA do not support multicasting\n   though\
    \ every node can communicate with every other node if desired.\n   This requires\
    \ that multicasting be emulated in some form by the\n   network.  However, in\
    \ the case of an InfiniBand network, instead of\n   an emulation, an unreliable\
    \ datagram (UD) queue pair (QP) can be used\n   to support multicasting while\
    \ the connected mode QP is used for\n   unicast traffic.  Since every IPoIB implementation\
    \ is required to\n   support the UD mode, every implementation supporting IPoIB-CM\
    \ will be\n   able to utilize the pre-existing IPoIB-UD QP for all\n   broadcast/multicast\
    \ communications.  Multicast mapping, transmission,\n   and reception of multicast\
    \ packets and multicast routing MUST use the\n   UD QP associated with the IPoIB\
    \ interface.\n"
- title: 2.2.  Outline of Address Resolution
  contents:
  - "2.2.  Outline of Address Resolution\n   Every IPoIB-CM interface MUST have two\
    \ sets of QPs associated with\n   it:\n      1) One unreliable datagram QP\n \
    \     2) One or more connected mode QPs\n   [RFC4391] describes the address resolution\
    \ method to determine the\n   link address of the peer.  This response is received\
    \ on the UD QP\n   associated with the IPoIB interface.\n"
- title: 2.3.  Outline of Connection Setup
  contents:
  - "2.3.  Outline of Connection Setup\n   Once the link address of the remote node\
    \ is known, an IB connection\n   must be set up between the nodes before any IP\
    \ communication may\n   occur.\n   To make a connection, the sender must know\
    \ the service-ID to use in\n   the request to make a connection [IB_ARCH].  It\
    \ must also supply the\n   \"connection mode\" queue pair to the remote node.\
    \  The peer replies\n   with its queue pair.  Each IB connection is peer to peer\
    \ and uses one\n   connected mode QP at each end.\n   Though the address resolution\
    \ occurs at an individual IP address\n   level, the connection between the nodes\
    \ is at the IB layer.\n   Therefore, every individual address resolution does\
    \ not imply a new\n   connection between the peers.\n"
- title: 3.  Address Resolution
  contents:
  - "3.  Address Resolution\n   Address resolution queries are sent out on the \"\
    broadcast-GID\"\n   (Broadcast-Group Identifier) over the UD QP associated with\
    \ the IPoIB\n   interface [RFC4391].  A unicast reply is received on the UD QP.\n"
- title: 3.1.  Link-layer Address
  contents:
  - "3.1.  Link-layer Address\n   IPoIB encapsulation [RFC4391] describes the link-layer\
    \ address as\n   follows:\n      <1 octet reserved>:QP: GID\n   This document\
    \ extends the link-layer address as follows:\n      <Flags>:QPN:GID\n   Flags:\n\
    \      This is a single-octet field.  The bits indicate the connected\n      modes\
    \ supported by the interface.\n      Bit 0 specifies the support for the \"reliable\
    \ connected\" (RC)\n      mode.  Bit 1 indicates the support for the \"unreliable\
    \ connected\"\n      (UC) mode.  All other bits in the octet are reserved and\
    \ MUST be\n      set to 0 on transmits and ignored on receives.  The format of\
    \ the\n      flags is as follows:\n                +--+--+--+--+--+--+--+--+\n\
    \                |RC|UC| 0| 0| 0| 0| 0| 0|\n                +--+--+--+--+--+--+--+--+\n\
    \      Both the RC and UC MAY be set at the same time if the interface\n     \
    \ supports both the modes.  Since the IPoIB-UD mode is always\n      supported,\
    \ there are no flags to indicate IPoIB-UD support.\n      If IPoIB-CM is not supported,\
    \ i.e., if the implementation only\n      supports IPoIB-UD, then the implementation\
    \ MUST ignore the <Flags>\n      on reception.  It MUST set the <Flags> octet\
    \ to all zeros on\n      transmission as specified in [RFC4391].\n   QPN:\n  \
    \    The queue-pair number (QPN) on which the unicast address\n      resolution\
    \ replies will be received [RFC4391].  An IPoIB interface\n      has only one\
    \ UD QP associated with it whether or not it supports\n      this extension.\n\
    \      The QPN also serves another purpose.  It is used to form the\n      Service-ID\
    \ that is used to set up the IB connection.\n   On receiving the multicast/broadcast\
    \ address resolution request, the\n   receiver replies with its own link address,\
    \ including the associated\n   UD QPN and the appropriate flags.\n   The receiver's\
    \ reply is unicast back to the sender after the receiver\n   has, as in the case\
    \ of IPoIB-UD, resolved the GID to the Local\n   Identifier (LID), and determined\
    \ other required parameters [RFC4391].\n   Once the address resolution is completed,\
    \ the underlying IB\n   connection on the supported connection modes can be set\
    \ up.  An\n   implementation is NOT REQUIRED to set up a connection merely because\n\
    \   the peer indicates the capability.  The decision to make such a\n   connection\
    \ is left to the implementation.\n"
- title: 3.2.  IB Connection Setup
  contents:
  - "3.2.  IB Connection Setup\n   Once the address resolution is complete, the IB\
    \ connection can be set\n   up by either of the peers.  To set up a connection,\
    \ IB Management\n   Datagrams (MADs) are directed to the peer's communication\
    \ manager\n   (CM).  The connection request always contains a Service-ID for the\n\
    \   peer to associate the request with the appropriate service.  If the\n   request\
    \ is accepted, the peer returns the relevant connected mode QPN\n   in the response\
    \ MAD.  The format of the CM connection messages and\n   the IB connection setup\
    \ process is described in [IB_ARCH].  The\n   overall handshake is of the form:\n\
    \             REQ ---->\n                  <---- REP [or REJ(reject)]\n      \
    \       RTA ---->\n             [or REJ(reject)]\n   The CM messages include,\
    \ among other parameters, the Service-ID,\n   Local connection-mode QPN, and the\
    \ payload size to use over the\n   connection.\n   Note: The IB connection is\
    \ set up using the Service-ID as defined in\n         Section 3.5 below.  The\
    \ node MUST keep a record of IB\n         connections it is participating in.\
    \  The node MAY attempt\n         another connection to the remote peer using\
    \ the same Service-ID\n         as used for an existing IB connection.  Similarly,\
    \ the receiver\n         of such a connection MAY drop the request with a suitable\
    \ error\n         indication in the CM response.  The decision to accept or\n\
    \         initiate multiple connections from or to an IPoIB interface is\n   \
    \      left to the implementation.\n   The node that initiated the connection\
    \ is aware of the target node's\n   IP address as described above.  The node receiving\
    \ the IB connection\n   request, however, cannot determine the initiating node's\
    \ link\n   address.  To enable this determination, every CM message exchanged\
    \ in\n   setting up the IB connection MUST include the sender's IPoIB-UD QPN\n\
    \   in the \"private data\" [IB_ARCH] field.  The IPoIB-UD QPN MUST be\n   included\
    \ in all \"REJ\" [IB_ARCH] messages too.\n"
- title: 3.3.  Simultaneous IB Connections
  contents:
  - "3.3.  Simultaneous IB Connections\n   To ensure that two IB connections are not\
    \ set up between the peers\n   due to REQ crossing, the following rules MUST be\
    \ followed:\n      The receiver forms the remote node's link-layer address using\
    \ the\n      UD QPN received in the \"private data\" field of the \"REQ\" message\n\
    \      and the GID of the sender included in the \"REQ\" message.  The\n     \
    \ link-layer address is used to determine if there is already an\n      outstanding\
    \ connection request \"REQ\" sent by the local interface\n      to the given received\
    \ link-layer address.  If such an outstanding\n      request is determined, then\
    \ the two link-layer addresses (local\n      and remote) are numerically compared.\
    \  If the local link-layer\n      address is numerically smaller, then the connection\
    \ is accepted,\n      otherwise rejected.  The error code in \"REJ\" MAD is set\
    \ to\n      \"Consumer Reject\" [IB_ARCH].\n      Note: The link-layer addresses\
    \ formed for comparison zero out the\n            connection mode flags specified\
    \ in Section 3.1.  The\n            comparison is performed from the most significant\
    \ octet to\n            the least significant octet of the link-layer address.\n\
    \      The above holds even if the receiver supports multiple IB\n      connections\
    \ from the same peer.  This is to ensure that only one\n      more connection\
    \ is set up when the \"REQ\" messages cross.\n"
- title: 3.4.  IPoIB-CM IB Connection Teardown
  contents:
  - "3.4.  IPoIB-CM IB Connection Teardown\n   IB connections created through IPoIB-CM\
    \ are considered part of an\n   IPoIB interface.  As such, they SHOULD be torn\
    \ down when the IPoIB\n   interfaces they are associated with are torn down.\n\
    \   Furthermore, the IB connection between two peers MAY be torn down by\n   either\
    \ peer whenever the address resolution entry expires.  An\n   implementation is\
    \ free to implement alternative policies for tearing\n   down of IB connections\
    \ between peers.\n"
- title: 3.5.  Service-ID
  contents:
  - "3.5.  Service-ID\n   The InfiniBand specification defines a block of Service-IDs\
    \ for IETF\n   use.  The InfiniBand specification has left the definition and\n\
    \   management of this block to the IETF [IB_ARCH].  The 64-bit block is\n   as\
    \ follows:\n  +--------+--------+--------+--------+-------+--------+--------+------+\n\
    \  |00000001|<-------------------IETF use------------------------------>|\n  +--------+--------+--------+--------+-------+--------+--------+------+\n\
    \   The Service-IDs used by IPoIB will be in the following format:\n  +--------+--------+--------+--------+-------+-------+--------+-------+\n\
    \  |00000001|  Type  |         Reserved        |        QPN             |\n  +--------+--------+--------+--------+-------+-------+--------+-------+\n\
    \         The \"Type\" field MUST be set to 0.\n         The \"Reserved\" field\
    \ MUST be set to zeros.\n         The QPN MUST be the UD QP exchanged during address\
    \ resolution.\n"
- title: 4.  Frame Format
  contents:
  - "4.  Frame Format\n   All IP datagrams transported over InfiniBand are prefixed\
    \ by a\n   4-octet encapsulation header as described in [RFC4391].\n     0   \
    \                1                   2                   3\n     0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                               |                               |\n    \
    \ |         Type                  |       Reserved                |\n     |  \
    \                             |                               |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         The type field SHALL indicate the encapsulated protocol as per\n   \
    \      the following table.\n                         +----------+-------------+\n\
    \                         | Type     |    Protocol |\n                       \
    \  |------------------------|\n                         | 0x800    |    IPv4 \
    \    |\n                         |------------------------|\n                \
    \         | 0x86DD   |    IPv6     |\n                         +------------------------+\n\
    \   These values are taken from the \"ETHER TYPE\" numbers assigned by\n   Internet\
    \ Assigned Numbers Authority (IANA).  Other network protocols,\n   identified\
    \ by different values of \"ETHER TYPE\", may use the\n   encapsulation format\
    \ defined herein, but such use is outside of the\n   scope of this document.\n"
- title: 5.  Maximum Transmission Unit
  contents:
  - "5.  Maximum Transmission Unit\n   The IB connection setup might be used for both\
    \ IPv4 and IPv6 or it\n   could be used for only one of them while a different\
    \ connection is\n   used for the other.  The link MTU MUST be able to support\
    \ the minimum\n   MTU required by the protocols.\n   The default MTU of the IPoIB-CM\
    \ interface is 2044 octets, i.e.,\n   2048-octet IPoIB-link MTU minus the 4-octet\
    \ encapsulation header.\n   However, connected modes of InfiniBand allow message\
    \ sizes up to 2^31\n   octets.  Therefore, IPoIB-CM can use a much larger MTU\
    \ for unicast\n   communication between any two endpoints.  The maximum and/or\
    \ optimal\n   payload that can be received or sent over an InfiniBand connection\
    \ is\n   dependent on the implementation, IB Channel Adapter, and the\n   resources\
    \ configured.\n   An implementation MAY utilize the following mechanism to exchange\
    \ the\n   optimal message size across the IB connection.\n"
- title: 5.1.  Per-Connection MTU
  contents:
  - "5.1.  Per-Connection MTU\n   Every IB connection setup message includes a \"\
    private data\" field\n   [IB_ARCH].  The \"private data\" field in the connection\
    \ setup message\n   (CM REQ) MUST include the \"Receive MTU\".  This indicates\
    \ the maximum\n   packet size the requester can accept.  The requester MUST be\
    \ able to\n   accept smaller MTU sizes as well.\n   It is up to the implementation\
    \ to utilize this mechanism for setting\n   the per-IB connection MTU.  To calculate\
    \ the resultant IPoIB MTU over\n   the connection the smaller of the two IB \"\
    Receive MTU\" values is used\n   by both the peers.  The IPoIB interface must\
    \ also account for the 4-\n   octet encapsulation header and so the IPoIB MTU\
    \ over the connection\n   will be further reduced by that amount.\n"
- title: 6.  Private-Data Format
  contents:
  - "6.  Private-Data Format\n   The \"private data\" field in every CM message for\
    \ connection\n   establishment must include the following values:\n      1.  UD\
    \ QPN of the sender\n      2.  Receive MTU supported by the sender\n   The format\
    \ of the \"private data\" field MUST be as follows:\n            0        7  \
    \     15       23       31\n            +--------+--------+--------+--------+\n\
    \            |Reserved|         UD QPN           |\n            +--------+--------+--------+--------+\n\
    \            |            Receive MTU            |\n            +--------+--------+--------+--------+\n\
    \   The Reserved value MUST be set to zero on transmit and ignored on\n   receive.\n"
- title: 7.  IPoIB-CM Considerations
  contents:
  - "7.  IPoIB-CM Considerations\n   Every IPoIB interface supports IPoIB-UD.  It\
    \ may additionally support\n   one or both of the IPoIB-CM modes.  Therefore,\
    \ there can be multiple\n   methods of communicating between any two peers.  This\
    \ implies that an\n   interface MAY transmit/receive a packet over any of the\
    \ RC, UC, or UD\n   modes depending on the modes supported between it and the\
    \ peer.  It\n   further follows that every IPoIB implementation compliant with\
    \ this\n   document MUST accept all IP unicast transmissions over any of the\n\
    \   IPoIB modes it supports.  Multicast and broadcast packets by their\n   nature\
    \ will always be transmitted and received over the IPoIB-UD QP.\n   Additionally,\
    \ all address resolution responses (ARP or Neighbor\n   Discovery) MUST always\
    \ be encapsulated in a UD mode packet.\n"
- title: 7.1.  A Cautionary Note on IPoIB-RC
  contents:
  - "7.1.  A Cautionary Note on IPoIB-RC\n   The RC mode of InfiniBand guarantees\
    \ in-order delivery of packets.\n   Every message transmitted over the RC connection\
    \ is broken into\n   physical MTU-sized packets by the RC connection.  If any\
    \ packet is\n   lost, it is retransmitted until the complete message is exchanged.\n\
    \   Therefore, there is a possibility of an upper transport layer\n   experiencing\
    \ a timeout, while the RC layer is still in the process of\n   transferring the\
    \ complete message.  TCP will view the timeout as an\n   indicator of congestion\
    \ and enter slow-start thereby affecting\n   throughput drastically [RFC2581].\
    \  Other upper-layer protocols might\n   insert retransmissions into the fabric,\
    \ adding to the already\n   existing congestion.\n   The applicability of Infiniband\
    \ reliability is on a fabric with short\n   latencies (not wide area).  Therefore,\
    \ the RC timer values should be\n   short compared with the starting minimum time\
    \ values used by the\n   upper end-to-end transports.  In addition, because the\
    \ RC mode does\n   not have measurement-based reliable transmission, its use over\n\
    \   fabrics with long latency or very dynamic latency may be a concern\n   for\
    \ congestion-aware traffic traversing those fabrics.\n"
- title: 7.2.  IPoIB-CM Per-Destination MTU
  contents:
  - "7.2.  IPoIB-CM Per-Destination MTU\n   As described above, interfaces on the\
    \ same subnet may support\n   different link MTUs based on the negotiated value\
    \ or due to the link\n   type (UD or connected mode).  Therefore, an implementation\
    \ might\n   choose to define a large IP MTU, which is reduced based on the MTU\
    \ to\n   the destination.  The relevant MTU may be stored in a suitable per-\n\
    \   destination object, such as a route cache or a neighbor cache.  The\n   per-destination\
    \ MTU is known to the IPoIB-CM interface as described\n   in Section 5.\n   Implementations\
    \ might choose not to support differing MTU values and\n   always support an MTU\
    \ equal to the IPoIB-UD MTU determined from the\n   broadcast GID.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   An impostor may return a false set of flags to\
    \ an IPOIB interface.\n   This may cause unnecessary attempts and some delay/disruption\
    \ in\n   IPoIB communication.  The same is the case if wrong/spurious QPN\n  \
    \ values are provided during address resolution broadcast/multicast.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   Future uses of the reserved bits and octets in the\
    \ link-layer address\n   (Section 3.1), Service-ID (Section 3.5), and \"Private-Data\
    \ Format\"\n   (Section 6) MUST be published as RFCs.  This document requires\
    \ that\n   the reserved bits be set to zero on sends.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   The author thanks the IPoIB Working Group for the various\
    \ comments\n   and suggestions.  A special thanks to Bernie King-Smith and Dror\n\
    \   Goldenberg for the detailed review and suggestions.\n"
- title: 11.  Normative References
  contents:
  - "11.  Normative References\n   [IB_ARCH]    InfiniBand Architecture Specification,\
    \ version 1.2\n                www.infinibandta.org\n   [RFC4392]    Kashyap,\
    \ V., \"IP over InfiniBand (IPoIB) Architecture\",\n                RFC 4392,\
    \ April 2006.\n   [RFC4391]    Chu, J. and V. Kashyap, \"Transmission of IP over\n\
    \                InfiniBand (IPoIB)\", RFC 4391, April 2006.\n   [RFC2119]   \
    \ Bradner, S., \"Key words for use in RFCs to Indicate\n                Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 12.  Informative References
  contents:
  - "12.  Informative References\n   [RFC2581]    Allman, M., Paxson, V., and W. Stevens,\
    \ \"TCP Congestion\n                Control \", RFC 2581, April 1999.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Vivek Kashyap\n   15350, SW Koll Parkway\n   Beaverton\n\
    \   OR 97006\n   Phone: +1 503 578 3422\n   EMail: vivk@us.ibm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2006).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST,\n   AND THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,\n   EXPRESS OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT\n   THE USE OF THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\n   IMPLIED WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR\n   PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
