- contents:
  - '   The Reason Header Field for the Session Initiation Protocol (SIP)

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   For creating services, it is often useful to know why a Session\n
    \  Initiation Protocol (SIP) request was issued.  This document defines\n   a
    header field, Reason, that provides this information.  The Reason\n   header field
    is also intended to be used to encapsulate a final\n   status code in a provisional
    response.  This functionality is needed\n   to resolve the \"Heterogeneous Error
    Response Forking Problem\", or\n   HERFP.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.   Introduction ...............................................
    \ 2\n   1.1. Terminology ................................................  3\n
    \  2.   The Reason Request Header Field ............................  3\n   3.
    \  Examples ...................................................  4\n   3.1. Call
    Completed Elsewhere ...................................  4\n   3.2. Refusing an
    Offer that Comes in a Response .................  4\n   3.3. Third Party Call
    Control ...................................  5\n   3.4. ISUP interworking ..........................................
    \ 5\n   4.   IANA Considerations ........................................  6\n
    \  5.   Security Considerations ....................................  6\n   6.
    \  Acknowledgments ............................................  7\n   7.   Authors'
    Addresses .........................................  7\n   8.   Normative References
    .......................................  7\n   9.   Full Copyright Statement ...................................
    \ 8\n"
  title: Table of Contents
- contents:
  - "1. Introduction\n   The same SIP [1] request can be issued for a variety of reasons.
    \ For\n   example, a SIP CANCEL request can be issued if the call has completed\n
    \  on another branch or was abandoned before answer.  While the protocol\n   and
    system behavior is the same in both cases, namely, alerting will\n   cease, the
    user interface may well differ.  In the second case, the\n   call may be logged
    as a missed call, while this would not be\n   appropriate if the call was picked
    up elsewhere.\n   Third party call controllers sometimes generate a SIP request
    upon\n   reception of a SIP response from another dialog.  Gateways generate\n
    \  SIP requests after receiving messages from a different protocol than\n   SIP.
    \ In both cases the client may be interested in knowing what\n   triggered the
    SIP request.\n   SIP responses already offer a means of informing the user of
    why a\n   request failed.  The simple mechanism in this document accomplishes\n
    \  something roughly similar for requests.\n   An INVITE can sometimes be rejected
    not because the session\n   initiation was declined, but because some aspect of
    the request was\n   not acceptable.  If the INVITE forked and resulted in a rejection,\n
    \  the error response may never be forwarded to the client unless all\n   the
    other branches also reject the request.  This problem is known as\n   the \"Heterogeneous
    Error Response Forking Problem\", or HERFP.  It is\n   foreseen that a solution
    to this problem may involve encapsulating\n   the final error response in a provisional
    response. The Reason header\n   field is a candidate to be used for such encapsulation.\n
    \  Initially, the Reason header field defined here appears to be most\n   useful
    for BYE and CANCEL requests, but it can appear in any request\n   within a dialog,
    in any CANCEL request and in any response whose\n   status code explicitly allows
    the presence of this header field.\n   Note that the Reason header field is usually
    not needed in responses\n   because the status code and the reason phrase already
    provide\n   sufficient information.\n   Clients and servers are free to ignore
    this header field.  It has no\n   impact on protocol processing.\n"
  - contents:
    - "1.1 Terminology\n   In this document, the key words \"MUST\", \"MUST NOT\",
      \"REQUIRED\",\n   \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
      \"MAY\",\n   and \"OPTIONAL\" are to be interpreted as described in BCP 14,
      RFC 2119\n   [2] and indicate requirement levels for compliant SIP\n   implementations.\n"
    title: 1.1 Terminology
  title: 1. Introduction
- contents:
  - "2. The Reason Header Field\n   The Reason header field MAY appear in any request
    within a dialog, in\n   any CANCEL request and in any response whose status code
    explicitly\n   allows the presence of this header field.  The syntax of the header\n
    \  field follows the standard SIP parameter syntax.\n Reason            =  \"Reason\"
    HCOLON reason-value *(COMMA reason-value)\n reason-value      =  protocol *(SEMI
    reason-params)\n protocol          =  \"SIP\" / \"Q.850\" / token\n reason-params
    \    =  protocol-cause / reason-text\n                      / reason-extension\n
    protocol-cause    =  \"cause\" EQUAL cause\n cause             =  1*DIGIT\n reason-text
    \      =  \"text\" EQUAL quoted-string\n reason-extension  =  generic-param\n
    \  The following values for the protocol field have been defined:\n      SIP:
    The cause parameter contains a SIP status code.\n      Q.850: The cause parameter
    contains an ITU-T Q.850 cause value\n           in decimal representation.\n   Examples
    are:\n      Reason: SIP ;cause=200 ;text=\"Call completed elsewhere\"\n      Reason:
    Q.850 ;cause=16 ;text=\"Terminated\"\n      Reason: SIP ;cause=600 ;text=\"Busy
    Everywhere\"\n      Reason: SIP ;cause=580 ;text=\"Precondition Failure\"\n   Proxies
    generating a CANCEL request upon reception of a CANCEL from\n   the previous hop
    that contains a Reason header field SHOULD copy it\n   into the new CANCEL request.\n
    \  In normal SIP operation, a SIP status code in a response provides the\n   client
    with information about the request that triggered the\n   response, the session
    parameters, or the user.  For example, a 405\n   (Method not allowed) response
    indicates that the request contained an\n   unsupported method.  A 488 (Not Acceptable
    Here) indicates that the\n   session parameters are unacceptable and a 486 (Busy
    Here) provides\n   information about the status of the user.\n   Any SIP status
    code MAY appear in the Reason header field of a\n   request.  However, status
    codes that provide information about the\n   user and about session parameters
    are typically useful for\n   implementing services whereas status codes intended
    to report errors\n   about a request are typically useful for debugging purposes.\n
    \  A SIP message MAY contain more than one Reason value (i.e., multiple\n   Reason
    lines), but all of them MUST have different protocol values\n   (e.g., one SIP
    and another Q.850).  An implementation is free to\n   ignore Reason values that
    it does not understand.\n"
  title: 2. The Reason Header Field
- contents:
  - "3. Examples\n   This section contains a number of examples that illustrate the
    use of\n   the Reason header field.\n"
  - contents:
    - "3.1 Call Completed Elsewhere\n   A proxy forks an INVITE request and one of
      the branches returns a 200\n   (OK).  The forking proxy includes this status
      code in a Reason header\n   field in the CANCEL request that it sends to the
      rest of the\n   branches.\n"
    title: 3.1 Call Completed Elsewhere
  - contents:
    - "3.2 Refusing an Offer that Comes in a Response\n   A client sends an empty
      INVITE and receives an unacceptable offer in\n   a 200 (OK) response.  The client
      sends an ACK with a correctly\n   formatted answer and immediately sends a BYE
      to terminate the\n   session.  The client includes a 488 (Not Acceptable Here)
      status code\n   in a Reason header field.\n"
    title: 3.2 Refusing an Offer that Comes in a Response
  - contents:
    - "3.3 Third Party Call Control\n   The third party call controller of figure
      1 tries to establish a\n   session between A and B.  However, user B is busy.
      \ The controller\n   sends a BYE with the status code 486 (Busy Here) in a Reason
      header\n   field.\n      A                Controller            B\n      |   INV
      \ no SDP     |                  |\n      |<------------------|                  |\n
      \     |                   |                  |\n      |    200 SDP A1     |
      \                 |\n      |-----------------> |                  |\n      |
      \                  |                  |\n      |   ACK  SDP held   |                  |\n
      \     |<------------------|                  |\n      |                   |
      \                 |\n      |                   |   INV no SDP     |\n      |
      \                  |----------------->|\n      |                   |                  |\n
      \     |                   |  486 Busy Here   |\n      |                   |<-----------------|\n
      \     |                   |                  |\n      |                   |
      \      ACK        |\n      |                   |----------------->|\n      |
      \    BYE (486)     |                  |\n      |<------------------|                  |\n
      \     |                   |                  |\n      |     200 OK        |
      \                 |\n      |-----------------> |                  |\n      |
      \                  |                  |\n         Figure 1: Third Party Call
      Control\n"
    title: 3.3 Third Party Call Control
  - contents:
    - "3.4 ISUP interworking\n   The PSTN gateway of figure 2 generates an INVITE
      that has to be\n   CANCELed when a REL (release) message is received from the
      ISUP side.\n   The CANCEL request contains the Q.850 cause value (16 Normal
      Call\n   Clearing) of the REL message.\n      A                Gateway               B\n
      \     |       IAM         |                  |\n      |-----------------> |
      \                 |\n      |                   |     INVITE       |\n      |
      \                  |----------------->|\n      |                   |                  |\n
      \     |                   |   100 Trying     |\n      |                   |<-----------------|\n
      \     |     REL (16)      |                  |\n      |-----------------> |
      \                 |\n      |                   | CANCEL (Q.850 16)|\n      |
      \                  |----------------->|\n      |                   |      200
      OK      |\n      |                   |<-----------------|\n             Figure
      2: ISUP Interworking\n"
    title: 3.4 ISUP interworking
  title: 3. Examples
- contents:
  - "4. IANA Considerations\n   This document defines a new SIP header field, \"Reason\",
    according to\n   Section 27 of RFC 3261.\n   Protocol values (and their associated
    protocol cause) to be used with\n   this header field are registered by the IANA
    into a new sub-registry\n   under http://www.iana.org/assignments/sip-parameters,
    labeled \"Reason\n   Protocols\".  Reason protocols MUST refer to either an ITU-T\n
    \  Recommendation number, an IETF protocol name or the recognized\n   protocol
    identifier from another standardization organization.\n   Protocol cause describes
    the source of the 'cause' field in the\n   Reason header field.\n   The only entries
    in the registry for the time being are:\n   Protocol Value   Protocol Cause            Reference\n
    \  --------------   ---------------           -----------\n   SIP              Status
    code               RFC 3261\n   Q.850            Cause value in decimal    ITU-T
    Q.850\n                    representation\n"
  title: 4. IANA Considerations
- contents:
  - "5. Security Considerations\n   Spoofing or removing the Reason header field from
    a response in a\n   HERFP scenario can make it impossible for a client to update
    properly\n   its previous request, making therefore session establishment\n   impossible.
    Thus, it is RECOMMENDED that this header field is\n   protected by a suitable
    integrity mechanism.\n   properly its previous request, making therefore session
    establishment\n   impossible. Thus, it is RECOMMENDED that this header field is\n
    \  protected by a suitable integrity mechanism.\n"
  title: 5. Security Considerations
- contents:
  - "6. Acknowledgments\n   Jonathan Rosenberg, Rohan Mahy and Vijay K. Gurbani provided
    helpful\n   comments and suggestions.\n"
  title: 6. Acknowledgments
- contents:
  - "8. Normative References\n   [1] Rosenberg, J., Schulzrinne, H., Camarillo, G.,
    Johnston, A.,\n       Peterson, J., Sparks, R., Handley, M. and E. Schooler, \"SIP:\n
    \      Session Initiation Protocol\", RFC 3261, June 2002.\n   [2] Bradner, S.,
    \"Key words for use in RFCs to indicate requirement\n       levels,\" BCP 14,
    RFC 2119, March 1997.\n"
  title: 7. Normative References
- contents:
  - "7. Authors' Addresses\n   Henning Schulzrinne\n   Dept. of Computer Science\n
    \  Columbia University\n   1214 Amsterdam Avenue\n   New York, NY 10027\n   USA\n
    \  EMail:  schulzrinne@cs.columbia.edu\n   David R. Oran\n   Cisco Systems, Inc.\n
    \  Acton, MA\n   USA\n   EMail:  oran@cisco.com\n   Gonzalo Camarillo\n   Ericsson\n
    \  Advanced Signalling Research Lab.\n   FIN-02420 Jorvas\n   Finland\n   EMail:
    \ Gonzalo.Camarillo@ericsson.com\n"
  title: 8. Authors' Addresses
- contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 9.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
