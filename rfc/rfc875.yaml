- title: __initial_text__
  contents:
  - "                  Gateways, Architectures, and Heffalumps\n                 \
    \             M.A. PADLIPSKY\n                           THE MITRE CORPORATION\n\
    \                          Bedford, Massachusetts\f          The growth of autonomous\
    \ intercomputer networks has led to a\n     desire on the part of their respective\
    \ proprietors to \"gateway\"\n     from one to the other.  Unfortunately, however,\
    \ the implications\n     and shortcomings of gateways which must translate or\
    \ map between\n     differing protocol suites are not widely understood.  Some\n\
    \     protocol sets have such severe functionality mismatches that\n     proper\
    \ T/MG's cannot be generated for them; all attempts to mesh\n     heterogeneous\
    \ suites are subject to numerous problems, including\n     the introduction of\
    \ \"singularity points\" on logical connections\n     which would otherwise be\
    \ able to enjoy the advantages of\n     communications subnetwork alternate routing,\
    \ loss of\n     functionality, difficulty of Flow Control resolution, higher cost\n\
    \     than non-translating/mapping Gateways, and the necessity of\n     re-creating\
    \ T/MG's when a given suite changes.  The preferability\n     of a protocol-compatible\
    \ internet is also touched upon, as is the\n     psychology of those soi-disant\
    \ architects who posit T/MG's.\n                  Gateways, Architectures, and\
    \ Heffalumps\n                              M. A. Padlipsky\n          In our\
    \ collective zeal to remain (or become) abreast of the\n     State of the Art,\
    \ we sometimes fall into one or the other (or\n     both) of a couple of pitfalls.\
    \  Only one of these pitfalls is\n     particularly well-known:  \"Buzzwords\"\
    \ -- and even here merely\n     knowing the name doesn't necessarily effect a\
    \ spontaneous\n     solution.  The other deserves more attention:  inadequate\n\
    \     familiarity with The Relevant Literature.\n          The key is the notion\
    \ of what's really relevant.  Often,\n     it's the Oral Tradition that matters;\
    \ published papers, in their\n     attempts to seem scholarly, offer the wrong\
    \ levels of abstraction\n     or, because of the backgrounds of their authors,\
    \ are so\n     ill-written as to fail to communicate well.  Sometimes, however,\n\
    \     that which is truly relevant turns out to be unfindable by a\n     conventional\
    \ literature searcher because it isn't \"in\" the field\n     of search.\n   \
    \       I wandered into an instructive case in point recently, when\n     it took\
    \ me over an hour to convince a neophyte to the mysteries\n     of intercomputer\
    \ networking (who is quite highly regarded in at\n     least one other area of\
    \ computer science, and is by no means a\n     dummy) that a particular Local\
    \ Area Network architecture proposal\n     which casually appealed to the notion\
    \ of \"gatewaying\" to three or\n     four other networks it didn't have protocols\
    \ in common with was a\n     Very Bad Thing.  \"Gateways\" is, of course, another\
    \ one of those\n     bloody buzzwords, and in some contexts it might have been\
    \ enough\n     just to so label it.  But this was a conversation with a bright\n\
    \     professional who'd recently been reading up on networks and who\n     wanted\
    \ really to understand what was so terrible.\n          So I started by appealing\
    \ to the Oral Tradition, pointing\n     out that in the ARPA internetworking research\
    \ community (from\n     which we probably got the term \"Gateway\" in the first\
    \ place --\n     and from which we certainly get the proof of concept for\n  \
    \   internets) it had been explicitly decided that it would be too\n     hard\
    \ to deal with connecting autonomous networks whose protocol\n     sets differed\
    \ \"above\" the level of\n     Host-to-Communications-Subnetwork-Processor protocol.\
    \  That is,\n     the kind of Gateway we know how to build -- and, indeed, anything\n\
    \     one might call a Gateway -- attaches to two (or more) comm\n     subnets\
    \ as if it were a Host on each, by appropriately\n     interpreting their respective\
    \ H-CSNP protocols and doing the\n     right things in hardware (see Figure 1),\
    \ but for ARPA Internet\n     Gateways each net attached to is assumed to have\
    \ the same\n     Host-Host Protocol (TCP/IP, in fact\n     RFC 875           \
    \                                 September 1982\n     or, anyway, IP and either\
    \ TCP or some other common-to-both-nets\n     protocol above it), and the same\
    \ process level protocols (e.g.,\n     Telnet, FTP, or whatever).  The reason\
    \ for this assuming of\n     protocol set homogeneity is that they \"knew\" the\
    \ alternative was\n     undesirable, because it would involve the translation\
    \ or mapping\n     between different protocol sets in the Gateways and such T/MG's\n\
    \     were obviously to be avoided.\n          Well, that didn't do the trick.\
    \  \"Why is a T/MG a Bad\n     Thing?\" he wanted to know.  \"Because of the possibility\
    \ of\n     irreconcilable mismatches in functionality.\"  \"For instance?\"\n\
    \     \"Addressing is the most commonly cited.\"  \"Addressing?\"\n          Assuming\
    \ the reader is as bored as I am with the dialogue\n     bit, I'll try to step\
    \ through some specifics of the sorts of\n     incompatibility one can find between\
    \ protocol sets in a less\n     theatric manner.  Note that the premise of it\
    \ all is that we\n     don't want to change either pre-existing protocol set.\
    \  Let's\n     assume for convenience that we are trying to attach just two nets\n\
    \     together with a T/MG, and further assume that one of the nets\n     uses\
    \ the original ARPANET \"NCP\" -- which consists, strictly\n     speaking, of\
    \ the unnamed original ARPANET Host-Host Protocol and\n     the unfortunately\
    \ named \"1822\", or ARPANET Host-IMP Protocol --\n     and the other uses TCP/IP.\n\
    \          Host addressing is the most significant problem.  NCP-using\n     hosts\
    \ have \"one-dimensional\" addresses.  That is, there's a field\n     in the Host-IMP\
    \ \"leader\" where the Host number goes.  When you've\n     assigned all the available\
    \ values in that field, your net is full\n     until and unless you go back and\
    \ change all the IMP's and NCP's\n     to deal with a bigger field.  Using IP,\
    \ on the other hand,\n     addresses of Hosts are \"two-dimensional\".  That is,\
    \ there's an IP\n     header field in which to designate the foreign network and\n\
    \     another field in which to designate the foreign Host.  (The\n     foregoing\
    \ is a deliberate oversimplification, by the way.)  So if\n     you wanted a Host\
    \ on an NCP-based net to communicate with a Host\n     on another, TCP-based net\
    \ you'd have a terrible time of it if you\n     also didn't want to go mucking\
    \ around inside of all the different\n     NCP implementations, because you don't\
    \ have a way of expressing\n     the foreign address within your current complement\
    \ of addressing\n     mechanisms.\n          There are various tricks available,\
    \ of course.  You could\n     find enough spare bits in the Host-IMP leader or\
    \ Host-Host header\n     perhaps, and put the needed internet address there. \
    \ Or you could\n     change the Initial Connection Protocol, or even make the\
    \ internet\n     address be the first thing transmitted as \"data\" by the User\
    \ side\n     of each process-level protocol.  The common failing of all such\n\
    \     ploys is that you're changing the pre-existing protocols, though,\n    \
    \ and if\n     RFC 875                                            September 1982\n\
    \     that sort of thing were viewed with equanimity by system\n     proprietors\
    \ you might as well go the whole hog and change over to\n     the new protocol\
    \ set across the board.  Granted, that's a big\n     jump; but it must be realized\
    \ that this is just the first of\n     several problems.\n          (It is the\
    \ case that you could get around the addressing\n     problem by having the T/MG\
    \ become more nearly a real Host and\n     terminate the NCP-based side in an\
    \ application program which\n     would \"ask\" the user what foreign Host he\
    \ wants to talk to on the\n     TCP-based side -- at least for Telnet connections.\
    \  When there's\n     no user around, though, as would be the case in most file\n\
    \     transfers, you lose again, unless you fiddle your FTP.  In\n     general,\
    \ this sort of \"Janus Host\" -- after the Roman deity with\n     two faces, who\
    \ was according to some sources the god of gateways\n     (!) -- confers extremely\
    \ limited functionality anyway; but in\n     some practical cases it can be better\
    \ than trying for full\n     functionality and coming up empty.)\n          Then\
    \ there's the question of what to do about RFNM's.  That\n     is, NCP's follow\
    \ the discipline of waiting until the foreign IMP\n     indicates a Ready for\
    \ Next Message state exists before sending\n     more data on a given logical\
    \ connection, but if you're talking to\n     a T/MG, its IMP is the one you'll\
    \ get the RFNM from (the real\n     foreign Host might not even be attached to\
    \ an IMP).  Now, I've\n     actually seen a proposal that suggested solving this\
    \ problem by\n     altering the T/MG's IMP to withhold RFNM's, but that doesn't\
    \ make\n     me think it's a viable solution.  At the very least, the T/MG is\n\
    \     going to have to go in for buffering in a big way (see Figure 2).\n    \
    \ In a possible worst case, the foreign net might not even let you\n     know\
    \ your last transmission got through without changing its\n     protocols.\n \
    \         Going beyond the NCP-TCP example, a generic topic fraught\n     with\
    \ the peril of functionality mismatch is that of the\n     Out-of-Band Signal.\
    \  (There are some who claim it's also an\n     NCP-TCP problem.) The point is\
    \ that although \"any good Host-Host\n     protocol\" should have some means of\
    \ communicating aside from\n     normal messages \"on\" logical connections, the\
    \ mechanizations and\n     indeed the semantics of such Out-of-Band Signals often\
    \ differ.\n     The fear is that the differences may lead to  incompatibilities.\n\
    \     For example, in NCP the OOBS is an Interrupt command \"on\" the\n     control\
    \ link, whereas in TCP it's an Urgent bit in the header of\n     a message \"\
    on\" the socket.  If you want Urgent to be usable in\n     order to have a \"\
    virtual quit button\", the semantics of the\n     protocol must make it very clear\
    \ that Urgent is not merely the\n     sort of thing the NBS/ECMA Host-Host protocol\
    \ calls \"Expedited\n     Data\".  If, that is, the intent of the mechanism is\
    \ to cause the\n     associated process/job/task to take special action rather\
    \ than\n     merely the associated protocol interpreter (which need not be\n \
    \    RFC 875                                            September 1982\n     part\
    \ of the process), you'd better say so -- and none of the\n     ISO-derived protocols\
    \ I've seen yet does so.  And there's not\n     much a T/MG  can do if it gets\
    \ an NCP Interrupt on a control\n     link, notices a Telnet Interrupt Process\
    \ control code on the\n     associated socket, and doesn't have anything other\
    \ than\n     Expediting Data to do with it on its other side.  (Expedited\n  \
    \   Data, it may be noted, bears a striking resemblance to taking an\n     SST\
    \ across the Atlantic, only to find no one on duty in the\n     Customs shed --\
    \ and the door locked from the other side.)\n          Functionality mismatch\
    \ is not, of course, limited to\n     Host-Host protocols.  Indeed, the following\
    \ interesting situation\n     was observed at University College London:  In their\
    \ \"Terminal\n     Gateway\", which translates/maps ARPANET Telnet and \"Triple\
    \ X\"\n     (CCITT X.25, X.28, X.29), they were able to get data across, as\n\
    \     might be expected, but only one option (echoing), which is rather\n    \
    \ worse than might be expected.  (And the UCL people are quite\n     competent,\
    \ so the problem almost certainly doesn't have to do\n     with inadequate ingenuity.)\n\
    \          It could be argued that the real problem with Expedite Data\n     and\
    \ Triple X is that some protocol sets are a lot worse than\n     others.  I wouldn't\
    \ dispute that.  But it's still the case, to\n     re-use a Great Network One-liner,\
    \ that:\n                   sometimes, when you try to turn an apple into an\n\
    \                   orange, you get back a lemon.\n          Nor is the likelihood\
    \ of encountering irresolvable\n     functionality  mismatches the only technical\
    \ shortcoming of\n     Translating/Mapping Gateways.  A somewhat subtle but rather\n\
    \     fascinating point arises if we ask what happens when traffic is\n     heavy\
    \ enough to warrant more than one T/MG between a given pair\n     of protocol-incompatible\
    \ nets (or even if we'd like to add some\n     reliability, regardless of traffic).\
    \  What happens, if we think\n     about it a little, is a big problem.  Suppose\
    \ you actually could\n     figure out a way to translate/map between two given\
    \ sets of\n     protocols.  That would mean that for each logical connection you\n\
    \     had open, you'd have a wealth of state information about it for\n     each\
    \ net you were gatewaying.  But \"you\" now stand revealed as a\n     single T/MG\
    \ -- and your clone next door doesn't have that state\n     information, so any\
    \ logical connection that started its life with\n     you has to spend its life\
    \ with you, in a state of perpetual\n     monogamy, as it were.  Naturally, this\
    \ epoxied pair-bonding could\n     perhaps be dealt with by still another new\
    \ protocol between\n     T/MG's, but it's abundantly clear that there will be\
    \ no easy\n     analogue to no-fault divorce.  That is, to put it less\n     metophorically,\
    \ it becomes at best extremely complex to do\n     translating/mapping at more\n\
    \     RFC 875                                            September 1982\n    \
    \ than one T/MG for the same logical connection.  As with the\n     broader issue\
    \ of reconciling given protocol sets at all, doing so\n     at multiple loci of\
    \ control may or may not turn out to be\n     feasible in practice and certainly\
    \ will be a delicate and complex\n     design task.\n          One more NCP/TCP\
    \ problem:  When sending mail on an NCP-based\n     net, the mail (actually, File\
    \ Transfer) protocol currently only\n     uses the addressee's name, because the\
    \ Host was determined by the\n     Host-Host Protocol.  If you're trying to get\
    \ mail from an\n     NCP-based net to a TCP-based net, though, you're back in\
    \ the Host\n     addressing bind already discussed.  If you don't want to change\n\
    \     NCP (which, after all, is being phased out), you have to do\n     something\
    \ at the process level.  You can, but the \"Simple Mail\n     Transfer Protocol\"\
    \ to do it takes 62 pages to specify in ARPANET\n     Request for Comments 788.\n\
    \          If things get that complicated when going from NCP to TCP,\n     where\
    \ there's a close evolutionary link between the Host-Host\n     protocols, and\
    \ the process-level protocols are nominally the\n     same, what happens when\
    \ you want to go from DECNET, or from SNA,\n     or from the as-yet incomplete\
    \ NBS or ISO protocol sets?  There\n     may or may not turn out to be any aspects\
    \ that no amount of\n     ingenuity can reconcile, but it's abundantly clear that\n\
    \     Translating/Mapping Gateways are going to have to be far more\n     powerful\
    \ systems than IP Gateways (which are what you use if both\n     nets use the\
    \ same protocol sets above the Host to Comm Subnet\n     Processor protocol).\
    \  And you're going to need a different T/MG\n     for each pair of protocol sets.\
    \  And you may have to tinker with\n     CSNP internals....  An analogy to the\
    \ kids' game of Telephone (or\n     Gossip) comes to mind:  How much do you lose\
    \ each time you\n     whisper to your neighbor who in turn whispers to the next\n\
    \     neighbor?  What, for that matter, if we transplant the game to\n     the\
    \ United Nations and have the whisperers be translators who\n     have speakers\
    \ of different languages on each side?\n          Other problem areas could be\
    \ adduced.  For example, it's\n     clear that interpreting two protocol sets\
    \ rather than one would\n     take more time, even if it could be done.  Also,\
    \ it should be\n     noted that the RFNM's Problem generalizes into a concern\
    \ over\n     resolving Flow Control mismatches for any pair of protocol sets,\n\
    \     and could lead to the necessity of having more memory for buffers\n    \
    \ on the T/MG than on any given Host even for those cases where\n     it's doable\
    \ in principle. But only one other problem area seems\n     particularly major,\
    \ and that is the old Moving Target bugaboo:\n     For when any protocol changes,\
    \ so must all the T/MG's involving\n     it, and as there have already been three\
    \ versions of SNA,\n     presumably a like number of versions of DECNET, and as\
    \ there are\n     at least two additional levels which ISO should be acknowledging\n\
    \     the existence of, the fear of having to re-do T/MG's should serve\n    \
    \ as a considerable deterrent to doing them\n     RFC 875                    \
    \                        September 1982\n     in the first place.  (This apparent\
    \ contravention of the\n     Padlipsky's Law to the effect that Implemented Protocols\
    \ Have\n     Barely Finite Inertia Of Rest is explained by a brand-new\n     Padlipsky's\
    \ Law:  To The Technologically Naive, Change Equals\n     Progress; To Vendors,\
    \ Change Equals Profit.)\n          At any rate, it's just not clear that a given\
    \ Translating/\n     Mapping Gateway can even be built; you have to look very\
    \ closely\n     at the protocol sets in question to determine even that.  It's\n\
    \     abundantly clear that if a given one can be built it won't be\n     easy\
    \ to do (see Figure 3).  Yet \"system architect\" after \"system\n     architect\"\
    , apparently in good faith, toss such things into their\n     block diagrams.\
    \  Assuming that the architectural issue isn't\n     resolved by a fondness for\
    \ the Gothic in preference to the more\n     modern view that form should follow\
    \ function, let's pause briefly\n     to visualize an immense, turreted, crenellated,\
    \ gargoyled  ...\n     microprocessor, and return to the question of why this\
    \ sort of\n     thing happens.\n          It's clear that buzzwording is a factor.\
    \  After all, \"system\n     architects\" in our context are usually employees\
    \ of contractors\n     and their real role in life is not to build more stately\
    \ mansions\n     but to get contracts, so it's not surprising to find appeal to\n\
    \     the sort of salesmanship that relies more heavily on fast patter\n     than\
    \ precision. Another good analogy: I once went to one of the\n     big chain electronics\
    \ stores in response to an ad for a cassette\n     recorder that \"ran on batteries\
    \ or house current\" for $18, only\n     to find that they wanted an additional\
    \ $9 for the (outboard) AC\n     adaptor.  Given the complexities of T/MG's, however,\
    \ in our case\n     it's more like an $18 recorder and a $36 adaptor.\n      \
    \    But is buzzwording all there is?  Clearly not, for as\n     mentioned earlier\
    \ there's also ignorance of the Oral Tradition in\n     play. Whether the ignorance\
    \ is willful or not is probably better\n     left unexamined, but if we're willing\
    \ to entertain the notion\n     that it's not all a bait-and-switch job akin to\
    \ the\n     separately-priced AC adaptor, we see that those who casually\n   \
    \  propose T/MG's haven't done enough homework as to the real state\n     of the\
    \ art.\n     RFC 875                                            September 1982\n\
    \          What ever became of that early reference to The Relevant\n     Literature,\
    \ though?  Surely you didn't think I'd never ask.  The\n     answers are both\
    \ implied in the assertion that:\n                          Gateways are Heffalumps\n\
    \     as you'll plainly see once you've been reminded of what\n     Heffalumps\
    \ are.  Dipping into The Relevant Literature, then,\n     let's reproduce the\
    \ opening of the Heffalumps story:\n                  One day, when Christopher\
    \ Robin and Winnie-the-Pooh\n             and Piglet were all talking together,\
    \ Christopher Robin\n             finished the mouthful he was eating and said\
    \ carelessly:\n             \"I saw a Heffalump today, Piglet.\"\n           \
    \       \"What was it doing?\"  asked Piglet.\n                  \"Just lumping\
    \ along,\" said Christopher Robin.\n             \"I don't think it saw me.\"\n\
    \                  \"I saw one once,\" said Piglet. \"At least, I think\n    \
    \         I did,\" he said.  \"Only perhaps it wasn't.\"\n                  \"\
    So did I,\" said Pooh, wondering what a Heffalump\n             was like.\n  \
    \                \"You don't often see them,\" said Christopher Robin\n      \
    \       carelessly.\n                  \"Not now,\" said Piglet.\n           \
    \       \"Not at this time of year,\" said Pooh.\n                  Then they\
    \ all talked about something else, until it\n             was time for Pooh and\
    \ Piglet to go home together.\n          (To satisfy the lazy reader -- who'd\
    \ actually be better off\n     searching for it in both -- it's from Winnie-the\
    \ Pooh, not The House  at\n     Pooh Corner.)\n          Pooh, in case you still\
    \ don't recall, decides to make a Heffalump\n     Trap.  (Piglet is sorry he didn't\
    \ think of it first.)  He baits it with\n     a jar of honey, after making sure\
    \ that it really was honey all the way\n     to the bottom, naturally.  In the\
    \ middle of the night, he goes to the\n     Trap to get what's left of the honey\
    \ and gets his head stuck in the jar.\n     Along comes Piglet, who sees this\
    \ strange creature with a jar-like head\n     making frightful noises, and, having\
    \ known no more than Pooh what\n     Heffalumps really were, assumes that a Heffalump\
    \ has indeed been Trapped\n     and is duly terrified.\n     RFC 875         \
    \                                   September 1982\n          It would probably\
    \ be too moralistic to wonder how much Christopher\n     Robin actually knew about\
    \ Heffalumps in the first place. The\n     \"Decorator\", based on the picture\
    \ on page 60 of my edition, clearly\n     thinks C.R. thought they were elephants,\
    \ but I still wonder. At best,\n     though, he knew no more about them than the\
    \ contractor did about\n     Gateways in the proposal that started this whole\
    \ tirade off.\n          NOTE:  FIGURE 1.  Defining Characteristic of All Flavors\
    \ of\n     Gateways, FIGURE 2.  Gateway and Translating/Mapping Gateway,\n   \
    \  Approximately to Scale, and FIGURE 3.  Respective Internals Schematics,\n \
    \    may be obtained by writing to:  Mike Padlipsky, MITRE Corporation, P.O.\n\
    \     Box 208, Bedford, Massachusetts, 01730, or sending computer mail to\n  \
    \   Padlipsky@ISIA.\n"
