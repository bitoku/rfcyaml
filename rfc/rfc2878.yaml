- title: __initial_text__
  contents:
  - '                  PPP Bridging Control Protocol (BCP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) [6] provides a standard method\
    \ for\n   transporting multi-protocol datagrams over point-to-point links.  PPP\n\
    \   defines an extensible Link Control Protocol, and proposes a family of\n  \
    \ Network Control Protocols for establishing and configuring different\n   network-layer\
    \ protocols.\n   This document defines the Network Control Protocol for establishing\n\
    \   and configuring Remote Bridging for PPP links.\n   This document obsoletes\
    \ RFC 1638, which was based on the IEEE\n   802.1D-1993 MAC Bridge[3]. This document\
    \ extends that specification\n   by including the IEEE 802.1D-1998 MAC Bridge[8]\
    \ and IEEE 802.1Q\n   Virtual LAN (VLAN)[9] standards. This document also improves\
    \ the\n   protocol in order to support high-speed switched LANs.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.     Historical Perspective ................................\
    \    3\n      1.1       Requirements Keywords ...........................    3\n\
    \   2.     Methods of Bridging ...................................    3\n    \
    \  2.1       Transparent Bridging ............................    3\n      2.2\
    \       Remote Transparent Bridging .....................    4\n      2.3    \
    \   Source Routing ..................................    5\n      2.4       Remote\
    \ Source Route Bridging ....................    6\n      2.5       SR-TB Translational\
    \ Bridging ....................    7\n   3.     Traffic Services ......................................\
    \    7\n      3.1       LAN Frame Checksum Preservation .................    7\n\
    \      3.2       Traffic having no LAN Frame Checksum ............    7\n    \
    \  3.3       Tinygram Compression ............................    8\n      3.4\
    \       Virtual LANs ....................................    8\n   4.     A PPP\
    \ Network Control Protocol for Bridging ...........    9\n      4.1       Sending\
    \ Bridge Frames ...........................   10\n         4.1.1  Maximum Receive\
    \ Unit Considerations .............   11\n         4.1.2  Loopback and Link Quality\
    \ Monitoring ............   11\n         4.1.3  Message Sequence ................................\
    \   11\n         4.1.4  Separation of Spanning Tree Domains .............   12\n\
    \      4.2       Bridged LAN Traffic in IEEE 802 Untagged Frame ..   12\n    \
    \  4.3       Bridged LAN Traffic in IEEE 802 Tagged Frame ....   16\n      4.4\
    \       Bridge management protocol data unit ............   21\n   5.     BCP\
    \ Configuration Options .............................   21\n      5.1       Bridge-Identification\
    \ ...........................   22\n      5.2       Line-Identification .............................\
    \   23\n      5.3       MAC-Support .....................................   25\n\
    \      5.4       Tinygram-Compression ............................   26\n    \
    \  5.5       MAC-Address .....................................   27\n      5.6\
    \       Spanning Tree Protocol (old formatted) ..........   28\n      5.7    \
    \   IEEE-802-Tagged-Frame ...........................   30\n      5.8       Management-Inline\
    \ ...............................   30\n   6.     Changes From RFC 1638 .................................\
    \   31\n   7.     Security Considerations ...............................   32\n\
    \   8.     Intellectual Property Notice ..........................   32\n   9.\
    \     IANA Considerations ...................................   33\n   10.   \
    \ Acknowledgments .......................................   33\n   APPENDICES\
    \ ...................................................   34\n      A.     Spanning\
    \ Tree Bridge PDU (old formatted) ...........   34\n      B.     Tinygram-Compression\
    \ Pseudo-Code ...................   35\n   References ...................................................\
    \   36\n   Authors' Addresses ...........................................   37\n\
    \   Full Copyright Statement......................................   38\n"
- title: 1.  Historical Perspective
  contents:
  - "1.  Historical Perspective\n   Two basic algorithms are ambient in the industry\
    \ for Bridging of\n   Local Area Networks.  The more common algorithm is called\n\
    \   \"Transparent Bridging\", and has been standardized for Extended LAN\n   configurations\
    \ by IEEE 802.1.  The other is called \"Source Route\n   Bridging\", and is prevalent\
    \ on IEEE 802.5 Token Ring LANs.\n   The IEEE has combined these two methods into\
    \ a device called a Source\n   Routing Transparent (SRT) bridge, which concurrently\
    \ provides both\n   Source Route and Transparent bridging.  Transparent and SRT\
    \ bridges\n   are specified in IEEE standard 802.1D-1998 [8].\n   Although IEEE\
    \ committee 802.1G is addressing remote bridging [2],\n   neither standard directly\
    \ defines the mechanisms for implementing\n   remote bridging.  Technically, that\
    \ would be beyond the IEEE 802\n   committee's charter.  However, both 802.1D\
    \ and 802.1G allow for it.\n   The implementor may model the line either as a\
    \ component within a\n   single MAC Relay Entity, or as the LAN media between\
    \ two remote\n   bridges.\n   The original IEEE 802.1D is augmented by IEEE 802.1Q\
    \ [9] to provide\n   support for Virtual LAN. Virtual LAN is an integral feature\
    \ of\n   switched LAN networks.\n"
- title: 1.1 Requirements Keywords
  contents:
  - "1.1 Requirements Keywords\n   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL\
    \ NOT, SHOULD,\n   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear\
    \ in this\n   document, are to be interpreted as described in [12].\n"
- title: 2.  Methods of Bridging
  contents:
  - '2.  Methods of Bridging

    '
- title: 2.1.  Transparent Bridging
  contents:
  - "2.1.  Transparent Bridging\n   As a favor to the uninitiated, let us first describe\
    \ Transparent\n   Bridging.  Essentially, the bridges in a network operate as\
    \ isolated\n   entities, largely unaware of each others' presence.  A Transparent\n\
    \   Bridge maintains a Forwarding Database consisting of\n                   \
    \     {address, interface}\n                               or\n              \
    \        {address, interface, VLAN ID}\n   records, by saving the Source Address\
    \ of each LAN transmission that\n   it receives, along with the interface identifier\
    \ for the interface it\n   was received on.  Bridges which support Virtual LANs\
    \ additionally\n   keep the Virtual LAN ID in their forwarding database. It goes\
    \ on to\n   check whether the Destination Address is in the database, and if so,\n\
    \   either discards the message when the destination and source are\n   located\
    \ at the same interface, or forwards the message to the\n   indicated interface.\
    \  A message whose Destination Address is not\n   found in the table is forwarded\
    \ to all interfaces except the one it\n   was received on.  This behavior applies\
    \ to Broadcast/Multicast frames\n   as well.\n   The obvious fly in the ointment\
    \ is that redundant paths in the\n   network cause indeterminate (nay, all too\
    \ determinate) forwarding\n   behavior to occur.  To prevent this, a protocol\
    \ called the Spanning\n   Tree Protocol is executed between the bridges to detect\
    \ and logically\n   remove redundant paths from the network.\n   One system is\
    \ elected as the \"Root\", which periodically emits a\n   message called a Bridge\
    \ Protocol Data Unit (BPDU), heard by all of\n   its neighboring bridges.  Each\
    \ of these modifies and passes the BPDU\n   on to its neighbors, until it arrives\
    \ at the leaf LAN segments in the\n   network (where it dies, having no further\
    \ neighbors to pass it\n   along), or until the message is stopped by a bridge\
    \ which has a\n   superior path to the \"Root\".  In this latter case, the interface\
    \ the\n   BPDU was received on is ignored (it is placed in a Hot Standby\n   status,\
    \ no traffic is emitted onto it except the BPDU, and all\n   traffic received\
    \ from it is discarded), until a topology change\n   forces a recalculation of\
    \ the network.\n   To establish Virtual LANs in an environment of multiple bridges,\
    \ GVRP\n   (GARP VLAN Registration Protocol) is executed between bridges to\n\
    \   exchange Virtual LAN information. GVRP provides a mechanism to\n   dynamically\
    \ establish and update their knowledge of the set of\n   Virtual LANs that currently\
    \ have active members.\n   To reduce unnecessary multicast flooding in the network,\
    \ bridges\n   exchange group MAC addresses using the GARP Multicast Registration\n\
    \   Protocol. GMRP provides a mechanism so that bridges can know which\n   multicast\
    \ frames should be forwarded on each port.\n"
- title: 2.2.  Remote Transparent Bridging
  contents:
  - "2.2.  Remote Transparent Bridging\n   There exist two basic sorts of bridges\
    \ -- those that interconnect\n   LANs directly, called Local Bridges, and those\
    \ that interconnect LANs\n   via an intermediate medium such as a leased line,\
    \ called Remote\n   Bridges.  PPP may be used to connect Remote Bridges.\n   The\
    \ IEEE 802.1G Remote MAC Bridging committee has proposed a model of\n   a Remote\
    \ Bridge in which a set of two or more Remote Bridges that are\n   interconnected\
    \ via remote lines are termed a Remote Bridge Group.\n   Within a Group, a Remote\
    \ Bridge Cluster is dynamically formed through\n   execution of the spanning tree\
    \ as the set of bridges that may pass\n   frames among each other.\n   This model\
    \ bestows on the remote lines the basic properties of a LAN,\n   but does not\
    \ require a one-to-one mapping of lines to virtual LAN\n   segments.  For instance,\
    \ the model of three interconnected Remote\n   Bridges, A, B and C, may be that\
    \ of a virtual LAN segment between A\n   and B and another between B and C.  However,\
    \ if a line exists between\n   Remote Bridges B and C, a frame could actually\
    \ be sent directly from\n   B to C, as long as there was the external appearance\
    \ that it had\n   travelled through A.\n   IEEE 802.1G thus allows for a great\
    \ deal of implementation freedom\n   for features such as route optimization and\
    \ load balancing, as long\n   as the model is maintained.\n   For simplicity,\
    \ we discuss Remote Bridging in this document in terms\n   of two Remote Bridges\
    \ connected by a single line.\n"
- title: 2.3.  Source Routing
  contents:
  - "2.3.  Source Routing\n   The IEEE 802.1D Committee has standardized Source Routing\
    \ for any MAC\n   Type that allows its use.  Currently, MAC Types that support\
    \ Source\n   Routing are FDDI and IEEE 802.5 Token Ring.\n   The IEEE standard\
    \ defines Source Routing only as a component of an\n   SRT bridge.  However, many\
    \ bridges have been implemented which are\n   capable of performing Source Routing\
    \ alone.  These are most commonly\n   implemented in accordance either with the\
    \ IBM Token-Ring Network\n   Architecture Reference [1] or with the Source Routing\
    \ Appendix of\n   IEEE 802.1D-1998 [8].\n   In the Source Routing approach, the\
    \ originating system has the\n   responsibility of indicating the path that the\
    \ message should follow.\n   It does this, if the message is directed off of the\
    \ local segment, by\n   including a variable length MAC header extension called\
    \ the Routing\n   Information Field (RIF).  The RIF consists of one 16-bit word\
    \ of\n   flags and parameters, followed by zero or more segment-and-bridge\n \
    \  identifiers.  Each bridge en route determines from this source route\n   list\
    \ whether it should accept the message and how to forward it.\n   In order to\
    \ discover the path to a destination, the originating\n   system transmits an\
    \ Explorer frame.  An All-Routes Explorer (ARE)\n   frame follows all possible\
    \ paths to a destination.  A Spanning Tree\n   Explorer (STE) frame follows only\
    \ those paths defined by Bridge ports\n   that the Spanning Tree Algorithm has\
    \ put in Forwarding state.  Port\n   states do not apply to ARE or Specifically-Routed\
    \ Frames.  The\n   destination system replies to each copy of an ARE frame with\
    \ a\n   Specifically-Routed Frame, and to an STE frame with an ARE frame.  In\n\
    \   either case, the originating station may receive multiple replies,\n   from\
    \ which it chooses the route it will use for future Specifically-\n   Routed Frames.\n\
    \   The algorithm for Source Routing requires the bridge to be able to\n   identify\
    \ any interface by its segment-and-bridge identifier.  When a\n   packet is received\
    \ that has the RIF present, a boolean in the RIF is\n   inspected to determine\
    \ whether the segment-and-bridge identifiers are\n   to be inspected in \"forward\"\
    \ or \"reverse\" sense.  In its search, the\n   bridge looks for the segment-and-bridge\
    \ identifier of the interface\n   the packet was received on, and forwards the\
    \ packet toward the\n   segment identified in the segment-and-bridge identifier\
    \ that follows\n   it.\n   GVRP and GMRP are available and effective on Source\
    \ Routing networks.\n"
- title: 2.4.  Remote Source Route Bridging
  contents:
  - "2.4.  Remote Source Route Bridging\n   There is no Remote Source Route Bridge\
    \ proposal in IEEE 802.1 at this\n   time, although many vendors ship remote Source\
    \ Routing Bridges.\n   We allow for modelling the line either as a connection\
    \ residing\n   between two halves of a \"split\" Bridge (the split-bridge model),\
    \ or\n   as a LAN segment between two Bridges (the independent-bridge model).\n\
    \   In the latter case, the line requires a LAN Segment ID.\n   By default, PPP\
    \ Source Route Bridges use the independent-bridge\n   model.  This requirement\
    \ ensures interoperability in the absence of\n   option negotiation.  In order\
    \ to use the split-bridge model, a system\n   MUST successfully negotiate the\
    \ Bridge-Identification Configuration\n   Option.\n   Although no option negotiation\
    \ is required for a system to use the\n   independent-bridge model, it is strongly\
    \ recommended that systems\n   using this model negotiate the Line-Identification\
    \ Configuration\n   Option.  Doing so will verify correct configuration of the\
    \ LAN\n   Segment Id assigned to the line.\n   When two PPP systems use the split-bridge\
    \ model, the system that\n   transmits an Explorer frame onto the PPP link MUST\
    \ update the RIF on\n   behalf of the two systems.  The purpose of this constraint\
    \ is to\n   ensure interoperability and to preserve the simplicity of the\n  \
    \ bridging algorithm.  For example, if the receiving system did not\n   know whether\
    \ the transmitting system had updated the RIF, it would\n   have to scan the RIF\
    \ and decide whether to update it.  The choice of\n   the transmitting system\
    \ for the role of updating the RIF allows the\n   system receiving the frame from\
    \ the PPP link to forward the frame\n   without processing the RIF.\n   Given\
    \ that source routing is configured on a line or set of lines,\n   the specifics\
    \ of the link state with respect to STE frames are\n   defined by the Spanning\
    \ Tree Protocol in use.  Choice of the split-\n   bridge or independent-bridge\
    \ model does not affect spanning tree\n   operation.  In both cases, the spanning\
    \ tree protocol is executed on\n   the two systems independently.\n"
- title: 2.5.  SR-TB Translational Bridging
  contents:
  - "2.5.  SR-TB Translational Bridging\n   IEEE 802 is not currently addressing bridges\
    \ that translate between\n   Transparent Bridging and Source Routing.  For the\
    \ purposes of this\n   standard, such a device is either a Transparent or a Source\
    \ Routing\n   bridge, and will act on the line in one of these two ways, just\
    \ as it\n   does on the LAN.\n"
- title: 3.  Traffic Services
  contents:
  - "3.  Traffic Services\n   Several services are provided for the benefit of different\
    \ system\n   types and user configurations.  These include LAN Frame Checksum\n\
    \   Preservation, LAN Frame Checksum Generation, Tinygram Compression,\n   and\
    \ the identification of closed sets of LANs.\n"
- title: 3.1.  LAN Frame Checksum Preservation
  contents:
  - "3.1.  LAN Frame Checksum Preservation\n   IEEE 802.1 stipulates that the Extended\
    \ LAN must enjoy the same\n   probability of undetected error that an individual\
    \ LAN enjoys.\n   Although there has been considerable debate concerning the algorithm,\n\
    \   no other algorithm has been proposed than having the LAN Frame\n   Checksum\
    \ received by the ultimate receiver be the same value\n   calculated by the original\
    \ transmitter.  Achieving this requires, of\n   course, that the line protocols\
    \ preserve the LAN Frame Checksum from\n   end to end.  The protocol is optimized\
    \ towards this approach.\n"
- title: 3.2.  Traffic having no LAN Frame Checksum
  contents:
  - "3.2.  Traffic having no LAN Frame Checksum\n   The fact that the protocol is\
    \ optimized towards LAN Frame Checksum\n   preservation raises twin questions:\
    \ \"What is the approach to be used\n   by systems which, for whatever reason,\
    \ cannot easily support Frame\n   Checksum preservation?\" and \"What is the approach\
    \ to be used when the\n   system originates a message, which therefore has no\
    \ Frame Checksum\n   precalculated?\".\n   Surely, one approach would be to require\
    \ stations to calculate the\n   Frame Checksum in software if hardware support\
    \ were unavailable; this\n   would meet with profound dismay, and would raise\
    \ serious questions of\n   interpretation in a Bridge/Router.\n   However, stations\
    \ which implement LAN Frame Checksum preservation\n   must already solve this\
    \ problem, as they do originate traffic.\n   Therefore, the solution adopted is\
    \ that messages which have no Frame\n   Checksum are tagged and carried across\
    \ the line.\n   When a system which does not implement LAN Frame Checksum\n  \
    \ preservation receives a frame having an embedded FCS, it converts it\n   for\
    \ its own use by removing the trailing four octets.  When any\n   system forwards\
    \ a frame which contains no embedded FCS to a LAN, it\n   forwards it in a way\
    \ which causes the FCS to be calculated.\n"
- title: 3.3.  Tinygram Compression
  contents:
  - "3.3.  Tinygram Compression\n   An issue in remote Ethernet bridging is that the\
    \ protocols that are\n   most attractive to bridge are prone to problems on low\
    \ speed (64 KBPS\n   and below) lines.  This can be partially alleviated by observing\
    \ that\n   the vendors defining these protocols often fill the PDU with octets\n\
    \   of ZERO.  Thus, an Ethernet or IEEE 802.3 PDU received from a line\n   that\
    \ is (1) smaller than the minimum PDU size, and (2) has a LAN\n   Frame Checksum\
    \ present, must be padded by inserting zeroes between\n   the last four octets\
    \ and the rest of the PDU before transmitting it\n   on a LAN.  These protocols\
    \ are frequently used for interactive\n   sessions, and therefore are frequently\
    \ this small.\n   To prevent ambiguity, PDUs requiring padding are explicitly\
    \ tagged.\n   Compression is at the option of the transmitting station, and is\n\
    \   probably performed only on low speed lines, perhaps under\n   configuration\
    \ control.\n   The pseudo-code in Appendix B describes the algorithms.\n"
- title: 3.4.  Virtual LANs
  contents:
  - "3.4.  Virtual LANs\n   IEEE 802.1Q defines Virtual LANs and their exchangeable\
    \ VLAN Tagged\n   frame format. Virtual LANs allow user multiple community groups\
    \ to\n   co-exist within one bridge. A bridging community is identified by its\n\
    \   VLAN ID. If a system that supports Virtual LANs receives a frame from\n  \
    \ the LAN, that frame will be only emitted onto a LAN which belongs to\n   the\
    \ same community. In order to handle multiple communities on a\n   single line,\
    \ IEEE 802.1Q defines a VLAN Tagged Frame.\n   For example, suppose you have the\
    \ following configuration:\n           E1     +--+            +--+     E3\n  \
    \    ------------|  |            |  |------------\n                  |  |    \
    \ W1     |  |\n                  |B1|------------|B2|\n           E2     |  |\
    \            |  |     E4\n      ------------|  |            |  |------------\n\
    \                  +--+            +--+\n   E1, E2, E3, and E4 are Ethernet LANs\
    \ (or Token Ring, FDDI, etc.).  W1\n   is a WAN (PPP over T1).  B1 and B2 are\
    \ MAC level bridges.\n   You want End Stations on E1 and E3 to communicate, and\
    \ you want End\n   Stations on E2 and E4 to communicate, but you do not want End\n\
    \   Stations on E1 and E3 to communicate with End Stations on E2 and E4.\n   This\
    \ is true for Unicast, Multicast, and Broadcast traffic.  If a\n   broadcast datagram\
    \ originates on E1, you want it only to be\n   propagated to E3, and not on E2\
    \ or E4.\n   Another way of looking at it is that E1 and E3 form a Virtual LAN,\n\
    \   and E2 and E4 form a Virtual LAN, as if the following configuration\n   were\
    \ actually being used:\n           E1     +--+     W2     +--+     E3\n      ------------|B3|------------|B4|------------\n\
    \                  +--+            +--+\n           E2     +--+     W3     +--+\
    \     E4\n      ------------|B5|------------|B6|------------\n               \
    \   +--+            +--+\n"
- title: 4.  A PPP Network Control Protocol for Bridging
  contents:
  - "4.  A PPP Network Control Protocol for Bridging\n   The Bridging Control Protocol\
    \ (BCP) is responsible for configuring,\n   enabling and disabling the bridge\
    \ protocol modules on both ends of\n   the point-to-point link.  BCP uses the\
    \ same packet exchange mechanism\n   as the Link Control Protocol.  BCP packets\
    \ may not be exchanged until\n   PPP has reached the Network-Layer Protocol phase.\
    \  BCP packets\n   received before this phase is reached SHOULD be silently discarded.\n\
    \   The Bridging Control Protocol is exactly the same as the Link Control\n  \
    \ Protocol [6] with the following exceptions:\n   Frame Modifications\n      The\
    \ packet may utilize any modifications to the basic frame format\n      which\
    \ have been negotiated during the Link Establishment phase.\n      Implementations\
    \ SHOULD NOT negotiate Address-and-Control-Field-\n      Compression or Protocol-Field-Compression\
    \ on other than low speed\n      links.\n   Data Link Layer Protocol Field\n \
    \     Exactly one BCP packet is encapsulated in the PPP Information\n      field,\
    \ where the PPP Protocol field indicates type hex 8031 (BCP).\n   Code field\n\
    \      Only Codes 1 through 7 (Configure-Request, Configure-Ack,\n      Configure-Nak,\
    \ Configure-Reject, Terminate-Request, Terminate-Ack\n      and Code-Reject) are\
    \ used.  Other Codes SHOULD be treated as\n      unrecognized and SHOULD result\
    \ in Code-Rejects.\n   Timeouts\n      BCP packets may not be exchanged until\
    \ PPP has reached the\n      Network-Layer Protocol phase.  An implementation\
    \ SHOULD be\n      prepared to wait for Authentication and Link Quality Determination\n\
    \      to finish before timing out waiting for a Configure-Ack or other\n    \
    \  response.  It is suggested that an implementation give up only\n      after\
    \ user intervention or a configurable amount of time.\n   Configuration Option\
    \ Types\n      BCP has a distinct set of Configuration Options, which are defined\n\
    \      in this document.\n"
- title: 4.1.  Sending Bridge Frames
  contents:
  - "4.1.  Sending Bridge Frames\n   Before any Bridged LAN Traffic or BPDUs may be\
    \ communicated, PPP MUST\n   reach the Network-Layer Protocol phase, and the Bridging\
    \ Control\n   Protocol MUST reach the Opened state.\n   Exactly one Bridged LAN\
    \ Traffic or BPDU is encapsulated in the PPP\n   Information field, where the\
    \ PPP Protocol field indicates type hex\n   0031 (Bridged PDU).\n"
- title: 4.1.1.  Maximum Receive Unit Considerations
  contents:
  - "4.1.1.  Maximum Receive Unit Considerations\n   The maximum length of a Bridged\
    \ datagram transmitted over a PPP link\n   is the same as the maximum length of\
    \ the Information field of a PPP\n   encapsulated packet.  Since there is no standard\
    \ method for\n   fragmenting and reassembling Bridged PDUs, PPP links supporting\n\
    \   Bridging MUST negotiate an MRU large enough to support the MAC Types\n   that\
    \ are later negotiated for Bridging support.  Because they include\n   the MAC\
    \ headers, even bridged Ethernet frames are larger than the\n   default PPP MRU\
    \ of 1500 octets.\n"
- title: 4.1.2.  Loopback and Link Quality Monitoring
  contents:
  - "4.1.2.  Loopback and Link Quality Monitoring\n   It is strongly recommended that\
    \ PPP Bridge Protocol implementations\n   utilize Magic Number Loopback Detection\
    \ and Link-Quality-Monitoring.\n   The 802.1 Spanning Tree protocol, which is\
    \ integral to both\n   Transparent Bridging and Source Routing (as standardized),\
    \ is\n   unidirectional during normal operation.  Configuration BPDUs emanate\n\
    \   from the Root system in the general direction of the leaves, without\n   any\
    \ reverse traffic except in response to network events.\n"
- title: 4.1.3.  Message Sequence
  contents:
  - "4.1.3.  Message Sequence\n   The multiple link case requires consideration of\
    \ message\n   sequentiality.  The transmitting system may determine either that\
    \ the\n   protocol being bridged requires transmissions to arrive in the order\n\
    \   of their original transmission, and enqueue all transmissions on a\n   given\
    \ conversation onto the same link to force order preservation, or\n   that the\
    \ protocol does NOT require transmissions to arrive in the\n   order of their\
    \ original transmission, and use that knowledge to\n   optimize the utilization\
    \ of several links, enqueuing traffic to\n   multiple links to minimize delay.\n\
    \   In the absence of such a determination, the transmitting system MUST\n   act\
    \ as though all protocols require order preservation.  Many\n   protocols designed\
    \ primarily for use on a single LAN require order\n   preservation.\n   PPP Multilink\
    \ [7] and its multi-class extension [11] may be used to\n   allow the use of multiple\
    \ PPP links between a pair of systems without\n   loss of message sequentiality.\
    \ It treats the group of links as a\n   single link with speed equal to the sum\
    \ of the speeds of the links in\n   the group.\n"
- title: 4.1.4.  Separation of Spanning Tree Domains
  contents:
  - "4.1.4.  Separation of Spanning Tree Domains\n   It is conceivable that a network\
    \ manager might wish to inhibit the\n   exchange of BPDUs on a link in order to\
    \ logically divide two regions\n   into separate Spanning Trees with different\
    \ Roots (and potentially\n   different Spanning Tree implementations or algorithms).\
    \  In order to\n   do that, he should configure both ends to not exchange BPDUs\
    \ on a\n   link.  An implementation that does not support any spanning tree\n\
    \   protocol MUST silently discard any received IEEE 802.1D BPDU packets.\n  \
    \ If a bridge is connected to an old BCP bridge [10], the other bridge\n   cannot\
    \ operate according to this specification. Options are therefore\n   to decide\
    \ that:\n   (a) If the bridge wants to terminate the connection, it sends a\n\
    \       Terminate-Request and terminate the connection.\n   (b) If the bridge\
    \ wants to run the connection but not receive old\n       BPDUs, its only option\
    \ is to run without spanning tree on the\n       link at all, which is dangerous.\
    \ It should Configure-Reject the\n       option and advise the network administration\
    \ that it has done so.\n   (c) If the bridge chooses to be entirely backward compatible,\
    \ it\n       sends Configure-Ack and operates in the manner described in\n   \
    \    Appendix A.\n   In the event that both the new Management-Inline Option and\
    \ the\n   Spanning-Tree-Protocol-Configuration Option are configure-rejected,\n\
    \   indicating that the peer implements no spanning tree protocol at all\n   and\
    \ doesn't understand the options, it is an incomplete\n   implementation. For\
    \ safety reasons the system should cease attempting\n   to configure bridging,\
    \ and log the fact. If the peer was configure-\n   rejecting the options in order\
    \ to disable spanning tree entirely, it\n   understood the option but could not\
    \ within its configuration comply.\n   It should have sent the Spanning-Tree-Protocol-Configuration\
    \ Option\n   with the value NULL.\n   Implementations SHOULD implement a backward\
    \ compatibility mode.\n"
- title: 4.2.  Bridged LAN Traffic (IEEE 802 Untagged Frame)
  contents:
  - "4.2.  Bridged LAN Traffic (IEEE 802 Untagged Frame)\n   For Bridging LAN traffic,\
    \ the format of the frame on the line is\n   shown below. This format is used\
    \ if the traffic does not include VLAN\n   ID and priority.\n   The fields are\
    \ transmitted from left to right.\n   802.3 Frame format (IEEE 802 Un-tagged Frame)\n\
    \     0                   1                   2                   3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+\n\
    \     |   HDLC FLAG   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |      Address and Control      |      0x00     |      0x31     |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |F|0|Z|0|\
    \ Pads  |    MAC Type   |      Destination MAC Address  |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                       Destination MAC Address                 |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                     Source MAC Address                      |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Source MAC Address        |      Length/Type              |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \             LLC data       ...\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                   LAN FCS (optional)                          |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \              potential line protocol pad                    |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |          Frame FCS            |   HDLC FLAG   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   802.4/802.5/FDDI Frame format (IEEE 802 Un-tagged Frame)\n      0        \
    \           1                   2                   3\n      0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+\n    \
    \ |   HDLC FLAG   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |      Address and Control      |      0x00     |      0x31     |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |F|0|Z|0|\
    \ Pads  |    MAC Type   |   Pad Byte    | Frame Control |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                       Destination MAC Address                 |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \   Destination MAC Address   |  Source MAC Address           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                       Source MAC Address                      |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \             LLC data       ...\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                   LAN FCS (optional)                          |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \            optional Data Link Layer padding                 |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |          Frame FCS            |   HDLC FLAG   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Address and Control\n      As defined by the framing in use.\n   PPP Protocol\n\
    \      0x0031 for PPP Bridging\n   Flags\n      bit F:  Set if the LAN FCS Field\
    \ is present\n      bit Z:  Set if IEEE 802.3 Pad must be zero filled to minimum\
    \ size\n      bit 0:  reserved, must be zero\n   Pads\n      Any PPP frame may\
    \ have padding inserted in the \"Optional Data Link\n      Layer Padding\" field.\
    \  This number tells the receiving system how\n      many pad octets to strip\
    \ off.\n   MAC Type\n      Up-to-date values of the MAC Type field are specified\
    \ in the most\n      recent \"Assigned Numbers\" RFC [4].  Current values are\
    \ assigned as\n      follows:\n          0: reserved\n          1: IEEE 802.3/Ethernet\
    \  with canonical addresses\n          2: IEEE 802.4           with canonical\
    \ addresses\n          3: IEEE 802.5           with non-canonical addresses\n\
    \          4: FDDI                 with non-canonical addresses\n       5-10:\
    \ reserved\n         11: IEEE 802.5           with canonical addresses\n     \
    \    12: FDDI                 with canonical addresses\n      \"Canonical\" is\
    \ the address format defined as standard address\n      representation by the\
    \ IEEE.  In this format, the bit within each\n      byte that is to be transmitted\
    \ first on a LAN is represented as\n      the least significant bit.  In contrast,\
    \ in non-canonical form,\n      the bit within each byte that is to be transmitted\
    \ first is\n      represented as the most-significant bit.  Many LAN interface\n\
    \      implementations use non-canonical form.  In both formats, bytes\n     \
    \ are represented in the order of transmission.\n      If an implementation supports\
    \ a MAC Type that is the higher-\n      numbered format of that MAC Type, then\
    \ it MUST also support the\n      lower-numbered format of that MAC Type.  For\
    \ example, if an\n      implementation supports FDDI with canonical address format,\
    \ then\n      it MUST also support FDDI with non-canonical address format.  The\n\
    \      purpose of this requirement is to provide backward compatibility\n    \
    \  with earlier versions of this specification.\n      A system MUST NOT transmit\
    \ a MAC Type numbered higher than 4\n      unless it has received from its peer\
    \ a MAC-Support Configuration\n      Option indicating that the peer is willing\
    \ to receive frames of\n      that MAC Type.\n   Frame Control\n      On 802.4,\
    \ 802.5, and FDDI LANs, there are a few octets preceding\n      the Destination\
    \ MAC Address, one of which is protected by the FCS.\n      The MAC Type of the\
    \ frame determines the contents of the Frame\n      Control field.  A pad octet\
    \ is present to provide 32-bit packet\n      alignment.\n   Destination MAC Address\n\
    \      As defined by the IEEE.  The MAC Type field defines the bit\n      ordering.\n\
    \   Source MAC Address\n      As defined by the IEEE.  The MAC Type field defines\
    \ the bit\n      ordering.\n   LLC data\n      This is the remainder of the MAC\
    \ frame which is (or would be were\n      it present) protected by the LAN FCS.\n\
    \      For example, the 802.5 Access Control field, and Status Trailer\n     \
    \ are not meaningful to transmit to another ring, and are omitted.\n   LAN FCS\n\
    \      If present, this is the LAN FCS which was calculated by (or which\n   \
    \   appears to have been calculated by) the originating station.  If\n      the\
    \ LAN FCS flag is not set, then this field is not present, and\n      the PDU\
    \ is four octets shorter.\n   Optional Data Link Layer Padding\n      Any PPP\
    \ frame may have padding inserted between the Information\n      field and the\
    \ Frame FCS.  The Pads field contains the length of\n      this padding, which\
    \ may not exceed 15 octets.\n      The PPP LCP Extensions [5] specify a self-describing\
    \ pad.\n      Implementations are encouraged to set the Pads field to zero, and\n\
    \      use the self-describing pad instead.\n   Frame FCS\n      Mentioned primarily\
    \ for clarity.  The FCS used on the PPP link is\n      separate from and unrelated\
    \ to the LAN FCS.\n"
- title: 4.3.  Bridged LAN Traffic in IEEE 802 Tagged Frame
  contents:
  - "4.3.  Bridged LAN Traffic in IEEE 802 Tagged Frame\n   To connect two or more\
    \ Virtual LAN segments, the frame MUST include\n   its VLAN ID and priority. An\
    \ IEEE 802 Tagged Frame may be used if the\n   IEEE-802-Tagged-Frame Option is\
    \ accepted by the peer. The format of\n   the frame on the line is shown below.\n\
    \   The fields are transmitted from left to right.\n   802.3 Frame format (IEEE\
    \ 802 Tagged Frame)\n      0                   1                   2         \
    \          3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +-+-+-+-+-+-+-+-+\n      |   HDLC FLAG   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      Address and Control      |      0x00     |      0x31     |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |F|0|Z|0|\
    \ Pads  |    MAC Type   |      Destination MAC Address  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Destination MAC Address                 |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Source MAC Address                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Source MAC Address        |     0x81       |     0x00     |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |Pri\
    \  |C| VLAN ID               |      Length/Type              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |               LLC data       ...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                   LAN FCS (optional)                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                potential line protocol pad                    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          Frame FCS            |   HDLC FLAG   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   802.4/802.5/FDDI Frame format (IEEE 802 Tagged Frame)\n      0           \
    \        1                   2                   3\n      0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+\n     |\
    \   HDLC FLAG   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |      Address and Control      |      0x00     |      0x31     |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |F|0|Z|0|\
    \ Pads  |    MAC Type   |   Pad Byte    | Frame Control |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                       Destination MAC Address                 |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \   Destination MAC Address   |  Source MAC Address           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                       Source MAC Address                      |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                 SNAP-encoded TPID                           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                   SNAP-encoded TPID                           |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |Pri\
    \  |C| VLAN ID               |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |\
    \               LLC data       ...\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                   LAN FCS (optional)                          |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \            optional Data Link Layer padding                 |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |          Frame FCS            |   HDLC FLAG   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Address and Control\n      As defined by the framing in use.\n   PPP Protocol\n\
    \      0x0031 for PPP Bridging\n   Flags\n      bit F:  Set if the LAN FCS Field\
    \ is present\n      bit Z:  Set if IEEE 802.3 Pad must be zero filled to minimum\
    \ size\n      bit 0:  reserved, must be zero\n   Pads\n      Any PPP frame may\
    \ have padding inserted in the \"Optional Data Link\n      Layer Padding\" field.\
    \  This number tells the receiving system how\n      many pad octets to strip\
    \ off.\n   MAC Type\n      Up-to-date values of the MAC Type field are specified\
    \ in the most\n      recent \"Assigned Numbers\" RFC [4].  Current values are\
    \ assigned as\n      follows:\n          0: reserved\n          1: IEEE 802.3/Ethernet\
    \  with canonical addresses\n          2: IEEE 802.4           with canonical\
    \ addresses\n          3: IEEE 802.5           with non-canonical addresses\n\
    \          4: FDDI                 with non-canonical addresses\n       5-10:\
    \ reserved\n         11: IEEE 802.5           with canonical addresses\n     \
    \    12: FDDI                 with canonical addresses\n      \"Canonical\" is\
    \ the address format defined as standard address\n      representation by the\
    \ IEEE.  In this format, the bit within each\n      byte that is to be transmitted\
    \ first on a LAN is represented as\n      the least significant bit.  In contrast,\
    \ in non-canonical form,\n      the bit within each byte that is to be transmitted\
    \ first is\n      represented as the most-significant bit.  Many LAN interface\n\
    \      implementations use non-canonical form.  In both formats, bytes\n     \
    \ are represented in the order of transmission.\n      If an implementation supports\
    \ a MAC Type that is the higher-\n      numbered format of that MAC Type, then\
    \ it MUST also support the\n      lower-numbered format of that MAC Type.  For\
    \ example, if an\n      implementation supports FDDI with canonical address format,\
    \ then\n      it MUST also support FDDI with non-canonical address format.  The\n\
    \      purpose of this requirement is to provide backward compatibility\n    \
    \  with earlier versions of this specification.\n      A system MUST NOT transmit\
    \ a MAC Type numbered higher than 4\n      unless it has received from its peer\
    \ a MAC-Support Configuration\n      Option indicating that the peer is willing\
    \ to receive frames of\n      that MAC Type.\n   Frame Control\n      On 802.4,\
    \ 802.5, and FDDI LANs, there are a few octets preceding\n      the Destination\
    \ MAC Address, one of which is protected by the FCS.\n      The MAC Type of the\
    \ frame determines the contents of the Frame\n      Control field.  A pad octet\
    \ is present to provide 32-bit packet\n      alignment.\n   Destination MAC Address\n\
    \      As defined by the IEEE.  The MAC Type field defines the bit\n      ordering.\n\
    \   Source MAC Address\n      As defined by the IEEE.  The MAC Type field defines\
    \ the bit\n      ordering.\n   Pri\n      3 bit priority value as defined by IEEE\
    \ 802.1D.\n   C\n      Canonical flag as defined by IEEE 802.1Q. It must be set\
    \ if RIF\n      data is present in the LLC data.\n   VLAN ID\n      12 bit VLAN\
    \ identifier number as defined by IEEE 802.1Q.\n   LLC data\n      This is the\
    \ remainder of the MAC frame which is (or would be were\n      it present) protected\
    \ by the LAN FCS.\n      For example, the 802.5 Access Control field, and Status\
    \ Trailer\n      are not meaningful to transmit to another ring, and are omitted.\n\
    \   LAN FCS\n      If present, this is the LAN FCS which was calculated by (or\
    \ which\n      appears to have been calculated by) the originating station.  If\n\
    \      the LAN FCS flag is not set, then this field is not present, and\n    \
    \  the PDU is four octets shorter.\n   Optional Data Link Layer Padding\n    \
    \  Any PPP frame may have padding inserted between the Information\n      field\
    \ and the Frame FCS.  The Pads field contains the length of\n      this padding,\
    \ which may not exceed 15 octets.\n      The PPP LCP Extensions [5] specify a\
    \ self-describing pad.\n      Implementations are encouraged to set the Pads field\
    \ to zero, and\n      use the self-describing pad instead.\n   Frame FCS\n   \
    \   Mentioned primarily for clarity.  The FCS used on the PPP link is\n      separate\
    \ from and unrelated to the LAN FCS.\n"
- title: 4.4. Bridge protocols and GARP protocols
  contents:
  - "4.4. Bridge protocols and GARP protocols\n   To avoid network loops and improve\
    \ redundancy, Bridges exchange a\n   Spanning Tree Protocol data unit known as\
    \ BPDU. Bridges also exchange\n   a Generic Attributes Registration Protocol data\
    \ unit to carry the\n   GARP VLAN Registration Protocol (GVRP) data and GARP Multicast\n\
    \   Registration Protocol (GMRP). GVRP allow the Bridges to create VLAN\n   groups\
    \ dynamically. GMRP allows bridges to filter Multicast data if\n   the receiver\
    \ is absent from the network. These Bridge protocols\n   include Spanning Tree\
    \ Protocol and GARP protocols data units are\n   carried with a special destination\
    \ address assigned by the IEEE.\n   These bridge protocols data units and GARP\
    \ protocol data units must\n   be carried in the frame format shown in section\
    \ 4.2 or 4.3. The\n   Bridge that receives these data units identifies these protocols\n\
    \   based on the destination address in the frame format, just like the\n   operation\
    \ of receiving frames from a LAN segment.\n   Bridge protocols and GARP protocols\
    \ data units MUST be recognized by\n   checking the destination addresses, which\
    \ are assigned by IEEE.\n      01-80-c2-00-00-00  Bridge Group Address (used by\
    \ STP)\n      01-80-c2-00-00-01  IEEE Std. 802.3x Full Duplex PAUSE operation\n\
    \      01-80-c2-00-00-10  Bridge Management Group Address\n      01-80-c2-00-00-20\
    \  GARP Multicast Registration Protocol (GMRP)\n      01-80-c2-00-00-21  GARP\
    \ VLAN Registration Protocol (GVRP)\n   But there is one exception to this rule:\
    \ if the bridge is connected\n   to an old BCP bridge [10] and can support backward\
    \ compatibility, it\n   MUST send the BPDU in the old format described in Appendix\
    \ A.\n"
- title: 5.  BCP Configuration Options
  contents:
  - "5.  BCP Configuration Options\n   BCP Configuration Options allow modifications\
    \ to the standard\n   characteristics of the network-layer protocol to be negotiated.\
    \  If a\n   Configuration Option is not included in a Configure-Request packet,\n\
    \   the default value for that Configuration Option is assumed.\n   BCP uses the\
    \ same Configuration Option format defined for LCP [6],\n   with a separate set\
    \ of Options.\n   Up-to-date values of the BCP Option Type field are specified\
    \ in the\n   most recent \"Assigned Numbers\" RFC [4].  Current values are assigned\n\
    \   as follows:\n         1       Bridge-Identification\n         2       Line-Identification\n\
    \         3       MAC-Support\n         4       Tinygram-Compression\n       \
    \  5       LAN-Identification (obsoleted)\n         6       MAC-Address\n    \
    \     7       Spanning-Tree-Protocol (old formatted)\n         8       IEEE 802\
    \ Tagged Frame\n         9       Management Inline\n"
- title: 5.1.  Bridge-Identification
  contents:
  - "5.1.  Bridge-Identification\n   Description\n      The Bridge-Identification\
    \ Configuration Option is designed for use\n      when the line is an interface\
    \ between half bridges connecting\n      virtual or physical LAN segments.  Since\
    \ these remote bridges are\n      modeled as a single bridge with a strange internal\
    \ interface, each\n      remote bridge needs to know the LAN segment and bridge\
    \ numbers of\n      the adjacent remote bridge.  This option MUST NOT be included\
    \ in\n      the same Configure-Request as the Line-Identification option.\n  \
    \    The Source Routing Route Descriptor and its use are specified by\n      the\
    \ IEEE 802.1D Appendix on Source Routing.  It identifies the\n      segment to\
    \ which the interface is attached by its configured\n      segment number, and\
    \ itself by bridge number on the segment.\n      The two half bridges MUST agree\
    \ on the bridge number.  If a bridge\n      number is not agreed upon, the Bridging\
    \ Control Protocol MUST NOT\n      enter the Opened state.\n      Since mismatched\
    \ bridge numbers are indicative of a configuration\n      error, a correct configuration\
    \ requires that either the bridge\n      declare the misconfiguration or choose\
    \ one of the options.  To\n      allow two systems to proceed to the Opened state\
    \ despite a\n      mismatch, a system MAY change its bridge number to the higher\
    \ of\n      the two numbers. A higher-numbered system MUST NOT change its\n  \
    \    bridge number to a lower number. It should, however, inform the\n      network\
    \ administration of the misconfiguration in any case.\n      By default, a system\
    \ that does not negotiate this option is\n      assumed to be configured not to\
    \ use the model of the two systems\n      as two halves of a single source-route\
    \ bridge.  It is instead\n      assumed to be configured to use the model of the\
    \ two systems as\n      two independent bridges.\n   Example\n      If System\
    \ A announces LAN Segment AAA, Bridge #1, and System B\n      announces LAN Segment\
    \ BBB, Bridge #1, then the resulting Source\n      Routing configuration (read\
    \ in the appropriate direction) is then\n      AAA,1,BBB.\n   A summary of the\
    \ Bridge-Identification Option format is shown below.\n   The fields are transmitted\
    \ from left to right.\n     0                   1                   2        \
    \           3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |    Length     | LAN Segment Number    |Bridge#|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      1\n   Length\n      4\n   LAN Segment Number\n      A 12-bit number\
    \ identifying the LAN segment, as defined in the\n      IEEE 802.1D Source Routing\
    \ Specification.\n   Bridge Number\n      A 4-bit number identifying the bridge\
    \ on the LAN segment, as\n      defined in the IEEE 802.1D Source Routing Specification.\n"
- title: 5.2.  Line-Identification
  contents:
  - "5.2.  Line-Identification\n   Description\n      The Line-Identification Configuration\
    \ Option is designed for use\n      when the line is assigned a LAN segment number\
    \ as though it were a\n      two system LAN segment in accordance with the Source\
    \ Routing\n      algorithm.\n      The Source Routing Route Descriptor and its\
    \ use are specified by\n      the IEEE 802.1D Appendix on Source Routing.  It\
    \ identifies the\n      segment to which the interface is attached by its configured\n\
    \      segment number, and itself by bridge number on the segment.\n      The\
    \ two bridges MUST agree on the LAN segment number.  If a LAN\n      segment number\
    \ is not agreed upon, the Bridging Control Protocol\n      MUST NOT enter the\
    \ Opened state.\n      Since mismatched LAN segment numbers are indicative of\
    \ a\n      configuration error, a correct configuration requires that either\n\
    \      the bridge declare the misconfiguration or choose one of the\n      options.\
    \  To allow two systems to proceed to the Opened state\n      despite a mismatch,\
    \ a system MAY change its LAN segment number to\n      the higher of the two numbers.\
    \  A higher-numbered system MUST NOT\n      change its LAN segment number to a\
    \ lower number. It should,\n      however, inform the network administration of\
    \ the misconfiguration\n      in any case.\n      By default, a system that does\
    \ not negotiate this option is\n      assumed to have its LAN segment number correctly\
    \ configured by the\n      user.\n   A summary of the Line-Identification Option\
    \ format is shown below.\n   The fields are transmitted from left to right.\n\
    \     0                   1                   2                   3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |    Length     | LAN Segment Number    |Bridge#|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      2\n   Length\n      4\n   LAN Segment Number\n      A 12-bit number\
    \ identifying the LAN segment, as defined in the\n      IEEE 802.1D Source Routing\
    \ Specification.\n   Bridge Number\n      A 4-bit number identifying the bridge\
    \ on the LAN segment, as\n      defined in the IEEE 802.1D Source Routing Specification.\n"
- title: 5.3.  MAC-Support
  contents:
  - "5.3.  MAC-Support\n   Description\n      The MAC-Support Configuration Option\
    \ is provided to permit\n      implementations to indicate the sort of traffic\
    \ they are prepared\n      to receive.  Negotiation of this option is strongly\
    \ recommended.\n      By default, when an implementation does not announce the\
    \ MAC Types\n      that it supports, all MAC Types are sent by the peer which\
    \ are\n      capable of being transported given other configuration parameters.\n\
    \      The receiver will discard those MAC Types that it does not\n      support.\n\
    \      A device supporting a 1600 octet MRU might not be willing to\n      support\
    \ 802.5, 802.4 or FDDI, which each support frames larger\n      than 1600 octets.\n\
    \      By announcing the MAC Types it will support, an implementation is\n   \
    \   advising its peer that all unspecified MAC Types will be\n      discarded.\
    \  The peer MAY then reduce bandwidth usage by not\n      sending the unsupported\
    \ MAC Types.\n      Announcement of support for multiple MAC Types is accomplished\
    \ by\n      placing multiple options in the Configure-Request.\n      The nature\
    \ of this option is advisory only.  This option MUST NOT\n      be included in\
    \ a Configure-Nak.\n   A summary of the MAC-Support Option format is shown below.\
    \  The\n   fields are transmitted from left to right.\n     0                \
    \   1                   2\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |     Type   \
    \   |    Length     |    MAC Type   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      3\n   Length\n      3\n   MAC Type\n      One of the values of\
    \ the PDU MAC Type field (previously described\n      in the \"Bridged LAN Traffic\"\
    \ section) that this system is prepared\n      to receive and service.\n"
- title: 5.4.  Tinygram-Compression
  contents:
  - "5.4.  Tinygram-Compression\n   Description\n      This Configuration Option permits\
    \ the implementation to indicate\n      support for Tinygram compression.\n  \
    \    Not all systems are prepared to make modifications to messages in\n     \
    \ transit.  On high speed lines, it is probably not worth the\n      effort.\n\
    \      This option MUST NOT be included in a Configure-Nak if it has been\n  \
    \    received in a Configure-Request.  This option MAY be included in a\n    \
    \  Configure-Nak in order to prompt the peer to send the option in\n      its\
    \ next Configure-Request.\n      By default, no compression is allowed.  A system\
    \ which does not\n      negotiate, or negotiates this option to be disabled, should\
    \ never\n      receive a compressed packet.\n   A summary of the Tinygram-Compression\
    \ Option format is shown below.\n   The fields are transmitted from left to right.\n\
    \     0                   1                   2\n     0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |    Length     | Enable/Disable|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      4\n   Length\n      3\n   Enable/Disable\n      If the value is\
    \ 1, Tinygram-Compression is enabled.  If the value\n      is 2, Tinygram-Compression\
    \ is disabled, and no decompression will\n      occur.\n      The implementations\
    \ need not agree on the setting of this\n      parameter.  One may be willing\
    \ to decompress and the other not.\n"
- title: 5.5.  MAC-Address
  contents:
  - "5.5.  MAC-Address\n   Description\n      The MAC-Address Configuration Option\
    \ enables the implementation to\n      announce its MAC address or have one assigned.\
    \  The MAC address is\n      represented in IEEE 802.1 Canonical format, which\
    \ is to say that\n      the multicast bit is the least significant bit of the\
    \ first octet\n      of the address.\n      If the system wishes to announce its\
    \ MAC address, it sends the\n      option with its MAC address specified.  When\
    \ specifying a non-zero\n      MAC address in a Configure-Request, any inclusion\
    \ of this option\n      in a Configure-Nak MUST be ignored.\n      If the implementation\
    \ wishes to have a MAC address assigned, it\n      sends the option with a MAC\
    \ address of 00-00-00-00-00-00.  Systems\n      that have no mechanism for address\
    \ assignment will Configure-\n      Reject the option.\n      A Configure-Nak\
    \ MUST specify a valid IEEE 802.1 format physical\n      address; the multicast\
    \ bit MUST be zero.  It is strongly\n      recommended (although not mandatory)\
    \ that the \"locally assigned\n      address\" bit (the second least significant\
    \ bit in the first octet)\n      be set, indicating a locally assigned address.\n\
    \   A summary of the MAC-Address Option format is shown below.  The\n   fields\
    \ are transmitted from left to right.\n     0                   1            \
    \       2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |    Length     |MAC byte 1 |L|M|  MAC byte 2   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |  MAC byte 3   |  MAC byte 4   |  MAC byte 5   |  MAC byte 6   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      6\n   Length\n      8\n   MAC Byte\n      Six octets of MAC address\
    \ in 802.1 Canonical order.  For clarity,\n      the position of the Local Assignment\
    \ (L) and Multicast (M) bits\n      are shown in the diagram.\n"
- title: 5.6.  Spanning-Tree-Protocol (old format)
  contents:
  - "5.6.  Spanning-Tree-Protocol (old format)\n   Description\n      The Spanning-Tree-Protocol\
    \ Configuration enables a Bridge to\n      remain compatible with older implementations\
    \ of BCP [10]. This\n      configuration option is, however, incompatible with\
    \ the\n      Management-Inline option, which enables a bridge to implement the\n\
    \      many protocols that IEEE now expects a bridge to be able to use.\n    \
    \  If the peer rejects the Management-Inline configuration option, by\n      sending\
    \ configure-reject, it must be an implementation of [10],\n      which is described\
    \ in Appendix A. The system may optionally\n      terminate the negotiation or\
    \ offer to negotiate in that manner.\n      In this case, if both bridges support\
    \ a spanning tree protocol,\n      they MUST agree on the protocol to be supported.\
    \ The old BPDU\n      described in Appendix A MUST be used rather than the format\
    \ shown\n      in section 4.2 or 4.3. When the two disagree, the lower-numbered\n\
    \      of the two spanning tree protocols should be used.  To resolve the\n  \
    \    conflict, the system with the lower-numbered protocol SHOULD\n      Configure-Nak\
    \ the option, suggesting its own protocol for use. If\n      a spanning tree protocol\
    \ is not agreed upon, except for the case\n      in which one system does not\
    \ support any spanning tree protocol,\n      the Bridging Control Protocol MUST\
    \ NOT enter the Opened state.\n      Most systems will only participate in a single\
    \ spanning tree\n      protocol.  If a system wishes to participate simultaneously\
    \ in\n      more than one spanning tree protocol, it MAY include all of the\n\
    \      appropriate protocol types in a single Spanning-Tree-Protocol\n      Configuration\
    \ Option.  The protocol types MUST be specified in\n      increasing numerical\
    \ order.  For the purpose of comparison during\n      negotiation, the protocol\
    \ numbers MUST be considered to be a\n      single number.  For instance, if System\
    \ A includes protocols 01\n      and 03 and System B indicates protocol 03, System\
    \ B should\n      Configure-Nak and indicate a protocol type of 03 since 0103\
    \ is\n      greater than 03.\n      By default, an implementation MUST either\
    \ support the IEEE 802.1D\n      spanning tree or support no spanning tree protocol.\
    \  An\n      implementation that does not support any spanning tree protocol\n\
    \      MUST silently discard any received IEEE 802.1D BPDU packets, and\n    \
    \  MUST either silently discard or respond to other received BPDU\n      packets\
    \ with an LCP Protocol-Reject packet in this case.\n   A summary of the Spanning-Tree-Protocol\
    \ Option format is shown below.\n   The fields are transmitted from left to right.\n\
    \     0                   1                   2                   3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \    |     Type      |    Length     |  Protocol 1   |  Protocol 2   | ..\n  \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n   Type\n\
    \      7\n   Length\n      2 octets plus 1 additional octet for each protocol\
    \ that will be\n      actively supported.  Most systems will only support a single\n\
    \      spanning tree protocol, resulting in a length of 3.\n   Protocol n\n  \
    \    Each Protocol field is one octet and indicates a desired spanning\n     \
    \ tree protocol. Up-to-date values of the Spanning-Tree-Protocol\n      field\
    \ are specified as PPP DLL numbers in the most recent\n      \"Assigned Numbers\"\
    \ RFC [4].  Current values are assigned as\n      follows:\n            Value\
    \     Protocol\n              0       Null (no Spanning Tree protocol supported)\n\
    \              1       IEEE 802.1D spanning tree\n              2       IEEE 802.1G\
    \ extended spanning tree protocol\n              3       IBM Source Route Spanning\
    \ tree protocol\n              4       DEC LANbridge 100 Spanning tree protocol\n"
- title: 5.7.  IEEE-802-Tagged-Frame
  contents:
  - "5.7.  IEEE-802-Tagged-Frame\n   Description\n      This configuration option\
    \ permits the implementation to indicate\n      support for IEEE 802 Tagged Frame.\
    \ Negotiation of this option is\n      strongly recommended.\n      A device supporting\
    \ IEEE 802 Tagged Frame must be willing to\n      support IEEE 802 Tagged Frame\
    \ shown in section 4.3.\n      By default, IEEE 802 Tagged Frame is not supported.\
    \ A system which\n      does not negotiate, or negotiates this option to be disabled,\n\
    \      should never receive a IEEE 802 Tagged Frame.\n   A summary of the IEEE\
    \ 802 Tagged Frame Option format is shown below.\n   The fields are transmitted\
    \ from left to right.\n     0                   1                   2\n     0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |    Length     | Enable/Disable|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      8\n   Length\n      3\n   Enable/Disable\n      If the value is\
    \ 1, IEEE-802-Tagged-Frame is enabled.  If the value\n      is 2, IEEE-802-Tagged-Frame\
    \ is disabled, and MUST not send any\n      IEEE-802-Tagged-Frame packet.\n"
- title: 5.8.  Management-Inline
  contents:
  - "5.8.  Management-Inline\n   Description\n      The Management-Inline Configuration\
    \ Option indicates that the\n      system is willing to receive any IEEE-defined\
    \ inter-bridge\n      protocols, such as bridge protocol data units and GARP protocol\n\
    \      data units, in the frame format shown in section 4.2 or 4.3.\n      Old\
    \ BCP [10] implementations will use the negotiation procedure\n      described\
    \ in section 5.6. Implementations of this procedure will\n      use this option\
    \ to indicate compliance with the new BCP and may\n      optionally negotiate\
    \ the section 5.6 procedure, either on the same\n      configure-request or in\
    \ response to a configure-reject, as well.\n      It is recommended that the configure-request\
    \ only show this option\n      when it is relevant, and that it reply with the\
    \ Spanning-Tree-\n      Protocol (old formatted) option if a configure-reject\
    \ is received,\n      as in the normal case one can expect it to be the quickest\n\
    \      negotiation.\n      If a system receives a configure-request offering both\n\
    \      alternatives, it should accept this procedure and reject the\n      Spanning-Tree-Protocol\
    \ (old format) option.\n      One can expect old BCP [10] implementations to not\
    \ understand the\n      option and issue a configure-reject.\n      By default,\
    \ Management-Inline is not allowed.  A system which does\n      not negotiate,\
    \ or negotiates this option to be disabled, should\n      never receive a Bridge\
    \ Protocol data unit or GARP protocol data\n      unit inline.\n      A summary\
    \ of the Management-Inline Option format is shown below.\n      The fields are\
    \ transmitted from left to right.\n        0                   1\n        0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |     Type      |    Length     |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      9\n   Length\n      2\n"
- title: 6. Changes From RFC 1638
  contents:
  - "6. Changes From RFC 1638\n   This section enumerates changes made to old BCP\
    \ [10] to produce this\n   document.\n   (1) Remove all LAN Identification descriptions\
    \ and replace with IEEE\n       802.1Q VLAN descriptions.\n   (2) Remove LAN Identification\
    \ field from frame format and I flags\n       from flag field.\n   (3) Merge the\
    \ Spanning Tree BPDU frame format with Bridged traffic.\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   This network control protocol compares the configurations\
    \ of two\n   devices and seeks to negotiate an acceptable subset of their\n  \
    \ intersection, to enable correct interoperation even in the presence\n   of minor\
    \ configuration or implementation differences. In the event\n   that a major misconfiguration\
    \ is detected, the negotiation will not\n   complete successfully, resulting in\
    \ the link coming down or not\n   coming up. It is possible that if a bridged\
    \ link comes up with a\n   rogue peer, network information may be learned from\
    \ forwarded\n   multicast traffic, or denial of service attacks may be created\
    \ by\n   closing loops that should be detected and isolated or by offering\n \
    \  rogue load.\n   Such attacks are not isolated to this NCP; any PPP NCP is subject\
    \ to\n   attack when connecting to a foreign or compromised device. However,\n\
    \   no situations arise which are not common to all NCPs; any NCP that\n   comes\
    \ up with a rogue peer is subject to snooping and other attacks.\n   Therefore,\
    \ it is recommended that links on which this may happen\n   should be configured\
    \ to use PPP authentication during the LCP start-\n   up phase.\n"
- title: 8. Intellectual Property Notice
  contents:
  - "8. Intellectual Property Notice\n   The IETF takes no position regarding the\
    \ validity or scope of any\n   intellectual property or other rights that might\
    \ be claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; neither does it represent that it\n   has\
    \ made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementers or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\"\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n   The IETF has been notified of intellectual\
    \ property rights claimed in\n   regard to some or all of the specification contained\
    \ in this\n   document.  For more information consult the online list of claimed\n\
    \   rights.\n"
- title: 9. IANA Considerations
  contents:
  - "9. IANA Considerations\n   This document proposes a total of two new BCP option\
    \ numbers to be\n   maintained by the IANA. These options (described in Section\
    \ 5.1 and\n   5.2) are IEEE-802-Tagged-Frame and Management-Inline. The IANA has\n\
    \   assigned the values 8 and 9 respectively for these option numbers.\n"
- title: 10. Acknowledgments
  contents:
  - "10. Acknowledgments\n   This document is a product of the Point-to-Point Protocol\
    \ Extensions\n   Working Group.\n   This document is based on the PPP Bridging\
    \ Control Protocol, RFC 1638\n   [10], edited by Rich Bowen of IBM and produced\
    \ by the Point-to-Point\n   Protocol Extensions Working Group. It extends that\
    \ document by\n   providing support for Virtual LANs as outlined in [9].\n"
- title: A.  Spanning Tree Bridge PDU (old format)
  contents:
  - "A.  Spanning Tree Bridge PDU (old format)\n   By default, Spanning Tree BPDUs\
    \ MUST be encoded with a MAC or 802.2\n   LLC header as described in section 4.2\
    \ or 4.3 of this document.\n   However, should the remote entity Configure-Reject\
    \ the Management-\n   Inline option, thereby indicating that it is a purely RFC\
    \ 1638\n   compliant device, the local entity may subsequently encode BPDUs as\n\
    \   described in section 4.3 of RFC 1638 provided that use of a suitable\n   non-NULL\
    \ STP protocol across the link is successfully negotiated\n   using the (old)\
    \ Spanning-Tree-Protocol option.\n   This is the Spanning Tree BPDU used in RFC\
    \ 1638, without any MAC or\n   802.2 LLC header (these being functionally equivalent\
    \ to the Address,\n   Control, and PPP Protocol Fields).  The LAN Pad and Frame\
    \ Checksum\n   fields are likewise superfluous and absent.\n   The Address and\
    \ Control Fields are subject to LCP Address-and-\n   Control-Field-Compression\
    \ negotiation.\n   A PPP system which is configured to participate in a particular\n\
    \   spanning tree protocol and receives a BPDU of a different spanning\n   tree\
    \ protocol SHOULD reject it with the LCP Protocol-Reject.  A\n   system which\
    \ is configured not to participate in any spanning tree\n   protocol MUST silently\
    \ discard all BPDUs.\n   Spanning Tree Bridge PDU\n     0                   1\
    \                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+\n    |   HDLC FLAG\
    \   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |      Address and Control      |     Spanning Tree Protocol    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |              BPDU data       ...                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |          Frame FCS            |   HDLC FLAG   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Address and Control\n      As defined by the framing in use.\n   Spanning\
    \ Tree Protocol\n      Up-to-date values of the Spanning-Tree-Protocol field are\n\
    \      specified in the most recent \"Assigned Numbers\" RFC [4].  Current\n \
    \     values are assigned as follows:\n         Value (in hex)  Protocol\n   \
    \      0201            IEEE 802.1 (either 802.1D or 802.1G)\n         0203   \
    \         IBM Source Route Bridge\n         0205            DEC LANbridge 100\n\
    \      The two versions of the IEEE 802.1 spanning tree protocol frames\n    \
    \  can be distinguished by fields within the BPDU data.\n   BPDU data\n      As\
    \ defined by the specified Spanning Tree Protocol.\n"
- title: B.  Tinygram-Compression Pseudo-Code
  contents:
  - "B.  Tinygram-Compression Pseudo-Code\n   PPP Transmitter:\n   if (ZeroPadCompressionEnabled\
    \ &&\n       BridgedProtocolHeaderFormat == IEEE8023 &&\n       PacketLength ==\
    \ Minimum8023PacketLength) {\n    /*\n     * Remove any continuous run of zero\
    \ octets preceding,\n     * but not including, the LAN FCS, but not extending\n\
    \     * into the MAC header.\n     */\n       Set (ZeroCompressionFlag);     \
    \      /* Signal receiver */\n       if (is_Set (LAN_FCS_Present)) {\n       \
    \    FCS = TrailingOctets (PDU, 4);   /* Store FCS */\n           RemoveTrailingOctets\
    \ (PDU, 4);   /* Remove FCS */\n           while (PacketLength > 14 &&      /*\
    \ Stop at MAC header or */\n                  TrailingOctet (PDU) == 0) /*  last\
    \ non-zero octet */\n              RemoveTrailingOctets (PDU, 1);/* Remove zero\
    \ octet */\n           Appendbuf (PDU, 4, FCS);         /* Restore FCS */\n  \
    \     }\n       else {\n           while (PacketLength > 14 &&      /* Stop at\
    \ MAC header */\n                  TrailingOctet (PDU) == 0) /*  or last zero\
    \ octet */\n              RemoveTrailingOctets (PDU, 1);/* Remove zero octet */\n\
    \       }\n   }\n   PPP Receiver:\n   if (ZeroCompressionFlag) {             \
    \   /* Flag set in header? */\n    /* Restoring packet to minimum 802.3 length\
    \ */\n       Clear (ZeroCompressionFlag);\n       if (is_Set (LAN_FCS_Present))\
    \ {\n           FCS = TrailingOctets (PDU, 4);   /* Store FCS */\n           RemoveTrailingOctets\
    \ (PDU, 4);   /* Remove FCS */\n           Appendbuf (PDU, 60 - PacketLength,\
    \ zeroes);/* Add zeroes */\n           Appendbuf (PDU, 4, FCS);         /* Restore\
    \ FCS */\n       }\n       else {\n           Appendbuf (PDU, 60 - PacketLength,\
    \ zeroes);/* Add zeroes */\n       }\n   }\n"
- title: References
  contents:
  - "References\n   [1]  IBM, \"Token-Ring Network Architecture Reference\", 3rd edition,\n\
    \        September 1989.\n   [2]  IEEE 802.1, \"Draft Standard 802.1G: Remote\
    \ MAC Bridging\",\n        P802.1G/D7, December 30, 1992.\n   [3]  IEEE 802.1D-1993,\
    \ \"Media Access Control (MAC) Bridges\", ISO/IEC\n        15802-3:1993 ANSI/IEEE\
    \ Std 802.1D, 1993 edition., July 1993.\n   [4]  Reynolds, J. and J. Postel, \"\
    Assigned Numbers\", STD 2, RFC 1700,\n        October 1994.  See also: http://www.iana.org/numbers.html\n\
    \   [5]  Simpson, W., \"PPP LCP Extensions\", RFC 1570, January 1994.\n   [6]\
    \  Simpson, W., \"The Point-to-Point Protocol (PPP)\", STD 51, RFC\n        1661,\
    \ July 1994.\n   [7]  Sklower, K., Lloyd, B., McGregor, G., Carr, D. and T. Coradetti,\n\
    \        \"The PPP Multilink Protocol (MP)\", RFC 1990, August 1996.\n   [8] \
    \ IEEE 802.1D-1998, \"Information technology - Telecommunications\n        and\
    \ Information exchange between systems - Local and\n        metropolitan area\
    \ networks - Common Specifications - Part 3:\n        Media Access Control (MAC)\
    \ Bridges: Revision. This is a revision\n        of ISO/IEC 10038: 1993, 802.1j-1992\
    \ and 802.6k-1992. It\n        incorporates P802.11c, P802.1p and P802.12e.\"\
    \ ISO/IEC 15802-3:\n        1998.\n   [9]  IEEE 802.1Q, ANSI/IEEE Standard 802.1Q,\
    \ \"IEEE Standards for\n        Local and Metropolitan Area Networks: Virtual\
    \ Bridged Local Area\n        Networks\", 1998.\n   [10] Baker, F. and R. Bowen,\
    \ \"PPP Bridging Control Protocol (BCP)\",\n        RFC 1638, June 1994.\n   [11]\
    \ Bormann, C., \"The Multi-Class Extension to Multi-Link PPP\", RFC\n        2686,\
    \ September 1999.\n   [12] Bradner, S., \"Key words for use in RFCs to Indicate\
    \ Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Questions about this memo can also be directed to:\n \
    \  Mitsuru Higashiyama\n   Anritsu Corporation\n   1800 Onna, Atsugi-shi, Kanagawa-prf.,\
    \ 243-8555 Japan\n   Phone: +81 (46) 296-6625\n   EMail: Mitsuru.Higashiyama@yy.anritsu.co.jp\n\
    \   Fred Baker\n   519 Lado Drive\n   Santa Barbara, California 93111\n   EMail:\
    \ fred.baker@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
