- title: __initial_text__
  contents:
  - '                  Architecture of the WHOIS++ service

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes WHOIS++, an extension to the trivial WHOIS\n\
    \   service described in RFC 954 to permit WHOIS-like servers to make\n   available\
    \ more structured information to the Internet.  We describe\n   an extension to\
    \ the simple WHOIS data model and query protocol and a\n   companion extensible,\
    \ distributed indexing service.  A number of\n   options have also been added\
    \ such as the use of multiple languages\n   and character sets, more advanced\
    \ search expressions, structured data\n   and a number of other useful features.\
    \  An optional authentication\n   mechanism for protecting all or part of the\
    \ associated WHOIS++\n   information database from unauthorized access is also\
    \ described.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.7.  Reporting Warnings and Errors .......................\
    \ 11\n   1.8.  Privacy and Security Issues ......................... 11\n   Part\
    \ II - WHOIS++ Implementation .......................... 12\n   2.1.  The WHOIS++\
    \ interaction model ....................... 12\n   2.2.  The WHOIS++ Command set\
    \ ............................. 12\n   2.2.1.  System Commands ...................................\
    \ 13\n   2.2.1.1.  The COMMANDS command ............................ 14\n   2.2.1.2.\
    \  The CONSTRAINTS command ......................... 15\n   2.2.1.3.  The DESCRIBE\
    \ command ............................ 15\n   2.2.1.4.  The HELP command ................................\
    \ 15\n   2.2.1.5.  The LIST command ................................ 15\n   2.2.1.6.\
    \  The POLLED-BY command ........................... 15\n   2.2.1.7.  The POLLED-FOR\
    \ command .......................... 16\n   2.2.1.8.  The SHOW command ................................\
    \ 16\n   2.2.1.9.  The VERSION command ............................. 16\n   2.2.2.\
    \  The Search Command ................................ 16\n   2.2.2.1.  Format\
    \ of a Search Term ......................... 17\n   2.2.2.2.  Format of a Search\
    \ String ....................... 18\n   2.3.  WHOIS++ Constraints .................................\
    \ 19\n   2.3.1.  Required Constraints .............................. 20\n   2.3.2.\
    \  Optional CONSTRAINTS .............................. 21\n   2.3.2.1.  The SEARCH\
    \ Constraint ........................... 22\n   2.3.2.2.  The FORMAT Constraint\
    \ ........................... 22\n   2.3.2.3.  The MAXFULL Constraint ..........................\
    \ 22\n   2.3.2.4.  The MAXHITS Constraint .......................... 23\n   2.3.2.5.\
    \  The CASE Constraint ............................. 23\n   2.3.2.6.  The AUTHENTICATE\
    \ Constraint ..................... 23\n   2.3.2.7.  The NAME Constraint .............................\
    \ 23\n   2.3.2.8.  The PASSWORD Constraint ......................... 23\n   2.3.2.9.\
    \  The LANGUAGE Constraint ......................... 23\n   2.3.2.10.  The INCHARSET\
    \ Constraint ....................... 24\n   2.3.2.11.  The IGNORE Constraint ..........................\
    \ 24\n   2.3.2.12.  The INCLUDE Constraint ......................... 24\n   2.4.\
    \  Server Response Modes ............................... 24\n   2.4.1.  Default\
    \ Responses ................................. 25\n   2.4.2.  Format of Responses\
    \ ............................... 25\n   2.4.3.  Syntax of a Formatted Response\
    \ .................... 26\n   2.4.3.1.  A FULL format response ..........................\
    \ 26\n   2.4.3.2.  ABRIDGED Format Response ........................ 27\n   2.4.3.3.\
    \  HANDLE Format Response .......................... 27\n   2.4.3.4.  SUMMARY\
    \ Format Response ......................... 27\n   2.4.3.5.  SERVERS-TO-ASK Response\
    \ ......................... 28\n   2.4.4.  System Generated Messages .........................\
    \ 28\n   2.5.  Compatibility with Older WHOIS Servers .............. 29\n   3.\
    \  Miscellaneous ......................................... 29\n   3.1.  Acknowledgements\
    \ .................................... 29\n   3.2.  References ..........................................\
    \ 29\n   3.3.  Authors' Addresses .................................. 30\n   Appendix\
    \ A - Some Sample Queries .......................... 31\n   Appendix B - Some\
    \ sample responses ........................ 31\n   Appendix C - Sample responses\
    \ to system commands .......... 33\n   Appendix D - Sample whois++ session .......................\
    \ 35\n   Appendix E - System messages .............................. 36\n   Appendix\
    \ F - The WHOIS++ BNF Grammar ...................... 38\n   Appendix G - Description\
    \ of Regular expressions ........... 40\n"
- title: 1.  Part I - WHOIS++ Overview
  contents:
  - '1.  Part I - WHOIS++ Overview

    '
- title: 1.1.  Purpose and Motivation
  contents:
  - "1.1.  Purpose and Motivation\n   The current NIC WHOIS service [HARR85] is used\
    \ to provide a very\n   limited directory service, serving information about a\
    \ small number\n   of Internet users registered with the DDN NIC. Over time the\
    \ basic\n   service has been expanded to serve additional information and similar\n\
    \   services have also been set up on other hosts.  Unfortunately, these\n   additions\
    \ and extensions have been done in an ad hoc and\n   uncoordinated manner.\n \
    \  The basic WHOIS information model represents each individual record\n   as\
    \ a Rolodex-like collection of text. Each record has a unique\n   identifier (or\
    \ handle), but otherwise is assumed to have little\n   structure. The current\
    \ service allows users to issue searches for\n   individual strings within individual\
    \ records, as well as searches for\n   individual record handles using a very\
    \ simple query-response\n   protocol.\n   Despite its utility, the current NIC\
    \ WHOIS service cannot function as\n   a general White Pages service for the entire\
    \ Internet. Given the\n   inability of a single server to offer guaranteed response\
    \ or\n   reliability, the huge volume of traffic that a full scale directory\n\
    \   service will generate and the potentially huge number of users of\n   such\
    \ a service, such a trivial architecture is obviously unsuitable\n   for the current\
    \ Internet's needs for information services.\n   This document describes the architecture\
    \ and protocol for WHOIS++, a\n   simple, distributed and extensible information\
    \ lookup service based\n   upon a small set of extensions to the original WHOIS\
    \ information\n   model.  These extensions allow the new service to address the\n\
    \   community's needs for a simple directory service, yet the extensible\n   architecture\
    \ is expected to also allow it to find application in a\n   number of other information\
    \ service areas.\n   Added features include an extension to the trivial WHOIS\
    \ data model\n   and query protocol and a companion extensible, distributed indexing\n\
    \   service. A number of other options have also been added, like boolean\n  \
    \ operators, more powerful search constraints and search methods, and\n   most\
    \ specificly structured the data to make both the client and the\n   server part\
    \ of the dialogue more stringent and parseable. An optional\n   authentication\
    \ mechanism for protecting all or parts of the\n   associated WHOIS++ information\
    \ database from unauthorized access is\n   also briefly described.\n   The basic\
    \ architecture of WHOIS++ allows distributed maintenance of\n   the directory\
    \ contents and the use of the WHOIS++ indexing service\n   for locating additional\
    \ WHOIS++ servers. Although a general overview\n   of this service is included\
    \ for completeness, the indexing extensions\n   are described in a separate paper.\n"
- title: 1.2.  Basic Information Model
  contents:
  - "1.2.  Basic Information Model\n   The WHOIS++ service is centered in a recommendation\
    \ to structure user\n   information around a series of standardized information\
    \ templates.\n   Such templates consist of ordered sets of data elements (or\n\
    \   attribute-value pairs).\n   It is intended that adding such structured templates\
    \ to a server and\n   subsequently identifying and searching them be simple tasks.\
    \  The\n   creation and use of customized templates should also be possible with\n\
    \   little effort, although their use should be discouraged where\n   appropriate\
    \ standardized templates exist.\n   We also offer methods to allow the user to\
    \ constrain searches to\n   desired attributes or template types, in addition\
    \ to the existing\n   commands for specifying handles or simple strings.\n   It\
    \ is expected that the minimalist approach we have taken will find\n   application\
    \ where the high cost of configuring and operating\n   traditional White Pages\
    \ services can not currently be justified.\n   Also note that the architecture\
    \ makes no assumptions about the search\n   and retrieval mechanisms used within\
    \ individual servers.  Operators\n   are free to use dedicated database formats,\
    \ fast indexing software or\n   even provide gateways to other directory services\
    \ to store and\n   retrieve information, if desired.\n   The WHOIS++ server simply\
    \ functions as a known front end, offering a\n   simple data model and communicating\
    \ through a well known port and\n   query protocol. The format of both queries\
    \ and replies has been\n   structured to allow the use of client software for\
    \ generating\n   searches and displaying the results. At the same time, some effort\n\
    \   has been made to keep responses at least to some degree readible by\n   humans,\
    \ to ensure low entry cost and to ease debugging.\n   The actual implemention\
    \ details of an individual WHOIS++ search\n   engine are left to the imagination\
    \ of the implementor and it is hoped\n   that the simple, extensible approach\
    \ taken will encourage\n   experimentation and the development of improved search\
    \ engines.\n"
- title: 1.2.1.  Changes to the current WHOIS Model
  contents:
  - "1.2.1.  Changes to the current WHOIS Model\n   The current WHOIS service is based\
    \ upon an extremely simple data\n   model.  The NIC WHOIS database consists of\
    \ a series of individual\n   records, each of which is identified by a single\
    \ unique identifer\n   (the \"handle\"). Each record contains one or more lines\
    \ of\n   information. Currently, there is no structure or implicit ordering of\n\
    \   this information, although by implication each record is concerned\n   with\
    \ information about a single user or service.\n   We have implemented two basic\
    \ changes to this model. First, we have\n   structured the information within\
    \ the database as collections of data\n   elements, or simple attribute/value\
    \ pairs. Each individual record\n   contains a specified ordered set of these\
    \ data elements.\n   Secondly, we have introduced typing of the database records.\
    \ In\n   effect, each record is based upon one of a specified set of\n   templates,\
    \ each containing a finite and specified number of data\n   elements. This allow\
    \ users to easily limit searches to specific\n   collections of information, such\
    \ as information about users,\n   services, abstracts of papers, descriptions\
    \ of software, and so on.\n   As a final extension, we require that each individual\
    \ WHOIS++\n   database on the Internet be assigned a unique handle, analogous\
    \ to\n   the handle associated with each database record.\n   The WHOIS++ database\
    \ structure is shown in Fig. 1.\n"
- title: 1.2.2.  Registering WHOIS++ servers
  contents:
  - "1.2.2.  Registering WHOIS++ servers\n   We propose that individual database handles\
    \ be registered through the\n   Internet Assigned Numbers Authority (the IANA),\
    \ ensuring their\n   uniqueness. This will allow us to specify each WHOIS++ entry\
    \ on the\n   Internet as a unique pair consisting of a server handle and a record\n\
    \   handle.\n   A unique registered handle is preferable to using the host's IP\n\
    \   address, since it is conceivable that the WHOIS++ server for a\n   particular\
    \ domain may move over time.  If we preserve the unique\n   WHOIS++ handle in\
    \ such cases we have the option of using it for\n   resource discovery and networked\
    \ information retrieval (see [IIIR]\n   for a discussion of resource and discovery\
    \ and support issues).\n   There are many ways of guaranteeing uniqueness of server\
    \ handles; we\n   will discuss them in a separate paper.\n   We believe that organizing\
    \ information around a series of such\n   templates will make it easier for administrators\
    \ to gather and\n   maintain this information and thus encourage them to make\
    \ such\n   information available.  At the same time, as users become more\n  \
    \ familiar with the data elements available within specific templates\n   they\
    \ will be better able to specify their searches, leading to a more\n   useful\
    \ service.\n ______________________________________________________________________\n"
- title: '|                                                                      |'
  contents:
  - '|                                                                      |

    '
- title: '|   +  Single unique WHOIS++ database handle                           |'
  contents:
  - '|   +  Single unique WHOIS++ database handle                           |

    '
- title: '|                                                                      |'
  contents:
  - '|                                                                      |

    '
- title: '|              _______                 _______                _______  |'
  contents:
  - '|              _______                 _______                _______  |

    '
- title: '|    handle3  |..  .. |      handle6  |..  .. |     handle9  |..  .. | |'
  contents:
  - '|    handle3  |..  .. |      handle6  |..  .. |     handle9  |..  .. | |

    '
- title: '|            _______  |              _______  |             _______  | |'
  contents:
  - '|            _______  |              _______  |             _______  | |

    '
- title: '|  handle2  |..  .. |      handle5  |..  .. |     handle8  |..  .. |   |'
  contents:
  - '|  handle2  |..  .. |      handle5  |..  .. |     handle8  |..  .. |   |

    '
- title: '|           _______ |               _______ |              _______ |   |'
  contents:
  - '|           _______ |               _______ |              _______ |   |

    '
- title: '| handle1  |..  .. |      handle4  |..  .. |     handle7  |..  .. |    |'
  contents:
  - '| handle1  |..  .. |      handle4  |..  .. |     handle7  |..  .. |    |

    '
- title: '|          |..  .. |               |..  .. |              |..  .. |    |'
  contents:
  - '|          |..  .. |               |..  .. |              |..  .. |    |

    '
- title: '|           -------                 -------                -------     |'
  contents:
  - '|           -------                 -------                -------     |

    '
- title: '|      Template                   Template               Template      |'
  contents:
  - '|      Template                   Template               Template      |

    '
- title: '|       Type 1                     Type 2                 Type 3       |'
  contents:
  - '|       Type 1                     Type 2                 Type 3       |

    '
- title: '|                                                                      |'
  contents:
  - '|                                                                      |

    '
- title: '|                                                                      |'
  contents:
  - '|                                                                      |

    '
- title: '|                                                                      |'
  contents:
  - '|                                                                      |

    '
- title: '|                                                                      |'
  contents:
  - '|                                                                      |

    '
- title: '|               Fig.1 - Structure of a WHOIS++ database.               |'
  contents:
  - '|               Fig.1 - Structure of a WHOIS++ database.               |

    '
- title: '|                                                                      |'
  contents:
  - '|                                                                      |

    '
- title: '| Notes: - Entire database is identified by a single unique WHOIS      |'
  contents:
  - '| Notes: - Entire database is identified by a single unique WHOIS      |

    '
- title: '|          handle.                                                     |'
  contents:
  - '|          handle.                                                     |

    '
- title: '|        - Each record has a single unique handle and a specific set   |'
  contents:
  - '|        - Each record has a single unique handle and a specific set   |

    '
- title: '|          of attributes, determined by the template type used.        |'
  contents:
  - '|          of attributes, determined by the template type used.        |

    '
- title: '|        - Each value associated with an attribute can be any ASCII    |'
  contents:
  - '|        - Each value associated with an attribute can be any ASCII    |

    '
- title: '|          string up to a specified length.                            |'
  contents:
  - '|          string up to a specified length.                            |

    '
- title: '|______________________________________________________________________|'
  contents:
  - '|______________________________________________________________________|

    '
- title: 1.2.3.  The WHOIS++ Search Selection Mechanism
  contents:
  - "1.2.3.  The WHOIS++ Search Selection Mechanism\n   The WHOIS++ search mechanism\
    \ is intended to be extremely simple. A\n   search command consists of one or\
    \ more search terms, with an optional\n   set of global constraints (specifiers\
    \ that modify or control a\n   search).\n   Search terms allow the user to specify\
    \ template type, attribute,\n   value or handle that any record returns must satisfy.\
    \ Each search\n   term can have an optional set of local constraints that apply\
    \ to only\n   that term.\n   A WHOIS++ database may be seen as a single rolodex-like\
    \ collection of\n   typed records.  Each term specifies a further constraint that\
    \ the\n   selected set of output records must satisfy. Each term may thus be\n\
    \   thought of as performing a subtractive selection, in the sense that\n   any\
    \ record that does not fulfil the term is discarded from the result\n   set. \
    \ Boolean searches are possible by the use of AND, OR, NOT and\n   parenthesis.\n"
- title: 1.2.4.  The WHOIS++ Architecture
  contents:
  - "1.2.4.  The WHOIS++ Architecture\n   The WHOIS++ directory service has an architecture\
    \ which is separated\n   into two components; the base level server, which is\
    \ described in\n   this paper, and a indexing server. A single physical server\
    \ can act\n   as both a base level server and an indexing server.\n   A base level\
    \ server is one which contains only filled templates. An\n   indexing server is\
    \ one which contains forward knowledge (q.v.) and\n   pointers to other indexing\
    \ servers or base level servers.\n"
- title: 1.3.  Indexing in WHOIS++
  contents:
  - "1.3.  Indexing in WHOIS++\n   Indexing in WHOIS++ is used to tie together many\
    \ base level servers\n   and index servers into a unified directory service.\n\
    \   Each base level server and index server which wishes to participate\n   in\
    \ the unified directory service must generate \"forward knowledge\"\n   for the\
    \ entries it contains. One type of forward knowledge is the\n   \"centroid\".\n\
    \   An example of a centroid is as follows: if a whois++ server contained\n  \
    \ exactly three records, as follows:\n        Record 1                       \
    \ Record 2\n        Template: Person                Template: Person\n       \
    \ First-Name: John                First-Name: Joe\n        Last-Name: Smith  \
    \              Last-Name: Smith\n        Favourite-Drink: Labatt Beer    Favourite-Drink:\
    \ Molson Beer\n        Record 3\n        Template: Domain\n        Domain-Name:\
    \ foo.edu\n        Contact-Name: Mike Foobar\n        the centroid for this server\
    \ would be\n        Template:       Person\n        First-Name:     Joe\n    \
    \                    John\n        Last-Name:      Smith\n        Favourite-Drink:Beer\n\
    \                        Labatt\n                        Molson\n        Template:\
    \       Domain\n        Domain-Name:    foo.edu\n        Contact-Name:   Mike\n\
    \                        Foobar\n   An index server would then collect this centroid\
    \ for this server as\n   forward knowledge.\n   Index servers can collect forward\
    \ knowledge for any servers it\n   wishes.  In effect, all of the servers that\
    \ the index server knows\n   about can be searched with a single query to the\
    \ index server; the\n   index server holds the forward knowledge along with pointers\
    \ to the\n   servers it indexes, and can refer the query to servers which might\n\
    \   hold information which satisfies the query.\n   Implementors of this protocol\
    \ are strongly encouraged to incorporate\n   centroid generation abilities into\
    \ their servers.\n"
- title: '-------------------------------------------------------------------'
  contents:
  - "-------------------------------------------------------------------\n       \
    \                       ____             ____\n"
- title: top level                    |    |           |    |
  contents:
  - 'top level                    |    |           |    |

    '
- title: whois index                  |    |           |    |
  contents:
  - 'whois index                  |    |           |    |

    '
- title: servers                       ----             ----
  contents:
  - "servers                       ----             ----\n                       \
    \ ____                ____\n"
- title: first level            |    |              |    |
  contents:
  - 'first level            |    |              |    |

    '
- title: whois index            |    |              |    |
  contents:
  - 'whois index            |    |              |    |

    '
- title: servers                 ----                ----
  contents:
  - "servers                 ----                ----\n                    ____  \
    \              ____                ____\n"
- title: individual         |    |              |    |              |    |
  contents:
  - 'individual         |    |              |    |              |    |

    '
- title: whois servers      |    |              |    |              |    |
  contents:
  - "whois servers      |    |              |    |              |    |\n         \
    \           ----                ----                ----\n                 Fig.\
    \ 2 - Indexing system architecture.\n"
- title: '-------------------------------------------------------------------'
  contents:
  - '-------------------------------------------------------------------

    '
- title: 1.4.  Getting Help
  contents:
  - "1.4.  Getting Help\n   Another extension to the basic WHOIS service is the requirement\
    \ that\n   all servers support at least a minimal set of help commands, allowing\n\
    \   users to find out information about both the individual server and\n   the\
    \ entire WHOIS++ service itself. This is done in the context of the\n   new extended\
    \ information model by defining two specific template\n   formats and requiring\
    \ each server to offer at least one example of\n   each record using these formats.\
    \ The operator of each WHOIS service\n   is therefor expected to have, as a minimum,\
    \ a single example of\n   SERVICES and HELP records, which can be accessed through\
    \ appropriate\n   commands.\n"
- title: 1.4.1.  Minimum HELP Required
  contents:
  - "1.4.1.  Minimum HELP Required\n     Executing the command:\n             DESCRIBE\n\
    \     gives a brief information about the WHOIS++ server.\n     Executing the\
    \ command:\n             HELP\n     gives a brief description of the WHOIS++ service\
    \ itself.\n     The text of both required helped records should contain pointers\
    \ to\n     additional help subjects that are available.\n     Executing the command:\n\
    \             HELP <searchstring>\n     may give information on any topic.\n"
- title: 1.5.  Options and Constraints
  contents:
  - "1.5.  Options and Constraints\n   The WHOIS++ service is based upon a minimal\
    \ core set of commands and\n   controlling constraints. A small set of additional\
    \ optional commands\n   and constraints can be supported. These would allow users\
    \ to perform\n   such tasks as provide security options, modify the information\n\
    \   contents of a server or add multilingual support. The required set of\n  \
    \ WHOIS++ commands are summarized in section 2.2.  WHOIS++ constraints\n   are\
    \ described in section 2.3. Optional constraints are described in\n   section\
    \ 2.3.2.\n"
- title: 1.6.  Formatting Responses
  contents:
  - "1.6.  Formatting Responses\n   The output returned by a WHOIS++ server is structured\
    \ to allow\n   machine parsing and automated handling. Of particular interest\
    \ in the\n   ability to return summary information about a search (without having\n\
    \   to return the entire results).\n   All output of searches will be returned\
    \ in one of five output\n   formats, which will be one of FULL, ABRIDGED, HANDLE,\
    \ SUMMARY or\n   SERVER-TO-ASK.  Note that a conforming server is only required\
    \ to\n   support the first four formats.\n   When available, SERVER-TO-ASK format\
    \ is used to indicate that a\n   search cannot be completed but that one or more\
    \ alternative WHOIS++\n   servers may be able to perform the search.\n   Details\
    \ of each output format are specified in section 2.4.\n"
- title: 1.7.  Reporting Warnings and Errors
  contents:
  - "1.7.  Reporting Warnings and Errors\n   The formatted response of WHOIS++ commands\
    \ allows the encoding of\n   warning or error messages to simplify parsing and\
    \ machine handling.\n   The syntax of output formats are described in detail in\
    \ section 2.4,\n   and details of WHOIS++ warnings and error conditions are given\
    \ in\n   Appendix E.\n   All system messages are numerical, but can be tagged\
    \ with text. It is\n   the clients decision if the text is presented to the user.\n"
- title: 1.8.  Privacy and Security Issues
  contents:
  - "1.8.  Privacy and Security Issues\n   The basic WHOIS++ service was conceived\
    \ as a simple, unauthenticated\n   information lookup service, but there are occasions\
    \ when\n   authentication mechanisms are required. To handle such cases, an\n\
    \   optional mechanism is provided for authenticating each WHOIS++\n   transaction.\n\
    \   The current identified authentication mechanism is PASSWORD, which\n   uses\
    \ simple password authentication. Any other scheme name used must\n   begin with\
    \ the characters \"X-\" and should thus be regarded as\n   experimental and non-standard.\n\
    \   Note that the WHOIS++ authentication mechanism does not dictate the\n   actual\
    \ authentication scheme used, it merely provides a framework for\n   indicating\
    \ that a particular transaction is to be authenticated, and\n   the appropriate\
    \ mechanisms to use. This mechanism is extensible and\n   individual implementors\
    \ are free to add additional mechanisms.\n   This document includes a very simple\
    \ authentication scheme where a\n   combination of username and password is sent\
    \ together with the search\n   string so the server can verify that the user have\
    \ access to the\n   information. Note that this is NOT by any means a method recommended\n\
    \   to secure the data itself because both password and information are\n   tranferred\
    \ unencrypted over the network.\n   Given the unauthenticated nature that default\
    \ services like white\n   pages services are, it is easy to either forget the\
    \ implications of\n   this and just show all data to the public Internet, or think\
    \ that\n   Internet is so dangerous that information is hidden from the Internet\n\
    \   so the whole idea of a global white pages service is lost.  Therefore\n  \
    \ the type of authentication scheme selected and the public nature of\n   the\
    \ Internet environment must still be taken into consideration when\n   assessing\
    \ the security and authentication of the information served.\n   A more detailed\
    \ exposition on security is outside the scope of this\n   document.\n"
- title: 2.  Part II - WHOIS++ Implementation
  contents:
  - '2.  Part II - WHOIS++ Implementation

    '
- title: 2.1.  The WHOIS++ interaction model
  contents:
  - "2.1.  The WHOIS++ interaction model\n   A WHOIS++ server will normally listen\
    \ for a TCP connections on the\n   allocated WHOIS++ port (although a WHOIS++\
    \ server can be accessed\n   over any TCP connection). Once a connection is established,\
    \ the\n   server issues a banner message, and listens for input. The command\n\
    \   specified in this input is processed and the results returned\n   including\
    \ an ending system message. If the optional HOLD constraint\n   has not been specified\
    \ the connection is then terminated.\n   If the server supports the optional HOLD\
    \ constraint, and this\n   constraint is specified as part of any command, the\
    \ server continues\n   to listen on the connection for another line of input.\
    \  This cycle\n   continues as long as the sender continues to append the required\
    \ HOLD\n   constraint to each subsequent command.\n   At the same time, each server\
    \ is permitted to set an optional timeout\n   value (which should be indicated\
    \ in the response to the CONSTRAINTS\n   command). If set, the server is free\
    \ to terminate an idle connection\n   at any time after this delay has passed\
    \ with no input from the\n   client. If the server terminates the connection due\
    \ to timeout, it\n   will be indicated by the system message. The timeout value\
    \ is not\n   changeable by the client.\n"
- title: 2.2.  The WHOIS++ Command set
  contents:
  - "2.2.  The WHOIS++ Command set\n   There are two types of WHOIS++ commands - system\
    \ commands and the\n   WHOIS++ search command.\n   The WHOIS++ command set consists\
    \ of a core set of required systems\n   commands, a single required search command\
    \ and an set of optional\n   system commands which support features that are not\
    \ required by all\n   servers. The set of required WHOIS++ system commands are\
    \ listed in\n   Table I. Details of the allowable search terms for the search\
    \ command\n   are included in Table II.\n   Each WHOIS++ command also allows the\
    \ use of one or more controlling\n   constraints, when selected can be used to\
    \ override defaults or\n   otherwise modify server behavior. There is a core set\
    \ of constraints\n   that must be supported by all conforming servers. These include\n\
    \   SEARCH (which controls the type of search performed), FORMAT (which\n   determines\
    \ the output format used) and MAXHITS (which determines the\n   maximum number\
    \ of matches that a search can return).\n   These required constraints are summarized\
    \ in Table III.\n   An additional set of optional constraints are used to provide\
    \ support\n   for different character sets, indicate the need and type of\n  \
    \ authentication to perform on a transaction, and permit multiple\n   transactions\
    \ during a single communications session. These optional\n   constraints are listed\
    \ in Table IV.\n   It is possible, using the required COMMANDS and CONSTRAINTS\
    \ system\n   commands, to query any WHOIS++ server for its list of supported\n\
    \   commands and constraints.\n"
- title: 2.2.1.  System Commands
  contents:
  - "2.2.1.  System Commands\n   System commands are commands to the server for information\
    \ or to\n   control its operation. These include commands to list the template\n\
    \   types available from individual servers, to obtain a single blank\n   template\
    \ of any available type, and commands to obtain the list of\n   valid commands\
    \ and constraints supported on a server.\n   There are also commands to obtain\
    \ the current version of the WHOIS++\n   protocol supported, to access a simple\
    \ help subsystem, to obtain a\n   brief description of the service (which is intended,\
    \ among other\n   things, to support the automated registration of the service\
    \ by\n   yellow pages directory services). All of these commands are required\n\
    \   from a conforming WHOIS++ server.\n"
- title: '------------------------------------------------------------------------'
  contents:
  - '------------------------------------------------------------------------

    '
- title: Short  Long Form                               Functionality
  contents:
  - 'Short  Long Form                               Functionality

    '
- title: '-----  ---------                               -------------'
  contents:
  - "-----  ---------                               -------------\n       COMMANDS\
    \        [ ':' HOLD ]          list valid WHOIS++ commands\n                 \
    \                            supported by this server\n       CONSTRAINTS    \
    \ [ ':' HOLD ]          List valid constraints\n                             \
    \                supported by this server\n       DESCRIBE        [ ':' HOLD ]\
    \          Describe this server,\n                                           \
    \  formating the response\n                                             using\
    \ a standard\n                                             \"Services\" template\n\
    \ '?'   HELP [<string>  [':' <cnstrnts>]]     System help, using a \"Help\"\n\
    \                                             template\n       LIST          \
    \  [':' <cnstrnts>]      List templates supported\n                          \
    \                   by this system\n       POLLED-BY       [ ':' HOLD ]      \
    \    List indexing servers\n                                             that\
    \ are know to track\n                                             this server\n\
    \       POLLED-FOR      [ ':' HOLD ]          List information about\n       \
    \                                      what this server is\n                 \
    \                            tracking for\n       SHOW <string>   [':' <cnstrnts>]\
    \      Show contents of templates\n                                          \
    \   specified\n       VERSION         [ ':' HOLD ]          return current version\
    \ of\n                                             the protocol supported.\n \
    \             Table I - Required WHOIS++ SYSTEM commands.\n"
- title: '------------------------------------------------------------------------'
  contents:
  - "------------------------------------------------------------------------\n  \
    \ Below follows a descriptions for each command. Examples of responses\n   to\
    \ each command is in Appendix C.\n"
- title: 2.2.1.1.  The COMMANDS command
  contents:
  - "2.2.1.1.  The COMMANDS command\n   The COMMANDS command returns a list of commands\
    \ that the server\n   supports. The response is formatted as a FULL response.\n"
- title: 2.2.1.2.  The CONSTRAINTS command
  contents:
  - "2.2.1.2.  The CONSTRAINTS command\n   The CONSTRAINTS command returns a list\
    \ of constraints and the values\n   of those that the server supports. The response\
    \ is formatted as a\n   FULL response, where every constraint is represented as\
    \ a separate\n   record. The template name for these records is CONSTRAINT.  No\n\
    \   attention is paid to handles. Each record has, as a minimum, the\n   following\
    \ two fields:\n     - \"Constraint\", which contains the attribute name described\
    \ -\n       \"Default\", which shows the default value for this constraint.\n\
    \   If the client is permitted to change the value of the constraint,\n   there\
    \ is also:\n     - \"Range\" field, which contains a list of values that this\n\
    \       server supports, as a comma separated list; Or, if the range\n       is\
    \ numerical, as a pair of numbers separated with a hyphen.\n"
- title: 2.2.1.3.  The DESCRIBE command
  contents:
  - "2.2.1.3.  The DESCRIBE command\n   The DESCRIBE command gives a brief description\
    \ about the server in a\n   \"Services\" template. The result is formatted as\
    \ a FULL response.\n"
- title: 2.2.1.4.  The HELP command
  contents:
  - "2.2.1.4.  The HELP command\n   The HELP command takes an optional argument as\
    \ subject to get help\n   for.\n"
- title: 2.2.1.5.  The LIST command
  contents:
  - "2.2.1.5.  The LIST command\n   The LIST command returns the name of the templates\
    \ available on the\n   server. The answer is formatted FULL format response.\n"
- title: 2.2.1.6.  The POLLED-BY command
  contents:
  - "2.2.1.6.  The POLLED-BY command\n   The POLLED-BY command returns a list of servers\
    \ and the templates and\n   attribute names that those server polled as centroids\
    \ from this\n   server. The format is in FULL format with two attributes, Template\n\
    \   and Field. Each of these is a list of names of the templates or\n   fields\
    \ polled.  An empty result means either that the server is not\n   polled by anyone,\
    \ or that it doesn't support indexing.\n"
- title: 2.2.1.7.  The POLLED-FOR command
  contents:
  - "2.2.1.7.  The POLLED-FOR command\n   The POLLED-FOR command returns a list of\
    \ servers that this server has\n   polled, and the template and attribute names\
    \ for each of those.  The\n   answer is in FULL format with two attributes, Template\
    \ and Field.  An\n   empty result means either that the server is not polling\
    \ anyone, or\n   that it doesn't support indexing.\n"
- title: 2.2.1.8.  The SHOW command
  contents:
  - "2.2.1.8.  The SHOW command\n   The SHOW command takes a template name as argument\
    \ and returns\n   information about a specific template, formatted as a FULL response.\n\
    \   The answer is formatted as a blank template with the requested name.\n"
- title: 2.2.1.9.  The VERSION command
  contents:
  - "2.2.1.9.  The VERSION command\n   The output format is a FULL response containg\
    \ a record with template\n   name VERSION. The record must have attribute name\
    \ \"Version\", which\n   value is \"1.0\" for this version of the protocol.  The\
    \ record may also\n   have the additional fields \"Program-Name\" and \"Program-Version\"\
    \ which\n   gives information about the server implementation if the server so\n\
    \   desires.\n"
- title: 2.2.2.  The Search Command
  contents:
  - "2.2.2.  The Search Command\n   A search command consists of one or more search\
    \ terms, which might\n   each have local constraints, followed by an optional\
    \ colon with a set\n   of global search constraints.\n   Each attribute value\
    \ in the WHOIS++ database is divided into one or\n   more words separated by whitespace.\
    \ Each search term operates on\n   every word in the attribute value.\n   Two\
    \ or more search terms may be combined with boolean operators AND,\n   OR or NOT\
    \ (other than the implied AND between terms). The operator\n   AND has higher\
    \ precedence than the operator OR, but this can be\n   changed by the use of parentheses.\n\
    \   Search constraints that apply to every search term are specified as\n   global\
    \ constraints. Local constraints override global constraints for\n   the search\
    \ term they are bound to. The search terms and the global\n   constraints are\
    \ separated with a colon (':'). Additional global\n   constraints are appended\
    \ to the end of the search command delimited\n   with a semicolon ';'.\n   If\
    \ different search constraints can not be fulfilled, or the\n   combination of\
    \ different search constraints is uncombinable, the\n   server may choose to ignore\
    \ some constraints, but still do the search\n   and return some records.\n   The\
    \ set of required constraints are summarized in Table III. The set\n   of optional\
    \ constraints are summarized in Table IV.\n   As an option, the server may accept\
    \ specifications for attributes for\n   either inclusion or exclusion from a reply.\
    \ Thus, users could specify\n   -only- those attributes to return, or specific\
    \ attributes to filter\n   out, thus creating custom views.\n"
- title: 2.2.2.1.  Format of a Search Term
  contents:
  - "2.2.2.1.  Format of a Search Term\n   Each search term consists of one of the\
    \ following:\n     1) A search string, followed by an optional semicolon and set\
    \ of\n        semicolon-separated local constraints.\n     2) A search term specifier\
    \ (as listed in Table II), followed by a\n        '=', followed by a search string,\
    \ an optional semicolon and a\n        set of semicolon-separate local constraints.\n\
    \     3) An abbreviated search term specifier, followed by a search\n        string,\
    \ followed by an optional semicolon and set of\n        semicolon-separated local\
    \ constraints.\n     4) A combination of attribute name, followed by '=', followed\
    \ by\n        a search string, followed by an optional semicolon and set of\n\
    \        semicolon-separate local constraints.\n   If no term identifier is provided,\
    \ then the search will be applied to\n   attribute values only. This corresponds\
    \ to an identifier of VALUE.\n   If a SEARCH-ALL specifier is used then the search\
    \ will be applied to\n   all template names, handles, attribute names and attribute\
    \ values.\n   When the user specifies the search term using the form:\n      \
    \       \"<attribute_name> = <value>\"\n   this is considered to be an ATTRIBUTE-VALUE\
    \ search.\n   For discussion of the system reply format, and selecting the\n \
    \  appropriate reply format, see section 2.4.\n     -------------------------------------------------------------------\n\
    \     Valid specifiers:\n     -----------------\n      Name                  \
    \                Functionality\n      ----                                  -------------\n\
    \      ATTRIBUTE-VALUE [ ';' <constrnt>]*    allows combining\n              \
    \                              attribute and value\n                         \
    \                   specifiers in one term.\n      HANDLE          [ ';' <constrnt>]*\
    \    Confine search to handles.\n      SEARCH-ALL      [ ';' <constrnt>]*    Search\
    \ everything.\n      TEMPLATE        [ ';' <constrnt>]*    Confine search to\n\
    \                                            template names.\n      VALUE    \
    \       [ ';' <constrnt>]*    Confine search to attribute\n                  \
    \                          values. This is the default.\n     (Note: The name\
    \ HANDLE can be replaced with the shortname '!')\n     Acceptable forms of a search\
    \ specifier:\n     ---------------------------------------\n     1) <searchstring>\
    \  [';' <constraint>]*\n     2) <specifier> = <searchstring> [';' <constraint>]*\n\
    \     3) <shortspecifier> <searchstring>  [';' <constraint>]*\n     4) <attribute_name>\
    \ = <searchstring>  [';' <constraint>]*\n     (Note: A <constraint> is a name\
    \ of a valid local constraint.)\n            Table II - Valid search command term\
    \ specifiers.\n     -------------------------------------------------------------------\n"
- title: 2.2.2.2.  Format of a Search String
  contents:
  - "2.2.2.2.  Format of a Search String\n   Special characters that need to be quoted\
    \ are preceeded by a\n   backslash, '\\'.\n   Special characters are space ' ',\
    \ tab, equal sign '=', comma ',',\n   colon ':', backslash '\\', semicolon ';',\
    \ asterisk '*', period '.',\n   parenthesis '()', square brackets '[]', dollar\
    \ sign '$' and\n   circumflex '^'.\n   If the search term is given in some other\
    \ character set than ISO-\n   8859-1, it must be specified by the constraint INCHARSET.\n"
- title: 2.3.  WHOIS++ Constraints
  contents:
  - "2.3.  WHOIS++ Constraints\n   Constraints are intended to be hints or recommendations\
    \ to the server\n   about how to process a command. They may also be used to override\n\
    \   default behaviour, such as requesting that a server not drop the\n   connection\
    \ after performing a command.\n   Thus, a user might specify a search constraint\
    \ as \"SEARCH=exact\",\n   which means that the search engine is to perform an\
    \ exact match\n   search. It might also specify \"LANGUAGE=Fr\", which implies\
    \ that the\n   server should use French in fuzzy matches. It might also be able\
    \ to\n   issue system messages in French.\n   In general, contraints take the\
    \ form \"<constraintname>=<value>\", with\n   <value> being one of a specified\
    \ set of valid values. The notable\n   exception is \"HOLD\", which takes no argument.\n\
    \   All constraints can be used as a global constraint, but only a few\n   can\
    \ be used as local. See tables IV and V for information of which\n   constraints\
    \ can be local.\n   The CONSTRAINTS system command is used to list the search\
    \ constraints\n   supported by an individual server.\n   If a server cannot satisfy\
    \ the specified constraint there will be a\n   mechanism for informing the user\
    \ in the reply, using system messages.\n   In such cases, the search is still\
    \ performed, with the the server\n   ignoring unsupported constraints.\n"
- title: 2.3.1.  Required Constraints
  contents:
  - "2.3.1.  Required Constraints\n   The following CONSTRAINTS must be supported\
    \ in all conforming WHOIS++\n   servers.\n     ------------------------------------------------------------------\n\
    \      Format                                           LOCAL/GLOBAL\n      ------\
    \                                           -------------\n     SEARCH=   {exact\
    \ | lstring }                      LOCAL/GLOBAL\n     FORMAT=   {full | abridged\
    \ | handle | summary }   GLOBAL\n     MAXHITS=  { 1-<max-allowed> }          \
    \           GLOBAL\n     Table III - Required WHOIS++ constraints.\n     ------------------------------------------------------------------\n"
- title: 2.3.2.  Optional CONSTRAINTS
  contents:
  - "2.3.2.  Optional CONSTRAINTS\n   The following CONSTRAINTS and constraint values\
    \ are not required of a\n   conforming WHOIS++ server, but may be supported. If\
    \ supported, their\n   names and supported values must be returned in the response\
    \ to the\n   CONSTRAINTS command.\n  ---------------------------------------------------------------------\n\
    \   Format                                                  LOCAL/GLOBAL\n   ------\
    \                                                  -------------\n  SEARCH=  \
    \     { regex | fuzzy | substring | <X-format> } LOCAL/GLOBAL\n  CASE=       \
    \  { ignore | consider }                      LOCAL/GLOBAL\n  FORMAT=       {\
    \ server-to-ask | <X-format> }             GLOBAL\n  MAXFULL=      { 1-<max-allowed>\
    \ }                        GLOBAL\n  AUTHENTICATE= password                  \
    \                 GLOBAL\n  NAME=         <string>                           \
    \        GLOBAL\n  PASSWORD=     <string>                                   GLOBAL\n\
    \  INCHARSET=    { us-ascii | iso-8859-* }                  GLOBAL\n  LANGUAGE=\
    \     <As defined in ISO 639:1988>               GLOBAL\n  HOLD              \
    \                                       GLOBAL\n  IGNORE=       {attributelist}\
    \                            GLOBAL\n  INCLUDE=      {attributelist}         \
    \                   GLOBAL\n                Table IV - Optional WHOIS++ constraints.\n\
    \  ----------------------------------------------------------------------\n"
- title: 2.3.2.1.  The SEARCH Constraint
  contents:
  - "2.3.2.1.  The SEARCH Constraint\n   The SEARCH constraint is used for specifying\
    \ the method that is to be\n   used for the search. The default method is \"exact\"\
    . Following is a\n   definition of each search method.\n   exact           The\
    \ search will succeed for a word that exactly\n                   matches the\
    \ search string.\n   substring       The search will succeed for a word that matches\n\
    \                   a part of a word.\n   regex           The search will succeed\
    \ for a word when a regular\n                   expression matches the searched\
    \ data. Regular\n                   expression is built up by using constructions\
    \ of\n                   '*', '.', '^', '$', and '[]'. For use of\n          \
    \         regular expressions see Appendix G.\n   fuzzy           The search will\
    \ succeed for words that matches the\n                   search string by using\
    \ an algorithm designed to catch\n                   closely related names with\
    \ different spelling, e.g.\n                   names with the same pronounciation.\
    \  The server\n                   chooses which algorithm to use, but it may vary\n\
    \                   depending on template name, attribute name and\n         \
    \          language used (see Constraint Language above).\n   lstring        \
    \ The search will succed for words that begins\n                   with the search\
    \ string.\n"
- title: 2.3.2.2.  The FORMAT Constraint
  contents:
  - "2.3.2.2.  The FORMAT Constraint\n   The FORMAT constraint describes what format\
    \ the result will be in.\n   Default format is FULL. For a description of each\
    \ format, see Server\n   Response Modes below.\n"
- title: 2.3.2.3.  The MAXFULL Constraint
  contents:
  - "2.3.2.3.  The MAXFULL Constraint\n   The MAXFULL constraint sets the limit of\
    \ the number of matching\n   records the server allows before it enforces SUMMARY\
    \ responses.  The\n   client may attempt to override this value by specifying\
    \ another value\n   to that constraint. Example: If, for privacy reasons, the\
    \ server will\n   return the response in SUMMARY format if the number of hits\
    \ exceeds\n   2, the MAXFULL constraint is set to 2 by the server.\n   Regardless\
    \ of what format the client did or did not ask for, the\n   server will change\
    \ the response format to SUMMARY when the number of\n   matching records equals\
    \ or exceeds this value.\n"
- title: 2.3.2.4.  The MAXHITS Constraint
  contents:
  - "2.3.2.4.  The MAXHITS Constraint\n   The MAXHITS constraint sets the maximum\
    \ number of records the client\n   can get in a search respone.\n"
- title: 2.3.2.5.  The CASE Constraint
  contents:
  - "2.3.2.5.  The CASE Constraint\n   The CASE constraint defines if the search should\
    \ be done case\n   sensistive or not. Default value is to have case ignored.\n"
- title: 2.3.2.6.  The AUTHENTICATE Constraint
  contents:
  - "2.3.2.6.  The AUTHENTICATE Constraint\n   The AUTHENTICATE constraint describes\
    \ which authentication method to\n   use when executing the search. By using a\
    \ specific authentication\n   method, some other constraints might be needed which\
    \ is specified by\n   the authentication method.\n   The only authentication method\
    \ described in this document is\n   \"password\", if used, also the two other\
    \ constraints \"name\" and\n   \"password\" need to be set.\n"
- title: 2.3.2.7.  The NAME Constraint
  contents:
  - "2.3.2.7.  The NAME Constraint\n   The NAME constraint is only used together with\
    \ some authentication\n   method named by the constraint \"authenticate\". The\
    \ only use described\n   in this document is by sending a username as a string\
    \ of characters\n   which together with the string given as an argument to the\
    \ \"password\"\n   constraint is sent to the server. The server can use that pair\
    \ of\n   strings to do a simple authentication check, similar to the UNIX\n  \
    \ login program.\n"
- title: 2.3.2.8.  The PASSWORD Constraint
  contents:
  - "2.3.2.8.  The PASSWORD Constraint\n   The PASSWORD constraint is only used together\
    \ with some\n   authentication method named by the constraint \"authenticate\"\
    . The\n   only use described in this document is by sending a password as a\n\
    \   string of characters which together with the string given as an\n   argument\
    \ to the \"name\" constraint is sent to the server. The server\n   can use that\
    \ pair of strings to do a simple authentication check,\n   similar tothe UNIX\
    \ login program.\n"
- title: 2.3.2.9.  The LANGUAGE Constraint
  contents:
  - "2.3.2.9.  The LANGUAGE Constraint\n   The LANGUAGE constraints can be used as\
    \ an extra information to the\n   fuzzy matching search method, and it might also\
    \ be used to tell the\n   server to give the system responses in another language,\
    \ although\n   this ability should be handled by the client. The language code\n\
    \   defined in RFC 1766 [ALVE95] can be used as a value for the language\n   constraint.\
    \  In these, the case of the letters are insignigicant.\n"
- title: 2.3.2.10.  The INCHARSET Constraint
  contents:
  - "2.3.2.10.  The INCHARSET Constraint\n   The INCHARSET constraint tells the server\
    \ in which character set the\n   search string itself is given in. The default\
    \ character set is ISO-\n   8859-1.\n"
- title: 2.3.2.11.  The IGNORE Constraint
  contents:
  - "2.3.2.11.  The IGNORE Constraint\n   The IGNORE constraint specifies which attributes\
    \ to NOT include in\n   the result. All other attributes will be included (as\
    \ if named\n   explicitly by the \"include\" constraint).\n   If an attribute\
    \ is named both with the \"include\" and \"ignore\"\n   constraint, the attribute\
    \ is to be included in the result, but the\n   system message must be \"% 205\
    \ Requested constraint not fulfilled\".\n"
- title: 2.3.2.12.  The INCLUDE Constraint
  contents:
  - "2.3.2.12.  The INCLUDE Constraint\n   The INCLUDE constraint specifies which\
    \ attributes to include in the\n   result. All other attributes will be excluded\
    \ (as if named explicitly\n   by the \"ignore\" constraint).\n   If an attribute\
    \ is named both with the \"include\" and \"ignore\"\n   constraint, the attribute\
    \ is to be included in the result, but the\n   system message must be \"% 205\
    \ Requested constraint not fulfilled\".\n"
- title: 2.4.  Server Response Modes
  contents:
  - "2.4.  Server Response Modes\n   There are currently a total of five different\
    \ response modes possible\n   for WHOIS++ servers. These are FULL, ABRIDGED, HANDLE,\
    \ SUMMARY and\n   SERVER-TO-ASK. The syntax of each output format is specified\
    \ in more\n   detail in the following section.\n     1) A FULL format response\
    \ provides the complete contents of a\n        template matching the specified\
    \ query, including the template\n        type, the server handle and an optional\
    \ record handle.\n     2) An ABRIDGED format response provides a brief summary,\
    \ including\n        (as a minimum) the server handle, the corresponding record\
    \ handle\n        and relevant information for that template.\n     3) A HANDLE\
    \ format response returns a line with information about\n        the server handle\
    \ and record handle for a record that matched\n        the specified query.\n\
    \     4) A SUMMARY response provides only a brief summary of information\n   \
    \     the number of matches and the list of template types in which the\n    \
    \    matches occured.\n     5) A SERVER-TO-ASK response only returns pointers\
    \ to other index\n        servers which might possibly be able to answer the specified\n\
    \        query.\n   The server may respond with a null answer and may also respond\
    \ with a\n   null answer together with a correct system message to indicate that\n\
    \   the query was too complex.\n"
- title: 2.4.1.  Default Responses
  contents:
  - "2.4.1.  Default Responses\n   By default, a WHOIS++ server will provide FULL\
    \ responses. This may be\n   changed by the client with the use of the global\
    \ constraint \"format\".\n   The server is allowed to provide response in SUMMARY\
    \ format if the\n   number of hits exceeds the value of the global constraint\
    \ \"maxfull\".\n   The server will not respond with more matches than the value\n\
    \   specified with the global constraint \"maxhits\"; Not in any response\n  \
    \ format. If the number of matches exceeds this value, the server will\n   issues\
    \ the system message 110 (maxhits value exceeded), but will\n   still show the\
    \ responses, up to the number of the \"maxhits\"\n   constraint value.  This mechanism\
    \ will allow the server to hide the\n   number of possible matches to a search\
    \ command.\n   The server response modes are summarized in Table V.\n"
- title: 2.4.2.  Format of Responses
  contents:
  - "2.4.2.  Format of Responses\n   Each response consists of a numerical system\
    \ generated message, which\n   can be tagged with text, followed by an optional\
    \ formatted response\n   message, followed by a second system generated messages.\n\
    \   That is:\n        '%' <system messages> <nl>\n        [ <formatted response>\
    \ ]\n        '%' <system messages> <nl>\n   If there are no matches to a query,\
    \ the system is not required to\n   generate any output as a formatted response,\
    \ although it must still\n   generate system messages.\n   For information about\
    \ the format for system messages, see Appendix E.\n"
- title: 2.4.3.  Syntax of a Formatted Response
  contents:
  - "2.4.3.  Syntax of a Formatted Response\n   All formatted responses except for\
    \ the HANDLE response, consists of a\n   response-specific START line, followed\
    \ by an optional response-\n   specific data section, followed by a TERMINATION\
    \ line.  The HANDLE\n   response is different in that it only consists of a START\
    \ line.  It\n   is permissible to insert any number of lines consisting solely\
    \ of\n   newlines within a formatted response to improve readibility.\n   Each\
    \ line shall be limited to no more than 81 characters, including\n   the terminating\
    \ newline.  If a line (including the required leading\n   single space) would\
    \ exceed 81 characters, it is to be broken into\n   lines of no more than 81 characters,\
    \ with each continuation line\n   beginning with a \"+\" character in the first\
    \ column instead of the\n   leading character.\n   If an attribute value in a\
    \ data section includes a line break, the\n   line break must be replaced by a\
    \ CR/LF pair and the following line\n   begin with a \"-\" character in the first\
    \ column, instead of the\n   leading character. The attribute name is not repeated\
    \ on consecutive\n   lines.\n   A TERMINATION line consists of a line with a '#'\
    \ in the first column,\n   followed by one white space character (SPACE or TAB),\
    \ followed by the\n   keyword END, followed by zero or more characters, followed\
    \ by a\n   newline.\n   A response-specific section will be one of the following:\n\
    \       1) FULL Format Response\n       2) ABRIDGED Format Response\n       3)\
    \ HANDLE Format Response\n       4) SUMMARY Format Response\n       5) SERVER-TO-ASK\
    \ Format Response\n        The details of each are specified in the following\
    \ sections:\n"
- title: 2.4.3.1.  A FULL format response
  contents:
  - "2.4.3.1.  A FULL format response\n   A FULL format response consists of a series\
    \ of responses, each\n   consisting of a START line, followed by the complete\
    \ template\n   information for the matching record and a TERMINATION line.\n \
    \  Each START line consists of a '#' in the first column, followed by\n   one\
    \ white space character, the word \"FULL\", a white space character,\n   the name\
    \ of the corresponding template type, one white space\n   character, the server\
    \ handle, a white space character, an optional\n   handle for the record, and\
    \ a terminating newline.\n   The template information for the record will be returned\
    \ as a series\n   of lines consisting of a single space, followed by the corresponding\n\
    \   line of the record.\n   The line of the record shall consist of a single space\
    \ and the\n   attribute name followed by a ':', a single space, the value of that\n\
    \   attribute, and a newline.\n"
- title: 2.4.3.2.  ABRIDGED Format Response
  contents:
  - "2.4.3.2.  ABRIDGED Format Response\n   Each ABRIDGED format response consists\
    \ of a START line, a single line\n   excerpt of the template information from\
    \ each matching record and a\n   TERMINATION line. The excerpt information shall\
    \ include information\n   that is relevant to the template type.\n   The START\
    \ line consists of a '#' in the first column, followed by one\n   white space\
    \ character, the word \"ABRIDGED\", a white space character,\n   the name of the\
    \ corresponding template type, a white space character,\n   the server handle,\
    \ a white space character, the handle for the\n   record, and a terminating newline.\n\
    \   The abridged template information will be returned as a line,\n   consisting\
    \ of a single space, followed by the abridged line of the\n   record and a newline\
    \ pair.\n"
- title: 2.4.3.3.  HANDLE Format Response
  contents:
  - "2.4.3.3.  HANDLE Format Response\n   A HANDLE response consists of a single START\
    \ line, which shall start\n   with a '#' in the first column, followed by one\
    \ white space\n   character, the word \"HANDLE\", a white space character, the\
    \ name of\n   the corresponding template, a white space character, the handle\
    \ for\n   the server, a white space character, the handle for that record, and\n\
    \   a terminating newline.\n"
- title: 2.4.3.4.  SUMMARY Format Response
  contents:
  - "2.4.3.4.  SUMMARY Format Response\n   A SUMMARY format response consists of a\
    \ single set of responses,\n   consisting of a line listing the number of matches\
    \ to the specified\n   query, followed by a list of all template types which satisfied\
    \ the\n   query at least once.\n   The START line shall begin with a '#' in the\
    \ first column, be\n   followed by one white space character, the word \"SUMMARY\"\
    , a white\n   space character, the handle for the server, and a terminating\n\
    \   newline.\n   All following lines until the TERMINATION line starts with a\
    \ leading\n   space.  The first line shall begin with the string \"matches: \"\
    , be\n   followed by a space and the number of responses to the query and\n  \
    \ terminated by a newline.  The second line shall begin with the string\n   \"\
    templates: \", be followed by a newline separated list of the name of\n   the\
    \ template types which matched the query.  Each line following the\n   first which\
    \ include the text \"templates:\" must begin with a '-'\n   instead of a space.\n"
- title: 2.4.3.5.  SERVER-TO-ASK Response
  contents:
  - "2.4.3.5.  SERVER-TO-ASK Response\n   A SERVER-TO-ASK response consists of information\
    \ to the client about\n   a server to contact next to resolve a query.  If the\
    \ server has\n   pointers to more than one server, it will present additional\
    \ SERVER-\n   TO-ASK responses.\n   The SERVER-TO-ASK response will consist of\
    \ a START line and a number\n   of lines with attribute-value pairs, separated\
    \ by CRLF. Each line is\n   indented with one space. The end of a SERVER-TO-ASK\
    \ response is\n   indicated with a TERMINATION line.\n   Each START line consists\
    \ of a '#' in the first column, followed by\n   one white space character, the\
    \ word \"SERVER-TO-ASK\", a white space\n   character, the handle of the server\
    \ and a terminating newline.\n   1. \"Server-Handle\" - The server handle of the\
    \ server pointed at.\n      (req.)\n   2. \"Host-Name\" - A cached host named\
    \ for the server pointed at. (opt.)\n   3. \"Host-Port\" - A cached port number\
    \ for the server pointed at.\n      (opt.)\n   Other attributes may be present,\
    \ depending on the index server.\n"
- title: 2.4.4.  System Generated Messages
  contents:
  - "2.4.4.  System Generated Messages\n   All system generated messages must begin\
    \ with a '%' as the first\n   character, a space as the second one, followed by\
    \ a three digit\n   number, a space and an optional text message. The total length\
    \ of the\n   line must be no more than 81 characters long, including the\n   terminating\
    \ CR LF pair. There is no limit to the number of system\n   messages that may\
    \ be generated.\n   The format for multiline replies requires that every line,\
    \ except the\n   last, begin with \"%\", followed by space, the reply code, a\
    \ hyphen,\n   and an optional text.  The last line will begin with \"%\", followed\
    \ by\n   space, the reply code, a space and some optional text.\n   System generated\
    \ messages displayed before or after the formatted\n   response section are expected\
    \ to refer to operation of the system or\n   refer to the entire query. System\
    \ generated messages within the\n   output of an individual record during a FULL\
    \ reponse are expected to\n   refer to that record only, and could (for example)\
    \ be used to\n   indicate problems with that record of the response. See Appendix\
    \ E\n   for a description of system messages.\n"
- title: 2.5.  Compatibility with Older WHOIS Servers
  contents:
  - "2.5.  Compatibility with Older WHOIS Servers\n   Note that this format, although\
    \ potentially more verbose, is still in\n   a human readible form. Responses from\
    \ older systems that do not\n   follow this format are still conformant, since\
    \ their responses would\n   be interpreted as being equivalent to optional text\
    \ messages, without\n   a formatted response.  Clients written to this specification\
    \ would\n   display the responses as a advisory text message, where it would\n\
    \   still be readible by the user.\n"
- title: 3.  Miscellaneous
  contents:
  - '3.  Miscellaneous

    '
- title: 3.1.  Acknowledgements
  contents:
  - "3.1.  Acknowledgements\n   The WHOIS++ effort began as an intensive brainstorming\
    \ session at the\n   24th IETF, in Boston Massachusetts.  Present at the birth,\
    \ and\n   contributing ideas through this early phase, were (alphabetically)\n\
    \   Peter Deutsch, Alan Emtage, Jim Fullton, Joan Gargano, Brad\n   Passwaters,\
    \ Simon Spero, and Chris Weider. Others who have since\n   helped shape this document\
    \ with feedback and suggestions include\n   Roxana Bradescu, Patrik Faltstrom,\
    \ Kevin Gamiel, Dan Kegel, Michael\n   Mealling, Mark Prior and Rickard Schoultz.\n"
- title: 3.2  References
  contents:
  - "3.2  References\n   [ALVE95]        Alvestrand H., \"Tags for the Identification\
    \ of\n                   Languages\", RFC 1766, UNINETT, March 1995.\n   [HARR85]\
    \        Harrenstein K., Stahl M., and E. Feinler,\n                   \"NICNAME/WHOIS\"\
    , RFC 954, SRI, October 1985.\n   [IIIR]          Weider C., and P. Deutsch, \"\
    A Vision of an\n                   Integrated Internet Information Service\",\
    \ RFC 1727\n                   Bunyip Information Systems, Inc., December 1994.\n\
    \   [POST82]        Postel J., \"Simple Mail Transfer Protocol\", STD 10,\n  \
    \                 RFC 821, USC/Information Sciences Institute,\n             \
    \      August 1982.\n"
- title: 3.3.  Authors' Addresses
  contents:
  - "3.3.  Authors' Addresses\n   Peter Deutsch\n   BUNYIP INFORMATION SYSTEMS, Inc.\n\
    \   310 St-Catherine St West,\n   Suite 202,\n   Montreal, Quebec H2X 2A1\n  \
    \ CANADA\n   EMail: peterd@bunyip.com\n   Rickard Schoultz\n   KTHNOC, SUNET/NORDUnet/Ebone\
    \ Operations Centre\n   100 44 STOCKHOLM\n   SWEDEN\n   EMail: schoultz@sunet.se\n\
    \   Patrik Faltstrom\n   BUNYIP INFORMATION SYSTEMS, Inc.\n   310 St-Catherine\
    \ St West,\n   Suite 202,\n   Montreal, Quebec H2X 2A1\n   CANADA\n   EMail: paf@bunyip.com\n\
    \   Chris Weider\n   BUNYIP INFORMATION SYSTEMS, Inc.\n   2001 S. Huron Parkway,\
    \ #12\n   Ann Arbor, MI 48104\n   USA\n   EMail: clw@bunyip.com\n"
- title: Appendix A - Some Sample Queries
  contents:
  - "Appendix A - Some Sample Queries\n       author=chris and template=user\n   The\
    \ result will consist of all records where attribute \"author\"\n   matches \"\
    chris\" with case ignored. Only USER templates will be\n   searched. An example\
    \ of a matching record is \"Author=Chris Weider\".\n   This is the typical case\
    \ of search.\n       schoultz and rick;search=lstring\n   The result will consist\
    \ of all records which have one attribute value\n   matching \"schoultz\" exactly\
    \ and one having \"rick\" as leading\n   substring, both with case ignored. One\
    \ example is \"Name=Rickard\n   choultz\".\n       value=phone;search=substring\n\
    \   The result will consist of all records which have attribute values\n   matching\
    \ *phone*, for example the record \"Name=Acme telephone inc.\",\n   but will not\
    \ match the attribute name \"phone\". (Since \"value\" term\n   specifier is the\
    \ default, the search term could be \"phone\" as well as\n   \"value=phone\".)\n\
    \       search-all=Peter ; search=substring;case=consider\n   The result will\
    \ consist of all records which have attribute names,\n   template names or attribute\
    \ values matching \"Peter\" with respect to\n   case. One example is \"Friend-Of-Peter:\
    \ Yes\".\n      ucdavis;search=substring and (gargano or joan):include=name,email\n\
    \   This search command will find records which have records containing\n   the\
    \ words \"gargano\" or \"joan\" somewhere in the record, and has the\n   word\
    \ \"ucdavis\" somewhere in a word. The result will only show the\n   \"name\"\
    \ and \"email\" fields.\n"
- title: Appendix B - Some sample responses
  contents:
  - "Appendix B - Some sample responses\n      1) FULL format responses:\n      #\
    \ FULL USER SERVERHANDLE1 PD45\n       Name: Peter Deutsch\n       email: peterd@bunyip.com\n\
    \      # END\n      # FULL USER SERVERHANDLE1 AE1\n       Name: Alan Emtage\n\
    \       email: bajan@bunyip.com\n      # END\n      # FULL USER SERVERHANDLE1\
    \ NW1\n       Name: Nick West\n       Favourite-Bicycle-Forward-Wheel-Brand: New\
    \ Bicy\n      +cles Acme Inc.\n       email: nick@bicycle.acme.com\n       My-favourite-song:\
    \ Happy birthday to you!\n      -Happy birthday to you!\n      -Happy birthday\
    \ dear Nick!\n      -Happy birthday to you.\n      # END\n      # FULL SERVICES\
    \ SERVERHANDLE1 WWW1\n       Type: World Wide Web\n       Location: the world\n\
    \      # END\n                          --------------------\n      2) An ABRIDGED\
    \ format response:\n      # ABRIDGED USER SERVERHANDLE1 PD45\n       Peter Deutsch\
    \             peterd@bunyip.com\n      # END\n      # ABRIDGED USER SERVERHANDLE1\
    \ AE1\n       Alan Emtage               bajan@bunyip.com\n      # END\n      #\
    \ ABRIDGED USER SERVERHANDLE1 WWW1\n       World Wide Web            the world\n\
    \      # END\n                          --------------------\n      3) HANDLE\
    \ format responses:\n      # HANDLE USER SERVERHANDLE1 PD45\n      # HANDLE USER\
    \ SERVERHANDLE1 AE1\n      # HANDLE SERVICES SERVERHANDLE1 WWW1\n            \
    \              --------------------\n      4) A SUMMARY HANDLE format response:\n\
    \      # SUMMARY SERVERHANDLE1\n        Matches:      175\n        Templates:\
    \    User\n      -               Services\n      -               Abstracts\n \
    \     # END\n"
- title: Appendix C - Sample responses to system commands
  contents:
  - "Appendix C - Sample responses to system commands\n   C.1 Response to the LIST\
    \ command\n      # FULL LIST SERVERHANDLE1\n       Templates: USER\n      -SERVICES\n\
    \      -HELP\n      # END\n   C.2 Response to the SHOW command\n      This example\
    \ shows the result after issuing \"show user\":\n      # FULL USER SERVERHANDLE1\n\
    \        Name:\n        Email:\n        Work-Phone:\n        Organization-Name:\n\
    \        City:\n        Country:\n      # END\n   C.3 Response to the POLLED-BY\
    \ command\n      # FULL POLLED-BY SERVERHANDLE1\n       Server-handle: serverhandle2\n\
    \       Cached-Host-Name: sunic.sunet.se\n       Cached-Host-Port: 7070\n    \
    \   Template: USER\n       Field: ALL\n      # END\n      # FULL POLLED-BY SERVERHANDLE1\n\
    \       Server-handle: serverhandle3\n       Cached-Host-Name: kth.se\n      \
    \ Cached-Host-Port: 7070\n       Template: ALL\n       Field: Name,Email\n   \
    \   # END\n   C.4 Response to the POLLED-FOR command\n      # FULL POLLED-FOR\
    \ SERVERHANDLE1\n       Server-Handle: serverhandle5\n       Template: ALL\n \
    \      Field: Name,Address,Job-Title,Organization-Name,\n      +Organization-Address,Organization-Name\n\
    \      # END\n      # FULL POLLED-FOR SERVERHANDLE1\n       Server-Handle: serverhandle4\n\
    \       Template: USER\n       Field: ALL\n      # END\n   C.5 Response to the\
    \ VERSION command\n      # FULL VERSION BUNYIP.COM\n       Version: 1.0\n    \
    \   Program-Name: kth-whoisd\n       Program-Version: 2.0\n      # END\n   C.6\
    \ Response to the CONSTRAINTS command\n      # FULL CONSTRAINT COMEDIA.SE\n  \
    \     Constraint: format\n       Default: full\n       Range: full,abridged,summary,handle\n\
    \      # END\n      # FULL CONSTRAINT COMEDIA.SE\n       Constraint: maxhits\n\
    \       Default: 200\n       Range: 1-1000\n      # END\n      # FULL CONSTRAINT\
    \ COMEDIA.SE\n       Constraint: search\n       Default: exact\n       Range:\
    \ exact,substring,lstring\n      # END\n      # FULL CONSTRAINT COMEDIA.SE\n \
    \      Constraint: maxfull\n       Default: 20\n      # END\n   C.3 Response to\
    \ the COMMANDS command\n      # FULL COMMANDS SERVERHANDLE1\n       Commands:\
    \ commands\n      -constraints\n      -describe\n      -help\n      -list\n  \
    \    -polled-by\n      -polled-for\n      -show\n      -version\n      # END\n"
- title: Appendix D - Sample whois++ session
  contents:
  - "Appendix D - Sample whois++ session\n   Below is an example of a session between\
    \ a client and a server. The\n   angle brackets to the left is not part of the\
    \ communication, but is\n   just put there to denonte the direction of the communication\
    \ between\n   the server or the client. Text appended to '>' means messages from\n\
    \   the server and '<' from the client.\n     Client connects to the server\n\
    \     >% 220-Welcome to\n     >% 220-the whois++ server\n     >% 220 at ACME inc.\n\
    \     <name=Nick:hold\n     >% 200 Command okay\n     >\n     ># FULL USER ACME.COM\
    \ NW1\n     > name: Nick West\n     > email: nick@acme.com\n     ># END\n    \
    \ ># SERVER-TO-ASK ACME.COM\n     > Server-Handle: SUNETSE01\n     > Host-Name:\
    \ whois.sunet.se\n     > Host-Port: 7070\n     ># END\n     ># SERVER-TO-ASK ACME.COM\n\
    \     > Server-Handle: KTHSE01\n     ># END\n     >% 226 Tranfer complete\n  \
    \   <version\n     >% 200 Command okay\n     ># FULL VERSION ACME.COM\n     >\
    \ Version: 1.0\n     ># END\n     >% 226 Tranfer complete\n     >% 203 Bye\n \
    \    Server closes the connection\n   In the example above, the client connected\
    \ to a whois++ server and\n   queried for all records where the attribute \"name\"\
    \ equals \"Nick\", and\n   asked the server not to close the connection after\
    \ the response by\n   using the global constraint \"HOLD\".\n   The server responds\
    \ with one record and a pointer to two other\n   servers that either holds records\
    \ or pointers to other servers.\n   The client continues with asking for the servers\
    \ version number\n   without using the HOLD constraint.  After responding with\
    \ protocol\n   version, the server closes the connection.\n   Note that each response\
    \ from the server begins system message 200\n   (Command OK), and ends with system\
    \ message 226 (Transfer Complete).\n"
- title: Appendix E - System messages
  contents:
  - "Appendix E - System messages\n   A system message begins with a '%', followed\
    \ by a space and a three\n   digit number, a space, and an optional text message.\
    \ The line message\n   must be no more than 81 characters long, including the\
    \ terminating CR\n   LF pair. There is no limit to the number of system messages\
    \ that may\n   be generated.\n   A multiline system message have a hyphen instead\
    \ of a space in column\n   6, immediately after the numeric response code in all\
    \ lines, except\n   the last one, where the space is used.\n     Example 1\n \
    \    % 200 Command okay\n     Example 2\n     % 220-Welcome to\n     % 220-the\
    \ whois++ server\n     % 220 at ACME inc.\n   The client is not expected to parse\
    \ the text part of the response\n   message except when receiving reply 600, in\
    \ which case the text part\n   is the name of a character set that will be used\
    \ by the server in the\n   rest of the response. The valid values for characters\
    \ sets is\n   specified in the \"characterset\" list in the BNF listing in Appendix\n\
    \   F.\n   The theory of reply codes is described in Appendix E in STD 10, RFC\n\
    \   821 [POST82].\n"
- title: '------------------------------------------------------------------------'
  contents:
  - '------------------------------------------------------------------------

    '
- title: List of system response codes
  contents:
  - 'List of system response codes

    '
- title: '------------------------------'
  contents:
  - '------------------------------

    '
- title: 110 Too many hits                         The number of matches exceeded
  contents:
  - "110 Too many hits                         The number of matches exceeded\n  \
    \                                        the value specified by the\n        \
    \                                  maxhits constraint. Server\n              \
    \                            will still reply with as many\n                 \
    \                         records as \"maxhits\" allows.\n"
- title: 111 Requested constraint not supported    One or more constraints in
  contents:
  - "111 Requested constraint not supported    One or more constraints in\n      \
    \                                    query is not implemented, but\n         \
    \                                 the search is still done.\n"
- title: 112 Requested constraint not fullfilled   One or more constraints in
  contents:
  - "112 Requested constraint not fullfilled   One or more constraints in\n      \
    \                                    query has unacceptable value\n          \
    \                                and was therefore not used,\n               \
    \                           but the search is still done.\n"
- title: 200 Command Ok                            Command accepted and executed.
  contents:
  - "200 Command Ok                            Command accepted and executed.\n  \
    \                                        The client must wait for a\n        \
    \                                  transaction end system message.\n"
- title: 201 Command Completed successfully        Command accepted and executed.
  contents:
  - '201 Command Completed successfully        Command accepted and executed.

    '
- title: 203 Bye                                   Server is closing connection
  contents:
  - '203 Bye                                   Server is closing connection

    '
- title: 220 Service Ready                         Greeting message. Server is
  contents:
  - "220 Service Ready                         Greeting message. Server is\n     \
    \                                     accepting commands.\n"
- title: 226 Transaction complete                  End of data. All responses to
  contents:
  - "226 Transaction complete                  End of data. All responses to\n   \
    \                                       query are sent.\n"
- title: 430 Authentication needed                 Client requested information
  contents:
  - "430 Authentication needed                 Client requested information\n    \
    \                                      that needs authentication.\n"
- title: 500 Syntax error
  contents:
  - '500 Syntax error

    '
- title: 502 Search expression too complicated     This message is sent when the
  contents:
  - "502 Search expression too complicated     This message is sent when the\n   \
    \                                       server is not able to resolve\n      \
    \                                    a query (i.e. when a client\n           \
    \                               sent a regular expression that\n             \
    \                             is too deeply nested).\n"
- title: 530 Authentication failed                 The authentication phase
  contents:
  - "530 Authentication failed                 The authentication phase\n        \
    \                                  failed.\n"
- title: 600 <token>                               Subsequent attribute values
  contents:
  - "600 <token>                               Subsequent attribute values\n     \
    \                                     are encoded in the charater\n          \
    \                                set specified by <token>.\n                 \
    \   Table V - System response codes\n"
- title: '------------------------------------------------------------------------'
  contents:
  - '------------------------------------------------------------------------

    '
- title: Appendix F - The WHOIS++ BNF Grammar
  contents:
  - "Appendix F - The WHOIS++ BNF Grammar\n   whois-command   =   ( system-command\
    \ [\":\" \"hold\"]\n                       / terms [\":\" globalcnstrnts] ) NL\n\
    \   system-command  =   \"constraints\"\n                       / \"describe\"\
    \n                       / \"commands\"\n                       / \"polled-by\"\
    \n                       / \"polled-for\"\n                       / \"version\"\
    \n                       / \"list\"\n                       / \"show\" [1*SP string]\n\
    \                       / \"help\" [1*SP string]\n                       / \"\
    ?\" [string]\n   terms           =   and-expr *(\"or\" and-expr)\n   and-expr\
    \        =   not-expr *(\"and\" not-expr)\n   not-expr        =   [\"not\"] (term\
    \ / ( \"(\" terms \")\" ))\n   term            =   generalterm / specificterm\n\
    \                       / shorthandle / combinedterm\n   generalterm     =   string\
    \ *(\";\" localcnstrnt)\n   specificterm    =   specificname \"=\" string\n  \
    \                     *(\";\" localcnstrnt)\n   specificname    =   \"handle\"\
    \ / \"value\"\n   shorthandle     =   \"!\" string *(\";\" localcnstrnt)\n   combinedterm\
    \    =   string \"=\" string *(\";\" localcnstrnt)\n   globalcnstrnts  =   globalcnstrnt\
    \ *(\";\" globalcnstrnt)\n   globalcnstrnt   =   localcnstrnt\n              \
    \         / \"format\" \"=\" format\n                       / \"maxfull\" \"=\"\
    \ 1*digit\n                       / \"maxhits\" \"=\" 1*digit\n              \
    \         / opt-globalcnst\n   opt-globalcnst  =   \"hold\"\n                \
    \       / \"authenticate\" \"=\" auth-method\n                       / \"name\"\
    \ \"=\" string\n                       / \"password\" \"=\" string\n         \
    \              / \"language\" \"=\" language\n                       / \"incharset\"\
    \ \"=\" characterset\n                       / \"ignore\" \"=\" string\n     \
    \                  / \"include\" \"=\" string\n   format          =   \"full\"\
    \ / \"abridged\" / \"handle\" / \"summary\"\n                       / \"server-to-ask\"\
    \n   language        = <The language code defined in RFC1766 [ALVE95]>\n   characterset\
    \    =   \"us-ascii\" / \"iso-8859-1\" / \"iso-8859-2\" /\n                  \
    \     \"iso-8859-3\" / \"iso-8859-4\" / \"iso-8859-5\" /\n                   \
    \    \"iso-8859-6\" / \"iso-8859-7\" / \"iso-8859-8\" /\n                    \
    \   \"iso-8859-9\" / \"iso-8859-10\" / \"utf-8\" /\n                       charset-value\n\
    \   charset-value   =   1*char\n   localcnstrnt    =   \"search\" \"=\" searchvalue\
    \ /\n                       \"case\" \"=\" casevalue\n   searchvalue     =   \"\
    exact\" / \"substring\" / \"regex\" / \"fuzzy\"\n                       / \"lstring\"\
    \n   casevalue       =   \"ignore\" / \"consider\"\n   auth-method     =   \"\
    password\"\n   string          =   0*char\n   char            =   \"\\\" specialchar\n\
    \                       / <Characters 0-255 (decimal) except specialchar>\n  \
    \ specialchar     =   \" \" / <tab> / \"=\" / \",\" / \":\" / \";\" / \"\\\" /\n\
    \                       \"*\" / \".\" / \"(\" / \")\" / \"[\" / \"]\" / \"^\"\
    \ /\n                       \"$\" / \"!\" / \"?\"\n   digit           =   \"0\"\
    \ / \"1\" / \"2\" / \"3\" / \"4\" /\n                       \"5\" / \"6\" / \"\
    7\" / \"8\" / \"9\"\n   NL              =   <CR LF (decimal 13 10)>\n   NOTE:\
    \ Significant blanks must be escaped.  The following\n   characters, when significant\
    \ to the query, may be preceded\n   and/or followed by a single blank:\n     :\
    \ ; , ( ) = !\n"
- title: Appendix G - Description of Regular expressions
  contents:
  - "Appendix G - Description of Regular expressions\n   The regular expressions described\
    \ in this section is the same as used\n   in many other applications and operating\
    \ systems. It is though very\n   simple and does not include logical operators\
    \ AND and OR.\n   Searches using regular expressions are always using substring\n\
    \   matching except when the regular expression contains the characters\n   '^'\
    \ or '$'.\n       Character                                Function\n       ---------\
    \                                --------\n        <any except those listed in\
    \ this table> Matches itself\n        .                                      \
    \ Matches any character\n        a*                                      Matches\
    \ zero or more 'a'\n        [ab]                                    Matches 'a'\
    \ or 'b'\n        [a-c]                                   Matches 'a', 'b' or\
    \ 'c'\n        ^                                       Matches beginning of\n\
    \                                                a token\n        $          \
    \                             Matches end of a token\n          Examples\n   \
    \       ---------\n            String         Matches       Matches not\n    \
    \        -------        -------       -----------\n             hello        \
    \  xhelloy         heello\n             h.llo          hello           helio\n\
    \             h.*o           hello           helloa\n             h[a-f]llo  \
    \    hello           hgllo\n             ^he.*          hello           ehello\n\
    \             .*lo$          hello           helloo\n"
