- contents:
  - "   A Pseudo-Random Function (PRF) for the Kerberos V Generic Security\n       Service
    Application Program Interface (GSS-API) Mechanism\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines the Pseudo-Random Function (PRF) for the\n
    \  Kerberos V mechanism for the Generic Security Service Application\n   Program
    Interface (GSS-API), based on the PRF defined for the\n   Kerberos V cryptographic
    framework, for keying application protocols\n   given an established Kerberos
    V GSS-API security context.\n   This document obsoletes RFC 4402 and reclassifies
    that document as\n   Historic.  RFC 4402 starts the PRF+ counter at 1; however,
    a number\n   of implementations start the counter at 0.  As a result, the original\n
    \  specification would not be interoperable with existing\n   implementations.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7802.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . .   2\n   3.  Kerberos V GSS Mechanism PRF  . . . . . . . . . . . . . . .
    .   3\n   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   3\n
    \  5.  Security Considerations . . . . . . . . . . . . . . . . . . .   4\n   6.
    \ Normative References  . . . . . . . . . . . . . . . . . . . .   4\n   Appendix
    A.  Test Vectors . . . . . . . . . . . . . . . . . . . .   6\n   Acknowledgements
    \ . . . . . . . . . . . . . . . . . . . . . . . .   8\n   Authors' Addresses  .
    . . . . . . . . . . . . . . . . . . . . . .   8\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document specifies the Kerberos V GSS-API mechanism's
    [RFC4121]\n   pseudo-random function corresponding to [RFC4401].  The function
    is a\n   \"PRF+\" style construction.  For more information, see [RFC4401],\n
    \  [RFC2743], [RFC2744], and [RFC4121].\n   This document obsoletes RFC 4402 and
    reclassifies that document as\n   Historic.  RFC 4402 starts the PRF+ counter
    at 1; however, a number\n   of implementations start the counter at 0.  As a result,
    the original\n   specification would not be interoperable with existing\n   implementations.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Kerberos V GSS Mechanism PRF\n   The GSS-API PRF [RFC4401] function for the
    Kerberos V mechanism\n   [RFC4121] shall be the output of a PRF+ function based
    on the\n   encryption type's PRF function keyed with the negotiated session key\n
    \  of the security context corresponding to the 'prf_key' input\n   parameter
    of GSS_Pseudo_random().\n   This PRF+ MUST be keyed with the key indicated by
    the 'prf_key' input\n   parameter as follows:\n   o  GSS_C_PRF_KEY_FULL -- use
    the sub-session key asserted by the\n      acceptor (if any exists), or the sub-session
    asserted by the\n      initiator (if any exists), or the Ticket's session key.\n
    \  o  GSS_C_PRF_KEY_PARTIAL -- use the sub-session key asserted by the\n      initiator
    (if any exists) or the Ticket's session key.\n   The PRF+ function is a simple
    counter-based extension of the Kerberos\n   V pseudo-random function [RFC3961]
    for the encryption type of the\n   security context's keys:\n         PRF+(K,
    L, S) = truncate(L, T0 || T1 || .. || Tn)\n         Tn = pseudo-random(K, n ||
    S)\n   where K is the key indicated by the 'prf_key' parameter, '||' is the\n
    \  concatenation operator, 'n' is encoded as a network byte order 32-bit\n   unsigned
    binary number, truncate(L, S) truncates the input octet\n   string S to length
    L, and pseudo-random() is the Kerberos V pseudo-\n   random function [RFC3961].\n
    \  The maximum output size of the Kerberos V mechanism's GSS-API PRF\n   then
    is, necessarily, 2^32 times the output size of the pseudo-\n   random() function
    for the encryption type of the given key.\n   When the input size is longer than
    2^14 octets as per [RFC4401] and\n   exceeds an implementation's resources, then
    the mechanism MUST return\n   GSS_S_FAILURE and GSS_KRB5_S_KG_INPUT_TOO_LONG as
    the minor status\n   code.\n"
  title: 3.  Kerberos V GSS Mechanism PRF
- contents:
  - "4.  IANA Considerations\n   This document has no IANA considerations currently.
    \ If and when a\n   relevant IANA registry of GSS-API symbols and constants is
    created,\n   then the GSS_KRB5_S_KG_INPUT_TOO_LONG minor status code should be\n
    \  added to such a registry.\n"
  title: 4.  IANA Considerations
- contents:
  - "5.  Security Considerations\n   Kerberos V encryption types' PRF functions use
    a key derived from\n   contexts' session keys and should preserve the forward
    security\n   properties of the mechanisms' key exchanges.\n   Legacy Kerberos
    V encryption types may be weak, particularly the\n   single-DES encryption types.\n
    \  See also [RFC4401] for generic security considerations of\n   GSS_Pseudo_random().\n
    \  See also [RFC3961] for generic security considerations of the\n   Kerberos
    V cryptographic framework.\n   Use of Ticket session keys, rather than sub-session
    keys, when\n   initiators and acceptors fail to assert sub-session keys, is\n
    \  dangerous as ticket reuse can lead to key reuse; therefore,\n   initiators
    should assert sub-session keys always, and acceptors\n   should assert sub-session
    keys at least when initiators fail to do\n   so.\n   The computational cost of
    computing this PRF+ may vary depending on\n   the Kerberos V encryption types
    being used, but generally the\n   computation of this PRF+ gets more expensive
    as the input and output\n   octet string lengths grow (note that the use of a
    counter in the PRF+\n   construction allows for parallelization).\n"
  title: 5.  Security Considerations
- contents:
  - "6.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n              DOI
    10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
    \  [RFC2743]  Linn, J., \"Generic Security Service Application Program\n              Interface
    Version 2, Update 1\", RFC 2743,\n              DOI 10.17487/RFC2743, January
    2000,\n              <http://www.rfc-editor.org/info/rfc2743>.\n   [RFC2744]  Wray,
    J., \"Generic Security Service API Version 2 :\n              C-bindings\", RFC
    2744, DOI 10.17487/RFC2744, January 2000,\n              <http://www.rfc-editor.org/info/rfc2744>.\n
    \  [RFC3961]  Raeburn, K., \"Encryption and Checksum Specifications for\n              Kerberos
    5\", RFC 3961, DOI 10.17487/RFC3961, February\n              2005, <http://www.rfc-editor.org/info/rfc3961>.\n
    \  [RFC4121]  Zhu, L., Jaganathan, K., and S. Hartman, \"The Kerberos\n              Version
    5 Generic Security Service Application Program\n              Interface (GSS-API)
    Mechanism: Version 2\", RFC 4121,\n              DOI 10.17487/RFC4121, July 2005,\n
    \             <http://www.rfc-editor.org/info/rfc4121>.\n   [RFC4401]  Williams,
    N., \"A Pseudo-Random Function (PRF) API\n              Extension for the Generic
    Security Service Application\n              Program Interface (GSS-API)\", RFC
    4401,\n              DOI 10.17487/RFC4401, February 2006,\n              <http://www.rfc-editor.org/info/rfc4401>.\n"
  title: 6.  Normative References
- contents:
  - "Appendix A.  Test Vectors\n   Here are some test vectors from the MIT implementation
    provided by\n   Greg Hudson.  Test cases used include input string lengths of
    0 and\n   61 bytes, and an output length of 44 bytes.  61 bytes of input is\n
    \  just enough to produce a partial second MD5 or SHA1 hash block with\n   the
    four-byte counter prefix.  44 bytes of output requires two full\n   and one partial
    RFC 3961 PRF output for all existing enctypes.  All\n   keys were randomly generated.\n
    \  Enctype: des-cbc-crc\n   Key: E607FE9DABB57AE0\n   Input: (empty string)\n
    \  Output: 803C4121379FC4B87CE413B67707C4632EBED2C6D6B7\n           2A55E878836E35E21600D915D590DED5B6D77BB30A1F\n
    \  Enctype: des-cbc-crc\n   Key: 54758316B6257A75\n   Input: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\n
    \  Output: 279E4105F7ADC9BD6EF28ABE31D89B442FE0058388BA\n           33264ACB5729562DC637950F6BD144B654BE7700B2D6\n
    \  Enctype: des3-cbc-sha1\n   Key: 70378A19CD64134580C27C0115D6B34A1CF2FEECEF9886A2\n
    \  Input: (empty string)\n   Output: 9F8D127C520BB826BFF3E0FE5EF352389C17E0C073D9\n
    \          AC4A333D644D21BA3EF24F4A886D143F85AC9F6377FB\n   Enctype: des3-cbc-sha1\n
    \  Key: 3452A167DF1094BA1089E0A20E9E51ABEF1525922558B69E\n   Input: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\n
    \  Output: 6BF24FABC858F8DD9752E4FCD331BB831F238B5BE190\n           4EEA42E38F7A60C588F075C5C96A67E7F8B7BD0AECF4\n
    \  Enctype: rc4-hmac\n   Key: 3BB3AE288C12B3B9D06B208A4151B3B6\n   Input: (empty
    string)\n   Output: 9AEA11A3BCF3C53F1F91F5A0BA2132E2501ADF5F3C28\n           3C8A983AB88757CE865A22132D6100EAD63E9E291AFA\n
    \  Enctype: rc4-hmac\n   Key: 6DB7B33A01BD2B72F7655CB7B3D5FA0B\n   Input: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\n
    \  Output: CDA9A544869FC84873B692663A82AFDA101C8611498B\n           A46138B01E927C9B95EEC953B562807434037837DDDF\n
    \  Enctype: aes128-cts-hmac-sha1-96\n   Key: 6C742096EB896230312B73972FA28B5D\n
    \  Input: (empty string)\n   Output: 94208D982FC1BB7778128BDD77904420B45C9DA699F3\n
    \          117BCE66E39602128EF0296611A6D191A5828530F20F\n   Enctype: aes128-cts-hmac-sha1-96\n
    \  Key: FA61138C109D834A477D24C7311BE6DA\n   Input: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\n
    \  Output: 0FAEDF0F842CC834FEE750487E1B622739286B975FE5\n           B7F45AB053143C75CA0DF5D3D4BBB80F6A616C7C9027\n
    \  Enctype: aes256-cts-hmac-sha1-96\n   Key: 08FCDAFD5832611B73BA7B497FEBFF8C954B4B58031CAD9B977C3B8C25192FD6\n
    \  Input: (empty string)\n   Output: E627EFC14EF5B6D629F830C7109DEA0D3D7D36E8CD57\n
    \          A1F301C5452494A1928F05AFFBEE3360232209D3BE0D\n   Enctype: aes256-cts-hmac-sha1-96\n
    \  Key: F5B68B7823D8944F33F41541B4E4D38C9B2934F8D16334A796645B066152B4BE\n   Input:
    ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\n   Output: 112F2B2D878590653CCC7DE278E9F0AA46FA5A380B62\n
    \          59F774CB7C134FCD37F61A50FD0D9F89BF8FE1A6B593\n   Enctype: camellia128-cts-cmac\n
    \  Key: 866E0466A178279A32AC0BDA92B72AEB\n   Input: (empty string)\n   Output:
    97FBB354BF341C3A160DCC86A7A910FDA824601DF677\n           68797BACEEBF5D250AE929DEC9760772084267F50A54\n
    \  Enctype: camellia128-cts-cmac\n   Key: D4893FD37DA1A211E12DD1E03E0F03B7\n   Input:
    ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\n   Output: 1DEE2FF126CA563A2A2326B9DD3F0095013257414C83\n
    \          FAD4398901013D55F367C82681186B7B2FE62F746BA4\n   Enctype: camellia256-cts-cmac\n
    \  Key: 203071B1AE77BD3D6FCE70174AF95C225B1CED46B35CF52B6479EFEB47E6B063\n   Input:
    (empty string)\n   Output: 9B30020634C10FDA28420CEE7B96B70A90A771CED43A\n           D8346554163E5949CBAE2FB8EF36AFB6B32CE75116A0\n
    \  Enctype: camellia256-cts-cmac\n   Key: A171AD582C1AFBBAD52ABD622EE6B6A14D19BF95C6914B2BA40FFD99A88EC660\n
    \  Input: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\n   Output:
    A47CBB6E104DCC77E4DB48A7A474B977F2FB6A7A1AB6\n           52317D50508AE72B7BE2E4E4BA24164E029CBACF786B\n"
  title: Appendix A.  Test Vectors
- contents:
  - "Acknowledgements\n   This document is an update to RFC 4402, which was authored
    by Nico\n   Williams.  Greg Hudson has provided the test vectors based on MIT's\n
    \  implementation.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Shawn Emery\n   Oracle Corporation\n   500 Eldorado Blvd
    Bldg 1\n   Broomfield, CO  78727\n   United States\n   EMail: shawn.emery@oracle.com\n
    \  Nicolas Williams\n   Cryptonector, LLC\n   EMail: nico@cryptonector.com\n"
  title: Authors' Addresses
