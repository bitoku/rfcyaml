- title: __initial_text__
  contents:
  - '                 The ''Basic'' HTTP Authentication Scheme

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines the \"Basic\" Hypertext Transfer Protocol\
    \ (HTTP)\n   authentication scheme, which transmits credentials as user-id/\n\
    \   password pairs, encoded using Base64.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7617.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Terminology and Notation  . . . . . . . . . . . .\
    \ . . . .   3\n   2.  The 'Basic' Authentication Scheme . . . . . . . . . . .\
    \ . . .   3\n     2.1.  The 'charset' auth-param  . . . . . . . . . . . . . .\
    \ . .   5\n     2.2.  Reusing Credentials . . . . . . . . . . . . . . . . . .\
    \ .   7\n   3.  Internationalization Considerations . . . . . . . . . . . . .\
    \   8\n   4.  Security Considerations . . . . . . . . . . . . . . . . . . .  \
    \ 8\n   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9\n\
    \   6.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  10\n  \
    \   6.1.  Normative References  . . . . . . . . . . . . . . . . . .  10\n    \
    \ 6.2.  Informative References  . . . . . . . . . . . . . . . . .  11\n   Appendix\
    \ A.  Changes from RFC 2617  . . . . . . . . . . . . . . .  13\n   Appendix B.\
    \  Deployment Considerations for the 'charset'\n                Parameter  . .\
    \ . . . . . . . . . . . . . . . . . . .  13\n     B.1.  User Agents . . . . .\
    \ . . . . . . . . . . . . . . . . . .  13\n     B.2.  Servers . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  13\n     B.3.  Why not simply switch the\
    \ default encoding to UTF-8?  . .  14\n   Acknowledgements  . . . . . . . . .\
    \ . . . . . . . . . . . . . . .  14\n   Author's Address  . . . . . . . . . .\
    \ . . . . . . . . . . . . . .  15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines the \"Basic\" Hypertext Transfer Protocol\
    \ (HTTP)\n   authentication scheme, which transmits credentials as user-id/\n\
    \   password pairs, encoded using Base64 (HTTP authentication schemes are\n  \
    \ defined in [RFC7235]).\n   This scheme is not considered to be a secure method\
    \ of user\n   authentication unless used in conjunction with some external secure\n\
    \   system such as TLS (Transport Layer Security, [RFC5246]), as the\n   user-id\
    \ and password are passed over the network as cleartext.\n   The \"Basic\" scheme\
    \ previously was defined in Section 2 of [RFC2617].\n   This document updates\
    \ the definition, and also addresses\n   internationalization issues by introducing\
    \ the 'charset'\n   authentication parameter (Section 2.1).\n   Other documents\
    \ updating RFC 2617 are \"Hypertext Transfer Protocol\n   (HTTP/1.1): Authentication\"\
    \ ([RFC7235], defining the authentication\n   framework), \"HTTP Digest Access\
    \ Authentication\" ([RFC7616], updating\n   the definition of the \"Digest\" authentication\
    \ scheme), and \"HTTP\n   Authentication-Info and Proxy-Authentication-Info Response\
    \ Header\n   Fields\" ([RFC7615]).  Taken together, these four documents obsolete\n\
    \   RFC 2617.\n"
- title: 1.1.  Terminology and Notation
  contents:
  - "1.1.  Terminology and Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   The terms \"protection space\" and \"realm\" are defined in\
    \ Section 2.2\n   of [RFC7235].\n   The terms \"(character) repertoire\" and \"\
    character encoding scheme\"\n   are defined in Section 2 of [RFC6365].\n"
- title: 2.  The 'Basic' Authentication Scheme
  contents:
  - "2.  The 'Basic' Authentication Scheme\n   The Basic authentication scheme is\
    \ based on the model that the client\n   needs to authenticate itself with a user-id\
    \ and a password for each\n   protection space (\"realm\").  The realm value is\
    \ a free-form string\n   that can only be compared for equality with other realms\
    \ on that\n   server.  The server will service the request only if it can validate\n\
    \   the user-id and password for the protection space applying to the\n   requested\
    \ resource.\n   The Basic authentication scheme utilizes the Authentication Framework\n\
    \   as follows.\n   In challenges:\n   o  The scheme name is \"Basic\".\n   o\
    \  The authentication parameter 'realm' is REQUIRED ([RFC7235],\n      Section\
    \ 2.2).\n   o  The authentication parameter 'charset' is OPTIONAL (see\n     \
    \ Section 2.1).\n   o  No other authentication parameters are defined -- unknown\n\
    \      parameters MUST be ignored by recipients, and new parameters can\n    \
    \  only be defined by revising this specification.\n   See also Section 4.1 of\
    \ [RFC7235], which discusses the complexity of\n   parsing challenges properly.\n\
    \   Note that both scheme and parameter names are matched case-\n   insensitively.\n\
    \   For credentials, the \"token68\" syntax defined in Section 2.1 of\n   [RFC7235]\
    \ is used.  The value is computed based on user-id and\n   password as defined\
    \ below.\n   Upon receipt of a request for a URI within the protection space that\n\
    \   lacks credentials, the server can reply with a challenge using the\n   401\
    \ (Unauthorized) status code ([RFC7235], Section 3.1) and the\n   WWW-Authenticate\
    \ header field ([RFC7235], Section 4.1).\n   For instance:\n      HTTP/1.1 401\
    \ Unauthorized\n      Date: Mon, 04 Feb 2014 16:50:53 GMT\n      WWW-Authenticate:\
    \ Basic realm=\"WallyWorld\"\n   where \"WallyWorld\" is the string assigned by\
    \ the server to identify\n   the protection space.\n   A proxy can respond with\
    \ a similar challenge using the 407 (Proxy\n   Authentication Required) status\
    \ code ([RFC7235], Section 3.2) and the\n   Proxy-Authenticate header field ([RFC7235],\
    \ Section 4.3).\n   To receive authorization, the client\n   1.  obtains the user-id\
    \ and password from the user,\n   2.  constructs the user-pass by concatenating\
    \ the user-id, a single\n       colon (\":\") character, and the password,\n \
    \  3.  encodes the user-pass into an octet sequence (see below for a\n       discussion\
    \ of character encoding schemes),\n   4.  and obtains the basic-credentials by\
    \ encoding this octet sequence\n       using Base64 ([RFC4648], Section 4) into\
    \ a sequence of US-ASCII\n       characters ([RFC0020]).\n   The original definition\
    \ of this authentication scheme failed to\n   specify the character encoding scheme\
    \ used to convert the user-pass\n   into an octet sequence.  In practice, most\
    \ implementations chose\n   either a locale-specific encoding such as ISO-8859-1\
    \ ([ISO-8859-1]),\n   or UTF-8 ([RFC3629]).  For backwards compatibility reasons,\
    \ this\n   specification continues to leave the default encoding undefined, as\n\
    \   long as it is compatible with US-ASCII (mapping any US-ASCII\n   character\
    \ to a single octet matching the US-ASCII character code).\n   The user-id and\
    \ password MUST NOT contain any control characters (see\n   \"CTL\" in Appendix\
    \ B.1 of [RFC5234]).\n   Furthermore, a user-id containing a colon character is\
    \ invalid, as\n   the first colon in a user-pass string separates user-id and\
    \ password\n   from one another; text after the first colon is part of the password.\n\
    \   User-ids containing colons cannot be encoded in user-pass strings.\n   Note\
    \ that many user agents produce user-pass strings without checking\n   that user-ids\
    \ supplied by users do not contain colons; recipients\n   will then treat part\
    \ of the username input as part of the password.\n   If the user agent wishes\
    \ to send the user-id \"Aladdin\" and password\n   \"open sesame\", it would use\
    \ the following header field:\n      Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\n"
- title: 2.1.  The 'charset' auth-param
  contents:
  - "2.1.  The 'charset' auth-param\n   In challenges, servers can use the 'charset'\
    \ authentication parameter\n   to indicate the character encoding scheme they\
    \ expect the user agent\n   to use when generating \"user-pass\" (a sequence of\
    \ octets).  This\n   information is purely advisory.\n   The only allowed value\
    \ is \"UTF-8\"; it is to be matched case-\n   insensitively (see [RFC2978], Section\
    \ 2.3).  It indicates that the\n   server expects character data to be converted\
    \ to Unicode\n   Normalization Form C (\"NFC\"; see Section 3 of [RFC5198]) and\
    \ to be\n   encoded into octets using the UTF-8 character encoding scheme\n  \
    \ ([RFC3629]).\n   For the user-id, recipients MUST support all characters defined\
    \ in\n   the \"UsernameCasePreserved\" profile defined in Section 3.3 of\n   [RFC7613],\
    \ with the exception of the colon (\":\") character.\n   For the password, recipients\
    \ MUST support all characters defined in\n   the \"OpaqueString\" profile defined\
    \ in Section 4.2 of [RFC7613].\n   Other values are reserved for future use.\n\
    \      Note: The 'charset' is only defined on challenges, as Basic\n      authentication\
    \ uses a single token for credentials ('token68'\n      syntax); thus, the credentials\
    \ syntax isn't extensible.\n      Note: The name 'charset' has been chosen for\
    \ consistency with\n      Section 2.1.1 of [RFC2831].  A better name would have\
    \ been\n      'accept-charset', as it is not about the message it appears in,\n\
    \      but the server's expectation.\n   In the example below, the server prompts\
    \ for authentication in the\n   \"foo\" realm, using Basic authentication, with\
    \ a preference for the\n   UTF-8 character encoding scheme:\n      WWW-Authenticate:\
    \ Basic realm=\"foo\", charset=\"UTF-8\"\n   Note that the parameter value can\
    \ be either a token or a quoted\n   string; in this case, the server chose to\
    \ use the quoted-string\n   notation.\n   The user's name is \"test\", and the\
    \ password is the string \"123\"\n   followed by the Unicode character U+00A3\
    \ (POUND SIGN).  Using the\n   character encoding scheme UTF-8, the user-pass\
    \ becomes:\n      't' 'e' 's' 't' ':' '1' '2' '3' pound\n      74  65  73  74\
    \  3A  31  32  33  C2  A3\n   Encoding this octet sequence in Base64 ([RFC4648],\
    \ Section 4) yields:\n      dGVzdDoxMjPCow==\n   Thus, the Authorization header\
    \ field would be:\n      Authorization: Basic dGVzdDoxMjPCow==\n   Or, for proxy\
    \ authentication:\n      Proxy-Authorization: Basic dGVzdDoxMjPCow==\n"
- title: 2.2.  Reusing Credentials
  contents:
  - "2.2.  Reusing Credentials\n   Given the absolute URI ([RFC3986], Section 4.3)\
    \ of an authenticated\n   request, the authentication scope of that request is\
    \ obtained by\n   removing all characters after the last slash (\"/\") character\
    \ of the\n   path component (\"hier_part\"; see [RFC3986], Section 3).  A client\n\
    \   SHOULD assume that resources identified by URIs with a prefix-match\n   of\
    \ the authentication scope are also within the protection space\n   specified\
    \ by the realm value of that authenticated request.\n   A client MAY preemptively\
    \ send the corresponding Authorization header\n   field with requests for resources\
    \ in that space without receipt of\n   another challenge from the server.  Similarly,\
    \ when a client sends a\n   request to a proxy, it MAY reuse a user-id and password\
    \ in the Proxy-\n   Authorization header field without receiving another challenge\
    \ from\n   the proxy server.\n   For example, given an authenticated request to:\n\
    \      http://example.com/docs/index.html\n   requests to the URIs below could\
    \ use the known credentials:\n      http://example.com/docs/\n      http://example.com/docs/test.doc\n\
    \      http://example.com/docs/?page=1\n   while the URIs\n      http://example.com/other/\n\
    \      https://example.com/docs/\n   would be considered to be outside the authentication\
    \ scope.\n   Note that a URI can be part of multiple authentication scopes (such\n\
    \   as \"http://example.com/\" and \"http://example.com/docs/\").  This\n   specification\
    \ does not define which of these should be treated with\n   higher priority.\n"
- title: 3.  Internationalization Considerations
  contents:
  - "3.  Internationalization Considerations\n   User-ids or passwords containing\
    \ characters outside the US-ASCII\n   character repertoire will cause interoperability\
    \ issues, unless both\n   communication partners agree on what character encoding\
    \ scheme is to\n   be used.  Servers can use the new 'charset' parameter (Section\
    \ 2.1)\n   to indicate a preference of \"UTF-8\", increasing the probability that\n\
    \   clients will switch to that encoding.\n   The 'realm' parameter carries data\
    \ that can be considered textual;\n   however, [RFC7235] does not define a way\
    \ to reliably transport non-\n   US-ASCII characters.  This is a known issue that\
    \ would need to be\n   addressed in a revision to that specification.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The Basic authentication scheme is not a secure\
    \ method of user\n   authentication, nor does it in any way protect the entity,\
    \ which is\n   transmitted in cleartext across the physical network used as the\n\
    \   carrier.  HTTP does not prevent the addition of enhancements (such as\n  \
    \ schemes to use one-time passwords) to Basic authentication.\n   The most serious\
    \ flaw of Basic authentication is that it results in\n   the cleartext transmission\
    \ of the user's password over the physical\n   network.  Many other authentication\
    \ schemes address this problem.\n   Because Basic authentication involves the\
    \ cleartext transmission of\n   passwords, it SHOULD NOT be used (without enhancements\
    \ such as HTTPS\n   [RFC2818]) to protect sensitive or valuable information.\n\
    \   A common use of Basic authentication is for identification purposes\n   --\
    \ requiring the user to provide a user-id and password as a means of\n   identification,\
    \ for example, for purposes of gathering accurate usage\n   statistics on a server.\
    \  When used in this way it is tempting to\n   think that there is no danger in\
    \ its use if illicit access to the\n   protected documents is not a major concern.\
    \  This is only correct if\n   the server issues both user-id and password to\
    \ the users and, in\n   particular, does not allow the user to choose his or her\
    \ own\n   password.  The danger arises because naive users frequently reuse a\n\
    \   single password to avoid the task of maintaining multiple passwords.\n   If\
    \ a server permits users to select their own passwords, then the\n   threat is\
    \ not only unauthorized access to documents on the server but\n   also unauthorized\
    \ access to any other resources on other systems that\n   the user protects with\
    \ the same password.  Furthermore, in the\n   server's password database, many\
    \ of the passwords may also be users'\n   passwords for other sites.  The owner\
    \ or administrator of such a\n   system could therefore expose all users of the\
    \ system to the risk of\n   unauthorized access to all those other sites if this\
    \ information is\n   not maintained in a secure fashion.  This raises both security\
    \ and\n   privacy concerns ([RFC6973]).  If the same user-id and password\n  \
    \ combination is in use to access other accounts, such as an email or\n   health\
    \ portal account, personal information could be exposed.\n   Basic authentication\
    \ is also vulnerable to spoofing by counterfeit\n   servers.  If a user can be\
    \ led to believe that she is connecting to a\n   host containing information protected\
    \ by Basic authentication when,\n   in fact, she is connecting to a hostile server\
    \ or gateway, then the\n   attacker can request a password, store it for later\
    \ use, and feign an\n   error.  Server implementers ought to guard against this\
    \ sort of\n   counterfeiting; in particular, software components that can take\
    \ over\n   control over the message framing on an existing connection need to\
    \ be\n   used carefully or not at all (for instance: NPH (\"Non-Parsed Header\"\
    )\n   scripts as described in Section 5 of [RFC3875]).\n   Servers and proxies\
    \ implementing Basic authentication need to store\n   user passwords in some form\
    \ in order to authenticate a request.\n   These passwords ought to be stored in\
    \ such a way that a leak of the\n   password data doesn't make them trivially\
    \ recoverable.  This is\n   especially important when users are allowed to set\
    \ their own\n   passwords, since users are known to choose weak passwords and\
    \ to\n   reuse them across authentication realms.  While a full discussion of\n\
    \   good password hashing techniques is beyond the scope of this\n   document,\
    \ server operators ought to make an effort to minimize risks\n   to their users\
    \ in the event of a password data leak.  For example,\n   servers ought to avoid\
    \ storing user passwords in plaintext or as\n   unsalted digests.  For more discussion\
    \ about modern password hashing\n   techniques, see the \"Password Hashing Competition\"\
    \n   (<https://password-hashing.net>).\n   The use of the UTF-8 character encoding\
    \ scheme and of normalization\n   introduces additional security considerations;\
    \ see Section 10 of\n   [RFC3629] and Section 6 of [RFC5198] for more information.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA maintains the \"Hypertext Transfer Protocol\
    \ (HTTP) Authentication\n   Scheme Registry\" ([RFC7235]) at <http://www.iana.org/assignments/\n\
    \   http-authschemes>.\n   The entry for the \"Basic\" authentication scheme has\
    \ been updated to\n   reference this specification.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC20]    Cerf, V., \"ASCII format for network\
    \ interchange\", STD 80,\n              RFC 20, DOI 10.17487/RFC0020, October\
    \ 1969,\n              <http://www.rfc-editor.org/info/rfc20>.\n   [RFC2119] \
    \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n\
    \              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2978]  Freed,\
    \ N. and J. Postel, \"IANA Charset Registration\n              Procedures\", BCP\
    \ 19, RFC 2978, DOI 10.17487/RFC2978,\n              October 2000, <http://www.rfc-editor.org/info/rfc2978>.\n\
    \   [RFC3629]  Yergeau, F., \"UTF-8, a transformation format of ISO\n        \
    \      10646\", STD 63, RFC 3629, DOI 10.17487/RFC3629, November\n           \
    \   2003, <http://www.rfc-editor.org/info/rfc3629>.\n   [RFC3986]  Berners-Lee,\
    \ T., Fielding, R., and L. Masinter, \"Uniform\n              Resource Identifier\
    \ (URI): Generic Syntax\", STD 66,\n              RFC 3986, DOI 10.17487/RFC3986,\
    \ January 2005,\n              <http://www.rfc-editor.org/info/rfc3986>.\n   [RFC4648]\
    \  Josefsson, S., \"The Base16, Base32, and Base64 Data\n              Encodings\"\
    , RFC 4648, DOI 10.17487/RFC4648, October 2006,\n              <http://www.rfc-editor.org/info/rfc4648>.\n\
    \   [RFC5198]  Klensin, J. and M. Padlipsky, \"Unicode Format for Network\n  \
    \            Interchange\", RFC 5198, DOI 10.17487/RFC5198, March 2008,\n    \
    \          <http://www.rfc-editor.org/info/rfc5198>.\n   [RFC5234]  Crocker, D.,\
    \ Ed. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:\
    \ ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234, January 2008,\n\
    \              <http://www.rfc-editor.org/info/rfc5234>.\n   [RFC6365]  Hoffman,\
    \ P. and J. Klensin, \"Terminology Used in\n              Internationalization\
    \ in the IETF\", BCP 166, RFC 6365,\n              DOI 10.17487/RFC6365, September\
    \ 2011,\n              <http://www.rfc-editor.org/info/rfc6365>.\n   [RFC7235]\
    \  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n             \
    \ Protocol (HTTP/1.1): Authentication\", RFC 7235,\n              DOI 10.17487/RFC7235,\
    \ June 2014,\n              <http://www.rfc-editor.org/info/rfc7235>.\n   [RFC7613]\
    \  Saint-Andre, P. and A. Melnikov, \"Preparation,\n              Enforcement,\
    \ and Comparison of Internationalized Strings\n              Representing Usernames\
    \ and Passwords\", RFC 7613,\n              DOI 10.17487/RFC7613, August 2015,\n\
    \              <http://www.rfc-editor.org/info/rfc7613>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [ISO-8859-1]\n              International Organization\
    \ for Standardization,\n              \"Information technology -- 8-bit single-byte\
    \ coded graphic\n              character sets -- Part 1: Latin alphabet No. 1\"\
    , ISO/IEC\n              8859-1:1998, 1998.\n   [RFC2617]  Franks, J., Hallam-Baker,\
    \ P., Hostetler, J., Lawrence, S.,\n              Leach, P., Luotonen, A., and\
    \ L. Stewart, \"HTTP\n              Authentication: Basic and Digest Access Authentication\"\
    ,\n              RFC 2617, DOI 10.17487/RFC2617, June 1999,\n              <http://www.rfc-editor.org/info/rfc2617>.\n\
    \   [RFC2818]  Rescorla, E., \"HTTP Over TLS\", RFC 2818,\n              DOI 10.17487/RFC2818,\
    \ May 2000,\n              <http://www.rfc-editor.org/info/rfc2818>.\n   [RFC2831]\
    \  Leach, P. and C. Newman, \"Using Digest Authentication as a\n             \
    \ SASL Mechanism\", RFC 2831, DOI 10.17487/RFC2831, May 2000,\n              <http://www.rfc-editor.org/info/rfc2831>.\n\
    \   [RFC3875]  Robinson, D. and K. Coar, \"The Common Gateway Interface\n    \
    \          (CGI) Version 1.1\", RFC 3875, DOI 10.17487/RFC3875,\n            \
    \  October 2004, <http://www.rfc-editor.org/info/rfc3875>.\n   [RFC5246]  Dierks,\
    \ T. and E. Rescorla, \"The Transport Layer Security\n              (TLS) Protocol\
    \ Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246, August 2008,\n\
    \              <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC6973]  Cooper,\
    \ A., Tschofenig, H., Aboba, B., Peterson, J.,\n              Morris, J., Hansen,\
    \ M., and R. Smith, \"Privacy\n              Considerations for Internet Protocols\"\
    , RFC 6973,\n              DOI 10.17487/RFC6973, July 2013,\n              <http://www.rfc-editor.org/info/rfc6973>.\n\
    \   [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n \
    \             Protocol (HTTP/1.1): Semantics and Content\", RFC 7231,\n      \
    \        DOI 10.17487/RFC7231, June 2014,\n              <http://www.rfc-editor.org/info/rfc7231>.\n\
    \   [RFC7615]  Reschke, J., \"HTTP Authentication-Info and Proxy-\n          \
    \    Authentication-Info Response Header Fields\", RFC 7615,\n              DOI\
    \ 10.17487/RFC7615, September 2015,\n              <http://www.rfc-editor.org/info/rfc7615>.\n\
    \   [RFC7616]  Shekh-Yusef, R., Ed., Ahrens, D., and S. Bremer, \"HTTP\n     \
    \         Digest Access Authentication\", RFC 7616,\n              DOI 10.17487/RFC7616,\
    \ September 2015,\n              <http://www.rfc-editor.org/info/rfc7616>.\n"
- title: Appendix A.  Changes from RFC 2617
  contents:
  - "Appendix A.  Changes from RFC 2617\n   The scheme definition has been rewritten\
    \ to be consistent with newer\n   specifications such as [RFC7235].\n   The new\
    \ authentication parameter 'charset' has been added.  It is\n   purely advisory,\
    \ so existing implementations do not need to change,\n   unless they want to take\
    \ advantage of the additional information that\n   previously wasn't available.\n"
- title: Appendix B.  Deployment Considerations for the 'charset' Parameter
  contents:
  - 'Appendix B.  Deployment Considerations for the ''charset'' Parameter

    '
- title: B.1.  User Agents
  contents:
  - "B.1.  User Agents\n   User agents not implementing 'charset' will continue to\
    \ work as\n   before, ignoring the new parameter.\n   User agents that already\
    \ default to the UTF-8 encoding implement\n   'charset' by definition.\n   Other\
    \ user agents can keep their default behavior and switch to UTF-8\n   when seeing\
    \ the new parameter.\n"
- title: B.2.  Servers
  contents:
  - "B.2.  Servers\n   Servers that do not support non-US-ASCII characters in credentials\
    \ do\n   not require any changes to support 'charset'.\n   Servers that need to\
    \ support non-US-ASCII characters, but cannot use\n   the UTF-8 character encoding\
    \ scheme will not be affected; they will\n   continue to function as well or as\
    \ badly as before.\n   Finally, servers that need to support non-US-ASCII characters\
    \ and can\n   use the UTF-8 character encoding scheme can opt in by specifying\
    \ the\n   'charset' parameter in the authentication challenge.  Clients that do\n\
    \   understand the 'charset' parameter will then start to use UTF-8,\n   while\
    \ other clients will continue to send credentials in their\n   default encoding,\
    \ broken credentials, or no credentials at all.\n   Until all clients are upgraded\
    \ to support UTF-8, servers are likely\n   to see both UTF-8 and \"legacy\" encodings\
    \ in requests.  When\n   processing as UTF-8 fails (due to a failure to decode\
    \ as UTF-8 or a\n   mismatch of user-id/password), a server might try a fallback\
    \ to the\n   previously supported legacy encoding in order to accommodate these\n\
    \   legacy clients.  Note that implicit retries need to be done\n   carefully;\
    \ for instance, some subsystems might detect repeated login\n   failures and treat\
    \ them as a potential credentials-guessing attack.\n"
- title: B.3.  Why not simply switch the default encoding to UTF-8?
  contents:
  - "B.3.  Why not simply switch the default encoding to UTF-8?\n   There are sites\
    \ in use today that default to a local character\n   encoding scheme, such as\
    \ ISO-8859-1 ([ISO-8859-1]), and expect user\n   agents to use that encoding.\
    \  Authentication on these sites will stop\n   working if the user agent switches\
    \ to a different encoding, such as\n   UTF-8.\n   Note that sites might even inspect\
    \ the User-Agent header field\n   ([RFC7231], Section 5.5.3) to decide which character\
    \ encoding scheme\n   to expect from the client.  Therefore, they might support\
    \ UTF-8 for\n   some user agents, but default to something else for others.  User\n\
    \   agents in the latter group will have to continue to do what they do\n   today\
    \ until the majority of these servers have been upgraded to\n   always use UTF-8.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This specification takes over the definition of the \"Basic\"\
    \ HTTP\n   Authentication Scheme, previously defined in RFC 2617.  We thank John\n\
    \   Franks, Phillip M. Hallam-Baker, Jeffery L. Hostetler, Scott\n   D. Lawrence,\
    \ Paul J. Leach, Ari Luotonen, and Lawrence C. Stewart for\n   their work on that\
    \ specification, from which significant amounts of\n   text were borrowed.  See\
    \ Section 6 of [RFC2617] for further\n   acknowledgements.\n   The internationalization\
    \ problem with respect to the character\n   encoding scheme used for user-pass\
    \ was reported as a Mozilla bug back\n   in the year 2000 (see\n   <https://bugzilla.mozilla.org/show_bug.cgi?id=41489>\
    \ and also the\n   more recent <https://bugzilla.mozilla.org/show_bug.cgi?id=656213>).\n\
    \   It was Andrew Clover's idea to address it using a new auth-param.\n   We also\
    \ thank the members of the HTTPAUTH Working Group and other\n   reviewers, namely,\
    \ Stephen Farrell, Roy Fielding, Daniel Kahn\n   Gillmor, Tony Hansen, Bjoern\
    \ Hoehrmann, Kari Hurtta, Amos Jeffries,\n   Benjamin Kaduk, Michael Koeller,\
    \ Eric Lawrence, Barry Leiba, James\n   Manger, Alexey Melnikov, Kathleen Moriarty,\
    \ Juergen Schoenwaelder,\n   Yaron Sheffer, Meral Shirazipour, Michael Sweet,\
    \ and Martin Thomson\n   for feedback on this revision.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Julian F. Reschke\n   greenbytes GmbH\n   Hafenweg 16\n\
    \   Muenster, NW  48155\n   Germany\n   Email: julian.reschke@greenbytes.de\n\
    \   URI:   http://greenbytes.de/tech/webdav/\n"
