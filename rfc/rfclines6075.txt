The Internet Assigned Number Authority (IANA)
Application Configuration Access Protocol (ACAP)
The original Application Configuration Access Protocol (ACAP) specification included a vendor registry now used in other protocols.
This document updates the description of this registry, removing the need for a direct normative reference to ACAP and removing ambiguity.
The [ACAP] specification includes the specification and creation of the ACAP Vendor Registry, and this registry has subsequently been reused by several specifications, including both [ANNOTATE] and [METADATA], and is proving to be a useful mechanism for namespacing various names to within a specific vendor's scope.
The use of textual rather than numeric identifiers for vendors benefits engineers and operators who are diagnosing protocol problems by allowing them some possibility of identifying the origin of a vendor attribute without having to look it up in a registry (although that remains a necessary fallback).
As such, engineers and operators already have to be familiar with international technical English to diagnose textual protocol problems, the restriction to ASCII may help and is not believed to harm that intended use.
Exposure of vendor attributes directly in end user user interfaces
was not an intended use of the registry.
This document merely updates the registry to reduce ambiguity in the original specification and dissociates it from the original document in all but name, allowing easier referencing.
It replaces Section 7.4 and portions of Section 4, particularly Section 4.3, of [ACAP].
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [KEYWORDS].
The formal syntax is to be considered normative and is specified using [ABNF].
Where a formal syntax and the prose are in conflict, the formal syntax takes precedence.
The Vendor Subtree Registry A Vendor Token is a UTF 8 string that begins with "vendor." and that is followed by the name of the company or product.
This name MUST NOT contain any slash character, period, or the percent and asterisk characters typically used as wildcards.
Following this may be names, separated from the Vendor Token by a period, which need not be registered, thus forming a complete Vendor Name.
Internationalization Vendor Tokens are able to contain any valid Unicode codepoint, encoded as [UTF 8], except the special characters.
Since the publication of [ACAP], however, concerns have been raised on the handling and comparison of full Unicode strings; therefore, this specification restricts the current registrations to the ASCII subset of UTF 8.
Furthermore, characters such as ASCII control characters, most whitespace, and quotes are likely to be confusing and have been similarly restricted.
Therefore, this document allows only ASCII letters, digits, the hyphen, and space to be used in registrations (the <iana vendor tag> ABNF production in Section 3.2).
At the time of publication of this document, no existing registrations violate the new restricted syntax on characters allowed in registrations.
[ACAP] required all Vendor Tokens to be registered with IANA, so the new restriction is not believed to introduce any interoperability issue.
Finally, note that this document does not change the requirement on processors to accept other non ASCII Unicode codepoints in Vendor Tokens (the <possible vendor tag> ABNF production in Section 3.2).
This syntax draws upon productions found within [ABNF] and [UTF 8].
Productions replace those in Section 4.3 of [ACAP].
%x01 24 / %x26 29 / %x2B 2D / %x30 7F ;;
possible vendor tag   name component
;; This production represents what ;; applications and specifications ;; MUST be able to accept.
A company Example, Ltd. might register the Subtree "vendor.example".
This means it may use "vendor.example", or any name at all beginning "vendor.example.", such as "vendor.example.product".
These names might be used in several protocols, and are reserved in all the relevant protocols, so "vendor.example" might be an ACAP [ACAP] dataset class name, and "/vendor/vendor.example" might be a tree of IMAP ANNOTATE entries [ANNOTATE].
Example, Ltd. is free to use either "vendor.example", and group specific products under it using the relevant protocol's hierarchy   perhaps "/shared/vendor/vendor.example/product" annotation [ANNOTATE], or using more specific names, such as "/shared/vendor/ vendor.example.product" annotation.
This non normative section details changes from the original specification of the registry in RFC 2244.
Vendor Tokens are restricted to ASCII for registration purposes.
that "vendor.<company/product name>" means "vendor.company name" or
"vendor.product name" "vendor.company/ product" is and always has been illegal.
a name in its own right RFC 2244 only refers to a prefix of "vendor.company.".
Added example registration, in line with [EXAMPLES].
This specification updates the IANA registry named the ACAP "Vendor Subtrees" registry.
IANA has updated the registry to point at this document.
Vendors may reserve a portion of the ACAP namespace, which is also used as the namespace for several other protocols, for private use.
Vendor Names are reserved for use by that company or product, wherever used, once registered.
Registration is on a first come, first served basis.
Whenever possible, private attributes and classes should be eschewed in favour of improving interoperable protocols.
Vendors may only use names conforming to iana vendor tag at the current time; future revisions of this specification may change this.
Registration of ACAP Vendor Subtree Private Prefix: vendor.name Person and email address to contact for further information: (company names and addresses should be included where appropriate) 4.1.
Example Registration IANA is requested to add the following registration, for use by specification authors in examples, similarly to the domains specified in [EXAMPLES]:
Registration of ACAP Vendor Subtree
Private Prefix: vendor.example Person and email address to contact for further information: Dave Cridland <dave.cridland@isode.com> 5.
There are no known security issues with this registry.
Individual protocols using Vendor Subtree names may have security issues, and the introduction of Unicode has, in itself, security implications
the restriction of this is thought to mitigate these.
