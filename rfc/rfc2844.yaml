- title: __initial_text__
  contents:
  - '                      OSPF over ATM and Proxy-PAR

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo specifies, for OSPF implementors and users, mechanisms\n\
    \   describing how the protocol operates in ATM networks over PVC and SVC\n  \
    \ meshes with the presence of Proxy-PAR. These recommendations require\n   no\
    \ protocol changes and allow simpler, more efficient and cost-\n   effective network\
    \ designs. It is recommended that OSPF\n   implementations should be able to support\
    \ logical interfaces, each\n   consisting of one or more virtual circuits and\
    \ used either as\n   numbered logical point-to-point links (one VC), logical NBMA\
    \ networks\n   (more than one VC) or Point-to-MultiPoint networks (more than one\n\
    \   VC), where a solution simulating broadcast interfaces is not\n   appropriate.\
    \ PAR can help distribute across the ATM cloud\n   configuration setup and changes\
    \ of such interfaces when OSPF capable\n   routers are (re-)configured.  Proxy-PAR\
    \ can in turn be used to\n   exchange this information between the ATM cloud and\
    \ the routers\n   connected to it.\n"
- title: 1 Introduction
  contents:
  - "1 Introduction\n   Proxy-PAR and PAR have been accepted as standards by the ATM\
    \ Forum in\n   January 1999 [1]. A more complete overview of Proxy-PAR than in\
    \ the\n   section below is given in [2].\n"
- title: 1.1 Introduction to Proxy-PAR
  contents:
  - "1.1 Introduction to Proxy-PAR\n   Proxy-PAR [1] is an extension that allows different\
    \ ATM attached\n   devices (like routers) to interact with PAR-capable switches\
    \ and to\n   query information about non-ATM services without executing PAR\n\
    \   themselves. The Proxy-PAR client side in the ATM attached device is\n   much\
    \ simpler in terms of implementation complexity and memory\n   requirements than\
    \ a complete PAR protocol stack (which includes the\n   full PNNI [3] protocol\
    \ stack) and should allow easy implementation,\n   e.g. in existing IP routers.\
    \  In addition, clients can use Proxy-PAR\n   to register the various non-ATM\
    \ services and protocols they support.\n   Proxy PAR has consciously been omitted\
    \ as part of ILMI [4] due to the\n   complexity of PAR information passed in the\
    \ protocol and the fact\n   that it is intended for integration of non-ATM protocols\
    \ and services\n   only. A device that executes Proxy-PAR does not necessarily\
    \ need to\n   execute ILMI or UNI signaling, although this normally will be the\n\
    \   case.\n   The protocol in itself does not specify how the distributed service\n\
    \   registration and data delivered to the client is supposed to drive\n   other\
    \ protocols. Hence OSPF routers, for instance, that find\n   themselves through\
    \ Proxy-PAR could use this information in a\n   Classical IP and ARP over ATM\
    \ [5] fashion, forming a full mesh of\n   point-to-point connections to interact\
    \ with each other to simulate\n   broadcast interfaces. For the same purpose,\
    \ LANE [6] or MARS [7]\n   could be used. As a byproduct, Proxy-PAR could provide\
    \ the ATM\n   address resolution for IP-attached devices, but such resolution\
    \ can\n   be achieved by other protocols under specification at the IETF as\n\
    \   well, e.g. [8]. Last but not least, it should be mentioned here that\n   the\
    \ protocol coexists with and complements the ongoing work in IETF\n   on server\
    \ detection via ILMI extensions [9,10,11].\n"
- title: 1.1.1 Proxy-PAR Scopes
  contents:
  - "1.1.1 Proxy-PAR Scopes\n   Any information registered through Proxy-PAR is flooded\
    \ only within a\n   defined scope that is established during registration and\
    \ is\n   equivalent to the PNNI routing level. As no assumption can be made\n\
    \   about the information distributed (e.g. IP addresses bound to NSAPs\n   are\
    \ not assumed to be aligned with them in any respect such as\n   encapsulation\
    \ or functional mapping), it cannot be summarized. This\n   makes a careful handling\
    \ of scopes necessary to preserve the\n   scalability. More details on the usage\
    \ of scope can be found in [2].\n"
- title: 1.2 Introduction to OSPF
  contents:
  - "1.2 Introduction to OSPF\n   OSPF (Open Shortest Path First) is an Interior Gateway\
    \ Protocol (IGP)\n   and described in [12] from which most of the following paragraphs\
    \ has\n   been taken almost literally. OSPF distributes routing information\n\
    \   between routers belonging to a single Autonomous System. The OSPF\n   protocol\
    \ is based on link-state or SPF technology. It was developed\n   by the OSPF working\
    \ group of the Internet Engineering Task Force. It\n   has been designed expressly\
    \ for the TCP/IP internet environment,\n   including explicit support for IP subnetting,\
    \ and the tagging of\n   externally-derived routing information. OSPF also utilizes\
    \ IP\n   multicast when sending/receiving the updates. In addition, much work\n\
    \   has been done to produce a protocol that responds quickly to topology\n  \
    \ changes, yet involves small amounts of routing protocol traffic.\n   To cope\
    \ with the needs of NBMA and demand-circuit-capable networks\n   such as Frame\
    \ Relay or X.25, [13] has been made available. It\n   standardizes extensions\
    \ to the protocol that allow efficient\n   operation over on-demand circuits.\n\
    \   OSPF supports three types of networks today:\n      +  Point-to-point networks:\
    \ A network that joins a single pair of\n         routers. Point-to-point networks\
    \ can either be numbered or\n         unnumbered. In the latter case the interfaces\
    \ do not have IP\n         addresses nor masks. Even when numbered, both sides\
    \ of the link\n         do not have to agree on the IP subnet.\n      +  Broadcast\
    \ networks: Networks supporting many (more than two)\n         attached routers,\
    \ together with the capability of addressing a\n         single physical message\
    \ to all of the attached routers\n         (broadcast). Neighboring routers are\
    \ discovered dynamically on\n         these networks using the OSPF Hello Protocol.\
    \ The Hello\n         Protocol itself takes advantage of the broadcast capability.\n\
    \         The protocol makes further use of multicast capabilities, if\n     \
    \    they exist. An Ethernet is an example of a broadcast network.\n      +  Non-broadcast\
    \ networks: Networks supporting many (more than\n         two) attached routers,\
    \ but having no broadcast capability.\n         Neighboring routers are maintained\
    \ on these nets using OSPF's\n         Hello Protocol.  However, due to the lack\
    \ of broadcast\n         capability, some configuration information is necessary\
    \ for the\n         correct operation of the Hello Protocol. On these networks,\n\
    \         OSPF protocol packets that are normally multicast need to be\n     \
    \    sent to each neighboring router, in turn. An X.25 Public Data\n         Network\
    \ (PDN) is an example of a non-broadcast network.\n         OSPF runs in one of\
    \ two modes over non-broadcast networks. The\n         first mode, called non-broadcast\
    \ multi-access (NBMA), simulates\n         the operation of OSPF on a broadcast\
    \ network. The second mode,\n         called Point-to-MultiPoint, treats the non-broadcast\
    \ network as\n         a collection of point-to-point links. Non-broadcast networks\n\
    \         are referred to as NBMA networks or Point-to-MultiPoint\n         networks,\
    \ depending on OSPF's mode of operation over the\n         network.\n"
- title: 2 OSPF over ATM
  contents:
  - '2 OSPF over ATM

    '
- title: 2.1 Model
  contents:
  - "2.1 Model\n   Contrary to broadcast-simulation-based solutions such as LANE [6]\
    \ or\n   Classical IP and ARP over ATM [5], this document elaborates on how to\n\
    \   handle virtual OSPF interfaces over ATM such as NBMA, Point-to-\n   MultiPoint\
    \ or point-to-point and allow for their auto-configuration\n   in the presence\
    \ of Proxy-PAR. One advantage is the circumvention of\n   server solutions that\
    \ often present single points of failure or hold\n   large amounts of configuration\
    \ information.\n   The other main benefit is the capability of executing OSPF\
    \ on top of\n   NBMA and Point-to-MultiPoint ATM networks, and still benefit from\
    \ the\n   automatic discovery of OSPF neighbors. As opposed to broadcast\n   networks,\
    \ broadcast-simulation-based networks (such as LANE or\n   Classical IP and ARP\
    \ over ATM), and point-to-point networks, where an\n   OSPF router dynamically\
    \ discovers its neighbors by sending Hello\n   packets to the All-SPFRouters multicast\
    \ address, this is not the case\n   on NBMA and Point-to-MultiPoint networks.\
    \ On NBMA networks, the list\n   of all other attached routers to the same NBMA\
    \ network has to be\n   manually configured or discovered by some other means:\
    \ Proxy-PAR\n   allows this configuration to be automated.  Also on Point-to-\n\
    \   MultiPoint networks, the set of routers that are directly reachable\n   can\
    \ either be manually configured or dynamically discovered by\n   Proxy-PAR or\
    \ mechanisms such as Inverse ATMARP. In an ATM network,\n   (see 8.2 in [5]) Inverse\
    \ ATMARP can be used to discover the IP\n   address of the router at the remote\
    \ end of a given PVC, whether or\n   not its ATM address is known. But Inverse\
    \ ATMARP does not return, for\n   instance, whether the remote router is running\
    \ OSPF, unlike Proxy-\n   PAR.\n   Parallel to [14], which describes the recommended\
    \ operation of OSPF\n   over Frame Relay networks, a similar model is assumed\
    \ where the\n   underlying ATM network can be used to model single VCs as point-to-\n\
    \   point interfaces or collections of VCs as non-broadcast interfaces,\n   whether\
    \ in NBMA or Point-to-MultiPoint mode. Such a VC or collection\n   of VCs is called\
    \ a logical interface and specified through its type\n   (either point-to-point,\
    \ NBMA or Point-to-MultiPoint), VPN ID (the\n   Virtual Private Network to which\
    \ the interface belongs), address and\n   mask. Layer 2 specific configurations\
    \ such as the address resolution\n   method, class and quality of service of circuits\
    \ used, and others,\n   must also be included. As a logical consequence thereof,\
    \ a single,\n   physical interface could encompass multiple IP subnets or even\n\
    \   multiple VPNs. Contrary to layer 2 and IP addressing information,\n   when\
    \ running Proxy-PAR, most of the OSPF information needed to\n   operate such a\
    \ logical interface does not have to be configured into\n   routers statically\
    \ but can be provided through Proxy-PAR queries.\n   This allows much more dynamic\
    \ configuration of VC meshes in OSPF\n   environments than, for example, Frame\
    \ Relay solutions do.\n   Proxy-PAR queries can also be issued with a subnet address\
    \ set to\n   0.0.0.0, instead of a specific subnet address. This type of query\n\
    \   returns information on all OSPF routers available in all subnets\n   within\
    \ the scope specified in the query. This can be used for\n   instance when the\
    \ IP addressing information has not been configured.\n"
- title: 2.2 Configuration of OSPF interfaces with Proxy-PAR
  contents:
  - "2.2 Configuration of OSPF interfaces with Proxy-PAR\n   To achieve the goal of\
    \ simplification of VC mesh reconfiguration,\n   Proxy-PAR allows the router to\
    \ learn automatically most of the\n   configuration that has to be provided to\
    \ OSPF. Non-broadcast and\n   point-to-point interface information can be learned\
    \ across an ATM\n   cloud as described in the ongoing sections. It is up to the\n\
    \   implementation to possibly allow for a mixture of Proxy-PAR\n   autoconfiguration\
    \ and manual configuration of neighbor information.\n   Moreover, manual configuration\
    \ could, for instance, override or\n   complement information derived from a Proxy-PAR\
    \ client. In addition,\n   OSPF extensions to handle on-demand circuits [13] can\
    \ be used to\n   allow the graceful tearing down of VCs not carrying any OSPF\
    \ traffic\n   over prolonged periods of time.  The various interactions are\n\
    \   described in sections 2.2.1, 2.2.2 and 2.2.3.\n   Even after autoconfiguration\
    \ of interfaces has been provided, the\n   problem of VC setups in an ATM network\
    \ is unsolved because none of\n   the normally used mechanisms such as Classical\
    \ IP and ARP over ATM\n   [5] or LANE [6] are assumed to be present.  Section\
    \ 2.5 describes the\n   behavior of OSPF routers necessary to allow for router\
    \ connectivity.\n"
- title: 2.2.1 Autoconfiguration of Non-Broadcast Multiple-Access (NMBA)
  contents:
  - "2.2.1 Autoconfiguration of Non-Broadcast Multiple-Access (NMBA)\n      Interfaces\n\
    \   Proxy-PAR allows the autoconfiguation of the list of all routers\n   residing\
    \ on the same IP network in the same VPN by simply querying\n   the Proxy-PAR\
    \ server. Each router can easily obtain the list of all\n   OSPF routers on the\
    \ same subnet with their router priorities and\n   corresponding ATM addresses.\
    \ This is the precondition for OSPF to\n   work properly across such logical NBMA\
    \ interfaces. Note that this\n   member list, when learned through Proxy-PAR queries,\
    \ can dynamically\n   change with PNNI (in)stability and general ATM network behavior.\n\
    \   Relying on an OSPF mechanism to discover a lack of reachability in\n   the\
    \ overlaying logical IP network could alleviate the risk of\n   thrashing DR elections\
    \ and excessive information flooding. Once the\n   DR election has been completed\
    \ and the router has not been elected DR\n   or BDR, an implementation of [13]\
    \ can ignore the fact that all\n   routers on the specific NBMA subnet are available\
    \ in its\n   configuration because it only needs to maintain VCs to the DR and\n\
    \   BDR. Note that this information can serve other purposes, such as the\n  \
    \ forwarding of data packets (see section 2.4).\n   Traditionally, router configuration\
    \ for a NBMA network provides the\n   list of all neighboring routers to allow\
    \ for proper protocol\n   operation. For stability purposes, the user may choose\
    \ to provide a\n   list of neighbors through such static means but also enable\
    \ the\n   operation of Proxy-PAR protocol to complete the list.  It is left up\n\
    \   to specific router implementations to determine whether to use the\n   manual\
    \ configuration in addition to the information provided by\n   Proxy-PAR, to use\
    \ the manual configuration to filter dynamic\n   information, or whether a concurrent\
    \ mode of operation is prohibited.\n   In any case it should be obvious that allowing\
    \ for more flexibility\n   may facilitate operation but provides more possibilities\
    \ for\n   misconfiguration as well.\n"
- title: 2.2.2 Autoconfiguration of Point-to-MultiPoint Interfaces
  contents:
  - "2.2.2 Autoconfiguration of Point-to-MultiPoint Interfaces\n   Point-to-MultiPoint\
    \ interfaces in ATM networks only make sense if no\n   VCs can be set up dynamically\
    \ because an SVC-capable ATM network\n   normally presents a NBMA cloud to OSPF.\
    \ This is for example the case\n   if OSPF executes over a network composed of\
    \ a partial PVC or SPVC\n   mesh or predetermined SVC meshes. Such a network could\
    \ be modeled\n   using the Point-to-MultiPoint OSPF interface and the neighbor\n\
    \   detection could be provided by Proxy-PAR or other means. In the\n   Proxy-PAR\
    \ case the router queries for all OSPF routers on the same\n   network in the\
    \ same VPN but it installs in the interface\n   configuration only routers that\
    \ are already reachable through\n   existing PVCs. The underlying assumption is\
    \ that a router knows the\n   remote ATM address of a PVC and can compare it with\
    \ appropriate\n   Proxy-PAR registrations. If the remote ATM address of the PVC\
    \ is\n   unknown, it can be discovered by such mechanisms as Inverse ARP [15].\n\
    \   Proxy-PAR provides a true OSPF neighbor detection mechanism, whereas\n   a\
    \ mechanism like Inverse ARP only returns addresses of directly\n   reachable\
    \ routers (which are not necessarily running OSPF), in the\n   Point-to-Multi-Point\
    \ environment.\n"
- title: 2.2.3 Autoconfiguration of Numbered Point-to-Point Interfaces
  contents:
  - "2.2.3 Autoconfiguration of Numbered Point-to-Point Interfaces\n   OSPF point-to-point\
    \ links do not necessarily have an IP address\n   assigned and even if they do,\
    \ the mask is undefined. As a\n   precondition to successfully register a service\
    \ with Proxy-PAR, an IP\n   address and a mask are required. Therefore, if a router\
    \ desires to\n   use Proxy-PAR to advertise the local end of a point-to-point\
    \ link to\n   the router with which it intends to form an adjacency, an IP address\n\
    \   has to be provided as well as a netmask set or a default of\n   255.255.255.252\
    \ (this gives as the default case a subnet with two\n   routers on it) assumed.\
    \ To allow the discovery of the remote end of\n   the interface, IP address of\
    \ the remote side has to be provided and a\n   netmask set or a default of 255.255.255.252\
    \ assumed. Obviously the\n   discovery can only be successful when both sides\
    \ of the interface are\n   configured with the same network mask and are within\
    \ the same IP\n   network. The situation where more than two possible neighbors\
    \ are\n   discovered through queries and the interface type is set to point-\n\
    \   to-point presents a configuration error.\n   Sending multicast Hello packets\
    \ on the point-to-point links allows\n   OSPF neighbors to be discovered automatically.\
    \ On the other hand,\n   using Proxy-PAR instead avoids sending Hello messages\
    \ to routers that\n   are not necessarily running OSPF.\n"
- title: 2.2.4 Autoconfiguration of Unnumbered Point-to-Point Interfaces
  contents:
  - "2.2.4 Autoconfiguration of Unnumbered Point-to-Point Interfaces\n   For reasons\
    \ given in [14], the use of unnumbered point-to-point\n   interfaces with Proxy-PAR\
    \ is not a very attractive alternative\n   because the lack of an IP address prevents\
    \ efficient registration and\n   retrieval of configuration information. Relying\
    \ on the numbering\n   method based on MIB entries generates conflicts with the\
    \ dynamic\n   nature of creation of such entries and is beyond the scope of this\n\
    \   work.\n"
- title: 2.3 Registration of OSPF interfaces with Proxy-PAR
  contents:
  - "2.3 Registration of OSPF interfaces with Proxy-PAR\n   To allow other routers\
    \ to discover an OSPF interface automatically,\n   the IP address, mask, Area\
    \ ID, interface type and router priority\n   information given must be registered\
    \ with the Proxy-PAR server at an\n   appropriate scope. A change in any of these\
    \ parameters has to force a\n   reregistration with Proxy-PAR.\n   It should be\
    \ emphasized here that because the registration\n   information can be used by\
    \ other routers to resolve IP addresses\n   against NSAPs as explained in section\
    \ 2.4, the entire IP address of\n   the router must be registered. It is not sufficient\
    \ to indicate the\n   subnet up to the mask length; all address bits must be provided.\n"
- title: 2.3.1 Registration of Non-Broadcast Multiple-Access Interfaces
  contents:
  - "2.3.1 Registration of Non-Broadcast Multiple-Access Interfaces\n   For an NBMA\
    \ interface the appropriate parameters are available and\n   can be registered\
    \ through Proxy-PAR without further complications.\n"
- title: 2.3.2 Registration of Point-to-Multipoint Interfaces
  contents:
  - "2.3.2 Registration of Point-to-Multipoint Interfaces\n   In the case of a Point-to-MultiPoint\
    \ interface the router registers\n   its information in the same fashion as in\
    \ the NBMA case, except that\n   the interface type is modified accordingly.\n"
- title: 2.3.3 Registration of Numbered Point-to-Point Interfaces
  contents:
  - "2.3.3 Registration of Numbered Point-to-Point Interfaces\n   In the case of point-to-point\
    \ numbered interfaces the address mask is\n   not specified in the OSPF configuration.\
    \ If the router has to use\n   Proxy-PAR to advertise its capability, a mask must\
    \ be defined or a\n   default value of 255.255.255.252 used.\n"
- title: 2.3.4 Registration of Unnumbered Point-to-Point Interfaces
  contents:
  - "2.3.4 Registration of Unnumbered Point-to-Point Interfaces\n   Owing to the lack\
    \ of a configured IP address and difficulties\n   generated by this fact as described\
    \ earlier, registration of\n   unnumbered point-to-point interfaces is not covered\
    \ in this document.\n"
- title: 2.4 IP address to NSAP Resolution Using Proxy-PAR
  contents:
  - "2.4 IP address to NSAP Resolution Using Proxy-PAR\n   As a byproduct of Proxy-PAR\
    \ presence, an OSPF implementation could\n   use the information in registrations\
    \ for the resolution of IP\n   addresses to ATM NSAPs on a subnet without having\
    \ to use static data\n   or mechanisms such as ATMARP [5]. This again should allow\
    \ a drastic\n   simplification of the number of mechanisms involved in operating\
    \ OSPF\n   over ATM to provide an IP overlay.\n   From a system perspective, the\
    \ OSPF component, the Proxy-PAR client,\n   the IP to NSAP address resolution\
    \ table, and the ATM circuit manager\n   can be depicted as in Figure 1. Figure\
    \ 1 shows an example of\n   component interactions triggered by a Proxy-PAR query\
    \ from the\n   Proxy-PAR client.\n"
- title: 2.5 Connection Setup Mechanisms
  contents:
  - "2.5 Connection Setup Mechanisms\n   This section describes the OSPF behavior\
    \ in an ATM network under\n   various assumptions in terms of signaling capabilities\
    \ and preset\n   connectivity.\n"
- title: 2.5.1 OSPF in PVC Environments
  contents:
  - "2.5.1 OSPF in PVC Environments\n   In environments where only partial PVCs (or\
    \ SPVCs) meshes are\n   available and modeled as Point-to-MultiPoint interfaces,\
    \ the routers\n   see reachable routers through autodiscovery provided by Proxy-PAR.\n\
    \   This leads to expected OSPF behavior. In cases where a full mesh of\n   PVCs\
    \ is present, such a network should preferably be modeled as NBMA.\n   Note that\
    \ in such a case, PVCs failures will translate into not-so-\n   obvious routing\
    \ failures.\n        __________                      _________\n       |     \
    \     |                    |         |\n       |   OSPF   |<-------------------|Proxy-PAR|<---(Proxy-PAR\
    \ query)\n       |__________|  notify            | client  |\n            ^  \
    \      neighbor changes  |_________|\n            |                          \
    \     |\n   send and |                               | maintain Proxy-PAR\n  \
    \ receive  |                               | entries in table\n   OSPF msg | \
    \                              |\n            |                              \
    \ |\n            |                               |\n        ____V____        \
    \               ____V_____\n       |   ATM   |                     |         \
    \ |\n       | circuit |-------------------->|IP to NSAP|\n       | manager | check\
    \               |  table   |\n       |_________| IP to NSAP bindings |__________|\n\
    \   Figure 1: System perspective of typical components interactions.\n"
- title: 2.5.2 OSPF in SVC Environments
  contents:
  - "2.5.2 OSPF in SVC Environments\n          +           +                     \
    \        +\n          |   +---+   |                             |\n   +--+   |---|RTA|---|\
    \          +-------+          |   +--+\n   |H1|---|   +---+   |          | ATM\
    \   |          |---|H2|\n   +--+   |           |   +---+  | Cloud |  +---+   |\
    \   +--+\n          |LAN Y      |---|RTB|-------------|RTC|---|\n          + \
    \          |   +---+  | PPAR  |  +---+   |\n                      +          +-------+\
    \          +\n     Figure 2: Simple topology with Router B and Router C operating\n\
    \               across NBMA ATM interfaces with Proxy-PAR.\n   In SVC-capable\
    \ environments the routers can initiate VCs after having\n   discovered the appropriate\
    \ neighbors, preferably driven by the need\n   to send data such as Hello packets.\
    \ This can lead to race conditions\n   where both sides can open a VC simultaneously.\
    \ It is generally\n   desirable to avoid wasting this valuable resource: if the\
    \ router with\n   lower IP address (i.e., the IP address of the OSPF interface\n\
    \   registered with Proxy-PAR) detects that the VC initiated by the other\n  \
    \ side is bidirectional, it is free to close its own VC and use the\n   detected\
    \ one. Note that this either requires the OSPF implementation\n   to be aware\
    \ of the VCs used to send and receive Hello messages, or\n   the component responsible\
    \ of managing VCs to be aware of the usage of\n   particular VCs.\n   Observe\
    \ that this behavior operates correctly in case OSPF over\n   Demand Circuits\
    \ extensions are used [13] over SVC capable interfaces.\n   Most of the time,\
    \ it is possible to avoid the setup of redundant VCs\n   by delaying the sending\
    \ of the first OSPF Hello from the router with\n   the lower IP address by an\
    \ amout of time greater than the interval\n   between the queries from the Proxy-PAR\
    \ client to the server. Chances\n   are that the router with the higher IP address\
    \ opens the VC (or use\n   an already existing VC) and sends the OSPF Hello first\
    \ if its\n   interval between queries is shorter than the Hello delay of the\n\
    \   router with the lower IP address. As this interval can vary depending\n  \
    \ on particular needs and implementations, the race conditions\n   described above\
    \ can still be expected to happen, albeit presumably\n   less often.\n   The existence\
    \ of VCs used for OSPF exchanges is orthogonal to the\n   number and type of VCs\
    \ the router chooses to use within the logical\n   interface to forward data to\
    \ other routers. OSPF implementations are\n   free to use any of these VCs (in\
    \ case they are aware of their\n   existence) to send packets if their end points\
    \ are adequate and must\n   accept Hello packets arriving on any of the VCs belonging\
    \ to the\n   logical interface even if OSPF operating on such an interface is\
    \ not\n   aware of their existence. An OSPF implementation may ignore\n   connections\
    \ being initiated by another router that has not been\n   discovered by Proxy-PAR.\
    \ In any case, the OSPF implementation will\n   ignore a neighbor whose Proxy-PAR\
    \ registration indicates that it is\n   not adjacent.\n   As an example consider\
    \ the topology in Figure 2 where router RTB and\n   RTC are connected to a common\
    \ ATM cloud offering Proxy-PAR services.\n   Assuming that RTB's OSPF implementation\
    \ is aware of SVCs initiated on\n   the interface and that RTC only makes minimal\
    \ use of Proxy-PAR\n   information, the following sequence could develop, illustrating\
    \ some\n   of the cases described above:\n      1. RTC and RTB register with ATM\
    \ cloud as Proxy-PAR capable and\n         discover each other as adjacent OSPF\
    \ routers.\n      2. RTB sends a Hello, which forces it to establish a SVC\n \
    \        connection to RTC.\n      3. RTC sends a Hello to RTB, but disregards\
    \ the already existing\n         VC and establishes a new VC to RTB to deliver\
    \ the packet.\n      4. RTB sees a new bidirectional VC and, assuming here that\
    \ RTC's\n         IP address is higher, closes the VC originated in step 2.\n\
    \      5. Host H1 sends data to H2 and RTB establishes a new data SVC\n      \
    \   between itself and RTC.\n      6. RTB sends a Hello to RTC and decides to\
    \ do so using the newly\n         establish data SVC. RTC must accept the Hello\
    \ despite the\n         minimal implementation.\n"
- title: 3 Acknowledgments
  contents:
  - "3 Acknowledgments\n   Comments and contributions from several sources, especially\
    \ Rob\n   Coltun, Doug Dykeman, John Moy and Alex Zinin are included in this\n\
    \   work.\n"
- title: 4 Security Considerations
  contents:
  - "4 Security Considerations\n   Several aspects are to be considered in the context\
    \ of the security\n   of operating OSPF over ATM and/or Proxy-PAR. The security\
    \ of\n   registered information handed to the ATM cloud must be guaranteed by\n\
    \   the underlying PNNI protocol. The registration itself through Proxy-\n   PAR\
    \ is not secured, and are thus appropriate mechanisms for further\n   study. However,\
    \ even if the security at the ATM layer is not\n   guaranteed, OSPF security mechanisms\
    \ can be used to verify that\n   detected neighbors are authorized to interact\
    \ with the entity\n   discovering them.\n"
- title: 5 Bibliography
  contents:
  - "5 Bibliography\n   [1]  ATM Forum, \"PNNI Augmented Routing (PAR) Version 1.0.\"\
    \  ATM\n        Forum af-ra-0104.000, January 1999.\n   [2]  Droz, P. and T. Przygienda,\
    \ \"Proxy-PAR\", RFC 2843, May 2000.\n   [3]  ATM-Forum, \"Private Network-Network\
    \ Interface Specification\n        Version 1.0.\" ATM Forum af-pnni-0055.000,\
    \ March 1996.\n   [4]  ATM-Forum, \"Interim Local Management Interface, (ILMI)\n\
    \        Specification 4.0.\" ATM Forum af-ilmi-0065.000, September 1996.\n  \
    \ [5]  Laubach, J., \"Classical IP and ARP over ATM\", RFC 2225, April\n     \
    \   1998.\n   [6]  ATM-Forum, \"LAN Emulation over ATM 1.0.\" ATM Forum af-lane-\n\
    \        0021.000, January 1995.\n   [7]  Armitage, G., \"Support for Multicast\
    \ over UNI 3.0/3.1 based ATM\n        Networks\", RFC 2022, November 1996.\n \
    \  [8]  Coltun, R., \"The OSPF Opaque LSA Option\", RFC 2328, July 1998.\n   [9]\
    \  Davison, M., \"ILMI-Based Server Discovery for ATMARP\", RFC 2601,\n      \
    \  June 1999.\n   [10] Davison, M., \"ILMI-Based Server Discovery for MARS\",\
    \ RFC 2602,\n        June 1999.\n   [11] Davison, M., \"ILMI-Based Server Discovery\
    \ for NHRP\", RFC 2603,\n        June 1999.\n   [12] Moy, J., \"OSPF Version 2\"\
    , RFC 2328, April 1998.\n   [13] Moy, J., \"Extending OSPF to Support Demand Circuits\"\
    , RFC 1793,\n        April 1995.\n   [14] deSouza, O. and M. Rodrigues, \"Guidelines\
    \ for Running OSPF Over\n        Frame Relay Networks\", RFC 1586, March 1994.\n\
    \   [15] Bradley, A. and C. Brown, \"Inverse Address Resolution Protocol\",\n\
    \        RFC 2390, September 1999.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Tony Przygienda\n   Siara Systems Incorporated\n   1195\
    \ Borregas Avenue\n   Sunnyvale, CA 94089\n   USA\n   EMail: prz@siara.com\n \
    \  Patrick Droz\n   IBM Research\n   Zurich Research Laboratory\n   Saumerstrasse\
    \ 4\n   8803 Ruschlikon\n   Switzerland\n   EMail: dro@zurich.ibm.com\n   Robert\
    \ Haas\n   IBM Research\n   Zurich Research Laboratory\n   Saumerstrasse 4\n \
    \  8803 Ruschlikon\n   Switzerland\n   EMail: rha@zurich.ibm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
