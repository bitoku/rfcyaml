Abstract This document specifies the prospero Uniform Resource Identifier (URI) scheme that was originally specified in RFC 1738.
The purpose of this document is to allow RFC 1738 to be made obsolete while keeping the information about the scheme on standards track.
Introduction URIs were previously defined in RFC 2396 [RFC2396], which was updated by RFC 3986 [RFC3986].
Those documents also specify how to define schemes for URIs.
The first definitions for many URI schemes appeared in RFC 1738 [RFC1738].
Because that document has been made obsolete, this document copies the prospero URI scheme from it to allow that material to remain on standards track.
The prospero URL scheme is used to designate resources that are accessed through the Prospero Directory Service.
The Prospero protocol is described in the original Prospero specification [PROSP].
Historical note: The Prospero protocol was not widely implemented and almost no Prospero servers are in use today.
A prospero URL takes the form:
If :<port> is omitted, the port defaults to 1525.
No username or password is allowed.
The <hsoname> is the host specific object name in the Prospero protocol, suitably encoded.
This name is opaque and interpreted by the Prospero server.
Prospero URLs are interpreted by contacting a Prospero directory server on the specified host and port to determine appropriate access methods for a resource.
The access methods might themselves be represented as different URLs.
External Prospero links are represented as URLs of the underlying access method and are not represented as Prospero URLs.
Though slashes may indicate hierarchical structure on the server, such structure is not guaranteed.
s begin with a slash, in which case the host or port will be followed by a double slash: the slash from the URL syntax, followed by the initial slash from the <hsoname> (e.g., <URL:
In addition, after the <hsoname>, optional fields and values associated with a Prospero link may be specified as part of the URL.
If present, these fields serve to identify the target of the URL.
For example, the OBJECT VERSION field can be specified to identify a specific version of an object.
Many security considerations for URI schemes are discussed in [RFC3986].
[PROSP] uses passwords in the clear for authentication, and offers no privacy, both of which are considered extremely unsafe in current practice.
