- contents:
  - '             WebRTC Video Processing and Codec Requirements

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This specification provides the requirements and considerations
    for\n   WebRTC applications to send and receive video across a network.  It\n
    \  specifies the video processing that is required as well as video\n   codecs
    and their parameters.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7742.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . .   2\n   3.  Pre- and Post-Processing  . . . . . . . . . . . . . . . . .
    .   3\n     3.1.  Camera-Source Video . . . . . . . . . . . . . . . . . . .   3\n
    \    3.2.  Screen-Source Video . . . . . . . . . . . . . . . . . . .   4\n   4.
    \ Stream Orientation  . . . . . . . . . . . . . . . . . . . . .   4\n   5.  Mandatory-to-Implement
    Video Codec  . . . . . . . . . . . . .   5\n   6.  Codec-Specific Considerations
    . . . . . . . . . . . . . . . .   6\n     6.1.  VP8 . . . . . . . . . . . . .
    . . . . . . . . . . . . . .   6\n     6.2.  H.264 . . . . . . . . . . . . . .
    . . . . . . . . . . . .   6\n   7.  Security Considerations . . . . . . . . .
    . . . . . . . . . .   8\n   8.  References  . . . . . . . . . . . . . . . . .
    . . . . . . . .   8\n     8.1.  Normative References  . . . . . . . . . . . .
    . . . . . .   8\n     8.2.  Informative References  . . . . . . . . . . . . .
    . . . .   9\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .
    . .  10\n   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .
    \ 10\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   One of the major functions of WebRTC endpoints is the ability
    to send\n   and receive interactive video.  The video might come from a camera,
    a\n   screen recording, a stored file, or some other source.  This\n   specification
    provides the requirements and considerations for WebRTC\n   applications to send
    and receive video across a network.  It\n   specifies the video processing that
    is required as well as video\n   codecs and their parameters.\n   Note that this
    document only discusses those issues dealing with\n   video-codec handling.  Issues
    that are related to transport of media\n   streams across the network are specified
    in [WebRTC-RTP-USAGE].\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [RFC2119].\n   The
    following definitions are used in this document:\n   o  A WebRTC browser (also
    called a WebRTC User Agent or WebRTC UA) is\n      something that conforms to
    both the protocol specification and the\n      Javascript API (see [RTCWEB-OVERVIEW]).\n
    \  o  A WebRTC non-browser is something that conforms to the protocol\n      specification,
    but it does not claim to implement the Javascript\n      API.  This can also be
    called a \"WebRTC device\" or \"WebRTC native\n      application\".\n   o  A WebRTC
    endpoint is either a WebRTC browser or a WebRTC non-\n      browser.  It conforms
    to the protocol specification.\n   o  A WebRTC-compatible endpoint is an endpoint
    that is able to\n      successfully communicate with a WebRTC endpoint but may
    fail to\n      meet some requirements of a WebRTC endpoint.  This may limit where\n
    \     in the network such an endpoint can be attached, or it may limit\n      the
    security guarantees that it offers to others.  It is not\n      constrained by
    this specification; when it is mentioned at all, it\n      is to note the implications
    on WebRTC-compatible endpoints of the\n      requirements placed on WebRTC endpoints.\n
    \  These definitions are also found in [RTCWEB-OVERVIEW] and that\n   document
    should be consulted for additional information.\n"
  title: 2.  Terminology
- contents:
  - "3.  Pre- and Post-Processing\n   This section provides guidance on pre- and post-processing
    of video\n   streams.\n   Unless specified otherwise by the Session Description
    Protocol (SDP)\n   or codec, the color space SHOULD be sRGB [SRGB].  For clarity,
    this\n   is the color space indicated by codepoint 1 from \"ColourPrimaries\"
    as\n   defined in [IEC23001-8].\n   Unless specified otherwise by the SDP or codec,
    the video scan\n   pattern for video codecs is Y'CbCr 4:2:0.\n"
  - contents:
    - "3.1.  Camera-Source Video\n   This document imposes no normative requirements
      on camera capture;\n   however, implementors are encouraged to take advantage
      of the\n   following features, if feasible for their platform:\n   o  Automatic
      focus, if applicable for the camera in use\n   o  Automatic white balance\n
      \  o  Automatic light-level control\n   o  Dynamic frame rate for video capture
      based on actual encoding in\n      use (e.g., if encoding at 15 fps due to bandwidth
      constraints, low\n      light conditions, or application settings, the camera
      will ideally\n      capture at 15 fps rather than a higher rate).\n"
    title: 3.1.  Camera-Source Video
  - contents:
    - "3.2.  Screen-Source Video\n   If the video source is some portion of a computer
      screen (e.g.,\n   desktop or application sharing), then the considerations in
      this\n   section also apply.\n   Because screen-sourced video can change resolution
      (due to, e.g.,\n   window resizing and similar operations), WebRTC-video recipients
      MUST\n   be prepared to handle midstream resolution changes in a way that\n
      \  preserves their utility.  Precise handling (e.g., resizing the\n   element
      a video is rendered in versus scaling down the received\n   stream; decisions
      around letter/pillarboxing) is left to the\n   discretion of the application.\n
      \  Note that the default video-scan format (Y'CbCr 4:2:0) is known to be\n   less
      than optimal for the representation of screen content produced\n   by most systems
      in use at the time of this document's writing, which\n   generally use RGB with
      at least 24 bits per sample.  In the future,\n   it may be advisable to use
      video codecs optimized for screen content\n   for the representation of this
      type of content.\n   Additionally, attention is drawn to the requirements in
      Section 5.2\n   of [WebRTC-SEC-ARCH] and the considerations in Section 4.1.1.
      of\n   [WebRTC-SEC].\n"
    title: 3.2.  Screen-Source Video
  title: 3.  Pre- and Post-Processing
- contents:
  - "4.  Stream Orientation\n   In some circumstances -- and notably those involving
    mobile devices\n   -- the orientation of the camera may not match the orientation
    used\n   by the encoder.  Of more importance, the orientation may change over\n
    \  the course of a call, requiring the receiver to change the\n   orientation
    in which it renders the stream.\n   While the sender may elect to simply change
    the pre-encoding\n   orientation of frames, this may not be practical or efficient
    (in\n   particular, in cases where the interface to the camera returns pre-\n
    \  compressed video frames).  Note that the potential for this behavior\n   adds
    another set of circumstances under which the resolution of a\n   screen might
    change in the middle of a video stream, in addition to\n   those mentioned in
    Section 3.2.\n   To accommodate these circumstances, WebRTC implementations that
    can\n   generate media in orientations other than the default MUST support\n   generating
    the R0 and R1 bits of the Coordination of Video\n   Orientation (CVO) mechanism
    described in Section 7.4.5 of [TS26.114]\n   and MUST send them for all orientations
    when the peer indicates\n   support for the mechanism.  They MAY support sending
    the other bits\n   in the CVO extension, including the higher-resolution rotation
    bits.\n   All implementations SHOULD support interpretation of the R0 and R1\n
    \  bits and MAY support the other CVO bits.\n   Further, some codecs support in-band
    signaling of orientation (for\n   example, the SEI \"Display Orientation\" messages
    in H.264 and H.265\n   [H265]).  If CVO has been negotiated, then the sender MUST
    NOT make\n   use of such codec-specific mechanisms.  However, when support for
    CVO\n   is not signaled in the SDP, then such implementations MAY make use of\n
    \  the codec-specific mechanisms instead.\n"
  title: 4.  Stream Orientation
- contents:
  - "5.  Mandatory-to-Implement Video Codec\n   For the definitions of \"WebRTC browser\",
    \"WebRTC non-browser\", and\n   \"WebRTC-compatible endpoint\" as they are used
    in this section, please\n   refer to Section 2.\n   WebRTC Browsers MUST implement
    the VP8 video codec as described in\n   [RFC6386] and H.264 Constrained Baseline
    as described in [H264].\n   WebRTC Non-Browsers that support transmitting and/or
    receiving video\n   MUST implement the VP8 video codec as described in [RFC6386]
    and\n   H.264 Constrained Baseline as described in [H264].\n      NOTE: To promote
    the use of non-royalty-bearing video codecs,\n      participants in the RTCWEB
    working group, and any successor\n      working groups in the IETF, intend to
    monitor the evolving\n      licensing landscape as it pertains to the two mandatory-to-\n
    \     implement codecs.  If compelling evidence arises that one of the\n      codecs
    is available for use on a royalty-free basis, the working\n      group plans to
    revisit the question of which codecs are required\n      for Non-Browsers, with
    the intention being that the royalty-free\n      codec will remain mandatory to
    implement and the other will become\n      optional.\n      These provisions apply
    to WebRTC Non-Browsers only.  There is no\n      plan to revisit the codecs required
    for WebRTC Browsers.\n   \"WebRTC-compatible endpoints\" are free to implement
    any video codecs\n   they see fit.  This follows logically from the definition
    of \"WebRTC-\n   compatible endpoint\".  It is, of course, advisable to implement
    at\n   least one of the video codecs that is mandated for WebRTC browsers,\n   and
    implementors are encouraged to do so.\n"
  title: 5.  Mandatory-to-Implement Video Codec
- contents:
  - "6.  Codec-Specific Considerations\n   SDP allows for codec-independent indication
    of preferred video\n   resolutions using the mechanism described in [RFC6236].
    \ WebRTC\n   endpoints MAY send an \"a=imageattr\" attribute to indicate the maximum\n
    \  resolution they wish to receive.  Senders SHOULD interpret and honor\n   this
    attribute by limiting the encoded resolution to the indicated\n   maximum size,
    as the receiver may not be capable of handling higher\n   resolutions.\n   Additionally,
    codecs may include codec-specific means of signaling\n   maximum receiver abilities
    with regard to resolution, frame rate, and\n   bitrate.\n   Unless otherwise signaled
    in SDP, recipients of video streams MUST be\n   able to decode video at a rate
    of at least 20 fps at a resolution of\n   at least 320 pixels by 240 pixels.  These
    values are selected based\n   on the recommendations in [HSUP1].\n   Encoders
    are encouraged to support encoding media with at least the\n   same resolution
    and frame rates cited above.\n"
  - contents:
    - "6.1.  VP8\n   For the VP8 codec, defined in [RFC6386], endpoints MUST support
      the\n   payload formats defined in [RFC7741].\n   In addition to the [RFC6236]
      mechanism, VP8 encoders MUST limit the\n   streams they send to conform to the
      values indicated by receivers in\n   the corresponding max-fr and max-fs SDP
      attributes.\n   Unless otherwise signaled, implementations that use VP8 MUST
      encode\n   and decode pixels with an implied 1:1 (square) aspect ratio.\n"
    title: 6.1.  VP8
  - contents:
    - "6.2.  H.264\n   For the [H264] codec, endpoints MUST support the payload formats\n
      \  defined in [RFC6184].  In addition, they MUST support Constrained\n   Baseline
      Profile Level 1.2 and SHOULD support H.264 Constrained High\n   Profile Level
      1.3.\n   Implementations of the H.264 codec have utilized a wide variety of\n
      \  optional parameters.  To improve interoperability, the following\n   parameter
      settings are specified:\n   packetization-mode:  Packetization-mode 1 MUST be
      supported.  Other\n      modes MAY be negotiated and used.\n   profile-level-id:
      \ Implementations MUST include this parameter within\n      SDP and MUST interpret
      it when receiving it.\n   max-mbps, max-smbps, max-fs, max-cpb, max-dpb, and
      max-br:\n      These parameters allow the implementation to specify that they
      can\n      support certain features of H.264 at higher rates and values than\n
      \     those signaled by their level (set with profile-level-id).\n      Implementations
      MAY include these parameters in their SDP, but\n      they SHOULD interpret
      them when receiving them, allowing them to\n      send the highest quality of
      video possible.\n   sprop-parameter-sets:  H.264 allows sequence and picture
      information\n      to be sent both in-band and out-of-band.  WebRTC implementations\n
      \     MUST signal this information in-band.  This means that WebRTC\n      implementations
      MUST NOT include this parameter in the SDP they\n      generate.\n   H.264 codecs
      MAY send and MUST support proper interpretation of\n   Supplemental Enhancement
      Information (SEI) \"filler payload\" and \"full\n   frame freeze\" messages.
      \ The \"full frame freeze\" messages are used in\n   video-switching MCUs, to
      ensure a stable decoded displayed picture\n   while switching among various
      input streams.\n   When the use of the video orientation (CVO) RTP header extension
      is\n   not signaled as part of the SDP, H.264 implementations MAY send and\n
      \  SHOULD support proper interpretation of Display Orientation SEI\n   messages.\n
      \  Implementations MAY send and act upon \"User data registered by Rec.\n   ITU-T
      T.35\" and \"User data unregistered\" messages.  Even if they do\n   not act
      on them, implementations MUST be prepared to receive such\n   messages without
      any ill effects.\n   Unless otherwise signaled, implementations that use H.264
      MUST encode\n   and decode pixels with an implied 1:1 (square) aspect ratio.\n"
    title: 6.2.  H.264
  title: 6.  Codec-Specific Considerations
- contents:
  - "7.  Security Considerations\n   This specification does not introduce any new
    mechanisms or security\n   concerns beyond what is in the other documents it references.
    \ In\n   WebRTC, video is protected using Datagram Transport Layer Security\n
    \  (DTLS) / Secure Real-time Transport Protocol (SRTP).  A complete\n   discussion
    of the security considerations can be found in\n   [WebRTC-SEC] and [WebRTC-SEC-ARCH].
    \ Implementors should consider\n   whether the use of variable bitrate video codecs
    are appropriate for\n   their application, keeping in mind that the degree of
    inter-frame\n   change (and, by inference, the amount of motion in the frame)
    may be\n   deduced by an eavesdropper based on the video stream's bitrate.\n   Implementors
    making use of H.264 are also advised to take careful\n   note of the \"Security
    Considerations\" section of [RFC6184], paying\n   special regard to the normative
    requirement pertaining to SEI\n   messages.\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [H264]     ITU-T, \"Advanced video coding for
      generic audiovisual\n              services (V9)\", ITU-T Recommendation H.264,
      February 2014,\n              <http://www.itu.int/rec/T-REC-H.264>.\n   [HSUP1]
      \   ITU-T, \"Application profile - Sign language and lip-\n              reading
      real-time conversation using low bit rate video\n              communication\",
      ITU-T Recommendation H.Sup1, May 1999,\n              <http://www.itu.int/rec/T-REC-H.Sup1>.\n
      \  [IEC23001-8]\n              ISO/IEC, \"Coding independent media description
      code\n              points\", ISO/IEC 23001-8:2013/DCOR1, 2013,\n              <http://standards.iso.org/ittf/PubliclyAvailableStandards/\n
      \             c062088_ISO_IEC_23001-8_2013.zip>.\n   [RFC2119]  Bradner, S.,
      \"Key words for use in RFCs to Indicate\n              Requirement Levels\",
      BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC6184]  Wang, Y., Even, R., Kristensen, T., and R. Jesup, \"RTP\n              Payload
      Format for H.264 Video\", RFC 6184,\n              DOI 10.17487/RFC6184, May
      2011,\n              <http://www.rfc-editor.org/info/rfc6184>.\n   [RFC6236]
      \ Johansson, I. and K. Jung, \"Negotiation of Generic Image\n              Attributes
      in the Session Description Protocol (SDP)\",\n              RFC 6236, DOI 10.17487/RFC6236,
      May 2011,\n              <http://www.rfc-editor.org/info/rfc6236>.\n   [RFC6386]
      \ Bankoski, J., Koleszar, J., Quillio, L., Salonen, J.,\n              Wilkins,
      P., and Y. Xu, \"VP8 Data Format and Decoding\n              Guide\", RFC 6386,
      DOI 10.17487/RFC6386, November 2011,\n              <http://www.rfc-editor.org/info/rfc6386>.\n
      \  [RFC7741]  Westin, P., Lundin, H., Glover, M., Uberti, J., and F.\n              Galligan,
      \"RTP Payload Format for VP8 Video\", RFC 7741,\n              DOI 10.17487/RFC7741,
      March 2016,\n              <http://www.rfc-editor.org/info/rfc7741>.\n   [SRGB]
      \    IEC, \"Multimedia systems and equipment - Colour\n              measurement
      and management - Part 2-1: Colour management -\n              Default RGB colour
      space - sRGB.\", IEC 61966-2-1, October\n              1999, <https://webstore.iec.ch/publication/6169>.\n
      \  [TS26.114] 3GPP, \"IP Multimedia Subsystem (IMS); Multimedia\n              Telephony;
      Media handling and interaction\", TS 26.114,\n              Version 13.2.0,
      December 2015,\n              <http://www.3gpp.org/DynaReport/26114.htm>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [H265]     ITU-T, \"High efficiency video
      coding\",\n              ITU-T Recommendation H.265, April 2015,\n              <http://www.itu.int/rec/T-REC-H.265>.\n
      \  [RTCWEB-OVERVIEW]\n              Alvestrand, H., \"Overview: Real Time Protocols
      for\n              Browser-based Applications\", Work in Progress,\n              draft-ietf-rtcweb-overview-14,
      June 2015.\n   [WebRTC-RTP-USAGE]\n              Perkins, C., Westerlund, M.,
      and J. Ott, \"Web Real-Time\n              Communication (WebRTC): Media Transport
      and Use of RTP\",\n              Work in Progress, draft-ietf-rtcweb-rtp-usage-25,
      June\n              2015.\n   [WebRTC-SEC]\n              Rescorla, E., \"Security
      Considerations for WebRTC\", Work\n              in Progress, draft-ietf-rtcweb-security-08,
      February 2015.\n   [WebRTC-SEC-ARCH]\n              Rescorla, E., \"WebRTC Security
      Architecture\", Work in\n              Progress, draft-ietf-rtcweb-security-arch-11,
      March 2015.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Acknowledgements\n   The author would like to thank Gaelle Martin-Cocher, Stephan
    Wenger,\n   and Bernard Aboba for their detailed feedback and assistance with\n
    \  this document.  Thanks to Cullen Jennings for providing text and\n   review
    and to Russ Housley for a careful final review.  This document\n   includes text
    that originally appeared in \"WebRTC Codec and Media\n   Processing Requirements\"
    (March 2012).\n"
  title: Acknowledgements
- contents:
  - "Author's Address\n   Adam Roach\n   Mozilla\n   Dallas\n   United States\n   Phone:
    +1 650 903 0800 x863\n   Email: adam@nostrum.com\n"
  title: Author's Address
