- title: __initial_text__
  contents:
  - "              Reactive Discovery of Point-to-Point Routes\n                 \
    \   in Low-Power and Lossy Networks\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a point-to-point route discovery mechanism,\n\
    \   complementary to the Routing Protocol for Low-power and Lossy\n   Networks\
    \ (RPL) core functionality.  This mechanism allows an IPv6\n   router to discover\
    \ \"on demand\" routes to one or more IPv6 routers in\n   a Low-power and Lossy\
    \ Network (LLN) such that the discovered routes\n   meet specified metrics constraints.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6997.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. The Use Cases ...................................................4\n  \
    \ 3. Terminology .....................................................5\n   4.\
    \ Applicability ...................................................6\n   5. Functional\
    \ Overview .............................................7\n   6. P2P Route Discovery\
    \ Mode of Operation ..........................10\n      6.1. Setting a P2P Mode\
    \ DIO ....................................10\n   7. P2P Route Discovery Option\
    \ (P2P-RDO) ...........................15\n   8. The P2P Discovery Reply Object\
    \ (P2P-DRO) .......................18\n      8.1. Secure P2P-DRO ............................................20\n\
    \      8.2. Setting a P2P-RDO Carried in a P2P Discovery Reply\n           Object\
    \ ....................................................21\n   9. P2P-RPL Route\
    \ Discovery by Creating a Temporary DAG ............21\n      9.1. Joining a Temporary\
    \ DAG ...................................21\n      9.2. Trickle Operation for\
    \ P2P Mode DIOs .......................22\n      9.3. Processing a P2P Mode DIO\
    \ .................................24\n      9.4. Additional Processing of a P2P\
    \ Mode DIO at an\n           Intermediate Router .......................................26\n\
    \      9.5. Additional Processing of a P2P Mode DIO at the Target .....27\n  \
    \    9.6. Processing a P2P-DRO at an Intermediate Router ............28\n    \
    \  9.7. Processing a P2P-DRO at the Origin ........................30\n   10.\
    \ The P2P Discovery Reply Object Acknowledgement (P2P-DRO-ACK) ..31\n   11. Secure\
    \ P2P-RPL Operation ......................................32\n   12. Packet Forwarding\
    \ along a Route Discovered Using P2P-RPL ......33\n   13. Interoperability with\
    \ Core RPL ................................34\n   14. Security Considerations\
    \ .......................................34\n   15. IANA Considerations ...........................................36\n\
    \      15.1. Additions to Mode of Operation ...........................36\n  \
    \    15.2. Additions to RPL Control Message Options .................36\n    \
    \  15.3. Additions to RPL Control Codes ...........................36\n   16.\
    \ Known Issues and Future Work ..................................37\n   17. Acknowledgements\
    \ ..............................................37\n   18. References ....................................................38\n\
    \      18.1. Normative References .....................................38\n  \
    \    18.2. Informative References ...................................38\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Targeting Low-power and Lossy Networks (LLNs), the IPv6\
    \ Routing\n   Protocol for LLNs (RPL) [RFC6550] provides paths along a Directed\n\
    \   Acyclic Graph (DAG) rooted at a single router in the network.\n   Establishment\
    \ and maintenance of a DAG are performed by routers in\n   the LLN using Destination-Oriented\
    \ DAG (DODAG) Information Object\n   (DIO) messages.  When two arbitrary routers\
    \ (neither of which is the\n   DAG's root) need to communicate, the data packets\
    \ are restricted to\n   travel only along the links in the DAG.  Such point-to-point\
    \ (P2P)\n   routing functionality may not be sufficient for several home\n   automation\
    \ [RFC5826] and building automation [RFC5867] applications,\n   due to the following\
    \ reasons:\n   o  The need to pre-establish routes: Each potential destination\
    \ in\n      the network must declare itself as such ahead of the time a source\n\
    \      needs to reach it.\n   o  The need to route only along the links in the\
    \ DAG: A DAG is built\n      to optimize the routing cost to reach the root. \
    \ Restricting P2P\n      routes to use only the in-DAG links may result in significantly\n\
    \      suboptimal routes and severe traffic congestion near the DAG root.\n  \
    \ This document describes an extension to core RPL (i.e., the RPL\n   functionality\
    \ described in [RFC6550]) that enables an IPv6 router in\n   the LLN to discover\
    \ routes to one or more IPv6 routers in the LLN \"on\n   demand\".  The discovered\
    \ routes may not be the best available but are\n   guaranteed to meet the specified\
    \ routing metric constraints.  Thus,\n   such routes are considered \"good enough\"\
    \ from the application's\n   perspective.  This reactive P2P route discovery mechanism\
    \ is\n   henceforth referred to as P2P-RPL.\n   A mechanism to measure the end-to-end\
    \ cost of an existing route is\n   specified in [RFC6998].  As discussed in Section\
    \ 4, measuring the\n   end-to-end cost of an existing route may help in deciding\
    \ whether to\n   initiate the discovery of a better route using P2P-RPL and the\
    \ metric\n   constraints to be used for this purpose.\n"
- title: 2.  The Use Cases
  contents:
  - "2.  The Use Cases\n   One use case, common in home [RFC5826] and commercial building\n\
    \   [RFC5867] environments, involves a device (say, a remote control)\n   that\
    \ suddenly needs to communicate with another device (say, a lamp)\n   to which\
    \ it does not already have a route (and whose network address\n   it knows a priori).\
    \  In this case, the remote control must be able to\n   discover a route to the\
    \ lamp \"on demand\".\n   Another use case, common in a commercial building environment,\n\
    \   involves a large LLN deployment where P2P communication along a\n   particular\
    \ DAG among hundreds (or thousands) of routers creates\n   severe traffic congestion\
    \ near that DAG's root.  In this case, it is\n   desirable to discover direct\
    \ routes between various source-\n   destination pairs that do not pass through\
    \ the DAG's root.\n   Other use cases involve scenarios where energy or latency\
    \ constraints\n   are not satisfied by the P2P routes along an existing DAG because\n\
    \   they involve traversing many more routers than necessary to reach the\n  \
    \ destination.\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   [RFC2119].\n   Additionally, this document uses terminology from [RFC6550]\
    \ and\n   [RFC6554].  Further terminology may be found in [ROLL-TERMS].  This\n\
    \   document introduces the following terms:\n   Origin:  The IPv6 router initiating\
    \ the P2P-RPL route discovery.\n   Target:  The IPv6 router at the other end point\
    \ of the P2P route(s)\n      to be discovered.  A P2P-RPL route discovery can\
    \ discover routes\n      to multiple Targets at the same time.\n   Intermediate\
    \ Router:  An IPv6 router that is neither the Origin nor a\n      Target.\n  \
    \ Forward direction:  The direction from the Origin to the Target.\n   Reverse\
    \ direction:  The direction from the Target to the Origin.\n   Forward Route:\
    \  A route in the Forward direction.\n   Reverse Route:  A route in the Reverse\
    \ direction.\n   Bidirectional Route:  A route that can be used in both Forward\
    \ and\n      Reverse directions.\n   Ingress-only Interface:  A network interface\
    \ that can only receive\n      packets.\n   Egress-only Interface:  A network\
    \ interface that can only send\n      packets.\n   Source Route:  A complete and\
    \ ordered list of routers that can be\n      used by a packet to travel from a\
    \ source to a destination node.\n   Hop-by-hop Route:  The route characterized\
    \ by each router on the\n      route using its routing table to determine the\
    \ next hop on the\n      route.\n   RPL Security Configuration:  The values for\
    \ the Counter is Time,\n      Security Algorithm, Key Identifier Mode, and Security\
    \ Level\n      fields, as defined in Section 6.1 of [RFC6550], inside the\n  \
    \    Security section of a secure RPL control message.\n"
- title: 4.  Applicability
  contents:
  - "4.  Applicability\n   A route discovery using P2P-RPL may be performed by an\
    \ Origin when no\n   route exists between itself and the Target(s) or when the\
    \ existing\n   routes do not satisfy the application requirements.  P2P-RPL is\n\
    \   designed to discover Hop-by-hop or Source Routes to one or more\n   Targets\
    \ such that the discovered routes meet the specified\n   constraints.  In some\
    \ application contexts, the constraints that the\n   discovered routes must satisfy\
    \ are intrinsically known or can be\n   specified by the application.  For example,\
    \ an Origin that expects\n   its Targets to be less than 5 hops away may use \"\
    hop-count < 5\" as\n   the constraint.  In other application contexts, the Origin\
    \ may need\n   to measure the cost of the existing route to a Target to determine\n\
    \   the constraints.  For example, an Origin that measures the total\n   expected\
    \ transmission count (ETX) along its current route to a Target\n   to be 20 may\
    \ use \"ETX < x*20\", where x is a fraction that the Origin\n   chooses, as the\
    \ constraint.  A mechanism to measure the cost of an\n   existing route between\
    \ two IPv6 routers is specified in [RFC6998].\n   If there is no existing route\
    \ between the Origin and the Target(s) or\n   the cost measurement for the existing\
    \ routes fails, the Origin will\n   have to guess the constraints to be used in\
    \ the initial route\n   discovery.  Once the initial route discovery succeeds\
    \ or fails, the\n   Origin will have a better estimate for the constraints to\
    \ be used in\n   the subsequent route discovery.\n   P2P-RPL may result in discovery\
    \ of better P2P routes than those\n   available along a global DAG designed to\
    \ optimize routing cost to the\n   DAG's root.  The improvement in route quality\
    \ depends on a number of\n   factors, including the network topology, the \"distance\"\
    \ between the\n   Origin and the Target (in terms of the routing metrics in use),\
    \ and\n   the prevalent conditions in the network.  In general, a P2P-RPL route\n\
    \   may be better than the one along a global DAG if the Origin and the\n   Target\
    \ are nearby.  Similarly, a P2P-RPL route may not be much better\n   than the\
    \ one along a global DAG if the Origin and the Target are far\n   apart.  Note\
    \ that even when P2P-RPL routes are not much better than\n   those along a global\
    \ DAG, P2P-RPL routes may still be able to avoid\n   congestion that might occur\
    \ near the root if the routing takes place\n   only along a global DAG.  In general,\
    \ the cost associated with a\n   P2P-RPL route discovery (in terms of the control\
    \ messages -- mostly\n   DIOs -- generated) increases with the distance between\
    \ the Origin and\n   the Target.  However, it is possible to limit the cost of\
    \ route\n   discovery by carefully setting the routing constraints, the Trickle\n\
    \   parameters (which govern DIO generation), and the time duration for\n   which\
    \ a router maintains its membership in the temporary DAG created\n   for the route\
    \ discovery.  A network designer may take into\n   consideration both the benefits\
    \ (potentially better routes; no need\n   to maintain routes proactively; avoid\
    \ congestion near the global\n   DAG's root) and costs when using P2P-RPL.  The\
    \ latency associated\n   with a P2P-RPL route discovery again depends on the distance\
    \ between\n   the Origin and the Target and on the Trickle parameters.\n   Like\
    \ core RPL [RFC6550], P2P-RPL operation requires that links have\n   bidirectional\
    \ reachability.  For this reason, the routers\n   participating in a P2P-RPL route\
    \ discovery must ensure that\n   o  Links that do not have bidirectional reachability\
    \ do not become\n      part of the route being discovered; and\n   o  IPv6 addresses\
    \ belonging to Ingress-only (or Egress-only)\n      Interfaces do not become part\
    \ of the route being discovered.\n"
- title: 5.  Functional Overview
  contents:
  - "5.  Functional Overview\n   This section contains a high-level description of\
    \ P2P-RPL.\n   A P2P-RPL route discovery takes place by forming a DAG rooted at\
    \ the\n   Origin.  As is the case with core RPL, P2P-RPL uses IPv6 link-local\n\
    \   multicast DIO messages to establish a DAG.  However, unlike core RPL,\n  \
    \ this DAG is temporary in nature.  The routes are discovered and\n   installed\
    \ while the DAG is alive.  Once the specified duration of\n   their membership\
    \ in the DAG is over, the routers leave the DAG, and\n   hence the DAG ceases\
    \ to exist.  However, the installed routes are\n   retained for their specified\
    \ lifetime (which is different than the\n   specified duration of a router's membership\
    \ in the DAG) even though\n   the DAG that caused their installation no longer\
    \ exists.  In P2P-RPL,\n   the sole purpose of DAG creation is to discover routes\
    \ to the\n   Target(s), and DIOs serve as the route discovery messages.  Each\n\
    \   router joining the DAG determines a rank for itself in the DAG and\n   ignores\
    \ the subsequent DIOs received from lower-ranked (higher in\n   numerical value)\
    \ neighbors.  Thus, the route discovery messages\n   propagate away from the Origin\
    \ rather than return to it.  As in core\n   RPL, DIO generation at a router is\
    \ controlled by a Trickle timer\n   [RFC6206], which allows a router to avoid\
    \ generating unnecessary\n   messages while providing protection against packet\
    \ loss.  P2P-RPL\n   also uses the routing metrics [RFC6551], Objective Functions,\
    \ and\n   packet-forwarding framework [RFC6554] [RFC6553] developed for\n   core\
    \ RPL.\n   An Origin may use P2P-RPL to discover routes to one or more Targets\n\
    \   identified by one or more unicast/multicast addresses.  P2P-RPL\n   allows\
    \ for the discovery of one Hop-by-hop Route or up to four Source\n   Routes per\
    \ Target.  The discovered routes are guaranteed to meet the\n   specified routing\
    \ metric constraints but may not be the best\n   available.  P2P-RPL may fail\
    \ to discover any route if the specified\n   routing constraints are overly strict.\n\
    \   The Origin initiates a P2P-RPL route discovery by forming a temporary\n  \
    \ DAG rooted at itself.  The DIOs used to create the temporary DAG are\n   identified\
    \ by a new Mode of Operation (P2P Route Discovery mode,\n   defined in Section\
    \ 6).  The DIOs listing the P2P Route Discovery mode\n   as the Mode of Operation\
    \ are henceforth referred to as the P2P mode\n   DIOs.  A P2P mode DIO always\
    \ carries exactly one P2P Route Discovery\n   Option (P2P-RDO, defined in Section\
    \ 7) in which the Origin specifies\n   the following information:\n   o  The IPv6\
    \ address of a Target.  This could be a unicast address or\n      a multicast\
    \ address.  Any additional Targets may be specified by\n      including one or\
    \ more RPL Target options [RFC6550] inside the DIO.\n   o  The nature of the route(s)\
    \ to be discovered: Hop-by-hop or Source\n      Routes.  This specification allows\
    \ for the discovery of one\n      Hop-by-hop Route or up to four Source Routes\
    \ per Target.\n   o  The desired number of routes (if Source Routes are being\n\
    \      discovered).\n   o  Whether the Target(s) should send P2P Discovery Reply\
    \ Object\n      (P2P-DRO) messages (defined in Section 8) back to the Origin on\n\
    \      receiving a DIO message.  A P2P-DRO message carries a discovered\n    \
    \  Source Route back to the Origin or establishes a Hop-by-hop Route\n      between\
    \ the Origin and the Target.\n   A P2P-RDO also includes the best route from the\
    \ Origin that the\n   router, generating the P2P mode DIO, has seen so far.\n\
    \   A P2P mode DIO MAY also carry:\n   o  One or more Metric Container options\
    \ to specify:\n      *  The relevant routing metrics.\n      *  The constraints\
    \ that the discovered route must satisfy.  These\n         constraints also limit\
    \ how far the DIO messages may travel.\n   o  One or more RPL Target options to\
    \ specify additional unicast or\n      multicast Targets.\n   As the routers join\
    \ the temporary DAG, they keep track of the best\n   route(s) (so far from the\
    \ Origin) they have seen and advertise these\n   routes, along with the corresponding\
    \ routing metrics, in their P2P\n   mode DIOs.  A router, including the Target(s),\
    \ discards a received\n   P2P mode DIO if the aggregated routing metrics on the\
    \ route\n   advertised by the DIO do not satisfy the listed constraints.  These\n\
    \   constraints can be used to limit the propagation of P2P mode DIO\n   messages.\
    \  A router may also discard a received P2P mode DIO if it\n   does not wish to\
    \ be a part of the discovered route due to limited\n   resources or due to policy\
    \ reasons.\n   When a Target receives a P2P mode DIO, it contains inside the P2P-RDO\n\
    \   a complete Source Route from the Origin to this Target.  Since the\n   links\
    \ in the discovered route have bidirectional reachability\n   (Section 7), the\
    \ Target may use the discovered route to reach the\n   Origin.  Thus, a router\
    \ that provides a particular service in the LLN\n   (e.g., an outside temperature\
    \ server) could initiate a P2P-RPL route\n   discovery listing all its potential\
    \ clients as Targets, thereby\n   allowing the clients to discover a Source Route\
    \ back to the server.\n   In this case, the Origin (the server) might want to\
    \ disable the\n   generation of P2P-DRO messages by the Targets (the clients).\
    \  If the\n   Origin has requested that P2P-DRO messages be sent back, the Target\n\
    \   may select the discovered route in the received DIO for further\n   processing,\
    \ as described next.  This document does not specify a\n   particular method for\
    \ the Target to use to select a route for further\n   processing.  Example methods\
    \ include selecting any route that meets\n   the constraints or selecting the\
    \ best route(s) discovered over a\n   certain time period.\n   If one or more\
    \ Source Routes are being discovered, the Target sends\n   the selected Source\
    \ Route(s) to the Origin via P2P-DRO messages, with\n   one P2P-DRO message carrying\
    \ one discovered route.  On receiving a\n   P2P-DRO message, the Origin stores\
    \ the discovered route in its\n   memory.  This specification allows the Origin\
    \ to discover up to four\n   Source Routes per Target, thereby allowing the Origin\
    \ to have\n   sufficient ready-to-use alternatives should one or more of these\n\
    \   routes fail.  If a Hop-by-hop Route is being discovered, the Target\n   sends\
    \ a P2P-DRO message containing the selected route to the Origin.\n   The P2P-DRO\
    \ message travels back to the Origin along the selected\n   route, establishing\
    \ state for the Forward Route in the routers on\n   the path.\n   The Target may\
    \ request that the Origin acknowledge the receipt of a\n   P2P-DRO message by\
    \ sending back a P2P-DRO Acknowledgement\n   (P2P-DRO-ACK) message (defined in\
    \ Section 10).  The Origin unicasts a\n   P2P-DRO-ACK message to the Target. \
    \ If the Target does not receive\n   the requested P2P-DRO-ACK within a certain\
    \ time interval of sending a\n   P2P-DRO, it resends the P2P-DRO message (up to\
    \ a certain number of\n   times) carrying the same route as before.\n   The use\
    \ of Trickle timers to delay the propagation of DIO messages\n   may cause some\
    \ nodes to generate these messages even when the desired\n   routes have already\
    \ been discovered.  In order to preempt the\n   generation of such unnecessary\
    \ messages, the Target may set a \"Stop\"\n   flag in the P2P-DRO message to let\
    \ the nodes in the LLN know about\n   the completion of the route discovery process.\
    \  The routers receiving\n   such a P2P-DRO should not generate any more DIOs\
    \ for this temporary\n   DAG, nor should they process any received DIOs for this\
    \ temporary DAG\n   in the future.  However, such routers must still process the\
    \ P2P-DROs\n   received for this temporary DAG.\n"
- title: 6.  P2P Route Discovery Mode of Operation
  contents:
  - "6.  P2P Route Discovery Mode of Operation\n   This section specifies a new RPL\
    \ Mode of Operation (MOP), P2P Route\n   Discovery mode (or P2P mode, for short),\
    \ with value 4.  A DIO message\n   listing P2P mode as the MOP is identified as\
    \ performing a P2P-RPL\n   route discovery by creating a temporary DAG.  A P2P\
    \ mode DIO MUST\n   carry exactly one P2P Route Discovery Option (P2P-RDO, specified\
    \ in\n   Section 7).\n"
- title: 6.1.  Setting a P2P Mode DIO
  contents:
  - "6.1.  Setting a P2P Mode DIO\n   The Base object in a P2P mode DIO message MUST\
    \ be set in the\n   following manner:\n   o  RPLInstanceID: RPLInstanceID MUST\
    \ be a local value as described in\n      Section 5.1 of [RFC6550].  The Origin\
    \ chooses the RPLInstanceID to\n      be used for a particular route discovery\
    \ in accordance with the\n      following rules:\n      *  The Origin SHOULD NOT\
    \ reuse a RPLInstanceID for a route\n         discovery if some routers might\
    \ still maintain membership in\n         the DAG that the Origin had initiated\
    \ for the previous route\n         discovery using this RPLInstanceID.  As described\
    \ in Section 7,\n         a router's membership in a DAG created for a P2P-RPL\
    \ route\n         discovery lasts for the time duration (say, 't' seconds)\n \
    \        indicated by the L field inside the P2P-RDO.  In general, there\n   \
    \      is no upper bound on the time duration by when all the routers\n      \
    \   have left the DAG created for a P2P-RPL route discovery.  In\n         the\
    \ specific case where the discovered route must be at most\n         'n' hops\
    \ in length, all the routers must have left the DAG\n         \"(n+1)*t\" seconds\
    \ after its initiation by the Origin.  In\n         practice, all the routers\
    \ should have joined the DAG within 't'\n         seconds of its initiation (since\
    \ the route discovery must\n         complete while the Origin still belongs to\
    \ the DAG), and hence\n         all the routers should have left the DAG within\
    \ \"2*t\" seconds\n         of its initiation.  Hence, it is usually sufficient\
    \ that the\n         Origin wait for twice the duration indicated by the L field\n\
    \         inside the P2P-RDO used for the previous route discovery before\n  \
    \       reusing the RPLInstanceID for a new route discovery.\n         Individual\
    \ P2P-RPL deployments are encouraged to share their\n         experience with\
    \ various RPLInstanceID reuse policies to help\n         guide the development\
    \ of a Standards Track version of the\n         protocol.\n      *  When initiating\
    \ a new route discovery to a particular Target,\n         the Origin MUST NOT\
    \ reuse the RPLInstanceID used in a previous\n         route discovery to this\
    \ Target if the state created during the\n         previous route discovery might\
    \ still exist in some routers.\n         Note that it is possible that the previous\
    \ route discovery did\n         not succeed yet some routers still ended up creating\
    \ state.\n         The Default Lifetime and Lifetime Unit parameters in the DODAG\n\
    \         Configuration Option specify the lifetime of the state that the\n  \
    \       routers, including the Origin and the Target, maintain for a\n       \
    \  Hop-by-hop or Source Route discovered using P2P-RPL.  Suppose\n         this\
    \ lifetime is 'X' seconds.  As discussed above, any state\n         created during\
    \ the previous route discovery was likely created\n         within \"2*t\" seconds\
    \ of its initiation.  Hence, it is\n         sufficient that the Origin lets a\
    \ time duration equal to\n         \"X+2*t\" seconds pass since the initiation\
    \ of the previous route\n         discovery before initiating a new route discovery\
    \ to the same\n         Target using the same RPLInstanceID.\n   o  Version Number:\
    \ This field MUST be set to zero.  The temporary DAG\n      used for P2P-RPL route\
    \ discovery does not exist long enough to\n      have new versions.\n   o  Grounded\
    \ (G) Flag: This flag MUST be set to one.  Unlike a global\n      RPL instance,\
    \ the concept of a floating DAG, used to provide\n      connectivity within a\
    \ sub-DAG detached from a grounded DAG, does\n      not apply to a local RPL instance.\
    \  Hence, an Origin MUST always\n      set the G flag to one when initiating a\
    \ P2P-RPL route discovery.\n      Further, item 3 of Section 8.2.2.2 in [RFC6550]\
    \ does not apply,\n      and a node MUST NOT initiate a new DAG if it does not\
    \ have any\n      parent left in a P2P-RPL DAG.\n   o  Mode of Operation (MOP):\
    \ This field MUST be set to four,\n      corresponding to P2P Route Discovery\
    \ mode.\n   o  Destination Advertisement Trigger Sequence Number (DTSN): This\n\
    \      field MUST be set to zero on transmission and ignored on\n      reception.\n\
    \   o  DODAGPreference (Prf): This field MUST be set to zero (least\n      preferred).\n\
    \   o  DODAGID: This field MUST be set to an IPv6 address of the Origin.\n   o\
    \  The other fields in the DIO Base object can be set in the desired\n      fashion\
    \ as per the rules described in [RFC6550].\n   A received P2P mode DIO MUST be\
    \ discarded if it does not follow the\n   above-listed rules regarding the RPLInstanceID,\
    \ Version Number,\n   G flag, MOP, and Prf fields inside the Base object.\n  \
    \ The DODAG Configuration Option inside a P2P mode DIO MUST be set in\n   the\
    \ following manner:\n   o  The Origin MUST set the MaxRankIncrease parameter to\
    \ zero to\n      disable local repair of the temporary DAG.  A received P2P mode\n\
    \      DIO MUST be discarded if the MaxRankIncrease parameter inside the\n   \
    \   DODAG Configuration Option is not zero.\n   o  The Origin SHOULD set the Trickle\
    \ parameters\n      (DIOIntervalDoublings, DIOIntervalMin, DIORedundancyConstant)\
    \ as\n      recommended in Section 9.2.\n   o  The Origin sets the Default Lifetime\
    \ and Lifetime Unit parameters\n      to indicate the lifetime of the state that\
    \ the routers, including\n      the Origin and the Target(s), maintain for a Hop-by-hop\
    \ or Source\n      Route discovered using P2P-RPL.\n   o  The Origin sets the\
    \ other fields in the DODAG Configuration\n      Option, including the Objective\
    \ Code Point (OCP) identifying the\n      Objective Function, in the desired fashion\
    \ as per the rules\n      described in [RFC6550].\n   o  As discussed in Section\
    \ 14, P2P-RPL does not distinguish between\n      the \"preinstalled\" and \"\
    authenticated\" security modes described in\n      [RFC6550].  Consequently, the\
    \ Origin MUST set the Authentication\n      Enabled (A) flag to zero.  A received\
    \ P2P mode DIO MUST be\n      discarded if the A flag inside the DODAG Configuration\
    \ Option is\n      not zero.\n   o  An Intermediate Router (or a Target) MUST\
    \ set various fields in\n      the DODAG Configuration Option in the outgoing\
    \ P2P mode DIOs to\n      the values they had in the incoming P2P mode DIOs for\
    \ this DAG.\n   A default DODAG Configuration Option takes effect if a P2P mode\
    \ DIO\n   does not carry an explicit one.  The default DODAG Configuration\n \
    \  Option has the following parameter values:\n   o  Authentication Enabled: 0\n\
    \   o  DIOIntervalMin: 6, which translates to 64 ms as the value for the\n   \
    \   Imin parameter in a Trickle operation.  This value is roughly one\n      order\
    \ of magnitude larger than the typical transmission delay on\n      IEEE 802.15.4\
    \ links and corresponds to the recommendation in\n      Section 9.2 for well-connected\
    \ topologies.\n   o  DIORedundancyConstant: 1.  See the discussion in Section\
    \ 9.2.\n   o  MaxRankIncrease: 0 (to disable local repair of the temporary DAG).\n\
    \   o  Default Lifetime: 0xFF, to correspond to infinity.\n   o  Lifetime Unit:\
    \ 0xFFFF, to correspond to infinity.\n   o  Objective Code Point: 0, i.e., OF0\
    \ [RFC6552] is the default\n      Objective Function (OF).\n   o  The remaining\
    \ parameters have default values as specified in\n      [RFC6550].\n   Individual\
    \ P2P-RPL deployments are encouraged to share their\n   experience with these\
    \ default values to help guide the development of\n   a Standards Track version\
    \ of the protocol.\n   The routing metrics and constraints [RFC6551] used in P2P-RPL\
    \ route\n   discovery are included in one or more Metric Container options\n \
    \  [RFC6550] inside the P2P mode DIO.  Note that a DIO need not include\n   a\
    \ Metric Container if OF0 is the Objective Function in effect.  In\n   that case,\
    \ a P2P mode DIO may still specify an upper limit on the\n   maximum rank, that\
    \ a router may have in the temporary DAG, inside\n   the P2P-RDO.\n   A P2P mode\
    \ DIO:\n   o  MUST carry one (and only one) P2P-RDO.  The P2P-RDO allows for the\n\
    \      specification of one unicast or multicast address for the Target.\n   \
    \   A received P2P mode DIO MUST be discarded if it does not contain\n      exactly\
    \ one P2P-RDO.\n   o  MAY carry one or more RPL Target options to specify additional\n\
    \      unicast/multicast addresses for the Target.  If a unicast address\n   \
    \   is specified, it MUST be a global address or a unique-local\n      address.\n\
    \   o  MAY carry one or more Metric Container options to specify routing\n   \
    \   metrics and constraints.\n   o  MAY carry one or more Route Information Options\
    \ [RFC6550].  In the\n      context of P2P-RPL, a Route Information Option advertises\
    \ to the\n      Target(s) the Origin's connectivity to the prefix specified in\
    \ the\n      option.\n   o  MAY carry one DODAG Configuration Option.  If a P2P\
    \ mode DIO does\n      not carry an explicit DODAG Configuration Option, the default\n\
    \      DODAG Configuration Option defined in this section is considered\n    \
    \  to be in effect.\n   A RPL option other than those listed above MUST be ignored\
    \ when found\n   inside a received P2P mode DIO and MUST NOT be included in the\
    \ P2P\n   mode DIOs that the receiving router generates.\n   In accordance with\
    \ core RPL, a P2P mode DIO MUST propagate via link-\n   local multicast.  The\
    \ IPv6 source address in a P2P mode DIO MUST be a\n   link-local address, and\
    \ the IPv6 destination address MUST be the\n   link-local multicast address all-RPL-nodes\
    \ [RFC6550].  A P2P mode DIO\n   MUST be transmitted on all interfaces the router\
    \ has in this RPL\n   routing domain [RFC6554].\n"
- title: 7.  P2P Route Discovery Option (P2P-RDO)
  contents:
  - "7.  P2P Route Discovery Option (P2P-RDO)\n   This section defines a new RPL control\
    \ message option: the P2P Route\n   Discovery Option (P2P-RDO).\n       0    \
    \               1                   2                   3\n       0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Type = 0x0a | Option Length |R|H| N | Compr | L |MaxRank/NH |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      |   \
    \                      TargetAddr                            |\n      |      \
    \                                                         |\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                       Address[1..n]                           |\n      |\
    \                                                               |\n      |   \
    \                                                            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       Figure 1: Format of the P2P Route Discovery Option (P2P-RDO)\n   The format\
    \ of a P2P Route Discovery Option (P2P-RDO) is illustrated\n   in Figure 1.  A\
    \ P2P mode DIO and a P2P-DRO message (defined in\n   Section 8) MUST carry exactly\
    \ one P2P-RDO.  A P2P-RDO consists of the\n   following fields:\n   o  Option\
    \ Type: 0x0a.\n   o  Option Length: This field is an 8-bit unsigned integer\n\
    \      representing the length in octets of the option, not including the\n  \
    \    Option Type and Option Length fields.\n   o  Reply (R): The Origin sets this\
    \ flag to one to allow the Target(s)\n      to send P2P-DRO messages back to the\
    \ Origin.  If this flag is set\n      to zero, a Target MUST NOT generate any\
    \ P2P-DRO messages.\n   o  Hop-by-hop (H): This flag is valid only if the R flag\
    \ is set to\n      one.  The Origin sets this flag to one if it desires Hop-by-hop\n\
    \      Routes.  The Origin sets this flag to zero if it desires Source\n     \
    \ Routes.  This specification allows for the establishment of one\n      Hop-by-hop\
    \ Route or up to four Source Routes per Target.  The\n      Hop-by-hop Route is\
    \ established in the Forward direction, i.e.,\n      from the Origin to the Target.\
    \  This specification does not allow\n      for the establishment of Hop-by-hop\
    \ Routes in the Reverse\n      direction.\n   o  Number of Routes (N): This field\
    \ is valid only if the R flag is\n      set to one and the H flag is set to zero,\
    \ i.e., the Targets are\n      allowed to generate P2P-DRO messages carrying discovered\
    \ Source\n      Routes back to the Origin.  In this case, the value in the N field\n\
    \      plus one indicates the number of Source Routes that each Target\n     \
    \ should convey to the Origin.  When Hop-by-hop Routes are being\n      discovered,\
    \ the N field MUST be set to zero on transmission and\n      ignored on reception.\n\
    \   o  Compr: This field is a 4-bit unsigned integer indicating the\n      number\
    \ of prefix octets that are elided from the Target field and\n      the Address\
    \ vector.  For example, the Compr value will be zero if\n      full IPv6 addresses\
    \ are carried in the Target field and the\n      Address vector.\n   o  Lifetime\
    \ (L): This is a 2-bit field that indicates the exact\n      duration that a router\
    \ joining the temporary DAG, including the\n      Origin and the Target(s), MUST\
    \ maintain its membership in the DAG.\n      A router MUST leave the temporary\
    \ DAG once the time elapsed since\n      it joined reaches the value indicated\
    \ by this field.  The mapping\n      between the value in this field and the duration\
    \ of the router's\n      membership in the temporary DAG is as follows:\n    \
    \  *  0x00: 1 second\n      *  0x01: 4 seconds\n      *  0x02: 16 seconds\n  \
    \    *  0x03: 64 seconds\n      The Origin sets this field based on its expectation\
    \ regarding the\n      time required for the route discovery to complete, which\
    \ includes\n      the time required for the DIOs to reach the Target(s) and the\n\
    \      P2P-DROs to travel back to the Origin.  The time required for the\n   \
    \   DIOs to reach the Target(s) would in turn depend on the Trickle\n      parameters\
    \ (Imin and the redundancy constant) as well as the\n      expected distance (in\
    \ terms of hops and/or ETX) to the Target(s).\n      While deciding on the value\
    \ in this field, the Origin should also\n      take into account the fact that\
    \ all routers joining the temporary\n      DAG would need to stay in the DAG for\
    \ this much time.\n   o  MaxRank/NH:\n      *  When a P2P-RDO is included in a\
    \ P2P mode DIO, this field\n         indicates the upper limit on the integer\
    \ portion of the rank\n         (calculated using the DAGRank() macro defined\
    \ in [RFC6550])\n         that a router may have in the temporary DAG being created.\
    \  An\n         Intermediate Router MUST NOT join a temporary DAG being created\n\
    \         by a P2P mode DIO if the integer portion of its rank would be\n    \
    \     equal to or higher (in numerical value) than the MaxRank limit.\n      \
    \   A Target can join the temporary DAG at a rank whose integer\n         portion\
    \ is equal to the MaxRank.  A router MUST discard a\n         received P2P mode\
    \ DIO if the integer part of the advertised\n         rank equals or exceeds the\
    \ MaxRank limit.  A value of 0 in this\n         field indicates that the MaxRank\
    \ is infinity.\n      *  When a P2P-RDO is included in a P2P-DRO message, this\
    \ field\n         indicates the index of the next-hop (NH) address inside the\n\
    \         Address vector.\n   o  TargetAddr: This is an IPv6 address of the Target\
    \ after eliding\n      Compr number of prefix octets.  When the P2P-RDO is included\
    \ in a\n      P2P mode DIO, this field may contain a unicast address or a\n  \
    \    multicast address.  If a unicast address is specified, it MUST be\n     \
    \ a global address or a unique-local address.  Any additional Target\n      addresses\
    \ can be specified by including one or more RPL Target\n      options [RFC6550]\
    \ in the DIO.  When the P2P-RDO is included in a\n      P2P-DRO, this field MUST\
    \ contain a unicast global or unique-local\n      IPv6 address of the Target generating\
    \ the P2P-DRO.\n   o  Address[1..n]: This is a vector of IPv6 addresses representing\
    \ a\n      complete route so far in the Forward direction:\n      *  Each element\
    \ in the Address vector has size (16 - Compr) octets\n         and MUST contain\
    \ a valid global or unique-local IPv6 address\n         with the first Compr octets\
    \ elided.\n      *  The total number of elements inside the Address vector is\
    \ given\n         by n = (Option Length - 2 - (16 - Compr))/(16 - Compr).\n  \
    \    *  The IPv6 address that a router adds to the vector MUST belong\n      \
    \   to the interface on which the router received the DIO\n         containing\
    \ this P2P-RDO.  Further, this interface MUST NOT be\n         an Ingress-only\
    \ Interface.  This allows the route accumulated\n         in the Address vector\
    \ to be a Bidirectional Route that can be\n         used by a Target to send a\
    \ P2P-DRO message to the Origin.\n      *  The Address vector MUST carry the accumulated\
    \ route in the\n         Forward direction, i.e., the first element in the Address\n\
    \         vector must contain the IPv6 address of the router next to the\n   \
    \      Origin, and so on.\n      *  The Origin and Target addresses MUST NOT be\
    \ included in the\n         Address vector.\n      *  A router adding its address\
    \ to the vector MUST ensure that none\n         of its addresses already exist\
    \ in the vector.  A Target\n         specifying a complete route in the Address\
    \ vector MUST ensure\n         that the vector does not contain any address more\
    \ than once.\n      *  The Address vector MUST NOT contain any multicast addresses.\n"
- title: 8.  The P2P Discovery Reply Object (P2P-DRO)
  contents:
  - "8.  The P2P Discovery Reply Object (P2P-DRO)\n   This section defines two new\
    \ RPL control message types: the P2P\n   Discovery Reply Object (P2P-DRO), with\
    \ code 0x04; and the Secure\n   P2P-DRO, with code 0x84.  A P2P-DRO serves one\
    \ of the following\n   functions:\n   o  carries a discovered Source Route from\
    \ a Target to the Origin;\n   o  establishes a Hop-by-hop Route as it travels\
    \ from a Target to the\n      Origin.\n   A P2P-DRO message can also serve the\
    \ function of letting the routers\n   in the LLN know that a P2P-RPL route discovery\
    \ is complete and no\n   more DIO messages need to be generated for the corresponding\n\
    \   temporary DAG.  A P2P-DRO message MUST carry one (and only one)\n   P2P-RDO\
    \ whose TargetAddr field MUST contain a unicast IPv6 address of\n   the Target\
    \ that generates the P2P-DRO.  A P2P-DRO message MUST travel\n   from the Target\
    \ to the Origin via link-local multicast along the\n   route specified inside\
    \ the Address vector in the P2P-RDO, as included\n   in the P2P-DRO.  The IPv6\
    \ source address in a P2P-DRO message MUST be\n   a link-local address, and the\
    \ IPv6 destination address MUST be the\n   link-local multicast address all-RPL-nodes\
    \ [RFC6550].  A P2P-DRO\n   message MUST be transmitted on all interfaces the\
    \ router has in this\n   RPL routing domain [RFC6554].\n       0             \
    \      1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | RPLInstanceID |    Version    |S|A|Seq|     Reserved          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      |   \
    \                      DODAGID                               |\n      |      \
    \                                                         |\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | Option(s)...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...\n     Figure\
    \ 2: Format of the Base P2P Discovery Reply Object (P2P-DRO)\n   The format of\
    \ the base P2P Discovery Reply Object (P2P-DRO) is shown\n   in Figure 2.  A base\
    \ P2P-DRO consists of the following fields:\n   o  RPLInstanceID: This field provides\
    \ the RPLInstanceID of the\n      temporary DAG used for route discovery.\n  \
    \ o  Version: This field provides the Version of the temporary DAG used\n    \
    \  for route discovery.  Since a temporary DAG always has value zero\n      for\
    \ the Version, this field MUST always be set to zero.\n   o  Stop (S): This flag,\
    \ when set to one by a Target, indicates that\n      the P2P-RPL route discovery\
    \ is over.  All the routers receiving\n      such a P2P-DRO, including those not\
    \ listed in the route carried\n      inside a P2P-RDO,\n      *  SHOULD NOT process\
    \ any more DIOs received for this\n         temporary DAG;\n      *  SHOULD NOT\
    \ generate any more DIOs for this temporary DAG;\n      *  SHOULD cancel any pending\
    \ DIO transmissions for this\n         temporary DAG.\n      Note that the Stop\
    \ flag serves to stop further DIO\n      generation/processing for a P2P-RPL route\
    \ discovery but does not\n      affect the processing of P2P-DRO messages at either\
    \ the Origin or\n      the Intermediate Routers.  In other words, a router (the\
    \ Origin or\n      an Intermediate Router) MUST continue to process the P2P-DRO\n\
    \      messages even if an earlier P2P-DRO message (with the same\n      RPLInstanceID\
    \ and DODAGID fields) had the Stop flag set to one.\n      When set to zero, this\
    \ flag does not imply anything and MUST be\n      ignored on reception.\n   o\
    \  Ack Required (A): This flag, when set to one by the Target,\n      indicates\
    \ that the Origin MUST unicast a P2P-DRO-ACK message\n      (defined in Section\
    \ 10) to the Target when it receives the\n      P2P-DRO.\n   o  Sequence Number\
    \ (Seq): This 2-bit field indicates the sequence\n      number for the P2P-DRO.\
    \  This field is relevant when the A flag is\n      set to one, i.e., the Target\
    \ requests an acknowledgement from the\n      Origin for a received P2P-DRO. \
    \ The Origin includes the\n      RPLInstanceID, the DODAGID, and the Sequence\
    \ Number of the\n      received P2P-DRO inside the P2P-DRO-ACK message it sends\
    \ back to\n      the Target.\n   o  Reserved: These bits are reserved for future\
    \ use.  These bits MUST\n      be set to zero on transmission and MUST be ignored\
    \ on reception.\n   o  DODAGID: This field provides the DODAGID of the temporary\
    \ DAG used\n      for route discovery.  The DODAGID also identifies the Origin.\
    \  The\n      RPLInstanceID, the Version, and the DODAGID together uniquely\n\
    \      identify the temporary DAG used for route discovery and can be\n      copied\
    \ from the DIO message advertising the temporary DAG.\n   o  Options: The P2P-DRO\
    \ message:\n      *  MUST carry one (and only one) P2P-RDO that MUST specify a\n\
    \         complete route between the Target and the Origin.  A received\n    \
    \     P2P-DRO message MUST be discarded if it does not contain\n         exactly\
    \ one P2P-RDO.\n      *  MAY carry one or more Metric Container options that contain\
    \ the\n         aggregated routing metrics values for the route specified in\n\
    \         the P2P-RDO.\n      A RPL option other than those listed above MUST\
    \ be ignored when\n      found inside a received P2P-DRO message.\n"
- title: 8.1.  Secure P2P-DRO
  contents:
  - "8.1.  Secure P2P-DRO\n   A Secure P2P-DRO message follows the format shown in\
    \ Figure 7 of\n   [RFC6550], where the base format is the base P2P-DRO shown in\n\
    \   Figure 2.\n"
- title: 8.2.  Setting a P2P-RDO Carried in a P2P Discovery Reply Object
  contents:
  - "8.2.  Setting a P2P-RDO Carried in a P2P Discovery Reply Object\n   A P2P Discovery\
    \ Reply Object MUST carry one (and only one) P2P-RDO,\n   which MUST be set as\
    \ defined in Section 7.  Specifically, the\n   following fields MUST be set as\
    \ follows:\n   o  Reply (R): This flag MUST be set to zero on transmission and\n\
    \      ignored on reception.\n   o  Hop-by-Hop (H): The H flag in the P2P-RDO\
    \ included in a P2P-DRO\n      message MUST have the same value as the H flag\
    \ in the P2P-RDO\n      inside the corresponding DIO message.\n   o  Number of\
    \ Routes (N): This field MUST be set to zero on\n      transmission and ignored\
    \ on reception.\n   o  Lifetime (L): This field MUST be set to zero on transmission\
    \ and\n      ignored on reception.\n   o  MaxRank/NH: This field indicates the\
    \ index of the next-hop address\n      in the Address vector.  When a Target generates\
    \ a P2P-DRO message,\n      the NH field is set to n = (Option Length - 2 - (16\
    \ - Compr))/\n      (16 - Compr).\n   o  TargetAddr: This field MUST contain a\
    \ unicast global or unique-\n      local IPv6 address of the Target generating\
    \ the P2P-DRO.\n   o  Address[1..n]: The Address vector MUST contain a complete\
    \ route\n      between the Origin and the Target such that the first element in\n\
    \      the vector contains the IPv6 address of the router next to the\n      Origin\
    \ and the last element contains the IPv6 address of the\n      router next to\
    \ the Target.\n"
- title: 9.  P2P-RPL Route Discovery by Creating a Temporary DAG
  contents:
  - "9.  P2P-RPL Route Discovery by Creating a Temporary DAG\n   This section details\
    \ the P2P-RPL route discovery operation.\n"
- title: 9.1.  Joining a Temporary DAG
  contents:
  - "9.1.  Joining a Temporary DAG\n   All the routers participating in a P2P-RPL\
    \ route discovery, including\n   the Origin and the Target(s), MUST join the temporary\
    \ DAG being\n   created for that purpose.  When a router joins a temporary DAG\n\
    \   advertised by a P2P mode DIO, it MUST maintain its membership in the\n   temporary\
    \ DAG for the duration indicated by the L field inside the\n   P2P-RDO.  The only\
    \ purpose of a temporary DAG's existence is to\n   facilitate the P2P-RPL route\
    \ discovery process.  The temporary DAG\n   MUST NOT be used to route data packets.\
    \  In other words, joining a\n   temporary DAG does not allow a router to provision\
    \ routing table\n   entries listing the router's parents in the temporary DAG\
    \ as the next\n   hops (i.e., the last bullet point in Section 3.2.8 of [RFC6550]\
    \ is\n   not applicable when the DAG is a temporary DAG created for the\n   purpose\
    \ of a P2P-RPL route discovery).\n   Given the nature of a temporary DAG created\
    \ for a P2P-RPL route\n   discovery, this document disallows the solicitation\
    \ of P2P mode DIOs\n   using DODAG Information Solicitation (DIS) messages as\
    \ described in\n   [RFC6550].  A router participating in a P2P-RPL route discovery\
    \ MUST\n   NOT reset its Trickle timer, which controls the transmission of P2P\n\
    \   mode DIOs in response to a multicast DIS.  Also, the router MUST NOT\n   send\
    \ a P2P mode DIO in response to a unicast DIS.  In other words,\n   the rules\
    \ in Section 8.3 of [RFC6550] regarding a router's response\n   to a multicast/unicast\
    \ DIS are not applicable for P2P mode DIOs.\n   A router MUST detach from the\
    \ temporary DAG created for a P2P-RPL\n   route discovery once the duration of\
    \ its membership in the DAG has\n   reached the value indicated by the L field\
    \ inside the P2P-RDO.  After\n   receiving a P2P-DRO with the Stop flag set to\
    \ one, a router SHOULD\n   NOT send or process any more DIOs for this temporary\
    \ DAG and SHOULD\n   also cancel any pending DIO transmissions.\n"
- title: 9.2.  Trickle Operation for P2P Mode DIOs
  contents:
  - "9.2.  Trickle Operation for P2P Mode DIOs\n   A RPL router uses a Trickle timer\
    \ [RFC6206] to control DIO\n   transmissions.  The Trickle control of DIO transmissions\
    \ provides\n   quick resolution of any \"inconsistency\" while avoiding redundant\
    \ DIO\n   transmissions.  The Trickle algorithm also imparts protection against\n\
    \   loss of DIOs due to inherent lack of reliability in LLNs.  When\n   controlling\
    \ the transmissions of a P2P mode DIO, a Trickle timer\n   SHOULD follow the following\
    \ rules:\n   o  The receipt of a P2P mode DIO that allows the router to advertise\n\
    \      a better route (in terms of the routing metrics and the OF in use)\n  \
    \    than before is considered \"inconsistent\" and hence resets the\n      Trickle\
    \ timer.  Note that the first receipt of a P2P mode DIO\n      advertising a particular\
    \ temporary DAG is always considered an\n      \"inconsistent\" event.\n   o \
    \ The receipt of a P2P mode DIO from a parent in the temporary DAG\n      is considered\
    \ neither \"consistent\" nor \"inconsistent\" if it does\n      not allow the\
    \ router to advertise a better route than before.\n      Thus, the receipt of\
    \ such DIOs has no impact on the Trickle\n      operation.  Note that this document\
    \ does not impose any\n      requirements on how a router might choose its parents\
    \ in the\n      temporary DAG.\n   o  The receipt of a P2P mode DIO is considered\
    \ \"consistent\" if the\n      source of the DIO is not a parent in the temporary\
    \ DAG and either\n      of the following conditions is true:\n      *  The DIO\
    \ advertises a better route than the router but does not\n         allow the router\
    \ to advertise a better route itself; or\n      *  The DIO advertises a route\
    \ as good as the route (to be)\n         advertised by the router.\n      Note\
    \ that the Trickle algorithm's DIO suppression rules are in\n      effect at all\
    \ times.  Hence, a P2P-RPL router may suppress a DIO\n      transmission even\
    \ if it has not made any DIO transmissions yet.\n   o  The receipt of a P2P mode\
    \ DIO that advertises a worse route than\n      what the router advertises (or\
    \ would advertise when it gets a\n      chance to generate its DIO) is considered\
    \ neither \"consistent\" nor\n      \"inconsistent\", i.e., the receipt of such\
    \ a DIO has no impact on\n      the Trickle operation.\n   o  The Imin parameter\
    \ SHOULD be set taking into account the\n      connectivity within the network.\
    \  For highly connected networks, a\n      small Imin value (on the order of the\
    \ typical transmission delay\n      for a DIO) may lead to congestion in the network\
    \ as a large number\n      of routers reset their Trickle timers in response to\
    \ the first\n      receipt of a DIO from the Origin.  These routers would generate\n\
    \      their DIOs within the Imin interval and cause additional routers\n    \
    \  to reset their Trickle timers and generate more DIOs.  Thus, for\n      highly\
    \ connected networks, the Imin parameter SHOULD be set to a\n      value at least\
    \ one order of magnitude larger than the typical\n      transmission delay for\
    \ a DIO.  For sparsely connected networks,\n      the Imin parameter can be set\
    \ to a value that is a small multiple\n      of the typical transmission delay\
    \ for a DIO.  Note that the Imin\n      value has a direct impact on the time\
    \ required for a P2P-RPL route\n      discovery to complete.  In general, the\
    \ time required for a\n      P2P-RPL route discovery would increase approximately\
    \ linearly with\n      the value of the Imin parameter.  Since the route discovery\
    \ must\n      complete while the Origin still belongs to the temporary DAG\n \
    \     created for that purpose, the Origin should set the time duration\n    \
    \  for which a router maintains its membership in the temporary DAG\n      (indicated\
    \ by the L field inside the P2P-RDO) to a large enough\n      value, taking into\
    \ account the Imin value as well as the expected\n      distance (in terms of\
    \ hops and/or ETX) to the Target(s).\n   o  The Imax parameter SHOULD be set to\
    \ a large value (several orders\n      of magnitude higher than the Imin value)\
    \ and is unlikely to be\n      critical for P2P-RPL operation.  This is because\
    \ the first receipt\n      of a P2P mode DIO for a particular temporary DAG is\
    \ considered an\n      inconsistent event and would lead to the resetting of the\
    \ Trickle\n      timer duration to the Imin value.  Given the temporary nature\
    \ of\n      the DAGs used in P2P-RPL, the Trickle timer may not get a chance\n\
    \      to increase much.\n   o  The recommended value of redundancy constant \"\
    k\" is 1.  With this\n      value of \"k\", a DIO transmission will be suppressed\
    \ if the router\n      receives even a single \"consistent\" DIO during a timer\
    \ interval.\n      This setting for the redundancy constant is designed to reduce\
    \ the\n      number of messages generated during a route discovery process and\n\
    \      is suitable for environments with low or moderate packet loss\n      rates.\
    \  However, this setting may result in an increase in the\n      time required\
    \ for the route discovery process to complete.  A\n      higher value for the\
    \ redundancy constant may be more suitable in\n      *  environments with high\
    \ packet loss rates; or\n      *  deployments where the time required for the\
    \ route discovery\n         process to complete needs to be as small as possible;\
    \ or\n      *  deployments where specific destinations are reachable only\n  \
    \       through specific Intermediate Routers (and hence these\n         Intermediate\
    \ Routers should not suppress their DIOs).\n      A particular deployment should\
    \ take into account the above-\n      mentioned factors when deciding on the value\
    \ of the redundancy\n      constant.\n   Individual P2P-RPL deployments are encouraged\
    \ to share their\n   experience with these rules to help guide the development\
    \ of a\n   Standards Track version of the protocol.  Applicability Statements\n\
    \   that specify the use of P2P-RPL MUST provide guidance for setting\n   Trickle\
    \ parameters, particularly Imin and the redundancy constant.\n"
- title: 9.3.  Processing a P2P Mode DIO
  contents:
  - "9.3.  Processing a P2P Mode DIO\n   The rules for DIO processing and transmission\
    \ as described in\n   Section 8 of RPL [RFC6550] apply to P2P mode DIOs as well,\
    \ except as\n   modified in this document.  In particular, in accordance with\n\
    \   Section 8.2.3 of RPL [RFC6550], a received P2P mode DIO MUST be\n   discarded\
    \ if it is malformed, according to the rules specified in\n   this document and\
    \ in [RFC6550].\n   The following rules for processing a received P2P mode DIO\
    \ apply to\n   both Intermediate Routers and the Target.\n   A router SHOULD discard\
    \ a received P2P mode DIO with no further\n   processing if it does not have bidirectional\
    \ reachability with the\n   neighbor that generated the received DIO.  Note that\
    \ bidirectional\n   reachability does not mean that the link must have the same\
    \ values\n   for a routing metric in both directions.  A router SHOULD calculate\n\
    \   the values of the link-level routing metrics included in the received\n  \
    \ DIO, taking into account the metric's value in both Forward and\n   Reverse\
    \ directions.  Bidirectional reachability along a discovered\n   route allows\
    \ the Target to use this route to reach the Origin.  In\n   particular, the P2P-DRO\
    \ messages travel from the Target to the Origin\n   along a discovered route.\n\
    \   A router MUST discard a received P2P mode DIO with no further\n   processing:\n\
    \   o  if the DIO advertises INFINITE_RANK as defined in Section 17\n      of\
    \ [RFC6550]\n   o  if the integer part of the rank advertised in the DIO equals\
    \ or\n      exceeds the MaxRank limit listed in the P2P Route Discovery Option\n\
    \   o  if the routing metric values do not satisfy one or more of the\n      mandatory\
    \ route constraints listed in the DIO or if the router\n      cannot evaluate\
    \ the mandatory route constraints, e.g., if the\n      router does not support\
    \ the metrics used in the constraints\n   o  if the router previously received\
    \ a P2P-DRO message with the same\n      RPLInstanceID and DODAGID as the received\
    \ DIO and with the Stop\n      flag set to one\n   The router MUST check the Target\
    \ addresses listed in the P2P-RDO and\n   any RPL Target options included in the\
    \ received DIO.  If one of its\n   IPv6 addresses is listed as a Target address\
    \ or if it belongs to the\n   multicast group specified as one of the Target addresses,\
    \ the router\n   considers itself a Target and processes the received DIO as specified\n\
    \   in Section 9.5.  Otherwise, the router considers itself an\n   Intermediate\
    \ Router and processes the received DIO as specified in\n   Section 9.4.\n"
- title: 9.4.  Additional Processing of a P2P Mode DIO at an Intermediate Router
  contents:
  - "9.4.  Additional Processing of a P2P Mode DIO at an Intermediate Router\n   An\
    \ Intermediate Router MUST discard a received P2P mode DIO with no\n   further\
    \ processing\n   o  if the DIO is received on an Ingress-only Interface; or\n\
    \   o  if the receiving interface does not have a global or unique-local\n   \
    \   IPv6 address configured with the address prefix implied by the\n      Compr\
    \ field in the P2P-RDO inside the received DIO; or\n   o  if the router cannot\
    \ uniquely identify the address prefix implied\n      by the Compr field in the\
    \ P2P-RDO (this might happen if the\n      receiving interface has multiple global/unique-local\
    \ IPv6\n      addresses, each configured with a different address prefix); or\n\
    \   o  if adding its IPv6 address to the route in the Address vector\n      inside\
    \ the P2P-RDO would result in the route containing multiple\n      addresses belonging\
    \ to this router.\n   On receiving a P2P mode DIO, an Intermediate Router MUST\
    \ do the\n   following.  The router MUST determine whether this DIO advertises\
    \ a\n   better route than the router itself and whether the receipt of the\n \
    \  DIO would allow the router to advertise a better route than before.\n   Accordingly,\
    \ the router SHOULD consider this DIO as\n   consistent/inconsistent from the\
    \ Trickle perspective, as described in\n   Section 9.2.  Note that the route comparison\
    \ in a P2P-RPL route\n   discovery is performed using the parent selection rules\
    \ of the OF in\n   use as specified in Section 14 of RPL [RFC6550].  If the received\
    \ DIO\n   would allow the router to advertise a better route, the router MUST\n\
    \   add a unicast IPv6 address of the receiving interface (after eliding\n   Compr\
    \ prefix octets) to the route in the Address vector inside the\n   P2P-RDO and\
    \ remember this route for inclusion in its future DIOs.\n   When an Intermediate\
    \ Router adds an IPv6 address to a route, it MUST\n   ensure that\n   o  the IPv6\
    \ address is a unicast global or unique-local IPv6 address\n      assigned to\
    \ the interface on which the DIO containing the route\n      was received;\n \
    \  o  the IPv6 address was configured with the address prefix implied by\n   \
    \   the Compr field in the P2P-RDO inside the received DIO.\n   To improve the\
    \ diversity of the routes being discovered, an\n   Intermediate Router SHOULD\
    \ keep track of multiple routes (as long as\n   all these routes are the best\
    \ seen so far), one of which SHOULD be\n   selected in a uniform random manner\
    \ for inclusion in the P2P-RDO\n   inside the router's next DIO.  Note that the\
    \ route accumulation in a\n   P2P mode DIO MUST take place even if the Origin\
    \ does not want any\n   P2P-DRO messages to be generated (i.e., the R flag inside\
    \ the P2P-RDO\n   is set to zero).  This is because the Target may still be able\
    \ to use\n   the accumulated route as a Source Route to reach the Origin.\n"
- title: 9.5.  Additional Processing of a P2P Mode DIO at the Target
  contents:
  - "9.5.  Additional Processing of a P2P Mode DIO at the Target\n   The Target MAY\
    \ remember the discovered route contained in the P2P-RDO\n   in the received DIO\
    \ for use as a Source Route to reach the Origin.\n   The lifetime of this Source\
    \ Route is specified by the Default\n   Lifetime and Lifetime Unit parameters\
    \ inside the DODAG Configuration\n   Option currently in effect.  This lifetime\
    \ can be extended (or\n   shortened) appropriately, following a hint from an upper-layer\n\
    \   protocol.\n   If the Reply flag inside the P2P-RDO in the received DIO is\
    \ set to\n   one, the Target MUST select one or more discovered routes and send\n\
    \   one or more P2P-DRO messages, carrying one discovered route each,\n   back\
    \ to the Origin.  If the H flag inside the P2P-RDO is set to one,\n   the Target\
    \ needs to select one route and send a P2P-DRO message along\n   this route back\
    \ to the Origin.  As this P2P-DRO message travels back\n   to the Origin, the\
    \ routers on the path establish a hop-by-hop routing\n   state, thereby establishing\
    \ a Hop-by-hop Route in the Forward\n   direction.  If the H flag is set to zero,\
    \ the number of Source Routes\n   to be selected (and the number of P2P-DRO messages\
    \ to be sent back)\n   is given by one plus the value of the N field in the P2P-RDO.\
    \  The\n   Target may select the discovered route inside the received DIO as one\n\
    \   or more of the routes that would be carried inside a P2P-DRO message\n   back\
    \ to the Origin.  This document does not prescribe a particular\n   method for\
    \ the Target to select the routes.  Example methods include\n   selecting each\
    \ route that meets the specified routing constraints\n   until the desired number\
    \ of routes has been selected, or selecting\n   the best routes discovered over\
    \ a certain time period.  If multiple\n   routes are to be selected, the Target\
    \ SHOULD avoid selecting routes\n   that have large segments in common.\n   If\
    \ the Target selects the route contained in the P2P-RDO in the\n   received DIO,\
    \ it sends a P2P-DRO message back to the Origin\n   (identified by the DODAGID\
    \ field in the DIO).  The P2P-DRO message\n   MUST include a P2P-RDO that contains\
    \ the selected route inside the\n   Address vector.  Various fields inside the\
    \ P2P-RDO MUST be set as\n   specified in Section 8.2.  The Target MAY set the\
    \ A flag inside the\n   P2P-DRO message to one if it desires the Origin to send\
    \ back a\n   P2P-DRO-ACK message on receiving the P2P-DRO.  In this case, the\n\
    \   Target waits for the duration of P2P_DRO_ACK_WAIT_TIME for the\n   P2P-DRO-ACK\
    \ message to arrive.  Failure to receive the P2P-DRO-ACK\n   message within this\
    \ time duration causes the Target to retransmit the\n   P2P-DRO message.  The\
    \ Target MAY retransmit the P2P-DRO message in\n   this fashion up to MAX_P2P_DRO_RETRANSMISSIONS\
    \ times.  Both\n   P2P_DRO_ACK_WAIT_TIME and MAX_P2P_DRO_RETRANSMISSIONS are\n\
    \   configurable parameters to be chosen based on the characteristics of\n   individual\
    \ deployments.  Note that all P2P-DRO transmissions and\n   retransmissions MUST\
    \ take place while the Target is still a part of\n   the temporary DAG created\
    \ for the route discovery.  A Target MUST NOT\n   transmit a P2P-DRO if it no\
    \ longer belongs to this DAG.\n   The Target MAY set the Stop flag inside the\
    \ P2P-DRO message to one if\n   o  this router is the only Target specified in\
    \ the corresponding DIO,\n      i.e., the corresponding DIO specified a unicast\
    \ address of the\n      router as the TargetAddr inside the P2P-RDO with no additional\n\
    \      Targets specified via RPL Target options; and\n   o  the Target has already\
    \ selected the desired number of routes.\n   The Target MAY include a Metric Container\
    \ option in the P2P-DRO\n   message.  This Metric Container contains the end-to-end\
    \ routing\n   metric values for the route specified in the P2P-RDO.  The Target\n\
    \   MUST transmit the P2P-DRO message via a link-local multicast.\n   A Target\
    \ MUST NOT forward a P2P mode DIO any further if no other\n   Targets are to be\
    \ discovered, i.e., if a unicast IPv6 address (of\n   this Target) is specified\
    \ as the TargetAddr inside the P2P-RDO and no\n   additional Targets are specified\
    \ via RPL Target options inside the\n   DIOs for this route discovery.  Otherwise,\
    \ the Target MUST generate\n   DIOs for this route discovery as an Intermediate\
    \ Router would.\n"
- title: 9.6.  Processing a P2P-DRO at an Intermediate Router
  contents:
  - "9.6.  Processing a P2P-DRO at an Intermediate Router\n   If the DODAGID field\
    \ in the received P2P-DRO does not list a router's\n   own IPv6 address, the router\
    \ considers itself an Intermediate Router\n   and MUST process the received message\
    \ in the following manner:\n   o  The router MUST discard the received P2P-DRO\
    \ with no further\n      processing if it does not belong to the temporary DAG\
    \ identified\n      by the RPLInstanceID and the DODAGID fields in the P2P-DRO.\n\
    \   o  If the Stop flag inside the received P2P-DRO is set to one, the\n     \
    \ router SHOULD NOT send or receive any more DIOs for this temporary\n      DAG\
    \ and SHOULD cancel any pending DIO transmissions.\n   o  The router MUST ignore\
    \ any Metric Container options contained in\n      the P2P-DRO message.\n   o\
    \  If an Address[NH] element inside the P2P-RDO lists the router's\n      own\
    \ unicast IPv6 address, the router is a part of the route\n      carried in the\
    \ P2P-RDO.  In this case, the router MUST do the\n      following:\n      *  To\
    \ prevent loops, the router MUST discard the P2P-DRO message\n         with no\
    \ further processing if the Address vector in the P2P-RDO\n         includes multiple\
    \ IPv6 addresses assigned to the router's\n         interfaces.\n      *  If the\
    \ H flag inside the P2P-RDO is set to one, the router MUST\n         store the\
    \ state for the Forward Hop-by-hop Route carried inside\n         the P2P-RDO.\
    \  This state consists of:\n         +  the RPLInstanceID and the DODAGID fields\
    \ of the P2P-DRO\n         +  the route's destination, the Target (identified\
    \ by the\n            TargetAddr field inside the P2P-RDO)\n         +  the IPv6\
    \ address of the next hop, Address[NH+1] (unless the\n            NH value equals\
    \ the number of elements in the Address\n            vector, in which case the\
    \ Target itself is the next hop)\n         This Hop-by-hop routing state MUST\
    \ expire at the end of the\n         lifetime specified by the Default Lifetime\
    \ and Lifetime Unit\n         parameters inside the DODAG Configuration Option\
    \ used in P2P\n         mode DIOs for this route discovery.\n      *  If the router\
    \ already maintains a Hop-by-hop state listing the\n         Target as the destination\
    \ and carrying the same RPLInstanceID\n         and DODAGID fields as the received\
    \ P2P-DRO, and the next-hop\n         information in the state does not match\
    \ the next hop indicated\n         in the received P2P-DRO, the router MUST discard\
    \ the P2P-DRO\n         message with no further processing.  Note that this situation\n\
    \         would occur in the following two cases:\n         +  When the route\
    \ listed in the Address vector inside the\n            P2P-RDO contains a previously\
    \ undetected loop.  In this\n            case, this rule causes the P2P-DRO messages\
    \ to be discarded.\n         +  When a Hop-by-hop Route between the Origin and\
    \ the Target,\n            previously established using the same RPLInstanceID\
    \ and\n            DODAGID as the route currently being established, still\n \
    \           exists and at least partially overlaps the route currently\n     \
    \       being established.\n      *  The router MUST decrement the NH field inside\
    \ the P2P-RDO and\n         send the P2P-DRO message further via link-local multicast.\n"
- title: 9.7.  Processing a P2P-DRO at the Origin
  contents:
  - "9.7.  Processing a P2P-DRO at the Origin\n   When a router receives a P2P-DRO\
    \ message that lists its IPv6 address\n   in the DODAGID field, the router recognizes\
    \ itself as the Origin for\n   the corresponding P2P-RPL route discovery, notes\
    \ the Target that\n   originated this message (from the TargetAddr field inside\
    \ the\n   P2P-RDO), and processes the message in the following manner:\n   o \
    \ The Origin MUST discard the received P2P-DRO with no further\n      processing\
    \ if it no longer belongs to the temporary DAG identified\n      by the RPLInstanceID\
    \ and the DODAGID fields in the P2P-DRO.\n   o  If the Stop flag inside the received\
    \ P2P-DRO is set to one, the\n      Origin SHOULD NOT generate any more DIOs for\
    \ this temporary DAG\n      and SHOULD cancel any pending DIO transmissions.\n\
    \   o  If the P2P-RDO inside the P2P-DRO has the H flag set to zero, the\n   \
    \   Address vector inside the P2P-RDO contains a Source Route to this\n      Target.\
    \  The Origin MUST set the lifetime of this Source Route to\n      the value specified\
    \ by the Default Lifetime and Lifetime Unit\n      parameters inside the DODAG\
    \ Configuration Option in the P2P mode\n      DIOs used for this route discovery.\
    \  This lifetime could be\n      extended (or shortened) appropriately, following\
    \ a hint from an\n      upper-layer protocol.\n   o  If the P2P-RDO inside the\
    \ P2P-DRO has the H flag set to one, the\n      P2P-DRO message is establishing\
    \ a Hop-by-hop Route to this Target,\n      and the Origin MUST store in its memory\
    \ the state for this\n      Hop-by-hop Route in the manner described in Section\
    \ 9.6.  This\n      Hop-by-hop routing state MUST expire at the end of the lifetime\n\
    \      specified by the Default Lifetime and Lifetime Unit parameters\n      inside\
    \ the DODAG Configuration Option used in P2P mode DIOs for\n      this route discovery.\
    \  A Standards Track version of P2P-RPL may\n      consider specifying a signaling\
    \ mechanism that will allow the\n      Origin to extend (or shorten) the lifetime\
    \ of a P2P-RPL Hop-by-hop\n      Route, following a suitable hint from an upper-layer\
    \ protocol.\n   o  If the received P2P-DRO message contains one or more Metric\n\
    \      Container options, the Origin MAY store the values of the routing\n   \
    \   metrics associated with the discovered route in its memory.  This\n      information\
    \ may be useful in formulating the constraints for any\n      future P2P-RPL route\
    \ discovery to this Target.\n   o  If the A flag is set to one in the received\
    \ P2P-DRO message, the\n      Origin MUST generate a P2P-DRO-ACK message as described\
    \ in\n      Section 10 and unicast the message to the Target.  The Origin MAY\n\
    \      use the route just discovered to send the P2P-DRO-ACK message to\n    \
    \  the Target.  Section 12 describes how a packet may be forwarded\n      along\
    \ a Source/Hop-by-hop Route discovered using P2P-RPL.\n"
- title: 10.  The P2P Discovery Reply Object Acknowledgement (P2P-DRO-ACK)
  contents:
  - "10.  The P2P Discovery Reply Object Acknowledgement (P2P-DRO-ACK)\n       0 \
    \                  1                   2                   3\n       0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | RPLInstanceID |    Version    |Seq|        Reserved           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      |   \
    \                      DODAGID                               |\n      |      \
    \                                                         |\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \          Figure 3: Format of the Base P2P Discovery Reply Object\n         \
    \              Acknowledgement (P2P-DRO-ACK)\n   A P2P-DRO message may fail to\
    \ reach the Origin due to a number of\n   reasons.  Unlike the DIO messages, which\
    \ benefit from Trickle-\n   controlled retransmissions, the P2P-DRO messages are\
    \ prone to loss\n   due to unreliable packet transmission in LLNs.  Since a P2P-DRO\n\
    \   message travels via link-local multicast, it cannot use link-level\n   acknowledgements\
    \ to improve the reliability of its transmission.\n   Also, an Intermediate Router\
    \ may drop the P2P-DRO message (e.g.,\n   because of its inability to store the\
    \ state for the Hop-by-hop Route\n   that the P2P-DRO is establishing).  To protect\
    \ against the potential\n   failure of a P2P-DRO message to reach the Origin,\
    \ the Target MAY\n   request that the Origin send back a P2P-DRO Acknowledgement\n\
    \   (P2P-DRO-ACK) message on receiving a P2P-DRO message.  Failure to\n   receive\
    \ such an acknowledgement within the P2P_DRO_ACK_WAIT_TIME\n   interval of sending\
    \ the P2P-DRO message forces the Target to resend\n   the message (as described\
    \ in Section 9.5).\n   This section defines two new RPL control message types:\
    \ the P2P-DRO\n   Acknowledgement (P2P-DRO-ACK), with code 0x05; and the Secure\n\
    \   P2P-DRO-ACK, with code 0x85.  A P2P-DRO-ACK message MUST travel as a\n   unicast\
    \ message from the Origin to the Target.  The IPv6 source and\n   destination\
    \ addresses used in a P2P-DRO-ACK message MUST be global or\n   unique-local.\
    \  The format of a base P2P-DRO-ACK message is shown in\n   Figure 3.  Various\
    \ fields in a P2P-DRO-ACK message MUST have the same\n   values as the corresponding\
    \ fields in the P2P-DRO message.  The field\n   marked as \"Reserved\" MUST be\
    \ set to zero on transmission and MUST be\n   ignored on reception.  A Secure\
    \ P2P-DRO-ACK message follows the\n   format shown in Figure 7 of [RFC6550], where\
    \ the base format is the\n   same as the base P2P-DRO-ACK shown in Figure 3.\n"
- title: 11.  Secure P2P-RPL Operation
  contents:
  - "11.  Secure P2P-RPL Operation\n   Each RPL control message type, including those\
    \ defined in this\n   document, has a secure version.  A secure RPL control message\
    \ is\n   identified by the value 1 in the most significant bit of the Code\n \
    \  field.  Each secure RPL control message contains a Security section\n   (see\
    \ Figures 7 and 8 of [RFC6550]) whose contents are described in\n   Section 6.1\
    \ of [RFC6550].  Sections 6.1, 10, and 19 of [RFC6550]\n   describe core RPL's\
    \ security apparatus.  These sections are\n   applicable to P2P-RPL's secure operation\
    \ as well, except as\n   constrained in this section.\n   Core RPL allows a router\
    \ to decide locally on a per-packet basis\n   whether to use security and, if\
    \ yes, what Security Configuration (see\n   definition in Section 3) to use (the\
    \ only exception being the\n   requirement to send a Secure DIO in response to\
    \ a Secure DIS; see\n   Section 10.2 of [RFC6550]).  In contrast, this document\
    \ requires that\n   routers participating in a P2P-RPL route discovery follow\
    \ the\n   Origin's lead regarding security.  The Origin decides whether to use\n\
    \   security, and the particular Security Configuration to be used for\n   this\
    \ purpose.  All the routers participating in this route discovery\n   MUST generate\
    \ only secure control messages if the Origin so decides\n   and MUST use for this\
    \ purpose the Security Configuration that the\n   Origin chose.  The Origin MUST\
    \ NOT set the \"Key Identifier Mode\"\n   field inside the chosen Security Configuration\
    \ to value 1, since this\n   setting indicates the use of a per-pair key, which\
    \ is not suitable\n   for securing messages that travel by (link-local) multicast\
    \ (e.g.,\n   DIOs) or that travel over multiple hops (e.g., P2P-DROs).  The Origin\n\
    \   MUST use the chosen Security Configuration to secure all the control\n   messages\
    \ (DIOs and P2P-DRO-ACKs) it generates.\n   A router MUST NOT join the temporary\
    \ DAG being created for a P2P-RPL\n   route discovery if:\n   o  it receives both\
    \ secure and unsecure DIOs or Secure DIOs with\n      different Security Configurations\
    \ pertaining to this route\n      discovery (i.e., referring to the same RPLInstanceID\
    \ and DODAGID\n      combination) prior to joining; or\n   o  it cannot use the\
    \ Security Configuration found in the Secure DIOs\n      pertaining to this route\
    \ discovery.\n   When a router (an Intermediate Router or a Target) joins a temporary\n\
    \   DAG being created using Secure DIOs, it MUST remember the common\n   Security\
    \ Configuration used in the received Secure DIOs and MUST use\n   this configuration\
    \ to secure all the control messages (DIOs and\n   P2P-DROs) it generates.\n \
    \  If an Intermediate Router (or a Target) encounters a control message\n   (a\
    \ DIO or a P2P-DRO or a P2P-DRO-ACK) pertaining to this route\n   discovery that\
    \ is either not secure or does not follow the Security\n   Configuration the router\
    \ remembers for this route discovery, the\n   router MUST enter the \"lock down\"\
    \ mode for the remainder of its stay\n   in this temporary DAG.  An Intermediate\
    \ Router (or a Target) in the\n   \"lock down\" mode MUST NOT generate or process\
    \ any control messages\n   (irrespective of the Security Configuration used) pertaining\
    \ to this\n   route discovery.  If the Origin receives a control message (a\n\
    \   P2P-DRO) that does not follow the Security Configuration the Origin\n   has\
    \ chosen for this route discovery, it MUST discard the received\n   message with\
    \ no further processing.\n"
- title: 12.  Packet Forwarding along a Route Discovered Using P2P-RPL
  contents:
  - "12.  Packet Forwarding along a Route Discovered Using P2P-RPL\n   An Origin uses\
    \ the Source Routing Header (SRH) [RFC6554] to send a\n   packet along a Source\
    \ Route discovered using P2P-RPL.\n   Travel along a Hop-by-hop Route, established\
    \ using P2P-RPL, requires\n   specifying the RPLInstanceID and the DODAGID (of\
    \ the temporary DAG\n   used for the route discovery) to identify the route. \
    \ This is because\n   a P2P-RPL route discovery does not use globally unique RPLInstanceID\n\
    \   values, and hence both the RPLInstanceID (a local value assigned by\n   the\
    \ Origin) and the DODAGID (an IPv6 address of the Origin) are\n   required to\
    \ uniquely identify a P2P-RPL Hop-by-hop Route to a\n   particular destination.\n\
    \   An Origin includes a RPL option [RFC6553] inside the IPv6 Hop-by-Hop\n   Options\
    \ header of a packet to send it along a Hop-by-hop Route\n   established using\
    \ P2P-RPL.  For this purpose, the Origin MUST set the\n   DODAGID of the temporary\
    \ DAG used for the route discovery as the\n   source IPv6 address of the packet.\
    \  Further, the Origin MUST specify\n   inside the RPL option the RPLInstanceID\
    \ of the temporary DAG used for\n   the route discovery and set the O flag inside\
    \ the RPL option to one.\n   On receiving this packet, an Intermediate Router\
    \ checks the O flag\n   and correctly infers the source IPv6 address of the packet\
    \ as the\n   DODAGID of the Hop-by-hop Route.  The router then uses the DODAGID,\n\
    \   the RPLInstanceID, and the destination address to identify the\n   routing\
    \ state to be used to forward the packet further.\n"
- title: 13.  Interoperability with Core RPL
  contents:
  - "13.  Interoperability with Core RPL\n   This section describes how RPL routers\
    \ that implement P2P-RPL\n   interact with RPL routers that do not.  In general,\
    \ P2P-RPL operation\n   does not affect core RPL operation, and vice versa.  However,\
    \ core\n   RPL does allow a router to join a DAG as a leaf node even if it does\n\
    \   not understand the Mode of Operation (MOP) used in the DAG.  Thus, a\n   RPL\
    \ router that does not implement P2P-RPL may conceivably join a\n   temporary\
    \ DAG being created for a P2P-RPL route discovery as a leaf\n   node and maintain\
    \ its membership even though the DAG no longer\n   exists.  This may impose a\
    \ drain on the router's memory.  However,\n   such RPL-only leaf nodes do not\
    \ interfere with P2P-RPL route\n   discovery, since a leaf node may only generate\
    \ a DIO advertising an\n   INFINITE_RANK and all routers implementing P2P-RPL\
    \ are required to\n   discard such DIOs.  Note that core RPL does not require\
    \ that a router\n   join a DAG whose MOP it does not understand.  Moreover, RPL\
    \ routers\n   in a particular deployment may have strict restrictions on the DAGs\n\
    \   they may join, thereby mitigating the problem.\n   The P2P-RPL mechanism described\
    \ in this document works best when all\n   the RPL routers in the LLN implement\
    \ P2P-RPL.  In general, the\n   ability to discover routes, as well as the quality\
    \ of discovered\n   routes, would deteriorate with the fraction of RPL routers\
    \ that\n   implement P2P-RPL.\n"
- title: 14.  Security Considerations
  contents:
  - "14.  Security Considerations\n   In general, the security considerations for\
    \ the operation of P2P-RPL\n   are similar to those for the operation of RPL (as\
    \ described in\n   Section 19 of the RPL specification [RFC6550]).  Sections 6.1\
    \ and 10\n   of [RFC6550] describe RPL's security framework, which provides data\n\
    \   confidentiality, authentication, replay protection, and delay\n   protection\
    \ services.  This security framework can also be used in\n   P2P-RPL after taking\
    \ into account the constraints specified in\n   Section 11.  P2P-RPL requires\
    \ that all routers participating in a\n   secure route discovery use the Security\
    \ Configuration chosen by the\n   Origin.  The intention is to avoid compromising\
    \ the overall security\n   of a route discovery due to some routers using a weaker\
    \ Security\n   Configuration.  With the \"lock down\" mechanism as described in\n\
    \   Section 11 in effect, it is unlikely that an Origin would accept a\n   route\
    \ discovered under a Security Configuration other than the one it\n   intended.\
    \  Any attempt to use a different Security Configuration\n   (than the one the\
    \ Origin intended) is likely to result, in the worst\n   case, in the failure\
    \ of the route discovery process.  In the best-\n   case scenario, any such attempt\
    \ by a rogue router would result in its\n   neighbors entering the \"lock down\"\
    \ mode and acting as firewalls to\n   allow the route discovery to proceed in\
    \ the remaining network.\n   The RPL specification [RFC6550] describes three modes\
    \ of security:\n   unsecured, preinstalled, and authenticated.  In the unsecured\
    \ mode,\n   secure control messages are not used, and the only available security\n\
    \   is the security provided by the link-layer protocols.  In the\n   preinstalled\
    \ mode, all the nodes use a preinstalled group key to join\n   a secure DAG as\
    \ the \"routers\" or \"hosts\", where the term \"router\"\n   means a node that\
    \ is capable of forwarding packets received from its\n   parents or children in\
    \ the DAG, and the term \"host\" refers to nodes\n   that cannot function as \"\
    routers\".  In the authenticated mode, the\n   nodes can join a secure DAG as\
    \ \"hosts\" using the preinstalled key but\n   then need to authenticate themselves\
    \ to a key server to obtain the\n   key that will allow them to work as \"routers\"\
    .  The temporary DAG\n   created for a P2P-RPL discovery cannot be used for routing\
    \ packets.\n   Hence, it is not meaningful to say that a node joins this DAG as\
    \ a\n   \"router\" or a \"host\" in the sense defined above.  Hence, in P2P-RPL,\n\
    \   there is no distinction between the preinstalled and authenticated\n   modes.\
    \  A router can join a temporary DAG created for a secure\n   P2P-RPL route discovery\
    \ only if it can support the Security\n   Configuration in use, which also specifies\
    \ the key in use.  It does\n   not matter whether the key is preinstalled or dynamically\
    \ acquired.\n   The router must have the key in use before it can join the DAG\
    \ being\n   created for a secure P2P-RPL route discovery.\n   If a rogue router\
    \ can support the Security Configuration in use (in\n   particular, if it knows\
    \ the key in use), it can join the secure\n   P2P-RPL route discovery and cause\
    \ various types of damage.  Such a\n   rogue router could advertise false information\
    \ in its DIOs in order\n   to include itself in the discovered route(s).  It could\
    \ generate\n   bogus P2P-DRO messages carrying bad routes or maliciously modify\n\
    \   genuine P2P-DRO messages it receives.  A rogue router acting as the\n   Origin\
    \ could launch denial-of-service attacks against the LLN\n   deployment by initiating\
    \ fake P2P-RPL route discoveries; in this type\n   of scenario, RPL's authenticated\
    \ mode of operation, where a node can\n   obtain the key to use for a P2P-RPL\
    \ route discovery only after proper\n   authentication, would be useful.\n   Since\
    \ a P2P-DRO message travels along a Source Route specified inside\n   the message,\
    \ some of the security concerns that led to the\n   deprecation of Type 0 routing\
    \ headers [RFC5095] may apply.  To avoid\n   the possibility of a P2P-DRO message\
    \ traveling in a routing loop,\n   this document requires that each Intermediate\
    \ Router confirm that the\n   Source Route listed inside the message does not\
    \ contain any routing\n   loop involving itself before the router could forward\
    \ the message\n   further.  As specified in Section 9.6, this check involves the\
    \ router\n   making sure that its IPv6 addresses do not appear multiple times\n\
    \   inside the Source Route with one or more other IPv6 addresses in\n   between.\n"
- title: 15.  IANA Considerations
  contents:
  - '15.  IANA Considerations

    '
- title: 15.1.  Additions to Mode of Operation
  contents:
  - "15.1.  Additions to Mode of Operation\n   This document defines a new Mode of\
    \ Operation, entitled \"P2P Route\n   Discovery Mode of Operation\" (see Section\
    \ 6), assigned a value of 4\n   from the \"Mode of Operation\" space [RFC6550].\n\
    \     +-------+---------------------------------------+---------------+\n    \
    \ | Value |              Description              |   Reference   |\n     +-------+---------------------------------------+---------------+\n\
    \     |   4   | P2P Route Discovery Mode of Operation | This document |\n    \
    \ +-------+---------------------------------------+---------------+\n        \
    \                     Mode of Operation\n"
- title: 15.2.  Additions to RPL Control Message Options
  contents:
  - "15.2.  Additions to RPL Control Message Options\n   This document defines a new\
    \ RPL option: \"P2P Route Discovery\" (see\n   Section 7), assigned a value of\
    \ 0x0a from the \"RPL Control Message\n   Options\" space [RFC6550].\n       \
    \        +-------+---------------------+---------------+\n               | Value\
    \ |       Meaning       |   Reference   |\n               +-------+---------------------+---------------+\n\
    \               |  0x0a | P2P Route Discovery | This document |\n            \
    \   +-------+---------------------+---------------+\n                        RPL\
    \ Control Message Options\n"
- title: 15.3.  Additions to RPL Control Codes
  contents:
  - "15.3.  Additions to RPL Control Codes\n   This document defines the following\
    \ new RPL messages:\n   o  \"P2P Discovery Reply Object\" (see Section 8), assigned\
    \ a value of\n      0x04 from the \"RPL Control Codes\" space [RFC6550].\n   o\
    \  \"Secure P2P Discovery Reply Object\" (see Section 8.1), assigned a\n     \
    \ value of 0x84 from the \"RPL Control Codes\" space [RFC6550].\n   o  \"P2P Discovery\
    \ Reply Object Acknowledgement\" (see Section 10),\n      assigned a value of\
    \ 0x05 from the \"RPL Control Codes\"\n      space [RFC6550].\n   o  \"Secure\
    \ P2P Discovery Reply Object Acknowledgement\" (see\n      Section 10), assigned\
    \ a value of 0x85 from the \"RPL Control Codes\"\n      space [RFC6550].\n   +--------+----------------------------------------+-----------------+\n\
    \   |  Code  |              Description               |    Reference    |\n  \
    \ +--------+----------------------------------------+-----------------+\n   |\
    \  0x04  |       P2P Discovery Reply Object       |  This document  |\n   |  0x84\
    \  |   Secure P2P Discovery Reply Object    |  This document  |\n   |  0x05  |\
    \       P2P Discovery Reply Object       |  This document  |\n   |        |  \
    \          Acknowledgement             |                 |\n   |  0x85  |   Secure\
    \ P2P Discovery Reply Object    |  This document  |\n   |        |           \
    \ Acknowledgement             |                 |\n   +--------+----------------------------------------+-----------------+\n\
    \                             RPL Control Codes\n"
- title: 16.  Known Issues and Future Work
  contents:
  - "16.  Known Issues and Future Work\n   This document is presented as an Experimental\
    \ specification to\n   facilitate P2P-RPL's deployment in LLN scenarios where\
    \ reactive P2P\n   route discovery is considered useful or necessary.  It is anticipated\n\
    \   that, once sufficient operational experience has been gained, this\n   specification\
    \ will be revised to progress it on to the Standards\n   Track.  Experience reports\
    \ regarding P2P-RPL implementation and\n   deployment are encouraged, particularly\
    \ with respect to:\n   o  Secure P2P-RPL operation (Section 11);\n   o  Rules\
    \ governing Trickle operation (Section 9.2);\n   o  Values in the default DODAG\
    \ Configuration Option (Section 6.1);\n   o  The RPLInstanceID reuse policy (Section\
    \ 6.1);\n   o  Utility and implementation complexity of allowing multiple Target\n\
    \      addresses in a P2P-RPL route discovery.\n"
- title: 17.  Acknowledgements
  contents:
  - "17.  Acknowledgements\n   The authors gratefully acknowledge the contributions\
    \ of the following\n   individuals (in alphabetical order) in the development\
    \ of this\n   document: Dominique Barthel, Jakob Buron, Cedric Chauvenet, Thomas\n\
    \   Clausen, Robert Cragie, Ralph Droms, Adrian Farrel, Stephen Farrell,\n   Brian\
    \ Haberman, Ted Humpal, Richard Kelsey, Phil Levis, Charles\n   Perkins, Joseph\
    \ Reddy, Michael Richardson, Zach Shelby, Martin\n   Stiemerling, Pascal Thubert,\
    \ Hristo Valev, and JP Vasseur.\n"
- title: 18.  References
  contents:
  - '18.  References

    '
- title: 18.1.  Normative References
  contents:
  - "18.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC6206]  Levis, P., Clausen, T., Hui, J., Gnawali, O., and J. Ko,\n\
    \              \"The Trickle Algorithm\", RFC 6206, March 2011.\n   [RFC6550]\
    \  Winter, T., Thubert, P., Brandt, A., Hui, J., Kelsey, R.,\n              Levis,\
    \ P., Pister, K., Struik, R., Vasseur, JP., and R.\n              Alexander, \"\
    RPL: IPv6 Routing Protocol for Low-Power and\n              Lossy Networks\",\
    \ RFC 6550, March 2012.\n   [RFC6551]  Vasseur, JP., Kim, M., Pister, K., Dejean,\
    \ N., and D.\n              Barthel, \"Routing Metrics Used for Path Calculation\
    \ in\n              Low-Power and Lossy Networks\", RFC 6551, March 2012.\n  \
    \ [RFC6554]  Hui, J., Vasseur, JP., Culler, D., and V. Manral, \"An IPv6\n   \
    \           Routing Header for Source Routes with the Routing Protocol\n     \
    \         for Low-Power and Lossy Networks (RPL)\", RFC 6554,\n              March\
    \ 2012.\n"
- title: 18.2.  Informative References
  contents:
  - "18.2.  Informative References\n   [RFC5095]  Abley, J., Savola, P., and G. Neville-Neil,\
    \ \"Deprecation\n              of Type 0 Routing Headers in IPv6\", RFC 5095,\n\
    \              December 2007.\n   [RFC5826]  Brandt, A., Buron, J., and G. Porcu,\
    \ \"Home Automation\n              Routing Requirements in Low-Power and Lossy\
    \ Networks\",\n              RFC 5826, April 2010.\n   [RFC5867]  Martocci, J.,\
    \ De Mil, P., Riou, N., and W. Vermeylen,\n              \"Building Automation\
    \ Routing Requirements in Low-Power and\n              Lossy Networks\", RFC 5867,\
    \ June 2010.\n   [RFC6552]  Thubert, P., \"Objective Function Zero for the Routing\n\
    \              Protocol for Low-Power and Lossy Networks (RPL)\",\n          \
    \    RFC 6552, March 2012.\n   [RFC6553]  Hui, J. and JP. Vasseur, \"The Routing\
    \ Protocol for Low-\n              Power and Lossy Networks (RPL) Option for Carrying\
    \ RPL\n              Information in Data-Plane Datagrams\", RFC 6553,\n      \
    \        March 2012.\n   [RFC6998]  Goyal, M., Ed., Baccelli, E., Brandt, A.,\
    \ and J. Martocci,\n              \"A Mechanism to Measure the Routing Metrics\
    \ along a Point-\n              to-Point Route in a Low-Power and Lossy Network\"\
    ,\n              RFC 6998, August 2013.\n   [ROLL-TERMS]\n              Vasseur,\
    \ JP., \"Terminology in Low power And Lossy\n              Networks\", Work in\
    \ Progress, March 2013.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mukul Goyal (editor)\n   University of Wisconsin Milwaukee\n\
    \   3200 N. Cramer St.\n   Milwaukee, WI  53201\n   USA\n   Phone: +1-414-229-5001\n\
    \   EMail: mukul@uwm.edu\n   Emmanuel Baccelli\n   INRIA\n   Phone: +33-169-335-511\n\
    \   EMail: Emmanuel.Baccelli@inria.fr\n   URI:   http://www.emmanuelbaccelli.org/\n\
    \   Matthias Philipp\n   INRIA\n   Phone: +33-169-335-511\n   EMail: matthias-philipp@gmx.de\n\
    \   Anders Brandt\n   Sigma Designs\n   Emdrupvej 26A, 1.\n   Copenhagen, Dk-2100\n\
    \   Denmark\n   Phone: +45-29609501\n   EMail: abr@sdesigns.dk\n   Jerald Martocci\n\
    \   Johnson Controls\n   507 E. Michigan Street\n   Milwaukee, WI  53202\n   USA\n\
    \   Phone: +1-414-524-4010\n   EMail: jerald.p.martocci@jci.com\n"
