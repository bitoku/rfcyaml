- title: __initial_text__
  contents:
  - "                           RTP Payload Format\n   for the Mixed Excitation Linear\
    \ Prediction Enhanced (MELPe) Codec\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the RTP payload format for the Mixed\n \
    \  Excitation Linear Prediction Enhanced (MELPe) speech coder.  MELPe's\n   three\
    \ different speech encoding rates and sample frame sizes are\n   supported.  Comfort\
    \ noise procedures and packet loss concealment are\n   described in detail.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8130.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions ................................................2\n  \
    \ 2. Background ......................................................3\n   3.\
    \ Payload Format ..................................................4\n      3.1.\
    \ MELPe Bitstream Definitions ................................5\n           3.1.1.\
    \ 2400 bps Bitstream Structure ........................6\n           3.1.2. 1200\
    \ bps Bitstream Structure ........................9\n           3.1.3. 600 bps\
    \ Bitstream Structure ........................13\n      3.2. MELPe Comfort Noise\
    \ Bitstream Definition ..................18\n      3.3. Multiple MELPe Frames\
    \ in an RTP Packet ....................20\n      3.4. Congestion Control Considerations\
    \ .........................21\n   4. Payload Format Parameters ......................................22\n\
    \      4.1. Media Type Definitions ....................................22\n  \
    \    4.2. Mapping to SDP ............................................23\n    \
    \  4.3. Declarative SDP Considerations ............................25\n      4.4.\
    \ Offer/Answer SDP Considerations ...........................25\n   5. Discontinuous\
    \ Transmissions ....................................26\n   6. Packet Loss Concealment\
    \ ........................................26\n   7. IANA Considerations ............................................26\n\
    \   8. Security Considerations ........................................27\n  \
    \ 9. References .....................................................27\n    \
    \  9.1. Normative References ......................................27\n      9.2.\
    \ Informative References ....................................29\n   Authors' Addresses\
    \ ................................................30\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes how compressed Mixed Excitation\
    \ Linear\n   Prediction Enhanced (MELPe) speech as produced by the MELPe codec\n\
    \   may be formatted for use as an RTP payload.  Details are provided to\n   packetize\
    \ the three different codec bitrate data frames (2400, 1200,\n   and 600) into\
    \ RTP packets.  The sender may send one or more codec\n   data frames per packet,\
    \ depending on the application scenario or\n   based on transport network conditions,\
    \ bandwidth restrictions, delay\n   requirements, and packet loss tolerance.\n"
- title: 1.1.  Conventions
  contents:
  - "1.1.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [RFC2119].\n   Best current practices for writing an RTP payload format\n\
    \   specification were followed [RFC2736].\n"
- title: 2.  Background
  contents:
  - "2.  Background\n   The MELP speech coder was developed by the US military as\
    \ an upgrade\n   from the LPC-based CELP standard vocoder for low-bitrate\n  \
    \ communications [MELP].  (\"LPC\" stands for \"Linear-Predictive Coding\",\n\
    \   and \"CELP\" stands for \"Code-Excited Linear Prediction\".)  MELP was\n \
    \  further enhanced and subsequently adopted by NATO as MELPe for use by\n   its\
    \ members and Partnership for Peace countries for military and\n   other governmental\
    \ communications [MELPE].  The MELP speech coder\n   algorithm was developed by\
    \ Atlanta Signal Processing (ASPI), Texas\n   Instruments (TI), SignalCom (now\
    \ Microsoft), and Thales\n   Communications, with noise preprocessor contributions\
    \ from AT&T,\n   under contract with NSA/DOD as international NATO Standard\n\
    \   STANAG 4591 [MELPE].\n   Commercial/civilian applications have arisen because\
    \ of the\n   low-bitrate property of MELPe with its (relatively) high\n   intelligibility.\
    \  As such, MELPe is being used in a variety of wired\n   and radio communications\
    \ systems.  Voice over IP (VoIP) / SIP systems\n   need to transport MELPe without\
    \ decoding and re-encoding in order to\n   preserve its intelligibility.  Hence,\
    \ it is desirable and necessary\n   to define the proper payload formatting and\
    \ use conventions of MELPe\n   in RTP payloads.\n   The MELPe codec [MELPE] supports\
    \ three different vocoder bitrates:\n   2400, 1200, and 600 bps.  The basic 2400\
    \ bps bitrate vocoder uses a\n   22.5 ms frame of speech consisting of 180 8000-Hz,\
    \ 16-bit speech\n   samples.  The 1200 and 600 bps bitrate vocoders each use three\
    \ and\n   four 22.5 ms frames of speech, respectively.  These reduced-bitrate\n\
    \   vocoders internally use multiple 2400 bps parameter sets with further\n  \
    \ processing to strategically remove redundancy.  The payload sizes for\n   each\
    \ of the bitrates are 54, 81, and 54 bits for the 2400, 1200, and\n   600 bps\
    \ frames, respectively.  Dynamic bitrate switching is permitted\n   but only if\
    \ supported by both endpoints.\n   The MELPe algorithm distinguishes between voiced\
    \ and unvoiced speech\n   and encodes each differently.  Unvoiced speech can be\
    \ coded with\n   fewer information bits for the same quality.  Forward error\n\
    \   correction (FEC) is applied to the 2400 bps codec unvoiced speech for\n  \
    \ better protection of the subtle differences in signal reconstruction.\n   The\
    \ lower-bitrate coders do not allocate any bits for FEC and rely on\n   strong\
    \ error protection and correction in the communications channel.\n   Comfort noise\
    \ handling for MELPe follows the procedures in Appendix B\n   of SCIP-210 [SCIP210].\
    \  After Voice Activity Detection (VAD)\n   no longer indicates the presence of\
    \ speech/voice, a minimum of two\n   comfort noise vocoder frames (serving as\
    \ a grace period) are to be\n   transmitted.  The contents of the comfort noise\
    \ frames are described\n   in the next section.\n   Packet loss concealment (PLC)\
    \ exploits the FEC (and, more precisely,\n   any combination of two set bits in\
    \ the pitch/voicing parameter) of\n   the 2400 bps speech coder.  The pitch/voicing\
    \ parameter has a sparse\n   set of permitted values.  A value of zero indicates\
    \ a non-voiced\n   frame.  At least three bits are set for all valid pitch parameters.\n\
    \   The PLC erasure indication utilizes any errored/erasure encodings of\n   the\
    \ pitch/voicing parameter with exactly two set bits, as described\n   below.\n"
- title: 3.  Payload Format
  contents:
  - "3.  Payload Format\n   The MELPe codec uses 22.5, 67.5, or 90 ms frames with\
    \ a sampling rate\n   clock of 8 kHz, so the RTP timestamp MUST be in units of\
    \ 1/8000 of a\n   second.\n   The RTP payload for MELPe has the format shown in\
    \ Figure 1.  No\n   additional header specific to this payload format is needed.\
    \  This\n   format is intended for situations where the sender and the receiver\n\
    \   send one or more codec data frames per packet.\n   0                   1 \
    \                  2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         RTP Header                            |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n\
    \   |                                                               |\n   +  \
    \                one or more frames of MELPe                  |\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      Figure 1: Packet Format Diagram\n   The RTP header of the\
    \ packetized encoded MELPe speech has the\n   expected values as described in\
    \ [RFC3550].  The usage of the M bit\n   SHOULD be as specified in the applicable\
    \ RTP profile -- for example,\n   [RFC3551], where [RFC3551] specifies that if\
    \ the sender does not\n   suppress silence (i.e., sends a frame on every frame\
    \ interval), the\n   M bit will always be zero.  When more than one codec data\
    \ frame is\n   present in a single RTP packet, the timestamp is, as always, that\
    \ of\n   the oldest data frame represented in the RTP packet.\n   The assignment\
    \ of an RTP payload type for this new packet format is\n   outside the scope of\
    \ this document and will not be specified here.\n   It is expected that the RTP\
    \ profile for a particular class of\n   applications will assign a payload type\
    \ for this encoding, or if that\n   is not done, then a payload type in the dynamic\
    \ range shall be chosen\n   by the sender.\n"
- title: 3.1.  MELPe Bitstream Definitions
  contents:
  - "3.1.  MELPe Bitstream Definitions\n   The total number of bits used to describe\
    \ one frame of 2400 bps\n   speech is 54, which fits in 7 octets (with two unused\
    \ bits).  For\n   1200 bps speech, the total number of bits used is 81, which\
    \ fits in\n   11 octets (with seven unused bits).  For 600 bps speech, the total\n\
    \   number of bits used is 54, which fits in 7 octets (with two unused\n   bits).\
    \  Unused bits, shown below as RSVA, RSVB, etc., are coded as\n   described in\
    \ Section 3.3 in support of dynamic bitrate switching.\n   In the MELPe bitstream\
    \ definitions, the most significant bits are\n   considered priority bits.  The\
    \ intention was that these bits receive\n   greater protection in the underlying\
    \ communications channel.  For IP\n   networks, such additional protection is\
    \ irrelevant.  However, for the\n   convenience of interoperable gateway devices,\
    \ the bitstreams will be\n   presented identically in IP networks.\n"
- title: 3.1.1.  2400 bps Bitstream Structure
  contents:
  - "3.1.1.  2400 bps Bitstream Structure\n   According to Table 3 of [MELPE], the\
    \ 2400 bps MELPe bit transmission\n   order (for clarity, the bit priority is\
    \ not shown) is as follows:\n                +--------+-------------+-------------+\n\
    \                |  Bit   |    Voiced   |   Unvoiced  |\n                +--------+-------------+-------------+\n\
    \                |  B_01  |       g20   |       g20   |\n                |  B_02\
    \  |       BP0   |     FEC10   |\n                |  B_03  |        P0   |   \
    \     P0   |\n                |  B_04  |     LSF20   |     LSF20   |\n       \
    \         |  B_05  |     LSF30   |     LSF30   |\n                |  B_06  | \
    \      g23   |       g23   |\n                |  B_07  |       g24   |       g24\
    \   |\n                |  B_08  |     LSF35   |     LSF35   |\n              \
    \  +--------+-------------+-------------+\n                |  B_09  |       g21\
    \   |       g21   |\n                |  B_10  |       g22   |       g22   |\n\
    \                |  B_11  |        P4   |        P4   |\n                |  B_12\
    \  |     LSF34   |     LSF34   |\n                |  B_13  |        P5   |   \
    \     P5   |\n                |  B_14  |        P1   |        P1   |\n       \
    \         |  B_15  |        P2   |        P2   |\n                |  B_16  | \
    \    LSF40   |     LSF40   |\n                +--------+-------------+-------------+\n\
    \                |  B_17  |        P6   |        P6   |\n                |  B_18\
    \  |     LSF10   |     LSF10   |\n                |  B_19  |     LSF16   |   \
    \  LSF16   |\n                |  B_20  |     LSF45   |     LSF45   |\n       \
    \         |  B_21  |        P3   |        P3   |\n                |  B_22  | \
    \    LSF15   |     LSF15   |\n                |  B_23  |     LSF14   |     LSF14\
    \   |\n                |  B_24  |     LSF25   |     LSF25   |\n              \
    \  +--------+-------------+-------------+\n                |  B_25  |       BP3\
    \   |     FEC13   |\n                |  B_26  |     LSF13   |     LSF13   |\n\
    \                |  B_27  |     LSF12   |     LSF12   |\n                |  B_28\
    \  |     LSF24   |     LSF24   |\n                |  B_29  |     LSF44   |   \
    \  LSF44   |\n                |  B_30  |       FM0   |     FEC40   |\n       \
    \         |  B_31  |     LSF11   |     LSF11   |\n                |  B_32  | \
    \    LSF23   |     LSF23   |\n                +--------+-------------+-------------+\n\
    \                |  B_33  |       FM7   |     FEC22   |\n                |  B_34\
    \  |       FM6   |     FEC21   |\n                |  B_35  |       FM5   |   \
    \  FEC20   |\n                |  B_36  |       g11   |       g11   |\n       \
    \         |  B_37  |       g10   |       g10   |\n                |  B_38  | \
    \      BP2   |     FEC12   |\n                |  B_39  |       BP1   |     FEC11\
    \   |\n                |  B_40  |     LSF21   |     LSF21   |\n              \
    \  +--------+-------------+-------------+\n                |  B_41  |     LSF33\
    \   |     LSF33   |\n                |  B_42  |     LSF22   |     LSF22   |\n\
    \                |  B_43  |     LSF32   |     LSF32   |\n                |  B_44\
    \  |     LSF31   |     LSF31   |\n                |  B_45  |     LSF43   |   \
    \  LSF43   |\n                |  B_46  |     LSF42   |     LSF42   |\n       \
    \         |  B_47  |        AF   |     FEC42   |\n                |  B_48  | \
    \    LSF41   |     LSF41   |\n                +--------+-------------+-------------+\n\
    \                |  B_49  |       FM4   |     FEC32   |\n                |  B_50\
    \  |       FM3   |     FEC31   |\n                |  B_51  |       FM2   |   \
    \  FEC30   |\n                |  B_52  |       FM1   |     FEC41   |\n       \
    \         |  B_53  |       g12   |       g12   |\n                |  B_54  | \
    \     SYNC   |      SYNC   |\n                +--------+-------------+-------------+\n\
    \                Notes:\n                g = Gain\n                BP = Bandpass\
    \ Voicing\n                P = Pitch/Voicing\n                LSF = Line Spectral\
    \ Frequencies\n                FEC = Forward Error Correction Parity Bits\n  \
    \              FM = Fourier Magnitudes\n                AF = Aperiodic Flag\n\
    \                B_01 = least significant bit of data set\n             Table\
    \ 1: Bitstream Definition for MELPe 2400 bps\n   The 2400 bps MELPe RTP payload\
    \ is constructed as per Figure 2.  Note\n   that bit B_01 is placed in the least\
    \ significant bit (LSB) of the\n   first byte with all other bits in sequence.\
    \  When filling octets, the\n   least significant bits of the seventh octet are\
    \ filled with bits B_49\n   to B_54, respectively.\n           MSB           \
    \                                   LSB\n            0      1      2      3  \
    \    4      5      6      7\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_08 | B_07 | B_06 | B_05 | B_04 | B_03 | B_02 | B_01 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_16 | B_15 | B_14 | B_13 | B_12 | B_11 | B_10 | B_09 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_24 | B_23 | B_22 | B_21 | B_20 | B_19 | B_18 | B_17 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_32 | B_31 | B_30 | B_29 | B_28 | B_27 | B_26 | B_25 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_40 | B_39 | B_38 | B_37 | B_36 | B_35 | B_34 | B_33 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_48 | B_47 | B_46 | B_45 | B_44 | B_43 | B_42 | B_41 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | RSVA | RSVB | B_54 | B_53 | B_52 | B_51 | B_50 | B_49 |\n        +------+------+------+------+------+------+------+------+\n\
    \              Figure 2: Packed MELPe 2400 bps Payload Octets\n"
- title: 3.1.2.  1200 bps Bitstream Structure
  contents:
  - "3.1.2.  1200 bps Bitstream Structure\n   According to Tables D-9a and D-9b of\
    \ [MELPE], the 1200 bps MELPe bit\n   transmission order is as follows:\n    \
    \             +--------+-------------+-------------+\n                 |  Bit\
    \   |  Modes 1-4  |   Mode 5    |\n                 |        |   (Voiced)  | (Unvoiced)\
    \  |\n                 +--------+-------------+-------------+\n              \
    \   |  B_01  |     Syn     |     Syn     |\n                 |  B_02  |  Pitch&UV0\
    \  |  Pitch&UV0  |\n                 |  B_03  |  Pitch&UV1  |  Pitch&UV1  |\n\
    \                 |  B_04  |  Pitch&UV2  |  Pitch&UV2  |\n                 | \
    \ B_05  |  Pitch&UV3  |  Pitch&UV3  |\n                 |  B_06  |  Pitch&UV4\
    \  |  Pitch&UV4  |\n                 |  B_07  |  Pitch&UV5  |  Pitch&UV5  |\n\
    \                 |  B_08  |  Pitch&UV6  |  Pitch&UV6  |\n                 +--------+-------------+-------------+\n\
    \                 |  B_09  |  Pitch&UV7  |  Pitch&UV7  |\n                 | \
    \ B_10  |  Pitch&UV8  |  Pitch&UV8  |\n                 |  B_11  |  Pitch&UV9\
    \  |  Pitch&UV9  |\n                 |  B_12  | Pitch&UV10  | Pitch&UV10  |\n\
    \                 |  B_13  | Pitch&UV11  | Pitch&UV11  |\n                 | \
    \ B_14  |    LSP0     |    LSP0     |\n                 |  B_15  |    LSP1   \
    \  |    LSP1     |\n                 |  B_16  |    LSP2     |    LSP2     |\n\
    \                 +--------+-------------+-------------+\n                 | \
    \ B_17  |    LSP3     |    LSP3     |\n                 |  B_18  |    LSP4   \
    \  |    LSP4     |\n                 |  B_19  |    LSP5     |    LSP5     |\n\
    \                 |  B_20  |    LSP6     |    LSP6     |\n                 | \
    \ B_21  |    LSP7     |    LSP7     |\n                 |  B_22  |    LSP8   \
    \  |    LSP8     |\n                 |  B_23  |    LSP9     |    LSP9     |\n\
    \                 |  B_24  |    LSP10    |    LSP10    |\n                 +--------+-------------+-------------+\n\
    \                 |  B_25  |    LSP11    |    LSP11    |\n                 | \
    \ B_26  |    LSP12    |    LSP12    |\n                 |  B_27  |    LSP13  \
    \  |    LSP13    |\n                 |  B_28  |    LSP14    |    LSP14    |\n\
    \                 |  B_29  |    LSP15    |    LSP15    |\n                 | \
    \ B_30  |    LSP16    |    LSP16    |\n                 |  B_31  |    LSP17  \
    \  |    LSP17    |\n                 |  B_32  |    LSP18    |    LSP18    |\n\
    \                 +--------+-------------+-------------+\n                 | \
    \ B_33  |    LSP19    |    LSP19    |\n                 |  B_34  |    LSP20  \
    \  |    LSP20    |\n                 |  B_35  |    LSP21    |    LSP21    |\n\
    \                 |  B_36  |    LSP22    |    LSP22    |\n                 | \
    \ B_37  |    LSP23    |    LSP23    |\n                 |  B_38  |    LSP24  \
    \  |    LSP24    |\n                 |  B_39  |    LSP25    |    LSP25    |\n\
    \                 |  B_40  |    LSP26    |    LSP26    |\n                 +--------+-------------+-------------+\n\
    \                 |  B_41  |    LSP27    |    GAIN0    |\n                 | \
    \ B_42  |    LSP28    |    GAIN1    |\n                 |  B_43  |    LSP29  \
    \  |    GAIN2    |\n                 |  B_44  |    LSP30    |    GAIN3    |\n\
    \                 |  B_45  |    LSP31    |    GAIN4    |\n                 | \
    \ B_46  |    LSP32    |    GAIN5    |\n                 |  B_47  |    LSP33  \
    \  |    GAIN6    |\n                 |  B_48  |    LSP34    |    GAIN7    |\n\
    \                 +--------+-------------+-------------+\n                 | \
    \ B_49  |    LSP35    |    GAIN8    |\n                 |  B_50  |    LSP36  \
    \  |    GAIN9    |\n                 |  B_51  |    LSP37    |             |\n\
    \                 |  B_52  |    LSP38    |             |\n                 | \
    \ B_53  |    LSP39    |             |\n                 |  B_54  |    LSP40  \
    \  |             |\n                 |  B_55  |    LSP41    |             |\n\
    \                 |  B_56  |    LSP42    |             |\n                 +--------+-------------+-------------+\n\
    \                 |  B_57  |    GAIN0    |             |\n                 | \
    \ B_58  |    GAIN1    |             |\n                 |  B_59  |    GAIN2  \
    \  |             |\n                 |  B_60  |    GAIN3    |             |\n\
    \                 |  B_61  |    GAIN4    |             |\n                 | \
    \ B_62  |    GAIN5    |             |\n                 |  B_63  |    GAIN6  \
    \  |             |\n                 |  B_64  |    GAIN7    |             |\n\
    \                 +--------+-------------+-------------+\n                 | \
    \ B_65  |    GAIN8    |             |\n                 |  B_66  |    GAIN9  \
    \  |             |\n                 |  B_67  |     BP0     |             |\n\
    \                 |  B_68  |     BP1     |             |\n                 | \
    \ B_69  |     BP2     |             |\n                 |  B_70  |     BP3   \
    \  |             |\n                 |  B_71  |     BP4     |             |\n\
    \                 |  B_72  |     BP5     |             |\n                 +--------+-------------+-------------+\n\
    \                 |  B_73  |   JITTER    |             |\n                 | \
    \ B_74  |     FS0     |             |\n                 |  B_75  |     FS1   \
    \  |             |\n                 |  B_76  |     FS2     |             |\n\
    \                 |  B_77  |     FS3     |             |\n                 | \
    \ B_78  |     FS4     |             |\n                 |  B_79  |     FS5   \
    \  |             |\n                 |  B_80  |     FS6     |             |\n\
    \                 +--------+-------------+-------------+\n                 | \
    \ B_81  |     FS7     |             |\n                 +--------+-------------+-------------+\n\
    \                 Notes:\n                 BP = Bandpass voicing\n           \
    \      FS = Fourier magnitudes\n                 LSP = Line Spectral Pair\n  \
    \               Pitch&UV = Pitch/voicing\n                 GAIN = Gain\n     \
    \            JITTER = Jitter\n             Table 2: Bitstream Definition for MELPe\
    \ 1200 bps\n   The 1200 bps MELPe RTP payload is constructed as per Figure 3.\
    \  Note\n   that bit B_01 is placed in the LSB of the first byte with all other\n\
    \   bits in sequence.  When filling octets, the least significant bit of\n   the\
    \ eleventh octet is filled with bit B_81.\n           MSB                    \
    \                          LSB\n            0      1      2      3      4    \
    \  5      6      7\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_08 | B_07 | B_06 | B_05 | B_04 | B_03 | B_02 | B_01 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_16 | B_15 | B_14 | B_13 | B_12 | B_11 | B_10 | B_09 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_24 | B_23 | B_22 | B_21 | B_20 | B_19 | B_18 | B_17 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_32 | B_31 | B_30 | B_29 | B_28 | B_27 | B_26 | B_25 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_40 | B_39 | B_38 | B_37 | B_36 | B_35 | B_34 | B_33 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_48 | B_47 | B_46 | B_45 | B_44 | B_43 | B_42 | B_41 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_56 | B_55 | B_54 | B_53 | B_52 | B_51 | B_50 | B_49 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_64 | B_63 | B_62 | B_61 | B_60 | B_59 | B_58 | B_57 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_72 | B_71 | B_70 | B_69 | B_68 | B_67 | B_66 | B_65 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_80 | B_79 | B_78 | B_77 | B_76 | B_75 | B_74 | B_73 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | RSVA | RSVB | RSVC | RSV0 | RSV0 | RSV0 | RSV0 | B_81 |\n        +------+------+------+------+------+------+------+------+\n\
    \              Figure 3: Packed MELPe 1200 bps Payload Octets\n"
- title: 3.1.3.  600 bps Bitstream Structure
  contents:
  - "3.1.3.  600 bps Bitstream Structure\n   According to Tables M-11 to M-16 of [MELPE],\
    \ the 600 bps MELPe bit\n   transmission order (for clarity, the bit priority\
    \ is not shown) is as\n   follows:\n          +--------+-------------+-------------+-------------+\n\
    \          |  Bit   |    Mode 1   |    Mode 2   |    Mode 3   |\n          | \
    \       |   (Voiced)  |   (voiced)  |   (voiced)  |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_01  | Voicing (4) | Voicing (4) | Voicing (4) |\n          | \
    \ B_02  | Voicing (3) | Voicing (3) | Voicing (3) |\n          |  B_03  | Voicing\
    \ (2) | Voicing (2) | Voicing (2) |\n          |  B_04  | Voicing (1) | Voicing\
    \ (1) | Voicing (1) |\n          |  B_05  | Voicing (0) | Voicing (0) | Voicing\
    \ (0) |\n          |  B_06  |  LSF1,4 (3) |  Pitch (5)  |  Pitch (7)  |\n    \
    \      |  B_07  |  LSF1,4 (2) |  Pitch (4)  |  Pitch (6)  |\n          |  B_08\
    \  |  LSF1,4 (1) |  Pitch (3)  |  Pitch (5)  |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_09  |  LSF1,4 (0) |  Pitch (2)  |  Pitch (4)  |\n          | \
    \ B_10  |  LSF1,3 (3) |  Pitch (1)  |  Pitch (3)  |\n          |  B_11  |  LSF1,3\
    \ (2) |  Pitch (0)  |  Pitch (2)  |\n          |  B_12  |  LSF1,3 (1) |  LSF1,3\
    \ (3) |  Pitch (1)  |\n          |  B_13  |  LSF1,3 (0) |  LSF1,3 (2) |  Pitch\
    \ (0)  |\n          |  B_14  |  LSF1,2 (3) |  LSF1,3 (1) |  LSF1,3 (3) |\n   \
    \       |  B_15  |  LSF1,2 (2) |  LSF1,3 (0) |  LSF1,3 (2) |\n          |  B_16\
    \  |  LSF1,2 (1) |  LSF1,2 (3) |  LSF1,3 (1) |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_17  |  LSF1,2 (0) |  LSF1,2 (2) |  LSF1,3 (0) |\n          | \
    \ B_18  |  LSF1,1 (5) |  LSF1,2 (1) |  LSF1,2 (4) |\n          |  B_19  |  LSF1,1\
    \ (4) |  LSF1,2 (0) |  LSF1,2 (3) |\n          |  B_20  |  LSF1,1 (3) |  LSF1,1\
    \ (5) |  LSF1,2 (2) |\n          |  B_21  |  LSF1,1 (2) |  LSF1,1 (4) |  LSF1,2\
    \ (1) |\n          |  B_22  |  LSF1,1 (1) |  LSF1,1 (3) |  LSF1,2 (0) |\n    \
    \      |  B_23  |  LSF1,1 (0) |  LSF1,1 (2) |  LSF1,1 (5) |\n          |  B_24\
    \  |  LSF2,4 (3) |  LSF1,1 (1) |  LSF1,1 (4) |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_25  |  LSF2,4 (2) |  LSF1,1 (0) |  LSF1,1 (3) |\n          | \
    \ B_26  |  LSF2,4 (1) |  LSF2,3 (3) |  LSF1,1 (2) |\n          |  B_27  |  LSF2,4\
    \ (0) |  LSF2,3 (2) |  LSF1,1 (1) |\n          |  B_28  |  LSF2,3 (3) |  LSF2,3\
    \ (1) |  LSF1,1 (0) |\n          |  B_29  |  LSF2,3 (2) |  LSF2,3 (0) |  LSF2,3\
    \ (3) |\n          |  B_30  |  LSF2,3 (1) |  LSF2,2 (4) |  LSF2,3 (2) |\n    \
    \      |  B_31  |  LSF2,3 (0) |  LSF2,2 (3) |  LSF2,3 (1) |\n          |  B_32\
    \  |  LSF2,2 (3) |  LSF2,2 (2) |  LSF2,3 (0) |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_33  |  LSF2,2 (2) |  LSF2,2 (1) |  LSF2,2 (4) |\n          | \
    \ B_34  |  LSF2,2 (1) |  LSF2,2 (0) |  LSF2,2 (3) |\n          |  B_35  |  LSF2,2\
    \ (0) |  LSF2,1 (6) |  LSF2,2 (2) |\n          |  B_36  |  LSF2,1 (5) |  LSF2,1\
    \ (5) |  LSF2,2 (1) |\n          |  B_37  |  LSF2,1 (4) |  LSF2,1 (4) |  LSF2,2\
    \ (0) |\n          |  B_38  |  LSF2,1 (3) |  LSF2,1 (3) |  LSF2,1 (5) |\n    \
    \      |  B_39  |  LSF2,1 (2) |  LSF2,1 (2) |  LSF2,1 (4) |\n          |  B_40\
    \  |  LSF2,1 (1) |  LSF2,1 (1) |  LSF2,1 (3) |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_41  |  LSF2,1 (0) |  LSF2,1 (0) |  LSF2,1 (2) |\n          | \
    \ B_42  |  GAIN2 (5)  |  GAIN2 (5)  |  LSF2,1 (1) |\n          |  B_43  |  GAIN2\
    \ (4)  |  GAIN2 (4)  |  LSF2,1 (0) |\n          |  B_44  |  GAIN2 (3)  |  GAIN2\
    \ (3)  |  GAIN2 (4)  |\n          |  B_45  |  GAIN2 (2)  |  GAIN2 (2)  |  GAIN2\
    \ (3)  |\n          |  B_46  |  GAIN2 (1)  |  GAIN2 (1)  |  GAIN2 (2)  |\n   \
    \       |  B_47  |  GAIN2 (0)  |  GAIN2 (0)  |  GAIN2 (1)  |\n          |  B_48\
    \  |  GAIN1 (6)  |  GAIN1 (6)  |  GAIN2 (0)  |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_49  |  GAIN1 (5)  |  GAIN1 (5)  |  GAIN1 (5)  |\n          | \
    \ B_50  |  GAIN1 (4)  |  GAIN1 (4)  |  GAIN1 (4)  |\n          |  B_51  |  GAIN1\
    \ (3)  |  GAIN1 (3)  |  GAIN1 (3)  |\n          |  B_52  |  GAIN1 (2)  |  GAIN1\
    \ (2)  |  GAIN1 (2)  |\n          |  B_53  |  GAIN1 (1)  |  GAIN1 (1)  |  GAIN1\
    \ (1)  |\n          |  B_54  |  GAIN1 (0)  |  GAIN1 (0)  |  GAIN1 (0)  |\n   \
    \       +--------+-------------+-------------+-------------+\n       Table 3:\
    \ Bitstream Definition for MELPe 600 bps (Part 1 of 2)\n          +--------+-------------+-------------+-------------+\n\
    \          |  Bit   |    Mode 4   |    Mode 5   |    Mode 6   |\n          | \
    \       |   (voiced)  |   (voiced)  |   (voiced)  |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_01  | Voicing (4) | Voicing (4) | Voicing (4) |\n          | \
    \ B_02  | Voicing (3) | Voicing (3) | Voicing (3) |\n          |  B_03  | Voicing\
    \ (2) | Voicing (2) | Voicing (2) |\n          |  B_04  | Voicing (1) | Voicing\
    \ (1) | Voicing (1) |\n          |  B_05  | Voicing (0) | Voicing (0) | Voicing\
    \ (0) |\n          |  B_06  |  Pitch (7)  |  Pitch (7)  |  Pitch (7)  |\n    \
    \      |  B_07  |  Pitch (6)  |  Pitch (6)  |  Pitch (6)  |\n          |  B_08\
    \  |  Pitch (5)  |  Pitch (5)  |  Pitch (5)  |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_09  |  Pitch (4)  |  Pitch (4)  |  Pitch (4)  |\n          | \
    \ B_10  |  Pitch (3)  |  Pitch (3)  |  Pitch (3)  |\n          |  B_11  |  Pitch\
    \ (2)  |  Pitch (2)  |  Pitch (2)  |\n          |  B_12  |  Pitch (1)  |  Pitch\
    \ (1)  |  Pitch (1)  |\n          |  B_13  |  Pitch (0)  |  Pitch (0)  |  Pitch\
    \ (0)  |\n          |  B_14  |  LSF1,3 (3) |  LSF1,3 (3) |  LSF1,3 (3) |\n   \
    \       |  B_15  |  LSF1,3 (2) |  LSF1,3 (2) |  LSF1,3 (2) |\n          |  B_16\
    \  |  LSF1,3 (1) |  LSF1,3 (1) |  LSF1,3 (1) |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_17  |  LSF1,3 (0) |  LSF1,3 (0) |  LSF1,3 (0) |\n          | \
    \ B_18  |  LSF1,2 (3) |  LSF1,2 (4) |  LSF1,2 (4) |\n          |  B_19  |  LSF1,2\
    \ (2) |  LSF1,2 (3) |  LSF1,2 (3) |\n          |  B_20  |  LSF1,2 (1) |  LSF1,2\
    \ (2) |  LSF1,2 (2) |\n          |  B_21  |  LSF1,2 (0) |  LSF1,2 (1) |  LSF1,2\
    \ (1) |\n          |  B_22  |  LSF1,1 (5) |  LSF1,2 (0) |  LSF1,2 (0) |\n    \
    \      |  B_23  |  LSF1,1 (4) |  LSF1,1 (5) |  LSF1,1 (6) |\n          |  B_24\
    \  |  LSF1,1 (3) |  LSF1,1 (4) |  LSF1,1 (5) |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_25  |  LSF1,1 (2) |  LSF1,1 (3) |  LSF1,1 (4) |\n          | \
    \ B_26  |  LSF1,1 (1) |  LSF1,1 (2) |  LSF1,1 (3) |\n          |  B_27  |  LSF1,1\
    \ (0) |  LSF1,1 (1) |  LSF1,1 (2) |\n          |  B_28  |  LSF2,3 (3) |  LSF1,1\
    \ (0) |  LSF1,1 (1) |\n          |  B_29  |  LSF2,3 (2) |  LSF2,3 (3) |  LSF1,1\
    \ (0) |\n          |  B_30  |  LSF2,3 (1) |  LSF2,3 (2) |  LSF2,3 (3) |\n    \
    \      |  B_31  |  LSF2,3 (0) |  LSF2,3 (1) |  LSF2,3 (2) |\n          |  B_32\
    \  |  LSF2,2 (4) |  LSF2,3 (0) |  LSF2,3 (1) |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_33  |  LSF2,2 (3) |  LSF2,2 (4) |  LSF2,3 (0) |\n          | \
    \ B_34  |  LSF2,2 (2) |  LSF2,2 (3) |  LSF2,2 (4) |\n          |  B_35  |  LSF2,2\
    \ (1) |  LSF2,2 (2) |  LSF2,2 (3) |\n          |  B_36  |  LSF2,2 (0) |  LSF2,2\
    \ (1) |  LSF2,2 (2) |\n          |  B_37  |  LSF2,1 (6) |  LSF2,2 (0) |  LSF2,2\
    \ (1) |\n          |  B_38  |  LSF2,1 (5) |  LSF2,1 (5) |  LSF2,2 (0) |\n    \
    \      |  B_39  |  LSF2,1 (4) |  LSF2,1 (4) |  LSF2,1 (6) |\n          |  B_40\
    \  |  LSF2,1 (3) |  LSF2,1 (3) |  LSF2,1 (5) |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_41  |  LSF2,1 (2) |  LSF2,1 (2) |  LSF2,1 (4) |\n          | \
    \ B_42  |  LSF2,1 (1) |  LSF2,1 (1) |  LSF2,1 (3) |\n          |  B_43  |  LSF2,1\
    \ (0) |  LSF2,1 (0) |  LSF2,1 (2) |\n          |  B_44  |  GAIN2 (4)  |  GAIN2\
    \ (4)  |  LSF2,1 (1) |\n          |  B_45  |  GAIN2 (3)  |  GAIN2 (3)  |  LSF2,1\
    \ (0) |\n          |  B_46  |  GAIN2 (2)  |  GAIN2 (2)  |  GAIN1 (8)  |\n    \
    \      |  B_47  |  GAIN2 (1)  |  GAIN2 (1)  |  GAIN1 (7)  |\n          |  B_48\
    \  |  GAIN2 (0)  |  GAIN2 (0)  |  GAIN1 (6)  |\n          +--------+-------------+-------------+-------------+\n\
    \          |  B_49  |  GAIN1 (5)  |  GAIN1 (5)  |  GAIN1 (5)  |\n          | \
    \ B_50  |  GAIN1 (4)  |  GAIN1 (4)  |  GAIN1 (4)  |\n          |  B_51  |  GAIN1\
    \ (3)  |  GAIN1 (3)  |  GAIN1 (3)  |\n          |  B_52  |  GAIN1 (2)  |  GAIN1\
    \ (2)  |  GAIN1 (2)  |\n          |  B_53  |  GAIN1 (1)  |  GAIN1 (1)  |  GAIN1\
    \ (1)  |\n          |  B_54  |  GAIN1 (0)  |  GAIN1 (0)  |  GAIN1 (0)  |\n   \
    \       +--------+-------------+-------------+-------------+\n          Notes:\n\
    \          xxxx (0) = LSB\n          xxxx (nbits-1) = MSB\n          LSF1,p =\
    \ MSVQ* index of the pth stage of the two first frames\n          LSF2,p = MSVQ\
    \ index of the pth stage of the two last frames\n          GAIN1 = VQ/MSVQ index\
    \ of the 1st stage\n          GAIN2 = MSVQ index of the 2nd stage\n          *\
    \ MSVQ: Multi-Stage Vector Quantizer\n       Table 4: Bitstream Definition for\
    \ MELPe 600 bps (Part 2 of 2)\n   The 600 bps MELPe RTP payload is constructed\
    \ as per Figure 4.  Note\n   that bit B_01 is placed in the LSB of the first byte\
    \ with all other\n   bits in sequence.  When filling octets, the least significant\
    \ bits of\n   the seventh octet are filled with bits B_49 to B_54, respectively.\n\
    \           MSB                                              LSB\n           \
    \ 0      1      2      3      4      5      6      7\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_08 | B_07 | B_06 | B_05 | B_04 | B_03 | B_02 | B_01 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_16 | B_15 | B_14 | B_13 | B_12 | B_11 | B_10 | B_09 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_24 | B_23 | B_22 | B_21 | B_20 | B_19 | B_18 | B_17 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_32 | B_31 | B_30 | B_29 | B_28 | B_27 | B_26 | B_25 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_40 | B_39 | B_38 | B_37 | B_36 | B_35 | B_34 | B_33 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_48 | B_47 | B_46 | B_45 | B_44 | B_43 | B_42 | B_41 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | RSVA | RSVB | B_54 | B_53 | B_52 | B_51 | B_50 | B_49 |\n        +------+------+------+------+------+------+------+------+\n\
    \               Figure 4: Packed MELPe 600 bps Payload Octets\n"
- title: 3.2.  MELPe Comfort Noise Bitstream Definition
  contents:
  - "3.2.  MELPe Comfort Noise Bitstream Definition\n   Table B.3-1 of [SCIP210] identifies\
    \ the usage of MELPe 2400 bps\n   parameters for conveying comfort noise.\n  \
    \      +-------------------------------------+----------------+\n        |   \
    \        MELPe Parameter           |      Value     |\n        +-------------------------------------+----------------+\n\
    \        | msvq[0] (line spectral frequencies) |  * See Note    |\n        +-------------------------------------+----------------+\n\
    \        | msvq[1] (line spectral frequencies) |    Set to 0    |\n        +-------------------------------------+----------------+\n\
    \        | msvq[2] (line spectral frequencies) |    Set to 0    |\n        +-------------------------------------+----------------+\n\
    \        | msvq[3] (line spectral frequencies) |    Set to 0    |\n        +-------------------------------------+----------------+\n\
    \        |      fsvq (Fourier magnitudes)      |    Set to 0    |\n        +-------------------------------------+----------------+\n\
    \        |            gain[0] (gain)           |    Set to 0    |\n        +-------------------------------------+----------------+\n\
    \        |            gain[1] (gain)           |  * See Note    |\n        +-------------------------------------+----------------+\n\
    \        |   pitch (pitch - overall voicing)   |    Set to 0    |\n        +-------------------------------------+----------------+\n\
    \        |        bp (bandpass voicing)        |    Set to 0    |\n        +-------------------------------------+----------------+\n\
    \        |   af (aperiodic flag/jitter index)  |    Set to 0    |\n        +-------------------------------------+----------------+\n\
    \        |           sync (sync bit)           |  Alternations  |\n        +-------------------------------------+----------------+\n\
    \        Note:\n        The default values are the respective parameters from\
    \ the\n        vocoder frame.  It is preferred that msvq[0] and gain[1]\n    \
    \    values be derived by averaging the respective parameter from\n        some\
    \ number of previous vocoder frames.\n                  Table 5: MELPe Comfort\
    \ Noise Parameters\n   Since only msvq[0] (also known as LSF1x or the first LSP)\
    \ and gain[1]\n   (also known as g2x or the second gain) are needed, the following\
    \ bit\n   order is used for comfort noise frames:\n                       +--------+-------------+\n\
    \                       |  Bit   |   Comfort   |\n                       |   \
    \     |    Noise    |\n                       +--------+-------------+\n     \
    \                  |  B_01  |     LSF10   |\n                       |  B_02  |\
    \     LSF11   |\n                       |  B_03  |     LSF12   |\n           \
    \            |  B_04  |     LSF13   |\n                       |  B_05  |     LSF14\
    \   |\n                       |  B_06  |     LSF15   |\n                     \
    \  |  B_07  |     LSF16   |\n                       |  B_08  |       g20   |\n\
    \                       +--------+-------------+\n                       |  B_09\
    \  |       g21   |\n                       |  B_10  |       g22   |\n        \
    \               |  B_11  |       g23   |\n                       |  B_12  |  \
    \     g24   |\n                       |  B_13  |      SYNC   |\n             \
    \          +--------+-------------+\n                       Notes:\n         \
    \              g = Gain\n                       LSF = Line Spectral Frequencies\n\
    \           Table 6: Bitstream Definition for MELPe Comfort Noise\n   The comfort\
    \ noise MELPe RTP payload is constructed as per Figure 5.\n   Note that bit B_01\
    \ is placed in the LSB of the first byte with all\n   other bits in sequence.\
    \  When filling octets, the least significant\n   bits of the second octet are\
    \ filled with bits B_09 to B_13,\n   respectively.\n           MSB           \
    \                                   LSB\n            0      1      2      3  \
    \    4      5      6      7\n        +------+------+------+------+------+------+------+------+\n\
    \        | B_08 | B_07 | B_06 | B_05 | B_04 | B_03 | B_02 | B_01 |\n        +------+------+------+------+------+------+------+------+\n\
    \        | RSVA | RSVB | RSVC | B_13 | B_12 | B_11 | B_10 | B_09 |\n        +------+------+------+------+------+------+------+------+\n\
    \            Figure 5: Packed MELPe Comfort Noise Payload Octets\n"
- title: 3.3.  Multiple MELPe Frames in an RTP Packet
  contents:
  - "3.3.  Multiple MELPe Frames in an RTP Packet\n   A MELPe RTP packet MAY consist\
    \ of zero or more MELPe coder frames\n   followed by zero or one MELPe comfort\
    \ noise frame.  The presence of a\n   comfort noise frame can be deduced from\
    \ the length of the RTP\n   payload.  The default packetization interval is one\
    \ coder frame\n   (22.5, 67.5, or 90 ms) according to the coder bitrate (2400,\
    \ 1200, or\n   600 bps).  For some applications, a longer packetization interval\
    \ is\n   used to reduce the packet rate.\n   A MELPe RTP packet comprised of no\
    \ coder frame and no comfort noise\n   frame MAY be used periodically by an endpoint\
    \ to indicate\n   connectivity by an otherwise idle receiver.\n   All MELPe frames\
    \ in a single RTP packet MUST be of the same coder\n   bitrate.  Dynamic switching\
    \ between frame rates within an RTP stream\n   may be permitted (if supported\
    \ by both ends) provided that reserved\n   bits RSVA, RSVB, and RSVC are filled\
    \ in as per Table 7.  If bitrate\n   switching is not used, all reserved bits\
    \ are encoded as 0 by the\n   sender and ignored by the receiver.  (RSV0 is always\
    \ coded as 0.)\n                 +-------------------+------+------+------+\n\
    \                 |   Coder Bitrate   | RSVA | RSVB | RSVC |\n               \
    \  +-------------------+------+------+------+\n                 |   2400 bps \
    \       |   0  |   0  |  N/A |\n                 +-------------------+------+------+------+\n\
    \                 |   1200 bps        |   1  |   0  |   0  |\n               \
    \  +-------------------+------+------+------+\n                 |    600 bps \
    \       |   0  |   1  |  N/A |\n                 +-------------------+------+------+------+\n\
    \                 |   Comfort Noise   |   1  |   0  |   1  |\n               \
    \  +-------------------+------+------+------+\n                 |   (reserved)\
    \      |   1  |   1  |  N/A |\n                 +-------------------+------+------+------+\n\
    \                  Table 7: MELPe Frame Bitrate Indicators\n   It is important\
    \ to observe that senders have the following additional\n   restrictions:\n  \
    \ Senders SHOULD NOT include more MELPe frames in a single RTP packet\n   than\
    \ will fit in the MTU of the RTP transport protocol.\n   Frames MUST NOT be split\
    \ between RTP packets.\n   It is RECOMMENDED that the number of frames contained\
    \ within an RTP\n   packet be consistent with the application.  For example, in\
    \ telephony\n   and other real-time applications where delay is important, then\
    \ the\n   fewer frames per packet the lower the delay, whereas for bandwidth-\n\
    \   constrained links or delay-insensitive streaming messaging\n   applications,\
    \ more than one frame per packet or many frames per\n   packet would be acceptable.\n\
    \   Information describing the number of frames contained in an RTP\n   packet\
    \ is not transmitted as part of the RTP payload.  The way to\n   determine the\
    \ number of MELPe frames is to count the total number of\n   octets within the\
    \ RTP packet and divide the octet count by the number\n   of expected octets per\
    \ frame (7/11/7 per frame).  Keep in mind that\n   the last frame can be a 2-octet\
    \ comfort noise frame.\n   When dynamic bitrate switching is used and more than\
    \ one frame is\n   contained in an RTP packet, it is RECOMMENDED that the coder\
    \ rate\n   bits contained in the last octet be inspected.  If the coder bitrate\n\
    \   indicates a comfort noise frame, then inspect the third last octet\n   for\
    \ the coder bitrate.  All MELPe speech frames in the RTP packet\n   will be of\
    \ this same coder bitrate.\n"
- title: 3.4.  Congestion Control Considerations
  contents:
  - "3.4.  Congestion Control Considerations\n   The target bitrate of MELPe can be\
    \ adjusted at any point in time,\n   thus allowing congestion management.  Furthermore,\
    \ the amount of\n   encoded speech or audio data encoded in a single packet can\
    \ be used\n   for congestion control, since the packet rate is inversely\n   proportional\
    \ to the packet duration.  A lower packet transmission\n   rate reduces the amount\
    \ of header overhead but at the same time\n   increases latency and loss sensitivity,\
    \ so it ought to be used\n   with care.\n   Since UDP does not provide congestion\
    \ control, applications that use\n   RTP over UDP SHOULD implement their own congestion\
    \ control above the\n   UDP layer [RFC8085] and MAY also implement a transport\
    \ circuit\n   breaker [RFC8083].  Work in the RMCAT working group [RMCAT] describes\n\
    \   the interactions and conceptual interfaces necessary between the\n   application\
    \ components that relate to congestion control, including\n   the RTP layer, the\
    \ higher-level media codec control layer, and the\n   lower-level transport interface,\
    \ as well as components dedicated to\n   congestion control functions.\n"
- title: 4.  Payload Format Parameters
  contents:
  - "4.  Payload Format Parameters\n   This RTP payload format is identified using\
    \ the MELP, MELP2400,\n   MELP1200, and MELP600 media subtypes, which are registered\
    \ in\n   accordance with RFC 4855 [RFC4855] and per the media type\n   registration\
    \ template from RFC 6838 [RFC6838].\n"
- title: 4.1.  Media Type Definitions
  contents:
  - "4.1.  Media Type Definitions\n   Type name: audio\n   Subtype names: MELP, MELP2400,\
    \ MELP1200, and MELP600\n   Required parameters: N/A\n   Optional parameters:\n\
    \      ptime: the recommended length of time (in milliseconds)\n         represented\
    \ by the media in a packet.  It SHALL use the nearest\n         rounded-up ms\
    \ integer packet duration.  For MELPe, this\n         corresponds to the following\
    \ values: 23, 45, 68, 90, 112, 135,\n         156, and 180.  Larger values can\
    \ be used as long as they are\n         properly rounded.  See Section 6 of RFC\
    \ 4566 [RFC4566].\n      maxptime: the maximum length of time (in milliseconds)\
    \ that can be\n         encapsulated in a packet.  It SHALL use the nearest rounded-up\n\
    \         ms integer packet duration.  For MELPe, this corresponds to the\n  \
    \       following values: 23, 45, 68, 90, 112, 135, 156, and 180.\n         Larger\
    \ values can be used as long as they are properly rounded.\n         See Section\
    \ 6 of RFC 4566 [RFC4566].\n      bitrate: specifies the MELPe coder bitrates\
    \ supported.  Possible\n         values are a comma-separated list of rates from\
    \ the following\n         set: 2400, 1200, 600.  The modes are listed in order\
    \ of\n         preference; first is preferred.  If \"bitrate\" is not present,\n\
    \         the fixed coder bitrate of 2400 MUST be used.  The alternate\n     \
    \    encoding names \"MELP2400\", \"MELP1200\", and \"MELP600\" directly\n   \
    \      specify the MELPe coder bitrates of 2400, 1200, and 600,\n         respectively,\
    \ and MUST NOT specify a \"bitrate\" parameter.\n   Encoding considerations: These\
    \ media subtypes are framed and binary;\n      see Section 4.8 of RFC 6838 [RFC6838].\n\
    \   Security considerations: Please see Section 8 of RFC 8130.\n   Interoperability\
    \ considerations: Early implementations used MELP2400,\n      MELP1200, and MELP600\
    \ to indicate both coder type and bitrate.\n      These media type names should\
    \ be preserved with this registration.\n   Published specification: N/A\n   Applications\
    \ that use this media type: N/A\n   Additional information: N/A\n      Deprecated\
    \ alias names for this type: N/A\n      Magic number(s): N/A\n      File extension(s):\
    \ N/A\n      Macintosh file type code(s): N/A\n   Person & email address to contact\
    \ for further information:\n      Victor Demjanenko, Ph.D.\n      VOCAL Technologies,\
    \ Ltd.\n      520 Lee Entrance, Suite 202\n      Buffalo, NY  14228\n      United\
    \ States of America\n      Phone: +1 716 688 4675\n      Email: victor.demjanenko@vocal.com\n\
    \   Intended usage: COMMON\n   Restrictions on usage: These media subtypes depend\
    \ on RTP framing and\n      hence are only defined for transfer via RTP [RFC3550].\
    \  Transport\n      within other framing protocols is not defined at this time.\n\
    \   Author: Victor Demjanenko\n   Change controller: IETF Payload working group\
    \ delegated from the\n      IESG.\n   Provisional registration? (standards tree\
    \ only): No\n"
- title: 4.2.  Mapping to SDP
  contents:
  - "4.2.  Mapping to SDP\n   The mapping of the above-defined payload format media\
    \ subtypes and\n   their parameters SHALL be done according to Section 3 of RFC\
    \ 4855\n   [RFC4855].\n   The information carried in the media type specification\
    \ has a\n   specific mapping to fields in the Session Description Protocol (SDP)\n\
    \   [RFC4566], which is commonly used to describe RTP sessions.  When SDP\n  \
    \ is used to specify sessions employing the MELPe codec, the mapping is\n   as\
    \ follows:\n   o  The media type (\"audio\") goes in SDP \"m=\" as the media name.\n\
    \   o  The media subtype (payload format name) goes in SDP \"a=rtpmap\" as\n \
    \     the encoding name.\n   o  The parameter \"bitrate\" goes in the SDP \"a=fmtp\"\
    \ attribute by\n      copying it as a \"bitrate=<value>\" string.\n   o  The parameters\
    \ \"ptime\" and \"maxptime\" go in the SDP \"a=ptime\" and\n      \"a=maxptime\"\
    \ attributes, respectively.\n   When conveying information via SDP, the encoding\
    \ name SHALL be \"MELP\"\n   (the same as the media subtype).  Alternate encoding\
    \ name subtypes\n   \"MELP2400\", \"MELP1200\", and \"MELP600\" MAY be used in\
    \ SDP to convey\n   fixed-bitrate configurations.  These names have been observed\
    \ in\n   systems that do not support dynamic frame-rate switching as specified\n\
    \   by the parameter \"bitrate\".\n   An example of the media representation in\
    \ SDP for describing MELPe\n   might be:\n      m=audio 49120 RTP/AVP 97\n   \
    \   a=rtpmap:97 MELP/8000\n   An alternative example of SDP for fixed-bitrate\
    \ configurations\n   might be:\n      m=audio 49120 RTP/AVP 97 100 101 102\n \
    \     a=rtpmap:97 MELP/8000\n      a=rtpmap:100 MELP2400/8000\n      a=rtpmap:101\
    \ MELP1200/8000\n      a=rtpmap:102 MELP600/8000\n   If the encoding name \"MELP\"\
    \ is received without a \"bitrate\"\n   parameter, the fixed coder bitrate of\
    \ 2400 MUST be used.  The\n   alternate encoding names \"MELP2400\", \"MELP1200\"\
    , and \"MELP600\"\n   directly specify the MELPe coder bitrates of 2400, 1200,\
    \ and 600,\n   respectively, and MUST NOT specify a \"bitrate\" parameter.\n \
    \  The optional media type parameter \"bitrate\", when present, MUST be\n   included\
    \ in the \"a=fmtp\" attribute in the SDP, expressed as a media\n   type string\
    \ in the form of a semicolon-separated list of\n   parameter=value pairs.  The\
    \ string \"value\" can be one or more of\n   2400, 1200, and 600, separated by\
    \ commas (where each bitrate value\n   indicates the corresponding MELPe coder).\
    \  An example of the media\n   representation in SDP for describing MELPe when\
    \ all three coder\n   bitrates are supported might be:\n      m=audio 49120 RTP/AVP\
    \ 97\n      a=rtpmap:97 MELP/8000\n      a=fmtp:97 bitrate=2400,600,1200\n   Parameter\
    \ \"ptime\" cannot be used for the purpose of specifying the\n   MELPe operating\
    \ mode, due to the fact that for certain values it will\n   be impossible to distinguish\
    \ which mode is about to be used (e.g.,\n   when ptime=68, it would be impossible\
    \ to distinguish if the packet is\n   carrying one frame of 67.5 ms or three frames\
    \ of 22.5 ms).\n   Note that the payload format (encoding) names are commonly\
    \ shown in\n   upper case.  Media subtypes are commonly shown in lower case. \
    \ These\n   names are case insensitive in both places.  Similarly, parameter\n\
    \   names are case insensitive in both the media subtype name and the\n   default\
    \ mapping to the SDP a=fmtp attribute.\n"
- title: 4.3.  Declarative SDP Considerations
  contents:
  - "4.3.  Declarative SDP Considerations\n   For declarative media, the \"bitrate\"\
    \ parameter specifies the possible\n   bitrates used by the sender.  Multiple\
    \ MELPe rtpmap values (such as\n   97, 98, and 99, as used below) MAY be used\
    \ to convey MELPe-coded\n   voice at different bitrates.  The receiver can then\
    \ select an\n   appropriate MELPe codec by using 97, 98, or 99.\n      m=audio\
    \ 49120 RTP/AVP 97 98 99\n      a=rtpmap:97 MELP/8000\n      a=fmtp:97 bitrate=2400\n\
    \      a=rtpmap:98 MELP/8000\n      a=fmtp:98 bitrate=1200\n      a=rtpmap:99\
    \ MELP/8000\n      a=fmtp:99 bitrate=600\n"
- title: 4.4.  Offer/Answer SDP Considerations
  contents:
  - "4.4.  Offer/Answer SDP Considerations\n   In the Offer/Answer model [RFC3264],\
    \ \"bitrate\" is a bidirectional\n   parameter.  Both sides MUST use a common\
    \ \"bitrate\" value or values.\n   The offer contains the bitrates supported by\
    \ the offerer, listed in\n   its preferred order.  The answerer MAY agree to any\
    \ bitrate by\n   listing the bitrate first in the answerer response.  Additionally,\n\
    \   the answerer MAY indicate any secondary bitrate or bitrates that it\n   supports.\
    \  The initial bitrate used by both parties SHALL be the\n   first bitrate specified\
    \ in the answerer response.\n   For example, if offerer bitrates are \"2400,600\"\
    \ and answer bitrates\n   are \"600,2400\", the initial bitrate is 600.  If other\
    \ bitrates are\n   provided by the answerer, any common bitrate between the offer\
    \ and\n   answer MAY be used at any time in the future.  Activation of these\n\
    \   other common bitrates is beyond the scope of this document.\n   The use of\
    \ a lower bitrate is often important for a case such as when\n   one endpoint\
    \ utilizes a bandwidth-constrained link (e.g., 1200 bps\n   radio link or slower),\
    \ where only the lower coder bitrate will work.\n"
- title: 5.  Discontinuous Transmissions
  contents:
  - "5.  Discontinuous Transmissions\n   A primary application of MELPe is for radio\
    \ communications of voice\n   conversations, and discontinuous transmissions are\
    \ normal.  When\n   MELPe is used in an IP network, MELPe RTP packet transmissions\
    \ may\n   cease and resume frequently.  RTP synchronization source (SSRC)\n  \
    \ sequence number gaps indicate lost packets to be filled by PLC, while\n   abrupt\
    \ loss of RTP packets indicates intended discontinuous\n   transmissions.\n  \
    \ If a MELPe coder so desires, it may send a comfort noise frame as per\n   Appendix\
    \ B of [SCIP210] prior to ceasing transmission.  A receiver\n   may optionally\
    \ use comfort noise during its silence periods.  No SDP\n   negotiations are required.\n"
- title: 6.  Packet Loss Concealment
  contents:
  - "6.  Packet Loss Concealment\n   MELPe packet loss concealment (PLC) uses the\
    \ special properties and\n   coding for the pitch/voicing parameter of the MELPe\
    \ 2400 bps coder.\n   The PLC erasure indication utilizes any of the errored encodings\
    \ of a\n   non-voiced frame as identified in Table 1 of [MELPE].  For the sake\n\
    \   of simplicity, it is preferred that a code value of 3 for the\n   pitch/voicing\
    \ parameter (represented by the bits P6 to P0 in Table 1\n   of this document)\
    \ be used.  Hence, set bits P0 and P1 to one and bits\n   P2, P3, P4, P5, and\
    \ P6 to zero.\n   When using PLC in 1200 bps or 600 bps mode, the MELPe 2400 bps\n\
    \   decoder is called three or four times, respectively, to cover the\n   loss\
    \ of a MELPe frame.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   IANA has registered MELP, MELP2400, MELP1200, and\
    \ MELP600 as\n   specified in Section 4.1.  IANA has also added these media subtypes\n\
    \   to the \"RTP Payload Format media types\" registry\n   (http://www.iana.org/assignments/rtp-parameters).\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   RTP packets using the payload format defined\
    \ in this specification\n   are subject to the security considerations discussed\
    \ in the RTP\n   specification [RFC3550] and in any applicable RTP profile such\
    \ as\n   RTP/AVP [RFC3551], RTP/AVPF [RFC4585], RTP/SAVP [RFC3711], or\n   RTP/SAVPF\
    \ [RFC5124].  However, as discussed in [RFC7202], it is not\n   an RTP payload\
    \ format's responsibility to discuss or mandate what\n   solutions are used to\
    \ meet such basic security goals as\n   confidentiality, integrity, and source\
    \ authenticity for RTP in\n   general.  This responsibility lies with anyone using\
    \ RTP in an\n   application.  They can find guidance on available security mechanisms\n\
    \   and important considerations in [RFC7201].  Applications SHOULD use\n   one\
    \ or more appropriate strong security mechanisms.  The rest of this\n   section\
    \ discusses the security-impacting properties of the payload\n   format itself.\n\
    \   This RTP payload format and the MELPe decoder do not exhibit any\n   significant\
    \ non-uniformity in the receiver-side computational\n   complexity for packet\
    \ processing and thus are unlikely to pose a\n   denial-of-service threat due\
    \ to the receipt of pathological data.\n   Additionally, the RTP payload format\
    \ does not contain any active\n   content.\n   Please see the security considerations\
    \ discussed in [RFC6562]\n   regarding VAD and its effect on bitrates.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2736]  Handley, M. and C. Perkins, \"Guidelines for Writers of RTP\n \
    \             Payload Format Specifications\", BCP 36, RFC 2736,\n           \
    \   DOI 10.17487/RFC2736, December 1999,\n              <http://www.rfc-editor.org/info/rfc2736>.\n\
    \   [RFC3264]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n   \
    \           with Session Description Protocol (SDP)\", RFC 3264,\n           \
    \   DOI 10.17487/RFC3264, June 2002,\n              <http://www.rfc-editor.org/info/rfc3264>.\n\
    \   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.\n          \
    \    Jacobson, \"RTP: A Transport Protocol for Real-Time\n              Applications\"\
    , STD 64, RFC 3550, DOI 10.17487/RFC3550,\n              July 2003, <http://www.rfc-editor.org/info/rfc3550>.\n\
    \   [RFC3551]  Schulzrinne, H. and S. Casner, \"RTP Profile for Audio and\n  \
    \            Video Conferences with Minimal Control\", STD 65, RFC 3551,\n   \
    \           DOI 10.17487/RFC3551, July 2003,\n              <http://www.rfc-editor.org/info/rfc3551>.\n\
    \   [RFC3711]  Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n   \
    \           Norrman, \"The Secure Real-time Transport Protocol (SRTP)\",\n   \
    \           RFC 3711, DOI 10.17487/RFC3711, March 2004,\n              <http://www.rfc-editor.org/info/rfc3711>.\n\
    \   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n   \
    \           Description Protocol\", RFC 4566, DOI 10.17487/RFC4566,\n        \
    \      July 2006, <http://www.rfc-editor.org/info/rfc4566>.\n   [RFC4855]  Casner,\
    \ S., \"Media Type Registration of RTP Payload\n              Formats\", RFC 4855,\
    \ DOI 10.17487/RFC4855, February 2007,\n              <http://www.rfc-editor.org/info/rfc4855>.\n\
    \   [RFC5124]  Ott, J. and E. Carrara, \"Extended Secure RTP Profile for\n   \
    \           Real-time Transport Control Protocol (RTCP)-Based Feedback\n     \
    \         (RTP/SAVPF)\", RFC 5124, DOI 10.17487/RFC5124,\n              February\
    \ 2008, <http://www.rfc-editor.org/info/rfc5124>.\n   [RFC6562]  Perkins, C. and\
    \ JM. Valin, \"Guidelines for the Use of\n              Variable Bit Rate Audio\
    \ with Secure RTP\", RFC 6562,\n              DOI 10.17487/RFC6562, March 2012,\n\
    \              <http://www.rfc-editor.org/info/rfc6562>.\n   [RFC6838]  Freed,\
    \ N., Klensin, J., and T. Hansen, \"Media Type\n              Specifications and\
    \ Registration Procedures\", BCP 13,\n              RFC 6838, DOI 10.17487/RFC6838,\
    \ January 2013,\n              <http://www.rfc-editor.org/info/rfc6838>.\n   [RFC8083]\
    \  Perkins, C. and V. Singh, \"Multimedia Congestion Control:\n              Circuit\
    \ Breakers for Unicast RTP Sessions\", RFC 8083,\n              DOI 10.17487/RFC8083,\
    \ March 2017,\n              <http://www.rfc-editor.org/info/rfc8083>.\n   [RFC8085]\
    \  Eggert, L., Fairhurst, G., and G. Shepherd, \"UDP Usage\n              Guidelines\"\
    , RFC 8085, DOI 10.17487/RFC8085, March 2017,\n              <http://www.rfc-editor.org/info/rfc8085>.\n\
    \   [MELP]     Department of Defense Telecommunications Standard,\n          \
    \    \"Analog-to-Digital Conversion of Voice by 2,400 Bit/Second\n           \
    \   Mixed Excitation Linear Prediction (MELP)\", MIL-STD-3005,\n             \
    \ December 1999.\n   [MELPE]    North Atlantic Treaty Organization (NATO), \"\
    The 600 Bit/S,\n              1200 Bit/S and 2400 Bit/S NATO Interoperable Narrow\
    \ Band\n              Voice Coder\", STANAG No. 4591, January 2006.\n   [SCIP210]\
    \  National Security Agency, \"SCIP Signaling Plan\", SCIP-210,\n            \
    \  December 2007.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC4585]  Ott, J., Wenger, S., Sato, N., Burmeister,\
    \ C., and J. Rey,\n              \"Extended RTP Profile for Real-time Transport\
    \ Control\n              Protocol (RTCP)-Based Feedback (RTP/AVPF)\", RFC 4585,\n\
    \              DOI 10.17487/RFC4585, July 2006,\n              <http://www.rfc-editor.org/info/rfc4585>.\n\
    \   [RFC7201]  Westerlund, M. and C. Perkins, \"Options for Securing RTP\n   \
    \           Sessions\", RFC 7201, DOI 10.17487/RFC7201, April 2014,\n        \
    \      <http://www.rfc-editor.org/info/rfc7201>.\n   [RFC7202]  Perkins, C. and\
    \ M. Westerlund, \"Securing the RTP\n              Framework: Why RTP Does Not\
    \ Mandate a Single Media\n              Security Solution\", RFC 7202, DOI 10.17487/RFC7202,\n\
    \              April 2014, <http://www.rfc-editor.org/info/rfc7202>.\n   [RMCAT]\
    \    IETF, RTP Media Congestion Avoidance Techniques (rmcat)\n              Working\
    \ Group,\n              <https://datatracker.ietf.org/wg/rmcat/about/>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Victor Demjanenko, Ph.D.\n   VOCAL Technologies, Ltd.\n\
    \   520 Lee Entrance, Suite 202\n   Buffalo, NY  14228\n   United States of America\n\
    \   Phone: +1 716 688 4675\n   Email: victor.demjanenko@vocal.com\n   David Satterlee\n\
    \   VOCAL Technologies, Ltd.\n   520 Lee Entrance, Suite 202\n   Buffalo, NY \
    \ 14228\n   United States of America\n   Phone: +1 716 688 4675\n   Email: david.satterlee@vocal.com\n"
