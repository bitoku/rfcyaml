- contents:
  - '            The SEED Cipher Algorithm and Its Use with IPsec

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes the use of the SEED block cipher algorithm
    in\n   the Cipher Block Chaining Mode, with an explicit IV, as a\n   confidentiality
    mechanism within the context of the IPsec\n   Encapsulating Security Payload (ESP).\n"
  title: Abstract
- contents:
  - '1.  Introduction

    '
  - contents:
    - "1.1.  SEED\n   SEED is a national industrial association standard [TTASSEED]
      and is\n   widely used in South Korea for electronic commerce and financial\n
      \  services that are operated on wired and wireless communications.\n   SEED
      is a 128-bit symmetric key block cipher that has been developed\n   by KISA
      (Korea Information Security Agency) and a group of experts\n   since 1998.  The
      input/output block size of SEED is 128-bit and the\n   key length is also 128-bit.
      \ SEED has the 16-round Feistel structure.\n   A 128-bit input is divided into
      two 64-bit blocks, and the right 64-\n   bit block is an input to the round
      function with a 64-bit subkey that\n   is generated from the key scheduling.\n
      \  SEED is easily implemented in various software and hardware, and it\n   can
      be effectively adopted to a computing environment with restricted\n   resources,
      such as mobile devices and smart cards.\n   SEED is robust against known attacks
      including DC (Differential\n   cryptanalysis), LC (Linear cryptanalysis), and
      related key attacks.\n   SEED has gone through wide public scrutinizing procedures.
      \ It has\n   been evaluated and is considered cryptographically secure by credible\n
      \  organizations such as ISO/IEC JTC 1/SC 27 and Japan CRYPTREC\n   (Cryptography
      Research and Evaluation Committees)[ISOSEED][CRYPTREC].\n   The remainder of
      this document specifies the use of SEED within the\n   context of IPsec ESP.
      \ For further information on how the various\n   pieces of ESP fit together
      to provide security services, please refer\n   to [ARCH], [ESP], and [ROAD].\n"
    title: 1.1.  SEED
  - contents:
    - "1.2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHOULD\",
      \"SHOULD NOT\",\n   \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document
      (in uppercase,\n   as shown) are to be interpreted as described in RFC 2119
      [KEYWORDS].\n"
    title: 1.2.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  The SEED Cipher Algorithm\n   All symmetric block cipher algorithms share
    common characteristics\n   and variables, including mode, key size, weak keys,
    block size, and\n   rounds.  The following sections contain descriptions of the
    relevant\n   characteristics of SEED.\n   The algorithm specification and object
    identifiers are described in\n   [ISOSEED] [SEED].  The SEED homepage,\n   http://www.kisa.or.kr/seed/seed_eng.html,
    contains a wealth of\n   information about SEED, including a detailed specification,\n
    \  evaluation report, test vectors, and so on.\n"
  - contents:
    - "2.1.  Mode\n   NIST has defined 5 modes of operation for the Advanced Encryption\n
      \  Standard (AES) [AES] and other FIPS-approved ciphers [MODES]: CBC\n   (Cipher
      Block Chaining), ECB (Electronic Codebook), CFB (Cipher\n   FeedBack), OFB (Output
      FeedBack), and CTR (Counter).  The CBC mode is\n   well-defined and well-understood
      for symmetric ciphers, and is\n   currently required for all other ESP ciphers.
      \ This document\n   specifies the use of the SEED cipher in the CBC mode within
      ESP.\n   This mode requires an Initialization Vector (IV) that is the same\n
      \  size as the block size.  Use of a randomly generated IV prevents\n   generation
      of identical ciphertext from packets that have identical\n   data that spans
      the first block of the cipher algorithm's block size\n   The IV is XOR'd with
      the first plaintext block before it is\n   encrypted.  Then for successive blocks,
      the previous ciphertext block\n   is XOR'd with the current plaintext before
      it is encrypted.\n   More information on the CBC mode can be obtained in [MODES]\n
      \  [CRYPTO-S].  For use of the CBC mode in ESP with 64-bit ciphers,\n   please
      see [CBC].\n"
    title: 2.1.  Mode
  - contents:
    - "2.2.  Key Size and Numbers of Rounds\n   SEED supports 128-bit key and has
      the 16-round Feistel structure.\n"
    title: 2.2.  Key Size and Numbers of Rounds
  - contents:
    - "2.3.  Weak Keys\n   At the time this document was written, there were no known
      weak keys\n   for SEED.\n"
    title: 2.3.  Weak Keys
  - contents:
    - "2.4.  Block Size and Padding\n   SEED uses a block size of 16 octets (128 bits).\n
      \  Padding is required by SEED to maintain a 16-octet (128-bit)\n   blocksize.
      \ Padding MUST be added, as specified in [ESP], such that\n   the data to be
      encrypted (which includes the ESP Pad Length and Next\n   Header fields) has
      a length that is a multiple of 16 octets.\n   Because of the algorithm specific
      padding requirement, no additional\n   padding is required to ensure that the
      ciphertext terminates on a 4-\n   octet boundary (i.e., maintaining a 16-octet
      blocksize guarantees\n   that the ESP Pad Length and Next Header fields will
      be right aligned\n   within a 4-octet word).  Additional padding MAY be included,
      as\n   specified in [ESP], as long as the 16-octet blocksize is maintained.\n"
    title: 2.4.  Block Size and Padding
  - contents:
    - "2.5.  Performance\n   Performance figures of SEED are available at\n   http://www.kisa.or.kr/seed/seed_eng.html\n"
    title: 2.5.  Performance
  title: 2.  The SEED Cipher Algorithm
- contents:
  - "3.  ESP Payload\n   The ESP Payload is made up of the Initialization Vector(IV)
    of 16\n   octets followed by the encrypted payload.  Thus, the payload field,\n
    \  as defined in [ESP], is broken down according to the following\n   diagram:\n
    \     +---------------+---------------+---------------+---------------+\n      |
    \                                                              |\n      +               Initialization
    Vector (16 octets)               +\n      |                                                               |\n
    \     +---------------+---------------+---------------+---------------+\n      |
    \                                                              |\n      ~ Encrypted
    Payload (variable length, a multiple of 16 octets)  ~\n      |                                                               |\n
    \     +---------------------------------------------------------------+\n   The
    IV field MUST be the same size as the block size of the cipher\n   algorithm being
    used.  The IV MUST be chosen at random and MUST be\n   unpredictable.\n   Including
    the IV in each datagram ensures that decryption of each\n   received datagram
    can be performed, even when some datagrams are\n   dropped or re-ordered in transit.\n
    \  To avoid CBC encryption of very similar plaintext blocks in different\n   packets,
    implementations MUST NOT use a counter or other low-hamming\n   distance source
    for IVs.\n"
  title: 3.  ESP Payload
- contents:
  - "4.  Test Vectors\n   The first 2 test cases test SEED-CBC encryption.  Each test
    case\n   includes key, the plaintext, and the resulting ciphertext.  All data\n
    \  are hexadecimal numbers (not prefixed by \"0x\").\n   The last 4 test cases
    illustrate sample ESP packets using SEED-CBC\n   for encryption.  All data are
    hexadecimal numbers (not prefixed by\n   \"0x\").\n   Case #1    : Encrypting
    32 bytes (2 blocks) using SEED-CBC with\n                128-bit key\n   Key        :
    ed2401ad  22fa2559  91bafdb0  1fefd697\n   IV         : 93eb149f  92c9905b  ae5cd34d
    \ a06c3c8e\n   PlainText  : b40d7003  d9b6904b  35622750  c91a2457\n                5bb9a632
    \ 364aa26e  3ac0cf3a  9c9d0dcb\n   CipherText : f072c5b1  a0588c10  5af8301a  dcd91dd0\n
    \               67f68221  55304bf3  aad75ceb  44341c25\n   Case #2    : Encrypting
    64 bytes (4 blocks) using SEED-CBC with\n                128-bit key\n   Key        :
    88e34f8f  081779f1  e9f39437  0ad40589\n   IV         : 268d66a7  35a81a81  6fbad9fa
    \ 36162501\n   PlainText  : d76d0d18  327ec562  b15e6bc3  65ac0c0f\n                8d41e0bb
    \ 938568ae  ebfd92ed  1affa096\n                394d20fc  5277ddfc  4de8b0fc  e1eb2b93\n
    \               d4ae40ef  4768c613  b50b8942  f7d4b9b3\n   CipherText : a293eae9
    \ d9aebfac  37ba714b  d774e427\n                e8b706d7  e7d9a097  228639e0  b62b3b34\n
    \               ced11609  cef2abaa  ec2edf97  9308f379\n                c31527a8
    \ 267783e5  cba35389  82b48d06\n   Case #3  : Sample transport-mode ESP packet
    (ping 192.168.123.100)\n   Key                 : 90d382b4 10eeba7a  d938c46c ec1a82bf\n
    \  SPI                 : 4321\n   Source address      : 192.168.123.3\n   Destination
    address : 192.168.123.100\n   Sequence number     : 1\n   IV                  :
    e96e8c08  ab465763  fd098d45  dd3ff893\n   Original packet :\n   IP header (20
    bytes) : 45000054 08f20000 4001f9fe  c0a87b03  c0a87b64\n   Data (64 bytes) :\n
    \  08000ebd  a70a0000  8e9c083d  b95b0700\n   08090a0b  0c0d0e0f  10111213  14151617\n
    \  18191a1b  1c1d1e1f  20212223  24252627\n   28292a2b  2c2d2e2f  30313233  34353637\n
    \  Augment data with :\n   Padding     : 01020304  05060708  090a0b0c  0d0e\n
    \  Pad length  : 0e\n   Next header : 01 (ICMP)\n   Pre-encryption Data with padding,
    pad length and next header(80\n   bytes):\n   08000ebd  a70a0000  8e9c083d  b95b0700\n
    \  08090a0b  0c0d0e0f  10111213  14151617\n   18191a1b  1c1d1e1f  20212223  24252627\n
    \  28292a2b  2c2d2e2f  30313233  34353637\n   01020304  05060708  090a0b0c  0d0e0e01\n
    \  Post-encryption packet with SPI, Sequence number, IV :\n   IP Header : 45000054
    08f20000 4001f9fe  c0a87b03  c0a87b64\n   SPI/Seq # : 00004321 00000001\n   IV
    \       : e96e8c08  ab465763  fd098d45  dd3ff893\n   Encrypted Data (80 bytes)
    :\n   e7ebaa03  cf45ef09  021b3011  b40d3769\n   be96ebae  cd4222f6  b6f84ce5
    \ b2d5cdd1\n   60eb6b0e  5a47d16a  501a4d10  7b2d7cc8\n   ab86ba03  9a000972  66374fa8
    \ f87ee0fb\n   ef3805db  faa144a2  334a34db  0b0f81ca\n   Case #4 : Sample transport-mode
    ESP packet\n   (ping -p 77 -s 20 192.168.123.100)\n   Key : 90d382b4 10eeba7a
    d938c46c ec1a82bf\n   SPI                 : 4321\n   Source address      : 192.168.123.3\n
    \  Destination address : 192.168.123.100\n   Sequence number     : 8\n   IV :
    69d08df7 d203329d b093fc49 24e5bd80\n   Original packet:\n   IP header (20 bytes)
    : 45000030 08fe0000 4001fa16 c0a87b03 c0a87b64\n   Data (28 bytes) :\n   0800b5e8
    a80a0500 a69c083d 0b660e00 77777777 77777777 77777777\n   Augment data with :\n
    \  Padding     : 0102\n   Pad length  : 02\n   Next header : 01 (ICMP)\n   Pre-encryption
    Data with padding, pad length and\n   next header(32 bytes):\n   0800b5e8 a80a0500
    a69c083d 0b660e00\n   77777777 77777777 77777777 01020201\n   Post-encryption
    packet with SPI, Sequence number, IV  :\n   IP header : 4500004c 08fe0000 4032f9c9
    c0a87b03 c0a87b64\n   SPI/Seq # : 00004321 00000008\n   IV        : 69d08df7 d203329d
    b093fc49 24e5bd80\n   Encrypted Data (32 bytes) :\n   b9ad6e19  e9a6a2fa  02569160
    \ 2c0af541\n   db0b0807  e1f660c7  3ae2700b  5bb5efd1\n   Case #5 : Sample tunnel-mode
    ESP packet (ping 192.168.123.200)\n   Key     : 01234567  89abcdef  01234567  89abcdef\n
    \  SPI     : 8765\n   Source address      : 192.168.123.3\n   Destination address
    : 192.168.123.200\n   Sequence number     : 2\n   IV      : f4e76524  4f6407ad
    \ f13dc138  0f673f37\n   Original packet :\n   IP header (20 bytes) : 45000054
    09040000 4001f988 c0a87b03 c0a87bc8\n   Data (64 bytes) :\n   08009f76  a90a0100
    \ b49c083d  02a20400\n   08090a0b  0c0d0e0f  10111213  14151617\n   18191a1b  1c1d1e1f
    \ 20212223  24252627\n   28292a2b  2c2d2e2f  30313233  34353637\n   Augment data
    with :\n   Padding     : 01020304 05060708 090a\n   Pad length  : 0a\n   Next
    header : 04 (IP-in-IP)\n   Pre-encryption Data with original IP header, padding,
    pad length and\n   next header (96 bytes) :\n   45000054  09040000  4001f988  c0a87b03\n
    \  c0a87bc8  08009f76  a90a0100  b49c083d\n   02a20400  08090a0b  0c0d0e0f  10111213\n
    \  14151617  18191a1b  1c1d1e1f  20212223\n   24252627  28292a2b  2c2d2e2f  30313233\n
    \  34353637  01020304  05060708  090a0a04\n   Post-encryption packet with SPI,
    Sequence number, IV :\n   IP header : 4500008c  09050000  4032f91e  c0a87b03  c0a87bc8\n
    \  SPI/Seq # : 00008765  00000002\n   IV : f4e76524  4f6407ad  f13dc138  0f673f37\n
    \  Encrypted Data (96 bytes):\n   2638aa7b  05e71b54  9348082b  67b47b26\n   c565aed4
    \ 737f0bcb  439c0f00  73e7913c\n   3c8a3e4f  5f7a5062  003b78ed  7ca54a08\n   c7ce047d
    \ 5bec14e4  8cba1005  32a12097\n   8d7f5503  204ef661  729b4ea1  ae6a9178\n   59a5caac
    \ 46e810bd  7875bd13  d6f57b3d\n   Case #6 : Sample tunnel-mode ESP packet\n   (ping
    -p ff -s 40 192.168.123.200)\n   Key : 01234567  89abcdef  01234567  89abcdef\n
    \  SPI : 8765\n   Source address      : 192.168.123.3\n   Destination address
    : 192.168.123.200\n   Sequence number     : 5\n   IV : 85d47224  b5f3dd5d  2101d4ea
    \ 8dffab22\n   Original packet :\n   IP header (20 bytes) :\n   45000044  090c0000
    \ 4001f990  c0a87b03  c0a87bc8\n   Data (48 bytes) :\n   0800d63c  aa0a0200  c69c083d
    \ a3de0300\n   ffffffff  ffffffff  ffffffff  ffffffff\n   ffffffff  ffffffff  ffffffff
    \ ffffffff\n   Augment data with :\n   Padding     : 01020304  05060708  090a\n
    \  Pad length  : 0a\n   Next header : 04 (IP-in-IP)\n   Pre-encryption Data with
    original IP header, padding, pad length and\n   next header (80 bytes):\n   45000044
    \ 090c0000  4001f990  c0a87b03\n   c0a87bc8  0800d63c  aa0a0200  c69c083d\n   a3de0300
    \ ffffffff  ffffffff  ffffffff\n   ffffffff  ffffffff  ffffffff  ffffffff\n   ffffffff
    \ 01020304  05060708  090a0a04\n   Post-encryption packet with SPI, Sequence number,
    IV :\n   IP header : 4500007c  090d0000  4032f926  c0a87b03  c0a87bc8\n   SPI/Seq
    # : 00008765  00000005\n   IV : 85d47224  b5f3dd5d  2101d4ea  8dffab22\n   Encrypted
    Data (80 bytes) :\n   311168e0  bc36ac4e  59802bd5  192c5734\n   8f3d29c8  90bab276
    \ e9db4702  91f79ac7\n   79571929  c170f902  ffb2f08b  d448f782\n   31671414  ff29b7e0
    \ 168e1c87  09ba2b67\n   a56e0fbc  4ff6a936  d859ed57  6c16ef1b\n"
  title: 4.  Test Vectors
- contents:
  - "5.  Interaction with IKE\n   This section describes the use of IKE [IKE] to establish
    IPsec ESP\n   security associations (SAs) that employ SEED in CBC mode.\n"
  - contents:
    - "5.1.  Phase 1 Identifier\n   For Phase 1 negotiations, the object identifier
      of SEED-CBC is\n   defined in [SEED].\n   algorithm OBJECT IDENTIFIER ::= {
      iso(1) member-body(2) korea(410)\n   kisa(200004) algorithm(1) }\n   id-seedCBC
      OBJECT IDENTIFIER ::= { algorithm seedCBC(4) }\n"
    title: 5.1.  Phase 1 Identifier
  - contents:
    - "5.2.  Phase 2 Identifier\n   For Phase 2 negotiations, IANA has assigned an
      ESP Transform\n   Identifier of (21) for ESP_SEED_CBC.\n"
    title: 5.2.  Phase 2 Identifier
  - contents:
    - "5.3.  Key Length Attribute\n   Since the SEED supports 128-bit key lengths,
      the Key Length attribute\n   is set with 128 bits.\n"
    title: 5.3.  Key Length Attribute
  - contents:
    - "5.4.  Hash Algorithm Considerations\n   HMAC-SHA-1 [HMAC-SHA] and HMAC-MD5
      [HMAC-MD5] are currently\n   considered of sufficient strength to serve both
      as IKE generators of\n   128-bit SEED keys and as ESP authenticators for SEED
      encryption using\n   128-bit keys.\n"
    title: 5.4.  Hash Algorithm Considerations
  title: 5.  Interaction with IKE
- contents:
  - "6.  Security Considerations\n   No security problem has been found on SEED.  SEED
    is secure against\n   all known attacks including Differential cryptanalysis,
    Linear\n   cryptanalysis, and related key attacks.  The best known attack is\n
    \  only an exhaustive search for the key (by [CRYPTREC]).  For further\n   security
    considerations, the reader is encouraged to read [CRYPTREC],\n   [ISOSEED], and
    [SEED-EVAL].\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   IANA has assigned ESP Transform Identifier (21) to
    ESP_SEED_CBC.\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Acknowledgments\n   The authors want to thank Ph.D Haesuk Kim of Future Systems
    Inc. and\n   Brian Kim of OULLIM Information Technology Inc. for providing expert\n
    \  advice on Test Vector examples.\n"
  title: 8.  Acknowledgments
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [CBC]       Pereira, R. and R. Adams, \"The
      ESP CBC-Mode Cipher\n               Algorithms\", RFC 2451, November 1998.\n
      \  [ESP]       Kent, S. and R. Atkinson, \"IP Encapsulating Security\n               Payload
      (ESP)\", RFC 2406, November 1998.\n   [IKE]       Harkins, D. and D. Carrel,
      \"The Internet Key Exchange\n               (IKE)\", RFC 2409, November 1998.\n
      \  [KEYWORDS]  Bradner, S., \"Key words for use in RFCs to Indicate\n               Requirement
      Levels\", BCP 14, RFC 2119, March 1997.\n   [SEED]      Park, J., Lee, S., Kim,
      J., and J. Lee, \"The SEED\n               Encryption Algorithm\", RFC 4009,
      February 2005.\n   [TTASSEED]  Telecommunications Technology Association (TTA),
      South\n               Korea, \"128-bit Symmetric Block Cipher (SEED)\", TTAS.KO-\n
      \              12.0004, September, 1998 (In Korean)\n               http://www.tta.or.kr/English/new/main/index.htm\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative Reference\n   [AES]       NIST, FIPS PUB 197, \"Advanced
      Encryption Standard(AES),\n               November 2001.\n               http://csrc.nist.gov/publications/fips/fips197/fips-197.\n
      \              {ps,pdf}\n   [ARCH]      Kent, S. and R. Atkinson, \"Security
      Architecture for the\n               Internet Protocol\", RFC 2401, November
      1998.\n   [CRYPTO-S]  Schneier, B., \"Applied Cryptography Second Edition\",
      John\n               Wiley & Sons, New York, NY, 1995, ISBN 0-471-12845-7.\n
      \  [CRYPTREC]  Information-technology Promotion Agency (IPA), Japan,\n               CRYPTREC.
      \"SEED Evaluation Report\", February, 2002\n               http://www.kisa.or.kr/seed/seed_eng.html\n
      \  [HMAC-MD5]  Madson, C. and R. Glenn, \"The Use of HMAC-MD5-96 within\n               ESP
      and AH\", RFC 2403, November 1998.\n   [HMAC-SHA]  Madson, C. and R. Glenn,
      \"The Use of HMAC-SHA-1-96 within\n               ESP and AH\", RFC 2404, November
      1998.\n   [ISOSEED]   ISO/IEC JTC 1/SC 27 N3979, \"IT Security techniques -\n
      \              Encryption Algorithms - Part3 : Block ciphers\", June\n               2004.\n
      \  [MODES]     Symmetric Key Block Cipher Modes of Operation,\n               http://www.nist.gov/modes/.\n
      \  [ROAD]      Thayer, R., N. Doraswamy and R. Glenn, \"IP Security\n               Document
      Roadmap\", RFC 2411, November 1998.\n   [SEED-EVAL] KISA, \"Self Evaluation
      Report\",\n               http://www.kisa.or.kr/seed/data/Document_pdf/\n               SEED_Self_Evaluation.pdf\"\n"
    title: 9.2.  Informative Reference
  title: 9.  References
- contents:
  - "Authors' Address\n   Hyangjin Lee\n   Korea Information Security Agency\n   Phone:
    +82-2-405-5446\n   Fax  : +82-2-405-5319\n   EMail : jiinii@kisa.or.kr\n   Jaeho
    Yoon\n   Korea Information Security Agency\n   Phone: +82-2-405-5434\n   Fax  :
    +82-2-405-5219\n   EMail : jhyoon@kisa.or.kr\n   Seoklae Lee\n   Korea Information
    Security Agency\n   Phone: +82-2-405-5230\n   Fax  : +82-2-405-5219\n   EMail
    : sllee@kisa.or.kr\n   Jaeil Lee\n   Korea Information Security Agency\n   Phone:
    +82-2-405-5200\n   Fax  : +82-2-405-5219\n   EMail: jilee@kisa.or.kr\n"
  title: Authors' Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
