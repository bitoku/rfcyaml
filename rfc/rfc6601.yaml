- title: __initial_text__
  contents:
  - "  Generic Connection Admission Control (GCAC) Algorithm Specification\n     \
    \                     for IP/MPLS Networks\n"
- title: Abstract
  contents:
  - "Abstract\n   This document presents a generic connection admission control (GCAC)\n\
    \   reference model and algorithm for IP-/MPLS-based networks.  Service\n   provider\
    \ (SP) IP/MPLS networks need an MPLS GCAC mechanism, as one\n   motivational example,\
    \ to reject Voice over IP (VoIP) calls when\n   additional calls would adversely\
    \ affect calls already in progress.\n   Without MPLS GCAC, connections on congested\
    \ links will suffer\n   degraded quality.  The MPLS GCAC algorithm can be optionally\n\
    \   implemented in vendor equipment and deployed by service providers.\n   MPLS\
    \ GCAC interoperates between vendor equipment and across multiple\n   service\
    \ provider domains.  The MPLS GCAC algorithm uses available\n   standard mechanisms\
    \ for MPLS-based networks, such as RSVP, Diffserv-\n   aware MPLS Traffic Engineering\
    \ (DS-TE), Path Computation Element\n   (PCE), Next Steps in Signaling (NSIS),\
    \ Diffserv, and OSPF.  The MPLS\n   GCAC algorithm does not include aspects of\
    \ CAC that might be\n   considered vendor proprietary implementations, such as\
    \ detailed path\n   selection mechanisms.  MPLS GCAC functions are implemented\
    \ in a\n   distributed manner to deliver the objective Quality of Service (QoS)\n\
    \   for specified QoS constraints.  The objective is that the source is\n   able\
    \ to compute a source route with high likelihood that via-elements\n   along the\
    \ selected path will in fact admit the request.  In some\n   cases (e.g., multiple\
    \ Autonomous Systems (ASes)), this objective\n   cannot always be met, but this\
    \ document summarizes methods that\n   partially meet this objective.  MPLS GCAC\
    \ is applicable to any\n   service or flow that must meet an objective QoS (delay,\
    \ jitter,\n   packet loss rate) for a specified quantity of traffic.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6601.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Conventions Used in This Document ..........................5\n  \
    \ 2. MPLS GCAC Reference Model and Algorithm Summary .................6\n    \
    \  2.1. Inputs to MPLS GCAC ........................................8\n      2.2.\
    \ MPLS GCAC Algorithm Summary ................................9\n   3. MPLS GCAC\
    \ Algorithm ............................................12\n      3.1. Bandwidth\
    \ Allocation Parameters ...........................12\n      3.2. GCAC Algorithm\
    \ ............................................15\n   4. Security Considerations\
    \ ........................................18\n   5. Acknowledgements ...............................................20\n\
    \   6. Normative References ...........................................20\n  \
    \ 7. Informative References .........................................21\n   Appendix\
    \ A: Example MPLS GCAC Implementation Including Path\n               Selection,\
    \ Bandwidth Management, QoS Signaling, and\n               Queuing ...............................................24\n\
    \      A.1 Example of Path Selection and Bandwidth Management\n          Implementation\
    \ .............................................26\n      A.2 Example of QoS Signaling\
    \ Implementation ....................32\n      A.3 Example of Queuing Implementation\
    \ ..........................34\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document presents a generic connection admission control\
    \ (GCAC)\n   reference model and algorithm for IP-/MPLS-based networks.  Service\n\
    \   provider (SP) IP/MPLS networks need an MPLS GCAC mechanism, as one\n   motivational\
    \ example, to reject Voice over IP (VoIP) calls when\n   additional calls would\
    \ adversely affect calls already in progress.\n   Without MPLS GCAC, connections\
    \ on congested links will suffer\n   degraded quality.  Given the capital constraints\
    \ in some SP networks,\n   over-provisioning is not acceptable.  MPLS GCAC supports\
    \ all access\n   technologies, protocols, and services while meeting performance\n\
    \   objectives with a cost-effective solution and operates across routing\n  \
    \ areas, autonomous systems, and service provider boundaries.\n   This document\
    \ defines an MPLS GCAC reference model, algorithm, and\n   functions implemented\
    \ in one or more types of network elements in\n   different domains that operate\
    \ together in a distributed manner to\n   deliver the objective QoS for specified\
    \ QoS constraints, such as\n   bandwidth.  With MPLS GCAC, the source router/server\
    \ is able to\n   compute a source route with high likelihood that via-elements\
    \ along\n   the selected path will in fact admit the request.  MPLS GCAC includes\n\
    \   nested CAC actions, such as RSVP aggregation, nested RSVP - Traffic\n   Engineering\
    \ (RSVP-TE) for scaling between provider edge (PE) routers,\n   and pseudowire\
    \ (PW) CAC within traffic-engineered tunnels.  MPLS GCAC\n   focuses on MPLS and\
    \ PW-level CAC functions, rather than application-\n   level CAC functions.\n\
    \   MPLS GCAC is applicable to any service or flow that must meet an\n   objective\
    \ QoS (latency, delay variation, loss) for a specified\n   quantity of traffic.\
    \  This would include, for example, most real-\n   time/RTP services (voice, video,\
    \ etc.) as well as some non-real-time\n   services.  Real-time/RTP services are\
    \ typically interactive,\n   relatively persistent traffic flows.  Other services\
    \ subject to MPLS\n   GCAC could include, for example, manually provisioned label\
    \ switched\n   paths (LSPs) or PWs and automatic bandwidth assignment for\n  \
    \ applications that automatically build LSP meshes among PE routers.\n   MPLS\
    \ GCAC is applicable to both access and backbone networks, for\n   example, to\
    \ slow-speed access networks and to broadband DSL, cable,\n   and fiber access\
    \ networks.\n   This document is Experimental.  It is intended that service providers\n\
    \   and vendors experiment with the GCAC concept and the algorithm\n   described\
    \ in this document in a controlled manner to determine the\n   benefits of such\
    \ a mechanism.  That is, they should first experiment\n   with the GCAC algorithm\
    \ in their laboratories and test networks.\n   When testing in live networks,\
    \ they should install the GCAC algorithm\n   on selected routers in only part\
    \ of their network, and they should\n   carefully monitor the effects.  The installation\
    \ should be managed\n   such that the routers can quickly be switched back to\
    \ normal\n   operation if any problem is seen.\n   Since application of GCAC is\
    \ most likely in Enterprise VPNs and/or\n   internal TE infrastructure, it is\
    \ RECOMMENDED that the experiment be\n   conducted in such applications, and it\
    \ is NOT RECOMMENDED that the\n   experiment be conducted in the Internet.  If\
    \ possible, the\n   experimental configuration will address interoperability issues,\
    \ such\n   as, for example, the use of different constraint models across\n  \
    \ different traffic domains.\n   The experiment can monitor various measures of\
    \ quality of service\n   before and after deployment of GCAC, particularly when\
    \ the\n   experimental network is under stress during an overload or failure\n\
    \   condition.  These quality-of-service measures might include, for\n   example,\
    \ dropped packet rate and end-to-end packet delay.  The\n   results of such experiments\
    \ may be fed back to the IETF community to\n   refine this document and to move\
    \ it to the Standards Track (probably\n   within the MPLS working group) if the\
    \ experimental results are\n   positive.\n   It should be noted that the algorithm\
    \ might have negative effects on\n   live deployments if the experiment is a failure.\
    \  Effects might\n   include blockage of traffic that would normally be handled\
    \ or\n   congestion caused by allowing excessive traffic on a link.  For these\n\
    \   reasons, experimentation in production networks needs to be treated\n   with\
    \ caution as described above and should only be carried out after\n   successful\
    \ simulation and experimentation in test environments.  In\n   Section 2, we describe\
    \ the MPLS GCAC reference model, and in Section\n   3, we specify the MPLS GCAC\
    \ algorithm based on the principles in the\n   reference model and requirements.\
    \  Appendix A gives an example of\n   MPLS GCAC implementation including path\
    \ selection, bandwidth\n   management, QoS signaling, and queuing implementation.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  MPLS GCAC Reference Model and Algorithm Summary
  contents:
  - "2.  MPLS GCAC Reference Model and Algorithm Summary\n   Figure 1 illustrates\
    \ the reference model for the MPLS GCAC algorithm:\n                         \
    \          ,-.        ,-.\n                               ,--+   `--+--'-   --'\\\
    \n          +----+_____+------+  {   +----+   +----+   `. +------+\n         \
    \ |GEF1|     |      |______| P  |___| P  |______|      |\n          |    |-----|\
    \ PE1  |  {   +----+   +----+    /+| PE2  |\n          |    |     |      |==========================>|\
    \ ASBR |\n          +-:--+     |      |<==========================|      |\n \
    \          _|..__    +------+  {  DS-TE/MAR Tunnels  ;  +------+\n         _,'\
    \    \\-|          ./                    -'._    !|\n         | Access  \\   \
    \      /        +----+           \\,  !|\n         | Network   |       \\_   \
    \    | P  |             | !|\n         |          /          `|     +----+   \
    \         /  !|\n         `--.  ,.__,|           |    IP/MPLS Network   /   !|\n\
    \            '`'  ''             ' .._,,'`.__   _/ '---'    !|\n             |\
    \                             '`'''           !|\n             C1            \
    \                                !|\n                                    ,-. \
    \       ,-.         !|\n                               ,--+   `--+--'-   --'\\\
    \      !|\n          +----+_____+------+  {   +----+   +----+   `. +------+\n\
    \          |GEF2|     |      |______| P  |___| P  |______|      |\n          |\
    \    |-----| PE4  |  {   +----+   +----+    /+| PE3  |\n          |    |     |\
    \      |==========================>| ASBR |\n          +-:--+     |      |<==========================|\
    \      |\n           _|..__    +------+  {  DS-TE/MAM Tunnels  ;  +------+\n \
    \        _,'    \\-|          ./                    -'._\n         | Access  \\\
    \         /        +----+           \\,\n         | Network   |       \\_    \
    \   | P  |             |\n         |          /          `|     +----+       \
    \     /\n         `--.  ,.__,|           |    IP/MPLS Network   /\n          \
    \  '`'  ''             ' .._,,'`.__   _/ '---'\n             |               \
    \              '`'''\n             C2\n      CUSTOMER I/F PARAMETERS: BW, QoS,\
    \ CoS, priority\n      NOTE: PE, P, ASBR, GEF elements all support GCFs\n    \
    \  LEGEND:\n      ---------\n      ASBR:  Autonomous System Border Router\n  \
    \    BW:    bandwidth\n      CoS:   class of service\n      DS-TE: Diffserv-aware\
    \ MPLS Traffic Engineering\n      GCAC:  generic connection admission control\n\
    \      GCF:   GCAC core function\n      GEF:   GCAC edge function\n      I/F:\
    \   interface\n      MAM:   Maximum Allocation Model\n      MAR:   Maximum Allocation\
    \ with Reservation\n      P:     provider router\n      PE:    provider edge router\n\
    \      ---    connection signaling\n      ___    bearer/media flows\n        \
    \            Figure 1:  MPLS GCAC Reference Model\n   MPLS GCAC is applicable\
    \ to any service or flow for which MPLS GCAC is\n   required to meet a given QoS.\
    \  As such, the reference model applies\n   to most real-time/RTP services (voice,\
    \ video, etc.) as well as some\n   non-real-time services.  Real-time/RTP services\
    \ are typically\n   interactive, relatively persistent traffic flows.  Non-real-time\n\
    \   applications subject to MPLS GCAC could include, for example,\n   manually\
    \ provisioned LSPs or PWs and automatic bandwidth assignment\n   for applications\
    \ that automatically build LSP meshes among PE\n   routers.  The reference model\
    \ also applies to MPLS GCAC when MPLS is\n   used in access networks, which include,\
    \ for example, slow-speed\n   access networks and broadband DSL, cable, and fiber\
    \ access networks.\n   Endpoints will be IP/PBXs (Private Branch Exchanges) and\
    \ individual-\n   usage SIP/RTP end devices (hard and soft SIP phones, Integrated\n\
    \   Access Devices (IADs)).  This traffic will enter and leave the core\n   via\
    \ possibly bandwidth-constrained access networks, which may also be\n   MPLS aware\
    \ but may use some other admission control technology.\n   The basic elements\
    \ considered in the reference model are the MPLS\n   GCAC edge function (GEF),\
    \ GCAC core functions (GCFs), the PE routers,\n   Autonomous System Border Routers\
    \ (ASBRs), and provider (P) routers.\n   As illustrated in Figure 1, the GEF interfaces\
    \ to the application at\n   the source and destination PE, and the GCF exists\
    \ at the PE, P, and\n   ASBR routers.  GEF has an end-to-end focus and deals with\
    \ whether\n   individual connection requests fit within an MPLS tunnel, and GCF\
    \ has\n   a hop-by-hop focus and deals with whether an MPLS tunnel can be\n  \
    \ established across specific core network elements on a path.  The GEF\n   functionality\
    \ may be implemented in the PE, ASBR, or a stand-alone\n   network element.  The\
    \ source/destination routers (or external devices\n   through a router interface)\
    \ support both GEF and GCF, while internal\n   routers (or external devices through\
    \ a router interface) support GCF.\n   In Figure 1, the GEF handles both signaling\
    \ and bearer control.\n"
- title: 2.1.  Inputs to MPLS GCAC
  contents:
  - "2.1.  Inputs to MPLS GCAC\n   Inputs to the GEF and GCF include the following,\
    \ where most are\n   inputs to both GEF and GCF, except as noted.  Most of the\
    \ parameters\n   apply to the specific flow/LSP being calculated, while some\n\
    \   parameters, such as request type, apply to the calculation method.\n   Required\
    \ inputs are marked with (*); all other inputs are optional:\n   Traffic Description\n\
    \      * Bandwidth per DS-TE class type [RFC4124] (GEF, GCF)\n      * Bandwidth\
    \ for LSP from [RFC3270] (GEF, GCF)\n      * Aggregated RSVP bandwidth requirements\
    \ from [RFC4804] (GEF)\n      Variance Factor (GEF, GCF)\n   Class of Service\
    \ (CoS) and Quality of Service (QoS)\n      * Class Type (CT) from [RFC4124] (GEF,\
    \ GCF)\n      Signaled or configured Traffic Class (TC) [RFC5462] to Per Hop\n\
    \         Behavior (PHB) mapping from [RFC3270] (GEF, GCF)\n      Signaled or\
    \ configured PHB from [RFC3270] (GEF, GCF)\n      QoS requirements from NSIS/Y.1541\
    \ [RFC5971][RFC5974][RFC5975]\n         [RFC5976] (GEF)\n   Priority\n      Admission\
    \ priority (high, normal, best effort) from NSIS/Y.1541\n         [RFC5971][RFC5974][RFC5975][RFC5976]\
    \ (GEF, GCF)\n      Preemption priority from [RFC4124] (GEF, GCF)\n   Request\
    \ type\n      Primary tunnel (GEF, GCF)\n      Backup tunnel and fraction of capacity\
    \ reserved for backup (GEF,\n         GCF)\n   Oversubscription method (see [RFC3270])\n\
    \      Over/undersubscribe requested capacity (GEF, GCF)\n      Over/undersubscribe\
    \ available bandwidth (GEF, GCF)\n   These inputs can be received by the GEF and\
    \ GCF from a signaling\n   interface (such as SIP or H.323), RSVP, or an NMS.\
    \  They can also be\n   derived from measured traffic levels or from elsewhere.\n"
- title: 2.2.  MPLS GCAC Algorithm Summary
  contents:
  - "2.2.  MPLS GCAC Algorithm Summary\n   Figure 1 is a reference model for MPLS\
    \ GCAC and illustrates the GEF\n   to GEF MPLS GCAC algorithm to determine whether\
    \ there is sufficient\n   bandwidth to complete a connection.  The originating\
    \ GEF receives a\n   connection request including the above input parameters over\
    \ the\n   input interface, for example, via an RSVP bandwidth request as\n   specified\
    \ in [RFC4804].  The GEF a) determines whether there is\n   enough bandwidth on\
    \ the route between the originating and terminating\n   GEFs via routing and signaling\
    \ communication with the GCFs at the P,\n   PE, and ASBR network elements along\
    \ the path to accommodate the\n   connection, b) communicates the accept/reject\
    \ decision on the input\n   interface for the connection request, and c) keeps\
    \ account of network\n   resource allocations by tracking bandwidth use and allocations\
    \ per\n   CoS.  Optionally, the GEF may dynamically adjust the tunnel size by\n\
    \   signaling communication with the GCFs at nodes along the candidate\n   paths.\
    \  For example, the GEF could a) maintain per-CoS tunnel\n   capacity based on\
    \ aggregated connection requests and respond on a\n   connection-by-connection\
    \ basis based on the available capacity, b)\n   periodically adjust the tunnel\
    \ capacity upward, when needed, and\n   downward when spare capacity exists in\
    \ the tunnel, and c) use a 'make\n   before break' mechanism to adjust tunnel\
    \ capacity in order to\n   minimize disruption to the bearer traffic.\n   In the\
    \ reference model, DS-TE [RFC4124] tunnels are configured\n   between the GEFs\
    \ based on the traffic forecast and current network\n   utilization.  These guaranteed\
    \ bandwidth DS-TE tunnels are created\n   using RSVP-TE [RFC3209].  DS-TE bandwidth\
    \ constraints models are\n   applied uniformly within each domain, such as the\
    \ Maximum Allocation\n   with Reservation (MAR) Bandwidth Constraints Model [RFC4126],\
    \ the\n   Maximum Allocation Model (MAM) [RFC4125], and the Russian Dolls Model\n\
    \   (RDM) [RFC4127].  An IGP such as OSPF or IS-IS is used to advertise\n   bandwidth\
    \ availability by CT for use by the GCF to determine MPLS\n   tunnel bandwidth\
    \ allocation and admission on core (backbone) links.\n   These DS-TE tunnels are\
    \ configured based on the forecasted traffic\n   load, and when needed, LSPs for\
    \ different CTs can take different\n   paths.\n   As described in Section 3, the\
    \ unreserved link bandwidth on CTc on\n   link k (ULBCck) is the only bandwidth\
    \ allocation parameter that must\n   be available to the MPLS GCAC algorithm.\
    \  In the case that a\n   connection is set up across multiple service provider\
    \ networks, i.e.,\n   across multiple routing domains/autonomous systems (ASes),\
    \ there are\n   several options to enable MPLS GCAC to be implemented:\n   1.\
    \  Use [OIF-E-NNI] to advertise ULBCck parameters to the originating\n       GEF,\
    \ for the full topology of adjacent domains/areas/ASes, as\n       described in\
    \ Section 3.3.2.1.2 of [OIF-E-NNI].  Note that the\n       option of abstract\
    \ node summarization described in [OIF-E-NNI]\n       will not suffice since the\
    \ process of summarization results in\n       loss of topology and capacity usage\
    \ information.  In this manner,\n       the originating GEF can implement the\
    \ MPLS GCAC algorithm\n       described in Section 3 across multiple domains/areas/ASes.\n\
    \   2.  Use [BGP-TE] to advertise ULBCck parameters via BGP to the\n       originating\
    \ GEF for the full topology of adjacent\n       domains/areas/ASes.  In this manner,\
    \ the originating GEF can\n       implement the MPLS GCAC algorithm described\
    \ in Section 3 across\n       multiple domains/areas/ASes.  However, network providers\
    \ may be\n       reluctant to divulge full topology and capacity usage information\n\
    \       to other providers.  Furthermore, [BGP-TE] was never intended to\n   \
    \    provide full TE topology distribution across ASBRs.  Such a\n       mechanism\
    \ would be neither stable nor scalable.\n   3.  Use individual AS control and\
    \ MPLS crankback [RFC4920] to retain\n       originating GEF control.  For example,\
    \ in Figure 1, if a\n       connection crosses the two ASes shown (call them AS1\
    \ and AS2),\n       the source GEF1 applies the GCAC algorithm described in Section\
    \ 3\n       to the links in AS1, that is, between PE1 and PE2/ASBR in Figure\n\
    \       1.  Then, in AS2, the GCF in PE3/ASBR applies the MPLS GCAC\n       algorithm\
    \ to the links in AS2, that is, between PE3 and PE4 in\n       Figure 1.  If the\
    \ flow is rejected in AS2, crankback signaling is\n       used to inform GEF1.\
    \  In routing a connection across multiple\n       ASes, e.g., across AS1-->AS2-->AS3,\
    \ if the flow is rejected, say\n       in AS2, the originating GEF1 can seek an\
    \ alternate route, perhaps\n       AS1-->AS4-->AS3.  This option does not achieve\
    \ full originating\n       GEF control with the desired full topology visibility\
    \ across ASes\n       but avoids possible issues with obtaining full topology\n\
    \       visibility across ASes.\n   4.  Use Path Computation Elements (PCEs) [RFC4655]\
    \ across multiple\n       ASes.  PCEs could potentially execute the GCAC algorithm\
    \ within\n       each AS and communicate/interwork across domains to determine\n\
    \       which high-level path can supply the requested bandwidth.\n   In the reference\
    \ model, the GEFs implement RSVP aggregation [RFC4804]\n   for scalability.  The\
    \ GEF RSVP aggregator keeps a running total of\n   bandwidth usage on the DS-TE\
    \ tunnel, adding the bandwidth\n   requirements during connection setup and subtracting\
    \ during\n   connection teardown.  The aggregator determines whether or not there\n\
    \   is sufficient bandwidth for the connection from that originating GEF\n   to\
    \ the destination GEF.  The destination GEF also checks whether\n   there is enough\
    \ bandwidth on the DS-TE tunnel from the destination\n   GEF to the originating\
    \ GEF.  The aggregate bandwidth usage on the DS-\n   TE tunnel is also available\
    \ to the DS-TE bandwidth constraints model.\n   If the available bandwidth is\
    \ insufficient, then the GEF sends a PATH\n   message through the tunnel to the\
    \ other end, requesting bandwidth\n   using GCFs, and if successful, the source\
    \ would then complete a new\n   explicit route with a PATH message along the path\
    \ with increased\n   bandwidth, again invoking GCFs on the path.  If the size\
    \ of the DS-TE\n   tunnel cannot be increased on the primary and alternate LSPs,\
    \ then\n   when the DS-TE tunnel bandwidth is exhausted, the GEF aggregator\n\
    \   sends a message to the endpoint denying the reservation.  If the DS-\n   TE\
    \ tunnels are underutilized, the tunnel bandwidth may be reduced\n   periodically\
    \ to an appropriate level.  In the case of a basic single\n   class TE scenario,\
    \ there is a single TE tunnel rather than multiple-\n   CT DS-TE tunnels; otherwise,\
    \ the above GCAC functions remain the\n   same.\n   Optionally, the reference\
    \ model implements separate queues with\n   Diffserv based on Traffic Class (TC)\
    \ bits [RFC5462].  For example,\n   these queues may include two Expedited Forwarding\
    \ (EF) priority\n   queues, with the highest priority assigned to Emergency\n\
    \   Telecommunications Service (ETS) traffic and the second priority\n   assigned\
    \ to normal-priority real-time traffic (alternatively, there\n   could be a single\
    \ EF queue with dual policers [RFC5865]).  Several\n   Assured Forwarding (AF)\
    \ queues may be used for various data traffic,\n   for example, premium private\
    \ data traffic and premium public data\n   traffic.  A separate best-effort queue\
    \ may be used for the best-\n   effort traffic.  Several DS-TE tunnels may share\
    \ the same physical\n   link and therefore share the same queue.\n   The MPLS\
    \ GCAC algorithm increases the likelihood that the route\n   selected by the GEF\
    \ will succeed, even when the LSP traverses\n   multiple service provider networks.\n\
    \   Path computation is not part of the GCAC algorithm; rather, it is\n   considered\
    \ as a vendor proprietary function, although standard\n   IP/MPLS functions may\
    \ be included in path computation, such as the\n   following:\n   a)  Path Computation\
    \ Element (PCE) [RFC4655][RFC4657][RFC5440] to\n       implement inter-area/inter-AS/inter-SP\
    \ path selection algorithms,\n       including alternate path selection, path\
    \ reoptimization, backup\n       path computation to protect DS-TE tunnels, and\
    \ inter-area/inter-\n       AS/inter-SP traffic engineering.\n   b)  Backward-Recursive\
    \ PCE-Based Computation (BRPC) [RFC5441].\n   c)  Per-Domain Path Computation\
    \ [RFC5152].\n   d)  MPLS fast reroute [RFC4090] to protect DS-TE LSPs against\n\
    \       failure.\n   e)  MPLS crankback [RFC4920] to trigger alternate path selection\
    \ and\n       enable explicit source routing.\n"
- title: 3.  MPLS GCAC Algorithm
  contents:
  - "3.  MPLS GCAC Algorithm\n   MPLS GCAC is performed at the GEF during the connection\
    \ setup attempt\n   phase to determine if a connection request can be accepted\
    \ without\n   violating existing connections' QoS and throughput requirements.\
    \  To\n   enable routing to produce paths that will likely be accepted, it is\n\
    \   necessary for nodes to advertise some information about their\n   internal\
    \ CAC states.  Such advertisements should not require nodes to\n   expose detailed\
    \ and up-to-date CAC information, which may result in\n   an unacceptably high\
    \ rate of routing updates.  MPLS GCAC advertises\n   CAC information that is generic\
    \ (e.g., independent of the actual path\n   selection algorithms used) and rich\
    \ enough to support any CAC.\n   MPLS GCAC defines a set of parameters to be advertised\
    \ and a common\n   admission interpretation of these parameters.  This common\n\
    \   interpretation is in the form of an MPLS GCAC algorithm to be\n   performed\
    \ during MPLS LSP path selection to determine if a link or\n   node can be included\
    \ for consideration.  The algorithm uses the\n   advertised MPLS GCAC parameters\
    \ (available from the topology\n   database) and the characteristics of the connection\
    \ being requested\n   (available from QoS signaling) to determine if a link/node\
    \ will\n   likely accept or reject the connection.  A link/node is included if\n\
    \   the MPLS GCAC algorithm determines that it will likely accept the\n   connection\
    \ and excluded otherwise.\n"
- title: 3.1.  Bandwidth Allocation Parameters
  contents:
  - "3.1.  Bandwidth Allocation Parameters\n   MPLS GCAC bandwidth allocation parameters\
    \ for each DS-TE CT are as\n   defined within DS-TE [RFC4126], OSPF-TE extensions\
    \ [RFC4203], and IS-\n   IS-TE extensions [RFC5307].  The following parameters\
    \ are available\n   from DS-TE/TE extensions, advertised by the IGP, and available\
    \ to the\n   GEF and GCF [RFC4124].  Note that the approach presented in this\n\
    \   section is adapted from [PNNI], Appendix B.\n   MRBk    Maximum reservable\
    \ bandwidth on link k specifies the maximum\n           bandwidth that may be\
    \ reserved; this may be greater than the\n           maximum link bandwidth, in\
    \ which case the link may be\n           oversubscribed.\n   BWCck   Bandwidth\
    \ constraint for CTc on link k = allocated (minimum\n           guaranteed) bandwidth\
    \ for CTc on link k.\n   ULBCck  Unreserved link bandwidth on CTc on link k specifies\
    \ the\n           amount of bandwidth not yet reserved for CTc.\n   Note that\
    \ BWCck and ULBCck are the only DS-TE parameters flooded by\n   the IGP [RFC4124][RFC4203][RFC5307].\
    \  For example, when bandwidth\n   reservation is used [RFC4126], ULBCck is calculated\
    \ and flooded by\n   the IGP as follows:\n   RBTk    Reservation bandwidth threshold\
    \ for link k.\n   ULBCck  Unreserved link bandwidth on CTc on link k specifies\
    \ the\n           amount of bandwidth not yet reserved for CTc, taking RBTk\n\
    \           into account,\n           ULBCck = ULBk - delta0/1(CTck) * RBTk\n\
    \           where\n           delta0/1(CTck) = 0 if RBWck < BWCck\n          \
    \ delta0/1(CTck) = 1 if RBWck >= BWCck\n   Also derivable at the GEF and GCF is\
    \ MRBCck, the maximum reservable\n   link bandwidth for CTc.  For example, when\
    \ bandwidth reservation is\n   used [RFC4126], MRBCck is calculated as follows:\n\
    \   MRBCck  Maximum reservable link bandwidth for CTc on link k specifies\n  \
    \         the amount of bandwidth not yet reserved for CTc.\n           MRBCck\
    \ = MRBk - delta0/1(CTck) * RBTk\n           where\n           delta0/1(CTck)\
    \ = 0 if RBWck < BWCck\n           delta0/1(CTck) = 1 if RBWck >= BWCck\n   Note\
    \ that these bandwidth parameters must be configured in a\n   consistent way within\
    \ domains and across domains.  GEF routing of\n   LSPs is based on ULBCck, where\
    \ ULBk is available and RBTk can be\n   accounted for by configuration, e.g.,\
    \ RBTk typically = .05 * MRBk.\n   Also available are administrative weight (denoted\
    \ as \"link cost\" in\n   [RFC2328]), TE metric [RFC3630], and administrative\
    \ group (also\n   called color) 4-octet mask [RFC3630].\n   The following quantities\
    \ can be derived from information advertised\n   by the IGP and otherwise available\
    \ to the GEF and GCF:\n   RBWck   Reserved bandwidth on CTc on link k (0 <= c\
    \ <= MaxCT-1).\n           RBWck = total amount of bandwidth reserved by all established\n\
    \           LSPs that belong to CTc\n           RBWck = BWCck - ULBCck.\n   ULBk\
    \    Unreserved link bandwidth on link k specifies the amount of\n           bandwidth\
    \ not yet reserved for any CT.\n           ULBk = MRBk - sum [RBWck (0 <= c <=\
    \ MaxCT-1)].\n   The GCAC algorithm assumes that a DS-TE bandwidth constraints\
    \ model\n   is used uniformly within each domain (e.g., MAR [RFC4126], MAM\n \
    \  [RFC4125], or RDM [RFC4127]).  European Advanced Networking Test\n   Center\
    \ (EANTC) testing [EANTC] has shown that interoperability is\n   problematic when\
    \ different DS-TE bandwidth constraints models are\n   used by different network\
    \ elements within a domain.  Specific testing\n   of MAM and RDM across different\
    \ vendor equipment showed the\n   incompatibility.  However, while the characteristics\
    \ of the 3 DS-TE\n   bandwidth constraints models are quite different, it is necessary\
    \ to\n   specify interworking between them even though it could be complex.\n\
    \   The following parameters are also defined and available to GCF and\n   are\
    \ assumed to be locally configured to be a consistent value across\n   all nodes\
    \ and domain(s):\n   SBWck   Sustained bandwidth for CTc on link k (aggregate\
    \ of existing\n           connections).\n           SBWck = factor * RBWck where\
    \ factor is configured based on\n           standard 'demand overbooking' factors.\n\
    \   VFck    Variance factor for CTc on link k; VFck is BWMck normalized\n    \
    \       by variance of SBWck.  VFck is configured based on typical\n         \
    \  traffic variability statistics.\n   In many implementations of the Private\
    \ Network-Network Interface\n   (PNNI) GCAC algorithm, the variance factor is\
    \ not included, or\n   equivalently, VFck is assumed to be zero.  A simplified\
    \ MPLS GCAC\n   algorithm is also derived assuming VFck = 0.\n   Note that different\
    \ demand overbooking factors can be specified for\n   each CT, e.g., no overbooking\
    \ might be used for constant bitrate\n   services, while a large overbooking factor\
    \ might be used for bursty\n   variable bitrate services.  We specify demand overbooking\
    \ rather than\n   link overbooking for the GCAC algorithm; one advantage is the\
    \ demand\n   overbooking is compatible with source routing used by the GCAC\n\
    \   algorithm.\n   Also defined is\n   BWMck   bandwidth margin for CTc on link\
    \ k; BWMck = RBWck - SBWck\n   GEF uses BWCck, RBWck, ULBCck, SBWck, BWMck, and\
    \ VFck for LSP/IGP\n   routing.  GEF also needs to track per-CT LSP bandwidth\
    \ allocation and\n   reserved bandwidth parameters, which are defined as follows:\n\
    \   RBWLcl  reserved bandwidth for CTc on LSP l\n   UBWLcl  unreserved bandwidth\
    \ for CTc on LSP l\n"
- title: 3.2.  GCAC Algorithm
  contents:
  - "3.2.  GCAC Algorithm\n   The assumption behind the MPLS GCAC is that the ratio\
    \ between the\n   bandwidth margin that the node is putting above the sustained\n\
    \   bandwidth and the standard deviation of the sustained bandwidth does\n   not\
    \ change significantly as one new aggregate flow is added on the\n   link.  Any\
    \ ingress node doing path selection can then compute the new\n   standard deviation\
    \ of the aggregate rate (from the old value and the\n   aggregate flow's traffic\
    \ descriptors) and an estimate of the new\n   BWMck.  From this, the increase\
    \ in bandwidth required to carry the\n   new aggregate flow can be computed and\
    \ compared to BWCck.\n   To expand on the discussion above, let RBWck denote the\
    \ reserved\n   bandwidth capacity, i.e., the amount of bandwidth that has been\n\
    \   allocated to existing aggregate flows for CTc on link k by the actual\n  \
    \ CAC used in the node.  BWMck is the difference between RBWck and the\n   aggregate\
    \ sustained bandwidth (SBWck) of the existing aggregate\n   flows.  SBWck can\
    \ be either the sum of existing aggregate flows'\n   declared sustainable bandwidth\
    \ (SBWi for aggregate flow i) or a\n   smaller (possibly measured or estimated)\
    \ value.  Let MRBCck denote\n   the maximum reservable bandwidth that is usable\
    \ by aggregate flows\n   for CTc on link k.  The following diagram illustrates\
    \ the\n   relationship among MRBCck, RBWck, BWMck, SBWck, and ULBCck:\n      \
    \               |<-- BWMck-->|<----- ULBCck ----->|\n     |---------------|------------|--------------------|\n\
    \     0              SBWck        RBWck               MRBCck\n   The assumption\
    \ is that BWMck is proportional to some measure of the\n   burstiness of the traffic\
    \ generated by the existing aggregate flows,\n   this measure being the standard\
    \ deviation of the aggregate traffic\n   rate defined as the square root of the\
    \ sum of SBWi(PBWi - SBWi) over\n   all existing aggregate flows, where SBWi and\
    \ PBWi are declared\n   sustainable and peak bandwidth for aggregate flow i, respectively.\n\
    \   This assumption is based on the simple argument that RBWck needs to\n   be\
    \ some multiple of the standard deviation above the mean aggregate\n   traffic\
    \ rate to guarantee some level of packet loss ratio and packet\n   queuing time.\
    \  Depending on the actual CAC used, the BWMck-to-\n   standard-deviation ratio\
    \ may vary as aggregate flows are established\n   and taken down.  It is reasonable\
    \ to assume, however, that with a\n   sufficiently large value of RBWck, this\
    \ ratio will not vary\n   significantly.  What this means is a link can advertise\
    \ its current\n   BWMck-to-standard-deviation ratio (actually in the form of VF,\
    \ which\n   is the square of this number), and the MPLS GCAC algorithm can use\n\
    \   this number to estimate how much bandwidth is required to carry an\n   additional\
    \ aggregate flow.\n   Following the derivation given in [PNNI], Appendix B, the\
    \ MPLS GCAC\n   algorithm is derived as follows.  Consider an aggregate flow\n\
    \   bandwidth change request DBWi with peak bandwidth PBWi and\n   sustainable\
    \ bandwidth SBWi and a link with the following MPLS GCAC\n   parameters:  ULBCck,\
    \ BWMck, and VFck for CTc and link k.  Denote the\n   variance (i.e., square of\
    \ standard deviation) of the aggregate\n   traffic rate by VARk (not advertised).\
    \  Denote other unadvertised\n   MPLS GCAC quantities by RBWck and SBWck.  Then,\n\
    \   VARk = SUM  SBWi*(PBWi-SBWi)                                      (1)\n  \
    \        over existing\n          aggregate flows i\n   and\n           BWMck**2\n\
    \   VFck = ----------                                                 (2)\n  \
    \          VARk\n   Using the above equation, VARk can be computed from the advertised\n\
    \   VFck and BWMck as:\n   VARk = (BWMck**2)/VFck.\n   Let DBWi be the additional\
    \ bandwidth capacity needed to carry the\n   flow within aggregate sustainable\
    \ bandwidth SBWi.  The MPLS GCAC\n   algorithm basically computes DBWi from the\
    \ advertised MPLS GCAC\n   parameters and the new aggregate flow's traffic descriptors,\
    \ and\n   compares it with ULBCck.  If ULBCck >= DBWi, then the link is\n   included\
    \ for path selection consideration; otherwise, it is excluded,\n   i.e.,\n   If\
    \ (ULBCck >= DBWi), then include link k; else exclude link k     (3)\n   Let BWMcknew\
    \ denote the bandwidth margin if the new aggregate flow\n   were accepted.  Denote\
    \ other 'new' quantities by RBWcknew, SBWcknew,\n   and VARnew.  Then,\n   DBWi\
    \ = BWMcknew - BWMck + SBWi                                    (4)\n   since BWMcknew\
    \ = RBWcknew - SBWcknew, BWMck = RBWck - SBWck, and\n   SBWcknew - SBWck = SBWi.\
    \  Substituting (4) into (3), rearranging\n   terms, and squaring both sides yield:\n\
    \   If ((ULBCck+BWMck-SBWck)**2 >= BWMcknew**2), then include link k;\n      \
    \                                          else exclude link k  (5)\n   Using\
    \ the MPLS GCAC assumption made earlier, BWMcknew**2 can be\n   computed as:\n\
    \   BWMcknew**2 = VFck * VARnew,                                      (6)\n  \
    \ Where\n   VARnew = VARk + SBWck * (PBWi-SBWi).                             \
    \ (7)\n   Substituting (2), (6) and (7) into (5) yields:\n   If ((ULBCck+BWMck-SBWi)**2\
    \ >= BWMck**2 + VFck*SBWi(PBWi-SBWi)),\n                                     \
    \         then include link k;\n                                             \
    \ else exclude link k    (8)\n   and moving BWMck**2 to the left-hand side and\
    \ rearranging terms yield\n   If ((ULBCck-SBWi) * (ULBCck-SBWi+2*BWMck) >= VFck*SBWi(PBWi-SBWi),\n\
    \                                              then include link k;\n        \
    \                                      else exclude link k    (9)\n   Equation\
    \ (9) represents the Constrained Shortest Path First (CSPF)\n   method implemented\
    \ by most vendors and deployed by most service\n   providers in MPLS networks.\
    \  In general, DBWi is between SBWi and\n   PBWi.  So, the above test is not necessary\
    \ for the cases ULBCck >=\n   PBWi and ULBCck < SBWi.  In the former case, the\
    \ link is included; in\n   the latter case, the link is excluded.\n          Exclude\
    \                         Include\n     |<--- link ---->|<-- Test (9)-->|<---\
    \ link ----->|\n     |---------------|---------------|----------------| ULBCck\n\
    \                    SBWi            PBWi\n   Note that VF and BWM are frequently\
    \ not implemented; equivalently,\n   these quantities are assumed to be zero,\
    \ in which case Equation (9)\n   becomes\n   If (ULBCck >= SBWi), then include\
    \ link k; else exclude link k    (10)\n             Exclude         Include\n\
    \        |<--- link ---->|<--- link ----->|\n        |---------------|----------------|\
    \ ULBCck\n                       SBWi            PBWi\n   PNNI GCAC implementations\
    \ often do not incorporate the variance\n   factor VF, in which case Equation\
    \ (10) is used.\n   MPLS GCAC must not reject a best-effort (BE, unassigned bandwidth)\n\
    \   aggregate flow request based on bandwidth availability, but it may\n   reject\
    \ based on other reasons such as the number of BE flows\n   exceeding a chosen\
    \ threshold.  MPLS GCAC defines only one parameter\n   for the BE service category\
    \ -- maximum bandwidth (MBW) -- to\n   advertise how much capacity is usable for\
    \ BE flows.  The purpose of\n   advertising this parameter is twofold:  MBW can\
    \ be used for path\n   optimization, and MBW = 0 is used to indicate that a link\
    \ is not\n   accepting any (additional) BE flows.\n   Demand overbooking of LSP\
    \ bandwidth is employed and must be compliant\n   with [RFC4124] and [RFC3270]\
    \ to over-/undersubscribe requested\n   capacity.  It is simplest to use only\
    \ one oversubscription method,\n   i.e., the GCAC algorithm assumes oversubscription\
    \ of demands per CT,\n   both within domains and for interworking between domains.\
    \  The\n   motivation is that interworking may be infeasible between domains if\n\
    \   different overbooking models are used.  Note that the same assumption\n  \
    \ was made for DS-TE bandwidth constraints models, in that the GCAC\n   algorithm\
    \ assumes a consistent DS-TE bandwidth constraints model is\n   used within each\
    \ domain and interoperability of bandwidth constraints\n   models across domains.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   It needs to be clearly understood that all routers\
    \ contain local and\n   implementation-specific rules (or algorithms) to help\
    \ them determine\n   what to do with traffic that exceeds capacity and how to\
    \ admit new\n   flows.  If these rules are poorly designed or implemented with\n\
    \   defects, then problems may be observed in the network.  Furthermore,\n   the\
    \ implementation of such algorithms provides a mechanism for\n   attacking the\
    \ delivery of traffic within the network.  In view of\n   this, routers and their\
    \ software are usually extensively tested\n   before deployment, router vendors\
    \ are extended a degree of trust, and\n   a \"compromised router\" (i.e., one\
    \ on which an attacker has installed\n   their own code) is considered a weak\
    \ spot in the system.  Note that\n   if a router is compromised, it can be made\
    \ to do substantially more\n   problematic things than simply modifying the admission\
    \ control\n   algorithm.  Implementers are RECOMMENDED to ensure that software\n\
    \   modifications to routers are fully secured, and operators are\n   RECOMMENDED\
    \ to apply security measures (that are outside the scope of\n   this document)\
    \ to prevent unauthorized updates to router software.\n   Nothing in this document\
    \ suggests any change to normal software\n   security practices.\n   The use of\
    \ a GCAC priority parameter raises possibilities for theft-\n   of-service attacks\
    \ because users could claim an emergency priority\n   for their flows without\
    \ real need, thereby effectively preventing\n   serious emergency calls to get\
    \ through.  Several options exist for\n   countering such user attacks at the\
    \ interface to the user, for\n   example:\n   -  Only some user groups (e.g.,\
    \ police) are authorized to set the\n      emergency priority bit using a policy\
    \ applied to RSVP-TE\n      signaling.\n   -  Any user is authorized to employ\
    \ the emergency priority bit for\n      particular destination addresses (e.g.,\
    \ police) using a policy\n      applied to RSVP-TE signaling.\n   -  If an attack\
    \ occurs, the user/group and actions taken should be\n      logged to trace the\
    \ attack.\n   -  [RFC5069] identifies a number of security threats against\n \
    \     emergency call marking and mapping.  Section 6 of [RFC5069] lists\n    \
    \  security requirements to counter these threats, and those\n      requirements\
    \ should be followed by implementations of this\n      document.\n   -  The security\
    \ requirements listed in Section 11 of [RFC4412] should\n      be followed.  These\
    \ requirements apply to use of the\n      Communications Resource Priority Header\
    \ for the Session Initiation\n      Protocol (SIP) and concern aspects of authentication\
    \ and\n      authorization, confidentiality and privacy requirements,\n      protection\
    \ against denial-of-service attacks, and anonymity.\n   Within the network, the\
    \ policy and integrity mechanisms already\n   present in RSVP-TE [RFC3209] can\
    \ be used to ensure that the MPLS LSP\n   has the right policy and security credentials\
    \ to assume the signaled\n   priority and bandwidth.  Further discussion of this\
    \ topic for the\n   signaling of priority levels using RSVP can be found in [RFC6401].\n\
    \   Some similarities may also be drawn to the security issues\n   surrounding\
    \ the placement of emergency calls in Internet multimedia\n   systems [RFC5069]\
    \ although the concepts are only comparable at the\n   highest levels.\n   Like\
    \ any algorithm, the algorithm specified in this document operates\n   on data\
    \ that is supplied as input parameters.  That data is assumed\n   to be collected\
    \ and stored locally (i.e., on the router performing\n   the algorithm).  It is\
    \ a fundamental assumption of the secure\n   operation of any router that the\
    \ data stored on that router cannot be\n   externally modified.  In this particular\
    \ case, it is important that\n   the input parameters to the algorithm cannot\
    \ be influenced by an\n   outside party.  Thus, as with all configuration parameters\
    \ on a\n   router, the implementer MUST supply and the operator is RECOMMENDED\n\
    \   to use security mechanisms to protect writing of the configuration\n   parameters\
    \ for this algorithm.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   The authors greatly appreciate Adrian Farrel's support\
    \ in serving as\n   the sponsoring Area Director for this document and for his\
    \ valuable\n   comments and suggestions on the document.  The authors also greatly\n\
    \   appreciate Young Lee serving as the document shepherd and his\n   valuable\
    \ comments and suggestions.  Finally, Robert Sparks' thorough\n   review and helpful\
    \ suggestions are sincerely appreciated.\n"
- title: 6.  Normative References
  contents:
  - "6.  Normative References\n   [RFC2119]    Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2328]    Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April\
    \ 1998.\n   [RFC3031]    Rosen, E., Viswanathan, A., and R. Callon,\n        \
    \        \"Multiprotocol Label Switching Architecture\", RFC 3031,\n         \
    \       January 2001.\n   [RFC3209]    Awduche, D., Berger, L., Gan, D., Li, T.,\
    \ Srinivasan,\n                V., and G. Swallow, \"RSVP-TE: Extensions to RSVP\
    \ for LSP\n                Tunnels\", RFC 3209, December 2001.\n   [RFC3270] \
    \   Le Faucheur, F., Wu, L., Davie, B., Davari, S.,\n                Vaananen,\
    \ P., Krishnan, R., Cheval, P., and J. Heinanen,\n                \"Multi-Protocol\
    \ Label Switching (MPLS) Support of\n                Differentiated Services\"\
    , RFC 3270, May 2002.\n   [RFC3630]    Katz, D., Kompella, K., and D. Yeung, \"\
    Traffic\n                Engineering (TE) Extensions to OSPF Version 2\", RFC\n\
    \                3630, September 2003.\n   [RFC4124]    Le Faucheur, F., Ed.,\
    \ \"Protocol Extensions for Support\n                of Diffserv-aware MPLS Traffic\
    \ Engineering\", RFC 4124,\n                June 2005.\n   [RFC4203]    Kompella,\
    \ K., Ed., and Y. Rekhter, Ed., \"OSPF Extensions\n                in Support\
    \ of Generalized Multi-Protocol Label Switching\n                (GMPLS)\", RFC\
    \ 4203, October 2005.\n   [RFC4804]    Le Faucheur, F., Ed., \"Aggregation of\
    \ Resource\n                ReSerVation Protocol (RSVP) Reservations over MPLS\n\
    \                TE/DS-TE Tunnels\", RFC 4804, February 2007.\n   [RFC4920]  \
    \  Farrel, A., Ed., Satyanarayana, A., Iwata, A., Fujita,\n                N.,\
    \ and G. Ash, \"Crankback Signaling Extensions for MPLS\n                and GMPLS\
    \ RSVP-TE\", RFC 4920, July 2007.\n   [RFC5307]    Kompella, K., Ed., and Y. Rekhter,\
    \ Ed., \"IS-IS\n                Extensions in Support of Generalized Multi-Protocol\n\
    \                Label Switching (GMPLS)\", RFC 5307, October 2008.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [BGP-TE]     Gredler, H., Farrel, A., Medved,\
    \ J., and S. Previdi,\n                \"North-Bound Distribution of Link-State\
    \ and TE\n                Information using BGP\", Work in Progress, March 2012.\n\
    \   [EANTC]      \"Multi-vendor Carrier Ethernet Interoperability Event\",\n \
    \               Carrier Ethernet World Congress 2006, Madrid Spain,\n        \
    \        September 2006.\n   [FEEDBACK]   Ashwood-Smith, P., Jamoussi, B., Fedyk,\
    \ D., and D.\n                Skalecki, \"Improving Topology Data Base Accuracy\
    \ with\n                Label Switched Path Feedback in Constraint Based Label\n\
    \                Distribution Protocol\", Work in Progress, June 2003.\n   [OIF-E-NNI]\
    \  Optical Interworking Forum (OIF), \"External Network-\n                Network\
    \ Interface (E-NNI) OSPFv2-based Routing - 2.0\n                (Intra-Carrier)\
    \ Implementation Agreement\", IA # OIF-\n                ENNI-OSPF-02.0, July\
    \ 13, 2011.\n   [PNNI]       ATM Forum Technical Committee, \"Private Network-Network\n\
    \                Interface Specification Version 1.1 (PNNI 1.1)\",\n         \
    \       af-pnni-0055.002, April 2002.\n   [RFC2597]    Heinanen, J., Baker, F.,\
    \ Weiss, W., and J. Wroclawski,\n                \"Assured Forwarding PHB Group\"\
    , RFC 2597, June 1999.\n   [RFC3246]    Davie, B., Charny, A., Bennet, J., Benson,\
    \ K., Le\n                Boudec, J., Courtney, W., Davari, S., Firoiu, V., and\
    \ D.\n                Stiliadis, \"An Expedited Forwarding PHB (Per-Hop\n    \
    \            Behavior)\", RFC 3246, March 2002.\n   [RFC4090]    Pan, P., Ed.,\
    \ Swallow, G., Ed., and A. Atlas, Ed., \"Fast\n                Reroute Extensions\
    \ to RSVP-TE for LSP Tunnels\", RFC\n                4090, May 2005.\n   [RFC4125]\
    \    Le Faucheur, F. and W. Lai, \"Maximum Allocation\n                Bandwidth\
    \ Constraints Model for Diffserv-aware MPLS\n                Traffic Engineering\"\
    , RFC 4125, June 2005.\n   [RFC4126]    Ash, J., \"Max Allocation with Reservation\
    \ Bandwidth\n                Constraints Model for Diffserv-aware MPLS Traffic\n\
    \                Engineering & Performance Comparisons\", RFC 4126, June\n   \
    \             2005.\n   [RFC4127]    Le Faucheur, F., Ed., \"Russian Dolls Bandwidth\n\
    \                Constraints Model for Diffserv-aware MPLS Traffic\n         \
    \       Engineering\", RFC 4127, June 2005.\n   [RFC4412]    Schulzrinne, H. and\
    \ J. Polk, \"Communications Resource\n                Priority for the Session\
    \ Initiation Protocol (SIP)\", RFC\n                4412, February 2006.\n   [RFC4655]\
    \    Farrel, A., Vasseur, JP., and J. Ash, \"A Path\n                Computation\
    \ Element (PCE)-Based Architecture\", RFC 4655,\n                August 2006.\n\
    \   [RFC4657]    Ash, J., Ed., and JL. Le Roux, Ed., \"Path Computation\n    \
    \            Element (PCE) Communication Protocol Generic\n                Requirements\"\
    , RFC 4657, September 2006.\n   [RFC5069]    Taylor, T., Ed., Tschofenig, H.,\
    \ Schulzrinne, H., and M.\n                Shanmugam, \"Security Threats and Requirements\
    \ for\n                Emergency Call Marking and Mapping\", RFC 5069, January\n\
    \                2008.\n   [RFC5152]    Vasseur, JP., Ed., Ayyangar, A., Ed.,\
    \ and R. Zhang, \"A\n                Per-Domain Path Computation Method for Establishing\n\
    \                Inter-Domain Traffic Engineering (TE) Label Switched\n      \
    \          Paths (LSPs)\", RFC 5152, February 2008.\n   [RFC5440]    Vasseur,\
    \ JP., Ed., and JL. Le Roux, Ed., \"Path\n                Computation Element\
    \ (PCE) Communication Protocol\n                (PCEP)\", RFC 5440, March 2009.\n\
    \   [RFC5441]    Vasseur, JP., Ed., Zhang, R., Bitar, N., and JL. Le\n       \
    \         Roux, \"A Backward-Recursive PCE-Based Computation (BRPC)\n        \
    \        Procedure to Compute Shortest Constrained Inter-Domain\n            \
    \    Traffic Engineering Label Switched Paths\", RFC 5441,\n                April\
    \ 2009.\n   [RFC5462]    Andersson, L. and R. Asati, \"Multiprotocol Label\n \
    \               Switching (MPLS) Label Stack Entry: \"EXP\" Field Renamed\n  \
    \              to \"Traffic Class\" Field\", RFC 5462, February 2009.\n   [RFC5865]\
    \    Baker, F., Polk, J., and M. Dolly, \"A Differentiated\n                Services\
    \ Code Point (DSCP) for Capacity-Admitted\n                Traffic\", RFC 5865,\
    \ May 2010.\n   [RFC5971]    Schulzrinne, H. and R. Hancock, \"GIST: General Internet\n\
    \                Signalling Transport\", RFC 5971, October 2010.\n   [RFC5974]\
    \    Manner, J., Karagiannis, G., and A. McDonald, \"NSIS\n                Signaling\
    \ Layer Protocol (NSLP) for Quality-of-Service\n                Signaling\", RFC\
    \ 5974, October 2010.\n   [RFC5975]    Ash, G., Ed., Bader, A., Ed., Kappler,\
    \ C., Ed., and D.\n                Oran, Ed., \"QSPEC Template for the Quality-of-Service\n\
    \                NSIS Signaling Layer Protocol (NSLP)\", RFC 5975, October\n \
    \               2010.\n   [RFC5976]    Ash, G., Morton, A., Dolly, M., Tarapore,\
    \ P., Dvorak,\n                C., and Y. El Mghazli, \"Y.1541-QOSM: Model for\
    \ Networks\n                Using Y.1541 Quality-of-Service Classes\", RFC 5976,\n\
    \                October 2010.\n   [RFC6401]    Le Faucheur, F., Polk, J., and\
    \ K. Carlberg, \"RSVP\n                Extensions for Admission Priority\", RFC\
    \ 6401, October\n                2011.\n   [TQO]        Ash, G., \"Traffic Engineering\
    \ and QoS Optimization of\n                Integrated Voice and Data Networks\"\
    , Elsevier, 2006.\n"
- title: 'Appendix A:  Example MPLS GCAC Implementation Including Path Selection,'
  contents:
  - "Appendix A:  Example MPLS GCAC Implementation Including Path Selection,\n   \
    \          Bandwidth Management, QoS Signaling, and Queuing\n   Figure 2 illustrates\
    \ an example of the integrated voice/data MPLS\n   GCAC method in which bandwidth\
    \ is allocated on an aggregated basis to\n   the individual DS-TE CTs.  In the\
    \ example method, CTs have different\n   priorities including high-priority, normal-priority,\
    \ and best-effort-\n   priority services CTs.  Bandwidth allocated to each CT\
    \ is protected\n   by bandwidth reservation methods, as needed, but bandwidth\
    \ is\n   otherwise shared among CTs.  Each originating GEF monitors CT\n   bandwidth\
    \ use on each MPLS LSP [RFC3031] for each CT, and determines\n   when CT LSP bandwidth\
    \ needs to be increased or decreased.  In Figure\n   2, changes in CT bandwidth\
    \ capacity are determined by GEFs based on\n   an overall aggregated bandwidth\
    \ demand for CT capacity (not on a per-\n   connection/per-flow demand basis).\
    \  Based on the aggregated bandwidth\n   demand, GEFs make periodic discrete changes\
    \ in bandwidth allocation,\n   that is, they either increase or decrease bandwidth\
    \ on the LSPs\n   constituting the CT bandwidth capacity.  For example, if aggregate\n\
    \   flow requests are made for CT LSP bandwidth that exceeds the current\n   DS-TE\
    \ tunnel bandwidth allocation, the GEF initiates a bandwidth\n   modification\
    \ request on the appropriate LSP(s).  This may entail\n   increasing the current\
    \ LSP bandwidth allocation by a discrete\n   increment of bandwidth denoted here\
    \ as DBW, where DBW is the\n   additional amount needed by the current aggregate\
    \ flow request.  The\n   bandwidth admission control for each link in the path\
    \ is performed by\n   the GCF based on the status of the link using the bandwidth\n\
    \   allocation procedure described below, where we further describe the\n   role\
    \ of the different parameters (such as the reserved bandwidth\n   threshold RBT\
    \ shown in Figure 2) in the admission control procedure.\n   Also, the GEF periodically\
    \ monitors LSP bandwidth use, and if\n   bandwidth use falls below the current\
    \ LSP allocation, the GEF\n   initiates a bandwidth modification request to decrease\
    \ the LSP\n   bandwidth allocation to the current level of bandwidth utilization.\n\
    \          HIGH-PRIORITY-CT LSP\n    +----+======================+----+======================+----+\n\
    \    |GEF1|NORMAL-PRIORITY-CT LSP| VN |                      |GEF2|\n    |   \
    \ |======================|    |======================|    |\n    |    |LOW-PRIORITY/BE-CT\
    \ LSP|    |                      |    |\n    +----+======================+----+======================+----+\n\
    \   LEGEND\n   ------\n   BE -  Best Effort\n   CT -  Class Type\n   GEF - GCAC\
    \ Edge Function\n   LSP - Label Switched Path\n   VN -  Via Node\n   o  Distributed\
    \ bandwidth allocation method applied on a\n      per-class-type (CT) LSP basis\n\
    \   o  GEF allocates bandwidth to each CTc LSP based on demand\n      - GEF decides\
    \ CTc LSP bandwidth increase based on\n        + aggregate flow sustained bandwidth\
    \ (SBWi) and variance factor\n          VFck\n        + routing priority (high,\
    \ normal, best effort)\n        + CTc reserved bandwidth (RBWck) and bandwidth\
    \ constraint\n          (BWCck)\n        + link reserved bandwidth threshold (RBTk)\
    \ and unreserved\n          bandwidth (ULBk)\n      - GEF periodically decreases\
    \ CTc LSP bandwidth allocation based on\n        bandwidth use\n   o  VNs send\
    \ crankback messages to GEF if DS-TE/MAR bandwidth\n      allocation rules not\
    \ met\n   o  Link(s) not meeting request excluded from TE topology database\n\
    \      before attempting another explicit route computation\n           Figure\
    \ 2:  Per-Class-Type (CT) LSP Bandwidth Management\n   GEF uses SBWi, VFck, RBWck,\
    \ BWCck, RBTk, and ULBk for LSP bandwidth\n   allocation decisions and IGP routing\
    \ and uses RBWcl and UBWcl to\n   track per-CT LSP bandwidth allocation and reserved\
    \ bandwidth.  In\n   making a CT bandwidth allocation modification, the GEF determines\
    \ the\n   CT priority (high, normal, or best effort), CT bandwidth-in-use, and\n\
    \   CT bandwidth allocation thresholds.  These parameters are used to\n   determine\
    \ whether network capacity can be allocated for the CT\n   bandwidth modification\
    \ request.\n"
- title: A.1.  Example of Path Selection and Bandwidth Management Implementation
  contents:
  - "A.1.  Example of Path Selection and Bandwidth Management Implementation\n   In\
    \ OSPF, link-state flooding is used to make status updates.  This is\n   a state-dependent\
    \ routing (SDR) method where CSPF is typically used\n   to alter LSP routing according\
    \ to the state of the network.  In\n   general, SDR methods calculate a path cost\
    \ for each connection\n   request based on various factors such as the load state\
    \ or congestion\n   state of the links in the network.  In contrast, the example\
    \ MPLS\n   GCAC algorithm uses event-dependent routing (EDR), where LSP routing\n\
    \   is updated locally on the basis of whether connections succeed or\n   fail\
    \ on a given path choice.  In the EDR learning approaches, the\n   path that was\
    \ last tried successfully is tried again until congested,\n   at which time another\
    \ path is selected at random and tried on the\n   next connection request.  EDR\
    \ path choices can also be changed with\n   time in accordance with changes in\
    \ traffic load patterns.  Success-\n   to-the-top (STT) EDR path selection, illustrated\
    \ in Figure 3, uses a\n   simplified decentralized learning method to achieve\
    \ flexible adaptive\n   routing.  The primary path (path-p) is used first if available,\
    \ and a\n   currently successful alternate path (path-s) is used until it is\n\
    \   congested.  In the case that path-s is congested (e.g., bandwidth is\n   not\
    \ available on one or more links), a new alternate path (path-n) is\n   selected\
    \ at random as the alternate path choice for the next\n   connection request overflow\
    \ from the primary path.  Bandwidth\n   reservation is used under congestion conditions\
    \ to protect traffic on\n   the primary path.  STT-EDR uses crankback when an\
    \ alternate path is\n   congested at a via node, and the connection request advances\
    \ to a new\n   random path choice.  In STT-EDR, many path choices can be tried\
    \ by a\n   given connection request before the request is rejected.\n   Figure\
    \ 3 illustrates the example MPLS GCAC operation of STT-EDR path\n   selection\
    \ and admission control combined with per-CT bandwidth\n   allocation.  GEF A\
    \ monitors CT bandwidth use on each CT LSP and\n   determines when CT LSP bandwidth\
    \ needs to be increased or decreased.\n   Based on the bandwidth demand, GEF A\
    \ makes periodic discrete changes\n   in bandwidth allocation, that is, either\
    \ increases or decreases\n   bandwidth on the LSPs constituting the CT bandwidth\
    \ capacity.  If\n   aggregate flow requests are made for CT LSP bandwidth that\
    \ exceeds\n   the current LSP bandwidth allocation, GEF A initiates a bandwidth\n\
    \   modification request on the appropriate LSP(s).\n                        \
    \             |<----- ULBk <= RBTk ---->|\n      LSP-p |------------------------|-------------------------|\n\
    \            A                        B                         E\n          \
    \                  |<-- ULBk <= RBTk -->|\n      LSP-s |---------------|--------------------|-------------|\n\
    \            A               C                    D             E\n    Example\
    \ of STT-EDR routing method:\n    1.  If node A to node E bandwidth needs to be\
    \ modified (say\n        increased by DBW), primary LSP-p (e.g., LSP A-B-E) is\
    \ tried\n        first.\n    2.  Available bandwidth is tested locally on each\
    \ link in LSP-p.  If\n        bandwidth not available (e.g., unreserved bandwidth\
    \ on link BE\n        is less than the reserved bandwidth threshold and this CT\
    \ is\n        above its bandwidth allocation), crankback to node A.\n    3.  If\
    \ DBW is not available on one or more links of LSP-p, then the\n        currently\
    \ successful LSP-s (e.g., LSP A-C-D-E) is tried next.\n    4.  If DBW is not available\
    \ on one or more links of LSP-s, then a\n        new LSP is searched by trying\
    \ additional candidate paths until a\n        new successful LSP-n is found or\
    \ the candidate paths are\n        exhausted.\n    5.  LSP-n is then marked as\
    \ the currently successful path for the\n        next time bandwidth needs to\
    \ be modified.\n      Figure 3:  STT-EDR Path Selection and Per-CT Bandwidth Allocation\n\
    \   For example, in Figure 3, if the LSR-A to LSR-E bandwidth needs to be\n  \
    \ modified, say increased by DBW, the primary LSP-p (A-B-E) is tried\n   first.\
    \  The bandwidth admission control for each link in the path is\n   performed\
    \ based on the status of the link using the bandwidth\n   allocation procedure\
    \ described below, where we further describe the\n   role of the reserved bandwidth\
    \ RBWck shown in Figure 3 in the\n   admission control procedure.  If the first\
    \ choice LSP cannot admit\n   the bandwidth change, node A may then try an alternate\
    \ LSP.  If DBW\n   is not available on one or more links of LSP-p, then the currently\n\
    \   successful LSP-s A-C-D-E (the 'STT path') is tried next.  If DBW is\n   not\
    \ available on one or more links of LSP-s, then a new LSP is\n   searched by trying\
    \ additional candidate paths (not shown) until a new\n   successful LSP-n is found\
    \ or all of the candidate paths held in the\n   cache are exhausted.  LSP-n is\
    \ then marked as the currently\n   successful path for the next time bandwidth\
    \ needs to be modified.\n   DBW is set to the additional amount of bandwidth required\
    \ by the\n   aggregate flow request.\n   If all cached candidate paths are tried\
    \ without success, the search\n   then generates a new CSPF path.  If a new CSPF\
    \ calculation succeeds\n   in finding a new path, that path is made the stored\
    \ path, and the\n   bottom cached path falls off the list.  If all cached paths\
    \ fail and\n   a new CSPF path cannot be found, then the original stored LSP is\n\
    \   retained.  New requests go through the same routing algorithm again,\n   since\
    \ available bandwidth, etc., has changed and new requests might\n   be admitted.\
    \  Also, GEF A periodically monitors LSP bandwidth use\n   (e.g., once each 2-minute\
    \ interval), and if bandwidth use falls below\n   the current LSP allocation,\
    \ the GEF initiates a bandwidth\n   modification request to decrease the LSP bandwidth\
    \ allocation to the\n   currently used bandwidth level.  Bandwidth reservation\
    \ occurs in STT-\n   EDR with PATH/RESV messages per application of [RFC4804].\n\
    \   In the STT-EDR computation, most of the time the primary path and\n   stored\
    \ path will succeed, and no CSPF calculation needs to be done.\n   Therefore,\
    \ the STT-EDR algorithm achieves good throughput performance\n   while significantly\
    \ reducing link-state flooding control load [TQO].\n   An analogous method was\
    \ proposed in the MPLS working group\n   [FEEDBACK], where feedback based on failed\
    \ path routing attempts is\n   kept by the TE database and used when running CSPF.\n\
    \   In the example GCAC method, bandwidth allocation to the primary and\n   alternate\
    \ LSPs uses the MAR bandwidth allocation procedure, as\n   described below.  Path\
    \ selection uses a topology database that\n   includes available bandwidth on\
    \ each link.  From the topology\n   database pruned of links that do not meet\
    \ the bandwidth constraint,\n   the GEF determines a list of shortest paths by\
    \ using a shortest path\n   algorithm (e.g., Bellman-Ford or Dijkstra methods).\
    \  This path list\n   is determined based on administrative weights of each link,\
    \ which are\n   communicated to all nodes within the routing domain (e.g.,\n \
    \  administrative weight = 1 + e x distance, where e is a factor giving\n   a\
    \ relatively smaller weight to the distance in comparison to the hop\n   count).\
    \  Analysis and simulation studies of a large national network\n   model show\
    \ that 6 or more primary and alternate cached paths provide\n   the best overall\
    \ performance.\n   PCE [RFC4655][RFC4657][RFC5440] is used to implement\n   inter-area/inter-AS/\
    \ inter-SP path selection algorithms, including\n   alternate path selection,\
    \ path reoptimization, backup path\n   computation to protect DS-TE tunnels, and\
    \ inter-area/inter-AS/inter-\n   SP traffic engineering.  The DS-TE tunnels are\
    \ protected against\n   failure by using MPLS Fast Reroute [RFC4090].  OSPF TE\
    \ extensions\n   [RFC4203] are used to support the TE database (TED) required\
    \ for\n   implementation of the above PCE path selection methods.\n   The example\
    \ MPLS GCAC method incorporates the MAR bandwidth\n   constraint model [RFC4126]\
    \ incorporated within DS-TE [RFC4124].  In\n   DS-TE/MAR, a small amount of reserved\
    \ bandwidth RBTk governs the\n   admission control on link k.  Associated with\
    \ each CTc on link k are\n   the allocated bandwidth constraints BWCck to govern\
    \ bandwidth\n   allocation and protection.  The reservation bandwidth on a link,\n\
    \   RBTk, can be accessed when a given CTc has reserved bandwidth RBWck\n   below\
    \ its allocated bandwidth constraint BWCck.  However, if RBWck\n   exceeds its\
    \ allocated bandwidth constraint BWCck, then the\n   reservation bandwidth threshold\
    \ RBTk cannot be accessed.  In this\n   way, bandwidth can be fully shared among\
    \ CTs if available but is\n   otherwise protected by bandwidth reservation methods.\
    \  Therefore,\n   bandwidth can be accessed for a bandwidth request = DBW for\
    \ CTc on a\n   given link k based on the following rules:\n   For an LSP on a\
    \ high-priority or normal-priority CTc:\n   If RBWck = BWCc, admit if DBW = ULBk\n\
    \   If RBWck > BWCc, admit if DBW = ULBk - RBTk;\n   or, equivalently:\n   If\
    \ DBW = ULBCck, admit the LSP.\n   where\n   ULBCck = idle link bandwidth on link\
    \ k for CTc = ULBk -\n            delta0/1(CTck) x RBWk\n   delta0/1(CTck) = 0\
    \ if RBWck < BWCck\n   delta0/1(CTck) = 1 if RBWck = BWCck\n   For an LSP on a\
    \ best-effort-priority CTc:\n   allocated bandwidth BWCc = 0;\n   Diffserv queuing\
    \ serves best-effort packets only if there is\n   available link bandwidth.\n\
    \   In setting the bandwidth constraints for CTck, for a normal-priority\n   CTc,\
    \ the bandwidth constraints (BWCck) on link k are set by\n   allocating the maximum\
    \ reservable link bandwidth (MRBk) in proportion\n   to the forecast or measured\
    \ traffic load bandwidth TRAF_LOAD_BWck for\n   CTc on link k.  That is:\n   PROPORTIONAL_\
    \ BWck =\n   TRAF_LOAD_ BWck/[S (c) {TRAF_LOAD_ BWck, c=0, MaxCT-1}] x MRBk\n\
    \   For a normal-priority CTc:\n   BWCck = PROPORTIONAL_ BWck\n   For a high-priority\
    \ CT, the bandwidth constraint BWCck is set to a\n   multiple of the proportional\
    \ bandwidth.  That is:\n   For high-priority CTc:\n   BWCck = FACTOR * PROPORTIONAL_\
    \ BWck\n   where FACTOR is set to a multiple of the proportional bandwidth\n \
    \  (e.g., FACTOR = 2 or 3 is typical).  This results in some over-\n   allocation\
    \ ('overbooking') of the link bandwidth and gives priority\n   to the high-priority\
    \ CTs.  Normally, the bandwidth allocated to high-\n   priority CTs should be\
    \ a relatively small fraction of the total link\n   bandwidth, a maximum of 10-15\
    \ percent being a reasonable guideline.\n   As stated above, the bandwidth allocated\
    \ to a best-effort-priority\n   CTc is set to zero.  That is:\n   For a best-effort-priority\
    \ CTc:\n   BWCck = 0\n   Analysis and simulation studies show that the level of\
    \ reserved\n   capacity RBTk in the range of 3-5% of link capacity provides the\
    \ best\n   overall performance.\n   We give a simple example of the MAR bandwidth\
    \ allocation method.\n   Assume that there are two class types, CT0 and CT1, and\
    \ a particular\n   link with\n   MRB = 100\n   with the allocated bandwidth constraints\
    \ set as follows:\n   BWC0 = 30\n   BWC1 = 50\n   These bandwidth constraints\
    \ are based on the forecasted traffic\n   loads, as discussed above.  Either CT\
    \ is allowed to exceed its\n   bandwidth constraint BWCc as long a there is at\
    \ least RBW units of\n   spare bandwidth remaining.  Assume RBT = 10.  So under\
    \ overload, if\n   RBW0 = 20\n   RBW1 = 70\n   Then, for this loading\n   UBW\
    \ = 100 - 20 - 70 = 10\n   If a bandwidth increase request = 5 = DBW arrives for\
    \ Class Type 0\n   (CT0), then accept for CT0 since RBW0 < BWC0 and DBW (= 5)\
    \ < ILBW (=\n   10).\n   If a bandwidth increase request = 5 = DBW arrives for\
    \ Class Type 1\n   (CT1), then reject for CT1 since RBW1 > BC1 and DBW (= 5) >\
    \ ILBW -\n   RBT = 10 - 10 = 0.\n   Therefore, CT0 can take the additional bandwidth\
    \ (up to 10 units) if\n   the demand arrives, since it is below its BWC value.\
    \  CT1, however,\n   can no longer increase its bandwidth on the link, since it\
    \ is above\n   its BWC value and there is only RBT=10 units of idle bandwidth\
    \ left\n   on the link.  If best effort traffic is present, it can always seize\n\
    \   whatever idle bandwidth is available on the link at the moment but is\n  \
    \ subject to being lost at the queues in favor of the higher-priority\n   traffic.\n\
    \   On the other hand, if a request arrives to increase bandwidth for CT1\n  \
    \ by 5 units of bandwidth (i.e., DBW = 5), we need to decide whether or\n   not\
    \ to admit this request.  Since for CT1,\n   RBW1 > BWC1 (70 > 50), and\n   DBW\
    \ > UBW - RBT (i.e., 5 > 10 - 10)\n   the bandwidth request is rejected by the\
    \ bandwidth allocation rules\n   given above.  Now let's say a request arrives\
    \ to increase bandwidth\n   for CT0 by 5 units of bandwidth (i.e., DBW = 5). \
    \ We need to decide\n   whether or not to admit this request.  Since for CT0\n\
    \   RBW0 < BWC0 (20 < 30), and\n   DBW < UBW (i.e., 5 < 10)\n   The example illustrates\
    \ that with the current state of the link and\n   the current CT loading, CT1\
    \ can no longer increase its bandwidth on\n   the link, since it is above its\
    \ BWC1 value and there is only RBW=10\n   units of spare bandwidth left on the\
    \ link.  But CT0 can take the\n   additional bandwidth (up to 10 units) if the\
    \ demand arrives, since it\n   is below its BWC0 value.\n   For the example GCAC,\
    \ the method for bandwidth additions and\n   deletions to LSPs in is as follows.\
    \  The bandwidth constraint\n   parameters defined in the MAR method [RFC4126]\
    \ do not change based on\n   traffic conditions.  In particular, these parameters\
    \ defined in\n   [RFC4126], as described above, are configured and do not change\
    \ until\n   reconfigured: MRBk, BWCck, and RBTk.  However, the reserved bandwidth\n\
    \   variables change based on traffic: RBWck, ULBk, and ULBCck.  The\n   RBWck\
    \ and bandwidth allocated to each DS-TE/MAR tunnel is dynamically\n   changed\
    \ based on traffic: it is increased when the traffic demand\n   increases (using\
    \ RSVP aggregation), and it is periodically decreased\n   when the traffic demand\
    \ decreases.  Furthermore, if tunnel bandwidth\n   cannot be increased on the\
    \ primary path, an alternate LSP path is\n   tried.  When LSP tunnel bandwidth\
    \ needs to be increased to\n   accommodate a given aggregate flow request, the\
    \ bandwidth is\n   increased by the amount of the needed additional bandwidth,\
    \ if\n   possible.  The tunnel bandwidth quickly rises to the currently needed\n\
    \   maximum bandwidth level, wherein no further requests are made to\n   increase\
    \ bandwidth, since departing flows leave a constant amount of\n   available or\
    \ spare bandwidth in the tunnel to use for new requests.\n   Tunnel bandwidth\
    \ is reduced every 120 seconds by 0.5 times the\n   difference between the allocated\
    \ tunnel bandwidth and the current\n   level of the actually utilized bandwidth\
    \ (i.e., the current level of\n   spare bandwidth).  Analysis and simulation modeling\
    \ results show that\n   these parameters provide the best performance across a\
    \ number of\n   overload and failure scenarios.\n"
- title: A.2.  Example of QoS Signaling Implementation
  contents:
  - "A.2.  Example of QoS Signaling Implementation\n   The example GCAC method uses\
    \ Next Steps in Signaling (NSIS)\n   algorithms for signaling MPLS GCAC QoS requirements\
    \ of individual\n   flows.  NSIS QoS signaling has been specified by the IETF\
    \ NSIS\n   working group and extends RSVP signaling by defining a two-layer QoS\n\
    \   signaling model:\n   o  NSIS Transport Layer Protocol (NTLP) [RFC5971]\n \
    \  o  NSIS Signaling Layer Protocol (NSLP) for Quality-of-Service\n      Signaling\
    \ [RFC5974]\n   [RFC5975] defines a QoS specification (QSPEC) object, which contains\n\
    \   the QoS parameters required by a QoS model (QOSM) [RFC5976].  A QOSM\n   specifies\
    \ the QoS parameters and procedures that govern the resource\n   management functions\
    \ in a QoS-aware router.  Multiple QOSMs can be\n   supported by the QoS-NSLP,\
    \ and the QoS-NSLP allows stacking of QSPEC\n   parameters to accommodate different\
    \ QOSMs being used in different\n   domains.  As such, NSIS provides a mechanism\
    \ for interdomain QoS\n   signaling and interworking.\n   The QSPEC parameters\
    \ defined in [RFC5975] include, among others:\n   TRAFFIC DESCRIPTION Parameters:\n\
    \   o  <Traffic Model> Parameters\n   CONSTRAINTS Parameters:\n   o  <Path Latency>,\
    \ <Path Jitter>, <Path PLR>, and <Path PER>\n      Parameters\n   o  <PHB Class>\
    \ Parameter\n   o  <DSTE Class Type> Parameter\n   o  <Y.1541 QoS Class> Parameter\n\
    \   o  <Reservation Priority> Parameter\n   o  <Preemption Priority> and <Defending\
    \ Priority> Parameters\n   The ability to achieve end-to-end QoS through multiple\
    \ Internet\n   domains is also an important requirement.  MPLS GCAC end-to-end\
    \ QoS\n   signaling ensures that end-to-end QoS is met by applying the\n   Y.1541-QOSM\
    \ [RFC5976], as now illustrated.\n   The QoS GEF initiates an end-to-end, inter-domain\
    \ QoS RESERVE message\n   containing the QoS parameters, including for example,\
    \ <Traffic\n   Model>, <Y.1541 QoS Class>, <Reservation Priority>, and perhaps\
    \ other\n   parameters for the flow.  The RESERVE message may cross multiple\n\
    \   domains; each node on the data path checks the availability of\n   resources\
    \ and accumulating the delay, delay variation, and loss ratio\n   parameters,\
    \ as described below.  If an intermediate node cannot\n   accommodate the new\
    \ request, the reservation is denied.  If no\n   intermediate node has denied\
    \ the reservation, the RESERVE message is\n   forwarded to the next domain.  If\
    \ any node cannot meet the\n   requirements designated by the RESERVE message\
    \ to support a QoS\n   parameter, for example, it cannot support the accumulation\
    \ of end-to-\n   end delay with the <Path Latency> parameter, the node sets a\
    \ flag\n   that will deny the reservation.  Also, parameter negotiation can be\n\
    \   done, for example, by setting the <Y.1541 QoS Class> to a lower class\n  \
    \ than specified in the RESERVE message.  When the available <Y.1541\n   QoS Class>\
    \ must be reduced from the desired <Y.1541 QoS Class>, say\n   because the delay\
    \ objective has been exceeded, then there is an\n   incentive to respond to the\
    \ GEF with an available value for delay in\n   the <Path Latency> parameter. \
    \ For example, if the available <Path\n   Latency> is 150 ms (still useful for\
    \ many applications) and the\n   desired QoS is 100 ms (according to the desired\
    \ <Y.1541 QoS Class>\n   Class 0), then the response would be that Class 0 cannot\
    \ be achieved\n   and Class 1 is available (with its 400 ms objective).  In addition,\n\
    \   the response includes an available <Path Latency> = 150 ms, making\n   acceptance\
    \ of the available <Y.1541 QoS Class> more likely.\n"
- title: A.3.  Example of Queuing Implementation
  contents:
  - "A.3.  Example of Queuing Implementation\n   In this MPLS GCAC example, queuing\
    \ behaviors for the CT traffic\n   priorities incorporates Diffserv mechanisms\
    \ and assumes separate\n   queues based on Traffic Class (TC)/CoS bits.  The queuing\n\
    \   implementation assumes 3 levels of priority:  high, normal, and best\n   effort.\
    \  These queues include two EF priority queues\n   [RFC3246][RFC5865], with the\
    \ highest priority assigned to emergency\n   traffic (GETS/ETS/E911) and the second\
    \ priority assigned to normal-\n   priority real-time (e.g., VoIP) traffic.  Separate\
    \ AF queues\n   [RFC2597] are used for data services, such as premium private\
    \ data\n   and premium public data traffic, and a separate best-effort queue is\n\
    \   assumed for the best-effort traffic.  All queues have static\n   bandwidth\
    \ allocation limits applied based on the level of forecast\n   traffic on each\
    \ link, such that the bandwidth limits will not be\n   exceeded under normal conditions,\
    \ allowing for some traffic overload.\n   In the MPLS GCAC method, high-priority,\
    \ normal-priority, and best-\n   effort traffic share the same network; under\
    \ congestion, the Diffserv\n   priority-queuing mechanisms push out the best-effort-priority\
    \ traffic\n   at the queues so that the normal-priority and high-priority traffic\n\
    \   can get through on the MPLS-allocated LSP bandwidth.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Gerald Ash (editor)\n   AT&T\n   EMail:  gash5107@yahoo.com\n\
    \   Dave McDysan\n   Verizon\n   22001 Loudoun County Pkwy\n   Ashburn, VA  20147\n\
    \   EMail:  dave.mcdysan@verizon.com\n"
