- title: __initial_text__
  contents:
  - '         Internet Message Access Protocol - ANNOTATE Extension

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The ANNOTATE extension to the Internet Message Access Protocol\n\
    \   permits clients and servers to maintain \"meta data\" for messages, or\n \
    \  individual message parts, stored in a mailbox on the server.  For\n   example,\
    \ this can be used to attach comments and other useful\n   information to a message.\
    \  It is also possible to attach annotations\n   to specific parts of a message,\
    \ so that, for example, they could be\n   marked as seen, or important, or a comment\
    \ added.\n   Note that this document was the product of a WG that had good\n \
    \  consensus on how to approach the problem.  Nevertheless, the WG felt\n   it\
    \ did not have enough information on implementation and deployment\n   hurdles\
    \ to meet all of the requirements of a Proposed Standard.  The\n   IETF solicits\
    \ implementations and implementation reports in order to\n   make further progress.\n\
    \   Implementers should be aware that this specification may change in an\n  \
    \ incompatible manner when going to Proposed Standard status.  However,\n   any\
    \ incompatible changes will result in a new capability name being\n   used to\
    \ prevent problems with any deployments of the experimental\n   extension.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction and Overview .......................................3\n\
    \   2. Conventions Used in This Document ...............................4\n  \
    \ 3. Data Model ......................................................4\n    \
    \  3.1. Overview ...................................................4\n      3.2.\
    \ Namespace of Entries and Attributes ........................4\n           3.2.1.\
    \ Entry Names .........................................5\n           3.2.2. Attribute\
    \ Names .....................................7\n      3.3. Private Versus Shared\
    \ ......................................7\n      3.4. Access Control .............................................8\n\
    \      3.5. Access to Standard IMAP Flags and Keywords ................11\n  \
    \ 4. IMAP Protocol Changes ..........................................11\n    \
    \  4.1. General Considerations ....................................11\n      4.2.\
    \ ANNOTATE Parameter with the SELECT/EXAMINE Commands .......12\n      4.3. ANNOTATION\
    \ Message Data Item in FETCH Command .............12\n      4.4. ANNOTATION Message\
    \ Data Item in FETCH Response ............14\n      4.5. ANNOTATION Message Data\
    \ Item in STORE .....................16\n      4.6. ANNOTATION Interaction with\
    \ COPY ..........................18\n      4.7. ANNOTATION Message Data Item in\
    \ APPEND ....................18\n      4.8. ANNOTATION Criterion in SEARCH ............................19\n\
    \      4.9. ANNOTATION Key in SORT ....................................20\n  \
    \    4.10. New ACL Rights ...........................................21\n   5.\
    \ Formal Syntax ..................................................21\n   6. IANA\
    \ Considerations ............................................23\n      6.1. Entry\
    \ and Attribute Registration Template .................23\n      6.2. Entry Registrations\
    \ .......................................24\n           6.2.1. /comment ...........................................24\n\
    \           6.2.2. /flags .............................................24\n  \
    \         6.2.3. /altsubject ........................................25\n    \
    \       6.2.4. /<section-part>/comment ............................25\n      \
    \     6.2.5. /<section-part>/flags/seen .........................26\n        \
    \   6.2.6. /<section-part>/flags/answered .....................26\n          \
    \ 6.2.7. /<section-part>/flags/flagged ......................27\n           6.2.8.\
    \ /<section-part>/flags/forwarded ....................27\n      6.3. Attribute\
    \ Registrations ...................................28\n           6.3.1. value\
    \ ..............................................28\n           6.3.2. size ...............................................28\n\
    \      6.4. Capability Registration ...................................28\n  \
    \ 7. Internationalization Considerations ............................29\n   8.\
    \ Security Considerations ........................................29\n   9. References\
    \ .....................................................29\n      9.1. Normative\
    \ References ......................................29\n      9.2. Informative\
    \ References ....................................30\n   10. Acknowledgments ...............................................30\n"
- title: 1.  Introduction and Overview
  contents:
  - "1.  Introduction and Overview\n   The ANNOTATE extension is present in any IMAP\
    \ [RFC3501]\n   implementation that returns \"ANNOTATE-EXPERIMENT-1\" as one of\
    \ the\n   supported capabilities in the CAPABILITY response.\n   This extension\
    \ makes the following changes to the IMAP protocol:\n     a.  adds a new ANNOTATION\
    \ message data item for use in FETCH.\n     b.  adds a new ANNOTATION message\
    \ data item for use in STORE.\n     c.  adds a new ANNOTATION search criterion\
    \ for use in SEARCH.\n     d.  adds a new ANNOTATION sort key for use in the SORT\
    \ extension.\n     e.  adds a new ANNOTATION data item for use in APPEND.\n  \
    \   f.  adds a new requirement on the COPY command.\n     g.  adds a new ANNOTATE\
    \ parameter for use with the SELECT/EXAMINE\n         commands.\n     h.  adds\
    \ two new response codes to indicate store failures of\n         annotations.\n\
    \     i.  adds a new untagged response code for the SELECT or EXAMINE\n      \
    \   commands to indicate the maximum sized annotation that can be\n         stored.\n\
    \     j.  adds a new Access Control List (ACL) \"bit\" for use with the ACL\n\
    \         extensions [RFC2086] and [RFC4314].\n   The data model used for the\
    \ storage of annotations is based on the\n   Application Configuration Access\
    \ Protocol [RFC2244].  Note that there\n   is no inheritance in annotations.\n\
    \   If a server supports annotations, then it MUST store all annotation\n   data\
    \ permanently, i.e., there is no concept of \"session only\"\n   annotations that\
    \ would correspond to the behavior of \"session\" flags\n   as defined in the\
    \ IMAP base specification.\n   In order to provide optimum support for a disconnected\
    \ client (one\n   that needs to synchronize annotations for use when offline),\
    \ servers\n   SHOULD also support the Conditional STORE [RFC4551] extension.\n\
    \   The rest of this document describes the data model and protocol\n   changes\
    \ more rigorously.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The examples in this document use \"\
    C:\" and \"S:\" to indicate lines\n   sent by the client and server, respectively.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  Data Model
  contents:
  - '3.  Data Model

    '
- title: 3.1.  Overview
  contents:
  - "3.1.  Overview\n   The data model for annotations in ANNOTATE uses a uniquely\
    \ named\n   entry that contains a set of standard attributes.  Thus, a single\n\
    \   coherent unit of \"meta data\" for a message is stored as a single\n   entry,\
    \ made up of several attributes.\n   For example, a comment annotation added to\
    \ a message has an entry\n   name of \"/comment\".  This entry is composed of\
    \ several attributes\n   such as \"value\", \"size\", etc., that contain the properties\
    \ and data\n   of the entry.\n   The protocol changes to IMAP, described below,\
    \ allow a client to\n   access or change the values of any attribute in any entry\
    \ in a\n   message annotation, assuming it has sufficient access rights to do\
    \ so\n   (see Section 3.4 for specifics).\n"
- title: 3.2.  Namespace of Entries and Attributes
  contents:
  - "3.2.  Namespace of Entries and Attributes\n   A message may contain zero or more\
    \ annotations, each of which is a\n   single uniquely named entry.  Each entry\
    \ has a hierarchical name,\n   with each component of the name separated by a\
    \ slash (\"/\").  An entry\n   name MUST NOT contain two consecutive \"/\" characters\
    \ and MUST NOT end\n   with a \"/\" character.\n   Each entry is made up of a\
    \ set of attributes.  Each attribute has a\n   hierarchical name, with each component\
    \ of the name separated by a\n   period (\".\").  An attribute name MUST NOT contain\
    \ two consecutive \".\"\n   characters and MUST NOT end with a \".\" character.\n\
    \   The value of an attribute is \"NIL\" (has no value), or is a string of\n \
    \  zero or more octets.\n   Entry and attribute names MUST NOT contain asterisk\
    \ (\"*\") or percent\n   (\"%\") characters, and MUST NOT contain non-ASCII characters\
    \ or the\n   NULL octet.  Invalid entry or attribute names result in a BAD\n \
    \  response in any IMAP commands where they are used.\n   Attribute names MUST\
    \ NOT contain any hierarchical components with the\n   names \"priv\" or \"shared\"\
    , as those have special meaning (see Section\n   3.3).\n   Entry and attribute\
    \ names are case-sensitive.\n   Use of control or punctuation characters in entry\
    \ and attribute names\n   is strongly discouraged.\n   This specification defines\
    \ an initial set of entry and attribute\n   names available for use in message\
    \ annotations.  In addition, an\n   extension mechanism is described to allow\
    \ additional names to be\n   added as needed.\n"
- title: 3.2.1.  Entry Names
  contents:
  - "3.2.1.  Entry Names\n   Entry names MUST be specified in a standards track or\
    \ IESG approved\n   experimental RFC, or fall under the vendor namespace.  See\
    \ Section\n   6.1 for the registration template.\n   /\n      Defines the top-level\
    \ of entries associated with an entire\n      message.  This entry itself does\
    \ not contain any attributes.  All\n      entries that start with a numeric character\
    \ (\"0\" - \"9\") refer to\n      an annotation on a specific body part.  All\
    \ other entries are for\n      annotations on the entire message.\n   /comment\n\
    \      Defines a comment or note associated with an entire message.\n   /flags\n\
    \      This entry hierarchy is reserved for future use.\n   /altsubject\n    \
    \  Contains text supplied by the message recipient to be used by the\n      client,\
    \ instead of the original message Subject.\n   /vendor/<vendor-token>\n      Defines\
    \ the top-level of entries associated with an entire message\n      as created\
    \ by a particular product of some vendor.  These sub-\n      entries can be used\
    \ by vendors to provide client-specific\n      annotations.  The vendor-token\
    \ MUST be registered with IANA, using\n      the [RFC2244] vendor subtree registry.\n\
    \   /<section-part>\n      Defines the top-level of entries associated with a\
    \ specific body\n      part of a message.  This entry itself does not contain\
    \ any\n      attributes.  The section-part is a numeric part specifier.  Its\n\
    \      syntax is the same as the section-part ABNF element defined in\n      [RFC3501].\
    \  The server MUST return a BAD response if the client\n      uses an incorrect\
    \ part specifier (either incorrect syntax or a\n      specifier referring to a\
    \ non-existent part).  The server MUST\n      return a BAD response if the client\
    \ uses an empty part specifier\n      (which is used in IMAP to represent the\
    \ entire message).\n   /<section-part>/comment\n      Defines a comment or note\
    \ associated with a specific body part of\n      a message.\n   /<section-part>/flags\n\
    \      Defines the top-level of entries associated with the flag state\n     \
    \ for a specific body part of a message.  All sub-entries are\n      maintained\
    \ entirely by the client.  There is no implicit change to\n      any flag by the\
    \ server.\n          /<section-part>/flags/seen\n             This is similar\
    \ to the IMAP \\Seen flag, except it applies\n             to only the body part\
    \ referenced by the entry.\n          /<section-part>/flags/answered\n       \
    \      This is similar to the IMAP \\Answered flag, except it\n             applies\
    \ to only the body part referenced by the entry.\n          /<section-part>/flags/flagged\n\
    \             This is similar to the IMAP \\Flagged flag, except it\n        \
    \     applies to only the body part referenced by the entry.\n          /<section-part>/flags/forwarded\n\
    \             This is similar to the IMAP $Forwarded keyword, except it\n    \
    \         applies to only the body part referenced by the entry.\n      Defines\
    \ flags for a specific body part of a message.  The \"value\"\n      attribute\
    \ of each of the entries described above must be either\n      \"1\", \"0\", or\
    \ \"NIL\".  \"1\" corresponds to the flag being set.\n   /<section-part>/vendor/<vendor-token>\n\
    \      Defines the top-level of entries associated with a specific body\n    \
    \  part of a message as created by a particular product of some\n      vendor.\
    \  This entry can be used by vendors to provide client\n      specific annotations.\
    \  The vendor-token MUST be registered with\n      IANA.\n"
- title: 3.2.2.  Attribute Names
  contents:
  - "3.2.2.  Attribute Names\n   Attribute names MUST be specified in a standards\
    \ track or IESG\n   approved experimental RFC.  See Section 6.1 for the registration\n\
    \   template.\n   All attribute names implicitly have a \".priv\" and a \".shared\"\
    \ suffix\n   that maps to private and shared versions of the entry.  Searching\
    \ or\n   fetching without using either suffix will include both.  The client\n\
    \   MUST specify either a \".priv\" or \".shared\" suffix when storing an\n  \
    \ annotation or sorting on annotations.\n   value\n      A string or binary data\
    \ representing the value of the annotation.\n      To delete an annotation, the\
    \ client can store \"NIL\" into the\n      value.  If the client requests the\
    \ value attribute for a non-\n      existent entry, then the server MUST return\
    \ \"NIL\" for the value.\n      The content represented by the string is determined\
    \ by the\n      content-type used to register the entry (see Section 6.1 for entry\n\
    \      registration templates).  Where applicable, the registered\n      content-type\
    \ MUST include a charset parameter.  Text values SHOULD\n      use the utf-8 [RFC3629]\
    \ character set.  Note that binary data\n      (data which may contain the NULL\
    \ octet) is allowed (e.g., for\n      storing images), and this extension uses\
    \ the \"literal8\" syntax\n      element [RFC4466] to allow such data to be written\
    \ to or read from\n      the server.\n   size\n      The size of the value, in\
    \ octets.  Set automatically by the\n      server, read-only to clients.  If the\
    \ client requests the size\n      attribute for a non-existent entry, then the\
    \ server MUST return\n      \"0\" (zero) for the size.\n"
- title: 3.3.  Private Versus Shared
  contents:
  - "3.3.  Private Versus Shared\n   Some IMAP mailboxes are private, accessible only\
    \ to the owning user.\n   Other mailboxes are not, either because the owner has\
    \ set an ACL\n   [RFC4314] that permits access by other users, or because it is\
    \ a\n   shared mailbox.\n   This raises the issue of shared versus private annotations.\n\
    \   If all annotations are private, it is then impossible to have\n   annotations\
    \ in a shared or otherwise non-private mailbox be visible\n   to other users.\
    \  This eliminates what could be a useful aspect of\n   annotations in a shared\
    \ environment.  An example of such use is a\n   shared IMAP folder containing\
    \ bug reports.  Engineers may want to use\n   annotations to add information to\
    \ existing messages, indicate\n   assignments, status, etc.  This use requires\
    \ shared annotations.\n   If all annotations are shared, it is impossible to use\
    \ annotations\n   for private notes on messages in shared mailboxes.  Also, modifying\n\
    \   an ACL to permit access to a mailbox by other users may\n   unintentionally\
    \ expose private information.\n   There are also situations in which both shared\
    \ and private\n   annotations are useful.  For example, an administrator may want\
    \ to\n   set shared annotations on messages in a shared folder, which\n   individual\
    \ users may wish to supplement with additional notes.\n   If shared and private\
    \ annotations are to coexist, we need a clear way\n   to differentiate them. \
    \ Also, it should be as easy as possible for a\n   client to access both and not\
    \ overlook either.  There is also a\n   danger in allowing a client to store an\
    \ annotation without knowing if\n   it is shared or private.\n   This document\
    \ proposes two standard suffixes for all attributes:\n   \".shared\" and \".priv\"\
    .  A SEARCH or FETCH command that specifies\n   neither, uses both.  STORE, APPEND,\
    \ and SORT commands MUST explicitly\n   use \".priv\" or \".shared\" suffixes.\n\
    \   If the ANNOTATE extension is present, support for shared annotations\n   in\
    \ servers is REQUIRED, while support for private annotations in\n   servers is\
    \ OPTIONAL.  This recognizes the fact that support for\n   private annotations\
    \ may introduce a significant increase in\n   complexity to a server in terms\
    \ of tracking ownership of the\n   annotations, how quota is determined for users\
    \ based on their own\n   annotations, etc.  Clients that support the ANNOTATE\
    \ extension MUST\n   handle both shared and private annotations.\n"
- title: 3.4.  Access Control
  contents:
  - "3.4.  Access Control\n   A user needs to have appropriate rights in order to\
    \ read or write\n   \".priv\" or \".shared\" annotation values.  How those rights\
    \ are\n   calculated depends on whether or not the ACL [RFC2086] extension or\n\
    \   its update [RFC4314] is present.  If a client attempts to store or\n   fetch\
    \ an annotation to which they do not have the appropriate rights,\n   the server\
    \ MUST respond with a NO response.\n   When the ACL extension is not present,\
    \ access to annotation values is\n   governed by the nature of the selected state,\
    \ in particular whether\n   the mailbox was SELECTED or EXAMINED in READ-ONLY\
    \ or READ-WRITE mode.\n   When the ACL extension is present, the server MUST recognize\
    \ the new\n   ACL \"n\" right, in addition to the ones defined by the ACL extension\n\
    \   itself.\n   For \".priv\" annotation values, the \"r\" right controls both\
    \ read and\n   write access.  When it is on, access to \".priv\" annotations is\n\
    \   allowed; when it is off, access to \".priv\" annotations is disallowed.\n\
    \   For \".shared\" annotation values, the \"r\" right controls read access.\n\
    \   When it is on, \".shared\" annotations can be read; when it is off,\n   \"\
    .shared\" annotations cannot be read.\n   For \".shared\" annotation values, the\
    \ \"n\" right controls write access.\n   When it is on, \".shared\" annotations\
    \ can be changed or created\n   through either a STORE or APPEND command; when\
    \ it is off, \".shared\"\n   annotations cannot be changed or created.  The \"\
    n\" right constitutes\n   a \"shared flag right\" as defined in Section 6.2 of\
    \ [RFC4314].\n   A summary of all the access control restrictions is tabulated\
    \ below\n   +---------------+---------------+-----------------------------------+\n\
    \   |  Server Type  | Action on     | Type of mailbox                   |\n  \
    \ |               | annotation    |                                   |\n   +===============+===============+===================================+\n\
    \   |               |               |                                   |\n  \
    \ |               | read .priv    | Any mailbox that can be SELECTED  |\n   |\
    \               | values        | or EXAMINED.                      |\n   |  \
    \             |               |                                   |\n   |    \
    \           +---------------+-----------------------------------+\n   |      \
    \         |               |                                   |\n   |        \
    \       | write .priv   | Any SELECTED [READ-WRITE] mailbox.|\n   |          \
    \     | values        | SELECTED [READ-ONLY] mailboxes MAY|\n   | Server     \
    \   |               | also permit writes.               |\n   | without      \
    \ |               |                                   |\n   | ACL Extension +---------------+-----------------------------------+\n\
    \   |               |               |                                   |\n  \
    \ |               | read .shared  | Any mailbox that can be SELECTED  |\n   |\
    \               | values        | or EXAMINED.                      |\n   |  \
    \             |               |                                   |\n   |    \
    \           +---------------+-----------------------------------+\n   |      \
    \         |               |                                   |\n   |        \
    \       | write .shared | Any mailbox that can be SELECTED  |\n   |          \
    \     | values        | or EXAMINED and is [READ-WRITE].  |\n   |            \
    \   |               |                                   |\n   +---------------+---------------+-----------------------------------+\n\
    \   |               |               |                                   |\n  \
    \ |               | read .priv    | Any mailbox with the \"r\"          |\n  \
    \ |               | values        | ACL right.                        |\n   |\
    \               |               |                                   |\n   |  \
    \             +---------------+-----------------------------------+\n   |    \
    \           |               |                                   |\n   |      \
    \         | write .priv   | Any mailbox with the \"r\"          |\n   | Server\
    \        | values        | ACL right.                        |\n   | with    \
    \      |               |                                   |\n   | ACL Extension\
    \ +---------------+-----------------------------------+\n   |               |\
    \               |                                   |\n   |               | read\
    \ .shared  | Any mailbox with the \"r\"          |\n   |               | values\
    \        | ACL right.                        |\n   |               |         \
    \      |                                   |\n   |               +---------------+-----------------------------------+\n\
    \   |               |               |                                   |\n  \
    \ |               | write .shared | Any mailbox with the \"n\"          |\n  \
    \ |               | values        | ACL right.                        |\n   |\
    \               |               |                                   |\n   +---------------+---------------+-----------------------------------+\n"
- title: 3.5.  Access to Standard IMAP Flags and Keywords
  contents:
  - "3.5.  Access to Standard IMAP Flags and Keywords\n   Due to the ambiguity of\
    \ how private and shared values would map to\n   the base IMAP flag and keyword\
    \ values, the ANNOTATE extension does\n   not expose IMAP flags or keywords as\
    \ entries.  However, the /flags\n   annotation entry is reserved for future use\
    \ and MUST NOT be used by\n   clients or servers supporting this extension.\n\
    \   Clients that need to implement shared and private \"flags\" can create\n \
    \  their own annotation entries for those, completely bypassing the base\n   IMAP\
    \ flag/keyword behavior.\n"
- title: 4.  IMAP Protocol Changes
  contents:
  - '4.  IMAP Protocol Changes

    '
- title: 4.1.  General Considerations
  contents:
  - "4.1.  General Considerations\n   Servers may be able to offer only a limited\
    \ level of support for\n   annotations in mailboxes, and it is useful for clients\
    \ to be able to\n   know what level of support is available.  Servers MUST return\
    \ an\n   ANNOTATIONS response code during the SELECT or EXAMINE command for a\n\
    \   mailbox to indicate the level of support.  Possible data items used\n   with\
    \ the ANNOTATIONS response code are:\n      \"NONE\" - this indicates that the\
    \ mailbox being selected does not\n      support annotations at all.  Clients\
    \ MUST NOT attempt to use\n      annotation extensions in commands for this mailbox.\n\
    \      \"READ-ONLY\" - this indicates that the annotations supported by the\n\
    \      mailbox cannot be changed by the client.  Clients MUST NOT attempt\n  \
    \    to store annotations on any messages in a mailbox with this\n      response\
    \ code.\n      \"NOPRIVATE\" - this indicates that the server does not support\n\
    \      private annotations on the mailbox.  Only shared annotations are\n    \
    \  supported.  Clients SHOULD only attempt to read or store\n      annotations\
    \ attributes with the \".shared\" suffix.  If a client\n      uses an attribute\
    \ with the \".priv\" suffix in a FETCH command, then\n      servers should return\
    \ the attribute value in the FETCH response as\n      \"NIL\".  If a client uses\
    \ an attribute with the \".priv\" suffix in a\n      STORE command (or an APPEND\
    \ command targeted at the mailbox), then\n      the server MUST return a NO response.\n\
    \      numeric values - if servers support writable annotations, then the\n  \
    \    server MUST indicate the maximum size in octets for an annotation\n     \
    \ value by providing the maximum size value in the response code.\n      Clients\
    \ MUST NOT store annotation values of a size greater than\n      the amount indicated\
    \ by the server.  Servers MUST accept a minimum\n      annotation data size of\
    \ at least 1024 octets if annotations can be\n      written.\n   In addition,\
    \ the server MAY limit the total number of annotations for\n   a single message.\
    \  However, the server MUST provide a minimum\n   annotation count per message\
    \ of at least 10.\n"
- title: 4.2.  ANNOTATE Parameter with the SELECT/EXAMINE Commands
  contents:
  - "4.2.  ANNOTATE Parameter with the SELECT/EXAMINE Commands\n   The ANNOTATE extension\
    \ defines a single optional SELECT parameter\n   [RFC4466] \"ANNOTATE\", which\
    \ is used to turn on unsolicited responses\n   for annotations as described in\
    \ Section 4.4.  This optional parameter\n   results in a per-mailbox state change,\
    \ i.e., it must be used in each\n   SELECT/EXAMINE command in order to be effective,\
    \ irrespective of\n   whether it was used in a previous SELECT/EXAMINE during\
    \ the same\n   session.\n   Example:\n         C: a SELECT INBOX (ANNOTATE)\n\
    \         S: * FLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen)\n       \
    \  S: * OK [PERMANENTFLAGS (\\Answered \\Flagged \\Draft\n                   \
    \                        \\Deleted \\Seen \\*)]\n         S: * 10268 EXISTS\n\
    \         S: * 1 RECENT\n         S: * OK [UNSEEN 10268]\n         S: * OK [UIDVALIDITY\
    \ 890061587]\n         S: * OK [UIDNEXT 34643]\n         S: * OK [ANNOTATIONS\
    \ 20480 NOPRIVATE]\n         S: a OK [READ-WRITE] Completed\n      In the above\
    \ example, a SELECT command with the ANNOTATE parameter\n      is issued.  The\
    \ response from the server includes the required\n      ANNOTATIONS response that\
    \ indicates that the server supports\n      annotations up to a maximum size of\
    \ 20480 octets, and does not\n      support private annotations (only shared).\n"
- title: 4.3.  ANNOTATION Message Data Item in FETCH Command
  contents:
  - "4.3.  ANNOTATION Message Data Item in FETCH Command\n   This extension adds an\
    \ ANNOTATION message data item to the FETCH\n   command.  This allows clients\
    \ to retrieve annotations for a range of\n   messages in the currently selected\
    \ mailbox.\n   ANNOTATION <entry-specifier> <attribute-specifier>\n      The ANNOTATION\
    \ message data item, when used by the client in the\n      FETCH command, takes\
    \ an entry specifier and an attribute\n      specifier.\n   Example:\n       \
    \    C: a FETCH 1 (ANNOTATION (/comment value))\n           S: * 1 FETCH (ANNOTATION\
    \ (/comment\n                                       (value.priv \"My comment\"\
    \n                                        value.shared \"Group note\")))\n   \
    \        S: a OK Fetch complete\n      In the above example, the content of the\
    \ \"value\" attribute for the\n      \"/comment\" entry is requested by the client\
    \ and returned by the\n      server.  Since neither \".shared\" nor \".priv\"\
    \ was specified, both\n      are returned.\n   \"*\" and \"%\" wild card characters\
    \ can be used in entry specifiers to\n   match one or more characters at that\
    \ position, with the exception\n   that \"%\" does not match the \"/\" hierarchy\
    \ delimiter.  Thus, an entry\n   specifier of \"/%\" matches entries such as \"\
    /comment\" and\n   \"/altsubject\", but not \"/1/comment\".\n   Example:\n   \
    \        C: a UID FETCH 1123 (UID ANNOTATION\n                               \
    \ (/* (value.priv size.priv)))\n           S: * 12 FETCH (UID 1123 ANNOTATION\n\
    \                  (/comment (value.priv \"My comment\"\n                    \
    \                   size.priv \"10\")\n                   /altsubject (value.priv\
    \ \"Rhinoceroses!\"\n                                       size.priv \"13\")\n\
    \                   /vendor/foobar/label.priv\n                              \
    \         (value.priv \"label43\"\n                                        size.priv\
    \ \"7\")\n                   /vendor/foobar/personality\n                    \
    \                   (value.priv \"Tallulah Bankhead\"\n                      \
    \                  size.priv \"17\")))\n           S: a OK Fetch complete\n  \
    \    In the above example, the contents of the private \"value\" and\n      \"\
    size\" attributes for any entries in the \"/\" hierarchy are\n      requested\
    \ by the client and returned by the server.\n   Example:\n           C: a FETCH\
    \ 1 (ANNOTATION (/% value.shared))\n           S: * 1 FETCH (ANNOTATION\n    \
    \          (/comment (value.shared \"Patch Mangler\")\n               /altsubject\
    \ (value.shared \"Patches?  We don't\n               need no steenkin patches!\"\
    )))\n           S: a OK Fetch complete\n      In the above example, the contents\
    \ of the shared \"value\"\n      attributes for entries at the top level only\
    \ of the \"/\" hierarchy\n      are requested by the client and returned by the\
    \ server.\n   Entry and attribute specifiers can be lists of atomic specifiers,\
    \ so\n   that multiple items of each type may be returned in a single FETCH\n\
    \   command.\n   Example:\n           C: a FETCH 1 (ANNOTATION\n             \
    \   ((/comment /altsubject) value.priv))\n           S: * 1 FETCH (ANNOTATION\n\
    \                (/comment (value.priv \"What a chowder-head\")\n            \
    \     /altsubject (value.priv \"How to crush beer cans\")))\n           S: a OK\
    \ Fetch complete\n      In the above example, the contents of the private \"value\"\
    \n      attributes for the two entries \"/comment\" and \"/altsubject\" are\n\
    \      requested by the client and returned by the server.\n"
- title: 4.4.  ANNOTATION Message Data Item in FETCH Response
  contents:
  - "4.4.  ANNOTATION Message Data Item in FETCH Response\n   The ANNOTATION message\
    \ data item in the FETCH response displays\n   information about annotations in\
    \ a message.\n   ANNOTATION parenthesized list\n      The response consists of\
    \ a list of entries, each of which have a\n      list of attribute-value pairs.\n\
    \   Example:\n           C: a FETCH 1 (ANNOTATION (/comment value))\n        \
    \   S: * 1 FETCH (ANNOTATION (/comment\n                                     \
    \ (value.priv \"My comment\"\n                                       value.shared\
    \ NIL)))\n           S: a OK Fetch complete\n      In the above example, a single\
    \ entry with a single attribute-value\n      pair is returned by the server. \
    \ Since the client did not specify\n      a \".shared\" or \".priv\" suffix, both\
    \ are returned.  Only the\n      private attribute has a value (the shared value\
    \ is \"NIL\").\n   Example:\n           C: a FETCH 1 (ANNOTATION\n           \
    \     ((/comment /altsubject) value))\n           S: * 1 FETCH (ANNOTATION\n \
    \               (/comment (value.priv \"My comment\"\n                       \
    \              value.shared NIL)\n                 /altsubject (value.priv \"\
    My subject\"\n                                     value.shared NIL)))\n     \
    \      S: a OK Fetch complete\n      In the above example, two entries, each with\
    \ a single attribute-\n      value pair, are returned by the server.  Since the\
    \ client did not\n      specify a \".shared\" or \".priv\" suffix, both are returned.\
    \  Only\n      the private attributes have values; the shared attributes are\n\
    \      \"NIL\".\n   Example:\n           C: a FETCH 1 (ANNOTATION\n          \
    \                 (/comment (value size)))\n           S: * 1 FETCH (ANNOTATION\n\
    \                           (/comment\n                               (value.priv\
    \ \"My comment\"\n                                value.shared NIL\n         \
    \                       size.priv \"10\"\n                                size.shared\
    \ \"0\")))\n           S: a OK Fetch complete\n      In the above example, a single\
    \ entry with two attribute-value\n      pairs is returned by the server.  Since\
    \ the client did not specify\n      a \".shared\" or \".priv\" suffix, both are\
    \ returned.  Only the\n      private attributes have values; the shared attributes\
    \ are \"NIL\".\n   Servers SHOULD send ANNOTATION message data items in unsolicited\n\
    \   FETCH responses if an annotation entry is changed by a third-party,\n   and\
    \ the ANNOTATE select parameter was used.  This allows servers to\n   keep clients\
    \ updated with changes to annotations by other clients.\n   Unsolicited ANNOTATION\
    \ responses MUST NOT include ANNOTATION data\n   values -- only the entry name\
    \ of the ANNOTATION that has changed.\n   This restriction avoids sending ANNOTATION\
    \ data values (which may be\n   large) to a client unless the client explicitly\
    \ asks for the value.\n   Example:\n           C: a STORE 1 +FLAGS (\\Seen)\n\
    \           S: * 1 FETCH (FLAGS (\\Seen))\n                         ANNOTATION\
    \ (/comment))\n           S: a OK STORE complete\n      In the above example,\
    \ an unsolicited ANNOTATION response is\n      returned during a STORE command.\
    \  The unsolicited response\n      contains only the entry name of the annotation\
    \ that changed, and\n      not its value.\n"
- title: 4.5.  ANNOTATION Message Data Item in STORE
  contents:
  - "4.5.  ANNOTATION Message Data Item in STORE\n   ANNOTATION <parenthesized entry-attribute-value\
    \ list>\n      Sets the specified list of entries by adding or replacing the\n\
    \      specified attributes with the values provided.  Clients can use\n     \
    \ \"NIL\" for values of attributes it wants to remove from entries.\n   The ANNOTATION\
    \ message data item used with the STORE command has an\n   implicit \".SILENT\"\
    \ behavior.  This means the server does not generate\n   an untagged FETCH in\
    \ response to the STORE command and assumes that\n   the client updates its own\
    \ cache if the command succeeds.  Though\n   note, that if the Conditional STORE\
    \ extension [RFC4551] is present,\n   then an untagged FETCH response with a MODSEQ\
    \ data item will be\n   returned by the server as required by [RFC4551].\n   If\
    \ the server is unable to store an annotation because the size of\n   its value\
    \ is too large, the server MUST return a tagged NO response\n   with a \"[ANNOTATE\
    \ TOOBIG]\" response code.\n   If the server is unable to store a new annotation\
    \ because the maximum\n   number of allowed annotations has already been reached,\
    \ the server\n   MUST return a tagged NO response with a \"[ANNOTATE TOOMANY]\"\
    \ response\n   code.\n   Example:\n           C: a STORE 1 ANNOTATION (/comment\n\
    \                                    (value.priv \"My new comment\"))\n      \
    \     S: a OK Store complete\n      In the above example, the entry \"/comment\"\
    \ is created (if not\n      already present).  Its private attribute \"value\"\
    \ is created if not\n      already present, or replaced if it exists.  \"value.priv\"\
    \ is set to\n      \"My new comment\".\n   Example:\n           C: a STORE 1 ANNOTATION\
    \ (/comment\n                                    (value.shared NIL))\n       \
    \    S: a OK Store complete\n      In the above example, the shared \"value\"\
    \ attribute of the entry\n      \"/comment\" is removed by storing \"NIL\" into\
    \ the attribute.\n   Multiple entries can be set in a single STORE command by\
    \ listing\n   entry-attribute-value pairs in the list.\n   Example:\n        \
    \   C: a STORE 1 ANNOTATION (/comment\n                                    (value.priv\
    \ \"Get tix Tuesday\")\n                                    /altsubject\n    \
    \                                (value.priv \"Wots On\"))\n           S: a OK\
    \ Store complete\n      In the above example, the entries \"/comment\" and \"\
    /altsubject\" are\n      created (if not already present) and the private attribute\
    \ \"value\"\n      is created or replaced for each entry.\n   Multiple attributes\
    \ can be set in a single STORE command by listing\n   multiple attribute-value\
    \ pairs in the entry list.\n   Example:\n           C: a STORE 1 ANNOTATION (/comment\n\
    \                                    (value.priv \"My new comment\"\n        \
    \                             value.shared \"foo's bar\"))\n           S: a OK\
    \ Store complete\n      In the above example, the entry \"/comment\" is created\
    \ (if not\n      already present) and the private and shared \"value\" attributes\
    \ are\n      created if not already present, or replaced if they exist.\n"
- title: 4.6.  ANNOTATION Interaction with COPY
  contents:
  - "4.6.  ANNOTATION Interaction with COPY\n   The COPY command can be used to move\
    \ messages from one mailbox to\n   another on the same server.  Servers that support\
    \ the ANNOTATION\n   extension MUST, for each message being copied, copy all \"\
    .priv\"\n   annotation data for the current user only, and all \".shared\"\n \
    \  annotation data along with the message to the new mailbox.  The only\n   exceptions\
    \ to this are if the destination mailbox permissions are\n   such that either\
    \ the \".priv\" or \".shared\" annotations are not\n   allowed, or if the destination\
    \ mailbox is of a type that does not\n   support annotations or does not support\
    \ storing of annotations (a\n   mailbox that returns a \"NONE\" or \"READ-ONLY\"\
    \ response code in its\n   ANNOTATIONS response), or if the destination mailbox\
    \ cannot support\n   the size of an annotation because it exceeds the ANNOTATIONS\
    \ value.\n   Servers MUST NOT copy \".priv\" annotation data for users other than\n\
    \   the current user.\n"
- title: 4.7.  ANNOTATION Message Data Item in APPEND
  contents:
  - "4.7.  ANNOTATION Message Data Item in APPEND\n   ANNOTATION <parenthesized entry-attribute-value\
    \ list>\n      Sets the specified list of entries and attributes in the resulting\n\
    \      message.\n   The APPEND command can include annotations for the message\
    \ being\n   appended via the addition of a new append data item [RFC4466].  The\n\
    \   new data item can also be used with the multi-append [RFC3502]\n   extension\
    \ that allows multiple messages to be appended via a single\n   APPEND command.\n\
    \   Example:\n           C: a APPEND drafts ANNOTATION (/comment\n           \
    \     (value.priv \"Don't send until I say so\")) {310}\n           S: + Ready\
    \ for literal data\n           C: MIME-Version: 1.0\n           ...\n        \
    \   C:\n           S: a OK APPEND completed\n      In the above example, a comment\
    \ with a private value is added to a\n      new message appended to the mailbox.\
    \  The ellipsis represents the\n      bulk of the message.\n"
- title: 4.8.  ANNOTATION Criterion in SEARCH
  contents:
  - "4.8.  ANNOTATION Criterion in SEARCH\n   ANNOTATION <entry-name> <attribute-name>\
    \ <value>\n   The ANNOTATION criterion for the SEARCH command allows a client\
    \ to\n   search for a specified string in the value of an annotation entry of\n\
    \   a message.\n   Messages that have annotations with entries matching <entry-name>,\n\
    \   attributes matching <attribute-name>, and the specified string\n   <value>\
    \ in their values are returned in the SEARCH results.  The \"*\"\n   character\
    \ can be used in the entry name field to match any content in\n   those items.\
    \  The \"%\" character can be used in the entry name field\n   to match a single\
    \ level of hierarchy only.\n   Only the \"value\", \"value.priv\", and \"value.shared\"\
    \ attributes can be\n   searched.  Clients MUST NOT specify an attribute other\
    \ than either\n   \"value\", \"value.priv\", or \"value.shared\".  Servers MUST\
    \ return a BAD\n   response if the client tries to search any other attribute.\n\
    \   Example:\n           C: a SEARCH ANNOTATION /comment value \"IMAP4\"\n   \
    \        S: * SEARCH 2 3 5 7 11 13 17 19 23\n           S: a OK Search complete\n\
    \      In the above example, the message numbers of any messages\n      containing\
    \ the string \"IMAP4\" in the shared or private \"value\"\n      attribute of\
    \ the \"/comment\" entry are returned in the search\n      results.\n   Example:\n\
    \           C: a SEARCH ANNOTATION * value.priv \"IMAP4\"\n           S: * SEARCH\
    \ 1 2 3 5 8 13 21 34\n           S: a OK Search complete\n      In the above example,\
    \ the message numbers of any messages\n      containing the string \"IMAP4\" in\
    \ the private \"value\" attribute of\n      any entry are returned in the search\
    \ results.\n"
- title: 4.9.  ANNOTATION Key in SORT
  contents:
  - "4.9.  ANNOTATION Key in SORT\n   ANNOTATION <entry-name> <attribute-name>\n \
    \  The ANNOTATION criterion for the SORT command [RFC5256] instructs the\n   server\
    \ to return the sequence numbers or Unique Identifiers (UIDs) of\n   messages\
    \ in a mailbox, sorted using the values of the specified\n   annotations.  The\
    \ ANNOTATION criterion is available if the server\n   returns both ANNOTATE-EXPERIMENT-1\
    \ and SORT as supported capabilities\n   in the CAPABILITY command response.\n\
    \   Messages are sorted using the values of the <attribute-name>\n   attributes\
    \ in the <entry-name> entries.\n   Clients MUST provide either the \".priv\" or\
    \ \".shared\" suffix to the\n   attribute name to ensure that the server knows\
    \ which specific value\n   to sort on.\n   Only the \"value.priv\" and \"value.shared\"\
    \ attributes can be used for\n   sorting.  Clients MUST NOT specify an attribute\
    \ other than either\n   \"value.priv\" or \"value.shared\".  Servers MUST return\
    \ a BAD response\n   if the client tries to sort on any other attribute.\n   When\
    \ either \"value.priv\" or \"value.shared\" is being sorted, the\n   server MUST\
    \ use the character set value specified in the SORT command\n   to determine the\
    \ appropriate sort order.\n   Example:\n           C: a SORT (ANNOTATION /altsubject\
    \ value.shared) UTF-8 ALL\n           S: * SORT 2 3 4 5 1 11 10 6 7 9 8\n    \
    \       S: a OK Sort complete\n      In the above example, the message numbers\
    \ of all messages are\n      returned, sorted according to the shared \"value\"\
    \ attribute of the\n      \"/altsubject\" entry.\n   Note that the ANNOTATION\
    \ sort key must include a fully specified\n   entry -- wild cards are not allowed.\n"
- title: 4.10.  New ACL Rights
  contents:
  - "4.10.  New ACL Rights\n   As discussed in Section 3.4, this extension adds a\
    \ new \"n\" right to\n   the list of rights provided by the ACL extensions [RFC2086]\
    \ and\n   [RFC4314].\n"
- title: 5.  Formal Syntax
  contents:
  - "5.  Formal Syntax\n   The following syntax specification uses the Augmented Backus-Naur\n\
    \   Form (ABNF) notation as specified in [RFC5234].\n   Non-terminals referenced\
    \ but not defined below are as defined by\n   [RFC3501] with the new definitions\
    \ in [RFC4466] superseding those in\n   [RFC3501].\n   Except as noted otherwise,\
    \ all alphabetic characters are case-\n   insensitive.  The use of upper or lower\
    \ case characters to define\n   token strings is for editorial clarity only. \
    \ Implementations MUST\n   accept these strings in a case-insensitive fashion.\n\
    \      ann-size          = \"NONE\" /\n                           ((\"READ-ONLY\"\
    \ / nz-number)\n                            [SP \"NOPRIVATE\"])\n            \
    \               ; response codes indicating the level of\n                   \
    \        ; support for annotations in a mailbox\n      append-ext        =/ att-annotate\n\
    \                          ; modifies [RFC3501] extension behaviour\n      att-annotate\
    \      = \"ANNOTATION\" SP\n                               \"(\" entry-att *(SP\
    \ entry-att) \")\"\n      att-search        = \"value\" / \"value.priv\" / \"\
    value.shared\"\n                          ; the only attributes that can be searched\n\
    \      att-sort          = \"value.priv\" / \"value.shared\"\n               \
    \           ; the only attributes that can be sorted\n      att-value        \
    \ = attrib SP value\n      attrib            = astring\n                     \
    \     ; dot-separated attribute name\n                          ; MUST NOT contain\
    \ \"*\" or \"%\"\n      attribs           = attrib / \"(\" attrib *(SP attrib)\
    \ \")\"\n                          ; one or more attribute specifiers\n      capability\
    \        =/ \"ANNOTATE-EXPERIMENT-1\"\n                          ; defines the\
    \ capability for this extension\n      entries           = entry-match /\n   \
    \                       \"(\" entry-match *(SP entry-match) \")\"\n      entry\
    \             = astring\n                          ; slash-separated path to entry\n\
    \                          ; MUST NOT contain \"*\" or \"%\"\n      entry-att\
    \         = entry SP \"(\" att-value *(SP att-value) \")\"\n      entry-match\
    \       = list-mailbox\n                          ; slash-separated path to entry\n\
    \                          ; MAY contain \"*\" or \"%\" for use as wild cards\n\
    \      fetch-att         =/ \"ANNOTATION\" SP \"(\" entries SP attribs \")\"\n\
    \                          ; modifies original IMAP fetch-att\n      msg-att-dynamic\
    \   =/ \"ANNOTATION\" SP\n                             ( \"(\" entry-att *(SP\
    \ entry-att) \")\" /\n                               \"(\" entry *(SP entry) \"\
    )\" )\n                          ; extends FETCH response with annotation data\n\
    \      resp-text-code    =/ \"ANNOTATE\" SP \"TOOBIG\" /\n                   \
    \        \"ANNOTATE\" SP \"TOOMANY\" /\n                           \"ANNOTATIONS\"\
    \ SP ann-size\n                          ; new response codes\n      search-key\
    \        =/ \"ANNOTATION\" SP entry-match SP att-search\n                    \
    \       SP value\n                          ; modifies original IMAP search-key\n\
    \      select-param      =/ \"ANNOTATE\"\n                          ; defines\
    \ the select parameter used with\n                          ; ANNOTATE extension\n\
    \      sort-key          =/ \"ANNOTATION\" SP entry SP att-sort\n            \
    \              ; modifies original sort-key\n      store-att-flags   =/ att-annotate\n\
    \                          ; modifies original IMAP STORE command\n      value\
    \             = nstring / literal8\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   Entry names MUST be specified in a standards track\
    \ or IESG approved\n   experimental RFC, or fall under the vendor namespace. \
    \ Vendor names\n   MUST be registered.\n   Attribute names MUST be specified in\
    \ a standards track or IESG\n   approved experimental RFC.\n   Each entry registration\
    \ MUST include a content-type that is used to\n   indicate the nature of the annotation\
    \ value.  Where applicable, a\n   charset parameter MUST be included with the\
    \ content-type.\n"
- title: 6.1.  Entry and Attribute Registration Template
  contents:
  - "6.1.  Entry and Attribute Registration Template\n   To: iana@iana.org\n   Subject:\
    \ IMAP Annotate Registration\n   Please register the following IMAP Annotate item:\n\
    \   [] Entry        [] Attribute\n   Name: ______________________________\n  \
    \ Description: _______________________\n   ____________________________________\n\
    \   ____________________________________\n   Content-Type:_______________________\n\
    \   Contact person: ____________________\n           email:  ____________________\n"
- title: 6.2.  Entry Registrations
  contents:
  - "6.2.  Entry Registrations\n   The following templates specify the IANA registrations\
    \ of annotation\n   entries specified in this document.\n"
- title: 6.2.1.  /comment
  contents:
  - "6.2.1.  /comment\n   To: iana@iana.org\n   Subject: IMAP Annotate Registration\n\
    \   Please register the following IMAP Annotate item:\n   [X] Entry        []\
    \ Attribute\n   Name: /comment\n   Description: Defined in IMAP ANNOTATE extension\
    \ document.\n   Content-Type: text/plain; charset=utf-8\n   Contact person: Cyrus\
    \ Daboo\n           email:  cyrus@daboo.name\n"
- title: 6.2.2.  /flags
  contents:
  - "6.2.2.  /flags\n   To: iana@iana.org\n   Subject: IMAP Annotate Registration\n\
    \   Please register the following IMAP Annotate item:\n   [X] Entry        []\
    \ Attribute\n   Name: /flags\n   Description: Reserved entry hierarchy.\n   Content-Type:\
    \ -\n   Contact person: Cyrus Daboo\n           email:  cyrus@daboo.name\n"
- title: 6.2.3.  /altsubject
  contents:
  - "6.2.3.  /altsubject\n   To: iana@iana.org\n   Subject: IMAP Annotate Registration\n\
    \   Please register the following IMAP Annotate item:\n   [X] Entry        []\
    \ Attribute\n   Name: /altsubject\n   Description: Defined in IMAP ANNOTATE extension\
    \ document.\n   Content-Type: text/plain; charset=utf-8\n   Contact person: Cyrus\
    \ Daboo\n           email:  cyrus@daboo.name\n"
- title: 6.2.4.  /<section-part>/comment
  contents:
  - "6.2.4.  /<section-part>/comment\n   To: iana@iana.org\n   Subject: IMAP Annotate\
    \ Registration\n   Please register the following IMAP Annotate item:\n   [X] Entry\
    \        [] Attribute\n   Name: /<section-part>/comment\n   Description: Defined\
    \ in IMAP ANNOTATE extension document.\n   Content-Type: text/plain; charset=utf-8\n\
    \   Contact person: Cyrus Daboo\n           email:  cyrus@daboo.name\n"
- title: 6.2.5.  /<section-part>/flags/seen
  contents:
  - "6.2.5.  /<section-part>/flags/seen\n   To: iana@iana.org\n   Subject: IMAP Annotate\
    \ Registration\n   Please register the following IMAP Annotate item:\n   [X] Entry\
    \        [] Attribute\n   Name: /<section-part>/flags/seen\n   Description: Defined\
    \ in IMAP ANNOTATE extension document.\n   Content-Type: text/plain; charset=utf-8\n\
    \   Contact person: Cyrus Daboo\n           email:  cyrus@daboo.name\n"
- title: 6.2.6.  /<section-part>/flags/answered
  contents:
  - "6.2.6.  /<section-part>/flags/answered\n   To: iana@iana.org\n   Subject: IMAP\
    \ Annotate Registration\n   Please register the following IMAP Annotate item:\n\
    \   [X] Entry        [] Attribute\n   Name: /<section-part>/flags/answered\n \
    \  Description: Defined in IMAP ANNOTATE extension document.\n   Content-Type:\
    \ text/plain; charset=utf-8\n   Contact person: Cyrus Daboo\n           email:\
    \  cyrus@daboo.name\n"
- title: 6.2.7.  /<section-part>/flags/flagged
  contents:
  - "6.2.7.  /<section-part>/flags/flagged\n   To: iana@iana.org\n   Subject: IMAP\
    \ Annotate Registration\n   Please register the following IMAP Annotate item:\n\
    \   [X] Entry        [] Attribute\n   Name: /<section-part>/flags/flagged\n  \
    \ Description: Defined in IMAP ANNOTATE extension document.\n   Content-Type:\
    \ text/plain; charset=utf-8\n   Contact person: Cyrus Daboo\n           email:\
    \  cyrus@daboo.name\n"
- title: 6.2.8.  /<section-part>/flags/forwarded
  contents:
  - "6.2.8.  /<section-part>/flags/forwarded\n   To: iana@iana.org\n   Subject: IMAP\
    \ Annotate Registration\n   Please register the following IMAP Annotate item:\n\
    \   [X] Entry        [] Attribute\n   Name: /<section-part>/flags/forwarded\n\
    \   Description: Defined in IMAP ANNOTATE extension document.\n   Content-Type:\
    \ text/plain; charset=utf-8\n   Contact person: Cyrus Daboo\n           email:\
    \  cyrus@daboo.name\n"
- title: 6.3.  Attribute Registrations
  contents:
  - "6.3.  Attribute Registrations\n   The following templates specify the IANA registrations\
    \ of annotation\n   attributes specified in this document.\n"
- title: 6.3.1.  value
  contents:
  - "6.3.1.  value\n   To: iana@iana.org\n   Subject: IMAP Annotate Registration\n\
    \   Please register the following IMAP Annotate item:\n   [] Entry        [X]\
    \ Attribute\n   Name: value\n   Description: Defined in IMAP ANNOTATE extension\
    \ document.\n   Contact person: Cyrus Daboo\n           email:  cyrus@daboo.name\n"
- title: 6.3.2.  size
  contents:
  - "6.3.2.  size\n   To: iana@iana.org\n   Subject: IMAP Annotate Registration\n\
    \   Please register the following IMAP Annotate item:\n   [] Entry        [X]\
    \ Attribute\n   Name: size\n   Description: Defined in IMAP ANNOTATE extension\
    \ document.\n   Contact person: Cyrus Daboo\n           email:  cyrus@daboo.name\n"
- title: 6.4.  Capability Registration
  contents:
  - "6.4.  Capability Registration\n   This document registers \"ANNOTATE-EXPERIMENT-1\"\
    \ as an IMAPEXT\n   capability.\n"
- title: 7.  Internationalization Considerations
  contents:
  - "7.  Internationalization Considerations\n   Annotations may contain values that\
    \ include text strings, and both\n   searching and sorting are possible with annotations.\
    \  Servers MUST\n   follow standard IMAP text normalization, character set conversion,\n\
    \   and collation rules when such operations are carried out, as would be\n  \
    \ done for other textual fields being searched or sorted on.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Annotations whose values are intended to remain\
    \ private MUST be\n   stored in \".priv\" values instead of \".shared\" values,\
    \ which may be\n   accessible to other users.\n   Excluding the above issues,\
    \ the ANNOTATE extension does not raise any\n   security considerations that are\
    \ not present in the base IMAP\n   protocol; these issues are discussed in [RFC3501].\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2086]  Myers, J., \"IMAP4 ACL extension\"\
    , RFC 2086, January 1997.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC2244]  Newman, C. and J. Myers, \"ACAP -- Application\n              Configuration\
    \ Access Protocol\", RFC 2244, November 1997.\n   [RFC3501]  Crispin, M., \"INTERNET\
    \ MESSAGE ACCESS PROTOCOL - VERSION\n              4rev1\", RFC 3501, March 2003.\n\
    \   [RFC3502]  Crispin, M., \"Internet Message Access Protocol (IMAP) -\n    \
    \          MULTIAPPEND Extension\", RFC 3502, March 2003.\n   [RFC3629]  Yergeau,\
    \ F., \"UTF-8, a transformation format of ISO\n              10646\", STD 63,\
    \ RFC 3629, November 2003.\n   [RFC4314]  Melnikov, A., \"IMAP4 Access Control\
    \ List (ACL) Extension\",\n              RFC 4314, December 2005.\n   [RFC4466]\
    \  Melnikov, A. and C. Daboo, \"Collected Extensions to IMAP4\n              ABNF\"\
    , RFC 4466, April 2006.\n   [RFC5234]  Crocker, D., Ed., and P. Overell, \"Augmented\
    \ BNF for\n              Syntax Specifications: ABNF\", STD 68, RFC 5234, January\n\
    \              2008.\n   [RFC5256]  Crispin, M. and K. Murchison, \"Internet Message\
    \ Access\n              Protocol - SORT and THREAD Extensions\", RFC 5256, June\n\
    \              2008.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC4551]  Melnikov, A. and S. Hole, \"IMAP\
    \ Extension for Conditional\n              STORE Operation or Quick Flag Changes\
    \ Resynchronization\",\n              RFC 4551, June 2006.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   Many thanks to Chris Newman for his detailed comments\
    \ on the first\n   draft of this document, and to the participants at the ACAP\
    \ working\n   dinner in Pittsburgh.  The participants of the IMAPext working group\n\
    \   made significant contributions to this work.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Cyrus Daboo\n   Apple Inc.\n   1 Infinite Loop\n   Cupertino,\
    \ CA  95014\n   USA\n   EMail: cyrus@daboo.name\n   URI:   http://www.apple.com/\n\
    \   Randall Gellens\n   QUALCOMM Incorporated\n   5775 Morehouse Dr.\n   San Diego,\
    \ CA  92121-2779\n   USA\n   EMail: randy@qualcomm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
