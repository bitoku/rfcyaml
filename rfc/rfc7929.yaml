- title: __initial_text__
  contents:
  - ' DNS-Based Authentication of Named Entities (DANE) Bindings for OpenPGP

    '
- title: Abstract
  contents:
  - "Abstract\n   OpenPGP is a message format for email (and file) encryption that\n\
    \   lacks a standardized lookup mechanism to securely obtain OpenPGP\n   public\
    \ keys.  DNS-Based Authentication of Named Entities (DANE) is a\n   method for\
    \ publishing public keys in DNS.  This document specifies a\n   DANE method for\
    \ publishing and locating OpenPGP public keys in DNS\n   for a specific email\
    \ address using a new OPENPGPKEY DNS resource\n   record.  Security is provided\
    \ via Secure DNS, however the OPENPGPKEY\n   record is not a replacement for verification\
    \ of authenticity via the\n   \"web of trust\" or manual verification.  The OPENPGPKEY\
    \ record can be\n   used to encrypt an email that would otherwise have to be sent\n\
    \   unencrypted.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 7841.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7929.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Experiment Goal . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n     1.2.  Terminology . . . . . . . . . . . . . . . . . . . .\
    \ . . .   5\n   2.  The OPENPGPKEY Resource Record  . . . . . . . . . . . . .\
    \ . .   5\n     2.1.  The OPENPGPKEY RDATA Component  . . . . . . . . . . . .\
    \ .   6\n       2.1.1.  The OPENPGPKEY RDATA Content  . . . . . . . . . . . .\
    \   6\n       2.1.2.  Reducing the Transferable Public Key Size . . . . . .  \
    \ 7\n     2.2.  The OPENPGPKEY RDATA Wire Format  . . . . . . . . . . . .   7\n\
    \     2.3.  The OPENPGPKEY RDATA Presentation Format  . . . . . . . .   7\n  \
    \ 3.  Location of the OPENPGPKEY Record . . . . . . . . . . . . . .   8\n   4.\
    \  Email Address Variants and Internationalization\n       Considerations  . .\
    \ . . . . . . . . . . . . . . . . . . . . .   9\n   5.  Application Use of OPENPGPKEY\
    \ . . . . . . . . . . . . . . . .  10\n     5.1.  Obtaining an OpenPGP Key for\
    \ a Specific Email Address . .  10\n     5.2.  Confirming that an OpenPGP Key\
    \ is Current . . . . . . . .  10\n     5.3.  Public Key UIDs and Query Names .\
    \ . . . . . . . . . . . .  10\n   6.  OpenPGP Key Size and DNS  . . . . . . .\
    \ . . . . . . . . . . .  11\n   7.  Security Considerations . . . . . . . . .\
    \ . . . . . . . . . .  11\n     7.1.  MTA Behavior  . . . . . . . . . . . . .\
    \ . . . . . . . . .  12\n     7.2.  MUA Behavior  . . . . . . . . . . . . . .\
    \ . . . . . . . .  13\n     7.3.  Response Size . . . . . . . . . . . . . . .\
    \ . . . . . . .  14\n     7.4.  Email Address Information Leak  . . . . . . .\
    \ . . . . . .  14\n     7.5.  Storage of OPENPGPKEY Data  . . . . . . . . . .\
    \ . . . . .  14\n     7.6.  Security of OpenPGP versus DNSSEC . . . . . . . .\
    \ . . . .  15\n   8.  IANA Considerations . . . . . . . . . . . . . . . . . .\
    \ . . .  15\n     8.1.  OPENPGPKEY RRtype . . . . . . . . . . . . . . . . . .\
    \ . .  15\n   9.  References  . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  15\n     9.1.  Normative References  . . . . . . . . . . . . . . . . . .\
    \  15\n     9.2.  Informative References  . . . . . . . . . . . . . . . . .  16\n\
    \   Appendix A.  Generating OPENPGPKEY Records  . . . . . . . . . . .  18\n  \
    \ Appendix B.  OPENPGPKEY IANA Template . . . . . . . . . . . . . .  19\n   Acknowledgments\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  20\n   Author's Address \
    \ . . . . . . . . . . . . . . . . . . . . . . . .  20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   OpenPGP [RFC4880] public keys are used to encrypt or sign\
    \ email\n   messages and files.  To encrypt an email message, or verify a\n  \
    \ sender's OpenPGP signature, the email client Mail User Agent (MUA) or\n   the\
    \ email server Mail Transfer Agent (MTA) needs to locate the\n   recipient's OpenPGP\
    \ public key.\n   OpenPGP clients have relied on centralized \"well-known\" key\
    \ servers\n   that are accessed using the HTTP Keyserver Protocol [HKP].\n   Alternatively,\
    \ users need to manually browse a variety of different\n   front-end websites.\
    \  These key servers do not require a confirmation\n   of the email address used\
    \ in the User ID (UID) of the uploaded\n   OpenPGP public key.  Attackers can\
    \ -- and have -- uploaded rogue\n   public keys with other people's email addresses\
    \ to these key servers.\n   Once uploaded, public keys cannot be deleted.  People\
    \ who did not\n   pre-sign a key revocation can never remove their OpenPGP public\
    \ key\n   from these key servers once they have lost access to their private\n\
    \   key.  This results in receiving encrypted email that cannot be\n   decrypted.\n\
    \   Therefore, these key servers are not well suited to support MUAs and\n   MTAs\
    \ to automatically encrypt email -- especially in the absence of\n   an interactive\
    \ user.\n   This document describes a mechanism to associate a user's OpenPGP\n\
    \   public key with their email address, using the OPENPGPKEY DNS RRtype.\n  \
    \ These records are published in the DNS zone of the user's email\n   address.\
    \  If the user loses their private key, the OPENPGPKEY DNS\n   record can simply\
    \ be updated or removed from the zone.\n   The OPENPGPKEY data is secured using\
    \ Secure DNS [RFC4035].\n   The main goal of the OPENPGPKEY resource record is\
    \ to stop passive\n   attacks against plaintext emails.  While it can also thwart\
    \ some\n   active attacks (such as people uploading rogue keys to key servers\
    \ in\n   the hopes that others will encrypt to these rogue keys), this\n   resource\
    \ record is not a replacement for verifying OpenPGP public\n   keys via the \"\
    web of trust\" signatures, or manually via a fingerprint\n   verification.\n"
- title: 1.1.  Experiment Goal
  contents:
  - "1.1.  Experiment Goal\n   This specification is one experiment in improving access\
    \ to public\n   keys for end-to-end email security.  There are a range of ways\
    \ in\n   which this can reasonably be done for OpenPGP or S/MIME, for example,\n\
    \   using the DNS, or SMTP, or HTTP.  Proposals for each of these have\n   been\
    \ made with various levels of support in terms of implementation\n   and deployment.\
    \  For each such experiment, specifications such as\n   this will enable experiments\
    \ to be carried out that may succeed or\n   that may uncover technical or other\
    \ impediments to large- or small-\n   scale deployments.  The IETF encourages\
    \ those implementing and\n   deploying such experiments to publicly document their\
    \ experiences so\n   that future specifications in this space can benefit.\n \
    \  This document defines an RRtype whose use is Experimental.  The goal\n   of\
    \ the experiment is to see whether encrypted email usage will\n   increase if\
    \ an automated discovery method is available to MTAs and\n   MUAs to help the\
    \ end user with email encryption key management.\n   It is unclear if this RRtype\
    \ will scale to some of the larger email\n   service deployments.  Concerns have\
    \ been raised about the size of the\n   OPENPGPKEY record and the size of the\
    \ resulting DNS zone files.  This\n   experiment hopefully will give the working\
    \ group some insight into\n   whether or not this is a problem.\n   If the experiment\
    \ is successful, it is expected that the findings of\n   the experiment will result\
    \ in an updated document for standards track\n   approval.\n   The OPENPGPKEY\
    \ RRtype somewhat resembles the generic CERT record\n   defined in [RFC4398].\
    \  However, the CERT record uses sub-typing with\n   many different types of keys\
    \ and certificates.  It is suspected that\n   its general application of very\
    \ different protocols (PKIX versus\n   OpenPGP) has been the cause for lack of\
    \ implementation and\n   deployment.  Furthermore, the CERT record uses sub-typing,\
    \ which is\n   now considered to be a bad idea for DNS.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [RFC2119].\n   This document also makes use of standard DNSSEC and\
    \ DANE terminology.\n   See DNSSEC [RFC4033], [RFC4034], [RFC4035], and DANE [RFC6698]\
    \ for\n   these terms.\n"
- title: 2.  The OPENPGPKEY Resource Record
  contents:
  - "2.  The OPENPGPKEY Resource Record\n   The OPENPGPKEY DNS resource record (RR)\
    \ is used to associate an end\n   entity OpenPGP Transferable Public Key (see\
    \ Section 11.1 of\n   [RFC4880]) with an email address, thus forming an \"OpenPGP\
    \ public key\n   association\".  A user that wishes to specify more than one OpenPGP\n\
    \   key, for example, because they are transitioning to a newer stronger\n   key,\
    \ can do so by adding multiple OPENPGPKEY records.  A single\n   OPENPGPKEY DNS\
    \ record MUST only contain one OpenPGP key.\n   The type value allocated for the\
    \ OPENPGPKEY RR type is 61.  The\n   OPENPGPKEY RR is class independent.\n"
- title: 2.1.  The OPENPGPKEY RDATA Component
  contents:
  - "2.1.  The OPENPGPKEY RDATA Component\n   The RDATA portion of an OPENPGPKEY resource\
    \ record contains a single\n   value consisting of a Transferable Public Key formatted\
    \ as specified\n   in [RFC4880].\n"
- title: 2.1.1.  The OPENPGPKEY RDATA Content
  contents:
  - "2.1.1.  The OPENPGPKEY RDATA Content\n   An OpenPGP Transferable Public Key can\
    \ be arbitrarily large.  DNS\n   records are limited in size.  When creating OPENPGPKEY\
    \ DNS records,\n   the OpenPGP Transferable Public Key should be filtered to only\n\
    \   contain appropriate and useful data.  At a minimum, an OPENPGPKEY\n   Transferable\
    \ Public Key for the user hugh@example.com should contain:\n             o The\
    \ primary key X\n               o One User ID Y, which SHOULD match 'hugh@example.com'\n\
    \                 o Self-signature from X, binding X to Y\n   If the primary key\
    \ is not encryption-capable, at least one relevant\n   subkey should be included,\
    \ resulting in an OPENPGPKEY Transferable\n   Public Key containing:\n       \
    \    o The primary key X\n             o One User ID Y, which SHOULD match 'hugh@example.com'\n\
    \               o Self-signature from X, binding X to Y\n             o Encryption-capable\
    \ subkey Z\n               o Self-signature from X, binding Z to X\n         \
    \    o (Other subkeys, if relevant)\n   The user can also elect to add a few third-party\
    \ certifications,\n   which they believe would be helpful for validation in the\
    \ traditional\n   \"web of trust\".  The resulting OPENPGPKEY Transferable Public\
    \ Key\n   would then look like:\n           o The primary key X\n            \
    \ o One User ID Y, which SHOULD match 'hugh@example.com'\n               o Self-signature\
    \ from X, binding X to Y\n               o Third-party certification from V, binding\
    \ Y to X\n               o (Other third-party certifications, if relevant)\n \
    \            o Encryption-capable subkey Z\n               o Self-signature from\
    \ X, binding Z to X\n             o (Other subkeys, if relevant)\n"
- title: 2.1.2.  Reducing the Transferable Public Key Size
  contents:
  - "2.1.2.  Reducing the Transferable Public Key Size\n   When preparing a Transferable\
    \ Public Key for a specific OPENPGPKEY\n   RDATA format with the goal of minimizing\
    \ certificate size, a user\n   would typically want to:\n   o  Where one User\
    \ ID from the certifications matches the looked-up\n      address, strip away\
    \ non-matching User IDs and any associated\n      certifications (self-signatures\
    \ or third-party certifications).\n   o  Strip away all User Attribute packets\
    \ and associated\n      certifications.\n   o  Strip away all expired subkeys.\
    \  The user may want to keep revoked\n      subkeys if these were revoked prior\
    \ to their preferred expiration\n      time to ensure that correspondents know\
    \ about these earlier than\n      expected revocations.\n   o  Strip away all\
    \ but the most recent self-signature for the\n      remaining User IDs and subkeys.\n\
    \   o  Optionally strip away any uninteresting or unimportant third-party\n  \
    \    User ID certifications.  This is a value judgment by the user that\n    \
    \  is difficult to automate.  At the very least, expired and\n      superseded\
    \ third-party certifications should be stripped out.  The\n      user should attempt\
    \ to keep the most recent and most well-\n      connected certifications in the\
    \ \"web of trust\" in their\n      Transferable Public Key.\n"
- title: 2.2.  The OPENPGPKEY RDATA Wire Format
  contents:
  - "2.2.  The OPENPGPKEY RDATA Wire Format\n   The RDATA Wire Format consists of\
    \ a single OpenPGP Transferable\n   Public Key as defined in Section 11.1 of [RFC4880].\
    \  Note that this\n   format is without ASCII armor or base64 encoding.\n"
- title: 2.3.  The OPENPGPKEY RDATA Presentation Format
  contents:
  - "2.3.  The OPENPGPKEY RDATA Presentation Format\n   The RDATA Presentation Format,\
    \ as visible in master files [RFC1035],\n   consists of a single OpenPGP Transferable\
    \ Public Key as defined in\n   Section 11.1 of [RFC4880] encoded in base64 as\
    \ defined in Section 4\n   of [RFC4648].\n"
- title: 3.  Location of the OPENPGPKEY Record
  contents:
  - "3.  Location of the OPENPGPKEY Record\n   The DNS does not allow the use of all\
    \ characters that are supported\n   in the \"local-part\" of email addresses as\
    \ defined in [RFC5322] and\n   [RFC6530].  Therefore, email addresses are mapped\
    \ into DNS using the\n   following method:\n   1.  The \"left-hand side\" of the\
    \ email address, called the \"local-\n       part\" in both the mail message format\
    \ definition [RFC5322] and in\n       the specification for internationalized\
    \ email [RFC6530]) is\n       encoded in UTF-8 (or its subset ASCII).  If the\
    \ local-part is\n       written in another charset, it MUST be converted to UTF-8.\n\
    \   2.  The local-part is first canonicalized using the following rules.\n   \
    \    If the local-part is unquoted, any comments and/or folding\n       whitespace\
    \ (CFWS) around dots (\".\") is removed.  Any enclosing\n       double quotes\
    \ are removed.  Any literal quoting is removed.\n   3.  If the local-part contains\
    \ any non-ASCII characters, it SHOULD be\n       normalized using the Unicode\
    \ Normalization Form C from\n       [Unicode90].  Recommended normalization rules\
    \ can be found in\n       Section 10.1 of [RFC6530].\n   4.  The local-part is\
    \ hashed using the SHA2-256 [RFC5754] algorithm,\n       with the hash truncated\
    \ to 28 octets and represented in its\n       hexadecimal representation, to become\
    \ the left-most label in the\n       prepared domain name.\n   5.  The string\
    \ \"_openpgpkey\" becomes the second left-most label in\n       the prepared domain\
    \ name.\n   6.  The domain name (the \"right-hand side\" of the email address,\n\
    \       called the \"domain\" in [RFC5322]) is appended to the result of\n   \
    \    step 2 to complete the prepared domain name.\n   For example, to request\
    \ an OPENPGPKEY resource record for a user\n   whose email address is \"hugh@example.com\"\
    , an OPENPGPKEY query would\n   be placed for the following QNAME: \"c93f1e400f26708f98cb19d936620da35\n\
    \   eec8f72e57f9eec01c1afd6._openpgpkey.example.com\".  The corresponding\n  \
    \ RR in the example.com zone might look like (key shortened for\n   formatting):\n\
    \   c9[..]d6._openpgpkey.example.com. IN OPENPGPKEY <base64 public key>\n"
- title: 4.  Email Address Variants and Internationalization Considerations
  contents:
  - "4.  Email Address Variants and Internationalization Considerations\n   Mail systems\
    \ usually handle variant forms of local-parts.  The most\n   common variants are\
    \ upper- and lowercase, often automatically\n   corrected when a name is recognized\
    \ as such.  Other variants include\n   systems that ignore \"noise\" characters\
    \ such as dots, so that local-\n   parts 'johnsmith' and 'John.Smith' would be\
    \ equivalent.  Many systems\n   allow \"extensions\" such as 'john-ext' or 'mary+ext'\
    \ where 'john' or\n   'mary' is treated as the effective local-part, and 'ext'\
    \ is passed to\n   the recipient for further handling.  This can complicate finding\
    \ the\n   OPENPGPKEY record associated with the dynamically created email\n  \
    \ address.\n   [RFC5321] and its predecessors have always made it clear that only\n\
    \   the recipient MTA is allowed to interpret the local-part of an\n   address.\
    \  Therefore, sending MUAs and MTAs supporting OPENPGPKEY MUST\n   NOT perform\
    \ any kind of mapping rules based on the email address.  In\n   order to improve\
    \ chances of finding OPENPGP RRs for a particular\n   local-part, domains that\
    \ allow variant forms (such as treating local-\n   parts as case-insensitive)\
    \ might publish OPENPGP RRs for all variants\n   of local-parts, might publish\
    \ variants on first use (for example, a\n   webmail provider that also controls\
    \ DNS for a domain can publish\n   variants as used by owner of a particular local-part)\
    \ or just publish\n   OPENPGP RRs for the most common variants.\n   Section 3\
    \ above defines how the local-part is used to determine the\n   location where\
    \ one looks for an OPENPGPKEY record.  Given the variety\n   of local-parts seen\
    \ in email, designing a good experiment for this is\n   difficult, as: a) some\
    \ current implementations are known to lowercase\n   at least US-ASCII local-parts,\
    \ b) we know from (many) other\n   situations that any strategy based on guessing\
    \ and making multiple\n   DNS queries is not going to achieve consensus for good\
    \ reasons, and\n   c) the underlying issues are just hard -- see Section 10.1\
    \ of\n   [RFC6530] for discussion of just some of the issues that would need\n\
    \   to be tackled to fully address this problem.\n   However, while this specification\
    \ is not the place to try to address\n   these issues with local-parts, doing\
    \ so is also not required to\n   determine the outcome of this experiment.  If\
    \ this experiment\n   succeeds, then further work on email addresses with non-ASCII\
    \ local-\n   parts will be needed and, based on the findings from this experiment,\n\
    \   that would be better than doing nothing or starting this experiment\n   based\
    \ on a speculative approach to what is a very complex topic.\n"
- title: 5.  Application Use of OPENPGPKEY
  contents:
  - "5.  Application Use of OPENPGPKEY\n   The OPENPGPKEY record allows an application\
    \ or service to obtain an\n   OpenPGP public key and use it for verifying a digital\
    \ signature or\n   encrypting a message to the public key.  The DNS answer MUST\
    \ pass\n   DNSSEC validation; if DNSSEC validation reaches any state other than\n\
    \   \"Secure\" (as specified in [RFC4035]), the DNSSEC validation MUST be\n  \
    \ treated as a failure.\n"
- title: 5.1.  Obtaining an OpenPGP Key for a Specific Email Address
  contents:
  - "5.1.  Obtaining an OpenPGP Key for a Specific Email Address\n   If no OpenPGP\
    \ public keys are known for an email address, an\n   OPENPGPKEY DNS lookup MAY\
    \ be performed to seek the OpenPGP public key\n   that corresponds to that email\
    \ address.  This public key can then be\n   used to verify a received signed message\
    \ or can be used to send out\n   an encrypted email message.  An application whose\
    \ attempt fails to\n   retrieve a DNSSEC-verified OPENPGPKEY RR from the DNS should\
    \ remember\n   that failure for some time to avoid sending out a DNS request for\n\
    \   each email message the application is sending out; such DNS requests\n   constitute\
    \ a privacy leak.\n"
- title: 5.2.  Confirming that an OpenPGP Key is Current
  contents:
  - "5.2.  Confirming that an OpenPGP Key is Current\n   Locally stored OpenPGP public\
    \ keys are not automatically refreshed.\n   If the owner of that key creates a\
    \ new OpenPGP public key, that owner\n   is unable to securely notify all users\
    \ and applications that have its\n   old OpenPGP public key.  Applications and\
    \ users can perform an\n   OPENPGPKEY lookup to confirm that the locally stored\
    \ OpenPGP public\n   key is still the correct key to use.  If the locally stored\
    \ OpenPGP\n   public key is different from the DNSSEC-validated OpenPGP public\
    \ key\n   currently published in DNS, the confirmation MUST be treated as a\n\
    \   failure unless the locally stored OpenPGP key signed the newly\n   published\
    \ OpenPGP public key found in DNS.  An application that can\n   interact with\
    \ the user MAY ask the user for guidance; otherwise, the\n   application will\
    \ have to apply local policy.  For privacy reasons, an\n   application MUST NOT\
    \ attempt to look up an OpenPGP key from DNSSEC at\n   every use of that key.\n"
- title: 5.3.  Public Key UIDs and Query Names
  contents:
  - "5.3.  Public Key UIDs and Query Names\n   An OpenPGP public key can be associated\
    \ with multiple email addresses\n   by specifying multiple key UIDs.  The OpenPGP\
    \ public key obtained\n   from an OPENPGPKEY RR can be used as long as the query\
    \ and resulting\n   data form a proper email to the UID identity association.\n\
    \   CNAMEs (see [RFC2181]) and DNAMEs (see [RFC6672]) can be followed to\n   obtain\
    \ an OPENPGPKEY RR, as long as the original recipient's email\n   address appears\
    \ as one of the OpenPGP public key UIDs.  For example,\n   if the OPENPGPKEY RR\
    \ query for hugh@example.com\n   (8d57[...]b7._openpgpkey.example.com) yields\
    \ a CNAME to\n   8d57[...]b7._openpgpkey.example.net, and an OPENPGPKEY RR for\n\
    \   8d57[...]b7._openpgpkey.example.net exists, then this OpenPGP public\n   key\
    \ can be used, provided one of the key UIDs contains\n   \"hugh@example.com\"\
    .  This public key cannot be used if it would only\n   contain the key UID \"\
    hugh@example.net\".\n   If one of the OpenPGP key UIDs contains only a single\
    \ wildcard as the\n   left-hand side of the email address, such as \"*@example.com\"\
    , the\n   OpenPGP public key may be used for any email address within that\n \
    \  domain.  Wildcards at other locations (e.g., \"hugh@*.com\") or regular\n \
    \  expressions in key UIDs are not allowed, and any OPENPGPKEY RR\n   containing\
    \ these MUST be ignored.\n"
- title: 6.  OpenPGP Key Size and DNS
  contents:
  - "6.  OpenPGP Key Size and DNS\n   Due to the expected size of the OPENPGPKEY record,\
    \ applications\n   SHOULD use TCP -- not UDP -- to perform queries for the OPENPGPKEY\n\
    \   resource record.\n   Although the reliability of the transport of large DNS\
    \ resource\n   records has improved in the last years, it is still recommended\
    \ to\n   keep the DNS records as small as possible without sacrificing the\n \
    \  security properties of the public key.  The algorithm type and key\n   size\
    \ of OpenPGP keys should not be modified to accommodate this\n   section.\n  \
    \ OpenPGP supports various attributes that do not contribute to the\n   security\
    \ of a key, such as an embedded image file.  It is recommended\n   that these\
    \ properties not be exported to OpenPGP public keyrings that\n   are used to create\
    \ OPENPGPKEY resource records.  Some OpenPGP\n   software (for example, GnuPG)\
    \ supports a \"minimal key export\" that is\n   well suited to use as OPENPGPKEY\
    \ RDATA.  See Appendix A.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   DNSSEC is not an alternative for the \"web of\
    \ trust\" or for manual\n   fingerprint verification by users.  DANE for OpenPGP,\
    \ as specified in\n   this document, is a solution aimed to ease obtaining someone's\
    \ public\n   key.  Without manual verification of the OpenPGP key obtained via\n\
    \   DANE, this retrieved key should only be used for encryption if the\n   only\
    \ other alternative is sending the message in plaintext.  While\n   this thwarts\
    \ all passive attacks that simply capture and log all\n   plaintext email content,\
    \ it is not a security measure against active\n   attacks.  A user who publishes\
    \ an OPENPGPKEY record in DNS still\n   expects senders to perform their due diligence\
    \ by additional (non-\n   DNSSEC) verification of their public key via other out-of-band\n\
    \   methods before sending any confidential or sensitive information.\n   In other\
    \ words, the OPENPGPKEY record MUST NOT be used to send\n   sensitive information\
    \ without additional verification or confirmation\n   that the OpenPGP key actually\
    \ belongs to the target recipient.\n   DNSSEC does not protect the queries from\
    \ Pervasive Monitoring as\n   defined in [RFC7258].  Since DNS queries are currently\
    \ mostly\n   unencrypted, a query to look up a target OPENPGPKEY record could\n\
    \   reveal that a user using the (monitored) recursive DNS server is\n   attempting\
    \ to send encrypted email to a target.  This information is\n   normally protected\
    \ by the MUAs and MTAs by using Transport Layer\n   Security (TLS) encryption\
    \ using STARTTLS.  The DNS itself can\n   mitigate some privacy concerns, but\
    \ the user needs to select a\n   trusted DNS server that supports these privacy-enhancing\
    \ features.\n   Recursive DNS servers can support DNS Query Name Minimalisation\n\
    \   [RFC7816], which limits leaking the QNAME to only the recursive DNS\n   server\
    \ and the nameservers of the actual zone being queried for.\n   Recursive DNS\
    \ servers can also support TLS [RFC7858] to ensure that\n   the path between the\
    \ end user and the recursive DNS server is\n   encrypted.\n   Various components\
    \ could be responsible for encrypting an email\n   message to a target recipient.\
    \  It could be done by the sender's MUA\n   or a MUA plug-in or the sender's MTA.\
    \  Each of these have their own\n   characteristics.  A MUA can ask the user to\
    \ make a decision before\n   continuing.  The MUA can either accept or refuse\
    \ a message.  The MTA\n   must deliver the message as-is, or encrypt the message\
    \ before\n   delivering.  Each of these components should attempt to encrypt an\n\
    \   unencrypted outgoing message whenever possible.\n   In theory, two different\
    \ local-parts could hash to the same value.\n   This document assumes that such\
    \ a hash collision has a negligible\n   chance of happening.\n   Organizations\
    \ that are required to be able to read everyone's\n   encrypted email should publish\
    \ the escrow key as the OPENPGPKEY\n   record.  Mail servers of such organizations\
    \ MAY optionally re-encrypt\n   the message to the individual's OpenPGP key.\n"
- title: 7.1.  MTA Behavior
  contents:
  - "7.1.  MTA Behavior\n   An MTA could be operating in a stand-alone mode, without\
    \ access to\n   the sender's OpenPGP public keyring, or in a way where it can\
    \ access\n   the user's OpenPGP public keyring.  Regardless, the MTA MUST NOT\n\
    \   modify the user's OpenPGP keyring.\n   An MTA sending an email MUST NOT add\
    \ the public key obtained from an\n   OPENPGPKEY resource record to a permanent\
    \ public keyring for future\n   use beyond the TTL.\n   If the obtained public\
    \ key is revoked, the MTA MUST NOT use the key\n   for encryption, even if that\
    \ would result in sending the message in\n   plaintext.\n   If a message is already\
    \ encrypted, the MTA SHOULD NOT re-encrypt the\n   message, even if different\
    \ encryption schemes or different encryption\n   keys would be used.\n   If the\
    \ DNS request for an OPENPGPKEY record returned an Indeterminate\n   or Bogus\
    \ answer as specified in [RFC4035], the MTA MUST NOT send the\n   message and\
    \ queue the plaintext message for encrypted delivery at a\n   later time.  If\
    \ the problem persists, the email should be returned\n   via the regular bounce\
    \ methods.\n   If multiple non-revoked OPENPGPKEY resource records are found,\
    \ the\n   MTA SHOULD pick the most secure RR based on its local policy.\n"
- title: 7.2.  MUA Behavior
  contents:
  - "7.2.  MUA Behavior\n   If the public key for a recipient obtained from the locally\
    \ stored\n   sender's public keyring differs from the recipient's OPENPGPKEY RR,\n\
    \   the MUA SHOULD halt processing the message and interact with the user\n  \
    \ to resolve the conflict before continuing to process the message.\n   If the\
    \ public key for a recipient obtained from the locally stored\n   sender's public\
    \ keyring contains contradicting properties for the\n   same key obtained from\
    \ an OPENPGPKEY RR, the MUA SHOULD NOT accept\n   the message for delivery.\n\
    \   If multiple non-revoked OPENPGPKEY resource records are found, the\n   MUA\
    \ SHOULD pick the most secure OpenPGP public key based on its local\n   policy.\n\
    \   The MUA MAY interact with the user to resolve any conflicts between\n   locally\
    \ stored keyrings and OPENPGPKEY RRdata.\n   A MUA that is encrypting a message\
    \ SHOULD clearly indicate to the\n   user the difference between encrypting to\
    \ a locally stored and\n   previously user-verified public key and encrypting\
    \ to a public key\n   obtained via an OPENPGPKEY resource record that was not\
    \ manually\n   verified by the user in the past.\n"
- title: 7.3.  Response Size
  contents:
  - "7.3.  Response Size\n   To prevent amplification attacks, an Authoritative DNS\
    \ server MAY\n   wish to prevent returning OPENPGPKEY records over UDP unless\
    \ the\n   source IP address has been confirmed with [RFC7873].  Such servers\n\
    \   MUST NOT return REFUSED, but answer the query with an empty answer\n   section\
    \ and the truncation flag set (\"TC=1\").\n"
- title: 7.4.  Email Address Information Leak
  contents:
  - "7.4.  Email Address Information Leak\n   The hashing of the local-part in this\
    \ document is not a security\n   feature.  Publishing OPENPGPKEY records will\
    \ create a list of hashes\n   of valid email addresses, which could simplify obtaining\
    \ a list of\n   valid email addresses for a particular domain.  It is desirable\
    \ to\n   not ease the harvesting of email addresses where possible.\n   The domain\
    \ name part of the email address is not used as part of the\n   hash so that hashes\
    \ can be used in multiple zones deployed using\n   DNAME [RFC6672].  This does\
    \ makes it slightly easier and cheaper to\n   brute-force the SHA2-256 hashes\
    \ into common and short local-parts, as\n   single rainbow tables can be re-used\
    \ across domains.  This can be\n   somewhat countered by using NextSECure version\
    \ 3 (NSEC3).\n   DNS zones that are signed with DNSSEC using NSEC for denial of\n\
    \   existence are susceptible to zone walking, a mechanism that allows\n   someone\
    \ to enumerate all the OPENPGPKEY hashes in a zone.  This can\n   be used in combination\
    \ with previously hashed common or short local-\n   parts (in rainbow tables)\
    \ to deduce valid email addresses.  DNSSEC-\n   signed zones using NSEC3 for denial\
    \ of existence instead of NSEC are\n   significantly harder to brute-force after\
    \ performing a zone walk.\n"
- title: 7.5.  Storage of OPENPGPKEY Data
  contents:
  - "7.5.  Storage of OPENPGPKEY Data\n   Users may have a local key store with OpenPGP\
    \ public keys.  An\n   application supporting the use of OPENPGPKEY DNS records\
    \ MUST NOT\n   modify the local key store without explicit confirmation of the\
    \ user,\n   as the application is unaware of the user's personal policy for\n\
    \   adding, removing, or updating their local key store.  An application\n   MAY\
    \ warn the user if an OPENPGPKEY record does not match the OpenPGP\n   public\
    \ key in the local key store.\n   Applications that cannot interact with users,\
    \ such as daemon\n   processes, SHOULD store OpenPGP public keys obtained via\
    \ OPENPGPKEY\n   up to their DNS TTL value.  This avoids repeated DNS lookups\
    \ that\n   third parties could monitor to determine when an email is being sent\n\
    \   to a particular user.\n"
- title: 7.6.  Security of OpenPGP versus DNSSEC
  contents:
  - "7.6.  Security of OpenPGP versus DNSSEC\n   Anyone who can obtain a DNSSEC private\
    \ key of a domain name via\n   coercion, theft, or brute-force calculations, can\
    \ replace any\n   OPENPGPKEY record in that zone and all of the delegated child\
    \ zones.\n   Any future messages encrypted with the malicious OpenPGP key could\n\
    \   then be read.\n   Therefore, an OpenPGP key obtained via a DNSSEC-validated\
    \ OPENPGPKEY\n   record can only be trusted as much as the DNS domain can be trusted,\n\
    \   and is no substitute for in-person OpenPGP key verification or\n   additional\
    \ OpenPGP verification via \"web of trust\" signatures present\n   on the OpenPGP\
    \ in question.\n"
- title: 8.  IANA Considerations
  contents:
  - '8.  IANA Considerations

    '
- title: 8.1.  OPENPGPKEY RRtype
  contents:
  - "8.1.  OPENPGPKEY RRtype\n   This document uses a new DNS RR type, OPENPGPKEY,\
    \ whose value 61 has\n   been allocated by IANA from the \"Resource Record (RR)\
    \ TYPEs\"\n   subregistry of the \"Domain Name System (DNS) Parameters\" registry.\n\
    \   The IANA template for OPENPGPKEY is listed in Appendix B.  It was\n   submitted\
    \ to IANA for review on July 23, 2014 and approved on August\n   12, 2014.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC1035]  Mockapetris, P., \"Domain names - implementation\
    \ and\n              specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035,\n\
    \              November 1987, <http://www.rfc-editor.org/info/rfc1035>.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n\
    \              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2181]  Elz, R.\
    \ and R. Bush, \"Clarifications to the DNS\n              Specification\", RFC\
    \ 2181, DOI 10.17487/RFC2181, July 1997,\n              <http://www.rfc-editor.org/info/rfc2181>.\n\
    \   [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n     \
    \         Rose, \"DNS Security Introduction and Requirements\",\n            \
    \  RFC 4033, DOI 10.17487/RFC4033, March 2005,\n              <http://www.rfc-editor.org/info/rfc4033>.\n\
    \   [RFC4034]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n     \
    \         Rose, \"Resource Records for the DNS Security Extensions\",\n      \
    \        RFC 4034, DOI 10.17487/RFC4034, March 2005,\n              <http://www.rfc-editor.org/info/rfc4034>.\n\
    \   [RFC4035]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n     \
    \         Rose, \"Protocol Modifications for the DNS Security\n              Extensions\"\
    , RFC 4035, DOI 10.17487/RFC4035, March 2005,\n              <http://www.rfc-editor.org/info/rfc4035>.\n\
    \   [RFC4648]  Josefsson, S., \"The Base16, Base32, and Base64 Data\n        \
    \      Encodings\", RFC 4648, DOI 10.17487/RFC4648, October 2006,\n          \
    \    <http://www.rfc-editor.org/info/rfc4648>.\n   [RFC4880]  Callas, J., Donnerhacke,\
    \ L., Finney, H., Shaw, D., and R.\n              Thayer, \"OpenPGP Message Format\"\
    , RFC 4880,\n              DOI 10.17487/RFC4880, November 2007,\n            \
    \  <http://www.rfc-editor.org/info/rfc4880>.\n   [RFC5754]  Turner, S., \"Using\
    \ SHA2 Algorithms with Cryptographic\n              Message Syntax\", RFC 5754,\
    \ DOI 10.17487/RFC5754, January\n              2010, <http://www.rfc-editor.org/info/rfc5754>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [HKP]      Shaw, D., \"The OpenPGP HTTP Keyserver\
    \ Protocol (HKP)\",\n              Work in Progress, draft-shaw-openpgp-hkp-00,\
    \ March 2003.\n   [MAILBOX]  Levine, J., \"Encoding mailbox local-parts in the\
    \ DNS\",\n              Work in Progress, draft-levine-dns-mailbox-01, September\n\
    \              2015.\n   [RFC3597]  Gustafsson, A., \"Handling of Unknown DNS\
    \ Resource Record\n              (RR) Types\", RFC 3597, DOI 10.17487/RFC3597,\
    \ September\n              2003, <http://www.rfc-editor.org/info/rfc3597>.\n \
    \  [RFC4255]  Schlyter, J. and W. Griffin, \"Using DNS to Securely\n         \
    \     Publish Secure Shell (SSH) Key Fingerprints\", RFC 4255,\n             \
    \ DOI 10.17487/RFC4255, January 2006,\n              <http://www.rfc-editor.org/info/rfc4255>.\n\
    \   [RFC4398]  Josefsson, S., \"Storing Certificates in the Domain Name\n    \
    \          System (DNS)\", RFC 4398, DOI 10.17487/RFC4398, March 2006,\n     \
    \         <http://www.rfc-editor.org/info/rfc4398>.\n   [RFC5321]  Klensin, J.,\
    \ \"Simple Mail Transfer Protocol\", RFC 5321,\n              DOI 10.17487/RFC5321,\
    \ October 2008,\n              <http://www.rfc-editor.org/info/rfc5321>.\n   [RFC5322]\
    \  Resnick, P., Ed., \"Internet Message Format\", RFC 5322,\n              DOI\
    \ 10.17487/RFC5322, October 2008,\n              <http://www.rfc-editor.org/info/rfc5322>.\n\
    \   [RFC6530]  Klensin, J. and Y. Ko, \"Overview and Framework for\n         \
    \     Internationalized Email\", RFC 6530, DOI 10.17487/RFC6530,\n           \
    \   February 2012, <http://www.rfc-editor.org/info/rfc6530>.\n   [RFC6672]  Rose,\
    \ S. and W. Wijngaards, \"DNAME Redirection in the\n              DNS\", RFC 6672,\
    \ DOI 10.17487/RFC6672, June 2012,\n              <http://www.rfc-editor.org/info/rfc6672>.\n\
    \   [RFC6698]  Hoffman, P. and J. Schlyter, \"The DNS-Based Authentication\n \
    \             of Named Entities (DANE) Transport Layer Security (TLS)\n      \
    \        Protocol: TLSA\", RFC 6698, DOI 10.17487/RFC6698, August\n          \
    \    2012, <http://www.rfc-editor.org/info/rfc6698>.\n   [RFC7258]  Farrell, S.\
    \ and H. Tschofenig, \"Pervasive Monitoring Is an\n              Attack\", BCP\
    \ 188, RFC 7258, DOI 10.17487/RFC7258, May\n              2014, <http://www.rfc-editor.org/info/rfc7258>.\n\
    \   [RFC7816]  Bortzmeyer, S., \"DNS Query Name Minimisation to Improve\n    \
    \          Privacy\", RFC 7816, DOI 10.17487/RFC7816, March 2016,\n          \
    \    <http://www.rfc-editor.org/info/rfc7816>.\n   [RFC7858]  Hu, Z., Zhu, L.,\
    \ Heidemann, J., Mankin, A., Wessels, D.,\n              and P. Hoffman, \"Specification\
    \ for DNS over Transport\n              Layer Security (TLS)\", RFC 7858, DOI\
    \ 10.17487/RFC7858, May\n              2016, <http://www.rfc-editor.org/info/rfc7858>.\n\
    \   [RFC7873]  Eastlake 3rd, D. and M. Andrews, \"Domain Name System (DNS)\n \
    \             Cookies\", RFC 7873, DOI 10.17487/RFC7873, May 2016,\n         \
    \     <http://www.rfc-editor.org/info/rfc7873>.\n   [SMIME]    Hoffman, P. and\
    \ J. Schlyter, \"Using Secure DNS to\n              Associate Certificates with\
    \ Domain Names For S/MIME\", Work\n              in Progress, draft-ietf-dane-smime-12,\
    \ July 2016.\n   [Unicode90]\n              The Unicode Consortium, \"The Unicode\
    \ Standard, Version\n              9.0.0\", (Mountain View, CA: The Unicode Consortium,\n\
    \              2016. ISBN 978-1-936213-13-9),\n              <http://www.unicode.org/versions/Unicode9.0.0/>.\n"
- title: Appendix A.  Generating OPENPGPKEY Records
  contents:
  - "Appendix A.  Generating OPENPGPKEY Records\n   The commonly available GnuPG software\
    \ can be used to generate a\n   minimum Transferable Public Key for the RRdata\
    \ portion of an\n   OPENPGPKEY record:\n   gpg --export --export-options export-minimal,no-export-attributes\
    \ \\\n       hugh@example.com | base64\n   The --armor or -a option of the gpg\
    \ command should not be used, as it\n   adds additional markers around the armored\
    \ key.\n   When DNS software reading or signing of the zone file does not yet\n\
    \   support the OPENPGPKEY RRtype, the Generic Record Syntax of [RFC3597]\n  \
    \ can be used to generate the RDATA.  One needs to calculate the number\n   of\
    \ octets and the actual data in hexadecimal:\n   gpg --export --export-options\
    \ export-minimal,no-export-attributes \\\n       hugh@example.com | wc -c\n  \
    \ gpg --export --export-options export-minimal,no-export-attributes \\\n     \
    \  hugh@example.com | hexdump -e \\\n          '\"\\t\" /1 \"%.2x\"' -e '/32 \"\
    \\n\"'\n   These values can then be used to generate a generic record (line\n\
    \   break has been added for formatting):\n   <SHA2-256-trunc(hugh)>._openpgpkey.example.com.\
    \ IN TYPE61 \\# \\\n       <numOctets> <keydata in hex>\n   The openpgpkey command\
    \ in the hash-slinger software can be used to\n   generate complete OPENPGPKEY\
    \ records\n   ~> openpgpkey --output rfc hugh@example.com\n   c9[..]d6._openpgpkey.example.com.\
    \ IN OPENPGPKEY mQCNAzIG[...]\n   ~> openpgpkey --output generic hugh@example.com\n\
    \   c9[..]d6._openpgpkey.example.com. IN TYPE61 \\# 2313 99008d03[...]\n"
- title: Appendix B.  OPENPGPKEY IANA Template
  contents:
  - "Appendix B.  OPENPGPKEY IANA Template\n   This is a copy of the original registration\
    \ template submitted to\n   IANA; the text (including the references) has not\
    \ been updated.\n  A. Submission Date: 23-07-2014\n  B.1 Submission Type: [x]\
    \ New RRTYPE [ ] Modification to RRTYPE\n  B.2 Kind of RR: [x] Data RR [ ] Meta-RR\n\
    \  C. Contact Information for submitter (will be publicly posted):\n     Name:\
    \ Paul Wouters         Email Address: pwouters@redhat.com\n     International\
    \ telephone number: +1-647-896-3464\n     Other contact handles: paul@nohats.ca\n\
    \  D. Motivation for the new RRTYPE application.\n     Publishing RFC-4880 OpenPGP\
    \ formatted keys in DNS with DNSSEC\n     protection to faciliate automatic encryption\
    \ of emails in\n     defense against pervasive monitoring.\n  E. Description of\
    \ the proposed RR type.\n  http://tools.ietf.org/html/draft-ietf-dane-openpgpkey-00#section-2\n\
    \  F. What existing RRTYPE or RRTYPEs come closest to filling that need\n    \
    \ and why are they unsatisfactory?\n     The CERT RRtype is the closest match.\
    \ It unfortunately depends on\n     subtyping, and its use in general is no longer\
    \ recommended. It\n     also has no human usable presentation format. Some usage\
    \ types of\n     CERT require external URI's which complicates the security model.\n\
    \     This was discussed in the dane working group.\n  G. What mnemonic is requested\
    \ for the new RRTYPE (optional)?\n     OPENPGPKEY\n  H. Does the requested RRTYPE\
    \ make use of any existing IANA registry\n     or require the creation of a new\
    \ IANA subregistry in DNS\n     Parameters? If so, please indicate which registry\
    \ is to be used\n     or created. If a new subregistry is needed, specify the\n\
    \     allocation policy for it and its initial contents. Also include\n     what\
    \ the modification procedures will be.\n     The RDATA part uses the key format\
    \ specified in RFC-4880, which\n     itself use\n     https://www.iana.org/assignments/pgp-parameters/pgp-parameters.xhtm\n\
    \     This RRcode just uses the formats specified in those registries for\n  \
    \   its RRdata part.\n  I. Does the proposal require/expect any changes in DNS\n\
    \     servers/resolvers that prevent the new type from being processed\n     as\
    \ an unknown RRTYPE (see [RFC3597])?\n     No.\n  J. Comments:\n     Currently,\
    \ three software implementations of\n     draft-ietf-dane-openpgpkey are using\
    \ a private number.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This document is based on [RFC4255] and [SMIME] whose authors\
    \ are\n   Paul Hoffman, Jakob Schlyter, and W. Griffin.  Olafur Gudmundsson\n\
    \   provided feedback and suggested various improvements.  Willem Toorop\n   contributed\
    \ the gpg and hexdump command options.  Daniel Kahn Gillmor\n   provided the text\
    \ describing the OpenPGP packet formats and filtering\n   options.  Edwin Taylor\
    \ contributed language improvements for various\n   iterations of this document.\
    \  Text regarding email mappings was taken\n   from [MAILBOX] whose author is\
    \ John Levine.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Paul Wouters\n   Red Hat\n   Email: pwouters@redhat.com\n"
