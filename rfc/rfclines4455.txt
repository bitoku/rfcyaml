Abstract This memo defines a portion of the Management Information Base (MIB), for use with network management protocols in the Internet community.
In particular, it describes managed objects for Small Computer System Interface (SCSI) entities, independently of the interconnect subsystem layer.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes a set of managed objects to configure and monitor Small Computer System Interface entities (SCSI entities), i.e., SCSI target devices and SCSI initiator devices and SCSI ports.
SCSI is a client server protocol in which application clients within a SCSI initiator device (client) issue service requests to logical units contained in a SCSI target device(server).
This MIB module is based on documents defined by the ANSI T10 Technical Committee, specifically the SCSI Architecture Model 2 [SAM2] and SCSI Primary Commands 2
The [SAM2] standard is the primary source for the SCSI architecture discussion in this document and the terminology used in this MIB module.
In the late 1970s, a firm called Shugart Associates started to have some considerable success with a peripheral interface definition in what became the PC marketplace, and this interface was adopted and extended by an open standards committee to form the Small Computer Systems Interface (SCSI).
SCSI defines an 8 bit wide multi drop "bus" structure, which could interconnect a total of eight peripherals and computer systems.
It is important to realize that initially SCSI standardized only the "physical connection", i.e., the connectors, cables, and interface signals.
Thus, even though a peripheral could be connected to multiple systems, the information that flowed across the interface was different in each case.
This was addressed some five years later by the definition of a Common Command Set, and with this definition in place it was possible for the first time to develop a peripheral with both a common interface and common operating firmware for connection to multiple systems.
The physical interface of SCSI continued to be developed throughout the 1980s with the addition of fast (up to 10 megabytes/s) and wide (16 bits) variants, but the distance supported remained a maximum of 25 meters (from one end of the bus to another), and indeed some of the faster variants supported much less than that distance.
The command set development continued, with special commands for tapes, printers, and even processors being added to the original disk  oriented set.
So successful was SCSI in the 1980s that the majority of the available Operating Systems incorporated support for the SCSI command set as standard.
However, at the end of the 1980s the distance, speed, and number of devices supported by SCSI were starting to become significant impediments to systems design, and although the "information explosion" had not yet started in earnest, it was already being anticipated.
At the same time, the serial interface technologies developed for Local Area Networks such as Ethernet, and the fibre optics technologies that were first deployed in telecommunications applications were starting to appear sufficiently rugged and low cost for use in peripheral interface applications.
Thus, a standards project was begun in 1988 to develop a new serial, fibre optic interface to carry the SCSI command sets and other peripheral protocols.
This interface eventually became known as Fibre Channel (FC), and it is based on an architecture centered around an abstractly defined "fabric", which may be a switch or a loop connection.
MIB modules for various FC equipments are already in existence.
In order to support the new interfaces, it was necessary to completely reorganize the SCSI standards and definitions.
The command sets were separated from the physical interface definitions, and a SCSI Architectural Model (SAM) was created to define the interaction between the various standards.
It is a key to understanding SAM to realize that it was first created approximately 10 years AFTER the first SCSI products were shipped!
The most recent development in this saga occurred in 2000 when an IETF Working Group was formed to address, among other things, a definition for transporting the SCSI command sets directly over a TCP/IP infrastructure.
This effort is known as iSCSI [RFC3720], and an iSCSI MIB module is already under development [ISCSI].
Most of the projects are in T10, except Fibre Channel, which is defined by T11 and IEEE defines 1394.
The SCSI MIB module represents the SCSI protocol layer common to all SCSI command sets and transports.
It does not represent the command sets and transports themselves.
These should appear in other MIB modules specific to the transport or command set.
The following illustration shows the relationships between the various actual and possible SCSI related MIB modules.
An iSCSI MIB module [ISCSI] and a Fibre Channel interconnect MIB module [RFC4044] are currently being developed.
No development is currently planned for standard command set specific or device  specific MIBs.
The TCP MIB [RFC4022] is already a proposed standard RFC 4022.
The following sections explain some of the SCSI terminology, which is used later in defining the MIB module.
For the authoritative definitions of these terms, see SAM 2 [SAM2].
The protocols and procedures that implement or invoke SCSI commands and task management functions by using services provided by a SCSI transport protocol layer.
SCSI Device A SCSI device is an entity that contains one or more SCSI ports that are connected to a service delivery subsystem and supports a SCSI application protocol.
Port A SCSI port is a device resident entity that connects the application client, device server, or task manager to the service delivery subsystem through which requests and responses are routed.
A SCSI port is synonymous with port and either a SCSI initiator port or a SCSI target port.
SCSI Initiator Device A SCSI initiator device contains application clients and SCSI initiator ports that originate device service and task management requests to be processed by a SCSI target device.
When used, this term refers to SCSI initiator devices or SCSI target/initiator devices that are using the SCSI target/initiator port as a SCSI initiator port.
Initiator Port A SCSI initiator port acts as the connection between application clients and the service delivery subsystem through which requests and responses are routed.
In all cases when this term is used, it refers to an initiator port or a SCSI target/initiator port operating as a SCSI initiator port.
SCSI Target Device A SCSI target device contains logical units and SCSI target ports that receive device service and task management requests for processing.
When used, this term refers to SCSI target devices or SCSI target/initiator devices that are using the SCSI target/initiator port as a SCSI target port.
SCSI Target Port A SCSI target port contains a task router and acts as the connection between device servers and task managers and the service delivery subsystem through which requests and responses are routed.
When this term is used, it refers to a SCSI target port or a SCSI target/initiator port operating as a SCSI target port.
A logical unit is an entity residing in the SCSI target device that implements a device model and processes SCSI commands sent by an application client.
Logical Unit Number A Logical Unit Number or LUN is a 64 bit identifier for a logical unit.
An interconnect subsystem is one or more interconnects that appear as a single path for the transfer of information between SCSI devices.
A device server is an object within the logical unit that processes SCSI tasks according to the rules for task management.
Task Manager A task manager is a server within the SCSI target device that processes task management functions.
SCSI Instance A "SCSI instance" is a distinct SCSI entity within a managed system.
Whereas most implementations will have just one SCSI instance, the MIB module allows for multiple (virtual) instances, such that a large system can be "partitioned" into multiple, distinct virtual systems.
For example, in a host, it allows multiple vendors' implementations of the MIB module to co exist under a single SNMP agent through each vendor's implementation being a different SCSI instance.
It also allows a single SNMP agent to represent multiple subsystems each of which has its own SCSI instance.
The SCSI MIB module is a basic building block to use in the various SCSI management scenarios.
This module is intended to be implemented in every SCSI entity in a managed system.
A SCSI entity can be a SCSI initiator device, SCSI target device or SCSI initiator and Target device.
Since SCSI (storage) networking devices may contain more than one SCSI entity, it is possible that more than one SCSI instance will reside in a single device.
In small scale environments, a single network management station (NMS) may have SNMP access to both SCSI initiator devices and SCSI target devices.
However, if the SCSI target devices, or virtualized target devices, are being provided as a service, it is more likely that the provider of the service owns and manages the SCSI target devices and that the consumer of the service owns and manages the SCSI initiator devices.
In this case, the service provider NMS and the consumer NMS may have only allowed SNMP access to the SCSI target devices and the SCSI initiator devices, respectively.
The figures in this chapter describe the location of the SCSI MIB module implementations in the various SCSI management scenarios.
The locations of the SCSI SNMP agent implementing the SCSI
Single SCSI Initiator Device and Single SCSI
Target Device Figure 1 describes a simple SCSI management scenario of a SCSI initiator device, a SCSI target device, and a management station.
In this scenario, there are two SNMP agents, each containing its SCSI instance and its respective objects.
As the SCSI target device and SCSI initiator device are interconnected, their target and initiator port objects will be complementary.
Multiple Hosts and a Single Target Device Figure 2 adds another SCSI initiator device, to the SCSI network, which connects to the same SCSI target device.
The additional SCSI initiator device also has an SNMP agent implementing the SCSI MIB module.
In this case, the SCSI target device's MIB module will show that two SCSI initiator devices are attached to it.
Multiple Hosts, Virtualization Device and Multiple SCSI Target Devices Figure 3 adds an in band virtualization device that encapsulates, and possibly modifies, the SCSI target devices' representation to the SCSI Initiator devices.
It is common practice for an in band virtualization device to include both SCSI target and initiator device functionality.
Therefore, its SCSI MIB module implementation includes both the SCSI Target device and Initiator device objects.
It should be noted that the Virtualization device might implement additional proprietary MIB modules, as the SCSI MIB module does not distinguish between physical and virtual SCSI entities.
Bridging and Virtualization Storage virtualization is a concept that abstracts storage resources in such a way that, storage entities are provided as pool of logical entities.
Usually, the virtualization process is transparent to the storage users (i.e., hosts).
Virtualization normally affects the SCSI entities represented to SCSI initiator devices.
However, the SCSI MIB module enables the representation of SCSI entities and their respective status, including error and performance monitoring statistics.
It should be possible to perform a limited number of configuration modification and diagnostic actions.
The SCSI entities embodied in the bridging and virtualization devices can be represented by the SCSI MIB module.
However, the configuration of bridging and virtualization devices is beyond the above described scope and therefore should be provided through other MIB modules.
The management of SCSI commands is beyond the scope of this MIB module.
Future SCSI Command MIB module can link to this MIB module, through the use of Object Identifiers (OIDs) or INDEX values of appropriate tables.
This MIB module contains fourteen conformance groups: 4.1.
The scsiDeviceGroup group contains the objects general to each SCSI instance: instance, device, and port objects.
It contains also the objects referring to the transport(s) used by those SCSI instances.
This group is mandatory for all SCSI managed system.
Alias objects are provided for SCSI instances and SCSI devices to enable administrators to identify them.
These objects contain human readable administrative text strings, and hence use the SnmpAdminString textual convention from [RFC3411].
The scsiInitiatorDeviceGroup contains all the managed information related to a local SCSI initiator device and port.
In addition, it contains the managed objects referring to the monitored attached SCSI target devices.
Any managed system acting as a SCSI initiator or target/initiator device and port MUST support this group.
The scsiTargetDeviceGroup contains all the managed objects related to a local SCSI target device, a local SCSI target port, monitored attached initiator ports, logical units, and logical unit identifiers.
Managed systems acting as a SCSI target or target/initiator device and port must support this group.
The scsiDiscoveryGroup group is a collection of managed objects referring to remote SCSI target devices, remote SCSI target ports, remote logical units, and remote logical unit identifiers discovered by or configured to a managed system acting as a SCSI initiator device.
Managed systems acting as a SCSI initiator device and port and supporting remote SCSI target devices or ports configuration or discovery should implement this group.
The scsiLunMapGroup group is a collection of managed objects allowing mapping between SCSI target devices, logical units, and logical unit numbers in one side to remote authorized SCSI initiator devices or ports in another side.
Managed systems supporting this mapping should implement the scsiLunMapGroup.
The scsiTargetDevStatsGroup group is a collection of managed objects representing various statistics referring to a SCSI target device or port.
Managed systems acting as a SCSI target device and port supporting statistics should implement this group.
The Target High Speed Statistic Group
The scsiTargetDevHSStatsGroup group is a collection of managed objects representing various statistics referring to a SCSI target device or port.
It provides support for systems that can quickly generate countable information because they run at high speed.
Managed systems acting as a SCSI target device and port and running at high speed supporting should implement this group.
The LUN Map Statistics Group
The scsiLunMapStatsGroup group is a collection of managed objects representing various statistics referring to remote authorized SCSI initiator devices or ports.
Managed systems acting as a SCSI target device and port and able to gather statistics on remote SCSI initiator devices or ports should implement this group.
The LUN Map Statistics High Speed Group
The scsiLunMapHSStatsGroup group is a collection of managed objects representing various statistics referring to remote authorized SSCI initiator devices or ports.
It provides support for systems that can quickly generate countable information because they run at high speed.
Managed systems acting as a SCSI target device and port and able to gather statistics on remote SCSI initiator devices or ports and running at high speed should implement this group.
The scsiInitiatorDevStatsGroup group is a collection of managed objects representing various statistics referring to a SCSI initiator device or port.
Managed systems acting as a SCSI initiator device and port supporting statistics should implement this group.
The Initiator High Speed Statistic Group
The scsiInitiatorDevHSStatsGroup group is a collection of managed objects representing various statistics referring to a SCSI initiator device or port.
It provides support for systems that can quickly generate countable information because they run at high speed.
Managed systems acting as a SCSI initiator device and port and running at high speed supporting should implement this group.
The scsiDiscoveryStatsGroup group is a collection of managed objects representing various statistics referring to remote discovered or configured SCSI target devices or ports.
Managed systems acting as a SCSI initiator device and port and able to gather statistics on remote SCSI target devices or ports should implement this group.
The Discovery Statistics High Speed Group
The scsiDiscoveryHSStatsGroup group is a collection of managed objects representing various statistics referring to remote discovered or configured SCSI target devices or ports.
It provides support for systems that can quickly generate countable information because they run at high speed.
Managed systems acting as a SCSI initiator device and port and able to gather statistics on remote SCSI target devices or ports and running at high speed should implement this group.
The scsiDeviceStatGroup group is a collection of managed objects representing various statistics referring to a SCSI device.
Managed systems able to gather device statistics should implement this group.
This section outlines the functionality and the dependency between the MIB tables providing the required management functionality for SCSI initiator and target devices.
For specific usage of these tables, the reader should refer to the description of the tables and their respective table entries and attributes.
Following is a list of required SCSI initiator related features, and the respective tables facilitating this functionality:  List all the SCSI initiator ports that should be managed through this MIB module.
The table scsiIntrPortTable maintains all the SCSI initiator ports for the SCSI initiator devices in the MIB module.
Provide a list of all SCSI target ports or SCSI target devices to which a SCSI initiator port can attach.
This should prevent a SCSI initiator device or port from attaching to SCSI target devices that should be either invisible or inaccessible to it.
The entries in this list can be created either manually or by automatic discovery mechanisms (e.g., SLP, iSNS).
The ScsiDscTgtTable provides this information.
The entries in this table point to the SCSI initiator port, and indicate that the SCSI initiator port can only attach to SCSI target ports or SCSI target devices provided in the respective entries of the ScsiDscTgtTable.
This MIB module permits, but does not require, this table to be written via SNMP.
There are significant security considerations in allowing writes to this table; see Section 11.
The information, for the aforementioned SCSI target ports or SCSI target devices, about the LUs and their respective
LUN Ids should be provided.
The scsiDscLunTable and scsiDscLunIdTable maintain this information.
The scsiAttTgtPortTable provides the information about the SCSI target ports each SCSI initiator port is currently communicating with.
This table should be dynamically updated to reflect those connections.
Following is a list of required SCSI target device related features, and the respective tables facilitating this functionality:  List
all the SCSI target ports that should be managed through this MIB module.
The table scsiTgtPortTable maintains all the SCSI target ports for the SCSI target devices in the MIB module.
Provide a list of valid SCSI initiator ports or SCSI initiator devices authorized to attach to a SCSI target port.
This list should feature the concept of "access lists", which are common in IP routers and switches.
The ScsiAuthorizedIntr table provides this information.
This MIB module permits, but does not require this table to be written via SNMP.
There are significant security considerations in allowing writes to this table; see Section 11.
It should be possible to specify the list of LUNs exposed to each SCSI initiator port or device, when it is attached to the SCSI target device.
SCSI target devices must provide a default list of LUNs.
This list of LUNs can either be a unique list for each SCSI initiator device or be the default list.
For each entry in the ScsiAuthorizedIntr table, a pointer, named scsiAuthIntrLunMapIndex, indexing the ScsiLunMapTable facilitates this feature.
Provide means to monitor all the SCSI initiator ports currently attached to this SCSI target port.
The scsiAttIntrPortTable provides this information.
This table should be dynamically updated to reflect those connections.
Relationship to Other MIBs 6.1.
The SCSI MIB module extends objects defined in the host resource MIB module to SCSI specific entities but does not contain information on software modules such as device drivers.
If MIB objects are required for installed packages of SCSI software, then the hrSWInstalledGroup of the Host Resources MIB [RFC2790] are the standard MIB objects to use.
The SCSI MIB module defines managed objects for the SCSI protocol layer.
The SCSI layer can run on top of several transport layers; iSCSI is one of them.
The ISCSI MIB [ISCSI] is the MIB portion defining the managed objects for the transport called iSCSI.
In the same way, a fibre channel or parallel SCSI MIB module would define managed objects for a transport called, respectively, fibre channel or parallel SCSI.
The relationship between the SCSI MIB module and any valid transport MIB module is determined via the SCSI port managed table that has an object pointing to the corresponding row, if any, of the relevant table in a transport MIB module.
The names and the identifiers of the SCSI devices, ports, and logical units depend on the underlying transport protocols; their format and length vary accordingly.
Please refer to SAM 2
The Logical Unit Number is a 64 bit integer.
This type does not exist in SMI and therefore, this MIB contains a textual convention defining LUN as an OCTET STRING.
Notifications Separate SNMP notifications may be enabled/disabled to notify of a change in any of the SCSI device status variables.
A notification will be generated theoretically for each occurrence (see restriction below) of the abnormal status (e.g., if the SCSI device's current status is abnormal and another logical unit changes its status from available to abnormal another notification will occur).
To avoid sending an excessive number of notifications due to multiple errors counted, an SNMP agent implementing the SCSI MIB module should not send more than three SCSI notifications in any 10 second period.
The 3 in 10 rule was chosen because one notification every three seconds was deemed often enough, but if and when two or three different notifications happen at the same time, it would not be desirable to suppress them.
Three notifications in 10 seconds is a happy medium, where a short burst of notifications is allowed, without inundating the network and/or destination host with a large number of notifications.
The ultimate control on sending of notifications is in command of the notification generator module specified in [RFC3413].
SCSI Domains SAM 2 [SAM2] specifies that devices belong to a domain.
However, it is not usually possible to determine this from within a system, so domains are not represented within this MIB module.
Counters: 32 Bits and 64 Bits
Some counters, in (newer) high performance systems, can increase at a fast enough rate such that their representation as Counter32s can cause them to "wrap" in less than an hour.
The SMIv2 provides Counter64 as the syntax for such counters.
However, (older) SNMPv1 implementations cannot support Counter64s.
Thus, this MIB module defines such counters as both Counter32s and Counter64's.
The counters in this MIB module that count data are defined in terms of megabytes (i.e., as the number of megabytes of data), such that Counter64s are not required.
However, the counters in this MIB module that count commands, when in use at 5 GBit/second with 512 byte read/write operations, could wrap within an hour.
Therefore, each of these counters will be defined as both a Counter32 and a Counter64, with the latter being mandatory, for system speeds of 4 Gbit/second or higher.
A possible (but not required) implementation strategy is to have the value of each Counter32 be the same value as the low order 32 bits of the corresponding Counter64.
This MIB module qualifies often SCSI entities as local or remote.
The local entities are the ones for which the agent is reporting.
The remote entities are the ones that the local entities are in communication with via the SCSI protocol.
This MIB module will use the following abbreviations:
Object Definitions SCSI MIB DEFINITIONS ::
BEGIN IMPORTS MODULE IDENTITY, OBJECT IDENTITY, OBJECT TYPE, NOTIFICATION TYPE, Integer32,
ORGANIZATION "IETF" CONTACT INFO " Michele Hallak Stamler Sanrad Intelligent Network
27 Habarzel Street Tel Aviv,
972 3 7674809 E mail:
michele@sanrad.com Yaron Lederman Siliquent Technologies Ltd. 21 Etzel Street Ramat Gan,
972 54 5308833 E mail:
Cisco Systems, Inc 7900 International Drive, Suite 400 Bloomington, MN USA 55425
Hewlett Packard 8000 Foothills Blvd.
marjorie krueger@hp.com Keith McCloghrie Cisco Systems,
170 West Tasman Drive San Jose, CA USA 95134
: kzm@cisco.com " DESCRIPTION "
This version of this MIB module is part of RFC 4455; see the RFC itself for full legal notices."
" Initial version published as RFC 4455."
::  TEXTUAL CONVENTION STATUS current DESCRIPTION
"This textual convention represents a SCSI Logical Unit Number (LUN).
The format of a LUN is documented in Tables A.2 and A.3 of SAM 2 [SAM2].
" REFERENCE "SCSI Architecture Model 2 (SAM 2), ANSI INCITS 366 2003, T10 Project 1157 D, 12 September 2002
HINT "d" STATUS current DESCRIPTION
"An arbitrary integer value, greater than zero, for use as a unique index value."
"This textual convention is an extension of the ScsiIndexValue convention.
The latter defines a greater than zero value used to identify an index.
This extension permits the additional value of zero and is applicable only to indices of SCSI port.
Usage of the zero is object specific and must therefore be defined as part of the description of any object that uses this syntax.
Examples of the usage of zero might include situations where the index was unknown, or when none or all indices need to be referenced."
"This textual convention is an extension of the ScsiIndexValue convention.
The latter defines a greater than zero value used to identify an index.
This extension permits the additional value of zero.
Usage of the zero is object specific and must therefore be defined as part of the description of any object that uses this syntax.
Examples of the usage of zero might include situations where index was unknown, or when none or all indices need to be referenced."
TEXTUAL CONVENTION STATUS current DESCRIPTION
"This textual convention represents a generic SCSI port identifier.
The format depends on the transport used and is documented in Tables A.2 and A.3 of SAM 2 [SAM2].
" REFERENCE "SCSI Architecture Model 2 (SAM 2), ANSI INCITS 366 2003, T10 Project 1157 D, 12 September 2002
" SYNTAX OCTET STRING (SIZE (0..262)
"This textual convention represents the name of a SCSI initiator device, a SCSI target device, a SCSI initiator port or a SCSI target port.
The format depends on the transport used and is documented in Tables A.4 and A.5 of SAM 2 [SAM2].
Every object defined using this syntax must define whether it is a) always used for a port, b) always used for a device, or c) the circumstances under which it is used for a port or device."
REFERENCE "SCSI Architecture Model 2 (SAM 2), ANSI INCITS 366 2003, T10 Project 1157 D, 12 September 2002
" SYNTAX OCTET STRING (SIZE (0..262))
"This textual convention represents either the name of a SCSI logical unit or a zero length string.
Objects defined with this syntax must specify the meaning of the zero length string.
The format of the name of a LU is defined as: a zero length octet string or a string of eight bytes.
REFERENCE "SCSI Architecture Model 2 (SAM 2), ANSI INCITS 366 2003, T10 Project 1157 D, 12 September 2002
" SYNTAX OCTET STRING (SIZE (0   8)) ScsiDeviceOrPort ::
TEXTUAL CONVENTION STATUS current DESCRIPTION
"This type specifies whether a particular configuration is applicable to a port or to a device."
HINT "d" STATUS current DESCRIPTION
"This textual convention specifies the code set for the identifier contained in an Identification Descriptor returned in a logical unit's Device Identification Page, and is formatted as defined in T10 SPC 2 (see REFERENCE)
Code Set" REFERENCE "ANSI SCSI Primary Commands 2 (SPC 2), ANSI INCITS 351 2001, 11 July 2001 Chapter 8: section 8.4.4, Vital Product Data Parameters [SPC2]"
HINT "d" STATUS current DESCRIPTION
"This textual convention specifies what the identifier is associated with (e.g., with the addressed physical/logical device or with a particular port) for the identifier contained in an Identification Descriptor returned in a logical unit's Device Identification Page, and is formatted as defined in T10 SPC 2 (see REFERENCE)
" REFERENCE "ANSI SCSI Primary Commands 2 (SPC 2), ANSI INCITS 351 2001, 11 July 2001 Chapter 8
: section 8.4.4, Vital Product Data Parameters [SPC2]" SYNTAX Unsigned32 (0
HINT "d" STATUS current DESCRIPTION
"This textual convention specifies the type for the identifier contained in an Identification Descriptor returned in a logical unit's Device Identification Page, and is formatted as defined in T10 SPC 2 (see REFERENCE) table 174 Identifier Type.
" REFERENCE "ANSI SCSI Primary Commands 2 (SPC 2), ANSI INCITS 351 2001, 11 July 2001 Chapter 8
: section 8.4.4, Vital Product Data Parameters [SPC2]" SYNTAX Unsigned32 (0
TEXTUAL CONVENTION STATUS current DESCRIPTION
"This textual convention represents an identifier.
The objects of type ScsiIdCodeSet, ScsiIdAssociation, ScsiIdType define together the format.
The format is the same as contained in an Identification Descriptor returned in a logical unit's Device Identification Page, and is formatted as defined in T10 SPC 2 (see REFERENCE).
" REFERENCE "ANSI SCSI Primary Commands 2 (SPC 2), ANSI INCITS 351 2001, 11 July 2001 Chapter 8
: section 8.4.4, Vital Product Data Parameters [SPC2]" SYNTAX OCTET STRING (SIZE (0..255))
HINT "d" STATUS current DESCRIPTION
"The index value for a software module's row in the Host Resources MIBs hrSWInstalledTable.
A zero value indicates that no row in the hrSWInstalledTable is applicable."
REFERENCE "hrSWInstalledTable is defined in the Host Resources MIB, [RFC2790].
The following object identifiers allow determining the different   transports (service delivery subsystems) in use under the SCSI   layer.
"This identity identifies a transport that has no identity; it might happen because the transport is unknown or might not have been defined when this MIB module was created."
"This identity identifies a parallel SCSI transport."
REFERENCE "T10 SCSI Parallel Interface 4 (SPI 4)
"This identity identifies a Fibre Channel Protocol for SCSI, Second Version.
" REFERENCE "T10 SCSI Fibre Channel Protocol 2 (FCP 2)
"This identity identifies a protocol for transporting SCSI over Remote Direct Memory Access (RDMA)
" REFERENCE "T10 SCSI RDMA Protocol (SRP)
"This identity identifies an iSCSI transport."
Internet Small Computer Systems Interface (iSCSI)
This identity identifies the Serial Bus Protocol 3.
" REFERENCE "T10 Serial Bus Protocol 3 (SBP 3)
SEQUENCE OF ScsiInstanceEntry MAX ACCESS
"A list of SCSI instances present on the system.
The SCSI instance is the top level entity, to which everything else belongs.
An SNMP agent could represent more than one instance if it represents either a stack of devices, or virtual partitions of a larger device, or a host running multiple SCSI implementations from different vendors."
"This object represents an arbitrary integer used to uniquely identify a particular SCSI instance."
{ scsiInstanceEntry 1 } scsiInstAlias OBJECT
MAX ACCESS  read write STATUS
"This object represents an administrative string, configured by the administrator.
It can be a zero length string."
{ scsiInstanceEntry 2 } scsiInstSoftwareIndex    OBJECT TYPE SYNTAX
"If this management instance corresponds to an installed software module, then this object's value is the value of the hrSWInstalledIndex of that module.
If there is no correspondence to an installed software module (or no module that has an hrSWInstalledIndex value), then the value of this object is zero."
REFERENCE "hrSWInstalledIndex is defined in the Host Resources MIB, [RFC2790]."
"This object represents a text string set by the manufacturer describing the version of this instance.
The format of this string is determined solely by the manufacturer and is for informational purposes only.
It is unrelated to the SCSI specification version numbers."
"This object indicates whether notifications defined in this MIB module will be generated.
"This object specifies the memory realization for this SCSI entity.
Specifically, each row in the following tables: scsiIntrDevTable scsiDscTgtTable scsiAuthorizedIntrTable scsiLunMapTable has a StorageType as specified by the instance of this object that is INDEXed by the same value of scsiInstIndex.
This value of this object is also used to indicate the persistence across reboots of writable values in its row of the scsiInstanceTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row, nor to any object belonging to a table whose entry is INDEXed by the same value of scsiInstIndex.
SEQUENCE OF ScsiDeviceEntry MAX ACCESS
"This object is an arbitrary integer used to uniquely identify a particular device within a particular SCSI instance."
MAX ACCESS  read write STATUS
"This object contains an administrative name for this device.
If no name is assigned, the value of this object is the zero length string.
The StorageType of this object is specified by the instance of scsiInstStorageType that is INDEXed by the same value of scsiInstIndex."
"This object determines whether this device is acting as a SCSI initiator device, or as a SCSI target device, or as both."
scsiDeviceEntry 3 } scsiDevicePortNumber OBJECT TYPE SYNTAX
"This object represents the number of ports contained in this device."
SEQUENCE OF ScsiPortEntry MAX ACCESS
A list of SCSI ports for each SCSI device in each instance."
{ scsiGeneral 3 } scsiPortEntry OBJECT TYPE SYNTAX
scsiPortBusyStatuses Counter32 } scsiPortIndex OBJECT
An arbitrary integer used to uniquely identify a particular port of a given device within a particular SCSI instance."
"This object indicates whether this port is acting as a SCSI initiator port, or as a SCSI target port or as both."
"This object is a pointer to the corresponding row in the scsiTransportTable.
This row contains information on the transport such as transport type and port name."
"This object represents the number of port busy statuses sent or received by this port.
Note: Initiator ports only receive
busy status and SCSI target ports only send busy status.
Discontinuities in the value of this counter can occur at re  initialization of the management system."
SEQUENCE OF ScsiTransportEntry MAX ACCESS
"This table contains the device transport specific information for each transport connected to each device in scsiDeviceTable."
AutonomousType, scsiTransportPointer RowPointer, scsiTransportDevName ScsiName } scsiTransportIndex OBJECT
An arbitrary integer used to uniquely identify a particular transport within a given device within a particular SCSI instance."
"This object identifies the transport type of this row of the transport table.
For example, if this object has the value scsiTransportFCP, then the identified transport is FCP."
"This object represents a pointer to a conceptual row in a 'transport' MIB module allowing a manager to get useful information for the transport described by this entry.
For example, if the transport of this device is iSCSI, this object will point to the iSCSI Instance of the iSCSI MIB module.
If there is no MIB for this transport, this object has the value 0.0."
"This object represents the name of this device in one of the format(s) appropriate for this type of transport."
"This table contains information for each local SCSI initiator device in each instance."
"This object controls whether or not a discovered SCSI target device is immediately authorized:
autoEnable (2) means that when a SCSI initiator device discovers a SCSI target device, it can use it immediately.
manualEnable (3) means that the SCSI initiator device must wait for an operator to set scsiIntrDscTgtConfigured   true before it is authorized.
The StorageType of this object is specified by the instance of scsiInstStorageType that is INDEXed by the same value of scsiInstIndex."
"This object represents the total number of times that this SCSI initiator device has issued a LOGICAL UNIT RESET or TARGET RESET task management request, or any other SCSI transport protocol specific action or event that causes a Logical Unit Reset or a Hard Reset at one or more SCSI target ports ([SAM2] chapters 5.9.6, 5.9.7).
Discontinuities in the value of this counter can occur at re  initialization of the management system."
REFERENCE "SCSI Architecture Model 2 (SAM 2), ANSI INCITS 366 2003, T10 Project 1157 D, 12 September 2002 Chapters 5.9.6 & 5.9.7
The following section describes managed objects related to   SCSI initiator ports.
"This table contains all the SCSI initiator ports for each local SCSI initiator or target/initiator devices in each SCSI instance."
"This object represents the name of the port assigned for use by the SCSI protocol.
The format will depend on the type of transport this port is using."
{ scsiIntrPortEntry 1 } scsiIntrPortIdentifier OBJECT TYPE SYNTAX
"This object represents the identifier of the port in one of the format(s) appropriate for the type of transport in use."
"This object represents the number of commands sent by this SCSI initiator port.
Discontinuities in the value of this counter can occur at re  initialization of the management system."
"This object represents the amount of data in megabytes sent by this SCSI initiator port.
Discontinuities in the value of this counter can occur at re  initialization of the management system."
"This object represents the amount of data in megabytes received by this SCSI initiator port.
Discontinuities in the value of this counter can occur at re  initialization of the management system."
"This object represents the number of commands sent by this SCSI initiator port.
This object provides support for systems that can quickly generate a large number of commands because they run at high speed.
Discontinuities in the value of this counter can occur at re  initialization of the management system."
"This table includes all the remote (not in the local system) SCSI target ports that are authorized to attach to each local SCSI initiator port of this SCSI instance."
Each entry (row) contains information about the SCSI target device or port to which this SCSI initiator port (or all SCSI initiator ports in the SCSI initiator entry indexed by scsiInstIndex, scsiDeviceIndex) will attempt to attach.
The entry is either for all local ports (if scsiDscTgtIntrPortIndex is zero) or only for the specific SCSI initiator port identified by scsiDscTgtIntrPortIndex.
Note that if an entry in this table is deleted, any corresponding entries in the scsiDscLunsTable must be deleted as well.
The StorageType of a row in this table is specified by the instance of scsiInstStorageType that is INDEXed by the same value of scsiInstIndex.
ScsiPortIndexValueOrZero MAX ACCESS  not accessible STATUS
"This object relates to a particular local device within a particular SCSI instance and specifies the index of the local SCSI initiator port, or zero, if this entry refers to the local device and therefore refers to all the local SCSI initiator ports."
"This object indicates whether this entry describes a configured SCSI target device name (and applies to all ports on the identified SCSI target device) or an individual SCSI target port."
{ scsiDscTgtEntry 3 } scsiDscTgtName OBJECT TYPE
"This object represents the name of this configured or discovered SCSI target device or port depending on the value of scsiDscTgtDevOrPort."
"This object means  true(1): this entry has been configured by an administrator.
false(2): this entry has been added from a discovery mechanism (e.g., SendTargets, SLP, iSNS).
An administrator can modify this value from false to true."
"This object means  true(1): this entry has been discovered by the SCSI instance as result of an automatic discovery process.
false(2):this entry has been added by manual configuration.
This entry is read only because an administrator cannot change it.
Note that it is an implementation decision to determine how long to retain a row with configured false, such as when the SCSI target device is no longer visible/accessible to the local SCSI initiator device."
"This object represents the number of commands received from this SCSI target port or device.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiDscTgtLastCreation."
"This object represents the amount of megabytes of data sent as the result of WRITE commands to this SCSI target port or device.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiDscTgtLastCreation."
"This object represents the amount of megabytes received as the result of READ commands to this SCSI target port or device.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiDscTgtLastCreation."
"This object represents the number of commands received by this SCSI target port or device.
This object provides support for system that can quickly generate a large number of commands because they run at high speed.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiDscTgtLastCreation."
"This object represents the value of sysUpTime when this row was created."
"This object allows an administrator to configure dynamically a new entry in this table via SNMP or eventually delete it.
An administrator is not allowed to delete an entry for which the value of the object scsiIntrDscTgtDiscovered is equal to true.
Note that when an entry in this table is deleted, then any corresponding entries in the scsiDscLunsTable must also be automatically deleted.
A newly created row cannot be made active until a value has been set for scsiDscTgtName.
In this case, the value of the corresponding instance of the scsiDscTgtRowStatus column will stay 'notReady'.
The RowStatus TC [RFC2579] requires that this DESCRIPTION clause states under which circumstances other objects in this row can be modified: The value of this object has no effect on whether other objects in this conceptual row can be modified."
SEQUENCE OF ScsiDscLunEntry MAX ACCESS
"This table includes all the remote (not in the local system) logical unit numbers (LUNs) discovered via each local SCSI initiator port of each local device within a particular SCSI instance."
Note that when an entry in the scsiDscTgtTable is deleted, all corresponding entries in this table should automatically be deleted.
"This object is an arbitrary integer used to uniquely identify a particular LUN discovered by a particular SCSI initiator port or a particular SCSI initiator device within a particular SCSI instance.
Entries in the scsiDscLunIdTable are associated with a LUN by having the value of this object in their INDEX."
"This object contains the Logical Unit Number (LUN) of the discovered logical unit."
SEQUENCE OF ScsiDscLunIdEntry MAX ACCESS
"This table includes all the known LU identifiers of the remote (not in the local system)
logical units discovered via each local SCSI initiator port or device of this SCSI instance."
An entry (row) represents the LU identifier of a discovered LUN at a particular SCSI target device (scsiDscTgtIndex), where the LUN was discovered by a particular local SCSI initiator device within a particular SCSI instance, possibly via a particular local SCSI initiator port.
"This object is an arbitrary integer used to uniquely identify a particular LUN identifier discovered by each SCSI initiator device or particular SCSI initiator port within a particular SCSI instance."
"This object specifies the code set in use with this identifier.
The value is represented in the same format as is contained in the identifier's Identification Descriptor within the logical unit's Device Identification Page."
"This object specifies what the identifier is associated with (e.g., with the addressed physical/logical device or with a particular port).
The value is represented in the same format as is contained in the identifier's Identification Descriptor within the logical unit's Device Identification Page."
"This object specifies the type of the identifier.
The value is represented in the same format as is contained in the identifier's Identification Descriptor within the logical unit's Device Identification Page."
"This object represents the actual value of this identifier.
The format is defined by the objects scsiDscLunIdCodeSet, scsiDscLunIdAssociation, scsiDscLunIdType.
The value is represented in the same format as is contained in the identifier's Identification Descriptor within the logical unit's Device Identification Page."
"This table includes all the remote (not in the local system) SCSI target ports that are currently attached to each local SCSI initiator port of this SCSI instance."
An entry (row) represents a remote SCSI target port (scsiAttTgtPortIndex) currently attached to a particular SCSI initiator port (scsiPortIndex) of a particular SCSI initiator device within a particular SCSI instance.
scsiAttTgtPortIdentifier   ScsiIdentifier } scsiAttTgtPortIndex  OBJECT
An arbitrary integer used to uniquely identify a particular SCSI target currently attached to a particular SCSI initiator port of a particular SCSI initiator device within a particular SCSI instance."
"This object contains the value of the scsiDscTgtIntrPortIndex index variable for the row in the scsiDscTgtTable representing this currently attached SCSI target port.
If the currently attached SCSI target port is not represented in the scsiDscTgtTable, then the value of this object is zero."
"This object contains the name of the attached SCSI target port."
"This object contains the identifier of the attached SCSI target port."
"This table contains information about each local SCSI target device."
"This object is the number of logical units accessible via this local SCSI target device."
, broken(3), readying(4), abnormal(5), nonAddrFailure(6), nonAddrFailReadying(7)
"This object represents the status of this SCSI device, summarizing the state of both the addressable devices (i.e., the logical units) and the non addressable devices within this SCSI device: unknown(1): This value is used when the status cannot be determined available(2): All addressable and non addressable devices within the SCSI device are fully operational (i.e., no logical units have an abnormal status).
: The SCSI device is not operational and cannot be made operational without external intervention.
readying(4): One or more logical units within the SCSI device are being initialized and access to the SCSI device is temporarily limited (i.e., one or more of the logical units have a readying status).
abnormal(5): One or more addressable devices within the SCSI device are indicating a status other than available; nevertheless, the SCSI device is operational (i.e., one or more of the logical units have an abnormal status).
: One or more non addressable devices within the SCSI device have failed; nevertheless, the SCSI device is operational (i.e., no logical units have an abnormal or readying status).
: One or more non addressable devices within the SCSI device have failed; nevertheless, one or more logical units within the SCSI device are being initialized and access to the SCSI device is temporarily limited.
: One or more non addressable devices within the SCSI device have failed and one or more addressable devices within the SCSI device are indicating a status other than available; however, the SCSI device is operational. "
REFERENCE "SCSI Controller Commands 2 (SCC 2)
"This object is the number of logical units existing but not currently accessible via this local SCSI target device."
"This object counts the number of hard resets encountered by this SCSI target device.
Discontinuities in the value of this counter can occur at re  initialization of the management system."
REFERENCE "SCSI Architecture Model 2 (SAM 2), ANSI INCITS 366 2003, T10 Project 1157 D, 12 September 2002 Chapter 5.9.7
"This table includes all the local SCSI target ports of all the local SCSI target devices."
Counter32, scsiTgtPortWrittenMegaBytes   Counter32, scsiTgtPortReadMegaBytes   Counter32, scsiTgtPortHSInCommands Counter64 } scsiTgtPortName
"This object represents the name of the port assigned for use in the SCSI protocol."
"This object represents the identifier of the port in one of the format(s) appropriate for the type of transport."
"This object represents the number of commands received by this SCSI target port.
Discontinuities in the value of this counter can occur at re  initialization of the management system."
"This object represents the amount of data written in megabytes by this SCSI target port.
Discontinuities in the value of this counter can occur at re  initialization of the management system."
"This object represents the amount of data read in megabytes by this SCSI target port.
Discontinuities in the value of this counter can occur at re  initialization of the management system."
"This object represents the number of commands received.
This object provides support for systems that can quickly generate a large number of commands because they run at high speed.
Discontinuities in the value of this counter can occur at re  initialization of the management system."
The scsiAuthorizedIntrTable contains the list of remote initiator   ports that are authorized to be attached to specific SCSI target   ports and on which an administrator would like to keep permanent   information and long term statistics even when not currently   attached.
SEQUENCE OF ScsiAuthorizedIntrEntry MAX ACCESS
"This table includes all the authorized SCSI initiator devices or ports that may attach a SCSI target device (ScsiAuthIntrTgtPortIndex   0) or port (ScsiAuthIntrTgtPortIndex different than 0) of the local SCSI instance.
An entry (row) represents a remote SCSI initiator port or remote SCSI initiator device that may attach to the local SCSI target port or device within a particular SCSI instance.
The StorageType of a row in this table is specified by the instance of scsiInstStorageType that is INDEXed by the same value of scsiInstIndex.
scsiAuthIntrLunMapIndex    ScsiIndexValueOrZero, scsiAuthIntrAttachedTimes  Counter32, scsiAuthIntrOutCommands    Counter32,
ScsiPortIndexValueOrZero MAX ACCESS  not accessible STATUS
"This object contains either the index of the port or zero, to indicate any port, on the particular local SCSI target device."
{ scsiAuthorizedIntrEntry 1 } scsiAuthIntrIndex OBJECT TYPE SYNTAX
"This object is an arbitrary integer used to uniquely identify a SCSI initiator device or port that is authorized to attach to a particular local SCSI target device or port of a particular SCSI instance."
"This object specifies whether this entry refers to a remote SCSI initiator port or to a SCSI initiator device.
A value of device(1) means that the authorized remote initiator is a SCSI initiator device and includes all of its ports.
A value of port(2) means that the authorized remote initiator is a SCSI initiator port."
"This object represents the name of the remote SCSI initiator device or port authorized by this row."
"This object identifies the set of entries in the scsiLunMapTable for which scsiLunMapIndex has the same value as the value of this object.
The identified set of entries constitutes the LUN map to be used for accessing logical units when the remote SCSI initiator port or device corresponding to this entry is attached to any local SCSI target port or device corresponding to this entry.
Note that this object has a value of zero if this entry should use the default LUN map."
"This object indicates the number of times that this remote SCSI initiator device or port has transitioned from unattached to attached to this local SCSI target device or port.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiAuthIntrLastCreation."
"This object indicates the number of commands that the remote SCSI initiator device or port corresponding to this entry has sent to the local SCSI target device or port corresponding to this entry.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiAuthIntrLastCreation."
"This object indicates the amount of data in megabytes that the remote SCSI initiator device or port corresponding to this entry has read from the local SCSI target device or port corresponding to this entry.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiAuthIntrLastCreation."
"This object indicates the amount of data in megabytes that the remote SCSI initiator device or port corresponding to this entry has written to the local SCSI target device or port corresponding to this entry.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiAuthIntrLastCreation."
"This object represents the number of commands sent by the remote SCSI initiator device or port corresponding to this entry to the local SCSI target device or port corresponding to this entry.
This object provides support for systems that can quickly generate a large number of commands because they run at high speed.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiAuthIntrLastCreation."
"This object indicates the value of sysUpTime when this row was last created."
"This object allows an administrator to create or delete this entry.
A newly created row cannot be made active until a value has been set for scsiAuthIntrName.
In this case, the value of the corresponding instance of the scsiAuthIntrRowStatus column will stay 'notReady'.
The RowStatus TC [RFC2579] requires that this DESCRIPTION clause states under which circumstances other objects in this row can be modified: The value of this object has no effect on whether other objects in this conceptual row can be modified."
SEQUENCE OF ScsiAttIntrPortEntry MAX ACCESS
"This table includes all the remote SCSI initiator ports that are currently attached to a local SCSI target port of all local devices within all SCSI instances."
An entry (row) represents a remote SCSI initiator port currently attached to a particular local SCSI target port of a particular SCSI target device of a particular SCSI instance.
"This object represents an arbitrary integer used to uniquely identify a particular attached remote initiator port to a particular SCSI target port within a particular SCSI target device within a particular SCSI instance."
"This object is the corresponding index in the scsiAuthorizedIntrTable for this current attached remote SCSI initiator device or zero if this remote attached SCSI initiator device is not configured in that table."
"This object represents the name of the remote SCSI initiator device attached to this local SCSI target port."
"This object represents the identifier of the remote SCSI initiator device attached to this local SCSI target port."
"This table contains the logical units exposed by local SCSI target devices.
It includes attributes for the World Wide Name (WWN), scsiLuVendorId, scsiLuProductId, and scsiLuRevisionId, which may also appear in the scsiLuIdTable.
If an implementation exposes a WWN as a LuIdTable entry, it must match the scsiLuWwnName in this table.
If an implementation exposes a (vendor, product, revision) identifier as an LuIdTable entry, each of these fields must match the scsiLuVendorId, scsiLuProductId, and scsiLuRevisionId attributes in this table."
{ scsiLogicalUnit 1 } scsiLuEntry OBJECT TYPE SYNTAX
An entry (row) contains information applicable to a particular logical unit of a particular local SCSI target device within a particular SCSI instance.
"This object represents an arbitrary integer used to uniquely identify a particular logical unit within a particular SCSI target device within a particular SCSI instance."
"This object represents the default Logical Unit Number (LUN) for this logical unit; if a SCSI initiator device has not been configured to view this logical unit via an entry in the ScsiLunMapTable, the LU will be visible as scsiLuDefaultLun.
If this logical unit does not have a default LUN, it will only be visible if specified via the ScsiLunMapTable, and this object will contain a zero length string."
"This object represents the World Wide Name of this LU that is the device identifier of the Vital Product Data (VPD) page name; if there is no WWN for this LU, this object will contain a zero length string.
If there is more than one identifier, they will be listed in the scsiLuIdTable and this object will contain a zero length string."
"This object represents a string identifying the vendor of this LU as reported in the Standard INQUIRY data."
"This object represents a string identifying the product for this LU as reported in the Standard INQUIRY data."
"This object represents a string defining the product revision of this LU as reported in the Standard INQUIRY data."
"This object is the value returned by SCSI Standard INQUIRY data.
It can be: direct access device, sequential access device, printer, communication device and so on.
The values that can be returned here are defined in SCSI Primary Commands  2.
" REFERENCE "ANSI SCSI Primary Commands 2 (SPC 2), ANSI INCITS
"This object represents the status of this logical unit: unknown(1): The status of this logical unit cannot be determined.
: The logical unit is fully operational (i.e., accepts media access SCSI commands and has no state information to report).
: The logical unit is capable of being supported but is not available (i.e., no logical unit is currently present or the logical unit is present but not configured for use).
: The logical unit has failed and cannot respond to SCSI commands.
: The logical unit is being initialized and access is temporarily limited.
abnormal(6): The logical unit has state information available that indicates it is operating with limits.
The scsiLuState indicates what those limits are. "
REFERENCE "SCSI Controller Commands 2
, fractionallyExposed(3), partiallyExposed(4), protectedRebuild(5), protectionDisabled(6), rebuild(7), recalculate(8), spareInUse(9), verifyInProgress(10) }
"This object represents the state of a logical unit and its meaning according to the bit position: 0 Data lost:
Within the logical unit data has been lost.
Dynamic reconfiguration in progress: The logical unit is being reconfigured.
In this state all data is still protected.
Exposed: Within the logical unit data is not protected.
In this state all data is still valid; however, loss of data or data availability is unavoidable in the event of a failure.
Fractionally exposed: Within the logical unit part of the data is not protected.
In this state all data is still valid; however, a failure may cause a loss of data or a loss of data availability.
Partially exposed: Within the logical unit one or more underlying storage devices have failed.
In this state all data is still protected.
Protected rebuild: The logical unit is in the process of a rebuild operation.
In this state all data is protected.
Within the logical unit the data protection method has been disabled.
In this state all data is still valid; however, loss of data or data availability is unavoidable in the event of a failure.
The data protection method is in the process of rebuilding data.
In this state data is not protected.
The logical unit is in the process of a recalculate operation.
9 Spare in use: Within the logical unit a storage device in full or part is being used to store data.
In this state all data is still protected.
10 Verify in progress: Within the logical unit data is being verified."
REFERENCE "SCSI Controller Commands 2 (SCC 2)
"This object represents the number of commands received by this logical unit.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiLuLastCreation."
"This object represents the amount of data in megabytes read from this logical unit.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiLuLastCreation."
"This object represents the amount of data in megabytes written to this logical unit.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiLuLastCreation."
"This object represents the number of times that this logical unit received a LOGICAL UNIT RESET or TARGET RESET task management request, or any other SCSI transport protocol specific action or event that causes a Logical Unit Reset or a Hard Reset at a SCSI target port of the containing device ([SAM2] Chapters 5.9.6, 5.9.7).
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiLuLastCreation."
REFERENCE "SCSI Architecture Model 2 (SAM 2), ANSI INCITS 366 2003, T10 Project 1157 D, 12 September 2002 Chapter 5.9.7
"This object represents the number of Task Set full statuses issued for this logical unit.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiLuLastCreation."
"This object represents the number of commands received by this logical unit.
This object provides support for systems that can quickly generate a large number of commands because they run at high speed.
Discontinuities in the value of this counter can occur at re  initialization of the management system, and at other times as indicated by the value of scsiLuLastCreation."
"This object indicates the value of sysUpTime when this row was last created."
A table of identifiers for all logical units exposed by the local SCSI target device."
"This object represents an arbitrary integer used to uniquely identify a particular LU identifier within a particular logical unit within a particular SCSI target device within a particular SCSI instance."
scsiLuIdEntry 1 } scsiLuIdCodeSet OBJECT TYPE
"This object specifies the code set in use with this identifier.
The value is represented in the same format as is contained in the identifier's Identification Descriptor within the logical unit's Device Identification Page."
This object specifies what the identifier is associated with (e.g., with the addressed physical/logical device or with a particular port).
The value is represented in the same format as is contained in the identifier's Identification Descriptor within the logical unit's Device Identification Page."
This object specifies the type of the identifier.
The value is represented in the same format as is contained in the identifier's Identification Descriptor within the logical unit's Device Identification Page."
"This object represents the actual value of this identifier.
The format is defined by the objects scsiLuIdCodeSet, scsiLuIdAssociation, scsiLuIdType.
The value is represented in the same format as is contained in the identifier's Identification Descriptor within the logical unit's Device Identification Page."
"This table provides the ability to present a logical unit using different Logical Unit Numbers for different SCSI initiator devices.
This table provides a mapping between a logical unit and a Logical Unit Number, and can be referenced by a ScsiAuthorizedIntrEntry to specify the LUN map for that initiator."
An entry containing information about the mapping of a particular logical unit to a particular LUN.
The set of entries that all have the same values of scsiInstIndex, scsiDeviceIndex and scsiLunMapIndex constitutes a LUN map within a particular SCSI instance.
The StorageType of a row in this table is specified by the instance of scsiInstStorageType that is INDEX ed by the same value of scsiInstIndex.
"This object represents an arbitrary integer used to uniquely identify a particular LunMap within a particular SCSI target device within a particular SCSI instance."
"This object specifies the Logical Unit Number, to which a logical unit is mapped by this row."
The identified logical unit is the one mapped to a LUN by this row."
This object allows an administrator to create and delete this entry."
"This notification will be generated for each occurrence of the abnormal status (e.g., if the SCSI target device's current status is abnormal) providing that the SCSI instance's value of scsiInstScsiNotificationsEnable is enabled.
An SNMP agent implementing the SCSI MIB module should not send more than three SCSI identical notifications in any 10 second period."
"This notification will be generated each time that scsiLuStatus changes providing that the SCSI instance's value of scsiInstScsiNotificationsEnable is enabled.
An SNMP agent implementing the SCSI MIB module should not send more than three SCSI identical notifications in any 10 second period."
scsiCompliance MODULE COMPLIANCE STATUS current DESCRIPTION
"Describes the requirements for compliance to this SCSI MIB module.
If an implementation can be both a SCSI target device and a SCSI initiator device, all groups are mandatory."
MODULE    this module MANDATORY GROUPS { scsiDeviceGroup } OBJECT scsiInstAlias
MIN ACCESS read only DESCRIPTION
"Write access is not mandatory."
MIN ACCESS read only DESCRIPTION
"Write access is not mandatory."
OBJECT scsiDeviceAlias MIN ACCESS read only DESCRIPTION
"Write access is not mandatory."
"Write access is not required."
Conditionally mandatory groups to be included with   the mandatory groups when the implementation has   SCSI target device.
This group is mandatory for all SCSI implementations that have SCSI target devices."
This group is mandatory for systems having the capabilities of mapping local SCSI target devices and logical units according to remote SCSI initiator devices."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
"Write access is not required."
OBJECT scsiAuthIntrRowStatus SYNTAX RowStatus { active(1) }
MIN ACCESS   read only DESCRIPTION "Write access is not required, and only one of the six enumerated values for the RowStatus textual convention need be supported,
This group is mandatory for all SCSI implementations that have SCSI target devices and are able to report status changes."
Conditionally mandatory groups to be included with   the mandatory groups when the implementation has   SCSI initiator device.
GROUP scsiInitiatorDeviceGroup DESCRIPTION "This group is mandatory for all SCSI implementations that have SCSI initiator devices."
MIN ACCESS read only DESCRIPTION
"Write access is not mandatory."
"This group is mandatory for systems having the capabilities of discovering remote SCSI target devices via local SCSI initiator devices."
MIN ACCESS read only DESCRIPTION
"Write access is not mandatory."
OBJECT scsiLunMapRowStatus SYNTAX RowStatus { active(1) }
MIN ACCESS read only DESCRIPTION "Write access is not required, and only one of the six enumerated values for the RowStatus textual convention need be supported,
scsiDscTgtDevOrPort MIN ACCESS read only DESCRIPTION
"Write access is not mandatory."
MIN ACCESS read only DESCRIPTION
"Write access is not mandatory."
OBJECT scsiDscTgtConfigured SYNTAX TruthValue { false(2) }
MIN ACCESS read only DESCRIPTION
"The value of true(1) is not mandatory neither is the write access."
OBJECT scsiDscTgtRowStatus SYNTAX RowStatus { active(1) } MIN ACCESS read only DESCRIPTION "Write access is not required, and only one of the six enumerated values for the RowStatus textual convention need be supported,
Conditionally mandatory groups to be included with the mandatory   groups when the implementation can gather statistics.
This group is mandatory for all SCSI implementations that can gather statistics."
Conditionally mandatory groups to be included with the mandatory   groups when the implementation can gather statistics at the SCSI   initiator device side.
This group is mandatory for all SCSI implementations that can gather statistics at SCSI initiator device side."
This group is mandatory for system having the capabilities of gathering statistics regarding remote SCSI target devices via local SCSI initiator devices."
Conditionally mandatory groups to be included with the mandatory   groups when the implementation can gather statistics at the SCSI   target side.
This group is mandatory for all SCSI implementations that can gather statistics at SCSI target devices."
This group is mandatory for SCSI implementations able to map local SCSI target devices and logical units according to remote SCSI initiator devices."
Conditionally mandatory groups to be included with the mandatory   groups when the implementation is running at high speed and can   gather statistics at the SCSI initiator device side.
This group is mandatory for all SCSI implementations that can gather statistics at the SCSI initiator device side and are running at high speed, meaning speed of 4 Gbit/second or higher."
This group is mandatory for systems having the capabilities of gathering statistics regarding remote SCSI target devices via local SCSI initiator devices and are running at high speed, meaning speed of 4 Gbit/second or higher."
Conditionally mandatory groups to be included with the mandatory   groups when the implementation is running at high speed and can   gather statistics at the SCSI target side.
"This group is mandatory for all SCSI implementations that can gather statistics at SCSI target devices in high speed systems, meaning speed of 4 Gbit/second or higher."
"This group is mandatory for SCSI implementations able to map local SCSI target devices and logical units according to remote SCSI initiator devices in a high speed system, meaning speed of 4 Gbit/second or higher."
} scsiDeviceGroup OBJECT GROUP OBJECTS { scsiInstAlias, scsiInstSoftwareIndex, scsiInstVendorVersion, scsiInstScsiNotificationsEnable, scsiInstStorageType, scsiDeviceAlias, scsiDeviceRole, scsiDevicePortNumber, scsiPortRole, scsiPortTransportPtr, scsiTransportType, scsiTransportPointer, scsiTransportDevName } STATUS current DESCRIPTION
"This group is relevant for s SCSI initiator device and port."
scsiDscLunIdType, scsiDscLunIdValue } STATUS current DESCRIPTION
"This group is relevant for the discovered SCSI target devices by a SCSI initiator port."
This group is relevant for a SCSI target device and port."
"This group is a collection of attributes regarding the mapping between Logical Unit Number, logical unit, and target device."
This group is a collection of statistics for all implementations of the SCSI MIB module that contain SCSI target devices."
OBJECT GROUP OBJECTS { scsiTgtPortHSInCommands, scsiLuHSInCommands } STATUS current DESCRIPTION
"This group is a collection of high speed statistics for all implementations of the SCSI MIB module that contain SCSI target devices."
This group is a collection of statistics regarding SCSI initiator devices authorized to attach local logical unit and SCSI target device."
OBJECT GROUP OBJECTS { scsiAuthIntrHSOutCommands } STATUS current DESCRIPTION
"This group is a collection of high speed statistics regarding SCSI initiator devices authorized to attach local logical unit and SCSI target device."
This group is a collection of statistics for all implementations of the SCSI MIB module that contain SCSI initiator devices."
OBJECT GROUP OBJECTS { scsiIntrPortHSOutCommands } STATUS current DESCRIPTION
"This group is a collection of high speed statistics for all implementations of the SCSI MIB module that contain SCSI initiator devices."
"This group is a collection of statistics for all implementations of the SCSI MIB module that contain discovered SCSI initiator devices."
} scsiDiscoveryHSStatsGroup OBJECT GROUP OBJECTS { scsiDscTgtHSInCommands } STATUS current DESCRIPTION
"This group is a collection of high speed statistics for all implementations of the SCSI MIB module that contain discovered SCSI initiator devices."
A collection of statistics regarding SCSI devices and ports."
A collection of notifications regarding status change of SCSI target devices and logical units."
Object Population Example: SCSI Target and Initiator Devices on a pSCSI Bus
This section provides a sample set of values for a parallel SCSI scenario in which a SCSI MIB module can be implemented.
The example shown below is not a normative part of this document and makes some assumptions about the underlying implementation, which are not based on actual implementations.
The respective sections describe the sequence of object instantiations and attempts to explain non typical values for attributes that are unique to the scenario.
Note: While populating the objects, the population of statistics is not considered.
This scenario deals with a SCSI target and initiator devices attached to a parallel SCSI bus, defined by one of the SCSI 3 Parallel Interface standards (the version referenced in the MIB module is the 4th generation, called SPI 4).
We assume that the SCSI initiator device is a Host Bus Adaptor (HBA), and the SCSI target device is a physical disk.
We assume that the SCSI target device has one integrated logical unit, identified by a Logical Unit Number (LUN) of 0, which is the default LUN.
The parallel SCSI transport only supports port identifiers, and not port names.
The transport pointer is set to 0 since there is no MIB module defined for SPI 4.
We assume an HBA as the SCSI initiator device and a disk as the SCSI target device.
We assume that the SCSI target device has one logical unit, addressed by Logical Unit Number set to 0 (LUN0), which is the default LUN.
Parallel SCSI has only port identifiers, no port names.
The transport pointer for parallel SCSI is set to 0 since there is no reference transport (SPI) MIB module.
Once the SCSI system is initialized, an SNMP agent should be able to view the values of variables populated in the ScsiDevice, ScsiInitiatorDevice, ScsiTargetDevice, ScsiPort, ScsiTargetPort, ScsiInitiatorPort, ScsiLogicalUnit, ScsiLUIdentifier objects.
The ScsiAuthorizedIntr population depends on the transport and the implementation.
As this example scenario is parallel SCSI, we deal with the ports.
the index of the SCSI target port and ScsiAuthIntrDevOrPort is "port".
Same is the case with the variables in scsiDscTgtDevOrPort.
Note that "" means zero length string.
1 Port Identifier for SCSI is represented by 4 bits.
The identifier field will have ASCII graphic codes.
The identifier is associated with the port that received the request.
(This value specifies that the scsiDscLunIdValue contains a vendorID in the first 8 bytes concatenated with the product identifier field and product serial number.)
The identifier field will have ASCII graphic codes.
The identifier is associated with the port that received the request.
(This value specifies that the LuIdValue contains a vendorID in the first 8 bytes concatenated with the product identifier field and product serial number.)
There are a number of management objects defined in this MIB module that have a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the following:  scsiInstAlias, scsiInstScsiNotificationsEnable, scsiInstStorageType and scsiDeviceAlias: these objects can be manipulated to affect the management of a SCSI instance and its devices; specifically, the SCSI instance's administrative alias, whether it generates notifications, whether its non default parameter settings are retained over restarts, and the administrative alias for each of its devices.
scsiIntrDevTgtAccessMode: this object can be manipulated to allow immediate access by local SCSI initiator devices to discovered SCSI target devices without waiting for administrator approval, where such approval might not be forthcoming.
: the objects in this table can be manipulated to remove administrator specified controls on access by local SCSI initiator devices to discovered SCSI target devices.
scsiAuthorizedIntrTable: the objects in this table can be manipulated to remove administrator specified controls on access by remote SCSI initiator devices to local SCSI target devices.
scsiLunMapTable: the objects in this table can be manipulated to provide access by a remote SCSI initiator device to logical units that an administrator has configured as not accessible to said initiator.
In each of the last four cases, the objects in the tables can also be manipulated to cause a denial of service attack, by preventing administrator authorized access.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
All seventeen of the tables in this MIB module contain information which might be considered sensitive to read access in some environments, e.g.,  the settings of all read
create parameter objects mentioned above,  scsiInstSoftwareIndex, scsiInstVendorVersion  which version of which software is running;  scsiDeviceRole, scsiPortRole, scsiTransportType, scsiTransportPointer, scsiTransportDevName, scsiDscLunIdCodeSet, scsiDscLunIdAssociation, scsiDscLunIdType, scsiDscLunIdValue plus information in several tables: scsiTgtDevTable, scsiLuTable, scsiLuIdTable, scsiLunMapTable  topology information indicating which devices/ports are targets, about the transport protocols they use, and more specific information about such targets, including detailed information about the LUNs they expose and how they are mapped onto logical units;  scsiIntrPortOutCommands, scsiIntrPortWrittenMegaBytes, scsiIntrPortReadMegaBytes,
scsiIntrPortHSOutCommands scsiDscTgtInCommands, scsiDscTgtWrittenMegaBytes, scsiDscTgtReadMegaBytes, scsiDscTgtHSInCommands, scsiTgtPortInCommands, scsiTgtPortWrittenMegaBytes, scsiTgtPortReadMegaBytes, scsiTgtPortHSInCommands, scsiAuthIntrAttachedTimes, scsiAuthIntrOutCommands, scsiAuthIntrReadMegaBytes, scsiAuthIntrWrittenMegaBytes, scsiAuthIntrHSOutCommands, scsiLuInCommands, scsiLuReadMegaBytes, scsiLuWrittenMegaBytes,
statistics that could be used for traffic analysis.
scsiAttTgtPortTable   information on which initiators are connected to which targets that could be used for traffic analysis.
scsiAuthorizedIntrTable and scsiAttIntrPortTable tables   information about which initiators are authorized to connect to that targets.
These information may need to be kept private in sensitive environments.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example, by using IPsec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
IANA Considerations IANA has made a MIB OID assignment under the mib 2 branch for the SCSI MIB.
