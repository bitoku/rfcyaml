- title: __initial_text__
  contents:
  - "                 Problem and Applicability Statement\n                for Better-Than-Nothing\
    \ Security (BTNS)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2008 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Internet network security protocol suite, IPsec, requires\n\
    \   authentication, usually of network-layer entities, to enable access\n   control\
    \ and provide security services.  This authentication can be\n   based on mechanisms\
    \ such as pre-shared symmetric keys, certificates\n   with associated asymmetric\
    \ keys, or the use of Kerberos (via\n   Kerberized Internet Negotiation of Keys\
    \ (KINK)).  The need to deploy\n   authentication information and its associated\
    \ identities can be a\n   significant obstacle to the use of IPsec.\n   This document\
    \ explains the rationale for extending the Internet\n   network security protocol\
    \ suite to enable use of IPsec security\n   services without authentication. \
    \ These extensions are intended to\n   protect communication, providing \"better-than-nothing\
    \ security\"\n   (BTNS).  The extensions may be used on their own (this use is\
    \ called\n   Stand-Alone BTNS, or SAB) or may be used to provide network-layer\n\
    \   security that can be authenticated by higher layers in the protocol\n   stack\
    \ (this use is called Channel-Bound BTNS, or CBB).  The document\n   also explains\
    \ situations for which use of SAB and/or CBB extensions\n   are applicable.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Authentication .............................................3\n  \
    \    1.2. IPsec Channels and Channel Binding .........................4\n    \
    \  1.3. BTNS Methods ...............................................6\n      1.4.\
    \ BTNS Scope .................................................6\n      1.5. Structure\
    \ of This Document .................................7\n   2. Problem Statement\
    \ ...............................................7\n      2.1. Network Layer ..............................................8\n\
    \           2.1.1. Authentication Identities ...........................8\n  \
    \         2.1.2. Authentication Methods ..............................8\n    \
    \       2.1.3. Current IPsec Limits on Unauthenticated Peers .......9\n      2.2.\
    \ Higher Layer Issues ........................................9\n           2.2.1.\
    \ Transport Protection from Packet Spoofing ...........9\n           2.2.2. Authentication\
    \ at Multiple Layers ..................10\n   3. BTNS Overview and Threat Models\
    \ ................................12\n      3.1. BTNS Overview .............................................12\n\
    \      3.2. BTNS and IPsec Security Services ..........................13\n  \
    \    3.3. BTNS and IPsec Modes ......................................14\n   4.\
    \ Applicability Statement ........................................15\n      4.1.\
    \ Benefits ..................................................16\n      4.2. Vulnerabilities\
    \ ...........................................16\n      4.3. Stand-Alone BTNS (SAB)\
    \ ....................................17\n           4.3.1. Symmetric SAB ......................................17\n\
    \           4.3.2. Asymmetric SAB .....................................18\n  \
    \    4.4. Channel-Bound BTNS (CBB) ..................................18\n    \
    \  4.5. Summary of Uses, Vulnerabilities, and Benefits ............19\n   5. Security\
    \ Considerations ........................................20\n      5.1. Threat\
    \ Models and Evaluation ..............................20\n      5.2. Interaction\
    \ with Other Security Services ..................20\n      5.3. MITM and Masquerader\
    \ Attacks ..............................21\n      5.4. Denial of Service (DoS)\
    \ Attacks and Resource\n           Consumptions ..............................................22\n\
    \      5.5. Exposure to Anonymous Access ..............................22\n  \
    \    5.6. ICMP Attacks ..............................................22\n    \
    \  5.7. Leap of Faith .............................................22\n      5.8.\
    \ Connection Hijacking through Rekeying .....................24\n      5.9. Configuration\
    \ Errors ......................................25\n   6. Related Efforts ................................................25\n\
    \   7. Acknowledgments ................................................25\n  \
    \ 8. Informative References .........................................26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Network security is provided by a variety of protocols at\
    \ different\n   layers in the stack.  At the network layer, the IPsec protocol\
    \ suite\n   (consisting of IKE (Internet Key Exchange protocol), ESP\n   (Encapsulating\
    \ Security Payload), and AH (Authentication Header)) is\n   used to secure IP\
    \ traffic.  IPsec, including IKE, offers high levels\n   of security that provide\
    \ protection from a wide array of possible\n   threats, but authentication is\
    \ required [5][7][8].  In turn,\n   authentication requires deployment of authentication\
    \ identities and\n   credentials, which can be an obstacle to IPsec usage.  This\
    \ document\n   discusses this dependency and introduces \"Better-Than-Nothing\n\
    \   Security\" (BTNS) as one solution, whose goal is to provide a\n   generally\
    \ useful means of applying IPsec security services without\n   requiring network-layer\
    \ authentication.\n"
- title: 1.1.  Authentication
  contents:
  - "1.1.  Authentication\n   There are two primary architectural approaches to authentication:\n\
    \   employing out-of-band communications and using pre-deployed\n   information.\
    \  Out-of-band authentication can be done via a trusted\n   third party, via a\
    \ separate communication channel to the peer, or via\n   the same channel as the\
    \ communications to be secured but at a higher\n   layer.  Out-of-band authentication\
    \ requires mechanisms and interfaces\n   to bind the authenticated identities\
    \ to the secure communication\n   channels, and is out of scope for this document\
    \ (although it may be\n   possible to extend the channel binding mode of BTNS\
    \ to work with such\n   mechanisms).  Pre-deployed information includes identities,\
    \ pre-\n   shared secrets, and credentials that have been authenticated by\n \
    \  trusted authorities (e.g., a certificate and its corresponding\n   private\
    \ key).\n   This form of authentication often requires manual deployment and\n\
    \   coordination among communicating peers.  Furthermore, obtaining and\n   deploying\
    \ credentials such as certificates signed by certification\n   authorities (CA)\
    \ involves additional protocol and administrative\n   actions that may incur significant\
    \ time and effort to perform.\n   These factors increase the work required to\
    \ use IKE with IPsec for\n   peer authentication.  Consequently, some users and\
    \ applications do\n   not use IPsec to protect traffic at the network layer, but\
    \ rely\n   instead on higher-layer security protocols (e.g., TLS [4]) or operate\n\
    \   without any security.  As Section 2.2.1 describes, higher-layer\n   security\
    \ protocols may not be enough to protect against some\n   network-layer attacks.\n\
    \   To improve the situation, one could either reduce the hurdles to\n   obtain\
    \ and configure authentication information or remove the\n   requirement for authentication\
    \ in IPsec.  The latter approach is the\n   core idea of BTNS, which provides\
    \ anonymous (unauthenticated) keying\n   for IPsec to create security associations\
    \ (SAs) with peers that do\n   not possess requisite authentication credentials.\
    \  This requires\n   extensions to the IPsec architecture.  As the new BTNS modes\
    \ for\n   IPsec relax the authentication requirement, the impacts, tradeoffs,\n\
    \   and risks must be thoroughly understood before applying BTNS to any\n   communications.\
    \  More specifically, this document addresses the\n   issues of whether and when\
    \ network-layer authentication can be\n   omitted, the risks of using BTNS, and\
    \ finally, the impacts to the\n   existing IPsec architecture.\n   BTNS employs\
    \ a weaker notion of authenticated identity by comparison\n   to most authentication\
    \ protocols; this weaker notion is bootstrapped\n   from the security association\
    \ itself.  This notion, called\n   \"continuity of association\", doesn't mean\
    \ \"Bill Smith\" or \"owner of\n   shared secret X2YQ\", but means \"the entity\
    \ with which I have been\n   communicating on connection #23\".  Continuity of\
    \ association is only\n   invariant within a single SA; it is not invariant across\
    \ SAs, and\n   hence can only be used to provide protection during the lifetime\
    \ of\n   an SA.  This is a core notion used by BTNS, particularly in the\n   absence\
    \ of higher-layer authentication.  Continuity of association\n   can be viewed\
    \ as a form of authentication in which an identity is not\n   authenticated across\
    \ separate associations or out-of-band, but does\n   not change during the lifetime\
    \ of the SA.\n"
- title: 1.2.  IPsec Channels and Channel Binding
  contents:
  - "1.2.  IPsec Channels and Channel Binding\n   When IPsec security services are\
    \ used by higher-layer protocols, it\n   is important to bind those services to\
    \ higher-layer protocol sessions\n   in order to ensure that the security services\
    \ are consistently\n   applied to the higher-layer traffic involved.  The result\
    \ of this\n   binding is an \"IPsec channel\", and the act of creating an IPsec\n\
    \   channel is an instance of channel binding.  Channel binding is\n   discussed\
    \ in RFC 5056 [27] and in an associated connection latching\n   document [26].\
    \  This subsection summarizes the portions of these\n   documents that are essential\
    \ to understanding certain aspects of\n   BTNS.\n   A secure channel is a packet,\
    \ datagram, octet stream connection, or\n   sequence of connections between two\
    \ endpoints that affords\n   cryptographic integrity and, optionally, confidentiality\
    \ to data\n   exchanged over it [27].  Applying this concept to IPsec, an \"IPsec\n\
    \   channel\" is a packet flow associated with a higher-layer protocol\n   session,\
    \ such as a TCP connection, where all the packets are\n   protected by IPsec SAs\
    \ such that:\n   o  the peer's identity is the same for the lifetime of the packet\n\
    \      flow, and\n   o  the quality of IPsec protection used for the packet flow's\n\
    \      individual packets is the same for all of them for the lifetime of\n  \
    \    the packet flow [26].\n   The endpoints of an IPsec channel are the higher-layer\
    \ protocol\n   endpoints, which are beyond the endpoints of the IPsec SAs involved.\n\
    \   This creates a need to bind each IPsec SA to the higher-layer\n   protocol\
    \ session and its endpoints.  Failure to do this binding\n   creates vulnerabilities\
    \ to man-in-the-middle (MITM) attacks, where\n   what appears to be a single IPsec\
    \ SA for the higher-layer protocol\n   traffic is actually two separate SAs concatenated\
    \ by the attacker\n   acting as a traffic-forwarding proxy.\n   The combination\
    \ of connection latching [26] with channel binding [27]\n   creates IPsec channels\
    \ and binds IPsec SAs to higher-layer protocols.\n   Connection latching creates\
    \ an IPsec channel by associating IPsec SAs\n   to higher-layer protocol sessions,\
    \ and channel binding enables a\n   higher-layer protocol to bind its authentication\
    \ to the IPsec SAs.\n   Caching of this \"latch\" across higher-layer protocol\
    \ sessions is\n   necessary to counter inter-session spoofing attacks, and the\
    \ channel\n   binding authentication should be performed on each higher-layer\n\
    \   protocol session.  Connection latching and channel binding are useful\n  \
    \ not only for BTNS but also for IPsec SAs whose peers are fully\n   authenticated\
    \ by IKE during creation of the SA.\n   Channel binding for IPsec is based on\
    \ information obtained from the\n   SA creation process that uniquely identifies\
    \ an SA pair.  Channel\n   binding can be accomplished by adding this identifying\
    \ information to\n   higher-layer authentication mechanisms based on one-way hashes,\
    \ key\n   exchanges, or (public key) cryptographic signatures; in all three\n\
    \   cases, the resulting higher-layer authentication resists man-in-the-\n   middle\
    \ attacks on SA creation.  When each IKE peer uses a public-\n   private key pair\
    \ for IKE authentication to create an SA pair, the\n   pair of public keys used\
    \ (one for each peer) suffices for channel\n   binding; strong incorporation of\
    \ this information into higher-layer\n   authentication causes that higher-layer\
    \ authentication to fail when\n   an MITM attacker has concatenated separate SAs\
    \ by acting as a\n   traffic-forwarding proxy.\n"
- title: 1.3.  BTNS Methods
  contents:
  - "1.3.  BTNS Methods\n   There are two classes of scenarios in which BTNS may be\
    \ used to apply\n   IPsec services without network-layer authentication:\n   1.\
    \ Protection of traffic for a higher-layer protocol that does not\n      use authentication.\
    \  The resulting protection is \"better than\n      nothing\" because once an\
    \ unauthenticated SA is successfully\n      created without an MITM, that SA's\
    \ IPsec security services resist\n      subsequent MITM attacks even though the\
    \ absence of authentication\n      allows the initial creation of the BTNS-based\
    \ security association\n      (SA) to be subverted by an MITM.  This method of\
    \ using BTNS is\n      called Stand-Alone BTNS (SAB) because it does not rely\
    \ on any\n      security services outside of IPsec.\n   2. Protection of traffic\
    \ generated by a higher-layer protocol that\n      uses authentication.  The \"\
    better-than-nothing\" protection in this\n      case relies on the strength of\
    \ the higher-layer protocol's\n      authentication and the channel binding of\
    \ that authentication with\n      the BTNS-based SAs.  The level of protection\
    \ may be comparable to\n      the level afforded by the use of network-layer IKE\
    \ authentication\n      when the higher-layer protocol uses strong authentication\
    \ and\n      strong channel binding is employed to associate the BTNS-based SA\n\
    \      with that higher-layer authentication.  This method of using BTNS\n   \
    \   is called Channel-Bound BTNS (CBB) when the combination of the\n      higher-layer\
    \ authentication and channel binding is sufficient to\n      detect an MITM attack\
    \ on creation of a BTNS-based SA.\n   It is possible to combine IKE authentication\
    \ for one end of an SA\n   pair with BTNS's absence of network-layer authentication\
    \ for the\n   other end.  The resulting asymmetric authentication creates\n  \
    \ asymmetric modes of BTNS that are discussed further in Section 3.2\n   below.\n"
- title: 1.4.  BTNS Scope
  contents:
  - "1.4.  BTNS Scope\n   The scope of BTNS is to provide a generally useful means\
    \ of applying\n   IPsec security services that does not require network-level\n\
    \   authentication credentials.  The following areas are outside this\n   scope\
    \ of BTNS and hence are not discussed further in this document:\n   1. Use of\
    \ security frameworks other than IPsec to provide security\n      services for\
    \ higher-layer protocols.  There are a variety of\n      security service frameworks\
    \ other than IPsec, such as TLS [4],\n      Simple Authentication and Security\
    \ Layer (SASL) [11], and Generic\n      Security Service Application Program Interface\
    \ (GSS-API) [10], as\n      well as a variety of non-IPsec security mechanisms,\
    \ such as TCP\n      MD5 [6], that are described in other documents.  BTNS is\
    \ based on\n      IPsec by design; it will not always be the most appropriate\n\
    \      solution.\n   2. Use of the Extensible Authentication Protocol (EAP) for\
    \ IKE\n      authentication.  Section 1.3 of RFC 3748 clearly restricts EAP's\n\
    \      applicability to network access protocols [1]:\n         \"EAP was designed\
    \ for use in network access authentication,\n         where IP layer connectivity\
    \ may not be available.  Use of EAP\n         for other purposes, such as bulk\
    \ data transport, is NOT\n         RECOMMENDED.\"\n      Hence, EAP authentication\
    \ for IKE is only applicable to situations\n      where IKE is being used to establish\
    \ network access (e.g., create\n      a Virtual Private Network (VPN) connection).\
    \  In contrast, the\n      BTNS goal of general applicability encompasses many\
    \ areas other\n      than network access and specifically includes protocols that\n\
    \      transfer large amounts of data, such as iSCSI [19] and NFSv4 [21].\n  \
    \ 3. Manual keying is not considered for BTNS because manual keying is\n     \
    \ unsafe for protocols that transfer large amounts of data (e.g.,\n      RFC 3723\
    \ forbids use of manual keying with the IP Storage\n      protocols, including\
    \ iSCSI, for this reason [2]).\n"
- title: 1.5.  Structure of This Document
  contents:
  - "1.5.  Structure of This Document\n   The next section discusses the motivations\
    \ for BTNS, primarily based\n   on the implications of IKE's requirements for\
    \ network-layer\n   authentication.  Section 3 provides a high level overview\
    \ of BTNS,\n   both SAB and CBB.  Section 3 also includes descriptions of the\n\
    \   security services offered and the BTNS modes of operation (based on\n   combinations\
    \ of SAB, CBB, and/or IKE authentication).  Section 4\n   explores the applicability\
    \ of all of the modes of BTNS.  This is\n   followed by a discussion of the risks\
    \ and other security\n   considerations in Section 5.  Section 6 briefly describes\
    \ other\n   related efforts.\n"
- title: 2.  Problem Statement
  contents:
  - "2.  Problem Statement\n   This section describes the problems that motivated\
    \ the development of\n   BTNS.  The primary concern is that IPsec is not widely\
    \ utilized\n   despite rigorous development effort and emphasis on network security\n\
    \   by users and organizations.  There are also differing viewpoints on\n   which\
    \ layer is best for securing network communications and how\n   security protocols\
    \ at different layers should interact.  The\n   following discussion roughly categorizes\
    \ these issues by layers:\n   network layer and higher layers.\n"
- title: 2.1.  Network Layer
  contents:
  - "2.1.  Network Layer\n   At the network layer, one of the hurdles is to satisfy\
    \ the\n   authentication requirements of IPsec and IKE.  This section discusses\n\
    \   some drawbacks of network-layer authentication and the results of\n   these\
    \ requirements.\n"
- title: 2.1.1.  Authentication Identities
  contents:
  - "2.1.1.  Authentication Identities\n   Current IPsec authentication supports several\
    \ types of identities in\n   the Peer Authorization Database (PAD): IPv4 addresses,\
    \ IPv6\n   addresses, DNS names, Distinguished Names, RFC 822 email addresses,\n\
    \   and Key IDs [8].  All require either certificates or pre-shared\n   secrets\
    \ to authenticate.  The identities supported by the PAD can be\n   roughly categorized\
    \ as network-layer identifiers or other\n   identifiers.\n   The first three types\
    \ of identifiers -- IPv4 addresses, IPv6\n   addresses and DNS names -- are network-layer\
    \ identifiers.  The main\n   deficiency of IP addresses as identifiers is that\
    \ they often do not\n   consistently represent the same physical systems due to\
    \ the\n   increasing use of dynamic address assignments (DHCP) and system\n  \
    \ mobility.  The use of DNS names is also affected because the name to\n   address\
    \ mapping is not always up to date as a result.  Stale mapping\n   information\
    \ can cause inconsistencies between the IP address recorded\n   in the DNS for\
    \ a named system and the actual IP address of that\n   system, leading to problems\
    \ if the DNS is used to cross-check the IP\n   address from which a DNS name was\
    \ presented as an identifier.  DNS\n   names are also not always under the control\
    \ of the endpoint owner.\n   There are two main drawbacks with the other, non-network-layer\n\
    \   identifiers defined for the PAD.  The PAD functionality can be overly\n  \
    \ restrictive because there are other forms of identifiers not covered\n   by\
    \ the PAD specification (EAP does not loosen these restrictions in\n   general;\
    \ see Section 1.4).  Use of any non-network-layer identifiers\n   for IPsec authentication\
    \ may result in multiple authentications for\n   the same or different identifiers\
    \ at different layers, creating a\n   need to associate authentications and new\
    \ error cases (e.g., one of\n   two authentications for the same identifier fails).\
    \  These issues are\n   also related to channel binding and are further discussed\
    \ later in\n   this document.\n"
- title: 2.1.2.  Authentication Methods
  contents:
  - "2.1.2.  Authentication Methods\n   As described earlier, certificates and pre-shared\
    \ secrets are the\n   only methods of authentication accepted by current IPsec\
    \ and IKE\n   specifications.  Pre-shared secrets require manual configuration\
    \ and\n   out-of-band communications.  The verification process for\n   certificates\
    \ is cumbersome, plus there are administrative and\n   potential monetary costs\
    \ in obtaining certificates.  These factors\n   are among the possible reasons\
    \ why IPsec is not widely used outside\n   of environments with the highest security\
    \ requirements.\n"
- title: 2.1.3.  Current IPsec Limits on Unauthenticated Peers
  contents:
  - "2.1.3.  Current IPsec Limits on Unauthenticated Peers\n   Pre-configuration of\
    \ Security Policy Database (SPD) \"bypass\" entries\n   to enable communication\
    \ with unauthenticated peers only works if the\n   peer IP addresses are known\
    \ in advance.  The lack of unauthenticated\n   IPsec modes often prevents secure\
    \ communications at the network layer\n   with unauthenticated or unknown peers,\
    \ even when they are\n   subsequently authenticated in a higher-layer protocol\
    \ or application.\n   The lack of a channel binding API between IPsec and higher-layer\n\
    \   protocols may further force such communications to completely bypass\n   IPsec,\
    \ leaving the network layer of such communications unprotected.\n"
- title: 2.2.  Higher-Layer Issues
  contents:
  - "2.2.  Higher-Layer Issues\n   For higher layers, the next subsection focuses\
    \ on whether IPsec is\n   necessary if transport layer security is already in\
    \ use.  The use of\n   IPsec in the presence of transport security provides further\n\
    \   motivation for reducing the administrative burdens of using IPsec.\n   This\
    \ is followed by a discussion of the implications of using\n   authentication\
    \ at both the network layer and a higher layer for the\n   same connection.\n"
- title: 2.2.1.  Transport Protection from Packet Spoofing
  contents:
  - "2.2.1.  Transport Protection from Packet Spoofing\n   Consider the case of transport\
    \ protocols.  Increases in network\n   performance and the use of long-lived connections\
    \ have resulted in\n   increased vulnerability of connection-oriented transport\
    \ protocols to\n   certain forms of attacks.  TCP, like many other protocols,\
    \ is\n   susceptible to off-path third-party attacks, such as injection of a\n\
    \   TCP RST [24].  The Internet lacks comprehensive ingress filtering to\n   discard\
    \ such spoofed traffic before it can cause damage.  These\n   attacks can affect\
    \ BGP sessions between core Internet routers, and\n   are thus of significant\
    \ concern [3][12].  As a result, a number of\n   proposed solutions have been\
    \ developed, most of which are at the\n   transport layer.\n   Some of these solutions\
    \ augment the transport protocol by improving\n   its own security, e.g., TCP\
    \ MD5 [6].  Others modify the core TCP\n   processing rules to make it harder\
    \ for off-path attackers to inject\n   meaningful packets either during the initial\
    \ handshake (e.g., SYN\n   cookies) or after a connection is established (e.g.,\
    \ TCPsecure)\n   [15][23].  Some of these approaches are new to TCP, but have\
    \ already\n   been incorporated into other transport protocols (e.g., Stream\n\
    \   Control Transmission Protocol (SCTP) [22]) or intermediate (so-called\n  \
    \ layer 3.5) protocols (e.g., Host Identity Protocol (HIP) [14]).\n   TCP MD5\
    \ and its potential successor, TCP Auth [25], are based on\n   authentication;\
    \ TCP-specific modifications that lack authentication\n   are, at best, temporary\
    \ patches to the ubiquitous vulnerability to\n   spoofing attacks.  The obvious\
    \ solution to spoofing is end-to-end\n   validation of the traffic, either at\
    \ the transport layer or the\n   network layer.  The IPsec suite already provides\
    \ authentication of a\n   network-layer packet and its contents, but the costs\
    \ of an\n   authentication infrastructure required for the use of IPsec can be\n\
    \   prohibitive.  Similarly, TCP MD5 requires pre-shared keys, which can\n   likewise\
    \ be prohibitive.  TCP Auth is currently under development,\n   and may include\
    \ a BTNS-like mode.\n   Protecting systems from spoofed packets is ultimately\
    \ an issue of\n   authentication, ensuring that a receiver's interpretation of\
    \ the\n   source of a packet is accurate.  Authentication validates the\n   identity\
    \ of the source of the packet.  The current IPsec suite\n   assumes that identity\
    \ is validated either by a trusted third party --\n   e.g., a certification authority\
    \ -- or by a pre-deployed shared\n   secret.  Such an identity is unique and invariant\
    \ across associations\n   (pair-wise security configuration), and can be used\
    \ to reject packets\n   that are not authentic.\n   With regard to BGP in particular,\
    \ it has been understood that the use\n   of appropriate network- or transport-layer\
    \ authentication is the\n   preferred protection from TCP spoofing attacks [3].\
    \  Authentication\n   at one router by itself does not provide overall BGP security\
    \ because\n   that router remains at the mercy of all routers it peers with, since\n\
    \   it depends on them to also support authentication [25].  The reality\n   is\
    \ that few Internet routers are configured to support authentication\n   at all,\
    \ and the result is the use of unsecured TCP for sending BGP\n   packets.  BTNS\
    \ allows an individual router to relax the need for\n   authentication in order\
    \ to enable the use of protected sessions that\n   are not authenticated.  The\
    \ latter is \"better than nothing\" in cases\n   where \"nothing\" is the alternative.\
    \  Although the routing community\n   has chosen solutions other than BTNS for\
    \ protection of BGP's TCP\n   connections (e.g., TCP MD5), the discussion of BGP\
    \ remains in this\n   document because it was a motivation for the development\
    \ of BTNS.\n"
- title: 2.2.2.  Authentication at Multiple Layers
  contents:
  - "2.2.2.  Authentication at Multiple Layers\n   Some existing protocols used on\
    \ the Internet provide authentication\n   above the network and transport layers\
    \ but rely on the IPsec suite\n   for packet-by-packet cryptographic integrity\
    \ and confidentiality\n   services.  Examples of such protocols include iSCSI\
    \ [19] and the\n   remote direct data placement (RDDP) protocols [16][20].  With\
    \ the\n   current IPsec suite, the result is two authentication operations: one\n\
    \   at the IPsec layer using an identity for IKE and an associated secret\n  \
    \ or key, and another by the higher-layer protocol using a higher-layer\n   identity\
    \ and secret or key.  With the current IPsec specifications,\n   this redundant\
    \ authentication is necessary because the identity and\n   key formats differ\
    \ between IPsec and the higher-layer protocol and/or\n   because there is no standard\
    \ interface to pass authentication results\n   from IPsec up to the higher layer.\
    \  End-node software is then\n   responsible for ensuring that the identities\
    \ used for these two\n   authentication operations are consistent in some fashion;\
    \ determining\n   whether these identities are consistent is an authorization\
    \ policy\n   decision.\n   Failure of the end-node software to enforce appropriate\
    \ consistency\n   across authentication operations at different layers creates\
    \ man-in-\n   the-middle attack opportunities at the network layer.  An attacker\n\
    \   may exploit this omission by interposing as a proxy; rather than\n   impersonate\
    \ the attacked endpoints, the attacker need only\n   authenticate with identities\
    \ that are acceptable to the attacked\n   endpoints.  The resulting success enables\
    \ the attacker to obtain full\n   access to the higher-layer traffic by passing\
    \ the higher-layer\n   authentication operation through without modification.\
    \  In the\n   complete absence of consistency checks on the identities used at\n\
    \   different layers, higher-layer traffic may be accessible to any\n   entity\
    \ that can successfully authenticate at the network layer.\n   In principle, a\
    \ single authentication operation should suffice to\n   protect the higher-layer\
    \ traffic, removing the need for:\n   o  the second authentication operation,\n\
    \   o  configuration and management of the identities and secrets or keys\n  \
    \    for the second authentication (even if the identities and secrets\n     \
    \ or keys are the same, the two authentication operations may employ\n      different\
    \ repositories for identities, secrets, and keys), and\n   o  determining in some\
    \ fashion that the two authenticated identities\n      are consistent.  As noted\
    \ above, there are significant potential\n      MITM vulnerabilities if this is\
    \ not done.\n   IPsec may not always be present for these higher-layer protocols,\
    \ and\n   even when present, may not always be used.  Hence, if there is a\n \
    \  choice, the higher-layer protocol authentication is preferable as it\n   will\
    \ always be available for use, independent of IPsec.\n   A \"better-than-nothing\"\
    \ security approach to IPsec can address this\n   problem by setting up an IPsec\
    \ security association without an\n   authentication, and then using an extended\
    \ form of the higher-layer\n   authentication to establish that the higher-layer\
    \ protocol session is\n   protected by a single IPsec SA.  This counters man-in-the-middle\n\
    \   (MITM) attacks on BTNS IPsec session establishment by terminating the\n  \
    \ higher-layer session via an authentication failure when such an\n   attack occurs.\
    \  The result is that a single authentication operation\n   validates not only\
    \ the higher-layer peer's identity but also\n   continuity of the security association\
    \ to that peer.  This higher-\n   layer check for a single IPsec SA is referred\
    \ in this document as\n   \"channel binding\", thus the name Channel-Bound BTNS\
    \ (CBB) [27].\n"
- title: 3.  BTNS Overview and Threat Models
  contents:
  - "3.  BTNS Overview and Threat Models\n   This section provides an overview of\
    \ BTNS and the IPsec security\n   services that are offered when BTNS is used.\
    \  It also describes the\n   multiple operating modes of BTNS.\n"
- title: 3.1.  BTNS Overview
  contents:
  - "3.1.  BTNS Overview\n   This is an overview of what is needed in IPsec to enable\
    \ BTNS.  The\n   detailed specifications of the extensions are addressed by the\n\
    \   relevant protocol specifications.\n   The main update to IPsec is adding extensions\
    \ to security policy that\n   permit secure communications with unauthenticated\
    \ peers.  These\n   extensions are necessary for both IPsec and IKE.  For IPsec,\
    \ the\n   first extension applies to the PAD, which specifies the forms of\n \
    \  authentication allowed for each IKE peer.  In addition to existing\n   forms\
    \ of authentication, such as X.509 certificates and pre-shared\n   secrets, the\
    \ extension adds an unauthenticated category in which the\n   public key presented\
    \ by the peer serves as its identity (and is\n   authenticated by the peer demonstrating\
    \ knowledge of the\n   corresponding private key) [28].  The second extension\
    \ is that a flag\n   is added to each SPD entry to indicate whether BTNS lack\
    \ of\n   authentication is acceptable for that SPD entry.\n   The changes to enable\
    \ channel binding between IPsec and higher-layer\n   protocols or applications\
    \ are more complex than the policy extensions\n   above.  They require specifying\
    \ APIs and interactions between IPsec\n   and higher-layer protocols.  This document\
    \ assumes such provisions\n   will be developed, but does not address their details.\n"
- title: 3.2.  BTNS and IPsec Security Services
  contents:
  - "3.2.  BTNS and IPsec Security Services\n   The changes and extensions of BTNS\
    \ primarily affect IPsec policy as\n   described above.  Other parts of IPsec\
    \ and IKE specifications are\n   unchanged.  BTNS does not require a separate\
    \ IPsec implementation, as\n   BTNS can be integrated with any IPsec implementation\
    \ in a system.\n   The scope of BTNS functionality applies only to the SAs matching\
    \ the\n   policies that explicitly specify or enable BTNS modes in the PAD and\n\
    \   for which the corresponding SPD entries allow BTNS.  All other non-\n   BTNS\
    \ policy entries, including entries in the SPD and the PAD, and\n   non-BTNS SAs\
    \ are not affected by BTNS.\n   In principle, the result of removing the requirement\
    \ that all SAs be\n   authenticated is that BTNS can establish secure IPsec connections\
    \ in\n   a fashion similar to fully authenticated IKE, but BTNS cannot verify\n\
    \   or authenticate the peer identities of these SAs.  The following is a\n  \
    \ list of security services offered by the IPsec protocol suite with\n   notes\
    \ that address the differences created by the addition of BTNS.\n   1. Access\
    \ Control\n      BTNS extends IPsec's access control services to allow\n     \
    \ unauthenticated connections.  These extensions are integrated with\n      the\
    \ IPsec PAD and SPD in a fashion that does not affect the access\n      controls\
    \ associated with entries that do not use the BTNS\n      extensions.  For Channel-Bound\
    \ BTNS, the authentication that\n      applies to the SA is performed at a higher\
    \ layer in a fashion that\n      links higher-layer access control policy to IPsec's\
    \ network-layer\n      access control mechanisms.\n   2. Data Origin Authentication\n\
    \      Stand-Alone BTNS weakens data origin authentication to continuity\n   \
    \   of association, namely the assurance that traffic on an SA\n      continues\
    \ to originate from the same unauthenticated source.\n      Channel-Bound BTNS\
    \ relies on higher-layer authentication to\n      provide data origin authentication\
    \ of protected network traffic.\n   3. Connectionless Integrity\n   4. Anti-Replay\
    \ Protection\n   5. Confidentiality\n   6. (Limited) Traffic Flow Confidentiality\n\
    \      For the security services offered by IPsec that are listed in\n      items\
    \ 3 through 6, it is possible to establish secure IPsec\n      connections with\
    \ rogue peers via BTNS because authentication is\n      not required.  On the\
    \ other hand, once a secure connection is\n      established, the communication\
    \ is protected by these security\n      services in the same fashion as a connection\
    \ established by\n      conventional IPsec means.\n"
- title: 3.3.  BTNS and IPsec Modes
  contents:
  - "3.3.  BTNS and IPsec Modes\n   The previous sections have described two ways\
    \ of using BTNS:  Stand-\n   Alone (SAB) and Channel-Bound (CBB).  Both of these\
    \ can also be used\n   either symmetrically, where neither party authenticates\
    \ at the\n   network layer, or asymmetrically, where only one party does not\n\
    \   authenticate at the network layer.  There are a number of cases to\n   consider,\
    \ based on combinations of the endpoint security capabilities\n   of SAB, CBB,\
    \ and conventional IKE authentication of an identity\n   (denoted as AUTH below).\
    \  The following tables show all of the\n   combinations based on the capabilities\
    \ of the two security endpoints:\n           | AUTH  |  SAB  |               \
    \ | CB-AUTH |   CBB   |\n      -----+-------+-------+         -------+---------+---------+\n\
    \           |       |       |                |         |         |\n      AUTH\
    \ | AUTH  | A-SAB |         CB-AUTH| CB-AUTH |  A-CBB  |\n           |       |\
    \       |                |         |         |\n      -----+-------+-------+ \
    \        -------+---------+---------+\n           |       |       |          \
    \      |         |         |\n      SAB  | A-SAB | S-SAB |           CBB  |  A-CBB\
    \  |  S-CBB  |\n           |       |       |                |         |      \
    \   |\n      -----+-------+-------+         -------+---------+---------+\n   \
    \     No Channel Binding               With Channel Binding\n   There are six\
    \ operating modes that result from the combinations.  The\n   first three modes\
    \ consist of network-layer authentication schemes\n   used without channel binding\
    \ to higher-layer authentication:\n   1. AUTH: both parties provide and authenticate\
    \ conventional, IKE-\n      supported identities.\n   2. Symmetric SAB (S-SAB):\
    \ neither party authenticates with a\n      conventional, IKE-supported identity.\n\
    \   3. Asymmetric SAB (A-SAB): one party does not authenticate with a\n      conventional,\
    \ IKE-supported identity, but the other side does\n      authenticate with such\
    \ an identity.\n   The following three modes combine the network-layer behaviors\
    \ with\n   channel binding to higher-layer authentication credentials:\n   4.\
    \ CB-AUTH: channel binding is used and both parties authenticate\n      with conventional,\
    \ IKE-supported identities.\n   5. Symmetric CBB (S-CBB): neither party authenticates\
    \ with a\n      conventional, IKE-supported identity, but channel binding is used\n\
    \      to bind the SAs to higher-layer authentication operations.\n   6. Asymmetric\
    \ CBB (A-CBB): asymmetric SAB (A-SAB) used with channel\n      binding; at the\
    \ network layer, one party does not authenticate\n      with a conventional, IKE-supported\
    \ identity, but the other party\n      does authenticate with such an identity.\
    \  Channel binding is used\n      to bind the SA to higher-layer authentication\
    \ operations.\n   There are three security mechanisms involved in BTNS with channel\n\
    \   binding:\n   1. BTNS and IPsec at the network layer,\n   2. higher-layer authentication,\
    \ and\n   3. the connection latching plus channel binding mechanisms that bind\n\
    \      the higher-layer authentication credentials with the secure IPsec\n   \
    \   channel.\n   Authentication at both the network and higher layers can be either\n\
    \   bidirectional (both peers are authenticated) or unidirectional (one\n   of\
    \ the two peers does not authenticate).  In contrast, when channel\n   binding\
    \ is used, it must be applied at both ends of the communication\n   to prevent\
    \ MITM attacks.  Existing channel binding mechanisms and\n   APIs for this purpose\
    \ (e.g., as defined in GSS-API [10]) mandate the\n   exchange and verification\
    \ of the channel binding values at both ends\n   to ensure that correct, non-spoofed\
    \ channel characteristics are bound\n   to the higher-layer authentication.\n\
    \   Note: When any Stand-Alone BTNS (SAB) or Channel-Bound BTNS (CBB) is\n   used\
    \ without being qualified as symmetric or asymmetric, the\n   symmetric mode is\
    \ the intended default meaning.\n"
- title: 4.  Applicability Statement
  contents:
  - "4.  Applicability Statement\n   BTNS is intended for services open to the public\
    \ but for which\n   protected associations are desired, and for services that\
    \ can be\n   authenticated at higher layers in the protocol stack.  BTNS can also\n\
    \   provide some level of protection for private services when the\n   alternative\
    \ BTNS is no protection at all.\n   BTNS uses the IPsec protocol suite, and therefore\
    \ should not be used\n   in situations where IPsec and specifically IKE are unsuitable.\
    \  IPsec\n   and IKE incur additional computation overhead, and IKE further\n\
    \   requires message exchanges that incur round-trip latency to setup\n   security\
    \ associations.  These may be undesirable in environments with\n   limited computational\
    \ resources and/or high communication latencies.\n   This section provides an\
    \ overview of the types of applications\n   suitable for various modes of BTNS.\
    \  The next two sections describe\n   the overall benefits and vulnerabilities,\
    \ followed by the\n   applicability analysis for each BTNS mode.  The applicability\n\
    \   statement covers only the four BTNS-specific modes; the AUTH and\n   CB-AUTH\
    \ modes are out of scope for this discussion.\n"
- title: 4.1.  Benefits
  contents:
  - "4.1.  Benefits\n   BTNS protects security associations after they are established\
    \ by\n   reducing vulnerability to attacks from parties that are not\n   participants\
    \ in the association.  BTNS-based SAs protect network and\n   transport layers\
    \ without requiring network-layer authentication.\n   BTNS can be deployed without\
    \ pre-deployment of authentication\n   material for IPsec or pre-shared information\
    \ and can protect all\n   transport layer protocols using a common mechanism.\n\
    \   BTNS also helps protect systems from low-effort attacks on higher-\n   layer\
    \ sessions or connections that disrupt valuable services or\n   resources.  BTNS\
    \ raises the level of effort for many types of\n   network- and transport-layer\
    \ attacks.  Simple transport layer packet\n   attacks are rejected because the\
    \ malicious packet or packets are not\n   part of an IPsec SA.  The attacker is\
    \ instead forced to establish an\n   unauthenticated IPsec SA and a transport\
    \ connection for SAB,\n   requiring the attacker to perform as much work as a\
    \ host engaging in\n   the higher-layer communication.  SAB thus raises the effort\
    \ for a\n   DDoS (Distributed Denial of Service) attack to that of emulating a\n\
    \   flash crowd.  For open services, there may be no way to distinguish\n   such\
    \ a DDoS attack from an actual flash crowd.\n   BTNS also allows individual security\
    \ associations to be established\n   for protection of higher-layer traffic without\
    \ requiring pre-deployed\n   authentication credentials.\n"
- title: 4.2.  Vulnerabilities
  contents:
  - "4.2.  Vulnerabilities\n   BTNS removes the requirement that every IPsec SA be\
    \ authenticated.\n   Hosts connecting to BTNS hosts are vulnerable to communicating\
    \ with a\n   masquerader throughout the association for SAB, or until higher\n\
    \   layers provide additional authentication for CBB.  As a result,\n   authentication\
    \ data (e.g., passwords) sent to a masquerading peer\n   could be disclosed to\
    \ an attacker.  This is a deliberate design\n   tradeoff; in BTNS, network- and\
    \ transport-layer access is no longer\n   controlled by the identity presented\
    \ by the other host, opening hosts\n   to potential masquerading and flash crowd\
    \ attacks.  Conversely, BTNS\n   can secure connections to hosts that are unable\
    \ to authenticate at\n   the network layer, so the network and transport layers\
    \ are more\n   protected than can be achieved via higher-layer authentication\
    \ alone.\n   Lacking network-layer authentication information, other means must\
    \ be\n   used to provide access control for local resources.  Traffic\n   selectors\
    \ for the BTNS SPD entries can be used to limit which\n   interfaces, address\
    \ ranges, and port ranges can access BTNS-enabled\n   services.  Rate limiting\
    \ can further restrict resource usage.  For\n   SAB, these protections need to\
    \ be considered throughout associations,\n   whereas for CBB they need be present\
    \ only until higher-layer\n   protocols provide the missing authentication.  CBB\
    \ also relies on the\n   effectiveness of the binding of higher-layer authentication\
    \ to the\n   BTNS network association.\n"
- title: 4.3.  Stand-Alone BTNS (SAB)
  contents:
  - "4.3.  Stand-Alone BTNS (SAB)\n   SAB is intended for applications that are unable\
    \ to use IKE-\n   compatible authentication credentials and do not employ higher-layer\n\
    \   authentication or other security protection.  SAB is also suitable\n   when\
    \ the identities of either party are not important or are\n   deliberately omitted,\
    \ but IPsec security services are desired (see\n   Section 3.2).  SAB is particularly\
    \ applicable to long-lived\n   connections or sessions for which assurance that\
    \ the entity at the\n   other end of the connection has not changed may be a good\
    \ enough\n   substitute for the lack of authentication.  This section discusses\n\
    \   symmetric and asymmetric SAB.\n"
- title: 4.3.1.  Symmetric SAB
  contents:
  - "4.3.1.  Symmetric SAB\n   Symmetric SAB (S-SAB) is applicable when both parties\
    \ lack network-\n   layer authentication information and that authentication is\
    \ not\n   available from higher-layer protocols.  S-SAB can still provide some\n\
    \   forms of protection for network and transport protocols, but does not\n  \
    \ provide authentication beyond continuity of association.  S-SAB is\n   useful\
    \ in situations where transfer of large files or use of other\n   long-lived connections\
    \ would benefit from not being interrupted by\n   attacks on the transport connection\
    \ (e.g., via a false TCP RST), but\n   the particular endpoint identities are\
    \ not important.\n   Open services, such as web servers, and peer-to-peer networks\
    \ could\n   utilize S-SAB when their identities need not be authenticated but\n\
    \   their communication would benefit from protection.  Such services\n   might\
    \ provide files that are either not validated or validated by\n   other means\
    \ (e.g., published hashes).  These transmissions present a\n   target for off-path\
    \ attacks that could be mitigated by S-SAB.  S-SAB\n   may also be useful for\
    \ protecting voice-over-IP (VoIP) traffic\n   between peers, such as direct calls\
    \ between VoIP clients.\n   S-SAB is also useful in protecting any transport protocol\
    \ when the\n   endpoints do not deploy authentication, for whatever reason.  This\
    \ is\n   the case for BGP TCP connections between core routers, where the\n  \
    \ protection afforded by S-SAB is better than no protection at all,\n   even though\
    \ BGP is not intended as an open service.\n   S-SAB can also serve as an intermediate\
    \ step towards S-CBB.  S-SAB is\n   the effective result when an IPsec channel\
    \ is used (via connection\n   latching), but the higher-layer authentication is\
    \ not bound to the\n   IPsec SAs within the channel.\n"
- title: 4.3.2.  Asymmetric SAB
  contents:
  - "4.3.2.  Asymmetric SAB\n   Asymmetric SAB (A-SAB) allows one party lacking network-layer\n\
    \   authentication information to establish associations with another\n   party\
    \ that possesses authentication credentials for any applicable\n   IKE authentication\
    \ mechanism.\n   Asymmetric SAB is useful for protecting transport connections\
    \ for\n   open services on the Internet, e.g., commercial web servers, etc.  In\n\
    \   these cases, the server is typically authenticated by a widely known\n   CA,\
    \ as is done with TLS at the application layer, but the clients\n   need not be\
    \ authenticated [4].  Although this may result in IPsec and\n   TLS being used\
    \ on the same connection, this duplication of security\n   services at different\
    \ layers is necessary when protection is required\n   from the sorts of spoofing\
    \ attacks described in Section 2 (e.g., TLS\n   cannot prevent a spoofed TCP RST,\
    \ as the RST is processed by TCP\n   rather than being passed to TLS).\n   A-SAB\
    \ can also secure transport for streaming media such as would be\n   used by webcasts\
    \ for remote education and entertainment.\n"
- title: 4.4.  Channel-Bound BTNS (CBB)
  contents:
  - "4.4.  Channel-Bound BTNS (CBB)\n   CBB allows hosts without network-layer authentication\
    \ information to\n   cryptographically bind BTNS-based IPsec SAs to authentication\
    \ at\n   higher layers.  CBB is intended for applications that employ higher-\n\
    \   layer authentication but that also benefit from additional network-\n   layer\
    \ security.  CBB provides network-layer security services without\n   requiring\
    \ authentication at the network layer.  This enables IPsec\n   security services\
    \ for applications that have IKE-incompatible\n   authentication credentials.\
    \  CBB allows IPsec to be used with\n   authentication mechanisms not supported\
    \ by IKE and frees higher-layer\n   applications and protocols from duplicating\
    \ security services already\n   available in IPsec.\n   Symmetric CBB integrates\
    \ channel binding with S-SAB, as does\n   asymmetric CBB with A-SAB.  In both\
    \ cases, the target applications\n   have similar characteristics at the network\
    \ layer to their non-\n   channel-binding counterparts.  The only significant\
    \ difference is the\n   binding of authentication credentials at a higher layer\
    \ to the\n   resulting IPsec channels.\n   Although the modes of CBB refer to\
    \ the authentication at the network\n   layer, higher-layer authentication can\
    \ also be either asymmetric\n   (one-way) or symmetric (two-way).  Asymmetric\
    \ CBB can be used to\n   complement one-way authentication at a higher layer by\
    \ providing one-\n   way authentication of the opposite direction at the network\
    \ layer.\n   Consider an application with one-way, client-only authentication.\n\
    \   The client can utilize A-CBB where the server must present IKE-\n   authenticated\
    \ credentials at the network layer.  This form of A-CBB\n   achieves mutual authentication,\
    \ albeit at separate layers.  Many\n   remote file system protocols, such as iSCSI\
    \ and NFS, fit into this\n   category and can benefit from channel binding with\
    \ IPsec for better\n   network-layer protection, including prevention of MITM\
    \ attacks.\n   Mechanisms and interfaces for BTNS channel binding with IPsec are\n\
    \   discussed in further detail in [26].\n"
- title: 4.5.  Summary of Uses, Vulnerabilities, and Benefits
  contents:
  - "4.5.  Summary of Uses, Vulnerabilities, and Benefits\n   The following is a summary\
    \ of the properties of each type of BTNS,\n   based on the previous subsections:\n\
    \                 SAB                          CBB\n     --------------------------------------------------------------\n\
    \     Uses     Open services                Same as SAB but with\n           \
    \   Peer-to-peer                 higher-layer auth.,\n              Zero-config\
    \ Infrastructure   e.g., iSCSI [19], NFSv4 [21]\n     Vuln.    Masqueraders  \
    \               Masqueraders until bound\n              Needs data rate limit\
    \        Needs data rate limit\n              Load on IPsec                Load\
    \ on IPsec\n              Exposure to open access\n     Benefit  Protects L3 &\
    \ L4             Protects L3 & L4\n              Avoids all auth. keys       \
    \ Avoids L3 auth. keys\n                                           Full auth.\
    \ once bound\n   Most of the potential vulnerabilities in the above table have\
    \ been\n   discussed in previous sections of this document; some of the more\n\
    \   general issues, such as the increased load on IPsec processing, are\n   addressed\
    \ in the Security Considerations section of this document.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This section describes the threat models for\
    \ BTNS and discusses other\n   security issues based on the threat models for\
    \ different modes of\n   BTNS.  Some of the issues were mentioned previously in\
    \ the document\n   but are listed again for completeness.\n"
- title: 5.1.  Threat Models and Evaluation
  contents:
  - "5.1.  Threat Models and Evaluation\n   BTNS is intended to protect sessions from\
    \ a variety of threats,\n   including on-path, man-in-the-middle attacks after\
    \ key exchange, and\n   off-path attacks.  It is intended to protect the contents\
    \ of a\n   session once established, but does not protect session establishment\n\
    \   itself.  This protection has value because it forces the attacker to\n   target\
    \ connection establishment as opposed to waiting for a more\n   convenient time;\
    \ this is of particular value for long-lived sessions.\n   BTNS is not intended\
    \ to protect the key exchange itself, so this\n   presents an opportunity for\
    \ a man-in-the-middle attack or a well-\n   timed attack from other sources. \
    \ Furthermore, Stand-Alone BTNS is\n   not intended to protect the endpoint from\
    \ nodes masquerading as\n   legitimate clients of a higher-layer protocol or service.\
    \  Channel-\n   Bound BTNS can protect from such masquerading, though at a later\n\
    \   point after the security association is established, as a masquerade\n   attack\
    \ causes a client authentication failure at a higher layer.\n   BTNS is also not\
    \ intended to protect from DoS (Denial of Service)\n   attacks that seek to overload\
    \ a CPU performing authentication or\n   other security computations, nor is BTNS\
    \ intended to provide\n   protection from configuration mistakes.  These latter\
    \ two threat\n   assumptions are also the case for IPsec.\n   The following sections\
    \ discuss the implications of the threat models\n   in more details.\n"
- title: 5.2.  Interaction with Other Security Services
  contents:
  - "5.2.  Interaction with Other Security Services\n   As with any aspect of network\
    \ security, the use of BTNS must not\n   interfere with other security services.\
    \  Within IPsec, the scope of\n   BTNS is limited to the SPD and PAD entries that\
    \ explicitly specify\n   BTNS and to the resulting SAD entries.  It is incumbent\
    \ on system\n   administrators to deploy BTNS only where safe, preferably as an\n\
    \   alternative to the use of \"bypass\" SPD entries that exempt specified\n \
    \  traffic from IPsec cryptographic protection.  In other words, BTNS\n   should\
    \ be used only as a substitute for no security, rather than as a\n   substitute\
    \ for stronger security.  When the higher-layer\n   authentication required for\
    \ CBB is not available, other methods, such\n   as IP address filtering, can help\
    \ reduce the vulnerability of SAB to\n   exposure to anonymous access.\n"
- title: 5.3.  MITM and Masquerader Attacks
  contents:
  - "5.3.  MITM and Masquerader Attacks\n   Previous sections have described how CBB\
    \ can counter MITM and\n   masquerader attacks, even though BTNS does not protect\
    \ key exchange\n   and does not authenticate peer identities at the network layer.\n\
    \   Nonetheless, there are some security issues regarding CBB that must\n   be\
    \ carefully evaluated before deploying BTNS.\n   For regular IPsec/IKE, a man\
    \ in the middle cannot subvert IKE\n   authentication, and hence an attempt to\
    \ attack an IPsec SA via use of\n   two SAs concatenated by the attacker acting\
    \ as a traffic-forwarding\n   proxy will cause an IKE authentication failure.\
    \  On the other hand, a\n   man-in-the-middle attack on IPsec with CBB is discovered\
    \ later.  With\n   CBB, the IKE protocol will succeed because it is unauthenticated,\
    \ and\n   the security associations will be set up.  The man in the middle will\n\
    \   not be discovered until the higher-layer authentication fails.  There\n  \
    \ are two security concerns with this approach: possible exposure of\n   sensitive\
    \ authentication information to the attackers, and resource\n   consumption before\
    \ attacks are detected.\n   The exposure of information depends on the higher-layer\n\
    \   authentication protocols used in applications.  If the higher-layer\n   authentication\
    \ requires exchange of sensitive information (e.g.,\n   passwords or password-derived\
    \ materials) that are directly useful or\n   can be attacked offline, an attacker\
    \ can gain such information even\n   though the attack can be detected.  Therefore,\
    \ CBB must not be used\n   with higher-layer protocols that may expose sensitive\
    \ information\n   during authentication exchange.  For example, Kerberos V AP\
    \ exchanges\n   would leak little other than the target's krb5 principal name,\
    \ while\n   Kerberos V AS exchanges using PA-ENC-TIMESTAMP pre-authentication\n\
    \   would leak material that can then be attacked offline.  The latter\n   should\
    \ not be used with BTNS, even with Channel Binding.  Further,\n   the ways in\
    \ which BTNS is integrated with the higher-layer protocol\n   must take into consideration\
    \ vulnerabilities that could be introduced\n   in the APIs between these two systems\
    \ or in the information that they\n   share.\n   The resource consumption issue\
    \ is addressed in the next section on\n   DoS attacks.\n"
- title: 5.4.  Denial of Service (DoS) Attacks and Resource Consumptions
  contents:
  - "5.4.  Denial of Service (DoS) Attacks and Resource Consumptions\n   A consequence\
    \ of BTNS deployment is that more traffic requires\n   cryptographic operations;\
    \ these operations increase the computation\n   required in IPsec implementations\
    \ that receive protected traffic\n   and/or verify incoming traffic.  That additional\
    \ computation raises\n   vulnerability to overloading, which may be the result\
    \ of legitimate\n   flash crowds or a DoS or DDoS attack.  Although this may itself\n\
    \   present a substantial impediment to deployment, it is an issue for\n   all\
    \ cryptographically protected communication systems.  This document\n   does not\
    \ address the impact BTNS has on such increases in required\n   computation.\n\
    \   The effects of the increased resource consumption are twofold.  The\n   consumption\
    \ raises the level of effort for attacks such as MITM, but\n   also consumes more\
    \ resources to detect such attacks and to reject\n   spoofed traffic.  At the\
    \ network layer, proper limits and access\n   controls for resources should be\
    \ set up for all BTNS SAs.  CBB SAs\n   may be granted increased resource access\
    \ after the higher-layer\n   authentications succeed.  The same principles apply\
    \ to the higher-\n   layer protocols that use CBB SAs.  Special care must be taken\
    \ to\n   avoid excessive resource usage before authentication is established\n\
    \   in these applications.\n"
- title: 5.5.  Exposure to Anonymous Access
  contents:
  - "5.5.  Exposure to Anonymous Access\n   The use of SAB by a service implies that\
    \ the service is being offered\n   for open access, since network-layer authentication\
    \ is not performed.\n   SAB should not be used with services that are not intended\
    \ to be\n   openly available.\n"
- title: 5.6.  ICMP Attacks
  contents:
  - "5.6.  ICMP Attacks\n   This document does not consider ICMP attacks because the\
    \ use of BTNS\n   does not change the existing IPsec guidelines on ICMP traffic\n\
    \   handling [8].  BTNS focuses on the authentication part of\n   establishing\
    \ security associations.  BTNS does not alter the IPsec\n   traffic processing\
    \ model and protection boundary.  As a result, the\n   entire IPsec packet processing\
    \ guidelines, including ICMP processing,\n   remain applicable when BTNS is added\
    \ to IPsec.\n"
- title: 5.7.  Leap of Faith
  contents:
  - "5.7.  Leap of Faith\n   BTNS allows systems to accept and establish security\
    \ associations\n   with peers without authenticating their identities.  This can\
    \ enable\n   functionality similar to \"Leap of Faith\" authentication utilized\
    \ in\n   other security protocols and applications such as the Secure Shell\n\
    \   Protocol (SSH) [29].\n   SSH implementations are allowed to accept unknown\
    \ peer credentials\n   (host public keys) without authentication, and these unauthenticated\n\
    \   credentials may be cached in local databases for future\n   authentication\
    \ of the same peers.  Similar to BTNS, such measures are\n   allowed due to the\
    \ lack of \"widely deployed key infrastructure\" [29]\n   and to improve ease\
    \ of use and end-user acceptance.\n   There are subtle differences between SSH\
    \ and BTNS regarding Leap of\n   Faith, as shown in the following table:\n   \
    \                                  |   SSH   |  BTNS   |\n      -------------------------------+---------+---------+\n\
    \       Accept unauthenticated        | Allowed | Allowed |\n       credentials\
    \                   |         |         |\n      -------------------------------+---------+---------+\n\
    \       Options/Warnings to reject    |   Yes   |   No    |\n       unauthenticated\
    \ credentials   |         |         |\n      -------------------------------+---------+---------+\n\
    \       Cache unauthenticated         |Required | Allowed |\n       credential\
    \ for future refs    |         |         |\n      -------------------------------+---------+---------+\n\
    \   SSH requires proper warnings and options in applications to reject\n   unauthenticated\
    \ credentials, while BTNS accepts such credentials\n   automatically when they\
    \ match the corresponding policy entries.  Once\n   SSH accepts a credential for\
    \ the first time, that credential should\n   be cached and can be reused automatically\
    \ without further warnings.\n   BTNS credentials can be cached for future use,\
    \ but there is no\n   security advantage to doing so, as a new unauthenticated\
    \ credential\n   that is allowed by the policy entries will be automatically accepted.\n\
    \   In addition, BTNS does not require IPsec to reuse credentials in a\n   manner\
    \ similar to SSH.  When IPsec does reuse unauthenticated\n   credentials, there\
    \ may be implementation advantages to caching them.\n   SSH-style credential caching\
    \ for reuse with SAB could be addressed by\n   future extension(s) to BTNS; such\
    \ extension(s) would need to provide\n   warnings about unauthenticated credentials\
    \ and a mechanism for user\n   acceptance or rejection of them in order to establish\
    \ a level of\n   authentication assurance comparable to SSH's \"Leap of Faith\"\
    .  Such\n   extension(s) would also need to deal with issues caused by the\n \
    \  absence of identities in BTNS.  At best, a cached BTNS credential\n   reauthenticates\
    \ the network-layer source of traffic when the\n   credential is reused -- in\
    \ contrast, SSH credential reuse\n   reauthenticates an identity.\n   Network-layer\
    \ reauthentication for SAB is further complicated by:\n   o  the ability of NATs\
    \ to cause multiple independent network-layer\n      sources of traffic to appear\
    \ to be one source (potentially\n      requiring acceptance and caching of multiple\
    \ BTNS credentials),\n   o  the ability of multihoming to cause one network-layer\
    \ source of\n      traffic to appear to be multiple sources (potentially triggering\n\
    \      unexpected warnings and requiring re-acceptance of the same BTNS\n    \
    \  credential), and\n   o  interactions with both mobility and address ownership\
    \ changes\n      (potentially requiring controlled BTNS credential reassignment\n\
    \      and/or invalidation).\n   These issues are left to be addressed by possible\
    \ future work on the\n   addition of \"Leap of Faith\" functionality to BTNS.\n\
    \   In contrast, for CBB, credential caching and verification are usually\n  \
    \ done at the higher-layer protocols or applications.  Caching\n   credentials\
    \ for CBB at the BTNS level is not as important because the\n   channel binding\
    \ will bind whatever credentials are presented (new or\n   cached) to the higher-layer\
    \ protocol identity.\n"
- title: 5.8.  Connection Hijacking through Rekeying
  contents:
  - "5.8.  Connection Hijacking through Rekeying\n   Each IPsec SA has a limited lifetime\
    \ (defined as a time and/or byte\n   count) and must be rekeyed or terminated\
    \ when the lifetime expires.\n   Rekeying an SA provides a small window of opportunity\
    \ where an on-\n   path attacker can step in and hijack the new SA created by\
    \ rekeying\n   by spoofing the victim during rekeying.  BTNS, and particularly\
    \ SAB,\n   simplify this attack by removing the need for the attacker to\n   authenticate\
    \ as the victim or via the same non-BTNS PAD entry that\n   was used by the victim\
    \ for the original SA.  CBB, on the other hand,\n   can detect such attacks by\
    \ detecting the changes in the secure\n   channel properties.\n   This vulnerability\
    \ is caused by the lack of inter-session binding or\n   latching of IKE SAs with\
    \ the corresponding credentials of the two\n   peers.  Connection latching, together\
    \ with channel binding, enables\n   such binding but requires higher-layer protocols\
    \ or applications to\n   verify consistency of identities and authentication across\
    \ the two\n   SAs.\n"
- title: 5.9.  Configuration Errors
  contents:
  - "5.9.  Configuration Errors\n   BTNS does not address errors of configuration\
    \ that could result in\n   increased vulnerability; such vulnerability is already\
    \ possible using\n   \"bypass\" SPD entries.  SPD entries that allow BTNS must\
    \ be explicitly\n   flagged, and hence can be kept separate from SPD entries that\
    \ do not\n   allow BTNS, just as \"bypass\" SPD entries are separate from entries\n\
    \   that create SAs with more conventional, stronger security.\n"
- title: 6.  Related Efforts
  contents:
  - "6.  Related Efforts\n   There have been a number of related efforts in the IETF\
    \ and elsewhere\n   to reduce the configuration effort of deploying the Internet\
    \ security\n   suite.\n   The IETF PKI4IPsec effort focused on providing an automatic\n\
    \   infrastructure for the configuration of Internet security services,\n   e.g.,\
    \ to assist in deploying signed certificates and CA information\n   [9].  The\
    \ IETF KINK effort focused on adapting Kerberos [13] for IKE,\n   enabling IKE\
    \ to utilize the Kerberos key distribution infrastructure\n   rather than requiring\
    \ certificates or shared private keys [18].  KINK\n   takes advantage of an existing\
    \ architecture for automatic key\n   management in Kerberos.  Opportunistic Encryption\
    \ (OE) is a system\n   for automatic discovery of hosts willing to do a BTNS-like\n\
    \   encryption, with authentication being exchanged by leveraging\n   existing\
    \ use of the DNS [17].  BTNS differs from all three in that\n   BTNS is intended\
    \ to avoid the need for such infrastructure\n   altogether, rather than to automate\
    \ it.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   This document was inspired by discussions on the IETF\
    \ TCPM WG about\n   the spoofed RST attacks on BGP routers and various solutions,\
    \ as well\n   as discussions in the NFSv4 and IPS WGs about how to better integrate\n\
    \   with IPsec.  The concept of BTNS was the result of these discussions\n   as\
    \ well as discussions with USC/ISI's T. Faber, A. Falk, and B. Tung,\n   and discussions\
    \ on the IETF SAAG (Security Area open meeting) mailing\n   list and IPsec mailing\
    \ list.  The authors would like to thank the\n   members of those WGs and lists,\
    \ as well as the IETF BTNS BOFs and WG\n   and its associated ANONsec mailing\
    \ list\n   (http://www.postel.org/anonsec) for their feedback -- in particular,\n\
    \   Steve Kent, Sam Hartman, Nicolas Williams, and Pekka Savola.\n   This document\
    \ was prepared using 2-Word-v2.0.template.dot.\n"
- title: 8.  Informative References
  contents:
  - "8.  Informative References\n   [1]   Aboba, B., Blunk, L., Vollbrecht, J., Carlson,\
    \ J., and H.\n         Levkowetz, Ed., \"Extensible Authentication Protocol (EAP)\"\
    , RFC\n         3748, June 2004.\n   [2]   Aboba, B., Tseng, J., Walker, J., Rangan,\
    \ V., and F.\n         Travostino, \"Securing Block Storage Protocols over IP\"\
    , RFC\n         3723, April 2004.\n   [3]   CERT Vulnerability Note VU#415294,\
    \ \"The Border Gateway Protocol\n         relies on persistent TCP sessions without\
    \ specifying\n         authentication requirements\", 4/20/2004.\n   [4]   Dierks,\
    \ T. and E. Rescorla, \"The Transport Layer Security (TLS)\n         Protocol\
    \ Version 1.2\", RFC 5246, August 2008.\n   [5]   Harkins, D. and D. Carrel, \"\
    The Internet Key Exchange (IKE)\",\n         RFC 2409, November 1998.\n   [6]\
    \   Heffernan, A., \"Protection of BGP Sessions via the TCP MD5\n         Signature\
    \ Option\", RFC 2385, August 1998.\n   [7]   Kaufman, C., Ed., \"Internet Key\
    \ Exchange (IKEv2) Protocol\", RFC\n         4306, December 2005.\n   [8]   Kent,\
    \ S. and K. Seo, \"Security Architecture for the Internet\n         Protocol\"\
    , RFC 4301, December 2005.\n   [9]   Korver, B., \"The Internet IP Security PKI\
    \ Profile of\n         IKEv1/ISAKMP, IKEv2, and PKIX\", RFC 4945, August 2007.\n\
    \   [10]  Linn, J., \"Generic Security Service Application Program\n         Interface\
    \ Version 2, Update 1\", RFC 2743, January 2000.\n   [11]  Melnikov, A., Ed.,\
    \ and K. Zeilenga, Ed., \"Simple Authentication\n         and Security Layer (SASL)\"\
    , RFC 4422, June 2006.\n   [12]  Murphy, S., \"BGP Security Vulnerabilities Analysis\"\
    , RFC 4272,\n         January 2006.\n   [13]  Neuman, C., Yu, T., Hartman, S.,\
    \ and K. Raeburn, \"The Kerberos\n         Network Authentication Service (V5)\"\
    , RFC 4120, July 2005.\n   [14]  Moskowitz, R., Nikander, P., Jokela, P., Ed.,\
    \ and T. Henderson,\n         \"Host Identity Protocol\", RFC 5201, April 2008.\n\
    \   [15]  Ramaiah, A., R Stewart, M. Dalal, \"Improving TCP's Robustness\n   \
    \      to Blind In-Window Attacks\", Work in Progress, January 2008.\n   [16]\
    \  Recio, R., Metzler, B., Culley, P., Hilland, J., and D. Garcia,\n         \"\
    A Remote Direct Memory Access Protocol Specification\", RFC\n         5040, October\
    \ 2007.\n   [17]  Richardson, M. and D. Redelmeier, \"Opportunistic Encryption\n\
    \         using the Internet Key Exchange (IKE)\", RFC 4322, December\n      \
    \   2005.\n   [18]  Sakane, S., Kamada, K., Thomas, M., and J. Vilhuber,\n   \
    \      \"Kerberized Internet Negotiation of Keys (KINK)\", RFC 4430,\n       \
    \  March 2006.\n   [19]  Satran, J., Meth, K., Sapuntzakis, C., Chadalapaka, M.,\
    \ and E.\n         Zeidner, \"Internet Small Computer Systems Interface (iSCSI)\"\
    ,\n         RFC 3720, April 2004.\n   [20]  Shah, H., Pinkerton, J., Recio, R.,\
    \ and P. Culley, \"Direct Data\n         Placement over Reliable Transports\"\
    , RFC 5041, October 2007.\n   [21]  Shepler, S., Callaghan, B., Robinson, D.,\
    \ Thurlow, R., Beame,\n         C., Eisler, M., and D. Noveck, \"Network File\
    \ System (NFS)\n         version 4 Protocol\", RFC 3530, April 2003.\n   [22]\
    \  Stewart, R., Ed., \"Stream Control Transmission Protocol\", RFC\n         4960,\
    \ September 2007.\n   [23]  TCP SYN-cookies, http://cr.yp.to/syncookies.html\n\
    \   [24]  Touch, J., \"Defending TCP Against Spoofing Attacks\", RFC 4953,\n \
    \        July 2007.\n   [25]  Touch, J., A. Mankin, R. Bonica, \"The TCP Authentication\n\
    \         Option\", Work in Progress, November 2007.\n   [26]  Williams, N., \"\
    IPsec Channels: Connection Latching\", Work in\n         Progress, April 2008.\n\
    \   [27]  Williams, N., \"On the Use of Channel Bindings to Secure\n         Channels\"\
    , RFC 5056, November 2007.\n   [28]  Williams, N. and M. Richardson, \"Better-Than-Nothing\
    \ Security:\n         An Unauthenticated Mode of IPsec\", RFC 5386, November 2008.\n\
    \   [29]  Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH)\n         Protocol\
    \ Architecture\", RFC 4251, January 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Joe Touch\n   USC/ISI\n   4676 Admiralty Way\n   Marina\
    \ del Rey, CA 90292-6695\n   U.S.A.\n   Phone: +1 (310) 448-9151\n   EMail: touch@isi.edu\n\
    \   David L. Black\n   EMC Corporation\n   176 South Street\n   Hopkinton, MA\
    \ 01748\n   USA\n   Phone: +1 (508) 293-7953\n   EMail: black_david@emc.com\n\
    \   Yu-Shun Wang\n   Microsoft\n   One Microsoft Way\n   Redmond, WA 98052\n \
    \  U.S.A.\n   Phone: +1 (425) 722-6980\n   EMail: yu-shun.wang@microsoft.com\n"
