- title: __initial_text__
  contents:
  - '       Source Address Validation Improvement (SAVI) Threat Scope

    '
- title: Abstract
  contents:
  - "Abstract\n   The Source Address Validation Improvement (SAVI) effort aims to\n\
    \   complement ingress filtering with finer-grained, standardized IP\n   source\
    \ address validation.  This document describes threats enabled\n   by IP source\
    \ address spoofing both in the global and finer-grained\n   context, describes\
    \ currently available solutions and challenges, and\n   provides a starting point\
    \ analysis for finer-grained (host\n   granularity) anti-spoofing work.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6959.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Overview ........................................................3\n\
    \   2. Glossary of Terms ...............................................5\n  \
    \ 3. Spoof-Based Attack Vectors ......................................6\n    \
    \  3.1. Blind Attacks ..............................................6\n      \
    \     3.1.1. Single-Packet Attacks ...............................6\n        \
    \   3.1.2. Flood-Based DoS .....................................7\n          \
    \ 3.1.3. Poisoning Attacks ...................................8\n           3.1.4.\
    \ Spoof-Based Worm/Malware Propagation ................8\n           3.1.5. Reflective\
    \ Attacks ..................................8\n           3.1.6. Accounting Subversion\
    \ ...............................9\n           3.1.7. Other Blind Spoofing Attacks\
    \ ........................9\n      3.2. Non-blind Attacks ..........................................9\n\
    \           3.2.1. Man in the Middle (MITM) ............................9\n  \
    \         3.2.2. Third-Party Recon ..................................10\n    \
    \       3.2.3. Other Non-blind Spoofing Attacks ...................10\n   4. Current\
    \ Anti-spoofing Solutions ................................11\n      4.1. Topological\
    \ Locations for Enforcement .....................13\n           4.1.1. Host to\
    \ Link-Layer Neighbor via Switch .............13\n           4.1.2. Upstream Switches\
    \ ..................................13\n           4.1.3. Upstream Routers ...................................14\n\
    \           4.1.4. ISP Edge PE Router .................................14\n  \
    \         4.1.5. ISP NNI Router to ISP NNI Router ...................15\n    \
    \       4.1.6. Cable Modem Subscriber Access ......................15\n      \
    \     4.1.7. DSL Subscriber Access ..............................15\n      4.2.\
    \ Currently Available Tools .................................16\n           4.2.1.\
    \ BCP 38 .............................................16\n           4.2.2. Unicast\
    \ RPF ........................................16\n           4.2.3. Port-Based\
    \ Address Binding .........................16\n           4.2.4. Cryptographic\
    \ Techniques ...........................17\n           4.2.5. Residual Attacks\
    \ ...................................18\n   5. Topological Challenges Facing SAVI\
    \ .............................18\n      5.1. Address Provisioning Mechanisms\
    \ ...........................18\n      5.2. LAN Devices with Multiple Addresses\
    \ .......................18\n           5.2.1. Routers ............................................18\n\
    \           5.2.2. NATs ...............................................19\n  \
    \         5.2.3. Multi-instance Hosts ...............................19\n    \
    \       5.2.4. Multi-LAN Hosts ....................................20\n      \
    \     5.2.5. Firewalls ..........................................20\n        \
    \   5.2.6. Mobile IP ..........................................20\n          \
    \ 5.2.7. Other Topologies ...................................21\n      5.3. IPv6\
    \ Considerations .......................................21\n   6. Analysis of\
    \ Host Granularity Anti-spoofing .....................21\n   7. Security Considerations\
    \ ........................................22\n      7.1. Privacy Considerations\
    \ ....................................23\n   8. Acknowledgments ................................................24\n\
    \   9. References .....................................................24\n  \
    \    9.1. Normative References ......................................24\n    \
    \  9.2. Informative References ....................................24\n"
- title: 1.  Overview
  contents:
  - "1.  Overview\n   The Internet Protocol, specifically IPv4 [RFC0791] and IPv6\n\
    \   [RFC2460], employs a connectionless hop-by-hop packet forwarding\n   paradigm.\
    \  A host connected to an IP network that wishes to\n   communicate with another\
    \ host on the network generates an IP packet\n   with source and destination IP\
    \ addressing information, among other\n   options.\n   At the IP network layer,\
    \ or Internet layer, there is typically no\n   required transactional state when\
    \ communicating with other hosts on\n   the network.  In particular, the network\
    \ does not track any state\n   about the hosts using the network.  This is normally\
    \ a benefit.\n   However, as a consequence of this, hosts generating packets for\n\
    \   transmission have the opportunity to spoof (forge) the source address\n  \
    \ of packets that they transmit, as the network does not have any way\n   to tell\
    \ that some of the information is false.\n   Source address validation is necessary\
    \ in order to detect and reject\n   spoofed IP packets in the network, and contributes\
    \ to the overall\n   security of IP networks.  This document deals with the subset\
    \ of such\n   validation done by the network based on observed traffic and policy.\n\
    \   Such source address validation techniques enable detection and\n   rejection\
    \ of many spoofed packets, and also implicitly provide some\n   assurances that\
    \ the source address in an IP packet is legitimately\n   assigned to the system\
    \ that generated the packet.\n   Solutions such as those described in BCP 38 [RFC2827]\
    \ provide\n   guidelines for one such technique for network ingress filtering.\n\
    \   However, if these techniques are not implemented at the ingress point\n  \
    \ of the IP network, then the validity of the source address cannot be\n   positively\
    \ ascertained.  Furthermore, BCP 38 only implies source\n   address validation\
    \ at the Internet layer and is most often\n   implemented on IP subnetwork address\
    \ boundaries.  One of the\n   difficulties in encouraging the deployment of BCP\
    \ 38 is that there is\n   relatively little benefit until it is very widely deployed,\
    \ which is\n   not yet the case.\n   Hence, in order to try to get better behavior,\
    \ it is helpful to look\n   for an application like that described in BCP 38,\
    \ but one that can be\n   applied locally and give locally beneficial results.\
    \  The local\n   benefit would provide a reason for the site to deploy, while\
    \ moving\n   the Internet as a whole towards an environment where BCP 38 is widely\n\
    \   effected.  SAVI is aimed at providing more specific protection\n   locally,\
    \ with the benefit of better local behavior and, in\n   conjunction with appropriate\
    \ logging, better local traceability,\n   while also providing better compliance\
    \ with the cases dealt with by\n   BCP 38.\n   It should be noted that while BCP\
    \ 38 directs providers to provide\n   protection from spoofed prefixes, it is\
    \ clearly desirable for\n   enterprise operators to provide that protection more\
    \ locally, and\n   with better traceability.  This allows the enterprise to be\
    \ a better\n   Internet participant and to quickly detect and remedy problems\
    \ when\n   they occur.  For example, when an enterprise receives a report of an\n\
    \   attack originating within that enterprise, the operational staff\n   desires\
    \ to be able to track from the IP address sourcing the attack\n   to the particular\
    \ machine within the enterprise that is the source.\n   This is typically simpler\
    \ and more reliable than other techniques,\n   such as trying to find the attack\
    \ in ongoing outbound traffic.  To do\n   this, the enterprise needs usable address\
    \ assignment and usage\n   information (appropriate logging), as well as accurate\
    \ information\n   (SAVI), to determine that no other machine could have been using\
    \ that\n   address.\n   Also, there is a possibility that in a LAN environment\
    \ where multiple\n   hosts share a single LAN or IP port on a switch or router,\
    \ one of\n   those hosts may spoof the source addresses of other hosts within\
    \ the\n   local subnet.  Understanding these threats and the relevant\n   topologies\
    \ in which they're introduced is critical when assessing the\n   threats that\
    \ exist with source address spoofing.\n   This document provides additional details\
    \ regarding spoof-based\n   threat vectors and discusses implications of various\
    \ network\n   topologies.\n"
- title: 2.  Glossary of Terms
  contents:
  - "2.  Glossary of Terms\n   The following acronyms and terms are used throughout\
    \ this memo.\n   Binding Anchor:  The relationship used by a device performing\
    \ source\n      address enforcement to perform the validation and enforcement.\n\
    \      Examples in different situations include Layer 2 addresses or\n      physical\
    \ ports.\n   BGP:  The Border Gateway Protocol, used to manage routing policy\n\
    \      between large networks.\n   CPE Router:  Customer Premises Equipment router.\
    \  The router on the\n      customer premises, whether owned by the customer or\
    \ the provider.\n      Also called the Customer Edge, or CE, router.\n   IP Address:\
    \  An Internet Protocol address, whether IPv4 or IPv6.\n   ISP:  Internet Service\
    \ Provider.  Any person or company that delivers\n      Internet service to another.\n\
    \   MAC Address:  An Ethernet address or comparable IEEE 802 series\n      address.\n\
    \   NNI Router:  Network-to-Network Interface router.  This router\n      interface\
    \ faces a similar system operated by another ISP or other\n      large network.\n\
    \   PE Router:  Provider Edge router.  This router faces a customer of an\n  \
    \    ISP.\n   Spoofing:  The act of sending a datagram header whose contents at\
    \ the\n      link layer or network layer do not match the network policies and\n\
    \      activities on address assignment or claiming.  Generally, this\n      corresponds\
    \ to sending messages with source network or link-layer\n      information that\
    \ is assigned to or currently properly claimed by\n      some other devices in\
    \ the network.\n   TCP:  The Transmission Control Protocol, used on end systems\
    \ to\n      manage data exchange.\n   uRPF:  Unicast Reverse Path Forwarding.\
    \  A procedure in which the\n      route table, which is usually used to look\
    \ up destination\n      addresses and route towards them, is used to look up the\
    \ source\n      address and ensure that one is routing away from it.  When this\n\
    \      test fails, the event may be logged, and the traffic is commonly\n    \
    \  dropped.\n"
- title: 3.  Spoof-Based Attack Vectors
  contents:
  - "3.  Spoof-Based Attack Vectors\n   Spoofing is employed on the Internet for a\
    \ number of reasons, most of\n   which are in some manner associated with malicious\
    \ or otherwise\n   nefarious activities.  In general, two classes of spoof-based\
    \ attack\n   vectors exist: blind attacks and non-blind attacks.  The following\n\
    \   sections provide some information on blind and non-blind attacks;\n   these\
    \ sections also include information on attacks where the spoofing\n   is primarily\
    \ intended to interfere with tracing the attacks, as well\n   as attacks where\
    \ spoofing the source address is a necessary component\n   to the damage or interference.\n"
- title: 3.1.  Blind Attacks
  contents:
  - "3.1.  Blind Attacks\n   Blind attacks typically occur when an attacker isn't\
    \ on the same\n   local area network as a source or target, or when an attacker\
    \ has no\n   access to the data path between the attack source(s) and the target\n\
    \   systems.  In this situation, the attacker has no access to the source\n  \
    \ and target systems.\n"
- title: 3.1.1.  Single-Packet Attacks
  contents:
  - "3.1.1.  Single-Packet Attacks\n   One type of blind attacks, which we'll refer\
    \ to here as \"single-\n   packet DoS (Denial of Service) attacks\", involves\
    \ an attacking system\n   injecting spoofed information into the network, which\
    \ either results\n   in a complete crash of the target system, or in some manner\
    \ poisons\n   some network configuration or other information on a target system\
    \ so\n   as to impact network or other services.\n   An example of an attack that\
    \ can cause a receiving system to crash is\n   what is called a LAND (Local Area\
    \ Network Denial) attack.  A LAND\n   attack would consist of an attacking system\
    \ sending a packet (e.g.,\n   TCP SYN) to a target system that contains both a\
    \ source and\n   destination address of that target system.  The packet would\
    \ also\n   contain a single value for the port number, used as both the source\n\
    \   and destination port number.  Certain target systems will then \"lock\n  \
    \ up\" when creating connection state associated with the packet or\n   would\
    \ get stuck in a state where a target system continuously replies\n   to itself.\
    \  As this is an attack that relies on bugs in the target,\n   it is possible,\
    \ but by no means certain, that this threat is no\n   longer viable.\n   Another\
    \ form of blind attack is a RST (reset) probe ([RFC4953],\n   Section 2.3).  The\
    \ attacker sends a series of packets to a\n   destination that is engaged in a\
    \ long-lived TCP session.  The packets\n   are RST packets, and the attacker uses\
    \ the known source and\n   destination addresses and port numbers, along with\
    \ guesses at the\n   sequence number.  If he can send a packet close enough to\
    \ the right\n   value, in theory he can terminate the TCP connection.  While there\n\
    \   are various steps that have been developed to ameliorate this attack,\n  \
    \ preventing the spoofing of source addresses completely prevents the\n   attack\
    \ from occurring.\n"
- title: 3.1.2.  Flood-Based DoS
  contents:
  - "3.1.2.  Flood-Based DoS\n   Flood-based DoS attack vectors are particularly effective\
    \ attacks on\n   the Internet today.  They usually entail flooding a large number\
    \ of\n   packets towards a target system, with the hopes of either exhausting\n\
    \   connection state on the target system, consuming all packet\n   processing\
    \ capabilities of the target or intermediate systems, or\n   consuming a great\
    \ deal of bandwidth available to the target system\n   such that they are essentially\
    \ inaccessible.\n   Because these attacks require no reply from the target system\
    \ and\n   require no legitimate transaction state, attackers often attempt to\n\
    \   obfuscate the identity of the systems that are generating the attack\n   traffic\
    \ by spoofing the source IP address of the attacking traffic\n   flows.  Because\
    \ ingress filtering isn't applied ubiquitously on the\n   Internet today, spoof-based\
    \ flooding attack vectors are typically\n   very difficult to trace back.  In\
    \ particular, there may be one or\n   more attacking sources beyond a network's\
    \ border, and the attacking\n   sources may or may not be legitimate sources;\
    \ it's difficult to\n   determine if the sources are not directly connected to\
    \ the local\n   routing system.  These attacks might be seen as primarily needing\
    \ to\n   be addressed by BCP 38 deployment, which is not in scope for this\n \
    \  document.  However, as noted earlier, deployment of SAVI can help\n   remediate\
    \ lack of BCP 38 deployment, and even when BCP 38 is\n   deployed, SAVI can help\
    \ provide useful information for responding to\n   such attacks.\n   Common flood-based\
    \ DoS attack vectors today include SYN floods, ICMP\n   floods, and IP fragmentation\
    \ attacks.  Attackers may use a single\n   legitimate or spoofed fixed attacking\
    \ source address, although\n   frequently they cycle through large swaths of address\
    \ space.  As a\n   result, mitigating these attacks on the receiving end with\
    \ source-\n   based policies is extremely difficult.\n   If an attacker can inject\
    \ messages for a protocol that requires\n   control-plane activity, it may be\
    \ possible to deny network control\n   services at a much lower attack level.\
    \  While there are various forms\n   of protection deployed against this, they\
    \ are by no means complete.\n   Attacks that are harder to trace (such as with\
    \ spoofed addresses) are\n   of course of more concern.\n   Furthermore, the motivator\
    \ for spoof-based DoS attacks may actually\n   be to encourage the target to filter\
    \ explicitly on a given set of\n   source addresses, in order to disrupt access\
    \ to the target system by\n   legitimate owner(s).\n"
- title: 3.1.3.  Poisoning Attacks
  contents:
  - "3.1.3.  Poisoning Attacks\n   While poisoning attacks can often be done with\
    \ single packets, it is\n   also true that a stream of packets can be used to\
    \ find a window where\n   the target will accept the incorrect information.  In\
    \ general, this\n   can be used to perform broadly the same kinds of poisonings\
    \ as above,\n   with more versatility.\n   One important class of poisoning attacks\
    \ are attacks aimed at\n   poisoning network or DNS cache information, perhaps\
    \ to simply break a\n   given host's connection or to enable MITM (Man in the\
    \ Middle) or\n   other attacks.  Network-level attacks that could involve single-\n\
    \   packet DoS include Address Resolution Protocol (ARP) cache poisoning\n   and\
    \ ICMP redirects.  The most obvious example, which depends upon\n   falsifying\
    \ an IP source address, is an on-link attacker poisoning a\n   router's ARP or\
    \ Neighbor Discovery (ND) cache.  The ability to forge\n   a source address can\
    \ also be helpful in causing a DNS cache to accept\n   and use incorrect information.\n"
- title: 3.1.4.  Spoof-Based Worm/Malware Propagation
  contents:
  - "3.1.4.  Spoof-Based Worm/Malware Propagation\n   Self-propagating malware has\
    \ been observed that spoofs its source\n   address when attempting to propagate\
    \ to other systems.  Presumably,\n   this was done to obfuscate the actual source\
    \ address of the infected\n   system.  This attack is important both in terms\
    \ of an attack vector\n   that SAVI may help prevent and as a problem that SAVI\
    \ can help solve\n   by tracing back to find infected systems.\n"
- title: 3.1.5.  Reflective Attacks
  contents:
  - "3.1.5.  Reflective Attacks\n   Reflective amplification attacks -- wherein a\
    \ sender sends a single\n   packet to an intermediary, resulting in the intermediary\
    \ sending a\n   large number of packets, or much larger packets, to the target\
    \ -- are\n   a particularly potent DoS attack vector on the Internet today.  Many\n\
    \   of these attacks rely on using a false source address, so that the\n   amplifier\
    \ attacks the target by responding to the messages.\n   DNS is one of the common\
    \ targets of such attacks.  The amplification\n   factor observed for attacks\
    \ targeting DNS root and other top-level\n   domain name infrastructures in early\
    \ 2006 was on the order of 72:1\n   [VRSN-REPORT].  The result was that just 27\
    \ attacking sources with\n   512 kbps of upstream attack bandwidth could generate\
    \ 1 Gbps of\n   response attack traffic towards a target system.\n   Smurf attacks\
    \ employ a similar reflective amplification attack\n   vector, exploiting traditional\
    \ default IP-subnet-directed broadcast\n   address behaviors that would result\
    \ in all the active hosts on a\n   given subnet responding to a (spoofed) ICMP\
    \ echo request from an\n   attacker and generating a large amount of ICMP echo\
    \ response traffic\n   directed towards a target system.  These attacks have been\n\
    \   particularly effective in large campus LAN environments where 50K or\n   more\
    \ hosts might reside on a single subnet.\n"
- title: 3.1.6.  Accounting Subversion
  contents:
  - "3.1.6.  Accounting Subversion\n   If an attacker wishes to distribute content\
    \ or other material in a\n   manner that employs protocols that require only unidirectional\n\
    \   flooding and generate no end-to-end transactional state, they may\n   desire\
    \ to spoof the source IP address of that content in order to\n   avoid detection\
    \ or accounting functions enabled at the IP layer.\n   While this particular attack\
    \ has not been observed, it is included\n   here to reflect the range of power\
    \ that spoofed addresses may have,\n   even without the ability to receive responses.\n"
- title: 3.1.7.  Other Blind Spoofing Attacks
  contents:
  - "3.1.7.  Other Blind Spoofing Attacks\n   Other blind spoofing attacks might include\
    \ spoofing in order to\n   exploit source routing or other policy-based routing\
    \ implemented in a\n   network.  It may also be possible in some environments\
    \ to use\n   spoofing techniques to perform blind or non-blind attacks on the\n\
    \   routers in a site or in the Internet.  There are many techniques to\n   mitigate\
    \ these attacks, but it is well known that there are\n   vulnerabilities in this\
    \ area.\n"
- title: 3.2.  Non-blind Attacks
  contents:
  - "3.2.  Non-blind Attacks\n   Non-blind attacks often involve mechanisms such as\
    \ eavesdropping on\n   connections, resetting state so that new connections may\
    \ be hijacked,\n   and an array of other attack vectors.  Perhaps the most common\
    \ of\n   these attack vectors are known as man-in-the-middle attacks.  In this\n\
    \   case, we are concerned not with an attacker who can modify a stream,\n   but\
    \ rather with one who has access to information from the stream and\n   uses that\
    \ information to launch his own attacks.\n"
- title: 3.2.1.  Man in the Middle (MITM)
  contents:
  - "3.2.1.  Man in the Middle (MITM)\n   Connection hijacking is one of the more\
    \ common man-in-the-middle\n   attack vectors.  In order to hijack a connection,\
    \ an attacker usually\n   needs to be in the forwarding path and oftentimes employs\
    \ TCP RST or\n   other attacks in order to reset a transaction.  The attacker\
    \ may have\n   already compromised a system that's in the forwarding path, or\
    \ they\n   may wish to insert themselves in the forwarding path.\n   For example,\
    \ an attacker with access to a host on a LAN segment may\n   wish to redirect\
    \ all the traffic on the local segment destined for a\n   default gateway address\
    \ (or all addresses) to itself in order to\n   perform man-in-the-middle attacks.\
    \  In order to accomplish this in\n   IPv4, the attacker might transmit gratuitous\
    \ ARP [RFC0826] messages\n   or ARP replies to the Ethernet broadcast address\
    \ ff:ff:ff:ff:ff:ff,\n   notifying all the hosts on the segment that the IP address(es)\
    \ of the\n   target(s) now maps to its own Layer 2 address.  The source IP address\n\
    \   in this case is spoofed.  Similar vulnerabilities exist in the IPv6\n   ND\
    \ protocol [RFC4861], although the multicast requirements of the\n   IPv6 ND protocol\
    \ make this harder to perform with the same\n   generality.\n"
- title: 3.2.2.  Third-Party Recon
  contents:
  - "3.2.2.  Third-Party Recon\n   Another example of a non-blind attack is third-party\
    \ reconnaissance.\n   The use of spoofed addresses, while not necessary for this,\
    \ can often\n   provide additional information and helps mask the traceability\
    \ of the\n   activity.  The attack involves sending packets towards a given target\n\
    \   system and observing either target or intermediate system responses.\n   For\
    \ example, if an attacker were to source spoof TCP SYN packets\n   towards a target\
    \ system from a large set of source addresses and\n   observe responses from that\
    \ target system or some intermediate\n   firewall or other middlebox, they would\
    \ be able to identify what\n   IP-layer filtering policies may be in place to\
    \ protect that system.\n"
- title: 3.2.3.  Other Non-blind Spoofing Attacks
  contents:
  - "3.2.3.  Other Non-blind Spoofing Attacks\n   There are presumably many other\
    \ attacks that can be performed based\n   on the ability to spoof source addresses\
    \ while seeing the target.\n   Among other attacks, if there are multiple routers\
    \ on-link with\n   hosts, a host may be able to cause problems for the routing\
    \ system by\n   replaying modified or unmodified routing packets as if they came\
    \ from\n   another router.\n"
- title: 4.  Current Anti-spoofing Solutions
  contents:
  - "4.  Current Anti-spoofing Solutions\n   The goal of this work is to reduce datagrams\
    \ with spoofed IP\n   addresses from the Internet.  This can be aided by identifying\
    \ and\n   dropping datagrams whose source address binding is incompatible with\n\
    \   the Internet topology and learned information.  This can be done at\n   sites\
    \ where the relationship between the source address and topology\n   and binding\
    \ information can be checked.  For example, with these\n   bindings, in many networks\
    \ Internet devices can confirm that:\n   o  The IP source address is appropriate\
    \ for the lower-layer address\n      (they both identify the same system).\n \
    \  o  The IP source address is explicitly identified as appropriate for\n    \
    \  the physical topology; for example, the source address is\n      appropriate\
    \ for the Layer 2 switch port through which the datagram\n      was received.\n\
    \   o  The prefix to which the IP source address belongs is appropriate\n    \
    \  for the part of the network topology from which the IP datagram\n      was\
    \ received (while the individual system may be unknown, it is\n      reasonable\
    \ to believe that the system is located in that part of\n      the network).\n\
    \   In general, this involves two kinds of inspection.  The primary\n   action\
    \ is checking the source IP address in the IP header of IP\n   packets.  In order\
    \ to support such checking, the claimed or assigned\n   IP addresses in messages\
    \ concerned with such claims or assignments\n   (IP ARP Requests and Responses,\
    \ DHCP Replies, IPv6 ND Duplicate\n   Address Detection (DAD) messages, etc.)\
    \  must also be examined and,\n   where appropriate, verified.  SAVI is not concerned\
    \ with verifying IP\n   addresses in the contents of arbitrary higher-level protocol\n\
    \   messages.\n   Filtering points farther away from the source of the datagram\
    \ can\n   make decreasingly authoritative assertions about the validity of the\n\
    \   source address in the datagram.  Nonetheless, there is value in\n   dropping\
    \ traffic that is clearly inappropriate and in maintaining\n   knowledge of the\
    \ level of trust one can place in an address.\n             Edge Network 1   \
    \         CPE-ISP _.------------.\n           _.----------------.         Ingress/\
    \   ISP A       `--.\n      ,--''                   `---.      ,'            \
    \           `.\n    ,'  +----+  +------+  +------+ `.   /  +------+       +------+\
    \  \\\\\n   (    |Host+--+Switch+--+ CPE  +---)-(---+  PE  +- - - -+ NNI  |  \
    \ )\n    `.  +----+  +------+  |Router| ,'   \\\\ |Router|       |Router|  /\n\
    \      `---. Host-neighbor +------+'      `.+------+       +--+---+,'\n      \
    \     `----------------''             '--.              |_.-'\n              \
    \                                 `------------'|\n                          \
    \                                   |\n             Edge Network 2           \
    \       ISP-ISP Ingress |\n           _.----------------.                  _.----------.|\n\
    \      ,--''                   `---.         ,-''             |--.\n    ,'  +----+\
    \  +------+  +------+ `.     ,+------+       +--+---+.\n   (    |Host+--+Switch+--+\
    \ CPE  +---)---+-+  PE  +- - - -+ NNI  | \\\\\n    `.  +----+  +------+  |Router|\
    \ ,'   (  |Router|       |Router|  )\n      `---.               +------+'    \
    \  \\\\+------+       +------+ /\n           `----------------''            `.\
    \                     ,'\n                                            '--.   ISP\
    \ B     _.-'\n                                                `----------''\n\
    \            Figure 1: Points Where an Address Can Be Validated\n   Figure 1 illustrates\
    \ five related paths where a source address can be\n   validated:\n   o  Host\
    \ to switch, including host to host via the switch\n   o  Host to enterprise CPE\
    \ router\n   o  Enterprise CPE router to ISP edge PE router, and the reverse\n\
    \   o  ISP NNI router to ISP NNI router\n   In general, datagrams with spoofed\
    \ IP addresses can be detected and\n   discarded by devices that have an authoritative\
    \ mapping between IP\n   addresses and the network topology.  For example, a device\
    \ that has\n   an authoritative table between link-layer and IP addresses on a\
    \ link\n   can discard any datagrams in which the IP address is not associated\n\
    \   with the link-layer address in the datagram.  The degree of\n   confidence\
    \ in the source address depends on where the spoofing\n   detection is performed,\
    \ as well as the prefix aggregation in place\n   between the spoofing detection\
    \ and the source of the datagram.\n"
- title: 4.1.  Topological Locations for Enforcement
  contents:
  - "4.1.  Topological Locations for Enforcement\n   There are a number of kinds of\
    \ places, which one might call\n   topological locations, where solutions may\
    \ or should be deployed.  As\n   can be seen in the details below, as the point\
    \ of enforcement moves\n   away from a single cable attached directly to the host\
    \ being\n   validated, additional complications arise.  It is likely that fully\n\
    \   addressing many of these cases may require additional coordination\n   mechanisms\
    \ across the device that covers the disparate paths.\n"
- title: 4.1.1.  Host to Link-Layer Neighbor via Switch
  contents:
  - "4.1.1.  Host to Link-Layer Neighbor via Switch\n   The first point at which a\
    \ datagram with a spoofed address can be\n   detected is on the link to which\
    \ the source of the datagram is\n   connected.  At this point in the network,\
    \ the source link-layer and\n   IP addresses are both available and can be validated\
    \ against each\n   other, and potentially against the physical port being used.\
    \  A\n   datagram in which the IP source address does not match the\n   corresponding\
    \ link-layer address can be discarded.  Of course, the\n   trust in the filtering\
    \ depends on the trust in the method through\n   which the mappings are developed.\
    \  This mechanism can be applied by a\n   first-hop router, or switch on the link.\
    \  The first-hop switch has\n   the most precise information for this.\n   On\
    \ a truly shared medium link, such as classic Ethernet, the best\n   that can\
    \ be done is to validate the link-layer and IP addresses\n   against the mappings.\
    \  When the link is not shared, such as when the\n   hosts are connected through\
    \ a switch, the source host can be\n   identified precisely based on the port\
    \ through which the datagram is\n   received or the Layer 2 address if it is known\
    \ to the switch.  Port\n   identification prevents transmission of malicious datagrams\
    \ whose\n   link-layer and IP addresses are both spoofed to mimic another host.\n\
    \   Other kinds of links may fall at different places in this spectrum,\n   with\
    \ some wireless links having easier ways of identifying individual\n   devices\
    \ than others, for example.\n"
- title: 4.1.2.  Upstream Switches
  contents:
  - "4.1.2.  Upstream Switches\n   In many topologies, there can be additional switches\
    \ between the\n   host-attached switch and the first router in the network.  In\
    \ these\n   cases, additional issues can arise that affect SAVI operations.  If\n\
    \   the bridging topologies that connect the switches change, or if the\n   Link\
    \ Aggregation Control Protocol (LACP) [IEEE802.1AX], the Virtual\n   Router Redundancy\
    \ Protocol (VRRP), or link management operations\n   change the links that are\
    \ used to deliver traffic, the switch may\n   need to move the SAVI state to a\
    \ different port, or the state may\n   need to be moved or reestablished on a\
    \ different switch.\n"
- title: 4.1.3.  Upstream Routers
  contents:
  - "4.1.3.  Upstream Routers\n   Beyond the first-hop router, subsequent routers\
    \ may additionally\n   filter traffic from downstream networks.  Because these\
    \ routers do\n   not have access to the link-layer address of the device from\
    \ which\n   the datagram was sent, they are limited to confirming that the source\n\
    \   IP address is within a prefix that is appropriate for a downstream\n   router\
    \ from which the datagram was received.\n   Options include the use of simple\
    \ access lists or the use of Unicast\n   Reverse Path Forwarding (uRPF).  Access\
    \ lists are generally\n   appropriate only for the simplest cases, as management\
    \ can be\n   difficult.  Strict uRPF accepts the source address on a datagram\
    \ if\n   and only if it comes from a direction that would be rational to send\n\
    \   a datagram directed to the address, which means that the filter is\n   derived\
    \ from routing information.  These filtering procedures are\n   discussed in more\
    \ detail in [RFC3704].\n   In many cases, this router has access to information\
    \ about what IP\n   prefixes are to be used on a given subnet.  This might be\
    \ because it\n   delegated that prefix through DHCP or monitored such a delegation.\n\
    \   It may have advertised that prefix in IPv6 Neighbor Discovery Router\n   Advertisement\
    \ messages, or monitored such an advertisement.  These\n   can be seen as generalizations\
    \ of the access lists above.  When the\n   topology permits, the router can enforce\
    \ that these prefixes are used\n   by the hosts.\n"
- title: 4.1.4.  ISP Edge PE Router
  contents:
  - "4.1.4.  ISP Edge PE Router\n   An obvious special case of the discussion is with\
    \ an ISP PE router,\n   where it provides its customer with access.  BCP 38 specifically\n\
    \   encourages ISPs to use ingress filtering to limit the incidence of\n   spoofed\
    \ addresses in the network.\n   The question that the ISP must answer for itself\
    \ is the degree to\n   which it trusts its downstream network.  A contract might\
    \ be written\n   between an ISP and its customer requiring that the customer apply\
    \ the\n   procedures of network ingress filtering to the customer's own\n   network,\
    \ although there's no way upstream networks would be able to\n   validate this.\n\
    \   Conversely, if the provider has assigned a single IP address to the\n   customer\
    \ (for example, with IPv4 NAT in the CPE), PE enforcement of\n   BCP 38 can be\
    \ on the full address, simplifying many issues.\n"
- title: 4.1.5.  ISP NNI Router to ISP NNI Router
  contents:
  - "4.1.5.  ISP NNI Router to ISP NNI Router\n   The considerations explicitly related\
    \ to customer networks can also\n   be applied to neighboring ISPs.  An interconnection\
    \ agreement might\n   be written between two companies requiring that network\
    \ ingress\n   filtering policy be implemented on all customer connections.  ISPs\n\
    \   might, for example, mark datagrams from neighboring ISPs that do not\n   sign\
    \ such a contract or demonstrably do not behave in accordance with\n   it as 'untrusted'.\
    \  Alternatively, the ISP might place untrusted\n   prefixes into a separate BGP\
    \ community [RFC4271] and use that to\n   advertise the level of trust to its\
    \ BGP peers.\n   In this case, uRPF is less effective as a validation tool, due\
    \ to\n   asymmetric routing.  However, when it can be shown that spoofed\n   addresses\
    \ are present, the procedure can be applied.\n   Part of the complication here\
    \ is that in the abstract, it is very\n   difficult to know what addresses should\
    \ appear in packets sent from\n   one ISP to another.  Hence, packet-level filtering\
    \ and enforcement\n   are very difficult at this point in the network.  Whether\
    \ one views\n   this as specific to the NNI, or a general property of the Internet,\n\
    \   it is still a major factor that needs to be taken into account.\n"
- title: 4.1.6.  Cable Modem Subscriber Access
  contents:
  - "4.1.6.  Cable Modem Subscriber Access\n   Cable Modem Termination Systems (CMTS)\
    \ employ Data Over Cable Service\n   Interface Specification (DOCSIS) Media Access\
    \ Control (MAC) domains.\n   These share some properties with general switched\
    \ networks, as\n   described above in Section 4.1.1, and some properties with\
    \ DSL access\n   networks, as described below in Section 4.1.7.  They also often\
    \ have\n   their own provisioning and monitoring tools that may address some of\n\
    \   the issues described here.\n"
- title: 4.1.7.  DSL Subscriber Access
  contents:
  - "4.1.7.  DSL Subscriber Access\n   While DSL subscriber access can be bridged\
    \ or routed, as seen by the\n   service provider's device, it is generally the\
    \ case that the\n   protocols carry enough information to validate which subscriber\
    \ is\n   sending packets.  Thus, for ensuring that one DSL subscriber does not\n\
    \   spoof another, enforcement can generally be done at the aggregation\n   router.\
    \  This is true even when there is a bridged infrastructure\n   among the subscribers,\
    \ as DSL access generally requires all\n   subscriber traffic to go through the\
    \ access aggregation router.\n   If it is desirable to provide spoofing protection\
    \ among the devices\n   within a residence, that would need to be provided by\
    \ the CPE device,\n   as the ISP's router does not have enough visibility to do\
    \ that.  It\n   is not clear at this time that this problem is seen as a relevant\n\
    \   threat.\n"
- title: 4.2.  Currently Available Tools
  contents:
  - "4.2.  Currently Available Tools\n   There are a number of tools that have been\
    \ developed, and have seen\n   some deployment, for addressing these attacks.\n"
- title: 4.2.1.  BCP 38
  contents:
  - "4.2.1.  BCP 38\n   If BCP 38 [RFC2827] is implemented in LAN segments, it is\
    \ typically\n   done so on subnetwork boundaries and traditionally relates only\
    \ to\n   network-layer ingress filtering policies.  The result is that hosts\n\
    \   within the segment cannot spoof packets from address space outside of\n  \
    \ the local segment itself; however, they may still spoof packets using\n   sources'\
    \ addresses that exist within the local network segment.\n"
- title: 4.2.2.  Unicast RPF
  contents:
  - "4.2.2.  Unicast RPF\n   Unicast RPF is a crude mechanism to automate definition\
    \ of BCP 38\n   style filters based on routing table information.  Its applicability\n\
    \   parallels that of BCP 38, although deployment caveats exist, as\n   outlined\
    \ in [RFC3704].\n"
- title: 4.2.3.  Port-Based Address Binding
  contents:
  - "4.2.3.  Port-Based Address Binding\n   Much of the work of SAVI is initially\
    \ targeted at minimizing source\n   address spoofing in the LAN.  In particular,\
    \ if mechanisms can be\n   defined to accommodate configuration of port binding\
    \ information for\n   IP, either to a port, to an unchangeable or authenticated\
    \ MAC\n   address, or to other credentials in the packet such that an impostor\n\
    \   cannot create the needed values, a large portion of the spoofing\n   threat\
    \ space in the LAN can be marginalized.\n   However, establishing this binding\
    \ is not trivial and varies across\n   both topology types and address allocation\
    \ mechanisms.\n"
- title: 4.2.3.1.  Manual Binding
  contents:
  - "4.2.3.1.  Manual Binding\n   Binding of a single link-layer and network-layer\
    \ address to a port\n   may initially seem trivial.  However, two primary areas\
    \ exist that\n   can complicate such techniques.  In particular, these areas involve\n\
    \   topologies where more than a single IP-layer address may be\n   associated\
    \ with a MAC address on a given port, or where multiple\n   hosts are connected\
    \ via a single physical port.  Furthermore, if one\n   or more dynamic address\
    \ allocation mechanisms such as DHCP are\n   employed, then some mechanism must\
    \ exist to associate those IP-layer\n   addresses with the appropriate link-layer\
    \ ports as addresses are\n   allocated or reclaimed.\n"
- title: 4.2.3.2.  Automated Binding
  contents:
  - "4.2.3.2.  Automated Binding\n   For IPv4, the primary and very widely used automated\
    \ address\n   assignment technique is DHCP-based address assignment.  This can\
    \ be\n   coupled with filtering policies that control which hosts can\n   originate\
    \ DHCP replies.  Under such circumstances, SAVI switches can\n   treat DHCP replies\
    \ as authoritative sources of IP address binding\n   information.  By eavesdropping\
    \ on the DHCP exchanges, the SAVI switch\n   can create the bindings needed for\
    \ address usage enforcement.\n   For IPv6, there are two common automated address\
    \ assignment\n   techniques.  While there are many variations and details, for\n\
    \   purposes of understanding the threats and basic responses, these are\n   Stateless\
    \ Address Autoconfiguration (SLAAC) and DHCP-based IPv6\n   address assignment.\
    \  For DHCP-based IPv6 address assignment, the\n   techniques above are applicable\
    \ and suitable.\n   When SLAAC is used for IPv6 address assignment, the switches\
    \ can\n   observe the duplicate address detection messages and use those to\n\
    \   create the enforcement bindings.  This enables the switches to ensure\n  \
    \ that only properly claimed IP addresses are used for data traffic.\n   It does\
    \ not enforce that these addresses are assigned to the hosts,\n   since SLAAC\
    \ does not have a notion of address assignment.\n"
- title: 4.2.3.3.  IEEE 802.1x
  contents:
  - "4.2.3.3.  IEEE 802.1x\n   IEEE 802.1x is an authentication protocol that permits\
    \ a network to\n   determine the identity of a user seeking to join it and apply\n\
    \   authorization rules to permit or deny the action.  In and of\n   themselves,\
    \ such tools confirm only that the user is authorized to\n   use the network,\
    \ but they do not enforce what IP address the user is\n   allowed to use.  It\
    \ is worth noting that elements of 802.1x may well\n   be useful as binding anchors\
    \ for SAVI solutions.\n"
- title: 4.2.4.  Cryptographic Techniques
  contents:
  - "4.2.4.  Cryptographic Techniques\n   MITM and replay attacks can typically be\
    \ mitigated with cryptographic\n   techniques.  However, many of the applications\
    \ today either don't or\n   can't employ cryptographic authentication and protection\
    \ mechanisms.\n   ARP for IPv4 does not use such protection.  While Secure Neighbor\n\
    \   Discovery (SEND) provides such protection for the IPv6 ND protocol,\n   SEND\
    \ is not widely used to date.  Usage of such techniques is outside\n   the scope\
    \ of this document.\n   While DNSSEC will significantly help protect DNS from\
    \ the effects of\n   spoof-based poisoning attacks, such protection does not help\
    \ protect\n   the rest of the network from spoofed attacks.\n"
- title: 4.2.5.  Residual Attacks
  contents:
  - "4.2.5.  Residual Attacks\n   It should be understood that not all combinations\
    \ of network,\n   service, and enforcement choices will result in a protectable\n\
    \   network.  For example, if one uses conventional SLAAC in a switched\n   network,\
    \ but tries to only provide address enforcement on the routers\n   on the network,\
    \ then the ability to provide protection is severely\n   limited.\n"
- title: 5.  Topological Challenges Facing SAVI
  contents:
  - "5.  Topological Challenges Facing SAVI\n   As noted previously, topological components\
    \ and address allocation\n   mechanisms have significant implications on what\
    \ is feasible with\n   regard to link-layer address and IP address port bindings.\
    \  The\n   following sections discuss some of the various topologies and address\n\
    \   allocation mechanisms that proposed SAVI solutions should attempt to\n   address.\n"
- title: 5.1.  Address Provisioning Mechanisms
  contents:
  - "5.1.  Address Provisioning Mechanisms\n   In a strictly static environment, configuration\
    \ management for access\n   filters that map link-layer and network-layer addresses\
    \ on a specific\n   switch port might be a viable option.  However, most networks,\n\
    \   certainly those that accommodate actual human users, are much more\n   dynamic\
    \ in nature.  As such, mechanisms that provide port-MAC-IP\n   bindings need to\
    \ accommodate dynamic address allocation schemes\n   enabled by protocols such\
    \ as DHCP, DHCPv6 for address allocation, and\n   IPv6 Stateless Address Autoconfiguration.\n"
- title: 5.2.  LAN Devices with Multiple Addresses
  contents:
  - "5.2.  LAN Devices with Multiple Addresses\n   From the perspective of network\
    \ topology, consider hosts connected to\n   switch ports that may have one or\
    \ more IP addresses, and devices that\n   forward packets from other network segments.\
    \  It is much harder to\n   enforce port-MAC-IP bindings on traffic from such\
    \ hosts and devices\n   than for traffic from more simply connected devices.\n"
- title: 5.2.1.  Routers
  contents:
  - "5.2.1.  Routers\n   Routers are the most obvious examples of devices for which\
    \ it is\n   problematic to implement port-MAC-IP bindings.  Routers not only\n\
    \   originate packets themselves and often have multiple interfaces, but\n   also\
    \ forward packets from other network segments.  As a result, it's\n   difficult\
    \ for port-MAC-IP binding rules to be established a priori,\n   because it's likely\
    \ that many addresses and IP subnets should be\n   associated with the port-MAC\
    \ in question.\n"
- title: 5.2.2.  NATs
  contents:
  - "5.2.2.  NATs\n   Validating traffic from prefix-based and multi-address NATs\
    \ is also\n   problematic, for the same reasons as for routers.  Because they\
    \ may\n   forward traffic from an array of addresses, validation requires\n  \
    \ advance knowledge of the IPs that should be associated with a given\n   port-MAC\
    \ pair.\n"
- title: 5.2.3.  Multi-instance Hosts
  contents:
  - "5.2.3.  Multi-instance Hosts\n   Another example that introduces complexities\
    \ is that of multi-\n   instance hosts attached to a switch port.  These are single\
    \ physical\n   devices that internally run multiple physical or logical hosts.\
    \  When\n   the device is a blade server, e.g., with internal blades each hosting\n\
    \   a physical machine, there is essentially a physical switch inside the\n  \
    \ blade server.  While feasible, this creates some complexity for\n   determining\
    \ where enforcement logic can or should live.\n   Logically distinct hosts, such\
    \ as are provided by many varieties of\n   virtualization logic, result in a single\
    \ physical host and connect to\n   a single port on the Ethernet switch in the\
    \ topology, actually having\n   multiple internal virtual machines.  Each virtual\
    \ machine may have\n   its own IP and MAC addresses.  These are connected by what\
    \ is\n   essentially (or sometimes literally) an internal LAN switch.  While\n\
    \   this internal switch may be a SAVI enforcement point to help control\n   threats\
    \ among the virtual hosts, or between virtual hosts and other\n   parts of the\
    \ network, such enforcement cannot be counted on in all\n   implementations. \
    \ If the virtual machines are interconnected by the\n   internal switch, then\
    \ that logical device is the first switch for the\n   purposes of this analysis.\n\
    \   A further complication with multi-instance hosts is that in many\n   environments,\
    \ these hosts may move while retaining their IP\n   addresses.  This can be an\
    \ actual relocation of the running software,\n   or a backup instance taking over\
    \ the functions of the software.  In\n   both cases, the IP address will appear\
    \ at a new topological location.\n   Depending upon the protocols used, it may\
    \ have the same MAC address\n   or a different one, and the system may or may\
    \ not issue a gratuitous\n   ARP request after relocation.  When such a move is\
    \ done without\n   changing the MAC address, the SAVI switches will need to update\
    \ their\n   state.  While ARP may be helpful, traffic detection, switch-based\n\
    \   neighbor solicitation, interaction with an orchestration system, or\n   other\
    \ means may be used.\n"
- title: 5.2.4.  Multi-LAN Hosts
  contents:
  - "5.2.4.  Multi-LAN Hosts\n   Multi-interface hosts, in particular those that are\
    \ multihomed and\n   may forward packets from any of a number of source addresses,\
    \ can be\n   problematic as well.  In particular, if a port-MAC-IP binding is\
    \ made\n   on each of the interfaces, and then either a loopback IP or the\n \
    \  address of a third interface is used as the source address of a\n   packet\
    \ forwarded through an interface for which the port-MAC-IP\n   binding doesn't\
    \ map, the traffic may be discarded.  Static\n   configuration of port-MAC-IP\
    \ bindings may accommodate this scenario,\n   although some a priori knowledge\
    \ of address assignment and topology\n   is required.\n   While it is rare to\
    \ use loopback addressing or to send packets out of\n   one interface with the\
    \ source address of another, these rarities do\n   legitimately occur.  Some servers,\
    \ particularly ones that have\n   underlying virtualization, use loopback techniques\
    \ for management.\n"
- title: 5.2.5.  Firewalls
  contents:
  - "5.2.5.  Firewalls\n   Firewalls that forward packets from other network segments,\
    \ or serve\n   as a source for locally originated packets, suffer from the same\n\
    \   issues as routers.\n"
- title: 5.2.6.  Mobile IP
  contents:
  - "5.2.6.  Mobile IP\n   Mobile IP hosts in both IPv4 and IPv6 are proper members\
    \ of the site\n   where they are currently located.  Their care-of address is\
    \ a\n   properly assigned address that is on the link they are using, and\n  \
    \ their packets are sent and received using that address.  Thus, they\n   do not\
    \ introduce any additional complications.  (There was at one\n   time consideration\
    \ of allowing mobile hosts to use their home address\n   when away from home.\
    \  This was not done, precisely to ensure that\n   mobile hosts comply with source\
    \ address validity requirements.)\n   Mobile hosts with multiple physical interfaces\
    \ fall into the cases\n   above.\n   Mobile IP Home Agents (HAs) are somewhat\
    \ more interesting.  Although\n   they are (typically) fixed devices, they are\
    \ required to send and\n   receive packets addressed from or to any currently\
    \ properly\n   registered mobile node.  From an analysis point of view, even though\n\
    \   the packets that an HA handles are actually addressed to or from the\n   link\
    \ the HA is on, it is probably best to think of them as routers,\n   with a virtual\
    \ interface to the actual hosts they are serving.  Thus,\n   if the Mobile IP\
    \ HA is trusted, it can itself perform IP source\n   address checking on the packets\
    \ it forwards on behalf of mobile\n   nodes.  This would utilize bindings established\
    \ by the Mobile IP\n   registration mechanisms.\n"
- title: 5.2.7.  Other Topologies
  contents:
  - "5.2.7.  Other Topologies\n   Any topology that results in the possibility that\
    \ a device connected\n   to a switch port may forward packets with more than a\
    \ single source\n   address for a packet that it originated may be problematic.\n\
    \   Additionally, address allocation schemas introduce additional\n   considerations\
    \ when examining a given SAVI solutions space.\n"
- title: 5.3.  IPv6 Considerations
  contents:
  - "5.3.  IPv6 Considerations\n   IPv6 introduces additional capabilities that indirectly\
    \ complicate\n   the spoofing analysis.  IPv6 introduces and recommends the use\
    \ of\n   SLAAC [RFC4862].  This allows hosts to determine their IP prefix,\n \
    \  select an Interface Identifier (IID), and then start communicating.\n   While\
    \ there are many advantages to this, the absence of control\n   interactions complicates\
    \ the process of behavioral enforcement.\n   An additional complication is the\
    \ very large IID space.  Again, this\n   64-bit IID space provided by IPv6 has\
    \ many advantages.  It provides\n   the opportunity for many useful behaviors.\
    \  However, it also means\n   that in the absence of controls, hosts can mint\
    \ anonymous addresses\n   as often as they like, modulo the idiosyncrasies of\
    \ the duplicate\n   address procedure.  Like many behaviors, this is a feature\
    \ for some\n   purposes and a problem for others.  For example, without claiming\
    \ the\n   entire IID space, an on-link attacker may be able to generate enough\n\
    \   IP addresses to fill the Neighbor Discovery table space of the other\n   Layer\
    \ 3 (L3) devices on the link, including switches that are\n   monitoring L3 behavior.\
    \  This could seriously interfere with the\n   ability of other devices on the\
    \ link to function.\n"
- title: 6.  Analysis of Host Granularity Anti-spoofing
  contents:
  - "6.  Analysis of Host Granularity Anti-spoofing\n   Applying anti-spoofing techniques\
    \ at the host level enables a site to\n   achieve several valuable objectives.\
    \  While it is likely the case\n   that for many site topologies and policies\
    \ full source spoofing\n   protection is not possible, it is also true that for\
    \ many sites there\n   are steps that can be taken that provide benefit.\n   One\
    \ important class of benefit is masquerade prevention.  Security\n   threats involving\
    \ one machine masquerading as another, for example,\n   in order to hijack an\
    \ apparently secure session, can occur within a\n   site with significant impact.\
    \  Having mechanisms such that host-\n   facing devices prevent this is a significant\
    \ intra-site security\n   improvement.  Given that security experts report that\
    \ most security\n   breaches are internal, this can be valuable.  One example\
    \ of this is\n   that such techniques should mitigate internal attacks on the\
    \ site\n   routing system.\n   A second class of benefit is related to the traceability\
    \ described\n   above.  When a security incident is detected, either within a\
    \ site or\n   externally (and traced to the site), it can be critical to determine\n\
    \   the actual source of the incident.  If address usage can be tied to\n   the\
    \ kinds of anchors described earlier, this can help in responding\n   to security\
    \ incidents.\n   In addition to these local observable benefits, there can be\
    \ more\n   global benefits.  For example, if address usage is tied to anchors,\n\
    \   it may be possible to prevent or control the use of large numbers of\n   anonymous\
    \ IPv6 addresses for attacks, or at least to trace even those\n   attacks back\
    \ to their source.\n   As described below in the security considerations, these\
    \ operational\n   behaviors need to be evaluated in the context of the reduction\
    \ in\n   user privacy implied if one logs traffic bindings.  In particular, in\n\
    \   addition to the architectural trade-offs, the network administrator\n   must\
    \ plan for the proper handling of this relevant privacy\n   information about\
    \ his users.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document provides limited discussion of\
    \ some security threats\n   that source address validation improvements will help\
    \ to mitigate.\n   It is not meant to be all-inclusive, either from a threat analysis\n\
    \   perspective or from the source address validation application side.\n   It\
    \ is seductive to think of SAVI solutions as providing the ability\n   to use\
    \ this technology to trace a datagram to the person, or at least\n   end system,\
    \ that originated it.  For several reasons, the technology\n   can be used to\
    \ derive circumstantial evidence, but does not actually\n   solve that problem.\n\
    \   In the Internet layer, the source address of a datagram should be the\n  \
    \ address of the system that originated it and to which any reply is\n   expected\
    \ to come.  But systems fall into several broad categories.\n   Many are single-user\
    \ systems, such as laptops and PDAs.  Multi-user\n   systems are commonly used\
    \ in industry, and a wide variety of\n   middleware systems and application servers\
    \ have no users at all, but\n   by design relay messages or perform services on\
    \ behalf of users of\n   other systems (e.g., SMTP and peer-to-peer file sharing).\n\
    \   Even if every Internet-connected network implements source address\n   validation\
    \ at the ultimate network ingress, and assurances exist that\n   intermediate\
    \ devices are to never modify datagram source addresses,\n   source addresses\
    \ cannot be used as an authentication mechanism.  The\n   only techniques for\
    \ unquestionably validating source addresses of\n   a received datagram are cryptographic\
    \ authentication mechanisms\n   such as IPsec.\n   It must be presumed that there\
    \ will be some failure modes in any SAVI\n   deployment, given the history of\
    \ technical security mechanisms.  A\n   possible attack to be considered by network\
    \ administrators is an\n   inside attack probing the network for modes of spoofing\
    \ that can be\n   accomplished.  If the probes are conducted at a level below\
    \ alarm\n   thresholds, this might allow an internal attacker to safely determine\n\
    \   what spoof modes he can use.  Thus, the use of these techniques must\n   be\
    \ managed in such a way as to avoid giving a false sense of security\n   to the\
    \ network administrator.\n"
- title: 7.1.  Privacy Considerations
  contents:
  - "7.1.  Privacy Considerations\n   It should be understood that enforcing and recording\
    \ IP address\n   bindings have privacy implications.  In some circumstances, this\n\
    \   binding data may be considered to be personally identifying\n   information.\
    \  In general, collecting private information about users\n   brings ethical and\
    \ legal responsibilities to the network\n   administrator.\n   For this reason,\
    \ collection and retention of logged binding\n   information need to be considered\
    \ carefully.  Prevention of spoofing\n   does not in itself require such retention.\
    \  Analysis of immediate\n   events may rely on having logs of current bindings.\
    \  Thus, privacy\n   issues can be ameliorated by removing binding logs after\
    \ the binding\n   lifetimes expire.  Logs of apparent spoof attempts are a separate\n\
    \   matter and may require longer retention to detect patterns of\n   deliberate\
    \ or accidental abuse.\n   With operations of the type described here, the network\
    \ administrator\n   is collecting information about where on his network the user\
    \ is\n   active.  In addition, the recorded bindings supplement address usage\n\
    \   information about users that is available from DHCP logs.  For\n   example,\
    \ if IPv6 SLAAC is being used, and IP to Layer 2 address\n   bindings are being\
    \ logged, the administrator will have access to\n   information associating users\
    \ with their IP addresses even if IPv6\n   privacy addresses are used.\n   In\
    \ addition to this, care must be taken in attributing actions to\n   users on\
    \ the basis of this sort of information.  Whatever the\n   theoretical strength\
    \ of the tools, administrators should always allow\n   for such information being\
    \ wrong and should be careful about any\n   actions taken on the basis of apparent\
    \ attribution.  These techniques\n   do nothing about address spoofing from other\
    \ sites, so any evaluation\n   of attribution also needs to allow for such cases.\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   A portion of the primer text in this document came directly\
    \ from\n   [SAVA], authored by Fred Baker and Ralph Droms.  Many thanks to\n \
    \  Christian Vogt, Suresh Bhogavilli, and Pekka Savola for contributing\n   text\
    \ and a careful review of this document.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC0791]  Postel, J., \"Internet Protocol\",\
    \ STD 5, RFC 791,\n              September 1981.\n   [RFC2460]  Deering, S. and\
    \ R. Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\"\
    , RFC 2460, December 1998.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [IEEE802.1AX]\n              IEEE, \"IEEE Standard\
    \ for Local and metropolitan area\n              networks - Link Aggregation\"\
    , IEEE 802.1AX, 2008.\n   [RFC0826]  Plummer, D., \"Ethernet Address Resolution\
    \ Protocol: Or\n              converting network protocol addresses to 48.bit\
    \ Ethernet\n              address for transmission on Ethernet hardware\", STD\
    \ 37,\n              RFC 826, November 1982.\n   [RFC2827]  Ferguson, P. and D.\
    \ Senie, \"Network Ingress Filtering:\n              Defeating Denial of Service\
    \ Attacks which employ IP Source\n              Address Spoofing\", BCP 38, RFC\
    \ 2827, May 2000.\n   [RFC3704]  Baker, F. and P. Savola, \"Ingress Filtering\
    \ for Multihomed\n              Networks\", BCP 84, RFC 3704, March 2004.\n  \
    \ [RFC4271]  Rekhter, Y., Li, T., and S. Hares, \"A Border Gateway\n         \
    \     Protocol 4 (BGP-4)\", RFC 4271, January 2006.\n   [RFC4861]  Narten, T.,\
    \ Nordmark, E., Simpson, W., and H. Soliman,\n              \"Neighbor Discovery\
    \ for IP version 6 (IPv6)\", RFC 4861,\n              September 2007.\n   [RFC4862]\
    \  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n              Address\
    \ Autoconfiguration\", RFC 4862, September 2007.\n   [RFC4953]  Touch, J., \"\
    Defending TCP Against Spoofing Attacks\",\n              RFC 4953, July 2007.\n\
    \   [SAVA]     Baker, F. and R. Droms, \"IPv4/IPv6 Source Address\n          \
    \    Verification\", Work in Progress, June 2007.\n   [VRSN-REPORT]\n        \
    \      Silva, K., Scalzo, F., and P. Barber, \"Anatomy of Recent\n           \
    \   DNS Reflector Attacks from the Victim and Reflector Point\n              of\
    \ View\", VeriSign White Paper, April 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Danny McPherson\n   VeriSign, Inc.\n   EMail: dmcpherson@verisign.com\n\
    \   Fred Baker\n   Cisco Systems\n   EMail: fred@cisco.com\n   Joel M. Halpern\n\
    \   Ericsson\n   EMail: joel.halpern@ericsson.com\n"
