1.  Introduction A management system contains:
several (potentially many) nodes, each with a processing entity, termed an agent, which has access to management instrumentation; at least one management station; and, a management protocol, used to convey management information between the agents and management stations.
Operations of the protocol are carried out under an administrative framework which defines authentication, authorization, access control, and privacy policies.
Management stations execute management applications which monitor and control managed elements.
Managed elements are devices such as hosts, routers, terminal servers, etc., which are monitored and controlled via access to their management information.
Management information is viewed as a collection of managed objects, residing in a virtual information store, termed the Management Information Base (MIB).
Collections of related objects are defined in MIB modules.
These modules are written using a subset of OSI's Abstract Syntax Notation One (ASN.1) [1], termed the Structure of Management Information (SMI)
This document is the MIB module which defines managed objects for managing implementations of the Transmission Control Protocol (TCP) [3].
The managed objects in this MIB module were originally defined using the SNMPv1 framework as a part of MIB II [4].
This document defines the same objects for TCP using the SNMPv2 framework.
Definitions TCP MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE, Integer32, Gauge32,
SMI MODULE COMPLIANCE, OBJECT GROUP    FROM SNMPv2 CONF;
West Tasman Drive San Jose, CA  95134
1 408 526 5260 Email:
kzm@cisco.com" DESCRIPTION "The MIB module for managing TCP implementations.
The initial revision of this MIB module was part of MIB  II."
"The algorithm used to determine the timeout value used for retransmitting unacknowledged octets."
"The minimum value permitted by a TCP implementation for the retransmission timeout, measured in milliseconds.
More refined semantics for objects of this type depend upon the algorithm used to determine the retransmission timeout.
In particular, when the timeout algorithm is rsre(3), an object of this type has the semantics of the LBOUND quantity described in RFC 793."
"The maximum value permitted by a TCP implementation for the retransmission timeout, measured in milliseconds.
More refined semantics for objects of this type depend upon the algorithm used to determine the retransmission timeout.
In particular, when the timeout algorithm is rsre(3), an object of this type has the semantics of the UBOUND quantity described in RFC 793."
"The limit on the total number of TCP connections the entity can support.
In entities where the maximum number of connections is dynamic, this object should contain the value  1."
"The number of times TCP connections have made a direct transition to the SYN SENT state from the CLOSED state."
"The number of times TCP connections have made a direct transition to the SYN RCVD state from the LISTEN state."
"The number of times TCP connections have made a direct transition to the CLOSED state from either the SYN SENT state or the SYN RCVD state, plus
the number of times TCP connections have made a direct transition to the LISTEN state from the SYN RCVD state."
"The number of times TCP connections have made a direct transition to the CLOSED state from either the ESTABLISHED state or the CLOSE WAIT state."
"The total number of segments received, including those received in error.
This count includes segments received on currently established connections."
"The total number of segments retransmitted that is, the number of TCP segments transmitted containing one or more previously transmitted octets."
SEQUENCE OF TcpConnEntry MAX ACCESS
A table containing TCP connection specific information."
current DESCRIPTION "A conceptual row of the tcpConnTable containing information about a particular current TCP connection.
Each row of this table is transient, in that it ceases to exist when (or soon after)
the connection makes the transition to the CLOSED state.
INTEGER { closed(1), listen(2), synSent(3), synReceived(4), established(5)
, finWait1(6), finWait2(7), closeWait(8), lastAck(9), closing(10), timeWait(11), deleteTCB(12) }
MAX ACCESS  read write STATUS
"The state of this TCP connection.
The only value which may be set by a management station is deleteTCB(12).
Accordingly, it is appropriate for an agent to return a `badValue' response if a management station attempts to set this object to any other value.
If a management station sets this object to the value deleteTCB(12), then this has the effect of deleting the TCB (as defined in RFC 793) of the corresponding connection on the managed node, resulting in immediate termination of the connection.
As an implementation specific option, a RST segment may be sent from the managed node to the other TCP endpoint (note however that RST segments are not sent reliably)."
The local IP address for this TCP connection.
In the case of a connection in the listen state which is willing to accept connections for any IP interface associated with the node, the value 0.0.0.0 is used."
"The local port number for this TCP connection."
The remote IP address for this TCP connection."
The remote port number for this TCP connection."
"The number of TCP segments sent containing the RST flag."
MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for SNMPv2 entities which implement TCP."
{ tcpRtoAlgorithm, tcpRtoMin, tcpRtoMax, tcpMaxConn, tcpActiveOpens, tcpPassiveOpens, tcpAttemptFails, tcpEstabResets, tcpCurrEstab, tcpInSegs, tcpOutSegs, tcpRetransSegs, tcpConnState, tcpConnLocalAddress, tcpConnLocalPort, tcpConnRemAddress, tcpConnRemPort, tcpInErrs, tcpOutRsts } STATUS    current DESCRIPTION "
The tcp group of objects providing for management of TCP entities."
Security Considerations Security issues are not discussed in this memo.
Editor's Address Keith McCloghrie Cisco Systems, Inc. 170 West Tasman Drive San Jose, CA  95134
1 408 526 5260 EMail:
