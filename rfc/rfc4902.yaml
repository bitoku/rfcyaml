- title: __initial_text__
  contents:
  - "                   Integrity, Privacy, and Security\n            in Open Pluggable\
    \ Edge Services (OPES) for SMTP\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   The Open Pluggable Edge Services (OPES) framework is application\n\
    \   agnostic.  Application-specific adaptations extend that framework.\n   Previous\
    \ work has focused on HTTP and work for SMTP is in progress.\n   These protocols\
    \ differ fundamentally in the way data flows, and it\n   turns out that existing\
    \ OPES requirements and IAB considerations for\n   OPES need to be reviewed with\
    \ regards to how well they fit for SMTP\n   adaptation.  This document analyzes\
    \ aspects about the integrity of\n   SMTP and mail message adaptation by OPES\
    \ systems and about privacy\n   and security issues when the OPES framework is\
    \ adapted to SMTP.  It\n   also lists requirements that must be considered when\
    \ creating the\n   \"SMTP adaptation with OPES\" document.\n   The intent of this\
    \ document is to capture this information before the\n   current OPES working\
    \ group shuts down.  This is to provide input for\n   subsequent working groups\
    \ or individual contributors that may pick up\n   the OPES/SMTP work at a later\
    \ date.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Differences between Unidirectional and\n           Bidirectional Application\
    \ Protocols ........................3\n      1.2. Non-Standardized SMTP Adaptations\
    \ at SMTP Gateways .........3\n      1.3. Non-OPES Issues of SMTP ....................................4\n\
    \      1.4. Opportunities of OPES/SMTP to Address Some Issues ..........4\n  \
    \    1.5. Limitations of OPES in Regards to Fixing SMTP Issues .......4\n   2.\
    \ Terminology .....................................................5\n   3. Integrity,\
    \ Privacy, and Security Considerations .................5\n      3.1. Tracing\
    \ Information in OPES/SMTP ...........................5\n      3.2. Bypass in\
    \ OPES/SMTP ........................................6\n      3.3. Compatibility\
    \ with Cryptographic Protection Mechanisms .....7\n   4. Protocol Requirements\
    \ for OPES/SMTP .............................8\n   5. IAB Considerations for OPES/SMTP\
    \ ................................9\n      5.1. IAB Consideration (2.1) One-Party\
    \ Consent ..................9\n      5.2. IAB Consideration (2.2) IP-Layer Communications\
    \ ............9\n      5.3. IAB Consideration (3.1) Notification .......................9\n\
    \      5.4. IAB Consideration (3.2) Notification ......................10\n  \
    \    5.5. IAB Consideration (3.3) Non-Blocking ......................10\n    \
    \  5.6. IAB Consideration Application Layer Addresses (4.x) .......10\n      5.7.\
    \ IAB Consideration (5.1) Privacy ...........................10\n      5.8. IAB\
    \ Consideration Encryption ..............................11\n   6. Security Considerations\
    \ ........................................11\n   7. References .....................................................11\n\
    \      7.1. Normative References ......................................11\n  \
    \    7.2. Informative References ....................................11\n   Appendix\
    \ A. Acknowledgements ......................................13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Because OPES is a protocol that is built over application\
    \ layer\n   transports, its security may depend on the specifics of the\n   transport.\
    \  OPES designs are guided by the IAB considerations for\n   OPES document [2],\
    \ and those considerations are revisited here in the\n   context of the SMTP protocol.\n\
    \   Section 3 of the OPES SMTP use cases document [6] maps some email and\n  \
    \ SMTP elements to OPES names that are used in this document.\n"
- title: 1.1.  Differences between Unidirectional and Bidirectional Application
  contents:
  - "1.1.  Differences between Unidirectional and Bidirectional Application\n    \
    \  Protocols\n   The IAB listed considerations for Open Pluggable Edge Services\
    \ (OPES)\n   in [2] and OPES treatment of those considerations has been discussed\n\
    \   in [3].  Both documents make use of HTTP as an example for the\n   underlying\
    \ protocol in OPES flows, and focus on web protocols that\n   have requests and\
    \ responses in the classic form (client sends a\n   request to a server that replies\
    \ with a response of the same protocol\n   within a single protocol transaction).\n\
    \   RFC 3914 [3] already indicates that other protocols may not fit in\n   this\
    \ context, for example in Section 5.3, \"Moreover, some application\n   protocols\
    \ may not have explicit responses...\".\n   When using SMTP there are still client\
    \ and server applications, and\n   requests and responses handled within SMTP,\
    \ but email messages are\n   sent by the data provider to the recipients (data\
    \ consumers) without\n   a previous request.  At that abstraction layer, email\
    \ delivery via\n   SMTP is a unidirectional process and different from the previously\n\
    \   handled web protocols such as HTTP.  For example, bypass has been\n   defined\
    \ for OPES, so far, by the data consumer requesting an OPES\n   bypass by adding\
    \ information to the application protocol request; the\n   OPES system can then\
    \ react on the bypass request in both the\n   application request and response.\
    \  For SMTP, the data consumer (email\n   recipient) cannot request in-band that\
    \ the OPES bypass handling of\n   his/her messages.\n   The IAB considerations\
    \ need to be revisited and special requirements\n   may be needed for OPES handling\
    \ of SMTP.\n"
- title: 1.2.  Non-Standardized SMTP Adaptations at SMTP Gateways
  contents:
  - "1.2.  Non-Standardized SMTP Adaptations at SMTP Gateways\n   A large number of\
    \ email filters are deployed at SMTP gateways today.\n   In fact, all use cases\
    \ listed in \"OPES SMTP Use Cases\" [6] are\n   already deployed, often in non-standardized\
    \ ways.  This opens a\n   number of integrity, privacy, and security concerns\
    \ that are not\n   addressed, and SMTP itself does not provide effective measures\
    \ to\n   detect and defend against compromised implementations.\n   OPES will\
    \ most likely not be able to solve these issues completely,\n   but at least should\
    \ be able to improve the situation to some extent.\n"
- title: 1.3.  Non-OPES Issues of SMTP
  contents:
  - "1.3.  Non-OPES Issues of SMTP\n   The SMTP specifications [4] require that NDRs\
    \ (Non-Delivery Reports)\n   be sent to the originator of an undeliverable mail\
    \ that has been\n   accepted by an SMTP server.  But it has become common practice\
    \ for\n   some sorts of mail (spam, worms) to be silently dropped without\n  \
    \ sending an NDR, a violation of the MUST statement of SMTP (see\n   Section 3.7\
    \ of [4]).  While the user of a web protocol notices if a\n   resource cannot\
    \ be fetched, neither the email sender nor email\n   recipient may notice that\
    \ an email was not delivered.  These kind of\n   issues already exist and are\
    \ not introduced by OPES.\n"
- title: 1.4.  Opportunities of OPES/SMTP to Address Some Issues
  contents:
  - "1.4.  Opportunities of OPES/SMTP to Address Some Issues\n   Adding SMTP adaptations\
    \ with OPES allows us to define a standardized\n   way for SMTP gateway filtering,\
    \ to offload filtering services to\n   callout servers and address a number of\
    \ the integrity, privacy, and\n   security issues.  OPES offers methods to add\
    \ OPES tracing information\n   and to request a bypass of filtering, and by that\
    \ can make email\n   gateway filtering a more reliable and standardized function.\
    \  But\n   OPES won't make email delivery via SMTP a reliable communication.\n"
- title: 1.5.  Limitations of OPES in Regards to Fixing SMTP Issues
  contents:
  - "1.5.  Limitations of OPES in Regards to Fixing SMTP Issues\n   The biggest concerns\
    \ when adding OPES services to a network flow are\n   that compromised, misconfigured,\
    \ or faulty OPES systems may change\n   messages in a way that the consumer can\
    \ no longer read them or that\n   messages are no longer delivered at all.\n \
    \  Defining a standard way to mark mails that have been handled by OPES\n   systems\
    \ is fairly simple and does not require new techniques by SMTP\n   gateways; they\
    \ already today MUST leave tracing information by adding\n   \"Received\" headers\
    \ to mails.  Therefore, recipients receiving broken\n   mail have a fair chance\
    \ of finding the compromised OPES system by\n   using the trace information. \
    \ There is still no guarantee, as the\n   email may have been broken in a way\
    \ that makes even the tracing\n   information unreadable.  But the chance will\
    \ be even better than with\n   other protocols such as HTTP, because most email\
    \ clients allow the\n   user to display mail headers, while many browsers have\
    \ no mechanism\n   to show the HTTP headers that might include tracing info.\n\
    \   Email that cannot be delivered, because a compromised OPES system\n   prevented\
    \ the delivery of legitimate mail, MUST result in a an NDR to\n   be sent to the\
    \ originator of the mail according to the SMTP\n   specifications [4].  OPES should\
    \ not be forced to fix the issue that\n   NDRs are not reliable over SMTP.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [1].\
    \  When used with\n   the normative meanings, these keywords will be all uppercase.\n\
    \   Occurrences of these words in lowercase comprise normal prose usage,\n   with\
    \ no normative implications.\n"
- title: 3.  Integrity, Privacy, and Security Considerations
  contents:
  - '3.  Integrity, Privacy, and Security Considerations

    '
- title: 3.1.  Tracing Information in OPES/SMTP
  contents:
  - "3.1.  Tracing Information in OPES/SMTP\n   Tracing OPES operations is an important\
    \ requirement for OPES systems.\n   Tracing information added to email should\
    \ follow a similar syntax and\n   structure to that defined for OPES/HTTP in HTTP\
    \ Adaptation with Open\n   Pluggable Edge Services [5], and with the same guidelines\
    \ as the SMTP\n   specifications [4] defined for the \"Received\" headers.  (We\
    \ do not\n   specify here whether \"Received\" headers would be used to carry\
    \ the\n   OPES information, or new trace headers should be defined, such as\n\
    \   OPES-System and OPES-Via.)\n   OPES/SMTP specifications defining tracing requirements\
    \ MUST be\n   compliant with the general OPES tracing requirements defined in\
    \ OPES\n   Entities & End Points Communication [12], but MAY further restrict\n\
    \   those.  For example, they might require the following: that the OPES\n   processor\
    \ must add tracing information for the OPES system before\n   calling the first\
    \ callout server; that it has to augment the tracing\n   information with additional\
    \ data if necessary after the message\n   returns from each service it is calling;\
    \ and that it must ensure that\n   the tracing information has not been deleted\
    \ by an OPES service\n   before it forwards the SMTP message.\n   Trace information\
    \ can then be seen by mail recipients when the mail\n   message reaches the recipient.\n\
    \   Mail that cannot be delivered or that is blocked by the OPES service\n   will\
    \ either be rejected or cannot be delivered after it has been\n   accepted by\
    \ an SMTP server.  In the latter case, SMTP specifications\n   [4] require that\
    \ an NDR MUST be sent to the originator; OPES further\n   requires that an NDR\
    \ generated due to OPES processing MUST also\n   contain information about the\
    \ OPES system so that the sender gets\n   informed.  If an email is rejected at\
    \ the SMTP protocol level due to\n   OPES processing, an OPES system MUST also\
    \ include trace data in the\n   SMTP response so that the originator can find\
    \ out why and where the\n   mail was rejected.\n"
- title: 3.2.  Bypass in OPES/SMTP
  contents:
  - "3.2.  Bypass in OPES/SMTP\n   If a mail message was rejected or could not be\
    \ delivered (and an NDR\n   was sent), the originator of the message may want\
    \ to bypass the OPES\n   system that blocked the message.\n   If the recipient\
    \ of a message receives a mail with OPES trace\n   information, he may want to\
    \ receive a non-OPES version of the\n   message.  Although there is no direct\
    \ in-band request from the\n   recipient back to the OPES system, the recipient\
    \ can contact the\n   sender and ask her to send the message again and to add\
    \ a bypass\n   request for the OPES system.  Not all OPES systems will be allowed\
    \ to\n   fulfill a bypass request according to their policy.  For example,\n \
    \  malware scanners should not be bypassed.  But other OPES services are\n   good\
    \ candidates for bypass requests, such as language translation of\n   the email\
    \ message.  Translation could be bypassed after the recipient\n   has noticed\
    \ that the translated result does not meet his/her\n   expectations and that the\
    \ original message would be preferred.\n   An OPES system MAY also define out-of-band\
    \ methods to request a\n   bypass, for example, a web interface or an email message\
    \ sent to the\n   server that results in the creation of a white list entry for\
    \ the\n   sender/recipient pair.  Examples for these out-of-band methods are\n\
    \   email systems that keep a copy of the original email in a quarantine\n   queue\
    \ and only send the recipient a block notification, plus either a\n   direct link\
    \ or a digest notification, with the ability to retrieve\n   the original message\
    \ from quarantine.  These out-of-band methods are\n   typically offered by spam\
    \ filters today.\n   OPES MUST implement methods to request a bypass, but there\
    \ cannot be\n   a guarantee that the bypass request will be approved.  The security\n\
    \   needs of the receiver or the receiver's network may demand that\n   certain\
    \ filters must not be bypassed (such as virus scanners).  In\n   general, the\
    \ receiver should be able to configure a client centric\n   OPES system, i.e.\
    \ the receiver should be able to indicate if he/she\n   wants to receive a non-OPES\
    \ version if it is available.\n   Bypass requests could be added to the mail message\
    \ or within the SMTP\n   dialog.  Bypass request data added to the mail message\
    \ cannot bypass\n   OPES services that operate on other SMTP dialog commands,\
    \ which are\n   sent before the mail message has been received (such as RCPT\n\
    \   commands).\n   Bypass request data sent using an ESMTP extension as part of\
    \ the SMTP\n   dialog may not reach the OPES system if intermediate SMTP relays\
    \ do\n   not support those bypass request commands and don't forward that\n  \
    \ information.\n"
- title: 3.3.  Compatibility with Cryptographic Protection Mechanisms
  contents:
  - "3.3.  Compatibility with Cryptographic Protection Mechanisms\n   Cryptography\
    \ can be used to assure message privacy, to authenticate\n   the originator of\
    \ messages, and to detect message modification.\n   There are standard methods\
    \ for achieving some or all these\n   protections for generic messages ([9], [10],\
    \ [11]), and these can be\n   used to protect SMTP data without changing the SMTP\
    \ protocol.\n   The content of encrypted mail messages cannot be inspected by\
    \ OPES\n   systems because only the intended recipient has the information\n \
    \  necessary for decryption.  The IAB and others have suggested that\n   users\
    \ might want to share that information with OPES systems, thus\n   permitting\
    \ decryption by intermediates.  For most cryptographic\n   systems that are compatible\
    \ with email, this would require end users\n   to share their most valuable keys,\
    \ in essence their \"identities\",\n   with OPES machines.  Some key management\
    \ systems, particularly those\n   which have centralized administrative control\
    \ of keys, might have\n   trust models in which such sharing would be sensible\
    \ and secure.\n   After decrypting the message, an OPES box that modified the\
    \ content\n   would be faced with the task of re-encrypting it in order to maintain\n\
    \   some semblance of \"end-to-end\" privacy.\n   If OPES/SMTP had a way to interact\
    \ with end users on a per-message\n   basis, it might be possible to communicate\
    \ cryptographic key\n   information from individual messages to end users, have\
    \ them compute\n   the message encrypting key for particular message, and to send\
    \ that\n   back to the OPES box.  This would perhaps ameliorate the need to\n\
    \   share a user's \"master\" message decrypting key with the OPES box.\n   This\
    \ kind of communication has not been defined for OPES.\n   Message protection\
    \ systems generally include some message integrity\n   mechanisms by which a recipient\
    \ can check for a message modification\n   that may have occurred after the sender\
    \ released the message.  This\n   protection can be applied to encrypted or plaintext\
    \ messages and can\n   be accomplished through either symmetric or asymmetric\
    \ cryptography.\n   In the case of symmetric cryptography, the key sharing problem\
    \ is\n   exactly similar to the encryption case discussed previously.  If the\n\
    \   OPES box modified the content, then the message integrity (or\n   authentication)\
    \ code would have to be recalculated and included with\n   the modified message.\n\
    \   For asymmetric cryptography the situation is more complicated.  The\n   message\
    \ integrity is tied to the sender's public key, and although\n   anyone who can\
    \ get the sender's public key can also check for a\n   message modification, no\
    \ one but the sender can compute the sender's\n   signature on a modified message.\
    \  Thus, an OPES system could not\n   modify messages and have them appear to\
    \ come from the purported\n   sender.  The notion of sharing the sender's signing\
    \ key with the OPES\n   system is unpalatable because few trust models would be\
    \ compatible\n   with sharing digital identities across organization boundaries.\n\
    \   However, if the OPES system doing the modification were under the\n   control\
    \ of the sender's local administration, the sharing might be\n   sensible (as\
    \ discussed for decryption, above).\n   OPES/SMTP systems could present modified\
    \ content showing the modified\n   regions in a form that permits the authentication\
    \ of the original\n   message and authentication of the OPES modifications (assuming\
    \ the\n   OPES box had a digital signature identity and key).  One method for\n\
    \   doing this is outlined in [13], but to our knowledge this method is\n   not\
    \ in any standard.\n   There are security risks associated with sharing cryptographic\
    \ keys\n   that must be addressed by implementers.  Because this is not a simple\n\
    \   task, it is not a requirement for OPES/SMTP.\n"
- title: 4.  Protocol Requirements for OPES/SMTP
  contents:
  - "4.  Protocol Requirements for OPES/SMTP\n   In addition to other documents listing\
    \ requirements for OPES, the\n   discussion in this document implies specific\
    \ requirements for\n   designing and implementing SMTP adaptations with OPES:\n\
    \   o  OPES Systems MUST add tracing headers to mail messages\n   o  If an email\
    \ message that has been accepted by an OPES system\n      cannot be delivered,\
    \ the non-delivery report MUST include trace\n      information of the OPES system.\n\
    \   o  The OPES/SMTP specifications MUST define a bypass request option\n    \
    \  that can be included in mail messages.\n   o  The OPES/SMTP specifications\
    \ MUST define a bypass request option\n      as an extension for SMTP dialogs.\n"
- title: 5.  IAB Considerations for OPES/SMTP
  contents:
  - "5.  IAB Considerations for OPES/SMTP\n   This section lists the IAB considerations\
    \ for OPES [2] and summarizes\n   how OPES/SMTP addresses them.\n"
- title: 5.1.  IAB Consideration (2.1) One-Party Consent
  contents:
  - "5.1.  IAB Consideration (2.1) One-Party Consent\n   The IAB recommends that all\
    \ OPES services be explicitly authorized by\n   one of the application-layer end-hosts\
    \ (that is, either the data\n   consumer application or the data provider application).\
    \  For OPES/\n   SMTP, this means consent of either the email message sender or\
    \ the\n   recipient.\n   The application agnostic architecture of OPES [7] requires\
    \ that \"OPES\n   processors MUST be consented to by either the data consumer\
    \ or data\n   provider application\" (OPES processor is the email gateway for\
    \ OPES/\n   SMTP).  This cannot prevent the consent-less introduction of OPES\n\
    \   processors by noncompliant OPES entities.\n"
- title: 5.2.  IAB Consideration (2.2) IP-Layer Communications
  contents:
  - "5.2.  IAB Consideration (2.2) IP-Layer Communications\n   The IAB recommends\
    \ that OPES processors must be explicitly addressed\n   at the IP layer by the\
    \ end user (data consumer application).\n   This requirement has been addressed\
    \ by the architecture requirements\n   in Section 2.1 of [7] and has been further\
    \ clarified in Section 2.2\n   of [3].\n"
- title: 5.3.  IAB Consideration (3.1) Notification
  contents:
  - "5.3.  IAB Consideration (3.1) Notification\n   \"The overall OPES framework needs\
    \ to assist content providers in\n   detecting and responding to client-centric\
    \ actions by OPES\n   intermediaries that are deemed inappropriate by the content\
    \ provider\"\n   [2].\n   For OPES/SMTP this translates into assistance for the\
    \ email message\n   sender to detect and respond to recipient-centric actions\
    \ that are\n   deemed inappropriate by the sender.\n   This has been addressed\
    \ in Section 3.1 and by the second tracing\n   requirements in Section 4.  As\
    \ discussed in Section 1.3, OPES/SMTP\n   cannot fix cases where NDRs are not\
    \ sent or get blocked before\n   reaching the sender of the original message.\n"
- title: 5.4.  IAB Consideration (3.2) Notification
  contents:
  - "5.4.  IAB Consideration (3.2) Notification\n   \"The overall OPES framework should\
    \ assist end users in detecting the\n   behavior of OPES intermediaries, potentially\
    \ allowing them to\n   identify imperfect or compromised intermediaries\" [2].\n\
    \   This is addressed in Section 3.1 and by the first tracing requirement\n  \
    \ in Section 4.  It must be noted that some email systems do not make\n   the\
    \ email headers available to the end user, although the headers\n   belong to\
    \ the payload that is transferred via SMTP.  Building an OPES\n   architecture\
    \ with those email systems should be avoided or requires\n   that the tracing\
    \ information be made available to the end users in a\n   different way.\n"
- title: 5.5.  IAB Consideration (3.3) Non-Blocking
  contents:
  - "5.5.  IAB Consideration (3.3) Non-Blocking\n   \"If there exists a \"non-OPES\"\
    \ version of content available from the\n   content provider, the OPES architecture\
    \ must not prevent users from\n   retrieving this \"non-OPES\" version from the\
    \ content provider\" [2].\n   For OPES/SMTP, this has been discussed in Section\
    \ 3.2 and is\n   addressed by the two bypass requirements of Section 4.\n"
- title: 5.6.  IAB Consideration Application Layer Addresses (4.x)
  contents:
  - "5.6.  IAB Consideration Application Layer Addresses (4.x)\n   While \"most application\
    \ layer addressing revolves around URIs\"\n   (section 8 of [2]), SMTP uses email\
    \ addresses, for which the\n   considerations only apply to some degree.\n   The\
    \ SMTP use cases document [6] includes a use case for Mail\n   Rerouting and Address\
    \ Rewriting.  Alias and email list address\n   resolution are standard functions\
    \ of an email gateway described in\n   [4].\n   Translating the reference validity\
    \ consideration regarding inter- and\n   intra-document reference validity to\
    \ SMTP, OPES services mapping\n   internal to external email addresses MUST ensure\
    \ the proper mapping\n   of addresses in all affected email headers.\n"
- title: 5.7.  IAB Consideration (5.1) Privacy
  contents:
  - "5.7.  IAB Consideration (5.1) Privacy\n   This consideration recommends that\
    \ the overall OPES framework must\n   provide for mechanisms for end users to\
    \ determine the privacy\n   policies that were used by OPES intermediaries.\n\
    \   The application agnostic part for OPES has been discussed in Section\n   10\
    \ of [3].  Email-specific trace information that will be added to\n   OPES/SMTP\
    \ according to the requirements in Section 4 may raise\n   additional privacy\
    \ issues that MUST be added to the privacy policy\n   description of the OPES\
    \ system.\n"
- title: 5.8.  IAB Consideration Encryption
  contents:
  - "5.8.  IAB Consideration Encryption\n   \"If OPES was compatible with end-to-end\
    \ encryption, this would\n   effectively ensure that OPES boxes would be restricted\
    \ to ones that\n   are known, trusted, explicitly addressed at the IP layer, and\n\
    \   authorized (by the provision of decryption keys) by at least one of\n   the\
    \ ends\" [2].\n   This has been discussed in Section 3.3.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The document itself discusses security considerations\
    \ of OPES/SMTP.\n   General security threats of OPES are described in Security\
    \ Threats\n   for OPES [8]\n   Section 3.3 (\"Compatibility with Cryptographic\
    \ Protection\n   Mechanisms\") mentions that an OPES system could eventually deal\
    \ with\n   cryptographic keys.  This raises security issues (such as\n   availability\
    \ and storage of cryptographic keys) that must be\n   addressed by the implementer.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [2]   Floyd, S. and L. Daigle, \"IAB Architectural and Policy\n         Considerations\
    \ for Open Pluggable Edge Services\", RFC 3238,\n         January 2002.\n   [3]\
    \   Barbir, A. and A. Rousskov, \"Open Pluggable Edge Services\n         (OPES)\
    \ Treatment of IAB Considerations\", RFC 3914, October\n         2004.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [4]   Klensin, J., \"Simple Mail Transfer Protocol\"\
    , RFC 2821, April\n         2001.\n   [5]   Rousskov, A. and M. Stecher, \"HTTP\
    \ Adaptation with Open\n         Pluggable Edge Services (OPES)\", RFC 4236, November\
    \ 2005.\n   [6]   Stecher, M. and A. Barbir, \"Open Pluggable Edge Services (OPES)\n\
    \         SMTP Use Cases\", RFC 4496, May 2006.\n   [7]   Barbir, A., Penno, R.,\
    \ Chen, R., Hofmann, M., and H. Orman, \"An\n         Architecture for Open Pluggable\
    \ Edge Services (OPES)\", RFC\n         3835, August 2004.\n   [8]   Barbir, A.,\
    \ Batuner, O., Srinivas, B., Hofmann, M., and H.\n         Orman, \"Security Threats\
    \ and Risks for Open Pluggable Edge\n         Services (OPES)\", RFC 3837, August\
    \ 2004.\n   [9]   Elkins, M., Del Torto, D., Levien, R., and T. Roessler, \"MIME\n\
    \         Security with OpenPGP\", RFC 3156, August 2001.\n   [10]  Housley, R.,\
    \ \"Cryptographic Message Syntax (CMS)\", RFC 3852,\n         July 2004.\n   [11]\
    \  Eastlake, D., Reagle, J., and D. Solo, \"(Extensible Markup\n         Language)\
    \ XML-Signature Syntax and Processing\", RFC 3275, March\n         2002.\n   [12]\
    \  Barbir, A., \"Open Pluggable Edge Services (OPES) Entities and\n         End\
    \ Points Communication\", RFC 3897, September 2004.\n   [13]  Orman, H., \"Data\
    \ Integrity for Mildly Active Content\",\n         Proceedings of the Third Annual\
    \ International Workshop on\n         Active Middleware Services, p.73, August\
    \ 2001.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   Many thanks to everybody who provided input\
    \ and feedback for this\n   document.  Very special thanks to Hilarie Orman for\
    \ her input and\n   suggestions, especially for the content of Section 3.3\n \
    \  (\"Compatibility with Cryptographic Protection Mechanisms\").\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Martin Stecher\n   Secure Computing Corporation\n   Vattmannstr.\
    \ 3\n   33100 Paderborn\n   Germany\n   EMail: martin.stecher@webwasher.com\n\
    \   URI:   http://www.securecomputing.com/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
