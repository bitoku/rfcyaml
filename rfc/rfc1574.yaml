- title: __initial_text__
  contents:
  - '                  Essential Tools for the OSI Internet

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the following three necessary tools to debug\n\
    \   problems in the deployment and maintenance of networks using ISO 8473\n  \
    \ (CLNP):\n      - ping or OSI Echo function\n      - traceroute function which\
    \ uses the OSI Echo function\n      - routing table dump function\n   These CLNS\
    \ tools are the basics required for hosts and routers for\n   CLNS network support.\
    \ It is intended that this document specify the\n   most basic support level required\
    \ for CLNS hosts and routers.\n   To support some of the needed tools (ping and\
    \ traceroute) this memo\n   specifies the mechanism specified in RFC 1575 [3].\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   Section 1. Conventions .......................................\
    \  2\n   Section 2. Introduction ......................................  2\n \
    \  Section 3. Specification .....................................  2\n   Section\
    \ 3.1 Ping .............................................  3\n   Section 3.1.1\
    \ Protocol Support ...............................  3\n   Section 3.1.2 Functions\
    \ supported by the ping utility ........  3\n   Section 3.2 Traceroute .......................................\
    \  3\n   Section 3.2.1 Basic Traceroute ...............................  4\n \
    \  Section 3.2.2 Use of Partial Source route in traceroute ......  5\n   Section\
    \ 3.2.3 Information needed from a Traceroute utility ...  6\n   Section 3.3 OSI\
    \ routing table dump ...........................  6\n   Section 3.4 MIB variables\
    \ available via SNMP .................  7\n   Section 3.4.1 Summary of MIB Variables\
    \ .......................  8\n   Section 3.4.2 ASN.1 Syntax for these MIB variables\
    \ ...........  8\n   Section 4. OSI HOST.txt format ...............................\
    \ 10\n   Section 5. Acknowledgements .................................. 11\n \
    \  Section 6. References ........................................ 12\n   Section\
    \ 7. Security Considerations ........................... 12\n   Section 8. Author's\
    \ Addresses ................................ 13\n"
- title: 1.  Conventions
  contents:
  - "1.  Conventions\n   The following language conventions are used in the items\
    \ of\n   specification in this document:\n      o MUST, SHALL, or MANDATORY --\
    \ the item is an absolute\n        requirement of the specification.\n      o\
    \ SHOULD or RECOMMENDED -- the item should generally be followed\n        for\
    \ all but exceptional circumstances.\n      o MAY or OPTIONAL -- the item is truly\
    \ optional and may be\n        followed or ignored according to the needs of the\
    \ implementor.\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   Currently in the Internet, OSI protocols are being used\
    \ more and\n   more.  As the network managers of an Internet once predominantly\
    \ a\n   TCP/IP network began deploying parts of the emerging OSI Internet, it\n\
    \   became apparent that network layer OSI network debugging tools were\n   almost\
    \ nonexistent.  When such tools existed, different\n   implementations didn't\
    \ work together.\n   As stated in RFC 1575, a simple network layer mechanism is\
    \ necessary\n   to allow systems to be probed to test network layer integrity.\
    \  For\n   the purposes of running OSI networks the authors of this document\n\
    \   believe that other tools are necessary too.  Other tools described\n   below\
    \ are an echo function, a traceroute function, and a routing\n   table dump. \
    \ What this document defines is the minimum subset of\n   tools that are necessary\
    \ to allow for the debugging of network\n   problems.\n"
- title: 3.  Specification
  contents:
  - "3.  Specification\n   This document's purpose is to specify a standard ping,\
    \ traceroute,\n   and OSI routing table dumping mechanisms for use for the ISO\
    \ 8473\n   (CLNP) protocol in the OSI Internet.  A detailed description of the\n\
    \   specified mechanisms is below.  These mechanism MUST be available on\n   every\
    \ router (inter mediate system) or host (end system) that\n   provides OSI service\
    \ for the Internet.  These three functions are the\n   basic tool set for the\
    \ OSI network layer for the Internet.\n"
- title: 3.1.  Ping
  contents:
  - '3.1.  Ping

    '
- title: 3.1.1.  Protocol Support
  contents:
  - "3.1.1.  Protocol Support\n   The long term echo mechanism, as described in 1575,\
    \ requires the use\n   of two new type values in the packet header of the ISO\
    \ 8473 Network\n   Protocol Data Units (NPDUs), or preferably packets.  The two\
    \ values\n   are:\n      1E(hex) - for the echo-request Selector and,\n      1F(hex)\
    \  - for the echo-response Selector.\n   Nodes which support ISO 8473 but do not\
    \ support these two new values\n   (for the type code option field in the header\
    \ of an ISO 8473 packet)\n   MUST send back an error packet if the ERROR report\
    \ flag is set in the\n   packet.\n   To support a ping function for ISO 8473,\
    \ all end systems (hosts) and\n   intermediate systems (routers) MUST support\
    \ the \"long term\" echo\n   function as defined by RFC 1575 [3] AND also set\
    \ the ERROR report\n   flag in the 8473 header.\n   The setting of the ERROR report\
    \ flag is required because this allows\n   a way for a compliant host or router\
    \ to ping a non-compliant host or\n   router.  When a non-complaint host or router\
    \ receives a \"ping\" packet\n   with the new type function (Echo Request Selector),\
    \ it MUST attempt\n   to return an ISO 8473 error packet to the originating host,\
    \ thus\n   showing reachability.\n"
- title: 3.1.2.  Functions supported by the ping utility
  contents:
  - "3.1.2.  Functions supported by the ping utility\n   A ping utility MUST be able\
    \ to provide the Round trip time of each\n   packet, plus the average minimum\
    \ and maximum RTT over several ping\n   packets.  When an error packet is received\
    \ by the node, the ping\n   utility MUST report the error code to the user.\n"
- title: 3.2.  Traceroute
  contents:
  - "3.2.  Traceroute\n   The CLNP trace is similar to the ping utility except that\
    \ it utilizes\n   the \"Lifetime\" field in the ISO 8473 packet.  Hosts and routers\
    \ that\n   support OSI MUST also support CLNP trace.  The \"Lifetime\" field\n\
    \   serves the same function as the Time To Live (TTL) field does in an\n   IP\
    \ packet.  A node (router or host) cannot forward ISO 8473 packet\n   with a value\
    \ for the Lifetime of zero.  If the ERROR REPORT flag is\n   set in the ISO 8473\
    \ packet, an error packet, will be returned to the\n   originator of the packet.\n"
- title: 3.2.1.  Basic Traceroute
  contents:
  - "3.2.1.  Basic Traceroute\n   If a ISO 8473 echo-request packet is sent with \"\
    Lifetime\" field value\n   of 1, the first hop node (router or end system) will\
    \ return an error\n   packet to the originator the packet.  If the first hop node\
    \ supports\n   the echo-request type field the error code will be either:\n  \
    \    A0 (hex) - Lifetime Expired while Data Unit in Transit\n      A1 (hex) -\
    \ Lifetime Expired during Re-assembly\n   If the first hop node does not support\
    \ echo-request type field, the\n   error code will be:\n      B0 (hex) - Unsupported\
    \ Option not Specified.\n   When trying to trace a route to a remote node, the\
    \ destination\n   address in the echo-request packet sent should be this remote\n\
    \   destination.  By using increasing values in the \"Lifetime\" field a\n   route\
    \ can be traced through the network to the remote node.  This\n   traceroute function\
    \ should be implemented on each system (host or\n   router) to allow a user to\
    \ trace a network path to a remote host or\n   router.\n   The error message is\
    \ used as evidence of the reachability and\n   identity of the first hop.  The\
    \ originator then sends a packet with a\n   \"lifetime\" field value of 2.  The\
    \ first hop decrements the \"Lifetime\"\n   and because the \"Lifetime\" is still\
    \ greater than 0, it forwards it\n   on.  The second hop decrements the \"Lifetime\"\
    \ field value and sends\n   an error packet (ER NPDU) with one of the two \"Lifetime\
    \ Expired\"\n   error codes listed above to the originator.  This sequence is\n\
    \   repeated until either:\n      - the remote host is reached an either an echo-response\
    \ packet is\n        sent back or (for nodes that do not have the required Echo\n\
    \        support) an error packet is sent back, or\n      - the an error packet\
    \ is received with error code (B0) indicating\n        that a node will not pass\
    \ the echo-response packet, or\n      - an error packet is received with one of\
    \ the following errors:\n      80(hex)  - Destination Address Unreachable\n  \
    \    81(hex)  - Destination Address Unknown.\n   If any of the following Error\
    \ codes are received in an error packet,\n   a second packet should be sent by\
    \ the originating node:\n             CodeReason from 8473\n             -----------------------------\n\
    \             00(hex)  - Reason not specified\n             01(hex)  - Protocol\
    \ procedure error\n             02(hex)  - Incorrect checksum\n             03(hex)\
    \  - Packet Discarded due to Congestion\n             04(hex)  - Header Syntax\
    \ Error (cannot be parsed)\n             05(hex)  - Segmentation needed but not\
    \ permitted\n             06(hex)  - Incomplete packet received\n            \
    \ 07(hex)  - Duplicate Option\n             B1(hex)  - Unsupported Protocol Version\n\
    \             B2(hex)  - Unsupported Security Option\n             B3(hex)  -\
    \ Unsupported Source Routeing Option\n             B4(hex)  - Unsupported Recording\
    \ of Route Option\n             C0(hex)  - Reassembly Interface\n   If one of\
    \ these error is detected, an error value should be returned\n   to the user.\
    \  More than one echo packet, may be sent at a \"Lifetime\"\n   value.  The number\
    \ of additional echo packets is left up to the\n   implementation of this traceroute\
    \ function.\n   If one of the following errors is received, AND \"partial source\n\
    \   route\" is not specified in the echo-request packets, send a second\n   echo-request\
    \ packet to the destination at a \"Lifetime\" value:\n             Code      Reason\
    \ from 8473\n             --------------------------------\n             90(hex)\
    \   Unspecified Source Routeing Error\n             91(hex)   Syntax Error in\
    \ Source Routeing Field\n             92(hex)   Unknown Address in Source Routeing\
    \ Field\n             93(hex)   Path not Acceptable\n   (The echo-request packet\
    \ may have been damaged while traversing\n   through the network.)\n"
- title: 3.2.2.  Use of Partial Source route in traceroute
  contents:
  - "3.2.2.  Use of Partial Source route in traceroute\n   The current IP traceroute\
    \ has a 3rd party or \"loose source route\"\n   function.  The ISO 8473 protocol\
    \ also supports a \"partial source\n   routeing\" function.  However, if a node\
    \ (router or host) does not\n   support the \"partial source routing\" function\
    \ an ISO 8473 packet gets\n   passed along the path \"exactly as though the function\
    \ has not been\n   selected.  The packet shall not be discarded for this reason.\"\
    \ [2]\n   In order utilize the partial source route function in the OSI\n   traceroute,\
    \ a node must set the \"source routeing\" option and \"partial\n   source routeing\"\
    \ parameter within that option.  A 3rd party, or\n   \"loose source route\" traceroute\
    \ function requires that a node send an\n   echo-request packet with the \"loose\
    \ source routeing\" field set. The\n   functioning of the 3rd party/\"loose source\
    \ route\" traceroute is the\n   same except the following errors cause the traceroute\
    \ to be\n   terminated:\n             Code      Reason from ISO 8473\n       \
    \      --------------------------------------------------\n             92 Unknown\
    \ Address in Source Routeing Field\n             93 Path not Acceptable\n   These\
    \ errors may indicate a problem with the \"loose source route\"\n   listed in\
    \ the echo-request packet for this destination.  Additional\n   packets with the\
    \ same lifetime will only repeat this error.  These\n   errors should be reported\
    \ to the user of the traceroute function.\n"
- title: 3.2.3.  Information needed from a Traceroute utility
  contents:
  - "3.2.3.  Information needed from a Traceroute utility\n   A traceroute utility\
    \ should provide the following information to the\n   user:\n      - the identity\
    \ of systems that comprise the path or route\n        to the destination (the\
    \ identifiers are called Network\n        Entity Titles or NETs in OSI and ISO\
    \ 8473)\n      - ping times (in Round trip times) for each\n        hop in the\
    \ path,\n      - error codes from error packet received as a\n        response\
    \ to the an echo-request packet, and\n      - any other error conditions encountered\n\
    \        by traceroute.\n"
- title: 3.3.  OSI routing table dump
  contents:
  - "3.3.  OSI routing table dump\n   Each OSI host (end system) or router (intermediate\
    \ system) MUST be\n   able to dump any of its routing tables.  Routing tables\
    \ may come from\n   the:\n             a.) the ES-IS information\n           \
    \  b.) static\n             c.) IS-IS\n             d.) IDRP\n   or any other\
    \ source.\n   Each system MUST be able to dump the routing table entries via some\n\
    \   out of band mechanism. A method MUST exist to provide these. A show\n   osi\
    \ routes command SHOULD be created with the following options:\n             -\
    \ a        for all routes\n             - esis     for es-is routes\n        \
    \     - isis     for is-is routes\n             - idrp     for idrp routes\n \
    \            - static   for static routes\n             - other    for routes\
    \ from other sources.\n   In addition, routing tables SHOULD be available via\
    \ either SNMP or\n   CMIP.  The specification of CMIP variables are outside the\
    \ scope of\n   this specification.  Section 3.4 specifies the RFC 1238 MIB variables\n\
    \   which MUST be available via SNMP.  These two variables simply allow\n   the\
    \ user to get some basic CLNS routing information.\n   Please note that not all\
    \ the information requested is available via\n   the CLNS MIB.  Due to this fact,\
    \ it is anticipated that additional\n   work on a CLNS MIB will be done in the\
    \ future.  When a new MIB is\n   written, it is anticipated that this document\
    \ will be updated to\n   include the additional MIB variables to collect such\
    \ things as the\n   ES-IS cache.\n"
- title: 3.4.  MIB variables available via SNMP
  contents:
  - "3.4.  MIB variables available via SNMP\n   The Simple Network Management Protocol\
    \ [6] plays an important role in\n   monitoring of multi-protocol, managed resources\
    \ in the Internet. By\n   convention, SNMP is mapped onto User Datagram Protocol\
    \ (UDP), 6);\n   however, in those situations where it is not possible to communicate\n\
    \   with an ISO 8473 managed resource using SNMP over UDP, or where\n   communication\
    \ with an ISO 8473 managed resource using SNMP/UDP is not\n   possible/appropriate,\
    \ SNMP messages should be mapped onto an OSI\n   transport (7) The following Managed\
    \ Objects for the SNMP SHOULD be\n   supported to facilitate remote monitoring\
    \ using the SNMP:\n   The Simple Network Management Protocol (SNMP) plays an important\
    \ role\n   in monitoring of multi-protocol, managed resources in the Internet.\n\
    \   By convention, SNMP is mapped onto User Datagram Protocol (UDP);\n   however\
    \ in those situations where it is not possible to communicate\n   with an ISO\
    \ 8473 managed resource using SNMP over UDP, or where\n   communication with an\
    \ ISO 8473 managed resource using SNMP/UDP is not\n   possible/appropriate, SNMP\
    \ should be mapped onto an OSI transport\n   (8).  The following Managed Objects\
    \ SHOULD be supported for remoted\n   monitoring using SNMP:\n"
- title: 3.4.1.  Summary of MIB Variables
  contents:
  - "3.4.1.  Summary of MIB Variables\n   RFC 1238 CLNS MIB [5]\n      1) clnpAddrTable\
    \ - Addresses for Interfaces\n      2) clnpRoutingTable - OSI routes in system\
    \ routing table.\n"
- title: 3.4.2.  ASN.1 Syntax for these MIB variables
  contents:
  - "3.4.2.  ASN.1 Syntax for these MIB variables\n   The ASN.1 syntax for the two\
    \ variables in CLNS MIB (RFC 1238) is\n   included below for easy reference. \
    \ That RFC remains the\n   authoritative source for the MIB definitions.\n   \
    \       1) clnpAddrTable\n            clnpAddrTable OBJECT-TYPE\n            object.id\
    \ =  .... {clnp 21 }\n            clnpAddrTable = SEQUENCE OF ClnpAddrEntry\n\
    \            CLNPAddrEntry ::= SEQUENCE {\n                  clnpAdEntAddr\n \
    \                         CLNPAddres,\n                  clnpAdEntIfIndex,\n \
    \                         INTEGER,\n                  clnpAdEntReasmMaxSize\n\
    \                          INTEGER (0...65535);\n                  }\n       \
    \       clnpAdEntAddr = ClnpAddress\n              clnpAddress = OCTET string\
    \ (Size (1...20);\n              clnpAdEntIfIndex = INTEGER;\n              clnpAdEntReasmMaxSize\
    \ = INTEGER (0...65535);   #\n          Descriptions of Table entry values:\n\
    \          clnpAdEntAddr - CLNP address for this interface value\n          clnpAdEntIfIndex\
    \ - Interface Index value corresponding to\n                             IfIndex\
    \ value.\n          clnpAdEntReasmMaxSize = Maximum size of a pdu that can be\n\
    \                                  reassembled from incoming PDUs\n          \
    \                        received on this interface.\n          2)  clnpRoutingTable\n\
    \             object id =....{clnp 22}\n             clnpRoutingTable =  SEQUENCE\
    \ OF ClnpRouteEntry;\n             ClnpRouteEntry = SEQUENCE OF {\n          \
    \                clnpRouteDest,\n                          clnpRouteIfIndex,\n\
    \                          clnpRouteMetric1,\n                          clnpRouteMetric2,\n\
    \                          clnpRouteMetric3,\n                          clnpRouteNextHop,\n\
    \                          clnpRouteType,\n                          clnpRouteProto,\n\
    \                          clnpRouteAge,\n                          clnpRouteInfo}\n\
    \            clnpRoutDest ::= ClnpAddress;    # Address in Route table\n     \
    \                                        # (prefix or full address\n         \
    \   clnpRouteIfIndex ::= Integer;    # IfIndex value for\n                   \
    \                          # interface next hop can\n                        \
    \                     # be reached through.\n            clnpRouteMetric1 ::=\
    \ Integer;    # primary routing metric\n                                     \
    \        # for this protocol.\n                                             #\
    \ Specific meaning\n                                             # depends on\
    \ clnpRouteProto\n                                             # value -1 if not\
    \ used\n            clnpRouteMetric2 ::= Integer;    # alternate routing metric\n\
    \                                             # for this protocol.\n         \
    \                                    # Specific meaning\n                    \
    \                         # depends on clnpRouteProto\n                      \
    \                       # value -1 if not used\n            clnpRouteMetric3 ::=\
    \ Integer;    # alternate routing metric\n                                   \
    \          # for this protocol.\n                                            \
    \ # Specific meaning\n                                             # depends on\
    \ clnpRouteProto\n                                             # value -1 if not\
    \ used\n            clnpRouteMetric4::= Integer;     # alternate routing metric\n\
    \                                             # for this protocol.\n         \
    \                                    # Specific meaning\n                    \
    \                         # depends on clnpRouteProto\n                      \
    \                       # value -1 if not used\n            clnpRouteNextHop::=\
    \ ClnpAddress; # Address of Next Hop in\n                                    \
    \         # Routing\n                                             # Table\n  \
    \          clnpRouteType::=INTEGER {\n                          other (1),   \
    \      # none of following\n                          invalid (2),       # an\
    \ invalid route\n                          direct(3),         # a direct route\n\
    \                          remote(4)}         # a remote route\n            clnprouteProto::=\
    \ INTEGER {\n                          other (1),         # none of the following\n\
    \                                             # (manually configured\n       \
    \                                      # falls in this category)\n           \
    \               local(2),          # configured entries\n                    \
    \      netmngt(3),        # set via Network\n                                \
    \             # management\n                          is-is(9),          # ISO\
    \ 10589\n                          ciscoIgrp(11),     # Ciscos OSI IGRP\n    \
    \                      ospf(13),          # OSPF set\n                       \
    \   bgp(14),           # BGP sets\n                          idrp(15)        \
    \   # addition suggested to\n                                             # rfc\
    \ 1238\n                                             # in processing\n       \
    \     clnpRouteMetric5::= Integer;     # alternate routing metric\n          \
    \                                   # for this protocol.\n                   \
    \                          # Specific meaning\n                              \
    \               # depends on clnpRouteProto\n                                \
    \             # value -1 if not used\n            clnpRouteInfo ::= OBJECT-ID;\
    \     # protocol id that\n                                             # installed\
    \ this route\n                          }\n"
- title: 4.  OSI HOST.txt format
  contents:
  - "4.  OSI HOST.txt format\n   The OSI format for addresses allows addresses to\
    \ be 20 bytes.  In the\n   long term, a Directory service (DNS service or OSI\
    \ Directory service\n   (X.500)), will provide a host name to address mapping.\
    \  The process\n   of getting OSI capable DNS and Directory service may require\
    \ OSI\n   pathway to already be set-up.  Most host and router systems use a\n\
    \   fixed table to provide this name to NSAP address mapping in order to\n   get\
    \ OSI working on their system. The current operational problem is\n   each implementation\
    \ has a different format.  This document defines a\n   fixed format so that these\
    \ initial name to NSAP mapping files can be\n   shared through-out the internet.\n\
    \   To conform to this document, a host or router supporting CLNS MUST\n   have\
    \ support a \"osi host.txt\" file with the format below. The \"osi\n   host.txt\"\
    \ file may be used for other OSI applications or TUBA\n   applications.  For these\
    \ other applications, other fields may be\n   defined but the definition of these\
    \ is outside the scope of this\n   specification.\n   OSI applications may use\
    \ another file name for osi address\n   information.  NSAP addresses in any osi\
    \ address information MUST use\n   the format below.  This host name to NSAP mapping\
    \ MUST be available\n   for use by the following utilities on CLNS hosts and routers:\n\
    \      - OSI Echo (Ping) function,\n      - OSI traceroute function, and\n   \
    \   - router table look-up for CLNS\n        routing information\n   Host and\
    \ router systems MUST also support a NSAP to name mapping by\n   the Domain Name\
    \ Service Directory or or the OSI Directory service\n   (X.500).\n   Format of\
    \ osi hosts file:\n      <NSAP Address> <name1> <name2> ...<name>\n   The NSAP\
    \ Address should be in the following format:\n      <first octet>.<2nd octet 3rd\
    \ octet>.<4th octet 5 octet>.\n   comments on the above format:\n   The NSAP octets\
    \ should be expressed in hexidecimal. The dots are aids\n   to help read the NSAP\
    \ address, and MUST NOT be required for an NSAP\n   address parsing.  However,\
    \ each NSAP address file MUST be able to\n   have the ability to handle the insertion\
    \ of dots.  The location of\n   the inserted dots within an NSAP address MUST\
    \ NOT have any\n   significance other than to make the address easier to read.\n\
    \   An example of this use in the GOSIP format is:\n      47.0005.80ff.ff00.0000.0001.0001.0a0b.0c0d.0204.00\n\
    \   An example of this format in ANSI format is:\n      39.480f.8000.0500.0000.0001.0001.0a0b0c0d.0204.00\n\
    \   This value quickly shows the AFI and the NSEL octets on either end.\n    \
    \  <name1> <name2> <name> - Indicates a sequence of name associated\n      with\
    \ this nsap address.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   The authors would like to acknowledge the contributions\
    \ made by Dave\n   Piscitello.  He not only kept the document accurate, but also\
    \ helped\n   us to get rid of the ISO jargon and make the document more readable.\n\
    \   Thanks to Paulina Knibbe for her work with the host.txt format. We\n   would\
    \ also like to thank members of the Network OSI Operations\n   Working Group of\
    \ the IETF for their comments.\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1] ISO/IEC 8473, Information Processing Systems, \"Protocol\
    \ for\n       Providing the Connectionless-mode Network Service and Provision\n\
    \       of Underlying Service\", May 1987.\n   [2] Hagens, R., \"An Echo Function\
    \ for ISO 8473\",  RFC 1139,  IETF-OSI\n       Working Group, January 1990.\n\
    \   [3] Hares, S., and C. Wittbrodt, \"CLNP echo (ISO 8473)\", RFC 1575,\n   \
    \    Merit/NSFNET, Stanford University/BARRNet, February 1994.\n   [4] ISO/IEC\
    \ DIS 10747 Information Processing Systems -\n       Telecommunications and Information\
    \ Exchange between Systems -\n       Protocol for Exchange of Inter-domain Routeing\
    \ Information among\n       Intermediate Systems to Support Forwarding of ISO\
    \ 8473 packets.\n   [5] Satz, G., \"Connectionless-mode Network Service Management\n\
    \       Information Base - for use with Connectionless Network Protocol\n    \
    \   (ISO 8473) and End system to Intermediate System Protocol (ISO\n       9452)\"\
    , RFC 1238, cisco Systems, Inc., June 1991.\n   [6] Case, J., Fedor, M., Schoffstall,\
    \ M., and J.  Davin, \"Simple\n       Network Management Protocol\", STD 15, RFC\
    \ 1157, SNMP Research,\n       Performance Systems International, Performance\
    \ Systems\n       International, MIT Laboratory for Computer Science, May 1990.\n\
    \   [7] Rose, M., \"SNMP over OSI\", RFC 1418, Dover Beach Consulting,\n     \
    \  Inc., March 1993.\n   [8] Information processing systems - Open Systems Interconnection\
    \ -\n       Protocol for Providing the Connectionless-mode Transport Service,\n\
    \       International Organization for Standardization.  International\n     \
    \  Standard 8602, December 1987.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8.  Authors' Addresses
  contents:
  - "8.  Authors' Addresses\n   Susan K. Hares\n   MERIT/NSFNET\n   Internet Engineering\n\
    \   1075 Beal Avenue\n   Ann Arbor, MI 48109-2112\n   Phone: (313) 936-3000\n\
    \   EMail: skh@merit.edu\n   Cathy J. Wittbrodt\n   Stanford University/BARRNet\n\
    \   Networking Systems\n   Pine Hall 115\n   Stanford, CA 94305\n   Phone: (415)\
    \ 725-5481\n   EMail: cjw@magnolia.Stanford.EDU\n"
