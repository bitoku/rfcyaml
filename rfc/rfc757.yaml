- title: __initial_text__
  contents:
  - "  A Suggested Solution to the Naming, Addressing, and Delivery\n            \
    \   Problem for ARPAnet Message Systems\n                        Debra P. Deutsch\n\
    \                        10 September 1979\n                     Bolt Beranek\
    \ and Newman\n                        50 Moulton Street\n                    \
    \         Preface\n  Unlike   many   RFCs,   this   is  not  a  specification\
    \  of  a\nsoon-to-be-implemented protocol.  Instead this is a true  request\n\
    for  comments  on  the concepts and suggestions found within this\ndocument, written\
    \  with  the  hope  that  its  content,  and  any\ndiscussion  which it spurs,\
    \ will contribute towards the design of\nthe  next  generation  of  computer-based\
    \  message  creation  and\ndelivery systems.\n  A  number  of  people  have  made\
    \ contributions to the form and\ncontent of this document.  In particular, I would\
    \ like  to  thank\nJerry   Burchfiel  for  his  general  and  technical  advice\
    \  and\nencouragement, Bob Thomas for his  wisdom  about  the  TIP  Login\ndatabase\
    \  and  design of a netmail database, Ted Myer for playing\ndevil's  advocate,\
    \  and  Charlotte  Mooers  for   her   excellent\neditorial assistance.\n    \
    \                                               Debbie Deutsch\n1. Introduction\n\
    \  The  current  ARPAnet  message handling scheme has evolved from\nrather informal,\
    \ decentralized beginnings.  Early developers took\nadvantage of pre-existing\
    \ tools --  TECO,  FTP  --  in  order  to\nimplement  their  first systems.  Later,\
    \ protocols were developed\nto  codify  the  conventions  already  in  use.  \
    \   While   these\nconventions  have  been  able  to  support an amazing variety\
    \ and\namount of service, they have a number of shortcomings.\n  One difficulty\
    \ is the naming/addressing  problem,  which  deals\nwith  the  need  both  to\
    \  identify the recipient and to indicate\ncorrectly a delivery point for the\
    \ message.  The current paradigm\nis deficient in that it lacks a  sharp  distinction\
    \  between  the\nrecipient's  name  and  the  recipient's  address,  which  is\
    \ the\ndelivery point on the net.\n  The naming/addressing scheme does not allow\
    \  users  to  address\ntheir  messages  using  human  names,  but instead forces\
    \ them to\nemploy designations better  designed  for  machine  parsing  than\n\
    human identification.\n  Another  source  of  limitations  lies  in the delivery\
    \ system,\nwhich is simply an extension of the File Transfer Protocol.   The\n\
    delivery system is fairly limited in its operation, handling only\nsimple transactions\
    \ involving the transfer of a single message to\na  single  user  on  the destination\
    \ host.  The ability to bundle\nmessages and the ability to fan-out messages at\
    \ the foreign  host\nwould improve the efficiency and usefulness of the system.\n\
    \  An  additional  drawback  to  the delivery system is caused, to\nsome extent,\
    \ by the addressing scheme.  A change in  address,  or\nincorrect  address  usually\
    \  causes the delivery system to handle\nthe message incorrectly.  While some\
    \ hosts support  some  variety\nof  a  mail  forwarding database (MFDB), this\
    \ solution is at best\ninadequate and spotty  for  providing  reliable  service\
    \  to  the\nnetwork  as  a  whole.    Because the same username may belong to\n\
    different people at different hosts, ambiguities which  may  crop\nup  when  messages\
    \  are  incorrectly addressed keep even the best\nMFDBs from always being able\
    \ to do their job.\n  This proposal envisions a system  in  which  the  identity\
    \  and\naddress  of  the  recipient are treated as two separate items.  A\nnetwork\
    \ database supports  a  directory  service  which  supplies\ncorrect  address\
    \  information  for all recipients.  Additionally,\nthe scheme allows mail delivery\
    \ to be  restricted  to  authorized\nusers of the network, should that be a desirable\
    \ feature.\n2. Names and Addresses\n  Today's  ARPAnet  naming and addressing\
    \ scheme (as specified in\nRFC 733[3]) does not discriminate between the identity\
    \ of a  user\n                   1\nand   his   address .      Both   are  expressed\
    \  the  same  way:\nUSERNAME@HOST.  While this  should  always  result  in  a\
    \  unique\nhandle for that user, it has proved to be inadequate in practice.\n\
    Users  who  change  the  location  of their mailboxes, because of\neither a change\
    \ in affiliation or a simple shift in  host  usage,\nalso  get their names changed.\
    \  If their old host employs an MFDB\nthe problem is not too bad.  Mail is simply\
    \ forwarded on  to  the\nnew  address,  slightly  delayed.  Other less fortunate\
    \ users who\ncannot rely upon an MFDB must notify all their correspondents  of\n\
    the  change  in  address/name.    Any  mail  addressed to the old\naddress becomes\
    \ undeliverable.  (An excellent discussion  of  the\ndifferences between naming,\
    \ addressing, and routing is found in a\npaper by John Shoch [1].)\n  The  desire\
    \  to  use  \"real\"  names  in  the  address fields of\nmessages is also thwarted\
    \ by the current system.    An  elaborate\nsystem  for  using  human-compatible\
    \  vs.   machine-interpretable\n                                             \
    \           2\ninformation has been evolved for use in message  headers .    The\n\
    most  recent  developments  indicate  that  many users would feel\nhappiest  \
    \ if    the    real    human    name    could    appear;\nmachine-interpretable\
    \  information should not intrude too heavily\ninto the writer's work- and thought-space.\n\
    \  The solution proposed here calls for a total break between  the\nway  a  recipient\
    \ is named or identified and the way in which his\nlocation  is  specified.  \
    \  Since  the  ARPAnet  is  a  regulated\nenvironment,  a  unique  (and  not necessarily\
    \ human-readable) ID\ncould be assigned to each authorized recipient of  network\
    \  mail.\nThis  ID  would stay with the user throughout his lifetime on the\n\
    network, through changes in address and affiliation.\n  A network database  (which\
    \  could  be  derived  from  the  same\ndatabase  that  has  been  proposed  to\
    \  support TIP login) would\nassociate each ID with one or more addresses indicating\
    \ where the\nmail for that ID may be delivered.  If more than one address were\n\
    _______________\n  1\n   See, for example, RFC 733's discussion  of  the  semantics\
    \  of\naddress  fields,  in  which  it  is  specified that the To: field\n\"contains\
    \ the identity of the primary recipients of the message\".\n  2\n   See the \"\
    Syntax of General Addressee  Items\"  section  of  RFC\n733.\nassociated  with\
    \ an ID, that would indicate an ordered preference\nin delivery points.  The delivery\
    \ system would  attempt  delivery\nto  the first addressee, and, if that failed,\
    \ try the second, and\n     3\nso on .  Most IDs would probably have only  one\
    \  address.    Also\nassociated  with each ID would be some information about\
    \ the ID's\nowner:  name, postal address, affiliation, phone number, etc.\n  Rather\
    \ than being forced to type some awkward character  string\nin  order  to  name\
    \  his  correspondent, the writer would have to\nsupply only enough information\
    \ to allow some process to determine\nthe unique identity of the recipient.  This\
    \ information might  be\nthe recipient's name or anything else found in the database.\n\
    \  The  access  to  this  data would also free the writer from any\nneed to know\
    \ the location of the recipient.  Once the  unique  ID\nwere  known,  the  correct\
    \  location for delivery would be only a\nlook-up away.\n2.1 A distributed database\
    \ approach\n  It  is  clear  that  if  the  network  database  had  only  one\n\
    instantiation  there  would  be  a tremendous contention problem.\nAll message\
    \ traffic would be forced to query that  one  database.\nThis  is  extremely undesirable,\
    \ both in terms of reliability and\nspeed.  It is also clear that requiring each\
    \ host to  maintain  a\ncomplete  local  copy  of  the  entire  network  database\
    \  is  an\nundesirable and unnecessary burden on the hosts.\n  A better approach\
    \ would be to build  some  sophistication  into\nthe local delivery system, and\
    \ use local mini-databases which are\nbased  upon  the contents of a distributed\
    \ network database.  (It\nmay be redundant and/or partitioned, etc., but  is \
    \ probably  not\nresident  on  the  local  host.)    When a local host queries\
    \ the\nnetwork database about an ID (or, in  a  more  costly  operation,\nasked\
    \  to  supply an ID given enough identification such as name,\netc.)  the database\
    \ may be asked to return all its information on\nthat ID.  At this point the local\
    \ host can enter all or  some  of\nthat  information  into a locally maintained\
    \ database of its own.\nIt will always refer to that database first when  looking\
    \  for  a\nname  or  address, only calling the network database if it cannot\n\
    find  a  local  entry.  Depending  upon  the  desired  level   of\nsophistication\
    \ of the local message handling programs, additional\ninformation  may  be  added\
    \  to  that  database,  including,  for\n_______________\n  3\n   Multiple  addresses\
    \  might  also  be  used  to  indicate  that\nmultiple deliveries are desired.\n\
    example, nicknames.\n  The  database  might  be  shared by a cluster of hosts\
    \ (such as\nexist at BBN or ISI), or it might be used by  only  one.    Hosts\n\
    which  originate small amounts of message traffic might rely upon\nthe network\
    \ database entirely.\n  The structure and maintenance of the local  databases\
    \  is  left\nsolely  to the local hosts.  They may or may not store addresses.\n\
    It may be desirable either to garbage collect  them,  or  to  let\nthem  grow.\
    \  The local databases might be linked to smaller, more\nspecialized databases\
    \ which are  owned  by  individual  users  or\ngroups.    These  individual databases\
    \ would be the equivalent of\naddress books in which users  might  note  special\
    \  things  about\nindividuals:    interests,  last  time seen, names of associates,\n\
    etc.  The existence and scope of these databases are not mandated\nby this scheme,\
    \ but it does allow for them.\n  The same individual databases may be used by\
    \  message  creation\nprograms   in   order   to  determine  the  recipient's\
    \  ID  from\nuser-supplied input.  For example, a user may address  a  message\n\
    to  someone  named  Nick.    The  message  creation  program  may\nassociate \"\
    Nick\" with an ID, and hand that ID off to the delivery\nsystem, totally removing\
    \ the matter of address or formal ID  from\nthe user's world.\n2.2 Delivery\n\
    \  The delivery operation consists of three parts:\n  1.  Determining  the  address\
    \  to which the message must be\n      sent,\n  2.  Sending the message,\n  3.\
    \  Processing by foreign host.\n  The first step usually means looking up, in\
    \ either a  local  or\nthe   network  database,  the  correct  address(es)  for\
    \  message\ndelivery, given the recipient's ID.  Should the ID not  be  known\n\
    at  the time the message is submitted for delivery, any operation\nnecessary to\
    \ determine that ID (such as  a  call  to  either  the\nlocal  or  network  database)\
    \  is  also performed as part of this\nstep.\n  The second step is not too different\
    \ from what  happens  today.\nThe  local host establishes a connection to the\
    \ foreign host.  It\nis then able to send one or messages to one or more people.\
    \   The\noptions are:\n   - Bulk mail.  Several recipients all get the same message.\n\
    \   - Bundled  mail.    Several  messages get sent to the same\n     recipient.\n\
    \   - A combination of the above\n   - One recipient gets one message.\n  The\
    \ foreign host should be able to accept mail for each ID.\n  The rejection of\
    \ mail for a given ID by the foreign host  would\nusually  indicate  an  inconsistency\
    \  between  the sender's local\ndatabase and the network database.  In this case,\
    \ the local  host\nupdates  its  local  database  from  the  network  database,\
    \  and\nattempts delivery at the \"new\" host.  (This is mail  forwarding.)\n\
    If  a  host  taken  from  the  network  database  is  found to be\nincorrect,\
    \ there is  a  problem  in  the  network  database,  and\nappropriate  authorities\
    \  are  notified.    Thus, address changes\npropagate out from the network database\
    \ only as  the  out-of-date\ninformation  is  referenced.    This reduces the\
    \ magnitude of the\nlocal database update problem.\n  Once the foreign host recognizes\
    \ the ID(s), the message(s)  may\nbe   transmitted   to   the   foreign   host.\
    \    Upon  successful\ntransmission, the job of the local host is done.\n  The\
    \ third  step  requires  the  foreign  host  to  process  the\nmessage(s).   This\
    \ is analogous to what may occur in a mail room.\nA foreign host may have to sort\
    \  the  bundled  or  bulk  mail  it\nreceives.    In addition, the foreign host\
    \ might perform internal\nor external fan-out functions or other special functions,\
    \ at  the\noption of the ID owner.\n  The  implemention and design of possible\
    \ functions which may be\nperformed in the mail rooms are neither mandated  nor\
    \  restricted\nby  this  delivery  scheme.  Since they are too numerous to allow\n\
    even a small portion of them to be described  here,  only  a  few\nexamples will\
    \ be mentioned.\n  Fan-out  functions  might  include placing messages in multiple\n\
    files,  sending  copies  to  one  or   more   other   users,   or\nrebroadcasting\
    \  the  messages  onto  the  network.  (In that last\ncase, the foreign host might\
    \ evaluate an ID  list,  in  much  the\nsame way that the ITS mail repeater broadcasts\
    \ messages addressed\nto certain mailboxes.)  Special functions might include\
    \ automatic\nhard-copy  creation  or  reply  generation, processing by various\n\
    daemons, or any other service found desirable by the host's  user\npopulation\
    \  and  administration.    The implementation of fan-out\nfunctions is  up  to\
    \  the  local  host,  as  are  any  additional\nfunctions which the user population\
    \ might wish of its local \"mail\nroom\".    Whatever  services  are  available,\
    \  the mail room will\ndistribute the mail to the correct location for each ID.\n\
    2.2.1 Additional delivery options\n  It may be desirable to allow mail rooms to\
    \ accept a username in\nplace  of  an ID.  Use of a username is a less reliable\
    \ method of\naddressing than use of an ID.\n   - A username  may  not  be  sufficiently\
    \  unambiguous  for\n     getting an ID and host from the network database.\n\
    \   - Since  a  recipient's  username  may change from time to\n     time, there\
    \ is a chance that the  username  supplied  by\n                             \
    \     4\n     the  sender will be incorrect , or that the host may not\n     recognize\
    \ it.\n     Because a recipient's ID  does  not  change  with  time,\n     errors\
    \  such  as those caused by username changes cannot\n     occur if IDs are used.\
    \  Similarities or ambiguities  can\n     be discovered before delivery occurs,\
    \ and the sender can\n     be prompted for additional identifying information\
    \ about\n     his intended recipient.\n   - In  an  even  worse  case,  a correct\
    \ username can still\n     result in an incorrect delivery when it is  paired\
    \  with\n     an  incorrect  host  or  acted upon by a mail forwarding\n     \
    \        5\n     database .\n     Because unique IDs are unambiguous, the  possibility\
    \  of\n     such a situation is eliminated by the use of unique IDs.\n_______________\n\
    \  4\n   A particularly insidious source of addressing errors stems\nfrom  the\
    \  inconsistent  use of (human) names and initials to\ngenerate  usernames.  The\
    \  sender  can   easily   guess   his\nrecipient's  username incorrectly by using,\
    \ or failing to use\na combination of initials and last name.    (For  example,\
    \  a\nuser  wishing  to  address  Jim  Miller at BBNA and using the\naddress \"\
    Miller@BBNA\"  will  have  his  message  successfully\ndelivered to Duncan Miller\
    \ at the same site.)\n  5\n   The   author  has  observed  a  mail  forwarding\
    \  database\nredirect messages  correctly  addressed  to  one  JWalker  to\ndifferent\
    \ JWalker at another host.\n2.2.2 Failures\n  The case in which the network database\
    \ is found to be incorrect\nhas  already been discussed.  It may make sense to\
    \ mark the entry\nas \"possibly in error\" and to notify both  the  network  database\n\
    \                6\nand the ID owner  when such a situation occurs. In this case\
    \ mail\ndelivery  to  the  ID's owner will not occur, but this is not too\nbad,\
    \ considering that that is what happens today when a host does\nnot recognize\
    \ a username.\n  One additional failure mode, the loss of the  network  database\n\
    from  the  net,  must  be considered, even though a well-designed\ndistributed\
    \ network database should be robust  enough  to  almost\nrule out this possibility.\n\
    \  If  such  a failure should occur, the local databases should be\nable to handle\
    \ most of the traffic.  What would be  lost  is  the\nability  to  add  new IDs\
    \ to the network database, the ability to\nchange hosts for an ID, the ability\
    \ to  update  local  databases,\nand the ability to query the network database.\
    \  In essence, there\nwould be a regression to the state we are in today.\n  A\
    \  well-administered  network  database  should  be  backed  up\nfrequently. \
    \ Should a catastrophic series  of  hardware  failures\nremove  one or more of\
    \ the network database's hosts from the net,\nthe database could be moved  elsewhere.\
    \    Such  a  change  would\nentail  notification  of  all  hosts  on  which \
    \ mail originates.\nSoftware which queries the database should be designed to\
    \ be able\nto easily handle such a move.\n_______________\n  6\n   Such notification\
    \ would presumably  be  by  hardcopy  mail  or\ntelephone.\n3. Relationship to\
    \ TIP Login database\n  A  number of references to the TIP Login problem and a\
    \ database\nwhich has been proposed as part of its solution have been made in\n\
    this note.  A series of working papers [5] written by Bob Thomas,\nPaul Santos,\
    \ and Jack Haverty describe an approach to TIP  Login.\nIn  brief,  the method\
    \ is to build and maintain a distributed TIP\nLogin database, containing information\
    \ necessary to allow  a  new\nentity  called a \"login-host\" to decide whether\
    \ or not to grant a\nuser access to a given TIP, and whether or not to allow the\
    \  user\nto make various modifications to the database itself.\n  The  TIP  login\
    \  database  is derived from a \"network user data\nbase\", which contains information\
    \ above and beyond that necessary\nto support TIP login.  This comprehensive database\
    \ is designed to\nsupport applications other than TIP Login, either directly or\
    \  by\nmeans of databases derived from it.\n  Contained  in  the  TIP  Login \
    \ database  are each user's login\nstring, a list of TIPs the user  is  authorized\
    \  to  access,  the\nuser's  unique  ID, his password, and any other \"permissions\"\
    \ (in\naddition to which TIPs may be accessed).  These  permissions  may\nindicate\
    \  that  the user may create, delete, or modify entries in\nthe database, to assume\
    \ other user's roles, and to what extent he\nmay do so.  The notion  of  permissions\
    \  as  developed  by  Steve\nWarshall is discussed in an NSW memo [2].\n  It \
    \ seems entirely reasonable to derive a netmail database from\nthe same comprehensive\
    \ database that is designed to  support  TIP\nLogin.  The concept of a unique\
    \ ID is supported by that database.\nMuch  of  the  required  information  for\
    \  a  netmail database is\nalready included, and the maintenance tools necessary\
    \  to  modify\nit  seem well-suited for the purpose.  The concept of permissions\n\
    extends well to the needs of netmail.   Permissions  specific  to\nnetwork  mail\
    \  might  include, for example, the ability to modify\nthe delivery host list\
    \ associated with a given user.\n  The  mechanisms  necessary   for   the   maintenance\
    \   of   the\ncomprehensive  network database and its derived databases give us\n\
    a netmail database  very  inexpensively.    This  proposal  takes\nadvantage of\
    \ that situation.\n4. Relationship to RFC 753\n  RFC  753 [4] describes an internetwork\
    \ message delivery system.\nVery briefly, the approach is to  locate  one  or\
    \  more  \"message\nprocessing  modules\"  (or MPMs) on each network.  These MPMs\
    \ pass\nmessages across network  boundaries,  and  are  also  capable  of\nmaking\
    \  deliveries  to  users on the local network.  The document\nalso details a proposed\
    \ message format, along  the  envelope  and\nletter  paradigm.    An external\
    \ \"envelope\", read by the delivery\nsystem, allows the (unread) message to be\
    \  correctly  routed  and\ndelivered  to  the  proper  recipient.  Groups of messages\
    \ passed\nbetween a pair of MPMs are sent together in a \"mail bag\".\n  This\
    \ proposal differs from RFC 753  in  that  it  is  primarily\nintended  to  operate\
    \  within  a  network  or  a concatenation of\nnetworks using a common host-host\
    \ protocol, e.g. TCP.  Where  RFC\n753   addresses   the   problems  of  internetwork\
    \  communication\n(differing  message  formats,  complex   routing,   and   correct\n\
    identification  of  the proper recipient), this note concentrates\nprimarily on\
    \ what can be done within a single protocol.  The  two\nare not incompatible.\
    \  While a general internetwork protocol must\nprovide  general  methods  which\
    \ can be compatible with different\nhost-host protocols in different networks,\
    \  a  proposal  such  as\nthis  one  can  capitalize  on  the  capabilities, resources,\
    \ and\npolicies of a given  catenet  (catenated  network)  such  as  the\nARPAnet/PRnet/SATNET\
    \ etc.\n4.1 Compatibility\n  The delivery system described in RFC 753 is compatible\
    \ with the\nsystem  outlined  here.  Let's examine this for each of the three\n\
    basic delivery options performed by the MPM.  (In the  discussion\nthat  follows,\
    \ \"local networks\" means a concatenation of networks\nusing a common host-host\
    \ protocol, e.g. TCP.   \"Foreign  network\"\nmeans  some  network  which  uses\
    \ a different host-host protocol,\ne.g. X.25. (See Figure 4-1.)\n4.1.1 Outgoing\
    \ message\n4.1.1.1 RFC 753\n  The sender's process hands a message to the local\
    \ network  MPM.\nThe message may be destined to an address on the local network\
    \ or\non  a  foreign network.  In the former case, the MPM performs the\nlocal\
    \ delivery function (see \"Incoming message\").  In the  latter\ncase,  the  MPM\
    \  passes the message along to another MPM which is\n\"closer\" to the end user.\n\
    \      +---------+  +----------+\n      |         |  |          |\n      | RCC-NET\
    \ |  | WIDEBAND |                .......\n      |         |  |   NET    |    \
    \            .     .\n      +---------+  |          |                . MPM .\n\
    \              * *  +----------+                .......\n+---------+   * *   *\
    \  *   .......                |\n|         |   +---------+  .     .          \
    \ +---------+\n| BBN-NET |***|         |__. MPM .  .....    |         |\n|   \
    \      |   | ARPANET |  .......  .   .xxxx| TELENET |\n+---------+***|       \
    \  |***********. G .    |         |\n              +---------+***        .....\
    \    +---------+\n              * *    *  *   **                            .......\n\
    \       +--------+  +-------+ ***.....    +-------------+  .     .\n       | \
    \       |  |       |    .   .    |             |--. MPM .\n       | SATNET | \
    \ | PRNET |    . G .oooo| DIAL-UP NET |  .......\n       |        |  |       |\
    \    .....    |             |\n       +--------+  +-------+             +-------------+\n\
    \   \"Local Nets\", TCP based        |    \"Foreign Nets\", other\n (direct addressing\
    \ using IP)     |     host-host protocols\n*** = TCP   xxx = X.25   ooo = other\
    \ communications protocol\n                        G = gateway\n             \
    \ Figure 4-1: The Internet Environment\n4.1.1.2 This proposal\n  The  sender's\
    \  process  determines the proper host for delivery\ngiven the recipient's unique\
    \ ID.  If the message is  destined  to\nthe  local  network, delivery takes place\
    \ as described earlier in\nthis proposal.  If the recipient is not local, the\
    \ message may be\npassed to an MPM for foreign delivery.  (A discussion of internet\n\
    delivery which does not  presuppose  RFC  753  implementation  is\nfound later\
    \ in this note.)\n  The  environment  in which the MPM operates does not assume\
    \ any\nknowledge on the part of the local networks about  addressees  on\nforeign\
    \ networks.  Thus there are two possibilities which arise:\n   - The recipient\
    \ has an ID known to the local networks.\n     In  this  case,  the  local  networks\
    \ supply the RFC 753\n     \"address\".  This can take place in the  local  networks'\n\
    \     MPM or the user's sending or mail creation process.\n   - The recipient\
    \ is unknown to the local networks.\n     Here   the  sender  must  supply  \"\
    mailbox\"  information\n     himself, either explicitly or with  help  of  his\
    \  local\n     host's database.\n  Thus,  outgoing  mail  as  described in this\
    \ memo is compatible\nwith RFC 753, with the benefit of reducing the burden on\
    \ the  MPM\nby handling mail deliveries that are local to local networks.\n4.1.2\
    \ Messages in transit\n  Traffic between two MPMs is not affected by this proposal.\n\
    4.1.3 Incoming mail\n  The MPM on the networks local to the recipient will have\
    \ access\nto  the netmail database, allowing it to translate \"mailboxes\" to\n\
    \"addresses\".  It can determine the unique ID of the recipient (if\nnot known),\
    \ and initiate delivery to that recipient.    Here  RFC\n753 and this proposal\
    \ complement each other very well.\n5. Implications of an internetwork message\
    \ environment\n  The  scheme described above is based upon the assumption that\
    \ a\nunique identifier can be assigned to each registered recipient of\nmail.\
    \  Whether or not this uniqueness  can  be  guaranteed  in  a\nfairly  unregulated\
    \ internetwork environment is questionable.  It\nis technically feasible, certainly.\
    \  The  difficulties  are  more\npolitical, because it is necessary to gain the\
    \ cooperation of the\nadministrators  and  user populations of foreign networks.\
    \  Let's\nassume cooperation, however, and see  what  might  happen  in  an\n\
    internet environment.\n5.1 Birthplaces\n  Each  set  of  local  networks would\
    \ have its own database, for\nease in access.  It does not seem practical to register\
    \  each  ID\nin every database, however.  That would be unnecessary, and would\n\
    create  access  and  storage  problems  at the network databases.\nHere the concept\
    \ of a \"birthplace\", or ID origin, may be of use.\n  While an ID does not imply\
    \ where the user is now,  it  can  say\nsomething  about  who issued it.  A simple\
    \ system for determining\nthe address for any ID can be maintained by  having\
    \  the  issuing\nnetwork  keep  a  pointer  for  each  ID  it  issues.  One double\n\
    indirection would yield the desired address, even if the ID  were\nnot issued\
    \ on the local nets.  A message originating on the local\nnets  with  an ID which\
    \ is unknown to its database can be handled\nby determining the birthplace of\
    \ the  ID.    An  inquiry  to  the\nbirthplace  database  would return a list\
    \ of one or more networks\non which the ID is registered.  An inquiry to any of\
    \ those  would\nget  the requisite information.  All that is necessary to support\n\
    this is for the birthplace record (small enough!)   to  be  kept,\nand  for  the\
    \ act of registration at a given net to automatically\ncause that net to notify\
    \  the  birthplace  of  the  registration.\n(Conversely, a de-registration would\
    \ cause a similar notification\nof the birthplace.)\n5.1.1 ID resolution\n  The\
    \  handling  of ID resolution when the ID is not known to the\nlocal net does\
    \ not seem to have a solution simpler than  querying\nforeign nets until some\
    \ success is achieved.\n5.1.2 Hosts in an internet environment\n  The  substitution\
    \  of internet host names for simple host names\nshould not cause any difficulty.\n\
    5.1.3 Orphans\n  Should a birthplace cease to exist (usually because its network\n\
    is  dismantled), it would be necessary for a second birthplace to\n\"adopt\" the\
    \ first birthplace's records.    Notification  of  this\nchange could be propagated\
    \ throughout the internet environment in\nmuch  the  same  way as the addition\
    \ of a new birthplace would be\ntreated.\n6. Conclusions\n  While  ARPAnet  message\
    \ systems have been amazingly successful,\nthere is much room for improvement\
    \ in the quality and quantity of\nthe  services  offered.    Current  protocols\
    \  are  limiting  the\ndevelopment  of  new message systems.  This paper has discussed\
    \ a\nmeans of providing the underlying support necessary for  building\na   new\
    \  generation  of  message  systems  which  can  be  better\nhuman-engineered\
    \ in  addition  to  providing  more  services  and\ngreater reliability.\n  Critics\
    \ may argue that the proposal is too radical, too much of\na  departure  from\
    \  current practice.  After all, today's message\nservice is extremely straightforward\
    \ in design, and therefore has\ncomparatively few failure modes.    The  protocols\
    \  in  use  have\ndescended,  with  relatively  few  changes,  from  the first\
    \ file\ntransfer and message format protocols implemented on the ARPAnet.\nThis\
    \ makes them well understood; people are aware of  both  their\nshortcomings \
    \ and  usage.  Finally, there are people who will not\nfeel comfortable about\
    \ requiring a network database,  distrusting\nthe  reliability  and  questioning\
    \  the  possible  cost of such a\nscheme.\n  On the other hand, it is undeniably\
    \ true that very little  more\ncan  be  done  to  improve  message services while\
    \ staying within\ntoday's practices.  New message systems which  will  be  able\
    \  to\ntransmit  facsimile,  voice,  and  other  media  along  with text\nrequire\
    \ us to rethink message formats and do away  with  delivery\nprotocols  which\
    \ are predicated upon the characteristics of ASCII\ntext.  The inception of internetwork\
    \ message delivery  causes  us\nto  re-evaluate  how  we  handle  messages locally.\
    \  Finally, the\nUSERNAME@HOST naming scheme has proved to  be  inadequate,  while\n\
    the  divorce of recipients' identities from their locations seems\na promising\
    \ possibility as a replacement.\n  The  ARPAnet  will  soon  have  a  distributed\
    \   database   for\nsupporting  TIP  Login.    Only small, incremental costs would\
    \ be\nassociated with building and maintaining a  netmail  database  at\nthe same\
    \ time.  It can be argued that TIP Login requires at least\nthe  level  of reliability\
    \ required by a message delivery system.\nIf the TIP Login database is successful,\
    \ a netmail  database  can\nwork, too.\n  It  is  clear that we will be implementing\
    \ a new set of message\nformat and delivery protocols in the near  future,  in\
    \  order  to\nallow for multi-media messages, internetwork message traffic, and\n\
    the  like.   New message composition and delivery systems will be\nbuilt to meet\
    \ those specifications  and  take  advantage  of  the\navenues  of development\
    \ which they will open.  If there will ever\nbe an advantageous time to re-evaluate\
    \ and re-design how messages\nare addressed and delivered, it is now,  when  we\
    \  are  about  to\nenter  upon  an  entirely  new  cycle  of message composition\
    \ and\ndelivery program implementation.\n                           REFERENCES\n\
    [1]   John F. Shoch.\n      Inter-Network Naming, Addressing, and Routing.\n \
    \     In Proceedings, COMPCON.  IEEE Computer Society, Fall, 1979.\n[2]   Stephen\
    \ Warshall.\n      On Names and Permissions.\n      Mass. Computer Associates.\
    \  1979.\n[3]   David H. Crocker, John J. Vittal, Kenneth T. Pogran,\n      D.\
    \ Austin Henderson, Jr.\n      STANDARD FOR THE FORMAT OF ARPA NETWORK TEXT MESSAGES.\n\
    \      RFC 733, The Rand Corporation, Bolt Beranek and Newman Inc,\n      Massachussets\
    \ Institute of Technology, Bolt Beranek and\n      Newman Inc., November, 1977.\n\
    [4]   Jonathan B. Postel.\n      INTERNET MESSAGE PROTOCOL.\n      RFC 753, Information\
    \ Sciences Institute, March, 1979.\n[5]   Robert H. Thomas, Paul J. Santos, and\
    \ John F. Haverty.\n      TIP Login Notes.\n      Bolt Beranek and Newman.  1979.\n\
    \                        Table of Contents\n1. Introduction                  \
    \                               2\n2. Names and Addresses                    \
    \                      3\n2.1 A distributed database approach                \
    \             4\n2.2 Delivery                                                \
    \    5\n     2.2.1 Additional delivery options                          7\n  \
    \   2.2.2 Failures                                             8\n3. Relationship\
    \ to TIP Login database                           9\n4. Relationship to RFC 753\
    \                                     10\n4.1 Compatibility                  \
    \                            10\n     4.1.1 Outgoing message                 \
    \                   10\n          4.1.1.1 RFC 753                            \
    \          10\n          4.1.1.2 This proposal                               \
    \ 11\n     4.1.2 Messages in transit                                 12\n    \
    \ 4.1.3 Incoming mail                                       12\n5. Implications\
    \ of an internetwork message environment         13\n5.1 Birthplaces         \
    \                                       13\n     5.1.1 ID resolution         \
    \                              13\n     5.1.2 Hosts in an internet environment\
    \                    13\n     5.1.3 Orphans                                  \
    \           14\n6. Conclusions                                               \
    \  15\n                      List of Figures\nFigure 4-1:  The Internet Environment\
    \                          10\n"
