- title: __initial_text__
  contents:
  - '                 Hyper Text Caching Protocol (HTCP/0.0)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes HTCP, a protocol for discovering HTTP caches\n\
    \   and cached data, managing sets of HTTP caches, and monitoring cache\n   activity.\
    \  This is an experimental protocol, one among several\n   proposals to perform\
    \ these functions.\n"
- title: 1.  Definitions, Rationale and Scope
  contents:
  - "1.  Definitions, Rationale and Scope\n   1.1.  HTTP/1.1 (see [RFC2616]) permits\
    \ the transfer of web objects\n   from \"origin servers,\" possibly via \"proxies\"\
    \ (which are allowed\n   under some circumstances to \"cache\" such objects for\
    \ subsequent\n   reuse) to \"clients\" which consume the object in some way, usually\
    \ by\n   displaying it as part of a \"web page.\"  HTTP/1.0 and later permit\n\
    \   \"headers\" to be included in a request and/or a response, thus\n   expanding\
    \ upon the HTTP/0.9 (and earlier) behaviour of specifying\n   only a URI in the\
    \ request and offering only a body in the response.\n   1.2.  ICP (see [RFC2186])\
    \ permits caches to be queried as to their\n   content, usually by other caches\
    \ who are hoping to avoid an expensive\n   fetch from a distant origin server.\
    \  ICP was designed with HTTP/0.9\n   in mind, such that only the URI (without\
    \ any headers) is used when\n   describing cached content, and the possibility\
    \ of multiple compatible\n   bodies for the same URI had not yet been imagined.\n\
    \   1.3.  This document specifies a Hyper Text Caching Protocol (HTCP)\n   which\
    \ permits full request and response headers to be used in cache\n   management,\
    \ and expands the domain of cache management to include\n   monitoring a remote\
    \ cache's additions and deletions, requesting\n   immediate deletions, and sending\
    \ hints about web objects such as the\n   third party locations of cacheable objects\
    \ or the measured\n   uncacheability or unavailability of web objects.\n"
- title: 2.  HTCP Protocol
  contents:
  - "2.  HTCP Protocol\n   2.1.  All multi-octet HTCP protocol elements are transmitted\
    \ in\n   network byte order.  All RESERVED fields should be set to binary zero\n\
    \   by senders and left unexamined by receivers.  Headers must be\n   presented\
    \ with the CRLF line termination, as in HTTP.\n   2.2.  Any hostnames specified\
    \ should be compatible between sender and\n   receiver, such that if a private\
    \ naming scheme (such as HOSTS.TXT or\n   NIS) is in use, names depending on such\
    \ schemes will only be sent to\n   HTCP neighbors who are known to participate\
    \ in said schemes.  Raw\n   addresses (dotted quad IPv4, or colon-format IPv6)\
    \ are universal, as\n   are public DNS names.  Use of private names or addresses\
    \ will require\n   special operational care.\n   2.3.  HTCP messages may be sent\
    \ as UDP datagrams, or over TCP\n   connections.  UDP must be supported.  HTCP\
    \ agents must not be\n   isolated from NETWORK failures and delays.  An HTCP agent\
    \ should be\n   prepared to act in useful ways when no response is forthcoming,\
    \ or\n   when responses are delayed or reordered or damaged.  TCP is optional\n\
    \   and is expected to be used only for protocol debugging.  The IANA has\n  \
    \ assigned port 4827 as the standard TCP and UDP port number for HTCP.\n   2.4.\
    \  A set of configuration variables concerning transport\n   characteristics should\
    \ be maintained for each agent which is capable\n   of initiating HTCP transactions,\
    \ perhaps with a set of per-agent\n   global defaults.  These variables are:\n\
    \   Maximum number of unacknowledged transactions before a \"failure\" is\n  \
    \ imputed.\n   Maximum interval without a response to some transaction before\
    \ a\n   \"failure\" is imputed.\n   Minimum interval before trying a new transaction\
    \ after a failure.\n   2.5. An HTCP Message has the following general format:\n\
    \   +---------------------+\n   |        HEADER       | tells message length and\
    \ protocol versions\n   +---------------------+\n   |         DATA        | HTCP\
    \ message (varies per major version number)\n   +---------------------+\n   |\
    \         AUTH        | optional authentication for transaction\n   +---------------------+\n\
    \   2.6. An HTCP/*.* HEADER has the following format:\n                 +0 (MSB)\
    \                            +1 (LSB)\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0: |                             LENGTH                            |\n   \
    \   +   +   +   +   +   +   +   +   +   +   +   +   +   +   +   +   +\n   2: |\
    \                             LENGTH                            |\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   2: |             MAJOR             |             MINOR             |\n   \
    \   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   LENGTH\
    \  is the message length, inclusive of all header and data\n           octets,\
    \ including the LENGTH field itself.  This field will\n           be equal to\
    \ the datagram payload size (\"record length\") if a\n           datagram protocol\
    \ is in use, and can include padding, i.e.,\n           not all octets of the\
    \ message need be used in the DATA and\n           AUTH sections.\n   MAJOR  \
    \ is the major version number (0 for this specification).  The\n           DATA\
    \ section of an HTCP message need not be upward or\n           downward compatible\
    \ between different major version numbers.\n   MINOR   is the minor version number\
    \ (0 for this specification).\n           Feature levels and interpretation rules\
    \ can vary depending on\n           this field, in particular RESERVED fields\
    \ can take on new\n           (though optional) meaning in successive minor version\
    \ numbers\n           within the same major version number.\n   2.6.1.  It is\
    \ expected that an HTCP initiator will know the version\n   number of a prospective\
    \ HTCP responder, or that the initiator will\n   probe using declining values\
    \ for MINOR and MAJOR (beginning with the\n   highest locally supported value)\
    \ and locally cache the probed version\n   number of the responder.\n   2.6.2.\
    \  Higher MAJOR numbers are to be preferred, as are higher MINOR\n   numbers within\
    \ a particular MAJOR number.\n   2.7. An HTCP/0.* DATA has the following structure:\n\
    \                 +0 (MSB)                            +1 (LSB)\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0: |                             LENGTH                            |\n   \
    \   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   2: |\
    \    OPCODE     |   RESPONSE    |        RESERVED       |F1 |RR |\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   4: |                           TRANS-ID                            |\n   \
    \   +   +   +   +   +   +   +   +   +   +   +   +   +   +   +   +   +\n   6: |\
    \                           TRANS-ID                            |\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   8: |                                                               |\n   \
    \   /                            OP-DATA                            /\n      /\
    \                                                               /\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   LENGTH    is the number of octets of the message which are reserved\n    \
    \         for the DATA section, including the LENGTH field itself.\n         \
    \    This number can include padding, i.e., not all octets\n             reserved\
    \ by LENGTH need be used in OP-DATA.\n   OPCODE    is the operation code of an\
    \ HTCP transaction.  An HTCP\n             transaction can consist of multiple\
    \ HTCP messages, e.g., a\n             request (sent by the initiator), or a response\
    \ (sent by the\n             responder).\n   RESPONSE  is a numeric code indicating\
    \ the success or failure of a\n             transaction.  It should be set to\
    \ zero (0) by requestors\n             and ignored by responders.  Each operation\
    \ has its own set\n             of response codes, which are described later.\
    \  The overall\n             message has a set of response codes which are as\
    \ follows:\n             0   authentication wasn't used but is required\n    \
    \         1   authentication was used but unsatisfactorily\n             2   opcode\
    \ not implemented\n             3   major version not supported\n            \
    \ 4   minor version not supported (major version is ok)\n             5   inappropriate,\
    \ disallowed, or undesirable opcode\n             The above response codes all\
    \ indicate errors and all depend\n             for their visibility on MO=1 (as\
    \ specified below).\n   RR        is a flag indicating whether this message is\
    \ a request (0)\n             or response (1).\n   F1        is overloaded such\
    \ that it is used differently by\n             requestors than by responders.\
    \  If RR=0, then F1 is defined\n             as RD.  If RR=1, then F1 is defined\
    \ as MO.\n   RD        is a flag which if set to 1 means that a response is\n\
    \             desired.  Some OPCODEs require RD to be set to 1 to be\n       \
    \      meaningful.\n   MO        (em-oh) is a flag which indicates whether the\
    \ RESPONSE code\n             is to be interpreted as a response to the overall\
    \ message\n             (fixed fields in DATA or any field of AUTH) [MO=1] or\
    \ as a\n             response to fields in the OP-DATA [MO=0].\n   TRANS-ID  is\
    \ a 32-bit value which when combined with the initiator's\n             network\
    \ address, uniquely identifies this HTCP transaction.\n             Care should\
    \ be taken not to reuse TRANS-ID's within the\n             life-time of a UDP\
    \ datagram.\n   OP-DATA   is opcode-dependent and is defined below, per opcode.\n\
    \   2.8. An HTCP/0.0 AUTH has the following structure:\n                 +0 (MSB)\
    \                            +1 (LSB)\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \    0: |                             LENGTH                            |\n  \
    \     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n    2:\
    \ |                            SIG-TIME                           |\n       +\
    \   +   +   +   +   +   +   +   +   +   +   +   +   +   +   +   +\n    4: |  \
    \                          SIG-TIME                           |\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \    6: |                           SIG-EXPIRE                          |\n  \
    \     +   +   +   +   +   +   +   +   +   +   +   +   +   +   +   +   +\n    8:\
    \ |                           SIG-EXPIRE                          |\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   10: |                                                               |\n  \
    \     /                            KEY-NAME                           /\n    \
    \   /                                                               /\n      \
    \ +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n    n: |\
    \                                                               |\n       /  \
    \                          SIGNATURE                          /\n       /    \
    \                                                           /\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   LENGTH      is the number of octets used by the AUTH, including the\n    \
    \           LENGTH field itself.  If the optional AUTH is not being\n        \
    \       transmitted, this field should be set to 2 (two).  LENGTH\n          \
    \     can include padding, which means that not all octets\n               reserved\
    \ by LENGTH will necessarily be consumed by\n               SIGNATURE.\n   SIG-TIME\
    \    is an unsigned binary count of the number of seconds\n               since\
    \ 00:00:00 1-Jan-70 UTC at the time the SIGNATURE is\n               generated.\n\
    \   SIG-EXPIRE  is an unsigned binary count of the number of seconds\n       \
    \        since 00:00:00 1-Jan-70 UTC at the time the SIGNATURE is\n          \
    \     considered to have expired.\n   KEY-NAME    is a COUNTSTR [3.1] which specifies\
    \ the name of a shared\n               secret.  (Each HTCP implementation is expected\
    \ to allow\n               configuration of several shared secrets, each of which\n\
    \               will have a name.)\n   SIGNATURE   is a COUNTSTR [3.1] which holds\
    \ the HMAC-MD5 digest (see\n               [RFC 2104]), with a B value of 64,\
    \ of the following\n               elements, each of which is digested in its\
    \ \"on the wire\"\n               format, including transmitted padding if any\
    \ is covered\n               by a field's associated LENGTH:\n               IP\
    \ SRC ADDR                           [4 octets]\n               IP SRC PORT  \
    \                         [2 octets]\n               IP DST ADDR             \
    \              [4 octets]\n               IP DST PORT                        \
    \   [2 octets]\n               HTCP MAJOR version number             [1 octet]\n\
    \               HTCP MINOR version number             [1 octet]\n            \
    \   SIG-TIME                              [4 octets]\n               SIG-EXPIRE\
    \                            [4 octets]\n               HTCP DATA            \
    \                 [variable]\n               KEY-NAME (the whole COUNTSTR [3.1])\
    \   [variable]\n   2.8.1.  Shared secrets should be cryptorandomly generated and\
    \ should\n   be at least a few hundred octets in size.\n"
- title: 3.  Data Types
  contents:
  - "3.  Data Types\n   HTCP/0.* data types are defined as follows:\n   3.1. COUNTSTR\
    \ is a counted string whose format is:\n                 +0 (MSB)            \
    \                +1 (LSB)\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0: |                             LENGTH                            |\n   \
    \   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   2: |\
    \                                                               |\n      /   \
    \                           TEXT                             /\n      /      \
    \                                                         /\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   LENGTH  is the number of octets which will follow in TEXT.  This\n       \
    \    field is *not* self-inclusive as is the case with other HTCP\n          \
    \ LENGTH fields.\n   TEXT    is a stream of uninterpreted octets, usually ISO8859-1\n\
    \           \"characters\".\n   3.2.  SPECIFIER is used with the TST and CLR request\
    \ messages,\n   defined below.  Its format is:\n      +---------------------+\n\
    \      |        METHOD       | : COUNTSTR\n      +---------------------+\n   \
    \   |         URI         | : COUNTSTR\n      +---------------------+\n      |\
    \       VERSION       | : COUNTSTR\n      +---------------------+\n      |   \
    \    REQ-HDRS      | : COUNTSTR\n      +---------------------+\n   METHOD    (Since\
    \ HTCP only returns headers, methods GET and HEAD are\n             equivalent.)\n\
    \   URI       (If the URI is a URL, it should always include a \":\"<port>\n \
    \            specifier, but in its absense, port 80 should be imputed by\n   \
    \          a receiver.)\n   VERSION   is an entire HTTP version string such as\"\
    \ HTTP/1.1\".\n             VERSION strings with prefixes other than \"HTTP/\"\
    \ or with\n             version numbers less than \"1.1\" are outside the domain\
    \ of\n             this specification.\n   REQ-HDRS  are those presented by an\
    \ HTTP initiator.  These headers\n             should include end-to-end but NOT\
    \ hop-by-hop headers, and\n             they can be canonicalized (aggregation\
    \ of \"Accept:\" is\n             permitted, for example.)\n   3.3.  DETAIL is\
    \ used with the TST response message, defined below.\n   Its format is:\n    \
    \  +---------------------+\n      |      RESP-HDRS      | : COUNTSTR\n      +---------------------+\n\
    \      |     ENTITY-HDRS     | : COUNTSTR\n      +---------------------+\n   \
    \   |     CACHE-HDRS      | : COUNTSTR\n      +---------------------+\n   3.4.\
    \  IDENTITY is used with the MON request and SET response message,\n   defined\
    \ below.  Its format is:\n      +---------------------+\n      |      SPECIFIER\
    \      |\n      +---------------------+\n      |        DETAIL       |\n     \
    \ +---------------------+\n"
- title: 4.  Cache Headers
  contents:
  - "4.  Cache Headers\n   HTCP/0.0 CACHE-HDRS consist of zero or more of the following\
    \ headers:\n   Cache-Vary: <header-name> ...\n      The sender of this header\
    \ has learned that content varies on a set\n      of headers different from the\
    \ set given in the object's Vary:\n      header.  Cache-Vary:, if present, overrides\
    \ the object's Vary:\n      header.\n   Cache-Location: <cache-hostname>:<port>\
    \ ...\n      The sender of this header has learned of one or more proxy caches\n\
    \      who are holding a copy of this object.  Probing these caches with\n   \
    \   HTCP may result in discovery of new, close-by (preferrable to\n      current)\
    \ HTCP neighbors.\n   Cache-Policy: [no-cache] [no-share] [no-cache-cookie]\n\
    \      The sender of this header has learned that the object's caching\n     \
    \ policy has more detail than is given in its response headers.\n      no-cache\
    \          means that it is uncacheable (no reason given),\n                 \
    \       but may be shareable between simultaneous\n                        requestors.\n\
    \      no-share          means that it is unshareable (no reason given),\n   \
    \                     and per-requestor tunnelling is always\n               \
    \         required).\n      no-cache-cookie   means that the content could change\
    \ as a result\n                        of different, missing, or even random cookies\n\
    \                        being included in the request headers, and that\n   \
    \                     caching is inadvisable.\n   Cache-Flags: [incomplete]\n\
    \      The sender of this header has modified the object's caching policy\n  \
    \    locally, such that requesters may need to treat this response\n      specially,\
    \ i.e., not necessarily in accordance with the object's\n      actual policy.\n\
    \      incomplete   means that the response headers and/or entity headers\n  \
    \                 given in this response are not known to be complete,\n     \
    \              and may not be suitable for use as a cache key.\n   Cache-Expiry:\
    \ <date>\n      The sender of this header has learned that this object should\
    \ be\n      considered to have expired at a time different than that indicated\n\
    \      by its response headers.  The format is the same as HTTP/1.1\n      Expires:.\n\
    \   Cache-MD5: <discovered content MD5>\n      The sender of this header has computed\
    \ an MD5 checksum for this\n      object which is either different from that given\
    \ in the object's\n      Content-MD5:  header, or is being supplied since the\
    \ object has no\n      Content-MD5 header.  The format is the same as HTTP/1.1\
    \ Content-\n      MD5:.\n   Cache-to-Origin: <origin> <rtt> <samples> <hops>\n\
    \      The sender of this header has measured the round trip time to an\n    \
    \  origin server (given as a hostname or literal address).  The <rtt>\n      is\
    \ the average number of seconds, expressed as decimal ASCII with\n      arbitrary\
    \ precision and no exponent.  <Samples> is the number of\n      RTT samples which\
    \ have had input to this average.  <Hops> is the\n      number of routers between\
    \ the cache and the origin, expressed as\n      decimal ASCII with arbitrary precision\
    \ and no exponent, or 0 if\n      the cache doesn't know.\n"
- title: 6.  HTCP Operations
  contents:
  - "6.  HTCP Operations\n   HTCP/0.* opcodes and their respective OP-DATA are defined\
    \ below:\n   6.1. NOP (OPCODE 0):\n   This is an HTCP-level \"ping.\"  Responders\
    \ are encouraged to process\n   NOP's with minimum delay since the requestor may\
    \ be using the NOP RTT\n   (round trip time) for configuration or mapping purposes.\
    \  The\n   RESPONSE code for a NOP is always zero (0).  There is no OP-DATA for\n\
    \   a NOP.  NOP requests with RD=0 cause no processing to occur at all.\n   6.2.\
    \ TST (OPCODE 1):\n   Test for the presence of a specified content entity in a\
    \ proxy cache.\n   TST requests with RD=0 cause no processing to occur at all.\n\
    \   TST requests have the following OP-DATA:\n                 +0 (MSB)      \
    \                      +1 (LSB)\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0: |                                                               |\n   \
    \   /                          SPECIFIER                            /\n      /\
    \                                                               /\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   RESPONSE codes for TST are as follows:\n   0   entity is present in responder's\
    \ cache\n   1   entity is not present in responder's cache\n   TST responses have\
    \ the following OP-DATA, if RESPONSE is zero (0):\n                 +0 (MSB) \
    \                           +1 (LSB)\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0: |                                                               |\n   \
    \   /                             DETAIL                            /\n      /\
    \                                                               /\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   Note:  The response headers returned by a positive TST can be of a\n     \
    \     stale object.  Requestors should be prepared to cope with this\n       \
    \   condition, either by using the responder as a source for this\n          object\
    \ (which could cause the responder to simply refresh it)\n          or by choosing\
    \ a different responder.\n   TST responses have the following OP-DATA, if RESPONSE\
    \ is one (1):\n                 +0 (MSB)                            +1 (LSB)\n\
    \      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   0:\
    \ |                                                               |\n      / \
    \                          CACHE-HDRS                          /\n      /    \
    \                                                           /\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   6.3. MON (OPCODE 2):\n   Monitor activity in a proxy cache's local object\
    \ store (adds, deletes,\n   replacements, etc).  Since interleaving of HTCP transactions\
    \ over a\n   single pair of UDP endpoints is not supported, it is recommended\
    \ that a\n   unique UDP endpoint be allocated by the requestor for each concurrent\n\
    \   MON request.  MON requests with RD=0 are equivalent to those with RD=1\n \
    \  and TIME=0; that is, they will cancel any outstanding MON transaction.\n  \
    \ MON requests have the following OP-DATA structure:\n                  +0 (MSB)\n\
    \      +---+---+---+---+---+---+---+---+\n   0: |             TIME           \
    \   |\n      +---+---+---+---+---+---+---+---+\n   TIME  is the number of seconds\
    \ of monitoring output desired by the\n         initiator.  Subsequent MON requests\
    \ from the same initiator\n         with the same TRANS-ID should update the time\
    \ on a ongoing MON\n         transaction.  This is called \"overlapping renew.\"\
    \n   RESPONSE codes for MON are as follows:\n   0   accepted, OP-DATA is present\
    \ and valid\n   1   refused (quota error -- too many MON's are active)\n   MON\
    \ responses have the following OP-DATA structure, if RESPONSE is\n   zero (0):\n\
    \                 +0 (MSB)                            +1 (LSB)\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0: |             TIME              |     ACTION    |     REASON    |\n   \
    \   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   2: |\
    \                                                               |\n      /   \
    \                         IDENTITY                           /\n      /      \
    \                                                         /\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   TIME      is the number of seconds remaining for this MON\n             transaction.\n\
    \   ACTION    is a numeric code indicating a cache population action.\n      \
    \       Codes are:\n             0   an entity has been added to the cache\n \
    \            1   an entity in the cache has been refreshed\n             2   an\
    \ entity in the cache has been replaced\n             3   an entity in the cache\
    \ has been deleted\n   REASON    is a numeric code indicating the reason for an\
    \ ACTION.\n             Codes are:\n             0   some reason not covered by\
    \ the other REASON codes\n             1   a proxy client fetched this entity\n\
    \             2   a proxy client fetched with caching disallowed\n           \
    \  3   the proxy server prefetched this entity\n             4   the entity expired,\
    \ per its headers\n             5   the entity was purged due to caching storage\
    \ limits\n   6.4. SET (OPCODE 3):\n   Inform a cache of the identity of an object.\
    \  This is a \"push\"\n   transaction, whereby cooperating caches can share information\
    \ such as\n   updated Age/Date/Expires headers (which might result from an origin\n\
    \   \"304 Not modified\" HTTP response) or updated cache headers (which\n   might\
    \ result from the discovery of non-authoritative \"vary\"\n   conditions or from\
    \ learning of second or third party cache locations\n   for this entity.  RD is\
    \ honoured.\n   SET requests have the following OP-DATA structure:\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0: |                                                               |\n   \
    \   /                            IDENTITY                           /\n      /\
    \                                                               /\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   RESPONSE  codes are as follows:\n             0   identity accepted, thank\
    \ you\n             1   identity ignored, no reason given, thank you\n   SET responses\
    \ have no OP-DATA.\n   6.5. CLR (OPCODE 4):\n   Tell a cache to completely forget\
    \ about an entity.  RD is honoured.\n   CLR requests have the following OP-DATA\
    \ structure:\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0: |                   RESERVED                    |     REASON    |\n   \
    \   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   2: |\
    \                                                               |\n      /   \
    \                        SPECIFIER                           /\n      /      \
    \                                                         /\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   REASON    is a numeric code indicating the reason why the requestor\n    \
    \         is asking that this entity be removed.  The codes are as\n         \
    \    follows:\n             0   some reason not better specified by another code\n\
    \             1   the origin server told me that this entity does not\n      \
    \           exist\n   RESPONSE  codes are as follows:\n             0   i had\
    \ it, it's gone now\n             1   i had it, i'm keeping it, no reason given.\n\
    \             2   i didn't have it\n   CLR responses have no OP-DATA.\n   Clearing\
    \ a URI without specifying response, entity, or cache headers\n   means to clear\
    \ all entities using that URI.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   If the optional AUTH element is not used, it\
    \ is possible for\n   unauthorized third parties to both view and modify a cache\
    \ using the\n   HTCP protocol.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Mattias Wingstedt of Idonex brought key insights to\
    \ the development\n   of this protocol.  David Hankins helped clarify this document.\n"
- title: 9.  References
  contents:
  - "9.  References\n   [RFC2396] Berners-Lee, T., Fielding, R., and L. Masinter,\
    \ \"Uniform\n             Resource Identifiers (URI): Generic Syntax\", RFC 2396,\n\
    \             August 1998.\n   [RFC2616] Fielding, R., Gettys, J., Mogul, J.,\
    \ Frystyk, H., Masinter,\n             L., Leach, P. and T. Berners-Lee, \"Hypertext\
    \ Transfer\n             Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2104]\
    \ Krawczyk, H., Bellare, M. and R. Canetti, \"HMAC: Keyed-\n             Hashing\
    \ for Message Authentication\", RFC 2104, February,\n             1997.\n   [RFC2186]\
    \ Wessels, D. and K. Claffy, \"Internet Cache Protocol (ICP),\n             version\
    \ 2\", RFC 2186, September 1997.\n"
- title: 10.  Authors' Addresses
  contents:
  - "10.  Authors' Addresses\n   Paul Vixie\n   Internet Software Consortium\n   950\
    \ Charter Street\n   Redwood City, CA 94063\n   Phone: +1 650 779 7001\n   EMail:\
    \ vixie@isc.org\n   Duane Wessels\n   National Lab for Applied Network Research\n\
    \   USCD, 9500 Gilman Drive\n   La Jolla, CA 92093\n   Phone: +1 303 497 1822\n\
    \   EMail: wessels@nlanr.net\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
