- title: __initial_text__
  contents:
  - '      Techniques to Improve the Scalability of RSVP-TE Deployments

    '
- title: Abstract
  contents:
  - "Abstract\n   Networks that utilize RSVP-TE LSPs are encountering implementations\n\
    \   that have a limited ability to support the growth in the number of\n   LSPs\
    \ deployed.\n   This document defines two techniques, Refresh-Interval Independent\n\
    \   RSVP (RI-RSVP) and Per-Peer Flow Control, that reduce the number of\n   processing\
    \ cycles required to maintain RSVP-TE LSP state in Label\n   Switching Routers\
    \ (LSRs) and hence allow implementations to support\n   larger scale deployments.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8370.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Required Support for RFC 2961 . . . . . . . . . . . .\
    \ . . . .   4\n     2.1.  Required Functionality from RFC 2961  . . . . . . .\
    \ . . .   4\n     2.2.  Making Acknowledgements Mandatory . . . . . . . . . .\
    \ . .   4\n   3.  Refresh-Interval Independent RSVP (RI-RSVP) . . . . . . . .\
    \ .   5\n     3.1.  Capability Advertisement  . . . . . . . . . . . . . . . .\
    \   6\n     3.2.  Compatibility . . . . . . . . . . . . . . . . . . . . . .  \
    \ 6\n   4.  Per-Peer Flow Control . . . . . . . . . . . . . . . . . . . .   6\n\
    \     4.1.  Capability Advertisement  . . . . . . . . . . . . . . . .   7\n  \
    \   4.2.  Compatibility . . . . . . . . . . . . . . . . . . . . . .   7\n   5.\
    \  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7\n     5.1.\
    \  Capability Object Values  . . . . . . . . . . . . . . . .   7\n   6.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .   8\n   7.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n     7.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .   8\n     7.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .   9\n   Appendix A.  Recommended\
    \ Defaults . . . . . . . . . . . . . . . .  10\n   Acknowledgements  . . . . .\
    \ . . . . . . . . . . . . . . . . . . .  10\n   Contributors  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .  11\n   Authors' Addresses  . . . . . .\
    \ . . . . . . . . . . . . . . . . .  11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Networks that utilize RSVP-TE [RFC3209] LSPs are encountering\n\
    \   implementations that have a limited ability to support the growth in\n   the\
    \ number of LSPs deployed.\n   The set of RSVP Refresh Overhead Reduction procedures\
    \ [RFC2961]\n   serves as a powerful toolkit for RSVP-TE implementations to help\n\
    \   cover a majority of the concerns about soft-state scaling.  However,\n   even\
    \ with these tools in the toolkit, analysis of existing\n   implementations [RFC5439]\
    \ indicates that the processing required\n   beyond a certain scale may still\
    \ cause significant disruption to a\n   Label Switching Router (LSR).\n   This\
    \ document builds on existing scaling work and analysis and\n   defines protocol\
    \ extensions to help RSVP-TE deployments push the\n   envelope further on scaling\
    \ by increasing the threshold above which\n   an LSR struggles to achieve sufficient\
    \ processing to maintain LSP\n   state.\n   This document defines two techniques,\
    \ Refresh-Interval Independent\n   RSVP (RI-RSVP) and Per-Peer Flow Control, that\
    \ cut down the number of\n   processing cycles required to maintain LSP state.\
    \  RI-RSVP helps\n   completely eliminate RSVP's reliance on refreshes and refresh\n\
    \   timeouts, while Per-Peer Flow Control enables a busy RSVP speaker to\n   apply\
    \ back pressure to its peer(s).  This document defines a unique\n   RSVP Capability\
    \ [RFC5063] for each technique (support for the\n   CAPABILITY object is a prerequisite\
    \ for implementing these\n   techniques).  Note that the Per-Peer Flow-Control\
    \ technique requires\n   the RI-RSVP technique as a prerequisite.  In order to\
    \ reap maximum\n   scaling benefits, it is strongly recommended that implementations\n\
    \   support both techniques and have them enabled by default.  Both\n   techniques\
    \ are fully backward compatible and can be deployed\n   incrementally.\n   The\
    \ key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n\
    \   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\"\
    , and\n   \"OPTIONAL\" in this document are to be interpreted as described in\
    \ BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear in all\n   capitals,\
    \ as shown here.\n"
- title: 2.  Required Support for RFC 2961
  contents:
  - "2.  Required Support for RFC 2961\n   The techniques defined in Sections 3 and\
    \ 4 are based on proposals\n   made in [RFC2961].  Implementations of these techniques\
    \ need to\n   support the RSVP messages and procedures defined in [RFC2961] with\n\
    \   some minor modifications and alterations to recommended time\n   intervals\
    \ and iteration counts (see Appendix A for the set of\n   recommended defaults).\n"
- title: 2.1.  Required Functionality from RFC 2961
  contents:
  - "2.1.  Required Functionality from RFC 2961\n   An implementation that supports\
    \ the techniques discussed in Sections\n   3 and 4 must support the functionality\
    \ described in [RFC2961] as\n   follows:\n   o  It MUST indicate support for RSVP\
    \ Refresh Overhead Reduction\n      extensions (as specified in Section 2 of [RFC2961]).\n\
    \   o  It MUST support receipt of any RSVP Refresh Overhead Reduction\n      message\
    \ as defined in [RFC2961].\n   o  It MUST initiate all RSVP Refresh Overhead Reduction\
    \ mechanisms as\n      defined in [RFC2961] (including the SRefresh message) with\
    \ the\n      default behavior being to initiate the mechanisms; however, a\n \
    \     configuration override should be offered.\n   o  It MUST support reliable\
    \ delivery of Path/Resv and the\n      corresponding Tear/Err messages (as specified\
    \ in Section 4 of\n      [RFC2961]).\n   o  It MUST support retransmission of\
    \ all unacknowledged RSVP-TE\n      messages using exponential backoff (as specified\
    \ in Section 6 of\n      [RFC2961]).\n"
- title: 2.2.  Making Acknowledgements Mandatory
  contents:
  - "2.2.  Making Acknowledgements Mandatory\n   The reliable message delivery mechanism\
    \ specified in [RFC2961] states\n   that \"Nodes receiving a non-out of order\
    \ [sic] message containing a\n   MESSAGE_ID object with the ACK_Desired flag set,\
    \ SHOULD respond with\n   a MESSAGE_ID_ACK object.\"\n   In an implementation\
    \ that supports the techniques discussed in\n   Sections 3 and 4, nodes receiving\
    \ a non-out-of-order message\n   containing a MESSAGE_ID object with the ACK_Desired\
    \ flag set MUST\n   respond with a MESSAGE_ID_ACK object.  This MESSAGE_ID_ACK\
    \ object can\n   be packed with other MESSAGE_ID_ACK or MESSAGE_ID_NACK objects\
    \ and\n   sent in an Ack message (or piggybacked in any other RSVP message).\n\
    \   This improvement to the predictability of the system in terms of\n   reliable\
    \ message delivery is key for being able to take any action\n   based on a non-receipt\
    \ of an ACK.\n"
- title: 3.  Refresh-Interval Independent RSVP (RI-RSVP)
  contents:
  - "3.  Refresh-Interval Independent RSVP (RI-RSVP)\n   The RSVP protocol relies\
    \ on periodic refreshes for state\n   synchronization between RSVP neighbors and\
    \ recovery from lost RSVP\n   messages.  It relies on a refresh timeout for stale-state\
    \ cleanup.\n   The primary motivation behind introducing the notion of Refresh-\n\
    \   Interval Independent RSVP (RI-RSVP) is to completely eliminate RSVP's\n  \
    \ reliance on refreshes and refresh timeouts.  This is done by simply\n   increasing\
    \ the refresh interval to a fairly large value.  [RFC2961]\n   and [RFC5439] talk\
    \ about increasing the value of the refresh interval\n   to provide linear improvement\
    \ of transmission overhead, but they also\n   point out the degree of functionality\
    \ that is lost by doing so.  This\n   section revisits this notion, but also sets\
    \ out additional\n   requirements to make sure that there is no loss of functionality\n\
    \   incurred by increasing the value of the refresh interval.\n   An implementation\
    \ that supports RI-RSVP:\n   o  MUST support all of the requirements specified\
    \ in Section 2.\n   o  MUST make the default value of the configurable refresh\
    \ interval\n      (R) be a large value (tens of minutes).  A default value of\
    \ 20\n      minutes is RECOMMENDED by this document.\n   o  MUST use a separate\
    \ shorter refresh interval for refreshing state\n      associated with unacknowledged\
    \ Path/Resv (uR) messages.  A default\n      value of 30 seconds is RECOMMENDED\
    \ by this document.\n   o  MUST implement coupling the state of individual LSPs\
    \ with the\n      state of the corresponding RSVP-TE signaling adjacency.  When\
    \ an\n      RSVP-TE speaker detects RSVP-TE signaling adjacency failure, the\n\
    \      speaker MUST act as if all the Path and Resv states learned via\n     \
    \ the failed signaling adjacency have timed out.\n   o  MUST make use of the Hello\
    \ session based on the Node-ID ([RFC3209]\n      [RFC4558]) for detection of RSVP-TE\
    \ signaling adjacency failures.\n      A default value of 9 seconds is RECOMMENDED\
    \ by this document for\n      the configurable node hello interval (as opposed\
    \ to the default\n      value of 5 milliseconds proposed in Section 5.3 of [RFC3209]).\n\
    \   o  MUST indicate support for RI-RSVP via the CAPABILITY object\n      [RFC5063]\
    \ in Hello messages.\n"
- title: 3.1.  Capability Advertisement
  contents:
  - "3.1.  Capability Advertisement\n   An implementation supporting the RI-RSVP technique\
    \ MUST set a new\n   flag, RI-RSVP Capable, in the CAPABILITY object signaled\
    \ in Hello\n   messages.  The following bit indicates that the sender supports\n\
    \   RI-RSVP:\n      Bit Number 28 (0x0008) - RI-RSVP Capable (I-bit)\n   Any node\
    \ that sets the new I-bit in its CAPABILITY object MUST also\n   set the Refresh-Reduction-Capable\
    \ bit [RFC2961] in the common header\n   of all RSVP-TE messages.  If a peer sets\
    \ the I-bit in the CAPABILITY\n   object but does not set the Refresh-Reduction-Capable\
    \ bit, then the\n   RI-RSVP functionality MUST NOT be activated for that peer.\n"
- title: 3.2.  Compatibility
  contents:
  - "3.2.  Compatibility\n   The RI-RSVP functionality MUST NOT be activated with\
    \ a peer that does\n   not indicate support for this functionality.  Inactivation\
    \ of the\n   RI-RSVP functionality MUST result in the use of the traditional\n\
    \   smaller refresh interval [RFC2205].\n"
- title: 4.  Per-Peer Flow Control
  contents:
  - "4.  Per-Peer Flow Control\n   The functionality discussed in this section provides\
    \ an RSVP speaker\n   with the ability to apply back pressure to its peer(s) to\
    \ reduce/\n   eliminate a significant portion of the RSVP-TE control message load.\n\
    \   An implementation that supports Per-Peer Flow Control:\n   o  MUST support\
    \ all of the requirements specified in Section 2.\n   o  MUST support RI-RSVP\
    \ (Section 3).\n   o  MUST treat lack of ACKs from a peer as an indication of\
    \ a peer's\n      RSVP-TE control-plane congestion.  If congestion is detected,\
    \ the\n      local system MUST throttle RSVP-TE messages to the affected peer.\n\
    \      This MUST be done on a per-peer basis.  (Per-peer throttling MAY\n    \
    \  be implemented by a traffic-shaping mechanism that proportionally\n      reduces\
    \ the RSVP-signaling packet rate as the number of\n      outstanding ACKs increases.\
    \  When the number of outstanding ACKs\n      decreases, the send rate would be\
    \ adjusted up again.)\n   o  SHOULD use a Retry Limit (Rl) value of 7 (Section\
    \ 6.2 of [RFC2961]\n      suggests using 3).\n   o  SHOULD prioritize Hello messages\
    \ and messages carrying\n      Acknowledgements over other RSVP messages.\n  \
    \ o  SHOULD prioritize Tear/Error over trigger Path/Resv (messages that\n    \
    \  bring up new LSP state) sent to a peer when the local system\n      detects\
    \ RSVP-TE control-plane congestion in the peer.\n   o  MUST indicate support for\
    \ this technique via the CAPABILITY object\n      [RFC5063] in Hello messages.\n"
- title: 4.1.  Capability Advertisement
  contents:
  - "4.1.  Capability Advertisement\n   An implementation supporting the Per-Peer\
    \ Flow-Control technique MUST\n   set a new flag, Per-Peer Flow-Control Capable,\
    \ in the CAPABILITY\n   object signaled in Hello messages.  The following bit\
    \ indicates that\n   the sender supports Per-Peer Flow Control:\n      Bit Number\
    \ 27 (0x0010) - Per-Peer Flow-Control Capable (F-bit)\n   Any node that sets the\
    \ new F-bit in its CAPABILITY object MUST also\n   set the Refresh-Reduction-Capable\
    \ bit in the common header of all\n   RSVP-TE messages.  If a peer sets the F-bit\
    \ in the CAPABILITY object\n   but does not set the Refresh-Reduction-Capable\
    \ bit, then the Per-Peer\n   Flow-Control functionality MUST NOT be activated\
    \ for that peer.\n"
- title: 4.2.  Compatibility
  contents:
  - "4.2.  Compatibility\n   The Per-Peer Flow-Control functionality MUST NOT be activated\
    \ with a\n   peer that does not indicate support for this functionality.  If a\n\
    \   peer hasn't indicated that it is capable of participating in Per-Peer\n  \
    \ Flow Control, then it SHOULD NOT be assumed that the peer would\n   always acknowledge\
    \ a non-out-of-order message containing a MESSAGE_ID\n   object with the ACK_Desired\
    \ flag set.\n"
- title: 5.  IANA Considerations
  contents:
  - '5.  IANA Considerations

    '
- title: 5.1.  Capability Object Values
  contents:
  - "5.1.  Capability Object Values\n   IANA maintains the \"Capability Object values\"\
    \ subregistry [RFC5063]\n   within the \"Resource Reservation Protocol (RSVP)\
    \ Parameters\" registry\n   <http://www.iana.org/assignments/rsvp-parameters>.\
    \  IANA has assigned\n   two new Capability Object Value bit flags as follows:\n\
    \      Bit      Hex     Name                                Reference\n      Number\
    \   Value\n      ------------------------------------------------------------------\n\
    \        28     0x0008  RI-RSVP Capable (I)                 Section 3\n      \
    \  27     0x0010  Per-Peer Flow-Control Capable (F)   Section 4\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document does not introduce new security\
    \ issues.  The security\n   considerations pertaining to the original RSVP protocol\
    \ [RFC2205] and\n   RSVP-TE [RFC3209], and those that are described in [RFC5920],\
    \ remain\n   relevant.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2205]  Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and S.\n  \
    \            Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version 1\n    \
    \          Functional Specification\", RFC 2205, DOI 10.17487/RFC2205,\n     \
    \         September 1997, <https://www.rfc-editor.org/info/rfc2205>.\n   [RFC2961]\
    \  Berger, L., Gan, D., Swallow, G., Pan, P., Tommasi, F.,\n              and\
    \ S. Molendini, \"RSVP Refresh Overhead Reduction\n              Extensions\"\
    , RFC 2961, DOI 10.17487/RFC2961, April 2001,\n              <https://www.rfc-editor.org/info/rfc2961>.\n\
    \   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n   \
    \           and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n          \
    \    Tunnels\", RFC 3209, DOI 10.17487/RFC3209, December 2001,\n             \
    \ <https://www.rfc-editor.org/info/rfc3209>.\n   [RFC4558]  Ali, Z., Rahman, R.,\
    \ Prairie, D., and D. Papadimitriou,\n              \"Node-ID Based Resource Reservation\
    \ Protocol (RSVP) Hello:\n              A Clarification Statement\", RFC 4558,\n\
    \              DOI 10.17487/RFC4558, June 2006,\n              <https://www.rfc-editor.org/info/rfc4558>.\n\
    \   [RFC5063]  Satyanarayana, A., Ed. and R. Rahman, Ed., \"Extensions to\n  \
    \            GMPLS Resource Reservation Protocol (RSVP) Graceful\n           \
    \   Restart\", RFC 5063, DOI 10.17487/RFC5063, October 2007,\n              <https://www.rfc-editor.org/info/rfc5063>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC5439]  Yasukawa, S., Farrel, A., and O.\
    \ Komolafe, \"An Analysis of\n              Scaling Issues in MPLS-TE Core Networks\"\
    , RFC 5439,\n              DOI 10.17487/RFC5439, February 2009,\n            \
    \  <https://www.rfc-editor.org/info/rfc5439>.\n   [RFC5920]  Fang, L., Ed., \"\
    Security Framework for MPLS and GMPLS\n              Networks\", RFC 5920, DOI\
    \ 10.17487/RFC5920, July 2010,\n              <https://www.rfc-editor.org/info/rfc5920>.\n"
- title: Appendix A.  Recommended Defaults
  contents:
  - "Appendix A.  Recommended Defaults\n   a.  Refresh Interval (R) - 20 minutes (Section\
    \ 3):\n       Given that an implementation supporting RI-RSVP doesn't rely on\n\
    \       refreshes for state sync between peers, the function of the RSVP\n   \
    \    refresh interval is analogous to that of IGP refresh interval\n       (the\
    \ default of which is typically in the order of tens of\n       minutes).  Choosing\
    \ a default of 20 minutes allows the refresh\n       timer to be randomly set\
    \ to a value in the range [10 minutes\n       (0.5R), 30 minutes (1.5R)].\n  \
    \ b.  Node Hello Interval - 9 seconds (Section 3):\n       [RFC3209] defines the\
    \ hello timeout as 3.5 times the hello\n       interval.  Choosing 9 seconds for\
    \ the node hello interval gives a\n       hello timeout of 3.5 * 9 = 31.5 seconds.\
    \  This puts the hello\n       timeout value in the vicinity of the IGP hello\
    \ timeout value.\n   c.  Retry-Limit (Rl) - 7 (Section 4):\n       Choosing 7\
    \ as the retry-limit results in an overall rapid\n       retransmit phase of 31.5\
    \ seconds.  This matches up with the hello\n       timeout of 31.5 seconds.\n\
    \   d.  Refresh Interval for refreshing state associated with\n       unacknowledged\
    \ Path/Resv messages (uR) - 30 seconds (Section 3):\n       The recommended refresh\
    \ interval (R) value of 20 minutes (for an\n       implementation supporting RI-RSVP)\
    \ cannot be used for refreshing\n       state associated with unacknowledged Path/Resv\
    \ messages.  This\n       document recommends the use of the traditional default\
    \ refresh\n       interval value of 30 seconds for uR.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Yakov Rekhter for initiating\
    \ this\n   work and providing valuable input.  They would like to thank\n   Raveendra\
    \ Torvi and Chandra Ramachandran for participating in the\n   many discussions\
    \ that led to the techniques discussed in this\n   document.  They would also\
    \ like to thank Adrian Farrel, Lou Berger,\n   and Elwyn Davies for providing\
    \ detailed review comments and text\n   suggestions.\n"
- title: Contributors
  contents:
  - "Contributors\n   Markus Jork\n   Juniper Networks\n   Email: mjork@juniper.net\n\
    \   Ebben Aries\n   Juniper Networks\n   Email: exa@juniper.net\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Vishnu Pavan Beeram (editor)\n   Juniper Networks\n  \
    \ Email: vbeeram@juniper.net\n   Ina Minei\n   Google, Inc\n   Email: inaminei@google.com\n\
    \   Rob Shakir\n   Google, Inc\n   Email: rjs@rob.sh\n   Dante Pacella\n   Verizon\n\
    \   Email: dante.j.pacella@verizon.com\n   Tarek Saad\n   Cisco Systems\n   Email:\
    \ tsaad@cisco.com\n"
