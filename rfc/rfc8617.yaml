- title: __initial_text__
  contents:
  - '            The Authenticated Received Chain (ARC) Protocol

    '
- title: Abstract
  contents:
  - "Abstract\n   The Authenticated Received Chain (ARC) protocol provides an\n  \
    \ authenticated \"chain of custody\" for a message, allowing each entity\n   that\
    \ handles the message to see what entities handled it before and\n   what the\
    \ message's authentication assessment was at each step in the\n   handling.\n\
    \   ARC allows Internet Mail Handlers to attach assertions of message\n   authentication\
    \ assessment to individual messages.  As messages\n   traverse ARC-enabled Internet\
    \ Mail Handlers, additional ARC\n   assertions can be attached to messages to\
    \ form ordered sets of ARC\n   assertions that represent the authentication assessment\
    \ at each step\n   of the message-handling paths.\n   ARC-enabled Internet Mail\
    \ Handlers can process sets of ARC assertions\n   to inform message disposition\
    \ decisions, identify Internet Mail\n   Handlers that might break existing authentication\
    \ mechanisms, and\n   convey original authentication assessments across trust\
    \ boundaries.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are candidates\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 7841.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8617.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  General Concepts  . . . . . . . . . . . . . . . . . .\
    \ . . . .   5\n     2.1.  Evidence  . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   5\n     2.2.  Custody . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   5\n     2.3.  Chain of Custody  . . . . . . . . . . . . . . . . . . .\
    \ .   6\n     2.4.  Validation of Chain of Custody  . . . . . . . . . . . . .\
    \   6\n   3.  Terminology and Definitions . . . . . . . . . . . . . . . . .  \
    \ 6\n     3.1.  ARC Set . . . . . . . . . . . . . . . . . . . . . . . . .   7\n\
    \     3.2.  Authenticated Received Chain (ARC)  . . . . . . . . . . .   7\n  \
    \   3.3.  Internet Mail Handlers / Intermediaries . . . . . . . . .   7\n    \
    \ 3.4.  Authentication Assessment . . . . . . . . . . . . . . . .   7\n     3.5.\
    \  Signing vs. Sealing . . . . . . . . . . . . . . . . . . .   8\n     3.6.  Sealer\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n     3.7.  Validator\
    \ . . . . . . . . . . . . . . . . . . . . . . . .   8\n     3.8.  Imported ABNF\
    \ Tokens  . . . . . . . . . . . . . . . . . .   8\n     3.9.  Common ABNF Tokens\
    \  . . . . . . . . . . . . . . . . . . .   8\n   4.  Protocol Elements . . . .\
    \ . . . . . . . . . . . . . . . . . .   9\n     4.1.  ARC Header Fields . . .\
    \ . . . . . . . . . . . . . . . . .   9\n       4.1.1.  ARC-Authentication-Results\
    \ (AAR)  . . . . . . . . . .   9\n       4.1.2.  ARC-Message-Signature (AMS) .\
    \ . . . . . . . . . . . .   9\n       4.1.3.  ARC-Seal (AS) . . . . . . . . .\
    \ . . . . . . . . . . .  11\n       4.1.4.  Internationalized Email (EAI) . .\
    \ . . . . . . . . . .  12\n     4.2.  ARC Set . . . . . . . . . . . . . . . .\
    \ . . . . . . . . .  12\n       4.2.1.  Instance Tags . . . . . . . . . . . .\
    \ . . . . . . . .  12\n     4.3.  Authenticated Received Chain  . . . . . . .\
    \ . . . . . . .  13\n     4.4.  Chain Validation Status . . . . . . . . . . .\
    \ . . . . . .  13\n   5.  Protocol Actions  . . . . . . . . . . . . . . . . .\
    \ . . . . .  14\n     5.1.  Sealer Actions  . . . . . . . . . . . . . . . . .\
    \ . . . .  14\n       5.1.1.  Header Fields to Include in ARC-Seal Signatures\
    \ . . .  15\n       5.1.2.  Marking and Sealing \"cv=fail\" (Invalid) Chains \
    \ . . .  15\n       5.1.3.  Only One Authenticated Received Chain per Message\
    \ . .  16\n       5.1.4.  Broad Ability to Seal . . . . . . . . . . . . . . .\
    \ .  16\n       5.1.5.  Sealing Is Always Safe  . . . . . . . . . . . . . . .\
    \  16\n     5.2.  Validator Actions . . . . . . . . . . . . . . . . . . . .  17\n\
    \       5.2.1.  All Failures Are Permanent  . . . . . . . . . . . . .  18\n  \
    \     5.2.2.  Responding to ARC Validation Failures during the SMTP\n        \
    \       Transaction . . . . . . . . . . . . . . . . . . . . .  19\n   6.  Communication\
    \ of Validation Results . . . . . . . . . . . . .  19\n   7.  Use Cases . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .  19\n     7.1.  Communicate Authentication\
    \ Assessment across Trust\n           Boundaries  . . . . . . . . . . . . . .\
    \ . . . . . . . . .  19\n       7.1.1.  Message-Scanning Services . . . . . .\
    \ . . . . . . . .  20\n       7.1.2.  Multi-tier MTA Processing . . . . . . .\
    \ . . . . . . .  20\n       7.1.3.  Mailing Lists . . . . . . . . . . . . . .\
    \ . . . . . .  20\n     7.2.  Inform Message Disposition Decisions  . . . . .\
    \ . . . . .  21\n       7.2.1.  DMARC Local Policy Overrides  . . . . . . . .\
    \ . . . .  21\n       7.2.2.  DMARC Reporting . . . . . . . . . . . . . . . .\
    \ . . .  22\n   8.  Privacy Considerations  . . . . . . . . . . . . . . . . .\
    \ . .  22\n   9.  Security Considerations . . . . . . . . . . . . . . . . . .\
    \ .  23\n     9.1.  Increased Header Field Size . . . . . . . . . . . . . . .\
    \  23\n     9.2.  DNS Operations  . . . . . . . . . . . . . . . . . . . . .  23\n\
    \     9.3.  Message Content Suspicion . . . . . . . . . . . . . . . .  24\n  \
    \   9.4.  Message Sealer Suspicion  . . . . . . . . . . . . . . . .  24\n    \
    \ 9.5.  Replay Attacks  . . . . . . . . . . . . . . . . . . . . .  24\n   10.\
    \ IANA Considerations . . . . . . . . . . . . . . . . . . . . .  25\n     10.1.\
    \  Update to Email Authentication Result Names Registry . .  25\n     10.2.  Update\
    \ to Email Authentication Methods Registry  . . . .  25\n     10.3.  New Header\
    \ Fields in Permanent Message Header Field\n            Registry . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  26\n     10.4.  New Status Code in Enumerated\
    \ Status Codes Registry  . .  26\n   11. Experimental Considerations . . . . .\
    \ . . . . . . . . . . . .  27\n     11.1.  Success Consideration  . . . . . .\
    \ . . . . . . . . . . .  27\n     11.2.  Failure Considerations . . . . . . .\
    \ . . . . . . . . . .  27\n     11.3.  Open Questions . . . . . . . . . . . .\
    \ . . . . . . . . .  27\n       11.3.1.  Value of the ARC-Seal (AS) Header Field\
    \  . . . . . .  27\n       11.3.2.  Usage and/or Signals from Multiple Selectors\
    \ and/or\n                Domains in ARC Sets  . . . . . . . . . . . . . . . .\
    \  28\n       11.3.3.  DNS Overhead . . . . . . . . . . . . . . . . . . . .  28\n\
    \       11.3.4.  What Trace Information Is Valuable?  . . . . . . . .  28\n  \
    \ 12. References  . . . . . . . . . . . . . . . . . . . . . . . . .  29\n    \
    \ 12.1.  Normative References . . . . . . . . . . . . . . . . . .  29\n     12.2.\
    \  Informative References . . . . . . . . . . . . . . . . .  30\n   Appendix A.\
    \  Design Requirements  . . . . . . . . . . . . . . . .  32\n     A.1.  Primary\
    \ Design Criteria . . . . . . . . . . . . . . . . .  32\n     A.2.  Out of Scope\
    \  . . . . . . . . . . . . . . . . . . . . . .  32\n   Appendix B.  Example Usage\
    \  . . . . . . . . . . . . . . . . . . .  32\n   Acknowledgments . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .  35\n   Authors' Addresses  . . . . . .\
    \ . . . . . . . . . . . . . . . . .  35\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The utility of widely deployed email authentication technologies\
    \ such\n   as Sender Policy Framework (SPF) [RFC7208] and DomainKeys Identified\n\
    \   Mail (DKIM) [RFC6376] is impacted by the processing of Internet Mail\n   by\
    \ intermediate handlers.  This impact is thoroughly documented in\n   the defining\
    \ documents for SPF and DKIM and further discussed in\n   [RFC6377] and [RFC7960].\n\
    \   Domain-based Message Authentication, Reporting, and Conformance\n   (DMARC)\
    \ [RFC7489] also relies upon SPF and DKIM authentication\n   mechanisms.  Failures\
    \ of authentication caused by the actions of\n   intermediate handlers can cause\
    \ legitimate mail to be incorrectly\n   rejected or misdirected.\n   Authenticated\
    \ Received Chain (ARC) creates a mechanism for individual\n   Internet Mail Handlers\
    \ to add their authentication assessment to a\n   message's ordered set of handling\
    \ results.  ARC encapsulates the\n   authentication assessment in a DKIM signature\
    \ derivative to grant\n   other handlers the ability to verify the authenticity\
    \ of the\n   individual assessment assertion as well as the aggregate set and\n\
    \   sequence of results.\n   Ordered sets of authentication assessments can be\
    \ used by ARC-enabled\n   Internet Mail Handlers to inform message-handling disposition,\n\
    \   identify where alteration of message content might have occurred, and\n  \
    \ provide additional trace information for use in understanding\n   message-handling\
    \ paths.\n"
- title: 2.  General Concepts
  contents:
  - "2.  General Concepts\n   ARC is loosely based on concepts from evidence collection.\
    \  Evidence\n   is usually collected, labeled, stored, and transported in specific\n\
    \   ways to preserve the state of evidence and to document all processing\n  \
    \ steps.\n"
- title: 2.1.  Evidence
  contents:
  - "2.1.  Evidence\n   In ARC's situation, the \"evidence\" is a message's authentication\n\
    \   assessment at any point along the delivery path between origination\n   and\
    \ final delivery.  Determination of message authentication can be\n   affected\
    \ when intermediate handlers modify message content (header\n   fields and/or\
    \ body content), route messages through unforeseen paths,\n   or change envelope\
    \ information.\n   The authentication assessment for a message is determined upon\n\
    \   receipt of a message and documented in the Authentication-Results\n   header\
    \ field(s).  ARC extends this mechanism to survive transit\n   through intermediary\
    \ Administrative Management Domains (ADMDs).\n   Because the first-hand determination\
    \ of an authentication assessment\n   can never be reproduced by other handlers,\
    \ the assertion of the\n   authentication assessment is more akin to testimony\
    \ by a verifiable\n   party than to hard evidence, which can be independently\
    \ evaluated.\n"
- title: 2.2.  Custody
  contents:
  - "2.2.  Custody\n   \"Custody\" refers to when an Internet Mail Handler processes\
    \ a\n   message.  When a handler takes custody of a message, the handler\n   becomes\
    \ a custodian and attaches its own evidence (authentication\n   assessment upon\
    \ receipt) to the message if it is ARC enabled.\n   Evidence is added in such\
    \ a way that future handlers can verify the\n   authenticity of both evidence\
    \ and custody.\n"
- title: 2.3.  Chain of Custody
  contents:
  - "2.3.  Chain of Custody\n   The \"chain of custody\" of ARC is the entire set\
    \ of evidence and\n   custody that travels with a message.\n"
- title: 2.4.  Validation of Chain of Custody
  contents:
  - "2.4.  Validation of Chain of Custody\n   Any ARC-enabled Internet Mail Handler\
    \ can validate the entire set of\n   custody and the authentication assessments\
    \ asserted by each party to\n   yield a valid chain of custody.  If the evidence-supplying\
    \ custodians\n   can be trusted, then the validated chain of custody describes\
    \ the\n   (possibly changing) authentication assessment as the message traveled\n\
    \   through various custodians.\n   Even though a message's authentication assessment\
    \ might have changed,\n   the validated chain of custody can be used to determine\
    \ if the\n   changes (and the custodians responsible for the changes) can be\n\
    \   tolerated.\n"
- title: 3.  Terminology and Definitions
  contents:
  - "3.  Terminology and Definitions\n   This section defines terms used in the rest\
    \ of the document.\n   Readers should to be familiar with the contents, core concepts,\
    \ and\n   definitions found in [RFC5598].  The potential roles of transit\n  \
    \ services in the delivery of email are directly relevant.\n   Language, syntax\
    \ (including some ABNF constructs), and concepts are\n   imported from DKIM [RFC6376].\
    \  Specific references to DKIM are made\n   throughout this document.  The following\
    \ terms are imported from\n   [RFC5598]:\n   o  Administrative Management Domain\
    \ (ADMD), Section 2.3\n   o  Message Transfer Agent (MTA), Section 4.3.2\n   o\
    \  Message Submission Agent (MSA), Section 4.3.1\n   o  Message Delivery Agent\
    \ (MDA), Section 4.3.3\n   Syntax descriptions use ABNF [RFC5234] [RFC7405].\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\"\
    , and\n   \"OPTIONAL\" in this document are to be interpreted as described in\n\
    \   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n   capitals,\
    \ as shown here.\n"
- title: 3.1.  ARC Set
  contents:
  - "3.1.  ARC Set\n   Section 4.1 introduces three (3) ARC header fields that are\
    \ added to\n   a message by an ARC-enabled Internet Mail Handler.  Together, these\n\
    \   three header fields compose a single \"ARC Set\".  An ARC Set provides\n \
    \  the means for an Internet Mail Handler to attach an authentication\n   assessment\
    \ to a message in a manner that can be verified by future\n   handlers.  A single\
    \ message can contain multiple ARC Sets.\n   In general concept terms, an ARC\
    \ Set represents Evidence and Custody.\n"
- title: 3.2.  Authenticated Received Chain (ARC)
  contents:
  - "3.2.  Authenticated Received Chain (ARC)\n   The sequence of ARC Sets attached\
    \ to a message at a given time is\n   called the \"Authenticated Received Chain\"\
    \ or \"ARC\".  An Authenticated\n   Received Chain is the record of individual\
    \ authentication assessments\n   as a message traverses through ARC-participating\
    \ ADMDs.\n   The first attachment of an ARC Set to a message causes an\n   Authenticated\
    \ Received Chain to be created.  Additional attachments\n   of ARC Sets cause\
    \ the Authenticated Received Chain to be extended.\n   In general concept terms,\
    \ an Authenticated Received Chain represents\n   a chain of custody.\n"
- title: 3.3.  Internet Mail Handlers / Intermediaries
  contents:
  - "3.3.  Internet Mail Handlers / Intermediaries\n   Internet Mail Handlers process\
    \ and deliver messages across the\n   Internet and include MSAs, MTAs, MDAs, gateways,\
    \ and mailing lists as\n   defined in [RFC5598].\n   Throughout this document,\
    \ the term \"intermediaries\" refers to both\n   regular MTAs as well as delivery/reposting\
    \ agents such as mailing\n   lists covered within the scope of transit services\
    \ per [RFC5598].\n   \"Intermediaries\" and \"Internet Mail Handlers\" are used\
    \ synonymously\n   throughout this document.\n"
- title: 3.4.  Authentication Assessment
  contents:
  - "3.4.  Authentication Assessment\n   The authentication assessment that is affixed\
    \ to a message as part of\n   each ARC Set consists of the \"authres-payload\"\
    \ [RFC8601].  For the\n   integrity of an ARC Set, the authentication assessment\
    \ only needs to\n   be properly encapsulated within the ARC Set as defined in\n\
    \   Section 4.1.  The accuracy or syntax of the authres-payload field\n   does\
    \ not affect the validity of the ARC Chain itself.\n"
- title: 3.5.  Signing vs. Sealing
  contents:
  - "3.5.  Signing vs. Sealing\n   Signing is the process of affixing a digital signature\
    \ to a message\n   as a header field, such as when a DKIM-Signature (as in [RFC6376],\n\
    \   Section 2.1), an AMS, or an AS is added.  Sealing is when an ADMD\n   affixes\
    \ a complete and valid ARC Set to a message to create or\n   continue an Authenticated\
    \ Received Chain.\n"
- title: 3.6.  Sealer
  contents:
  - "3.6.  Sealer\n   A Sealer is an Internet Mail Handler that attaches a complete\
    \ and\n   valid ARC Set to a message.\n   In general concept terms, a Sealer adds\
    \ its testimony (assertion of\n   authentication assessment) and proof of custody\
    \ to the chain of\n   custody.\n"
- title: 3.7.  Validator
  contents:
  - "3.7.  Validator\n   A Validator is an ARC-enabled Internet Mail Handler that\
    \ evaluates an\n   Authenticated Received Chain for validity and content.  The\
    \ process\n   of evaluation of the individual ARC Sets that compose an\n   Authenticated\
    \ Received Chain is described in Section 5.2.\n   In general concept terms, a\
    \ Validator inspects the chain of custody\n   to determine the content and validity\
    \ of individual evidence supplied\n   by custodians.\n"
- title: 3.8.  Imported ABNF Tokens
  contents:
  - "3.8.  Imported ABNF Tokens\n   The following ABNF tokens are imported:\n   o\
    \  tag-list ([RFC6376], Section 3.2)\n   o  authres-payload ([RFC8601], Section\
    \ 2.2)\n   o  CFWS ([RFC5322], Section 3.2.2)\n"
- title: 3.9.  Common ABNF Tokens
  contents:
  - "3.9.  Common ABNF Tokens\n   The following ABNF tokens are used elsewhere in\
    \ this document:\n   position     = 1*2DIGIT                         ; 1 - 50\n\
    \   instance     = [CFWS] %s\"i\" [CFWS] \"=\"\n                  [CFWS] position\n\
    \   chain-status = (\"none\" / \"fail\" / \"pass\")\n   seal-cv-tag  = %s\"cv\"\
    \ [CFWS] \"=\"\n                  [CFWS] chain-status\n"
- title: 4.  Protocol Elements
  contents:
  - '4.  Protocol Elements

    '
- title: 4.1.  ARC Header Fields
  contents:
  - "4.1.  ARC Header Fields\n   ARC introduces three new header fields.  The syntax\
    \ for new header\n   fields adapts existing specifications.  This document only\
    \ describes\n   where ARC-specific changes in syntax and semantics differ from\n\
    \   existing specifications.\n"
- title: 4.1.1.  ARC-Authentication-Results (AAR)
  contents:
  - "4.1.1.  ARC-Authentication-Results (AAR)\n   The ARC-Authentication-Results (AAR)\
    \ header field records the message\n   authentication assessment as processed\
    \ by an ARC-participating ADMD\n   at message arrival time.\n   In general concept\
    \ terms, the AAR header field is where evidence is\n   recorded by a custodian.\n\
    \   The AAR header field is similar in syntax and semantics to an\n   Authentication-Results\
    \ field [RFC8601], with two (2) differences:\n   o  the name of the header field\
    \ itself and\n   o  the presence of the instance tag.  Additional information\
    \ on the\n      instance tag can be found in Section 4.2.1.\n   The formal ABNF\
    \ for the AAR header field is:\n   arc-info = instance [CFWS] \";\" authres-payload\n\
    \   arc-authres-header = \"ARC-Authentication-Results:\" [CFWS] arc-info\n   Because\
    \ there is only one AAR allowed per ARC Set, the AAR MUST\n   contain the combined\
    \ authres-payload with all of the authentication\n   results from within the participating\
    \ ADMD, regardless of how many\n   Authentication-Results header fields are attached\
    \ to the message.\n"
- title: 4.1.2.  ARC-Message-Signature (AMS)
  contents:
  - "4.1.2.  ARC-Message-Signature (AMS)\n   The ARC-Message-Signature (AMS) header\
    \ field allows an ARC-\n   participating ADMD to convey some responsibility (custodianship)\
    \ for\n   a message and possible message modifications to future ARC-\n   participating\
    \ custodians.\n   In general concept terms, the AMS header field identifies a\n\
    \   custodian.\n   The AMS header field has the same syntax and semantics as the\
    \ DKIM-\n   Signature field [RFC6376], with three (3) differences:\n   o  the\
    \ name of the header field itself;\n   o  no version tag (\"v\") is defined for\
    \ the AMS header field.  As\n      required for undefined tags (in [RFC6376]),\
    \ if seen, a version tag\n      MUST be ignored; and\n   o  the \"i\" (Agent or\
    \ User Identifier (AUID)) tag is not imported from\n      DKIM; instead, this\
    \ tag is replaced by the instance tag as defined\n      in Section 4.2.1.\n  \
    \ ARC places no requirements on the selectors and/or domains used for\n   the\
    \ AMS header field signatures.\n   The formal ABNF for the AMS header field is:\n\
    \   arc-ams-info = instance [CFWS] \";\" tag-list\n   arc-message-signature =\
    \ \"ARC-Message-Signature:\" [CFWS] arc-ams-info\n   To reduce the chances of\
    \ accidental invalidation of AMS signatures:\n   o  AMS header fields are added\
    \ by ARC-participating ADMDs as messages\n      exit the ADMD.  AMS header fields\
    \ SHOULD be attached so that any\n      modifications made by the ADMD are included\
    \ in the signature of\n      the AMS header field.\n   o  Authentication-Results\
    \ header fields MUST NOT be included in AMS\n      signatures as they are likely\
    \ to be deleted by downstream ADMDs\n      (per [RFC8601], Section 5).\n   o \
    \ ARC-related header fields (ARC-Authentication-Results, ARC-\n      Message-Signature,\
    \ and ARC-Seal) MUST NOT be included in the list\n      of header fields covered\
    \ by the signature of the AMS header field.\n   To preserve the ability to verify\
    \ the integrity of a message, the\n   signature of the AMS header field SHOULD\
    \ include any DKIM-Signature\n   header fields already present in the message.\n"
- title: 4.1.3.  ARC-Seal (AS)
  contents:
  - "4.1.3.  ARC-Seal (AS)\n   The AS header field permits ARC-participating ADMDs\
    \ to verify the\n   integrity of AAR header fields and corresponding AMS header\
    \ fields.\n   In general concept terms, the AS header field is how custodians\
    \ bind\n   their authentication assessments (testimonials) into a chain of\n \
    \  custody so that Validators can inspect individual evidence and\n   custodians.\n\
    \   The AS header field is similar in syntax and semantics to DKIM-\n   Signature\
    \ header fields [RFC6376], with the following differences:\n   o  the \"i\" (AUID)\
    \ tag is not imported from DKIM; instead, this tag is\n      replaced by the instance\
    \ tag as defined in Section 4.2.1;\n   o  the signature of the AS header field\
    \ does not cover the body of\n      the message; therefore, there is no \"bh\"\
    \ tag.  The signature of\n      the AS header field only covers specific header\
    \ fields as defined\n      in Section 5.1.1;\n   o  no body canonicalization is\
    \ performed as the AS signature does not\n      cover the body of a message;\n\
    \   o  only \"relaxed\" header field canonicalization ([RFC6376],\n      Section\
    \ 3.4.2) is used;\n   o  the only supported tags are \"i\" (from Section 4.2.1\
    \ of this\n      document), and \"a\", \"b\", \"d\", \"s\", and \"t\" from [RFC6376],\n\
    \      Section 3.5.  Note especially that the DKIM \"h\" tag is NOT allowed\n\
    \      and, if found, MUST result in a cv status of \"fail\" (for more\n     \
    \ information, see Section 5.1.1); and\n   o  an additional tag, \"cv\" (\"seal-cv-tag\"\
    \ in the ARC-Seal ABNF\n      definition), is used to communicate the Chain Validation\
    \ Status to\n      subsequent ADMDs.\n   ARC places no requirements on the selectors\
    \ and/or domains used for\n   the AS header field signatures.\n   The formal ABNF\
    \ for the AS header field is:\n   arc-as-info = instance [CFWS] \";\" tag-list\n\
    \   arc-seal = \"ARC-Seal:\" [CFWS] arc-as-info\n"
- title: 4.1.4.  Internationalized Email (EAI)
  contents:
  - "4.1.4.  Internationalized Email (EAI)\n   In internationalized messages [RFC6532],\
    \ many header fields can\n   contain UTF-8 as well as ASCII text.  The changes\
    \ for EAI are all\n   inherited from DKIM as updated by [RFC8616] and Authentication-\n\
    \   Results (A-R) as updated in [RFC8601], but they are called out here\n   for\
    \ emphasis.\n   In all ARC header fields, the d= and s= tags can contain U-labels.\n\
    \   In all tags, non-ASCII characters need not be quoted in dkim-quoted-\n   printable.\n\
    \   The AAR header allows UTF-8 in the same places that Authentication-\n   Results\
    \ does, as described in [RFC8601].\n"
- title: 4.2.  ARC Set
  contents:
  - "4.2.  ARC Set\n   An \"ARC Set\" is a single collection of three ARC header fields\
    \ (AAR,\n   AMS, and AS).  ARC header fields of an ARC Set share the same\n  \
    \ \"instance\" value.\n   By adding all ARC header fields to a message, an ARC\
    \ Sealer adds an\n   ARC Set to a message.  A description of how Sealers add an\
    \ ARC Set to\n   a message is found in Section 5.1.\n"
- title: 4.2.1.  Instance Tags
  contents:
  - "4.2.1.  Instance Tags\n   Instance tags describe which ARC header fields belong\
    \ to an ARC Set.\n   Each ARC header field of an ARC Set shares the same instance\
    \ tag\n   value.\n   Instance tag values are integers that begin at 1 and are\
    \ incremented\n   by each addition of an ARC Set.  Through the incremental values\
    \ of\n   instance tags, an ARC Validator can determine the order in which ARC\n\
    \   Sets were added to a message.\n   Instance tag values can range from 1-50\
    \ (inclusive).\n   _INFORMATIONAL_: The upper limit of 50 was picked based on\
    \ some\n   initial observations reported by early working group members.  The\n\
    \   value was chosen to balance the risk of excessive header field growth\n  \
    \ (see Section 9.1) against expert opinion regarding the probability of\n   long-tail,\
    \ but non-looping, multiple-intermediary mail flows.  Longer\n   ARC Chains will\
    \ also impose a load on Validators and DNS to support\n   additional verification\
    \ steps.  Observed quantities of \"Received\"\n   header fields were also considered\
    \ in establishing this as an\n   experimental initial value.\n   Valid ARC Sets\
    \ MUST have exactly one instance of each ARC header\n   field (AAR, AMS, and AS)\
    \ for a given instance value and signing\n   algorithm.\n   For handling multiple\
    \ signing algorithms, see [ARC-MULTI].\n"
- title: 4.3.  Authenticated Received Chain
  contents:
  - "4.3.  Authenticated Received Chain\n   An Authenticated Received Chain is an\
    \ ordered collection of ARC Sets.\n   As ARC Sets are enumerated sets of ARC header\
    \ fields, an\n   Authenticated Received Chain represents the output of message\n\
    \   authentication assessments along the handling path of ARC-enabled\n   processors.\n\
    \   Authentication assessments determined at each step of the ARC-enabled\n  \
    \ handling path are present in an Authenticated Received Chain in the\n   form\
    \ of AAR header fields.  The ability to verify the identity of\n   message handlers\
    \ and the integrity of message content is provided by\n   AMS header fields. \
    \ AS header fields allow message handlers to\n   validate the assertions, order,\
    \ and sequence of the Authenticated\n   Received Chain itself.\n   In general\
    \ concept terms, an Authenticated Received Chain represents\n   a message's chain\
    \ of custody.  Validators can consult a message's\n   chain of custody to gain\
    \ insight regarding each custodian of a\n   message and the evidence collected\
    \ by each custodian.\n"
- title: 4.4.  Chain Validation Status
  contents:
  - "4.4.  Chain Validation Status\n   The state of the Authenticated Received Chain\
    \ at a specific\n   processing step is called the \"Chain Validation Status\"\
    .  Chain\n   Validation Status information is communicated in several ways:\n\
    \   o  as the AS header field in the \"cv\" tag and\n   o  as part of the Authentication-Results\
    \ and AAR header field(s).\n   Chain Validation Status has one of three possible\
    \ values:\n   o  none: There was no Authenticated Received Chain on the message\n\
    \      when it arrived for validation.  Typically, this occurs when a\n      message\
    \ is received directly from a message's original Message\n      Transfer Agent\
    \ (MTA) or Message Submission Agent (MSA), or from an\n      upstream Internet\
    \ Mail Handler that is not participating in ARC\n      handling.\n   o  fail:\
    \ The message contains an Authenticated Received Chain whose\n      validation\
    \ failed.\n   o  pass: The message contains an Authenticated Received Chain whose\n\
    \      validation succeeded.\n"
- title: 5.  Protocol Actions
  contents:
  - "5.  Protocol Actions\n   ARC-enabled Internet Mail Handlers generally act as\
    \ both ARC\n   Validators (when receiving messages) and ARC Sealers (when sending\n\
    \   messages onward, not originated locally).\n   An Authenticated Received Chain\
    \ with a Chain Validation Status of\n   \"pass\" (or \"none\") allows Internet\
    \ Mail Handlers to ascertain:\n   o  all ARC-participating ADMDs that claim responsibility\
    \ for handling\n      (and possibly modifying) the message in transit and\n  \
    \ o  the authentication assessments of the message as determined by\n      each\
    \ ADMD (from AAR header fields).\n   With this information, Internet Mail Handlers\
    \ MAY inform local policy\n   decisions regarding disposition of messages that\
    \ experience\n   authentication failure due to intermediate processing.\n"
- title: 5.1.  Sealer Actions
  contents:
  - "5.1.  Sealer Actions\n   To \"seal\" a message, an ARC Sealer adds an ARC Set\
    \ (the three ARC\n   header fields AAR, AMS, and AS) to a message.  All ARC header\
    \ fields\n   in an ARC Set share the same instance tag value.\n   To perform sealing\
    \ (aka to build and attach a new ARC Set), the\n   following actions must be taken\
    \ by an ARC Sealer when presented with\n   a message:\n   1.  All message modifications\
    \ (including adding a DKIM-Signature\n       header field(s)) MUST be performed\
    \ before sealing.\n   2.  If the message already contains an Authenticated Received\
    \ Chain\n       with the most recent AS reporting \"cv=fail\", there is no need\
    \ to\n       proceed and the algorithm stops here.\n   3.  Calculate the instance\
    \ value.  If the message already contains an\n       Authenticated Received Chain,\
    \ the instance value is 1 more than\n       the highest instance number found\
    \ in the Authenticated Received\n       Chain.  If no Authenticated Received Chain\
    \ exists, the instance\n       value is 1.\n   4.  Using the calculated instance\
    \ value, generate and attach a\n       complete ARC Set to the message as follows:\n\
    \       A.  Generate and attach an ARC-Authentication-Results header\n       \
    \    field as defined in Section 4.1.1.\n       B.  Generate and attach an ARC-Message-Signature\
    \ header field as\n           defined in Section 4.1.2.\n       C.  Generate and\
    \ attach an ARC-Seal header field using the AS\n           definition found in\
    \ Section 4.1.3, the prescribed headers\n           defined in Section 5.1.1,\
    \ and the Chain Validation Status as\n           determined during ARC validation.\n"
- title: 5.1.1.  Header Fields to Include in ARC-Seal Signatures
  contents:
  - "5.1.1.  Header Fields to Include in ARC-Seal Signatures\n   The ARC-Seal is generated\
    \ in a manner similar to how DKIM-Signature\n   header fields are added to messages\
    \ ([RFC6376], Section 3.7), with\n   explicit requirements on the header fields\
    \ and ordering of those\n   fields.\n   The signature of an AS header field signs\
    \ a canonicalized form of the\n   ARC Set header field values.  The ARC Set header\
    \ field values are\n   supplied to the hash function in increasing instance order,\
    \ starting\n   at 1, and include the ARC Set being added at the time of sealing\
    \ the\n   message.\n   Within an ARC Set, header fields are supplied to the hash\
    \ function in\n   the following order:\n   1.  ARC-Authentication-Results\n  \
    \ 2.  ARC-Message-Signature\n   3.  ARC-Seal\n   Note that when an Authenticated\
    \ Received Chain has failed validation,\n   the signing scope for the ARC-Seal\
    \ is modified as specified in\n   Section 5.1.2.\n"
- title: 5.1.2.  Marking and Sealing "cv=fail" (Invalid) Chains
  contents:
  - "5.1.2.  Marking and Sealing \"cv=fail\" (Invalid) Chains\n   In the case of a\
    \ failed Authenticated Received Chain, the header\n   fields included in the signature\
    \ scope of the AS header field b=\n   value MUST only include the ARC Set header\
    \ fields created by the MTA\n   that detected the malformed chain, as if this\
    \ newest ARC Set was the\n   only set present.\n   _INFORMATIONAL_: This approach\
    \ is mandated to handle the case of a\n   malformed or otherwise invalid Authenticated\
    \ Received Chain.  There\n   is no way to generate a deterministic set of AS header\
    \ fields\n   (Section 5.1.1) in most cases of invalid chains.\n"
- title: 5.1.3.  Only One Authenticated Received Chain per Message
  contents:
  - "5.1.3.  Only One Authenticated Received Chain per Message\n   A message can have\
    \ only one Authenticated Received Chain on it at a\n   time.  Once broken, the\
    \ chain cannot be continued, as the chain of\n   custody is no longer valid, and\
    \ responsibility for the message has\n   been lost.  For further discussion of\
    \ this topic and the design\n   restriction that prevents chain continuation or\
    \ re-establishment, see\n   [ARC-USAGE].\n"
- title: 5.1.4.  Broad Ability to Seal
  contents:
  - "5.1.4.  Broad Ability to Seal\n   ARC is not solely intended for perimeter MTAs.\
    \  Any Internet Mail\n   Handler MAY seal a message by adding a complete ARC Set,\
    \ whether or\n   not they have modified or are aware of having modified the message.\n\
    \   For additional information, see Section 7.1.\n"
- title: 5.1.5.  Sealing Is Always Safe
  contents:
  - "5.1.5.  Sealing Is Always Safe\n   The utility of an Authenticated Received Chain\
    \ is limited to very\n   specific cases.  Authenticated Received Chains are designed\
    \ to\n   provide additional information to an Internet Mail Handler when\n   evaluating\
    \ messages for delivery in the context of authentication\n   failures.  Specifically:\n\
    \   o  Properly adding an ARC Set to a message does not damage or\n      invalidate\
    \ an existing Authenticated Received Chain.\n   o  Sealing an Authenticated Received\
    \ Chain when a message has not\n      been modified does not negatively affect\
    \ the chain.\n   o  Validating a message exposes no new threat vectors (see\n\
    \      Section 9).\n   o  An ADMD may choose to seal all inbound messages whether\
    \ or not a\n      message has been modified or will be retransmitted.\n"
- title: 5.2.  Validator Actions
  contents:
  - "5.2.  Validator Actions\n   A Validator performs the following steps, in sequence,\
    \ to process an\n   Authenticated Received Chain.  Canonicalization, hash functions,\
    \ and\n   signature validation methods are imported from [RFC6376], Section 5.\n\
    \   1.  Collect all ARC Sets currently attached to the message.\n       *  If\
    \ there are none, the Chain Validation Status is \"none\", and\n          the\
    \ algorithm stops here.\n       *  The maximum number of ARC Sets that can be\
    \ attached to a\n          message is 50.  If more than the maximum number exist,\
    \ the\n          Chain Validation Status is \"fail\", and the algorithm stops\n\
    \          here.\n       *  In the following algorithm, the maximum discovered\
    \ ARC\n          instance value is referred to as \"N\".\n   2.  If the Chain\
    \ Validation Status of the highest instance value ARC\n       Set is \"fail\"\
    , then the Chain Validation Status is \"fail\", and\n       the algorithm stops\
    \ here.\n   3.  Validate the structure of the Authenticated Received Chain.  A\n\
    \       valid ARC has the following conditions:\n       A.  Each ARC Set MUST\
    \ contain exactly one each of the three ARC\n           header fields (AAR, AMS,\
    \ and AS).\n       B.  The instance values of the ARC Sets MUST form a continuous\n\
    \           sequence from 1..N with no gaps or repetition.\n       C.  The \"\
    cv\" value for all ARC-Seal header fields MUST NOT be\n           \"fail\".  For\
    \ ARC Sets with instance values > 1, the values\n           MUST be \"pass\".\
    \  For the ARC Set with instance value = 1, the\n           value MUST be \"none\"\
    .\n       *  If any of these conditions are not met, the Chain Validation\n  \
    \        Status is \"fail\", and the algorithm stops here.\n   4.  Validate the\
    \ AMS with the greatest instance value (most recent).\n       If validation fails,\
    \ then the Chain Validation Status is \"fail\",\n       and the algorithm stops\
    \ here.\n   5.  _OPTIONAL_: Determine the \"oldest-pass\" value from the ARC Set\
    \ by\n       validating each prior AMS beginning with N-1 and proceeding in\n\
    \       decreasing order to the AMS with the instance value of 1:\n       A. \
    \ If an AMS fails to validate (for instance value \"M\"), then\n           set\
    \ the oldest-pass value to the lowest AMS instance value\n           that passed\
    \ (M+1), and go to the next step (there is no need\n           to check any other\
    \ (older) AMS header fields).  This does not\n           affect the validity of\
    \ the Authenticated Received Chain.\n       B.  If all AMS header fields verify,\
    \ set the oldest-pass value to\n           zero (0).\n   6.  Validate each AS\
    \ beginning with the greatest instance value and\n       proceeding in decreasing\
    \ order to the AS with the instance value\n       of 1.  If any AS fails to validate,\
    \ the Chain Validation Status\n       is \"fail\", and the algorithm stops here.\n\
    \   7.  If the algorithm reaches this step, then the Chain Validation\n      \
    \ Status is \"pass\", and the algorithm is complete.\n   The end result of this\
    \ validation algorithm SHOULD be included within\n   the Authentication-Results\
    \ header field for the ADMD.\n   As with a DKIM signature ([RFC6376], Section\
    \ 6.3) that fails\n   verification, a message with an Authenticated Received Chain\
    \ with a\n   Chain Validation Status of \"fail\" MUST be treated the same as a\n\
    \   message with no Authenticated Received Chain.\n   _INFORMATIONAL_: Recipients\
    \ of an invalid or failing Authenticated\n   Received Chain can use that information\
    \ as part of a wider handling\n   context.  ARC adoption cannot be assumed by\
    \ intermediaries; many\n   intermediaries will continue to modify messages without\
    \ adding ARC\n   seals.\n"
- title: 5.2.1.  All Failures Are Permanent
  contents:
  - "5.2.1.  All Failures Are Permanent\n   Authenticated Received Chains represent\
    \ the traversal of messages\n   through one or more intermediaries.  All errors,\
    \ including DNS\n   failures, become unrecoverable and are considered permanent.\n\
    \   Any error validating an Authenticated Received Chain results in a\n   Chain\
    \ Validation Status of \"fail\".  For further discussion of this\n   topic and\
    \ the design restriction that prevents chain continuation or\n   re-establishment,\
    \ see [ARC-USAGE].\n"
- title: 5.2.2.  Responding to ARC Validation Failures during the SMTP
  contents:
  - "5.2.2.  Responding to ARC Validation Failures during the SMTP\n        Transaction\n\
    \   If an ARC Validator determines that the incoming message fails ARC\n   validation,\
    \ the Validator MAY signal the breakage through the\n   extended SMTP response\
    \ code 5.7.29 (\"ARC validation failure\") and the\n   corresponding SMTP basic\
    \ response code.  Because ARC failures are\n   likely only to be detected in the\
    \ context of other underlying\n   authentication mechanism failures, Validators\
    \ MAY use the more\n   general 5.7.26 (\"Multiple authentication checks failed\"\
    ) instead of\n   the ARC-specific code.\n"
- title: 6.  Communication of Validation Results
  contents:
  - "6.  Communication of Validation Results\n   Chain Validation Status (described\
    \ in Section 4.4) is communicated\n   via Authentication-Results (and AAR) header\
    \ fields using the\n   authentication method \"arc\".  This authentication method\
    \ is described\n   in Section 10.1.\n   If necessary data is available, the ptypes\
    \ and properties defined in\n   Section 10.2 SHOULD be recorded in an Authentication-Results\
    \ header\n   field:\n   o  smtp.remote-ip - The address of the connection-initiating\
    \ SMTP\n      server, from which the message is being relayed.\n   o  header.oldest-pass\
    \ - The instance number of the oldest AMS that\n      still validates, or 0 if\
    \ all pass.\n"
- title: 7.  Use Cases
  contents:
  - "7.  Use Cases\n   This section explores several message handling use cases that\
    \ are\n   addressed by ARC.\n"
- title: 7.1.  Communicate Authentication Assessment across Trust Boundaries
  contents:
  - "7.1.  Communicate Authentication Assessment across Trust Boundaries\n   When\
    \ an intermediary ADMD adds an ARC Set to a message's\n   Authenticated Received\
    \ Chain (or creates the initial ARC Set), the\n   ADMD communicates its authentication\
    \ assessment to the next ARC-\n   participating ADMD in the message-handling path.\n\
    \   If ARC-enabled ADMDs are trusted, Authenticated Received Chains can\n   be\
    \ used to bridge administrative boundaries.\n"
- title: 7.1.1.  Message-Scanning Services
  contents:
  - "7.1.1.  Message-Scanning Services\n   Message services are available to perform\
    \ anti-spam, anti-malware,\n   and anti-phishing scanning.  Such services typically\
    \ remove malicious\n   content, replace HTTP links in messages with sanitized\
    \ links, and/or\n   attach footers to messages advertising the abilities of the\
    \ message-\n   scanning service.  These modifications almost always break signature-\n\
    \   based authentication (such as DKIM).\n   Scanning services typically require\
    \ clients to point MX records of an\n   Internet domain to the scanning service.\
    \  Messages destined for the\n   Internet domain are initially delivered to the\
    \ scanning service.\n   Once scanning is performed, messages are then routed to\
    \ the client's\n   own mail-handling infrastructure.  Rerouting messages in this\
    \ way\n   almost always breaks path-based authentication (such as SPF).\n   Message-scanning\
    \ services can attach Authenticated Received Chains to\n   messages to communicate\
    \ authentication assessment into client ADMDs.\n   Clients can then benefit from\
    \ the message-scanning service while\n   processing messages as if the client's\
    \ infrastructure were the\n   original destination of the Internet domain's MX\
    \ record.\n"
- title: 7.1.2.  Multi-tier MTA Processing
  contents:
  - "7.1.2.  Multi-tier MTA Processing\n   A large message-processing infrastructure\
    \ is often divided into\n   several processing tiers that can break authentication\
    \ information\n   between tiers.  For example, a large site may maintain a cluster\
    \ of\n   MTAs dedicated to connection handling and enforcement of IP-based\n \
    \  reputation filtering.  A secondary cluster of MTAs may be dedicated\n   and\
    \ optimized for content-based processing of messages.\n   Authenticated Received\
    \ Chains can be used to communicate\n   authentication assessment between processing\
    \ tiers.\n"
- title: 7.1.3.  Mailing Lists
  contents:
  - "7.1.3.  Mailing Lists\n   Mailing lists take delivery of messages and repost\
    \ them to\n   subscribers.  A full description of authentication-related mailing\n\
    \   list issues can be found in [RFC7960], Section 3.2.3.\n   Mailing list services\
    \ can implement ARC to convey the authentication\n   assessment of posted messages\
    \ sent to the list's subscriber base.\n   The ADMDs of the mailing list subscribers\
    \ can then use the\n   Authenticated Received Chain to determine the authentication\n\
    \   assessment of the original message before mailing list handling.\n"
- title: 7.2.  Inform Message Disposition Decisions
  contents:
  - "7.2.  Inform Message Disposition Decisions\n   Intermediaries often break authentication\
    \ through content\n   modification, interfere with path-based authentication (such\
    \ as SPF),\n   and strip authentication results (if an MTA removes Authentication-\n\
    \   Results header fields).\n   Authenticated Received Chains allow ARC Validators\
    \ to:\n   1.  identify ARC-enabled ADMDs that break authentication while\n   \
    \    processing messages and\n   2.  gain extended visibility into the authentication-preserving\n\
    \       abilities of ADMDs that relay messages into ARC-enabled ADMDs.\n   Through\
    \ the collection of ARC-related data, an ADMD can identify\n   handling paths\
    \ that have broken authentication.\n   An Authenticated Received Chain allows\
    \ an Internet Mail Handler to\n   potentially base decisions of message disposition\
    \ on authentication\n   assessments provided by different ADMDs.\n"
- title: 7.2.1.  DMARC Local Policy Overrides
  contents:
  - "7.2.1.  DMARC Local Policy Overrides\n   DMARC introduces a policy model where\
    \ Domain Owners can request email\n   receivers to reject or quarantine messages\
    \ that fail DMARC alignment.\n   Interoperability issues between DMARC and indirect\
    \ email flows are\n   documented in [RFC7960].\n   Authenticated Received Chains\
    \ allow DMARC processors to consider\n   authentication assessments provided by\
    \ other ADMDs.  As a matter of\n   local policy, a DMARC processor MAY choose\
    \ to accept the\n   authentication assessments provided by an Authenticated Received\n\
    \   Chain when determining if a message is DMARC compliant.\n   When an Authenticated\
    \ Received Chain is used to determine message\n   disposition, the DMARC processor\
    \ can communicate this local policy\n   decision to Domain Owners as described\
    \ in Section 7.2.2.\n"
- title: 7.2.2.  DMARC Reporting
  contents:
  - "7.2.2.  DMARC Reporting\n   DMARC-enabled receivers indicate when ARC validation\
    \ influences\n   DMARC-related local policy decisions.  When an ARC-enabled handler\n\
    \   generates a DMARC report, it MAY indicate the influence of ARC on\n   their\
    \ local policy decision(s) by adding a reason of \"local_policy\"\n   with a comment\
    \ string (per [RFC7489], Appendix C) containing a list\n   of data discovered\
    \ during ARC validation, which at a minimum\n   includes:\n   o  the Chain Validation\
    \ Status,\n   o  the domain and selector for each AS, and\n   o  the originating\
    \ IP address from the first ARC Set.\n   EXAMPLE:\n   <policy_evaluated>\n   \
    \  <disposition>none</disposition>\n     <dkim>fail</dkim>\n     <spf>fail</spf>\n\
    \     <reason>\n      <type>local_policy</type>\n      <comment>arc=pass as[2].d=d2.example\
    \ as[2].s=s2\n        as[1].d=d1.example as[1].s=s3\n        remote-ip[1]=2001:DB8::1A</comment>\n\
    \     </reason>\n   </policy_evaluated>\n   In the example DMARC XML reporting\
    \ fragment above, data relating to\n   specific validated ARC Sets are enumerated\
    \ using array syntax (e.g.,\n   \"as[2]\" means an AS header field with an instance\
    \ value of 2).\n   d2.example is the sealing domain for ARC Set #2 (i=2), and\
    \ d1.example\n   is the sealing domain for ARC Set #1 (i=1).\n   Depending on\
    \ the reporting practices of intermediate message\n   handlers, Domain Owners\
    \ may receive multiple DMARC reports for a\n   single message.  Receivers of DMARC\
    \ reports should be aware of this\n   behavior and make the necessary accommodations.\n"
- title: 8.  Privacy Considerations
  contents:
  - "8.  Privacy Considerations\n   The Authenticated Received Chain provides a verifiable\
    \ record of the\n   handlers for a message.  This record may include personally\n\
    \   identifiable information such as an IP address(es) and domain names.\n   Such\
    \ information is also included in existing non-ARC-related header\n   fields such\
    \ as the \"Received\" header fields.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   The Security Considerations of [RFC6376] and\
    \ [RFC8601] apply directly\n   to this specification.\n   As with other domain-based\
    \ authentication technologies (such as SPF,\n   DKIM, and DMARC), ARC makes no\
    \ claims about the semantic content of\n   messages.  A received message with\
    \ a validated ARC Chain provides\n   evidence (at instance N) that:\n   1.  the\
    \ sealing domain (ARC-Seal[N] d=) emitted the message with this\n       body,\n\
    \   2.  the authentication assessment reported in the ARC-Authentication-\n  \
    \     Results was determined upon receipt of the corresponding message\n     \
    \  at the sealing domain, and\n   3.  the preceding ARC Chain (1..N-1) (with the\
    \ validation status as\n       reported in the cv field) existed on the message\
    \ that was\n       received and assessed.\n"
- title: 9.1.  Increased Header Field Size
  contents:
  - "9.1.  Increased Header Field Size\n   Inclusion of Authenticated Received Chains\
    \ into messages may cause\n   issues for older or constrained MTAs due to increased\
    \ total header\n   field size.  Large header field blocks, in general, may cause\n\
    \   failures to deliver or other outage scenarios for such MTAs.  ARC\n   itself\
    \ would not cause problems.\n"
- title: 9.2.  DNS Operations
  contents:
  - "9.2.  DNS Operations\n   The validation of an Authenticated Received Chain composed\
    \ of N ARC\n   Sets can require up to 2*N DNS queries (not including any DNS\n\
    \   redirection mechanisms that can increase the total number of\n   queries).\
    \  This leads to two considerations:\n   1.  An attacker can send a message to\
    \ an ARC participant with a\n       concocted sequence of ARC Sets bearing the\
    \ domains of intended\n       victims, and all of them will be queried by the\
    \ participant until\n       a failure is discovered.  DNS caching and the difficulty\
    \ of\n       forging the signature values should limit the extent of this load\n\
    \       to domains under control of the attacker.  Query traffic pattern\n   \
    \    analysis may expose information about a downstream validating\n       ADMD\
    \ infrastructure.\n   2.  DKIM only performs one DNS query per signature, while\
    \ ARC can\n       introduce many (per chain).  Absent caching, slow DNS responses\n\
    \       can cause SMTP timeouts and backlogged delivery queues on\n       validating\
    \ systems.  This could be exploited as a DoS attack.\n"
- title: 9.3.  Message Content Suspicion
  contents:
  - "9.3.  Message Content Suspicion\n   Recipients are cautioned to treat messages\
    \ bearing Authenticated\n   Received Chains with the same suspicion applied to\
    \ all other\n   messages.  This includes appropriate content scanning and other\n\
    \   checks for potentially malicious content.\n   ARC authenticates the identity\
    \ of some email-handling actors.  It\n   does not make any assessment of their\
    \ trustworthiness.\n   Just as passing message authentication is not an indication\
    \ of\n   message safety, forwarding that information through the mechanism of\n\
    \   ARC is also not an indication of message safety.  Even if all ARC-\n   enabled\
    \ ADMDs are trusted, ADMDs may have become compromised, may\n   miss unsafe content,\
    \ or may not properly authenticate messages.\n"
- title: 9.4.  Message Sealer Suspicion
  contents:
  - "9.4.  Message Sealer Suspicion\n   Recipients are cautioned to treat every Sealer\
    \ of the ARC Chain with\n   suspicion.  Just as with a validated DKIM signature,\
    \ responsibility\n   for message handling is attributed to the sealing domain,\
    \ but whether\n   or not that Sealer is a malicious actor is out of scope of the\n\
    \   authentication mechanism.  Since ARC aids message delivery in the\n   event\
    \ of an authentication failure, ARC Sealers should be treated\n   with suspicion,\
    \ so that a malicious actor cannot seal spam or other\n   fraudulent messages\
    \ to aid their delivery, too.\n"
- title: 9.5.  Replay Attacks
  contents:
  - "9.5.  Replay Attacks\n   Since ARC inherits heavily from DKIM, it has similar\
    \ attack vectors.\n   In particular, the replay attack described in [RFC6376],\
    \ Section 8.6\n   is potentially amplified by ARC's chained statuses.  In an ARC\
    \ replay\n   attack, a malicious actor would take an intact and passing ARC Chain\n\
    \   and resend it to many recipients without making any modifications\n   that\
    \ invalidate the latest AMS or AS.  The impact to a receiver would\n   be more\
    \ DNS lookups and signature evaluations.  The scope of this\n   attack can be\
    \ limited by caching DNS queries and following the same\n   signing scope guidance\
    \ from [RFC6376], Section 5.4.1.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This document defines one new authentication method\
    \ and several\n   status codes (Section 10.1), new ptypes and properties\n   (Section\
    \ 10.2), three new headers fields (Section 10.3), and a new\n   enumerated status\
    \ code (Section 10.4).\n"
- title: 10.1.  Update to Email Authentication Result Names Registry
  contents:
  - "10.1.  Update to Email Authentication Result Names Registry\n   Per this document,\
    \ IANA has added one authentication method with\n   three codes to the IANA \"\
    Email Authentication Result Names\" registry:\n   o  Auth Method: arc\n      Code:\
    \ \"none\", \"pass\", \"fail\"\n      Specification: RFC 8617, Section 4.4\n \
    \     Status: active\n"
- title: 10.2.  Update to Email Authentication Methods Registry
  contents:
  - "10.2.  Update to Email Authentication Methods Registry\n   Per this document,\
    \ IANA has added the following to the \"Email\n   Authentication Methods\" registry,\
    \ which is defined in [RFC8601]:\n   o  Method: arc\n      Definition: RFC 8617,\
    \ Section 6\n      ptype: smtp\n      Property: remote-ip\n      Value: IP address\
    \ (v4 or v6) of originating SMTP connection\n      Status: active\n      Version:\
    \ 1\n   o  Method: arc\n      Definition: RFC 8617, Section 6\n      ptype: header\n\
    \      Property: oldest-pass\n      Value: The instance id of the oldest validating\
    \ AMS or 0 if they\n      all pass (see Section 5.2)\n      Status: active\n \
    \     Version: 1\n"
- title: 10.3.  New Header Fields in Permanent Message Header Field Registry
  contents:
  - "10.3.  New Header Fields in Permanent Message Header Field Registry\n   Per this\
    \ document, IANA has added the following three new header\n   fields to the \"\
    Permanent Message Header Field Names\" registry:\n   o  Header field name: ARC-Seal\n\
    \      Applicable protocol: mail\n      Status: experimental\n      Author/Change\
    \ controller: IETF\n      Specification document(s): RFC 8617\n      Related information:\
    \ RFC 6376\n   o  Header field name: ARC-Message-Signature\n      Applicable protocol:\
    \ mail\n      Status: experimental\n      Author/Change controller: IETF\n   \
    \   Specification document(s): RFC 8617\n      Related information: RFC 6376\n\
    \   o  Header field name: ARC-Authentication-Results\n      Applicable protocol:\
    \ mail\n      Status: experimental\n      Author/Change controller: IETF\n   \
    \   Specification document(s): RFC 8617\n      Related information: RFC 8601\n"
- title: 10.4.  New Status Code in Enumerated Status Codes Registry
  contents:
  - "10.4.  New Status Code in Enumerated Status Codes Registry\n   Per this document,\
    \ IANA has added the following value to the\n   \"Enumerated Status Codes\" registry:\n\
    \   o  Code: X.7.29\n      Sample Text: ARC validation failure\n      Associated\
    \ basic status code: 550\n      Description: This status code may be returned\
    \ when a message fails\n      ARC validation.\n      Reference: RFC 8617\n   \
    \   Submitter: K. Andersen\n      Change controller: IESG\n"
- title: 11.  Experimental Considerations
  contents:
  - "11.  Experimental Considerations\n   The ARC protocol is designed to address\
    \ common interoperability\n   issues introduced by intermediate message handlers.\
    \  Interoperability\n   issues are described in [RFC6377] and [RFC7960].\n   As\
    \ the ARC protocol is implemented by Internet Mail Handlers over\n   time, the\
    \ following should be evaluated in order to determine the\n   success of the protocol\
    \ in accomplishing the intended benefits.\n"
- title: 11.1.  Success Consideration
  contents:
  - "11.1.  Success Consideration\n   In an attempt to deliver legitimate messages\
    \ that users desire, many\n   receivers use heuristic-based methods to identify\
    \ messages that\n   arrive via indirect delivery paths.\n   ARC will be a success\
    \ if the presence of Authenticated Received\n   Chains allows for improved decision\
    \ making when processing legitimate\n   messages, specifically resulting in equal\
    \ or better delivery rates\n   than achieved through the use of heuristic approaches.\n"
- title: 11.2.  Failure Considerations
  contents:
  - "11.2.  Failure Considerations\n   ARC should function without introducing significant\
    \ new vectors for\n   abuse (see Section 9).  If unforeseen vectors are enabled\
    \ by ARC,\n   this protocol will be a failure.  Note that the weaknesses inherent\n\
    \   in the mail protocols ARC is built upon (such as DKIM replay attacks\n   and\
    \ other known issues) are not new vectors that can be attributed to\n   this specification.\n"
- title: 11.3.  Open Questions
  contents:
  - "11.3.  Open Questions\n   The following open questions are academic and have\
    \ no clear answer at\n   the time this document was published.  However, additional\n\
    \   deployments should be able to gather the necessary data to answer\n   some\
    \ or all of them.\n"
- title: 11.3.1.  Value of the ARC-Seal (AS) Header Field
  contents:
  - "11.3.1.  Value of the ARC-Seal (AS) Header Field\n   Data should be collected\
    \ to show if the AS provides value beyond the\n   AMS for either making delivery\
    \ decisions or catching malicious actors\n   trying to craft or replay malicious\
    \ chains.\n"
- title: 11.3.2.  Usage and/or Signals from Multiple Selectors and/or Domains in
  contents:
  - "11.3.2.  Usage and/or Signals from Multiple Selectors and/or Domains in\n   \
    \      ARC Sets\n   Any selectors and/or (sub)domains (under the control of the\
    \ sealing\n   ADMD) may be used for ARC header field signatures.\n   While implementers\
    \ may choose to use various selectors and/or domains\n   for ARC Set header fields,\
    \ no compelling argument for or against such\n   usage has been made within the\
    \ working group.  As such, we have\n   chosen to allow maximum freedom for the\
    \ experimental definition of\n   this protocol.\n   Wider deployment experience\
    \ and higher volumes of traffic may show\n   whether this is useful.\n"
- title: 11.3.3.  DNS Overhead
  contents:
  - "11.3.3.  DNS Overhead\n   Longer Authenticated Received Chains will require more\
    \ queries to\n   retrieve the keys for validating the chain.  While this is not\n\
    \   believed to be a security issue (see Section 9.2), it is unclear how\n   much\
    \ overhead will truly be added.  This is similar to some of the\n   initial processing\
    \ and query load concerns that were debated at the\n   time of the DKIM specification\
    \ development.\n   Data should be collected to better understand usable length\
    \ and\n   distribution of lengths found in valid Authenticated Received Chains\n\
    \   along with the DNS impact of processing Authenticated Received\n   Chains.\n\
    \   An effective operational maximum will have to be developed through\n   deployment\
    \ experience in the field.\n"
- title: 11.3.4.  What Trace Information Is Valuable?
  contents:
  - "11.3.4.  What Trace Information Is Valuable?\n   There are several edge cases\
    \ where the information in the AAR can\n   make the difference between message\
    \ delivery or rejection.  For\n   example, if there is a well-known mailing list\
    \ that seals with ARC\n   but doesn't do its own initial DMARC enforcement, an\
    \ Internet Mail\n   Handler with this knowledge could make a delivery decision\
    \ based upon\n   the authentication information it sees in the corresponding AAR\n\
    \   header field.\n   Certain trace information in the AAR is useful/necessary\
    \ in the\n   construction of DMARC reports.\n   Further, certain receivers believe\
    \ the entire set of trace\n   information would be valuable to feed into machine\
    \ learning systems\n   to identify fraud and/or provide other signals related\
    \ to message\n   delivery.\n   At this point, however, it is unclear what trace\
    \ information will be\n   valuable for all receivers, regardless of size.\n  \
    \ Data should be collected on what trace information receivers are\n   using that\
    \ provides useful signals that affect deliverability and\n   what portions of\
    \ the trace data are left untouched or provide no\n   useful information.\n  \
    \ Since many such systems are intentionally proprietary or confidential\n   to\
    \ prevent gaming by abusers, it may not be viable to reliably answer\n   this\
    \ particular question.  The evolving nature of attacks can also\n   shift the\
    \ landscape of \"useful\" information over time.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5234]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n \
    \             Specifications: ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234,\
    \ January 2008,\n              <https://www.rfc-editor.org/info/rfc5234>.\n  \
    \ [RFC5322]  Resnick, P., Ed., \"Internet Message Format\", RFC 5322,\n      \
    \        DOI 10.17487/RFC5322, October 2008,\n              <https://www.rfc-editor.org/info/rfc5322>.\n\
    \   [RFC5598]  Crocker, D., \"Internet Mail Architecture\", RFC 5598,\n      \
    \        DOI 10.17487/RFC5598, July 2009,\n              <https://www.rfc-editor.org/info/rfc5598>.\n\
    \   [RFC6376]  Crocker, D., Ed., Hansen, T., Ed., and M. Kucherawy, Ed.,\n   \
    \           \"DomainKeys Identified Mail (DKIM) Signatures\", STD 76,\n      \
    \        RFC 6376, DOI 10.17487/RFC6376, September 2011,\n              <https://www.rfc-editor.org/info/rfc6376>.\n\
    \   [RFC6377]  Kucherawy, M., \"DomainKeys Identified Mail (DKIM) and\n      \
    \        Mailing Lists\", BCP 167, RFC 6377, DOI 10.17487/RFC6377,\n         \
    \     September 2011, <https://www.rfc-editor.org/info/rfc6377>.\n   [RFC6532]\
    \  Yang, A., Steele, S., and N. Freed, \"Internationalized\n              Email\
    \ Headers\", RFC 6532, DOI 10.17487/RFC6532, February\n              2012, <https://www.rfc-editor.org/info/rfc6532>.\n\
    \   [RFC7208]  Kitterman, S., \"Sender Policy Framework (SPF) for\n          \
    \    Authorizing Use of Domains in Email, Version 1\", RFC 7208,\n           \
    \   DOI 10.17487/RFC7208, April 2014,\n              <https://www.rfc-editor.org/info/rfc7208>.\n\
    \   [RFC7405]  Kyzivat, P., \"Case-Sensitive String Support in ABNF\",\n     \
    \         RFC 7405, DOI 10.17487/RFC7405, December 2014,\n              <https://www.rfc-editor.org/info/rfc7405>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8601]  Kucherawy,\
    \ M., \"Message Header Field for Indicating\n              Message Authentication\
    \ Status\", RFC 8601,\n              DOI 10.17487/RFC8601, May 2019,\n       \
    \       <https://www.rfc-editor.org/info/rfc8601>.\n   [RFC8616]  Levine, J.,\
    \ \"Email Authentication for Internationalized\n              Mail\", RFC 8616,\
    \ DOI 10.17487/RFC8616, June 2019,\n              <https://www.rfc-editor.org/info/rfc8616>.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [ARC-MULTI]\n              Andersen, K., Blank,\
    \ S., Ed., and J. Levine, Ed., \"Using\n              Multiple Signing Algorithms\
    \ with the ARC (Authenticated\n              Received Chain) Protocol\", Work\
    \ in Progress, draft-ietf-\n              dmarc-arc-multi-03, March 2019.\n  \
    \ [ARC-USAGE]\n              Jones, S., Ed. and K. Andersen, \"Recommended Usage\
    \ of the\n              Authenticated Received Chain (ARC)\", Work in Progress,\n\
    \              draft-ietf-dmarc-arc-usage-07, April 2019.\n   [RFC7489]  Kucherawy,\
    \ M., Ed. and E. Zwicky, Ed., \"Domain-based\n              Message Authentication,\
    \ Reporting, and Conformance\n              (DMARC)\", RFC 7489, DOI 10.17487/RFC7489,\
    \ March 2015,\n              <https://www.rfc-editor.org/info/rfc7489>.\n   [RFC7960]\
    \  Martin, F., Ed., Lear, E., Ed., Draegen. Ed., T., Zwicky,\n              E.,\
    \ Ed., and K. Andersen, Ed., \"Interoperability Issues\n              between\
    \ Domain-based Message Authentication, Reporting,\n              and Conformance\
    \ (DMARC) and Indirect Email Flows\",\n              RFC 7960, DOI 10.17487/RFC7960,\
    \ September 2016,\n              <https://www.rfc-editor.org/info/rfc7960>.\n"
- title: Appendix A.  Design Requirements
  contents:
  - "Appendix A.  Design Requirements\n   The specification of the ARC framework is\
    \ driven by the following\n   high-level goals, security considerations, and practical\
    \ operational\n   requirements.\n"
- title: A.1.  Primary Design Criteria
  contents:
  - "A.1.  Primary Design Criteria\n   o  Provide a verifiable \"chain of custody\"\
    \ for email messages;\n   o  Not require changes for originators of email;\n \
    \  o  Support the verification of the ARC header field set by each hop\n     \
    \ in the handling chain;\n   o  Work at Internet scale; and\n   o  Provide a trustable\
    \ mechanism for the communication of\n      Authentication-Results across trust\
    \ boundaries.\n"
- title: A.2.  Out of Scope
  contents:
  - "A.2.  Out of Scope\n   ARC is not a trust framework.  Users of the ARC header\
    \ fields are\n   cautioned against making unsubstantiated conclusions when\n \
    \  encountering a \"broken\" ARC sequence.\n"
- title: Appendix B.  Example Usage
  contents:
  - "Appendix B.  Example Usage\n   The following message is an example of one that\
    \ has passed through\n   several intermediary handlers, some of which have modified\
    \ the\n   message and others which have not:\n"
- title: 'Return-Path: <jqd@d1.example>'
  contents:
  - 'Return-Path: <jqd@d1.example>

    '
- title: 'Received: from example.org (example.org [208.69.40.157])'
  contents:
  - "Received: from example.org (example.org [208.69.40.157])\n    by gmail.example\
    \ with ESMTP id d200mr22663000ykb.93.1421363207\n    for <fmartin@example.com>;\
    \ Thu, 14 Jan 2015 15:02:40 -0800 (PST)\n"
- title: 'Received: from segv.d1.example (segv.d1.example [72.52.75.15])'
  contents:
  - "Received: from segv.d1.example (segv.d1.example [72.52.75.15])\n    by lists.example.org\
    \ (8.14.5/8.14.5) with ESMTP id t0EKaNU9010123\n    for <arc@example.org>; Thu,\
    \ 14 Jan 2015 15:01:30 -0800 (PST)\n    (envelope-from jqd@d1.example)\n"
- title: 'Received: from [2001:DB8::1A] (w-x-y-z.dsl.static.isp.example [w.x.y.z])'
  contents:
  - "Received: from [2001:DB8::1A] (w-x-y-z.dsl.static.isp.example [w.x.y.z])\n  \
    \  (authenticated bits=0)\n    by segv.d1.example with ESMTP id t0FN4a8O084569;\n\
    \    Thu, 14 Jan 2015 15:00:01 -0800 (PST)\n    (envelope-from jqd@d1.example)\n"
- title: 'Received: from mail-ob0-f188.google.example'
  contents:
  - "Received: from mail-ob0-f188.google.example\n    (mail-ob0-f188.google.example\
    \ [208.69.40.157]) by\n    clochette.example.org with ESMTP id d200mr22663000ykb.93.1421363268\n\
    \    for <fmartin@example.org>; Thu, 14 Jan 2015 15:03:15 -0800 (PST)\n"
- title: 'ARC-Seal: i=3; a=rsa-sha256; cv=pass; d=clochette.example.org; s='
  contents:
  - "ARC-Seal: i=3; a=rsa-sha256; cv=pass; d=clochette.example.org; s=\n        clochette;\
    \ t=12345; b=CU87XzXlNlk5X/yW4l73UvPUcP9ivwYWxyBWcVrRs7\n        +HPx3K05nJhny2fvymbReAmOA9GTH/y+k9kEc59hAKVg==\n"
- title: 'ARC-Message-Signature: i=3; a=rsa-sha256; c=relaxed/relaxed; d='
  contents:
  - "ARC-Message-Signature: i=3; a=rsa-sha256; c=relaxed/relaxed; d=\n        clochette.example.org;\
    \ h=message-id:date:from:to:subject; s=\n        clochette; t=12345; bh=KWSe46TZKCcDbH4klJPo+tjk5LWJnVRlP5pvjXFZY\n\
    \        LQ=; b=o71vwyLsK+Wm4cOSlirXoRwzEvi0vqIjd/2/GkYFYlSd/GGfKzkAgPqxf\n  \
    \      K7ccBMP7Zjb/mpeggswHjEMS8x5NQ==\n"
- title: 'ARC-Authentication-Results: i=3; clochette.example.org; spf=fail'
  contents:
  - "ARC-Authentication-Results: i=3; clochette.example.org; spf=fail\n    smtp.from=jqd@d1.example;\
    \ dkim=fail (512-bit key)\n    header.i=@d1.example; dmarc=fail; arc=pass (as.2.gmail.example=pass,\n\
    \    ams.2.gmail.example=pass, as.1.lists.example.org=pass,\n    ams.1.lists.example.org=fail\
    \ (message has been altered))\n"
- title: 'Authentication-Results: clochette.example.org; spf=fail'
  contents:
  - "Authentication-Results: clochette.example.org; spf=fail\n    smtp.from=jqd@d1.example;\
    \ dkim=fail (512-bit key)\n    header.i=@d1.example; dmarc=fail; arc=pass (as.2.gmail.example=pass,\n\
    \    ams.2.gmail.example=pass, as.1.lists.example.org=pass,\n    ams.1.lists.example.org=fail\
    \ (message has been altered))\n"
- title: 'ARC-Seal: i=2; a=rsa-sha256; cv=pass; d=gmail.example; s=20120806; t='
  contents:
  - "ARC-Seal: i=2; a=rsa-sha256; cv=pass; d=gmail.example; s=20120806; t=\n     \
    \   12345; b=Zpukh/kJL4Q7Kv391FKwTepgS56dgHIcdhhJZjsalhqkFIQQAJ4T9BE\n       \
    \ 8jjLXWpRNuh81yqnT1/jHn086RwezGw==\n"
- title: 'ARC-Message-Signature: i=2; a=rsa-sha256; c=relaxed/relaxed; d='
  contents:
  - "ARC-Message-Signature: i=2; a=rsa-sha256; c=relaxed/relaxed; d=\n        gmail.example;\
    \ h=message-id:date:from:to:subject; s=20120806; t=\n        12345; bh=KWSe46TZKCcDbH4klJPo+tjk5LWJnVRlP5pvjXFZYLQ=;\
    \ b=CVoG44\n        cVZvoSs2mMig2wwqPaJ4OZS5XGMCegWqQs1wvRZJS894tJM0xO1RJLgCPsBOxdA5\n\
    \        9WSqI9s9DfyKDfWg==\n"
- title: 'ARC-Authentication-Results: i=2; gmail.example; spf=fail'
  contents:
  - "ARC-Authentication-Results: i=2; gmail.example; spf=fail\n    smtp.from=jqd@d1.example;\
    \ dkim=fail (512-bit key)\n    header.i=@example.org; dmarc=fail; arc=pass\n \
    \   (as.1.lists.example.org=pass, ams.1.lists.example.org=pass)\n"
- title: 'ARC-Seal: i=1; a=rsa-sha256; cv=none; d=lists.example.org; s=dk-lists;'
  contents:
  - "ARC-Seal: i=1; a=rsa-sha256; cv=none; d=lists.example.org; s=dk-lists;\n    \
    \     t=12345; b=TlCCKzgk3TrAa+G77gYYO8Fxk4q/Ml0biqduZJeOYh6+0zhwQ8u/\n      \
    \  lHxLi21pxu347isLSuNtvIagIvAQna9a5A==\n"
- title: 'ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d='
  contents:
  - "ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=\n        lists.example.org;\
    \ h=message-id:date:from:to:subject; s=\n        dk-lists; t=12345; bh=KWSe46TZKCcDbH4klJPo+tjk5LWJnVRlP5pvjXFZYL\n\
    \        Q=; b=DsoD3n3hiwlrN1ma8IZQFgZx8EDO7Wah3hUjIEsYKuShRKYB4LwGUiKD5Y\n  \
    \      yHgcIwGHhSc/4+ewYqHMWDnuFxiQ==\n"
- title: 'ARC-Authentication-Results: i=1; lists.example.org; spf=pass'
  contents:
  - "ARC-Authentication-Results: i=1; lists.example.org; spf=pass\n    smtp.mfrom=jqd@d1.example;\
    \ dkim=pass (512-bit key)\n    header.i=@d1.example; dmarc=pass\n"
- title: 'DKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=d1.example; h='
  contents:
  - "DKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=d1.example; h=\n      \
    \  message-id:date:from:to:subject; s=origin2015; bh=bIxxaeIQvmOBdT\n        AitYfSNFgzPP4=;\
    \ b=qKjd5fYibKXWWIcMKCgRYuo1vJ2fD+IAQPjX+uamXIGY2Q\n        0HjQ+Lq3/yHzG3JHJp6780/nKQPOWt2UDJQrJkEA==\n"
- title: 'Message-ID: <54B84785.1060301@d1.example>'
  contents:
  - 'Message-ID: <54B84785.1060301@d1.example>

    '
- title: 'Date: Thu, 14 Jan 2015 15:00:01 -0800'
  contents:
  - 'Date: Thu, 14 Jan 2015 15:00:01 -0800

    '
- title: 'From: John Q Doe <jqd@d1.example>'
  contents:
  - 'From: John Q Doe <jqd@d1.example>

    '
- title: 'To: arc@dmarc.example'
  contents:
  - 'To: arc@dmarc.example

    '
- title: 'Subject: [List 2] Example 1'
  contents:
  - 'Subject: [List 2] Example 1

    '
- title: Hey gang,
  contents:
  - 'Hey gang,

    '
- title: This is a test message.
  contents:
  - 'This is a test message.

    '
- title: --J.
  contents:
  - '--J.

    '
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This document originated with the work of OAR-Dev Group.\n\
    \   The authors thank all of the OAR-Dev and the subsequent DMARC WG for\n   the\
    \ ongoing help and thought-provoking discussions from all the\n   participants,\
    \ especially J. Trent Adams, Marc Bradshaw, Alex Brotman,\n   Greg Colburn, Dave\
    \ Crocker, Tim Draegen, Mark Eissler, Peter\n   Goldstein, Bron Gondwana, Mike\
    \ Hammer, Mike Jones, Steve Jones, Scott\n   Kitterman, Barry Leiba, Franck Martin,\
    \ John Rae-Grant, Paul Rock,\n   Gene Shuman, Terry Zink, and Elizabeth Zwicky.\n\
    \   Grateful appreciation is extended to the people who provided feedback\n  \
    \ through the arc-discuss mailing list.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Kurt Andersen\n   LinkedIn\n   1000 West Maude Ave\n \
    \  Sunnyvale, California  94085\n   United States of America\n   Email: kurt+ietf@drkurt.com\n\
    \   Brandon Long (editor)\n   Google\n   Email: blong@google.com\n   Seth Blank\
    \ (editor)\n   Valimail\n   Email: seth@valimail.com\n   Murray Kucherawy (editor)\n\
    \   TDP\n   Email: superuser@gmail.com\n"
