- title: __initial_text__
  contents:
  - "                    Additional Diffie-Hellman Tests\n        for the Internet\
    \ Key Exchange Protocol Version 2 (IKEv2)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document adds a small number of mandatory tests required for\
    \ the\n   secure operation of the Internet Key Exchange Protocol version 2\n \
    \  (IKEv2) with elliptic curve groups.  No change is required to IKE\n   implementations\
    \ that use modular exponential groups, other than a few\n   rarely used so-called\
    \ Digital Signature Algorithm (DSA) groups.  This\n   document updates the IKEv2\
    \ protocol, RFC 5996.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6989.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions Used in This Document ..........................3\n  \
    \ 2. Group Membership Tests ..........................................3\n    \
    \  2.1. Sophie Germain Prime MODP Groups ...........................3\n      2.2.\
    \ MODP Groups with Small Subgroups ...........................3\n      2.3. Elliptic\
    \ Curve Groups ......................................4\n      2.4. Transition\
    \ .................................................4\n      2.5. Protocol Behavior\
    \ ..........................................5\n   3. Side-Channel Attacks ............................................5\n\
    \   4. Security Considerations .........................................6\n  \
    \    4.1. DH Key Reuse and Multiple Peers ............................6\n    \
    \  4.2. DH Key Reuse: Variants .....................................7\n      4.3.\
    \ Groups Not Covered by This RFC .............................7\n      4.4. Behavior\
    \ upon Test Failure .................................7\n   5. IANA Considerations\
    \ .............................................8\n   6. Acknowledgements ................................................8\n\
    \   7. References ......................................................9\n  \
    \    7.1. Normative References .......................................9\n    \
    \  7.2. Informative References .....................................9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IKEv2 [RFC5996] consists of the establishment of a shared\
    \ secret\n   using the Diffie-Hellman (DH) protocol, followed by authentication\
    \ of\n   the two peers.  Existing implementations typically use modular\n   exponential\
    \ (MODP) DH groups, such as those defined in [RFC3526].\n   IKEv2 does not require\
    \ that any tests be performed by a peer\n   receiving a public Diffie-Hellman\
    \ key from the other peer.  This is\n   fine for the common case of MODP groups.\
    \  For other DH groups, when\n   peers reuse DH values across multiple IKE sessions,\
    \ the lack of tests\n   by the recipient results in a potential vulnerability\
    \ (see\n   Section 4.1 for more details).  In particular, this is true for\n \
    \  Elliptic Curve (EC) groups, whose use is becoming ever more popular.\n   This\
    \ document defines such tests for several types of DH groups.\n   In addition,\
    \ this document describes another potential attack related\n   to the reuse of\
    \ DH keys: a timing attack.  This additional material\n   is taken from [RFC2412].\n\
    \   This document updates [RFC5996] by adding security requirements that\n   apply\
    \ to many of the protocol's implementations.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Group Membership Tests
  contents:
  - "2.  Group Membership Tests\n   This section describes the tests that need to\
    \ be performed by IKE\n   peers receiving a Key Exchange (KE) payload.  The tests\
    \ are\n   RECOMMENDED for all implementations but only REQUIRED for those that\n\
    \   reuse DH private keys (as defined in [RFC5996], Section 2.12).  The\n   tests\
    \ apply to the recipient of a KE payload and describe how it\n   should check\
    \ the received payload.  They are listed here according to\n   the DH group being\
    \ used.\n"
- title: 2.1.  Sophie Germain Prime MODP Groups
  contents:
  - "2.1.  Sophie Germain Prime MODP Groups\n   These are currently the most commonly\
    \ used groups; all these groups\n   have the property that (p-1)/2 is also prime;\
    \ this section applies to\n   any such MODP group.  Each recipient MUST verify\
    \ that the peer's\n   public value r is in the legal range (1 < r < p-1).  According\
    \ to\n   [Menezes], Section 2.2, even with this check there remains the\n   possibility\
    \ of leaking a single bit of the secret exponent when DH\n   keys are reused;\
    \ this amount of leakage is insignificant.\n   See Section 5 for the specific\
    \ groups covered by this section.\n"
- title: 2.2.  MODP Groups with Small Subgroups
  contents:
  - "2.2.  MODP Groups with Small Subgroups\n   [RFC5114] defines modular exponential\
    \ groups with small subgroups;\n   these are modular exponential groups with comparatively\
    \ small\n   subgroups, and all have (p-1)/2 composite.  Section 2.1 of [Menezes]\n\
    \   describes some informational leakage from a small-subgroup attack on\n   these\
    \ groups if the DH private value is reused.\n   This leakage can be prevented\
    \ if the recipient performs a test on the\n   peer's public value; however, this\
    \ test is expensive (approximately\n   as expensive as what reusing DH private\
    \ values saves).  In addition,\n   the NIST standard ([NIST-800-56A], Section\
    \ 5.6.2.4) requires that\n   test; hence, anyone needing to conform to that standard\
    \ will need to\n   implement the test anyway.\n   Because of the above, the IKE\
    \ implementation MUST choose between one\n   of the following two options:\n \
    \  o  It MUST check both that the peer's public value is in range (1 < r\n   \
    \   < p-1) and that r^q = 1 mod p (where q is the size of the\n      subgroup,\
    \ as listed in the RFC defining the group).  DH private\n      values MAY then\
    \ be reused.  This option is appropriate if\n      conformance to [NIST-800-56A]\
    \ is required.\n   o  It MUST NOT reuse DH private values (that is, the DH private\
    \ value\n      for each DH exchange MUST be generated from a fresh output of a\n\
    \      cryptographically secure random number generator), and it MUST\n      check\
    \ that the peer's public value is in range (1 < r < p-1).\n      This option is\
    \ more appropriate if conformance to [NIST-800-56A]\n      is not required.\n\
    \   See Section 5 for the specific groups covered by this section.\n"
- title: 2.3.  Elliptic Curve Groups
  contents:
  - "2.3.  Elliptic Curve Groups\n   IKEv2 can be used with elliptic curve groups\
    \ defined over a field\n   GF(p) [RFC5903] [RFC5114].  According to [Menezes],\
    \ Section 2.3,\n   there is some informational leakage possible.  A receiving\
    \ peer MUST\n   check that its peer's public value is valid; that is, the x and\
    \ y\n   parameters from the peer's public value satisfy the curve equation,\n\
    \   y^2 = x^3 + ax + b mod p (where for groups 19, 20, and 21, a=-3 (mod\n   p),\
    \ and all other values of a, b, and p for the group are listed in\n   the RFC\
    \ defining the group).\n   We note that an additional check to ensure that the\
    \ public value is\n   not the point at infinity is not needed, because IKE (see\
    \ Section 7\n   of [RFC5903]) does not allow for encoding this value.\n   See\
    \ Section 5 for the specific groups covered by this section.\n"
- title: 2.4.  Transition
  contents:
  - "2.4.  Transition\n   Existing implementations of IKEv2 with Elliptic Curve Diffie-Hellman\n\
    \   (ECDH) groups may be modified to include the tests described in the\n   current\
    \ document, even if they do not reuse DH keys.  The tests can\n   be considered\
    \ as sanity checks and will prevent the code having to\n   handle inputs that\
    \ it may not have been designed to handle.\n   ECDH implementations that do reuse\
    \ DH keys MUST be enhanced to\n   include the above tests.\n"
- title: 2.5.  Protocol Behavior
  contents:
  - "2.5.  Protocol Behavior\n   The recipient of a DH public key that fails one of\
    \ the above tests\n   must assume that the sender is either truly malicious or\
    \ has a bug in\n   its implementation.  The behavior defined below attempts to\
    \ balance\n   resistance to attackers that are trying to disrupt the IKE exchange,\n\
    \   against the need to help a badly implemented peer by providing useful\n  \
    \ error indications.\n   If this error happens during the IKE_SA_INIT exchange,\
    \ then the\n   recipient MUST drop the message that contains an invalid KE payload\n\
    \   and MUST NOT use that message when creating the IKE security\n   association\
    \ (SA).\n   If the implementation employs the DoS-resistant behavior proposed\
    \ in\n   Section 2.4 of [RFC5996], it may simply ignore the erroneous request\n\
    \   or response message, and continue waiting for a later message\n   containing\
    \ a legitimate KE payload.\n   If DoS-resistant behavior is not implemented and\
    \ the invalid KE\n   payload was in the IKE_SA_INIT request, the implementation\
    \ MAY send\n   an INVALID_SYNTAX error notification back and remove the in-progress\n\
    \   IKE SA; if the invalid KE payload was in the IKE_SA_INIT response,\n   then\
    \ the implementation MAY simply delete the half-created IKE SA and\n   re-initiate\
    \ the exchange.\n   If the invalid KE payload is received during the CREATE_CHILD_SA\n\
    \   exchange (or any other exchange after the IKE SA has been\n   established)\
    \ and the invalid KE payload is in the request message,\n   the Responder MUST\
    \ reply with an INVALID_SYNTAX error notification\n   and drop the IKE SA.  If\
    \ the invalid KE payload is in a response, the\n   Initiator getting this reply\
    \ MUST immediately delete the IKE SA by\n   sending an IKE SA Delete notification\
    \ as a new exchange.  In this\n   case, the sender evidently has an implementation\
    \ bug, and dropping\n   the IKE SA makes it easier to detect.\n"
- title: 3.  Side-Channel Attacks
  contents:
  - "3.  Side-Channel Attacks\n   In addition to the small-subgroup attack, there\
    \ is also a potential\n   timing attack on IKE peers when they are reusing Diffie-Hellman\n\
    \   secret values.  This is a side-channel attack, which means that it\n   may\
    \ or may not be a vulnerability in certain cases, depending on\n   implementation\
    \ details and the threat model.\n   The remainder of this section is quoted from\
    \ [RFC2412], Section 5,\n   with a few minor clarifications.  This attack still\
    \ applies to IKEv2\n   implementations, and both to MODP groups and ECDH groups.\
    \  We also\n   note that more efficient countermeasures are available for EC groups\n\
    \   represented in projective form, but these are outside the scope of\n   the\
    \ current document.\n   Timing attacks that are capable of recovering the exponent\
    \ value used\n   in Diffie-Hellman calculations have been described by Paul Kocher\n\
    \   [Kocher].  In order to nullify the attack, implementors must take\n   pains\
    \ to obscure the sequence of operations involved in carrying out\n   modular exponentiations.\n\
    \   One potential method to foil these timing attacks is to use a\n   \"blinding\
    \ factor\".  In this method, a group element, r, is chosen at\n   random, and\
    \ its multiplicative inverse modulo p is computed, which\n   we'll call r_inv.\
    \  r_inv can be computed by the Extended Euclidean\n   Method, using r and p as\
    \ inputs.  When an exponent x is chosen, the\n   value r_inv^x is also calculated.\
    \  Then, when calculating (g^y)^x,\n   the implementation will calculate this\
    \ sequence:\n      A = r*g^y\n      B = A^x = (r*g^y)^x = (r^x)(g^(xy))\n    \
    \  C = B*r_inv^x = (r^x)(r^(-1*x))(g^(xy)) = g^(xy)\n   The blinding factor is\
    \ only necessary if the exponent x is used more\n   than 100 times.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This entire document is concerned with the IKEv2\
    \ security protocol\n   and the need to harden it in some cases.\n"
- title: 4.1.  DH Key Reuse and Multiple Peers
  contents:
  - "4.1.  DH Key Reuse and Multiple Peers\n   This section describes one variant\
    \ of the attack prevented by the\n   tests defined above.\n   Suppose that IKE\
    \ peer Alice maintains IKE security associations with\n   peers Bob and Eve. \
    \ Alice uses the same secret ECDH key for both SAs,\n   which is allowed with\
    \ some restrictions.  If Alice does not implement\n   these tests, Eve will be\
    \ able to send a malformed public key, which\n   would allow her to efficiently\
    \ determine Alice's private key (as\n   described in Section 2 of [Menezes]).\
    \  Since the key is shared, Eve\n   will be able to obtain Alice's shared IKE\
    \ SA key with Bob.\n"
- title: '4.2.  DH Key Reuse: Variants'
  contents:
  - "4.2.  DH Key Reuse: Variants\n   Private DH keys can be reused in different ways,\
    \ with subtly\n   different security implications.  For example:\n   1.  DH keys\
    \ are reused for multiple connections (IKE SAs) to the same\n       peer and for\
    \ connections to different peers.\n   2.  DH keys are reused for multiple connections\
    \ to the same peer\n       (e.g., when the peer is identified by its IP address)\
    \ but not for\n       different peers.\n   3.  DH keys are reused only when they\
    \ had not been used to complete\n       an exchange, e.g., when the peer replies\
    \ with an\n       INVALID_KE_PAYLOAD notification.\n   Both the small-subgroup\
    \ attack and the timing attack described in\n   this document apply at least to\
    \ options #1 and #2.\n"
- title: 4.3.  Groups Not Covered by This RFC
  contents:
  - "4.3.  Groups Not Covered by This RFC\n   There are a number of group types that\
    \ are not specifically addressed\n   by this RFC.  A document that defines such\
    \ a group MUST describe the\n   tests required by that group.\n   One specific\
    \ type of group would be an even-characteristic elliptic\n   curve group.  Now,\
    \ these curves have cofactors greater than 1; this\n   leads to a possibility\
    \ of some information leakage.  There are\n   several ways to address this information\
    \ leakage, such as performing\n   a test analogous to the test in Section 2.2\
    \ or adjusting the ECDH\n   operation to avoid this leakage (such as Elliptic\
    \ Curve Cryptography\n   Cofactor Diffie-Hellman (ECC CDH), where the shared secret\
    \ really is\n   hxyG).  Because the appropriate test depends on how the group\
    \ is\n   defined, we cannot document it in advance.\n"
- title: 4.4.  Behavior upon Test Failure
  contents:
  - "4.4.  Behavior upon Test Failure\n   The behavior recommended in Section 2.5\
    \ is in line with generic error\n   treatment during the IKE_SA_INIT exchange,\
    \ per Section 2.21.1 of\n   [RFC5996].  The sender is not required to send back\
    \ an error\n   notification, and the recipient cannot depend on this notification\n\
    \   because it is unauthenticated and may in fact have been sent by an\n   attacker\
    \ trying to launch a DoS attack on the connection.  Thus, the\n   notification\
    \ is only useful to debug implementation errors.\n   On the other hand, the error\
    \ notification is secure in the sense that\n   no secret information is leaked.\
    \  All IKEv2 Diffie-Hellman groups are\n   publicly known, and none of the tests\
    \ defined here depend on any\n   private key.  In fact, the tests can all be performed\
    \ by an\n   eavesdropper.\n   The situation when the failure occurs in the CREATE_CHILD_SA\
    \ exchange\n   is different, since everything is protected by an IKE SA.  The\
    \ peers\n   are authenticated, and error notifications can be relied on.  See\n\
    \   Section 2.21.3 of [RFC5996] for more details on error handling in\n   this\
    \ case.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has added a column named \"Recipient Tests\"\
    \ to the Transform\n   Type 4 - Diffie-Hellman Group Transform IDs registry for\
    \ IKEv2\n   [IANA-IKEv2-Registry].\n   This column has been initially populated\
    \ as follows.\n      +------------------------------------+-----------------------+\n\
    \      |               Number               |    Recipient Tests    |\n      +------------------------------------+-----------------------+\n\
    \      |     1, 2, 5, 14, 15, 16, 17, 18    | RFC 6989, Section 2.1 |\n      |\
    \             22, 23, 24             | RFC 6989, Section 2.2 |\n      | 19, 20,\
    \ 21, 25, 26, 27, 28, 29, 30 | RFC 6989, Section 2.3 |\n      +------------------------------------+-----------------------+\n\
    \   Groups 27-30 are defined in [RFC6954].\n   Future documents that define new\
    \ DH groups for IKEv2 are REQUIRED to\n   provide this information for each new\
    \ group, possibly by referring to\n   the current document.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   We would like to thank Dan Harkins, who initially raised\
    \ this issue\n   on the IPsec mailing list.  Thanks to Tero Kivinen and Rene Struik\n\
    \   for their useful comments.  Much of the text in Section 3 is taken\n   from\
    \ [RFC2412], and we would like to thank its author, Hilarie Orman.\n   The document\
    \ was originally prepared using the lyx2rfc tool, created\n   by Nico Williams.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC5996]  Kaufman, C., Hoffman, P., Nir, Y., and P. Eronen,\n   \
    \           \"Internet Key Exchange Protocol Version 2 (IKEv2)\",\n          \
    \    RFC 5996, September 2010.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [IANA-IKEv2-Registry]\n              IANA, \"\
    Internet Key Exchange Version 2 (IKEv2)\n              Parameters\",\n       \
    \       <http://www.iana.org/assignments/ikev2-parameters/>.\n   [Kocher]   Kocher,\
    \ P., \"Timing Attacks on Implementations of Diffie-\n              Hellman, RSA,\
    \ DSS, and Other Systems\", December 1996,\n              <http://www.cryptography.com/timingattack/paper.html>.\n\
    \   [Menezes]  Menezes, A. and B. Ustaoglu, \"On Reusing Ephemeral Keys In\n \
    \             Diffie-Hellman Key Agreement Protocols\", December 2008,\n     \
    \         <http://www.cacr.math.uwaterloo.ca/techreports/2008/\n             \
    \ cacr2008-24.pdf>.\n   [NIST-800-56A]\n              National Institute of Standards\
    \ and Technology (NIST),\n              \"Recommendation for Pair-Wise Key Establishment\
    \ Schemes\n              Using Discrete Logarithm Cryptography (Revised)\", NIST\
    \ PUB\n              800-56A, March 2007.\n   [RFC2412]  Orman, H., \"The OAKLEY\
    \ Key Determination Protocol\",\n              RFC 2412, November 1998.\n   [RFC3526]\
    \  Kivinen, T. and M. Kojo, \"More Modular Exponential (MODP)\n              Diffie-Hellman\
    \ groups for Internet Key Exchange (IKE)\",\n              RFC 3526, May 2003.\n\
    \   [RFC5114]  Lepinski, M. and S. Kent, \"Additional Diffie-Hellman\n       \
    \       Groups for Use with IETF Standards\", RFC 5114,\n              January\
    \ 2008.\n   [RFC5903]  Fu, D. and J. Solinas, \"Elliptic Curve Groups modulo a\n\
    \              Prime (ECP Groups) for IKE and IKEv2\", RFC 5903,\n           \
    \   June 2010.\n   [RFC6954]  Merkle, J. and M. Lochter, \"Using the Elliptic\
    \ Curve\n              Cryptography (ECC) Brainpool Curves for the Internet Key\n\
    \              Exchange Protocol Version 2 (IKEv2)\", RFC 6954, July 2013.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Yaron Sheffer\n   Porticor\n   EMail: yaronf.ietf@gmail.com\n\
    \   Scott Fluhrer\n   Cisco Systems\n   1414 Massachusetts Ave.\n   Boxborough,\
    \ MA  01719\n   USA\n   EMail: sfluhrer@cisco.com\n"
