- title: __initial_text__
  contents:
  - "                    Pseudowire Setup and Maintenance\n              Using the\
    \ Label Distribution Protocol (LDP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   Layer 2 services (such as Frame Relay, Asynchronous Transfer Mode,\n\
    \   and Ethernet) can be \"emulated\" over an MPLS backbone by\n   encapsulating\
    \ the Layer 2 Protocol Data Units (PDU) and transmitting\n   them over \"pseudowires\"\
    .  It is also possible to use pseudowires to\n   provide low-rate Time Division\
    \ Multiplexed and a Synchronous Optical\n   NETworking circuit emulation over\
    \ an MPLS-enabled network.  This\n   document specifies a protocol for establishing\
    \ and maintaining the\n   pseudowires, using extensions to Label Distribution\
    \ Protocol (LDP).\n   Procedures for encapsulating Layer 2 PDUs are specified\
    \ in a set of\n   companion documents.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Specification of Requirements ...................................5\n  \
    \ 3. The Pseudowire Label ............................................5\n   4.\
    \ Details Specific to Particular Emulated Services ................7\n      4.1.\
    \ IP Layer 2 Transport .......................................7\n   5. LDP .............................................................7\n\
    \      5.1. LDP Extensions .............................................8\n  \
    \    5.2. The PWid FEC Element .......................................8\n    \
    \  5.3. The Generalized PWid FEC Element ..........................10\n      \
    \     5.3.1. Attachment Identifiers .............................11\n        \
    \   5.3.2. Encoding the Generalized ID FEC Element ............13\n          \
    \        5.3.2.1. Interface Parameters TLV ..................14\n            \
    \      5.3.2.2. PW Grouping TLV ...........................14\n           5.3.3.\
    \ Signaling Procedures ...............................15\n      5.4. Signaling\
    \ of Pseudowire Status ............................16\n           5.4.1. Use of\
    \ Label Mappings Messages .....................16\n           5.4.2. Signaling\
    \ PW Status ................................17\n           5.4.3. Pseudowire Status\
    \ Negotiation Procedures ...........18\n      5.5. Interface Parameters Sub-TLV\
    \ ..............................19\n   6. Control Word ...................................................20\n\
    \      6.1. PW Types for Which the Control Word is REQUIRED ...........20\n  \
    \    6.2. PW Types for Which the Control Word is NOT Mandatory ......21\n    \
    \  6.3. LDP Label Withdrawal Procedures ...........................22\n      6.4.\
    \ Sequencing Considerations .................................23\n           6.4.1.\
    \ Label Advertisements ...............................23\n           6.4.2. Label\
    \ Release ......................................24\n   7. IANA Considerations\
    \ ............................................24\n      7.1. LDP TLV TYPE ..............................................24\n\
    \      7.2. LDP Status Codes ..........................................24\n  \
    \    7.3. FEC Type Name Space .......................................25\n   8.\
    \ Security Considerations ........................................25\n      8.1.\
    \ Data-Plane Security .......................................25\n      8.2. Control-Plane\
    \ Security ....................................26\n   9. Acknowledgements ...............................................27\n\
    \   10. Normative References ..........................................27\n  \
    \ 11. Informative References ........................................27\n   12.\
    \ Additional Contributing Authors ...............................28\n   Appendix\
    \ A. C-bit Handling Procedures Diagram .....................31\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In [FRAME], [ATM], [PPPHDLC], and [ETH], it is explained\
    \ how to\n   encapsulate a Layer 2 Protocol Data Unit (PDU) for transmission over\n\
    \   an MPLS-enabled network.  Those documents specify that a \"pseudowire\n  \
    \ header\", consisting of a demultiplexor field, will be prepended to\n   the\
    \ encapsulated PDU.  The pseudowire demultiplexor field is\n   prepended before\
    \ transmitting a packet on a pseudowire.  When the\n   packet arrives at the remote\
    \ endpoint of the pseudowire, the\n   demultiplexor is what enables the receiver\
    \ to identify the particular\n   pseudowire on which the packet has arrived. \
    \ To transmit the packet\n   from one pseudowire endpoint to another, the packet\
    \ may need to\n   travel through a \"Packet Switched Network (PSN) tunnel\"; this\
    \ will\n   require that an additional header be prepended to the packet.\n   Accompanying\
    \ documents [CEP, SAToP] specify methods for transporting\n   time-division multiplexing\
    \ (TDM) digital signals (TDM circuit\n   emulation) over a packet-oriented MPLS-enabled\
    \ network.  The\n   transmission system for circuit-oriented TDM signals is the\n\
    \   Synchronous Optical Network (SONET)[SDH]/Synchronous Digital\n   Hierarchy\
    \ (SDH) [ITUG].  To support TDM traffic, which includes\n   voice, data, and private\
    \ leased-line service, the pseudowires must\n   emulate the circuit characteristics\
    \ of SONET/SDH payloads.  The TDM\n   signals and payloads are encapsulated for\
    \ transmission over\n   pseudowires.  A pseudowire demultiplexor and a PSN tunnel\
    \ header is\n   prepended to this encapsulation.\n   [SAToP] describes methods\
    \ for transporting low-rate time-division\n   multiplexing (TDM) digital signals\
    \ (TDM circuit emulation) over PSNs,\n   while [CEP] similarly describes transport\
    \ of high-rate TDM\n   (SONET/SDH).  To support TDM traffic, the pseudowires must\
    \ emulate\n   the circuit characteristics of the original T1, E1, T3, E3, SONET,\
    \ or\n   SDH signals.  [SAToP] does this by encapsulating an arbitrary but\n \
    \  constant amount of the TDM data in each packet, and the other methods\n   encapsulate\
    \ TDM structures.\n   In this document, we specify the use of the MPLS Label Distribution\n\
    \   Protocol, LDP [RFC3036], as a protocol for setting up and maintaining\n  \
    \ the pseudowires.  In particular, we define new TLVs, FEC elements,\n   parameters,\
    \ and codes for LDP, which enable LDP to identify\n   pseudowires and to signal\
    \ attributes of pseudowires.  We specify how\n   a pseudowire endpoint uses these\
    \ TLVs in LDP to bind a demultiplexor\n   field value to a pseudowire, and how\
    \ it informs the remote endpoint\n   of the binding.  We also specify procedures\
    \ for reporting pseudowire\n   status changes, for passing additional information\
    \ about the\n   pseudowire as needed, and for releasing the bindings.\n   In the\
    \ protocol specified herein, the pseudowire demultiplexor field\n   is an MPLS\
    \ label.  Thus, the packets that are transmitted from one\n   end of the pseudowire\
    \ to the other are MPLS packets, which must be\n   transmitted through an MPLS\
    \ tunnel.  However, if the pseudowire\n   endpoints are immediately adjacent and\
    \ penultimate hop popping\n   behavior is in use, the MPLS tunnel may not be necessary.\
    \  Any sort\n   of PSN tunnel can be used, as long as it is possible to transmit\
    \ MPLS\n   packets through it.  The PSN tunnel can itself be an MPLS LSP, or any\n\
    \   other sort of tunnel that can carry MPLS packets.  Procedures for\n   setting\
    \ up and maintaining the MPLS tunnels are outside the scope of\n   this document.\n\
    \   This document deals only with the setup and maintenance of point-to-\n   point\
    \ pseudowires.  Neither point-to-multipoint nor multipoint-to-\n   point pseudowires\
    \ are discussed.\n   QoS-related issues are not discussed in this document.  The\
    \ following\n   two figures describe the reference models that are derived from\n\
    \   [RFC3985] to support the PW emulated services.\n         |<--------------\
    \ Emulated Service ---------------->|\n         |                            \
    \                      |\n         |          |<------- Pseudowire ------->| \
    \         |\n         |          |                            |          |\n \
    \        |Attachment|    |<-- PSN Tunnel -->|    |Attachment|\n         |  Circuit\
    \ V    V                  V    V  Circuit |\n         V   (AC)   +----+      \
    \            +----+   (AC)   V\n   +-----+    |     | PE1|==================|\
    \ PE2|     |    +-----+\n   |     |----------|............PW1.............|----------|\
    \     |\n   | CE1 |    |     |    |                  |    |     |    | CE2 |\n\
    \   |     |----------|............PW2.............|----------|     |\n   +-----+\
    \  ^ |     |    |==================|    |     | ^  +-----+\n         ^  |    \
    \   +----+                  +----+     | |  ^\n         |  |   Provider Edge 1\
    \         Provider Edge 2  |  |\n         |  |                               \
    \             |  |\n   Customer |                                            |\
    \ Customer\n   Edge 1   |                                            | Edge 2\n\
    \            |                                            |\n      native service\
    \                               native service\n                     Figure 1:\
    \ PWE3 Reference Model\n   +-----------------+                           +-----------------+\n\
    \   |Emulated Service |                           |Emulated Service |\n   |(e.g.,\
    \ TDM, ATM) |<==== Emulated Service ===>|(e.g., TDM, ATM) |\n   +-----------------+\
    \                           +-----------------+\n   |    Payload      |      \
    \                     |    Payload      |\n   |  Encapsulation  |<====== Pseudowire\
    \ =======>|  Encapsulation  |\n   +-----------------+                        \
    \   +-----------------+\n   |PW Demultiplexer |                           |PW\
    \ Demultiplexer |\n   |   PSN Tunnel,   |<======= PSN Tunnel ======>|  PSN Tunnel,\
    \    |\n   | PSN & Physical  |                           | PSN & Physical  |\n\
    \   |     Layers      |                           |    Layers       |\n   +-------+---------+\
    \        __________         +---------+-------+\n           |                /\
    \            \\                 |\n           +===============/      PSN     \\\
    ================+\n                           \\              /\n            \
    \                \\____________/\n             Figure 2: PWE3 Protocol Stack Reference\
    \ Model\n   For the purpose of this document, PE1 will be defined as the ingress\n\
    \   router, and PE2 as the egress router.  A layer 2 PDU will be received\n  \
    \ at PE1, encapsulated at PE1, transported and decapsulated at PE2, and\n   transmitted\
    \ out of PE2.\n"
- title: 2.  Specification of Requirements
  contents:
  - "2.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  The Pseudowire Label
  contents:
  - "3.  The Pseudowire Label\n   Suppose that it is desired to transport Layer 2\
    \ PDUs from ingress LSR\n   PE1 to egress LSR PE2, across an intervening MPLS-enabled\
    \ network.\n   We assume that there is an MPLS tunnel from PE1 to PE2.  That is,\
    \ we\n   assume that PE1 can cause a packet to be delivered to PE2 by\n   encapsulating\
    \ the packet in an \"MPLS tunnel header\" and sending the\n   result to one of\
    \ its adjacencies.  The MPLS tunnel is an MPLS Label\n   Switched Path (LSP);\
    \ thus, putting on an MPLS tunnel encapsulation is\n   a matter of pushing on\
    \ an MPLS label.\n   We presuppose that a large number of pseudowires can be carried\n\
    \   through a single MPLS tunnel.  Thus, it is never necessary to\n   maintain\
    \ state in the network core for individual pseudowires.  We do\n   not presuppose\
    \ that the MPLS tunnels are point to point; although the\n   pseudowires are point\
    \ to point, the MPLS tunnels may be multipoint to\n   point.  We do not presuppose\
    \ that PE2 will even be able to determine\n   the MPLS tunnel through which a\
    \ received packet was transmitted.\n   (For example, if the MPLS tunnel is an\
    \ LSP and penultimate hop\n   popping is used, when the packet arrives at PE2,\
    \ it will contain no\n   information identifying the tunnel.)\n   When PE2 receives\
    \ a packet over a pseudowire, it must be able to\n   determine that the packet\
    \ was in fact received over a pseudowire, and\n   it must be able to associate\
    \ that packet with a particular\n   pseudowire.  PE2 is able to do this by examining\
    \ the MPLS label that\n   serves as the pseudowire demultiplexor field shown in\
    \ Figure 2.  Call\n   this label the \"PW label\".\n   When PE1 sends a Layer\
    \ 2 PDU to PE2, it creates an MPLS packet by\n   adding the PW label to the packet,\
    \ thus creating the first entry of\n   the label stack.  If the PSN tunnel is\
    \ an MPLS LSP, the PE1 pushes\n   another label (the tunnel label) onto the packet\
    \ as the second entry\n   of the label stack.  The PW label is not visible again\
    \ until the MPLS\n   packet reaches PE2.  PE2's disposition of the packet is based\
    \ on the\n   PW label.\n   If the payload of the MPLS packet is, for example,\
    \ an ATM AAL5 PDU,\n   the PW label will generally correspond to a particular\
    \ ATM VC at PE2.\n   That is, PE2 needs to be able to infer from the PW label\
    \ the outgoing\n   interface and the VPI/VCI value for the AAL5 PDU.  If the payload\
    \ is\n   a Frame Relay PDU, then PE2 needs to be able to infer from the PW\n \
    \  label the outgoing interface and the DLCI value.  If the payload is\n   an\
    \ Ethernet frame, then PE2 needs to be able to infer from the PW\n   label the\
    \ outgoing interface, and perhaps the VLAN identifier.  This\n   process is uni-directional\
    \ and will be repeated independently for\n   bi-directional operation.  It is\
    \ REQUIRED that the same PW ID and PW\n   type be assigned for a given circuit\
    \ in both directions.  The group\n   ID (see below) MUST NOT be required to match\
    \ in both directions.  The\n   transported frame MAY be modified when it reaches\
    \ the egress router.\n   If the header of the transported Layer 2 frame is modified,\
    \ this MUST\n   be done at the egress LSR only.  Note that the PW label must always\n\
    \   be at the bottom of the packet's label stack, and labels MUST be\n   allocated\
    \ from the per-platform label space.\n   This document does not specify a method\
    \ for distributing the MPLS\n   tunnel label or any other labels that may appear\
    \ above the PW label\n   on the stack.  Any acceptable method of MPLS label distribution\
    \ will\n   do.  This document specifies a protocol for assigning and\n   distributing\
    \ the PW label.  This protocol is LDP, extended as\n   specified in the remainder\
    \ of this document.  An LDP session must be\n   set up between the pseudowire\
    \ endpoints.  LDP MUST be used in its\n   \"downstream unsolicited\" mode.  LDP's\
    \ \"liberal label retention\" mode\n   SHOULD be used.\n   In addition to the\
    \ protocol specified herein, static assignment of PW\n   labels may be used, and\
    \ implementations of this protocol SHOULD\n   provide support for static assignment.\n\
    \   This document specifies all the procedures necessary to set up and\n   maintain\
    \ the pseudowires needed to support \"unswitched\" point-to-\n   point services,\
    \ where each endpoint of the pseudowire is provisioned\n   with the identify of\
    \ the other endpoint.  There are also protocol\n   mechanisms specified herein\
    \ that can be used to support switched\n   services and other provisioning models.\
    \  However, the use of the\n   protocol mechanisms to support those other models\
    \ and services is not\n   described in this document.\n"
- title: 4.  Details Specific to Particular Emulated Services
  contents:
  - '4.  Details Specific to Particular Emulated Services

    '
- title: 4.1.  IP Layer 2 Transport
  contents:
  - "4.1.  IP Layer 2 Transport\n   This mode carries IP packets over a pseudowire.\
    \  The encapsulation\n   used is according to [RFC3032].  The PW control word\
    \ MAY be inserted\n   between the MPLS label stack and the IP payload.  The encapsulation\n\
    \   of the IP packets for forwarding on the attachment circuit is\n   implementation\
    \ specific, is part of the native service processing\n   (NSP) function [RFC3985],\
    \ and is outside the scope of this document.\n"
- title: 5.  LDP
  contents:
  - "5.  LDP\n   The PW label bindings are distributed using the LDP downstream\n\
    \   unsolicited mode described in [RFC3036].  The PEs will establish an\n   LDP\
    \ session using the Extended Discovery mechanism described in [LDP,\n   sections\
    \ 2.4.2 and 2.5].\n   An LDP Label Mapping message contains an FEC TLV, a Label\
    \ TLV, and\n   zero or more optional parameter TLVs.\n   The FEC TLV is used to\
    \ indicate the meaning of the label.  In the\n   current context, the FEC TLV\
    \ would be used to identify the particular\n   pseudowire that a particular label\
    \ is bound to.  In this\n   specification, we define two new FEC TLVs to be used\
    \ for identifying\n   pseudowires.  When setting up a particular pseudowire, only\
    \ one of\n   these FEC TLVs is used.  The one to be used will depend on the\n\
    \   particular service being emulated and on the particular provisioning\n   model\
    \ being supported.\n   LDP allows each FEC TLV to consist of a set of FEC elements.\
    \  For\n   setting up and maintaining pseudowires, however, each FEC TLV MUST\n\
    \   contain exactly one FEC element.\n   The LDP base specification has several\
    \ kinds of label TLVs, including\n   the Generic Label TLV, as specified in [RFC3036],\
    \ section 3.4.2.1.\n   For setting up and maintaining pseudowires, the Generic\
    \ Label TLV\n   MUST be used.\n"
- title: 5.1.  LDP Extensions
  contents:
  - "5.1.  LDP Extensions\n   This document specifies no new LDP messages.\n   This\
    \ document specifies the following new TLVs to be used with LDP:\n   TLV     \
    \               Specified in Section     Defined for Message\n   ===================================================================\n\
    \   PW Status TLV                  5.4.2            Notification\n   PW Interface\
    \ Parameters TLV    5.3.2.1          FEC\n   PW Grouping  ID TLV            5.3.2.2\
    \          FEC\n   Additionally, the following new FEC element types are defined:\n\
    \   FEC Element Type        Specified in Section    Defined for Message\n   ===================================================================\n\
    \   0x80                            5.2             FEC\n   0x81             \
    \               5.3             FEC\n   The following new LDP error codes are\
    \ also defined:\n   Status Code                                     Specified\
    \ in Section\n   ====================================================================\n\
    \   \"Illegal C-Bit\"                                         6.1\n   \"Wrong\
    \ C-Bit\"                                           6.2\n   \"Incompatible bit-rate\"\
    \                                [CEP]\n   \"CEP/TDM mis-configuration\"     \
    \                       [CEP]\n   \"PW status\"                              \
    \              5.4.2\n   \"Unassigned/Unrecognized TAI\"                     \
    \     5.3.3\n   \"Generic Misconfiguration Error\"                      [SAToP]\n\
    \   \"Label Withdraw PW Status Method Not Supported\"        5.4.1\n"
- title: 5.2.  The PWid FEC Element
  contents:
  - "5.2.  The PWid FEC Element\n   The PWid FEC element may be used whenever both\
    \ pseudowire endpoints\n   have been provisioned with the same 32-bit identifier\
    \ for the\n   pseudowire.\n   For this purpose, a new type of FEC element is defined.\
    \  The FEC\n   element type is 0x80 and is defined as follows:\n    0        \
    \           1                   2                   3\n    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  PWid (0x80)  |C|         PW type             |PW info Length |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Group ID                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           PW ID                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                Interface Parameter  Sub-TLV                   |\n   |  \
    \                            \"                                |\n   |       \
    \                       \"                                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   -  PW type\n      A 15-bit quantity containing a value that represents the\
    \ type of\n      PW.  Assigned values are specified in \"IANA Allocations for\n\
    \      Pseudowire Edge to Edge Emulation (PWE3)\" [IANA].\n   -  Control word\
    \ bit (C)\n      The bit (C) is used to flag the presence of a control word as\n\
    \      follows:\n         C = 1  Control word present on this PW.\n         C\
    \ = 0  No control word present on this PW.\n      Please see the section \"C-Bit\
    \ Handling Procedures\" for further\n      explanation.\n   -  PW information\
    \ length\n      Length of the PW ID field and the interface parameters sub-TLV\
    \ in\n      octets.  If this value is 0, then it references all PWs using the\n\
    \      specified group ID, and there is no PW ID present; nor are there\n    \
    \  any interface parameter sub-TLVs.\n   -  Group ID\n      An arbitrary 32-bit\
    \ value that represents a group of PWs that is\n      used to create groups in\
    \ the PW space.  The group ID is intended\n      to be used as a port index, or\
    \ a virtual tunnel index.  To\n      simplify configuration, a particular PW ID\
    \ at ingress could be\n      part of the virtual tunnel for transport to the egress\
    \ router.\n      The Group ID is very useful for sending wild card label\n   \
    \   withdrawals, or PW wild card status notification messages to\n      remote\
    \ PEs upon physical port failure.\n   -  PW ID\n      A non-zero 32-bit connection\
    \ ID that, together with the PW type,\n      identifies a particular PW.  Note\
    \ that the PW ID and the PW type\n      MUST be the same at both endpoints.\n\
    \   -  Interface Parameter Sub-TLV\n      This variable-length TLV is used to\
    \ provide interface-specific\n      parameters, such as attachment circuit MTU.\n\
    \      Note that as the \"interface parameter sub-TLV\" is part of the FEC,\n\
    \      the rules of LDP make it impossible to change the interface\n      parameters\
    \ once the pseudowire has been set up.  Thus, the\n      interface parameters\
    \ field must not be used to pass information,\n      such as status information,\
    \ that may change during the life of the\n      pseudowire.  Optional parameter\
    \ TLVs should be used for that\n      purpose.\n   Using the PWid FEC, each of\
    \ the two pseudowire endpoints\n   independently initiates the setup of a unidirectional\
    \ LSP.  An\n   outgoing LSP and an incoming LSP are bound together into a single\n\
    \   pseudowire if they have the same PW ID and PW type.\n"
- title: 5.3.  The Generalized PWid FEC Element
  contents:
  - "5.3.  The Generalized PWid FEC Element\n   The PWid FEC element can be used if\
    \ a unique 32-bit value has been\n   assigned to the PW, and if each endpoint\
    \ has been provisioned with\n   that value.  The Generalized PWid FEC element\
    \ requires that the PW\n   endpoints be uniquely identified; the PW itself is\
    \ identified as a\n   pair of endpoints.  In addition, the endpoint identifiers\
    \ are\n   structured to support applications where the identity of the remote\n\
    \   endpoints needs to be auto-discovered rather than statically\n   configured.\n\
    \   The \"Generalized PWid FEC Element\" is FEC type 0x81.\n   The Generalized\
    \ PWid FEC Element does not contain anything\n   corresponding to the \"Group\
    \ ID\" of the PWid FEC element.  The\n   functionality of the \"Group ID\" is\
    \ provided by a separate optional\n   LDP TLV, the \"PW Grouping TLV\", described\
    \ below.  The Interface\n   Parameters field of the PWid FEC element is also absent;\
    \ its\n   functionality is replaced by the optional Interface Parameters TLV,\n\
    \   described below.\n"
- title: 5.3.1.  Attachment Identifiers
  contents:
  - "5.3.1.  Attachment Identifiers\n   As discussed in [RFC3985], a pseudowire can\
    \ be thought of as\n   connecting two \"forwarders\".  The protocol used to set\
    \ up a\n   pseudowire must allow the forwarder at one end of a pseudowire to\n\
    \   identify the forwarder at the other end.  We use the term \"attachment\n \
    \  identifier\", or \"AI\", to refer to the field that the protocol uses to\n\
    \   identify the forwarders.  In the PWid FEC, the PWid field serves as\n   the\
    \ AI.  In this section, we specify a more general form of AI that\n   is structured\
    \ and of variable length.\n   Every Forwarder in a PE must be associated with\
    \ an Attachment\n   Identifier (AI), either through configuration or through some\n\
    \   algorithm.  The Attachment Identifier must be unique in the context\n   of\
    \ the PE router in which the Forwarder resides.  The combination\n   <PE router\
    \ IP address, AI> must be globally unique.\n   It is frequently convenient to\
    \ regard a set of Forwarders as being\n   members of a particular \"group\", where\
    \ PWs may only be set up among\n   members of a group.  In such cases, it is convenient\
    \ to identify the\n   Forwarders relative to the group, so that an Attachment\
    \ Identifier\n   would consist of an Attachment Group Identifier (AGI) plus an\n\
    \   Attachment Individual Identifier (AII).\n   An Attachment Group Identifier\
    \ may be thought of as a VPN-id, or a\n   VLAN identifier, some attribute that\
    \ is shared by all the Attachment\n   PWs (or pools thereof) that are allowed\
    \ to be connected.\n   The details of how to construct the AGI and AII fields\
    \ identifying\n   the pseudowire endpoints are outside the scope of this specification.\n\
    \   Different pseudowire applications, and different provisioning models,\n  \
    \ will require different sorts of AGI and AII fields.  The\n   specification of\
    \ each such application and/or model must include the\n   rules for constructing\
    \ the AGI and AII fields.\n   As previously discussed, a (bidirectional) pseudowire\
    \ consists of a\n   pair of unidirectional LSPs, one in each direction.  If a\
    \ particular\n   pseudowire connects PE1 with PE2, the PW direction from PE1 to\
    \ PE2\n   can be identified as:\n      <PE1, <AGI, AII1>, PE2, <AGI, AII2>>,\n\
    \   The PW direction from PE2 to PE1 can be identified by:\n      <PE2, <AGI,\
    \ AII2>, PE1, <AGI, AII1>>.\n   Note that the AGI must be the same at both endpoints,\
    \ but the AII\n   will in general be different at each endpoint.  Thus, from the\n\
    \   perspective of a particular PE, each pseudowire has a local or\n   \"Source\
    \ AII\", and a remote or \"Target AII\".  The pseudowire setup\n   protocol can\
    \ carry all three of these quantities:\n      -  Attachment Group Identifier (AGI)\n\
    \      -  Source Attachment Individual Identifier (SAII)\n      -  Target Attachment\
    \ Individual Identifier (TAII)\n   If the AGI is non-null, then the Source AI\
    \ (SAI) consists of the AGI\n   together with the SAII, and the Target AI (TAI)\
    \ consists of the TAII\n   together with the AGI.  If the AGI is null, then the\
    \ SAII and TAII\n   are the SAI and TAI, respectively.\n   The interpretation\
    \ of the SAI and TAI is a local matter at the\n   respective endpoint.\n   The\
    \ association of two unidirectional LSPs into a single\n   bidirectional pseudowire\
    \ depends on the SAI and the TAI.  Each\n   application and/or provisioning model\
    \ that uses the Generalized ID\n   FEC element must specify the rules for performing\
    \ this association.\n"
- title: 5.3.2.  Encoding the Generalized ID FEC Element
  contents:
  - "5.3.2.  Encoding the Generalized ID FEC Element\n   FEC element type 0x81 is\
    \ used.  The FEC element is encoded as\n   follows:\n    0                   1\
    \                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Gen PWid (0x81)|C|         PW Type             |PW info Length |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   AGI Type    |    Length     |      Value                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                    AGI  Value (contd.)                        ~\n   |  \
    \                                                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   AII Type    |    Length     |      Value                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                   SAII  Value (contd.)                        ~\n   |  \
    \                                                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   AII Type    |    Length     |      Value                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                   TAII Value (contd.)                         ~\n   |  \
    \                                                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   This document does not specify the AII and AGI type field values;\n   specification\
    \ of the type field values to be used for a particular\n   application is part\
    \ of the specification of that application.  IANA\n   has assigned these values\
    \ using the method defined in the [IANA]\n   document.\n   The SAII, TAII, and\
    \ AGI are simply carried as octet strings.  The\n   length byte specifies the\
    \ size of the Value field.  The null string\n   can be sent by setting the length\
    \ byte to 0.  If a particular\n   application does not need all three of these\
    \ sub-elements, it MUST\n   send all the sub-elements but set the length to 0\
    \ for the unused\n   sub-elements.\n   The PW information length field contains\
    \ the length of the SAII,\n   TAII, and AGI, combined in octets.  If this value\
    \ is 0, then it\n   references all PWs using the specified grouping ID.  In this\
    \ case,\n   there are no other FEC element fields (AGI, SAII, etc.) present, nor\n\
    \   any interface parameters TLVs.\n   Note that the interpretation of a particular\
    \ field as AGI, SAII, or\n   TAII depends on the order of its occurrence.  The\
    \ type field\n   identifies the type of the AGI, SAII, or TAII.  When comparing\
    \ two\n   occurrences of an AGI (or SAII or TAII), the two occurrences are\n \
    \  considered identical if the type, length, and value fields of one are\n   identical,\
    \ respectively, to those of the other.\n"
- title: 5.3.2.1.  Interface Parameters TLV
  contents:
  - "5.3.2.1.  Interface Parameters TLV\n   This TLV MUST only be used when sending\
    \ the Generalized PW FEC.  It\n   specifies interface-specific parameters.  Specific\
    \ parameters, when\n   applicable, MUST be used to validate that the PEs and the\
    \ ingress and\n   egress ports at the edges of the circuit have the necessary\n\
    \   capabilities to interoperate with each other.\n    0                   1 \
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|  PW Intf P. TLV (0x096B)  |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Sub-TLV Type  |    Length     |    Variable Length Value      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Variable Length Value                 |\n   |  \
    \                           \"                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   A more detailed description of this field can be found in the section\n  \
    \ \"Interface Parameters Sub-TLV\", below.\n"
- title: 5.3.2.2.  PW Grouping TLV
  contents:
  - "5.3.2.2.  PW Grouping TLV\n    0                   1                   2    \
    \               3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|PW Grouping ID TLV (0x096C)|            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Value                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The PW Grouping ID is an arbitrary 32-bit value that represents an\n   arbitrary\
    \ group of PWs.  It is used to create group PWs; for example,\n   a PW Grouping\
    \ ID can be used as a port index and assigned to all PWs\n   that lead to that\
    \ port.  Use of the PW Grouping ID enables one to\n   send \"wild card\" label\
    \ withdrawals, or \"wild card\" status\n   notification messages, to remote PEs\
    \ upon physical port failure.\n   Note Well: The PW Grouping ID is different from,\
    \ and has no relation\n   to, the Attachment Group Identifier.\n   The PW Grouping\
    \ ID TLV is not part of the FEC and will not be\n   advertised except in the PW\
    \ FEC advertisement.  The advertising PE\n   MAY use the wild card withdraw semantics,\
    \ but the remote PEs MUST\n   implement support for wild card messages.  This\
    \ TLV MUST only be used\n   when sending the Generalized PW ID FEC.\n   To issue\
    \ a wildcard command (status or withdraw):\n   -  Set the PW Info Length to 0\
    \ in the Generalized ID FEC Element.\n   -  Send only the PW Grouping ID TLV with\
    \ the FEC (no AGI/SAII/TAII is\n      sent).\n"
- title: 5.3.3.  Signaling Procedures
  contents:
  - "5.3.3.  Signaling Procedures\n   In order for PE1 to begin signaling PE2, PE1\
    \ must know the address of\n   the remote PE2, and a TAI.  This information may\
    \ have been configured\n   at PE1, or it may have been learned dynamically via\
    \ some\n   autodiscovery procedure.\n   The egress PE (PE1), which has knowledge\
    \ of the ingress PE, initiates\n   the setup by sending a Label Mapping Message\
    \ to the ingress PE (PE2).\n   The Label Mapping message contains the FEC TLV,\
    \ carrying the\n   Generalized PWid FEC Element (type 0x81).  The Generalized\
    \ PWid FEC\n   element contains the AGI, SAII, and TAII information.\n   Next,\
    \ when PE2 receives such a Label Mapping message, PE2 interprets\n   the message\
    \ as a request to set up a PW whose endpoint (at PE2) is\n   the Forwarder identified\
    \ by the TAI.  From the perspective of the\n   signaling protocol, exactly how\
    \ PE2 maps AIs to Forwarders is a local\n   matter.  In some Virtual Private Wire\
    \ Services (VPWS) provisioning\n   models, the TAI might, for example, be a string\
    \ that identifies a\n   particular Attachment Circuit, such as \"ATM3VPI4VCI5\"\
    , or it might,\n   for example, be a string, such as \"Fred\", that is associated\
    \ by\n   configuration with a particular Attachment Circuit.  In VPLS, the AGI\n\
    \   could be a VPN-id, identifying a particular VPLS instance.\n   If PE2 cannot\
    \ map the TAI to one of its Forwarders, then PE2 sends a\n   Label Release message\
    \ to PE1, with a Status Code of\n   \"Unassigned/Unrecognized TAI\", and the processing\
    \ of the Label\n   Mapping message is complete.\n   The FEC TLV sent in a Label\
    \ Release message is the same as the FEC\n   TLV received in the Label Mapping\
    \ being released (but without the\n   interface parameter TLV).  More generally,\
    \ the FEC TLV is the same in\n   all LDP messages relating to the same PW.  In\
    \ a Label Release, this\n   means that the SAII is the remote peer's AII and the\
    \ TAII is the\n   sender's local AII.\n   If the Label Mapping Message has a valid\
    \ TAI, PE2 must decide whether\n   to accept it.  The procedures for so deciding\
    \ will depend on the\n   particular type of Forwarder identified by the TAI. \
    \ Of course, the\n   Label Mapping message may be rejected due to standard LDP\
    \ error\n   conditions as detailed in [RFC3036].\n   If PE2 decides to accept\
    \ the Label Mapping message, then it has to\n   make sure that a PW LSP is set\
    \ up in the opposite (PE1-->PE2)\n   direction.  If it has already signaled for\
    \ the corresponding PW LSP\n   in that direction, nothing more needs to be done.\
    \  Otherwise, it must\n   initiate such signaling by sending a Label Mapping message\
    \ to PE1.\n   This is very similar to the Label Mapping message PE2 received,\
    \ but\n   the SAI and TAI are reversed.\n   Thus, a bidirectional PW consists\
    \ of two LSPs, where the FEC of one\n   has the SAII and TAII reversed with respect\
    \ to the FEC of the other.\n"
- title: 5.4.  Signaling of Pseudowire Status
  contents:
  - '5.4.  Signaling of Pseudowire Status

    '
- title: 5.4.1.  Use of Label Mappings Messages
  contents:
  - "5.4.1.  Use of Label Mappings Messages\n   The PEs MUST send Label Mapping Messages\
    \ to their peers as soon as\n   the PW is configured and administratively enabled,\
    \ regardless of the\n   attachment circuit state.  The PW label should not be\
    \ withdrawn\n   unless the operator administratively configures the pseudowire\
    \ down\n   (or the PW configuration is deleted entirely).  Using the procedures\n\
    \   outlined in this section, a simple label withdraw method MAY also be\n   supported\
    \ as a legacy means of signaling PW status and AC status.  In\n   any case, if\
    \ the label-to-PW binding is not available, the PW MUST be\n   considered in the\
    \ down state.\n   Once the PW status negotiation procedures are completed, if\
    \ they\n   result in the use of the label withdraw method for PW status\n   communication,\
    \ and this method is not supported by one of the PEs,\n   then that PE must send\
    \ a Label Release Message to its peer with the\n   following error:\n   \"Label\
    \ Withdraw PW Status Method Not Supported\"\n   If the label withdraw method for\
    \ PW status communication is selected\n   for the PW, it will result in the Label\
    \ Mapping Message being\n   advertised only if the attachment circuit is active.\
    \  The PW status\n   signaling procedures described in this section MUST be fully\n\
    \   implemented.\n"
- title: 5.4.2.  Signaling PW Status
  contents:
  - "5.4.2.  Signaling PW Status\n   The PE devices use an LDP TLV to indicate status\
    \ to their remote\n   peers.  This PW Status TLV contains more information than\
    \ the\n   alternative simple Label Withdraw message.\n   The format of the PW\
    \ Status TLV is:\n    0                   1                   2              \
    \     3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |1|0|\
    \     PW Status (0x096A)    |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Status Code                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The status code is a 4-octet bit field as specified in the PW IANA\n   Allocations\
    \ document [IANA].  The length specifies the length of the\n   Status Code field\
    \ in octets (equal to 4).\n   Each bit in the status code field can be set individually\
    \ to indicate\n   more than a single failure at once.  Each fault can be cleared\
    \ by\n   sending an appropriate Notification message in which the respective\n\
    \   bit is cleared.  The presence of the lowest bit (PW Not Forwarding)\n   acts\
    \ only as a generic failure indication when there is a link-down\n   event for\
    \ which none of the other bits apply.\n   The Status TLV is transported to the\
    \ remote PW peer via the LDP\n   Notification message.  The general format of\
    \ the Notification Message\n   is:\n    0                   1                \
    \   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|   Notification (0x0001)     |      Message Length           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Message ID                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Status (TLV)                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      PW Status TLV                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           PWId FEC TLV or Generalized ID FEC TLV              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Status TLV status code is set to 0x00000028, \"PW status\", to\n   indicate\
    \ that PW status follows.  Since this notification does not\n   refer to any particular\
    \ message, the Message Id and Message Type\n   fields are set to 0.\n   The PW\
    \ FEC TLV SHOULD not include the interface parameter sub-TLVs,\n   as they are\
    \ ignored in the context of this message.  When a PE's\n   attachment circuit\
    \ encounters an error, use of the PW Notification\n   Message allows the PE to\
    \ send a single \"wild card\" status message,\n   using a PW FEC TLV with only\
    \ the group ID set, to denote this change\n   in status for all affected PW connections.\
    \  This status message\n   contains either the PW FEC TLV with only the group\
    \ ID set, or else it\n   contains the Generalized FEC TLV with only the PW Grouping\
    \ ID TLV.\n   As mentioned above, the Group ID field of the PWid FEC element,\
    \ or\n   the PW Grouping ID TLV used with the Generalized ID FEC element, can\n\
    \   be used to send a status notification for all arbitrary sets of PWs.\n   This\
    \ procedure is OPTIONAL, and if it is implemented, the LDP\n   Notification message\
    \ should be as follows: If the PWid FEC element is\n   used, the PW information\
    \ length field is set to 0, the PW ID field is\n   not present, and the interface\
    \ parameter sub-TLVs are not present.\n   If the Generalized FEC element is used,\
    \ the AGI, SAII, and TAII are\n   not present, the PW information length field\
    \ is set to 0, the PW\n   Grouping ID TLV is included, and the Interface Parameters\
    \ TLV is\n   omitted.  For the purpose of this document, this is called the \"\
    wild\n   card PW status notification procedure\", and all PEs implementing this\n\
    \   design are REQUIRED to accept such a notification message but are not\n  \
    \ required to send it.\n"
- title: 5.4.3.  Pseudowire Status Negotiation Procedures
  contents:
  - "5.4.3.  Pseudowire Status Negotiation Procedures\n   When a PW is first set up,\
    \ the PEs MUST attempt to negotiate the\n   usage of the PW status TLV.  This\
    \ is accomplished as follows: A PE\n   that supports the PW Status TLV MUST include\
    \ it in the initial Label\n   Mapping message following the PW FEC and the interface\
    \ parameter\n   sub-TLVs.  The PW Status TLV will then be used for the lifetime\
    \ of\n   the pseudowire.  This is shown in the following diagram:\n    0     \
    \              1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \               PWId FEC or Generalized ID FEC                +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Interface Parameters                    |\n   |  \
    \                            \"                                |\n   |       \
    \                       \"                                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0| Generic Label (0x0200)    |      Length                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Label                                                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1|0|     PW Status (0x096A)    |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Status Code                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   If a PW Status TLV is included in the initial Label Mapping message\n   for\
    \ a PW, then if the Label Mapping message from the remote PE for\n   that PW does\
    \ not include a PW status TLV, or if the remote PE does\n   not support the PW\
    \ Status TLV, the PW will revert to the label\n   withdraw method of signaling\
    \ PW status.  Note that if the PW Status\n   TLV is not supported by the remote\
    \ peer, the peer will automatically\n   ignore it, since the I (ignore) bit is\
    \ set in the TLV.  The PW Status\n   TLV, therefore, will not be present in the\
    \ corresponding FEC\n   advertisement from the remote LDP peer, which results\
    \ in exactly the\n   above behavior.\n   If the PW Status TLV is not present following\
    \ the FEC TLV in the\n   initial PW Label Mapping message received by a PE, then\
    \ the PW Status\n   TLV will not be used, and both PEs supporting the pseudowire\
    \ will\n   revert to the label withdraw procedure for signaling status changes.\n\
    \   If the negotiation process results in the usage of the PW status TLV,\n  \
    \ then the actual PW status is determined by the PW status TLV that was\n   sent\
    \ within the initial PW Label Mapping message.  Subsequent updates\n   of PW status\
    \ are conveyed through the notification message.\n"
- title: 5.5.  Interface Parameters Sub-TLV
  contents:
  - "5.5.  Interface Parameters Sub-TLV\n   This field specifies interface-specific\
    \ parameters.  When applicable,\n   it MUST be used to validate that the PEs and\
    \ the ingress and egress\n   ports at the edges of the circuit have the necessary\
    \ capabilities to\n   interoperate with each other.  The field structure is defined\
    \ as\n   follows:\n    0                   1                   2             \
    \      3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   | Sub-TLV\
    \ Type  |    Length     |    Variable Length Value      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Variable Length Value                 |\n   |  \
    \                           \"                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The interface parameter sub-TLV type values are specified in \"IANA\n   Allocations\
    \ for Pseudowire Edge to Edge Emulation (PWE3)\" [IANA].\n   The Length field\
    \ is defined as the length of the interface parameter\n   including the parameter\
    \ id and length field itself.  Processing of\n   the interface parameters should\
    \ continue when unknown interface\n   parameters are encountered, and they MUST\
    \ be silently ignored.\n   -  Interface MTU sub-TLV type\n      A 2-octet value\
    \ indicating the MTU in octets.  This is the Maximum\n      Transmission Unit,\
    \ excluding encapsulation overhead, of the egress\n      packet interface that\
    \ will be transmitting the decapsulated PDU\n      that is received from the MPLS-enabled\
    \ network.  This parameter is\n      applicable only to PWs transporting packets\
    \ and is REQUIRED for\n      these PW types.  If this parameter does not match\
    \ in both\n      directions of a specific PW, that PW MUST NOT be enabled.\n \
    \  -  Optional Interface Description string sub-TLV type\n      This arbitrary,\
    \ and OPTIONAL, interface description string is used\n      to send a human-readable\
    \ administrative string describing the\n      interface to the remote.  This parameter\
    \ is OPTIONAL and is\n      applicable to all PW types.  The interface description\
    \ parameter\n      string length is variable and can be from 0 to 80 octets. \
    \ Human-\n      readable text MUST be provided in the UTF-8 charset using the\n\
    \      Default Language [RFC2277].\n"
- title: 6.  Control Word
  contents:
  - '6.  Control Word

    '
- title: 6.1.  PW Types for Which the Control Word is REQUIRED
  contents:
  - "6.1.  PW Types for Which the Control Word is REQUIRED\n   The Label Mapping messages\
    \ that are sent in order to set up these PWs\n   MUST have c=1.  When a Label\
    \ Mapping message for a PW of one of these\n   types is received and c=0, a Label\
    \ Release message MUST be sent, with\n   an \"Illegal C-bit\" status code.  In\
    \ this case, the PW will not be\n   enabled.\n"
- title: 6.2.  PW Types for Which the Control Word is NOT Mandatory
  contents:
  - "6.2.  PW Types for Which the Control Word is NOT Mandatory\n   If a system is\
    \ capable of sending and receiving the control word on\n   PW types for which\
    \ the control word is not mandatory, then each such\n   PW endpoint MUST be configurable\
    \ with a parameter that specifies\n   whether the use of the control word is PREFERRED\
    \ or NOT PREFERRED.\n   For each PW, there MUST be a default value of this parameter.\
    \  This\n   specification does NOT state what the default value should be.\n \
    \  If a system is NOT capable of sending and receiving the control word\n   on\
    \ PW types for which the control word is not mandatory, then it\n   behaves exactly\
    \ as if it were configured for the use of the control\n   word to be NOT PREFERRED.\n\
    \   If a Label Mapping message for the PW has already been received but\n   no\
    \ Label Mapping message for the PW has yet been sent, then the\n   procedure is\
    \ as follows:\n        -i. If the received Label Mapping message has c=0, send\
    \ a Label\n            Mapping message with c=0; the control word is not used.\n\
    \       -ii. If the received Label Mapping message has c=1 and the PW is\n   \
    \         locally configured such that the use of the control word is\n      \
    \      preferred, then send a Label Mapping message with c=1; the\n          \
    \  control word is used.\n      -iii. If the received Label Mapping message has\
    \ c=1 and the PW is\n            locally configured such that the use of the control\
    \ word is\n            not preferred or the control word is not supported, then\
    \ act\n            as if no Label Mapping message for the PW had been received\n\
    \            (i.e., proceed to the next paragraph).\n   If a Label Mapping message\
    \ for the PW has not already been received\n   (or if the received Label Mapping\
    \ message had c=1 and either local\n   configuration says that the use of the\
    \ control word is not preferred\n   or the control word is not supported), then\
    \ send a Label Mapping\n   message in which the c bit is set to correspond to\
    \ the locally\n   configured preference for use of the control word.  (That is,\
    \ set c=1\n   if locally configured to prefer the control word, and set c=0 if\n\
    \   locally configured to prefer not to use the control word or if the\n   control\
    \ word is not supported).\n   The next action depends on what control message\
    \ is next received for\n   that PW.  The possibilities are as follows:\n     \
    \   -i. A Label Mapping message with the same c bit value as\n            specified\
    \ in the Label Mapping message that was sent.  PW\n            setup is now complete,\
    \ and the control word is used if c=1\n            but is not used if c=0.\n \
    \      -ii. A Label Mapping message with c=1, but the Label Mapping\n        \
    \    message that was sent has c=0.  In this case, ignore the\n            received\
    \ Label Mapping message and continue to wait for the\n            next control\
    \ message for the PW.\n      -iii. A Label Mapping message with c=0, but the Label\
    \ Mapping\n            message that was sent has c=1.  In this case, send a Label\n\
    \            Withdraw message with a \"Wrong C-bit\" status code, followed\n \
    \           by a Label Mapping message that has c=0.  PW setup is now\n      \
    \      complete, and the control word is not used.\n       -iv. A Label Withdraw\
    \ message with the \"Wrong c-bit\" status code.\n            Treat as a normal\
    \ Label Withdraw, but do not respond.\n            Continue to wait for the next\
    \ control message for the PW.\n   If at any time after a Label Mapping message\
    \ has been received a\n   corresponding Label Withdraw or Release is received,\
    \ the action taken\n   is the same as for any Label Withdraw or Release that might\
    \ be\n   received at any time.\n   If both endpoints prefer the use of the control\
    \ word, this procedure\n   will cause it to be used.  If either endpoint prefers\
    \ not to use the\n   control word or does not support the control word, this procedure\n\
    \   will cause it not to be used.  If one endpoint prefers to use the\n   control\
    \ word but the other does not, the one that prefers not to use\n   it is has no\
    \ extra protocol to execute; it just waits for a Label\n   Mapping message that\
    \ has c=0.\n   The diagram in Appendix A illustrates the above procedure.\n"
- title: 6.3.  LDP Label Withdrawal Procedures
  contents:
  - "6.3.  LDP Label Withdrawal Procedures\n   As mentioned above, the Group ID field\
    \ of the PWid FEC element, or\n   the PW Grouping ID TLV used with the Generalized\
    \ ID FEC element, can\n   be used to withdraw all PW labels associated with a\
    \ particular PW\n   group.  This procedure is OPTIONAL, and if it is implemented,\
    \ the LDP\n   Label Withdraw message should be as follows: If the PWid FEC element\n\
    \   is used, the PW information length field is set to 0, the PW ID field\n  \
    \ is not present, the interface parameter sub-TLVs are not present, and\n   the\
    \ Label TLV is not present.\n   If the Generalized FEC element is used, the AGI,\
    \ SAII, and TAII are\n   not present, the PW information length field is set to\
    \ 0, the PW\n   Grouping ID TLV is included, the Interface Parameters TLV is not\n\
    \   present, and the Label TLV is not present.  For the purpose of this\n   document,\
    \ this is called the \"wild card withdraw procedure\", and all\n   PEs implementing\
    \ this design are REQUIRED to accept such withdrawn\n   message but are not required\
    \ to send it.  Note that the PW Grouping\n   ID TLV only applies to PWs using\
    \ the Generalized ID FEC element,\n   while the Group ID only applies to PWid\
    \ FEC element.\n   The interface parameter sub-TLVs, or TLV, MUST NOT be present\
    \ in any\n   LDP PW Label Withdraw or Label Release message.  A wild card Label\n\
    \   Release message MUST include only the group ID, or Grouping ID TLV.\n   A\
    \ Label Release message initiated by a PE router must always include\n   the PW\
    \ ID.\n"
- title: 6.4.  Sequencing Considerations
  contents:
  - "6.4.  Sequencing Considerations\n   In the case where the router considers the\
    \ sequence number field in\n   the control word, it is important to note the following\
    \ details when\n   advertising labels.\n"
- title: 6.4.1.  Label Advertisements
  contents:
  - "6.4.1.  Label Advertisements\n   After a label has been withdrawn by the output\
    \ router and/or released\n   by the input router, care must be taken not to advertise\
    \ (re-use) the\n   same released label until the output router can be reasonably\
    \ certain\n   that old packets containing the released label no longer persist\
    \ in\n   the MPLS-enabled network.\n   This precaution is required to prevent\
    \ the imposition router from\n   restarting packet forwarding with a sequence\
    \ number of 1 when it\n   receives a Label Mapping message that binds the same\
    \ FEC to the same\n   label if there are still older packets in the network with\
    \ a sequence\n   number between 1 and 32768.  For example, if there is a packet\
    \ with\n   sequence number=n, where n is in the interval [1,32768] traveling\n\
    \   through the network, it would be possible for the disposition router\n   to\
    \ receive that packet after it re-advertises the label.  Since the\n   label has\
    \ been released by the imposition router, the disposition\n   router SHOULD be\
    \ expecting the next packet to arrive with a sequence\n   number of 1.  Receipt\
    \ of a packet with a sequence number equal to n\n   will result in n packets potentially\
    \ being rejected by the\n   disposition router until the imposition router imposes\
    \ a sequence\n   number of n+1 into a packet.  Possible methods to avoid this\
    \ are for\n   the disposition router always to advertise a different PW label,\
    \ or\n   for the disposition router to wait for a sufficient time before\n   attempting\
    \ to re-advertise a recently released label.  This is only\n   an issue when sequence\
    \ number processing is enabled at the\n   disposition router.\n"
- title: 6.4.2.  Label Release
  contents:
  - "6.4.2.  Label Release\n   In situations where the imposition router wants to\
    \ restart forwarding\n   of packets with sequence number 1, the router shall 1)\
    \ send to the\n   disposition router a Label Release Message, and 2) send to the\n\
    \   disposition router a Label Request message.  When sequencing is\n   supported,\
    \ advertisement of a PW label in response to a Label Request\n   message MUST\
    \ also consider the issues discussed in the section on\n   Label Advertisements.\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  LDP TLV TYPE
  contents:
  - "7.1.  LDP TLV TYPE\n   This document uses several new LDP TLV types; IANA already\
    \ maintains\n   a registry of name \"TLV TYPE NAME SPACE\" defined by RFC 3036.\
    \  The\n   following values are suggested for assignment:\n      TLV type  Description\n\
    \      =====================================\n       0x096A   PW Status TLV\n\
    \       0x096B   PW Interface Parameters TLV\n       0x096C   Group ID TLV\n"
- title: 7.2.  LDP Status Codes
  contents:
  - "7.2.  LDP Status Codes\n   This document uses several new LDP status codes; IANA\
    \ already\n   maintains a registry of name \"STATUS CODE NAME SPACE\" defined\
    \ by RFC\n   3036.  The following values are suggested for assignment:\n   Range/Value\
    \     E     Description                       Reference\n   ------------- -----\
    \   ----------------------            ---------\n   0x00000024      0     Illegal\
    \ C-Bit                     [RFC4447]\n   0x00000025      0     Wrong C-Bit  \
    \                     [RFC4447]\n   0x00000026      0     Incompatible bit-rate\
    \             [RFC4447]\n   0x00000027      0     CEP-TDM mis-configuration  \
    \       [RFC4447]\n   0x00000028      0     PW Status                        \
    \ [RFC4447]\n   0x00000029      0     Unassigned/Unrecognized TAI       [RFC4447]\n\
    \   0x0000002A      0     Generic Misconfiguration Error    [RFC4447]\n   0x0000002B\
    \      0     Label Withdraw PW Status Method   [RFC4447]\n"
- title: 7.3.  FEC Type Name Space
  contents:
  - "7.3.  FEC Type Name Space\n   This document uses two new FEC element types, 0x80\
    \ and 0x81, from the\n   registry \"FEC Type Name Space\" for the Label Distribution\
    \ Protocol\n   (LDP RFC 3036).\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document specifies the LDP extensions that\
    \ are needed for\n   setting up and maintaining pseudowires.  The purpose of setting\
    \ up\n   pseudowires is to enable Layer 2 frames to be encapsulated in MPLS\n\
    \   and transmitted from one end of a pseudowire to the other.\n   Therefore,\
    \ we treat the security considerations for both the data\n   plane and the control\
    \ plane.\n"
- title: 8.1.  Data-Plane Security
  contents:
  - "8.1.  Data-Plane Security\n   With regard to the security of the data plane,\
    \ the following areas\n   must be considered:\n      -  MPLS PDU inspection\n\
    \      -  MPLS PDU spoofing\n      -  MPLS PDU alteration\n      -  MPLS PSN protocol\
    \ security\n      -  Access Circuit security\n      -  Denial-of-service prevention\
    \ on the PE routers\n   When an MPLS PSN is used to provide pseudowire service,\
    \ there is a\n   perception that security MUST be at least equal to the currently\n\
    \   deployed Layer 2 native protocol networks that the MPLS/PW network\n   combination\
    \ is emulating.  This means that the MPLS-enabled network\n   SHOULD be isolated\
    \ from outside packet insertion in such a way that\n   it SHOULD not be possible\
    \ to insert an MPLS packet into the network\n   directly.  To prevent unwanted\
    \ packet insertion, it is also important\n   to prevent unauthorized physical\
    \ access to the PSN, as well as\n   unauthorized administrative access to individual\
    \ network elements.\n   As mentioned above, as MPLS enabled network should not\
    \ accept MPLS\n   packets from its external interfaces (i.e., interfaces to CE\
    \ devices\n   or to other providers' networks) unless the top label of the packet\n\
    \   was legitimately distributed to the system from which the packet is\n   being\
    \ received.  If the packet's incoming interface leads to a\n   different SP (rather\
    \ than to a customer), an appropriate trust\n   relationship must also be present,\
    \ including the trust that the other\n   SP also provides appropriate security\
    \ measures.\n   The three main security problems faced when using an MPLS-enabled\n\
    \   network to transport PWs are spoofing, alteration, and inspection.\n   First,\
    \ there is a possibility that the PE receiving PW PDUs will get\n   a PDU that\
    \ appears to be from the PE transmitting the PW into the\n   PSN, but that was\
    \ not actually transmitted by the PE originating the\n   PW.  (That is, the specified\
    \ encapsulations do not by themselves\n   enable the decapsulator to authenticate\
    \ the encapsulator.)  A second\n   problem is the possibility that the PW PDU\
    \ will be altered between\n   the time it enters the PSN and the time it leaves\
    \ the PSN (i.e., the\n   specified encapsulations do not by themselves assure\
    \ the decapsulator\n   of the packet's integrity.)  A third problem is the possibility\
    \ that\n   the PDU's contents will be seen while the PDU is in transit through\n\
    \   the PSN (i.e., the specification encapsulations do not ensure\n   privacy.)\
    \  How significant these issues are in practice depends on\n   the security requirements\
    \ of the applications whose traffic is being\n   sent through the tunnel, and\
    \ how secure the PSN itself is.\n"
- title: 8.2.  Control-Plane Security
  contents:
  - "8.2.  Control-Plane Security\n   General security considerations with regard\
    \ to the use of LDP are\n   specified in section 5 of RFC 3036.  Those considerations\
    \ also apply\n   to the case where LDP is used to set up pseudowires.\n   A pseudowire\
    \ connects two attachment circuits.  It is important to\n   make sure that LDP\
    \ connections are not arbitrarily accepted from\n   anywhere, or else a local\
    \ attachment circuit might get connected to\n   an arbitrary remote attachment\
    \ circuit.  Therefore, an incoming LDP\n   session request MUST NOT be accepted\
    \ unless its IP source address is\n   known to be the source of an \"eligible\"\
    \ LDP peer.  The set of\n   eligible peers could be pre-configured (either as\
    \ a list of IP\n   addresses, or as a list of address/mask combinations), or it\
    \ could be\n   discovered dynamically via an auto-discovery protocol that is itself\n\
    \   trusted.  (Obviously, if the auto-discovery protocol were not\n   trusted,\
    \ the set of \"eligible peers\" it produces could not be\n   trusted.)\n   Even\
    \ if an LDP connection request appears to come from an eligible\n   peer, its\
    \ source address may have been spoofed.  Therefore, some\n   means of preventing\
    \ source address spoofing must be in place.  For\n   example, if all the eligible\
    \ peers are in the same network, source\n   address filtering at the border routers\
    \ of that network could\n   eliminate the possibility of source address spoofing.\n\
    \   The LDP MD5 authentication key option, as described in section 2.9 of\n  \
    \ RFC 3036, MUST be implemented, and for a greater degree of security,\n   it\
    \ must be used.  This provides integrity and authentication for the\n   LDP messages\
    \ and eliminates the possibility of source address\n   spoofing.  Use of the MD5\
    \ option does not provide privacy, but\n   privacy of the LDP control messages\
    \ is not usually considered\n   important.  As the MD5 option relies on the configuration\
    \ of pre-\n   shared keys, it does not provide much protection against replay\n\
    \   attacks.  In addition, its reliance on pre-shared keys may make it\n   very\
    \ difficult to deploy when the set of eligible neighbors is\n   determined by\
    \ an auto-configuration protocol.\n   When the Generalized ID FEC Element is used,\
    \ it is possible that a\n   particular LDP peer may be one of the eligible LDP\
    \ peers but may not\n   be the right one to connect to the particular attachment\
    \ circuit\n   identified by the particular instance of the Generalized ID FEC\n\
    \   element.  However, given that the peer is known to be one of the\n   eligible\
    \ peers (as discussed above), this would be the result of a\n   configuration\
    \ error, rather than a security problem.  Nevertheless,\n   it may be advisable\
    \ for a PE to associate each of its local\n   attachment circuits with a set of\
    \ eligible peers rather than have\n   just a single set of eligible peers associated\
    \ with the PE as a\n   whole.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors wish to acknowledge the contributions of\
    \ Vach Kompella,\n   Vanson Lim, Wei Luo, Himanshu Shah, and Nick Weeds.\n"
- title: 10.  Normative References
  contents:
  - "10.  Normative References\n   [RFC2119] Bradner S., \"Key words for use in RFCs\
    \ to Indicate\n             Requirement Levels\", RFC 2119, March 1997\n   [RFC3036]\
    \ Andersson, L., Doolan, P., Feldman, N., Fredette, A., and\n             B. Thomas,\
    \ \"LDP Specification\", RFC 3036, January 2001.\n   [RFC3032] Rosen, E., Tappan,\
    \ D., Fedorkow, G., Rekhter, Y.,\n             Farinacci, D., Li, T., and A. Conta,\
    \ \"MPLS Label Stack\n             Encoding\", RFC 3032, January 2001.\n   [IANA]\
    \    Martini, L., \"IANA Allocations for Pseudowire Edge to Edge\n           \
    \  Emulation (PWE3)\", BCP 116, RFC 4446, April 2006.\n"
- title: 11.  Informative References
  contents:
  - "11.  Informative References\n   [CEP]     Malis, A., Pate, P., Cohen, R., Ed.,\
    \ and D. Zelig,\n             \"SONET/SDH Circuit Emulation Service Over Packet\
    \ (CEP)\",\n             Work in Progress.\n   [SAToP]   Vainshtein, A., Ed. and\
    \ Y. Stein, Ed., \"Structure-Agnostic\n             TDM over Packet (SAToP)\"\
    , Work in Progress.\n   [FRAME]   Martini, L., Ed. and C. Kawa, Ed., \"Encapsulation\
    \ Methods\n             for Transport of Frame Relay Over MPLS Networks\", Work\
    \ in\n             Progress.\n   [ATM]     Martini, L., Ed., El-Aawar, N., and\
    \ M. Bocci, Ed.,\n             \"Encapsulation Methods for Transport of ATM Over\
    \ MPLS\n             Networks\", Work in Progress.\n   [PPPHDLC] Martini, L.,\
    \ Rosen, E., Heron, G., and A. Malis,\n             \"Encapsulation Methods for\
    \ Transport of PPP/HDLC Frames\n             Over IP and MPLS Networks\", Work\
    \ in Progress.\n   [ETH]     Martini, L., Rosen, E., El-Aawar, N., and G. Heron,\n\
    \             \"Encapsulation Methods for Transport of Ethernet Over MPLS\n  \
    \           Networks\", RFC 4448, April 2006.\n   [SDH]     American National\
    \ Standards Institute, \"Synchronous Optical\n             Network Formats,\"\
    \ ANSI T1.105-1995.\n   [ITUG]    ITU Recommendation G.707, \"Network Node Interface\
    \ For The\n             Synchronous Digital Hierarchy\", 1996.\n   [RFC3985] Bryant,\
    \ S. and P. Pate, \"Pseudo Wire Emulation Edge-to-Edge\n             (PWE3) Architecture\"\
    , RFC 3985, March 2005.\n   [RFC2277] Alvestrand, H., \"IETF Policy on Character\
    \ Sets and\n             Languages\", BCP 18, RFC 2277, January 1998.\n"
- title: 12.  Additional Contributing Authors
  contents:
  - "12.  Additional Contributing Authors\n   Dimitri Stratton Vlachos\n   Mazu Networks,\
    \ Inc.\n   125 Cambridgepark Drive\n   Cambridge, MA 02140\n   EMail: d@mazunetworks.com\n\
    \   Jayakumar Jayakumar,\n   Cisco Systems Inc.\n   225, E.Tasman, MS-SJ3/3,\n\
    \   San Jose, CA, 95134\n   EMail: jjayakum@cisco.com\n   Alex Hamilton,\n   Cisco\
    \ Systems Inc.\n   285 W. Tasman, MS-SJCI/3/4,\n   San Jose, CA, 95134\n   EMail:\
    \ tahamilt@cisco.com\n   Steve Vogelsang\n   ECI Telecom\n   Omega Corporate Center\n\
    \   1300 Omega Drive\n   Pittsburgh, PA 15205\n   EMail: stephen.vogelsang@ecitele.com\n\
    \   John Shirron\n   ECI Telecom\n   Omega Corporate Center\n   1300 Omega Drive\n\
    \   Pittsburgh, PA 15205\n   EMail: john.shirron@ecitele.com\n   Andrew G. Malis\n\
    \   Tellabs\n   90 Rio Robles Dr.\n   San Jose, CA 95134\n   EMail: Andy.Malis@tellabs.com\n\
    \   Vinai Sirkay\n   Redback Networks\n   300 Holger Way\n   San Jose, CA 95134\n\
    \   EMail: vsirkay@redback.com\n   Vasile Radoaca\n   Nortel Networks\n   600\
    \  Technology Park\n   Billerica MA 01821\n   EMail: vasile@nortelnetworks.com\n\
    \   Chris Liljenstolpe\n   Alcatel\n   11600 Sallie Mae Dr.\n   9th Floor\n  \
    \ Reston, VA 20193\n   EMail: chris.liljenstolpe@alcatel.com\n   Dave Cooper\n\
    \   Global Crossing\n   960 Hamlin Court\n   Sunnyvale, CA 94089\n   EMail: dcooper@gblx.net\n\
    \   Kireeti Kompella\n   Juniper Networks\n   1194 N. Mathilda Ave\n   Sunnyvale,\
    \ CA 94089\n   EMail: kireeti@juniper.net\n   Dan Tappan\n   Cisco Systems, Inc.\n\
    \   1414 Massachusetts Avenue\n   Boxborough, MA 01719\n   EMail: tappan@cisco.com\n"
- title: Appendix A.  C-bit Handling Procedures Diagram
  contents:
  - "Appendix A.  C-bit Handling Procedures Diagram\n                   ------------------\n\
    \               Y   | Received Label |       N\n            -------|  Mapping\
    \ Msg?  |--------------\n            |      ------------------             |\n\
    \        --------------                            |\n        |            | \
    \                           |\n     -------      -------                     \
    \    |\n     | C=0 |      | C=1 |                         |\n     -------    \
    \  -------                         |\n        |            |                 \
    \           |\n        |    ----------------                     |\n        |\
    \    | Control Word |     N               |\n        |    |    Capable?  |-----------\
    \          |\n        |    ----------------          |          |\n        | \
    \         Y |                 |          |\n        |            |           \
    \      |          |\n        |   ----------------           |          |\n   \
    \     |   | Control Word |  N        |          |\n        |   |  Preferred? \
    \ |----       |          |\n        |   ----------------   |       |         \
    \ |\n        |          Y |         |       |          |\n        |          \
    \  |         |       |   ----------------\n        |            |         |  \
    \     |   | Control Word |\n        |            |         |       |   |  Preferred?\
    \  |\n        |            |         |       |   ----------------\n        | \
    \           |         |       |     N |     Y |\n        |            |      \
    \   |       |       |       |\n      Send         Send      Send    Send    Send\
    \    Send\n       C=0          C=1       C=0     C=0     C=0     C=1\n       \
    \                        |       |       |       |\n                         \
    \   ----------------------------------\n                            | If receive\
    \ the same as sent,   |\n                            | PW setup is complete. If\
    \ not:  |\n                            ----------------------------------\n  \
    \                             |       |       |       |\n                    \
    \          ------------------- -----------\n                              |  \
    \   Receive     | | Receive |\n                              |       C=1     \
    \  | |   C=0   |\n                              ------------------- -----------\n\
    \                                       |               |\n                  \
    \               Wait for the        Send\n                                 next\
    \ message     Wrong C-Bit\n                                                  \
    \     |\n                                                  Send Label\n      \
    \                                         Mapping Message\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Luca Martini\n   Cisco Systems, Inc.\n   9155 East Nichols\
    \ Avenue, Suite 400\n   Englewood, CO, 80112\n   EMail: lmartini@cisco.com\n \
    \  Nasser El-Aawar\n   Level 3 Communications, LLC.\n   1025 Eldorado Blvd.\n\
    \   Broomfield, CO, 80021\n   EMail: nna@level3.net\n   Giles Heron\n   Tellabs\n\
    \   Abbey Place\n   24-28 Easton Street\n   High Wycombe\n   Bucks\n   HP11 1NT\n\
    \   UK\n   EMail: giles.heron@tellabs.com\n   Eric C. Rosen\n   Cisco Systems,\
    \ Inc.\n   1414 Massachusetts Avenue\n   Boxborough, MA 01719\n   EMail: erosen@cisco.com\n\
    \   Toby Smith\n   Network Appliance, Inc.\n   800 Cranberry Woods Drive\n   Suite\
    \ 300\n   Cranberry Township, PA 16066\n   EMail: tob@netapp.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
