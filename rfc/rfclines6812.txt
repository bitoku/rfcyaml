The protocol is used to measure service level parameters such as network latency, delay variation, and packet/frame loss.
This document describes the Cisco SLA Protocol Measurement Type UDP Measurement, to enable vendor interoperability.
Introduction Active network performance measurements are becoming critical data points for administrators monitoring the health of the network.
As service providers look to differentiate their offerings, performance measurement is increasingly becoming an important tool to monitor service level guarantees and, in general, to monitor the health of a network.
Performance metrics, both one way and two way, can be used for pre  deployment validation as well as for measuring in band live network  performance characteristics.
It can be used to measure service levels in L2 and L3 networks as well as for applications running on top of L3.
Active performance measurements are gathered by analyzing synthetically generated request and response packets or frames.
This is in contrast to passive measurements that analyze live traffic flowing through a particular network element.
There is a growing body of work on Performance Measurement standards that enable interoperability between different vendors' network elements by describing common measurement protocols as well as metrics.
The IETF has actively developed Standards Track documents on the subject, such as "A One way Active Measurement Protocol (OWAMP)"
[RFC4656] and "Two Way Active Measurement Protocol (TWAMP)" [RFC5357].
Cisco's SLA Protocol is another example of a Performance Measurement protocol that offers a rich set of measurement message types.
The measurement types can be classified as those that test connectivity (ping like) by providing round trip or one way latency measures, and those that provide a richer set of statistics including network jitter and packet or frame loss.
Each type of active measurement exchange mimics an actual protocol exchange.
Cisco's SLA Protocol UDP Measurement message exchanges, as covered in this document to enable interoperability, simulate a UDP application and can be used to simulate either Voice or Video traffic that is encoded in RTP frames within UDP envelopes.
The Measurement Type UDP Measurement message exchanges carry information that provide the ability to derive a robust set of statistics.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
The Cisco SLA Protocol consists of two distinct phases: the Control Phase and the Measurement Phase.
Each phase is comprised of information exchanged between a network element acting as the Sender and an element designated as the Responder.
The Control Phase is the first phase of message exchanges and forms the base protocol.
This phase establishes the identity of the Sender and provides information for the Measurement Phase.
A single message pair of Control Request and Control Response marks this phase.
The Sender initiates a Control Request message that is acknowledged by the Responder with a Control Response message.
The Control Request may be sent multiple times if a Control Response has not been received; the number of times the message is retried is configurable on the Sender element.
The Measurement Phase forms the second phase and is comprised of a sequence of Measurement Request and Measurement Response messages.
These messages may be exchanged as often as required.
Each Measurement Request message is acknowledged by the Responder with a Measurement Response message.
The number and frequency with which messages are sent SHOULD be controlled by configuration on the Sender element, along with the waiting time for a Control Response.
The following sequence diagram depicts the message exchanges:
The Control Phase begins with the Sender sending a Control Request message to the Responder.
The Control Request message is sent to UDP port 1167 on the Responder requesting that a Measurement Phase UDP port be opened and, in addition, indicates the duration for which the port needs to remain open.
The Responder replies by sending a Control Response with an appropriate Status indicating Success when the Sender identity is verified and the requested UDP port was successfully opened.
In all other cases, a non zero Status is returned in the Command Header Status field.
The Control Request message consists of a Command Header followed by one or more Command, Status, Length and Data sections (henceforth known as CSLD).
At a minimum, there SHOULD be two CSLD sections, one of which is the authentication CSLD section and the other carries information for the Measurement Phase simulation type. 0
The format is as given in RFC 5905.
The Sequence Number field MUST include a new number for each new request and is monotonically increasing.
When the Control Request is to be retried, the sequence number MUST remain unchanged.
The ordered list of the two CSLDs to be included along with the Command Header are:  The Authentication CSLD  A Measurement Type CSLD
In this revision of the protocol, only a single Measurement Type CSLD has been defined, the UDP Measurement CSLD.
For future extensions, it is possible to add more Measurement Type CSLDs.
For more details, see Section 5 on extensions.
The Authentication CSLD provides message authentication and verifies that the requester knows the shared secret.
The following is the format for the Authentication CSLD:
The UDP Measurement CSLD indicates the Measurement Type to be used during the Measurement Phase and specifies the addresses and UDP port to be opened as well as the duration that the port has to be kept open for the Measurement Phase.
The format of the CSLD is as follows:
Duration is specified in milliseconds.
2 IPv4 addresses, 3 IPv6 addresses.
The source addresses are only indicative of identity of the originator and cannot be used as a destination address for responses in a NAT environment.
In response to the Control Request message, the network element designated the Responder sends back a Control Response message that reflects the Command Header with an updated Status field and includes the two CSLD sections that also carry updated Status fields.
Hence, the format is identical to the Control Request message as described above.
The Status field values are applicable to both Command Header and CSLD sections.
In a Command Header, the Status field indicates Success only if all the CSLD sections have their Status set to Success.
The Command Header Status field is set to non zero otherwise.
The Status field in a Command Header SHOULD only make use of status values 0 through 3, whereas CSLDs can also make use of other status values as applicable.
Future extensions MAY extend these values as appropriate.
The Control Response message, aside from updating the Status fields, SHOULD also update the Sent Timestamp (if used) in the Command Header and the Message Authentication Digest in the Authentication CSLD.
The Message Authentication Digest is computed in the same way as the Control Request message.
The Random Number field MUST be reflected without modification.
The Session Identifier MAY be updated to reflect a locally significant unique value; it MUST be 0 if not specified.
Measurement Phase Upon receiving the Control Response message with the Status set to Success, the second phase of the protocol, the Measurement Phase, is initiated.
In all other cases when the Status is not set to Success, no measurement traffic is initiated.
In the Measurement Phase, the Sender sends a stream of measurement messages.
The measurement message stream consists of packets or frames that are spaced a configured number of milliseconds apart.
The format of the measurement messages as defined by this document for UDP Measurements is as shown below and is the same for the exchange in both directions.
That is, the format is the same when sent from the Sender to the Responder and when sent back from the Responder to the Sender with the only difference being the update of those fields that are designated with the Responder prefix; all other fields MUST remain unchanged.
All timestamps have the default format as described in RFC 5905
[RFC5905] and is as follows: the first 32 bits represent the unsigned integer number of seconds elapsed since 0 h on 1 January 1900; the next 32 bits represent the fractional part of a second thereof.
The timestamp definition is also similar to that described in RFC 4656 [RFC4656].
In addition, the timestamp format used can be as described for the low order 64 bits of the IEEE 1588 2008
(1588v2) Precision Time Protocol timestamp format [IEEE1588].
This truncated format consists of a 32 bit seconds field followed by a 32 bit nanoseconds field, and is the same as the IEEE 1588v1 timestamp format.
This timestamp definition is similar to the default timestamp specified in RFC 6374
Implementations MUST use only one of the two formats.
The chosen format is negotiated out of band between the endpoints or defaults to the format as defined in RFC 5905.
Implementation Notes Responder implementations SHOULD support simultaneous measurements destined to a single port either from the same or a different Sender.
For different measurement instances that originate from the same Sender, there MUST be a clear method for the Responder to distinguish the traffic, for example, per a unique 5 tuple of protocol, source address, source port, destination address, and destination port.
A Control Request that is received for the same Measurement Type request as identified by the 5 tuples, for instance, SHOULD result in the resetting of the duration timer as well as the Responder sequence number.
A Control Phase followed by the Measurement Phase can be repeated in order to have a continuous measurement over the entire lifetime of a device.
The Authentication CSLD MUST always be included.
The Random Number field is used to prevent dictionary attacks and is to be set to a random value in environments where security is a concern.
An implementation MUST include the Random Number and Message Authentication fields when the mode is non zero.
The fields MAY be included when the mode is set to 'No Authentication'; when present, they MUST be set to 0.
For the SHA256 authenticator mode, the shared secret is prepended to the Control message and the authentication algorithm is then run over the complete data including the shared secret.
The SHA256 mode is included for ease of implementation, and use of the HMAC variant is strongly recommended for stronger security.
If the UDP port indicated in the UDP Measurement CSLD is busy, the Responder MAY suggest an alternative port, in which case the Status of the UDP Measurement CSLD MUST be set to Success.
The Sender MAY set a value of 0 in the field, in which case the Responder MAY choose to open a port and send that back along with the Status set to Success.
It should be noted that this behavior has security ramifications and the port needs to be chosen very carefully by the Responder.
The measurement stream typically consists of packets or frames with a periodic inter packet distribution.
The Sender need not wait for a Measurement Response packet to arrive before sending another Measurement Request packet; in many cases, it will not be possible to wait in order to maintain the desired inter packet distribution.
The default format for all timestamps is as specified in RFC 5905
All messages and fields within a message are assumed to be in network order.
In addition, all data fields are unsigned unless mentioned otherwise.
This section describes how the protocol can be extended to allow for additional functionality, such as new types of measurements.
In order to allow for new types of measurements, additional Measurement Type CSLDs can be defined to be carried within the Control Request and Control Response messages in place of the UDP  Measurement CSLD defined in this document.
The meaning and precise format of such a CSLD needs to be defined in a separate specification.
Such a specification will also need to describe the appropriate formats for the messages in the Measurement Phase.
In addition, the protocol can be extended by adding support for new values to registries defined in this document.
The registries defined below are needed for the extensibility of the protocol.
In the registries, the terms 'Private Use' and 'Experimental Use' have the same meaning as described in RFC 5226 [RFC5226].
Furthermore, for the following registries, the ranges designated "Unassigned" are governed by the policy 'RFC Required' as described in RFC 5226 [RFC5226].
The version number should be changed only when the structure of the Command messages is different from the basic Command Header and CSLD structure described in this document.
Cisco SLA Protocol CSLD Command Registry
It is envisioned that future documents will provide their own Measurement Type number and format of the Data portion.
Cisco SLA Protocol Authenticator Modes Registry
The following registry is also needed for the extensibility of the protocol.
However, the range designated "Unassigned" is governed by the policy 'First Come
First Served' as described in RFC 5226 [RFC5226].
Finally, the following registry is also needed for the extensibility of the protocol.
However, the range designated "Unassigned" is governed by the policy 'Specification Required' as described in RFC 5226 [RFC5226].
Cisco SLA Protocol Address Family Registry
When the mode for the Authentication CSLD is set to 1, the Message Authentication Digest is generated using the SHA256 algorithm and is to be calculated over the entire packet including the Message Authentication Digest field, which MUST be set to all 0s.
When the mode for the Authentication CSLD is set to 2, the Message Authentication Digest is generated using the HMAC SHA 256 algorithm as described in RFC 4868
[RFC4868] and is to be calculated over the entire packet including the Message Authentication Digest field, which MUST be set to all 0s.
When the mode field is set to 0, the Random Number and the Message Authentication Digest fields MAY be included; when present, they MUST be set to all 0s.
It is RECOMMENDED that IPsec be employed to afford better security.
IPsec provides enhanced privacy as well as an automated key  distribution mechanism.
The recommendations below are similar to those in Section 2 of RFC 3579
implementing this specification, the IPsec policy would be "Initiate IPsec, from me to any, destination port UDP 1167".
This causes the Sender to initiate IPsec when sending control traffic to any Responder.
If some Responders contacted by the Sender do not support IPsec, then a more granular policy will be required, such as "Initiate IPsec, from me to IPsec Capable Responder, destination port UDP 1167".
For Responders implementing this specification, the IPsec policy would be "Require IPsec, from any to me, destination port UDP 1167".
This causes the Responder to require use of IPsec.
If some Sender does not support IPsec, then a more granular policy will be required: "Require IPsec, from IPsec Capable Sender to me".
As the Control Phase occurs before the Measurement Phase, it should be possible to build an IPsec Security Association once a successful Control Response is received.
For Senders implementing this specification, the IPsec policy would be "Initiate IPsec, from me to negotiated address, destination is negotiated port".
This causes the Sender to initiate IPsec when sending measurement traffic to the Responder.
If some Responders contacted by the Sender do not support IPsec, then a more granular policy will be required, such as "Initiate IPsec, from me to IPsec  Capable Responder, destination is negotiated port".
For Responders implementing this specification, the IPsec policy would be "Require IPsec, from negotiated address to me, destination is negotiated port".
This causes the Responder to require use of IPsec.
If some Sender does not support IPsec, then a more granular policy will be required: "Require IPsec, from IPsec Capable Sender to me, destination is negotiated port".
Replay Protection For the Control messages, the originator of the message MAY choose to include a current value in the Sent Timestamp field indicating the time the message was submitted for transmission; otherwise, it MUST be set to 0.
The receiver of the message MAY choose to validate it if the timestamp is within an acceptable range.
The measurement traffic described in this document contains a timestamp to indicate the sent time and hence no new field is required.
