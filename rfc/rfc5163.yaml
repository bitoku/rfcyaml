- title: __initial_text__
  contents:
  - " Extension Formats for Unidirectional Lightweight Encapsulation (ULE)\n     \
    \         and the Generic Stream Encapsulation (GSE)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a set of Extension Headers for the\n   Unidirectional\
    \ Lightweight Encapsulation (ULE), RFC 4326.\n   The Extension Header formats\
    \ specified in this document define\n   extensions appropriate to both ULE and\
    \ the Generic Stream\n   Encapsulation (GSE) for the second-generation framing\
    \ structure\n   defined by the Digital Video Broadcasting (DVB) family of\n  \
    \ specifications.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Conventions Used in This Document ...............................3\n  \
    \ 3. Description of the Method .......................................4\n    \
    \  3.1. MPEG-2 TS-Concat Extension .................................5\n      3.2.\
    \ PDU-Concat Extension .......................................8\n      3.3. TimeStamp\
    \ Extension .......................................12\n   4. IANA Considerations\
    \ ............................................13\n   5. Acknowledgments ................................................13\n\
    \   6. Security Considerations ........................................14\n  \
    \ 7. References .....................................................14\n    \
    \  7.1. Normative References ......................................14\n      7.2.\
    \ Informative References ....................................14\n   Appendix A.\
    \ The Second-Generation DVB Transmission\n      Specifications .................................................16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes three Extension Headers that may\
    \ be used with\n   both the Unidirectional Lightweight Encapsulation (ULE) [RFC4326]\
    \ and\n   the Generic Stream Encapsulation (GSE) [GSE].  ULE is defined for\n\
    \   links that employ the MPEG-2 Transport Stream, and supports a wide\n   variety\
    \ of physical-layer bearers [RFC4259].\n   GSE has been designed for the Generic\
    \ Mode (also known as the Generic\n   Stream (GS)), offered by second-generation\
    \ DVB physical layers, and\n   in the first instance for DVB-S2 [ETSI-S2].  The\
    \ requirements for the\n   Generic Stream are described in [S2-REQ].  The important\n\
    \   characteristics of this encapsulation are described in the appendix\n   of\
    \ this document.  GSE maintains a design philosophy that presents a\n   network\
    \ interface that is common to that presented by ULE and uses a\n   similar construction\
    \ for SubNetwork Data Units (SNDUs).\n   The first Extension Header defines a\
    \ method that allows one or more\n   TS Packets [ISO-MPEG2] to be sent within\
    \ a ULE SNDU.  This method may\n   be used to provide control plane information\
    \ including the\n   transmission of MPEG-2 Program Specific Information (PSI)\
    \ for the\n   Multiplex.  In GSE, there is no native support for Transport Stream\n\
    \   packets and this method is therefore suitable for providing an MPEG-2\n  \
    \ control plane.\n   A second Extension Header allows one or more PDUs to be sent\
    \ within\n   the same ULE SNDU.  This method is designed for cases where a large\n\
    \   number of small PDUs are directed to the same Network Point of\n   Attachment\
    \ (NPA) address.  The method may improve transmission\n   efficiency (by removing\
    \ duplicated MAC layer overhead).  It can also\n   reduce processing overhead\
    \ for a receiver that is not configured to\n   receive the NPA address associated\
    \ with an SNDU, allowing this\n   receiver to then skip several PDUs in one operation.\
    \  The method is\n   defined as a generic Extension Header and may be used for\
    \ IPv4 or\n   IPv6 packets.  If, and when, a compression format is defined for\
    \ ULE\n   or Ethernet, the method may also be used in combination with this\n\
    \   method.\n   A third Extension Header provides an optional TimeStamp value\
    \ for an\n   SNDU.  Examples of the use of this TimeStamp option include\n   monitoring\
    \ and benchmarking of ULE and GSE links.  Receivers that do\n   not wish to decode\
    \ (or do not support) the TimeStamp extension may\n   discard the extension and\
    \ process the remaining PDU or Extension\n   Headers.\n   The appendix includes\
    \ a summary of key design issues and\n   considerations relating to the GSE Specification\
    \ defined by the DVB\n   Technical Module [GSE].\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n   b: bit.  For example, one byte consists of 8b.\n\
    \   B: byte.  Groups of bytes are represented in Internet byte order.\n   BBFrame\
    \ payload: The data field part of a Baseband frame  [ETSI-S2]\n   that may be\
    \ used for the communication of data.  Typical BBFrames\n   range in size from\
    \ 3072 to 58192 bits according to the choice of\n   modulation format and Forward\
    \ Error Correction (FEC) in use.\n   DVB: Digital Video Broadcasting.  A framework\
    \ and set of associated\n   standards published by the European Telecommunications\
    \ Standards\n   Institute (ETSI) for the transmission of video, audio, and data.\n\
    \   E: A one-bit flag field defined in GSE [GSE].\n   Encapsulator: A network\
    \ device [RFC4259] that receives PDUs and\n   formats these into Payload Units\
    \ (known here as SNDUs) for output in\n   DVB-S or the Generic Mode of DVB-S2.\n\
    \   GS: Generic Stream.  A stream of BBFrames identified by a common\n   Input\
    \ Stream Identifier, and which does not use the MPEG-2 TS format\n   [ETSI-S2].\
    \  It represents layer 2 of the ISO/OSI reference model.\n   GSE: Generic Stream\
    \ Encapsulation [GSE].  A method for encapsulating\n   PDUs to form a Generic\
    \ Stream, which is sent using a sequence of\n   BBFrames.  This encapsulation\
    \ format shares the same extension format\n   and basic processing rules of ULE\
    \ and uses a common IANA Registry.\n   LT: A two-bit flag field defined in GSE\
    \ [GSE].\n   MAC: Medium Access Control [IEEE-802.3].  A link-layer protocol\n\
    \   defined by the IEEE 802.3 standard.\n   MPEG-2: A set of standards specified\
    \ by the Motion Picture Experts\n   Group (MPEG), and standardized by the International\
    \ Organization for\n   Standardization (ISO/IEC 113818-1) [ISO-MPEG2], and ITU-T\
    \ (in H.220).\n   Next-Header: A Type value indicating an Extension Header [RFC4326].\n\
    \   NPA: Network Point of Attachment [RFC4326].  In this document, refers\n  \
    \ to a destination address (resembling an IEEE MAC address) within the\n   DVB-S/S2\
    \ transmission network that is used to identify individual\n   Receivers or groups\
    \ of Receivers.\n   PID: Packet Identifier  [ISO-MPEG2].  A 13-bit field carried\
    \ in the\n   header of each TS Packet.  This identifies the TS Logical Channel\
    \ to\n   which a TS Packet belongs [ISO-MPEG2].  The TS Packets that form the\n\
    \   parts of a Table Section or other Payload Unit must all carry the\n   same\
    \ PID value.  The all-ones PID value indicates a Null TS Packet\n   introduced\
    \ to maintain a constant bit rate of a TS Multiplex.  There\n   is no required\
    \ relationship between the PID values used for TS\n   Logical Channels transmitted\
    \ using different TS Multiplexes.\n   PDU: Protocol Data Unit [RFC4259].  Examples\
    \ of a PDU include\n   Ethernet frames, IPv4 or IPv6 datagrams, and other network\
    \ packets.\n   PSI: Program Specific Information [ISO-MPEG2].\n   S: A one-bit\
    \ flag field defined in [GSE].\n   SI Table: Service Information Table [ISO-MPEG2].\
    \  In this document,\n   this term describes a table that is been defined by another\
    \ standards\n   body to convey information about the services carried on a DVB\n\
    \   Multiplex.\n   SNDU: SubNetwork Data Unit [RFC4259].  In this document, this\
    \ is an\n   encapsulated PDU sent using ULE or GSE.\n   Stream: A logical flow\
    \ from an Encapsulator to a set of Receivers.\n   TS: Transport Stream [ISO-MPEG2],\
    \ a method of transmission at the\n   MPEG-2 level using TS Packets; it represents\
    \ layer 2 of the ISO/OSI\n   reference model.\n   ULE: Unidirectional Lightweight\
    \ Encapsulation (ULE) [RFC4326].  A\n   method that encapsulates PDUs into SNDUs\
    \ that are sent in a series of\n   TS Packets using a single TS Logical Channel.\
    \  The encapsulation\n   defines an extension format and an associated IANA Registry.\n"
- title: 3.  Description of the Method
  contents:
  - "3.  Description of the Method\n   In ULE, a Type field value that is less than\
    \ 1536 in decimal\n   indicates an Extension Header.  This section describes a\
    \ set of three\n   extension formats for the ULE encapsulation.  [GSE] uses a\
    \ Type field\n   that adopts the same semantics as specified by RFC 4326.  The\n\
    \   encapsulation format differs in that GSE does not include a Cyclic\n   Redundancy\
    \ Check (CRC) for each SNDU, has different header flags, and\n   utilizes a different\
    \ SNDU length calculation [GSE].\n   There is a natural ordering of Extension\
    \ Headers, which is determined\n   by the fields upon which the Extension Header\
    \ operates.  A suitable\n   ordering for many applications is presented in the\
    \ list below (from\n   first to last header within an SNDU).  This does not imply\
    \ that all\n   types of Extensions should be present in a single SNDU.  The\n\
    \   presented ordering may serve as a guideline for optimization of\n   Receiver\
    \ processing.\n   +----------------------------------+-------------------------------+\n\
    \   |Fields related to Extension Header| Example Extension Headers     |\n   +----------------------------------+-------------------------------+\n\
    \   | Link framing and transmission    | TimeStamp Extension           |\n   +----------------------------------+-------------------------------+\n\
    \   | Entire remaining SNDU Payload    | Encryption Extension          |\n   +----------------------------------+-------------------------------+\n\
    \   | Group of encapsulated PDUs       | PDU-Concat or TS-Concat       |\n   +----------------------------------+-------------------------------+\n\
    \   | Specific encapsulated PDU        | IEEE-defined type             |\n   |\
    \                                  | Test or MAC bridging Extension|\n   +----------------------------------+-------------------------------+\n\
    \            Table 1: Recommended ordering of Extension Headers\n"
- title: 3.1.  MPEG-2 TS-Concat Extension
  contents:
  - "3.1.  MPEG-2 TS-Concat Extension\n   The MPEG-2 TS-Concat Extension Header is\
    \ specified by an IANA-\n   assigned H-Type value of 0x0002 in hexadecimal.  This\
    \ is a Mandatory\n   Extension Header.\n   The extension is used to transport\
    \ one or more MPEG-2 TS Packets\n   within a ULE SNDU.  The number of TS Packets\
    \ carried in a specific\n   SNDU is determined from the size of the remainder\
    \ of the payload\n   following the MPEG-2 TS Extension Header.  The number of\
    \ TS Packets\n   contained in the SNDU is therefore (Length-N-10+D*6) / 188, where\
    \ N\n   is the number of bytes associated with Extension Headers that precede\n\
    \   the MPEG-2 TS-Concat Extension (zero if there are none) and D is the\n   value\
    \ of the D-bit.\n   A Receiver MUST check the validity of the Length value prior\
    \ to\n   processing the payload.  A valid Length corresponds to an integral\n\
    \   number of TS Packets.  An invalid Length (a remainder from the\n   division\
    \ by 188) MUST result in the discard of all encapsulated TS\n   Packets and SHOULD\
    \ be recorded as TS-Concat size mismatch error.\n    0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|           Length  (15b)     |         Type = 0x0002         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Receiver Destination NPA Address  (6B)             |\n   +  \
    \                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |        \
    \                       |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n   |                   TS-Packet 1        \
    \                         |\n   =                                            \
    \                   =\n   |                                                  \
    \             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   TS-Packet 2 (if Length > 2*188)             |\n   =  \
    \                                                             =\n   |        \
    \                      etc.                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             (CRC-32)                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Figure 1: ULE/SNDU Format for a TS-Packet Payload (D=0)\n   Figure 1\
    \ illustrates the format of this Extension Header for ULE with\n   a value D=0,\
    \ which indicates the presence of an NPA address\n   [RFC4326].  In this case,\
    \ the valid payload Length for a ULE SNDU\n   with no other extensions is (Length-10)\
    \ / 188.\n   The method used to define the Length in GSE differs to that of ULE.\n\
    \   The equivalent case for GSE would result in a payload Length value of\n  \
    \ (Length-6) / 188 (Figure 2).\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |S|E|0 0|      Length  (12b)    |         Type = 0x0002         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Receiver Destination NPA Address  (6B)             |\n   +  \
    \                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |        \
    \                       |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n   |                   TS-Packet 1        \
    \                         |\n   =                                            \
    \                   =\n   |                                                  \
    \             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   TS-Packet 2 (if Length > 2*188)             |\n   =  \
    \                                                             =\n   |        \
    \                      etc.                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        Figure 2: GSE/SNDU Format for a TS-Packet Payload (LT=00)\n   Fragmented\
    \ GSE SNDUs are protected by a CRC-32 carried in the final\n   fragment.  After\
    \ reassembly, this CRC-32 is removed and the resulting\n   SNDU carries a Total\
    \ Length field.  The fields labeled S and E are\n   defined by [GSE] and contain\
    \ control flags used by the GSE link\n   layer.  The Label Type (LT) field specifies\
    \ the presence and format\n   of the GSE label.  The LT field is only specified\
    \ for the first\n   fragment (or a non-fragmented) GSE SNDU (i.e., when S=1).\n\
    \   In ULE, a value of D=1 is also permitted and indicates the absence of\n  \
    \ an NPA address (Figure 3).  A similar format is supported in GSE.\n    0   \
    \                1                   2                   3\n    0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1|           Length  (15b)     |         Type = 0x0002         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   TS-Packet 1                                 |\n   =  \
    \                                                             =\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   TS-Packet 2 (if Length > 2*188)             |\n   =  \
    \                                                             =\n   |        \
    \                      etc.                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             (CRC-32)                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Figure 3: ULE/SNDU Format for a TS-Packet Payload (D=1)\n   The TS-Concat\
    \ extension may be used to transport one or more MPEG-2\n   TS Packets of arbitrary\
    \ content, interpreted according to [ISO-\n   MPEG2].  One expected use is for\
    \ the transmission of MPEG-2 SI/PSI\n   signalling [RFC4259].\n   NULL TS Packets\
    \ [ISO-MPEG2] SHOULD NOT be sent using this\n   encapsulation.  To reduce transmission\
    \ overhead and processing, an\n   Encapsulator SHOULD specify a maximum period\
    \ of time that it can wait\n   before sending all queued TS Packets.  This is\
    \ known as the TS\n   Packing Threshold.  This value MUST be bounded and SHOULD\
    \ be\n   configurable in the Encapsulator.  A larger value can improve\n   efficiency,\
    \ but incurs higher jitter and could increase the\n   probability of corruption.\
    \  If additional TS Packets are NOT received\n   within the TS Packing Threshold,\
    \ the Encapsulator MUST immediately\n   send any queued TS Packets.\n   The use\
    \ of this format to transfer MPEG-2 clock references (e.g., a\n   Network Clock\
    \ Reference, NCR) over ULE/GSE framing raises timing\n   considerations at the\
    \ encapsulation gateway, including the need to\n   update/modify the timing information\
    \ prior to transmission by the\n   physical layer.  These issues are not considered\
    \ here, but this\n   operation may be simplified in GSE by ensuring that all SNDUs\
    \ that\n   carry this Extension Header are placed before other data within the\n\
    \   BBFrame DataField [GSE].\n   This document does not specify how TS Packets\
    \ are to be handled at\n   the Receiver.  However, it notes:\n   * A Receiver\
    \ needs to consistently associate all TS Packets in a\n     Stream with one TS\
    \ Logical Channel (Stream).  If an Encapsulator\n     transmits more than one\
    \ Stream of TS Packets each encapsulated at a\n     different level or with a\
    \ different NPA address, a Receiver needs\n     to ensure that each is independently\
    \ demultiplexed as a separate\n     Stream (Section 3.2 [RFC4259]).\n   * If an\
    \ Encapsulator transmits service information encapsulated at\n     different levels\
    \ or with different NPA addresses, the Receivers\n     need to ensure each Stream\
    \ is related to the corresponding SI table\n     information (if any).  A RECOMMENDED\
    \ way to reduce signaling\n     interactions is to ensure each PID value uniquely\
    \ identifies a\n     Stream within a TS Multiplex carrying ULE and also any TS\
    \ Packets\n     encapsulated by a ULE/GSE Stream.\n   The need for consistency\
    \ in the use of PIDs and the related service\n   information is described in section\
    \ 4.2 of [RFC4947].\n"
- title: 3.2.  PDU-Concat Extension
  contents:
  - "3.2.  PDU-Concat Extension\n   The PDU-Concat Extension Header is specified by\
    \ an IANA-assigned\n   H-Type value of 0x0003 in hexadecimal.  This is a Mandatory\
    \ Next-\n   Header Extension.  It enables a sequence of (usually short) PDUs to\n\
    \   be sent within a single SNDU Payload.\n   The base header contains the Length\
    \ of the entire SNDU.  This carries\n   the value of the combined length of all\
    \ PDUs to be encapsulated,\n   including each set of encapsulation headers.  The\
    \ base header MAY be\n   followed by one or more additional Extension Headers\
    \ that precede the\n   PDU-Concat Extension Header.  These Extension Headers (e.g.,\
    \ a\n   TimeStamp Extension) apply to the composite concatenated PDU.\n   The\
    \ Extension Header also contains a 16-bit ULE Type field describing\n   the encapsulated\
    \ PDU, PDU-Concat-Type.  Although any Type value\n   specified in the ULE Next-Header\
    \ Registry (including Extension Header\n   Types) may be assigned to the encapsulated\
    \ PDU (except the recursive\n   use of a PDU-Concat type), all concatenated PDUs\
    \ MUST have a common\n   ULE Type (i.e., all concatenated PDUs passed by the network\
    \ layer\n   must be associated with the same Type value).  This simplifies the\n\
    \   receiver design, and reduces the transmission overhead for common use\n  \
    \ cases.\n   Each PDU is prefixed by its length in bytes (shown in the following\n\
    \   diagrams as PDU-x-Length for the xth PDU).  Encapsulated PDUs are of\n   arbitrary\
    \ length (in bytes) and are not necessarily aligned to 16-bit\n   or 32-bit boundaries\
    \ within the SNDU (as shown in the figures 4, 5,\n   and 6).  The most significant\
    \ bit of the first byte is reserved, R,\n   and this specification requires that\
    \ this MUST be set to zero.\n   Receivers MUST ignore the value of the R bit.\
    \  The length of each PDU\n   MUST be less than 32758 bytes, but will generally\
    \ be much smaller.\n   When the SNDU header indicates the presence of an SNDU\
    \ Destination\n   Address field (i.e., D=0 in ULE), a Network Point of Attachment,\
    \ NPA,\n   field directly follows the fourth byte of the SNDU header.  NPA\n \
    \  destination addresses are 6 byte numbers, normally expressed in\n   hexadecimal,\
    \ used to identify the Receiver(s) in a transmission\n   network that should process\
    \ a received SNDU.  When present, the\n   Receiver MUST associate the same specified\
    \ MAC/NPA address with all\n   PDUs within the SNDU Payload.  This MAC/NPA address\
    \ MUST also be\n   forwarded with each PDU, if required by the forwarding interface.\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|           Length  (15b)     |         Type = 0x0003         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Receiver Destination NPA Address  (6B)             |\n   +  \
    \                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |        \
    \                       |        PDU-Concat-Type        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |R|      PDU-1-Length  (15b)    |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n   =                        PDU-1         \
    \                         =\n   |                                            \
    \                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |R|      PDU-2-Length  (15b)    |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n   =                        PDU-2         \
    \                         =\n   |                                            \
    \                   |\n                              More PDUs as required\n \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   \
    \                          (CRC-32)                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Figure 4: ULE/SNDU Format for a PDU-Concat Payload (D=0)\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |S|E|0 0|      Length  (12b)    |         Type = 0x0003         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Receiver Destination NPA Address  (6B)             |\n   +  \
    \                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |        \
    \                       |        PDU-Concat-Type        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |R|      PDU-1-Length  (15b)    |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n   =                        PDU-1         \
    \                         =\n   |                                            \
    \                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |R|      PDU-2-Length  (15b)    |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n   =                        PDU-2         \
    \                         =\n   |                                            \
    \                   |\n                              More PDUs as required\n \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       \
    \ Figure 5: GSE/SNDU Format for a PDU-Concat Payload (LT=00)\n   When the SNDU\
    \ header indicates the absence of an SNDU Destination\n   Address field (i.e.,\
    \ D=1 in ULE), all encapsulated PDUs MUST be\n   processed as if they had been\
    \ received without an NPA address.\n   The value of D in the ULE header indicates\
    \ whether an NPA/MAC address\n   is in use [RFC4326].  A similar format is supported\
    \ in GSE (using the\n   LT field).\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1|           Length  (15b)     |         Type = 0x0003         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         PDU-Concat-Type       |R|      PDU-1-Length  (15b)    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   =                        PDU-1                                  =\n   |  \
    \                                                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |R|      PDU-2-Length  (15b)    |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n   =                        PDU-2         \
    \                         =\n   |                                            \
    \                   |\n                              More PDUs as required\n \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   \
    \                          (CRC-32)                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Figure 6: ULE/SNDU Format for a PDU-Concat Payload (D=1)\n   To reduce\
    \ transmission overhead and processing, an Encapsulator\n   SHOULD specify a maximum\
    \ period of time it will wait before sending a\n   Concatenated PDU.  This is\
    \ known as the PDU Packing Threshold.  This\n   value MUST be bounded and SHOULD\
    \ be configurable in the Encapsulator.\n   A larger value can improve efficiency,\
    \ but incurs higher jitter and\n   could increase the probability of corruption.\
    \  If additional PDUs are\n   NOT received within the PDU Packing Threshold, the\
    \ Encapsulator MUST\n   immediately send all queued PDUs.\n   The Receiver processes\
    \ this Extension Header by verifying that it\n   supports the specified PDU-Concat\
    \ Type (unsupported Types MUST be\n   discarded, but the receiver SHOULD record\
    \ a PDU-Type error\n   [RFC4326]).  It then extracts each encapsulated PDU in\
    \ turn.  The\n   Receiver MUST verify the Length of each PDU.  It MUST also ensure\n\
    \   that the sum of the Lengths of all processed PDUs equals the Length\n   specified\
    \ in the SNDU base header.  A Receiver SHOULD discard the\n   whole SNDU if the\
    \ total and PDU sizes are not consistent and this\n   event SHOULD be recorded\
    \ as a PDU-Concat size mismatch error.  A\n   receiver MUST NOT forward a partial\
    \ PDU with an indicated PDU-Length\n   greater than the number of unprocessed\
    \ bytes remaining in the SNDU\n   payload field.\n"
- title: 3.3.  TimeStamp Extension
  contents:
  - "3.3.  TimeStamp Extension\n   The TimeStamp Extension Header is an Optional Extension\
    \ Header that\n   permits an Encapsulator to add a TimeStamp field to an SNDU.\
    \  The\n   TimeStamp Extension Header is specified by the IANA-assigned H-Type\n\
    \   value of 257 decimal.  This extension is an Optional Extension Header\n  \
    \ ([RFC4326], Section 5).\n   This extension is designed to support monitoring\
    \ and measurement of\n   the performance of a link to indicate the quality of\
    \ an operational\n   ULE link.  This may be useful for GSE links (e.g., where\
    \ significant\n   complexity exists in the scheduling provided by the lower layers).\n\
    \   Possible uses of this extension include:\n   * Validation of in-sequence ordering\
    \ per Logical Channel\n   * Measurement of one-way delay (when synchronized with\
    \ the sender)\n   * Measurement of PDU Jitter introduced by the link\n   * Measurement\
    \ of PDU loss (with additional information from sender)\n   Figure 7 shows the\
    \ format of this extension with a HLEN value of 3\n   indicating a TimeStamp of\
    \ length 4B with a Type field (there is no\n   implied byte-alignment).\n   0\
    \               7               15              23              31\n   +---------------+---------------+---------------+---------------+\n\
    \   |     0x03      |      0x01     |        TimeStamp HI           |\n   +---------------+---------------+---------------+---------------+\n\
    \   |          TimeStamp LO         |            Type               |\n   +---------------+---------------+---------------+---------------+\n\
    \        Figure 7: Format of the 32-bit TimeStamp Extension Header\n   The extension\
    \ carries a 32-bit value (TimeStamp HI plus TimeStamp\n   LO).  The specified\
    \ resolution is 1 microsecond.  The value therefore\n   indicates the number of\
    \ 1-microsecond ticks past the hour in\n   Universal Time when the PDU was encapsulated.\
    \  This value may be\n   earlier than the time of transmission, due for example\
    \ to Packing,\n   queuing, and other Encapsulator processing.  The value is right-\n\
    \   justified to the 32-bit field.  Systems unable to insert TimeStamps\n   at\
    \ the specified resolution MUST pad the unused least-significant\n   bits with\
    \ a value of zero.\n   The last two bytes carry a 16-bit Type field that indicates\
    \ the type\n   of payload carried in the SNDU or the presence of a further Next-\n\
    \   Header ([RFC4326], Section 4.4).\n   Receivers MAY process the TimeStamp when\
    \ the PDU encapsulation is\n   removed.  Receivers that do not implement, or do\
    \ not wish to process,\n   the TimeStamp Extension MAY skip this Extension Header.\
    \  Receivers\n   MUST continue to process the remainder of the SNDU, forwarding\
    \ the\n   encapsulated PDU.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   IANA has assigned three new Next-Header Type values\
    \ from the IANA ULE\n   Next-Header Registry.  These options are defined for specific\
    \ use\n   cases envisaged by GSE, but are compatible with ULE.\n   The following\
    \ assignments have been made in this document and\n   registered by IANA:\n  \
    \     Type      Name                             Reference\n       2:        TS-Concat\
    \                        Section 3.1\n       3:        PDU-Concat            \
    \           Section 3.2\n       Type      Name                    H-LEN    Reference\n\
    \       257:      TimeStamp                3       Section 3.3\n   The TS-Concat\
    \ Extension is a Mandatory next-type Extension Header,\n   specified in Section\
    \ 3.1 of this document.  The value of this next-\n   header is defined by an IANA\
    \ assigned H-Type value of 0x0002.\n   The PDU-Concat Extension is a Mandatory\
    \ next-type Extension Header\n   specified in Section 3.2 of this document.  The\
    \ value of this next-\n   header is defined by an IANA assigned H-Type value of\
    \ 0x0003.\n   The TimeStamp Extension is an Optional next-type Extension Header\n\
    \   specified in Section 3.3 of this document.  The value of this next-\n   header\
    \ is defined by an IANA assigned H-Type value of 257 decimal.\n   This documents\
    \ defines the format for an HLEN value of 0x3.\n"
- title: 5.  Acknowledgments
  contents:
  - "5.  Acknowledgments\n   The authors gratefully acknowledge the inputs, comments,\
    \ and\n   assistance offered by the members of the DVB-GBS ad hoc group on\n \
    \  DVB-S2 encapsulation, in particular contributions on DVB-S2\n   transmission\
    \ aspects from Rita Rinaldo, Axel Jahn, and Ulrik De Bie.\n   Juan Cantillo provided\
    \ a significant contribution to the informative\n   appendix.  The authors thank\
    \ Christian Praehauser for his insight and\n   contribution on Extension Header\
    \ processing issues.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Security considerations for ULE are described\
    \ in [RFC4326], and\n   further information on security aspects of using ULE are\
    \ described in\n   the security considerations of [RFC4259] and [Sec-Req].\n \
    \  An attacker that is able to inject arbitrary TS Packets in a ULE or\n   GSE\
    \ Stream may modify layer 2 signalling information transmitted by\n   the MPEG-2\
    \ TS-Concat extension.  Since this attack requires access to\n   the link and/or\
    \ layer 2 equipment, such an attack could also directly\n   attack signalling\
    \ information sent as native TS Packets (not\n   encapsulated by ULE/GSE).  Security\
    \ issues relating to the\n   transmission and interpretation of layer 2 signalling\
    \ information\n   (including Address Resolution) within a TS Multiplex are described\
    \ in\n   [RFC4947].  The use of security mechanisms to protect the MPEG-2\n  \
    \ signalling information is discussed by [Sec-Req].\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]    Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC4326]    Fairhurst, G. and B. Collini-Nocker, \"Unidirectional\n\
    \                Lightweight Encapsulation (ULE) for Transmission of IP\n    \
    \            Datagrams over an MPEG-2 Transport Stream (TS)\", RFC\n         \
    \       4326, December 2005.\n   [GSE]        TS 102 606 \"Digital Video Broadcasting\
    \ (DVB); Generic\n                Stream Encapsulation (GSE) Protocol, \"European\n\
    \                Telecommunication Standards, Institute (ETSI), 2007.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [ETSI-S2]    EN 302 307, \"Digital Video Broadcasting\
    \ (DVB); Second\n                generation framing structure, channel coding\
    \ and\n                modulation systems for Broadcasting, Interactive\n    \
    \            Services, News Gathering and other broadband satellite\n        \
    \        applications\", European Telecommunication Standards\n              \
    \  Institute (ETSI).\n   [S2-REQ]     Cantillo, J. and J. Lacan, \"A Design Rationale\
    \ for\n                Providing IP Services over DVB-S2 Links\", Work in\n  \
    \              Progress, December 2006.\n   [Sec-Req]    Cruickshank, H., Iyengar,\
    \ S., and P. Pillai, \"Security\n                requirements for the Unidirectional\
    \ Lightweight\n                Encapsulation (ULE) protocol\", Work in Progress,\n\
    \                November 2007.\n   [IEEE-802.3] \"Local and metropolitan area\
    \ networks - Specific\n                requirements Part 3: Carrier sense multiple\
    \ access with\n                collision detection (CSMA/CD) access method and\
    \ physical\n                layer specifications\", IEEE 802.3, IEEE Computer\n\
    \                Society, (also ISO/IEC 8802-3), 2002.\n   [ISO-MPEG2]  ISO/IEC\
    \ DIS 13818-1:2000, \"Information Technology;\n                Generic Coding\
    \ of Moving Pictures and Associated Audio\n                Information Systems\"\
    , International Organization for\n                Standardization (ISO), 2000.\n\
    \   [RFC4259]    Montpetit, M.-J., Fairhurst, G., Clausen, H., Collini-\n    \
    \            Nocker, B., and H. Linder, \"A Framework for Transmission\n     \
    \           of IP Datagrams over MPEG-2 Networks\", RFC 4259,\n              \
    \  November 2005.\n   [RFC4947]    Fairhurst, G. and M. Montpetit, \"Address Resolution\n\
    \                Mechanisms for IP Datagrams over MPEG-2 Networks\", RFC\n   \
    \             4947, July 2007.\n"
- title: Appendix A.  The Second-Generation DVB Transmission Specifications
  contents:
  - "Appendix A.  The Second-Generation DVB Transmission Specifications\n   This section\
    \ provides informative background to the network-layer\n   requirements of the\
    \ second-generation DVB Transmission\n   Specifications.  The second-generation\
    \ waveforms specified by the\n   Digital Video Broadcasting project offer two\
    \ main enhancements.\n   First, more efficient physical-layer methods that employ\
    \ higher-order\n   modulation with stronger FEC and permit adaptive coding and\n\
    \   modulation response to changes in traffic and propagation conditions.\n  \
    \ Second, at the link layer, they offer greater flexibility in framing.\n   Support\
    \ is provided for a range of stream formats including the\n   classical Transport\
    \ Stream (TS) [RFC4259].  In addition, a new method\n   called Generic Stream\
    \ (GS) (or the Generic Mode) is supported.  A GS\n   can be packetized or continuous\
    \ and is intended to provide native\n   transport of other network-layer services.\
    \  One such method is that\n   provided by the Generic Stream Encapsulation (GSE)\
    \ [GSE].\n   For example, the DVB-S2 [ETSI-S2] transmission link sequentially\n\
    \   multiplexes a series of baseband frames (BBFrames).  Each BBFrame\n   comprises\
    \ a fixed-size 10B header and a payload.  The payload carries\n   a DataField\
    \ and uses padding to fill any unused space.  A stream\n   comprises a sequence\
    \ of BBFrames associated with an Input Stream\n   Identifier (ISI) that is carried\
    \ in the header of each BBFrame.  The\n   simplest scheme uses a single stream\
    \ (with just one ISI value), but\n   multiple streams are permitted.  The BBFrames\
    \ forming a stream may be\n   of variable size (selected from a set of allowed\
    \ sizes), and must use\n   the same stream format (i.e., TS or GSE).  Each stream\
    \ represents an\n   independent link with independent address resolution [RFC4947].\n\
    \   GSE provides functions that are equivalent to those of the\n   Unidirectional\
    \ Lightweight Encapsulation (ULE) [RFC4326].  It\n   supports the transmission\
    \ of IP packets and other network-layer\n   protocols.  The network-layer interface\
    \ resembles that of ULE, where\n   it adopts common mechanisms for a Length field,\
    \ a 16-bit Type field,\n   and support for Extension Headers.  As in ULE, GSE\
    \ permits multiple\n   address formats, indicated by the LT field (functionally\
    \ equivalent\n   to the D field in ULE).  The default addressing mode uses a 6-byte\n\
    \   NPA and a suppressed NPA address (functionally equivalent to D=1 in\n   ULE).\n\
    \   GSE also provides more flexible fragmentation at the interface to the\n  \
    \ physical layer (using the S and E flags).  This adapts the SNDUs to a\n   variable-sized\
    \ link-layer frame, and reflects the more complex\n   requirements in terms of\
    \ fragmentation and assembly that arise when\n   using point-to-multipoint adaptive\
    \ physical layers.  The integrity of\n   a reassembled SNDU is validated using\
    \ a CRC-32 in the last fragment\n   for the corresponding PDU.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Godred Fairhurst\n   School of Engineering,\n   University\
    \ of Aberdeen,\n   Aberdeen, AB24 3UE\n   UK\n   EMail: gorry@erg.abdn.ac.uk\n\
    \   URI: http://www.erg.abdn.ac.uk/users/gorry\n   Bernhard Collini-Nocker\n \
    \  Department of Computer Sciences,\n   University of Salzburg,\n   Jakob Haringer\
    \ Str. 2,\n   5020 Salzburg,\n   Austria\n   EMail: bnocker@cosy.sbg.ac.at\n \
    \  URI: http://www.cosy.sbg.ac.at\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
