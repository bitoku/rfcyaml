Abstract The Certificate (CERT) parameter is a container for digital certificates.
It is used for carrying these certificates in Host Identity Protocol (HIP) control packets.
This document specifies the certificate parameter and the error signaling in case of a failed verification.
Additionally, this document specifies the representations of Host Identity Tags (HITs) in X.509 version 3 (v3).
The concrete use cases of certificates, including how certificates are obtained and requested and which actions are taken upon successful or failed verification, are specific to the scenario in which the certificates are used.
Hence, the definition of these scenario specific aspects is left to the documents that use the CERT parameter.
This document updates RFC 7401 and obsoletes RFC 6253.
Introduction Digital certificates bind pieces of information to a public key by means of a digital signature and thus enable the holder of a private key to generate cryptographically verifiable statements.
The Host Identity Protocol (HIP) [RFC7401] defines a new cryptographic namespace based on asymmetric cryptography.
The identity of each host is derived from a public key, allowing hosts to digitally sign data and issue certificates with their private key.
This document specifies the CERT parameter, which is used to transmit digital certificates in HIP.
It fills the placeholder specified in Section 5.2 of [RFC7401] and thus updates [RFC7401].
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
The CERT parameter is a container for certain types of digital certificates.
It does not specify any certificate semantics.
However, it defines supplementary parameters that help HIP hosts to transmit semantically grouped CERT parameters in a more systematic way.
The specific use of the CERT parameter for different use cases is intentionally not discussed in this document.
Hence, the use of the CERT parameter will be defined in the documents that use the CERT parameter.
The CERT parameter is covered and protected, when present, by the HIP SIGNATURE field and is a non critical parameter.
The CERT parameter can be used in all HIP packets.
However, using it in the first Initiator (I1) packet is NOT RECOMMENDED because it can increase the processing times of I1s, which can be problematic when processing storms of I1s.
Each HIP control packet MAY contain multiple CERT parameters, each carrying one certificate.
These parameters MAY be related or unrelated.
Related certificates are managed in CERT groups.
A CERT group specifies a group of related CERT parameters that SHOULD be interpreted in a certain order (e.g., for expressing certificate chains).
Ungrouped certificates exhibit a unique CERT group field and set the CERT count to 1.
CERT parameters with the same group number in the CERT group field indicate a logical grouping.
The CERT count field indicates the number of CERT parameters in the group.
CERT parameters that belong to the same CERT group MAY be contained in multiple sequential HIP control packets.
This is indicated by a higher CERT count than the amount of CERT parameters with matching CERT group fields in a HIP control packet.
The CERT parameters MUST be placed in ascending order, within a HIP control packet, according to their CERT group field.
CERT groups MAY only span multiple packets if the CERT group does not fit the packet.
A HIP packet MUST NOT contain more than one incomplete CERT group that continues in the next HIP control packet.
The CERT ID acts as a sequence number to identify the certificates in a CERT group.
The numbers in the CERT ID field MUST start from 1 up to CERT count.
The CERT group and CERT ID namespaces are managed locally by each host that sends CERT parameters in HIP control packets. 0
CERT group    Group ID grouping multiple related CERT parameters.
CERT count    Total count of certificates that are sent, possibly in several consecutive HIP control packets.
The sequence number for this certificate.
Any added padding bytes MUST be zeroed by the sender, and their values SHOULD NOT be checked by the receiver.
The certificates MUST use the algorithms defined in [RFC7401] as the signature and hash algorithms.
The next sections outline the use of HITs in X.509 v3.
X.509 v3 certificates and the handling procedures are defined in [RFC5280].
The wire format for X.509 v3 is the Distinguished Encoding Rules format as defined in [X.690].
Hash and Uniform Resource Locator (URL) encoding (3) is used as defined in Section 3.6 of [RFC7296].
Using hash and URL encodings result in smaller HIP control packets than by including the certificate(s) but requires the receiver to resolve the URL or check a local cache against the hash.
Lightweight Directory Access Protocol (LDAP)
URL encoding (5) is used as defined in [RFC4516].
Using LDAP URL encoding results in smaller HIP control packets but requires the receiver to retrieve the certificate or check a local cache against the URL.
Distinguished Name (DN) encoding (7) is represented by the string representation of the certificate's subject DN as defined in [RFC4514].
Using the DN encoding results in smaller HIP control packets but requires the receiver to retrieve the certificate or check a local cache against the DN.
X.509 v3 Certificate Object and Host Identities
If needed, HITs can represent an issuer, a subject, or both in X.509 v3.
HITs are represented as IPv6 addresses as defined in [RFC7343].
When the Host Identifier (HI) is used to sign the certificate, the respective HIT SHOULD be placed into the Issuer Alternative Name (IAN) extension using the GeneralName form iPAddress as defined in [RFC5280].
When the certificate is issued for a HIP host, identified by a HIT and an HI, the respective HIT SHOULD be placed into the Subject Alternative Name (SAN) extension using the GeneralName form iPAddress, and the full HI is presented as the subject's public key info as defined in [RFC5280].
The following examples illustrate how HITs are presented as the issuer and subject in the X.509 v3 extension alternative names.
X509v3 Issuer Alternative Name: IP Address:hit of issuer
X509v3 Subject Alternative Name: IP Address:
hit of subject Example X509v3 extensions:
X509v3 Issuer Alternative Name: IP Address:2001:24:6cf:fae7:
bb79:bf78:7d64:c056 X509v3 Subject Alternative Name: IP Address:2001:2c:5a14:26de:
Appendix A shows a full example X.509 v3 certificate with HIP content.
As another example, consider a managed Public Key Infrastructure (PKI) environment in which the peers have certificates that are anchored in (potentially different) managed trust chains.
In this scenario, the certificates issued to HIP hosts are signed by intermediate Certification Authorities (CAs) up to a root CA.
In this example, the managed PKI environment is neither HIP aware nor can it be configured to compute HITs and include them in the certificates.
When HIP communications are established, the HIP hosts not only need to send their identity certificates (or pointers to their certificates) but also the chain of intermediate CAs (or pointers to the CAs) up to the root CA, or to a CA that is trusted by the remote peer.
This chain of certificates SHOULD be sent in a CERT group as specified in Section 2.
The HIP peers validate each other's certificates and compute peer HITs based on the certificate public keys.
Revocation of X.509 v3 certificates is handled as defined in Section 5 of [RFC5280] with two exceptions.
First, any HIP certificate serial number that appears on the Certificate Revocation List (CRL) is treated as invalid regardless of the reason code.
Second, the certificateHold is not supported.
Error Signaling If the Initiator does not send all the certificates that the Responder requires, the Responder may take actions (e.g., reject the connection).
The Responder MAY signal this to the Initiator by sending a HIP NOTIFY message with NOTIFICATION parameter error type CREDENTIALS REQUIRED.
If the verification of a certificate fails, a verifier MAY signal this to the provider of the certificate by sending a HIP NOTIFY message with NOTIFICATION parameter error type INVALID CERTIFICATE.
The Responder is unwilling to set up an association, as the Initiator did not send the needed credentials.
50 Sent in response to a failed verification of a certificate.
Notification Data MAY contain a CERT group and CERT ID octet (in this order) of the CERT parameter that caused the failure.
This document defines the CERT parameter for HIP [RFC7401].
The CERT parameter type number (768) is defined in [RFC7401].
The CERT parameter has an 8 bit unsigned integer field for different certificate types, for which IANA has created and maintains a subregistry entitled "HIP Certificate Types" under "Host Identity Protocol (HIP) Parameters".
Values for the "HIP Certificate Types" registry are given in Section 2.
New values for the Certificate types from the unassigned space are assigned through IETF Review.
In Section 5, this document defines two types for the "NOTIFY Message Types" subregistry under "Host Identity Protocol (HIP) Parameters".
As this document obsoletes [RFC6253], references to [RFC6253]
in IANA registries have been replaced by references to this document.
This document changes the "HIP Certificate Types" registry in Section 2.
The following updates to the "HIP Certificate Types" registry have been made.
The references have been updated from [RFC6253] to this document.
This document obsoleted the type numbers "2", "4", "6", and "8" for the Simple Public Key Infrastructure (SPKI) certificates.
Security Considerations Certificate grouping allows the certificates to be sent in multiple consecutive packets.
This might allow similar attacks, as IP layer fragmentation allows, for example, the sending of fragments in the wrong order and skipping some fragments to delay or stall packet processing by the victim in order to use resources (e.g., CPU or memory).
Hence, hosts SHOULD implement mechanisms to discard certificate groups with outstanding certificates if state space is scarce.
Although the CERT parameter is allowed in the I1 packet, it is NOT RECOMMENDED because it can increase the processing times of I1s, which can be problematic when processing storms of I1s.
Furthermore, the Initiator has to take into consideration that the Responder can drop the CERT parameter in I1 without processing the parameter.
Checking of the URL and LDAP entries might allow denial of service (DoS) attacks, where the target host may be subjected to bogus work.
Security considerations for X.509 v3 are discussed in [RFC5280].
This section summarizes the technical changes made from [RFC6253].
This section is informational and is intended to help implementors of the previous protocol version.
If any text in this section contradicts text in other portions of this specification, the text found outside of this section
The following change has been made.
Support for SPKI certificates has been removed.
Appendix A.  X.509 v3 Certificate Example
This section shows an X.509 v3 certificate with encoded HITs.
sha256WithRSAEncryption Issuer: DC Example, DC com, CN Example issuing host Validity
Not Before: Feb 25 11:28:29 2016 GMT
Not After : Feb 24 11:28:29 2017
DC Example, DC com, CN Example
issuing host Subject Public Key Info
: Public Key Algorithm: rsaEncryption
:b0:41: 98:97 Exponent: 65537 (0x10001)
X509v3 Subject Alternative Name: IP Address:2001:27:
X509v3 Issuer Alternative Name: IP Address:2001:2D:
/IsZAEZFgdFeGFtcGxlMRMwEQYKCZImiZPyLGQB GRYDY29tMR0wGwYDVQQDExRFeGFtcGxlIGlzc3VpbmcgaG9zdDCCASIwDQYJKoZI hvcNAQEBBQADggEPADCCAQoCggEBAMmwhZSvHzp3OcnVgaXu0rVrcpFdIiweWeUG Kb2iGfasyuv3iNhUVUEBWNiHZNjIz27COIEiGq7ppoAiA 7zG35oEeP0e5gzKL9A 7E8Z6BCKiwdg95/kgvinWAQ9QgfINMqZbRHrc8HZlpNV5cftgE K8hpvg8gVpI 4 av7zT0kaXB
xGjiz1lU5u7Mp877Vr8xYPTL5/AOUPi3xTwa3nTQqoPlFSWxv76kf68K3ggJDhMd KjsamdmvEPwIkl/Y0BDWuQyG2oU7RLWXkBACT1ofrgcwa/XmEpNy4hDJjiwAi9bw BcP/kSRpbVtaDEAoAfJbRbibrp5z6d2D4IXXrWyxgaygMDedYL2SO9KhIYeLxNla XCFWPgJ 82
