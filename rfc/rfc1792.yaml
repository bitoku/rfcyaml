- title: __initial_text__
  contents:
  - '                  TCP/IPX Connection Mib Specification

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document defines an Experimental Protocol for the\
    \ Internet\n   community.  This does not specify an Internet standard of any kind.\n\
    \   Discussion and suggestions for improvement are requested.\n   Distribution\
    \ of this memo is unlimited.\n   Internet Engineering Steering Group comment from\
    \ the Area Director\n   for Transport Services: Please note well that this memo\
    \ is an\n   individual product of the author.  Implementation experience,\n  \
    \ particularly on the effectiveness of the protocols in dual-stack\n   environments,\
    \ is needed.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Traditionally, TCP and UDP runs over IP.  STD 17, RFC 1213\
    \ defines\n   TCP connection MIB object and UDP listener object assuming just\
    \ that.\n   For TCP and UDP running over IPX, tcpConnTable and udpTable objects\n\
    \   from RFC 1213 cannot be used since they define the address to be of\n   type\
    \ IpAddress.  As such, we need to define new objects that can\n   properly describe\
    \ TCP and UDP connections over IPX.\n   New MIB objects, tcpIpxConnTable, udpIpxTable,\
    \ tcpUnspecConnTable and\n   udpUnspecTable are presented in this paper, to be\
    \ used in place of\n   tcpConnTable and udpListenerTable when TCP and UDP are\
    \ running over\n   IPX.\n"
- title: 2.  Objects
  contents:
  - "2.  Objects\n           TCPIPX-MIB DEFINITIONS ::= BEGIN\n           IMPORTS\n\
    \                   OBJECT-TYPE\n                           FROM RFC-1212;\n \
    \       -- IPX address type.\n        -- First 4 octests are the network numbers\
    \ and the last 6\n        -- octests are the node numbers.  In ascii, it is represented\n\
    \        -- as hex digits, as in:  nnnnnnnn:mmmmmmmmmmmm\n        IpxAddress ::=\
    \ OCTET STRING (size (10))\n           -- TCP/IPX MIB object idenfifiers\n   \
    \     novell        OBJECT IDENTIFIER ::= { enterprises 23 }\n        mibDoc \
    \       OBJECT IDENTIFIER ::= { novell 2 }\n        tcpx          OBJECT IDENTIFIER\
    \ ::= { mibDoc 29 }\n        tcpxTcp       OBJECT IDENTIFIER ::= { tcpx 1 }\n\
    \        tcpxUdp       OBJECT IDENTIFIER ::= { tcpx 2 }\n          -- the TCP/IPX\
    \ Connection table\n           -- The TCP/IPX connection table contains information\n\
    \           -- about this entity's existing TCP connections over\n           --\
    \ IPX.\n           tcpIpxConnTable OBJECT-TYPE\n               SYNTAX  SEQUENCE\
    \ OF TcpIpxConnEntry\n               ACCESS  not-accessible\n               STATUS\
    \  mandatory\n               DESCRIPTION\n                       \"A table containing\
    \ information specific on\n                       TCP connection over IPX network\
    \ layer.\"\n               ::= { tcpxTcp 1 }\n           tcpIpxConnEntry OBJECT-TYPE\n\
    \               SYNTAX  TcpIpxConnEntry\n               ACCESS  not-accessible\n\
    \               STATUS  mandatory\n               DESCRIPTION\n              \
    \         \"Information about a particular current TCP\n                     \
    \  connection over IPX  An object of this type is\n                       transient,\
    \ in that it ceases to exist when (or\n                       soon after) the\
    \ connection makes the transition\n                       to the CLOSED state.\"\
    \n               INDEX   { tcpIpxConnLocalAddress,\n                         tcpIpxConnLocalPort,\n\
    \                         tcpIpxConnRemAddress,\n                         tcpIpxConnRemPort\
    \ }\n              ::= { tcpIpxConnTable 1 }\n           TcpIpxConnEntry ::=\n\
    \               SEQUENCE {\n                   tcpIpxConnState\n             \
    \          INTEGER,\n                   tcpIpxConnLocalAddress\n             \
    \          IpxAddress\n                   tcpIpxConnLocalPort\n              \
    \         INTEGER (0..65535),\n                   tcpIpxConnRemAddress\n     \
    \                  IpxAddress,\n                   tcpIpxConnRemPort\n       \
    \                INTEGER (0..65535)\n               }\n           tcpIpxConnState\
    \ OBJECT-TYPE\n               SYNTAX  INTEGER {\n                           closed(1),\n\
    \                           listen(2),\n                           synSent(3),\n\
    \                           synReceived(4),\n                           established(5),\n\
    \                           finWait1(6),\n                           finWait2(7),\n\
    \                           closeWait(8),\n                           lastAck(9),\n\
    \                           closing(10),\n                           timeWait(11),\n\
    \                           deleteTCB(12)\n                       }\n        \
    \       ACCESS  read-write\n               STATUS  mandatory\n               DESCRIPTION\n\
    \                       \"The state of this TCP connection.\n                \
    \       The only value which may be set by a management\n                    \
    \   station is deleteTCB(12).  Accordingly, it is\n                       appropriate\
    \ for an agent to return a `badValue'\n                       response if a management\
    \ station attempts to set\n                       this object to any other value.\n\
    \                       If a management station sets this object to the\n    \
    \                   value deleteTCB(12), then this has the effect of\n       \
    \                deleting the TCB (as defined in RFC 793) of the\n           \
    \            corresponding connection on the managed node,\n                 \
    \      resulting in immediate termination of the\n                       connection.\n\
    \                       As an implementation-specific option, a RST\n        \
    \               segment may be sent from the managed node to the\n           \
    \            other TCP endpoint (note however that RST\n                     \
    \  segments are not sent reliably).\"\n               ::= { tcpIpxConnEntry 1\
    \ }\n           tcpIpxConnLocalAddress OBJECT-TYPE\n               SYNTAX  IpxAddress\n\
    \               ACCESS  read-only\n               STATUS  mandatory\n        \
    \       DESCRIPTION\n                       \"The local IPX address for this TCP\
    \ connection.\n                       In the case of a connection in the listen\
    \ state\n                       which is willing to accept connections for any\n\
    \                       interface, the value 00000000:000000000000 is\n      \
    \                 used.  See tcpUnspecConnTable for connections in\n         \
    \              the listen  state which is willing to accept\n                \
    \       connects for any IP interface associated with\n                      \
    \ the node.\"\n               ::= { tcpIpxConnEntry 2 }\n           -- NetworkAddress\
    \ defined in SMI only include IP currently,\n           -- so we can't use it\
    \ to represent both IP and IPX address.\n           tcpIpxConnLocalPort OBJECT-TYPE\n\
    \               SYNTAX  INTEGER (0..65535)\n               ACCESS  read-only\n\
    \               STATUS  mandatory\n               DESCRIPTION\n              \
    \         \"The local port number for this TCP connection.\"\n               ::=\
    \ { tcpIpxConnEntry 3 }\n           tcpIpxConnRemAddress OBJECT-TYPE\n       \
    \        SYNTAX  IpxAddress\n               ACCESS  read-only\n              \
    \ STATUS  mandatory\n               DESCRIPTION\n                       \"The\
    \ remote IPX address for this TCP connection.\"\n               ::= { tcpIpxConnEntry\
    \ 4 }\n           tcpIpxConnRemPort OBJECT-TYPE\n               SYNTAX  INTEGER\
    \ (0..65535)\n               ACCESS  read-only\n               STATUS  mandatory\n\
    \               DESCRIPTION\n                       \"The remote port number for\
    \ this TCP connection.\"\n               ::= { tcpIpxConnEntry 5 }\n         \
    \  -- the UDP Listener table\n           -- The UDP listener table contains information\
    \ about this\n           -- entity's UDP end-points on which a local application\
    \ is\n           -- currently accepting datagrams.\n           udpIpxTable OBJECT-TYPE\n\
    \               SYNTAX  SEQUENCE OF UdpIpxEntry\n               ACCESS  not-accessible\n\
    \               STATUS  mandatory\n               DESCRIPTION\n              \
    \         \"A table containing UDP listener information.\"\n               ::=\
    \ { tcpxUdp 1 }\n           udpIpxEntry OBJECT-TYPE\n               SYNTAX  UdpIpxEntry\n\
    \               ACCESS  not-accessible\n               STATUS  mandatory\n   \
    \            DESCRIPTION\n                       \"Information about a particular\
    \ current UDP\n                       listener.\"\n               INDEX   { udpIpxLocalAddress,\
    \ udpIpxLocalPort }\n               ::= { udpIpxTable 1 }\n           UdpIpxEntry\
    \ ::=\n               SEQUENCE {\n                   udpIpxLocalAddress\n    \
    \        IpxAddress\n                   udpIpxLocalPort\n                    \
    \   INTEGER (0..65535)\n               }\n           udpIpxLocalAddress OBJECT-TYPE\n\
    \               SYNTAX  IpxAddress\n               ACCESS  read-only\n       \
    \        STATUS  mandatory\n               DESCRIPTION\n                     \
    \  \"The local IPX address for this UDP listener.  In\n                      \
    \ the case of a UDP listener which is willing to\n                       accept\
    \ datagrams for any interface, the value\n                       00000000:000000000000\
    \ is used.  See\n                       udpUnspecTable for UDP listener which\
    \ is\n                       willing to accept datagrams from any network\n  \
    \                     layer.\"\n               ::= { udpIpxEntry 1 }\n       \
    \    udpIpxLocalPort OBJECT-TYPE\n               SYNTAX  INTEGER (0..65535)\n\
    \               ACCESS  read-only\n               STATUS  mandatory\n        \
    \       DESCRIPTION\n                       \"The local port number for this UDP\
    \ listener.\"\n               ::= { udpIpxEntry 2 }\n           -- the TCP/UNSPEC\
    \ Connection table\n           -- The TCP/UPSPEC connection table contains information\n\
    \           -- about this entity's existing TCP connections over\n           --\
    \ unspecified network.\n           -- Since the network is unspecified, the network\n\
    \           -- address is also unspecified.  Hence, this\n           -- connection\
    \ table does not include any network\n           -- address.\n           tcpUnspecConnTable\
    \ OBJECT-TYPE\n               SYNTAX  SEQUENCE OF TcpIpxConnEntry\n          \
    \     ACCESS  not-accessible\n               STATUS  mandatory\n             \
    \  DESCRIPTION\n                       \"A table containing information specific\
    \ on\n                       TCP connection over unspecified network layer.\"\n\
    \               ::= { tcpxTcp 2 }\n           tcpUnspecConnEntry OBJECT-TYPE\n\
    \               SYNTAX  TcpUnspecConnEntry\n               ACCESS  not-accessible\n\
    \               STATUS  mandatory\n               DESCRIPTION\n              \
    \         \"Information about a particular current TCP\n                     \
    \  connection over unspecified network layer.  An\n                       object\
    \ of this type is transient, in that it\n                       ceases to exist\
    \ when the connection makes\n                       transition beyond LISTEN state,\
    \ or when (or\n                       soon after) the connection makes transition\n\
    \                       to the CLOSED state,\"\n               INDEX   { tcpUnspecConnLocalPort\
    \ }\n               ::= { tcpUnspecConnTable 1 }\n           TcpUnspecConnEntry\
    \ ::=\n               SEQUENCE {\n                   tcpUnspecConnState\n    \
    \                   INTEGER,\n                   tcpUnspecConnLocalPort\n    \
    \                   INTEGER (0..65535),\n               }\n           tcpUnspecConnState\
    \ OBJECT-TYPE\n               SYNTAX  INTEGER {\n                           closed(1),\n\
    \                           listen(2),\n                           deleteTCB(12)\n\
    \                       }\n               ACCESS  read-write\n               STATUS\
    \  mandatory\n               DESCRIPTION\n                       \"The state of\
    \ this TCP connection.\n                       Since the TCP connection can belong\
    \ to this table\n                       only when its state is less than SYN_SENT,\
    \ only\n                       closed and listen state apply.\n              \
    \         The only value which may be set by a management\n                  \
    \     station is deleteTCB(12).  Accordingly, it is\n                       appropriate\
    \ for an agent to return a `badValue'\n                       response if a management\
    \ station attempts to set\n                       this object to any other value.\n\
    \                       If a management station sets this object to the\n    \
    \                   value deleteTCB(12), then this has the effect of\n       \
    \                deleting the TCB (as defined in RFC 793) of the\n           \
    \            corresponding connection on the managed node,\n                 \
    \      resulting in immediate termination of the\n                       connection.\n\
    \                       As an implementation-specific option, a RST\n        \
    \               segment may be sent from the managed node to the\n           \
    \            other TCP endpoint (note however that RST\n                     \
    \  segments are not sent reliably).\"\n               ::= { tcpUnspecConnEntry\
    \ 1 }\n           tcpUnspecConnLocalPort OBJECT-TYPE\n               SYNTAX  INTEGER\
    \ (0..65535)\n               ACCESS  read-only\n               STATUS  mandatory\n\
    \               DESCRIPTION\n                       \"The local port number for\
    \ this TCP connection.\"\n               ::= { tcpUnspecConnEntry 2 }\n      \
    \     -- the UDP Listener table\n           -- The UDP listener table contains\
    \ information about this\n           -- entity's UDP end-points over unspecified\
    \ network layer,\n           -- on which a local application is currently accepting\n\
    \           -- datagrams.  If network layer is unspecified, the network\n    \
    \       -- address is also unspecified.  Hence, this table does not\n        \
    \   -- include any network address.\n           udpUnspecTable OBJECT-TYPE\n \
    \              SYNTAX  SEQUENCE OF UdpUnspecEntry\n               ACCESS  not-accessible\n\
    \               STATUS  mandatory\n               DESCRIPTION\n              \
    \          \"A table containing UDP listener information.\"\n               ::=\
    \ { tcpxUdp 2 }\n           udpUnspecEntry OBJECT-TYPE\n               SYNTAX\
    \  UdpUnspecEntry\n               ACCESS  not-accessible\n               STATUS\
    \  mandatory\n               DESCRIPTION\n                       \"Information\
    \ about a particular current UDP\n                       listener.\"\n       \
    \        INDEX   { udpUnspecLocalPort }\n               ::= { udpUnspecTable 1\
    \ }\n           UdpUnspecEntry ::=\n               SEQUENCE {\n              \
    \     udpUnspecLocalPort\n                       INTEGER (0..65535)\n        \
    \       }\n           udpUnspecLocalPort OBJECT-TYPE\n               SYNTAX  INTEGER\
    \ (0..65535)\n               ACCESS  read-only\n               STATUS  mandatory\n\
    \               DESCRIPTION\n                       \"The local port number for\
    \ this UDP listener.\"\n               ::= { udpUnspecEntry 1 }\n            END\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   The author would like to thank following folks and others\
    \ for their\n   assitance: Greg Minshall, Dave Piscitello.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Tae Sung\n   Novell, Inc.\n   2180 Fortune Drive\n   San\
    \ Jose, California, 95131\n   Phone: (408)577-8439\n   EMail: tae@novell.Com\n"
