- title: __initial_text__
  contents:
  - "       Using Extensible Markup Language-Remote Procedure Calling\n        (XML-RPC)\
    \ in Blocks Extensible Exchange Protocol (BEEP)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   XML-RPC is an Extensible Markup Language-Remote Procedure Calling\n\
    \   protocol that works over the Internet.  It defines an XML format for\n   messages\
    \ that are transfered between clients and servers using HTTP.\n   An XML-RPC message\
    \ encodes either a procedure to be invoked by the\n   server, along with the parameters\
    \ to use in the invocation, or the\n   result of an invocation.  Procedure parameters\
    \ and results can be\n   scalars, numbers, strings, dates, etc.; they can also\
    \ be complex\n   record and list structures.\n   This document specifies a how\
    \ to use the Blocks Extensible Exchange\n   Protocol (BEEP) to transfer messages\
    \ encoded in the XML-RPC format\n   between clients and servers.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   2.  BEEP Profile Identification  . . . . . . . . . . . . .\
    \ . . .  2\n       2.1  Profile  Initialization . . . . . . . . . . . . . . .\
    \ .  3\n   3.  XML-RPC Message Packages . . . . . . . . . . . . . . . . . .  4\n\
    \   4.  XML-RPC Message Exchange . . . . . . . . . . . . . . . . . .  5\n   5.\
    \  URL Schemes  . . . . . . . . . . . . . . . . . . . . . . . .  5\n       5.1\
    \  The xmlrpc.beep URL Scheme. . . . . . . . . . . . . . .  5\n            5.1.1\
    \ Resolving IP/TCP Address  Information . . . . . .  6\n       5.2  The xmlrpc.beeps\
    \ URL Scheme . . . . . . . . . . . . . .  7\n   6.  Initial Registrations  . .\
    \ . . . . . . . . . . . . . . . . .  9\n       6.1  Registration: The XML-RPC\
    \ Profile . . . . . . . . . . .  9\n       6.2  Registration: The xmlrpc.beep\
    \ URL Scheme. . . . . . . .  9\n       6.3  Registration: The xmlrpc.beeps URL\
    \ Scheme . . . . . . . 10\n       6.4  Registration: The System (Well-Known) TCP\
    \ port number\n            for XML-RPC over BEEP . . . . . . . . . . . . . . .\
    \ . . 10\n   7.  Security Considerations  . . . . . . . . . . . . . . . . . .\
    \ 11\n   8.  References . . . . . . . . . . . . . . . . . . . . . . . . . 11\n\
    \   Appendix\n   A. Acknowledgements. . . . . . . . . . . . . . . . . . . . .\
    \ . . 13\n   B. IANA Considerations . . . . . . . . . . . . . . . . . . . . .\
    \ 13\n   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . 14\n\
    \   Full Copyright Statement . . . . . . . . . . . . . . . . . . . . 15\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This memo specifies how messages encoded in the XML-RPC [1]\
    \ format\n   are transmitted using a BEEP profile [2].\n   Throughout this memo,\
    \ the terms \"request\" and \"response\" refer to the\n   \"methodCall\" and \"\
    methodResponse\" elements defined by the XML-RPC\n   specification [1].  Further\
    \ the terms \"peer\", \"client\", \"server\", and\n   \"one-to-one\" are used\
    \ in the context of BEEP.  In particular,\n   Sections 2.1 and 2.1.1 of [2] discuss\
    \ BEEP roles and exchange styles.\n"
- title: 2. BEEP Profile Identification
  contents:
  - "2. BEEP Profile Identification\n   The BEEP profile for XML-RPC is identified\
    \ as\n      http://iana.org/beep/transient/xmlrpc\n   in the BEEP \"profile\"\
    \ element during channel creation.\n   In BEEP, when the first channel is successfully\
    \ created, the\n   \"serverName\" attribute in the \"start\" element identifies\
    \ the \"virtual\n   host\" associated with the peer acting in the server role,\
    \ e.g.,\n      <start number='1' serverName='stateserver.example.com'>\n     \
    \     <profile uri='http://iana.org/beep/transient/xmlrpc' />\n      </start>\n\
    \   The \"serverName\" attribute is analogous to HTTP's \"Host\" request-\n  \
    \ header field (c.f., Section 14.23 of [3]).\n   There are two states in the BEEP\
    \ profile for XML-RPC, \"boot\", the\n   profile's initial state, and \"ready\"\
    :\n   o  In the \"boot\" state, the peer requesting the creation of the\n    \
    \  channel sends a \"bootmsg\" (either during channel initialization or\n    \
    \  in a \"MSG\" message).\n      *  If the other peer sends a \"bootrpy\" (either\
    \ during channel\n         initialization or in a \"RPY\" message), then the \"\
    ready\" state\n         is entered\n      *  Otherwise, the other peer sends an\
    \ \"error\" (either during\n         channel initialization or in a \"ERR\" message),\
    \ and no state\n         change occurs.\n   o  In the \"ready\" state, the initiating\
    \ peer begins an XML-RPC\n      message pattern by sending a \"MSG\" message containing\
    \ a request.\n      The other peer completes the message pattern by sending back\
    \ a\n      \"RPY\" message containing a response.\n"
- title: 2.1 Profile Initialization
  contents:
  - "2.1 Profile Initialization\n   The boot message is used to identify the resource\
    \ accessed by the\n   channel bound to the BEEP profile for XML-RPC.\n   The DTD\
    \ syntax for the boot message and its response are:\n      <!ELEMENT bootmsg \
    \    EMPTY>\n      <!ATTLIST bootmsg\n                resource    CDATA      \
    \       #REQUIRED>\n      <!ELEMENT bootrpy     EMPTY>\n   The boot message contains\
    \ a single mandatory attribute: \"resource\",\n   which is analagous to HTTP's\
    \ \"abs_path\" Request-URI parameter (c.f.,\n   Section 5.1.2 of [3])\n   If the\
    \ peer acting in the server role recognizes the requested\n   resource, it replies\
    \ with a boot response.  Otherwise, if the boot\n   message is improperly formed,\
    \ or if the requested resource isn't\n   recognized, the peer acting in the server\
    \ role replies with an error\n   message (c.f., Section 7.1 of [2]).\n   Typically,\
    \ the boot message and its response are exchanged during\n   channel initialization\
    \ (c.f., Section 2.3.1.2 of [2]).\n   For example, here the boot message and its\
    \ response are exchanged\n   during channel initialization:\n      C: <start number='1'\
    \ serverName='stateserver.example.com'>\n      C:     <profile uri='http://iana.org/beep/transient/xmlrpc'>\n\
    \      C:         <![CDATA[<bootmsg resource='/NumberToName' />]]>\n      C: \
    \    </profile>\n      C: </start>\n      S: <profile uri='http://iana.org/beep/transient/xmlrpc'>\n\
    \      S:     <![CDATA[<bootrpy />]]>\n      S: </profile>\n   The channel bound\
    \ to the BEEP profile for XML-RPC is now in the\n   \"ready\" state.\n   Alternatively,\
    \ here is an example in which the boot exchange is\n   unsuccessful:\n      C:\
    \ <start number='1' serverName='stateserver.example.com'>\n      C:     <profile\
    \ uri='http://iana.org/beep/transient/xmlrpc'>\n      C:         <![CDATA[<bootmsg\
    \ resource='/NameToCapital' />]]>\n      C:     </profile>\n      C: </start>\n\
    \      S: <profile uri='http://iana.org/beep/transient/xmlrpc'>\n      S:    \
    \ <![CDATA[<error code='550'>resource not\n      S:                          \
    \      supported</error>]]>\n      S: </profile>\n   Although the channel was\
    \ created successfully, it remains in the\n   \"boot\" state.\n"
- title: 3. XML-RPC Message Packages
  contents:
  - "3. XML-RPC Message Packages\n   The BEEP profile for XML-RPC transmits requests\
    \ and responses encoded\n   as UTF-8 using the media type \"application/xml\"\
    \ [4], e.g.,\n      I: MSG 1 1 . 0 364\n      I: Content-Type: application/xml\n\
    \      I:\n      I: <?xml version=\"1.0\"?>\n      I:   <methodCall>\n      I:\
    \     <methodName>examples.getStateName</methodName>\n      I:     <params>\n\
    \      I:       <param>\n      I:         <value><i4>41</i4></value>\n      I:\
    \       </param>\n      I:     </params>\n      I:   </methodCall>\n      I: END\n\
    \   and its associated response\n      L: RPY 1 1 . 201 100\n      L: Content-Type:\
    \ application/xml\n      L:\n      L: <?xml version=\"1.0\"?>\n      L:   <methodResponse>\n\
    \      L:     <params>\n      L:       <param>\n      L:         <value><string>South\
    \ Dakota</string></value>\n      L:       </param>\n      L:     </params>\n \
    \     L:   </methodRespose>\n      L: END\n"
- title: 4. XML-RPC Message Exchange
  contents:
  - "4. XML-RPC Message Exchange\n   A request/response exchange involves sending\
    \ a request, which results\n   in a response being returned.\n   The BEEP profile\
    \ for XML-RPC achieves this using a one-to-one\n   exchange, in which the client\
    \ sends a \"MSG\" message containing an\n   request, and the server sends back\
    \ a \"RPY\" message containing an\n   response.\n   The BEEP profile for XML-RPC\
    \ does not use the \"ERR\" message for XML-\n   RPC faults when performing one-to-one\
    \ exchanges.  Whatever response\n   is generated by the server is always returned\
    \ in the \"RPY\" message.\n"
- title: 5. URL Schemes
  contents:
  - "5. URL Schemes\n   This memo defines two URL schemes, \"xmlrpc.beep\" and \"\
    xmlrpc.beeps\",\n   which identify the use of XML-RPC over BEEP over TCP.  Note\
    \ that, at\n   present, a \"generic\" URL scheme for XML-RPC is not defined.\n"
- title: 5.1 The xmlrpc.beep URL Scheme
  contents:
  - "5.1 The xmlrpc.beep URL Scheme\n   The \"xmlrpc.beep\" URL scheme uses the \"\
    generic URI\" syntax defined in\n   Section 3 of [5], specifically:\n   o  the\
    \ value \"xmlrpc.beep\" is used for the scheme component; and,\n   o  the server-based\
    \ naming authority defined in Section 3.2.2 of [5]\n      is used for the authority\
    \ component.\n   o  the path component maps to the \"resource\" component of the\
    \ boot\n      message sent during profile initialization (if absent, it defaults\n\
    \      to \"/\").\n   The values of both the scheme and authority components are\
    \ case-\n   insensitive.\n   For example, the URL\n      xmlrpc.beep://stateserver.example.com/NumberToName\n\
    \   might result in the example shown in Section 2.1.\n"
- title: 5.1.1 Resolving IP/TCP Address Information
  contents:
  - "5.1.1 Resolving IP/TCP Address Information\n   The \"xmlrpc.beep\" URL scheme\
    \ indicates the use of the BEEP profile\n   for XML-RPC running over TCP/IP.\n\
    \   If the authority component contains a domain name and a port number,\n   e.g.,\n\
    \      xmlrpc.beep://stateserver.example.com:1026\n   then the DNS is queried\
    \ for the A RRs corresponding to the domain\n   name, and the port number is used\
    \ directly.\n   If the authority component contains a domain name and no port\
    \ number,\n   e.g.,\n      xmlrpc.beep://stateserver.example.com\n   the SRV algorithm\
    \ [6] is used with a service parameter of \"xmlrpc-\n   beep\" and a protocol\
    \ parameter of \"tcp\" to determine the IP/TCP\n   addressing information.  If\
    \ no appropriate SRV RRs are found (e.g.,\n   for \"_xmlrpc-beep._tcp.stateserver.example.com\"\
    ), then the DNS is\n   queried for the A RRs corresponding to the domain name\
    \ and the port\n   number used is assigned by the IANA for the registration in\
    \ Section\n   6.4.\n   If the authority component contains an IP address, e.g.,\n\
    \      xmlrpc.beep://10.0.0.2:1026\n   then the DNS is not queried, and the IP\
    \ address is used directly.  If\n   a port number is present, it is used directly;\
    \ otherwise, the port\n   number used is assigned by the IANA for the registration\
    \ in Section\n   6.4.\n   While the use of literal IPv6 addresses in URLs is discouraged,\
    \ if a\n   literal IPv6 address is used in a \"xmlrpc.beep\" URL, it must conform\n\
    \   to the syntax specified in [7].\n"
- title: 5.2 The xmlrpc.beeps URL Scheme
  contents:
  - "5.2 The xmlrpc.beeps URL Scheme\n   The \"xmlrpc.beeps\" URL scheme is identical,\
    \ in all ways, to the\n   \"xmlrpc.beep\" URL scheme specified in Section 5.1,\
    \ with the exception\n   that prior to starting the BEEP profile for XML-RPC,\
    \ the BEEP session\n   must be tuned for privacy.  In particular, note that both\
    \ URL schemes\n   use the identical algorithms and parameters for address resolution\
    \ as\n   specified in Section 5.1.1 (e.g., the same service name for SRV\n   lookups,\
    \ the same port number for TCP, and so on).\n   There are two ways to perform\
    \ privacy tuning on a BEEP session,\n   either:\n   o  a transport security profile\
    \ may be successfully started; or,\n   o  a user authentication profile that supports\
    \ transport security may\n      be successfully started.\n   In either case the\
    \ client must present the authority component of the\n   URL in the \"serverName\"\
    \ attribute of the \"start\" element it uses to\n   tune the session for privacy.\n\
    \   When TLS is used for privacy the client must verify that the\n   authority\
    \ component of the URL matches the server's identity as\n   presented in the server's\
    \ certificate.  Section 2.4 of [9] describes\n   the matching process.\n   For\
    \ the URL:\n      xmlrpc.beeps://stateserver.example.com/NumberToName\n   the\
    \ whole process might look like:\n       S: <wait for incoming connection @ stateserver.example.com>\n\
    \       C: <open connection to stateserver.example.com>\n       C: RPY 0 0 . 0\
    \ 52\n       C: Content-Type: application/xml\n       C:\n       C: <greeting\
    \ />\n       C: END\n       S: RPY 0 0 . 0 110\n       S: Content-Type: application/xml\n\
    \       S:\n       S: <greeting>\n       S:   <profile uri='http://iana.org/beep/TLS'\
    \ />\n       S:   <profile uri='http://iana.org/beep/SASL/DIGEST-MD5' />\n   \
    \    S: </greeting>\n       S: END\n       C: MSG 0 1 . 52 158\n       C: Content-Type:\
    \ application/xml\n       C:\n       C: <start number='1' serverName='stateserver.example.com'>\n\
    \       C:   <profile uri='http://iana.org/beep/TLS'>\n       C:     <![CDATA[<ready\
    \ />]]>\n       C:   </profile>\n       C: </start>\n       C: END\n       S:\
    \ RPY 0 1 . 110 121\n       S: Content-Type: application/xml\n       S:\n    \
    \   S: <profile uri='http://iana.org/beep/TLS'>\n       S:   <![CDATA[<proceed\
    \ />]]>\n       S: </profile>\n       S: END\n       ... TLS negotiations ...\n\
    \       S: RPY 0 0 . 0 88\n       S: Content-Type: application/xml\n       S:\n\
    \       S: <greeting>\n       S:   <profile uri='http://iana.org/beep/transient/xmlrpc'>\n\
    \       S: </greeting>\n       S: END\n       C: RPY 0 0 . 0 52\n       C: Content-Type:\
    \ application/xml\n       C:\n       C: <greeting />\n       C: END\n       ...\
    \ use the server's certificate to verify that it is\n           in fact stateserver.example.com\
    \ ...\n       C: MSG 0 1 . 112 211\n       C: Content-Type: application/xml\n\
    \       C:\n       C: <start number='3' serverName='stateserver.example.com'>\n\
    \       C:     <profile uri='http://iana.org/beep/transient/xmlrpc'>\n       C:\
    \         <![CDATA[<bootmsg resource='/NumberToName' />]]>\n       C:     </profile>\n\
    \       C: </start>\n       C: END\n       S: RPY 0 2 . 341 402\n       S: Content-Type:\
    \ application/xml\n       S:\n       S: <profile uri='http://iana.org/beep/transient/xmlrpc'>\n\
    \       S:     <![CDATA[<bootrpy />]]>\n       S: </profile>\n       S: END\n"
- title: 6. Initial Registrations
  contents:
  - '6. Initial Registrations

    '
- title: '6.1 Registration: The XML-RPC Profile'
  contents:
  - "6.1 Registration: The XML-RPC Profile\n   Profile Identification: http://iana.org/beep/transient/xmlrpc\n\
    \   Messages exchanged during Channel Creation: bootmsg, bootrpy\n   Messages\
    \ starting one-to-one exchanges: bootmsg, methodCall\n   Messages in positive\
    \ replies: bootrpy, methodResponse\n   Messages in negative replies: error\n \
    \  Messages in one-to-many exchanges: none\n   Message Syntax: methodCall, methodResponse\
    \ as defined in [1]\n   Message Semantics: c.f., [1]\n   Contact Information:\
    \ Ward Harold <wharold@us.ibm.com>\n"
- title: '6.2 Registration: The xmlrpc.beep URL Scheme'
  contents:
  - "6.2 Registration: The xmlrpc.beep URL Scheme\n   URL scheme name: xmlrpc.beep\n\
    \   URL scheme syntax: c.f., Section 5.1\n   Character encoding considerations:\
    \ c.f., the \"generic URI\" syntax\n      defined in Section 3 of [5]\n   Intended\
    \ usage: identifies a XML-RPC resource made available using\n      the BEEP profile\
    \ for XML-RPC\n   Applications using this scheme: c.f., \"Intended usage\", above\n\
    \   Interoperability considerations: n/a\n   Security Considerations: c.f., Section\
    \ 7\n   Relevant Publications: c.f., [1], and [2]\n   Contact Information: Ward\
    \ Harold <wharold@us.ibm.com>\n   Author/Change controller: the IESG\n"
- title: '6.3 Registration: The xmlrpc.beeps URL Scheme'
  contents:
  - "6.3 Registration: The xmlrpc.beeps URL Scheme\n   URL scheme name: xmlrpc.beeps\n\
    \   URL scheme syntax: c.f., Section 5.2\n   Character encoding considerations:\
    \ c.f., the \"generic URI\" syntax\n      defined in Section 3 of [5]\n   Intended\
    \ usage: identifies a XML-RPC resource made available using\n      the BEEP profile\
    \ for XML-RPC after the BEEP session has been tuned\n      for privacy\n   Applications\
    \ using this scheme: c.f., \"Intended usage\", above\n   Interoperability considerations:\
    \ n/a\n   Security Considerations: c.f., Section 7\n   Relevant Publications:\
    \ c.f., [1], and [2]\n   Contact Information: Ward Harold <wharold@us.ibm.com>\n\
    \   Author/Change controller: the IESG\n"
- title: '6.4 Registration: The System (Well-Known) TCP port number for XML-RPC'
  contents:
  - "6.4 Registration: The System (Well-Known) TCP port number for XML-RPC\n    over\
    \ BEEP\n   Protocol Number: TCP\n   Message Formats, Types, Opcodes, and Sequences:\
    \ c.f., Section 2.1\n   Functions: c.f., [1]\n   Use of Broadcast/Multicast: none\n\
    \   Proposed Name: XML-RPC over BEEP\n   Short name: xmlrpc-beep\n   Contact Information:\
    \ Ward Harold <wharold@us.ibm.com>\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   Although service provisioning is a policy matter,\
    \ at a minimum, all\n   implementations must provide the following tuning profiles:\n\
    \   for  authentication: http://iana.org/beep/SASL/DIGEST-MD5\n   for confidentiality:\
    \ http://iana.org/beep/TLS (using the\n      TLS_RSA_WITH_3DES_EDE_CBC_SHA cipher)\n\
    \   for both: http://iana.org/beep/TLS (using the\n      TLS_RSA_WITH_3DES_EDE_CBC_SHA\
    \ cipher supporting client-side\n      certificates)\n   Further, implementations\
    \ may choose to offer MIME-based security\n   services providing message integrity\
    \ and confidentiality, such as\n   OpenPGP [8] or S/MIME [10].\n   Regardless,\
    \ consult [2]'s Section 9 for a discussion of BEEP-specific\n   security issues.\n"
- title: 8. References
  contents:
  - "8. References\n   [1]  Winer, D., \"XML-RPC Specification\", January 1999,\n\
    \        http://www.xmlrpc.com/spec\n   [2]  Rose, M., \"The Blocks Extensible\
    \ Exchange Protocol Core\", RFC\n        3080, March 2001.\n   [3]  Fielding,\
    \ R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L.,\n        Leach, P. and\
    \ T. Berners-Lee, \"Hypertext Transfer Protocol --\n        HTTP/1.1\", RFC 2616,\
    \ June 1999.\n   [4]  Murata, M., St. Laurent, S. and D. Kohn, \"XML Media Types\"\
    , RFC\n        3023, January 2001.\n   [5]  Berners-Lee, T., Fielding, R. and\
    \ L. Masinter, \"Uniform Resource\n        Identifiers (URI): Generic Syntax\"\
    , RFC 2396, August 1998.\n   [6]  Gulbrandsen, A., Vixie, P. and L. Esibov, \"\
    A DNS RR for\n        specifying the location of services (DNS SRV)\", RFC 2782,\n\
    \        February 2000.\n   [7]  Hinden, R., Carpenter, B. and L. Masinter, \"\
    Format for Literal\n        IPv6 Addresses in URL's\", RFC 2732, December 1999.\n\
    \   [8]  Elkins, M., Del Torto, D., Levien, R. and T. Roessler, \"MIME\n     \
    \   Security with OpenPGP\", RFC 3156, August 2001.\n   [9]  Newman, C., \"Using\
    \ TLS with IMAP, POP3 and ACAP\", RFC 2595, June\n        1999.\n   [10] Ramsdell,\
    \ B., \"S/MIME Version 3 Message Specification\", RFC\n        2633, June 1999.\n\
    \   [11] O'Tuathail, E. and M. Rose, \"Using the Simple Object Access\n      \
    \  Protocol (SOAP) in Blocks Extensible Exchange Protocol (BEEP)\",\n        RFC\
    \ 3288, June 2002.\n"
- title: Appendix A. Acknowledgements
  contents:
  - "Appendix A. Acknowledgements\n   This document is based, in part, on Using SOAP\
    \ in BEEP [11] and the\n   author gratefully acknowledges the contributions of\
    \ Marshall Rose\n"
- title: Appendix B. IANA Considerations
  contents:
  - "Appendix B. IANA Considerations\n   The IANA has registered the profile specified\
    \ in Section 6.1, and has\n   selected an IANA-specific URI, e.g.,\n      http://iana.org/beep/xmlrpc\n\
    \   The IANA has registered \"xmlrpc.beep\" and \"xmlrpc.beeps\" as URL\n   schemes,\
    \ as specified in Section 6.2 and Section 6.3, respectively.\n   (See: http://www.iana.org/assignments/uri-schemes)\n\
    \   The IANA has registered \"XML-RPC over BEEP\" as a TCP port number\n   (602),\
    \ as specified in Section 6.4.  (See:\n   http://www.iana.org/assignments/port-numbers)\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Ward K Harold\n   IBM\n   11400 Burnet Road\n   Austin,\
    \  Texas 78759\n   US\n   Phone: +1 512 838 3622\n   EMail: wharold@us.ibm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
