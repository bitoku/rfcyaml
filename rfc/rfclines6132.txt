Abstract This is a further extension to the Sieve mail filtering language Notification extension, defining presence information that may be checked through the notify method capability feature.
Sometimes, it's desirable to tailor Sieve [RFC5228] notifications to a user's current situation.
Presence information provides some information about the user that would be useful to have access to in these cases.
The Notification extension [RFC5435] defines a mechanism to test for presence (the notify method capability feature), and defines one test for presence (the "online" notification capability, described in Section 5 of RFC 5435).
This extension defines more presence tests by registering additional notification capability parameters in the IANA registry, allowing testing of a wider variety of presence information.
Terminology Used in This Document
The upper case key words "MUST", "
MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "
SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
This extension uses the notify method capability test, as defined in the Sieve [RFC5228] Notify extension [RFC5435], to test presence information.
When a Sieve event occurs (mail arrives) for a user, a Sieve script running on behalf of that user can present the user's presence URI (in the "notification uri" parameter) and test a specific item of notification presence as defined below (in the "notification capability" parameter) against one or more values (in the "key list" parameter).
This document defines an initial set of items of notification presence, which may be specified in the notification capability parameter.
It is expected that future extensions will add additional presence items derived from diverse sources, including calendar information, geographic location, and so on.
Note that, while the items below are documented as similar to items in Extensible Messaging and Presence Protocol (XMPP)
, it is not the intent that this extension be tied to XMPP, nor to any particular source of presence, and flexible implementations will be ready for future extensions.
Useful informational references for presence data and formats include Presence Information Data Format (PIDF) [RFC3863], RPID: Rich Presence Extensions
to PIDF [RFC4480], and GEOPRIV Presence Information Data Format Location Object (PIDF LO)
The script tests the values of notification presence items in the key list parameter.
The values that each item may have are specified in the list below.
Note that in addition to the presence values, any item may have the value "unknown" if it is not possible to determine the correct presence value of the item.
If a particular presence item is tested multiple times within the same script execution context, implementations MUST present the same value each time (for example, by caching the value on first use).
This provides consistency within a single execution.
Supported presence items are as follows:
An indication of whether the user is considered "busy" now (the value "yes") or not (the value "no"), or "unknown" if it cannot be determined.
The meaning of "busy" is left to the implementation, and may be a state that's synthesized from other information (including "show", below).
The availability status of the user, formally specified.
Note that this is similar to the presence element with the same name that's defined in Section 4.7.2.1 of RFC 6121
The value of this item is one of the following: away:
The user is temporarily away.
The user is online and actively interested in chatting.
Do Not Disturb; the user does not wish to be disturbed now.
The user is away for an extended period (xa   "eXtended Away").
unknown: The correct presence value could not be determined.
A human readable description of the user's availability status, in natural language.
There is no formal definition for the values this item may take.
It is free form, and may be in any language.
Direct comparisons against the value of this field are unlikely to be useful; rather, it is provided to enable extraction of the value into a variable [RFC5229] for use elsewhere (see example 3 in Section 3).
Note that this is similar to the presence element with the same name that's defined in Section 4.7.2.2 of RFC 6121 [RFC6121], and to the <note
> element defined in section 4.1.6 of PIDF [RFC3863].
Because this is a free form value that might be created directly by a user, no value, including "unknown", can have any special meaning.
If the Sieve processor is unable to determine the value of this item, it might be best to leave it as an empty string.
In any case, it is not meant for machine readable processing, beyond possible XML interpretation.
There is no capability string associated with this extension, but this requires support for "enotify" [RFC5435].
If the implementation does not support the item being tested (that is, the specified notification capability item is not known to the Sieve interpreter), RFC 5435 already specifies that the test fail without an error.
Although this feature was conceived to assist in notifications, and the test requires support of the Sieve Notify feature, it is only a condition test, and any Sieve action can appear inside it.
There are no Sieve actions that conflict with this extension.
This example will send a notification only if the recipient is not "busy".
If the test for "busy" is not supported, this example will not send a notification.
require ["enotify"]; if notify method capability "xmpp:tim@example.com" "busy" "no" { notify :message
This example will send a notification only if the recipient is not "busy".
If the test for "busy" is not supported, this example will send a notification.
require ["enotify"]; if not notify method capability "xmpp:tim@example.com"
This example uses the vacation extension [RFC5230] to generate an auto reply [RFC6133] if the sender is in the recipient's address book [RFC6134] and the recipient's presence shows "extended away".
The variables extension [RFC5229] is used to extract the value of the recipient's presence status message, which will be used in the response to the sender.
If the test for "show" is not supported, this example will not send an auto reply.
Security Considerations Security considerations for Sieve [RFC5228] and the Notify extension [RFC5435] apply equally here.
In addition, implementations MUST ensure that users cannot create scripts that access the presence information of others without the proper access controls.
In some situations, scripts may act on some of the recipient's presence information that the sender of the triggering message is not allowed to see.
This can be a benefit to the recipient in many cases, but it can also present an opportunity for a sender to use messages to probe the recipient's presence (if, for example, messages sometimes result in auto replies, and sometimes do not).
Script authors should take care in considering this aspect of presence  triggered actions.
It's possible for a large number of messages to arrive at or around the same time and be processed by Sieve scripts that all test presence.
If many of the users share the same presence server, such a burst could put an unexpectedly heavy load on the presence server.
Implementations might consider providing options for rate limiting, or for caching presence tests for periods of time, even across Sieve script instances.
When caching presence tests, the server must be careful not to violate access controls that the presence server might have.
Thus, cached results MUST NOT be used outside the context in which they were retrieved.
If, for example, a script running on behalf of Adam requests presence information for Barbara, that information MAY be cached for a future script running on behalf of Adam, but MUST NOT be used to satisfy the same query in a script running on behalf of Cindy   because the presence server will have to decide whether Cindy has access to that information.
This registers each presence item as a notification capability parameter.
Future extensions that add new presence items should register those items similarly, using the instructions in Section 9.3 of RFC 5435 [RFC5435].
Registration of a new notification capability parameter Capability name:
An indication of whether the user is considered "busy" now (the value "yes") or not (the value "no").
The meaning of "busy" is left to the implementation, and may be a state that's synthesized from other information.
Has one of the values "yes", "no", or "unknown".
The value MUST be in lower case.
Permanent and readily available reference(s):  RFC 6132 Contact information:  The Sieve discussion list,
Registration of a new notification capability parameter Capability name:
show Description:  The availability status of the user.
This is similar to the presence element with the same name that's defined in Section 4.7.2.1 of RFC 6121.
Has one of the values "away", "chat", "dnd", "offline", "xa", or "unknown".
The value MUST be in lower case.
Permanent and readily available reference(s):  RFC 6132 Contact information:  The Sieve discussion list,
Registration of a new notification capability parameter Capability name:
status Description:  A human readable description of the user's availability status.
This is similar to the presence element with the same name that's defined in Section 4.7.2.2 of RFC 6121.
There is no formal definition for the values this item may take.
It is free form and may be in any language, and is meant for human consumption.
Permanent and readily available reference(s):  RFC 6132 Contact information:  The Sieve discussion list, <sieve@ietf.org
