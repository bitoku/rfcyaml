- title: __initial_text__
  contents:
  - '                   Routing Aspects Of IPv6 Transition

    '
- title: Status of this memo
  contents:
  - "Status of this memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document gives an overview of the routing aspects of the IPv6\n\
    \   transition.  It is based on the protocols defined in the document\n   \"Transition\
    \ Mechanisms for IPv6 Hosts and Routers\" [1].  Readers\n   should be familiar\
    \ with the transition mechanisms before reading this\n   document.\n   The proposals\
    \ contained in this document are based on the work of the\n   Ngtrans working\
    \ group.\n"
- title: 1. TERMINOLOGY
  contents:
  - "1. TERMINOLOGY\n   This paper uses the following terminology:\n   node      -\
    \ a protocol module that implements IPv4 or IPv6.\n   router    - a node that\
    \ forwards packets not explicitly\n               addressed to itself.\n   host\
    \      - any node that is not a router.\n   border router - a router that forwards\
    \ packets across\n               routing domain boundaries.\n   link      - a\
    \ communication facility or medium over which\n               nodes can communicate\
    \ at the link layer, i.e., the layer\n               immediately below internet\
    \ layer.\n   interface - a node's attachment to a link.\n   address   - an network\
    \ layer identifier for an interface or\n               a group of interfaces.\n\
    \   neighbors - nodes attached to the same link.\n   routing domain - a collection\
    \ of routers which coordinate\n               routing knowledge using a single\
    \ routing protocol.\n   routing region (or just \"region\")  - a collection of\
    \ routers\n               interconnected by a single internet protocol (e.g. IPv6)\n\
    \               and coordinating their routing knowledge using routing\n     \
    \          protocols from a single internet protocol stack. A\n              \
    \ routing region may be a superset of a routing domain.\n   tunneling  - encapsulation\
    \ of protocol A within protocol B,\n               such that A treats B as though\
    \ it were a datalink layer.\n   reachability information - information describing\
    \ the set of\n               reachable destinations that can be used for packet\n\
    \               forwarding decisions.\n   routing information - same as reachability\
    \ information.\n   address prefix - the high-order bits in an address.\n   routing\
    \ prefix - address prefix that expresses destinations\n               which have\
    \ addresses with the matching address prefixes.\n               It is used by\
    \ routers to advertise what systems they are\n               capable of reaching.\n\
    \   route leaking - advertisement of network layer reachability\n            \
    \   information across routing region boundaries.\n"
- title: 2. ISSUES AND OUTLINE
  contents:
  - "2. ISSUES AND OUTLINE\n   This document gives an overview of the routing aspects\
    \ of IPv4 to\n   IPv6 transition. The approach outlined here is designed to be\n\
    \   compatible with the existing mechanisms for IPv6 transition [1].\n   During\
    \ an extended IPv4-to-IPv6 transition period, IPv6-based systems\n   must coexist\
    \ with the installed base of IPv4 systems. In such a dual\n   internetworking\
    \ protocol environment, both IPv4 and IPv6 routing\n   infrastructure will be\
    \ present. Initially, deployed IPv6-capable\n   domains might not be globally\
    \ interconnected via IPv6-capable\n   internet infrastructure and therefore may\
    \ need to communicate across\n   IPv4-only routing regions. In order to achieve\
    \ dynamic routing in\n   such a mixed environment, there need to be mechanisms\
    \ to globally\n   distribute IPv6 network layer reachability information between\n\
    \   dispersed IPv6 routing regions. The same techniques can be used in\n   later\
    \ stages of IPv4-to-IPv6 transition to route IPv4 packets between\n   isolated\
    \ IPv4-only routing region over IPv6 infrastructure.\n   The IPng transition provides\
    \ a dual-IP-layer transition, augmented by\n   use of encapsulation where necessary\
    \ and appropriate. Routing issues\n   related to this transition include:\n  \
    \ (1) Routing for IPv4 packets\n   (2) Routing for IPv6 packets\n           (2a)\
    \ IPv6 packets with IPv6-native addresses\n           (2b) IPv6 packets with IPv4-compatible\
    \ addresses\n   (3) Operation of manually configured static tunnels\n   (4) Operation\
    \ of automatic encapsulation\n           (4a) Locating encapsulators\n       \
    \    (4b) Ensuring that routing is consist with\n               encapsulation\n\
    \   Basic mechanisms required to accomplish these goals include: (i)\n   Dual-IP-layer\
    \ Route Computation; (ii) Manual configuration of point-\n   to-point tunnels;\
    \ and (iii) Route leaking to support automatic\n   encapsulation.\n   The basic\
    \ mechanism for routing of IPv4 and IPv6 involves dual-IP-\n   layer routing.\
    \ This implies that routes are separately calculated for\n   IPv4 addresses and\
    \ for IPv6 addressing. This is discussed in more\n   detail in section 3.1.\n\
    \   Tunnels (either IPv4 over IPv6, or IPv6 over IPv4) may be manually\n   configured.\
    \ For example, in the early stages of transition this may\n   be used to allow\
    \ two IPv6 domains to interact over an IPv4\n   infrastructure. Manually configured\
    \ static tunnels are treated as if\n   they were a normal data link. This is discussed\
    \ in more detail in\n   section 3.2.\n   Use of automatic encapsulation, where\
    \ the IPv4 tunnel endpoint\n   address is determined from the IPv4 address embedded\
    \ in the IPv4-\n   compatible destination address of IPv6 packet, requires consistency\n\
    \   of routes between IPv4 and IPv6 routing domains for destinations\n   using\
    \ IPv4-compatible addresses. For example, consider a packet which\n   starts off\
    \ as an IPv6 packet, but then is encapsulated in an IPv4\n   packet in the middle\
    \ of its path from source to destination. This\n   packet must locate an encapsulator\
    \ at the correct part of its path.\n   Also, this packet has to follow a consistent\
    \ route for the entire\n   path from source to destination. This is discussed\
    \ in more detail in\n   section 3.3.\n   The mechanisms for tunneling IPv6 over\
    \ IPv4 are defined in the\n   transition mechanisms specification [1].\n"
- title: 3. MORE DETAIL OF BASIC APPROACHES
  contents:
  - '3. MORE DETAIL OF BASIC APPROACHES

    '
- title: 3.1 Basic Dual-IP-layer Operation
  contents:
  - "3.1 Basic Dual-IP-layer Operation\n   In the basic dual-IP-layer transition scheme,\
    \ routers may\n   independently support IPv4 and IPv6 routing. Other parts of\
    \ the\n   transition, such as DNS support, and selection by the source host of\n\
    \   which packet format to transmit (IPv4 or IPv6) are discussed in [1].\n   Forwarding\
    \ of IPv4 packets is based on routes learned through running\n   IPv4-specific\
    \ routing protocols. Similarly, forwarding of IPv6\n   packets (including IPv6-packets\
    \ with IPv4-compatible addresses) is\n   based on routes learned through running\
    \ IPv6-specific routing\n   protocols. This implies that separate instances of\
    \ routing protocols\n   are used for IPv4 and for IPv6 (although note that this\
    \ could consist\n   of two instances of OSPF and/or two instances of RIP, since\
    \ both OSPF\n   and RIP are capable of supporting both IPv4 and IPv6 routing).\n\
    \   A minor enhancement would be to use an single instance of an\n   integrated\
    \ routing protocol to support routing for both IPv4 and\n   IPv6.  At the time\
    \ that this is written there is no protocol which\n   has yet been enhanced to\
    \ support this. This minor enhancement does\n   not change the basic dual-IP-layer\
    \ nature of the transition.\n   For initial testing of IPv6 with IPv4-compatible\
    \ addresses, it may be\n   useful to allow forwarding of IPv6 packets without\
    \ running any IPv6-\n   compatible routing protocol. In this case, a dual (IPv4\
    \ and IPv6)\n   router could run routing protocols for IPv4 only. It then forwards\n\
    \   IPv4 packets based on routes learned from IPv4 routing protocols.\n   Also,\
    \ it forwards IPv6 packets with an IPv4-compatible destination\n   address based\
    \ on the route for the associated IPv4 address. There are\n   a couple of drawbacks\
    \ with this approach: (i) It does not\n   specifically allow for routing of IPv6\
    \ packets via IPv6-capable\n   routers while avoiding and routing around IPv4-only\
    \ routers; (ii) It\n   does not produce routes for \"non-compatible\" IPv6 addresses.\
    \ With\n   this method the routing protocol does not tell the router whether\n\
    \   neighboring routers are IPv6-compatible. However, neighbor discovery\n   may\
    \ be used to determine this. Then if an IPv6 packet needs to be\n   forwarded\
    \ to an IPv4-only router it can be encapsulated to the\n   destination host.\n"
- title: 3.2 Manually Configured Static Tunnels
  contents:
  - "3.2 Manually Configured Static Tunnels\n   Tunneling techniques are already widely\
    \ deployed for bridging non-IP\n   network layer protocols (e.g. AppleTalk, CLNP,\
    \ IPX) over IPv4 routed\n   infrastructure. IPv4 tunneling is an encapsulation\
    \ of arbitrary\n   packets inside IPv4 datagrams that are forwarded over IPv4\n\
    \   infrastructure between tunnel endpoints. For a tunneled protocol, a\n   tunnel\
    \ appears as a single-hop link (i.e. routers that establish a\n   tunnel over\
    \ a network layer infrastructure can inter-operate over the\n   tunnel as if it\
    \ were a one-hop, point-to-point link). Once a tunnel\n   is established, routers\
    \ at the tunnel endpoints can establish routing\n   adjacencies and exchange routing\
    \ information.  Describing the\n   protocols for performing encapsulation is outside\
    \ the scope of this\n   paper (see [1]).  Static point-to-point tunnels may also\
    \ be\n   established between a host and a router, or between two hosts. Again,\n\
    \   each manually configured point-to-point tunnel is treated as if it\n   was\
    \ a simple point-to-point link.\n"
- title: 3.3  Automatic Tunnels
  contents:
  - "3.3  Automatic Tunnels\n   Automatic tunneling may be used when both the sending\
    \ and destination\n   nodes are connected by IPv4 routing.  In order for automatic\n\
    \   tunneling to work, both nodes must be assigned IPv4-compatible IPv6\n   addresses.\
    \  Automatic tunneling can be especially useful where either\n   source or destination\
    \ hosts (or both) do not have any adjacent IPv6-\n   capable router.  Note that\
    \ by \"adjacent router\", this includes\n   routers which are logically adjacent\
    \ by virtue of a manually\n   configured point-to-point tunnel (which is treated\
    \ as if it is a\n   simple point-to-point link).\n   With automatic tunneling,\
    \ the resulting IPv4 packet is forwarded by\n   IPv4 routers as a normal IPv4\
    \ packet, using IPv4 routes learned from\n   routing protocols. There are therefore\
    \ no special issues related to\n   IPv4 routing in this case. There are however\
    \ routing issues relating\n   to how IPv6 routing works in a manner which is compatible\
    \ with\n   automatic tunneling, and how tunnel endpoint addresses are selected\n\
    \   during the encapsulation process.  Automatic tunneling is useful from\n  \
    \ a source host to the destination host, from a source host to a\n   router, and\
    \ from a router to the destination host. Mechanisms for\n   automatic tunneling\
    \ from a router to another router are not currently\n   defined.\n"
- title: 3.3.1 Host to Host Automatic Tunneling
  contents:
  - "3.3.1 Host to Host Automatic Tunneling\n   If both source and destination hosts\
    \ make use of IPv4-compatible IPv6\n   addresses, then it is possible for automatic\
    \ tunneling to be used for\n   the entire path from the source host to the destination\
    \ host. In this\n   case, the IPv6 packet is encapsulated in an IPv4 packet by\
    \ the source\n   host, and is forwarded by routers as an IPv4 packet all the way\
    \ to\n   the destination host. This allows initial deployment of IPv6-capable\n\
    \   hosts to be done prior to the update of any routers.\n   A source host may\
    \ make use of Host to Host automatic tunneling\n   provided that the following\
    \ are both true:\n     - the source address is an IPv4-compatible IPv6 address.\n\
    \     - the destination address is an IPv4-compatible IPv6 address.\n     - the\
    \ source host does know of one or more neighboring IPv4-\n       capable routers,\
    \ or the source and destination are on the\n       same subnet.\n   If all of\
    \ these requirements are true, then the source host may\n   encapsulate the IPv6\
    \ packet in an IPv4 packet, using a source IPv4\n   address which is extracted\
    \ from the associated source IPv6 address,\n   and using a destination IPv4 address\
    \ which is extracted from the\n   associated destination IPv6 address.\n   Where\
    \ host to host automatic tunneling is used, the packet is\n   forwarded as a normal\
    \ IPv4 packet for its entire path, and is\n   decapsulated (i.e., the IPv4 header\
    \ is removed) only by the\n   destination host.\n"
- title: 3.3.2 Host to Router Configured Default Tunneling
  contents:
  - "3.3.2 Host to Router Configured Default Tunneling\n   In some cases \"configured\
    \ default\" tunneling may be used to\n   encapsulate the IPv6 packet for transmission\
    \ from the source host to\n   an IPv6-backbone. However, this requires that the\
    \ source host be\n   configured with an IPv4 address to use for tunneling to the\
    \ backbone.\n   Configured default tunneling is particularly useful if the source\n\
    \   host does not know of any local IPv6-capable router (implying that\n   the\
    \ packet cannot be forwarded as a normal IPv6 packet directly over\n   the link\
    \ layer), and when the destination host does not have an\n   IPv4-compatible IPv6\
    \ address (implying that host to host tunneling\n   cannot be used).\n   Host\
    \ to router configured default tunneling may optionally also be\n   used even\
    \ when the host does know of a local IPv6 router. In this\n   case it is a policy\
    \ decision whether the host prefers to send a\n   native IPv6 packet to the IPv6-capable\
    \ router or prefers to send an\n   encapsulated packet to the configured tunnel\
    \ endpoint.\n   Similarly host to router default configured tunneling may be used\n\
    \   even when the destination address is an IPv4-compatible IPv6 address.\n  \
    \ In this case for example a policy decision may be made to prefer\n   tunneling\
    \ for part of the path and native IPv6 for part of the path,\n   or alternatively\
    \ to use tunneling for the entire path from source\n   host to destination host.\n\
    \   A source host may make use of host to router configured default\n   tunneling\
    \ provided that ALL of the following are true:\n     - the source address is an\
    \ IPv4-compatible IPv6 address.\n     - the source host does know of one or more\
    \ neighboring IPv4-\n       capable routers\n     - the source host has been configured\
    \ with an IPv4 address of\n       an dual router which can serve as the tunnel\
    \ endpoint.\n   If all of these requirements are true, then the source host may\n\
    \   encapsulate the IPv6 packet in an IPv4 packet, using a source IPv4\n   address\
    \ which is extracted from the associated source IPv6 address,\n   and using a\
    \ destination IPv4 address which corresponds to the\n   configured address of\
    \ the dual router which is serving as the tunnel\n   endpoint.\n   When host to\
    \ router configured default tunneling is used, the packet\n   is forwarded as\
    \ a normal IPv4 packet from the source host to the dual\n   router serving as\
    \ tunnel endpoint, is decapsulated by the dual\n   router, and is then forwarded\
    \ as a normal IPv6 packet by the tunnel\n   endpoint.\n"
- title: 3.3.2.1 Routing to the Endpoint for the Configured Default Tunnel
  contents:
  - "3.3.2.1 Routing to the Endpoint for the Configured Default Tunnel\n   The dual\
    \ router which is serving as the end point of the host to\n   router configured\
    \ default tunnel must advertise reachability into\n   IPv4 routing sufficient\
    \ to cause the encapsulated packet to be\n   forwarded to it.\n   The simplest\
    \ approach is for a single IPv4 address to be assigned for\n   use as a tunnel\
    \ endpoint.  One or more dual routers,  which have\n   connectivity to the IPv6\
    \ backbone and which are capable of serving as\n   tunnel endpoint,  advertise\
    \ a host route to this address into IPv4\n   routing in the IPv4-only region.\
    \  Each dual host in the associated\n   IPv4-only region is configured with the\
    \ address of this tunnel\n   endpoint and selects a route to this address for\
    \ forwarding\n   encapsulated packet to a tunnel end point  (for example, the\
    \ nearest\n   tunnel end point, based on whatever metric(s) the local routing\n\
    \   protocol is using).\n   Finally, in some cases there may be some reason for\
    \ specific hosts to\n   prefer one of several tunnel endpoints, while allowing\
    \ all potential\n   tunnel endpoints to serve as backups in case the preferred\
    \ endpoint\n   is not reachable. In this case, each dual router with IPv6 backbone\n\
    \   connectivity which is serving as potential tunnel endpoint is given a\n  \
    \ unique IPv4 address taken from a single IPv4 address block (where the\n   IPv4\
    \ address block is assigned either to the organization\n   administering the IPv4-only\
    \ region, or to the organization\n   administering the local part of the IPv6\
    \ backbone). In the likely\n   case that there are much less than 250 such dual\
    \ routers serving as\n   tunnel endpoints, we suggest using multiple IPv4 addresses\
    \ selected\n   from a single 24-bit IPv4 address prefix for this purpose. Each\
    \ dual\n   router then advertises two routes into the IPv4 region: A host route\n\
    \   corresponding to the tunnel endpoint address specifically assigned to\n  \
    \ it, and also a standard (prefix) route to the associated IPv4 address\n   block.\
    \ Each dual host in the IPv4-only region is configured with a\n   tunnel endpoint\
    \ address which corresponds to the preferred tunnel\n   endpoint for it to use.\
    \ If the associated dual router is operating,\n   then the packet will be delivered\
    \ to it based upon the host route\n   that it is advertising into the IPv4-only\
    \ region. However, if the\n   associated dual router is down, but some other dual\
    \ router serving as\n   a potential tunnel endpoint is operating, then the packet\
    \ will be\n   delivered to the nearest operating tunnel endpoint.\n"
- title: 3.3.3 Router to Host Automatic Tunneling
  contents:
  - "3.3.3 Router to Host Automatic Tunneling\n   In some cases the source host may\
    \ have direct connectivity to one or\n   more IPv6-capable routers,  but the destination\
    \ host might not have\n   direct connectivity to any IPv6-capable router. In this\
    \ case,\n   provided that the destination host has an IPv4-compatible IPv6\n \
    \  address, normal IPv6 forwarding may be used for part of the packet's\n   path,\
    \ and router to host tunneling may be used to get the packet from\n   an encapsulating\
    \ dual router to the destination host.\n   In this case, the hard part is the\
    \ IPv6 routing required to deliver\n   the IPv6 packet from the source host to\
    \ the encapsulating router. For\n   this to happen, the encapsulating router has\
    \ to advertise\n   reachability for the appropriate IPv4-compatible IPv6 addresses\
    \ into\n   the IPv6 routing region.  With this approach, all IPv6 packets\n  \
    \ (including those with IPv4-compatible addresses) are routed using\n   routes\
    \ calculated  from native IPv6 routing. This implies that\n   encapsulating routers\
    \ need to advertise into IPv6 routing specific\n   route entries corresponding\
    \ to any IPv4-compatible IPv6 addresses\n   that belong to dual hosts which can\
    \ be reached in an neighboring\n   IPv4-only region. This requires manual configuration\
    \ of the\n   encapsulating routers to control which routes are to be injected\
    \ into\n   IPv6 routing protocols.  Nodes in the IPv6 routing region would use\n\
    \   such a route to forward IPv6 packets along the routed path toward the\n  \
    \ router that injected (leaked) the route, at which point packets are\n   encapsulated\
    \ and forwarded to the destination host using normal IPv4\n   routing.\n   Depending\
    \ upon the extent of the IPv4-only and dual routing regions,\n   the leaking of\
    \ routes may be relatively simple or may be more\n   complex.  For example, consider\
    \ a dual Internet backbone, connected\n   via one or two dual routers to an IPv4-only\
    \ stub routing domain. In\n   this case, it is likely that there is already one\
    \ summary address\n   prefix which is being advertised into the Internet backbone\
    \ in order\n   to summarize IPv4 reachability to the stub domain.  In such a case,\n\
    \   the border routers would be configured to announce the IPv4 address\n   prefix\
    \ into the IPv4 routing within the backbone, and also announce\n   the corresponding\
    \ IPv4-compatible IPv6 address prefix into IPv6\n   routing within the backbone.\n\
    \   A more difficult case involves the border between a major Internet\n   backbone\
    \ which is IPv4-only, and a major Internet backbone which\n   supports both IPv4\
    \ and IPv6. In this case, it requires that either\n   (i) the entire IPv4 routing\
    \ table be fed into IPv6 routing in the\n   dual routing domain (implying a doubling\
    \ of the size of the routing\n   tables in the dual domain); or (ii) Manual configuration\
    \ is required\n   to determine which of the addresses contained in the Internet\
    \ routing\n   table include one or more IPv6-capable systems, and only these\n\
    \   addresses be advertised into IPv6 routing in the dual domain.\n"
- title: 3.3.4 Example of How Automatic Tunnels May be Combined
  contents:
  - "3.3.4 Example of How Automatic Tunnels May be Combined\n   Clearly tunneling\
    \ is useful only if communication can be achieved in\n   both directions. However,\
    \ different forms of tunneling may be used in\n   each direction, depending upon\
    \ the local environment, the form of\n   address of the two hosts which are exchanging\
    \ IPv6 packets, and the\n   policies in use.\n   Table 1 summarizes the form of\
    \ tunneling that will result given each\n   possible combination of host capabilities,\
    \ and given one possible set\n   of policy decisions. This table is derived directly\
    \ from the\n   requirements for automatic tunneling discussed above.\n   The example\
    \ in table 1 uses a specific set of policy decisions: It is\n   assumed in table\
    \ 1 that the source host will transmit a native IPv6\n   where possible in preference\
    \ over encapsulation. It is also assumed\n   that where tunneling is needed, host\
    \ to host tunneling will be\n   preferred over host to router tunneling. Other\
    \ combinations are\n   therefore possible if other policies are used.\n   Due\
    \ to a specific policy choice, the default sending rules in [1] may\n   not be\
    \ followed.\n   Note that IPv6-capable hosts which do not have any local IPv6\
    \ router\n   must be given an IPv4-compatible v6 address in order to make use\
    \ of\n   their IPv6 capabilities. Thus, there are no entries for IPv6-capable\n\
    \   hosts which have an incompatible IPv6 address and which also do not\n   have\
    \ any connectivity to any local IPv6 router. In fact, such hosts\n   could communicate\
    \ with other IPv6 hosts on the same local network\n   without the use of a router.\
    \  However, since this document focuses on\n   routing and router implications\
    \ of IPv6 transition, direct\n   communication between two hosts on the same local\
    \ network without any\n   intervening router is outside the scope of this document.\n\
    \   Also, table 1 does not consider manually configured point-to-point\n   tunnels.\
    \  Such tunnels are treated as if they were normal point-to-\n   point links.\
    \ Thus any two IPv6-capable devices which have a manually\n   configured tunnel\
    \ between them may be considered to be directly\n   connected.\n  -----------------+------------------+--------------------------\n\
    \  Host A           | Host B           | Result\n  -----------------+------------------+--------------------------\n\
    \  v4-compat. addr. | v4-compat. addr. | host to host tunneling\n  no local v6\
    \ rtr. | no local v6 rtr. | in both directions\n  -----------------+------------------+--------------------------\n\
    \  v4-compat. addr. | v4-compat. addr. | A->B: host to host tunnel\n  no local\
    \ v6 rtr. | local v6 rtr.    | B->A: v6 forwarding plus\n                   |\
    \                  |       rtr->host tunnel\n  -----------------+------------------+--------------------------\n\
    \  v4-compat. addr. | incompat. addr.  | A->B: host to rtr tunnel\n  no local\
    \ v6 rtr. | local v6 rtr.    |       plus v6 forwarding\n                   |\
    \                  | B->A: v6 forwarding plus\n                   |          \
    \        |       rtr to host tunnel\n  -----------------+------------------+--------------------------\n\
    \  v4-compat. addr. | v4-compat. addr. | end to end native v6\n  local v6 rtr.\
    \    | local v6 rtr.    | in both directions\n  -----------------+------------------+--------------------------\n\
    \  v4-compat. addr. | incompat. addr.  | end to end native v6\n  local v6 rtr.\
    \    | local v6 rtr.    | in both directions\n  -----------------+------------------+--------------------------\n\
    \  incompat. addr.  | incompat. addr.  | end to end native v6\n  local v6 rtr.\
    \    | local v6 rtr.    | in both directions\n  -----------------+------------------+--------------------------\n\
    \          Table 1: Summary of Automatic Tunneling Combinations\n"
- title: 3.3.5 Example
  contents:
  - "3.3.5 Example\n   Figure 2 illustrates an example network with two regions A\
    \ and B.\n   Region A is dual, meaning that the routers within region A are\n\
    \   capable of forwarding both IPv4 and IPv6. Region B is IPv4-only,\n   implying\
    \ that the routers within region B are capable of routing only\n   IPv4. The illustrated\
    \ routers R1 through R4 are dual. The illustrated\n   routers r5 through r9 are\
    \ IPv4-only. Also assume that hosts H3\n   through H8 are dual. Thus H7 and H8\
    \ have been upgraded to be IPv6-\n   capable, even though they exist in a region\
    \ in which the routers are\n   not IPv6-capable. However, host h1 and h2 are IPv4-only.\n\
    \     .........................       .......................\n     .        \
    \               .       .                     .\n     .       h1             \
    \ .       .              |-h2   .\n     .       |               .       .    \
    \          |      .\n     .  H3---R1--------R2---------------r5----r9----+   \
    \   .\n     .       |         |     .       .        |     |-H7   .\n     .  \
    \     |         |     .       .        |            .\n     .       |        \
    \ |     .       .        |            .\n     .  H4---R3--------R4---------------r6----r8-----H8\
    \    .\n     .                       .       .                     .\n     .........................\
    \       .......................\n      Region A (Dual Routers)        Region B\
    \ (IPv4-only Rtrs)\n                Figure 2: Example of Automatic Tunneling\n\
    \   Consider a packet from h1 to H8. In this case, since h1 is IPv4-only,\n  \
    \ it will send an IPv4 packet. This packet will traverse regions A and\n   B as\
    \ a normal IPv4 packet for the entire path. Routing will take\n   place using\
    \ normal IPv4 routing methods, with no change from the\n   operation of the current\
    \ IPv4 Internet (modulo normal advances in the\n   operation of IPv4, of course).\
    \ Similarly, consider a return packet\n   from H8 to h1. Here again H8 will transmit\
    \ an IPv4 packet, which will\n   be forwarded as a normal IPv4 packet for the\
    \ entire path.\n   Consider a packet from H3 to H8. In this case, since H8 is\
    \ in an\n   IPv4-only routing domain, we can assume that H8 uses an IPv4-\n  \
    \ compatible IPv6 address. Since both source and destination are IPv6-\n   capable,\
    \ H3 may transmit an IPv6 packet destined to H8. The packet\n   will be forwarded\
    \ as far as R2 (or R4) as an IPv6 packet.\n   Router R2 (or R4) will then encapsulate\
    \ the full IPv6 packet in an\n   IPv4 header for delivery to H8. In this case\
    \ it is necessary for\n   routing of IPv6 within region A to be capable of delivering\
    \ this\n   packet correctly to R2 (or R4). As explained in section 3.3, routers\n\
    \   R2 and R4 may inject routes to IPv4-compatible IPv6 addresses into\n   the\
    \ IPv6 routing used within region A corresponding to the routes\n   which are\
    \ available via IPv4 routing within region B.\n   Consider a return packet from\
    \ H8 to H3. Again, since both source and\n   destination are IPv6-capable, a IPv6\
    \ packet may be transmitted by H8.\n   However, since H8 does not have any direct\
    \ connectivity to an IPv6-\n   capable router, H8 must make use of an automatic\
    \ tunnel.  Which form\n   of automatic tunnel will be used depends upon the type\
    \ of address\n   assigned to H3.\n   If H3 is assigned an IPv4-compatible address,\
    \ then the requirements\n   specified in section 3.3.1 will all be satisfied.\
    \ In this case host\n   H8 may encapsulate the full IPv6 packet in an IPv4 header\
    \ using a\n   source IPv4 address extracted from the IPv6 address of H8, and using\n\
    \   a destination IPv4 address extracted from the IPv6 address of H3.\n   If H3\
    \ has an IPv6-only address, then it is not possible for H8 to\n   extract an IPv4\
    \ address to use as the destination tunnel address from\n   the IPv6 address of\
    \ H3.  In this case H8 must use host to router\n   tunneling, as specified in\
    \ section 3.3.2. In this case one or both of\n   R2 and R4 must have been configured\
    \ with a tunnel endpoint IPv4\n   address (R2 and R4 may use either the same address\
    \ or different\n   addresses for this purpose).  R2 and/or R4 therefore advertise\n\
    \   reachability to the tunnel endpoint address to r5 and r6\n   (respectively),\
    \ which advertise this reachability information into\n   region B. Also, H8 must\
    \ have been configured to know which tunnel\n   endpoint address to use for host\
    \ to router tunneling. This will\n   result in the IPv6 packet, encapsulated in\
    \ an IPv4 header, to be\n   transmitted as far as the border router R2 or R4.\
    \ The border router\n   will then strip off the IPv4 header, and forward the remaining\
    \ IPv6\n   packet as a normal IPv6 packet using the normal IPv6 routing used in\n\
    \   region A.\n"
- title: 4. SECURITY CONSIDERATIONS
  contents:
  - "4. SECURITY CONSIDERATIONS\n   Use of tunneling may violate firewalls of underlying\
    \ routing\n   infrastructure.\n   No other security issues are discussed in this\
    \ paper.\n"
- title: 5. REFERENCES
  contents:
  - "5. REFERENCES\n   [1] Gilligan, B. and E. Nordmark. Transition Mechanisms for\
    \ IPv6\n       Hosts and Routers, Sun Microsystems, RFC 1933,  April 1996.\n"
- title: 6. AUTHORS' ADDRESSES
  contents:
  - "6. AUTHORS' ADDRESSES\n   Ross Callon\n   Cascade Communications Co.\n   5 Carlisle\
    \ Road\n   Westford, MA 01886\n   email: rcallon@casc.com\n   Dimitry Haskin\n\
    \   Bay Networks, Inc.\n   2 Federal Street\n   Billerica, MA 01821\n   email:\
    \ dhaskin@baynetworks.com\n"
