- title: __initial_text__
  contents:
  - ''
- title: 'Reguest for Comments: 1483                               Telecom Finland'
  contents:
  - "Reguest for Comments: 1483                               Telecom Finland\n  \
    \          Multiprotocol Encapsulation over ATM Adaptation Layer 5\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes two encapsulations methods for carrying network\n\
    \   interconnect traffic over ATM AAL5.  The first method allows\n   multiplexing\
    \ of multiple protocols over a single ATM virtual circuit\n   whereas the second\
    \ method assumes that each protocol is carried over\n   a separate ATM virtual\
    \ circuit.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Asynchronous Transfer Mode (ATM) based networks are of increasing\n\
    \   interest for both local and wide area applications.  This memo\n   describes\
    \ two different methods for carrying connectionless network\n   interconnect traffic,\
    \ routed and bridged Protocol Data Units (PDUs),\n   over an ATM network.  The\
    \ first method allows multiplexing of\n   multiple protocols over a single ATM\
    \ virtual circuit.  The protocol\n   of a carried PDU is identified by prefixing\
    \ the PDU by an IEEE 802.2\n   Logical Link Control (LLC) header.  This method\
    \ is in the following\n   called \"LLC Encapsulation\" and a subset of it has\
    \ been earlier\n   defined for SMDS [1].  The second method does higher-layer\
    \ protocol\n   multiplexing implicitly by ATM Virtual Circuits (VCs).  It is in\
    \ the\n   following called \"VC Based Multiplexing\".\n   ATM is a cell based\
    \ transfer mode that requires variable length user\n   information to be segmented\
    \ and reassembled to/from short, fixed\n   length cells.  This memo doesn't specify\
    \ a new Segmentation And\n   Reassembly (SAR) method for bridged and routed PDUs.\
    \  Instead, the\n   PDUs are carried in the Payload field of Common Part Convergence\n\
    \   Sublayer (CPCS) PDU of ATM Adaptation Layer type 5 (AAL5) [2].\n   Note that\
    \ this memo only describes how routed and bridged PDUs are\n   carried directly\
    \ over the CPCS of AAL5, i.e., when the Service\n   Specific Convergence Sublayer\
    \ (SSCS) of AAL5 is empty.  If Frame\n   Relay Service Specific Convergence Sublayer\
    \ (FR-SSCS), as defined in\n   I.36x.1 [3], is used over the CPCS of AAL5, then\
    \ routed and bridged\n   PDUs are carried using the NLPID multiplexing method\
    \ described in RFC\n   1294 [4].  Appendix A (which is for information only) shows\
    \ the\n   format of the FR-SSCS-PDU as well as how IP and CLNP PDUs are\n   encapsulated\
    \ over FR-SSCS according to RFC 1294.\n"
- title: 2.  Selection of the Multiplexing Method
  contents:
  - "2.  Selection of the Multiplexing Method\n   It is envisioned that VC Based Multiplexing\
    \ will be dominant in\n   environments where dynamic creation of large numbers\
    \ of ATM VCs is\n   fast and economical.  These conditions are likely to first\
    \ prevail in\n   private ATM networks.  LLC Encapsulation, on the other hand,\
    \ may be\n   desirable when it is not practical for one reason or another to have\n\
    \   a separate VC for each carried protocol.  This is the case, for\n   example,\
    \ if the ATM network only supports (semi) Permanent Virtual\n   Circuits (PVCs)\
    \ or if charging depends heavily on the number of\n   simultaneous VCs.\n   When\
    \ two ATM stations wish to exchange connectionless network\n   interconnect traffic,\
    \ selection of the multiplexing method is done\n   either by manual configuration\
    \ (in case of PVCs) or by B-ISDN\n   signalling procedures (in case of Switched\
    \ VCs).  The details of B-\n   ISDN signalling are still under study in CCITT\
    \ [5].  It can, however,\n   be assumed that B-ISDN signalling messages include\
    \ a \"Low layer\n   compatibility\" information element, which will allow negotiation\
    \ of\n   AAL5 and the carried (encapsulation) protocol.\n"
- title: 3.  AAL5 Frame Format
  contents:
  - "3.  AAL5 Frame Format\n   No matter which multiplexing method is selected, routed\
    \ and bridged\n   PDUs shall be encapsulated within the Payload field of AAL5\
    \ CPCS-PDU.\n   The format of the AAL5 CPCS-PDU is given below:\n            \
    \    AAL5 CPCS-PDU Format\n               +-------------------------------+\n\
    \               |             .                 |\n               |          \
    \   .                 |\n               |        CPCS-PDU Payload       |\n  \
    \             |     up to 2^16 - 1 octets)    |\n               |            \
    \ .                 |\n               |             .                 |\n    \
    \           +-------------------------------+\n               |      PAD ( 0 -\
    \ 47 octets)     |\n               +-------------------------------+ -------\n\
    \               |       CPCS-UU (1 octet )      |\n               +-------------------------------+\n\
    \               |         CPI (1 octet )        |\n               +-------------------------------+CPCS-PDU\
    \ Trailer\n               |        Length (2 octets)      |\n               +-------------------------------|\n\
    \               |         CRC (4 octets)        |\n               +-------------------------------+\
    \ -------\n   The Payload field contains user information up to 2^16 - 1 octets.\n\
    \   The PAD field pads the CPCS-PDU to fit exactly into the ATM cells\n   such\
    \ that the last 48 octet cell payload created by the SAR sublayer\n   will have\
    \ the CPCS-PDU Trailer right justified in the cell.\n   The CPCS-UU (User-to-User\
    \ indication) field is used to transparently\n   transfer CPCS user to user information.\
    \  The field has no function\n   under the multiprotocol ATM encapsulation described\
    \ in this memo and\n   can be set to any value.\n   The CPI (Common Part Indicator)\
    \ field alings the CPCS-PDU trailer to\n   64 bits.  Possible additional functions\
    \ are for further study in\n   CCITT.  When only the 64 bit alignment function\
    \ is used, this field\n   shall be codes as 0x00.\n   The Length field indicates\
    \ the length, in octets, of the Payload\n   field.  The maximum value for the\
    \ Length field is 65535 octets.  A\n   Length field coded as 0x00 is used for\
    \ the abort function.\n   The CRC field protects the entire CPCS-PDU except the\
    \ CRC field\n   itself.\n"
- title: 4.  LLC Encapsulation
  contents:
  - "4.  LLC Encapsulation\n   LLC Encapsulation is needed when several protocols\
    \ are carried over\n   the same VC.  In order to allow the receiver to properly\
    \ process the\n   incoming AAL5 CPCS-PDU, the Payload Field must contain information\n\
    \   necessary to identify the protocol of the routed or bridged PDU.  In\n   LLC\
    \ Encapsulation this information is encoded in an LLC header placed\n   in front\
    \ of the carried PDU.\n   Although this memo only deals with protocols that operate\
    \ over LLC\n   Type 1 (unacknowledged connectionless mode) service, the same\n\
    \   encapsulation principle applies also to protocols operating over LLC\n   Type\
    \ 2 (connection-mode) service.  In the latter case the format\n   and/or contents\
    \ of the LLC header would differ from what is shown\n   below.\n"
- title: 4.1.  LLC Encapsulation for Routed Protocols
  contents:
  - "4.1.  LLC Encapsulation for Routed Protocols\n   In LLC Encapsulation the protocol\
    \ of the routed PDU is identified by\n   prefixing the PDU by an IEEE 802.2 LLC\
    \ header, which is possibly\n   followed by an IEEE 802.1a SubNetwork Attachment\
    \ Point (SNAP) header.\n   In LLC Type 1 operation, the LLC header consists of\
    \ three one octet\n   fields:\n               +------+------+------+\n       \
    \        | DSAP | SSAP | Ctrl |\n               +------+------+------+\n   In\
    \ LLC Encapsulation for routed protocols, the Control field has\n   always value\
    \ 0x03 specifying Unnumbered Information Command PDU.\n   The LLC header value\
    \ 0xFE-FE-03 identifies that a routed ISO PDU (see\n   [6] and Appendix B) follows.\
    \  The Control field value 0x03 specifies\n   Unnumbered Information Command PDU.\
    \  For routed ISO PDUs the format\n   of the AAL5 CPCS-PDU Payload field shall\
    \ thus be as follows:\n                 Payload Format for Routed ISO PDUs\n \
    \              +-------------------------------+\n               |       LLC \
    \ 0xFE-FE-03         |\n               +-------------------------------+\n   \
    \            |             .                 |\n               |           ISO\
    \ PDU             |\n               |     (up to 2^16 - 4 octets)   |\n      \
    \         |             .                 |\n               +-------------------------------+\n\
    \   The routed ISO protocol is identified by a one octet NLPID field that\n  \
    \ is part of Protocol Data.  NLPID values are administered by ISO and\n   CCITT.\
    \  They are defined in ISO/IEC TR 9577 [6] and some of the\n   currently defined\
    \ ones are listed in Appendix C.\n   An NLPID value of 0x00 is defined in ISO/IEC\
    \ TR 9577 as the Null\n   Network Layer or Inactive Set.  Since it has no significance\
    \ within\n   the context of this encapsulation scheme, a NLPID value of 0x00 is\n\
    \   invalid under the ATM encapsulation.\n   It would also be possible to use\
    \ the above encapsulation for IP,\n   since, although not an ISO protocol, IP\
    \ has an NLPID value 0xCC\n   defined for it.  This format must not be used. \
    \ Instead, IP is\n   encapsulated like all other routed non-ISO protocols by identifying\n\
    \   it in the SNAP header that immediately follows the LLC header.\n   The presence\
    \ of a SNAP header is indicated by the LLC header value\n   0xAA-AA-03. A SNAP\
    \ header is of the form\n               +------+------+------+------+------+\n\
    \               |         OUI        |     PID     |\n               +------+------+------+------+------+\n\
    \   The three-octet Organizationally Unique Identifier (OUI) identifies\n   an\
    \ organization which administers the meaning of the following two\n   octet Protocol\
    \ Identifier (PID).  Together they identify a distinct\n   routed or bridged protocol.\
    \  The OUI value 0x00-00-00 specifies that\n   the following PID is an EtherType.\n\
    \   The format of the AAL5 CPCS-PDU Payload field for routed non-ISO PDUs\n  \
    \ shall thus be as follows:\n                Payload Format for Routed non-ISO\
    \ PDUs\n               +-------------------------------+\n               |   \
    \    LLC  0xAA-AA-03         |\n               +-------------------------------+\n\
    \               |        OUI 0x00-00-00         |\n               +-------------------------------+\n\
    \               |     EtherType (2 octets)      |\n               +-------------------------------+\n\
    \               |             .                 |\n               |         Non-ISO\
    \ PDU           |\n               |     (up to 2^16 - 9 octets)   |\n        \
    \       |             .                 |\n               +-------------------------------+\n\
    \   In the particular case of an Internet IP PDU, the Ethertype value is\n   0x08-00:\n\
    \                Payload Format for Routed IP PDUs\n               +-------------------------------+\n\
    \               |       LLC  0xAA-AA-03         |\n               +-------------------------------+\n\
    \               |        OUI 0x00-00-00         |\n               +-------------------------------+\n\
    \               |       EtherType 0x08-00       |\n               +-------------------------------+\n\
    \               |             .                 |\n               |          \
    \ IP PDU              |\n               |     (up to 2^16 - 9 octets)   |\n  \
    \             |             .                 |\n               +-------------------------------+\n\
    \   This is compatible with RFC 1042 [7].  Any changes in the header\n   format\
    \ specified in RFC 1042 should be followed by this memo.\n"
- title: 4.2.  LLC Encapsulation for Bridged Protocols
  contents:
  - "4.2.  LLC Encapsulation for Bridged Protocols\n   In LLC Encapsulation bridged\
    \ PDUs are encapsulated by identifying the\n   type of the bridged media in the\
    \ SNAP header.  As with routed non-ISO\n   protocols, the presence of the SNAP\
    \ header is indicated by the LLC\n   header value 0xAA-AA-03.  With bridged protocols\
    \ the OUI value in the\n   SNAP header is the 802.1 organization code 0x00-80-C2\
    \ and the actual\n   type of the bridged media is specified by the two octet PID.\n\
    \   Additionally, the PID indicates whether the original Frame Check\n   Sequence\
    \ (FCS) is preserved within the bridged PDU.  The media type\n   (PID) values\
    \ that can be used in ATM encapsulation are listed in\n   Appendix B.\n   The\
    \ AAL5 CPCS-PDU Payload field carrying a bridged PDU shall,\n   therefore, have\
    \ one of the following formats.  Padding is added after\n   the PID field if necessary\
    \ in order to align the user information\n   field of the bridged PDU at a four\
    \ octet boundary.\n               Payload Format for Bridged Ethernet/802.3 PDUs\n\
    \               +-------------------------------+\n               |       LLC\
    \  0xAA-AA-03         |\n               +-------------------------------+\n  \
    \             |        OUI 0x00-80-C2         |\n               +-------------------------------+\n\
    \               |    PID 0x00-01 or 0x00-07     |\n               +-------------------------------+\n\
    \               |         PAD 0x00-00           |\n               +-------------------------------+\n\
    \               |    MAC destination address    |\n               +-------------------------------+\n\
    \               |                               |\n               |   (remainder\
    \ of MAC frame)    |\n               |                               |\n     \
    \          +-------------------------------+\n               |  LAN FCS (if PID\
    \ is 0x00-01)  |\n               +-------------------------------+\n         \
    \       Payload Format for Bridged 802.4 PDUs\n               +-------------------------------+\n\
    \               |       LLC  0xAA-AA-03         |\n               +-------------------------------+\n\
    \               |        OUI 0x00-80-C2         |\n               +-------------------------------+\n\
    \               |    PID 0x00-02 or 0x00-08     |\n               +-------------------------------+\n\
    \               |        PAD 0x00-00-00         |\n               +-------------------------------+\n\
    \               |    Frame Control (1 octet)    |\n               +-------------------------------+\n\
    \               |    MAC destination address    |\n               +-------------------------------+\n\
    \               |                               |\n               |   (remainder\
    \ of MAC frame)    |\n               |                               |\n     \
    \          +-------------------------------+\n               |  LAN FCS (if PID\
    \ is 0x00-02)  |\n               +-------------------------------+\n         \
    \       Payload Format for Bridged 802.5 PDUs\n               +-------------------------------+\n\
    \               |       LLC  0xAA-AA-03         |\n               +-------------------------------+\n\
    \               |        OUI 0x00-80-C2         |\n               +-------------------------------+\n\
    \               |    PID 0x00-03 or 0x00-09     |\n               +-------------------------------+\n\
    \               |        PAD 0x00-00-XX         |\n               +-------------------------------+\n\
    \               |    Frame Control (1 octet)    |\n               +-------------------------------+\n\
    \               |    MAC destination address    |\n               +-------------------------------+\n\
    \               |                               |\n               |   (remainder\
    \ of MAC frame)    |\n               |                               |\n     \
    \          +-------------------------------+\n               |  LAN FCS (if PID\
    \ is 0x00-03)  |\n               +-------------------------------+\n   Note that\
    \ the 802.5 Access Control (AC) field has no significance\n   outside the local\
    \ 802.5 subnetwork.  It can thus be regarded as the\n   last octet of the three\
    \ octet PAD field, which can be set to any\n   value (XX).\n                Payload\
    \ Format for Bridged FDDI PDUs\n               +-------------------------------+\n\
    \               |       LLC  0xAA-AA-03         |\n               +-------------------------------+\n\
    \               |        OUI 0x00-80-C2         |\n               +-------------------------------+\n\
    \               |    PID 0x00-04 or 0x00-0A     |\n               +-------------------------------+\n\
    \               |        PAD 0x00-00-00         |\n               +-------------------------------+\n\
    \               |    Frame Control (1 octet)    |\n               +-------------------------------+\n\
    \               |    MAC destination address    |\n               +-------------------------------+\n\
    \               |                               |\n               |   (remainder\
    \ of MAC frame)    |\n               |                               |\n     \
    \          +-------------------------------+\n               |  LAN FCS (if PID\
    \ is 0x00-04)  |\n               +-------------------------------+\n         \
    \       Payload Format for Bridged 802.6 PDUs\n               +-------------------------------+\n\
    \               |       LLC  0xAA-AA-03         |\n               +-------------------------------+\n\
    \               |        OUI 0x00-80-C2         |\n               +-------------------------------+\n\
    \               |         PID 0x00-0B           |\n               +---------------+---------------+\
    \ ------\n               |   Reserved    |     BEtag     |  Common\n         \
    \      +---------------+---------------+  PDU\n               |            BAsize\
    \             |  Header\n               +-------------------------------+ -------\n\
    \               |    MAC destination address    |\n               +-------------------------------+\n\
    \               |                               |\n               |   (remainder\
    \ of MAC frame)    |\n               |                               |\n     \
    \          +-------------------------------+\n               |               \
    \                |\n               |      Common PDU Trailer       |\n       \
    \        |                               |\n               +-------------------------------+\n\
    \   Note that in bridged 802.6 PDUs, there is only one choice for the PID\n  \
    \ value, since the presence of a CRC-32 is indicated by the CIB bit in\n   the\
    \ header of the MAC frame.\n   The Common Protocol Data Unit (PDU) Header and\
    \ Trailer are conveyed\n   to allow pipelining at the egress bridge to an 802.6\
    \ subnetwork.\n   Specifically, the Common PDU Header contains the BAsize field,\
    \ which\n   contains the length of the PDU.  If this field is not available to\n\
    \   the egress 802.6 bridge, then that bridge cannot begin to transmit\n   the\
    \ segmented PDU until it has received the entire PDU, calculated\n   the length,\
    \ and inserted the length into the BAsize field.  If the\n   field is available,\
    \ the egress 802.6 bridge can extract the length\n   from the BAsize field of\
    \ the Common PDU Header, insert it into the\n   corresponding field of the first\
    \ segment, and immediately transmit\n   the segment onto the 802.6 subnetwork.\
    \  Thus, the bridge can begin\n   transmitting the 802.6 PDU before it has received\
    \ the complete PDU.\n   Note that the Common PDU Header and Trailer of the encapsulated\
    \ frame\n   should not be simply copied to the outgoing 802.6 subnetwork because\n\
    \   the encapsulated BEtag value may conflict with the previous BEtag\n   value\
    \ transmitted by that bridge.\n   An ingress 802.6 bridge can abort an AAL5 CPCS-PDU\
    \ by setting its\n   Length field to zero.  If the egress bridge has already begun\n\
    \   transmitting segments of the PDU to an 802.6 subnetwork and then\n   notices\
    \ that the AAL5 CPCS-PDU has been aborted, it may immediately\n   generate an\
    \ EOM cell that causes the 802.6 PDU to be rejected at the\n   receiving bridge.\
    \  Such an EOM cell could, for example, contain an\n   invalid value in the Length\
    \ field of the Common PDU Trailer.\n               +-------------------------------+\n\
    \               |       LLC  0xAA-AA-03         |\n               +-------------------------------+\n\
    \               |        OUI 0x00-80-C2         |\n               +-------------------------------+\n\
    \               |         PID 0x00-0E           |\n               +-------------------------------+\n\
    \               |                               |\n               |      BPDU\
    \ as defined by       |\n               |     802.1(d) or 802.1(g)      |\n  \
    \             |                               |\n               +-------------------------------+\n"
- title: 5.  VC Based Multiplexing
  contents:
  - "5.  VC Based Multiplexing\n   In VC Based Multiplexing, the carried network interconnect\
    \ protocol\n   is identified implicitly by the VC connecting the two ATM stations,\n\
    \   i.e.  each protocol must be carried over a separate VC.  There is\n   therefore\
    \ no need to include explicit multiplexing information in the\n   Payload of the\
    \ AAL5 CPCS-PDU.  This results in minimal bandwidth and\n   processing overhead.\n\
    \   As indicated above, the carried protocol can be either manually\n   configured\
    \ or negotiated dynamically during call establishment using\n   signalling procedures.\
    \  The signalling details will be defined later\n   in other RFCs when the relevant\
    \ standards have become available.\n"
- title: 5.1.  VC Based Multiplexing of Routed Protocols
  contents:
  - "5.1.  VC Based Multiplexing of Routed Protocols\n   PDUs of routed protocols\
    \ shall be carried as such in the Payload of\n   the AAL5 CPCS-PDU.  The format\
    \ of the AAL5 CPCS-PDU Payload field\n   thus becomes:\n               Payload\
    \ Format for Routed PDUs\n               +-------------------------------+\n \
    \              |             .                 |\n               |         Carried\
    \ PDU           |\n               |    (up to 2^16 - 1 octets)    |\n        \
    \       |             .                 |\n               |             .    \
    \             |\n               +-------------------------------+\n"
- title: 5.2.  VC Based Multiplexing of Bridged Protocols
  contents:
  - "5.2.  VC Based Multiplexing of Bridged Protocols\n   PDUs of bridged protocols\
    \ shall be carried in the Payload of the AAL5\n   CPCS-PDU exactly as described\
    \ in section 4.2 except that only the\n   fields after the PID field are included.\
    \  The AAL5 CPCS-PDU Payload\n   field carrying a bridged PDU shall, therefore,\
    \ have one of the\n   following formats.\n                Payload Format for Bridged\
    \ Ethernet/802.3 PDUs\n               +-------------------------------+\n    \
    \           |         PAD 0x00-00           |\n               +-------------------------------+\n\
    \               |    MAC destination address    |\n               +-------------------------------+\n\
    \               |                               |\n               |   (remainder\
    \ of MAC frame)    |\n               |                               |\n     \
    \          +-------------------------------+\n               | LAN FCS (VC dependent\
    \ option) |\n               +-------------------------------+\n              \
    \  Payload Format for Bridged 802.4/802.5/FDDI PDUs\n               +-------------------------------+\n\
    \               | PAD 0x00-00-00 or 0x00-00-XX  |\n               +-------------------------------+\n\
    \               |    Frame Control (1 octet)    |\n               +-------------------------------+\n\
    \               |    MAC destination address    |\n               +-------------------------------+\n\
    \               |                               |\n               |   (remainder\
    \ of MAC frame)    |\n               |                               |\n     \
    \          +-------------------------------+\n               | LAN FCS (VC dependent\
    \ option) |\n               +-------------------------------+\n   Note that the\
    \ 802.5 Access Control (AC) field has no significance\n   outside the local 802.5\
    \ subnetwork.  It can thus be regarded as the\n   last octet of the three octet\
    \ PAD field, which in case of 802.5 can\n   be set to any value (XX).\n      \
    \          Payload Format for Bridged 802.6 PDUs\n               +---------------+---------------+\
    \ -------\n               |   Reserved    |     BEtag     |  Common\n        \
    \       +---------------+---------------+  PDU\n               |            BAsize\
    \             |  Header\n               +-------------------------------+ -------\n\
    \               |    MAC destination address    |\n               +-------------------------------+\n\
    \               |                               |\n               |   (remainder\
    \ of MAC frame)    |\n               |                               |\n     \
    \          +-------------------------------+\n               |               \
    \                |\n               |     Common PDU Trailer        |\n       \
    \        |                               |\n               +-------------------------------+\n\
    \                Payload Format for BPDUs\n               +-------------------------------+\n\
    \               |                               |\n               |      BPDU\
    \ as defined by       |\n               |     802.1(d) or 802.1(g)      |\n  \
    \             |                               |\n               +-------------------------------+\n\
    \   In case of Ethernet, 802.3, 802.4, 802.5, and FDDI PDUs the presense\n   or\
    \ absence of the trailing LAN FCS shall be identified implicitly by\n   the VC,\
    \ since the PID field is not included.  PDUs with the LAN FCS\n   and PDUs without\
    \ the LAN FCS are thus considered to belong to\n   different protocols even if\
    \ the bridged media type would be the same.\n"
- title: 6.  Bridging in an ATM Network
  contents:
  - "6.  Bridging in an ATM Network\n   An ATM interface acting as a bridge must be\
    \ able to flood, forward,\n   and filter bridged PDUs.\n   Flooding is performed\
    \ by sending the PDU to all possible appropriate\n   destinations.  In the ATM\
    \ environment this means sending the PDU\n   through each relevant VC.  This may\
    \ be accomplished by explicitly\n   copying it to each VC or by using a multicast\
    \ VC.\n   To forward a PDU, a bridge must be able to associate a destination\n\
    \   MAC address with a VC.  It is unreasonable and perhaps impossible to\n   require\
    \ bridges to statically configure an association of every\n   possible destination\
    \ MAC address with a VC.  Therefore, ATM bridges\n   must provide enough information\
    \ to allow an ATM interface to\n   dynamically learn about foreign destinations\
    \ beyond the set of ATM\n   stations.\n   To accomplish dynamic learning, a bridged\
    \ PDU shall conform to the\n   encapsulation described within section 4.  In this\
    \ way, the receiving\n   ATM interface will know to look into the bridged PDU\
    \ and learn the\n   association between foreign destination and an ATM station.\n"
- title: 7. For Further Study
  contents:
  - "7. For Further Study\n   Due to incomplete standardization of ATM multicasting,\
    \ addressing,\n   and signalling mechanisms, details related to the negotiation\
    \ of the\n   multiplexing method as well as address resolution had to be left\
    \ for\n   further RFCs.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document has evolved from RFCs [1] and [4] from which\
    \ much of\n   the material has been adopted.  Thanks to their authors T.  Bradley,\n\
    \   C.  Brown, A. Malis, D. Piscitello, and C. Lawrence.  In addition,\n   the\
    \ expertise of the ATM working group of the IETF has been\n   invaluable in completing\
    \ the document.  Special thanks Brian\n   Carpenter of CERN, Rao Cherukuri of\
    \ IBM, Dan Grossman of Motorola,\n   Joel Halpern of Network Systems, Bob Hinden\
    \ of Sun Mircosystems, and\n   Gary Kessler of MAN Technology Corporation for\
    \ their detailed\n   contributions.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not addressed in this memo.\n"
- title: References
  contents:
  - "References\n   [1]  Piscitello, D. and Lawrence, C., \"The Transmission of IP\n\
    \        Datagrams over the SMDS Service\".  RFC 1209, Bell Communications\n \
    \       Research, March 1991.\n   [2]  CCITT, \"Draft Recommendation I.363\".\
    \  CCITT Study Group XVIII,\n        Geneva, 19 - 29 January, 1993.\n   [3]  CCITT,\
    \ \"Draft Recommendation I.36x.1\".  CCITT Study Group XVIII,\n        Geneva,\
    \ 19-29 January, 1993.\n   [4]  Bradley, T., Brown, C., and Malis, A., \"Multiprotocol\n\
    \        Interconnect over Frame Relay\".  RFC 1294, Wellfleet\n        Communications,\
    \ Inc. and BBN Communications, January 1992.\n   [5]  CCITT, \"Draft text for\
    \ Q.93B\".  CCITT Study Group XI, 23\n        September - 2 October, 1992.\n \
    \  [6]  Information technology - Telecommunications and Information\n        Exchange\
    \ Between Systems, \"Protocol Identification in the\n        Network Layer\".\
    \  ISO/IEC TR 9577, October 1990.\n   [7]  Postel, J. and Reynolds, J., \"A Standard\
    \ for the Transmission of\n        IP Datagrams over IEEE 802 Networks\".  RFC\
    \ 1042, ISI, February,\n        1988.\n"
- title: Appendix A.  Multiprotocol Encapsulation over FR-SSCS
  contents:
  - "Appendix A.  Multiprotocol Encapsulation over FR-SSCS\n   I.36x.1 defines a Frame\
    \ Relaying Specific Convergence Sublayer (FR-\n   SSCS) to be used on the top\
    \ of the Common Part Convergence Sublayer\n   CPCS) of the AAL type 5 for Frame\
    \ Relay/ATM interworking.  The\n   service offered by FR-SSCS corresponds to the\
    \ Core service for Frame\n   Relaying as described in I.233.\n   An FR-SSCS-PDU\
    \ consists of Q.922 Address field followed by Q.922\n   Information field.  The\
    \ Q.922 flags and the FCS are omitted, since\n   the corresponding functions are\
    \ provided by the AAL.  The figure\n   below shows an FR-SSCS-PDU embedded in\
    \ the Payload of an AAL5 CPCS-\n   PDU.\n                FR-SSCS-PDU in Payload\
    \ of AAL5 CPCS-PDU\n               +-------------------------------+ -------\n\
    \               |      Q.922 Address Field      | FR-SSCS-PDU Header\n       \
    \        |         (2-4 octets)          |\n               +-------------------------------+\
    \ -------\n               |             .                 |\n               |\
    \             .                 |\n               |    Q.922 Information field\
    \    | FR-SSCS-PDU Payload\n               |             .                 |\n\
    \               |             .                 |\n               +-------------------------------+\
    \ -------\n               |      AAL5 CPCS-PDU Trailer    |\n               +-------------------------------+\n\
    \   Routed and bridged PDUs are encapsulated inside the FR-SSCS-PDU as\n   defined\
    \ in RFC 1294.  The Q.922 Information field starts with a Q.922\n   Control field\
    \ followed by an optional Pad octet that is used to align\n   the remainder of\
    \ the frame to a convenient boundary for the sender.\n   The protocol of the carried\
    \ PDU is then identified by prefixing the\n   PDU by an ISO/CCITT Network Layer\
    \ Protocol ID (NLPID).\n   In the particular case of an IP PDU, the NLPID is 0xCC\
    \ and the FR-\n   SSCS-PDU has the following format:\n                FR-SSCS-PDU\
    \ Format for Routed IP PDUs\n               +-------------------------------+\n\
    \               |       Q.922 Addr Field        |\n               |       (2 or\
    \ 4 octets)         |\n               +-------------------------------+\n    \
    \           |     0x03 (Q.922 Control)      |\n               +-------------------------------+\n\
    \               |          NLPID  0xCC          |\n               +-------------------------------+\n\
    \               |             .                 |\n               |          \
    \ IP PDU              |\n               |    (up to 2^16 - 5 octets)    |\n  \
    \             |             .                 |\n               +-------------------------------+\n\
    \   Note that according to RFC 1294 the Q.922 Address field shall be\n   either\
    \ 2 or 4 octets, i.e., a 3 octet Address field is not supported.\n   In the particular\
    \ case of a CLNP PDU, the NLPID is 0x81 and the FR-\n   SSCS-PDU has the following\
    \ format:\n                FR-SSCS-PDU Format for Routed CLNP PDUs\n         \
    \      +-------------------------------+\n               |       Q.922 Addr Field\
    \        |\n               |       (2 or 4 octets)         |\n               +-------------------------------+\n\
    \               |     0x03 (Q.922 Control)      |\n               +-------------------------------+\n\
    \               |         NLPID  0x81           |\n               +-------------------------------+\n\
    \               |              .                |\n               |       Rest\
    \ of CLNP PDU        |\n               |    (up to 2^16 - 5 octets)    |\n   \
    \            |              .                |\n               +-------------------------------+\n\
    \   Note that in case of ISO protocols the NLPID field forms the first\n   octet\
    \ of the PDU itself and shall thus not be repeated.\n   The above encapsulation\
    \ applies only to those routed protocols that\n   have a unique NLPID assigned.\
    \  For other routed protocols (and for\n   bridged protocols), it is necessary\
    \ to provide another mechanism for\n   easy protocol identification.  This can\
    \ be achieved by using an NLPID\n   value 0x80 to indicate that an IEEE 802.1a\
    \ SubNetwork Attachment\n   Point (SNAP) header follows.\n   See RFC 1294 for\
    \ more details related to multiprotocol encapsulation\n   over FRCS.\n"
- title: Appendix B.  List of Locally Assigned values of OUI 00-80-C2
  contents:
  - "Appendix B.  List of Locally Assigned values of OUI 00-80-C2\n             with\
    \ preserved FCS   w/o preserved FCS    Media\n            ------------------ \
    \  -----------------    --------------\n             0x00-01              0x00-07\
    \              802.3/Ethernet\n             0x00-02              0x00-08     \
    \         802.4\n             0x00-03              0x00-09              802.5\n\
    \             0x00-04              0x00-0A              FDDI\n             0x00-05\
    \              0x00-0B              802.6\n                                  0x00-0D\
    \              Fragments\n                                  0x00-0E          \
    \    BPDUs\n"
- title: Appendix C.  Partial List of NLPIDs
  contents:
  - "Appendix C.  Partial List of NLPIDs\n         0x00    Null Network Layer or Inactive\
    \ Set (not used with ATM)\n         0x80    SNAP\n         0x81    ISO CLNP\n\
    \         0x82    ISO ESIS\n         0x83    ISO ISIS\n         0xCC    Internet\
    \ IP\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Juha Heinanen\n   Telecom Finland\n   PO Box 228\n   SF-33101\
    \ Tampere\n   Finland\n   Phone: +358 49 500 958\n   Email: Juha.Heinanen@datanet.tele.fi\n"
