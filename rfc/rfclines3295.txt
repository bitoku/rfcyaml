Abstract This memo defines a portion of the Management Information Base (MIB) for the use with the network management protocols in the Internet community.
In particular, it describes managed objects for the General Switch Management Protocol (GSMP).
This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes managed objects for the General Switch Management Protocol (GSMP).
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
Mechanisms for describing and naming objects and events for the purpose of management.
The first version of this Structure of Management Information (SMI) is called SMIv1 and is described in STD 16, RFC 1155 [RFC1155], STD 16, RFC 1212 [RFC1212], and RFC 1215 [RFC1215].
The second version, called SMIv2, is described in STD 58, RFC 2578 [RFC2578], RFC 2579 [RFC2579], and RFC 2580[RFC2580].
Message protocols for transferring management information.
The first version of the SNMP message protocol is called SNMPv1 and is described in STD 15, RFC 1157 [RFC1157].
A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and is described in RFC 1901 [RFC1901] and RFC 1906 [RFC1906].
The third version of the message protocol is called SNMPv3 and is described in RFC 1906 [RFC1906], RFC 2572 [RFC2572], and RFC 2574
Protocol operations for accessing management information.
The first set of protocol operations and associated PDU formats are described in STD 15, RFC 1157
A second set of operations and associated PDU formats are described in 1905 [RFC1905].
A set of fundamental applications described in RFC 2573 [RFC2573], and the view based access control mechanism is described in RFC 2575 [RFC2575].
A more detailed introduction to the current SNMP Management Framework can be found in RFC 2570 [RFC2570].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the mechanisms defined in the SMI.
This memo specifies a MIB module that is compliant to the SMIv2.
A MIB conforming to the SMIv1 can be produced through the appropriate translations.
The resulting translated MIB must be semantically equivalent, except where objects or events are omitted because no translation is possible (use of Counter64).
Some machine readable information in SMIv2 will be converted into textual descriptions in SMIv1 during the translation process.
However, this loss of machine readable information is not considered to change the semantics of the MIB.
This memo defines a portion of the Management Information Base (MIB) for the use with network management protocols in the Internet community.
In particular, it describes managed objects for the General Switch Management Protocol (GSMP), as defined in [RFC3292].
3.1 Overview The General Switch Management Protocol (GSMP) is a general purpose protocol to control a label switch.
GSMP allows a controller to establish and release connections across the switch, to manage switch ports and to request configuration information or statistics.
It also allows the switch to inform the controller of asynchronous events such as a link going down.
The GSMP protocol is asymmetric, the controller being the master and the switch being the slave.
Multiple switches may be controlled by a single controller using multiple instantiations of the protocol over separate control connections.
Also a switch may be controlled by more than one controller by using the technique of partitioning.
Each instance of a (switch controller, switch partition) adjacency is a session between one switch controller entity and one switch entity.
The MIB provides objects to configure/setup these entities to form the GSMP sessions.
It also provide objects to monitor these GSMP sessions.
3.2 Scope The GSMP mib is a protocol mib.
It contains objects to configure, monitor, and maintain the GSMP protocol entity.
It does not provide any information learned via the protocol, such as "all ports config" information.
The relationships between virtual entities, such as Virtual Switch Entities, and "physical" entities, such as Switch Entities, falls outside of the management of GSMP.
This also applies for the management of switch partitions.
So this is excluded from the GSMP mib.
It is possible to configure which, and how many Switch Controllers are controlling one Switch since every potential session with the switch has to be represented with an Switch entity.
It is, however, not possible to define that one Switch Controller shouldn't allow other Switch controllers to control the same switch or partition on the switch.
It is assumed that there are mechanisms that synchronise controllers and the configuration of them.
This is outside the scope of this mib.
3.3 MIB guideline Two tables are used to configure potential GSMP sessions depending if you are acting as a GSMP switch controller or a GSMP switch.
Each row in these tables initiates a GSMP session.
The entity ID is a 48 bit name that is unique within the operational context of the device.
A 48 bit IEEE 802 MAC address, if available, MAY be used for the entity ID.
If the Ethernet encapsulation is used, the entity ID MUST be the IEEE 802 MAC address of the interface on which the GSMP session is to be setup.
First, the encapsulation of the potential GSMP session shall be defined.
If ATM is used, a row in the gsmpAtmEncapTable has to be created with the index set to the entity ID.
The specified resources should be allocated to GSMP.
If TCP/IP is used, a row in the gsmpTcpIpEncapTable has to be created with the index set to the entity ID.
The specified port shall be allocated to GSMP.
No special action is needed if ethernet encapsulation is used.
Then the entity information shall be defined.
To create a Switch Entity, an entry in the gsmpSwitchTable is created with the index set to the entity ID.
To create a Switch Controller Entity, an entry in the gsmpControllerTable is created with the index set to the entity ID.
When the row status of the GsmpControllerEntry or GsmpSwitchEntry is set to active (e.g., in the case with ATM or TCP/IP there are active rows with a corresponding entity ID), the adjacency protocol of GSMP is started.
Another table, the gsmpSessionTable, shows the actual sessions that are established or are in the process of being established.
Each row represents a specific session between an Entity and a peer.
This table carries information about the peer, the session, and parameters that were negotiated by the adjacency procedures.
The gsmpSessionTable also contains statistical information regarding the session.
This creation order SHOULD be used by all GSMP managers.
This is to avoid clash situations in multiple SNMP manager scenarios where different managers may create competing entries in the different tables.
Entities may very well be configured by other means than SNMP, e.g., the cli command.
Such configured entities SHOULD be represented as entries in the tables of this mib and SHOULD be possible to query, and MAY be possible to alter with SNMP.
3.4 MIB groups 3.4.1 GSMP Switch Controller group
The controller group is used to configure a potential GSMP session on a Switch Controller.
A row in the gsmpControllerTable is created for each such session.
If ATM or TCP/IP encapsulation is used, a corresponding row has to be created in these tables before the session adjacency protocol is initiated.
If ATM or TCP/IP is used, encapsulation data is defined in the corresponding encapsulation tables.
If ethernet is used, the MAC address of the interface defined for the session is set by the Controller ID object.
The adjacency parameters are defined; such as  Max supported GSMP version.
Time between the periodic adjacency messages.
Controller local port number and instance number.
Whether partitions are being used and the partition ID for the specific partitions this controller is concerned with if partitions are used.
The resynchronisation strategy for the session is specified.
The notification mapping is set to specify for with events the corresponding SNMP notifications are sent.
The switch group is used to configure a potential GSMP session on a Switch.
A row in the gsmpSwitchTable is created for each such session.
If ATM or TCP/IP encapsulation is used, a corresponding row has to be created in these tables before the session adjacency protocol is initiated.
If ATM or TCP/IP is used, encapsulation data is defined in the corresponding encapsulation tables.
If ethernet is used the MAC address of the interface defined for the session is set by the Switch ID object.
The adjacency parameters are defined; such as  Max supported GSMP version  Time between the periodic adjacency messages  Switch Name, local port number, and instance number.
Whether partitions are being used and the partition ID for this specific partition if partitions are used.
The switch type could be set.
The suggested maximum window size for unacknowledged request messages.
Also, a notification mapping is set to specify for with events the corresponding SNMP notifications are sent.
The ATM Encapsulation Table and the TCP/IP Encapsulation Table provides a way to configure information that are encapsulation specific.
The encapsulation data is further specified in [RFC3293].
If ATM encapsulation is used, the interface and the virtual channel are specified.
If TCP/IP is used, the IP address and the port number are specified.
No special config data needed if Ethernet encapsulation is used.
This mib MAY be extended with new, standard or proprietary, GSMP encapsulation types.
If a new encapsulation type needs to be added, it SHOULD be done in the form of a new table with the entity ID as an index.
A row in that encapsulation table SHOULD be created before any row in a GSMP entity table is created that is using this new GSMP encapsulation.
3.4.4 GSMP General group The GSMP session table provides a way to monitor and maintain GSMP sessions.
The session is defined by a Switch Controller Entity and Switch Entity pair.
The GSMP Notification Group defines notifications for GSMP entities.
These notifications provide a mechanism for a GSMP device to inform the management station of status changes.
Also a notification is defined for each type of GSMP events.
The group of notifications consists of the following notifications: gsmpSessionDown This notification is generated when a session is terminating and also reports the final accounting statistics of the session.
This notification is generated when a new session is established.
gsmpSendFailureInd This notification is generated when a message with a failure indication was sent.
This means that this notification identifies a change to the gsmpSessionStatFailureInds object in a row of the gsmpSessionTable.
gsmpReceivedFailureInd This notification is generated when a message with a failure indication received.
This means that this notification identifies a change to the gsmpSessionStatReceivedFailures object in a row of the gsmpSessionTable.
This notification is generated when a Port Up Event is either received or sent.
This notification is generated when a Port Down Event is either received or sent.
This notification is generated when an Invalid Label Event is either received or sent.
This notification is generated when New Port Event either is received or sent.
This notification is generated when a Dead Port Event is either received or sent.
This notification is generated when an Adjacency Update Event is either received or sent.
To disable or enable the sending of each notification, the bits in the bitmap are set to 0 or 1 in the Notification mapping objects in the Controller Entitiy or Switch Entity tables.
The GSMP notification map capability should not be seen as a duplication of the filter mechanism in the snmp notification originator application [RFC2573], but as a compliment, to configure the relation between GSMP events and the SNMP notifications already in the GSMP agent.
SNMP notifications and GSMP events operate sometimes on a different timescale, and it may in some applications be devastating for a SNMP application to receive events for each GSMP events.
E.g. the invalid label event in a ATM switch scenario may cause mass SNMP notification flooding if mapped to a SNMP notification.
The datatypes GsmpNameType, GsmpLabelType, GsmpVersion, GsmpPartitionType, and GsmpPartitionIdType are used as textual conventions in this document.
These textual conventions are used for the convenience of humans reading the MIB.
Objects defined using these conventions are always encoded by means of the rules that define their primitive type.
However, the textual conventions have special semantics associated with them.
Hence, no changes to the SMI or the SNMP are necessary to accommodate these textual conventions which are adopted merely for the convenience of readers.
, mib 2 FROM SNMPv2
RowStatus, TruthValue, TimeStamp, StorageType, TEXTUAL CONVENTION FROM SNMPv2
MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2 CONF
Working Group, IETF" CONTACT INFO "
ftp://ftp.ietf.org/ietf mail archive/gsmp/ WG Chair:
"The Name is a 48 bit quantity.
A 48 bit IEEE 802 MAC address, if available, may be used."
The format of the Partition ID is not defined in GSMP.
If desired, the Partition ID can be divided into multiple sub identifiers within a single partition.
For example: the Partition ID could be subdivided into a 6 bit partition number and a 2 bit sub identifier which would allow a switch to support 64 partitions with 4 available IDs per partition."
"The version numbers defined for the GSMP protocol.
The version numbers used are defined in the specifications of the respective protocol, 1 GSMPv1.1 [RFC1987] 2 GSMPv2.0 [RFC2397] 3 GSMPv3
Other numbers may be defined for other versions of the GSMP protocol."
The structure is defined in [RFC 3292].
The label TLV is encoded as a 2 octet type field, followed by a 2 octet Length field, followed by a variable length Value field.
Additionally, a label field can be composed of many stacked labels that together constitute the label."
"This table represents the Switch Controller Entities.
An entry in this table needs to be configured (created) before a GSMP session might be started."
If partitions are used, one entity corresponds to one specific switch partition.
Depending of the encapsulation used, a corresponding row in the gsmpAtmEncapTable or the gsmpTcpIpEncapTable may have been created.
"The Switch Controller Entity Id is unique within the operational context of the device."
The max version number of the GSMP protocol being used in this session.
The version is negotiated by the adjacency protocol.
"The timer specifies the nominal time between periodic adjacency protocol messages.
It is a constant for the duration of a GSMP session.
The timer is specified in units of 100ms.
"The local port number for the Switch Controller Entity.
"The instance number for the Switch Controller Entity.
The Instance number is a 24 bit number that should be guaranteed to be unique within the recent past and to change when the link or node comes back up after going down.
Zero is not a valid instance number. "
"A controller can request the specific partition identifier to the session by setting the Partition Type to fixedPartitionRequest(2).
A controller can let the switch decide whether it wants to assign a fixed partition ID or not, by setting the Partition Type to noPartition(1)."
If partitions are not used or if the controller lets the switch assigns Partition ID, i.e Partition Type   noPartition(1), then this object is undefined."
"This object specifies whether the controller should resynchronise or reset in case of loss of synchronisation.
If this object is set to true then the Controller should resync with PFLAG 2 (recovered adjacency).
, portDownEvent(5), invalidLabelEvent(6), newPortEvent(7), deadPortEvent(8)
"This bitmap defines whether a corresponding SNMP notification should be sent if a GSMP event is received by the Switch Controller.
If the bit is set to 1 a notification should be sent.
The handling and filtering of the SNMP notifications are then further specified in the SNMP notification originator application.
The state for the existing or potential session that this entity is concerned with.
The NULL state is returned if the proper encapsulation data is not yet configured, if the row is not in active status or if the session is in NULL state as defined in the GSMP specification."
"The storage type for this controller entity.
Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row."
} gsmpControllerRowStatus OBJECT TYPE SYNTAX
"An object that allows entries in this table to be created and deleted using the RowStatus convention.
While the row is in active state it's not possible to modify the value of any object for that row except the gsmpControllerNotificationMap and the gsmpControllerRowStatus objects."
"This table represents the Switch Entities.
An entry in this table needs to be configured (created) before a GSMP session might be started."
An entry in the table showing the data for a specific Switch Entity.
If partitions are used, one entity corresponds to one specific switch partition.
Depending of the encapsulation used, a corresponding row in the gsmpAtmEncapTable or the gsmpTcpIpEncapTable may have been created.
Id is unique within the operational context of the device. "
The max version number of the GSMP protocol being supported by this Switch.
The version is negotiated by the adjacency protocol.
"The timer specifies the nominal time between periodic adjacency protocol messages.
It is a constant for the duration of a GSMP session.
The timer is specified in units of 100ms.
The name of the Switch.
The first three octets must be an Organisationally Unique Identifier (OUI) that identifies the manufacturer of the Switch.
This is by default set to the same value as the gsmpSwitchId object if not separately specified. "
{gsmpSwitchEntry 4 } gsmpSwitchPort OBJECT TYPE SYNTAX
"The local port number for this Switch Entity.
"The instance number for the Switch Entity.
The Instance number is a 24 bit number that should be guaranteed to be unique within the recent past and to change when the link or node comes back up after going down.
Zero is not a valid instance number."
"A switch can assign the specific partition identifier to the session by setting the Partition Type to fixedPartitionAssigned(3).
A switch can specify that no partitions are handled in the session by setting the Partition Type to noPartition(1)."
If partitions are not used, i.e. Partition Type   noPartition(1), then this object is undefined."
"This bitmap defines whether a corresponding SNMP notification should be sent if an GSMP event is sent by the Switch Entity.
If the bit is set to 1 a notification should be sent.
The handling and filtering of the SNMP notifications are then further specified in the SNMP notification originator application.
"A 16 bit field allocated by the manufacturer of the switch.
The Switch Type identifies the product.
When the Switch Type is combined with the OUI from the Switch Name the product is uniquely identified. "
"The maximum number of unacknowledged request messages that may be transmitted by the controller without the possibility of loss.
This field is used to prevent request messages from being lost in the switch because of overflow in the receive buffer.
The field is a hint to the controller."
The state for the existing or potential session that this entity is concerned with.
The NULL state is returned if the proper encapsulation data is not yet configured, if the row is not in active status or if the session is in NULL state as defined in the GSMP specification."
"The storage type for this switch entity.
Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row."
"An object that allows entries in this table to be created and deleted using the RowStatus convention.
While the row is in active state it's not possible to modify the value of any object for that row except the gsmpSwitchNotificationMap and the gsmpSwitchRowStatus objects."
"This table contains the atm encapsulation data for the Controller or Switch that uses atm aal5 as encapsulation. "
Id or Switch Id that is unique within the operational context of the device. "
"The interface index for the virtual channel over which the GSMP session is established, i.e., the GSMP control channel for LLC/SNAP encapsulated GSMP messages on an ATM data link layer."
The VPI value for the virtual channel over which the GSMP session is established, i.e., the GSMP control channel for LLC/SNAP encapsulated GSMP messages on an ATM data link layer.
The VCI value for the virtual channel over which the GSMP session is established, i.e., the GSMP control channel for LLC/SNAP encapsulated GSMP messages on an ATM data link layer.
"The storage type for this entry.
It should have the same value as the StorageType in the referring Switch Controller entity or Switch entity."
"An object that allows entries in this table to be created and deleted using the RowStatus convention.
While the row is in active state it's not possible to modify the value of any object for that row except the gsmpAtmEncapRowStatus object."
"This table contains the encapsulation data for the Controller or Switch that uses TCP/IP as encapsulation."
{ gsmpObjects 4 } gsmpTcpIpEncapEntry OBJECT TYPE SYNTAX
An entry in the table showing the encapsulation data for a specific Switch Controller entity or Switch entity."
The Controller or Switch Id is unique within the operational context of the device. "
"The type of address in gsmpTcpIpEncapAddress."
The TCP port number used for the TCP session establishment to the GSMP peer."
"The storage type for this entry.
It should have the same value as the StorageType in the referring Switch Controller entity or Switch entity."
An object that allows entries in this table to be created and deleted using the RowStatus convention.
While the row is in active state it's not possible to modify the value of any object for that row except the gsmpTcpIpEncapRowStatus object."
"This table represents the sessions between Controller and Switch pairs. "
An entry in the table showing the session data for a specific Controller and Switch pair.
Also, statistics for this specific session is shown.
"This side ID uniquely identifies the entity that this session relates to within the operational context of the device. "
The Far side ID uniquely identifies the entity that this session is established against. "
"The version number of the GSMP protocol being used in this session.
The version is the result of the negotiation by the adjacency protocol."
"The timer specifies the time remaining until the adjacency timer expires.
The object could take negative values since if no valid GSMP messages are received in any period of time in excess of three times the value of the Timer negotiated by the adjacency protocol loss of synchronisation may be declared.
The timer is specified in units of 100ms."
{ gsmpSessionEntry 5 } gsmpSessionAdjacencyCount OBJECT TYPE SYNTAX
"This object specifies the current number of adjacencies that are established with controllers and the switch partition that is used for this session.
The value includes this session."
"The name of the far side as advertised in the adjacency message."
The local port number of the link across which the message is being sent."
REFERENCE "General Switch Management Protocol V3:
"The instance number used for the link during this session.
The Instance number is a 24 bit number that should be guaranteed to be unique within the recent past and to change when the link or node comes back up after going down.
Zero is not a valid instance number."
"This is the last failure code that was received over this session.
If no failure code have been received, the value is zero."
"The value of sysUpTime on the most recent occasion at which one or more of this session's counters suffered a discontinuity.
If no such discontinuities have occurred since then, this object contains the same timestamp as gsmpSessionStartUptime ."
The value of sysUpTime when the session came to established state."
"The number of messages that have been sent in this session.
All GSMP messages pertaining to this session after the session came to established state SHALL be counted, also including adjacency protocol messages and failure response messages.
When the counter suffers any discontinuity, then the gsmpSessionDiscontinuityTime object indicates when it happened."
"The number of messages that have been sent with a failure indication in this session.
Warning messages SHALL NOT be counted.
When the counter suffers any discontinuity, then the gsmpSessionDiscontinuityTime object indicates when it happened."
"The number of messages that have been received in this session.
All legal GSMP messages pertaining to this session after the session came to established state SHALL be counted, also including adjacency protocol messages and failure response messages.
When the counter suffers any discontinuity, then the gsmpSessionDiscontinuityTime object indicates when it happened."
{ gsmpSessionEntry 15 } gsmpSessionStatReceivedFailures OBJECT
"The number of messages that have been received in this session with a failure indication.
Warning messages SHALL NOT be counted.
When the counter suffers any discontinuity, then the gsmpSessionDiscontinuityTime object indicates when it happened."
"The number of Port Up events that have been sent or received on this session.
When the counter suffers any discontinuity, then the gsmpSessionDiscontinuityTime object indicates when it happened."
"The number of Port Down events that have been sent or received on this session.
When the counter suffers any discontinuity, then the gsmpSessionDiscontinuityTime object indicates when it happened."
"The number of Invalid label events that have been sent or received on this session.
When the counter suffers any discontinuity, then the gsmpSessionDiscontinuityTime object indicates when it happened."
"The number of New Port events that have been sent or received on this session.
When the counter suffers any discontinuity, then the gsmpSessionDiscontinuityTime object indicates when it happened."
"The number of Dead Port events that have been sent or received on this session.
When the counter suffers any discontinuity, then the gsmpSessionDiscontinuityTime object indicates when it happened."
"The number of Adjacency Update events that have been sent or received on this session.
When the counter suffers any discontinuity, then the gsmpSessionDiscontinuityTime object indicates when it happened."
"This object specifies the Port Number that is carried in this event."
"This object specifies the Port Session Number that is carried in this event."
"This object specifies the Event Sequence Number that is carried in this event."
"This object specifies the Label that is carried in this event."
NOTIFICATION TYPE OBJECTS { gsmpSessionStartUptime, gsmpSessionStatSentMessages, gsmpSessionStatFailureInds, gsmpSessionStatReceivedMessages, gsmpSessionStatReceivedFailures, gsmpSessionStatPortUpEvents, gsmpSessionStatPortDownEvents, gsmpSessionStatInvLabelEvents, gsmpSessionStatNewPortEvents, gsmpSessionStatDeadPortEvents, gsmpSessionStatAdjUpdateEvents } STATUS current DESCRIPTION "
When it has been enabled, this notification is generated whenever a session is taken down, regardless of whether the session went down normally or not.
Its purpose is to allow a management application (primarily an accounting application) that is monitoring the session statistics to receive the final values of these counters, so that the application can properly account for the amounts the counters were incremented since the last time the application polled them.
The gsmpSessionStartUptime object provides the total amount of time that the session was active.
This notification is not a substitute for polling the session statistic counts.
In particular, the count values reported in this notification cannot be assumed to be the complete totals for the life of the session, since they may have wrapped while the session was up.
The session to which this notification applies is identified by the gsmpSessionThisSideId and gsmpSessionFarSideId which could be inferred from the Object Identifiers of the objects contained in the notification.
An instance of this notification will contain exactly one instance of each of its objects, and these objects will all belong to the same conceptual row of the gsmpSessionTable."
When it has been enabled, this notification is generated when new session is established.
The new session is identified by the gsmpSessionThisSideId and gsmpSessionFarSideId which could be inferred from the Object Identifier of the gsmpSessionFarSideInstance object contained in the notification."
When it has been enabled, this notification is generated when a message with a failure indication was sent.
The notification indicates a change in the value of gsmpSessionStatFailureInds.
The gsmpSessionLastFailureCode contains the failure reason.
The session to which this notification applies is identified by the gsmpSessionThisSideId and gsmpSessionFarSideId which could be inferred from the Object Identifiers of the objects contained in the notification."
When it has been enabled, this notification is generate when a message with a failure indication is received.
The notification indicates a change in the value of gsmpSessionStatReceivedFailures.
The gsmpSessionLastFailureCode contains the failure reason.
The session to which this notification applies is identified by the gsmpSessionThisSideId and gsmpSessionFarSideId which could be inferred from the Object Identifiers of the objects contained in the notification."
When it has been enabled, this notification is generated when a Port Up Event occurs.
The notification indicates a change in the value of gsmpSessionStatPortUpEvents.
The session to which this notification applies is identified by the gsmpSessionThisSideId and gsmpSessionFarSideId which could be inferred from the Object Identifier of the gsmpSessionStatPortUpEvents object contained in the notification."
{ gsmpNotifications 5 } gsmpPortDownEvent NOTIFICATION TYPE OBJECTS { gsmpSessionStatPortDownEvents, gsmpEventPort, gsmpEventPortSessionNumber, gsmpEventSequenceNumber } STATUS current DESCRIPTION "
When it has been enabled, this notification is generated when a Port Down Event occurs.
The notification indicates a change in the value of gsmpSessionStatPortDownEvents.
The session to which this notification applies is identified by the gsmpSessionThisSideId and gsmpSessionFarSideId which could be inferred from the Object Identifier of the gsmpSessionStatPortDownEvents object contained in the notification."
When it has been enabled, this notification is generated when an Invalid Label Event occurs.
The notification indicates a change in the value of gsmpSessionStatInvLabelEvents.
The session to which this notification applies is identified by the gsmpSessionThisSideId and gsmpSessionFarSideId which could be inferred from the Object Identifier of the gsmpSessionStatInvLabelEvents object contained in the notification."
When it has been enabled, this notification is generated when a New Port Event occurs.
The notification indicates a change in the value of gsmpSessionStatNewPortEvents.
The session to which this notification applies is identified by the gsmpSessionThisSideId and gsmpSessionFarSideId which could be inferred from the Object Identifier of the gsmpSessionStatNewPortEvents object contained in the notification."
When it has been enabled, this notification is generated when a Dead Port Event occurs.
The notification indicates a change in the value of gsmpSessionStatDeadPortEvents.
The session to which this notification applies is identified by the gsmpSessionThisSideId and gsmpSessionFarSideId which could be inferred from the Object Identifier of the gsmpSessionStatDeadPortEvents object contained in the notification."
When it has been enabled, this notification is generated when an Adjacency Update Event occurs.
The gsmpSessionAdjacencyCount contains the new value of the number of adjacencies that are established with controllers and the switch partition that is used for this session.
The notification indicates a change in the value of gsmpSessionStatAdjUpdateEvents.
The session to which this notification applies is identified by the gsmpSessionThisSideId and gsmpSessionFarSideId which could be inferred from the Object Identifier of the gsmpSessionAdjacencyCount or the gsmpSessionStatAdjUpdateEvents object contained in the notification."
"The compliance statement for agents that support the GSMP MIB."
MANDATORY GROUPS { gsmpGeneralGroup } GROUP gsmpControllerGroup DESCRIPTION "
This group is mandatory for all Switch Controllers
" GROUP gsmpSwitchGroup DESCRIPTION "
This group is mandatory for all Switches" GROUP gsmpAtmEncapGroup DESCRIPTION
"This group must be supported if ATM is used for GSMP encapsulation. "
This group must be supported if TCP/IP is used for GSMP encapsulation. "
OBJECT gsmpTcpIpEncapAddressType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
An implementation is only required to support 'unknown(0)', and IPv4 addresses.
Supporting addresses with zone index or IPv6 addresses are optional.
Defining Internet addresses by using DNS domain names are not allowed."
OBJECT gsmpTcpIpEncapAddress SYNTAX InetAddress (SIZE(0
4 8 16 20)) DESCRIPTION "
An implementation is only required to support IPv4 addresses.
Supporting addresses with zone index or IPv6 addresses are optional."
This group must be supported if notifications are supported. "
This group must be supported if notifications are supported. "
The notifications which indicate specific changes in the value of objects
Security Considerations Assuming that secure network management (such as SNMP v3) is implemented, the objects represented in this MIB do not pose a threat to the security of the network.
There are a number of management objects defined in this MIB that have a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
There are a number of managed objects in this MIB that may contain sensitive information.
They are contained in the gsmpControllerTable and gsmpSwitchTable.
It is thus important to control even GET access to these objects and possibly to even encrypt the values of these object when sending them over the network via SNMP.
Not all versions of SNMP provide features for such a secure environment.
by itself is not a secure environment.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB.
It is recommended that the implementers consider the security features as provided by the SNMPv3 framework.
Specifically, the use of the User based Security Model RFC 2574
[RFC2574] and the View  based Access Control Model RFC 2575
It is then a customer/user responsibility to ensure that the SNMP entity giving access to an instance of this MIB, is properly configured to give access to the objects, only to those principals (users) that have legitimate rights to indeed GET or SET
