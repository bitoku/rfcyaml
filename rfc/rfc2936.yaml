- title: __initial_text__
  contents:
  - '                    HTTP MIME Type Handler Detection

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Entities composing web pages to provide services over the Hypertext\n\
    \   Transfer Protocol (HTTP) frequently have the problem of not knowing\n   what\
    \ Multipurpose Internet Mail Extensions (MIME) types have handlers\n   installed\
    \ at a user's browser.  For example, whether an Internet Open\n   Trading Protocol\
    \ (IOTP) or VRML or SET or some streaming media\n   handler is available.  In\
    \ some cases they would want to display\n   different web pages or content depending\
    \ on a MIME handler's\n   availability.  This document summarizes reasonable techniques\
    \ to\n   solve this problem for most of the browsers actually deployed on the\n\
    \   Internet as of early 2000.  It is intended to be of practical use to\n   implementors\
    \ during the period before the wide deployment of superior\n   standards based\
    \ techniques which may be developed.\n"
- title: Acknowledegements
  contents:
  - "Acknowledegements\n   Helpful comments by Tony Lewis of Visa have been incorporated.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction.................................................\
    \  2\n   2. The HTTP 'Accept' Header.....................................  2\n\
    \   3. JavaScript...................................................  3\n   4.\
    \ ActiveX and the Windows Registry.............................  4\n   5. ECML,\
    \ The Electronic Commerce Modeling Language..............  4\n   6. Putting It\
    \ All Together......................................  5\n   7. Future Development...........................................\
    \  5\n   8. Security Considerations......................................  5\n\
    \   9. IANA Considerations..........................................  6\n   References......................................................\
    \  6\n   Appendix A: Browser Version Sniffer Code........................  8\n\
    \   Authors' Addresses.............................................. 12\n   Full\
    \ Copyright Statement........................................ 13\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Entities composing web pages to provide services over [HTTP]\n\
    \   frequently have the problem of not knowing what [MIME] types have\n   handlers\
    \ installed at a user's browser.  For example, whether an\n   [IOTP] or VRML or\
    \ [SET] or some streaming media handler is available.\n   In many cases they would\
    \ want to display different web pages or\n   content depending on a MIME handler's\
    \ availability.  Sending a\n   response with a MIME type that is not supported\
    \ frequently results in\n   interrupting the flow of the user experience, browser\
    \ queries as to\n   what to do with the data being provided, and, of course, failure\
    \ to\n   provide the behavior that would have occurred had the correct MIME\n\
    \   type handler been installed.\n   This document describes reasonable techniques\
    \ to solve this problem\n   for most of the browsers actually deployed on the\
    \ Internet as of\n   early 2000.  It is intended to be of practical use to implementors\n\
    \   during the period before the wide deployment of superior standards\n   based\
    \ techniques which may be developed.  It is written in terms of\n   determining\
    \ whether a handler for application/iotp or application/x-\n   iotp exists but\
    \ is equally applicable to other MIME types.\n"
- title: 2. The HTTP 'Accept' Header
  contents:
  - "2. The HTTP 'Accept' Header\n   The problem should be solved by the Hyper Text\
    \ Transport Protocol\n   [HTTP] request \"Accept\" header which lists accepted\
    \ [MIME] types.\n   This header is present in both Version 1.0 and 1.1 of HTTP\
    \ and its\n   content is supposed to be a list of MIME types and subtypes that\
    \ are\n   accepted.  The only problem is that many browsers just send \"*/*\"\
    \ or\n   the like.\n   If the particular MIME type you are looking for is specifically\n\
    \   present in the Accept header, it is generally safe to assume that a\n   handler\
    \ for it is actually installed or part of the browser.\n   NOTE: Although not\
    \ part of the main topic of this document, if you\n   are designing MIME type\
    \ handler software and have access to a browser\n   interface that allows you\
    \ to request the insertion of the MIME type\n   or types your software handles\
    \ into the Accept header, you generally\n   should do so.  It will make it easier\
    \ for servers sensitive to that\n   MIME type to respond correctly.\n"
- title: 3. JavaScript
  contents:
  - "3. JavaScript\n   Most recent browsers support one or more scripting languages\
    \ of which\n   the most widely deployed is \"JavaScript\".  These scripting languages\n\
    \   appear in web pages and permit the interpretive execution of\n   programming\
    \ language constructs that can probe the browser\n   environment, conditionally\
    \ cause different page contents to be\n   displayed, etc.  For example, Appendix\
    \ A shows JavaScript available\n   from the Netscape web site for determining\
    \ what operating system,\n   browser, and version on which a web page is appearing.\n\
    \   NOTE: JavaScript is a trademark of SUN Microsystems, Inc.  It was\n   originally\
    \ called LiveScript.  It has nothing to do with the Java\n   language.\n   The\
    \ syntax for script use appears to be a Hyper Text Markup Language\n   (HTML)\
    \ comment so that browsers that do not support scripting will\n   ignore such\
    \ items.  That is, script use is preceded by \"<!--\" and\n   terminated by \"\
    -->\".  The following is a simple example of\n   conditional execution of parts\
    \ of a web page based on JavaScript MIME\n   type handler detection.\n   <SCRIPT\
    \ LANGUAGE=JAVASCRIPT>\n   <!-- hide it\n   if (navigator.mimeTypes && navigator.mimeTypes.length\
    \ > 0) {\n     if ( navigator.mimeTypes[\"application/iotp\"] ||\n          navigator.mimeTypes[\"\
    application/x-iotp\"]) {\n       // here if IOTP handler exists\n       }\n  \
    \   else {\n       // here if IOTP handler does not exist\n       }\n     }\n\
    \   // end and hide -->\n   </SCRIPT>\n"
- title: 4. ActiveX and the Windows Registry
  contents:
  - "4. ActiveX and the Windows Registry\n   If running on Microsoft Windows Internet\
    \ Explorer version 3 or 4, it\n   is necessary to query the Windows Registry to\
    \ determine local MIME\n   type support.  Although these broswers support JavaScript,\
    \ in v3 the\n   mimeTypes array is not present and in v4 the mimeTypes array is\n\
    \   present but always empty.  For example, executing the following code\n   will\
    \ test for support of the IOTP types:\n   CString iotpString, xiotpString;\n \
    \  char* Key, Keyx;\n      int rc, rcx;\n      iotpString =\n   \"SOFTWARE\\Classes\\\
    MIME\\Database\\Content Type\\application/iotp\";\n      xiotpString =\n   \"\
    SOFTWARE\\Classes\\MIME\\Database\\Content Type\\application/x-iotp\";\n     \
    \ Key = iotpString.GetBuffer(1);\n      Keyx = xiotpString.GetBuffer(1);\n   \
    \   rc = RegOpenKeyEx(HKEY_LOCAL_MACHINE, Key, 0, KEY_READ, hDefKey);\n      rcx\
    \ = RegOpenKeyEx(HKEY_LOCAL_MACHINE, Keyx, 0, KEY_READ, hDefKey);\n   if ( ( rc\
    \  == ERROR_SUCCESS ) || ( rcx == ERROR_SUCCESS ) )\n    {\n    // IOTP Handler\
    \ exists\n    }\n   else\n    {\n    // No IOTP Handler\n    }\n   NOTE: ActiveX\
    \ is a trademark of Microsoft and was originally called\n   Sweeper.\n"
- title: 5. ECML, The Electronic Commerce Modeling Language
  contents:
  - "5. ECML, The Electronic Commerce Modeling Language\n   A industry group has recently\
    \ proposed a standard for fields used in\n   electronic commerce.  This fields\
    \ allow \"wallet\" software acting for\n   the consumer to convey standardized\
    \ information to a merchant,\n   including information as to what payment related\
    \ protocols are\n   supported at the customer site.  See [ECML].\n"
- title: 6. Putting It All Together
  contents:
  - "6. Putting It All Together\n   The following diagram indicates how these techniques\
    \ can be put\n   together.\n   start>-----+\n              |\n      +------------------+\n\
    \      | Was desired type |     NO      +-------------------------+\n      |found\
    \ in Accept?  |------------>| Is JavaScript available |\n      +------------------+\
    \             |and does it show type?   |\n            |                     \
    \     +-------------------------+\n       YES  |                            |\
    \         |           |\n            |<---------------------------+         |\
    \        NO |\n            |        YES                           |          \
    \ |\n            |                      +---<explorer<--+           |\n      \
    \      |                      |                           |\n            |   \
    \       +----------------------+                |\n            |          | Is\
    \ ActiveX available |                |\n            |          |and does it show\
    \ type?|                |\n            |          +----------------------+   \
    \             |\n            |  YES       |        |         |             NO\
    \   |\n            |<-----------+        |         +----------------->|\n    \
    \        |                     V                            |\n   remember | \
    \              Indeterminate.            remember |\n     that   |.          \
    \    Take default             that type |\n   type IS  |               action.\
    \                     is NOT |\n   supported|                                \
    \        supported |\n            X done                                     \
    \        X\n"
- title: 7. Future Development
  contents:
  - "7. Future Development\n   Active work is proceeding in the IETF, World Wide Web\
    \ Consortium\n   [W3C], and other standards and industry groups concerning content\
    \ and\n   capabilities negotiation.  This work is likely to lead to superior\n\
    \   methods to implement the functionality described herein.  However,\n   near\
    \ universal deployment of such new standards/features will take\n   some time.\
    \  Thus you should expect the methods given herein to be\n   obsoleted, but perhaps\
    \ not for some time.\n"
- title: 8. Security Considerations
  contents:
  - "8. Security Considerations\n   It should be noted that the variety of ActiveX\
    \ control suggested\n   above is reading the user's registry, that is, examining\
    \ their\n   computer and reporting back some information it has discovered.  This\n\
    \   may be a concern among some users.\n   In general, the use of JavaScript and,\
    \ even more so, ActiveX is\n   dangerous because they are so powerful.  JavaScript\
    \ or ActiveX from a\n   web page could be invisibly damaging to the client.\n\
    \   Security of web interactions is normally provided by adopting channel\n  \
    \ encryption on the browser to server connections, such as [TLS].  In\n   the\
    \ absence of some such additional security outside of HTTP,\n   requests and/or\
    \ responses may be forged or tampered with.\n"
- title: 9. IANA Considerations
  contents:
  - "9. IANA Considerations\n   None specific to the techniques described herein.\
    \  For MIME types and\n   type registration procedures, see [MIME: RFCs 2046,\
    \ 2048].\n"
- title: References
  contents:
  - "References\n   [ECML] Eastlake, D. and T. Goldstein, \"ECML v1: Field Names for\
    \ E-\n          Commerce\", RFC 2706, October 1999.\n   [HTTP] Berners-Lee, T.,\
    \ Fielding, R. and H. Frystyk, \"Hypertext\n          Transfer Protocol -- HTTP/1.0\"\
    , RFC 1945, May 1996.\n   [HTTP] Fielding, R., Gettys, J., Mogul, J., Frystyk,\
    \ H., Masinter,\n          L., Leach, P. and T. Berners-Lee, \"Hypertext Transfer\
    \ Protocol\n          -- HTTP/1.1\", RFC 2616, June 1999.\n   [IOTP] Burdett,\
    \ D., \"Internet Open Trading Protocol - IOTP Version\n          1.0\", RFC 2801,\
    \ April 2000.\n   [MIME] Freed, N. and N. Borenstein, \"Multipurpose Internet\
    \ Mail\n          Extensions (MIME) Part One: Format of Internet Message\n   \
    \       Bodies\", RFC 2045, November 1996.\n   [MIME] Freed, N. and N. Borenstein,\
    \ \"Multipurpose Internet Mail\n          Extensions (MIME) Part Two: Media Types\"\
    , RFC 2046, November\n          1996.\n   [MIME] Moore, K., \"MIME (Multipurpose\
    \ Internet Mail Extensions) Part\n          Three: Message Header Extensions for\
    \ Non-ASCII Text\", RFC\n          2047, November 1996.\n   [MIME] Freed, N.,\
    \ Klensin, J. and J. Postel, \"Multipurpose Internet\n          Mail Extensions\
    \ (MIME) Part Four: Registration Procedures\",\n          RFC 2048, November 1996.\n\
    \   [SET]  \"Secure Electronic Transaction (SET) Specification, Version\n    \
    \      1.0\", May 31, 1997, available from <http://www.setco.org>.\n         \
    \    Book 1: Business Description\n             Book 2: Programmer's Guide\n \
    \            Book 3: Formal Protocol Definition\n   [TLS]  Dierks, T. and C. Allen,\
    \ \"The TLS Protocol Version 1.0\", RFC\n          2246, January 1999.\n   [W3C]\
    \ World Wide Web Consortium, <www.w3.org>\n"
- title: 'Appendix A: Browser Version Sniffer Code'
  contents:
  - "Appendix A: Browser Version Sniffer Code\n  <SCRIPT LANGUAGE=\"JavaScript\">\n\
    \  <!-- hide JavaScript from non-JavaScript browsers\n  // Ultimate client-side\
    \ JavaScript client sniff.\n  // (C) Netscape Communications 1999.\n  //     Permission\
    \ granted to reuse and distribute.\n  // Revised 17 May 99 to add is_nav5up and\
    \ is_ie5up (see below).\n  // Everything you always wanted to know about your\
    \ JavaScript client\n  // but were afraid to ask. Creates \"is_\" variables indicating:\n\
    \  // (1) browser vendor:\n  //     is_nav, is_ie, is_opera\n  // (2) browser\
    \ version number:\n  //     is_major (integer indicating major version number:\
    \ 2, 3, 4 ...)\n  //     is_minor (float   indicating full  version number:\n\
    \  //                                               2.02, 3.01, 4.04 ...)\n  //\
    \ (3) browser vendor AND major version number\n  //     is_nav2, is_nav3, is_nav4,\
    \ is_nav4up, is_nav5, is_nav5up,\n  //     is_ie3, is_ie4, is_ie4up\n  // (4)\
    \ JavaScript version number:\n  //     is_js (float indicating full JavaScript\
    \ version number:\n  //                                                    1,\
    \ 1.1, 1.2 ...)\n  // (5) OS platform and version:\n  //     is_win, is_win16,\
    \ is_win32, is_win31,\n  //     is_win95, is_winnt, is_win98\n  //     is_os2\n\
    \  //     is_mac, is_mac68k, is_macppc\n  //     is_unix\n  //        is_sun,\
    \ is_sun4, is_sun5, is_suni86\n  //        is_irix, is_irix5, is_irix6\n  // \
    \       is_hpux, is_hpux9, is_hpux10\n  //        is_aix, is_aix1, is_aix2, is_aix3,\
    \ is_aix4\n  //        is_linux, is_sco, is_unixware, is_mpras, is_reliant\n \
    \ //        is_dec, is_sinix, is_freebsd, is_bsd\n  //     is_vms\n  //\n  //\
    \ See http://www.it97.de/JavaScript/JS_tutorial/bstat/navobj.html and\n  // http://www.it97.de/JavaScript/JS_tutorial/bstat/Browseraol.html\n\
    \  // for detailed lists of userAgent strings.\n  //\n  // Note: you don't want\
    \ your Nav4 or IE4 code to \"turn off\" or\n  // stop working when Nav5 and IE5\
    \ (or later) are released, so\n  // in conditional code forks, use is_nav4up (\"\
    Nav4 or greater\")\n  // and is_ie4up (\"IE4 or greater\") instead of is_nav4\
    \ or is_ie4\n  // to check version in code which you want to work on future\n\
    \  // versions.\n  // convert all characters to lowercase to simplify testing\n\
    \  var agt=navigator.userAgent.toLowerCase();\n  // *** BROWSER VERSION ***\n\
    \  // Note: On IE5, these return 4, so use is_ie5up to detect IE5.\n  var is_major\
    \ = parseInt(navigator.appVersion);\n  var is_minor = parseFloat(navigator.appVersion);\n\
    \  // Note: Opera and WebTV spoof Navigator.  We do strict client\n  //  detection.\
    \  If you want to allow spoofing, take out the tests\n  //  for opera and webtv.\n\
    \  var is_nav  = ((agt.indexOf('mozilla')!=-1)\n              && (agt.indexOf('spoofer')==-1)\n\
    \              && (agt.indexOf('compatible') == -1)\n              && (agt.indexOf('opera')==-1)\n\
    \              && (agt.indexOf('webtv')==-1));\n  var is_nav2 = (is_nav && (is_major\
    \ == 2));\n  var is_nav3 = (is_nav && (is_major == 3));\n  var is_nav4 = (is_nav\
    \ && (is_major == 4));\n  var is_nav4up = (is_nav && (is_major >= 4));\n  var\
    \ is_navonly      = (is_nav && ((agt.indexOf(\";nav\") != -1) ||\n           \
    \             (agt.indexOf(\"; nav\") != -1)) );\n  var is_nav5 = (is_nav && (is_major\
    \ == 5));\n  var is_nav5up = (is_nav && (is_major >= 5));\n  var is_ie   = (agt.indexOf(\"\
    msie\") != -1);\n  var is_ie3  = (is_ie && (is_major < 4));\n  var is_ie4  = (is_ie\
    \ && (is_major == 4)\n                       && (agt.indexOf(\"msie 5.0\")==-1)\
    \ );\n  var is_ie4up  = (is_ie  && (is_major >= 4));\n  var is_ie5  = (is_ie &&\
    \ (is_major == 4)\n                       && (agt.indexOf(\"msie 5.0\")!=-1) );\n\
    \  var is_ie5up  = (is_ie  && !is_ie3 && !is_ie4);\n  // KNOWN BUG: On AOL4, returns\
    \ false if IE3 is embedded browser\n  // or if this is the first browser window\
    \ opened.  Thus the\n  // variables is_aol, is_aol3, and is_aol4 aren't 100% reliable.\n\
    \  var is_aol   = (agt.indexOf(\"aol\") != -1);\n  var is_aol3  = (is_aol && is_ie3);\n\
    \  var is_aol4  = (is_aol && is_ie4);\n  var is_opera = (agt.indexOf(\"opera\"\
    ) != -1);\n  var is_webtv = (agt.indexOf(\"webtv\") != -1);\n  // *** JAVASCRIPT\
    \ VERSION CHECK ***\n  var is_js;\n  if (is_nav2 || is_ie3) is_js = 1.0\n  else\
    \ if (is_nav3 || is_opera) is_js = 1.1\n  else if ((is_nav4 && (is_minor <= 4.05))\
    \ || is_ie4) is_js = 1.2\n  else if ((is_nav4 && (is_minor > 4.05)) || is_ie5)\
    \ is_js = 1.3\n  else if (is_nav5) is_js = 1.4\n  // NOTE: In the future, update\
    \ this code when newer versions of JS\n  // are released. For now, we try to provide\
    \ some upward compatibility\n  // so that future versions of Nav and IE will show\
    \ they are at\n  // *least* JS 1.x capable. Always check for JS version compatibility\n\
    \  // with > or >=.\n  else if (is_nav && (is_major > 5)) is_js = 1.4\n  else\
    \ if (is_ie && (is_major > 5)) is_js = 1.3\n  // HACK: no idea for other browsers;\n\
    \  //       always check for JS version with > or >=\n  else is_js = 0.0;\n  //\
    \ *** PLATFORM ***\n  var is_win   = ( (agt.indexOf(\"win\")!=-1) ||\n       \
    \            (agt.indexOf(\"16bit\")!=-1) );\n  // NOTE: On Opera 3.0, the userAgent\
    \ string includes \"Windows 95/NT4\"\n  // on all Win32, so you can't distinguish\
    \ between Win95 and WinNT.\n  var is_win95 = ((agt.indexOf(\"win95\")!=-1) ||\n\
    \                  (agt.indexOf(\"windows 95\")!=-1));\n  // is this a 16 bit\
    \ compiled version?\n  var is_win16 = ((agt.indexOf(\"win16\")!=-1) ||\n     \
    \        (agt.indexOf(\"16bit\")!=-1) ||\n             (agt.indexOf(\"windows\
    \ 3.1\")!=-1) ||\n             (agt.indexOf(\"windows 16-bit\")!=-1) );\n  var\
    \ is_win31 = ((agt.indexOf(\"windows 3.1\")!=-1) ||\n                  (agt.indexOf(\"\
    win16\")!=-1) ||\n                  (agt.indexOf(\"windows 16-bit\")!=-1));\n\
    \  // NOTE: Reliable detection of Win98 may not be possible.\n  // It appears\
    \ that:\n  //  - On Nav 4.x and before you'll get plain \"Windows\" in userAgent.\n\
    \  //  - On Mercury client, the 32-bit version will return \"Win98\", but\n  //\
    \    the 16-bit version running on Win98 will still return \"Win95\".\n  var is_win98\
    \ = ((agt.indexOf(\"win98\")!=-1) ||\n                  (agt.indexOf(\"windows\
    \ 98\")!=-1));\n  var is_winnt = ((agt.indexOf(\"winnt\")!=-1) ||\n          \
    \        (agt.indexOf(\"windows nt\")!=-1));\n  var is_win32 = (is_win95 || is_winnt\
    \ || is_win98 ||\n                  ((is_major >= 4) &&\n                   (navigator.platform\
    \ == \"Win32\")) ||\n                  (agt.indexOf(\"win32\")!=-1) ||\n     \
    \             (agt.indexOf(\"32bit\")!=-1));\n  var is_os2   = ((agt.indexOf(\"\
    os/2\")!=-1) ||\n                  (navigator.appVersion.indexOf(\"OS/2\")!=-1)\
    \ ||\n                  (agt.indexOf(\"ibm-webexplorer\")!=-1));\n  var is_mac\
    \    = (agt.indexOf(\"mac\")!=-1);\n  var is_mac68k = (is_mac && ((agt.indexOf(\"\
    68k\")!=-1) ||\n                             (agt.indexOf(\"68000\")!=-1)));\n\
    \  var is_macppc = (is_mac && ((agt.indexOf(\"ppc\")!=-1) ||\n               \
    \               (agt.indexOf(\"powerpc\")!=-1)));\n  var is_sun   = (agt.indexOf(\"\
    sunos\")!=-1);\n  var is_sun4  = (agt.indexOf(\"sunos 4\")!=-1);\n  var is_sun5\
    \  = (agt.indexOf(\"sunos 5\")!=-1);\n  var is_suni86= (is_sun && (agt.indexOf(\"\
    i86\")!=-1));\n  var is_irix  = (agt.indexOf(\"irix\") !=-1);    // SGI\n  var\
    \ is_irix5 = (agt.indexOf(\"irix 5\") !=-1);\n  var is_irix6 = ((agt.indexOf(\"\
    irix 6\") !=-1) ||\n                  (agt.indexOf(\"irix6\") !=-1));\n  var is_hpux\
    \  = (agt.indexOf(\"hp-ux\")!=-1);\n  var is_hpux9 = (is_hpux && (agt.indexOf(\"\
    09.\")!=-1));\n  var is_hpux10= (is_hpux && (agt.indexOf(\"10.\")!=-1));\n  var\
    \ is_aix   = (agt.indexOf(\"aix\") !=-1);      // IBM\n  var is_aix1  = (agt.indexOf(\"\
    aix 1\") !=-1);\n  var is_aix2  = (agt.indexOf(\"aix 2\") !=-1);\n  var is_aix3\
    \  = (agt.indexOf(\"aix 3\") !=-1);\n  var is_aix4  = (agt.indexOf(\"aix 4\")\
    \ !=-1);\n  var is_linux = (agt.indexOf(\"inux\")!=-1);\n  var is_sco   = (agt.indexOf(\"\
    sco\")!=-1) ||\n                 (agt.indexOf(\"unix_sv\")!=-1);\n  var is_unixware\
    \ = (agt.indexOf(\"unix_system_v\")!=-1);\n  var is_mpras    = (agt.indexOf(\"\
    ncr\")!=-1);\n  var is_reliant  = (agt.indexOf(\"reliantunix\")!=-1);\n  var is_dec\
    \   = ((agt.indexOf(\"dec\")!=-1) ||\n         (agt.indexOf(\"osf1\")!=-1) ||\n\
    \         (agt.indexOf(\"dec_alpha\")!=-1) ||\n         (agt.indexOf(\"alphaserver\"\
    )!=-1) ||\n         (agt.indexOf(\"ultrix\")!=-1) ||\n         (agt.indexOf(\"\
    alphastation\")!=-1));\n  var is_sinix = (agt.indexOf(\"sinix\")!=-1);\n  var\
    \ is_freebsd = (agt.indexOf(\"freebsd\")!=-1);\n  var is_bsd = (agt.indexOf(\"\
    bsd\")!=-1);\n  var is_unix  = ((agt.indexOf(\"x11\")!=-1) || is_sun ||\n    \
    \           is_irix || is_hpux ||\n               is_sco ||is_unixware || is_mpras\
    \ || is_reliant ||\n               is_dec || is_sinix || is_aix || is_linux ||\n\
    \               is_bsd || is_freebsd);\n  var is_vms   = ((agt.indexOf(\"vax\"\
    )!=-1) ||\n                  (agt.indexOf(\"openvms\")!=-1));\n  </SCRIPT>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Donald E. Eastlake 3rd\n   Motorola\n   140 Forest Avenue\n\
    \   Hudson, MA 01749 USA\n   Phone: +1 978-562-2827(h)\n          +1 508-261-5434(w)\n\
    \   Fax:   +1 508-261-4447(w)\n   EMail: Donald.Eastlake@motorola.com\n   Chris\
    \ J. Smith\n   Royal Bank of Canada\n   277 Front Street West\n   Toronto, Ontario\
    \ M5V 3A4 CANADA\n   Phone: +1 416-348-6090\n   Fax:   +1 416-348-2210\n   EMail:\
    \ chris.smith@royalbank.com\n   David M. Soroka\n   IBM\n   Raleigh, NC\n   Phone:\
    \ +1 919-486-2684\n   Fax:   +1 919-543-4653\n   EMail: dsoroka@us.ibm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
