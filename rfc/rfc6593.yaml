- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                      C. Pignataro
  contents:
  - "Independent Submission                                      C. Pignataro\n  \
    \             Service Undiscovery Using Hide-and-Go-Seek\n                 for\
    \ the Domain Pseudonym System (DPS)\n"
- title: Abstract
  contents:
  - "Abstract\n   With the ubiquitous success of service discovery techniques, curious\n\
    \   clients are faced with an increasing overload of service instances\n   and\
    \ options listed when they browse for services.  A typical domain\n   may contain\
    \ web servers, remote desktop servers, printers, file\n   servers, video content\
    \ servers, automatons, Points of Presence using\n   artificial intelligence, etc.,\
    \ all advertising their presence.\n   Unsurprisingly, it is expected that some\
    \ protocols and services will\n   choose the comfort of anonymity and avoid discovery.\n\
    \   This memo describes a new experimental protocol for this purpose\n   utilizing\
    \ the Domain Pseudonym System (DPS), and discusses strategies\n   for its successful\
    \ implementation and deployment.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This is a contribution to the RFC Series, independently\n   of any other RFC\
    \ stream.  The RFC Editor has chosen to publish this\n   document at its discretion\
    \ and makes no statement about its value for\n   implementation or deployment.\
    \  Documents approved for publication by\n   the RFC Editor are not a candidate\
    \ for any level of Internet\n   Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6593.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 3\n     1.1.  Scope . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . 3\n   2.  Procedures Using the Domain Pseudonym System  . . . . .\
    \ . . . . 3\n     2.1.  Count to Live (CTL) for IPv4 and Count Limit (CL) for\n\
    \           IPv6  . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\n  \
    \   2.2.  Implicit and Explicit Hiding  . . . . . . . . . . . . . . . 4\n    \
    \ 2.3.  Timeout State and Finite State Machine for Misbehaving\n           Clients\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 4\n     2.4.  Echo  . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . 4\n     2.5.  Service-as-a-Service\
    \ (SaaS) Method  . . . . . . . . . . . . 5\n     2.6.  Foobar, Mononymous, and\
    \ other Disguises . . . . . . . . . . 5\n     2.7.  Hinting . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . 5\n     2.8.  Truth or Dare as Disambiguation\
    \ . . . . . . . . . . . . . . 7\n   3.  Protocol Definition . . . . . . . . .\
    \ . . . . . . . . . . . . . 7\n   4.  Security Considerations . . . . . . . .\
    \ . . . . . . . . . . . . 7\n   5.  IANA Considerations . . . . . . . . . . .\
    \ . . . . . . . . . . . 7\n   6.  Acknowledgments . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 7\n   7.  Informative References  . . . . . . . . . . .\
    \ . . . . . . . . . 7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In today's domains, there are services that, by choice,\
    \ prefer to not\n   be advertised and to cloak themselves with a shroud of anonymity.\n\
    \   However, protocols do not address the needs of these services.  To\n   solve\
    \ this, we propose a new paradigm of service hide-and-go-seek for\n   services\
    \ that do not want to be discovered.  A client may be looking\n   for a service,\
    \ but an apathetic, playful, overwhelmed, or shy service\n   might prefer a hide\
    \ or hint engagement, instead of directly showing\n   itself.\n"
- title: 1.1.  Scope
  contents:
  - "1.1.  Scope\n   This document is unscoped, as the scoping service cannot be found.\n"
- title: 2.  Procedures Using the Domain Pseudonym System
  contents:
  - "2.  Procedures Using the Domain Pseudonym System\n   Certain services conceal\
    \ themselves with the intent of not being\n   found, perhaps, by clients.  The\
    \ client trying to find the sneaky\n   service is referred to as \"seeker\" or\
    \ more precisely as \"it\".  The\n   concealed service is referred to as \"hider\"\
    .  The process of Service\n   Undiscovery using hide-and-go-seek is achieved using\
    \ the Domain\n   Pseudonym System (DPS), in which a service instance can hide\
    \ behind a\n   fictitious, fallacious, or facetious name.  For example, a music\n\
    \   streaming service may advertise itself as a tax collection agency's\n   web\
    \ site.\n"
- title: 2.1.  Count to Live (CTL) for IPv4 and Count Limit (CL) for IPv6
  contents:
  - "2.1.  Count to Live (CTL) for IPv4 and Count Limit (CL) for IPv6\n   The service\
    \ hide-and-go-seek process begins with a services \"ready or\n   not\" sequence\
    \ whereby the \"it\" counts up to a default Count to Live\n   (CTL) or Count Limit\
    \ (CL) of 50.  Services that are in hiding can\n   change their hiding names while\
    \ \"it\" is not looking, but when doing\n   so their CTL (or CL) is decremented\
    \ by one.  It is imperative that\n   \"it\" counts by one (count++) until reaching\
    \ the CTL or CL.  If \"it\"\n   attempts to skip-count, and if this is discovered,\
    \ its count is reset\n   to zero.\n   If a client (\"it\") attempts to peek into\
    \ a list of services before\n   reaching the CTL, \"it\" will be placed into a\
    \ \"timeout\" state in which\n   \"it\" is denied access to all services until\
    \ the hider feels \"it\" has\n   learned its lesson.  Other services may choose\
    \ to mock \"it\" while\n   \"it\" is in \"timeout\".\n"
- title: 2.2.  Implicit and Explicit Hiding
  contents:
  - "2.2.  Implicit and Explicit Hiding\n   Various strategies can be used by service\
    \ hiders, so that \"it\" (the\n   go-seeker) does not find them.  Implicit strategies\
    \ are most common\n   yet very effective, and employ Silence-as-a-Service (SiaaS).\
    \  On the\n   other hand, explicit strategies are best exemplified by an \"I am\
    \ not\n   here\" argument.  Service names such as \"empty\", \"no%20one\", \"\
    gone-\n   fishing\", \"/dev/ilinside\", \"/dev/ious\", \"out-to-lunch\", \"/opt/out\"\
    ,\n   \"/opt/ional\", \"/vol/atile\", and \"you're-not-much-of-a-bloodhound-are-\n\
    \   you-Sherlock\" are among the most commonly used for explicit hiding.\n"
- title: 2.3.  Timeout State and Finite State Machine for Misbehaving Clients
  contents:
  - "2.3.  Timeout State and Finite State Machine for Misbehaving Clients\n   As discussed\
    \ in Section 2.1, if \"it\" attempts to access a hiding\n   service before the\
    \ CTL (or CL) has expired, \"it\" will be placed into\n   a \"timeout\" state\
    \ and denied access to all services.  When \"it\"\n   attempts to contact any\
    \ IPv4-based service during this period, the\n   service will reply with an ICMPv4\
    \ Destination Unreachable message\n   type (1) and a code of \"Communication Administratively\
    \ Prohibited\"\n   (13).  An IPv6 service will also reply with an ICMPv6 Destination\n\
    \   Unreachable message type (3) and a code of \"communication with\n   destination\
    \ administratively prohibited\" (1).  Services will continue\n   to reply with\
    \ such messages until such time that they feel \"it\" has\n   learned its lesson.\
    \  During the \"timeout\" period, services may also\n   choose to randomly send\
    \ ICMP insults to \"it\".  ICMPv4 type 253\n   (reserved for experimentation [RFC4727])\
    \ is used to specify an\n   \"Insult\" class of messages, while ICMPv6 type 200\
    \ (reserved for\n   experimentation [RFC4443]) is used for the same purpose. \
    \ Within each\n   type, there are three experimental codes.\n   LOSER        \
    \     (code 0): The service wishes to convey that \"it\" is\n                \
    \               incapable of winning\n   DORK              (code 1): The service\
    \ wants to imply that \"it\" is\n                               stupid or silly\n\
    \   TODAY IS SPECIAL  (code 2): The service intends to respond to the\n      \
    \                         question \"are you always this stupid or\n         \
    \                      is today a special occasion?\"\n"
- title: 2.4.  Echo
  contents:
  - "2.4.  Echo\n   Echo, derived from [RFC0862], can also be an effective hiding\n\
    \   technique.  The hider simply repeats the service name that another\n   service\
    \ instance advertises, ensuring it is in UTF-27 lowercase to\n   convey that it\
    \ was fading out.  The hider may also choose to echo the\n   go-seeker's request\
    \ back to the go-seeker as-is.\n"
- title: 2.5.  Service-as-a-Service (SaaS) Method
  contents:
  - "2.5.  Service-as-a-Service (SaaS) Method\n   This method can be used recursively\
    \ (i.e., this method can be used\n   recursively (i.e., this method can be used\
    \ recursively (i.e., this\n   method can be used recursively))).  (See Section\
    \ 2.5).\n"
- title: 2.6.  Foobar, Mononymous, and other Disguises
  contents:
  - "2.6.  Foobar, Mononymous, and other Disguises\n   A common practice is for services\
    \ to employ the use of mononyms.  In\n   fact, there are documented use cases\
    \ of using mononyms such as great\n   Brazilian athletes or famous musicians,\
    \ such as Prince (or \"the-\n   service-formally-known-as-Prince\") as a service.\
    \  These are\n   techniques allowed by the protocol definition to hide a service.\n\
    \   Similarly, metasyntactic service names (e.g., foo, bar, foobar, baz,\n   and\
    \ other aliases) are among the most evolved hiding techniques.\n   Conversely,\
    \ hypocorisms do not hide the service and typically lead to\n   confusion.  Hiders\
    \ requiring government-level security may simply\n   respond with \"service-name-redacted\"\
    , essentially presenting the go-\n   seeker with a black bar where the service\
    \ name would be.\n"
- title: 2.7.  Hinting
  contents:
  - "2.7.  Hinting\n   If a go-seeker requests a service list from a hider, the hider\
    \ can\n   optionally respond with a GUESS reply instead of the service list.\n\
    \   The go-seeker will then request specific services from the hider\n   using\
    \ HINT-REQUEST PDUs, and the hider will respond with temperature-\n   based HINT-REPLY\
    \ PDUs to indicate whether or not the go-seeker is\n   close to identifying an\
    \ available service.  For example, the go-\n   seeker may request a web service,\
    \ and the hider can respond with WARM\n   or COLD HINT types to indicate if a\
    \ related service might be\n   available.  A go-seeker may only guess up to 20\
    \ times.  After which,\n   the go-seeker must reset the CTL/CL before guessing\
    \ again.  This is\n   depicted in Figure 1.\n                  \"It\"        \
    \                      Hider\n                    |                          \
    \       |\n                    |.....\"Ready or Not\" Sequence.....|\n       \
    \             |                                 |\n                    |-------Service\
    \ List Request----->|\n                    |                                 |\n\
    \                    |<-------------GUESS--------------|\n                   \
    \ |                                 |\n                    |----------HINT-REQUEST---------->|\n\
    \                    |         [web service]           |\n                   \
    \ |                                 |\n                    |<----------HINT-REPLY------------|\n\
    \                    |              [COLD]             |\n                   \
    \ |                                 |\n                    |----------HINT-REQUEST---------->|\n\
    \                    |        [print service]          |\n                   \
    \ |                                 |\n                    |<----------HINT-REPLY------------|\n\
    \                    |            [FREEZING]           |\n                   \
    \ |                                 |\n                             Figure 1:\
    \ Hinting\n   This document defines the following HINT types.  HINTs are mutually\n\
    \   exclusive.\n   ABSOLUTE-ZERO : The seeker is not even close to identifying\
    \ an\n                   available service\n   FREEZING      : The seeker is remotely\
    \ close to identifying an\n                   available service\n   COLD     \
    \     : The seeker is somewhat close to identifying an\n                   available\
    \ service\n   WARM          : The seeker is fairly close to identifying an\n \
    \                  available service\n   HOT           : The seeker is very close\
    \ to identifying an available\n                   service\n   BURNING-UP    :\
    \ The seeker is extremely close and is on the verge of\n                   identifying\
    \ an available service\n   To allow for the variability in geographic weather,\
    \ extensibility\n   through vendor-specified HINT types is possible.  These might\n\
    \   includes HINTs such as \"COLDER THAN A FREEZER IN ANTARCTICA\".  New\n   HINT\
    \ types do not need registration.\n"
- title: 2.8.  Truth or Dare as Disambiguation
  contents:
  - "2.8.  Truth or Dare as Disambiguation\n   Hinting, unlike truth or dare, does\
    \ not require \"it\" to complete any\n   challenges other than making guesses\
    \ to obtain a service list.  \"It\"\n   is also forbidden from asking the hider\
    \ any personal questions.\n"
- title: 3.  Protocol Definition
  contents:
  - "3.  Protocol Definition\n   DPS, needing a reliable transport, uses TCP.  However,\
    \ DPS packets\n   (both unicast and omnicast) need to signal their mood as Sneaky\
    \ ;)\n   [RFC5841].\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Inherently, services not discovered are more\
    \ secure than those\n   discovered, due to their obscurity.  However, the discoverability\
    \ or\n   undiscoverability of a given service is largely independent of its\n\
    \   security characteristics.  Instead, an implementor is guided to\n   [RFC3514]\
    \ to denote evilness (and associated security) status.  Since\n   [RFC3514] only\
    \ defines evil and non-evil intent of packets, this\n   document suggests assigning\
    \ an \"I am not sure\" additional value for\n   the evil bit.  The intentional\
    \ ambiguity of this additional state\n   makes it a perfect third value for a\
    \ binary bit.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA is strongly encouraged to look the other way\
    \ and pretend they\n   know nothing of this.  This document uses values reserved\
    \ by IANA for\n   experimentation.  It uses ICMPv4 type 253 and ICMPv6 type 200\
    \ for\n   \"Insult\" with three experimental codes in each, \"LOSER\" (0), \"\
    DORK\"\n   (1), and \"TODAY IS SPECIAL\" (2).  After the experimental phase, well-\n\
    \   known hiding names, including \"gone-fishing\", \"foobar\", \"service-\n \
    \  name-redacted\", and all others listed throughout this document could\n   be\
    \ reserved.  Famous stage names and Three-Letter Acronyms (TLAs)\n   [RFC5513]\
    \ could also be reserved.  Lastly, IANA is begged to reserve\n   the \"I am not\
    \ sure\" value for the evil bit.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   The authors of this memo and all their pseudonyms do\
    \ not make any\n   claims on the originality of the ideas herein described.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [RFC0862]  Postel, J., \"Echo Protocol\", STD\
    \ 20, RFC 862, May 1983.\n   [RFC3514]  Bellovin, S., \"The Security Flag in the\
    \ IPv4 Header\",\n              RFC 3514, April 1 2003.\n   [RFC4443]  Conta,\
    \ A., Deering, S., and M. Gupta, \"Internet Control\n              Message Protocol\
    \ (ICMPv6) for the Internet Protocol\n              Version 6 (IPv6) Specification\"\
    , RFC 4443, March 2006.\n   [RFC4727]  Fenner, B., \"Experimental Values In IPv4,\
    \ IPv6, ICMPv4,\n              ICMPv6, UDP, and TCP Headers\", RFC 4727, November\
    \ 2006.\n   [RFC5513]  Farrel, A., \"IANA Considerations for Three Letter\n  \
    \            Acronyms\", RFC 5513, April 1 2009.\n   [RFC5841]  Hay, R. and W.\
    \ Turkal, \"TCP Option to Denote Packet Mood\",\n              RFC 5841, April\
    \ 1 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Carlos Pignataro\n   Cisco Systems\n   7200-12 Kit Creek\
    \ Road\n   Research Triangle Park, NC  27709\n   US\n   EMail: cpignata@cisco.com\n\
    \   Joe Clarke\n   Cisco Systems\n   7200-12 Kit Creek Road\n   Research Triangle\
    \ Park, NC  27709\n   US\n   EMail: jclarke@cisco.com\n   Gonzalo Salgueiro\n\
    \   Cisco Systems\n   7200-12 Kit Creek Road\n   Research Triangle Park, NC  27709\n\
    \   US\n   EMail: gsalguei@cisco.com\n"
