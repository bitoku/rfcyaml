- title: __initial_text__
  contents:
  - "                Internet X.509 Public Key Infrastructure\n         Representation\
    \ of Key Exchange Algorithm (KEA) Keys in\n         Internet X.509 Public Key\
    \ Infrastructure Certificates\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: Abstract
  contents:
  - "Abstract\n   The Key Exchange Algorithm (KEA) is a classified algorithm for\n\
    \   exchanging keys.  This specification profiles the format and\n   semantics\
    \ of fields in X.509 V3 certificates containing KEA keys. The\n   specification\
    \ addresses the subjectPublicKeyInfo field and the\n   keyUsage extension.\n"
- title: 1.  Executive Summary
  contents:
  - "1.  Executive Summary\n   This specification contains guidance on the use of\
    \ the Internet\n   Public Key Infrastructure certificates to convey Key Exchange\n\
    \   Algorithm (KEA) keys. This specification is an addendum to RFC 2459,\n   \"\
    Internet X.509 Public Key Infrastructure: Certificate and CRL\n   Profile\". \
    \ Implementations of this specification must also conform to\n   RFC 2459.  Implementations\
    \ of this specification are not required to\n   conform to other parts from that\
    \ series.\n"
- title: 2.  Requirements and Assumptions
  contents:
  - "2.  Requirements and Assumptions\n   The goal is to augment the X.509 certificate\
    \ profile presented in\n   Part 1 to facilitate the management of KEA keys for\
    \ those communities\n   which use this algorithm.\n"
- title: 2.1.  Communication and Topology
  contents:
  - "2.1.  Communication and Topology\n   This profile, as presented in [RFC 2459]\
    \ and augmented by this\n   specification, supports users without high bandwidth,\
    \ real-time IP\n   connectivity, or high connection availability.  In addition,\
    \ the\n   profile allows for the presence of firewall or other filtered\n   communication.\n\
    \   This profile does not assume the deployment of an X.500 Directory\n   system.\
    \  The profile does not prohibit the use of an X.500 Directory,\n   but other\
    \ means of distributing certificates and certificate\n   revocation lists (CRLs)\
    \ are supported.\n"
- title: 2.2.  Acceptability Criteria
  contents:
  - "2.2.  Acceptability Criteria\n   The goal of the Internet Public Key Infrastructure\
    \ (PKI) is to meet\n   the needs of deterministic, automated identification, authentication,\n\
    \   access control, and authorization functions. Support for these\n   services\
    \ determines the attributes contained in the certificate as\n   well as the ancillary\
    \ control information in the certificate such as\n   policy data and certification\
    \ path constraints.\n   The goal of this document is to profile KEA certificates,\
    \ specifying\n   the contents and semantics of attributes which were not fully\n\
    \   specified by [RFC 2459].  If not specifically addressed by this\n   document,\
    \ the contents and semantics of the fields and extensions\n   must be as described\
    \ in [RFC 2459].\n"
- title: 2.3.  User Expectations
  contents:
  - "2.3.  User Expectations\n   Users of the Internet PKI are people and processes\
    \ who use client\n   software and are the subjects named in certificates.  These\
    \ uses\n   include readers and writers of electronic mail, the clients for WWW\n\
    \   browsers, WWW servers, and the key manager for IPSEC within a router.\n  \
    \ This profile recognizes the limitations of the platforms these users\n   employ\
    \ and the sophistication/attentiveness of the users themselves.\n   This manifests\
    \ itself in minimal user configuration responsibility\n   (e.g., root keys, rules),\
    \ explicit platform usage constraints within\n   the certificate, certification\
    \ path constraints which shield the user\n   from many malicious actions, and\
    \ applications which sensibly automate\n   validation functions.\n"
- title: 2.4.  Administrator Expectations
  contents:
  - "2.4.  Administrator Expectations\n   As with users, the Internet PKI profile\
    \ is structured to support the\n   individuals who generally operate Certification\
    \ Authorities (CAs).\n   Providing administrators with unbounded choices increases\
    \ the chances\n   that a subtle CA administrator mistake will result in broad\n\
    \   compromise or unnecessarily limit interoperability.  This profile\n   defines\
    \ the object identifiers and data formats that must be\n   supported to interpret\
    \ KEA public keys.\n"
- title: 3.  KEA Algorithm Support
  contents:
  - "3.  KEA Algorithm Support\n   This section describes object identifiers and data\
    \ formats which may\n   be used with [RFC 2459] to describe X.509 certificates\
    \ containing a\n   KEA public key.  Conforming CAs are required to use the object\n\
    \   identifiers and data formats when issuing KEA certificates.\n   Conforming\
    \ applications shall recognize the object identifiers and\n   process the data\
    \ formats when processing such certificates.\n"
- title: 3.1.  Subject Public Key Info
  contents:
  - "3.1.  Subject Public Key Info\n   The certificate identifies the KEA algorithm,\
    \ conveys optional\n   parameters, and specifies the KEA public key in the\n \
    \  subjectPublicKeyInfo field. The subjectPublicKeyInfo field is a\n   SEQUENCE\
    \ of an algorithm identifier and the subjectPublicKey field.\n   The certificate\
    \ indicates the algorithm through an algorithm\n   identifier.  This algorithm\
    \ identifier consists of an object\n   identifier (OID) and optional associated\
    \ parameters.  Section 3.1.1\n   identifies the preferred OID and parameters for\
    \ the KEA algorithm.\n   Conforming CAs shall use the identified OID when issuing\
    \ certificates\n   containing public keys for the KEA algorithm. Conforming applications\n\
    \   supporting the KEA algorithm shall, at a minimum, recognize the OID\n   identified\
    \ in section 3.1.1.\n   The certificate conveys the KEA public key through the\n\
    \   subjectPublicKey field.  This subjectPublicKey field is a BIT STRING.\n  \
    \ Section 3.1.2 specifies the method for encoding a KEA public key as a\n   BIT\
    \ STRING.  Conforming CAs shall encode the KEA public key as\n   described in\
    \ Section 3.1.2 when issuing certificates containing\n   public keys for the KEA\
    \ algorithm. Conforming applications supporting\n   the KEA algorithm shall decode\
    \ the subjectPublicKey as described in\n   section 3.1.2 when the algorithm identifier\
    \ is the one presented in\n   3.1.1.\n"
- title: 3.1.1.  Algorithm Identifier and Parameters
  contents:
  - "3.1.1.  Algorithm Identifier and Parameters\n   The Key Exchange Algorithm (KEA)\
    \ is an algorithm for exchanging keys.\n   A KEA \"pairwise key\" may be generated\
    \ between two users if their KEA\n   public keys were generated with the same\
    \ KEA parameters.  The KEA\n   parameters are not included in a certificate; instead\
    \ a \"domain\n   identifier\" is supplied in the parameters field.\n   When the\
    \ subjectPublicKeyInfo field contains a KEA key, the algorithm\n   identifier\
    \ and parameters shall be as defined in [sdn.701r]:\n      id-keyExchangeAlgorithm\
    \  OBJECT IDENTIFIER   ::=\n             { 2 16 840 1 101 2 1 1 22 }\n      KEA-Parms-Id\
    \     ::= OCTET STRING\n   CAs shall populate the parameters field of the AlgorithmIdentifier\n\
    \   within the subjectPublicKeyInfo field of each certificate containing\n   a\
    \ KEA public key with an 80-bit parameter identifier (OCTET STRING),\n   also\
    \ known as the domain identifier. The domain identifier will be\n   computed in\
    \ three steps: (1) the KEA parameters are DER encoded using\n   the Dss-Parms\
    \ structure; (2) a 160-bit SHA-1 hash is generated from\n   the parameters; and\
    \ (3) the 160-bit hash is reduced to 80-bits by\n   performing an \"exclusive\
    \ or\" of the 80 high order bits with the 80\n   low order bits.  The resulting\
    \ value is encoded such that the most\n   significant byte of the 80-bit value\
    \ is the first octet in the octet\n   string.\n   The Dss-Parms is provided in\
    \ [RFC 2459] and reproduced below for\n   completeness.\n        Dss-Parms  ::=\
    \  SEQUENCE  {\n            p             INTEGER,\n            q            \
    \ INTEGER,\n            g             INTEGER  }\n"
- title: 3.1.2.  Encoding of KEA Public Keys
  contents:
  - "3.1.2.  Encoding of KEA Public Keys\n   A KEA public key, y, is conveyed in the\
    \ subjectPublicKey BIT STRING\n   such that the most significant bit (MSB) of\
    \ y becomes the MSB of the\n   BIT STRING value field and the least significant\
    \ bit (LSB) of y\n   becomes the LSB of the BIT STRING value field.  This results\
    \ in the\n   following encoding: BIT STRING tag, BIT STRING length, 0 (indicating\n\
    \   that there are zero unused bits in the final octet of y), BIT STRING\n   value\
    \ field including y.\n"
- title: 3.2.  Key Usage Extension in KEA certificates
  contents:
  - "3.2.  Key Usage Extension in KEA certificates\n   The key usage extension may\
    \ optionally appear in a KEA certificate.\n   If a KEA certificate includes the\
    \ keyUsage extension, only the\n   following values may be asserted:\n      keyAgreement;\n\
    \      encipherOnly; and\n      decipherOnly.\n   The encipherOnly and decipherOnly\
    \ values may only be asserted if the\n   keyAgreement value is also asserted.\
    \  At most one of encipherOnly and\n   decipherOnly shall be asserted in keyUsage\
    \ extension.  Generally, the\n   keyAgreement value is asserted without either\
    \ the encipherOnly or\n   decipherOnly value being asserted.\n"
- title: 4. ASN.1 Modules
  contents:
  - '4. ASN.1 Modules

    '
- title: 4.1 1988 Syntax
  contents:
  - "4.1 1988 Syntax\n   PKIXkea88 {iso(1) identified-organization(3) dod(6)\n   \
    \         internet(1) security(5) mechanisms(5) pkix(7)\n            id-mod(0)\
    \ id-mod-kea-profile-88(7) }\n   BEGIN ::=\n   -- EXPORTS ALL --\n   -- IMPORTS\
    \ NONE --\n      id-keyExchangeAlgorithm  OBJECT IDENTIFIER   ::=\n          \
    \   { 2 16 840 1 101 2 1 1 22 }\n      KEA-Parms-Id     ::= OCTET STRING\n   END\n"
- title: 4.2 1993 Syntax
  contents:
  - "4.2 1993 Syntax\n      PKIXkea93 {iso(1) identified-organization(3) dod(6)\n\
    \            internet(1) security(5) mechanisms(5) pkix(7)\n            id-mod(0)\
    \ id-mod-kea-profile-93(8) }\n      BEGIN ::=\n   -- EXPORTS ALL --\n   IMPORTS\
    \         ALGORITHM-ID\n           FROM PKIX1Explicit93 {iso(1) identified-organization(3)\n\
    \           dod(6) internet(1) security(5) mechanisms(5) pkix(7)\n           id-mod(0)\
    \ id-pkix1-explicit-93(3) }\n     KeaPublicKey ALGORITHM-ID ::=  { OID id-keyExchangeAlgorithm\n\
    \                                     PARMS KEA-Parms-Id }\n      id-keyExchangeAlgorithm\
    \  OBJECT IDENTIFIER   ::=\n             { 2 16 840 1 101 2 1 1 22 }\n      KEA-Parms-Id\
    \     ::= OCTET STRING\n   END\n"
- title: 5. References
  contents:
  - "5. References\n   [KEA]      \"Skipjack and KEA Algorithm Specification\", Version\
    \ 2.0,\n              29 May 1998. available from\n              http://csrc.nist.gov/encryption/skipjack-kea.htm\n\
    \   [SDN.701R] SDN.701, \"Message Security Protocol\", Revision 4.0\n        \
    \      1996-06-07 with \"Corrections to Message Security Protocol,\n         \
    \     SDN.701, Rev 4.0, 96-06-07.\" August 30, 1996.\n   [RFC 2459] Housley, R.,\
    \ Ford, W., Polk, W. and D. Solo \"Internet\n              X.509 Public Key Infrastructure:\
    \ X.509 Certificate and CRL\n              Profile\", RFC 2459, January 1999.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   This specification is devoted to the format and\
    \ encoding of KEA keys\n   in X.509 certificates.  Since certificates are digitally\
    \ signed, no\n   additional integrity service is necessary. Certificates need\
    \ not be\n   kept secret, and unrestricted and anonymous access to certificates\n\
    \   and CRLs has no security implications.\n   However, security factors outside\
    \ the scope of this specification\n   will affect the assurance provided to certificate\
    \ users.  This\n   section highlights critical issues that should be considered\
    \ by\n   implementors, administrators, and users.\n   The procedures performed\
    \ by CAs and RAs to validate the binding of\n   the subject's identity of their\
    \ public key greatly affect the\n   assurance that should be placed in the certificate.\
    \  Relying parties\n   may wish to review the CA's certificate practice statement.\n\
    \   The protection afforded private keys is a critical factor in\n   maintaining\
    \ security.  Failure of users to protect their KEA private\n   keys will permit\
    \ an attacker to masquerade as them, or decrypt their\n   personal information.\n\
    \   The availability and freshness of revocation information will affect\n   the\
    \ degree of assurance that should be placed in a certificate.\n   While certificates\
    \ expire naturally, events may occur during its\n   natural lifetime which negate\
    \ the binding between the subject and\n   public key.  If revocation information\
    \ is untimely or unavailable,\n   the assurance associated with the binding is\
    \ clearly reduced.\n   Similarly, implementations of the Path Validation mechanism\
    \ described\n   in section 6 that omit revocation checking provide less assurance\n\
    \   than those that support it.\n   The path validation algorithm specified in\
    \ [RFC 2459] depends on the\n   certain knowledge of the public keys (and other\
    \ information) about\n   one or more trusted CAs. The decision to trust a CA is\
    \ an important\n   decision as it ultimately determines the trust afforded a\n\
    \   certificate.  The authenticated distribution of trusted CA public\n   keys\
    \ (usually in the form of a \"self-signed\" certificate) is a\n   security critical\
    \ out of band process that is beyond the scope of\n   this specification.\n  \
    \ In addition, where a key compromise or CA failure occurs for a\n   trusted CA,\
    \ the user will need to modify the information provided to\n   the path validation\
    \ routine.  Selection of too many trusted CAs will\n   make the trusted CA information\
    \ difficult to maintain.  On the other\n   hand, selection of only one trusted\
    \ CA may limit users to a closed\n   community of users until a global PKI emerges.\n\
    \   The quality of implementations that process certificates may also\n   affect\
    \ the degree of assurance provided.  The path validation\n   algorithm described\
    \ in section 6 relies upon the integrity of the\n   trusted CA information, and\
    \ especially the integrity of the public\n   keys associated with the trusted\
    \ CAs.  By substituting public keys\n   for which an attacker has the private\
    \ key, an attacker could trick\n   the user into accepting false certificates.\n\
    \   The binding between a key and certificate subject cannot be stronger\n   than\
    \ the cryptographic module implementation and algorithms used to\n   generate\
    \ the signature.\n"
- title: 7. Authors' Addresses
  contents:
  - "7. Authors' Addresses\n   Russell Housley\n   SPYRUS\n   381 Elden Street\n \
    \  Suite 1120\n   Herndon, VA 20170\n   USA\n   EMail: housley@spyrus.com\n  \
    \ Tim Polk\n   NIST\n   Building 820, Room 426\n   Gaithersburg, MD 20899\n  \
    \ USA\n   EMail: wpolk@nist.gov\n"
- title: 8.  Full Copyright Statement
  contents:
  - "8.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
