- title: __initial_text__
  contents:
  - '                  Differentiated Services and Tunnels

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document considers the interaction of Differentiated Services\n\
    \   (diffserv) (RFC 2474, RFC 2475) with IP tunnels of various forms.\n   The\
    \ discussion of tunnels in the diffserv architecture (RFC 2475)\n   provides insufficient\
    \ guidance to tunnel designers and implementers.\n   This document describes two\
    \ conceptual models for the interaction of\n   diffserv with Internet Protocol\
    \ (IP) tunnels and employs them to\n   explore the resulting configurations and\
    \ combinations of\n   functionality.  An important consideration is how and where\
    \ it is\n   appropriate to perform diffserv traffic conditioning in the presence\n\
    \   of tunnel encapsulation and decapsulation.  A few simple mechanisms\n   are\
    \ also proposed that limit the complexity that tunnels would\n   otherwise add\
    \ to the diffserv traffic conditioning model.  Security\n   considerations for\
    \ IPSec tunnels limit the possible functionality in\n   some circumstances.\n"
- title: 1. Conventions used in this document
  contents:
  - "1. Conventions used in this document\n   An IP tunnel encapsulates IP traffic\
    \ in another IP header as it\n   passes through the tunnel; the presence of these\
    \ two IP headers is a\n   defining characteristic of IP tunnels, although there\
    \ may be\n   additional headers inserted between the two IP headers.  The inner\
    \ IP\n   header is that of the original traffic; an outer IP header is\n   attached\
    \ and detached at tunnel endpoints.  In general, intermediate\n   network nodes\
    \ between tunnel endpoints operate solely on the outer IP\n   header, and hence\
    \ diffserv-capable intermediate nodes access and\n   modify only the DSCP field\
    \ in the outer IP header.  The terms\n   \"tunnel\" and \"IP tunnel\" are used\
    \ interchangeably in this document.\n   For simplicity, this document does not\
    \ consider tunnels other than IP\n   tunnels (i.e., for which there is no encapsulating\
    \ IP header), such\n   as MPLS paths and \"tunnels\" formed by encapsulation in\
    \ layer 2 (link)\n   headers, although the conceptual models and approach described\
    \ here\n   may be useful in understanding the interaction of diffserv with such\n\
    \   tunnels.\n   This analysis considers tunnels to be unidirectional; bi-directional\n\
    \   tunnels are considered to be composed of two unidirectional tunnels\n   carrying\
    \ traffic in opposite directions between the same tunnel\n   endpoints.  A tunnel\
    \ consists of an ingress where traffic enters the\n   tunnel and is encapsulated\
    \ by the addition of the outer IP header, an\n   egress where traffic exits the\
    \ tunnel and is decapsulated by the\n   removal of the outer IP header, and intermediate\
    \ nodes through which\n   tunneled traffic passes between the ingress and egress.\
    \  This\n   document does not make any assumptions about routing and forwarding\n\
    \   of tunnel traffic, and in particular assumes neither the presence nor\n  \
    \ the absence of route pinning in any form.\n"
- title: 2. Diffserv and Tunnels Overview
  contents:
  - "2. Diffserv and Tunnels Overview\n   Tunnels range in complexity from simple\
    \ IP-in-IP tunnels [RFC 2003]\n   to more complex multi-protocol tunnels, such\
    \ as IP in PPP in L2TP in\n   IPSec transport mode [RFC 1661, RFC 2401, RFC 2661].\
    \  The most\n   general tunnel configuration is one in which the tunnel is not\
    \ end-\n   to-end, i.e., the ingress and egress nodes are not the source and\n\
    \   destination nodes for traffic carried by the tunnel; such a tunnel\n   may\
    \ carry traffic with multiple sources and destinations.  If the\n   ingress node\
    \ is the end-to-end source of all traffic in the tunnel,\n   the result is a simplified\
    \ configuration to which much of the\n   analysis and guidance in this document\
    \ are applicable, and likewise\n   if the egress node is the end-to-end destination.\n\
    \   A primary concern for differentiated services is the use of the\n   Differentiated\
    \ Services Code Point (DSCP) in the IP header [RFC 2474,\n   RFC 2475].  The diffserv\
    \ architecture permits intermediate nodes to\n   examine and change the value\
    \ of the DSCP, which may result in the\n   DSCP value in the outer IP header being\
    \ modified between tunnel\n   ingress and egress.  When a tunnel is not end-to-end,\
    \ there are\n   circumstances in which it may be desirable to propagate the DSCP\n\
    \   and/or some of the information that it contains to the outer IP\n   header\
    \ on ingress and/or back to inner IP header on egress.  The\n   current situation\
    \ facing tunnel implementers is that [RFC 2475]\n   offers incomplete guidance.\
    \  Guideline G.7 in Section 3 is an\n   example, as some PHB specifications have\
    \ followed it by explicitly\n   specifying the PHBs that may be used in the outer\
    \ IP header for\n   tunneled traffic.  This is overly restrictive; for example,\
    \ if a\n   specification requires that the same PHB be used in both the inner\n\
    \   and outer IP headers, traffic conforming to that specification cannot\n  \
    \ be tunneled across domains or networks that do not support that PHB.\n   A more\
    \ flexible approach that should be used instead is to describe\n   the behavioral\
    \ properties of a PHB that are important to preserve\n   when traffic is tunneled\
    \ and allow the outer IP header to be marked\n   in any fashion that is sufficient\
    \ to preserve those properties.\n   This document proposes an approach in which\
    \ traffic conditioning is\n   performed in series with tunnel ingress or egress\
    \ processing, rather\n   than in parallel.  This approach does not create any\
    \ additional paths\n   that transmit information across a tunnel endpoint, as\
    \ all diffserv\n   information is contained in the DSCPs in the IP headers.  The\
    \ IPSec\n   architecture [RFC 2401] requires that this be the case to preserve\n\
    \   security properties at the egress of IPSec tunnels, but this approach\n  \
    \ also avoids complicating diffserv traffic conditioning blocks by\n   introducing\
    \ out-of-band inputs.  A consequence of this approach is\n   that the last sentence\
    \ of Guideline G.7 in Section 3 of [RFC 2475]\n   becomes moot because there are\
    \ no tunnel egress diffserv components\n   that have access to both the inner\
    \ and outer DSCPs.\n   An additional advantage of this traffic conditioning approach\
    \ is that\n   it places no additional restrictions on the positioning of diffserv\n\
    \   domain boundaries with respect to traffic conditioning and tunnel\n   encapsulation/decapsulation\
    \ components.  An interesting class of\n   configurations involves a diffserv\
    \ domain boundary that passes\n   through (i.e., divides) a network node; such\
    \ a boundary can be split\n   to create a DMZ-like region between the domains\
    \ that contains the\n   tunnel encapsulation or decapsulation processing.  Diffserv\
    \ traffic\n   conditioning is not appropriate for such a DMZ-like region, as\n\
    \   traffic conditioning is part of the operation and management of\n   diffserv\
    \ domains.\n"
- title: 3. Conceptual Models for Diffserv Tunnels
  contents:
  - "3. Conceptual Models for Diffserv Tunnels\n   This analysis introduces two conceptual\
    \ traffic conditioning models\n   for IP tunnels based on an initial discussion\
    \ that assumes a fully\n   diffserv-capable network.  Configurations in which\
    \ this is not the\n   case are taken up in Section 3.2.\n"
- title: 3.1 Conceptual Models for Fully DS-capable Configurations
  contents:
  - "3.1 Conceptual Models for Fully DS-capable Configurations\n   The first conceptual\
    \ model is a uniform model that views IP tunnels\n   as artifacts of the end to\
    \ end path from a traffic conditioning\n   standpoint; tunnels may be necessary\
    \ mechanisms to get traffic to its\n   destination(s), but have no significant\
    \ impact on traffic\n   conditioning.  In this model, any packet has exactly one\
    \ DS Field\n   that is used for traffic conditioning at any point, namely the\
    \ DS\n   Field in the outermost IP header; any others are ignored.\n   Implementations\
    \ of this model copy the DSCP value to the outer IP\n   header at encapsulation\
    \ and copy the outer header's DSCP value to the\n   inner IP header at decapsulation.\
    \  Use of this model allows IP\n   tunnels to be configured without regard to\
    \ diffserv domain boundaries\n   because diffserv traffic conditioning functionality\
    \ is not impacted\n   by the presence of IP tunnels.\n   The second conceptual\
    \ model is a pipe model that views an IP tunnel\n   as hiding the nodes between\
    \ its ingress and egress so that they do\n   not participate fully in traffic\
    \ conditioning.  In this model, a\n   tunnel egress node uses traffic conditioning\
    \ information conveyed\n   from the tunnel ingress by the DSCP value in the inner\
    \ header, and\n   ignores (i.e., discards) the DSCP value in the outer header.\
    \  The\n   pipe model cannot completely hide traffic conditioning within the\n\
    \   tunnel, as the effects of dropping and shaping at intermediate tunnel\n  \
    \ nodes may be visible at the tunnel egress and beyond.\n   The pipe model has\
    \ traffic conditioning consequences when the ingress\n   and egress nodes are\
    \ in different diffserv domains.  In such a\n   situation, the egress node must\
    \ perform traffic conditioning to\n   ensure that the traffic exiting the tunnel\
    \ has DSCP values acceptable\n   to the egress diffserv domain (see Section 6\
    \ of the diffserv\n   architecture [RFC 2475]).  An inter-domain TCA (Traffic\
    \ Conditioning\n   Agreement) between the diffserv domains containing the tunnel\
    \ ingress\n   and egress nodes may be used to reduce or eliminate egress traffic\n\
    \   conditioning.  Complete elimination of egress traffic conditioning\n   requires\
    \ that the diffserv domains at ingress and egress have\n   compatible service\
    \ provisioning policies for the tunneled traffic and\n   support all of the PHB\
    \ groups and DSCP values used for that traffic\n   in a consistent fashion.  Examples\
    \ of this situation are provided by\n   some virtual private network tunnels;\
    \ it may be useful to view such\n   tunnels as linking the diffserv domains at\
    \ their endpoints into a\n   diffserv region by making the tunnel endpoints virtually\
    \ contiguous\n   even though they may be physically separated by intermediate\
    \ network\n   nodes.\n   The pipe model is also appropriate for situations in\
    \ which the DSCP\n   itself carries information through the tunnel.  For example,\
    \ if\n   transit between two domains is obtained via a path that uses the EF\n\
    \   PHB [RFC 2598], the drop precedence information in the AF PHB DSCP\n   values\
    \ [RFC 2597] will be lost unless something is done to preserve\n   it; an IP tunnel\
    \ is one possible preservation mechanism.  A path that\n   crosses one or more\
    \ non-diffserv domains between its DS-capable\n   endpoints may experience a similar\
    \ information loss phenomenon if a\n   tunnel is not used due to the limited set\
    \ of DSCP codepoints that are\n   compatible with such domains.\n"
- title: 3.2 Considerations for Partially DS-capable Configurations
  contents:
  - "3.2 Considerations for Partially DS-capable Configurations\n   If only the tunnel\
    \ egress node is DS-capable, [RFC 2475] requires the\n   egress node to perform\
    \ any edge traffic conditioning needed by the\n   diffserv domain for tunneled\
    \ traffic entering from outside the\n   domain.  If the egress node would not\
    \ otherwise be a DS edge node,\n   one way to meet this requirement is to perform\
    \ edge traffic\n   conditioning at an appropriate upstream DS edge node within\
    \ the\n   tunnel, and copy the DSCP value from the outer IP header to the inner\n\
    \   IP header as part of tunnel decapsulation processing; this applies\n   the\
    \ uniform model to the portion of the tunnel within the egress\n   node's diffserv\
    \ domain.  A second alternative is to discard the outer\n   DSCP value as part\
    \ of decapsulation processing, reducing the\n   resulting traffic conditioning\
    \ problem and requirements to those of\n   an ordinary DS ingress node.  This\
    \ applies the pipe model to the\n   portion of the tunnel within the egress node's\
    \ diffserv domain and\n   hence the adjacent upstream node for DSCP marking purposes\
    \ is the\n   tunnel ingress node, rather than the immediately upstream\n   intermediate\
    \ tunnel node.\n   If only the tunnel ingress node is DS-capable, [RFC 2475] requires\n\
    \   that traffic emerging from the tunnel be compatible with the network\n   at\
    \ the tunnel egress.  If tunnel decapsulation processing discards\n   the outer\
    \ header's DSCP value without changing the inner header's\n   DSCP value, the\
    \ DS-capable tunnel ingress node is obligated to set\n   the inner header's DSCP\
    \ to a value compatible with the network at the\n   tunnel egress.  The value\
    \ 0 (DSCP of 000000) is used for this purpose\n   by a number of existing tunnel\
    \ implementations.  If the egress\n   network implements IP precedence as specified\
    \ in [RFC 791], then some\n   or all of the eight class selector DSCP codepoints\
    \ defined in [RFC\n   2474] may be usable.  DSCP codepoints other than the class\
    \ selectors\n   are not generally suitable for this purpose, as correct operation\n\
    \   would usually require diffserv functionality at the DS-incapable\n   tunnel\
    \ egress node.\n"
- title: 4. Ingress Functionality
  contents:
  - "4. Ingress Functionality\n   As described in Section 3 above, this analysis is\
    \ based on an\n   approach in which diffserv functionality and/or out-of-band\n\
    \   communication paths are not placed in parallel with tunnel\n   encapsulation\
    \ processing.  This allows three possible locations for\n   traffic conditioning\
    \ with respect to tunnel encapsulation processing,\n   as shown in the following\
    \ diagram that depicts the flow of IP headers\n   through tunnel encapsulation:\n\
    \                                        +--------- [2 - Outer] -->>\n       \
    \                                /\n                                      /\n\
    \   >>---- [1 - Before] -------- Encapsulate ------ [3 - Inner] -->>\n   Traffic\
    \ conditioning at [1 - Before] is logically separate from the\n   tunnel, as it\
    \ is not impacted by the presence of tunnel\n   encapsulation, and hence should\
    \ be allowed by tunnel designs and\n   specifications.  Traffic conditioning at\
    \ [2 - Outer] may interact\n   with tunnel protocols that are sensitive to packet\
    \ reordering; such\n   tunnels may need to limit the functionality at [2 - Outer]\
    \ as\n   discussed further in Section 5.1.  In the absence of reordering\n   sensitivity,\
    \ no additional restrictions should be necessary, although\n   traffic conditioning\
    \ at [2 - Outer] may be responsible for remarking\n   traffic to be compatible\
    \ with the next diffserv domain that the\n   tunneled traffic enters.\n   In contrast,\
    \ the [3 - Inner] location is difficult to utilize for\n   traffic conditioning\
    \ because it requires functionality that reaches\n   inside the packet to operate\
    \ on the inner IP header.  This is\n   impossible for IPSec tunnels and any other\
    \ tunnels that are encrypted\n   or employ cryptographic integrity checks.  Hence\
    \ traffic conditioning\n   at [3 - Inner] can often only be performed as part\
    \ of tunnel\n   encapsulation processing, complicating both the encapsulation\
    \ and\n   traffic conditioning implementations.  In many cases, the desired\n\
    \   functionality can be achieved via a combination of traffic\n   conditioners\
    \ in the other two locations, both of which can be\n   specified and implemented\
    \ independently of tunnel encapsulation.\n   An exception for which traffic conditioning\
    \ functionality is\n   necessary at [3 - Inner] occurs when the DS-incapable tunnel\
    \ egress\n   discards the outer IP header as part of decapsulation processing,\
    \ and\n   hence the DSCP in the inner IP header must be compatible with the\n\
    \   egress network.  Setting the inner DSCP to 0 as part of encapsulation\n  \
    \ addresses most of these cases, and the class selector DCSP codepoint\n   values\
    \ are also useful for this purpose, as they are valid for\n   networks that support\
    \ IP precedence [RFC 791].\n   The following table summarizes the achievable relationships\
    \ among the\n   before (B), outer (O), and inner (I) DSCP values and the\n   corresponding\
    \ locations of traffic conditioning logic.\n   Relationship       Traffic Conditioning\
    \ Location(s)\n   ------------       --------------------------------\n   B  =\
    \ I  = O        No traffic conditioning required\n   B != I  = O        [1 - Before]\n\
    \   B  = I != O        [2 - Outer]\n   B  = O != I        Limited support as part\
    \ of encapsulation:\n                        I can be set to 000000 or possibly\
    \ one of\n                        the class selector code points.\n   B != I !=\
    \ O        Some combination of the above three scenarios.\n   A combination of\
    \ [1 - Before] and [2 - Outer] is applicable to many\n   cases covered by the\
    \ last two lines of the table, and may be\n   preferable to deploying functionality\
    \ at [3 - Inner].  Traffic\n   conditioning may still be required for purposes\
    \ such as rate and\n   burst control even if DSCP values are not changed.\n"
- title: 4.1 Ingress DSCP Selection and Reordering
  contents:
  - "4.1 Ingress DSCP Selection and Reordering\n   It may be necessary or desirable\
    \ to limit the DS behavior aggregates\n   that utilize an IP tunnel that is sensitive\
    \ to packet reordering\n   within the tunnel.  The diffserv architecture allows\
    \ packets to be\n   reordered when they belong to behavior aggregates among which\n\
    \   reordering is permitted; for example, reordering is allowed among\n   behavior\
    \ aggregates marked with different Class Selector DSCPs [RFC\n   2474].  IPSec\
    \ [RFC 2401] and L2TP [RFC 2661] provide examples of\n   tunnels that are sensitive\
    \ to packet reordering.  If IPSec's anti-\n   replay support is configured, audit\
    \ events are generated in response\n   to packet reordering that exceeds certain\
    \ levels, with the audit\n   events indicating potential security issues.  L2TP\
    \ can be configured\n   to restore the ingress ordering of packets at tunnel egress,\
    \ not only\n   undoing any differentiation based on reordering within the tunnel,\n\
    \   but also negatively impacting the traffic (e.g., by increasing\n   latency).\
    \  The uniform model cannot be completely applied to such\n   tunnels, as arbitrary\
    \ mixing of traffic from different behavior\n   aggregates can cause these undesirable\
    \ interactions.\n   The simplest method of avoiding undesirable interactions of\n\
    \   reordering with reordering-sensitive tunnel protocols and features is\n  \
    \ not to employ the reordering-sensitive protocols or features, but\n   this is\
    \ often not desirable or even possible.  When such protocols or\n   features are\
    \ used, interactions can be avoided by ensuring that the\n   aggregated flows\
    \ through the tunnel are marked at [2 - Outer] to\n   constitute a single ordered\
    \ aggregate (i.e., the PHBs used share an\n   ordering constraint that prevents\
    \ packets from being reordered).\n   Tunnel protocol specifications should indicate\
    \ both whether and under\n   what circumstances a tunnel should be restricted\
    \ to a single ordered\n   aggregate as well as the consequences of deviating from\
    \ that\n   restriction.  For the IPSec and L2TP examples discussed above, the\n\
    \   specifications should restrict each tunnel to a single ordered\n   aggregate\
    \ when protocol features sensitive to reordering are\n   configured, and may adopt\
    \ the approach of restricting all tunnels in\n   order to avoid unexpected consequences\
    \ of changes in protocol\n   features or composition of tunneled traffic.  Diffserv\n\
    \   implementations should not attempt to look within such tunnels to\n   provide\
    \ reordering-based differentiation to the encapsulated\n   microflows.  If reordering-based\
    \ differentiation is desired within\n   such tunnels, multiple parallel tunnels\
    \ between the same endpoints\n   should be used.  This enables reordering among\
    \ packets in different\n   tunnels to coexist with an absence of packet reordering\
    \ within each\n   individual tunnel.  For IPSec and related security protocols,\
    \ there\n   is no cryptographic advantage to using a single tunnel for multiple\n\
    \   ordered aggregates rather than multiple tunnels because any traffic\n   analysis\
    \ made possible by the use of multiple tunnels can also be\n   performed based\
    \ on the DSCPs in the outer headers of traffic in a\n   single tunnel.  In general,\
    \ the additional resources required to\n   support multiple tunnels (e.g., cryptographic\
    \ contexts), and the\n   impact of multiple tunnels on network management should\
    \ be considered\n   in determining whether and where to deploy them.\n"
- title: 4.2 Tunnel Selection
  contents:
  - "4.2 Tunnel Selection\n   The behavioral characteristics of a tunnel are an important\n\
    \   consideration in determining what traffic should utilize the tunnel.\n   This\
    \ involves the service provisioning policies of all the\n   participating domains,\
    \ not just the PHBs and DSCPs marked on the\n   traffic at [2 - Outer].  For example,\
    \ while it is in general a bad\n   idea to tunnel EF PHB traffic via a Default\
    \ PHB tunnel, this can be\n   acceptable if the EF traffic is the only traffic\
    \ that utilizes the\n   tunnel, and the tunnel is provisioned in a fashion adequate\
    \ to\n   preserve the behavioral characteristics required by the EF PHB.\n   Service\
    \ provisioning policies are responsible for preventing\n   mismatches such as\
    \ forwarding EF traffic via an inadequately\n   provisioned Default tunnel.  When\
    \ multiple parallel tunnels with\n   different behavioral characteristics are\
    \ available, service\n   provisioning policies are responsible for determining\
    \ which flows\n   should use which tunnels.  Among the possibilities is a coarse\n\
    \   version of the uniform tunnel model in which the inner DSCP value is\n   used\
    \ to select a tunnel that will forward the traffic using a\n   behavioral aggregate\
    \ that is compatible with the traffic's PHB.\n"
- title: 5. Egress Functionality
  contents:
  - "5. Egress Functionality\n   As described in Section 3 above, this analysis is\
    \ based on an\n   approach in which diffserv functionality and/or out-of-band\n\
    \   communication paths are not placed in parallel with tunnel\n   encapsulation\
    \ processing.  This allows three possible locations for\n   traffic conditioners\
    \ with respect to tunnel decapsulation processing,\n   as shown in the following\
    \ diagram that depicts the flow of IP headers\n   through tunnel decapsulation:\n\
    \   >>----[5 - Outer]-------------+\n                                  \\\n  \
    \                                 \\\n   >>----[4 - Inner] --------- Decapsulate\
    \ ---- [6 - After] -->>\n   Traffic conditioning at [5 - Outer] and [6 - After]\
    \ is logically\n   separate from the tunnel, as it is not impacted by the presence\
    \ of\n   tunnel decapsulation.  Tunnel designs and specifications should allow\n\
    \   diffserv traffic conditioning at these locations. Such conditioning\n   can\
    \ be viewed as independent of the tunnel, i.e., [5 - Outer] is\n   traffic conditioning\
    \ that takes place prior to tunnel egress, and\n   [6 - After] is traffic conditioning\
    \ that takes place after egress\n   decapsulation.  An important exception is\
    \ that the configuration of a\n   tunnel (e.g., the absence of traffic conditioning\
    \ at tunnel ingress)\n   and/or the diffserv domains involved may require that\
    \ all traffic\n   exiting a tunnel pass through diffserv traffic conditioning\
    \ to\n   fulfill the diffserv edge node traffic conditioning responsibilities\n\
    \   of the tunnel egress node.  Tunnel designers are strongly encouraged\n   to\
    \ include the ability to require that all traffic exiting a tunnel\n   pass through\
    \ diffserv traffic conditioning in order to ensure that\n   traffic exiting the\
    \ node is compatible with the egress node's\n   diffserv domain.\n   In contrast,\
    \ the [4 - Inner] location is difficult to employ for\n   traffic conditioning\
    \ because it requires reaching inside the packet\n   to operate on the inner IP\
    \ header.  Unlike the [3 - Inner] case for\n   encapsulation, there is no need\
    \ for functionality to be performed at\n   [4- Inner], as diffserv traffic conditioning\
    \ can be appended to the\n   tunnel decapsulation (i.e., performed at [6 - After]).\n"
- title: 5.1 Egress DSCP Selection
  contents:
  - "5.1 Egress DSCP Selection\n   The elimination of parallel functionality and data\
    \ paths from\n   decapsulation causes a potential loss of information.  As shown\
    \ in\n   the above diagram, decapsulation combines and reduces two DSCP values\n\
    \   to one DSCP value, losing information in the most general case, even\n   if\
    \ arbitrary functionality is allowed.  Beyond this, allowing\n   arbitrary functionality\
    \ poses a structural problem, namely that the\n   DSCP value from the outer IP\
    \ header would have to be presented as an\n   out-of-band input to the traffic\
    \ conditioning block at [6 - After],\n   complicating the traffic conditioning\
    \ model.\n   To avoid such complications, the simpler approach of statically\n\
    \   selecting either the inner or outer DSCP value at decapsulation is\n   recommended,\
    \ leaving the full generality of traffic conditioning\n   functionality to be\
    \ implemented at [5 - Outer] and/or [6 - After].\n   Tunnels should support static\
    \ selection of one or the other DSCP\n   value at tunnel egress.  The rationale\
    \ for this approach is usually\n   only one of the two DSCP values contains useful\
    \ information.  The\n   conceptual model for the tunnel provides a strong indication\
    \ of which\n   one contains useful information; the outer DSCP value usually\n\
    \   contains the useful information for tunnels based on the uniform\n   model,\
    \ and the inner DSCP value usually contains the useful\n   information for tunnels\
    \ based on the pipe model.  IPSec tunnels are\n   usually based on the pipe model,\
    \ and for security reasons are\n   currently required to select the inner DSCP\
    \ value; they should not be\n   configured to select the outer DSCP value in the\
    \ absence of an\n   adequate security analysis of the resulting risks and implications.\n"
- title: 5.2 Egress DSCP Selection Case Study
  contents:
  - "5.2 Egress DSCP Selection Case Study\n   As a sanity check on the egress DSCP\
    \ selection approach proposed\n   above, this subsection considers a situation\
    \ in which a more complex\n   approach might be required.  Statically choosing\
    \ a single DSCP value\n   may not work well when both DSCPs are carrying information\
    \ that is\n   relevant to traffic conditioning.\n   As an example, consider a\
    \ situation in which different AF groups [RFC\n   2597] are used by the two domains\
    \ at the tunnel endpoints, and there\n   is an intermediate domain along the tunnel\
    \ using RFC 791 IP\n   precedences that is transited by setting the DSCP to zero.\
    \  This\n   situation is shown in the following IP header flow diagram where I\
    \ is\n   the tunnel ingress node, E is the tunnel egress node and the vertical\n\
    \   lines are domain boundaries.  The node at the left-hand vertical line\n  \
    \ sets the DSCP in the outer header to 0 in order to obtain\n   compatibility\
    \ with the middle domain:\n                        |                   |\n   \
    \               +-----|-------------------|------+\n                 /      |\
    \                   |       \\\n   >>-----------I-------|-------------------|--------E---------->>\n\
    \                        |                   |\n      Ingress DS Domain      \
    \  RFC 791         Egress DS domain\n                            IP Precedence\n\
    \                                Domain\n   In this situation, the DS edge node\
    \ for the egress domain (i.e., the\n   node at the right-hand vertical line) can\
    \ select the appropriate AF\n   group (e.g., via an MF classifier), but cannot\
    \ reconstruct the drop\n   precedence information that was removed from the outer\
    \ header when it\n   transited the RFC 791 domain (although it can construct new\n\
    \   information via metering and marking).  The original drop precedence\n   information\
    \ is preserved in the inner IP header's DSCP, and could be\n   combined at the\
    \ tunnel egress with the AF class selection\n   communicated via the outer IP\
    \ header's DSCP.  The marginal benefit of\n   being able to reuse the original\
    \ drop precedence information as\n   opposed to constructing new drop precedence\
    \ markings does not justify\n   the additional complexity introduced into tunnel\
    \ egress traffic\n   conditioners by making both DSCP values available to traffic\n\
    \   conditioning at [6 - After].\n"
- title: 6.  Diffserv and Protocol Translators
  contents:
  - "6.  Diffserv and Protocol Translators\n   A related issue involves protocol translators,\
    \ including those\n   employing the Stateless IP/ICMP Translation Algorithm [RFC\
    \ 2765].\n   These translators are not tunnels because they do not add or remove\
    \ a\n   second IP header to/from packets (e.g., in contrast to IPv6 over IPv4\n\
    \   tunnels [RFC 1933]) and hence do not raise concerns of information\n   propagation\
    \ between inner and outer IP headers.  The primary\n   interaction between translators\
    \ and diffserv is that the translation\n   boundary is likely to also be a diffserv\
    \ domain boundary (e.g., the\n   IPv4 and IPv6 domains may have different policies\
    \ for traffic\n   conditioning and DSCP usage), and hence such translators should\
    \ allow\n   the insertion of diffserv edge node processing (including traffic\n\
    \   conditioning) both before and after the translation processing.\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   The security considerations for the diffserv architecture\
    \ discussed\n   in [RFC 2474, RFC 2475] apply when tunnels are present.  One of\
    \ the\n   requirements is that a tunnel egress node in the interior of a\n   diffserv\
    \ domain is the DS ingress node for traffic exiting the\n   tunnel, and is responsible\
    \ for performing appropriate traffic\n   conditioning.  The primary security implication\
    \ is that the traffic\n   conditioning is responsible for dealing with theft-\
    \ and denial-of-\n   service threats posed to the diffserv domain by traffic exiting\
    \ from\n   the tunnel.  The IPSec architecture [RFC 2401] places a further\n \
    \  restriction on tunnel egress processing; the outer header is to be\n   discarded\
    \ unless the properties of the traffic conditioning to be\n   applied are known\
    \ and have been adequately analyzed for security\n   vulnerabilities.  This includes\
    \ both the [5 - Outer] and [6 - After]\n   traffic conditioning blocks on the\
    \ tunnel egress node, if present,\n   and may involve traffic conditioning performed\
    \ by an upstream DS-edge\n   node that is the DS domain ingress node for the encapsulated\
    \ tunneled\n   traffic.\n"
- title: 8. References
  contents:
  - "8. References\n   [RFC 791]  Postel, J., \"Internet Protocol\", STD 5, RFC 791,\
    \ September\n              1981.\n   [RFC 1661] Simpson, W., \"The Point-to-Point\
    \ Protocol (PPP)\", STD 51,\n              RFC 1661, July 1994.\n   [RFC 1933]\
    \ Gilligan, R. and E. Nordmark, \"Transition Mechanisms for\n              IPv6\
    \ Hosts and Routers\", RFC 1933, April 1996.\n   [RFC 2003] Perkins, C., \"IP\
    \ Encapsulation within IP\", RFC 2003,\n              October 1996.\n   [RFC 2401]\
    \ Kent, S. and R. Atkinson, \"Security Architecture for the\n              Internet\
    \ Protocol\", RFC 2401, November 1998.\n   [RFC 2474] Nichols, K., Blake, S.,\
    \ Baker, F. and D. Black,\n              \"Definition of the Differentiated Services\
    \ Field (DS\n              Field) in the IPv4 and IPv6 Headers\", RFC 2474, December\n\
    \              1998.\n   [RFC 2475] Blake, S., Black, D., Carlson, M., Davies,\
    \ E., Wang, Z.\n              and W. Weiss, \"An Architecture for Differentiated\n\
    \              Services\", RFC 2475, December 1998.\n   [RFC 2597] Heinanen, J.,\
    \ Baker, F., Weiss, W. and J. Wroclawski,\n              \"Assured Forwarding\
    \ PHB Group\", RFC 2597. June 1999.\n   [RFC 2598] Jacobson, V., Nichols, K. and\
    \ K. Poduri, \"An Expedited\n              Forwarding PHB\", RFC 2598, June 1999.\n\
    \   [RFC 2661] Townsley, W., Valencia, A., Rubens, A., Pall, G., Zorn, G.\n  \
    \            and B. Palter. \"Layer Two Tunneling Protocol \"L2TP\"\", RFC\n \
    \             2661, August 1999.\n   [RFC 2765] Nordmark, E., \"Stateless IP/ICMP\
    \ Translation Algorithm\n              (SIIT)\", RFC 2765, February 2000.\n"
- title: 9. Acknowledgments
  contents:
  - "9. Acknowledgments\n   Some of this material is based on discussions with Brian\
    \ Carpenter,\n   and in particular his presentation on this topic to the diffserv\
    \ WG\n   during the summer 1999 IETF meeting in Oslo.  Credit is also due to a\n\
    \   number of people working on tunnel specifications who have discovered\n  \
    \ limitations of the diffserv architecture [RFC 2475] in the area of\n   tunnels.\
    \  Their patience with the time it has taken to address this\n   set of issues\
    \ is greatly appreciated.  Finally, this material has\n   benefited from discussions\
    \ within the diffserv WG, both in meetings\n   and on the mailing list -- the\
    \ contributions of participants in those\n   discussions are gratefully acknowledged.\n"
- title: 10. Author's Address
  contents:
  - "10. Author's Address\n   David L. Black\n   EMC Corporation\n   42 South St.\n\
    \   Hopkinton, MA   01748\n   Phone: +1 (508) 435-1000 x75140\n   EMail: black_david@emc.com\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
