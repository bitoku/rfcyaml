- title: __initial_text__
  contents:
  - "               Chinese Lottery Cryptanalysis Revisited:\n                  The\
    \ Internet as a Codebreaking Tool\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document revisits the so-called Chinese Lottery\n   massively-parallel\
    \ cryptanalytic attack.  It explores Internet-based\n   analogues to the Chinese\
    \ Lottery, and their potentially-serious\n   consequences.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In 1991, Quisquater and Desmedt [DESMEDT91] proposed an\
    \ esoteric, but\n   technically sound, attack against DES or similar ciphers.\
    \  They\n   termed this attack the Chinese Lottery.  It was based on a\n   massively-parallel\
    \ hardware approach, using consumer electronics as\n   the \"hosts\" of the cipher-breaking\
    \ hardware.\n   In the decade since Quisquater and Desmedt proposed their Chinese\n\
    \   Lottery thought experiment, there has been considerable growth in a\n   number\
    \ of areas that make their thought experiment worth revisiting.\n   In 1991, the\
    \ Internet had approximately 8 million reachable hosts\n   attached to it and\
    \ in 2002, the number is a staggering 100 million\n   reachable hosts.  In the\
    \ time since the Chinese Lottery paper,\n   computer power available to the average\
    \ desktop user has grown by a\n   factor of approximately 150.\n"
- title: 2.  Dangerous Synergy
  contents:
  - "2.  Dangerous Synergy\n   The combined growth of the Internet, and the unstoppable\
    \ march of\n   Moore's Law have combined to create a dangerous potential for\n\
    \   brute-force cryptanalysis of existing crypto systems.\n   In the last few\
    \ years, several widescsale attacks by so-called\n   Internet Worms [SPAFF91]\
    \ have successfully compromised and infected\n   surprisingly-large numbers of\
    \ Internet-attached hosts.  In 2001, The\n   Cooperative Association for Internet\
    \ Data Analysis [CAIDA2001]\n   reported that the Code Red v2 worm was able to\
    \ infect over 350,000\n   hosts in its first 14 hours of operation.  The payload\
    \ of the Code\n   Red worm was mischief: the defacement of the host website with\
    \ a\n   political message.  It was bold, brash, and drew attention to itself\n\
    \   nearly immediately.\n   Consider for a moment, an Internet worm with a darker\
    \ and ultimately\n   more dangerous purpose: to brute-force cryptanalyse a message,\
    \ in\n   order to determine the key used with that message.  In order for the\n\
    \   worm to be successful, it must avoid detection for long enough to\n   build\
    \ up a significant level of infected systems, in order to have\n   enough aggregate\
    \ CPU cycles to complete the cryptanalysis.\n   Furthermore, our worm would need\
    \ to avoid detection for long enough\n   for the cracked key to be useful to the\
    \ owners of the worm.  Recent\n   research [USEN2002] on stealthy worms paints\
    \ a very dark picture\n   indeed.\n   Even after such a worm is detected it would\
    \ be nearly impossible to\n   tell whose key the worm was attacking.  Any realistic\
    \ attack payload\n   will have one or two pieces of ciphertext, and some known\
    \ plaintext,\n   or probable-plaintext characteristics associated with it; hardly\n\
    \   enough data to determine the likely victim.\n"
- title: 3.  Winner phone home
  contents:
  - "3.  Winner phone home\n   When a given instance of the worm determines the key,\
    \ it needs to\n   contact the originator in order to give them the key.  It has\
    \ to do\n   this in such a way as to minimize the probability that the originator\n\
    \   will get caught.\n   One such technique would be for the worm to public-key\
    \ encrypt the\n   key, under the public key(s) of the originator(s), and place\
    \ this in\n   some innocuous spot on the website of the compromised host.  The\
    \ worm\n   could also back-propagate so that a number of compromised websites\
    \ in\n   the topological neighborhood of the worm will also contain the data.\n\
    \   The file containing the key would be identified with some unique\n   keyword\
    \ which the originators occasionally look for using Internet\n   search engines.\
    \  The worm could make the process more efficient by\n   using the \"keyword registry\"\
    \ services of various Internet search\n   engines.\n   Another approach would\
    \ be to post a (possibly PGP-encrypted) message\n   to several newsgroups, through\
    \ an anonymous posting service.\n   Similarly, Internet \"chat\" services like\
    \ IRC could be used; indeed\n   there's an emerging tradition of using IRC and\
    \ similar services for\n   real-time, anonymous, control of worms and viruses.\n\
    \   Any of these methods can be used both to allow the \"winning\" worm\n   instance\
    \ to send results and for the originator to send new work for\n   the amassed\
    \ army of compromised systems.\n"
- title: 4.  Evaluating the threat
  contents:
  - "4.  Evaluating the threat\n   Both Internet growth and CPU performance follow\
    \ a reasonably\n   predictable doubling interval.  Performance of computing hardware\n\
    \   appears to still be following Moore's Law, in which performance\n   doubles\
    \ every 1.5 years.  Internet growth appears to be following a\n   doubling period\
    \ of 3 years.\n   By establishing a common epoch for both performance and Internet\n\
    \   growth, we can easily determine the likely attack time for any given\n   year,\
    \ based on a purely arithmetic approach.\n   A simplifying assumption is that\
    \ it is indeed possible to construct a\n   suitably-stealthy worm and that it\
    \ can achieve a steady-state\n   infection of about 0.5% of all attached hosts\
    \ on the Internet.\n   In 1995, J. Touch, at ISI, published a detailed performance\
    \ analysis\n   of MD5 [RFC1810].  At that time MD5 software performance peaked\
    \ at\n   87mbits/second, or an equivalent of 170,000 single-block MD5\n   operations\
    \ per second.  In the same year, peak DES performance was\n   about 50,000 setkey/encrypt\
    \ operations per second.\n   In 1995, the Internet had about 20,000,000 attached\
    \ hosts.  In 2002,\n   there are a staggering 100,000,000 attached hosts.\n  \
    \ A simple C program, given in Appendix A can be used to predict the\n   performance\
    \ of our hypothetical worm for any given year.  Running\n   this program for 2002\
    \ gives:\n       Year of estimate: 2002\n       For a total number of infected\
    \ hosts of 503968\n       aggregate performance: MD5 9.79e+11/sec DES 2.88e+11/sec\n\
    \       DES could be cracked in about 1.45 days\n       DES with 8 character passwords\
    \ could be cracked in 16.29 minutes\n       MD5 with 64-bit keys could be cracked\
    \ in about 218.04 days\n       MD5 with 8 character passwords could be cracked\
    \ in 4.79 minutes\n   The numbers given above suggest that an undetected attack\
    \ against\n   MD5, for a reasonable key length, isn't likely in 2002.  A successful\n\
    \   attack against DES, however, appears to be a near-certainty.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   DES has been shown to be weak in the recent past.\
    \  The success of the\n   EFF machine, described in [EFF98] shows how a massively-parallel\n\
    \   hardware effort can succeed relatively economically.  That this level\n  \
    \ of brute-force cryptanalytic strength could be made available without\n   custom\
    \ hardware is a sobering thought.  It is clear that DES needs to\n   be abandoned;\
    \ in favor of either 3DES or the newer AES [FIPS197].\n   The picture for MD5\
    \ (when used in simple MAC constructions) is much\n   brighter.  For short messages\
    \ long keys with MD5 are effectively\n   free, computationally, so it makes sense\
    \ to use the longest\n   architecturally-practical key lengths with MD5.\n   Operating\
    \ system software is becoming more complex and the\n   perpetrators of Internet\
    \ Worms, Viruses, Trojan Horses, and other\n   malware, are becoming more sophisticated.\
    \  While their aim has\n   largely been widescale vandalism, it seems reasonable\
    \ to assume that\n   their methods could be turned to a more focussed and perhaps\
    \ more\n   sinister activity.\n   As of February 2003, at least one worm, known\
    \ as W32/Opaserv.A has a\n   payload designed to implement a distributed DES cracker.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   John Morris, of Nortel IS, contributed the idea of anonymous\n\
    \   newsgroup posting.\n"
- title: 'Appendix A: Source Code'
  contents:
  - "Appendix A: Source Code\n   /*\n    * This program calculates the performance\
    \ of a hypothetical\n    *  \"Chinese Lottery\" brute-force cryptanalysis worm,\
    \ based on\n    *  the current date, estimates of Internet growth rate and\n \
    \   *  Moores Law.\n    *\n    */ #include <stdio.h> #include <math.h> /*\n  \
    \  * EPOCH for the calculations\n    */ #define EPOCH 1995.0 /*\n    * Size of\
    \ the Internet (ca 1995)\n    */ #define INTERNET_SIZE 20000000.0\n   /*\n   \
    \ * Software MD5 performance (ca 1995)\n    */ #define MD5PERF 170000.0\n   /*\n\
    \    * Software DES performance (ca 1995)\n    */ #define DESPERF 50000.0\n  \
    \ main (argc, argv) int argc; char **argv; {\n        double yeardiff;\n     \
    \   double cryptoperf, multiplier;\n        double cracktime;\n        yeardiff\
    \ = (double)atoi(argv[1]) - EPOCH;\n        /*\n         * Moores Law performance\
    \ double interval is 1.5 years\n         */\n        cryptoperf = yeardiff / 1.5;\n\
    \        cryptoperf = pow(2.0, cryptoperf);\n        /*\n         * Some fuzz\
    \ here--not all hosts will be the fastest available\n         */\n        cryptoperf\
    \ *= 0.450;\n        /*\n         * Internet size doubling interval is every 3\
    \ years\n         */\n        multiplier = yeardiff / 3.0;\n        multiplier\
    \ = pow(2.0, multiplier);\n        multiplier *= (INTERNET_SIZE*0.0050);\n   \
    \     fprintf (stderr, \"Year of estimate: %d\\n\", atoi(argv[1]));\n        fprintf\
    \ (stdout, \"For a total number of infected hosts of %d\\n\",\n             (int)multiplier);\n\
    \       fprintf (stdout, \"aggregate performance: MD5 %5.2e/sec DES\n        \
    \    %5.2e/sec\\n\",\n            MD5PERF*cryptoperf*multiplier,\n           \
    \ DESPERF*cryptoperf*multiplier);\n       cracktime = pow(2.0, 55.0);\n      \
    \ cracktime /= (DESPERF*cryptoperf*multiplier);\n       fprintf (stdout,\n   \
    \         \"DES could be cracked in about %3.2lf days\\n\",\n            cracktime/86400.0);\n\
    \       cracktime = pow(2.0, 8.0*6.0);\n       cracktime /= (DESPERF*cryptoperf*multiplier);\n\
    \       fprintf (stdout,\n            \"DES with 8 character passwords could be\
    \ cracked in\n            %3.2lf minutes\\n\",cracktime/60);\n       cracktime\
    \ = pow(2.0, 64.0);\n       cracktime /= (MD5PERF*cryptoperf*multiplier);\n  \
    \     fprintf (stdout,\n            \"MD5 with 64-bit keys could be cracked in\
    \ about\n            %3.2lf days\\n\", cracktime/86400.0);\n       cracktime =\
    \ pow(2.0, 8.0*6.0);\n       cracktime /= (MD5PERF*cryptoperf*multiplier);\n \
    \      fprintf (stdout,\n            \"MD5 with 8 character passwords could be\
    \ cracked in\n            %3.2lf minutes\\n\", cracktime/60); }\n"
- title: Normative References
  contents:
  - "Normative References\n   [DESMEDT91] \"Chinese Lotto as an Exhaustive Code-Breaking\
    \ Machine\".\n               J. Quisquater, Y. Desmedt, Computer, v. 24, n. 11,\
    \ Nov\n               1991, pp. 14-22.\n   [RFC1810]   Touch, J., \"Report on\
    \ MD5 Performance\", RFC 1810, June\n               1995.\n   [EFF98]     \"Cracking\
    \ DES: Secrets of Encryption Research, Wiretap\n               Politics & Chip\
    \ Design\", Electronic Frontier Foundation,\n               1998.\n   [CAIDA2001]\
    \ \"CAIDA Analysis of Code Red\"\n               http://www.caida.org/analysis/security/code-red/\n\
    \   [SPAFF91]   \"The Internet Worm Program: An Analysis\", Eugene\n         \
    \      Spafford, 1991.\n   [FIPS197]   \"Advanced Encryption Standard\", US FIPS197,\
    \ November,\n               2001.\n   [USEN2002]  \"How to 0wn the Internet in\
    \ Your Spare Time\", Proc. 11th\n               Usenix Security Symposium, 2002.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Marcus D. Leech\n   Nortel Networks\n   P.O. Box 3511, Station\
    \ C\n   Ottawa, ON\n   Canada, K1Y 4H7\n   Phone: +1 613-763-9145\n   EMail: mleech@nortelnetworks.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
