- title: __initial_text__
  contents:
  - "              Source Address Validation Improvement (SAVI)\n             for\
    \ Mixed Address Assignment Methods Scenario\n"
- title: Abstract
  contents:
  - "Abstract\n   In networks that use multiple techniques for address assignment,\
    \ the\n   spoofing of addresses assigned by each technique can be prevented\n\
    \   using the appropriate Source Address Validation Improvement (SAVI)\n   methods.\
    \  This document reviews how multiple SAVI methods can coexist\n   in a single\
    \ SAVI device and how collisions are resolved when the same\n   binding entry\
    \ is discovered by two or more methods.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8074.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Requirements Language . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Problem Scope . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n   4.  Architecture  . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n   5.  Recommendations for Assignment Separation . . . . . . . . .\
    \ .   6\n   6.  Resolving Binding Collisions  . . . . . . . . . . . . . . . .\
    \   6\n     6.1.  Same Address on Different Binding Anchors . . . . . . . .  \
    \ 6\n       6.1.1.  Basic Preference  . . . . . . . . . . . . . . . . . .   7\n\
    \       6.1.2.  Exceptions  . . . . . . . . . . . . . . . . . . . . .   7\n  \
    \     6.1.3.  Multiple SAVI Device Scenario . . . . . . . . . . . .   8\n    \
    \ 6.2.  Same Address on the Same Binding Anchor . . . . . . . . .   9\n   7. \
    \ Security Considerations . . . . . . . . . . . . . . . . . . .   9\n   8.  Privacy\
    \ Considerations  . . . . . . . . . . . . . . . . . . .   9\n   9.  IANA Considerations\
    \ . . . . . . . . . . . . . . . . . . . . .   9\n   10. References  . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .  10\n     10.1.  Normative References\
    \ . . . . . . . . . . . . . . . . . .  10\n     10.2.  Informative References\
    \ . . . . . . . . . . . . . . . . .  11\n   Acknowledgments . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .  11\n   Authors' Addresses  . . . . . . . .\
    \ . . . . . . . . . . . . . . .  12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   There are currently several Source Address Validation Improvement\n\
    \   (SAVI) documents ([RFC6620], [RFC7513], and [RFC7219]) that describe\n   the\
    \ different methods by which a switch can discover and record\n   bindings between\
    \ a node's IP address and a binding anchor and use\n   that binding to perform\
    \ source address validation.  Each of these\n   documents specifies how to learn\
    \ on-link addresses, based on the\n   technique used for their assignment: StateLess\
    \ Address\n   Autoconfiguration (SLAAC), the Dynamic Host Control Protocol (DHCP),\n\
    \   and Secure Neighbor Discovery (SEND), respectively.  Each of these\n   documents\
    \ describes separately how one particular SAVI method deals\n   with address collisions\
    \ (same address but different binding anchor).\n   While multiple IP assignment\
    \ techniques can be used in the same layer\n   2 domain, this means that a single\
    \ SAVI device might have to deal\n   with a combination or mix of SAVI methods.\
    \  The purpose of this\n   document is to provide recommendations to avoid collisions\
    \ and to\n   review collision handling when two or more such methods come up with\n\
    \   competing bindings.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 3.  Problem Scope
  contents:
  - "3.  Problem Scope\n   Three different IP address assignment techniques have been\
    \ analyzed\n   for SAVI:\n   1.  StateLess Address Autoconfiguration (SLAAC) --\
    \ analyzed in FCFS\n       SAVI (First-Come, First-Served) [RFC6620]\n   2.  Dynamic\
    \ Host Control Protocol address assignment (DHCP) --\n       analyzed in SAVI-DHCP\
    \ [RFC7513]\n   3.  Secure Neighbor Discovery (SEND) address assignment -- analyzed\n\
    \       in SEND SAVI [RFC7219]\n   In addition, there is a fourth technique for\
    \ managing (i.e.,\n   creation, management, and deletion) a binding on the switch,\
    \ referred\n   to as \"manual\".  It is based on manual binding configuration.\
    \  How to\n   manage manual bindings is determined by operators, so there is not\
    \ a\n   new SAVI method for manual addresses.\n   All combinations of address\
    \ assignment techniques can coexist within\n   a layer 2 domain.  A SAVI device\
    \ MUST implement the corresponding\n   binding setup methods (referred to as \"\
    SAVI methods\") for each such\n   technique that is in use if it is to provide\
    \ source address\n   validation.\n   SAVI methods are normally viewed as independent\
    \ from each other, each\n   one handling its own entries.  If multiple methods\
    \ are used in the\n   same device without coordination, each method will attempt\
    \ to reject\n   packets sourced with any addresses that method did not discover.\
    \  To\n   prevent addresses discovered by one SAVI method from being filtered\n\
    \   out by another method, the SAVI binding table SHOULD be shared by all\n  \
    \ the SAVI methods in use in the device.  This in turn could create\n   some conflict\
    \ when the same entry is discovered by two different\n   methods.  The purpose\
    \ of this document is twofold: to provide\n   recommendations and methods to avoid\
    \ conflicts and to resolve\n   conflicts when they happen.  Collisions happening\
    \ within a given\n   method are outside the scope of this document.\n"
- title: 4.  Architecture
  contents:
  - "4.  Architecture\n   A SAVI device may implement and use multiple SAVI methods.\
    \  This\n   mechanism, called \"SAVI-MIX\", is proposed as an arbiter of the\n\
    \   binding generation algorithms from these multiple methods, generating\n  \
    \ the final binding entries as illustrated in Figure 1.  Once a SAVI\n   method\
    \ generates a candidate binding, it will request that SAVI-MIX\n   set up a corresponding\
    \ entry in the binding table.  Then, SAVI-MIX\n   will check if there is any conflict\
    \ in the binding table.  A new\n   binding will be generated if there is no conflict.\
    \  If there is a\n   conflict, SAVI-MIX will determine whether to replace the\
    \ existing\n   binding or reject the candidate binding based on the policies\n\
    \   specified in Section 6.\n   As a result of this, the packet filtering in the\
    \ SAVI device will not\n   be performed by each SAVI method separately.  Instead,\
    \ the table\n   resulting from applying SAVI-MIX will be used to perform filtering.\n\
    \   Thus, the filtering is based on the combined results of the different\n  \
    \ SAVI mechanisms.  It is beyond the scope of this document to describe\n   the\
    \ details of the filtering mechanism and its use of the combined\n   SAVI binding\
    \ table.\n   +--------------------------------------------------------+\n   |\
    \                                                        |\n   |             \
    \                           SAVI Device     |\n   |                          \
    \                              |\n   |                                       \
    \                 |\n   |     +------+    +------+    +------+               \
    \    |\n   |     | SAVI |    | SAVI |    | SAVI |                   |\n   |  \
    \   |      |    |      |    |      |                   |\n   |     | FCFS |  \
    \  | DHCP |    | SEND |                   |\n   |     +------+    +------+   \
    \ +------+                   |\n   |        |            |           |   Binding\
    \            |\n   |        |            |           |   setup              |\n\
    \   |        v            v           v   requests           |\n   |     +------------------------------+\
    \                   |\n   |     |                              |             \
    \      |\n   |     |            SAVI-MIX          |                   |\n   |\
    \     |                              |                   |\n   |     +------------------------------+\
    \                   |\n   |                     |                            \
    \      |\n   |                     v               Final Binding      |\n   |\
    \             +--------------+                           |\n   |             |\
    \   Binding    |                           |\n   |             |             \
    \ |                           |\n   |             |   Table      |           \
    \                |\n   |             +--------------+                        \
    \   |\n   |                                                        |\n   +--------------------------------------------------------+\n\
    \                  Figure 1: SAVI-MIX Architecture\n   Each entry in the binding\
    \ table will contain the following fields:\n   1.  IP source address\n   2.  Binding\
    \ anchor [RFC7039]\n   3.  Lifetime\n   4.  Creation time\n   5.  Binding methods:\
    \ the SAVI method used for this entry\n"
- title: 5.  Recommendations for Assignment Separation
  contents:
  - "5.  Recommendations for Assignment Separation\n   If each address assignment\
    \ technique uses a separate portion of the\n   IP address space, collisions won't\
    \ happen.  Using non-overlapping\n   address space across address assignment techniques,\
    \ and thus across\n   SAVI methods, is therefore recommended.  To that end, one\
    \ should:\n   1.  DHCP and SLAAC: use a non-overlapping prefix for DHCP and SLAAC.\n\
    \       Set the A bit in the Prefix Information option of the Router\n       Advertisement\
    \ for the SLAAC prefix, and set the M bit in the\n       Router Advertisement\
    \ for the DHCP prefix.  For detailed\n       explanations of these bits, refer\
    \ to [RFC4861] and [RFC4862].\n   2.  SEND and non-SEND: avoid mixed environments\
    \ (where SEND and non-\n       SEND nodes are deployed) or separate the prefixes\
    \ announced to\n       SEND and non-SEND nodes.  One way to separate the prefixes\
    \ is to\n       have the router(s) announcing different (non-overlapping)\n  \
    \     prefixes to SEND and to non-SEND nodes, using unicast Router\n       Advertisements\
    \ [RFC6085], in response to SEND/non-SEND Router\n       Solicit.\n"
- title: 6.  Resolving Binding Collisions
  contents:
  - "6.  Resolving Binding Collisions\n   In situations where collisions cannot be\
    \ avoided by assignment\n   separation, two cases should be considered:\n   1.\
    \  The same address is bound on two different binding anchors by\n       different\
    \ SAVI methods.\n   2.  The same address is bound on the same binding anchor by\
    \ different\n       SAVI methods.\n"
- title: 6.1.  Same Address on Different Binding Anchors
  contents:
  - "6.1.  Same Address on Different Binding Anchors\n   This would typically occur\
    \ if assignment address spaces could not be\n   separated.  For instance, an address\
    \ is assigned by SLAAC on node X,\n   installed in the binding table using FCFS\
    \ SAVI, and anchored to\n   \"anchor-X\".  Later, the same address is assigned\
    \ by DHCP to node Y,\n   and SAVI-DHCP will generate a candidate binding entry,\
    \ anchored to\n   \"anchor-Y\".\n"
- title: 6.1.1.  Basic Preference
  contents:
  - "6.1.1.  Basic Preference\n   If there is any manually configured binding, the\
    \ SAVI device SHOULD\n   choose the manually configured binding anchor.\n   For\
    \ an address not covered by any manual bindings, the SAVI device\n   must decide\
    \ to which binding anchor the address should be bound\n   (anchor-X or anchor-Y\
    \ in this example).  Current standard documents\n   of address assignment methods\
    \ have implied the prioritization\n   relationship based on order in time, i.e.,\
    \ First-Come, First-Served.\n   o  SLAAC: Section 5.4.5 of [RFC4862]\n   o  DHCPv4:\
    \ Section 3.1, Point 5 of [RFC2131]\n   o  DHCPv6: Section 18.1.8 of [RFC3315]\n\
    \   o  SEND: Section 8 of [RFC3971]\n   In the absence of any configuration or\
    \ protocol hint (see\n   Section 6.1.2), the SAVI device SHOULD choose the first-come\
    \ binding\n   anchor, whether it was learned from SLAAC, SEND, or DHCP.\n"
- title: 6.1.2.  Exceptions
  contents:
  - "6.1.2.  Exceptions\n   There are two identified exceptions to the general prioritization\n\
    \   model, one being Cryptographically Generated Addresses (CGA)\n   [RFC3971]\
    \ and the other controlled by the configuration of the\n   switch.\n"
- title: 6.1.2.1.  CGA Preference
  contents:
  - "6.1.2.1.  CGA Preference\n   When CGA addresses are used and a collision is detected,\
    \ preference\n   should be given to the anchor that carries the CGA credentials\
    \ once\n   they are verified, in particular, the CGA parameters and the RSA\n\
    \   options.  Note that if an attacker was trying to replay CGA\n   credentials,\
    \ he would then compete on the base of the \"First-Come,\n   First-Served\" (FCFS)\
    \ principle.\n"
- title: 6.1.2.2.  Configuration Preference
  contents:
  - "6.1.2.2.  Configuration Preference\n   For configuration-driven exceptions, the\
    \ SAVI device may allow the\n   configuration of a triplet (\"prefix\", \"anchor\"\
    , \"method\") or\n   (\"address\", \"anchor\", \"method\").  The \"prefix\" or\
    \ \"address\"\n   represents the address or address prefix to which this preference\n\
    \   entry applies.  The \"anchor\" is the value of a known binding anchor\n  \
    \ that this device expects to see using this address or addresses from\n   this\
    \ prefix.  The \"method\" is the SAVI method that this device\n   expects to use\
    \ in validating address binding entries from the address\n   or prefix.  At least\
    \ one of \"anchor\" and \"method\" MUST be specified.\n   Later, if a Duplicate\
    \ Address Detection (DAD) message [RFC4861] is\n   received with the following\
    \ conditions verified:\n   1.  The target in the DAD message does not exist in\
    \ the binding\n       table,\n   2.  The target is within the configured \"prefix\"\
    \ (or equal to\n       \"address\"),\n   3.  The anchor bound to the target is\
    \ different from the configured\n       anchor, when specified, and\n   4.  The\
    \ configured method, if any, is different from FCFS SAVI,\n   then the switch\
    \ SHOULD defend the address by responding to the DAD\n   message, with a Neighbor\
    \ Advertisement (NA) message, on behalf of the\n   target node.  It SHOULD NOT\
    \ install the entry into the binding table.\n   The DAD message SHOULD be discarded\
    \ and not forwarded.  Forwarding it\n   may cause other SAVI devices to send additional\
    \ defense NAs.  SEND\n   nodes in the network MUST disable the option to ignore\
    \ unsecured\n   advertisements (see Section 8 of [RFC3971]).  If the option is\n\
    \   enabled, the case is outside the scope of this document.  It is\n   suggested\
    \ to limit the rate of defense NAs to reduce security threats\n   to the switch.\
    \  Otherwise, a malicious host could consume the\n   resource of the switch heavily\
    \ with flooding DAD messages.\n   This will simply prevent the node from assigning\
    \ the address and will\n   de facto prioritize the configured anchor.  It is especially\
    \ useful\n   to protect well-known bindings (such as a static address of a server)\n\
    \   against any other host, even when the server is down.  It is also a\n   way\
    \ to give priority to a binding learned from SAVI-DHCP over a\n   binding for\
    \ the same address, learned from FCFS SAVI.\n"
- title: 6.1.3.  Multiple SAVI Device Scenario
  contents:
  - "6.1.3.  Multiple SAVI Device Scenario\n   A single SAVI device doesn't have the\
    \ information of all bound\n   addresses on the perimeter.  Therefore, it is not\
    \ enough to look up\n   local bindings to identify a collision.  However, assuming\
    \ DAD is\n   performed throughout the security perimeter for all addresses\n \
    \  regardless of the assignment method, then the DAD response will\n   inform\
    \ all SAVI devices about any collision.  In that case, \"First-\n   Come, First-Served\"\
    \ will apply the same way as in a single switch\n   scenario.  If the admin configured\
    \ a prefix (or a single static\n   binding) on one of the switches to defend,\
    \ the DAD response generated\n   by this switch will also prevent the binding\
    \ from being installed on\n   other switches on the perimeter.  The SAVI-MIX preferences\
    \ of all the\n   SAVI devices in the same layer 2 domain should be consistent.\n\
    \   Inconsistent configurations may cause network breaks.\n"
- title: 6.2.  Same Address on the Same Binding Anchor
  contents:
  - "6.2.  Same Address on the Same Binding Anchor\n   A binding may be set up on\
    \ the same binding anchor by multiple\n   methods, typically FCFS SAVI and SAVI-DHCP.\
    \  If the binding lifetimes\n   obtained from the two methods are different, priority\
    \ should be given\n   to 1) manual configuration, 2) SAVI-DHCP, 3) and FCFS SAVI\
    \ as the\n   least authoritative.  The binding will be removed when the\n   prioritized\
    \ lifetime expires, even if a less authoritative method had\n   a longer lifetime.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Combining SAVI methods (as in SAVI-MIX) does\
    \ not improve or eliminate\n   the security considerations associated with each\
    \ individual SAVI\n   method.  Therefore, security considerations for each enabled\
    \ SAVI\n   method should be addressed as described in that method's associated\n\
    \   RFC.  Moreover, combining methods (as in SAVI-MIX) has two additional\n  \
    \ implications for security.  First, it may increase susceptibility to\n   DoS\
    \ attacks, because the SAVI binding setup rate will be the sum of\n   the rates\
    \ of all enabled SAVI methods.  Implementers must take these\n   added resource\
    \ requirements into account.  Second, because SAVI-MIX\n   supports multiple binding\
    \ mechanisms, it potentially reduces the\n   security level to that of the weakest\
    \ supported method, unless\n   additional steps (e.g., requiring non-overlapping\
    \ address spaces for\n   different methods) are taken.\n"
- title: 8.  Privacy Considerations
  contents:
  - "8.  Privacy Considerations\n   When implementing multiple SAVI methods, privacy\
    \ considerations of\n   all methods apply cumulatively.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   This document does not require any IANA registrations.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2131]  Droms, R., \"Dynamic Host Configuration Protocol\",\n         \
    \     RFC 2131, DOI 10.17487/RFC2131, March 1997,\n              <http://www.rfc-editor.org/info/rfc2131>.\n\
    \   [RFC3315]  Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n    \
    \          C., and M. Carney, \"Dynamic Host Configuration Protocol\n        \
    \      for IPv6 (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315, July\n           \
    \   2003, <http://www.rfc-editor.org/info/rfc3315>.\n   [RFC3971]  Arkko, J.,\
    \ Ed., Kempf, J., Zill, B., and P. Nikander,\n              \"SEcure Neighbor\
    \ Discovery (SEND)\", RFC 3971,\n              DOI 10.17487/RFC3971, March 2005,\n\
    \              <http://www.rfc-editor.org/info/rfc3971>.\n   [RFC6085]  Gundavelli,\
    \ S., Townsley, M., Troan, O., and W. Dec,\n              \"Address Mapping of\
    \ IPv6 Multicast Packets on Ethernet\",\n              RFC 6085, DOI 10.17487/RFC6085,\
    \ January 2011,\n              <http://www.rfc-editor.org/info/rfc6085>.\n   [RFC6620]\
    \  Nordmark, E., Bagnulo, M., and E. Levy-Abegnoli, \"FCFS\n              SAVI:\
    \ First-Come, First-Served Source Address Validation\n              Improvement\
    \ for Locally Assigned IPv6 Addresses\",\n              RFC 6620, DOI 10.17487/RFC6620,\
    \ May 2012,\n              <http://www.rfc-editor.org/info/rfc6620>.\n   [RFC7219]\
    \  Bagnulo, M. and A. Garcia-Martinez, \"SEcure Neighbor\n              Discovery\
    \ (SEND) Source Address Validation Improvement\n              (SAVI)\", RFC 7219,\
    \ DOI 10.17487/RFC7219, May 2014,\n              <http://www.rfc-editor.org/info/rfc7219>.\n\
    \   [RFC7513]  Bi, J., Wu, J., Yao, G., and F. Baker, \"Source Address\n     \
    \         Validation Improvement (SAVI) Solution for DHCP\",\n              RFC\
    \ 7513, DOI 10.17487/RFC7513, May 2015,\n              <http://www.rfc-editor.org/info/rfc7513>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC4861]  Narten, T., Nordmark, E., Simpson,\
    \ W., and H. Soliman,\n              \"Neighbor Discovery for IP version 6 (IPv6)\"\
    , RFC 4861,\n              DOI 10.17487/RFC4861, September 2007,\n           \
    \   <http://www.rfc-editor.org/info/rfc4861>.\n   [RFC4862]  Thomson, S., Narten,\
    \ T., and T. Jinmei, \"IPv6 Stateless\n              Address Autoconfiguration\"\
    , RFC 4862,\n              DOI 10.17487/RFC4862, September 2007,\n           \
    \   <http://www.rfc-editor.org/info/rfc4862>.\n   [RFC7039]  Wu, J., Bi, J., Bagnulo,\
    \ M., Baker, F., and C. Vogt, Ed.,\n              \"Source Address Validation\
    \ Improvement (SAVI) Framework\",\n              RFC 7039, DOI 10.17487/RFC7039,\
    \ October 2013,\n              <http://www.rfc-editor.org/info/rfc7039>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Christian Vogt, Eric Nordmark, Marcelo Bagnulo\
    \ Braun, David\n   Lamparter, Scott G. Kelly, and Jari Arkko for their valuable\n\
    \   contributions.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jun Bi\n   Tsinghua University\n   Institute for Network\
    \ Sciences and Cyberspace, Tsinghua University\n   Beijing  100084\n   China\n\
    \   Email: junbi@tsinghua.edu.cn\n   Guang Yao\n   Tsinghua University/Baidu\n\
    \   Baidu Science and Technology Park, Building 1\n   Beijing  100193\n   China\n\
    \   Email: yaoguang.china@gmail.com\n   Joel M. Halpern\n   Ericsson\n   Email:\
    \ joel.halpern@ericsson.com\n   Eric Levy-Abegnoli (editor)\n   Cisco Systems\n\
    \   Village d'Entreprises Green Side - 400, Avenue Roumanille\n   Biot-Sophia\
    \ Antipolis  06410\n   France\n   Email: elevyabe@cisco.com\n"
