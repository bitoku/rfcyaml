- title: __initial_text__
  contents:
  - '         IP Multicast in Differentiated Services (DS) Networks

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses the problems of IP Multicast use in\n  \
    \ Differentiated Services (DS) networks, expanding on the discussion in\n   RFC\
    \ 2475 (\"An Architecture of Differentiated Services\").  It also\n   suggests\
    \ possible solutions to these problems, describes a potential\n   implementation\
    \ model, and presents simulation results.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n       1.1.  Management of Differentiated Services. . . . .\
    \ . . . . .  2\n   2.  Problems of IP Multicast in DS Domains . . . . . . . .\
    \ . . . .  3\n       2.1.  Neglected Reservation Subtree Problem (NRS Problem).\
    \ . .  4\n       2.2.  Heterogeneous Multicast Groups . . . . . . . . . . . .\
    \ . 12\n       2.3.  Dynamics of Any-Source Multicast . . . . . . . . . . . .\
    \ 13\n   3.  Solutions for Enabling IP-Multicast in Differentiated\n       Services\
    \ Networks. . . . . . . . . . . . . . . . . . . . . . . 13\n       3.1.  Solution\
    \ for the NRS Problem . . . . . . . . . . . . . . 13\n       3.2.  Solution for\
    \ Supporting Heterogeneous Multicast Groups . 15\n       3.3.  Solution for Any-Source\
    \ Multicast. . . . . . . . . . . . 16\n   4.  Scalability Considerations . . .\
    \ . . . . . . . . . . . . . . . 16\n   5.  Deployment Considerations. . . . .\
    \ . . . . . . . . . . . . . . 17\n   6.  Security Considerations. . . . . . .\
    \ . . . . . . . . . . . . . 18\n   7.  Implementation Model Example . . . . .\
    \ . . . . . . . . . . . . 18\n   8.  Proof of the Neglected Reservation Subtree\
    \ Problem . . . . . . 19\n       8.1.  Implementation of the Proposed Solution.\
    \ . . . . . . . . 20\n       8.2.  Test Environment and Execution . . . . . .\
    \ . . . . . . . 21\n   9.  Simulative Study of the NRS Problem and Limited Effort\
    \ PHB . . 23\n       9.1.  Simulation Scenario. . . . . . . . . . . . . . . .\
    \ . . . 24\n       9.2.  Simulation Results for Different Router Types. . . .\
    \ . . 26\n   10. Acknowledgements . . . . . . . . . . . . . . . . . . . . . .\
    \ . 31\n   11. References . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 31\n       11.1. Normative References . . . . . . . . . . . . . . . . . . 31\n\
    \       11.2. Informative References . . . . . . . . . . . . . . . . . 31\n  \
    \ 12. Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . 33\n   13.\
    \ Full Copyright Statement . . . . . . . . . . . . . . . . . . . 34\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document discusses the problems of IP Multicast use\
    \ in\n   Differentiated Services (DS) networks, expanding on the discussion in\n\
    \   RFC 2475 (\"An Architecture of Differentiated Services\").  It also\n   suggests\
    \ possible solutions to these problems, describes a potential\n   implementation\
    \ model, and presents simulation results.\n   The \"Differentiated Services\"\
    \ (DiffServ or DS) approach [1, 2, 3]\n   defines certain building blocks and\
    \ mechanisms to offer qualitatively\n   better services than the traditional best-effort\
    \ delivery service in\n   an IP network.  In the DiffServ Architecture [2], scalability\
    \ is\n   achieved by avoiding complexity and maintenance of per-flow state\n \
    \  information in core nodes, and by pushing unavoidable complexity to\n   the\
    \ network edges.  Therefore, individual flows belonging to the same\n   service\
    \ are aggregated, thereby eliminating the need for complex\n   classification\
    \ or managing state information per flow in interior\n   nodes.\n   On the other\
    \ hand, the reduced complexity in DS nodes makes it more\n   complex to use those\
    \ \"better\" services together with IP Multicast\n   (i.e., point-to-multipoint\
    \ or multipoint-to-multipoint\n   communication).  Problems emerging from this\
    \ fact are described in\n   section 2.  Although the basic DS forwarding mechanisms\
    \ also work\n   with IP Multicast, some facts have to be considered which are\
    \ related\n   to the provisioning of multicast resources.  It is important to\n\
    \   integrate IP Multicast functionality into the architecture from the\n   beginning,\
    \ and to provide simple solutions for those problems that\n   will not defeat\
    \ the already gained advantages.\n"
- title: 1.1.  Management of Differentiated Services
  contents:
  - "1.1.  Management of Differentiated Services\n   At least for Per-Domain Behaviors\
    \ and services based on the EF PHB,\n   admission control and resource reservation\
    \ are required [14, 15].\n   Installation and updating of traffic profiles in\
    \ boundary nodes is\n   necessary.  Most network administrators cannot accomplish\
    \ this task\n   manually, even for long term service level agreements (SLAs).\n\
    \   Furthermore, offering services on demand requires some kind of\n   signaling\
    \ and automatic admission control procedures.\n   However, no standardized resource\
    \ management architecture for\n   DiffServ domains exists.  The remainder of this\
    \ document assumes that\n   at least some logical resource management entity is\
    \ available to\n   perform resource-based admission control and allotment functions.\n\
    \   This entity may also be realized in a distributed fashion, e.g.,\n   within\
    \ the routers themselves.  Detailed aspects of the resource\n   management realization\
    \ within a DiffServ domain, as well as the\n   interactions between resource management\
    \ and routers or end-systems\n   (e.g., signaling for resources), are out of scope\
    \ of this document.\n   Protocols for signaling a reservation request to a Differentiated\n\
    \   Services Domain are required.  For accomplishing end-system signaling\n  \
    \ to DS domains, RSVP [4] may be used with new DS specific reservation\n   objects\
    \ [5].  RSVP provides support for multicast scenarios and is\n   already supported\
    \ by many systems.  However, application of RSVP in a\n   DiffServ multicast context\
    \ may lead to problems that are also\n   described in the next section. The NSIS\
    \ Working Group is currently\n   defining new signaling protocols that may show\
    \ a different behavior,\n   but the WG has its current focus more on unicast flows\
    \ than on\n   multicast flows.\n"
- title: 2.  Problems of IP Multicast in DS Domains
  contents:
  - "2.  Problems of IP Multicast in DS Domains\n   Although potential problems and\
    \ the complexity of providing multicast\n   with Differentiated Services are considered\
    \ in a separate section of\n   [2], both aspects have to be discussed in greater\
    \ detail.  The\n   simplicity of the DiffServ Architecture and its DS node types\
    \ is\n   necessary to reach high scalability, but it also causes fundamental\n\
    \   problems in conjunction with the use of IP Multicast in DS domains.\n   The\
    \ following subsections describe these problems for which a generic\n   solution\
    \ is proposed in section 3.  This solution is as scalable as\n   IP Multicast\
    \ and needs no resource separation by using different\n   codepoint values for\
    \ unicast and multicast traffic.\n   Because Differentiated Services are unidirectional\
    \ by definition, the\n   point-to-multipoint communication is also considered\
    \ as\n   unidirectional.  In traditional IP Multicast, any node can send\n   packets\
    \ spontaneously and asynchronously to a multicast group\n   specified by their\
    \ multicast group address, i.e., traditional IP\n   Multicast offers a multipoint-to-multipoint\
    \ service, also referred to\n   as Any-Source Multicast.  Implications of this\
    \ feature are discussed\n   in section 2.3.\n   For subsequent considerations\
    \ we assume, unless stated otherwise, at\n   least a unidirectional point-to-multipoint\
    \ communication scenario in\n   which the sender generates packets which experience\
    \ a \"better\" Per-\n   Hop-Behavior than the traditional default PHB, resulting\
    \ in a service\n   of better quality than the default best-effort service.  In\
    \ order to\n   accomplish this, a traffic profile corresponding to the traffic\n\
    \   conditioning specification has to be installed in the sender's first\n   DS-capable\
    \ boundary node.  Furthermore, it must be assured that the\n   corresponding resources\
    \ are available on the path from the sender to\n   all the receivers, possibly\
    \ requiring adaptation of traffic profiles\n   at involved domain boundaries.\
    \  Moreover, on demand resource\n   reservations may be receiver-initiated.\n"
- title: 2.1.  Neglected Reservation Subtree Problem (NRS Problem)
  contents:
  - "2.1.  Neglected Reservation Subtree Problem (NRS Problem)\n   Typically, resources\
    \ for Differentiated Services must be reserved\n   before they are used.  But\
    \ in a multicast scenario, group membership\n   is often highly dynamic, thereby\
    \ limiting the use of a sender-\n   initiated resource reservation in advance.\
    \  Unfortunately, dynamic\n   addition of new members of the multicast group using\
    \ Differentiated\n   Services can adversely affect other existing traffic if resources\n\
    \   were not explicitly reserved before use.  A practical proof of this\n   problem\
    \ is given in section 8.\n   IP Multicast packet replication usually takes place\
    \ when the packet\n   is handled by the forwarding core (cf. Fig. 1), i.e., when\
    \ it is\n   forwarded and replicated according to the multicast forwarding table.\n\
    \   Thus, a DiffServ capable node would also copy the content of the DS\n   field\
    \ [1] into the IP packet header of every replicate.\n   Consequently, replicated\
    \ packets get exactly the same DS codepoint\n   (DSCP) as the original packet,\
    \ and therefore experience the same\n   forwarding treatment as the incoming packets\
    \ of this multicast group.\n   This is also illustrated in Fig. 1, where each\
    \ egress interface\n   comprises functions for (BA-) classification, traffic conditioning\n\
    \   (TC), and queueing.\n            Interface A        IP Forwarding        Interface\
    \ B\n           +-----------+     +--------------+      +-----------+\n   MC-flow\
    \ |           |     | replication  |      |  egress   |\n      ---->|  ingress\
    \  |---->|------+-------|----->|(class.,TC,|---->\n           |           |  \
    \   |      |       |      | queueing) |\n           +-----------+     |      |\
    \       |      +-----------+\n                             |      |       |\n\
    \                             |      |       |       Interface C\n           \
    \                  |      |       |      +-----------+\n                     \
    \        |      |       |      |  egress   |\n                             | \
    \     +-------|----->|(class.,TC,|---->\n                             |      \
    \        |      | queueing) |\n                             +--------------+ \
    \     +-----------+\n        Figure 1: Multicast packet replication in a DS node\n\
    \   Normally, the replicating node cannot test whether a corresponding\n   resource\
    \ reservation exists for a particular flow of replicated\n   packets on an output\
    \ link (i.e., its corresponding interface).  This\n   is because flow-specific\
    \ information (e.g., traffic profiles) is\n   usually not available in every boundary\
    \ and interior node.\n   When a new receiver joins an IP Multicast group, a multicast\
    \ routing\n   protocol (e.g., DVMRP [6], PIM-DM [7] or PIM-SM [8]) grafts a new\n\
    \   branch to an existing multicast tree in order to connect the new\n   receiver\
    \ to the tree.  As a result of tree expansion, missing per-\n   flow classification,\
    \ and policing mechanisms, the new receiver will\n   implicitly use the service\
    \ of better quality, because of the \"better\"\n   copied DSCP.\n   If the additional\
    \ amount of resources which are consumed by the new\n   part of the multicast\
    \ tree are not taken into account by the domain\n   resource management (cf. section\
    \ 1.1), the currently provided quality\n   of service of other receivers (with\
    \ correct reservations) will be\n   affected adversely or even violated.  This\
    \ negative effect on\n   existing traffic contracts by a neglected resource reservation\
    \ -- in\n   the following designated as the Neglected Reservation Subtree Problem\n\
    \   (NRS Problem) -- must be avoided under all circumstances.  Strong\n   admission\
    \ control policies at the domain boundary will not help to\n   prevent this problem\
    \ either, because the new flow that inadmissibly\n   consumes resources has its\
    \ origin inside the domain.\n   One can distinguish two major cases of the NRS\
    \ Problem.  They show a\n   different behavior depending on the location of the\
    \ branching point.\n   In order to compare their different effects, a simplistic\
    \ example of\n   a share of bandwidth is illustrated in Fig. 2 and is used in\
    \ the\n   following explanations.  Neither the specific PHB types nor their\n\
    \   assigned bandwidth share are important; however, their relative\n   priority\
    \ with respect to each other is of importance.\n             40%             \
    \    40%               20%\n   +--------------------+---------------------+------------+\n\
    \   |Expedited Forwarding| Assured Forwarding  | Best-Effort|\n   +--------------------+---------------------+------------+\n\
    \   ---------------------------------------------------------->\n            \
    \                          output link bandwidth\n        Figure 2: An example\
    \ bandwidth share of different\n                  behavior aggregates\n   The\
    \ bandwidth of the considered output link is shared by three types\n   of services\
    \ (i.e., by three behavior aggregates): Expedited\n   Forwarding, Assured Forwarding,\
    \ and the traditional Best-Effort\n   service.  In this example, we assume that\
    \ routers perform strict\n   priority queueing, where EF has the highest, AF the\
    \ middle, and\n   Best-Effort the lowest assigned scheduling priority.  Though\
    \ not\n   mandatory for an EF implementation, a strict non-preemptive priority\n\
    \   scheduler is one implementation option as described in section 5.1.1\n   of\
    \ RFC 3247 [15].  Were Weighted Fair Queueing (WFQ) to be used, the\n   described\
    \ effects would essentially also occur, but with minor\n   differences.  In the\
    \ following scenarios, it is illustrated that PHBs\n   of equal or lower priority\
    \ (in comparison to the multicast flow's\n   PHB) are affected by the NRS problem.\n\
    \   The Neglected Reservation Subtree problem appears in two different\n   cases:\n\
    \   o  Case 1: If the branching point of the new subtree (at first only a\n  \
    \    branch) and the previous multicast tree is a (egress) boundary\n      node,\
    \ as shown in Fig. 3, the additional multicast flow now\n      increases the total\
    \ amount of used resources for the corresponding\n      behavior aggregate on\
    \ the affected output link.  The total amount\n      will be greater than the\
    \ originally reserved amount.\n      Consequently, the policing component in the\
    \ egress boundary node\n      drops packets until the traffic aggregate is in\
    \ accordance with\n      the traffic contract.  But while dropping packets, the\
    \ router can\n      not identify the responsible flow (because of missing flow\n\
    \      classification functionality), and thus randomly discards packets,\n  \
    \    whether they belong to a correctly behaving flow or not.  As a\n      result,\
    \ there will no longer be any service guarantee for the\n      flows with properly\
    \ reserved resources.\n    Sender\n     +---+\n     | S |                 DS domains\n\
    \     +---+                  /       \\\n      .||...............   /        \
    \ \\   ................\n     . ||               .<-           ->.           \
    \     .\n    .  ||                .             .                  .\n    . +---+\
    \   +--+     +--+     *)    +--+    +--+      +--+    +------+\n    . |FHN|===|IN|=====|BN|###########|BN|####|IN|######|BN|####|Recv.B|\n\
    \    . +---+   +--+     +--+\\\\         +--+    +--+      +--+    +------+\n\
    \    .   \\\\       \\        . \\\\         .         \\        .\n    .  +--+\
    \     +--+      .  \\\\        .          \\       .\n    .  |IN|-----|IN|   \
    \   .   \\\\        .          +--+  .\n    .  +--+     +--+      .    \\\\  \
    \      ..........|BN|..\n    .   ||        \\      .     +------+            +--+\n\
    \     .  ||         \\    .      |Recv.A|\n      .+--+        +--+.       +------+\n\
    \       |BN|........|BN|\n       +--+        +--+\n        ||\n    S: Sender\n\
    \    Recv.x: Receiver x\n    FHN: First-Hop Node\n    BN: Boundary Node\n    IN:\
    \ Interior Node\n    ===: Multicast branch with reserved bandwidth\n    ###: Multicast\
    \ branch without reservation\n    *) Bandwidth of EF aggregated on the output\
    \ link is higher than\n       actual reservation, EF aggregate will be limited\
    \ in bandwidth\n       without considering the responsible flow.\n         Figure\
    \ 3: The NRS Problem (case 1) occurs when Receiver\n                   B joins\n\
    \      In figure 3, it is assumed that receiver A is already attached to\n   \
    \   the egress boundary node (BN) of the first domain.  Furthermore,\n      resources\
    \ are properly reserved along the path to receiver A and\n      used by correspondingly\
    \ marked packets.  When receiver B joins the\n      same group as receiver A,\
    \ packets are replicated and forwarded\n      along the new branch towards the\
    \ second domain with the same PHB\n      as for receiver A.  If this PHB is EF,\
    \ the new branch possibly\n      exhausts allotted resources for the EF PHB, adversely\
    \ affecting\n      other EF users that receive their packets over the link that\
    \ is\n      marked with the *).  The BN usually ensures that outgoing traffic\n\
    \      aggregates to the next domain are conforming to the agreed traffic\n  \
    \    conditioning specification.  The egress BN will, therefore, drop\n      packets\
    \ of the PHB type that are used for the multicast flow.\n      Other PHBs of lower\
    \ or higher priority are not affected adversely\n      in this case.  The following\
    \ example in Fig. 4.  illustrates this\n      for two PHBs.\n   +------------------+---------------------+--------------+------+\n\
    \   | Expedited Forw.  | Expedited Forw.     | Assured Forw.|  BE  |\n   |   \
    \               |                     |              |      |\n   | with reservation\
    \ | excess flow         | with reserv. |      |\n   |                  | without\
    \ reservation |              |      |\n   +------------------+---------------------+--------------+------+\n\
    \   | EF with and without reservation share  |    40 %      |  20% |\n   | 40%\
    \ of reserved EF aggregate.          |              |      |\n   | -> EF packets\
    \ with reservation and     |              |      |\n   |    without reservation\
    \ will be         |              |      |\n   |    discarded!                \
    \          |              |      |\n   +------------------+---------------------+--------------+------+\n\
    \               (a) Excess flow has EF codepoint\n   +------------------+---------------------+--------------+------+\n\
    \   | Expedited Forw.  | Assured Forwarding  | Assured Forw.|  BE  |\n   |   \
    \               |                     |              |      |\n   | with reservation\
    \ | excess flow         | with reserv. |      |\n   |                  | without\
    \ reservation |              |      |\n   +------------------+---------------------+--------------+------+\n\
    \   |                  | AF with & without reservation share| 20 % |\n   |   \
    \               | 40% of reserved EF aggregate.      |      |\n   |       40%\
    \        | -> EF packets with reservation and |      |\n   |                 \
    \ |    without reservation will be     |      |\n   |                  |    discarded!\
    \                      |      |\n   +------------------+---------------------+--------------+------+\n\
    \               (b) Excess flow has AF codepoint\n        Figure 4: Resulting\
    \ share of bandwidth in a egress\n                  boundary node with a neglected\
    \ reservation of\n                  (a) an Expedited Forwarding flow or (b) an\n\
    \                  Assured Forwarding flow.\n      Fig. 4 shows the resulting\
    \ share of bandwidth in cases when (a)\n      Expedited Forwarding and (b) Assured\
    \ Forwarding is used by the\n      additional multicast branch causing the NRS\
    \ Problem.  Assuming\n      that the additional traffic would use another 30%\
    \ of the link\n      bandwidth, Fig. 4 (a) illustrates that the resulting aggregate\
    \ of\n      Expedited Forwarding (70% of the outgoing link bandwidth) is\n   \
    \   throttled down to its originally reserved 40%.  In this case, the\n      amount\
    \ of dropped EF bandwidth is equal to the amount of excess\n      bandwidth. \
    \ Consequently, the original Expedited Forwarding\n      aggregate (which had\
    \ 40% of the link bandwidth reserved) is also\n      affected by packet losses.\
    \  The other services, e.g., Assured\n      Forwarding or Best-Effort, are not\
    \ disadvantaged.\n      Fig. 4 (b) shows the same situation for Assured Forwarding.\
    \  The\n      only difference is that now Assured Forwarding is solely affected\n\
    \      by discards, as the other services will still get their\n      guarantees.\
    \  In either case, packet losses are restricted to the\n      misbehaving service\
    \ class by the traffic meter and policing\n      mechanisms in boundary nodes.\
    \  Moreover, the latter problem (case\n      1) occurs only in egress boundary\
    \ nodes because they are\n      responsible for ensuring that the traffic leaving\
    \ the\n      Differentiated Services domain is not more than the following\n \
    \     ingress boundary node will accept.  Therefore, those violations of\n   \
    \   SLAs will already be detected and processed in egress boundary\n      nodes.\n\
    \   o  Case 2: The Neglected Reservation Subtree problem can also occur\n    \
    \  if the branching point between the previous multicast tree and the\n      new\
    \ subtree is located in an interior node (as shown in Fig. 5).\n      In Fig.\
    \ 5, it is assumed that receivers A and B have already\n      joined the multicast\
    \ group and have reserved resources\n      accordingly.  The interior node in\
    \ the second domain starts\n      replication of multicast packets as soon as\
    \ receiver C joins.\n      Because the router is not equipped with metering or\
    \ policing\n      functions, it will not recognize any amount of excess traffic\
    \ and\n      will forward the new multicast flow.  If the latter belongs to a\n\
    \      higher priority service, such as Expedited Forwarding, bandwidth\n    \
    \  of the aggregate is higher than the aggregate's reservation at the\n      new\
    \ branch and will use bandwidth from lower priority services.\n    Sender\n  \
    \   +---+\n     | S |                 DS domains\n     +---+                 \
    \ /       \\\n      .||...............   /         \\   ................\n   \
    \  . ||               .<-           ->.                .\n    .  ||          \
    \      .             .                  .\n    . +---+   +--+     +--+       \
    \    +--+    +--+      +--+   +------+\n    . |FHN|===|IN|=====|BN|===========|BN|====|IN|======|BN|===|Recv.B|\n\
    \    . +---+   +--+     +--+\\\\         +--+    +--+      +--+   +------+\n \
    \   .   \\\\       \\        . \\\\         .         #        .\n    .  +--+\
    \     +--+      .  \\\\        .          # *)    .\n    .  |IN|-----|IN|    \
    \  .   \\\\        .          +--+  .\n    .  +--+     +--+      .    \\\\   \
    \     ..........|BN|..\n    .   ||        \\      .     +------+            +--+\n\
    \     .  ||         \\    .      |Recv.A|              #\n      .+--+        +--+.\
    \       +------+              #\n       |BN|........|BN|                     \
    \       +------+\n       +--+        +--+                            |Recv.C|\n\
    \        ||                                         +------+\n    FHN: First-Hop\
    \ Node, BN: Boundary Node, Recv.x: Receiver x\n    S: Sender, IN: Interior Node\n\
    \    ===: Multicast branch with reserved bandwidth\n    ###: Multicast branch\
    \ without reservation\n    *) Bandwidth of EF aggregated on the output link is\
    \ higher than\n       actual reservation, EF aggregate will be limited in bandwidth\n\
    \       without considering the responsible flow\n         Figure 5: Neglected\
    \ Reservation Subtree problem case 2\n                   after join of receiver\
    \ C\n      The additional amount of EF without a corresponding reservation is\n\
    \      forwarded together with the aggregate which has a reservation.\n      This\
    \ results in no packet losses for Expedited Forwarding as long\n      as the resulting\
    \ aggregate is not higher than the output link\n      bandwidth.  Because of its\
    \ higher priority, Expedited Forwarding\n      gets as much bandwidth as needed\
    \ and as is available.  The effects\n      on other PHBs are illustrated by the\
    \ following example in Fig. 6.\n   +------------------+---------------------+--------------+------+\n\
    \   | Expedited Forw.  | Expedited Forw.     | Assured Forw.|  BE  |\n   |   \
    \               |                     |              |      |\n   | with reservation\
    \ | excess flow         | with reserv. |      |\n   |                  | without\
    \ reservation |              |      |\n   +------------------+---------------------+--------------+------+\n\
    \   |      40%         |        30%          |     30%      |  0%  |\n   +------------------+---------------------+--------------+------+\n\
    \     EF with reservation and the excess flow use together 70%\n     of the link\
    \ bandwidth because EF, with or without reservation,\n     has the highest priority.\n\
    \               (a) Excess flow has EF codepoint\n   +------------------+---------------------+--------------+------+\n\
    \   | Expedited Forw.  | Assured Forw.       | Assured Forw.|  BE  |\n   |   \
    \               |                     |              |      |\n   | with reservation\
    \ | excess flow         | with reserv. |      |\n   |                  | without\
    \ reservation |              |      |\n   +------------------+---------------------+--------------+------+\n\
    \   |      40%         |                   60%              |  0%  |\n   |   \
    \               |                (10% loss)          |      |\n   +------------------+---------------------+--------------+------+\n\
    \     AF with reservation and the excess flow use together 60%\n     of the link\
    \ bandwidth because EF has the highest priority\n     (-> 40%).  10% of AF packets\
    \ will be lost.\n               (b) Excess flow has AF codepoint\n        Figure\
    \ 6: Resulting share of bandwidth in an interior\n                  node with\
    \ a neglected reservation of (a) an\n                  Expedited Forwarding flow\
    \ or (b) an Assured\n                  Forwarding flow\n      The result of case\
    \ 2 is that there is no restriction for Expedited\n      Forwarding, but as Fig.\
    \ 6 (a) shows, other services will be\n      extremely disadvantaged by this use\
    \ of non-reserved resources.\n      Their bandwidth is used by the new additional\
    \ flow.  In this case,\n      the additional 30% Expedited Forwarding traffic\
    \ preempts resources\n      from the Assured Forwarding traffic, which in turn\
    \ preempts\n      resources from the best-effort traffic, resulting in 10% packet\n\
    \      losses for the Assured Forwarding aggregate, and a complete loss\n    \
    \  of best-effort traffic.  The example in Fig. 6 (b) shows that this\n      can\
    \ also happen with lower priority services like Assured\n      Forwarding.  When\
    \ a reservation for a service flow with lower\n      priority is neglected, other\
    \ services (with even lower priority)\n      can be reduced in their quality (in\
    \ this case the best-effort\n      service).  As shown in the example, the service's\
    \ aggregate\n      causing the NRS problem can itself be affected by packet losses\n\
    \      (10% of the Assured Forwarding aggregate is discarded).  Besides\n    \
    \  the described problems of case 2, case 1 will occur in the DS\n      boundary\
    \ node of the next DS domain that performs traffic metering\n      and policing\
    \ for the service aggregate.\n   Directly applying RSVP to Differentiated Services\
    \ would also result\n   in temporary occurrence of the NRS Problem.  A receiver\
    \ has to join\n   the IP multicast group to receive the sender's PATH messages,\
    \ before\n   being able to send a resource reservation request (RESV message).\n\
    \   Thus, the join message on the link for receiving PATH messages can\n   cause\
    \ the NRS Problem, if this situation is not handled in a special\n   way (e.g.,\
    \ by marking all PATH messages with codepoint 0 and dropping\n   or re-marking\
    \ all other data packets of the multicast flow).\n"
- title: 2.2.  Heterogeneous Multicast Groups
  contents:
  - "2.2.  Heterogeneous Multicast Groups\n   Heterogeneous multicast groups contain\
    \ one or more receivers, which\n   would like to get another service or quality\
    \ of service as the sender\n   provides or other receiver subsets currently use.\
    \  A very important\n   characteristic which should be supported by Differentiated\
    \ Services\n   is that participants requesting a best-effort quality only should\n\
    \   also be able to participate in a group communication which otherwise\n   utilizes\
    \ a better service class.  The next better support for\n   heterogeneity provides\
    \ concurrent use of more than two different\n   service classes within a group.\
    \  Things tend to get even more complex\n   when not only different service classes\
    \ are required, but also\n   different values for quality parameters within a\
    \ certain service\n   class.\n   A further problem is to support heterogeneous\
    \ groups with different\n   service classes in a consistent way.  It is possible\
    \ that some\n   services will not be comparable to each other so that one service\n\
    \   cannot be replaced by the other, and both services have to be\n   provided\
    \ over the same link within this group.\n   Because an arbitrary new receiver\
    \ that wants to get the different\n   service can be grafted to any point of the\
    \ current multicast delivery\n   tree, even interior nodes may have to replicate\
    \ packets using the\n   different service.  At a first glance, this seems to be\
    \ a\n   contradiction with respect to simplicity of the interior nodes,\n   because\
    \ they do not even have a profile available and should now\n   convert the service\
    \ of quality of individual receivers.\n   Consequently, in order to accomplish\
    \ this, interior nodes have to\n   change the codepoint value during packet replication.\n"
- title: 2.3.  Dynamics of Any-Source Multicast
  contents:
  - "2.3.  Dynamics of Any-Source Multicast\n   Basically, within an IP multicast\
    \ group, any participant (actually,\n   it can be any host not even receiving\
    \ packets of this multicast\n   group) can act as a sender.  This is an important\
    \ feature which\n   should also be available in case a specific service other\
    \ than best-\n   effort is used within the group.  Differentiated Services possess,\n\
    \   conceptually, a unidirectional character.  Therefore, for every\n   multicast\
    \ tree implied by a sender, resources must be reserved\n   separately if simultaneous\
    \ sending should be possible with a better\n   service.  This is even true if\
    \ shared multicast delivery trees are\n   used (e.g., with PIM-SM or Core Based\
    \ Trees).  If not enough\n   resources are reserved for a service within a multicast\
    \ tree allowing\n   simultaneous sending of more than one participant, the NRS\
    \ problem\n   will occur again.  The same argument applies to half-duplex\n  \
    \ reservations which would share the reserved resources by several\n   senders,\
    \ because it cannot be ensured by the network that exactly one\n   sender sends\
    \ packets to the group.  Accordingly, the corresponding\n   RSVP reservation styles\
    \ \"Wildcard Filter\" and \"Shared-Explicit\n   Filter\" [4] cannot be supported\
    \ within Differentiated Services.  The\n   Integrated Services approach is able\
    \ to ensure the half-duplex nature\n   of the traffic, because every router can\
    \ check each packet for its\n   conformance with the installed reservation state.\n"
- title: 3.  Solutions for Enabling IP-Multicast in Differentiated Services
  contents:
  - "3.  Solutions for Enabling IP-Multicast in Differentiated Services\n    Networks\n\
    \   The problems described in the previous section are mainly caused by\n   the\
    \ simplicity of the Differentiated Services architecture.\n   Solutions that do\
    \ not introduce additional complexity need to be\n   introduced so as to not diminish\
    \ the scalability of the DiffServ\n   approach.  This document suggests a straightforward\
    \ solution for most\n   of the problems.\n"
- title: 3.1.  Solution for the NRS Problem
  contents:
  - "3.1.  Solution for the NRS Problem\n   The proposed solution consists conceptually\
    \ of the following three\n   steps that are described in more detail later.\n\
    \      1. A new receiver joins a multicast group that is using a DiffServ\n  \
    \       service.  Multicast routing protocols accomplish the connection\n    \
    \     of the new branch to the (possibly already existing) multicast\n       \
    \  delivery tree as usual.\n      2. The unauthorized use of resources is avoided\
    \ by re-marking at\n         branching nodes all additional packets departing\
    \ down the new\n         branch.  At first, the new receiver will get all packets\
    \ of the\n         multicast group without quality of service.  The management\n\
    \         entity of the correspondent DiffServ domain may get informed\n     \
    \    about the extension of the multicast tree.\n      3. If a pre-issued reservation\
    \ is available for the new branch or\n         somebody (receiver, sender or a\
    \ third party) issues one, the\n         management entity instructs the branching\
    \ router to set the\n         corresponding codepoint for the demanded service.\n\
    \   Usage of resources which were not previously reserved must be\n   prevented.\
    \  In the following example, we consider a case where the\n   join of a new receiver\
    \ to a DS multicast group requires grafting of a\n   new branch to an already\
    \ existing multicast delivering tree.  The\n   connecting node that joins both\
    \ trees converts the codepoint (and\n   therefore the Per-Hop Behavior) to a codepoint\
    \ of a PHB which is\n   similar to the default PHB in order to provide a best-effort-like\n\
    \   service for the new branch.  More specifically, this particular PHB\n   can\
    \ provide a service that is even worse than the best-effort service\n   of the\
    \ default PHB.  See RFC 3662 [16] for a corresponding Lower\n   Effort Per-Domain\
    \ Behavior.\n   The conversion to this specific PHB could be necessary in order\
    \ to\n   avoid unfairness being introduced within the best-effort service\n  \
    \ aggregate, and, which results from the higher amount of resource\n   usage of\
    \ the incoming traffic belonging to the multicast group.  If\n   the rate at which\
    \ re-marked packets are injected into the outgoing\n   aggregate is not reduced,\
    \ those re-marked packets will probably cause\n   discarding of other flow's packets\
    \ in the outgoing aggregate if\n   resources are scarce.\n   Therefore, the re-marked\
    \ packets from this multicast group should be\n   discarded more aggressively\
    \ than other packets in this outgoing\n   aggregate.  This could be accomplished\
    \ by using an appropriately\n   configured PHB (and a related DSCP) for those\
    \ packets.  In order to\n   distinguish this kind of PHB from the default PHB,\
    \ it is referred to\n   as the Limited Effort (LE) PHB (which can be realized\
    \ by an\n   appropriately configured AF PHB [9] or Class Selector Compliant PHB\n\
    \   [1]) throughout this document.  Merely dropping packets more\n   aggressively\
    \ at the re-marking node is not sufficient, because there\n   may be enough resources\
    \ in the outgoing behavior aggregate (BA) to\n   transmit every re-marked packet\
    \ without having to discard any other\n   packets within the same BA.  However,\
    \ resources in the next node may\n   be short for this particular BA.  Those \"\
    excess\" packets, therefore,\n   must be identifiable at this node.\n   Re-marking\
    \ packets is only required at branching nodes, whereas all\n   other nodes of\
    \ the multicast tree (such with outdegree 1) replicate\n   packets as usual. \
    \ Because a branching node may also be an interior\n   node of a domain, re-marking\
    \ of packets requires conceptually per-\n   flow classification.  Though this\
    \ seems to be in contradiction to the\n   DiffServ philosophy of a core that avoids\
    \ per-flow states, IP\n   multicast flows are different from unicast flows: traditional\
    \ IP\n   multicast forwarding and multicast routing are required to install\n\
    \   states per multicast group for every outgoing link anyway.\n   Therefore,\
    \ re-marking in interior nodes is scalable to the same\n   extent as IP multicast\
    \ (cf. section 4).\n   Re-marking with standard DiffServ mechanisms [10] for every\
    \ new\n   branch requires activation of a default traffic profile.  The latter\n\
    \   accomplishes re-marking by using a combination of an MF-classifier\n   and\
    \ a marker at an outgoing link that constitutes a new branch.  The\n   classifier\
    \ will direct all replicated packets to a marker that sets\n   the new codepoint.\
    \  An alternative implementation is described in\n   section 7.\n   The better\
    \ service will only be provided if a reservation request was\n   processed and\
    \ approved by the resource management function.  That\n   means an admission control\
    \ test must be performed before resources\n   are actually used by the new branch.\
    \  In case the admission test is\n   successful, the re-marking node will be instructed\
    \ by the resource\n   management to stop re-marking and to use the original codepoint\
    \ again\n   (conceptually by removing the profile).\n   In summary, only those\
    \ receivers will obtain a better service within\n   a DiffServ multicast group,\
    \ which previously reserved the\n   corresponding resources in the new branch\
    \ with assistance of the\n   resource management.  Otherwise, they get a quality\
    \ which might be\n   even lower than best-effort.\n"
- title: 3.2.  Solution for Supporting Heterogeneous Multicast Groups
  contents:
  - "3.2.  Solution for Supporting Heterogeneous Multicast Groups\n   In this document,\
    \ considerations are limited to provisioning\n   different service classes, but\
    \ not different quality parameters\n   within a certain service class.\n   The\
    \ proposed concept from section 3.1 provides a limited solution of\n   the heterogeneity\
    \ problem.  Receivers are allowed to obtain a Limited\n   Effort service without\
    \ a reservation, so that at least two different\n   service classes within a multicast\
    \ group are possible.  Therefore, it\n   is possible for any receiver to participate\
    \ in the multicast session\n   without getting any quality of service.  This is\
    \ useful if a receiver\n   just wants to see whether the content of the multicast\
    \ group is\n   interesting enough, before requesting a better service which must\
    \ be\n   paid for (like snooping into a group without prior reservation).\n  \
    \ Alternatively, a receiver might not be able to receive this better\n   quality\
    \ of service (e.g., because it is mobile and uses a wireless\n   link of limited\
    \ capacity), but it may be satisfied with the reduced\n   quality, instead of\
    \ getting no content at all.\n   Additionally, applying the RSVP concept of listening\
    \ for PATH\n   messages before sending any RESV message is feasible again.  Without\n\
    \   using the proposed solution, this would have caused the NRS Problem.\n   Theoretically,\
    \ the proposed approach in section 7 also supports more\n   than two different\
    \ services within one multicast group, because the\n   additional field in the\
    \ multicast routing table can store any DSCP\n   value.  However, this would work\
    \ only if PHBs can be ordered, so that\n   the \"best\" PHB among different required\
    \ PHBs downstream is chosen to\n   be forwarded on a specific link.  This is mainly\
    \ a management issue\n   and is out of the scope of this document.\n   More advanced\
    \ concepts may also support conditional re-marking in\n   dependence on the group\
    \ address and DSCP value.  This is useful if\n   the group uses different PHBs\
    \ (e.g., for flows to different transport\n   protocol ports) and the re-marking\
    \ should thus additionally depend on\n   the DSCP value of an incoming packet.\n"
- title: 3.3.  Solution for Any-Source Multicast
  contents:
  - "3.3.  Solution for Any-Source Multicast\n   Every participant would have to initiate\
    \ an explicit reservation to\n   ensure the possibility of sending to the group\
    \ with a better service\n   quality, regardless of whether other senders within\
    \ the group already\n   use the same service class simultaneously.  This would\
    \ require a\n   separate reservation for each sender-rooted multicast tree.\n\
    \   However, in the specific case of best-effort service (the default\n   PHB),\
    \ it is nevertheless possible for participants to send packets to\n   the group\
    \ anytime without requiring any additional mechanisms.  The\n   reason for this\
    \ is that the first DS-capable boundary node will mark\n   those packets with\
    \ the DSCP of the default PHB because of a missing\n   traffic profile for this\
    \ particular sender.  The first DS capable\n   boundary nodes should therefore\
    \ always classify multicast packets\n   based on both the sender's address and\
    \ the multicast group address.\n"
- title: 4.  Scalability Considerations
  contents:
  - "4.  Scalability Considerations\n   The proposed solution does not add complexity\
    \ to the DS architecture\n   or to a DS node, nor does it change the scalability\
    \ properties of\n   DiffServ.  With current IP multicast routing protocols, a\
    \ multicast\n   router has to manage and hold state information per traversing\n\
    \   multicast flow.  The suggested solution scales to the same extent as\n   IP\
    \ multicast itself, because the proposed re-marking may occur per\n   branch of\
    \ a multicast flow.  This re-marking is logically associated\n   with an addition\
    \ to the multicast routing state that is required\n   anyway.  In this respect,\
    \ re-marking of packets for multicast flows\n   in interior nodes is not considered\
    \ as a scalability problem or to be\n   in contradiction to the DiffServ approach\
    \ itself.  It is important to\n   distinguish the multicast case from existing\
    \ justifiable scalability\n   concerns relating to re-marking packets of unicast\
    \ flows within\n   interior routers.  Moreover, the decision of when to change\
    \ a re-\n   marking policy is not performed by the router, but by some management\n\
    \   entity at a time scale which is different from the time scale at the\n   packet\
    \ forwarding level.\n"
- title: 5.  Deployment Considerations
  contents:
  - "5.  Deployment Considerations\n   The solution proposed in section 3.1 can be\
    \ deployed on most router\n   platforms available today.  Architectures that perform\
    \ routing and\n   forwarding functions in software could be updated by a new software\n\
    \   release.\n   However, there may be some specialized hardware platforms that\
    \ are\n   currently not able to deploy the proposed solution from section 7.\n\
    \   This may be the case when a multicast packet is directly duplicated\n   on\
    \ the backplane of the router, so that all outgoing interfaces read\n   the packet\
    \ in parallel.  Consequently, the codepoint cannot be\n   changed for a subset\
    \ of these outgoing interfaces and the NRS problem\n   can not be solved directly\
    \ in the branching point.\n   In this case, there exist several alternative solutions:\n\
    \      1. As mentioned in section 3.1, if traffic conditioning mechanisms\n  \
    \       can be applied on the outgoing packets at the individual output\n    \
    \     interfaces, a combination of classifier and marker may be used\n       \
    \  for each branch.\n      2. The change of the codepoint for subtrees without\
    \ properly\n         allocated resources could take place in the following\n \
    \        downstream router.  There, for every incoming packet of the\n       \
    \  considered multicast group, the codepoint would be changed to\n         the\
    \ value that the previous router should have set.  If a LAN\n         (e.g., a\
    \ high-speed switching LAN) is attached to the\n         considered outgoing interface,\
    \ then on every router connected\n         to the LAN, packets of the considered\
    \ group should be changed\n         on the incoming interface by standard DiffServ\
    \ mechanisms.\n   Future releases of router architectures may support the change\
    \ of the\n   codepoint directly in the replication process as proposed in section\n\
    \   7.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Basically, the security considerations in [1]\
    \ apply.  The proposed\n   solution does not imply new security aspects.  If a\
    \ join of arbitrary\n   end-systems to a multicast group is not desired (thereby\
    \ receiving a\n   lower than best-effort quality) the application usually has\
    \ to\n   exclude these participants.  This can be accomplished by using\n   authentication,\
    \ authorization, or ciphering techniques at the\n   application level -- like\
    \ in traditional IP multicast scenarios.\n   Moreover, it is important to consider\
    \ the security of corresponding\n   management mechanisms, because they are used\
    \ to activate re-marking\n   of multicast flows.  On the one hand, functions for\
    \ instructing the\n   router to mark or re-mark packets of multicast flows are\
    \ attractive\n   targets to perform theft of service attacks.  On the other hand,\n\
    \   their security depends on the router management mechanisms which are\n   used\
    \ to realize this functionality.  Router management should\n   generally be protected\
    \ against unauthorized use, therefore preventing\n   those attacks as well.\n"
- title: 7.  Implementation Model Example
  contents:
  - "7.  Implementation Model Example\n   One possibility of implementing the proposed\
    \ solution from section\n   3.1 is described in the following.  It has to be emphasized\
    \ that\n   other realizations are also possible, and this description should not\n\
    \   be understood as a restriction on potential implementations.  The\n   benefit\
    \ of the following described implementation is that it does not\n   require any\
    \ additional classification of multicast groups within an\n   aggregate.  It serves\
    \ as a proof of concept that no additional\n   complexity is necessary to implement\
    \ the proposed general solution\n   described in section 3.\n   Because every\
    \ multicast flow has to be considered by the multicast\n   routing process (in\
    \ this context, this notion signifies the multicast\n   forwarding part and not\
    \ the multicast route calculation and\n   maintenance part, cf. Fig. 1), the addition\
    \ of an extra byte in each\n   multicast routing table entry containing the DS\
    \ field, and thus its\n   DS codepoint value per output link (resp. virtual interface,\
    \ see Fig.\n   8), results in nearly no additional cost.  Packets will be replicated\n\
    \   by the multicast forwarding process, so this is also the right place\n   for\
    \ setting the correct DSCP values of the replicated packets.  Their\n   DSCP values\
    \ are not copied from the incoming original packet, but\n   from the additional\
    \ DS field in the multicasting routing table entry\n   for the corresponding output\
    \ link (only the DSCP value must be\n   copied, while the two remaining bits are\
    \ ignored and are present for\n   simplification reasons only).  This field initially\
    \ contains the\n   codepoint of the LE PHB if incoming packets for this specific\
    \ group\n   do not carry the codepoint of the default PHB.\n   When a packet arrives\
    \ with the default PHB, the outgoing replicates\n   should also get the same codepoint\
    \ in order to retain the behavior of\n   current common multicast groups using\
    \ the default PHB.  A router\n   configuration message changes the DSCP values\
    \ in the multicast\n   routing table and may also carry the new DSCP value which\
    \ should be\n   set in the replicated packets.  It should be noted that although\
    \ re-\n   marking may also be performed by interior nodes, the forwarding\n  \
    \ performance will not be decreased, because the decision of when and\n   what\
    \ to re-mark is made by the management (control plane).\n     Multicast   Other\
    \    List\n     Destination Fields   of\n     Address              virtual   \
    \                Inter-   DS\n                          interfaces           \
    \     face ID  Field\n    +--------------------------------+             +-------------------+\n\
    \    |    X      | .... |     *-------------------->|   C   | (DSCP,CU) |\n  \
    \  |--------------------------------|             +-------------------+\n    |\
    \    Y      | .... |     *-----------+         |   D   | (DSCP,CU) |\n    |--------------------------------|\
    \   |         +-------------------+\n    |   ...     | .... |    ...      |  \
    \ |\n    .           .      .             .   |         +-------------------+\n\
    \    .   ...     . .... .    ...      .   +-------->|   B   | (DSCP,CU) |\n  \
    \  +--------------------------------+             +-------------------+\n    |\
    \   ...     | .... |    ...      |             |   D   | (DSCP,CU) |\n    +--------------------------------+\
    \             +-------------------+\n                                        \
    \           |  ...  |   ...     |\n                                          \
    \         .       .           .\n                                            \
    \       .       .           .\n         Figure 8: Multicast routing table with\
    \ additional\n                   fields for DSCP values\n"
- title: 8.  Proof of the Neglected Reservation Subtree Problem
  contents:
  - "8.  Proof of the Neglected Reservation Subtree Problem\n   In the following,\
    \ it is shown that the NRS problem actually exists\n   and occurs in reality.\
    \  Hence, the problem and its solution was\n   investigated using a standard Linux\
    \ Kernel (v2.4.18) and the Linux-\n   based implementation KIDS [11].\n   Furthermore,\
    \ the proposed solution for the NRS problem has been\n   implemented by enhancing\
    \ the multicast routing table, as well as the\n   multicast routing behavior in\
    \ the Linux kernel.  In the following\n   section, the modifications are briefly\
    \ described.\n   Additional measurements with the simulation model simulatedKIDS\
    \ [12]\n   will be presented in section 9.  They show the effects of the NRS\n\
    \   problem in more detail and also the behavior of the BAs using or not\n   using\
    \ the Limited Effort PHB for re-marking.\n"
- title: 8.1.  Implementation of the Proposed Solution
  contents:
  - "8.1.  Implementation of the Proposed Solution\n   As described in section 3.1,\
    \ the proposed solution for avoiding the\n   NRS Problem is an extension of each\
    \ routing table entry in every\n   Multicast router by one byte.  In the Linux\
    \ OS, the multicast routing\n   table is implemented by the \"Multicast Forwarding\
    \ Cache (MFC)\".  The\n   MFC is a hash table consisting of an \"mfc-cache\"-entry\
    \ for each\n   combination of the following three parameters: sender's IP address,\n\
    \   multicast group address, and incoming interface.\n   The routing information\
    \ in a \"mfc-cache\"-entry is kept in an array of\n   TTLs for each virtual interface.\
    \  When the TTL is zero, a packet\n   matching to this \"mfc-cache\"-entry will\
    \ not be forwarded on this\n   virtual interface.  Otherwise, if the TTL is less\
    \ than the packet's\n   TTL, the latter will be forwarded on the interface with\
    \ a decreased\n   TTL.\n   In order to set an appropriate codepoint if bandwidth\
    \ is allocated on\n   an outgoing link, we added a second array of bytes -- similar\
    \ to the\n   TTL array -- for specifying the codepoint that should be used on\
    \ a\n   particular virtual interface.  The first six bits of the byte contain\n\
    \   the DSCP that should be used, and the seventh bit indicates whether\n   the\
    \ original codepoint in the packet has to be changed to the\n   specified one\
    \ (=0) or has to be left unchanged (=1).  The default\n   entry of the codepoint\
    \ byte is zero; so initially, all packets will\n   be re-marked to the default\
    \ DSCP.\n   Furthermore, we modified the multicast forwarding code for\n   considering\
    \ this information while replicating multicast packets.  To\n   change an \"mfc-cache\"\
    -entry we implemented a daemon for exchanging\n   the control information with\
    \ a management entity (e.g., a bandwidth\n   broker).  Currently, the daemon uses\
    \ a proprietary protocol, but\n   migration to the COPS protocol (RFC 2748) is\
    \ planned.\n"
- title: 8.2.  Test Environment and Execution
  contents:
  - "8.2.  Test Environment and Execution\n   Sender\n    +---+             FHN: First\
    \ Hop Node\n    | S |             BN: Boundary Node\n    +---+\n      +#\n   \
    \   +#\n      +#\n     +---+            +--+           +------+\n     |FHN|++++++++++++|BN|+++++++++++|\
    \ host |\n     |   |############|  |***********|  B   |\n     +---+          \
    \  +--+##         +------+\n       +#                   #\n        +#        \
    \           #\n         +#                   #\n         +------+           +------+\n\
    \         |host A|           |host C|\n         +------+           +------+\n\
    \   +++  EF flow (group1) with reservation\n   ###  EF flow (group2) with reservation\n\
    \   ***  EF flow (group2) without reservation\n         Figure 8.1: Evaluation\
    \ of NRS-Problem described in\n                     Figure 3\n   In order to prove\
    \ case 1 of the NRS problem, as described in section\n   2.1, the testbed shown\
    \ in Figure 8.1 was built.  It is a reduced\n   version of the network shown in\
    \ Figure 5 and consists of two DS-\n   capable nodes, an ingress boundary node\
    \ and an egress boundary node.\n   The absence of interior nodes does not have\
    \ any effect on to the\n   proof of the described problem.\n   The testbed is\
    \ comprised of two Personal Computers (Pentium III at\n   450 Mhz, 128 MB Ram,\
    \ 3 network cards Intel eepro100) used as DiffServ\n   nodes, as well as one sender\
    \ and three receiver systems (also PCs).\n   On the routers, KIDS has been installed\
    \ and an mrouted (Multicast\n   Routing Daemon) was used to perform multicast\
    \ routing.  The network\n   was completely built of separate 10BaseT Ethernet\
    \ segments in full-\n   duplex mode.  In [11], we evaluated the performance of\
    \ the software\n   routers and found out that even a PC at 200Mhz had no problem\n\
    \   handling up to 10Mbps DS traffic on each link.  Therefore, the\n   presented\
    \ measurements are not a result of performance bottlenecks\n   caused by these\
    \ software routers.\n   The sender generated two shaped UDP traffic flows of 500kbps\
    \ (packets\n   of 1.000 byte constant size) each and sent them to multicast group\
    \ 1\n   (233.1.1.1) and 2 (233.2.2.2).  In both measurements, receiver A had\n\
    \   a reservation along the path to the sender for each flow, receiver B\n   had\
    \ reserved for flow 1, and C for flow 2.  Therefore, two static\n   profiles are\
    \ installed in the ingress boundary node with 500kbps EF\n   bandwidth and a token\
    \ bucket size of 10.000 bytes for each flow.\n   In the egress boundary node,\
    \ one profile has been installed for the\n   output link to host B and one related\
    \ for the output link to host C.\n   Each of them permits up to 500kbps Expedited\
    \ Forwarding, but only the\n   aggregate of Expedited Forwarding traffic carried\
    \ on the outgoing\n   link is considered.\n   In measurement 1, the hosts A and\
    \ B joined to group 1, while A, B,\n   and C joined to group 2.  Those joins are\
    \ using a reservation for the\n   group towards the sender.  Only the join of\
    \ host B to group 2 has no\n   admitted reservation.  As described in section\
    \ 2.1, this will cause\n   the NRS problem (case 1).  Metering and policing mechanisms\
    \ in the\n   egress boundary node throttle down the EF aggregate to the reserved\n\
    \   500kbps, and do not depend on whether or not individual flows have\n   been\
    \ reserved.\n                +--------+--------+--------+\n                | Host\
    \ A | Host B | Host C |\n      +---------+--------+--------+--------+\n      |\
    \ Group 1 | 500kbps| 250kbps| 500kbps|\n      +---------+--------+--------+--------+\n\
    \      | Group 2 | 500kbps| 250kbps|        |\n      +---------+--------+--------+--------+\n\
    \          Figure 8.2: Results of measurement 1 (without the\n               \
    \       proposed solution): Average bandwidth of\n                      each flow.\n\
    \                      --> Flows of group 1 and 2 on the link to\n           \
    \           host B share the reserved aggregate of\n                      group\
    \ 1.\n   Figure 8.2 shows the obtained results.  Host A and C received their\n\
    \   flows without any interference.  But host B received data from group\n   1\
    \ with only half of the reserved bandwidth, so one half of the\n   packets have\
    \ been discarded.  Figure 8.2 also shows that receiver B\n   got the total amount\
    \ of bandwidth for group 1 and 2, that is exactly\n   the reserved 500kbps.  Flow\
    \ 2 got Expedited Forwarding without\n   actually having reserved any bandwidth\
    \ and additionally violated the\n   guarantee of group 1 on that link.\n   For\
    \ measurement 2, the previously presented solution (cf. section\n   3.1) has been\
    \ installed in the boundary node.  Now, while duplicating\n   the packets, whether\
    \ the codepoint has to be changed to Best-Effort\n   (or Limited Effort) or whether\
    \ it can be just duplicated is checked.\n   In this measurement, it changed the\
    \ codepoint for group 2 on the link\n   to Host B to Best-Effort.\n          \
    \      +--------+--------+--------+\n                | Host A | Host B | Host\
    \ C |\n      +---------+--------+--------+--------+\n      | Group 1 | 500kbps|\
    \ 500kbps| 500kbps|\n      +---------+--------+--------+--------+\n      | Group\
    \ 2 | 500kbps| 500kbps|        |\n      +---------+--------+--------+--------+\n\
    \          Figure 8.3: Results of measurement 1 (with the\n                  \
    \    proposed solution): Average bandwidth of\n                      each flow.\n\
    \                      --> Flow of group 1 on the link to host B\n           \
    \           gets the reserved bandwidth of group 1.\n                      The\
    \ flow of group 2 has been re-marked to\n                      Best-Effort.\n\
    \   Results of this measurement are presented in Figure 8.3.  Each host\n   received\
    \ its flows with the reserved bandwidth and without any packet\n   loss.  Packets\
    \ from group 2 are re-marked in the boundary node so\n   that they have been treated\
    \ as best-effort traffic.  In this case,\n   they got the same bandwidth as the\
    \ Expedited Forwarding flow, and\n   because there was not enough other traffic\
    \ on the link present, there\n   was no need to discard packets.\n   The above\
    \ measurements confirm that the Neglected Reservation Subtree\n   problem is to\
    \ be taken seriously and that the presented solution will\n   solve it.\n"
- title: 9.  Simulative Study of the NRS Problem and Limited Effort PHB
  contents:
  - "9.  Simulative Study of the NRS Problem and Limited Effort PHB\n   This section\
    \ shows some results from a simulative study which shows\n   the correctness of\
    \ the proposed solution and the effect of re-marking\n   the responsible flow\
    \ to Limited Effort.  A proof of the NRS problem\n   has also been given in section\
    \ 8 and in [13].  This section shows the\n   benefit for the default Best Effort\
    \ traffic when Limited Effort is\n   used for re-marking instead of Best Effort.\
    \  The results strongly\n   motivate the use of Limited Effort.\n"
- title: 9.1.  Simulation Scenario
  contents:
  - "9.1.  Simulation Scenario\n   In the following scenario, the boundary nodes had\
    \ a link speed of 10\n   Mpbs and Interior Routers had a link speed of 12 Mbps.\
    \  In boundary\n   nodes, a 5 Mbps aggregate for EF has been reserved.\n   When\
    \ Limited Effort was used, LE got 10% capacity (0.5Mpbs) from the\n   original\
    \ BE aggregate and BE 90% (4.5Mbps) of the original BE\n   aggregate capacity.\
    \  The bandwidth between LE and BE is shared by\n   using WFQ scheduling.\n  \
    \ The following topology was used, where Sx is a sender, BRx a boundary\n   node,\
    \ IRx an interior node, and Dx a destination/receiver.\n     +--+ +--+       \
    \                +---+     +--+\n     |S1| |S0|                     /=|BR5|=====|D0|\n\
    \     +--+ +--+                    // +---+     +--+\n       \\\\  ||        \
    \            //\n        \\\\ ||                   //\n   +--+  \\+---+     +---+\
    \     +---+      +---+     +--+\n   |S2|===|BR1|=====|IR1|=====|IR2|======|BR3|=====|D1|\n\
    \   +--+   +---+    /+---+     +---+      +---+     +--+\n                  //\
    \                       \\\\        +--+\n                 //                \
    \         \\\\     /=|D2|\n   +--+   +---+ //                           \\\\ \
    \  // +--+\n   |S3|===|BR2|=/                            +---+/\n   +--+   +---+\
    \                            /=|BR4|=\\\n           ||                       \
    \ +--+ // +---+ \\\\ +--+\n          +--+                       |D4|=/       \
    \  \\=|D3|\n          |S4|                       +--+             +--+\n     \
    \     +--+\n              Figure 9.1: Simulation Topology\n   The following table\
    \ shows the flows in the simulation runs, e.g., EF0\n   is sent from Sender S0\
    \ to Destination D0 with a rate of 4 Mbps using\n   an EF reservation.\n   In\
    \ the presented cases (I to IV), different amounts of BE traffic\n   were used\
    \ to show the effects of Limited Effort in different cases.\n   The intention\
    \ of these four cases is described after the table.\n   In all simulation models,\
    \ EF sources generated constant rate traffic\n   with constant packet sizes using\
    \ UDP.\n   The BE sources also generated constant rate traffic, where BE0 used\n\
    \   UDP, and BE1 used TCP as a transport protocol.\n   +----+--------+-------+----------+-----------+-----------+---------+\n\
    \   |Flow| Source | Dest. |  Case I  |  Case II  |  Case III | Case IV |\n   +----+--------+-------+----------+-----------+-----------+---------+\n\
    \   | EF0|   S0   |  D0   |  4 Mbps  |   4 Mbps  |   4 Mbps  |  4 Mbps |\n   +----+--------+-------+----------+-----------+-----------+---------+\n\
    \   | EF1|   S1   |  D1   |  2 Mbps  |   2 Mbps  |   2 Mbps  |  2 Mbps |\n   +----+--------+-------+----------+-----------+-----------+---------+\n\
    \   | EF2|   S2   |  D2   |  5 Mbps  |   5 Mbps  |   5 Mbps  |  5 Mbps |\n   +----+--------+-------+----------+-----------+-----------+---------+\n\
    \   | BE0|   S3   |  D3   |  1 Mbps  | 2.25 Mbps | 0.75 Mbps |3.75 Mbps|\n   +----+--------+-------+----------+-----------+-----------+---------+\n\
    \   | BE1|   S4   |  D4   |  4 Mbps  | 2.25 Mbps | 0.75 Mbps |3.75 Mbps|\n   +----+--------+-------+----------+-----------+-----------+---------+\n\
    \   Table 9.1: Direction, amount and Codepoint of flows in the four\n        \
    \      simulation cases (case I to IV)\n   The four cases (I to IV) used in the\
    \ simulation runs had the\n   following characteristics:\n   Case I:   In this\
    \ scenario, the BE sources sent together exactly 5\n             Mbps, so there\
    \ is no congestion in the BE queue.\n   Case II:  BE is sending less than 5 Mbps,\
    \ so there is space available\n             in the BE queue for re-marked traffic.\
    \  BE0 and BE1 are\n             sending together 4.5 Mbps, which is exactly the\
    \ share of BE\n             when LE is used.  So, when multicast packets are re-marked\n\
    \             to LE because of the NRS problem, the LE should get 0.5\n      \
    \       Mbps and BE 4.5 Mbps, which is still enough for BE0 and\n            \
    \ BE1.  LE should not show a greedy behavior and should not\n             use\
    \ resources from BE.\n   Case III: In this case, BE is very low.  BE0 and BE1\
    \ use together\n             only 1.5 Mbps.  So when LE is used, it should be\
    \ able to\n             use the unused bandwidth resources from BE.\n   Case IV:\
    \  BE0 and BE1 send together 7.5 Mbps so there is congestion\n             in\
    \ the BE queue.  In this case, LE should get 0.5 Mbps (not\n             more\
    \ and not less).\n   In each scenario, loss rate and throughput of the considered\
    \ flows\n   and aggregates have been metered.\n"
- title: 9.2.  Simulation Results for Different Router Types
  contents:
  - '9.2.  Simulation Results for Different Router Types

    '
- title: 9.2.1.  Interior Node
  contents:
  - "9.2.1.  Interior Node\n   When the branching point of a newly added multicast\
    \ subtree is\n   located in an interior node, the NRS problem can occur as described\n\
    \   in section 2.1 (Case 2).\n   In the simulation runs presented in the following\
    \ four subsections,\n   D3 joins to the multicast group of sender S0 without making\
    \ any\n   reservation or resource allocation.  Consequently, a new branch is\n\
    \   added to the existing multicast tree.  The branching point issued by\n   the\
    \ join of D3 is located in IR2.  On the link to BR3, no bandwidth\n   was allocated\
    \ for the new flow (EF0).\n   The metered throughput of flows on the link between\
    \ IR2 and BR3 in\n   the four different cases is shown in the following four subsections.\n\
    \   The situation before the new receiver joins is shown in the second\n   column.\
    \  The situation after the join without the proposed solution\n   is shown in\
    \ column three.  The fourth column presents the results\n   when the proposed\
    \ solution of section 3.1 is used and the responsible\n   flow is re-marked to\
    \ LE.\n"
- title: '9.2.1.1.  Case I:'
  contents:
  - "9.2.1.1.  Case I:\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        |  before join    | after join      |after join,       |\n   |  \
    \      |                 | (no re-marking) |(re-marking to LE)|\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0: 4.007 Mbps | LE0: 0.504 Mbps  |\n   |achieved|\
    \ EF1: 2.001 Mbps | EF1: 2.003 Mbps | EF1: 2.000 Mbps  |\n   |through-| EF2: 5.002\
    \ Mbps | EF2: 5.009 Mbps | EF2: 5.000 Mbps  |\n   |put     | BE0: 1.000 Mbps |\
    \ BE0: 0.601 Mbps | BE0: 1.000 Mbps  |\n   |        | BE1: 4.000 Mbps | BE1: 0.399\
    \ Mbps | BE1: 3.499 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |BA      | EF:  7.003 Mbps | EF: 11.019 Mbps | EF:  7.000 Mbps  |\n   |through-|\
    \ BE:  5.000 Mbps | BE:  1.000 Mbps | BE:  4.499 Mbps  |\n   |put     | LE:  \
    \  ---      | LE:    ---      | LE:  0.504 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:     0 %    | LE0:  87.4 %     |\n   |packet\
    \  | EF1:     0 %    | EF1:     0 %    | EF1:     0 %     |\n   |loss    | EF2:\
    \     0 %    | EF2:     0 %    | EF2:     0 %     |\n   |rate    | BE0:     0\
    \ %    | BE0:  34.8 %    | BE0:     0 %     |\n   |        | BE1:     0 %    |\
    \ BE1:  59.1 %    | BE1:     0 %     |\n   +--------+-----------------+-----------------+------------------+\n\
    \    (*) EF0 is re-marked to LE and signed as LE0\n"
- title: '9.2.1.2.  Case II:'
  contents:
  - "9.2.1.2.  Case II:\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        |  before join    | after join      |after join,       |\n   |  \
    \      |                 | (no re-marking) |(re-marking to LE)|\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0: 4.003 Mbps | LE0: 0.500 Mbps  |\n   |achieved|\
    \ EF1: 2.000 Mbps | EF1: 2.001 Mbps | EF1: 2.001 Mbps  |\n   |through-| EF2: 5.002\
    \ Mbps | EF2: 5.005 Mbps | EF2: 5.002 Mbps  |\n   |put     | BE0: 2.248 Mbps |\
    \ BE0: 0.941 Mbps | BE0: 2.253 Mbps  |\n   |        | BE1: 2.252 Mbps | BE1: 0.069\
    \ Mbps | BE1: 2.247 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |BA      | EF:  7.002 Mbps | EF: 11.009 Mbps | EF:  7.003 Mbps. |\n   |through-|\
    \ BE:  4.500 Mbps | BE:  1.010 Mbps | BE:  4.500 Mbps  |\n   |put     | LE:  \
    \  ---      | LE:    ---      | LE:  0.500 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:     0 %    | LE0:  87.4 %     |\n   |packet\
    \  | EF1:     0 %    | EF1:     0 %    | EF1:     0 %     |\n   |loss    | EF2:\
    \     0 %    | EF2:     0 %    | EF2:     0 %     |\n   |rate    | BE0:     0\
    \ %    | BE0:  58.0 %    | BE0:     0 %     |\n   |        | BE1:     0 %    |\
    \ BE1:  57.1 %    | BE1:     0 %     |\n   +--------+-----------------+-----------------+------------------+\n\
    \    (*) EF0 is re-marked to LE and signed as LE0\n"
- title: '9.2.1.3.  Case III:'
  contents:
  - "9.2.1.3.  Case III:\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        |  before join    | after join      |after join,       |\n   |  \
    \      |                 | (no re-marking) |(re-marking to LE)|\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0: 3.998 Mbps | LE0: 3.502 Mbps  |\n   |achieved|\
    \ EF1: 2.000 Mbps | EF1: 2.001 Mbps | EF1: 2.001 Mbps  |\n   |through-| EF2: 5.000\
    \ Mbps | EF2: 5.002 Mbps | EF2: 5.003 Mbps  |\n   |put     | BE0: 0.749 Mbps |\
    \ BE0: 0.572 Mbps | BE0: 0.748 Mbps  |\n   |        | BE1: 0.749 Mbps | BE1: 0.429\
    \ Mbps | BE1: 0.748 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |BA      | EF:  7.000 Mbps | EF: 11.001 Mbps | EF:  7.004 Mbps  |\n   |through-|\
    \ BE:  1.498 Mbps | BE:  1.001 Mbps | BE:  1.496 Mbps  |\n   |put     | LE:  \
    \  ---      | LE:    ---      | LE:  3.502 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:     0 %    | LE0:  12.5 %     |\n   |packet\
    \  | EF1:     0 %    | EF1:     0 %    | EF1:     0 %     |\n   |loss    | EF2:\
    \     0 %    | EF2:     0 %    | EF2:     0 %     |\n   |rate    | BE0:     0\
    \ %    | BE0:  19.7 %    | BE0:     0 %     |\n   |        | BE1:     0 %    |\
    \ BE1:  32.6 %    | BE1:     0 %     |\n   +--------+-----------------+-----------------+------------------+\n\
    \    (*) EF0 is re-marked to LE and signed as LE0\n"
- title: '9.2.1.4.  Case IV:'
  contents:
  - "9.2.1.4.  Case IV:\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        |  before join    | after join      |after join,       |\n   |  \
    \      |                 | (no re-marking) |(re-marking to LE)|\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0: 4.001 Mbps | LE0: 0.500 Mbps  |\n   |achieved|\
    \ EF1: 2.018 Mbps | EF1: 2.000 Mbps | EF1: 2.003 Mbps  |\n   |through-| EF2: 5.005\
    \ Mbps | EF2: 5.001 Mbps | EF2: 5.007 Mbps  |\n   |put     | BE0: 2.825 Mbps |\
    \ BE0: 1.000 Mbps | BE0: 3.425 Mbps  |\n   |        | BE1: 2.232 Mbps | BE1: \
    \  ---      | BE1: 1.074 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |BA      | EF:  7.023 Mbps | EF: 11.002 Mbps | EF:  7.010 Mbps  |\n   |through-|\
    \ BE:  5.057 Mbps | BE:  1.000 Mbps | BE:  4.499 Mbps  |\n   |put     | LE:  \
    \  ---      | LE:    ---      | LE:  0.500 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:     0 %    | LE0:  75.0 %     |\n   |packet\
    \  | EF1:     0 %    | EF1:     0 %    | EF1:     0 %     |\n   |loss    | EF2:\
    \     0 %    | EF2:     0 %    | EF2:     0 %     |\n   |rate    | BE0:  23.9\
    \ %    | BE0:  73.3 %    | BE0:     0 %     |\n   |        | BE1:  41.5 %    |\
    \ BE1:   ---      | BE1:     0 %     |\n   +--------+-----------------+-----------------+------------------+\n\
    \   (*) EF0 is re-marked to LE and signed as LE0\n   NOTE: BE1 has undefined throughput\
    \ and loss in situation \"after join\n   (no re-marking)\", because TCP is going\
    \ into retransmission back-off\n   timer phase and closes the connection after\
    \ 512 seconds.\n"
- title: 9.2.2.  Boundary Node
  contents:
  - "9.2.2.  Boundary Node\n   When the branching point of a newly added multicast\
    \ subtree is\n   located in a boundary node, the NRS problem can occur as described\
    \ in\n   section 2.1 (Case 1).\n   In the simulation runs presented in the following\
    \ four subsections,\n   D3 joins to the multicast group of sender S1 without making\
    \ any\n   reservation or resource allocation.  Consequently, a new branch is\n\
    \   added to the existing multicast tree.  The branching point issued by\n   the\
    \ join of D3 is located in BR3.  On the link to BR4, no bandwidth\n   was allocated\
    \ for the new flow (EF1).\n   The metered throughput of the flows on the link\
    \ between BR3 and BR4\n   in the four different cases is shown in the following\
    \ four\n   subsections.  The situation before the new receiver joins is shown\
    \ in\n   the second column.  The situation after the join but without the\n  \
    \ proposed solution is shown in column three.  The fourth column\n   presents\
    \ results when the proposed solution of section 3.1 is used\n   and the responsible\
    \ flow is re-marked to LE.\n"
- title: '9.2.2.1.  Case I:'
  contents:
  - "9.2.2.1.  Case I:\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        |  before join    | after join      |after join,       |\n   |  \
    \      |                 | (no re-marking) |(re-marking to LE)|\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:   ---      | EF0:   ---       |\n   |achieved|\
    \ EF1:   ---      | EF1: 1.489 Mbps | LE1: 0.504 Mbps  |\n   |through-| EF2: 5.002\
    \ Mbps | EF2: 3.512 Mbps | EF2: 5.002 Mbps  |\n   |put     | BE0: 1.000 Mbps |\
    \ BE0: 1.000 Mbps | BE0: 1.004 Mbps  |\n   |        | BE1: 4.000 Mbps | BE1: 4.002\
    \ Mbps | BE1: 3.493 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |BA      | EF:  5.002 Mbps | EF:  5.001 Mbps | EF:  5.002 Mbps  |\n   |through-|\
    \ BE:  5.000 Mbps | BE:  5.002 Mbps | BE:  4.497 Mbps  |\n   |put     | LE:  \
    \  ---      | LE:    ---      | LE:  0.504 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:   ---      | EF0:   ---       |\n   |packet\
    \  | EF1:   ---      | EF1:  25.6 %    | LE1:  73.4 %     |\n   |loss    | EF2:\
    \     0 %    | EF2:  29.7 %    | EF2:     0 %     |\n   |rate    | BE0:     0\
    \ %    | BE0:     0 %    | BE0:     0 %     |\n   |        | BE1:     0 %    |\
    \ BE1:     0 %    | BE1:     0 %     |\n   +--------+-----------------+-----------------+------------------+\n\
    \    (*) EF1 is re-marked to LE and signed as LE1\n"
- title: '9.2.2.2.  Case II:'
  contents:
  - "9.2.2.2.  Case II:\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        |  before join    | after join      |after join,       |\n   |  \
    \      |                 | (no re-marking) |(re-marking to LE)|\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:   ---      | EF0:   ---       |\n   |achieved|\
    \ EF1:   ---      | EF1: 1.520 Mbps | LE1: 0.504 Mbps  |\n   |through-| EF2: 5.003\
    \ Mbps | EF2: 3.482 Mbps | EF2: 5.002 Mbps  |\n   |put     | BE0: 2.249 Mbps |\
    \ BE0: 2.249 Mbps | BE0: 2.245 Mbps  |\n   |        | BE1: 2.252 Mbps | BE1: 2.252\
    \ Mbps | BE1: 2.252 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |BA      | EF:  5.003 Mbps | EF:  5.002 Mbps | EF:  5.002 Mbps  |\n   |through-|\
    \ BE:  4.501 Mbps | BE:  4.501 Mbps | BE:  4.497 Mbps  |\n   |put     | LE:  \
    \  ---      | LE:    ---      | LE:  0.504 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:   ---      | EF0:   ---       |\n   |packet\
    \  | EF1:   ---      | EF1:  24.0 %    | LE1:  74.8 %     |\n   |loss    | EF2:\
    \     0 %    | EF2:  30.4 %    | EF2:     0 %     |\n   |rate    | BE0:     0\
    \ %    | BE0:     0 %    | BE0:     0 %     |\n   |        | BE1:     0 %    |\
    \ BE1:     0 %    | BE1:     0 %     |\n   +--------+-----------------+-----------------+------------------+\n\
    \    (*) EF1 is re-marked to LE and signed as LE1\n"
- title: '9.2.2.3.  Case III:'
  contents:
  - "9.2.2.3.  Case III:\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        |  before join    | after join      |after join,       |\n   |  \
    \      |                 | (no re-marking) |(re-marking to LE)|\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:   ---      | EF0:   ---       |\n   |achieved|\
    \ EF1:   ---      | EF1: 1.084 Mbps | LE1: 2.000 Mbps  |\n   |through-| EF2: 5.001\
    \ Mbps | EF2: 3.919 Mbps | EF2: 5.000 Mbps  |\n   |put     | BE0: 0.749 Mbps |\
    \ BE0: 0.752 Mbps | BE0: 0.750 Mbps  |\n   |        | BE1: 0.749 Mbps | BE1: 0.748\
    \ Mbps | BE1: 0.750 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |BA      | EF:  5.001 Mbps | EF:  5.003 Mbps | EF:  5.000 Mbps  |\n   |through-|\
    \ BE:  1.498 Mbps | BE:  1.500 Mbps | BE:  1.500 Mbps  |\n   |put     | LE:  \
    \  ---      | LE:    ---      | LE:  2.000 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:   ---      | EF0:   ---       |\n   |packet\
    \  | EF1:   ---      | EF1:  45.7 %    | LE1:     0 %     |\n   |loss    | EF2:\
    \     0 %    | EF2:  21.7 %    | EF2:     0 %     |\n   |rate    | BE0:     0\
    \ %    | BE0:     0 %    | BE0:     0 %     |\n   |        | BE1:     0 %    |\
    \ BE1:     0 %    | BE1:     0 %     |\n   +--------+-----------------+-----------------+------------------+\n\
    \    (*) EF1 is re-marked to LE and signed as LE1\n"
- title: '9.2.2.4.  Case IV:'
  contents:
  - "9.2.2.4.  Case IV:\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        |  before join    | after join      |after join,       |\n   |  \
    \      |                 | (no re-marking) |(re-marking to LE)|\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:   ---      | EF0:   ---       |\n   |achieved|\
    \ EF1:   ---      | EF1: 1.201 Mbps | LE1: 0.500 Mbps  |\n   |through-| EF2: 5.048\
    \ Mbps | EF2: 3.803 Mbps | EF2: 5.004 Mbps  |\n   |put     | BE0: 2.638 Mbps |\
    \ BE0: 2.535 Mbps | BE0: 3.473 Mbps  |\n   |        | BE1: 2.379 Mbps | BE1: 2.536\
    \ Mbps | BE1: 1.031 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |BA      | EF:  5.048 Mbps | EF:  5.004 Mbps | EF:  5.004 Mbps  |\n   |through-|\
    \ BE:  5.017 Mbps | BE:  5.071 Mbps | BE:  4.504 Mbps  |\n   |put     | LE:  \
    \  ---      | LE:    ---      | LE:  0.500 Mbps  |\n   +--------+-----------------+-----------------+------------------+\n\
    \   |        | EF0:   ---      | EF0:   ---      | EF0:   ---       |\n   |packet\
    \  | EF1:   ---      | EF1:  40.0 %    | LE1:  68.6 %     |\n   |loss    | EF2:\
    \     0 %    | EF2:  23.0 %    | EF2:     0 %     |\n   |rate    | BE0:  30.3\
    \ %    | BE0:  32.1 %    | BE0:     0 %     |\n   |        | BE1:  33.3 %    |\
    \ BE1:  32.7 %    | BE1:     0 %     |\n   +--------+-----------------+-----------------+------------------+\n\
    \    (*) EF1 is re-marked to LE and signed as LE1\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   The authors wish to thank Mark Handley and Bill Fenner\
    \ for their\n   valuable comments on this document.  Special thanks go to Milena\n\
    \   Neumann for her extensive efforts in performing the simulations.  We\n   would\
    \ also like to thank the KIDS simulation team [12].\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [1]  Nichols, K., Blake, S., Baker, F. and D.\
    \ Black, \"Definition of\n        the Differentiated Services Field (DS Field)\
    \ in the IPv4 and\n        IPv6 Headers\", RFC 2474, December 1998.\n   [2]  Blake,\
    \ S., Black, D., Carlson, M., Davies, E., Wang, Z. and W.\n        Weiss, \"An\
    \ Architecture for Differentiated Services\", RFC 2475,\n        December 1998.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [3]  Nichols, K. and B. Carpenter, \"Definition\
    \ of Differentiated\n        Services Per Domain Behaviors and Rules for their\n\
    \        Specification\", RFC 3086, April 2001.\n   [4]  Braden, R., Ed., Zhang,\
    \ L., Berson, S., Herzog, S. and S. Jamin,\n        \"Resource ReSerVation Protocol\
    \ (RSVP) -- Version 1\", RFC 2205,\n        September 1997.\n   [5]  Bernet, Y.,\
    \ \"Format of the RSVP DCLASS Object\", RFC 2996,\n        November 2000.\n  \
    \ [6]  Waitzman, D., Partridge, C. and S. Deering, \"Distance Vector\n       \
    \ Multicast Routing Protocol\", RFC 1075, November 1988.\n   [7]  Estrin, D.,\
    \ Farinacci, D., Helmy, A., Thaler, D., Deering, S.,\n        Handley, M., Jacobson,\
    \ V., Liu, L., Sharma, P. and L. Wei,\n        \"Protocol Independent Multicast-Sparse\
    \ Mode (PIM-SM): Protocol\n        Specification\", RFC 2362, June 1998.\n   [8]\
    \  Adams, A., Nicholas, J. and W. Siadak, \"Protocol Independent\n        Multicast\
    \ - Dense Mode (PIM-DM) Protocol Specification\n        (Revised)\", Work in Progress.\n\
    \   [9]  Heinanen, J., Baker, F., Weiss, W. and J. Wroclawski, \"Assured\n   \
    \     Forwarding PHB Group\" RFC 2597, June 1999.\n   [10] Bernet, Y., Blake,\
    \ S., Grossman, D. and A. Smith, \"An Informal\n        Management Model for DiffServ\
    \ Routers\", RFC 3290, May 2002.\n   [11] R. Bless, K. Wehrle. Evaluation of Differentiated\
    \ Services using\n        an Implementation under Linux, Proceedings of the Intern.\n\
    \        Workshop on Quality of Service (IWQOS'99), London, 1999.\n   [12] K.\
    \ Wehrle, J. Reber, V. Kahmann. A simulation suite for Internet\n        nodes\
    \ with the ability to integrate arbitrary Quality of Service\n        behavior,\
    \ Proceedings of Communication Networks And Distributed\n        Systems Modeling\
    \ And Simulation Conference (CNDS 2001), Phoenix\n        (AZ), January 2001.\n\
    \   [13] R. Bless, K. Wehrle. Group Communication in Differentiated\n        Services\
    \ Networks, Internet QoS for the Global Computing 2001\n        (IQ 2001), IEEE\
    \ International Symposium on Cluster Computing and\n        the Grid, May 2001,\
    \ Brisbane, Australia, IEEE Press.\n   [14] Davie, B., Charny, A., Bennett, J.C.R.,\
    \ Benson, K., Le Boudec,\n        J.Y., Courtney, W., Davari, S., Firoiu, V. and\
    \ D. Stiliadis, \"An\n        Expedited Forwarding PHB (Per-Hop Behavior)\", RFC\
    \ 3246, March\n        2002.\n   [15] Charny, A., Bennett, J.C.R., Benson, K.,\
    \ Le Boudec, J.Y., Chiu,\n        A., Courtney, W., Davari, S., Firoiu, V., Kalmanek,\
    \ C. and K.K.\n        Ramakrishnan, \"Supplemental Information for the New Definition\n\
    \        of the EF PHB (Expedited Forwarding Per-Hop Behavior)\", RFC\n      \
    \  3247, March 2002.\n   [16] Bless, R., Nichols, K. and K. Wehrle, \"A Lower\
    \ Effort Per-Domain\n        Behavior (PDB) for Differentiated Services\", RFC\
    \ 3662, December\n        2003.\n"
- title: 12.  Authors' Addresses
  contents:
  - "12.  Authors' Addresses\n   Comments and questions related to this document can\
    \ be addressed to\n   one of the authors listed below.\n   Roland Bless\n   Institute\
    \ of Telematics\n   Universitaet Karlsruhe (TH)\n   Zirkel 2\n   76128 Karlsruhe,\
    \ Germany\n   Phone: +49 721 608 6413\n   EMail: bless@tm.uka.de\n   URI: http://www.tm.uka.de/~bless\n\
    \   Klaus Wehrle\n   University of Tuebingen\n   WSI - Computer Networks and Internet\
    \ /\n   Protocol Engineering & Distributed Systems\n   Morgenstelle 10c\n   72076\
    \ Tuebingen, Germany\n   EMail: Klaus.Wehrle@uni-tuebingen.de\n   URI: http://net.informatik.uni-tuebingen.de/~wehrle/\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78 and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
