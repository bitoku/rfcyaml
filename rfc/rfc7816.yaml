- title: __initial_text__
  contents:
  - '             DNS Query Name Minimisation to Improve Privacy

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a technique to improve DNS privacy, a\n\
    \   technique called \"QNAME minimisation\", where the DNS resolver no\n   longer\
    \ sends the full original QNAME to the upstream name server.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7816.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction and Background .....................................2\n\
    \   2. QNAME Minimisation ..............................................3\n  \
    \ 3. Possible Issues .................................................4\n   4.\
    \ Protocol and Compatibility Discussion ...........................5\n   5. Operational\
    \ Considerations ......................................5\n   6. Performance Considerations\
    \ ......................................6\n   7. On the Experimentation ..........................................6\n\
    \   8. Security Considerations .........................................7\n  \
    \ 9. References ......................................................7\n    \
    \  9.1. Normative References .......................................7\n      9.2.\
    \ Informative References .....................................8\n   Appendix A.\
    \ An Algorithm to Perform QNAME Minimisation .............9\n   Appendix B. Alternatives\
    \  .........................................10\n   Acknowledgments ...................................................11\n\
    \   Author's Address ..................................................11\n"
- title: 1.  Introduction and Background
  contents:
  - "1.  Introduction and Background\n   The problem statement is described in [RFC7626].\
    \  The terminology\n   (\"QNAME\", \"resolver\", etc.) is also defined in this\
    \ companion\n   document.  This specific solution is not intended to fully solve\n\
    \   the DNS privacy problem; instead, it should be viewed as one tool\n   amongst\
    \ many.\n   QNAME minimisation follows the principle explained in Section 6.1\
    \ of\n   [RFC6973]: the less data you send out, the fewer privacy problems\n \
    \  you have.\n   Currently, when a resolver receives the query \"What is the AAAA\n\
    \   record for www.example.com?\", it sends to the root (assuming a cold\n   resolver,\
    \ whose cache is empty) the very same question.  Sending the\n   full QNAME to\
    \ the authoritative name server is a tradition, not a\n   protocol requirement.\
    \  In a conversation with the author in\n   January 2015, Paul Mockapetris explained\
    \ that this tradition comes\n   from a desire to optimise the number of requests,\
    \ when the same\n   name server is authoritative for many zones in a given name\n\
    \   (something that was more common in the old days, where the same\n   name servers\
    \ served .com and the root) or when the same name server\n   is both recursive\
    \ and authoritative (something that is strongly\n   discouraged now).  Whatever\
    \ the merits of this choice at this time,\n   the DNS is quite different now.\n"
- title: 2.  QNAME Minimisation
  contents:
  - "2.  QNAME Minimisation\n   The idea is to minimise the amount of data sent from\
    \ the DNS resolver\n   to the authoritative name server.  In the example in the\
    \ previous\n   section, sending \"What are the NS records for .com?\" would have\
    \ been\n   sufficient (since it will be the answer from the root anyway).  The\n\
    \   rest of this section describes the recommended way to do QNAME\n   minimisation\
    \ -- the way that maximises privacy benefits (other\n   alternatives are discussed\
    \ in the appendices).\n   Instead of sending the full QNAME and the original QTYPE\
    \ upstream, a\n   resolver that implements QNAME minimisation and does not already\
    \ have\n   the answer in its cache sends a request to the name server\n   authoritative\
    \ for the closest known ancestor of the original QNAME.\n   The request is done\
    \ with:\n   o  the QTYPE NS\n   o  the QNAME that is the original QNAME, stripped\
    \ to just one label\n      more than the zone for which the server is authoritative\n\
    \   For example, a resolver receives a request to resolve\n   foo.bar.baz.example.\
    \  Let's assume that it already knows that\n   ns1.nic.example is authoritative\
    \ for .example and the resolver does\n   not know a more specific authoritative\
    \ name server.  It will send the\n   query QTYPE=NS,QNAME=baz.example to ns1.nic.example.\n\
    \   The minimising resolver works perfectly when it knows the zone cut\n   (zone\
    \ cuts are described in Section 6 of [RFC2181]).  But zone cuts\n   do not necessarily\
    \ exist at every label boundary.  If we take the\n   name www.foo.bar.example,\
    \ it is possible that there is a zone cut\n   between \"foo\" and \"bar\" but\
    \ not between \"bar\" and \"example\".  So,\n   assuming that the resolver already\
    \ knows the name servers of\n   .example, when it receives the query \"What is\
    \ the AAAA record of\n   www.foo.bar.example?\", it does not always know where\
    \ the zone cut\n   will be.  To find the zone cut, it will query the .example\n\
    \   name servers for the NS records for bar.example.  It will get a\n   NODATA\
    \ response, indicating that there is no zone cut at that point,\n   so it has\
    \ to query the .example name servers again with one more\n   label, and so on.\
    \  (Appendix A describes this algorithm in deeper\n   detail.)\n   Since the information\
    \ about the zone cuts will be stored in the\n   resolver's cache, the performance\
    \ cost is probably reasonable.\n   Section 6 discusses this performance discrepancy\
    \ further.\n   Note that DNSSEC-validating resolvers already have access to this\n\
    \   information, since they have to know the zone cut (the DNSKEY record\n   set\
    \ is just below; the DS record set is just above).\n"
- title: 3.  Possible Issues
  contents:
  - "3.  Possible Issues\n   QNAME minimisation is legal, since the original DNS RFCs\
    \ do not\n   mandate sending the full QNAME.  So, in theory, it should work\n\
    \   without any problems.  However, in practice, some problems may occur\n   (see\
    \ [Huque-QNAME-Min] for an analysis and [Huque-QNAME-storify] for\n   an interesting\
    \ discussion on this topic).\n   Some broken name servers do not react properly\
    \ to QTYPE=NS requests.\n   For instance, some authoritative name servers embedded\
    \ in load\n   balancers reply properly to A queries but send REFUSED to NS queries.\n\
    \   This behaviour is a protocol violation, and there is no need to stop\n   improving\
    \ the DNS because of such behaviour.  However, QNAME\n   minimisation may still\
    \ work with such domains, since they are only\n   leaf domains (no need to send\
    \ them NS requests).  Such a setup breaks\n   more than just QNAME minimisation.\
    \  It breaks negative answers, since\n   the servers don't return the correct\
    \ SOA, and it also breaks anything\n   dependent upon NS and SOA records existing\
    \ at the top of the zone.\n   Another way to deal with such incorrect name servers\
    \ would be to try\n   with QTYPE=A requests (A being chosen because it is the\
    \ most common\n   and hence a QTYPE that will always be accepted, while a QTYPE\
    \ NS may\n   ruffle the feathers of some middleboxes).  Instead of querying\n\
    \   name servers with a query \"NS example.com\", we could use\n   \"A _.example.com\"\
    \ and see if we get a referral.\n   A problem can also appear when a name server\
    \ does not react properly\n   to ENTs (Empty Non-Terminals).  If ent.example.com\
    \ has no resource\n   records but foobar.ent.example.com does, then ent.example.com\
    \ is an\n   ENT.  Whatever the QTYPE, a query for ent.example.com must return\n\
    \   NODATA (NOERROR / ANSWER: 0).  However, some name servers incorrectly\n  \
    \ return NXDOMAIN for ENTs.  If a resolver queries only\n   foobar.ent.example.com,\
    \ everything will be OK, but if it implements\n   QNAME minimisation, it may query\
    \ ent.example.com and get an NXDOMAIN.\n   See also Section 3 of [DNS-Res-Improve]\
    \ for the other bad\n   consequences of this bad behaviour.\n   A possible solution,\
    \ currently implemented in Knot, is to retry with\n   the full query when you\
    \ receive an NXDOMAIN.  It works, but it is not\n   ideal for privacy.\n   Other\
    \ practices that do not conform to the DNS protocol standards may\n   pose a problem:\
    \ there is a common DNS trick used by some web hosters\n   that also do DNS hosting\
    \ that exploits the fact that the DNS protocol\n   (pre-DNSSEC) allows certain\
    \ serious misconfigurations, such as parent\n   and child zones disagreeing on\
    \ the location of a zone cut.\n   Basically, they have a single zone with wildcards\
    \ for each TLD, like:\n   *.example.          60  IN  A   192.0.2.6\n   (They\
    \ could just wildcard all of \"*.\", which would be sufficient.  We\n   don't\
    \ know why they don't do it.)\n   This lets them have many web-hosting customers\
    \ without having to\n   configure thousands of individual zones on their name\
    \ servers.  They\n   just tell the prospective customer to point their NS records\
    \ at the\n   hoster's name servers, and the web hoster doesn't have to provision\n\
    \   anything in order to make the customer's domain resolve.  NS queries\n   to\
    \ the hoster will therefore not give the right result, which may\n   endanger\
    \ QNAME minimisation (it will be a problem for DNSSEC, too).\n"
- title: 4.  Protocol and Compatibility Discussion
  contents:
  - "4.  Protocol and Compatibility Discussion\n   QNAME minimisation is compatible\
    \ with the current DNS system and\n   therefore can easily be deployed; since\
    \ it is a unilateral change to\n   the resolver, it does not change the protocol.\
    \  (Because it is a\n   unilateral change, resolver implementers may do QNAME\
    \ minimisation in\n   slightly different ways; see the appendices for examples.)\n\
    \   One should note that the behaviour suggested here (minimising the\n   amount\
    \ of data sent in QNAMEs from the resolver) is NOT forbidden by\n   Section 5.3.3\
    \ of [RFC1034] or Section 7.2 of [RFC1035].  As stated in\n   Section 1, the current\
    \ method, sending the full QNAME, is not\n   mandated by the DNS protocol.\n \
    \  One may notice that many documents that explain the DNS and that are\n   intended\
    \ for a wide audience incorrectly describe the resolution\n   process as using\
    \ QNAME minimisation (e.g., by showing a request going\n   to the root, with just\
    \ the TLD in the query).  As a result, these\n   documents may confuse readers\
    \ that use them for privacy analysis.\n"
- title: 5.  Operational Considerations
  contents:
  - "5.  Operational Considerations\n   The administrators of the forwarders, and\
    \ of the authoritative\n   name servers, will get less data, which will reduce\
    \ the utility of\n   the statistics they can produce (such as the percentage of\
    \ the\n   various QTYPEs) [Kaliski-Minimum].\n   DNS administrators are reminded\
    \ that the data on DNS requests that\n   they store may have legal consequences,\
    \ depending on your\n   jurisdiction (check with your local lawyer).\n"
- title: 6.  Performance Considerations
  contents:
  - "6.  Performance Considerations\n   The main goal of QNAME minimisation is to\
    \ improve privacy by sending\n   less data.  However, it may have other advantages.\
    \  For instance, if\n   a root name server receives a query from some resolver\
    \ for A.example\n   followed by B.example followed by C.example, the result will\
    \ be three\n   NXDOMAINs, since .example does not exist in the root zone.  Under\n\
    \   query name minimisation, the root name servers would hear only one\n   question\
    \ (for .example itself) to which they could answer NXDOMAIN,\n   thus opening\
    \ up a negative caching opportunity in which the full\n   resolver could know\
    \ a priori that neither B.example nor C.example\n   could exist.  Thus, in this\
    \ common case the total number of upstream\n   queries under QNAME minimisation\
    \ would be counterintuitively less\n   than the number of queries under the traditional\
    \ iteration (as\n   described in the DNS standard).\n   QNAME minimisation may\
    \ also improve lookup performance for TLD\n   operators.  For a typical TLD, delegation-only,\
    \ and with delegations\n   just under the TLD, a two-label QNAME query is optimal\
    \ for finding\n   the delegation owner name.\n   QNAME minimisation can decrease\
    \ performance in some cases -- for\n   instance, for a deep domain name (like\n\
    \   www.host.group.department.example.com, where\n   host.group.department.example.com\
    \ is hosted on example.com's\n   name servers).  Let's assume a resolver that\
    \ knows only the\n   name servers of .example.  Without QNAME minimisation, it\
    \ would send\n   these .example name servers a query for\n   www.host.group.department.example.com\
    \ and immediately get a specific\n   referral or an answer, without the need for\
    \ more queries to probe for\n   the zone cut.  For such a name, a cold resolver\
    \ with QNAME\n   minimisation will, depending on how QNAME minimisation is\n \
    \  implemented, send more queries, one per label.  Once the cache is\n   warm,\
    \ there will be no difference with a traditional resolver.\n   Actual testing\
    \ is described in [Huque-QNAME-Min].  Such deep domains\n   are especially common\
    \ under ip6.arpa.\n"
- title: 7.  On the Experimentation
  contents:
  - "7.  On the Experimentation\n   This document has status \"Experimental\".  Since\
    \ the beginning of time\n   (or DNS), the fully qualified host name was always\
    \ sent to the\n   authoritative name servers.  There was a concern that changing\
    \ this\n   behaviour may engage the Law of Unintended Consequences -- hence this\n\
    \   status.\n   The idea behind the experiment is to observe QNAME minimisation\
    \ in\n   action with multiple resolvers, various authoritative name servers,\n\
    \   etc.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   QNAME minimisation's benefits are clear in the\
    \ case where you want to\n   decrease exposure to the authoritative name server.\
    \  But minimising\n   the amount of data sent also, in part, addresses the case\
    \ of a wire\n   sniffer as well as the case of privacy invasion by the servers.\n\
    \   (Encryption is of course a better defense against wire sniffers, but,\n  \
    \ unlike QNAME minimisation, it changes the protocol and cannot be\n   deployed\
    \ unilaterally.  Also, the effect of QNAME minimisation on\n   wire sniffers depends\
    \ on whether the sniffer is on the DNS path.)\n   QNAME minimisation offers zero\
    \ protection against the recursive\n   resolver, which still sees the full request\
    \ coming from the stub\n   resolver.\n   All the alternatives mentioned in Appendix\
    \ B decrease privacy in the\n   hope of improving performance.  They must not\
    \ be used if you want\n   maximum privacy.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC1034]  Mockapetris, P., \"Domain names - concepts\
    \ and facilities\",\n              STD 13, RFC 1034, DOI 10.17487/RFC1034, November\
    \ 1987,\n              <http://www.rfc-editor.org/info/rfc1034>.\n   [RFC1035]\
    \  Mockapetris, P., \"Domain names - implementation and\n              specification\"\
    , STD 13, RFC 1035, DOI 10.17487/RFC1035,\n              November 1987, <http://www.rfc-editor.org/info/rfc1035>.\n\
    \   [RFC6973]  Cooper, A., Tschofenig, H., Aboba, B., Peterson, J.,\n        \
    \      Morris, J., Hansen, M., and R. Smith, \"Privacy\n              Considerations\
    \ for Internet Protocols\", RFC 6973,\n              DOI 10.17487/RFC6973, July\
    \ 2013,\n              <http://www.rfc-editor.org/info/rfc6973>.\n   [RFC7626]\
    \  Bortzmeyer, S., \"DNS Privacy Considerations\", RFC 7626,\n              DOI\
    \ 10.17487/RFC7626, August 2015,\n              <http://www.rfc-editor.org/info/rfc7626>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [DNS-Res-Improve]\n              Vixie, P.,\
    \ Joffe, R., and F. Neves, \"Improvements to DNS\n              Resolvers for\
    \ Resiliency, Robustness, and Responsiveness\",\n              Work in Progress,\
    \ draft-vixie-dnsext-resimprove-00,\n              June 2010.\n   [HAMMER]   Kumari,\
    \ W., Arends, R., Woolf, S., and D. Migault, \"Highly\n              Automated\
    \ Method for Maintaining Expiring Records\", Work\n              in Progress,\
    \ draft-wkumari-dnsop-hammer-01, July 2014.\n   [Huque-QNAME-Min]\n          \
    \    Huque, S., \"Query name minimization and authoritative\n              server\
    \ behavior\", May 2015,\n              <https://indico.dns-oarc.net/event/21/contribution/9>.\n\
    \   [Huque-QNAME-storify]\n              Huque, S., \"Qname Minimization @ DNS-OARC\"\
    , May 2015,\n              <https://storify.com/shuque/qname-minimization-dns-oarc>.\n\
    \   [Kaliski-Minimum]\n              Kaliski, B., \"Minimum Disclosure: What Information\
    \ Does a\n              Name Server Need to Do Its Job?\", March 2015,\n     \
    \         <http://blogs.verisigninc.com/blog/entry/\n              minimum_disclosure_what_information_does>.\n\
    \   [RFC2181]  Elz, R. and R. Bush, \"Clarifications to the DNS\n            \
    \  Specification\", RFC 2181, DOI 10.17487/RFC2181, July 1997,\n             \
    \ <http://www.rfc-editor.org/info/rfc2181>.\n"
- title: Appendix A.  An Algorithm to Perform QNAME Minimisation
  contents:
  - "Appendix A.  An Algorithm to Perform QNAME Minimisation\n   This algorithm performs\
    \ name resolution with QNAME minimisation in\n   the presence of zone cuts that\
    \ are not yet known.\n   Although a validating resolver already has the logic\
    \ to find the\n   zone cuts, implementers of other resolvers may want to use this\n\
    \   algorithm to locate the cuts.  This is just a possible aid for\n   implementers;\
    \ it is not intended to be normative:\n   (0) If the query can be answered from\
    \ the cache, do so; otherwise,\n       iterate as follows:\n   (1) Find the closest\
    \ enclosing NS RRset in your cache.  The owner of\n       this NS RRset will be\
    \ a suffix of the QNAME -- the longest suffix\n       of any NS RRset in the cache.\
    \  Call this ANCESTOR.\n   (2) Initialise CHILD to the same as ANCESTOR.\n   (3)\
    \ If CHILD is the same as the QNAME, resolve the original query\n       using\
    \ ANCESTOR's name servers, and finish.\n   (4) Otherwise, add a label from the\
    \ QNAME to the start of CHILD.\n   (5) If you have a negative cache entry for\
    \ the NS RRset at CHILD, go\n       back to step 3.\n   (6) Query for CHILD IN\
    \ NS using ANCESTOR's name servers.  The\n       response can be:\n       (6a)\
    \ A referral.  Cache the NS RRset from the authority section,\n            and\
    \ go back to step 1.\n       (6b) An authoritative answer.  Cache the NS RRset\
    \ from the\n            answer section, and go back to step 1.\n       (6c) An\
    \ NXDOMAIN answer.  Return an NXDOMAIN answer in response\n            to the\
    \ original query, and stop.\n       (6d) A NOERROR/NODATA answer.  Cache this\
    \ negative answer, and\n            go back to step 3.\n"
- title: Appendix B.  Alternatives
  contents:
  - "Appendix B.  Alternatives\n   Remember that QNAME minimisation is unilateral,\
    \ so a resolver is not\n   forced to implement it exactly as described here.\n\
    \   There are several ways to perform QNAME minimisation.  See Section 2\n   for\
    \ the suggested way.  It can be called the aggressive algorithm,\n   since the\
    \ resolver only sends NS queries as long as it does not know\n   the zone cuts.\
    \  This is the safest, from a privacy point of view.\n   Another possible algorithm,\
    \ not fully studied at this time, could be\n   to \"piggyback\" on the traditional\
    \ resolution code.  At startup, it\n   sends traditional full QNAMEs and learns\
    \ the zone cuts from the\n   referrals received, then switches to NS queries asking\
    \ only for the\n   minimum domain name.  This leaks more data but could require\
    \ fewer\n   changes in the existing resolver codebase.\n   In the above specification,\
    \ the original QTYPE is replaced by NS (or\n   may be A, if too many servers react\
    \ incorrectly to NS requests); this\n   is the best approach to preserve privacy.\
    \  But this erases\n   information about the relative use of the various QTYPEs,\
    \ which may\n   be interesting for researchers (for instance, if they try to follow\n\
    \   IPv6 deployment by counting the percentage of AAAA vs. A queries).  A\n  \
    \ variant of QNAME minimisation would be to keep the original QTYPE.\n   Another\
    \ useful optimisation may be, in the spirit of the HAMMER idea\n   [HAMMER], to\
    \ probe in advance for the introduction of zone cuts where\n   none previously\
    \ existed (i.e., confirm their continued absence, or\n   discover them).\n   To\
    \ address the \"number of queries\" issue described in Section 6, a\n   possible\
    \ solution is to always use the traditional algorithm when the\n   cache is cold\
    \ and then to move to QNAME minimisation (precisely\n   defining what is \"hot\"\
    \ or \"cold\" is left to the implementer).  This\n   will decrease the privacy\
    \ but will guarantee no degradation of\n   performance.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Olaf Kolkman for the original idea during a KLM\
    \ flight from\n   Amsterdam to Vancouver, although the concept is probably much\
    \ older\n   (e.g., <https://lists.dns-oarc.net/pipermail/dns-operations/\n   2010-February/005003.html>).\
    \  Thanks to Shumon Huque and Marek\n   Vavrusa for implementation and testing.\
    \  Thanks to Mark Andrews and\n   Francis Dupont for the interesting discussions.\
    \  Thanks to Brian\n   Dickson, Warren Kumari, Evan Hunt, and David Conrad for\
    \ remarks and\n   suggestions.  Thanks to Mohsen Souissi for proofreading.  Thanks\
    \ to\n   Tony Finch for the zone cut algorithm in Appendix A and for\n   discussion\
    \ of the algorithm.  Thanks to Paul Vixie for pointing out\n   that there are\
    \ practical advantages (besides privacy) to QNAME\n   minimisation.  Thanks to\
    \ Phillip Hallam-Baker for the fallback on\n   A queries, to deal with broken\
    \ servers.  Thanks to Robert Edmonds for\n   an interesting anti-pattern.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Stephane Bortzmeyer\n   AFNIC\n   1, rue Stephenson\n  \
    \ Montigny-le-Bretonneux  78180\n   France\n   Phone: +33 1 39 30 83 46\n   Email:\
    \ bortzmeyer+ietf@nic.fr\n   URI:   http://www.afnic.fr/\n"
