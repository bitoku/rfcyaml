- title: __initial_text__
  contents:
  - '             Digital Signatures on Internet-Draft Documents

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the conventions for digital signatures on\n\
    \   Internet-Drafts.  The Cryptographic Message Syntax (CMS) is used to\n   create\
    \ a detached signature, which is stored in a separate companion\n   file so that\
    \ no existing utilities are impacted by the addition of\n   the digital signature.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies the conventions for storing a digital\n\
    \   signature on Internet-Drafts.  The Cryptographic Message Syntax (CMS)\n  \
    \ [CMS] is used to create a detached signature.  The signature is\n   stored in\
    \ a separate companion file so that no existing utilities are\n   impacted by\
    \ the addition of the digital signature.\n   Shortly after the IETF Secretariat\
    \ posts the Internet-Draft in the\n   repository, the digital signature is generated\
    \ and posted as a\n   companion file in the same repository.  The digital signature\
    \ allows\n   anyone to confirm that the contents of the Internet-Draft have not\n\
    \   been altered since the time that the document was posted in the\n   repository.\n\
    \   The signature of the IETF Secretariat is intended to provide a\n   straightforward\
    \ way for anyone to determine whether a particular file\n   contains the document\
    \ that was made available by the IETF\n   Secretariat.  The signing-time included\
    \ by the IETF Secretariat\n   provides the wall-clock time; it is not intended\
    \ to provide a trusted\n   timestamp.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [STDWORDS].\n"
- title: 1.2.  ASN.1
  contents:
  - "1.2.  ASN.1\n   The CMS uses Abstract Syntax Notation One (ASN.1) [X.680].  ASN.1\
    \ is\n   a formal notation used for describing data protocols, regardless of\n\
    \   the programming language used by the implementation.  Encoding rules\n   describe\
    \ how the values defined in ASN.1 will be represented for\n   transmission.  The\
    \ Basic Encoding Rules (BER) [X.690] are the most\n   widely employed rule set,\
    \ but they offer more than one way to\n   represent data structures.  For example,\
    \ both definite-length\n   encoding and indefinite-length encoding are supported.\
    \  This\n   flexibility is not desirable when digital signatures are used.  As\
    \ a\n   result, the Distinguished Encoding Rules (DER) [X.690] were invented.\n\
    \   DER is a subset of BER that ensures a single way to represent a given\n  \
    \ value.  For example, DER always employs definite-length encoding.\n"
- title: 2.  Internet-Draft Signature File
  contents:
  - "2.  Internet-Draft Signature File\n   All Internet-Draft file names begin with\
    \ \"draft-\".  The next portion\n   of the file name depends on the source of\
    \ the document.  For example,\n   documents from IETF working groups usually have\
    \ \"ietf-\" followed by\n   the working group abbreviation, and this is followed\
    \ by a string that\n   helps people figure out the subject of the document.\n\
    \   All Internet-Draft file names end with a hyphen followed by a two-\n   digit\
    \ version number and a suffix.  The suffix indicates the type of\n   file.  A\
    \ plain text file with a suffix of \".txt\" is required.  Other\n   formats may\
    \ also be provided, and they employ the appropriate suffix\n   for the file format.\n\
    \   The companion signature file has exactly the same file name as the\n   Internet-Draft,\
    \ except that \".p7s\" is added to the end.  This file\n   name suffix conforms\
    \ to the conventions in [MSG].  Here are a few\n   example names:\n      Internet-Draft:\
    \ draft-ietf-example-widgets-03.txt\n      Signature File: draft-ietf-example-widgets-03.txt.p7s\n\
    \      Internet-Draft: draft-ietf-example-widgets-03.ps\n      Signature File:\
    \ draft-ietf-example-widgets-03.ps.p7s\n      Internet-Draft: draft-housley-internet-draft-sig-file-00.txt\n\
    \      Signature File: draft-housley-internet-draft-sig-file-00.txt.p7s\n   The\
    \ IETF Secretariat will post the signature file in the repository\n   shortly\
    \ after the Internet-Draft is posted.\n"
- title: 2.1.  Need for Canonicalization
  contents:
  - "2.1.  Need for Canonicalization\n   In general, the content of the Internet-Draft\
    \ is treated like a\n   single octet string for the generation of the digital\
    \ signature.\n   Unfortunately, the plain text file requires canonicalization\
    \ to avoid\n   signature validation problems.  The primary concern is the manner\
    \ in\n   which different operating systems indicate the end of a line of text.\n\
    \   Some systems use a single new-line character, other systems use the\n   combination\
    \ of the carriage-return character followed by a line-feed\n   character, and\
    \ other systems use fixed-length records padded with\n   space characters.  For\
    \ the digital signature to validate properly, a\n   single convention must be\
    \ employed.\n"
- title: 2.2.  Text File Canonicalization
  contents:
  - "2.2.  Text File Canonicalization\n   The canonicalization procedure follows the\
    \ conventions used for text\n   files in the File Transfer Protocol (FTP) [FTP].\
    \  Such files must be\n   supported by FTP implementations, so code reuse seems\
    \ likely.\n   The canonicalization procedure converts the data from its internal\n\
    \   character representation to the standard 8-bit NVT-ASCII\n   representation\
    \ (see TELNET [TELNET]).  In accordance with the NVT\n   standard, the <CRLF>\
    \ sequence MUST be used to denote the end of a\n   line of text.  Using the standard\
    \ NVT-ASCII representation means that\n   data MUST be interpreted as 8-bit bytes.\n\
    \   Trailing space characters MUST NOT appear on a line of text.  That\n   is,\
    \ the space character must not be followed by the <CRLF> sequence.\n   Thus, a\
    \ blank line is represented solely by the <CRLF> sequence.\n   The form-feed nonprintable\
    \ character (0x0C) is expected in Internet-\n   Drafts.  Other nonprintable characters,\
    \ such as tab and backspace,\n   are not expected, but they do occur.  For robustness,\
    \ any\n   nonprintable or non-ASCII characters (ones outside the range 0x20 to\n\
    \   0x7E) MUST NOT be changed in any way not covered by the rules for\n   end-of-line\
    \ handling in the previous paragraph.\n   Trailing blank lines MUST NOT appear\
    \ at the end of the file.  That\n   is, the file must not end with multiple consecutive\
    \ <CRLF> sequences.\n   Any end-of-file marker used by an operating system is\
    \ not considered\n   to be part of the file content.  When present, such end-of-file\n\
    \   markers MUST NOT be processed by the digital signature algorithm.\n   Note:\
    \ This text file canonicalization procedure is consistent with\n   the ASCII NVT\
    \ definition offered in Appendix B of RFC 5198 [UFNI].\n"
- title: 2.3.  XML File Canonicalization
  contents:
  - "2.3.  XML File Canonicalization\n   In accordance with the guidance of the World\
    \ Wide Web Consortium\n   (W3C) in Section 2.11 of [R20060816], a <LF> character\
    \ MUST be used\n   to denote the end of a line of text within an XML file.  Any\
    \ two-\n   character <CRLF> sequence and any <CR> that is not followed by <LF>\n\
    \   are to be translated to a single <LF> character.\n"
- title: 2.4.  Canonicalization of Other File Formats
  contents:
  - "2.4.  Canonicalization of Other File Formats\n   No canonicalization is needed\
    \ for file formats currently used for\n   Internet-Drafts other than plain text\
    \ files and XML files.  Other\n   file formats are treated as a simple sequence\
    \ of octets by the\n   digital signature algorithm.\n"
- title: 3.  CMS Profile
  contents:
  - "3.  CMS Profile\n   CMS is used to construct the detached signature of the Internet-\n\
    \   Draft.  The CMS ContentInfo content type MUST always be present, and\n   it\
    \ MUST encapsulate the CMS SignedData content type.  Since a\n   detached signature\
    \ is being created, the CMS SignedData content type\n   MUST NOT encapsulate the\
    \ Internet-Draft.  The CMS detached signature\n   is summarized by:\n    ContentInfo\
    \ {\n      contentType          id-signedData, -- (1.2.840.113549.1.7.2)\n   \
    \   content              SignedData\n    }\n    SignedData {\n      version  \
    \            CMSVersion, -- Always set to 3\n      digestAlgorithms     DigestAlgorithmIdentifiers,\n\
    \      encapContentInfo     EncapsulatedContentInfo,\n      certificates     \
    \    CertificateSet, -- Secretariat certificate(s)\n      crls               \
    \  CertificateRevocationLists, -- Optional\n      signerInfos          SET OF\
    \ SignerInfo -- Only one signer\n    }\n    SignerInfo {\n      version      \
    \        CMSVersion, -- Always set to 3\n      sid                  SignerIdentifier,\n\
    \      digestAlgorithm      DigestAlgorithmIdentifier,\n      signedAttrs    \
    \      SignedAttributes, -- Always present\n      signatureAlgorithm   SignatureAlgorithmIdentifier,\n\
    \      signature            SignatureValue,\n      unsignedAttrs        UnsignedAttributes\
    \ -- Optional\n    }\n    EncapsulatedContentInfo {\n      eContentType      \
    \   id-ct-asciiTextWithCRLF,\n                                       -- (1.2.840.113549.1.9.16.1.27)\n\
    \      eContent             OCTET STRING  -- Always absent\n    }\n"
- title: 3.1.  ContentInfo
  contents:
  - "3.1.  ContentInfo\n   The CMS requires the outer-most encapsulation to be ContentInfo\n\
    \   [CMS].  The fields of ContentInfo are used as follows:\n      contentType\n\
    \         indicates the type of the associated content.  For the detached\n  \
    \       Internet-Draft signature file, the encapsulated type is always\n     \
    \    SignedData, so the id-signedData (1.2.840.113549.1.7.2) object\n        \
    \ identifier MUST be present in this field.\n      content\n         holds the\
    \ content.  For the detached Internet-Draft signature\n         file, the content\
    \ is always a SignedData content.\n"
- title: 3.2.  SignedData
  contents:
  - "3.2.  SignedData\n   The SignedData content type [CMS] contains the signature\
    \ of the\n   Internet-Draft and information to aid in the validation of that\n\
    \   signature.  The fields of SignedData are used as follows:\n      version\n\
    \         is the syntax version number.  For this specification, the\n       \
    \  version number MUST be set to 3.\n      digestAlgorithms\n         is a collection\
    \ of one-way hash function identifiers.  It MUST\n         contain the identifier\
    \ used by the IETF Secretariat to generate\n         the digital signature.  See\
    \ the discussion of digestAlgorithm\n         in Section 3.2.1.\n      encapContentInfo\n\
    \         is the signed content, including a content type identifier.\n      \
    \   Since a detached signature is being created, it does not\n         encapsulate\
    \ the Internet-Draft.  The use of the\n         EncapsulatedContentInfo type is\
    \ discussed further in Section\n         3.2.2.\n      certificates\n        \
    \ is an optional collection of certificates.  It SHOULD include\n         the\
    \ X.509 certificate needed to validate the digital signature\n         value.\
    \  Certification Authority (CA) certificates and end\n         entity certificates\
    \ MUST conform to the certificate profile\n         specified in [PKIX1].\n  \
    \    crls\n         is an optional collection of certificate revocation lists\n\
    \         (CRLs).  It SHOULD NOT include any CRLs; however, any CRLs that\n  \
    \       are present MUST conform to the CRL profile specified in\n         [PKIX1].\n\
    \      signerInfos\n         is a collection of per-signer information.  For this\n\
    \         specification, each item in the collection must represent the\n    \
    \     IETF Secretariat.  More than one SignerInfo MAY appear to\n         facilitate\
    \ transitions between keys or algorithms.  The use of\n         the SignerInfo\
    \ type is discussed further in Section 3.2.1.\n"
- title: 3.2.1.  SignerInfo
  contents:
  - "3.2.1.  SignerInfo\n   The IETF Secretariat is represented in the SignerInfo\
    \ type.  The\n   fields of SignerInfo are used as follows:\n      version\n  \
    \       is the syntax version number.  In this specification, the\n         version\
    \ MUST be set to 3.\n      sid\n         identifies the IETF Secretariat's public\
    \ key.  In this\n         specification, the subjectKeyIdentifier alternative\
    \ is always\n         used, which identifies the public key directly.  This\n\
    \         identifier MUST match the value included in the\n         subjectKeyIdentifier\
    \ certificate extension in the IETF\n         Secretariat's X.509 certificate.\n\
    \      digestAlgorithm\n         identifies the one-way hash function, and any\
    \ associated\n         parameters, used by the IETF Secretariat to generate the\n\
    \         digital signature.\n      signedAttrs\n         is an optional set of\
    \ attributes that are signed along with the\n         content.  The signedAttrs\
    \ are optional in the CMS, but\n         signedAttrs is required by this specification.\
    \  The SET OF\n         Attribute must be encoded with the distinguished encoding\
    \ rules\n         (DER) [X.690].  Section 3.2.3 of this document lists the signed\n\
    \         attributes that MUST be included in the collection.  Other\n       \
    \  signed attributes MAY also be included.\n      signatureAlgorithm\n       \
    \  identifies the digital signature algorithm, and any associated\n         parameters,\
    \ used by the IETF Secretariat to generate the\n         digital signature.\n\
    \      signature\n         is the digital signature value generated by the IETF\n\
    \         Secretariat.\n      unsignedAttrs\n         is an optional set of attributes\
    \ that are not signed.  Unsigned\n         attributes are usually omitted; however,\
    \ the unsigned\n         attributes MAY hold a trusted timestamp generated in\
    \ accordance\n         with [TSP].  Appendix A of [TSP] provides more information\n\
    \         about this unsigned attribute.\n"
- title: 3.2.2.  EncapsulatedContentInfo
  contents:
  - "3.2.2.  EncapsulatedContentInfo\n   The EncapsulatedContentInfo structure contains\
    \ a content type\n   identifier.  Since a detached signature is being created,\
    \ it does not\n   encapsulate the Internet-Draft.  The fields of\n   EncapsulatedContentInfo\
    \ are used as follows:\n      eContentType\n         is an object identifier that\
    \ uniquely specifies the content\n         type.  The content type associated\
    \ with the plain text file\n         MUST be id-ct-asciiTextWithCRLF.  Other file\
    \ formats may also\n         be posted, and the appropriate content type for each\
    \ format is\n         discussed in Section 4.  Additional file formats can be\
    \ added\n         if the Internet community chooses.\n      eContent\n       \
    \  is optional.  When an encapsulated signature is generated, the\n         content\
    \ to be signed is carried in this field.  Since a\n         detached signature\
    \ is being created, eContent MUST be absent.\n"
- title: 3.2.3.  Signed Attributes
  contents:
  - "3.2.3.  Signed Attributes\n   The IETF Secretariat MUST digitally sign a collection\
    \ of attributes\n   along with the Internet-Draft.  Each attribute in the collection\
    \ MUST\n   be DER-encoded.  The syntax for attributes is defined in [X.501], and\n\
    \   the X.500 Directory provides a rich attribute syntax.  A very simple\n   subset\
    \ of this syntax is used extensively in [CMS], where\n   ATTRIBUTE.&Type and ATTRIBUTE.&id\
    \ are the only parts of the ATTRIBUTE\n   class that are employed.\n   Each of\
    \ the attributes used with this CMS profile has a single\n   attribute value.\
    \  Even though the syntax is defined as a SET OF\n   AttributeValue, there MUST\
    \ be exactly one instance of AttributeValue\n   present.\n   The SignedAttributes\
    \ syntax within signerInfo is defined as a SET OF\n   Attribute.  The SignedAttributes\
    \ MUST include only one instance of\n   any particular attribute.\n   The IETF\
    \ Secretariat MUST include the content-type, message-digest,\n   and signing-time\
    \ attributes.  The IETF Secretariat MAY also include\n   the binary-signing-time\
    \ signed attribute as well as any other\n   attribute that is deemed appropriate.\
    \  The intent is to allow\n   additional signed attributes to be included if a\
    \ future need is\n   identified.  This does not cause an interoperability concern\
    \ because\n   unrecognized signed attributes are ignored at verification.\n"
- title: 3.2.3.1.  Content-Type Attribute
  contents:
  - "3.2.3.1.  Content-Type Attribute\n   A content-type attribute is required to\
    \ contain the same object\n   identifier as the content type contained in the\n\
    \   EncapsulatedContentInfo.  The appropriate content type for each\n   format\
    \ is discussed in Section 4.  The IETF Secretariat MUST include\n   a content-type\
    \ attribute containing the appropriate content type.\n   Section 11.1 of [CMS]\
    \ defines the content-type attribute.\n"
- title: 3.2.3.2.  Message-Digest Attribute
  contents:
  - "3.2.3.2.  Message-Digest Attribute\n   The IETF Secretariat MUST include a message-digest\
    \ attribute, having\n   as its value the output of a one-way hash function computed\
    \ on the\n   Internet-Draft that is being signed.  Section 11.2 of [CMS] defines\n\
    \   the message-digest attribute.\n"
- title: 3.2.3.3.  Signing-Time Attribute
  contents:
  - "3.2.3.3.  Signing-Time Attribute\n   The IETF Secretariat MUST include a signing-time\
    \ attribute,\n   specifying the time, based on the local system clock, at which\
    \ the\n   digital signature was applied to the Internet-Draft.  Since the IETF\n\
    \   Secretariat may choose to perform signatures in batches, the signing-\n  \
    \ time may be several hours or days after the time that the Internet-\n   Draft\
    \ was actually posted.  Section 11.3 of [CMS] defines the\n   content-type attribute.\n"
- title: 3.2.3.4.  Binary-Signing-Time Attribute
  contents:
  - "3.2.3.4.  Binary-Signing-Time Attribute\n   The IETF Secretariat MAY include\
    \ a binary-signing-time attribute,\n   specifying the time at which the digital\
    \ signature was applied to the\n   Internet-Draft.  If present, the time that\
    \ is represented MUST match\n   the time represented in the signing-time attribute.\
    \  The binary-\n   signing-time attribute is defined in [BinTime].\n"
- title: 3.2.4.  Unsigned Attributes
  contents:
  - "3.2.4.  Unsigned Attributes\n   Unsigned attributes are usually omitted.  However,\
    \ an unsigned\n   attribute MAY hold a trusted timestamp generated in accordance\
    \ with\n   [TSP].  The idea is to timestamp the IETF Secretariat digital\n   signature\
    \ to prove that it was created before a given time.  If the\n   IETF Secretariat's\
    \ certificate is revoked the timestamp allows a\n   verifier to know whether the\
    \ signature was created before or after\n   the revocation date.  Appendix A of\
    \ [TSP] defines the signature time-\n   stamp attribute that can be used to timestamp\
    \ a digital signature.\n"
- title: 4.  Content Types
  contents:
  - "4.  Content Types\n   This section lists the content types that are used in this\n\
    \   specification.  The eContentType field as described in Section 3.2.2\n   contains\
    \ a content type identifier, and the same value appears in the\n   content-type\
    \ attribute as described in Section 3.2.3.1.\n   The following table lists the\
    \ file formats and the associated content\n   type.\n      File Format       \
    \                 Content Type\n      -----------                        ------------\n\
    \      Plain text                         id-ct-asciiTextWithCRLF\n      Extensible\
    \ Markup Language (XML)   id-ct-xml\n      Portable Document Format (PDF)    \
    \ id-ct-pdf\n      PostScript                         id-ct-postscript\n   The\
    \ object identifiers associated with the content types listed in\n   the above\
    \ table are:\n      id-ct  OBJECT IDENTIFIER  ::= { iso(1) member-body(2)\n  \
    \         us(840) rsadsi(113549) pkcs(1) pkcs9(9) smime(16) 1 }\n      id-ct-asciiTextWithCRLF\
    \  OBJECT IDENTIFIER  ::= { id-ct 27 }\n      id-ct-xml  OBJECT IDENTIFIER  ::=\
    \ { id-ct 28 }\n      id-ct-pdf  OBJECT IDENTIFIER  ::= { id-ct 29 }\n      id-ct-postscript\
    \  OBJECT IDENTIFIER  ::= { id-ct 30 }\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The IETF Secretariat MUST protect its private\
    \ key.  The use of a\n   hardware security module (HSM) is strongly RECOMMENDED\
    \ because\n   compromise of the IETF Secretariat's private key permits masquerade.\n\
    \   The IETF Secretariat currently maintains servers at a primary\n   location\
    \ and a backup location.  This configuration requires two\n   HSMs, one at each\
    \ location.  However, the two HSMs do not need to use\n   the same signing key.\
    \  Each HSM can have a different signing key, as\n   long as each one has their\
    \ own certificate.\n   The generation of a public/private key pair for signature\
    \ operations\n   relies on random number generation.  The use of an inadequate\
    \ pseudo-\n   random number generator (PRNG) can result in little or no security.\n\
    \   An attacker may find it much easier to reproduce the PRNG environment\n  \
    \ that produced the key pair, searching the resulting small set of\n   possibilities,\
    \ than to brute-force search the whole private key\n   space.  The generation\
    \ of quality random numbers is difficult, but\n   [RANDOM] offers important guidance\
    \ in this area.\n   The IETF Secretariat should be aware that cryptographic algorithms\n\
    \   become weaker with time.  As new cryptanalysis techniques are\n   developed\
    \ and computing performance improves, the work factor to\n   break a particular\
    \ digital signature algorithm or one-way hash\n   function will be reduced.  Therefore,\
    \ it SHOULD be possible to\n   migrate these algorithms.  That is, the IETF Secretariat\
    \ SHOULD be\n   prepared for the supported algorithms to change over time.\n \
    \  The IETF Secretariat must take care to use the correct time in\n   signing-time\
    \ and binary-signing-time attributes.  The inclusion of a\n   date within the\
    \ Internet-Draft by the authors that is shortly before\n   the signing time attributes\
    \ supplied by the IETF Secretariat provides\n   confidence about the date that\
    \ the Internet-Draft was posted to the\n   repository.  However, the IETF Secretariat\
    \ may choose to perform\n   signatures in batches, and the signing-time may be\
    \ several hours or\n   days after the time that the Internet-Draft was actually\
    \ posted.\n   As stated above, the IETF Secretariat may choose to sign Internet-\n\
    \   Drafts in batches.  This allows a single HSM to be used if multiple\n   servers\
    \ are located in one geographic location, and it allows the HSM\n   to be off-line\
    \ except when signatures are being generated.  Further,\n   this allows the IETF\
    \ Secretariat to include manual steps, such as\n   entering an HSM passphrase\
    \ or inserting a smartcard, as part of the\n   signing procedure to improve operations\
    \ security.\n"
- title: 6.  Deployment and Operational Considerations
  contents:
  - "6.  Deployment and Operational Considerations\n   The private key used to generate\
    \ the IETF Secretariat signature ought\n   to be stored in an HSM to provide protection\
    \ from unauthorized\n   disclosure.  While the HSM will be operated by the IETF\
    \ Secretariat,\n   it ought to be owned by the IETF Trust.  Accordingly, the Trustees\
    \ of\n   the IETF Trust will designate an appropriate certification authority\n\
    \   to issue a certificate to the IETF Secretariat, and they will approve\n  \
    \ any procedures used by the IETF Secretariat for signing documents\n   consistent\
    \ with this specification.\n"
- title: 7.  Design Rationale
  contents:
  - "7.  Design Rationale\n   A detached signature is used for all file formats. \
    \ Some file\n   formats, such as PDF and XML, have file-format-specific ways of\n\
    \   handling digital signatures.  These file-format-specific approaches\n   are\
    \ not used for two reasons.  First, a single way to sign Internet-\n   Drafts\
    \ will ease implementation by the IETF Secretariat.  Second, if\n   the author\
    \ includes a signature using one of these file-format-\n   specific approaches,\
    \ the IETF Secretariat signature does not harm it\n   in any way.\n   File names\
    \ are the means linking the detached signature to the signed\n   document.  A\
    \ CMS signed attribute could have been specified to\n   include another form of\
    \ linkage, and this could be added in the\n   future.  At this point in time,\
    \ it is important to support signature\n   validation of expired Internet-Drafts\
    \ that are obtained from non-IETF\n   repositories.  Therefore, the appropriate\
    \ value for such a signed\n   attribute is unclear.  This specification allows\
    \ an Internet-Draft\n   and companion signature file to be stored anywhere without\
    \ hindering\n   signature validation.\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   The idea for the Internet-Draft signature file came from\
    \ a discussion\n   with Scott Bradner at IETF 69 in Chicago.  Many helpful suggestions\n\
    \   came from Jim Schaad, Pasi Eronen, and Chris Newman.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [CMS]       Housley, R., \"Cryptographic Message\
    \ Syntax (CMS)\", RFC\n               3852, July 2004.\n   [PKIX1]     Cooper,\
    \ D., Santesson, S., Farrell, S., Boeyen, S.,\n               Housley, R., and\
    \ W. Polk, \"Internet X.509 Public Key\n               Infrastructure Certificate\
    \ and Certificate Revocation\n               List (CRL) Profile\", RFC 5280, May\
    \ 2008.\n   [STDWORDS]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [X.680]\
    \     ITU-T Recommendation X.680: ISO/IEC 8824-1:2002,\n               Information\
    \ technology - Abstract Syntax Notation One\n               (ASN.1): Specification\
    \ of basic notation, 2002.\n   [X.690]     ITU-T Recommendation X.690: ISO/IEC\
    \ 8825-1:2002,\n               Information technology - ASN.1 encoding rules:\n\
    \               Specification of Basic Encoding Rules (BER), Canonical\n     \
    \          Encoding Rules (CER) and Distinguished Encoding Rules\n           \
    \    (DER), 2002.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [BinTime]   Housley, R., \"BinaryTime: An Alternate\
    \ Format for\n               Representing Date and Time in ASN.1\", RFC 4049,\
    \ April\n               2005.\n   [FTP]       Postel, J. and J. Reynolds, \"File\
    \ Transfer Protocol\", STD\n               9, RFC 959, October 1985.\n   [MSG]\
    \       Ramsdell, B., Ed., \"Secure/Multipurpose Internet Mail\n             \
    \  Extensions (S/MIME) Version 3.1 Message Specification\",\n               RFC\
    \ 3851, July 2004.\n   [OpenSSL]   \"OpenSSL: The Open Source toolkit for SSL/TLS\"\
    ,\n               http://www.openssl.org/.\n   [R20060816] Bray, T., J. Paoli,\
    \ C. M. Sperberg-McQueen, E. Maler, and\n               F. Yergeau, \"Extensible\
    \ Markup Language (XML) 1.0 (Fourth\n               Edition)\", W3C Recommendation,\
    \ 16 August 2006,\n               http://www.w3.org/TR/2006/REC-xml-20060816/.\n\
    \   [RANDOM]    Eastlake, D., 3rd, Schiller, J., and S. Crocker,\n           \
    \    \"Randomness Requirements for Security\", BCP 106, RFC\n               4086,\
    \ June 2005.\n   [TELNET]    Postel, J. and J. Reynolds, \"Telnet Protocol\n \
    \              Specification\", STD 8, RFC 854, May 1983.\n   [TSP]       Adams,\
    \ C., Cain, P., Pinkas, D., and R. Zuccherato,\n               \"Internet X.509\
    \ Public Key Infrastructure Time-Stamp\n               Protocol (TSP)\", RFC 3161,\
    \ August 2001.\n   [UFNI]      Klensin, J. and M. Padlipsky, \"Unicode Format\
    \ for Network\n               Interchange\", RFC 5198, March 2008.\n   [X.501]\
    \     ITU-T Recommendation X.501: Information Technology - Open\n            \
    \   Systems Interconnection - The Directory: Models, 1993.\n"
- title: 'Appendix: A'
  contents:
  - "Appendix: A\n   OpenSSL 0.9.9 [OpenSSL] includes an implementation of CMS.  The\n\
    \   following command line can be used to verify an Internet-Draft\n   signature:\n\
    \     openssl cms -verify -CAfile <cert-file> -content <internet-draft> /\n  \
    \        -inform DER -in <p7s-file> -out /dev/null\n   The arguments need to be\
    \ provided as follows:\n      <cert-file>\n         the name of the file containing\
    \ the trust anchor, which is\n         typically the self-signed certificate of\
    \ the certification\n         authority that issued a certificate to the IETF\
    \ Secretariat.\n      <internet-draft>\n         the name of the file containing\
    \ the Internet-Draft after\n         canonicalization.\n      <p7s-file>\n   \
    \      the name of the file containing the detached signature that was\n     \
    \    generated in accordance with this specification.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Russell Housley\n   Vigil Security, LLC\n   918 Spring Knoll\
    \ Drive\n   Herndon, VA 20170\n   USA\n   EMail: housley@vigilsec.com\n"
