- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                     LM. Contreras
  contents:
  - 'Independent Submission                                     LM. Contreras

    '
- title: Cooperating Layered Architecture for Software-Defined Networking (CLAS)
  contents:
  - 'Cooperating Layered Architecture for Software-Defined Networking (CLAS)

    '
- title: Abstract
  contents:
  - "Abstract\n   Software-Defined Networking (SDN) advocates for the separation of\
    \ the\n   control plane from the data plane in the network nodes and its\n   logical\
    \ centralization on one or a set of control entities.  Most of\n   the network\
    \ and/or service intelligence is moved to these control\n   entities.  Typically,\
    \ such an entity is seen as a compendium of\n   interacting control functions\
    \ in a vertical, tightly integrated\n   fashion.  The relocation of the control\
    \ functions from a number of\n   distributed network nodes to a logical central\
    \ entity conceptually\n   places together a number of control capabilities with\
    \ different\n   purposes.  As a consequence, the existing solutions do not provide\
    \ a\n   clear separation between transport control and services that rely\n  \
    \ upon transport capabilities.\n   This document describes an approach called\
    \ Cooperating Layered\n   Architecture for Software-Defined Networking (CLAS),\
    \ wherein the\n   control functions associated with transport are differentiated\
    \ from\n   those related to services in such a way that they can be provided and\n\
    \   maintained independently and can follow their own evolution path.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not candidates for any level of Internet\
    \ Standard;\n   see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8597.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   5\n   3.  Architecture Overview . . . . . . . . . . . . . . . . .\
    \ . . .   6\n     3.1.  Functional Strata . . . . . . . . . . . . . . . . . .\
    \ . .   9\n       3.1.1.  Transport Stratum . . . . . . . . . . . . . . . . .\
    \ .   9\n       3.1.2.  Service Stratum . . . . . . . . . . . . . . . . . . .\
    \  10\n       3.1.3.  Recursiveness . . . . . . . . . . . . . . . . . . . .  10\n\
    \     3.2.  Plane Separation  . . . . . . . . . . . . . . . . . . . .  10\n  \
    \     3.2.1.  Control Plane . . . . . . . . . . . . . . . . . . . .  11\n    \
    \   3.2.2.  Management Plane  . . . . . . . . . . . . . . . . . .  11\n      \
    \ 3.2.3.  Resource Plane  . . . . . . . . . . . . . . . . . . .  11\n   4.  Required\
    \ Features . . . . . . . . . . . . . . . . . . . . . .  11\n   5.  Communication\
    \ between SDN Controllers . . . . . . . . . . . .  12\n   6.  Deployment Scenarios\
    \  . . . . . . . . . . . . . . . . . . . .  12\n     6.1.  Full SDN Environments\
    \ . . . . . . . . . . . . . . . . . .  13\n       6.1.1.  Multiple Service Strata\
    \ Associated with a Single\n               Transport Stratum . . . . . . . . .\
    \ . . . . . . . . .  13\n       6.1.2.  Single Service Stratum Associated with\
    \ Multiple\n               Transport Strata  . . . . . . . . . . . . . . . . .\
    \ .  13\n     6.2.  Hybrid Environments . . . . . . . . . . . . . . . . . . .\
    \  13\n       6.2.1.  SDN Service Stratum Associated with a Legacy\n         \
    \      Transport Stratum . . . . . . . . . . . . . . . . . .  13\n       6.2.2.\
    \  Legacy Service Stratum Associated with an SDN\n               Transport Stratum\
    \ . . . . . . . . . . . . . . . . . .  13\n     6.3.  Multi-domain Scenarios in\
    \ the Transport Stratum . . . . .  14\n   7.  Use Cases . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .  14\n     7.1.  Network Function Virtualization\
    \ (NFV) . . . . . . . . . .  14\n     7.2.  Abstraction and Control of TE Networks\
    \  . . . . . . . . .  15\n   8.  Challenges for Implementing Actions between Service\
    \ and\n       Transport Strata  . . . . . . . . . . . . . . . . . . . . . .  15\n\
    \   9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  16\n  \
    \ 10. Security Considerations . . . . . . . . . . . . . . . . . . .  16\n   11.\
    \ References  . . . . . . . . . . . . . . . . . . . . . . . . .  17\n     11.1.\
    \  Normative References . . . . . . . . . . . . . . . . . .  17\n     11.2.  Informative\
    \ References . . . . . . . . . . . . . . . . .  17\n   Appendix A.  Relationship\
    \ with RFC 7426 . . . . . . . . . . . . .  19\n   Acknowledgements  . . . . .\
    \ . . . . . . . . . . . . . . . . . . .  20\n   Authors' Addresses  . . . . .\
    \ . . . . . . . . . . . . . . . . . .  20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Network softwarization advances are facilitating the introduction\
    \ of\n   programmability in the services and infrastructures of\n   telecommunications\
    \ operators.  This is generally achieved through the\n   introduction of Software-Defined\
    \ Networking (SDN) [RFC7149] [RFC7426]\n   capabilities in the network, including\
    \ controllers and orchestrators.\n   However, there are concerns of a different\
    \ nature that these SDN\n   capabilities have to resolve.  On the one hand, actions\
    \ focused on\n   programming the network to handle the connectivity or forwarding\
    \ of\n   digital data between distant nodes are needed.  On the other hand,\n\
    \   actions devoted to programming the functions or services that process\n  \
    \ (or manipulate) such digital data are also needed.\n   SDN advocates for the\
    \ separation of the control plane from the data\n   plane in the network nodes\
    \ by introducing abstraction among both\n   planes, allowing the control logic\
    \ on a functional entity, which is\n   commonly referred as SDN Controller, to\
    \ be centralized; one or\n   multiple controllers may be deployed.  A programmatic\
    \ interface is\n   then defined between a forwarding entity (at the network node)\
    \ and a\n   control entity.  Through that interface, a control entity instructs\n\
    \   the nodes involved in the forwarding plane and modifies their\n   traffic-forwarding\
    \ behavior accordingly.  Support for additional\n   capabilities (e.g., performance\
    \ monitoring, fault management, etc.)\n   could be expected through this kind\
    \ of programmatic interface\n   [RFC7149].\n   Most of the intelligence is moved\
    \ to this kind of functional entity.\n   Typically, such an entity is seen as\
    \ a compendium of interacting\n   control functions in a vertical, tightly integrated\
    \ fashion.\n   The approach of considering an omnipotent control entity governing\n\
    \   the overall aspects of a network, especially both the transport\n   network\
    \ and the services to be supported on top of it, presents a\n   number of issues:\n\
    \   o  From a provider perspective, where different departments usually\n    \
    \  are responsible for handling service and connectivity (i.e.,\n      transport\
    \ capabilities for the service on top), the mentioned\n      approach offers unclear\
    \ responsibilities for complete service\n      provision and delivery.\n   o \
    \ Complex reuse of functions for the provision of services.\n   o  Closed, monolithic\
    \ control architectures.\n   o  Difficult interoperability and interchangeability\
    \ of functional\n      components.\n   o  Blurred business boundaries among providers,\
    \ especially in\n      situations where one provider provides only connectivity\
    \ while\n      another provider offers a more sophisticated service on top of\n\
    \      that connectivity.\n   o  Complex service/network diagnosis and troubleshooting,\n\
    \      particularly to determine which layer is responsible for a\n      failure.\n\
    \   The relocation of the control functions from a number of distributed\n   network\
    \ nodes to another entity conceptually places together a number\n   of control\
    \ capabilities with different purposes.  As a consequence,\n   the existing SDN\
    \ solutions do not provide a clear separation between\n   services and transport\
    \ control.  Here, the separation between service\n   and transport follows the\
    \ distinction provided by [Y.2011] and as\n   defined in Section 2 of this document.\n\
    \   This document describes an approach called Cooperating Layered\n   Architecture\
    \ for SDN (CLAS), wherein the control functions associated\n   with transport\
    \ are differentiated from those related to services in\n   such a way that they\
    \ can be provided and maintained independently and\n   can follow their own evolution\
    \ path.\n   Despite such differentiation, close cooperation between the service\n\
    \   and transport layers (or strata in [Y.2011]) and the associated\n   components\
    \ are necessary to provide efficient usage of the resources.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document makes use of the following terms:\n   o  Transport:\
    \ denotes the transfer capabilities offered by a\n      networking infrastructure.\
    \  The transfer capabilities can rely\n      upon pure IP techniques or other\
    \ means, such as MPLS or optics.\n   o  Service: denotes a logical construct that\
    \ makes use of transport\n      capabilities.\n      This document does not make\
    \ any assumptions about the functional\n      perimeter of a service that can\
    \ be built above a transport\n      infrastructure.  As such, a service can be\
    \ offered to customers or\n      invoked for the delivery of another (added-value)\
    \ service.\n   o  Layer: refers to the set of elements that enable either transport\n\
    \      or service capabilities, as defined previously.  In [Y.2011], this\n  \
    \    is referred to as a \"stratum\", and the two terms are used\n      interchangeably.\n\
    \   o  Domain: is a set of elements that share a common property or\n      characteristic.\
    \  In this document, it applies to the\n      administrative domain (i.e., elements\
    \ pertaining to the same\n      organization), technological domain (elements\
    \ implementing the\n      same kind of technology, such as optical nodes), etc.\n\
    \   o  SDN Intelligence: refers to the decision-making process that is\n     \
    \ hosted by a node or a set of nodes.  These nodes are called SDN\n      controllers.\n\
    \      The intelligence can be centralized or distributed.  Both schemes\n   \
    \   are within the scope of this document.\n      An SDN Intelligence relies on\
    \ inputs from various functional\n      blocks, such as: network topology discovery,\
    \ service topology\n      discovery, resource allocation, business guidelines,\
    \ customer\n      profiles, service profiles, etc.\n      The exact decomposition\
    \ of an SDN Intelligence, apart from the\n      layering discussed here, is out\
    \ of the scope of this document.\n   Additionally, the following acronyms are\
    \ used in this document:\n      CLAS: Cooperating Layered Architecture for SDN\n\
    \      FCAPS: Fault, Configuration, Accounting, Performance, and Security\n  \
    \    SDN: Software-Defined Networking\n      SLA: Service Level Agreement\n"
- title: 3.  Architecture Overview
  contents:
  - "3.  Architecture Overview\n   Current operator networks support multiple services\
    \ (e.g., Voice over\n   IP (VoIP), IPTV, mobile VoIP, critical mission applications,\
    \ etc.) on\n   a variety of transport technologies.  The provision and delivery\
    \ of a\n   service independent of the underlying transport capabilities require\n\
    \   a separation of the service-related functionalities and an\n   abstraction\
    \ of the transport network to hide the specifics of the\n   underlying transfer\
    \ techniques while offering a common set of\n   capabilities.\n   Such separation\
    \ can provide configuration flexibility and\n   adaptability from the point of\
    \ view of either the services or the\n   transport network.  Multiple services\
    \ can be provided on top of a\n   common transport infrastructure; similarly,\
    \ different technologies\n   can accommodate the connectivity requirements of\
    \ a certain service.\n   Close coordination among these elements is required for\
    \ consistent\n   service delivery (inter-layer cooperation).\n   This document\
    \ focuses particularly on the means to:\n   o  expose transport capabilities to\
    \ services.\n   o  capture transport requirements of services.\n   o  notify service\
    \ intelligence of underlying transport events, for\n      example, to adjust a\
    \ service decision-making process with\n      underlying transport events.\n \
    \  o  instruct the underlying transport capabilities to accommodate new\n    \
    \  requirements, etc.\n   An example is guaranteeing some Quality-of-Service (QoS)\
    \ levels.\n   Different QoS-based offerings could be present at both the service\n\
    \   and transport layers.  Vertical mechanisms for linking both service\n   and\
    \ transport QoS mechanisms should be in place to provide quality\n   guarantees\
    \ to the end user.\n   CLAS architecture assumes that the logically centralized\
    \ control\n   functions are separated into two functional layers.  One of the\n\
    \   functional layers comprises the service-related functions, whereas\n   the\
    \ other one contains the transport-related functions.  The\n   cooperation between\
    \ the two layers is expected to be implemented\n   through standard interfaces.\n\
    \   Figure 1 shows the CLAS architecture.  It is based on functional\n   separation\
    \ in the Next Generation Network (NGN) architecture defined\n   by the ITU-T in\
    \ [Y.2011], where two strata of functionality are\n   defined.  These strata are\
    \ the Service Stratum, comprising the\n   service-related functions, and the Transport\
    \ Stratum, covering the\n   transport-related functions.  The functions of each\
    \ of these layers\n   are further grouped into the control, management, and user\
    \ (or data)\n   planes.\n   CLAS adopts the same structured model described in\
    \ [Y.2011] but\n   applies it to the objectives of programmability through SDN\n\
    \   [RFC7149].  In this respect, CLAS advocates for addressing services\n   and\
    \ transport in a separated manner because of their differentiated\n   concerns.\n\
    \                                       Applications\n                       \
    \                     /\\\n                                            ||\n  \
    \                                          ||\n      +-------------------------------------||-------------+\n\
    \      | Service Stratum                     ||             |\n      |       \
    \                              \\/             |\n      |                    \
    \   ...........................  |\n      |                       . SDN Intelligence\
    \        .  |\n      |                       .                         .  |\n\
    \      |  +--------------+     .        +--------------+ .  |\n      |  | Resource\
    \ Pl. |     .        |   Mgmt. Pl.  | .  |\n      |  |              |<===>.  +--------------+\
    \     | .  |\n      |  |              |     .  |  Control Pl. |     | .  |\n \
    \     |  +--------------+     .  |              |-----+ .  |\n      |        \
    \               .  |              |       .  |\n      |                      \
    \ .  +--------------+       .  |\n      |                       ...........................\
    \  |\n      |                                     /\\             |\n      | \
    \                                    ||             |\n      +-------------------------------------||-------------+\n\
    \                                            ||    Standard\n                \
    \                         -- || --    API\n                                  \
    \          ||\n      +-------------------------------------||-------------+\n\
    \      | Transport Stratum                   ||             |\n      |       \
    \                              \\/             |\n      |                    \
    \   ...........................  |\n      |                       . SDN Intelligence\
    \        .  |\n      |                       .                         .  |\n\
    \      |  +--------------+     .        +--------------+ .  |\n      |  | Resource\
    \ Pl. |     .        |   Mgmt. Pl.  | .  |\n      |  |              |<===>.  +--------------+\
    \     | .  |\n      |  |              |     .  |  Control Pl. |     | .  |\n \
    \     |  +--------------+     .  |              |-----+ .  |\n      |        \
    \               .  |              |       .  |\n      |                      \
    \ .  +--------------+       .  |\n      |                       ...........................\
    \  |\n      |                                                    |\n      |  \
    \                                                  |\n      +----------------------------------------------------+\n\
    \            Figure 1: Cooperating Layered Architecture for SDN\n   In the CLAS\
    \ architecture, both the control and management functions\n   are considered to\
    \ be performed by one or a set of SDN controllers\n   (due to, for example, scalability,\
    \ reliability), providing the SDN\n   Intelligence in such a way that separated\
    \ SDN controllers are present\n   in the Service and Transport Strata.  Management\
    \ functions are\n   considered to be part of the SDN Intelligence to allow for\
    \ effective\n   operation in a service provider ecosystem [RFC7149], although\
    \ some\n   initial propositions did not consider such management as part of the\n\
    \   SDN environment [ONFArch].\n   Furthermore, the generic user- or data-plane\
    \ functions included in\n   the NGN architecture are referred to here as resource-plane\n\
    \   functions.  The resource plane in each stratum is controlled by the\n   corresponding\
    \ SDN Intelligence through a standard interface.\n   The SDN controllers cooperate\
    \ in the provision and delivery of\n   services.  There is a hierarchy in which\
    \ the Service SDN Intelligence\n   makes requests of the Transport SDN Intelligence\
    \ for the provision of\n   transport capabilities.\n   The Service SDN Intelligence\
    \ acts as a client of the Transport SDN\n   Intelligence.\n   Furthermore, the\
    \ Transport SDN Intelligence interacts with the\n   Service SDN Intelligence to\
    \ inform it about events in the transport\n   network that can motivate actions\
    \ in the service layer.\n   Despite not being shown in Figure 1, the resource\
    \ planes of each\n   stratum could be connected.  This will depend on the kind\
    \ of service\n   provided.  Furthermore, the Service Stratum could offer an interface\n\
    \   to applications to expose network service capabilities to those\n   applications\
    \ or customers.\n"
- title: 3.1.  Functional Strata
  contents:
  - "3.1.  Functional Strata\n   As aforementioned, there is a functional split that\
    \ separates\n   transport-related functions from service-related functions.  Both\n\
    \   strata cooperate for consistent service delivery.\n   Consistency is determined\
    \ and characterized by the service layer.\n"
- title: 3.1.1.  Transport Stratum
  contents:
  - "3.1.1.  Transport Stratum\n   The Transport Stratum comprises the functions focused\
    \ on the transfer\n   of data between the communication endpoints (e.g., between\
    \ end-user\n   devices, between two service gateways, etc.).  The data-forwarding\n\
    \   nodes are controlled and managed by the Transport SDN component.\n   The control\
    \ plane in the SDN Intelligence is in charge of instructing\n   the forwarding\
    \ devices to build the end-to-end data path for each\n   communication or to make\
    \ sure the forwarding service is appropriately\n   set up.  Forwarding may not\
    \ be rely solely on the preconfigured\n   entries; means can be enabled so that\
    \ involved nodes can dynamically\n   build routing and forwarding paths (this\
    \ would require that the nodes\n   retain some of the control and management capabilities\
    \ for enabling\n   this).  Finally, the management plane performs management functions\n\
    \   (i.e., FCAPS) on those devices, like fault or performance management,\n  \
    \ as part of the Transport Stratum capabilities.\n"
- title: 3.1.2.  Service Stratum
  contents:
  - "3.1.2.  Service Stratum\n   The Service Stratum contains the functions related\
    \ to the provision\n   of services and the capabilities offered to external applications.\n\
    \   The resource plane consists of the resources involved in the service\n   delivery,\
    \ such as computing resources, registries, databases, etc.\n   The control plane\
    \ is in charge of controlling and configuring those\n   resources as well as interacting\
    \ with the control plane of the\n   Transport Stratum in client mode to request\
    \ transport capabilities\n   for a given service.  In the same way, the management\
    \ plane\n   implements management actions on the service-related resources and\n\
    \   interacts with the management plane in the Transport Stratum to\n   ensure\
    \ management cooperation between layers.\n"
- title: 3.1.3.  Recursiveness
  contents:
  - "3.1.3.  Recursiveness\n   Recursive layering can happen in some usage scenarios\
    \ in which the\n   Transport Stratum is itself structured in the Service and Transport\n\
    \   Strata.  This could be the case in the provision of a transport\n   service\
    \ complemented with advanced capabilities in addition to the\n   pure data transport\
    \ (e.g., maintenance of a given SLA [RFC7297]).\n   Recursiveness has also been\
    \ discussed in [ONFArch] as a way of\n   reaching scalability and modularity,\
    \ where each higher level can\n   provide greater abstraction capabilities.  Additionally,\n\
    \   recursiveness can allow some multi-domain scenarios where single or\n   multiple\
    \ administrative domains are involved, such as those described\n   in Section\
    \ 6.3.\n"
- title: 3.2.  Plane Separation
  contents:
  - "3.2.  Plane Separation\n   The CLAS architecture leverages plane separation.\
    \  As mentioned in\n   Sections 3.1.1 and 3.1.2, three different planes are considered\
    \ for\n   each stratum.  The communication among these three planes (with the\n\
    \   corresponding plane in other strata) is based on open, standard\n   interfaces.\n"
- title: 3.2.1.  Control Plane
  contents:
  - "3.2.1.  Control Plane\n   The control plane logically centralizes the control\
    \ functions of each\n   stratum and directly controls the corresponding resources.\
    \  [RFC7426]\n   introduces the role of the control plane in an SDN architecture.\n\
    \   This plane is part of an SDN Intelligence and can interact with other\n  \
    \ control planes in the same or different strata to perform control\n   functions.\n"
- title: 3.2.2.  Management Plane
  contents:
  - "3.2.2.  Management Plane\n   The management plane logically centralizes the management\
    \ functions\n   for each stratum, including the management of the control and\n\
    \   resource planes.  [RFC7426] describes the functions of the management\n  \
    \ plane in an SDN environment.  This plane is also part of the SDN\n   Intelligence\
    \ and can interact with the corresponding management\n   planes residing in SDN\
    \ controllers of the same or different strata.\n"
- title: 3.2.3.  Resource Plane
  contents:
  - "3.2.3.  Resource Plane\n   The resource plane comprises the resources for either\
    \ the transport\n   or the service functions.  In some cases, the service resources\
    \ can\n   be connected to the transport ones (e.g., being the terminating\n  \
    \ points of a transport function); in other cases, it can be decoupled\n   from\
    \ the transport resources (e.g., one database keeping a register\n   for the end\
    \ user).  Both the forwarding and operational planes\n   proposed in [RFC7426]\
    \ would be part of the resource plane in this\n   architecture.\n"
- title: 4.  Required Features
  contents:
  - "4.  Required Features\n   Since the CLAS architecture implies the interaction\
    \ of different\n   layers with different purposes and responsibilities, a number\
    \ of\n   features are required to be supported:\n   o  Abstraction: the mapping\
    \ of physical resources into the\n      corresponding abstracted resources.\n\
    \   o  Service-Parameter Translation: the translation of service\n      parameters\
    \ (e.g., in the form of SLAs) to transport parameters (or\n      capabilities)\
    \ according to different policies.\n   o  Monitoring: mechanisms (e.g., event\
    \ notifications) available in\n      order to dynamically update the (abstracted)\
    \ resources' status\n      while taking into account, for example, the traffic\
    \ load.\n   o  Resource Computation: functions able to decide which resources\n\
    \      will be used for a given service request.  As an example,\n      functions\
    \ like PCE could be used to compute/select/decide a\n      certain path.\n   o\
    \  Orchestration: the ability to combine diverse resources (e.g., IT\n      and\
    \ network resources) in an optimal way.\n   o  Accounting: record of resource\
    \ usage.\n   o  Security: secure communication among components, preventing, for\n\
    \      example, DoS attacks.\n"
- title: 5.  Communication between SDN Controllers
  contents:
  - "5.  Communication between SDN Controllers\n   The SDN controllers residing respectively\
    \ in the Service and\n   Transport Strata need to establish tight coordination.\
    \  Mechanisms\n   for transferring relevant information for each stratum should\
    \ be\n   defined.\n   From the service perspective, the Service SDN Intelligence\
    \ needs to\n   easily access transport resources through well-defined APIs to\n\
    \   retrieve the capabilities offered by the Transport Stratum.  There\n   could\
    \ be different ways of obtaining such transport-aware\n   information, i.e., by\
    \ discovering or publishing mechanisms.  In the\n   former case, the Service SDN\
    \ Intelligence could be able to handle\n   complete information about the transport\
    \ capabilities (including\n   resources) offered by the Transport Stratum.  In\
    \ the latter case, the\n   Transport Stratum reveals the available capabilities,\
    \ for example,\n   through a catalog, reducing the amount of detail of the underlying\n\
    \   network.\n   On the other hand, the Transport Stratum must properly capture\
    \ the\n   Service requirements.  These can include SLA requirements with\n   specific\
    \ metrics (such as delay), the level of protection to be\n   provided, maximum/minimum\
    \ capacity, applicable resource constraints,\n   etc.\n   The communication between\
    \ controllers must also be secure, e.g., by\n   preventing denial of service or\
    \ any other kind of threat (similarly,\n   communications with the network nodes\
    \ must be secure).\n"
- title: 6.  Deployment Scenarios
  contents:
  - "6.  Deployment Scenarios\n   Different situations can be found depending on the\
    \ characteristics of\n   the networks involved in a given deployment.\n"
- title: 6.1.  Full SDN Environments
  contents:
  - "6.1.  Full SDN Environments\n   This case considers that the networks involved\
    \ in the provision and\n   delivery of a given service have SDN capabilities.\n"
- title: 6.1.1.  Multiple Service Strata Associated with a Single Transport
  contents:
  - "6.1.1.  Multiple Service Strata Associated with a Single Transport\n        Stratum\n\
    \   A single Transport Stratum can provide transfer functions to more\n   than\
    \ one Service Stratum.  The Transport Stratum offers a standard\n   interface(s)\
    \ to each of the Service Strata.  The Service Strata are\n   the clients of the\
    \ Transport Stratum.  Some of the capabilities\n   offered by the Transport Stratum\
    \ can be isolation of the transport\n   resources (slicing), independent routing,\
    \ etc.\n"
- title: 6.1.2.  Single Service Stratum Associated with Multiple Transport Strata
  contents:
  - "6.1.2.  Single Service Stratum Associated with Multiple Transport Strata\n  \
    \ A single Service Stratum can make use of different Transport Strata\n   for\
    \ the provision of a certain service.  The Service Stratum invokes\n   standard\
    \ interfaces to each of the Transport Strata, and orchestrates\n   the provided\
    \ transfer capabilities for building the end-to-end\n   transport needs.\n"
- title: 6.2.  Hybrid Environments
  contents:
  - "6.2.  Hybrid Environments\n   This case considers scenarios where one of the\
    \ strata is totally or\n   partly legacy.\n"
- title: 6.2.1.  SDN Service Stratum Associated with a Legacy Transport Stratum
  contents:
  - "6.2.1.  SDN Service Stratum Associated with a Legacy Transport Stratum\n   An\
    \ SDN service Stratum can interact with a legacy Transport Stratum\n   through\
    \ an interworking function that is able to adapt SDN-based\n   control and management\
    \ service-related commands to legacy transport-\n   related protocols, as expected\
    \ by the legacy Transport Stratum.\n   The SDN Intelligence in the Service Stratum\
    \ is not aware of the\n   legacy nature of the underlying Transport Stratum.\n"
- title: 6.2.2.  Legacy Service Stratum Associated with an SDN Transport Stratum
  contents:
  - "6.2.2.  Legacy Service Stratum Associated with an SDN Transport Stratum\n   A\
    \ legacy Service Stratum can work with an SDN-enabled Transport\n   Stratum through\
    \ the mediation of an interworking function capable of\n   interpreting commands\
    \ from the legacy service functions and\n   translating them into SDN protocols\
    \ for operation with the SDN-\n   enabled Transport Stratum.\n"
- title: 6.3.  Multi-domain Scenarios in the Transport Stratum
  contents:
  - "6.3.  Multi-domain Scenarios in the Transport Stratum\n   The Transport Stratum\
    \ can be composed of transport resources that are\n   part of different administrative,\
    \ topological, or technological\n   domains.  The Service Stratum can interact\
    \ with a single entity in\n   the Transport Stratum in case some abstraction capabilities\
    \ are\n   provided in the transport part to emulate a single stratum.\n   Those\
    \ abstraction capabilities constitute a service itself offered by\n   the Transport\
    \ Stratum to the services making use of this stratum.\n   This service is focused\
    \ on the provision of transport capabilities,\n   which is different from the\
    \ final communication service using such\n   capabilities.\n   In this particular\
    \ case, this recursion allows multi-domain scenarios\n   at the transport level.\n\
    \   Multi-domain situations can happen in both single-operator and multi-\n  \
    \ operator scenarios.\n   In single-operator scenarios, a multi-domain or end-to-end\n\
    \   abstraction component can provide a homogeneous abstract view of the\n   underlying\
    \ heterogeneous transport capabilities for all the domains.\n   Multi-operator\
    \ scenarios at the Transport Stratum should support the\n   establishment of end-to-end\
    \ paths in a programmatic manner across the\n   involved networks.  For example,\
    \ this could be accomplished by each\n   of the administrative domains exchanging\
    \ their traffic-engineered\n   information [RFC7926].\n"
- title: 7.  Use Cases
  contents:
  - "7.  Use Cases\n   This section presents a number of use cases as examples of\
    \ the\n   applicability of the CLAS approach.\n"
- title: 7.1.  Network Function Virtualization (NFV)
  contents:
  - "7.1.  Network Function Virtualization (NFV)\n   NFV environments offer two possible\
    \ levels of SDN control\n   [GSNFV-EVE005].  One level is the need to control\
    \ the NFV\n   Infrastructure (NFVI) to provide end-to-end connectivity among VNFs\n\
    \   (Virtual Network Functions) or among VNFs and PNFs (Physical Network\n   Functions).\
    \  A second level is the control and configuration of the\n   VNFs themselves\
    \ (in other words, the configuration of the network\n   service implemented by\
    \ those VNFs), which benefits from the\n   programmability brought by SDN.  The\
    \ two control concerns are\n   separate in nature.  However, interaction between\
    \ the two can be\n   expected in order to optimize, scale, or influence one another.\n"
- title: 7.2.  Abstraction and Control of TE Networks
  contents:
  - "7.2.  Abstraction and Control of TE Networks\n   Abstraction and Control of TE\
    \ Networks (ACTN) [RFC8453] presents a\n   framework that allows the creation\
    \ of virtual networks to be offered\n   to customers.  The concept of \"provider\"\
    \ in ACTN is limited to the\n   offering of virtual network services.  These services\
    \ are essentially\n   transport services and would correspond to the Transport\
    \ Stratum in\n   CLAS.  On the other hand, the Service Stratum in CLAS can be\n\
    \   assimilated as a customer in the context of ACTN.\n   ACTN defines a hierarchy\
    \ of controllers to facilitate the creation\n   and operation of the virtual networks.\
    \  An interface is defined for\n   the relationship between the customers requesting\
    \ these virtual\n   network services and the controller in charge of orchestrating\
    \ and\n   serving such a request.  Such an interface is equivalent to the one\n\
    \   defined in Figure 1 (Section 3) between the Service and Transport\n   Strata.\n"
- title: 8.  Challenges for Implementing Actions between Service and Transport
  contents:
  - "8.  Challenges for Implementing Actions between Service and Transport\n    Strata\n\
    \   The distinction of service and transport concerns raises a number of\n   challenges\
    \ in the communication between the two strata.  The\n   following list reflects\
    \ some of the identified challenges:\n   o  Standard mechanisms for interaction\
    \ between layers: Nowadays,\n      there are a number of proposals that could\
    \ accommodate requests\n      from the Service Stratum to the Transport Stratum.\n\
    \      Some of the proposals could be solutions like the Connectivity\n      Provisioning\
    \ Negotiation Protocol [CPNP] or the Intermediate-\n      Controller Plane Interface\
    \ (I-CPI) [ONFArch].\n      Other potential candidates could be the Transport\
    \ API [TAPI] or\n      the Transport Northbound Interface [TRANS-NORTH].  Each\
    \ of these\n      options has a different scope.\n   o  Multi-provider awareness:\
    \ In multi-domain scenarios involving more\n      than one provider at the transport\
    \ level, the Service Stratum may\n      or may not be aware of such multiplicity\
    \ of domains.\n      If the Service Stratum is unaware of the multi-domain situation,\n\
    \      then the Transport Stratum acting as the entry point of the\n      Service\
    \ Stratum request should be responsible for managing the\n      multi-domain issue.\n\
    \      On the contrary, if the Service Stratum is aware of the multi-\n      domain\
    \ situation, it should be in charge of orchestrating the\n      requests to the\
    \ different underlying Transport Strata to compose\n      the final end-to-end\
    \ path among service endpoints (i.e., service\n      functions).\n   o  SLA mapping:\
    \ Both strata will handle SLAs, but the nature of those\n      SLAs could differ.\
    \  Therefore, it is required for the entities in\n      each stratum to map service\
    \ SLAs to connectivity SLAs in order to\n      ensure proper service delivery.\n\
    \   o  Association between strata: The association between strata could\n    \
    \  be configured beforehand, or both strata could require the use of\n      a\
    \ discovery mechanism that dynamically establishes the association\n      between\
    \ the strata.\n   o  Security: As reflected before, the communication between\
    \ strata\n      must be secure to prevent attacks and threats.  Additionally,\n\
    \      privacy should be enforced, especially when addressing multi-\n      provider\
    \ scenarios at the transport level.\n   o  Accounting: The control and accountancy\
    \ of resources used and\n      consumed by services should be supported in the\
    \ communication\n      among strata.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   The CLAS architecture relies upon the functional\
    \ entities that are\n   introduced in [RFC7149] and [RFC7426].  As such, security\n\
    \   considerations discussed in Section 5 of [RFC7149], in particular,\n   must\
    \ be taken into account.\n   The communication between the service and transport\
    \ SDN controllers\n   must rely on secure means that achieve the following:\n\
    \   o  Mutual authentication must be enabled before taking any action.\n   o \
    \ Message integrity protection.\n   Each of the controllers must be provided with\
    \ instructions regarding\n   the set of information (and granularity) that can\
    \ be disclosed to a\n   peer controller.  Means to prevent the leaking of privacy\
    \ data (e.g.,\n   from the Service Stratum to the Transport Stratum) must be enabled.\n\
    \   The exact set of information to be shared is deployment specific.\n   A corrupted\
    \ controller may induce some disruption on another\n   controller.  Protection\
    \ against such attacks should be enabled.\n   Security in the communication between\
    \ the strata described here\n   should apply to the APIs (and/or protocols) to\
    \ be defined among them.\n   Consequently, security concerns will correspond to\
    \ the specific\n   solution.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [Y.2011]   International Telecommunication Union,\
    \ \"General principles\n              and general reference model for Next Generation\
    \ Networks\",\n              ITU-T Recommendation Y.2011, October 2004,\n    \
    \          <https://www.itu.int/rec/T-REC-Y.2011-200410-I/en>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [CPNP]     Boucadair, M., Jacquenet, C., Zhang,\
    \ D., and\n              P. Georgatsos, \"Connectivity Provisioning Negotiation\n\
    \              Protocol (CPNP)\", Work in Progress, draft-boucadair-\n       \
    \       connectivity-provisioning-protocol-15, December 2017.\n   [GSNFV-EVE005]\n\
    \              ETSI, \"Network Functions Virtualisation (NFV); Ecosystem;\n  \
    \            Report on SDN Usage in NFV Architectural Framework\", ETSI\n    \
    \          GS NFV-EVE 005, V1.1.1, December 2015,\n              <https://www.etsi.org/deliver/etsi_gs/\n\
    \              NFV-EVE/001_099/005/01.01.01_60/\n              gs_nfv-eve005v010101p.pdf>.\n\
    \   [ONFArch]  Open Networking Foundation, \"SDN Architecture, Issue 1\",\n  \
    \            June 2014, <https://www.opennetworking.org/images/stories/\n    \
    \          downloads/sdn-resources/technical-reports/\n              TR_SDN_ARCH_1.0_06062014.pdf>.\n\
    \   [RFC7149]  Boucadair, M. and C. Jacquenet, \"Software-Defined\n          \
    \    Networking: A Perspective from within a Service Provider\n              Environment\"\
    , RFC 7149, DOI 10.17487/RFC7149, March 2014,\n              <https://www.rfc-editor.org/info/rfc7149>.\n\
    \   [RFC7297]  Boucadair, M., Jacquenet, C., and N. Wang, \"IP\n             \
    \ Connectivity Provisioning Profile (CPP)\", RFC 7297,\n              DOI 10.17487/RFC7297,\
    \ July 2014,\n              <https://www.rfc-editor.org/info/rfc7297>.\n   [RFC7426]\
    \  Haleplidis, E., Ed., Pentikousis, K., Ed., Denazis, S.,\n              Hadi\
    \ Salim, J., Meyer, D., and O. Koufopavlou, \"Software-\n              Defined\
    \ Networking (SDN): Layers and Architecture\n              Terminology\", RFC\
    \ 7426, DOI 10.17487/RFC7426, January\n              2015, <https://www.rfc-editor.org/info/rfc7426>.\n\
    \   [RFC7926]  Farrel, A., Ed., Drake, J., Bitar, N., Swallow, G.,\n         \
    \     Ceccarelli, D., and X. Zhang, \"Problem Statement and\n              Architecture\
    \ for Information Exchange between\n              Interconnected Traffic-Engineered\
    \ Networks\", BCP 206,\n              RFC 7926, DOI 10.17487/RFC7926, July 2016,\n\
    \              <https://www.rfc-editor.org/info/rfc7926>.\n   [RFC8453]  Ceccarelli,\
    \ D., Ed. and Y. Lee, Ed., \"Framework for\n              Abstraction and Control\
    \ of TE Networks (ACTN)\", RFC 8453,\n              DOI 10.17487/RFC8453, August\
    \ 2018,\n              <https://www.rfc-editor.org/info/rfc8453>.\n   [SDN-ARCH]\
    \ Contreras, LM., Bernardos, CJ., Lopez, D., Boucadair, M.,\n              and\
    \ P. Iovanna, \"Cooperating Layered Architecture for\n              SDN\", Work\
    \ in Progress, draft-irtf-sdnrg-layered-sdn-01,\n              October 2016.\n\
    \   [TAPI]     Open Networking Foundation, \"Functional Requirements for\n   \
    \           Transport API\", June 2016,\n              <https://www.opennetworking.org/wp-content/uploads/\n\
    \              2014/10/TR-527_TAPI_Functional_Requirements.pdf>.\n   [TRANS-NORTH]\n\
    \              Busi, I., King, D., Zheng, H., and Y. Xu, \"Transport\n       \
    \       Northbound Interface Applicability Statement\", Work in\n            \
    \  Progress, draft-ietf-ccamp-transport-nbi-app-statement-05,\n              March\
    \ 2019.\n"
- title: Appendix A.  Relationship with RFC 7426
  contents:
  - "Appendix A.  Relationship with RFC 7426\n   [RFC7426] introduces an SDN taxonomy\
    \ by defining a number of planes,\n   abstraction layers, and interfaces or APIs\
    \ among them as a means of\n   clarifying how the different parts constituent\
    \ of SDN (network\n   devices, control and management) relate.  A number of planes\
    \ are\n   defined, including:\n   o  Forwarding Plane: focused on delivering packets\
    \ in the data path\n      based on the instructions received from the control\
    \ plane.\n   o  Operational Plane: centered on managing the operational state\
    \ of\n      the network device.\n   o  Control Plane: dedicated to instructing\
    \ the device on how packets\n      should be forwarded.\n   o  Management Plane:\
    \ in charge of monitoring and maintaining network\n      devices.\n   o  Application\
    \ Plane: enabling the usage for different purposes (as\n      determined by each\
    \ application) of all the devices controlled in\n      this manner.\n   Apart\
    \ from these, [RFC7426] proposes a number of abstraction layers\n   that permit\
    \ the integration of the different planes through common\n   interfaces.  CLAS\
    \ focuses on control, management, and resource planes\n   as the basic pieces\
    \ of its architecture.  Essentially, the control\n   plane modifies the behavior\
    \ and actions of the controlled resources.\n   The management plane monitors and\
    \ retrieves the status of those\n   resources.  And finally, the resource plane\
    \ groups all the resources\n   related to the concerns of each stratum.\n   From\
    \ this point of view, CLAS planes can be seen as a superset of\n   those defined\
    \ in [RFC7426].  However, in some cases, not all the\n   planes considered in\
    \ [RFC7426] may be totally present in CLAS\n   representation (e.g., the forwarding\
    \ plane in the Service Stratum).\n   That being said, the internal structure of\
    \ CLAS strata could follow\n   the taxonomy defined in [RFC7426].  What is different\
    \ is the\n   specialization of the SDN environments through the distinction\n\
    \   between service and transport.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document was previously discussed and adopted in the\
    \ IRTF SDN RG\n   as [SDN-ARCH].  After the closure of the IRTF SDN RG, this document\n\
    \   was progressed as an Independent Submission to record (some of) that\n   group's\
    \ discussions.\n   The authors would like to thank (in alphabetical order) Bartosz\n\
    \   Belter, Gino Carrozzo, Ramon Casellas, Gert Grammel, Ali Haider,\n   Evangelos\
    \ Haleplidis, Zheng Haomian, Giorgios Karagianis, Gabriel\n   Lopez, Maria Rita\
    \ Palatella, Christian Esteve Rothenberg, and Jacek\n   Wytrebowicz for their\
    \ comments and suggestions.\n   Thanks to Adrian Farrel for the review.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Luis M. Contreras\n   Telefonica\n   Ronda de la Comunicacion,\
    \ s/n\n   Sur-3 building, 3rd floor\n   Madrid  28050\n   Spain\n   Email: luismiguel.contrerasmurillo@telefonica.com\n\
    \   URI:   http://lmcontreras.com\n   Carlos J. Bernardos\n   Universidad Carlos\
    \ III de Madrid\n   Av. Universidad, 30\n   Leganes, Madrid  28911\n   Spain\n\
    \   Phone: +34 91624 6236\n   Email: cjbc@it.uc3m.es\n   URI:   http://www.it.uc3m.es/cjbc/\n\
    \   Diego R. Lopez\n   Telefonica\n   Ronda de la Comunicacion, s/n\n   Sur-3\
    \ building, 3rd floor\n   Madrid  28050\n   Spain\n   Email: diego.r.lopez@telefonica.com\n\
    \   Mohamed Boucadair\n   Orange\n   Rennes  35000\n   France\n   Email: mohamed.boucadair@orange.com\n\
    \   Paola Iovanna\n   Ericsson\n   Pisa\n   Italy\n   Email: paola.iovanna@ericsson.com\n"
