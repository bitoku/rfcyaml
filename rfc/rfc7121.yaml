- contents:
  - "                       High Availability within a\n   Forwarding and Control
    Element Separation (ForCES) Network Element\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document discusses Control Element (CE) High Availability (HA)\n
    \  within a Forwarding and Control Element Separation (ForCES) Network\n   Element
    (NE).  Additionally, this document updates RFC 5810 by\n   providing new normative
    text for the Cold Standby High Availability\n   mechanism.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7121.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  Quantifying Problem Scope . . . . . . . . . . . . .
    . . .   4\n     1.2.  Definitions . . . . . . . . . . . . . . . . . . . . . .
    .   5\n   2.  RFC 5810 CE HA Framework  . . . . . . . . . . . . . . . . . .   7\n
    \    2.1.  RFC 5810 CE HA Support  . . . . . . . . . . . . . . . . .   7\n       2.1.1.
    \ Cold Standby Interaction with the ForCES Protocol . .   8\n       2.1.2.  Responsibilities
    for HA . . . . . . . . . . . . . . .  10\n   3.  CE HA Hot Standby . . . . . .
    . . . . . . . . . . . . . . . .  11\n     3.1.  Changes to the FEPO Model . .
    . . . . . . . . . . . . . .  11\n     3.2.  FEPO Processing . . . . . . . . .
    . . . . . . . . . . . .  13\n   4.  IANA Considerations . . . . . . . . . . .
    . . . . . . . . . .  17\n   5.  Security Considerations . . . . . . . . . . .
    . . . . . . . .  18\n   6.  References  . . . . . . . . . . . . . . . . . . .
    . . . . . .  19\n     6.1.  Normative References  . . . . . . . . . . . . . .
    . . . .  19\n     6.2.  Informative References  . . . . . . . . . . . . . . .
    . .  19\n   Appendix A.  New FEPO Version . . . . . . . . . . . . . . . . . .
    \ 20\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Figure 1 illustrates a ForCES Network Element (NE) controlled
    by a\n   set of redundant Control Elements (CEs) with CE1 being active and CE2\n
    \  and CEn being backups.\n                           -----------------------------------------\n
    \                          | ForCES Network Element                |\n                           |
    \                       +-----------+  |\n                           |                        |
    \ CEn      |  |\n                           |                        |  (Backup)
    |  |\n     --------------   Fc   | +------------+      +------------+ |  |\n     |
    CE Manager |--------+-|     CE1    |------|    CE2     |-+  |\n     --------------
    \       | |  (Active)  |  Fr  |  (Backup)  |    |\n           |               |
    +-------+--+-+      +---+---+----+    |\n           | Fl            |         |
    \ |    Fp      /   |         |\n           |               |         |  +---------+
    /    |         |\n           |               |       Fp|            |/     |Fp
    \      |\n           |               |         |            |      |         |\n
    \          |               |         |      Fp   /+--+   |         |\n           |
    \              |         |  +-------+    |   |         |\n           |               |
    \        |  |            |   |         |\n     --------------    Ff  | --------+--+--
    \     ----+---+----+    |\n     | FE Manager |--------+-|     FE1    |  Fi  |
    \    FE2    |    |\n     --------------        | |            |------|            |
    \   |\n                           | --------------      --------------    |\n
    \                          |   |  |  |  |          |  |  |  |      |\n                           ----+--+--+--+----------+--+--+--+-------\n
    \                              |  |  |  |          |  |  |  |\n                               |
    \ |  |  |          |  |  |  |\n                                 Fi/f                   Fi/f\n
    \         Fp: CE-FE interface\n          Fi: FE-FE interface\n          Fr: CE-CE
    interface\n          Fc: Interface between the CE manager and a CE\n          Ff:
    Interface between the FE manager and an FE\n          Fl: Interface between the
    CE manager and the FE manager\n          Fi/f: FE external interface\n                       Figure
    1: ForCES Architecture\n   The ForCES architecture allows Forwarding Elements
    (FEs) to be aware\n   of multiple CEs but enforces that only one CE be the master\n
    \  controller.  This is known in the industry as 1+N redundancy.  The\n   master
    CE controls the FEs via the ForCES protocol operating on the\n   Fp interface.
    \ If the master CE becomes faulty, i.e., crashes or\n   loses connectivity, a
    backup CE takes over and NE operation\n   continues.  By definition, the current
    documented setup is known as\n   cold standby.  The set of CEs controlling an
    FE is static and is\n   passed to the FE by the FE Manager (FEM) via the Ff interface
    and to\n   each CE by the CE Manager (CEM) in the Fc interface during the pre-\n
    \  association phase.\n   From an FE perspective, the operational parameters for
    a CE set are\n   defined as components in the FEPO LFB in [RFC5810], Appendix
    B.  In\n   Section 2.1 of this document, we discuss further details of these\n
    \  parameters.\n   It is assumed that the reader is aware of the ForCES architecture
    to\n   make sense of the changes being described in this document.  This\n   document
    provides background information to set the context of the\n   discussion in Section
    3.\n   At the time of writing, the Fr interface is out of scope for the\n   ForCES
    architecture.  However, it is expected that organizations\n   implementing a set
    of CEs will need to have the CEs communicate to\n   each other via the Fr interface
    in order to achieve the\n   synchronization necessary for controlling the FEs.\n
    \  The problem scope addressed by this document falls into two areas:\n   1.  To
    update the description of [RFC5810] with more clarity on how\n       the current
    cold standby approach operates within the NE cluster.\n   2.  To describe how
    to evolve the [RFC5810] cold standby setup to a\n       hot standby redundancy
    setup to improve the failover time and NE\n       availability.\n"
  title: 1.  Introduction
- contents:
  - "1.1.  Quantifying Problem Scope\n   NE recovery and availability is dependent
    on several time-sensitive\n   metrics:\n   1.  How fast the CE plane failure is
    detected by the FE.\n   2.  How fast a backup CE becomes operational.\n   3.  How
    fast the FEs associate with the new master CE.\n   4.  How fast the FEs recover
    their state and become operational.\n       Each FE state is the collective state
    of all its instantiated\n       LFBs.\n   The design intent of [RFC5810] as well
    as this document to meet the\n   above goals is driven by desire for simplicity.\n
    \  To quantify the above criteria with the current prescribed ForCES CE\n   setup
    in [RFC5810]:\n   1.  How fast the FE side detects a CE failure is left undefined.
    \ To\n       illustrate an extreme scenario, we could have a human operator\n
    \      acting as the monitoring entity to detect faulty CEs.  How fast\n       such
    detection happens could be in the range of seconds to days.\n       A more active
    monitor on the Fp interface could improve this\n       detection.  Usually, the
    FE will detect a CE failure either by\n       the TML if the Fp interface terminates
    or by the ForCES protocol\n       by utilizing the ForCES Heartbeat mechanism.\n
    \  2.  How fast the backup CE becomes operational is also currently out\n       of
    scope.  In the current setup, a backup CE need not be\n       operational at all
    (for example, to save power), and therefore it\n       is feasible for a monitoring
    entity to boot up a backup CE after\n       it detects the failure of the master
    CE.  In Section 3 of this\n       document, we suggest that at least one backup
    CE be online so as\n       to improve this metric.\n   3.  How fast an FE associates
    with a new master CE is also currently\n       undefined.  The cost of an FE connecting
    and associating adds to\n       the recovery overhead.  As mentioned above, we
    suggest having at\n       least one backup CE online.  In Section 3, we propose
    to remove\n       the connection and association cost on failover by having each
    FE\n       associate with all online backup CEs after associating to an\n       active/master
    CE.  Note that if an FE pre-associates with at\n       least one backup CE, then
    the system will be technically\n       operating in hot standby mode.\n   4.  Finally,
    how fast an FE recovers its state depends on how much NE\n       state exists.
    \ By the ForCES current definition, the new master\n       CE assumes zero state
    on the FE and starts from scratch to update\n       the FE.  So, the larger the
    state, the longer the recovery.\n"
  title: 1.1.  Quantifying Problem Scope
- contents:
  - "1.2.  Definitions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [RFC2119].\n   The
    following definitions are taken from [RFC3654], [RFC3746], and\n   [RFC5810].
    \ They are repeated here for convenience as needed, but the\n   normative definitions
    are found in the referenced RFCs:\n   Logical Functional Block (LFB):  A template
    that represents fine-\n      grained, logically separate aspects of FE processing.\n
    \  Forwarding Element (FE):  A logical entity that implements the ForCES\n      protocol.
    \ FEs use the underlying hardware to provide per-packet\n      processing and
    handling as directed by a CE via the ForCES\n      protocol.\n   Control Element
    (CE):  A logical entity that implements the ForCES\n      protocol and uses it
    to instruct one or more FEs on how to process\n      packets.  CEs handle functionality
    such as the execution of\n      control and signaling protocols.\n   ForCES Network
    Element (NE):  An entity composed of one or more CEs\n      and one or more FEs.
    \ An NE usually hides its internal\n      organization from external entities
    and represents a single point\n      of management to entities outside the NE.\n
    \  FE Manager (FEM):  A logical entity that operates in the pre-\n      association
    phase and is responsible for determining to which\n      CE(s) an FE should communicate.
    \ This process is called CE\n      discovery and may involve the FE manager learning
    the capabilities\n      of available CEs.\n   CE Manager (CEM):  A logical entity
    that operates in the pre-\n      association phase and is responsible for determining
    to which\n      FE(s) a CE should communicate.  This process is called FE\n      discovery
    and may involve the CE manager learning the capabilities\n      of available FEs.\n
    \  ForCES Protocol:  The protocol used for communication between CEs and\n      FEs.
    \ This protocol does not apply to CE-to-CE communication, FE-\n      to-FE communication,
    or to communication between FE and CE\n      managers.  The ForCES protocol is
    a master-slave protocol in which\n      FEs are slaves and CEs are masters.  This
    protocol includes both\n      the management of the communication channel (e.g.,
    connection\n      establishment and heartbeats) and the control messages themselves.\n
    \  ForCES Protocol Layer (ForCES PL):  A layer in the ForCES protocol\n      architecture
    that defines the ForCES protocol messages, the\n      protocol state transfer
    scheme, and the ForCES protocol\n      architecture itself (including requirements
    of ForCES Transport\n      Mapping Layer (TML) as shown below).  Specifications
    of ForCES PL\n      are defined in [RFC5810].\n   ForCES Protocol Transport Mapping
    Layer (ForCES TML):  A layer in the\n      ForCES protocol architecture that specifically
    addresses the\n      protocol message transportation issues, such as how the protocol\n
    \     messages are mapped to different transport media (like Stream\n      Control
    Transmission Protocol (SCTP), IP, TCP, UDP, ATM, Ethernet,\n      etc.), and how
    to achieve and implement reliability, security,\n      etc.\n"
  title: 1.2.  Definitions
- contents:
  - "2.  RFC 5810 CE HA Framework\n   To achieve CE High Availability (HA), FEs and
    CEs MUST interoperate\n   per the definition in [RFC5810], which is repeated for
    contextual\n   reasons in Section 2.1.  It should be noted that in this default\n
    \  setup, which MUST be implemented by CEs and FEs requiring HA, the Fr\n   plane
    is out of scope (and if available, is proprietary to an\n   implementation).\n"
  title: 2.  RFC 5810 CE HA Framework
- contents:
  - "2.1.  RFC 5810 CE HA Support\n   As mentioned earlier, although there can be
    multiple redundant CEs,\n   only one CE actively controls FEs in a ForCES NE.
    \ In practice, there\n   may be only one backup CE.  At any moment in time, only
    one master CE\n   can control an FE.  In addition, the FE connects and associates
    to\n   only the master CE.  The FE and the CE are aware of the primary and\n   one
    or more secondary CEs.  This information (primary and secondary\n   CEs) is configured
    on the FE and the CE during pre-association by the\n   FEM and the CEM, respectively.\n
    \  This section includes a new normative description that updates\n   [RFC5810]
    for the Cold Standby High Availability mechanism.\n   Figure 2 below illustrates
    the ForCES message sequences that the FE\n   uses to recover the connection in
    the currently defined cold standby\n   scheme.\n         FE                       CE
    Primary         CE Secondary\n         |                           |                     |\n
    \        | Association Establishment |                     |\n         |   Capabilities
    Exchange   |                     |\n       1 |<------------------------->|                     |\n
    \        |                           |                     |\n         |       State
    Update        |                     |\n       2 |<------------------------->|
    \                    |\n         |                           |                     |\n
    \        |                           |                     |\n         |                        FAILURE
    \                 |\n         |                                                 |\n
    \        | Association Establishment, Capabilities Exchange|\n       3 |<----------------------------------------------->|\n
    \        |                                                 |\n         |         Event
    Report (primary CE down)          |\n       4 |------------------------------------------------>|\n
    \        |                                                 |\n         |                  State
    Update                   |\n       5 |<----------------------------------------------->|\n
    \                 Figure 2: CE Failover for Cold Standby\n"
  title: 2.1.  RFC 5810 CE HA Support
- contents:
  - "2.1.1.  Cold Standby Interaction with the ForCES Protocol\n   HA parameterization
    in an FE is driven by configuring the FE Protocol\n   Object (FEPO) LFB.\n   The
    FEPO Control Element ID (CEID) component identifies the current\n   master CE,
    and the component table BackupCEs identifies the\n   configured backup CEs.  The
    FEPO FE Heartbeat Interval (FEHI), CE\n   Heartbeat Dead Interval (CEHDI), and
    CE Heartbeat policy help in\n   detecting connectivity problems between an FE
    and CE.  The CE\n   failover policy defines how the FE should react on a detected\n
    \  failure.  The FEObject FEState component [RFC5812] defines the\n   operational
    forwarding status and control.  The CE can turn off the\n   FE's forwarding operations
    by setting the FEState to AdminDisable and\n   can turn it on by setting it to
    OperEnable.  Note: Section 5.1 of\n   [RFC5812] has been updated by an erratum
    ([Err3487]) that describes\n   the FEState as read-only when it should be read-write.\n
    \  Figure 3 illustrates the defined state machine that facilitates the\n   recovery
    of the connection state.\n   The FE connects to the CE specified on the FEPO CEID
    component.  If\n   it fails to connect to the defined CE, it moves it to the bottom
    of\n   table BackupCEs and sets its CEID component to be the first CE\n   retrieved
    from table BackupCEs.  The FE then attempts to associate\n   with the CE designated
    as the new primary CE.  The FE continues\n   through this procedure until it successfully
    connects to one of the\n   CEs or until the CE Failover Timeout Interval (CEFTI)
    expires.\n                             FE tries to associate\n                                   +-->-----+\n
    \                                  |        |\n      (CE changes master ||        |
    \       |\n      CE issues Teardown ||    +---+--------v----+\n        Lost association)
    &&   | Pre-association |\n       CE failover policy = 0  | (Association    |\n
    \          +------------>-->-->|   in            +<----+\n           |                   |
    progress)       |     |\n           |                   |                 |     |\n
    \          |                   +--------+--------+     |\n           |  CE Association
    \       |                  | CEFTI\n           |       Response         V                  |
    timer\n           |     +------------------+                  | expires\n           |
    \    |FE issues CEPrimaryDown              ^\n           |     V                                     |\n
    \        +-+-----------+                        +------+-----+\n         |             |
    \ (CE changes master || | Not        |\n         |             |  CE issues Teardown
    || | Associated |\n         |             |  Lost association) &&  |            +->---+\n
    \        | Associated  | CE failover policy = 1 |(May        | FE  |\n         |
    \            |                        | Continue   | try v\n         |             |-------->------->------>|
    Forwarding)| assn|\n         |             |   Start CEFTI timer    |            |-<---+\n
    \        |             |                        |            |\n         +-------------+
    \                       +-------+----+\n              ^                                         |\n
    \             |            Successful                   V\n              |            Association
    \                 |\n              |            Setup                        |\n
    \             |            (Cancel CEFTI timer)         |\n              +_________________________________________+\n
    \                      FE issues CEPrimaryDown event\n                 Figure
    3: FE State Machine Considering HA\n   There are several events that trigger mastership
    changes.  The master\n   CE may issue a mastership change (by changing the CEID
    component), it\n   may tear down an existing association, or connectivity may
    be lost\n   between the CE and FE.\n   When communication fails between the FE
    and CE (which can be caused\n   by either the CE or link failure but is not FE
    related), either the\n   TML on the FE will trigger the FE PL regarding this failure
    or it\n   will be detected using the Heartbeat messages between FEs and CEs.\n
    \  The communication failure, regardless of how it is detected, MUST be\n   considered
    to be a loss of association between the CE and\n   corresponding FE.\n   If the
    FE's FEPO CE failover policy is configured to mode 0 (the\n   default), it will
    immediately transition to the pre-association\n   phase.  This means that if association
    is later re-established with a\n   CE, all FE states will need to be re-created.\n
    \  If the FE's FEPO CE failover policy is configured to mode 1, it\n   indicates
    that the FE will run in HA restart recovery.  In such a\n   case, the FE transitions
    to the not associated state and the CEFTI\n   timer [RFC5810] is started.  The
    FE may continue to forward packets\n   during this state, depending upon the value
    of the CEFailoverPolicy\n   component of the FEPO LFB.  The FE recycles through
    any configured\n   backup CEs in a round-robin fashion.  It first adds its primary
    CE to\n   the bottom of table BackupCEs and sets its CEID component to be the\n
    \  first secondary retrieved from table BackupCEs.  The FE then attempts\n   to
    associate with the CE designated as the new primary CE.  If it\n   fails to re-associate
    with any CE and the CEFTI expires, the FE then\n   transitions to the pre-association
    state and the FE will\n   operationally bring down its forwarding path (and set
    the [RFC5812]\n   FEObject FEState component to OperDisable).\n   If the FE, while
    in the not associated state, manages to reconnect to\n   a new primary CE before
    the CEFTI expires, it transitions to the\n   associated state.  Once re-associated,
    the CE may try to synchronize\n   any state that the FE may have lost during disconnection.
    \ How the CE\n   re-synchronizes such a state is out of scope for the current
    ForCES\n   architecture but would typically constitute the issuing of new Config\n
    \  messages and queries.\n   An explicit message (a Config message setting the
    primary CE\n   component in the ForCES Protocol Object) from the primary CE can
    also\n   be used to change the primary CE for an FE during normal protocol\n   operation.
    \ In this case, the FE transitions to the not associated\n   state and attempts
    to associate with the new CE.\n"
  title: 2.1.1.  Cold Standby Interaction with the ForCES Protocol
- contents:
  - "2.1.2.  Responsibilities for HA\n   TML Level:\n   1.  The TML controls logical
    connection availability and failover.\n   2.  The TML also controls peer HA management.\n
    \  At this level, control of all lower layers, for example, the\n   transport
    level (such as IP addresses, Media Access Control (MAC)\n   addresses, etc.),
    and associated links going down are the role of the\n   TML.\n   PL Level:\n   All
    other functionality, including configuring the HA behavior during\n   setup, Control
    Element IDs (CE IDs) used to identify primary and\n   secondary CEs, protocol
    messages used to report CE failure (event\n   report), Heartbeat messages used
    to detect association failure,\n   messages to change the primary CE (Config),
    and other HA-related\n   operations described in Section 2.1, are the PL's responsibility.\n
    \  To put the two together, if a path to a primary CE is down, the TML\n   would
    help recover from a failure by switching over to a backup path,\n   if one is
    available.  If the CE is totally unreachable, then the PL\n   would be informed
    and it would take the appropriate actions described\n   before.\n"
  title: 2.1.2.  Responsibilities for HA
- contents:
  - "3.  CE HA Hot Standby\n   In this section, we describe small extensions to the
    existing scheme\n   to enable hot standby HA.  To achieve hot standby HA, we aim
    to\n   improve the specific goals defined in Section 1.1, namely:\n   o  How fast
    a backup CE becomes operational.\n   o  How fast the FEs associate with the new
    master CE.\n   As described in Section 2.1, in the pre-association phase, the
    FEM\n   configures the FE to make it aware of all the CEs in the NE.  The FEM\n
    \  MUST configure the FE to make it aware of which CE is the master and\n   MAY
    specify any backup CE(s).\n"
  title: 3.  CE HA Hot Standby
- contents:
  - "3.1.  Changes to the FEPO Model\n   In order for the above to be achievable,
    there is a need to make a\n   few changes in the FEPO model.  Appendix A contains
    the xml\n   definition of the new version 1.1 of the FEPO LFB.\n   Changes from
    version 1 of the FEPO are:\n   1.  Added four new datatypes:\n       1.  CEStatusType
    -- an unsigned char to specify the status of a\n           connection with a CE.
    \ Special values are:\n           +  0 (Disconnected) represents that no connection
    attempt has\n              been made with the CE yet\n           +  1 (Connected)
    represents that the FE connection with the\n              CE at the TML has completed
    successfully\n           +  2 (Associated) represents that the FE has successfully\n
    \             associated with the CE\n           +  3 (IsMaster) represents that
    the FE has associated with\n              the CE and is the master of the FE\n
    \          +  4 (LostConnection) represents that the FE was associated\n              with
    the CE at one point but lost the connection\n           +  5 (Unreachable) represents
    that the FE deems this CE\n              unreachable, i.e., the FE has tried over
    a period to\n              connect to it but has failed\n       2.  HAModeValues
    -- an unsigned char to specify a selected HA\n           mode.  Special values
    are:\n           +  0 (No HA Mode) represents that the FE is not running in HA\n
    \             mode\n           +  1 (HA Mode - Cold Standby) represents that the
    FE is in HA\n              mode cold standby\n           +  2 (HA Mode - Hot Standby)
    represents that the FE is in HA\n              mode hot standby\n       3.  Statistics
    -- a complex structure representing the\n           communication statistics between
    the FE and CE.  The\n           components are:\n           +  RecvPackets, representing
    the packet count received from\n              the CE\n           +  RecvBytes,
    representing the byte count received from the\n              CE\n           +
    \ RecvErrPackets, representing the erroneous packets\n              received from
    the CE.  This component logs badly formatted\n              packets as well as
    good packets sent to the FE by the CE\n              to set components whilst
    that CE is not the master.\n              Erroneous packets are dropped (i.e.,
    not responded to).\n           +  RecvErrBytes, representing the RecvErrPackets
    byte count\n              received from the CE\n           +  TxmitPackets, representing
    the packet count transmitted to\n              the CE\n           +  TxmitErrPackets,
    representing the error packet count\n              transmitted to the CE.  Typically,
    these would be failures\n              due to communication.\n           +  TxmitBytes,
    representing the byte count transmitted to the\n              CE\n           +
    \ TxmitErrBytes, representing the byte count of errors from\n              transmit
    to the CE\n       4.  AllCEType -- a complex structure constituting the CE IDs,\n
    \          statistics, and CEStatusType to reflect connection\n           information
    for one CE.  Used in the AllCE's component array.\n   2.  Appended two new components:\n
    \      1.  Read-only AllCEs to hold the status for all CEs.  AllCEs is\n           an
    array of the AllCEType.\n       2.  Read-write HAMode of type HAModeValues to
    carry the HA mode\n           used by the FE.\n   3.  Added one additional event,
    PrimaryCEChanged, reporting the new\n       master CE ID when there is a mastership
    change.\n   Since no component from FEPO v1 has been changed, FEPO v1.1 retains\n
    \  backwards compatibility with CEs that know only version 1.0.  These\n   CEs,
    however, cannot make use of the HA options that the new FEPO\n   provides.\n"
  title: 3.1.  Changes to the FEPO Model
- contents:
  - "3.2.  FEPO Processing\n   The FE's FEPO LFB version 1.1 AllCEs table contains
    all the CE IDs\n   with which the FE may connect and associate.  The ordering
    of the CE\n   IDs in this table defines the priority order in which an FE will\n
    \  connect to the CEs.  This table is provisioned initially from the\n   configuration
    plane (FEM).  In the pre-association phase, the first\n   CE (lowest table index)
    in the AllCEs table MUST be the first CE with\n   which the FE will attempt to
    connect and associate.  If the FE fails\n   to connect and associate with the
    first listed CE, it will attempt to\n   connect to the second CE and so forth,
    and it cycles back to the\n   beginning of the list until there is a successful
    association.  The\n   FE MUST associate with at least one CE.  Upon a successful\n
    \  association, a component of the FEPO LFB, specifically the CEID\n   component,
    identifies the current associated master CE.\n   While it would be much simpler
    to have the FE not respond to any\n   messages from a CE other than the master,
    in practice it has been\n   found to be useful to respond to queries and heartbeats
    from backup\n   CEs.  For this reason, we allow backup CEs to issue queries to
    the\n   FE.  Configuration messages (SET/DEL) from backup CEs MUST be dropped\n
    \  by the FE and logged as received errors.\n   Asynchronous events that the master
    CE has subscribed to, as well as\n   heartbeats, are sent to all associated CEs.
    \ Packet redirects\n   continue to be sent only to the master CE.  The Heartbeat
    Interval,\n   the CE Heartbeat (CEHB) policy, and the FE Heartbeat (FEHB) policy\n
    \  are global for all CEs (and changed only by the master CE).\n   Figure 4 illustrates
    the state machine that facilitates connection\n   recovery with HA enabled.\n
    \                          FE tries to associate\n                                +-->-----+\n
    \                               |        |\n   (CE changes master ||        |
    \       |\n   CE issues Teardown ||    +---+--------v----+\n     Lost association)
    &&   | Pre-association |\n    CE failover policy = 0  | (Association    |\n        +------------>-->-->|
    \  in            +<----+\n        |                   | progress)       |     |\n
    \       |                   |                 |     |\n        |                   +--------+--------+
    \    |\n        |  CE Association        |                  | CEFTI\n        |
    \      Response         V                  | timer\n        |     +------------------+
    \                 | expires\n        |     |FE issues CEPrimaryDown              ^\n
    \       |     |FE issues PrimaryCEChanged           ^\n        |     V                                     |\n
    \     +-+-----------+                        +------+-----+\n      |             |
    \ (CE changes master || | Not        |\n      |             |  CE issues Teardown
    || | Associated |\n      |             |  Lost association) &&  |            +->----------+\n
    \     | Associated  | CE failover policy = 1 |(May        | find first |\n      |
    \            |                        | Continue   | associated v\n      |             |-------->------->------>|
    Forwarding)| CE or retry|\n      |             |   Start CEFTI timer    |            |
    associating|\n      |             |                        |            |-<----------+\n
    \     |             |                        |            |\n      +----+--------+
    \                       +-------+----+\n           |                                         |\n
    \          ^                                   Found | associated CE\n           |
    \                               or newly | associated CE\n           |                                         V\n
    \          |            (Cancel CEFTI timer)         |\n           +_________________________________________+\n
    \                   FE issues CEPrimaryDown event\n                    FE issues
    PrimaryCEChanged event\n                 Figure 4: FE State Machine Considering
    HA\n   Once the FE has associated with a master CE, it moves to the post-\n   association
    phase (associated state).  It is assumed that the master\n   CE will communicate
    with other CEs within the NE for the purpose of\n   synchronization via the CE-CE
    interface.  The CE-CE interface is out\n   of scope for this document.  An election
    result amongst CEs may\n   result in the desire to change the mastership to a
    different\n   associated CE; at which point, the current assumed master CE will\n
    \  instruct the FE to use a different master CE.\n         FE                         CE#1
    \        CE#2 ... CE#N\n         |                           |            |        |\n
    \        | Association Establishment |            |        |\n         |   Capabilities
    Exchange   |            |        |\n       1 |<------------------------->|            |
    \       |\n         |                           |            |        |\n         |
    \     State Update         |            |        |\n       2 |<------------------------->|
    \           |        |\n         |                           |            |        |\n
    \        |      Association Establishment         |        |\n         |        Capabilities
    Exchange           |        |\n       3I|<-------------------------------------->|
    \       |\n        ...                         ...          ...      ...\n         |Association
    Establishment, Capabilities Exchange |\n       3N|<----------------------------------------------->|\n
    \        |                           |            |        |\n       4 |<------------------------->|
    \           |        |\n         .                           .            .        .\n
    \      4x|<------------------------->|            |        |\n         |                        FAILURE
    \        |        |\n         |                           |            |        |\n
    \        |    Event Report (LastCEID changed)     |        |\n       5 |--------------------------------------->|------->|\n
    \        |    Event Report (CE#2 is new master)   |        |\n       6 |--------------------------------------->|------->|\n
    \        |                                        |        |\n       7 |<-------------------------------------->|
    \       |\n         .                           .            .        .\n       7x|<-------------------------------------->|
    \       |\n         .                           .            .        .\n                   Figure
    5: CE Failover for Hot Standby\n   While in the post-association phase, if the
    CE failover policy is set\n   to 1 and the HAMode is set to 2 (hot standby), then
    the FE, after\n   successfully associating with the master CE, MUST attempt to
    connect\n   and associate with all the CEs of which it is aware.  Figure 5, steps\n
    \  #1 and #2 illustrates the FE associating with CE#1 as the master, and\n   then
    proceeding to steps #3I to #3N, it shows the association with\n   backup CEs CE#2
    to CE#N.  If the FE fails to connect or associate\n   with some CEs, the FE MAY
    flag them as unreachable to avoid\n   continuous attempts to connect.  The FE
    MAY try to re-associate with\n   unreachable CEs when possible.\n   When the master
    CE, for any reason, is considered to be down, then\n   the FE MUST try to find
    the first associated CE from the list of all\n   CEs in a round-robin fashion.\n
    \  If the FE is unable to find an associated FE in its list of CEs, then\n   it
    MUST attempt to connect and associate with the first from the list\n   of all
    CEs and continue in a round-robin fashion until it connects\n   and associates
    with a CE or the CEFTI timer expires.\n   Once the FE selects an associated CE
    to use as the new master, the FE\n   issues a PrimaryCEDown Event Notification
    to all associated CEs to\n   notify them that the last primary CE went down (and
    what its identity\n   was); a second event, PrimaryCEChanged, identifying the
    new master CE\n   is sent as well to identify which CE the reporting FE considers
    to be\n   the new master.\n   In most HA architectures, there exists the possibility
    of split\n   brain.  However, in our setup, since the FE will never accept any\n
    \  configuration messages from any other than the master CE, we consider\n   the
    FE to be fenced against data corruption from the other CEs that\n   consider themselves
    as the master.  The split-brain issue becomes\n   mostly a CE-CE communication
    problem, which is considered to be out\n   of scope.\n   By virtue of having multiple
    CE connections, the FE switchover to a\n   new master CE will be relatively much
    faster.  The overall effect is\n   improving the NE recovery time in case of communication
    failure or\n   faults of the master CE.  This satisfies the requirement we set
    to\n   fulfill.\n"
  title: 3.2.  FEPO Processing
- contents:
  - "4.  IANA Considerations\n   Following the policies outlined in \"Guidelines for
    Writing an IANA\n   Considerations Section in RFCs\" [RFC5226], the \"Logical
    Functional\n   Block (LFB) Class Names and Class Identifiers\" namespace has been\n
    \  updated.\n   A new column, LFB version, has been added to the table after the
    LFB\n   Class Name.  The table now reads as follows:\n   +----------------+------------+-----------+-------------+-----------+\n
    \  |   LFB Class    | LFB Class  |    LFB    | Description | Reference |\n   |
    \  Identifier   |    Name    |  Version  |             |           |\n   +----------------+------------+-----------+-------------+-----------+\n
    \    Logical Functional Block (LFB) Class Names and Class Identifiers\n   The
    rules defined in [RFC5812] apply, with the addition that entries\n   must provide
    the LFB version as a string.\n   Upon publication of this document, all current
    entries are assigned a\n   value of 1.0.\n   New versions of already defined LFBs
    MUST NOT remove the previous\n   version entries.\n   It would make sense to have
    LFB versions appear in sequence in the\n   registry.  The table SHOULD be sorted,
    and the sorting should be done\n   by Class ID first and then by version.\n   This
    document introduces the FE Protocol Object version 1.1 as\n   follows:\n   +------------+----------+---------+---------------------+-----------+\n
    \  | LFB Class  |   LFB    |   LFB   |     Description     | Reference |\n   |
    Identifier |  Class   | Version |                     |           |\n   |            |
    \  Name   |         |                     |           |\n   +------------+----------+---------+---------------------+-----------+\n
    \  |     2      |    FE    |   1.1   |  Defines parameters | [RFC7121] |\n   |
    \           | Protocol |         |    for the ForCES   |           |\n   |            |
    \ Object  |         |  protocol operation |           |\n   +------------+----------+---------+---------------------+-----------+\n
    \    Logical Functional Block (LFB) Class Names and Class Identifiers\n"
  title: 4.  IANA Considerations
- contents:
  - "5.  Security Considerations\n   Security considerations, as defined in Section
    9 of [RFC5810], apply\n   to securing each CE-FE communication.  Multiple CEs
    associated with\n   the same FE still require the same procedure to be followed
    on a per-\n   association basis.\n   It should be noted that since the FE is initiating
    the association\n   with a CE, a CE cannot initiate association with the FE and
    such\n   messages will be dropped.  Thus, the FE is secured from rogue CEs\n   that
    are attempting to associate with it.\n   CE implementers should have in mind that
    once associated, the FE\n   cannot distinguish whether the CE has been compromised
    or has been\n   malfunctioning while not losing connectivity.  Securing the CE
    is out\n   of scope of this document.\n   While the CE-CE plane is outside the
    current scope of ForCES, we\n   recognize that it may be subjected to attacks
    that may affect the CE-\n   FE communication.\n   The following considerations
    should be made:\n   1.  Secure communication channels should be used between CEs
    for\n       coordination and keeping of state to at least avoid connection of\n
    \      malicious CEs.\n   2.  The master CE should take into account DoS and Distributed\n
    \      Denial-of-Service (DDoS) attacks from malicious or malfunctioning\n       CEs.\n
    \  3.  CEs should take into account the split-brain issue.  There are\n       currently
    two fail-safes in the FE: Firstly, the FE has the CEID\n       component that
    denotes which CE is the master.  Secondly, the FE\n       does not allow BackupCEs
    to configure the FE.  However, backup\n       CEs that consider that the master
    CE has dropped should, as\n       masters themselves, first do a sanity check
    and query the FE CEID\n       component.\n"
  title: 5.  Security Considerations
- contents:
  - '6.  References

    '
  title: 6.  References
- contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in
    RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
    1997.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n
    \             IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n              May
    2008.\n   [RFC5810]  Doria, A., Hadi Salim, J., Haas, R., Khosravi, H., Wang,\n
    \             W., Dong, L., Gopal, R., and J. Halpern, \"Forwarding and\n              Control
    Element Separation (ForCES) Protocol\n              Specification\", RFC 5810,
    March 2010.\n   [RFC5812]  Halpern, J. and J. Hadi Salim, \"Forwarding and Control\n
    \             Element Separation (ForCES) Forwarding Element Model\", RFC\n              5812,
    March 2010.\n"
  title: 6.1.  Normative References
- contents:
  - "6.2.  Informative References\n   [Err3487]  RFC Errata, Errata ID 3487, RFC 5812,\n
    \             <http://www.rfc-editor.org>.\n   [RFC3654]  Khosravi, H. and T.
    Anderson, \"Requirements for Separation\n              of IP Control and Forwarding\",
    RFC 3654, November 2003.\n   [RFC3746]  Yang, L., Dantu, R., Anderson, T., and
    R. Gopal,\n              \"Forwarding and Control Element Separation (ForCES)\n
    \             Framework\", RFC 3746, April 2004.\n"
  title: 6.2.  Informative References
- contents:
  - "Appendix A.  New FEPO Version\n   The xml has been validated against the schema
    defined in [RFC5812].\n"
  - "<LFBLibrary xmlns=\"urn:ietf:params:xml:ns:forces:lfbmodel:1.0\"\n   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n
    \  xsi:noNamespaceSchemaLocation=\"lfb-schema.xsd\" provides=\"FEPO\">\n   <!--
    XXX -->\n   <dataTypeDefs>\n      <dataTypeDef>\n         <name>CEHBPolicyValues</name>\n
    \        <synopsis>\n            The possible values of the CE Heartbeat policy\n
    \        </synopsis>\n         <atomic>\n            <baseType>uchar</baseType>\n
    \           <specialValues>\n               <specialValue value=\"0\">\n                  <name>CEHBPolicy0</name>\n
    \                 <synopsis>\n              The CE will send heartbeats to the
    FE\n              every CEHDI timeout if no other messages\n              have
    been sent since.\n                  </synopsis>\n               </specialValue>\n
    \              <specialValue value=\"1\">\n                  <name>CEHBPolicy1</name>\n
    \                 <synopsis>\n              The CE will not send heartbeats to
    the FE\n                  </synopsis>\n               </specialValue>\n            </specialValues>\n
    \        </atomic>\n      </dataTypeDef>\n      <dataTypeDef>\n         <name>FEHBPolicyValues</name>\n
    \        <synopsis>\n            The possible values of the FE Heartbeat policy\n
    \        </synopsis>\n         <atomic>\n            <baseType>uchar</baseType>\n
    \           <specialValues>\n               <specialValue value=\"0\">\n                  <name>FEHBPolicy0</name>\n
    \                 <synopsis>\n        The FE will not generate any heartbeats
    to the CE\n                  </synopsis>\n               </specialValue>\n               <specialValue
    value=\"1\">\n                  <name>FEHBPolicy1</name>\n                  <synopsis>\n
    \       The FE generates heartbeats to the CE every FEHI\n        if no other
    messages have been sent to the CE.\n                  </synopsis>\n               </specialValue>\n
    \           </specialValues>\n         </atomic>\n      </dataTypeDef>\n      <dataTypeDef>\n
    \        <name>FERestartPolicyValues</name>\n         <synopsis>\n            The
    possible values of the FE restart policy\n         </synopsis>\n         <atomic>\n
    \           <baseType>uchar</baseType>\n            <specialValues>\n               <specialValue
    value=\"0\">\n                  <name>FERestartPolicy0</name>\n                  <synopsis>\n
    \                    The FE restarts its state from scratch\n                  </synopsis>\n
    \              </specialValue>\n            </specialValues>\n         </atomic>\n
    \     </dataTypeDef>\n      <dataTypeDef>\n         <name>HAModeValues</name>\n
    \        <synopsis>\n            The possible values of HA modes\n         </synopsis>\n
    \        <atomic>\n            <baseType>uchar</baseType>\n            <specialValues>\n
    \              <specialValue value=\"0\">\n                  <name>NoHA</name>\n
    \                 <synopsis>\n                     The FE is not running in HA
    mode\n                  </synopsis>\n               </specialValue>\n               <specialValue
    value=\"1\">\n                  <name>ColdStandby</name>\n                  <synopsis>\n
    \                    The FE is running in HA mode cold standby\n                  </synopsis>\n
    \              </specialValue>\n               <specialValue value=\"2\">\n                  <name>HotStandby</name>\n
    \                 <synopsis>\n                     The FE is running in HA mode
    hot standby\n                  </synopsis>\n               </specialValue>\n            </specialValues>\n
    \        </atomic>\n      </dataTypeDef>\n      <dataTypeDef>\n         <name>CEFailoverPolicyValues</name>\n
    \        <synopsis>\n            The possible values of the CE failover policy\n
    \        </synopsis>\n         <atomic>\n            <baseType>uchar</baseType>\n
    \           <specialValues>\n               <specialValue value=\"0\">\n                  <name>CEFailoverPolicy0</name>\n
    \                 <synopsis>\n        The FE should stop functioning immediately
    and\n        transition to the FE OperDisable state\n                  </synopsis>\n
    \              </specialValue>\n               <specialValue value=\"1\">\n                  <name>CEFailoverPolicy1</name>\n
    \                 <synopsis>\n        The FE should continue forwarding even without
    an\n        associated CE for CEFTI. The FE goes to FE\n        OperDisable when
    the CEFTI expires and there is no\n        association. Requires graceful restart
    support.\n                  </synopsis>\n               </specialValue>\n            </specialValues>\n
    \        </atomic>\n      </dataTypeDef>\n      <dataTypeDef>\n         <name>FEHACapab</name>\n
    \        <synopsis>\n            The supported HA features\n         </synopsis>\n
    \        <atomic>\n            <baseType>uchar</baseType>\n            <specialValues>\n
    \              <specialValue value=\"0\">\n                  <name>GracefullRestart</name>\n
    \                 <synopsis>\n                     The FE supports graceful restart\n
    \                 </synopsis>\n               </specialValue>\n               <specialValue
    value=\"1\">\n                  <name>HA</name>\n                  <synopsis>\n
    \                    The FE supports HA\n                  </synopsis>\n               </specialValue>\n
    \           </specialValues>\n         </atomic>\n      </dataTypeDef>\n      <dataTypeDef>\n
    \        <name>CEStatusType</name>\n         <synopsis>Status values. Status for
    each CE</synopsis>\n         <atomic>\n            <baseType>uchar</baseType>\n
    \           <specialValues>\n               <specialValue value=\"0\">\n                  <name>Disconnected</name>\n
    \                 <synopsis>No connection attempt with the CE yet\n                  </synopsis>\n
    \              </specialValue>\n               <specialValue value=\"1\">\n                  <name>Connected</name>\n
    \                 <synopsis>The FE connection with the CE at the TML\n                     has
    been completed\n                  </synopsis>\n               </specialValue>\n
    \              <specialValue value=\"2\">\n                  <name>Associated</name>\n
    \                 <synopsis>The FE has associated with the CE\n                  </synopsis>\n
    \              </specialValue>\n               <specialValue value=\"3\">\n                  <name>IsMaster</name>\n
    \                 <synopsis>The CE is the master (and associated)\n                  </synopsis>\n
    \              </specialValue>\n               <specialValue value=\"4\">\n                  <name>LostConnection</name>\n
    \                 <synopsis>The FE was associated with the CE but\n                     lost
    the connection\n                  </synopsis>\n               </specialValue>\n
    \              <specialValue value=\"5\">\n                  <name>Unreachable</name>\n
    \                 <synopsis>The CE is deemed as unreachable by the FE\n                  </synopsis>\n
    \              </specialValue>\n            </specialValues>\n         </atomic>\n
    \     </dataTypeDef>\n      <dataTypeDef>\n         <name>StatisticsType</name>\n
    \        <synopsis>Statistics Definition</synopsis>\n         <struct>\n            <component
    componentID=\"1\">\n               <name>RecvPackets</name>\n               <synopsis>Packets
    received</synopsis>\n               <typeRef>uint64</typeRef>\n            </component>\n
    \           <component componentID=\"2\">\n               <name>RecvErrPackets</name>\n
    \              <synopsis>Packets received from the CE with errors\n               </synopsis>\n
    \              <typeRef>uint64</typeRef>\n            </component>\n            <component
    componentID=\"3\">\n               <name>RecvBytes</name>\n               <synopsis>Bytes
    received from the CE</synopsis>\n               <typeRef>uint64</typeRef>\n            </component>\n
    \           <component componentID=\"4\">\n               <name>RecvErrBytes</name>\n
    \              <synopsis>Bytes received from the CE in Error</synopsis>\n               <typeRef>uint64</typeRef>\n
    \           </component>\n            <component componentID=\"5\">\n               <name>TxmitPackets</name>\n
    \              <synopsis>Packets transmitted to the CE</synopsis>\n               <typeRef>uint64</typeRef>\n
    \           </component>\n            <component componentID=\"6\">\n               <name>TxmitErrPackets</name>\n
    \              <synopsis>\n                  Packets transmitted to the CE that\n
    \                 incurred errors\n               </synopsis>\n               <typeRef>uint64</typeRef>\n
    \           </component>\n            <component componentID=\"7\">\n               <name>TxmitBytes</name>\n
    \              <synopsis>Bytes transmitted to the CE</synopsis>\n               <typeRef>uint64</typeRef>\n
    \           </component>\n            <component componentID=\"8\">\n               <name>TxmitErrBytes</name>\n
    \              <synopsis>\n                  Bytes transmitted to the CE that\n
    \                 incurred errors\n               </synopsis>\n               <typeRef>uint64</typeRef>\n
    \           </component>\n         </struct>\n      </dataTypeDef>\n      <dataTypeDef>\n
    \        <name>AllCEType</name>\n         <synopsis>Table type for the AllCE component</synopsis>\n
    \        <struct>\n            <component componentID=\"1\">\n               <name>CEID</name>\n
    \              <synopsis>ID of the CE</synopsis>\n               <typeRef>uint32</typeRef>\n
    \           </component>\n            <component componentID=\"2\">\n               <name>Statistics</name>\n
    \              <synopsis>Statistics per the CE</synopsis>\n               <typeRef>StatisticsType</typeRef>\n
    \           </component>\n            <component componentID=\"3\">\n               <name>CEStatus</name>\n
    \              <synopsis>Status of the CE</synopsis>\n               <typeRef>CEStatusType</typeRef>\n
    \           </component>\n         </struct>\n      </dataTypeDef>\n   </dataTypeDefs>\n
    \  <LFBClassDefs>\n      <LFBClassDef LFBClassID=\"2\">\n         <name>FEPO</name>\n
    \        <synopsis>\n            The FE Protocol Object, with new CEHA\n         </synopsis>\n
    \        <version>1.1</version>\n         <components>\n            <component
    componentID=\"1\" access=\"read-only\">\n               <name>CurrentRunningVersion</name>\n
    \              <synopsis>Currently running the ForCES version</synopsis>\n               <typeRef>uchar</typeRef>\n
    \           </component>\n            <component componentID=\"2\" access=\"read-only\">\n
    \              <name>FEID</name>\n               <synopsis>Unicast FEID</synopsis>\n
    \              <typeRef>uint32</typeRef>\n            </component>\n            <component
    componentID=\"3\" access=\"read-write\">\n               <name>MulticastFEIDs</name>\n
    \              <synopsis>\n                  The table of all multicast IDs\n
    \              </synopsis>\n               <array type=\"variable-size\">\n                  <typeRef>uint32</typeRef>\n
    \              </array>\n            </component>\n            <component componentID=\"4\"
    access=\"read-write\">\n               <name>CEHBPolicy</name>\n               <synopsis>\n
    \                 The CE Heartbeat policy\n               </synopsis>\n               <typeRef>CEHBPolicyValues</typeRef>\n
    \           </component>\n            <component componentID=\"5\" access=\"read-write\">\n
    \              <name>CEHDI</name>\n               <synopsis>\n                  The
    CE Heartbeat Dead Interval in milliseconds\n               </synopsis>\n               <typeRef>uint32</typeRef>\n
    \           </component>\n            <component componentID=\"6\" access=\"read-write\">\n
    \              <name>FEHBPolicy</name>\n               <synopsis>\n                  The
    FE Heartbeat policy\n               </synopsis>\n               <typeRef>FEHBPolicyValues</typeRef>\n
    \           </component>\n            <component componentID=\"7\" access=\"read-write\">\n
    \              <name>FEHI</name>\n               <synopsis>\n                  The
    FE Heartbeat Interval in milliseconds\n               </synopsis>\n               <typeRef>uint32</typeRef>\n
    \           </component>\n            <component componentID=\"8\" access=\"read-write\">\n
    \              <name>CEID</name>\n               <synopsis>\n                  The
    primary CE this FE is associated with\n               </synopsis>\n               <typeRef>uint32</typeRef>\n
    \           </component>\n            <component componentID=\"9\" access=\"read-write\">\n
    \              <name>BackupCEs</name>\n               <synopsis>\n                  The
    table of all backup CEs other than the\n                  primary\n               </synopsis>\n
    \              <array type=\"variable-size\">\n                  <typeRef>uint32</typeRef>\n
    \              </array>\n            </component>\n            <component componentID=\"10\"
    access=\"read-write\">\n               <name>CEFailoverPolicy</name>\n               <synopsis>\n
    \                 The CE failover policy\n               </synopsis>\n               <typeRef>CEFailoverPolicyValues</typeRef>\n
    \           </component>\n            <component componentID=\"11\" access=\"read-write\">\n
    \              <name>CEFTI</name>\n               <synopsis>\n                  The
    CE Failover Timeout Interval in milliseconds\n               </synopsis>\n               <typeRef>uint32</typeRef>\n
    \           </component>\n            <component componentID=\"12\" access=\"read-write\">\n
    \              <name>FERestartPolicy</name>\n               <synopsis>\n                  The
    FE restart policy\n               </synopsis>\n               <typeRef>FERestartPolicyValues</typeRef>\n
    \           </component>\n            <component componentID=\"13\" access=\"read-write\">\n
    \              <name>LastCEID</name>\n               <synopsis>\n                  The
    primary CE this FE was last associated\n                  with\n               </synopsis>\n
    \              <typeRef>uint32</typeRef>\n            </component>\n            <component
    componentID=\"14\" access=\"read-write\">\n               <name>HAMode</name>\n
    \              <synopsis>\n                  The HA mode used\n               </synopsis>\n
    \              <typeRef>HAModeValues</typeRef>\n            </component>\n            <component
    componentID=\"15\" access=\"read-only\">\n               <name>AllCEs</name>\n
    \              <synopsis>The table of all CEs</synopsis>\n               <array
    type=\"variable-size\">\n                  <typeRef>AllCEType</typeRef>\n               </array>\n
    \           </component>\n         </components>\n         <capabilities>\n            <capability
    componentID=\"30\">\n               <name>SupportableVersions</name>\n               <synopsis>\n
    \                 The table of ForCES versions that FE supports\n               </synopsis>\n
    \              <array type=\"variable-size\">\n                  <typeRef>uchar</typeRef>\n
    \              </array>\n            </capability>\n            <capability componentID=\"31\">\n
    \              <name>HACapabilities</name>\n               <synopsis>\n                  The
    table of HA capabilities the FE supports\n               </synopsis>\n               <array
    type=\"variable-size\">\n                  <typeRef>FEHACapab</typeRef>\n               </array>\n
    \           </capability>\n         </capabilities>\n         <events baseID=\"61\">\n
    \           <event eventID=\"1\">\n               <name>PrimaryCEDown</name>\n
    \              <synopsis>\n                  The primary CE has changed\n               </synopsis>\n
    \              <eventTarget>\n                  <eventField>LastCEID</eventField>\n
    \              </eventTarget>\n               <eventChanged/>\n               <eventReports>\n
    \                 <eventReport>\n                     <eventField>LastCEID</eventField>\n
    \                 </eventReport>\n               </eventReports>\n            </event>\n
    \           <event eventID=\"2\">\n               <name>PrimaryCEChanged</name>\n
    \              <synopsis>A new primary CE has been selected\n               </synopsis>\n
    \              <eventTarget>\n                  <eventField>CEID</eventField>\n
    \              </eventTarget>\n               <eventChanged/>\n               <eventReports>\n
    \                 <eventReport>\n                     <eventField>CEID</eventField>\n
    \                 </eventReport>\n               </eventReports>\n            </event>\n
    \        </events>\n      </LFBClassDef>\n   </LFBClassDefs>\n"
  - '</LFBLibrary>

    '
  title: Appendix A.  New FEPO Version
- contents:
  - "Authors' Addresses\n   Kentaro Ogawa\n   NTT Corporation\n   3-9-11 Midori-cho\n
    \  Musashino-shi, Tokyo  180-8585\n   Japan\n   EMail: k.ogawa@ntt.com\n   Weiming
    Wang\n   Zhejiang Gongshang University\n   18 Xuezheng Str., Xiasha University
    Town\n   Hangzhou  310018\n   P.R. China\n   Phone: +86 571 28877751\n   EMail:
    wmwang@zjsu.edu.cn\n   Evangelos Haleplidis\n   University of Patras\n   Department
    of Electrical and Computer Engineering\n   Patras  26500\n   Greece\n   EMail:
    ehalep@ece.upatras.gr\n   Jamal Hadi Salim\n   Mojatatu Networks\n   Suite 400,
    303 Moodie Dr.\n   Ottawa, Ontario  K2H 9R4\n   Canada\n   EMail: hadi@mojatatu.com\n"
  title: Authors' Addresses
