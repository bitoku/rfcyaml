- title: __initial_text__
  contents:
  - "                     Definitions of Managed Objects\n                    for\
    \ SMDS Interfaces using SMIv2\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in TCP/IP-based internets.\n   In\
    \ particular, it defines objects for managing objects for SMDS\n   access interfaces.\
    \ This includes the following access protocols:\n             SIP [13]\n     \
    \        SIP/DXI [18] and [20]\n             SIP/FR [19]\n             SIP/ATM\
    \ [24]\n   This memo replaces RFC 1304 [12], and defines a MIB module which is\n\
    \   both compliant to the SNMPv2 SMI and semantically-identical to the\n   existing\
    \ RFC 1304-based definitions.\n   This memo also assumes application of the MIB\
    \ II Interfaces group as\n   defined in [9].\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   4.3.1 The DS1 PLCP Group .................................\
    \   17\n   4.3.2 The DS3 PLCP Group .................................   19\n \
    \  4.4 The SMDS Applications Group ..........................   20\n   4.4.1 The\
    \ IP over SMDS Group .............................   21\n   4.5 The SMDS Carrier\
    \ Selection Group .....................   22\n   4.6 The SIP Error Log Group ..............................\
    \   23\n   4.7 The Data eXchange Interface Group ....................   27\n \
    \  4.8 Conformance Information ..............................   29\n   5. Acknowledgments\
    \ .......................................   32\n   6. References ............................................\
    \   32\n   7. Security Considerations ...............................   34\n \
    \  8. Authors' Addresses ....................................   35\n"
- title: 1.  The SNMPv2 Network Management Framework
  contents:
  - "1.  The SNMPv2 Network Management Framework\n   The SNMPv2 Network Management\
    \ Framework consists of four major\n   components.  They are:\n      o RFC 1442\
    \ [1] which defines the SMI, the mechanisms used for\n        describing and naming\
    \ objects for the purpose of\n        management.\n      o STD 17, RFC 1213 [6]\
    \ defines MIB-II, the core set of managed\n        objects for the Internet suite\
    \ of protocols.  Reference [12]\n        defines the evolution of the Interfaces\
    \ Group of MIB II in\n        terms of extensions and precise applications of\
    \ the objects.\n      o RFC 1445 [4] which defines the administrative and other\n\
    \        architectural aspects of the framework.\n      o RFC 1448 [5] which defines\
    \ the protocol used for network\n        access to managed objects.\n   The Framework\
    \ permits new objects to be defined for the purpose of\n   experimentation and\
    \ evaluation.\n   This specification makes also use of:\n      o RFC 1443 [2]\
    \ which defines textual conventions for the\n        specification of managed\
    \ objects.\n      o RFC 1444 [3] which defines conformance statements for the\n\
    \        specification of managed objects.\n"
- title: 2.  Objects
  contents:
  - "2.  Objects\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB.  Objects in the MIB are\n\
    \   defined using the subset of Abstract Syntax Notation One (ASN.1) [7]\n   defined\
    \ in the SMI.  In particular, each object has a name, a syntax,\n   and an encoding.\
    \  The name is an object identifier, an\n   administratively assigned name, which\
    \ specifies an object type.  The\n   object type together with an object instance\
    \ serves to uniquely\n   identify a specific instantiation of the object.  For\
    \ human\n   convenience, we often use a textual string, termed the OBJECT\n  \
    \ DESCRIPTOR, to also refer to the object type.\n   The syntax of an object type\
    \ defines the abstract data structure\n   corresponding to that object type. \
    \ The ASN.1 language is used for\n   this purpose.  However, the SMI RFC 1442\
    \ purposely restricts the\n   ASN.1 constructs which may be used.  These restrictions\
    \ are\n   explicitly made for simplicity.\n   The encoding of an object type is\
    \ simply how that object type is\n   represented using the object type's syntax.\
    \  Implicitly tied to the\n   notion of an object type's syntax and encoding is\
    \ how the object type\n   is represented when being transmitted on the network.\
    \  The SMI\n   specifies the use of the basic encoding rules of ASN.1 [8], subject\n\
    \   to the additional requirements imposed by the SNMP.\n"
- title: 2.1.  Format of Definitions
  contents:
  - "2.1.  Format of Definitions\n   Section 4 contains contains the specification\
    \ of all object types\n   contained in this MIB module.  The object types are\
    \ defined using the\n   conventions defined in the SMI, as amended by the extensions\n\
    \   specified in the SNMPv2 SMI.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   SMDS is a service that can be provided by numerous interface\n\
    \   protocols as shown in the following figure:\n             +-------------------+\
    \   +-------------------+\n             | SIP Level 3* [13] |   | SIP Level 3*\
    \ [13] |\n             +-------------------+   +-------------------+\n       \
    \      | SIP Level 2* [13] |   | DXI Level 2* [20] |\n             +-------------------+\
    \   +-------------------+\n             | SIP PLCP* [14]    |   |            \
    \       |\n             +-------------------+   | DXI Level 1 [20]  |\n      \
    \       | SIP Level 1 [14]  |   |                   |\n             +-------------------+\
    \   +-------------------+\n                SIP based access        DXI based access\n\
    \             +-------------------+   +-------------------+\n             | SIP\
    \ Level 3* [13] |   | SIP Level 3* [13] |\n             +-------------------+\
    \   +-------------------+\n             | ATM  [21]         |   | Frame Relay\
    \ [19]  |\n             +-------------------+   +-------------------+\n      \
    \       | ATM PLCP [21]     |   |                   |\n             +-------------------+\
    \   | Frame Relay [19]  |\n             | ATM Level 1 [21]  |   |   Level 1  \
    \       |\n             +-------------------+   +-------------------+\n      \
    \          ATM based access        FR based access\n   In the figure below, managed\
    \ objects for the protocol levels marked\n   with a (*) are defined in this memo.\
    \  Additional managed objects that\n   must be used to manage SMDS interfaces\
    \ are defined in other MIB\n   modules as indicated in the figure.\n         \
    \    +-------------------+   +-------------------+\n             | SIP Level 3*\
    \      |   | SIP Level 3*      |\n             +-------------------+   +-------------------+\n\
    \             | SIP Level 2*      |   | DXI Level 2*      |\n             +-------------------+\
    \   +-------------------+\n             | SIP PLCP*         |   |            \
    \       |\n             +-------------------+   | DXI Level 1       |\n      \
    \       | SIP Level 1       |   |                   |\n             |    [10]\
    \ or [11]   |   |    [10]           |\n             +-------------------+   +-------------------+\n\
    \                SIP based access        DXI based access\n             +-------------------+\
    \   +-------------------+\n             | SIP Level 3*      |   | SIP Level 3*\
    \      |\n             +-------------------+   +-------------------+\n       \
    \      | ATM  [22]         |   | Frame Relay [23]  |\n             +-------------------+\
    \   +-------------------+\n             | ATM PLCP/TC [22]  |   |            \
    \       |\n             +-------------------+   | Frame Relay       |\n      \
    \       | ATM Level 1 [10]  |   |   Level 1         |\n             | [11], or\
    \ [25]     |   |   [10] or [11]    |\n             +-------------------+   +-------------------+\n\
    \                ATM based access        FR based access\n   With the improved\
    \ interpretation of the MIB II interfaces group [9],\n   some objects can be represented\
    \ by ifTable. This means that these\n   objects have been deprecated from the\
    \ MIB module defined in RFC 1304,\n   and ifTable is used instead. No semantical\
    \ changes have been made to\n   these objects. Only the object identifiers and\
    \ object descriptors\n   have been changed to the objects defined in ifTable.\n\
    \   Implementation experience has shown that the objects\n   sipL3UnrecognizedIndividualDAs\
    \ and sipL3UnrecognizedGAs were not\n   supported.\n"
- title: 3.1.  SIP Level 3
  contents:
  - "3.1.  SIP Level 3\n   Objects for SIP Level 3 apply to all methods to access\
    \ SMDS shown in\n   the figures above. With the improved interpretation of the\
    \ MIB II\n   interfaces group, most objects can be represented by ifTable. The\n\
    \   appropriate mapping is defined below.\n   This document does not specify objects\
    \ for the management of\n   subscription or configuration of Subscriber-Network\
    \ Interfaces\n   (SNIs). Those objects are defined in Definitions of Managed Objects\n\
    \   for SMDS Subscription [17]. Bellcore requirements on these objects\n   are\
    \ specified in TR-TSV-001062 [16].\n          ifTable Object     Use for\n   \
    \       ======================================================\n           ifIndex\
    \           Interface index.\n           ifDescr           Interface description.\n\
    \                             For example, SIP Level 3 sublayer\n            \
    \                 of a SNI.\n           ifType            Set to 31.\n       \
    \    ifMtu             Set to 9232.\n           ifSpeed           Peak bandwidth\
    \ in bits per second available\n                             for use as provided\
    \ by the supporting Level\n                             2 protocol. For example,\
    \ 1.17 Mbps when\n                             using SIP based DS1 SNIs, and 1.536\
    \ Mbps\n                             when using DXI-based DS1 DXI-SNI.\n     \
    \      ifPhysAddress     OCTET STRING of Size 8. Value is\n                  \
    \           a 16-digit Binary Coded Decimal\n                             SMDS\
    \ address that is\n                             assigned to this interface.\n\
    \           ifAdminStatus     The desired administrative status of the\n     \
    \                        SMDS interface.\n           ifOperStatus      The current\
    \ operational status of the\n                             SMDS interface.\n  \
    \         ifLastChange      The elapsed time since the last\n                \
    \             re-initialization of the interface.\n                          \
    \   The value of sysUpTime at the time the\n                             interface\
    \ entered its current\n                             operational state. If the\
    \ current\n                             state was entered prior to the last\n\
    \                             re-initialization of the local\n               \
    \              network management subsystem, then\n                          \
    \   this object contains a zero value.\n           ifInOctets        Number of\
    \ received octets at SIP Level 3.\n                             For SIP based\
    \ SNIs, this is the number of\n                             sipL2ReceivedCounts\
    \ multiplied by 44.\n           ifInUcastPkts     The total number of individually\
    \ addressed\n                             SIP Level 3 PDUs received from the remote\n\
    \                             system across the SNI.  The total includes\n   \
    \                          only unerrored SIP Level 3 PDUs.\n                \
    \             [identical to RFC1304:\n                             sipL3ReceivedIndividualDAs]\n\
    \           ifInDiscards      The number of received SIP Level 3 PDUs\n      \
    \                       discarded.  For SMDS interfaces, this\n              \
    \               counter will always be zero.\n           ifInErrors        The\
    \ total number of SIP Level 3 PDUs\n                             received from\
    \ the remote system that were\n                             discovered to have\
    \ errors (including\n                             protocol processing and bit\
    \ errors but\n                             excluding addressing-related errors)\
    \ and\n                             were discarded.  Includes both group\n   \
    \                          addressed SIP Level 3 PDUs and SIP Level\n        \
    \                     3 PDUs containing an individual\n                      \
    \       destination address.\n                             [identical to RFC1304:\
    \ sipL3Errors]\n           ifInUnknownProtos The number of SIP Level 3 PDUs received\n\
    \                             from the remote system with a Source or\n      \
    \                       Destination Address_Type subfields, (the\n           \
    \                  four most significant bits of the 64 bit\n                \
    \             address field), not equal to the value\n                       \
    \      1100 or 1110.  Also, an error is\n                             considered\
    \ to have occurred if the\n                             Address_Type field for\
    \ a Source Address\n                             is equal to 1110 (a group address).\n\
    \                             [identical to RFC1304:\n                       \
    \      sipL3InvalidSMDSAddressTypes]\n           ifOutOctets       Number of received\
    \ octets for transmission\n                             at SIP Level 3. For SIP\
    \ based\n                             SNIs, this is the number\n             \
    \                of sipL2SentCounts multiplied by 44.\n           ifOutUcastPkts\
    \    The number of individually addressed SIP\n                             Level\
    \ 3 PDUs that have been sent by this\n                             system across\
    \ the interface.\n                             [identical to RFC1304:\n      \
    \                       sipL3SentIndividualDAs]\n           ifOutDiscards    \
    \ The number of SIP Level 3 PDUs discarded in\n                             the\
    \ egress direction.  For SMDS interfaces,\n                             this counter\
    \ will always be zero.\n           ifOutErrors       The number of SIP Level 3\
    \ PDUs\n                             discarded in the egress\n               \
    \              direction, because of errors.\n                             For\
    \ SMDS interfaces, this counter will\n                             always be zero.\n\
    \           ifName            The textual name of the interface.\n           \
    \                  If not used, this variable contains\n                     \
    \        a zero-length string.\n           ifInMulticastPkts The total number\
    \ of group addressed SIP\n                             Level 3 PDUs received from\
    \ the remote\n                             system across the interface.  The total\n\
    \                             includes only unerrored SIP Level 3 PDUs.\n    \
    \                         [identical to RFC1304: sipL3ReceivedGAs]\n         \
    \  ifInBroadcastPkts This variable is not applicable for SMDS\n              \
    \               interfaces.  Therefore, this counter is\n                    \
    \         always zero.\n           ifOutMulticastPkts  The number of group addressed\
    \ SIP Level 3\n                               PDUs that have been sent by this\
    \ system\n                               across the interface.\n             \
    \                  [identical to RFC1304: sipL3SentGAs]\n           ifOutBroadcastPkts\
    \  This variable is not applicable for SMDS\n                               interfaces.\
    \  Therefore, this counter is\n                               always zero.\n \
    \          ifLinkUpDownTrapEnble The value of this object is\n               \
    \                  disabled(2) for SIP Level 3 interfaces.\n           ifHighSpeed\
    \         Set to the user data rate of the\n                               interface\
    \ in millions of bits per second.\n                               If the user\
    \ data rate is less than 1 Mbps,\n                               then this value\
    \ is zero.\n           ifPromiscuousMode   Set to false(2).\n           ifConnectorPresent\
    \  Set to false(2).\n   Consult the Evolution of the Interfaces Group [9] for\
    \ when to use the\n   HC (High Capacity) counters (e.g., ifHCInOctets is a 64-bit\
    \ counter).\n"
- title: 4.  Object Definitions
  contents:
  - "4.  Object Definitions\n          SIP-MIB DEFINITIONS ::= BEGIN\n          IMPORTS\n\
    \             MODULE-IDENTITY, OBJECT-TYPE, Counter32,\n             Integer32,\
    \ IpAddress                     FROM SNMPv2-SMI\n             TimeStamp, TEXTUAL-CONVENTION\
    \            FROM SNMPv2-TC\n             MODULE-COMPLIANCE, OBJECT-GROUP    \
    \      FROM SNMPv2-CONF\n             transmission, ifIndex, mib-2           \
    \  FROM RFC1213-MIB;\n          --  This is the MIB module for the SMDS Interface\
    \ objects.\n          sipMIB MODULE-IDENTITY\n              LAST-UPDATED \"9403311818Z\"\
    \n              ORGANIZATION \"IETF Interfaces Working Group\"\n             \
    \ CONTACT-INFO\n                \"        Tracy Brown\n                 Postal:\
    \ Bell Communications Research\n                         331 Newman Springs Road\n\
    \                         P.O. Box 7020\n                         Red Bank, NJ\
    \  07701-7020\n                         US\n                    Tel: +1 908  758-2107\n\
    \                    Fax: +1 908  758-4177\n                 E-mail: tacox@mail.bellcore.com\n\
    \                         Kaj Tesink\n                 Postal: Bell Communications\
    \ Research\n                         331 Newman Springs Road\n               \
    \          P.O. Box 7020\n                         Red Bank, NJ  07701-7020\n\
    \                         US\n                    Tel: +1 908 758 5254\n     \
    \               Fax: +1 908 758 4177\n                 E-mail: kaj@cc.bellcore.com.\"\
    \n              DESCRIPTION\n                   \"The MIB module to describe\n\
    \                   SMDS interfaces objects.\"\n              ::= { mib-2 36 }\n\
    \          SMDSAddress ::= TEXTUAL-CONVENTION\n              DISPLAY-HINT \"1h:\"\
    \n              STATUS       current\n              DESCRIPTION\n            \
    \      \"The 60-bit SMDS address,\n                   preceded by 4 bits with\
    \ the following values:\n                   1100 when representing an individual\
    \ address\n                   1110 when representing a group address.\"\n    \
    \          SYNTAX  OCTET STRING (SIZE (8))\n          IfIndex ::= TEXTUAL-CONVENTION\n\
    \            STATUS  current\n            DESCRIPTION\n              \"The value\
    \ of this object identifies the\n              interface for which this entry\
    \ contains\n              management information.  The value of this\n       \
    \       object for a particular interface has the same\n              value as\
    \ the ifIndex object, defined in RFC\n              1213, for the same interface.\"\
    \n            SYNTAX Integer32\n          sip     OBJECT IDENTIFIER ::= { transmission\
    \ 31 }\n          sipMIBObjects   OBJECT IDENTIFIER ::= { sipMIB 1 }\n       \
    \   -- The SIP Level 3 Group\n          sipL3Table  OBJECT-TYPE\n            \
    \  SYNTAX      SEQUENCE OF SipL3Entry\n              MAX-ACCESS  not-accessible\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \   \"This table contains SIP L3 parameters and\n                 state variables,\
    \ one entry per SIPL3 interface.\"\n             ::= { sip 1 }\n          sipL3Entry\
    \  OBJECT-TYPE\n              SYNTAX      SipL3Entry\n              MAX-ACCESS\
    \  not-accessible\n              STATUS      current\n              DESCRIPTION\n\
    \                 \"This list contains SIP L3 parameters and\n               \
    \  state variables.\"\n             INDEX   { sipL3Index }\n             ::= {\
    \ sipL3Table 1 }\n          SipL3Entry  ::= SEQUENCE {\n              sipL3Index\
    \                        IfIndex,\n              sipL3ReceivedIndividualDAs  \
    \      Counter32,\n              sipL3ReceivedGAs                  Counter32,\n\
    \              sipL3UnrecognizedIndividualDAs    Counter32,\n              sipL3UnrecognizedGAs\
    \              Counter32,\n              sipL3SentIndividualDAs            Counter32,\n\
    \              sipL3SentGAs                      Counter32,\n              sipL3Errors\
    \                       Counter32,\n              sipL3InvalidSMDSAddressTypes\
    \      Counter32,\n              sipL3VersionSupport               Integer32\n\
    \             }\n          sipL3Index  OBJECT-TYPE\n              SYNTAX     \
    \ IfIndex\n              MAX-ACCESS  read-only\n              STATUS      current\n\
    \              DESCRIPTION\n                 \"The value of this object identifies\
    \ the SIP\n                 L3 interface for which this entry contains\n     \
    \            management information. \"\n             ::= { sipL3Entry 1 }\n \
    \         sipL3ReceivedIndividualDAs OBJECT-TYPE\n              SYNTAX      Counter32\n\
    \              MAX-ACCESS  read-only\n              STATUS      deprecated\n \
    \         -- Moved to ifTable\n          -- ifInUcastPkts defined in [9] must\
    \ be used instead.\n              DESCRIPTION\n                 \"The total number\
    \ of individually addressed SIP\n                 Level 3 PDUs received from the\
    \ remote system\n                 across the SNI.  The total includes only\n \
    \                unerrored L3PDUs.\"\n             ::= { sipL3Entry 2 }\n    \
    \      sipL3ReceivedGAs OBJECT-TYPE\n              SYNTAX      Counter32\n   \
    \           MAX-ACCESS  read-only\n              STATUS      deprecated\n    \
    \      -- Moved to ifTable\n          -- ifInMulticastPkts defined in [9] must\
    \ be used instead.\n              DESCRIPTION\n                 \"The total number\
    \ of group addressed SIP Level 3\n                 PDUs received from the remote\
    \ system across the\n                 SNI.  The total includes only unerrored\
    \ L3PDUs.\"\n             ::= { sipL3Entry 3 }\n          sipL3UnrecognizedIndividualDAs\
    \ OBJECT-TYPE\n              SYNTAX      Counter32\n              MAX-ACCESS \
    \ read-only\n              STATUS      deprecated\n              DESCRIPTION\n\
    \                 \"The number of SIP Level 3 PDUs received from the\n       \
    \          remote system with invalid or unknown individual\n                \
    \ destination addresses (Destination Address\n                 Screening violations\
    \ are not included).  See SMDS\n                 Subscription MIB module.\"\n\
    \              ::= { sipL3Entry 4 }\n          sipL3UnrecognizedGAs OBJECT-TYPE\n\
    \              SYNTAX      Counter32\n              MAX-ACCESS  read-only\n  \
    \            STATUS      deprecated\n              DESCRIPTION\n             \
    \    \"The number of SIP Level 3 PDUs received from the\n                 remote\
    \ system with invalid or unknown group\n                 addresses.  (Destination\
    \ Address Screening\n                 violations are not included).  See SMDS\n\
    \                 Subscription MIB module.\"\n              ::= { sipL3Entry 5\
    \ }\n          sipL3SentIndividualDAs OBJECT-TYPE\n              SYNTAX      Counter32\n\
    \              MAX-ACCESS  read-only\n              STATUS      deprecated\n \
    \         -- Moved to ifTable\n          -- ifOutUcastPkts defined in [9] must\
    \ be used instead.\n              DESCRIPTION\n                 \"The number of\
    \ individually addressed SIP Level 3\n                 PDUs that have been sent\
    \ by this system across the\n                 SNI.\"\n              ::= { sipL3Entry\
    \ 6 }\n          sipL3SentGAs OBJECT-TYPE\n              SYNTAX      Counter32\n\
    \              MAX-ACCESS  read-only\n              STATUS      deprecated\n \
    \         -- Moved to ifTable\n          -- ifOutMulticastPkts defined in [9]\
    \ must be used instead.\n              DESCRIPTION\n                 \"The number\
    \ of group addressed SIP L3PDUs that\n                 have been sent by this\
    \ system across the SNI.\"\n              ::= { sipL3Entry 7 }\n          -- The\
    \ total number of SIP L3PDU errors can be calculated as\n          -- (Syntactic\
    \ errors + Semantic Service errors )\n          -- Syntactic errors include:\n\
    \          --    sipL3Errors\n          -- Latest occurrences of syntactic error\
    \ types are logged in\n          --    sipL3PDUErrorTable.\n          -- Semantic\
    \ Service errors include:\n          --    sipL3UnrecognizedIndividualDAs\n  \
    \        --    sipL3UnrecognizedGAs\n          --    sipL3InvalidSMDSAddressTypes\n\
    \          -- Note that public networks supporting SMDS may discard\n        \
    \  -- SIP L3PDUs due to subscription violations.  Related\n          -- managed\
    \ objects are defined in Definitions of Managed\n          -- Objects for SMDS\
    \ Subscription.\n          sipL3Errors OBJECT-TYPE\n              SYNTAX     \
    \ Counter32\n              MAX-ACCESS  read-only\n              STATUS      deprecated\n\
    \          -- Moved to ifTable\n          -- ifInErrors defined in [9] must be\
    \ used instead.\n              DESCRIPTION\n                 \"The total number\
    \ of SIP Level 3 PDUs received\n                 from the remote system that were\
    \ discovered to\n                 have errors (including protocol processing and\
    \ bit\n                 errors but excluding addressing-related errors)\n    \
    \             and were discarded.  Includes both group addressed\n           \
    \      L3PDUs and L3PDUs containing an individual\n                 destination\
    \ address.\"\n              ::= { sipL3Entry 8 }\n          sipL3InvalidSMDSAddressTypes\
    \ OBJECT-TYPE\n              SYNTAX      Counter32\n              MAX-ACCESS \
    \ read-only\n              STATUS      deprecated\n          -- Moved to ifTable\n\
    \          -- ifInUnknownProtos defined in [9] must be used instead.\n       \
    \       DESCRIPTION\n                 \"The number of SIP Level 3 PDUs received\
    \ from the\n                 remote system that had the Source or Destination\n\
    \                 Address_Type subfields, (the four most significant\n       \
    \          bits of the 64 bit address field), not equal to\n                 the\
    \ value 1100 or 1110.  Also, an error is\n                 considered to have\
    \ occurred if the Address_Type\n                 field for a Source Address, the\
    \ four most\n                 significant bits of the 64 bits, is equal to 1110\n\
    \                 (a group address).\"\n              ::= { sipL3Entry 9 }\n \
    \         sipL3VersionSupport  OBJECT-TYPE\n              SYNTAX      Integer32\n\
    \              MAX-ACCESS  read-only\n              STATUS      current\n    \
    \          DESCRIPTION\n                 \"A value which indicates the version(s)\
    \ of SIP\n                 that this interface supports.  The value is a sum.\n\
    \                 This sum initially takes the value zero.  For each\n       \
    \          version, V, that this interface supports, 2 raised\n              \
    \   to (V - 1) is added to the sum. For example, a\n                 port supporting\
    \ versions 1 and 2 would have a\n                 value of (2^(1-1)+2^(2-1))=3.\
    \  The\n                 sipL3VersionSupport is effectively a bit mask with\n\
    \                 Version 1 equal to the least significant bit\n             \
    \    (LSB).\"\n              ::= { sipL3Entry 10 }\n          -- The SIP Level\
    \ 2 Group\n          sipL2Table  OBJECT-TYPE\n              SYNTAX      SEQUENCE\
    \ OF SipL2Entry\n              MAX-ACCESS  not-accessible\n              STATUS\
    \      current\n              DESCRIPTION\n                 \"This table contains\
    \ SIP L2PDU parameters and\n                 state variables, one entry per SIP\
    \ L2 interface.\"\n              ::= { sip 2 }\n          sipL2Entry  OBJECT-TYPE\n\
    \              SYNTAX      SipL2Entry\n              MAX-ACCESS  not-accessible\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \   \"This list contains SIP L2 parameters and state\n                 variables.\"\
    \n              INDEX   { sipL2Index }\n              ::= { sipL2Table 1 }\n \
    \         SipL2Entry  ::= SEQUENCE {\n              sipL2Index               \
    \      IfIndex,\n              sipL2ReceivedCounts            Counter32,\n   \
    \           sipL2SentCounts                Counter32,\n              sipL2HcsOrCRCErrors\
    \            Counter32,\n              sipL2PayloadLengthErrors       Counter32,\n\
    \              sipL2SequenceNumberErrors      Counter32,\n              sipL2MidCurrentlyActiveErrors\
    \  Counter32,\n              sipL2BomOrSSMsMIDErrors        Counter32,\n     \
    \         sipL2EomsMIDErrors             Counter32\n            }\n          sipL2Index\
    \  OBJECT-TYPE\n              SYNTAX      IfIndex\n              MAX-ACCESS  read-only\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \   \"The value of this object identifies the SIP\n                 interface\
    \ for which this entry contains management\n                 information.\"\n\
    \              ::= { sipL2Entry 1 }\n          sipL2ReceivedCounts OBJECT-TYPE\n\
    \              SYNTAX      Counter32\n              MAX-ACCESS  read-only\n  \
    \            STATUS      current\n              DESCRIPTION\n                \
    \ \"The number of SIP Level 2 PDUs received from the\n                 remote\
    \ system across the SNI. The total includes\n                 only unerrored L2PDUs.\"\
    \n              ::= { sipL2Entry 2 }\n          sipL2SentCounts OBJECT-TYPE\n\
    \              SYNTAX      Counter32\n              MAX-ACCESS  read-only\n  \
    \            STATUS      current\n              DESCRIPTION\n                \
    \ \"The number of SIP Level 2 PDUs that have been\n                 sent by this\
    \ system across the SNI.\"\n              ::= { sipL2Entry 3 }\n          -- The\
    \ following error types are counted, and\n          -- preclude sipL2ReceivedCounts\
    \ to be incremented:\n          --    sipL2HcsOrCRCErrors\n          --    sipL2PayloadLengthErrors\n\
    \          --    sipL2SequenceNumberErrors\n          --    sipL2BomOrSSMsMIDErrors\n\
    \          --    sipL2EomsMIDErrors\n          -- The receipt of SIP Level 2 PDUs\
    \ which are BOMs and\n          -- for with a MID that is already active will\
    \ cause\n          -- sipL2MidCurrentlyActiveErrors to increment.\n          --\
    \ Any already accumulated (correct) segmentation\n          -- units are discarded.The\
    \ sipL2ReceivedCounts\n          -- is incremented by 1. Thus,\n          -- sipL2ReceivedCounts\
    \ defines the number of\n          -- correct SIP Level 2 PDUs delivered to the\
    \ reassembly\n          -- process.\n          sipL2HcsOrCRCErrors  OBJECT-TYPE\n\
    \              SYNTAX      Counter32\n              MAX-ACCESS  read-only\n  \
    \            STATUS      current\n              DESCRIPTION\n                \
    \ \"The number of received SIP Level 2 PDUs that were\n                 discovered\
    \ to have either a Header Check Sequence\n                 error or a Payload\
    \ CRC violation.\"\n              ::= { sipL2Entry 4 }\n          sipL2PayloadLengthErrors\
    \  OBJECT-TYPE\n              SYNTAX      Counter32\n              MAX-ACCESS\
    \  read-only\n              STATUS      current\n              DESCRIPTION\n \
    \                \"The number of received SIP Level 2 PDUs that had\n        \
    \         Payload Length errors that fall in the following\n                 specifications:\n\
    \                 - SSM L2_PDU payload length field value less\n             \
    \    - than 28 octets or greater than 44 octets,\n                 - BOM or COM\
    \ L2_PDU payload length field not\n                 - equal to 44 octets,\n  \
    \               - EOM L2_PDU payload length field value less\n               \
    \  - than 4 octets or greater than 44 octets.\"\n              ::= { sipL2Entry\
    \ 5 }\n          sipL2SequenceNumberErrors  OBJECT-TYPE\n              SYNTAX\
    \      Counter32\n              MAX-ACCESS  read-only\n              STATUS  \
    \    current\n              DESCRIPTION\n                 \"The number of received\
    \ SIP Level 2 PDUs that had\n                 a sequence number within the L2PDU\
    \ not equal to\n                 the expected sequence number of the SMDS SS\n\
    \                 receive process.\"\n              ::= { sipL2Entry 6 }\n   \
    \       sipL2MidCurrentlyActiveErrors  OBJECT-TYPE\n              SYNTAX     \
    \ Counter32\n              MAX-ACCESS  read-only\n              STATUS      current\n\
    \              DESCRIPTION\n                 \"The number of received SIP Level\
    \ 2 PDUs that are\n                 BOMs for which an active receive process is\n\
    \                 already started.\"\n              ::= { sipL2Entry 7 }\n   \
    \       sipL2BomOrSSMsMIDErrors  OBJECT-TYPE\n              SYNTAX      Counter32\n\
    \              MAX-ACCESS  read-only\n              STATUS      current\n    \
    \          DESCRIPTION\n                 \"The number of received SIP Level 2\
    \ PDUs that are\n                 SSMs with a MID not equal to zero or are BOMs\
    \ with\n                 MIDs equal to zero.\"\n              ::= { sipL2Entry\
    \ 8 }\n          sipL2EomsMIDErrors  OBJECT-TYPE\n              SYNTAX      Counter32\n\
    \              MAX-ACCESS  read-only\n              STATUS      current\n    \
    \          DESCRIPTION\n                 \"The number of received SIP Level 2\
    \ PDUs that are\n                 EOMs for which there is no active receive process\n\
    \                 for the MID (i.e., the receipt of an EOM which\n           \
    \      does not correspond to a BOM) OR the EOM has a MID\n                 equal\
    \ to zero.\"\n              ::= { sipL2Entry 9 }\n          -- The SIP PLCP Group\n\
    \          sipPLCP OBJECT IDENTIFIER ::= { sip 3 }\n          -- The DS1 PLCP\
    \ Group\n          sipDS1PLCPTable  OBJECT-TYPE\n              SYNTAX      SEQUENCE\
    \ OF SipDS1PLCPEntry\n              MAX-ACCESS  not-accessible\n             \
    \ STATUS      current\n              DESCRIPTION\n                 \"This table\
    \ contains SIP DS1 PLCP parameters and\n                 state variables, one\
    \ entry per SIP port.\"\n              ::= { sipPLCP 1 }\n          sipDS1PLCPEntry\
    \  OBJECT-TYPE\n              SYNTAX      SipDS1PLCPEntry\n              MAX-ACCESS\
    \  not-accessible\n              STATUS      current\n              DESCRIPTION\n\
    \                 \"This list contains SIP DS1 PLCP parameters and\n         \
    \        state variables.\"\n              INDEX   { sipDS1PLCPIndex }\n     \
    \         ::= { sipDS1PLCPTable 1 }\n          SipDS1PLCPEntry  ::= SEQUENCE {\n\
    \              sipDS1PLCPIndex       IfIndex,\n              sipDS1PLCPSEFSs \
    \      Counter32,\n              sipDS1PLCPAlarmState  INTEGER,\n            \
    \  sipDS1PLCPUASs        Counter32\n              }\n          sipDS1PLCPIndex\
    \  OBJECT-TYPE\n              SYNTAX      IfIndex\n              MAX-ACCESS  read-only\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \   \"The value of this object identifies the\n                 interface for\
    \ which this entry contains management\n                 information. \"\n   \
    \           ::= { sipDS1PLCPEntry 1 }\n          sipDS1PLCPSEFSs OBJECT-TYPE\n\
    \              SYNTAX       Counter32\n              MAX-ACCESS   read-only\n\
    \              STATUS       current\n              DESCRIPTION\n             \
    \    \"A DS1 Severely Errored Framing Second (SEFS) is a\n                 count\
    \ of one-second intervals containing one or\n                 more SEF events.\
    \  A Severely Errored Framing (SEF)\n                 event is declared when an\
    \ error in the A1 octet\n                 and an error in the A2 octet of a framing\
    \ octet\n                 pair (i.e., errors in both framing octets), or two\n\
    \                 consecutive invalid and/or nonsequential Path\n            \
    \     Overhead Identifier octets are detected.\"\n              ::= { sipDS1PLCPEntry\
    \ 2 }\n          sipDS1PLCPAlarmState OBJECT-TYPE\n              SYNTAX  INTEGER\
    \     {\n                          noAlarm (1),\n                          receivedFarEndAlarm\
    \ (2),\n                          incomingLOF (3)\n                      }\n \
    \             MAX-ACCESS  read-only\n              STATUS      current\n     \
    \         DESCRIPTION\n                 \"This variable indicates if there is\
    \ an alarm\n                 present for the DS1 PLCP.  The value\n          \
    \       receivedFarEndAlarm means that the DS1 PLCP has\n                 received\
    \ an incoming Yellow Signal, the value\n                 incomingLOF means that\
    \ the DS1 PLCP has declared a\n                 loss of frame (LOF) failure condition,\
    \ and the\n                 value noAlarm means that there are no alarms\n   \
    \              present.  See TR-TSV-000773 for a description of\n            \
    \     alarm states.\"\n              ::= { sipDS1PLCPEntry 3 }\n          sipDS1PLCPUASs\
    \ OBJECT-TYPE\n              SYNTAX      Counter32\n              MAX-ACCESS \
    \ read-only\n              STATUS      current\n              DESCRIPTION\n  \
    \               \"The counter associated with the number of\n                \
    \ Unavailable Seconds, as defined by TR-TSV-000773,\n                 encountered\
    \ by the PLCP.\"\n              ::= { sipDS1PLCPEntry 4 }\n          -- The DS3\
    \ PLCP Group\n          sipDS3PLCPTable  OBJECT-TYPE\n              SYNTAX   \
    \   SEQUENCE OF SipDS3PLCPEntry\n              MAX-ACCESS  not-accessible\n  \
    \            STATUS      current\n              DESCRIPTION\n                \
    \ \"This table contains SIP DS3 PLCP parameters and\n                 state variables,\
    \ one entry per SIP port.\"\n              ::= { sipPLCP 2 }\n          sipDS3PLCPEntry\
    \  OBJECT-TYPE\n              SYNTAX      SipDS3PLCPEntry\n              MAX-ACCESS\
    \  not-accessible\n              STATUS      current\n              DESCRIPTION\n\
    \                 \"This list contains SIP DS3 PLCP parameters and\n         \
    \        state variables.\"\n              INDEX   { sipDS3PLCPIndex }\n     \
    \         ::= { sipDS3PLCPTable 1 }\n          SipDS3PLCPEntry  ::= SEQUENCE {\n\
    \              sipDS3PLCPIndex       IfIndex,\n              sipDS3PLCPSEFSs \
    \      Counter32,\n              sipDS3PLCPAlarmState  INTEGER,\n            \
    \  sipDS3PLCPUASs        Counter32\n              }\n          sipDS3PLCPIndex\
    \  OBJECT-TYPE\n              SYNTAX      IfIndex\n              MAX-ACCESS  read-only\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \   \"The value of this object identifies the\n                 interface for\
    \ which this entry contains management\n                 information.  \"\n  \
    \            ::= { sipDS3PLCPEntry 1 }\n          sipDS3PLCPSEFSs OBJECT-TYPE\n\
    \              SYNTAX      Counter32\n              MAX-ACCESS  read-only\n  \
    \            STATUS      current\n              DESCRIPTION\n                \
    \ \"A DS3 Severely Errored Framing Second (SEFS) is a\n                 count\
    \ of one-second intervals containing one or\n                 more SEF events.\
    \  A Severely Errored Framing (SEF)\n                 event is declared when an\
    \ error in the A1 octet\n                 and an error in the A2 octet of a framing\
    \ octet\n                 pair (i.e., errors in both framing octets), or two\n\
    \                 consecutive invalid and/or nonsequential Path\n            \
    \     Overhead Identifier octets are detected.\"\n              ::= { sipDS3PLCPEntry\
    \ 2 }\n          sipDS3PLCPAlarmState OBJECT-TYPE\n              SYNTAX  INTEGER\
    \     {\n                          noAlarm (1),\n                          receivedFarEndAlarm\
    \ (2),\n                          incomingLOF (3)\n                      }\n \
    \             MAX-ACCESS  read-only\n              STATUS      current\n     \
    \         DESCRIPTION\n                 \"This variable indicates if there is\
    \ an alarm\n                 present for the DS3 PLCP.  The value\n          \
    \       receivedFarEndAlarm means that the DS3 PLCP has\n                 received\
    \ an incoming Yellow Signal, the value\n                 incomingLOF means that\
    \ the DS3 PLCP has declared a\n                 loss of frame (LOF) failure condition,\
    \ and the\n                 value noAlarm means that there are no alarms\n   \
    \              present.  See TR-TSV-000773 for a description of\n            \
    \     alarm states.\"\n              ::= { sipDS3PLCPEntry 3 }\n          sipDS3PLCPUASs\
    \ OBJECT-TYPE\n              SYNTAX      Counter32\n              MAX-ACCESS \
    \ read-only\n              STATUS      current\n              DESCRIPTION\n  \
    \               \"The counter associated with the number of\n                \
    \ Unavailable Seconds, as defined by TR-TSV-000773,\n                 encountered\
    \ by the PLCP.\"\n              ::= { sipDS3PLCPEntry 4 }\n          -- The SMDS\
    \ Applications group\n          -- Applications that have been identified for\
    \ this group are:\n          --          * IP-over-SMDS (details are specified\
    \ in RFC 1209)\n          smdsApplications OBJECT IDENTIFIER ::= { sip 4 }\n \
    \         ipOverSMDS OBJECT IDENTIFIER ::= { smdsApplications 1 }\n          --\
    \ Although the objects in this group are read-only, at the\n          -- agent's\
    \ discretion they may be made read-write so that the\n          -- management\
    \ station, when appropriately authorized, may\n          -- change the addressing\
    \ information related to the\n          -- configuration of a logical IP subnetwork\
    \ implemented on\n          -- top of SMDS.\n          -- This table is necessary\
    \ to support RFC1209 (IP-over-SMDS)\n          -- and gives information on the\
    \ Group Addresses and ARP\n          -- Addresses used in the Logical IP subnetwork.\n\
    \          -- One SMDS address may be associated with multiple IP\n          --\
    \ addresses.  One SNI may be associated with multiple LISs.\n          ipOverSMDSTable\
    \ OBJECT-TYPE\n              SYNTAX      SEQUENCE OF IpOverSMDSEntry\n       \
    \       MAX-ACCESS  not-accessible\n              STATUS      current\n      \
    \        DESCRIPTION\n                 \"The table of addressing information relevant\
    \ to\n                 this entity's IP addresses.\"\n              ::= { ipOverSMDS\
    \ 1 }\n          ipOverSMDSEntry OBJECT-TYPE\n              SYNTAX      IpOverSMDSEntry\n\
    \              MAX-ACCESS  not-accessible\n              STATUS      current\n\
    \              DESCRIPTION\n                 \"The addressing information for\
    \ one of this\n                 entity's IP addresses.\"\n              INDEX\
    \   { ipOverSMDSIndex, ipOverSMDSAddress }\n              ::= { ipOverSMDSTable\
    \ 1 }\n          IpOverSMDSEntry ::=\n              SEQUENCE {\n             \
    \    ipOverSMDSIndex       IfIndex,\n                 ipOverSMDSAddress     IpAddress,\n\
    \                 ipOverSMDSHA          SMDSAddress,\n                 ipOverSMDSLISGA\
    \       SMDSAddress,\n                 ipOverSMDSARPReq      SMDSAddress\n   \
    \              }\n          ipOverSMDSIndex OBJECT-TYPE\n              SYNTAX\
    \      IfIndex\n              MAX-ACCESS  read-only\n              STATUS    \
    \  current\n              DESCRIPTION\n                 \"The value of this object\
    \ identifies the\n                 interface for which this entry contains management\n\
    \                 information. \"\n              ::= { ipOverSMDSEntry 1 }\n \
    \         ipOverSMDSAddress OBJECT-TYPE\n               SYNTAX      IpAddress\n\
    \               MAX-ACCESS  read-only\n               STATUS      current\n  \
    \             DESCRIPTION\n                 \"The IP address to which this entry's\
    \ addressing\n                 information pertains.\"\n              ::= { ipOverSMDSEntry\
    \ 2 }\n          ipOverSMDSHA OBJECT-TYPE\n              SYNTAX      SMDSAddress\n\
    \              MAX-ACCESS  read-only\n              STATUS      current\n    \
    \          DESCRIPTION\n                 \"The SMDS Individual address of the\
    \ IP station.\"\n              ::= { ipOverSMDSEntry 3 }\n          ipOverSMDSLISGA\
    \ OBJECT-TYPE\n              SYNTAX      SMDSAddress\n              MAX-ACCESS\
    \  read-only\n              STATUS      current\n              DESCRIPTION\n \
    \                \"The SMDS Group Address that has been configured\n         \
    \        to identify the SMDS Subscriber-Network Interfaces\n                \
    \ (SNIs) of all members of the Logical IP Subnetwork\n                 (LIS) connected\
    \ to the network supporting SMDS.\"\n              ::= { ipOverSMDSEntry 4 }\n\
    \          ipOverSMDSARPReq OBJECT-TYPE\n              SYNTAX      SMDSAddress\n\
    \              MAX-ACCESS  read-only\n              STATUS      current\n    \
    \          DESCRIPTION\n                 \"The SMDS address (individual or group)\
    \ to which\n                 ARP Requests are to be sent.\"\n              ::=\
    \ { ipOverSMDSEntry 5 }\n          -- The SMDS Carrier Selection group\n     \
    \     -- This group is used as a place holder\n          -- for carrier selection\
    \ objects.\n          smdsCarrierSelection OBJECT IDENTIFIER ::= { sip 5 }\n \
    \         -- The SIP Error Log\n          sipErrorLog OBJECT IDENTIFIER ::= {\
    \ sip 6 }\n          sipL3PDUErrorTable OBJECT-TYPE\n              SYNTAX    \
    \  SEQUENCE OF SipL3PDUErrorEntry\n              MAX-ACCESS  not-accessible\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \   \"A table that contains the latest occurrence of\n                 the following\
    \ syntactical SIP L3PDU errors:\n                 - Destination Address Field\
    \ Format Error,\n                 The following pertains to the 60 least significant\n\
    \                 bits of the 64 bit address field.  The 60 bits\n           \
    \      contained in the address subfield can be used to\n                 represent\
    \ addresses up to 15 decimal digits.  Each\n                 decimal digit shall\
    \ be encoded into four bits\n                 using Binary Coded Decimal (BCD),\
    \ with the most\n                 significant digit occurring left-most.  If not\
    \ all\n                 15 digits are required, then the remainder of this\n \
    \                field shall be padded on the right with bits set\n          \
    \       to one.  An error is considered to have occurred:\n                 a).\
    \  if the first four bits of the address\n                 subfield are not BCD,\
    \ OR b).  if the first four\n                 bits of the address subfield are\
    \ populated with\n                 the country code value 0001, AND the 40 bits\
    \ which\n                 follow are not Binary Coded Decimal (BCD) encoded\n\
    \                 values of the 10 digit addresses, OR the remaining\n       \
    \          16 least significant bits are not populated with\n                \
    \ 1's, OR c).  if the address subfield is not\n                 correct according\
    \ to another numbering plan which\n                 is dependent upon the carrier\
    \ assigning the\n                 numbers and offering SMDS.\n               \
    \  - Source Address Field Format Error,\n                 The description of this\
    \ parameter is the same as\n                 the description of the Destination\
    \ Address Field\n                 Format Error.\n                 - Invalid BAsize\
    \ Field Value,\n                 An error is considered to have occurred when\
    \ the\n                 BAsize field of an SIP L3PDU contains a value less\n \
    \                that 32, greater than 9220 octets without the\n             \
    \    CRC32 field present, greater than 9224 octets with\n                 the\
    \ CRC32 field present, or not equal to a\n                 multiple of 4 octets,\n\
    \                 - Invalid Header Extension Length Field Value,\n           \
    \      An error is considered to have occurred when the\n                 Header\
    \ Extension Length field value is not equal\n                 3.\n           \
    \      - Invalid Header Extension - Element Length,\n                 An error\
    \ is considered to have occurred when the\n                 Header Extension -\
    \ Element Length is greater than\n                 12.\n                 - Invalid\
    \ Header Extension - Version Element\n                 Position, Length, or Value,\n\
    \                 An error is considered to have occurred when a\n           \
    \      Version element with Length=3, Type=0, and Value=1\n                 does\
    \ not appear first within the Header Extension,\n                 or an element\
    \ Type=0 appears somewhere other than\n                 within the first three\
    \ octets in the Header\n                 Extension.\n                 - Invalid\
    \ Header Extension - Carrier Selection\n                 Element Position, Length,\
    \ Value or Format,\n                 An error is considered to have occurred when\
    \ a\n                 Carrier Selection element does not appear second\n     \
    \            within the Header Extension, if the Element Type\n              \
    \   does not equal 1, the Element Length does not\n                 equal 4, 6,\
    \ or 8, the Element Value field is not\n                 four BCD encoded decimal\
    \ digits used in specifying\n                 the Carrier Identification Code\
    \ (CIC), or the\n                 identified CIC code is invalid.\n          \
    \       - Header Extension PAD Error\n                 An error is considered\
    \ to have occurred when the\n                 Header Extension PAD is 9 octets\
    \ in length, or if\n                 the Header Extension PAD is greater than\
    \ zero\n                 octets in length and the Header Extension PAD does\n\
    \                 not follow all Header Extension elements or does\n         \
    \        not begin with at least one octet of all zeros.\n                 - BEtag\
    \ Mismatch Error,\n                 An error is considered to have occurred when\
    \ the\n                 Beginning-End Tags in the SIP L3PDU header and\n     \
    \            trailer are not equal.\n                 - BAsize Field not equal\
    \ to Length Field Error,\n                 An error is considered to have occurred\
    \ when the\n                 value of the BAsize Field does not equal the value\n\
    \                 of the Length Field.\n                 - Incorrect Length Error,\
    \ and\n                 An error is considered to have occurred when the\n   \
    \              the Length field value is not equal to the portion\n          \
    \       of the SIP L3PDU which extends from the\n                 Destination\
    \ Address field up to and including the\n                 CRC32 field (if present)\
    \ or up to and including\n                 the PAD field (if the CRC32 field is\
    \ not present).\n                 As an optional check, an error is considered\
    \ to\n                 have occurred when the length of a partially\n        \
    \         received SIP L3PDU exceeds the BAsize value.\n                 - MRI\
    \ Timeout Error.\n                 An error is considered to have occurred when\
    \ the\n                 elapsed time between receipt of BOM and\n            \
    \     corresponding EOM exceeds the value of the MRI\n                 (Message\
    \ Receive Interval) for a particular\n                 transport signal format.\n\
    \                 An entry is indexed by interface number and error\n        \
    \         type, and contains Source Address, Destination\n                 Address\
    \ and a timestamp. All these errors are\n                 counted in the sipL3Errors\
    \ counter.  When\n                 sipL3PDUErrorTimeStamp is equal to zero, the\n\
    \                 SipL3PDUErrorEntry does not contain any valid\n            \
    \     information.\"\n              ::= { sipErrorLog 1 }\n          sipL3PDUErrorEntry\
    \  OBJECT-TYPE\n              SYNTAX      SipL3PDUErrorEntry\n              MAX-ACCESS\
    \  not-accessible\n              STATUS      current\n              DESCRIPTION\n\
    \                 \"An entry in the service disagreement table.\"\n          \
    \    INDEX   { sipL3PDUErrorIndex, sipL3PDUErrorType }\n              ::= { sipL3PDUErrorTable\
    \ 1 }\n          SipL3PDUErrorEntry ::= SEQUENCE {\n              sipL3PDUErrorIndex\
    \       IfIndex,\n              sipL3PDUErrorType        INTEGER,\n          \
    \    sipL3PDUErrorSA          SMDSAddress,\n              sipL3PDUErrorDA    \
    \      SMDSAddress,\n              sipL3PDUErrorTimeStamp   TimeStamp\n      \
    \        }\n          sipL3PDUErrorIndex OBJECT-TYPE\n              SYNTAX   \
    \   IfIndex\n              MAX-ACCESS  read-only\n              STATUS      current\n\
    \              DESCRIPTION\n                 \"The value of this object identifies\
    \ the\n                 interface for which this entry contains management\n \
    \                information.\"\n              ::= { sipL3PDUErrorEntry 1 }\n\
    \          sipL3PDUErrorType OBJECT-TYPE\n              SYNTAX  INTEGER {\n  \
    \              erroredDAFieldFormat (1),\n                erroredSAFieldFormat\
    \ (2),\n                invalidBAsizeFieldValue (3),\n                invalidHdrExtLength\
    \ (4),\n                invalidHdrExtElementLength (5),\n                invalidHdrExtVersionElementPositionLenthOrValue\
    \ (6),\n           invalidHdrExtCarSelectElementPositionLenghtValueOrFormat (7),\n\
    \                hePADError (8),\n                beTagMismatch (9),\n       \
    \         baSizeFieldNotEqualToLengthField (10),\n                incorrectLength\
    \ (11),\n                mriTimeout (12)\n              }\n              MAX-ACCESS\
    \  read-only\n              STATUS      current\n              DESCRIPTION\n \
    \                \"The type of error.\"\n              ::= { sipL3PDUErrorEntry\
    \ 2 }\n          sipL3PDUErrorSA OBJECT-TYPE\n              SYNTAX      SMDSAddress\n\
    \              MAX-ACCESS  read-only\n              STATUS      current\n    \
    \          DESCRIPTION\n                 \"A rejected SMDS source address.\"\n\
    \              ::= { sipL3PDUErrorEntry 3 }\n          sipL3PDUErrorDA OBJECT-TYPE\n\
    \              SYNTAX      SMDSAddress\n              MAX-ACCESS  read-only\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \   \"A rejected SMDS destination address.\"\n              ::= { sipL3PDUErrorEntry\
    \ 4 }\n          sipL3PDUErrorTimeStamp OBJECT-TYPE\n              SYNTAX    \
    \  TimeStamp\n              MAX-ACCESS  read-only\n              STATUS      current\n\
    \              DESCRIPTION\n                 \"The timestamp for the service disagreement.\
    \  The\n                 timestamp contains the value of sysUpTime at the\n  \
    \               latest occurrence of this type of service\n                 disagreement.\
    \  See textual description under\n                 sipL3PDUErrorTable for boundary\
    \ conditions.\"\n              ::= { sipL3PDUErrorEntry 5 }\n          -- The\
    \ DXI Group\n          sipDxiTable   OBJECT-TYPE\n             SYNTAX        \
    \  SEQUENCE OF SipDxiEntry\n             MAX-ACCESS      not-accessible\n    \
    \         STATUS          current\n             DESCRIPTION\n                \
    \ \"The DXI table.\"\n             ::= { sipMIBObjects 1 }\n          sipDxiEntry\
    \   OBJECT-TYPE\n             SYNTAX     SipDxiEntry\n             MAX-ACCESS\
    \ not-accessible\n             STATUS     current\n             DESCRIPTION\n\
    \                   \"An entry in the DXI table.\"\n             INDEX { ifIndex\
    \ }\n             ::= { sipDxiTable 1 }\n          SipDxiEntry ::=\n         \
    \    SEQUENCE {\n                sipDxiCrc\n                   INTEGER,\n    \
    \            sipDxiOutDiscards\n                   Counter32,\n              \
    \  sipDxiInErrors\n                   Counter32,\n                sipDxiInAborts\n\
    \                   Counter32,\n                sipDxiInTestFrames\n         \
    \          Counter32,\n                sipDxiOutTestFrames\n                 \
    \  Counter32,\n                sipDxiHbpNoAcks\n                   Counter32\n\
    \             }\n          sipDxiCrc   OBJECT-TYPE\n             SYNTAX  INTEGER\
    \ {\n                        crc16(1),\n                        crc32(2)\n   \
    \                     }\n             MAX-ACCESS read-only\n             STATUS\
    \     current\n             DESCRIPTION\n                   \"The value of this\
    \ object indicates the type\n                   of Frame Checksum used by DXI.\
    \  Current\n                   choices include CCITT CRC16 or CRC32.\"\n     \
    \        ::= { sipDxiEntry 1 }\n          sipDxiOutDiscards   OBJECT-TYPE\n  \
    \           SYNTAX     Counter32\n             MAX-ACCESS read-only\n        \
    \     STATUS     current\n             DESCRIPTION\n              \"The number\
    \ of outbound frames discarded\n              because of congestion.\"\n     \
    \        ::= { sipDxiEntry 2 }\n          sipDxiInErrors   OBJECT-TYPE\n     \
    \        SYNTAX     Counter32\n             MAX-ACCESS read-only\n           \
    \  STATUS     current\n             DESCRIPTION\n                   \"The number\
    \ of inbound frames discarded\n                   because of errors such as frame\
    \ checksum\n                   (CRC) violations,\n                   non-integral\
    \ number of octets, address\n                   and control field violations,\
    \ and frame\n                   size errors.\"\n             ::= { sipDxiEntry\
    \ 3 }\n          sipDxiInAborts  OBJECT-TYPE\n             SYNTAX     Counter32\n\
    \             MAX-ACCESS read-only\n             STATUS     current\n        \
    \     DESCRIPTION\n                   \"The number of inbound frames discarded\n\
    \                   because of an abort bit sequence (1111111)\n             \
    \      received before closing flag.\"\n             ::= { sipDxiEntry 4 }\n \
    \         sipDxiInTestFrames    OBJECT-TYPE\n             SYNTAX     Counter32\n\
    \             MAX-ACCESS read-only\n             STATUS     current\n        \
    \     DESCRIPTION\n                   \"The number of unerrored,\n           \
    \        inbound Test frames received\n                   (generally as part of\
    \ Heart\n                   Beat Poll procedure).\"\n             ::= { sipDxiEntry\
    \ 5 }\n          sipDxiOutTestFrames   OBJECT-TYPE\n             SYNTAX     Counter32\n\
    \             MAX-ACCESS read-only\n             STATUS     current\n        \
    \     DESCRIPTION\n                   \"The number of unerrored,\n           \
    \        outbound Test frames sent\n                  (generally as part of Heart\n\
    \                  Beat Poll procedure).\"\n             ::= { sipDxiEntry 6 }\n\
    \          sipDxiHbpNoAcks  OBJECT-TYPE\n             SYNTAX     Counter32\n \
    \            MAX-ACCESS read-only\n             STATUS     current\n         \
    \    DESCRIPTION\n                   \"The number of Heart Beat\n            \
    \       Poll (HBP) No Ack timeouts.\"\n             ::= { sipDxiEntry 7 }\n  \
    \        -- conformance information\n          smdsConformance OBJECT IDENTIFIER\
    \ ::= { sipMIB 2 }\n          smdsGroups      OBJECT IDENTIFIER ::= { smdsConformance\
    \ 1 }\n          smdsCompliances OBJECT IDENTIFIER ::= { smdsConformance 2 }\n\
    \          -- compliance statements\n          smdsCompliance MODULE-COMPLIANCE\n\
    \              STATUS  current\n              DESCRIPTION\n                 \"\
    The compliance statement for SMDS interfaces.\"\n              MODULE  -- this\
    \ module\n                  MANDATORY-GROUPS { sipLevel3Stuff }\n            \
    \      GROUP       sipLevel2Stuff\n                  DESCRIPTION\n           \
    \           \"This group is mandatory only for those\n                      interfaces\
    \ (SNIs) which run SIP Level 2.\"\n                  GROUP       sipDS1PLCPStuff\n\
    \                  DESCRIPTION\n                      \"This group is mandatory\
    \ only for those\n                      interfaces (SNIs) which run the DS1 PLCP.\"\
    \n                  GROUP       sipDS3PLCPStuff\n                  DESCRIPTION\n\
    \                      \"This group is mandatory only for those\n            \
    \          interfaces (SNIs) which run the DS3 PLCP.\"\n                  GROUP\
    \       sipIPApplicationsStuff\n                  DESCRIPTION\n              \
    \        \"This group is mandatory only for interfaces\n                     \
    \  operating IP over SMDS in accordance with\n                       RFC1209.\"\
    \n                  GROUP       sipDxiStuff\n                  DESCRIPTION\n \
    \                     \"This group is mandatory only for those interfaces\n  \
    \                    (DXI-SNI)\n                      which run the DXI protocol.\"\
    \n              ::= { smdsCompliances 1 }\n          -- units of conformance\n\
    \          sipLevel3Stuff    OBJECT-GROUP\n              OBJECTS { sipL3Index,\n\
    \                        sipL3VersionSupport, sipL3PDUErrorIndex,\n          \
    \              sipL3PDUErrorType,\n                        sipL3PDUErrorSA, sipL3PDUErrorDA,\n\
    \                        sipL3PDUErrorTimeStamp }\n              STATUS  current\n\
    \              DESCRIPTION\n                      \"A collection of objects providing\
    \ information\n                      applicable to all SMDS interfaces.\"\n  \
    \            ::= { smdsGroups 1 }\n          sipLevel2Stuff    OBJECT-GROUP\n\
    \              OBJECTS { sipL2Index, sipL2HcsOrCRCErrors,\n                  \
    \      sipL2PayloadLengthErrors,\n                        sipL2SequenceNumberErrors,\n\
    \                        sipL2MidCurrentlyActiveErrors,\n                    \
    \    sipL2BomOrSSMsMIDErrors,\n                        sipL2EomsMIDErrors }\n\
    \              STATUS  current\n              DESCRIPTION\n                  \
    \    \"A collection of objects providing information\n                      specific\
    \ to interfaces using the SIP Level 2.\"\n              ::= { smdsGroups 2 }\n\
    \          sipDS1PLCPStuff    OBJECT-GROUP\n              OBJECTS { sipDS1PLCPIndex,\
    \ sipDS1PLCPSEFSs,\n                        sipDS1PLCPAlarmState, sipDS1PLCPUASs\
    \ }\n              STATUS  current\n              DESCRIPTION\n              \
    \        \"A collection of objects providing information\n                   \
    \   specific to interfaces using the DS1 PLCP.\"\n              ::= { smdsGroups\
    \ 3 }\n          sipDS3PLCPStuff    OBJECT-GROUP\n              OBJECTS { sipDS3PLCPIndex,\
    \ sipDS3PLCPSEFSs,\n                        sipDS3PLCPAlarmState, sipDS3PLCPUASs\
    \ }\n              STATUS  current\n              DESCRIPTION\n              \
    \        \"A collection of objects providing information\n                   \
    \   specific to interfaces using the DS3 PLCP.\"\n              ::= { smdsGroups\
    \ 4 }\n          sipIPApplicationsStuff    OBJECT-GROUP\n              OBJECTS\
    \ { ipOverSMDSIndex, ipOverSMDSAddress,\n                        ipOverSMDSHA,\
    \ ipOverSMDSLISGA, ipOverSMDSARPReq }\n              STATUS  current\n       \
    \       DESCRIPTION\n                      \"A collection of objects providing\
    \ information\n                      for running IP over SMDS.\"\n           \
    \   ::= { smdsGroups 5 }\n          sipDxiStuff     OBJECT-GROUP\n           \
    \   OBJECTS  { sipDxiCrc, sipDxiOutDiscards,\n                         sipDxiInErrors,\
    \ sipDxiInAborts,\n                         sipDxiInTestFrames, sipDxiOutTestFrames,\n\
    \                         sipDxiHbpNoAcks }\n              STATUS   current\n\
    \              DESCRIPTION\n                      \"A collection of objects providing\
    \ information\n                      specific to interfaces using the DXI protocol.\"\
    \n              ::= { smdsGroups 6 }\n          END\n"
- title: 5.  Acknowledgments
  contents:
  - "5.  Acknowledgments\n   This specification is a product of the ifMIB Working\
    \ Group.\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,\
    \ \"Structure\n       of Management Information for version 2 of the Simple Network\n\
    \       Management Protocol (SNMPv2)\", RFC 1442, SNMP Research, Inc.,\n     \
    \  Hughes LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,\
    \ April 1993.\n   [2] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, \"\
    Textual\n       Conventions for version 2 of the the Simple Network Management\n\
    \       Protocol (SNMPv2)\", RFC 1443, SNMP Research, Inc., Hughes LAN\n     \
    \  Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,\
    \ April 1993.\n   [3] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,\n\
    \       \"Conformance Statements for version 2 of the the Simple Network\n   \
    \    Management Protocol (SNMPv2)\", RFC 1444, SNMP Research, Inc.,\n       Hughes\
    \ LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,\
    \ April 1993.\n   [4] Galvin, J., and K. McCloghrie, \"Administrative Model for\
    \ version\n       2 of the Simple Network Management Protocol (SNMPv2)\", RFC\
    \ 1445,\n       Trusted Information Systems, Hughes LAN Systems, April 1993.\n\
    \   [5] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, \"Protocol\n  \
    \     Operations for version 2 of the Simple Network Management\n       Protocol\
    \ (SNMPv2)\", RFC 1448, SNMP Research, Inc., Hughes LAN\n       Systems, Dover\
    \ Beach Consulting, Inc., Carnegie Mellon\n       University, April 1993.\n  \
    \ [6] McCloghrie, K., and M. Rose, Editors, \"Management Information\n       Base\
    \ for Network Management of TCP/IP-based internets: MIB-II\",\n       STD 17,\
    \ RFC 1213, Hughes LAN Systems, Inc., Performance Systems\n       International,\
    \ March 1991.\n   [7] Information processing systems - Open Systems Interconnection\
    \ -\n       Specification of Abstract Syntax Notation One (ASN.1),\n       International\
    \ Organization for Standardization.  International\n       Standard 8824, December\
    \ 1987.\n   [8] Information processing systems - Open Systems Interconnection\
    \ -\n       Specification of Basic Encoding Rules for Abstract Notation One\n\
    \       (ASN.1), International Organization for Standardization.\n       International\
    \ Standard 8825, December 1987.\n   [9] McCloghrie, K., and F. Kastenholz, \"\
    Evolution of Interfaces Group\n       of MIB-II\", RFC 1573, Hughes LAN Systems,\
    \ FTP Software, January\n       1994.\n  [10] Cox, T., and K. Tesink, Editors,\
    \ \"Definitions of Managed Objects\n       for the DS3/E3 Interface Type\", RFC\
    \ 1407, Bellcore, January 1993.\n  [11] Baker, F., and J. Watt, Editors, \"Definitions\
    \ of Managed Objects\n       for the DS1/E1 Interface Type\", RFC 1406, Advanced\
    \ Computer\n       Communications, Newbridge Networks Corporation, January 1993.\n\
    \  [12] Cox, T., and K. Tesink, Editors, \"Definition of Managed Objects\n   \
    \    for the SMDS Interface Type\", RFC 1304, Bellcore, February 1992.\n  [13]\
    \ \"Generic System Requirements in Support of Switched Multi-megabit\n       Data\
    \ Service\", Bellcore Technical Reference, TR-TSV-000772, Issue\n       1, May\
    \ 1991.\n  [14] \"Local Access System Generic Requirements, Objectives, and\n\
    \       Interfaces in Support of Switched Multi-megabit Data Service\",\n    \
    \   Bellcore Technical Reference, TR-TSV-000773, Issue 1, June 1990.\n  [15] Piscitello,\
    \ D., and J. Lawrence, Editors, The Transmission of IP\n       Datagrams over\
    \ the SMDS Service\", RFC 1209, Bell Communications\n       Research, March 1991.\n\
    \  [16] \"Generic Requirements For SMDS Customer Network Management\n       Service\"\
    , Bellcore TR-TSV-001062, Issue 1, March 1993, and\n       Supplement 1, December\
    \ 1993.\n  [17] Cox, R., and K. Tesink, \"Definitions of Managed Objects for SMDS\n\
    \       Subscription\", Version 2.1, Bellcore, August 1992.\n  [18] Frame Based\
    \ Interface Protocol for SMDS Networks - Data Exchange\n       Interface / Subscriber\
    \ Network Interface Revision 1.0 - SMDS\n       Interest Group SIG-TS-005/1993,\
    \ February 2, 1993.\n  [19] Frame Based Interface Protocol for SMDS Networks -\
    \ SIP Relay\n       Interface Revision 1.0 - SMDS Interest Group SIG-TS-006/1993,\n\
    \       February 2, 1993.\n  [20] \"Generic Requirements For Low Speed SMDS Access\"\
    , Bellcore TR-\n       TSV-001239, Issue 1, December 1993.\n  [21] ATM Forum,\
    \ \"ATM User Network Interface Specification\", Version\n       3.0, September\
    \ 1993.\n  [22] Ahmed, M., and K. Tesink, Editors, \"Definitions of Managed\n\
    \       Objects for ATM Management\", RFC 1695, Bellcore, August 1994.\n  [23]\
    \ Brown, R., Editor, \"Definitions of Managed Objects for Frame\n       Relay\
    \ Service\", RFC 1604, Bellcore, March 1994.\n  [24] Specification for Implementation\
    \ of SMDS over an ATM-based Public\n       UNI - Cedric Druce, Max Figueroa, Bellcore\
    \ - SIG TWG-1993/043,\n       SMDS Interest Group Technical Working Group, Work\
    \ in Progress,\n       August 24, 1993.\n  [25] Brown, T. and K. Tesink, Editors),\
    \ \"Definitions of Managed\n       Objects for the SONET Interface Type, RFC 1595,\
    \ Bellcore, March\n       1994.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8.  Authors' Addresses
  contents:
  - "8.  Authors' Addresses\n   Tracy A. Brown\n   Bell Communications Research\n\
    \   331 Newman Springs Road\n   P.O. Box 7020\n   Red Bank, NJ  07701-7020\n \
    \  Phone: (908) 758-2107\n   EMail: tacox@mail.bellcore.com\n   Kaj Tesink\n \
    \  Bell Communications Research\n   331 Newman Springs Road\n   P.O. Box 7020\n\
    \   Red Bank, NJ  07701-7020\n   Phone: (908) 758-5254\n   EMail: kaj@cc.bellcore.com\n"
