Abstract This memo defines a mechanism for tunneling of SMTP (Simple Mail Transfer Protocol) Message Transfer Priority values through MTAs (Message Transfer Agents) that don't support the MT PRIORITY SMTP extension.
The SMTP Message Transfer Priorities extension [RFC6710] specifies a mechanism to allow messages to be given a label to indicate preferential handling, to enable mail handling nodes to take this into account for onward processing.
However, as with all SMTP extensions, all SMTP Message Transfer Agents (MTAs) between the source and the destination must support the extension in order for it to be successfully used.
This document describes an application  layer tunneling of message priority, to convey the priority of the messages through MTAs that do not support the Message Transfer Priorities extension.
The tunneling is done by adding a new message header field to the Internet Message Format specified in [RFC5322].
A number of other header fields are already in use, mostly in Message User Agents (MUAs), to convey meanings related to importance or priority of messages.
Examples of such header fields are Importance [RFC2156], Priority [RFC2156], and X Priority (undocumented).
Considering sometimes subtle and sometimes significant differences in the meaning of these header fields and widely different syntax, this document defines a new header field.
This document is motivated by 2 main deployment scenarios: (1) an MUA talking to a non MT PRIORITY aware Message Submission Agent (MSA), and (2) the use of an unextended MUA to talk to an MT PRIORITY aware MSA.
These 2 use cases are discussed in more detail below.
Use case (1) is about an MT PRIORITY capable MUA talking to a non MT PRIORITY capable MSA [RFC6409], which in turn is talking to an MT PRIORITY capable MTA [RFC5321].
Both the MSA and MTA are within the same ADministrative Management Domain (ADMD) and are on a fast network; however, some recipients are accessible via the MTA that is talking over a slow link to the next MTA.
Communications over that slow link can benefit from the use of the MT PRIORITY SMTP extension.
In use case (2), a widely deployed client (such as a desktop client) is talking to an MT PRIORITY capable MSA.
The client might be extendable via a plug in API provided by the client developers; however, existing APIs frequently allow easy manipulation of email header fields, while not allowing for addition of SMTP protocol features.
In such a case, installing a plug in on the client that can set the MT Priority header field could provide easier and earlier deployment of the MT PRIORITY SMTP extension in an organization without requiring changes to desktop clients.
We note that the above use cases are not exhaustive and that other use cases   variations of the above   may exist.
The purpose of this document is not to consider every scenario, but rather examples that reinforce the need to consider a tunneling mechanism that can deal with SMTP capable devices that do not support [RFC6710].
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119] when they appear in ALL CAPS.
These words also appear in this document in lower case as plain English words, absent their normative meanings.
The formal syntax uses the Augmented Backus Naur Form (ABNF)
[RFC5234] notation, including the core rules defined in Appendix B of RFC 5234
In examples, "C:" and "S:" indicate lines sent by the client and server, respectively.
Line breaks that do not start with a new "C:" or "S:" exist for editorial reasons and are not a part of the protocol.
This document uses the term "priority" specifically in relation to the internal treatment of a message by the server.
Messages with higher priorities may be given expedited handling, and those with lower priorities may be handled only as resources become available.
Handling of Messages Received via SMTP
The subsections of this section update the corresponding subsections of Section 4 of [RFC6710].
PRIORITY Parameter by the Receiving SMTP Server
This specification inserts the following between steps 4 and 5 in Section 4.1 of [RFC6710]: 4a.
If the sending SMTP client hasn't specified the MT PRIORITY parameter to the MAIL FROM command, but the message has a single syntactically valid MT Priority header field (see Section 4), then the value of this header field is the message priority.
In the absence of both the MT PRIORITY MAIL FROM parameter and the MT Priority header field, other message header fields, such as Priority [RFC2156] and X Priority, MAY be used for determining the priority under this "Priority Message Handling" SMTP extension.
Note, however, that the Importance [RFC2156] header field MUST NOT be used for determining the priority under this "Priority Message Handling" SMTP extension, as it has different semantics: the Importance header field is aimed at the user recipient and not at the nodes responsible for transferring the message.
Relay of Messages to Other Conforming SMTP/LMTP Servers
This specification inserts the following between steps 1 and 2 in Section 4.2 of [RFC6710].
that rule 1 also applies to messages that didn't have any priority explicitly specified using the MT PRIORITY MAIL FROM parameter or the MT Priority header field.
3.3.  Relay of Messages to Non Conforming
This specification appends the following after step 1 in Section 4.3 of [RFC6710]: 2.
The relaying MTA MUST first remove any and all existing MT Priority header fields from the message.
(Please see Section 7 for additional considerations related to removal of the MT Priority header field.)
If the incoming message had an MT PRIORITY parameter specified in the MAIL FROM command  or  there was an MT Priority header field removed in step 2 above, then the relaying MTA MUST add its own MT Priority header field with the value determined by the procedure in Section 3.1.
The syntax of the MT Priority header field is specified in Section 4.
This specification makes no changes to Section 4.4 of [RFC6710].
3.5.  Gatewaying a Message into a Foreign Environment
This specification inserts the following between steps 1 and 2 in Section 4.5 of [RFC6710].
Note that if the destination environment doesn't support the transport of an arbitrary header field, the requirement in Section 3.3 to add an MT Priority header field doesn't apply.
Interaction with the DSN SMTP Extension
This specification makes no changes to Section 4.6 of [RFC6710].
MT Priority Applicable protocol: mail [RFC5322] Status: standard Author/change controller:
Alexey Melnikov / IESG (iesg@ietf.org) on behalf of the IETF Specification document(s): RFC 6758
The MT Priority header field conveys message transfer priority when relaying a message through MTAs that don't support the MT PRIORITY SMTP extension.
The ABNF for this header field is defined as follows:
"MT Priority:" [CFWS] priority value [CFWS] CRLF where "priority value" is defined in [RFC6710].
Example: MT Priority:  3 Example:
MT Priority: 4 (ultra) 5.
Example Note that the following example of an SMTP transaction with 2 recipients is also making use of the STARTTLS [RFC3207] and Delivery Status Notification (DSN)
SMTP extensions, even though there is no requirement that these other extensions are to be supported when the MT PRIORITY SMTP extension is implemented.
FAILURE ORCPT rfc822;Dana@Ivory.example.net S: 250 <Dana@Ivory.example.net> recipient ok C:
okay, send message C:  (message goes here)
Here, the receiving SMTP server supports the "STANAG4406" Priority Assignment Policy [RFC6710] with 6 priority levels, so it will use the priority value 4 internally (the next supported priority higher or equal to 3) and will communicate the priority value 3 when relaying it to the next hop (if necessary).
When relaying the message to the next hop that doesn't support the MT PRIORITY SMTP extension, the transaction might look like this:
S: 220 example.org SMTP server here C:
example.net S: 250 example.org S:
FAILURE ORCPT rfc822;Dana@Ivory.example.net S: 250 <Dana@Ivory.example.net> recipient ok C:
MT Priority: 3 C:  (the rest of the message goes here)
QUIT S: 221 goodbye 6.
IANA Considerations IANA has added the following list of header field names to the "Permanent Message Header Field Names" registry (in <http://www.iana.org/assignments/message headers/perm headers.html>):
mail Status: standard Author/change controller: Alexey Melnikov / IESG (iesg@ietf.org) on behalf of the IETF Specification document(s):
This document allows a message priority to be tunneled through MTAs that don't support the MT PRIORITY SMTP extension by specifying how it can be represented in the message itself (using the MT Priority header field).
Thus, it is important to ensure that an MTA receiving a message containing the MT Priority header field can trust that it was set by an authorized agent.
The use of technologies such as DomainKeys Identified Mail (DKIM)
[RFC6376] or S/MIME to sign the MT Priority header field value can enable a recipient to verify whether the specified priority value was generated by a trusted agent.
In particular, DKIM signing allows a recipient to verify that the specified priority value was present when the message was signed, and to verify who signed the message.
Note, however, that the DKIM signer might not be the same agent that generated the MT Priority header field.
MSAs ought to only accept message transfer priorities (whether by using the MT PRIORITY parameter to the MAIL FROM command or the MT Priority header field in the message itself) from users (or only certain groups of such users) who are authenticated and authorized in some way that's acceptable to the MSA.
As part of this policy, they can also restrict maximum priority values that different groups of users can request and can override the priority values specified by MUAs.
When relaying to non MT PRIORITY capable
SMTP/LMTP (Local Mail Transfer Protocol) servers, such MSAs are required to replace any MT Priority header field values that don't satisfy this policy.
See Section 7.1 for more details on what the consequences of such changes might be.
Similarly, MTAs ought to only accept message transfer priorities (whether by using the MT PRIORITY parameter to the MAIL FROM command or the MT Priority header field in the message itself) from senders (or only certain groups of such senders) who are authenticated and authorized in some way that's acceptable to the MTA.
As part of this policy, they can also restrict maximum priority values that different groups of senders can request and can override the priority values specified by them.
When relaying to non MT PRIORITY capable SMTP/ LMTP servers, such MTAs are required to replace any MT Priority header field values that don't satisfy this policy.
See Section 7.1 for more details on what the consequences of such changes might be.
In the absence of the policy enforcement mentioned above, an SMTP server (whether an MSA or an MTA) implementing the MT PRIORITY SMTP extension might be susceptible to a denial of service attack.
For example, malicious clients (MUAs/MSAs/MTAs) can try to abuse this feature by always requesting priority 9.
To protect the MT Priority header field from modification or insertion, MUAs, MSAs, and MTAs inserting it into messages SHOULD use a message header protection mechanism such as DKIM [RFC6376]; however, see Section 7.1 for more information.
Modification of the MT Priority Header Field and DKIM An MSA/MTA that receives a message with an MT Priority header field protected by DKIM and that wants to change the message priority due to its policy is forced to choose between a.  breaking DKIM signatures (by replacing the MT Priority header value), b.  leaving the message as is (and using the MT PRIORITY MAIL FROM parameter), relying on the fact that all downstream MTAs are compliant with this specification, and c.  rejecting the message.
None of these choices are perfect.
They work in a particular situation, so these choices should be carefully considered during implementation and deployment.
If the MSA/MTA decides to alter the message, it SHOULD re sign the message with DKIM.
