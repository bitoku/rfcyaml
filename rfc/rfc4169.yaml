- title: __initial_text__
  contents:
  - "     Hypertext Transfer Protocol (HTTP) Digest Authentication Using\n       \
    \     Authentication and Key Agreement (AKA) Version-2\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   HTTP Digest, as specified in RFC 2617, is known to be vulnerable\
    \ to\n   man-in-the-middle attacks if the client fails to authenticate the\n \
    \  server in TLS, or if the same passwords are used for authentication\n   in\
    \ some other context without TLS.  This is a general problem that\n   exists not\
    \ just with HTTP Digest, but also with other IETF protocols\n   that use tunneled\
    \ authentication.  This document specifies version 2\n   of the HTTP Digest AKA\
    \ algorithm (RFC 3310).  This algorithm can be\n   implemented in a way that it\
    \ is resistant to the man-in-the-middle\n   attack.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n       1.1.  Terminology  . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n   2.  HTTP Digest AKAv2  . . . . . . . . . . . . . . . . . .\
    \ . . . .  5\n       2.1.  Password generation  . . . . . . . . . . . . . . .\
    \ . . .  6\n       2.2.  Session keys . . . . . . . . . . . . . . . . . . . .\
    \ . .  6\n   3.  Example Digest AKAv2 Operation . . . . . . . . . . . . . . .\
    \ .  7\n   4.  Security Considerations  . . . . . . . . . . . . . . . . . . .\
    \  7\n       4.1.  Multiple Authentication Schemes and Algorithms . . . . .  7\n\
    \       4.2.  Session Protection . . . . . . . . . . . . . . . . . . .  7\n  \
    \     4.3.  Man-in-the-middle attacks  . . . . . . . . . . . . . . .  8\n    \
    \   4.4.  Entropy  . . . . . . . . . . . . . . . . . . . . . . . .  9\n   5. \
    \ IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 10\n       5.1.\
    \  Registration Information . . . . . . . . . . . . . . . . 10\n   6.  References\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n       6.1.  Normative\
    \ References . . . . . . . . . . . . . . . . . . 11\n       6.2.  Informative\
    \ References . . . . . . . . . . . . . . . . . 11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Hypertext Transfer Protocol (HTTP) Digest Authentication,\n\
    \   described in [4], has been extended in [6] to support the\n   Authentication\
    \ and Key Agreement (AKA) mechanism [7].  The AKA\n   mechanism performs authentication\
    \ and session key agreement in\n   Universal Mobile Telecommunications System\
    \ (UMTS) networks.  HTTP\n   Digest AKA enables the usage of AKA as a one-time\
    \ password generation\n   mechanism for Digest authentication.\n   HTTP Digest\
    \ is known to be vulnerable to man-in-the-middle attacks,\n   even when run inside\
    \ TLS, if the same HTTP Digest authentication\n   credentials are used in some\
    \ other context without TLS.  The attacker\n   may initiate a TLS session with\
    \ a server, and when the server\n   challenges the attacker with HTTP Digest,\
    \ the attacker masquerades\n   the server to the victim.  If the victim responds\
    \ to the challenge,\n   the attacker is able to use this response towards the\
    \ server in HTTP\n   Digest.  Note that this attack is an instance of a general\
    \ attack\n   that affects a number of IETF protocols, such as PIC.  The general\n\
    \   problem is discussed in [8] and [9].\n   Because of the vulnerability described\
    \ above, the use of HTTP Digest\n   \"AKAv1\" should be limited to the situations\
    \ in which the client is\n   able to demonstrate that, in addition to the AKA\
    \ response, it\n   possesses the AKA session keys.  This is possible, for example,\
    \ if\n   the underlying security protocol uses the AKA-generated session keys\n\
    \   to protect the authentication response.  This is the case, for\n   example,\
    \ in the 3GPP IP Multimedia Core Network Subsystem (IMS),\n   where HTTP Digest\
    \ \"AKAv1\" is currently applied.  However, HTTP Digest\n   \"AKAv1\" should not\
    \ be used with tunnelled security protocols that do\n   not utilize the AKA session\
    \ keys.  For example, the use of HTTP\n   Digest \"AKAv1\" is not necessarily\
    \ secure with TLS if the server side\n   is authenticated using certificates and\
    \ the client side is\n   authenticated using HTTP Digest AKA.\n   There are at\
    \ least four potential solutions to the problem:\n   1.  The use of the authentication\
    \ credentials is limited to one\n       application only.  In general, this approach\
    \ is good and can be\n       recommended from the security point of view.  However,\
    \ this will\n       increase the total number of authentication credentials for\
    \ an\n       end-user, and may cause scalability problems in the server side.\n\
    \   2.  The keys used in the underlying security protocols are somehow\n     \
    \  bound to the keys used in the tunneled authentication protocol.\n       However,\
    \ this would cause problems with the current\n       implementations of underlying\
    \ security protocols.  For example,\n       it is not possible to use the session\
    \ keys from TLS at the\n       application layer.  Furthermore, this solution\
    \ would only solve\n       the problem when HTTP Digest is used over one hop,\
    \ and would\n       leave the problem of using HTTP Digest via multiple hops (e.g.,\n\
    \       via proxy servers) unsolved.\n   3.  Authentication credentials are used\
    \ in a cryptographically\n       different way for each media and/or access network.\
    \  However, it\n       may be difficult to know which underlying media is used\
    \ below the\n       application.\n   4.  Authentication credentials are used in\
    \ a cryptographically\n       different way for each application.\n   This document\
    \ specifies a new algorithm version for HTTP Digest AKA\n   (i.e., \"AKAv2\").\
    \  \"AKAv2\" specifies a cryptographically different way\n   to use AKA credentials\
    \ in use cases that are based on either HTTP\n   Digest authentication or UMTS\
    \ authentication (cf. approach 4 above).\n   The only difference to \"AKAv1\"\
    \ is that, in addition to an AKA\n   response RES, the AKA related session keys,\
    \ IK and CK, are also used\n   as the password for HTTP Digest.  AKAv2 is immune\
    \ to the\n   man-in-the-middle attack described above.  However, if AKAv2 is used\n\
    \   in some environment, both with and without some underlying security,\n   such\
    \ as TLS, the problem still exists.\n   New HTTP Digest AKA algorithm versions\
    \ can be registered with IANA,\n   based on Expert Review.  Documentation of new\
    \ algorithm versions is\n   not mandated as RFCs.  However, \"AKAv2\" is documented\
    \ as an RFC\n   because the use of different AKA algorithm versions includes security\n\
    \   implications of which the implementors should be aware.  The\n   extension\
    \ version and security implications are presented in this\n   document.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This chapter explains the terminology used in this document.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [3].\n   AKA\n     \
    \ Authentication and Key Agreement.\n      AKA is a challenge-response based mechanism\
    \ that uses symmetric\n      cryptography.  AKA can be run in a UMTS IM Services\
    \ Identity\n      Module (ISIM) or in UMTS Subscriber Identity Module (USIM),\
    \ which\n      reside on a smart-card-like device that also provides tamper\n\
    \      resistant storage of shared secrets.\n   CK\n      Cipher Key.  An AKA\
    \ session key for encryption.\n   CK'\n      Cipher Key.  HTTP Digest AKAv2 session\
    \ key for encryption.  CK' is\n      derived from CK using a pseudo-random function.\n\
    \   IK\n      Integrity Key.  An AKA session key for integrity check.\n   IK'\n\
    \      Integrity Key.  HTTP Digest AKAv2 session key for integrity check.\n  \
    \    IK' is derived from IK using a pseudo-random function.\n   ISIM\n      IP\
    \ Multimedia Services Identity Module.  Sometimes ISIM is\n      implemented using\
    \ USIM.\n   RES\n      Authentication Response.  Generated by the ISIM.\n   PRF\n\
    \      Pseudo-random function that is used to construct the AKAv2\n      password\
    \ and related session keys IK' and CK'.  In this document,\n      PRF is presented\
    \ in the format KD(secret, data), denoting a keyed\n      digest algorithm (KD)\
    \ performed to the data (\"data\") with the\n      secret (\"secret\").\n   SIM\n\
    \      Subscriber Identity Module.  GSM counter part for ISIM and USIM.\n   UMTS\n\
    \      Universal Mobile Telecommunications System.\n   USIM\n      UMTS Subscriber\
    \ Identity Module.  UMTS counter part for ISIM and\n      SIM.\n   XRES\n    \
    \  Expected Authentication Response.  In a successful authentication,\n      this\
    \ is equal to RES.\n"
- title: 2.  HTTP Digest AKAv2
  contents:
  - "2.  HTTP Digest AKAv2\n   In general, the Digest AKAv2 operation is identical\
    \ to the Digest\n   AKAv1 operation described in [6].  This chapter specifies\
    \ the parts\n   in which Digest AKAv2 is different from Digest AKAv1 operation.\
    \  The\n   notation used in the Augmented BNF definitions for the new and\n  \
    \ modified syntax elements in this section is as used in SIP [5], and\n   any\
    \ elements not defined in this section are as defined in [6].\n   In order to\
    \ direct the client into using AKAv2 for authentication\n   instead of other AKA\
    \ versions or other HTTP Digest algorithms, the\n   AKA version directive of [6]\
    \ shall have the following new value:\n      aka-version         =  \"AKAv2\"\n\
    \   The AKA version directive is used as a part of the algorithm field as\n  \
    \ defined in [6].\n      Example:  algorithm=AKAv2-MD5\n"
- title: 2.1.  Password Generation
  contents:
  - "2.1.  Password Generation\n   The client shall use base64 encoded [1] parameters\
    \ PRF(RES||IK||CK,\n   \"http-digest-akav2-password\") as a \"password\" when\
    \ calculating the\n   HTTP Digest response directive for AKAv2.\n   The server\
    \ shall use base64 encoded [1] parameters PRF(XRES||IK||CK,\n   \"http-digest-akav2-password\"\
    ) as a \"password\" when checking the HTTP\n   Digest response or when calculating\
    \ the \"response-auth\" of the\n   \"Authentication-Info\" header.\n   The pseudo-random\
    \ function (PRF) used to construct the HTTP Digest\n   password is equal to HMAC\
    \ [2] using the hash algorithm that is used\n   in producing the digest and the\
    \ checksum.  For example, if the\n   algorithm is AKAv2-MD5, then the PRF is HMAC_MD5.\n\
    \   The string \"http-digest-akav2-password\" included in the key\n   derivation\
    \ is case sensitive.\n"
- title: 2.2.  Session keys
  contents:
  - "2.2.  Session keys\n   Even though the HTTP Digest AKA framework does not specify\
    \ the use of\n   the session keys IK and CK for confidentiality and integrity\n\
    \   protection, the keys may be used for creating additional security\n   within\
    \ HTTP authentication or some other security mechanism.\n   However, the original\
    \ session keys IK and CK MUST NOT be directly\n   re-used for such additional\
    \ security in \"AKAv2\".  Instead, session\n   keys IK' and CK' are derived from\
    \ the original keys IK and CK in the\n   following way:\n      IK' = PRF(IK, \"\
    http-digest-akav2-integritykey\")\n      CK' = PRF(CK, \"http-digest-akav2-cipherkey\"\
    )\n   Any application using the HTTP authentication framework is allowed to\n\
    \   use these masked session keys.  The unmasked session keys MAY also be\n  \
    \ re-used in some other context if application-specific strings other\n   than\
    \ \"http-digest-akav2-integritykey\" or\n   \"http-digest-akav2-cipherkey\" are\
    \ used to mask the original session\n   keys.\n   The pseudo-random function (PRF)\
    \ used to construct the HTTP Digest\n   session keys is equal to HMAC [2] using\
    \ the hash algorithm that is\n   used in producing the digest and the checksum.\
    \  For example, if the\n   algorithm is AKAv2-MD5, then the PRF is HMAC_MD5. \
    \ The algorithm MUST\n   be used in the HMAC format, as defined in [2].\n   The\
    \ strings \"http-digest-akav2-integritykey\" and \"http-digest-akav2-\n   cipherkey\"\
    \ included in the key derivation are case sensitive.\n"
- title: 3.  Example Digest AKAv2 Operation
  contents:
  - "3.  Example Digest AKAv2 Operation\n   This document does not introduce any changes\
    \ to the operations of\n   HTTP Digest or HTTP Digest AKA.  Examples defined in\
    \ [6] apply\n   directly to AKAv2 with the following two exceptions:\n   1.  The\
    \ algorithm directive has a prefix \"AKAv2\" instead of \"AKAv1\".\n   2.  The\
    \ HTTP Digest password is derived from base64 encoded PRF(RES||\n       IK||CK,\
    \ \"http-digest-akav2-password\") or PRF(XRES||IK||CK, \"http-\n       digest-akav2-password\"\
    ) instead of (RES) or (XRES) respectively.\n   3.  The optional session keys are\
    \ derived from PRF(IK, \"http-digest-\n       akav2-integritykey\") and PRF(CK,\
    \ \"http-digest-akav2-cipherkey\")\n       instead of IK and CK respectively.\n\
    \   Note that the password in \"AKAv1\" is in binary format.  The \"AKAv2\"\n\
    \   password is base64 encoded [1].\n"
- title: 4.  Security Considerations
  contents:
  - '4.  Security Considerations

    '
- title: 4.1.  Multiple Authentication Schemes and Algorithms
  contents:
  - "4.1.  Multiple Authentication Schemes and Algorithms\n   The rules for a user\
    \ agent for choosing among multiple authentication\n   schemes and algorithms\
    \ are as defined in [6], except that the user\n   agent MUST choose \"AKAv2\"\
    \ if both \"AKAv1\" and \"AKAv2\" are present.\n   Since HTTP Digest is known\
    \ to be vulnerable for bidding-down attacks\n   in environments where multiple\
    \ authentication schemes and/or\n   algorithms are used, the system implementors\
    \ should pay special\n   attention to scenarios in which both \"AKAv1\" and \"\
    AKAv2\" are used.\n   The use of both AKA algorithm versions should be avoided,\
    \ especially\n   if the AKA generated sessions keys or some other additional security\n\
    \   measures to authenticate the clients (e.g., client certificates) are\n   not\
    \ used.\n"
- title: 4.2.  Session Protection
  contents:
  - "4.2.  Session Protection\n   Even though \"AKAv2\" uses the additional integrity\
    \ (IK) and\n   confidentiality (CK) keys as a part of the HTTP Digest AKA password,\n\
    \   these session keys may still be used for creating additional security\n  \
    \ within HTTP authentication or some other security mechanism.  This\n   recommendation\
    \ is based on the assumption that algorithms used in\n   HTTP Digest, such as\
    \ MD5, are sufficiently strong one-way functions,\n   and, consequently, HTTP\
    \ Digest responses leak no or very little\n   computational information about\
    \ IK and CK.  Furthermore, the session\n   keys are masked into IK' and CK' before\
    \ they can be used for session\n   protection.\n"
- title: 4.3.  Man-in-the-Middle Attacks
  contents:
  - "4.3.  Man-in-the-Middle Attacks\n   Reference [8] describes a \"man-in-the-middle\"\
    \ attack related to\n   tunnelled authentication protocols.  The attack can occur\
    \ in an EAP\n   context or any similar contexts where tunnelled authentication\
    \ is\n   used and where the same authentication credentials are used without\n\
    \   protection in some other context or the client fails to authenticate\n   the\
    \ server.\n   For example, the use of TLS with HTTP Digest authentication (i.e.,\n\
    \   TLS for server authentication, and subsequent use of HTTP Digest for\n   client\
    \ authentication) is an instance of such scenario.  HTTP\n   challenges and responses\
    \ can be fetched from and to different TLS\n   tunnels without noticing their\
    \ origin.  The attack is especially easy\n   to perform if the client fails to\
    \ authenticate the server.  If the\n   same HTTP credentials are used with an\
    \ unsecured connection, the\n   attack is also easy to perform.\n   This is how\
    \ the \"man-in-the-middle\" attack works with HTTP Digest and\n   TLS if the victim\
    \ (i.e., the client) fails to authenticate the\n   server:\n   1.  The victim\
    \ contacts the attacker using TLS.  If the attacker has\n       a valid server\
    \ certificate, the client may continue talking to\n       the attacker and use\
    \ some HTTP authentication compatible\n       protocol, such as the Session Initiation\
    \ Protocol (SIP).\n   2.  The attacker contacts a real proxy/server also using\
    \ TLS and an\n       HTTP-authentication-compatible protocol.  The proxy/server\n\
    \       responds to the attacker with the HTTP Authentication challenge.\n   3.\
    \  The attacker forwards the HTTP Authentication challenge from the\n       proxy/server\
    \ to the victim.  If the victim is not careful, and\n       does not check whether\
    \ the identity in the server certificate in\n       TLS matches the realm in the\
    \ HTTP authentication challenge, it\n       may send a new request that carries\
    \ a valid response to the HTTP\n       Authentication challenge.\n   4.  The attacker\
    \ may use the response with the victims HTTP Digest\n       username and password\
    \ to authenticate itself to the proxy/server.\n   The man-in-the-middle attack\
    \ is not possible if the client compares\n   the identities in the TLS server\
    \ certificate and the HTTP Digest\n   authentication challenge.  Note that with\
    \ HTTP Basic, the client\n   would send the password to the attacker.\n   Another\
    \ variant of the \"man-in-the-middle\" attack is the so-called\n   \"interleaving\
    \ attack\".  This attack is possible if the HTTP Digest\n   authentication credentials\
    \ are used in several contexts, and in one\n   of them without protection.\n \
    \  This is how the attack could proceed:\n   1.  The attacker establishes a TLS\
    \ tunnel to the proxy/server using\n       one-way server authentication.  The\
    \ attacker sends a request to\n       the proxy/server.\n   2.  The proxy/server\
    \ challenges the attacker with the HTTP Digest\n       challenge.\n   3.  The\
    \ attacker challenges the victim in some other context using\n       the challenge\
    \ carried in the HTTP Digest challenge.  The HTTP\n       Digest challenge needs\
    \ to be modified to the format used in the\n       protocol of this other context.\n\
    \   4.  The victim responds with a response.\n   5.  The attacker uses the response\
    \ from the other context for\n       authentication in HTTP Digest.\n   6.  The\
    \ proxy/server accepts the response, and delivers the service\n       to the attacker.\n\
    \   In some circumstances, HTTP Digest AKAv1 may be vulnerable for the\n   interleaving\
    \ attack.  In particular, if ISIM is implemented using\n   USIM, the HTTP Digest\
    \ AKAv1 should not be used with tunneled security\n   protocols unless the AKA-related\
    \ session keys, IK and CK, are somehow\n   used with the solution.\n   HTTP Digest\
    \ AKAv2 is not vulnerable to this interleaving attack, and\n   it can be used\
    \ with tunneled security protocols without using the\n   related AKA session keys.\n"
- title: 4.4.  Entropy
  contents:
  - "4.4.  Entropy\n   AKAv1 passwords should only be used as one-time passwords if\
    \ the\n   entropy of the used RES value is limited (e.g., only 32 bits).  For\n\
    \   this reason, the re-use of the same RES value in authenticating\n   subsequent\
    \ requests and responses is not recommended.  Furthermore,\n   algorithms such\
    \ as \"MD5-sess\", which limit the amount of material\n   hashed with a single\
    \ key by producing a session key for\n   authentication, should not be used with\
    \ AKAv1.\n   Passwords generated using AKAv2 can more securely be used for\n \
    \  authenticating subsequent requests and responses because the\n   concatenation\
    \ of AKA credentials (i.e., RES||IK||CK) makes the\n   passwords significantly\
    \ longer, and the pseudo-random function\n   heuristically provides an entropy\
    \ equal to the length of this string,\n   or the length of the PRF output, whichever\
    \ is the shortest.  The user\n   agent does not need to assume that AKAv2 passwords\
    \ are limited to\n   one-time use only, and it may try to re-use the AKAv2 passwords\
    \ with\n   the server.  However, note that AKAv2 passwords cannot be re-used\n\
    \   with the HTTP Digest AKAv2 algorithm because such an authentication\n   challenge\
    \ will automatically generate a fresh password.  AKAv2\n   passwords can be used\
    \ with other HTTP Digest algorithms, such as\n   \"MD5\".\n   The underlying AKA\
    \ protocol (e.g., UMTS AKA) has been designed to\n   keep CK and IK confidential,\
    \ but will typically send RES in the\n   clear.  We note that, even if (by some\
    \ unfortunate misuse of AKA) RES\n   values were revealed, the inclusion of RES\
    \ in PRF(RES||IK||CK) is\n   still beneficial, as it makes pre-calculated dictionaries\
    \ of IK||CK\n   values rather useless (though such dictionaries are infeasible\
    \ for\n   typical sizes of IK and CK).\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document specifies a new aka-version, \"AKAv2\"\
    , to the\n   aka-version namespace maintained by IANA.  The procedure for\n  \
    \ allocation of new aka-versions is defined in [6].\n"
- title: 5.1.  Registration Information
  contents:
  - "5.1.  Registration Information\n   To: ietf-digest-aka@iana.org\n   Subject:\
    \ Registration of a new AKA version\n   Version identifier: \"AKAv2\"\n   Contacts\
    \ for further information: Vesa.Torvinen@turkuamk.fi,\n   jari.arkko@ericsson.com,\
    \ or mats.naslund@ericsson.com\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [1]  Freed, N. and N. Borenstein, \"Multipurpose\
    \ Internet Mail\n        Extensions (MIME) Part One: Format of Internet Message\
    \ Bodies\",\n        RFC 2045, November 1996.\n   [2]  Krawczyk, H., Bellare,\
    \ M., and R. Canetti, \"HMAC: Keyed-Hashing\n        for Message Authentication\"\
    , RFC 2104, February 1997.\n   [3]  Bradner, S., \"Key words for use in RFCs to\
    \ Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n   [4]\
    \  Franks, J., Hallam-Baker, P., Hostetler, J., Lawrence, S.,\n        Leach,\
    \ P., Luotonen, A., and L. Stewart, \"HTTP Authentication:\n        Basic and\
    \ Digest Access Authentication\", RFC 2617, June 1999.\n   [5]  Rosenberg, J.,\
    \ Schulzrinne, H., Camarillo, G., Johnston, A.,\n        Peterson, J., Sparks,\
    \ R., Handley, M., and E. Schooler, \"SIP:\n        Session Initiation Protocol\"\
    , RFC 3261, June 2002.\n   [6]  Niemi, A., Arkko, J., and V. Torvinen, \"Hypertext\
    \ Transfer\n        Protocol (HTTP) Digest Authentication Using Authentication\
    \ and\n        Key Agreement (AKA)\", RFC 3310, September 2002.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [7]  3rd Generation Partnership Project, \"\
    Security Architecture\n        (Release 4)\", TS 33.102, December 2001.\n   [8]\
    \  Asokan, N., Niemi, V., and K. Nyberg, \"Man-in-the-Middle in\n        Tunnelled\
    \ Authentication Protocols\", Cryptology ePrint Archive,\n        http://eprint.iacr.org\
    \ Report 2002/163, October 2002.\n   [9]  Puthenkulam, J., Lortz, V., Palekar,\
    \ A., and D. Simon, \"The\n        Compound Authentication Binding Problem\",\
    \ Work in Progress,\n        March 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Vesa Torvinen\n   Turku Polytechnic\n   Ylhaistentie 2\n\
    \   Salo  FIN 24130\n   Finland\n   Phone: +358 10 5536210\n   EMail: vesa.torvinen@turkuamk.fi\n\
    \   Jari Arkko\n   Ericsson\n   Hirsalantie 1\n   Jorvas  FIN 02420\n   Finland\n\
    \   Phone: +358 40 5079256\n   EMail: jari.arkko@ericsson.com\n   Mats Naeslund\n\
    \   Ericsson\n   Torshamnsgatan 23\n   Stockholm  SE 16480\n   Sweden\n   Phone:\
    \ +46 8 58533739\n   EMail: mats.naslund@ericsson.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
