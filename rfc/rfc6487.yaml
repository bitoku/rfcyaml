- title: __initial_text__
  contents:
  - '             A Profile for X.509 PKIX Resource Certificates

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines a standard profile for X.509 certificates\
    \ for\n   the purpose of supporting validation of assertions of \"right-of-use\"\
    \n   of Internet Number Resources (INRs).  The certificates issued under\n   this\
    \ profile are used to convey the issuer's authorization of the\n   subject to\
    \ be regarded as the current holder of a \"right-of-use\" of\n   the INRs that\
    \ are described in the certificate.  This document\n   contains the normative\
    \ specification of Certificate and Certificate\n   Revocation List (CRL) syntax\
    \ in the Resource Public Key\n   Infrastructure (RPKI).  This document also specifies\
    \ profiles for the\n   format of certificate requests and specifies the Relying\
    \ Party RPKI\n   certificate path validation procedure.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6487.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  4\n     1.1.  Terminology  . . . . . . . . . . . . . . . . . .\
    \ . . . . .  5\n   2.  Describing Resources in Certificates . . . . . . . . .\
    \ . . . .  5\n   3.  End-Entity (EE) Certificates and Signing Functions in the\
    \ RPKI  5\n   4.  Resource Certificates  . . . . . . . . . . . . . . . . . . .\
    \ .  6\n     4.1.  Version  . . . . . . . . . . . . . . . . . . . . . . . . .\
    \  6\n     4.2.  Serial Number  . . . . . . . . . . . . . . . . . . . . . .  6\n\
    \     4.3.  Signature Algorithm  . . . . . . . . . . . . . . . . . . .  6\n  \
    \   4.4.  Issuer . . . . . . . . . . . . . . . . . . . . . . . . . .  7\n    \
    \ 4.5.  Subject  . . . . . . . . . . . . . . . . . . . . . . . . .  7\n     4.6.\
    \  Validity . . . . . . . . . . . . . . . . . . . . . . . . .  7\n       4.6.1.\
    \  notBefore  . . . . . . . . . . . . . . . . . . . . . .  8\n       4.6.2.  notAfter\
    \ . . . . . . . . . . . . . . . . . . . . . . .  8\n     4.7.  Subject Public\
    \ Key Info  . . . . . . . . . . . . . . . . .  8\n     4.8.  Resource Certificate\
    \ Extensions  . . . . . . . . . . . . .  8\n       4.8.1.  Basic Constraints \
    \ . . . . . . . . . . . . . . . . . .  8\n       4.8.2.  Subject Key Identifier\
    \ . . . . . . . . . . . . . . . .  9\n       4.8.3.  Authority Key Identifier\
    \ . . . . . . . . . . . . . . .  9\n       4.8.4.  Key Usage  . . . . . . . .\
    \ . . . . . . . . . . . . . .  9\n       4.8.5.  Extended Key Usage . . . . .\
    \ . . . . . . . . . . . . .  9\n       4.8.6.  CRL Distribution Points  . . .\
    \ . . . . . . . . . . . . 10\n       4.8.7.  Authority Information Access . .\
    \ . . . . . . . . . . . 10\n       4.8.8.  Subject Information Access . . . .\
    \ . . . . . . . . . . 11\n       4.8.9.  Certificate Policies . . . . . . . .\
    \ . . . . . . . . . 12\n       4.8.10. IP Resources . . . . . . . . . . . . .\
    \ . . . . . . . . 12\n       4.8.11. AS Resources . . . . . . . . . . . . . .\
    \ . . . . . . . 12\n   5.  Resource Certificate Revocation Lists  . . . . . .\
    \ . . . . . . 13\n   6.  Resource Certificate Requests  . . . . . . . . . . .\
    \ . . . . . 13\n     6.1.  PCKS#10 Profile  . . . . . . . . . . . . . . . . .\
    \ . . . . 14\n       6.1.1.  PKCS#10 Resource Certificate Request Template Fields\
    \ . 14\n     6.2.  CRMF Profile . . . . . . . . . . . . . . . . . . . . . . .\
    \ 15\n       6.2.1.  CRMF Resource Certificate Request Template Fields  . . 15\n\
    \       6.2.2.  Resource Certificate Request Control Fields  . . . . . 16\n  \
    \   6.3.  Certificate Extension Attributes in Certificate Requests . 16\n   7.\
    \  Resource Certificate Validation  . . . . . . . . . . . . . . . 17\n     7.1.\
    \  Resource Extension Validation  . . . . . . . . . . . . . . 17\n     7.2.  Resource\
    \ Certification Path Validation . . . . . . . . . . 18\n   8.  Design Notes .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . 19\n   9.  Operational Considerations\
    \ for Profile Agility . . . . . . . . 22\n   10. Security Considerations  . .\
    \ . . . . . . . . . . . . . . . . . 24\n   11. Acknowledgements . . . . . . .\
    \ . . . . . . . . . . . . . . . . 25\n   12. References . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . 25\n     12.1. Normative References . . . . .\
    \ . . . . . . . . . . . . . . 25\n     12.2. Informative References . . . . .\
    \ . . . . . . . . . . . . . 26\n   Appendix A.  Example Resource Certificate \
    \ . . . . . . . . . . . . 27\n   Appendix B.  Example Certificate Revocation List\
    \ . . . . . . . . . 31\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a standard profile for X.509 certificates\n\
    \   [X.509] for use in the context of certification of Internet Number\n   Resources\
    \ (INRs), i.e., IP Addresses and Autonomous System (AS)\n   numbers.  Such certificates\
    \ are termed \"resource certificates\".  A\n   resource certificate is a certificate\
    \ that conforms to the PKIX\n   profile [RFC5280], and that conforms to the constraints\
    \ specified in\n   this profile.  A resource certificate attests that the issuer\
    \ has\n   granted the subject a \"right-of-use\" for a listed set of IP addresses\n\
    \   and/or Autonomous System numbers.\n   This document is referenced by Section\
    \ 7 of the \"Certificate Policy\n   (CP) for the Resource Public Key Infrastructure\
    \ (RPKI)\" [RFC6484].\n   It is an integral part of that policy and the normative\
    \ specification\n   for certificate and Certificate Revocation List (CRL) syntax\
    \ used in\n   the RPKI.  The document also specifies profiles for the format of\n\
    \   certificate requests, and the relying party (RP) RPKI certificate\n   path\
    \ validation procedure.\n   Resource certificates are to be used in a manner that\
    \ is consistent\n   with the RPKI Certificate Policy (CP) [RFC6484].  They are\
    \ issued by\n   entities that assign and/or allocate public INRs, and thus the\
    \ RPKI\n   is aligned with the public INR distribution function.  When an INR\
    \ is\n   allocated or assigned by a number registry to an entity, this\n   allocation\
    \ can be described by an associated resource certificate.\n   This certificate\
    \ is issued by the number registry, and it binds the\n   certificate subject's\
    \ key to the INRs enumerated in the certificate.\n   One or two critical extensions,\
    \ the IP Address Delegation or AS\n   Identifier Delegation Extensions [RFC3779],\
    \ enumerate the INRs that\n   were allocated or assigned by the issuer to the\
    \ subject.\n   Relying party (RP) validation of a resource certificate is performed\n\
    \   in the manner specified in Section 7.1.  This validation procedure\n   differs\
    \ from that described in Section 6 of [RFC5280], such that:\n   o  additional\
    \ validation processing imposed by the INR extensions is\n      required,\n  \
    \ o  a confirmation of a public key match between the CRL issuer and\n      the\
    \ resource certificate issuer is required, and\n   o  the resource certificate\
    \ is required to conform to this profile.\n   This profile defines those fields\
    \ that are used in a resource\n   certificate that MUST be present for the certificate\
    \ to be valid.\n   Any extensions not explicitly mentioned MUST be absent.  The\
    \ same\n   applies to the CRLs used in the RPKI, that are also profiled in this\n\
    \   document.  A Certification Authority (CA) conforming to the RPKI CP\n   MUST\
    \ issue certificates and CRLs consistent with this profile.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   It is assumed that the reader is familiar with the terms\
    \ and concepts\n   described in \"Internet X.509 Public Key Infrastructure Certificate\n\
    \   and Certificate Revocation List (CRL) Profile\" [RFC5280], and \"X.509\n \
    \  Extensions for IP Addresses and AS Identifiers\" [RFC3779].\n   The key words\
    \ \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\"\
    , \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document\
    \ are to be interpreted as described in [RFC2119].\n"
- title: 2.  Describing Resources in Certificates
  contents:
  - "2.  Describing Resources in Certificates\n   The framework for describing an\
    \ association between the subject of a\n   certificate and the INRs currently\
    \ under the subject's control is\n   described in [RFC3779].  This profile further\
    \ requires that:\n   o  Every resource certificate MUST contain either the IP\
    \ Address\n      Delegation or the Autonomous System Identifier Delegation\n \
    \     extension, or both.\n   o  These extensions MUST be marked as critical.\n\
    \   o  The sorted canonical format describing INRs, with maximal spanning\n  \
    \    ranges and maximal spanning prefix masks, as defined in [RFC3779],\n    \
    \  MUST be used for the resource extension field, except where the\n      \"inherit\"\
    \ construct is used instead.\n   When validating a resource certificate, an RP\
    \ MUST verify that the\n   INRs described in the issuer's resource certificate\
    \ encompass the\n   INRs of the resource certificate being validated.  In this\
    \ context,\n   \"encompass\" allows for the issuer's INRs to be the same as, or\
    \ a\n   strict superset of, the subject's INRs.\n"
- title: 3.  End-Entity (EE) Certificates and Signing Functions in the RPKI
  contents:
  - "3.  End-Entity (EE) Certificates and Signing Functions in the RPKI\n   As noted\
    \ in [RFC6480], the primary function of end-entity (EE)\n   certificates in the\
    \ RPKI is the verification of signed objects that\n   relate to the usage of the\
    \ INRs described in the certificate, e.g.,\n   Route Origin Authorizations (ROAs)\
    \ and manifests.\n   The private key associated with an EE certificate is used\
    \ to sign a\n   single RPKI signed object, i.e., the EE certificate is used to\n\
    \   validate only one object.  The EE certificate is embedded in the\n   object\
    \ as part of a Cryptographic Message Syntax (CMS) signed-data\n   structure [RFC6488].\
    \  Because of the one-to-one relationship between\n   the EE certificate and the\
    \ signed object, revocation of the\n   certificate effectively revokes the corresponding\
    \ signed object.\n   An EE certificate may be used to validate a sequence of signed\n\
    \   objects, where each signed object in the sequence overwrites the\n   previous\
    \ instance of the signed object in the repository publication\n   point, such\
    \ that only one instance of the signed object is published\n   at any point in\
    \ time (e.g., an EE certificate MAY be used to sign a\n   sequence of manifests\
    \ [RFC6486]).  Such EE certificates are termed\n   \"sequential use\" EE certificates.\n\
    \   EE certificates used to validate only one instance of a signed\n   object,\
    \ and are not used thereafter or in any other validation\n   context, are termed\
    \ \"one-time-use\" EE certificates.\n"
- title: 4.  Resource Certificates
  contents:
  - "4.  Resource Certificates\n   A resource certificate is a valid X.509 public\
    \ key certificate,\n   consistent with the PKIX profile [RFC5280], containing\
    \ the fields\n   listed in this section.  Only the differences from [RFC5280]\
    \ are\n   noted below.\n   Unless specifically noted as being OPTIONAL, all the\
    \ fields listed\n   here MUST be present, and any other fields MUST NOT appear\
    \ in a\n   conforming resource certificate.  Where a field value is specified\n\
    \   here, this value MUST be used in conforming resource certificates.\n"
- title: 4.1.  Version
  contents:
  - "4.1.  Version\n   As resource certificates are X.509 version 3 certificates,\
    \ the\n   version MUST be 3 (i.e., the value of this field is 2).\n   RPs need\
    \ not process version 1 or version 2 certificates (in contrast\n   to [RFC5280]).\n"
- title: 4.2.  Serial Number
  contents:
  - "4.2.  Serial Number\n   The serial number value is a positive integer that is\
    \ unique for each\n   certificate issued by a given CA.\n"
- title: 4.3.  Signature Algorithm
  contents:
  - "4.3.  Signature Algorithm\n   The algorithm used in this profile is specified\
    \ in [RFC6485].\n"
- title: 4.4.  Issuer
  contents:
  - "4.4.  Issuer\n   The value of this field is a valid X.501 distinguished name.\n\
    \   An issuer name MUST contain one instance of the CommonName attribute\n   and\
    \ MAY contain one instance of the serialNumber attribute.  If both\n   attributes\
    \ are present, it is RECOMMENDED that they appear as a set.\n   The CommonName\
    \ attribute MUST be encoded using the ASN.1 type\n   PrintableString [X.680].\
    \  Issuer names are not intended to be\n   descriptive of the identity of issuer.\n\
    \   The RPKI does not rely on issuer names being globally unique, for\n   reasons\
    \ of security.  However, it is RECOMMENDED that issuer names be\n   generated\
    \ in a fashion that minimizes the likelihood of collisions.\n   See Section 8\
    \ for (non-normative) suggested name-generation\n   mechanisms that fulfill this\
    \ recommendation.\n"
- title: 4.5.  Subject
  contents:
  - "4.5.  Subject\n   The value of this field is a valid X.501 distinguished name\n\
    \   [RFC4514], and is subject to the same constraints as the issuer name.\n  \
    \ In the RPKI, the subject name is determined by the issuer, not\n   proposed\
    \ by the subject [RFC6481].  Each distinct subordinate CA and\n   EE certified\
    \ by the issuer MUST be identified using a subject name\n   that is unique per\
    \ issuer.  In this context, \"distinct\" is defined as\n   an entity and a given\
    \ public key.  An issuer SHOULD use a different\n   subject name if the subject's\
    \ key pair has changed (i.e., when the CA\n   issues a certificate as part of\
    \ re-keying the subject.)  Subject\n   names are not intended to be descriptive\
    \ of the identity of subject.\n"
- title: 4.6.  Validity
  contents:
  - "4.6.  Validity\n   The certificate validity period is represented as a SEQUENCE\
    \ of two\n   dates: the date on which the certificate validity period begins\n\
    \   (notBefore) and the date on which the certificate validity period\n   ends\
    \ (notAfter).\n   While a CA is typically advised against issuing a certificate\
    \ with a\n   validity period that spans a greater period of time than the validity\n\
    \   period of the CA's certificate that will be used to validate the\n   issued\
    \ certificate, in the context of this profile, a CA MAY have\n   valid grounds\
    \ to issue a subordinate certificate with a validity\n   period that exceeds the\
    \ validity period of the CA's certificate.\n"
- title: 4.6.1.  notBefore
  contents:
  - "4.6.1.  notBefore\n   The \"notBefore\" time SHOULD be no earlier than the time\
    \ of\n   certificate generation.\n   In the RPKI, it is valid for a certificate\
    \ to have a value for this\n   field that pre-dates the same field value in any\
    \ superior\n   certificate.  Relying Parties SHOULD NOT attempt to infer from\
    \ this\n   time information that a certificate was valid at a time in the past,\n\
    \   or that it will be valid at a time in the future, as the scope of an\n   RP's\
    \ test of validity of a certificate refers specifically to\n   validity at the\
    \ current time.\n"
- title: 4.6.2.  notAfter
  contents:
  - "4.6.2.  notAfter\n   The \"notAfter\" time represents the anticipated lifetime\
    \ of the\n   current resource allocation or assignment arrangement between the\n\
    \   issuer and the subject.\n   It is valid for a certificate to have a value\
    \ for this field that\n   post-dates the same field value in any superior certificate.\
    \  The\n   same caveats apply to RP's assumptions relating to the certificate's\n\
    \   validity at any time other than the current time.\n"
- title: 4.7.  Subject Public Key Info
  contents:
  - "4.7.  Subject Public Key Info\n   The algorithm used in this profile is specified\
    \ in [RFC6485].\n"
- title: 4.8.  Resource Certificate Extensions
  contents:
  - "4.8.  Resource Certificate Extensions\n   The following X.509 v3 extensions MUST\
    \ be present in a conforming\n   resource certificate, except where explicitly\
    \ noted otherwise.  Each\n   extension in a resource certificate is designated\
    \ as either critical\n   or non-critical.  A certificate-using system MUST reject\
    \ the\n   certificate if it encounters a critical extension it does not\n   recognize;\
    \ however, a non-critical extension MAY be ignored if it is\n   not recognized\
    \ [RFC5280].\n"
- title: 4.8.1.  Basic Constraints
  contents:
  - "4.8.1.  Basic Constraints\n   The Basic Constraints extension field is a critical\
    \ extension in the\n   resource certificate profile, and MUST be present when\
    \ the subject is\n   a CA, and MUST NOT be present otherwise.\n   The issuer determines\
    \ whether the \"cA\" boolean is set.\n   The Path Length Constraint is not specified\
    \ for RPKI certificates,\n   and MUST NOT be present.\n"
- title: 4.8.2.  Subject Key Identifier
  contents:
  - "4.8.2.  Subject Key Identifier\n   This extension MUST appear in all resource\
    \ certificates.  This\n   extension is non-critical.\n   The Key Identifier used\
    \ for resource certificates is the 160-bit\n   SHA-1 hash of the value of the\
    \ DER-encoded ASN.1 bit string of the\n   Subject Public Key, as described in\
    \ Section 4.2.1.2 of [RFC5280].\n"
- title: 4.8.3.  Authority Key Identifier
  contents:
  - "4.8.3.  Authority Key Identifier\n   This extension MUST appear in all resource\
    \ certificates, with the\n   exception of a CA who issues a \"self-signed\" certificate.\
    \  In a self-\n   signed certificate, a CA MAY include this extension, and set\
    \ it equal\n   to the Subject Key Identifier.  The authorityCertIssuer and\n \
    \  authorityCertSerialNumber fields MUST NOT be present.  This extension\n   is\
    \ non-critical.\n   The Key Identifier used for resource certificates is the 160-bit\n\
    \   SHA-1 hash of the value of the DER-encoded ASN.1 bit string of the\n   issuer's\
    \ public key, as described in Section 4.2.1.1 of [RFC5280].\n"
- title: 4.8.4.  Key Usage
  contents:
  - "4.8.4.  Key Usage\n   This extension is a critical extension and MUST be present.\n\
    \   In certificates issued to certification authorities only, the\n   keyCertSign\
    \ and CRLSign bits are set to TRUE, and these MUST be the\n   only bits set to\
    \ TRUE.\n   In EE certificates, the digitalSignature bit MUST be set to TRUE and\n\
    \   MUST be the only bit set to TRUE.\n"
- title: 4.8.5.  Extended Key Usage
  contents:
  - "4.8.5.  Extended Key Usage\n   The Extended Key Usage (EKU) extension MUST NOT\
    \ appear in any CA\n   certificate in the RPKI.  This extension also MUST NOT\
    \ appear in EE\n   certificates used to verify RPKI objects (e.g., ROAs or manifests.\n\
    \   The extension MUST NOT be marked critical.\n   The EKU extension MAY appear\
    \ in EE certificates issued to routers or\n   other devices.  Permitted values\
    \ for the EKU OIDs will be specified\n   in Standards Track RFCs issued by other\
    \ IETF working groups that\n   adopt the RPKI profile and that identify application-specific\n\
    \   requirements that motivate the use of such EKUs.\n"
- title: 4.8.6.  CRL Distribution Points
  contents:
  - "4.8.6.  CRL Distribution Points\n   This extension MUST be present, except in\
    \ \"self-signed\" certificates,\n   and it is non-critical.  In a self-signed\
    \ certificate, this extension\n   MUST be omitted.\n   In this profile, the scope\
    \ of the CRL is specified to be all\n   certificates issued by this CA issuer.\n\
    \   The CRL Distribution Points (CRLDP) extension identifies the\n   location(s)\
    \ of the CRL(s) associated with certificates issued by this\n   issuer.  The RPKI\
    \ uses the URI [RFC3986] form of object\n   identification.  The preferred URI\
    \ access mechanism is a single rsync\n   URI (\"rsync://\") [RFC5781] that references\
    \ a single inclusive CRL for\n   each issuer.\n   In this profile, the certificate\
    \ issuer is also the CRL issuer,\n   implying that the CRLIssuer field MUST be\
    \ omitted, and the\n   distributionPoint field MUST be present.  The Reasons field\
    \ MUST be\n   omitted.\n   The distributionPoint MUST contain the fullName field,\
    \ and MUST NOT\n   contain a nameRelativeToCRLIssuer.  The form of the generalName\
    \ MUST\n   be of type URI.\n   The sequence of distributionPoint values MUST contain\
    \ only a single\n   DistributionPoint.  The DistributionPoint MAY contain more\
    \ than one\n   URI value.  An rsync URI [RFC5781] MUST be present in the\n   DistributionPoint\
    \ and MUST reference the most recent instance of this\n   issuer's CRL.  Other\
    \ access form URIs MAY be used in addition to the\n   rsync URI, representing\
    \ alternate access mechanisms for this CRL.\n"
- title: 4.8.7.  Authority Information Access
  contents:
  - "4.8.7.  Authority Information Access\n   In the context of the RPKI, this extension\
    \ identifies the publication\n   point of the certificate of the issuer of the\
    \ certificate in which\n   the extension appears.  In this profile, a single reference\
    \ to the\n   publication point of the immediate superior certificate MUST be\n\
    \   present, except for a \"self-signed\" certificate, in which case the\n   extension\
    \ MUST be omitted.  This extension is non-critical.\n   This profile uses a URI\
    \ form of object identification.  The preferred\n   URI access mechanisms is \"\
    rsync\", and an rsync URI [RFC5781] MUST be\n   specified with an accessMethod\
    \ value of id-ad-caIssuers.  The URI\n   MUST reference the point of publication\
    \ of the certificate where this\n   Issuer is the subject (the issuer's immediate\
    \ superior certificate).\n   Other accessMethod URIs referencing the same object\
    \ MAY also be\n   included in the value sequence of this extension.\n   A CA MUST\
    \ use a persistent URL name scheme for CA certificates that\n   it issues [RFC6481].\
    \  This implies that a reissued certificate\n   overwrites a previously issued\
    \ certificate (to the same subject) in\n   the publication repository.  In this\
    \ way, certificates subordinate to\n   the reissued (CA) certificate can maintain\
    \ a constant Authority\n   Information Access (AIA) extension pointer and thus\
    \ need not be\n   reissued when the parent certificate is reissued.\n"
- title: 4.8.8.  Subject Information Access
  contents:
  - "4.8.8.  Subject Information Access\n   In the context of the RPKI, this Subject\
    \ Information Access (SIA)\n   extension identifies the publication point of products\
    \ signed by the\n   subject of the certificate.\n"
- title: 4.8.8.1.  SIA for CA Certificates
  contents:
  - "4.8.8.1.  SIA for CA Certificates\n   This extension MUST be present and MUST\
    \ be marked non-critical.\n   This extension MUST have an instance of an accessMethod\
    \ of id-ad-\n   caRepository, with an accessLocation form of a URI that MUST specify\n\
    \   an rsync URI [RFC5781].  This URI points to the directory containing\n   all\
    \ published material issued by this CA, i.e., all valid CA\n   certificates, published\
    \ EE certificates, the current CRL, manifest,\n   and signed objects validated\
    \ via EE certificates that have been\n   issued by this CA [RFC6481].  Other accessDescription\
    \ elements with\n   an accessMethod of id-ad-caRepository MAY be present.  In\
    \ such cases,\n   the accessLocation values describe alternate supported URI access\n\
    \   mechanisms for the same directory.  The ordering of URIs in this\n   accessDescription\
    \ sequence reflect the CA's relative preferences for\n   access methods to be\
    \ used by RPs, with the first element of the\n   sequence being the most preferred\
    \ by the CA.\n   This extension MUST have an instance of an AccessDescription\
    \ with an\n   accessMethod of id-ad-rpkiManifest,\n         id-ad OBJECT IDENTIFIER\
    \ ::= { id-pkix 48 }\n         id-ad-rpkiManifest OBJECT IDENTIFIER ::= { id-ad\
    \ 10 }\n   with an rsync URI [RFC5781] form of accessLocation.  The URI points\n\
    \   to the CA's manifest of published objects [RFC6486] as an object URL.\n  \
    \ Other accessDescription elements MAY exist for the id-ad-rpkiManifest\n   accessMethod,\
    \ where the accessLocation value indicates alternate\n   access mechanisms for\
    \ the same manifest object.\n"
- title: 4.8.8.2.  SIA for EE Certificates
  contents:
  - "4.8.8.2.  SIA for EE Certificates\n   This extension MUST be present and MUST\
    \ be marked non-critical.\n   This extension MUST have an instance of an accessMethod\
    \ of id-ad-\n   signedObject,\n         id-ad-signedObject OBJECT IDENTIFIER ::=\
    \ { id-ad 11 }\n   with an accessLocation form of a URI that MUST include an rsync\
    \ URI\n   [RFC5781].  This URI points to the signed object that is verified\n\
    \   using this EE certificate [RFC6481].  Other accessDescription\n   elements\
    \ may exist for the id-ad-signedObject accessMethod, where the\n   accessLocation\
    \ value indicates alternate URI access mechanisms for\n   the same object, ordered\
    \ in terms of the EE's relative preference for\n   supported access mechanisms.\n\
    \   Other AccessMethods MUST NOT be used for an EE certificates's SIA.\n"
- title: 4.8.9.  Certificate Policies
  contents:
  - "4.8.9.  Certificate Policies\n   This extension MUST be present and MUST be marked\
    \ critical.  It MUST\n   include exactly one policy, as specified in the RPKI\
    \ CP [RFC6484]\n"
- title: 4.8.10.  IP Resources
  contents:
  - "4.8.10.  IP Resources\n   Either the IP Resources extension, or the AS Resources\
    \ extension, or\n   both, MUST be present in all RPKI certificates, and if present,\
    \ MUST\n   be marked critical.\n   This extension contains the list of IP address\
    \ resources as per\n   [RFC3779].  The value may specify the \"inherit\" element\
    \ for a\n   particular Address Family Identifier (AFI) value.  In the context\
    \ of\n   resource certificates describing public number resources for use in\n\
    \   the public Internet, the Subsequent AFI (SAFI) value MUST NOT be\n   used.\n\
    \   This extension MUST either specify a non-empty set of IP address\n   records,\
    \ or use the \"inherit\" setting to indicate that the IP address\n   resource\
    \ set of this certificate is inherited from that of the\n   certificate's issuer.\n"
- title: 4.8.11.  AS Resources
  contents:
  - "4.8.11.  AS Resources\n   Either the AS Resources extension, or the IP Resources\
    \ extension, or\n   both, MUST be present in all RPKI certificates, and if present,\
    \ MUST\n   be marked critical.\n   This extension contains the list of AS number\
    \ resources as per\n   [RFC3779], or it may specify the \"inherit\" element. \
    \ Routing Domain\n   Identifier (RDI) values are NOT supported in this profile\
    \ and MUST\n   NOT be used.\n   This extension MUST either specify a non-empty\
    \ set of AS number\n   records, or use the \"inherit\" setting to indicate that\
    \ the AS number\n   resource set of this certificate is inherited from that of\
    \ the\n   certificate's issuer.\n"
- title: 5.  Resource Certificate Revocation Lists
  contents:
  - "5.  Resource Certificate Revocation Lists\n   Each CA MUST issue a version 2\
    \ CRL that is consistent with [RFC5280].\n   RPs are NOT required to process version\
    \ 1 CRLs (in contrast to\n   [RFC5280]).  The CRL issuer is the CA.  CRLs conforming\
    \ to this\n   profile MUST NOT include Indirect or Delta CRLs.  The scope of each\n\
    \   CRL MUST be all certificates issued by this CA.\n   The issuer name is as\
    \ in Section 4.4 above.\n   Where two or more CRLs are issued by the same CA,\
    \ the CRL with the\n   highest value of the \"CRL Number\" field supersedes all\
    \ other CRLs\n   issued by this CA.\n   The algorithm used in CRLs issued under\
    \ this profile is specified in\n   [RFC6485].\n   The contents of the CRL are\
    \ a list of all non-expired certificates\n   that have been revoked by the CA.\n\
    \   An RPKI CA MUST include the two extensions, Authority Key Identifier\n   and\
    \ CRL Number, in every CRL that it issues.  RPs MUST be prepared to\n   process\
    \ CRLs with these extensions.  No other CRL extensions are\n   allowed.\n   For\
    \ each revoked resource certificate, only the two fields, Serial\n   Number and\
    \ Revocation Date, MUST be present, and all other fields\n   MUST NOT be present.\
    \  No CRL entry extensions are supported in this\n   profile, and CRL entry extensions\
    \ MUST NOT be present in a CRL.\n"
- title: 6.  Resource Certificate Requests
  contents:
  - "6.  Resource Certificate Requests\n   A resource certificate request MAY use\
    \ either of PKCS#10 or\n   Certificate Request Message Format (CRMF).  A CA MUST\
    \ support\n   certificate issuance in PKCS#10 and a CA MAY support CRMF requests.\n\
    \   Note that there is no certificate response defined in this profile.\n   For\
    \ CA certificate requests, the CA places the resource certificate\n   in the repository,\
    \ as per [RFC6484].  No response is defined for EE\n   certificate requests.\n"
- title: 6.1.  PCKS#10 Profile
  contents:
  - "6.1.  PCKS#10 Profile\n   This profile refines the specification in [RFC2986],\
    \ as it relates to\n   resource certificates.  A Certificate Request Message object,\n\
    \   formatted according to PKCS#10, is passed to a CA as the initial step\n  \
    \ in issuing a certificate.\n   With the exception of the SubjectPublicKeyinfo\
    \ and the SIA extension\n   request, the CA is permitted to alter any field in\
    \ the request when\n   issuing a certificate.\n"
- title: 6.1.1.  PKCS#10 Resource Certificate Request Template Fields
  contents:
  - "6.1.1.  PKCS#10 Resource Certificate Request Template Fields\n   This profile\
    \ applies the following additional requirements to fields\n   that MAY appear\
    \ in a CertificationRequestInfo:\n      Version\n         This field is mandatory\
    \ and MUST have the value 0.\n      Subject\n         This field MAY be omitted.\
    \  If present, the value of this field\n         SHOULD be empty (i.e., NULL),\
    \ in which case the CA MUST\n         generate a subject name that is unique in\
    \ the context of\n         certificates issued by this CA.  This field is allowed\
    \ to be\n         non-empty only for a re-key/reissuance request, and only if\
    \ the\n         CA has adopted a policy (in its Certificate Practice Statement\n\
    \         (CPS)) that permits reuse of names in these circumstances.\n      SubjectPublicKeyInfo\n\
    \         This field specifies the subject's public key and the algorithm\n  \
    \       with which the key is used.  The algorithm used in this profile\n    \
    \     is specified in [RFC6485].\n      Attributes\n         [RFC2986] defines\
    \ the attributes field as key-value pairs where\n         the key is an OID and\
    \ the value's structure depends on the key.\n         The only attribute used\
    \ in this profile is the extensionRequest\n         attribute as defined in [RFC2985].\
    \  This attribute contains\n         certificate extensions.  The profile for\
    \ extensions in\n         certificate requests is specified in Section 6.3.\n\
    \   This profile applies the following additional constraint to fields\n   that\
    \ MAY appear in a CertificationRequest Object:\n      signatureAlgorithm\n   \
    \      The signatureAlgorithm value is specified in [RFC6485].\n"
- title: 6.2.  CRMF Profile
  contents:
  - "6.2.  CRMF Profile\n   This profile refines the Certificate Request Message Format\
    \ (CRMF)\n   specification in [RFC4211], as it relates to resource certificates.\n\
    \   A Certificate Request Message object, formatted according to the\n   CRMF,\
    \ is passed to a CA as the initial step in certificate issuance.\n   With the\
    \ exception of the SubjectPublicKeyinfo and the SIA extension\n   request, the\
    \ CA is permitted to alter any requested field when\n   issuing the certificate.\n"
- title: 6.2.1.  CRMF Resource Certificate Request Template Fields
  contents:
  - "6.2.1.  CRMF Resource Certificate Request Template Fields\n   This profile applies\
    \ the following additional requirements to fields\n   that may appear in a Certificate\
    \ Request Template:\n      version\n         This field SHOULD be omitted.  If\
    \ present, it MUST specify a\n         request for a version 3 Certificate.\n\
    \      serialNumber\n         This field MUST be omitted.\n      signingAlgorithm\n\
    \         This field MUST be omitted.\n      issuer\n         This MUST be omitted\
    \ in this profile.\n      Validity\n         This field MAY be omitted.  If omitted,\
    \ the CA will issue a\n         Certificate with Validity dates as determined\
    \ by the CA.  If\n         specified, then the CA MAY override the requested values\
    \ with\n         dates as determined by the CA.\n      Subject\n         This\
    \ field MAY be omitted.  If present, the value of this field\n         SHOULD\
    \ be empty (i.e., NULL), in which case the CA MUST\n         generate a subject\
    \ name that is unique in the context of\n         certificates issued by this\
    \ CA.  This field is allowed to be\n         non-empty only for a re-key/reissuance\
    \ request, and only if the\n         CA has adopted a policy (in its CPS) that\
    \ permits the reuse of\n         names in these circumstances.\n      PublicKey\n\
    \         This field MUST be present.\n      extensions\n         The profile\
    \ for extensions in certificate requests is specified\n         in Section 6.3.\n"
- title: 6.2.2.  Resource Certificate Request Control Fields
  contents:
  - "6.2.2.  Resource Certificate Request Control Fields\n   The following control\
    \ fields are supported in this profile:\n      Authenticator Control\n       \
    \  The intended model of authentication of the subject is a \"long\n         term\"\
    \ model, and the guidance offered in [RFC4211] is that the\n         Authenticator\
    \ Control field be used.\n"
- title: 6.3.  Certificate Extension Attributes in Certificate Requests
  contents:
  - "6.3.  Certificate Extension Attributes in Certificate Requests\n   The following\
    \ extensions MAY appear in a PKCS#10 or CRMF Certificate\n   Request.  Any other\
    \ extensions MUST NOT appear in a Certificate\n   Request.  This profile places\
    \ the following additional constraints on\n   these extensions:\n      BasicConstraints\n\
    \         If this is omitted, then the CA will issue an EE certificate\n     \
    \    (hence no BasicConstraints extension will be included).\n         The pathLengthConstraint\
    \ is not supported in this profile, and\n         this field MUST be omitted.\n\
    \         The CA MAY honor the cA boolean if set to TRUE (CA Certificate\n   \
    \      Request).  If this bit is set, then it indicates that the\n         subject\
    \ is requesting a CA certificate.\n         The CA MUST honor the cA bit if set\
    \ to FALSE (EE Certificate\n         Request), in which case the corresponding\
    \ EE certificate will\n         not contain a Basic Constraints extension.\n \
    \     KeyUsage\n         The CA MAY honor KeyUsage extensions of keyCertSign and\
    \ cRLSign\n         if present, as long as this is consistent with the\n     \
    \    BasicConstraints SubjectType sub-field, when specified.\n      ExtendedKeyUsage\n\
    \         The CA MAY honor ExtendedKeyUsage extensions of keyCertSign and\n  \
    \       cRLSign if present, as long as this is consistent with the\n         BasicConstraints\
    \ SubjectType sub-field, when specified.\n      SubjectInformationAccess\n   \
    \      This field MUST be present, and the field value SHOULD be\n         honored\
    \ by the CA if it conforms to the requirements set forth\n         in Section\
    \ 4.8.8.  If the CA is unable to honor the requested\n         value for this\
    \ field, then the CA MUST reject the Certificate\n         Request.\n"
- title: 7.  Resource Certificate Validation
  contents:
  - "7.  Resource Certificate Validation\n   This section describes the resource certificate\
    \ validation procedure.\n   This refines the generic procedure described in Section\
    \ 6 of\n   [RFC5280].\n"
- title: 7.1.  Resource Extension Validation
  contents:
  - "7.1.  Resource Extension Validation\n   The IP Resources and AS Resources extensions\
    \ [RFC3779] define\n   critical extensions for INRs.  These are ASN.1 encoded\n\
    \   representations of the IPv4 and IPv6 address range and an AS number\n   set.\n\
    \   Valid resource certificates MUST have a valid IP address and/or AS\n   number\
    \ resource extension.  In order to validate a resource\n   certificate, the resource\
    \ extension MUST also be validated.  This\n   validation process relies on definitions\
    \ of comparison of resource\n   sets:\n      more specific\n         Given two\
    \ contiguous IP address ranges or two contiguous AS\n         number ranges, A\
    \ and B, A is \"more specific\" than B if range B\n         includes all IP addresses\
    \ or AS numbers described by range A,\n         and if range B is larger than\
    \ range A.\n      equal\n         Given two contiguous IP address ranges or two\
    \ contiguous AS\n         number ranges, A and B, A is \"equal\" to B if range\
    \ A describes\n         precisely the same collection of IP addresses or AS numbers\n\
    \         described by range B. The definition of \"inheritance\" in\n       \
    \  [RFC3779] is equivalent to this \"equality\" comparison.\n      encompass\n\
    \         Given two IP address and AS number sets, X and Y, X\n         \"encompasses\"\
    \ Y if, for every contiguous range of IP addresses\n         or AS numbers elements\
    \ in set Y, the range element is either\n         \"more specific\" than or \"\
    equal\" to a contiguous range element\n         within the set X.\n   Validation\
    \ of a certificate's resource extension in the context of a\n   certification\
    \ path (see Section 7.2 entails that for every adjacent\n   pair of certificates\
    \ in the certification path (certificates 'x' and\n   'x + 1'), the number resources\
    \ described in certificate 'x'\n   \"encompass\" the number resources described\
    \ in certificate 'x + 1',\n   and the resources described in the trust anchor\
    \ information\n   \"encompass\" the resources described in the first certificate\
    \ in the\n   certification path.\n"
- title: 7.2.  Resource Certification Path Validation
  contents:
  - "7.2.  Resource Certification Path Validation\n   Validation of signed resource\
    \ data using a target resource\n   certificate consists of verifying that the\
    \ digital signature of the\n   signed resource data is valid, using the public\
    \ key of the target\n   resource certificate, and also validating the resource\
    \ certificate in\n   the context of the RPKI, using the path validation process.\
    \  This\n   path validation process verifies, among other things, that a\n   prospective\
    \ certification path (a sequence of n certificates)\n   satisfies the following\
    \ conditions:\n      1.  for all 'x' in {1, ..., n-1}, the subject of certificate\
    \ 'x'\n          is the issuer of certificate ('x' + 1);\n      2.  certificate\
    \ '1' is issued by a trust anchor;\n      3.  certificate 'n' is the certificate\
    \ to be validated; and\n      4.  for all 'x' in {1, ..., n}, certificate 'x'\
    \ is valid.\n   Certificate validation entails verifying that all of the following\n\
    \   conditions hold, in addition to the certification path validation\n   criteria\
    \ specified in Section 6 of [RFC5280]:\n      1.  The certificate can be verified\
    \ using the issuer's public key\n          and the signature algorithm\n     \
    \ 2.  The current time lies within the certificate's Validity From\n         \
    \ and To values.\n      3.  The certificate contains all fields that MUST be present,\
    \ as\n          defined by this specification, and contains values for\n     \
    \     selected fields that are defined as allowable values by this\n         \
    \ specification.\n      4.  No field, or field value, that this specification\
    \ defines as\n          MUST NOT be present is used in the certificate.\n    \
    \  5.  The issuer has not revoked the certificate.  A revoked\n          certificate\
    \ is identified by the certificate's serial number\n          being listed on\
    \ the issuer's current CRL, as identified by the\n          CRLDP of the certificate,\
    \ the CRL is itself valid, and the\n          public key used to verify the signature\
    \ on the CRL is the same\n          public key used to verify the certificate\
    \ itself.\n      6.  The resource extension data is \"encompassed\" by the resource\n\
    \          extension data contained in a valid certificate where this\n      \
    \    issuer is the subject (the previous certificate in the context\n        \
    \  of the ordered sequence defined by the certification path).\n      7.  The\
    \ certification path originates with a certificate issued by\n          a trust\
    \ anchor, and there exists a signing chain across the\n          certification\
    \ path where the subject of Certificate 'x' in the\n          certification path\
    \ matches the issuer in Certificate 'x + 1'\n          in the certification path,\
    \ and the public key in Certificate\n          'x' can verify the signature value\
    \ in Certificate 'x+1'.\n   A certificate validation algorithm MAY perform these\
    \ tests in any\n   chosen order.\n   Certificates and CRLs used in this process\
    \ MAY be found in a locally\n   maintained cache, maintained by a regular synchronization\
    \ across the\n   distributed publication repository structure [RFC6481].\n   There\
    \ exists the possibility of encountering certificate paths that\n   are arbitrarily\
    \ long, or attempting to generate paths with loops as\n   means of creating a\
    \ potential denial-of-service (DOS) attack on an\n   RP.  An RP executing this\
    \ procedure MAY apply further heuristics to\n   guide the certification path validation\
    \ process to a halt in order to\n   avoid some of the issues associated with attempts\
    \ to validate such\n   malformed certification path structures.  Implementations\
    \ of resource\n   certificate validation MAY halt with a validation failure if\
    \ the\n   certification path length exceeds a locally defined configuration\n\
    \   parameter.\n"
- title: 8.  Design Notes
  contents:
  - "8.  Design Notes\n   The following notes provide some additional commentary on\
    \ the\n   considerations that lie behind some of the design choices that were\n\
    \   made in the design of this certificate profile.  These notes are\n   non-normative,\
    \ i.e., this section of the document does not constitute\n   a formal part of\
    \ the profile specification, and the interpretation of\n   key words as defined\
    \ in RFC 2119 are not applicable in this section\n   of the document.\n   Certificate\
    \ Extensions:\n         This profile does not permit the use of any other critical\
    \ or\n         non-critical extensions.  The rationale for this restriction is\n\
    \         that the resource certificate profile is intended for a\n         specific\
    \ defined use.  In this context, having certificates\n         with additional\
    \ non-critical extensions that RPs may see as\n         valid certificates without\
    \ understanding the extensions is\n         inappropriate, because if the RP were\
    \ in a position to\n         understand the extensions, it would contradict or\
    \ qualify this\n         original judgment of validity in some way.  This profile\
    \ takes\n         the position of minimalism over extensibility.  The specific\n\
    \         goal for the associated RPKI is to precisely match the INR\n       \
    \  allocation structure through an aligned certificate structure\n         that\
    \ describes the allocation and its context within the INR\n         distribution\
    \ hierarchy.  The profile defines a resource\n         certificate that is structured\
    \ to meet these requirements.\n   Certification Authorities and Key Values:\n\
    \         This profile uses a definition of an instance of a CA as a\n       \
    \  combination of a named entity and a key pair.  Within this\n         definition,\
    \ a CA instance cannot rollover a key pair.  However,\n         the entity can\
    \ generate a new instance of a CA with a new key\n         pair and roll over\
    \ all the signed subordinate products to the\n         new CA [RFC6489].\n   \
    \      This has a number of implications in terms of subject name\n         management,\
    \ CRL Scope, and repository publication point\n         management.\n   CRL Scope\
    \ and Key Values:\n         For CRL Scope, this profile specifies that a CA issues\
    \ a single\n         CRL at a time, and the scope of the CRL is all certificates\n\
    \         issued by this CA.  Because the CA instance is bound to a\n        \
    \ single key pair, this implies that the CA's public key, the key\n         used\
    \ to validate the CA's CRL, and the key used to validate the\n         certificates\
    \ revoked by that CRL are all the same key value.\n   Repository Publication Point:\n\
    \         The definition of a CA affects the design of the repository\n      \
    \   publication system.  In order to minimize the amount of forced\n         re-certification\
    \ on key rollover events, a repository\n         publication regime that uses\
    \ the same repository publication\n         point for all CA instances that refers\
    \ to the same entity, but\n         with different key values, will minimize the\
    \ extent of\n         re-generation of certificates to only immediate subordinate\n\
    \         certificates.  This is described in [RFC6489].\n   Subject Name:\n \
    \        This profile specifies that subject names must be unique per\n      \
    \   issuer, and does not specify that subject names must be\n         globally\
    \ unique (in terms of assured uniqueness).  This is due\n         to the nature\
    \ of the RPKI as a distributed PKI, implying that\n         there is no ready\
    \ ability for certification authorities to\n         coordinate a simple RPKI-wide\
    \ unique name space without\n         resorting to additional critical external\
    \ dependencies.  CAs\n         are advised to use subject name generation procedures\
    \ that\n         minimize the potential for name clashes.\n         One way to\
    \ achieve this is for a CA to use a subject name\n         practice that uses\
    \ the CommonName component of the\n         Distinguished Name as a constant value\
    \ for any given entity\n         that is the subject of CA-issued certificates,\
    \ and set the\n         serialNumber component of the Distinguished Name to a\
    \ value\n         that is derived from the hash of the subject public key value.\n\
    \         If the CA elects not to use the serialNumber component of the\n    \
    \     DistinguishedName, then it is considered beneficial that a CA\n        \
    \ generates CommonNames that have themselves a random component\n         that\
    \ includes significantly more than 40 bits of entropy in the\n         name. \
    \ Some non-normative recommendations to achieve this\n         include:\n    \
    \     1) Hash of the subject public key (encoded as ASCII HEX).\n            example:\
    \ cn=\"999d99d564de366a29cd8468c45ede1848e2cc14\"\n         2) A Universally Unique\
    \ IDentifier (UUID) [RFC4122]\n            example: cn=\"6437d442-6fb5-49ba-bbdb-19c260652098\"\
    \n         3) A randomly generated ASCII HEX encoded string of length 20\n   \
    \         or greater:\n            example: cn=\"0f8fcc28e3be4869bc5f8fa114db05e1\"\
    >\n            (A string of 20 ASCII HEX digits would have 80-bits of\n      \
    \      entropy)\n         4) An internal database key or subscriber ID combined\
    \ with one\n            of the above\n            example: cn=\"<DBkey1> (6437d442-6fb5-49ba-bbdb-\n\
    \            19c2606520980)\"\n            (The issuing CA may wish to be able\
    \ to extract the database\n            key or subscriber ID from the commonName.\
    \  Since only the\n            issuing CA would need to be able to parse the commonName,\n\
    \            the database key and the source of entropy (e.g., a UUID)\n     \
    \       could be separated in any way that the CA wants, as long as\n        \
    \    it conforms to the rules for PrintableString.  The separator\n          \
    \  could be a space character, parenthesis, hyphen, slash,\n            question\
    \ mark, etc.\n"
- title: 9.  Operational Considerations for Profile Agility
  contents:
  - "9.  Operational Considerations for Profile Agility\n   This profile requires\
    \ that relying parties reject certificates or\n   CRLs that do not conform to\
    \ the profile.  (Through the remainder of\n   this section, the term \"certificate\"\
    \ is used to refer to both\n   certificates and CRLs.)  This includes certificates\
    \ that contain\n   extensions that are prohibited, but that are otherwise valid\
    \ as per\n   [RFC5280].  This means that any change in the profile (e.g.,\n  \
    \ extensions, permitted attributes or optional fields, or field\n   encodings)\
    \ for certificates used in the RPKI will not be backward\n   compatible.  In a\
    \ general PKI context, this constraint probably would\n   cause serious problems.\
    \  In the RPKI, several factors minimize the\n   difficulty of effecting changes\
    \ of this sort.\n   Note that the RPKI is unique in that every relying party (RP)\n\
    \   requires access to every certificate issued by the CAs in this\n   system.\
    \  An important update of the certificates used in the RPKI\n   must be supported\
    \ by all CAs and RPs in the system, lest views of the\n   RPKI data differ across\
    \ RPs.  Thus, incremental changes require very\n   careful coordination.  It would\
    \ not be appropriate to introduce a new\n   extension, or authorize use of an\
    \ extant, standard extension, for a\n   security-relevant purpose on a piecemeal\
    \ basis.\n   One might imagine that the \"critical\" flag in X.509 certificate\n\
    \   extensions could be used to ameliorate this problem.  However, this\n   solution\
    \ is not comprehensive and does not address the problem of\n   adding a new, security-critical\
    \ extension.  (This is because such an\n   extension needs to be supported universally,\
    \ by all CAs and RPs.)\n   Also, while some standard extensions can be marked\
    \ either critical or\n   non-critical, at the discretion of the issuer, not all\
    \ have this\n   property, i.e., some standard extensions are always non-critical.\n\
    \   Moreover, there is no notion of criticality for attributes within a\n   name\
    \ or optional fields within a field or an extension.  Thus, the\n   critical flag\
    \ is not a solution to this problem.\n   In typical PKI deployments, there are\
    \ few CAs and many RPs.  However,\n   in the RPKI, essentially every CA in the\
    \ RPKI is also an RP.  Thus\n   the set of entities that will need to change in\
    \ order to issue\n   certificates under a new format is the same set of entities\
    \ that will\n   need to change to accept these new certificates.  To the extent\
    \ that\n   this is literally true, it says that CA/RP coordination for a change\n\
    \   is tightly linked anyway.  In reality, there is an important\n   exception\
    \ to this general observation.  Small ISPs and holders of\n   provider-independent\
    \ allocations are expected to use managed CA\n   services, offered by Regional\
    \ Internet Registries (RIRs) and\n   potentially by wholesale Internet Service\
    \ Providers (ISPs).  This\n   reduces the number of distinct CA implementations\
    \ that are needed and\n   makes it easier to effect changes for certificate issuance.\
    \  It seems\n   very likely that these entities also will make use of RP software\n\
    \   provided by their managed CA service provider, which reduces the\n   number\
    \ of distinct RP software implementations.  Also note that many\n   small ISPs\
    \ (and holders of provider-independent allocations) employ\n   default routes,\
    \ and thus need not perform RP validation of RPKI data,\n   eliminating these\
    \ entities as RPs.\n   Widely available PKI RP software does not cache large numbers\
    \ of\n   certificates, an essential strategy for the RPKI.  It does not\n   process\
    \ manifest or ROA data structures, essential elements of the\n   RPKI repository\
    \ system.  Experience shows that such software deals\n   poorly with revocation\
    \ status data.  Thus, extant RP software is not\n   adequate for the RPKI, although\
    \ some open source tools (e.g., OpenSSL\n   and cryptlib) can be used as building\
    \ blocks for an RPKI RP\n   implementation.  Thus, it is anticipated that RPs\
    \ will make use of\n   software that is designed specifically for the RPKI environment\
    \ and\n   is available from a limited number of open sources.  Several RIRs and\n\
    \   two companies are providing such software today.  Thus it is feasible\n  \
    \ to coordinate change to this software among the small number of\n   developers/maintainers.\n\
    \   If the resource certificate profile is changed in the future, e.g.,\n   by\
    \ adding a new extension or changing the allowed set of name\n   attributes or\
    \ encoding of these attributes, the following procedure\n   will be employed to\
    \ effect deployment in the RPKI.  The model is\n   analogous to that described\
    \ in [RPKI-ALG], but is simpler.\n   A new document will be issued as an update\
    \ to this RFC.  The CP for\n   the RPKI [RFC6484] will be updated to reference\
    \ the new certificate\n   profile.  The new CP will define a new policy OID for\
    \ certificates\n   issued under the new certificate profile.  The updated CP also\
    \ will\n   define a timeline for transition to the new certificate (CRL) format.\n\
    \   This timeline will define 3 phases and associated dates:\n      1.  At the\
    \ end of phase 1, all RPKI CAs MUST be capable of issuing\n          certificates\
    \ under the new profile, if requested by a subject.\n          Any certificate\
    \ issued under the new format will contain the\n          new policy OID.\n  \
    \    2.  During phase 2, CAs MUST issue certificates under the new\n         \
    \ profile, and these certificates MUST coexist with certificates\n          issued\
    \ under the old format.  (CAs will continue to issue\n          certificates under\
    \ the old OID/format as well.)  The old and\n          new certificates MUST be\
    \ identical, except for the policy OID\n          and any new extensions, encodings,\
    \ etc.  The new certificates,\n          and associated signed objects, will coexist\
    \ in the RPKI\n          repository system during this phase, analogous to what\
    \ is\n          required by an algorithm transition for the RPKI [RPKI-ALG].\n\
    \          Relying parties MAY make use of the old or the new certificate\n  \
    \        formats when processing signed objects retrieved from the RPKI\n    \
    \      repository system.  During this phase, a relying party that\n         \
    \ elects to process both formats will acquire the same values\n          for all\
    \ certificate fields that overlap between the old and\n          new formats.\
    \  Thus if either certificate format is verifiable,\n          the relying party\
    \ accepts the data from that certificate.\n          This allows CAs to issue\
    \ certificates under the new format\n          before all relying parties are\
    \ prepared to process that\n          format.\n      3.  At the beginning of phase\
    \ 3, all relying parties MUST be\n          capable of processing certificates\
    \ under the new format.\n          During this phase, CAs will issue new certificates\
    \ ONLY under\n          the new format.  Certificates issued under the old OID\
    \ will be\n          replaced with certificates containing the new policy OID.\
    \  The\n          repository system will no longer require matching old and new\n\
    \          certificates under the different formats.\n   At the end of phase 3,\
    \ all certificates under the old OID will have\n   been replaced.  The resource\
    \ certificate profile RFC will be replaced\n   to remove support for the old certificate\
    \ format, and the CP will be\n   replaced to remove reference to the old policy\
    \ OID and to the old\n   resource certificate profile RFC.  The system will have\
    \ returned to a\n   new, steady state.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   The Security Considerations of [RFC5280] and\
    \ [RFC3779] apply to\n   resource certificates.  The Security Considerations of\
    \ [RFC2986] and\n   [RFC4211] apply to resource certificate certification requests.\n\
    \   A resource certificate PKI cannot in and of itself resolve any forms\n   of\
    \ ambiguity relating to uniqueness of assertions of rights of use in\n   the event\
    \ that two or more valid certificates encompass the same\n   resource.  If the\
    \ issuance of resource certificates is aligned to the\n   status of resource allocations\
    \ and assignments, then the information\n   conveyed in a certificate is no better\
    \ than the information in the\n   allocation and assignment databases.\n   This\
    \ profile requires that the key used to sign an issued certificate\n   be the\
    \ same key used to sign the CRL that can revoke the certificate,\n   implying\
    \ that the certification path used to validate the signature\n   on a certificate\
    \ is the same as that used to validate the signature\n   of the CRL that can revoke\
    \ the certificate.  It is noted that this is\n   a tighter constraint than required\
    \ in X.509 PKIs, and there may be a\n   risk in using a path validation implementation\
    \ that is capable of\n   using separate validation paths for a certificate and\
    \ the\n   corresponding CRL.  If there are subject name collisions in the RPKI\n\
    \   as a result of CAs not following the guidelines provided here\n   relating\
    \ to ensuring sufficient entropy in constructing subject\n   names, and this is\
    \ combined with the situation that an RP uses an\n   implementation of validation\
    \ path construction that is not in\n   conformance with this RPKI profile, then\
    \ it is possible that the\n   subject name collisions can cause an RP to conclude\
    \ that an otherwise\n   valid certificate has been revoked.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   The authors would like to particularly acknowledge\
    \ the valued\n   contribution from Stephen Kent in reviewing this document and\n\
    \   proposing numerous sections of text that have been incorporated into\n   the\
    \ document.  The authors also acknowledge the contributions of\n   Sandy Murphy,\
    \ Robert Kisteleki, Randy Bush, Russ Housley, Ricardo\n   Patara, and Rob Austein\
    \ in the preparation and subsequent review of\n   this document.  The document\
    \ also reflects review comments received\n   from Roque Gagliano, Sean Turner,\
    \ and David Cooper.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC2986]   Nystrom, M. and B. Kaliski, \"PKCS #10: Certification\n\
    \               Request Syntax Specification Version 1.7\", RFC 2986,\n      \
    \         November 2000.\n   [RFC3779]   Lynn, C., Kent, S., and K. Seo, \"X.509\
    \ Extensions for IP\n               Addresses and AS Identifiers\", RFC 3779,\
    \ June 2004.\n   [RFC4211]   Schaad, J., \"Internet X.509 Public Key Infrastructure\n\
    \               Certificate Request Message Format (CRMF)\", RFC 4211,\n     \
    \          September 2005.\n   [RFC5280]   Cooper, D., Santesson, S., Farrell,\
    \ S., Boeyen, S.,\n               Housley, R., and W. Polk, \"Internet X.509 Public\
    \ Key\n               Infrastructure Certificate and Certificate Revocation\n\
    \               List (CRL) Profile\", RFC 5280, May 2008.\n   [RFC5781]   Weiler,\
    \ S., Ward, D., and R. Housley, \"The rsync URI\n               Scheme\", RFC\
    \ 5781, February 2010.\n   [RFC6484]   Kent, S., Kong, D., Seo, K., and R. Watro,\
    \ \"Certificate\n               Policy (CP) for the Resource Public Key Infrastructure\n\
    \               (RPKI)\", BCP 173, RFC 6484, February 2012.\n   [RFC6485]   Huston,\
    \ G., \"The Profile for Algorithms and Key Sizes for\n               Use in the\
    \ Resource Public Key Infrastructure (RPKI)\",\n               RFC 6485, February\
    \ 2012.\n   [X.509]     ITU-T, \"Recommendation X.509: The Directory -\n     \
    \          Authentication Framework\", 2000.\n   [X.680]     ITU-T, \"Recommendation\
    \ X.680 (2002) | ISO/IEC 8824-\n               1:2002, Information technology\
    \ - Abstract Syntax Notation\n               One (ASN.1): Specification of basic\
    \ notation\", 2002.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [RFC2985]   Nystrom, M. and B. Kaliski, \"\
    PKCS #9: Selected Object\n               Classes and Attribute Types Version 2.0\"\
    , RFC 2985,\n               November 2000.\n   [RFC3986]   Berners-Lee, T., Fielding,\
    \ R., and L. Masinter, \"Uniform\n               Resource Identifier (URI): Generic\
    \ Syntax\", STD 66,\n               RFC 3986, January 2005.\n   [RFC4122]   Leach,\
    \ P., Mealling, M., and R. Salz, \"A Universally\n               Unique IDentifier\
    \ (UUID) URN Namespace\", RFC 4122,\n               July 2005.\n   [RFC4514] \
    \  Zeilenga, K., \"Lightweight Directory Access Protocol\n               (LDAP):\
    \ String Representation of Distinguished Names\",\n               RFC 4514, June\
    \ 2006.\n   [RFC6480]   Lepinski, M. and S. Kent, \"An Infrastructure to Support\n\
    \               Secure Internet Routing\", RFC 6480, February 2012.\n   [RFC6481]\
    \   Huston, G., Loomans, R., and G. Michaelson, \"A Profile\n               for\
    \ Resource Certificate Repository Structure\", RFC 6481,\n               February\
    \ 2012.\n   [RFC6486]   Austein, R., Huston, G., Kent, S., and M. Lepinski,\n\
    \               \"Manifests for the Resource Public Key Infrastructure\n     \
    \          (RPKI)\", RFC 6486, February 2012.\n   [RFC6488]   Lepinski, M., Chi,\
    \ A., and S. Kent, \"Signed Object\n               Template for the Resource Public\
    \ Key Infrastructure\n               (RPKI)\", RFC 6488, February 2012.\n   [RFC6489]\
    \   Huston, G., Michaelson, G., and S. Kent, \"Certification\n               Authority\
    \ (CA) Key Rollover in the Resource Public Key\n               Infrastructure\
    \ (RPKI)\", BCP 174, RFC 6489, February 2012.\n   [RPKI-ALG]  Gagliano, R., Kent,\
    \ S., and S. Turner, \"Algorithm Agility\n               Procedure for RPKI\"\
    , Work in Progress, November 2011.\n"
- title: Appendix A.  Example Resource Certificate
  contents:
  - "Appendix A.  Example Resource Certificate\n   The following is an example resource\
    \ certificate.\n   Certificate Name: 9JfgAEcq7Q-47IwMC5CJIJr6EJs.cer\n   Data:\n\
    \     Version: 3 (0x2)\n     Serial: 1500 (0x5dc)\n     Signature Algorithm: SHA256WithRSAEncryption\n\
    \     Issuer: CN=APNIC Production-CVPQSgUkLy7pOXdNeVWGvnFX_0s\n     Validity\n\
    \      Not Before: Oct 25 12:50:00 2008 GMT\n       Not After : Jan 31 00:00:00\
    \ 2010 GMT\n     Subject: CN=A91872ED\n     Subject Public Key Info:\n       Public\
    \ Key Algorithm: rsaEncryption\n       RSA Public Key: (2048 bit)\n       Modulus\
    \ (2048 bit):\n         00:bb:fb:4a:af:a4:b9:dc:d0:fa:6f:67:cc:27:39:\n      \
    \   34:d1:80:40:37:de:88:d1:64:a2:f1:b3:fa:c6:7f:\n         bb:51:df:e1:c7:13:92:c3:c8:a2:aa:8c:d1:11:b3:\n\
    \         aa:99:c0:ac:54:d3:65:83:c6:13:bf:0d:9f:33:2d:\n         39:9f:ab:5f:cd:a3:e9:a1:fb:80:7d:1d:d0:2b:48:\n\
    \         a5:55:e6:24:1f:06:41:35:1d:00:da:1f:99:85:13:\n         26:39:24:c5:9a:81:15:98:fb:5f:f9:84:38:e5:d6:\n\
    \         70:ce:5a:02:ca:dd:61:85:b3:43:2d:0b:35:d5:91:\n         98:9d:da:1e:0f:c2:f6:97:b7:97:3e:e6:fc:c1:c4:\n\
    \         3f:30:c4:81:03:25:99:09:4c:e2:4a:85:e7:46:4b:\n         60:63:02:43:46:51:4d:ed:fd:a1:06:84:f1:4e:98:\n\
    \         32:da:27:ee:80:82:d4:6b:cf:31:ea:21:af:6f:bd:\n         70:34:e9:3f:d7:e4:24:cd:b8:e0:0f:8e:80:eb:11:\n\
    \         1f:bc:c5:7e:05:8e:5c:7b:96:26:f8:2c:17:30:7d:\n         08:9e:a4:72:66:f5:ca:23:2b:f2:ce:54:ec:4d:d9:\n\
    \         d9:81:72:80:19:95:57:da:91:00:d9:b1:e8:8c:33:\n         4a:9d:3c:4a:94:bf:74:4c:30:72:9b:1e:f5:8b:00:\n\
    \         4d:e3\n       Exponent: 65537 (0x10001)\n     X509v3 extensions:\n \
    \      X509v3 Subject Key Identifier:\n         F4:97:E0:00:47:2A:ED:0F:B8:EC:8C:0C:0B:90:89:\n\
    \         20:9A:FA:10:9B\n       X509v3 Authority Key Identifier:\n         keyid:09:53:D0:4A:05:24:2F:2E:E9:39:77:4D:79:\n\
    \         55:86:BE:71:57:FF:4B\n       X509v3 Key Usage: critical\n         Certificate\
    \ Sign, CRL Sign\n       X509v3 Basic Constraints: critical\n         CA:TRUE\n\
    \       X509v3 CRL Distribution Points:\n         URI:rsync://rpki.apnic.net/repository/A3C38A24\n\
    \             D60311DCAB08F31979BDBE39/CVPQSgUkLy7pOXdNe\n             VWGvnFX_0s.crl\n\
    \       Authority Information Access:\n          CA Issuers - URI:rsync://rpki.apnic.net/repos\n\
    \             itory/8BDFC7DED5FD11DCB14CF4B1A703F9B7/CVP\n             QSgUkLy7pOXdNeVWGvnFX_0s.cer\n\
    \       X509v3 Certificate Policies: critical\n          Policy: 1.3.6.1.5.5.7.14.2\n\
    \       Subject Information Access:\n          CA Repository - URI:rsync://rpki.apnic.net/mem\n\
    \              ber_repository/A91872ED/06A83982887911DD81\n              3F432B2086D636/\n\
    \          Manifest - URI:rsync://rpki.apnic.net/member_r\n              epository/A91872ED/06A83982887911DD813F432\n\
    \              B2086D636/9JfgAEcq7Q-47IwMC5CJIJr6EJs.mft\n        sbgp-autonomousSysNum:\
    \ critical\n          Autonomous System Numbers:\n            24021\n        \
    \    38610\n            131072\n            131074\n        sbgp-ipAddrBlock:\
    \ critical\n          IPv4:\n            203.133.248.0/22\n            203.147.108.0/23\n\
    \   Signature Algorithm: sha256WithRSAEncryption\n       51:4c:77:e4:21:64:80:e9:35:30:20:9f:d8:4b:88:60:b8:1f:\n\
    \       73:24:9d:b5:17:60:65:6a:28:cc:43:4b:68:97:ca:76:07:eb:\n       dc:bd:a2:08:3c:8c:56:38:c6:0a:1e:a8:af:f5:b9:42:02:6b:\n\
    \       77:e0:b1:1c:4a:88:e6:6f:b6:17:d3:59:41:d7:a0:62:86:59:\n       29:79:26:76:34:d1:16:2d:75:05:cb:b2:99:bf:ca:c6:68:1b:\n\
    \       b6:a9:b0:f4:43:2e:df:e3:7f:3c:b3:72:1a:99:fa:5d:94:a1:\n       eb:57:9c:9a:2c:87:d6:40:32:c9:ff:a6:54:b8:91:87:fd:90:\n\
    \       55:ef:12:3e:1e:2e:cf:c5:ea:c3:4c:09:62:4f:88:00:a0:7f:\n       cd:67:83:bc:27:e1:74:2c:18:4e:3f:12:1d:ef:29:0f:e3:27:\n\
    \       00:ce:14:eb:f0:01:f0:36:25:a2:33:a8:c6:2f:31:18:22:30:\n       cf:ca:97:43:ed:84:75:53:ab:b7:6c:75:f7:2f:55:5c:2e:82:\n\
    \       0a:be:91:59:bf:c9:06:ef:bb:b4:a2:71:9e:03:b1:25:8e:29:\n       7a:30:88:66:b4:f2:16:6e:df:ad:78:ff:d3:b2:9c:29:48:e3:\n\
    \       be:87:5c:fc:20:2b:df:da:ca:30:58:c3:04:c9:63:72:48:8c:\n       0a:5f:97:71\n"
- title: Appendix B.  Example Certificate Revocation List
  contents:
  - "Appendix B.  Example Certificate Revocation List\n   The following is an example\
    \ Certificate Revocation List.\n   CRL Name: q66IrWSGuBE7jqx8PAUHAlHCqRw.crl\n\
    \   Data:\n     Version: 2\n     Signature Algorithm:\n       Hash: SHA256, Encryption:\
    \ RSA\n     Issuer: CN=Demo Production APNIC CA - Not for real use,\n       E=ca@apnic.net\n\
    \     This Update: Thu Jul 27 06:30:34 2006 GMT\n     Next Update: Fri Jul 28\
    \ 06:30:34 2006 GMT\n     Authority Key Identifier: Key Identifier:\n       ab:ae:88:ad:64:86:b8:11:3b:8e:ac:7c:3c:05:\n\
    \       07:02:51:c2:a9:1c\n     CRLNumber: 4\n     Revoked Certificates: 1\n \
    \      Serial Number: 1\n       Revocation Date: Mon Jul 17 05:10:19 2006 GMT\n\
    \       Serial Number: 2\n       Revocation Date: Mon Jul 17 05:12:25 2006 GMT\n\
    \       Serial Number: 4\n       Revocation Date: Mon Jul 17 05:40:39 2006 GMT\n\
    \     Signature:\n       b2:5a:e8:7c:bd:a8:00:0f:03:1a:17:fd:40:2c:46:\n     \
    \  0e:d5:64:87:e7:e7:bc:10:7d:b6:3e:39:21:a9:12:\n       f4:5a:d8:b8:d4:bd:57:1a:7d:2f:7c:0d:c6:4f:27:\n\
    \       17:c8:0e:ae:8c:89:ff:00:f7:81:97:c3:a1:6a:0a:\n       f7:d2:46:06:9a:d1:d5:4d:78:e1:b7:b0:58:4d:09:\n\
    \       d6:7c:1e:a0:40:af:86:5d:8c:c9:48:f6:e6:20:2e:\n       b9:b6:81:03:0b:51:ac:23:db:9f:c1:8e:d6:94:54:\n\
    \       66:a5:68:52:ee:dd:0f:10:5d:21:b8:b8:19:ff:29:\n       6f:51:2e:c8:74:5c:2a:d2:c5:fa:99:eb:c5:c2:a2:\n\
    \       d0:96:fc:54:b3:ba:80:4b:92:7f:85:54:76:c9:12:\n       cb:32:ea:1d:12:7b:f8:f9:a2:5c:a1:b1:06:8e:d8:\n\
    \       c5:42:61:00:8c:f6:33:11:29:df:6e:b2:cc:c3:7c:\n       d3:f3:0c:8d:5c:49:a5:fb:49:fd:e7:c4:73:68:0a:\n\
    \       09:0e:6d:68:a9:06:52:3a:36:4f:19:47:83:59:da:\n       02:5b:2a:d0:8a:7a:33:0a:d5:ce:be:b5:a2:7d:8d:\n\
    \       59:a1:9d:ee:60:ce:77:3d:e1:86:9a:84:93:90:9f:\n       34:a7:02:40:59:3a:a5:d1:18:fb:6f:fc:af:d4:02:\n\
    \       d9\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Geoff Huston\n   APNIC\n   EMail: gih@apnic.net\n   URI:\
    \   http://www.apnic.net\n   George Michaelson\n   APNIC\n   EMail: ggm@apnic.net\n\
    \   URI:   http://www.apnic.net\n   Robert Loomans\n   APNIC\n   EMail: robertl@apnic.net\n\
    \   URI:   http://www.apnic.net\n"
