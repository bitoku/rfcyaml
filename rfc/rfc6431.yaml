- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                      M. Boucadair
  contents:
  - "Independent Submission                                      M. Boucadair\n  \
    \          Huawei Port Range Configuration Options for PPP\n                 \
    \      IP Control Protocol (IPCP)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines two Huawei IPCP (IP Control Protocol) options\n\
    \   used to convey a set of ports.  These options can be used in the\n   context\
    \ of port range-based solutions or NAT-based solutions for port\n   delegation\
    \ and forwarding purposes.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6431.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Use Cases ..................................................3\n  \
    \    1.2. Terminology ................................................3\n    \
    \  1.3. Requirements Language ......................................4\n   2. Port\
    \ Range Options ..............................................4\n      2.1. Description\
    \ of Port Range Value and Port Range Mask ........4\n      2.2. Cryptographically\
    \ Random Port Range Option .................6\n           2.2.1. Random Port Delegation\
    \ Function .....................6\n           2.2.2. Description of Cryptographically\
    \ Random Port\n                  Range Option ........................................8\n\
    \      2.3. Illustration Examples .....................................10\n  \
    \         2.3.1. Overview ...........................................10\n    \
    \       2.3.2. Successful Flow: Port Range Options Supported\n               \
    \   by Both the Client and the Server ..................10\n           2.3.3.\
    \ Port Range Option Not Supported by the Server ......11\n           2.3.4. Port\
    \ Range Option Not Supported by the Client ......13\n   3. Security Considerations\
    \ ........................................14\n   4. Contributors ...................................................14\n\
    \   5. Acknowledgements ...............................................14\n  \
    \ 6. References .....................................................14\n    \
    \  6.1. Normative References ......................................14\n      6.2.\
    \ Informative References ....................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Within the context of IPv4 address depletion, several solutions\
    \ have\n   been investigated to share IPv4 addresses.  Two flavors can be\n  \
    \ distinguished: NAT-based solutions (e.g., Carrier-Grade NAT (CGN)\n   [CGN-REQS])\
    \ and port range-based solutions (e.g., [RFC6346]\n   [PORT-RANGE-ARCH] [SAM]).\
    \  Port range-based solutions do not require\n   an additional NAT level in the\
    \ service provider's domain.  Several\n   means may be used to convey port range\
    \ information.\n   This document defines the notion of \"Port Mask\", which is\
    \ generic and\n   flexible.  Several allocation schemes may be implemented when\
    \ using a\n   Port Mask.  It proposes a basic mechanism that allows the allocation\n\
    \   of a unique port range to a requesting client.  This document defines\n  \
    \ Huawei IPCP options to be used to carry port range information.\n   IPv4 address\
    \ exhaustion is only provided as an example of the usage\n   of the PPP IPCP options\
    \ defined in this document.  In particular,\n   Port Range options may be used\
    \ independently of the presence of the\n   IP-Address IPCP Option.\n   This document\
    \ adheres to the considerations defined in [RFC2153].\n   This document is not\
    \ a product of the PPPEXT working group.\n   Note that IPR disclosures apply to\
    \ this document (see\n   https://datatracker.ietf.org/ipr/).\n"
- title: 1.1.  Use Cases
  contents:
  - "1.1.  Use Cases\n   Port Range options can be used in port range-based solutions\
    \ (e.g.,\n   [RFC6346]) or in a CGN-based solution.  These options can be used\
    \ in\n   a CGN context to bypass the NAT (i.e., for transparent NAT traversal,\n\
    \   and to avoid involving several NAT levels in the path) or to delegate\n  \
    \ one or a set of ports to the requesting client (e.g., to avoid the\n   ALG (Application\
    \ Level Gateway), or for port forwarding).\n   Section 3.3.1 of [RFC6346] specifies\
    \ an example of usage of the\n   options defined in this document.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   To differentiate between a port range containing a contiguous\
    \ span of\n   port numbers and a port range with non-contiguous and possibly random\n\
    \   port numbers, the following denominations are used:\n   o  Contiguous Port\
    \ Range: A set of port values that form a contiguous\n      sequence.\n   o  Non-Contiguous\
    \ Port Range: A set of port values that do not form a\n      contiguous sequence.\n\
    \   o  Random Port Range: A cryptographically random set of port values.\n   Unless\
    \ explicitly mentioned, \"Port Mask\" refers to the tuple (Port\n   Range Value,\
    \ Port Range Mask).\n   In addition, this document makes use of the following\
    \ terms:\n   o  Delegated port or delegated port range: A port or a range of ports\n\
    \      that belong to an IP address managed by an upstream device (such\n    \
    \  as NAT) and that are delegated to a client for use as the source\n      address\
    \ and port when sending packets.\n   o  Forwarded port or forwarder port range:\
    \ A port or a range of ports\n      that belong to an IP address managed by an\
    \ upstream device such as\n      (NAT) and that are statically mapped to the internal\
    \ IP address of\n      the client and same port number of the client.\n   This\
    \ memo uses the same terminology as [RFC1661].\n"
- title: 1.3.  Requirements Language
  contents:
  - "1.3.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Port Range Options
  contents:
  - "2.  Port Range Options\n   This section defines the IPCP Option for port range\
    \ delegation.  The\n   format of vendor-specific options is defined in [RFC2153].\
    \  Below are\n   the values to be conveyed when the Port Range Option is used:\n\
    \   o  Organizationally Unique Identifier (OUI): This field is set to\n      781DBA\
    \ (hex).\n   o  Kind: This field is set to F0 (hex).\n   o  Value(s): The content\
    \ of this field is specified in Sections 2.1\n      and 2.2.2.\n"
- title: 2.1.  Description of Port Range Value and Port Range Mask
  contents:
  - "2.1.  Description of Port Range Value and Port Range Mask\n   The Port Range\
    \ Value and Port Range Mask are used to specify one\n   range of ports (contiguous\
    \ or non-contiguous) pertaining to a given\n   IP address.  Concretely, the Port\
    \ Range Mask and Port Range Value are\n   used to notify a remote peer about the\
    \ Port Mask to be applied when\n   selecting a port value as a source port.  The\
    \ Port Range Value is\n   used to infer a set of allowed port values.  A Port\
    \ Range Mask\n   defines a set of ports that all have in common a subset of\n\
    \   pre-positioned bits.  This set of ports is also referred to as the\n   port\
    \ range.\n   Two port numbers are said to belong to the same port range if and\n\
    \   only if they have the same Port Range Mask.\n   A Port Mask is composed of\
    \ a Port Range Value and a Port Range Mask:\n   o  The Port Range Value indicates\
    \ the value of the significant bits\n      of the Port Mask.  The Port Range Value\
    \ is coded as follows:\n      *  The significant bits may take a value of 0 or\
    \ 1.\n      *  All of the other bits (i.e., non-significant ones) are set\n  \
    \       to 0.\n   o  The Port Range Mask indicates, by the bit(s) set to 1, the\n\
    \      position of the significant bits of the Port Range Value.\n   This IPCP\
    \ Configuration Option provides a way to negotiate the Port\n   Range to be used\
    \ on the local end of the link.  It allows the sender\n   of the Configure-Request\
    \ message to state which port range associated\n   with a given IP address is\
    \ desired, or to request that the peer\n   provide the configuration.  The peer\
    \ can provide this information by\n   NAKing the option, and returning a valid\
    \ port range (i.e., (Port\n   Range Value, Port Range Mask)).\n   If a peer issues\
    \ a request enclosing the IPCP Port Range Option and\n   the server does not support\
    \ this option, the Port Range Option is\n   rejected by the server.\n   The set\
    \ of ports conveyed in an IPCP Port Range Option applies to all\n   transport\
    \ protocols.\n   The set of ports conveyed in an IPCP Port Range Option is revoked\n\
    \   when the link is no longer up (e.g., when Terminate-Request and\n   Terminate-Ack\
    \ are exchanged).\n   The Port Range IPCP option adheres to the format defined\
    \ in\n   Section 2.1 of [RFC2153].  The \"Value(s)\" field of the option defined\n\
    \   in [RFC2153] when conveying the Port Range IPCP Option is provided in\n  \
    \ Figure 1.\n      0                   1                   2                 \
    \  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \ |M|          Reserved           |      Port Range Value         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |      Port Range Mask          |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Most significant bit (MSB) network order is used for encoding the\n   Port\
    \ Range Value and Port Range Mask fields.\n              Figure 1: Format of the\
    \ Port Range IPCP Option\n   o  M: mode bit.  The mode bit indicates the mode\
    \ for which the port\n      range is allocated.  A value of zero indicates that\
    \ the port\n      ranges are delegated, while a value of 1 indicates that the\
    \ port\n      ranges are port-forwarded.\n   o  Port Range Value (PRV): The PRV\
    \ indicates the value of the\n      significant bits of the Port Mask.  By default,\
    \ no PRV is\n      assigned.\n   o  Port Range Mask (PRM): The Port Range Mask\
    \ indicates the position\n      of the bits that are used to build the Port Range\
    \ Value.  By\n      default, no PRM value is assigned.  The 1 values in the Port\
    \ Range\n      Mask indicate by their position the significant bits of the Port\n\
    \      Range Value.\n   Figure 2 provides an example of the resulting port range:\n\
    \   - The Port Range Mask is set to 0001010000000000 (5120).\n   - The Port Range\
    \ Value is set to 0000010000000000 (1024).\n      0                   1\n    \
    \  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0| Port Range Mask\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \             |   |\n             |   | (two significant bits)\n             v\
    \   v\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |0 0 0 0 0 1 0 0 0 0 0 0\
    \ 0 0 0 0| Port Range Value\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |x x x 0 x 1 x x x x x x x x x x| Usable ports\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \      (x may be set to 0 or 1)\n         Figure 2: Example of Port Range Mask\
    \ and Port Range Value\n   Port values belonging to this port range must have\
    \ the fourth bit\n   from the left set to 0, and the sixth bit from the left set\
    \ to 1.\n   Only these port values will be used by the peer when enforcing the\n\
    \   configuration conveyed by PPP IPCP.\n"
- title: 2.2.  Cryptographically Random Port Range Option
  contents:
  - "2.2.  Cryptographically Random Port Range Option\n   A cryptographically random\
    \ Port Range Option may be used as a\n   mitigation tool against blind attacks\
    \ such as those described in\n   [RFC6056].\n"
- title: 2.2.1.  Random Port Delegation Function
  contents:
  - "2.2.1.  Random Port Delegation Function\n   Delegating random ports can be achieved\
    \ by defining a function that\n   takes as input a key 'K' and an integer 'x'\
    \ within the 1024-65535\n   port range and produces an output 'y' also within\
    \ the 1024-65535 port\n   range.\n   The cryptographic mechanism uses the 1024-65535\
    \ port range rather\n   than the ephemeral range, 49152-65535, for generating\
    \ a set of ports\n   to optimize IPv4 address utilization efficiency (see \"Appendix\
    \ B.\n   Address Space Multiplicative Factor\" of [RFC6269]).  This behavior is\n\
    \   compliant with the recommendation to use the whole 1024-65535 port\n   range\
    \ for the ephemeral port selection algorithms (see Section 3.2 of\n   [RFC6056]).\n\
    \   The cryptographic mechanism ensures that the entire 64k port range\n   can\
    \ be efficiently distributed to multiple nodes such that when nodes\n   calculate\
    \ the ports, the results will never overlap with ports that\n   other nodes have\
    \ calculated (property of permutation), and ports in\n   the reserved range (smaller\
    \ than 1024) are not used.  As the\n   randomization is done cryptographically,\
    \ an attacker seeing a node\n   using some port X cannot determine which other\
    \ ports the node may be\n   using (as the attacker does not know the key).  Calculation\
    \ of the\n   random port list is done as follows:\n   The cryptographic mechanism\
    \ uses an encryption function y = E(K,x)\n   that takes as input a key K (for\
    \ example, 128 bits) and an integer x\n   (the plaintext) in the 1024-65535 port\
    \ range, and produces an output\n   y (the ciphertext), also an integer in the\
    \ 1024-65535 port range.\n   This section describes one such encryption function,\
    \ but others are\n   also possible.\n   The server will select the key K.  When\
    \ the server wants to allocate,\n   for example, 2048 random ports, it selects\
    \ a starting point 'a'\n   (1024 <= a <= 65536-2048) such that the port range\
    \ (a, a+2048) does\n   not overlap with any other active client, and calculates\
    \ the values\n   E(K,a), E(K,a+1), E(K,a+2), ..., E(K,a+2046), E(K,a+2047).  These\
    \ are\n   the port numbers allocated for this node.  Instead of sending the\n\
    \   port numbers individually, the server just sends the values 'K', 'a',\n  \
    \ and '2048'.  The client will then repeat the same calculation.\n   The server\
    \ SHOULD use a different key K for each IPv4 address it\n   allocates, to make\
    \ attacks as difficult as possible.  This way,\n   learning the key K used in\
    \ IPv4 address IP1 would not help in\n   attacking IPv4 address IP2 where IP2\
    \ is allocated by the same server\n   to different nodes.\n   With typical encryption\
    \ functions (such as AES and DES), the input\n   (plaintext) and output (ciphertext)\
    \ are blocks of some fixed size --\n   for example, 128 bits for AES, and 64 bits\
    \ for DES.  For port\n   randomization, we need an encryption function whose input\
    \ and output\n   is an integer in the 1024-65535 port range.\n   One possible\
    \ way to do this is to use the 'Generalized Feistel\n   Cipher' [CIPHERS] construction\
    \ by Black and Rogaway, with AES as the\n   underlying round function.\n   This\
    \ would look as follows (using pseudo-code):\n           def E(k, x):\n      \
    \         y = Feistel16(k, x)\n               if y >= 1024:\n                \
    \     return y\n               else:\n                     return E(k, y)\n  \
    \ Note that although E(k,x) is recursive, it is guaranteed to\n   terminate. \
    \ The average number of iterations is just slightly over 1.\n   Feistel16 is a\
    \ 16-bit block cipher:\n           def Feistel16(k, x):\n               left =\
    \ x & 0xff\n               right = x >> 8\n               for round = 1 to 3:\n\
    \                   temp = left ^ FeistelRound(k, round, right))\n           \
    \        left = right\n                   right = temp\n               return\
    \ (right << 8) | left\n   The Feistel round function uses:\n           def FeistelRound(k,\
    \ round, x):\n               msg[0] = round\n               msg[1] = x\n     \
    \          msg[2...15] = 0\n               return AES(k, msg)[0]\n   Performance:\
    \ To generate a list of 2048 port numbers, about 6000\n   calls to AES are required\
    \ (i.e., encrypting 96 kilobytes).  Thus, it\n   will not be a problem for any\
    \ device that can do, for example, HTTPS\n   (web browsing over Secure Sockets\
    \ Layer/Transport Layer Security\n   (SSL/TLS)).\n"
- title: 2.2.2.  Description of Cryptographically Random Port Range Option
  contents:
  - "2.2.2.  Description of Cryptographically Random Port Range Option\n   The cryptographically\
    \ random Port Range IPCP Option adheres to the\n   format defined in Section 2.1\
    \ of [RFC2153].  The \"Value(s)\" field of\n   the option defined in [RFC2153]\
    \ when conveying the cryptographically\n   random Port Range IPCP Option is illustrated\
    \ in Figure 3.\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |M|          Reserved           |          function             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \      starting point         |   number of delegated ports   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                             key K               ...\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     ...                                                           ...\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     ...\
    \                                                           ...\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     ...                                                             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    Figure\
    \ 3: Format of the Cryptographically Random Port Range Option\n   o  M: mode bit.\
    \  The mode bit indicates the mode for which the port\n      range is allocated.\
    \  A value of zero indicates that the port\n      ranges are delegated, while\
    \ a value of 1 indicates that the port\n      ranges are port-forwarded.\n   o\
    \  Function: A 16-bit field whose value is associated with predefined\n      encryption\
    \ functions.  This specification associates value 1 with\n      the predefined\
    \ function described in Section 2.2.1.\n   o  Starting Point: A 16-bit value used\
    \ as an input to the specified\n      function.\n   o  Number of delegated ports:\
    \ A 16-bit value specifying the number of\n      ports delegated to the client\
    \ for use as source port values.\n   o  Key K: A 128-bit key used as input to\
    \ the predefined function for\n      delegated port calculation.\n   When the\
    \ option is included in the IPCP Configure-Request, the \"Key\n   K\" and \"Starting\
    \ Point\" fields SHALL be set to all zeros.  The\n   requester MAY indicate in\
    \ the \"Function\" field which encryption\n   function the requester prefers,\
    \ and in the \"Number of Delegated\n   Ports\" field the number of ports the requester\
    \ would like to obtain.\n   If the requester has no preference, it SHALL also\
    \ set the \"Function\"\n   field and/or \"Number of Delegated Ports\" field to\
    \ zero.\n   The usage of the option in IPCP message negotiation (Request/Reject/\n\
    \   Nak/Ack) follows the logic described for Port Mask and Port Range\n   options\
    \ in Section 2.1.\n"
- title: 2.3.  Illustration Examples
  contents:
  - '2.3.  Illustration Examples

    '
- title: 2.3.1.  Overview
  contents:
  - "2.3.1.  Overview\n   The following flows provide examples of the usage of IPCP\
    \ to convey\n   the Port Range Option.  As illustrated in Figures 4, 5, and 6,\
    \ IPCP\n   messages are exchanged between a Host and a BRAS (Broadband Remote\n\
    \   Access Server).\n"
- title: '2.3.2.  Successful Flow: Port Range Options Supported by Both the Client'
  contents:
  - "2.3.2.  Successful Flow: Port Range Options Supported by Both the Client\n  \
    \      and the Server\n   The following message exchange (Figure 4) depicts a\
    \ successful IPCP\n   configuration operation where the Port Range IPCP Option\
    \ is used.\n     +-----+                                          +-----+\n  \
    \   | Host|                                          | BRAS|\n     +-----+   \
    \                                       +-----+\n        |                   \
    \                             |\n        |              (1) IPCP Configure-Request\
    \        |\n        |                  IP ADDRESS=0.0.0.0            |\n     \
    \   |                  PORT RANGE VALUE=0            |\n        |            \
    \      PORT RANGE MASK=0             |\n        |===============================================>|\n\
    \        |                                                |\n        |       \
    \       (2) IPCP Configure-Nak            |\n        |                  IP ADDRESS=a.b.c.d\
    \            |\n        |                  PORT RANGE VALUE=80           |\n \
    \       |                  PORT RANGE MASK=496           |\n        |<===============================================|\n\
    \        |                                                |\n        |       \
    \       (3) IPCP Configure-Request        |\n        |                  IP ADDRESS=a.b.c.d\
    \            |\n        |                  PORT RANGE VALUE=80           |\n \
    \       |                  PORT RANGE MASK=496           |\n        |===============================================>|\n\
    \        |                                                |\n        |       \
    \       (4) IPCP Configure-Ack            |\n        |                  IP ADDRESS=a.b.c.d\
    \            |\n        |                  PORT RANGE VALUE=80           |\n \
    \       |                  PORT RANGE MASK=496           |\n        |<===============================================|\n\
    \        |                                                |\n                \
    \         Figure 4: Successful Flow\n   The main steps of this flow are listed\
    \ below:\n      (1)  The Host sends a first Configure-Request, which includes\
    \ the\n           set of options it desires to negotiate.  All of these\n    \
    \       configuration options are negotiated simultaneously.  In this\n      \
    \     step, the Configure-Request carries information about the IP\n         \
    \  address, the Port Range Value, and the Port Range Mask.  The\n           IP-Address\
    \ Option is set to 0.0.0.0, the Port Range Value is\n           set to 0, and\
    \ the Port Range Mask is set to 0.\n      (2)  The BRAS sends back a Configure-Nak\
    \ and sets the enclosed\n           options to its preferred values.  In this\
    \ step, the\n           IP-Address Option is set to a.b.c.d, the Port Range Value\
    \ is\n           set to 80, and the Port Range Mask is set to 496.\n      (3)\
    \  The Host re-sends a Configure-Request requesting that the\n           IP-Address\
    \ Option be set to a.b.c.d, the Port Range Value be\n           set to 80, and\
    \ the Port Range Mask be set to 496.\n      (4)  The BRAS sends a Configure-Ack\
    \ message.\n   As a result of this exchange, the Host is configured to use a.b.c.d\n\
    \   as its local IP address, and the following 128 contiguous port ranges\n  \
    \ resulting from the Port Mask (Port Range Value == 0, Port Range Mask\n   ==\
    \ 496):\n      - from 80 to 95\n      - from 592 to 607\n      - ...\n      -\
    \ from 65104 to 65119\n"
- title: 2.3.3.  Port Range Option Not Supported by the Server
  contents:
  - "2.3.3.  Port Range Option Not Supported by the Server\n   Figure 5 depicts an\
    \ exchange of messages where the BRAS does not\n   support the IPCP Port Range\
    \ Option.\n     +-----+                                          +-----+\n   \
    \  | Host|                                          | BRAS|\n     +-----+    \
    \                                      +-----+\n        |                    \
    \                            |\n        |              (1) IPCP Configure-Request\
    \        |\n        |                  IP ADDRESS=0.0.0.0            |\n     \
    \   |                  PORT RANGE VALUE=0            |\n        |            \
    \      PORT RANGE MASK=0             |\n        |===============================================>|\n\
    \        |                                                |\n        |       \
    \       (2) IPCP Configure-Reject         |\n        |                  PORT RANGE\
    \ VALUE=0            |\n        |                  PORT RANGE MASK=0         \
    \    |\n        |<===============================================|\n        |\
    \                                                |\n        |              (3)\
    \ IPCP Configure-Request        |\n        |                  IP ADDRESS=0.0.0.0\
    \            |\n        |===============================================>|\n \
    \       |                                                |\n        |        \
    \      (4) IPCP Configure-Nak            |\n        |                  IP ADDRESS=a.b.c.d\
    \            |\n        |<===============================================|\n \
    \       |                                                |\n        |        \
    \      (5) IPCP Configure-Request        |\n        |                  IP ADDRESS=a.b.c.d\
    \            |\n        |===============================================>|\n \
    \       |                                                |\n        |        \
    \      (6) IPCP Configure-Ack            |\n        |                  IP ADDRESS=a.b.c.d\
    \            |\n        |<===============================================|\n \
    \       |                                                |\n   Figure 5: Failed\
    \ Flow: Port Range Option Not Supported by the Server\n   The main steps of this\
    \ flow are listed below:\n      (1)  The Host sends a first Configure-Request,\
    \ which includes the\n           set of options it desires to negotiate.  All\
    \ of these\n           configuration options are negotiated simultaneously.  In\
    \ this\n           step, the Configure-Request carries the codes of the\n    \
    \       IP-Address, Port Range Value, and Port Range Mask options.\n         \
    \  The IP-Address Option is set to 0.0.0.0, the Port Range Value\n           is\
    \ set to 0, and the Port Range Mask is set to 0.\n      (2)  The BRAS sends back\
    \ a Configure-Reject to decline the Port\n           Range Option.\n      (3)\
    \  The Host sends a Configure-Request, which includes only the\n           codes\
    \ of the IP-Address Option.  In this step, the IP-Address\n           Option is\
    \ set to 0.0.0.0.\n      (4)  The BRAS sends back a Configure-Nak and sets the\
    \ enclosed\n           option to its preferred value.  In this step, the IP-Address\n\
    \           Option is set to a.b.c.d.\n      (5)  The Host re-sends a Configure-Request\
    \ requesting that the\n           IP-Address Option be set to a.b.c.d.\n     \
    \ (6)  The BRAS sends a Configure-Ack message.\n   As a result of this exchange,\
    \ the Host is configured to use a.b.c.d\n   as its local IP address.  This IP\
    \ address is not a shared IP address.\n"
- title: 2.3.4.  Port Range Option Not Supported by the Client
  contents:
  - "2.3.4.  Port Range Option Not Supported by the Client\n   Figure 6 depicts exchanges\
    \ where only shared IP addresses are\n   assigned to end-users' devices.  The\
    \ server is configured to assign\n   only shared IP addresses.  If Port Range\
    \ options are not enclosed in\n   the configuration request, the request is rejected,\
    \ and the\n   requesting peer will be unable to access the service.\n     +-----+\
    \                                          +-----+\n     | Host|             \
    \                             | BRAS|\n     +-----+                          \
    \                +-----+\n        |                                          \
    \      |\n        |              (1) IPCP Configure-Request        |\n       \
    \ |                  IP ADDRESS=0.0.0.0            |\n        |===============================================>|\n\
    \        |                                                |\n        |       \
    \       (2) IPCP Protocol-Reject          |\n        |<===============================================|\n\
    \        |                                                |\n          Figure\
    \ 6: Port Range Option Not Supported by the Client\n   The main steps of this\
    \ flow are listed below:\n      (1)  The Host sends a Configure-Request requesting\
    \ that the\n           IP-Address Option be set to 0.0.0.0, and without enclosing\n\
    \           the Port Range Option.\n      (2)  The BRAS sends a Protocol-Reject\
    \ message.\n   As a result of this exchange, the Host is not able to access the\n\
    \   service.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   This document does not introduce any security\
    \ issues in addition to\n   those related to PPP.  Service providers should use\
    \ authentication\n   mechanisms such as the Challenge Handshake Authentication\
    \ Protocol\n   (CHAP) [RFC1994] or PPP link encryption [RFC1968].\n   The use\
    \ of small and non-random port ranges may increase host\n   exposure to attacks,\
    \ as described in [RFC6056].  This risk can be\n   reduced by using larger port\
    \ ranges, by using the random Port Range\n   Option, or by activating means to\
    \ improve the robustness of TCP\n   against blind in-window attacks [RFC5961].\n"
- title: 4.  Contributors
  contents:
  - "4.  Contributors\n   Jean-Luc Grimault and Alain Villefranque contributed to\
    \ this\n   document.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   The authors would like to thank C. Jacquenet, J. Carlson,\
    \ B.\n   Carpenter, M. Townsley, and J. Arkko for their review.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC1661]  Simpson, W., Ed., \"The Point-to-Point\
    \ Protocol (PPP)\",\n              STD 51, RFC 1661, July 1994.\n   [RFC1968]\
    \  Meyer, G., \"The PPP Encryption Control Protocol (ECP)\",\n              RFC\
    \ 1968, June 1996.\n   [RFC1994]  Simpson, W., \"PPP Challenge Handshake Authentication\n\
    \              Protocol (CHAP)\", RFC 1994, August 1996.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2153]  Simpson, W., \"PPP Vendor Extensions\"\
    , RFC 2153, May 1997.\n   [RFC5961]  Ramaiah, A., Stewart, R., and M. Dalal, \"\
    Improving TCP's\n              Robustness to Blind In-Window Attacks\", RFC 5961,\n\
    \              August 2010.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [CGN-REQS]\n              Perreault, S., Ed.,\
    \ Yamagata, I., Miyakawa, S., Nakagawa,\n              A., and H. Ashida, \"Common\
    \ requirements for Carrier Grade\n              NAT (CGN)\", Work in Progress,\
    \ October 2011.\n   [CIPHERS]  Black, J. and P. Rogaway, \"Ciphers with Arbitrary\
    \ Finite\n              Domains.  Topics in Cryptology\", CT-RSA 2002, Lecture\n\
    \              Notes in Computer Science, vol. 2271, 2002.\n   [PORT-RANGE-ARCH]\n\
    \              Boucadair, M., Ed., Levis, P., Bajko, G., and T.\n            \
    \  Savolainen, \"IPv4 Connectivity Access in the Context of\n              IPv4\
    \ Address Exhaustion: Port Range based IP\n              Architecture\", Work\
    \ in Progress, July 2009.\n   [RFC6056]  Larsen, M. and F. Gont, \"Recommendations\
    \ for Transport-\n              Protocol Port Randomization\", BCP 156, RFC 6056,\n\
    \              January 2011.\n   [RFC6269]  Ford, M., Ed., Boucadair, M., Durand,\
    \ A., Levis, P., and\n              P. Roberts, \"Issues with IP Address Sharing\"\
    , RFC 6269,\n              June 2011.\n   [RFC6346]  Bush, R., Ed., \"The Address\
    \ plus Port (A+P) Approach to\n              the IPv4 Address Shortage\", RFC\
    \ 6346, August 2011.\n   [SAM]      Despres, R., \"Scalable Multihoming across\
    \ IPv6 Local-\n              Address Routing Zones Global-Prefix/Local-Address\n\
    \              Stateless Address Mapping (SAM)\", Work in Progress,\n        \
    \      July 2009.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mohamed Boucadair\n   France Telecom\n   Rennes  35000\n\
    \   France\n   EMail: mohamed.boucadair@orange.com\n   Pierre Levis\n   France\
    \ Telecom\n   Caen\n   France\n   EMail: pierre.levis@orange.com\n   Gabor Bajko\n\
    \   Nokia\n   EMail: gabor.bajko@nokia.com\n   Teemu Savolainen\n   Nokia\n  \
    \ EMail: teemu.savolainen@nokia.com\n   Tina Tsou\n   Huawei Technologies (USA)\n\
    \   2330 Central Expressway\n   Santa Clara, CA  95050\n   USA\n   Phone: +1 408\
    \ 330 4424\n   EMail: tina.tsou.zouting@huawei.com\n"
