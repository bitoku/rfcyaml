- title: __initial_text__
  contents:
  - "        Delivery of IPv4 Multicast Services to IPv4 Clients over\n          \
    \             an IPv6 Multicast Network\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a solution for the delivery of IPv4 multicast\n\
    \   services to IPv4 clients over an IPv6 multicast network.  The\n   solution\
    \ relies upon a stateless IPv4-in-IPv6 encapsulation scheme\n   and uses an IPv6\
    \ multicast distribution tree to deliver IPv4\n   multicast traffic.  The solution\
    \ is particularly useful for the\n   delivery of multicast service offerings to\
    \ customers serviced by\n   Dual-Stack Lite (DS-Lite).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8114.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Requirements Language . . . . . . . . . . . . . .\
    \ . . . .   5\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   5\n   3.  Scope . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   6\n   4.  Solution Overview . . . . . . . . . . . . . . . . . . . . .\
    \ .   6\n     4.1.  IPv4-Embedded IPv6 Prefixes . . . . . . . . . . . . . . .\
    \   7\n     4.2.  Multicast Distribution Tree Computation . . . . . . . . .  \
    \ 8\n     4.3.  Multicast Data Forwarding . . . . . . . . . . . . . . . .   9\n\
    \   5.  IPv4/IPv6 Address Mapping . . . . . . . . . . . . . . . . . .   9\n  \
    \   5.1.  Prefix Assignment . . . . . . . . . . . . . . . . . . . .   9\n    \
    \ 5.2.  Multicast Address Translation Algorithm . . . . . . . . .  10\n     5.3.\
    \  Textual Representation  . . . . . . . . . . . . . . . . .  10\n     5.4.  Examples\
    \  . . . . . . . . . . . . . . . . . . . . . . . .  10\n   6.  Multicast B4 (mB4)\
    \  . . . . . . . . . . . . . . . . . . . . .  11\n     6.1.  IGMP-MLD Interworking\
    \ Function  . . . . . . . . . . . . .  11\n     6.2.  Multicast Data Forwarding\
    \ . . . . . . . . . . . . . . . .  12\n     6.3.  Fragmentation . . . . . . .\
    \ . . . . . . . . . . . . . . .  12\n     6.4.  Host Built-In mB4 Function  .\
    \ . . . . . . . . . . . . . .  12\n     6.5.  Preserve the Scope  . . . . . .\
    \ . . . . . . . . . . . . .  13\n   7.  Multicast AFTR (mAFTR)  . . . . . . .\
    \ . . . . . . . . . . . .  13\n     7.1.  Routing Considerations  . . . . . .\
    \ . . . . . . . . . . .  13\n     7.2.  Processing PIM Messages . . . . . . .\
    \ . . . . . . . . . .  14\n     7.3.  Switching from Shared Tree to Shortest Path\
    \ Tree  . . . .  15\n     7.4.  Multicast Data Forwarding . . . . . . . . . .\
    \ . . . . . .  15\n     7.5.  Scope . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  15\n   8.  Deployment Considerations . . . . . . . . . . . . . .\
    \ . . . .  16\n     8.1.  Other Operational Modes . . . . . . . . . . . . . .\
    \ . . .  16\n       8.1.1.  The IPv6 DR is Co-located with the mAFTR  . . . .\
    \ . .  16\n       8.1.2.  The IPv4 DR is Co-located with the mAFTR  . . . . .\
    \ .  16\n     8.2.  Load Balancing  . . . . . . . . . . . . . . . . . . . . .\
    \  16\n     8.3.  mAFTR Policy Configuration  . . . . . . . . . . . . . . .  16\n\
    \     8.4.  Static vs. Dynamic PIM Triggering . . . . . . . . . . . .  17\n  \
    \ 9.  Security Considerations . . . . . . . . . . . . . . . . . . .  17\n    \
    \ 9.1.  Firewall Configuration  . . . . . . . . . . . . . . . . .  17\n   10.\
    \ IANA Considerations . . . . . . . . . . . . . . . . . . . . .  17\n   11. References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  18\n     11.1.  Normative\
    \ References . . . . . . . . . . . . . . . . . .  18\n     11.2.  Informative\
    \ References . . . . . . . . . . . . . . . . .  19\n   Appendix A.  Use Case:\
    \ IPTV . . . . . . . . . . . . . . . . . . .  21\n   Appendix B.  Older Versions\
    \ of Group Membership Management\n                Protocols  . . . . . . . . .\
    \ . . . . . . . . . . . .  22\n   Acknowledgements  . . . . . . . . . . . . .\
    \ . . . . . . . . . . .  22\n   Authors' Addresses  . . . . . . . . . . . . .\
    \ . . . . . . . . . .  23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   DS-Lite [RFC6333] is an IPv4 address-sharing technique that\
    \ enables\n   operators to multiplex public IPv4 addresses while provisioning\
    \ only\n   IPv6 to users.  A typical DS-Lite scenario is the delivery of an IPv4\n\
    \   service to an IPv4 user over an IPv6 network (denoted as a 4-6-4\n   scenario).\
    \  [RFC6333] covers unicast services exclusively.\n   This document specifies\
    \ a generic solution for the delivery of IPv4\n   multicast services to IPv4 clients\
    \ over an IPv6 multicast network.\n   The solution was developed with DS-Lite\
    \ in mind (see more discussion\n   below).  However, the solution is not limited\
    \ to DS-Lite; it can also\n   be applied in other deployment contexts, such as\
    \ the ones described\n   in [RFC7596] and [RFC7597].\n   If customers have to\
    \ access IPv4 multicast-based services through a\n   DS-Lite environment, Address\
    \ Family Transition Router (AFTR) devices\n   will have to process all the Internet\
    \ Group Management Protocol\n   (IGMP) Report messages [RFC2236] [RFC3376] that\
    \ have been forwarded\n   by the Customer Premises Equipment (CPE) into the IPv4-in-IPv6\n\
    \   tunnels.  From that standpoint, AFTR devices are likely to behave as\n   a\
    \ replication point for downstream multicast traffic, and the\n   multicast packets\
    \ will be replicated for each tunnel endpoint that\n   IPv4 receivers are connected\
    \ to.\n   This kind of DS-Lite environment raises two major issues:\n   1.  The\
    \ IPv6 network loses the benefits of efficient multicast\n       traffic forwarding\
    \ because it is unable to deterministically\n       replicate the data as close\
    \ to the receivers as possible.  As a\n       consequence, the downstream bandwidth\
    \ in the IPv6 network will be\n       vastly consumed by sending multicast data\
    \ over a unicast\n       infrastructure.\n   2.  The AFTR is responsible for replicating\
    \ multicast traffic and\n       forwarding it into each tunnel endpoint connecting\
    \ IPv4 receivers\n       that have explicitly asked for the corresponding content.\
    \  This\n       process may significantly consume the AFTR's resources and\n \
    \      overload the AFTR.\n   This document specifies an extension to the DS-Lite\
    \ model to deliver\n   IPv4 multicast services to IPv4 clients over an IPv6 multicast-\n\
    \   enabled network.\n   This document describes a stateless translation mechanism\
    \ that\n   supports either Source-Specific Multicast (SSM) or Any-Source\n   Multicast\
    \ (ASM) operation.  The recommendation in Section 1 of\n   [RFC4607] is that multicast\
    \ services use SSM where possible; the\n   operation of the translation mechanism\
    \ is also simplified when SSM is\n   used, e.g., considerations for placement\
    \ of the IPv6 Rendezvous Point\n   (RP) are no longer relevant.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document makes use of the following terms:\n   IPv4-embedded\
    \ IPv6 address:  an IPv6 address that embeds a 32-bit-\n      encoded IPv4 address.\
    \  An IPv4-embedded IPv6 address can be\n      unicast or multicast.\n   mPrefix64:\
    \  a dedicated multicast IPv6 prefix for constructing\n      IPv4-embedded IPv6\
    \ multicast addresses. mPrefix64 can be of two\n      types: ASM_mPrefix64 used\
    \ in Any-Source Multicast (ASM) mode or\n      SSM_mPrefix64 used in Source-Specific\
    \ Multicast (SSM) mode\n      [RFC4607].  The size of this prefix is /96.\n  \
    \       Note: \"64\" is used as an abbreviation for IPv6-IPv4\n         interconnection.\n\
    \   uPrefix64:  a dedicated IPv6 unicast prefix for constructing\n      IPv4-embedded\
    \ IPv6 unicast addresses [RFC6052].  This prefix may\n      be either the Well-Known\
    \ Prefix (i.e., 64:ff9b::/96) or a Network-\n      Specific Prefix (NSP).\n  \
    \ Multicast AFTR (mAFTR):  a functional entity that supports an\n      IPv4-IPv6\
    \ multicast interworking function (refer to Figure 3).  It\n      receives and\
    \ encapsulates the IPv4 multicast packets into IPv4-in-\n      IPv6 packets. \
    \ Also, it behaves as the corresponding IPv6\n      multicast source for the encapsulated\
    \ IPv4-in-IPv6 packets.\n   Multicast Basic Bridging BroadBand (mB4):  a functional\
    \ entity that\n      supports an IGMP-MLD Interworking function (refer to Section\
    \ 6.1)\n      that translates the IGMP messages into the corresponding Multicast\n\
    \      Listener Discovery (MLD) messages and sends the MLD messages to\n     \
    \ the IPv6 network.  In addition, the mB4 decapsulates IPv4-in-IPv6\n      multicast\
    \ packets.\n   PIMv4:  refers to Protocol Independent Multicast (PIM) when deployed\n\
    \      in an IPv4 infrastructure (i.e., IPv4 transport capabilities are\n    \
    \  used to exchange PIM messages).\n   PIMv6:  refers to PIM when deployed in\
    \ an IPv6 infrastructure (i.e.,\n      IPv6 transport capabilities are used to\
    \ exchange PIM messages).\n   Host portion of the MLD protocol:  refers to the\
    \ part of MLD that\n      applies to all multicast address listeners (Section\
    \ 6 of\n      [RFC3810]).  As a reminder, MLD specifies separate behaviors for\n\
    \      multicast address listeners (i.e., hosts or routers that listen to\n  \
    \    multicast packets) and multicast routers.\n   Router portion of IGMP:  refers\
    \ to the part of IGMP that is performed\n      by multicast routers (Section 6\
    \ of [RFC3376]).\n   DR:  refers to the Designated Router as defined in [RFC7761].\n"
- title: 3.  Scope
  contents:
  - "3.  Scope\n   This document focuses only on the subscription to IPv4 multicast\n\
    \   groups and the delivery of IPv4-formatted content to IPv4 receivers\n   over\
    \ an IPv6-only network.  In particular, only the following case is\n   covered:\n\
    \      IPv4 receivers access IPv4 multicast content over IPv6-only\n      multicast-enabled\
    \ networks.\n   This document does not cover the source/receiver heuristics, where\n\
    \   IPv4 receivers can also behave as IPv4 multicast sources.  This\n   document\
    \ assumes that hosts behind the mB4 are IPv4 multicast\n   receivers only.  Also,\
    \ the document covers the host built-in mB4\n   function.\n"
- title: 4.  Solution Overview
  contents:
  - "4.  Solution Overview\n   In the DS-Lite specification [RFC6333], an IPv4-in-IPv6\
    \ tunnel is\n   used to carry bidirectional IPv4 unicast traffic between a B4\
    \ and an\n   AFTR.  The solution specified in this document provides an IPv4-in-\n\
    \   IPv6 encapsulation scheme to deliver unidirectional IPv4 multicast\n   traffic\
    \ from an mAFTR to an mB4.\n   An overview of the solution is provided in this\
    \ section; it is\n   intended as an introduction to how it works but is not normative.\n\
    \   For the normative specifications of the two new functional elements,\n   mB4\
    \ and mAFTR (Figure 1), refer to Sections 6 and 7.\n                         \
    \   ------------\n                          /              \\\n              \
    \           |  IPv4 network  |\n                          \\              /\n\
    \                            ------------\n              IPv4 multicast  :   |\
    \   ^  PIMv4 Join\n                              v   |   :\n                 \
    \          +-------------+\n                           |    mAFTR    |\n     \
    \                      +-------------+\n             IPv6 multicast  |:|  |  \
    \ ^  PIMv6 Join (PIMv6\n             (IPv4 embedded) |:|  |   :   routers in between)\n\
    \                            ------------\n                          /       \
    \       \\\n                         |  IPv6 network  |\n                    \
    \      \\              /\n                            ------------\n         \
    \                    |:|  |   ^  MLD Report\n                             |v|\
    \  |   :\n                            +-----------+\n                        \
    \    |    mB4    |\n                            +-----------+\n              IPv4\
    \ multicast  :   |   ^  IGMP Report\n                              v   |   :\n\
    \                            +-----------+\n                            |   IPv4\
    \    |\n                            | receiver  |\n                          \
    \  +-----------+\n                     Figure 1: Functional Architecture\n"
- title: 4.1.  IPv4-Embedded IPv6 Prefixes
  contents:
  - "4.1.  IPv4-Embedded IPv6 Prefixes\n   In order to map the addresses of IPv4 multicast\
    \ traffic with IPv6\n   multicast addresses, an IPv6 multicast prefix (mPrefix64)\
    \ and an IPv6\n   unicast prefix (uPrefix64) are provided to the mAFTR and the\
    \ mB4\n   elements, both of which contribute to the computation and the\n   maintenance\
    \ of the IPv6 multicast distribution tree that extends the\n   IPv4 multicast\
    \ distribution tree into the IPv6 multicast network.\n   The IPv4/IPv6 address\
    \ mapping is stateless.\n   The mAFTR and the mB4 use mPrefix64 to convert an\
    \ IPv4 multicast\n   address (G4) into an IPv4-embedded IPv6 multicast address\
    \ (G6).  The\n   mAFTR and the mB4 use uPrefix64 to convert an IPv4 source address\n\
    \   (S4) into an IPv4-embedded IPv6 address (S6).  The mAFTR and the mB4\n   must\
    \ use the same mPrefix64 and uPrefix64; they also run the same\n   algorithm for\
    \ building IPv4-embedded IPv6 addresses.  Refer to\n   Section 5 for more details\
    \ about the address mapping.\n"
- title: 4.2.  Multicast Distribution Tree Computation
  contents:
  - "4.2.  Multicast Distribution Tree Computation\n   When an IPv4 receiver connected\
    \ to the device that embeds the mB4\n   capability wants to subscribe to an IPv4\
    \ multicast group, it sends an\n   IGMP Report message towards the mB4.  The mB4\
    \ creates the IPv6\n   multicast group (G6) address using mPrefix64 and the original\
    \ IPv4\n   multicast group address.  If the receiver sends a source-specific\n\
    \   IGMPv3 Report message, the mB4 will create the IPv6 source address\n   (S6)\
    \ using uPrefix64 and the original IPv4 source address.\n   The mB4 uses the G6\
    \ (and both S6 and G6 in SSM) to create the\n   corresponding MLD Report message.\
    \  The mB4 sends the Report message\n   towards the IPv6 network.  The PIMv6 DR\
    \ receives the MLD Report\n   message and sends the PIMv6 Join message to join\
    \ the IPv6 multicast\n   distribution tree.  It can send either PIMv6 Join (*,G6)\
    \ in ASM or\n   PIMv6 Join (S6,G6) in SSM to the mAFTR.\n   The mAFTR acts as\
    \ the IPv6 DR to which the uPrefix64-derived S6 is\n   connected.  The mAFTR will\
    \ receive the source-specific PIMv6 Join\n   message (S6,G6) from the IPv6 multicast\
    \ network.  If the mAFTR is the\n   Rendezvous Point (RP) of G6, it will receive\
    \ the any-source PIMv6\n   Join message (*,G6) from the IPv6 multicast network.\
    \  If the mAFTR is\n   not the RP of G6, it will send the PIM Register message\
    \ to the RP of\n   G6 located in the IPv6 multicast network.  For the sake of\n\
    \   simplicity, it is recommended to configure the mAFTR as the RP for\n   the\
    \ IPv4-embedded IPv6 multicast groups it manages; no registration\n   procedure\
    \ is required under this configuration.\n   When the mAFTR receives the PIMv6\
    \ Join message (*,G6), it will\n   extract the IPv4 multicast group address (G4).\
    \  If the mAFTR is the\n   RP of G4 in the IPv4 multicast network, it will create\
    \ a (*,G4) entry\n   (if such entry does not already exist) in its own IPv4 multicast\n\
    \   routing table.  If the mAFTR is not the RP of G4, it will send the\n   corresponding\
    \ PIMv4 Join message (*,G4) towards the RP of G4 in the\n   IPv4 multicast network.\n\
    \   When the mAFTR receives the PIMv6 Join message (S6,G6), it will\n   extract\
    \ the IPv4 multicast group address (G4) and IPv4 source address\n   (S4) and send\
    \ the corresponding (S4,G4) PIMv4 Join message directly\n   to the IPv4 source.\n\
    \   A branch of the multicast distribution tree is thus constructed,\n   comprising\
    \ both an IPv4 part (from the mAFTR upstream) and an IPv6\n   part (from mAFTR\
    \ downstream towards the mB4).\n   The mAFTR advertises the route of uPrefix64\
    \ with an IPv6 Interior\n   Gateway Protocol (IGP), so as to represent the IPv4-embedded\
    \ IPv6\n   source in the IPv6 multicast network and to allow IPv6 routers to run\n\
    \   the Reverse Path Forwarding (RPF) check procedure on incoming\n   multicast\
    \ traffic.  Injecting internal /96 routes is not problematic\n   given the recommendation\
    \ in [RFC7608] that requires that forwarding\n   processes must be designed to\
    \ process prefixes of any length up to\n   /128.\n"
- title: 4.3.  Multicast Data Forwarding
  contents:
  - "4.3.  Multicast Data Forwarding\n   When the mAFTR receives an IPv4 multicast\
    \ packet, it will encapsulate\n   the packet into an IPv6 multicast packet using\
    \ the IPv4-embedded IPv6\n   multicast address as the destination address and\
    \ an IPv4-embedded\n   IPv6 unicast address as the source address.  The encapsulated\
    \ IPv6\n   multicast packet will be forwarded down the IPv6 multicast\n   distribution\
    \ tree, and the mB4 will eventually receive the packet.\n   The IPv6 multicast\
    \ network treats the IPv4-in-IPv6 encapsulated\n   multicast packets as native\
    \ IPv6 multicast packets.  The IPv6\n   multicast routers use the outer IPv6 header\
    \ to make their forwarding\n   decisions.\n   When the mB4 receives the IPv6 multicast\
    \ packet (to G6) derived by\n   mPrefix64, it decapsulates it and forwards the\
    \ original IPv4\n   multicast packet towards the receivers subscribing to G4.\n\
    \   Note: At this point, only IPv4-in-IPv6 encapsulation is defined;\n   however,\
    \ other types of encapsulation could be defined in the future.\n"
- title: 5.  IPv4/IPv6 Address Mapping
  contents:
  - '5.  IPv4/IPv6 Address Mapping

    '
- title: 5.1.  Prefix Assignment
  contents:
  - "5.1.  Prefix Assignment\n   A dedicated IPv6 multicast prefix (mPrefix64) is\
    \ provisioned to the\n   mAFTR and the mB4.  The mAFTR and the mB4 use the mPrefix64\
    \ to form\n   an IPv6 multicast group address from an IPv4 multicast group address.\n\
    \   The mPrefix64 can be of two types: ASM_mPrefix64 (an mPrefix64 used\n   in\
    \ ASM mode) or SSM_mPrefix64 (an mPrefix64 used in SSM mode).  The\n   mPrefix64\
    \ MUST be derived from the corresponding IPv6 multicast\n   address space (e.g.,\
    \ the SSM_mPrefix64 must be in the range of the\n   multicast address space specified\
    \ in [RFC4607]).\n   The IPv6 part of the multicast distribution tree can be seen\
    \ as an\n   extension of the IPv4 part of the multicast distribution tree.  The\n\
    \   IPv4 source address MUST be mapped to an IPv6 source address.  An\n   IPv6\
    \ unicast prefix (uPrefix64) is provisioned to the mAFTR and the\n   mB4.  The\
    \ mAFTR and the mB4 use the uPrefix64 to form an IPv6 source\n   address from\
    \ an IPv4 source address as specified in [RFC6052].  The\n   uPrefix-formed IPv6\
    \ source address will represent the original IPv4\n   source in the IPv6 multicast\
    \ network.  The uPrefix64 MUST be derived\n   from the IPv6 unicast address space.\n\
    \   The multicast address translation MUST follow the algorithm defined\n   in\
    \ Section 5.2.\n   The mPrefix64 and uPrefix64 can be configured in the mB4 using\
    \ a\n   variety of methods, including an out-of-band mechanism, manual\n   configuration,\
    \ or a dedicated provisioning protocol (e.g., using\n   DHCPv6 [RFC8115]).\n \
    \  The stateless translation mechanism described in Section 5 does not\n   preclude\
    \ use of Embedded-RP [RFC3956] [RFC7371].\n"
- title: 5.2.  Multicast Address Translation Algorithm
  contents:
  - "5.2.  Multicast Address Translation Algorithm\n   IPv4-embedded IPv6 multicast\
    \ addresses are composed according to the\n   following algorithm:\n   o  Concatenate\
    \ the 96 bits of the mPrefix64 and the 32 bits of the\n      IPv4 address to obtain\
    \ a 128-bit address.\n   The IPv4 multicast addresses are extracted from the IPv4-embedded\n\
    \   IPv6 multicast addresses according to the following algorithm:\n   o  If the\
    \ multicast address has a pre-configured mPrefix64, extract\n      the last 32\
    \ bits of the IPv6 multicast address.\n   An IPv4 source is represented in the\
    \ IPv6 realm with its\n   IPv4-converted IPv6 address [RFC6052].\n"
- title: 5.3.  Textual Representation
  contents:
  - "5.3.  Textual Representation\n   The embedded IPv4 address in an IPv6 multicast\
    \ address is included in\n   the last 32 bits; therefore, dotted decimal notation\
    \ can be used.\n"
- title: 5.4.  Examples
  contents:
  - "5.4.  Examples\n    Group address mapping example:\n    +---------------------+--------------+----------------------------+\n\
    \    |      mPrefix64      | IPv4 address | IPv4-Embedded IPv6 address |\n   \
    \ +---------------------+--------------+----------------------------+\n    | \
    \ ff0x::db8:0:0/96   |  233.252.0.1 |   ff0x::db8:233.252.0.1    |\n    +---------------------+--------------+----------------------------+\n\
    \    Source address mapping example when a /96 is used:\n    +---------------------+--------------+----------------------------+\n\
    \    |      uPrefix64      | IPv4 address | IPv4-Embedded IPv6 address |\n   \
    \ +---------------------+--------------+----------------------------+\n    | \
    \   2001:db8::/96    |  192.0.2.33  |     2001:db8::192.0.2.33   |\n    +---------------------+--------------+----------------------------+\n\
    \   IPv4 and IPv6 addresses used in this example are derived from the\n   IPv4\
    \ and IPv6 blocks reserved for documentation, as per [RFC6676].\n   The unicast\
    \ IPv4 address of the above example is derived from the\n   documentation address\
    \ block defined in [RFC6890].\n"
- title: 6.  Multicast B4 (mB4)
  contents:
  - '6.  Multicast B4 (mB4)

    '
- title: 6.1.  IGMP-MLD Interworking Function
  contents:
  - "6.1.  IGMP-MLD Interworking Function\n   The IGMP-MLD Interworking function combines\
    \ the IGMP/MLD Proxying\n   function and the address-synthesizing operations.\
    \  The IGMP/MLD\n   Proxying function is specified in [RFC4605].  The address\
    \ translation\n   is stateless and MUST follow the address mapping specified in\n\
    \   Section 5.\n   The mB4 performs the host portion of the MLD protocol on the\
    \ upstream\n   interface.  The composition of IPv6 membership in this context\
    \ is\n   constructed through address-synthesizing operations and MUST\n   synchronize\
    \ with the membership database maintained in the IGMP\n   domain.  MLD messages\
    \ are sent natively to the direct-connected IPv6\n   multicast routers (they will\
    \ be processed by the PIM DR).  The mB4\n   also performs the router portion of\
    \ IGMP on the downstream\n   interface(s).  Refer to [RFC4605] for more details.\n\
    \            +----------+   IGMP  +-------+   MLD   +---------+\n            |\
    \   IPv4   |---------|  mB4  |---------|   PIM   |\n            | Receiver | \
    \        |       |         |    DR   |\n            +----------+         +-------+\
    \         +---------+\n                      Figure 2: IGMP-MLD Interworking\n\
    \   If SSM is deployed, the mB4 MUST construct the IPv6 source address\n   (or\
    \ retrieve the IPv4 source address) using the uPrefix64.  The mB4\n   MAY create\
    \ a membership database that associates the IPv4-IPv6\n   multicast groups with\
    \ the interfaces (e.g., WLAN and Wired Ethernet)\n   facing IPv4 multicast receivers.\n"
- title: 6.2.  Multicast Data Forwarding
  contents:
  - "6.2.  Multicast Data Forwarding\n   When the mB4 receives an IPv6 multicast packet,\
    \ it MUST check the\n   group address and the source address.  If the IPv6 multicast\
    \ group\n   prefix is mPrefix64 and the IPv6 source prefix is uPrefix64, the mB4\n\
    \   MUST decapsulate the IPv6 header [RFC2473]; the decapsulated IPv4\n   multicast\
    \ packet will be forwarded through each relevant interface\n   following standard\
    \ IPv4 multicast forwarding procedures.  Otherwise,\n   the mB4 MUST silently\
    \ drop the packet.\n   As an illustration, if a packet is received from source\n\
    \   2001:db8::192.0.2.33 and needs to be forwarded to group\n   ff3x:20:2001:db8::233.252.0.1,\
    \ the mB4 decapsulates it into an IPv4\n   multicast packet using 192.0.2.33 as\
    \ the IPv4 source address and\n   using 233.252.0.1 as the IPv4 destination multicast\
    \ group.  This\n   example assumes that the mB4 is provisioned with uPrefix64\n\
    \   (2001:db8::/96) and mPrefix64 (ff3x:20:2001:db8::/96).\n"
- title: 6.3.  Fragmentation
  contents:
  - "6.3.  Fragmentation\n   Encapsulating IPv4 multicast packets into IPv6 multicast\
    \ packets that\n   will be forwarded by the mAFTR towards the mB4 along the IPv6\n\
    \   multicast distribution tree reduces the effective MTU size by the\n   size\
    \ of an IPv6 header.  In this specification, the data flow is\n   unidirectional\
    \ from the mAFTR to the mB4.  The mAFTR MUST fragment\n   the oversized IPv6 packet\
    \ after the encapsulation into two IPv6\n   packets.  The mB4 MUST reassemble\
    \ the IPv6 packets, decapsulate the\n   IPv6 header, and forward the IPv4 packet\
    \ to the hosts that have\n   subscribed to the corresponding multicast group.\
    \  Further\n   considerations about fragmentation issues are documented in Sections\n\
    \   5.3 and 6.3 of [RFC6333].\n"
- title: 6.4.  Host Built-In mB4 Function
  contents:
  - "6.4.  Host Built-In mB4 Function\n   If the mB4 function is implemented in the\
    \ host that is directly\n   connected to an IPv6-only network, the host MUST implement\
    \ the\n   behaviors specified in Sections 6.1, 6.2, and 6.3.  The host MAY\n \
    \  optimize the implementation to provide an Application Programming\n   Interface\
    \ (API) or kernel module to skip the IGMP-MLD Interworking\n   function.  Optimization\
    \ considerations are out of scope of this\n   specification.\n"
- title: 6.5.  Preserve the Scope
  contents:
  - "6.5.  Preserve the Scope\n   When several mPrefix64s are available, if each enclosed\
    \ IPv4-embedded\n   IPv6 multicast prefix has a distinct scope, the mB4 MUST select\
    \ the\n   appropriate IPv4-embedded IPv6 multicast prefix whose scope matches\n\
    \   the IPv4 multicast address used to synthesize an IPv4-embedded IPv6\n   multicast\
    \ address (specific mappings are listed in Section 8 of\n   [RFC2365]).  Mapping\
    \ is achieved such that the scope of the selected\n   IPv6 multicast prefix does\
    \ not exceed the original IPv4 multicast\n   scope.  If the mB4 is instructed\
    \ to preserve the scope but no IPv6\n   multicast prefix that matches the IPv4\
    \ multicast scope is found, IPv6\n   multicast address mapping SHOULD fail.\n\
    \   The mB4 MAY be configured to not preserve the scope when enforcing\n   the\
    \ address translation algorithm.\n   Consider that an mB4 is configured with two\
    \ mPrefix64s,\n   ff0e::db8:0:0/96 (global scope) and ff08::db8:0:0/96 (organization\n\
    \   scope).  If the mB4 receives an IGMP Report message from an IPv4\n   receiver\
    \ to subscribe to 233.252.0.1, it checks which mPrefix64 to\n   use in order to\
    \ preserve the scope of the requested IPv4 multicast\n   group.  In this example,\
    \ given that 233.252.0.1 is intended for\n   global use, the mB4 creates the IPv6\
    \ multicast group (G6) address\n   using ff0e::db8:0:0/96 and the original IPv4\
    \ multicast group address\n   (233.252.0.1): ff0e::db8:233.252.0.1.\n"
- title: 7.  Multicast AFTR (mAFTR)
  contents:
  - '7.  Multicast AFTR (mAFTR)

    '
- title: 7.1.  Routing Considerations
  contents:
  - "7.1.  Routing Considerations\n   The mAFTR is responsible for interconnecting\
    \ the IPv4 multicast\n   distribution tree with the corresponding IPv6 multicast\
    \ distribution\n   tree.  The mAFTR MUST use the uPrefix64 to build the IPv6 source\n\
    \   addresses of the multicast group address derived from mPrefix64.  In\n   other\
    \ words, the mAFTR MUST be the multicast source whose address is\n   derived from\
    \ uPrefix64.\n   The mAFTR MUST advertise the route towards uPrefix64 with the\
    \ IPv6\n   IGP.  This is needed by the IPv6 multicast routers so that they\n \
    \  acquire the routing information to discover the source.\n"
- title: 7.2.  Processing PIM Messages
  contents:
  - "7.2.  Processing PIM Messages\n   The mAFTR MUST interwork PIM Join/Prune messages\
    \ for (*,G6) and\n   (S6,G6) on their corresponding (*,G4) and (S4,G4).  The following\n\
    \   text specifies the expected behavior of the mAFTR for PIM Join\n   messages.\n\
    \                                +---------+\n                       ---------|\
    \  mAFTR  |---------\n                         PIMv6  |uPrefix64|  PIMv4\n   \
    \                             |mPrefix64|\n                                +---------+\n\
    \                Figure 3: PIMv6-PIMv4 Interworking Function\n   The mAFTR contains\
    \ two separate Tree Information Bases (TIBs): the\n   IPv4 Tree Information Base\
    \ (TIB4) and the IPv6 Tree Information Base\n   (TIB6), which are bridged by one\
    \ IPv4-in-IPv6 virtual interface.  It\n   should be noted that TIB implementations\
    \ may vary (e.g., some may\n   rely upon a single integrated TIB without any virtual\
    \ interface), but\n   they should follow this specification for the sake of global\
    \ and\n   functional consistency.\n   When an mAFTR receives a PIMv6 Join message\
    \ (*,G6) with an IPv6\n   multicast group address (G6) that is derived from the\
    \ mPrefix64, it\n   MUST check its IPv6 Tree Information Base (TIB6).  If there\
    \ is an\n   entry for this G6 address, it MUST check whether the interface\n \
    \  through which the PIMv6 Join message has been received is in the\n   outgoing\
    \ interface (oif) list.  If not, the mAFTR MUST add the\n   interface to the oif\
    \ list.  If there is no entry in the TIB6, the\n   mAFTR MUST create a new entry\
    \ (*,G6) for the multicast group.\n   Whether or not the IPv4-in-IPv6 virtual\
    \ interface is set as the\n   incoming interface of the newly created entry is\
    \ up to the\n   implementation, but it should comply with the mAFTR's multicast\
    \ data\n   forwarding behavior (see Section 7.4).\n   The mAFTR MUST extract the\
    \ IPv4 multicast group address (G4) from the\n   IPv4-embedded IPv6 multicast\
    \ address (G6) contained in the PIMv6 Join\n   message.  The mAFTR MUST check\
    \ its IPv4 Tree Information Base (TIB4).\n   If there is an entry for G4, it MUST\
    \ check whether the IPv4-in-IPv6\n   virtual interface is in the outgoing interface\
    \ list.  If not, the\n   mAFTR MUST add the interface to the oif list.  If there\
    \ is no entry\n   for G4, the mAFTR MUST create a new (*,G4) entry in its TIB4\
    \ and\n   initiate the procedure for building the shared tree in the IPv4\n  \
    \ multicast network without any additional requirement.\n   If the mAFTR receives\
    \ a source-specific Join message, the (S6,G6) is\n   processed rather than (*,G6).\
    \  The procedures of processing (S6,G6)\n   and (*,G6) are almost the same.  Differences\
    \ have been detailed in\n   [RFC7761].\n"
- title: 7.3.  Switching from Shared Tree to Shortest Path Tree
  contents:
  - "7.3.  Switching from Shared Tree to Shortest Path Tree\n   When the mAFTR receives\
    \ the first IPv4 multicast packet, it may\n   extract the source address (S4)\
    \ from the packet and send an Explicit\n   PIMv4 (S4,G4) Join message directly\
    \ to S4.  The mAFTR switches from\n   the shared Rendezvous Point Tree (RPT) to\
    \ the Shortest Path Tree\n   (SPT) for G4.\n   For IPv6 multicast routers to switch\
    \ to the SPT, there is no new\n   requirement.  IPv6 multicast routers may send\
    \ an Explicit PIMv6 Join\n   to the mAFTR once the first (S6,G6) multicast packet\
    \ arrives from\n   upstream multicast routers.\n"
- title: 7.4.  Multicast Data Forwarding
  contents:
  - "7.4.  Multicast Data Forwarding\n   When the mAFTR receives an IPv4 multicast\
    \ packet, it checks its TIB4\n   to find a matching entry and then forwards the\
    \ packet to the\n   interface(s) listed in the outgoing interface list.  If the\
    \ IPv4-in-\n   IPv6 virtual interface also belongs to this list, the packet is\n\
    \   encapsulated with the mPrefix64-derived and uPrefix64-derived\n   IPv4-embedded\
    \ IPv6 addresses to form an IPv6 multicast packet\n   [RFC2473].  Then another\
    \ lookup is made by the mAFTR to find a\n   matching entry in the TIB6.  Whether\
    \ or not the RPF check for the\n   second lookup is performed is up to the implementation\
    \ and is out of\n   the scope of this document.  The IPv6 multicast packet is\
    \ then\n   forwarded along the IPv6 multicast distribution tree, based upon the\n\
    \   outgoing interface list of the matching entry in the TIB6.\n   As an illustration,\
    \ if a packet is received from source 192.0.2.33\n   and needs to be forwarded\
    \ to group 233.252.0.1, the mAFTR\n   encapsulates it into an IPv6 multicast packet\
    \ using\n   ff3x:20:2001:db8::233.252.0.1 as the IPv6 destination multicast group\n\
    \   and using 2001:db8::192.0.2.33 as the IPv6 source address.\n"
- title: 7.5.  Scope
  contents:
  - "7.5.  Scope\n   The Scope field of IPv4-in-IPv6 multicast addresses should be\
    \ valued\n   accordingly (e.g., to \"E\" for global scope) in the deployment\n\
    \   environment.  This specification does not discuss the scope value\n   that\
    \ should be used.\n   The considerations in Section 6.5 are to be followed by\
    \ the mAFTR.\n"
- title: 8.  Deployment Considerations
  contents:
  - '8.  Deployment Considerations

    '
- title: 8.1.  Other Operational Modes
  contents:
  - '8.1.  Other Operational Modes

    '
- title: 8.1.1.  The IPv6 DR is Co-located with the mAFTR
  contents:
  - "8.1.1.  The IPv6 DR is Co-located with the mAFTR\n   The mAFTR can embed the\
    \ MLD Querier function (as well as the PIMv6\n   DR) for optimization purposes.\
    \  When the mB4 sends an MLD Report\n   message to this mAFTR, the mAFTR should\
    \ process the MLD Report\n   message that contains the IPv4-embedded IPv6 multicast\
    \ group address\n   and then send the corresponding PIMv4 Join message (Figure\
    \ 4).\n                                +---------+\n                       ---------|\
    \  mAFTR  |---------\n                          MLD   |uPrefix64|  PIMv4\n   \
    \                             |mPrefix64|\n                                +---------+\n\
    \                 Figure 4: MLD-PIMv4 Interworking Function\n   Discussions about\
    \ the location of the mAFTR capability and related\n   ASM or SSM multicast design\
    \ considerations are out of the scope of\n   this document.\n"
- title: 8.1.2.  The IPv4 DR is Co-located with the mAFTR
  contents:
  - "8.1.2.  The IPv4 DR is Co-located with the mAFTR\n   If the mAFTR is co-located\
    \ with the IPv4 DR connected to the original\n   IPv4 source, it may simply use\
    \ the uPrefix64 and mPrefix64 prefixes\n   to build the IPv4-embedded IPv6 multicast\
    \ packets, and the sending of\n   PIMv4 Join messages becomes unnecessary.\n"
- title: 8.2.  Load Balancing
  contents:
  - "8.2.  Load Balancing\n   For robustness and load distribution purposes, several\
    \ nodes in the\n   network can embed the mAFTR function.  In such case, the same\
    \ IPv6\n   prefixes (i.e., mPrefix64 and uPrefix64) and algorithm to build\n \
    \  IPv4-embedded IPv6 addresses must be configured on those nodes.\n"
- title: 8.3.  mAFTR Policy Configuration
  contents:
  - "8.3.  mAFTR Policy Configuration\n   The mAFTR may be configured with a list\
    \ of IPv4 multicast groups and\n   sources.  Only multicast flows bound to the\
    \ configured addresses\n   should be handled by the mAFTR.  Otherwise, packets\
    \ are silently\n   dropped.\n"
- title: 8.4.  Static vs. Dynamic PIM Triggering
  contents:
  - "8.4.  Static vs. Dynamic PIM Triggering\n   To optimize the usage of network\
    \ resources in current deployments,\n   all multicast streams are conveyed in\
    \ the core network while only the\n   most popular ones are forwarded in the aggregation/access\
    \ networks\n   (static mode).  Less popular streams are forwarded in the access\n\
    \   network upon request (dynamic mode).  Depending on the location of\n   the\
    \ mAFTR in the network, two modes can be envisaged: static and\n   dynamic.\n\
    \   Static Mode:  The mAFTR is configured to instantiate permanent\n      (S6,G6)\
    \ and (*,G6) entries in its TIB6 using a pre-configured\n      (S4,G4) list.\n\
    \   Dynamic Mode:  The instantiation or withdrawal of (S6,G6) or (*,G6)\n    \
    \  entries is triggered by the receipt of PIMv6 messages.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Besides multicast scoping considerations (see\
    \ Sections 6.5 and 7.5),\n   this document does not introduce any new security\
    \ concerns in\n   addition to those discussed in Section 5 of [RFC6052], Section\
    \ 10 of\n   [RFC3810], and Section 6 of [RFC7761].\n   Unlike solutions that map\
    \ IPv4 multicast flows to IPv6 unicast flows,\n   this document does not exacerbate\
    \ Denial-of-Service (DoS) attacks.\n   An mB4 SHOULD be provided with appropriate\
    \ configuration information\n   to preserve the scope of a multicast message when\
    \ mapping an IPv4\n   multicast address into an IPv4-embedded IPv6 multicast address\
    \ and\n   vice versa.\n"
- title: 9.1.  Firewall Configuration
  contents:
  - "9.1.  Firewall Configuration\n   The CPE that embeds the mB4 function SHOULD\
    \ be configured to accept\n   incoming MLD messages and traffic forwarded to multicast\
    \ groups\n   subscribed to by receivers located in the customer premises.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2365]  Meyer, D., \"Administratively Scoped IP Multicast\", BCP 23,\n\
    \              RFC 2365, DOI 10.17487/RFC2365, July 1998,\n              <http://www.rfc-editor.org/info/rfc2365>.\n\
    \   [RFC2473]  Conta, A. and S. Deering, \"Generic Packet Tunneling in\n     \
    \         IPv6 Specification\", RFC 2473, DOI 10.17487/RFC2473,\n            \
    \  December 1998, <http://www.rfc-editor.org/info/rfc2473>.\n   [RFC3376]  Cain,\
    \ B., Deering, S., Kouvelas, I., Fenner, B., and A.\n              Thyagarajan,\
    \ \"Internet Group Management Protocol, Version\n              3\", RFC 3376,\
    \ DOI 10.17487/RFC3376, October 2002,\n              <http://www.rfc-editor.org/info/rfc3376>.\n\
    \   [RFC3810]  Vida, R., Ed. and L. Costa, Ed., \"Multicast Listener\n       \
    \       Discovery Version 2 (MLDv2) for IPv6\", RFC 3810,\n              DOI 10.17487/RFC3810,\
    \ June 2004,\n              <http://www.rfc-editor.org/info/rfc3810>.\n   [RFC4605]\
    \  Fenner, B., He, H., Haberman, B., and H. Sandick,\n              \"Internet\
    \ Group Management Protocol (IGMP) / Multicast\n              Listener Discovery\
    \ (MLD)-Based Multicast Forwarding\n              (\"IGMP/MLD Proxying\")\", RFC\
    \ 4605, DOI 10.17487/RFC4605,\n              August 2006, <http://www.rfc-editor.org/info/rfc4605>.\n\
    \   [RFC4607]  Holbrook, H. and B. Cain, \"Source-Specific Multicast for\n   \
    \           IP\", RFC 4607, DOI 10.17487/RFC4607, August 2006,\n             \
    \ <http://www.rfc-editor.org/info/rfc4607>.\n   [RFC6052]  Bao, C., Huitema, C.,\
    \ Bagnulo, M., Boucadair, M., and X.\n              Li, \"IPv6 Addressing of IPv4/IPv6\
    \ Translators\", RFC 6052,\n              DOI 10.17487/RFC6052, October 2010,\n\
    \              <http://www.rfc-editor.org/info/rfc6052>.\n   [RFC6333]  Durand,\
    \ A., Droms, R., Woodyatt, J., and Y. Lee, \"Dual-\n              Stack Lite Broadband\
    \ Deployments Following IPv4\n              Exhaustion\", RFC 6333, DOI 10.17487/RFC6333,\
    \ August 2011,\n              <http://www.rfc-editor.org/info/rfc6333>.\n   [RFC7608]\
    \  Boucadair, M., Petrescu, A., and F. Baker, \"IPv6 Prefix\n              Length\
    \ Recommendation for Forwarding\", BCP 198, RFC 7608,\n              DOI 10.17487/RFC7608,\
    \ July 2015,\n              <http://www.rfc-editor.org/info/rfc7608>.\n   [RFC7761]\
    \  Fenner, B., Handley, M., Holbrook, H., Kouvelas, I.,\n              Parekh,\
    \ R., Zhang, Z., and L. Zheng, \"Protocol Independent\n              Multicast\
    \ - Sparse Mode (PIM-SM): Protocol Specification\n              (Revised)\", STD\
    \ 83, RFC 7761, DOI 10.17487/RFC7761, March\n              2016, <http://www.rfc-editor.org/info/rfc7761>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC2236]  Fenner, W., \"Internet Group Management\
    \ Protocol, Version\n              2\", RFC 2236, DOI 10.17487/RFC2236, November\
    \ 1997,\n              <http://www.rfc-editor.org/info/rfc2236>.\n   [RFC3956]\
    \  Savola, P. and B. Haberman, \"Embedding the Rendezvous\n              Point\
    \ (RP) Address in an IPv6 Multicast Address\",\n              RFC 3956, DOI 10.17487/RFC3956,\
    \ November 2004,\n              <http://www.rfc-editor.org/info/rfc3956>.\n  \
    \ [RFC6676]  Venaas, S., Parekh, R., Van de Velde, G., Chown, T., and\n      \
    \        M. Eubanks, \"Multicast Addresses for Documentation\",\n            \
    \  RFC 6676, DOI 10.17487/RFC6676, August 2012,\n              <http://www.rfc-editor.org/info/rfc6676>.\n\
    \   [RFC6890]  Cotton, M., Vegoda, L., Bonica, R., Ed., and B. Haberman,\n   \
    \           \"Special-Purpose IP Address Registries\", BCP 153,\n            \
    \  RFC 6890, DOI 10.17487/RFC6890, April 2013,\n              <http://www.rfc-editor.org/info/rfc6890>.\n\
    \   [RFC7371]  Boucadair, M. and S. Venaas, \"Updates to the IPv6\n          \
    \    Multicast Addressing Architecture\", RFC 7371,\n              DOI 10.17487/RFC7371,\
    \ September 2014,\n              <http://www.rfc-editor.org/info/rfc7371>.\n \
    \  [RFC7596]  Cui, Y., Sun, Q., Boucadair, M., Tsou, T., Lee, Y., and I.\n   \
    \           Farrer, \"Lightweight 4over6: An Extension to the Dual-\n        \
    \      Stack Lite Architecture\", RFC 7596, DOI 10.17487/RFC7596,\n          \
    \    July 2015, <http://www.rfc-editor.org/info/rfc7596>.\n   [RFC7597]  Troan,\
    \ O., Ed., Dec, W., Li, X., Bao, C., Matsushima, S.,\n              Murakami,\
    \ T., and T. Taylor, Ed., \"Mapping of Address and\n              Port with Encapsulation\
    \ (MAP-E)\", RFC 7597,\n              DOI 10.17487/RFC7597, July 2015,\n     \
    \         <http://www.rfc-editor.org/info/rfc7597>.\n   [RFC8115]  Boucadair,\
    \ M., Qin, J., Tsou, T., and X. Deng, \"DHCPv6\n              Option for IPv4-Embedded\
    \ Multicast and Unicast IPv6\n              Prefixes\", RFC 8115, DOI 10.17487/RFC8115,\
    \ March 2017,\n              <http://www.rfc-editor.org/info/rfc8115>.\n"
- title: 'Appendix A.  Use Case: IPTV'
  contents:
  - "Appendix A.  Use Case: IPTV\n   IPTV generally includes two categories of service\
    \ offerings:\n   o  Video on Demand (VoD) that streams unicast video content to\n\
    \      receivers.\n   o  Multicast live TV broadcast services.\n   Two types of\
    \ provider are involved in the delivery of this service:\n   o  Content Providers,\
    \ who usually own the content that is multicast\n      to receivers.  Content\
    \ providers may contractually define an\n      agreement with network providers\
    \ to deliver content to receivers.\n   o  Network Providers, who provide network\
    \ connectivity services\n      (e.g., network providers are responsible for carrying\
    \ multicast\n      flows from head-ends to receivers).\n   Note that some contract\
    \ agreements prevent a network provider from\n   altering the content as sent\
    \ by the content provider for various\n   reasons.  Depending on these contract\
    \ agreements, multicast streams\n   should be delivered unaltered to the requesting\
    \ users.\n   Most current IPTV content is likely to remain IPv4-formatted and\
    \ out\n   of the control of network providers.  Additionally, there are\n   numerous\
    \ legacy receivers (e.g., IPv4-only Set-Top Boxes (STBs)) that\n   can't be upgraded\
    \ or easily replaced to support IPv6.  As a\n   consequence, IPv4 service continuity\
    \ must be guaranteed during the\n   transition period, including the delivery\
    \ of multicast services such\n   as Live TV Broadcasting to users.\n"
- title: Appendix B.  Older Versions of Group Membership Management Protocols
  contents:
  - "Appendix B.  Older Versions of Group Membership Management Protocols\n   Given\
    \ the multiple versions of group membership management protocols,\n   mismatch\
    \ issues may arise at the mB4 (refer to Section 6.1).\n   If IGMPv2 operates on\
    \ the IPv4 receivers while MLDv2 operates on the\n   MLD Querier, or if IGMPv3\
    \ operates on the IPv4 receivers while MLDv1\n   operates on the MLD Querier,\
    \ a version mismatch issue will be\n   encountered.  To solve this problem, the\
    \ mB4 should perform the\n   router portion of IGMP, which is similar to the corresponding\
    \ MLD\n   version (IGMPv2 for MLDv1 or IGMPv3 for MLDv2) operating in the IPv6\n\
    \   domain.  Then, the protocol interaction approach specified in\n   Section\
    \ 7 of [RFC3376] can be applied to exchange signaling messages\n   with the IPv4\
    \ receivers on which the different version of IGMP is\n   operating.\n   Note\
    \ that the support of IPv4 SSM requires MLDv2 to be enabled in the\n   IPv6 network.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Dan Wing for his guidance\
    \ in the\n   early discussions that initiated this work.  We also thank Peng Sun,\n\
    \   Jie Hu, Qiong Sun, Lizhong Jin, Alain Durand, Dean Cheng, Behcet\n   Sarikaya,\
    \ Tina Tsou, Rajiv Asati, Xiaohong Deng, and Stig Venaas for\n   their valuable\
    \ comments.\n   Many thanks to Ian Farrer for the review.\n   Thanks to Zhen Cao,\
    \ Tim Chown, Francis Dupont, Jouni Korhonen, and\n   Stig Venaas for the directorates\
    \ review.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mohamed Boucadair\n   Orange\n   Rennes  35000\n   France\n\
    \   Email: mohamed.boucadair@orange.com\n   Chao Qin\n   Cisco\n   Shanghai\n\
    \   China\n   Email: jacni@jacni.com\n   Christian Jacquenet\n   Orange\n   Rennes\
    \  35000\n   France\n   Email: christian.jacquenet@orange.com\n   Yiu L. Lee\n\
    \   Comcast\n   United States of America\n   Email: yiu_lee@cable.comcast.com\n\
    \   URI:   http://www.comcast.com\n   Qian Wang\n   China Telecom\n   China\n\
    \   Phone: +86 10 58502462\n   Email: 13301168516@189.cn\n"
