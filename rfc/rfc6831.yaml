- title: __initial_text__
  contents:
  - '  The Locator/ID Separation Protocol (LISP) for Multicast Environments

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes how inter-domain multicast routing will\n\
    \   function in an environment where Locator/ID Separation is deployed\n   using\
    \ the Locator/ID Separation Protocol (LISP) architecture.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6831.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Requirements Notation  . . . . . . . . . . . . . . .\
    \ . . . . .  4\n   3.  Definition of Terms  . . . . . . . . . . . . . . . . .\
    \ . . . .  5\n   4.  Basic Overview . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  8\n   5.  Source Addresses versus Group Addresses  . . . . . . . . .\
    \ . . 10\n   6.  Locator Reachability Implications on LISP-Multicast  . . . .\
    \ . 11\n   7.  Multicast Protocol Changes . . . . . . . . . . . . . . . . . .\
    \ 12\n   8.  LISP-Multicast Data-Plane Architecture . . . . . . . . . . . . 14\n\
    \     8.1.  ITR Forwarding Procedure . . . . . . . . . . . . . . . . . 15\n  \
    \     8.1.1.  Multiple RLOCs for an ITR  . . . . . . . . . . . . . . 15\n    \
    \   8.1.2.  Multiple ITRs for a LISP Source Site . . . . . . . . . 15\n     8.2.\
    \  ETR Forwarding Procedure . . . . . . . . . . . . . . . . . 16\n     8.3.  Replication\
    \ Locations  . . . . . . . . . . . . . . . . . . 16\n   9.  LISP-Multicast Interworking\
    \  . . . . . . . . . . . . . . . . . 17\n     9.1.  LISP and Non-LISP Mixed Sites\
    \  . . . . . . . . . . . . . . 17\n       9.1.1.  LISP Source Site to Non-LISP\
    \ Receiver Sites  . . . . . 18\n       9.1.2.  Non-LISP Source Site to Non-LISP\
    \ Receiver Sites  . . . 20\n       9.1.3.  Non-LISP Source Site to Any Receiver\
    \ Site  . . . . . . 20\n       9.1.4.  Unicast LISP Source Site to Any Receiver\
    \ Sites . . . . 21\n       9.1.5.  LISP Source Site to Any Receiver Sites . .\
    \ . . . . . . 21\n     9.2.  LISP Sites with Mixed Address Families . . . . .\
    \ . . . . . 22\n     9.3.  Making a Multicast Interworking Decision . . . . .\
    \ . . . . 24\n   10. Considerations When RP Addresses Are Embedded in Group\n\
    \       Addresses  . . . . . . . . . . . . . . . . . . . . . . . . . . 24\n  \
    \ 11. Taking Advantage of Upgrades in the Core . . . . . . . . . . . 25\n   12.\
    \ Mtrace Considerations  . . . . . . . . . . . . . . . . . . . . 25\n   13. Security\
    \ Considerations  . . . . . . . . . . . . . . . . . . . 25\n   14. Acknowledgments\
    \  . . . . . . . . . . . . . . . . . . . . . . . 26\n   15. References . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . 26\n     15.1. Normative References\
    \ . . . . . . . . . . . . . . . . . . . 26\n     15.2. Informative References\
    \ . . . . . . . . . . . . . . . . . . 27\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Locator/ID Separation Protocol [RFC6830] architecture\
    \ provides a\n   mechanism to separate out Identification and Location semantics\
    \ from\n   the current definition of an IP address.  By creating two namespaces,\n\
    \   an Endpoint ID (EID) namespace used by sites and a Routing Locator\n   (RLOC)\
    \ namespace used by core routing, the core routing\n   infrastructure can scale\
    \ by doing topological aggregation of routing\n   information.\n   Since LISP\
    \ creates a new namespace, a mapping function must exist to\n   map a site's EID-Prefixes\
    \ to its associated Locators.  For unicast\n   packets, both the source address\
    \ and destination address must be\n   mapped.  For multicast packets, only the\
    \ source address needs to be\n   mapped.  The destination group address doesn't\
    \ need to be mapped\n   because the semantics of an IPv4 or IPv6 group address\
    \ are logical in\n   nature and not topology dependent.  Therefore, this specification\n\
    \   focuses on mapping a source EID address of a multicast flow during\n   distribution\
    \ tree setup and packet delivery.\n   This specification will address the following\
    \ scenarios:\n   1.  How a multicast source host in a LISP site sends multicast\n\
    \       packets to receivers inside of its site as well as to receivers\n    \
    \   in other sites that are LISP enabled.\n   2.  How inter-domain (or between\
    \ LISP sites) multicast distribution\n       trees are built and how forwarding\
    \ of multicast packets leaving a\n       source site toward receivers sites is\
    \ performed.\n   3.  What protocols are affected and what changes are required\
    \ to such\n       multicast protocols.\n   4.  How ASM-mode (Any Source Multicast),\
    \ SSM-mode (Single Source\n       Multicast), and Bidir-mode (Bidirectional Shared\
    \ Trees) service\n       models will operate.\n   5.  How multicast packet flow\
    \ will occur for multiple combinations of\n       LISP-enabled and non-LISP-enabled\
    \ source and receiver sites.  For\n       example:\n       A.  How multicast packets\
    \ from a source host in a LISP site are\n           sent to receivers in other\
    \ sites when they are all non-LISP\n           sites.\n       B.  How multicast\
    \ packets from a source host in a LISP site are\n           sent to receivers\
    \ in both LISP-enabled sites and non-LISP\n           sites.\n       C.  How multicast\
    \ packets from a source host in a non-LISP site\n           are sent to receivers\
    \ in other sites when they are all LISP-\n           enabled sites.\n       D.\
    \  How multicast packets from a source host in a non-LISP site\n           are\
    \ sent to receivers in both LISP-enabled sites and non-LISP\n           sites.\n\
    \   This specification focuses on what changes are needed to the\n   multicast\
    \ routing protocols to support LISP-Multicast as well as\n   other protocols used\
    \ for inter-domain multicast, such as\n   Multiprotocol BGP (MBGP) [RFC4760].\
    \  The approach proposed in this\n   specification requires no packet format changes\
    \ to the protocols and\n   no operational procedural changes to the multicast\
    \ infrastructure\n   inside of a site when all sources and receivers reside in\
    \ that site,\n   even when the site is LISP enabled.  That is, internal operation\
    \ of\n   multicast is unchanged, regardless of whether or not the site is LISP\n\
    \   enabled or whether or not receivers exist in other sites that are\n   LISP\
    \ enabled.\n   Therefore, we see only operational (and not protocol) changes for\n\
    \   PIM-ASM [RFC4601], Multicast Source Discovery Protocol (MSDP)\n   [RFC3618],\
    \ and PIM-SSM [RFC4607].  BIDIR-PIM [RFC5015], which\n   typically does not run\
    \ in an inter-domain environment, is not\n   addressed in depth in this RFC.\n\
    \   Also, the current version of this specification does not describe\n   multicast-based\
    \ Traffic Engineering (TE) relative to the TE-ITR\n   (TE-based Ingress Tunnel\
    \ Router) and TE-ETR (TE-based Egress Tunnel\n   Router) descriptions in [RFC6830].\
    \  Further work is also needed to\n   determine the detailed behavior for multicast\
    \ Proxy-ITRs (mPITRs)\n   (Section 9.1.3), mtrace (Section 12), and locator reachability\n\
    \   (Section 6).  Finally, further deployment and experimentation would\n   be\
    \ useful to understand the real-life performance of the LISP-\n   Multicast solution.\
    \  For instance, the design optimizes for minimal\n   state and control traffic\
    \ in the core, but can in some cases cause\n   extra multicast traffic to be sent\
    \ Section 8.1.2.\n   Issues and concerns about the deployment of LISP for Internet\
    \ traffic\n   are discussed in [RFC6830].  Section 12 of that document provides\n\
    \   additional issues and concerns raised by this document.\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Definition of Terms
  contents:
  - "3.  Definition of Terms\n   The terminology in this section is consistent with\
    \ the definitions in\n   [RFC6830] but is extended specifically to deal with the\
    \ application\n   of the terminology to multicast routing.\n   LISP-Multicast:\
    \   a reference to the design in this specification.\n      That is, when any\
    \ site that is participating in multicast\n      communication has been upgraded\
    \ to be a LISP site, the operation\n      of control-plane and data-plane protocols\
    \ is considered part of\n      the LISP-Multicast architecture.\n   Endpoint ID\
    \ (EID):   a 32-bit (for IPv4) or 128-bit (for IPv6) value\n      used in the\
    \ source address field of the first (most inner) LISP\n      header of a multicast\
    \ packet.  The host obtains a destination\n      group address the same way it\
    \ obtains one today, as it would when\n      it is a non-LISP site.  The source\
    \ EID is obtained via existing\n      mechanisms used to set a host's \"local\"\
    \ IP address.  An EID is\n      allocated to a host from an EID-Prefix block associated\
    \ with the\n      site in which the host is located.  An EID can be used by a\
    \ host\n      to refer to another host, as when it joins an SSM (S-EID,G) route\n\
    \      using IGMP version 3 [RFC4604].  LISP uses Provider-Independent\n     \
    \ (PI) blocks for EIDs; such EIDs MUST NOT be used as LISP RLOCs.\n      Note\
    \ that EID blocks may be assigned in a hierarchical manner,\n      independent\
    \ of the network topology, to facilitate scaling of the\n      mapping database.\
    \  In addition, an EID block assigned to a site\n      may have site-local structure\
    \ (subnetting) for routing within the\n      site; this structure is not visible\
    \ to the global routing system.\n   Routing Locator (RLOC):   the IPv4 or IPv6\
    \ address of an Ingress\n      Tunnel Router (ITR), the router in the multicast\
    \ source host's\n      site that encapsulates multicast packets.  It is the output\
    \ of an\n      EID-to-RLOC mapping lookup.  An EID maps to one or more RLOCs.\n\
    \      Typically, RLOCs are numbered from topologically aggregatable\n      blocks\
    \ that are assigned to a site at each point to which it\n      attaches to the\
    \ global Internet; where the topology is defined by\n      the connectivity of\
    \ provider networks, RLOCs can be thought of as\n      Provider-Assigned (PA)\
    \ addresses.  Multiple RLOCs can be assigned\n      to the same ITR device or\
    \ to multiple ITR devices at a site.\n   Ingress Tunnel Router (ITR):   a router\
    \ that accepts an IP multicast\n      packet with a single IP header (more precisely,\
    \ an IP packet that\n      does not contain a LISP header).  The router treats\
    \ this \"inner\"\n      IP destination multicast address opaquely so it doesn't\
    \ need to\n      perform a map lookup on the group address because it is\n   \
    \   topologically insignificant.  The router then prepends an \"outer\"\n    \
    \  IP header with one of its globally routable RLOCs as the source\n      address\
    \ field.  This RLOC is known to other multicast receiver\n      sites that have\
    \ used the mapping database to join a multicast tree\n      for which the ITR\
    \ is the root.  In general, an ITR receives IP\n      packets from site end-systems\
    \ on one side and sends LISP-\n      encapsulated multicast IP packets out all\
    \ external interfaces that\n      have been joined.\n      An ITR would receive\
    \ a multicast packet from a source inside of\n      its site when 1) it is on\
    \ the path from the multicast source to\n      internally joined receivers, or\
    \ 2) when it is on the path from the\n      multicast source to externally joined\
    \ receivers.\n   Egress Tunnel Router (ETR):   a router that is on the path from\
    \ a\n      multicast source host in another site to a multicast receiver in\n\
    \      its own site.  An ETR accepts a PIM Join/Prune message from a\n      site-internal\
    \ PIM router destined for the source's EID in the\n      multicast source site.\
    \  The ETR maps the source EID in the Join/\n      Prune message to an RLOC address\
    \ based on the EID-to-RLOC mapping.\n      This sets up the ETR to accept multicast\
    \ encapsulated packets from\n      the ITR in the source multicast site.  A multicast\
    \ ETR\n      decapsulates multicast encapsulated packets and replicates them on\n\
    \      interfaces leading to internal receivers.\n   xTR:   is a reference to\
    \ an ITR or ETR when direction of data flow is\n      not part of the context\
    \ description. xTR refers to the router that\n      is the tunnel endpoint; it\
    \ is used synonymously with the term\n      \"tunnel router\".  For example, \"\
    an xTR can be located at the\n      Customer Edge (CE) router\" means that both\
    \ ITR and ETR\n      functionality can be at the CE router.\n   LISP Header: \
    \  a term used in this document to refer to the outer\n      IPv4 or IPv6 header,\
    \ a UDP header, and a LISP header.  An ITR\n      prepends headers, and an ETR\
    \ strips headers.  A LISP-encapsulated\n      multicast packet will have an \"\
    inner\" header with the source EID\n      in the source field, an \"outer\" header\
    \ with the source RLOC in the\n      source field, and the same globally unique\
    \ group address in the\n      destination field of both the inner and outer header.\n\
    \   (S,G) State:   the formal definition is in the PIM Sparse Mode\n      [RFC4601]\
    \ specification.  For this specification, the term is used\n      generally to\
    \ refer to multicast state.  Based on its topological\n      location, the (S,G)\
    \ state that resides in routers can be either\n      (S-EID,G) state (at a location\
    \ where the (S,G) state resides) or\n      (S-RLOC,G) state (in the Internet core).\n\
    \   (S-EID,G) State:   refers to multicast state in multicast source and\n   \
    \   receiver sites where S-EID is the IP address of the multicast\n      source\
    \ host (its EID).  An S-EID can appear in an IGMPv3 report,\n      an MSDP SA\
    \ message or a PIM Join/Prune message that travels inside\n      of a site.\n\
    \   (S-RLOC,G) State:   refers to multicast state in the core where S is\n   \
    \   a source locator (the IP address of a multicast ITR) of a site\n      with\
    \ a multicast source.  The (S-RLOC,G) is mapped from the\n      (S-EID,G) entry\
    \ by doing a mapping database lookup for the EID-\n      Prefix that S-EID maps\
    \ to.  An S-RLOC can appear in a PIM Join/\n      Prune message when it travels\
    \ from an ETR to an ITR over the\n      Internet core.\n   uLISP Site:   a unicast-only\
    \ LISP site according to [RFC6830] that\n      has not deployed the procedures\
    \ of this specification and,\n      therefore, for multicast purposes, follows\
    \ the procedures from\n      Section 9.  A uLISP site can be a traditional multicast\
    \ site.\n   LISP Site:   a unicast LISP site (uLISP Site) that is also multicast\n\
    \      capable according to the procedures in this specification.\n   mPETR: \
    \  this is a multicast proxy-ETR that is responsible for\n      advertising a\
    \ very coarse EID-Prefix to which non-LISP and uLISP\n      sites can target their\
    \ (S-EID,G) PIM Join/Prune messages. mPETRs\n      are used so LISP source multicast\
    \ sites can send multicast packets\n      using source addresses from the EID\
    \ namespace. mPETRs act as\n      Proxy-ETRs for supporting multicast routing\
    \ in a LISP\n      infrastructure.  It is likely a uPITR [RFC6832] and an mPETR\
    \ will\n      be co-located since the single device advertises a coarse EID-\n\
    \      Prefix in the underlying unicast routing system.\n   Mixed Locator-Sets:\
    \   this is a Locator-Set for a LISP database\n      mapping entry where the RLOC\
    \ addresses in the Locator-Set are in\n      both IPv4 and IPv6 format.\n   Unicast\
    \ Encapsulated PIM Join/Prune Message:   this is a standard PIM\n      Join/Prune\
    \ message (LISP-encapsulated with destination UDP port\n      4341) that is sent\
    \ by ETRs at multicast receiver sites to an ITR\n      at a multicast source site.\
    \  This message is sent periodically as\n      long as there are interfaces in\
    \ the OIF-list for the (S-EID,G)\n      entry for which the ETR is joining.\n\
    \   OIF-list:   this is notation to describe the outgoing interface list\n   \
    \   a multicast router stores per multicast routing table entry so it\n      knows\
    \ on which interfaces to replicate multicast packets.\n   RPF:   Reverse Path\
    \ Forwarding is a procedure used by multicast\n      routers.  A router will accept\
    \ a multicast packet for forwarding\n      if the packet was received on the path\
    \ that the router would use\n      to forward unicast packets to the multicast\
    \ packet's source.\n"
- title: 4.  Basic Overview
  contents:
  - "4.  Basic Overview\n   LISP, when used for unicast routing, increases the site's\
    \ ability to\n   control ingress traffic flows.  Egress traffic flows are controlled\n\
    \   by the IGP in the source site.  For multicast, the IGP coupled with\n   PIM\
    \ can decide which path multicast packets ingress.  By using the\n   Traffic Engineering\
    \ features of LISP [RFC6830], a multicast source\n   site can control the egress\
    \ of its multicast traffic.  By controlling\n   the priorities of Locators from\
    \ a mapping database entry, a source\n   multicast site can control which way\
    \ multicast receiver sites join to\n   the source site.\n   At this point in time,\
    \ there is no requirement for different Locator-\n   Sets, priority, and weight\
    \ policies for multicast than there is for\n   unicast.  However, when Traffic\
    \ Engineering policies are different\n   for unicast versus multicast flows, it\
    \ will be desirable to use\n   multicast-based priority and weight values in Map-Reply\
    \ messages.\n   The fundamental multicast forwarding model is to encapsulate a\n\
    \   multicast packet into another multicast packet.  An ITR will\n   encapsulate\
    \ multicast packets received from sources that it serves in\n   a LISP-Multicast\
    \ header.  The destination group address from the\n   inner header is copied to\
    \ the destination address of the outer\n   header.  The inner source address is\
    \ the EID of the multicast source\n   host and the outer source address is the\
    \ RLOC of the encapsulating\n   ITR.\n   The LISP-Multicast architecture will\
    \ follow this high-level protocol\n   and operational sequence:\n   1.  Receiver\
    \ hosts in multicast sites will join multicast content the\n       way they do\
    \ today -- they use IGMP.  When they use IGMPv3 where\n       they specify source\
    \ addresses, they use source EIDs; that is,\n       they join (S-EID,G).  If the\
    \ multicast source is external to this\n       receiver site, the PIM Join/Prune\
    \ message flows toward the ETRs,\n       finding the shortest exit (that is, the\
    \ closest exit for the\n       Join/Prune message and the closest entrance for\
    \ the multicast\n       packet to the receiver).\n   2.  The ETR does a mapping\
    \ database lookup for S-EID.  If the mapping\n       is cached from a previous\
    \ lookup (from either a previous Join/\n       Prune for the source multicast\
    \ site or a unicast packet that went\n       to the site), it will use the RLOC\
    \ information from the mapping.\n       The ETR will use the same priority and\
    \ weighting mechanism as for\n       unicast.  So, the source site can decide\
    \ which way multicast\n       packets egress.\n   3.  The ETR will build two PIM\
    \ Join/Prune messages, one that contains\n       an (S-EID,G) entry that is unicast\
    \ to the ITR that matches the\n       RLOC the ETR selects, and the other that\
    \ contains an (S-RLOC,G)\n       entry so the core network can create multicast\
    \ state from this\n       ETR to the ITR.\n   4.  When the ITR gets the unicast\
    \ Join/Prune message (see Section 3\n       for formal definition), it will process\
    \ (S-EID,G) entries in the\n       message and propagate them inside of the site\
    \ where it has\n       explicit routing information for EIDs via the IGP.  When\
    \ the ITR\n       receives the (S-RLOC,G) PIM Join/Prune message, it will process\n\
    \       it like any other join it would get in today's Internet.  The\n      \
    \ S-RLOC address is the IP address of this ITR.\n   5.  At this point, there is\
    \ (S-EID,G) state from the joining host in\n       the receiver multicast site\
    \ to the ETR of the receiver multicast\n       site.  There is (S-RLOC,G) state\
    \ across the core network from the\n       ETR of the multicast receiver site\
    \ to the ITR in the multicast\n       source site and (S-EID,G) state in the source\
    \ multicast site.\n       Note, the (S-EID,G) state is the same S-EID in each\
    \ multicast\n       site.  As other ETRs join the same multicast tree, they can\
    \ join\n       through the same ITR (in which case the packet replication is\n\
    \       done in the core) or a different ITR (in which case the packet\n     \
    \  replication is done at the source site).\n   6.  When a packet is originated\
    \ by the multicast host in the source\n       site, the packet will flow to one\
    \ or more ITRs that will prepend\n       a LISP header.  By copying the group\
    \ address to the outer\n       destination address field, the ITR inserts its\
    \ own locator\n       address in the outer source address field.  The ITR will\
    \ look at\n       its (S-RLOC,G) state, where S-RLOC is its own locator address,\n\
    \       and replicate the packet on each interface on which an (S-RLOC,G)\n  \
    \     join was received.  The core has (S-RLOC,G) so where fan-out\n       occurs\
    \ to multiple sites, a core router will do packet\n       replication.\n   7.\
    \  When either the source site or the core replicates the packet,\n       the\
    \ ETR will receive a LISP packet with a destination group\n       address.  It\
    \ will decapsulate packets because it has receivers\n       for the group.  Otherwise,\
    \ it would not have received the packets\n       because it would not have joined.\
    \  The ETR decapsulates and does\n       an (S-EID,G) lookup in its multicast\
    \ Forwarding Information Base\n       (FIB) to forward packets out one or more\
    \ interfaces to forward\n       the packet to internal receivers.\n   This architecture\
    \ is consistent and scalable with the architecture\n   presented in [RFC6830]\
    \ where multicast state in the core operates on\n   Locators, and multicast state\
    \ at the sites operates on EIDs.\n   Alternatively, [RFC6830] also has a mechanism\
    \ where (S-EID,G) state\n   can reside in the core through the use of RPF Vectors\
    \ [RFC5496] in\n   PIM Join/Prune messages.  However, few PIM implementations\
    \ support\n   RPF Vectors, and LISP should avoid S-EID state in the core.  See\n\
    \   Section 5 for details.\n   However, some observations can be made on the algorithm\
    \ above.  The\n   control plane can scale but at the expense of sending data to\
    \ sites\n   that may have not joined the distribution tree where the encapsulated\n\
    \   data is being delivered.  For example, one site joins (S-EID1,G), and\n  \
    \ another site joins (S-EID2,G).  Both EIDs are in the same multicast\n   source\
    \ site.  Both multicast receiver sites join to the same ITR with\n   state (S-RLOC,G)\
    \ where S-RLOC is the RLOC for the ITR.  The ITR joins\n   both (S-EID1,G) and\
    \ (S-EID2,G) inside of the site.  The ITR receives\n   (S-RLOC,G) joins and populates\
    \ the OIF-list state for the (S-RLOC,G)\n   entry.  Since both (S-EID1,G) and\
    \ (S-EID2, G) map to the one\n   (S-RLOC,G), packets will be delivered by the\
    \ core to both multicast\n   receiver sites even though each have joined a single\
    \ source-based\n   distribution tree.  This behavior is a consequence of the many-to-one\n\
    \   mapping between S-EIDs and a S-RLOC.\n   There is a possible solution to this\
    \ problem that reduces the number\n   of many-to-one occurrences of (S-EID,G)\
    \ entries aggregating into a\n   single (S-RLOC,G) entry.  If a physical ITR can\
    \ be assigned multiple\n   RLOC addresses and these addresses are advertised in\
    \ mapping database\n   entries, then ETRs at receiver sites have more RLOC address\
    \ options\n   and therefore can join different (RLOC,G) entries for each (S-EID,G)\n\
    \   entry joined at the receiver site.  It would not scale to have a one-\n  \
    \ to-one relationship between the number of S-EID sources at a source\n   site\
    \ and the number of RLOCs assigned to all ITRs at the site, but\n   \"n\" can\
    \ reduce to a smaller number in the \"n-to-1\" relationship.  And\n   in turn,\
    \ this reduces the opportunity for data packets to be\n   delivered to sites for\
    \ groups not joined.\n"
- title: 5.  Source Addresses versus Group Addresses
  contents:
  - "5.  Source Addresses versus Group Addresses\n   Multicast group addresses don't\
    \ have to be associated with either the\n   EID or RLOC namespace.  They actually\
    \ are a namespace of their own\n   that can be treated as logical with relatively\
    \ opaque allocation.\n   So, by their nature, they don't detract from an incremental\n\
    \   deployment of LISP-Multicast.\n   As for source addresses, as in the unicast\
    \ LISP scenario, there is a\n   decoupling of identification from location.  In\
    \ a LISP site, packets\n   are originated from hosts using their allocated EIDs.\
    \  EID addresses\n   are used to identify the host as well as where in the site's\
    \ topology\n   the host resides but not how and where it is attached to the\n\
    \   Internet.\n   Therefore, when multicast distribution tree state is created\
    \ anywhere\n   in the network on the path from any multicast receiver to a multicast\n\
    \   source, EID state is maintained at the source and receiver multicast\n   sites,\
    \ and RLOC state is maintained in the core.  That is, a\n   multicast distribution\
    \ tree will be represented as a 3-tuple of\n   {(S-EID,G) (S-RLOC,G) (S-EID,G)},\
    \ where the first element of the\n   3-tuple is the state stored in routers from\
    \ the source to one or more\n   ITRs in the source multicast site; the second\
    \ element of the 3-tuple\n   is the state stored in routers downstream of the\
    \ ITR, in the core, to\n   all LISP receiver multicast sites; and the third element\
    \ in the\n   3-tuple is the state stored in the routers downstream of each ETR,\
    \ in\n   each receiver multicast site, reaching each receiver.  Note that\n  \
    \ (S-EID,G) is the same in both the source and receiver multicast\n   sites.\n\
    \   The concatenation/mapping from the first element to the second\n   element\
    \ of the 3-tuples is done by the ITR, and from the second\n   element to the third\
    \ element is done at the ETRs.\n"
- title: 6.  Locator Reachability Implications on LISP-Multicast
  contents:
  - "6.  Locator Reachability Implications on LISP-Multicast\n   Multicast state as\
    \ it is stored in the core is always (S,G) state as\n   it exists today or (S-RLOC,G)\
    \ state as it will exist when LISP sites\n   are deployed.  The core routers cannot\
    \ distinguish one from the\n   other.  They don't need to because it is state\
    \ that uses RPF against\n   the core routing tables in the RLOC namespace.  The\
    \ difference is\n   where the root of the distribution tree for a particular source\
    \ is.\n   In the traditional multicast core, the source S is the source host's\n\
    \   IP address.  For LISP-Multicast, the source S is a single ITR of the\n   multicast\
    \ source site.\n   An ITR is selected based on the LISP EID-to-RLOC mapping used\
    \ when an\n   ETR propagates a PIM Join/Prune message out of a receiver multicast\n\
    \   site.  The selection is based on the same algorithm an ITR would use\n   to\
    \ select an ETR when sending a unicast packet to the site.  In the\n   unicast\
    \ case, the ITR can change on a per-packet basis depending on\n   the reachability\
    \ of the ETR.  So, an ITR can change relatively easily\n   using local reachability\
    \ state.  However, in the multicast case, when\n   an ITR becomes unreachable,\
    \ new distribution tree state must be built\n   because the encapsulating root\
    \ has changed.  This is more significant\n   than an RPF-change event, where any\
    \ router would typically locally\n   change its RPF-interface for its existing\
    \ tree state.  But when an\n   encapsulating LISP-Multicast ITR goes unreachable,\
    \ new distribution\n   state must be built and reflect the new encapsulator. \
    \ Therefore,\n   when an ITR goes unreachable, all ETRs that are currently joined\
    \ to\n   that ITR will have to trigger a new Join/Prune message for (S-RLOC,G)\n\
    \   to the new ITR as well as send a unicast encapsulated Join/Prune\n   message\
    \ telling the new ITR which (S-EID,G) is being joined.\n   This issue can be mitigated\
    \ by using anycast addressing for the ITRs,\n   so the problem does reduce to\
    \ an RPF change in the core, but still\n   requires a unicast encapsulated Join/Prune\
    \ message to tell the new\n   ITR about (S-EID,G).  The problem with this approach\
    \ is that the ETR\n   really doesn't know when the ITR has changed, so the new\
    \ anycast ITR\n   will get the (S-EID,G) state only when the ETR sends it the\
    \ next time\n   during its periodic sending procedures.\n"
- title: 7.  Multicast Protocol Changes
  contents:
  - "7.  Multicast Protocol Changes\n   A number of protocols are used today for inter-domain\
    \ multicast\n   routing:\n   IGMPv1-v3, MLDv1-v2:   These protocols [RFC4604]\
    \ do not require any\n      changes for LISP-Multicast for two reasons.  One is\
    \ that they are\n      link-local and not used over site boundaries, and the second\
    \ is\n      that they advertise group addresses that don't need translation.\n\
    \      Where source addresses are supplied in IGMPv3 and Multicast\n      Listener\
    \ Discovery version 2 (MLDv2) messages, they are\n      semantically regarded\
    \ as EIDs and don't need to be converted to\n      RLOCs until the multicast tree-building\
    \ protocol, such as PIM, is\n      received by the ETR at the site boundary. \
    \ Addresses used for IGMP\n      and MLD come out of the source site's allocated\
    \ addresses, which\n      are therefore from the EID namespace.\n   MBGP:   Even\
    \ though the Multiprotocol Extensions for BGP-4 (MBGP)\n      [RFC4760] are not\
    \ part of a multicast routing protocol, they are\n      used to find multicast\
    \ sources when the unicast BGP peering\n      topology and the multicast MBGP\
    \ peering topology are not\n      congruent.  When MBGP is used in a LISP-Multicast\
    \ environment, the\n      prefixes that are advertised are from the RLOC namespace.\
    \  This\n      allows receiver multicast sites to find a path to the source\n\
    \      multicast site's ITRs.  MBGP peering addresses will be from the\n     \
    \ RLOC namespace.  There are no MBGP changes required to support\n      LISP-Multicast.\n\
    \   MSDP:   MSDP [RFC3618] is used to announce active multicast sources\n    \
    \  to other routing domains (or LISP sites).  The announcements come\n      from\
    \ the PIM Rendezvous Points (RPs) from sites where there are\n      active multicast\
    \ sources sending to various groups.  In the\n      context of LISP-Multicast,\
    \ the source addresses advertised in MSDP\n      will semantically be from the\
    \ EID namespace since they describe\n      the identity of a source multicast\
    \ host.  It will be true that the\n      state stored in MSDP caches from core\
    \ routers will be from the EID\n      namespace.  An RP address inside of the\
    \ site will be from the EID\n      namespace so it can be advertised and reached\
    \ by an internal\n      unicast routing mechanism.  However, for MSDP peer-RPF\
    \ checking to\n      work properly across sites, the RP addresses must be converted\
    \ or\n      mapped into a routable address that is advertised and maintained\n\
    \      in the BGP routing tables in the core.  MSDP peering addresses can\n  \
    \    come out of either the EID or a routable address namespace.  Also,\n    \
    \  the choice can be made unilaterally because the ITR at the site\n      will\
    \ determine which namespace the destination peer address is out\n      of by looking\
    \ in the mapping database service.  There are no MSDP\n      changes required\
    \ to support LISP-Multicast.\n   PIM-SSM:   In the simplest form of distribution\
    \ tree building, when\n      PIM operates in SSM mode [RFC4607], a source distribution\
    \ tree is\n      built and maintained across site boundaries.  In this case, there\n\
    \      is a small modification to how PIM Join/Prune messages are sent by\n  \
    \    the LISP-Multicast component.  No modifications to any message\n      format,\
    \ but to support taking a Join/Prune message originated\n      inside of a LISP\
    \ site with embedded addresses from the EID\n      namespace and converting them\
    \ to addresses from the RLOC namespace\n      when the Join/Prune message crosses\
    \ a site boundary.  This is\n      similar to the requirements documented in [RFC5135].\n\
    \   BIDIR-PIM:   Bidirectional PIM [RFC5015] is typically run inside of a\n  \
    \    routing domain, but if deployed in an inter-domain environment,\n      one\
    \ would have to decide if the RP address of the shared tree\n      would be from\
    \ the EID namespace or the RLOC namespace.  If the RP\n      resides in a site-based\
    \ router, then the RP address is from the\n      EID namespace.  If the RP resides\
    \ in the core where RLOC addresses\n      are routed, then the RP address is from\
    \ the RLOC namespace.  This\n      could be easily distinguishable if the EID\
    \ address were in a well-\n      known address allocation block from the RLOC\
    \ namespace.  Also,\n      when using Embedded-RP for RP determination [RFC3956],\
    \ the format\n      of the group address could indicate the namespace the RP address\n\
    \      is from.  However, refer to Section 10 for considerations core\n      routers\
    \ need to make when using Embedded-RP IPv6 group addresses.\n      When using\
    \ BIDIR-PIM for inter-domain multicast routing, it is\n      recommended to use\
    \ statically configured RPs.  This allows core\n      routers to associate a Bidir\
    \ group's RP address with an ITR's RLOC\n      address, and site routers to associate\
    \ the Bidir group's RP\n      address as an EID address.  With respect to Designated\
    \ Forwarder\n      (DF) election in BIDIR-PIM, no changes are required since all\n\
    \      messaging and addressing is link-local.\n   PIM-ASM:   The ASM mode of\
    \ PIM [RFC4601], the most popular form of\n      PIM, is deployed in the Internet\
    \ today by having shared trees\n      within a site and using source trees across\
    \ sites.  By the use of\n      MSDP and PIM-SSM techniques described above, multicast\n\
    \      connectivity can occur across LISP sites.  Having said that, that\n   \
    \   means there are no special actions required for processing (*,G)\n      or\
    \ (S,G,R) Join/Prune messages since they all operate against the\n      shared\
    \ tree that is site resident.  Just like with ASM, there is\n      no (*,G) in\
    \ the core when LISP-Multicast is in use.  This is also\n      true for the RP-mapping\
    \ mechanisms Auto-RP and Bootstrap Router\n      (BSR) [RFC5059].\n   Based on\
    \ the protocol description above, the conclusion is that there\n   are no protocol\
    \ message format changes, just a translation function\n   performed at the control\
    \ plane.  This will make for an easier and\n   faster transition for LISP since\
    \ fewer components in the network have\n   to change.\n   It should also be stated\
    \ just like it is in [RFC6830] that no host\n   changes, whatsoever, are required\
    \ to have a multicast source host\n   send multicast packets and for a multicast\
    \ receiver host to receive\n   multicast packets.\n"
- title: 8.  LISP-Multicast Data-Plane Architecture
  contents:
  - "8.  LISP-Multicast Data-Plane Architecture\n   The LISP-Multicast data-plane\
    \ operation conforms to the operation and\n   packet formats specified in [RFC6830].\
    \  However, encapsulating a\n   multicast packet from an ITR is a much simpler\
    \ process.  The process\n   is simply to copy the inner group address to the outer\
    \ destination\n   address.  And to have the ITR use its own IP address (its RLOC)\
    \ as\n   the source address.  The process is simpler for multicast because\n \
    \  there is no EID-to-RLOC mapping lookup performed during packet\n   forwarding.\n\
    \   In the decapsulation case, the ETR simply removes the outer header\n   and\
    \ performs a multicast routing table lookup on the inner header\n   (S-EID,G)\
    \ addresses.  Then, the OIF-list for the (S-EID,G) entry is\n   used to replicate\
    \ the packet on site-facing interfaces leading to\n   multicast receiver hosts.\n\
    \   There is no Data-Probe logic for ETRs as there can be in the unicast\n   forwarding\
    \ case.\n"
- title: 8.1.  ITR Forwarding Procedure
  contents:
  - "8.1.  ITR Forwarding Procedure\n   The following procedure is used by an ITR,\
    \ when it receives a\n   multicast packet from a source inside of its site:\n\
    \   1.  A multicast data packet sent by a host in a LISP site will have\n    \
    \   the source address equal to the host's EID and the destination\n       address\
    \ equal to the address of the multicast group.  It is\n       assumed the group\
    \ information is obtained by current methods.\n       The same is true for a multicast\
    \ receiver to obtain the source\n       and group address of a multicast flow.\n\
    \   2.  When the ITR receives a multicast packet, it will have both S-EID\n  \
    \     state and S-RLOC state stored.  Since the packet was received on\n     \
    \  a site-facing interface, the RPF lookup is based on the S-EID\n       state.\
    \  If the RPF check succeeds, then the OIF-list contains\n       interfaces that\
    \ are site facing and external facing.  For the\n       site-facing interfaces,\
    \ no LISP header is prepended.  For the\n       external-facing interfaces a LISP\
    \ header is prepended.  When the\n       ITR prepends a LISP header, it uses its\
    \ own RLOC address as the\n       source address and copies the group address\
    \ supplied by the IP\n       header that the host built as the outer destination\
    \ address.\n"
- title: 8.1.1.  Multiple RLOCs for an ITR
  contents:
  - "8.1.1.  Multiple RLOCs for an ITR\n   Typically, an ITR will have a single RLOC\
    \ address, but in some cases\n   there could be multiple RLOC addresses assigned\
    \ from either the same\n   or different service providers.  In this case, when\
    \ (S-RLOC,G) Join/\n   Prune messages are received for each RLOC, there is a OIF-list\n\
    \   merging action that must take place.  Therefore, when a packet is\n   received\
    \ from a site-facing interface that matches on an (S-EID,G)\n   entry, the interfaces\
    \ of the OIF-list from all (RLOC,G) entries\n   joined to the ITR as well as the\
    \ site-facing OIF-list joined for\n   (S-EID,G) must be included in packet replication.\
    \  In addition to\n   replicating for all types of OIF-lists, each OIF-list entry\
    \ must be\n   tagged with the RLOC address, so encapsulation uses the outer source\n\
    \   address for the RLOC joined.\n"
- title: 8.1.2.  Multiple ITRs for a LISP Source Site
  contents:
  - "8.1.2.  Multiple ITRs for a LISP Source Site\n   Note that when ETRs from different\
    \ multicast receiver sites receive\n   (S-EID,G) joins, they may select a different\
    \ S-RLOC for a multicast\n   source site due to policy (the multicast ITR can\
    \ return different\n   multicast priority and weight values per ETR Map-Request).\
    \  In this\n   case, the same (S-EID,G) is being realized by different (S-RLOC,G)\n\
    \   state in the core.  This will not result in duplicate packets because\n  \
    \ each ITR in the multicast source site will choose their own RLOC for\n   the\
    \ source address for encapsulated multicast traffic.  The RLOC\n   addresses are\
    \ the ones joined by remote multicast ETRs.\n   When different (S-EID,G) traffic\
    \ is combined into a single (RLOC,G)\n   core distribution tree, this may cause\
    \ traffic to go to a receiver\n   multicast site when it does not need to.  This\
    \ happens when one\n   receiver multicast site joins (S1-EID,Gi) through a core\
    \ distribution\n   tree of (RLOC1,Gi) and another multicast receiver site joins\n\
    \   (S2-EID,Gi) through the same core distribution tree of (RLOC1,Gi).\n   When\
    \ ETRs decapsulate such traffic, they should know from their local\n   (S-EID,G)\
    \ state if the packet should be forwarded.  If there is no\n   (S-EID,G) state\
    \ that matches the inner packet header, the packet is\n   discarded.\n"
- title: 8.2.  ETR Forwarding Procedure
  contents:
  - "8.2.  ETR Forwarding Procedure\n   The following procedure is used by an ETR,\
    \ when it receives a\n   multicast packet from a source outside of its site:\n\
    \   1.  When a multicast data packet is received by an ETR on an\n       external-facing\
    \ interface, it will do an RPF lookup on the S-RLOC\n       state it has stored.\
    \  If the RPF check succeeds, the interfaces\n       from the OIF-list are used\
    \ for replication to interfaces that are\n       site facing as well as interfaces\
    \ that are external facing (this\n       ETR can also be a transit multicast router\
    \ for receivers outside\n       of its site).  When the packet is to be replicated\
    \ for an\n       external-facing interface, the LISP encapsulation header is not\n\
    \       stripped.  When the packet is replicated for a site-facing\n       interface,\
    \ the encapsulation header is stripped.\n   2.  The packet without a LISP header\
    \ is now forwarded down the\n       (S-EID,G) distribution tree in the receiver\
    \ multicast site.\n"
- title: 8.3.  Replication Locations
  contents:
  - "8.3.  Replication Locations\n   Multicast packet replication can happen in the\
    \ following topological\n   locations:\n   o  In an IGP multicast router inside\
    \ a site that operates on S-EIDs.\n   o  In a transit multicast router inside\
    \ of the core that operates on\n      S-RLOCs.\n   o  At one or more ETR routers\
    \ depending on the path a Join/Prune\n      message exits a receiver multicast\
    \ site.\n   o  At one or more ITR routers in a source multicast site depending\
    \ on\n      what priorities are returned in a Map-Reply to receiver multicast\n\
    \      sites.\n   In the last case, the source multicast site can do replication\
    \ rather\n   than having a single exit from the site.  But this can occur only\n\
    \   when the priorities in the Map-Reply are modified for different\n   receiver\
    \ multicast sites so that the PIM Join/Prune messages arrive\n   at different\
    \ ITRs.\n   This policy technique, also used in [RFC6836] for unicast, is useful\n\
    \   for multicast to mitigate the problems of changing distribution tree\n   state\
    \ as discussed in Section 6.\n"
- title: 9.  LISP-Multicast Interworking
  contents:
  - "9.  LISP-Multicast Interworking\n   This section describes the multicast corollary\
    \ to [RFC6832] regarding\n   the interworking of multicast routing among LISP\
    \ and non-LISP sites.\n"
- title: 9.1.  LISP and Non-LISP Mixed Sites
  contents:
  - "9.1.  LISP and Non-LISP Mixed Sites\n   Since multicast communication can involve\
    \ more than two entities to\n   communicate together, the combinations of interworking\
    \ scenarios are\n   more involved.  However, the state maintained for distribution\
    \ trees\n   at the sites is the same, regardless of whether or not the site is\n\
    \   LISP enabled.  So, most of the implications are in the core with\n   respect\
    \ to storing routable EID-Prefixes from either PA or PI blocks.\n   Before enumerating\
    \ the multicast interworking scenarios, let's define\n   three deployment states\
    \ of a site:\n   o  A non-LISP site that will run PIM-SSM or PIM-ASM with MSDP\
    \ as it\n      does today.  The addresses for the site are globally routable.\n\
    \   o  A site that deploys LISP for unicast routing.  The addresses for\n    \
    \  the site are not globally routable.  Let's define the name for\n      this\
    \ type of site as a uLISP site.\n   o  A site that deploys LISP for both unicast\
    \ and multicast routing.\n      The addresses for the site are not globally routable.\
    \  Let's\n      define the name for this type of site as a LISP-Multicast site.\n\
    \   A LISP site enabled for multicast purposes only will not be\n   considered\
    \ in this document, but a uLISP site as documented in\n   [RFC6832] will be considered.\
    \  In this section there is no discussion\n   of how a LISP site sends multicast\
    \ packets when all receiver sites\n   are LISP-Multicast enabled; that has been\
    \ discussed in previous\n   sections.\n   The following scenarios exist to make\
    \ LISP-Multicast sites interwork\n   with non-LISP-Multicast sites:\n   1.  A\
    \ LISP site must be able to send multicast packets to receiver\n       sites that\
    \ are a mix of non-LISP sites and uLISP sites.\n   2.  A non-LISP site must be\
    \ able to send multicast packets to\n       receiver sites that are a mix of non-LISP\
    \ sites and uLISP sites.\n   3.  A non-LISP site must be able to send multicast\
    \ packets to\n       receiver sites that are a mix of LISP sites, uLISP sites,\
    \ and\n       non-LISP sites.\n   4.  A uLISP site must be able to send multicast\
    \ packets to receiver\n       sites that are a mix of LISP sites, uLISP sites,\
    \ and non-LISP\n       sites.\n   5.  A LISP site must be able to send multicast\
    \ packets to receiver\n       sites which are a mix of LISP sites, uLISP sites,\
    \ and non-LISP\n       sites.\n"
- title: 9.1.1.  LISP Source Site to Non-LISP Receiver Sites
  contents:
  - "9.1.1.  LISP Source Site to Non-LISP Receiver Sites\n   In the first scenario,\
    \ a site is LISP enabled for both unicast and\n   multicast traffic and as such\
    \ operates on EIDs.  Therefore, there is\n   a possibility that the EID-Prefix\
    \ block is not routable in the core.\n   For LISP receiver multicast sites, this\
    \ isn't a problem, but for non-\n   LISP or uLISP receiver multicast sites, when\
    \ a PIM Join/Prune message\n   is received by the edge router, it has no route\
    \ to propagate the\n   Join/Prune message out of the site.  This is no different\
    \ than the\n   unicast case that LISP Network Address Translation (LISP-NAT) in\n\
    \   [RFC6832] solves.\n   LISP-NAT allows a unicast packet that exits a LISP site\
    \ to get its\n   source address mapped to a globally routable address before the\
    \ ITR\n   realizes that it should not encapsulate the packet destined to a non-\n\
    \   LISP site.  For a multicast packet to leave a LISP site, distribution\n  \
    \ tree state needs to be built so the ITR can know where to send the\n   packet.\
    \  So, the receiver multicast sites need to know about the\n   multicast source\
    \ host by its routable address and not its EID\n   address.  When this is the\
    \ case, the routable address is the\n   (S-RLOC,G) state that is stored and maintained\
    \ in the core routers.\n   It is important to note that the routable address for\
    \ the host cannot\n   be the same as an RLOC for the site because it is desirable\
    \ for ITRs\n   to process a PIM Join/Prune message that is received from an\n\
    \   external-facing interface.  If the message will be propagated inside\n   of\
    \ the site, the site-part of the distribution tree is built.\n   Using a globally\
    \ routable source address allows non-LISP and uLISP\n   multicast receivers to\
    \ join, create, and maintain a multicast\n   distribution tree.  However, the\
    \ LISP-Multicast receiver site will\n   want to perform an EID-to-RLOC mapping\
    \ table lookup when a PIM Join/\n   Prune message is received on a site-facing\
    \ interface.  It does this\n   because it wants to find an (S-RLOC,G) entry to\
    \ Join in the core.\n   So, there is a conflict of behavior between the two types\
    \ of sites.\n   The solution to this problem is the same as when an ITR wants\
    \ to send\n   a unicast packet to a destination site but needs to determine if\
    \ the\n   site is LISP enabled or not.  When it is not LISP enabled, the ITR\n\
    \   does not encapsulate the packet.  So, for the multicast case, when\n   the\
    \ ETR receives a PIM Join/Prune message for (S-EID,G) state, it\n   will do a\
    \ mapping table lookup on S-EID.  In this case, S-EID is not\n   in the mapping\
    \ database because the source multicast site is using a\n   routable address and\
    \ not an EID-Prefix address.  So, the ETR knows to\n   simply propagate the PIM\
    \ Join/Prune message to an external-facing\n   interface without converting the\
    \ (S-EID,G) because it is an (S,G),\n   where S is routable and reachable via\
    \ core routing tables.\n   Now that the multicast distribution tree is built and\
    \ maintained from\n   any non-LISP or uLISP receiver multicast site, the way the\
    \ packet\n   forwarding model is used can be explained.\n   Since the ITR in the\
    \ source multicast site has never received a\n   unicast encapsulated PIM Join/Prune\
    \ message from any ETR in a\n   receiver multicast site, it knows there are no\
    \ LISP-Multicast\n   receiver sites.  Therefore, there is no need for the ITR\
    \ to\n   encapsulate data.  Since it will know a priori (via configuration)\n\
    \   that its site's EIDs are not routable (and not registered to the\n   mapping\
    \ database system), it assumes that the multicast packets from\n   the source\
    \ host are sent by a routable address.  That is, it is the\n   responsibility\
    \ of the multicast source host's system administrator to\n   ensure that the source\
    \ host sends multicast traffic using a routable\n   source address.  When this\
    \ happens, the ITR acts simply as a router\n   and forwards the multicast packet\
    \ like an ordinary multicast router.\n   There is an alternative to using a LISP-NAT\
    \ scheme just as there is\n   an alternative to using unicast [RFC6832] forwarding\
    \ by employing\n   Proxy Tunnel Routers (PxTRs).  This can work the same way for\n\
    \   multicast routing as well, but the difference is that non-LISP and\n   uLISP\
    \ sites will send PIM Join/Prune messages for (S-EID,G) that make\n   their way\
    \ in the core to multicast PxTRs.  Let's call this use of a\n   PxTR as a \"Multicast\
    \ Proxy-ETR\" (or mPETR).  Since the mPETRs\n   advertise very coarse EID-Prefixes,\
    \ they draw the PIM Join/Prune\n   control traffic making them the target of the\
    \ distribution tree.  To\n   get multicast packets from the LISP source multicast\
    \ sites, the tree\n   needs to be built on the path from the mPETR to the LISP\
    \ source\n   multicast site.  To make this happen, the mPETR acts as a \"Proxy-ETR\"\
    \n   (where in unicast it acts as a \"Proxy-ITR\", or an uPITR [RFC6832]).\n \
    \  The existence of mPETRs in the core allows source multicast site ITRs\n   to\
    \ encapsulate multicast packets according to (S-RLOC,G) state.  The\n   (S-RLOC,G)\
    \ state is built from the mPETRs to the multicast ITRs.  The\n   encapsulated\
    \ multicast packets are decapsulated by mPETRs and then\n   forwarded according\
    \ to (S-EID,G) state.  The (S-EID,G) state is built\n   from the non-LISP and\
    \ uLISP receiver multicast sites to the mPETRs.\n"
- title: 9.1.2.  Non-LISP Source Site to Non-LISP Receiver Sites
  contents:
  - "9.1.2.  Non-LISP Source Site to Non-LISP Receiver Sites\n   Clearly non-LISP-Multicast\
    \ sites can send multicast packets to non-\n   LISP receiver multicast sites.\
    \  That is what they do today.  However,\n   discussion is required to show how\
    \ non-LISP-Multicast sites send\n   multicast packets to uLISP receiver multicast\
    \ sites.\n   Since uLISP receiver multicast sites are not targets of any (S,G)\n\
    \   state, they simply send (S,G) PIM Join/Prune messages toward the non-\n  \
    \ LISP source multicast site.  Since the source multicast site in this\n   case\
    \ has not been upgraded to LISP, all multicast source host\n   addresses are routable.\
    \  So, this case is simplified to where a uLISP\n   receiver multicast site appears\
    \ to the source multicast site to be a\n   non-LISP receiver multicast site.\n"
- title: 9.1.3.  Non-LISP Source Site to Any Receiver Site
  contents:
  - "9.1.3.  Non-LISP Source Site to Any Receiver Site\n   When a non-LISP source\
    \ multicast site has receivers in either a non-\n   LISP/uLISP site or a LISP\
    \ site, one needs to decide how the LISP\n   receiver multicast site will attach\
    \ to the distribution tree.  It is\n   known from Section 9.1.2 that non-LISP\
    \ and uLISP receiver multicast\n   sites can join the distribution tree, but a\
    \ LISP receiver multicast\n   site ETR will need to know if the source address\
    \ of the multicast\n   source host is routable or not.  It has been shown in Section\
    \ 9.1.1\n   that an ETR, before it sends a PIM Join/Prune message on an external-\n\
    \   facing interface, does an EID-to-RLOC mapping lookup to determine if\n   it\
    \ should convert the (S,G) state from a PIM Join/Prune message\n   received on\
    \ a site-facing interface to an (S-RLOC,G).  If the lookup\n   fails, the ETR\
    \ can conclude the source multicast site is a non-LISP\n   site, so it simply\
    \ forwards the Join/Prune message.  (It also doesn't\n   need to send a unicast\
    \ encapsulated Join/Prune message because there\n   is no ITR in a non-LISP site\
    \ and there is namespace continuity\n   between the ETR and source.)\n   For a\
    \ non-LISP source multicast site, (S-EID,G) state could be\n   limited to the\
    \ edges of the network with the use of multicast proxy-\n   ITRs (mPITRs).  The\
    \ mPITRs can take native, unencapsulated multicast\n   packets from non-LISP source\
    \ multicast and uLISP sites and\n   encapsulate them to ETRs in receiver multicast\
    \ sites or to mPETRs\n   that can decapsulate for non-LISP receiver multicast\
    \ or uLISP sites.\n   The mPITRs are responsible for sending (S-EID,G) joins to\
    \ the non-\n   LISP source multicast site.  To connect the distribution trees\n\
    \   together, multicast ETRs will need to be configured with the mPITR's\n   RLOC\
    \ addresses so they can send both (S-RLOC,G) joins to build a\n   distribution\
    \ tree to the mPITR as well as configured for sending\n   unicast joins to mPITRs\
    \ so they can propagate (S-EID,G) joins into\n   source multicast sites.  The\
    \ use of mPITRs is undergoing more study\n   and is a work in progress.\n"
- title: 9.1.4.  Unicast LISP Source Site to Any Receiver Sites
  contents:
  - "9.1.4.  Unicast LISP Source Site to Any Receiver Sites\n   In the last section,\
    \ it was explained how an ETR in a multicast\n   receiver site can determine if\
    \ a source multicast site is LISP\n   enabled by looking into the mapping database.\
    \  When the source\n   multicast site is a uLISP site, it is LISP enabled, but\
    \ the ITR, by\n   definition, is not capable of doing multicast encapsulation.\
    \  So, for\n   the purposes of multicast routing, the uLISP source multicast site\
    \ is\n   treated as a non-LISP source multicast site.\n   Non-LISP receiver multicast\
    \ sites can join distribution trees to a\n   uLISP source multicast site since\
    \ the source site behaves, from a\n   forwarding perspective, as a non-LISP source\
    \ site.  This is also the\n   case for a uLISP receiver multicast site since the\
    \ ETR does not have\n   multicast functionality built-in or enabled.\n   Special\
    \ considerations are required for LISP receiver multicast\n   sites; since they\
    \ think the source multicast site is LISP enabled,\n   the ETR cannot know if\
    \ the ITR is LISP-Multicast enabled.  To solve\n   this problem, each mapping\
    \ database entry will have a multicast\n   2-tuple (Mpriority, Mweight) per RLOC\
    \ [RFC6830].  When the Mpriority\n   is set to 255, the site is considered not\
    \ multicast capable.  So, an\n   ETR in a LISP receiver multicast site can distinguish\
    \ whether a LISP\n   source multicast site is a LISP-Multicast site or a uLISP\
    \ site.\n"
- title: 9.1.5.  LISP Source Site to Any Receiver Sites
  contents:
  - "9.1.5.  LISP Source Site to Any Receiver Sites\n   When a LISP source multicast\
    \ site has receivers in LISP, non-LISP,\n   and uLISP receiver multicast sites,\
    \ it has a conflict about how it\n   sends multicast packets.  The ITR can either\
    \ encapsulate or natively\n   forward multicast packets.  Since the receiver multicast\
    \ sites are\n   heterogeneous in their behavior, one packet-forwarding mechanism\n\
    \   cannot satisfy both.  However, if a LISP receiver multicast site acts\n  \
    \ like a uLISP site, then it could receive packets like a non-LISP\n   receiver\
    \ multicast site, thereby making all receiver multicast sites\n   have homogeneous\
    \ behavior.  However, this poses the following issues:\n   o  LISP-NAT techniques\
    \ with routable addresses would be required in\n      all cases.\n   o  Or, alternatively,\
    \ mPETR deployment would be required, thus\n      forcing coarse EID-Prefix advertisement\
    \ in the core.\n   o  But, what is most disturbing is that when all sites that\n\
    \      participate are LISP-Multicast sites but a non-LISP or uLISP site\n   \
    \   joins the distribution tree, then the existing joined LISP\n      receiver\
    \ multicast sites would have to change their behavior.\n      This would create\
    \ too much dynamic tree-building churn to be a\n      viable alternative.\n  \
    \ So, the solution space options are:\n   1.  Make the LISP ITR in the source\
    \ multicast site send two packets,\n       one that is encapsulated with (S-RLOC,G)\
    \ to reach LISP receiver\n       multicast sites and another that is not encapsulated\
    \ with\n       (S-EID,G) to reach non-LISP and uLISP receiver multicast sites.\n\
    \   2.  Make the LISP ITR always encapsulate packets with (S-RLOC,G) to\n    \
    \   reach LISP-Multicast sites and to reach mPETRs that can\n       decapsulate\
    \ and forward (S-EID,G) packets to non-LISP and uLISP\n       receiver multicast\
    \ sites.\n"
- title: 9.2.  LISP Sites with Mixed Address Families
  contents:
  - "9.2.  LISP Sites with Mixed Address Families\n   A LISP database mapping entry\
    \ that describes the Locator-Set,\n   Mpriority, and Mweight per locator address\
    \ (RLOC), for an EID-Prefix\n   associated with a site could have RLOC addresses\
    \ in either IPv4 or\n   IPv6 format.  When a mapping entry has a mix of RLOC-formatted\n\
    \   addresses, it is an implicit advertisement by the site that it is a\n   dual-stack\
    \ site.  That is, the site can receive IPv4 or IPv6 unicast\n   packets.\n   To\
    \ distinguish if the site can receive dual-stack unicast packets as\n   well as\
    \ dual-stack multicast packets, the Mpriority value setting\n   will be relative\
    \ to an IPv4 or IPv6 RLOC See [RFC6830] for packet\n   format details.\n   If\
    \ one considers the combinations of LISP, non-LISP, and uLISP sites\n   sharing\
    \ the same distribution tree and considering the capabilities\n   of supporting\
    \ IPv4, IPv6, or dual-stack, the number of total\n   combinations grows beyond\
    \ comprehension.\n   Using some combinatorial math, the following profiles of\
    \ a site and\n   the combinations that can occur:\n   1.  LISP-Multicast IPv4\
    \ Site\n   2.  LISP-Multicast IPv6 Site\n   3.  LISP-Multicast Dual-Stack Site\n\
    \   4.  uLISP IPv4 Site\n   5.  uLISP IPv6 Site\n   6.  uLISP Dual-Stack Site\n\
    \   7.  non-LISP IPv4 Site\n   8.  non-LISP IPv6 Site\n   9.  non-LISP Dual-Stack\
    \ Site\n   Let's define (m n) = m!/(n!*(m-n)!), pronounced \"m choose n\" to\n\
    \   illustrate some combinatorial math below.\n   When 1 site talks to another\
    \ site, the combinatorial is (9 2), when 1\n   site talks to another 2 sites,\
    \ the combinatorial is (9 3).  If we sum\n   this up to (9 9), then:\n   (9 2)\
    \ + (9 3) + (9 4) + (9 5) + (9 6) + (9 7) + (9 8) + (9 9) =\n     36  +   84 \
    \ +  126  +  126  +   84  +   36  +   9   +   1\n   which results in 502 as the\
    \ total number of cases to be considered.\n   This combinatorial gets even worse\
    \ when one considers a site using\n   one address family inside of the site and\
    \ the xTRs using the other\n   address family (as in using IPv4 EIDs with IPv6\
    \ RLOCs or IPv6 EIDs\n   with IPv4 RLOCs).\n   To rationalize this combinatorial\
    \ nightmare, there are some\n   guidelines that need to be put in place:\n   o\
    \  Each distribution tree shared between sites will either be an IPv4\n      distribution\
    \ tree or an IPv6 distribution tree.  Therefore, head-\n      end replication\
    \ can be avoided by building and sending packets on\n      each address-family-based\
    \ distribution tree.  Even though there\n      might be an urge to do multicast\
    \ packet translation from one\n      address family format to the other, it is\
    \ a non-viable over-\n      complicated urge.  Multicast ITRs will only encapsulate\
    \ packets\n      where the inner and outer headers are from the same address\n\
    \      family.\n   o  All LISP sites on a multicast distribution tree must share\
    \ a\n      common address family that is determined by the source site's\n   \
    \   Locator-Set in its LISP database mapping entry.  All receiver\n      multicast\
    \ sites will use the best RLOC priority controlled by the\n      source multicast\
    \ site.  This is true when the source site is\n      either LISP-Multicast or\
    \ uLISP enabled.  This means that priority-\n      based policy modification is\
    \ prohibited.  When a receiver\n      multicast site ETR receives an (S-EID,G)\
    \ join, it must select a\n      S-RLOC for the same address family as S-EID.\n\
    \   o  When a multicast Locator-Set has more than one locator, only\n      locators\
    \ from the same address family MUST be set to the same best\n      priority value.\
    \  A mixed Locator-Set can exist (for unicast use),\n      but the multicast priorities\
    \ MUST be the set for the same address\n      family locators.\n   o  When the\
    \ source site is not LISP enabled, determining the address\n      family for the\
    \ flow is up to how receivers find the source and\n      group information for\
    \ a multicast flow.\n"
- title: 9.3.  Making a Multicast Interworking Decision
  contents:
  - "9.3.  Making a Multicast Interworking Decision\n   Thus far, Section 9 has shown\
    \ all combinations of multicast\n   connectivity that could occur.  As already\
    \ concluded, this can be\n   quite complicated, and, if the design is too ambitious,\
    \ the dynamics\n   of the protocol could cause a lot of instability.\n   The trade-off\
    \ decisions are hard to make, and so the same single\n   solution is desirable\
    \ to work for both IPv4 and IPv6 multicast.  It\n   is imperative to have an incrementally\
    \ deployable solution for all of\n   IPv4 unicast and multicast and IPv6 unicast\
    \ and multicast while\n   minimizing (or eliminating) both unicast and multicast\
    \ EID namespace\n   state.\n   Therefore, the design decision to go with uPITRs\
    \ [RFC6832] for\n   unicast routing and mPETRs for multicast routing seems to\
    \ be the\n   sweet spot in the solution space in order to optimize state\n   requirements\
    \ and avoid head-end data replication at ITRs.\n"
- title: 10.  Considerations When RP Addresses Are Embedded in Group Addresses
  contents:
  - "10.  Considerations When RP Addresses Are Embedded in Group Addresses\n   When\
    \ ASM and PIM-BIDIR are used in an IPv6 inter-domain environment,\n   a technique\
    \ exists to embed the unicast address of an RP in an IPv6\n   group address [RFC3956].\
    \  When routers in end sites process a PIM\n   Join/Prune message that contains\
    \ an Embedded-RP group address, they\n   extract the RP address from the group\
    \ address and treat it from the\n   EID namespace.  However, core routers do not\
    \ have state for the EID\n   namespace and need to extract an RP address from\
    \ the RLOC namespace.\n   Therefore, it is the responsibility of ETRs in multicast\
    \ receiver\n   sites to map the group address into a group address where the\n\
    \   Embedded-RP address is from the RLOC namespace.  The mapped RP\n   address\
    \ is obtained from an EID-to-RLOC mapping database lookup.  The\n   ETR will also\
    \ send a unicast (*,G) Join/Prune message to the ITR so\n   the branch of the\
    \ distribution tree from the source site resident RP\n   to the ITR is created.\n\
    \   This technique is no different than the techniques described in this\n   specification\
    \ for translating (S,G) state and propagating Join/Prune\n   messages into the\
    \ core.  The only difference is that the (*,G) state\n   in Join/Prune messages\
    \ are mapped because they contain unicast\n   addresses encoded in an Embedded-RP\
    \ group address.\n"
- title: 11.  Taking Advantage of Upgrades in the Core
  contents:
  - "11.  Taking Advantage of Upgrades in the Core\n   If the core routers are upgraded\
    \ to support [RFC5496], then the EID-\n   specific data can be passed through\
    \ the core without, possibly,\n   having to store the state in the core.\n   By\
    \ doing this, one can eliminate the ETR from unicast encapsulated\n   PIM Join/Prune\
    \ messages to the source site's ITR.\n   However, this solution is restricted\
    \ to a small set of workable cases\n   that would not be good for general use\
    \ of LISP-Multicast.  In\n   addition, due to slow convergence properties, it\
    \ is not recommended\n   for LISP-Multicast.\n"
- title: 12.  Mtrace Considerations
  contents:
  - "12.  Mtrace Considerations\n   Mtrace functionality MUST be consistent with unicast\
    \ traceroute\n   functionality where all hops from multicast receiver to multicast\n\
    \   source are visible.\n   The design for mtrace for use in LISP-Multicast environments\
    \ is to be\n   determined but should build upon mtrace version 2 specified in\n\
    \   [MTRACE].\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   The security concerns for LISP-Multicast are\
    \ mainly the same as for\n   the base LISP specification [RFC6830] and for multicast\
    \ in general,\n   including PIM-ASM [RFC4601].\n   There may be a security concern\
    \ with respect to unicast PIM messages.\n   When multiple receiver sites are joining\
    \ an (S-EID1,G) distribution\n   tree that maps to a (RLOC1,G) core distribution\
    \ tree, and a malicious\n   receiver site joins an (S-EID2,G) distribution tree\
    \ that also maps to\n   the (RLOC1,G) core distribution tree, the legitimate sites\
    \ will\n   receive data from S-EID2 when they did not ask for it.\n   Other than\
    \ as noted above, there are currently no known security\n   differences between\
    \ multicast with LISP and multicast without LISP.\n   However, this has not been\
    \ a topic that has been investigated deeply\n   so far; therefore, additional\
    \ issues might arise in future.\n"
- title: 14.  Acknowledgments
  contents:
  - "14.  Acknowledgments\n   The authors would like to gratefully acknowledge the\
    \ people who have\n   contributed discussion, ideas, and commentary to the making\
    \ of this\n   proposal and specification.  People who provided expert review were\n\
    \   Scott Brim, Greg Shepherd, and Dave Oran.  Other commentary from\n   discussions\
    \ at the Summer 2008 IETF in Dublin were Toerless Eckert\n   and IJsbrand Wijnands.\n\
    \   The authors would also like to thank the MBONED working group for\n   constructive\
    \ and civil verbal feedback when this document was\n   presented at the Fall 2008\
    \ IETF in Minneapolis.  In particular, good\n   commentary came from Tom Pusateri,\
    \ Steve Casner, Marshall Eubanks,\n   Dimitri Papadimitriou, Ron Bonica, Lenny\
    \ Guardino, Alia Atlas, Jesus\n   Arango, and Jari Arkko.\n   An expert review\
    \ of this specification was done by Yiqun Cai and\n   Liming Wei.  The authors\
    \ thank them for their detailed comments.\n   This work originated in the Routing\
    \ Research Group (RRG) of the IRTF.\n   An individual submission was converted\
    \ into a LISP working group\n   document.\n"
- title: 15.  References
  contents:
  - '15.  References

    '
- title: 15.1.  Normative References
  contents:
  - "15.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3618]  Fenner, B. and D. Meyer, \"Multicast Source Discovery\n\
    \              Protocol (MSDP)\", RFC 3618, October 2003.\n   [RFC3956]  Savola,\
    \ P. and B. Haberman, \"Embedding the Rendezvous\n              Point (RP) Address\
    \ in an IPv6 Multicast Address\",\n              RFC 3956, November 2004.\n  \
    \ [RFC4601]  Fenner, B., Handley, M., Holbrook, H., and I. Kouvelas,\n       \
    \       \"Protocol Independent Multicast - Sparse Mode (PIM-SM):\n           \
    \   Protocol Specification (Revised)\", RFC 4601, August 2006.\n   [RFC4604] \
    \ Holbrook, H., Cain, B., and B. Haberman, \"Using Internet\n              Group\
    \ Management Protocol Version 3 (IGMPv3) and Multicast\n              Listener\
    \ Discovery Protocol Version 2 (MLDv2) for Source-\n              Specific Multicast\"\
    , RFC 4604, August 2006.\n   [RFC4607]  Holbrook, H. and B. Cain, \"Source-Specific\
    \ Multicast for\n              IP\", RFC 4607, August 2006.\n   [RFC4760]  Bates,\
    \ T., Chandra, R., Katz, D., and Y. Rekhter,\n              \"Multiprotocol Extensions\
    \ for BGP-4\", RFC 4760,\n              January 2007.\n   [RFC5015]  Handley,\
    \ M., Kouvelas, I., Speakman, T., and L. Vicisano,\n              \"Bidirectional\
    \ Protocol Independent Multicast (BIDIR-\n              PIM)\", RFC 5015, October\
    \ 2007.\n   [RFC5135]  Wing, D. and T. Eckert, \"IP Multicast Requirements for\
    \ a\n              Network Address Translator (NAT) and a Network Address\n  \
    \            Port Translator (NAPT)\", BCP 135, RFC 5135, February 2008.\n   [RFC5496]\
    \  Wijnands, IJ., Boers, A., and E. Rosen, \"The Reverse Path\n              Forwarding\
    \ (RPF) Vector TLV\", RFC 5496, March 2009.\n   [RFC6830]  Farinacci, D., Fuller,\
    \ V., Meyer, D., and D. Lewis, \"The\n              Locator/ID Separation Protocol\
    \ (LISP)\", RFC 6830,\n              January 2013.\n   [RFC6832]  Lewis, D., Meyer,\
    \ D., Farinacci, D., and V. Fuller,\n              \"Interworking between Locator/ID\
    \ Separation Protocol\n              (LISP) and Non-LISP Sites\", RFC 6832, January\
    \ 2013.\n"
- title: 15.2.  Informative References
  contents:
  - "15.2.  Informative References\n   [MTRACE]   Asaeda, H. and W. Lee, Ed., \"Mtrace\
    \ Version 2: Traceroute\n              Facility for IP Multicast\", Work in Progress,\n\
    \              October 2012.\n   [RFC5059]  Bhaskar, N., Gall, A., Lingard, J.,\
    \ and S. Venaas,\n              \"Bootstrap Router (BSR) Mechanism for Protocol\
    \ Independent\n              Multicast (PIM)\", RFC 5059, January 2008.\n   [RFC6836]\
    \  Farinacci, D., Fuller, V., Meyer, D., and D. Lewis,\n              \"Locator/ID\
    \ Separation Protocol Alternative Logical\n              Topology (LISP+ALT)\"\
    , RFC 6836, January 2013.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dino Farinacci\n   Cisco Systems\n   Tasman Drive\n  \
    \ San Jose, CA\n   USA\n   EMail: farinacci@gmail.com\n   Dave Meyer\n   Cisco\
    \ Systems\n   Tasman Drive\n   San Jose, CA\n   USA\n   EMail: dmm@cisco.com\n\
    \   John Zwiebel\n   Cisco Systems\n   Tasman Drive\n   San Jose, CA\n   USA\n\
    \   EMail: jzwiebel@cruzio.com\n   Stig Venaas\n   Cisco Systems\n   Tasman Drive\n\
    \   San Jose, CA\n   USA\n   EMail: stig@cisco.com\n"
