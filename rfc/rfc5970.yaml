- title: __initial_text__
  contents:
  - '                    DHCPv6 Options for Network Boot

    '
- title: Abstract
  contents:
  - "Abstract\n   The Dynamic Host Configuration Protocol for IPv6 (DHCPv6) provides\
    \ a\n   framework for passing configuration information to nodes on a\n   network.\
    \  This document describes new options for DHCPv6 that SHOULD\n   be used for\
    \ booting a node from the network.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5970.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Conventions .....................................................3\n  \
    \ 3. Options .........................................................3\n    \
    \  3.1. Boot File Uniform Resource Locator (URL) Option ............3\n      3.2.\
    \ Boot File Parameters Option ................................4\n      3.3. Client\
    \ System Architecture Type Option .....................5\n      3.4. Client Network\
    \ Interface Identifier Option .................6\n   4. Appearance of the Options\
    \ .......................................7\n   5. Download Protocol Considerations\
    \ ................................7\n   6. IANA Considerations .............................................7\n\
    \   7. Security Considerations .........................................8\n  \
    \ 8. Acknowledgements ................................................8\n   9.\
    \ References ......................................................9\n      9.1.\
    \ Normative References .......................................9\n      9.2. Informative\
    \ References .....................................9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes DHCPv6 options that SHOULD be used\
    \ to provide\n   configuration information for a node that must be booted using\
    \ the\n   network rather than from local storage.\n   Network booting is used,\
    \ for example, in some environments where\n   administrators have to maintain\
    \ a large number of nodes.  By serving\n   all boot and configuration files from\
    \ a central server, the effort\n   required to maintain these nodes is greatly\
    \ reduced.\n   A typical boot file would be, for example, an operating system\
    \ kernel\n   or a boot-loader program.  To be able to execute such a file, the\n\
    \   firmware running on the client node must perform the following two\n   steps\
    \ (see Figure 1): First get all information that is required for\n   downloading\
    \ and executing the boot file.  Second, download the boot\n   file and execute\
    \ it.\n                                            +------+\n                \
    \    _______________________\\| DHCP |\n                   / 1 Get boot file info\
    \  /|Server|\n           +------+                         +------+\n         \
    \  | Host |\n           +------+                         +------+\n          \
    \         \\_______________________\\| File |\n                     2 Download\
    \ boot file  /|Server|\n                                            +------+\n\
    \                      Figure 1: Network Boot Sequence\n   The information that\
    \ is required for booting over the network MUST\n   include at least the details\
    \ about the server on which the boot files\n   can be found, the protocol to be\
    \ used for the download (for example,\n   HTTP [RFC2616] or TFTP [RFC1350]), and\
    \ the path and name of the boot\n   file on the server.  Additionally, the server\
    \ and client MAY exchange\n   information about the parameters that should be\
    \ passed to the OS\n   kernel or boot-loader program, respectively, or information\
    \ about the\n   supported boot environment.\n   DHCPv6 allows client nodes to\
    \ ask a DHCPv6 server for configuration\n   parameters.  This document provides\
    \ new options that a client can\n   request from the DHCPv6 server to satisfy\
    \ its requirements for\n   booting.  It also introduces a new IANA registry for\
    \ processor\n   architecture types that are used by the OPTION_CLIENT_ARCH_TYPE\n\
    \   option (see Section 3.3).\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n   Terminology specific to IPv6 and DHCPv6 are used in the\
    \ same way as\n   is defined in the \"Terminology\" sections of [RFC3315].\n"
- title: 3.  Options
  contents:
  - "3.  Options\n   Option formats comply with DHCPv6 options per [RFC3315] (Section\
    \ 6).\n   The boot-file-url option (see Section 3.1) is mandatory for booting,\n\
    \   all other options are optional.\n"
- title: 3.1.  Boot File Uniform Resource Locator (URL) Option
  contents:
  - "3.1.  Boot File Uniform Resource Locator (URL) Option\n   The server sends this\
    \ option to inform the client about a URL to a\n   boot file.\n    0         \
    \          1                   2                   3\n    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       OPT_BOOTFILE_URL        |            option-len         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   .  \
    \                boot-file-url (variable length)              .\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Format description:\n   option-code       OPT_BOOTFILE_URL (59).\n   option-len\
    \        Length of the boot-file-url in octets.\n   boot-file-url     This string\
    \ is the URL for the boot file.  It MUST\n                     comply with STD\
    \ 66 [RFC3986].  The string is not\n                     NUL-terminated.\n   If\
    \ the host in the URL is expressed using an IPv6 address rather than\n   a domain\
    \ name, the address in the URL then MUST be enclosed in \"[\"\n   and \"]\" characters,\
    \ conforming to [RFC3986].  Clients that have DNS\n   implementations SHOULD support\
    \ the use of domain names in the URL.\n"
- title: 3.2.  Boot File Parameters Option
  contents:
  - "3.2.  Boot File Parameters Option\n   This option is sent by the server to the\
    \ client.  It consists of\n   multiple UTF-8 ([RFC3629]) strings.  They are used\
    \ to specify\n   parameters for the boot file (similar to the command line arguments\n\
    \   in most modern operating systems).  For example, these parameters\n   could\
    \ be used to specify the root file system of the OS kernel, or\n   the location\
    \ from which a second-stage boot-loader program can\n   download its configuration\
    \ file.\n    0                   1                   2                   3\n \
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       OPT_BOOTFILE_PARAM      |            option-len         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | param-len 1                   |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \           parameter 1         .\n   .                                      \
    \  (variable length)      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   .                                                               .\n   .  \
    \                     <multiple Parameters>                   .\n   .        \
    \                                                       .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | param-len n                   |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \           parameter n         .\n   .                                      \
    \  (variable length)      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Format description:\n   option-code       OPT_BOOTFILE_PARAM (60).\n   option-len\
    \        Length of the Boot File Parameters option in octets\n               \
    \      (not including the size of the option-code and\n                     option-len\
    \ fields).\n   param-len 1...n   This is a 16-bit integer that specifies the length\n\
    \                     of the following parameter in octets (not including\n  \
    \                   the parameter-length field).\n   parameter 1...n   These UTF-8\
    \ strings are parameters needed for\n                     booting, e.g., kernel\
    \ parameters.  The strings are\n                     not NUL-terminated.\n   When\
    \ the boot firmware executes the boot file that has been specified\n   in the\
    \ OPT_BOOTFILE_URL option, it MUST pass these parameters, if\n   present, in the\
    \ order that they appear in the OPT_BOOTFILE_PARAM\n   option.\n"
- title: 3.3.  Client System Architecture Type Option
  contents:
  - "3.3.  Client System Architecture Type Option\n   This option provides parity\
    \ with the Client System Architecture Type\n   option defined for DHCPv4 in Section\
    \ 2.1 of [RFC4578].\n   The format of the option is:\n    0                  \
    \ 1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    OPTION_CLIENT_ARCH_TYPE    |         option-len            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   .                                                               .\n   .  \
    \           architecture-types (variable length)              .\n   .        \
    \                                                       .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   option-code         OPTION_CLIENT_ARCH_TYPE (61).\n   option-len         \
    \ Length of the \"architecture-types\" field in\n                       octets.\
    \  It MUST be an even number greater than\n                       zero.  See Section\
    \ 2.1 of [RFC4578] for details.\n   architecture-types  A list of one or more\
    \ architecture types, as\n                       specified in Section 2.1 of [RFC4578].\
    \  Each\n                       architecture type identifier in this list is a\n\
    \                       16-bit value that describes the pre-boot runtime\n   \
    \                    environment of the client machine.  A list of\n         \
    \              valid values is maintained by the IANA (see\n                 \
    \      Section 6).\n   The client MAY use this option to send a list of supported\n\
    \   architecture types to the server, so the server can decide which boot\n  \
    \ file should be provided to the client.  If a client supports more\n   than one\
    \ pre-boot environment (for example, both 32-bit and 64-bit\n   executables),\
    \ the most preferred architecture type MUST be listed as\n   first item, followed\
    \ by the others with descending priority.\n   If the client used this option in\
    \ the request, the server SHOULD\n   include this option to inform the client\
    \ about the pre-boot\n   environments that are supported by the boot file.  The\
    \ list MUST only\n   contain architecture types that have initially been queried\
    \ by the\n   client.  The items MUST also be listed in order of descending\n \
    \  priority.\n"
- title: 3.4.  Client Network Interface Identifier Option
  contents:
  - "3.4.  Client Network Interface Identifier Option\n   If the client supports the\
    \ Universal Network Device Interface (UNDI)\n   (see [PXE21] and [UEFI23]), it\
    \ may send the Client Network Interface\n   Identifier option to a DHCP server\
    \ to provide information about its\n   level of UNDI support.\n   This option\
    \ provides parity with the Client Network Interface\n   Identifier option defined\
    \ for DHCPv4 in Section 2.2 of [RFC4578].\n   The format of the option is:\n \
    \   0                   1                   2                   3\n    0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           OPTION_NII          |          option-len           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Major     |      Minor      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   option-code       OPTION_NII (62).\n   option-len        3\n   Type      \
    \        As specified in Section 2.2 of [RFC4578].\n   Major             As specified\
    \ in Section 2.2 of [RFC4578].\n   Minor             As specified in Section 2.2\
    \ of [RFC4578].\n   The list of valid Type, Major, and Minor values is maintained\
    \ in the\n   Unified Extensible Firmware Interface specification [UEFI23].\n"
- title: 4.  Appearance of the Options
  contents:
  - "4.  Appearance of the Options\n   These options MUST NOT appear in DHCPv6 messages\
    \ other than the types\n   Solicit, Advertise, Request, Renew, Rebind, Information-Request,\
    \ and\n   Reply.\n   The option-codes of these options MAY appear in the Option\
    \ Request\n   option in the DHCPv6 message types Solicit, Request, Renew, Rebind,\n\
    \   Information-Request, and Reconfigure.\n"
- title: 5.  Download Protocol Considerations
  contents:
  - "5.  Download Protocol Considerations\n   The Boot File URL option does not place\
    \ any constraints on the\n   protocol used for downloading the boot file, other\
    \ than that it MUST\n   be possible to specify it in a URL.  For the sake of administrative\n\
    \   simplicity, we strongly recommend that, at a minimum, implementers of\n  \
    \ network boot loaders implement the well-known and established\n   HyperText\
    \ Transfer Protocol (HTTP) [RFC2616] for downloading.  Please\n   note that for\
    \ IPv6, this supersedes [RFC906], which recommended using\n   TFTP for downloading\
    \ (see [RFC3617] for the 'tftp' URL definition).\n   When using the Internet Small\
    \ Computer System Interface (iSCSI) for\n   booting, the 'iscsi' URI is formed\
    \ as defined in [RFC4173].  The\n   functionality attributed in RFC 4173 to a\
    \ root path option is\n   provided for IPv6 by the Boot File URL option instead.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   The following options have been assigned by the IANA\
    \ from the option\n   number space defined in Section 24 of the DHCPv6 RFC [RFC3315].\n\
    \            +-------------------------+-------+--------------+\n            |\
    \       Option name       | Value | Specified in |\n            +-------------------------+-------+--------------+\n\
    \            |     OPT_BOOTFILE_URL    |   59  |  Section 3.1 |\n            |\
    \    OPT_BOOTFILE_PARAM   |   60  |  Section 3.2 |\n            | OPTION_CLIENT_ARCH_TYPE\
    \ |   61  |  Section 3.3 |\n            |        OPTION_NII       |   62  |  Section\
    \ 3.4 |\n            +-------------------------+-------+--------------+\n   This\
    \ document also introduces a new IANA registry for processor\n   architecture\
    \ types.  The name of this registry is \"Processor\n   Architecture Types\". \
    \ Registry entries consist of a 16-bit integer\n   recorded in decimal format\
    \ and a descriptive name.  The initial\n   values of this registry can be found\
    \ in [RFC4578], Section 2.1.\n   The assignment policy for values is through Expert\
    \ Review (see\n   [RFC5226]), and any requests for values must supply the descriptive\n\
    \   name for the processor architecture type.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   In untrusted networks, a rogue DHCPv6 server\
    \ could send the new\n   DHCPv6 options described in this document.  The booting\
    \ clients could\n   then be provided with a wrong URL so that either the boot\
    \ fails or,\n   even worse, the client boots the wrong operating system that has\
    \ been\n   provided by a malicious file server.  To prevent this kind of attack,\n\
    \   clients SHOULD use authentication of DHCPv6 messages (see Section 21\n   in\
    \ [RFC3315]).\n   Note also that DHCPv6 messages are sent unencrypted by default.\
    \  So\n   the boot file URL options are sent unencrypted over the network, too.\n\
    \   This can become a security risk since the URLs can contain sensitive\n   information\
    \ like user names and passwords (for example, a URL like\n   \"ftp://username:password@servername/path/file\"\
    ).  At the current\n   point in time, there is no possibility to send encrypted\
    \ DHCPv6\n   messages, so it is strongly RECOMMENDED not to use sensitive\n  \
    \ information in the URLs in untrusted networks (using passwords in\n   URLs is\
    \ deprecated anyway, according to [RFC3986]).\n   Even if the DHCPv6 transaction\
    \ is secured, this does not protect\n   against attacks on the boot file download\
    \ channel.  Consequently, we\n   recommend that either (a) implementers use protocols\
    \ like HTTPS\n   [RFC2818] or Transport Layer Security (TLS) within HTTP [RFC2817]\
    \ to\n   prevent spoofing or (b) the boot-loader software implement a\n   mechanism\
    \ for signing boot images and a configurable signing key.\n   The latter is done\
    \ so that if a malicious image is provided, it can\n   be detected and rejected.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors would like to thank Ruth Li, Dong Wei, Kathryn\
    \ Hampton,\n   Phil Dorah, Richard Chan, and Fiona Jensen for discussions that\
    \ led\n   to this document.\n   The authors would also like to thank Ketan P.\
    \ Pancholi, Alfred\n   Hoenes, Gabriel Montenegro, and Ted Lemon for corrections\
    \ and\n   suggestions.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [PXE21]    Johnston, M., \"Preboot Execution Environment\
    \ (PXE)\n              Specification\", September 1999,\n              <http://www.pix.net/software/pxeboot/archive/pxespec.pdf>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3315]  Droms,\
    \ R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n              and M. Carney,\
    \ \"Dynamic Host Configuration Protocol for\n              IPv6 (DHCPv6)\", RFC\
    \ 3315, July 2003.\n   [RFC3629]  Yergeau, F., \"UTF-8, a transformation format\
    \ of ISO\n              10646\", STD 63, RFC 3629, November 2003.\n   [RFC3986]\
    \  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource\
    \ Identifier (URI): Generic Syntax\", STD 66,\n              RFC 3986, January\
    \ 2005.\n   [RFC4173]  Sarkar, P., Missimer, D., and C. Sapuntzakis,\n       \
    \       \"Bootstrapping Clients using the Internet Small Computer\n          \
    \    System Interface (iSCSI) Protocol\", RFC 4173,\n              September 2005.\n\
    \   [RFC4578]  Johnston, M. and S. Venaas, \"Dynamic Host Configuration\n    \
    \          Protocol (DHCP) Options for the Intel Preboot eXecution\n         \
    \     Environment (PXE)\", RFC 4578, November 2006.\n   [RFC5226]  Narten, T.\
    \ and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [UEFI23] \
    \  UEFI Forum, \"Unified Extensible Firmware Interface\n              Specification,\
    \ Version 2.3\", May 2009,\n              <http://www.uefi.org/>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC906]   Finlayson, R., \"Bootstrap Loading\
    \ using TFTP\", RFC 906,\n              June 1984.\n   [RFC1350]  Sollins, K.,\
    \ \"The TFTP Protocol (Revision 2)\", STD 33,\n              RFC 1350, July 1992.\n\
    \   [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n           \
    \   Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext\n              Transfer\
    \ Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2817]  Khare, R. and S.\
    \ Lawrence, \"Upgrading to TLS Within\n              HTTP/1.1\", RFC 2817, May\
    \ 2000.\n   [RFC2818]  Rescorla, E., \"HTTP Over TLS\", RFC 2818, May 2000.\n\
    \   [RFC3617]  Lear, E., \"Uniform Resource Identifier (URI) Scheme and\n    \
    \          Applicability Statement for the Trivial File Transfer\n           \
    \   Protocol (TFTP)\", RFC 3617, October 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Thomas H. Huth\n   IBM Germany Research & Development\
    \ GmbH\n   Schoenaicher Strasse 220\n   Boeblingen  71032\n   Germany\n   Phone:\
    \ +49-7031-16-2183\n   EMail: thuth@de.ibm.com\n   Jens T. Freimann\n   IBM Germany\
    \ Research & Development GmbH\n   Schoenaicher Strasse 220\n   Boeblingen  71032\n\
    \   Germany\n   Phone: +49-7031-16-1122\n   EMail: jfrei@de.ibm.com\n   Vincent\
    \ Zimmer\n   Intel\n   2800 Center Drive\n   DuPont  WA 98327\n   USA\n   Phone:\
    \ +1 253 371 5667\n   EMail: vincent.zimmer@intel.com\n   Dave Thaler\n   Microsoft\n\
    \   One Microsoft Way\n   Redmond  WA 98052\n   USA\n   Phone: +1 425 703-8835\n\
    \   EMail: dthaler@microsoft.com\n"
