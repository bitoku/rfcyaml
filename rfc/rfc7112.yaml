- contents:
  - '              Implications of Oversized IPv6 Header Chains

    '
  title: __initial_text__
- contents:
  - "Abstract\n   The IPv6 specification allows IPv6 Header Chains of an arbitrary\n
    \  size.  The specification also allows options that can, in turn,\n   extend
    each of the headers.  In those scenarios in which the IPv6\n   Header Chain or
    options are unusually long and packets are\n   fragmented, or scenarios in which
    the fragment size is very small,\n   the First Fragment of a packet may fail to
    include the entire IPv6\n   Header Chain.  This document discusses the interoperability
    and\n   security problems of such traffic, and updates RFC 2460 such that the\n
    \  First Fragment of a packet is required to contain the entire IPv6\n   Header
    Chain.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7112.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Requirements Language ...........................................3\n   3.
    Terminology .....................................................3\n   4. Motivation
    ......................................................4\n   5. Updates to RFC
    2460 .............................................5\n   6. IANA Considerations
    .............................................5\n   7. Security Considerations
    .........................................6\n   8. Acknowledgements ................................................6\n
    \  9. References ......................................................7\n      9.1.
    Normative References .......................................7\n      9.2. Informative
    References .....................................7\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   With IPv6, optional internet-layer information is carried
    in one or\n   more IPv6 Extension Headers [RFC2460].  Extension Headers are placed\n
    \  between the IPv6 header and the Upper-Layer Header in a packet.  The\n   term
    \"Header Chain\" refers collectively to the IPv6 header, Extension\n   Headers,
    and Upper-Layer Header occurring in a packet.  In those\n   scenarios in which
    the IPv6 Header Chain is unusually long and\n   packets are fragmented, or scenarios
    in which the fragment size is\n   very small, the Header Chain may span multiple
    fragments.\n   While IPv4 had a fixed maximum length for the set of all IPv4 options\n
    \  present in a single IPv4 packet, IPv6 does not have any equivalent\n   maximum
    limit at present.  This document updates the set of IPv6\n   specifications to
    create an overall limit on the size of the\n   combination of IPv6 options and
    IPv6 Extension Headers that is\n   allowed in a single IPv6 packet.  Namely, it
    updates RFC 2460 such\n   that the First Fragment of a fragmented datagram is
    required to\n   contain the entire IPv6 Header Chain.\n   It should be noted that
    this requirement does not preclude the use of\n   large payloads but, instead,
    merely requires that all headers,\n   starting from the IPv6 base header and continuing
    up to the Upper-\n   Layer Header (e.g., TCP or the like) be present in the First\n
    \  Fragment.\n"
  title: 1.  Introduction
- contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Requirements Language
- contents:
  - "3.  Terminology\n   For the purposes of this document, the terms Extension Header,
    IPv6\n   Header Chain, First Fragment, and Upper-Layer Header are used as\n   follows:\n
    \  Extension Header:\n      Extension Headers are defined in Section 4 of [RFC2460].
    \ As a\n      result of [RFC7045], [IANA-PROTO] provides a list of assigned\n
    \     Internet Protocol Numbers and designates which of those protocol\n      numbers
    also represent Extension Headers.\n   First Fragment:\n      An IPv6 fragment
    with Fragment Offset equal to 0.\n   IPv6 Header Chain:\n      The IPv6 Header
    Chain contains an initial IPv6 header, zero or\n      more IPv6 Extension Headers,
    and optionally, a single Upper-Layer\n      Header.  If an Upper-Layer Header
    is present, it terminates the\n      header chain; otherwise, the \"No Next Header\"
    value (Next Header =\n      59) terminates it.\n      The first member of the
    IPv6 Header Chain is always an IPv6\n      header.  For a subsequent header to
    qualify as a member of the\n      header chain, it must be referenced by the \"Next
    Header\" field of\n      the previous member of the header chain.  However, if
    a second\n      IPv6 header appears in the header chain, as is the case when IPv6\n
    \     is tunneled over IPv6, the second IPv6 header is considered to be\n      an
    Upper-Layer Header and terminates the header chain.  Likewise,\n      if an Encapsulating
    Security Payload (ESP) header appears in the\n      header chain, it is considered
    to be an Upper-Layer Header, and it\n      terminates the header chain.\n   Upper-Layer
    Header:\n      In the general case, the Upper-Layer Header is the first member
    of\n      the header chain that is neither an IPv6 header nor an IPv6\n      Extension
    Header.  However, if either an ESP header, or a second\n      IPv6 header occur
    in the header chain, they are considered to be\n      Upper-Layer Headers, and
    they terminate the header chain.\n      Neither the upper-layer payload, nor any
    protocol data following\n      the upper-layer payload, is considered to be part
    of the IPv6\n      Header Chain.  In a simple example, if the Upper-Layer Header
    is a\n      TCP header, the TCP payload is not part of the IPv6 Header Chain.\n
    \     In a more complex example, if the Upper-Layer Header is an ESP\n      header,
    neither the payload data, nor any of the fields that\n      follow the payload
    data in the ESP header are part of the IPv6\n      Header Chain.\n"
  title: 3.  Terminology
- contents:
  - "4.  Motivation\n   Many forwarding devices implement stateless firewalls.  A
    stateless\n   firewall enforces a forwarding policy on a packet-by-packet basis.\n
    \  In order to enforce its forwarding policy, the stateless firewall may\n   need
    to glean information from both the IPv6 and upper-layer headers.\n   For example,
    assume that a stateless firewall discards all traffic\n   received from an interface
    unless it is destined for a particular TCP\n   port on a particular IPv6 address.
    \ When this firewall is presented\n   with a fragmented packet that is destined
    for a different TCP port,\n   and the entire header chain is contained within
    the First Fragment,\n   the firewall discards the First Fragment and allows subsequent\n
    \  fragments to pass.  Because the First Fragment was discarded, the\n   packet
    cannot be reassembled at the destination.  Insomuch as the\n   packet cannot be
    reassembled, the forwarding policy is enforced.\n   However, when the firewall
    is presented with a fragmented packet and\n   the header chain spans multiple
    fragments, the First Fragment does\n   not contain enough information for the
    firewall to enforce its\n   forwarding policy.  Lacking sufficient information,
    the stateless\n   firewall either forwards or discards that fragment.  Regardless
    of\n   the action that it takes, it may fail to enforce its forwarding\n   policy.\n"
  title: 4.  Motivation
- contents:
  - "5.  Updates to RFC 2460\n   When a host fragments an IPv6 datagram, it MUST include
    the entire\n   IPv6 Header Chain in the First Fragment.\n   A host that receives
    a First Fragment that does not satisfy the\n   above-stated requirement SHOULD
    discard the packet and SHOULD send an\n   ICMPv6 error message to the source address
    of the offending packet\n   (subject to the rules for ICMPv6 errors specified
    in [RFC4443]).\n   However, for backwards compatibility, implementations MAY include
    a\n   configuration option that allows such fragments to be accepted.\n   Likewise,
    an intermediate system (e.g., router or firewall) that\n   receives an IPv6 First
    Fragment that does not satisfy the above-\n   stated requirement MAY discard that
    packet, and it MAY send an ICMPv6\n   error message to the source address of the
    offending packet (subject\n   to the rules for ICMPv6 error messages specified
    in [RFC4443]).\n   Intermediate systems having this capability SHOULD support\n
    \  configuration (e.g., enable/disable) of whether or not such packets\n   are
    dropped by the intermediate system.\n   If a host or intermediate system discards
    a First Fragment because it\n   does not satisfy the above-stated requirement
    and sends an ICMPv6\n   error message due to the discard, then the ICMPv6 error
    message MUST\n   be Type 4 (\"Parameter Problem\") and MUST use Code 3 (\"First
    Fragment\n   has incomplete IPv6 Header Chain\").  The Pointer field contained
    by\n   the ICMPv6 Parameter Problem message MUST be set to zero.  The format\n
    \  for the ICMPv6 error message is the same regardless of whether a host\n   or
    intermediate system originates it.\n   As a result of the above-mentioned requirement,
    a packet's header\n   chain length cannot exceed the Path MTU associated with
    its\n   destination.  Hosts discover the Path MTU using procedures such as\n   those
    defined in [RFC1981] and [RFC4821].  Hosts that do not discover\n   the Path MTU
    MUST limit the IPv6 Header Chain length to 1280 bytes.\n   Limiting the IPv6 Header
    Chain length to 1280 bytes ensures that the\n   header chain length does not exceed
    the IPv6 minimum MTU [RFC2460].\n"
  title: 5.  Updates to RFC 2460
- contents:
  - "6.  IANA Considerations\n   IANA has added the following \"Type 4 - Parameter
    Problem\" message to\n   the \"Internet Control Message Protocol version 6 (ICMPv6)
    Parameters\"\n   registry:\n      CODE     NAME/DESCRIPTION\n       3       IPv6
    First Fragment has incomplete IPv6 Header Chain\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   No new security exposures or issues are raised
    by this document.\n   This document describes how undesirably fragmented packets
    can be\n   leveraged to evade stateless packet filtering.  Having made that\n
    \  observation, this document updates [RFC2460] so that undesirably\n   fragmented
    packets are forbidden.  Therefore, a security\n   vulnerability is removed.\n
    \  This specification allows nodes that drop the aforementioned packets\n   to
    signal such packet drops with ICMPv6 \"Parameter Problem, IPv6\n   First Fragment
    has incomplete IPv6 header chain\" (Type 4, Code 3)\n   error messages.\n   As
    with all ICMPv6 error/diagnostic messages, deploying Source\n   Address Forgery
    Prevention filters helps reduce the chances of an\n   attacker successfully performing
    a reflection attack by sending\n   forged illegal packets with the victim's/target's
    IPv6 address as the\n   IPv6 source address of the illegal packet [RFC2827] [RFC3704].\n
    \  A firewall that performs stateless deep packet inspection (i.e.,\n   examines
    application payload content) might still be unable to\n   correctly process fragmented
    packets, even if the IPv6 Header Chain\n   is not fragmented.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  Acknowledgements\n   The authors would like to thank Ran Atkinson for contributing
    text\n   and ideas that were incorporated into this document.\n   The authors
    would like to thank (in alphabetical order) Ran Atkinson,\n   Fred Baker, Stewart
    Bryant, Brian Carpenter, Benoit Claise, Dominik\n   Elsbroek, Wes George, Mike
    Heard, Bill Jouris, Suresh Krishnan, Dave\n   Thaler, Ole Troan, Eric Vyncke,
    and Peter Yee, for providing valuable\n   comments on earlier versions of this
    document.\n"
  title: 8.  Acknowledgements
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC1981]  McCann, J., Deering, S., and J. Mogul,
      \"Path MTU Discovery\n              for IP version 6\", RFC 1981, August 1996.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2460]  Deering, S. and R. Hinden,
      \"Internet Protocol, Version 6\n              (IPv6) Specification\", RFC 2460,
      December 1998.\n   [RFC4443]  Conta, A., Deering, S., and M. Gupta, \"Internet
      Control\n              Message Protocol (ICMPv6) for the Internet Protocol\n
      \             Version 6 (IPv6) Specification\", RFC 4443, March 2006.\n   [RFC4821]
      \ Mathis, M. and J. Heffner, \"Packetization Layer Path MTU\n              Discovery\",
      RFC 4821, March 2007.\n   [RFC7045]  Carpenter, B. and S. Jiang, \"Transmission
      and Processing\n              of IPv6 Extension Headers\", RFC 7045, December
      2013.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC2827]  Ferguson, P. and D. Senie, \"Network
      Ingress Filtering:\n              Defeating Denial of Service Attacks which
      employ IP Source\n              Address Spoofing\", BCP 38, RFC 2827, May 2000.\n
      \  [RFC3704]  Baker, F. and P. Savola, \"Ingress Filtering for Multihomed\n
      \             Networks\", BCP 84, RFC 3704, March 2004.\n   [IANA-PROTO]\n              Internet
      Assigned Numbers Authority, \"Protocol Numbers\",\n              <http://www.iana.org/assignments/protocol-numbers>.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Authors' Addresses\n   Fernando Gont\n   Huawei Technologies\n   Evaristo Carriego
    2644\n   Haedo, Provincia de Buenos Aires  1706\n   Argentina\n   Phone: +54 11
    4650 8472\n   EMail: fgont@si6networks.com\n   Vishwas Manral\n   Ionos Networks\n
    \  Sunnyvale, CA  94089\n   US\n   Phone: 408-447-1497\n   EMail: vishwas@ionosnetworks.com\n
    \  Ronald P. Bonica\n   Juniper Networks\n   2251 Corporate Park Drive\n   Herndon,
    VA  20171\n   US\n   Phone: 571 250 5819\n   EMail: rbonica@juniper.net\n"
  title: Authors' Addresses
