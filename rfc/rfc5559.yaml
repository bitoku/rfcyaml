- title: __initial_text__
  contents:
  - '             Pre-Congestion Notification (PCN) Architecture

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a general architecture for flow admission\
    \ and\n   termination based on pre-congestion information in order to protect\n\
    \   the quality of service of established, inelastic flows within a\n   single\
    \ Diffserv domain.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Overview of PCN ............................................3\n  \
    \    1.2. Example Use Case for PCN ...................................4\n    \
    \  1.3. Applicability of PCN .......................................7\n      1.4.\
    \ Documents about PCN ........................................8\n   2. Terminology\
    \ .....................................................9\n   3. High-Level Functional\
    \ Architecture .............................11\n      3.1. Flow Admission ............................................13\n\
    \      3.2. Flow Termination ..........................................14\n  \
    \    3.3. Flow Admission and/or Flow Termination When There Are Only\n       \
    \    Two PCN Encoding States ...................................15\n      3.4.\
    \ Information Transport .....................................16\n      3.5. PCN-Traffic\
    \ ...............................................16\n      3.6. Backwards Compatibility\
    \ ...................................17\n   4. Detailed Functional Architecture\
    \ ...............................18\n      4.1. PCN-Interior-Node Functions ...............................19\n\
    \      4.2. PCN-Ingress-Node Functions ................................19\n  \
    \    4.3. PCN-Egress-Node Functions .................................20\n    \
    \  4.4. Admission Control Functions ...............................21\n      4.5.\
    \ Flow Termination Functions ................................22\n      4.6. Addressing\
    \ ................................................22\n      4.7. Tunnelling ................................................23\n\
    \      4.8. Fault Handling ............................................25\n  \
    \ 5. Operations and Management ......................................25\n    \
    \  5.1. Fault Operations and Management ...........................25\n      5.2.\
    \ Configuration Operations and Management ...................26\n           5.2.1.\
    \ System Options .....................................27\n           5.2.2. Parameters\
    \ .........................................28\n      5.3. Accounting Operations\
    \ and Management ......................30\n      5.4. Performance and Provisioning\
    \ Operations and Management ....30\n      5.5. Security Operations and Management\
    \ ........................31\n   6. Applicability of PCN ...........................................32\n\
    \      6.1. Benefits ..................................................32\n  \
    \    6.2. Deployment Scenarios ......................................33\n    \
    \  6.3. Assumptions and Constraints on Scope ......................35\n      \
    \     6.3.1. Assumption 1: Trust and Support of PCN -\n                  Controlled\
    \ Environment .............................36\n           6.3.2. Assumption 2:\
    \ Real-Time Applications ...............36\n           6.3.3. Assumption 3: Many\
    \ Flows and Additional Load .......37\n           6.3.4. Assumption 4: Emergency\
    \ Use Out of Scope ...........37\n      6.4. Challenges ................................................37\n\
    \   7. Security Considerations ........................................40\n  \
    \ 8. Conclusions ....................................................41\n   9.\
    \ Acknowledgements ...............................................41\n   10. References\
    \ ....................................................42\n      10.1. Normative\
    \ References .....................................42\n      10.2. Informative\
    \ References ...................................42\n   Appendix A.  Possible Future\
    \ Work Items ...........................48\n       A.1.  Probing .................................................50\n\
    \             A.1.1.  Introduction ....................................50\n  \
    \           A.1.2.  Probing Functions ...............................50\n    \
    \         A.1.3.  Discussion of Rationale for Probing, Its\n                 \
    \    Downsides and Open Issues .......................51\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Overview of PCN
  contents:
  - "1.1.  Overview of PCN\n   The objective of Pre-Congestion Notification (PCN)\
    \ is to protect the\n   quality of service (QoS) of inelastic flows within a Diffserv\
    \ domain\n   in a simple, scalable, and robust fashion.  Two mechanisms are used:\n\
    \   admission control, to decide whether to admit or block a new flow\n   request,\
    \ and (in abnormal circumstances) flow termination, to decide\n   whether to terminate\
    \ some of the existing flows.  To achieve this,\n   the overall rate of PCN-traffic\
    \ is metered on every link in the\n   domain, and PCN packets are appropriately\
    \ marked when certain\n   configured rates are exceeded.  These configured rates\
    \ are below the\n   rate of the link, thus providing notification to boundary\
    \ nodes about\n   overloads before any congestion occurs (hence, \"Pre-Congestion\n\
    \   Notification\").  The level of marking allows boundary nodes to make\n   decisions\
    \ about whether to admit or terminate.\n   Within a PCN-domain, PCN-traffic is\
    \ forwarded in a prioritised\n   Diffserv traffic class.  Every link in the PCN-domain\
    \ is configured\n   with two rates (PCN-threshold-rate and PCN-excess-rate). \
    \ If the\n   overall rate of PCN-traffic on a link exceeds a configured rate,\
    \ then\n   a PCN-interior-node marks PCN-packets appropriately.  The PCN-egress-\n\
    \   nodes use this information to make admission control and flow\n   termination\
    \ decisions.  Flow admission control determines whether a\n   new flow can be\
    \ admitted without any impact, in normal circumstances,\n   on the QoS of existing\
    \ PCN-flows.  However, in abnormal circumstances\n   (for instance, a disaster\
    \ affecting multiple nodes and causing\n   traffic re-routes), the QoS on existing\
    \ PCN-flows may degrade even\n   though care was exercised when admitting those\
    \ flows.  The flow\n   termination mechanism removes sufficient traffic in order\
    \ to protect\n   the QoS of the remaining PCN-flows.  All PCN-boundary-nodes and\
    \ PCN-\n   interior-nodes are PCN-enabled and are trusted for correct PCN\n  \
    \ operation.  PCN-ingress-nodes police arriving packets to check that\n   they\
    \ are part of an admitted PCN-flow that keeps within its agreed\n   flowspec,\
    \ and hence they maintain per-flow state.  PCN-interior-nodes\n   meter all PCN-traffic,\
    \ and hence do not need to maintain any per-flow\n   state.  Decisions about flow\
    \ admission and termination are made for a\n   particular pair of PCN-boundary-nodes,\
    \ and hence PCN-egress-nodes\n   must be able to identify which PCN-ingress-node\
    \ sent each PCN-packet.\n"
- title: 1.2.  Example Use Case for PCN
  contents:
  - "1.2.  Example Use Case for PCN\n   This section outlines an end-to-end QoS scenario\
    \ that uses the PCN\n   mechanisms within one domain.  The parts outside the PCN-domain\
    \ are\n   out of scope for PCN, but are included to help clarify how PCN could\n\
    \   be used.  Note that this section is only an example -- in particular,\n  \
    \ there are other possibilities (see Section 3) for how the PCN-\n   boundary-nodes\
    \ perform admission control and flow termination.\n   As a fundamental building\
    \ block, each link of the PCN-domain operates\n   the following.  Please refer\
    \ to [Eardley09] and Figure 1.\n   o  A threshold meter and marker, which marks\
    \ all PCN-packets if the\n      rate of PCN-traffic is greater than a first configured\
    \ rate, the\n      PCN-threshold-rate.  The admission control mechanism limits\
    \ the\n      PCN-traffic on each link to *roughly* its PCN-threshold-rate.\n \
    \  o  An excess-traffic meter and marker, which marks a proportion of\n      PCN-packets\
    \ such that the amount marked equals the traffic rate in\n      excess of a second\
    \ configured rate, the PCN-excess-rate.  The flow\n      termination mechanism\
    \ limits the PCN-traffic on each link to\n      *roughly* its PCN-excess-rate.\n\
    \   Overall, the aim is to give an \"early warning\" of potential\n   congestion\
    \ before there is any significant build-up of PCN-packets in\n   the queue on\
    \ the link; we term this \"Pre-Congestion Notification\" by\n   analogy with ECN\
    \ (Explicit Congestion Notification, [RFC3168]).  Note\n   that the link only\
    \ meters the bulk PCN-traffic (and not per flow).\n                          ==\
    \   Metering &    ==\n                          ==Marking behaviour==       ==PCN\
    \ mechanisms==\n                       ^\n           Rate of     ^\n      PCN-traffic\
    \ on   |\n     bottleneck link   |\n                       |\n               \
    \        |       Some pkts                  Terminate some\n                 \
    \      |  excess-traffic-marked           admitted flows\n                   \
    \    |           &                            &\n                       |    \
    \ Rest of pkts                Block new flows\n                       |   threshold-marked\n\
    \                       |\n     PCN-excess-rate  -|------------------------------------------------\n"
- title: (=PCN-supportable-rate)|
  contents:
  - "(=PCN-supportable-rate)|\n                       |       All pkts           \
    \       Block new flows\n                       |   threshold-marked\n       \
    \                |\n   PCN-threshold-rate -|------------------------------------------------\n\
    \ (=PCN-admissible-rate)|\n                       |        No pkts           \
    \       Admit new flows\n                       |      PCN-marked\n          \
    \             |\n   Figure 1: Example of how the PCN admission control and flow\n\
    \   termination mechanisms operate as the rate of PCN-traffic increases.\n   The\
    \ two forms of PCN-marking are indicated by setting the ECN and\n   DSCP (Differentiated\
    \ Services Codepoint [RFC2474]) fields to known\n   values, which are configured\
    \ for the domain.  Thus, the PCN-egress-\n   nodes can monitor the PCN-markings\
    \ in order to measure the severity\n   of pre-congestion.  In addition, the PCN-ingress-nodes\
    \ need to set\n   the ECN and DSCP fields to that configured for an unmarked PCN-\n\
    \   packet, and the PCN-egress-nodes need to revert to values appropriate\n  \
    \ outside the PCN-domain.\n   For admission control, we assume end-to-end RSVP\
    \ (Resource\n   Reservation Protocol) [RFC2205]) signalling in this example. \
    \ The\n   PCN-domain is a single RSVP hop.  The PCN-domain operates Diffserv,\n\
    \   and we assume that PCN-traffic is scheduled with the expedited\n   forwarding\
    \ (EF) per-hop behaviour [RFC3246].  Hence, the overall\n   solution is in line\
    \ with the \"IntServ over Diffserv\" framework\n   defined in [RFC2998], as shown\
    \ in Figure 2.\n   ___    ___    _______________________________________    ____\
    \    ___\n  |   |  |   |  | PCN-             PCN-            PCN- |  |    |  |\
    \   |\n  |   |  |   |  |ingress         interior         egress|  |    |  |  \
    \ |\n  |   |  |   |  | -node           -nodes          -node |  |    |  |   |\n\
    \  |   |  |   |  |-------+  +-------+  +-------+  +------|  |    |  |   |\n  |\
    \   |  |   |  |       |  | PCN   |  | PCN   |  |      |  |    |  |   |\n  |  \
    \ |..|   |..|Ingress|..|meter &|..|meter &|..|Egress|..|    |..|   |\n  |   |..|\
    \   |..|Policer|..|marker |..|marker |..|Meter |..|    |..|   |\n  |   |  |  \
    \ |  |-------+  +-------+  +-------+  +------|  |    |  |   |\n  |   |  |   |\
    \  |  \\                                 /  |  |    |  |   |\n  |   |  |   | \
    \ |   \\                               /   |  |    |  |   |\n  |   |  |   |  |\
    \    \\  PCN-feedback-information   /    |  |    |  |   |\n  |   |  |   |  | \
    \    \\  (for admission control)  /     |  |    |  |   |\n  |   |  |   |  |  \
    \    --<-----<----<----<-----<--      |  |    |  |   |\n  |   |  |   |  |    \
    \   PCN-feedback-information        |  |    |  |   |\n  |   |  |   |  |      \
    \  (for flow termination)         |  |    |  |   |\n  |___|  |___|  |_______________________________________|\
    \  |____|  |___|\n  Sx     Access               PCN-domain                   Access\
    \    Rx\n  End    Network                                          Network   End\n\
    \  Host                                                              Host\n  \
    \                <---- signalling across PCN-domain--->\n                (for\
    \ admission control & flow termination)\n  <-------------------end-to-end QoS\
    \ signalling protocol--------------->\n   Figure 2: Example of possible overall\
    \ QoS architecture.\n   A source wanting to start a new QoS flow sends an RSVP\
    \ PATH message.\n   Normal hop-by-hop IntServ [RFC1633] is used outside the PCN-domain\n\
    \   (we assume successfully).  The PATH message travels across the PCN-\n   domain;\
    \ the PCN-egress-node reads the PHOP (previous RSVP hop) object\n   to discover\
    \ the specific PCN-ingress-node for this flow.  The RESV\n   message travels back\
    \ from the receiver, and triggers the PCN-egress-\n   node to check what fraction\
    \ of the PCN-traffic from the relevant PCN-\n   ingress-node is currently being\
    \ threshold-marked.  It adds an object\n   with this information onto the RESV\
    \ message, and hence the PCN-\n   ingress-node learns about the level of pre-congestion\
    \ on the path.\n   If this level is below some threshold, then the PCN-ingress-node\n\
    \   admits the new flow into the PCN-domain.  The RSVP message triggers\n   the\
    \ PCN-ingress-node to install two normal IntServ items: five-tuple\n   information,\
    \ so that it can subsequently identify data packets that\n   are part of a previously\
    \ admitted PCN-flow, and a traffic profile, so\n   that it can police the flow\
    \ to within its reservation.  Similarly,\n   the RSVP message triggers the PCN-egress-node\
    \ to install five-tuple\n   and PHOP information so that it can identify packets\
    \ as part of a\n   flow from a specific PCN-ingress-node.\n   The flow termination\
    \ mechanism may happen when some abnormal\n   circumstance causes a link to become\
    \ so pre-congested that it excess-\n   traffic-marks (and perhaps also drops)\
    \ PCN-packets.  In this example,\n   when a PCN-egress-node observes such a packet,\
    \ it then, with some\n   probability, terminates this PCN-flow; the probability\
    \ is configured\n   low enough to avoid over termination and high enough to ensure\
    \ rapid\n   termination of enough flows.  It also informs the relevant PCN-\n\
    \   ingress-node so that it can block any further traffic on the\n   terminated\
    \ flow.\n"
- title: 1.3.  Applicability of PCN
  contents:
  - "1.3.  Applicability of PCN\n   Compared with alternative QoS mechanisms, PCN\
    \ has certain advantages\n   and disadvantages that will make it appropriate in\
    \ particular\n   scenarios.  For example, compared with hop-by-hop IntServ [RFC1633],\n\
    \   PCN only requires per-flow state at the PCN-ingress-nodes.  Compared\n   with\
    \ the Diffserv architecture [RFC2475], an operator needs to be\n   less accurate\
    \ and/or conservative in its prediction of the traffic\n   matrix.  The Diffserv\
    \ architecture's traffic-conditioning agreements\n   are static and coarse; they\
    \ are defined at subscription time and are\n   used (for instance) to limit the\
    \ total traffic at each ingress of the\n   domain, regardless of the egress for\
    \ the traffic.  On the other hand,\n   PCN firstly uses admission control based\
    \ on measurements of the\n   current conditions between the specific pair of PCN-boundary-nodes,\n\
    \   and secondly, in case of a disaster, PCN protects the QoS of most\n   flows\
    \ by terminating a few selected ones.\n   PCN's admission control is a measurement-based\
    \ mechanism.  Hence, it\n   assumes that the present is a reasonable prediction\
    \ of the future:\n   the network conditions are measured at the time of a new\
    \ flow\n   request, but the actual network performance must be acceptable during\n\
    \   the call some time later.  Hence, PCN is unsuitable in several\n   circumstances:\n\
    \   o  If the source adapts its bit rate dependent on the level of pre-\n    \
    \  congestion, because then the aggregate traffic might become\n      unstable.\
    \  The assumption in this document is that PCN-packets\n      come from real-time\
    \ applications generating inelastic traffic,\n      such as the Controlled Load\
    \ Service [RFC2211].\n   o  If a potential bottleneck link has capacity for only\
    \ a few flows,\n      because then a new flow can move a link directly from no\
    \ pre-\n      congestion to being so overloaded that it has to drop packets.\n\
    \      The assumption in this document is that this isn't a problem.\n   o  If\
    \ there is the danger of a \"flash crowd\", in which many admission\n      requests\
    \ arrive within the reaction time of PCN's admission\n      mechanism, because\
    \ then they all might get admitted and so\n      overload the network.  The assumption\
    \ in this document is that, if\n      it is necessary, then flash crowds are limited\
    \ in some fashion\n      beyond the scope of this document, for instance by rate-limiting\n\
    \      QoS requests.\n   The applicability of PCN is discussed further in Section\
    \ 6.\n"
- title: 1.4.  Documents about PCN
  contents:
  - "1.4.  Documents about PCN\n   The purpose of this document is to describe a general\
    \ architecture\n   for flow admission and termination based on (pre-)congestion\n\
    \   information in order to protect the quality of service of flows\n   within\
    \ a Diffserv domain.  This document describes the PCN\n   architecture at a high\
    \ level (Section 3) and in more detail\n   (Section 4).  It also defines some\
    \ terminology, and provides\n   considerations about operations, management, and\
    \ security.  Section 6\n   considers the applicability of PCN in more detail,\
    \ covering its\n   benefits, deployment scenarios, assumptions, and potential\n\
    \   challenges.  The Appendix covers some potential future work items.\n   Aspects\
    \ of PCN are also documented elsewhere:\n   o  Metering and marking: [Eardley09]\
    \ standardises threshold metering\n      and marking and excess-traffic metering\
    \ and marking.  A PCN-packet\n      may be marked, depending on the metering results.\n\
    \   o  Encoding: the \"baseline\" encoding is described in [Moncaster09-1],\n\
    \      which standardises two PCN encoding states (PCN-marked and not\n      PCN-marked),\
    \ whilst (experimental) extensions to the baseline\n      encoding can provide\
    \ three encoding states (threshold-marked,\n      excess-traffic-marked, or not\
    \ PCN-marked), for instance, see\n      [Moncaster09-2].  (There may be further\
    \ encoding states as\n      suggested in [Westberg08].)  Section 3.6 considers\
    \ the backwards\n      compatibility of PCN encoding with ECN.\n   o  PCN-boundary-node\
    \ behaviour: how the PCN-boundary-nodes convert\n      the PCN-markings into decisions\
    \ about flow admission and flow\n      termination, as described in Informational\
    \ documents such as\n      [Taylor09] and [Charny07-2].  The concept is that the\
    \ standardised\n      metering and marking by PCN-nodes allows several possible\
    \ PCN-\n      boundary-node behaviours.  A number of possibilities are outlined\n\
    \      in this document; detailed descriptions and comparisons are in\n      [Charny07-1]\
    \ and [Menth09-2].\n   o  Signalling between PCN-boundary-nodes: signalling is\
    \ needed to\n      transport PCN-feedback-information between the PCN-boundary-nodes\n\
    \      (in the example above, this is the fraction of traffic, between\n     \
    \ the pair of PCN-boundary-nodes, that is PCN-marked).  The exact\n      details\
    \ vary for different PCN-boundary-node behaviours, and so\n      should be described\
    \ in those documents.  It may require an\n      extension to the signalling protocol\
    \ -- standardisation is out of\n      scope of the PCN WG.\n   o  The interface\
    \ by which the PCN-boundary-nodes learn identification\n      information about\
    \ the admitted flows: the exact requirements vary\n      for different PCN-boundary-node\
    \ behaviours and for different\n      signalling protocols, and so should be described\
    \ in those\n      documents.  They will be similar to those described in the example\n\
    \      above -- a PCN-ingress-node needs to be able to identify that a\n     \
    \ packet is part of a previously admitted flow (typically from its\n      five-tuple)\
    \ and each PCN-boundary-node needs to be able to\n      identify the other PCN-boundary-node\
    \ for the flow.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   o  PCN-domain: a PCN-capable domain; a contiguous set of\
    \ PCN-enabled\n      nodes that perform Diffserv scheduling [RFC2474]; the complete\
    \ set\n      of PCN-nodes that in principle can, through PCN-marking packets,\n\
    \      influence decisions about flow admission and termination for the\n    \
    \  PCN-domain; includes the PCN-egress-nodes, which measure these\n      PCN-marks,\
    \ and the PCN-ingress-nodes.\n   o  PCN-boundary-node: a PCN-node that connects\
    \ one PCN-domain to a\n      node either in another PCN-domain or in a non-PCN-domain.\n\
    \   o  PCN-interior-node: a node in a PCN-domain that is not a PCN-\n      boundary-node.\n\
    \   o  PCN-node: a PCN-boundary-node or a PCN-interior-node.\n   o  PCN-egress-node:\
    \ a PCN-boundary-node in its role in handling\n      traffic as it leaves a PCN-domain.\n\
    \   o  PCN-ingress-node: a PCN-boundary-node in its role in handling\n      traffic\
    \ as it enters a PCN-domain.\n   o  PCN-traffic, PCN-packets, PCN-BA: a PCN-domain\
    \ carries traffic of\n      different Diffserv behaviour aggregates (BAs) [RFC2474].\
    \  The\n      PCN-BA uses the PCN mechanisms to carry PCN-traffic, and the\n \
    \     corresponding packets are PCN-packets.  The same network will\n      carry\
    \ traffic of other Diffserv BAs.  The PCN-BA is distinguished\n      by a combination\
    \ of the Diffserv codepoint (DSCP) and ECN fields.\n   o  PCN-flow: the unit of\
    \ PCN-traffic that the PCN-boundary-node\n      admits (or terminates); the unit\
    \ could be a single microflow (as\n      defined in [RFC2474]) or some identifiable\
    \ collection of\n      microflows.\n   o  Pre-congestion: a condition of a link\
    \ within a PCN-domain such\n      that the PCN-node performs PCN-marking, in order\
    \ to provide an\n      \"early warning\" of potential congestion before there\
    \ is any\n      significant build-up of PCN-packets in the real queue.  (Hence,\
    \ by\n      analogy with ECN, we call our mechanism Pre-Congestion\n      Notification.)\n\
    \   o  PCN-marking: the process of setting the header in a PCN-packet\n      based\
    \ on defined rules, in reaction to pre-congestion; either\n      threshold-marking\
    \ or excess-traffic-marking.  Such a packet is\n      then called PCN-marked.\n\
    \   o  Threshold-metering: a metering behaviour that, if the PCN-traffic\n   \
    \   exceeds the PCN-threshold-rate, indicates that all PCN-traffic is\n      to\
    \ be threshold-marked.\n   o  PCN-threshold-rate: the reference rate of a threshold-meter,\
    \ which\n      is configured for each link in the PCN-domain and which is lower\n\
    \      than the PCN-excess-rate.\n   o  Threshold-marking: the setting of the\
    \ header in a PCN-packet to a\n      specific encoding, based on indications from\
    \ the threshold-meter.\n      Such a packet is then called threshold-marked.\n\
    \   o  Excess-traffic-metering: a metering behaviour that, if the PCN-\n     \
    \ traffic exceeds the PCN-excess-rate, indicates that the amount of\n      PCN-traffic\
    \ to be excess-traffic-marked is equal to the amount in\n      excess of the PCN-excess-rate.\n\
    \   o  PCN-excess-rate: the reference rate of an excess-traffic-meter,\n     \
    \ which is a configured for each link in the PCN-domain and which is\n      higher\
    \ than the PCN-threshold-rate.\n   o  Excess-traffic-marking: the setting of the\
    \ header in a PCN-packet\n      to a specific encoding, based on indications from\
    \ the excess-\n      traffic-meter.  Such a packet is then called excess-traffic-\n\
    \      marked.\n   o  PCN-colouring: the process of setting the header in a PCN-packet\n\
    \      by a PCN-boundary-node; performed by a PCN-ingress-node so that\n     \
    \ PCN-nodes can easily identify PCN-packets; performed by a PCN-\n      egress-node\
    \ so that the header is appropriate for nodes beyond the\n      PCN-domain.\n\
    \   o  Ingress-egress-aggregate: The collection of PCN-packets from all\n    \
    \  PCN-flows that travel in one direction between a specific pair of\n      PCN-boundary-nodes.\n\
    \   o  PCN-feedback-information: information signalled by a PCN-egress-\n    \
    \  node to a PCN-ingress-node (or a central control node), which is\n      needed\
    \ for the flow admission and flow termination mechanisms.\n   o  PCN-admissible-rate:\
    \ the rate of PCN-traffic on a link up to which\n      PCN admission control should\
    \ accept new PCN-flows.\n   o  PCN-supportable-rate: the rate of PCN-traffic on\
    \ a link down to\n      which PCN flow termination should, if necessary, terminate\
    \ already\n      admitted PCN-flows.\n"
- title: 3.  High-Level Functional Architecture
  contents:
  - "3.  High-Level Functional Architecture\n   The high-level approach is to split\
    \ functionality between:\n   o  PCN-interior-nodes \"inside\" the PCN-domain,\
    \ which monitor their\n      own state of pre-congestion and mark PCN-packets\
    \ as appropriate.\n      They are not flow-aware, nor are they aware of ingress-egress-\n\
    \      aggregates.  The functionality is also done by PCN-ingress-nodes\n    \
    \  for their outgoing interfaces (ie, those \"inside\" the PCN-domain).\n   o\
    \  PCN-boundary-nodes at the edge of the PCN-domain, which control\n      admission\
    \ of new PCN-flows and termination of existing PCN-flows,\n      based on information\
    \ from PCN-interior-nodes.  This information is\n      in the form of the PCN-marked\
    \ data packets (which are intercepted\n      by the PCN-egress-nodes) and is not\
    \ in signalling messages.\n      Generally, PCN-ingress-nodes are flow-aware.\n\
    \   The aim of this split is to keep the bulk of the network simple,\n   scalable,\
    \ and robust, whilst confining policy, application-level, and\n   security interactions\
    \ to the edge of the PCN-domain.  For example,\n   the lack of flow awareness\
    \ means that the PCN-interior-nodes don't\n   care about the flow information\
    \ associated with PCN-packets, nor do\n   the PCN-boundary-nodes care about which\
    \ PCN-interior-nodes its\n   ingress-egress-aggregates traverse.\n   In order\
    \ to generate information about the current state of the PCN-\n   domain, each\
    \ PCN-node PCN-marks packets if it is \"pre-congested\".\n   Exactly when a PCN-node\
    \ decides if it is \"pre-congested\" (the\n   algorithm) and exactly how packets\
    \ are \"PCN-marked\" (the encoding)\n   will be defined in separate Standards\
    \ Track documents, but at a high\n   level it is as follows:\n   o  the algorithms:\
    \ a PCN-node meters the amount of PCN-traffic on\n      each one of its outgoing\
    \ (or incoming) links.  The measurement is\n      made as an aggregate of all\
    \ PCN-packets, not per flow.  There are\n      two algorithms: one for threshold-metering\
    \ and one for excess-\n      traffic-metering.  The meters trigger PCN-marking\
    \ as necessary.\n   o  the encoding(s): a PCN-node PCN-marks a PCN-packet by modifying\
    \ a\n      combination of the DSCP and ECN fields.  In the \"baseline\"\n    \
    \  encoding [Moncaster09-1], the ECN field is set to 11 and the DSCP\n      is\
    \ not altered.  Extension encodings may be defined that, at most,\n      use a\
    \ second DSCP (eg, as in [Moncaster09-2]) and/or set the ECN\n      field to values\
    \ other than 11 (eg, as in [Menth08-2]).\n   In a PCN-domain, the operator may\
    \ have two or three encoding states\n   available.  The baseline encoding provides\
    \ two encoding states (not\n   PCN-marked and PCN-marked), whilst extended encodings\
    \ can provide\n   three encoding states (not PCN-marked, threshold-marked, and\
    \ excess-\n   traffic-marked).\n   An operator may choose to deploy either admission\
    \ control or flow\n   termination or both.  Although designed to work together,\
    \ they are\n   independent mechanisms, and the use of one does not require or\n\
    \   prevent the use of the other.  Three encoding states naturally allows\n  \
    \ both flow admission and flow termination.  If there are only two\n   encoding\
    \ states, then there are several options -- see Section 3.3.\n   The PCN-boundary-nodes\
    \ monitor the PCN-marked packets in order to\n   extract information about the\
    \ current state of the PCN-domain.  Based\n   on this monitoring, a distributed\
    \ decision is made about whether to\n   admit a prospective new flow or terminate\
    \ existing flow(s).  Sections\n   4.4 and 4.5 mention various possibilities for\
    \ how the functionality\n   could be distributed.\n   PCN-metering and PCN-marking\
    \ need to be configured on all\n   (potentially pre-congested) links in the PCN-domain\
    \ to ensure that\n   the PCN mechanisms protect all links.  The actual functionality\
    \ can\n   be configured on the outgoing or incoming interfaces of PCN-nodes --\n\
    \   or one algorithm could be configured on the outgoing interface and\n   the\
    \ other on the incoming interface.  The important point is that a\n   consistent\
    \ choice is made across the PCN-domain to ensure that the\n   PCN mechanisms protect\
    \ all links.  See [Eardley09] for further\n   discussion.\n   The objective of\
    \ threshold-marking, as triggered by the threshold-\n   metering algorithm, is\
    \ to threshold-mark all PCN-packets whenever the\n   bit rate of PCN-packets is\
    \ greater than some configured rate, the\n   PCN-threshold-rate.  The objective\
    \ of excess-traffic-metering, as\n   triggered by the excess-traffic-marking algorithm,\
    \ is to excess-\n   traffic-mark PCN-packets at a rate equal to the difference\
    \ between\n   the bit rate of PCN-packets and some configured rate, the PCN-excess-\n\
    \   rate.  Note that this description reflects the overall intent of the\n   algorithms\
    \ rather than their instantaneous behaviour, since the rate\n   measured at a\
    \ particular moment depends on the detailed algorithm,\n   its implementation,\
    \ and the traffic's variance as well as its rate\n   (eg, marking may well continue\
    \ after a recent overload, even after\n   the instantaneous rate has dropped).\
    \  The algorithms are specified in\n   [Eardley09].\n   Admission and termination\
    \ approaches are detailed and compared in\n   [Charny07-1] and [Menth09-2].  The\
    \ discussion below is just a brief\n   summary.  Sections 3.1 and 3.2 assume there\
    \ are three encoding states\n   available, whilst Section 3.3 assumes there are\
    \ two encoding states\n   available.\n   From the perspective of the outside world,\
    \ a PCN-domain essentially\n   looks like a Diffserv domain, but without the Diffserv\
    \ architecture's\n   traffic-conditioning agreements.  PCN-traffic is either transported\n\
    \   across it transparently or policed at the PCN-ingress-node (ie,\n   dropped\
    \ or carried at a lower QoS).  One difference is that PCN-\n   traffic has better\
    \ QoS guarantees than normal Diffserv traffic\n   because the PCN mechanisms better\
    \ protect the QoS of admitted flows.\n   Another difference may occur in the rare\
    \ circumstance when there is a\n   failure: on the one hand, some PCN-flows may\
    \ get terminated but, on\n   the other hand, other flows will get their QoS restored.\
    \  Non-PCN-\n   traffic is treated transparently, ie, the PCN-domain is a normal\n\
    \   Diffserv domain.\n"
- title: 3.1.  Flow Admission
  contents:
  - "3.1.  Flow Admission\n   The objective of PCN's flow admission control mechanism\
    \ is to limit\n   the PCN-traffic on each link in the PCN-domain to *roughly*\
    \ its PCN-\n   admissible-rate by admitting or blocking prospective new flows,\
    \ in\n   order to protect the QoS of existing PCN-flows.  With three encoding\n\
    \   states available, the PCN-threshold-rate is configured by the\n   operator\
    \ as equal to the PCN-admissible-rate on each link.  It is set\n   lower than\
    \ the traffic rate at which the link becomes congested and\n   the node drops\
    \ packets.\n   Exactly how the admission control decision is made will be defined\n\
    \   separately in Informational documents.  This document describes two\n   approaches\
    \ (others might be possible):\n   o  The PCN-egress-node measures (possibly as\
    \ a moving average) the\n      fraction of the PCN-traffic that is threshold-marked.\
    \  The\n      fraction is measured for a specific ingress-egress-aggregate.  If\n\
    \      the fraction is below a threshold value, then the new flow is\n      admitted;\
    \ if the fraction is above the threshold value, then it is\n      blocked.  The\
    \ fraction could be measured as an EWMA (exponentially\n      weighted moving\
    \ average), which has sometimes been called the\n      \"congestion level estimate\"\
    .\n   o  The PCN-egress-node monitors PCN-traffic and if it receives one\n   \
    \   (or several) threshold-marked packets, then the new flow is\n      blocked;\
    \ otherwise, it is admitted.  One possibility may be to\n      react to the marking\
    \ state of an initial flow-setup packet (eg,\n      RSVP PATH).  Another is that\
    \ after one (or several) threshold-\n      marks, all flows are blocked until\
    \ after a specific period of no\n      congestion.\n   Note that the admission\
    \ control decision is made for a particular\n   pair of PCN-boundary-nodes.  So\
    \ it is quite possible for a new flow\n   to be admitted between one pair of PCN-boundary-nodes,\
    \ whilst at the\n   same time another admission request is blocked between a different\n\
    \   pair of PCN-boundary-nodes.\n"
- title: 3.2.  Flow Termination
  contents:
  - "3.2.  Flow Termination\n   The objective of PCN's flow termination mechanism\
    \ is to limit the\n   PCN-traffic on each link to *roughly* its PCN-supportable-rate,\
    \ by\n   terminating some existing PCN-flows, in order to protect the QoS of\n\
    \   the remaining PCN-flows.  With three encoding states available, the\n   PCN-excess-rate\
    \ is configured by the operator as equal to the PCN-\n   supportable-rate on each\
    \ link.  It may be set lower than the traffic\n   rate at which the link becomes\
    \ congested and at which the node drops\n   packets.\n   Exactly how the flow\
    \ termination decision is made will be defined\n   separately in Informational\
    \ documents.  This document describes\n   several approaches (others might be\
    \ possible):\n   o  In one approach, the PCN-egress-node measures the rate of\
    \ PCN-\n      traffic that is not excess-traffic-marked, which is the amount of\n\
    \      PCN-traffic that can actually be supported, and communicates this\n   \
    \   to the PCN-ingress-node.  Also, the PCN-ingress-node measures the\n      rate\
    \ of PCN-traffic that is destined for this specific PCN-egress-\n      node. \
    \ The difference represents the excess amount that should be\n      terminated.\n\
    \   o  Another approach instead measures the rate of excess-traffic-\n      marked\
    \ traffic and terminates this amount of traffic.  This\n      terminates less\
    \ traffic than the previous approach, if some nodes\n      are dropping PCN-traffic.\n\
    \   o  Another approach monitors PCN-packets and terminates some of the\n    \
    \  PCN-flows that have an excess-traffic-marked packet.  (If all such\n      flows\
    \ were terminated, far too much traffic would be terminated,\n      so a random\
    \ selection needs to be made from those with an excess-\n      traffic-marked\
    \ packet [Menth08-1].)\n   Since flow termination is designed for \"abnormal\"\
    \ circumstances, it\n   is quite likely that some PCN-nodes are congested and,\
    \ hence, that\n   packets are being dropped and/or significantly queued.  The\
    \ flow\n   termination mechanism must accommodate this.\n   Note also that the\
    \ termination control decision is made for a\n   particular pair of PCN-boundary-nodes.\
    \  So it is quite possible for\n   PCN-flows to be terminated between one pair\
    \ of PCN-boundary-nodes,\n   whilst at the same time none are terminated between\
    \ a different pair\n   of PCN-boundary-nodes.\n"
- title: 3.3.  Flow Admission and/or Flow Termination When There Are Only Two PCN
  contents:
  - "3.3.  Flow Admission and/or Flow Termination When There Are Only Two PCN\n  \
    \    Encoding States\n   If a PCN-domain has only two encoding states available\
    \ (PCN-marked\n   and not PCN-marked), ie, it is using the baseline encoding\n\
    \   [Moncaster09-1], then an operator has three options (others might be\n   possible):\n\
    \   o  admission control only: PCN-marking means threshold-marking, ie,\n    \
    \  only the threshold-metering algorithm triggers PCN-marking.  Only\n      PCN\
    \ admission control is available.\n   o  flow termination only: PCN-marking means\
    \ excess-traffic-marking,\n      ie, only the excess-traffic-metering algorithm\
    \ triggers PCN-\n      marking.  Only PCN termination control is available.\n\
    \   o  both admission control and flow termination: only the excess-\n      traffic-metering\
    \ algorithm triggers PCN-marking; however, the\n      configured rate (PCN-excess-rate)\
    \ is set equal to the PCN-\n      admissible-rate, as shown in Figure 3.  [Charny07-2]\
    \ describes how\n      both admission control and flow termination can be triggered\
    \ in\n      this case and also gives some pros and cons of this approach.  The\n\
    \      main downside is that admission control is less accurate.\n           \
    \               ==   Metering &    ==\n                          ==Marking behaviour==\
    \       ==PCN mechanisms==\n                       ^\n           Rate of     ^\n\
    \      PCN-traffic on   |\n     bottleneck link   |                          \
    \        Terminate some\n                       |                            \
    \      admitted flows\n                       |                              \
    \           &\n                       |                                 Block\
    \ new flows\n                       |\n                       |       Some pkts\n\
    \   U*PCN-excess-rate  -|  excess-traffic-marked        -----------------\n"
- title: (=PCN-supportable-rate)|
  contents:
  - "(=PCN-supportable-rate)|\n                       |                          \
    \       Block new flows\n                       |\n                       |\n\
    \     PCN-excess-rate  -|------------------------------------------------\n (=PCN-admissible-rate)|\n\
    \                       |         No pkts                 Admit new flows\n  \
    \                     |       PCN-marked\n                       |\n   Figure\
    \ 3: Schematic of how the PCN admission control and flow\n   termination mechanisms\
    \ operate as the rate of PCN-traffic increases,\n   for a PCN-domain with two\
    \ encoding states and using the approach of\n   [Charny07-2].  Note: U is a global\
    \ parameter for all links in the\n   PCN-domain.\n"
- title: 3.4.  Information Transport
  contents:
  - "3.4.  Information Transport\n   The transport of pre-congestion information from\
    \ a PCN-node to a PCN-\n   egress-node is through PCN-markings in data packet\
    \ headers, ie, \"in-\n   band\"; no signalling protocol messaging is needed. \
    \ Signalling is\n   needed to transport PCN-feedback-information -- for example,\
    \ to\n   convey the fraction of PCN-marked traffic from a PCN-egress-node to\n\
    \   the relevant PCN-ingress-node.  Exactly what information needs to be\n   transported\
    \ will be described in future documents about possible\n   boundary mechanisms.\
    \  The signalling could be done by an extension of\n   RSVP or NSIS (Next Steps\
    \ in Signalling), for instance; [Lefaucheur06]\n   describes the extensions needed\
    \ for RSVP.\n"
- title: 3.5.  PCN-Traffic
  contents:
  - "3.5.  PCN-Traffic\n   The following are some high-level points about how PCN\
    \ works:\n   o  There needs to be a way for a PCN-node to distinguish PCN-traffic\n\
    \      from other traffic.  This is through a combination of the DSCP\n      field\
    \ and/or ECN field.\n   o  It is not advised to have competing-non-PCN-traffic\
    \ but, if there\n      is such traffic, there needs to be a mechanism to limit\
    \ it.\n      \"Competing-non-PCN-traffic\" means traffic that shares a link with\n\
    \      PCN-traffic and competes for its forwarding bandwidth.  Hence,\n      more\
    \ competing-non-PCN-traffic results in poorer QoS for PCN.\n      Further, the\
    \ unpredictable amount of competing-non-PCN-traffic\n      makes the PCN mechanisms\
    \ less accurate and so reduces PCN's\n      ability to protect the QoS of admitted\
    \ PCN-flows.\n   o  Two examples of such competing-non-PCN-traffic are:\n    \
    \  1.  traffic that is priority scheduled over PCN (perhaps a\n          particular\
    \ application or an operator's control messages);\n      2.  traffic that is scheduled\
    \ at the same priority as PCN (for\n          example, if the Voice-Admit codepoint\
    \ is used for PCN-traffic\n          [Moncaster09-1] and there is non-PCN, voice-admit\
    \ traffic in\n          the PCN-domain).\n   o  If there is such competing-non-PCN-traffic,\
    \ then PCN's mechanisms\n      should take account of it, in order to improve\
    \ the accuracy of the\n      decision about whether to admit (or terminate) a\
    \ PCN-flow.  For\n      example, one mechanism is that such competing-non-PCN-traffic\n\
    \      contributes to the PCN-meters (ie, is metered by the threshold-\n     \
    \ marking and excess-traffic-marking algorithms).\n   o  There will be other non-PCN-traffic\
    \ that doesn't compete for the\n      same forwarding bandwidth as PCN-traffic,\
    \ because it is forwarded\n      at lower priority.  Hence, it shouldn't contribute\
    \ to the PCN-\n      meters.  Examples are best-effort and assured-forwarding\
    \ traffic.\n      However, a PCN-node should dedicate some capacity to lower-\n\
    \      priority traffic so that it isn't starved.\n   o  This document assumes\
    \ that the PCN mechanisms are applied to a\n      single behaviour aggregate in\
    \ the PCN-domain.  However, it would\n      also be possible to apply them independently\
    \ to more than one\n      behaviour aggregate, which are distinguished by DSCP.\n"
- title: 3.6.  Backwards Compatibility
  contents:
  - "3.6.  Backwards Compatibility\n   PCN specifies semantics for the ECN field that\
    \ differ from the\n   default semantics of [RFC3168].  A particular PCN encoding\
    \ scheme\n   needs to describe how it meets the guidelines of BCP 124 [RFC4774]\n\
    \   for specifying alternative semantics for the ECN field.  In summary,\n   the\
    \ approach is to:\n   o  use a DSCP to allow PCN-nodes to distinguish PCN-traffic\
    \ that uses\n      the alternative ECN semantics;\n   o  define these semantics\
    \ for use within a controlled region, the\n      PCN-domain;\n   o  take appropriate\
    \ action if ECN-capable, non-PCN-traffic arrives at\n      a PCN-ingress-node\
    \ with the DSCP used by PCN.\n   For the baseline encoding [Moncaster09-1], the\
    \ \"appropriate action\"\n   is to block ECN-capable traffic that uses the same\
    \ DSCP as PCN from\n   entering the PCN-domain directly.  \"Blocking\" means it\
    \ is dropped or\n   downgraded to a lower-priority behaviour aggregate, or alternatively\n\
    \   such traffic may be tunnelled through the PCN-domain.  The reason\n   that\
    \ \"appropriate action\" is needed is that the PCN-egress-node\n   clears the\
    \ ECN field to 00.\n   Extended encoding schemes may need to take different \"\
    appropriate\n   action\".\n"
- title: 4.  Detailed Functional Architecture
  contents:
  - "4.  Detailed Functional Architecture\n   This section is intended to provide\
    \ a systematic summary of the new\n   functional architecture in the PCN-domain.\
    \  First, it describes\n   functions needed at the three specific types of PCN-node;\
    \ these are\n   data plane functions and are in addition to the normal router\n\
    \   functions for PCN-nodes.  Then, it describes the further\n   functionality\
    \ needed for both flow admission control and flow\n   termination; these are signalling\
    \ and decision-making functions, and\n   there are various possibilities for where\
    \ the functions are\n   physically located.  The section is split into:\n   1.\
    \  functions needed at PCN-interior-nodes\n   2.  functions needed at PCN-ingress-nodes\n\
    \   3.  functions needed at PCN-egress-nodes\n   4.  other functions needed for\
    \ flow admission control\n   5.  other functions needed for flow termination control\n\
    \   Note: Probing is covered in the Appendix.\n   The section then discusses some\
    \ other detailed topics:\n   1.  addressing\n   2.  tunnelling\n   3.  fault handling\n"
- title: 4.1.  PCN-Interior-Node Functions
  contents:
  - "4.1.  PCN-Interior-Node Functions\n   Each link of the PCN-domain is configured\
    \ with the following\n   functionality:\n   o  Behaviour aggregate classification\
    \ - determine whether or not an\n      incoming packet is a PCN-packet.\n   o\
    \  PCN-meter - measure the \"amount of PCN-traffic\".  The measurement\n     \
    \ is made on the overall PCN-traffic, not per flow.  Algorithms\n      determine\
    \ whether to indicate to the PCN-marking functionality\n      that packets should\
    \ be PCN-marked.\n   o  PCN-mark - as triggered by indications from the PCN-meter\n\
    \      functionality; if necessary, PCN-mark packets with the appropriate\n  \
    \    encoding.\n   o  Drop - if the queue overflows, then naturally packets are\
    \ dropped.\n      In addition, the link may be configured with a maximum rate\
    \ for\n      PCN-traffic (below the physical link rate), above which PCN-\n  \
    \    packets are dropped.\n   The functions are defined in [Eardley09] and the\
    \ baseline encoding in\n   [Moncaster09-1] (extended encodings are to be defined\
    \ in other\n   documents).\n                                       +---------+\
    \   Result\n                                    +->|Threshold|-------+\n     \
    \                               |  |  Meter  |       |\n                     \
    \               |  +---------+       V\n         +----------+   +- - - - -+  |\
    \                +------+\n         |   BA     |   |         |  |            \
    \    |      |    Marked\n"
- title: Packet =>|Classifier|==>| Dropper |==?===============>|Marker|==> Packet
  contents:
  - 'Packet =>|Classifier|==>| Dropper |==?===============>|Marker|==> Packet

    '
- title: Stream   |          |   |         |  |                |      |    Stream
  contents:
  - "Stream   |          |   |         |  |                |      |    Stream\n  \
    \       +----------+   +- - - - -+  |                +------+\n              \
    \                      |  +---------+       ^\n                              \
    \      |  | Excess  |       |\n                                    +->| Traffic\
    \ |-------+\n                                       |  Meter  |   Result\n   \
    \                                    +---------+\n   Figure 4: Schematic of PCN-interior-node\
    \ functionality.\n"
- title: 4.2.  PCN-Ingress-Node Functions
  contents:
  - "4.2.  PCN-Ingress-Node Functions\n   Each ingress link of the PCN-domain is configured\
    \ with the following\n   functionality:\n   o  Packet classification - determine\
    \ whether an incoming packet is\n      part of a previously admitted flow by using\
    \ a filter spec (eg,\n      DSCP, source and destination addresses, port numbers,\
    \ and\n      protocol).\n   o  Police - police, by dropping any packets received\
    \ with a DSCP\n      indicating PCN transport that do not belong to an admitted\
    \ flow.\n      (A prospective PCN-flow that is rejected could be blocked or\n\
    \      admitted into a lower-priority behaviour aggregate.)  Similarly,\n    \
    \  police packets that are part of a previously admitted flow, to\n      check\
    \ that the flow keeps to the agreed rate or flowspec (eg, see\n      [RFC1633]\
    \ for a microflow and its NSIS equivalent).\n   o  PCN-colour - set the DSCP and\
    \ ECN fields appropriately for the\n      PCN-domain, for example, as in [Moncaster09-1].\n\
    \   o  Meter - some approaches to flow termination require the PCN-\n      ingress-node\
    \ to measure the (aggregate) rate of PCN-traffic\n      towards a particular PCN-egress-node.\n\
    \   The first two are policing functions, needed to make sure that PCN-\n   packets\
    \ admitted into the PCN-domain belong to a flow that has been\n   admitted and\
    \ to ensure that the flow keeps to the flowspec agreed\n   (eg, doesn't exceed\
    \ an agreed maximum rate and is inelastic traffic).\n   Installing the filter\
    \ spec will typically be done by the signalling\n   protocol, as will re-installing\
    \ the filter, for example, after a re-\n   route that changes the PCN-ingress-node\
    \ (see [Briscoe06] for an\n   example using RSVP).  PCN-colouring allows the rest\
    \ of the PCN-domain\n   to recognise PCN-packets.\n"
- title: 4.3.  PCN-Egress-Node Functions
  contents:
  - "4.3.  PCN-Egress-Node Functions\n   Each egress link of the PCN-domain is configured\
    \ with the following\n   functionality:\n   o  Packet classify - determine which\
    \ PCN-ingress-node a PCN-packet\n      has come from.\n   o  Meter - \"measure\
    \ PCN-traffic\" or \"monitor PCN-marks\".\n   o  PCN-colour - for PCN-packets,\
    \ set the DSCP and ECN fields to the\n      appropriate values for use outside\
    \ the PCN-domain.\n   The metering functionality, of course, depends on whether\
    \ it is\n   targeted at admission control or flow termination.  Alternatives\n\
    \   involve the PCN-egress-node \"measuring\", as an aggregate (ie, not per\n\
    \   flow), all PCN-packets from a particular PCN-ingress-node, or\n   \"monitoring\"\
    \ the PCN-traffic and reacting to one (or several) PCN-\n   marked packets.  For\
    \ PCN-colouring, [Moncaster09-1] specifies that\n   the PCN-egress-node resets\
    \ the ECN field to 00; other encodings may\n   define different behaviour.\n"
- title: 4.4.  Admission Control Functions
  contents:
  - "4.4.  Admission Control Functions\n   As well as the functions covered above,\
    \ other specific admission\n   control functions need to be performed (others\
    \ might be possible):\n   o  Make decision about admission - based on the output\
    \ of the PCN-\n      egress-node's meter function.  In the case where it \"measures\
    \ PCN-\n      traffic\", the measured traffic on the ingress-egress-aggregate\
    \ is\n      compared with some reference level.  In the case where it\n      \"\
    monitors PCN-marks\", the decision is based on whether or not one\n      (or several)\
    \ packets are PCN-marked (eg, the RSVP PATH message).\n      In either case, the\
    \ admission decision also takes account of\n      policy and application-layer\
    \ requirements [RFC2753].\n   o  Communicate decision about admission - signal\
    \ the decision to the\n      node making the admission control request (which\
    \ may be outside\n      the PCN-domain) and to the policer (PCN-ingress-node function)\
    \ for\n      enforcement of the decision.\n   There are various possibilities\
    \ for how the functionality could be\n   distributed (we assume the operator will\
    \ configure which is used):\n   o  The decision is made at the PCN-egress-node\
    \ and the decision\n      (admit or block) is signalled to the PCN-ingress-node.\n\
    \   o  The decision is recommended by the PCN-egress-node (admit or\n      block),\
    \ but the decision is definitively made by the PCN-ingress-\n      node.  The\
    \ rationale is that the PCN-egress-node naturally has the\n      necessary information\
    \ about the amount of PCN-marks on the\n      ingress-egress-aggregate, whereas\
    \ the PCN-ingress-node is the\n      policy enforcement point [RFC2753] that polices\
    \ incoming traffic\n      to ensure it is part of an admitted PCN-flow.\n   o\
    \  The decision is made at the PCN-ingress-node, which requires that\n      the\
    \ PCN-egress-node signals PCN-feedback-information to the PCN-\n      ingress-node.\
    \  For example, it could signal the current fraction\n      of PCN-traffic that\
    \ is PCN-marked.\n   o  The decision is made at a centralised node (see Appendix).\n\
    \   Note: Admission control functionality is not performed by normal PCN-\n  \
    \ interior-nodes.\n"
- title: 4.5.  Flow Termination Functions
  contents:
  - "4.5.  Flow Termination Functions\n   As well as the functions covered above,\
    \ other specific termination\n   control functions need to be performed (others\
    \ might be possible):\n   o  PCN-meter at PCN-egress-node - similarly to flow\
    \ admission, there\n      are two types of possibilities: to \"measure PCN-traffic\"\
    \ on the\n      ingress-egress-aggregate, or to \"monitor PCN-marks\" and react\
    \ to\n      one (or several) PCN-marks.\n   o  (if required) PCN-meter at PCN-ingress-node\
    \ - make \"measurements\n      of PCN-traffic\" being sent towards a particular\
    \ PCN-egress-node;\n      again, this is done for the ingress-egress-aggregate\
    \ and not per\n      flow.\n   o  (if required) Communicate PCN-feedback-information\
    \ to the node\n      that makes the flow termination decision - for example, as\
    \ in\n      [Briscoe06], communicate the PCN-egress-node's measurements to the\n\
    \      PCN-ingress-node.\n   o  Make decision about flow termination - use the\
    \ information from\n      the PCN-meter(s) to decide which PCN-flow or PCN-flows\
    \ to\n      terminate.  The decision takes account of policy and application-\n\
    \      layer requirements [RFC2753].\n   o  Communicate decision about flow termination\
    \ - signal the decision\n      to the node that is able to terminate the flow\
    \ (which may be\n      outside the PCN-domain) and to the policer (PCN-ingress-node\n\
    \      function) for enforcement of the decision.\n   There are various possibilities\
    \ for how the functionality could be\n   distributed, similar to those discussed\
    \ above in Section 4.4.\n   Note: Flow termination functionality is not performed\
    \ by normal PCN-\n   interior-nodes.\n"
- title: 4.6.  Addressing
  contents:
  - "4.6.  Addressing\n   PCN-nodes may need to know the address of other PCN-nodes.\
    \  Note that\n   PCN-interior-nodes don't need to know the address of other PCN-nodes\n\
    \   (except their next-hop neighbours for routing purposes).\n   At a minimum,\
    \ the PCN-egress-node needs to know the address of the\n   PCN-ingress-node associated\
    \ with a flow so that the PCN-ingress-node\n   can be informed of the admission\
    \ decision (and any flow termination\n   decision) and enforce it through policing.\
    \  There are various\n   possibilities for how the PCN-egress-node can do this,\
    \ ie, associate\n   the received packet to the correct ingress-egress-aggregate.\
    \  It is\n   not the intention of this document to mandate a particular mechanism.\n\
    \   o  The addressing information can be gathered from signalling -- for\n   \
    \   example, through the regular processing of an RSVP PATH message,\n      as\
    \ the PCN-ingress-node is the previous RSVP hop (PHOP)\n      ([Lefaucheur06]).\
    \  Another option is that the PCN-ingress-node\n      could signal its address\
    \ to the PCN-egress-node.\n   o  Always tunnel PCN-traffic across the PCN-domain.\
    \  Then the PCN-\n      ingress-node's address is simply the source address of\
    \ the outer\n      packet header.  The PCN-ingress-node needs to learn the address\
    \ of\n      the PCN-egress-node, either by manual configuration or by one of\n\
    \      the automated tunnel endpoint discovery mechanisms (such as\n      signalling\
    \ or probing over the data route, interrogating routing,\n      or using a centralised\
    \ broker).\n"
- title: 4.7.  Tunnelling
  contents:
  - "4.7.  Tunnelling\n   Tunnels may originate and/or terminate within a PCN-domain\
    \ (eg, IP\n   over IP, IP over MPLS).  It is important that the PCN-marking of\
    \ any\n   packet can potentially influence PCN's flow admission control and\n\
    \   termination -- it shouldn't matter whether the packet happens to be\n   tunnelled\
    \ at the PCN-node that PCN-marks the packet, or indeed\n   whether it's decapsulated\
    \ or encapsulated by a subsequent PCN-node.\n   This suggests that the \"uniform\
    \ conceptual model\" described in\n   [RFC2983] should be re-applied in the PCN\
    \ context.  In line with both\n   this and the approach of [RFC4303] and [Briscoe09],\
    \ the following\n   rule is applied if encapsulation is done within the PCN-domain:\n\
    \   o  Any PCN-marking is copied into the outer header.\n   Note: A tunnel will\
    \ not provide this behaviour if it complies with\n   [RFC3168] tunnelling in either\
    \ mode, but it will if it complies with\n   [RFC4301] IPsec tunnelling.\n   Similarly,\
    \ in line with the \"uniform conceptual model\" of [RFC2983],\n   with the \"\
    full-functionality option\" of [RFC3168], and with\n   [RFC4301], the following\
    \ rule is applied if decapsulation is done\n   within the PCN-domain:\n   o  If\
    \ the outer header's marking state is more severe, then it is\n      copied onto\
    \ the inner header.\n   Note that the order of increasing severity is: not PCN-marked,\n\
    \   threshold-marked, and excess-traffic-marked.\n   An operator may wish to tunnel\
    \ PCN-traffic from PCN-ingress-nodes to\n   PCN-egress-nodes.  The PCN-marks shouldn't\
    \ be visible outside the\n   PCN-domain, which can be achieved by the PCN-egress-node\
    \ doing the\n   PCN-colouring function (Section 4.3) after all the other (PCN\
    \ and\n   tunnelling) functions.  The potential reasons for doing such\n   tunnelling\
    \ are: the PCN-egress-node then automatically knows the\n   address of the relevant\
    \ PCN-ingress-node for a flow, and, even if\n   ECMP (Equal Cost Multi-Path) is\
    \ running, all PCN-packets on a\n   particular ingress-egress-aggregate follow\
    \ the same path (for more on\n   ECMP, see Section 6.4).  But such tunnelling\
    \ also has drawbacks, for\n   example, the additional overhead in terms of bandwidth\
    \ and processing\n   as well as the cost of setting up a mesh of tunnels between\
    \ PCN-\n   boundary-nodes (there is an N^2 scaling issue).\n   Potential issues\
    \ arise for a \"partially PCN-capable tunnel\", ie,\n   where only one tunnel\
    \ endpoint is in the PCN-domain:\n   1.  The tunnel originates outside a PCN-domain\
    \ and ends inside it.\n       If the packet arrives at the tunnel ingress with\
    \ the same\n       encoding as used within the PCN-domain to indicate PCN-marking,\n\
    \       then this could lead the PCN-egress-node to falsely measure pre-\n   \
    \    congestion.\n   2.  The tunnel originates inside a PCN-domain and ends outside\
    \ it.\n       If the packet arrives at the tunnel ingress already PCN-marked,\n\
    \       then it will still have the same encoding when it's decapsulated,\n  \
    \     which could potentially confuse nodes beyond the tunnel egress.\n   In line\
    \ with the solution for partially capable Diffserv tunnels in\n   [RFC2983], the\
    \ following rules are applied:\n   o  For case (1), the tunnel egress node clears\
    \ any PCN-marking on the\n      inner header.  This rule is applied before the\
    \ \"copy on\n      decapsulation\" rule above.\n   o  For case (2), the tunnel\
    \ ingress node clears any PCN-marking on\n      the inner header.  This rule is\
    \ applied after the \"copy on\n      encapsulation\" rule above.\n   Note that\
    \ the above implies that one has to know, or determine, the\n   characteristics\
    \ of the other end of the tunnel as part of\n   establishing it.\n   Tunnelling\
    \ constraints were a major factor in the choice of the\n   baseline encoding.\
    \  As explained in [Moncaster09-1], with current\n   tunnelling endpoints, only\
    \ the 11 codepoint of the ECN field survives\n   decapsulation, and hence the\
    \ baseline encoding only uses the 11\n   codepoint to indicate PCN-marking.  Extended\
    \ encoding schemes need to\n   explain their interactions with (or assumptions\
    \ about) tunnelling.  A\n   lengthy discussion of all the issues associated with\
    \ layered\n   encapsulation of congestion notification (for ECN as well as PCN)\
    \ is\n   in [Briscoe09].\n"
- title: 4.8.  Fault Handling
  contents:
  - "4.8.  Fault Handling\n   If a PCN-interior-node (or one of its links) fails,\
    \ then lower-layer\n   protection mechanisms or the regular IP routing protocol\
    \ will\n   eventually re-route around it.  If the new route can carry all the\n\
    \   admitted traffic, flows will gracefully continue.  If instead this\n   causes\
    \ early warning of pre-congestion on the new route, then\n   admission control\
    \ based on Pre-Congestion Notification will ensure\n   that new flows will not\
    \ be admitted until enough existing flows have\n   departed.  Re-routing may result\
    \ in heavy (pre-)congestion, which\n   will cause the flow termination mechanism\
    \ to kick in.\n   If a PCN-boundary-node fails, then we would like the regular\
    \ QoS\n   signalling protocol to be responsible for taking appropriate action.\n\
    \   As an example, [Briscoe09] considers what happens if RSVP is the QoS\n   signalling\
    \ protocol.\n"
- title: 5.  Operations and Management
  contents:
  - "5.  Operations and Management\n   This section considers operations and management\
    \ issues, under the\n   FCAPS headings: Faults, Configuration, Accounting, Performance,\
    \ and\n   Security.  Provisioning is discussed with performance.\n"
- title: 5.1.  Fault Operations and Management
  contents:
  - "5.1.  Fault Operations and Management\n   Fault Operations and Management is\
    \ about preventing faults, telling\n   the management system (or manual operator)\
    \ that the system has\n   recovered (or not) from a failure, and about maintaining\
    \ information\n   to aid fault diagnosis.\n   Admission blocking and, particularly,\
    \ flow termination mechanisms\n   should rarely be needed in practice.  It would\
    \ be unfortunate if they\n   didn't work after an option had been accidentally\
    \ disabled.\n   Therefore, it will be necessary to regularly test that the live\n\
    \   system works as intended (devising a meaningful test is left as an\n   exercise\
    \ for the operator).\n   Section 4 describes how the PCN architecture has been\
    \ designed to\n   ensure admitted flows continue gracefully after recovering\n\
    \   automatically from link or node failures.  The need to record and\n   monitor\
    \ re-routing events affecting signalling is unchanged by the\n   addition of PCN\
    \ to a Diffserv domain.  Similarly, re-routing events\n   within the PCN-domain\
    \ will be recorded and monitored just as they\n   would be without PCN.\n   PCN-marking\
    \ does make it possible to record \"near-misses\".  For\n   instance, at the PCN-egress-node\
    \ a \"reporting threshold\" could be set\n   to monitor how often -- and for how\
    \ long -- the system comes close to\n   triggering flow blocking without actually\
    \ doing so.  Similarly,\n   bursts of flow termination marking could be recorded\
    \ even if they are\n   not sufficiently sustained to trigger flow termination.\
    \  Such\n   statistics could be correlated with per-queue counts of marking\n\
    \   volume (Section 5.2) to upgrade resources in danger of causing\n   service\
    \ degradation or to trigger manual tracing of intermittent\n   incipient errors\
    \ that would otherwise have gone unnoticed.\n   Finally, of course, many faults\
    \ are caused by failings in the\n   management process (\"human error\"): a wrongly\
    \ configured address in a\n   node, a wrong address given in a signalling protocol,\
    \ a wrongly\n   configured parameter in a queueing algorithm, a node set into\
    \ a\n   different mode from other nodes, and so on.  Generally, a clean\n   design\
    \ with few configurable options ensures this class of faults can\n   be traced\
    \ more easily and prevented more often.  Sound management\n   practice at run-time\
    \ also helps.  For instance, a management system\n   should be used that constrains\
    \ configuration changes within system\n   rules (eg, preventing an option setting\
    \ inconsistent with other\n   nodes), configuration options should be recorded\
    \ in an offline\n   database, and regular automatic consistency checks between\
    \ live\n   systems and the database should be performed.  PCN adds nothing\n \
    \  specific to this class of problems.\n"
- title: 5.2.  Configuration Operations and Management
  contents:
  - "5.2.  Configuration Operations and Management\n   Threshold-metering and -marking\
    \ and excess-traffic-metering and\n   -marking are standardised in [Eardley09].\
    \  However, more diversity in\n   PCN-boundary-node behaviours is expected, in\
    \ order to interface with\n   diverse industry architectures.  It may be possible\
    \ to have different\n   PCN-boundary-node behaviours for different ingress-egress-aggregates\n\
    \   within the same PCN-domain.\n   PCN-metering behaviour is enabled on either\
    \ the egress or the ingress\n   interfaces of PCN-nodes.  A consistent choice\
    \ must be made across the\n   PCN-domain to ensure that the PCN mechanisms protect\
    \ all links.\n   PCN configuration control variables fall into the following\n\
    \   categories:\n   o  system options (enabling or disabling behaviours)\n   o\
    \  parameters (setting levels, addresses, etc.)\n   One possibility is that all\
    \ configurable variables sit within an SNMP\n   (Simple Network Management Protocol)\
    \ management framework [RFC3411],\n   being structured within a defined management\
    \ information base (MIB)\n   on each node, and being remotely readable and settable\
    \ via a suitably\n   secure management protocol (such as SNMPv3).\n   Some configuration\
    \ options and parameters have to be set once to\n   \"globally\" control the whole\
    \ PCN-domain.  Where possible, these are\n   identified below.  This may affect\
    \ operational complexity and the\n   chances of interoperability problems between\
    \ equipment from different\n   vendors.\n   It may be possible for an operator\
    \ to configure some PCN-interior-\n   nodes so that they don't run the PCN mechanisms,\
    \ if it knows that\n   these links will never become (pre-)congested.\n"
- title: 5.2.1.  System Options
  contents:
  - "5.2.1.  System Options\n   On PCN-interior-nodes there will be very few system\
    \ options:\n   o  Whether two PCN-markings (threshold-marked and excess-traffic-\n\
    \      marked) are enabled or only one.  Typically, all nodes throughout\n   \
    \   a PCN-domain will be configured the same in this respect.\n      However,\
    \ exceptions could be made.  For example, if most PCN-nodes\n      used both markings\
    \ but some legacy hardware was incapable of\n      running two algorithms, an\
    \ operator might be willing to configure\n      these legacy nodes solely for\
    \ excess-traffic-marking to enable\n      flow termination as a back-stop.  It\
    \ would be sensible to place\n      such nodes where they could be provisioned\
    \ with a greater leeway\n      over expected traffic levels.\n   o  In the case\
    \ where only one PCN-marking is enabled, all nodes must\n      be configured to\
    \ generate PCN-marks from the same meter (ie,\n      either the threshold meter\
    \ or the excess-traffic meter).\n   PCN-boundary-nodes (ingress and egress) will\
    \ have more system\n   options:\n   o  Which of admission and flow termination\
    \ are enabled.  If any PCN-\n      interior-node is configured to generate a marking,\
    \ all PCN-\n      boundary-nodes must be able to interpret that marking (which\n\
    \      includes understanding, in a PCN-domain that uses only one type of\n  \
    \    PCN-marking, whether they are generated by PCN-interior-nodes'\n      threshold\
    \ meters or their excess-traffic meters).  Therefore, all\n      PCN-boundary-nodes\
    \ must be configured the same in this respect.\n   o  Where flow admission and\
    \ termination decisions are made: at PCN-\n      ingress-nodes or at PCN-egress-nodes\
    \ (or at a centralised node,\n      see Appendix).  Theoretically, this configuration\
    \ choice could be\n      negotiated for each pair of PCN-boundary-nodes, but we\
    \ cannot\n      imagine why such complexity would be required, except perhaps\
    \ in\n      future inter-domain scenarios.\n   o  How PCN-markings are translated\
    \ into admission control and flow\n      termination decisions (see Sections 3.1\
    \ and 3.2).\n   PCN-egress-nodes will have further system options:\n   o  How\
    \ the mapping should be established between each packet and its\n      aggregate\
    \ (eg, by MPLS label and by IP packet filter spec) and how\n      to take account\
    \ of ECMP.\n   o  If an equipment vendor provides a choice, there may be options\
    \ for\n      selecting which smoothing algorithm to use for measurements.\n"
- title: 5.2.2.  Parameters
  contents:
  - "5.2.2.  Parameters\n   Like any Diffserv domain, every node within a PCN-domain\
    \ will need to\n   be configured with the DSCP(s) used to identify PCN-packets.\
    \  On each\n   interior link, the main configuration parameters are the PCN-\n\
    \   threshold-rate and PCN-excess-rate.  A larger PCN-threshold-rate\n   enables\
    \ more PCN-traffic to be admitted on a link, hence improving\n   capacity utilisation.\
    \  A PCN-excess-rate set further above the PCN-\n   threshold-rate allows greater\
    \ increases in traffic (whether due to\n   natural fluctuations or some unexpected\
    \ event) before any flows are\n   terminated, ie, minimises the chances of unnecessarily\
    \ triggering the\n   termination mechanism.  For instance, an operator may want\
    \ to design\n   their network so that it can cope with a failure of any single\
    \ PCN-\n   node without terminating any flows.\n   Setting these rates on the\
    \ first deployment of PCN will be very\n   similar to the traditional process\
    \ for sizing an admission-controlled\n   network, depending on: the operator's\
    \ requirements for minimising\n   flow blocking (grade of service), the expected\
    \ PCN-traffic load on\n   each link and its statistical characteristics (the traffic\
    \ matrix),\n   contingency for re-routing the PCN-traffic matrix in the event\
    \ of\n   single or multiple failures, and the expected load from other classes\n\
    \   relative to link capacities [Menth09-1].  But, once a domain is in\n   operation,\
    \ a PCN design goal is to be able to determine growth in\n   these configured\
    \ rates much more simply, by monitoring PCN-marking\n   rates from actual rather\
    \ than expected traffic (see Section 5.4 on\n   Performance and Provisioning).\n\
    \   Operators may also wish to configure a rate greater than the PCN-\n   excess-rate\
    \ that is the absolute maximum rate that a link allows for\n   PCN-traffic.  This\
    \ may simply be the physical link rate, but some\n   operators may wish to configure\
    \ a logical limit to prevent starvation\n   of other traffic classes during any\
    \ brief period after PCN-traffic\n   exceeds the PCN-excess-rate but before flow\
    \ termination brings it\n   back below this rate.\n   Threshold-metering requires\
    \ a threshold token bucket depth to be\n   configured, excess-traffic-metering\
    \ requires a value for the MTU\n   (maximum size of a PCN-packet on the link),\
    \ and both require setting\n   a maximum size of their token buckets.  It is preferable\
    \ to have\n   rules that set defaults for these parameters but to then allow\n\
    \   operators to change them -- for instance, if average traffic\n   characteristics\
    \ change over time.\n   The PCN-egress-node may allow configuration of:\n   o\
    \  how it smooths metering of PCN-markings (eg, EWMA parameters)\n   Whichever\
    \ node makes admission and flow termination decisions will\n   contain algorithms\
    \ for converting PCN-marking levels into admission\n   or flow termination decisions.\
    \  These will also require configurable\n   parameters, for instance:\n   o  An\
    \ admission control algorithm that is based on the fraction of\n      marked packets\
    \ will at least require a marking threshold setting\n      above which it denies\
    \ admission to new flows.\n   o  Flow termination algorithms will probably require\
    \ a parameter to\n      delay termination of any flows until it is more certain\
    \ that an\n      anomalous event is not transient.\n   o  A parameter to control\
    \ the trade-off between how quickly excess\n      flows are terminated and over-termination.\n\
    \   One particular approach [Charny07-2] would require a global parameter\n  \
    \ to be defined on all PCN-nodes, but would only need one PCN-marking\n   rate\
    \ to be configured on each link.  The global parameter is a\n   scaling factor\
    \ between admission and termination (the rate of PCN-\n   traffic on a link up\
    \ to which flows are admitted vs. the rate above\n   which flows are terminated).\
    \  [Charny07-2] discusses in full the\n   impact of this particular approach on\
    \ the operation of PCN.\n"
- title: 5.3.  Accounting Operations and Management
  contents:
  - "5.3.  Accounting Operations and Management\n   Accounting is only done at trust\
    \ boundaries so it is out of scope of\n   this document, which is confined to\
    \ intra-domain issues.  Use of PCN\n   internal to a domain makes no difference\
    \ to the flow signalling\n   events crossing trust boundaries outside the PCN-domain,\
    \ which are\n   typically used for accounting.\n"
- title: 5.4.  Performance and Provisioning Operations and Management
  contents:
  - "5.4.  Performance and Provisioning Operations and Management\n   Monitoring of\
    \ performance factors measurable from *outside* the PCN-\n   domain will be no\
    \ different with PCN than with any other packet-\n   based, flow admission control\
    \ system, both at the flow level\n   (blocking probability, etc.) and the packet\
    \ level (jitter [RFC3393],\n   [Y.1541], loss rate [RFC4656], mean opinion score\
    \ [P.800], etc.).\n   The difference is that PCN is intentionally designed to\
    \ indicate\n   *internally* which exact resource(s) are the cause of performance\n\
    \   problems and by how much.\n   Even better, PCN indicates which resources will\
    \ probably cause\n   problems if they are not upgraded soon.  This can be achieved\
    \ by the\n   management system monitoring the total amount (in bytes) of PCN-\n\
    \   marking generated by each queue over a period.  Given possible long\n   provisioning\
    \ lead times, pre-congestion volume is the best metric to\n   reveal whether sufficient\
    \ persistent demand has occurred to warrant\n   an upgrade because, even before\
    \ utilisation becomes problematic, the\n   statistical variability of traffic\
    \ will cause occasional bursts of\n   pre-congestion.  This \"early warning system\"\
    \ decouples the process of\n   adding customers from the provisioning process.\
    \  This should cut the\n   time to add a customer when compared against admission\
    \ control that\n   is provided over native Diffserv [RFC2998] because it saves\
    \ having to\n   verify the capacity-planning process before adding each customer.\n\
    \   Alternatively, before triggering an upgrade, the long-term pre-\n   congestion\
    \ volume on each link can be used to balance traffic load\n   across the PCN-domain\
    \ by adjusting the link weights of the routing\n   system.  When an upgrade to\
    \ a link's configured PCN-rates is\n   required, it may also be necessary to upgrade\
    \ the physical capacity\n   available to other classes.  However, there will usually\
    \ be\n   sufficient physical capacity for the upgrade to go ahead as a simple\n\
    \   configuration change.  Alternatively, [Songhurst06] describes an\n   adaptive\
    \ rather than preconfigured system, where the configured PCN-\n   threshold-rate\
    \ is replaced with a high and low water mark and the\n   marking algorithm automatically\
    \ optimises how physical capacity is\n   shared, using the relative loads from\
    \ PCN and other traffic classes.\n   All the above processes require just three\
    \ extra counters associated\n   with each PCN queue: threshold-markings, excess-traffic-markings,\
    \ and\n   drops.  Every time a PCN-packet is marked or dropped, its size in\n\
    \   bytes should be added to the appropriate counter.  Then the\n   management\
    \ system can read the counters at any time and subtract a\n   previous reading\
    \ to establish the incremental volume of each type of\n   (pre-)congestion.  Readings\
    \ should be taken frequently so that\n   anomalous events (eg, re-routes) can\
    \ be distinguished from regular\n   fluctuating demand, if required.\n"
- title: 5.5.  Security Operations and Management
  contents:
  - "5.5.  Security Operations and Management\n   Security Operations and Management\
    \ is about using secure operational\n   practices as well as being able to track\
    \ security breaches or near-\n   misses at run-time.  PCN adds few specifics to\
    \ the general good\n   practice required in this field [RFC4778].  The correct\
    \ functions of\n   the system should be monitored (Section 5.4) in multiple independent\n\
    \   ways and correlated to detect possible security breaches.  Persistent\n  \
    \ (pre-)congestion marking should raise an alarm (both on the node\n   doing the\
    \ marking and on the PCN-egress-node metering it).\n   Similarly, persistently\
    \ poor external QoS metrics (such as jitter or\n   mean opinion score) should\
    \ raise an alarm.  The following are\n   examples of symptoms that may be the\
    \ result of innocent faults,\n   rather than attacks; however, until diagnosed,\
    \ they should be logged\n   and should trigger a security alarm:\n   o  Anomalous\
    \ patterns of non-conforming incoming signals and packets\n      rejected at the\
    \ PCN-ingress-nodes (eg, packets already marked PCN-\n      capable or traffic\
    \ persistently starving token bucket policers).\n   o  PCN-capable packets arriving\
    \ at a PCN-egress-node with no\n      associated state for mapping them to a valid\
    \ ingress-egress-\n      aggregate.\n   o  A PCN-ingress-node receiving feedback\
    \ signals that are about the\n      pre-congestion level on a non-existent aggregate\
    \ or that are\n      inconsistent with other signals (eg, unexpected sequence\
    \ numbers,\n      inconsistent addressing, conflicting reports of the pre-congestion\n\
    \      level, etc.).\n   o  Pre-congestion marking arriving at a PCN-egress-node\
    \ with\n      (pre-)congestion markings focused on particular flows, rather than\n\
    \      randomly distributed throughout the aggregate.\n"
- title: 6.  Applicability of PCN
  contents:
  - '6.  Applicability of PCN

    '
- title: 6.1.  Benefits
  contents:
  - "6.1.  Benefits\n   The key benefits of the PCN mechanisms are that they are simple,\n\
    \   scalable, and robust, because:\n   o  Per-flow state is only required at the\
    \ PCN-ingress-nodes\n      (\"stateless core\").  This is required for policing\
    \ purposes (to\n      prevent non-admitted PCN-traffic from entering the PCN-domain)\
    \ and\n      so on.  It is not generally required that other network entities\n\
    \      are aware of individual flows (although they may be in particular\n   \
    \   deployment scenarios).\n   o  Admission control is resilient: with PCN, QoS\
    \ is decoupled from\n      the routing system.  Hence, in general, admitted flows\
    \ can survive\n      capacity, routing, or topology changes without additional\n\
    \      signalling.  The PCN-admissible-rate on each link can be chosen to\n  \
    \    be small enough that admitted traffic can still be carried after a\n    \
    \  re-routing in most failure cases [Menth09-1].  This is an\n      important\
    \ feature, as QoS violations in core networks due to link\n      failures are\
    \ more likely than QoS violations due to increased\n      traffic volume [Iyer03].\n\
    \   o  The PCN-metering behaviours only operate on the overall PCN-\n      traffic\
    \ on the link, not per flow.\n   o  The information of these measurements is signalled\
    \ to the PCN-\n      egress-nodes by the PCN-marks in the packet headers, ie,\
    \ \"in-\n      band\".  No additional signalling protocol is required for\n  \
    \    transporting the PCN-marks.  Therefore, no secure binding is\n      required\
    \ between data packets and separate congestion messages.\n   o  The PCN-egress-nodes\
    \ make separate measurements, operating on the\n      aggregate PCN-traffic from\
    \ each PCN-ingress-node, ie, not per\n      flow.  Similarly, signalling by the\
    \ PCN-egress-node of PCN-\n      feedback-information (which is used for flow\
    \ admission and\n      termination decisions) is at the granularity of the ingress-\n\
    \      egress-aggregate.  An alternative approach is that the PCN-egress-\n  \
    \    nodes monitor the PCN-traffic and signal PCN-feedback-information\n     \
    \ (which is used for flow admission and termination decisions) at\n      the granularity\
    \ of one (or a few) PCN-marks.\n   o  The admitted PCN-load is controlled dynamically.\
    \  Therefore, it\n      adapts as the traffic matrix changes.  It also adapts\
    \ if the\n      network topology changes (eg, after a link failure).  Hence, an\n\
    \      operator can be less conservative when deploying network capacity\n   \
    \   and less accurate in their prediction of the PCN-traffic matrix.\n   o  The\
    \ termination mechanism complements admission control.  It\n      allows the network\
    \ to recover from sudden unexpected surges of\n      PCN-traffic on some links,\
    \ thus restoring QoS to the remaining\n      flows.  Such scenarios are expected\
    \ to be rare but not impossible.\n      They can be caused by large network failures\
    \ that redirect lots of\n      admitted PCN-traffic to other links or by the malfunction\
    \ of\n      measurement-based admission control in the presence of admitted\n\
    \      flows that send for a while with an atypically low rate and then\n    \
    \  increase their rates in a correlated way.\n   o  Flow termination can also\
    \ enable an operator to be less\n      conservative when deploying network capacity.\
    \  It is an\n      alternative to running links at low utilisation in order to\n\
    \      protect against link or node failures.  This is especially the\n      case\
    \ with SRLGs (shared risk link groups), which are links that\n      share a resource,\
    \ such as a fibre, whose failure affects all links\n      in that group [RFC4216]).\
    \  Fully protecting traffic against a\n      single SRLG failure requires low\
    \ utilisation (~10%) of the link\n      bandwidth on some links before failure\
    \ [Charny08].\n   o  The PCN-supportable-rate may be set below the maximum rate\
    \ that\n      PCN-traffic can be transmitted on a link in order to trigger the\n\
    \      termination of some PCN-flows before loss (or excessive delay) of\n   \
    \   PCN-packets occurs, or to keep the maximum PCN-load on a link\n      below\
    \ a level configured by the operator.\n   o  Provisioning of the network is decoupled\
    \ from the process of\n      adding new customers.  By contrast, with the Diffserv\
    \ architecture\n      [RFC2475], operators rely on subscription-time Service Level\n\
    \      Agreements, which statically define the parameters of the traffic\n   \
    \   that will be accepted from a customer.  This way, the operator has\n     \
    \ to verify that provision is sufficient each time a new customer is\n      added\
    \ to check that the Service Level Agreement can be fulfilled.\n      A PCN-domain\
    \ doesn't need such traffic conditioning.\n"
- title: 6.2.  Deployment Scenarios
  contents:
  - "6.2.  Deployment Scenarios\n   Operators of networks will want to use the PCN\
    \ mechanisms in various\n   arrangements depending, for instance, on how they\
    \ are performing\n   admission control outside the PCN-domain (users after all\
    \ are\n   concerned about QoS end-to-end), what their particular goals and\n \
    \  assumptions are, how many PCN encoding states are available, and so\n   on.\n\
    \   A PCN-domain may have three encoding states (or pedantically, an\n   operator\
    \ may choose to use up three encoding states for PCN): not\n   PCN-marked, threshold-marked,\
    \ and excess-traffic-marked.  This way,\n   both PCN admission control and flow\
    \ termination can be supported.  As\n   illustrated in Figure 1, admission control\
    \ accepts new flows until\n   the PCN-traffic rate on the bottleneck link rises\
    \ above the PCN-\n   threshold-rate, whilst, if necessary, the flow termination\
    \ mechanism\n   terminates flows down to the PCN-excess-rate on the bottleneck\
    \ link.\n   On the other hand, a PCN-domain may have two encoding states (as in\n\
    \   [Moncaster09-1]) (or pedantically, an operator may choose to use up\n   two\
    \ encoding states for PCN): not PCN-marked and PCN-marked.  This\n   way, there\
    \ are three possibilities, as discussed in the following\n   paragraphs (see also\
    \ Section 3.3).\n   First, an operator could just use PCN's admission control,\
    \ solving\n   heavy congestion (caused by re-routing) by \"just waiting\" -- as\n\
    \   sessions end, PCN-traffic naturally reduces; meanwhile, the admission\n  \
    \ control mechanism will prevent admission of new flows that use the\n   affected\
    \ links.  So, the PCN-domain will naturally return to normal\n   operation, but\
    \ with reduced capacity.  The drawback of this approach\n   would be that, until\
    \ sufficient sessions have ended to relieve the\n   congestion, all PCN-flows\
    \ as well as lower-priority services will be\n   adversely affected.\n   Second,\
    \ an operator could just rely on statically provisioned\n   capacity per PCN-ingress-node\
    \ (regardless of the PCN-egress-node of a\n   flow) for admission control, as\
    \ is typical in the hose model of the\n   Diffserv architecture [Kumar01].  Such\
    \ traffic-conditioning\n   agreements can lead to focused overload: many flows\
    \ happen to focus\n   on a particular link and then all flows through the congested\
    \ link\n   fail catastrophically.  PCN's flow termination mechanism could then\n\
    \   be used to counteract such a problem.\n   Third, both admission control and\
    \ flow termination can be triggered\n   from the single type of PCN-marking; the\
    \ main downside here is that\n   admission control is less accurate [Charny07-2].\
    \  This possibility is\n   illustrated in Figure 3.\n   Within the PCN-domain,\
    \ there is some flexibility about how the\n   decision-making functionality is\
    \ distributed.  These possibilities\n   are outlined in Section 4.4 and are also\
    \ discussed elsewhere, such as\n   in [Menth09-2].\n   The flow admission and\
    \ termination decisions need to be enforced\n   through per-flow policing by the\
    \ PCN-ingress-nodes.  If there are\n   several PCN-domains on the end-to-end path,\
    \ then each needs to police\n   at its PCN-ingress-nodes.  One exception is if\
    \ the operator runs both\n   the access network (not a PCN-domain) and the core\
    \ network (a PCN-\n   domain); per-flow policing could be devolved to the access\
    \ network\n   and not be done at the PCN-ingress-node.  Note that, to aid\n  \
    \ readability, the rest of this document assumes that policing is done\n   by\
    \ the PCN-ingress-nodes.\n   PCN admission control has to fit with the overall\
    \ approach to\n   admission control.  For instance, [Briscoe06] describes the\
    \ case\n   where RSVP signalling runs end-to-end.  The PCN-domain is a single\n\
    \   RSVP hop, ie, only the PCN-boundary-nodes process RSVP messages, with\n  \
    \ RSVP messages processed on each hop outside the PCN-domain, as in\n   IntServ\
    \ over Diffserv [RFC2998].  It would also be possible for the\n   RSVP signalling\
    \ to be originated and/or terminated by proxies, with\n   application-layer signalling\
    \ between the end user and the proxy (eg,\n   SIP signalling with a home hub).\
    \  A similar example would use NSIS\n   (Next Steps in Signalling) [RFC3726] instead\
    \ of RSVP.\n   It is possible that a user wants its inelastic traffic to use the\
    \ PCN\n   mechanisms but also react to ECN markings outside the PCN-domain\n \
    \  [Sarker08].  Two possible ways to do this are to tunnel all PCN-\n   packets\
    \ across the PCN-domain, so that the ECN marks are carried\n   transparently across\
    \ the PCN-domain, or to use an encoding like\n   [Moncaster09-2].  Tunnelling\
    \ is discussed further in Section 4.7.\n   Some further possible deployment models\
    \ are outlined in the Appendix.\n"
- title: 6.3.  Assumptions and Constraints on Scope
  contents:
  - "6.3.  Assumptions and Constraints on Scope\n   The scope of this document is\
    \ restricted by the following\n   assumptions:\n   1.  These components are deployed\
    \ in a single Diffserv domain, within\n       which all PCN-nodes are PCN-enabled\
    \ and are trusted for truthful\n       PCN-marking and transport.\n   2.  All\
    \ flows handled by these mechanisms are inelastic and\n       constrained to a\
    \ known peak rate through policing or shaping.\n   3.  The number of PCN-flows\
    \ across any potential bottleneck link is\n       sufficiently large that stateless,\
    \ statistical mechanisms can be\n       effective.  To put it another way, the\
    \ aggregate bit rate of PCN-\n       traffic across any potential bottleneck link\
    \ needs to be\n       sufficiently large, relative to the maximum additional bit\
    \ rate\n       added by one flow.  This is the basic assumption of measurement-\n\
    \       based admission control.\n   4.  PCN-flows may have different precedence,\
    \ but the applicability of\n       the PCN mechanisms for emergency use (911,\
    \ GETS (Government\n       Telecommunications Service), WPS (Wireless Priority\
    \ Service),\n       MLPP (Multilevel Precedence and Premption), etc.) is out of\n\
    \       scope.\n"
- title: '6.3.1.  Assumption 1: Trust and Support of PCN - Controlled Environment'
  contents:
  - "6.3.1.  Assumption 1: Trust and Support of PCN - Controlled Environment\n   It\
    \ is assumed that the PCN-domain is a controlled environment, ie,\n   all the\
    \ nodes in a PCN-domain run PCN and are trusted.  There are\n   several reasons\
    \ for this assumption:\n   o  The PCN-domain has to be encircled by a ring of\
    \ PCN-boundary-\n      nodes; otherwise, traffic could enter a PCN-BA without\
    \ being\n      subject to admission control, which would potentially degrade the\n\
    \      QoS of existing PCN-flows.\n   o  Similarly, a PCN-boundary-node has to\
    \ trust that all the PCN-nodes\n      mark PCN-traffic consistently.  A node not\
    \ performing PCN-marking\n      wouldn't be able to send an alert when it suffered\
    \ pre-congestion,\n      which potentially would lead to too many PCN-flows being\
    \ admitted\n      (or too few being terminated).  Worse, a rogue node could perform\n\
    \      various attacks, as discussed in Section 7.\n   One way of assuring the\
    \ above two points are in effect is to have the\n   entire PCN-domain run by a\
    \ single operator.  Another way is to have\n   several operators that trust each\
    \ other in their handling of PCN-\n   traffic.\n   Note: All PCN-nodes need to\
    \ be trustworthy.  However, if it is known\n   that an interface cannot become\
    \ pre-congested, then it is not\n   strictly necessary for it to be capable of\
    \ PCN-marking, but this must\n   be known even in unusual circumstances, eg, after\
    \ the failure of some\n   links.\n"
- title: '6.3.2.  Assumption 2: Real-Time Applications'
  contents:
  - "6.3.2.  Assumption 2: Real-Time Applications\n   It is assumed that any variation\
    \ of source bit rate is independent of\n   the level of pre-congestion.  We assume\
    \ that PCN-packets come from\n   real-time applications generating inelastic traffic,\
    \ ie, sending\n   packets at the rate the codec produces them, regardless of the\n\
    \   availability of capacity [RFC4594].  Examples of such real-time\n   applications\
    \ include voice and video requiring low delay, jitter, and\n   packet loss, the\
    \ Controlled Load Service [RFC2211], and the Telephony\n   service class [RFC4594].\
    \  This assumption is to help focus the effort\n   where it looks like PCN would\
    \ be most useful, ie, the sorts of\n   applications where per-flow QoS is a known\
    \ requirement.  In other\n   words, we focus on PCN providing a benefit to inelastic\
    \ traffic (PCN\n   may or may not provide a benefit to other types of traffic).\n\
    \   As a consequence, it is assumed that PCN-metering and PCN-marking is\n   being\
    \ applied to traffic scheduled with an expedited forwarding per-\n   hop behaviour\
    \ [RFC3246] or with a per-hop behaviour with similar\n   characteristics.\n"
- title: '6.3.3.  Assumption 3: Many Flows and Additional Load'
  contents:
  - "6.3.3.  Assumption 3: Many Flows and Additional Load\n   It is assumed that there\
    \ are many PCN-flows on any bottleneck link in\n   the PCN-domain (or, to put\
    \ it another way, the aggregate bit rate of\n   PCN-traffic across any potential\
    \ bottleneck link is sufficiently\n   large, relative to the maximum additional\
    \ bit rate added by one PCN-\n   flow).  Measurement-based admission control assumes\
    \ that the present\n   is a reasonable prediction of the future: the network conditions\
    \ are\n   measured at the time of a new flow request, but the actual network\n\
    \   performance must be acceptable during the call some time later.  One\n   issue\
    \ is that if there are only a few variable rate flows, then the\n   aggregate\
    \ traffic level may vary a lot, perhaps enough to cause some\n   packets to get\
    \ dropped.  If there are many flows, then the aggregate\n   traffic level should\
    \ be statistically smoothed.  How many flows is\n   enough depends on a number\
    \ of factors, such as the variation in each\n   flow's rate, the total rate of\
    \ PCN-traffic, and the size of the\n   \"safety margin\" between the traffic level\
    \ at which we start\n   admission-marking and at which packets are dropped or\
    \ significantly\n   delayed.\n   No explicit assumptions are made about how many\
    \ PCN-flows are in each\n   ingress-egress-aggregate.  Performance-evaluation\
    \ work may clarify\n   whether it is necessary to make any additional assumptions\
    \ on\n   aggregation at the ingress-egress-aggregate level.\n"
- title: '6.3.4.  Assumption 4: Emergency Use Out of Scope'
  contents:
  - "6.3.4.  Assumption 4: Emergency Use Out of Scope\n   PCN-flows may have different\
    \ precedence, but the applicability of the\n   PCN mechanisms for emergency use\
    \ (911, GETS, WPS, MLPP, etc.) is out\n   of scope for this document.\n"
- title: 6.4.  Challenges
  contents:
  - "6.4.  Challenges\n   Prior work on PCN and similar mechanisms has led to a number\
    \ of\n   considerations about PCN's design goals (things PCN should be good\n\
    \   at) and some issues that have been hard to solve in a fully\n   satisfactory\
    \ manner.  Taken as a whole, PCN represents a list of\n   trade-offs (it is unlikely\
    \ that they can all be 100% achieved) and\n   perhaps a list of evaluation criteria\
    \ to help an operator (or the\n   IETF) decide between options.\n   The following\
    \ are open issues.  They are mainly taken from\n   [Briscoe06], which also describes\
    \ some possible solutions.  Note that\n   some may be considered unimportant in\
    \ general or in specific\n   deployment scenarios, or by some operators.\n   Note:\
    \ Potential solutions are out of scope for this document.\n   o  ECMP (Equal Cost\
    \ Multi-Path) Routing: The level of pre-congestion\n      is measured on a specific\
    \ ingress-egress-aggregate.  However, if\n      the PCN-domain runs ECMP, then\
    \ traffic on this ingress-egress-\n      aggregate may follow several different\
    \ paths -- some of the paths\n      could be pre-congested whilst others are not.\
    \  There are three\n      potential problems:\n      1.  over-admission: a new\
    \ flow is admitted (because the pre-\n          congestion level measured by the\
    \ PCN-egress-node is\n          sufficiently diluted by unmarked packets from\
    \ non-congested\n          paths that a new flow is admitted), but its packets\
    \ travel\n          through a pre-congested PCN-node.\n      2.  under-admission:\
    \ a new flow is blocked (because the pre-\n          congestion level measured\
    \ by the PCN-egress-node is\n          sufficiently increased by PCN-marked packets\
    \ from pre-\n          congested paths that a new flow is blocked), but its packets\n\
    \          travel along an uncongested path.\n      3.  ineffective termination:\
    \ a flow is terminated but its path\n          doesn't travel through the (pre-)congested\
    \ router(s).  Since\n          flow termination is a \"last resort\", which protects\
    \ the\n          network should over-admission occur, this problem is probably\n\
    \          more important to solve than the other two.\n   o  ECMP and Signalling:\
    \ It is possible that, in a PCN-domain running\n      ECMP, the signalling packets\
    \ (eg, RSVP, NSIS) follow a different\n      path than the data packets, which\
    \ could matter if the signalling\n      packets are used as probes.  Whether this\
    \ is an issue depends on\n      which fields the ECMP algorithm uses; if the ECMP\
    \ algorithm is\n      restricted to the source and destination IP addresses, then\
    \ it\n      will not be an issue.  ECMP and signalling interactions are a\n  \
    \    specific instance of a general issue for non-traditional routing\n      combined\
    \ with resource management along a path [Hancock02].\n   o  Tunnelling: There\
    \ are scenarios where tunnelling makes it\n      difficult to determine the path\
    \ in the PCN-domain.  The problem,\n      its impact, and the potential solutions\
    \ are similar to those for\n      ECMP.\n   o  Scenarios with only one tunnel\
    \ endpoint in the PCN-domain: Such\n      scenarios may make it harder for the\
    \ PCN-egress-node to gather\n      from the signalling messages (eg, RSVP, NSIS)\
    \ the identity of the\n      PCN-ingress-node.\n   o  Bi-Directional Sessions:\
    \ Many applications have bi-directional\n      sessions -- hence, there are two\
    \ microflows that should be\n      admitted (or terminated) as a pair -- for instance,\
    \ a bi-\n      directional voice call only makes sense if microflows in both\n\
    \      directions are admitted.  However, the PCN mechanisms concern\n      admission\
    \ and termination of a single flow, and coordination of\n      the decision for\
    \ both flows is a matter for the signalling\n      protocol and out of scope for\
    \ PCN.  One possible example would use\n      SIP pre-conditions.  However, there\
    \ are others.\n   o  Global Coordination: PCN makes its admission decision based\
    \ on\n      PCN-markings on a particular ingress-egress-aggregate.  Decisions\n\
    \      about flows through a different ingress-egress-aggregate are made\n   \
    \   independently.  However, one can imagine network topologies and\n      traffic\
    \ matrices where, from a global perspective, it would be\n      better to make\
    \ a coordinated decision across all the ingress-\n      egress-aggregates for\
    \ the whole PCN-domain.  For example, to block\n      (or even terminate) flows\
    \ on one ingress-egress-aggregate so that\n      more important flows through\
    \ a different ingress-egress-aggregate\n      could be admitted.  The problem\
    \ may well be relatively\n      insignificant.\n   o  Aggregate Traffic Characteristics:\
    \ Even when the number of flows\n      is stable, the traffic level through the\
    \ PCN-domain will vary\n      because the sources vary their traffic rates.  PCN\
    \ works best when\n      there is not too much variability in the total traffic\
    \ level at a\n      PCN-node's interface (ie, in the aggregate traffic from all\n\
    \      sources).  Too much variation means that a node may (at one\n      moment)\
    \ not be doing any PCN-marking and then (at another moment)\n      drop packets\
    \ because it is overloaded.  This makes it hard to tune\n      the admission control\
    \ scheme to stop admitting new flows at the\n      right time.  Therefore, the\
    \ problem is more likely with fewer,\n      burstier flows.\n   o  Flash crowds\
    \ and Speed of Reaction: PCN is a measurement-based\n      mechanism and so there\
    \ is an inherent delay between packet marking\n      by PCN-interior-nodes and\
    \ any admission control reaction at PCN-\n      boundary-nodes.  For example,\
    \ if a big burst of admission requests\n      potentially occurs in a very short\
    \ space of time (eg, prompted by\n      a televote), they could all get admitted\
    \ before enough PCN-marks\n      are seen to block new flows.  In other words,\
    \ any additional load\n      offered within the reaction time of the mechanism\
    \ must not move\n      the PCN-domain directly from a no congestion state to overload.\n\
    \      This \"vulnerability period\" may have an impact at the signalling\n  \
    \    level, for instance, QoS requests should be rate-limited to bound\n     \
    \ the number of requests able to arrive within the vulnerability\n      period.\n\
    \   o  Silent at Start: After a successful admission request, the source\n   \
    \   may wait some time before sending data (eg, waiting for the called\n     \
    \ party to answer).  Then the risk is that, in some circumstances,\n      PCN's\
    \ measurements underestimate what the pre-congestion level\n      will be when\
    \ the source does start sending data.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security considerations essentially come from\
    \ the Trust Assumption\n   Section 6.3.1, ie, that all PCN-nodes are PCN-enabled\
    \ and are trusted\n   for truthful PCN-metering and PCN-marking.  PCN splits functionality\n\
    \   between PCN-interior-nodes and PCN-boundary-nodes, and the security\n   considerations\
    \ are somewhat different for each, mainly because PCN-\n   boundary-nodes are\
    \ flow-aware and PCN-interior-nodes are not.\n   o  Because PCN-boundary-nodes\
    \ are flow-aware, they are trusted to use\n      that awareness correctly.  The\
    \ degree of trust required depends on\n      the kinds of decisions they have\
    \ to make and the kinds of\n      information they need to make them.  There is\
    \ nothing specific to\n      PCN.\n   o  The PCN-ingress-nodes police packets\
    \ to ensure a PCN-flow sticks\n      within its agreed limit, and to ensure that\
    \ only PCN-flows that\n      have been admitted contribute PCN-traffic into the\
    \ PCN-domain.\n      The policer must drop (or perhaps downgrade to a different\
    \ DSCP)\n      any PCN-packets received that are outside this remit.  This is\n\
    \      similar to the existing IntServ behaviour.  Between them, the PCN-\n  \
    \    boundary-nodes must encircle the PCN-domain; otherwise, PCN-\n      packets\
    \ could enter the PCN-domain without being subject to\n      admission control,\
    \ which would potentially destroy the QoS of\n      existing flows.\n   o  PCN-interior-nodes\
    \ are not flow-aware.  This prevents some\n      security attacks where an attacker\
    \ targets specific flows in the\n      data plane -- for instance, for DoS or\
    \ eavesdropping.\n   o  The PCN-boundary-nodes rely on correct PCN-marking by\
    \ the PCN-\n      interior-nodes.  For instance, a rogue PCN-interior-node could\n\
    \      PCN-mark all packets so that no flows were admitted.  Another\n      possibility\
    \ is that it doesn't PCN-mark any packets, even when it\n      is pre-congested.\
    \  More subtly, the rogue PCN-interior-node could\n      perform these attacks\
    \ selectively on particular flows, or it could\n      PCN-mark the correct fraction\
    \ overall but carefully choose which\n      flows it marked.\n   o  The PCN-boundary-nodes\
    \ should be able to deal with DoS attacks and\n      state exhaustion attacks\
    \ based on fast changes in per-flow\n      signalling.\n   o  The signalling between\
    \ the PCN-boundary-nodes must be protected\n      from attacks.  For example,\
    \ the recipient needs to validate that\n      the message is indeed from the node\
    \ that claims to have sent it.\n      Possible measures include digest authentication\
    \ and protection\n      against replay and man-in-the-middle attacks.  For the\
    \ RSVP\n      protocol specifically, hop-by-hop authentication is in [RFC2747],\n\
    \      and [Behringer09] may also be useful.\n   Operational security advice is\
    \ given in Section 5.5.\n"
- title: 8.  Conclusions
  contents:
  - "8.  Conclusions\n   This document describes a general architecture for flow admission\
    \ and\n   termination based on pre-congestion information, in order to protect\n\
    \   the quality of service of established, inelastic flows within a\n   single\
    \ Diffserv domain.  The main topic is the functional\n   architecture.  This document\
    \ also mentions other topics like the\n   assumptions and open issues associated\
    \ with the PCN architecture.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   This document is a revised version of an earlier individual\
    \ working\n   draft authored by: P. Eardley, J. Babiarz, K. Chan, A. Charny, R.\n\
    \   Geib, G. Karagiannis, M. Menth, and T. Tsou.  They are therefore\n   contributors\
    \ to this document.\n   Thanks to those who have made comments on this document:\
    \ Lachlan\n   Andrew, Joe Babiarz, Fred Baker, David Black, Steven Blake, Ron\n\
    \   Bonica, Scott Bradner, Bob Briscoe, Ross Callon, Jason Canon, Ken\n   Carlberg,\
    \ Anna Charny, Joachim Charzinski, Andras Csaszar, Francis\n   Dupont, Lars Eggert,\
    \ Pasi Eronen, Adrian Farrel, Ruediger Geib, Wei\n   Gengyu, Robert Hancock, Fortune\
    \ Huang, Christian Hublet, Cullen\n   Jennings, Ingemar Johansson, Georgios Karagiannis,\
    \ Hein Mekkes,\n   Michael Menth, Toby Moncaster, Dimitri Papadimitriou, Dan Romascanu,\n\
    \   Daisuke Satoh, Ben Strulo, Tom Taylor, Hannes Tschofenig, Tina Tsou,\n   David\
    \ Ward, Lars Westberg, Magnus Westerlund, and Delei Yu.  Thanks\n   to Bob Briscoe\
    \ who extensively revised the Operations and Management\n   section.\n   This\
    \ document is the result of discussions in the PCN WG and\n   forerunner activity\
    \ in the TSVWG.  A number of previous drafts were\n   presented to TSVWG; their\
    \ authors were: B. Briscoe, P. Eardley, D.\n   Songhurst, F. Le Faucheur, A. Charny,\
    \ J. Babiarz, K. Chan, S. Dudley,\n   G. Karagiannis, A. Bader, L. Westberg, J.\
    \ Zhang, V. Liatsos, X-G.\n   Liu, and A. Bhargava.\n   The admission control\
    \ mechanism evolved from the work led by Martin\n   Karsten on the Guaranteed\
    \ Stream Provider developed in the M3I\n   project [Karsten02] [M3I], which in\
    \ turn was based on the theoretical\n   work of Gibbens and Kelly [Gibbens99].\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2474]        Nichols, K., Blake, S., Baker,\
    \ F., and D. Black,\n                    \"Definition of the Differentiated Services\
    \ Field (DS\n                    Field) in the IPv4 and IPv6 Headers\", RFC 2474,\n\
    \                    December 1998.\n   [RFC3246]        Davie, B., Charny, A.,\
    \ Bennet, J., Benson, K., Le\n                    Boudec, J., Courtney, W., Davari,\
    \ S., Firoiu, V.,\n                    and D. Stiliadis, \"An Expedited Forwarding\
    \ PHB (Per-\n                    Hop Behavior)\", RFC 3246, March 2002.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC1633]        Braden, B., Clark, D., and\
    \ S. Shenker, \"Integrated\n                    Services in the Internet Architecture:\
    \ an Overview\",\n                    RFC 1633, June 1994.\n   [RFC2205]     \
    \   Braden, B., Zhang, L., Berson, S., Herzog, S., and\n                    S.\
    \ Jamin, \"Resource ReSerVation Protocol (RSVP) --\n                    Version\
    \ 1 Functional Specification\", RFC 2205,\n                    September 1997.\n\
    \   [RFC2211]        Wroclawski, J., \"Specification of the Controlled-\n    \
    \                Load Network Element Service\", RFC 2211,\n                 \
    \   September 1997.\n   [RFC2475]        Blake, S., Black, D., Carlson, M., Davies,\
    \ E., Wang,\n                    Z., and W. Weiss, \"An Architecture for\n   \
    \                 Differentiated Services\", RFC 2475, December 1998.\n   [RFC2747]\
    \        Baker, F., Lindell, B., and M. Talwar, \"RSVP\n                    Cryptographic\
    \ Authentication\", RFC 2747,\n                    January 2000.\n   [RFC2753]\
    \        Yavatkar, R., Pendarakis, D., and R. Guerin, \"A\n                  \
    \  Framework for Policy-based Admission Control\",\n                    RFC 2753,\
    \ January 2000.\n   [RFC2983]        Black, D., \"Differentiated Services and\
    \ Tunnels\",\n                    RFC 2983, October 2000.\n   [RFC2998]      \
    \  Bernet, Y., Ford, P., Yavatkar, R., Baker, F.,\n                    Zhang,\
    \ L., Speer, M., Braden, R., Davie, B.,\n                    Wroclawski, J., and\
    \ E. Felstaine, \"A Framework for\n                    Integrated Services Operation\
    \ over Diffserv\n                    Networks\", RFC 2998, November 2000.\n  \
    \ [RFC3168]        Ramakrishnan, K., Floyd, S., and D. Black, \"The\n        \
    \            Addition of Explicit Congestion Notification (ECN)\n            \
    \        to IP\", RFC 3168, September 2001.\n   [RFC3270]        Le Faucheur,\
    \ F., Wu, L., Davie, B., Davari, S.,\n                    Vaananen, P., Krishnan,\
    \ R., Cheval, P., and J.\n                    Heinanen, \"Multi-Protocol Label\
    \ Switching (MPLS)\n                    Support of Differentiated Services\",\
    \ RFC 3270,\n                    May 2002.\n   [RFC3393]        Demichelis, C.\
    \ and P. Chimento, \"IP Packet Delay\n                    Variation Metric for\
    \ IP Performance Metrics (IPPM)\",\n                    RFC 3393, November 2002.\n\
    \   [RFC3411]        Harrington, D., Presuhn, R., and B. Wijnen, \"An\n      \
    \              Architecture for Describing Simple Network\n                  \
    \  Management Protocol (SNMP) Management Frameworks\",\n                    STD\
    \ 62, RFC 3411, December 2002.\n   [RFC3726]        Brunner, M., \"Requirements\
    \ for Signaling Protocols\",\n                    RFC 3726, April 2004.\n   [RFC4216]\
    \        Zhang, R. and J. Vasseur, \"MPLS Inter-Autonomous\n                 \
    \   System (AS) Traffic Engineering (TE) Requirements\",\n                   \
    \ RFC 4216, November 2005.\n   [RFC4301]        Kent, S. and K. Seo, \"Security\
    \ Architecture for the\n                    Internet Protocol\", RFC 4301, December\
    \ 2005.\n   [RFC4303]        Kent, S., \"IP Encapsulating Security Payload (ESP)\"\
    ,\n                    RFC 4303, December 2005.\n   [RFC4594]        Babiarz,\
    \ J., Chan, K., and F. Baker, \"Configuration\n                    Guidelines\
    \ for DiffServ Service Classes\", RFC 4594,\n                    August 2006.\n\
    \   [RFC4656]        Shalunov, S., Teitelbaum, B., Karp, A., Boote, J.,\n    \
    \                and M. Zekauskas, \"A One-way Active Measurement\n          \
    \          Protocol (OWAMP)\", RFC 4656, September 2006.\n   [RFC4774]       \
    \ Floyd, S., \"Specifying Alternate Semantics for the\n                    Explicit\
    \ Congestion Notification (ECN) Field\",\n                    BCP 124, RFC 4774,\
    \ November 2006.\n   [RFC4778]        Kaeo, M., \"Operational Security Current\
    \ Practices in\n                    Internet Service Provider Environments\",\
    \ RFC 4778,\n                    January 2007.\n   [RFC5129]        Davie, B.,\
    \ Briscoe, B., and J. Tay, \"Explicit\n                    Congestion Marking\
    \ in MPLS\", RFC 5129, January 2008.\n   [RFC5462]        Andersson, L. and R.\
    \ Asati, \"Multiprotocol Label\n                    Switching (MPLS) Label Stack\
    \ Entry: \"EXP\" Field\n                    Renamed to \"Traffic Class\" Field\"\
    , RFC 5462,\n                    February 2009.\n   [P.800]          \"Methods\
    \ for subjective determination of\n                    transmission quality\"\
    , ITU-T Recommendation P.800,\n                    August 1996.\n   [Y.1541] \
    \        \"Network Performance Objectives for IP-based\n                    Services\"\
    , ITU-T Recommendation Y.1541,\n                    February 2006.\n   [Babiarz06]\
    \      Babiarz, J., Chan, K., Karagiannis, G., and P.\n                    Eardley,\
    \ \"SIP Controlled Admission and Preemption\",\n                    Work in Progress,\
    \ October 2006.\n   [Behringer09]    Behringer, M. and F. Le Faucheur, \"Applicability\
    \ of\n                    Keying Methods for RSVP Security\", Work in Progress,\n\
    \                    March 2009.\n   [Briscoe06]      Briscoe, B., Eardley, P.,\
    \ Songhurst, D., Le\n                    Faucheur, F., Charny, A., Babiarz, J.,\
    \ Chan, K.,\n                    Dudley, S., Karagiannis, G., Bader, A., and L.\n\
    \                    Westberg, \"An edge-to-edge Deployment Model for Pre-\n \
    \                   Congestion Notification: Admission Control over a\n      \
    \              Diffserv Region\", Work in Progress, October 2006.\n   [Briscoe08]\
    \      Briscoe, B., \"Emulating Border Flow Policing using\n                 \
    \   Re-PCN on Bulk Data\", Work in Progress,\n                    September 2008.\n\
    \   [Briscoe09]      Briscoe, B., \"Tunnelling of Explicit Congestion\n      \
    \              Notification\", Work in Progress, March 2009.\n   [Bryant08]  \
    \     Bryant, S., Davie, B., Martini, L., and E.  Rosen,\n                   \
    \ \"Pseudowire Congestion Control Framework\", Work\n                    in Progress,\
    \ May 2008.\n   [Charny07-1]     Charny, A., Babiarz, J., Menth, M., and X. Zhang,\n\
    \                    \"Comparison of Proposed PCN Approaches\", Work\n       \
    \             in Progress, November 2007.\n   [Charny07-2]     Charny, A., Zhang,\
    \ X., Le Faucheur, F., and V.\n                    Liatsos, \"Pre-Congestion Notification\
    \ Using Single\n                    Marking for Admission and Termination\", Work\n\
    \                    in Progress, November 2007.\n   [Charny07-3]     Charny,\
    \ A., \"Email to PCN WG mailing list\",\n                    November 2007, <http://www1.ietf.org/mail-archive/\n\
    \                    web/pcn/current/msg00871.html>.\n   [Charny08]       Charny,\
    \ A., \"Email to PCN WG mailing list\",\n                    March 2008, <http://www1.ietf.org/mail-archive/web/\n\
    \                    pcn/current/msg01359.html>.\n   [Eardley07]      Eardley,\
    \ P., \"Email to PCN WG mailing list\",\n                    October 2007, <http://www1.ietf.org/mail-archive/\n\
    \                    web/pcn/current/msg00831.html>.\n   [Eardley09]      Eardley,\
    \ P., \"Metering and marking behaviour of PCN-\n                    nodes\", Work\
    \ in Progress, May 2009.\n   [Gibbens99]      Gibbens, R. and F. Kelly, \"Distributed\
    \ connection\n                    acceptance control for a connectionless network\"\
    ,\n                    Proceedings International Teletraffic Congress\n      \
    \              (ITC16), Edinburgh, pp. 941-952, 1999.\n   [Hancock02]      Hancock,\
    \ R. and E. Hepworth, \"Slide 14 of 'NSIS: An\n                    Outline Framework\
    \ for QoS Signalling'\", May 2002, <h\n                    ttp://www-nrc.nokia.com/sua/nsis/interim/\n\
    \                    nsis-framework-outline.ppt>.\n   [Iyer03]         Iyer, S.,\
    \ Bhattacharyya, S., Taft, N., and C. Diot,\n                    \"An approach\
    \ to alleviate link overload as observed\n                    on an IP backbone\"\
    , IEEE INFOCOM, 2003,\n                    <http://www.ieee-infocom.org/2003/papers/10_04.pdf>.\n\
    \   [Karsten02]      Karsten, M. and J. Schmitt, \"Admission Control Based\n \
    \                   on Packet Marking and Feedback Signalling --\n           \
    \         Mechanisms, Implementation and Experiments\", TU-\n                \
    \    Darmstadt Technical Report TR-KOM-2002-03, May 2002,\n                  \
    \  <http://www.kom.e-technik.tu-darmstadt.de/\n                    publications/abstracts/KS02-5.html>.\n\
    \   [Kumar01]        Kumar, A., Rastogi, R., Silberschatz, A., and B.\n      \
    \              Yener, \"Algorithms for Provisioning Virtual Private\n        \
    \            Networks in the Hose Model\", Proceedings ACM SIGCOMM\n         \
    \           (ITC16), , 2001.\n   [Lefaucheur06]   Le Faucheur, F., Charny, A.,\
    \ Briscoe, B., Eardley,\n                    P., Babiarz, J., and K. Chan, \"\
    RSVP Extensions for\n                    Admission Control over Diffserv using\
    \ Pre-congestion\n                    Notification (PCN)\", Work in Progress,\
    \ June 2006.\n   [M3I]            \"M3I - Market Managed Multiservice Internet\"\
    ,\n                    <http://www.m3iproject.org/>.\n   [Menth08-1]      Menth,\
    \ M., Lehrieder, F., Eardley, P., Charny, A.,\n                    and J. Babiarz,\
    \ \"Edge-Assisted Marked Flow\n                    Termination\", Work in Progress,\
    \ February 2008.\n   [Menth08-2]      Menth, M., Babiarz, J., Moncaster, T., and\
    \ B.\n                    Briscoe, \"PCN Encoding for Packet-Specific Dual\n \
    \                   Marking (PSDM)\", Work in Progress, July 2008.\n   [Menth09-1]\
    \      Menth, M. and M. Hartmann, \"Threshold Configuration\n                \
    \    and Routing Optimization for PCN-Based Resilient\n                    Admission\
    \ Control\", Computer Networks, 2009,\n                    <http://dx.doi.org/10.1016/j.comnet.2009.01.013>.\n\
    \   [Menth09-2]      Menth, M., Lehrieder, F., Briscoe, B., Eardley, P.,\n   \
    \                 Moncaster, T., Babiarz, J., Chan, K., Charny, A.,\n        \
    \            Karagiannis, G., Zhang, X., Taylor, T., Satoh, D.,\n            \
    \        and R. Geib, \"A Survey of PCN-Based Admission\n                    Control\
    \ and Flow Termination\", IEEE\n                    Communications Surveys and\
    \ Tutorials, <http://\n                    www3.informatik.uni-wuerzburg.de/staff/menth/\n\
    \                    Publications/papers/Menth08-PCN-Overview.pdf>>.\n   [Moncaster09-1]\
    \  Moncaster, T., Briscoe, B., and M. Menth, \"Baseline\n                    Encoding\
    \ and Transport of Pre-Congestion\n                    Information\", Work in\
    \ Progress, May 2009.\n   [Moncaster09-2]  Moncaster, T., Briscoe, B., and M.\
    \ Menth, \"A PCN\n                    encoding using 2 DSCPs to provide 3 or more\
    \ states\",\n                    Work in Progress, April 2009.\n   [Sarker08]\
    \       Sarker, Z. and I. Johansson, \"Usecases and Benefits\n               \
    \     of end to end ECN support in PCN Domains\", Work\n                    in\
    \ Progress, November 2008.\n   [Songhurst06]    Songhurst, DJ., Eardley, P., Briscoe,\
    \ B., Di Cairano\n                    Gilfedder, C., and J. Tay, \"Guaranteed\
    \ QoS Synthesis\n                    for Admission Control with Shared Capacity\"\
    , BT\n                    Technical Report TR-CXR9-2006-001, Feburary 2006,\n\
    \                    <http://www.cs.ucl.ac.uk/staff/\n                    B.Briscoe/projects/ipe2eqos/gqs/papers/\n\
    \                    GQS_shared_tr.pdf>.\n   [Taylor09]       Charny, A., Huang,\
    \ F., Menth, M., and T. Taylor,\n                    \"PCN Boundary Node Behaviour\
    \ for the Controlled Load\n                    (CL) Mode of Operation\", Work\
    \ in Progress,\n                    March 2009.\n   [Tsou08]         Tsou, T.,\
    \ Huang, F., and T. Taylor, \"Applicability\n                    Statement for\
    \ the Use of Pre-Congestion Notification\n                    in a Resource-Controlled\
    \ Network\", Work in Progress,\n                    November 2008.\n   [Westberg08]\
    \     Westberg, L., Bhargava, A., Bader, A., Karagiannis,\n                  \
    \  G., and H. Mekkes, \"LC-PCN: The Load Control PCN\n                    Solution\"\
    , Work in Progress, November 2008.\n"
- title: Appendix A.  Possible Future Work Items
  contents:
  - "Appendix A.  Possible Future Work Items\n   This section mentions some topics\
    \ that are outside the PCN WG's\n   current charter but that have been mentioned\
    \ as areas of interest.\n   They might be work items for the PCN WG after a future\
    \ re-chartering,\n   some other IETF WG, another standards body, or an operator-specific\n\
    \   usage that is not standardised.\n   Note: It should be crystal clear that\
    \ this section discusses\n   possibilities only.\n   The first set of possibilities\
    \ relate to the restrictions described\n   in Section 6.3:\n   o  A single PCN-domain\
    \ encompasses several autonomous systems that do\n      not trust each other.\
    \  A possible solution is a mechanism like re-\n      PCN [Briscoe08].\n   o \
    \ Not all the nodes run PCN.  For example, the PCN-domain is a\n      multi-site\
    \ enterprise network.  The sites are connected by a VPN\n      tunnel; although\
    \ PCN doesn't operate inside the tunnel, the PCN\n      mechanisms still work\
    \ properly because of the good QoS on the\n      virtual link (the tunnel).  Another\
    \ example is that PCN is\n      deployed on the general Internet (ie, widely but\
    \ not universally\n      deployed).\n   o  Applying the PCN mechanisms to other\
    \ types of traffic, ie, beyond\n      inelastic traffic -- for instance, applying\
    \ the PCN mechanisms to\n      traffic scheduled with the Assured Forwarding per-hop\
    \ behaviour.\n      One example could be flow-rate adaptation by elastic applications\n\
    \      that adapt according to the pre-congestion information.\n   o  The aggregation\
    \ assumption doesn't hold, because the link capacity\n      is too low.  Measurement-based\
    \ admission control is less accurate,\n      with a greater risk of over-admission\
    \ for instance.\n   o  The applicability of PCN mechanisms for emergency use (911,\
    \ GETS,\n      WPS, MLPP, etc.).\n   Other possibilities include:\n   o  Probing.\
    \  This is discussed in Appendix A.1 below.\n   o  The PCN-domain extends to the\
    \ end users.  This scenario is\n      described in [Babiarz06].  The end users\
    \ need to be trusted to do\n      their own policing.  If there is sufficient\
    \ traffic, then the\n      aggregation assumption may hold.  A variant is that\
    \ the PCN-domain\n      extends out as far as the LAN edge switch.\n   o  Indicating\
    \ pre-congestion through signalling messages rather than\n      in-band (in the\
    \ form of PCN-marked packets).\n   o  The decision-making functionality is at\
    \ a centralised node rather\n      than at the PCN-boundary-nodes.  This requires\
    \ that the PCN-\n      egress-node signals PCN-feedback-information to the centralised\n\
    \      node, and that the centralised node signals to the PCN-ingress-\n     \
    \ node the decision about admission (or termination).  Such\n      possibility\
    \ may need the centralised node and the PCN-boundary-\n      nodes to be configured\
    \ with each other's addresses.  The\n      centralised case is described further\
    \ in [Tsou08].\n   o  Signalling extensions for specific protocols (eg, RSVP and\
    \ NSIS)\n      -- for example, the details of how the signalling protocol\n  \
    \    installs the flowspec at the PCN-ingress-node for an admitted PCN-\n    \
    \  flow, and how the signalling protocol carries the PCN-feedback-\n      information.\
    \  Perhaps also for other functions such as for coping\n      with failure of\
    \ a PCN-boundary-node ([Briscoe06] considers what\n      happens if RSVP is the\
    \ QoS signalling protocol) and for\n      establishing a tunnel across the PCN-domain\
    \ if it is necessary to\n      carry ECN marks transparently.\n   o  Policing\
    \ by the PCN-ingress-node may not be needed if the PCN-\n      domain can trust\
    \ that the upstream network has already policed the\n      traffic on its behalf.\n\
    \   o  PCN for Pseudowire.  PCN may be used as a congestion avoidance\n      mechanism\
    \ for edge-to-edge pseudowire emulations [Bryant08].\n   o  PCN for MPLS.  [RFC3270]\
    \ defines how to support the Diffserv\n      architecture in MPLS (Multiprotocol\
    \ Label Switching) networks.\n      [RFC5129] describes how to add PCN for admission\
    \ control of\n      microflows into a set of MPLS aggregates.  PCN-marking is\
    \ done in\n      MPLS's EXP field (which [RFC5462] re-names the Class of Service\n\
    \      (CoS) field).\n   o  PCN for Ethernet.  Similarly, it may be possible to\
    \ extend PCN\n      into Ethernet networks, where PCN-marking is done in the Ethernet\n\
    \      header.  Note: Specific consideration of this extension is outside\n  \
    \    of the IETF's remit.\n"
- title: A.1.  Probing
  contents:
  - 'A.1.  Probing

    '
- title: A.1.1.  Introduction
  contents:
  - "A.1.1.  Introduction\n   Probing is a potential mechanism to assist admission\
    \ control.\n   PCN's admission control, as described so far, is essentially a\n\
    \   reactive mechanism where the PCN-egress-node monitors the pre-\n   congestion\
    \ level for traffic from each PCN-ingress-node; if the level\n   rises, then it\
    \ blocks new flows on that ingress-egress-aggregate.\n   However, it's possible\
    \ that an ingress-egress-aggregate carries no\n   traffic, and so the PCN-egress-node\
    \ can't make an admission decision\n   using the usual method described earlier.\n\
    \   One approach is to be \"optimistic\" and simply admit the new flow.\n   However,\
    \ it's possible to envisage a scenario where the traffic\n   levels on other ingress-egress-aggregates\
    \ are already so high that\n   they're blocking new PCN-flows, and admitting a\
    \ new flow onto this\n   \"empty\" ingress-egress-aggregate adds extra traffic\
    \ onto a link that\n   is already pre-congested.  This may 'tip the balance' so\
    \ that PCN's\n   flow termination mechanism is activated or some packets are dropped.\n\
    \   This risk could be lessened by configuring, on each link, a\n   sufficient\
    \ 'safety margin' above the PCN-threshold-rate.\n   An alternative approach is\
    \ to make PCN a more proactive mechanism.\n   The PCN-ingress-node explicitly\
    \ determines, before admitting the\n   prospective new flow, whether the ingress-egress-aggregate\
    \ can\n   support it.  This can be seen as a \"pessimistic\" approach, in\n  \
    \ contrast to the \"optimism\" of the approach above.  It involves\n   probing:\
    \ a PCN-ingress-node generates and sends probe packets in\n   order to test the\
    \ pre-congestion level that the flow would\n   experience.\n   One possibility\
    \ is that a probe packet is just a dummy data packet,\n   generated by the PCN-ingress-node\
    \ and addressed to the PCN-egress-\n   node.\n"
- title: A.1.2.  Probing Functions
  contents:
  - "A.1.2.  Probing Functions\n   The probing functions are:\n   o  Make the decision\
    \ that probing is needed.  As described above,\n      this is when the ingress-egress-aggregate\
    \ (or the ECMP path -- see\n      Section 6.4) carries no PCN-traffic.  An alternative\
    \ is to always\n      probe, ie, probe before admitting any PCN-flow.\n   o  (if\
    \ required) Communicate the request that probing is needed; the\n      PCN-egress-node\
    \ signals to the PCN-ingress-node that probing is\n      needed.\n   o  (if required)\
    \ Generate probe traffic; the PCN-ingress-node\n      generates the probe traffic.\
    \  The appropriate number (or rate) of\n      probe packets will depend on the\
    \ PCN-metering algorithm; for\n      example, an excess-traffic-metering algorithm\
    \ triggers fewer PCN-\n      marks than a threshold-metering algorithm, and so\
    \ will need more\n      probe packets.\n   o  Forward probe packets; as far as\
    \ PCN-interior-nodes are concerned,\n      probe packets are handled the same\
    \ as (ordinary data) PCN-packets\n      in terms of routing, scheduling, and PCN-marking.\n\
    \   o  Consume probe packets; the PCN-egress-node consumes probe packets\n   \
    \   to ensure that they don't travel beyond the PCN-domain.\n"
- title: A.1.3.  Discussion of Rationale for Probing, Its Downsides and Open
  contents:
  - "A.1.3.  Discussion of Rationale for Probing, Its Downsides and Open\n       \
    \ Issues\n   It is an unresolved question whether probing is really needed, but\n\
    \   two viewpoints have been put forward as to why it is useful.  The\n   first\
    \ is perhaps the most obvious: there is no PCN-traffic on the\n   ingress-egress-aggregate.\
    \  The second assumes that multipath routing\n   (eg, ECMP) is running in the\
    \ PCN-domain.  We now consider each in\n   turn.\n   The first viewpoint assumes\
    \ the following:\n   o  There is no PCN-traffic on the ingress-egress-aggregate\
    \ (so a\n      normal admission decision cannot be made).\n   o  Simply admitting\
    \ the new flow has a significant risk of leading to\n      overload: packets dropped\
    \ or flows terminated.\n   On the former bullet, [Eardley07] suggests that, during\
    \ the future\n   busy hour of a national network with about 100 PCN-boundary-nodes,\n\
    \   there are likely to be significant numbers of aggregates with very\n   few\
    \ flows under nearly all circumstances.\n   The latter bullet could occur if new\
    \ flows start on many of the empty\n   ingress-egress-aggregates, which together\
    \ overload a link in the PCN-\n   domain.  To be a problem, this would probably\
    \ have to happen in a\n   short time period (flash crowd) because, after the reaction\
    \ time of\n   the system, other (non-empty) ingress-egress-aggregates that pass\n\
    \   through the link will measure pre-congestion and so block new flows.\n   Also,\
    \ flows naturally end anyway.\n   The downsides of probing for this viewpoint\
    \ are:\n   o  Probing adds delay to the admission control process.\n   o  Sufficient\
    \ probing traffic has to be generated to test the pre-\n      congestion level\
    \ of the ingress-egress-aggregate.  But the probing\n      traffic itself may\
    \ cause pre-congestion, causing other PCN-flows\n      to be blocked or even terminated\
    \ -- and, in the flash crowd\n      scenario, there will be probing on many ingress-egress-aggregates.\n\
    \   The second viewpoint applies in the case where there is multipath\n   routing\
    \ (eg, ECMP) in the PCN-domain.  Note that ECMP is often used\n   on core networks.\
    \  There are two possibilities:\n   (1)  If admission control is based on measurements\
    \ of the ingress-\n        egress-aggregate, then the viewpoint that probing is\
    \ useful\n        assumes:\n        *  There's a significant chance that the traffic\
    \ is unevenly\n           balanced across the ECMP paths and, hence, there's a\n\
    \           significant risk of admitting a flow that should be blocked\n    \
    \       (because it follows an ECMP path that is pre-congested) or of\n      \
    \     blocking a flow that should be admitted.\n        Note: [Charny07-3] suggests\
    \ unbalanced traffic is quite\n        possible, even with quite a large number\
    \ of flows on a PCN-link\n        (eg, 1000), when Assumption 3 (aggregation)\
    \ is likely to be\n        satisfied.\n   (2)  If admission control is based on\
    \ measurements of pre-congestion\n        on specific ECMP paths, then the viewpoint\
    \ that probing is\n        useful assumes:\n        *  There is no PCN-traffic\
    \ on the ECMP path on which to base an\n           admission decision.\n     \
    \   *  Simply admitting the new flow has a significant risk of\n           leading\
    \ to overload.\n        *  The PCN-egress-node can match a packet to an ECMP path.\n\
    \        Note: This is similar to the first viewpoint and so, similarly,\n   \
    \     could occur in a flash crowd if a new flow starts more or less\n       \
    \ simultaneously on many of the empty ECMP paths.  Because there\n        are\
    \ several ECMP paths between each pair of PCN-boundary-nodes,\n        it's presumably\
    \ more likely that an ECMP path is \"empty\" than an\n        ingress-egress-aggregate\
    \ is.  To constrain the number of ECMP\n        paths, a few tunnels could be\
    \ set up between each pair of PCN-\n        boundary-nodes.  Tunnelling also solves\
    \ the issue in the point\n        immediately above (which is otherwise hard to\
    \ solve because an\n        ECMP routing decision is made independently on each\
    \ node).\n   The downsides of probing for this viewpoint are:\n   o  Probing adds\
    \ delay to the admission control process.\n   o  Sufficient probing traffic has\
    \ to be generated to test the pre-\n      congestion level of the ECMP path. \
    \ But there's the risk that the\n      probing traffic itself may cause pre-congestion,\
    \ causing other\n      PCN-flows to be blocked or even terminated.\n   o  The\
    \ PCN-egress-node needs to consume the probe packets to ensure\n      they don't\
    \ travel beyond the PCN-domain, since they might confuse\n      the destination\
    \ end node.  This is non-trivial, since probe\n      packets are addressed to\
    \ the destination end node in order to test\n      the relevant ECMP path (ie,\
    \ they are not addressed to the PCN-\n      egress-node, unlike the first viewpoint\
    \ above).\n   The open issues associated with these viewpoints include:\n   o\
    \  What rate and pattern of probe packets does the PCN-ingress-node\n      need\
    \ to generate so that there's enough traffic to make the\n      admission decision?\n\
    \   o  What difficulty does the delay (whilst probing is done), and\n      possible\
    \ packet drops, cause applications?\n   o  Can the delay be alleviated by automatically\
    \ and periodically\n      probing on the ingress-egress-aggregate?  Or does this\
    \ add too\n      much overhead?\n   o  Are there other ways of dealing with the\
    \ flash crowd scenario?\n      For instance, by limiting the rate at which new\
    \ flows are\n      admitted, or perhaps by a PCN-egress-node blocking new flows\
    \ on\n      its empty ingress-egress-aggregates when its non-empty ones are\n\
    \      pre-congested.\n   o  (Second viewpoint only) How does the PCN-egress-node\
    \ disambiguate\n      probe packets from data packets (so it can consume the former)?\n\
    \      The PCN-egress-node must match the characteristic setting of\n      particular\
    \ bits in the probe packet's header or body, but these\n      bits must not be\
    \ used by any PCN-interior-node's ECMP algorithm.\n      In the general case,\
    \ this isn't possible, but it should be\n      possible for a typical ECMP algorithm\
    \ (which examines the source\n      and destination IP addresses and port numbers,\
    \ the protocol ID,\n      and the DSCP).\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Philip Eardley (editor)\n   BT\n   B54/77, Sirius House\
    \ Adastral Park Martlesham Heath\n   Ipswich, Suffolk  IP5 3RE\n   United Kingdom\n\
    \   EMail: philip.eardley@bt.com\n"
