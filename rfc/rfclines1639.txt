Abstract This paper describes a convention for specifying address families other than the default Internet address family in FTP commands and replies.
Introduction In the File Transfer Protocol
(STD 9, RFC 959), the PORT command argument <host port> specifies the data port to be used to establish a data connection for FTP (STD 9, RFC 959).
This argument is also used in the PASV reply to request the server DTP to listen on a data port other than its default data port.
This RFC specifies a method for assigning addresses other than 32 bit IPv4 addresses to data ports through the specification of a "long Port (LPRT)" command and "Long Passive (LPSV)
" reply, each having as its argument a <long  host port>, which allows for additional address families, variable length network addresses and variable length port numbers.
This is a general solution, applicable for all "next generation" IP alternatives, as well as for other network protocols than IP.
This revision also extends FTP to allow for its operation over transport interfaces other than TCP.
The PORT command of File Transfer Protocol allows users to specify an address other than the default data port for the transport connection over which data are transferred.
The PORT command syntax is: PORT <SP> <host port
The <host port> argument is the concatenation of a 32 bit internet <host address
and a 16 bit TCP <port address
This address information is broken into 8 bit fields and the value of each field is transmitted as a decimal number (in character string representation).
The fields are separated by commas.
A PORT command is thus of the general form "PORT h1,h2,h3,h4,p1,p2", where h1 is the high order 8 bits of the internet host address.
The <host port> argument is also used by the PASV reply, and in certain negative completion replies.
To accommodate larger network addresses anticipated for all IP "next generation" alternatives, and to accommodate FTP operation over network and transport protocols other than IP, new commands and reply codes are needed for FTP. 2.
The LPRT command allows users to specify a "long" address for the transport connection over which data are transferred.
The LPRT command syntax is:
The <long host port> argument is the concatenation of the following fields;  an 8 bit <address family> argument (af)
an 8 bit <host address length
> argument (hal)  a <host address
an 8 bit <port address length> (pal)  a <port address
The initial values assigned to the <address family> argument take the value of the version number of IP (see Assigned Numbers, STD 2, RFC 1340); values in the range of 0 15 decimal are thus reserved for IP and assigned by IANA.
Values in the range 16 255 are available for the IANA to assign to all other network layer protocols over which FTP may be operated.
Relevant assigned <address family> numbers for FOOBAR are:
The value of each field is broken into 8 bit fields and the value of each field is transmitted as an unsigned decimal number (in character string representation, note that negative numbers are explicitly not permitted).
The fields are separated by commas.
A LPRT command is thus of the general form LPRT af,hal,h1,h2,h3,h4...,pal
where h1 is the high order 8 bits of the internet host address, and p1 is the high order 8 bits of the port number (transport address).
The L(ONG) PASSIVE command requests the server DTP to listen on a data port other than its default data port and to wait for a connection rather than initiate one upon receipt of a transfer command.
The response to this command includes the address family, host address length indicator, host address, port address length, and port address of the listener process at the server.
The reply code and text for entering the passive mode using a long address is
228 (Interpretation according to FTP is: positive completion reply 2yz, connections x2z, passive mode entered using long address xy8).
Permanent Negative Completion Reply Codes
The negative completion reply codes that are associated with syntax errors in the PORT and PASV commands are appropriate for the LPRT and LPSV commands (500, 501).
An additional negative completion reply code is needed to distinguish the case where a host supports the LPRT or LPSV command, but does not support the address family specified.
(Note: it has been suggested that the families could also be represented by ASCII strings.)
An explicit address family argument in the LPRT command and LPSV reply allows the Internet community to experiment with a variety of "next generation IP" and other network layer protocol alternatives within a common FTP implementation framework.
(It also allows the use of a different address family on the command and data connections.)
An explicit length indicator for the host address is necessary because some of the IPNG alternatives make use of variable length addresses.
An explicit host address is necessary because FTP says it's necessary.
The decision to provide a length indicator for the port number is not as obvious, and certainly goes beyond the necessary condition of having to support TCP port numbers.
Currently, at least one IPng alternative (TP/IX) supports longer port addresses.
And given the increasingly "multi protocol" nature of the Internet, it seems reasonable that someone, somewhere, might wish to operate FTP operate over Appletalk, IPX, and OSI networks as well as TCP/IP networks.
(In theory, FTP should operate over  any  transport protocol that offers the same service as TCP.)
Since some of these transport protocols may offer transport selectors or port numbers that exceed 16 bits, a length indicator may be desirable.
If FTP must indeed be changed to accommodate larger network addresses, it may be prudent to determine at this time whether the same flexibility is useful or necessary with respect to transport addresses.
The mechanism defined here is simple, extensible, and meets both IPNG and multi protocol internet needs.
Security Considerations Security issues are not discussed in this memo.
