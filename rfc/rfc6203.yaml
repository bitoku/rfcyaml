- title: __initial_text__
  contents:
  - '                    IMAP4 Extension for Fuzzy Search

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes an IMAP protocol extension enabling a server\n\
    \   to perform searches with inexact matching and assigning relevancy\n   scores\
    \ for matched messages.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6203.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   When humans perform searches in IMAP clients, they typically\
    \ want to\n   see the most relevant search results first.  IMAP servers are able\
    \ to\n   do this in the most efficient way when they're free to internally\n \
    \  decide how searches should match messages.  This document describes a\n   new\
    \ SEARCH=FUZZY extension that provides such functionality.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   In examples, \"C:\" indicates lines\
    \ sent by a client that is connected\n   to a server.  \"S:\" indicates lines\
    \ sent by the server to the client.\n   The key words \"MUST\", \"MUST NOT\",\
    \ \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [KEYWORDS].\n"
- title: 3.  The FUZZY Search Key
  contents:
  - "3.  The FUZZY Search Key\n   The FUZZY search key takes another search key as\
    \ its argument.  The\n   server is allowed to perform all matching in an implementation-\n\
    \   defined manner for this search key, including ignoring the active\n   comparator\
    \ as defined by [RFC5255].  Typically, this would be used to\n   search for strings.\
    \  For example:\n      C: A1 SEARCH FUZZY (SUBJECT \"IMAP break\")\n      S: *\
    \ SEARCH 1 5 10\n      S: A1 OK Search completed.\n   Besides matching messages\
    \ with a subject of \"IMAP break\", the above\n   search may also match messages\
    \ with subjects \"broken IMAP\", \"IMAP is\n   broken\", or anything else the\
    \ server decides that might be a good\n   match.\n   This example does a fuzzy\
    \ SUBJECT search, but a non-fuzzy FROM\n   search:\n      C: A2 SEARCH FUZZY SUBJECT\
    \ work FROM user@example.com\n      S: * SEARCH 1 4\n      S: A2 OK Search completed.\n\
    \   How the server handles multiple separate FUZZY search keys is\n   implementation-defined.\n\
    \   Fuzzy search algorithms might change, or the results of the\n   algorithms\
    \ might be different from search to search, so that fuzzy\n   searches with the\
    \ same parameters might give different results for\n   1) the same user at different\
    \ times, 2) different users (searches\n   executed simultaneously), or 3) different\
    \ users (searches executed at\n   different times).  For example, a fuzzy search\
    \ might adapt to a\n   user's search habits in an attempt to give more relevant\
    \ results (in\n   a \"learning\" manner).  Such differences can also occur because\
    \ of\n   operational decisions, such as load balancing.  Clients asking for\n\
    \   \"fuzzy\" really are requesting search results in a not-necessarily-\n   deterministic\
    \ way and need to give the user appropriate warning about\n   that.\n"
- title: 4.  Relevancy Scores for Search Results
  contents:
  - "4.  Relevancy Scores for Search Results\n   Servers SHOULD assign a search relevancy\
    \ score for each matched\n   message when the FUZZY search key is given.  Relevancy\
    \ scores are\n   given in the range 1-100, where 100 is the highest relevancy.\
    \  The\n   relevancy scores SHOULD use the full 1-100 range, so that clients can\n\
    \   show them to users in a meaningful way, e.g., as a percentage value.\n   As\
    \ the name already indicates, relevancy scores specify how relevant\n   to the\
    \ search the matched message is.  It's not necessarily the same\n   as how precisely\
    \ the message matched.  For example, a message whose\n   subject fuzzily matches\
    \ the search string might get a higher\n   relevancy score than a message whose\
    \ body had the exact string in the\n   middle of a sentence.  When multiple search\
    \ keys are matched fuzzily,\n   how the relevancy score is calculated is server-dependent.\n\
    \   If the server also advertises the ESEARCH capability as defined by\n   [ESEARCH],\
    \ the relevancy scores can be retrieved using the new\n   RELEVANCY return option\
    \ for SEARCH:\n      C: B1 SEARCH RETURN (RELEVANCY ALL) FUZZY TEXT \"Helo\"\n\
    \      S: * ESEARCH (TAG \"B1\") ALL 1,5,10 RELEVANCY (4 99 42)\n      S: B1 OK\
    \ Search completed.\n   In the example above, the server would treat \"hello\"\
    , \"help\", and\n   other similar strings as fuzzily matching the misspelled \"\
    Helo\".\n   The RELEVANCY return option MUST NOT be used unless a FUZZY search\n\
    \   key is also given.  Note that SEARCH results aren't sorted by\n   relevancy;\
    \ SORT is needed for that.\n"
- title: 5.  Fuzzy Matching with Non-String Search Keys
  contents:
  - "5.  Fuzzy Matching with Non-String Search Keys\n   Fuzzy matching is not limited\
    \ to just string matching.  All search\n   keys SHOULD be matched fuzzily, although\
    \ exactly what that means for\n   different search keys is left for server implementations\
    \ to decide --\n   including deciding that fuzzy matching is meaningless for a\n\
    \   particular key, and falling back to exact matching.  Some suggestions\n  \
    \ are given below.\n   Dates:\n      A typical example could be when a user wants\
    \ to find a message\n      \"from Dave about a week ago\".  A client could perform\
    \ this search\n      using SEARCH FUZZY (FROM \"Dave\" SINCE 21-Jan-2009 BEFORE\n\
    \      24-Jan-2009).  The server could return messages outside the\n      specified\
    \ date range, but the further away the message is, the\n      lower the relevancy\
    \ score.\n   Sizes:\n      These should be handled similarly to dates.  If a user\
    \ wants to\n      search for \"about 1 MB attachments\", the client could do this\
    \ by\n      sending SEARCH FUZZY (LARGER 900000 SMALLER 1100000).  Again, the\n\
    \      further away the message size is from the specified range, the\n      lower\
    \ the relevancy score.\n   Flags:\n      If other search criteria match, the server\
    \ could return messages\n      that don't have the specified flags set, but with\
    \ lower relevancy\n      scores.  SEARCH SUBJECT \"xyz\" FUZZY ANSWERED, for example,\
    \ might\n      be useful if the user thinks the message he is looking for has\
    \ the\n      ANSWERED flag set, but he isn't sure.\n   Unique Identifiers (UIDs),\
    \ sequences, modification sequences: These\n   are examples of keys for which\
    \ exact matching probably makes sense.\n   Alternatively, a server might choose,\
    \ for instance, to expand a UID\n   range by 5% on each side.\n"
- title: 6.  Extensions to SORT and SEARCH
  contents:
  - "6.  Extensions to SORT and SEARCH\n   If the server also advertises the SORT\
    \ capability as defined by\n   [SORT], the results can be sorted by the new RELEVANCY\
    \ sort criteria:\n      C: C1 SORT (RELEVANCY) UTF-8 FUZZY SUBJECT \"Helo\"\n\
    \      S: * SORT 5 10 1\n      S: C1 OK Sort completed.\n   The message with the\
    \ highest score is returned first.  As with the\n   RELEVANCY return option, RELEVANCY\
    \ sort criteria MUST NOT be used\n   unless a FUZZY search key is also given.\n\
    \   If the server also advertises the ESORT capability as defined by\n   [CONTEXT],\
    \ the relevancy scores can be retrieved using the new\n   RELEVANCY return option\
    \ for SORT:\n      C: C2 SORT RETURN (RELEVANCY ALL) (RELEVANCY) UTF-8 FUZZY TEXT\n\
    \         \"Helo\"\n      S: * ESEARCH (TAG \"C2\") ALL 5,10,1 RELEVANCY (99 42\
    \ 4)\n      S: C2 OK Sort completed.\n   Furthermore, if the server advertises\
    \ the CONTEXT=SORT (or\n   CONTEXT=SEARCH) capability, then the client can limit\
    \ the number of\n   returned messages to a SORT (or a SEARCH) by using the PARTIAL\
    \ return\n   option.  For example, this returns the 10 most relevant messages:\n\
    \      C: C3 SORT RETURN (PARTIAL 1:10) (RELEVANCY) UTF-8 FUZZY TEXT\n       \
    \  \"World\"\n      S: * ESEARCH (TAG \"C3\") PARTIAL (1:10 42,9,34,13,15,4,2,7,23,82)\n\
    \      S: C3 OK Sort completed.\n"
- title: 7.  Formal Syntax
  contents:
  - "7.  Formal Syntax\n   The following syntax specification uses the augmented Backus-Naur\n\
    \   Form (BNF) as described in [ABNF].  It includes definitions from\n   [RFC3501],\
    \ [IMAP-ABNF], and [SORT].\n      capability         =/ \"SEARCH=FUZZY\"\n   \
    \   score              = 1*3DIGIT\n         ;; (1 <= n <= 100)\n      score-list\
    \         = \"(\" [score *(SP score)] \")\"\n      search-key         =/ \"FUZZY\"\
    \ SP search-key\n      search-return-data =/ \"RELEVANCY\" SP score-list\n   \
    \      ;; Conforms to <search-return-data>, from [IMAP-ABNF]\n      search-return-opt\
    \  =/ \"RELEVANCY\"\n         ;; Conforms to <search-return-opt>, from [IMAP-ABNF]\n\
    \      sort-key           =/ \"RELEVANCY\"\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Implementation of this extension might enable\
    \ denial-of-service\n   attacks against server resources.  Servers MAY limit the\
    \ resources\n   that a single search (or a single user) may use.  Additionally,\n\
    \   implementors should be aware of the following: Fuzzy search engines\n   are\
    \ often complex with non-obvious disk space, memory, and/or CPU\n   usage patterns.\
    \  Server implementors should at least test the fuzzy-\n   search behavior with\
    \ large messages that contain very long words\n   and/or unique random strings.\
    \  Also, very long search keys might\n   cause excessive memory or CPU usage.\n\
    \   Invalid input may also be problematic.  For example, if the search\n   engine\
    \ takes a UTF-8 stream as input, it might fail more or less\n   badly when illegal\
    \ UTF-8 sequences are fed to it from a message whose\n   character set was claimed\
    \ to be UTF-8.  This could be avoided by\n   validating all the input and, for\
    \ example, replacing illegal UTF-8\n   sequences with the Unicode replacement\
    \ character (U+FFFD).\n   Search relevancy rankings might be susceptible to \"\
    poisoning\" by\n   smart attackers using certain keywords or hidden markup (e.g.,\
    \ HTML)\n   in their messages to boost the rankings.  This can't be fully\n  \
    \ prevented by servers, so clients should prepare for it by at least\n   allowing\
    \ users to see all the search results, rather than hiding\n   results below a\
    \ certain score.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   IMAP4 capabilities are registered by publishing a\
    \ standards track or\n   IESG-approved experimental RFC.  The \"Internet Message\
    \ Access\n   Protocol (IMAP) 4 Capabilities Registry\" is available from\n   http://www.iana.org/.\n\
    \   This document defines the SEARCH=FUZZY IMAP capability.  IANA has\n   added\
    \ it to the registry.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   Alexey Melnikov, Zoltan Ordogh, Barry Leiba, Cyrus\
    \ Daboo, and Dave\n   Cridland have helped with this document.\n"
- title: 11.  Normative References
  contents:
  - "11.  Normative References\n   [ABNF]       Crocker, D., Ed. and P. Overell, \"\
    Augmented BNF for\n                Syntax Specifications: ABNF\", STD 68, RFC\
    \ 5234,\n                January 2008.\n   [CONTEXT]    Cridland, D. and C. King,\
    \ \"Contexts for IMAP4\",\n                RFC 5267, July 2008.\n   [ESEARCH]\
    \    Melnikov, A. and D. Cridland, \"IMAP4 Extension to SEARCH\n             \
    \   Command for Controlling What Kind of Information Is\n                Returned\"\
    , RFC 4731, November 2006.\n   [IMAP-ABNF]  Melnikov, A. and C. Daboo, \"Collected\
    \ Extensions to\n                IMAP4 ABNF\", RFC 4466, April 2006.\n   [KEYWORDS]\
    \   Bradner, S., \"Key words for use in RFCs to Indicate\n                Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3501]    Crispin, M., \"INTERNET\
    \ MESSAGE ACCESS PROTOCOL - VERSION\n                4rev1\", RFC 3501, March\
    \ 2003.\n   [RFC5255]    Newman, C., Gulbrandsen, A., and A. Melnikov, \"Internet\n\
    \                Message Access Protocol Internationalization\", RFC 5255,\n \
    \               June 2008.\n   [SORT]       Crispin, M. and K. Murchison, \"Internet\
    \ Message Access\n                Protocol - SORT and THREAD Extensions\", RFC\
    \ 5256,\n                June 2008.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Timo Sirainen\n   EMail: tss@iki.fi\n"
