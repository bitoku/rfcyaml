Abstract This document describes obsolete syntax which may be encountered by IMAP4 implementations which deal with older versions of the Internet Mail Access Protocol.
IMAP4 implementations MAY implement this syntax in order to maximize interoperability with older implementations.
This document repeats information from earlier documents, most notably RFC 1176 and RFC 1730.
Obsolete Commands and Fetch Data Items
The following commands are OBSOLETE.
It is NOT required to support any of these commands or fetch data items in new server implementations.
These commands are documented here for the benefit of implementors who may wish to support them for compatibility with old client implementations.
The section headings of these commands are intended to correspond with where they would be located in the main document if they were not obsoleted.
ALL.MAILBOXES command returns a subset of names from the complete set of all names available to the user.
It returns zero or more untagged MAILBOX replies.
The FIND MAILBOXES command returns a subset of names from the set of names that the user has declared as being "active" or "subscribed".
It returns zero or more untagged MAILBOX replies.
A002 OK FIND MAILBOXES completed 6.3.OBS.3.
The SUBSCRIBE MAILBOX command is identical in effect to the SUBSCRIBE command.
A server which implements this command must be able to distinguish between a SUBSCRIBE MAILBOX command and a SUBSCRIBE command with a mailbox name argument of "MAILBOX".
A002 OK SUBSCRIBE MAILBOX to #news.comp.mail.mime completed C: A003 SUBSCRIBE MAILBOX S:
A003 OK SUBSCRIBE to MAILBOX completed 6.3.OBS.4.
OK unsubscribe completed NO unsubscribe failure: can't unsubscribe that name BAD command unknown or arguments
The UNSUBSCRIBE MAILBOX command is identical in effect to the UNSUBSCRIBE command.
A server which implements this command must be able to distinguish between a UNSUBSCRIBE MAILBOX command and an UNSUBSCRIBE command with a mailbox name argument of "MAILBOX".
A002 OK UNSUBSCRIBE MAILBOX from #news.comp.mail.mime completed C: A003 UNSUBSCRIBE
OK partial completed NO partial error: can't fetch that data BAD command unknown or arguments invalid
The PARTIAL command is equivalent to the associated FETCH command, with the added functionality that only the specified number of octets, beginning at the specified starting octet, are returned.
Only a single message can be fetched at a time.
The first octet of a message, and hence the minimum for the starting octet, is octet 1.
The following FETCH items are valid data for PARTIAL: RFC822, RFC822.HEADER, RFC822.TEXT, BODY[<section>], as well as any .PEEK
Any partial fetch that attempts to read beyond the end of the text is truncated as appropriate.
If the starting octet is beyond the end of the text, an empty string is returned.
The data are returned with the FETCH response.
There is no indication of the range of the partial data in this response.
It is not possible to stream multiple PARTIAL commands of the same data item without processing and synchronizing at each step, since streamed commands may be executed out of order.
There is no requirement that partial fetches follow any sequence.
For example, if a partial fetch of octets 1 through 10000 breaks in an awkward place for BASE64 decoding, it is permitted to continue with a partial fetch of 9987 through 19987, etc.
The handling of the \Seen flag is the same as in the associated FETCH command.
A005 PARTIAL 4 RFC822 1 1024
S:   1 FETCH (RFC822 {1024
} S: Return Path: <gray@cac.washington.edu
The following FETCH data items are obsolete:
A body part number of 0 is the [RFC 822] header of the message.
BODY[0] is functionally equivalent to BODY[HEADER], differing in the syntax of the resulting untagged FETCH data (BODY[0] is returned).
Functionally equivalent to BODY.PEEK[HEADER.LINES <header list>], differing in the syntax of the resulting untagged FETCH data (RFC822.HEADER is returned).
Functionally equivalent to BODY.PEEK[HEADER.LINES.NOT <header list>], differing in the syntax of the resulting untagged FETCH data (RFC822.HEADER is returned).
RFC822.PEEK    Functionally equivalent to BODY.PEEK[], except for the syntax of the resulting untagged FETCH data (RFC822 is returned).
RFC822.TEXT.PEEK Functionally equivalent to BODY.PEEK[TEXT], except for the syntax of the resulting untagged FETCH data (RFC822.TEXT is returned).
The following responses are OBSOLETE.
Except as noted below, these responses MUST NOT be transmitted by new server implementations.
Client implementations SHOULD accept these responses.
The section headings of these responses are intended to correspond with where they would be located in the main document if they were not obsoleted.
The MAILBOX response MUST NOT be transmitted by server implementations except in response to the obsolete FIND MAILBOXES and FIND ALL.MAILBOXES commands.
Client implementations that do not use these commands MAY ignore this response.
It is documented here for the benefit of implementors who may wish to support it for compatibility with old client implementations.
This response occurs as a result of the FIND MAILBOXES and FIND ALL.MAILBOXES commands.
It returns a single name that matches the FIND specification.
There are no attributes or hierarchy delimiter.
The COPY response MUST NOT be transmitted by new server implementations.
Client implementations MUST ignore the COPY response.
It is documented here for the benefit of client implementors who may encounter this response from old server implementations.
In some experimental versions of this protocol, this response was returned in response to a COPY command to indicate on a per message basis that the message was copied successfully.
The STORE response MUST NOT be transmitted by new server implementations.
Client implementations MUST treat the STORE response as equivalent to the FETCH response.
It is documented here for the benefit of client implementors who may encounter this response from old server implementations.
In some experimental versions of this protocol, this response was returned instead of FETCH in response to a STORE command to report the new value of the flags.
S:   69 STORE (FLAGS (\Deleted))
Formal Syntax of Obsolete Commands and Responses
Each obsolete syntax rule that is suffixed with " old" is added to the corresponding name in the formal syntax.
For example, command auth old adds the FIND command to command auth.
find command select old ::
SPACE header list / fetch text old fetch text old  :
