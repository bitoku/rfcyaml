- title: __initial_text__
  contents:
  - '    RTP Payload Format for Standard apt-X and Enhanced apt-X Codecs

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a scheme for packetizing Standard apt-X\
    \ or\n   Enhanced apt-X encoded audio data into Real-time Transport Protocol\n\
    \   (RTP) packets.  The document describes a payload format that permits\n   transmission\
    \ of multiple related audio channels in a single RTP\n   payload and a means of\
    \ establishing Standard apt-X and Enhanced apt-X\n   connections through the Session\
    \ Description Protocol (SDP).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7310.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Conventions .....................................................3\n  \
    \ 3. Standard apt-X and Enhanced apt-X Codecs ........................3\n   4.\
    \ Payload Format Capabilities .....................................5\n      4.1.\
    \ Use of Forward Error Correction (FEC) ......................5\n   5. Payload\
    \ Format ..................................................5\n      5.1. RTP Header\
    \ Usage ...........................................5\n      5.2. Payload Structure\
    \ ..........................................6\n      5.3. Default Packetization\
    \ Interval .............................7\n      5.4. Implementation Considerations\
    \ ..............................8\n      5.5. Payload Example ............................................8\n\
    \   6. Payload Format Parameters ......................................10\n  \
    \    6.1. Media Type Definition .....................................10\n    \
    \  6.2. Mapping to SDP ............................................12\n      \
    \     6.2.1. SDP Usage Examples .................................13\n        \
    \   6.2.2. Offer/Answer Considerations ........................14\n   7. IANA\
    \ Considerations ............................................14\n   8. Security\
    \ Considerations ........................................14\n   9. Acknowledgements\
    \ ...............................................14\n   10. References ....................................................15\n\
    \      10.1. Normative References .....................................15\n  \
    \    10.2. Informative References ...................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies the payload format for packetization\
    \ of audio\n   data encoded with the Standard apt-X or Enhanced apt-X audio coding\n\
    \   algorithms into the Real-time Transport Protocol (RTP) [RFC3550].\n   The\
    \ document outlines some conventions, a brief description of the\n   operating\
    \ principles of the audio codecs, and the payload format\n   capabilities.  The\
    \ RTP payload format is detailed, and a relevant\n   example of the format is\
    \ provided.  The media type, its mappings to\n   SDP [RFC4566], and its usage\
    \ in the SDP offer/answer model are also\n   specified.  Finally, some security\
    \ considerations are outlined.\n   This document registers a media type (audio/aptx)\
    \ for the RTP payload\n   format for the Standard apt-X and Enhanced apt-X audio\
    \ codecs.\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   This document uses the normal IETF bit-order representation.\
    \  Bit\n   fields in figures are read left to right and then down.  The leftmost\n\
    \   bit in each field is the most significant.  The numbering starts from\n  \
    \ 0 and ascends, where bit 0 will be the most significant.\n   The key words \"\
    MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\",\
    \ \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document\
    \ are to be interpreted as described in RFC 2119 [RFC2119].\n"
- title: 3.  Standard apt-X and Enhanced apt-X Codecs
  contents:
  - "3.  Standard apt-X and Enhanced apt-X Codecs\n   Standard apt-X and Enhanced\
    \ apt-X are proprietary audio coding\n   algorithms, which can be licensed from\
    \ CSR plc. and are widely\n   deployed in a variety of audio processing equipment.\
    \  For commercial\n   reasons, the detailed internal operations of these algorithms\
    \ are not\n   described in standards or reference documents.  However, the data\n\
    \   interfaces to implementations of these algorithms are very simple and\n  \
    \ allow easy RTP packetization of data coded with the algorithms\n   without detailed\
    \ knowledge of the actual coded audio stream syntax.\n   Both the Standard apt-X\
    \ and Enhanced apt-X coding algorithms are\n   based on Adaptive Differential\
    \ Pulse Code Modulation principles.\n   They produce a constant coded bit rate\
    \ that is scaled according to\n   the sample frequency of the uncoded audio. \
    \ This constant rate is 1/4\n   of the bit rate of the uncoded audio, irrespective\
    \ of the resolution\n   (number of bits) used to represent an uncoded audio sample.\
    \  For\n   example, a 1.536-Mbit/s stereo audio stream composed of two channels\n\
    \   of 16-bit Pulse Code Modulated (PCM) audio that is sampled at a\n   frequency\
    \ of 48 kHz is encoded at 384 kbit/s.\n   Standard apt-X and Enhanced apt-X do\
    \ not enforce a coded frame\n   structure, and the coded data forms a continuous\
    \ coded sample stream\n   with each coded sample capable of regenerating four\
    \ PCM samples when\n   decoded.  The Standard apt-X algorithm encodes four successive\
    \ 16-bit\n   PCM samples from each audio channel into a single 16-bit coded sample\n\
    \   per audio channel.  The Enhanced apt-X algorithm encodes four\n   successive\
    \ 16-bit or 24-bit PCM samples from each audio channel and\n   respectively produces\
    \ a single 16-bit or 24-bit coded sample per\n   channel.  The same RTP packetization\
    \ rules apply for each of these\n   algorithmic variations.\n   Standard apt-X\
    \ and Enhanced apt-X coded data streams can optionally\n   carry synchronization\
    \ information and an auxiliary data channel\n   within the coded audio data without\
    \ additional overhead.  These\n   mechanisms can, for instance, be used when the\
    \ IP system is cascaded\n   with another transportation system and the decoder\
    \ is acting as a\n   simple bridge between the two systems.  Since auxiliary data\
    \ channel\n   and synchronization information are carried within the coded audio\n\
    \   data without additional overhead, RTP payload format rules do not\n   change\
    \ if they are present.  Out-of-band signaling is required,\n   however, to notify\
    \ the receiver end when autosync and auxiliary data\n   have been embedded in\
    \ the apt-X stream.\n   Embedded auxiliary data is typically used to transport\
    \ non-audio data\n   and timecode information for synchronization with video.\
    \  The bit\n   rate of the auxiliary data channel is 1/4 of the sample frequency.\n\
    \   For example, with a single audio channel encoded at Fs = 48 kHz, an\n   auxiliary\
    \ data bit rate of 12 kbit/s can be embedded.\n   apt-X further provides a means\
    \ of stereo-pairing apt-X channels so\n   that the embedded autosync and auxiliary\
    \ data channel can be shared\n   across the channel pair.  In the case of a 1.536-Mbit/s\
    \ stereo audio\n   stream composed of two channels of 16-bit PCM audio that is\
    \ sampled\n   at 48 kHz, a byte of auxiliary data would typically be fed into\
    \ the\n   Standard apt-X or Enhanced apt-X encoder once every 32 uncoded left\n\
    \   channel samples.  By default, apt-X channel-pairing is not enabled.\n   Out-of-band\
    \ signaling is required to notify the receiver when the\n   option is being used.\n\
    \   Standard apt-X and Enhanced apt-X decoders that have not been set up\n   with\
    \ the correct embedded autosync, auxiliary data, and\n   stereo-pairing information\
    \ will play out uncoded PCM samples with a\n   loss of decoding quality.  In the\
    \ case of Standard apt-X, the loss of\n   quality can be significant.\n   Further\
    \ details on the algorithm operation can be obtained from\n   CSR plc.\n     \
    \ Corporate HQ\n      Churchill House\n      Cambridge Business Park\n      Cowley\
    \ Road\n      Cambridge\n      CB4 0WZ\n      UK\n      Tel: +44 1223 692000\n\
    \      Fax: +44 1223 692001\n      <http://www.csr.com>\n"
- title: 4.  Payload Format Capabilities
  contents:
  - "4.  Payload Format Capabilities\n   This RTP payload format carries an integer\
    \ number of Standard apt-X\n   or Enhanced apt-X coded audio samples.  When multiple\
    \ related audio\n   channels are being conveyed within the payload, each channel\n\
    \   contributes the same integer number of apt-X coded audio samples to\n   the\
    \ total carried by the payload.\n"
- title: 4.1.  Use of Forward Error Correction (FEC)
  contents:
  - "4.1.  Use of Forward Error Correction (FEC)\n   Standard apt-X and Enhanced apt-X\
    \ do not inherently provide any\n   mechanism for adding redundancy or error-control\
    \ coding into the\n   coded audio stream.  Generic schemes for RTP, such as forward\
    \ error\n   correction as described in RFC 5109 [RFC5109] and RFC 2733 [RFC2733],\n\
    \   can be used to add redundant information to Standard apt-X and\n   Enhanced\
    \ apt-X RTP packet streams, making them more resilient to\n   packet losses at\
    \ the expense of a higher bit rate.\n"
- title: 5.  Payload Format
  contents:
  - "5.  Payload Format\n   The Standard apt-X and Enhanced apt-X algorithms encode\
    \ four\n   successive PCM samples from each audio channel and produce a single\n\
    \   compressed sample for each audio channel.  The encoder MUST be\n   presented\
    \ with an integer number S of input audio samples, where S is\n   an arbitrary\
    \ multiple of 4.  The encoder will produce exactly S/4\n   coded audio samples.\
    \  Since each coded audio sample is either 16 or\n   24 bits, the amount of coded\
    \ audio data produced upon each invocation\n   of the encoding process will be\
    \ an integer number of bytes.  RTP\n   packetization of the encoded data SHALL\
    \ be on a byte-by-byte basis.\n"
- title: 5.1.  RTP Header Usage
  contents:
  - "5.1.  RTP Header Usage\n   Utilization of the Standard apt-X and Enhanced apt-X\
    \ coding\n   algorithms does not create any special requirements with respect\
    \ to\n   the contents of the RTP packet header.  Other RTP packet header\n   fields\
    \ are defined as follows.\n   o  V - As per [RFC3550]\n   o  P - As per [RFC3550]\n\
    \   o  X - As per [RFC3550]\n   o  CC - As per [RFC3550]\n   o  M - As per [RFC3550]\
    \ and [RFC3551] Section 4.1\n   o  PT - A dynamic payload type; MUST be used [RFC3551]\n\
    \   o  SN (sequence number) - As per [RFC3550]\n   o  Timestamp - As per [RFC3550].\
    \  The RTP timestamp reflects the\n      instant at which the first audio sample\
    \ in the packet was sampled,\n      that is, the oldest information in the packet.\n\
    \   Header field abbreviations are defined as follows.\n   o  V - Version Number\n\
    \   o  P - Padding\n   o  X - Extensions\n   o  CC - Count of contributing sources\n\
    \   o  M - Marker\n   o  PT - Payload Type\n   o  PS - Payload Structure\n"
- title: 5.2.  Payload Structure
  contents:
  - "5.2.  Payload Structure\n   The RTP payload data for Standard apt-X and Enhanced\
    \ apt-X MUST be\n   structured as follows.\n   Standard apt-X and Enhanced apt-X\
    \ coded samples are packed\n   contiguously into payload octets in \"network byte\
    \ order\", also known\n   as big-endian order, and starting with the most significant\
    \ bit.\n   Coded samples are packed into the packet in time sequence, beginning\n\
    \   with the oldest coded sample.  An integer number of coded samples\n   MUST\
    \ be within the same packet.\n   When multiple channels of Standard apt-X and\
    \ Enhanced apt-X coded\n   audio, such as in a stereo program, are multiplexed\
    \ into a single RTP\n   stream, the coded samples from each channel, at a single\
    \ sampling\n   instant, are interleaved into a coded sample block according to\
    \ the\n   following standard audio channel ordering [RFC3551].  Coded sample\n\
    \   blocks are then packed into the packet in time sequence beginning\n   with\
    \ the oldest coded sample block.\n      l left\n      r right\n      c center\n\
    \      S surround\n      F front\n      R rear\n      channels   description \
    \    channel\n                                 1   2   3   4   5   6\n      ___________________________________________________\n\
    \      2          stereo          l   r\n      3                          l  \
    \ r   c\n      4                          l   c   r   S\n      5             \
    \             Fl  Fr  Fc  Sl  Sr\n      6                          l   lc  c \
    \  r   rc  S\n   For the two-channel encoding example, the sample sequence is\
    \ (left\n   channel, first sample), (right channel, first sample), (left channel,\n\
    \   second sample), (right channel, second sample).  Coded samples for\n   all\
    \ channels, belonging to a single coded sampling instant, MUST be\n   contained\
    \ in the same packet.  All channels in the same RTP stream\n   MUST be sampled\
    \ at the same frequency.\n"
- title: 5.3.  Default Packetization Interval
  contents:
  - "5.3.  Default Packetization Interval\n   The default packetization interval MUST\
    \ have a duration of\n   4 milliseconds.  When an integer number of coded samples\
    \ per channel\n   cannot be contained within this 4-millisecond interval, the\
    \ default\n   packet interval MUST be rounded down to the nearest packet interval\n\
    \   that can contain a complete integer set of coded samples.  For\n   example,\
    \ when encoding audio with either Standard apt-X or Enhanced\n   apt-X, sampled\
    \ at 11025 Hz, 22050 Hz, or 44100 Hz, the packetization\n   interval MUST be rounded\
    \ down to 3.99 milliseconds.\n   The packetization interval sets limits on the\
    \ end-to-end delay;\n   shorter packets minimize the audio delay through a system\
    \ at the\n   expense of increased bandwidth, while longer packets introduce less\n\
    \   header overhead but increase delay and make packet loss more\n   noticeable.\
    \  A default packet interval of 4 milliseconds maintains an\n   acceptable ratio\
    \ of payload to header bytes and minimizes the\n   end-to-end delay to allow viable\
    \ interactive applications based on\n   apt-X.  All implementations MUST support\
    \ this default packetization\n   interval.\n"
- title: 5.4.  Implementation Considerations
  contents:
  - "5.4.  Implementation Considerations\n   An application implementing this payload\
    \ format MUST understand all\n   the payload parameters that are defined in this\
    \ specification.  Any\n   mapping of these parameters to a signaling protocol\
    \ MUST support all\n   parameters.  Implementations can always decide whether\
    \ they are\n   capable of communicating based on the entities defined in this\n\
    \   specification.\n"
- title: 5.5.  Payload Example
  contents:
  - "5.5.  Payload Example\n   As an example payload format, consider the transmission\
    \ of an\n   arbitrary 5.1 audio signal consisting of six channels of 24-bit PCM\n\
    \   data, sampled at a rate of 48 kHz and packetized on an RTP packet\n   interval\
    \ of 4 milliseconds.  The total bit rate before audio coding\n   is 6 * 24 * 48000\
    \ = 6.912 Mbit/s.  Applying Enhanced apt-X coding\n   with a coded sample size\
    \ of 24 bits results in a transmitted coded\n   bit rate of 1/4 of the uncoded\
    \ bit rate, i.e., 1.728 Mbit/s.  On\n   packet intervals of 4 milliseconds, packets\
    \ contain 864 bytes of\n   encoded data that contain 48 Enhanced apt-X coded samples\
    \ per\n   channel.\n   For the example format, the diagram below shows how coded\
    \ samples\n   from each channel are packed into a sample block and how sample\n\
    \   blocks 1, 2, and 48 are subsequently packed into the RTP packet.\n      C:\n\
    \      Channel index: Left (l) = 1, left center (lc) = 2,\n      center (c) =\
    \ 3, right (r) = 4, right center (rc) = 5,\n      and surround (S) = 6.\n    \
    \  T:\n      Sample Block time index: The first sample block is 1; the final\n\
    \      sample is 48.\n      S(C)(T):\n      The Tth sample from channel C.\n \
    \   0                   1                   2                   3\n    0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    S(1)(1)                    |    S(2)(1)    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    S(2)(1)    |            S(3)(1)            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    S(3)(1)    |                   S(4)(1)                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    S(5)(1)                    |    S(6)(1)    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    S(6)(1)    |            S(1)(2)            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    S(2)(2)    |                   S(3)(2)                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    S(4)(2)                    |    S(5)(2)    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    S(5)(2)    |            S(6)(2)            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    S(6)(2)    |                   S(1)(3)                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \          S(6)(47)           |            S(1)(48)           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    S(1)(48)   |                   S(2)(48)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    S(3)(48)                   |    S(4)(48)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   S(4)(48)    |           S(5)(48)            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    S(5)(48)   |                   S(6)(48)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   For the example format, the diagram below indicates the order that\n   coded\
    \ bytes are packed into the packet payload in terms of sample\n   byte significance.\
    \  The following abbreviations are used.\n      MSB:\n      Most Significant Byte\
    \ of a 24-bit coded sample\n      MB:\n      Middle Byte of a 24-bit coded sample\n\
    \      LSB:\n      Least Significant Byte of a 24-bit coded sample\n    0    \
    \               1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      MSB      |       MB      |      LSB      |               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 6.  Payload Format Parameters
  contents:
  - "6.  Payload Format Parameters\n   This RTP payload format is identified using\
    \ the media type\n   audio/aptx, which is registered in accordance with RFC 4855\
    \ [RFC4855]\n   and using the template of RFC 6838 [RFC6838].\n"
- title: 6.1.  Media Type Definition
  contents:
  - "6.1.  Media Type Definition\n   Type name: audio\n   Subtype name: aptx\n   Required\
    \ parameters:\n      rate:\n      RTP timestamp clock rate, which is equal to\
    \ the sampling rate\n      in Hz.  RECOMMENDED values for rate are 8000, 11025,\
    \ 16000,\n      22050, 24000, 32000, 44100, and 48000 samples per second.  Other\n\
    \      values are permissible.\n      channels:\n      The number of logical audio\
    \ channels that are present in the\n      audio stream.\n      variant:\n    \
    \  The variant of apt-X (i.e., Standard or Enhanced) that is being\n      used.\
    \  The following variants can be signaled:\n         variant=standard\n      \
    \   variant=enhanced\n      bitresolution:\n      The number of bits used by the\
    \ algorithm to encode four PCM\n      samples.  This value MAY only be set to\
    \ 16 for Standard apt-X\n      and 16 or 24 for Enhanced apt-X.\n   Optional parameters:\n\
    \      ptime:\n      The recommended length of time (in milliseconds) represented\
    \ by\n      the media in a packet.  Defaults to 4 milliseconds.\n      See Section\
    \ 6 of [RFC4566].\n      maxptime:\n      The maximum amount of media that can\
    \ be encapsulated in each\n      packet, expressed as time in milliseconds.  See\
    \ Section 6 of\n      [RFC4566].\n      stereo-channel-pairs:\n      Defines audio\
    \ channels that are stereo paired in the stream.\n      See Section 3.  Each pair\
    \ of audio channels is defined as two\n      comma-separated values that correspond\
    \ to channel numbers in\n      the range 1..channels.  Each stereo channel pair\
    \ is preceded\n      by a '{' and followed by a '}'.  Pairs of audio channels\
    \ are\n      separated by a comma.  A channel MUST NOT be paired with more\n \
    \     than one other channel.  The absence of this parameter signals\n      that\
    \ each channel has been independently encoded.\n      embedded-autosync-channels:\n\
    \      Defines channels that carry embedded autosync.\n      Embedded-autosync-channels\
    \ is defined as a list of\n      comma-separated values that correspond to channel\
    \ numbers in\n      the range 1..channels.  When a channel is stereo paired, embedded\n\
    \      autosync is shared across channels in the pair.  The first channel\n  \
    \    as defined in stereo-channel-pairs MUST be specified in the\n      embedded-autosync-channels\
    \ list.\n      embedded-aux-channels:\n      Defines channels that carry embedded\
    \ auxiliary data.\n      Embedded-aux-channels is defined as a list of comma-separated\n\
    \      values that correspond to channel numbers in the range\n      1..channels.\
    \  When a channel is stereo paired, embedded auxiliary\n      data is shared across\
    \ channels in the pair.  The second channel\n      as defined in stereo-channel-pairs\
    \ MUST be specified in the\n      embedded-aux-channels list.\n   Encoding considerations:\
    \ This media type is framed in RTP and\n      contains binary data; see Section\
    \ 4.8 of [RFC6838].\n   Security considerations: See Section 5 of [RFC4855] and\
    \ Section 4\n      of [RFC4856].\n   Interoperability considerations: none\n \
    \  Published specification: RFC 7310\n   Applications which use this media type:\
    \ Audio streaming\n   Fragment identifier considerations: None\n   Additional\
    \ information: none\n   Person & email address to contact for further information:\n\
    \      John Lindsay <Lindsay@worldcastsystems.com>\n   Intended usage: COMMON\n\
    \   Restrictions on usage: This media type depends on RTP framing,\n      and\
    \ hence is only defined for transfer via RTP [RFC3550].\n   Author/Change controller:\
    \ IETF Payload Working Group delegated\n      from the IESG.\n"
- title: 6.2.  Mapping to SDP
  contents:
  - "6.2.  Mapping to SDP\n   The information carried in the media type specification\
    \ has a\n   specific mapping to fields in the Session Description Protocol (SDP)\n\
    \   [RFC4566] that is commonly used to describe RTP sessions.  When SDP\n   is\
    \ used to describe sessions, the media type mappings are as follows.\n   o  The\
    \ type name (\"audio\") goes in SDP \"m=\" as the media name.\n   o  The subtype\
    \ name (\"aptx\") goes in SDP \"a=rtpmap\" as the encoding\n      name.\n   o\
    \  The parameter \"rate\" also goes in \"a=rtpmap\" as the clock rate.\n   o \
    \ The parameter \"channels\" also goes in \"a=rtpmap\" as the channel\n      count.\n\
    \   o  The parameter \"maxptime\", when present, MUST be included in the\n   \
    \   SDP \"a=maxptime\" attribute.\n   o  The required parameters \"variant\" and\
    \ \"bitresolution\" MUST be\n      included in the SDP \"a=fmtp\" attribute.\n\
    \   o  The optional parameters \"stereo-channel-pairs\",\n      \"embedded-autosync-channels\"\
    , and \"embedded-aux-channels\", when\n      present, MUST be included in the\
    \ SDP \"a=fmtp\" attribute.\n   o  The parameter \"ptime\", when present, goes\
    \ in a separate SDP\n      attribute field and is signaled as \"a=ptime:<value>\"\
    , where\n      <value> is the number of milliseconds of audio represented by\n\
    \      one RTP packet.  See Section 6 of [RFC4566].\n"
- title: 6.2.1.  SDP Usage Examples
  contents:
  - "6.2.1.  SDP Usage Examples\n   Some example SDP session descriptions utilizing\
    \ apt-X encodings\n   follow.  In these examples, long \"a=fmtp\" lines are folded\
    \ to meet\n   the column width constraints of this document.\n   Example 1: A\
    \ Standard apt-X stream that encodes two independent\n   44.1-kHz 16-bit PCM channels\
    \ into a 4-millisecond RTP packet.\n      m=audio 5004 RTP/AVP 98\n      a=rtpmap:98\
    \ aptx/44100/2\n      a=fmtp:98 variant=standard; bitresolution=16;\n      a=ptime:4\n\
    \   Example 2: An Enhanced apt-X stream that encodes two 48-kHz 24-bit\n   stereo\
    \ channels into a 4-millisecond RTP packet and carries both an\n   embedded autosync\
    \ and auxiliary data channel.\n      m=audio 5004 RTP/AVP 98\n      a=rtpmap:98\
    \ aptx/48000/2\n      a=fmtp:98 variant=enhanced; bitresolution=24;\n      stereo-channel-pairs={1,2};\
    \ embedded-autosync-channels=1;\n      embedded-aux-channels=2\n      a=ptime:4\n\
    \   Example 3: An Enhanced apt-X stream that encodes six 44.1-kHz 24-bit\n   channels\
    \ into a 6-millisecond RTP packet.  Channels 1,2 and 3,4 are\n   stereo pairs.\
    \  Both stereo pairs carry both an embedded autosync and\n   auxiliary data channel.\n\
    \      m=audio 5004 RTP/AVP 98\n      a=rtpmap:98 aptx/44100/6\n      a=fmtp:98\
    \ variant=enhanced; bitresolution=24;\n      stereo-channel-pairs={1,2},{3,4};\
    \ embedded-autosync-channels=1,3;\n      embedded-aux-channels=2,4\n      a=ptime:6\n"
- title: 6.2.2.  Offer/Answer Considerations
  contents:
  - "6.2.2.  Offer/Answer Considerations\n   The only negotiable parameter is the\
    \ delivery method.  All other\n   parameters are declarative.  The offer, as described\
    \ in [RFC3264],\n   may contain a large number of delivery methods per single\
    \ fmtp\n   attribute.  The answerer MUST remove every delivery method and\n  \
    \ configuration URI that is not supported.  Apart from this exceptional\n   case,\
    \ all parameters MUST NOT be altered on answer.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   One media type (audio/aptx) has been registered in\
    \ the \"Media Types\"\n   registry.  See Section 6.1.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   RTP packets using the payload format defined\
    \ in this specification\n   are subject to the security considerations discussed\
    \ in the RTP\n   specification [RFC3550] and any appropriate RTP profile (for\
    \ example,\n   [RFC3551]).  This implies that confidentiality of the media streams\n\
    \   is achieved by encryption.  Because the audio coding used with this\n   payload\
    \ format is applied end to end, encryption may be performed\n   after audio coding\
    \ so there is no conflict between the two\n   operations.  A potential denial-of-service\
    \ threat exists for audio\n   coding techniques that have non-uniform receiver-end\
    \ computational\n   load.  The attacker can inject pathological datagrams into\
    \ the stream\n   that are complex to decode and cause the receiver to be overloaded.\n\
    \   However, the Standard apt-X and Enhanced apt-X audio coding\n   algorithms\
    \ do not exhibit any significant non-uniformity.  As with\n   any IP-based protocol,\
    \ in some circumstances a receiver may be\n   overloaded simply by the receipt\
    \ of too many packets, either desired\n   or undesired.  Network-layer authentication\
    \ may be used to discard\n   packets from undesired sources, but the processing\
    \ cost of the\n   authentication itself may be too high.  In a multicast environment,\n\
    \   pruning of specific sources may be implemented in future versions of\n   IGMP\
    \ [RFC3376] and in multicast routing protocols to allow a receiver\n   to select\
    \ which sources are allowed to reach it.  [RFC6562] has\n   highlighted potential\
    \ security vulnerabilities of Variable Bit Rate\n   (VBR) codecs using Secure\
    \ RTP transmission methods.  As the Standard\n   apt-X and Enhanced apt-X codecs\
    \ are Constant Bit Rate (CBR) codecs,\n   this security vulnerability is therefore\
    \ not applicable.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   This specification was facilitated by earlier documents\
    \ produced by\n   Greg Massey, David Trainer, James Hunter, and Derrick Rea, along\
    \ with\n   practical tests carried out by Paul McCambridge of APT Ltd.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3264]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n\
    \              with Session Description Protocol (SDP)\", RFC 3264,\n        \
    \      June 2002.\n   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and\
    \ V.\n              Jacobson, \"RTP: A Transport Protocol for Real-Time\n    \
    \          Applications\", STD 64, RFC 3550, July 2003.\n   [RFC3551]  Schulzrinne,\
    \ H. and S. Casner, \"RTP Profile for Audio and\n              Video Conferences\
    \ with Minimal Control\", STD 65, RFC 3551,\n              July 2003.\n   [RFC4566]\
    \  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n              Description\
    \ Protocol\", RFC 4566, July 2006.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC2733]  Rosenberg, J. and H. Schulzrinne,\
    \ \"An RTP Payload Format\n              for Generic Forward Error Correction\"\
    , RFC 2733,\n              December 1999.\n   [RFC3376]  Cain, B., Deering, S.,\
    \ Kouvelas, I., Fenner, B., and A.\n              Thyagarajan, \"Internet Group\
    \ Management Protocol,\n              Version 3\", RFC 3376, October 2002.\n \
    \  [RFC4855]  Casner, S., \"Media Type Registration of RTP Payload\n         \
    \     Formats\", RFC 4855, February 2007.\n   [RFC4856]  Casner, S., \"Media Type\
    \ Registration of Payload Formats in\n              the RTP Profile for Audio\
    \ and Video Conferences\",\n              RFC 4856, February 2007.\n   [RFC5109]\
    \  Li, A., Ed., \"RTP Payload Format for Generic Forward Error\n             \
    \ Correction\", RFC 5109, December 2007.\n   [RFC6562]  Perkins, C. and JM. Valin,\
    \ \"Guidelines for the Use of\n              Variable Bit Rate Audio with Secure\
    \ RTP\", RFC 6562,\n              March 2012.\n   [RFC6838]  Freed, N., Klensin,\
    \ J., and T. Hansen, \"Media Type\n              Specifications and Registration\
    \ Procedures\", BCP 13,\n              RFC 6838, January 2013.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   John Lindsay\n   APT Ltd\n   729 Springfield Road\n  \
    \ Belfast\n   Northern Ireland\n   BT12 7FP\n   UK\n   Phone: +44 2890 677200\n\
    \   EMail: Lindsay@worldcastsystems.com\n   Hartmut Foerster\n   APT Ltd\n   729\
    \ Springfield Road\n   Belfast\n   Northern Ireland\n   BT12 7FP\n   UK\n   Phone:\
    \ +44 2890 677200\n   EMail: Foerster@worldcastsystems.com\n"
