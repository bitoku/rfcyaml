- title: __initial_text__
  contents:
  - '               Photuris: Extended Schemes and Attributes

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document defines an Experimental Protocol for the\
    \ Internet\n   community.  It does not specify an Internet standard of any kind.\n\
    \   Discussion and suggestions for improvement are requested.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  Copyright (C)\
    \ Philip Karn\n   and William Allen Simpson (1994-1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Photuris is a session-key management protocol.  Extensible Exchange-\n\
    \   Schemes are provided to enable future implementation changes without\n   affecting\
    \ the basic protocol.\n   Additional authentication attributes are included for\
    \ use with the IP\n   Authentication Header (AH) or the IP Encapsulating Security\
    \ Protocol\n   (ESP).\n   Additional confidentiality attributes are included for\
    \ use with ESP.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n     1.     Additional Exchange-Schemes ...........................\
    \    1\n     2.     Additional Key-Generation-Function ....................  \
    \  5\n        2.1       SHA1 Hash .......................................    5\n\
    \     3.     Additional Privacy-Methods ............................    5\n  \
    \      3.1       DES-CBC over Mask ...............................    5\n    \
    \    3.2       DES-EDE3-CBC over Mask ..........................    6\n     4.\
    \     Additional Validity-Method ............................    6\n        4.1\
    \       SHA1-IPMAC Check ................................    6\n     5.     Additional\
    \ Attributes .................................    7\n        5.1       SHA1-IPMAC\
    \ ......................................    7\n           5.1.1  Symmetric Identification\
    \ ........................    8\n           5.1.2  Authentication ..................................\
    \    9\n        5.2       RIPEMD-160-IPMAC ................................  \
    \  9\n           5.2.1  Symmetric Identification ........................   10\n\
    \           5.2.2  Authentication ..................................   11\n  \
    \      5.3       DES-CBC .........................................   11\n    \
    \    5.4       Invert (Decryption/Encryption) ..................   12\n      \
    \  5.5       XOR Whitening ...................................   13\n     APPENDICES\
    \ ...................................................   15\n     A.     Exchange-Scheme\
    \ Selection .............................   15\n        A.1       Responder .......................................\
    \   15\n        A.2       Initiator .......................................  \
    \ 15\n     SECURITY CONSIDERATIONS ......................................   16\n\
    \     ACKNOWLEDGEMENTS .............................................   16\n  \
    \   REFERENCES ...................................................   17\n    \
    \ CONTACTS .....................................................   18\n     COPYRIGHT\
    \ ....................................................   19\n"
- title: 1.  Additional Exchange-Schemes
  contents:
  - "1.  Additional Exchange-Schemes\n   The packet format and basic facilities are\
    \ already defined for\n   Photuris [RFC-2522].\n   These optional Exchange-Schemes\
    \ are specified separately, and no\n   single implementation is expected to support\
    \ all of them.\n   This document defines the following values:\n   (3)   Implementation\
    \ Optional.  Any modulus (p) with a recommended\n         generator (g) of 3.\
    \  When the Exchange-Scheme Size is non-zero,\n         the modulus is contained\
    \ in the Exchange-Scheme Value field in\n         the list of Offered-Schemes.\n\
    \         An Exchange-Scheme Size of zero is invalid.\n         Key-Generation-Function\
    \     \"MD5 Hash\"\n         Privacy-Method              \"Simple Masking\"\n\
    \         Validity-Method             \"MD5-IPMAC Check\"\n         This combination\
    \ of features requires a modulus with at least\n         64-bits of cryptographic\
    \ strength.\n   (4)   Implementation Optional.  Any modulus (p) with a recommended\n\
    \         generator (g) of 2.  When the Exchange-Scheme Size is non-zero,\n  \
    \       the modulus is contained in the Exchange-Scheme Value field in\n     \
    \    the list of Offered-Schemes.\n         When the Exchange-Scheme Size field\
    \ is zero, includes by\n         reference all of the moduli specified in the\
    \ list of Offered-\n         Schemes for Scheme #2.\n         Key-Generation-Function\
    \     \"MD5 Hash\"\n         Privacy-Method              \"DES-CBC over Mask\"\
    \n         Validity-Method             \"MD5-IPMAC Check\"\n         This combination\
    \ of features requires a modulus with at least\n         64-bits of cryptographic\
    \ strength.\n   (5)   Implementation Optional.  Any modulus (p) with a recommended\n\
    \         generator (g) of 5.  When the Exchange-Scheme Size is non-zero,\n  \
    \       the modulus is contained in the Exchange-Scheme Value field in\n     \
    \    the list of Offered-Schemes.\n         An Exchange-Scheme Size of zero is\
    \ invalid.\n         Key-Generation-Function     \"MD5 Hash\"\n         Privacy-Method\
    \              \"Simple Masking\"\n         Validity-Method             \"MD5-IPMAC\
    \ Check\"\n         This combination of features requires a modulus with at least\n\
    \         64-bits of cryptographic strength.\n   (6)   Implementation Optional.\
    \  Any modulus (p) with a recommended\n         generator (g) of 3.  When the\
    \ Exchange-Scheme Size is non-zero,\n         the modulus is contained in the\
    \ Exchange-Scheme Value field in\n         the list of Offered-Schemes.\n    \
    \     When the Exchange-Scheme Size field is zero, includes by\n         reference\
    \ all of the moduli specified in the list of Offered-\n         Schemes for Scheme\
    \ #3.\n         Key-Generation-Function     \"MD5 Hash\"\n         Privacy-Method\
    \              \"DES-CBC over Mask\"\n         Validity-Method             \"\
    MD5-IPMAC Check\"\n         This combination of features requires a modulus with\
    \ at least\n         64-bits of cryptographic strength.\n   (7)   Implementation\
    \ Optional.  Any modulus (p) with a variable\n         generator (g).  When the\
    \ Exchange-Scheme Size is non-zero, the\n         pair [g,p] is contained in the\
    \ Exchange-Scheme Value field in\n         the list of Offered-Schemes.  Each\
    \ is encoded in a separate\n         Variable Precision Integer (VPI).  The generator\
    \ VPI is\n         followed by (concatenated to) the modulus VPI, and the result\n\
    \         is nested inside the Exchange-Scheme Value field.\n         An Exchange-Scheme\
    \ Size of zero is invalid.\n         Key-Generation-Function     \"MD5 Hash\"\n\
    \         Privacy-Method              \"Simple Masking\"\n         Validity-Method\
    \             \"MD5-IPMAC Check\"\n         This combination of features requires\
    \ a modulus with at least\n         64-bits of cryptographic strength.\n     \
    \    When more than one modulus is specified for a given kind of\n         Scheme,\
    \ the Size of the modulus MUST be unique, independent of\n         the Size of\
    \ the generator.\n   (8)   Implementation Optional.  Any modulus (p) with a recommended\n\
    \         generator (g) of 2.  When the Exchange-Scheme Size is non-zero,\n  \
    \       the modulus is contained in the Exchange-Scheme Value field in\n     \
    \    the list of Offered-Schemes.\n         When the Exchange-Scheme Size field\
    \ is zero, includes by\n         reference all of the moduli specified in the\
    \ list of Offered-\n         Schemes for Schemes #2 and #4.\n         Key-Generation-Function\
    \     \"SHA1 Hash\"\n         Privacy-Method              \"DES-EDE3-CBC over\
    \ Mask\"\n         Validity-Method             \"SHA1-IPMAC Check\"\n        \
    \ This combination of features requires a modulus with at least\n         112-bits\
    \ of cryptographic strength.\n   (10)  Implementation Optional.  Any modulus (p)\
    \ with a recommended\n         generator (g) of 5.  When the Exchange-Scheme Size\
    \ is non-zero,\n         the modulus is contained in the Exchange-Scheme Value\
    \ field in\n         the list of Offered-Schemes.\n         When the Exchange-Scheme\
    \ Size field is zero, includes by\n         reference all of the moduli specified\
    \ in the list of Offered-\n         Schemes for Scheme #5.\n         Key-Generation-Function\
    \     \"MD5 Hash\"\n         Privacy-Method              \"DES-CBC over Mask\"\
    \n         Validity-Method             \"MD5-IPMAC Check\"\n         This combination\
    \ of features requires a modulus with at least\n         64-bits of cryptographic\
    \ strength.\n   (12)  Implementation Optional.  Any modulus (p) with a recommended\n\
    \         generator (g) of 3.  When the Exchange-Scheme Size is non-zero,\n  \
    \       the modulus is contained in the Exchange-Scheme Value field in\n     \
    \    the list of Offered-Schemes.\n         When the Exchange-Scheme Size field\
    \ is zero, includes by\n         reference all of the moduli specified in the\
    \ list of Offered-\n         Schemes for Schemes #3 and #6.\n         Key-Generation-Function\
    \     \"SHA1 Hash\"\n         Privacy-Method              \"DES-EDE3-CBC over\
    \ Mask\"\n         Validity-Method             \"SHA1-IPMAC Check\"\n        \
    \ This combination of features requires a modulus with at least\n         112-bits\
    \ of cryptographic strength.\n   (14)  Implementation Optional.  Any modulus (p)\
    \ with a variable\n         generator (g).  When the Exchange-Scheme Size is non-zero,\
    \ the\n         pair [g,p] is contained in the Exchange-Scheme Value field in\n\
    \         the list of Offered-Schemes.  Each is encoded in a separate\n      \
    \   Variable Precision Integer (VPI).  The generator VPI is\n         followed\
    \ by (concatenated to) the modulus VPI, and the result\n         is nested inside\
    \ the Exchange-Scheme Value field.\n         When the Exchange-Scheme Size field\
    \ is zero, includes by\n         reference all of the moduli specified in the\
    \ list of Offered-\n         Schemes for Scheme #7.\n         Key-Generation-Function\
    \     \"MD5 Hash\"\n         Privacy-Method              \"DES-CBC over Mask\"\
    \n         Validity-Method             \"MD5-IPMAC Check\"\n         This combination\
    \ of features requires a modulus with at least\n         64-bits of cryptographic\
    \ strength.\n         When more than one modulus is specified for a given kind\
    \ of\n         Scheme, the Size of the modulus MUST be unique, independent of\n\
    \         the Size of the generator.\n   (20)  Implementation Optional.  Any modulus\
    \ (p) with a recommended\n         generator (g) of 5.  When the Exchange-Scheme\
    \ Size is non-zero,\n         the modulus is contained in the Exchange-Scheme\
    \ Value field in\n         the list of Offered-Schemes.\n         When the Exchange-Scheme\
    \ Size field is zero, includes by\n         reference all of the moduli specified\
    \ in the list of Offered-\n         Schemes for Schemes #5 and #10.\n        \
    \ Key-Generation-Function     \"SHA1 Hash\"\n         Privacy-Method         \
    \     \"DES-EDE3-CBC over Mask\"\n         Validity-Method             \"SHA1-IPMAC\
    \ Check\"\n         This combination of features requires a modulus with at least\n\
    \         112-bits of cryptographic strength.\n   (28)  Implementation Optional.\
    \  Any modulus (p) with a variable\n         generator (g).  When the Exchange-Scheme\
    \ Size is non-zero, the\n         pair [g,p] is contained in the Exchange-Scheme\
    \ Value field in\n         the list of Offered-Schemes.  Each is encoded in a\
    \ separate\n         Variable Precision Integer (VPI).  The generator VPI is\n\
    \         followed by (concatenated to) the modulus VPI, and the result\n    \
    \     is nested inside the Exchange-Scheme Value field.\n         When the Exchange-Scheme\
    \ Size field is zero, includes by\n         reference all of the moduli specified\
    \ in the list of Offered-\n         Schemes for Schemes #7 and #14.\n        \
    \ Key-Generation-Function     \"SHA1 Hash\"\n         Privacy-Method         \
    \     \"DES-EDE3-CBC over Mask\"\n         Validity-Method             \"SHA1-IPMAC\
    \ Check\"\n         This combination of features requires a modulus with at least\n\
    \         112-bits of cryptographic strength.\n         When more than one modulus\
    \ is specified for a given kind of\n         Scheme, the Size of the modulus MUST\
    \ be unique, independent of\n         the Size of the generator.\n"
- title: 2.  Additional Key-Generation-Function
  contents:
  - '2.  Additional Key-Generation-Function

    '
- title: 2.1.  SHA1 Hash
  contents:
  - "2.1.  SHA1 Hash\n   SHA1 [FIPS-180-1] is used as a pseudo-random-function for\
    \ generating\n   the key(s).  The key(s) begin with the most significant bits\
    \ of the\n   hash.  SHA1 is iterated as needed to generate the requisite length\
    \ of\n   key material.\n   When an individual key does not use all 160-bits of\
    \ the last hash,\n   any remaining unused (least significant) bits of the last\
    \ hash are\n   discarded.  When combined with other uses of key generation for\
    \ the\n   same purpose, the next key will begin with a new hash iteration.\n"
- title: 3.  Additional Privacy-Methods
  contents:
  - '3.  Additional Privacy-Methods

    '
- title: 3.1.  DES-CBC over Mask
  contents:
  - "3.1.  DES-CBC over Mask\n   As described in [RFC-2522] \"Privacy-Key Computation\"\
    , sufficient\n   privacy-key material is generated to match the message length,\n\
    \   beginning with the next field after the SPI, and including the\n   Padding.\
    \  The message is masked by XOR with the privacy-key.\n   Then, the Key-Generation-Function\
    \ is iterated to generate a DES key.\n   The most significant 64-bits (8 bytes)\
    \ of the generated hash are used\n   for the privacy-key, and the remainder are\
    \ discarded.  Although\n   extremely rare, the 64 weak, semi-weak, and possibly\
    \ weak keys\n   [Schneier95, pages 280-282] are discarded.  The Key-Generation-\n\
    \   Function is iterated until a valid key is obtained.\n   The least significant\
    \ bit of each key byte is ignored (or set to\n   parity when the implementation\
    \ requires).\n   The 64-bit CBC IV is zero.  Message encryption begins with the\
    \ next\n   field after the SPI, and continues to the end of the data indicated\n\
    \   by the UDP Length.\n"
- title: 3.2.  DES-EDE3-CBC over Mask
  contents:
  - "3.2.  DES-EDE3-CBC over Mask\n   This is \"Triple DES\" outer-CBC EDE encryption\
    \ (and DED decryption)\n   with three 56-bit keys [KR96].\n   As described in\
    \ [RFC-2522] \"Privacy-Key Computation\", sufficient\n   privacy-key material\
    \ is generated to match the message length,\n   beginning with the next field\
    \ after the SPI, and including the\n   Padding.  The message is masked by XOR\
    \ with the privacy-key.\n   Then, the Key-Generation-Function is iterated (at\
    \ least) three times\n   to generate the three DES keys.  The most significant\
    \ 64-bits (8\n   bytes) of each generated hash are used for each successive privacy-\n\
    \   key, and the remainder are discarded.  Each key is examined\n   sequentially,\
    \ in the order used for encryption.  A key that is\n   identical to a previous\
    \ key MUST be discarded.  Although extremely\n   rare, the 64 weak, semi-weak,\
    \ and possibly weak keys [Schneier95,\n   pages 280-282] MUST be discarded.  The\
    \ Key-Generation-Function is\n   iterated until a valid key is obtained before\
    \ generating the next\n   key.\n   In all three keys, the least significant bit\
    \ of each key byte is\n   ignored (or set to parity when the implementation requires).\n\
    \   The 64-bit CBC IV is zero.  Message encryption begins with the next\n   field\
    \ after the SPI, and continues to the end of the data indicated\n   by the UDP\
    \ Length.\n"
- title: 4.  Additional Validity-Method
  contents:
  - '4.  Additional Validity-Method

    '
- title: 4.1.  SHA1-IPMAC Check
  contents:
  - "4.1.  SHA1-IPMAC Check\n   As described in [RFC-2522] \"Validity Verification\"\
    , the Verification\n   field value is the SHA1 [FIPS-180-1] hash over the concatenation\
    \ of\n      SHA1( key, keyfill, data, datafill, key, mdfill )\n   where the key\
    \ is the computed verification-key.\n   The keyfill and datafill use the same\
    \ pad-with-length technique\n   defined for mdfill.  This padding and length is\
    \ implicit, and does\n   not appear in the datagram.\n   The resulting Verification\
    \ field is a 160-bit Variable Precision\n   Integer (22 bytes including Size).\
    \  When used in calculations, the\n   Verification data includes both the Size\
    \ and Value fields.\n"
- title: 5.  Additional Attributes
  contents:
  - "5.  Additional Attributes\n   The attribute format and basic facilities are already\
    \ defined for\n   Photuris [RFC-2522].\n   These optional attributes are specified\
    \ separately, and no single\n   implementation is expected to support all of them.\n\
    \   This document defines the following values:\n     Use    Type\n     AEI  \
    \    6  SHA1-IPMAC\n     AEI      7  RIPEMD-160-IPMAC\n      E       8  DES-CBC\n\
    \      E       9  Invert (Decryption/Encryption)\n      E      10  XOR\n     A\
    \      AH Attribute-Choice\n      E     ESP Attribute-Choice\n       I    Identity-Choice\n\
    \        X   dependent on list location\n"
- title: 5.1.  SHA1-IPMAC
  contents:
  - "5.1.  SHA1-IPMAC\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   Attribute   |\
    \    Length     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Attribute        6\n\
    \   Length           0\n"
- title: 5.1.1.  Symmetric Identification
  contents:
  - "5.1.1.  Symmetric Identification\n   When selected as an Identity-Choice, the\
    \ immediately following\n   Identification field contains an unstructured Variable\
    \ Precision\n   Integer.  Valid Identifications and symmetric secret-keys are\n\
    \   preconfigured by the parties.\n   There is no required format or content for\
    \ the Identification value.\n   The value may be a number or string of any kind.\
    \  See [RFC-2522] \"Use\n   of Identification and Secrets\" for details.\n   The\
    \ symmetric secret-key (as specified) is selected based on the\n   contents of\
    \ the Identification field.  All implementations MUST\n   support at least 62\
    \ bytes.  The selected symmetric secret-key SHOULD\n   provide at least 80-bits\
    \ of cryptographic strength.\n   As described in [RFC-2522] \"Identity Verification\"\
    , the Verification\n   field value is the SHA1 [FIPS-180-1] hash over the concatenation\
    \ of:\n      SHA1( key, keyfill, data, datafill, key, mdfill )\n   where the key\
    \ is the computed verification-key.\n   The keyfill and datafill use the same\
    \ pad-with-length technique\n   defined for mdfill.  This padding and length is\
    \ implicit, and does\n   not appear in the datagram.\n   The resulting Verification\
    \ field is a 160-bit Variable Precision\n   Integer (22 bytes including Size).\
    \  When used in calculations, the\n   Verification data includes both the Size\
    \ and Value fields.\n   For both [RFC-2522] \"Identity Verification\" and \"Validity\n\
    \   Verification\", the verification-key is the SHA1 [FIPS-180-1] hash of\n  \
    \ the following concatenated values:\n    + the symmetric secret-key,\n    + the\
    \ computed shared-secret.\n   For [RFC-2522] \"Session-Key Computation\", the\
    \ symmetric secret-key is\n   used directly as the generation-key.\n   The symmetric\
    \ secret-key is used in calculations in the same fashion\n   as [RFC-2522] \"\
    MD5-IPMAC Symmetric Identification\".\n"
- title: 5.1.2.  Authentication
  contents:
  - "5.1.2.  Authentication\n   May be selected as an AH or ESP Attribute-Choice,\
    \ pursuant to [RFC-\n   1852] et sequitur.  The selected Exchange-Scheme SHOULD\
    \ provide at\n   least 80-bits of cryptographic strength.\n   As described in\
    \ [RFC-2522] \"Session-Key Computation\", the most\n   significant 384-bits (48\
    \ bytes) of the Key-Generation-Function\n   iterations are used for the key.\n\
    \   Profile:\n      When negotiated with Photuris, the transform differs slightly\
    \ from\n      [RFC-1852].\n      The form of the authenticated message is:\n \
    \        SHA1( key, keyfill, datagram, datafill, key, mdfill )\n      where the\
    \ key is the SPI session-key.\n      The additional datafill protects against\
    \ the attack described in\n      [PO96].  The keyfill and datafill use the same\
    \ pad-with-length\n      technique defined for mdfill.  This padding and length\
    \ is\n      implicit, and does not appear in the datagram.\n"
- title: 5.2.  RIPEMD-160-IPMAC
  contents:
  - "5.2.  RIPEMD-160-IPMAC\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   Attribute\
    \   |    Length     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Attribute    \
    \    7\n   Length           0\n"
- title: 5.2.1.  Symmetric Identification
  contents:
  - "5.2.1.  Symmetric Identification\n   When selected as an Identity-Choice, the\
    \ immediately following\n   Identification field contains an unstructured Variable\
    \ Precision\n   Integer.  Valid Identifications and symmetric secret-keys are\n\
    \   preconfigured by the parties.\n   There is no required format or content for\
    \ the Identification value.\n   The value may be a number or string of any kind.\
    \  See [RFC-2522] \"Use\n   of Identification and Secrets\" for details.\n   The\
    \ symmetric secret-key (as specified) is selected based on the\n   contents of\
    \ the Identification field.  All implementations MUST\n   support at least 62\
    \ bytes.  The selected symmetric secret-key SHOULD\n   provide at least 80-bits\
    \ of cryptographic strength.\n   As described in [RFC-2522] \"Identity Verification\"\
    , the Verification\n   field value is the RIPEMD-160 [DBP96] hash over the concatenation\
    \ of:\n      RIPEMD160( key, keyfill, data, datafill, key, mdfill )\n   where\
    \ the key is the computed verification-key.\n   The keyfill and datafill use the\
    \ same pad-with-length technique\n   defined for mdfill.  This padding and length\
    \ is implicit, and does\n   not appear in the datagram.\n   The resulting Verification\
    \ field is a 160-bit Variable Precision\n   Integer (22 bytes including Size).\
    \  When used in calculations, the\n   Verification data includes both the Size\
    \ and Value fields.\n   For both [RFC-2522] \"Identity Verification\" and \"Validity\n\
    \   Verification\", the verification-key is the RIPEMD-160 [DBP96] hash of\n \
    \  the following concatenated values:\n    + the symmetric secret-key,\n    +\
    \ the computed shared-secret.\n   For [RFC-2522] \"Session-Key Computation\",\
    \ the symmetric secret-key is\n   used directly as the generation-key.\n   The\
    \ symmetric secret-key is used in calculations in the same fashion\n   as [RFC-2522]\
    \ \"MD5-IPMAC Symmetric Identification\".\n"
- title: 5.2.2.  Authentication
  contents:
  - "5.2.2.  Authentication\n   May be selected as an AH or ESP Attribute-Choice.\
    \  The selected\n   Exchange-Scheme SHOULD provide at least 80-bits of cryptographic\n\
    \   strength.\n   As described in [RFC-2522] \"Session-Key Computation\", the\
    \ most\n   significant 384-bits (48 bytes) of the Key-Generation-Function\n  \
    \ iterations are used for the key.\n   Profile:\n      When negotiated with Photuris,\
    \ the form of the authenticated\n      message is:\n         RIPEMD160( key, keyfill,\
    \ datagram, datafill, key, mdfill )\n      where the key is the SPI session-key.\n\
    \      The additional datafill protects against the attack described in\n    \
    \  [PO96].  The keyfill and datafill use the same pad-with-length\n      technique\
    \ defined for mdfill.  This padding and length is\n      implicit, and does not\
    \ appear in the datagram.\n"
- title: 5.3.  DES-CBC
  contents:
  - "5.3.  DES-CBC\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   Attribute   |   \
    \ Length     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Attribute        8\n\
    \   Length           0\n   May be selected as an ESP Attribute-Choice, pursuant\
    \ to [RFC-1829] et\n   sequitur.  The selected Exchange-Scheme SHOULD provide\
    \ at least 56-\n   bits of cryptographic strength.\n   As described in [RFC-2522]\
    \ \"Session-Key Computation\", the most\n   significant 64-bits (8 bytes) of the\
    \ Key-Generation iteration are\n   used for the key, and the remainder are discarded.\
    \  Although\n   extremely rare, the 64 weak, semi-weak, and possibly weak keys\n\
    \   [Schneier95, pages 280-282] MUST be discarded.  The Key-Generation-\n   Function\
    \ is iterated until a valid key is obtained.\n   The least significant bit of\
    \ each key byte is ignored (or set to\n   parity when the implementation requires).\n\
    \   Profile:\n      When negotiated with Photuris, the transform differs slightly\
    \ from\n      [RFC-1829].\n      The 32-bit Security Parameters Index (SPI) field\
    \ is followed by a\n      32-bit Sequence Number (SN).\n      The 64-bit CBC IV\
    \ is generated from the 32-bit Security Parameters\n      Index (SPI) field followed\
    \ by (concatenated with) the 32-bit\n      Sequence Number (SN) field.  Then,\
    \ the bit-wise complement of the\n      32-bit Sequence Number (SN) value is XOR'd\
    \ with the first 32-bits\n      (SPI):\n         (SPI ^ -SN) || SN\n      The\
    \ Padding values begin with the value 1, and count up to the\n      number of\
    \ padding bytes.  For example, if the plaintext length is\n      41, the padding\
    \ values are 1, 2, 3, 4, 5, 6 and 7, plus any\n      additional obscuring padding.\n\
    \      The PadLength and PayloadType are not appended.  Instead, the\n      PayloadType\
    \ is indicated by the SPI, as specified by the ESP-\n      Attributes attribute\
    \ (#2).\n      After decryption, if the padding bytes are not the correct\n  \
    \    sequential values, then the payload is discarded, and a\n      \"Decryption\
    \ Failed\" error is indicated, as described in [RFC-\n      2521].\n"
- title: 5.4.  Invert (Decryption/Encryption)
  contents:
  - "5.4.  Invert (Decryption/Encryption)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Attribute   |    Length     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Attribute        9\n   Length           0\n   May be selected as an ESP Attribute-Choice,\
    \ immediately preceding an\n   encryption choice.  This indicates that the following\
    \ attribute is\n   inverted from encryption to decryption (or decryption to encryption)\n\
    \   as the attributes are processed.\n   For example, the combination\n      \"\
    DES-CBC\",\n      \"Invert\",\n      \"DES-CBC\",\n      \"DES-CBC\",\n   indicates\
    \ \"Triple DES\" outer-CBC EDE encryption (and DED decryption)\n   with three\
    \ keys [KR96] pursuant to [RFC-1851] et sequitur.  The\n   selected Exchange-Scheme\
    \ SHOULD provide at least 112-bits of\n   cryptographic strength.\n   As described\
    \ in [RFC-2522] \"Session-Key Computation\", the Key-\n   Generation-Function\
    \ is iterated (at least) three times to generate\n   the three independent keys,\
    \ in the order used for encryption.  The\n   most significant 64-bits (8 bytes)\
    \ of each iteration are used for\n   each successive key, and the remainder are\
    \ discarded.\n   Each key is examined sequentially, in the order used for encryption.\n\
    \   A key that is identical to any previous key MUST be discarded.  Any\n   weak\
    \ keys indicated for the algorithm MUST be discarded.  The Key-\n   Generation-Function\
    \ is iterated until a valid key is obtained before\n   generating the next key.\n\
    \   Profile:\n      When negotiated with Photuris, the \"DES-EDE3-CBC\" transform\n\
    \      differs slightly from [RFC-1851], in the same fashion as \"DES-CBC\"\n\
    \      (described earlier).\n"
- title: 5.5.  XOR Whitening
  contents:
  - "5.5.  XOR Whitening\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   Attribute \
    \  |    Length     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Attribute     \
    \   10\n   Length           0\n   May be selected as an ESP Attribute-Choice,\
    \ pursuant to [XEX3] et\n   sequitur.  The combination\n      \"XOR\",\n     \
    \ \"DES-CBC\",\n      \"XOR\",\n   indicates \"DESX\" encryption with three keys\
    \ [KR96].  The selected\n   Exchange-Scheme SHOULD provide at least 104-bits of\
    \ cryptographic\n   strength.\n   As described in [RFC-2522] \"Session-Key Computation\"\
    , the Key-\n   Generation-Function is iterated (at least) three times to generate\n\
    \   the three independent keys, in the order used for encryption.  The\n   most\
    \ significant bytes of each iteration are used for each successive\n   key, and\
    \ the remainder are discarded.\n   Note that this attribute may appear multiple\
    \ times in the same ESP\n   attribute list, both before and after an encryption\
    \ transform.  For\n   example,\n      \"XOR\",\n      \"DES-CBC\",\n      \"XOR\"\
    ,\n      \"Invert\",\n      \"DES-CBC\",\n      \"XOR\",\n      \"DES-CBC\",\n\
    \      \"XOR\",\n   would be one possible combination with Triple DES.\n"
- title: A.  Exchange-Scheme Selection
  contents:
  - "A.  Exchange-Scheme Selection\n   At first glance, there appear to be a large\
    \ number of exchange-\n   schemes.  In practice, the selection is simple to automate.\n\
    \   Each scheme indicates a needed strength.  This strength is based upon\n  \
    \ the functions used in protecting the Photuris Exchanges themselves.\n   Each\
    \ keyed attribute also indicates a needed strength.  This strength\n   is based\
    \ upon its cryptographic functions.\n   Because the usage of these functions is\
    \ orthogonal, the same strength\n   value can select an appropriate scheme that\
    \ meets the needs of both\n   features.\n"
- title: A.1.  Responder
  contents:
  - "A.1.  Responder\n   The attributes to be offered to the particular Initiator\
    \ are\n   examined.  For each level of strength specified, a scheme that meets\n\
    \   or exceeds the requirements is offered.\n   For example, a Responder offering\
    \ MD5-IPMAC and SHA1-IPMAC might\n   offer scheme #2 with a 512-bit modulus and\
    \ a 1024-bit modulus, and\n   scheme #4 with a zero Size (indicating moduli of\
    \ #2).\n"
- title: A.2.  Initiator
  contents:
  - "A.2.  Initiator\n   The strength indicated by the application for the Security\n\
    \   Association, together with the party privacy policy of the system\n   operator,\
    \ is used to select from the offered schemes.  The strength\n   indicates the\
    \ minimal level to be chosen, while the party privacy\n   policy indicates whether\
    \ to choose the minimal or maximal level of\n   available protection.\n   For\
    \ example, an application might indicate that it desires 80-bits of\n   strength.\
    \  In that case, only the 1024-bit modulus would be\n   appropriate.  The party\
    \ privacy policy of the system operator would\n   indicate whether to choose scheme\
    \ #2 with \"Simple Masking\" or scheme\n   #4 with \"DES-CBC over Mask\".\n  \
    \ Alternatively, an application might indicate that it desires 64-bits\n   of\
    \ strength.  The party privacy policy of the system operator would\n   indicate\
    \ whether to choose scheme #2 with the 512-bit modulus, or\n   scheme #4 with\
    \ the 1024-bit modulus.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Provision for multiple generators does not enhance\
    \ the security of\n   the Photuris protocol exchange itself.  Rather, it provides\
    \ an\n   opportunity for novelty of moduli, by allowing more forms of moduli\n\
    \   to be used.  An abundance of moduli inhibits a determined attacker\n   from\
    \ pre-calculating moduli exchange values, and discourages\n   dedication of resources\
    \ for analysis of any particular modulus.  That\n   is, this protects the community\
    \ of Photuris users.\n   In addition to preventing various attacks by protecting\
    \ verification\n   fields, the masking of the message plaintext before encryption\
    \ is\n   intended to obscure the relation of the number of parties and SPIs\n\
    \   active between two IP nodes.  The privacy mask dependency on the SPI\n   and\
    \ SPILT generates a different initial encrypted block for every SPI\n   creation\
    \ message.\n   This obscurement would be less effective when the SPI and SPILT\
    \ are\n   invariant or are not created for a particular exchange direction.\n\
    \   The number of parties could be revealed by the number of exchanges\n   with\
    \ differences in the initial encrypted blocks.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Phil Karn was principally responsible for the design of\
    \ party privacy\n   protection, and provided much of the design rationale text\
    \ (now\n   removed to a separate document).\n   William Simpson was responsible\
    \ for the packet formats, and\n   additional Exchange-Schemes, editing and formatting.\
    \  All such\n   mistakes are his responsibity.\n   Use of encryption for privacy\
    \ protection is also found in the\n   Station-To-Station authentication protocol\
    \ [DOW92].\n   Bart Preneel and Paul C van Oorschot in [PO96] recommended padding\n\
    \   between the data and trailing key when hashing for authentication.\n   Niels\
    \ Provos developed the first implementation with multiple schemes\n   and multiple\
    \ moduli per scheme (circa July 1997).\n   Special thanks to the Center for Information\
    \ Technology Integration\n   (CITI) for providing computing resources.\n"
- title: References
  contents:
  - "References\n   [DBP96]     Dobbertin, H., Bosselaers, A., and Preneel, B., \"\
    RIPEMD-\n               160: a strengthened version of RIPEMD\", Fast Software\n\
    \               Encryption, Third International Workshop, Lecture Notes\n    \
    \           in Computer Science 1039 (1996), Springer-Verlag, pages\n        \
    \       71-82.\n               See also corrections at\n               ftp://ftp.esat.kuleuven.ac.be/pub/COSIC/bosselae/ripemd/.\n\
    \   [DOW92]     Whitfield Diffie, Paul C van Oorshot, and Michael J\n        \
    \       Wiener, \"Authentication and Authenticated Key Exchanges\",\n        \
    \       Designs, Codes and Cryptography, v 2 pp 107-125, Kluwer\n            \
    \   Academic Publishers, 1992.\n   [FIPS-180-1]\n               \"Secure Hash\
    \ Standard\", National Institute of Standards\n               and Technology,\
    \ U.S. Department Of Commerce, April 1995.\n               Also known as: 59 Fed\
    \ Reg 35317 (1994).\n   [KR96]      Kaliski, B., and Robshaw, M., \"Multiple Encryption:\n\
    \               Weighing Security and Performance\", Dr. Dobbs Journal,\n    \
    \           January 1996.\n   [PO96]      Bart Preneel, and Paul C van Oorshot,\
    \ \"On the security of\n               two MAC algorithms\", Advances in Cryptology\
    \ -- Eurocrypt\n               '96, Lecture Notes in Computer Science 1070 (May\
    \ 1996),\n               Springer-Verlag, pages 19-32.\n   [RFC-1829]  Karn, P.,\
    \ Metzger, P., Simpson, W., \"The ESP DES-CBC\n               Transform\", July\
    \ 1995.\n   [RFC-1850]  Karn, P., Metzger, P., Simpson, W., \"The ESP Triple DES\n\
    \               Transform\", September 1995.\n   [RFC-1851]  Metzger, P., Simpson,\
    \ W., \"IP Authentication using Keyed\n               SHA\", September 1995.\n\
    \   [RFC-2521]  Karn, P., and Simpson, W., \"ICMP Security Failures\n        \
    \       Messages\", March 1999.\n   [RFC-2522]  Karn, P., and Simpson, W., \"\
    Photuris: Session-Key\n               Management Protocol\", March 1999.\n   [XEX3]\
    \      Simpson, W., Baldwin, R., \"The ESP DES-XEX3-CBC\n               Transform\"\
    , Work In Progress, June 1997.\n"
- title: Contacts
  contents:
  - "Contacts\n   Comments about this document should be discussed on the\n   photuris@adk.gr\
    \ mailing list.\n   Questions about this document can also be directed to:\n \
    \     Phil Karn\n      Qualcomm, Inc.\n      6455 Lusk Blvd.\n      San Diego,\
    \ California  92121-2779\n          karn@qualcomm.com\n          karn@unix.ka9q.ampr.org\
    \ (preferred)\n      William Allen Simpson\n      DayDreamer\n      Computer Systems\
    \ Consulting Services\n      1384 Fontaine\n      Madison Heights, Michigan  48071\n\
    \          wsimpson@UMich.edu\n          wsimpson@GreenDragon.com (preferred)\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  Copyright\
    \ (C) Philip Karn\n   and William Allen Simpson (1994-1999).  All Rights Reserved.\n\
    \   This document and translations of it may be copied and furnished to\n   others,\
    \ and derivative works that comment on or otherwise explain it\n   or assist in\
    \ its implementation may be prepared, copied, published\n   and distributed, in\
    \ whole or in part, without restriction of any\n   kind, provided that the above\
    \ copyright notice and this paragraph are\n   included on all such copies and\
    \ derivative works.  However, this\n   document itself may not be modified in\
    \ any way, such as by removing\n   the copyright notice or references to the Internet\
    \ Society or other\n   Internet organizations, except as needed for the purpose\
    \ of\n   developing Internet standards (in which case the procedures for\n   copyrights\
    \ defined in the Internet Standards process must be\n   followed), or as required\
    \ to translate it into languages other than\n   English.\n   The limited permissions\
    \ granted above are perpetual and will not be\n   revoked by the Internet Society\
    \ or its successors or assigns.\n   This document and the information contained\
    \ herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY AND THE\
    \ INTERNET ENGINEERING\n   TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\
    \ INCLUDING\n   (BUT NOT LIMITED TO) ANY WARRANTY THAT THE USE OF THE INFORMATION\n\
    \   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
