- title: __initial_text__
  contents:
  - "             Lightweight Directory Access Protocol (LDAP):\n              String\
    \ Representation of Distinguished Names\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   The X.500 Directory uses distinguished names (DNs) as primary keys\
    \ to\n   entries in the directory.  This document defines the string\n   representation\
    \ used in the Lightweight Directory Access Protocol\n   (LDAP) to transfer distinguished\
    \ names.  The string representation is\n   designed to give a clean representation\
    \ of commonly used\n   distinguished names, while being able to represent any\
    \ distinguished\n   name.\n"
- title: 1.  Background and Intended Usage
  contents:
  - "1.  Background and Intended Usage\n   In X.500-based directory systems [X.500],\
    \ including those accessed\n   using the Lightweight Directory Access Protocol\
    \ (LDAP) [RFC4510],\n   distinguished names (DNs) are used to unambiguously refer\
    \ to\n   directory entries [X.501][RFC4512].\n   The structure of a DN [X.501]\
    \ is described in terms of ASN.1 [X.680].\n   In the X.500 Directory Access Protocol\
    \ [X.511] (and other ITU-defined\n   directory protocols), DNs are encoded using\
    \ the Basic Encoding Rules\n   (BER) [X.690].  In LDAP, DNs are represented in\
    \ the string form\n   described in this document.\n   It is important to have\
    \ a common format to be able to unambiguously\n   represent a distinguished name.\
    \  The primary goal of this\n   specification is ease of encoding and decoding.\
    \  A secondary goal is\n   to have names that are human readable.  It is not expected\
    \ that LDAP\n   implementations with a human user interface would display these\n\
    \   strings directly to the user, but that they would most likely be\n   performing\
    \ translations (such as expressing attribute type names in\n   the local national\
    \ language).\n   This document defines the string representation of Distinguished\n\
    \   Names used in LDAP [RFC4511][RFC4517].  Section 2 details the\n   RECOMMENDED\
    \ algorithm for converting a DN from its ASN.1 structured\n   representation to\
    \ a string.  Section 3 details how to convert a DN\n   from a string to an ASN.1\
    \ structured representation.\n   While other documents may define other algorithms\
    \ for converting a DN\n   from its ASN.1 structured representation to a string,\
    \ all algorithms\n   MUST produce strings that adhere to the requirements of Section\
    \ 3.\n   This document does not define a canonical string representation for\n\
    \   DNs.  Comparison of DNs for equality is to be performed in accordance\n  \
    \ with the distinguishedNameMatch matching rule [RFC4517].\n   This document is\
    \ a integral part of the LDAP technical specification\n   [RFC4510], which obsoletes\
    \ the previously defined LDAP technical\n   specification, RFC 3377, in its entirety.\
    \  This document obsoletes\n   RFC 2253.  Changes since RFC 2253 are summarized\
    \ in Appendix B.\n   This specification assumes familiarity with X.500 [X.500]\
    \ and the\n   concept of Distinguished Name [X.501][RFC4512].\n"
- title: 1.1.  Conventions
  contents:
  - "1.1.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ BCP 14 [RFC2119].\n   Character names in this document use the notation for\
    \ code points and\n   names from the Unicode Standard [Unicode].  For example,\
    \ the letter\n   \"a\" may be represented as either <U+0061> or <LATIN SMALL LETTER\
    \ A>.\n   Note: a glossary of terms used in Unicode can be found in [Glossary].\n\
    \   Information on the Unicode character encoding model can be found in\n   [CharModel].\n"
- title: 2.  Converting DistinguishedName from ASN.1 to a String
  contents:
  - "2.  Converting DistinguishedName from ASN.1 to a String\n   X.501 [X.501] defines\
    \ the ASN.1 [X.680] structure of distinguished\n   name.  The following is a variant\
    \ provided for discussion purposes.\n      DistinguishedName ::= RDNSequence\n\
    \      RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n      RelativeDistinguishedName\
    \ ::= SET SIZE (1..MAX) OF\n          AttributeTypeAndValue\n      AttributeTypeAndValue\
    \ ::= SEQUENCE {\n          type  AttributeType,\n          value AttributeValue\
    \ }\n   This section defines the RECOMMENDED algorithm for converting a\n   distinguished\
    \ name from an ASN.1-structured representation to a UTF-8\n   [RFC3629] encoded\
    \ Unicode [Unicode] character string representation.\n   Other documents may describe\
    \ other algorithms for converting a\n   distinguished name to a string, but only\
    \ strings that conform to the\n   grammar defined in Section 3 SHALL be produced\
    \ by LDAP\n   implementations.\n"
- title: 2.1.  Converting the RDNSequence
  contents:
  - "2.1.  Converting the RDNSequence\n   If the RDNSequence is an empty sequence,\
    \ the result is the empty or\n   zero-length string.\n   Otherwise, the output\
    \ consists of the string encodings of each\n   RelativeDistinguishedName in the\
    \ RDNSequence (according to Section\n   2.2), starting with the last element of\
    \ the sequence and moving\n   backwards toward the first.\n   The encodings of\
    \ adjoining RelativeDistinguishedNames are separated\n   by a comma (',' U+002C)\
    \ character.\n"
- title: 2.2.  Converting RelativeDistinguishedName
  contents:
  - "2.2.  Converting RelativeDistinguishedName\n   When converting from an ASN.1\
    \ RelativeDistinguishedName to a string,\n   the output consists of the string\
    \ encodings of each\n   AttributeTypeAndValue (according to Section 2.3), in any\
    \ order.\n   Where there is a multi-valued RDN, the outputs from adjoining\n \
    \  AttributeTypeAndValues are separated by a plus sign ('+' U+002B)\n   character.\n"
- title: 2.3.  Converting AttributeTypeAndValue
  contents:
  - "2.3.  Converting AttributeTypeAndValue\n   The AttributeTypeAndValue is encoded\
    \ as the string representation of\n   the AttributeType, followed by an equals\
    \ sign ('=' U+003D) character,\n   followed by the string representation of the\
    \ AttributeValue.  The\n   encoding of the AttributeValue is given in Section\
    \ 2.4.\n   If the AttributeType is defined to have a short name (descriptor)\n\
    \   [RFC4512] and that short name is known to be registered [REGISTRY]\n   [RFC4520]\
    \ as identifying the AttributeType, that short name, a\n   <descr>, is used. \
    \ Otherwise the AttributeType is encoded as the\n   dotted-decimal encoding, a\
    \ <numericoid>, of its OBJECT IDENTIFIER.\n   The <descr> and <numericoid> are\
    \ defined in [RFC4512].\n   Implementations are not expected to dynamically update\
    \ their\n   knowledge of registered short names.  However, implementations SHOULD\n\
    \   provide a mechanism to allow their knowledge of registered short\n   names\
    \ to be updated.\n"
- title: 2.4.  Converting an AttributeValue from ASN.1 to a String
  contents:
  - "2.4.  Converting an AttributeValue from ASN.1 to a String\n   If the AttributeType\
    \ is of the dotted-decimal form, the\n   AttributeValue is represented by an number\
    \ sign ('#' U+0023)\n   character followed by the hexadecimal encoding of each\
    \ of the octets\n   of the BER encoding of the X.500 AttributeValue.  This form\
    \ is also\n   used when the syntax of the AttributeValue does not have an LDAP-\n\
    \   specific ([RFC4517], Section 3.1) string encoding defined for it, or\n   the\
    \ LDAP-specific string encoding is not restricted to UTF-8-encoded\n   Unicode\
    \ characters.  This form may also be used in other cases, such\n   as when a reversible\
    \ string representation is desired (see Section\n   5.2).\n   Otherwise, if the\
    \ AttributeValue is of a syntax that has a LDAP-\n   specific string encoding,\
    \ the value is converted first to a UTF-8-\n   encoded Unicode string according\
    \ to its syntax specification (see\n   [RFC4517], Section 3.3, for examples).\
    \  If that UTF-8-encoded Unicode\n   string does not have any of the following\
    \ characters that need\n   escaping, then that string can be used as the string\
    \ representation\n   of the value.\n      - a space (' ' U+0020) or number sign\
    \ ('#' U+0023) occurring at\n        the beginning of the string;\n      - a space\
    \ (' ' U+0020) character occurring at the end of the\n        string;\n      -\
    \ one of the characters '\"', '+', ',', ';', '<', '>',  or '\\'\n        (U+0022,\
    \ U+002B, U+002C, U+003B, U+003C, U+003E, or U+005C,\n        respectively);\n\
    \      - the null (U+0000) character.\n   Other characters may be escaped.\n \
    \  Each octet of the character to be escaped is replaced by a backslash\n   and\
    \ two hex digits, which form a single octet in the code of the\n   character.\
    \  Alternatively, if and only if the character to be escaped\n   is one of\n \
    \     ' ', '\"', '#', '+', ',', ';', '<', '=', '>', or '\\'\n      (U+0020, U+0022,\
    \ U+0023, U+002B, U+002C, U+003B,\n       U+003C, U+003D, U+003E, U+005C, respectively)\n\
    \   it can be prefixed by a backslash ('\\' U+005C).\n   Examples of the escaping\
    \ mechanism are shown in Section 4.\n"
- title: 3.  Parsing a String Back to a Distinguished Name
  contents:
  - "3.  Parsing a String Back to a Distinguished Name\n   The string representation\
    \ of Distinguished Names is restricted to\n   UTF-8 [RFC3629] encoded Unicode\
    \ [Unicode] characters.  The structure\n   of this string representation is specified\
    \ using the following\n   Augmented BNF [RFC4234] grammar:\n      distinguishedName\
    \ = [ relativeDistinguishedName\n          *( COMMA relativeDistinguishedName\
    \ ) ]\n      relativeDistinguishedName = attributeTypeAndValue\n          *( PLUS\
    \ attributeTypeAndValue )\n      attributeTypeAndValue = attributeType EQUALS\
    \ attributeValue\n      attributeType = descr / numericoid\n      attributeValue\
    \ = string / hexstring\n      ; The following characters are to be escaped when\
    \ they appear\n      ; in the value to be encoded: ESC, one of <escaped>, leading\n\
    \      ; SHARP or SPACE, trailing SPACE, and NULL.\n      string =   [ ( leadchar\
    \ / pair ) [ *( stringchar / pair )\n         ( trailchar / pair ) ] ]\n     \
    \ leadchar = LUTF1 / UTFMB\n      LUTF1 = %x01-1F / %x21 / %x24-2A / %x2D-3A /\n\
    \         %x3D / %x3F-5B / %x5D-7F\n      trailchar  = TUTF1 / UTFMB\n      TUTF1\
    \ = %x01-1F / %x21 / %x23-2A / %x2D-3A /\n         %x3D / %x3F-5B / %x5D-7F\n\
    \      stringchar = SUTF1 / UTFMB\n      SUTF1 = %x01-21 / %x23-2A / %x2D-3A /\n\
    \         %x3D / %x3F-5B / %x5D-7F\n      pair = ESC ( ESC / special / hexpair\
    \ )\n      special = escaped / SPACE / SHARP / EQUALS\n      escaped = DQUOTE\
    \ / PLUS / COMMA / SEMI / LANGLE / RANGLE\n      hexstring = SHARP 1*hexpair\n\
    \      hexpair = HEX HEX\n   where the productions <descr>, <numericoid>, <COMMA>,\
    \ <DQUOTE>,\n   <EQUALS>, <ESC>, <HEX>, <LANGLE>, <NULL>, <PLUS>, <RANGLE>, <SEMI>,\n\
    \   <SPACE>, <SHARP>, and <UTFMB> are defined in [RFC4512].\n   Each <attributeType>,\
    \ either a <descr> or a <numericoid>, refers to\n   an attribute type of an attribute\
    \ value assertion (AVA).  The\n   <attributeType> is followed by an <EQUALS> and\
    \ an <attributeValue>.\n   The <attributeValue> is either in <string> or <hexstring>\
    \ form.\n   If in <string> form, a LDAP string representation asserted value can\n\
    \   be obtained by replacing (left to right, non-recursively) each <pair>\n  \
    \ appearing in the <string> as follows:\n      replace <ESC><ESC> with <ESC>;\n\
    \      replace <ESC><special> with <special>;\n      replace <ESC><hexpair> with\
    \ the octet indicated by the <hexpair>.\n   If in <hexstring> form, a BER representation\
    \ can be obtained from\n   converting each <hexpair> of the <hexstring> to the\
    \ octet indicated\n   by the <hexpair>.\n   There is one or more attribute value\
    \ assertions, separated by <PLUS>,\n   for a relative distinguished name.\n  \
    \ There is zero or more relative distinguished names, separated by\n   <COMMA>,\
    \ for a distinguished name.\n   Implementations MUST recognize AttributeType name\
    \ strings\n   (descriptors) listed in the following table, but MAY recognize other\n\
    \   name strings.\n      String  X.500 AttributeType\n      ------  --------------------------------------------\n\
    \      CN      commonName (2.5.4.3)\n      L       localityName (2.5.4.7)\n  \
    \    ST      stateOrProvinceName (2.5.4.8)\n      O       organizationName (2.5.4.10)\n\
    \      OU      organizationalUnitName (2.5.4.11)\n      C       countryName (2.5.4.6)\n\
    \      STREET  streetAddress (2.5.4.9)\n      DC      domainComponent (0.9.2342.19200300.100.1.25)\n\
    \      UID     userId (0.9.2342.19200300.100.1.1)\n   These attribute types are\
    \ described in [RFC4519].\n   Implementations MAY recognize other DN string representations.\n\
    \   However, as there is no requirement that alternative DN string\n   representations\
    \ be recognized (and, if so, how), implementations\n   SHOULD only generate DN\
    \ strings in accordance with Section 2 of this\n   document.\n"
- title: 4.  Examples
  contents:
  - "4.  Examples\n   This notation is designed to be convenient for common forms\
    \ of name.\n   This section gives a few examples of distinguished names written\n\
    \   using this notation.  First is a name containing three relative\n   distinguished\
    \ names (RDNs):\n      UID=jsmith,DC=example,DC=net\n   Here is an example of\
    \ a name containing three RDNs, in which the\n   first RDN is multi-valued:\n\
    \      OU=Sales+CN=J.  Smith,DC=example,DC=net\n   This example shows the method\
    \ of escaping of a special characters\n   appearing in a common name:\n      CN=James\
    \ \\\"Jim\\\" Smith\\, III,DC=example,DC=net\n   The following shows the method\
    \ for encoding a value that contains a\n   carriage return character:\n      CN=Before\\\
    0dAfter,DC=example,DC=net\n   In this RDN example, the type in the RDN is unrecognized,\
    \ and the\n   value is the BER encoding of an OCTET STRING containing two octets,\n\
    \   0x48 and 0x69.\n      1.3.6.1.4.1.1466.0=#04024869\n   Finally, this example\
    \ shows an RDN whose commonName value consists of\n   5 letters:\n      Unicode\
    \ Character                Code       UTF-8   Escaped\n      -------------------------------\
    \  ------     ------  --------\n      LATIN CAPITAL LETTER L           U+004C\
    \     0x4C    L\n      LATIN SMALL LETTER U             U+0075     0x75    u\n\
    \      LATIN SMALL LETTER C WITH CARON  U+010D     0xC48D  \\C4\\8D\n      LATIN\
    \ SMALL LETTER I             U+0069     0x69    i\n      LATIN SMALL LETTER C\
    \ WITH ACUTE  U+0107     0xC487  \\C4\\87\n   This could be encoded in printable\
    \ ASCII [ASCII] (useful for\n   debugging purposes) as:\n      CN=Lu\\C4\\8Di\\\
    C4\\87\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The following security considerations are specific\
    \ to the handling of\n   distinguished names.  LDAP security considerations are\
    \ discussed in\n   [RFC4511] and other documents comprising the LDAP Technical\n\
    \   Specification [RFC4510].\n"
- title: 5.1.  Disclosure
  contents:
  - "5.1.  Disclosure\n   Distinguished Names typically consist of descriptive information\n\
    \   about the entries they name, which can be people, organizations,\n   devices,\
    \ or other real-world objects.  This frequently includes some\n   of the following\
    \ kinds of information:\n      - the common name of the object (i.e., a person's\
    \ full name)\n      - an email or TCP/IP address\n      - its physical location\
    \ (country, locality, city, street address)\n      - organizational attributes\
    \ (such as department name or\n        affiliation)\n   In some cases, such information\
    \ can be considered sensitive.  In many\n   countries, privacy laws exist that\
    \ prohibit disclosure of certain\n   kinds of descriptive information (e.g., email\
    \ addresses).  Hence,\n   server implementers are encouraged to support Directory\
    \ Information\n   Tree (DIT) structural rules and name forms [RFC4512], as these\n\
    \   provide a mechanism for administrators to select appropriate naming\n   attributes\
    \ for entries.  Administrators are encouraged to use\n   mechanisms, access controls,\
    \ and other administrative controls that\n   may be available to restrict use\
    \ of attributes containing sensitive\n   information in naming of entries.   Additionally,\
    \ use of\n   authentication and data security services in LDAP [RFC4513][RFC4511]\n\
    \   should be considered.\n"
- title: 5.2.  Use of Distinguished Names in Security Applications
  contents:
  - "5.2.  Use of Distinguished Names in Security Applications\n   The transformations\
    \ of an AttributeValue value from its X.501 form to\n   an LDAP string representation\
    \ are not always reversible back to the\n   same BER (Basic Encoding Rules) or\
    \ DER (Distinguished Encoding Rules)\n   form.  An example of a situation that\
    \ requires the DER form of a\n   distinguished name is the verification of an\
    \ X.509 certificate.\n   For example, a distinguished name consisting of one RDN\
    \ with one AVA,\n   in which the type is commonName and the value is of the TeletexString\n\
    \   choice with the letters 'Sam', would be represented in LDAP as the\n   string\
    \ <CN=Sam>.  Another distinguished name in which the value is\n   still 'Sam',\
    \ but is of the PrintableString choice, would have the\n   same representation\
    \ <CN=Sam>.\n   Applications that require the reconstruction of the DER form of\
    \ the\n   value SHOULD NOT use the string representation of attribute syntaxes\n\
    \   when converting a distinguished name to the LDAP format.  Instead,\n   they\
    \ SHOULD use the hexadecimal form prefixed by the number sign ('#'\n   U+0023)\
    \ as described in the first paragraph of Section 2.4.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document is an update to RFC 2253, by Mark Wahl,\
    \ Tim Howes, and\n   Steve Kille.  RFC 2253 was a product of the IETF ASID Working\
    \ Group.\n   This document is a product of the IETF LDAPBIS Working Group.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [REGISTRY]    IANA, Object Identifier Descriptors\
    \ Registry,\n                 <http://www.iana.org/assignments/ldap-parameters>.\n\
    \   [Unicode]     The Unicode Consortium, \"The Unicode Standard, Version\n  \
    \               3.2.0\" is defined by \"The Unicode Standard, Version\n      \
    \           3.0\" (Reading, MA, Addison-Wesley, 2000.  ISBN 0-201-\n         \
    \        61633-5), as amended by the \"Unicode Standard Annex\n              \
    \   #27: Unicode 3.1\"\n                 (http://www.unicode.org/reports/tr27/)\
    \ and by the\n                 \"Unicode Standard Annex #28: Unicode 3.2\"\n \
    \                (http://www.unicode.org/reports/tr28/).\n   [X.501]       International\
    \ Telecommunication Union -\n                 Telecommunication Standardization\
    \ Sector, \"The\n                 Directory -- Models,\" X.501(1993) (also ISO/IEC\
    \ 9594-\n                 2:1994).\n   [X.680]       International Telecommunication\
    \ Union -\n                 Telecommunication Standardization Sector, \"Abstract\n\
    \                 Syntax Notation One (ASN.1) - Specification of Basic\n     \
    \            Notation\", X.680(1997) (also ISO/IEC 8824-1:1998).\n   [RFC2119]\
    \     Bradner, S., \"Key words for use in RFCs to Indicate\n                 Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3629]     Yergeau, F., \"UTF-8,\
    \ a transformation format of ISO\n                 10646\", STD 63, RFC 3629,\
    \ November 2003.\n   [RFC4234]     Crocker, D. and P. Overell, \"Augmented BNF\
    \ for Syntax\n                 Specifications: ABNF\", RFC 4234, October 2005.\n\
    \   [RFC4510]     Zeilenga, K., Ed., \"Lightweight Directory Access\n        \
    \         Protocol (LDAP): Technical Specification Road Map\", RFC\n         \
    \        4510, June 2006.\n   [RFC4511]     Sermersheim, J., Ed., \"Lightweight\
    \ Directory Access\n                 Protocol (LDAP): The Protocol\", RFC 4511,\
    \ June 2006.\n   [RFC4512]     Zeilenga, K., \"Lightweight Directory Access Protocol\n\
    \                 (LDAP): Directory Information Models\", RFC 4512, June\n   \
    \              2006.\n   [RFC4513]     Harrison, R., Ed., \"Lightweight Directory\
    \ Access\n                 Protocol (LDAP): Authentication Methods and Security\n\
    \                 Mechanisms\", RFC 4513, June 2006.\n   [RFC4517]     Legg, S.,\
    \ Ed., \"Lightweight Directory Access Protocol\n                 (LDAP): Syntaxes\
    \ and Matching Rules\", RFC 4517, June\n                 2006.\n   [RFC4519] \
    \    Sciberras, A., Ed., \"Lightweight Directory Access\n                 Protocol\
    \ (LDAP): Schema for User Applications\", RFC\n                 4519, June 2006.\n\
    \   [RFC4520]     Zeilenga, K., \"Internet Assigned Numbers Authority\n      \
    \           (IANA) Considerations for the Lightweight Directory\n            \
    \     Access Protocol (LDAP)\", BCP 64, RFC 4520, June 2006.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [ASCII]       Coded Character Set--7-bit American\
    \ Standard Code for\n                 Information Interchange, ANSI X3.4-1986.\n\
    \   [CharModel]   Whistler, K. and M. Davis, \"Unicode Technical Report\n    \
    \             #17, Character Encoding Model\", UTR17,\n                 <http://www.unicode.org/unicode/reports/tr17/>,\
    \ August\n                 2000.\n   [Glossary]    The Unicode Consortium, \"\
    Unicode Glossary\",\n                 <http://www.unicode.org/glossary/>.\n  \
    \ [X.500]       International Telecommunication Union -\n                 Telecommunication\
    \ Standardization Sector, \"The\n                 Directory -- Overview of concepts,\
    \ models and\n                 services,\" X.500(1993) (also ISO/IEC 9594-1:1994).\n\
    \   [X.511]       International Telecommunication Union -\n                 Telecommunication\
    \ Standardization Sector, \"The\n                 Directory: Abstract Service\
    \ Definition\", X.511(1993)\n                 (also ISO/IEC 9594-3:1993).\n  \
    \ [X.690]       International Telecommunication Union -\n                 Telecommunication\
    \ Standardization Sector,\n                 \"Specification of ASN.1 encoding\
    \ rules: Basic Encoding\n                 Rules (BER), Canonical Encoding Rules\
    \ (CER), and\n                 Distinguished Encoding Rules (DER)\", X.690(1997)\
    \ (also\n                 ISO/IEC 8825-1:1998).\n   [RFC2849]     Good, G., \"\
    The LDAP Data Interchange Format (LDIF) -\n                 Technical Specification\"\
    , RFC 2849, June 2000.\n"
- title: Appendix A.  Presentation Issues
  contents:
  - "Appendix A.  Presentation Issues\n   This appendix is provided for informational\
    \ purposes only; it is not\n   a normative part of this specification.\n   The\
    \ string representation described in this document is not intended\n   to be presented\
    \ to humans without translation.  However, at times it\n   may be desirable to\
    \ present non-translated DN strings to users.  This\n   section discusses presentation\
    \ issues associated with non-translated\n   DN strings.  Issues with presentation\
    \ of translated DN strings are\n   not discussed in this appendix.  Transcoding\
    \ issues are also not\n   discussed in this appendix.\n   This appendix provides\
    \ guidance for applications presenting DN\n   strings to users.  This section\
    \ is not comprehensive; it does not\n   discuss all presentation issues that implementers\
    \ may face.\n   Not all user interfaces are capable of displaying the full set\
    \ of\n   Unicode characters.  Some Unicode characters are not displayable.\n \
    \  It is recommended that human interfaces use the optional hex pair\n   escaping\
    \ mechanism (Section 2.3) to produce a string representation\n   suitable for\
    \ display to the user.  For example, an application can\n   generate a DN string\
    \ for display that escapes all non-printable\n   characters appearing in the AttributeValue's\
    \ string representation\n   (as demonstrated in the final example of Section 4).\n\
    \   When a DN string is displayed in free-form text, it is often\n   necessary\
    \ to distinguish the DN string from surrounding text.  While\n   this is often\
    \ done with whitespace (as demonstrated in Section 4), it\n   is noted that DN\
    \ strings may end with whitespace.  Careful readers of\n   Section 3 will note\
    \ that the characters '<' (U+003C) and '>' (U+003E)\n   may only appear in the\
    \ DN string if escaped.  These characters are\n   intended to be used in free-form\
    \ text to distinguish a DN string from\n   surrounding text.  For example, <CN=Sam\\\
    \ > distinguishes the string\n   representation of the DN composed of one RDN\
    \ consisting of the AVA\n   (the commonName (CN) value 'Sam ') from the surrounding\
    \ text.  It\n   should be noted to the user that the wrapping '<' and '>' characters\n\
    \   are not part of the DN string.\n   DN strings can be quite long.  It is often\
    \ desirable to line-wrap\n   overly long DN strings in presentations.  Line wrapping\
    \ should be\n   done by inserting whitespace after the RDN separator character\
    \ or, if\n   necessary, after the AVA separator character.  It should be noted\
    \ to\n   the user that the inserted whitespace is not part of the DN string\n\
    \   and is to be removed before use in LDAP.  For example, the following\n   DN\
    \ string is long:\n         CN=Kurt D.  Zeilenga,OU=Engineering,L=Redwood Shores,\n\
    \         O=OpenLDAP Foundation,ST=California,C=US\n   So it has been line-wrapped\
    \ for readability.  The extra whitespace is\n   to be removed before the DN string\
    \ is used in LDAP.\n   Inserting whitespace is not advised because it may not\
    \ be obvious to\n   the user which whitespace is part of the DN string and which\n\
    \   whitespace was added for readability.\n   Another alternative is to use the\
    \ LDAP Data Interchange Format (LDIF)\n   [RFC2849].  For example:\n         #\
    \ This entry has a long DN...\n         dn: CN=Kurt D.  Zeilenga,OU=Engineering,L=Redwood\
    \ Shores,\n          O=OpenLDAP Foundation,ST=California,C=US\n         CN: Kurt\
    \ D.  Zeilenga\n         SN: Zeilenga\n         objectClass: person\n"
- title: Appendix B.  Changes Made since RFC 2253
  contents:
  - "Appendix B.  Changes Made since RFC 2253\n   This appendix is provided for informational\
    \ purposes only, it is not\n   a normative part of this specification.\n   The\
    \ following substantive changes were made to RFC 2253:\n      - Removed IESG Note.\
    \  The IESG Note has been addressed.\n      - Replaced all references to ISO 10646-1\
    \ with [Unicode].\n      - Clarified (in Section 1) that this document does not\
    \ define a\n        canonical string representation.\n      - Clarified that Section\
    \ 2 describes the RECOMMENDED encoding\n        algorithm and that alternative\
    \ algorithms are allowed.  Some\n        encoding options described in RFC 2253\
    \ are now treated as\n        alternative algorithms in this specification.\n\
    \      - Revised specification (in Section 2) to allow short names of any\n  \
    \      registered attribute type to appear in string representations of\n    \
    \    DNs instead of being restricted to a \"published table\".  Removed\n    \
    \    \"as an example\" language.  Added statement (in Section 3)\n        allowing\
    \ recognition of additional names but require recognition\n        of those names\
    \ in the published table.  The table now appears in\n        Section 3.\n    \
    \  - Removed specification of additional requirements for LDAPv2\n        implementations\
    \ which also support LDAPv3 (RFC 2253, Section 4)\n        as LDAPv2 is now Historic.\n\
    \      - Allowed recognition of alternative string representations.\n      - Updated\
    \ Section 2.4 to allow hex pair escaping of all characters\n        and clarified\
    \ escaping for when multiple octet UTF-8 encodings\n        are present.  Indicated\
    \ that null (U+0000) character is to be\n        escaped.  Indicated that equals\
    \ sign ('=' U+003D) character may\n        be escaped as '\\='.\n      - Rewrote\
    \ Section 3 to use ABNF as defined in RFC 4234.\n      - Updated the Section 3\
    \ ABNF.  Changes include:\n        + allowed AttributeType short names of length\
    \ 1 (e.g., 'L'),\n        + used more restrictive <oid> production in AttributeTypes,\n\
    \        + did not require escaping of equals sign ('=' U+003D)\n          characters,\n\
    \        + did not require escaping of non-leading number sign ('#'\n        \
    \  U+0023) characters,\n        + allowed space (' ' U+0020) to be escaped as\
    \ '\\ ',\n        + required hex escaping of null (U+0000) characters, and\n \
    \       + removed LDAPv2-only constructs.\n      - Updated Section 3 to describe\
    \ how to parse elements of the\n        grammar.\n      - Rewrote examples.\n\
    \      - Added reference to documentations containing general LDAP\n        security\
    \ considerations.\n      - Added discussion of presentation issues (Appendix A).\n\
    \      - Added this appendix.\n   In addition, numerous editorial changes were\
    \ made.\n"
- title: Editor's Address
  contents:
  - "Editor's Address\n   Kurt D.  Zeilenga\n   OpenLDAP Foundation\n   EMail: Kurt@OpenLDAP.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
