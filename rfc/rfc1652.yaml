- title: __initial_text__
  contents:
  - '             SMTP Service Extension for 8bit-MIMEtransport

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines an extension to the SMTP service whereby an SMTP\n\
    \   content body consisting of text containing octets outside of the US-\n   ASCII\
    \ octet range (hex 00-7F) may be relayed using SMTP.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Although SMTP is widely and robustly deployed, various extensions\n\
    \   have been requested by parts of the Internet community. In\n   particular,\
    \ a significant portion of the Internet community wishes to\n   exchange messages\
    \ in which the content body consists of a MIME\n   message [3] containing arbitrary\
    \ octet-aligned material. This memo\n   uses the mechanism described in [5] to\
    \ define an extension to the\n   SMTP service whereby such contents may be exchanged.\
    \ Note that this\n   extension does NOT eliminate the possibility of an SMTP server\n\
    \   limiting line length; servers are free to implement this extension\n   but\
    \ nevertheless set a line length limit no lower than 1000 octets.\n   Given that\
    \ this restriction still applies, this extension does NOT\n   provide a means\
    \ for transferring unencoded binary via SMTP.\n"
- title: 2.  Framework for the 8bit MIME Transport Extension
  contents:
  - "2.  Framework for the 8bit MIME Transport Extension\n   The 8bit MIME transport\
    \ extension is laid out as follows:\n      (1)  the name of the SMTP service extension\
    \ defined here is\n           8bit-MIMEtransport;\n      (2)  the EHLO keyword\
    \ value associated with the extension is\n           8BITMIME;\n      (3)  no\
    \ parameter is used with the 8BITMIME EHLO keyword;\n      (4)  one optional parameter\
    \ using the keyword BODY is added to\n           the MAIL FROM command.  The value\
    \ associated with this\n           parameter is a keyword indicating whether a\
    \ 7bit message\n           (in strict compliance with [1]) or a MIME message (in\n\
    \           strict compliance with [3]) with arbitrary octet content\n       \
    \    is being sent. The syntax of the value is as follows,\n           using the\
    \ ABNF notation of [2]:\n                body-value ::= \"7BIT\" / \"8BITMIME\"\
    \n      (5)  no additional SMTP verbs are defined by this extension;\n       \
    \    and,\n      (6)  the next section specifies how support for the extension\n\
    \           affects the behavior of a server and client SMTP.\n"
- title: 3.  The 8bit-MIMEtransport service extension
  contents:
  - "3.  The 8bit-MIMEtransport service extension\n   When a client SMTP wishes to\
    \ submit (using the MAIL command) a\n   content body consisting of a MIME message\
    \ containing arbitrary lines\n   of octet-aligned material, it first issues the\
    \ EHLO command to the\n   server SMTP. If the server SMTP responds with code 250\
    \ to the EHLO\n   command, and the response includes the EHLO keyword value 8BITMIME,\n\
    \   then the server SMTP is indicating that it supports the extended MAIL\n  \
    \ command and will accept MIME messages containing arbitrary octet-\n   aligned\
    \ material.\n   The extended MAIL command is issued by a client SMTP when it wishes\n\
    \   to transmit a content body consisting of a MIME message containing\n   arbitrary\
    \ lines of octet-aligned material. The syntax for this\n   command is identical\
    \ to the MAIL command in [1], except that a BODY\n   parameter must appear after\
    \ the address.  Only one BODY parameter may\n   be used in a single MAIL command.\n\
    \   The complete syntax of this extended command is defined in [5]. The\n   esmtp-keyword\
    \ is BODY and the syntax for esmtp-value is given by the\n   syntax for body-value\
    \ shown above.\n   The value associated with the BODY parameter indicates whether\
    \ the\n   content body which will be passed using the DATA command consists of\n\
    \   a MIME message containing some arbitrary octet-aligned material\n   (\"8BITMIME\"\
    ) or is encoded entirely in accordance with [1] (\"7BIT\").\n   A server which\
    \ supports the 8-bit MIME transport service extension\n   shall preserve all bits\
    \ in each octet passed using the DATA command.\n   Naturally, the usual SMTP data-stuffing\
    \ algorithm applies so that a\n   content which contains the five-character sequence\
    \ of\n     <CR> <LF> <DOT> <CR> <LF>\n   or a content that begins with the three-character\
    \ sequence of\n     <DOT> <CR> <LF>\n   does not prematurely terminate the transfer\
    \ of the content.  Further,\n   it should be noted that the CR-LF pair immediately\
    \ preceeding the\n   final dot is considered part of the content.  Finally, although\
    \ the\n   content body contains arbitrary lines of octet-aligned material, the\n\
    \   length of each line (number of octets between two CR-LF pairs), is\n   still\
    \ subject to SMTP server line length restrictions (which may\n   allow as few\
    \ as 1000 octets on a single line). This restriction means\n   that this extension\
    \ MAY provide the necessary facilities for\n   transferring a MIME object with\
    \ the 8BIT content-transfer-encoding,\n   it DOES NOT provide a means of transferring\
    \ an object with the BINARY\n   content-transfer-encoding.\n   Once a server SMTP\
    \ supporting the 8bit-MIMEtransport service\n   extension accepts a content body\
    \ containing octets with the high-\n   order (8th) bit set, the server SMTP must\
    \ deliver or relay the\n   content in such a way as to preserve all bits in each\
    \ octet.\n   If a server SMTP does not support the 8-bit MIME transport extension\n\
    \   (either by not responding with code 250 to the EHLO command, or by\n   not\
    \ including the EHLO keyword value 8BITMIME in its response), then\n   the client\
    \ SMTP must not, under any circumstances, attempt to\n   transfer a content which\
    \ contains characters outside the US-ASCII\n   octet range (hex 00-7F).\n   A\
    \ client SMTP has two options in this case: first, it may implement a\n   gateway\
    \ transformation to convert the message into valid 7bit MIME,\n   or second, or\
    \ may treat this as a permanent error and handle it in\n   the usual manner for\
    \ delivery failures.  The specifics of the\n   transformation from 8bit MIME to\
    \ 7bit MIME are not described by this\n   RFC; the conversion is nevertheless\
    \ constrained in the following\n   ways:\n      (1)  it must cause no loss of\
    \ information; MIME transport\n           encodings must be employed as needed\
    \ to insure this is\n           the case, and\n      (2)  the resulting message\
    \ must be valid 7bit MIME.\n"
- title: 4.  Usage Example
  contents:
  - "4.  Usage Example\n   The following dialogue illustrates the use of the 8bit-MIMEtransport\n\
    \   service extension:\n   S: <wait for connection on TCP port 25>\n   C: <open\
    \ connection to server>\n   S: 220 dbc.mtview.ca.us SMTP service ready\n   C:\
    \ EHLO ymir.claremont.edu\n   S: 250-dbc.mtview.ca.us says hello\n   S: 250 8BITMIME\n\
    \   C: MAIL FROM:<ned@ymir.claremont.edu> BODY=8BITMIME\n   S: 250 <ned@ymir.claremont.edu>...\
    \ Sender and 8BITMIME ok\n   C: RCPT TO:<mrose@dbc.mtview.ca.us>\n   S: 250 <mrose@dbc.mtview.ca.us>...\
    \ Recipient ok\n   C: DATA\n   S: 354 Send 8BITMIME message, ending in CRLF.CRLF.\n\
    \    ...\n   C: .\n   S: 250 OK\n   C: QUIT\n   S: 250 Goodbye\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This RFC does not discuss security issues and\
    \ is not believed to\n   raise any security issues not already endemic in electronic\
    \ mail and\n   present in fully conforming implementations of [1].\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document represents a synthesis of the ideas of\
    \ many people and\n   reactions to the ideas and proposals of others.  Randall\
    \ Atkinson,\n   Craig Everhart, Risto Kankkunen, and Greg Vaudreuil contributed\
    \ ideas\n   and text sufficient to be considered co-authors.  Other important\n\
    \   suggestions, text, or encouragement came from Harald Alvestrand, Jim\n   Conklin,\
    \ Mark Crispin, Frank da Cruz, 'Olafur Gudmundsson, Per\n   Hedeland, Christian\
    \ Huitma, Neil Katin, Eliot Lear, Harold A.\n   Miller, Keith Moore, Dan Oscarsson,\
    \ Julian Onions, Neil Rickert, John\n   Wagner, Rayan Zachariassen, and the contributions\
    \ of the entire IETF\n   SMTP Working Group. Of course, none of the individuals\
    \ are\n   necessarily responsible for the combination of ideas represented\n \
    \  here. Indeed, in some cases, the response to a particular criticism\n   was\
    \ to accept the problem identification but to include an entirely\n   different\
    \ solution from the one originally proposed.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] Postel, J., \"Simple Mail Transfer Protocol\", STD 10,\
    \ RFC 821,\n       USC/Information Sciences Institute, August 1982.\n   [2] Crocker,\
    \ D., \"Standard for the Format of ARPA Internet Text\n       Messages\", STD\
    \ 11, RFC 822, UDEL, August 1982.\n   [3] Borenstein, N., and N. Freed, \"Multipurpose\
    \ Internet Mail\n       Extensions\", RFC 1521, Bellcore, Innosoft, September\
    \ 1993.\n   [4] Moore, K., \"Representation of Non-ASCII Text in Internet Message\n\
    \       Headers\", RFC 1522, University of Tennessee, September 1993.\n   [5]\
    \ Klensin, J., Freed, N., Rose, M., Stefferud, E., and D. Crocker,\n       \"\
    SMTP Service Extensions\", RFC 1651, MCI, Innosoft, Dover Beach\n       Consulting,\
    \ Inc., Network Management Associates, Inc., Silicon\n       Graphics, Inc., July\
    \ 1994.\n   [6] Partridge, C., \"Mail Routing and the Domain System\", STD 14,\
    \ RFC\n       974, BBN, January 1986.\n"
- title: 8.  Chair, Editor, and Authors' Addresses
  contents:
  - "8.  Chair, Editor, and Authors' Addresses\n   John Klensin, WG Chair\n   MCI\
    \ Data Services Division\n   2100 Reston Parkway, 6th floor\n   Reston, VA 22091\n\
    \   USA\n   Phone:: 1 703 715 7361\n   Fax: +1 703 715 7435\n   EMail: klensin@mci.net\n\
    \   Ned Freed, Editor\n   Innosoft International, Inc.\n   1050 East Garvey Avenue\
    \ South\n   West Covina, CA 91790\n   USA\n   Phone:: +1 818 919 3600\n   Fax:\
    \ +1 818 919 3614\n   EMail: ned@innosoft.com\n   Marshall T. Rose\n   Dover Beach\
    \ Consulting, Inc.\n   420 Whisman Court\n   Moutain View, CA  94043-2186\n  \
    \ USA\n   Phone: +1 415 968 1052\n   Fax: +1 415 968 2510\n   EMail: mrose@dbc.mtview.ca.us\n\
    \   Einar A. Stefferud\n   Network Management Associates, Inc.\n   17301 Drey\
    \ Lane\n   Huntington Beach, CA, 92647-5615\n   USA\n   Phone: +1 714 842 3711\n\
    \   Fax: +1 714 848 2091\n   EMail: stef@nma.com\n   Dave Crocker\n   Silicon\
    \ Graphics, Inc.\n   2011 N. Shoreline Blvd.\n   P.O. Box 7311\n   Mountain View,\
    \ CA 94039\n   USA\n   Phone: +1 415 390 1804\n   Fax: +1 415 962 8404\n   EMail:\
    \ dcrocker@sgi.com\n"
