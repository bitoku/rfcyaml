- title: __initial_text__
  contents:
  - '            Integrated Service Mappings on IEEE 802 Networks

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes mappings of IETF Integrated Services over\n\
    \   LANs built from IEEE 802 network segments which may be interconnected\n  \
    \ by IEEE 802.1D MAC Bridges (switches).  It describes parameter\n   mappings\
    \ for supporting Controlled Load and Guaranteed Service using\n   the inherent\
    \ capabilities of relevant IEEE 802 technologies and, in\n   particular, 802.1D-1998\
    \ queuing features in switches.\n   These mappings are one component of the Integrated\
    \ Services over IEEE\n   802 LANs framework.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1 Introduction ...............................................\
    \ 2\n   2 Flow Identification and Traffic Class Selection ............ 3\n   3\
    \ Choosing a flow's IEEE 802 user_priority class ............. 5\n   3.1 Context\
    \ of admission control and delay bounds ............ 6\n   3.2 Default service\
    \ mappings ................................. 7\n   3.3 Discussion ...............................................\
    \ 9\n   4 Computation of integrated services characterization parameters\n   \
    \     by IEEE 802 devices .....................................10\n   4.1 General\
    \ characterization parameters ......................10\n   4.2 Parameters to implement\
    \ Guaranteed Service ...............11\n   4.3 Parameters to implement Controlled\
    \ Load ..................11\n   4.4 Parameters to implement Best Effort ......................12\n\
    \   5 Merging of RSVP/SBM objects ................................12\n   6 Applicability\
    \ of these service mappings ....................13\n   7 References .................................................14\n\
    \   8 Security Considerations ....................................15\n   9 Acknowledgments\
    \ ............................................15\n   10 Authors' Addresses ........................................16\n\
    \   11 Full Copyright Statement ..................................17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IEEE 802.1 Interworking Task Group has developed a set\
    \ of\n   enhancements to the basic MAC Service provided in Bridged Local Area\n\
    \   Networks (a.k.a. \"switched LANs\"). As a supplement to the original\n   IEEE\
    \ MAC Bridges standard, IEEE 802.1D-1990 [802.1D-ORIG], the\n   updated IEEE 802.1D-1998\
    \ [802.1D] proposes differential traffic class\n   queuing in switches. The IEEE\
    \ 802.1Q specification [802.1Q] extends\n   the capabilities of Ethernet/802.3\
    \ media to carry a traffic class\n   indicator, or \"user_priority\" field, within\
    \ data frames.\n   The availability of this differential traffic queuing, together\
    \ with\n   additional mechanisms to provide admission control and signaling,\n\
    \   allows IEEE 802 networks to support a close approximation of the IETF\n  \
    \ Integrated Services capabilities [CL][GS]. This document describes\n   methods\
    \ for mapping the service classes and parameters of the IETF\n   model into IEEE\
    \ 802.1D network parameters.  A companion document\n   [SBM] describes a signaling\
    \ protocol for use with these mappings.  It\n   is recommended that readers be\
    \ familiar with the overall framework in\n   which these mappings and signaling\
    \ protocol are expected to be used;\n   this framework is described fully in [IS802FRAME].\n\
    \   Within this document, Section 2 describes the method by which end\n   systems\
    \ and routers bordering the IEEE Layer-2 cloud learn what\n   traffic class should\
    \ be used for each data flow's packets.  Section 3\n   describes the approach\
    \ recommended to map IP-level traffic flows to\n   IEEE traffic classes within\
    \ the Layer 2 network.  Section 4 describes\n   the computation of Characterization\
    \ Parameters by the layer 2\n   network.  The remaining sections discuss some\
    \ particular issues with\n   the use of the RSVP/SBM signaling protocols, and\
    \ describe the\n   applicability of all of the above to different layer 2 network\n\
    \   topologies.\n"
- title: 2.  Flow Identification and Traffic Class Selection
  contents:
  - "2.  Flow Identification and Traffic Class Selection\n   One model for supporting\
    \ integrated services over specific link\n   layers treats layer-2 devices very\
    \ much as a special case of routers.\n   In this model, switches and other devices\
    \ along the data path make\n   packet handling decisions based on the RSVP flow\
    \ and filter\n   specifications, and use these specifications to classify the\n\
    \   corresponding data packets. The specifications could either be used\n   directly,\
    \ or could be used indirectly by mapping each RSVP session\n   onto a layer-2\
    \ construct such as an ATM virtual circuit.\n   This approach is inappropriate\
    \ for use in the IEEE 802 environment.\n   Filtering to the per-flow level becomes\
    \ expensive with increasing\n   switch speed; devices with such filtering capabilities\
    \ are likely to\n   have a very similar implementation complexity to IP routers,\
    \ and may\n   not make use of simpler mechanisms such as 802.1D user priority.\n\
    \   The Integrated Services over IEEE 802 LANs framework [IS802FRAME] and\n  \
    \ this document use an \"aggregated flow\" approach based on use of\n   layer-2\
    \ traffic classes. In this model, each arriving flow is\n   assigned to one of\
    \ the available classes for the duration of the flow\n   and traverses the 802\
    \ cloud in this class.  Traffic flows requiring\n   similar service are grouped\
    \ together into a single class, while the\n   system's admission control and class\
    \ selection rules ensure that the\n   service requirements for flows in each of\
    \ the classes are met.  In\n   many situations this is a viable intermediate point\
    \ between no QoS\n   control and full router-type integrated services. The approach\
    \ can\n   work effectively even with switches implementing only the simplest\n\
    \   differential traffic classification capability specified in the\n   802.1D\
    \ model.  In the aggregated flow model, traffic arriving at the\n   boundary of\
    \ a layer-2 cloud is tagged by the boundary device (end\n   host or border router)\
    \ with an appropriate traffic class, represented\n   as an 802.1D \"user_priority\"\
    \ value. Two fundamental questions are\n   \"who determines the correspondence\
    \ between IP-level traffic flows and\n   link-level classes?\" and  \"how is this\
    \ correspondence conveyed to the\n   boundary devices that must mark the data\
    \ frames?\"\n   One approach to answering these questions would be for the meanings\n\
    \   of the classes to be universally defined. This document would then\n   standardize\
    \ the meanings of a set of classes; e.g., 1 = best effort,\n   2 = 100 ms peak\
    \ delay target, 3 = 10 ms peak delay target, 4 = 1 ms\n   peak delay target, etc.\
    \ The meanings of these universally defined\n   classes could then be encoded\
    \ directly in end stations, and the\n   flow-to-class mappings computed directly\
    \ in these devices.\n   This universal definition approach would be simple to\
    \ implement, but\n   is too rigid to map the wide range of possible user requirements\
    \ onto\n   the limited number of available 802.1D classes. The model described\n\
    \   in [IS802FRAME] uses a more flexible mapping: clients ask \"the\n   network\"\
    \ which user_priority traffic class to use for a given traffic\n   flow, as categorized\
    \ by its flow-spec and layer-2 endpoints. The\n   network provides a value back\
    \ to the requester that is appropriate\n   considering the current network topology,\
    \ load conditions, other\n   admitted flows, etc.  The task of configuring switches\
    \ with this\n   mapping (e.g., through network management, a switch-switch protocol\n\
    \   or via some network-wide QoS-mapping directory service) is an order\n   of\
    \ magnitude less complex than performing the same function in end\n   stations.\
    \ Also, when new services (or other network reconfigurations)\n   are added to\
    \ such a network, the network elements will typically be\n   the ones to be upgraded\
    \ with new queuing algorithms etc. and can be\n   provided with new mappings at\
    \ this time.\n   In the current model it is assumed that all data packets of a\
    \ flow\n   are assigned to the same traffic class for the duration of the flow:\n\
    \   the characteristics of the MAC service, as defined by Clause 6 of\n   [802.1D],\
    \ then ensure the ordering of the data packets of the flow\n   between adjacent\
    \ Layer 3 routers. This is usually desirable to avoid\n   potential re-ordering\
    \ problems as discussed in [IS802FRAME] and [CL].\n   Note that there are some\
    \ scenarios where it might be desirable to\n   send conforming data traffic in\
    \ one traffic class and non-conforming\n   traffic for the same flow in a different,\
    \ lower traffic class: such a\n   division into separate traffic classes is for\
    \ future study.  When a\n   new session or \"flow\" requiring QoS support is created,\
    \ a client must\n   ask \"the network\" which traffic class (IEEE 802 user_priority)\
    \ to use\n   for a given traffic flow, so that it can label the packets of the\n\
    \   flow as it places them into the network.  A request/response protocol\n  \
    \ is needed between client and network to return this information. The\n   request\
    \ can be piggy-backed onto an admission control request and the\n   response can\
    \ be piggy-backed onto an admission control\n   acknowledgment. This \"one pass\"\
    \ assignment has the benefit of\n   completing the admission control transaction\
    \ in a timely way and\n   reducing the exposure to changing conditions that could\
    \ occur if\n   clients cached the knowledge for extensive periods. A set of\n\
    \   extensions to the RSVP protocol for communicating this information\n   have\
    \ been defined [SBM].\n   The network (i.e., the first network element encountered\
    \ downstream\n   from the client) must then answer the following questions:\n\
    \     1. Which of the available traffic classes would be appropriate for\n   \
    \     this flow?\n        In general, a newly arriving flow might be assigned\
    \ to a number\n        of classes. For example, if 10ms of delay is acceptable,\
    \ the\n        flow could potentially be assigned to either a 10ms delay class\n\
    \        or a 1ms delay class. This packing problem is quite difficult to\n  \
    \      solve if the target parameters of the classes are allowed to\n        change\
    \ dynamically as flows arrive and depart.  It is quite\n        simple if the\
    \ target parameters of each class is held fixed, and\n        the class table\
    \ is simply searched to find a class appropriate\n        for the arriving flow.\
    \  This document adopts the latter\n        approach.\n     2. Of the appropriate\
    \ traffic classes, which if any have enough\n        capacity available to accept\
    \ the new flow?\n        This is the admission control problem. It is necessary\
    \ to\n        compare the level of traffic currently assigned to each class\n\
    \        with the available level of network resources (bandwidth,\n        buffers,\
    \ etc), to ensure that adding the new flow to the class\n        will not cause\
    \ the class's performance to go below its target\n        values. This problem\
    \ is compounded because in a priority queuing\n        system adding traffic to\
    \ a higher-priority class can affect the\n        performance of lower-priority\
    \ classes. The admission control\n        algorithm for a system using the default\
    \ 802 priority behavior\n        must be reasonably sophisticated to provide acceptable\
    \ results.\n   If an acceptable class is found, the network returns the chosen\n\
    \   user_priority value to the client.\n   Note that the client may be an end\
    \ station, a router at the edge of\n   the layer 2 network, or a first switch\
    \ acting as a proxy for a device\n   that does not participate in these protocols\
    \ for whatever reason.\n   Note also that a device e.g., a server or router may\
    \ choose to\n   implement both the \"client\" as well as the \"network\" portion\
    \ of this\n   model so that it can select its own user_priority values. Such an\n\
    \   implementation would generally be discouraged unless the device has a\n  \
    \ close tie-in with the network topology and resource allocation\n   policies.\
    \ It may, however, work acceptably in cases where there is\n   known over-provisioning\
    \ of resources.\n"
- title: 3.  Choosing a flow's IEEE 802 user_priority class
  contents:
  - "3.  Choosing a flow's IEEE 802 user_priority class\n   This section describes\
    \ the method by which IP-level flows are mapped\n   into appropriate IEEE user_priority\
    \ classes. The IP-level services\n   considered are Best Effort, Controlled Load,\
    \ and Guaranteed Service.\n   The major issue is that admission control requests\
    \ and application\n   requirements are specified in terms of a multidimensional\
    \ vector of\n   parameters e.g., bandwidth, delay, jitter, service class.  This\n\
    \   multidimensional space must be mapped onto a set of traffic classes\n   whose\
    \ default behavior in L2 switches is unidimensional (i.e., strict\n   priority\
    \ default queuing). This priority queuing alone can provide\n   only relative\
    \ ordering between traffic classes. It can neither\n   enforce an absolute (quantifiable)\
    \ delay bound for a traffic class,\n   nor can it discriminate amongst Int-Serv\
    \ flows within the aggregate\n   in a traffic class. Therefore, it cannot provide\
    \ the absolute control\n   of packet loss and delay required for individual Int-Serv\
    \ flows.\n   To provide absolute control of loss and delay three things must\n\
    \   occur:\n   (1) The amount of bandwidth available to the QoS-controlled flows\n\
    \       must be known, and the number of flows admitted to the network\n     \
    \  (allowed to use the bandwidth) must be limited.\n   (2) A traffic scheduling\
    \ mechanism is needed to give preferential\n       service to flows with lower\
    \ delay targets.\n   (3) Some mechanism must ensure that best-effort flows and\
    \ QoS\n       controlled flows that are exceeding their Tspecs do not damage\n\
    \       the quality of service delivered to in-Tspec QoS controlled\n       flows.\
    \ This mechanism could be part of the traffic scheduler, or\n       it could be\
    \ a separate policing mechanism.\n   For IEEE 802 networks, the first function\
    \ (admission control) is\n   provided by a Subnet Bandwidth Manager, as discussed\
    \ below. We use\n   the link-level user_priority mechanism at each switch and\
    \ bridge to\n   implement the second function (preferential service to flows with\n\
    \   lower delay targets). Because a simple priority scheduler cannot\n   provide\
    \ policing (function three), policing for IEEE networks is\n   generally implemented\
    \ at the edge of the network by a layer-3 device.\n   When this policing is performed\
    \ only at the edges of the network it\n   is of necessity approximate. This issue\
    \ is discussed further in\n   [IS802FRAME].\n"
- title: 3.1.  Context of admission control and delay bounds
  contents:
  - "3.1.  Context of admission control and delay bounds\n   As described above, it\
    \ is the combination of priority-based\n   scheduling and admission control that\
    \ creates quantified delay\n   bounds. Thus, any attempt to quantify the delay\
    \ bounds expected by a\n   given traffic class has to made in the context of the\
    \ admission\n   control elements. Section 6 of the framework [IS802FRAME] provides\n\
    \   for two different models of admission control - centralized or\n   distributed\
    \ Bandwidth Allocators.\n   It is important to note that in this approach it is\
    \ the admission\n   control algorithm that determines which of the Int-Serv services\
    \ is\n   being offered. Given a set of priority classes with delay targets, a\n\
    \   relatively simple admission control algorithm can place flows into\n   classes\
    \ so that the bandwidth and delay behavior experienced by each\n   flow corresponds\
    \ to the requirements of the Controlled-Load service,\n   but cannot offer the\
    \ higher assurance of the Guaranteed service. To\n   offer the Guaranteed service,\
    \ the admission control algorithm must be\n   much more stringent in its allocation\
    \ of resources, and must also\n   compute the C and D error terms required of\
    \ this service.\n   A delay bound can only be realized at the admission control\
    \ element\n   itself so any delay numbers attached to a traffic class represent\
    \ the\n   delay that a single element can allow for.  That element may\n   represent\
    \ a whole L2 domain or just a single L2 segment.\n   With either admission control\
    \ model, the delay bound has no scope\n   outside of a L2 domain. The only requirement\
    \ is that it be understood\n   by all Bandwidth Allocators in the L2 domain and,\
    \ for example, be\n   exported as C and D terms to L3 devices implementing the\
    \ Guaranteed\n   Service.  Thus, the end-to-end delay experienced by a flow can\
    \ only\n   be characterized by summing along the path using the usual RSVP\n \
    \  mechanisms.\n"
- title: 3.2.  Default service mappings
  contents:
  - "3.2.  Default service mappings\n   Table 1 presents the default mapping from\
    \ delay targets to IEEE 802.1\n   user_priority classes. However, these mappings\
    \ must be viewed as\n   defaults, and must be changeable.\n   In order to simplify\
    \ the task of changing mappings, this mapping\n   table is held by *switches*\
    \ (and routers if desired) but generally\n   not by end-station hosts.  It is\
    \ a read-write table. The values\n   proposed below are defaults and can be overridden\
    \ by management\n   control so long as all switches agree to some extent (the\
    \ required\n   level of agreement requires further analysis).\n   In future networks\
    \ this mapping table might be adjusted dynamically\n   and without human intervention.\
    \ It is possible that some form of\n   network-wide lookup service could be implemented\
    \ that serviced\n   requests from clients e.g., traffic_class = getQoSbyName(\"\
    H.323\n   video\") and notified switches of what traffic categories they were\n\
    \   likely to encounter and how to allocate those requests into traffic\n   classes.\
    \  Alternatively, the network's admission control mechanisms\n   might directly\
    \ adjust the mapping table to maximize the utilization\n   of network resources.\
    \ Such mechanisms are for further study.\n   The delay bounds numbers proposed\
    \ in Table 1 are for per-Bandwidth\n   Allocator element delay targets and are\
    \ derived from a subjective\n   analysis of the needs of typical delay-sensitive\
    \ applications e.g.,\n   voice, video. See Annex H of [802.1D] for further discussion\
    \ of the\n   selection of these values. Although these values appear to address\n\
    \   the needs of current video and voice technology, it should be noted\n   that\
    \ there is no requirement to adhere to these values and no\n   dependence of IEEE\
    \ 802.1 on these values.\n            user_priority  Service\n               \
    \  0         Default, assumed to be Best Effort\n                 1         reserved,\
    \ \"less than\" Best Effort\n                 2         reserved\n           \
    \      3         reserved\n                 4         Delay Sensitive, no bound\n\
    \                 5         Delay Sensitive, 100ms bound\n                 6 \
    \        Delay Sensitive, 10ms bound\n                 7         Network Control\n\
    \             Table 1 - Example user_priority to service mappings\n      Note:\
    \ These mappings are believed to be useful defaults but\n      further implementation\
    \ and usage experience is required. The\n      mappings may be refined in future\
    \ editions of this document.\n   With this example set of mappings, delay-sensitive,\
    \ admission\n   controlled traffic flows are mapped to user_priority values in\n\
    \   ascending order of their delay bound requirement. Note that the\n   bounds\
    \ are targets only - see [IS802FRAME] for a discussion of the\n   effects of other\
    \ non-conformant flows on delay bounds of other flows.\n   Only by applying admission\
    \ control to higher-priority classes can any\n   promises be made to lower-priority\
    \ classes.\n   This set of mappings also leaves several classes as reserved for\n\
    \   future definition.\n      Note: this mapping does not dictate what mechanisms\
    \ or algorithms\n      a network element (e.g., an Ethernet switch) must perform\
    \ to\n      implement these mappings: this is an implementation choice and\n \
    \     does not matter so long as the requirements for the particular\n      service\
    \ model are met.\n      Note: these mappings apply primarily to networks constructed\
    \ from\n      devices that implement the priority-scheduling behavior defined\
    \ as\n      the default in 802.1D. Some devices may implement more complex\n \
    \     scheduling behaviors not based only on priority. In that\n      circumstance\
    \ these mappings might still be used, but other, more\n      specialized mappings\
    \ may be more appropriate.\n"
- title: 3.3.  Discussion
  contents:
  - "3.3.  Discussion\n   The recommendation of classes 4, 5 and 6 for Delay Sensitive,\n\
    \   Admission Controlled flows is somewhat arbitrary; any classes with\n   priorities\
    \ greater than that assigned to Best Effort can be used.\n   Those proposed here\
    \ have the advantage that, for transit through\n   802.1D switches with only two-level\
    \ strict priority queuing, all\n   delay-sensitive traffic gets \"high priority\"\
    \ treatment (the 802.1D\n   default split is 0-3 and 4-7 for a device with 2 queues).\n\
    \   The choice of the delay bound targets is tuned to an average expected\n  \
    \ application mix, and might be retuned by a network manager facing a\n   widely\
    \ different mix of user needs. The choice is potentially very\n   significant:\
    \ wise choice can lead to a much more efficient allocation\n   of resources as\
    \ well as greater (though still not very good)\n   isolation between flows.\n\
    \   Placing Network Control traffic at class 7 is necessary to protect\n   important\
    \ traffic such as route updates and network management.\n   Unfortunately, placing\
    \ this traffic higher in the user_priority\n   ordering causes it to have a direct\
    \ effect on the ability of devices\n   to provide assurances to QoS controlled\
    \ application traffic.\n   Therefore, an estimate of the amount of Network Control\
    \ traffic must\n   be made by any device that is performing admission control\
    \ (e.g.,\n   SBMs). This would be in terms of the parameters that are normally\n\
    \   taken into account by the admission control algorithm. This estimate\n   should\
    \ be used in the admission control decisions for the lower\n   classes (the estimate\
    \ is likely to be a configuration parameter of\n   SBMs).\n   A traffic class\
    \ such as class 1 for \"less than best effort\" might be\n   useful for devices\
    \ that wish to dynamically \"penalty tag\" all of the\n   data of flows that are\
    \ presently exceeding their allocation or Tspec.\n   This provides a way to isolate\
    \ flows that are exceeding their service\n   limits from flows that are not, to\
    \ avoid reducing the QoS delivered\n   to flows that are within their contract.\
    \ Data from such tagged flows\n   might also be preferentially discarded by an\
    \ overloaded downstream\n   device.\n   A somewhat simpler approach would be to\
    \ tag only the portion of a\n   flow's packets that actually exceed the Tspec\
    \ at any given instant as\n   low priority. However, it is often considered to\
    \ be a bad idea to\n   treat flows in this way as it will likely cause significant\
    \ re-\n   ordering of the flow's packets, which is not desirable. Note that the\n\
    \   default 802.1D treatment of user_priorities 1 and 2 is \"less than\"\n   the\
    \ default class 0.\n"
- title: 4.  Computation of integrated services characterization parameters by
  contents:
  - "4.  Computation of integrated services characterization parameters by\n    IEEE\
    \ 802 devices\n   The integrated service model requires that each network element\
    \ that\n   supports integrated services compute and make available certain\n \
    \  \"characterization parameters\" describing the element's behavior.\n   These\
    \ parameters may be either generally applicable or specific to a\n   particular\
    \ QoS control service.  These parameters may be computed by\n   calculation, measurement,\
    \ or estimation. When a network element\n   cannot compute its own parameters\
    \ (for example, a simple link), we\n   assume that the device sending onto or\
    \ receiving data from the link\n   will compute the link's parameters as well\
    \ as it's own.  The accuracy\n   of calculation of these parameters may not be\
    \ very critical; in some\n   cases loose estimates are all that is required to\
    \ provide a useful\n   service. This is important in the IEEE 802 case, where\
    \ it will be\n   virtually impossible to compute parameters accurately for certain\n\
    \   topologies and switch technologies.  Indeed, it is an assumption of\n   the\
    \ use of this model by relatively simple switches (see [IS802FRAME]\n   for a\
    \ discussion of the different types of switch functionality that\n   might be\
    \ expected) that they merely provide values to describe the\n   device and admit\
    \ flows conservatively.  The discussion below presents\n   a general outline for\
    \ the computation of these parameters, and points\n   out some cases where the\
    \ parameters must be computed accurately.\n   Further specification of how to\
    \ export these parameters is for\n   further study.\n"
- title: 4.1.  General characterization parameters
  contents:
  - "4.1.  General characterization parameters\n   There are some general parameters\
    \ [GENCHAR] that a device will need\n   to use and/or supply for all service types:\n\
    \   *  Ingress link\n   *  Egress links and their MTUs, framing overheads and\
    \ minimum packet\n      sizes (see media-specific information presented above).\n\
    \   *  Available path bandwidth: updated hop-by-hop by any device along\n    \
    \  the path of the flow.\n   *  Minimum latency\n   Of these parameters, the MTU\
    \ and minimum packet size information must\n   be reported accurately. Also, the\
    \ \"break bits\" must be set correctly,\n   both the overall bit that indicates\
    \ the existence of QoS control\n   support and the individual bits that specify\
    \ support for a particular\n   scheduling service. The available bandwidth should\
    \ be reported as\n   accurately as possible, but very loose estimates are acceptable.\
    \ The\n   minimum latency parameter should be determined and reported as\n   accurately\
    \ as possible if the element offers Guaranteed service, but\n   may be loosely\
    \ estimated or reported as zero if the element offers\n   only Controlled-Load\
    \ service.\n"
- title: 4.2.  Parameters to implement Guaranteed Service
  contents:
  - "4.2.  Parameters to implement Guaranteed Service\n   A network element supporting\
    \ the Guaranteed Service [GS] must be able\n   to determine the following parameters:\n\
    \   *  Constant delay bound through this device (in addition to any value\n  \
    \    provided by \"minimum latency\" above) and up to the receiver at the\n  \
    \    next network element for the packets of this flow if it were to be\n    \
    \  admitted.  This includes any access latency bound to the outgoing\n      link\
    \ as well as propagation delay across that link. This value is\n      advertised\
    \ as the 'C' parameter of the Guaranteed Service.\n   *  Rate-proportional delay\
    \ bound through this device and up to the\n      receiver at the next network\
    \ element for the packets of this flow\n      if it were to be admitted.  This\
    \ value is advertised as the 'D'\n      parameter of the Guaranteed Service.\n\
    \   *  Receive resources that would need to be associated with this flow\n   \
    \   (e.g., buffering, bandwidth) if it were to be admitted and not\n      suffer\
    \ packet loss if it kept within its supplied Tspec/Rspec.\n      These values\
    \ are used by the admission control algorithm to decide\n      whether a new flow\
    \ can be accepted by the device.\n   *  Transmit resources that would need to\
    \ be associated with this flow\n      (e.g., buffering, bandwidth, constant- and\
    \ rate-proportional delay\n      bounds) if it were to be admitted. These values\
    \ are used by the\n      admission control algorithm to decide whether a new flow\
    \ can be\n      accepted by the device.\n   The exported characterization parameters\
    \ for this service should be\n   reported as accurately as possible. If estimations\
    \ or approximations\n   are used, they should err in whatever direction causes\
    \ the user to\n   receive better performance than requested. For example, the\
    \ C and D\n   error terms should overestimate delay, rather than underestimate\
    \ it.\n"
- title: 4.3.  Parameters to implement Controlled Load
  contents:
  - "4.3.  Parameters to implement Controlled Load\n   A network element implementing\
    \ the Controlled Load service [CL] must\n   be able to determine the following:\n\
    \   *  Receive resources that would need to be associated with this flow\n   \
    \   (e.g., buffering) if it were to be admitted. These values are used\n     \
    \ by the admission control algorithm to decide whether a new flow\n      can be\
    \ accepted by the device.\n   *  Transmit resources that would need to be associated\
    \ with this flow\n      (e.g., buffering) if it were to be admitted. These values\
    \ are used\n      by the admission control algorithm to decide whether a new flow\n\
    \      can be accepted by the device.\n   The Controlled Load service does not\
    \ export any service-specific\n   characterization parameters. Internal resource\
    \ allocation estimates\n   should ensure that the service quality remains high\
    \ when considering\n   the statistical aggregation of Controlled Load flows into\
    \ 802 traffic\n   classes.\n"
- title: 4.4.  Parameters to implement Best Effort
  contents:
  - "4.4.  Parameters to implement Best Effort\n   For a network element that implements\
    \ only best effort service there\n   are no explicit parameters that need to be\
    \ characterized. Note that\n   an integrated services aware network element that\
    \ implements only\n   best effort service will set the \"break bit\" described\
    \ in\n   [RSVPINTSERV].\n"
- title: 5.  Merging of RSVP/SBM objects
  contents:
  - "5.  Merging of RSVP/SBM objects\n   Where reservations that use the SBM protocol's\
    \ TCLASS object [SBM]\n   need to be merged, an algorithm needs to be defined\
    \ that is\n   consistent with the mappings to individual user_priority values\
    \ in\n   use in the Layer-2 cloud.  A merged reservation must receive at least\n\
    \   as good a service as the best of the component reservations.\n   There is\
    \ no single merging rule that can prevent all of the following\n   side-effects:\n\
    \   *  If a merger were to demote the existing branch of the flow into a\n   \
    \   higher-delay traffic class then this is a denial of service to the\n     \
    \ existing flow which would likely receive worse service than\n      before.\n\
    \   *  If a merger were to promote the existing branch of the flow into a\n  \
    \    new, lower-delay, traffic class, this might then suffer either\n      admission\
    \ control failures or may cost more in some sense than the\n      already-admitted\
    \ flow. This can also be considered as a denial-\n      of-service attack.\n \
    \  *  Promotion of the new branch may lead to rejection of the request\n     \
    \ because it has been re-assigned to a traffic class that has not\n      enough\
    \ resources to accommodate it.\n   Therefore, such a merger is declared to be\
    \ illegal and the usual SBM\n   admission control failure rules are applied. Traffic\
    \ class selection\n   is performed based on the TSpec information. When the first\
    \ RESV for\n   a flow arrives, a traffic class is chosen based on the request,\
    \ an\n   SBM TCLASS object is inserted into the message and admission control\n\
    \   for that traffic class is done by the SBM. Reservation succeeds or\n   fails\
    \ as usual.\n   When a second RESV for the same flow arrives at a different egress\n\
    \   point of the Layer-2 cloud the process starts to repeat. Eventually\n   the\
    \ SBM-augmented RESV may hit a switch with an existing reservation\n   in place\
    \ for the flow i.e., an L2 branch point for the flow. If so,\n   the traffic class\
    \ chosen for the second reservation is checked\n   against the first. If they\
    \ are the same, the RESV requests are merged\n   and passed on towards the sender(s).\n\
    \   If the second TCLASS would have been different, an RSVP/SBM ResvErr\n   error\
    \ is returned to the Layer-3 device that launched the second RESV\n   request\
    \ into the Layer-2 cloud. This device will then pass on the\n   ResvErr to the\
    \ original requester according to RSVP rules. Detailed\n   processing rules are\
    \ specified in [SBM].\n"
- title: 6.  Applicability of these service mappings
  contents:
  - "6.  Applicability of these service mappings\n   Switches using layer-2-only standards\
    \ (e.g., 802.1D-1990, 802.1D-\n   1998) need to inter-operate with routers and\
    \ layer-3 switches. Wide\n   deployment of such 802.1D-1998 switches will occur\
    \ in a number of\n   roles in the network: \"desktop switches\" provide dedicated\
    \ 10/100\n   Mbps links to end stations and high speed core switches often act\
    \ as\n   central campus switching points for layer-3 devices. Layer-2 devices\n\
    \   will have to operate in all of the following scenarios:\n   *  every device\
    \ along a network path is layer-3 capable and intrusive\n      into the full data\
    \ stream\n   *  only the edge devices are pure layer-2\n   *  every alternate\
    \ device lacks layer-3 functionality\n   *  most devices lack layer-3 functionality\
    \ except for some key\n      control points such as router firewalls, for example.\n\
    \      Where int-serv flows pass through equipment which does not support\n  \
    \    Integrated Services or 802.1D traffic management and which places\n     \
    \ all packets through the same queuing and overload-dropping paths,\n      it\
    \ is obvious that some of a flow's desired service parameters\n      become more\
    \ difficult to support. In particular, the two\n      integrated service classes\
    \ studied here, Controlled Load and\n      Guaranteed Service, both assume that\
    \ flows will be policed and\n      kept \"insulated\" from misbehaving other flows\
    \ or from best effort\n      traffic during their passage through the network.\
    \ This cannot be\n      done within an IEEE 802 network using devices with the\
    \ default\n      user_priority function; in this case policing must be approximated\n\
    \      at the network edges.\n      In addition, in order to provide a Guaranteed\
    \ Service, *all*\n      switching elements along the path must participate in\
    \ special\n      treatment for packets in such flows: where there is a \"break\"\
    \ in\n      guaranteed service, all bets are off. Thus, a network path that\n\
    \      includes even a single switch transmitting onto a shared or half-\n   \
    \   duplex LAN segment is unlikely to be able to provide a very good\n      approximation\
    \ to Guaranteed Service. For Controlled Load service,\n      the requirements\
    \ on the switches and link types are less stringent\n      although it is still\
    \ necessary to provide differential queuing and\n      buffering in switches for\
    \ CL flows over best effort in order to\n      approximate CL service. Note that\
    \ users receive indication of such\n      breaks in the path through the \"break\
    \ bits\" described in y\n      [RSVPINTSERV]. These bits must be correctly set\
    \ when IEEE 802\n      devices that cannot provide a specific service exist in\
    \ a network.\n      Other approaches might be to pass more information between\n\
    \      switches about the capabilities of their neighbours and to route\n    \
    \  around non-QoS-capable switches: such methods are for further\n      study.\
    \ And of course the easiest solution of all is to upgrade\n      links and switches\
    \ to higher capacities.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [802.1D-ORIG] \"MAC Bridges\", ISO/IEC 10038, ANSI/IEEE Std\
    \ 802.1D-1993\n   [802.1D]      \"Information technology - Telecommunications\
    \ and\n                 information exchange between systems - Local and\n   \
    \              metropolitan area networks - Common specifications -\n        \
    \         Part 3: Media Access Control (MAC) Bridges:  Revision.\n           \
    \      This is a revision of ISO/IEC 10038: 1993, 802.1j-1992\n              \
    \   and 802.6k-1992. It incorporates P802.11c, P802.1p and\n                 P802.12e.\"\
    \  ISO/IEC 15802-3:1998\"\n   [INTSERV]     Braden, R., Clark, D. and S. Shenker,\
    \ \"Integrated\n                 Services in the Internet Architecture: an Overview\"\
    ,\n                 RFC 1633, June 1994.\n   [RSVP]        Braden, R., Zhang,\
    \ L., Berson, S., Herzog, S. and S.\n                 Jamin, \"Resource Reservation\
    \ Protocol (RSVP) - Version\n                 1 Functional Specification\", RFC\
    \ 2205, September 1997.\n   [CL]          Wroclawski, J., \"Specification of the\
    \ Controlled-Load\n                 Network Element Service\", RFC 2211, September\
    \ 1997.\n   [GS]          Schenker, S., Partridge, C. and R. Guerin,\n       \
    \          \"Specification of Guaranteed Quality of Service\", RFC\n         \
    \        2212 September 1997.\n   [802.1Q]      ANSI/IEEE Standard 802.1Q-1998,\
    \ \"IEEE Standards for\n                 Local and Metropolitan Area Networks:\
    \ Virtual Bridged\n                 Local Area Networks\", 1998.\n   [GENCHAR]\
    \     Shenker, S., and J. Wroclawski, \"General\n                 Characterization\
    \ Parameters for Integrated Service\n                 Network Elements\", RFC\
    \ 2215, September 1997.\n   [IS802FRAME]  Ghanwani, A., Pace, W., Srinivasan,\
    \ V., Smith, A. and\n                 M. Seaman, \"A Framework for Providing Integrated\n\
    \                 Services Over Shared and Switched LAN Technologies\",\n    \
    \             RFC 2816, May 2000.\n   [SBM]         Yavatkar, R., Hoffman, D.,\
    \ Bernet, Y., Baker, F. and M.\n                 Speer, \"SBM (Subnet Bandwidth\
    \ Manager): A Protocol for\n                 Admission Control over IEEE 802-style\
    \ Networks\", RFC\n                 2814, May 2000.\n   [RSVPINTSERV] Wroclawski,\
    \ J., \"The use of RSVP with IETF Integrated\n                 Services\", RFC\
    \ 2210, September 1997.\n   [PROCESS]     Bradner, S., \"The Internet Standards\
    \ Process --\n                 Revision 3\", BCP 9, RFC 2026, October 1996.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Any use of QoS requires examination of security\
    \ considerations\n   because it leaves the possibility open for denial of service\
    \ or theft\n   of service attacks. This document introduces no new security issues\n\
    \   on top of those discussed in the companion ISSLL documents\n   [IS802FRAME]\
    \ and [SBM].  Any use of these service mappings assumes\n   that all requests\
    \ for service are authenticated appropriately.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   This document draws heavily on the work of the ISSLL\
    \ WG of the IETF\n   and the IEEE P802.1 Interworking Task Group.\n"
- title: 10.  Authors' Addresses
  contents:
  - "10.  Authors' Addresses\n   Mick Seaman\n   Telseon\n   480 S. California Ave\n\
    \   Palo Alto, CA 94306\n   USA\n   Email: mick@telseon.com\n   Andrew Smith\n\
    \   Extreme Networks\n   3585 Monroe St.\n   Santa Clara, CA 95051\n   USA\n \
    \  Phone: +1 408 579 2821\n   EMail: andrew@extremenetworks.com\n   Eric Crawley\n\
    \   Unisphere Solutions\n   5 Carlisle Rd.\n   Westford, MA 01886\n   Phone: +1\
    \ 978 692 1999\n   Email: esc@unispheresolutions.com\n   John Wroclawski\n   MIT\
    \ Laboratory for Computer Science\n   545 Technology Sq.\n   Cambridge, MA  02139\n\
    \   USA\n   Phone: +1 617 253 7885\n   EMail: jtw@lcs.mit.edu\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
