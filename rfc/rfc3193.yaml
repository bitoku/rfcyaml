- contents:
  - '                       Securing L2TP using IPsec

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document discusses how L2TP (Layer Two Tunneling Protocol)
    may\n   utilize IPsec to provide for tunnel authentication, privacy\n   protection,
    integrity checking and replay protection. Both the\n   voluntary and compulsory
    tunneling cases are discussed.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ..................................................
    \ 2\n   1.1 Terminology ..................................................  3\n
    \  1.2 Requirements language ........................................  3\n   2.
    L2TP security requirements  ...................................  4\n   2.1 L2TP
    security protocol .......................................  5\n   2.2 Stateless
    compression and encryption .........................  5\n   3. L2TP/IPsec inter-operability
    guidelines .......................  6\n   3.1. L2TP tunnel and Phase 1 and 2 SA
    teardown ...................  6\n   3.2. Fragmentation Issues ........................................
    \ 6\n   3.3. Per-packet security checks ..................................  7\n
    \  4. IPsec Filtering details when protecting L2TP ..................  7\n   4.1.
    IKE Phase 1 Negotiations ....................................  8\n   4.2. IKE
    Phase 2 Negotiations ....................................  8\n   5. Security Considerations
    ....................................... 15\n   5.1 Authentication issues ........................................
    15\n   5.2 IPsec and PPP interactions ................................... 18\n
    \  6. References .................................................... 21\n   Acknowledgments
    .................................................. 22\n   Authors' Addresses ...............................................
    23\n   Appendix A: Example IPsec Filter sets ............................ 24\n
    \  Intellectual Property Statement .................................. 27\n   Full
    Copyright Statement ......................................... 28\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   L2TP [1] is a protocol that tunnels PPP traffic over variety
    of\n   networks (e.g., IP, SONET, ATM).  Since the protocol encapsulates\n   PPP,
    L2TP inherits PPP authentication, as well as the PPP Encryption\n   Control Protocol
    (ECP) (described in [10]), and the Compression\n   Control Protocol (CCP) (described
    in [9]).  L2TP also includes\n   support for tunnel authentication, which can
    be used to mutually\n   authenticate the tunnel endpoints.  However, L2TP does
    not define\n   tunnel protection mechanisms.\n   IPsec is a protocol suite which
    is used to secure communication at\n   the network layer between two peers.  This
    protocol is comprised of\n   IP Security Architecture document [6], IKE, described
    in [7], IPsec\n   AH, described in [3] and IPsec ESP, described in [4].  IKE is
    the key\n   management protocol while AH and ESP are used to protect IP traffic.\n
    \  This document proposes use of the IPsec protocol suite for protecting\n   L2TP
    traffic over IP networks, and discusses how IPsec and L2TP\n   should be used
    together.  This document does not attempt to\n   standardize end-to-end security.
    \ When end-to-end security is\n   required, it is recommended that additional
    security mechanisms (such\n   as IPsec or TLS [14]) be used inside the tunnel,
    in addition to L2TP\n   tunnel security.\n   Although L2TP does not mandate the
    use of IP/UDP for its transport\n   mechanism, the scope of this document is limited
    to L2TP over IP\n   networks.  The exact mechanisms for enabling security for
    non-IP\n   networks must be addressed in appropriate standards for L2TP over\n
    \  specific non-IP networks.\n"
  - contents:
    - "1.1.  Terminology\n   Voluntary Tunneling\n             In voluntary tunneling,
      a tunnel is created by the user,\n             typically via use of a tunneling
      client.  As a result, the\n             client will send L2TP packets to the
      NAS which will forward\n             them on to the LNS.  In voluntary tunneling,
      the NAS does\n             not need to support L2TP, and the LAC resides on
      the same\n             machine as the client.  Another example of voluntary\n
      \            tunneling is the gateway to gateway scenario.  In this case\n             the
      tunnel is created by a network device, typically a\n             router or network
      appliance.  In this scenario either side\n             may start the tunnel
      on demand.\n   Compulsory Tunneling\n             In compulsory tunneling, a
      tunnel is created without any\n             action from the client and without
      allowing the client any\n             choice.  As a result, the client will
      send PPP packets to\n             the NAS/LAC, which will encapsulate them in
      L2TP and tunnel\n             them to the LNS.  In the compulsory tunneling
      case, the\n             NAS/LAC must be L2TP-capable.\n   Initiator The initiator
      can be the LAC or the LNS and is the device\n             which sends the SCCRQ
      and receives the SCCRP.\n   Responder The responder can be the LAC or the LNS
      and is the device\n             which receives the SCCRQ and replies with a
      SCCRP.\n"
    title: 1.1.  Terminology
  - contents:
    - "1.2.  Requirements language\n   In this document, the key words \"MAY\", \"MUST,
      \"MUST NOT\", \"OPTIONAL\",\n   \"RECOMMENDED\", \"SHOULD\", and \"SHOULD NOT\",
      are to be interpreted as\n   described in [2].\n"
    title: 1.2.  Requirements language
  title: 1.  Introduction
- contents:
  - "2.  L2TP security requirements\n   L2TP tunnels PPP traffic over the IP and non-IP
    public networks.\n   Therefore, both the control and data packets of L2TP protocol
    are\n   vulnerable to attack.  Examples of attacks include:\n   [1] An adversary
    may try to discover user identities by snooping data\n       packets.\n   [2]
    An adversary may try to modify packets (both control and data).\n   [3] An adversary
    may try to hijack the L2TP tunnel or the PPP\n       connection inside the tunnel.\n
    \  [4] An adversary can launch denial of service attacks by terminating\n       PPP
    connections, or L2TP tunnels.\n   [5] An adversary may attempt to disrupt the
    PPP ECP negotiation in\n       order to weaken or remove confidentiality protection.\n
    \      Alternatively, an adversary may wish to disrupt the PPP LCP\n       authentication
    negotiation so as to weaken the PPP authentication\n       process or gain access
    to user passwords.\n   To address these threats, the L2TP security protocol MUST
    be able to\n   provide authentication, integrity and replay protection for control\n
    \  packets.  In addition, it SHOULD be able to protect confidentiality\n   for
    control packets.  It MUST be able to provide integrity and replay\n   protection
    of data packets, and MAY be able to protect\n   confidentiality of data packets.
    \ An L2TP security protocol MUST also\n   provide a scalable approach to key management.\n
    \  The L2TP protocol, and PPP authentication and encryption do not meet\n   the
    security requirements for L2TP.  L2TP tunnel authentication\n   provides mutual
    authentication between the LAC and the LNS at tunnel\n   origination.  Therefore,
    it does not protect control and data traffic\n   on a per packet basis.  Thus,
    L2TP tunnel authentication leaves the\n   L2TP tunnel vulnerable to attacks.  PPP
    authenticates the client to\n   the LNS, but also does not provide per-packet
    authentication,\n   integrity, or replay protection.  PPP encryption meets\n   confidentiality
    requirements for PPP traffic but does not address\n   authentication, integrity,
    replay protection and key management\n   requirements.  In addition, PPP ECP negotiation,
    outlined in [10]\n   does not provide for a protected ciphersuite negotiation.
    \ Therefore,\n   PPP encryption provides a weak security solution, and in addition\n
    \  does not assist in securing L2TP control channel.\n   Key management facilities
    are not provided by the L2TP protocol.\n   However, where L2TP tunnel authentication
    is desired, it is necessary\n   to distribute tunnel passwords.\n   Note that
    several of the attacks outlined above can be carried out on\n   PPP packets sent
    over the link between the client and the NAS/LAC,\n   prior to encapsulation of
    the packets within an L2TP tunnel.  While\n   strictly speaking these attacks
    are outside the scope of L2TP\n   security, in order to protect against them,
    the client SHOULD provide\n   for confidentiality, authentication, replay and
    integrity protection\n   for PPP packets sent over the dial-up link.  Authentication,
    replay\n   and integrity protection are not currently supported by PPP\n   encryption
    methods, described in [11]-[13].\n"
  - contents:
    - "2.1.  L2TP Security Protocol\n   The L2TP security protocol MUST provide authentication,
      integrity and\n   replay protection for control packets.  In addition, it SHOULD\n
      \  protect confidentiality of control packets.  It MUST provide\n   integrity
      and replay protection of data packets, and MAY protect\n   confidentiality of
      data packets.  An L2TP security protocol MUST also\n   provide a scalable approach
      to key management.\n   To meet the above requirements, all L2TP security compliant\n
      \  implementations MUST implement IPsec ESP for securing both L2TP\n   control
      and data packets.  Transport mode MUST be supported; tunnel\n   mode MAY be
      supported.  All the IPsec-mandated ciphersuites\n   (described in RFC 2406 [4]
      and RFC 2402 [3]), including NULL\n   encryption MUST be supported.  Note that
      although an implementation\n   MUST support all IPsec ciphersuites, it is an
      operator choice which\n   ones will be used.  If confidentiality is not required
      (e.g., L2TP\n   data traffic), ESP with NULL encryption may be used.  The\n
      \  implementations MUST implement replay protection mechanisms of IPsec.\n   L2TP
      security MUST meet the key management requirements of the IPsec\n   protocol
      suite.  IKE SHOULD be supported for authentication, security\n   association
      negotiation, and key management using the IPsec DOI [5].\n"
    title: 2.1.  L2TP Security Protocol
  - contents:
    - "2.2.  Stateless compression and encryption\n   Stateless encryption and/or
      compression is highly desirable when L2TP\n   is run over IP.  Since L2TP is
      a connection-oriented protocol, use of\n   stateful compression/encryption is
      feasible, but when run over IP,\n   this is not desirable.  While providing
      better compression, when used\n   without an underlying reliable delivery mechanism,
      stateful methods\n   magnify packet losses.  As a result, they are problematic
      when used\n   over the Internet where packet loss can be significant.  Although\n
      \  L2TP [1] is connection oriented, packet ordering is not mandatory,\n   which
      can create difficulties in implementation of stateful\n   compression/encryption
      schemes.  These considerations are not as\n   important when L2TP is run over
      non-IP media such as IEEE 802, ATM,\n   X.25, or Frame Relay, since these media
      guarantee ordering, and\n   packet losses are typically low.\n"
    title: 2.2.  Stateless compression and encryption
  title: 2.  L2TP security requirements
- contents:
  - "3.  L2TP/IPsec inter-operability guidelines\n   The following guidelines are
    established to meet L2TP security\n   requirements using IPsec in practical situations.\n"
  - contents:
    - "3.1.  L2TP tunnel and Phase 1 and 2 SA teardown\n   Mechanisms within PPP and
      L2TP provide for both graceful and non-\n   graceful teardown.  In the case
      of PPP, an LCP TermReq and TermAck\n   sequence corresponds to a graceful teardown.
      \ LCP keep-alive messages\n   and L2TP tunnel hellos provide the capability
      to detect when a non-\n   graceful teardown has occurred.  Whenever teardown
      events occur,\n   causing the tunnel to close, the control connection teardown\n
      \  mechanism defined in [1] must be used.  Once the L2TP tunnel is\n   deleted
      by either peer, any phase 1 and phase 2 SA's which still\n   exist as a result
      of the L2TP tunnel between the peers SHOULD be\n   deleted.  Phase 1 and phase
      2 delete messages SHOULD be sent when\n   this occurs.\n   When IKE receives
      a phase 1 or phase 2 delete message, IKE should\n   notify L2TP this event has
      occurred.  If the L2TP state is such that\n   a ZLB ack has been sent in response
      to a STOPCCN, this can be assumed\n   to be positive acknowledgment that the
      peer received the ZLB ack and\n   has performed a teardown of any L2TP tunnel
      state associated with the\n   peer.  The L2TP tunnel state and any associated
      filters can now be\n   safely removed.\n"
    title: 3.1.  L2TP tunnel and Phase 1 and 2 SA teardown
  - contents:
    - "3.2.  Fragmentation Issues\n   Since the default MRU for PPP connections is
      1500 bytes,\n   fragmentation can become a concern when prepending L2TP and
      IPsec\n   headers to a PPP frame.  One mechanism which can be used to reduce\n
      \  this problem is to provide PPP with the MTU value of the\n   ingress/egress
      interface of the L2TP/IPsec tunnel minus the overhead\n   of the extra headers.
      \ This should occur after the L2TP tunnel has\n   been setup and but before
      LCP negotiations begin.  If the MTU value\n   of the ingress/egress interface
      for the tunnel is less than PPP's\n   default MTU, it may replace the value
      being used.  This value may\n   also be used as the initial value proposed for
      the MRU in the LCP\n   config req.\n   If an ICMP PMTU is received by IPsec,
      this value should be stored in\n   the SA as proposed in [6].  IPsec should
      also provide notification of\n   this event to L2TP so that the new MTU value
      can be reflected into\n   the PPP interface.  Any new PTMU discoveries seen
      at the PPP\n   interface should be checked against this new value and processed\n
      \  accordingly.\n"
    title: 3.2.  Fragmentation Issues
  - contents:
    - "3.3.  Per-packet security checks\n   When a packet arrives from a tunnel which
      requires security, L2TP\n   MUST:\n   [1] Check to ensure that the packet was
      decrypted and/or\n       authenticated by IPsec.  Since IPsec already verifies
      that the\n       packet arrived in the correct SA, L2TP can be assured that
      the\n       packet was indeed sent by a trusted peer and that it did not\n       arrive
      in the clear.\n   [2] Verify that the IP addresses and UDP port values in the
      packet\n       match the socket information which was used to setup the L2TP\n
      \      tunnel.  This step prevents malicious peers from spoofing packets\n       into
      other tunnels.\n"
    title: 3.3.  Per-packet security checks
  title: 3.  L2TP/IPsec inter-operability guidelines
- contents:
  - "4.  IPsec Filtering details when protecting L2TP\n   Since IKE/IPsec is agnostic
    about the nuances of the application it\n   is protecting, typically no integration
    is necessary between the\n   application and the IPsec protocol.  However, protocols
    which allow\n   the port number to float during the protocol negotiations (such
    as\n   L2TP), can cause problems within the current IKE framework.  The L2TP\n
    \  specification [1] states that implementations MAY use a dynamically\n   assigned
    UDP source port.  This port change is reflected in the SCCRP\n   sent from the
    responder to the initiator.\n   Although the current L2TP specification allows
    the responder to use a\n   new IP address when sending the SCCRP, implementations
    requiring\n   protection of L2TP via IPsec SHOULD NOT do this.  To allow for this\n
    \  behavior when using L2TP and IPsec, when the responder chooses a new\n   IP
    address it MUST send a StopCCN to the initiator, with the Result\n   and Error
    Code AVP present.  The Result Code MUST be set to 2\n   (General Error) and the
    Error Code SHOULD be set to 7 (Try Another).\n   If the Error Code is set to 7,
    then the optional error message MUST\n   be present and the contents MUST contain
    the IP address (ASCII\n   encoded) that the Responder desires to use for subsequent\n
    \  communications.  Only the ASCII encoded IP address should be present\n   in
    the error message.  The IP address is encoded in dotted decimal\n   format for
    IPv4 or in RFC 2373 [17] format for IPv6.  The initiator\n   MUST parse the result
    and error code information and send a new SCCRQ\n   to the new IP address contained
    in the error message.  This approach\n   reduces complexity since now the initiator
    always knows precisely the\n   IP address of its peer.  This also allows a controlled
    mechanism for\n   L2TP to tie IPsec filters and policy to the same peer.\n   The
    filtering details required to accommodate this behavior as well\n   as other mechanisms
    needed to protect L2TP with IPsec are discussed\n   in the following sections.\n"
  - contents:
    - "4.1.  IKE Phase 1 Negotiations\n   Per IKE [7], when using pre-shared key authentication,
      a key must be\n   present for each peer to which secure communication is required.\n
      \  When using Main Mode (which provides identity protection), this key\n   must
      correspond to the IP address for the peer.  When using\n   Aggressive Mode (which
      does not provide identity protection), the\n   pre-shared key must map to one
      of the valid id types defined in the\n   IPsec DOI [5].\n   If the initiator
      receives a StopCCN with the result and error code\n   AVP set to \"try another\"
      and a valid IP address is present in the\n   message, it MAY bind the original
      pre-shared key used by IKE to the\n   new IP address contained in the error-message.\n
      \  One may may wish to consider the implications for scalability of\n   using
      pre-shared keys as the authentication method for phase 1.  As\n   the number
      of LAC and LNS endpoints grow, pre-shared keys become\n   increasingly difficult
      to manage.  Whenever possible, authentication\n   with certificates is preferred.\n"
    title: 4.1.  IKE Phase 1 Negotiations
  - contents:
    - "4.2.  IKE Phase 2 Negotiations\n   During the IKE phase 2 negotiations, the
      peers agree on what traffic\n   is to be protected by the IPsec protocols.  The
      quick mode IDs\n   represent the traffic which the peers agree to protect and
      are\n   comprised of address space, protocol, and port information.\n   When
      securing L2TP with IPsec, the following cases must be\n   considered:\n   Cases:\n
      \  +--------------------------------------------------+\n   | Initiator Port
      | Responder Addr | Responder Port |\n   +--------------------------------------------------+\n
      \  |      1701      |     Fixed      |     1701       |\n   +--------------------------------------------------+\n
      \  |      1701      |     Fixed      |    Dynamic     |\n   +--------------------------------------------------+\n
      \  |      1701      |    Dynamic     |     1701       |\n   +--------------------------------------------------+\n
      \  |      1701      |    Dynamic     |    Dynamic     |\n   +--------------------------------------------------+\n
      \  |     Dynamic    |     Fixed      |     1701       |\n   +--------------------------------------------------+\n
      \  |     Dynamic    |     Fixed      |    Dynamic     |\n   +--------------------------------------------------+\n
      \  |     Dynamic    |    Dynamic     |     1701       |\n   +--------------------------------------------------+\n
      \  |     Dynamic    |    Dynamic     |    Dynamic     |\n   +--------------------------------------------------+\n
      \  By solving the most general case of the above permutations, all cases\n   are
      covered.  The most general case is the last one in the list.\n   This scenario
      is when the initiator chooses a new port number and the\n   responder chooses
      a new address and port number.  The L2TP message\n   flow which occurs to setup
      this sequence is as follows:\n   -> IKE Phase 1 and Phase 2 to protect Initial
      SCCRQ\n           SCCRQ ->         (Fixed IP address, Dynamic Initiator Port)\n
      \                <- STOPCCN (Responder chooses new IP address)\n   -> New IKE
      Phase 1 and Phase 2 to protect new SCCRQ\n           SCCRQ ->         (SCCRQ
      to Responder's new IP address)\n   <- New IKE Phase 2 to for port number change
      by the responder\n                 <- SCCRP   (Responder chooses new port number)\n
      \          SCCCN ->         (L2TP Tunnel Establishment completes)\n   Although
      the Initiator and Responder typically do not dynamically\n   change ports, L2TP
      security must accommodate emerging applications\n   such as load balancing and
      QoS.  This may require that the port and\n   IP address float during L2TP tunnel
      establishment.\n   To support the general case, mechanisms must be designed
      into L2TP\n   and IPsec which allow L2TP to inject filters into the IPsec filter\n
      \  database.  This technique may be used by any application which floats\n   ports
      and requires security via IPsec, and is described in the\n   following sections.\n
      \  The responder is not required to support the ability to float its IP\n   address
      and port.  However, the initiator MUST allow the responder to\n   float its
      port and SHOULD allow the responder to choose a new IP\n   address (see section
      4.2.3, below).\n   Appendix A provides examples of these cases using the process\n
      \  described below.\n"
    - contents:
      - "4.2.1.  Terminology definitions used for filtering statements\n   I-Port
        \     The UDP port number the Initiator chooses to\n               originate/receive
        L2TP traffic on.  This can be a static\n               port such as 1701 or
        an ephemeral one assigned by the\n               socket.\n   R-Port      The
        UDP port number the Responder chooses to\n               originate/receive
        L2TP traffic on.  This can be the port\n               number 1701 or an ephemeral
        one assigned by the socket.\n               This is the port number the Responder
        uses after\n               receiving the initial SCCRQ.\n   R-IPAddr1   The
        IP address the Responder listens on for initial\n               SCCRQ.  If
        the responder does not choose a new IP\n               address, this address
        will be used for all subsequent\n               L2TP traffic.\n   R-IPAddr2
        \  The IP address the Responder chooses upon receiving the\n               SCCRQ.
        \ This address is used to send the SCCRP and all\n               subsequent
        L2TP tunnel traffic is sent and received on\n               this address.\n
        \  R-IPAddr    The IP address which the responder uses for sending and\n               receiving
        L2TP packets.  This is either the initial value\n               of R-IPAddr1
        or a new value of R-IPAddr2.\n   I-IPAddr    The IP address the Initiator
        uses to communicate with for\n               the L2TP tunnel.\n   Any-Addr
        \   The presence of Any-Address defines that IKE should\n               accept
        any single address proposed in the local address\n               of the quick
        mode IDs sent by the peer during IKE phase 2\n               negotiations.
        \ This single address may be formatted as an\n               IP Single address,
        an IP Netmask address with the Netmask\n               set to 255.255.255.255,
        and IP address Range with the\n               range being 1, or a hostname
        which can be resolved to one\n               address.  Refer to [5] for more
        information on the format\n               for quick mode IDs.\n   Any-Port
        \   The presence of Any-Port defines that IKE should accept a\n               value
        of 0 or a specific port value for the port value in\n               the port
        value in the quick mode IDs negotiated during\n               IKE phase 2.\n
        \  The filters defined in the following sections are listed from highest\n
        \  priority to lowest priority.\n"
      title: 4.2.1.  Terminology definitions used for filtering statements
    - contents:
      - "4.2.2.  Initial filters needed to protect the SCCRQ\n   The initial filter
        set on the initiator and responder is necessary to\n   protect the SCCRQ sent
        by the initiator to open the L2TP tunnel.\n   Both the initiator and the responder
        must either be pre-configured\n   for these filters or L2TP must have a method
        to inject this\n   information into the IPsec filtering database.  In either
        case, this\n   filter MUST be present before the L2TP tunnel setup messages
        start to\n   flow.\n      Responder Filters:\n         Outbound-1: None.  They
        should be be dynamically created by IKE\n         upon successful completion
        of phase 2.\n      Inbound-1:  From Any-Addr,  to R-IPAddr1, UDP, src Any-Port,
        dst\n         1701\n      Initiator Filters:\n         Outbound-1: From I-IPAddr,
        \ to R-IPAddr1, UDP, src I-Port,\n         dst 1701\n         Inbound-1:  From
        R-IPAddr1, to I-IPAddr,  UDP, src 1701,\n         dst I-Port\n         Inbound-2:
        \ From R-IPAddr1, to I-IPAddr,  UDP, src Any-Port,\n         dst I-Port\n
        \  When the initiator uses dynamic ports, L2TP must inject the filters\n   into
        the IPsec filter database, once its source port number is known.\n   If the
        initiator uses a fixed port of 1701, these filters MAY be\n   statically defined.\n
        \  The Any-Port definition in the initiator's inbound-2 filter statement\n
        \  is needed to handle the potential port change which may occur as the\n
        \  result of the responder changing its port number.\n   If a phase 2 SA bundle
        is not already present to protect the SCCRQ,\n   the sending of a SCCRQ by
        the initiator SHOULD cause IKE to setup the\n   necessary SAs to protect this
        packet.  Alternatively, L2TP may also\n   request IKE to setup the SA bundle.
        \ If the SA cannot be setup for\n   some reason, the packet MUST be dropped.\n
        \  The port numbers in the Quick Mode IDs sent by the initiator MUST\n   contain
        the specific port numbers used to identify the UDP socket.\n   The port numbers
        would be either I-Port/1701 or 1701/1701 for the\n   initial SCCRQ.  The quick
        mode IDs sent by the initiator will be a\n   subset of the Inbound-1 filter
        at the responder.  As a result, the\n   quick mode exchange will finish and
        IKE should inject a specific\n   filter set into the IPsec filter database
        and associate this filter\n   set with the phase 2 SA established between
        the peers.  These filters\n   should persist as long as the L2TP tunnel exists.
        \ The new filter set\n   at the responder will be:\n      Responder Filters:\n
        \        Outbound-1: From R-IPAddr1, to I-IPAddr,  UDP, src 1701,\n         dst
        I-Port\n         Inbound-1:  From I-IPAddr,  to R-IPAddr1, UDP, src I-Port,\n
        \        dst 1701\n         Inbound-2:  From Any-Addr,  to R-IPAddr1, UDP,
        src Any-Port,\n         dst 1701\n   Mechanisms SHOULD exist between L2TP
        and IPsec such that L2TP is not\n   retransmitting the SCCRQ while the SA
        is being established.  L2TP's\n   control channel retransmit mechanisms should
        start once the SA has\n   been established.  This will help avoid timeouts
        which may occur as\n   the result of slow SA establishment.\n   Once the phase
        2 SA has been established between the peers, the SCCRQ\n   should be sent
        from the initiator to the responder.\n   If the responder does not choose
        a new IP address or a new port\n   number, the L2TP tunnel can now proceed
        to establish.\n"
      title: 4.2.2.  Initial filters needed to protect the SCCRQ
    - contents:
      - "4.2.3.  Responder chooses new IP Address\n   This step describes the process
        which should be followed when the\n   responder chooses a new IP address.
        \ The only opportunity for the\n   responder to change its IP address is after
        receiving the SCCRQ but\n   before sending a SCCRP.\n   The new address the
        responder chooses to use MUST be reflected in the\n   result and error code
        AVP of a STOPCCN message.  The Result Code MUST\n   be set to 2 (General Error)
        and the Error Code MUST be set to 7 (Try\n   Another).  The optional error
        message MUST be present and the\n   contents MUST contain the IP address (ASCII
        encoded) the Responder\n   desires to use for subsequent communications.  Only
        the ASCII encoded\n   IP address should be present in the error message.  The
        IP address is\n   encoded in dotted decimal format for IPv4 or in RFC 2373
        [17] format\n   for IPv6.\n   The STOPCCN Message MUST be sent using the same
        address and UDP port\n   information which the initiator used to send the
        SCCRQ.  This message\n   will be protecting using the initial SA bundle setup
        to protect the\n   SCCRQ.\n   Upon receiving the STOPCCN, the initiator MUST
        parse the IP address\n   from the Result and Error Code AVP and perform the
        necessary sanity\n   checks to verify this is a correctly formatted address.
        \ If no errors\n   are found L2TP should inject a new set of filters into
        the IPsec\n   filter database.  If using pre-shared key authentication, L2TP
        MAY\n   request IKE to bind the new IP address to the pre-shared key which\n
        \  was used for the original IP address.\n   Since the IP address of the responder
        changed, a new phase 1 and\n   phase 2 SA must be established between the
        peers before the new SCCRQ\n   is sent.\n   Assuming the initial tunnel has
        been torn down and the filters needed\n   to create the tunnel removed, the
        new filters for the initiator and\n   responder will be:\n      Initiator
        Filters:\n         Outbound-1: From I-IPAddr,  to R-IPAddr2, UDP, src I-Port,\n
        \        dst 1701\n         Inbound-1:  From R-IPAddr2, to I-IPAddr,  UDP,
        src 1701,\n         dst I-Port\n         Inbound-2:  From R-IPAddr2, to I-IPAddr,
        \ UDP, src Any-Port,\n         dst I-Port\n   Once IKE phase 2 completes,
        the new filter set at the responder will\n   be:\n      Responder Filters:\n
        \        Outbound-1: From R-IPAddr2, to I-IPAddr,  UDP, src 1701,\n         dst
        I-Port\n         Inbound-1:  From I-IPAddr,  to R-IPAddr2, UDP, src I-Port,\n
        \        dst 1701\n         Inbound-2:  From Any-Addr,  to R-IPAddr1, UDP,
        src Any-Port,\n         dst 1701\n   If the responder chooses not to move
        to a new port number, the L2TP\n   tunnel setup can now complete.\n"
      title: 4.2.3.  Responder chooses new IP Address
    - contents:
      - "4.2.4.  Responder chooses new Port Number\n   The responder MAY choose a
        new UDP source port to use for L2TP tunnel\n   traffic.  This decision MUST
        be made before sending the SCCRP.  If a\n   new port number is chosen, then
        L2TP must inject new filters into the\n   IPsec filter database.  The responder
        must start new IKE phase 2\n   negotiations with the initiator.\n   The final
        filter set at the initiator and responder is as follows.\n      Initiator
        Filters:\n         Outbound-1: From I-IPAddr, to R-IPAddr, UDP, src I-Port,
        \  dst\n         R-Port\n         Outbound-2: From I-IPAddr, to R-IPAddr,
        UDP, src I-Port,   dst\n         1701\n         Inbound-1:  From R-IPAddr,
        to I-IPAddr, UDP, src R-Port,   dst\n         I-Port\n         Inbound-2:
        \ From R-IPAddr, to I-IPAddr, UDP, src 1701,     dst\n         I-Port\n         Inbound-3:
        \ From R-IPAddr, to I-IPAddr, UDP, src Any-Port, dst\n         I-Port\n         The
        Inbound-1 filter for the initiator will be injected by IKE\n         upon
        successful completion of the phase 2 negotiations\n         initiated by the
        peer.\n      Responder Filters:\n         Outbound-1: From R-IPAddr, to I-IPAddr,
        \ UDP, src R-Port,   dst\n         I-Port\n         Outbound-2: From R-IPAddr,
        to I-IPAddr,  UDP, src 1701,     dst\n         I-Port\n         Inbound-1:
        \ From I-IPAddr, to R-IPAddr,  UDP, src I-Port,   dst\n         R-Port\n         Inbound-2:
        \ From I-IPAddr, to R-IPAddr,  UDP, src I-Port,   dst\n         1701\n         Inbound-3:
        \ From Any-Addr, to R-IPAddr1, UDP, src Any-Port, dst\n         1701\n   Once
        the negotiations have completed, the SCCRP is sent and the L2TP\n   tunnel
        can complete establishment.  After the L2TP tunnel has been\n   established,
        any residual SAs and their associated filters may be\n   deleted.\n"
      title: 4.2.4.  Responder chooses new Port Number
    - contents:
      - "4.2.5.  Gateway-gateway and L2TP Dial-out considerations\n   In the gateway-gateway
        or the L2TP dial-out scenario, either side may\n   initiate L2TP.  The process
        outlined in the previous steps should be\n   followed with one addition.  The
        initial filter set at both sides\n   MUST include the following filter:\n
        \     Inbound Filter:\n         1: From Any-Addr, to R-IPAddr1, UDP, src Any-Port,
        dst 1701\n   When either peer decides to start a tunnel, L2TP should inject
        the\n   necessary inbound and outbound filters to protect the SCCRQ.  Tunnel\n
        \  establishment then proceeds exactly as stated in the previous\n   sections.\n"
      title: 4.2.5.  Gateway-gateway and L2TP Dial-out considerations
    title: 4.2.  IKE Phase 2 Negotiations
  title: 4.  IPsec Filtering details when protecting L2TP
- contents:
  - '5.  Security Considerations

    '
  - contents:
    - "5.1.  Authentication issues\n   IPsec IKE negotiation MUST negotiate an authentication
      method\n   specified in the IKE RFC 2409 [7].  In addition to IKE\n   authentication,
      L2TP implementations utilize PPP authentication\n   methods, such as those described
      in [15]-[16].  In this section, we\n   discuss authentication issues.\n"
    - contents:
      - "5.1.1.  Differences between IKE and PPP authentication\n   While PPP provides
        initial authentication, it does not provide per-\n   packet authentication,
        integrity or replay protection.  This implies\n   that the identity verified
        in the initial PPP authentication is not\n   subsequently verified on reception
        of each packet.\n   With IPsec, when the identity asserted in IKE is authenticated,
        the\n   resulting derived keys are used to provide per-packet authentication,\n
        \  integrity and replay protection.  As a result, the identity verified\n
        \  in the IKE conversation is subsequently verified on reception of each\n
        \  packet.\n   Let us assume that the identity claimed in PPP is a user identity,\n
        \  while the identity claimed within IKE is a machine identity.  Since\n   only
        the machine identity is verified on a per-packet basis, there is\n   no way
        to verify that only the user authenticated within PPP is using\n   the tunnel.
        \ In fact, IPsec implementations that only support machine\n   authentication
        typically have no way to enforce traffic segregation.\n   As a result, where
        machine authentication is used, once an L2TP/IPsec\n   tunnel is opened, any
        user on a multi-user machine will typically be\n   able to send traffic down
        the tunnel.\n   If the IPsec implementation supports user authentication,
        this\n   problem can be averted.  In this case, the user identity asserted\n
        \  within IKE will be verified on a per-packet basis.  In order to\n   provide
        segregation of traffic between users when user authentication\n   is used,
        the client MUST ensure that only traffic from that\n   particular user is
        sent down the L2TP tunnel.\n"
      title: 5.1.1.  Differences between IKE and PPP authentication
    - contents:
      - "5.1.2.  Certificate authentication in IKE\n   When X.509 certificate authentication
        is chosen within IKE, the LNS\n   is expected to use an IKE Certificate Request
        Payload (CRP) to\n   request from the client a certificate issued by a particular\n
        \  certificate authority or may use several CRPs if several certificate\n
        \  authorities are trusted and configured in its IPsec IKE\n   authentication
        policy.\n   The LNS SHOULD be able to trust several certificate authorities
        in\n   order to allow tunnel client end-points to connect to it using their\n
        \  own certificate credential from their chosen PKI.  Client and server\n
        \  side certificate revocation list checking MAY be enabled on a per-CA\n
        \  basis, since differences in revocation list checking exist between\n   different
        PKI providers.\n   L2TP implementations MAY use dynamically assigned ports
        for both\n   source and destination ports only if security for each source
        and\n   destination port combination can be successfully negotiated by IKE.\n"
      title: 5.1.2.  Certificate authentication in IKE
    - contents:
      - "5.1.3.  Machine versus user certificate authentication in IKE\n   The certificate
        credentials provided by the L2TP client during the\n   IKE negotiation MAY
        be those of the machine or of the L2TP user.\n   When machine authentication
        is used, the machine certificate is\n   typically stored on the LAC and LNS
        during an enrollment process.\n   When user certificates are used, the user
        certificate can be stored\n   either on the machine or on a smartcard.\n   Since
        the value of a machine certificate is inversely proportional to\n   the ease
        with which an attacker can obtain one under false pretenses,\n   it is advisable
        that the machine certificate enrollment process be\n   strictly controlled.
        \ For example, only administrators may have the\n   ability to enroll a machine
        with a machine certificate.\n   While smartcard certificate storage lessens
        the probability of\n   compromise of the private key, smartcards are not necessarily\n
        \  desirable in all situations.  For example, some organizations\n   deploying
        machine certificates use them so as to restrict use of\n   non-approved hardware.
        \ Since user authentication can be provided\n   within PPP (keeping in mind
        the weaknesses described earlier),\n   support for machine authentication
        in IPsec makes it is possible to\n   authenticate both the machine as well
        as the user.\n   In circumstances in which this dual assurance is considered
        valuable,\n   enabling movement of the machine certificate from one machine
        to\n   another, as would be possible if the machine certificate were stored\n
        \  on a smart card, may be undesirable.\n   Similarly, when user certificate
        are deployed, it is advisable for\n   the user enrollment process to be strictly
        controlled.  If for\n   example, a user password can be readily used to obtain
        a certificate\n   (either a temporary or a longer term one), then that certificate
        has\n   no more security value than the password.  To limit the ability of
        an\n   attacker to obtain a user certificate from a stolen password, the\n
        \  enrollment period can be limited, after which password access will be\n
        \  turned off.  Such a policy will prevent an attacker obtaining the\n   password
        of an unused account from obtaining a user certificate once\n   the enrollment
        period has expired.\n"
      title: 5.1.3.  Machine versus user certificate authentication in IKE
    - contents:
      - "5.1.4.  Pre-shared keys in IKE\n   Use of pre-shared keys in IKE main mode
        is vulnerable to man-in-the-\n   middle attacks when used in remote access
        situations.  In main mode\n   it is necessary for SKEYID_e to be used prior
        to the receipt of the\n   identification payload.  Therefore the selection
        of the pre-shared\n   key may only be based on information contained in the
        IP header.\n   However, in remote access situations, dynamic IP address assignment\n
        \  is typical, so that it is often not possible to identify the required\n
        \  pre-shared key based on the IP address.\n   Thus when pre-shared keys are
        used in remote access scenarios, the\n   same pre-shared key is shared by
        a group of users and is no longer\n   able to function as an effective shared
        secret.  In this situation,\n   neither the client nor the server identifies
        itself during IKE phase\n   1; it is only known that both parties are a member
        of the group with\n   knowledge of the pre-shared key.  This permits anyone
        with access to\n   the group pre-shared key to act as a man-in-the-middle.\n
        \  This vulnerability does not occur in aggressive mode since the\n   identity
        payload is sent earlier in the exchange, and therefore the\n   pre-shared
        key can be selected based on the identity.  However, when\n   aggressive mode
        is used the user identity is exposed and this is\n   often considered undesirable.\n
        \  As a result, where main mode is used with pre-shared keys, unless PPP\n
        \  performs mutual authentication, the server is not authenticated.\n   This
        enables a rogue server in possession of the group pre-shared key\n   to successfully
        masquerade as the LNS and mount a dictionary attack\n   on legacy authentication
        methods such as CHAP [15].  Such an attack\n   could potentially compromise
        many passwords at a time.  This\n   vulnerability is present in some existing
        IPsec tunnel mode\n   implementations.\n   To avoid this problem, L2TP/IPsec
        implementations SHOULD NOT use a\n   group pre-shared key for IKE authentication
        to the LNS.  IKE pre-\n   shared authentication key values SHOULD be protected
        in a manner\n   similar to the user's account password used by L2TP.\n"
      title: 5.1.4.  Pre-shared keys in IKE
    title: 5.1.  Authentication issues
  - contents:
    - "5.2.  IPsec and PPP security interactions\n   When L2TP is protected with IPsec,
      both PPP and IPsec security\n   services are available.  Which services are
      negotiated depends on\n   whether the tunnel is compulsory or voluntary.  A
      detailed analysis\n   of voluntary and compulsory tunneling scenarios is included
      below.\n   These scenarios are non-normative and do not create requirements
      for\n   an implementation to be L2TP security compliant.\n   In the scenarios
      below, it is assumed that both L2TP clients and\n   servers are able to set
      and get the properties of IPsec security\n   associations, as well as to influence
      the IPsec security services\n   negotiated.  Furthermore, it is assumed that
      L2TP clients and servers\n   are able to influence the negotiation process for
      PPP encryption and\n   compression.\n"
    - contents:
      - "5.2.1.  Compulsory tunnel\n   In the case of a compulsory tunnel, the client
        sends PPP frames to\n   the LAC, and will typically not be aware that the
        frames are being\n   tunneled, nor that any security services are in place
        between the LAC\n   and LNS.  At the LNS, a data packet will arrive, which
        includes a PPP\n   frame encapsulated in L2TP, which is itself encapsulated
        in an IP\n   packet.  By obtaining the properties of the Security Association
        set\n   up between the LNS and the LAC, the LNS can obtain information about\n
        \  security services in place between itself and the LAC.  Thus in the\n   compulsory
        tunneling case, the client and the LNS have unequal\n   knowledge of the security
        services in place between them.\n   Since the LNS is capable of knowing whether
        confidentiality,\n   authentication, integrity and replay protection are in
        place between\n   itself and the LAC, it can use this knowledge in order to
        modify its\n   behavior during PPP ECP [10] and CCP [9] negotiation.  Let
        us assume\n   that LNS confidentiality policy can be described by one of the\n
        \  following terms: \"Require Encryption,\" \"Allow Encryption\" or\n   \"Prohibit
        Encryption.\" If IPsec confidentiality services are in\n   place, then an
        LNS implementing a \"Prohibit Encryption\" policy will\n   act as though the
        policy had been violated.  Similarly, an LNS\n   implementing a \"Require
        Encryption\" or \"Allow Encryption\" policy will\n   act as though these policies
        were satisfied, and would not mandate\n   use of PPP encryption or compression.
        \ This is not the same as\n   insisting that PPP encryption and compression
        be turned off, since\n   this decision will depend on client policy.\n   Since
        the client has no knowledge of the security services in place\n   between
        the LAC and the LNS, and since it may not trust the LAC or\n   the wire between
        itself and the LAC, the client will typically want\n   to ensure sufficient
        security through use of end-to-end IPsec or PPP\n   encryption/compression
        between itself and the LNS.\n   A client wishing to ensure security services
        over the entire travel\n   path would not modify this behavior even if it
        had knowledge of the\n   security services in place between the LAC and the
        LNS.  The client\n   negotiates confidentiality services between itself and
        the LNS in\n   order to provide privacy on the wire between itself and the
        LAC.  The\n   client negotiates end-to-end security between itself and the
        end-\n   station in order to ensure confidentiality on the portion of the
        path\n   between the LNS and the end-station.\n   The client will typically
        not trust the LAC and will negotiate\n   confidentiality and compression services
        on its own.  As a result,\n   the LAC may only wish to negotiate IPsec ESP
        with null encryption\n   with the LNS, and the LNS will request replay protection.
        \ This will\n   ensure that confidentiality and compression services will
        not be\n   duplicated over the path between the LAC and the LNS.  This results\n
        \  in better scalability for the LAC, since encryption will be handled\n   by
        the client and the LNS.\n   The client can satisfy its desire for confidentiality
        services in one\n   of two ways.  If it knows that all end-stations that it
        will\n   communicate with are IPsec-capable (or if it refuses to talk to non-\n
        \  IPsec capable end-stations), then it can refuse to negotiate PPP\n   encryption/compression
        and negotiate IPsec ESP with the end-stations\n   instead.  If the client
        does not know that all end-stations it will\n   contact are IPsec capable
        (the most likely case), then it will\n   negotiate PPP encryption/compression.
        \ This may result in duplicate\n   compression/encryption which can only be
        eliminated if PPP\n   compression/encryption can be turned off on a per-packet
        basis.  Note\n   that since the LNS knows that the client's packets are being
        tunneled\n   but the client does not, the LNS can ensure that stateless\n
        \  compression/encryption is used by offering stateless\n   compression/encryption
        methods if available in the ECP and CCP\n   negotiations.\n"
      title: 5.2.1.  Compulsory tunnel
    - contents:
      - "5.2.2.  Voluntary tunnel\n   In the case of a voluntary tunnel, the client
        will be send L2TP\n   packets to the NAS, which will route them to the LNS.
        \ Over a dialup\n   link, these L2TP packets will be encapsulated in IP and
        PPP.\n   Assuming that it is possible for the client to retrieve the\n   properties
        of the Security Association between itself and the LNS,\n   the client will
        have knowledge of any security services negotiated\n   between itself and
        the LNS.  It will also have knowledge of PPP\n   encryption/compression services
        negotiated between itself and the\n   NAS.\n   From the LNS point of view,
        it will note a PPP frame encapsulated in\n   L2TP, which is itself encapsulated
        in an IP packet.  This situation\n   is identical to the compulsory tunneling
        case.  If LNS retrieves the\n   properties of the Security Association set
        up between itself and the\n   client, it can be informed of the security services
        in place between\n   them.  Thus in the voluntary tunneling case, the client
        and the LNS\n   have symmetric knowledge of the security services in place
        between\n   them.\n   Since the LNS is capable of knowing whether confidentiality,\n
        \  authentication, integrity check or replay protection is in place\n   between
        the client and itself, it is able to use this knowledge to\n   modify its
        PPP ECP and CCP negotiation stance.  If IPsec\n   confidentiality is in place,
        the LNS can behave as though a \"Require\n   Encryption\" directive had been
        fulfilled, not mandating use of PPP\n   encryption or compression.  Typically
        the LNS will not insist that\n   PPP encryption/compression be turned off,
        instead leaving this\n   decision to the client.\n   Since the client has
        knowledge of the security services in place\n   between itself and the LNS,
        it can act as though a \"Require\n   Encryption\" directive had been fulfilled
        if IPsec ESP was already in\n   place between itself and the LNS.  Thus, it
        can request that PPP\n   encryption and compression not be negotiated.  If
        IP compression\n   services cannot be negotiated, it will typically be desirable
        to turn\n   off PPP compression if no stateless method is available, due to
        the\n   undesirable effects of stateful PPP compression.\n   Thus in the voluntary
        tunneling case the client and LNS will\n   typically be able to avoid use
        of PPP encryption and compression,\n   negotiating IPsec Confidentiality,
        Authentication, and Integrity\n   protection services instead, as well as
        IP Compression, if available.\n   This may result in duplicate encryption
        if the client is\n   communicating with an IPsec-capable end-station.  In
        order to avoid\n   duplicate encryption/compression, the client may negotiate
        two\n   Security Associations with the LNS, one with ESP with null\n   encryption,
        and one with confidentiality/compression.  Packets going\n   to an IPsec-
        capable end-station would run over the ESP with null\n   encryption security
        association, and packets to a non-IPsec capable\n   end-station would run
        over the other security association.  Note that\n   many IPsec implementations
        cannot support this without allowing L2TP\n   packets on the same tunnel to
        be originated from multiple UDP ports.\n   This requires modifications to
        the L2TP specification.\n   Also note that the client may wish to put confidentiality
        services in\n   place for non-tunneled packets traveling between itself and
        the NAS.\n   This will protect the client against eavesdropping on the wire\n
        \  between itself and the NAS.  As a result, it may wish to negotiate\n   PPP
        encryption and compression with the NAS.  As in compulsory\n   tunneling,
        this will result in duplicate encryption and possibly\n   compression unless
        PPP compression/encryption can be turned off on a\n   per-packet basis.\n"
      title: 5.2.2.  Voluntary tunnel
    title: 5.2.  IPsec and PPP security interactions
  title: 5.  Security Considerations
- contents:
  - "6.  References\n   [1]   Townsley, W., Valencia, A., Rubens, A., Pall, G., Zorn,
    G., and\n         B. Palter, \"Layer Two Tunneling Protocol L2TP\", RFC 2661,\n
    \        August 1999.\n   [2]   Bradner, S., \"Key words for use in RFCs to Indicate
    Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n   [3]   Kent,
    S. and R. Atkinson, \"IP Authentication Header\", RFC 2402,\n         November
    1998.\n   [4]   Kent, S. and R. Atkinson, \"IP Encapsulating Security Payload\n
    \        (ESP)\", RFC 2406, November 1998.\n   [5]   Piper, D., \"The Internet
    IP Security Domain of Interpretation\n         of ISAKMP\", RFC 2407, November
    1998.\n   [6]   Atkinson, R. and S. Kent, \"Security Architecture for the\n         Internet
    Protocol\", RFC 2401, November 1998.\n   [7]   Harkins, D. and D. Carrel, \"The
    Internet Key Exchange (IKE)\",\n         RFC 2409, November 1998.\n   [8]   Simpson,
    W., \"The Point-to-Point Protocol (PPP)\", STD 51, RFC\n         1661, July 1994.\n
    \  [9]   Rand, D., \"The PPP Compression Control Protocol (CCP)\", RFC\n         1962,
    June 1996.\n   [10]  Meyer, G., \"The PPP Encryption Control Protocol (ECP)\",
    RFC\n         1968, June 1996.\n   [11]  Sklower, K. and G. Meyer, \"The PPP DES
    Encryption Protocol\n         (DESE)\", RFC 1969, June 1996.\n   [12]  Sklower,
    K. and G. Meyer, \"The PPP DES Encryption Protocol,\n         Version 2 (DESE-bis)\",
    RFC 2419, September 1998.\n   [13]  Hummert, K., \"The PPP Triple-DES Encryption
    Protocol (3DESE)\",\n         RFC 2420, September 1998.\n   [14]  Dierks, T. and
    C. Allen, \"The TLS Protocol Version 1.0\", RFC\n         2246, November 1998.\n
    \  [15]  Simpson, W., \"PPP Challenge Handshake Authentication Protocol\n         (CHAP),\"
    RFC 1994, August 1996.\n   [16]  Blunk, L. and J. Vollbrecht, \"PPP Extensible
    Authentication\n         Protocol (EAP),\" RFC 2284, March 1998.\n   [17]  Hinden,
    R. and S. Deering, \"IP Version 6 Addressing\n         Architecture\", RFC 2373,
    July 1998.\n"
  - "Acknowledgments\n   Thanks to Gurdeep Singh Pall, David Eitelbach, Peter Ford,
    and Sanjay\n   Anand of Microsoft, John Richardson of Intel and Rob Adams of Cisco\n
    \  for useful discussions of this problem space.\n"
  - "Authors' Addresses\n   Baiju V. Patel\n   Intel Corp\n   2511 NE 25th Ave\n   Hillsboro,
    OR 97124\n   Phone: +1 503 702 2303\n   EMail: baiju.v.patel@intel.com\n   Bernard
    Aboba\n   Microsoft Corporation\n   One Microsoft Way\n   Redmond, WA 98052\n
    \  Phone: +1 425 706-6605\n   EMail: bernarda@microsoft.com\n   William Dixon\n
    \  Microsoft Corporation\n   One Microsoft Way\n   Redmond, WA 98052\n   Phone:
    +1 425 703 8729\n   EMail: wdixon@microsoft.com\n   Glen Zorn\n   Cisco Systems,
    Inc.\n   500 108th Avenue N.E., Suite 500\n   Bellevue, Washington 98004\n   Phone:
    +1 425 438 8218\n   Fax:   +1 425 438 1848\n   EMail: gwz@cisco.com\n   Skip Booth\n
    \  Cisco Systems\n   7025 Kit Creek Road\n   RTP, NC 27709\n   Phone: +1 919 392
    6951\n   EMail: ebooth@cisco.com\n"
  title: 6.  References
- contents:
  - "Appendix A: Example IPsec Filter sets for L2TP Tunnel Establishment\n   This
    section provides examples of IPsec filter sets for L2TP tunnel\n   establishment.
    \ While example filter sets are for IPv4, similar\n   examples could just as easily
    be constructed for IPv6.\n"
  - contents:
    - "A.1 Initiator and Responder use fixed addresses and ports\n   This is the most
      simple of the cases since nothing changes during\n   L2TP tunnel establishment.
      \ Since the initiator does not know whether\n   the responder will change its
      port number, it still must be prepared\n   for this case.  In this example,
      the initiator will use an IPv4\n   address of 1.1.1.1 and the responder will
      use an IPv4 address of\n   2.2.2.1.\n   The filters for this scenario are:\n"
    - contents:
      - "A.1.1 Protect the SCCRQ\n   Initiator Filters:\n      Outbound-1: From 1.1.1.1,
        to 2.2.2.1, UDP, src 1701,     dst 1701\n      Inbound-1:  From 2.2.2.1, to
        1.1.1.1, UDP, src 1701,     dst 1701\n      Inbound-2:  From 2.2.2.1, to 1.1.1.1,
        UDP, src Any-Port, dst 1701\n   Responder Filters:\n      Outbound-1: None,
        dynamically injected when IKE Phase 2 completes\n      Inbound-1:  From Any-Addr,
        to 2.2.2.1, UDP, src Any-Port, dst 1701\n   After IKE Phase 2 completes the
        filters at the initiator and\n   responder will be:\n   Initiator Filters:\n
        \     Outbound-1: From 1.1.1.1, to 2.2.2.1, UDP, src 1701,     dst 1701\n
        \     Inbound-1:  From 2.2.2.1, to 1.1.1.1, UDP, src 1701,     dst 1701\n
        \     Inbound-2:  From 2.2.2.1, to 1.1.1.1, UDP, src Any-Port, dst 1701\n
        \  Responder Filters:\n      Outbound-1: From 2.2.2.1,  to 1.1.1.1, UDP, src
        1701,     dst 1701\n      Inbound-1:  From 1.1.1.1,  to 2.2.2.1, UDP, src
        1701,     dst 1701\n      Inbound-2:  From Any-Addr, to 2.2.2.1, UDP, src
        Any-Port, dst 1701\n"
      title: A.1.1 Protect the SCCRQ
    title: A.1 Initiator and Responder use fixed addresses and ports
  - contents:
    - "A.2 Gateway to Gateway Scenario where Initiator and Responder use\n    dynamic
      ports\n   In this scenario either side is allowed to initiate the tunnel.\n
      \  Since dynamic ports will be used, an extra phase 2 negotiation must\n   occur
      to protect the SCCRP sent from the responder to the initiator.\n   Other than
      the additional phase 2 setup, the only other difference is\n   that L2TP on
      the responder must inject an additional filter into the\n   IPsec database once
      the new port number is chosen.\n   This example also shows the additional filter
      needed by the initiator\n   which allows either side to start the tunnel.  In
      either the dial-out\n   or the gateway to gateway scenario this additional filter
      is\n   required.\n   For this example, assume the dynamic port given to the
      initiator is\n   5000 and his IP address is 1.1.1.1.  The responder will use
      an IP\n   address of 2.2.2.1 and a port number of 6000.\n   The filters for
      this scenario are:\n"
    - contents:
      - "A.2.1 Initial Filters to allow either side to respond to negotiations\n   In
        this case both peers must be able to accept phase 2 negotiations\n   to from
        L2TP peers.  My-IPAddr is defined as whatever IP address the\n   device is
        willing to accept L2TP negotiations on.\n   Responder Filters present at both
        peers:\n     Inbound-1: From Any-Addr, to My-IPAddr, UDP, src Any-Port, dst
        1701\n   Note: The source IP in the inbound-1 filter above for gateway to\n
        \  gateway tunnels can be IP specific, such as 1.1.1.1, not necessarily\n
        \  Any-Addr.\n"
      title: A.2.1 Initial Filters to allow either side to respond to negotiations
    - contents:
      - "A.2.2 Protect the SCCRQ, one peer is now the initiator\n   Initiator Filters:\n
        \     Outbound-1: From 1.1.1.1,  to 2.2.2.1, UDP, src 5000,     dst 1701\n
        \     Inbound-1:  From 2.2.2.1,  to 1.1.1.1, UDP, src 1701,     dst 5000\n
        \     Inbound-2:  From 2.2.2.1,  to 1.1.1.1, UDP, src Any-Port, dst 5000\n
        \     Inbound-3:  From Any-Addr, to 1.1.1.1, UDP, src Any-Port, dst 1701\n
        \  Responder Filters:\n      Outbound-1: None, dynamically injected when IKE
        Phase 2 completes\n      Inbound-1:  From Any-Addr, to 2.2.2.1, UDP, src Any-Port,
        dst 1701\n   After IKE Phase 2 completes the filters at the initiator and\n
        \  responder will be:\n   Initiator Filters:\n      Outbound-1: From 1.1.1.1,
        \ to 2.2.2.1, UDP, src 5000,     dst 1701\n      Inbound-1:  From 2.2.2.1,
        \ to 1.1.1.1, UDP, src 1701,     dst 5000\n      Inbound-2:  From 2.2.2.1,
        \ to 1.1.1.1, UDP, src Any-Port, dst 5000\n      Inbound-3:  From Any-Addr,
        to 1.1.1.1, UDP, src Any-Port, dst 1701\n   Responder Filters:\n      Outbound-1:
        From 2.2.2.1,  to 1.1.1.1, UDP, src 1701,     dst 5000\n      Inbound-1:  From
        1.1.1.1,  to 2.2.2.1, UDP, src 5000,     dst 1701\n      Inbound-2:  From
        Any-Addr, to 2.2.2.1, UDP, src Any-Port, dst 1701\n"
      title: A.2.2 Protect the SCCRQ, one peer is now the initiator
    - contents:
      - "A.2.3 Protect the SCCRP after port change\n   At this point the responder
        knows which port number it is going to\n   use.  New filters should be injected
        by L2TP to reflect this new port\n   assignment.\n   The new filter set at
        the responder is:\n   Responder Filters:\n      Outbound-1: From 2.2.2.1,
        \ to 1.1.1.1, UDP, src 6000,     dst 5000\n      Outbound-2: From 2.2.2.1,
        \ to 1.1.1.1, UDP, src 1701,     dst 5000\n      Inbound-1:  From 1.1.1.1,
        \ to 2.2.2.1, UDP, src 5000,     dst 6000\n      Inbound-2:  From 1.1.1.1,
        \ to 2.2.2.1, UDP, src 5000,     dst 1701\n      Inbound-3:  From Any-Addr,
        to 2.2.2.1, UDP, src Any-Port, dst 1701\n   The second phase 2 will start
        once L2TP sends the SCCRP.  Once the\n   phase 2 negotiations complete, the
        new filter set at the initiator\n   and the responder will be:\n   Initiator
        Filters:\n      Outbound-1: From 1.1.1.1, to 2.2.2.1, UDP, src 5000,     dst
        6000\n      Outbound-2: From 1.1.1.1, to 2.2.2.1, UDP, src 5000,     dst 1701\n
        \     Inbound-1:  From 2.2.2.1, to 1.1.1.1, UDP, src 6000,     dst 5000\n
        \     Inbound-2:  From 2.2.2.1, to 1.1.1.1, UDP, src 1701,     dst 5000\n
        \     Inbound-3:  From 2.2.2.1, to 1.1.1.1, UDP, src Any-Port, dst 1701\n
        \  Responder Filters:\n      Outbound-1: From 2.2.2.1,  to 1.1.1.1, UDP, src
        6000,     dst 5000\n      Outbound-2: From 2.2.2.1,  to 1.1.1.1, UDP, src
        1701,     dst 5000\n      Inbound-1:  From 1.1.1.1,  to 2.2.2.1, UDP, src
        5000,     dst 6000\n      Inbound-2:  From 1.1.1.1,  to 2.2.2.1, UDP, src
        5000,     dst 1701\n      Inbound-3:  From Any-Addr, to 2.2.2.1, UDP, src
        Any-Port, dst 1701\n   Once the L2TP tunnel has been successfully established,
        the original\n   phase 2 may be deleted.  This allows the Inbound-2 and Outbound-2\n
        \  filter statements to be removed as well.\n"
      title: A.2.3 Protect the SCCRP after port change
    title: A.2 Gateway to Gateway Scenario where Initiator and Responder use
  title: 'Appendix A: Example IPsec Filter sets for L2TP Tunnel Establishment'
- contents:
  - "Intellectual Property Statement\n   The IETF takes no position regarding the
    validity or scope of any\n   intellectual property or other rights that might
    be claimed to\n   pertain to the implementation or use of the technology described
    in\n   this document or the extent to which any license under such rights\n   might
    or might not be available; neither does it represent that it\n   has made any
    effort to identify any such rights.  Information on the\n   IETF's procedures
    with respect to rights in standards-track and\n   standards-related documentation
    can be found in BCP-11.  Copies of\n   claims of rights made available for publication
    and any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: Intellectual Property Statement
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
