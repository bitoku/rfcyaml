- title: __initial_text__
  contents:
  - "                      SMTP Service Extension for\n               Secure SMTP\
    \ over Transport Layer Security\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an extension to the SMTP (Simple Mail\n\
    \   Transfer Protocol) service that allows an SMTP server and client to\n   use\
    \ TLS (Transport Layer Security) to provide private, authenticated\n   communication\
    \ over the Internet.  This gives SMTP agents the ability\n   to protect some or\
    \ all of their communications from eavesdroppers and\n   attackers.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   SMTP [RFC2821] servers and clients normally communicate in\
    \ the clear\n   over the Internet.  In many cases, this communication goes through\n\
    \   one or more router that is not controlled or trusted by either\n   entity.\
    \  Such an untrusted router might allow a third party to\n   monitor or alter\
    \ the communications between the server and client.\n   Further, there is often\
    \ a desire for two SMTP agents to be able to\n   authenticate each others' identities.\
    \  For example, a secure SMTP\n   server might only allow communications from\
    \ other SMTP agents it\n   knows, or it might act differently for messages received\
    \ from an\n   agent it knows than from one it doesn't know.\n   TLS [TLS], more\
    \ commonly known as SSL, is a popular mechanism for\n   enhancing TCP communications\
    \ with privacy and authentication.  TLS is\n   in wide use with the HTTP protocol,\
    \ and is also being used for adding\n   security to many other common protocols\
    \ that run over TCP.\n   This document obsoletes RFC 2487.\n"
- title: 1.1 Terminology
  contents:
  - "1.1 Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2. STARTTLS Extension
  contents:
  - "2. STARTTLS Extension\n   The STARTTLS extension to SMTP is laid out as follows:\n\
    \   (1) the name of the SMTP service defined here is STARTTLS;\n   (2) the EHLO\
    \ keyword value associated with the extension is STARTTLS;\n   (3) the STARTTLS\
    \ keyword has no parameters;\n   (4) a new SMTP verb, \"STARTTLS\", is defined;\n\
    \   (5) no additional parameters are added to any SMTP command.\n"
- title: 3. The STARTTLS Keyword
  contents:
  - "3. The STARTTLS Keyword\n   The STARTTLS keyword is used to tell the SMTP client\
    \ that the SMTP\n   server is currently able to negotiate the use of TLS.  It\
    \ takes no\n   parameters.\n"
- title: 4. The STARTTLS Command
  contents:
  - "4. The STARTTLS Command\n   The format for the STARTTLS command is:\n   STARTTLS\n\
    \   with no parameters.\n   After the client gives the STARTTLS command, the server\
    \ responds with\n   one of the following reply codes:\n   220 Ready to start TLS\n\
    \   501 Syntax error (no parameters allowed)\n   454 TLS not available due to\
    \ temporary reason\n   If the client receives the 454 response, the client must\
    \ decide\n   whether or not to continue the SMTP session.  Such a decision is\n\
    \   based on local policy.  For instance, if TLS was being used for\n   client\
    \ authentication, the client might try to continue the session,\n   in case the\
    \ server allows it even with no authentication.  However,\n   if TLS was being\
    \ negotiated for encryption, a client that gets a 454\n   response needs to decide\
    \ whether to send the message anyway with no\n   TLS encryption, whether to wait\
    \ and try again later, or whether to\n   give up and notify the sender of the\
    \ error.\n   A publicly-referenced SMTP server MUST NOT require use of the\n \
    \  STARTTLS extension in order to deliver mail locally.  This rule\n   prevents\
    \ the STARTTLS extension from damaging the interoperability of\n   the Internet's\
    \ SMTP infrastructure.  A publicly-referenced SMTP\n   server is an SMTP server\
    \ which runs on port 25 of an Internet host\n   listed in the MX record (or A\
    \ record if an MX record is not present)\n   for the domain name on the right\
    \ hand side of an Internet mail\n   address.\n   Any SMTP server may refuse to\
    \ accept messages for relay based on\n   authentication supplied during the TLS\
    \ negotiation.  An SMTP server\n   that is not publicly referenced may refuse\
    \ to accept any messages for\n   relay or local delivery based on authentication\
    \ supplied during the\n   TLS negotiation.\n   A SMTP server that is not publicly\
    \ referenced may choose to require\n   that the client perform a TLS negotiation\
    \ before accepting any\n   commands.  In this case, the server SHOULD return the\
    \ reply code:\n   530 Must issue a STARTTLS command first\n   to every command\
    \ other than NOOP, EHLO, STARTTLS, or QUIT.  If the\n   client and server are\
    \ using the ENHANCEDSTATUSCODES ESMTP extension\n   [RFC2034], the status code\
    \ to be returned SHOULD be 5.7.0.\n   After receiving a 220 response to a STARTTLS\
    \ command, the client MUST\n   start the TLS negotiation before giving any other\
    \ SMTP commands.  If,\n   after having issued the STARTTLS command, the client\
    \ finds out that\n   some failure prevents it from actually starting a TLS handshake,\
    \ then\n   it SHOULD abort the connection.\n   If the SMTP client is using pipelining\
    \ as defined in RFC 2920, the\n   STARTTLS command must be the last command in\
    \ a group.\n"
- title: 4.1 Processing After the STARTTLS Command
  contents:
  - "4.1 Processing After the STARTTLS Command\n   After the TLS handshake has been\
    \ completed, both parties MUST\n   immediately decide whether or not to continue\
    \ based on the\n   authentication and privacy achieved.  The SMTP client and server\
    \ may\n   decide to move ahead even if the TLS negotiation ended with no\n   authentication\
    \ and/or no privacy because most SMTP services are\n   performed with no authentication\
    \ and no privacy, but some SMTP\n   clients or servers may want to continue only\
    \ if a particular level of\n   authentication and/or privacy was achieved.\n \
    \  If the SMTP client decides that the level of authentication or\n   privacy\
    \ is not high enough for it to continue, it SHOULD issue an\n   SMTP QUIT command\
    \ immediately after the TLS negotiation is complete.\n   If the SMTP server decides\
    \ that the level of authentication or\n   privacy is not high enough for it to\
    \ continue, it SHOULD reply to\n   every SMTP command from the client (other than\
    \ a QUIT command) with\n   the 554 reply code (with a possible text string such\
    \ as \"Command\n   refused due to lack of security\").\n   The decision of whether\
    \ or not to believe the authenticity of the\n   other party in a TLS negotiation\
    \ is a local matter.  However, some\n   general rules for the decisions are:\n\
    \   -  A SMTP client would probably only want to authenticate an SMTP\n      server\
    \ whose server certificate has a domain name that is the\n      domain name that\
    \ the client thought it was connecting to.\n   -  A publicly-referenced  SMTP\
    \ server would probably want to accept\n      any verifiable certificate from\
    \ an SMTP client, and would possibly\n      want to put distinguishing information\
    \ about the certificate in\n      the Received header of messages that were relayed\
    \ or submitted\n      from the client.\n"
- title: 4.2 Result of the STARTTLS Command
  contents:
  - "4.2 Result of the STARTTLS Command\n   Upon completion of the TLS handshake,\
    \ the SMTP protocol is reset to\n   the initial state (the state in SMTP after\
    \ a server issues a 220\n   service ready greeting).  The server MUST discard\
    \ any knowledge\n   obtained from the client, such as the argument to the EHLO\
    \ command,\n   which was not obtained from the TLS negotiation itself.  The client\n\
    \   MUST discard any knowledge obtained from the server, such as the list\n  \
    \ of SMTP service extensions, which was not obtained from the TLS\n   negotiation\
    \ itself.  The client SHOULD send an EHLO command as the\n   first command after\
    \ a successful TLS negotiation.\n   The list of SMTP service extensions returned\
    \ in response to an EHLO\n   command received after the TLS handshake MAY be different\
    \ than the\n   list returned before the TLS handshake.  For example, an SMTP server\n\
    \   might not want to advertise support for a particular SASL mechanism\n   [SASL]\
    \ unless a client has sent an appropriate client certificate\n   during a TLS\
    \ handshake.\n   Both the client and the server MUST know if there is a TLS session\n\
    \   active.  A client MUST NOT attempt to start a TLS session if a TLS\n   session\
    \ is already active.  A server MUST NOT return the STARTTLS\n   extension in response\
    \ to an EHLO command received after a TLS\n   handshake has completed.\n"
- title: 4.3 STARTTLS on the Submission Port
  contents:
  - "4.3 STARTTLS on the Submission Port\n   STARTTLS is a valid ESMTP extension when\
    \ used on the Submission port,\n   as defined in [RFC2476].  In fact, since the\
    \ submission port is by\n   definition not a publicly referenced SMTP server,\
    \ the STARTTLS\n   extension can be particularly useful by providing security\
    \ and\n   authentication for this service.\n"
- title: 5. Usage Example
  contents:
  - "5. Usage Example\n   The following dialog illustrates how a client and server\
    \ can start a\n   TLS session:\n   S: <waits for connection on TCP port 25>\n\
    \   C: <opens connection>\n   S: 220 mail.imc.org SMTP service ready\n   C: EHLO\
    \ mail.example.com\n   S: 250-mail.imc.org offers a warm hug of welcome\n   S:\
    \ 250-8BITMIME\n   S: 250-STARTTLS\n   S: 250 DSN\n   C: STARTTLS\n   S: 220 Go\
    \ ahead\n   C: <starts TLS negotiation>\n   C & S: <negotiate a TLS session>\n\
    \   C & S: <check result of negotiation>\n   C: EHLO mail.example.com\n   S: 250-mail.imc.org\
    \ touches your hand gently for a moment\n   S: 250-8BITMIME\n   S: 250 DSN\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   It should be noted that SMTP is not an end-to-end\
    \ mechanism.  Thus,\n   if an SMTP client/server pair decide to add TLS privacy,\
    \ they are not\n   securing the transport from the originating mail user agent\
    \ to the\n   recipient.  Further, because delivery of a single piece of mail may\n\
    \   go between more than two SMTP servers, adding TLS privacy to one pair\n  \
    \ of servers does not mean that the entire SMTP chain has been made\n   private.\
    \  Further, just because an SMTP server can authenticate an\n   SMTP client, it\
    \ does not mean that the mail from the SMTP client was\n   authenticated by the\
    \ SMTP client when the client received it.\n   Both the SMTP client and server\
    \ must check the result of the TLS\n   negotiation to see whether an acceptable\
    \ degree of authentication and\n   privacy was achieved.  Ignoring this step completely\
    \ invalidates\n   using TLS for security.  The decision about whether acceptable\n\
    \   authentication or privacy was achieved is made locally, is\n   implementation-dependent,\
    \ and is beyond the scope of this document.\n   The SMTP client and server should\
    \ note carefully the result of the\n   TLS negotiation.  If the negotiation results\
    \ in no privacy, or if it\n   results in privacy using algorithms or key lengths\
    \ that are deemed\n   not strong enough, or if the authentication is not good\
    \ enough for\n   either party, the client may choose to end the SMTP session with\
    \ an\n   immediate QUIT command, or the server may choose to not accept any\n\
    \   more SMTP commands.\n   A man-in-the-middle attack can be launched by deleting\
    \ the \"250\n   STARTTLS\" response from the server.  This would cause the client\
    \ not\n   to try to start a TLS session.  Another man-in-the-middle attack is\n\
    \   to allow the server to announce its STARTTLS capability, but to alter\n  \
    \ the client's request to start TLS and the server's response.  In\n   order to\
    \ defend against such attacks both clients and servers MUST be\n   able to be\
    \ configured to require successful TLS negotiation of an\n   appropriate cipher\
    \ suite for selected hosts before messages can be\n   successfully transferred.\
    \  The additional option of using TLS when\n   possible SHOULD also be provided.\
    \  An implementation MAY provide the\n   ability to record that TLS was used in\
    \ communicating with a given\n   peer and generating a warning if it is not used\
    \ in a later session.\n   If the TLS negotiation fails or if the client receives\
    \ a 454\n   response, the client has to decide what to do next.  There are three\n\
    \   main choices: go ahead with the rest of the SMTP session, retry TLS\n   at\
    \ a later time, or give up and return the mail to the sender.  If a\n   failure\
    \ or error occurs, the client can assume that the server may be\n   able to negotiate\
    \ TLS in the future, and should try negotiate TLS in\n   a later session, until\
    \ some locally-chosen timeout occurs, at which\n   point, the client should return\
    \ the mail to the sender.  However, if\n   the client and server were only using\
    \ TLS for authentication, the\n   client may want to proceed with the SMTP session,\
    \ in case some of the\n   operations the client wanted to perform are accepted\
    \ by the server\n   even if the client is unauthenticated.\n   Before the TLS\
    \ handshake has begun, any protocol interactions are\n   performed in the clear\
    \ and may be modified by an active attacker.\n   For this reason, clients and\
    \ servers MUST discard any knowledge\n   obtained prior to the start of the TLS\
    \ handshake upon completion of\n   the TLS handshake.\n   The STARTTLS extension\
    \ is not suitable for authenticating the author\n   of an email message unless\
    \ every hop in the delivery chain, including\n   the submission to the first SMTP\
    \ server, is authenticated.  Another\n   proposal [SMTP-AUTH] can be used to authenticate\
    \ delivery and MIME\n   security multiparts [MIME-SEC] can be used to authenticate\
    \ the author\n   of an email message.  In addition, the [SMTP-AUTH] proposal offers\n\
    \   simpler and more flexible options to authenticate an SMTP client and\n   the\
    \ SASL EXTERNAL mechanism [SASL] MAY be used in conjunction with\n   the STARTTLS\
    \ command to provide an authorization identity.\n"
- title: 7. References
  contents:
  - "7. References\n   [RFC2821]  Klensin, J., \"Simple Mail Transfer Protocol\",\
    \ RFC 2821,\n               April 2001.\n   [RFC2034]  Freed, N., \"SMTP Service\
    \ Extension for Returning Enhanced\n               Error Codes\", RFC 2034, October\
    \ 1996.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2476]\
    \  Gellens, R. and J. Klensin, \"Message Submission\", RFC\n               2476,\
    \ December 1998.\n   [SASL]      Myers, J., \"Simple Authentication and Security\
    \ Layer\n               (SASL)\", RFC 2222, October 1997.\n   [SMTP-AUTH] Myers,\
    \ J., \"SMTP Service Extension for Authentication\",\n               RFC 2554,\
    \ March 1999.\n   [TLS]       Dierks, T. and C. Allen, \"The TLS Protocol Version\
    \ 1.0\",\n               RFC 2246, January 1999.\n"
- title: Appendix
  contents:
  - "Appendix\n   This document is a revision of RFC 2487, which is a Proposed\n \
    \  Standard. The changes from that document are:\n   -  Section 5 and 7: More\
    \ discussion of the man-in-the-middle attacks\n   -  Section 5: Additional discussion\
    \ of when a server should and\n      should not advertise the STARTTLS extension\n\
    \   -  Section 5: Changed the requirements on SMTP clients after\n      receiving\
    \ a 220 response.\n   -  Section 5.1: Clarified description of verifying certificates.\n\
    \   -  Section 5.3: Added the section on \"STARTTLS on the Submission\n      Port\"\
    \n   -  Section 6: Bug fix in the example to indicate that the client\n      needs\
    \ to issue a new EHLO command, as already is described in\n      section 5.2.\n\
    \   -  Section 7: Clarification of the paragraph on acceptable degree of\n   \
    \   privacy. Significant change to the discussion of how to avoid a\n      man-in-the-middle\
    \ attack.\n   -  Section A: Update reference from RFC 821 to RFC 2821.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Paul Hoffman\n   Internet Mail Consortium\n   127 Segre\
    \ Place\n   Santa Cruz, CA  95060\n   Phone: (831) 426-9827\n   EMail: phoffman@imc.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
