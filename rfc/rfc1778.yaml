- title: __initial_text__
  contents:
  - '        The String Representation of Standard Attribute Syntaxes

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Lightweight Directory Access Protocol (LDAP) [9] requires that\n\
    \   the contents of AttributeValue fields in protocol elements be octet\n   strings.\
    \  This document defines the requirements that must be\n   satisfied by encoding\
    \ rules used to render X.500 Directory attribute\n   syntaxes into a form suitable\
    \ for use in the LDAP, then goes on to\n   define the encoding rules for the standard\
    \ set of attribute syntaxes\n   defined in [1,2] and [3].\n"
- title: 1.  Attribute Syntax Encoding Requirements.
  contents:
  - "1.  Attribute Syntax Encoding Requirements.\n   This section defines general\
    \ requirements for lightweight directory\n   protocol attribute syntax encodings.\
    \ All documents defining attribute\n   syntax encodings for use by the lightweight\
    \ directory protocols are\n   expected to conform to these requirements.\n   The\
    \ encoding rules defined for a given attribute syntax must produce\n   octet strings.\
    \  To the greatest extent possible, encoded octet\n   strings should be usable\
    \ in their native encoded form for display\n   purposes. In particular, encoding\
    \ rules for attribute syntaxes\n   defining non-binary values should produce strings\
    \ that can be\n   displayed with little or no translation by clients implementing\
    \ the\n   lightweight directory protocols.\n"
- title: 2.  Standard Attribute Syntax Encodings
  contents:
  - "2.  Standard Attribute Syntax Encodings\n   For the purposes of defining the\
    \ encoding rules for the standard\n   attribute syntaxes, the following auxiliary\
    \ BNF definitions will be\n   used:\n     <a> ::= 'a' | 'b' | 'c' | 'd' | 'e'\
    \ | 'f' | 'g' | 'h' | 'i' |\n             'j' | 'k' | 'l' | 'm' | 'n' | 'o' |\
    \ 'p' | 'q' | 'r' |\n             's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'\
    \ | 'A' |\n             'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' |\n\
    \             'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' |\n        \
    \     'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'\n     <d> ::= '0' | '1' | '2' |\
    \ '3' | '4' | '5' | '6' | '7' | '8' | '9'\n     <hex-digit> ::= <d> | 'a' | 'b'\
    \ | 'c' | 'd' | 'e' | 'f' |\n                      'A' | 'B' | 'C' | 'D' | 'E'\
    \ | 'F'\n     <k> ::= <a> | <d> | '-'\n     <p> ::= <a> | <d> | ''' | '(' | ')'\
    \ | '+' | ',' | '-' | '.' |\n             '/' | ':' | '?' | ' '\n     <CRLF> ::=\
    \ The ASCII newline character with hexadecimal value 0x0A\n     <letterstring>\
    \ ::= <a> | <a> <letterstring>\n     <numericstring> ::= <d> | <d> <numericstring>\n\
    \     <keystring> ::= <a> | <a> <anhstring>\n     <anhstring> ::= <k> | <k> <anhstring>\n\
    \     <printablestring> ::= <p> | <p> <printablestring>\n     <space> ::= ' '\
    \ | ' ' <space>\n"
- title: 2.1.  Undefined
  contents:
  - "2.1.  Undefined\n   Values of type Undefined are encoded as if they were values\
    \ of type\n   Octet String, with the string value being the BER-encoded version\
    \ of\n   the value.\n"
- title: 2.2.  Case Ignore String
  contents:
  - "2.2.  Case Ignore String\n   A string of type caseIgnoreStringSyntax is encoded\
    \ as the string\n   value itself.\n"
- title: 2.3.  Case Exact String
  contents:
  - "2.3.  Case Exact String\n   The encoding of a string of type caseExactStringSyntax\
    \ is the string\n   value itself.\n"
- title: 2.4.  Printable String
  contents:
  - "2.4.  Printable String\n   The encoding of a string of type printableStringSyntax\
    \ is the string\n   value itself.\n"
- title: 2.5.  Numeric String
  contents:
  - "2.5.  Numeric String\n   The encoding of a string of type numericStringSyntax\
    \ is the string\n   value itself.\n"
- title: 2.6.  Octet String
  contents:
  - "2.6.  Octet String\n   The encoding of a string of type octetStringSyntax is\
    \ the string\n   value itself.\n"
- title: 2.7.  Case Ignore IA5 String
  contents:
  - "2.7.  Case Ignore IA5 String\n   The encoding of a string of type caseIgnoreIA5String\
    \ is the string\n   value itself.\n"
- title: 2.8.  IA5 String
  contents:
  - "2.8.  IA5 String\n   The encoding of a string of type iA5StringSyntax is the\
    \ string value\n   itself.\n"
- title: 2.9.  T61 String
  contents:
  - "2.9.  T61 String\n   The encoding of a string of type t61StringSyntax is the\
    \ string value\n   itself.\n"
- title: 2.10.  Case Ignore List
  contents:
  - "2.10.  Case Ignore List\n   Values of type caseIgnoreListSyntax are encoded according\
    \ to the\n   following BNF:\n"
- title: <caseignorelist> ::= <caseignorestring> |
  contents:
  - "<caseignorelist> ::= <caseignorestring> |\n                     <caseignorestring>\
    \ '$' <caseignorelist>\n"
- title: <caseignorestring> ::= a string encoded according to the rules for Case
  contents:
  - "<caseignorestring> ::= a string encoded according to the rules for Case\n   \
    \                    Ignore String as above.\n"
- title: 2.11.  Case Exact List
  contents:
  - "2.11.  Case Exact List\n   Values of type caseExactListSyntax are encoded according\
    \ to the\n   following BNF:\n"
- title: <caseexactlist> ::= <caseexactstring> |
  contents:
  - "<caseexactlist> ::= <caseexactstring> |\n                     <caseexactstring>\
    \ '$' <caseexactlist>\n"
- title: <caseexactstring> ::= a string encoded according to the rules for Case
  contents:
  - "<caseexactstring> ::= a string encoded according to the rules for Case\n    \
    \                  Exact String as above.\n"
- title: 2.12.  Distinguished Name
  contents:
  - "2.12.  Distinguished Name\n   Values of type distinguishedNameSyntax are encoded\
    \ to have the\n   representation defined in [5].\n"
- title: 2.13.  Boolean
  contents:
  - "2.13.  Boolean\n   Values of type booleanSyntax are encoded according to the\
    \ following\n   BNF:\n     <boolean> ::= \"TRUE\" | \"FALSE\"\n   Boolean values\
    \ have an encoding of \"TRUE\" if they are logically true,\n   and have an encoding\
    \ of \"FALSE\" otherwise.\n"
- title: 2.14.  Integer
  contents:
  - "2.14.  Integer\n   Values of type integerSyntax are encoded as the decimal\n\
    \   representation of their values, with each decimal digit represented\n   by\
    \ the its character equivalent. So the digit 1 is represented by the\n   character\n"
- title: 2.15.  Object Identifier
  contents:
  - "2.15.  Object Identifier\n   Values of type objectIdentifierSyntax are encoded\
    \ according to the\n   following BNF:\n     <oid> ::= <descr> | <descr> '.' <numericoid>\
    \ | <numericoid>\n     <descr> ::= <keystring>\n     <numericoid> ::= <numericstring>\
    \ | <numericstring> '.' <numericoid>\n   In the above BNF, <descr> is the syntactic\
    \ representation of an\n   object descriptor. When encoding values of type\n \
    \  objectIdentifierSyntax, the first encoding option should be used in\n   preference\
    \ to the second, which should be used in preference to the\n   third wherever\
    \ possible. That is, in encoding object identifiers,\n   object descriptors (where\
    \ assigned and known by the implementation)\n   should be used in preference to\
    \ numeric oids to the greatest extent\n   possible. For example, in encoding the\
    \ object identifier representing\n   an organizationName, the descriptor \"organizationName\"\
    \ is preferable\n   to \"ds.4.10\", which is in turn preferable to the string\
    \ \"2.5.4.10\".\n"
- title: 2.16.  Telephone Number
  contents:
  - "2.16.  Telephone Number\n   Values of type telephoneNumberSyntax are encoded\
    \ as if they were\n   Printable String types.\n"
- title: 2.17.  Telex Number
  contents:
  - "2.17.  Telex Number\n   Values of type telexNumberSyntax are encoded according\
    \ to the\n   following BNF:\n     <telex-number> ::= <actual-number> '$' <country>\
    \ '$' <answerback>\n     <actual-number> ::= <printablestring>\n     <country>\
    \ ::= <printablestring>\n     <answerback> ::= <printablestring>\n   In the above,\
    \ <actual-number> is the syntactic representation of the\n   number portion of\
    \ the TELEX number being encoded, <country> is the\n   TELEX country code, and\
    \ <answerback> is the answerback code of a\n   TELEX terminal.\n"
- title: 2.18.  Teletex Terminal Identifier
  contents:
  - "2.18.  Teletex Terminal Identifier\n   Values of type teletexTerminalIdentifier\
    \ are encoded according to the\n   following BNF:\n     <teletex-id> ::= <printablestring>\
    \  0*('$' <ttx-parm>)\n     <ttx-param> ::= <ttx-key> ':' <ttx-value>\n     <ttx-key>\
    \ ::= 'graphic' | 'control' | 'misc' | 'page' | 'private'\n     <ttx-value> ::=\
    \ <octetstring>\n   In the above, the first <printablestring> is the encoding\
    \ of the\n   first portion of the teletex terminal identifier to be encoded, and\n\
    \   the subsequent 0 or more <printablestrings> are subsequent portions\n   of\
    \ the teletex terminal identifier.\n"
- title: 2.19.  Facsimile Telephone Number
  contents:
  - "2.19.  Facsimile Telephone Number\n   Values of type FacsimileTelephoneNumber\
    \ are encoded according to the\n   following BNF:\n"
- title: <fax-number> ::= <printablestring> [ '$' <faxparameters> ]
  contents:
  - '<fax-number> ::= <printablestring> [ ''$'' <faxparameters> ]

    '
- title: <faxparameters> ::= <faxparm> | <faxparm> '$' <faxparameters>
  contents:
  - '<faxparameters> ::= <faxparm> | <faxparm> ''$'' <faxparameters>

    '
- title: <faxparm> ::= 'twoDimensional' | 'fineResolution' | 'unlimitedLength' |
  contents:
  - "<faxparm> ::= 'twoDimensional' | 'fineResolution' | 'unlimitedLength' |\n   \
    \           'b4Length' | 'a3Width' | 'b4Width' | 'uncompressed'\n   In the above,\
    \ the first <printablestring> is the actual fax number,\n   and the <faxparm>\
    \ tokens represent fax parameters.\n"
- title: 2.20.  Presentation Address
  contents:
  - "2.20.  Presentation Address\n   Values of type PresentationAddress are encoded\
    \ to have the\n   representation described in [6].\n"
- title: 2.21.  UTC Time
  contents:
  - "2.21.  UTC Time\n   Values of type uTCTimeSyntax are encoded as if they were\
    \ Printable\n   Strings with the strings containing a UTCTime value.\n"
- title: 2.22.  Guide (search guide)
  contents:
  - "2.22.  Guide (search guide)\n   Values of type Guide, such as values of the searchGuide\
    \ attribute,\n   are encoded according to the following BNF:\n"
- title: <guide-value> ::= [ <object-class> '#' ] <criteria>
  contents:
  - '<guide-value> ::= [ <object-class> ''#'' ] <criteria>

    '
- title: <object-class> ::= an encoded value of type objectIdentifierSyntax
  contents:
  - '<object-class> ::= an encoded value of type objectIdentifierSyntax

    '
- title: <criteria> ::= <criteria-item> | <criteria-set> | '!' <criteria>
  contents:
  - '<criteria> ::= <criteria-item> | <criteria-set> | ''!'' <criteria>

    '
- title: <criteria-set> ::= [ '(' ] <criteria> '&' <criteria-set> [ ')' ] |
  contents:
  - "<criteria-set> ::= [ '(' ] <criteria> '&' <criteria-set> [ ')' ] |\n        \
    \           [ '(' ] <criteria> '|' <criteria-set> [ ')' ]\n"
- title: <criteria-item> ::= [ '(' ] <attributetype> '$' <match-type> [ ')' ]
  contents:
  - '<criteria-item> ::= [ ''('' ] <attributetype> ''$'' <match-type> [ '')'' ]

    '
- title: <match-type> ::= "EQ" | "SUBSTR" | "GE" | "LE" | "APPROX"
  contents:
  - '<match-type> ::= "EQ" | "SUBSTR" | "GE" | "LE" | "APPROX"

    '
- title: 2.23.  Postal Address
  contents:
  - "2.23.  Postal Address\n   Values of type PostalAddress are encoded according\
    \ to the following\n   BNF:\n     <postal-address> ::= <t61string> | <t61string>\
    \ '$' <postal-address>\n   In the above, each <t61string> component of a postal\
    \ address value is\n   encoded as a value of type t61StringSyntax.\n"
- title: 2.24.  User Password
  contents:
  - "2.24.  User Password\n   Values of type userPasswordSyntax are encoded as if\
    \ they were of type\n   octetStringSyntax.\n"
- title: 2.25.  User Certificate
  contents:
  - "2.25.  User Certificate\n   Values of type userCertificate are encoded according\
    \ to the following\n   BNF:\n     <certificate> ::= <version> '#' <serial> '#'\
    \ <signature-algorithm-id>\n                     '#' <issuer> '#' <validity> '#'\
    \ <subject>\n                     '#' <public-key-info> '#' <encrypted-sign-value>\n\
    \     <version> ::= <integervalue>\n     <serial> ::= <integervalue>\n     <signature-algorithm-id>\
    \ ::= <algorithm-id>\n     <issuer> ::= an encoded Distinguished Name\n     <validity>\
    \ ::= <not-before-time> '#' <not-after-time>\n     <not-before-time> ::= <utc-time>\n\
    \     <not-after-time> ::= <utc-time>\n     <algorithm-parameters> ::=  <null>\
    \ | <integervalue> |\n                                 '{ASN}' <hex-string>\n\
    \     <subject> ::= an encoded Distinguished Name\n     <public-key-info> ::=\
    \ <algorithm-id> '#' <encrypted-sign-value>\n     <encrypted-sign-value> ::= <hex-string>\
    \ | <hex-string> '-' <d>\n     <algorithm-id> ::= <oid> '#' <algorithm-parameters>\n\
    \     <utc-time> ::= an encoded UTCTime value\n     <hex-string> ::= <hex-digit>\
    \ | <hex-digit> <hex-string>\n"
- title: 2.26.  CA Certificate
  contents:
  - "2.26.  CA Certificate\n   Values of type cACertificate are encoded as if the\
    \ values were of\n   type userCertificate.\n"
- title: 2.27.  Authority Revocation List
  contents:
  - "2.27.  Authority Revocation List\n   Values of type authorityRevocationList are\
    \ encoded according to the\n   following BNF:\n"
- title: <certificate-list> ::= <signature-algorithm-id> '#' <issuer> '#' <utc-time>
  contents:
  - "<certificate-list> ::= <signature-algorithm-id> '#' <issuer> '#' <utc-time>\n\
    \                        [ '#' <revoked-certificates> ]\n                    \
    \    '#' <signature-algorithm-id>\n                        '#' <encrypted-sign-value>\n"
- title: <revoked-certificates> ::= 1*( '#' <revoked-certificate> )
  contents:
  - "<revoked-certificates> ::= 1*( '#' <revoked-certificate> )\n                \
    \        <signature-algorithm-id> '#' <encrypted-sign-value>\n"
- title: <revoked-certificate> ::= <signature-algorithm-id> '#' <issuer> '#'
  contents:
  - "<revoked-certificate> ::= <signature-algorithm-id> '#' <issuer> '#'\n       \
    \                 <serial> '#' <utc-time>\n   The syntactic components <signature-algorithm-id>,\
    \ <issuer>,\n   <encrypted-sign-value>, <utc-time>, <subject> and <serial> have\
    \ the\n   same definitions as in the BNF for the userCertificate attribute\n \
    \  syntax.\n"
- title: 2.28.  Certificate Revocation List
  contents:
  - "2.28.  Certificate Revocation List\n   Values of type certificateRevocationList\
    \ are encoded as if the values\n   were of type authorityRevocationList.\n"
- title: 2.29.  Cross Certificate Pair
  contents:
  - "2.29.  Cross Certificate Pair\n   Values of type crossCertificatePair are encoded\
    \ according to the\n   following BNF:\n     <certificate-pair> ::= <forward> '#'\
    \ <reverse>\n                             | <forward>\n                      \
    \       | <reverse>\n     <forward> ::= 'forward:' <certificate>\n     <reverse>\
    \ ::= 'reverse:' <certificate>\n   The syntactic component <certificate> has the\
    \ same definition as in\n   the BNF for the userCertificate attribute syntax.\n"
- title: 2.30.  Delivery Method
  contents:
  - "2.30.  Delivery Method\n   Values of type deliveryMethod are encoded according\
    \ to the following\n   BNF:\n     <delivery-value> ::= <pdm> | <pdm> '$' <delivery-value>\n\
    \     <pdm> ::= 'any' | 'mhs' | 'physical' | 'telex' | 'teletex' |\n         \
    \      'g3fax' | 'g4fax' | 'ia5' | 'videotex' | 'telephone'\n"
- title: 2.31.  Other Mailbox
  contents:
  - "2.31.  Other Mailbox\n   Values of the type otherMailboxSyntax are encoded according\
    \ to the\n   following BNF:\n     <otherMailbox> ::= <mailbox-type> '$' <mailbox>\n\
    \     <mailbox-type> ::= an encoded Printable String\n     <mailbox> ::= an encoded\
    \ IA5 String\n   In the above, <mailbox-type> represents the type of mail system\
    \ in\n   which the mailbox resides, for example \"Internet\" or \"MCIMail\"; and\n\
    \   <mailbox> is the actual mailbox in the mail system defined by\n   <mailbox-type>.\n"
- title: 2.32.  Mail Preference
  contents:
  - "2.32.  Mail Preference\n   Values of type mailPreferenceOption are encoded according\
    \ to the\n   following BNF:\n     <mail-preference> ::= \"NO-LISTS\" | \"ANY-LIST\"\
    \ | \"PROFESSIONAL-LISTS\"\n"
- title: 2.33.  MHS OR Address
  contents:
  - "2.33.  MHS OR Address\n   Values of type MHS OR Address are encoded as strings,\
    \ according to\n   the format defined in [10].\n"
- title: 2.34.  Distribution List Submit Permission
  contents:
  - "2.34.  Distribution List Submit Permission\n   Values of type DLSubmitPermission\
    \ are encoded as strings, according\n   to the following BNF:\n     <dlsubmit-perm>\
    \ ::= <dlgroup_label> ':' <dlgroup-value>\n                             | <dl-label>\
    \ ':' <dl-value>\n     <dlgroup-label> ::= 'group_member'\n     <dlgroup-value>\
    \ ::= <name>\n     <name> ::= an encoded Distinguished Name\n     <dl-label> ::=\
    \ 'individual' | 'dl_member' | 'pattern'\n     <dl-value> ::= <orname>\n     <orname>\
    \ ::= <address> '#' <dn>\n            |  <address>\n     <address> ::= <add-label>\
    \ ':' <oraddress>\n     <dn> ::= <dn-label> ':' <name>\n     <add-label> = 'X400'\n\
    \     <dn-label> = 'X500'\n   where <oraddress> is as defined in RFC 1327.\n"
- title: 2.35.  Photo
  contents:
  - "2.35.  Photo\n   Values of type Photo are encoded as if they were octet strings\n\
    \   containing JPEG images in the JPEG File Interchange Format (JFIF), as\n  \
    \ described in [8].\n"
- title: 2.36.  Fax
  contents:
  - "2.36.  Fax\n   Values of type Fax are encoded as if they were octet strings\n\
    \   containing Group 3 Fax images as defined in [7].\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 4.  Acknowledgements
  contents:
  - "4.  Acknowledgements\n   Many of the attribute syntax encodings defined in this\
    \ document are\n   adapted from those used in the QUIPU X.500 implementation.\
    \ The\n   contributions of the authors of the QUIPU implementation in the\n  \
    \ specification of the QUIPU syntaxes [4] are gratefully acknowledged.\n"
- title: 5.  Bibliography
  contents:
  - "5.  Bibliography\n   [1] The Directory: Selected Attribute Syntaxes.  CCITT,\n\
    \       Recommendation X.520.\n   [2] Information Processing Systems -- Open Systems\
    \ Interconnection --\n       The Directory: Selected Attribute Syntaxes.\n   [3]\
    \ Barker, P., and S. Kille, \"The COSINE and Internet X.500 Schema\",\n      \
    \ RFC 1274, University College London, November 1991.\n   [4] The ISO Development\
    \ Environment: User's Manual -- Volume 5:\n       QUIPU.  Colin Robbins, Stephen\
    \ E. Kille.\n   [5] Kille, S., \"A String Representation of Distinguished Names\"\
    , RFC\n       1779, ISODE Consortium, March 1995.\n   [6] Kille, S., \"A String\
    \ Representation for Presentation Addresses\",\n       RFC 1278, University College\
    \ London, November 1991.\n   [7] Terminal Equipment and Protocols for Telematic\
    \ Services -\n       Standardization of Group 3 facsimile apparatus for document\n\
    \       transmission.  CCITT, Recommendation T.4.\n   [8] JPEG File Interchange\
    \ Format (Version 1.02).  Eric Hamilton, C-\n       Cube Microsystems, Milpitas,\
    \ CA, September 1, 1992.\n   [9] Yeong, W., Howes, T., and S. Kille, \"Lightweight\
    \ Directory Access\n       Protocol\", RFC 1777, Performance Systems International,\n\
    \       University of Michigan, ISODE Consortium, March 1995.\n  [10] Alvestrand,\
    \ H., Kille, S., Miles, R., Rose, M., and S.  Thompson,\n       \"Mapping between\
    \ X.400 and RFC-822 Message Bodies\", RFC 1495,\n       SINTEF DELAB, ISODE Consortium,\
    \ Soft*Switch, Inc., Dover Beach\n       Consulting, Inc., Soft*Switch, Inc.,\
    \ August 1993.\n"
- title: 6.  Authors' Addresses
  contents:
  - "6.  Authors' Addresses\n       Tim Howes\n       University of Michigan\n   \
    \    ITD Research Systems\n       535 W William St.\n       Ann Arbor, MI 48103-4943\n\
    \       USA\n       Phone: +1 313 747-4454\n       EMail: tim@umich.edu\n    \
    \   Steve Kille\n       ISODE Consortium\n       PO Box 505\n       London\n \
    \      SW11 1DX\n       UK\n       Phone: +44-71-223-4062\n       EMail: S.Kille@isode.com\n\
    \       Wengyik Yeong\n       PSI Inc.\n       510 Huntmar Park Drive\n      \
    \ Herndon, VA 22070\n       USA\n       Phone: +1 703-450-8001\n       EMail:\
    \ yeongw@psilink.com\n       Colin Robbins\n       NeXor Ltd\n       University\
    \ Park\n       Nottingham\n       NG7 2RD\n       UK\n"
