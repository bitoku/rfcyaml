- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                      A. Mayrhofer
  contents:
  - 'Independent Submission                                      A. Mayrhofer

    '
- title: The Internationalized Deliberately Unreadable Network NOtation (I-DUNNO)
  contents:
  - 'The Internationalized Deliberately Unreadable Network NOtation (I-DUNNO)

    '
- title: Abstract
  contents:
  - "Abstract\n   Domain Names were designed for humans, IP addresses were not.  But\n\
    \   more than 30 years after the introduction of the DNS, a minority of\n   mankind\
    \ persists in invading the realm of machine-to-machine\n   communication by reading,\
    \ writing, misspelling, memorizing,\n   permuting, and confusing IP addresses.\
    \  This memo describes the\n   Internationalized Deliberately Unreadable Network\
    \ NOtation\n   (\"I-DUNNO\"), a notation designed to replace current textual\n\
    \   representations of IP addresses with something that is not only more\n   concise\
    \ but will also discourage this small, but obviously important,\n   subset of\
    \ human activity.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This is a contribution to the RFC Series, independently\n   of any other RFC\
    \ stream.  The RFC Editor has chosen to publish this\n   document at its discretion\
    \ and makes no statement about its value for\n   implementation or deployment.\
    \  Documents approved for publication by\n   the RFC Editor are not candidates\
    \ for any level of Internet Standard;\n   see Section 2 of RFC 7841.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8771.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Terminology\n   3.  The Notation\n\
    \     3.1.  Forming I-DUNNO\n     3.2.  Deforming I-DUNNO\n   4.  I-DUNNO Confusion\
    \ Level Requirements\n     4.1.  Minimum Confusion Level\n     4.2.  Satisfactory\
    \ Confusion Level\n     4.3.  Delightful Confusion Level\n   5.  Example\n   6.\
    \  IANA Considerations\n   7.  Security Considerations\n   8.  References\n  \
    \   8.1.  Normative References\n     8.2.  Informative References\n   Authors'\
    \ Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In Section 2.3 of [RFC0791], the original designers of the\
    \ Internet\n   Protocol carefully defined names and addresses as separate\n  \
    \ quantities.  While they did not explicitly reserve names for human\n   consumption\
    \ and addresses for machine use, they did consider the\n   matter indirectly in\
    \ their philosophical communal statement: \"A name\n   indicates what we seek.\"\
    \  This clearly indicates that names rather\n   than addresses should be of concern\
    \ to humans.\n   The specification of domain names in [RFC1034], and indeed the\n\
    \   continuing enormous effort put into the Domain Name System,\n   reinforces\
    \ the view that humans should use names and leave worrying\n   about addresses\
    \ to the machines.  RFC 1034 mentions \"users\" several\n   times, and even includes\
    \ the word \"humans\", even though it is\n   positioned slightly unfortunately,\
    \ though perfectly understandably,\n   in a context of \"annoying\" and \"can\
    \ wreak havoc\" (see Section 5.2.3\n   of [RFC1034]).  Nevertheless, this is another\
    \ clear indication that\n   domain names are made for human use, while IP addresses\
    \ are for\n   machine use.\n   Given this, and a long error-strewn history of\
    \ human attempts to\n   utilize addresses directly, it is obviously desirable\
    \ that humans\n   should not meddle with IP addresses.  For that reason, it appears\n\
    \   quite logical that a human-readable (textual) representation of IP\n   addresses\
    \ was just very vaguely specified in Section 2.1 of\n   [RFC1123].  Subsequently,\
    \ a directed effort to further discourage\n   human use by making IP addresses\
    \ more confusing was introduced in\n   [RFC1883] (which was obsoleted by [RFC8200]),\
    \ and additional options\n   for human puzzlement were offered in Section 2.2\
    \ of [RFC4291].  These\n   noble early attempts to hamper efforts by humans to\
    \ read, understand,\n   or even spell IP addressing schemes were unfortunately\
    \ severely\n   compromised in [RFC5952].\n   In order to prevent further damage\
    \ from human meddling with IP\n   addresses, there is a clear urgent need for\
    \ an address notation that\n   replaces these \"Legacy Notations\", and efficiently\
    \ discourages humans\n   from reading, modifying, or otherwise manipulating IP\
    \ addresses.\n   Research in this area long ago recognized the potential in\n\
    \   ab^H^Hperusing the intricacies, inaccuracies, and chaotic disorder of\n  \
    \ what humans are pleased to call a \"Cultural Technique\" (also known as\n  \
    \ \"Script\"), and with a certain inexorable inevitability has focused of\n  \
    \ late on the admirable confusion (and thus discouragement) potential\n   of [UNICODE]\
    \ as an address notation.  In Section 4, we introduce a\n   framework of Confusion\
    \ Levels as an aid to the evaluation of the\n   effectiveness of any Unicode-based\
    \ scheme in producing notation in a\n   form designed to be resistant to ready\
    \ comprehension or, heaven\n   forfend, mutation of the address, and so effecting\
    \ the desired\n   confusion and discouragement.\n   The authors welcome [RFC8369]\
    \ as a major step in the right direction.\n   However, we have some reservations\
    \ about the scheme proposed therein:\n   *  Our analysis of the proposed scheme\
    \ indicates that, while\n      impressively concise, it fails to attain more than\
    \ at best a\n      Minimum Confusion Level in our classification.\n   *  Humans,\
    \ especially younger ones, are becoming skilled at handling\n      emoji.  Over\
    \ time, this will negatively impact the discouragement\n      factor.\n   *  The\
    \ proposed scheme is specific to IPv6; if a solution to this\n      problem is\
    \ to be in any way timely, it must, as a matter of the\n      highest priority,\
    \ address IPv4.  After all, even taking the\n      regrettable effects of RFC\
    \ 5952 into account, IPv6 does at least\n      remain inherently significantly\
    \ more confusing and discouraging\n      than IPv4.\n   This document therefore\
    \ specifies an alternative Unicode-based\n   notation, the Internationalized Deliberately\
    \ Unreadable Network\n   NOtation (I-DUNNO).  This notation addresses each of\
    \ the concerns\n   outlined above:\n   *  I-DUNNO can generate Minimum, Satisfactory,\
    \ or Delightful levels\n      of confusion.\n   *  As well as emoji, it takes\
    \ advantage of other areas of Unicode\n      confusion.\n   *  It can be used\
    \ with IPv4 and IPv6 addresses.\n   We concede that I-DUNNO notation is markedly\
    \ less concise than that\n   of RFC 8369.  However, by permitting multiple code\
    \ points in the\n   representation of a single address, I-DUNNO opens up the full\n\
    \   spectrum of Unicode-adjacent code point interaction.  This is a\n   significant\
    \ factor in allowing I-DUNNO to achieve higher levels of\n   confusion.  I-DUNNO\
    \ also requires no change to the current size of\n   Unicode code points, and\
    \ so its chances of adoption and\n   implementation are (slightly) higher.\n \
    \  Note that the use of I-DUNNO in the reverse DNS system is currently\n   out\
    \ of scope.  The occasional human-induced absence of the magical\n   one-character\
    \ sequence U+002E is believed to cause sufficient\n   disorder there.\n   Media\
    \ Access Control (MAC) addresses are totally out of the question.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n\
    \   capitals, as shown here.\n   Additional terminology from [RFC6919] MIGHT apply.\n"
- title: 3.  The Notation
  contents:
  - "3.  The Notation\n   I-DUNNO leverages UTF-8 [RFC3629] to obfuscate IP addresses\
    \ for\n   humans.  UTF-8 uses sequences between 1 and 4 octets to represent\n\
    \   code points as follows:\n      | Char. number range    | UTF-8 octet sequence\
    \                |\n      | (hexadecimal)         | (binary)                 \
    \           |\n      | 0000 0000 - 0000 007F | 0xxxxxxx                      \
    \      |\n      | 0000 0080 - 0000 07FF | 110xxxxx 10xxxxxx                  \
    \ |\n      | 0000 0800 - 0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx          |\n \
    \     | 0001 0000 - 0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx |\n   I-DUNNO\
    \ uses that structure to convey addressing information as\n   follows:\n"
- title: 3.1.  Forming I-DUNNO
  contents:
  - "3.1.  Forming I-DUNNO\n   In order to form an I-DUNNO based on the Legacy Notation\
    \ of an IP\n   address, the following steps are performed:\n   1.  The octets\
    \ of the IP address are written as a bitstring in\n       network byte order.\n\
    \   2.  Working from left to right, the bitstring (32 bits for IPv4; 128\n   \
    \    bits for IPv6) is used to generate a list of valid UTF-8 octet\n       sequences.\
    \  To allocate a single UTF-8 sequence:\n       a.  Choose whether to generate\
    \ a UTF-8 sequence of 1, 2, 3, or 4\n           octets.  The choice OUGHT TO be\
    \ guided by the requirement to\n           generate a satisfactory Minimum Confusion\
    \ Level (Section 4.1)\n           (not to be confused with the minimum Satisfactory\
    \ Confusion\n           Level (Section 4.2)).  Refer to the character number range\
    \ in\n           Table 1 in order to identify which octet sequence lengths are\n\
    \           valid for a given bitstring.  For example, a 2-octet UTF-8\n     \
    \      sequence requires the next 11 bits to have a value in the\n           range\
    \ 0080-07ff.\n       b.  Allocate bits from the bitstring to fill the vacant positions\n\
    \           'x' in the UTF-8 sequence (see Table 1) from left to right.\n    \
    \   c.  UTF-8 sequences of 1, 2, 3, and 4 octets require 7, 11, 16,\n        \
    \   and 21 bits, respectively, from the bitstring.  Since the\n           number\
    \ of combinations of UTF-8 sequences accommodating\n           exactly 32 or 128\
    \ bits is limited, in sequences where the\n           number of bits required\
    \ does not exactly match the number of\n           available bits, the final UTF-8\
    \ sequence MUST be padded with\n           additional bits once the available\
    \ address bits are\n           exhausted.  The sequence may therefore require\
    \ up to 20 bits\n           of padding.  The content of the padding SHOULD be\
    \ chosen to\n           maximize the resulting Confusion Level.\n   3.  Once the\
    \ bits in the bitstring are exhausted, the conversion is\n       complete.  The\
    \ I-DUNNO representation of the address consists of\n       the Unicode code points\
    \ described by the list of generated UTF-8\n       sequences, and it MAY now be\
    \ presented to unsuspecting humans.\n"
- title: 3.2.  Deforming I-DUNNO
  contents:
  - "3.2.  Deforming I-DUNNO\n   This section is intentionally omitted.  The machines\
    \ will know how to\n   do it, and by definition humans SHOULD NOT attempt the\
    \ process.\n"
- title: 4.  I-DUNNO Confusion Level Requirements
  contents:
  - "4.  I-DUNNO Confusion Level Requirements\n   A sequence of characters is considered\
    \ I-DUNNO only when there's\n   enough potential to confuse humans.\n   Unallocated\
    \ code points MUST be avoided.  While they might appear to\n   have great confusion\
    \ power at the moment, there's a minor chance that\n   a future allocation to\
    \ a useful, legible character will reduce this\n   capacity significantly.  Worse,\
    \ in the (unlikely, but not impossible\n   -- see Section 3.1.3 of [RFC5894])\
    \ event of a code point losing its\n   DISALLOWED property per IDNA2008 [RFC5894],\
    \ existing I-DUNNOs could\n   be rendered less than minimally confusing, with\
    \ disastrous\n   consequences.\n   The following Confusion Levels are defined:\n"
- title: 4.1.  Minimum Confusion Level
  contents:
  - "4.1.  Minimum Confusion Level\n   As a minimum, a valid I-DUNNO MUST:\n   * \
    \ Contain at least one UTF-8 octet sequence with a length greater\n      than\
    \ one octet.\n   *  Contain at least one character that is DISALLOWED in IDNA2008.\
    \  No\n      code point left behind!  Note that this allows machines to\n    \
    \  distinguish I-DUNNO from Internationalized Domain Name labels.\n   I-DUNNOs\
    \ on this level will at least puzzle most human users with\n   knowledge of the\
    \ Legacy Notation.\n"
- title: 4.2.  Satisfactory Confusion Level
  contents:
  - "4.2.  Satisfactory Confusion Level\n   An I-DUNNO with Satisfactory Confusion\
    \ Level MUST adhere to the\n   Minimum Confusion Level, and additionally contain\
    \ two of the\n   following:\n   *  At least one non-printable character.\n   *\
    \  Characters from at least two different Scripts.\n   *  A character from the\
    \ \"Symbol\" category.\n   The Satisfactory Confusion Level will make many human-machine\n\
    \   interfaces beep, blink, silently fail, or any combination thereof.\n   This\
    \ is considered sufficient to discourage most humans from\n   deforming I-DUNNO.\n"
- title: 4.3.  Delightful Confusion Level
  contents:
  - "4.3.  Delightful Confusion Level\n   An I-DUNNO with Delightful Confusion Level\
    \ MUST adhere to the\n   Satisfactory Confusion Level, and additionally contain\
    \ at least two\n   of the following:\n   *  Characters from scripts with different\
    \ directionalities.\n   *  Character classified as \"Confusables\".\n   *  One\
    \ or more emoji.\n   An I-DUNNO conforming to this level will cause almost all\
    \ humans to\n   U+1F926, with the exception of those subscribed to the idna-update\n\
    \   mailing list.\n   (We have also considered a further, higher Confusion Level,\n\
    \   tentatively entitled \"BReak EXaminatIon or Twiddling\" or \"BREXIT\"\n  \
    \ Level Confusion, but currently we have no idea how to go about\n   actually\
    \ implementing it.)\n"
- title: 5.  Example
  contents:
  - "5.  Example\n   An I-DUNNO based on the Legacy Notation IPv4 address \"198.51.100.164\"\
    \n   is formed and validated as follows: First, the Legacy Notation is\n   written\
    \ as a string of 32 bits in network byte order:\n                     11000110001100110110010010100100\n\
    \   Since I-DUNNO requires at least one UTF-8 octet sequence with a\n   length\
    \ greater than one octet, we allocate bits in the following\n   form:\n      \
    \             seq1  |   seq2  |   seq3  |   seq4\n                 1100011 | 0001100\
    \ | 1101100 | 10010100100\n   This translates into the following code points:\n\
    \        | Bit Seq.    | Character Number (Character Name)         |\n       \
    \ | 1100011     | U+0063 (LATIN SMALL LETTER C)             |\n        | 0001100\
    \     | U+000C (FORM FEED (FF))                   |\n        | 1101100     | U+006C\
    \ (LATIN SMALL LETTER L)             |\n        | 10010100100 | U+04A4 (CYRILLIC\
    \ CAPITAL LIGATURE EN GHE) |\n   The resulting string MUST be evaluated against\
    \ the Confusion Level\n   Requirements before I-DUNNO can be declared.  Given\
    \ the example\n   above:\n   *  There is at least one UTF-8 octet sequence with\
    \ a length greater\n      than 1 (U+04A4) .\n   *  There are two IDNA2008 DISALLOWED\
    \ characters: U+000C (for good\n      reason!) and U+04A4.\n   *  There is one\
    \ non-printable character (U+000C).\n   *  There are characters from two different\
    \ Scripts (Latin and\n      Cyrillic).\n   Therefore, the example above constitutes\
    \ valid I-DUNNO with a\n   Satisfactory Confusion Level.  U+000C in particular\
    \ has great\n   potential in environments where I-DUNNOs would be sent to printers.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   If this work is standardized, IANA is kindly requested\
    \ to revoke all\n   IPv4 and IPv6 address range allocations that do not allow\
    \ for at\n   least one I-DUNNO of Delightful Confusion Level.  IPv4 prefixes are\n\
    \   more likely to be affected, hence this can easily be marketed as an\n   effort\
    \ to foster IPv6 deployment.\n   Furthermore, IANA is urged to expand the Internet\
    \ TLA Registry\n   [RFC5513] to accommodate Seven-Letter Acronyms (SLA) for obvious\n\
    \   reasons, and register 'I-DUNNO'.  For that purpose, U+002D (\"-\",\n   HYPHEN-MINUS)\
    \ SHALL be declared a Letter.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   I-DUNNO is not a security algorithm.  Quite the\
    \ contrary -- many\n   humans are known to develop a strong feeling of insecurity\
    \ when\n   confronted with I-DUNNO.\n   In the tradition of many other RFCs, the\
    \ evaluation of other security\n   aspects of I-DUNNO is left as an exercise for\
    \ the reader.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3629]  Yergeau, F., \"UTF-8, a transformation format of ISO\n        \
    \      10646\", STD 63, RFC 3629, DOI 10.17487/RFC3629, November\n           \
    \   2003, <https://www.rfc-editor.org/info/rfc3629>.\n   [RFC5894]  Klensin, J.,\
    \ \"Internationalized Domain Names for\n              Applications (IDNA): Background,\
    \ Explanation, and\n              Rationale\", RFC 5894, DOI 10.17487/RFC5894,\
    \ August 2010,\n              <https://www.rfc-editor.org/info/rfc5894>.\n   [RFC6919]\
    \  Barnes, R., Kent, S., and E. Rescorla, \"Further Key Words\n              for\
    \ Use in RFCs to Indicate Requirement Levels\", RFC 6919,\n              DOI 10.17487/RFC6919,\
    \ April 2013,\n              <https://www.rfc-editor.org/info/rfc6919>.\n   [RFC8174]\
    \  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119\
    \ Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,\
    \ <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC0791]  Postel, J., \"Internet Protocol\"\
    , STD 5, RFC 791,\n              DOI 10.17487/RFC0791, September 1981,\n     \
    \         <https://www.rfc-editor.org/info/rfc791>.\n   [RFC1034]  Mockapetris,\
    \ P., \"Domain names - concepts and facilities\",\n              STD 13, RFC 1034,\
    \ DOI 10.17487/RFC1034, November 1987,\n              <https://www.rfc-editor.org/info/rfc1034>.\n\
    \   [RFC1123]  Braden, R., Ed., \"Requirements for Internet Hosts -\n        \
    \      Application and Support\", STD 3, RFC 1123,\n              DOI 10.17487/RFC1123,\
    \ October 1989,\n              <https://www.rfc-editor.org/info/rfc1123>.\n  \
    \ [RFC1883]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n     \
    \         (IPv6) Specification\", RFC 1883, DOI 10.17487/RFC1883,\n          \
    \    December 1995, <https://www.rfc-editor.org/info/rfc1883>.\n   [RFC4291] \
    \ Hinden, R. and S. Deering, \"IP Version 6 Addressing\n              Architecture\"\
    , RFC 4291, DOI 10.17487/RFC4291, February\n              2006, <https://www.rfc-editor.org/info/rfc4291>.\n\
    \   [RFC5513]  Farrel, A., \"IANA Considerations for Three Letter\n          \
    \    Acronyms\", RFC 5513, DOI 10.17487/RFC5513, April 2009,\n              <https://www.rfc-editor.org/info/rfc5513>.\n\
    \   [RFC5952]  Kawamura, S. and M. Kawashima, \"A Recommendation for IPv6\n  \
    \            Address Text Representation\", RFC 5952,\n              DOI 10.17487/RFC5952,\
    \ August 2010,\n              <https://www.rfc-editor.org/info/rfc5952>.\n   [RFC8200]\
    \  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6)\
    \ Specification\", STD 86, RFC 8200,\n              DOI 10.17487/RFC8200, July\
    \ 2017,\n              <https://www.rfc-editor.org/info/rfc8200>.\n   [RFC8369]\
    \  Kaplan, H., \"Internationalizing IPv6 Using 128-Bit\n              Unicode\"\
    , RFC 8369, DOI 10.17487/RFC8369, April 2018,\n              <https://www.rfc-editor.org/info/rfc8369>.\n\
    \   [UNICODE]  The Unicode Consortium, \"The Unicode Standard (Current\n     \
    \         Version)\", 2019,\n              <http://www.unicode.org/versions/latest/>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Alexander Mayrhofer\n   nic.at GmbH\n   Email: alexander.mayrhofer@nic.at\n\
    \   URI:   https://i-dunno.at/\n   Jim Hague\n   Sinodun\n"
