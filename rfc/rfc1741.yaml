- title: __initial_text__
  contents:
  - '               MIME Content Type for BinHex Encoded Files

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes the format to use when sending BinHex4.0 files\n\
    \   via MIME [BORE93].  The format is compatible with existing mechanisms\n  \
    \ for distributing Macintosh files.  Only when available software\n   and/or user\
    \ practice dictates, should this method be employed.  It is\n   recommended to\
    \ use application/applefile [FALT94] for maximum\n   interoperability.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Files on the Macintosh consists of two parts, called forks:\n\
    \   DATA FORK:       The actual data included in the file.  The Data\n       \
    \             fork is typically the only meaningful part of a\n              \
    \      Macintosh file on a non-Macintosh computer system.\n                  \
    \  For example, if a Macintosh user wants to send a\n                    file\
    \ of data to a user on an IBM-PC, she would only\n                    send the\
    \ Data fork.\n   RESOURCE FORK:   Contains a collection of arbitrary attribute/value\n\
    \                    pairs, including program segments, icon bitmaps,\n      \
    \              and parametric values.\n   Additional information regarding Macintosh\
    \ files is stored by the\n   Finder has in a hidden file, called the \"Desktop\
    \ Database\".\n   Because of the complications in storing different parts of a\n\
    \   Macintosh file in a non-Macintosh filesystem that only handles\n   consecutive\
    \ data in one part, it is common to convert the Macintosh\n   file into some other\
    \ format before transferring it over the network.\n   AppleDouble file format\
    \ [APPL90], encoded in MIME as\n   multipart/appledouble [FALT94] and application/applefile\
    \ [FALT94] is\n   the preferred format for a Macintosh file that is to be included\
    \ in\n   an Internet mail message, because it provides recipients with\n   Macintosh\
    \ computers the entire document, including Icons and other\n   Macintosh specific\
    \ information, while other users easily can extract\n   the Data fork (the actual\
    \ data).\n   However, this specification provides for use of the currently popular\n\
    \   BinHex4.0 encoding schemes, as a convinience to the installed base of\n  \
    \ users.\n"
- title: 2.  MIME format for BinHex4.0
  contents:
  - "2.  MIME format for BinHex4.0\n   MIME-base Apple information is specified by:\n\
    \   MIME type-name:            APPLICATION\n   MIME subtype name:         MAC-BINHEX40\n\
    \   Required parameters:       none\n   Optional parameters:       NAME, which\
    \ must be a \"value\" as\n                              defined in RFC-1521 [BORE93].\n\
    \   Encoding considerations:   none\n   Security considerations:   See separate\
    \ section in the document\n   Published specification:   Appendix A\n   Rationale:\
    \                 Permits MIME-based transmission of data\n                  \
    \            with Apple Macintosh file system specific\n                     \
    \         information using a currently popular,\n                           \
    \   though platform specific, format.\n   2a.  Detail specific to MIME-based usage\n\
    \      Macintosh documents do not always need to be sent in a special\n      format.\
    \  Those documents with well-known MIME types and non-\n      existent or trivial\
    \ resource forks can be sent as regular MIME\n      body parts, without use of\
    \ AppleSingle, AppleDouble or BinHex4.0.\n      Documents which lack a data fork\
    \ must be sent as AppleSingle\n      according to RFC 1740 [FALT94].\n      Unless\
    \ there are strong reasons not to, all other documents should\n      be sent as\
    \ AppleDouble according to RFC 1740 [FALT94].  This\n      includes documents\
    \ with non-trivial resource forks, and documents\n      without corresponding\
    \ well-known MIME types.\n      It may be valuable in some cases to allow the\
    \ user to choose one\n      format over another, either because he disagrees with\
    \ the\n      implementor's definition of \"trivial\" resource forks, or for\n\
    \      reasons of his own.\n      Only when available software and/or user practice\
    \ dictates, should\n      BinHex 4.0 be employed.\n"
- title: 3.  BinHex
  contents:
  - "3.  BinHex\n   BinHex 4.0 is a propular means of encoding Macintosh files for\n\
    \   archiving on non-Macintosh file systems and for transmission via\n   Internet\
    \ mail.  (See Appendix A for a brief description of the BinHex\n   4.0 format.)\n\
    \   The content-type application/mac-binhex40 indicates that the body of\n   the\
    \ mail is a BinHex4.0 file.  Even though the BinHex encoding\n   consists of characters\
    \ which are not the same as those used in Base64\n   (those regarded as safe according\
    \ to RFC-1521 [BORE93]) a\n   transportation encoding should not be done.\n  \
    \ Even though a BinHex file includes the original Macintosh filename,\n   it is\
    \ recommended that a name parameter be included on the Content-\n   Type header\
    \ to give the recipient a hint as to what file is attached.\n   The value of the\
    \ name parameter must be a \"value\" as defined by RFC-\n   1521 [BORE93].  Note\
    \ that this restricts the value to seven-bit US-\n   ASCII characters.\n   3a.\
    \  BinHex example\n        Content-Type: application/mac-binhex40; name=\"car.hqx\"\
    \n            [The BinHex4.0 file goes here]\n"
- title: 4.  References
  contents:
  - "4.  References\n   APPL90   AppleSingle/AppleDouble Formats for Foreign Files\n\
    \            Developer's Note, Apple Computer, Inc., 1990.\n   FALT94   Faltstrom\
    \ P., Crocker, D., and E. Fair, \"MIME\n            Encapsulation of Macintosh\
    \ Files - MacMIME\", RFC 1740,\n            KTH, Brandenburg Consulting, Apple\
    \ Computer Inc.,\n            December 1994.\n   BORE93   Borenstein N., and N.\
    \ Freed, \"MIME (Multipurpose Internet\n            Mail Extensions): Mechanisms\
    \ for Specifying and Describing\n            the Format of Internet Message Bodies\"\
    , RFC 1521, Bellcore,\n            Innosoft, September 1993.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   To the extent that application/mac-binhex40 facilitates\
    \ the\n   transmission of operating-system sensitive data, it may open a door\n\
    \   for easier relaxation of security rules than is intended either by\n   the\
    \ sender of the administrator of the sender's system.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Thanks to all of the people on the ietf-822 list who\
    \ have provided\n   much meaningful input for this document.  Some of them must\
    \ though be\n   remembered by name, because they have almost crushed my mailbox\
    \ the\n   last weeks with a very nice and interesting debate:\n      Johan Berglund,\
    \ Steve Dorner, David Gelhar, David Herron, Raymond\n      Lau, Jamey Maze, John\
    \ B. Melby, Jan Michael Rynning, Rens Troost,\n      and Peter Svanberg.\n"
- title: 7.  Authors' Addresses
  contents:
  - "7.  Authors' Addresses\n      Patrik Faltstrom\n      Department of Numerical\
    \ Analysis and Computing Science\n      Royal Institute of Technology\n      S-100\
    \ 44 Stockholm\n      Sweden\n      EMail: paf@nada.kth.se\n      Dave Crocker\n\
    \      Brandenburg Consulting\n      675 Spruce Dr.\n      Sunnyvale, CA  94086\n\
    \      EMail: dcrocker@mordor.stanford.edu\n      Erik E. Fair\n      Engineering\
    \ Computer Operations\n      Apple Computer Inc.\n      EMail: fair@apple.com\n"
- title: Appendix A.  The BinHex format
  contents:
  - "Appendix A.  The BinHex format\n   Here is a description of the Hqx7 (7 bit format\
    \ as implemented in\n   BinHex 4.0) formats for Macintosh Application and File\
    \ transfers.\n   The main features of the format are:\n   1) Error checking even\
    \ using ASCII download\n   2) Compression of repetitive characters\n   3) 7 bit\
    \ encoding for ASCII download\n   The format is processed at three different levels:\n\
    \      1) 8 bit encoding of the file:\n   Byte:    Length of FileName (1->63)\n\
    \   Bytes:   FileName (\"Length\" bytes)\n   Byte:    Version\n   Long:    Type\n\
    \   Long:    Creator\n   Word:    Flags (And $F800)\n   Long:    Length of Data\
    \ Fork\n   Long:    Length of Resource Fork\n   Word:    CRC\n   Bytes:   Data\
    \ Fork (\"Data Length\" bytes)\n   Word:    CRC\n   Bytes:   Resource Fork (\"\
    Rsrc Length\" bytes)\n   Word:    CRC\n      2) Compression of repetitive characters.\n\
    \   ($90 is the marker, encoding is made for 3->255 characters)\n   00 11 22 33\
    \ 44 55 66 77   -> 00 11 22 33 44 55 66 77\n   11 22 22 22 22 22 22 33   -> 11\
    \ 22 90 06 33\n   11 22 90 33 44            -> 11 22 90 00 33 44\n   The whole\
    \ file is considered as a stream of bits.  This stream will\n   be divided in\
    \ blocks of 6 bits and then converted to one of 64\n   characters contained in\
    \ a table.  The characters in this table have\n   been chosen for maximum noise\
    \ protection.  The format will start\n   with a \":\" (first character on a line)\
    \ and end with a \":\".\n   There will be a maximum of 64 characters on a line.\
    \  It must be\n   preceded, by this comment, starting in column 1 (it does not\
    \ start\n   in column 1 in this document):\n    (This file must be converted with\
    \ BinHex 4.0)\n   Any text before this comment is to be ignored.\n   The characters\
    \ used is:\n    !\"#$%&'()*+,- 012345689@ABCDEFGHIJKLMNPQRSTUVXYZ[`abcdefhijklmpqr\n"
