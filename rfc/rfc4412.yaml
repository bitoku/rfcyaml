- title: __initial_text__
  contents:
  - "                 Communications Resource Priority for\n                 the Session\
    \ Initiation Protocol (SIP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines two new Session Initiation Protocol (SIP)\n\
    \   header fields for communicating resource priority, namely,\n   \"Resource-Priority\"\
    \ and \"Accept-Resource-Priority\".  The\n   \"Resource-Priority\" header field\
    \ can influence the behavior of SIP\n   user agents (such as telephone gateways\
    \ and IP telephones) and SIP\n   proxies.  It does not directly influence the\
    \ forwarding behavior of\n   IP routers.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   3. The Resource-Priority and Accept-Resource-Priority SIP\n\
    \      3.3. Usage of the 'Resource-Priority' and\n      4.5. Approaches for Preferential\
    \ Treatment of Requests .........11\n           4.5.1. Preemption .........................................11\n\
    \           4.5.2. Priority Queueing ..................................12\n  \
    \    4.6. Error Conditions ..........................................12\n    \
    \       4.6.1. Introduction .......................................12\n      \
    \     4.6.2. No Known Namespace or Priority Value ...............13\n        \
    \   4.6.3. Authentication Failure .............................13\n          \
    \ 4.6.4. Authorization Failure ..............................14\n           4.6.5.\
    \ Insufficient Resources .............................14\n           4.6.6. Busy\
    \ ...............................................14\n      4.7. Element-Specific\
    \ Behaviors ................................15\n           4.7.1. User Agent Client\
    \ Behavior .........................15\n           4.7.2. User Agent Server Behavior\
    \ .........................15\n           4.7.3. Proxy Behavior .....................................16\n\
    \   5. Third-Party Authentication .....................................17\n  \
    \ 6. Backwards Compatibility ........................................17\n   7.\
    \ Examples .......................................................17\n      7.1.\
    \ Simple Call ...............................................18\n      7.2. Receiver\
    \ Does Not Understand Namespace ....................19\n   8. Handling Multiple\
    \ Concurrent Namespaces ........................21\n      8.1. General Rules .............................................21\n\
    \      8.2. Examples of Valid Orderings ...............................21\n  \
    \    8.3. Examples of Invalid Orderings .............................22\n   9.\
    \ Registering Namespaces .........................................23\n   10. Namespace\
    \ Definitions .........................................24\n      10.1. Introduction\
    \ .............................................24\n      10.2. The \"DSN\" Namespace\
    \ ......................................24\n      10.3. The \"DRSN\" Namespace\
    \ .....................................25\n      10.4. The \"Q735\" Namespace\
    \ .....................................25\n      10.5. The \"ETS\" Namespace ......................................26\n\
    \      10.6. The \"WPS\" Namespace ......................................26\n\
    \   11. Security Considerations .......................................27\n  \
    \    11.1. General Remarks ..........................................27\n    \
    \  11.2. Authentication and Authorization .........................27\n      11.3.\
    \ Confidentiality and Integrity ............................28\n      11.4. Anonymity\
    \ ................................................29\n      11.5. Denial-of-Service\
    \ Attacks ................................29\n   12. IANA Considerations ...........................................30\n\
    \      12.1. Introduction .............................................30\n  \
    \    12.2. IANA Registration of 'Resource-Priority' and\n            'Accept-Resource-Priority'\
    \ Header Fields .................30\n      12.3. IANA Registration for Option\
    \ Tag resource-priority .......31\n      12.4. IANA Registration for Response\
    \ Code 417 ..................31\n      12.5. IANA Resource-Priority Namespace\
    \ Registration ............31\n      12.6. IANA Priority-Value Registrations ........................32\n\
    \   13. Acknowledgements ..............................................32\n  \
    \ 14. References ....................................................33\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   During emergencies, communications resources (including\
    \ telephone\n   circuits, IP bandwidth, and gateways between the circuit-switched\
    \ and\n   IP networks) may become congested.  Congestion can occur due to heavy\n\
    \   usage, loss of resources caused by the natural or man-made disaster,\n   and\
    \ attacks on the network during man-made emergencies.  This\n   congestion may\
    \ make it difficult for persons charged with emergency\n   assistance, recovery,\
    \ or law enforcement to coordinate their efforts.\n   As IP networks become part\
    \ of converged or hybrid networks, along\n   with public and private circuit-switched\
    \ (telephone) networks, it\n   becomes necessary to ensure that these networks\
    \ can assist during\n   such emergencies.\n   Also, users may want to interrupt\
    \ their lower-priority communications\n   activities and dedicate their end-system\
    \ resources to the high-\n   priority communications attempt if a high-priority\
    \ communications\n   request arrives at their end system.\n   There are many IP-based\
    \ services that can assist during emergencies.\n   This memo only covers real-time\
    \ communications applications involving\n   the Session Initiation Protocol (SIP)\
    \ [RFC3261], including voice-\n   over-IP, multimedia conferencing, instant messaging,\
    \ and presence.\n   SIP applications may involve at least five different resources\
    \ that\n   may become scarce and congested during emergencies.  These resources\n\
    \   include gateway resources, circuit-switched network resources, IP\n   network\
    \ resources, receiving end-system resources, and SIP proxy\n   resources.  IP\
    \ network resources are beyond the scope of SIP\n   signaling and are therefore\
    \ not considered here.\n   Even if the resources at the SIP element itself are\
    \ not scarce, a SIP\n   gateway may mark outgoing calls with an indication of\
    \ priority, e.g.,\n   on an ISUP (ISDN User Part) IAM (Initial Address Message)\
    \ originated\n   by a SIP gateway with the Public Switched Telephone Network (PSTN).\n\
    \   In order to improve emergency response, it may become necessary to\n   prioritize\
    \ access to SIP-signaled resources during periods of\n   emergency-induced resource\
    \ scarcity.  We call this \"resource\n   prioritization\".  The mechanism itself\
    \ may well be in place at all\n   times, but may only materially affect call handling\
    \ during times of\n   resource scarcity.\n   Currently, SIP does not include a\
    \ mechanism that allows a request\n   originator to indicate to a SIP element\
    \ that it wishes the request to\n   invoke such resource prioritization.  To address\
    \ this need, this\n   document adds a SIP protocol element that labels certain\
    \ SIP\n   requests.\n   This document defines (Section 3) two new SIP header fields\
    \ for\n   communications resource priority, called 'Resource-Priority' and\n \
    \  'Accept-Resource-Priority'.  The 'Resource-Priority' header field MAY\n   be\
    \ used by SIP user agents, including Public Switched Telephone\n   Network (PSTN)\
    \ gateways and terminals, and SIP proxy servers to\n   influence their treatment\
    \ of SIP requests, including the priority\n   afforded to PSTN calls.  For PSTN\
    \ gateways, the behavior translates\n   into analogous schemes in the PSTN, for\
    \ example, the ITU\n   Recommendation Q.735.3 [Q.735.3] prioritization mechanism,\
    \ in both\n   the PSTN-to-IP and IP-to-PSTN directions.  ITU Recommendation I.255.3\n\
    \   [I.255.3] is another example.\n   A SIP request with a 'Resource-Priority'\
    \ indication can be treated\n   differently in these situations:\n   1.  The request\
    \ can be given elevated priority for access to PSTN\n       gateway resources,\
    \ such as trunk circuits.\n   2.  The request can interrupt lower-priority requests\
    \ at a user\n       terminal, such as an IP phone.\n   3.  The request can carry\
    \ information from one multi-level priority\n       domain in the telephone network\
    \ (e.g., using the facilities of\n       Q.735.3 [Q.735.3]) to another, without\
    \ the SIP proxies themselves\n       inspecting or modifying the header field.\n\
    \   4.  In SIP proxies and back-to-back user agents, requests of higher\n    \
    \   priorities may displace existing signaling requests or bypass\n       PSTN\
    \ gateway capacity limits in effect for lower priorities.\n   This header field\
    \ is related to, but differs in semantics from, the\n   'Priority' header field\
    \ ([RFC3261], Section 20.26).  The 'Priority'\n   header field describes the importance\
    \ that the SIP request should\n   have for the receiving human or its agent. \
    \ For example, that header\n   may be factored into decisions about call routing\
    \ to mobile devices\n   and assistants and about call acceptance when the call\
    \ destination is\n   busy.  The 'Priority' header field does not affect the usage\
    \ of PSTN\n   gateway or proxy resources, for example.  In addition, any User\
    \ Agent\n   Client (UAC) can assert any 'Priority' value, and usage of 'Resource-\n\
    \   Priority' header field values is subject to authorization.\n   While the 'Resource-Priority'\
    \ header field does not directly\n   influence the forwarding behavior of IP routers\
    \ or the use of\n   communications resources such as packet forwarding priority,\n\
    \   procedures for using this header field to cause such influence may be\n  \
    \ defined in other documents.\n   Existing implementations of RFC 3261 that do\
    \ not participate in the\n   resource priority mechanism follow the normal rules\
    \ of RFC 3261,\n   Section 8.2.2: \"If a UAS does not understand a header field\
    \ in a\n   request (that is, the header field is not defined in this\n   specification\
    \ or in any supported extension), the server MUST ignore\n   that header field\
    \ and continue processing the message\".  Thus, the\n   use of this mechanism\
    \ is wholly invisible to existing implementations\n   unless the request includes\
    \ the Require header field with the\n   resource-priority option tag.\n   The\
    \ mechanism described here can be used for emergency preparedness\n   in emergency\
    \ telecommunications systems, but is only a small part of\n   an emergency preparedness\
    \ network and is not restricted to such use.\n   The mechanism aims to satisfy\
    \ the requirements in [RFC3487].  It is\n   structured so that it works in all\
    \ SIP and Real-Time Transport\n   Protocol (RTP) [RFC3550] transparent networks,\
    \ defined in [RFC3487].\n   In such networks, all network elements and SIP proxies\
    \ let valid SIP\n   requests pass through unchanged.  This is important since\
    \ it is\n   likely that this mechanism will often be deployed in networks where\n\
    \   the edge networks are unaware of the resource priority mechanism and\n   provide\
    \ no special privileges to such requests.  The request then\n   reaches a PSTN\
    \ gateway or set of SIP elements that are aware of the\n   mechanism.\n   For\
    \ conciseness, we refer to SIP proxies and user agents (UAs) that\n   act on the\
    \ 'Resource-Priority' header field as RP actors.\n   It is likely to be common\
    \ that the same SIP element will handle\n   requests that bear the 'Resource-Priority'\
    \ header fields and those\n   that do not.\n   Government entities and standardization\
    \ bodies have developed several\n   different priority schemes for their networks.\
    \  Users would like to\n   be able to obtain authorized priority handling in several\
    \ of these\n   networks, without changing SIP clients.  Also, a single call may\n\
    \   traverse SIP elements that are run by different administrations and\n   subject\
    \ to different priority mechanisms.  Since there is no global\n   ordering among\
    \ those priorities, we allow each request to contain\n   more than one priority\
    \ value drawn from these different priority\n   lists, called a namespace in this\
    \ document.  Typically, each SIP\n   element only supports one such namespace,\
    \ but we discuss what happens\n   if an element needs to support multiple namespaces\
    \ in Section 8.\n   Since gaining prioritized access to resources offers opportunities\
    \ to\n   deny service to others, it is expected that all such prioritized\n  \
    \ calls are subject to authentication and authorization, using standard\n   SIP\
    \ security (Section 11) or other appropriate mechanisms.\n   The remainder of\
    \ this document is structured as follows.  After\n   defining terminology in Section\
    \ 2, we define the syntax for the two\n   new SIP header fields in Section 3 and\
    \ then describe protocol\n   behavior in Section 4.  The two principal mechanisms\
    \ for\n   differentiated treatment of SIP requests (namely, preemption and\n \
    \  queueing) are described in Section 4.5.  Error conditions are covered\n   in\
    \ Section 4.6.  Sections 4.7.1 through 4.7.3 detail the behavior of\n   specific\
    \ SIP elements.  Third-party authentication is briefly\n   summarized in Section\
    \ 5.  Section 6 describes how this feature\n   affects existing systems that do\
    \ not support it.\n   Since calls may traverse multiple administrative domains\
    \ with\n   different namespaces or multiple elements with the same namespace,\
    \ it\n   is strongly suggested that all such domains and elements apply the\n\
    \   same algorithms for the same namespace, as otherwise the end-to-end\n   experience\
    \ of privileged users may be compromised.\n   Protocol examples are given in Section\
    \ 7.  Section 8 discusses what\n   happens if a request contains multiple namespaces\
    \ or an element can\n   handle more than one namespace.  Section 9 enumerates\
    \ the information\n   that namespace registrations need to provide.  Section 10\
    \ defines the\n   properties of five namespaces that are registered through this\n\
    \   document.  Security issues are considered in Section 11, but this\n   document\
    \ does not define new security mechanisms.  Section 12\n   discusses IANA considerations\
    \ and registers parameters related to\n   this document.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   In this document, the key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\",\n   \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\",\n   and \"OPTIONAL\" are to be interpreted as described in BCP 14,\
    \ RFC 2119\n   [RFC2119], and indicate requirement levels for compliant\n   implementations.\n"
- title: 3.  The Resource-Priority and Accept-Resource-Priority SIP Header Fields
  contents:
  - "3.  The Resource-Priority and Accept-Resource-Priority SIP Header Fields\n  \
    \ This section defines the 'Resource-Priority' and\n   'Accept-Resource-Priority'\
    \ SIP header field syntax.  Behavior is\n   described in Section 4.\n"
- title: 3.1.  The 'Resource-Priority' Header Field
  contents:
  - "3.1.  The 'Resource-Priority' Header Field\n   The 'Resource-Priority' request\
    \ header field marks a SIP request as\n   desiring prioritized access to resources,\
    \ as described in the\n   introduction.\n   There is no protocol requirement that\
    \ all requests within a SIP\n   dialog or session use the 'Resource-Priority'\
    \ header field.  Local\n   administrative policy MAY mandate the inclusion of\
    \ the\n   'Resource-Priority' header field in all requests.  Implementations of\n\
    \   this specification MUST allow inclusion to be either by explicit user\n  \
    \ request or automatic for all requests.\n   The syntax of the 'Resource-Priority'\
    \ header field is described\n   below.  The \"token-nodot\" production is copied\
    \ from [RFC3265].\n      Resource-Priority  = \"Resource-Priority\" HCOLON\n \
    \                          r-value *(COMMA r-value)\n      r-value           \
    \ = namespace \".\" r-priority\n      namespace          = token-nodot\n     \
    \ r-priority         = token-nodot\n      token-nodot        = 1*( alphanum /\
    \ \"-\"  / \"!\" / \"%\" / \"*\"\n                                  / \"_\" /\
    \ \"+\" / \"`\" / \"'\" / \"~\" )\n   An example 'Resource-Priority' header field\
    \ is shown below:\n      Resource-Priority: dsn.flash\n   The 'r-value' parameter\
    \ in the 'Resource-Priority' header field\n   indicates the resource priority\
    \ desired by the request originator.\n   Each resource value (r-value) is formatted\
    \ as 'namespace' '.'\n   'priority value'.  The value is drawn from the namespace\
    \ identified\n   by the 'namespace' token.  Namespaces and priorities are case-\n\
    \   insensitive ASCII tokens that do not contain periods.  Thus,\n   \"dsn.flash\"\
    \ and \"DSN.Flash\", for example, are equivalent.  Each\n   namespace has at least\
    \ one priority value.  Namespaces and priority\n   values within each namespace\
    \ MUST be registered with IANA\n   (Section 12).  Initial namespace registrations\
    \ are described in\n   Section 12.5.\n   Since a request may traverse multiple\
    \ administrative domains with\n   multiple different namespaces, it is necessary\
    \ to be able to\n   enumerate several different namespaces within the same message.\n\
    \   However, a particular namespace MUST NOT appear more than once in the\n  \
    \ same SIP message.  These may be expressed equivalently as either\n   comma-separated\
    \ lists within a single header field, as multiple\n   header fields, or as some\
    \ combination.  The ordering of 'r-values'\n   within the header field has no\
    \ significance.  Thus, for example, the\n   following three header snippets are\
    \ equivalent:\n     Resource-Priority: dsn.flash, wps.3\n     Resource-Priority:\
    \ wps.3, dsn.flash\n     Resource-Priority: wps.3\n     Resource-Priority: dsn.flash\n"
- title: 3.2.  The 'Accept-Resource-Priority' Header Field
  contents:
  - "3.2.  The 'Accept-Resource-Priority' Header Field\n   The 'Accept-Resource-Priority'\
    \ response header field enumerates the\n   resource values (r-values) a SIP user\
    \ agent server is willing to\n   process.  (This does not imply that a call with\
    \ such values will find\n   sufficient resources and succeed.)  The syntax of\
    \ the 'Accept-\n   Resource-Priority' header field is as follows:\n      Accept-Resource-Priority\
    \ = \"Accept-Resource-Priority\" HCOLON\n                                 [r-value\
    \ *(COMMA r-value)]\n   An example is given below:\n   Accept-Resource-Priority:\
    \ dsn.flash-override,\n        dsn.flash, dsn.immediate, dsn.priority, dsn.routine\n\
    \   Some administrative domains MAY choose to disable the use of the\n   'Accept-Resource-Priority'\
    \ header for revealing too much information\n   about that domain in responses.\
    \  However, this behavior is NOT\n   RECOMMENDED, as this header field aids in\
    \ troubleshooting.\n"
- title: 3.3.  Usage of the 'Resource-Priority' and 'Accept-Resource-Priority'
  contents:
  - "3.3.  Usage of the 'Resource-Priority' and 'Accept-Resource-Priority'\n     \
    \ Header Fields\n   The following table extends the values in Table 2 of RFC 3261\n\
    \   [RFC3261].  (The PRACK method, labeled as PRA, is defined in\n   [RFC3262],\
    \ the SUBSCRIBE (labeled SUB) and NOTIFY (labeled NOT)\n   methods in [RFC3265],\
    \ the UPDATE (UPD) method in [RFC3311], the\n   MESSAGE (MSG) method in [RFC3428],\
    \ the REFER (REF) method in\n   [RFC3515], the INFO (INF) method in [RFC2976],\
    \ and the PUBLISH (PUB)\n   method in [RFC3903].)\n      Header field        \
    \     where proxy INV ACK CAN BYE REG OPT PRA\n      ----------------------------------------------------------------\n\
    \      Resource-Priority        R     amdr   o   o   o   o   o   o   o\n     \
    \ Accept-Resource-Priority 200   amdr   o   -   o   o   o   o   o\n      Accept-Resource-Priority\
    \ 417   amdr   o   -   o   o   o   o   o\n      Header field             where\
    \ proxy SUB NOT UPD MSG REF INF PUB\n      ----------------------------------------------------------------\n\
    \      Resource-Priority        R     amdr   o   o   o   o   o   o   o\n     \
    \ Accept-Resource-Priority 200   amdr   o   o   o   o   o   o   o\n      Accept-Resource-Priority\
    \ 417   amdr   o   o   o   o   o   o   o\n   Other request methods MAY define\
    \ their own handling rules; unless\n   otherwise specified, recipients MAY ignore\
    \ these header fields.\n"
- title: 3.4.  The 'resource-priority' Option Tag
  contents:
  - "3.4.  The 'resource-priority' Option Tag\n   This document also defines the \"\
    resource-priority\" option tag.  The\n   behavior is described in Section 4.3,\
    \ and the IANA registration is in\n   Section 12.3.\n"
- title: 4.  Behavior of SIP Elements That Receive Prioritized Requests
  contents:
  - '4.  Behavior of SIP Elements That Receive Prioritized Requests

    '
- title: 4.1.  Introduction
  contents:
  - "4.1.  Introduction\n   All SIP user agents and proxy servers that support this\
    \ specification\n   share certain common behavior, which we describe below in\n\
    \   Section 4.2.  The behavior when a 'resource-priority' option tag is\n   encountered\
    \ in a 'Require' header field is described in Section 4.3.\n   Section 4.4 describes\
    \ the treatment of OPTIONS requests.  The two\n   fundamental resource contention\
    \ resolution mechanisms, preemption and\n   queueing, are described in Section\
    \ 4.5.  Section 4.6 explains what\n   happens when requests fail.  Behavior specific\
    \ to user agent clients,\n   servers, and proxy servers is covered in Section\
    \ 4.7.\n"
- title: 4.2.  General Rules
  contents:
  - "4.2.  General Rules\n   The 'Resource-Priority' header field is potentially applicable\
    \ to all\n   SIP request messages.  At a minimum, implementations of the following\n\
    \   request types MUST support the Resource-Priority header to be in\n   compliance\
    \ with this specification:\n   o  INVITE [RFC3261]\n   o  ACK [RFC3261]\n   o\
    \  PRACK [RFC3262]\n   o  UPDATE [RFC3311]\n   o  REFER [RFC3515]\n   Implementations\
    \ SHOULD support the 'Resource-Priority' header field\n   in the following request\
    \ types:\n   o  MESSAGE [RFC3428]\n   o  SUBSCRIBE [RFC3265]\n   o  NOTIFY [RFC3265]\n\
    \   Note that this does not imply that all implementations have to\n   support\
    \ all request methods listed.\n   If a SIP element receives the 'Resource-Priority'\
    \ header field in a\n   request other than those listed above, the header MAY\
    \ be ignored,\n   according to the rules of [RFC3261].\n   In short, an RP actor\
    \ performs the following steps when receiving a\n   prioritized request.  Error\
    \ behavior is described in Section 4.6.\n   1.  If the RP actor recognizes none\
    \ of the name spaces, it treats the\n       request as if it had no 'Resource-Priority'\
    \ header field.\n   2.  It ascertains that the request is authorized according\
    \ to local\n       policy to use the priority levels indicated.  If the request\
    \ is\n       not authorized, it rejects it.  Examples of authorization\n     \
    \  policies are discussed in Security Considerations (Section 11).\n   3.  If\
    \ the request is authorized and resources are available (no\n       congestion),\
    \ it serves the request as usual.  If the request is\n       authorized but resources\
    \ are not available (congestion), it\n       either preempts other current sessions\
    \ or inserts the request\n       into a priority queue, as described in Section\
    \ 4.5.\n"
- title: 4.3.  Usage of Require Header with Resource-Priority
  contents:
  - "4.3.  Usage of Require Header with Resource-Priority\n   Following standard SIP\
    \ behavior, if a SIP request contains the\n   'Require' header field with the\
    \ 'resource-priority' option tag, a SIP\n   user agent MUST respond with a 420\
    \ (Bad Extension) if it does not\n   support the SIP extensions described in this\
    \ document.  It then lists\n   \"resource-priority\" in the 'Unsupported' header\
    \ field included in the\n   response.\n   The use of the 'resource-priority' option\
    \ tag in 'Proxy-Require'\n   header field is NOT RECOMMENDED.\n"
- title: 4.4.  OPTIONS Request with Resource-Priority
  contents:
  - "4.4.  OPTIONS Request with Resource-Priority\n   An OPTIONS request can be used\
    \ to determine if an element supports\n   the mechanism.  A compliant implementation\
    \ SHOULD return an 'Accept-\n   Resource-Priority' header field in OPTIONS responses\
    \ enumerating all\n   valid resource values, but an RP actor MAY be configured\
    \ not to\n   return such values or only to return them to authorized requestors.\n\
    \   Following standard SIP behavior, OPTIONS responses MUST include the\n   'Supported'\
    \ header field that includes the 'resource-priority' option\n   tag.\n   According\
    \ to RFC 3261, Section 11, proxies that receive a request\n   with a 'Max-Forwards'\
    \ header field value of zero MAY answer the\n   OPTIONS request, allowing a UAC\
    \ to discover the capabilities of both\n   proxy and user agent servers.\n"
- title: 4.5.  Approaches for Preferential Treatment of Requests
  contents:
  - "4.5.  Approaches for Preferential Treatment of Requests\n   SIP elements may\
    \ use the resource priority mechanism to modify a\n   variety of behaviors, such\
    \ as routing requests, authentication\n   requirements, override of network capacity\
    \ controls, or logging.  The\n   resource priority mechanism may influence the\
    \ treatment of the\n   request itself, the marking of outbound PSTN calls at a\
    \ gateway, or\n   of the session created by the request.  (Here, we use the terms\n\
    \   session and call interchangeably, both implying a continuous data\n   stream\
    \ between two or more parties.  Sessions are established by SIP\n   dialogs.)\n\
    \   Below, we define two common algorithms, namely, preemption and\n   priority\
    \ queueing.  Preemption applies only to sessions created by\n   SIP requests,\
    \ while both sessions and request handling can be subject\n   to priority queueing.\
    \  Both algorithms can sometimes be combined in\n   the same element, although\
    \ none of the namespaces described in this\n   document do this.  Algorithms can\
    \ be defined for each namespace or,\n   in some cases, can be specific to an administrative\
    \ domain.  Other\n   behavior, such as request routing or network management controls,\
    \ is\n   not defined by this specification.\n   Naturally, only SIP elements that\
    \ understand this mechanism and the\n   namespace and resource value perform these\
    \ algorithms.  Section 4.6.2\n   discusses what happens if an RP actor does not\
    \ understand priority\n   values contained in a request.\n"
- title: 4.5.1.  Preemption
  contents:
  - "4.5.1.  Preemption\n   An RP actor following a preemption policy may disrupt\
    \ an existing\n   session to make room for a higher-priority incoming session.\
    \  Since\n   sessions may require different amounts of bandwidth or a different\n\
    \   number of circuits, a single higher-priority session may displace\n   more\
    \ than one lower-priority session.  Unless otherwise noted,\n   requests do not\
    \ preempt other requests of equal priority.  As noted\n   above, the processing\
    \ of SIP requests itself is not preempted.  Thus,\n   since proxies do not manage\
    \ sessions, they do not perform preemption.\n   [RFC4411] contains more details\
    \ and examples of this behavior.\n   UAS behavior for preemption is discussed\
    \ in Section 4.7.2.1.\n"
- title: 4.5.2.  Priority Queueing
  contents:
  - "4.5.2.  Priority Queueing\n   In a priority queueing policy, requests that find\
    \ no available\n   resources are queued to the queue assigned to the priority\
    \ value.\n   Unless otherwise specified, requests are queued in first-come, first-\n\
    \   served order.  Each priority value may have its own queue, or several\n  \
    \ priority values may share a single queue.  If a resource becomes\n   available,\
    \ the RP actor selects the request from the highest-priority\n   non-empty queue\
    \ according to the queue service policy.  For first-\n   come, first-served policies,\
    \ the request from that queue that has\n   been waiting the longest is served.\
    \  Each queue can hold a finite\n   number of pending requests.  If the per-priority-value\
    \ queue for a\n   newly arriving request is full, the request is rejected immediately,\n\
    \   with the status codes specified in Section 4.6.5 and Section 4.6.6.\n   In\
    \ addition, a priority queueing policy MAY impose a waiting time\n   limit for\
    \ each priority class, whereby requests that exceed a\n   specified waiting time\
    \ are ejected from the queue and a 408 (Request\n   Timeout) failure response\
    \ is returned to the requestor.\n   Finally, an RP actor MAY impose a global queue\
    \ size limit summed\n   across all queues and drop waiting lower-priority requests\
    \ with a 408\n   (Request Timeout) failure response.  This does not imply preemption,\n\
    \   since the session has not been established yet.\n   UAS behavior for queueing\
    \ is discussed in Section 4.7.2.2.\n"
- title: 4.6.  Error Conditions
  contents:
  - '4.6.  Error Conditions

    '
- title: 4.6.1.  Introduction
  contents:
  - "4.6.1.  Introduction\n   In this section, we describe the error behavior that\
    \ is shared among\n   multiple types of RP actors (including various instances\
    \ of UAS such\n   as trunk gateways, line gateways, and IP phones) and proxies.\n\
    \   A request containing a resource priority indication can fail for four\n  \
    \ reasons:\n   o  the RP actor does not understand the priority value\n      (Section\
    \ 4.6.2),\n   o  the requestor is not authenticated (Section 4.6.3),\n   o  an\
    \ authenticated requestor is not authorized to make such a\n      request (Section\
    \ 4.6.4), or\n   o  there are insufficient resources for an authorized request\n\
    \      (Section 4.6.5).\n   We treat these error cases in the order that they\
    \ typically arise in\n   the processing of requests with Resource-Priority headers.\
    \  However,\n   this order is not mandated.  For example, an RP actor that knows\
    \ that\n   a particular resource value cannot be served or queued MAY, as a\n\
    \   matter of local policy, forgo authorization, since it would only add\n   processing\
    \ load without changing the outcome.\n"
- title: 4.6.2.  No Known Namespace or Priority Value
  contents:
  - "4.6.2.  No Known Namespace or Priority Value\n   If an RP actor does not understand\
    \ any of the resource values in the\n   request, the treatment depends on the\
    \ presence of the 'Require'\n   'resource-priority' option tag:\n   1.  Without\
    \ the option tag, the RP actor treats the request as if it\n       contained no\
    \ 'Resource-Priority' header field and processes it\n       with default priority.\
    \  Resource values that are not understood\n       MUST NOT be modified or deleted.\n\
    \   2.  With the option tag, it MUST reject the request with a 417\n       (Unknown\
    \ Resource-Priority) response code.\n   Making case (1) the default is necessary\
    \ since otherwise there would\n   be no way to successfully complete any calls\
    \ in the case where a\n   proxy on the way to the UAS shares no common namespaces\
    \ with the UAC,\n   but the UAC and UAS do have such a namespace in common.\n\
    \   In general, as noted, a SIP request can contain more than one\n   'Resource-Priority'\
    \ header field.  This is necessary if a request\n   needs to traverse different\
    \ administrative domains, each with its own\n   set of valid resource values.\
    \  For example, the ETS namespace might\n   be enabled for United States government\
    \ networks that also support\n   the DSN and/or DRSN namespaces for most individuals\
    \ in those domains.\n   A 417 (Unknown Resource-Priority) response MAY, according\
    \ to local\n   policy, include an 'Accept-Resource-Priority' header field\n  \
    \ enumerating the acceptable resource values.\n"
- title: 4.6.3.  Authentication Failure
  contents:
  - "4.6.3.  Authentication Failure\n   If the request is not authenticated, a 401\
    \ (Unauthorized) or 407\n   (Proxy Authentication Required) response is returned\
    \ in order to\n   allow the requestor to insert appropriate credentials.\n"
- title: 4.6.4.  Authorization Failure
  contents:
  - "4.6.4.  Authorization Failure\n   If the RP actor receives an authenticated request\
    \ with a namespace\n   and priority value it recognizes but the originator is\
    \ not authorized\n   for that level of service, the element MUST return a 403\
    \ (Forbidden)\n   response.\n"
- title: 4.6.5.  Insufficient Resources
  contents:
  - "4.6.5.  Insufficient Resources\n   Insufficient resource conditions can occur\
    \ on proxy servers and user\n   agent servers, typically trunk gateways, if an\
    \ RP actor receives an\n   authorized request, has insufficient resources, and\
    \ the request\n   neither preempts another session nor is queued.  A request can\
    \ fail\n   because the RP actor has either insufficient processing capacity to\n\
    \   handle the SIP request or insufficient bandwidth or trunk capacity to\n  \
    \ establish the requested session for session-creating SIP requests.\n   If the\
    \ request fails because the RP actor cannot handle the signaling\n   load, the\
    \ RP actor responds with 503 (Service Unavailable).\n   If there is not enough\
    \ bandwidth, or if there is an insufficient\n   number of trunks, a 488 (Not Acceptable\
    \ Here) response indicates that\n   the RP actor is rejecting the request due\
    \ to media path availability,\n   such as insufficient gateway resources.  In\
    \ that case, [RFC3261]\n   advises that a 488 response SHOULD include a 'Warning'\
    \ header field\n   with a reason for the rejection; warning code 370 (Insufficient\n\
    \   Bandwidth) is typical.\n   For systems implementing queueing, if the request\
    \ is queued, the UAS\n   will return 408 (Request Timeout) if the request exceeds\
    \ the maximum\n   configured waiting time in the queue.\n"
- title: 4.6.6.  Busy
  contents:
  - "4.6.6.  Busy\n   Resource contention also occurs when a call request arrives\
    \ at a UAS\n   that is unable to accept another call, because the UAS either has\n\
    \   just one line appearance or has active calls on all line appearances.\n  \
    \ If the call request indicates an equal or lower priority value when\n   compared\
    \ to all active calls present on the UAS, the UAS returns a\n   486 (Busy here)\
    \ response.\n   If the request is queued instead, the UAS will return a 408 (Request\n\
    \   Timeout) if the request exceeds the maximum configured waiting time\n   in\
    \ the device queue.\n   If a proxy gets 486 (Busy Here) responses on all branches,\
    \ it can\n   then return a 600 (Busy Everywhere) response to the caller.\n"
- title: 4.7.  Element-Specific Behaviors
  contents:
  - '4.7.  Element-Specific Behaviors

    '
- title: 4.7.1.  User Agent Client Behavior
  contents:
  - "4.7.1.  User Agent Client Behavior\n   SIP UACs supporting this specification\
    \ MUST be able to generate the\n   'Resource-Priority' header field for requests\
    \ that require elevated\n   resource access priority.  As stated previously, the\
    \ UAC SHOULD be\n   able to generate more than one resource value in a single\
    \ SIP\n   request.\n   Upon receiving a 417 (Unknown Resource-Priority) response,\
    \ the UAC\n   MAY attempt a subsequent request with the same or different resource\n\
    \   value.  If available, it SHOULD choose authorized resource values\n   from\
    \ the set of values returned in the 'Accept-Resource-Priority'\n   header field.\n"
- title: 4.7.1.1.  User Agent Client Behavior with a Preemption Algorithm
  contents:
  - "4.7.1.1.  User Agent Client Behavior with a Preemption Algorithm\n   A UAC that\
    \ requests a priority value that may cause preemption MUST\n   understand a Reason\
    \ header field in the BYE request explaining why\n   the session was terminated,\
    \ as discussed in [RFC4411].\n"
- title: 4.7.1.2.  User Agent Client Behavior with a Queueing Policy
  contents:
  - "4.7.1.2.  User Agent Client Behavior with a Queueing Policy\n   By standard SIP\
    \ protocol rules, a UAC MUST be prepared to receive a\n   182 (Queued) response\
    \ from an RP actor that is currently at capacity,\n   but that has put the original\
    \ request into a queue.  A UAC MAY\n   indicate this queued status to the user\
    \ by some audio or visual\n   indication to prevent the user from interpreting\
    \ the call as having\n   failed.\n"
- title: 4.7.2.  User Agent Server Behavior
  contents:
  - "4.7.2.  User Agent Server Behavior\n   The precise effect of the 'Resource-Priority'\
    \ indication depends on\n   the type of UAS, the namespace, and local policy.\n"
- title: 4.7.2.1.  User Agent Servers and Preemption Algorithm
  contents:
  - "4.7.2.1.  User Agent Servers and Preemption Algorithm\n   A UAS compliant with\
    \ this specification MUST terminate a session\n   established with a valid namespace\
    \ and lower-priority value in favor\n   of a new session set up with a valid namespace\
    \ and higher relative\n   priority value, unless local policy has some form of\
    \ call-waiting\n   capability enabled.  If a session is terminated, the BYE method\
    \ is\n   used with a 'Reason' header field indicating why and where the\n   preemption\
    \ took place.\n   Implementors have a number of choices in how to implement preemption\n\
    \   at IP phones with multiple line presences, i.e., with devices that\n   can\
    \ handle multiple simultaneous sessions.  Naturally, if that device\n   has exhausted\
    \ the number of simultaneous sessions, one of the\n   sessions needs to be replaced.\
    \  If the device has spare sessions, an\n   implementation MAY choose to alert\
    \ the callee to the arrival of a\n   higher-priority call.  Details may also be\
    \ set by local or namespace\n   policy.\n   [RFC4411] provides additional information\
    \ in the case of purposeful\n   or administrative termination of a session by\
    \ including the Reason\n   header in the BYE message that states why the BYE was\
    \ sent (in this\n   case, a preemption event).  The mechanisms in that document\
    \ allow\n   indication of where the termination occurred ('at the UA', 'within\
    \ a\n   reservation', 'at a IP/PSTN gateway') and include call flow examples\n\
    \   of each reason.\n"
- title: 4.7.2.2.  User Agent Servers and Queue-Based Policy
  contents:
  - "4.7.2.2.  User Agent Servers and Queue-Based Policy\n   A UAS compliant with\
    \ this specification SHOULD generate a 182\n   (Queued) response if that element's\
    \ resources are busy, until it is\n   able to handle the request and provide a\
    \ final response.  The\n   frequency of such provisional messages is governed\
    \ by [RFC3261].\n"
- title: 4.7.3.  Proxy Behavior
  contents:
  - "4.7.3.  Proxy Behavior\n   SIP proxies MAY ignore the 'Resource-Priority' header\
    \ field.  SIP\n   proxies MAY reject any unauthenticated request bearing that\
    \ header\n   field.\n   When the 'Require' header field is included in a message,\
    \ it ensures\n   that in parallel forking, only branches that support the resource-\n\
    \   priority mechanism succeed.\n   If S/MIME encapsulation is used according\
    \ to Section 23 of RFC 3261,\n   special considerations apply.  As tabulated in\
    \ Section 3.3, the\n   'Resource-Priority' header field can be modified by proxies\
    \ and thus\n   is exempted from the integrity checking described in Section 23.4.1.1\n\
    \   of RFC 3261.  Since it may need to be inspected or modified by\n   proxies,\
    \ the header field MUST also be placed in the \"outer\" message\n   if the UAC\
    \ would like proxy servers to be able to act on the header\n   information.  Similar\
    \ considerations apply if parts of the message\n   are integrity protected or\
    \ encrypted as described in [RFC3420].\n   If S/MIME is not used, or if the 'Resource-Priority'\
    \ header field is\n   in the \"outer\" header, SIP proxies MAY downgrade or upgrade\
    \ the\n   'Resource-Priority' of a request or insert a new 'Resource-Priority'\n\
    \   header if allowed by local policy.\n   If a stateful proxy has authorized\
    \ a particular resource priority\n   level, and if it offers differentiated treatment\
    \ to responses\n   containing resource priority levels, the proxy SHOULD ignore\
    \ any\n   higher value contained in responses, to prevent colluding user agents\n\
    \   from artificially raising the priority level.\n   A SIP proxy MAY use the\
    \ 'Resource-Priority' indication in its routing\n   decisions, e.g., to retarget\
    \ to a SIP node or SIP URI that is\n   reserved for a particular resource priority.\n\
    \   There are no special considerations for proxies when forking requests\n  \
    \ containing a resource priority indication.\n   Otherwise, the proxy behavior\
    \ is the same as for user agent servers\n   described in Section 4.7.2.\n"
- title: 5.  Third-Party Authentication
  contents:
  - "5.  Third-Party Authentication\n   In some cases, the RP actor may not be able\
    \ to authenticate the\n   requestor or determine whether an authenticated user\
    \ is authorized to\n   make such a request.  In these circumstances, the SIP entity\
    \ may\n   avail itself of general SIP mechanisms that are not specific to this\n\
    \   application.  The authenticated identity management mechanism\n   [RFC3893]\
    \ allows a third party to verify the identity of the\n   requestor and to certify\
    \ this towards an RP actor.  In networks with\n   mutual trust, the SIP-asserted\
    \ identity mechanism [RFC3325] can help\n   the RP actor determine the identity\
    \ of the requestor.\n"
- title: 6.  Backwards Compatibility
  contents:
  - "6.  Backwards Compatibility\n   The resource priority mechanism described in\
    \ this document is fully\n   backwards compatible with SIP systems following [RFC3261].\
    \  Systems\n   that do not understand the mechanism can only deliver standard,\
    \ not\n   elevated, service priority.  User agent servers and proxies can\n  \
    \ ignore any 'Resource-Priority' header field just like any other\n   unknown\
    \ header field and then treat the request like any other\n   request.  Naturally,\
    \ the request may still succeed.\n"
- title: 7.  Examples
  contents:
  - "7.  Examples\n   The SDP message body and the BYE and ACK exchanges are the same\
    \ as in\n   RFC 3665 [RFC3665] and are omitted for brevity.\n"
- title: 7.1.  Simple Call
  contents:
  - "7.1.  Simple Call\n   User A                  User B\n     |                \
    \        |\n     |       INVITE F1        |\n     |----------------------->|\n\
    \     |    180 Ringing F2      |\n     |<-----------------------|\n     |    \
    \                    |\n     |       200 OK F3        |\n     |<-----------------------|\n\
    \     |         ACK F4         |\n     |----------------------->|\n     |   Both\
    \ Way RTP Media   |\n     |<======================>|\n     |                 \
    \       |\n   In this scenario, User A completes a call to User B directly.  The\n\
    \   call from A to B is marked with a resource priority indication.\n   F1 INVITE\
    \ User A -> User B\n   INVITE sip:UserB@biloxi.example.com SIP/2.0\n   Via: SIP/2.0/TCP\
    \ client.atlanta.example.com:5060;branch=z9hG4bK74bf9\n   Max-Forwards: 70\n \
    \  From: BigGuy <sip:UserA@atlanta.example.com>;tag=9fxced76sl\n   To: LittleGuy\
    \ <sip:UserB@biloxi.example.com>\n   Call-ID: 3848276298220188511@atlanta.example.com\n\
    \   CSeq: 1 INVITE\n   Resource-Priority: dsn.flash\n   Contact: <sip:UserA@client.atlanta.example.com;transport=tcp>\n\
    \   Content-Type: application/sdp\n   Content-Length: ...\n   ...\n   F2 180 Ringing\
    \ User B -> User A\n   SIP/2.0 180 Ringing\n   Via: SIP/2.0/TCP client.atlanta.example.com:5060;branch=z9hG4bK74bf9\n\
    \     ;received=192.0.2.101\n   From: BigGuy <sip:UserA@atlanta.example.com>;tag=9fxced76sl\n\
    \   To: LittleGuy <sip:UserB@biloxi.example.com>;tag=8321234356\n   Call-ID: 3848276298220188511@atlanta.example.com\n\
    \   CSeq: 1 INVITE\n   Contact: <sip:UserB@client.biloxi.example.com;transport=tcp>\n\
    \   Content-Length: 0\n   F3 200 OK User B -> User A\n   SIP/2.0 200 OK\n   Via:\
    \ SIP/2.0/TCP client.atlanta.example.com:5060;branch=z9hG4bK74bf9\n     ;received=192.0.2.101\n\
    \   From: BigGuy <sip:UserA@atlanta.example.com>;tag=9fxced76sl\n   To: LittleGuy\
    \ <sip:UserB@biloxi.example.com>;tag=8321234356\n   Call-ID: 3848276298220188511@atlanta.example.com\n\
    \   CSeq: 1 INVITE\n   Contact: <sip:UserB@client.biloxi.example.com;transport=tcp>\n\
    \   Content-Type: application/sdp\n   Content-Length: ...\n   ...\n"
- title: 7.2.  Receiver Does Not Understand Namespace
  contents:
  - "7.2.  Receiver Does Not Understand Namespace\n   In this example, the receiving\
    \ UA does not understand the \"dsn\"\n   namespace and thus returns a 417 (Unknown\
    \ Resource-Priority) status\n   code.  We omit the message details for messages\
    \ F5 through F7, since\n   they are essentially the same as in the first example.\n\
    \   User A                  User B\n     |                        |\n     |  \
    \     INVITE F1        |\n     |----------------------->|\n     | 417 R-P failed\
    \ F2      |\n     |<-----------------------|\n     |         ACK F3         |\n\
    \     |----------------------->|\n     |                        |\n     |    \
    \   INVITE F4        |\n     |----------------------->|\n     |    180 Ringing\
    \ F5      |\n     |<-----------------------|\n     |       200 OK F6        |\n\
    \     |<-----------------------|\n     |         ACK F7         |\n     |----------------------->|\n\
    \     |                        |\n     |   Both Way RTP Media   |\n     |<======================>|\n\
    \   F1 INVITE User A -> User B\n   INVITE sip:UserB@biloxi.example.com SIP/2.0\n\
    \   Via: SIP/2.0/TCP client.atlanta.example.com:5060;branch=z9hG4bK74bf9\n   Max-Forwards:\
    \ 70\n   From: BigGuy <sip:UserA@atlanta.example.com>;tag=9fxced76sl\n   To: LittleGuy\
    \ <sip:UserB@biloxi.example.com>\n   Call-ID: 3848276298220188511@atlanta.example.com\n\
    \   CSeq: 1 INVITE\n   Require: resource-priority\n   Resource-Priority: dsn.flash\n\
    \   Contact: <sip:UserA@client.atlanta.example.com;transport=tcp>\n   Content-Type:\
    \ application/sdp\n   Content-Length: ...\n   ...\n   F2 417 Resource-Priority\
    \ failed  User B -> User A\n   SIP/2.0 417 Unknown Resource-Priority\n   Via:\
    \ SIP/2.0/TCP client.atlanta.example.com:5060;branch=z9hG4bK74bf9\n     ;received=192.0.2.101\n\
    \   From: BigGuy <sip:UserA@atlanta.example.com>;tag=9fxced76sl\n   To: LittleGuy\
    \ <sip:UserB@biloxi.example.com>;tag=8321234356\n   Call-ID: 3848276298220188511@atlanta.example.com\n\
    \   CSeq: 1 INVITE\n   Accept-Resource-Priority: q735.0, q735.1, q735.2, q735.3,\
    \ q735.4\n   Contact: <sip:UserB@client.biloxi.example.com;transport=tcp>\n  \
    \ Content-Type: application/sdp\n   Content-Length: 0\n   F3 ACK User A -> User\
    \ B\n   ACK sip:UserB@biloxi.example.com SIP/2.0\n   Via: SIP/2.0/TCP client.atlanta.example.com:5060;branch=z9hG4bK74bd5\n\
    \   Max-Forwards: 70\n   From: BigGuy <sip:UserA@atlanta.example.com>;tag=9fxced76sl\n\
    \   To: LittleGuy <sip:UserB@biloxi.example.com>;tag=8321234356\n   Call-ID: 3848276298220188511@atlanta.example.com\n\
    \   CSeq: 1 ACK\n   Content-Length: 0\n   F4 INVITE User A -> User B\n   INVITE\
    \ sip:UserB@biloxi.example.com SIP/2.0\n   Via: SIP/2.0/TCP client.atlanta.example.com:5060;branch=z9hG4bK74bf9\n\
    \   Max-Forwards: 70\n   From: BigGuy <sip:UserA@atlanta.example.com>;tag=9fxced76sl\n\
    \   To: LittleGuy <sip:UserB@biloxi.example.com>\n   Call-ID: 3848276298220188511@atlanta.example.com\n\
    \   CSeq: 2 INVITE\n   Require: resource-priority\n   Resource-Priority: q735.3\n\
    \   Contact: <sip:UserA@client.atlanta.example.com;transport=tcp>\n   Content-Type:\
    \ application/sdp\n   Content-Length: ...\n   ...\n"
- title: 8.  Handling Multiple Concurrent Namespaces
  contents:
  - '8.  Handling Multiple Concurrent Namespaces

    '
- title: 8.1.  General Rules
  contents:
  - "8.1.  General Rules\n   A single SIP request MAY contain resource values from\
    \ multiple\n   namespaces.  As noted earlier, an RP actor disregards all namespaces\n\
    \   it does not recognize.  This specification only addresses the case\n   where\
    \ an RP actor then selects one of the remaining resource values\n   for processing,\
    \ usually choosing the one with the highest relative\n   priority.\n   If an RP\
    \ actor understands multiple namespaces, it MUST create a\n   local total ordering\
    \ across all resource values from these\n   namespaces, maintaining the relative\
    \ ordering within each namespace.\n   It is RECOMMENDED that the same ordering\
    \ be used across an\n   administrative domain.  However, there is no requirement\
    \ that such\n   ordering be the same across all administrative domains.\n"
- title: 8.2.  Examples of Valid Orderings
  contents:
  - "8.2.  Examples of Valid Orderings\n   Below are a set of examples of an RP actor\
    \ that supports two\n   namespaces, foo and bar.  Foo's priority-values are 3\
    \ (highest), then\n   2, and then 1 (lowest), and bar's priority-values are C\
    \ (highest),\n   then B, and then A (lowest).\n   Below are five lists of acceptable\
    \ priority orders the SIP element\n   may use:\n       Foo.3        Foo.3    \
    \   Bar.C    (highest priority)\n       Foo.2        Bar.C       Foo.3\n     \
    \  Foo.1   or   Foo.2   or  Foo.2\n       Bar.C        Bar.B       Foo.1\n   \
    \    Bar.B        Foo.1       Bar.B\n       Bar.A        Bar.A       Bar.A   \
    \ (lowest priority)\n              Bar.C       (highest priority)\n          \
    \ Foo.3  Bar.B   (both treated with equal priority (FIFO))\n    or     Foo.2 \
    \ Bar.A   (both treated with equal priority (FIFO))\n              Foo.1     \
    \  (lowest priority)\n           Bar.C     (highest priority)\n           Foo.3\n\
    \    or     Foo.2\n           Foo.1     (lowest priority)\n   In the last example\
    \ above, Bar.A and Bar.B are ignored.\n"
- title: 8.3.  Examples of Invalid Orderings
  contents:
  - "8.3.  Examples of Invalid Orderings\n   Based on the priority order of the namespaces\
    \ above, the following\n   combinations are examples of orderings that are NOT\
    \ acceptable and\n   MUST NOT be configurable:\n          Example 1    Example\
    \ 2   Example 3\n          ---------    ---------   ---------\n            Foo.3\
    \        Foo.3       Bar.C\n            Foo.2        Bar.A       Foo.1\n     \
    \       Foo.1   or   Foo.2   or  Foo.3\n            Bar.C        Bar.B       Foo.2\n\
    \            Bar.A        Foo.1       Bar.A\n            Bar.B        Bar.C  \
    \     Bar.B\n                 Example 4\n                 ---------\n        \
    \           Bar.C\n                Foo.1  Bar.B\n         or     Foo.3  Bar.A\n\
    \                   Foo.2\n   These examples are invalid since the following global\
    \ orderings are\n   not consistent with the namespace-internal order:\n   o  In\
    \ Example 1, Bar.A is ordered higher than Bar.B.\n   o  In Example 2, Bar.A is\
    \ ordered higher than Bar.B and Bar.C.\n   o  In Example 3, Foo.1 is ordered higher\
    \ than Foo.2 and Foo.3.\n   o  In Example 4, Foo.1 is ordered higher than Foo.3\
    \ and Foo.2.\n"
- title: 9.  Registering Namespaces
  contents:
  - "9.  Registering Namespaces\n   Organizations considering the use of the Resource-Priority\
    \ header\n   field should investigate whether an existing combination of namespace\n\
    \   and priority-values meets their needs.  For example, emergency first\n   responders\
    \ around the world are discussing utilizing this mechanism\n   for preferential\
    \ treatment in future networks.  Jurisdictions SHOULD\n   attempt to reuse existing\
    \ IANA registered namespaces where possible,\n   as a goal of this document is\
    \ not to have unique namespaces per\n   jurisdiction serving the same purpose,\
    \ with the same usage of\n   priority levels.  This will greatly increase interoperability\
    \ and\n   reduce development time, and probably reduce future confusion if\n \
    \  there is ever a need to map one namespace to another in an\n   interworking\
    \ function.\n   Below, we describe the steps necessary to register a new namespace.\n\
    \   A new namespace MUST be defined in a Standards Track RFC, following\n   the\
    \ 'Standards Action' policy in [RFC2434], and MUST include the\n   following facets:\n\
    \   o  It must define the namespace label, a unique namespace label\n      within\
    \ the IANA registry for the SIP Resource-Priority header\n      field.\n   o \
    \ It must enumerate the priority levels (i.e., 'r-priority' values)\n      the\
    \ namespace is using.  Note that only finite lists are\n      permissible, not\
    \ unconstrained integers or tokens, for example.\n   o  The priority algorithm\
    \ (Section 4.5), identifying whether the\n      namespace is to be used with priority\
    \ queueing (\"queue\") or\n      preemption (\"preemption\").  If queueing is\
    \ used, the namespace MAY\n      indicate whether normal-priority requests are\
    \ queued.  If there is\n      a new \"intended algorithm\" other than preemption\
    \ or priority\n      queueing, the algorithm must be described, taking into account\
    \ all\n      RP actors (UAC, UAS, proxies).\n   o  A namespace may either reference\
    \ an existing list of priority\n      values or define a new finite list of priority\
    \ values in relative\n      priority order for IANA registration within the sip-parameters\n\
    \      Resource-Priority priority-values registry.  New priority-values\n    \
    \  SHOULD NOT be added to a previously IANA-registered list\n      associated\
    \ with a particular namespace, as this may cause\n      interoperability problems.\
    \  Unless otherwise specified, it is\n      assumed that all priority values confer\
    \ higher priority than\n      requests without a priority value.\n   o  Any new\
    \ SIP response codes unique to this new namespace need to be\n      explained\
    \ and registered.\n   o  The reference document must specify and describe any\
    \ new Warning\n      header field warn-codes (RFC 3261, Section 27.2).\n   o \
    \ The document needs to specify a new row for the following table\n      that\
    \ summarizes the features of the namespace and is included into\n      IANA Resource-Priority\
    \ Namespace registration:\n                         Intended          New    \
    \ New resp.\n   Namespace  Levels     algorithm      warn-code    code    Reference\n\
    \   ---------  ------  ----------------  ---------  --------  ---------\n    <label>\
    \   <# of    <preemption     <new warn  <new resp.  <RFC>\n             levels>\
    \    or queue>        code>      code>\n   If information on new response codes,\
    \ rejection codes, or error\n   behaviors is omitted, it is to be assumed that\
    \ the namespace defines\n   no new parameters or behaviors.\n"
- title: 10.  Namespace Definitions
  contents:
  - '10.  Namespace Definitions

    '
- title: 10.1.  Introduction
  contents:
  - "10.1.  Introduction\n   This specification defines five unique namespaces below:\
    \ DSN, DRSN,\n   Q735, ETS, and WPS, constituting their registration with IANA.\
    \  Each\n   IANA registration contains the facets defined in Section 9.  For\n\
    \   recognizability, we label the namespaces in capital letters, but note\n  \
    \ that namespace names are case insensitive and are customarily\n   rendered as\
    \ lowercase in protocol requests.\n"
- title: 10.2.  The "DSN" Namespace
  contents:
  - "10.2.  The \"DSN\" Namespace\n   The DSN namespace comes from the name of a US\
    \ government network\n   called \"The Defense Switched Network\".\n   The DSN\
    \ namespace has a finite list of relative priority-values,\n   listed below from\
    \ lowest priority to highest priority:\n      (lowest)  dsn.routine\n        \
    \        dsn.priority\n                dsn.immediate\n                dsn.flash\n\
    \      (highest) dsn.flash-override\n   The DSN namespace uses the preemption\
    \ algorithm (Section 4.5.1).\n"
- title: 10.3.  The "DRSN" Namespace
  contents:
  - "10.3.  The \"DRSN\" Namespace\n   The DRSN namespace comes from the name of a\
    \ US government network,\n   called \"The Defense RED Switched Network\".\n  \
    \ The DRSN namespace defines the following resource values, listed from\n   lowest\
    \ priority to highest priority:\n      (lowest)  drsn.routine\n              \
    \  drsn.priority\n                drsn.immediate\n                drsn.flash\n\
    \                drsn.flash-override\n      (highest) drsn.flash-override-override\n\
    \   The DRSN namespace uses the preemption algorithm (Section 4.5.1).\n   The\
    \ DRSN namespace differs in one algorithmic aspect from the DSN and\n   Q735 namespaces.\
    \  The behavior for the 'flash-override-override'\n   priority value differs from\
    \ the other values.  Normally, requests do\n   not preempt those of equal priority,\
    \ but a newly arriving 'flash-\n   override-override' request will displace another\
    \ one of equal\n   priority if there are insufficient resources.  This can also\
    \ be\n   expressed as saying that 'flash-override-override' requests defend\n\
    \   themselves as 'flash-override' only.\n"
- title: 10.4.  The "Q735" Namespace
  contents:
  - "10.4.  The \"Q735\" Namespace\n   Q.735.3 [Q.735.3] was created to be a commercial\
    \ version of the\n   operationally equivalent DSN specification for Multi-Level\
    \ Precedence\n   and Preemption (MLPP).  The Q735 namespace is defined here in\
    \ the\n   same manner.\n   The Q735 namespace defines the following resource values,\
    \ listed from\n   lowest priority to highest priority:\n      (lowest)  q735.4\n\
    \                q735.3\n                q735.2\n                q735.1\n    \
    \  (highest) q735.0\n   The Q735 namespace operates according to the preemption\n\
    \   (Section 4.5.1) algorithm.\n"
- title: 10.5.  The "ETS" Namespace
  contents:
  - "10.5.  The \"ETS\" Namespace\n   The ETS namespace derives its name indirectly\
    \ from the name of the US\n   government telecommunications service, called \"\
    Government Emergency\n   Telecommunications Service\" (or GETS), though the organization\n\
    \   responsible for the GETS service chose the acronym \"ETS\" for its GETS\n\
    \   over IP service, which stands for \"Emergency Telecommunications\n   Service\"\
    .\n   The ETS namespace defines the following resource values, listed from\n \
    \  lowest priority to highest priority:\n      (lowest)  ets.4\n             \
    \   ets.3\n                ets.2\n                ets.1\n      (highest) ets.0\n\
    \   The ETS namespace operates according to the priority queueing\n   algorithm\
    \ (Section 4.5.2).\n"
- title: 10.6.  The "WPS" Namespace
  contents:
  - "10.6.  The \"WPS\" Namespace\n   The WPS namespace derives its name from the\
    \ \"Wireless Priority\n   Service\", defined in GSM and other wireless technologies.\n\
    \   The WPS namespace defines the following resource values, listed from\n   lowest\
    \ priority to highest priority:\n      (lowest)  wps.4\n                wps.3\n\
    \                wps.2\n                wps.1\n      (highest) wps.0\n   The WPS\
    \ namespace operates according to the priority queueing\n   algorithm (Section\
    \ 4.5.2).\n"
- title: 11.  Security Considerations
  contents:
  - '11.  Security Considerations

    '
- title: 11.1.  General Remarks
  contents:
  - "11.1.  General Remarks\n   Any resource priority mechanism can be abused to obtain\
    \ resources and\n   thus deny service to other users.  An adversary may be able\
    \ to take\n   over a particular PSTN gateway, cause additional congestion during\n\
    \   emergencies affecting the PSTN, or deny service to legitimate users.\n   In\
    \ SIP end systems, such as IP phones, this mechanism could\n   inappropriately\
    \ terminate existing sessions and calls.\n   Thus, while the indication itself\
    \ does not have to provide separate\n   authentication, SIP requests containing\
    \ this header are very likely\n   to have higher authentication requirements than\
    \ those without.\n   These authentication and authorization requirements extend\
    \ to users\n   within the administrative domain, as later interconnection with\
    \ other\n   administrative domains may invalidate earlier assumptions on the\n\
    \   trustworthiness of users.\n   Below, we describe authentication and authorization\
    \ aspects,\n   confidentiality and privacy requirements, protection against denial-\n\
    \   of-service attacks, and anonymity requirements.  Naturally, the\n   general\
    \ discussion in RFC 3261 [RFC3261] applies.\n   All user agents and proxy servers\
    \ that support this extension MUST\n   implement SIP over TLS [RFC3546], the 'sips'\
    \ URI scheme as described\n   in Section 26.2 of RFC 3261, and Digest Authentication\
    \ [RFC2617] as\n   described in Section 22 of RFC 3261.  In addition, user agents\
    \ that\n   support this extension SHOULD also implement S/MIME [RFC3851] as\n\
    \   described in Section 23 of RFC 3261 to allow for signing and\n   verification\
    \ of signatures over requests that use this extension.\n"
- title: 11.2.  Authentication and Authorization
  contents:
  - "11.2.  Authentication and Authorization\n   Prioritized access to network and\
    \ end-system resources imposes\n   particularly stringent requirements on authentication\
    \ and\n   authorization mechanisms, since access to prioritized resources may\n\
    \   impact overall system stability and performance and not just result\n   in\
    \ theft of, say, a single phone call.\n   Under certain emergency conditions,\
    \ the network infrastructure,\n   including its authentication and authorization\
    \ mechanism, may be\n   under attack.\n   Given the urgency during emergency events,\
    \ normal statistical fraud\n   detection may be less effective, thus placing a\
    \ premium on reliable\n   authentication.\n   Common requirements for authentication\
    \ mechanisms apply, such as\n   resistance to replay, cut-and-paste, and bid-down\
    \ attacks.\n   Authentication MAY be SIP based or use other mechanisms.  Use of\n\
    \   Digest authentication and/or S/MIME is RECOMMENDED for UAS\n   authentication.\
    \  Digest authentication requires that the parties\n   share a common secret,\
    \ thus limiting its use across administrative\n   domains.  SIP systems employing\
    \ resource priority SHOULD implement\n   S/MIME at least for integrity, as described\
    \ in Section 23 of\n   [RFC3261].  However, in some environments, receipt of asserted\n\
    \   identity [RFC3325] from a trusted entity may be sufficient\n   authorization.\
    \  Section 5 describes third-party authentication.\n   Trait-based authorization\
    \ [TRAIT] \"entails an assertion by a\n   authorization service of attributes\
    \ associated with an identity\" and\n   may be appropriate for this application.\
    \  With trait-based\n   authorization, a network element can directly determine,\
    \ by\n   inspecting the certificate, that a request is authorized to obtain a\n\
    \   particular type of service, without having to consult a mapping\n   mechanism\
    \ that converts user identities to authorizations.\n   Authorization may be based\
    \ on factors besides the identity of the\n   caller, such as the requested destination.\
    \  Namespaces MAY also\n   impose particular authentication or authorization considerations\
    \ that\n   are stricter than the baseline described here.\n"
- title: 11.3.  Confidentiality and Integrity
  contents:
  - "11.3.  Confidentiality and Integrity\n   Calls that use elevated resource priority\
    \ levels provided by the\n   'Resource-Priority' header field are likely to be\
    \ sensitive and often\n   need to be protected from intercept and alteration.\
    \  In particular,\n   requirements for protecting the confidentiality of communications\n\
    \   relationships may be higher than those for normal commercial service.\n  \
    \ For SIP, the 'To', 'From', 'Organization', and 'Subject' header\n   fields are\
    \ examples of particularly sensitive information.  Systems\n   MUST implement\
    \ encryption at the transport level using TLS and MAY\n   implement other transport-layer\
    \ or network-layer security mechanisms.\n   UACs SHOULD use the \"sips\" URI to\
    \ request a secure transport\n   association to the destination.\n   The 'Resource-Priority'\
    \ header field can be carried in the SIP\n   message header or can be encapsulated\
    \ in a message fragment carried\n   in the SIP message body [RFC3420].  To be\
    \ considered valid\n   authentication for the purposes of this specification,\
    \ S/MIME-signed\n   SIP messages or fragments MUST contain, at a minimum, the\
    \ Date, To,\n   From, Call-ID, and Resource-Priority header fields.  Encapsulation\
    \ in\n   S/MIME body parts allows the user to protect this header field\n   against\
    \ inspection or modification by proxies.  However, in many\n   cases, proxies\
    \ will need to authenticate and authorize the request,\n   so encapsulation would\
    \ be undesirable.\n   Removal of a Resource-Priority header field or downgrading\
    \ its\n   priority value affords no additional opportunities to an adversary,\n\
    \   since that man-in-the-middle could simply drop or otherwise\n   invalidate\
    \ the SIP request and thus prevent call completion.\n   Only SIP elements within\
    \ the same administrative trust domain\n   employing a secure channel between\
    \ their SIP elements will trust a\n   Resource-Priority header field that is not\
    \ appropriately signed.\n   Others will need to authenticate the request independently.\
    \  Thus,\n   insertion of a Resource-Priority header field or upgrading the\n\
    \   priority value has no further security implications except causing a\n   request\
    \ to fail (see discussion in the previous paragraph).\n"
- title: 11.4.  Anonymity
  contents:
  - "11.4.  Anonymity\n   Some users may wish to remain anonymous to the request destination.\n\
    \   Anonymity for requests with resource priority is no different from\n   that\
    \ for any other authenticated SIP request.  For the reasons noted\n   earlier,\
    \ users have to authenticate themselves towards the SIP\n   elements carrying\
    \ the request where they desire resource priority\n   treatment.  The authentication\
    \ may be based on capabilities and noms,\n   not necessarily their civil name.\
    \  Clearly, they may remain anonymous\n   towards the request destination, using\
    \ the network-asserted identity\n   and general privacy mechanism described in\
    \ [RFC3323].\n"
- title: 11.5.  Denial-of-Service Attacks
  contents:
  - "11.5.  Denial-of-Service Attacks\n   As noted, systems described here are likely\
    \ to be subject to\n   deliberate denial-of-service (DoS) attacks during certain\
    \ types of\n   emergencies.  DoS attacks may be launched on the network itself\
    \ as\n   well as on its authentication and authorization mechanism.  As noted,\n\
    \   systems should minimize the amount of state, computation, and network\n  \
    \ resources that an unauthorized user can command.  The system must not\n   amplify\
    \ attacks by causing the transmission of more than one packet\n   to a network\
    \ address whose reachability has not been verified.\n"
- title: 12.  IANA Considerations
  contents:
  - '12.  IANA Considerations

    '
- title: 12.1.  Introduction
  contents:
  - "12.1.  Introduction\n   This section defines two new SIP headers (Section 12.2),\
    \ one SIP\n   option tag (Section 12.3), one new 4xx error code (Section 12.4),\
    \ a\n   new registry within the sip-parameters section of IANA for Resource-\n\
    \   Priority namespaces (Section 12.5), and a new registry within the\n   sip-parameters\
    \ section of IANA for Resource-Priority and priority-\n   values (Section 12.6).\n\
    \   Additional namespaces and priority values MUST be registered with\n   IANA,\
    \ as described in Section 9.\n   The SIP Change Process [RFC3427] establishes\
    \ a policy for the\n   registration of new SIP extension headers.  Resource priority\n\
    \   namespaces and priority values have similar interoperability\n   requirements\
    \ to those of SIP extension headers.  Consequently,\n   registration of new resource\
    \ priority namespaces and priority values\n   requires documentation in an RFC\
    \ using the extension header approval\n   process specified in RFC 3427.\n   Registration\
    \ policies for new namespaces are defined in Section 9.\n"
- title: 12.2.  IANA Registration of 'Resource-Priority' and 'Accept-Resource-
  contents:
  - "12.2.  IANA Registration of 'Resource-Priority' and 'Accept-Resource-\n     \
    \  Priority' Header Fields\n   The following is the registration for the 'Resource-Priority'\
    \ header\n   field:\n   RFC number: 4412\n   Header name: 'Resource-Priority'\n\
    \   Compact form: none\n   The following is the registration for the 'Accept-Resource-Priority'\n\
    \   header field:\n   RFC number: 4412\n   Header name: Accept-Resource-Priority\n\
    \   Compact form: none\n"
- title: 12.3.  IANA Registration for Option Tag resource-priority
  contents:
  - "12.3.  IANA Registration for Option Tag resource-priority\n   RFC number: 4412\n\
    \   Name of option tag: 'resource-priority'\n   Descriptive text: Indicates or\
    \ requests support for the resource\n      priority mechanism.\n"
- title: 12.4.  IANA Registration for Response Code 417
  contents:
  - "12.4.  IANA Registration for Response Code 417\n   RFC number: 4412\n   Response\
    \ code: 417\n   Default reason phrase: Unknown Resource-Priority\n"
- title: 12.5.  IANA Resource-Priority Namespace Registration
  contents:
  - "12.5.  IANA Resource-Priority Namespace Registration\n   A new registry (\"Resource-Priority\
    \ Namespaces\") in the sip-parameters\n   section of IANA has been created, taking\
    \ a form similar to this table\n   below:\n                         Intended \
    \      New warn-    New resp.\n   Namespace  Levels     Algorithm      code  \
    \       code      Reference\n   ---------  ------  ----------------  ---------\
    \    --------- ---------\n      dsn       5        preemption        no      \
    \     no     [RFC4412]\n      drsn      6        preemption        no        \
    \   no     [RFC4412]\n      q735      5        preemption        no          \
    \ no     [RFC4412]\n      ets       5        queue             no           no\
    \     [RFC4412]\n      wps       5        queue             no           no  \
    \   [RFC4412]\n   Legend\n   ------\n   Namespace        The unique string identifying\
    \ the namespace.\n   Levels           The number of priority-values within the\
    \ namespace.\n   Algorithm        Intended operational behavior of SIP elements\n\
    \                    implementing this namespace.\n   New Warn code    New Warning\
    \ Codes (warn-codes) introduced by\n                    this namespace.\n   New\
    \ Resp. code   New SIP response codes introduced by this namespace.\n   Reference\
    \        IETF document reference for this namespace.\n"
- title: 12.6.  IANA Priority-Value Registrations
  contents:
  - "12.6.  IANA Priority-Value Registrations\n   A new registry (\"Resource-Priority\
    \ Priority-values\") in the sip-\n   parameters section of IANA has been created,\
    \ taking a form similar to\n   this table below:\n   Namespace: drsn\n   Reference:\
    \ RFC 4412\n   Priority-Values (least to greatest): \"routine\", \"priority\"\
    ,\n      \"immediate\", \"flash\", \"flash-override\", \"flash-override-override\"\
    \n   Namespace: dsn\n   Reference: RFC 4412\n   Priority-Values (least to greatest):\
    \ \"routine\", \"priority\",\n      \"immediate\", \"flash\", \"flash-override\"\
    \n   Namespace: q735\n   Reference: RFC 4412\n   Priority values (least to greatest):\
    \ \"4\", \"3\", \"2\", \"1\", \"0\"\n   Namespace: ets\n   Reference: RFC 4412\n\
    \   Priority values (least to greatest): \"4\", \"3\", \"2\", \"1\", \"0\"\n \
    \  Namespace: wps\n   Reference: RFC 4412\n   Priority values (least to greatest):\
    \ \"4\", \"3\", \"2\", \"1\", \"0\"\n"
- title: 13.  Acknowledgements
  contents:
  - "13.  Acknowledgements\n   Ben Campbell, Ken Carlberg, Paul Kyzivat, Rohan Mahy,\
    \ Allison Mankin,\n   Xavier Marjou, Piers O'Hanlon, Mike Pierce, Samir Srivastava,\
    \ and\n   Dale Worley provided helpful comments.\n   Dean Willis provided much\
    \ help with this effort.\n   Martin Dolly, An Nguyen, and Niranjan Sandesara assisted\
    \ with the ETS\n   and WPS namespaces.\n   Janet Gunn helped improve the text\
    \ on queueing-based priority.\n"
- title: 14.  References
  contents:
  - '14.  References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [I.255.3]  International Telecommunications Union,\
    \ \"Integrated\n              Services Digital Network (ISDN) - General Structure\
    \ and\n              Service Capabilities - Multi-Level Precedence and\n     \
    \         Preemption\", Recommendation I.255.3, July 1990.\n   [Q.735.3]  International\
    \ Telecommunications Union, \"Stage 3\n              description for community\
    \ of interest supplementary\n              services using Signalling System No.\
    \ 7: Multi-level\n              precedence and preemption\", Recommendation Q.735.3,\n\
    \              March 1993.\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2434]  Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an\n              IANA Considerations Section in RFCs\", BCP 26, RFC 2434,\n\
    \              October 1998.\n   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston,\n              A., Peterson, J., Sparks, R., Handley, M., and\
    \ E.\n              Schooler, \"SIP:  Session Initiation Protocol\", RFC 3261,\n\
    \              June 2002.\n   [RFC3262]  Rosenberg, J. and H. Schulzrinne, \"\
    Reliability of\n              Provisional Responses in Session Initiation Protocol\n\
    \              (SIP)\", RFC 3262, June 2002.\n   [RFC3265]  Roach, A.B., \"Session\
    \ Initiation Protocol (SIP)-Specific\n              Event Notification\", RFC\
    \ 3265, June 2002.\n   [RFC3311]  Rosenberg, J., \"The Session Initiation Protocol\
    \ (SIP)\n              UPDATE Method\", RFC 3311, October 2002.\n   [RFC3420]\
    \  Sparks, R., \"Internet Media Type message/sipfrag\", RFC\n              3420,\
    \ November 2002.\n   [RFC3428]  Campbell, B., Rosenberg, J., Schulzrinne, H.,\
    \ Huitema, C.,\n              and D. Gurle, \"Session Initiation Protocol (SIP)\
    \ Extension\n              for Instant Messaging\", RFC 3428, December 2002.\n\
    \   [RFC4411]  Polk, J., \"Extending the Session Initiation Protocol (SIP)\n \
    \             Reason Header for Preemption Events\", RFC 4411, February\n    \
    \          2006.\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [RFC2617]  Franks, J., Hallam-Baker, P., Hostetler,\
    \ J., Lawrence, S.,\n              Leach, P., Luotonen, A., and L. Stewart, \"\
    HTTP\n              Authentication: Basic and Digest Access Authentication\",\n\
    \              RFC 2617, June 1999.\n   [RFC2976]  Donovan, S., \"The SIP INFO\
    \ Method\", RFC 2976, October\n              2000.\n   [RFC3323]  Peterson, J.,\
    \ \"A Privacy Mechanism for the Session\n              Initiation Protocol (SIP)\"\
    , RFC 3323, November 2002.\n   [RFC3325]  Jennings, C., Peterson, J., and M. Watson,\
    \ \"Private\n              Extensions to the Session Initiation Protocol (SIP)\
    \ for\n              Asserted Identity within Trusted Networks\", RFC 3325,\n\
    \              November 2002.\n   [RFC3427]  Mankin, A., Bradner, S., Mahy, R.,\
    \ Willis, D., Ott, J.,\n              and B. Rosen, \"Change Process for the Session\
    \ Initiation\n              Protocol (SIP)\", BCP 67, RFC 3427, December 2002.\n\
    \   [RFC3487]  Schulzrinne, H., \"Requirements for Resource Priority\n       \
    \       Mechanisms for the Session Initiation Protocol (SIP)\", RFC\n        \
    \      3487, February 2003.\n   [RFC3515]  Sparks, R., \"The Session Initiation\
    \ Protocol (SIP) Refer\n              Method\", RFC 3515, April 2003.\n   [RFC3546]\
    \  Blake-Wilson, S., Nystrom, M., Hopwood, D., Mikkelsen, J.,\n              and\
    \ T. Wright, \"Transport Layer Security (TLS)\n              Extensions\", RFC\
    \ 3546, June 2003.\n   [RFC3550]  Schulzrinne, H.,  Casner, S., Frederick, R.,\
    \ and V.\n              Jacobson, \"RTP: A Transport Protocol for Real-Time\n\
    \              Applications\", STD 64, RFC 3550, July 2003.\n   [RFC3665]  Johnston,\
    \ A., Donovan, S., Sparks, R., Cunningham, C., and\n              K. Summers,\
    \ \"Session Initiation Protocol (SIP) Basic Call\n              Flow Examples\"\
    , BCP 75, RFC 3665, December 2003.\n   [RFC3851]  Ramsdell, B., \"Secure/Multipurpose\
    \ Internet Mail\n              Extensions (S/MIME) Version 3.1 Message Specification\"\
    ,\n              RFC 3851, July 2004.\n   [RFC3893]  Peterson, J., \"Session Initiation\
    \ Protocol (SIP)\n              Authenticated Identity Body (AIB) Format\", RFC\
    \ 3893,\n              September 2004.\n   [RFC3903]  Niemi, A., \"Session Initiation\
    \ Protocol (SIP) Extension\n              for Event State Publication\", RFC 3903,\
    \ October 2004.  for\n              Event State Publication\", RFC 3903, October\
    \ 2004.\n   [TRAIT]    Peterson, J., Polk, J., Sicker, D., and H. Tschofenig,\n\
    \              \"Trait-based Authorization Requirements for the Session\n    \
    \          Initiation Protocol (SIP)\", Work in Progress,\n              February\
    \ 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Henning Schulzrinne\n   Columbia University\n   Department\
    \ of Computer Science\n   450 Computer Science Building\n   New York, NY  10027\n\
    \   US\n   Phone: +1 212 939 7004\n   EMail: hgs@cs.columbia.edu\n   URI:   http://www.cs.columbia.edu\n\
    \   James Polk\n   Cisco Systems\n   2200 East President George Bush Turnpike\n\
    \   Richardson, TX  75082\n   US\n   EMail: jmpolk@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
