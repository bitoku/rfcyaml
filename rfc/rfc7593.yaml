- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                       K. Wierenga
  contents:
  - "Independent Submission                                       K. Wierenga\n  \
    \            The eduroam Architecture for Network Roaming\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the architecture of the eduroam service\
    \ for\n   federated (wireless) network access in academia.  The combination of\n\
    \   IEEE 802.1X, the Extensible Authentication Protocol (EAP), and RADIUS\n  \
    \ that is used in eduroam provides a secure, scalable, and deployable\n   service\
    \ for roaming network access.  The successful deployment of\n   eduroam over the\
    \ last decade in the educational sector may serve as\n   an example for other\
    \ sectors, hence this document.  In particular,\n   the initial architectural\
    \ choices and selection of standards are\n   described, along with the changes\
    \ that were prompted by operational\n   experience.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7593.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n     1.2.  Notational Conventions  . . . . . . . . . . . . . .\
    \ . . .   4\n     1.3.  Design Goals  . . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n     1.4.  Solutions That Were Considered  . . . . . . . . . . . .\
    \ .   5\n   2.  Classic Architecture  . . . . . . . . . . . . . . . . . . . .\
    \   6\n     2.1.  Authentication  . . . . . . . . . . . . . . . . . . . . .  \
    \ 6\n       2.1.1.  IEEE 802.1X . . . . . . . . . . . . . . . . . . . . .   6\n\
    \       2.1.2.  EAP . . . . . . . . . . . . . . . . . . . . . . . . .   7\n  \
    \   2.2.  Federation Trust Fabric . . . . . . . . . . . . . . . . .   8\n    \
    \   2.2.1.  RADIUS  . . . . . . . . . . . . . . . . . . . . . . .   9\n   3. \
    \ Issues with Initial Trust Fabric  . . . . . . . . . . . . . .  11\n     3.1.\
    \  Server Failure Handling . . . . . . . . . . . . . . . . .  12\n     3.2.  No\
    \ Signaling of Error Conditions  . . . . . . . . . . . .  13\n     3.3.  Routing\
    \ Table Complexity  . . . . . . . . . . . . . . . .  14\n     3.4.  UDP Issues\
    \  . . . . . . . . . . . . . . . . . . . . . . .  15\n     3.5.  Insufficient\
    \ Payload Encryption and EAP Server Validation  16\n   4.  New Trust Fabric  .\
    \ . . . . . . . . . . . . . . . . . . . . .  17\n     4.1.  RADIUS with TLS .\
    \ . . . . . . . . . . . . . . . . . . . .  18\n     4.2.  Dynamic Discovery .\
    \ . . . . . . . . . . . . . . . . . . .  19\n       4.2.1.  Discovery of Responsible\
    \ Server . . . . . . . . . . .  19\n       4.2.2.  Verifying Server Authorization\
    \  . . . . . . . . . . .  20\n       4.2.3.  Operational Experience  . . . . .\
    \ . . . . . . . . . .  21\n       4.2.4.  Possible Alternatives . . . . . . .\
    \ . . . . . . . . .  21\n   5.  Abuse Prevention and Incident Handling  . . .\
    \ . . . . . . . .  22\n     5.1.  Incident Handling . . . . . . . . . . . . .\
    \ . . . . . . .  22\n       5.1.1.  Blocking Users on the SP Side . . . . . .\
    \ . . . . . .  23\n       5.1.2.  Blocking Users on the IdP Side  . . . . . .\
    \ . . . . .  24\n       5.1.3.  Communicating Account Blocking to the End User\
    \  . . .  25\n     5.2.  Operator Name . . . . . . . . . . . . . . . . . . . .\
    \ . .  26\n     5.3.  Chargeable User Identity  . . . . . . . . . . . . . . .\
    \ .  27\n   6.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .\
    \  28\n     6.1.  Collusion of Service Providers  . . . . . . . . . . . . .  28\n\
    \     6.2.  Exposing User Credentials . . . . . . . . . . . . . . . .  28\n  \
    \   6.3.  Track Location of Users . . . . . . . . . . . . . . . . .  28\n   7.\
    \  Security Considerations . . . . . . . . . . . . . . . . . . .  29\n     7.1.\
    \  Man-in-the-Middle and Tunneling Attacks . . . . . . . . .  29\n       7.1.1.\
    \  Verification of Server Name Not Supported . . . . . .  29\n       7.1.2.  Neither\
    \ Specification of CA nor Server Name Checks\n               during Bootstrap\
    \  . . . . . . . . . . . . . . . . . .  29\n       7.1.3.  User Does Not Configure\
    \ CA or Server Name Checks  . .  30\n       7.1.4.  Tunneling Authentication Traffic\
    \ to Obfuscate User\n               Origin  . . . . . . . . . . . . . . . . .\
    \ . . . . . .  30\n     7.2.  Denial-of-Service Attacks . . . . . . . . . . .\
    \ . . . . .  31\n       7.2.1.  Intentional DoS by Malign Individuals . . . .\
    \ . . . .  31\n       7.2.2.  DoS as a Side-Effect of Expired Credentials . .\
    \ . . .  32\n   8.  References  . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  33\n     8.1.  Normative References  . . . . . . . . . . . . . . . . .\
    \ .  33\n     8.2.  Informative References  . . . . . . . . . . . . . . . . .\
    \  34\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  36\n\
    \   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  37\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In 2002, the European Research and Education community set\
    \ out to\n   create a network roaming service for students and employees in\n\
    \   academia [eduroam-start].  Now, over 10 years later, this service has\n  \
    \ grown to more than 10,000 service locations, serving millions of\n   users on\
    \ all continents with the exception of Antarctica.\n   This memo serves to explain\
    \ the considerations for the design of\n   eduroam as well as to document operational\
    \ experience and resulting\n   changes that led to IETF specifications such as\
    \ RADIUS over TCP\n   [RFC6613] and RADIUS with TLS [RFC6614] and that promoted\
    \ alternative\n   uses of RADIUS like in Application Bridging for Federated Access\n\
    \   Beyond web (ABFAB) [ABFAB-ARCH].  Whereas the eduroam service is\n   limited\
    \ to academia, the eduroam architecture can easily be reused in\n   other environments.\n\
    \   First, this memo describes the original architecture of eduroam\n   [eduroam-homepage].\
    \  Then, a number of operational problems are\n   presented that surfaced when\
    \ eduroam gained wide-scale deployment.\n   Lastly, enhancements to the eduroam\
    \ architecture that mitigate the\n   aforementioned issues are discussed.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document uses identity management and privacy terminology\
    \ from\n   [RFC6973].  In particular, this document uses the terms \"Identity\n\
    \   Provider\", \"Service Provider\", and \"identity management\".\n"
- title: 1.2.  Notational Conventions
  contents:
  - "1.2.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n   Note: Also, the policy to which eduroam participants\
    \ subscribe\n   expresses the requirements for participation in RFC 2119 language.\n"
- title: 1.3.  Design Goals
  contents:
  - "1.3.  Design Goals\n   The guiding design considerations for eduroam were as\
    \ follows:\n   -  Unique identification of users at the edge of the network\n\
    \      The access Service Provider (SP) needs to be able to determine\n      whether\
    \ a user is authorized to use the network resources.\n      Furthermore, in case\
    \ of abuse of the resources, there is a\n      requirement to be able to identify\
    \ the user uniquely (with the\n      cooperation of the user's Identity Provider\
    \ (IdP) operator).\n   -  Enable (trusted) guest use\n      In order to enable\
    \ roaming, it should be possible for users of\n      participating institutions\
    \ to get seamless access to the networks\n      of other institutions.\n     \
    \ Note: Traffic separation between guest users and normal users is\n      possible\
    \ (for example, through the use of VLANs), and indeed\n      widely used in eduroam.\n\
    \   -  Scalable\n      The infrastructure that is created should scale to a large\
    \ number\n      of users and organizations without requiring a lot of coordination\n\
    \      and other administrative procedures (possibly with the exception\n    \
    \  of an initial setup).  Specifically, it should not be necessary\n      for\
    \ a user that visits another organization to go through an\n      administrative\
    \ process.\n   -  Easy to install and use\n      It should be easy for both organizations\
    \ and users to participate\n      in the roaming infrastructure; otherwise, it\
    \ may inhibit wide-\n      scale adoption.  In particular, there should be no\
    \ client\n      installation (or it should be easy) and only one-time\n      configuration.\n\
    \   -  Secure\n      An important design criterion has been that there needs to\
    \ be a\n      security association between the end user and their Identity\n \
    \     Provider, eliminating the possibility of credential theft.  The\n      minimal\
    \ requirements for security are specified in the eduroam\n      policy and subject\
    \ to change over time.  As an additional\n      protection against user errors\
    \ and negligence, it should be\n      possible for participating Identity Providers\
    \ to add their own\n      requirements for the quality of authentication of their\
    \ own users\n      without the need for the infrastructure as a whole to implement\n\
    \      the same requirements.\n   -  Privacy preserving\n      The design of the\
    \ system should provide for user anonymization,\n      i.e., a possibility to\
    \ hide the user's identity from any third\n      parties, including Service Providers.\n\
    \   -  Standards based\n      In an infrastructure in which many thousands of\
    \ organizations\n      participate, it is obvious that it should be possible to\
    \ use\n      equipment from different vendors; therefore, it is important to\n\
    \      build the infrastructure using open standards.\n"
- title: 1.4.  Solutions That Were Considered
  contents:
  - "1.4.  Solutions That Were Considered\n   Three architectures were trialed: one\
    \ based on the use of VPN\n   technology (deemed secure but not scalable), one\
    \ based on Web\n   captive-portals (scalable but not secure), and one based on\
    \ IEEE\n   802.1X, the latter being the basis of what is now the eduroam\n   architecture.\
    \  An overview of the candidate architectures and their\n   relative merits can\
    \ be found in [nrenroaming-select].\n   The chosen architecture is based on:\n\
    \   o  IEEE 802.1X [IEEE.802.1X] as the port-based authentication\n      framework\
    \ using\n   o  EAP [RFC3748] for integrity-protected and confidential transport\n\
    \      of credentials and\n   o  a RADIUS [RFC2865] hierarchy as the trust fabric.\n"
- title: 2.  Classic Architecture
  contents:
  - "2.  Classic Architecture\n   Federations, like eduroam, implement essentially\
    \ two types of direct\n   trust relations (and one indirect).  The trust relation\
    \ between an\n   end user and the IdP (operated by the home organization of the\
    \ user)\n   and between the IdP and the SP (in eduroam, the operator of the\n\
    \   network at the visited location).  In eduroam, the trust relation\n   between\
    \ the user and IdP is through mutual authentication.  IdPs and\n   the SP establish\
    \ trust through the use of a RADIUS hierarchy.\n   These two forms of trust relations\
    \ in turn provide the transitive\n   trust relation that makes the SP trust the\
    \ user to use its network\n   resources.\n"
- title: 2.1.  Authentication
  contents:
  - "2.1.  Authentication\n   Authentication in eduroam is achieved by using a combination\
    \ of IEEE\n   802.1X [IEEE.802.1X] and EAP [RFC4372] (the latter carried over\n\
    \   RADIUS for guest access; see Section 2.2).\n"
- title: 2.1.1.  IEEE 802.1X
  contents:
  - "2.1.1.  IEEE 802.1X\n   By using the IEEE 802.1X [IEEE.802.1X] framework for\
    \ port-based\n   network authentication, organizations that offer network access\
    \ (SPs)\n   for visiting (and local) eduroam users can make sure that only\n \
    \  authorized users get access.  The user (or rather the user's\n   supplicant)\
    \ sends an access request to the authenticator (Wi-Fi\n   Access Point or switch)\
    \ at the SP, the authenticator forwards the\n   access request to the authentication\
    \ server of the SP, that in turn\n   proxies the request through the RADIUS hierarchy\
    \ to the\n   authentication server of the user's home organization (the IdP).\n\
    \   Note: The security of the connections between local wireless\n   infrastructure\
    \ and local RADIUS servers is a part of the local\n   network of each SP; therefore,\
    \ it is out of scope for this document.\n   For completeness, it should be stated\
    \ that security between access\n   points and their controllers is vendor specific,\
    \ and security between\n   controllers (or standalone access points) and local\
    \ RADIUS servers is\n   based on the typical RADIUS shared secret mechanism.\n\
    \   In order for users to be aware of the availability of the eduroam\n   service,\
    \ an SP that offers wireless network access MUST broadcast the\n   Service Set\
    \ Identifier (SSID) 'eduroam', unless that conflicts with\n   the SSID of another\
    \ eduroam SP, in which case, an SSID starting with\n   \"eduroam-\" MAY be used.\
    \  The downside of the latter is that clients\n   will not automatically connect\
    \ to that SSID, thus losing the seamless\n   connection experience.\n   Note:\
    \ A direct implication of the common eduroam SSID is that the\n   users cannot\
    \ distinguish between a connection to the home network and\n   a guest network\
    \ at another eduroam institution (IEEE 802.11-2012 does\n   have the so-called\
    \ \"Interworking\" to make that distinction, but it is\n   not widely implemented\
    \ yet).  Furthermore, without proper server\n   verification, users may even be\
    \ tricked into joining a rogue eduroam\n   network.  Therefore, users should be\
    \ made aware that they should not\n   assume data confidentiality in the eduroam\
    \ infrastructure.\n   To protect over-the-air confidentiality of user data, IEEE\
    \ 802.11\n   wireless networks of eduroam SPs MUST deploy WPA2+AES, and they MAY\n\
    \   additionally support Wi-Fi Protected Access with the Temporal Key\n   Integrity\
    \ Protocol (WPA/TKIP) as a courtesy to users of legacy\n   hardware.\n"
- title: 2.1.2.  EAP
  contents:
  - "2.1.2.  EAP\n   The use of the Extensible Authentication Protocol (EAP) [RFC4372]\n\
    \   serves two purposes.  In the first place, a properly chosen EAP\n   method\
    \ allows for integrity-protected and confidential transport of\n   the user credentials\
    \ to the home organization.  Secondly, by having\n   all RADIUS servers transparently\
    \ proxy access requests, regardless of\n   the EAP method inside the RADIUS packet,\
    \ the choice of EAP method is\n   between the 'home' organization of the user\
    \ and the user.  In other\n   words, in principle, every authentication form that\
    \ can be carried\n   inside EAP can be used in eduroam, as long as they adhere\
    \ to minimal\n   requirements as set forth in the eduroam Policy Service Definition\n\
    \   [eduroam-service-definition].\n                               +-----+\n  \
    \                            /       \\\n                             /      \
    \   \\\n                            /           \\\n                         \
    \  /             \\\n          ,----------\\    |               |   ,---------\\\
    \n          |    SP    |    |    eduroam    |   |    IdP  |\n          |     \
    \     +----+  trust fabric +---+         |\n          `------+---'    |      \
    \         |   '-----+---'\n                 |        |               |       \
    \  |\n                 |         \\             /          |\n               \
    \  |          \\           /           |\n                 |           \\    \
    \     /            |\n                 |            \\       /             |\n\
    \            +----+             +-----+              +----+\n            |   \
    \                                         |\n            |                   \
    \                         |\n        +---+--+                                \
    \      +--+---+\n        |      |                                      |     \
    \ |\n      +-+------+-+    ___________________________     |      |\n      | \
    \         |   O__________________________ )    +------+\n      +----------+\n\
    \      Host (supplicant)      EAP tunnel       Authentication server\n       \
    \                   Figure 1: Tunneled EAP\n   Proxying of access requests is\
    \ based on the outer identity in the\n   EAP-Message.  Those outer identities\
    \ MUST be a valid user identifier\n   with a mandatory realm as per [RFC7542],\
    \ i.e., be of the form\n   something@realm or just @realm, where the realm part\
    \ is the domain\n   name of the institution that the IdP belongs to.  In order\
    \ to\n   preserve credential protection, participating organizations MUST\n  \
    \ deploy EAP methods that provide mutual authentication.  For EAP\n   methods\
    \ that support outer identity, anonymous outer identities are\n   recommended.\
    \  Most commonly used in eduroam are the so-called\n   tunneled EAP methods that\
    \ first create a server-authenticated TLS\n   [RFC5246] tunnel through which the\
    \ user credentials are transmitted.\n   As depicted in Figure 1, the use of a\
    \ tunneled EAP method creates a\n   direct logical connection between the supplicant\
    \ and the\n   authentication server, even though the actual traffic flows through\n\
    \   the RADIUS hierarchy.\n"
- title: 2.2.  Federation Trust Fabric
  contents:
  - "2.2.  Federation Trust Fabric\n   The eduroam federation trust fabric is based\
    \ on RADIUS.  RADIUS trust\n   is based on shared secrets between RADIUS peers.\
    \  In eduroam, any\n   RADIUS message originating from a trusted peer is implicitly\
    \ assumed\n   to originate from a member of the roaming consortium.\n   Note:\
    \ See also the security considerations for a discussion on RADIUS\n   security\
    \ that motivated the work on RADIUS with TLS [RFC6614].\n"
- title: 2.2.1.  RADIUS
  contents:
  - "2.2.1.  RADIUS\n   The eduroam trust fabric consists of a proxy hierarchy of\
    \ RADIUS\n   servers (organizational, national, global) that is loosely based\
    \ on\n   the DNS hierarchy.  That is, typically an organizational RADIUS\n   server\
    \ agrees on a shared secret with a national server, and the\n   national server\
    \ in turn agrees on a shared secret with the root\n   server.  Access requests\
    \ are routed through a chain of RADIUS proxies\n   towards the Identity Provider\
    \ of the user, and the access accept (or\n   reject) follows the same path back.\n\
    \   Note: In some circumstances, there are more levels of RADIUS servers\n   (for\
    \ example, regional or continental servers), but that doesn't\n   change the general\
    \ model.  Also, the packet exchange that is\n   described below requires, in reality,\
    \ several round-trips.\n                                  +-------+\n        \
    \                          |       |\n                                  |   .\
    \   |\n                                  |       |\n                         \
    \         +---+---+\n                                    / | \\\n            \
    \      +----------------/  |  \\---------------------+\n                  |  \
    \                 |                        |\n                  |            \
    \       |                        |\n                  |                   |  \
    \                      |\n               +--+---+            +--+--+         \
    \       +----+---+\n               |      |            |     |               \
    \ |        |\n               | .edu |    . . .   | .nl |      . . .     | .ac.uk\
    \ |\n               |      |            |     |                |        |\n  \
    \             +--+---+            +--+--+                +----+---+\n        \
    \        / | \\                 | \\                      |\n               /\
    \  |  \\                |  \\                     |\n              /   |   \\\
    \               |   \\                    |\n       +-----+    |    +-----+  \
    \      |    +------+            |\n       |          |          |        |   \
    \        |            |\n       |          |          |        |           | \
    \           |\n   +---+---+ +----+---+ +----+---+ +--+---+ +-----+----+ +-----+-----+\n\
    \   |       | |        | |        | |      | |          | |           |\n   |utk.edu|\
    \ |utah.edu| |case.edu| |hva.nl| |surfnet.nl| |soton.ac.uk|\n   |       | |  \
    \      | |        | |      | |          | |           |\n   +----+--+ +--------+\
    \ +--------+ +------+ +----+-----+ +-----------+\n        |                  \
    \                      |\n        |                                        |\n\
    \     +--+--+                                  +--+--+\n     |     |         \
    \                         |     |\n   +-+-----+-+                            \
    \    |     |\n   |         |                                +-----+\n   +---------+\n\
    \   user: paul@surfnet.nl             surfnet.nl Authentication server\n     \
    \               Figure 2: eduroam RADIUS Hierarchy\n   Routing of access requests\
    \ to the home IdP is done based on the realm\n   part of the outer identity. \
    \ For example (as in Figure 2), when user\n   paul@surfnet.nl of SURFnet (surfnet.nl)\
    \ tries to gain wireless\n   network access at the University of Tennessee at\
    \ Knoxville (utk.edu)\n   the following happens:\n   o  Paul's supplicant transmits\
    \ an EAP access request to the Access\n      Point (Authenticator) at UTK with\
    \ outer identity of\n      anonymous@surfnet.nl.\n   o  The Access Point forwards\
    \ the EAP message to its Authentication\n      Server (the UTK RADIUS server).\n\
    \   o  The UTK RADIUS server checks the realm to see if it is a local\n      realm;\
    \ since it isn't, the request is proxied to the .edu RADIUS\n      server.\n \
    \  o  The .edu RADIUS server verifies the realm; since it is not in a\n      .edu\
    \ subdomain, it proxies the request to the root server.\n   o  The root RADIUS\
    \ server proxies the request to the .nl RADIUS\n      server, since the \".nl\"\
    \ domain is known to the root server.\n   o  The .nl RADIUS server proxies the\
    \ request to the surfnet.nl\n      server, since it knows the SURFnet server.\n\
    \   o  The surfnet.nl RADIUS server decapsulates the EAP message and\n      verifies\
    \ the user credentials, since the user is known to SURFnet.\n   o  The surfnet.nl\
    \ RADIUS server informs the utk.edu server of the\n      outcome of the authentication\
    \ request (Access-Accept or Access-\n      Reject) by proxying the outcome through\
    \ the RADIUS hierarchy in\n      reverse order.\n   o  The UTK RADIUS server instructs\
    \ the UTK Access Point to either\n      accept or reject access based on the outcome\
    \ of the\n      authentication.\n   Note: The depiction of the root RADIUS server\
    \ is a simplification.\n   In reality, the root server is distributed over three\
    \ continents and\n   each maintains a list of the top-level realms that a specific\
    \ root\n   server is responsible for.  This also means that, for\n   intercontinental\
    \ roaming, there is an extra proxy step from one root\n   server to the other.\
    \  Also, the physical distribution of nodes\n   doesn't need to mirror the logical\
    \ distribution of nodes.  This helps\n   with stability and scalability.\n"
- title: 3.  Issues with Initial Trust Fabric
  contents:
  - "3.  Issues with Initial Trust Fabric\n   While the hierarchical RADIUS architecture\
    \ described in the previous\n   section has served as the basis for eduroam operations\
    \ for an entire\n   decade, the exponential growth of authentications is expected\
    \ to lead\n   to, and has in fact in some cases already led to, performance and\n\
    \   operations bottlenecks on the aggregation proxies.  The following\n   sections\
    \ describe some of the shortcomings and the resulting\n   remedies.\n"
- title: 3.1.  Server Failure Handling
  contents:
  - "3.1.  Server Failure Handling\n   In eduroam, authentication requests for roaming\
    \ users are statically\n   routed through preconfigured proxies.  The number of\
    \ proxies varies:\n   in a national roaming case, the number of proxies is typically\
    \ 1 or 2\n   (some countries deploy regional proxies, which are in turn aggregated\n\
    \   by a national proxy); in international roaming, 3 or 4 proxy servers\n   are\
    \ typically involved (the number may be higher along some routes).\n   RFC 2865\
    \ [RFC2865] does not define a failover algorithm.  In\n   particular, the failure\
    \ of a server needs to be deduced from the\n   absence of a reply.  Operational\
    \ experience has shown that this has\n   detrimental effects on the infrastructure\
    \ and end-user experience:\n   1.  Authentication failure: the first user whose\
    \ authentication path\n       is along a newly failed server will experience a\
    \ long delay and\n       possibly timeout\n   2.  Wrongly deduced states: since\
    \ the proxy chain is longer than one\n       hop, a failure further along in the\
    \ authentication path is\n       indistinguishable from a failure in the next\
    \ hop.\n   3.  Inability to determine recovery of a server: only a \"live\"\n\
    \       authentication request sent to a server that is believed to be\n     \
    \  inoperable can lead to the discovery that the server is in\n       working\
    \ order again.  This issue has been resolved with RFC 5997\n       [RFC5997].\n\
    \   The second point can have significant impact on the operational state\n  \
    \ of the system in a worst-case scenario: imagine one realm's home\n   server\
    \ being inoperable.  A user from that realm is trying to roam\n   internationally\
    \ and tries to authenticate.  The RADIUS server on the\n   hotspot location may\
    \ assume its own national proxy is down because it\n   does not reply.  That national\
    \ server, being perfectly alive, in turn\n   will assume that the international\
    \ aggregation proxy is down, which\n   in turn will believe the home country proxy\
    \ national server is down.\n   None of these assumptions are true.  Worse yet:\
    \ in case of failover\n   to a back-up next-hop RADIUS server, also that server\
    \ will be marked\n   as being defunct, since through that server no reply will\
    \ be received\n   from the defunct home server either.  Within a short time, all\n\
    \   redundant aggregation proxies might be considered defunct by their\n   preceding\
    \ hop.\n   In the absence of proper next-hop state derivation, some interesting\n\
    \   concepts have been introduced by eduroam participants -- the most\n   noteworthy\
    \ being a failover logic that considers up/down states not\n   per next-hop RADIUS\
    \ peer, but instead per realm (See [dead-realm] for\n   details).  Recently, implementations\
    \ of RFC 5997 [RFC5997] and\n   cautious failover parameters make false \"downs\"\
    \ unlikely to happen,\n   as long as every hop implements RFC 5997.  In that case,\
    \ dead realm\n   detection serves mainly to prevent proxying of large numbers\
    \ of\n   requests to known dead realms.\n"
- title: 3.2.  No Signaling of Error Conditions
  contents:
  - "3.2.  No Signaling of Error Conditions\n   The RADIUS protocol lacks signaling\
    \ of error conditions, and the IEEE\n   802.1X standard does not allow conveying\
    \ of extended failure reasons\n   to the end user's device.  For eduroam, this\
    \ creates two issues:\n   o  The home server may have an operational problem,\
    \ for example, its\n      authentication decisions may depend on an external data\
    \ source\n      such as a SQL server or Microsoft's Active Directory, and the\n\
    \      external data source is unavailable.  If the RADIUS interface is\n    \
    \  still functional, there are two options for how to reply to an\n      Access-Request\
    \ that can't be serviced due to such error\n      conditions:\n      1.  Do Not\
    \ Reply: The inability to reach a conclusion can be\n          handled by not\
    \ replying to the request.  The upside of this\n          approach is that the\
    \ end user's software doesn't come to wrong\n          conclusions and won't give\
    \ unhelpful hints such as \"maybe your\n          password is wrong\".  The downside\
    \ is that intermediate proxies\n          may come to wrong conclusions because\
    \ their downstream RADIUS\n          server isn't responding.\n      2.  Reply\
    \ with Reject: In this option, the inability to reach a\n          conclusion\
    \ is treated like an authentication failure.  The\n          upside of this approach\
    \ is that intermediate proxies maintain\n          a correct view on the reachability\
    \ state of their RADIUS peer.\n          The downside is that EAP supplicants\
    \ on end-user devices often\n          react with either false advice (\"your\
    \ password is wrong\") or\n          even trigger permanent configuration changes\
    \ (e.g., the\n          Windows built-in supplicant will delete the credential\
    \ set\n          from its registry, prompting the user for their password on\n\
    \          the next connection attempt).  The latter case of Windows is a\n  \
    \        source of significant help-desk activity; users may have\n          forgotten\
    \ their password after initially storing it but are\n          suddenly prompted\
    \ again.\n   There have been epic discussions in the eduroam community as well\
    \ as\n   in the IETF RADEXT Working Group as to which of the two approaches is\n\
    \   more appropriate, but they were not conclusive.\n   Similar considerations\
    \ apply when an intermediate proxy does not\n   receive a reply from a downstream\
    \ RADIUS server.  The proxy may\n   either choose not to reply to the original\
    \ request, leading to\n   retries and its upstream peers coming to wrong conclusions\
    \ about its\n   own availability; or, it may decide to reply with Access-Reject\
    \ to\n   indicate its own liveliness, but again with implications for the end\n\
    \   user.\n   The ability to send Status-Server watchdog requests is only of use\n\
    \   after the fact, in case a downstream server doesn't reply (or hasn't\n   been\
    \ contacted in a long while, so that its previous working state is\n   stale).\
    \  The active link-state monitoring of the TCP connection with,\n   e.g., RADIUS/TLS\
    \ (see Section 4.1), gives a clearer indication\n   whether there is an alive\
    \ RADIUS peer, but it does not solve the\n   defunct back-end problem.  An explicit\
    \ ability to send Error-Replies,\n   on the RADIUS level (for other RADIUS peer\
    \ information) and EAP level\n   (for end-user supplicant information), would\
    \ alleviate these problems\n   but is currently not available.\n"
- title: 3.3.  Routing Table Complexity
  contents:
  - "3.3.  Routing Table Complexity\n   The aggregation of RADIUS requests based on\
    \ the structure of the\n   user's realm implies that realms ending with the same\
    \ top-level\n   domain are routed to the same server, i.e., to a common\n   administrative\
    \ domain.  While this is true for country code Top-Level\n   Domains (ccTLDs),\
    \ which map into national eduroam federations, it is\n   not true for realms residing\
    \ in generic Top-Level Domains (gTLDs).\n   Realms in gTLDs were historically\
    \ discouraged because the automatic\n   mapping \"realm ending\" -> \"eduroam\
    \ federation's server\" could not be\n   applied.  However, with growing demand\
    \ from eduroam realm\n   administrators, it became necessary to create exception\
    \ entries in\n   the forwarding rules; such realms need to be mapped on a realm-by-\n\
    \   realm basis to their eduroam federations.  Example: \"kit.edu\"\n   (Karlsruher\
    \ Institut fuer Technologie) needs to be routed to the\n   German federation server,\
    \ whereas \"iu.edu\" (Indiana University) needs\n   to be routed to the USA federation\
    \ server.\n   While the ccTLDs occupy only approximately 50 routing entries in\n\
    \   total (and have an upper bound of approximately 200), the potential\n   size\
    \ of the routing table becomes virtually unlimited if it needs to\n   accommodate\
    \ all individual entries in .edu, .org, etc.\n   In addition to that, all these\
    \ routes need to be synchronized between\n   three international root servers,\
    \ and the updates need to be applied\n   manually to RADIUS server configuration\
    \ files.  The frequency of the\n   required updates makes this approach fragile\
    \ and error-prone as the\n   number of entries grows.\n"
- title: 3.4.  UDP Issues
  contents:
  - "3.4.  UDP Issues\n   RADIUS is based on UDP, which was a reasonable choice when\
    \ its main\n   use was with simple Password Authentication Protocol (PAP) requests\n\
    \   that required only exactly one packet exchange in each direction.\n   When\
    \ transporting EAP over RADIUS, the EAP conversations require\n   multiple round-trips;\
    \ depending on the total payload size, 8-10\n   round-trips are not uncommon.\
    \  The loss of a single UDP packet will\n   lead to user-visible delays and might\
    \ result in servers being marked\n   as dead due to the absence of a reply.  The\
    \ proxy path in eduroam\n   consists of several proxies, all of which introduce\
    \ a very small\n   packet loss probability; that is, the more proxies needed,\
    \ the higher\n   the failure rate is going to be.\n   For some EAP types, depending\
    \ on the exact payload size they carry,\n   RADIUS servers and/or supplicants\
    \ may choose to put as much EAP data\n   into a single RADIUS packet as the supplicant's\
    \ Layer 2 medium allows\n   -- typically 1500 bytes.  In that case, the RADIUS\
    \ encapsulation\n   around the EAP-Message will add more bytes to the overall\
    \ RADIUS\n   payload size and in the end exceed the 1500-byte limit, leading to\n\
    \   fragmentation of the UDP datagram on the IP layer.  While in theory\n   this\
    \ is not a problem, in practice there is evidence of misbehaving\n   firewalls\
    \ that erroneously discard non-first UDP fragments; this\n   ultimately leads\
    \ to a denial of service for users with such EAP types\n   and that specific configuration.\n\
    \   One EAP type proved to be particularly problematic: EAP-TLS.  While\n   it\
    \ is possible to configure the EAP server to send smaller chunks of\n   EAP payload\
    \ to the supplicant (e.g., 1200 bytes, to allow for another\n   300 bytes of RADIUS\
    \ overhead without fragmentation), very often the\n   supplicants that send the\
    \ client certificate do not expose such a\n   configuration detail to the user.\
    \  Consequently, when the client\n   certificate is over 1500 bytes in size, the\
    \ EAP-Message will always\n   make use of the maximum possible Layer 2 chunk size,\
    \ and this\n   introduces fragmentation on the path from EAP peer to EAP server.\n\
    \   Both of the previously mentioned sources of errors (packet loss and\n   fragment\
    \ discard) lead to significant frustration for the affected\n   users.  Operational\
    \ experience of eduroam shows that such cases are\n   hard to debug since they\
    \ require coordinated cooperation of all\n   eduroam administrators on the authentication\
    \ path.  For that reason,\n   the eduroam community is developing monitoring tools\
    \ that help to\n   locate fragmentation problems.\n   Note: For more detailed\
    \ discussion of these issues, please refer to\n   Section 1.1 of [RFC6613].\n"
- title: 3.5.  Insufficient Payload Encryption and EAP Server Validation
  contents:
  - "3.5.  Insufficient Payload Encryption and EAP Server Validation\n   The RADIUS\
    \ protocol's design foresaw only the encryption of select\n   RADIUS attributes,\
    \ most notably User-Password.  With EAP methods\n   conforming to the requirements\
    \ of [RFC4017], the user's credential is\n   not transmitted using the User-Password\
    \ attribute, and stronger\n   encryption than the one for RADIUS User-Password\
    \ is in use (typically\n   TLS).\n   Still, the use of EAP does not encrypt all\
    \ personally identifiable\n   details of the user session, as some are carried\
    \ inside cleartext\n   RADIUS attributes.  In particular, the user's device can\
    \ be\n   identified by inspecting the Calling-Station-ID attribute; and the\n\
    \   user's location may be derived from observing NAS-IP-Address, NAS-\n   Identifier,\
    \ or Operator-Name attributes.  Since these attributes are\n   not encrypted,\
    \ even IP-layer third parties can harvest the\n   corresponding data.  In a worst-case\
    \ scenario, this enables the\n   creation of mobility profiles.  Pervasive passive\
    \ surveillance using\n   this connection metadata such as the recently uncovered\
    \ incidents in\n   the US National Security Agency (NSA) and the UK Government\n\
    \   Communications Headquarters (GCHQ) becomes possible by tapping RADIUS\n  \
    \ traffic from an IP hop near a RADIUS aggregation proxy.  While this\n   is possible,\
    \ the authors are not aware whether this has actually been\n   done.\n   These\
    \ profiles are not necessarily linkable to an actual user because\n   EAP allows\
    \ for the use of anonymous outer identities and protected\n   credential exchanges.\
    \  However, practical experience has shown that\n   many users neglect to configure\
    \ their supplicants in a privacy-\n   preserving way or their supplicants don't\
    \ support that.  In\n   particular, for EAP-TLS users, the use of EAP-TLS identity\
    \ protection\n   is not usually implemented and cannot be used.  In eduroam, concerned\n\
    \   individuals and IdPs that use EAP-TLS are using pseudonymous client\n   certificates\
    \ to provide for better privacy.\n   One way out, at least for EAP types involving\
    \ a username, is to\n   pursue the creation and deployment of preconfigured supplicant\n\
    \   configurations that make all the required settings in user devices\n   prior\
    \ to their first connection attempt; this depends heavily on the\n   remote configuration\
    \ possibilities of the supplicants though.\n   A further threat involves the verification\
    \ of the EAP server's\n   identity.  Even though the cryptographic foundation,\
    \ TLS tunnels, is\n   sound, there is a weakness in the supplicant configuration:\
    \ many\n   users do not understand or are not willing to invest time into the\n\
    \   inspection of server certificates or the installation of a trusted\n   certification\
    \ authority (CA).  As a result, users may easily be\n   tricked into connecting\
    \ to an unauthorized EAP server, ultimately\n   leading to a leak of their credentials\
    \ to that unauthorized third\n   party.\n   Again, one way out of this particular\
    \ threat is to pursue the\n   creation and deployment of preconfigured supplicant\
    \ configurations\n   that make all the required settings in user devices prior\
    \ to their\n   first connection attempt.\n   Note: There are many different and\
    \ vendor-proprietary ways to\n   preconfigure a device with the necessary EAP\
    \ parameters (examples\n   include Apple, Inc.'s \"mobileconfig\" and Microsoft's\
    \ \"EAPHost\" XML\n   schema).  Some manufacturers even completely lack any means\
    \ to\n   distribute EAP configuration data.  We believe there is value in\n  \
    \ defining a common EAP configuration metadata format that could be\n   used across\
    \ manufacturers, ideally leading to a situation where IEEE\n   802.1X network\
    \ end users merely need to apply this configuration file\n   to configure any\
    \ of their devices securely with the required\n   connection properties.\n   Another\
    \ possible privacy threat involves transport of user-specific\n   attributes in\
    \ a Reply-Message.  If, for example, a RADIUS server\n   sends back a hypothetical\
    \ RADIUS Vendor-Specific-Attribute \"User-Role\n   = Student of Computer Science\"\
    \ (e.g., for consumption of an SP RADIUS\n   server and subsequent assignment\
    \ into a \"student\" VLAN), this\n   information would also be visible for third\
    \ parties and could be\n   added to the mobility profile.\n   The only way to\
    \ mitigate all information leakage to third parties is\n   by protecting the entire\
    \ RADIUS packet payload so that IP-layer third\n   parties cannot extract privacy-relevant\
    \ information.  RADIUS as\n   specified in RFC 2865 does not offer this possibility\
    \ though.  This\n   motivated [RFC6614]; see Section 4.1.\n"
- title: 4.  New Trust Fabric
  contents:
  - "4.  New Trust Fabric\n   The operational difficulties with an ever-increasing\
    \ number of\n   participants (as documented in the previous section) have led\
    \ to a\n   number of changes to the eduroam architecture that in turn have led\n\
    \   to IETF specifications (as mentioned in the introduction).\n   Note: The enhanced\
    \ architecture components are fully backwards\n   compatible with the existing\
    \ installed base and are, in fact,\n   gradually replacing those parts of it where\
    \ problems may arise.\n   Whereas the user authentication using IEEE 802.1X and\
    \ EAP has\n   remained unchanged (i.e., no need for end users to change any\n\
    \   configurations), the issues as reported in Section 3 have resulted in\n  \
    \ a major overhaul of the way EAP messages are transported from the\n   RADIUS\
    \ server of the SP to that of the IdP and back.  The two\n   fundamental changes\
    \ are the use of TCP instead of UDP and reliance on\n   TLS instead of shared\
    \ secrets between RADIUS peers, as outlined in\n   [radsec-whitepaper].\n"
- title: 4.1.  RADIUS with TLS
  contents:
  - "4.1.  RADIUS with TLS\n   The deficiencies of RADIUS over UDP as described in\
    \ Section 3.4\n   warranted a search for a replacement of RFC 2865 [RFC2865] for\
    \ the\n   transport of EAP.  By the time this need was understood, the\n   designated\
    \ successor protocol to RADIUS, Diameter, was already\n   specified by the IETF\
    \ in its intial version [RFC3588].  However,\n   within the operational constraints\
    \ of eduroam (listed below), no\n   single combination of software could be found\
    \ (and that is believed\n   to still be true, more than ten years and one revision\
    \ of Diameter\n   [RFC6733] later).  The constraints are:\n   o  reasonably cheap\
    \ to deploy on many administrative domains\n   o  supporting the application of\
    \ Network Access Server Requirements\n      (NASREQ)\n   o  supporting EAP application\n\
    \   o  supporting Diameter Redirect\n   o  supporting validation of authentication\
    \ requests of the most\n      popular EAP types (EAP Tunneled Transport Layer\
    \ Security\n      (EAP-TTLS), Protected EAP (PEAP), and EAP-TLS)\n   o  possibility\
    \ to retrieve these credentials from popular back-ends\n      such as MySQL or\
    \ Microsoft's Active Directory.\n   In addition, no Wi-Fi Access Points at the\
    \ disposal of eduroam\n   participants supported Diameter, nor did any of the\
    \ manufacturers\n   have a roadmap towards Diameter support (and that is believed\
    \ to\n   still be true, more than 10 years later).  This led to the open\n   question\
    \ of lossless translation from RADIUS to Diameter and vice\n   versa -- a question\
    \ not satisfactorily answered by NASREQ.\n   After monitoring the Diameter implementation\
    \ landscape for a while,\n   it became clear that a solution with better compatibility\
    \ and a\n   plausible upgrade path from the existing RADIUS hierarchy was needed.\n\
    \   The eduroam community actively engaged in the IETF towards the\n   specification\
    \ of several enhancements to RADIUS to overcome the\n   limitations mentioned\
    \ in Section 3.  The outcome of this process was\n   [RFC6614] and [DYN-DISC].\n\
    \   With its use of TCP instead of UDP, and with its full packet\n   encryption,\
    \ while maintaining full packet format compatibility with\n   RADIUS/UDP, RADIUS/TLS\
    \ [RFC6614] allows any given RADIUS link in\n   eduroam to be upgraded without\
    \ the need of a \"flag day\".\n   In a first upgrade phase, the classic eduroam\
    \ hierarchy (forwarding\n   decision made by inspecting the realm) remains intact.\
    \  That way,\n   RADIUS/TLS merely enhances the underlying transport of the RADIUS\n\
    \   datagrams.  But, this already provides some key advantages:\n   o  explicit\
    \ peer reachability detection using long-lived TCP sessions\n   o  protection\
    \ of user credentials and all privacy-relevant RADIUS\n      attributes\n   RADIUS/TLS\
    \ connections for the static hierarchy could be realized\n   with the TLS-PSK\
    \ [RFC4279] operation mode (which effectively provides\n   a 1:1 replacement for\
    \ RADIUS/UDP's \"shared secrets\"), but since this\n   operation mode is not widely\
    \ supported as of yet, all RADIUS/TLS\n   links in eduroam are secured by TLS\
    \ with X.509 certificates from a\n   set of accredited CAs.\n   This first deployment\
    \ phase does not yet solve the routing table\n   complexity problem (see Section\
    \ 3.3); this aspect is covered by\n   introducing dynamic discovery for RADIUS/TLS\
    \ servers.\n"
- title: 4.2.  Dynamic Discovery
  contents:
  - "4.2.  Dynamic Discovery\n   When introducing peer discovery, two separate issues\
    \ had to be\n   addressed:\n   1.  how to find the network address of a responsible\
    \ RADIUS server\n       for a given realm\n   2.  how to verify that this realm\
    \ is an authorized eduroam\n       participant\n"
- title: 4.2.1.  Discovery of Responsible Server
  contents:
  - "4.2.1.  Discovery of Responsible Server\n   Issue 1 can relatively simply be\
    \ addressed by putting eduroam-\n   specific service discovery information into\
    \ the global DNS tree.  In\n   eduroam, this is done by using NAPTR records as\
    \ per the S-NAPTR\n   specification [RFC3958] with a private-use NAPTR service\
    \ tag\n   (\"x-eduroam:radius.tls\").  The usage profile of that NAPTR resource\n\
    \   record is that exclusively \"S\" type delegations are allowed and that\n \
    \  no regular expressions are allowed.\n   A subsequent lookup of the resulting\
    \ SRV records will eventually\n   yield hostnames and IP addresses of the authoritative\
    \ server(s) of a\n   given realm.\n   Example (wrapped for readability):\n   >\
    \ dig -t naptr education.example.\n   ;; ANSWER SECTION:\n   education.example.\
    \            43200   IN      NAPTR   100 10 \"s\"\n                          \
    \           \"x-eduroam:radius.tls\" \"\"\n                                  \
    \   _radsec._tcp.eduroam.example.\n   > dig -t srv _radsec._tcp.eduroam.example.\n\
    \   ;; ANSWER SECTION:\n   _radsec._tcp.eduroam.example. 43200  IN      SRV  \
    \   0 0 2083\n                                                tld1.eduroam.example.\n\
    \   > dig -t aaaa tld1.eduroam.example.\n   ;; ANSWER SECTION:\n   tld1.eduroam.example.\
    \         21751  IN      AAAA    2001:db8:1::2\n                        Figure\
    \ 3: SRV Record Lookup\n   From the operational experience with this mode of operation,\
    \ eduroam\n   is pursuing standardization of this approach for generic AAA use\n\
    \   cases.  The current RADEXT working group document for this is\n   [DYN-DISC].\n\
    \   Note: It is worth mentioning that this move to a more complex,\n   flexible\
    \ system may make the system as a whole more fragile, as\n   compared to the static\
    \ set up.\n"
- title: 4.2.2.  Verifying Server Authorization
  contents:
  - "4.2.2.  Verifying Server Authorization\n   Any organization can put \"x-eduroam\"\
    \ NAPTR entries into their Domain\n   Name Server, pretending to be the eduroam\
    \ Identity Provider for the\n   corresponding realm.  Since eduroam is a service\
    \ for a heterogeneous,\n   but closed, user group, additional sources of information\
    \ need to be\n   consulted to verify that a realm with its discovered server is\n\
    \   actually an eduroam participant.\n   The eduroam consortium has chosen to\
    \ deploy a separate PKI that\n   issues certificates only to authorized eduroam\
    \ Identity Providers and\n   eduroam Service Providers.  Since certificates are\
    \ needed for RADIUS/\n   TLS anyway, it was a straightforward solution to reuse\
    \ the PKI for\n   that.  The PKI fabric allows multiple CAs as trust roots (overseen\
    \ by\n   a Policy Management Authority) and requires that certificates that\n\
    \   were issued to verified eduroam participants are marked with\n   corresponding\
    \ \"X509v3 Policy OID\" fields; eduroam RADIUS servers and\n   clients need to\
    \ verify the existence of these OIDs in the incoming\n   certificates.\n   The\
    \ policies and OIDs can be retrieved from the \"eduPKI Trust Profile\n   for eduroam\
    \ Certificates\" [eduPKI].\n"
- title: 4.2.3.  Operational Experience
  contents:
  - "4.2.3.  Operational Experience\n   The discovery model is currently deployed\
    \ in approximately 10\n   countries that participate in eduroam, making more than\
    \ 100 realms\n   discoverable via their NAPTR records.  Experience has shown that\
    \ the\n   model works and scales as expected, the only drawback being that the\n\
    \   additional burden of operating a PKI that is not local to the\n   national\
    \ eduroam administrators creates significant administrative\n   complexities.\
    \  Also, the presence of multiple CAs and regular updates\n   of Certificate Revocation\
    \ Lists makes the operation of RADIUS servers\n   more complex.\n"
- title: 4.2.4.  Possible Alternatives
  contents:
  - "4.2.4.  Possible Alternatives\n   There are two alternatives to this approach\
    \ to dynamic server\n   discovery that are monitored by the eduroam community:\n\
    \   1.  DNSSEC + DNS-Based Authentication of Named Entities (DANE) TLSA\n    \
    \   records\n   2.  ABFAB Trust Router\n   For DNSSEC+DANE TLSA, the biggest advantage\
    \ is that the certificate\n   data itself can be stored in the DNS -- possibly\
    \ obsoleting the PKI\n   infrastructure *if* a new place for the server authorization\
    \ checks\n   can be found.  Its most significant downside is that the DANE\n \
    \  specifications only include client-to-server certificate checks,\n   while\
    \ RADIUS/TLS requires also server-to-client verification.\n   For the ABFAB Trust\
    \ Router, the biggest advantage is that it would\n   work without certificates\
    \ altogether (by negotiating TLS-PSK keys ad\n   hoc).  The downside is that it\
    \ is currently not formally specified\n   and not as thoroughly understood as\
    \ any of the other solutions.\n"
- title: 5.  Abuse Prevention and Incident Handling
  contents:
  - "5.  Abuse Prevention and Incident Handling\n   Since the eduroam service is a\
    \ confederation of autonomous networks,\n   there is little justification for\
    \ transferring accounting information\n   from the Service Provider to any other\
    \ (in general) or to the\n   Identity Provider of the user (in particular).  Accounting\
    \ in eduroam\n   is therefore considered to be a local matter of the Service Provider.\n\
    \   The eduroam compliance statement [eduroam-compliance] in fact\n   specifies\
    \ that accounting traffic [RFC5280] SHOULD NOT be forwarded.\n   The static routing\
    \ infrastructure of eduroam acts as a filtering\n   system blocking accounting\
    \ traffic from misconfigured local RADIUS\n   servers.  Proxy servers are configured\
    \ to terminate accounting\n   request traffic by answering to Accounting-Requests\
    \ with an\n   Accounting-Response in order to prevent the retransmission of\n\
    \   orphaned Accounting-Request messages.  With dynamic discovery,\n   Identity\
    \ Providers that are discoverable via DNS will need to apply\n   these filtering\
    \ measures themselves.  This is an increase in\n   complexity of the Identity\
    \ Provider RADIUS configuration.\n   Roaming creates accountability problems,\
    \ as identified by [RFC4372]\n   (Chargeable User Identity).  Since the NAS can\
    \ only see the (likely\n   anonymous) outer identity of the user, it is impossible\
    \ to correlate\n   usage with a specific user (who may use multiple devices).\
    \  A NAS\n   that supports [RFC4372] can request the Chargeable-User-Identity\
    \ and,\n   if supplied by the authenticating RADIUS server in the Access-Accept\n\
    \   message, add this value to corresponding Access-Request packets.\n   While\
    \ eduroam does not have any charging mechanisms, it may still be\n   desirable\
    \ to identify traffic originating from one particular user.\n   One of the reasons\
    \ is to prevent abuse of guest access by users\n   living near university campuses.\
    \  Chargeable User Identity (see\n   Section 5.3) supplies the perfect answer\
    \ to this problem; however, at\n   the time of writing, to our knowledge, only\
    \ one hardware vendor (Meru\n   Networks) implements RFC 4372 on their access\
    \ points.  For all other\n   vendors, requesting the Chargeable-User-Identity\
    \ attribute needs to\n   happen on the RADIUS server to which the access point\
    \ is connected\n   to.  FreeRADIUS supports this ability in the latest distribution,\
    \ and\n   Radiator can be retrofitted to do the same.\n"
- title: 5.1.  Incident Handling
  contents:
  - "5.1.  Incident Handling\n   10 years of experience with eduroam have not exposed\
    \ any serious\n   incident.  This may be taken as evidence for proper security\
    \ design\n   as well as suggest that users' awareness that they are identifiable\n\
    \   acts as an effective deterrent.  It could of course also mean that\n   eduroam\
    \ operations lack the proper tools or insight into the actual\n   use and potential\
    \ abuse of the service.  In any case, many of the\n   attack vectors that exist\
    \ in open networks or networks where access\n   control is based on shared secrets\
    \ are not present, arguably leading\n   to a much more secure system.\n   Below\
    \ is a discussion of countermeasures that are taken in eduroam.\n   The European\
    \ eduroam Policy Service Definition\n   [eduroam-service-definition], as an example,\
    \ describes incident\n   scenarios and actions to be taken; in this document,\
    \ we present the\n   relevant technical issues.\n   The initial implementation\
    \ has been lacking reliable tools for an SP\n   to make its own decision or for\
    \ an IdP to introduce a conditional\n   rule applying only to a given SP.  The\
    \ introduction of support for\n   Operator-Name and Chargeable-User-Identity (see\
    \ Section 5.3) to\n   eduroam makes both of these scenarios possible.\n"
- title: 5.1.1.  Blocking Users on the SP Side
  contents:
  - "5.1.1.  Blocking Users on the SP Side\n   The first action in the case of an\
    \ incident is to block the user's\n   access to eduroam at the Service Provider.\
    \  Since the roaming user's\n   true identity is likely hidden behind an anonymous/fake\
    \ outer\n   identity, the Service Provider can only rely on the realm of the user\n\
    \   and his MAC address; if the Identity Provider has already sent a\n   Chargeable-User-Identity\
    \ (see Section 5.3 for details), then this\n   extra information can be used to\
    \ identify the user more reliably.\n   A first attempt at the SP side may be to\
    \ block based on the MAC\n   address or outer identity.  This blocking can be\
    \ executed before the\n   EAP authentication occurs -- typically in the first\
    \ datagram, acting\n   on the RADIUS attributes EAP-Message/EAP-Response/Identity\
    \ and\n   Calling-Station-ID.  The datagram can either be dropped (supplicant\n\
    \   notices a time-out) or replied to with a RADIUS Access-Reject\n   containing\
    \ an EAP-Failure.  Since malicious users can change both\n   their MAC addresses\
    \ and the local part of their outer identity\n   between connection attempts,\
    \ this first attempt is not sufficient to\n   lock out a determined user.\n  \
    \ As a second measure, the SP can let the EAP authentication proceed as\n   normal,\
    \ and verify whether the final Access-Accept response from the\n   RADIUS server\
    \ contains a Chargeable-User-Identity (CUI).  If so, the\n   SP RADIUS server\
    \ can be configured to turn all future Access-Accepts\n   for this CUI into an\
    \ Access-Reject/EAP-Failure.  This measure is\n   effective and efficient: it\
    \ locks out exactly the one user that is\n   supposed to be locked out, and it\
    \ has no side-effects on other users,\n   even from the same realm.\n   If the\
    \ EAP authentication does not reveal a CUI, the SP cannot\n   reliably determine\
    \ the user in question.  The only reliable\n   information to act upon is then\
    \ the realm portion of the outer\n   identity of the user.  The SP will need to\
    \ resort to blocking the\n   entire realm that the offending user belongs to.\
    \  This is effective,\n   but not efficient: it locks out the user in question,\
    \ but has a DoS\n   side-effect on all other visiting users from the same realm.\n\
    \   In the absence of a CUI handle, SPs that are not willing to take the\n   drastic\
    \ step of blocking an entire realm will be forced to contact\n   the Identity\
    \ Provider in question and demand that the user be blocked\n   at the IdP side.\
    \  This involves human interaction between SP and IdP\n   and is not possible\
    \ in real-time.\n"
- title: 5.1.2.  Blocking Users on the IdP Side
  contents:
  - "5.1.2.  Blocking Users on the IdP Side\n   The IdP has the power to disable a\
    \ user account altogether, thus\n   blocking this user from accessing eduroam\
    \ in all sites.  If blocking\n   the user is done due a request of an SP (as per\
    \ the previous\n   section), there may be a more fine-grained possibility to block\n\
    \   access to a specific SP -- if the SP in question sends the Operator-\n   Name\
    \ attribute along with his Access-Requests (see Section 5.2 for\n   details).\n\
    \   If the IdP decides to block the user globally, this is typically done\n  \
    \ by treating the login attempt as if the credentials were wrong: the\n   entire\
    \ EAP conversation needs to be executed to the point where the\n   true inner\
    \ identity is revealed (before that, the IdP does not know\n   yet which user\
    \ is attempting to authenticate).  This typically\n   coincides with the point\
    \ in time where credentials are exchanged.\n   Instead of, or in addition to,\
    \ checking the credential for validity,\n   the Identity Provider also checks\
    \ whether the user's account is\n   (still) eligible for eduroam use and will\
    \ return an Access-Reject/\n   EAP-Failure if not.\n   There may well be cases\
    \ where opinions between the SP desiring a user\n   lockout and the IdP of the\
    \ user differ.  For example, an SP might\n   consider massive amounts of up-/downloads\
    \ with file sharing protocols\n   unacceptable as per local policy, and desire\
    \ blocking of users that\n   create too much traffic -- but the IdP does not take\
    \ offense on such\n   actions and would not want to lock his user out of eduroam\
    \ globally\n   because of this one SP's opinion.\n   In the absence of the Operator-Name\
    \ attribute, there is no way to\n   apply a login restriction only for a given\
    \ SP and not eduroam as a\n   whole; eduroam eligibility is an all-or-nothing\
    \ decision for the IdP.\n   If the Operator-Name attribute is present, the IdP\
    \ can use this\n   information to fail the authentication attempt only if the\
    \ attempt\n   originated from SPs that desire such blocking.  Even though the\n\
    \   Operator-Name attribute is available from the first RADIUS Access-\n   Request\
    \ datagram onwards, the EAP authentication needs to be carried\n   out until the\
    \ true inner identity is known just as in the global\n   blocking case above.\
    \  The Operator-Name is simply an additional piece\n   of information that the\
    \ IdP can use to make its decision.\n"
- title: 5.1.3.  Communicating Account Blocking to the End User
  contents:
  - "5.1.3.  Communicating Account Blocking to the End User\n   The measures described\
    \ in Sections 5.1.1 and 5.1.2 alter the EAP\n   conversation.  They either create\
    \ a premature rejection or timeout at\n   the start of the conversation or change\
    \ the outcome of the\n   authentication attempt at the very end of the conversation.\n\
    \   On the supplicant side, these alterations are indistinguishable from\n   an\
    \ infrastructure failure: a premature rejection or timeout could be\n   due to\
    \ a RADIUS server being unresponsive, and a rejection at the end\n   of the conversation\
    \ could be either user error (wrong password) or\n   server error (credential\
    \ lookup failed).  For the supplicant, it is\n   thus difficult to communicate\
    \ a meaningful error to the user.  The\n   newly specified EAP type TEAP, Tunnel\
    \ Extensible Authentication\n   Protocol [RFC7170], has a means to transport fine-grained\
    \ error\n   reason codes to the supplicant; this has the potential to improve\
    \ the\n   situation in the future.\n   The EAP protocol foresees one mechanism\
    \ to provide such user-\n   interactive communication: the EAP state machine contains\
    \ states that\n   allow user-visible communication.  An extra round of EAP-Request/\n\
    \   Notification and the corresponding acknowledgement can be injected\n   before\
    \ the final EAP-Failure.\n   However, anecdotal evidence suggests that supplicants\
    \ typically do\n   not implement this part of the EAP state machine at all.  One\n\
    \   supplicant is reported to support it, but only logs the contents of\n   the\
    \ notification in a log file -- which is not at all helpful for the\n   end user.\n\
    \   The discovery of reasons and scope of account blocking are thus left\n   as\
    \ an out-of-band action.  The eduroam user support process requires\n   that users\
    \ with authentication problems contact their Identity\n   Provider as a first\
    \ measure (via unspecified means, e.g., they could\n   phone their IdP or send\
    \ an email via a 3G backup link).  If the\n   Identity Provider is the one that\
    \ blocked their access, the user will\n   immediately be informed by them.  If\
    \ the reason for blocking is at\n   the SP side, the Identity Provider will instead\
    \ inform the user that\n   the account is in working order and that the user needs\
    \ to contact\n   the SP IT support to get further insight.  In that case, that\
    \ SP-side\n   IT support will notify the users about the reasons for blocking.\n"
- title: 5.2.  Operator Name
  contents:
  - "5.2.  Operator Name\n   The Operator-Name attribute is defined in [RFC5580] as\
    \ a means of\n   unique identification of the access site.\n   The Proxy infrastructure\
    \ of eduroam makes it impossible for home\n   sites to tell where their users\
    \ roam.  While this may be seen as a\n   positive aspect enhancing user's privacy,\
    \ it also makes user support,\n   roaming statistics, and blocking offending user's\
    \ access to eduroam\n   significantly harder.\n   Sites participating in eduroam\
    \ are encouraged to add the Operator-\n   Name attribute using the REALM namespace,\
    \ i.e., sending a realm name\n   under control of the given site.\n   The introduction\
    \ of Operator-Name in eduroam has led to the\n   identification of one operational\
    \ problem -- the identifier 126\n   assigned to this attribute has been previously\
    \ used by some vendors\n   for their specific purposes and has been included in\
    \ attribute\n   dictionaries of several RADIUS server distributions.  Since the\n\
    \   syntax of this hijacked attribute had been set to Integer, this\n   introduces\
    \ a syntax clash with the RFC definition (which defines it\n   as Text).  Operational\
    \ tests in eduroam have shown that servers using\n   the Integer syntax for attribute\
    \ 126 may either truncate the value to\n   4 octets or even drop the entire RADIUS\
    \ packet (thus making\n   authentication impossible).  The eduroam monitoring\
    \ and eduroam test\n   tools try to locate problematic sites.  Section 2.8 of\
    \ [RFC6929]\n   clarifies the handling of these packets.\n   When a Service Provider\
    \ sends its Operator-Name value, it creates a\n   possibility for the home sites\
    \ to set up conditional blocking rules,\n   depriving certain users of access\
    \ to selected sites.  Such action\n   will cause much less concern than blocking\
    \ users from all of eduroam.\n   In eduroam, the Operator Name is also used for\
    \ the generation of\n   Chargeable User Identity values.\n   The addition of Operator-Name\
    \ is a straightforward configuration of\n   the RADIUS server and may be easily\
    \ introduced on a large scale.\n"
- title: 5.3.  Chargeable User Identity
  contents:
  - "5.3.  Chargeable User Identity\n   The Chargeable-User-Identity (CUI) attribute\
    \ is defined by RFC 4372\n   [RFC4372] as an answer to accounting problems caused\
    \ by the use of\n   anonymous identity in some EAP methods.  In eduroam, the primary\
    \ use\n   of CUI is in incident handling, but it can also enhance local\n   accounting.\n\
    \   The eduroam policy requires that a given user's CUI generated for\n   requests\
    \ originating from different sites should be different (to\n   prevent collusion\
    \ attacks).  The eduroam policy thus mandates that a\n   CUI request be accompanied\
    \ by the Operator-Name attribute, which is\n   used as one of the inputs for the\
    \ CUI generation algorithm.  The\n   Operator-Name requirement is considered to\
    \ be the \"business\n   requirement\" described in Section 2.1 of RFC 4372 [RFC4372]\
    \ and hence\n   conforms to the RFC.\n   When eduroam started considering using\
    \ CUI, there were no NAS\n   implementations; therefore, the only solution was\
    \ moving all CUI\n   support to the RADIUS server.\n   CUI request generation\
    \ requires only the addition of NUL CUI\n   attributes to outgoing Access-Requests;\
    \ however, the real strength of\n   CUI comes with accounting.  Implementation\
    \ of CUI-based accounting in\n   the server requires that the authentication and\
    \ accounting RADIUS\n   servers used directly by the NAS are actually the same\
    \ or at least\n   have access to a common source of information.  Upon processing\
    \ of an\n   Access-Accept, the authenticating RADIUS server must store the\n \
    \  received CUI value together with the device's Calling-Station-Id in a\n   temporary\
    \ database.  Upon receipt of an Accounting-Request, the\n   server needs to update\
    \ the packet with the CUI value read from the\n   database.\n   A wide introduction\
    \ of CUI support in eduroam will significantly\n   simplify incident handling\
    \ at Service Providers.  Introducing local,\n   per-user access restriction will\
    \ be possible.  Visited sites will\n   also be able to notify the home site about\
    \ the introduction of such a\n   restriction, pointing to the CUI value and thus\
    \ making it possible\n   for the home site to identify the user.  When the user\
    \ reports the\n   problem at his home support, the reason will be already known.\n"
- title: 6.  Privacy Considerations
  contents:
  - "6.  Privacy Considerations\n   The eduroam architecture has been designed with\
    \ protection of user\n   credentials in mind, as may be clear from reading this\
    \ far.  However,\n   operational experience has revealed some more subtle points\
    \ with\n   regards to privacy.\n"
- title: 6.1.  Collusion of Service Providers
  contents:
  - "6.1.  Collusion of Service Providers\n   If users use anonymous outer identities,\
    \ SPs cannot easily collude by\n   linking outer identities to users that are\
    \ visiting their campus.\n   However, this poses problems with remediation of\
    \ abuse or\n   misconfiguration.  It is impossible to find the user that exhibits\n\
    \   unwanted behaviour or whose system has been compromised.\n   For that reason,\
    \ the Chargeable-User-Identity has been introduced in\n   eduroam, constructed\
    \ so that only the IdP of the user can uniquely\n   identify the user.  In order\
    \ to prevent collusion attacks, that CUI\n   is required to be unique per user\
    \ and per Service Provider.\n"
- title: 6.2.  Exposing User Credentials
  contents:
  - "6.2.  Exposing User Credentials\n   Through the use of EAP, user credentials\
    \ are not visible to anyone\n   but the IdP of the user.  That is, if a sufficiently\
    \ secure EAP\n   method is chosen and EAP is not terminated prematurely.\n   There\
    \ is one privacy sensitive user attribute that is necessarily\n   exposed to third\
    \ parties and that is the realm the user belongs to.\n   Routing in eduroam is\
    \ based on the realm part of the user identifier,\n   so even though the outer\
    \ identity in a tunneled EAP method may be set\n   to an anonymous identifier,\
    \ it MUST contain the realm of the user,\n   and may thus lead to identifying\
    \ the user if the realm in question\n   contains few users.  This is considered\
    \ a reasonable trade-off\n   between user privacy and usability.\n"
- title: 6.3.  Track Location of Users
  contents:
  - "6.3.  Track Location of Users\n   Due to the fact that access requests (potentially)\
    \ travel through a\n   number of proxy RADIUS servers, the home IdP of the user\
    \ typically\n   cannot tell where a user roams.\n   However, the introduction\
    \ of Operator-Name and dynamic lookups (i.e.,\n   direct connections between IdP\
    \ and SP) gives the home IdP insight\n   into the location of the user.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This section addresses only security considerations\
    \ associated with\n   the use of eduroam.  For considerations relating to IEEE\
    \ 802.1X,\n   RADIUS, and EAP in general, the reader is referred to the respective\n\
    \   specification and to other literature.\n"
- title: 7.1.  Man-in-the-Middle and Tunneling Attacks
  contents:
  - "7.1.  Man-in-the-Middle and Tunneling Attacks\n   The security of user credentials\
    \ in eduroam ultimately lies within\n   the EAP server verification during the\
    \ EAP conversation.  Therefore,\n   the eduroam policy mandates that only EAP\
    \ types capable of mutual\n   authentication are allowed in the infrastructure,\
    \ and requires that\n   IdPs publish all information that is required to uniquely\
    \ identify\n   the server (i.e., usually the EAP server's CA certificate and its\n\
    \   Common Name or subjectAltName:dNSName).\n   While in principle this makes\
    \ man-in-the-middle attacks impossible,\n   in practice several attack vectors\
    \ exist nonetheless.  Most of these\n   deficiencies are due to implementation\
    \ shortcomings in EAP\n   supplicants.  Examples:\n"
- title: 7.1.1.  Verification of Server Name Not Supported
  contents:
  - "7.1.1.  Verification of Server Name Not Supported\n   Some supplicants only allow\
    \ specifying which CA issues the EAP server\n   certificate; its name is not checked.\
    \  As a result, any entity that\n   is able to get a server certificate from the\
    \ same CA can create its\n   own EAP server and trick the end user to submit his\
    \ credentials to\n   that fake server.\n   As a mitigation to that problem, eduroam\
    \ Operations suggests the use\n   of a private CA that exclusively issues certificates\
    \ to the\n   organization's EAP servers.  In that case, no other entity will get\
    \ a\n   certificate from the CA and this supplicant shortcoming does not\n   present\
    \ a security threat any more.\n"
- title: 7.1.2.  Neither Specification of CA nor Server Name Checks during
  contents:
  - "7.1.2.  Neither Specification of CA nor Server Name Checks during\n        Bootstrap\n\
    \   Some supplicants allow for insecure bootstrapping in that they allow\n   the\
    \ simple selection of a network the acceptance of the incoming\n   server certificate,\
    \ identified by its fingerprint.  The certificate\n   is then saved as trusted\
    \ for later reconnection attempts.  If users\n   are near a fake hotspot during\
    \ initial provisioning, they may be\n   tricked to submit their credentials to\
    \ a fake server; furthermore,\n   they will be branded to trust only that fake\
    \ server in the future.\n   eduroam Identity Providers are advised to provide\
    \ their users with\n   complete documentation for setup of their supplicants without\
    \ the\n   shortcut of insecure bootstrapping.  In addition, eduroam Operations\n\
    \   has created a tool that makes correct, complete, and secure settings\n   on\
    \ many supplicants: eduroam CAT [eduroam-CAT].\n"
- title: 7.1.3.  User Does Not Configure CA or Server Name Checks
  contents:
  - "7.1.3.  User Does Not Configure CA or Server Name Checks\n   Unless automatic\
    \ provisioning tools such as eduroam CAT are used, it\n   is cumbersome for users\
    \ to initially configure an EAP supplicant\n   securely.  User interfaces of supplicants\
    \ often invite the users to\n   take shortcuts (\"Don't check server certificate\"\
    ) that are easier to\n   set up or hide important security settings in badly accessible\
    \ sub-\n   menus.  Such shortcuts or security parameter omissions make the user\n\
    \   subject to man-in-the-middle attacks.\n   eduroam IdPs are advised to educate\
    \ their users regarding the\n   necessary steps towards a secure setup. eduroam\
    \ Research and\n   Development is in touch with supplicant developers to improve\
    \ their\n   user interfaces.\n"
- title: 7.1.4.  Tunneling Authentication Traffic to Obfuscate User Origin
  contents:
  - "7.1.4.  Tunneling Authentication Traffic to Obfuscate User Origin\n   There is\
    \ no link between the EAP outer (\"anonymous\") identity and the\n   EAP inner\
    \ (\"real\") identity.  In particular, they can both contain a\n   realm name,\
    \ and the realms need not be identical.  It is possible to\n   craft packets with\
    \ an outer identity of user@RealmB, and an inner\n   identity of user@realmA.\
    \  With the eduroam request routing, a Service\n   Provider would assume that\
    \ the user is from realmB and send the\n   request there.  The server at realmB\
    \ inspects the inner user name,\n   and if proxying is not explicitly disabled\
    \ for tunneled request\n   content, may decide to send the tunneled EAP payload\
    \ to realmA, where\n   the user authenticates.  A CUI value would likely be generated\
    \ by the\n   server at realmB, even though this is not its user.\n   Users can\
    \ craft such packets to make their identification harder;\n   usually, the eduroam\
    \ SP would assume that the troublesome user\n   originates from realmB and demand\
    \ there that the user be blocked.\n   However, the operator of realmB has no control\
    \ over the user and can\n   only trace back the user to his real origin if logging\
    \ of proxied\n   requests is also enabled for EAP tunnel data.\n   eduroam Identity\
    \ Providers are advised to explicitly disable proxying\n   on the parts of their\
    \ RADIUS server configuration that process EAP\n   tunnel data.\n"
- title: 7.2.  Denial-of-Service Attacks
  contents:
  - "7.2.  Denial-of-Service Attacks\n   Since eduroam's roaming infrastructure is\
    \ based on IP and RADIUS, it\n   suffers from the usual DoS attack vectors that\
    \ apply to these\n   protocols.\n   The eduroam hotspots are susceptible to typical\
    \ attacks on edge\n   networks, such as rogue Router Advertisements (RAs), rogue\
    \ DHCP\n   servers, and others.  Notably, eduroam hotspots are more robust\n \
    \  against malign users' DHCP pool exhaustion than typical open or\n   \"captive\
    \ portal\" hotspots, because a DHCP address is only leased\n   after a successful\
    \ authentication, thereby reducing the pool of\n   possible attackers to eduroam\
    \ account holders (as opposed to the\n   general public).  Furthermore, attacks\
    \ involving ARP spoofing or ARP\n   flooding are also reduced to authenticated\
    \ users, because an attacker\n   needs to be in possession of a valid WPA2 session\
    \ key to be able to\n   send traffic on the network.\n   This section does not\
    \ discuss standard threats to edge networks and\n   IP networks in general.  The\
    \ following sections describe attack\n   vectors specific to eduroam.\n"
- title: 7.2.1.  Intentional DoS by Malign Individuals
  contents:
  - "7.2.1.  Intentional DoS by Malign Individuals\n   The eduroam infrastructure\
    \ is more robust against Distributed DoS\n   attacks than typical services that\
    \ are reachable on the Internet\n   because triggering authentication traffic\
    \ can only be done when\n   physically in proximity of an eduroam hotspot (be\
    \ it a wired socket\n   that is IEEE 802.1X enabled or a Wi-Fi Access Point).\n\
    \   However, when in the vicinity, an attacker can easily craft\n   authentication\
    \ attempts that traverse the entire international\n   eduroam infrastructure;\
    \ an attacker merely needs to choose a realm\n   from another world region than\
    \ his physical location to trigger\n   Access-Requests that need to be processed\
    \ by the SP, then SP-side\n   national, then world region, then target world region,\
    \ then target\n   national, then target IdP server.  So long as the realm actually\n\
    \   exists, this will be followed by an entire EAP conversation on that\n   path.\
    \  Not having actual credentials, the request will ultimately be\n   rejected,\
    \ but it consumed processing power and bandwidth across the\n   entire infrastructure,\
    \ possibly affecting all international\n   authentication traffic.\n   EAP is\
    \ a lock-step protocol.  A single attacker at an eduroam hotspot\n   can only\
    \ execute one EAP conversation after another and is thus rate-\n   limited by\
    \ round-trip times of the RADIUS chain.\n   Currently, eduroam processes several\
    \ hundred thousands of successful\n   international roaming authentications per\
    \ day (and, incidentally,\n   approximately 1.5 times as many Access-Rejects).\
    \  With the\n   requirement of physical proximity, and the rate-limiting induced\
    \ by\n   EAP's lock-step nature, it requires a significant amount of attackers\n\
    \   and a time-coordinated attack to produce significant load.  So far,\n   eduroam\
    \ Operations has not yet observed critical load conditions that\n   could reasonably\
    \ be attributed to such an attack.\n   The introduction of dynamic discovery further\
    \ eases this problem, as\n   authentications will then not traverse all infrastructure\
    \ servers,\n   removing the world-region aggregation servers as obvious bottlenecks.\n\
    \   Any attack would then be limited between an SP and IdP directly.\n"
- title: 7.2.2.  DoS as a Side-Effect of Expired Credentials
  contents:
  - "7.2.2.  DoS as a Side-Effect of Expired Credentials\n   In eduroam Operations,\
    \ it is observed that a significant portion of\n   (failed) eduroam authentications\
    \ is due to user accounts that were\n   once valid but have in the meantime been\
    \ de-provisioned (e.g., if a\n   student has left the university after graduation).\
    \  Configured\n   eduroam accounts are often retained on the user devices, and\
    \ when in\n   the vicinity of an eduroam hotspot, the user device's operating\n\
    \   system will attempt to connect to this network.\n   As operation of eduroam\
    \ continues, the amount of devices with\n   leftover configurations is growing,\
    \ effectively creating a pool of\n   devices that produce unwanted network traffic\
    \ whenever they can.\n   Until recently, this problem did not emerge with much\
    \ prominence,\n   because there is also a natural shrinking of that pool of devices\
    \ due\n   to users finally decommissioning their old computing hardware.\n   Recently,\
    \ smartphones are programmed to make use of cloud storage and\n   online backup\
    \ mechanisms that save most, or all, configuration\n   details of the device with\
    \ a third party.  When renewing their\n   personal computing hardware, users can\
    \ restore the old settings onto\n   the new device.  It has been observed that\
    \ expired eduroam accounts\n   can survive perpetually on user devices that way.\
    \  If this trend\n   continues, it can be pictured that an always-growing pool\
    \ of devices\n   will clog up eduroam infrastructure with doomed-to-fail\n   authentication\
    \ requests.\n   There is not currently a useful remedy to this problem, other\
    \ than\n   instructing users to manually delete their configuration in due time.\n\
    \   Possible approaches to this problem are:\n   o  Creating a culture of device\
    \ provisioning where the provisioning\n      profile contains a \"ValidUntil\"\
    \ property, after which the\n      configuration needs to be re-validated or disabled.\
    \  This requires\n      a data format for provisioning as well as implementation\
    \ support.\n   o  Improvements to supplicant software so that it maintains state\n\
    \      over failed authentications.  For example, if a previously known\n    \
    \  working configuration failed to authenticate consistently for 30\n      calendar\
    \ days, it should be considered stale and be disabled.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2865]  Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n        \
    \      \"Remote Authentication Dial In User Service (RADIUS)\",\n            \
    \  RFC 2865, DOI 10.17487/RFC2865, June 2000,\n              <http://www.rfc-editor.org/info/rfc2865>.\n\
    \   [RFC3748]  Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J., and\n      \
    \        H. Levkowetz, Ed., \"Extensible Authentication Protocol\n           \
    \   (EAP)\", RFC 3748, DOI 10.17487/RFC3748, June 2004,\n              <http://www.rfc-editor.org/info/rfc3748>.\n\
    \   [RFC4279]  Eronen, P., Ed. and H. Tschofenig, Ed., \"Pre-Shared Key\n    \
    \          Ciphersuites for Transport Layer Security (TLS)\",\n              RFC\
    \ 4279, DOI 10.17487/RFC4279, December 2005,\n              <http://www.rfc-editor.org/info/rfc4279>.\n\
    \   [RFC4372]  Adrangi, F., Lior, A., Korhonen, J., and J. Loughney,\n       \
    \       \"Chargeable User Identity\", RFC 4372,\n              DOI 10.17487/RFC4372,\
    \ January 2006,\n              <http://www.rfc-editor.org/info/rfc4372>.\n   [RFC5246]\
    \  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n              (TLS)\
    \ Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246, August\
    \ 2008,\n              <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC5280]\
    \  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley,\
    \ R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure Certificate\
    \ and Certificate Revocation List\n              (CRL) Profile\", RFC 5280, DOI\
    \ 10.17487/RFC5280, May 2008,\n              <http://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC5580]  Tschofenig, H., Ed., Adrangi, F., Jones, M., Lior, A., and\n  \
    \            B. Aboba, \"Carrying Location Objects in RADIUS and\n           \
    \   Diameter\", RFC 5580, DOI 10.17487/RFC5580, August 2009,\n              <http://www.rfc-editor.org/info/rfc5580>.\n\
    \   [RFC5997]  DeKok, A., \"Use of Status-Server Packets in the Remote\n     \
    \         Authentication Dial In User Service (RADIUS) Protocol\",\n         \
    \     RFC 5997, DOI 10.17487/RFC5997, August 2010,\n              <http://www.rfc-editor.org/info/rfc5997>.\n\
    \   [RFC6613]  DeKok, A., \"RADIUS over TCP\", RFC 6613,\n              DOI 10.17487/RFC6613,\
    \ May 2012,\n              <http://www.rfc-editor.org/info/rfc6613>.\n   [RFC6614]\
    \  Winter, S., McCauley, M., Venaas, S., and K. Wierenga,\n              \"Transport\
    \ Layer Security (TLS) Encryption for RADIUS\",\n              RFC 6614, DOI 10.17487/RFC6614,\
    \ May 2012,\n              <http://www.rfc-editor.org/info/rfc6614>.\n   [RFC6973]\
    \  Cooper, A., Tschofenig, H., Aboba, B., Peterson, J.,\n              Morris,\
    \ J., Hansen, M., and R. Smith, \"Privacy\n              Considerations for Internet\
    \ Protocols\", RFC 6973,\n              DOI 10.17487/RFC6973, July 2013,\n   \
    \           <http://www.rfc-editor.org/info/rfc6973>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [ABFAB-ARCH]\n              Howlett, J., Hartman,\
    \ S., Tschofenig, H., Lear, E., and\n              J. Schaad, \"Application Bridging\
    \ for Federated Access\n              Beyond Web (ABFAB) Architecture\", Work\
    \ in Progress,\n              draft-ietf-abfab-arch-13, July 2014.\n   [dead-realm]\n\
    \              Tomasek, J., \"Dead-realm marking feature for Radiator\n      \
    \        RADIUS servers\", 2006,\n              <http://www.eduroam.cz/dead-realm/docs/dead-realm.html>.\n\
    \   [DYN-DISC] Winter, S. and M. McCauley, \"NAI-based Dynamic Peer\n        \
    \      Discovery for RADIUS/TLS and RADIUS/DTLS\", Work in\n              Progress,\
    \ draft-ietf-radext-dynamic-discovery-15, April\n              2015.\n   [eduPKI]\
    \   Delivery of Advanced Network Technology to Europe, \"eduPKI\n            \
    \  Trust Profiles\", 2012, <https://www.edupki.org/edupki-pma/\n             \
    \ edupki-trust-profiles/>.\n   [eduroam-CAT]\n              Delivery of Advanced\
    \ Network Technology to Europe,\n              \"eduroam CAT\", 2012, <https://cat.eduroam.org>.\n\
    \   [eduroam-compliance]\n              Trans-European Research and Education\
    \ Networking\n              Association, \"eduroam Compliance Statement\", October\
    \ 2011,\n              <http://www.eduroam.org/downloads/docs/\n             \
    \ eduroam_Compliance_Statement_v1_0.pdf>.\n   [eduroam-homepage]\n           \
    \   Trans-European Research and Education Networking\n              Association,\
    \ \"eduroam Homepage\", 2007,\n              <http://www.eduroam.org/>.\n   [eduroam-service-definition]\n\
    \              GEANT, \"eduroam Policy Service Definition\", Version 2.8,\n  \
    \            July 2012, <https://www.eduroam.org/downloads/docs/GN3-12-\n    \
    \          192_eduroam-policy-service-definition_ver28_26072012.pdf>.\n   [eduroam-start]\n\
    \              Wierenga, K., \"Subject: proposal for inter NREN roaming\",\n \
    \             message to the mobility@terena.nl mailing list, initial\n      \
    \        proposal for what is now called eduroam, 30 May 2002,\n             \
    \ <http://www.terena.org/activities/tf-mobility/\n              start-of-eduroam.pdf>.\n\
    \   [IEEE.802.1X]\n              IEEE, \"IEEE Standard for Local and metropolitan\
    \ area\n              networks - Port-Based Network Access Control\", IEEE\n \
    \             802.1X-2010, DOI 10.1109/ieeestd.2010.5409813,\n              <http://ieeexplore.ieee.org/servlet/\n\
    \              opac?punumber=5409757>.\n   [nrenroaming-select]\n            \
    \  Trans-European Research and Education Networking\n              Association,\
    \ \"Preliminary selection for inter-NREN\n              roaming\", December 2003,\n\
    \              <http://www.terena.org/activities/tf-mobility/\n              deliverables/delG/DelG-final.pdf>.\n\
    \   [radsec-whitepaper]\n              Open System Consultants, \"RadSec: a secure,\
    \ reliable\n              RADIUS Protocol\", October 2012,\n              <http://www.open.com.au/radiator/radsec-whitepaper.pdf>.\n\
    \   [RFC3588]  Calhoun, P., Loughney, J., Guttman, E., Zorn, G., and\n       \
    \       J. Arkko, \"Diameter Base Protocol\", RFC 3588,\n              DOI 10.17487/RFC3588,\
    \ September 2003,\n              <http://www.rfc-editor.org/info/rfc3588>.\n \
    \  [RFC3958]  Daigle, L. and A. Newton, \"Domain-Based Application\n         \
    \     Service Location Using SRV RRs and the Dynamic Delegation\n            \
    \  Discovery Service (DDDS)\", RFC 3958, DOI 10.17487/RFC3958,\n             \
    \ January 2005, <http://www.rfc-editor.org/info/rfc3958>.\n   [RFC4017]  Stanley,\
    \ D., Walker, J., and B. Aboba, \"Extensible\n              Authentication Protocol\
    \ (EAP) Method Requirements for\n              Wireless LANs\", RFC 4017, DOI\
    \ 10.17487/RFC4017, March\n              2005, <http://www.rfc-editor.org/info/rfc4017>.\n\
    \   [RFC6733]  Fajardo, V., Ed., Arkko, J., Loughney, J., and G. Zorn,\n     \
    \         Ed., \"Diameter Base Protocol\", RFC 6733,\n              DOI 10.17487/RFC6733,\
    \ October 2012,\n              <http://www.rfc-editor.org/info/rfc6733>.\n   [RFC6929]\
    \  DeKok, A. and A. Lior, \"Remote Authentication Dial In User\n             \
    \ Service (RADIUS) Protocol Extensions\", RFC 6929,\n              DOI 10.17487/RFC6929,\
    \ April 2013,\n              <http://www.rfc-editor.org/info/rfc6929>.\n   [RFC7170]\
    \  Zhou, H., Cam-Winget, N., Salowey, J., and S. Hanna,\n              \"Tunnel\
    \ Extensible Authentication Protocol (TEAP) Version\n              1\", RFC 7170,\
    \ DOI 10.17487/RFC7170, May 2014,\n              <http://www.rfc-editor.org/info/rfc7170>.\n\
    \   [RFC7542]  DeKok, A., \"The Network Access Identifier\", RFC 7542,\n     \
    \         DOI 10.17487/RFC7542, May 2015,\n              <http://www.rfc-editor.org/info/rfc7542>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to thank the participants in the Geant\n\
    \   Association Task Force on Mobility and Network Middleware as well as\n   the\
    \ Geant project for their reviews and contributions.  Special\n   thanks go to\
    \ Jim Schaad for doing an excellent review of the first\n   version and to him\
    \ and Alan DeKok for additional reviews.\n   The eduroam trademark is registered\
    \ by TERENA.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Klaas Wierenga\n   Cisco Systems\n   Haarlerbergweg 13-17\n\
    \   Amsterdam  1101 CH\n   The Netherlands\n   Phone: +31 20 357 1752\n   Email:\
    \ klaas@cisco.com\n   Stefan Winter\n   Fondation RESTENA\n   Maison du Savoir\n\
    \   2, avenue de l'Universite\n   L-4365 Esch-sur-Alzette\n   Luxembourg\n   Phone:\
    \ +352 424409 1\n   Fax:   +352 422473\n   Email: stefan.winter@restena.lu\n \
    \  URI:   http://www.restena.lu.\n   Tomasz Wolniewicz\n   Nicolaus Copernicus\
    \ University\n   pl. Rapackiego 1\n   Torun\n   Poland\n   Phone: +48-56-611-2750\n\
    \   Fax:   +48-56-622-1850\n   Email: twoln@umk.pl\n   URI:   http://www.home.umk.pl/~twoln/\n"
