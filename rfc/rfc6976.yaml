- title: __initial_text__
  contents:
  - "                  Framework for Loop-Free Convergence\n     Using the Ordered\
    \ Forwarding Information Base (oFIB) Approach\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an illustrative framework of a mechanism\
    \ for\n   use in conjunction with link-state routing protocols that prevents\n\
    \   the transient loops that would otherwise occur during topology\n   changes.\
    \  It does this by correctly sequencing the forwarding\n   information base (FIB)\
    \ updates on the routers.\n   This mechanism can be used in the case of non-urgent\
    \ (management\n   action) link or node shutdowns and restarts or link metric changes.\n\
    \   It can also be used in conjunction with a fast reroute mechanism that\n  \
    \ converts a sudden link or node failure into a non-urgent topology\n   change.\
    \  This is possible where a complete repair path is provided\n   for all affected\
    \ destinations.\n   After a non-urgent topology change, each router computes a\
    \ rank that\n   defines the time at which it can safely update its FIB.  A method\
    \ for\n   accelerating this loop-free convergence process by the use of\n   completion\
    \ messages is also described.\n   The technology described in this document has\
    \ been subject to\n   extensive simulation using pathological convergence behavior\
    \ and real\n   network topologies and costs.  However, the mechanisms described\
    \ in\n   this document are purely illustrative of the general approach and do\n\
    \   not constitute a protocol specification.  This document represents a\n   snapshot\
    \ of the work of the Routing Area Working Group at the time of\n   publication\
    \ and is published as a document of record.  Further work\n   is needed before\
    \ implementation or deployment.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6976.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  The Purpose of This Document  . . . . . . . . . .\
    \ . . . .   4\n     1.2.  Overview  . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   2.  The Required FIB Update Order . . . . . . . . . . . . . .\
    \ . .   6\n     2.1.  Single Link Events  . . . . . . . . . . . . . . . . . .\
    \ .   6\n       2.1.1.  Link Down / Metric Increase . . . . . . . . . . . . .\
    \   6\n       2.1.2.  Link Up / Metric Decrease . . . . . . . . . . . . . .  \
    \ 7\n     2.2.  Multi-Link Events . . . . . . . . . . . . . . . . . . . .   8\n\
    \       2.2.1.  Router Down Events  . . . . . . . . . . . . . . . . .   8\n  \
    \     2.2.2.  Router Up Events  . . . . . . . . . . . . . . . . . .   8\n    \
    \   2.2.3.  Line-Card Failure/Restoration Events  . . . . . . . .   8\n   3. \
    \ Applying Ordered FIB Updates  . . . . . . . . . . . . . . . .   9\n     3.1.\
    \  Deducing the Topology Change  . . . . . . . . . . . . . .   9\n     3.2.  Deciding\
    \ If Ordered FIB Updates Apply . . . . . . . . . .   9\n   4.  Computation of\
    \ the Ordering . . . . . . . . . . . . . . . . .  10\n     4.1.  Link Down, Router\
    \ Down, or Metric Increase  . . . . . . .  10\n     4.2.  Link Up, Router Up,\
    \ or Metric Decrease  . . . . . . . . .  11\n   5.  Acceleration of Ordered Convergence\
    \ . . . . . . . . . . . . .  11\n     5.1.  Construction of the Waiting List and\
    \ Notification List  .  12\n       5.1.1.  Down Events . . . . . . . . . . . .\
    \ . . . . . . . . .  12\n       5.1.2.  Up Events . . . . . . . . . . . . . .\
    \ . . . . . . . .  12\n     5.2.  Format of Completion Messages . . . . . . .\
    \ . . . . . . .  13\n   6.  Fallback to Conventional Convergence  . . . . . .\
    \ . . . . . .  13\n   7.  oFIB State Machine  . . . . . . . . . . . . . . . .\
    \ . . . . .  13\n     7.1.  OFIB_STABLE . . . . . . . . . . . . . . . . . . .\
    \ . . . .  14\n     7.2.  OFIB_HOLDING_DOWN . . . . . . . . . . . . . . . . .\
    \ . . .  15\n     7.3.  OFIB_HOLDING_UP . . . . . . . . . . . . . . . . . . .\
    \ . .  16\n     7.4.  OFIB_ONGOING  . . . . . . . . . . . . . . . . . . . . .\
    \ .  17\n     7.5.  OFIB_ABANDONED  . . . . . . . . . . . . . . . . . . . . .\
    \  18\n   8.  Management Considerations . . . . . . . . . . . . . . . . . .  18\n\
    \   9.  Security Considerations . . . . . . . . . . . . . . . . . . .  18\n  \
    \ 10. Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  18\n   11.\
    \ Informative References  . . . . . . . . . . . . . . . . . . .  19\n   Appendix\
    \ A.  Candidate Methods of Safely Abandoning Loop-Free\n                Convergence\
    \ (AAH)  . . . . . . . . . . . . . . . . .  20\n     A.1.  Possible Solutions\
    \  . . . . . . . . . . . . . . . . . . .  20\n     A.2.  Hold-Down Timer Only\
    \  . . . . . . . . . . . . . . . . . .  20\n     A.3.  AAH Messages  . . . . .\
    \ . . . . . . . . . . . . . . . . .  21\n       A.3.1.  Per-Router State Machine\
    \  . . . . . . . . . . . . . .  22\n       A.3.2.  Per-Neighbor State Machine\
    \  . . . . . . . . . . . . .  24\n   Appendix B.  Synchronization of Loop-Free\
    \ Timer Values  . . . . .  25\n     B.1.  Introduction  . . . . . . . . . . .\
    \ . . . . . . . . . . .  25\n     B.2.  Required Properties . . . . . . . . .\
    \ . . . . . . . . . .  25\n     B.3.  Mechanism . . . . . . . . . . . . . . .\
    \ . . . . . . . . .  26\n     B.4.  Security Considerations Related to Router\
    \ Timer Values  .  27\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  The Purpose of This Document
  contents:
  - "1.1.  The Purpose of This Document\n   This document describes an illustrative\
    \ framework of a mechanism for\n   use in conjunction with link-state routing\
    \ protocols that prevents\n   the transient loops that would otherwise occur during\
    \ topology\n   changes.  It does this by correctly sequencing the forwarding\n\
    \   information base (FIB) updates on the routers.\n   At the time of publication\
    \ there is no demand to deploy this\n   technology; however, in view of the subtleties\
    \ involved in the design\n   of extensions for loop-free convergence routing protocols,\
    \ the\n   Routing Area Working Group considered it desirable to publish this\n\
    \   document to place on record the design consideration of the ordered\n   FIB\
    \ (oFIB) approach.\n   The mechanisms presented in this document are purely illustrative\
    \ of\n   the general approach and do not constitute a protocol specification.\n\
    \   This document represents a snapshot of the work of the working group\n   at\
    \ the time of publication and is published as a document of record.\n   Additional\
    \ work is needed to specify the necessary routing protocol\n   extensions necessary\
    \ to support this IP fast reroute (FRR) method\n   before implementation or deployment.\n"
- title: 1.2.  Overview
  contents:
  - "1.2.  Overview\n   With link-state protocols, such as IS-IS [ISO10589] and OSPF\n\
    \   [RFC2328], each time the network topology changes, some routers need\n   to\
    \ modify their forwarding information bases (FIBs) to take into\n   account the\
    \ new topology.  Each topology change causes a convergence\n   phase.  During\
    \ this phase, routers may transiently have inconsistent\n   FIBs, which may lead\
    \ to packet loops and losses, even if the\n   reachability of the destinations\
    \ is not compromised after the\n   topology change.  Packet losses and transient\
    \ loops can also occur in\n   the case of a link down event implied by a maintenance\
    \ operation,\n   even if this operation is predictable and not urgent.  When the\
    \ link-\n   state change is a metric update and when a new link is brought up\
    \ in\n   the network, there is no direct loss of connectivity, but transient\n\
    \   packet loops and loss can still occur.\n   In this document, a distinction\
    \ is made between urgent and non-urgent\n   network events.  Urgent events are\
    \ those that arise from\n   unpredictable network outages (such as node or link\
    \ failures) that\n   are traditionally resolved through the convergence of routing\n\
    \   protocols or by protection mechanisms reliant on fault detection and\n   reporting\
    \ (such as through Operations, Administration, and\n   Maintenance).  Non-urgent\
    \ events are those that arise from\n   predictable events such as the controlled\
    \ shutdown of network\n   resources by a management system, or the modification\
    \ of network\n   parameters (such as routing metrics).  Typically, non-urgent\
    \ events\n   can be planned around, while urgent events must be handled by dynamic\n\
    \   systems.  All network events, both urgent and non-urgent, may lead to\n  \
    \ transient packet loops and loss.\n   For example, in Figure 1, if the link between\
    \ X and Y is shut down by\n   an operator, packets destined to X can loop between\
    \ R and Y when Y\n   has updated its FIB while R has not yet updated its FIB,\
    \ and packets\n   destined to Y can loop between X and S if X updates its FIB\
    \ before S.\n   According to the current behavior of IS-IS and OSPF, this scenario\n\
    \   will happen most of the time because X and Y are the first routers to\n  \
    \ be aware of the failure, so that they will update their FIBs first.\n      \
    \                               1\n                       X-------------/-------------Y\n\
    \                       |                           |\n                      \
    \ |                           |\n                       |                    \
    \       |\n                       |                           |\n            \
    \         1 |                           | 1\n                       |        \
    \                   |\n                       |                           |\n\
    \                       |                           |\n                      \
    \ |                           |\n                       S---------------------------R\n\
    \                                     2\n                        Figure 1: A Simple\
    \ Topology\n   It should be noted that the loops can occur remotely from the\n\
    \   failure, not just adjacent to it.\n   [RFC5715] provides an introduction to\
    \ a number of loop-free\n   convergence methods, and readers unfamiliar with this\
    \ technology are\n   recommended to read it before studying this document in detail.\
    \  Note\n   that in common with other loop-free convergence methods, oFIB is only\n\
    \   capable of providing loop-free convergence in the presence of a\n   single\
    \ failure.\n   The goal of this document is to describe a mechanism that sequences\n\
    \   the router FIB updates to maintain consistency throughout the\n   network.\
    \  By correctly setting the FIB change order, no looping or\n   packet loss can\
    \ occur.  This mechanism may be applied to the case of\n   managed link-state\
    \ changes, i.e., link metric change, manual link\n   down/up, manual router down/up,\
    \ and managed state changes of a set of\n   links attached to one router.  It\
    \ may also be applied to the case\n   where one or more network elements are protected\
    \ by a fast reroute\n   mechanism (FRR) [RFC5714] [RFC4090].  The mechanisms that\
    \ are used in\n   the failure case are exactly the same as those used for managed\n\
    \   changes.  For simplicity, this document makes no further distinction\n   between\
    \ managed and unplanned changes.\n   It is assumed in the description that follows\
    \ that all routers in the\n   routing domain are oFIB capable.  This can be verified\
    \ in an\n   operational network by having the routers report oFIB capability\n\
    \   using the IGP.  Where non-oFIB-capable routers exist in the network,\n   normal\
    \ convergence would be used by all routers.  The operation of\n   mixed-mode networks\
    \ is for further study.\n   The technology described in this document has been\
    \ subject to\n   extensive simulation using pathological convergence behavior\
    \ and real\n   network topologies and costs.  A variant of the technology described\n\
    \   here has been experimentally deployed in a production network.\n"
- title: 2.  The Required FIB Update Order
  contents:
  - "2.  The Required FIB Update Order\n   This section provides an overview of the\
    \ required ordering of the FIB\n   updates.  A more detailed analysis of the rerouting\
    \ dynamics and\n   correctness proofs of the mechanism can be found in [refs.PFOB07].\n"
- title: 2.1.  Single Link Events
  contents:
  - "2.1.  Single Link Events\n   For simplicity, the correct ordering for single\
    \ link changes are\n   described first.  The document then builds on this to demonstrate\n\
    \   that the same principles can be applied to more complex scenarios\n   such\
    \ as line-card or node changes.\n"
- title: 2.1.1.  Link Down / Metric Increase
  contents:
  - "2.1.1.  Link Down / Metric Increase\n   First, consider the non-urgent failure\
    \ of a link (i.e., where an\n   operator or a network management system (NMS)\
    \ shuts down a link,\n   thereby removing it from the currently active topology)\
    \ or the\n   increase of a link metric by the operator or NMS.  In this case,\
    \ a\n   router R must not update its FIB until all other routers that send\n \
    \  traffic via R and the affected link have first updated their FIBs.\n   The\
    \ following argument shows that this rule ensures the correct order\n   of FIB\
    \ changes when the link X->Y is shut down or its metric is\n   increased.\n  \
    \ An \"outdated\" FIB entry for a destination is defined as being a FIB\n   entry\
    \ that still reflects the shortest path(s) in use before the\n   topology change.\
    \  Once a packet reaches a router R that has an\n   outdated FIB entry for the\
    \ packet destination, then, provided the\n   oFIB ordering is respected, the packet\
    \ will continue to X only\n   traversing routers that also have an outdated FIB\
    \ entry for the\n   destination.  The packet thus reaches X without looping and\
    \ will be\n   forwarded to Y via X->Y (or in the case of FRR, the X->Y repair\
    \ path)\n   and will reach its destination.\n   Since it can be assumed that the\
    \ original topology was loop-free, Y\n   will never use the link Y->X to reach\
    \ the destination, and hence the\n   path(s) between Y and the destination are\
    \ guaranteed to be unaffected\n   by the topology change.  It therefore follows\
    \ that the packet\n   arriving at Y will reach its destination without looping.\n\
    \   Since it can also be assumed that the new topology is loop-free, by\n   definition\
    \ a packet cannot loop while being forwarded exclusively by\n   routers with an\
    \ updated FIB entry.\n   In other words, when the oFIB ordering is respected,\
    \ if a packet\n   reaches an outdated router, it can never subsequently reach\
    \ an\n   updated router, and it cannot loop because from this point on it will\n\
    \   only be forwarded on the consistent path that was used before the\n   event.\
    \  If it does not reach an outdated router, it will only be\n   forwarded on the\
    \ loop-free path that will be used after the\n   convergence.\n   According to\
    \ the proposed ordering, X will be the last router to\n   update its FIB.  Once\
    \ it has updated its FIB, the link X->Y can\n   actually be shut down (or the\
    \ repair removed).\n   If the link X-Y is bidirectional, a similar process must\
    \ be run to\n   order the FIB update for destinations using the link in the direction\n\
    \   Y->X.  As has already been shown, no packet ever traverses the X-Y\n   link\
    \ in both directions, and hence the operation of the two ordering\n   processes\
    \ is orthogonal.\n"
- title: 2.1.2.  Link Up / Metric Decrease
  contents:
  - "2.1.2.  Link Up / Metric Decrease\n   In the case of link up events or metric\
    \ decreases, a router R must\n   update its FIB before all other routers that\
    \ will use R to reach the\n   affected link.\n   The following argument shows\
    \ that this rule ensures the correct order\n   of FIB changes when the link X->Y\
    \ is brought into service or its\n   metric is decreased.\n   Firstly, when a\
    \ packet reaches a router R that has already updated\n   its FIB, all the routers\
    \ on the path from R to X will also have\n   updated their FIB, so that the packet\
    \ will reach X and be forwarded\n   along X->Y, ultimately reaching its destination.\n\
    \   Secondly, a packet cannot loop between routers that have not yet\n   updated\
    \ their FIB.  This proves that no packet can loop.\n"
- title: 2.2.  Multi-Link Events
  contents:
  - "2.2.  Multi-Link Events\n   The following sections describe the required ordering\
    \ for single\n   events that may manifest as multiple link events.  For example,\
    \ the\n   failure of a router may be notified to the rest of the network as the\n\
    \   individual failure of all its attached links.  The means of\n   identifying\
    \ the event type from the collection of received link\n   events is described\
    \ in Section 3.1.\n"
- title: 2.2.1.  Router Down Events
  contents:
  - "2.2.1.  Router Down Events\n   In the case of the non-urgent shutdown of a router,\
    \ a router R must\n   not update its FIB until all other routers that send traffic\
    \ via R\n   and the affected router have first updated their FIBs.\n   Using a\
    \ proof similar to that for link failure, it can be shown that\n   no loops will\
    \ occur if this ordering is respected [refs.PFOB07].\n"
- title: 2.2.2.  Router Up Events
  contents:
  - "2.2.2.  Router Up Events\n   In the case of a router being brought into service,\
    \ a router R must\n   update its FIB BEFORE all other routers that WILL use R\
    \ to reach the\n   affected router.\n   A proof similar to that for link up shows\
    \ that no loops will occur if\n   this ordering is respected [refs.PFOB07].\n"
- title: 2.2.3.  Line-Card Failure/Restoration Events
  contents:
  - "2.2.3.  Line-Card Failure/Restoration Events\n   The failure of a line card involves\
    \ the failure of a set of links,\n   all of which have a single node in common,\
    \ i.e., the parent router.\n   The ordering to be applied is the same as if it\
    \ were the failure of\n   the parent router.\n   In a similar way, the restoration\
    \ of an entire line card to service\n   as a single event can be treated as if\
    \ the parent router were\n   returning to service.\n"
- title: 3.  Applying Ordered FIB Updates
  contents:
  - '3.  Applying Ordered FIB Updates

    '
- title: 3.1.  Deducing the Topology Change
  contents:
  - "3.1.  Deducing the Topology Change\n   As has been described, a single event\
    \ such as the failure or\n   restoration of a single link, single router, or line\
    \ card may be\n   notified to the rest of the network as a set of individual link\n\
    \   change events.  It is necessary to deduce from this collection of\n   link-state\
    \ notifications the type of event that has occurred in the\n   network and hence\
    \ the required ordering.\n   When a link change event is received that impacts\
    \ the receiving\n   router's FIB, the routers at the near and far end of the link\
    \ are\n   noted.\n   If all events received within some hold-down period (the\
    \ time that a\n   router waits to acquire a set of Link State Packets (LSPs) that\n\
    \   should be processed together) have a single router in common, then it\n  \
    \ is assumed that the change reflects an event (line-card or router\n   change)\
    \ concerning that router.\n   In the case of a link change event, the router at\
    \ the far end of the\n   link is deemed to be the common router.\n   All ordering\
    \ computations are based on treating the common router as\n   the root for both\
    \ link and node events.\n"
- title: 3.2.  Deciding If Ordered FIB Updates Apply
  contents:
  - "3.2.  Deciding If Ordered FIB Updates Apply\n   There are some events (for example,\
    \ a subsequent failure with\n   conflicting repair requirements occurring before\
    \ the ordered FIB\n   process has completed) that cannot be correctly processed\
    \ by this\n   mechanism.  In these cases, it is necessary to ensure that\n   convergence\
    \ falls back to the conventional mode of operation (see\n   Section 6).\n   In\
    \ all cases, it is necessary to wait some hold-down period after\n   receiving\
    \ the first notification to ensure that all routers have\n   received the complete\
    \ set of link-state notifications associated with\n   the single event.\n   At\
    \ any time, if a link change notification is received that would\n   have no effect\
    \ on the receiving router's FIB, then it may be ignored.\n   If no other event\
    \ is received during the hold-down time, the event is\n   treated as a link event.\
    \  Note that the IGP reverse connectivity\n   check means that only the first\
    \ failure event or second up event has\n   an effect on the FIB.\n   If an event\
    \ that is received within the hold-down period does NOT\n   reference the common\
    \ router (R), then, in this version of the\n   specification, normal convergence\
    \ is invoked immediately (see\n   Section 6).\n   Network reconvergence using\
    \ the ordered FIB approach takes longer\n   than the normal reconvergence process.\
    \  Where the failure is\n   protected by an FRR mechanism, this additional delay\
    \ in convergence\n   causes no packet loss.  When the sudden failure of a link\
    \ or a set of\n   links that are not protected using an FRR mechanism occurs,\
    \ the\n   failure must be processed using the conventional (faster) mode of\n\
    \   operation to minimize packet loss during reconvergence.\n   In summary, an\
    \ ordered FIB process is applicable if the set of link\n   state notifications\
    \ received between the first event and the hold-\n   down period reference a common\
    \ router R, and one of the following\n   assertions is verified:\n   o  The set\
    \ of notifications refers to link down events concerning\n      protected links\
    \ and metric increase events.\n   o  The set of notifications refers to link up\
    \ events and metric\n      decrease events.\n"
- title: 4.  Computation of the Ordering
  contents:
  - "4.  Computation of the Ordering\n   This section describes how the required ordering\
    \ is computed.\n   This computation required the introduction of the concept of\
    \ a\n   reverse Shortest Path Tree (rSPT).  The rSPT uses the cost towards\n \
    \  the root (rather than from it) and yields the best paths towards the\n   root\
    \ from other nodes in the network [IPFRR-TUNNELS].\n"
- title: 4.1.  Link Down, Router Down, or Metric Increase
  contents:
  - "4.1.  Link Down, Router Down, or Metric Increase\n   To respect the proposed\
    \ ordering, routers compute a rank that will be\n   used to determine the time\
    \ at which they are permitted to perform\n   their FIB update.  In the case of\
    \ a failure event rooted at router Y\n   or an increase of the metric of link\
    \ X->Y, router R computes the rSPT\n   in the topology before the failure (rSPT_old)\
    \ rooted at Y.  This rSPT\n   gives the shortest paths to reach Y before the failure.\
    \  The branch\n   of the rSPT that is below R corresponds to the set of shortest\
    \ paths\n   to R that are used by the routers that reach Y via R.\n   The rank\
    \ of router R is defined as the depth (in number of hops) of\n   this branch.\
    \  In the case of Equal Cost Multipath (ECMP), the maximum\n   depth of the ECMP\
    \ path set is used.\n   Router R is required to update its FIB at time\n     \
    \ T0 + H + (rank * MAX_FIB)\n   where T0 is the arrival time of the Link State\
    \ Packet containing the\n   topology change, H is the hold-down time, and MAX_FIB\
    \ is a network-\n   wide constant that reflects the maximum time required to update\
    \ a FIB\n   irrespective of the change required.  The value of MAX_FIB is network\n\
    \   specific, and its determination is out of the scope of this document.\n  \
    \ This value must be agreed to by all the routers in the network.  This\n   agreement\
    \ can be performed by using a capability TLV as defined in\n   Appendix B.\n \
    \  All the routers that use R to reach Y will compute a lower rank than\n   R,\
    \ and hence the correct order will be respected.  It should be noted\n   that\
    \ only the routers that used Y before the event need to compute\n   their rank.\n"
- title: 4.2.  Link Up, Router Up, or Metric Decrease
  contents:
  - "4.2.  Link Up, Router Up, or Metric Decrease\n   In the case of a link or router\
    \ up event rooted at Y or a link metric\n   decrease affecting link Y->W, a router\
    \ R must have a rank that is\n   higher than the rank of the routers that it will\
    \ use to reach Y,\n   according to the rule described in Section 2.  Thus, the\
    \ rank of R is\n   the number of hops between R and Y in its renewed Shortest\
    \ Path Tree.\n   When R has multiple equal-cost paths to Y, the rank is the length\
    \ in\n   hops of the longest ECMP path to Y.\n   Router R is required to update\
    \ its FIB at time\n      T0 + H + (rank * MAX_FIB)\n   It should be noted that\
    \ only the routers that use Y after the event\n   have to compute a rank, i.e.,\
    \ only the routers that have Y in their\n   SPT after the link-state change.\n"
- title: 5.  Acceleration of Ordered Convergence
  contents:
  - "5.  Acceleration of Ordered Convergence\n   The mechanism described above is\
    \ conservative and hence may be\n   relatively slow.  The purpose of this section\
    \ is to describe a method\n   of accelerating the controlled convergence in such\
    \ a way that ordered\n   loop-free convergence is still guaranteed.\n   In many\
    \ cases, a router will complete its required FIB changes in a\n   time much shorter\
    \ than MAX_FIB, and in many other cases, a router\n   will not have to perform\
    \ any FIB change at all.\n   This section describes the use of completion messages\
    \ to speed up the\n   convergence by providing a means for a router to inform\
    \ those routers\n   waiting for it that it has completed any required FIB changes.\
    \  When\n   a router has been advised of completion by all the routers for which\n\
    \   it is waiting, it can safely update its own FIB without further\n   delay.\
    \  In most cases, this can result in a sub-second reconvergence\n   time, which\
    \ is comparable with a normal convergence time.\n   Routers maintain a waiting\
    \ list of the neighbors from which a\n   completion message must be received.\
    \  Upon reception of a completion\n   message from a neighbor, a router removes\
    \ this neighbor from its\n   waiting list.  Once its waiting list becomes empty,\
    \ the router is\n   allowed to update its FIB immediately even if its ranking\
    \ timer has\n   not yet expired.  Once this is done, the router sends a completion\n\
    \   message to the neighbors that are waiting for it to complete.  Those\n   routers\
    \ are listed in a list called the Notification List.\n   Completion messages contain\
    \ an identification of the event to which\n   they refer.\n   Note that, since\
    \ this is only an optimization, any loss of completion\n   messages will result\
    \ in the routers waiting their defined ranking\n   time, and hence the loop-free\
    \ properties will be preserved.\n"
- title: 5.1.  Construction of the Waiting List and Notification List
  contents:
  - '5.1.  Construction of the Waiting List and Notification List

    '
- title: 5.1.1.  Down Events
  contents:
  - "5.1.1.  Down Events\n   Consider a link or node down event rooted at router Y\
    \ or the cost\n   increase of the link X->Y.  A router R will compute rSPT_old(Y)\
    \ to\n   determine its rank.  When doing this, R also computes the set of\n  \
    \ neighbors that R uses to reach the failing node or link, and the set\n   of\
    \ neighbors that are using R to reach the failing node or link.  The\n   notification\
    \ list of R is equal to the former set, and the waiting\n   list of R is equal\
    \ to the latter.\n   Note that R could include all its neighbors in the notification\
    \ list\n   except those in the waiting list; this would have no impact on the\n\
    \   correctness of the protocol but would be unnecessarily inefficient.\n"
- title: 5.1.2.  Up Events
  contents:
  - "5.1.2.  Up Events\n   Consider a link or node up event rooted at router Y or\
    \ the cost\n   decrease of the link Y->X.  A router R will compute its new SPT\n\
    \   (SPT_new(R)).  The waiting list is the set of next-hop routers that R\n  \
    \ uses to reach Y in SPT_new(R).\n   In a simple implementation, the notification\
    \ list of R is all the\n   neighbors of R excluding those in the waiting list.\
    \  This may be\n   further optimized by computing rSPT_new(Y) to determine those\
    \ routers\n   that are waiting for R to complete.\n"
- title: 5.2.  Format of Completion Messages
  contents:
  - "5.2.  Format of Completion Messages\n   The format of completion messages and\
    \ means of their delivery is\n   routing protocol dependent and is outside the\
    \ scope of this document.\n   The following information is required:\n   o  Identity\
    \ of the sender.\n   o  List of routing notifications being considered in the\
    \ associated\n      FIB change.  Each notification is defined as:\n         Node\
    \ ID of the near end of the link\n         Node ID of the far end of the link\n\
    \         Inclusion or removal of link\n         Old metric\n         New metric\n"
- title: 6.  Fallback to Conventional Convergence
  contents:
  - "6.  Fallback to Conventional Convergence\n   In circumstances where a router\
    \ detects that it is dealing with\n   incomplete or inconsistent link-state information,\
    \ or when a further\n   topology event is received before completion of the current\
    \ ordered\n   FIB update process, it may be expedient to abandon the controlled\n\
    \   convergence process.  A number of possible fallback mechanisms are\n   described\
    \ in Appendix A.  This mechanism is referred to as\n   \"Abandoning All Hope\"\
    \ (AAH).  The state machine defined in the body\n   of this document does not\
    \ make any assumption about which fallback\n   mechanism will be used.\n"
- title: 7.  oFIB State Machine
  contents:
  - "7.  oFIB State Machine\n   An implementation must be capable of interworking\
    \ with the model of\n   an oFIB state machine described in this section.\n   An\
    \ oFIB-capable router maintains an oFIB state value, which is one\n   of: OFIB_STABLE,\
    \ OFIB_HOLDING_DOWN, OFIB_HOLDING_UP, OFIB_ABANDONED,\n   or OFIB_ONGOING.\n \
    \  An oFIB-capable router maintains a timer, Hold_down_timer.  An oFIB-\n   capable\
    \ router is configured with a value referred to as\n   HOLD_DOWN_DURATION.  This\
    \ configuration can be performed manually or\n   using Appendix B.\n   An oFIB-capable\
    \ router maintains a timer, rank_timer.\n"
- title: 7.1.  OFIB_STABLE
  contents:
  - "7.1.  OFIB_STABLE\n   OFIB_STABLE is the state of a router that is not currently\
    \ involved\n   in any convergence process.  This router is ready to process an\
    \ event\n   by applying oFIB.\n   EVENT: Reception of a Link State Packet that\
    \ describes an event of\n   the type link X--Y down or metric increase and is\
    \ to be processed\n   using oFIB.\n   ACTION:\n      Set state to OFIB_HOLDING_DOWN.\n\
    \      Start Hold_down_timer.\n      ofib_current_common_set = {X,Y}.\n      Compute\
    \ rank with respect to the event, as defined in Section 4.\n      Store the waiting\
    \ list and notification list for X--Y obtained\n      from the rank computation.\n\
    \   EVENT: Reception of a Link State Packet that describes an event of\n   the\
    \ type link X--Y up or metric decrease and is to be processed using\n   oFIB.\n\
    \   ACTION:\n      Set state to OFIB_HOLDING_UP.\n      Start Hold_down_timer.\n\
    \      ofib_current_common_set = {X,Y}.\n      Compute rank with respect to the\
    \ event, as defined in Section 4.\n      Store the waiting list and notification\
    \ list for X--Y obtained\n      from the rank computation.\n"
- title: 7.2.  OFIB_HOLDING_DOWN
  contents:
  - "7.2.  OFIB_HOLDING_DOWN\n   OFIB_HOLDING_DOWN is the state of a router that is\
    \ collecting a set\n   of link down or metric increase Link State Packets to be\
    \ processed\n   together using controlled convergence.\n   EVENT: Reception of\
    \ a Link State Packet that describes an event of\n   the type link up or metric\
    \ decrease and can be processed using oFIB.\n   ACTION:\n      Set state to OFIB_ABANDONED.\n\
    \      Reset Hold_down_timer.\n      Trigger AAH mechanism.\n   EVENT: Reception\
    \ of a Link State Packet that describes an event of\n   the type link A--B down\
    \ or metric increase and can be processed using\n   oFIB.\n   ACTION:\n      ofib_current_common_set\
    \ =\n      intersection(ofib_current_common_set,{A,B}).\n      If ofib_current_common_set\
    \ is empty, then there is no longer a\n      node in common in all the pending\
    \ link-state changes.\n         Set state to OFIB_ABANDONED.\n         Reset Hold_down_timer.\n\
    \         Trigger AAH mechanism.\n      If ofib_current_common set is not empty,\
    \ update the waiting list\n      and notification list as defined in Section 4.\
    \  Note that in the\n      case of a single link event, the Link State Packet\
    \ received when\n      the router is in this state describes the state change\
    \ of the\n      other direction of the link; hence, no changes will be made to\
    \ the\n      waiting and notification lists.\n   EVENT: Hold_down_timer expires.\n\
    \   ACTION:\n      Set state to OFIB_ONGOING.\n      Start rank_timer with computed\
    \ rank.\n   EVENT: Reception of a completion message.\n   ACTION: Remove the sender\
    \ from the waiting list associated with the\n   event identified in the completion\
    \ message.\n"
- title: 7.3.  OFIB_HOLDING_UP
  contents:
  - "7.3.  OFIB_HOLDING_UP\n   OFIB_HOLDING_UP is the state of a router that is collecting\
    \ a set of\n   link up or metric decrease Link State Packets to be processed\n\
    \   together using controlled convergence.\n   EVENT: Reception of a Link State\
    \ Packet that describes an event of\n   the type link down or metric increase\
    \ and is to be processed using\n   oFIB.\n   ACTION:\n      Set state to OFIB_ABANDONED.\n\
    \      Reset Hold_down_timer.\n      Trigger AAH mechanism.\n   EVENT: Reception\
    \ of a Link State Packet that describes an event of\n   the type link A--B up\
    \ or metric decrease and is to be processed using\n   oFIB.\n   ACTION:\n    \
    \  ofib_current_common_set =\n      intersection(ofib_current_common_set,{A,B}).\n\
    \      If ofib_current_common_set is empty, then there is no longer a\n      common\
    \ node in the set of pending link-state changes.\n         Set state to OFIB_ABANDONED.\n\
    \         Reset Hold_down_timer.\n         Trigger AAH mechanism.\n      If ofib_current_common\
    \ set is not empty, update the waiting list\n      and notification list as defined\
    \ in Section 4.  Note that in the\n      case of a single link event, the Link\
    \ State Packet received when\n      the router is in this state describes the\
    \ state change of the\n      other direction of the link; hence, no changes will\
    \ be made to the\n      waiting and notification lists.\n   EVENT: Reception of\
    \ a completion message.\n   ACTION: Remove the sender from the waiting list associated\
    \ with the\n   event identified in the completion message.\n   EVENT: Hold_down_timer\
    \ expires.\n   ACTION:\n      Set state to OFIB_ONGOING.\n      Start rank_timer\
    \ with computed rank.\n"
- title: 7.4.  OFIB_ONGOING
  contents:
  - "7.4.  OFIB_ONGOING\n   OFIB_ONGOING is the state of a router that is applying\
    \ the ordering\n   mechanism with respect to the set of Link State Packets collected\n\
    \   when in OFIB_HOLDING_DOWN or OFIB_HOLDING_UP state.\n   EVENT: rank_timer\
    \ expires or waiting list becomes empty.\n   ACTION:\n      Perform FIB updates\
    \ according to the change.\n      Send completion message to each member of the\
    \ notification list.\n      Set state to OFIB_STABLE.\n   EVENT: Reception of\
    \ a completion message.\n   ACTION: Remove the sender from the waiting list.\n\
    \   EVENT: Reception of a Link State Packet describing a link-state\n   change\
    \ event.\n   ACTION:\n      Set state to OFIB_ABANDONED.\n      Trigger AAH.\n\
    \      Start Hold_down_timer.\n"
- title: 7.5.  OFIB_ABANDONED
  contents:
  - "7.5.  OFIB_ABANDONED\n   OFIB_ABANDONED is the state of a router that has fallen\
    \ back to fast\n   convergence due to the reception of Link State Packets that\
    \ cannot be\n   dealt with together using oFIB.\n   EVENT: Reception of a Link\
    \ State Packet describing a link-state\n   change event.\n   ACTION: Trigger AAH,\
    \ reset AAH_Hold_down_timer.\n   EVENT: AAH_Hold_down_timer expires.\n   ACTION:\
    \ Set state to OFIB_STABLE.\n"
- title: 8.  Management Considerations
  contents:
  - "8.  Management Considerations\n   A system for recording the dynamics of the\
    \ convergence process needs\n   to be deployed in order to make a post hoc diagnosis\
    \ of the\n   reconvergence.  The sensitivity of applications to any packet\n \
    \  reordering introduced by the delayed convergence process will need to\n   be\
    \ studied.  However, these needs apply to any loop-free convergence\n   method\
    \ and are not specific to the ordered FIB method described in\n   this document.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This document requires only minor modifications\
    \ to existing routing\n   protocols and therefore does not add significant additional\
    \ security\n   risks.  However, a full security analysis would need to be provided\n\
    \   within the protocol-specific specifications proposed for deployment.\n   Security\
    \ considerations related to timer values set by routers are\n   noted in Appendix\
    \ B.4.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   We would like to thank Jean-Philippe Vasseur and Les\
    \ Ginsberg for\n   their useful suggestions and comments.\n"
- title: 11.  Informative References
  contents:
  - "11.  Informative References\n   [IPFRR-TUNNELS]\n              Bryant, S., Filsfils,\
    \ C., Previdi, S., and M. Shand, \"IP\n              Fast Reroute using tunnels\"\
    , Work in Progress, November\n              2007.\n   [ISO10589] International\
    \ Organization for Standardization,\n              \"Intermediate system to Intermediate\
    \ system intra-domain\n              routing information exchange protocol for\
    \ use in\n              conjunction with the protocol for providing the\n    \
    \          connectionless-mode Network Service (ISO 8473)\", ISO/IEC\n       \
    \       10589:2002, Second Edition, November 2002.\n   [LF-TIMERS]\n         \
    \     Atlas, A., Bryant, S., and M. Shand, \"Synchronisation of\n            \
    \  Loop Free Timer Values\", Work in Progress, February 2008.\n   [RFC2328]  Moy,\
    \ J., \"OSPF Version 2\", STD 54, RFC 2328, April 1998.\n   [RFC4090]  Pan, P.,\
    \ Swallow, G., and A. Atlas, \"Fast Reroute\n              Extensions to RSVP-TE\
    \ for LSP Tunnels\", RFC 4090, May\n              2005.\n   [RFC5714]  Shand,\
    \ M. and S. Bryant, \"IP Fast Reroute Framework\", RFC\n              5714, January\
    \ 2010.\n   [RFC5715]  Shand, M. and S. Bryant, \"A Framework for Loop-Free\n\
    \              Convergence\", RFC 5715, January 2010.\n   [refs.PFOB07]\n    \
    \          Francois, P. and O. Bonaventure, \"Avoiding transient loops\n     \
    \         during the convergence of link-state routing protocols\",\n        \
    \      IEEE/ACM Transactions on Networking, Vol. 15, No. 6, pp.\n            \
    \  1280-1292, December 2007,\n              <http://dx.doi.org/10.1109/TNET.2007.902686>.\n"
- title: Appendix A.  Candidate Methods of Safely Abandoning Loop-Free
  contents:
  - "Appendix A.  Candidate Methods of Safely Abandoning Loop-Free\n             Convergence\
    \ (AAH)\n   IP Fast Reroute [RFC5714] and loop-free convergence techniques\n \
    \  [RFC5715] can deal with single topology change events, multiple\n   correlated\
    \ change events, and in some cases even certain uncorrelated\n   events.  However,\
    \ in all cases, there are events that cannot be dealt\n   with, and the mechanism\
    \ needs to quickly revert to normal\n   convergence.  This is known as \"Abandoning\
    \ All Hope\" (AAH).\n   This appendix describes the outcome of a design study\
    \ into the AAH\n   problem and is included here to trigger discussion on the trade-offs\n\
    \   between complexity and robustness in the AAH solution space.\n"
- title: A.1.  Possible Solutions
  contents:
  - "A.1.  Possible Solutions\n   Two approaches to this problem have been proposed:\n\
    \   1.  Hold-down timer only.\n   2.  Synchronization of AAH state using AAH messages.\n\
    \   They are described below.\n"
- title: A.2.  Hold-Down Timer Only
  contents:
  - "A.2.  Hold-Down Timer Only\n   The \"hold-down timer only\" AAH method uses a\
    \ hold-down to acquire a\n   set of LSPs that should be processed together.  On\
    \ expiry of the\n   local hold-down timer, the router begins processing the batch\
    \ of LSPs\n   according to the loop-free prevention algorithm.\n   There are a\
    \ number of problems with this simple approach.  In some\n   cases, the timer\
    \ value will be too short to ensure that all the\n   related events have arrived\
    \ at all routers (perhaps because there was\n   some unexpected propagation delay,\
    \ or one or more of the events are\n   slow in being detected).  In other cases,\
    \ a completely unrelated\n   event may occur after the timer has expired but before\
    \ the processing\n   is complete.  In addition, since the timer is started at\
    \ each router\n   on reception of the first LSP announcing a topology change,\
    \ the\n   actual starting time is dependent upon the propagation time of the\n\
    \   first LSP.  So, for a subsequent event occurring around the time of\n   the\
    \ timer expiry, because of variations in propagation delay, it may\n   reach some\
    \ routers before the timer expires and others after it has\n   expired.  In the\
    \ former case, this LSP will be included in the set of\n   changes to be considered;\
    \ while in the latter, it will be excluded\n   leading to serious routing inconsistency.\
    \  In such cases, continuing\n   to operate the loop-free convergence protocol\
    \ may exacerbate the\n   situation.\n   The simple approach to this would be to\
    \ revert to normal convergence\n   (AAH) whenever an LSP is received after the\
    \ timer has expired.\n   However, this also has problems for the reasons above\
    \ and therefore\n   AAH must be a synchronous operation, i.e., it is necessary\
    \ to arrange\n   that an AAH invoked anywhere in the network causes ALL routers\
    \ to\n   invoke AAH.\n   It is also necessary to consider the means of exiting\
    \ the AAH state.\n   Again, the simplest method is to use a timer.  However, while\
    \ in AAH\n   state, any topology changes that are previously received or\n   subsequently\
    \ received should be processed immediately using the\n   traditional convergence\
    \ algorithms, i.e., without invoking controlled\n   convergence.  If the exit\
    \ from the AAH state is not correctly\n   synchronized, a new event may be processed\
    \ by some routers\n   immediately (as AAH), while those that have already left\
    \ AAH state\n   will treat it as the first of a new batch of changes and attempt\n\
    \   controlled convergence.  Thus, both entry and exit from the AAH state\n  \
    \ need to be synchronized.  A method of achieving this is described in\n   Appendix\
    \ A.3.\n"
- title: A.3.  AAH Messages
  contents:
  - "A.3.  AAH Messages\n   Like the simple timer AAH method, the \"AAH messages\"\
    \ method uses a\n   hold-down to acquire a set of LSPs that should be processed\
    \ together.\n   On expiry of the local hold-down timer, the router begins processing\n\
    \   the batch of LSPs according to the loop-free prevention algorithm.\n   This\
    \ is the same behavior as the hold-down timer only method.\n   However, if any\
    \ router, having started the loop-free convergence\n   process receives an LSP\
    \ that would trigger a topology change, it\n   locally abandons the controlled\
    \ convergence process and sends an AAH\n   message to all its neighbors.  This\
    \ eventually triggers all routers\n   to abandon the controlled convergence. \
    \ The routers remain in AAH\n   state (i.e., processing topology changes using\
    \ normal \"fast\"\n   convergence), until a period of quiescence has elapsed.\
    \  The exit\n   from AAH state is synchronized by using a two-step process.  To\n\
    \   achieve the required synchronization, two additional messages are\n   required,\
    \ AAH and AAH ACK.  The AAH message is reliably exchanged\n   between neighbors\
    \ using the AAH ACK message.  These could be\n   implemented as a new message\
    \ within the routing protocol or carried\n   in existing routing hello messages.\
    \  Two types of state machines are\n   needed -- a per-router AAH state machine\
    \ and a per-neighbor AAH state\n   machine (PNSM).  These are described below.\n"
- title: A.3.1.  Per-Router State Machine
  contents:
  - "A.3.1.  Per-Router State Machine\n   +-------------+----------+---------+--------+------------+----------+\n\
    \   | EVENT       |    Q     |   Hold  |   CC   |     AAH    | AAH-hold |\n  \
    \ +=============+==========+=========+========+============+==========+\n   |\
    \ RX LSP      |  Start   |    -    | TX-AAH |  Restart   |  TX-AAH  |\n   | triggering\
    \  |hold-down |         | Start  | AAH timer. |   Start  |\n   | change      |\
    \  timer.  |         |  AAH   |   [AAH]    |    AAH   |\n   |             |  [Hold]\
    \  |         | timer. |            |   timer. |\n   |             |          |\
    \         | [AAH]  |            |   [AAH]  |\n   +-------------+----------+---------+--------+------------+----------+\n\
    \   | RX AAH      |  TX-AAH  |  TX-AAH | TX-AAH |    [AAH]   |  TX-AAH  |\n  \
    \ |(Neighbor's  |Start AAH |  Start  | Start  |            |   Start  |\n   |\
    \  PNSM       |  timer.  |   AAH   |  AAH   |            |    AAH   |\n   |  processes\
    \  |  [AAH]   |  timer. | timer. |            |   timer. |\n   |  RX AAH.)   |\
    \          |  [AAH]  | [AAH]  |            |   [AAH]  |\n   +-------------+----------+---------+--------+------------+----------+\n\
    \   | Timer       |    -     | Trigger |    -   |    Start   |    [Q]   |\n  \
    \ | expiry      |          |   CC.   |        |  AAH-hold  |          |\n   |\
    \             |          |  [CC]   |        |   timer.   |          |\n   |  \
    \           |          |         |        | [AAH-hold] |          |\n   +-------------+----------+---------+--------+------------+----------+\n\
    \   | Controlled  |    -     |    -    |   [Q]  |      -     |     -    |\n  \
    \ | convergence |          |         |        |            |          |\n   |\
    \ completed   |          |         |        |            |          |\n   +-------------+----------+---------+--------+------------+----------+\n\
    \    RX = Reception\n    TX = Transmission\n    TX-AAH = Send \"go to TX-AAH\"\
    \ to all other PNSMs.\n                          Per-Router State Table\n   Operation\
    \ of the per-router state machine is as follows:\n   Operation of this state machine\
    \ under normal topology change involves\n   only states: Quiescent (Q), Hold-down\
    \ (Hold) and Controlled\n   Convergence (CC).  The remaining states are associated\
    \ with an AAH\n   event.\n   The resting state is Quiescent.  When the router\
    \ in the Quiescent\n   state receives an LSP indicating a topology change, which\
    \ would\n   normally trigger an SPF, it starts the hold-down timer and changes\n\
    \   state to Hold-down.  It normally remains in this state, collecting\n   additional\
    \ LSPs until the hold-down timer expires.  Note that all\n   routers must use\
    \ a common value for the hold-down timer.  When the\n   hold-down timer expires,\
    \ the router then enters Controlled\n   Convergence (CC) state and executes the\
    \ CC mechanism to reconverge\n   the topology.  When the CC process has completed\
    \ on the router, the\n   router re-enters the Quiescent state.\n   If this router\
    \ receives a topology-changing LSP whilst it is in the\n   CC state, it enters\
    \ AAH state and sends a \"go to TX-AAH\" command to\n   all per-neighbor state\
    \ machines; this causes each per-neighbor state\n   machine to signal this state\
    \ change to its neighbor.  Alternatively,\n   if this router receives an AAH message\
    \ from any of its neighbors\n   whilst in any state except AAH, it starts the\
    \ AAH timer and enters\n   the AAH state.  The per-neighbor state machine corresponding\
    \ to the\n   neighbor from which the AAH was received executes the RX AAH action\n\
    \   (which causes it to send an AAH ACK), while the remainder of\n   neighbors\
    \ are sent the \"go to TX-AAH\" command.  The result is that\n   the AAH is acknowledged\
    \ to the neighbor from which it was received\n   and propagated to all other neighbors.\
    \  On entering AAH state, all CC\n   timers are expired, and normal convergence\
    \ takes place.\n   Whilst in the AAH state, LSPs are processed in the traditional\n\
    \   manner.  Each time an LSP is received, the AAH timer is restarted.\n   In\
    \ an unstable network, ALL routers will remain in this state for\n   some time,\
    \ and the network will behave in the traditional\n   uncontrolled convergence\
    \ manner.\n   When the AAH timer expires, the router enters AAH-hold state and\n\
    \   starts the AAH-hold timer.  The purpose of the AAH-hold state is to\n   synchronize\
    \ the transition of the network from AAH to Quiescent.  The\n   additional state\
    \ ensures that the network cannot contain a mixture of\n   routers in both AAH\
    \ and Quiescent states.  If, whilst in AAH-hold\n   state the router receives\
    \ a topology changing LSP, it re-enters AAH\n   state and commands all per-neighbor\
    \ state machines to \"go to TX-AAH\".\n   If, whilst in AAH-hold state, the router\
    \ receives an AAH message from\n   one of its neighbors, it re-enters the AAH\
    \ state and commands all\n   other per-neighbor state machines to \"go to TX-AAH\"\
    .  Note that the\n   per-neighbor state machine receiving the AAH message will\n\
    \   autonomously acknowledge receipt of the AAH message.  Commanding the\n   per-neighbor\
    \ state machine to \"go to TX-AAH\" is necessary, because\n   routers may be in\
    \ a mixture of Quiescent, Hold-down, and AAH-hold\n   states, and it is necessary\
    \ to rendezvous the entire network back to\n   AAH state.\n   When the AAH-hold\
    \ timer expires, the router changes to Quiescent and\n   is ready for loop-free\
    \ convergence.\n"
- title: A.3.2.  Per-Neighbor State Machine
  contents:
  - "A.3.2.  Per-Neighbor State Machine\n   +----------------------------+--------------+-----------------------+\n\
    \   | EVENT                      | IDLE         | TX-AAH                |\n  \
    \ +============================+==============+=======================+\n   |\
    \ RX AAH                     | Send ACK.    | Send ACK.             |\n   |  \
    \                          | [IDLE]       | Cancel timer.         |\n   |    \
    \                        |              | [IDLE]                |\n   +----------------------------+--------------+-----------------------+\n\
    \   | RX ACK                     | ignore       | Cancel timer.         |\n  \
    \ |                            |              | [IDLE]                |\n   +----------------------------+--------------+-----------------------+\n\
    \   | RX \"go to TX-AAH\" from     | Send AAH     | ignore                |\n\
    \   | Router State Machine       | [TX-AAH]     |                       |\n  \
    \ +----------------------------+--------------+-----------------------+\n   |\
    \ Timer expires              | impossible   | Send AAH              |\n   |  \
    \                          |              | Restart timer.        |\n   |    \
    \                        |              | [TX-AAH]              |\n   +----------------------------+--------------+-----------------------+\n\
    \                         Per-Neighbor State Table\n   There is one instance of\
    \ the per-neighbor state machine (PNSM) for\n   each neighbor within the convergence\
    \ control domain.\n   The normal state is IDLE.\n   On command (\"go to TX-AAH\"\
    ) from the router state machine, the state\n   machine enters TX-AAH state, transmits\
    \ an AAH message to its\n   neighbor, and starts a timer.\n   On receipt of an\
    \ AAH ACK in state TX-AAH, the state machine cancels\n   the timer and enters\
    \ IDLE state.\n   In state IDLE, any AAH ACK message received is ignored.\n  \
    \ On expiry of the timer in state TX-AAH, the state machine transmits\n   an AAH\
    \ message to the neighbor and restarts the timer.  (The timer\n   cannot expire\
    \ in any other state.)\n   In any state, receipt of an AAH causes the state machine\
    \ to transmit\n   an AAH ACK and enter the IDLE state.\n   Note that for correct\
    \ operation the state machine must remain in\n   state TX-AAH until an AAH ACK\
    \ or an AAH is received or until the\n   state machine is deleted.  Deletion of\
    \ the per-neighbor state machine\n   occurs when routing determines that the neighbor\
    \ has gone away or\n   when the interface goes away.\n   When routing detects\
    \ a new neighbor, it creates a new instance of the\n   per-neighbor state machine\
    \ in state IDLE.  The consequent generation\n   of the router's own LSP will then\
    \ cause the router state machine to\n   execute the LSP receipt actions that,\
    \ if necessary, will result in\n   the new per-neighbor state machine receiving\
    \ a \"go to TX-AAH\" command\n   and transitioning to TX-AAH state.\n"
- title: Appendix B.  Synchronization of Loop-Free Timer Values
  contents:
  - "Appendix B.  Synchronization of Loop-Free Timer Values\n   This appendix provides\
    \ the reader with access to the design\n   considerations originally described\
    \ in [LF-TIMERS].\n"
- title: B.1.  Introduction
  contents:
  - "B.1.  Introduction\n   Most of the loop-free convergence mechanisms [RFC5715]\
    \ require one or\n   more convergence delay timers that must have a duration that\
    \ is\n   consistent throughout the routing domain.  This time is the worst-\n\
    \   case time that any router will take to calculate the new topology and\n  \
    \ to make the necessary changes to the FIB.  The timer is used by the\n   routers\
    \ to know when it is safe to transition between the loop-free\n   convergence\
    \ states.  The time taken by a router to complete each\n   phase of the loop-free\
    \ transition will be dependent on the size of\n   the network and the design and\
    \ implementation of the router.\n   Therefore, it can be expected that the optimum\
    \ delay will need to be\n   tuned from time to time as the network evolves.  Manual\
    \ configuration\n   of the timer is fraught for two reasons.  Firstly, it is always\n\
    \   difficult to ensure that the correct value is installed in all of the\n  \
    \ routers.  Secondly, if any change is introduced into the network that\n   results\
    \ in a need to change the timer (for example, due to a change\n   in hardware\
    \ or software version), then all of the routers need to be\n   reconfigured to\
    \ use the new timer value.  Therefore, it is desirable\n   that a means be provided\
    \ by which the convergence delay timer can be\n   automatically synchronized throughout\
    \ the network.\n"
- title: B.2.  Required Properties
  contents:
  - "B.2.  Required Properties\n   The timer synchronization mechanism must have the\
    \ following\n   properties:\n   o  The convergence delay time must be consistent\
    \ amongst all routers\n      that are converging on the new topology.\n   o  The\
    \ convergence delay time must be the highest delay required by\n      any router\
    \ in the new topology.\n   o  The mechanism must increase the delay when a new\
    \ router that\n      requires a higher delay than is currently in use is introduced\
    \ to\n      the network.\n   o  When the router that had the longest delay requirements\
    \ is removed\n      from the topology, the convergence delay timer value must,\
    \ within\n      some reasonable time, be reduced to the longest delay required\
    \ by\n      the remaining routers.\n   o  It must be possible for a router to\
    \ change the convergence delay\n      timer value that it requires.\n   o  A router\
    \ that is in multiple routing areas or is running multiple\n      routing protocols\
    \ may signal a different loop-free convergence\n      delay for each area and\
    \ for each protocol.\n   How a router determines the time that it needs to execute\
    \ each\n   convergence phase is an implementation issue and outside the scope\
    \ of\n   this specification.  However, a router that dynamically determines\n\
    \   its proposed timer value must do so in such a way that it does not\n   cause\
    \ the synchronized value to continually fluctuate.\n"
- title: B.3.  Mechanism
  contents:
  - "B.3.  Mechanism\n   The following mechanism is proposed.\n   A new information\
    \ element is introduced into the routing protocol\n   that specifies the maximum\
    \ time (in milliseconds) that the router\n   will take to calculate the new topology\
    \ and to update its FIB as a\n   result of any topology change.\n   When a topology\
    \ change occurs, the longest convergence delay time\n   required by any router\
    \ in the new topology is used by the loop-free\n   convergence mechanism.\n  \
    \ If a routing protocol message is issued that changes the convergence\n   delay\
    \ timer value but does not change the topology, the new timer\n   value must be\
    \ taken into consideration during the next loop-free\n   transition but must not\
    \ instigate a loop-free transition.\n   If a routing protocol message is issued\
    \ that changes the convergence\n   timer value and changes the topology, a loop-free\
    \ transition is\n   instigated, and the new timer value is taken into consideration.\n\
    \   The loop-free convergence mechanism should specify the action to be\n   taken\
    \ if a timer change (only) message and a topology change message\n   are independently\
    \ generated during the hold-off time.  A suitable\n   action would be to take\
    \ the same action that would be taken if two\n   uncorrelated topology changes\
    \ occurred in the network.\n   All routers that support loop-free convergence\
    \ must advertise a loop-\n   free convergence delay time.  The loop-free convergence\
    \ mechanism\n   must specify the action to be taken if a router does not advertise\
    \ a\n   convergence delay time.\n"
- title: B.4.  Security Considerations Related to Router Timer Values
  contents:
  - "B.4.  Security Considerations Related to Router Timer Values\n   If an abnormally\
    \ large timer value is proposed by a router, then\n   there is a danger that the\
    \ loop-free convergence process will take an\n   excessive amount of time.  If\
    \ during that time the routing protocol\n   signals the need for another transition,\
    \ the loop-free transition\n   will be abandoned and the default best-case (traditional)\
    \ convergence\n   mechanism used.\n   It is still undesirable that the routers\
    \ select a convergence delay\n   time that has an excessive value.  The maximum\
    \ value that can be\n   specified in the LSP or Link State Advertisement (LSA)\
    \ is limited\n   (through the use of a 16-bit field) to about 65 seconds.  When\n\
    \   sufficient implementation experience is gained, an architectural\n   constant\
    \ will be specified as the upper limit of the convergence\n   delay timer.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mike Shand\n   Individual Contributor\n   EMail: imc.shand@googlemail.com\n\
    \   Stewart Bryant\n   Cisco Systems\n   10 New Square, Bedfont Lakes\n   Feltham,\
    \ Middlesex  TW18 8HA\n   United Kingdom\n   EMail: stbryant@cisco.com\n   Stefano\
    \ Previdi\n   Cisco Systems\n   Via Del Serafico 200\n   00142 Roma\n   Italy\n\
    \   EMail: sprevidi@cisco.com\n   Clarence Filsfils\n   Cisco Systems\n   Brussels\n\
    \   Belgium\n   EMail: cfilsfil@cisco.com\n   Pierre Francois\n   Institute IMDEA\
    \ Networks\n   Avda. del Mar Mediterraneo, 22\n   Leganese  28918\n   Spain\n\
    \   EMail: pierre.francois@imdea.org\n   Olivier Bonaventure\n   Universite catholique\
    \ de Louvain\n   Place Ste Barbe, 2\n   Louvain-la-Neuve  1348\n   Belgium\n \
    \  EMail: Olivier.Bonaventure@uclouvain.be\n   URI:   http://inl.info.ucl.ac.be/\n"
