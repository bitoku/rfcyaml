- title: __initial_text__
  contents:
  - '       Recommendations for Filtering ICMPv6 Messages in Firewalls

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   In networks supporting IPv6, the Internet Control Message Protocol\n\
    \   version 6 (ICMPv6) plays a fundamental role with a large number of\n   functions,\
    \ and a correspondingly large number of message types and\n   options.  ICMPv6\
    \ is essential to the functioning of IPv6, but there\n   are a number of security\
    \ risks associated with uncontrolled\n   forwarding of ICMPv6 messages.  Filtering\
    \ strategies designed for the\n   corresponding protocol, ICMP, in IPv4 networks\
    \ are not directly\n   applicable, because these strategies are intended to accommodate\
    \ a\n   useful auxiliary protocol that may not be required for correct\n   functioning.\n\
    \   This document provides some recommendations for ICMPv6 firewall\n   filter\
    \ configuration that will allow propagation of ICMPv6 messages\n   that are needed\
    \ to maintain the functioning of the network but drop\n   messages that are potential\
    \ security risks.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Classifying ICMPv6 Messages  . . . . . . . . . . . .\
    \ . . . . .  6\n     2.1.  Error and Informational ICMPv6 Messages  . . . . .\
    \ . . . .  6\n     2.2.  Addressing of ICMPv6 . . . . . . . . . . . . . . . .\
    \ . . .  6\n     2.3.  Network Topology and Address Scopes  . . . . . . . . .\
    \ . .  7\n     2.4.  Role in Establishing and Maintaining Communication . . .\
    \ .  7\n   3.  Security Considerations  . . . . . . . . . . . . . . . . . . .\
    \  8\n     3.1.  Denial-of-Service Attacks  . . . . . . . . . . . . . . . .  9\n\
    \     3.2.  Probing . . . . . . . . . . . . . . . . . . . . . . . . . . 9\n  \
    \   3.3.  Redirection Attacks . . . . . . . . . . . . . . . . . . . . 9\n    \
    \ 3.4.  Renumbering Attacks  . . . . . . . . . . . . . . . . . . . 10\n     3.5.\
    \  Problems Resulting from ICMPv6 Transparency  . . . . . . . 10\n   4.  Filtering\
    \ Recommendations  . . . . . . . . . . . . . . . . . . 10\n     4.1.  Common Considerations\
    \  . . . . . . . . . . . . . . . . . . 11\n     4.2.  Interaction of Link-Local\
    \ Messages with\n           Firewall/Routers and Firewall/Bridges  . . . . . .\
    \ . . . . 12\n     4.3.  Recommendations for ICMPv6 Transit Traffic . . . . .\
    \ . . . 13\n       4.3.1.  Traffic That Must Not Be Dropped . . . . . . . . .\
    \ . . 14\n       4.3.2.  Traffic That Normally Should Not Be Dropped  . . . .\
    \ . 14\n       4.3.3.  Traffic That Will Be Dropped Anyway -- No Special\n   \
    \            Attention Needed . . . . . . . . . . . . . . . . . . . 15\n     \
    \  4.3.4.  Traffic for Which a Policy Should Be Defined . . . . . 16\n       4.3.5.\
    \  Traffic That Should Be Dropped Unless a Good Case\n               Can Be Made\
    \  . . . . . . . . . . . . . . . . . . . . . 17\n     4.4.  Recommendations for\
    \ ICMPv6 Local Configuration Traffic . . 18\n       4.4.1.  Traffic That Must\
    \ Not Be Dropped . . . . . . . . . . . 18\n       4.4.2.  Traffic That Normally\
    \ Should Not Be Dropped  . . . . . 19\n       4.4.3.  Traffic That Will Be Dropped\
    \ Anyway -- No Special\n               Attention Needed . . . . . . . . . . .\
    \ . . . . . . . . 19\n       4.4.4.  Traffic for Which a Policy Should Be Defined\
    \ . . . . . 20\n       4.4.5.  Traffic That Should Be Dropped Unless a Good Case\n\
    \               Can Be Made  . . . . . . . . . . . . . . . . . . . . . 21\n  \
    \ 5.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 21\n   6.\
    \  References . . . . . . . . . . . . . . . . . . . . . . . . . . 21\n     6.1.\
    \  Normative References . . . . . . . . . . . . . . . . . . . 21\n     6.2.  Informative\
    \ References . . . . . . . . . . . . . . . . . . 22\n   Appendix A.  Notes on\
    \ Individual ICMPv6 Messages . . . . . . . . . 24\n     A.1.  Destination Unreachable\
    \ Error Message  . . . . . . . . . . 24\n     A.2.  Packet Too Big Error Message\
    \ . . . . . . . . . . . . . . . 24\n     A.3.  Time Exceeded Error Message  .\
    \ . . . . . . . . . . . . . . 25\n     A.4.  Parameter Problem Error Message \
    \ . . . . . . . . . . . . . 25\n     A.5.  ICMPv6 Echo Request and Echo Response\
    \  . . . . . . . . . . 26\n     A.6.  Neighbor Solicitation and Neighbor Advertisement\n\
    \           Messages . . . . . . . . . . . . . . . . . . . . . . . . . 26\n  \
    \   A.7.  Router Solicitation and Router Advertisement Messages  . . 27\n    \
    \ A.8.  Redirect Messages  . . . . . . . . . . . . . . . . . . . . 27\n     A.9.\
    \  SEND Certificate Path Messages . . . . . . . . . . . . . . 27\n     A.10. Multicast\
    \ Listener Discovery Messages  . . . . . . . . . . 27\n     A.11. Multicast Router\
    \ Discovery Messages  . . . . . . . . . . . 28\n     A.12. Router Renumbering\
    \ Messages  . . . . . . . . . . . . . . . 28\n     A.13. Node Information Query\
    \ and Reply . . . . . . . . . . . . . 28\n     A.14. Mobile IPv6 Messages . .\
    \ . . . . . . . . . . . . . . . . . 28\n     A.15. Unused and Experimental Messages\
    \ . . . . . . . . . . . . . 29\n   Appendix B.  Example Script to Configure ICMPv6\
    \ Firewall Rules . . 30\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   When a network supports IPv6 [RFC2460], the Internet Control\
    \ Message\n   Protocol version 6 (ICMPv6) [RFC4443] plays a fundamental role\n\
    \   including being an essential component in establishing and\n   maintaining\
    \ communications both at the interface level and for\n   sessions to remote nodes.\
    \  This means that overly aggressive\n   filtering of ICMPv6 by firewalls may\
    \ have a detrimental effect on the\n   establishment and maintenance of IPv6 communications.\
    \  On the other\n   hand, allowing indiscriminate passage of all ICMPv6 messages\
    \ can be a\n   major security risk.  This document recommends a set of rules that\n\
    \   seek to balance effective IPv6 communication against the needs of\n   site\
    \ security.\n   In a few cases, the appropriate rules will depend on whether the\n\
    \   firewall is protecting\n   o  an individual host,\n   o  an end site where\
    \ all ICMPv6 messages originate or terminate\n      within the site, or\n   o\
    \  a transit site such as an Internet Service Provider's site where\n      some\
    \ ICMPv6 messages will be passing through.\n   The document suggests alternative\
    \ rules appropriate to each situation\n   where it is relevant.  It also notes\
    \ some situations where\n   alternative rules could be adopted according to the\
    \ nature of the\n   work being carried out on the site and consequent security\
    \ policies.\n   In general, Internet Service Providers should not filter ICMPv6\n\
    \   messages transiting their sites so that all the necessary\n   communication\
    \ elements are available to their customers to decide and\n   filter according\
    \ to their policy.\n   Readers familiar with ICMPv6 can skip to the recommended\
    \ filtering\n   rules in Section 4 and an example configuration script for Linux\n\
    \   Netfilter in Appendix B.\n   ICMPv6 has a large number of functions defined\
    \ in a number of sub-\n   protocols, and there are a correspondingly large number\
    \ of messages\n   and options within these messages.  The functions currently\
    \ defined\n   fall into a number of categories:\n   Returning Error Messages\n\
    \         *  Returning error messages to the source if a packet could not\n  \
    \          be delivered.  Four different error messages, each with a\n       \
    \     number of sub-types, are specified in [RFC4443].\n   Connection Checking\n\
    \         *  Simple monitoring of connectivity through echo requests and\n   \
    \         responses used by the ping and traceroute utilities.  The\n        \
    \    Echo Request and Echo Response messages are specified in\n            [RFC4443].\n\
    \   Discovery Functions\n         *  Finding neighbors (both routers and hosts)\
    \ connected to the\n            same link and determining their IP and link layer\
    \ addresses.\n            These messages are also used to check the uniqueness\
    \ of any\n            addresses that an interface proposes to use (Duplicate\n\
    \            Address Detection - DAD).  Four messages -- Neighbor\n          \
    \  Solicitation (NS), Neighbor Advertisement (NA), Router\n            Solicitation\
    \ (RS) and Router Advertisement (RA) -- are\n            specified in [RFC2461].\n\
    \         *  Ensuring that neighbors remain reachable using the same IP\n    \
    \        and link layer addresses after initial discovery (Neighbor\n        \
    \    Unreachability Discovery - NUD) and notifying neighbors of\n            changes\
    \ to link layer addresses.  Uses NS and NA [RFC2461].\n         *  Finding routers\
    \ and determining how to obtain IP addresses\n            to join the subnets\
    \ supported by the routers.  Uses RS and\n            RA [RFC2461].\n        \
    \ *  If stateless autoconfiguration of hosts is enabled,\n            communicating\
    \ prefixes and other configuration information\n            (including the link\
    \ Maximum Transmission Unit (MTU) and\n            suggested hop limit default)\
    \ from routers to hosts.  Uses RS\n            and RA [RFC2462].\n         * \
    \ When using SEcure Neighbor Discovery (SEND) to authenticate\n            a router\
    \ attached to a link, the Certificate Path\n            Solicitation and Advertisement\
    \ messages specified in\n            [RFC3971] are used by hosts to retrieve the\
    \ certificates\n            documenting the trust chain between a trust anchor\
    \ and the\n            router from the router.\n         *  Determining the MTU\
    \ along a path.  The Packet Too Big error\n            message is essential to\
    \ this function [RFC1981].\n         *  Providing a means to discover the IPv6\
    \ addresses associated\n            with the link layer address of an interface\
    \ (the inverse of\n            Neighbor Discovery, where the link layer address\
    \ is\n            discovered given an IPv6 address).  Two messages, Inverse\n\
    \            Neighbor Discovery Solicitation and Advertisement messages,\n   \
    \         are specified in [RFC3122].\n         *  Communicating which multicast\
    \ groups have listeners on a\n            link to the multicast capable routers\
    \ connected to the link.\n            Uses messages Multicast Listener Query,\
    \ Multicast Listener\n            Report (two versions), and Multicast Listener\
    \ Done (protocol\n            version 1 only) as specified in Multicast Listener\
    \ Discovery\n            MLDv1 [RFC2710] and MLDv2 [RFC3810].\n         *  Discovering\
    \ multicast routers attached to the local link.\n            Uses messages Multicast\
    \ Router Advertisement, Multicast\n            Router Solicitation, and Multicast\
    \ Router Termination as\n            specified in Multicast Router Discovery [RFC4286].\n\
    \   Reconfiguration Functions\n         *  Redirecting packets to a more appropriate\
    \ router on the\n            local link for the destination address or pointing\
    \ out that\n            a destination is actually on the local link even if it\
    \ is\n            not obvious from the IP address (where a link supports\n   \
    \         multiple subnets).  The Redirect message is specified in\n         \
    \   [RFC2461].\n         *  Supporting renumbering of networks by allowing the\
    \ prefixes\n            advertised by routers to be altered.  Uses NS, NA, RS\
    \ and RA\n            together with the Router Renumbering message specified in\n\
    \            [RFC2894].\n   Mobile IPv6 Support\n         *  Providing support\
    \ for some aspects of Mobile IPv6 especially\n            dealing with the IPv6\
    \ Mobile Home Agent functionality\n            provided in routers and needed\
    \ to support a Mobile node\n            homed on the link.  The Home Agent Address\
    \ Discovery Request\n            and Reply and the Mobile Prefix Solicitation\
    \ and\n            Advertisement messages are specified in [RFC3775].\n   Experimental\
    \ Extensions\n         *  An experimental extension to ICMPv6 specifies the ICMP\
    \ Node\n            Information Query and Response messages that can be used to\n\
    \            retrieve some basic information about nodes [RFC4620].\n        \
    \ *  The SEAmless IP MOBility (SEAMOBY) working group specified a\n          \
    \  pair of experimental protocols that use an ICMPv6 message\n            specified\
    \ in [RFC4065] to help in locating an access router\n            and moving the\
    \ attachment point of a mobile node from one\n            access router to another.\n\
    \   Many of these messages should only be used in a link-local context\n   rather\
    \ than end-to-end, and filters need to be concerned with the\n   type of addresses\
    \ in ICMPv6 packets as well as the specific source\n   and destination addresses.\n\
    \   Compared with the corresponding IPv4 protocol, ICMP, ICMPv6 cannot be\n  \
    \ treated as an auxiliary function with packets that can be dropped in\n   most\
    \ cases without damaging the functionality of the network.  This\n   means that\
    \ firewall filters for ICMPv6 have to be more carefully\n   configured than was\
    \ the case for ICMP, where typically a small set of\n   blanket rules could be\
    \ applied.\n"
- title: 2.  Classifying ICMPv6 Messages
  contents:
  - '2.  Classifying ICMPv6 Messages

    '
- title: 2.1.  Error and Informational ICMPv6 Messages
  contents:
  - "2.1.  Error and Informational ICMPv6 Messages\n   ICMPv6 messages contain an\
    \ eight-bit Type field interpreted as an\n   integer between 0 and 255.  Messages\
    \ with Type values less than or\n   equal to 127 are Error messages.  The remainder\
    \ are Informational\n   messages.  In general terms, Error messages with well-known\n\
    \   (standardized) Type values would normally be expected to be allowed\n   to\
    \ be sent to or pass through firewalls, and may be essential to the\n   establishment\
    \ and maintenance of communications (see Section 2.4)\n   whereas Informational\
    \ messages will generally be the subject of\n   policy rules, and those passing\
    \ through end site firewalls can, in\n   many but by no means all cases, be dropped\
    \ without damaging IPv6\n   communications.\n"
- title: 2.2.  Addressing of ICMPv6
  contents:
  - "2.2.  Addressing of ICMPv6\n   ICMPv6 messages are sent using various kinds of\
    \ source and\n   destination address types and scopes.  The source address is\
    \ usually\n   a unicast address, but during address autoconfiguration message\n\
    \   exchanges, the unspecified address (::) is also used as a source\n   address\
    \ [RFC2462].\n   Multicast Listener Discovery (MLD) Report and Done messages are\
    \ sent\n   with a link-local address as the IPv6 source address, if a valid\n\
    \   address is available on the interface.  If a valid link-local address\n  \
    \ is not available (e.g., one has not been configured), the message is\n   sent\
    \ with the unspecified address (::) as the IPv6 source address.\n   Subsequently,\
    \ the node will generate new MLD Report messages with\n   proper link-local source\
    \ address once it has been configured\n   [RFC3590].\n   The destination address\
    \ can be either a well-known multicast address,\n   a generated multicast address\
    \ such as the solicited-node multicast\n   address, an anycast address, or a unicast\
    \ address.  While many ICMPv6\n   messages use multicast addresses most of the\
    \ time, some also use\n   unicast addresses.  For instance, the Router Advertisement\
    \ messages\n   are sent to the all-nodes multicast address when unsolicited, but\
    \ can\n   also be sent to a unicast address in response to a specific Router\n\
    \   Solicitation, although this is rarely seen in current\n   implementations.\n"
- title: 2.3.  Network Topology and Address Scopes
  contents:
  - "2.3.  Network Topology and Address Scopes\n   ICMPv6 messages can be classified\
    \ according to whether they are meant\n   for end-to-end communications or local\
    \ communications within a link.\n   There are also messages that we can classify\
    \ as 'any-to-end', which\n   can be sent from any point within a path back to\
    \ the source;\n   typically, these are used to announce an error in processing\
    \ the\n   original packet.  For instance, the address resolution messages are\n\
    \   solely for local communications [RFC2461], whereas the Destination\n   Unreachable\
    \ messages are any-to-end in nature.  Generally, end-to-end\n   and any-to-end\
    \ messages might be expected to pass through firewalls\n   depending on policies\
    \ but local communications must not.\n   Local communications will use link-local\
    \ addresses in many cases but\n   may also use global unicast addresses when configuring\
    \ global\n   addresses, for example.  Also, some ICMPv6 messages used in local\n\
    \   communications may contravene the usual rules requiring compatible\n   scopes\
    \ for source and destination addresses.\n"
- title: 2.4.  Role in Establishing and Maintaining Communication
  contents:
  - "2.4.  Role in Establishing and Maintaining Communication\n   Many ICMPv6 messages\
    \ have a role in establishing or maintaining\n   communications to and from the\
    \ firewall and such messages have to be\n   accepted by firewalls for local delivery.\
    \  Generally, a firewall will\n   also be acting as a router so that all the messages\
    \ that might be\n   used in configuring a router interface need to be accepted\
    \ and\n   generated.  These messages should not transit through a firewall that\n\
    \   is also acting as a router as they are normally intended for use\n   within\
    \ a link.\n   On the other hand, most ICMPv6 error messages traveling end-to-end\
    \ or\n   any-to-end are essential to the establishment and maintenance of\n  \
    \ communications.  These messages must be passed through firewalls and\n   might\
    \ also be sent to and from firewalls to assist with establishment\n   and maintenance\
    \ of communications.  For example, the Packet Too Big\n   error message is needed\
    \ to determine the MTU along a path both when a\n   communication session is established\
    \ initially and later if the path\n   is rerouted during the session.\n   The\
    \ remaining ICMPv6 messages that are not associated with\n   communication establishment\
    \ or maintenance will normally be\n   legitimately attempting to pass through\
    \ a firewall from inside to out\n   or vice versa, but in most cases decisions\
    \ as to whether or not to\n   allow them to pass can be made on the basis of local\
    \ policy without\n   interfering with IPv6 communications.\n   The filtering rules\
    \ for the various message roles will generally be\n   different.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   This memo recommends filtering configurations\
    \ for firewalls designed\n   to minimize the security vulnerabilities that can\
    \ arise in using the\n   many different sub-protocols of ICMPv6 in support of\
    \ IPv6\n   communication.\n   A major concern is that it is generally not possible\
    \ to use IPsec or\n   other means to authenticate the sender and validate the\
    \ contents of\n   many ICMPv6 messages.  To a large extent, this is because a\
    \ site can\n   legitimately expect to receive certain error and other messages\
    \ from\n   almost any location in the wider Internet, and these messages may\n\
    \   occur as a result of the first message sent to a destination.\n   Establishing\
    \ security associations with all possible sources of\n   ICMPv6 messages is therefore\
    \ impossible.\n   The inability to establish security associations to protect\
    \ some\n   messages that are needed to establish and maintain communications\n\
    \   means that alternative means have to be used to reduce the\n   vulnerability\
    \ of sites to ICMPv6-based attacks.  The most common way\n   of doing this is\
    \ to establish strict filtering policies in site\n   firewalls to limit the unauthenticated\
    \ ICMPv6 messages that can pass\n   between the site and the wider Internet. \
    \ This makes control of\n   ICMPv6 filtering a delicate balance between protecting\
    \ the site by\n   dropping some of the ICMPv6 traffic passing through the firewall\
    \ and\n   allowing enough of the traffic through to make sure that efficient\n\
    \   communication can be established.\n   SEND [RFC3971] has been specified as\
    \ a means to improve the security\n   of local ICMPv6 communications.  SEND sidesteps\
    \ security association\n   bootstrapping problems that would result if IPsec was\
    \ used.  SEND\n   affects only link-local messages and does not limit the filtering\n\
    \   that firewalls can apply, and its role in security is therefore not\n   discussed\
    \ further in this document.\n   Firewalls will normally be used to monitor ICMPv6\
    \ to control the\n   following security concerns:\n"
- title: 3.1.  Denial-of-Service Attacks
  contents:
  - "3.1.  Denial-of-Service Attacks\n   ICMPv6 can be used to cause a denial of service\
    \ (DoS) in a number of\n   ways, including simply sending excessive numbers of\
    \ ICMPv6 packets to\n   destinations in the site and sending error messages that\
    \ disrupt\n   established communications by causing sessions to be dropped.  Also,\n\
    \   if spurious communication establishment or maintenance messages can\n   be\
    \ infiltrated onto a link, it might be possible to invalidate\n   legitimate addresses\
    \ or disable interfaces.\n"
- title: 3.2.  Probing
  contents:
  - "3.2.  Probing\n   A major security consideration is preventing attackers from\
    \ probing\n   the site to determine the topology and identify hosts that might\
    \ be\n   vulnerable to attack.  Carefully crafted but, often, malformed\n   messages\
    \ can be used to provoke ICMPv6 responses from hosts thereby\n   informing attackers\
    \ of potential targets for future attacks.\n   However, the very large address\
    \ space of IPv6 makes probing a less\n   effective weapon as compared with IPv4\
    \ provided that addresses are\n   not allocated in an easily guessable fashion.\
    \  This subject is\n   explored in more depth in [SCAN-IMP].\n"
- title: 3.3.  Redirection Attacks
  contents:
  - "3.3.  Redirection Attacks\n   A redirection attack could be used by a malicious\
    \ sender to perform\n   man-in-the-middle attacks or divert packets either to\
    \ a malicious\n   monitor or to cause DoS by blackholing the packets.  These attacks\n\
    \   would normally have to be carried out locally on a link using the\n   Redirect\
    \ message.  Administrators need to decide if the improvement\n   in efficiency\
    \ from using Redirect messages is worth the risk of\n   malicious use.  Factors\
    \ to consider include the physical security of\n   the link and the complexity\
    \ of addressing on the link.  For example,\n   on an open wireless link, redirection\
    \ would be a serious hazard due\n   to the lack of physical security.  On the\
    \ other hand, with a wired\n   link in a secure building with complex addressing\
    \ and redundant\n   routers, the efficiency gains might well outweigh the small\
    \ risk of a\n   rogue node being connected.\n"
- title: 3.4.  Renumbering Attacks
  contents:
  - "3.4.  Renumbering Attacks\n   Spurious Renumbering messages can lead to the disruption\
    \ of a site.\n   Although Renumbering messages are required to be authenticated\
    \ with\n   IPsec, so that it is difficult to carry out such attacks in practice,\n\
    \   they should not be allowed through a site boundary firewall.  On the\n   other\
    \ hand, a site may employ multiple \"layers\" of firewalls.  In\n   this case,\
    \ Renumbering messages might be expected to be allowed to\n   transit interior\
    \ firewalls but not pass across the outer boundary.\n"
- title: 3.5.  Problems Resulting from ICMPv6 Transparency
  contents:
  - "3.5.  Problems Resulting from ICMPv6 Transparency\n   Because some ICMPv6 error\
    \ packets need to be passed through a\n   firewall in both directions, malicious\
    \ users can potentially use\n   these messages to communicate between inside and\
    \ outside, bypassing\n   administrative inspection.  For example, it might be\
    \ possible to\n   carry out a covert conversation through the payload of ICMPv6\
    \ error\n   messages or tunnel inappropriate encapsulated IP packets in ICMPv6\n\
    \   error messages.  This problem can be alleviated by filtering ICMPv6\n   errors\
    \ using a deep packet inspection mechanism to ensure that the\n   packet carried\
    \ as a payload is associated with legitimate traffic to\n   or from the protected\
    \ network.\n"
- title: 4.  Filtering Recommendations
  contents:
  - "4.  Filtering Recommendations\n   When designing firewall filtering rules for\
    \ ICMPv6, the rules can be\n   divided into two classes:\n   o  Rules for ICMPv6\
    \ traffic transiting the firewall, with some minor\n      variations for\n   \
    \   *  firewalls protecting end sites or individual hosts, and\n      *  firewalls\
    \ protecting transit sites\n   o  Rules for ICMPv6 directed to interfaces on the\
    \ firewall\n   Firewalls integrated with an individual host (\"end host firewalls\"\
    )\n   can be treated as end site firewalls, but the special considerations\n \
    \  discussed in Section 4.2 may be relevant because the firewall is not\n   a\
    \ router.\n   This section suggests some common considerations that should be\
    \ borne\n   in mind when designing filtering rules and then categorizes the rules\n\
    \   for each class.  The categories are:\n   o  Messages that must not be dropped:\
    \ usually because establishment\n      or maintenance of communications will be\
    \ prevented or severely\n      impacted.\n   o  Messages that should not be dropped:\
    \ administrators need to have a\n      very good reason for dropping this category.\n\
    \   o  Messages that may be dropped in firewall/routers, but these\n      messages\
    \ may already be targeted to drop for other reasons (e.g.,\n      because they\
    \ are using link-local addresses) or because the\n      protocol specification\
    \ would cause the messages to be rejected if\n      they had passed through a\
    \ router.  Special considerations apply to\n      transit traffic if the firewall\
    \ is not a router as discussed in\n      Section 4.2.\n   o  Messages that administrators\
    \ may or may not want to drop depending\n      on local policy.\n   o  Messages\
    \ that administrators should consider dropping (e.g., ICMP\n      node information\
    \ name lookup queries).\n   More detailed analysis of each of the message types\
    \ can be found in\n   Appendix A.\n"
- title: 4.1.  Common Considerations
  contents:
  - "4.1.  Common Considerations\n   Depending on the classification of the message\
    \ to be filtered (see\n   Section 2), ICMPv6 messages should be filtered based\
    \ on the ICMPv6\n   type of the message and the type (unicast, multicast, etc.)\
    \ and scope\n   (link-local, global unicast, etc.) of source and destination\n\
    \   addresses.  In some cases, it may be desirable to filter on the Code\n   field\
    \ of ICMPv6 error messages.\n   Messages that can be authenticated on delivery,\
    \ probably because they\n   contain an IPsec AH header or ESP header with authentication,\
    \ may be\n   subject to less strict policies than messages that cannot be\n  \
    \ authenticated.  In the remainder of this section, we are generally\n   considering\
    \ what should be configured for unauthenticated messages.\n   In many cases, it\
    \ is not realistic to expect more than a tiny\n   fraction of the messages to\
    \ be authenticated.\n   Where messages are not essential to the establishment\
    \ or maintenance\n   of communications, local policy can be used to determine\
    \ whether a\n   message should be allowed or dropped.\n   Depending on the capabilities\
    \ of the firewall being configured, it\n   may be possible for the firewall to\
    \ maintain state about packets that\n   may result in error messages being returned\
    \ or about ICMPv6 packets\n   (e.g., Echo Requests) that are expected to receive\
    \ a specific\n   response.  This state may allow the firewall to perform more\
    \ precise\n   checks based on this state, and to apply limits on the number of\n\
    \   ICMPv6 packets accepted incoming or outgoing as a result of a packet\n   traveling\
    \ in the opposite direction.  The capabilities of firewalls\n   to perform such\
    \ stateful packet inspection vary from model to model,\n   and it is not assumed\
    \ that firewalls are uniformly capable in this\n   respect.\n   Firewalls that\
    \ are able to perform deep packet inspection may be able\n   to check the header\
    \ fields in the start of the errored packet that is\n   carried by ICMPv6 error\
    \ messages.  If the embedded packet has a\n   source address that does not match\
    \ the destination of the error\n   message, the packet can be dropped.  This provides\
    \ a partial defense\n   against some possible attacks on TCP that use spoofed\
    \ ICMPv6 error\n   messages, but the checks can also be carried out at the destination.\n\
    \   For further information on these attacks see [ICMP-ATTACKS].\n   In general,\
    \ the scopes of source and destination addresses of ICMPv6\n   messages should\
    \ be matched, and packets with mismatched addresses\n   should be dropped if they\
    \ attempt to transit a router.  However, some\n   of the address configuration\
    \ messages carried locally on a link may\n   legitimately have mismatched addresses.\
    \  Node implementations must\n   accept these messages delivered locally on a\
    \ link, and administrators\n   should be aware that they can exist.\n   ICMPv6\
    \ messages transiting firewalls inbound to a site may be treated\n   differently\
    \ depending on whether they are addressed to a node on the\n   site or to some\
    \ other node.  For end sites, packets addressed to\n   nodes not on the site should\
    \ be dropped, but would generally be\n   forwarded by firewalls on transit sites.\n"
- title: 4.2.  Interaction of Link-Local Messages with Firewall/Routers and
  contents:
  - "4.2.  Interaction of Link-Local Messages with Firewall/Routers and\n      Firewall/Bridges\n\
    \   Firewalls can be implemented both as IP routers (firewall/routers)\n   and\
    \ as link layer bridges (e.g., Ethernet bridges) that are\n   transparent to the\
    \ IP layer although they will actually be inspecting\n   the IP packets as they\
    \ pass through (firewall/bridges).\n   Many of the messages used for establishment\
    \ and maintenance of\n   communications on the local link will be sent with link-local\n\
    \   addresses for at least one of their source and destination.  Routers\n   conforming\
    \ to the IPv6 standards will not forward these packets;\n   there is no need to\
    \ configure additional rules to prevent these\n   packets traversing a firewall/router,\
    \ although administrators may\n   wish to configure rules that would drop these\
    \ packets for insurance\n   and as a means of monitoring for attacks.  Also, the\
    \ specifications\n   of ICMPv6 messages intended for use only on the local link\
    \ specify\n   various measures that would allow receivers to detect if the message\n\
    \   had passed through a router, including:\n   o  Requiring that the hop limit\
    \ in the IPv6 header is set to 255 on\n      transmission.  Receivers verify that\
    \ the hop limit is still 255,\n      to ensure that the packet has not passed\
    \ through a router.\n   o  Checking that the source address is a link-local unicast\
    \ address.\n   Accordingly, it is not essential to configure firewall/router rules\n\
    \   to drop out-of-specification packets of these types.  If they have\n   non-link-local\
    \ source and destination addresses, allowing them to\n   traverse the firewall/router,\
    \ they would be rejected because of the\n   checks performed at the destination.\
    \  Again, firewall administrators\n   may still wish to configure rules to log\
    \ or drop such out-of-\n   specification packets.\n   For firewall/bridges, slightly\
    \ different considerations apply.  The\n   physical links on either side of the\
    \ firewall/bridge are treated as a\n   single logical link for the purposes of\
    \ IP.  Hence, the link local\n   messages used for discovery functions on the\
    \ link must be allowed to\n   transit the transparent bridge.  Administrators\
    \ should ensures that\n   routers and hosts attached to the link containing the\
    \ firewall/bridge\n   are built to the correct specifications so that out-of-specification\n\
    \   packets are actually dropped as described in the earlier part of this\n  \
    \ section.\n   An end host firewall can generally be thought of as a special case\
    \ of\n   a firewall/bridge, but the only link-local messages that need to be\n\
    \   allowed through are those directed to the host's interface.\n"
- title: 4.3.  Recommendations for ICMPv6 Transit Traffic
  contents:
  - "4.3.  Recommendations for ICMPv6 Transit Traffic\n   This section recommends\
    \ rules that should be applied to ICMPv6\n   traffic attempting to transit a firewall.\n"
- title: 4.3.1.  Traffic That Must Not Be Dropped
  contents:
  - "4.3.1.  Traffic That Must Not Be Dropped\n   Error messages that are essential\
    \ to the establishment and\n   maintenance of communications:\n   o  Destination\
    \ Unreachable (Type 1) - All codes\n   o  Packet Too Big (Type 2)\n   o  Time\
    \ Exceeded (Type 3) - Code 0 only\n   o  Parameter Problem (Type 4) - Codes 1\
    \ and 2 only\n   Appendix A.4 suggests some more specific checks that could be\n\
    \   performed on Parameter Problem messages if a firewall has the\n   necessary\
    \ packet inspection capabilities.\n   Connectivity checking messages:\n   o  Echo\
    \ Request (Type 128)\n   o  Echo Response (Type 129)\n   For Teredo tunneling\
    \ [RFC4380] to IPv6 nodes on the site to be\n   possible, it is essential that\
    \ the connectivity checking messages are\n   allowed through the firewall.  It\
    \ has been common practice in IPv4\n   networks to drop Echo Request messages\
    \ in firewalls to minimize the\n   risk of scanning attacks on the protected network.\
    \  As discussed in\n   Section 3.2, the risks from port scanning in an IPv6 network\
    \ are much\n   less severe, and it is not necessary to filter IPv6 Echo Request\n\
    \   messages.\n"
- title: 4.3.2.  Traffic That Normally Should Not Be Dropped
  contents:
  - "4.3.2.  Traffic That Normally Should Not Be Dropped\n   Error messages other\
    \ than those listed in Section 4.3.1:\n   o  Time Exceeded (Type 3) - Code 1\n\
    \   o  Parameter Problem (Type 4) - Code 0\n   Mobile IPv6 messages that are needed\
    \ to assist mobility:\n   o  Home Agent Address Discovery Request (Type 144)\n\
    \   o  Home Agent Address Discovery Reply (Type 145)\n   o  Mobile Prefix Solicitation\
    \ (Type 146)\n   o  Mobile Prefix Advertisement (Type 147)\n   Administrators\
    \ may wish to apply more selective rules as described in\n   Appendix A.14 depending\
    \ on whether the site is catering for mobile\n   nodes that would normally be\
    \ at home on the site and/or foreign\n   mobile nodes roaming onto the site.\n"
- title: 4.3.3.  Traffic That Will Be Dropped Anyway -- No Special Attention
  contents:
  - "4.3.3.  Traffic That Will Be Dropped Anyway -- No Special Attention\n       \
    \ Needed\n   The messages listed in this section are all involved with local\n\
    \   management of nodes connected to the logical link on which they were\n   initially\
    \ transmitted.  All these messages should never be propagated\n   beyond the link\
    \ on which they were initially transmitted.  If the\n   firewall is a firewall/bridge\
    \ rather than a firewall/router, these\n   messages should be allowed to transit\
    \ the firewall as they would be\n   intended for establishing communications between\
    \ the two physical\n   parts of the link that are bridged into a single logical\
    \ link.\n   During normal operations, these messages will have destination\n \
    \  addresses, mostly link local but in some cases global unicast\n   addresses,\
    \ of interfaces on the local link.  No special action is\n   needed to filter\
    \ messages with link-local addresses in a firewall/\n   router.  As discussed\
    \ in Section 4.1, these messages are specified so\n   that either the receiver\
    \ is able to check that the message has not\n   passed through a router or it\
    \ will be dropped at the first router it\n   encounters.\n   Administrators may\
    \ also wish to consider providing rules in firewall/\n   routers to catch illegal\
    \ packets sent with hop limit = 1 to avoid\n   ICMPv6 Time Exceeded messages being\
    \ generated for these packets.\n   Address Configuration and Router Selection\
    \ messages (must be received\n   with hop limit = 255):\n   o  Router Solicitation\
    \ (Type 133)\n   o  Router Advertisement (Type 134)\n   o  Neighbor Solicitation\
    \ (Type 135)\n   o  Neighbor Advertisement (Type 136)\n   o  Redirect (Type 137)\n\
    \   o  Inverse Neighbor Discovery Solicitation (Type 141)\n   o  Inverse Neighbor\
    \ Discovery Advertisement (Type 142)\n   Link-local multicast receiver notification\
    \ messages (must have link-\n   local source address):\n   o  Listener Query (Type\
    \ 130)\n   o  Listener Report (Type 131)\n   o  Listener Done (Type 132)\n   o\
    \  Listener Report v2 (Type 143)\n   SEND Certificate Path notification messages\
    \ (must be received with\n   hop limit = 255):\n   o  Certificate Path Solicitation\
    \ (Type 148)\n   o  Certificate Path Advertisement (Type 149)\n   Multicast Router\
    \ Discovery messages (must have link-local source\n   address and hop limit =\
    \ 1):\n   o  Multicast Router Advertisement (Type 151)\n   o  Multicast Router\
    \ Solicitation (Type 152)\n   o  Multicast Router Termination (Type 153)\n"
- title: 4.3.4.  Traffic for Which a Policy Should Be Defined
  contents:
  - "4.3.4.  Traffic for Which a Policy Should Be Defined\n   The message type that\
    \ the experimental Seamoby protocols are using\n   will be expected to have to\
    \ cross site boundaries in normal\n   operation.  Transit sites must allow these\
    \ messages to transit the\n   site.  End site administrators should determine\
    \ if they need to\n   support these experiments and otherwise messages of this\
    \ type should\n   be dropped:\n   o  Seamoby Experimental (Type 150)\n   Error\
    \ messages not currently defined by IANA:\n   o  Unallocated Error messages (Types\
    \ 5-99 inclusive and 102-126\n      inclusive)\n   The base ICMPv6 specification\
    \ suggests that error messages that are\n   not explicitly known to a node should\
    \ be forwarded and passed to any\n   higher-level protocol that might be able\
    \ to interpret them.  There is\n   a small risk that such messages could be used\
    \ to provide a covert\n   channel or form part of a DoS attack.  Administrators\
    \ of end sites\n   should be aware of this and determine whether they wish to\
    \ allow\n   these messages through the firewall.  Firewalls protecting transit\n\
    \   sites must allow all types of error messages to transit the site but\n   may\
    \ adopt different policies for error messages addressed to nodes\n   within the\
    \ site.\n   All informational messages with types not explicitly assigned by\n\
    \   IANA, currently:\n   o  Unallocated Informational messages (Types 154-199\
    \ inclusive and\n      202-254 inclusive).\n   Note that the base ICMPv6 specification\
    \ requires that received\n   informational messages with unknown types must be\
    \ silently discarded.\n   Transit sites must allow these messages to transit the\
    \ site.  End\n   site administrators can either adopt a policy of allowing all\
    \ these\n   messages through the firewall, relying on end hosts to drop\n   unrecognized\
    \ messages, or drop all such messages at the firewall.\n   Different policies\
    \ could be adopted for inbound and outbound\n   messages.\n   If administrators\
    \ choose to implement policies that drop currently\n   unallocated error or informational\
    \ messages, it is important to\n   review the set of messages affected in case\
    \ new message types are\n   assigned by IANA.\n"
- title: 4.3.5.  Traffic That Should Be Dropped Unless a Good Case Can Be Made
  contents:
  - "4.3.5.  Traffic That Should Be Dropped Unless a Good Case Can Be Made\n   Node\
    \ Information enquiry messages should generally not be forwarded\n   across site\
    \ boundaries.  Some of these messages will be using non-\n   link-local unicast\
    \ addresses so that they will not necessarily be\n   dropped by address scope\
    \ limiting rules:\n   o  Node Information Query (Type 139)\n   o  Node Information\
    \ Response (Type 140)\n   Router Renumbering messages should not be forwarded\
    \ across site\n   boundaries.  As originally specified, these messages may use\
    \ a site\n   scope multicast address or a site local unicast address.  They should\n\
    \   be caught by standard rules that are intended to stop any packet with\n  \
    \ a multicast site scope or site local destination being forwarded\n   across\
    \ a site boundary provided these are correctly configured.\n   Since site local\
    \ addresses have now been deprecated, it seems likely\n   that changes may be\
    \ made to allow the use of unique local addresses\n   or global unicast addresses.\
    \  Should this happen, it will be\n   essential to explicitly filter these messages\
    \ at site boundaries.  If\n   a site has internal as well as boundary firewalls,\
    \ individual\n   policies should be established for the internal firewalls depending\n\
    \   on whether or not the site wishes to use Router Renumbering:\n   o  Router\
    \ Renumbering (Type 138)\n   Messages with types in the experimental allocations:\n\
    \   o  Types 100, 101, 200, and 201.\n   Messages using the extension type numbers\
    \ until such time as ICMPv6\n   needs to use such extensions:\n   o  Types 127\
    \ and 255.\n"
- title: 4.4.  Recommendations for ICMPv6 Local Configuration Traffic
  contents:
  - "4.4.  Recommendations for ICMPv6 Local Configuration Traffic\n   This section\
    \ recommends filtering rules for ICMPv6 traffic addressed\n   to an interface\
    \ on a firewall.  For a small number of messages, the\n   desired behavior may\
    \ differ between interfaces on the site or private\n   side of the firewall and\
    \ the those on the public Internet side of the\n   firewall.\n"
- title: 4.4.1.  Traffic That Must Not Be Dropped
  contents:
  - "4.4.1.  Traffic That Must Not Be Dropped\n   Error messages that are essential\
    \ to the establishment and\n   maintenance of communications:\n   o  Destination\
    \ Unreachable (Type 1) - All codes\n   o  Packet Too Big (Type 2)\n   o  Time\
    \ Exceeded (Type 3) - Code 0 only\n   o  Parameter Problem (Type 4) - Codes 1\
    \ and 2 only\n   Connectivity checking messages:\n   o  Echo Request (Type 128)\n\
    \   o  Echo Response (Type 129)\n   As discussed in Section 4.3.1, dropping connectivity\
    \ checking\n   messages will prevent the firewall being the destination of a Teredo\n\
    \   tunnel and it is not considered necessary to disable connectivity\n   checking\
    \ in IPv6 networks because port scanning is less of a security\n   risk.\n   There\
    \ are a number of other sets of messages that play a role in\n   configuring the\
    \ node and maintaining unicast and multicast\n   communications through the interfaces\
    \ of a node.  These messages must\n   not be dropped if the node is to successfully\
    \ participate in an IPv6\n   network.  The exception to this is the Redirect message\
    \ for which an\n   explicit policy decision should be taken (see Section 4.4.4).\n\
    \   Address Configuration and Router Selection messages:\n   o  Router Solicitation\
    \ (Type 133)\n   o  Router Advertisement (Type 134)\n   o  Neighbor Solicitation\
    \ (Type 135)\n   o  Neighbor Advertisement (Type 136)\n   o  Inverse Neighbor\
    \ Discovery Solicitation (Type 141)\n   o  Inverse Neighbor Discovery Advertisement\
    \ (Type 142)\n   Link-Local Multicast Receiver Notification messages:\n   o  Listener\
    \ Query (Type 130)\n   o  Listener Report (Type 131)\n   o  Listener Done (Type\
    \ 132)\n   o  Listener Report v2 (Type 143)\n   SEND Certificate Path Notification\
    \ messages:\n   o  Certificate Path Solicitation (Type 148)\n   o  Certificate\
    \ Path Advertisement (Type 149)\n   Multicast Router Discovery messages:\n   o\
    \  Multicast Router Advertisement (Type 151)\n   o  Multicast Router Solicitation\
    \ (Type 152)\n   o  Multicast Router Termination (Type 153)\n"
- title: 4.4.2.  Traffic That Normally Should Not Be Dropped
  contents:
  - "4.4.2.  Traffic That Normally Should Not Be Dropped\n   Error messages other\
    \ than those listed in Section 4.4.1:\n   o  Time Exceeded (Type 3) - Code 1\n\
    \   o  Parameter Problem (Type 4) - Code 0\n"
- title: 4.4.3.  Traffic That Will Be Dropped Anyway -- No Special Attention
  contents:
  - "4.4.3.  Traffic That Will Be Dropped Anyway -- No Special Attention\n       \
    \ Needed\n   Router Renumbering messages must be authenticated using IPsec, so\
    \ it\n   is not essential to filter these messages even if they are not\n   allowed\
    \ at the firewall/router:\n   o  Router Renumbering (Type 138)\n   Mobile IPv6\
    \ messages that are needed to assist mobility:\n   o  Home Agent Address Discovery\
    \ Request (Type 144)\n   o  Home Agent Address Discovery Reply (Type 145)\n  \
    \ o  Mobile Prefix Solicitation (Type 146)\n   o  Mobile Prefix Advertisement\
    \ (Type 147)\n   It may be desirable to drop these messages, especially on public\n\
    \   interfaces, if the firewall is not also providing mobile home agent\n   services,\
    \ but they will be ignored otherwise.\n   The message used by the experimental\
    \ Seamoby protocols may be dropped\n   but will be ignored if the service is not\
    \ implemented:\n   o  Seamoby Experimental (Type 150)\n"
- title: 4.4.4.  Traffic for Which a Policy Should Be Defined
  contents:
  - "4.4.4.  Traffic for Which a Policy Should Be Defined\n   Redirect messages provide\
    \ a significant security risk, and\n   administrators should take a case-by-case\
    \ approach to whether\n   firewalls, routers in general, and other nodes should\
    \ accept these\n   messages:\n   o  Redirect (Type 137)\n   Conformant nodes must\
    \ provide configuration controls that allow nodes\n   to control their behavior\
    \ with respect to Redirect messages so that\n   it should only be necessary to\
    \ install specific filtering rules under\n   special circumstances, such as if\
    \ Redirect messages are accepted on\n   private interfaces but not public ones.\n\
    \   If a node implements the experimental Node Information service, the\n   administrator\
    \ needs to make an explicit decision as to whether the\n   node should respond\
    \ to or accept Node Information messages on each\n   interface:\n   o  Node Information\
    \ Query (Type 139)\n   o  Node Information Response (Type 140)\n   It may be possible\
    \ to disable the service on the node if it is not\n   wanted, in which case these\
    \ messages will be ignored and no filtering\n   is necessary.\n   Error messages\
    \ not currently defined by IANA:\n   o  Unallocated Error messages (Types 5-99\
    \ inclusive and 102-126\n      inclusive)\n   The base ICMPv6 specification suggests\
    \ that error messages that are\n   not explicitly known to a node should be forwarded\
    \ and passed to any\n   higher-level protocol that might be able to interpret\
    \ them.  There is\n   a small risk that such messages could be used to provide\
    \ a covert\n   channel or form part of a DoS attack.  Administrators should be\
    \ aware\n   of this and determine whether they wish to allow these messages to\
    \ be\n   sent to the firewall.\n"
- title: 4.4.5.  Traffic That Should Be Dropped Unless a Good Case Can Be Made
  contents:
  - "4.4.5.  Traffic That Should Be Dropped Unless a Good Case Can Be Made\n   Messages\
    \ with types in the experimental allocations:\n   o  Types 100, 101, 200, and\
    \ 201.\n   Messages using the extension type numbers until such time as ICMPv6\n\
    \   needs to use such extensions:\n   o  Types 127 and 255.\n   All informational\
    \ messages with types not explicitly assigned by\n   IANA, currently:\n   o  Types\
    \ 154-199 inclusive and 202-254 inclusive.\n   Note that the base ICMPv6 specification\
    \ requires that received\n   informational messages with unknown types must be\
    \ silently discarded.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   Pekka Savola created the original IPv6 Security Overview\
    \ document,\n   which contained suggestions for ICMPv6 filter setups.  This\n\
    \   information has been incorporated into this document.  He has also\n   provided\
    \ important comments.  Some analysis of the classification of\n   ICMPv6 messages\
    \ and the term 'any-to-end' were used by Jari Arkko in\n   a document relating\
    \ to ICMPv6 and IKE.\n   The Netfilter configuration script in Appendix B was\
    \ contributed by\n   Suresh Krishnan.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC1981]       McCann, J., Deering, S., and J.\
    \ Mogul, \"Path MTU\n                   Discovery for IP version 6\", RFC 1981,\
    \ August 1996.\n   [RFC2460]       Deering, S. and R. Hinden, \"Internet Protocol,\n\
    \                   Version 6 (IPv6) Specification\", RFC 2460,\n            \
    \       December 1998.\n   [RFC2461]       Narten, T., Nordmark, E., and W. Simpson,\
    \ \"Neighbor\n                   Discovery for IP Version 6 (IPv6)\", RFC 2461,\n\
    \                   December 1998.\n   [RFC2462]       Thomson, S. and T. Narten,\
    \ \"IPv6 Stateless Address\n                   Autoconfiguration\", RFC 2462,\
    \ December 1998.\n   [RFC2710]       Deering, S., Fenner, W., and B. Haberman,\
    \ \"Multicast\n                   Listener Discovery (MLD) for IPv6\", RFC 2710,\n\
    \                   October 1999.\n   [RFC2894]       Crawford, M., \"Router Renumbering\
    \ for IPv6\",\n                   RFC 2894, August 2000.\n   [RFC3122]       Conta,\
    \ A., \"Extensions to IPv6 Neighbor Discovery for\n                   Inverse\
    \ Discovery Specification\", RFC 3122,\n                   June 2001.\n   [RFC3590]\
    \       Haberman, B., \"Source Address Selection for the\n                   Multicast\
    \ Listener Discovery (MLD) Protocol\",\n                   RFC 3590, September\
    \ 2003.\n   [RFC3775]       Johnson, D., Perkins, C., and J. Arkko, \"Mobility\n\
    \                   Support in IPv6\", RFC 3775, June 2004.\n   [RFC3810]    \
    \   Vida, R. and L. Costa, \"Multicast Listener Discovery\n                  \
    \ Version 2 (MLDv2) for IPv6\", RFC 3810, June 2004.\n   [RFC3971]       Arkko,\
    \ J., Kempf, J., Zill, B., and P. Nikander,\n                   \"SEcure Neighbor\
    \ Discovery (SEND)\", RFC 3971,\n                   March 2005.\n   [RFC4065]\
    \       Kempf, J., \"Instructions for Seamoby and Experimental\n             \
    \      Mobility Protocol IANA Allocations\", RFC 4065,\n                   July\
    \ 2005.\n   [RFC4286]       Haberman, B. and J. Martin, \"Multicast Router\n \
    \                  Discovery\", RFC 4286, December 2005.\n   [RFC4443]       Conta,\
    \ A., Deering, S., and M. Gupta, \"Internet\n                   Control Message\
    \ Protocol (ICMPv6) for the Internet\n                   Protocol Version 6 (IPv6)\
    \ Specification\", RFC 4443,\n                   March 2006.\n   [RFC4620]   \
    \    Crawford, M. and B. Haberman, \"IPv6 Node Information\n                 \
    \  Queries\", RFC 4620, August 2006.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [ICMP-ATTACKS]  Gont, F., \"ICMP attacks against\
    \ TCP\", Work\n                   in Progress, October 2006.\n   [RFC3041]   \
    \    Narten, T. and R. Draves, \"Privacy Extensions for\n                   Stateless\
    \ Address Autoconfiguration in IPv6\",\n                   RFC 3041, January 2001.\n\
    \   [RFC4380]       Huitema, C., \"Teredo: Tunneling IPv6 over UDP through\n \
    \                  Network Address Translations (NATs)\", RFC 4380,\n        \
    \           February 2006.\n   [SCAN-IMP]      Chown, T., \"IPv6 Implications\
    \ for Network Scanning\",\n                   Work in Progress, March 2007.\n\
    \   [netfilter]     netfilter.org, \"The netfilter.org project\",\n          \
    \         Firewalling, NAT and Packet Mangling for Linux ,\n                 \
    \  2006, <http://www.netfilter.org/>.\n"
- title: Appendix A.  Notes on Individual ICMPv6 Messages
  contents:
  - 'Appendix A.  Notes on Individual ICMPv6 Messages

    '
- title: A.1.  Destination Unreachable Error Message
  contents:
  - "A.1.  Destination Unreachable Error Message\n   Destination Unreachable (Type\
    \ 1) error messages [RFC4443] are sent\n   any-to-end between unicast addresses.\
    \  The message can be generated\n   from any node that a packet traverses when\
    \ the node is unable to\n   forward the packet for any reason except congestion.\n\
    \   Destination Unreachable messages are useful for debugging, but are\n   also\
    \ important to speed up cycling through possible addresses, as\n   they can avoid\
    \ the need to wait through timeouts and hence can be\n   part of the process of\
    \ establishing or maintaining communications.\n   It is a common practice in IPv4\
    \ to refrain from generating ICMP\n   Destination Unreachable messages in an attempt\
    \ to hide the networking\n   topology and/or service structure.  The same idea\
    \ could be applied to\n   IPv6, but this can slow down connection if a host has\
    \ multiple\n   addresses, some of which are deprecated, as they may be when using\n\
    \   privacy addresses [RFC3041].  If policy allows the generation of\n   ICMPv6\
    \ Destination Unreachable messages, it is important that nodes\n   provide the\
    \ correct reason code, one of: no route to destination,\n   administratively prohibited,\
    \ beyond scope of source address, address\n   unreachable, port unreachable, source\
    \ address failed ingress/egress\n   policy, or reject route to destination.\n"
- title: A.2.  Packet Too Big Error Message
  contents:
  - "A.2.  Packet Too Big Error Message\n   Packet Too Big (Type 2) error messages\
    \ [RFC4443] are sent any-to-end\n   between unicast addresses.  The message can\
    \ be generated from any\n   node that a packet traverses on the path when the\
    \ node is unable to\n   forward the packet because the packet is too large for\
    \ the MTU of the\n   next link.  This message is vital to the correct functioning\
    \ of Path\n   MTU Discovery and hence is part of the establishment and maintenance\n\
    \   of communications.  Since routers are not allowed to fragment\n   packets,\
    \ informing sources of the need to fragment large packets is\n   more important\
    \ than for IPv4.  If these messages are not generated\n   when appropriate, hosts\
    \ will continue to send packets that are too\n   large or may assume that the\
    \ route is congested.  Effectively, parts\n   of the Internet will become inaccessible.\n\
    \   If a network chooses to generate packets that are no larger than the\n   Guaranteed\
    \ Minimum MTU (1280 octets) and the site's links to the\n   wider Internet have\
    \ corresponding MTUs, Packet Too Big messages\n   should not be expected at the\
    \ firewall and could be dropped if they\n   arrive.\n"
- title: A.3.  Time Exceeded Error Message
  contents:
  - "A.3.  Time Exceeded Error Message\n   Time Exceeded (Type 3) error messages [RFC4443]\
    \ can occur in two\n   contexts:\n   o  Code 0 are generated at any node on the\
    \ path being taken by the\n      packet and sent, any-to-end between unicast addresses,\
    \ if the Hop\n      Limit value is decremented to zero at that node.\n   o  Code\
    \ 1 messages are generated at the destination node and sent\n      end-to-end\
    \ between unicast addresses if all the segments of a\n      fragmented message\
    \ are not received within the reassembly time\n      limit.\n   Code 0 messages\
    \ can be needed as part of the establishment of\n   communications if the path\
    \ to a particular destination requires an\n   unusually large number of hops.\n\
    \   Code 1 messages will generally only result from congestion in the\n   network,\
    \ and it is less essential to propagate these messages.\n"
- title: A.4.  Parameter Problem Error Message
  contents:
  - "A.4.  Parameter Problem Error Message\n   The great majority of Parameter Problem\
    \ (Type 4) error messages will\n   be generated by the destination node when processing\
    \ destination\n   options and other extension headers, and hence are sent end-to-end\n\
    \   between unicast addresses.  Exceptionally, these messages might be\n   generated\
    \ by any node on the path if a faulty or unrecognized hop-by-\n   hop option is\
    \ included or from any routing waypoint if there are\n   faulty or unrecognized\
    \ destination options associated with a Type 0\n   routing header.  In these cases,\
    \ the message will be sent any-to-end\n   using unicast source and destination\
    \ addresses.\n   Parameter Problem Code 1 (Unrecognized Next Header) and Code\
    \ 2\n   (Unrecognized IPv6 Option) messages may result if a node on the path\n\
    \   (usually the destination) is unable to process a correctly formed\n   extension\
    \ header or option.  If these messages are not returned to\n   the source, communication\
    \ cannot be established, as the source would\n   need to adapt its choice of options\
    \ probably because the destination\n   does not implement these capabilities.\
    \  Hence, these messages need to\n   be generated and allowed for effective IPv6\
    \ communications.\n   Code 0 (Erroneous Header) messages indicate a malformed\
    \ extension\n   header generally as a result of incorrectly generated packets.\n\
    \   Hence, these messages are useful for debugging purposes, but it is\n   unlikely\
    \ that a node generating such packets could establish\n   communications without\
    \ human intervention to correct the problem.\n   Code 2 messages, only, can be\
    \ generated for packets with multicast\n   destination addresses.\n   It is possible\
    \ that attackers may seek to probe or scan a network by\n   deliberately generating\
    \ packets with unknown extension headers or\n   options or with faulty headers.\
    \  If nodes generate Parameter Problem\n   error messages in all cases and these\
    \ outgoing messages are allowed\n   through firewalls, the attacker may be able\
    \ to identify active\n   addresses that can be probed further or learn about the\
    \ network\n   topology.  The vulnerability could be mitigated whilst helping to\n\
    \   establish communications if the firewall was able to examine such\n   error\
    \ messages in depth and was configured to only allow Parameter\n   Problem messages\
    \ for headers that had been standardized but were not\n   supported in the protected\
    \ network.  If the network administrator\n   believes that all nodes in the network\
    \ support all legitimate\n   extension headers, then it would be reasonable to\
    \ drop all outgoing\n   Parameter Problem messages.  Note that this is not a major\n\
    \   vulnerability in a well-designed IPv6 network because of the\n   difficulties\
    \ of performing scanning attacks (see Section 3.2).\n"
- title: A.5.  ICMPv6 Echo Request and Echo Response
  contents:
  - "A.5.  ICMPv6 Echo Request and Echo Response\n   Echo Request (Type 128) uses\
    \ unicast addresses as source addresses,\n   but may be sent to any legal IPv6\
    \ address, including multicast and\n   anycast addresses [RFC4443].  Echo Requests\
    \ travel end-to-end.\n   Similarly, Echo Responses (Type 129) travel end-to-end\
    \ and would have\n   a unicast address as destination and either a unicast or\
    \ anycast\n   address as source.  They are mainly used in combination for\n  \
    \ monitoring and debugging connectivity.  Their only role in\n   establishing\
    \ communication is that they are required when verifying\n   connectivity through\
    \ Teredo tunnels [RFC4380]: Teredo tunneling to\n   IPv6 nodes on the site will\
    \ not be possible if these messages are\n   blocked.  It is not thought that there\
    \ is a significant risk from\n   scanning attacks on a well-designed IPv6 network\
    \ (see Section 3.2),\n   and so connectivity checks should be allowed by default.\n"
- title: A.6.  Neighbor Solicitation and Neighbor Advertisement Messages
  contents:
  - "A.6.  Neighbor Solicitation and Neighbor Advertisement Messages\n   ICMPv6 Neighbor\
    \ Solicitation and Neighbor Advertisement (Type 135 and\n   136) messages are\
    \ essential to the establishment and maintenance of\n   communications on the\
    \ local link.  Firewalls need to generate and\n   accept these messages to allow\
    \ them to establish and maintain\n   interfaces onto their connected links.\n\
    \   Note that the address scopes of the source and destination addresses\n   on\
    \ Neighbor Solicitations and Neighbor Advertisements may not match.\n   The exact\
    \ functions that these messages will be carrying out depends\n   on the mechanism\
    \ being used to configure IPv6 addresses on the link\n   (Stateless, Stateful,\
    \ or Static configuration).\n"
- title: A.7.  Router Solicitation and Router Advertisement Messages
  contents:
  - "A.7.  Router Solicitation and Router Advertisement Messages\n   ICMPv6 Router\
    \ Solicitation and Router Advertisement (Type 133 and\n   134) messages are essential\
    \ to the establishment and maintenance of\n   communications on the local link.\
    \  Firewalls need to generate (since\n   the firewall will generally be behaving\
    \ as a router) and accept these\n   messages to allow them to establish and maintain\
    \ interfaces onto\n   their connected links.\n"
- title: A.8.  Redirect Messages
  contents:
  - "A.8.  Redirect Messages\n   ICMPv6 Redirect Messages (Type 137) are used on the\
    \ local link to\n   indicate that nodes are actually link-local and communications\
    \ need\n   not go via a router, or to indicate a more appropriate first-hop\n\
    \   router.  Although they can be used to make communications more\n   efficient,\
    \ they are not essential to the establishment of\n   communications and may be\
    \ a security vulnerability, particularly if a\n   link is not physically secured.\
    \  Conformant nodes are required to\n   provide configuration controls that suppress\
    \ the generation of\n   Redirect messages and allow them to be ignored on reception.\
    \  Using\n   Redirect messages on, for example, a wireless link without link level\n\
    \   encryption/authentication is particularly hazardous because the link\n   is\
    \ open to eavesdropping and packet injection.\n"
- title: A.9.  SEND Certificate Path Messages
  contents:
  - "A.9.  SEND Certificate Path Messages\n   SEND [RFC3971] uses two messages (Certificate\
    \ Path Solicitation and\n   Advertisement - Types 148 and 149) sent from nodes\
    \ to supposed\n   routers on the same local link to obtain a certificate path\
    \ that will\n   allow the node to authenticate the router's claim to provide routing\n\
    \   services for certain prefixes.  If a link connected to a firewall/\n   router\
    \ is using SEND, the firewall must be able to exchange these\n   messages with\
    \ nodes on the link that will use its routing services.\n"
- title: A.10.  Multicast Listener Discovery Messages
  contents:
  - "A.10.  Multicast Listener Discovery Messages\n   Multicast Listener Discovery\
    \ (MLD) version 1 [RFC2710] (Listener\n   Query, Listener Report, and Listener\
    \ Done - Types 130, 131, and 132)\n   and version 2 [RFC3810] (Listener Query\
    \ and Listener Report version 2\n   - Types 130 and 143) messages are sent on\
    \ the local link to\n   communicate between multicast-capable routers and nodes\
    \ that wish to\n   join or leave specific multicast groups.  Firewalls need to\
    \ be able\n   to generate Listener messages in order to establish communications\n\
    \   and may generate all the messages if they also provide multicast\n   routing\
    \ services.\n"
- title: A.11.  Multicast Router Discovery Messages
  contents:
  - "A.11.  Multicast Router Discovery Messages\n   Multicast Router Discovery [RFC4286]\
    \ (Router Advertisement, Router\n   Solicitation, and Router Termination - Types\
    \ 151, 152, and 153)\n   messages are sent by nodes on the local link to discover\
    \ multicast-\n   capable routers on the link, and by multicast-capable routers\
    \ to\n   notify other nodes of their existence or change of state.  Firewalls\n\
    \   that also act as multicast routers need to process these messages on\n   their\
    \ interfaces.\n"
- title: A.12.  Router Renumbering Messages
  contents:
  - "A.12.  Router Renumbering Messages\n   ICMPv6 Router Renumbering (Type 138) command\
    \ messages can be received\n   and results messages sent by routers to change\
    \ the prefixes that they\n   advertise as part of Stateless Address Configuration\
    \ [RFC2461],\n   [RFC2462].  These messages are sent end-to-end to either the\
    \ all-\n   routers multicast address (site or local scope) or specific unicast\n\
    \   addresses from a unicast address.\n   Router Renumbering messages are required\
    \ to be protected by IPsec\n   authentication since they could be readily misused\
    \ by attackers to\n   disrupt or divert site communications.  Renumbering messages\
    \ should\n   generally be confined to sites for this reason.\n"
- title: A.13.  Node Information Query and Reply
  contents:
  - "A.13.  Node Information Query and Reply\n   ICMPv6 Node Information Query and\
    \ Reply (Type 139 and 140) messages\n   defined in [RFC4620] are sent end-to-end\
    \ between unicast addresses,\n   and they can also be sent to link-local multicast\
    \ addresses.  They\n   can, in theory, be sent from any node to any other, but\
    \ it would\n   generally not be desirable for nodes outside the local site to\
    \ be\n   able to send queries to nodes within the site.  Also, these messages\n\
    \   are not required to be authenticated.\n"
- title: A.14.  Mobile IPv6 Messages
  contents:
  - "A.14.  Mobile IPv6 Messages\n   Mobile IPv6 [RFC3775] defines four ICMPv6 messages\
    \ that are used to\n   support mobile operations: Home Agent Address Discovery\
    \ Request, Home\n   Agent Address Discovery Reply, Mobile Prefix Solicitation,\
    \ and ICMP\n   Mobile Prefix Advertisement (Type 144, 145, 146, and 147) messages.\n\
    \   These messages are sent end-to-end between unicast addresses of a\n   mobile\
    \ node and its home agent.  They must be expected to be sent\n   from outside\
    \ a site and must traverse site-boundary firewalls to\n   reach the home agent\
    \ in order for Mobile IPv6 to function.  The two\n   Mobile prefix messages should\
    \ be protected by the use of IPsec\n   authentication.\n   o  If the site provides\
    \ home agents for mobile nodes, the firewall\n      must allow incoming Home Agent\
    \ Address Discovery Request and\n      Mobile Prefix Solicitation messages, and\
    \ outgoing Home Agent\n      Address Discovery Reply and ICMP Mobile Prefix Advertisement\n\
    \      messages.  It may be desirable to limit the destination addresses\n   \
    \   for the incoming messages to links that are known to support home\n      agents.\n\
    \   o  If the site is prepared to host roaming mobile nodes, the firewall\n  \
    \    must allow outgoing Home Agent Address Discovery Request and\n      Mobile\
    \ Prefix Solicitation messages, and incoming Home Agent\n      Address Discovery\
    \ Reply and ICMP Mobile Prefix Advertisement\n      messages.\n   o  Administrators\
    \ may find it desirable to prevent static nodes that\n      are normally resident\
    \ on the site from behaving as mobile nodes by\n      dropping Mobile IPv6 messages\
    \ from these nodes.\n"
- title: A.15.  Unused and Experimental Messages
  contents:
  - "A.15.  Unused and Experimental Messages\n   A large number of ICMPv6 Type values\
    \ are currently unused.  These\n   values have not had a specific function registered\
    \ with IANA.  This\n   section describes how to treat messages that attempt to\
    \ use these\n   Type values in a way of which the network administrator (and hence\n\
    \   the firewall) is not aware.\n   [RFC4443] defines a number of experimental\
    \ Type values for ICMPv6\n   Error and Informational messages, which could be\
    \ used in site-\n   specific ways.  These messages should be dropped by transit\
    \ networks\n   and at site edges.  They should also not be propagated within sites\n\
    \   unless the network administrator is explicitly made aware of usage.\n   The\
    \ codes reserved for future extension of the ICMPv6 Type space\n   should currently\
    \ be dropped as this functionality is as yet\n   undefined.\n   Any ICMPv6 Informational\
    \ messages of which the firewall is not aware\n   should be allowed to transit\
    \ through the firewall but should not be\n   accepted for local delivery on any\
    \ of its interfaces.\n   Unknown ICMPv6 Error messages should be allowed to pass\
    \ through\n   transit networks.  At end site boundaries any incoming ICMPv6 Error\n\
    \   messages of which the firewall is not aware may be allowed through\n   the\
    \ firewall in line with the specification in [RFC4443], which\n   requests delivery\
    \ of unknown error messages to higher-layer protocol\n   processes.  However,\
    \ administrators may wish to disallow forwarding\n   of these incoming messages\
    \ as a potential security risk.  Unknown\n   outgoing Error messages should be\
    \ dropped as the administrator should\n   be aware of all messages that could\
    \ be generated on the site.\n   Also, the SEAMOBY working group has had an ICMPv6\
    \ message (Type 150)\n   allocated for experimental use in two protocols.  This\
    \ message is\n   sent end-to-end and may need to pass through firewalls on sites\
    \ that\n   are supporting the experimental protocols.\n"
- title: Appendix B.  Example Script to Configure ICMPv6 Firewall Rules
  contents:
  - "Appendix B.  Example Script to Configure ICMPv6 Firewall Rules\n   This appendix\
    \ contains an example script to implement most of the\n   rules suggested in this\
    \ document when using the Netfilter packet\n   filtering system for Linux [netfilter].\
    \  When used with IPv6, the\n   'ip6tables' command is used to configure packet\
    \ filtering rules for\n   the Netfilter system.  The script is targeted at a simple\
    \ enterprise\n   site that may or may not support Mobile IPv6.\n   #!/bin/bash\n\
    \   # Set of prefixes on the trusted (\"inner\") side of the firewall\n   export\
    \ INNER_PREFIXES=\"2001:DB8:85::/60\"\n   # Set of hosts providing services so\
    \ that they can be made pingable\n   export PINGABLE_HOSTS=\"2001:DB8:85::/64\"\
    \n   # Configuration option: Change this to 1 if errors allowed only for\n   #\
    \ existing sessions\n   export STATE_ENABLED=0\n   # Configuration option: Change\
    \ this to 1 if messages to/from link\n   # local addresses should be filtered.\n\
    \   # Do not use this if the firewall is a bridge.\n   # Optional for firewalls\
    \ that are routers.\n   export FILTER_LINK_LOCAL_ADDRS=0\n   # Configuration option:\
    \ Change this to 0 if the site does not support\n   # Mobile IPv6 Home Agents\
    \ - see Appendix A.14\n   export HOME_AGENTS_PRESENT=1\n   # Configuration option:\
    \ Change this to 0 if the site does not support\n   # Mobile IPv6 mobile nodes\
    \ being present on the site -\n   # see Appendix A.14\n   export MOBILE_NODES_PRESENT=1\n\
    \   ip6tables -N icmpv6-filter\n   ip6tables -A FORWARD -p icmpv6 -j icmpv6-filter\n\
    \   # Match scope of src and dest else deny\n   # This capability is not provided\
    \ for in base ip6tables functionality\n   # An extension (agr) exists which may\
    \ support it.\n   #@TODO@\n   # ECHO REQUESTS AND RESPONSES\n   # ===========================\n\
    \   # Allow outbound echo requests from prefixes which belong to the site\n  \
    \ for inner_prefix in $INNER_PREFIXES\n   do\n     ip6tables -A icmpv6-filter\
    \ -p icmpv6 -s $inner_prefix \\\n           --icmpv6-type echo-request -j ACCEPT\n\
    \   done\n   # Allow inbound echo requests towards only predetermined hosts\n\
    \   for pingable_host in $PINGABLE_HOSTS\n   do\n     ip6tables -A icmpv6-filter\
    \ -p icmpv6 -d $pingable_host \\\n           --icmpv6-type echo-request -j ACCEPT\n\
    \   done\n   if [ \"$STATE_ENABLED\" -eq \"1\" ]\n   then\n     # Allow incoming\
    \ and outgoing echo reply messages\n     # only for existing sessions\n     ip6tables\
    \ -A icmpv6-filter -m state -p icmpv6 \\\n           --state ESTABLISHED,RELATED\
    \ --icmpv6-type \\\n         echo-reply -j ACCEPT\n   else\n     # Allow both\
    \ incoming and outgoing echo replies\n     for pingable_host in $PINGABLE_HOSTS\n\
    \     do\n       # Outgoing echo replies from pingable hosts\n       ip6tables\
    \ -A icmpv6-filter -p icmpv6 -s $pingable_host \\\n           --icmpv6-type echo-reply\
    \ -j ACCEPT\n     done\n     # Incoming echo replies to prefixes which belong\
    \ to the site\n     for inner_prefix in $INNER_PREFIXES\n     do\n       ip6tables\
    \ -A icmpv6-filter -p icmpv6 -d $inner_prefix \\\n           --icmpv6-type echo-reply\
    \ -j ACCEPT\n     done\n   fi\n   # Deny icmps to/from link local addresses\n\
    \   # If the firewall is a router:\n   #    These rules should be redundant as\
    \ routers should not forward\n   #    link local addresses but to be sure...\n\
    \   # DO NOT ENABLE these rules if the firewall is a bridge\n   if [ \"$FILTER_LINK_LOCAL_ADDRS\"\
    \ -eq \"1\" ]\n   then\n     ip6tables -A icmpv6-filter -p icmpv6 -d fe80::/10\
    \ -j DROP\n     ip6tables -A icmpv6-filter -p icmpv6 -s fe80::/10 -j DROP\n  \
    \ fi\n   # Drop echo replies which have a multicast address as a\n   # destination\n\
    \   ip6tables -A icmpv6-filter -p icmpv6 -d ff00::/8 \\\n           --icmpv6-type\
    \ echo-reply -j DROP\n   # DESTINATION UNREACHABLE ERROR MESSAGES\n   # ======================================\n\
    \   if [ \"$STATE_ENABLED\" -eq \"1\" ]\n   then\n     # Allow incoming destination\
    \ unreachable messages\n     # only for existing sessions\n     for inner_prefix\
    \ in $INNER_PREFIXES\n     do\n       ip6tables -A icmpv6-filter -m state -p icmpv6\
    \ \\\n            -d $inner_prefix \\\n            --state ESTABLISHED,RELATED\
    \ --icmpv6-type \\\n            destination-unreachable -j ACCEPT\n     done\n\
    \   else\n     # Allow incoming destination unreachable messages\n     for inner_prefix\
    \ in $INNER_PREFIXES\n     do\n       ip6tables -A icmpv6-filter -p icmpv6 -d\
    \ $inner_prefix \\\n            --icmpv6-type destination-unreachable -j ACCEPT\n\
    \     done\n   fi\n   # Allow outgoing destination unreachable messages\n   for\
    \ inner_prefix in $INNER_PREFIXES\n   do\n     ip6tables -A icmpv6-filter -p icmpv6\
    \ -s $inner_prefix \\\n            --icmpv6-type destination-unreachable -j ACCEPT\n\
    \   done\n   # PACKET TOO BIG ERROR MESSAGES\n   # =============================\n\
    \   if [ \"$STATE_ENABLED\" -eq \"1\" ]\n   then\n     # Allow incoming Packet\
    \ Too Big messages\n     # only for existing sessions\n     for inner_prefix in\
    \ $INNER_PREFIXES\n     do\n       ip6tables -A icmpv6-filter -m state -p icmpv6\
    \ \\\n            -d $inner_prefix \\\n            --state ESTABLISHED,RELATED\
    \ \\\n            --icmpv6-type packet-too-big \\\n            -j ACCEPT\n   \
    \  done\n   else\n     # Allow incoming Packet Too Big messages\n     for inner_prefix\
    \ in $INNER_PREFIXES\n     do\n       ip6tables -A icmpv6-filter -p icmpv6 -d\
    \ $inner_prefix \\\n            --icmpv6-type packet-too-big -j ACCEPT\n     done\n\
    \   fi\n   # Allow outgoing Packet Too Big messages\n   for inner_prefix in $INNER_PREFIXES\n\
    \   do\n     ip6tables -A icmpv6-filter -p icmpv6 -s $inner_prefix \\\n      \
    \      --icmpv6-type packet-too-big -j ACCEPT\n   done\n   # TIME EXCEEDED ERROR\
    \ MESSAGES\n   # ============================\n   if [ \"$STATE_ENABLED\" -eq\
    \ \"1\" ]\n   then\n     # Allow incoming time exceeded code 0 messages\n    \
    \ # only for existing sessions\n     for inner_prefix in $INNER_PREFIXES\n   \
    \  do\n       ip6tables -A icmpv6-filter -m state -p icmpv6 \\\n            -d\
    \ $inner_prefix \\\n            --state ESTABLISHED,RELATED --icmpv6-type packet-too-big\
    \ \\\n            -j ACCEPT\n     done\n   else\n     # Allow incoming time exceeded\
    \ code 0 messages\n     for inner_prefix in $INNER_PREFIXES\n     do\n       ip6tables\
    \ -A icmpv6-filter -p icmpv6 -d $inner_prefix \\\n            --icmpv6-type ttl-zero-during-transit\
    \ -j ACCEPT\n     done\n   fi\n   #@POLICY@\n   # Allow incoming time exceeded\
    \ code 1 messages\n   for inner_prefix in $INNER_PREFIXES\n   do\n   ip6tables\
    \ -A icmpv6-filter -p icmpv6 -d $inner_prefix \\\n            --icmpv6-type ttl-zero-during-reassembly\
    \ -j ACCEPT\n   done\n   # Allow outgoing time exceeded code 0 messages\n   for\
    \ inner_prefix in $INNER_PREFIXES\n   do\n   ip6tables -A icmpv6-filter -p icmpv6\
    \ -s $inner_prefix \\\n            --icmpv6-type ttl-zero-during-transit -j ACCEPT\n\
    \   done\n   #@POLICY@\n   # Allow outgoing time exceeded code 1 messages\n  \
    \ for inner_prefix in $INNER_PREFIXES\n   do\n   ip6tables -A icmpv6-filter -p\
    \ icmpv6 -s $inner_prefix \\\n            --icmpv6-type ttl-zero-during-reassembly\
    \ -j ACCEPT\n   done\n   # PARAMETER PROBLEM ERROR MESSAGES\n   # ================================\n\
    \   if [ \"$STATE_ENABLED\" -eq \"1\" ]\n   then\n     # Allow incoming parameter\
    \ problem code 1 and 2 messages\n     # for an existing session\n     for inner_prefix\
    \ in $INNER_PREFIXES\n     do\n       ip6tables -A icmpv6-filter -m state -p icmpv6\
    \ \\\n            -d $inner_prefix \\\n            --state ESTABLISHED,RELATED\
    \ --icmpv6-type \\\n            unknown-header-type \\\n            -j ACCEPT\n\
    \       ip6tables -A icmpv6-filter -m state -p icmpv6 \\\n            -d $inner_prefix\
    \ \\\n            --state ESTABLISHED,RELATED \\\n            --icmpv6-type unknown-option\
    \ \\\n            -j ACCEPT\n     done\n   fi\n   # Allow outgoing parameter problem\
    \ code 1 and code 2 messages\n   for inner_prefix in $INNER_PREFIXES\n   do\n\
    \     ip6tables -A icmpv6-filter -p icmpv6 -s $inner_prefix \\\n            --icmpv6-type\
    \ unknown-header-type -j ACCEPT\n     ip6tables -A icmpv6-filter -p icmpv6 -s\
    \ $inner_prefix \\\n            --icmpv6-type unknown-option -j ACCEPT\n   done\n\
    \   #@POLICY@\n   # Allow incoming and outgoing parameter\n   # problem code 0\
    \ messages\n   for inner_prefix in $INNER_PREFIXES\n   do\n     ip6tables -A icmpv6-filter\
    \ -p icmpv6 \\\n            --icmpv6-type bad-header \\\n            -j ACCEPT\n\
    \   done\n   # NEIGHBOR DISCOVERY MESSAGES\n   # ===========================\n\
    \   # Drop NS/NA messages both incoming and outgoing\n   ip6tables -A icmpv6-filter\
    \ -p icmpv6 \\\n            --icmpv6-type neighbor-solicitation -j DROP\n   ip6tables\
    \ -A icmpv6-filter -p icmpv6 \\\n            --icmpv6-type neighbor-advertisement\
    \ -j DROP\n   # Drop RS/RA messages both incoming and outgoing\n   ip6tables -A\
    \ icmpv6-filter -p icmpv6 \\\n            --icmpv6-type router-solicitation -j\
    \ DROP\n   ip6tables -A icmpv6-filter -p icmpv6 \\\n            --icmpv6-type\
    \ router-advertisement -j DROP\n   # Drop Redirect messages both incoming and\
    \ outgoing\n   ip6tables -A icmpv6-filter -p icmpv6 --icmpv6-type redirect -j\
    \ DROP\n   # MLD MESSAGES\n   # ============\n   # Drop incoming and outgoing\n\
    \   # Multicast Listener queries (MLDv1 and MLDv2)\n   ip6tables -A icmpv6-filter\
    \ -p icmpv6 --icmpv6-type 130 -j DROP\n   # Drop incoming and outgoing Multicast\
    \ Listener reports (MLDv1)\n   ip6tables -A icmpv6-filter -p icmpv6 --icmpv6-type\
    \ 131 -j DROP\n   # Drop incoming and outgoing Multicast Listener Done messages\
    \ (MLDv1)\n   ip6tables -A icmpv6-filter -p icmpv6 --icmpv6-type 132 -j DROP\n\
    \   # Drop incoming and outgoing Multicast Listener reports (MLDv2)\n   ip6tables\
    \ -A icmpv6-filter -p icmpv6 --icmpv6-type 143 -j DROP\n   # ROUTER RENUMBERING\
    \ MESSAGES\n   # ===========================\n   # Drop router renumbering messages\n\
    \   ip6tables -A icmpv6-filter -p icmpv6 --icmpv6-type 138 -j DROP\n   # NODE\
    \ INFORMATION QUERIES\n   # ========================\n   # Drop node information\
    \ queries (139) and replies (140)\n   ip6tables -A icmpv6-filter -p icmpv6 --icmpv6-type\
    \ 139 -j DROP\n   ip6tables -A icmpv6-filter -p icmpv6 --icmpv6-type 140 -j DROP\n\
    \   # MOBILE IPv6 MESSAGES\n   # ====================\n   # If there are mobile\
    \ ipv6 home agents present on the\n   # trusted side allow\n   if [ \"$HOME_AGENTS_PRESENT\"\
    \ -eq \"1\" ]\n   then\n     for inner_prefix in $INNER_PREFIXES\n     do\n  \
    \     #incoming Home Agent address discovery request\n       ip6tables -A icmpv6-filter\
    \ -p icmpv6 -d $inner_prefix \\\n            --icmpv6-type 144 -j ACCEPT\n   \
    \    #outgoing Home Agent address discovery reply\n       ip6tables -A icmpv6-filter\
    \ -p icmpv6 -s $inner_prefix \\\n            --icmpv6-type 145 -j ACCEPT\n   \
    \    #incoming Mobile prefix solicitation\n       ip6tables -A icmpv6-filter -p\
    \ icmpv6 -d $inner_prefix \\\n            --icmpv6-type 146 -j ACCEPT\n      \
    \ #outgoing Mobile prefix advertisement\n       ip6tables -A icmpv6-filter -p\
    \ icmpv6 -s $inner_prefix \\\n            --icmpv6-type 147 -j ACCEPT\n     done\n\
    \   fi\n   # If there are roaming mobile nodes present on the\n   # trusted side\
    \ allow\n   if [ \"$MOBILE_NODES_PRESENT\" -eq \"1\" ]\n   then\n     for inner_prefix\
    \ in $INNER_PREFIXES\n     do\n       #outgoing Home Agent address discovery request\n\
    \       ip6tables -A icmpv6-filter -p icmpv6 -s $inner_prefix \\\n           \
    \ --icmpv6-type 144 -j ACCEPT\n       #incoming Home Agent address discovery reply\n\
    \       ip6tables -A icmpv6-filter -p icmpv6 -d $inner_prefix \\\n           \
    \ --icmpv6-type 145 -j ACCEPT\n       #outgoing Mobile prefix solicitation\n \
    \      ip6tables -A icmpv6-filter -p icmpv6 -s $inner_prefix \\\n            --icmpv6-type\
    \ 146 -j ACCEPT\n       #incoming Mobile prefix advertisement\n       ip6tables\
    \ -A icmpv6-filter -p icmpv6 -d $inner_prefix \\\n            --icmpv6-type 147\
    \ -j ACCEPT\n     done\n   fi\n   # DROP EVERYTHING ELSE\n   # ====================\n\
    \   ip6tables -A icmpv6-filter -p icmpv6 -j DROP\n        Example Netfilter Configuration\
    \ Script for ICMPv6 Filtering\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Elwyn B. Davies\n   Consultant\n   Soham, Cambs\n   UK\n\
    \   Phone: +44 7889 488 335\n   EMail: elwynd@dial.pipex.com\n   Janos Mohacsi\n\
    \   NIIF/HUNGARNET\n   Victor Hugo u. 18-22\n   Budapest,   H-1132\n   Hungary\n\
    \   Phone: +36 1 4503070\n   EMail: mohacsi@niif.hu\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
