- title: __initial_text__
  contents:
  - '    Using the NETCONF Configuration Protocol over Secure SHell (SSH)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a method for invoking and running the Network\n\
    \   Configuration Protocol (NETCONF) within a Secure Shell (SSH) session\n   as\
    \ an SSH subsystem.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Requirements Terminology ........................................2\n  \
    \ 3. Starting NETCONF over SSH .......................................2\n    \
    \  3.1. Capabilities Exchange ......................................3\n   4. Using\
    \ NETCONF over SSH ..........................................5\n   5. Exiting\
    \ the NETCONF Subsystem ...................................6\n   6. Security Considerations\
    \ .........................................6\n   7. IANA Considerations .............................................7\n\
    \   8. Acknowledgements ................................................7\n  \
    \ 9. References ......................................................8\n    \
    \  9.1. Normative References .......................................8\n      9.2.\
    \ Informative References .....................................8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The NETCONF protocol [RFC4721] is an XML-based protocol\
    \ used to\n   manage the configuration of networking equipment.  NETCONF is defined\n\
    \   to be session-layer and transport independent, allowing mappings to\n   be\
    \ defined for multiple session-layer or transport protocols.  This\n   document\
    \ defines how NETCONF can be used within a Secure Shell (SSH)\n   session, using\
    \ the SSH connection protocol [RFC4254] over the SSH\n   transport protocol [RFC4253].\
    \  This mapping will allow NETCONF to be\n   executed from a secure shell session\
    \ by a user or application.\n   Throughout this document, the terms \"client\"\
    \ and \"server\" are used to\n   refer to the two ends of the SSH transport connection.\
    \  The client\n   actively opens the SSH connection, and the server passively\
    \ listens\n   for the incoming SSH connection.  The terms \"manager\" and \"agent\"\
    \ are\n   used to refer to the two ends of the NETCONF protocol session.  The\n\
    \   manager issues NETCONF remote procedure call (RPC) commands, and the\n   agent\
    \ replies to those commands.  When NETCONF is run over SSH using\n   the mapping\
    \ defined in this document, the client is always the\n   manager, and the server\
    \ is always the agent.\n"
- title: 2.  Requirements Terminology
  contents:
  - "2.  Requirements Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 3.  Starting NETCONF over SSH
  contents:
  - "3.  Starting NETCONF over SSH\n   To run NETCONF over SSH, the client will first\
    \ establish an SSH\n   transport connection using the SSH transport protocol,\
    \ and the client\n   and server will exchange keys for message integrity and encryption.\n\
    \   The client will then invoke the \"ssh-userauth\" service to\n   authenticate\
    \ the user, as described in the SSH authentication\n   protocol [RFC4252].  Once\
    \ the user has been successfully\n   authenticated, the client will invoke the\
    \ \"ssh-connection\" service,\n   also known as the SSH connection protocol.\n\
    \   After the ssh-connection service is established, the client will open\n  \
    \ a channel of type \"session\", which will result in an SSH session.\n   Once\
    \ the SSH session has been established, the user (or application)\n   will invoke\
    \ NETCONF as an SSH subsystem called \"netconf\".  Subsystem\n   support is a\
    \ feature of SSH version 2 (SSHv2) and is not included in\n   SSHv1.  Running\
    \ NETCONF as an SSH subsystem avoids the need for the\n   script to recognize\
    \ shell prompts or skip over extraneous\n   information, such as a system message\
    \ that is sent at shell start-up.\n   However, even when a subsystem is used,\
    \ some extraneous messages may\n   be printed by the user's start-up scripts.\
    \  Implementations MUST skip\n   over these messages by searching for an 'xml'\
    \ start directive, which\n   MUST be followed by a <hello> element in the 'NETCONF'\
    \ namespace.\n   In order to allow NETCONF traffic to be easily identified and\n\
    \   filtered by firewalls and other network devices, NETCONF servers MUST\n  \
    \ default to providing access to the \"netconf\" SSH subsystem only when\n   the\
    \ SSH session is established using the IANA-assigned TCP port\n   <830>.  Servers\
    \ SHOULD be configurable to allow access to the netconf\n   SSH subsystem over\
    \ other ports.\n   A user (or application) could use the following command line\
    \ to\n   invoke NETCONF as an SSH subsystem on the IANA-assigned port:\n   [user@client]$\
    \ ssh -s server.example.org -p <830> netconf\n   Note that the -s option causes\
    \ the command (\"netconf\") to be invoked\n   as an SSH subsystem.\n"
- title: 3.1.  Capabilities Exchange
  contents:
  - "3.1.  Capabilities Exchange\n   The server MUST indicate its capabilities by\
    \ sending an XML document\n   containing a <hello> element as soon as the NETCONF\
    \ session is\n   established.  The user (or application) can parse this message\
    \ to\n   determine which NETCONF capabilities are supported by the server.\n \
    \  The client must also send an XML document containing a <hello>\n   element\
    \ to indicate the client's capabilities to the server.  The\n   document containing\
    \ the <hello> element MUST be the first XML\n   document that the client sends\
    \ after the NETCONF session is\n   established.\n   The following example shows\
    \ a capability exchange.  Messages sent by\n   the client are marked with \"C:\"\
    , and messages sent by the server are\n   marked with \"S:\".\n   S: <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n   S: <hello>\n   S:   <capabilities>\n   S:     <capability>\n\
    \   S:       urn:ietf:params:xml:ns:netconf:base:1.0\n   S:     </capability>\n\
    \   S:     <capability>\n   S:       urn:ietf:params:ns:netconf:capability:startup:1.0\n\
    \   S:     </capability>\n   S:   </capabilities>\n   S:   <session-id>4<session-id>\n\
    \   S: </hello>\n   S: ]]>]]>\n   C: <?xml version=\"1.0\" encoding=\"UTF-8\"\
    ?>\n   C: <hello>\n   C:   <capabilities>\n   C:     <capability>\n   C:     \
    \  urn:ietf:params:xml:ns:netconf:base:1.0\n   C:     </capability>\n   C:   </capabilities>\n\
    \   C: </hello>\n   C: ]]>]]>\n   Although the example shows the server sending\
    \ a <hello> message\n   followed by the client's message, both sides will send\
    \ the message as\n   soon as the NETCONF subsystem is initialized, perhaps simultaneously.\n\
    \   As the previous example illustrates, a special character sequence,\n   ]]>]]>,\
    \ MUST be sent by both the client and the server after each XML\n   document in\
    \ the NETCONF exchange.  This character sequence cannot\n   legally appear in\
    \ an XML document, so it can be unambiguously used to\n   identify the end of\
    \ the current document, allowing resynchronization\n   of the NETCONF exchange\
    \ in the event of an XML syntax or parsing\n   error.\n"
- title: 4.  Using NETCONF over SSH
  contents:
  - "4.  Using NETCONF over SSH\n   A NETCONF over SSH session consists of the manager\
    \ and agent\n   exchanging complete XML documents.  Once the session has been\n\
    \   established and capabilities have been exchanged, the manager will\n   send\
    \ complete XML documents containing <rpc> elements to the server,\n   and the\
    \ agent will respond with complete XML documents containing\n   <rpc-reply> elements.\n\
    \   To continue the example given above, an NETCONF over SSH session to\n   retrieve\
    \ a set of configuration information might look like this:\n   C: <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n   C: <rpc message-id=\"105\"\n   C: xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n   C:   <get-config>\n   C:     <source><running/></source>\n   C:     <config\
    \ xmlns=\"http://example.com/schema/1.2/config\">\n   C:      <users/>\n   C:\
    \     </config>\n   C:   </get-config>\n   C: </rpc>\n   C: ]]>]]>\n   S: <?xml\
    \ version=\"1.0\" encoding=\"UTF-8\"?>\n   S: <rpc-reply message-id=\"105\"\n\
    \   S: xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n   S:   <config xmlns=\"\
    http://example.com/schema/1.2/config\">\n   S:     <users>\n   S:       <user><name>root</name><type>superuser</type></user>\n\
    \   S:       <user><name>fred</name><type>admin</type></user>\n   S:       <user><name>barney</name><type>admin</type></user>\n\
    \   S:     </users>\n   S:   </config>\n   S: </rpc-reply>\n   S: ]]>]]>\n"
- title: 5.  Exiting the NETCONF Subsystem
  contents:
  - "5.  Exiting the NETCONF Subsystem\n   Exiting NETCONF is accomplished using the\
    \ <close-session> operation.\n   An agent will process RPC messages from the manager\
    \ in the order in\n   which they are received.  When the agent processes a <close-session>\n\
    \   command, the agent shall respond and close the SSH session channel.\n   The\
    \ agent MUST NOT process any RPC commands received on the current\n   session\
    \ after the <close-session> command.\n   To continue the example used in previous\
    \ sections, an existing\n   NETCONF subsystem session could be closed as follows:\n\
    \   C: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   C: <rpc message-id=\"106\"\
    \n   C: xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n   C:   <close-session/>\n\
    \   C: </rpc>\n   C: ]]>]]>\n   S: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\
    \   S: <rpc-reply id=\"106\"\n   S: xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n   S:   <ok/>\n   S: </rpc-reply>\n   S: ]]>]]>\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   NETCONF is used to access configuration and state\
    \ information and to\n   modify configuration information, so the ability to access\
    \ this\n   protocol should be limited to users and systems that are authorized\n\
    \   to view the agent's configuration and state or to modify the agent's\n   configuration.\n\
    \   The identity of the server MUST be verified and authenticated by the\n   client\
    \ according to local policy before password-based authentication\n   data or any\
    \ configuration or state data is sent to or received from\n   the server.  The\
    \ identity of the client MUST also be verified and\n   authenticated by the server\
    \ according to local policy to ensure that\n   the incoming client request is\
    \ legitimate before any configuration or\n   state data is sent to or received\
    \ from the client.  Neither side\n   should establish a NETCONF over SSH connection\
    \ with an unknown,\n   unexpected, or incorrect identity on the opposite side.\n\
    \   Configuration or state data may include sensitive information, such\n   as\
    \ usernames or security keys.  So, NETCONF should only be used over\n   communications\
    \ channels that provide strong encryption for data\n   privacy.  This document\
    \ defines a NETCONF over SSH mapping that\n   provides for support of strong encryption\
    \ and authentication.\n   This document requires that servers default to allowing\
    \ access to the\n   \"netconf\" SSH subsystem only when using a specific TCP port\
    \ assigned\n   by IANA for this purpose.  This will allow NETCONF over SSH traffic\n\
    \   to be easily identified and filtered by firewalls and other network\n   nodes.\
    \  However, it will also allow NETCONF over SSH traffic to be\n   more easily\
    \ identified by attackers.\n   This document also recommends that servers be configurable\
    \ to allow\n   access to the \"netconf\" SSH subsystem over other ports.  Use\
    \ of that\n   configuration option without corresponding changes to firewall or\n\
    \   network device configuration may unintentionally result in the\n   ability\
    \ for nodes outside the firewall or other administrative\n   boundary to gain\
    \ access to \"netconf\" SSH subsystem.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   IANA assigned a TCP port number that is the default\
    \ port for NETCONF\n   over SSH sessions as defined in this document.\n   IANA\
    \ assigned port <830> for this purpose.\n   IANA is also requested to assign \"\
    netconf\" as an SSH Service Name as\n   defined in [RFC4250], as follows:\n  \
    \          Service Name                  Reference\n            -------------\
    \                 ---------\n            netconf                       RFC 4742\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   This document was written using the xml2rfc tool described\
    \ in RFC\n   2629 [RFC2629].\n   Extensive input was received from the other members\
    \ of the NETCONF\n   design team, including: Andy Bierman, Weijing Chen, Rob Enns,\
    \ Wes\n   Hardaker, David Harrington, Eliot Lear, Simon Leinen, Phil Shafer,\n\
    \   Juergen Schoenwaelder, and Steve Waldbusser.  The following people\n   have\
    \ also reviewed this document and provided valuable input: Olafur\n   Gudmundsson,\
    \ Sam Hartman, Scott Hollenbeck, Bill Sommerfeld, and Bert\n   Wijnen.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC4250]  Lehtinen, S. and C. Lonvick, \"The Secure Shell (SSH)\n\
    \              Protocol Assigned Numbers\", RFC 4250, January 2006.\n   [RFC4252]\
    \  Ylonen, T. and C. Lonvick, \"The Secure Shell (SSH)\n              Authentication\
    \ Protocol\", RFC 4252, January 2006.\n   [RFC4253]  Ylonen, T. and C. Lonvick,\
    \ \"The Secure Shell (SSH)\n              Transport Layer Protocol\", RFC 4253,\
    \ January 2006.\n   [RFC4254]  Ylonen, T. and C. Lonvick, \"The Secure Shell (SSH)\n\
    \              Connection Protocol\", RFC 4254, January 2006.\n   [RFC4721]  Enns,\
    \ R., Ed., \"NETCONF Configuration Protocol\", RFC 4721,\n              December\
    \ 2006.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC2629]  Rose, M., \"Writing I-Ds and RFCs\
    \ using XML\", RFC 2629,\n              June 1999.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Margaret Wasserman\n   ThingMagic\n   One Broadway, 5th\
    \ Floor\n   Cambridge, MA  02142\n   USA\n   Phone: +1 781 405-7464\n   EMail:\
    \ margaret@thingmagic.com\n   URI:   http://www.thingmagic.com\n   Ted Goddard\n\
    \   ICEsoft Technologies, Inc.\n   Suite 300, 1717 10th St. NW\n   Calgary, AB\
    \  T2M 4S2\n   Canada\n   Phone: +1 403 663-3322\n   EMail: ted.goddard@icesoft.com\n\
    \   URI:   http://www.icesoft.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2006).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST,\n   AND THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,\n   EXPRESS OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT\n   THE USE OF THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\n   IMPLIED WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR\n   PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
