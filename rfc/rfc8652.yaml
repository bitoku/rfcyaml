- title: __initial_text__
  contents:
  - "  A YANG Data Model for the Internet Group Management Protocol (IGMP)\n     \
    \            and Multicast Listener Discovery (MLD)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a YANG data model that can be used to configure\n\
    \   and manage Internet Group Management Protocol (IGMP) and Multicast\n   Listener\
    \ Discovery (MLD) devices.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8652.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Terminology\n     1.2.  Conventions\
    \ Used in This Document\n     1.3.  Tree Diagrams\n     1.4.  Prefixes in Data\
    \ Node Names\n   2.  Design of the Data Model\n     2.1.  Scope of Model\n   \
    \    2.1.1.  Parameters Not Covered at the Global Level\n       2.1.2.  Parameters\
    \ Not Covered at the Interface Level\n     2.2.  Optional Capabilities\n     2.3.\
    \  Position of Address Family in Hierarchy\n   3.  Module Structure\n     3.1.\
    \  IGMP Configuration and Operational State\n     3.2.  MLD Configuration and\
    \ Operational State\n     3.3.  IGMP and MLD Actions\n   4.  IGMP and MLD YANG\
    \ Module\n   5.  Security Considerations\n   6.  IANA Considerations\n   7.  References\n\
    \     7.1.  Normative References\n     7.2.  Informative References\n   Acknowledgments\n\
    \   Contributors\n   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   YANG [RFC6020] [RFC7950] is a data definition language that\
    \ was\n   introduced to model the configuration and running state of a device\n\
    \   managed using network management protocols such as NETCONF [RFC6241]\n   or\
    \ RESTCONF [RFC8040].  YANG is now also being used as a component of\n   wider\
    \ management interfaces, such as command-line interfaces (CLIs).\n   This document\
    \ defines a YANG data model that can be used to configure\n   and manage Internet\
    \ Group Management Protocol (IGMP) and Multicast\n   Listener Discovery (MLD)\
    \ devices.  The protocol versions include\n   IGMPv1 [RFC1112], IGMPv2 [RFC2236],\
    \ IGMPv3 [RFC3376], MLDv1\n   [RFC2710], and MLDv2 [RFC3810].  The core features\
    \ of the IGMP and\n   MLD protocols are defined as required.  Non-core features\
    \ are defined\n   as optional in the provided data model.\n   The YANG data model\
    \ in this document conforms to the Network\n   Management Datastore Architecture\
    \ (NMDA) [RFC8342].\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The terminology for describing YANG data models is found\
    \ in [RFC6020]\n   and [RFC7950], including:\n   *  augment\n   *  data model\n\
    \   *  data node\n   *  identity\n   *  module\n   The following abbreviations\
    \ are used in this document and the defined\n   model:\n   IGMP:  Internet Group\
    \ Management Protocol [RFC3376].\n   MLD:  Multicast Listener Discovery [RFC3810].\n\
    \   SSM:  Source-Specific Multicast service model [RFC3569] [RFC4607].\n"
- title: 1.2.  Conventions Used in This Document
  contents:
  - "1.2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be\
    \ interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,\
    \ they appear in all\n   capitals, as shown here.\n"
- title: 1.3.  Tree Diagrams
  contents:
  - "1.3.  Tree Diagrams\n   Tree diagrams used in this document follow the notation\
    \ defined in\n   [RFC8340].\n"
- title: 1.4.  Prefixes in Data Node Names
  contents:
  - "1.4.  Prefixes in Data Node Names\n   In this document, names of data nodes,\
    \ actions, and other data model\n   objects are often used without a prefix, as\
    \ long as it is clear from\n   the context in which YANG module each name is defined.\
    \  Otherwise,\n   names are prefixed using the standard prefix associated with\
    \ the\n   corresponding YANG module, as shown in Table 1.\n            | Prefix\
    \   | YANG module              | Reference |\n            | yang     | ietf-yang-types\
    \          | [RFC6991] |\n            | inet     | ietf-inet-types          |\
    \ [RFC6991] |\n            | if       | ietf-interfaces          | [RFC8343] |\n\
    \            | ip       | ietf-ip                  | [RFC8344] |\n           \
    \ | rt       | ietf-routing             | [RFC8349] |\n            | rt-types\
    \ | ietf-routing-types       | [RFC8294] |\n            | acl      | ietf-access-control-list\
    \ | [RFC8519] |\n              Table 1: Prefixes and Corresponding YANG Modules\n"
- title: 2.  Design of the Data Model
  contents:
  - '2.  Design of the Data Model

    '
- title: 2.1.  Scope of Model
  contents:
  - "2.1.  Scope of Model\n   The model covers IGMPv1 [RFC1112], IGMPv2 [RFC2236],\
    \ IGMPv3\n   [RFC3376], MLDv1 [RFC2710], and MLDv2 [RFC3810].\n   This model does\
    \ not cover other IGMP- and MLD-related protocols such\n   as IGMP/MLD Proxy [RFC4605]\
    \ or IGMP/MLD Snooping [RFC4541] etc.,\n   which will be specified in separate\
    \ documents.\n   This model can be used to configure and manage various versions\
    \ of\n   IGMP and MLD protocols.  The operational state data and statistics\n\
    \   can be retrieved by this model.  Even though no protocol-specific\n   notifications\
    \ are defined in this model, the subscription and push\n   mechanism defined in\
    \ [RFC8639] and [RFC8641] can be implemented by\n   the user to subscribe to notifications\
    \ on the data nodes in this\n   model.\n   The model contains all the basic configuration\
    \ parameters to operate\n   the protocols listed above.  Depending on the implementation\
    \ choices,\n   some systems may not allow some of the advanced parameters to be\n\
    \   configurable.  The occasionally implemented parameters are modeled as\n  \
    \ optional features in this model, while the rarely implemented\n   parameters\
    \ are not included in this model and left for augmentation.\n   This model can\
    \ be extended, and it has been structured in a way that\n   such extensions can\
    \ be conveniently made.\n   The protocol parameters covered in this model can\
    \ been seen from the\n   model structure described in Section 3.\n   The protocol\
    \ parameters that were considered but are not covered in\n   this model are described\
    \ in the following sections.\n"
- title: 2.1.1.  Parameters Not Covered at the Global Level
  contents:
  - "2.1.1.  Parameters Not Covered at the Global Level\n   The configuration parameters\
    \ and operational states not covered on an\n   IGMP instance or an MLD instance\
    \ are:\n   *  Explicit tracking\n   *  Maximum transmit rate\n   *  Last member\
    \ query count\n   *  Other querier present time\n   *  Send router alert\n   *\
    \  Startup query interval\n   *  Startup query count\n"
- title: 2.1.2.  Parameters Not Covered at the Interface Level
  contents:
  - "2.1.2.  Parameters Not Covered at the Interface Level\n   The configuration parameters\
    \ and operational states not covered on an\n   IGMP interface or an MLD interface\
    \ are:\n   *  Disable router alert check\n   *  Drop IGMP version 1, IGMP version\
    \ 2, or MLD version 1\n   *  Last member query count\n   *  Maximum number of\
    \ sources\n   *  Other querier present time\n   *  Passive mode\n   *  Promiscuous\
    \ mode\n   *  Query before immediate leave\n   *  Send router alert\n"
- title: 2.2.  Optional Capabilities
  contents:
  - "2.2.  Optional Capabilities\n   This model is designed to represent the capabilities\
    \ of IGMP and MLD\n   devices with various specifications, including the basic\
    \ capability\n   subsets of the IGMP and MLD protocols.  The main design goals\
    \ of this\n   document are that the basic capabilities described in the model\
    \ are\n   supported by any major now-existing implementation, and that the\n \
    \  configuration of all implementations meeting the specifications is\n   easy\
    \ to express through some combination of the optional features in\n   the model\
    \ and simple vendor augmentations.\n   There is also value in widely supported\
    \ features being standardized,\n   to provide a standardized way to access these\
    \ features, to save work\n   for individual vendors, and so that mapping between\
    \ different\n   vendors' configuration is not needlessly complicated.  Therefore,\n\
    \   this model declares a number of features representing capabilities\n   that\
    \ not all deployed devices support.\n   The extensive use of feature declarations\
    \ should also substantially\n   simplify the capability negotiation process for\
    \ a vendor's IGMP and\n   MLD implementations.\n   On the other hand, operational\
    \ state parameters are not so widely\n   designated as features, as there are\
    \ many cases where the defaulting\n   of an operational state parameter would\
    \ not cause any harm to the\n   system, and it is much more likely that an implementation\
    \ without\n   native support for a piece of operational state would be able to\n\
    \   derive a suitable value for a state variable that is not natively\n   supported.\n"
- title: 2.3.  Position of Address Family in Hierarchy
  contents:
  - "2.3.  Position of Address Family in Hierarchy\n   The protocol IGMP only supports\
    \ IPv4, while the protocol MLD only\n   supports IPv6.  The data model defined\
    \ in this document can be used\n   for both IPv4 and IPv6 address families.\n\
    \   This document defines IGMP and MLD as separate schema branches in the\n  \
    \ structure.  The benefits are:\n   *  The model can support IGMP (IPv4), MLD\
    \ (IPv6), or both optionally\n      and independently.  Such flexibility cannot\
    \ be achieved cleanly\n      with a combined branch.\n   *  The structure is consistent\
    \ with other YANG data models such as\n      RFC 8344, which uses separate branches\
    \ for IPv4 and IPv6.\n   *  The separate branches for IGMP and MLD can accommodate\
    \ their\n      differences better and cleaner.  The two branches can better\n\
    \      support different features and node types.\n"
- title: 3.  Module Structure
  contents:
  - "3.  Module Structure\n   This model augments the core routing data model specified\
    \ in\n   [RFC8349].\n         +--rw routing\n            +--rw router-id?\n  \
    \          +--rw control-plane-protocols\n            |  +--rw control-plane-protocol*\
    \ [type name]\n            |     +--rw type\n            |     +--rw name\n  \
    \          |     +--rw igmp     <= Augmented by this Model\n                 \
    \       ...\n            |     +--rw mld      <= Augmented by this Model\n   \
    \                     ...\n   The \"igmp\" container instantiates an IGMP protocol\
    \ of version IGMPv1,\n   IGMPv2, or IGMPv3.  The \"mld\" container instantiates\
    \ an MLD protocol\n   of version MLDv1 or MLDv2.\n   The YANG data model defined\
    \ in this document conforms to the Network\n   Management Datastore Architecture\
    \ (NMDA) [RFC8342].  The operational\n   state data is combined with the associated\
    \ configuration data in the\n   same hierarchy [RFC8407].\n   A configuration\
    \ data node is marked as mandatory only when its value\n   must be provided by\
    \ the user.  Where nodes are not essential to\n   protocol operation, they are\
    \ marked as optional.  Some other nodes\n   are essential but have a default specified,\
    \ so that they are also\n   optional and need not be configured explicitly.\n"
- title: 3.1.  IGMP Configuration and Operational State
  contents:
  - "3.1.  IGMP Configuration and Operational State\n   The IGMP data is modeled as\
    \ a schema subtree augmenting the \"control-\n   plane-protocol\" data node under\
    \ \"/rt:routing/rt:control-plane-\n   protocols\" in the module ietf-routing,\
    \ following the convention\n   described in [RFC8349].  The augmentation to the\
    \ module ietf-routing\n   allows this model to support multiple instances of IGMP,\
    \ but a\n   restriction MAY be added depending on the implementation and the\n\
    \   device.  The identity \"igmp\" is derived from the \"rt:control-plane-\n \
    \  protocol\" base identity and indicates that a control-plane-protocol\n   instance\
    \ is IGMP.\n   The IGMP subtree is a three-level hierarchy structure as listed\n\
    \   below:\n   Global level:  Including IGMP configuration and operational state\n\
    \      attributes for the entire IGMP protocol instance in this router.\n   Interface-global\
    \ level:  Including configuration data nodes that are\n      applicable to all\
    \ the interfaces whose corresponding nodes are not\n      defined or not configured\
    \ at the interface level.  For such a node\n      at the interface level, the\
    \ system uses the same value of the\n      corresponding node at the interface-global\
    \ level.\n   Interface level:  Including IGMP configuration and operational state\n\
    \      attributes specific to the given interface.  For a configuration\n    \
    \  node at the interface level, there may exist a corresponding\n      configuration\
    \ node with the same name at the interface-global\n      level.  The value configured\
    \ on a node at the interface level\n      overrides the value configured on the\
    \ corresponding node at the\n      interface-global level.\n     augment /rt:routing/rt:control-plane-protocols\n\
    \               /rt:control-plane-protocol:\n       +--rw igmp {feature-igmp}?\n\
    \          +--rw global\n          |  +--rw enabled?         boolean {global-admin-enable}?\n\
    \          |  +--rw max-entries?     uint32 {global-max-entries}?\n          |\
    \  +--rw max-groups?      uint32 {global-max-groups}?\n          |  +--ro entries-count?\
    \   uint32\n          |  +--ro groups-count?    uint32\n          |  +--ro statistics\n\
    \          |     +--ro discontinuity-time?   yang:date-and-time\n          | \
    \    +--ro error\n          |     |  +--ro total?       yang:counter64\n     \
    \     |     |  +--ro query?       yang:counter64\n          |     |  +--ro report?\
    \      yang:counter64\n          |     |  +--ro leave?       yang:counter64\n\
    \          |     |  +--ro checksum?    yang:counter64\n          |     |  +--ro\
    \ too-short?   yang:counter64\n          |     +--ro received\n          |   \
    \  |  +--ro total?    yang:counter64\n          |     |  +--ro query?    yang:counter64\n\
    \          |     |  +--ro report?   yang:counter64\n          |     |  +--ro leave?\
    \    yang:counter64\n          |     +--ro sent\n          |        +--ro total?\
    \    yang:counter64\n          |        +--ro query?    yang:counter64\n     \
    \     |        +--ro report?   yang:counter64\n          |        +--ro leave?\
    \    yang:counter64\n          +--rw interfaces\n             +--rw last-member-query-interval?\
    \   uint16\n             +--rw query-interval?               uint16\n        \
    \     +--rw query-max-response-time?      uint16\n             +--rw require-router-alert?\
    \         boolean\n             |       {intf-require-router-alert}?\n       \
    \      +--rw robustness-variable?          uint8\n             +--rw version?\
    \                      uint8\n             +--rw max-groups-per-interface?   \
    \  uint32\n             |       {intf-max-groups}?\n             +--rw interface*\
    \ [interface-name]\n                +--rw interface-name                if:interface-ref\n\
    \                +--rw last-member-query-interval?   uint16\n                +--rw\
    \ query-interval?               uint16\n                +--rw query-max-response-time?\
    \      uint16\n                +--rw require-router-alert?         boolean\n \
    \               |       {intf-require-router-alert}?\n                +--rw robustness-variable?\
    \          uint8\n                +--rw version?                      uint8\n\
    \                +--rw enabled?                      boolean\n               \
    \ |       {intf-admin-enable}?\n                +--rw group-policy?\n        \
    \        |       -> /acl:acls/acl/name\n                +--rw immediate-leave?\
    \              empty\n                |       {intf-immediate-leave}?\n      \
    \          +--rw max-groups?                   uint32\n                |     \
    \  {intf-max-groups}?\n                +--rw max-group-sources?            uint32\n\
    \                |       {intf-max-group-sources}?\n                +--rw source-policy?\n\
    \                |       -> /acl:acls/acl/name {intf-source-policy}?\n       \
    \         +--rw verify-source-subnet?         empty\n                |       {intf-verify-source-subnet}?\n\
    \                +--rw explicit-tracking?            empty\n                |\
    \       {intf-explicit-tracking}?\n                +--rw lite-exclude-filter?\
    \          empty\n                |       {intf-lite-exclude-filter}?\n      \
    \          +--rw join-group*\n                |       rt-types:ipv4-multicast-group-address\n\
    \                |       {intf-join-group}?\n                +--rw ssm-map*\n\
    \                |       [ssm-map-source-addr ssm-map-group-policy]\n        \
    \        |       {intf-ssm-map}?\n                |  +--rw ssm-map-source-addr\
    \     ssm-map-ipv4-addr-type\n                |  +--rw ssm-map-group-policy  \
    \  string\n                +--rw static-group* [group-addr source-addr]\n    \
    \            |       {intf-static-group}?\n                |  +--rw group-addr\n\
    \                |  |       rt-types:ipv4-multicast-group-address\n          \
    \      |  +--rw source-addr\n                |          rt-types:ipv4-multicast-source-address\n\
    \                +--ro oper-status                   enumeration\n           \
    \     +--ro querier                       inet:ipv4-address\n                +--ro\
    \ joined-group*\n                |       rt-types:ipv4-multicast-group-address\n\
    \                |       {intf-join-group}?\n                +--ro group* [group-address]\n\
    \                   +--ro group-address\n                   |       rt-types:ipv4-multicast-group-address\n\
    \                   +--ro expire           uint32\n                   +--ro filter-mode\
    \      enumeration\n                   +--ro up-time          uint32\n       \
    \            +--ro last-reporter?   inet:ipv4-address\n                   +--ro\
    \ source* [source-address]\n                      +--ro source-address    inet:ipv4-address\n\
    \                      +--ro expire            uint32\n                      +--ro\
    \ up-time           uint32\n                      +--ro host-count?       uint32\n\
    \                      |       {intf-explicit-tracking}?\n                   \
    \   +--ro last-reporter?    inet:ipv4-address\n                      +--ro host*\
    \ [host-address]\n                              {intf-explicit-tracking}?\n  \
    \                       +--ro host-address        inet:ipv4-address\n        \
    \                 +--ro host-filter-mode    enumeration\n"
- title: 3.2.  MLD Configuration and Operational State
  contents:
  - "3.2.  MLD Configuration and Operational State\n   The MLD data is modeled as\
    \ a schema subtree augmenting the \"control-\n   plane-protocol\" data node under\
    \ \"/rt:routing/rt:control-plane-\n   protocols\" in the module ietf-routing,\
    \ following the convention\n   described in [RFC8349].  The augmentation to the\
    \ module ietf-routing\n   allows this model to support multiple instances of MLD,\
    \ but a\n   restriction MAY be added depending on the implementation and the\n\
    \   device.  The identity \"mld\" is derived from the \"rt:control-plane-\n  \
    \ protocol\" base identity and indicates that a control-plane-protocol\n   instance\
    \ is MLD.\n   The MLD subtree is a three-level hierarchy structure as listed below:\n\
    \   Global level:  Including MLD configuration and operational state\n      attributes\
    \ for the entire MLD protocol instance in this router.\n   Interface-global level:\
    \  Including configuration data nodes that are\n      applicable to all the interfaces\
    \ whose corresponding nodes are not\n      defined or not configured at the interface\
    \ level.  For such a node\n      at the interface level, the system uses the same\
    \ value of the\n      corresponding node at the interface-global level.\n   Interface\
    \ level:  Including MLD configuration and operational state\n      attributes\
    \ specific to the given interface.  For a configuration\n      node at the interface\
    \ level, there may exist a corresponding\n      configuration node with the same\
    \ name at the interface-global\n      level.  The value configured on a node at\
    \ the interface level\n      overrides the value configured on the corresponding\
    \ node at the\n      interface-global level.\n     augment /rt:routing/rt:control-plane-protocols\n\
    \               /rt:control-plane-protocol:\n       +--rw mld {feature-mld}?\n\
    \          +--rw global\n          |  +--rw enabled?         boolean {global-admin-enable}?\n\
    \          |  +--rw max-entries?     uint32 {global-max-entries}?\n          |\
    \  +--rw max-groups?      uint32 {global-max-groups}?\n          |  +--ro entries-count?\
    \   uint32\n          |  +--ro groups-count?    uint32\n          |  +--ro statistics\n\
    \          |     +--ro discontinuity-time?   yang:date-and-time\n          | \
    \    +--ro error\n          |     |  +--ro total?       yang:counter64\n     \
    \     |     |  +--ro query?       yang:counter64\n          |     |  +--ro report?\
    \      yang:counter64\n          |     |  +--ro leave?       yang:counter64\n\
    \          |     |  +--ro checksum?    yang:counter64\n          |     |  +--ro\
    \ too-short?   yang:counter64\n          |     +--ro received\n          |   \
    \  |  +--ro total?    yang:counter64\n          |     |  +--ro query?    yang:counter64\n\
    \          |     |  +--ro report?   yang:counter64\n          |     |  +--ro leave?\
    \    yang:counter64\n          |     +--ro sent\n          |        +--ro total?\
    \    yang:counter64\n          |        +--ro query?    yang:counter64\n     \
    \     |        +--ro report?   yang:counter64\n          |        +--ro leave?\
    \    yang:counter64\n          +--rw interfaces\n             +--rw last-member-query-interval?\
    \   uint16\n             +--rw query-interval?               uint16\n        \
    \     +--rw query-max-response-time?      uint16\n             +--rw require-router-alert?\
    \         boolean\n             |       {intf-require-router-alert}?\n       \
    \      +--rw robustness-variable?          uint8\n             +--rw version?\
    \                      uint8\n             +--rw max-groups-per-interface?   \
    \  uint32\n             |       {intf-max-groups}?\n             +--rw interface*\
    \ [interface-name]\n                +--rw interface-name                if:interface-ref\n\
    \                +--rw last-member-query-interval?   uint16\n                +--rw\
    \ query-interval?               uint16\n                +--rw query-max-response-time?\
    \      uint16\n                +--rw require-router-alert?         boolean\n \
    \               |       {intf-require-router-alert}?\n                +--rw robustness-variable?\
    \          uint8\n                +--rw version?                      uint8\n\
    \                +--rw enabled?                      boolean\n               \
    \ |       {intf-admin-enable}?\n                +--rw group-policy?\n        \
    \        |       -> /acl:acls/acl/name\n                +--rw immediate-leave?\
    \              empty\n                |       {intf-immediate-leave}?\n      \
    \          +--rw max-groups?                   uint32\n                |     \
    \  {intf-max-groups}?\n                +--rw max-group-sources?            uint32\n\
    \                |       {intf-max-group-sources}?\n                +--rw source-policy?\n\
    \                |       -> /acl:acls/acl/name {intf-source-policy}?\n       \
    \         +--rw verify-source-subnet?         empty\n                |       {intf-verify-source-subnet}?\n\
    \                +--rw explicit-tracking?            empty\n                |\
    \       {intf-explicit-tracking}?\n                +--rw lite-exclude-filter?\
    \          empty\n                |       {intf-lite-exclude-filter}?\n      \
    \          +--rw join-group*\n                |       rt-types:ipv6-multicast-group-address\n\
    \                |       {intf-join-group}?\n                +--rw ssm-map*\n\
    \                |       [ssm-map-source-addr ssm-map-group-policy]\n        \
    \        |       {intf-ssm-map}?\n                |  +--rw ssm-map-source-addr\
    \     ssm-map-ipv6-addr-type\n                |  +--rw ssm-map-group-policy  \
    \  string\n                +--rw static-group* [group-addr source-addr]\n    \
    \            |       {intf-static-group}?\n                |  +--rw group-addr\n\
    \                |  |       rt-types:ipv6-multicast-group-address\n          \
    \      |  +--rw source-addr\n                |          rt-types:ipv6-multicast-source-address\n\
    \                +--ro oper-status                   enumeration\n           \
    \     +--ro querier                       inet:ipv6-address\n                +--ro\
    \ joined-group*\n                |       rt-types:ipv6-multicast-group-address\n\
    \                |       {intf-join-group}?\n                +--ro group* [group-address]\n\
    \                   +--ro group-address\n                   |       rt-types:ipv6-multicast-group-address\n\
    \                   +--ro expire           uint32\n                   +--ro filter-mode\
    \      enumeration\n                   +--ro up-time          uint32\n       \
    \            +--ro last-reporter?   inet:ipv6-address\n                   +--ro\
    \ source* [source-address]\n                      +--ro source-address    inet:ipv6-address\n\
    \                      +--ro expire            uint32\n                      +--ro\
    \ up-time           uint32\n                      +--ro host-count?       uint32\n\
    \                      |       {intf-explicit-tracking}?\n                   \
    \   +--ro last-reporter?    inet:ipv6-address\n                      +--ro host*\
    \ [host-address]\n                              {intf-explicit-tracking}?\n  \
    \                       +--ro host-address        inet:ipv6-address\n        \
    \                 +--ro host-filter-mode    enumeration\n"
- title: 3.3.  IGMP and MLD Actions
  contents:
  - "3.3.  IGMP and MLD Actions\n   IGMP and MLD each have one action that clears\
    \ the group membership\n   cache entries for that protocol.\n     augment /rt:routing/rt:control-plane-protocols\n\
    \               /rt:control-plane-protocol:\n       +--rw igmp {feature-igmp}?\n\
    \          +---x clear-groups {action-clear-groups}?\n             +---w input\n\
    \                +---w (interface)\n                |  +--:(name)\n          \
    \      |  |  +---w interface-name?   leafref\n                |  +--:(all)\n \
    \               |     +---w all-interfaces?   empty\n                +---w group-address\
    \           union\n                +---w source-address\n                    \
    \    rt-types:ipv4-multicast-source-address\n     augment /rt:routing/rt:control-plane-protocols\n\
    \               /rt:control-plane-protocol:\n       +--rw mld {feature-mld}?\n\
    \          +---x clear-groups {action-clear-groups}?\n             +---w input\n\
    \                +---w (interface)\n                |  +--:(name)\n          \
    \      |  |  +---w interface-name?   leafref\n                |  +--:(all)\n \
    \               |     +---w all-interfaces?   empty\n                +---w group-address?\
    \          union\n                +---w source-address?\n                    \
    \    rt-types:ipv6-multicast-source-address\n"
- title: 4.  IGMP and MLD YANG Module
  contents:
  - "4.  IGMP and MLD YANG Module\n   This module references [RFC1112], [RFC2236],\
    \ [RFC2710], [RFC3376],\n   [RFC3810], [RFC5790], [RFC6636], [RFC6991], [RFC8294],\
    \ [RFC8343],\n   [RFC8344], [RFC8349], and [RFC8519].\n   <CODE BEGINS> file \"\
    ietf-igmp-mld@2019-11-01.yang\"\n   module ietf-igmp-mld {\n     yang-version\
    \ 1.1;\n     namespace \"urn:ietf:params:xml:ns:yang:ietf-igmp-mld\";\n     prefix\
    \ igmp-mld;\n     import ietf-inet-types {\n       prefix inet;\n       reference\n\
    \         \"RFC 6991: Common YANG Data Types\";\n     }\n     import ietf-yang-types\
    \ {\n       prefix yang;\n       reference\n         \"RFC 6991: Common YANG Data\
    \ Types\";\n     }\n     import ietf-routing-types {\n       prefix rt-types;\n\
    \       reference\n         \"RFC 8294: Common YANG Data Types for the Routing\
    \ Area\";\n     }\n     import ietf-access-control-list {\n       prefix acl;\n\
    \       reference\n         \"RFC 8519: YANG Data Model for Network Access Control\
    \ Lists\n          (ACLs)\";\n     }\n     import ietf-routing {\n       prefix\
    \ rt;\n       reference\n         \"RFC 8349: A YANG Data Model for Routing Management\
    \ (NMDA\n          Version)\";\n     }\n     import ietf-interfaces {\n      \
    \ prefix if;\n       reference\n         \"RFC 8343: A YANG Data Model for Interface\
    \ Management\";\n     }\n     import ietf-ip {\n       prefix ip;\n       reference\n\
    \         \"RFC 8344: A YANG Data Model for IP Management\";\n     }\n     organization\n\
    \       \"IETF PIM Working Group\";\n     contact\n       \"WG Web:   <http://datatracker.ietf.org/wg/pim/>\n\
    \        WG List:  <mailto:pim@ietf.org>\n        Editor:   Xufeng Liu\n     \
    \             <mailto:xufeng.liu.ietf@gmail.com>\n        Editor:   Feng Guo\n\
    \                  <mailto:guofeng@huawei.com>\n        Editor:   Mahesh Sivakumar\n\
    \                  <mailto:sivakumar.mahesh@gmail.com>\n        Editor:   Pete\
    \ McAllister\n                  <mailto:pete.mcallister@metaswitch.com>\n    \
    \    Editor:   Anish Peter\n                  <mailto:anish.ietf@gmail.com>\"\
    ;\n     description\n       \"The module defines the configuration and operational\
    \ state for\n        the Internet Group Management Protocol (IGMP) and Multicast\n\
    \        Listener Discovery (MLD) protocols.\n        The key words 'MUST', 'MUST\
    \ NOT', 'REQUIRED', 'SHALL', 'SHALL\n        NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',\
    \ 'NOT RECOMMENDED',\n        'MAY', and 'OPTIONAL' in this document are to be\
    \ interpreted as\n        described in BCP 14 (RFC 2119) (RFC 8174) when, and\
    \ only when,\n        they appear in all capitals, as shown here.\n        Copyright\
    \ (c) 2019 IETF Trust and the persons identified as\n        authors of the code.\
    \  All rights reserved.\n        Redistribution and use in source and binary forms,\
    \ with or\n        without modification, is permitted pursuant to, and subject\
    \ to\n        the license terms contained in, the Simplified BSD License set\n\
    \        forth in Section 4.c of the IETF Trust's Legal Provisions\n        Relating\
    \ to IETF Documents\n        (http://trustee.ietf.org/license-info).\n       \
    \ This version of this YANG module is part of RFC 8652; see the\n        RFC itself\
    \ for full legal notices.\";\n     revision 2019-11-01 {\n       description\n\
    \         \"Initial revision.\";\n       reference\n         \"RFC 8652: A YANG\
    \ Data Model for the Internet Group Management\n          Protocol (IGMP) and\
    \ Multicast Listener Discovery (MLD)\";\n     }\n     /*\n      * Features\n \
    \     */\n     feature feature-igmp {\n       description\n         \"Support\
    \ IGMP protocol for IPv4 group membership record.\";\n     }\n     feature feature-mld\
    \ {\n       description\n         \"Support MLD protocol for IPv6 group membership\
    \ record.\";\n     }\n     feature global-admin-enable {\n       description\n\
    \         \"Support global configuration to enable or disable protocol.\";\n \
    \    }\n     feature global-max-entries {\n       description\n         \"Support\
    \ configuration of global max-entries.\";\n     }\n     feature global-max-groups\
    \ {\n       description\n         \"Support configuration of global max-groups.\"\
    ;\n     }\n     feature interface-global-config {\n       description\n      \
    \   \"Support global configuration applied for all interfaces.\";\n     }\n  \
    \   feature intf-admin-enable {\n       description\n         \"Support configuration\
    \ of interface administrative enabling.\";\n     }\n     feature intf-immediate-leave\
    \ {\n       description\n         \"Support configuration of interface immediate-leave.\"\
    ;\n     }\n     feature intf-join-group {\n       description\n         \"Support\
    \ configuration of interface join-group.\";\n     }\n     feature intf-max-groups\
    \ {\n       description\n         \"Support configuration of interface max-groups.\"\
    ;\n     }\n     feature intf-max-group-sources {\n       description\n       \
    \  \"Support configuration of interface max-group-sources.\";\n     }\n     feature\
    \ intf-require-router-alert {\n       description\n         \"Support configuration\
    \ of interface require-router-alert.\";\n     }\n     feature intf-source-policy\
    \ {\n       description\n         \"Support configuration of interface source\
    \ policy.\";\n     }\n     feature intf-ssm-map {\n       description\n      \
    \   \"Support configuration of interface ssm-map.\";\n     }\n     feature intf-static-group\
    \ {\n       description\n         \"Support configuration of interface static-group.\"\
    ;\n     }\n     feature intf-verify-source-subnet {\n       description\n    \
    \     \"Support configuration of interface verify-source-subnet.\";\n     }\n\
    \     feature intf-explicit-tracking {\n       description\n         \"Support\
    \ configuration of interface explicit-tracking hosts.\";\n     }\n     feature\
    \ intf-lite-exclude-filter {\n       description\n         \"Support configuration\
    \ of interface lite-exclude-filter.\";\n     }\n     feature per-interface-config\
    \ {\n       description\n         \"Support per-interface configuration.\";\n\
    \     }\n     feature action-clear-groups {\n       description\n         \"Support\
    \ actions to clear groups.\";\n     }\n     /*\n      * Typedefs\n      */\n \
    \    typedef ssm-map-ipv4-addr-type {\n       type union {\n         type enumeration\
    \ {\n           enum policy {\n             description\n               \"Source\
    \ address is specified in SSM map policy.\";\n           }\n         }\n     \
    \    type inet:ipv4-address;\n       }\n       description\n         \"Multicast\
    \ source IP address type for SSM map.\";\n     }\n     // source-ipv4-addr-type\n\
    \     typedef ssm-map-ipv6-addr-type {\n       type union {\n         type enumeration\
    \ {\n           enum policy {\n             description\n               \"Source\
    \ address is specified in SSM map policy.\";\n           }\n         }\n     \
    \    type inet:ipv6-address;\n       }\n       description\n         \"Multicast\
    \ source IP address type for SSM map.\";\n     }\n     // source-ipv6-addr-type\n\
    \     /*\n      * Identities\n      */\n     identity igmp {\n       if-feature\
    \ \"feature-igmp\";\n       base rt:control-plane-protocol;\n       description\n\
    \         \"IGMP protocol.\";\n       reference\n         \"RFC 3376: Internet\
    \ Group Management Protocol, Version 3\";\n     }\n     identity mld {\n     \
    \  if-feature \"feature-mld\";\n       base rt:control-plane-protocol;\n     \
    \  description\n         \"MLD protocol.\";\n       reference\n         \"RFC\
    \ 3810: Multicast Listener Discovery Version 2 (MLDv2) for\n          IPv6\";\n\
    \     }\n     /*\n      * Groupings\n      */\n     grouping global-config-attributes\
    \ {\n       description\n         \"This grouping is used in either IGMP schema\
    \ or MLD schema.\n          When used in IGMP schema, this grouping contains the\
    \ global\n          configuration for IGMP;\n          when used in MLD schema,\
    \ this grouping contains the global\n          configuration for MLD.\";\n   \
    \    leaf enabled {\n         if-feature \"global-admin-enable\";\n         type\
    \ boolean;\n         default \"true\";\n         description\n           \"When\
    \ this grouping is used for IGMP, this leaf indicates\n            whether IGMP\
    \ is enabled ('true') or disabled ('false')\n            in the routing instance.\n\
    \            When this grouping is used for MLD, this leaf indicates\n       \
    \     whether MLD is enabled ('true') or disabled ('false')\n            in the\
    \ routing instance.\";\n       }\n       leaf max-entries {\n         if-feature\
    \ \"global-max-entries\";\n         type uint32;\n         description\n     \
    \      \"When this grouping is used for IGMP, this leaf indicates\n          \
    \  the maximum number of entries in the IGMP instance.\n            When this\
    \ grouping is used for MLD, this leaf indicates\n            the maximum number\
    \ of entries in the MLD instance.\n            If this leaf is not specified,\
    \ the number of entries is not\n            limited.\";\n       }\n       leaf\
    \ max-groups {\n         if-feature \"global-max-groups\";\n         type uint32;\n\
    \         description\n           \"When this grouping is used for IGMP, this\
    \ leaf indicates\n            the maximum number of groups in the IGMP instance.\n\
    \            When this grouping is used for MLD, this leaf indicates\n       \
    \     the maximum number of groups in the MLD instance.\n            If this leaf\
    \ is not specified, the number of groups is not\n            limited.\";\n   \
    \    }\n     }\n     // global-config-attributes\n     grouping global-state-attributes\
    \ {\n       description\n         \"This grouping is used in either IGMP schema\
    \ or MLD schema.\n          When used in IGMP schema, this grouping contains the\
    \ global\n          IGMP state attributes;\n          when used in MLD schema,\
    \ this grouping contains the global\n          MLD state attributes.\";\n    \
    \   leaf entries-count {\n         type uint32;\n         config false;\n    \
    \     description\n           \"When this grouping is used for IGMP, this leaf\
    \ indicates\n            the number of entries in the IGMP instance.\n       \
    \     When this grouping is used for MLD, this leaf indicates\n            the\
    \ number of entries in the MLD instance.\";\n       }\n       leaf groups-count\
    \ {\n         type uint32;\n         config false;\n         description\n   \
    \        \"When this grouping is used for IGMP, this leaf indicates\n        \
    \    the number of existing groups in the IGMP instance.\n            When this\
    \ grouping is used for MLD, this leaf indicates\n            the number of existing\
    \ groups in the MLD instance.\";\n       }\n       container statistics {\n  \
    \       config false;\n         description\n           \"When this grouping is\
    \ used for IGMP, this container contains\n            the statistics for the IGMP\
    \ instance.\n            When this grouping is used for MLD, this leaf indicates\n\
    \            the statistics for the MLD instance.\";\n         leaf discontinuity-time\
    \ {\n           type yang:date-and-time;\n           description\n           \
    \  \"The time on the most recent occasion at which any one\n              or more\
    \ of the statistic counters suffered a\n              discontinuity.  If no such\
    \ discontinuities have occurred\n              since the last re-initialization\
    \ of the local\n              management subsystem, then this node contains the\
    \ time\n              the local management subsystem re-initialized itself.\"\
    ;\n         }\n         container error {\n           description\n          \
    \   \"Statistics of errors.\";\n           uses global-statistics-error;\n   \
    \      }\n         container received {\n           description\n            \
    \ \"Statistics of received messages.\";\n           uses global-statistics-sent-received;\n\
    \         }\n         container sent {\n           description\n             \"\
    Statistics of sent messages.\";\n           uses global-statistics-sent-received;\n\
    \         }\n       }\n       // statistics\n     }\n     // global-state-attributes\n\
    \     grouping global-statistics-error {\n       description\n         \"A grouping\
    \ defining statistics attributes for errors.\";\n       uses global-statistics-sent-received;\n\
    \       leaf checksum {\n         type yang:counter64;\n         description\n\
    \           \"The number of checksum errors.\";\n       }\n       leaf too-short\
    \ {\n         type yang:counter64;\n         description\n           \"The number\
    \ of messages that are too short.\";\n       }\n     }\n     // global-statistics-error\n\
    \     grouping global-statistics-sent-received {\n       description\n       \
    \  \"A grouping defining statistics attributes.\";\n       leaf total {\n    \
    \     type yang:counter64;\n         description\n           \"The number of total\
    \ messages.\";\n       }\n       leaf query {\n         type yang:counter64;\n\
    \         description\n           \"The number of query messages.\";\n       }\n\
    \       leaf report {\n         type yang:counter64;\n         description\n \
    \          \"The number of report messages.\";\n       }\n       leaf leave {\n\
    \         type yang:counter64;\n         description\n           \"The number\
    \ of leave messages.\";\n       }\n     }\n     // global-statistics-sent-received\n\
    \     grouping interface-global-config-attributes {\n       description\n    \
    \     \"Configuration attributes applied to the interface-global level\n     \
    \     whose per-interface attributes are not configured.\";\n       leaf max-groups-per-interface\
    \ {\n         if-feature \"intf-max-groups\";\n         type uint32;\n       \
    \  description\n           \"The maximum number of groups associated with each\
    \ interface.\n            If this leaf is not specified, the number of groups\
    \ is not\n            limited.\";\n       }\n     }\n     // interface-global-config-attributes\n\
    \     grouping interface-common-config-attributes {\n       description\n    \
    \     \"Configuration attributes applied to both the interface-global\n      \
    \    level and interface level.\";\n       leaf last-member-query-interval {\n\
    \         type uint16 {\n           range \"1..1023\";\n         }\n         units\
    \ \"seconds\";\n         description\n           \"When used in IGMP schema, this\
    \ leaf indicates the Last\n            Member Query Interval, which may be tuned\
    \ to modify the\n            leave latency of the network;\n            when used\
    \ in MLD schema, this leaf indicates the Last\n            Listener Query Interval,\
    \ which may be tuned to modify the\n            leave latency of the network.\n\
    \            This leaf is not applicable for version 1 of the IGMP.  For\n   \
    \         version 2 and version 3 of the IGMP, and for all versions of\n     \
    \       the MLD, the default value of this leaf is 1.\n            This leaf may\
    \ be configured at the interface level or the\n            interface-global level,\
    \ with precedence given to the value\n            at the interface level.  If\
    \ the leaf is not configured at\n            either level, the default value is\
    \ used.\";\n         reference\n           \"Section 8.8 of RFC 2236: Internet\
    \ Group Management Protocol,\n            Version 2.\n            Section 8.8\
    \ of RFC 3376: Internet Group Management Protocol,\n            Version 3.\n \
    \           Section 7.8 of RFC 2710: Multicast Listener Discovery (MLD)\n    \
    \        for IPv6.\n            Section 9.8 of RFC 3810: Multicast Listener Discovery\n\
    \            Version 2 (MLDv2) for IPv6.\";\n       }\n       leaf query-interval\
    \ {\n         type uint16 {\n           range \"1..31744\";\n         }\n    \
    \     units \"seconds\";\n         description\n           \"The Query Interval\
    \ is the interval between General Queries\n            sent by the Querier.  In\
    \ RFC 3376, the Querier's Query\n            Interval (QQI) is represented from\
    \ the Querier's Query\n            Interval Code (QQIC) in query message as follows:\n\
    \            If QQIC < 128, QQI = QQIC.\n            If QQIC >= 128, QQIC represents\
    \ a floating-point value as\n            follows:\n             0 1 2 3 4 5 6\
    \ 7\n            +-+-+-+-+-+-+-+-+\n            |1| exp | mant  |\n          \
    \  +-+-+-+-+-+-+-+-+\n            QQI = (mant | 0x10) << (exp + 3).\n        \
    \    The maximum value of QQI is 31744.\n            The default value is 125.\n\
    \            This leaf may be configured at the interface level or the\n     \
    \       interface-global level, with precedence given to the value\n         \
    \   at the interface level.  If the leaf is not configured at\n            either\
    \ level, the default value is used.\";\n         reference\n           \"Sections\
    \ 4.1.7, 8.2, and 8.14.2 of RFC 3376: Internet Group\n            Management Protocol,\
    \ Version 3\";\n       }\n       leaf query-max-response-time {\n         type\
    \ uint16 {\n           range \"1..1023\";\n         }\n         units \"seconds\"\
    ;\n         description\n           \"Query maximum response time specifies the\
    \ maximum time\n            allowed before sending a responding report.\n    \
    \        The default value is 10.\n            This leaf may be configured at\
    \ the interface level or the\n            interface-global level, with precedence\
    \ given to the value\n            at the interface level.  If the leaf is not\
    \ configured at\n            either level, the default value is used.\";\n   \
    \      reference\n           \"Sections 4.1.1, 8.3, and 8.14.3 of RFC 3376: Internet\
    \ Group\n            Management Protocol, Version 3\";\n       }\n       leaf\
    \ require-router-alert {\n         if-feature \"intf-require-router-alert\";\n\
    \         type boolean;\n         description\n           \"Protocol packets should\
    \ contain the router alert IP option.\n            When this leaf is not configured,\
    \ the server uses the\n            following rules to determine the operational\
    \ value of this\n            leaf:\n            if this grouping is used in IGMP\
    \ schema and the value of the\n            leaf 'version' is 1, the value 'false'\
    \ is operationally used\n            by the server;\n            if this grouping\
    \ is used in IGMP schema and the value of the\n            leaf 'version' is 2\
    \ or 3, the value 'true' is operationally\n            used by the server;\n \
    \           if this grouping is used in MLD schema, the value 'true' is\n    \
    \        operationally used by the server.\n            This leaf may be configured\
    \ at the interface level or the\n            interface-global level, with precedence\
    \ given to the value\n            at the interface level.  If the leaf is not\
    \ configured at\n            either level, the default value is used.\";\n   \
    \    }\n       leaf robustness-variable {\n         type uint8 {\n           range\
    \ \"1..7\";\n         }\n         description\n           \"The Querier's Robustness\
    \ Variable allows tuning for the\n            expected packet loss on a network.\n\
    \            The default value is 2.\n            This leaf may be configured\
    \ at the interface level or the\n            interface-global level, with precedence\
    \ given to the value\n            at the interface level.  If the leaf is not\
    \ configured at\n            either level, the default value is used.\";\n   \
    \      reference\n           \"Sections 4.1.6, 8.1, and 8.14.1 of RFC 3376: Internet\
    \ Group\n            Management Protocol, Version 3\";\n       }\n     }\n   \
    \  // interface-common-config-attributes\n     grouping interface-common-config-attributes-igmp\
    \ {\n       description\n         \"Configuration attributes applied to both the\
    \ interface-global\n          level and interface level for IGMP.\";\n       uses\
    \ interface-common-config-attributes;\n       leaf version {\n         type uint8\
    \ {\n           range \"1..3\";\n         }\n         description\n          \
    \ \"IGMP version.\n            The default value is 2.\n            This leaf\
    \ may be configured at the interface level or the\n            interface-global\
    \ level, with precedence given to the value\n            at the interface level.\
    \  If the leaf is not configured at\n            either level, the default value\
    \ is used.\";\n         reference\n           \"RFC 1112: Host Extensions for\
    \ IP Multicasting,\n            RFC 2236: Internet Group Management Protocol,\
    \ Version 2,\n            RFC 3376: Internet Group Management Protocol, Version\
    \ 3.\";\n       }\n     }\n     grouping interface-common-config-attributes-mld\
    \ {\n       description\n         \"Configuration attributes applied to both the\
    \ interface-global\n          level and interface level for MLD.\";\n       uses\
    \ interface-common-config-attributes;\n       leaf version {\n         type uint8\
    \ {\n           range \"1..2\";\n         }\n         description\n          \
    \ \"MLD version.\n            The default value is 2.\n            This leaf may\
    \ be configured at the interface level or the\n            interface-global level,\
    \ with precedence given to the value\n            at the interface level.  If\
    \ the leaf is not configured at\n            either level, the default value is\
    \ used.\";\n         reference\n           \"RFC 2710: Multicast Listener Discovery\
    \ (MLD) for IPv6,\n            RFC 3810: Multicast Listener Discovery Version\
    \ 2 (MLDv2)\n            for IPv6.\";\n       }\n     }\n     grouping interfaces-config-attributes-igmp\
    \ {\n       description\n         \"Configuration attributes applied to the interface-global\n\
    \          level for IGMP.\";\n       uses interface-common-config-attributes-igmp;\n\
    \       uses interface-global-config-attributes;\n     }\n     grouping interfaces-config-attributes-mld\
    \ {\n       description\n         \"Configuration attributes applied to the interface-global\n\
    \          level for MLD.\";\n       uses interface-common-config-attributes-mld;\n\
    \       uses interface-global-config-attributes;\n     }\n     grouping interface-level-config-attributes\
    \ {\n       description\n         \"This grouping is used in either IGMP schema\
    \ or MLD schema.\n          When used in IGMP schema, this grouping contains the\
    \ IGMP\n          configuration attributes that are defined at the interface\n\
    \          level but are not defined at the interface-global level;\n        \
    \  when used in MLD schema, this grouping contains the MLD\n          configuration\
    \ attributes that are defined at the interface\n          level but are not defined\
    \ at the interface-global level.\";\n       leaf enabled {\n         if-feature\
    \ \"intf-admin-enable\";\n         type boolean;\n         default \"true\";\n\
    \         description\n           \"When this grouping is used for IGMP, this\
    \ leaf indicates\n            whether IGMP is enabled ('true') or disabled ('false')\n\
    \            on the interface.\n            When this grouping is used for MLD,\
    \ this leaf indicates\n            whether MLD is enabled ('true') or disabled\
    \ ('false')\n            on the interface.\";\n       }\n       leaf group-policy\
    \ {\n         type leafref {\n           path \"/acl:acls/acl:acl/acl:name\";\n\
    \         }\n         description\n           \"When this grouping is used for\
    \ IGMP, this leaf specifies\n            the name of the access policy used to\
    \ filter the\n            IGMP membership.\n            When this grouping is\
    \ used for MLD, this leaf specifies\n            the name of the access policy\
    \ used to filter the\n            MLD membership.\n            The value space\
    \ of this leaf is restricted to the existing\n            policy instances defined\
    \ by the referenced schema in\n            RFC 8519.\n            As specified\
    \ by RFC 8519, the length of the name is between\n            1 and 64; a device\
    \ MAY further restrict the length of this\n            name; space and special\
    \ characters are not allowed.\n            If this leaf is not specified, no policy\
    \ is applied, and\n            all packets received from this interface are accepted.\"\
    ;\n         reference\n           \"RFC 8519: YANG Data Model for Network Access\
    \ Control Lists\n            (ACLs)\";\n       }\n       leaf immediate-leave\
    \ {\n         if-feature \"intf-immediate-leave\";\n         type empty;\n   \
    \      description\n           \"When this grouping is used for IGMP, the presence\
    \ of this\n            leaf requests IGMP to perform an immediate leave upon\n\
    \            receiving an IGMPv2 leave message.\n            If the router is\
    \ IGMP-enabled, it sends an IGMP last member\n            query with a last member\
    \ query response time.  However, the\n            router does not wait for the\
    \ response time before it prunes\n            the group.\n            When this\
    \ grouping is used for MLD, the presence of this\n            leaf requests MLD\
    \ to perform an immediate leave upon\n            receiving an MLDv1 leave message.\n\
    \            If the router is MLD-enabled, it sends an MLD last member\n     \
    \       query with a last member query response time.  However, the\n        \
    \    router does not wait for the response time before it prunes\n           \
    \ the group.\";\n       }\n       leaf max-groups {\n         if-feature \"intf-max-groups\"\
    ;\n         type uint32;\n         description\n           \"When this grouping\
    \ is used for IGMP, this leaf indicates\n            the maximum number of groups\
    \ associated with the IGMP\n            interface.\n            When this grouping\
    \ is used for MLD, this leaf indicates\n            the maximum number of groups\
    \ associated with the MLD\n            interface.\n            If this leaf is\
    \ not specified, the number of groups is not\n            limited.\";\n      \
    \ }\n       leaf max-group-sources {\n         if-feature \"intf-max-group-sources\"\
    ;\n         type uint32;\n         description\n           \"The maximum number\
    \ of group sources.\n            If this leaf is not specified, the number of\
    \ group sources\n            is not limited.\";\n       }\n       leaf source-policy\
    \ {\n         if-feature \"intf-source-policy\";\n         type leafref {\n  \
    \         path \"/acl:acls/acl:acl/acl:name\";\n         }\n         description\n\
    \           \"Name of the access policy used to filter sources.\n            The\
    \ value space of this leaf is restricted to the existing\n            policy instances\
    \ defined by the referenced schema in\n            RFC 8519.\n            As specified\
    \ by RFC 8519, the length of the name is between\n            1 and 64; a device\
    \ MAY further restrict the length of this\n            name; space and special\
    \ characters are not allowed.\n            If this leaf is not specified, no policy\
    \ is applied, and\n            all packets received from this interface are accepted.\"\
    ;\n       }\n       leaf verify-source-subnet {\n         if-feature \"intf-verify-source-subnet\"\
    ;\n         type empty;\n         description\n           \"If present, the interface\
    \ accepts packets with matching\n            source IP subnet only.\";\n     \
    \  }\n       leaf explicit-tracking {\n         if-feature \"intf-explicit-tracking\"\
    ;\n         type empty;\n         description\n           \"When this grouping\
    \ is used for IGMP, the presence of this\n            leaf enables an IGMP-based\
    \ explicit membership tracking\n            function for multicast routers and\
    \ IGMP proxy devices\n            supporting IGMPv3.\n            When this grouping\
    \ is used for MLD, the presence of this\n            leaf enables an MLD-based\
    \ explicit membership tracking\n            function for multicast routers and\
    \ MLD proxy devices\n            supporting MLDv2.\n            The explicit membership\
    \ tracking function contributes to\n            saving network resources and shortening\
    \ leave latency.\";\n         reference\n           \"Section 3 of RFC 6636: Tuning\
    \ the Behavior of the Internet\n            Group Management Protocol (IGMP) and\
    \ Multicast Listener\n            Discovery (MLD) for Routers in Mobile and Wireless\n\
    \            Networks\";\n       }\n       leaf lite-exclude-filter {\n      \
    \   if-feature \"intf-lite-exclude-filter\";\n         type empty;\n         description\n\
    \           \"When this grouping is used for IGMP, the presence of this\n    \
    \        leaf enables the support of the simplified EXCLUDE filter\n         \
    \   in the Lightweight IGMPv3 protocol, which simplifies the\n            standard\
    \ versions of IGMPv3.\n            When this grouping is used for MLD, the presence\
    \ of this\n            leaf enables the support of the simplified EXCLUDE filter\n\
    \            in the Lightweight MLDv2 protocol, which simplifies the\n       \
    \     standard versions of MLDv2.\";\n         reference\n           \"RFC 5790:\
    \ Lightweight Internet Group Management Protocol\n            Version 3 (IGMPv3)\
    \ and Multicast Listener Discovery\n            Version 2 (MLDv2) Protocols\"\
    ;\n       }\n     }\n     // interface-level-config-attributes\n     grouping\
    \ interface-config-attributes-igmp {\n       description\n         \"Per-interface\
    \ configuration attributes for IGMP.\";\n       uses interface-common-config-attributes-igmp;\n\
    \       uses interface-level-config-attributes;\n       leaf-list join-group {\n\
    \         if-feature \"intf-join-group\";\n         type rt-types:ipv4-multicast-group-address;\n\
    \         description\n           \"The router joins this multicast group on the\
    \ interface.\";\n       }\n       list ssm-map {\n         if-feature \"intf-ssm-map\"\
    ;\n         key \"ssm-map-source-addr ssm-map-group-policy\";\n         description\n\
    \           \"The policy for (*,G) mapping to (S,G).\";\n         leaf ssm-map-source-addr\
    \ {\n           type ssm-map-ipv4-addr-type;\n           description\n       \
    \      \"Multicast source IPv4 address.\";\n         }\n         leaf ssm-map-group-policy\
    \ {\n           type string;\n           description\n             \"Name of the\
    \ policy used to define ssm-map rules.\n              A device can restrict the\
    \ length\n              and value of this name, possibly space and special\n \
    \             characters are not allowed.\";\n         }\n       }\n       list\
    \ static-group {\n         if-feature \"intf-static-group\";\n         key \"\
    group-addr source-addr\";\n         description\n           \"A static multicast\
    \ route, (*,G) or (S,G).\n            The version of IGMP must be 3 to support\
    \ (S,G).\";\n         leaf group-addr {\n           type rt-types:ipv4-multicast-group-address;\n\
    \           description\n             \"Multicast group IPv4 address.\";\n   \
    \      }\n         leaf source-addr {\n           type rt-types:ipv4-multicast-source-address;\n\
    \           description\n             \"Multicast source IPv4 address.\";\n  \
    \       }\n       }\n     }\n     // interface-config-attributes-igmp\n     grouping\
    \ interface-config-attributes-mld {\n       description\n         \"Per-interface\
    \ configuration attributes for MLD.\";\n       uses interface-common-config-attributes-mld;\n\
    \       uses interface-level-config-attributes;\n       leaf-list join-group {\n\
    \         if-feature \"intf-join-group\";\n         type rt-types:ipv6-multicast-group-address;\n\
    \         description\n           \"The router joins this multicast group on the\
    \ interface.\";\n       }\n       list ssm-map {\n         if-feature \"intf-ssm-map\"\
    ;\n         key \"ssm-map-source-addr ssm-map-group-policy\";\n         description\n\
    \           \"The policy for (*,G) mapping to (S,G).\";\n         leaf ssm-map-source-addr\
    \ {\n           type ssm-map-ipv6-addr-type;\n           description\n       \
    \      \"Multicast source IPv6 address.\";\n         }\n         leaf ssm-map-group-policy\
    \ {\n           type string;\n           description\n             \"Name of the\
    \ policy used to define ssm-map rules.\n              A device can restrict the\
    \ length\n              and value of this name, possibly space and special\n \
    \             characters are not allowed.\";\n         }\n       }\n       list\
    \ static-group {\n         if-feature \"intf-static-group\";\n         key \"\
    group-addr source-addr\";\n         description\n           \"A static multicast\
    \ route, (*,G) or (S,G).\n            The version of MLD must be 2 to support\
    \ (S,G).\";\n         leaf group-addr {\n           type rt-types:ipv6-multicast-group-address;\n\
    \           description\n             \"Multicast group IPv6 address.\";\n   \
    \      }\n         leaf source-addr {\n           type rt-types:ipv6-multicast-source-address;\n\
    \           description\n             \"Multicast source IPv6 address.\";\n  \
    \       }\n       }\n     }\n     // interface-config-attributes-mld\n     grouping\
    \ interface-state-attributes {\n       description\n         \"Per-interface state\
    \ attributes for both IGMP and MLD.\";\n       leaf oper-status {\n         type\
    \ enumeration {\n           enum up {\n             description\n            \
    \   \"Ready to pass packets.\";\n           }\n           enum down {\n      \
    \       description\n               \"The interface does not pass any packets.\"\
    ;\n           }\n         }\n         config false;\n         mandatory true;\n\
    \         description\n           \"Indicates whether the operational state of\
    \ the interface\n            is up or down.\";\n       }\n     }\n     // interface-state-attributes\n\
    \     grouping interface-state-attributes-igmp {\n       description\n       \
    \  \"Per-interface state attributes for IGMP.\";\n       uses interface-state-attributes;\n\
    \       leaf querier {\n         type inet:ipv4-address;\n         config false;\n\
    \         mandatory true;\n         description\n           \"The querier address\
    \ in the subnet.\";\n       }\n       leaf-list joined-group {\n         if-feature\
    \ \"intf-join-group\";\n         type rt-types:ipv4-multicast-group-address;\n\
    \         config false;\n         description\n           \"The routers that joined\
    \ this multicast group.\";\n       }\n       list group {\n         key \"group-address\"\
    ;\n         config false;\n         description\n           \"Multicast group\
    \ membership information\n            that joined on the interface.\";\n     \
    \    leaf group-address {\n           type rt-types:ipv4-multicast-group-address;\n\
    \           description\n             \"Multicast group address.\";\n        \
    \ }\n         uses interface-state-group-attributes;\n         leaf last-reporter\
    \ {\n           type inet:ipv4-address;\n           description\n            \
    \ \"The IPv4 address of the last host that has sent the\n              report\
    \ to join the multicast group.\";\n         }\n         list source {\n      \
    \     key \"source-address\";\n           description\n             \"List of\
    \ multicast source information\n              of the multicast group.\";\n   \
    \        leaf source-address {\n             type inet:ipv4-address;\n       \
    \      description\n               \"Multicast source address in group record.\"\
    ;\n           }\n           uses interface-state-source-attributes;\n        \
    \   leaf last-reporter {\n             type inet:ipv4-address;\n             description\n\
    \               \"The IPv4 address of the last host that has sent the\n      \
    \          report to join the multicast source and group.\";\n           }\n \
    \          list host {\n             if-feature \"intf-explicit-tracking\";\n\
    \             key \"host-address\";\n             description\n              \
    \ \"List of hosts with the membership for the specific\n                multicast\
    \ source-group.\";\n             leaf host-address {\n               type inet:ipv4-address;\n\
    \               description\n                 \"The IPv4 address of the host.\"\
    ;\n             }\n             uses interface-state-host-attributes;\n      \
    \     }\n           // list host\n         }\n         // list source\n      \
    \ }\n       // list group\n     }\n     // interface-state-attributes-igmp\n \
    \    grouping interface-state-attributes-mld {\n       description\n         \"\
    Per-interface state attributes for MLD.\";\n       uses interface-state-attributes;\n\
    \       leaf querier {\n         type inet:ipv6-address;\n         config false;\n\
    \         mandatory true;\n         description\n           \"The querier address\
    \ in the subnet.\";\n       }\n       leaf-list joined-group {\n         if-feature\
    \ \"intf-join-group\";\n         type rt-types:ipv6-multicast-group-address;\n\
    \         config false;\n         description\n           \"The routers that joined\
    \ this multicast group.\";\n       }\n       list group {\n         key \"group-address\"\
    ;\n         config false;\n         description\n           \"Multicast group\
    \ membership information\n            that joined on the interface.\";\n     \
    \    leaf group-address {\n           type rt-types:ipv6-multicast-group-address;\n\
    \           description\n             \"Multicast group address.\";\n        \
    \ }\n         uses interface-state-group-attributes;\n         leaf last-reporter\
    \ {\n           type inet:ipv6-address;\n           description\n            \
    \ \"The IPv6 address of the last host that has sent the\n              report\
    \ to join the multicast group.\";\n         }\n         list source {\n      \
    \     key \"source-address\";\n           description\n             \"List of\
    \ multicast sources of the multicast group.\";\n           leaf source-address\
    \ {\n             type inet:ipv6-address;\n             description\n        \
    \       \"Multicast source address in group record.\";\n           }\n       \
    \    uses interface-state-source-attributes;\n           leaf last-reporter {\n\
    \             type inet:ipv6-address;\n             description\n            \
    \   \"The IPv6 address of the last host that has sent the\n                report\
    \ to join the multicast source and group.\";\n           }\n           list host\
    \ {\n             if-feature \"intf-explicit-tracking\";\n             key \"\
    host-address\";\n             description\n               \"List of hosts with\
    \ the membership for the specific\n                multicast source-group.\";\n\
    \             leaf host-address {\n               type inet:ipv6-address;\n  \
    \             description\n                 \"The IPv6 address of the host.\"\
    ;\n             }\n             uses interface-state-host-attributes;\n      \
    \     }\n           // list host\n         }\n         // list source\n      \
    \ }\n       // list group\n     }\n     // interface-state-attributes-mld\n  \
    \   grouping interface-state-group-attributes {\n       description\n        \
    \ \"Per-interface state attributes for both IGMP and MLD\n          groups.\"\
    ;\n       leaf expire {\n         type uint32;\n         units \"seconds\";\n\
    \         mandatory true;\n         description\n           \"The time left before\
    \ the multicast group state expires.\";\n       }\n       leaf filter-mode {\n\
    \         type enumeration {\n           enum include {\n             description\n\
    \               \"In include mode, reception of packets sent\n               \
    \ to the specified multicast address is requested\n                only from those\
    \ IP source addresses listed in the\n                source-list parameter\";\n\
    \           }\n           enum exclude {\n             description\n         \
    \      \"In exclude mode, reception of packets sent\n                to the given\
    \ multicast address is requested\n                from all IP source addresses\
    \ except those\n                listed in the source-list parameter.\";\n    \
    \       }\n         }\n         mandatory true;\n         description\n      \
    \     \"Filter mode for a multicast group,\n            may be either include\
    \ or exclude.\";\n       }\n       leaf up-time {\n         type uint32;\n   \
    \      units \"seconds\";\n         mandatory true;\n         description\n  \
    \         \"The elapsed time since the device created multicast group\n      \
    \      record.\";\n       }\n     }\n     // interface-state-group-attributes\n\
    \     grouping interface-state-source-attributes {\n       description\n     \
    \    \"Per-interface state attributes for both IGMP and MLD\n          source-group\
    \ records.\";\n       leaf expire {\n         type uint32;\n         units \"\
    seconds\";\n         mandatory true;\n         description\n           \"The time\
    \ left before multicast source-group state expires.\";\n       }\n       leaf\
    \ up-time {\n         type uint32;\n         units \"seconds\";\n         mandatory\
    \ true;\n         description\n           \"The elapsed time since the device\
    \ created multicast\n            source-group record.\";\n       }\n       leaf\
    \ host-count {\n         if-feature \"intf-explicit-tracking\";\n         type\
    \ uint32;\n         description\n           \"The number of host addresses.\"\
    ;\n       }\n     }\n     // interface-state-source-attributes\n     grouping\
    \ interface-state-host-attributes {\n       description\n         \"Per-interface\
    \ state attributes for both IGMP and MLD\n          hosts of source-group records.\"\
    ;\n       leaf host-filter-mode {\n         type enumeration {\n           enum\
    \ include {\n             description\n               \"In include mode.\";\n\
    \           }\n           enum exclude {\n             description\n         \
    \      \"In exclude mode.\";\n           }\n         }\n         mandatory true;\n\
    \         description\n           \"Filter mode for a multicast membership\n \
    \           host may be either include or exclude.\";\n       }\n     }\n    \
    \ // interface-state-host-attributes\n     /*\n      * Configuration and Operational\
    \ state data nodes (NMDA version)\n      */\n     augment \"/rt:routing/rt:control-plane-protocols/\"\
    \n           + \"rt:control-plane-protocol\" {\n       when \"derived-from-or-self(rt:type,\
    \ 'igmp-mld:igmp')\" {\n         description\n           \"This augmentation is\
    \ only valid for a control-plane\n            protocol instance of IGMP (type\
    \ 'igmp').\";\n       }\n       description\n         \"IGMP augmentation to routing\
    \ control-plane protocol\n          configuration and state.\";\n       container\
    \ igmp {\n         if-feature \"feature-igmp\";\n         description\n      \
    \     \"IGMP configuration and operational state data.\";\n         container\
    \ global {\n           description\n             \"Global attributes.\";\n   \
    \        uses global-config-attributes;\n           uses global-state-attributes;\n\
    \         }\n         container interfaces {\n           description\n       \
    \      \"Containing a list of interfaces.\";\n           uses interfaces-config-attributes-igmp\
    \ {\n             if-feature \"interface-global-config\";\n             refine\
    \ \"query-interval\" {\n               default \"125\";\n             }\n    \
    \         refine \"query-max-response-time\" {\n               default \"10\"\
    ;\n             }\n             refine \"robustness-variable\" {\n           \
    \    default \"2\";\n             }\n             refine \"version\" {\n     \
    \          default \"2\";\n             }\n           }\n           list interface\
    \ {\n             key \"interface-name\";\n             description\n        \
    \       \"List of IGMP interfaces.\";\n             leaf interface-name {\n  \
    \             type if:interface-ref;\n               must\n                 '/if:interfaces/if:interface[if:name\
    \ = current()]/'\n               + 'ip:ipv4' {\n                 error-message\n\
    \                   \"The interface must have IPv4 configured, either \"\n   \
    \              + \"enabled or disabled.\";\n               }\n               description\n\
    \                 \"Reference to an entry in the global interface list.\";\n \
    \            }\n             uses interface-config-attributes-igmp {\n       \
    \        if-feature \"per-interface-config\";\n               refine \"last-member-query-interval\"\
    \ {\n                 must '../version != 1 or '\n                    + '(not(../version)\
    \ and '\n                    + '(../../version != 1 or not(../../version)))' {\n\
    \                   error-message \"IGMPv1 does not support \"\n             \
    \    }\n               }\n               refine \"max-group-sources\" {\n    \
    \             must '../version = 3 or '\n                    + '(not(../version)\
    \ and (../../version = 3))' {\n                   error-message\n            \
    \         \"The version of IGMP must be 3 to support the \"\n                \
    \   + \"source-specific parameters.\";\n                 }\n               }\n\
    \               refine \"source-policy\" {\n                 must '../version\
    \ = 3 or '\n                    + '(not(../version) and (../../version = 3))'\
    \ {\n                   error-message\n                     \"The version of IGMP\
    \ must be 3 to support the \"\n                   + \"source-specific parameters.\"\
    ;\n                 }\n               }\n               refine \"explicit-tracking\"\
    \ {\n                 must '../version = 3 or '\n                    + '(not(../version)\
    \ and (../../version = 3))' {\n                   error-message\n            \
    \         \"The version of IGMP must be 3 to support the \"\n                \
    \   + \"explicit tracking function.\";\n                 }\n               }\n\
    \               refine \"lite-exclude-filter\" {\n                 must '../version\
    \ = 3 or '\n                    + '(not(../version) and (../../version = 3))'\
    \ {\n                   error-message\n                     \"The version of IGMP\
    \ must be 3 to support the \"\n                   + \"simplified EXCLUDE filter\
    \ in the Lightweight \"\n                   + \"IGMPv3 protocol.\";\n        \
    \         }\n               }\n             }\n             uses interface-state-attributes-igmp;\n\
    \           }\n           // interface\n         }\n         // interfaces\n \
    \        /*\n          * Actions\n          */\n         action clear-groups {\n\
    \           if-feature \"action-clear-groups\";\n           description\n    \
    \         \"Clears the specified IGMP cache entries.\";\n           input {\n\
    \             choice interface {\n               mandatory true;\n           \
    \    description\n                 \"Indicates the interface(s) from which the\
    \ cache\n                  entries are cleared.\";\n               case name {\n\
    \                 leaf interface-name {\n                   type leafref {\n \
    \                    path \"/rt:routing/rt:control-plane-protocols/\"\n      \
    \                  + \"rt:control-plane-protocol/\"\n                        +\
    \ \"igmp-mld:igmp/igmp-mld:interfaces/\"\n                        + \"igmp-mld:interface/igmp-mld:interface-name\"\
    ;\n                   }\n                   description\n                    \
    \ \"Name of the IGMP interface.\";\n                 }\n               }\n   \
    \            case all {\n                 leaf all-interfaces {\n            \
    \       type empty;\n                   description\n                     \"IGMP\
    \ groups from all interfaces are cleared.\";\n                 }\n           \
    \    }\n             }\n             leaf group-address {\n               type\
    \ union {\n                 type enumeration {\n                   enum * {\n\
    \                     description\n                       \"Any group address.\"\
    ;\n                   }\n                 }\n                 type rt-types:ipv4-multicast-group-address;\n\
    \               }\n               mandatory true;\n               description\n\
    \                 \"Multicast group IPv4 address.\n                  If the value\
    \ '*' is specified, all IGMP group entries\n                  are cleared.\";\n\
    \             }\n             leaf source-address {\n               type rt-types:ipv4-multicast-source-address;\n\
    \               mandatory true;\n               description\n                \
    \ \"Multicast source IPv4 address.\n                  If the value '*' is specified,\
    \ all IGMP source-group\n                  entries are cleared.\";\n         \
    \    }\n           }\n         }\n         // action clear-groups\n       }\n\
    \       // igmp\n     }\n     // augment\n     augment \"/rt:routing/rt:control-plane-protocols/\"\
    \n           + \"rt:control-plane-protocol\" {\n       when \"derived-from-or-self(rt:type,\
    \ 'igmp-mld:mld')\" {\n         description\n           \"This augmentation is\
    \ only valid for a control-plane\n            protocol instance of IGMP (type\
    \ 'mld').\";\n       }\n       description\n         \"MLD augmentation to routing\
    \ control-plane protocol\n          configuration and state.\";\n       container\
    \ mld {\n         if-feature \"feature-mld\";\n         description\n        \
    \   \"MLD configuration and operational state data.\";\n         container global\
    \ {\n           description\n             \"Global attributes.\";\n          \
    \ uses global-config-attributes;\n           uses global-state-attributes;\n \
    \        }\n         container interfaces {\n           description\n        \
    \     \"Containing a list of interfaces.\";\n           uses interfaces-config-attributes-mld\
    \ {\n             if-feature \"interface-global-config\";\n             refine\
    \ \"last-member-query-interval\" {\n               default \"1\";\n          \
    \   }\n             refine \"query-interval\" {\n               default \"125\"\
    ;\n             }\n             refine \"query-max-response-time\" {\n       \
    \        default \"10\";\n             }\n             refine \"require-router-alert\"\
    \ {\n               default \"true\";\n             }\n             refine \"\
    robustness-variable\" {\n               default \"2\";\n             }\n     \
    \        refine \"version\" {\n               default \"2\";\n             }\n\
    \           }\n           list interface {\n             key \"interface-name\"\
    ;\n             description\n               \"List of MLD interfaces.\";\n   \
    \          leaf interface-name {\n               type if:interface-ref;\n    \
    \           must\n                 '/if:interfaces/if:interface[if:name = current()]/'\n\
    \               + 'ip:ipv6' {\n                 error-message\n              \
    \     \"The interface must have IPv6 configured, either \"\n                 +\
    \ \"enabled or disabled.\";\n               }\n               description\n  \
    \               \"Reference to an entry in the global interface list.\";\n   \
    \          }\n             uses interface-config-attributes-mld {\n          \
    \     if-feature \"per-interface-config\";\n               refine \"max-group-sources\"\
    \ {\n                 must '../version = 2 or '\n                    + '(not(../version)\
    \ and '\n                    + '(../../version = 2 or not(../../version)))' {\n\
    \                   error-message\n                     \"The version of MLD must\
    \ be 2 to support the \"\n                   + \"source-specific parameters.\"\
    ;\n                 }\n               }\n               refine \"source-policy\"\
    \ {\n                 must '../version = 2 or '\n                    + '(not(../version)\
    \ and '\n                    + '(../../version = 2 or not(../../version)))' {\n\
    \                   error-message\n                     \"The version of MLD must\
    \ be 2 to support the \"\n                   + \"source-specific parameters.\"\
    ;\n                 }\n               }\n               refine \"explicit-tracking\"\
    \ {\n                 must '../version = 2 or '\n                    + '(not(../version)\
    \ and '\n                    + '(../../version = 2 or not(../../version)))' {\n\
    \                   error-message\n                     \"The version of MLD must\
    \ be 2 to support the \"\n                   + \"explicit tracking function.\"\
    ;\n                 }\n               }\n               refine \"lite-exclude-filter\"\
    \ {\n                 must '../version = 2 or '\n                    + '(not(../version)\
    \ and '\n                    + '(../../version = 2 or not(../../version)))' {\n\
    \                   error-message\n                     \"The version of MLD must\
    \ be 2 to support the \"\n                   + \"simplified EXCLUDE filter in\
    \ the Lightweight \"\n                   + \"MLDv2 protocol.\";\n            \
    \     }\n               }\n             }\n             uses interface-state-attributes-mld;\n\
    \           }\n           // interface\n         }\n         // interfaces\n \
    \        /*\n          * Actions\n          */\n         action clear-groups {\n\
    \           if-feature \"action-clear-groups\";\n           description\n    \
    \         \"Clears the specified MLD cache entries.\";\n           input {\n \
    \            choice interface {\n               mandatory true;\n            \
    \   description\n                 \"Indicates the interface(s) from which the\
    \ cache\n                  entries are cleared.\";\n               case name {\n\
    \                 leaf interface-name {\n                   type leafref {\n \
    \                    path \"/rt:routing/rt:control-plane-protocols/\"\n      \
    \                  + \"rt:control-plane-protocol/\"\n                        +\
    \ \"igmp-mld:mld/igmp-mld:interfaces/\"\n                        + \"igmp-mld:interface/igmp-mld:interface-name\"\
    ;\n                   }\n                   description\n                    \
    \ \"Name of the MLD interface.\";\n                 }\n               }\n    \
    \           case all {\n                 leaf all-interfaces {\n             \
    \      type empty;\n                   description\n                     \"MLD\
    \ groups from all interfaces are cleared.\";\n                 }\n           \
    \    }\n             }\n             leaf group-address {\n               type\
    \ union {\n                 type enumeration {\n                   enum * {\n\
    \                     description\n                       \"Any group address.\"\
    ;\n                   }\n                 }\n                 type rt-types:ipv6-multicast-group-address;\n\
    \               }\n               description\n                 \"Multicast group\
    \ IPv6 address.\n                  If the value '*' is specified, all MLD group\
    \ entries\n                  are cleared.\";\n             }\n             leaf\
    \ source-address {\n               type rt-types:ipv6-multicast-source-address;\n\
    \               description\n                 \"Multicast source IPv6 address.\n\
    \                  If the value '*' is specified, all MLD source-group\n     \
    \             entries are cleared.\";\n             }\n           }\n        \
    \ }\n         // action clear-mld-groups\n       }\n       // mld\n     }\n  \
    \   // augment\n   }\n   <CODE ENDS>\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The YANG module specified in this document defines\
    \ a schema for data\n   that is designed to be accessed via network management\
    \ protocols such\n   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF\
    \ layer\n   is the secure transport layer, and the mandatory-to-implement secure\n\
    \   transport is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer\n  \
    \ is HTTPS, and the mandatory-to-implement secure transport is TLS\n   [RFC8446].\n\
    \   The Network Configuration Access Control Model (NACM) [RFC8341]\n   provides\
    \ the means to restrict access for particular NETCONF or\n   RESTCONF users to\
    \ a preconfigured subset of all available NETCONF or\n   RESTCONF protocol operations\
    \ and content.\n   There are a number of data nodes defined in this YANG module\
    \ that are\n   writable/creatable/deletable (i.e., config true, which is the\n\
    \   default).  These data nodes may be considered sensitive or vulnerable\n  \
    \ in some network environments.  Write operations (e.g., edit-config)\n   to these\
    \ data nodes without proper protection can have a negative\n   effect on network\
    \ operations.  These are the subtrees and data nodes\n   and their sensitivity/vulnerability:\n\
    \   Under /rt:routing/rt:control-plane-protocols\n   /rt:control-plane-protocol/igmp-mld:igmp,\n\
    \   igmp-mld:global\n      This subtree specifies the configuration for the IGMP\
    \ attributes\n      at the global level on an IGMP instance.  Modifying the\n\
    \      configuration can cause IGMP membership to be deleted or\n      reconstructed\
    \ on all the interfaces of an IGMP instance.\n   igmp-mld:interfaces\n      This\
    \ subtree specifies the configuration for the IGMP attributes\n      at the interface-global\
    \ level on an IGMP instance.  Modifying the\n      configuration can cause IGMP\
    \ membership to be deleted or\n      reconstructed on all the interfaces of an\
    \ IGMP instance.\n   igmp-mld:interfaces/interface\n      This subtree specifies\
    \ the configuration for the IGMP attributes\n      at the interface level on an\
    \ IGMP instance.  Modifying the\n      configuration can cause IGMP membership\
    \ to be deleted or\n      reconstructed on a specific interface of an IGMP instance.\n\
    \   Under /rt:routing/rt:control-plane-protocols\n   /rt:control-plane-protocol/igmp-mld:mld,\n\
    \   igmp-mld:global\n      This subtree specifies the configuration for the MLD\
    \ attributes at\n      the global level on an MLD instance.  Modifying the configuration\n\
    \      can cause MLD membership to be deleted or reconstructed on all the\n  \
    \    interfaces of an MLD instance.\n   igmp-mld:interfaces\n      This subtree\
    \ specifies the configuration for the MLD attributes at\n      the interface-global\
    \ level on an MLD instance.  Modifying the\n      configuration can cause MLD\
    \ membership to be deleted or\n      reconstructed on all the interfaces of an\
    \ MLD instance.\n   igmp-mld:interfaces/interface\n      This subtree specifies\
    \ the configuration for the MLD attributes at\n      the interface level on a\
    \ device.  Modifying the configuration can\n      cause MLD membership to be deleted\
    \ or reconstructed on a specific\n      interface of an MLD instance.\n   Unauthorized\
    \ access to any data node of these subtrees can adversely\n   affect the membership\
    \ records of multicast routing subsystem on the\n   local device.  This may lead\
    \ to network malfunctions, delivery of\n   packets to inappropriate destinations,\
    \ and other problems.\n   Some of the readable data nodes in this YANG module\
    \ may be considered\n   sensitive or vulnerable in some network environments.\
    \  It is thus\n   important to control read access (e.g., via get, get-config,\
    \ or\n   notification) to these data nodes.  These are the subtrees and data\n\
    \   nodes and their sensitivity/vulnerability:\n   /rt:routing/rt:control-plane-protocols\n\
    \   /rt:control-plane-protocol/igmmp-mld:igmp\n   /rt:routing/rt:control-plane-protocols\n\
    \   /rt:control-plane-protocol/igmp-mld:mld\n   Unauthorized access to any data\
    \ node of the above subtree can\n   disclose the operational state information\
    \ of IGMP or MLD on this\n   device.\n   Some of the action operations in this\
    \ YANG module may be considered\n   sensitive or vulnerable in some network environments.\
    \  It is thus\n   important to control access to these operations.  These are\
    \ the\n   operations and their sensitivity/vulnerability:\n   /rt:routing/rt:control-plane-protocols\n\
    \   /rt:control-plane-protocol/igmmp-mld:igmp/igmmp-mld:clear-groups\n   /rt:routing/rt:control-plane-protocols\n\
    \   /rt:control-plane-protocol/igmp-mld:mld/igmp-mld:clear-groups\n   Unauthorized\
    \ access to any of the above action operations can delete\n   the IGMP or MLD\
    \ membership records on this device.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document registers the following namespace URIs\
    \ in the IETF XML\n   registry [RFC3688]:\n   URI:  urn:ietf:params:xml:ns:yang:ietf-igmp-mld\n\
    \   Registrant Contact:  The IESG.\n   XML:  N/A; the requested URI is an XML\
    \ namespace.\n   This document registers the following YANG modules in the YANG\
    \ Module\n   Names registry [RFC6020]:\n   Name:  ietf-igmp-mld\n   Namespace:\
    \  urn:ietf:params:xml:ns:yang:ietf-igmp-mld\n   Prefix:  igmp-mld\n   Reference:\
    \  RFC 8652\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1112]  Deering, S., \"Host extensions for\
    \ IP multicasting\", STD 5,\n              RFC 1112, DOI 10.17487/RFC1112, August\
    \ 1989,\n              <https://www.rfc-editor.org/info/rfc1112>.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n\
    \              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC2236]  Fenner,\
    \ W., \"Internet Group Management Protocol, Version\n              2\", RFC 2236,\
    \ DOI 10.17487/RFC2236, November 1997,\n              <https://www.rfc-editor.org/info/rfc2236>.\n\
    \   [RFC2710]  Deering, S., Fenner, W., and B. Haberman, \"Multicast\n       \
    \       Listener Discovery (MLD) for IPv6\", RFC 2710,\n              DOI 10.17487/RFC2710,\
    \ October 1999,\n              <https://www.rfc-editor.org/info/rfc2710>.\n  \
    \ [RFC3376]  Cain, B., Deering, S., Kouvelas, I., Fenner, B., and A.\n       \
    \       Thyagarajan, \"Internet Group Management Protocol, Version\n         \
    \     3\", RFC 3376, DOI 10.17487/RFC3376, October 2002,\n              <https://www.rfc-editor.org/info/rfc3376>.\n\
    \   [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n  \
    \            DOI 10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n\
    \   [RFC3810]  Vida, R., Ed. and L. Costa, Ed., \"Multicast Listener\n       \
    \       Discovery Version 2 (MLDv2) for IPv6\", RFC 3810,\n              DOI 10.17487/RFC3810,\
    \ June 2004,\n              <https://www.rfc-editor.org/info/rfc3810>.\n   [RFC4607]\
    \  Holbrook, H. and B. Cain, \"Source-Specific Multicast for\n              IP\"\
    , RFC 4607, DOI 10.17487/RFC4607, August 2006,\n              <https://www.rfc-editor.org/info/rfc4607>.\n\
    \   [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n   \
    \           the Network Configuration Protocol (NETCONF)\", RFC 6020,\n      \
    \        DOI 10.17487/RFC6020, October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n\
    \   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n  \
    \            and A. Bierman, Ed., \"Network Configuration Protocol\n         \
    \     (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n     \
    \         Shell (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n        \
    \      <https://www.rfc-editor.org/info/rfc6242>.\n   [RFC6991]  Schoenwaelder,\
    \ J., Ed., \"Common YANG Data Types\",\n              RFC 6991, DOI 10.17487/RFC6991,\
    \ July 2013,\n              <https://www.rfc-editor.org/info/rfc6991>.\n   [RFC7950]\
    \  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n            \
    \  RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n\
    \   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n       \
    \       Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017,\n          \
    \    <https://www.rfc-editor.org/info/rfc8040>.\n   [RFC8174]  Leiba, B., \"Ambiguity\
    \ of Uppercase vs Lowercase in RFC\n              2119 Key Words\", BCP 14, RFC\
    \ 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n\
    \   [RFC8294]  Liu, X., Qu, Y., Lindem, A., Hopps, C., and L. Berger,\n      \
    \        \"Common YANG Data Types for the Routing Area\", RFC 8294,\n        \
    \      DOI 10.17487/RFC8294, December 2017,\n              <https://www.rfc-editor.org/info/rfc8294>.\n\
    \   [RFC8341]  Bierman, A. and M. Bjorklund, \"Network Configuration\n       \
    \       Access Control Model\", STD 91, RFC 8341,\n              DOI 10.17487/RFC8341,\
    \ March 2018,\n              <https://www.rfc-editor.org/info/rfc8341>.\n   [RFC8342]\
    \  Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,\n              and\
    \ R. Wilton, \"Network Management Datastore Architecture\n              (NMDA)\"\
    , RFC 8342, DOI 10.17487/RFC8342, March 2018,\n              <https://www.rfc-editor.org/info/rfc8342>.\n\
    \   [RFC8343]  Bjorklund, M., \"A YANG Data Model for Interface\n            \
    \  Management\", RFC 8343, DOI 10.17487/RFC8343, March 2018,\n              <https://www.rfc-editor.org/info/rfc8343>.\n\
    \   [RFC8344]  Bjorklund, M., \"A YANG Data Model for IP Management\",\n     \
    \         RFC 8344, DOI 10.17487/RFC8344, March 2018,\n              <https://www.rfc-editor.org/info/rfc8344>.\n\
    \   [RFC8349]  Lhotka, L., Lindem, A., and Y. Qu, \"A YANG Data Model for\n  \
    \            Routing Management (NMDA Version)\", RFC 8349,\n              DOI\
    \ 10.17487/RFC8349, March 2018,\n              <https://www.rfc-editor.org/info/rfc8349>.\n\
    \   [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n \
    \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n  \
    \            <https://www.rfc-editor.org/info/rfc8446>.\n   [RFC8519]  Jethanandani,\
    \ M., Agarwal, S., Huang, L., and D. Blair,\n              \"YANG Data Model for\
    \ Network Access Control Lists (ACLs)\",\n              RFC 8519, DOI 10.17487/RFC8519,\
    \ March 2019,\n              <https://www.rfc-editor.org/info/rfc8519>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC3569]  Bhattacharyya, S., Ed., \"An Overview\
    \ of Source-Specific\n              Multicast (SSM)\", RFC 3569, DOI 10.17487/RFC3569,\
    \ July\n              2003, <https://www.rfc-editor.org/info/rfc3569>.\n   [RFC4541]\
    \  Christensen, M., Kimball, K., and F. Solensky,\n              \"Considerations\
    \ for Internet Group Management Protocol\n              (IGMP) and Multicast Listener\
    \ Discovery (MLD) Snooping\n              Switches\", RFC 4541, DOI 10.17487/RFC4541,\
    \ May 2006,\n              <https://www.rfc-editor.org/info/rfc4541>.\n   [RFC4605]\
    \  Fenner, B., He, H., Haberman, B., and H. Sandick,\n              \"Internet\
    \ Group Management Protocol (IGMP) / Multicast\n              Listener Discovery\
    \ (MLD)-Based Multicast Forwarding\n              (\"IGMP/MLD Proxying\")\", RFC\
    \ 4605, DOI 10.17487/RFC4605,\n              August 2006, <https://www.rfc-editor.org/info/rfc4605>.\n\
    \   [RFC5790]  Liu, H., Cao, W., and H. Asaeda, \"Lightweight Internet\n     \
    \         Group Management Protocol Version 3 (IGMPv3) and Multicast\n       \
    \       Listener Discovery Version 2 (MLDv2) Protocols\", RFC 5790,\n        \
    \      DOI 10.17487/RFC5790, February 2010,\n              <https://www.rfc-editor.org/info/rfc5790>.\n\
    \   [RFC6636]  Asaeda, H., Liu, H., and Q. Wu, \"Tuning the Behavior of\n    \
    \          the Internet Group Management Protocol (IGMP) and\n              Multicast\
    \ Listener Discovery (MLD) for Routers in Mobile\n              and Wireless Networks\"\
    , RFC 6636, DOI 10.17487/RFC6636,\n              May 2012, <https://www.rfc-editor.org/info/rfc6636>.\n\
    \   [RFC8340]  Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\",\n   \
    \           BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,\n           \
    \   <https://www.rfc-editor.org/info/rfc8340>.\n   [RFC8407]  Bierman, A., \"\
    Guidelines for Authors and Reviewers of\n              Documents Containing YANG\
    \ Data Models\", BCP 216, RFC 8407,\n              DOI 10.17487/RFC8407, October\
    \ 2018,\n              <https://www.rfc-editor.org/info/rfc8407>.\n   [RFC8639]\
    \  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,\n              E.,\
    \ and A. Tripathy, \"Subscription to YANG Notifications\",\n              RFC\
    \ 8639, DOI 10.17487/RFC8639, September 2019,\n              <https://www.rfc-editor.org/info/rfc8639>.\n\
    \   [RFC8641]  Clemm, A. and E. Voit, \"Subscription to YANG Notifications\n \
    \             for Datastore Updates\", RFC 8641, DOI 10.17487/RFC8641,\n     \
    \         September 2019, <https://www.rfc-editor.org/info/rfc8641>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to thank Steve Baillargeon, Hu Fangwei,\
    \ Robert\n   Kebler, Tanmoy Kundu, and Stig Venaas for their valuable\n   contributions.\n"
- title: Contributors
  contents:
  - "Contributors\n   Yisong Liu\n   Huawei Technologies\n   China\n   Email: liuyisong@huawei.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Xufeng Liu\n   Volta Networks\n   Email: xufeng.liu.ietf@gmail.com\n\
    \   Feng Guo\n   China\n   100095\n   Beijing\n   Huawei Bldg., No. 156 Beiqing\
    \ Rd., Haidian District\n   Huawei Technologies\n   Email: guofeng@huawei.com\n\
    \   Mahesh Sivakumar\n   Juniper Networks\n   1133 Innovation Way\n   Sunnyvale,\
    \ California\n   United States of America\n   Email: sivakumar.mahesh@gmail.com\n\
    \   Pete McAllister\n   Metaswitch Networks\n   100 Church Street\n   Enfield\n\
    \   EN2 6BQ\n   United Kingdom\n   Email: pete.mcallister@metaswitch.com\n   Anish\
    \ Peter\n   IP Infusion India\n   RMZ Centennial, Block D 401\n   Kundanahalli\
    \ Main Road, Mahadevapura Post\n   Bangalore\n"
