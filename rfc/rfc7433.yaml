- contents:
  - '   A Mechanism for Transporting User-to-User Call Control Information

    '
  title: __initial_text__
- contents:
  - "Abstract\n   There is a class of applications that benefit from using SIP to\n
    \  exchange User-to-User Information (UUI) data during session\n   establishment.
    \ This information, known as call control UUI data, is\n   a small piece of data
    inserted by an application initiating the\n   session and utilized by an application
    accepting the session.  The\n   syntax and semantics for the UUI data used by
    a specific application\n   are defined by a UUI package.  This UUI data is opaque
    to SIP and its\n   function is unrelated to any basic SIP function.  This document\n
    \  defines a new SIP header field, User-to-User, to transport UUI data,\n   along
    with an extension mechanism.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7433.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Overview  . . . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . .   3\n   3.  Requirements Discussion . . . . . . . . . . . . . . . . . .
    .   4\n   4.  Normative Definition  . . . . . . . . . . . . . . . . . . . .   5\n
    \    4.1.  Syntax for UUI Header Field . . . . . . . . . . . . . . .   6\n     4.2.
    \ Hex Encoding Definition . . . . . . . . . . . . . . . . .   7\n     4.3.  Source
    Identity of UUI Data . . . . . . . . . . . . . . .   7\n   5.  Guidelines for
    UUI Packages . . . . . . . . . . . . . . . . .   9\n     5.1.  Extensibility .
    . . . . . . . . . . . . . . . . . . . . .  10\n   6.  IANA Considerations . .
    . . . . . . . . . . . . . . . . . . .  11\n     6.1.  Registration of User-to-User
    Header Field . . . . . . . .  11\n     6.2.  Registration of User-to-User Header
    Field Parameters  . .  11\n     6.3.  Registration of UUI Packages  . . . . .
    . . . . . . . . .  11\n     6.4.  Registration of UUI Content Parameters  . .
    . . . . . . .  12\n     6.5.  Registration of UUI Encoding Parameters . . . .
    . . . . .  12\n     6.6.  Registration of SIP Option Tag  . . . . . . . . . .
    . . .  13\n   7.  Security Considerations . . . . . . . . . . . . . . . . . .
    .  13\n   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  14\n
    \    8.1.  Normative References  . . . . . . . . . . . . . . . . . .  14\n     8.2.
    \ Informative References  . . . . . . . . . . . . . . . . .  15\n   Appendix A.
    \ Other Possible Mechanisms  . . . . . . . . . . . . .  17\n     A.1.  Why INFO
    is Not Used  . . . . . . . . . . . . . . . . . .  17\n     A.2.  Why Other Protocol
    Encapsulation UUI Mechanisms Are Not\n           Used  . . . . . . . . . . . .
    . . . . . . . . . . . . . .  17\n     A.3.  MIME Body Approach  . . . . . . .
    . . . . . . . . . . . .  17\n     A.4.  URI Parameter . . . . . . . . . . . .
    . . . . . . . . . .  18\n   Acknowledgments . . . . . . . . . . . . . . . . .
    . . . . . . . .  19\n   Authors' Addresses  . . . . . . . . . . . . . . . . .
    . . . . . .  19\n"
  title: Table of Contents
- contents:
  - "1.  Overview\n   This document describes the transport of UUI data using SIP\n
    \  [RFC3261].  It defines a mechanism for the transport of general\n   application
    UUI data and for the transport of the call control\n   related ITU-T Recommendation
    Q.931 User-user information element\n   [Q931] and ITU-T Recommendation Q.763
    User-to-User information\n   parameter [Q763] data in SIP.  UUI data is widely
    used in the Public\n   Switched Telephone Network (PSTN) today for contact centers
    and call\n   centers.  There is also a trend for the related applications to\n
    \  transition from ISDN to SIP.  The UUI extension for SIP may also be\n   used
    for native SIP User Agents (UAs) implementing similar services\n   and to interwork
    with ISDN services.  Note that in most cases, there\n   is an a priori understanding
    between the UAs in regard to what to do\n   with received UUI data.  This document
    enables the definition of\n   packages and related attributes that can make such
    understandings\n   more explicit.\n   The UUI mechanism is designed to meet the
    use cases, requirements,\n   and call flows for SIP call control UUI detailed
    in [RFC6567].  All\n   references to requirement numbers (REQ-N) and figure numbers
    refer to\n   [RFC6567].\n   The mechanism is a new SIP header field, along with
    a new SIP option\n   tag.  The header field carries the UUI data, along with parameters\n
    \  indicating the encoding of the UUI data, the UUI package, and\n   optionally
    the content of the UUI data.  The package definition\n   contains details about
    how a particular application can utilize the\n   UUI mechanism.  The header field
    can be included (sometimes called\n   \"escaped\") into URIs supporting referral
    and redirection scenarios.\n   In these scenarios, the History-Info header field
    is used to indicate\n   the inserter of the UUI data.  The SIP option tag can
    be used to\n   indicate support for the header field.  Support for the UUI header\n
    \  field indicates that a UA is able to extract the information in the\n   UUI
    data and pass it up the protocol stack.  Individual packages\n   using the UUI
    mechanism can utilize SIP media feature tags to\n   indicate that a UA supports
    a particular UUI package.  Guidelines for\n   defining UUI packages are provided.\n"
  title: 1.  Overview
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
    \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
    in\n   [RFC2119].\n   Note that the <allOneLine> tag convention from SIP Torture
    Test\n   Messages [RFC4475] is used to show that there are no line breaks in\n
    \  the actual message syntax.\n"
  title: 2.  Terminology
- contents:
  - "3.  Requirements Discussion\n   This section describes how the User-to-User header
    field meets the\n   requirements in [RFC6567].  The header field can be included
    in\n   INVITE requests and responses and BYE requests and responses, meeting\n
    \  REQ-1 and REQ-2.\n   For redirection and referral use cases and REQ-3, the
    header field is\n   included (escaped) within the Contact or Refer-To URI.  The
    details\n   of this mechanism as it applies for redirection and referral use\n
    \  cases are covered in Section 4.1.\n   Since SIP proxy forwarding and retargeting
    does not affect header\n   fields, the header field meets REQ-4.\n   The UUI header
    field will carry the UUI data and not a pointer to the\n   data, so REQ-5 is met.\n
    \  Since the basic design of the UUI header field is similar to the ISDN\n   UUI
    service, interworking with PSTN protocols is straightforward and\n   is documented
    in a separate specification [RFC7434], meeting REQ-6.\n   Requirements REQ-7,
    REQ-8, and REQ-10 relate to discovery of the\n   mechanism and supported packages,
    and hence applications.  REQ-7\n   relates to support of the UUI header field,
    while REQ-8 relates to\n   routing based on support of the UUI header field.  REQ-7
    is met by\n   defining a new SIP option tag \"uui\".  The use of a Require:uui
    in a\n   request or Supported:uui in an OPTIONS response could be used to\n   require
    or discover support of the mechanism.  The presence of a\n   Supported:uui or
    Require:uui header field can be used by proxies to\n   route to an appropriate
    UA, meeting REQ-8.  However, note that only\n   UAs are expected to understand
    the UUI data -- proxies and other\n   intermediaries do not.  REQ-10 is met by
    utilizing SIP feature tags\n   [RFC3840].  For example, the feature tag \"sip.uui-isdn\"
    could be used\n   to indicate support of the ISDN UUI package, or \"sip.uui-pk1\"
    could\n   be used to indicate support for a particular package, pk1.\n   Proxies
    commonly apply policy to the presence of certain SIP header\n   fields in requests
    by either passing them or removing them from\n   requests.  REQ-9 is met by allowing
    proxies and other intermediaries\n   to remove UUI header fields in a request
    or response based on policy.\n   Carrying UUI data elements of at least 129 octets
    is trivial in the\n   UUI header field, meeting REQ-11.  Note that avoiding having
    very\n   large UUI data elements is a good idea, as SIP header fields have\n   traditionally
    not been large.\n   To meet REQ-12 for the redirection and referral use cases,
    the\n   History-Info header field [RFC7044] can be used.  In these\n   retargeting
    cases, the changed Request-URI will be recorded in the\n   History-Info header
    field along with the identity of the element that\n   performed the retargeting.\n
    \  The requirement for integrity protection in REQ-13 could be met by\n   the
    use of an S/MIME signature over a subset of header fields, as\n   defined in \"SIP
    Header Privacy and Integrity using S/MIME: Tunneling\n   SIP\", Section 23.4 of
    RFC 3261.  Note that the lack of deployment of\n   S/MIME with SIP means that,
    in general, REQ-13 is not met.  The\n   requirement of REQ-14 for end-to-end privacy
    could be met using\n   S/MIME or using encryption at the application layer.  Note
    that the\n   use of S/MIME to secure the UUI data will result in an additional\n
    \  body being added to the request.  Hop-wise Transport Layer Security\n   (TLS)
    [RFC5246] allows the header field to meet REQ-15 for hop-by-hop\n   security.\n"
  title: 3.  Requirements Discussion
- contents:
  - "4.  Normative Definition\n   This document defines a new SIP header field \"User-to-User\"
    to\n   transport call control UUI data to meet the requirements in\n   [RFC6567].\n
    \  To help tag and identify the UUI data used with this header field,\n   \"purpose\",
    \"content\", and \"encoding\" header field parameters are\n   defined.  The \"purpose\"
    header field parameter identifies the package\n   that defines the generation
    and usage of the UUI data for a\n   particular application.  The value of the
    \"purpose\" parameter is the\n   package name, as registered in the \"UUI Packages\"
    subregistry defined\n   in Section 6.3.  For the case of interworking with the
    ISDN UUI\n   service, the ISDN UUI service interworking package is used.  The\n
    \  default value for the \"purpose\" header field is \"isdn-uui\" as defined\n
    \  in [RFC7434].  If the \"purpose\" header field parameter is not\n   present,
    the ISDN UUI MUST be used.  The \"content\" header field\n   parameter identifies
    the actual content of the UUI data.  If not\n   present, the default content defined
    for the package MUST be used.\n   Newly defined UUI packages MUST define or reference
    at least a\n   default \"content\" value.  The \"encoding\" header field parameter\n
    \  indicates the method of encoding the information in the UUI data\n   associated
    with a particular \"content\" value.  This specification\n   only defines \"encoding=hex\".
    \ If the \"encoding\" header field\n   parameter is not present, the default encoding
    defined for the\n   package MUST be used.\n   UUI data is considered an opaque
    series of octets.  This mechanism\n   MUST NOT be used to convey a URL or URI,
    since the Call-Info header\n   field in [RFC3261] already supports this use case.\n"
  - contents:
    - "4.1.  Syntax for UUI Header Field\n   The UUI header field can be present in
      INVITE requests and responses\n   and in BYE requests and responses.  Note that
      when the UUI header is\n   used in responses, it can only be utilized in end-to-end
      responses,\n   e.g., 1xx (excluding 100), 2xx, and 3xx responses.\n   The following
      syntax specification uses the Augmented Backus-Naur\n   Form (ABNF) as described
      in RFC 5234 and extends RFC 3261 (where\n   token, quoted-string, and generic-param
      are defined).\n        UUI         = \"User-to-User\" HCOLON uui-value *(COMMA
      uui-value)\n        uui-value   = uui-data *(SEMI uui-param)\n        uui-data
      \   = token / quoted-string\n        uui-param   = pkg-param / cont-param /
      enc-param / generic-param\n        pkg-param   = \"purpose\" EQUAL pkg-param-value\n
      \       pkg-param-value = token\n        cont-param   = \"content\" EQUAL cont-param-value\n
      \       cont-param-value = token\n        enc-param   = \"encoding\" EQUAL enc-param-value\n
      \       enc-param-value = token / \"hex\"\n   Each package defines how many
      User-to-User header fields of each\n   package may be present in a request or
      a response.  A sender MAY\n   include multiple User-to-User header fields, and
      a receiver MUST be\n   prepared to receive multiple User-to-User header fields.
      \ Consistent\n   with the rules of SIP syntax, the syntax defined in this document\n
      \  allows any combination of individual User-to-User header fields or\n   User-to-User
      header fields with multiple comma separated UUI data\n   elements.  Any size
      limitations on the UUI data for a particular\n   purpose are to be defined by
      the related UUI package.\n   UAs SHALL ignore UUI data from packages or encoding
      that they do not\n   understand.\n   For redirection use cases, the header field
      is included (escaped)\n   within the Contact URI.  For referral use cases, the
      header field is\n   included (escaped) within the Refer-To URI.  For example,
      if a UA\n   supports this specification, it SHOULD include any UUI data included\n
      \  in a redirection URI (if the UUI data and encoding is understood).\n   Note
      that redirection can occur multiple times to a request.\n   Currently, UAs that
      support attended transfer support the ability to\n   include a Replaces header
      field [RFC3891] into a Refer-To URI, and\n   when acting upon this URI, UAs
      add the Replaces header field to the\n   triggered INVITE.  This sort of logic
      and behavior is utilized for\n   the UUI header field (that is, the UUI header
      field is included in\n   the triggered INVITE).  The UA processing the REFER
      [RFC3515] or the\n   3xx response to the INVITE SHOULD support the UUI mechanism.
      \ If the\n   REFER or redirect target does not support UUI, the UUI header will
      be\n   discarded as per [RFC3261].  However, this may limit the utility of\n
      \  use cases that depend upon the UUI being supported by all elements.\n   Here
      is an example of an included User-to-User header field from the\n   redirection
      response F2 of Figure 2 in [RFC6567]:\n   <allOneLine>\n   Contact: <sip:+12125551212@gateway.example.com?User-to-User=\n
      \  56a390f3d2b7310023a2%3Bencoding%3Dhex%3Bpurpose%3Dfoo%3B\n   content%3Dbar>\n
      \  </allOneLine>\n   The resulting INVITE F4 would contain:\n User-to-User:
      56a390f3d2b7310023a2;encoding=hex;purpose=foo;content=bar\n"
    title: 4.1.  Syntax for UUI Header Field
  - contents:
    - "4.2.  Hex Encoding Definition\n   This specification defines hex encoding of
      UUI data.  When the value\n   of \"hex\" is used in the \"encoding\" parameter
      of a header field, the\n   data is encoded using base16 encoding according to
      Section 8 of\n   [RFC4648].  The hex-encoded value is normally represented using
      the\n   \"token\" construction from RFC 3261, although the \"quoted-string\"\n
      \  construction is permitted, in which case the quotes MUST be ignored.\n   If
      a canonicalized version of a normally case-insensitive hex encoded\n   UUI data
      object is needed for a digital signature or integrity\n   checking, then the
      base16 encoding with all upper case MUST be used.\n"
    title: 4.2.  Hex Encoding Definition
  - contents:
    - "4.3.  Source Identity of UUI Data\n   It is important for the recipient of
      UUI data to know the identity of\n   the UA that inserted the UUI data.  In
      a request without a History-\n   Info header field, the identity of the entity
      that inserted the UUI\n   data will be assumed to be the source of the SIP message.
      \ For a SIP\n   request, typically this is the UA identified by the URI in the
      From\n   header field or a P-Asserted-Identity [RFC3325] header field.  In a\n
      \  request with a History-Info header field, the recipient needs to\n   parse
      the Targeted-to-URIs present (hi-targeted-to-uri defined in\n   [RFC7044]) to
      see if any included User-to-User header fields are\n   present.  If an included
      User-to-User header field is present and\n   matches the UUI data in the request,
      this indicates that redirection\n   has taken place, resulting in the inclusion
      of UUI data in the\n   request.  The inserter of the UUI data will be the UA
      identified by\n   the Targeted-to-URI of the History-Info element prior to the
      element\n   with the included UUI data.  In a response, the inserter of the
      UUI\n   data will be the identity of the UA that generated the response.\n   Typically,
      this is the UA identified in the To header field of the\n   response.  Note
      that any updates to this identity by use of the SIP\n   connected identity extension
      [RFC4916] or other identity modifiers\n   will update this information.\n   For
      an example of History-Info and redirection, consider Figure 2\n   from [RFC6567]
      where the Originating UA is Carol, the Redirector Bob,\n   and the Terminating
      UA Alice.  The INVITE F4 containing UUI data\n   could be:\n   INVITE sips:alice@example.com
      SIP/2.0\n   Via: SIP/2.0/TLS lab.example.com:5061\n    ;branch=z9hG4bKnashds9\n
      \  To: Bob <sips:bob@example.com>\n   From: Carol <sips:carol@example.com>;tag=323sf33k2\n
      \  Call-ID: dfaosidfoiwe83ifkdf\n   Max-Forwards: 70\n   Contact: <sips:carol@lab.example.com>\n
      \  Supported: histinfo\n   User-to-User: 342342ef34;encoding=hex\n   History-Info:
      <sips:bob@example.com>;index=1\n   <allOneLine>\n   History-Info: <sips:alice@example.com?Reason=SIP%3Bcause%3D302\n
      \     &User-to-User=342342ef34%3Bencoding%3Dhex>;index=1.1;rc=1\n   </allOneLine>\n
      \  Without the redirection captured in the History-Info header field,\n   Alice
      would conclude that the UUI data was inserted by Carol.\n   However, the History-Info
      containing UUI data (index=1.1) indicates\n   that the inserter was Bob (index=1).\n
      \  To enable maintaining a record of the inserter identity of UUI data,\n   UAs
      supporting this mechanism SHOULD support History-Info [RFC7044]\n   and include
      Supported: histinfo in all requests and responses.\n   If a border element such
      as a proxy or a Back-to-Back User Agent\n   (B2BUA) removes a History-Info header
      field containing a User-to-User\n   parameter, the UA consuming the UUI data
      may not be able at the SIP\n   level to identify the source of the UUI data.\n"
    title: 4.3.  Source Identity of UUI Data
  title: 4.  Normative Definition
- contents:
  - "5.  Guidelines for UUI Packages\n   UUI packages defined using this SIP UUI mechanism
    MUST follow the\n   \"Standards Action\" guideline as defined in [RFC5226] and
    publish a\n   Standards Track RFC that describes the usage.  The CUSS WG chose
    to\n   adopt this conservative policy while it considers other potential\n   registration
    policies.  Note that this mechanism is not suitable for\n   the transport of arbitrary
    data between UAs.  The following\n   guidelines are provided to help determine
    if this mechanism is\n   appropriate or not.  The SIP UUI mechanism is applicable
    when all of\n   the following conditions are met:\n   1.  The information is generated
    and consumed by an application\n       during session setup using SIP, but the
    application is not\n       necessarily SIP aware.\n   2.  The behavior of SIP
    entities that support it is not significantly\n       changed (as discussed in
    Section 4 of [RFC5727]).\n   3.  UAs are the generators and consumers of the UUI
    data.  Proxies\n       and other intermediaries may route based on the presence
    of a\n       User-to-User header field or a particular package tag but do not\n
    \      otherwise consume or generate the UUI data.\n   4.  There are no privacy
    issues associated with the information being\n       transported (e.g., geolocation
    or emergency-related information\n       are examples of inappropriate UUI data).\n
    \  5.  The UUI data is not being utilized for User-to-User Remote\n       Procedure
    Calls (RPCs).\n   UUI packages define the semantics for a particular application
    usage\n   of UUI data.  The content defines the syntax of the UUI data, while\n
    \  the encoding defines the encoding of the UUI data for the content.\n   Each
    content is defined as a stream of octets, which allows multiple\n   encodings
    of that content.  For example, packages may define:\n   1.  The SIP methods and
    responses in which the UUI data may be\n       present.\n   2.  The maximum number
    of UUI data elements that may be inserted into\n       a request or response.
    \ The default is one per encoding.  Note\n       that a UA may still receive a
    request with more than this maximum\n       number due to redirection.  The package
    needs to define how to\n       handle this situation.\n   3.  The default values
    for content and encoding if they are not\n       present.  If the same UUI data
    may be inserted multiple times\n       with different encodings, the package needs
    to state this.  A\n       package may support and define multiple contents and
    their\n       associated encodings and reuse contents defined by other\n       packages.\n
    \  4.  Any size limitations on the UUI data.  Size needs to be specified\n       in
    terms of the octet stream output of the content, since the\n       size of the
    resulting uui-data element will vary depending on the\n       encoding scheme.\n
    \  A package MUST define a \"purpose\" header field value to identify the\n   package
    in the coding.  A package MUST describe the new application\n   that is utilizing
    the UUI data and provide some use case examples.\n   The default \"content\" value
    MUST be defined or referenced in another\n   document for the package.  Additional
    allowed contents MAY also be\n   defined or referenced.  Any restrictions on the
    size of the UUI data\n   MUST be described.  In addition, a package MAY define
    a media feature\n   tag per [RFC3840] to indicate support for this UUI package.
    \ For\n   example, the media feature tag \"sip.uui-pk1\" could be defined to\n
    \  indicate support for a UUI package named pk1.  The definition of a\n   new
    SIP option tag solely to identify support for a UUI package is\n   NOT RECOMMENDED
    unless there are additional SIP behaviors needed to\n   implement this feature.\n
    \  For an example UUI package definition, see [RFC7434].\n"
  - contents:
    - "5.1.  Extensibility\n   New \"content\" values MUST describe the semantics
      of the UUI data and\n   valid encodings, and give some example use cases.  A
      previously\n   defined UUI content value can be used in a new package.  In this\n
      \  case, the semantics and usage of the content by the new package is\n   defined
      within the new package.  New UUI content types cannot be\n   added to existing
      packages -- instead, a new package would need to be\n   defined.  New content
      values that are defined are added to the IANA\n   registry with a Standards
      Track RFC, which needs to discuss the\n   issues in this section.  If no new
      encoding value is defined for a\n   content, the encoding defaults to \"hex\"
      as defined in this document.\n   In this case, the \"hex\" value will be explicitly
      stated via the\n   encoding parameter as the encoding for the content.\n   New
      \"encoding\" values associated with a new content MUST reference a\n   specific
      encoding scheme (such as \"hex\", which is defined in this\n   specification)
      or define the new encoding scheme.  A previously\n   defined UUI encoding value
      can be used with a newly defined content.\n   In this case, the usage of the
      encoding is defined by the content\n   definition.  New UUI encodings cannot
      be added to existing contents\n   -- instead, a new content would need to be
      defined.  Newly defined\n   encoding values are added to the IANA registry with
      a Standards Track\n   RFC, which needs to discuss the issues in this section.\n"
    title: 5.1.  Extensibility
  title: 5.  Guidelines for UUI Packages
- contents:
  - '6.  IANA Considerations

    '
  - contents:
    - "6.1.  Registration of User-to-User Header Field\n   This document defines a
      new SIP header field named \"User-to-User\".\n   The following row has been
      added to the \"Header Fields\" section of\n   the SIP parameter registry:\n
      \                +------------------+--------------+-----------+\n                 |
      Header Name      | Compact Form | Reference |\n                 +------------------+--------------+-----------+\n
      \                | User-to-User     |              | [RFC7433] |\n                 +------------------+--------------+-----------+\n"
    title: 6.1.  Registration of User-to-User Header Field
  - contents:
    - "6.2.  Registration of User-to-User Header Field Parameters\n   This document
      defines the parameters for the header field defined in\n   the preceding section.
      \ The header field \"User-to-User\" can contain\n   the parameters \"encoding\",
      \"content\", and \"purpose\".\n   The following rows have been added to the
      \"Header Field Parameters\n   and Parameter Values\" section of the SIP parameter
      registry:\n   +------------------+----------------+-------------------+-----------+\n
      \  | Header Field     | Parameter Name | Predefined Values | Reference |\n   +------------------+----------------+-------------------+-----------+\n
      \  | User-to-User     | encoding       | Yes               | [RFC7433] |\n   +------------------+----------------+-------------------+-----------+\n
      \  | User-to-User     | content        | No                | [RFC7433] |\n   +------------------+----------------+-------------------+-----------+\n
      \  | User-to-User     | purpose        | No                | [RFC7433] |\n   +------------------+----------------+-------------------+-----------+\n"
    title: 6.2.  Registration of User-to-User Header Field Parameters
  - contents:
    - "6.3.  Registration of UUI Packages\n   This specification establishes the \"UUI
      Packages\" subregistry under\n   <http://www.iana.org/assignments/sip-parameters>.\n
      \  The descriptive text for this subregistry is:\n   UUI packages provide information
      about the usage of the UUI data in a\n   User-to-User header field [RFC7433].\n
      \  The registration policy for this registry is \"Standards Action\" as\n   defined
      in [RFC5226].\n   +------------+------------------------------------------+-----------+\n
      \  | Package    | Description                              | Reference |\n   +------------+------------------------------------------+-----------+\n"
    title: 6.3.  Registration of UUI Packages
  - contents:
    - "6.4.  Registration of UUI Content Parameters\n   This specification establishes
      the \"UUI Content Parameters\"\n   subregistry under <http://www.iana.org/assignments/sip-parameters>.\n
      \  The descriptive text for this subregistry is:\n   UUI content provides information
      about the content of the UUI data in\n   a User-to-User header field [RFC7433].\n
      \  The registration policy for this registry is \"Standards Action\" as\n   defined
      in [RFC5226].\n   +------------+------------------------------------------+-----------+\n
      \  | Content    | Description                              | Reference |\n   +------------+------------------------------------------+-----------+\n"
    title: 6.4.  Registration of UUI Content Parameters
  - contents:
    - "6.5.  Registration of UUI Encoding Parameters\n   This specification establishes
      the \"UUI Encoding Parameters\"\n   subregistry under <http://www.iana.org/assignments/sip-parameters>\n
      \  and initiates its population with the table below.\n   The descriptive text
      for this subregistry is:\n   UUI encoding provides information about the encoding
      of the UUI data\n   in a User-to-User header field [RFC7433].\n   The registration
      policy for this registry is \"Standards Action\" as\n   defined in [RFC5226].\n
      \  +-----------+-------------------------------------------+-----------+\n   |
      Encoding  | Description                               | Reference |\n   +-----------+-------------------------------------------+-----------+\n
      \  | hex       | The UUI data is encoded using hexadecimal | [RFC7433] |\n   +-----------+-------------------------------------------+-----------+\n"
    title: 6.5.  Registration of UUI Encoding Parameters
  - contents:
    - "6.6.  Registration of SIP Option Tag\n   This specification registers a new
      SIP option tag, as per the\n   guidelines in Section 27.1 of [RFC3261].\n   This
      document defines the SIP option tag \"uui\".\n   The following row has been
      added to the \"Option Tags\" section of the\n   SIP Parameter Registry:\n   +------------+------------------------------------------+-----------+\n
      \  | Name       | Description                              | Reference |\n   +------------+------------------------------------------+-----------+\n
      \  | uui        | This option tag is used to indicate that | [RFC7433] |\n   |
      \           | a UA supports and understands the        |           |\n   |            |
      User-to-User header field.               |           |\n   +------------+------------------------------------------+-----------+\n"
    title: 6.6.  Registration of SIP Option Tag
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   UUI data can potentially carry sensitive information
    that might\n   require confidentiality protection for privacy or integrity\n   protection
    from third parties that may wish to read or modify the UUI\n   data.  The three
    security models described in [RFC6567] may be\n   applicable for the UUI mechanism.\n
    \  One model treats the SIP layer as untrusted and requires end-to-end\n   integrity
    protection and/or encryption.  This model can be achieved\n   by providing these
    security services at a layer above SIP.  In this\n   case, applications are encouraged
    to use their own integrity and/or\n   encryption mechanisms before passing it
    to the SIP layer.\n   The second approach is for the application to pass the UUI
    without\n   any protection to the SIP layer and require the SIP layer to provide\n
    \  this security.  This approach is possible in theory, although its\n   practical
    use would be extremely limited.  To preserve multi-hop or\n   end-to-end confidentiality
    and integrity of UUI data, approaches\n   using S/MIME or IPsec can be used, as
    discussed in the review of\n   REQ-13 and REQ-14 in Section 3 of this document.
    \ However, the lack\n   of deployment of these mechanisms means that applications
    cannot in\n   general rely on them being present.\n   The third model utilizes
    a trust domain and relies on perimeter\n   security at the SIP layer.  This is
    the security model of the PSTN\n   and ISDN where UUI is commonly used today.
    \ This approach uses hop-\n   by-hop security mechanisms and relies on border
    elements for\n   filtering and application of policy.  Standard deployed SIP security\n
    \  mechanisms such as TLS transport offer privacy and integrity\n   protection
    properties on a hop-by-hop basis at the SIP layer.\n   If the UUI data was included
    by the UA originator of the SIP request\n   or response, normal SIP mechanisms
    can be used to determine the\n   identity of the inserter of the UUI data.  If
    the UUI data was\n   included by a UA that was not the originator of the request,
    a\n   History-Info header field can be used to determine the identity of\n   the
    inserter of the UUI data.  UAs can apply policy based on the\n   origin of the
    UUI data using this information.  In short, the UUI\n   data included in an INVITE
    can be trusted as much as the INVITE\n   itself can be trusted.\n   Note that
    it is possible that this mechanism could be used as a\n   covert communication
    channel between UAs, conveying information\n   unknown to the SIP network.\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC3261]
      \ Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n              A.,
      Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler, \"SIP:
      Session Initiation Protocol\", RFC 3261,\n              June 2002, <http://www.rfc-editor.org/info/rfc3261>.\n
      \  [RFC3515]  Sparks, R., \"The Session Initiation Protocol (SIP) Refer\n              Method\",
      RFC 3515, April 2003,\n              <http://www.rfc-editor.org/info/rfc3515>.\n
      \  [RFC3840]  Rosenberg, J., Schulzrinne, H., and P. Kyzivat,\n              \"Indicating
      User Agent Capabilities in the Session\n              Initiation Protocol (SIP)\",
      RFC 3840, August 2004,\n              <http://www.rfc-editor.org/info/rfc3840>.\n
      \  [RFC3891]  Mahy, R., Biggs, B., and R. Dean, \"The Session Initiation\n              Protocol
      (SIP) \"Replaces\" Header\", RFC 3891, September\n              2004, <http://www.rfc-editor.org/info/rfc3891>.\n
      \  [RFC4474]  Peterson, J. and C. Jennings, \"Enhancements for\n              Authenticated
      Identity Management in the Session\n              Initiation Protocol (SIP)\",
      RFC 4474, August 2006,\n              <http://www.rfc-editor.org/info/rfc4474>.\n
      \  [RFC4648]  Josefsson, S., \"The Base16, Base32, and Base64 Data\n              Encodings\",
      RFC 4648, October 2006,\n              <http://www.rfc-editor.org/info/rfc4648>.\n
      \  [RFC4916]  Elwell, J., \"Connected Identity in the Session Initiation\n              Protocol
      (SIP)\", RFC 4916, June 2007,\n              <http://www.rfc-editor.org/info/rfc4916>.\n
      \  [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA
      Considerations Section in RFCs\", BCP 26, RFC 5226,\n              May 2008,
      <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC5246]  Dierks, T. and E. Rescorla,
      \"The Transport Layer Security\n              (TLS) Protocol Version 1.2\",
      RFC 5246, August 2008,\n              <http://www.rfc-editor.org/info/rfc5246>.\n
      \  [RFC7044]  Barnes, M., Audet, F., Schubert, S., van Elburg, J., and\n              C.
      Holmberg, \"An Extension to the Session Initiation\n              Protocol (SIP)
      for Request History Information\", RFC 7044,\n              February 2014, <http://www.rfc-editor.org/info/rfc7044>.\n
      \  [RFC7434]  Drage, K. and A. Johnston, \"Interworking ISDN Call Control\n
      \             User Information with SIP\", RFC 7434, January 2015,\n              <http://www.rfc-editor.org/info/rfc7434>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [Q1980]    ITU-T, \"The Narrowband Signalling
      Syntax (NSS) - Syntax\n              Definition\", ITU-T Recommendation Q.1980.1,\n
      \             <http://www.itu.int/itudoc/itu-t/aap/sg11aap/history/\n              q1980.1/q1980.1.html>.\n
      \  [Q763]     ITU-T, \"Signalling System No. 7 - ISDN User Part formats\n              and
      codes\", ITU-T Recommendation Q.763,\n              <http://www.itu.int/rec/T-REC-Q.763-199912-I/en>.\n
      \  [Q931]     ITU-T, \"ISDN user-network interface layer 3 specification\n              for
      basic call control\", ITU-T Recommendation Q.931,\n              <http://www.itu.int/rec/T-REC-Q.931-199805-I/en>.\n
      \  [RFC3325]  Jennings, C., Peterson, J., and M. Watson, \"Private\n              Extensions
      to the Session Initiation Protocol (SIP) for\n              Asserted Identity
      within Trusted Networks\", RFC 3325,\n              November 2002, <http://www.rfc-editor.org/info/rfc3325>.\n
      \  [RFC3372]  Vemuri, A. and J. Peterson, \"Session Initiation Protocol\n              for
      Telephones (SIP-T): Context and Architectures\", BCP\n              63, RFC
      3372, September 2002,\n              <http://www.rfc-editor.org/info/rfc3372>.\n
      \  [RFC4475]  Sparks, R., Hawrylyshen, A., Johnston, A., Rosenberg, J.,\n              and
      H. Schulzrinne, \"Session Initiation Protocol (SIP)\n              Torture Test
      Messages\", RFC 4475, May 2006,\n              <http://www.rfc-editor.org/info/rfc4475>.\n
      \  [RFC5727]  Peterson, J., Jennings, C., and R. Sparks, \"Change Process\n
      \             for the Session Initiation Protocol (SIP) and the Real-\n              time
      Applications and Infrastructure Area\", BCP 67, RFC\n              5727, March
      2010,\n              <http://www.rfc-editor.org/info/rfc5727>.\n   [RFC6086]
      \ Holmberg, C., Burger, E., and H. Kaplan, \"Session\n              Initiation
      Protocol (SIP) INFO Method and Package\n              Framework\", RFC 6086,
      January 2011,\n              <http://www.rfc-editor.org/info/rfc6086>.\n   [RFC6567]
      \ Johnston, A. and L. Liess, \"Problem Statement and\n              Requirements
      for Transporting User-to-User Call Control\n              Information in SIP\",
      RFC 6567, April 2012,\n              <http://www.rfc-editor.org/info/rfc6567>.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Appendix A.  Other Possible Mechanisms\n   Two other possible mechanisms for
    transporting UUI data will be\n   described: MIME body and URI parameter transport.\n"
  - contents:
    - "A.1.  Why INFO is Not Used\n   Since the INFO method [RFC6086] was developed
      for ISDN User Part\n   (ISUP) interworking of User-to-User Information, it might
      seem to be\n   the logical choice here.  For non-call control User-to-User\n
      \  Information, INFO can be utilized for end-to-end transport.  However,\n   for
      transport of call control User-to-User Information, INFO can not\n   be used.
      \ As the call flows in [RFC6567] show, the information is\n   related to an
      attempt to establish a session and needs to be passed\n   with the session setup
      request (INVITE), responses to that INVITE, or\n   session termination requests.
      \ As a result, it is not possible to use\n   INFO in these cases.\n"
    title: A.1.  Why INFO is Not Used
  - contents:
    - "A.2.  Why Other Protocol Encapsulation UUI Mechanisms Are Not Used\n   Other
      protocols have the ability to transport UUI data.  For example,\n   consider
      the ITU-T Recommendation Q.931 User-user information element\n   [Q931] and
      the ITU-T Recommendation Q.763 User-to-User information\n   parameter [Q763].
      \ In addition, the Narrowband Signalling System\n   (NSS) [Q1980] is also able
      to transport UUI data.  Should one of\n   these protocols be in use, and present
      in both User Agents, then\n   utilizing these other protocols to transport UUI
      data might be a\n   logical solution.  Essentially, this is just adding an additional\n
      \  layer in the protocol stack.  In these cases, SIP is not transporting\n   the
      UUI data; it is encapsulating another protocol, and that protocol\n   is transporting
      the UUI data.  Once a mechanism to transport that\n   other protocol using SIP
      exists, the UUI data transport function is\n   essentially obtained without
      any additional effort or work.\n   However, the CUSS working group believes,
      consistent with its\n   charter, that SIP needs to have its own native UUI data
      transport\n   mechanism.  It is not reasonable for a SIP UA to have to implement\n
      \  another entire protocol (either ISDN or NSS, for example) just to get\n   the
      very simple UUI data transport service.  Of course, this work\n   does not preclude
      anyone from using other protocols with SIP to\n   transport UUI data.\n"
    title: A.2.  Why Other Protocol Encapsulation UUI Mechanisms Are Not Used
  - contents:
    - "A.3.  MIME Body Approach\n   One method of transport is to use a MIME body.
      \ This is in keeping\n   with the Session Initiation Protocol for Telephones
      (SIP-T)\n   architecture [RFC3372] in which MIME bodies are used to transport\n
      \  ISUP information.  Since the INVITE will normally have a Session\n   Description
      Protocol (SDP) message body, the resulting INVITE with\n   SDP and UUI data
      will be multipart MIME.  This is not ideal as many\n   SIP UAs do not support
      multipart MIME INVITEs.\n   A bigger problem is the insertion of a UUI message
      body by a redirect\n   server or in a REFER.  The body would need to be encoded
      in the\n   Contact URI of the 3xx response or the Refer-To URI of a REFER.\n
      \  Currently, the authors are not aware of any UAs that support this\n   capability
      today for any body type.  As such, the complete set of\n   semantics for this
      operation would need to be determined and defined.\n   Some issues will need
      to be resolved, such as, do all the Content-*\n   header fields have to be included
      as well?  And, what if the included\n   Content-Length does not agree with the
      included body?\n   Since proxies cannot remove a body from a request or response,
      it is\n   not clear how this mechanism could meet REQ-9.\n   The requirement
      for integrity protection could be met by the use of\n   an S/MIME signature
      over the body, as defined in \"Securing MIME\n   bodies\", Section 23.3 of RFC
      3261.  Alternatively, this could be\n   achieved using [RFC4474].  The requirement
      for end-to-end privacy\n   could be met using S/MIME encryption or using encryption
      at the\n   application layer.  However, note that neither S/MIME or RFC 4474\n
      \  enjoys deployment in SIP today.\n   An example:\n   <allOneLine>\n   Contact:
      <sip:+12125551212@gateway.example.com?Content-Type=\n   application/uui&body=ZeGl9i2icVqaNVailT6F5iJ90m6mvuTS4OK05M0vDk0Q4Xs>\n
      \  </allOneLine>\n   As such, the MIME body approach meets REQ-1, REQ-2, REQ-4,
      REQ-5,\n   REQ-7, REQ-11, REQ-13, and REQ-14.  Meeting REQ-12 seems possible,\n
      \  although the authors do not have a specific mechanism to propose.\n   Meeting
      REQ-3 is problematic but not impossible for this mechanism.\n   However, this
      mechanism does not seem to be able to meet REQ-9.\n"
    title: A.3.  MIME Body Approach
  - contents:
    - "A.4.  URI Parameter\n   Another proposed approach is to encode the UUI data
      as a URI\n   parameter.  This UUI parameter could be included in a Request-URI
      or\n   in the Contact URI or Refer-To URI.  It is not clear how it could be\n
      \  transported in a response that does not have a Request-URI, or in BYE\n   requests
      or responses.\n   <allOneLine>\n   Contact: <sip:+12125551212@gateway.example.com;uui=ZeGl9i2icVqaNVailT\n
      \  6F5iJ90m6mvuTS4OK05M0vDk0Q4Xs>\n   </allOneLine>\n   An INVITE sent to this
      Contact URI would contain UUI data in the\n   Request-URI of the INVITE.  The
      URI parameter has a drawback in that\n   a URI parameter carried in a Request-URI
      will not survive retargeting\n   by a proxy as shown in Figure 2 of [RFC6567].
      \ That is, if the URI is\n   included with an Address of Record instead of a
      Contact URI, the URI\n   parameter in the Request-URI will not be copied over
      to the Contact\n   URI, resulting in the loss of the information.  Note that
      if this\n   same URI was present in a Refer-To header field, the same loss of\n
      \  information would occur.\n   The URI parameter approach would meet REQ-3,
      REQ-5, REQ-7, REQ-9, and\n   REQ-11.  It is possible the approach could meet
      REQ-12 and REQ-13.\n   The mechanism does not appear to meet REQ-1, REQ-2, REQ-4,
      and\n   REQ-14.\n"
    title: A.4.  URI Parameter
  title: Appendix A.  Other Possible Mechanisms
- contents:
  - "Acknowledgments\n   Joanne McMillen was a major contributor and coauthor of earlier\n
    \  versions of this document.  Thanks to Paul Kyzivat for his\n   contribution
    of hex encoding rules.  Thanks to Spencer Dawkins, Keith\n   Drage, Vijay Gurbani,
    and Laura Liess for their review of the\n   document.  The authors wish to thank
    Roland Jesske, Celine Serrut-\n   Valette, Francois Audet, Denis Alexeitsev, Paul
    Kyzivat, Cullen\n   Jennings, and Mahalingam Mani for their comments.  Thanks
    to Scott\n   Kelly and Joel Halpern for their reviews.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Alan Johnston\n   Avaya\n   St. Louis, MO  63124\n   United
    States\n   EMail: alan.b.johnston@gmail.com\n   James Rafferty\n   Human Communications\n
    \  Norfolk, MA  02056\n   United States\n   EMail: jay@humancomm.com\n"
  title: Authors' Addresses
