Abstract This document, [iMIP], specifies a binding from the iCalendar Transport independent Interoperability Protocol (iTIP) to Internet email based transports.
Calendaring entries defined by the iCalendar Object Model [iCAL] are composed using constructs from [RFC 822], [RFC 2045], [RFC 2046], [RFC 2047], [RFC 2048] and [RFC 2049].
This document is based on discussions within the Internet Engineering Task Force (IETF) Calendaring and Scheduling (CALSCH) working group.
More information about the IETF CALSCH working group activities can be found on the IMC web site at http://www.imc.org, the IETF web site at http://www.ietf.org/html.charters/calsch charter.html.
Refer to the references within this document for further information on how to access these various documents.
This binding document provides the transport specific information necessary convey iCalendar Transport independent Interoperability Protocol (iTIP) over MIME as defined in [RFC 822] and [RFC 2045].
1.1 Related Memos Implementers will need to be familiar with several other memos that, along with this memo, form a framework for Internet calendaring and scheduling standards.
This document, [iMIP], specifies an Internet email binding for iTIP.
[iCAL] specifies a core specification of objects, data types, properties and property parameters; [iTIP] specifies an interoperability protocol for scheduling between different implementations; This memo does not attempt to repeat the specification of concepts or definitions from these other memos.
Where possible, references are made to the memo that provides for the specification of these concepts or definitions.
The mechanisms defined in this memo are defined in prose.
In order to refer to elements of the calendaring and scheduling model, core object or interoperability protocol defined in [iCAL] and [iTIP]
some formatting conventions have been used.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY" and "OPTIONAL" in this document are to be interpreted as described in [RFC 2119].
Calendaring and scheduling roles are referred to in quoted strings of text with the first character of each word in upper case.
For example, "Organizer" refers to a role of a "Calendar User" within the scheduling protocol defined by [iTIP].
Calendar components defined by [iCAL] are referred to with capitalized, quoted strings of text.
All calendar components start with the letter "V".
For example, "VEVENT" refers to the event calendar component, "VTODO" refers to the to do calendar component and "VJOURNAL
" refers to the daily journal calendar component.
Scheduling methods defined by [iTIP] are referred to with capitalized, quoted strings of text.
For example, "REQUEST" refers to the method for requesting a scheduling calendar component be created or modified, "REPLY" refers to the method a recipient of a request uses to update their status with the "Organizer" of the calendar component.
Properties defined by [iCAL] are referred to with capitalized, quoted strings of text, followed by the word "property".
For example, "ATTENDEE" property refers to the iCalendar property used to convey the calendar address of a calendar user.
Property parameters defined by [iCAL] are referred to with lower case, quoted strings of text, followed by the word "parameter".
For example, "value" parameter refers to the iCalendar property parameter used to override the default data type for a property value.
The email terms used in this memo are defined in [RFC 822] and [RFC  2045].
The calendaring and scheduling terms used in this memo are defined in [iCAL] and [iTIP].
This section defines the message binding to the MIME electronic mail transport.
The sections below refer to the "originator" and the "respondent" of an iMIP message.
Typically, the originator is the "Organizer" of an event.
The respondent is an "Attendee" of the event.
The [RFC 822] "Reply To" header typically contains the email address of the originator or respondent of an event.
However, this cannot be guaranteed as Mail User Agents (MUA) are not required to enforce iMIP semantics.
2.1 MIME Media Type A MIME entity containing content information formatted according to this document will be referenced as a "text/calendar" content type.
It is assumed that this content type will be transported through a MIME electronic mail transport.
2.2 Security This section addresses several aspects of security including Authentication, Authorization and Confidentiality.
Authentication and confidentiality can be achieved using [RFC 1847]
that specifies the Security Multiparts for MIME.
This framework defines new content types and subtypes of multipart: signed and encrypted.
Each contains two body parts: one for the protected data and another for the control information necessary to remove the protection.
In [iTIP] messages, only the "Organizer" is authorized to modify or cancel calendar entries they organize.
That is, spoof@xyz.com is not allowed to modify or cancel a meeting that was organized by a@example.com.
Furthermore, only the respondent has the authorization to indicate their status to the "Organizer".
That is, the "Organizer" must ignore an [iTIP] message from spoof@xyz.com that declines a meeting invitation for b@example.com.
Implementations of iMIP SHOULD verify the authenticity of the creator of an iCalendar object before taking any action.
The methods for doing this are presented later in this document.
[RFC 1847] Message flow in iTIP supports someone working on behalf of a "Calendar User" through use of the "sent by" parameter that is associated with the "ATTENDEE" and "ORGANIZER" properties.
However, there is no mechanism to verify whether or not a "Calendar User" has authorized someone to work on their behalf.
It is left to implementations to provide mechanisms for the "Calendar Users" to make that decision.
2.2.2 Authentication Authentication can be performed using an implementation of [RFC 1847] "multipart/signed" that supports public/private key certificates.
Authentication is possible only on messages that have been signed.
Authenticating an unsigned message may not be reliable.
2.2.3 Confidentiality To ensure confidentiality using iMIP implementations should utilize [RFC 1847] compliant encryption.
The protocol does not restrict a "Calendar User Agent" (CUA) from forwarding iCalendar objects to other users or agents.
2.3 [RFC 822] Addresses The calendar address specified within the "ATTENDEE" property in an iCalendar object MUST be a fully qualified, [RFC 822] address specification for the corresponding "Organizer" or "Attendee" of the "VEVENT" or "VTODO".
Because [iTIP] does not preclude "Attendees" from forwarding "VEVENTS" or "VTODOS" to others, the [RFC 822] "Sender" value may not equal that of the "Organizer".
Additionally, the "Organizer" or "Attendee" cannot be reliably inferred by the [RFC 822] "Sender" or "Reply to" values of an iMIP message.
The relevant address MUST be ascertained by opening the "text/calendar" MIME body part and examining the "ATTENDEE" and "ORGANIZER" properties.
2.4 Content Type A MIME body part containing content information that conforms to this document MUST have an [RFC 2045] "Content Type" value of "text/calendar".
The [RFC 2045] "Content Type" header field must also include the type parameter "method".
The value MUST be the same as the value of the "METHOD" calendar property within the iCalendar object.
This means that a MIME message containing multiple iCalendar objects with different method values must be further encapsulated with a "multipart/mixed" MIME entity.
This will allow each of the iCalendar objects to be encapsulated within their own "text/calendar" MIME entity.
A "charset" parameter MUST be present if the iCalendar object contains characters that are not part of the US ASCII character set.
[RFC 2046] discusses the selection of an appropriate "charset" value.
The optional "component" parameter defines the iCalendar component type contained within the iCalendar object.
The following is an example of this header field with a value that indicates an event message.
Content Type:text/calendar; method request; charset UTF 8; component vevent
The "text/calendar" content type allows for the scheduling message type to be included in a MIME message with other content information (i.e., "multipart/mixed") or included in a MIME message with a clear text, human readable form of the scheduling message (i.e., "multipart/alternative").
In order to permit the information in the scheduling message to be understood by MIME user agents (UA) that do not support the "text/calendar" content type, scheduling messages SHOULD be sent with an alternative, human readable form of the information.
2.5 Content Transfer Encoding Note that the default character set for iCalendar objects is UTF 8.
A transfer encoding SHOULD be used for iCalendar objects containing any characters that are not part of the US ASCII character set.
The handling of a MIME part should be based on its [RFC 2045] "Content Type".
However, this is not guaranteed to work in all environments.
Some environments handle MIME attachments based on their file type or extension.
To operate correctly in these environments, implementations may wish to include a "Content  Disposition" property to define a file name.
The security threats that applications must address when implementing iTIP are detailed in [iTIP].
Two spoofing threats are identified: Spoofing the "Organizer", and Spoofing an "Attendee".
To address these threats, the originator of an iCalendar object must be authenticated by a recipient.
Once authenticated, a determination can be made as to whether or not the originator is authorized to perform the requested operation.
Compliant applications MUST support signing and encrypting text/calendar attachments using a mechanism based on Security Multiparts for MIME [RFC 1847] to facilitate the authentication the originator of the iCalendar object.
Implementations MAY provide a means for users to disable signing and encrypting.
The steps are described below: 1.
The iCalendar object MUST be signed by the "Organizer" sending an update or the "Attendee" sending a reply.
Using the [RFC 1847] compliant security mechanism, determine who signed the iCalendar object.
Note that the signer is not necessarily the person sending an e mail message since an e mail message can be forwarded.
Correlate the signer to an "ATTENDEE" property in the iCalendar object.
If the signer cannot be correlated to an "ATTENDEE" property, ignore the message.
Determine whether or not the "ATTENDEE" is authorized to perform the operation as defined by [iTIP].
If the conditions are not met, ignore the message.
If all the above conditions are met, the message can be processed.
To address the confidentiality security threats, signed iMIP messages SHOULD be encrypted by a mechanism based on Security Multiparts for MIME [RFC 1847].
It is possible to receive iMIP messages sent by someone working on behalf of another "Calendar User".
This is determined by examining the "sent by" parameter in the relevant "ORGANIZER" or "ATTENDEE" property.
and [iTIP] provide no mechanism to verify that a "Calendar User" has authorized someone else to work on their behalf.
To address this security issue, implementations MUST provide mechanisms for the "Calendar Users" to make that decision before applying changes from someone working on behalf of a "Calendar User".
4 Examples 4.1 Single Component With An ATTACH Property
This minimal message shows how an iCalendar object references an attachment.
The attachment is accessible via its URL.
Phone Conference Mime Version: 1.0 Content Type:text/calendar; method REQUEST; charset US ASCII Content Transfer Encoding:
ATTENDEE;RSVP YES:mailto:stevesil@microsoft.com DTSTAMP:19970611T190000Z DTSTART:19970701T210000Z DTEND:19970701T230000Z SUMMARY:Phone Conference DESCRIPTION:Please review the attached document.
Using Multipart Alternative for Low Fidelity Clients
This example shows how a client can emit a multipart message that includes both a plain text version as well as the full iCalendar object.
Clients that do not support text/calendar will still be capable of rendering the plain text representation.
Phone Conference Mime Version: 1.0 Content Type: multipart/alternative;boundary "01BD3665.3AF0D360"  01BD3665.3AF0D360
us ascii Content Transfer Encoding:
This is an alternative representation of a TEXT/CALENDAR MIME Object
01BD3665.3AF0D360 Content Type:text/calendar; method REQUEST;
charset US ASCII Content Transfer Encoding:
VEVENT ORGANIZER:mailto:foo1@example.com ATTENDEE;ROLE CHAIR;ATTSTAT ACCEPTED:mailto:foo1@example.com
VCALENDAR  01BD3665.3AF0D360 4.3 Single Component With An ATTACH Property and Inline Attachment
This example shows how a message containing an iCalendar object references an attached document.
The reference is made using a Content id (CID).
Thus, the iCalendar object and the document are packaged in a multipart/related encapsulation.
Phone Conference Mime Version: 1.0 Content Type: multipart/related; boundary "boundary example 1"; type text/calendar  boundary example 1 Content Type:text/calendar; method REQUEST; charset US ASCII Content Transfer Encoding: 7bit Content Disposition: attachment; filename "event.vcs" BEGIN:
VEVENT ORGANIZER:mailto:foo1@example.com ATTENDEE;ROLE CHAIR;ATTSTAT ACCEPTED:mailto:foo1@example.com
INDIVIDUAL:mailto:foo2@example.com DTSTAMP:19970611T190000Z DTSTART:19970701T180000Z DTEND:19970701T183000Z SUMMARY:
; name "FieldReport.doc" Content Transfer Encoding:
; filename "FieldReport.doc" Content ID: <123456789@example.com
4.4 Multiple Similar Components Multiple iCalendar components of the same type can be included in the iCalendar object when the METHOD is the same for each component.
Summer Company Holidays Mime Version: 1.0 Content Type:text/calendar; method PUBLISH; charset US ASCII Content Transfer Encoding:
7bit Content Disposition: attachment; filename "event.vcs" BEGIN:
MAILTO:FOO1@EXAMPLE.COM DTSTAMP:19970611T150000Z DTSTART:19970701T150000Z DTEND:19970701T230000Z SUMMARY:
Food and drink will be provided UID:CALSVR.EXAMPLE.COM 873970198738777
:We have 10 lanes reserved UID:CALSVR.EXAMPLE.COM 873970198738777
4.5 Multiple Mixed Components Different component types must be encapsulated in separate iCalendar objects.
Phone Conference Mime Version: 1.0 Content Type:multipart/mixed;boundary
This is a multi part message in MIME format.
FEE3790DC7E35189CA67CE2C Content Type:text/calendar; method REQUEST;
charset US ASCII Content Transfer Encoding: 7bit Content Disposition: attachment; filename "event1.vcs
VEVENT ORGANIZER:mailto:foo1@example.com ATTENDEE;ROLE CHAIR;ATTSTAT ACCEPTED:mailto:foo1@example.com
INDIVIDUAL:mailto:foo2@example.com DTSTAMP:19970611T190000Z DTSTART:19970701T210000Z DTEND:19970701T230000Z SUMMARY:
Discuss what happened at the last meeting UID:calsvr.example.com 8739701987387772
VCALENDAR  FEE3790DC7E35189CA67CE2C Content Type:text/calendar; method REQUEST; charset US ASCII Content Transfer Encoding:7bit Content Disposition: attachment; filename "
Discuss a new location for the company picnic UID:calsvr.example.com
VCALENDAR  FEE3790DC7E35189CA67CE2C 4.6 Detailed Components With An ATTACH Property
This example shows the format of a message containing a group meeting between three individuals.
The multipart/related encapsulation is used because the iCalendar object contains an ATTACH property that uses a CID to reference the attachment.
REQUEST Phone Conference Content Type:multipart/related;boundary " FEE3790DC7E35189CA67CE2C"  FEE3790DC7E35189CA67CE2C Content Type: multipart/alternative; boundary " 00FEE3790DC7E35189CA67CE2C00"  00FEE3790DC7E35189CA67CE2C00 Content Type: text/plain
; charset us ascii Content Transfer Encoding:
When: 7/1/1997 10:00PM PDT  7/1/97
Let's discuss the attached document  00FEE3790DC7E35189CA67CE2C00
Component vevent Content Transfer Encoding:
7bit Content Disposition: attachment; filename "event.vcs" BEGIN:
INDIVIDUAL:mailto:foo2@example.com ATTENDEE;RSVP YES;TYPE INDIVIDUAL:mailto:foo3@example.com DTSTAMP:19970611T190000Z DTSTART:19970621T170000Z DTEND:199706211T173000Z SUMMARY:
Let's discuss the attached document UID:calsvr.example.com 873970198738777
; name "FieldReport.doc" Content Transfer Encoding:
; filename "FieldReport.doc" Content ID: <calsvr.example.com 12345aaa
This section outlines a series of recommended practices when using a messaging transport to exchange iCalendar objects.
5.1 Use of Content and Message IDs
The [iCAL] specification makes frequent use of the URI for data types in properties such as "DESCRIPTION", "ATTACH", "CONTACT" and others.
Two forms of URIs are Message ID (MID) and Content ID (CID).
These are defined in [RFC 2111].
Although [RFC 2111] allows referencing messages or MIME body parts in other MIME entities or stores, it is strongly recommended that iMIP implementations include all referenced messages and body parts in a single MIME entity.
Simply put, if an iCalendar object contains CID or MID references to other messages or body parts, implementations should ensure that these messages and/or body parts are transmitted with the iCalendar object.
If they are not there is no guarantee that the receiving "CU" will have the access or the authorization to view those objects.
Dawson, F. and D. Stenerson, "Internet Calendaring and Scheduling Core Object Specification iCalendar", RFC 2445, November 1998.
Scheduling Events, Busy Time, To dos and Journal Entries", RFC 2446, November 1998.
[RFC 822]  Crocker, D., "Standard for the Format of ARPA Internet Text Messages", STD 11, RFC 822, August 1982.
[RFC 1847] Galvin, J., Murphy, S., Crocker, S. and N. Freed, "Security Multiparts for MIME:
Multipart/Signed and Multipart/Encrypted", RFC 1847, October 1995.
[RFC 2045] Freed, N. and N. Borenstein, "
Multipurpose Internet Mail Extensions (MIME)
Part One: Format of Internet Message Bodies", RFC 2045, November 1996.
[RFC 2046] Freed, N. and N. Borenstein, "Multipurpose Internet Mail Extensions (MIME)
Part Two: Media Types", RFC 2046, November 1996.
Moore, K., "Multipurpose Internet Mail Extensions (MIME)
Message Header Extensions for Non ASCII Text", RFC 2047, November 1996.
[RFC 2048] Freed, N., Klensin, J. and J. Postel, "Multipurpose Internet Mail Extensions (MIME)
Part Four: Registration Procedures", RFC 2048, January 1997.
[RFC 2111] Levinson, E., "Content ID and Message ID Uniform Resource Locators", RFC 2111, March 1997.
[RFC 2119] Bradner, S., "Key words for use in RFCs to Indicate Requirement Levels", BCP 14, RFC 2119, March 1997.
