- title: __initial_text__
  contents:
  - '  Using OpenPGP Keys for Transport Layer Security (TLS) Authentication

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo proposes extensions to the Transport Layer Security (TLS)\n\
    \   protocol to support the OpenPGP key format.  The extensions discussed\n  \
    \ here include a certificate type negotiation mechanism, and the\n   required\
    \ modifications to the TLS Handshake Protocol.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................2\n  \
    \ 3. Changes to the Handshake Message Contents .......................2\n    \
    \  3.1. Client Hello ...............................................2\n      3.2.\
    \ Server Hello ...............................................3\n      3.3. Server\
    \ Certificate .........................................3\n      3.4. Certificate\
    \ Request ........................................4\n      3.5. Client Certificate\
    \ .........................................5\n      3.6. Other Handshake Messages\
    \ ...................................5\n   4. Security Considerations .........................................5\n\
    \   5. IANA Considerations .............................................6\n  \
    \ 6. Acknowledgements ................................................6\n   7.\
    \ References ......................................................6\n      7.1.\
    \ Normative References .......................................6\n      7.2. Informative\
    \ References .....................................7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IETF has two sets of standards for public key certificates,\
    \ one\n   set for use of X.509 certificates [PKIX] and one for OpenPGP\n   certificates\
    \ [OpenPGP].  At the time of writing, TLS [TLS] standards\n   are defined to use\
    \ only X.509 certificates.  This document specifies\n   a way to negotiate use\
    \ of OpenPGP certificates for a TLS session, and\n   specifies how to transport\
    \ OpenPGP certificates via TLS.  The\n   proposed extensions are backward compatible\
    \ with the current TLS\n   specification, so that existing client and server implementations\n\
    \   that make use of X.509 certificates are not affected.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The term \"OpenPGP key\" is used in this document as in the\
    \ OpenPGP\n   specification [OpenPGP].  We use the term \"OpenPGP certificate\"\
    \ to\n   refer to OpenPGP keys that are enabled for authentication.\n   This document\
    \ uses the same notation and terminology used in the TLS\n   Protocol specification\
    \ [TLS].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"\
    SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"\
    OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  Changes to the Handshake Message Contents
  contents:
  - "3.  Changes to the Handshake Message Contents\n   This section describes the\
    \ changes to the TLS handshake message\n   contents when OpenPGP certificates\
    \ are to be used for authentication.\n"
- title: 3.1.  Client Hello
  contents:
  - "3.1.  Client Hello\n   In order to indicate the support of multiple certificate\
    \ types,\n   clients MUST include an extension of type \"cert_type\" (see Section\
    \ 5)\n   to the extended client hello message.  The hello extension mechanism\n\
    \   is described in [TLSEXT].\n   This extension carries a list of supported certificate\
    \ types the\n   client can use, sorted by client preference.  This extension MUST\
    \ be\n   omitted if the client only supports X.509 certificates.  The\n   \"extension_data\"\
    \ field of this extension contains a\n   CertificateTypeExtension structure.\n\
    \      enum { client, server } ClientOrServerExtension;\n      enum { X.509(0),\
    \ OpenPGP(1), (255) } CertificateType;\n      struct {\n         select(ClientOrServerExtension)\
    \ {\n            case client:\n               CertificateType certificate_types<1..2^8-1>;\n\
    \            case server:\n               CertificateType certificate_type;\n\
    \         }\n      } CertificateTypeExtension;\n   No new cipher suites are required\
    \ to use OpenPGP certificates.  All\n   existing cipher suites that support a\
    \ compatible, with the key, key\n   exchange method can be used in combination\
    \ with OpenPGP certificates.\n"
- title: 3.2.  Server Hello
  contents:
  - "3.2.  Server Hello\n   If the server receives a client hello that contains the\
    \ \"cert_type\"\n   extension and chooses a cipher suite that requires a certificate,\n\
    \   then two outcomes are possible.  The server MUST either select a\n   certificate\
    \ type from the certificate_types field in the extended\n   client hello or terminate\
    \ the connection with a fatal alert of type\n   \"unsupported_certificate\".\n\
    \   The certificate type selected by the server is encoded in a\n   CertificateTypeExtension\
    \ structure, which is included in the extended\n   server hello message using\
    \ an extension of type \"cert_type\".  Servers\n   that only support X.509 certificates\
    \ MAY omit including the\n   \"cert_type\" extension in the extended server hello.\n"
- title: 3.3.  Server Certificate
  contents:
  - "3.3.  Server Certificate\n   The contents of the certificate message sent from\
    \ server to client\n   and vice versa are determined by the negotiated certificate\
    \ type and\n   the selected cipher suite's key exchange algorithm.\n   If the\
    \ OpenPGP certificate type is negotiated, then it is required to\n   present an\
    \ OpenPGP certificate in the certificate message.  The\n   certificate must contain\
    \ a public key that matches the selected key\n   exchange algorithm, as shown\
    \ below.\n      Key Exchange Algorithm  OpenPGP Certificate Type\n      RSA  \
    \                   RSA public key that can be used for\n                    \
    \          encryption.\n      DHE_DSS                 DSS public key that can\
    \ be used for\n                              authentication.\n      DHE_RSA  \
    \               RSA public key that can be used for\n                        \
    \      authentication.\n   An OpenPGP certificate appearing in the certificate\
    \ message is sent\n   using the binary OpenPGP format.  The certificate MUST contain\
    \ all\n   the elements required by Section 11.1 of [OpenPGP].\n   The option is\
    \ also available to send an OpenPGP fingerprint, instead\n   of sending the entire\
    \ certificate.  The process of fingerprint\n   generation is described in Section\
    \ 12.2 of [OpenPGP].  The peer shall\n   respond with a \"certificate_unobtainable\"\
    \ fatal alert if the\n   certificate with the given fingerprint cannot be found.\
    \  The\n   \"certificate_unobtainable\" fatal alert is defined in Section 4 of\n\
    \   [TLSEXT].\n      enum {\n           cert_fingerprint (0), cert (1), (255)\n\
    \      } OpenPGPCertDescriptorType;\n      opaque OpenPGPCertFingerprint<16..20>;\n\
    \      opaque OpenPGPCert<0..2^24-1>;\n      struct {\n           OpenPGPCertDescriptorType\
    \ descriptorType;\n           select (descriptorType) {\n                case\
    \ cert_fingerprint: OpenPGPCertFingerprint;\n                case cert: OpenPGPCert;\n\
    \           }\n      } Certificate;\n"
- title: 3.4.  Certificate Request
  contents:
  - "3.4.  Certificate Request\n   The semantics of this message remain the same as\
    \ in the TLS\n   specification.  However, if this message is sent, and the negotiated\n\
    \   certificate type is OpenPGP, the \"certificate_authorities\" list MUST\n \
    \  be empty.\n"
- title: 3.5.  Client Certificate
  contents:
  - "3.5.  Client Certificate\n   This message is only sent in response to the certificate\
    \ request\n   message.  The client certificate message is sent using the same\n\
    \   formatting as the server certificate message, and it is also required\n  \
    \ to present a certificate that matches the negotiated certificate\n   type. \
    \ If OpenPGP certificates have been selected and no certificate\n   is available\
    \ from the client, then a certificate structure that\n   contains an empty OpenPGPCert\
    \ vector MUST be sent.  The server SHOULD\n   respond with a \"handshake_failure\"\
    \ fatal alert if client\n   authentication is required.\n"
- title: 3.6.  Other Handshake Messages
  contents:
  - "3.6.  Other Handshake Messages\n   All the other handshake messages are identical\
    \ to the TLS\n   specification.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   All security considerations discussed in [TLS],\
    \ [TLSEXT], and\n   [OpenPGP] apply to this document.  Considerations about the\
    \ use of\n   the web of trust or identity and certificate verification procedure\n\
    \   are outside the scope of this document.  These are considered issues\n   to\
    \ be handled by the application layer protocols.\n   The protocol for certificate\
    \ type negotiation is identical in\n   operation to ciphersuite negotiation of\
    \ the [TLS] specification with\n   the addition of default values when the extension\
    \ is omitted.  Since\n   those omissions have a unique meaning and the same protection\
    \ is\n   applied to the values as with ciphersuites, it is believed that the\n\
    \   security properties of this negotiation are the same as with\n   ciphersuite\
    \ negotiation.\n   When using OpenPGP fingerprints instead of the full certificates,\
    \ the\n   discussion in Section 6.3 of [TLSEXT] for \"Client Certificate URLs\"\
    \n   applies, especially when external servers are used to retrieve keys.\n  \
    \ However, a major difference is that although the\n   \"client_certificate_url\"\
    \ extension allows identifying certificates\n   without including the certificate\
    \ hashes, this is not possible in the\n   protocol proposed here.  In this protocol,\
    \ the certificates, when not\n   sent, are always identified by their fingerprint,\
    \ which serves as a\n   cryptographic hash of the certificate (see Section 12.2\
    \ of\n   [OpenPGP]).\n   The information that is available to participating parties\
    \ and\n   eavesdroppers (when confidentiality is not available through a\n   previous\
    \ handshake) is the number and the types of certificates they\n   hold, plus the\
    \ contents of certificates.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document defines a new TLS extension, \"cert_type\"\
    , assigned a\n   value of 9 from the TLS ExtensionType registry defined in [TLSEXT].\n\
    \   This value is used as the extension number for the extensions in both\n  \
    \ the client hello message and the server hello message.  The new\n   extension\
    \ type is used for certificate type negotiation.\n   The \"cert_type\" extension\
    \ contains an 8-bit CertificateType field,\n   for which a new registry, named\
    \ \"TLS Certificate Types\", is\n   established in this document, to be maintained\
    \ by IANA.  The registry\n   is segmented in the following way:\n   1.  Values\
    \ 0 (X.509) and 1 (OpenPGP) are defined in this document.\n   2.  Values from\
    \ 2 through 223 decimal inclusive are assigned via IETF\n       Consensus [RFC2434].\n\
    \   3.  Values from 224 decimal through 255 decimal inclusive are\n       reserved\
    \ for Private Use [RFC2434].\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document was based on earlier work made by Will\
    \ Price and\n   Michael Elkins.\n   The author wishes to thank Werner Koch, David\
    \ Taylor, Timo Schulz,\n   Pasi Eronen, Jon Callas, Stephen Kent, Robert Sparks,\
    \ and Hilarie\n   Orman for their suggestions on improving this document.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [TLS]      Dierks, T. and E. Rescorla, \"The TLS\
    \ Protocol Version\n              1.1\", RFC 4346, April 2006.\n   [OpenPGP] \
    \ Callas, J., Donnerhacke, L., Finey, H., Shaw, D., and R.\n              Thayer,\
    \ \"OpenPGP Message Format\", RFC 4880, November 2007.\n   [TLSEXT]   Blake-Wilson,\
    \ S., Nystrom, M., Hopwood, D., Mikkelsen, J.,\n              and T. Wright, \"\
    Transport Layer Security (TLS)\n              Extensions\", RFC 4366, April 2006.\n\
    \   [RFC2434]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n   \
    \           IANA Considerations Section in RFCs\", RFC 2434,\n              October\
    \ 1998.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", RFC 2119, March 1997.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [PKIX]     Housley, R., Ford, W., Polk, W.,\
    \ and D. Solo, \"Internet\n              X.509 Public Key Infrastructure Certificate\
    \ and\n              Certificate Revocation List (CRL) Profile\", RFC 3280,\n\
    \              April 2002.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Nikos Mavrogiannopoulos\n   Independent\n   Arkadias 8\n\
    \   Halandri, Attiki  15234\n   Greece\n   EMail: nmav@gnutls.org\n   URI:   http://www.gnutls.org/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
