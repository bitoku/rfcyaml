- title: __initial_text__
  contents:
  - '                             IP Tunnel MIB

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a Management Information Base (MIB) module for\
    \ use\n   with network management protocols in the Internet community.  In\n \
    \  particular, it describes managed objects used for managing tunnels of\n   any\
    \ type over IPv4 and IPv6 networks.  Extension MIB modules may be\n   designed\
    \ for managing protocol-specific objects.  Likewise, extension\n   MIB modules\
    \ may be designed for managing security-specific objects.\n   This MIB module\
    \ does not support tunnels over non-IP networks.\n   Management of such tunnels\
    \ may be supported by other MIB modules.\n   This memo obsoletes RFC 2667.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Over the past several years, there has been a number of\
    \ \"tunneling\"\n   protocols specified by the IETF (see [RFC1241] for an early\n\
    \   discussion of the model and examples).  This document describes a\n   Management\
    \ Information Base (MIB) module used for managing tunnels of\n   any type over\
    \ IPv4 and IPv6 networks, including Generic Routing\n   Encapsulation (GRE) [RFC1701,RFC1702],\
    \ IP-in-IP [RFC2003], Minimal\n   Encapsulation [RFC2004], Layer 2 Tunneling Protocol\
    \ (L2TP) [RFC2661],\n   Point-to-Point Tunneling Protocol (PPTP) [RFC2637], Layer\
    \ 2\n   Forwarding (L2F) [RFC2341], UDP (e.g., [RFC1234]), Ascend Tunnel\n   Management\
    \ Protocol (ATMP) [RFC2107], and IPv6-in-IPv4 [RFC2893]\n   tunnels, among others.\n\
    \   Extension MIB modules may be designed for managing protocol-specific\n   objects.\
    \  Likewise, extension MIB modules may be designed for\n   managing security-specific\
    \ objects (e.g., IPsec [RFC2401]), and\n   traffic conditioner [RFC2474] objects.\n"
- title: 2.  The Internet-Standard Management Framework
  contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of\
    \ the documents that describe the current\n   Internet-Standard Management Framework,\
    \ please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are\
    \ accessed via a virtual information store, termed\n   the Management Information\
    \ Base or MIB.  MIB objects are generally\n   accessed through the Simple Network\
    \ Management Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms\
    \ defined in the\n   Structure of Management Information (SMI).  This memo specifies\
    \ a MIB\n   module that is compliant to the SMIv2, which is described in STD 58,\n\
    \   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   This MIB module contains two current tables and one deprecated\
    \ table.\n   The current tables are:\n   o  the Tunnel Interface Table, containing\
    \ information on the tunnels\n      known to a router; and\n   o  the Tunnel Inet\
    \ Config Table, which can be used for dynamic\n      creation of tunnels, and\
    \ also provides a mapping from endpoint\n      addresses to the current interface\
    \ index value.\n   The version of this MIB module that appeared in RFC 2667 contained\n\
    \   the Tunnel Config Table, which mapped IPv4 endpoint addresses to\n   interface\
    \ indexes.  It is now deprecated in favor of the Tunnel Inet\n   Config Table.\n"
- title: 3.1.  Relationship to the Interfaces MIB
  contents:
  - "3.1.  Relationship to the Interfaces MIB\n   This section clarifies the relationship\
    \ of this MIB module to the\n   Interfaces MIB [RFC2863].  Several areas of correlation\
    \ are addressed\n   in the following subsections.  The implementor is referred\
    \ to the\n   Interfaces MIB document in order to understand the general intent\
    \ of\n   these areas.\n"
- title: 3.1.1.  Layering Model
  contents:
  - "3.1.1.  Layering Model\n   Each logical interface (physical or virtual) has an\
    \ ifEntry in the\n   Interfaces MIB [RFC2863].  Tunnels are handled by creating\
    \ a logical\n   interface (ifEntry) for each tunnel.  These are then correlated,\n\
    \   using the ifStack table of the Interfaces MIB, to those interfaces on\n  \
    \ which the local IPv4 or IPv6 addresses of the tunnels are configured.\n   The\
    \ basic model, therefore, looks something like this (for example):\n         |\
    \ |         | |          | |\n      +--+ +---+  +--+ +---+      | |\n      |IP-in-IP|\
    \  |  GRE   |      | |\n      | tunnel |  | tunnel |      | |\n      +--+ +---+\
    \  +--+ +---+      | |\n         | |         | |          | |    <== attachment\
    \ to underlying\n      +--+ +---------+ +----------+ +--+     interfaces, to be\
    \ provided\n      |       Physical interface       |     by ifStack table\n  \
    \    +--------------------------------+\n"
- title: 3.1.2.  ifRcvAddressTable
  contents:
  - "3.1.2.  ifRcvAddressTable\n   The ifRcvAddressTable usage can be defined in the\
    \ MIB modules\n   defining the encapsulation below the network layer, and holds\
    \ the\n   local IP addresses on which decapsulation will occur.  For example,\n\
    \   if IP-in-IP encapsulation is being used, the ifRcvAddressTable can be\n  \
    \ defined by IP-in-IP.  If it is not specified, the default is that one\n   entry\
    \ will exist for the tunnel interface, where ifRcvAddressAddress\n   contains\
    \ the local IP address used for encapsulation/decapsulation\n   (i.e., tunnelIfLocalInetAddress\
    \ in the Tunnel Interface Table).\n"
- title: 3.1.3.  ifEntry
  contents:
  - "3.1.3.  ifEntry\n   IfEntries are defined in the MIB modules defining the encapsulation\n\
    \   below the network layer.  For example, if IP-in-IP encapsulation [20]\n  \
    \ is being used, the ifEntry is defined by IP-in-IP.\n   The ifType of a tunnel\
    \ should be set to \"tunnel\" (131).  An entry in\n   the IP Tunnel MIB module\
    \ will exist for every ifEntry with this\n   ifType.  An implementation of the\
    \ IP Tunnel MIB module may allow\n   ifEntries to be created via the tunnelConfigTable.\
    \  Creating a tunnel\n   will also add an entry in the ifTable and in the tunnelIfTable,\
    \ and\n   deleting a tunnel will likewise delete the entry in the ifTable and\n\
    \   the tunnelIfTable.\n   The use of two different tables in this MIB module\
    \ was an important\n   design decision.  Traditionally, ifIndex values are chosen\
    \ by agents,\n   and are permitted to change across restarts.  Allowing row creation\n\
    \   directly in the Tunnel Interface Table, indexed by ifIndex, would\n   complicate\
    \ row creation and/or cause interoperability problems (if\n   each agent had special\
    \ restrictions on ifIndex).  Instead, a separate\n   table is used that is indexed\
    \ only by objects over which the manager\n   has control.  Namely, these are the\
    \ addresses of the tunnel endpoints\n   and the encapsulation protocol.  Finally,\
    \ an additional manager-\n   chosen ID is used in the index to support protocols\
    \ such as L2F which\n   allow multiple tunnels between the same endpoints.\n"
- title: 4.  Definitions
  contents:
  - "4.  Definitions\n   TUNNEL-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY,\
    \ OBJECT-TYPE, transmission,\n       Integer32, IpAddress    FROM SNMPv2-SMI \
    \         -- [RFC2578]\n       RowStatus, StorageType  FROM SNMPv2-TC        \
    \   -- [RFC2579]\n       MODULE-COMPLIANCE,\n       OBJECT-GROUP            FROM\
    \ SNMPv2-CONF         -- [RFC2580]\n       InetAddressType,\n       InetAddress\
    \             FROM INET-ADDRESS-MIB    -- [RFC4001]\n       IPv6FlowLabelOrAny\
    \      FROM IPV6-FLOW-LABEL-MIB -- [RFC3595]\n       ifIndex,\n       InterfaceIndexOrZero\
    \    FROM IF-MIB              -- [RFC2863]\n       IANAtunnelType          FROM\
    \ IANAifType-MIB;     -- [IFTYPE]\n   tunnelMIB MODULE-IDENTITY\n       LAST-UPDATED\
    \ \"200505160000Z\" -- May 16, 2005\n       ORGANIZATION \"IETF IP Version 6 (IPv6)\
    \ Working Group\"\n       CONTACT-INFO\n               \" Dave Thaler\n      \
    \           Microsoft Corporation\n                 One Microsoft Way\n      \
    \           Redmond, WA  98052-6399\n                 EMail: dthaler@microsoft.com\"\
    \n       DESCRIPTION\n               \"The MIB module for management of IP Tunnels,\n\
    \               independent of the specific encapsulation scheme in\n        \
    \       use.\n               Copyright (C) The Internet Society (2005).  This\n\
    \               version of this MIB module is part of RFC 4087;  see\n       \
    \        the RFC itself for full legal notices.\"\n       REVISION     \"200505160000Z\"\
    \ -- May 16, 2005\n       DESCRIPTION\n               \"IPv4-specific objects\
    \ were deprecated, including\n               tunnelIfLocalAddress, tunnelIfRemoteAddress,\
    \ the\n               tunnelConfigTable, and the tunnelMIBBasicGroup.\n      \
    \         Added IP version-agnostic objects that should be used\n            \
    \   instead, including tunnelIfAddressType,\n               tunnelIfLocalInetAddress,\
    \ tunnelIfRemoteInetAddress,\n               the tunnelInetConfigTable, and the\n\
    \               tunnelIMIBInetGroup.\n               The new tunnelIfLocalInetAddress\
    \ and\n               tunnelIfRemoteInetAddress objects are read-write,\n    \
    \           rather than read-only.\n               Updated DESCRIPTION clauses\
    \ of existing version-\n               agnostic objects (e.g., tunnelIfTOS) that\
    \ contained\n               IPv4-specific text to cover IPv6 as well.\n      \
    \         Added tunnelIfFlowLabel for tunnels over IPv6.\n               The encapsulation\
    \ method was previously an INTEGER\n               type, and is now an IANA-maintained\
    \ textual\n               convention.\n               Published as RFC 4087.\"\
    \n       REVISION     \"199908241200Z\" -- August 24, 1999\n       DESCRIPTION\n\
    \               \"Initial version, published as RFC 2667.\"\n       ::= { transmission\
    \ 131 }\n   tunnelMIBObjects OBJECT IDENTIFIER ::= { tunnelMIB 1 }\n   tunnel\
    \      OBJECT IDENTIFIER ::= { tunnelMIBObjects 1 }\n   -- the IP Tunnel MIB-Group\n\
    \   --\n   -- a collection of objects providing information about\n   -- IP Tunnels\n\
    \   tunnelIfTable OBJECT-TYPE\n       SYNTAX     SEQUENCE OF TunnelIfEntry\n \
    \      MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The (conceptual) table containing information on\n         \
    \      configured tunnels.\"\n       ::= { tunnel 1 }\n   tunnelIfEntry OBJECT-TYPE\n\
    \       SYNTAX     TunnelIfEntry\n       MAX-ACCESS not-accessible\n       STATUS\
    \     current\n       DESCRIPTION\n               \"An entry (conceptual row)\
    \ containing the information\n               on a particular configured tunnel.\"\
    \n       INDEX      { ifIndex }\n       ::= { tunnelIfTable 1 }\n   TunnelIfEntry\
    \ ::= SEQUENCE {\n       tunnelIfLocalAddress            IpAddress,   -- deprecated\n\
    \       tunnelIfRemoteAddress           IpAddress,   -- deprecated\n       tunnelIfEncapsMethod\
    \            IANAtunnelType,\n       tunnelIfHopLimit                Integer32,\n\
    \       tunnelIfSecurity                INTEGER,\n       tunnelIfTOS         \
    \            Integer32,\n       tunnelIfFlowLabel               IPv6FlowLabelOrAny,\n\
    \       tunnelIfAddressType             InetAddressType,\n       tunnelIfLocalInetAddress\
    \        InetAddress,\n       tunnelIfRemoteInetAddress       InetAddress,\n \
    \      tunnelIfEncapsLimit             Integer32\n   }\n   tunnelIfLocalAddress\
    \ OBJECT-TYPE\n       SYNTAX     IpAddress\n       MAX-ACCESS read-only\n    \
    \   STATUS     deprecated\n       DESCRIPTION\n               \"The address of\
    \ the local endpoint of the tunnel\n               (i.e., the source address used\
    \ in the outer IP\n               header), or 0.0.0.0 if unknown or if the tunnel\
    \ is\n               over IPv6.\n               Since this object does not support\
    \ IPv6, it is\n               deprecated in favor of tunnelIfLocalInetAddress.\"\
    \n       ::= { tunnelIfEntry 1 }\n   tunnelIfRemoteAddress OBJECT-TYPE\n     \
    \  SYNTAX     IpAddress\n       MAX-ACCESS read-only\n       STATUS     deprecated\n\
    \       DESCRIPTION\n               \"The address of the remote endpoint of the\
    \ tunnel\n               (i.e., the destination address used in the outer IP\n\
    \               header), or 0.0.0.0 if unknown, or an IPv6 address, or\n     \
    \          the tunnel is not a point-to-point link (e.g., if it\n            \
    \   is a 6to4 tunnel).\n               Since this object does not support IPv6,\
    \ it is\n               deprecated in favor of tunnelIfRemoteInetAddress.\"\n\
    \       ::= { tunnelIfEntry 2 }\n   tunnelIfEncapsMethod OBJECT-TYPE\n       SYNTAX\
    \     IANAtunnelType\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The encapsulation method used by the tunnel.\"\
    \n       ::= { tunnelIfEntry 3 }\n   tunnelIfHopLimit OBJECT-TYPE\n       SYNTAX\
    \     Integer32 (0 | 1..255)\n       MAX-ACCESS read-write\n       STATUS    \
    \ current\n       DESCRIPTION\n               \"The IPv4 TTL or IPv6 Hop Limit\
    \ to use in the outer IP\n               header.  A value of 0 indicates that\
    \ the value is\n               copied from the payload's header.\"\n       ::=\
    \ { tunnelIfEntry 4 }\n   tunnelIfSecurity OBJECT-TYPE\n       SYNTAX     INTEGER\
    \ {\n                      none(1),   -- no security\n                      ipsec(2),\
    \  -- IPsec security\n                      other(3)\n                  }\n  \
    \     MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n  \
    \             \"The method used by the tunnel to secure the outer IP\n       \
    \        header.  The value ipsec indicates that IPsec is used\n             \
    \  between the tunnel endpoints for authentication or\n               encryption\
    \ or both.  More specific security-related\n               information may be\
    \ available in a MIB module for the\n               security protocol in use.\"\
    \n       ::= { tunnelIfEntry 5 }\n   tunnelIfTOS OBJECT-TYPE\n       SYNTAX  \
    \   Integer32 (-2..63)\n       MAX-ACCESS read-write\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The method used to set the high 6 bits (the\n\
    \               differentiated services codepoint) of the IPv4 TOS or\n      \
    \         IPv6 Traffic Class in the outer IP header.  A value of\n           \
    \    -1 indicates that the bits are copied from the\n               payload's\
    \ header.  A value of -2 indicates that a\n               traffic conditioner\
    \ is invoked and more information\n               may be available in a traffic\
    \ conditioner MIB module.\n               A value between 0 and 63 inclusive indicates\
    \ that the\n               bit field is set to the indicated value.\n        \
    \       Note: instead of the name tunnelIfTOS, a better name\n               would\
    \ have been tunnelIfDSCPMethod, but the existing\n               name appeared\
    \ in RFC 2667 and existing objects cannot\n               be renamed.\"\n    \
    \   ::= { tunnelIfEntry 6 }\n   tunnelIfFlowLabel OBJECT-TYPE\n       SYNTAX \
    \    IPv6FlowLabelOrAny\n       MAX-ACCESS read-write\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The method used to set the IPv6 Flow Label\
    \ value.\n               This object need not be present in rows where\n     \
    \          tunnelIfAddressType indicates the tunnel is not over\n            \
    \   IPv6.  A value of -1 indicates that a traffic\n               conditioner\
    \ is invoked and more information may be\n               available in a traffic\
    \ conditioner MIB.  Any other\n               value indicates that the Flow Label\
    \ field is set to\n               the indicated value.\"\n       ::= { tunnelIfEntry\
    \ 7 }\n   tunnelIfAddressType OBJECT-TYPE\n       SYNTAX     InetAddressType\n\
    \       MAX-ACCESS read-write\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The type of address in the corresponding\n               tunnelIfLocalInetAddress\
    \ and tunnelIfRemoteInetAddress\n               objects.\"\n       ::= { tunnelIfEntry\
    \ 8 }\n   tunnelIfLocalInetAddress OBJECT-TYPE\n       SYNTAX     InetAddress\n\
    \       MAX-ACCESS read-write\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The address of the local endpoint of the tunnel\n          \
    \     (i.e., the source address used in the outer IP\n               header).\
    \  If the address is unknown, the value is\n               0.0.0.0 for IPv4 or\
    \ :: for IPv6.  The type of this\n               object is given by tunnelIfAddressType.\"\
    \n       ::= { tunnelIfEntry 9 }\n   tunnelIfRemoteInetAddress OBJECT-TYPE\n \
    \      SYNTAX     InetAddress\n       MAX-ACCESS read-write\n       STATUS   \
    \  current\n       DESCRIPTION\n               \"The address of the remote endpoint\
    \ of the tunnel\n               (i.e., the destination address used in the outer\
    \ IP\n               header).  If the address is unknown or the tunnel is\n  \
    \             not a point-to-point link (e.g., if it is a 6to4\n             \
    \  tunnel), the value is 0.0.0.0 for tunnels over IPv4 or\n               :: for\
    \ tunnels over IPv6.  The type of this object is\n               given by tunnelIfAddressType.\"\
    \n       ::= { tunnelIfEntry 10 }\n   tunnelIfEncapsLimit OBJECT-TYPE\n      \
    \ SYNTAX     Integer32 (-1 | 0..255)\n       MAX-ACCESS read-write\n       STATUS\
    \     current\n       DESCRIPTION\n               \"The maximum number of additional\
    \ encapsulations\n               permitted for packets undergoing encapsulation\
    \ at this\n               node.  A value of -1 indicates that no limit is\n  \
    \             present (except as a result of the packet size).\"\n       REFERENCE\
    \  \"RFC 2473, section 4.1.1\"\n       ::= { tunnelIfEntry 11 }\n   tunnelConfigTable\
    \ OBJECT-TYPE\n       SYNTAX     SEQUENCE OF TunnelConfigEntry\n       MAX-ACCESS\
    \ not-accessible\n       STATUS     deprecated\n       DESCRIPTION\n         \
    \      \"The (conceptual) table containing information on\n               configured\
    \ tunnels.  This table can be used to map a\n               set of tunnel endpoints\
    \ to the associated ifIndex\n               value.  It can also be used for row\
    \ creation.  Note\n               that every row in the tunnelIfTable with a fixed\
    \ IPv4\n               destination address should have a corresponding row in\n\
    \               the tunnelConfigTable, regardless of whether it was\n        \
    \       created via SNMP.\n               Since this table does not support IPv6,\
    \ it is\n               deprecated in favor of tunnelInetConfigTable.\"\n    \
    \   ::= { tunnel 2 }\n   tunnelConfigEntry OBJECT-TYPE\n       SYNTAX     TunnelConfigEntry\n\
    \       MAX-ACCESS not-accessible\n       STATUS     deprecated\n       DESCRIPTION\n\
    \               \"An entry (conceptual row) containing the information\n     \
    \          on a particular configured tunnel.\n               Since this entry\
    \ does not support IPv6, it is\n               deprecated in favor of tunnelInetConfigEntry.\"\
    \n       INDEX      { tunnelConfigLocalAddress,\n                    tunnelConfigRemoteAddress,\n\
    \                    tunnelConfigEncapsMethod,\n                    tunnelConfigID\
    \ }\n       ::= { tunnelConfigTable 1 }\n   TunnelConfigEntry ::= SEQUENCE {\n\
    \       tunnelConfigLocalAddress            IpAddress,\n       tunnelConfigRemoteAddress\
    \           IpAddress,\n       tunnelConfigEncapsMethod            IANAtunnelType,\n\
    \       tunnelConfigID                      Integer32,\n       tunnelConfigIfIndex\
    \                 InterfaceIndexOrZero,\n       tunnelConfigStatus           \
    \       RowStatus\n   }\n   tunnelConfigLocalAddress OBJECT-TYPE\n       SYNTAX\
    \     IpAddress\n       MAX-ACCESS not-accessible\n       STATUS     deprecated\n\
    \       DESCRIPTION\n               \"The address of the local endpoint of the\
    \ tunnel, or\n               0.0.0.0 if the device is free to choose any of its\n\
    \               addresses at tunnel establishment time.\n               Since\
    \ this object does not support IPv6, it is\n               deprecated in favor\
    \ of tunnelInetConfigLocalAddress.\"\n       ::= { tunnelConfigEntry 1 }\n   tunnelConfigRemoteAddress\
    \ OBJECT-TYPE\n       SYNTAX     IpAddress\n       MAX-ACCESS not-accessible\n\
    \       STATUS     deprecated\n       DESCRIPTION\n               \"The address\
    \ of the remote endpoint of the tunnel.\n               Since this object does\
    \ not support IPv6, it is\n               deprecated in favor of tunnelInetConfigRemoteAddress.\"\
    \n       ::= { tunnelConfigEntry 2 }\n   tunnelConfigEncapsMethod OBJECT-TYPE\n\
    \       SYNTAX     IANAtunnelType\n       MAX-ACCESS not-accessible\n       STATUS\
    \     deprecated\n       DESCRIPTION\n               \"The encapsulation method\
    \ used by the tunnel.\n               Since this object does not support IPv6,\
    \ it is\n               deprecated in favor of tunnelInetConfigEncapsMethod.\"\
    \n       ::= { tunnelConfigEntry 3 }\n   tunnelConfigID OBJECT-TYPE\n       SYNTAX\
    \     Integer32 (1..2147483647)\n       MAX-ACCESS not-accessible\n       STATUS\
    \     deprecated\n       DESCRIPTION\n               \"An identifier used to distinguish\
    \ between multiple\n               tunnels of the same encapsulation method, with\
    \ the\n               same endpoints.  If the encapsulation protocol only\n  \
    \             allows one tunnel per set of endpoint addresses (such\n        \
    \       as for GRE or IP-in-IP), the value of this object is\n               1.\
    \  For encapsulation methods (such as L2F) which\n               allow multiple\
    \ parallel tunnels, the manager is\n               responsible for choosing any\
    \ ID which does not\n               conflict with an existing row, such as choosing\
    \ a\n               random number.\n               Since this object does not\
    \ support IPv6, it is\n               deprecated in favor of tunnelInetConfigID.\"\
    \n       ::= { tunnelConfigEntry 4 }\n   tunnelConfigIfIndex OBJECT-TYPE\n   \
    \    SYNTAX     InterfaceIndexOrZero\n       MAX-ACCESS read-only\n       STATUS\
    \     deprecated\n       DESCRIPTION\n               \"If the value of tunnelConfigStatus\
    \ for this row is\n               active, then this object contains the value\
    \ of ifIndex\n               corresponding to the tunnel interface.  A value of\
    \ 0\n               is not legal in the active state, and means that the\n   \
    \            interface index has not yet been assigned.\n               Since\
    \ this object does not support IPv6, it is\n               deprecated in favor\
    \ of tunnelInetConfigIfIndex.\"\n       ::= { tunnelConfigEntry 5 }\n   tunnelConfigStatus\
    \ OBJECT-TYPE\n       SYNTAX     RowStatus\n       MAX-ACCESS read-create\n  \
    \     STATUS     deprecated\n       DESCRIPTION\n               \"The status of\
    \ this row, by which new entries may be\n               created, or old entries\
    \ deleted from this table.  The\n               agent need not support setting\
    \ this object to\n               createAndWait or notInService since there are\
    \ no other\n               writable objects in this table, and writable objects\n\
    \               in rows of corresponding tables such as the\n               tunnelIfTable\
    \ may be modified while this row is\n               active.\n               To\
    \ create a row in this table for an encapsulation\n               method which\
    \ does not support multiple parallel\n               tunnels with the same endpoints,\
    \ the management\n               station should simply use a tunnelConfigID of\
    \ 1, and\n               set tunnelConfigStatus to createAndGo.  For\n       \
    \        encapsulation methods such as L2F which allow multiple\n            \
    \   parallel tunnels, the management station may select a\n               pseudo-random\
    \ number to use as the tunnelConfigID and\n               set tunnelConfigStatus\
    \ to createAndGo.  In the event\n               that this ID is already in use\
    \ and an\n               inconsistentValue is returned in response to the set\n\
    \               operation, the management station should simply select\n     \
    \          a new pseudo-random number and retry the operation.\n             \
    \  Creating a row in this table will cause an interface\n               index\
    \ to be assigned by the agent in an\n               implementation-dependent manner,\
    \ and corresponding\n               rows will be instantiated in the ifTable and\
    \ the\n               tunnelIfTable.  The status of this row will become\n   \
    \            active as soon as the agent assigns the interface\n             \
    \  index, regardless of whether the interface is\n               operationally\
    \ up.\n               Deleting a row in this table will likewise delete the\n\
    \               corresponding row in the ifTable and in the\n               tunnelIfTable.\n\
    \               Since this object does not support IPv6, it is\n             \
    \  deprecated in favor of tunnelInetConfigStatus.\"\n       ::= { tunnelConfigEntry\
    \ 6 }\n   tunnelInetConfigTable OBJECT-TYPE\n       SYNTAX     SEQUENCE OF TunnelInetConfigEntry\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The (conceptual) table containing information on\n         \
    \      configured tunnels.  This table can be used to map a\n               set\
    \ of tunnel endpoints to the associated ifIndex\n               value.  It can\
    \ also be used for row creation.  Note\n               that every row in the tunnelIfTable\
    \ with a fixed\n               destination address should have a corresponding\
    \ row in\n               the tunnelInetConfigTable, regardless of whether it\n\
    \               was created via SNMP.\"\n       ::= { tunnel 3 }\n   tunnelInetConfigEntry\
    \ OBJECT-TYPE\n       SYNTAX     TunnelInetConfigEntry\n       MAX-ACCESS not-accessible\n\
    \       STATUS     current\n       DESCRIPTION\n               \"An entry (conceptual\
    \ row) containing the information\n               on a particular configured tunnel.\
    \  Note that there is\n               a 128 subid maximum for object OIDs.  Implementers\n\
    \               need to be aware that if the total number of octets in\n     \
    \          tunnelInetConfigLocalAddress and\n               tunnelInetConfigRemoteAddress\
    \ exceeds 110 then OIDs of\n               column instances in this table will\
    \ have more than 128\n               sub-identifiers and cannot be accessed using\
    \ SNMPv1,\n               SNMPv2c, or SNMPv3.  In practice this is not expected\n\
    \               to be a problem since IPv4 and IPv6 addresses will not\n     \
    \          cause the limit to be reached, but if other types are\n           \
    \    supported by an agent, care must be taken to ensure\n               that\
    \ the sum of the lengths do not cause the limit to\n               be exceeded.\"\
    \n       INDEX      { tunnelInetConfigAddressType,\n                    tunnelInetConfigLocalAddress,\n\
    \                    tunnelInetConfigRemoteAddress,\n                    tunnelInetConfigEncapsMethod,\n\
    \                    tunnelInetConfigID }\n       ::= { tunnelInetConfigTable\
    \ 1 }\n   TunnelInetConfigEntry ::= SEQUENCE {\n       tunnelInetConfigAddressType\
    \         InetAddressType,\n       tunnelInetConfigLocalAddress        InetAddress,\n\
    \       tunnelInetConfigRemoteAddress       InetAddress,\n       tunnelInetConfigEncapsMethod\
    \        IANAtunnelType,\n       tunnelInetConfigID                  Integer32,\n\
    \       tunnelInetConfigIfIndex             InterfaceIndexOrZero,\n       tunnelInetConfigStatus\
    \              RowStatus,\n       tunnelInetConfigStorageType         StorageType\n\
    \   }\n   tunnelInetConfigAddressType OBJECT-TYPE\n       SYNTAX     InetAddressType\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The address type over which the tunnel encapsulates\n      \
    \         packets.\"\n       ::= { tunnelInetConfigEntry 1 }\n   tunnelInetConfigLocalAddress\
    \ OBJECT-TYPE\n       SYNTAX     InetAddress\n       MAX-ACCESS not-accessible\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The address of\
    \ the local endpoint of the tunnel, or\n               0.0.0.0 (for IPv4) or ::\
    \ (for IPv6) if the device is\n               free to choose any of its addresses\
    \ at tunnel\n               establishment time.\"\n       ::= { tunnelInetConfigEntry\
    \ 2 }\n   tunnelInetConfigRemoteAddress OBJECT-TYPE\n       SYNTAX     InetAddress\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The address of the remote endpoint of the tunnel.\"\n      \
    \ ::= { tunnelInetConfigEntry 3 }\n   tunnelInetConfigEncapsMethod OBJECT-TYPE\n\
    \       SYNTAX     IANAtunnelType\n       MAX-ACCESS not-accessible\n       STATUS\
    \     current\n       DESCRIPTION\n               \"The encapsulation method used\
    \ by the tunnel.\"\n       ::= { tunnelInetConfigEntry 4 }\n   tunnelInetConfigID\
    \ OBJECT-TYPE\n       SYNTAX     Integer32 (1..2147483647)\n       MAX-ACCESS\
    \ not-accessible\n       STATUS     current\n       DESCRIPTION\n            \
    \   \"An identifier used to distinguish between multiple\n               tunnels\
    \ of the same encapsulation method, with the\n               same endpoints. \
    \ If the encapsulation protocol only\n               allows one tunnel per set\
    \ of endpoint addresses (such\n               as for GRE or IP-in-IP), the value\
    \ of this object is\n               1.  For encapsulation methods (such as L2F)\
    \ which\n               allow multiple parallel tunnels, the manager is\n    \
    \           responsible for choosing any ID which does not\n               conflict\
    \ with an existing row, such as choosing a\n               random number.\"\n\
    \       ::= { tunnelInetConfigEntry 5 }\n   tunnelInetConfigIfIndex OBJECT-TYPE\n\
    \       SYNTAX     InterfaceIndexOrZero\n       MAX-ACCESS read-only\n       STATUS\
    \     current\n       DESCRIPTION\n               \"If the value of tunnelInetConfigStatus\
    \ for this row\n               is active, then this object contains the value\
    \ of\n               ifIndex corresponding to the tunnel interface.  A\n     \
    \          value of 0 is not legal in the active state, and means\n          \
    \     that the interface index has not yet been assigned.\"\n       ::= { tunnelInetConfigEntry\
    \ 6 }\n   tunnelInetConfigStatus OBJECT-TYPE\n       SYNTAX     RowStatus\n  \
    \     MAX-ACCESS read-create\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The status of this row, by which new entries may be\n      \
    \         created, or old entries deleted from this table.  The\n            \
    \   agent need not support setting this object to\n               createAndWait\
    \ or notInService since there are no other\n               writable objects in\
    \ this table, and writable objects\n               in rows of corresponding tables\
    \ such as the\n               tunnelIfTable may be modified while this row is\n\
    \               active.\n               To create a row in this table for an encapsulation\n\
    \               method which does not support multiple parallel\n            \
    \   tunnels with the same endpoints, the management\n               station should\
    \ simply use a tunnelInetConfigID of 1,\n               and set tunnelInetConfigStatus\
    \ to createAndGo.  For\n               encapsulation methods such as L2F which\
    \ allow multiple\n               parallel tunnels, the management station may\
    \ select a\n               pseudo-random number to use as the tunnelInetConfigID\n\
    \               and set tunnelInetConfigStatus to createAndGo.  In the\n     \
    \          event that this ID is already in use and an\n               inconsistentValue\
    \ is returned in response to the set\n               operation, the management\
    \ station should simply select\n               a new pseudo-random number and\
    \ retry the operation.\n               Creating a row in this table will cause\
    \ an interface\n               index to be assigned by the agent in an\n     \
    \          implementation-dependent manner, and corresponding\n              \
    \ rows will be instantiated in the ifTable and the\n               tunnelIfTable.\
    \  The status of this row will become\n               active as soon as the agent\
    \ assigns the interface\n               index, regardless of whether the interface\
    \ is\n               operationally up.\n               Deleting a row in this\
    \ table will likewise delete the\n               corresponding row in the ifTable\
    \ and in the\n               tunnelIfTable.\"\n       ::= { tunnelInetConfigEntry\
    \ 7 }\n   tunnelInetConfigStorageType OBJECT-TYPE\n       SYNTAX     StorageType\n\
    \       MAX-ACCESS read-create\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The storage type of this row.  If the row is\n             \
    \  permanent(4), no objects in the row need be writable.\"\n       ::= { tunnelInetConfigEntry\
    \ 8 }\n   -- conformance information\n   tunnelMIBConformance\n              \
    \       OBJECT IDENTIFIER ::= { tunnelMIB 2 }\n   tunnelMIBCompliances\n     \
    \                OBJECT IDENTIFIER ::= { tunnelMIBConformance 1 }\n   tunnelMIBGroups\
    \  OBJECT IDENTIFIER ::= { tunnelMIBConformance 2 }\n   -- compliance statements\n\
    \   tunnelMIBCompliance MODULE-COMPLIANCE\n       STATUS  deprecated\n       DESCRIPTION\n\
    \               \"The (deprecated) IPv4-only compliance statement for\n      \
    \         the IP Tunnel MIB.\n               This is deprecated in favor of\n\
    \               tunnelMIBInetFullCompliance and\n               tunnelMIBInetReadOnlyCompliance.\"\
    \n       MODULE  -- this module\n       MANDATORY-GROUPS { tunnelMIBBasicGroup\
    \ }\n           OBJECT      tunnelIfHopLimit\n           MIN-ACCESS  read-only\n\
    \           DESCRIPTION\n               \"Write access is not required.\"\n  \
    \         OBJECT      tunnelIfTOS\n           MIN-ACCESS  read-only\n        \
    \   DESCRIPTION\n               \"Write access is not required.\"\n          \
    \ OBJECT      tunnelConfigStatus\n           MIN-ACCESS  read-only\n         \
    \  DESCRIPTION\n               \"Write access is not required.\"\n      ::= {\
    \ tunnelMIBCompliances 1 }\n   tunnelMIBInetFullCompliance MODULE-COMPLIANCE\n\
    \       STATUS  current\n       DESCRIPTION\n               \"The full compliance\
    \ statement for the IP Tunnel MIB.\"\n       MODULE  -- this module\n       MANDATORY-GROUPS\
    \ { tunnelMIBInetGroup }\n           OBJECT      tunnelIfAddressType\n       \
    \    SYNTAX      InetAddressType { ipv4(1), ipv6(2),\n                       \
    \                  ipv4z(3), ipv6z(4) }\n           DESCRIPTION\n            \
    \   \"An implementation is only required to support IPv4\n               and/or\
    \ IPv6 addresses.  An implementation only needs to\n               support the\
    \ addresses it actually supports on the\n               device.\"\n      ::= {\
    \ tunnelMIBCompliances 2 }\n   tunnelMIBInetReadOnlyCompliance MODULE-COMPLIANCE\n\
    \       STATUS  current\n       DESCRIPTION\n               \"The read-only compliance\
    \ statement for the IP Tunnel\n               MIB.\"\n       MODULE  -- this module\n\
    \       MANDATORY-GROUPS { tunnelMIBInetGroup }\n           OBJECT      tunnelIfHopLimit\n\
    \           MIN-ACCESS  read-only\n           DESCRIPTION\n               \"Write\
    \ access is not required.\"\n           OBJECT      tunnelIfTOS\n           MIN-ACCESS\
    \  read-only\n           DESCRIPTION\n               \"Write access is not required.\"\
    \n           OBJECT      tunnelIfFlowLabel\n           MIN-ACCESS  read-only\n\
    \           DESCRIPTION\n               \"Write access is not required.\"\n  \
    \         OBJECT      tunnelIfAddressType\n           SYNTAX      InetAddressType\
    \ { ipv4(1), ipv6(2),\n                                         ipv4z(3), ipv6z(4)\
    \ }\n           MIN-ACCESS  read-only\n           DESCRIPTION\n              \
    \ \"Write access is not required.\n               An implementation is only required\
    \ to support IPv4\n               and/or IPv6 addresses.  An implementation only\
    \ needs to\n               support the addresses it actually supports on the\n\
    \               device.\"\n           OBJECT      tunnelIfLocalInetAddress\n \
    \          MIN-ACCESS  read-only\n           DESCRIPTION\n               \"Write\
    \ access is not required.\"\n           OBJECT      tunnelIfRemoteInetAddress\n\
    \           MIN-ACCESS  read-only\n           DESCRIPTION\n               \"Write\
    \ access is not required.\"\n           OBJECT      tunnelIfEncapsLimit\n    \
    \       MIN-ACCESS  read-only\n           DESCRIPTION\n               \"Write\
    \ access is not required.\"\n           OBJECT      tunnelInetConfigStatus\n \
    \          MIN-ACCESS  read-only\n           DESCRIPTION\n               \"Write\
    \ access is not required, and active is the only\n               status that needs\
    \ to be supported.\"\n           OBJECT      tunnelInetConfigStorageType\n   \
    \        MIN-ACCESS  read-only\n           DESCRIPTION\n               \"Write\
    \ access is not required.\"\n      ::= { tunnelMIBCompliances 3 }\n   -- units\
    \ of conformance\n   tunnelMIBBasicGroup OBJECT-GROUP\n       OBJECTS { tunnelIfLocalAddress,\
    \ tunnelIfRemoteAddress,\n          tunnelIfEncapsMethod, tunnelIfHopLimit, tunnelIfTOS,\n\
    \          tunnelIfSecurity, tunnelConfigIfIndex, tunnelConfigStatus }\n     \
    \  STATUS  deprecated\n       DESCRIPTION\n               \"A collection of objects\
    \ to support basic management\n               of IPv4 Tunnels.  Since this group\
    \ cannot support\n               IPv6, it is deprecated in favor of\n        \
    \       tunnelMIBInetGroup.\"\n       ::= { tunnelMIBGroups 1 }\n   tunnelMIBInetGroup\
    \ OBJECT-GROUP\n       OBJECTS { tunnelIfAddressType, tunnelIfLocalInetAddress,\n\
    \          tunnelIfRemoteInetAddress, tunnelIfEncapsMethod,\n          tunnelIfEncapsLimit,\n\
    \          tunnelIfHopLimit, tunnelIfTOS, tunnelIfFlowLabel,\n          tunnelIfSecurity,\
    \ tunnelInetConfigIfIndex,\n          tunnelInetConfigStatus, tunnelInetConfigStorageType\
    \ }\n       STATUS  current\n       DESCRIPTION\n               \"A collection\
    \ of objects to support basic management\n               of IPv4 and IPv6 Tunnels.\"\
    \n       ::= { tunnelMIBGroups 2 }\n   END\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document introduces a new IANA-maintained textual\
    \ convention\n   (TC) which has been added to the IANAifType-MIB [IFTYPE].  The\n\
    \   initial version of this IANAtunnelType TC can be found in Appendix A.\n  \
    \ The current version of the textual convention can be accessed at\n   http://www.iana.org/assignments/ianaiftype-mib\n\
    \   The assignment policy for IANAtunnelType values should always be\n   identical\
    \ to the policy for assigning IANAifType values.\n   New types of tunnels over\
    \ IPv4 or IPv6 should not be assigned\n   IANAifType values.  Instead, they should\
    \ be assigned IANAtunnelType\n   values and hence reuse the interface type tunnel(131).\
    \  (Note this\n   restriction does not apply to \"tunnels\" which are not over\
    \ IPv4 or\n   IPv6.)\n   Previously, tunnel types that were not point-to-point\
    \ tunnels were\n   problematic in that they could not be properly expressed in\
    \ the\n   tunnel MIB, and hence were assigned IANAifType values.  This document\n\
    \   now corrects this problem, and as a result, IANA has deprecated the\n   sixToFour(215)\
    \ IANAifType value in favor of the sixToFour(11)\n   IANAtunnelType value.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   There are a number of management objects defined\
    \ in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.\
    \  Such\n   objects may be considered sensitive or vulnerable in some network\n\
    \   environments.  The support for SET operations in a non-secure\n   environment\
    \ without proper protection can have a negative effect on\n   network operations.\n\
    \   Unauthorized write access to any of the writable objects could cause\n   unauthorized\
    \ creation and/or manipulation of tunnels, resulting in a\n   denial of service,\
    \ or redirection of packets to an arbitrary\n   destination.\n   Some of the readable\
    \ objects in this MIB module (i.e., objects with a\n   MAX-ACCESS other than not-accessible)\
    \ may be considered sensitive or\n   vulnerable in some network environments.\
    \  It is thus important to\n   control even GET and/or NOTIFY access to these\
    \ objects and possibly\n   to even encrypt the values of these objects when sending\
    \ them over\n   the network via SNMP.\n   Unauthorized read access to tunnelIfLocalInetAddress,\n\
    \   tunnelIfRemoteInetAddress, tunnelIfLocalAddress,\n   tunnelIfRemoteAddress,\
    \ or any object in the tunnelConfigTable or\n   tunnelInetConfigTable would reveal\
    \ information about the tunnel\n   topology.\n   SNMP versions prior to SNMPv3\
    \ did not include adequate security.\n   Even if the network itself is secure\
    \ (for example by using IPSec),\n   even then, there is no control as to who on\
    \ the secure network is\n   allowed to access and GET/SET (read/change/create/delete)\
    \ the objects\n   in this MIB module.\n   It is RECOMMENDED that implementers\
    \ consider the security features as\n   provided by the SNMPv3 framework (see\
    \ [RFC3410], section 8),\n   including full support for the SNMPv3 cryptographic\
    \ mechanisms (for\n   authentication and privacy).\n   Further, deployment of\
    \ SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED\
    \ to deploy SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n\
    \   responsibility to ensure that the SNMP entity giving access to an\n   instance\
    \ of this MIB module is properly configured to give access to\n   the objects\
    \ only to those principals (users) that have legitimate\n   rights to indeed GET\
    \ or SET (change/create/delete) them.\n"
- title: 7.  Changes Since RFC 2667
  contents:
  - "7.  Changes Since RFC 2667\n   IPv4-specific objects were deprecated, including\n\
    \   tunnelIfLocalAddress, tunnelIfRemoteAddress, the tunnelConfigTable,\n   and\
    \ the tunnelMIBBasicGroup.\n   Added IP version-agnostic objects that should be\
    \ used instead,\n   including tunnelIfAddressType, tunnelIfLocalInetAddress,\n\
    \   tunnelIfRemoteInetAddress, the tunnelInetConfigTable, and the\n   tunnelIMIBInetGroup.\n\
    \   The new tunnelIfLocalInetAddress and tunnelIfRemoteInetAddress\n   objects\
    \ are read-write, rather than read-only.\n   Updated DESCRIPTION clauses of existing\
    \ version-agnostic objects\n   (e.g., tunnelIfTOS) that contained IPv4-specific\
    \ text to cover IPv6\n   as well.\n   Added tunnelIfFlowLabel for tunnels over\
    \ IPv6.\n   The encapsulation method was previously an INTEGER type, and is now\n\
    \   an IANA-maintained textual convention.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   This MIB module was updated based on feedback from the\
    \ IETF's\n   Interfaces MIB (IF-MIB), Point-to-Point Protocol Extensions (PPPEXT),\n\
    \   and IPv6 Working Groups.  Mike Heard and Ville Nuorvala also provided\n  \
    \ valuable MIB guidance on this version.\n"
- title: 'Appendix A: IANA Tunnel Type TC'
  contents:
  - "Appendix A: IANA Tunnel Type TC\n   This appendix defines the initial content\
    \ of the IANAtunnelType\n   textual convention.  The most up-to-date and current\
    \ version is\n   maintained in the IANAifType-MIB.\n   IANAtunnelType ::= TEXTUAL-CONVENTION\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The encapsulation\
    \ method used by a tunnel.  The value\n               direct indicates that a\
    \ packet is encapsulated\n               directly within a normal IP header, with\
    \ no\n               intermediate header, and unicast to the remote tunnel\n \
    \              endpoint (e.g., an RFC 2003 IP-in-IP tunnel, or an RFC\n      \
    \         1933 IPv6-in-IPv4 tunnel).  The value minimal indicates\n          \
    \     that a Minimal Forwarding Header (RFC 2004) is\n               inserted\
    \ between the outer header and the payload\n               packet.  The value\
    \ UDP indicates that the payload\n               packet is encapsulated within\
    \ a normal UDP packet\n               (e.g., RFC 1234).\n               The values\
    \ sixToFour, sixOverFour, and isatap\n               indicates that an IPv6 packet\
    \ is encapsulated directly\n               within an IPv4 header, with no intermediate\
    \ header,\n               and unicast to the destination determined by the 6to4,\n\
    \               6over4, or ISATAP protocol.\n               The remaining protocol-specific\
    \ values indicate that a\n               header of the protocol of that name is\
    \ inserted\n               between the outer header and the payload header.\n\
    \               The assignment policy for IANAtunnelType values is\n         \
    \      identical to the policy for assigning IANAifType\n               values.\"\
    \n       SYNTAX     INTEGER {\n                      other(1),        -- none\
    \ of the following\n                      direct(2),       -- no intermediate\
    \ header\n                      gre(3),          -- GRE encapsulation\n      \
    \                minimal(4),      -- Minimal encapsulation\n                 \
    \     l2tp(5),         -- L2TP encapsulation\n                      pptp(6), \
    \        -- PPTP encapsulation\n                      l2f(7),          -- L2F\
    \ encapsulation\n                      udp(8),          -- UDP encapsulation\n\
    \                      atmp(9),         -- ATMP encapsulation\n              \
    \        msdp(10),        -- MSDP encapsulation\n                      sixToFour(11),\
    \   -- 6to4 encapsulation\n                      sixOverFour(12), -- 6over4 encapsulation\n\
    \                      isatap(13),      -- ISATAP encapsulation\n            \
    \          teredo(14)       -- Teredo encapsulation\n                  }\n"
- title: Normative References
  contents:
  - "Normative References\n   [IFTYPE]    Internet Assigned Numbers Authority, \"\
    IANAifType-MIB\",\n               http://www.iana.org/assignments/ianaiftype-mib.\n\
    \   [RFC2473]   Conta, A. and S. Deering, \"Generic Packet Tunneling in\n    \
    \           IPv6 Specification\", RFC 2473, December 1998.\n   [RFC2578]   McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J.,\n               Rose, M., and\
    \ S. Waldbusser, \"Structure of Management\n               Information Version\
    \ 2 (SMIv2)\", STD 58, RFC 2578, April\n               1999.\n   [RFC2579]   McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J.,\n               Rose, M., and\
    \ S. Waldbusser, \"Textual Conventions for\n               SMIv2\", STD 58, RFC\
    \ 2579, April 1999.\n   [RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder,\
    \ J., Case, J.,\n               Rose, M., and S. Waldbusser, \"Conformance Statements\
    \ for\n               SMIv2\", STD 58, RFC 2580, April 1999.\n   [RFC2863]   McCloghrie,\
    \ K. and F. Kastenholz.  \"The Interfaces Group\n               MIB\", RFC 2863,\
    \ June 2000.\n   [RFC3595]   Wijnen, B., \"Textual Conventions for IPv6 Flow Label\"\
    ,\n               RFC 3595, September 2003.\n   [RFC4001]   Daniele, M., Haberman,\
    \ B., Routhier, S., and J.\n               Schoenwaelder, \"Textual Conventions\
    \ for Internet Network\n               Addresses\", RFC 4001, February 2005.\n"
- title: Informative References
  contents:
  - "Informative References\n   [RFC1234]   Provan, D., \"Tunneling IPX Traffic through\
    \ IP Networks\",\n               RFC 1234, June 1991.\n   [RFC1241]   Woodburn,\
    \ R. and D. Mills, \"A Scheme for an Internet\n               Encapsulation Protocol:\
    \ Version 1\", RFC 1241, July 1991.\n   [RFC1701]   Hanks, S., Li, T., Farinacci,\
    \ D., and P. Traina, \"Generic\n               Routing Encapsulation (GRE)\",\
    \ RFC 1701, October 1994.\n   [RFC1702]   Hanks, S., Li, T., Farinacci, D., and\
    \ P. Traina, \"Generic\n               Routing Encapsulation over IPv4 networks\"\
    , RFC 1702,\n               October 1994.\n   [RFC2003]   Perkins, C., \"IP Encapsulation\
    \ within IP\", RFC 2003,\n               October 1996.\n   [RFC2004]   Perkins,\
    \ C., \"Minimal Encapsulation within IP\", RFC 2004,\n               October 1996.\n\
    \   [RFC2107]   Hamzeh, K., \"Ascend Tunnel Management Protocol - ATMP\",\n  \
    \             RFC 2107, February 1997.\n   [RFC2341]   Valencia, A., Littlewood,\
    \ M., and T. Kolar.  \"Cisco Layer\n               Two Forwarding (Protocol) \"\
    L2F\"\", RFC 2341, May 1998.\n   [RFC2401]   Kent, S. and R. Atkinson, \"Security\
    \ Architecture for the\n               Internet Protocol\", RFC 2401, November\
    \ 1998.\n   [RFC2474]   Nichols, K., Blake, S., Baker, F., and D. Black.\n   \
    \            \"Definition of the Differentiated Services Field (DS\n         \
    \      Field) in the IPv4 and IPv6 Headers\", RFC 2474, December\n           \
    \    1998.\n   [RFC2637]   Hamzeh, K., Pall, G., Verthein, W. Taarud, J., Little,\n\
    \               W., and G.  Zorn, \"Point-to-Point Tunneling Protocol\",\n   \
    \            RFC 2637, July 1999.\n   [RFC2661]   Townsley, W., Valencia, A.,\
    \ Rubens, A., Pall, G., Zorn,\n               G., and B. Palter, \"Layer Two Tunneling\
    \ Protocol \"L2TP\"\",\n               RFC 2661, August 1999.\n   [RFC2893]  \
    \ Gilligan, R. and E. Nordmark.  \"Transition Mechanisms for\n               IPv6\
    \ Hosts and Routers\", RFC 2893, August 2000.\n   [RFC3410]   Case, J., Mundy,\
    \ R., Partain, D., and B. Stewart,\n               \"Introduction and Applicability\
    \ Statements for Internet-\n               Standard Management Framework\", RFC\
    \ 3410, December 2002.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Dave Thaler\n   Microsoft Corporation\n   One Microsoft\
    \ Way\n   Redmond, WA  98052-6399\n   Phone: +1 425 703 8835\n   EMail: dthaler@microsoft.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
