- title: __initial_text__
  contents:
  - '             A General Mechanism for RTP Header Extensions

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides a general mechanism to use the header\n \
    \  extension feature of RTP (the Real-Time Transport Protocol).  It\n   provides\
    \ the option to use a small number of small extensions in each\n   RTP packet,\
    \ where the universe of possible extensions is large and\n   registration is de-centralized.\
    \  The actual extensions in use in a\n   session are signaled in the setup information\
    \ for that session.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Requirements Notation  . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   3.  Design Goals . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  2\n   4.  Packet Design  . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  3\n     4.1.  General  . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  3\n     4.2.  One-Byte Header  . . . . . . . . . . . . . . . . . . . .\
    \ .  5\n     4.3.  Two-Byte Header  . . . . . . . . . . . . . . . . . . . . .\
    \  6\n   5.  SDP Signaling Design . . . . . . . . . . . . . . . . . . . . .  7\n\
    \   6.  Offer/Answer . . . . . . . . . . . . . . . . . . . . . . . . .  9\n  \
    \ 7.  BNF Syntax . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n   8.\
    \  Security Considerations  . . . . . . . . . . . . . . . . . . . 12\n   9.  IANA\
    \ Considerations  . . . . . . . . . . . . . . . . . . . . . 13\n     9.1.  Identifier\
    \ Space for IANA to Manage  . . . . . . . . . . . 13\n     9.2.  Registration\
    \ of the SDP extmap Attribute . . . . . . . . . 14\n   10. Acknowledgments  .\
    \ . . . . . . . . . . . . . . . . . . . . . . 15\n   11. Normative References\
    \ . . . . . . . . . . . . . . . . . . . . . 15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The RTP specification [RFC3550] provides a capability to\
    \ extend the\n   RTP header.  It defines the header extension format and rules\
    \ for its\n   use in Section 5.3.1.  The existing header extension method permits\n\
    \   at most one extension per RTP packet, identified by a 16-bit\n   identifier\
    \ and a 16-bit length field specifying the length of the\n   header extension\
    \ in 32-bit words.\n   This mechanism has two conspicuous drawbacks.  First, it\
    \ permits only\n   one header extension in a single RTP packet.  Second, the\n\
    \   specification gives no guidance as to how the 16-bit header extension\n  \
    \ identifiers are allocated to avoid collisions.\n   This specification removes\
    \ the first drawback by defining a backward-\n   compatible and extensible means\
    \ to carry multiple header extension\n   elements in a single RTP packet.  It\
    \ removes the second drawback by\n   defining that these extension elements are\
    \ named by URIs, defining an\n   IANA registry for extension elements defined\
    \ in IETF specifications,\n   and a Session Description Protocol (SDP) method\
    \ for mapping between\n   the naming URIs and the identifier values carried in\
    \ the RTP packets.\n   This header extension applies to RTP/AVP (the Audio/Visual\
    \ Profile)\n   and its extensions.\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Design Goals
  contents:
  - "3.  Design Goals\n   The goal of this design is to provide a simple mechanism\
    \ whereby\n   multiple identified extensions can be used in RTP packets, without\n\
    \   the need for formal registration of those extensions but nonetheless\n   avoiding\
    \ collision.\n   This mechanism provides an alternative to the practice of burying\n\
    \   associated metadata into the media format bit stream.  This has often\n  \
    \ been done in media data sent over fixed-bandwidth channels.  Once\n   this is\
    \ done, a decoder for the specific media format is required to\n   extract the\
    \ metadata.  Also, depending on the media format, the\n   metadata may need to\
    \ be added at the time of encoding the media so\n   that the bit-rate required\
    \ for the metadata is taken into account.\n   But the metadata may not be known\
    \ at that time.  Inserting metadata\n   at a later time can require a decode and\
    \ re-encode to meet bit-rate\n   requirements.\n   In some cases, a more appropriate,\
    \ higher-level mechanism may be\n   available, and if so, it should be used. \
    \ For cases where a higher-\n   level mechanism is not available, it is better\
    \ to provide a mechanism\n   at the RTP level than have the metadata be tied to\
    \ a specific form of\n   media data.\n"
- title: 4.  Packet Design
  contents:
  - '4.  Packet Design

    '
- title: 4.1.  General
  contents:
  - "4.1.  General\n   The following design is fit into the \"header extension\" of\
    \ the RTP\n   extension, as described above.\n   The presence and format of this\
    \ header extension and its contents are\n   negotiated or defined out-of-band,\
    \ such as through signaling (see\n   below for SDP signaling).  The value defined\
    \ for an RTP extension\n   (defined below for the one-byte and two-byte header\
    \ forms) is only an\n   architectural constant (e.g., for use by network analyzers);\
    \ it is\n   the negotiation/definition (e.g., in SDP) that is the definitive\n\
    \   indication that this header extension is present.\n   This specification inherits\
    \ the requirement from the RTP\n   specification that the header extension \"\
    is designed so that the\n   header extension may be ignored\".  To be specific,\
    \ header extensions\n   using this specification MUST only be used for data that\
    \ can safely\n   be ignored by the recipient without affecting interoperability,\
    \ and\n   MUST NOT be used when the presence of the extension has changed the\n\
    \   form or nature of the rest of the packet in a way that is not\n   compatible\
    \ with the way the stream is signaled (e.g., as defined by\n   the payload type).\
    \  Valid examples might include metadata that is\n   additional to the usual RTP\
    \ information.\n   The RTP header extension is formed as a sequence of extension\n\
    \   elements, with possible padding.  Each extension element has a local\n   identifier\
    \ and a length.  The local identifiers may be mapped to a\n   larger namespace\
    \ in the negotiation (e.g., session signaling).\n   As is good network practice,\
    \ data should only be transmitted when\n   needed.  The RTP header extension should\
    \ only be present in a packet\n   if that packet also contains one or more extension\
    \ elements, as\n   defined here.  An extension element should only be present\
    \ in a\n   packet when needed; the signaling setup of extension elements\n   indicates\
    \ only that those elements may be present in some packets,\n   not that they are\
    \ in fact present in all (or indeed, any) packets.\n   Each extension element\
    \ in a packet has a local identifier (ID) and a\n   length.  The local identifiers\
    \ present in the stream MUST have been\n   negotiated or defined out-of-band.\
    \  There are no static allocations\n   of local identifiers.  Each distinct extension\
    \ MUST have a unique ID.\n   The value 0 is reserved for padding and MUST NOT\
    \ be used as a local\n   identifier.\n   There are two variants of the extension:\
    \ one-byte and two-byte\n   headers.  Since it is expected that (a) the number\
    \ of extensions in\n   any given RTP session is small and (b) the extensions themselves\
    \ are\n   small, the one-byte header form is preferred and MUST be supported by\n\
    \   all receivers.  A stream MUST contain only one-byte or two-byte\n   headers:\
    \ they MUST NOT be mixed within a stream.  Transmitters SHOULD\n   NOT use the\
    \ two-byte form when all extensions are small enough for\n   the one-byte header\
    \ form.\n   A sequence of extension elements, possibly with padding, forms the\n\
    \   header extension defined in the RTP specification.  There are as many\n  \
    \ extension elements as fit into the length as indicated in the RTP\n   header\
    \ extension length.  Since this length is signaled in full 32-\n   bit words,\
    \ padding bytes are used to pad to a 32-bit boundary.  The\n   entire extension\
    \ is parsed byte-by-byte to find each extension\n   element (no alignment is required),\
    \ and parsing stops at the earlier\n   of the end of the entire header extension,\
    \ or, in one-byte headers,\n   on encountering an identifier with the reserved\
    \ value of 15.\n   In both forms, padding bytes have the value of 0 (zero).  They\
    \ may be\n   placed between extension elements, if desired for alignment, or after\n\
    \   the last extension element, if needed for padding.  A padding byte\n   does\
    \ not supply the ID of an element, nor the length field.  When a\n   padding byte\
    \ is found, it is ignored and the parser moves on to\n   interpreting the next\
    \ byte.\n   Note carefully that the one-byte header form allows for data lengths\n\
    \   between 1 and 16 bytes, by adding 1 to the signaled length value\n   (thus,\
    \ 0 in the length field indicates 1 byte of data follows).  This\n   allows for\
    \ the important case of 16-byte payloads.  This addition is\n   not performed\
    \ for the two-byte headers, where the length field\n   signals data lengths between\
    \ 0 and 255 bytes.\n   Use of RTP header extensions will reduce the efficiency\
    \ of RTP header\n   compression, since the header extension will be sent uncompressed\n\
    \   unless the RTP header compression module is updated to recognize the\n   extension\
    \ header.  If header extensions are present in some packets,\n   but not in others,\
    \ this can also reduce compression efficiency by\n   requiring an update to the\
    \ fixed header to be conveyed when header\n   extensions start or stop being sent.\
    \  The interactions of the RTP\n   header extension and header compression is\
    \ explored further in\n   [RFC2508] and [RFC3095].\n"
- title: 4.2.  One-Byte Header
  contents:
  - "4.2.  One-Byte Header\n   In the one-byte header form of extensions, the 16-bit\
    \ value required\n   by the RTP specification for a header extension, labeled\
    \ in the RTP\n   specification as \"defined by profile\", takes the fixed bit\
    \ pattern\n   0xBEDE (the first version of this specification was written on the\n\
    \   feast day of the Venerable Bede).\n   Each extension element starts with a\
    \ byte containing an ID and a\n   length:\n       0\n       0 1 2 3 4 5 6 7\n\
    \      +-+-+-+-+-+-+-+-+\n      |  ID   |  len  |\n      +-+-+-+-+-+-+-+-+\n \
    \  The 4-bit ID is the local identifier of this element in the range\n   1-14\
    \ inclusive.  In the signaling section, this is referred to as the\n   valid range.\n\
    \   The local identifier value 15 is reserved for future extension and\n   MUST\
    \ NOT be used as an identifier.  If the ID value 15 is\n   encountered, its length\
    \ field should be ignored, processing of the\n   entire extension should terminate\
    \ at that point, and only the\n   extension elements present prior to the element\
    \ with ID 15\n   considered.\n   The 4-bit length is the number minus one of data\
    \ bytes of this header\n   extension element following the one-byte header.  Therefore,\
    \ the\n   value zero in this field indicates that one byte of data follows, and\n\
    \   a value of 15 (the maximum) indicates element data of 16 bytes.\n   (This\
    \ permits carriage of 16-byte values, which is a common length of\n   labels and\
    \ identifiers, while losing the possibility of zero-length\n   values -- which\
    \ would often be padded anyway.)\n   An example header extension, with three extension\
    \ elements, some\n   padding, and including the required RTP fields, follows:\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       0xBE    |    0xDE       |           length=3            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  ID   | L=0   |     data      |  ID   |  L=1  |   data...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            ...data   |    0 (pad)    |    0 (pad)    |  ID   | L=3   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          data                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 4.3.  Two-Byte Header
  contents:
  - "4.3.  Two-Byte Header\n   In the two-byte header form, the 16-bit value required\
    \ by the RTP\n   specification for a header extension, labeled in the RTP\n  \
    \ specification as \"defined by profile\", is defined as shown below.\n      \
    \ 0                   1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         0x100         |appbits|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The appbits field is 4 bits that are application-dependent and may be\n  \
    \ defined to be any value or meaning, and are outside the scope of this\n   specification.\
    \  For the purposes of signaling, this field is treated\n   as a special extension\
    \ value assigned to the local identifier 256.\n   If no extension has been specified\
    \ through configuration or signaling\n   for this local identifier value 256,\
    \ the appbits field SHOULD be set\n   to all 0s by the sender and MUST be ignored\
    \ by the receiver.\n   Each extension element starts with a byte containing an\
    \ ID and a byte\n   containing a length:\n       0                   1\n     \
    \  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       ID      |     length    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The 8-bit ID is the local identifier of this element in the range\n   1-255\
    \ inclusive.  In the signaling section, the range 1-256 is\n   referred to as\
    \ the valid range, with the values 1-255 referring to\n   extension elements,\
    \ and the value 256 referring to the 4-bit field\n   'appbits' (above).\n   The\
    \ 8-bit length field is the length of extension data in bytes not\n   including\
    \ the ID and length fields.  The value zero indicates there\n   is no data following.\n\
    \   An example header extension, with three extension elements, some\n   padding,\
    \ and including the required RTP fields, follows:\n       0                  \
    \ 1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       0x10    |    0x00       |           length=3            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      ID       |     L=0       |     ID        |     L=1       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       data    |    0 (pad)    |       ID      |      L=4      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          data                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 5.  SDP Signaling Design
  contents:
  - "5.  SDP Signaling Design\n   The indication of the presence of this extension,\
    \ and the mapping of\n   local identifiers used in the header extension to a larger\
    \ namespace,\n   MUST be performed out-of-band, for example, as part of a SIP\
    \ offer/\n   answer exchange using SDP.  This section defines such signaling in\n\
    \   SDP.\n   A usable mapping MUST use IDs in the valid range, and each ID in\
    \ this\n   range MUST be used only once for each media (or only once if the\n\
    \   mappings are session level).  Mappings that do not conform to these\n   rules\
    \ MAY be presented, for instance, during offer/answer negotiation\n   as described\
    \ in the next section, but remapping to conformant values\n   is necessary before\
    \ they can be applied.\n   Each extension is named by a URI.  That URI MUST be\
    \ absolute, and\n   precisely identifies the format and meaning of the extension.\
    \  URIs\n   that contain a domain name SHOULD also contain a month-date in the\n\
    \   form mmyyyy.  The definition of the element and assignment of the URI\n  \
    \ MUST have been authorized by the owner of the domain name on or very\n   close\
    \ to that date.  (This avoids problems when domain names change\n   ownership.)\
    \  If the resource or document defines several extensions,\n   then the URI MUST\
    \ identify the actual extension in use, e.g., using a\n   fragment or query identifier\
    \ (characters after a '#' or '?' in the\n   URI).\n   Rationale: the use of URIs\
    \ provides for a large, unallocated space,\n   and gives documentation on the\
    \ extension.  The URIs are not required\n   to be de-referencable, in order to\
    \ permit confidential or\n   experimental use, and to cover the case when extensions\
    \ continue to\n   be used after the organization that defined them ceases to exist.\n\
    \   An extension URI with the same attributes MUST NOT appear more than\n   once\
    \ applying to the same stream, i.e., at session level or in the\n   declarations\
    \ for a single stream at media level.  (The same extension\n   may, of course,\
    \ be used for several streams, and may appear\n   differently parameterized for\
    \ the same stream.)\n   For extensions defined in RFCs, the URI used SHOULD be\
    \ a URN starting\n   \"urn:ietf:params:rtp-hdrext:\" and followed by a registered,\n\
    \   descriptive name.\n   The registration requirements are detailed in the IANA\
    \ Considerations\n   section, below.\n   An example (this is only an example),\
    \ where 'avt-example-metadata' is\n   the hypothetical name of a header extension,\
    \ might be:\n      urn:ietf:params:rtp-hdrext:avt-example-metadata\n   An example\
    \ name not from the IETF (this is only an example) might be:\n      http://example.com/082005/ext.htm#example-metadata\n\
    \   The mapping may be provided per media stream (in the media-level\n   section(s)\
    \ of SDP, i.e., after an \"m=\" line) or globally for all\n   streams (i.e., before\
    \ the first \"m=\" line, at session level).  The\n   definitions MUST be either\
    \ all session level or all media level; it\n   is not permitted to mix the two\
    \ styles.  In addition, as noted above,\n   the IDs used MUST be unique for each\
    \ stream type for a given media,\n   or for the session for session-level declarations.\n\
    \   Each local identifier potentially used in the stream is mapped to a\n   string\
    \ using an attribute of the form:\n      a=extmap:<value>[\"/\"<direction>] <URI>\
    \ <extensionattributes>\n   where <URI> is a URI, as above, <value> is the local\
    \ identifier (ID)\n   of this extension and is an integer in the valid range inclusive\
    \ (0\n   is reserved for padding in both forms, and 15 is reserved in the one-\n\
    \   byte header form, as noted above), and <direction> is one of\n   \"sendonly\"\
    , \"recvonly\", \"sendrecv\", or \"inactive\" (without the\n   quotes).\n   The\
    \ formal BNF syntax is presented in a later section of this\n   specification.\n\
    \   Example:\n      a=extmap:1 http://example.com/082005/ext.htm#ttime\n     \
    \ a=extmap:2/sendrecv http://example.com/082005/ext.htm#xmeta short\n   When SDP\
    \ signaling is used for the RTP session, it is the presence of\n   the 'extmap'\
    \ attribute(s) that is diagnostic that this style of\n   header extensions is\
    \ used, not the magic number indicated above.\n"
- title: 6.  Offer/Answer
  contents:
  - "6.  Offer/Answer\n   The simple signaling described above may be enhanced in\
    \ an offer/\n   answer context, to permit:\n   o  asymmetric behavior (extensions\
    \ sent in only one direction),\n   o  the offer of mutually exclusive alternatives,\
    \ or\n   o  the offer of more extensions than can be sent in a single session.\n\
    \   A direction attribute MAY be included in an extmap; without it, the\n   direction\
    \ implicitly inherits, of course, from the stream direction,\n   or is \"sendrecv\"\
    \ for session-level attributes or extensions of\n   \"inactive\" streams.  The\
    \ direction MUST be one of \"sendonly\",\n   \"recvonly\", \"sendrecv\", or \"\
    inactive\".  A \"sendonly\" direction\n   indicates an ability to send; a \"recvonly\"\
    \ direction indicates a\n   desire to receive; a \"sendrecv\" direction indicates\
    \ both.  An\n   \"inactive\" direction indicates neither, but later re-negotiation\
    \ may\n   make an extension active.\n   Extensions, with their directions, may\
    \ be signaled for an \"inactive\"\n   stream.  It is an error to use an extension\
    \ direction incompatible\n   with the stream direction (e.g., a \"sendonly\" attribute\
    \ for a\n   \"recvonly\" stream).\n   If an offer or answer contains session-level\
    \ mappings (and hence no\n   media-level mappings), and different behavior is\
    \ desired for each\n   stream, then the entire set of extension map declarations\
    \ may be\n   moved into the media-level section(s) of the SDP.  (Note that this\n\
    \   specification does not permit mixing global and local declarations,\n   to\
    \ make identifier management easier.)\n   If an extension map is offered as \"\
    sendrecv\", explicitly or\n   implicitly, and asymmetric behavior is desired,\
    \ the SDP may be\n   modified to modify or add direction qualifiers for that extension.\n\
    \   If an extension is marked as \"sendonly\" and the answerer desires to\n  \
    \ receive it, the extension MUST be marked as \"recvonly\" in the SDP\n   answer.\
    \  An answerer that has no desire to receive the extension or\n   does not understand\
    \ the extension SHOULD remove it from the SDP\n   answer.\n   If an extension\
    \ is marked as \"recvonly\" and the answerer desires to\n   send it, the extension\
    \ MUST be marked as \"sendonly\" in the SDP\n   answer.  An answerer that has\
    \ no desire to, or is unable to, send the\n   extension SHOULD remove it from\
    \ the SDP answer.\n   Local identifiers in the valid range inclusive in an offer\
    \ or answer\n   must not be used more than once per media section (including the\n\
    \   session-level section).  A session update MAY change the direction\n   qualifiers\
    \ of extensions under use.  A session update MAY add or\n   remove extension(s).\
    \  Identifiers values in the valid range MUST NOT\n   be altered (remapped).\n\
    \   Note that, under this rule, the same local identifier cannot be used\n   for\
    \ two extensions for the same media, even when one is \"sendonly\"\n   and the\
    \ other \"recvonly\", as it would then be impossible to make\n   either of them\
    \ sendrecv (since re-numbering is not permitted either).\n   If a party wishes\
    \ to offer mutually exclusive alternatives, then\n   multiple extensions with\
    \ the same identifier in the (unusable) range\n   4096-4351 may be offered; the\
    \ answerer should select at most one of\n   the offered extensions with the same\
    \ identifier, and remap it to a\n   free identifier in the valid range, for that\
    \ extension to be usable.\n   Similarly, if more extensions are offered than can\
    \ be fit in the\n   valid range, identifiers in the range 4096-4351 may be offered;\
    \ the\n   answerer should choose those that are desired, and remap them to a\n\
    \   free identifier in the valid range.\n   It is always allowed to place the\
    \ offered identifier value \"as is\" in\n   the SDP answer (for example, due to\
    \ lack of a free identifier value\n   in the valid range).  Extensions with an\
    \ identifier outside the valid\n   range cannot, of course, be used.  If required,\
    \ the offerer or\n   answerer can update the session to make space for such an\
    \ extension.\n   Rationale: the range 4096-4351 for these negotiation identifiers\
    \ is\n   deliberately restricted to allow expansion of the range of valid\n  \
    \ identifiers in future.\n   Either party MAY include extensions in the stream\
    \ other than those\n   negotiated, or those negotiated as \"inactive\", for example,\
    \ for the\n   benefit of intermediate nodes.  Only extensions that appeared with\
    \ an\n   identifier in the valid range in SDP originated by the sender can be\n\
    \   sent.\n   Example (port numbers, RTP profiles, payload IDs and rtpmaps, etc.\n\
    \   all omitted for brevity):\n   The offer:\n   a=extmap:1 URI-toffset\n   a=extmap:14\
    \ URI-obscure\n   a=extmap:4096 URI-gps-string\n   a=extmap:4096 URI-gps-binary\n\
    \   a=extmap:4097 URI-frametype\n   m=video\n   a=sendrecv\n   m=audio\n   a=sendrecv\n\
    \   The answerer is interested in receiving GPS in string format only on\n   video,\
    \ but cannot send GPS at all.  It is not interested in\n   transmission offsets\
    \ on audio, and does not understand the URI-\n   obscure extension.  It therefore\
    \ moves the extensions from session\n   level to media level, and adjusts the\
    \ declarations:\n   m=video\n   a=sendrecv\n   a=extmap:1 URI-toffset\n   a=extmap:2/recvonly\
    \ URI-gps-string\n   a=extmap:3 URI-frametype\n   m=audio\n   a=sendrecv\n   a=extmap:1/sendonly\
    \ URI-toffset\n"
- title: 7.  BNF Syntax
  contents:
  - "7.  BNF Syntax\n   The syntax definition below uses ABNF according to [RFC5234].\
    \  The\n   syntax element 'URI' is defined in [RFC3986] (only absolute URIs are\n\
    \   permitted here).  The syntax element 'extmap' is an attribute as\n   defined\
    \ in [RFC4566], i.e., \"a=\" precedes the extmap definition.\n   Specific extensionattributes\
    \ are defined by the specification that\n   defines a specific extension name;\
    \ there may be several.\n        extmap = mapentry SP extensionname [SP extensionattributes]\n\
    \        extensionname = URI\n        direction = \"sendonly\" / \"recvonly\"\
    \ / \"sendrecv\" / \"inactive\"\n        mapentry = \"extmap:\" 1*5DIGIT [\"/\"\
    \ direction]\n        extensionattributes = byte-string\n        URI = <Defined\
    \ in RFC 3986>\n        byte-string = <Defined in RFC 4566>\n        SP = <Defined\
    \ in RFC 5234>\n        DIGIT = <Defined in RFC 5234>\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This defines only a place to transmit information;\
    \ the security\n   implications of the extensions must be discussed with those\n\
    \   extensions.\n   Care should be taken when defining extensions.  Clearly, they\
    \ should\n   be solely informative, but even when the information is extracted,\n\
    \   should not cause security concerns.\n   Header extensions have the same security\
    \ coverage as the RTP header\n   itself.  When Secure Real-time Transport Protocol\
    \ (SRTP) [RFC3711] is\n   used to protect RTP sessions, the RTP payload may be\
    \ both encrypted\n   and integrity protected, while the RTP header is either unprotected\n\
    \   or integrity protected.  Therefore, it is inappropriate to place\n   information\
    \ in header extensions that cause security problems if\n   disclosed, unless the\
    \ entire RTP packet is protected by a lower-layer\n   security protocol providing\
    \ both confidentiality and integrity\n   capability.\n"
- title: 9.  IANA Considerations
  contents:
  - '9.  IANA Considerations

    '
- title: 9.1.  Identifier Space for IANA to Manage
  contents:
  - "9.1.  Identifier Space for IANA to Manage\n   The mapping from the naming URI\
    \ form to a reference to a\n   specification is managed by IANA.  Insertion into\
    \ this registry is\n   under the requirements of \"Expert Review\" as defined\
    \ in [RFC5226].\n   The IANA will also maintain a server that contains all of\
    \ the\n   registered elements in a publicly accessible space.\n   Here is the\
    \ formal declaration required by the IETF URN Sub-namespace\n   specification\
    \ [RFC3553].\n   o  Registry name: RTP Compact Header Extensions\n   o  Specification:\
    \ RFC 5285 and RFCs updating RFC 5285.\n   o  Information required:\n      A.\
    \  The desired extension naming URI\n      B.  A formal reference to the publicly\
    \ available specification\n      C.  A short phrase describing the function of\
    \ the extension\n      D.  Contact information for the organization or person\
    \ making the\n          registration\n      For extensions defined in RFCs, the\
    \ URI is recommended to be of\n      the form urn:ietf:params:rtp-hdrext:, and\
    \ the formal reference is\n      the RFC number of the RFC documenting the extension.\n\
    \   o  Review process: Expert review is required.  The expert review\n      should\
    \ check the following requirements:\n      1.  that the specification is publicly\
    \ available;\n      2.  that the extension complies with the requirements of RTP\
    \ and\n          this specification, for extensions (notably, that the stream\n\
    \          is still decodable if the extension is ignored or not\n          recognized);\n\
    \      3.  that the extension specification is technically consistent (in\n  \
    \        itself and with RTP), complete, and comprehensible;\n      4.  that the\
    \ extension does not duplicate functionality in\n          existing IETF specifications\
    \ (including RTP itself), or other\n          extensions already registered;\n\
    \      5.  that the specification contains a security analysis regarding\n   \
    \       the content of the header extension;\n      6.  that the extension is\
    \ generally applicable, for example point-\n          to-multipoint safe, and\
    \ the specification correctly describes\n          limitations if they exist;\
    \ and\n      7.  that the suggested naming URI form is appropriately chosen and\n\
    \          unique.\n   o  Size and format of entries: a mapping from a naming\
    \ URI string to\n      a formal reference to a publicly available specification,\
    \ with a\n      descriptive phrase and contact information.\n   o  Initial assignments:\
    \ none.\n"
- title: 9.2.  Registration of the SDP extmap Attribute
  contents:
  - "9.2.  Registration of the SDP extmap Attribute\n   This section contains the\
    \ information required by [RFC4566] for an\n   SDP attribute.\n   o  contact name,\
    \ email address, and telephone number:\n         D. Singer\n         singer@apple.com\n\
    \         +1 408-974-3162\n   o  attribute name (as it will appear in SDP): extmap\n\
    \   o  long-form attribute name in English: generic header extension map\n   \
    \   definition\n   o  type of attribute (session level, media level, or both):\
    \ both\n   o  whether the attribute value is subject to the charset attribute:\n\
    \      not subject to the charset attribute\n   o  a one-paragraph explanation\
    \ of the purpose of the attribute: This\n      attribute defines the mapping from\
    \ the extension numbers used in\n      packet headers into extension names as\
    \ documented in\n      specifications and appropriately registered.\n   o  a specification\
    \ of appropriate attribute values for this\n      attribute: see RFC 5285.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   Both Brian Link and John Lazzaro provided helpful comments\
    \ on an\n   initial draft of this document.  Colin Perkins was helpful in\n  \
    \ reviewing and dealing with the details.  The use of URNs for IETF-\n   defined\
    \ extensions was suggested by Jonathan Lennox, and Pete Cordell\n   was instrumental\
    \ in improving the padding wording.  Dave Oran\n   provided feedback and text\
    \ in the review.  Mike Dolan contributed the\n   two-byte header form.  Magnus\
    \ Westerlund and Tom Taylor were\n   instrumental in managing the registration\
    \ text.\n"
- title: 11.  Normative References
  contents:
  - "11.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2508]  Casner, S. and V. Jacobson, \"Compressing IP/UDP/RTP\n\
    \              Headers for Low-Speed Serial Links\", RFC 2508,\n             \
    \ February 1999.\n   [RFC3095]  Bormann, C., Burmeister, C., Degermark, M., Fukushima,\
    \ H.,\n              Hannu, H., Jonsson, L-E., Hakenberg, R., Koren, T., Le,\n\
    \              K., Liu, Z., Martensson, A., Miyazaki, A., Svanbro, K.,\n     \
    \         Wiebke, T., Yoshimura, T., and H. Zheng, \"RObust Header\n         \
    \     Compression (ROHC): Framework and four profiles: RTP, UDP,\n           \
    \   ESP, and uncompressed\", RFC 3095, July 2001.\n   [RFC3550]  Schulzrinne,\
    \ H., Casner, S., Frederick, R., and V.\n              Jacobson, \"RTP: A Transport\
    \ Protocol for Real-Time\n              Applications\", STD 64, RFC 3550, July\
    \ 2003.\n   [RFC3553]  Mealling, M., Masinter, L., Hardie, T., and G. Klyne, \"\
    An\n              IETF URN Sub-namespace for Registered Protocol\n           \
    \   Parameters\", BCP 73, RFC 3553, June 2003.\n   [RFC3711]  Baugher, M., McGrew,\
    \ D., Naslund, M., Carrara, E., and K.\n              Norrman, \"The Secure Real-time\
    \ Transport Protocol (SRTP)\",\n              RFC 3711, March 2004.\n   [RFC3986]\
    \  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource\
    \ Identifier (URI): Generic Syntax\", STD 66,\n              RFC 3986, January\
    \ 2005.\n   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n\
    \              Description Protocol\", RFC 4566, July 2006.\n   [RFC5226]  Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [RFC5234]\
    \  Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:\
    \ ABNF\", STD 68, RFC 5234, January 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David Singer\n   Apple, Inc.\n   1 Infinite Loop\n   Cupertino,\
    \ CA  95014\n   USA\n   Phone: +1 408 996 1010\n   EMail: singer@apple.com\n \
    \  URI:   http://www.apple.com/quicktime\n   Harikishan Desineni\n   Qualcomm\n\
    \   5775 Morehouse Drive\n   San Diego, CA  92126\n   USA\n   Phone: +1 858 845\
    \ 8996\n   EMail: hd@qualcomm.com\n   URI:   http://www.qualcomm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
