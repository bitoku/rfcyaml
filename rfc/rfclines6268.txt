Additional New ASN.1 Modules for the Cryptographic Message Syntax (CMS) and the Public Key Infrastructure Using X.509 (PKIX)
Abstract The Cryptographic Message Syntax (CMS) format, and many associated formats, are expressed using ASN.1.
The current ASN.1 modules conform to the 1988 version of ASN.1.
This document updates some auxiliary ASN.1 modules to conform to the 2008 version of ASN.1; the 1988 ASN.1 modules remain the normative version.
There are no bits  on the wire changes to any of the formats; this is simply a change to the syntax.
Some developers would like the IETF to use the latest version of ASN.1 in its standards.
Most of the RFCs that relate to security protocols still use ASN.1 from the 1988 standard, which has been deprecated.
This is particularly true for the standards that relate to PKIX, CMS, and Secure/Multipurpose
In this document we have either changed the syntax to use the 2008 ASN.1 standard, or done some updates from previous conversions.
The ASN.1 modules updated came from the following RFCs:  RFC 3274, Compressed Data Content Type for Cryptographic Message Syntax (CMS)
X.509 Extensions for IP Addresses and AS Identifiers
RFC 6019, BinaryTime: An Alternate Format for Representing Date and Time in ASN.1 [RFC6019].
RFC 4073, Protecting Multiple Contents with the Cryptographic Message Syntax (CMS) [RFC4073].
RFC 4231, Identifiers and Test Vectors for HMAC SHA 224, HMAC SHA 256, HMAC SHA 384, and HMAC SHA 512
RFC 4334, Certificate Extensions and Attributes Supporting Authentication in Point to Point Protocol (PPP) and Wireless Local Area Networks (WLAN)
Cryptographic Message Syntax (CMS) Authenticated
Enveloped Data Content Type [RFC5083].
RFC 5652, Cryptographic Message Syntax (CMS) [RFC5652].
RFC 5752, Multiple Signatures in Cryptographic Message Syntax (CMS)
Note that some of the modules in this document get some of their definitions from places different than the modules in the original RFCs.
The idea is that these modules, when combined with the modules in [RFC5911] and [RFC5912], can stand on their own and do not need to import definitions from anywhere else.
This document does not explicitly update the RFCs from which the ASN.1 modules have been extracted.
This is because the original 1988 ASN.1 syntax remains the normative version and the modules in this document as well as in [RFC5911] and [RFC5912] are informative (but hopefully useful)
ASN.1 Updates (2002 to 2008)
The modules defined in this document are compatible with the most current ASN.1 specification published in 2008
The changes between the 2002 specification and the 2008 specification include the creation of additional pre defined types (DATE, DATE  TIME, DURATION, NOT
A NUMBER, OID IRI, RELATIVE OID IRI, TIME, TIME  OF DAY) and the ability to define different encoding rules (ENCODING  CONTROL, INSTRUCTIONS).
None of the newly defined tokens are currently used in any of the ASN.1 specifications published here.
Information on the changes to ASN.1 between the 1988 and 2002 versions can be found in [RFC6025].
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
We have updated the ASN.1 module associated with this document to be 2008 compliant and to use the set of classes previously defined in [RFC5911].
{ iso(1) member body(2) us(840)
} DEFINITIONS IMPLICIT TAGS ::
BEGIN IMPORTS CMSVersion, ContentSet, CONTENT TYPE FROM CryptographicMessageSyntax 2010 { iso(1) member body(2
} AlgorithmIdentifier{}, SMIME CAPS, ParamOptions FROM AlgorithmInformation 2009 {iso(1) identified organization(3)
Define the compressed data content type
{ TYPE CompressedData IDENTIFIED BY i
encapContentInfo EncapsulatedContentInfo } EncapsulatedContentInfo ::
} cpa zlibCompress COMPRESS ALGORITHM ::
{ IDENTIFIER id alg zlibCompress
PARAMS TYPE NULL ARE preferredAbsent SMIME CAPS
{IDENTIFIED BY id alg zlibCompress} }
WITH SYNTAX { IDENTIFIER &id [PARAMS [TYPE &Params] ARE &paramPresence]
[SMIME CAPS &smimeCaps] } END 3.
We have updated the ASN.1 module associated with RFC 3779 to be ASN.1 2008 compliant and to use the set of classes previously defined in [RFC5912].
IPAddrAndASCertExtn 2010 { iso(1) identified
id mod ip addr and as ident 2(72)
id mod pkix1 explicit 02(51)} EXTENSION FROM PKIX CommonTypes 2009 { iso(1) identified organization(3) dod(6)
IP Address Delegation Extension OID
ext pe ipAddrBlocks EXTENSION ::
{ SYNTAX IPAddrBlocks IDENTIFIED BY i
OCTET STRING (SIZE (2..3)), ipAddressChoice
BIT STRING   Autonomous System Identifier Delegation Extension OID   ext pe autonomousSysIds EXTENSION
We have updated the ASN.1 module associated with this document to be 2008 compliant and to use the set of classes previously defined in [RFC5911].
} DEFINITIONS IMPLICIT TAGS ::
ATTRIBUTE FROM PKIX CommonTypes 2009 { iso(1) identified organization(3)
Leap seconds are EXCLUDED from the computation.
We have updated the ASN.1 module associated with this document to be 2008 compliant and to use the set of classes previously defined in [RFC5911].
ContentCollectionModule 2010 { iso(1) member body(2
id mod context Collect 2009(56)
} DEFINITIONS IMPLICIT TAGS ::
[RFC6268] CONTENT TYPE, ContentInfo FROM CryptographicMessageSyntax 2010 { iso(1) member body(2
} AttributeSet{}, ATTRIBUTE FROM PKIX CommonTypes 2009 { iso(1) identified organization(3)
This is to be added to ContentSet in the CMS module
ct ContentCollection CONTENT TYPE ::
{ TYPE ContentCollection IDENTIFIED BY id
{ TYPE ContentWithAttributes IDENTIFIED BY id
Module RFC 4231 RFC 4231 does not contain an ASN.1 module to be updated.
We have therefore created an ASN.1 module to represent the ASN.1 that is present in the document.
Note that the parameters are defined as expecting a parameter for the algorithm identifiers in this module; this is different from most of the algorithms used in PKIX and S/MIME.
There is no concept of being able to truncate the MAC (Message Authentication Code) value in the ASN.1 unlike the XML definitions.
This is reflected by not having a minimum MAC length defined in the ASN.1.
{ iso(1) identified organization(3) dod(6)
CAPS FROM AlgorithmInformation 2009 {
Define the base OID for the algorithm identifiers
Define the necessary algorithm identifiers
hmacWithSHA224 PARAMS TYPE NULL ARE preferredPresent
IS KEYED MAC TRUE SMIME CAPS {IDENTIFIED BY id hmacWithSHA224} } maca hMAC SHA256
PARAMS TYPE NULL ARE preferredPresent
IS KEYED MAC TRUE SMIME CAPS {IDENTIFIED BY id hmacWithSHA256
} } maca hMAC SHA384
PARAMS TYPE NULL ARE preferredPresent
IS KEYED MAC TRUE SMIME CAPS {IDENTIFIED BY
PARAMS TYPE NULL ARE preferredPresent
IS KEYED MAC TRUE SMIME CAPS {IDENTIFIED BY
We have updated the ASN.1 module associated with RFC 4334 to be ASN.1 2008 compliant and to use the set of classes previously defined in [RFC5912].
WLANCertExtn 2010 { iso(1) identified organization(3)
id mod wlan extns 2(73)
} DEFINITIONS IMPLICIT TAGS ::
; IMPORTS EXTENSION, ATTRIBUTE FROM PKIX CommonTypes 2009 {iso(1) identified organization(3) dod(6)
} id pe, id kp FROM PKIX1Explicit 2009 { iso(1) identified organization(3) dod(6)
id mod pkix1 explicit 02(51)}
aca FROM PKIXAttributeCertificate 2009 { iso(1) identified organization(3)
kp eapOverLAN } id kp eapOverPPP  OBJECT
Wireless LAN SSID Extension ext pe
Wireless LAN SSID Attribute Certificate Attribute
Uses same syntax as the certificate extension: SSIDList at aca
This module is updated from RFC 5911 [RFC5911] by the following changes: 1.
Define separate attribute sets for the unprotected attributes used in EnvelopedData, EncryptedData, and AuthenticatedEnvelopedData (RFC 5083).
2.  Define a parameterized type EncryptedContentInfoType so that the basic type can be used with different algorithm sets (used for EnvelopedData, EncryptedData, and AuthenticatedEnvelopedData (RFC 5083)).
The parameterized type is assigned to an unparameterized type of EncryptedContentInfo to minimize the output changes from previous versions.
Protocol designers can make use of the '08 ASN.1 constraints to define different sets of attributes for EncryptedData and EnvelopedData and for AuthenticatedData and AuthEnvelopedData.
Previously, attributes could only be constrained based on whether they were in the clear or unauthenticated not on the encapsulating content type.
CMS AuthEnvelopedData 2010 {iso(1) member body(2) us(840)
id mod cmsAuthEnvData 2009(57) }
BEGIN IMPORTS CMSVersion, EncryptedContentInfoType{}, MessageAuthenticationCode, OriginatorInfo, RecipientInfos, CONTENT TYPE, Attributes{}, ATTRIBUTE, CONTENT ENCRYPTION, AlgorithmIdentifier{}, aa signingTime, aa messageDigest,
aa contentType FROM CryptographicMessageSyntax 2010 {
} ContentEncryptionAlgs FROM CMS AES CCM and AES GCM 2009 {
[1] IMPLICIT AuthAttributes OPTIONAL, mac MessageAuthenticationCode, unauthAttrs
IMPLICIT UnauthAttributes OPTIONAL } EncryptedContentInfo ::
This module is updated from RFC 5911 [RFC5911] by the following changes: 1.
Define separate attribute sets for the unprotected attributes used in EnvelopedData, EncryptedData, and AuthenticatedEnvelopedData (RFC 5083).
2.  Define a parameterized type EncryptedContentInfoType so that the basic type can be used with algorithm sets (used for EnvelopedData, EncryptedData, and AuthenticatedEnvelopedData (RFC 5083)).
The parameterized type is assigned to an unparameterized type of EncryptedContentInfo to minimize the output changes from previous versions.
We are anticipating the definition of attributes that are going to be restricted to the use of only EnvelopedData.
We are therefore separating the different attribute sets so that protocol designers that need to do this will be able to define attributes that are used for EnvelopedData, but not for EncryptedData.
The same separation is also being applied to AuthenticatedData and AuthEnvelopedData.
{ iso(1) member body(2) us(840)
IMPORTS ParamOptions, DIGEST ALGORITHM, SIGNATURE ALGORITHM, PUBLIC KEY, KEY DERIVATION, KEY WRAP, MAC ALGORITHM, KEY AGREE, KEY TRANSPORT, CONTENT ENCRYPTION, ALGORITHM, AlgorithmIdentifier{} FROM AlgorithmInformation 2009 {iso(1)
} SignatureAlgs, MessageDigestAlgs, KeyAgreementAlgs, MessageAuthAlgs, KeyWrapAlgs, ContentEncryptionAlgs, KeyTransportAlgs, KeyDerivationAlgs, KeyAgreePublicKeys FROM CryptographicMessageSyntaxAlgorithms 2009 {
d mod cmsalg 2001 02(37)
} Certificate, CertificateList, CertificateSerialNumber, Name, ATTRIBUTE FROM PKIX1Explicit 2009 { iso(1) identified organization(3) dod(6)
id mod pkix1 explicit 02(51)
} AttributeCertificate FROM PKIXAttributeCertificate 2009 { iso(1) identified organization(3)
id mod attribute cert 02(47)
} AttributeCertificateV1 FROM AttributeCertificateVersion1 2009 { iso(1) identified organization(3)
The following are used for version numbers using the ASN.1   NOTE:
WITH SYNTAX { [TYPE &Type] IDENTIFIED BY &i
Define the set of content types to be recognized.
SET OF DigestAlgorithmIdentifier, encapContentInfo EncapsulatedContentInfo, certificates [0]
IMPLICIT CertificateSet OPTIONAL, crls [1]
OCTET STRING ( CONTAINING CONTENT TYPE. &Type({ContentSet}{@eContentType}))
IMPLICIT CertificateSet OPTIONAL, crls [1]
IMPLICIT OCTET STRING OPTIONAL }
[0] IMPLICIT ENCRYPTED {CONTENT TYPE.
SubjectKeyIdentifier, originatorKey [1] OriginatorPublicKey } OriginatorPublicKey ::
CHOICE { issuerAndSerialNumber IssuerAndSerialNumber, rKeyId [0
subjectKeyIdentifier SubjectKeyIdentifier, date GeneralizedTime OPTIONAL, other OtherKeyAttribute OPTIONAL }
keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier, encryptedKey EncryptedKey } OTHER RECIPIENT ::
digestAlgorithm [1] DigestAlgorithmIdentifier OPTIONAL, encapContentInfo EncapsulatedContentInfo, authAttrs
[2] IMPLICIT AuthAttributes OPTIONAL, mac MessageAuthenticationCode, unauthAttrs
SEQUENCE { keyAttrId  KEY ATTRIBUTE. &id({SupportedKeyAttributes}),
{ TYPE SignedData IDENTIFIED BY
{ TYPE EnvelopedData IDENTIFIED BY
{ TYPE EncryptedData IDENTIFIED BY
{ TYPE AuthenticatedData IDENTIFIED BY
We have updated the ASN.1 module associated with this document to be 2008 compliant and to use the set of classes previously defined in [RFC5911].
MultipleSignatures 2010 { iso(1) member body(2
} DEFINITIONS IMPLICIT TAGS ::
The types and values defined in this module are exported for use   in the other ASN.1 modules.
Other applications may use them for   their own purposes.
ATTRIBUTE FROM PKIX CommonTypes 2009 { iso(1) identified organization(3)
}   Imports from CryptographicMessageSyntax 2010
SignatureAlgorithmIdentifier FROM CryptographicMessageSyntax 2010 { iso(1) member body(2) us(840)
id mod cms 2009(58) }
2009 [RFC5911] ESSCertIDv2 FROM ExtendedSecurityServices 2009 {
d mod ess 2006 02(42) }
Module Identifiers in ASN.1 One potential issue that can occur when updating modules is the fact that a large number of modules may need to be updated if they import from a newly updated module.
This section addresses one method that can be used to deal with this problem, but the modules in this document don't currently implement the solution discussed here.
When looking at an import statement, there are three portions:
The list of items imported, a textual name for the module, and an object identifier for the module.
Full implementations of ASN.1 do module matching using first the object identifier, and if that is not present, the textual name of the module.
Note however that some older implementations used the textual name of the module for the purposes of matching.
In a full implementation, the name assigned to the module is scoped to the ASN.1 module that it appears in (and thus the need to match the module it is importing from).
One can create a module that contains only the module number assignments and import the module assignments from the new module.
This means that when a module is replaced, one can replace the previous module, update the module number assignment module, and recompile without having to modify any other modules.
A sample module assignment module would be: ModuleNumbers DEFINITIONS TAGS ::
)} END This would be used in the following import statement:
IMPORTS id mod CMS, id mod AlgInfo FROM ModuleNumbers
Note it will match on the name since no   OID is provided CMSVersion, EncapsulatedContentInfo, CONTENT TYPE FROM CryptographicMessageSyntax 2010
id mod CMS AlgorithmIdentifier{}, SMIME CAPS, ParamOptions FROM AlgorithmInformation 2009
id mod AlgInfo ; 12.
This document itself does not have any security considerations.
The ASN.1 modules keep the same bits on the wire as the modules that they replace.
