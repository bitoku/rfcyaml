- title: __initial_text__
  contents:
  - '           Host Identity Protocol (HIP) Rendezvous Extension

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines a rendezvous extension for the Host Identity\n\
    \   Protocol (HIP).  The rendezvous extension extends HIP and the HIP\n   Registration\
    \ Extension for initiating communication between HIP nodes\n   via HIP rendezvous\
    \ servers.  Rendezvous servers improve reachability\n   and operation when HIP\
    \ nodes are multihomed or mobile.  This document\n   obsoletes RFC 5204.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8004.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Overview of Rendezvous Server Operation . . . . . . . .\
    \ . . .   3\n     3.1.  Diagram Notation  . . . . . . . . . . . . . . . . . .\
    \ . .   5\n     3.2.  Rendezvous Client Registration  . . . . . . . . . . . .\
    \ .   5\n     3.3.  Relaying the Base Exchange  . . . . . . . . . . . . . . .\
    \   6\n   4.  Rendezvous Server Extensions  . . . . . . . . . . . . . . . .  \
    \ 7\n     4.1.  RENDEZVOUS Registration Type  . . . . . . . . . . . . . .   7\n\
    \     4.2.  Parameter Formats and Processing  . . . . . . . . . . . .   7\n  \
    \     4.2.1.  RVS_HMAC Parameter  . . . . . . . . . . . . . . . . .   7\n    \
    \   4.2.2.  FROM Parameter  . . . . . . . . . . . . . . . . . . .   8\n      \
    \ 4.2.3.  VIA_RVS Parameter . . . . . . . . . . . . . . . . . .   9\n     4.3.\
    \  Modified Packets Processing . . . . . . . . . . . . . . .   9\n       4.3.1.\
    \  Processing Outgoing I1 Packets  . . . . . . . . . . .   9\n       4.3.2.  Processing\
    \ Incoming I1 Packets  . . . . . . . . . . .  10\n       4.3.3.  Processing Outgoing\
    \ R1 Packets  . . . . . . . . . . .  10\n       4.3.4.  Processing Incoming R1\
    \ Packets  . . . . . . . . . . .  10\n   5.  Security Considerations . . . . .\
    \ . . . . . . . . . . . . . .  11\n   6.  IANA Considerations . . . . . . . .\
    \ . . . . . . . . . . . . .  11\n   7.  References  . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .  12\n     7.1.  Normative References  . . . . . . .\
    \ . . . . . . . . . . .  12\n     7.2.  Informative References  . . . . . . .\
    \ . . . . . . . . . .  13\n   Appendix A.  Changes from RFC 5204  . . . . . .\
    \ . . . . . . . . .  14\n   Acknowledgments . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .  14\n   Authors' Addresses  . . . . . . . . . . . . . . . .\
    \ . . . . . . .  14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   \"The Host Identity Protocol (HIP) Architecture\" [HIP-ARCH]\
    \ introduces\n   the rendezvous mechanism to help a HIP node to contact a frequently\n\
    \   moving HIP node.  The rendezvous mechanism involves a third party,\n   the\
    \ rendezvous server (RVS), which serves as an initial contact point\n   (\"rendezvous\
    \ point\") for its clients.  The clients of an RVS are HIP\n   nodes that use\
    \ the HIP Registration Extension [RFC8003] to register\n   their HIT->IP address\
    \ mappings with the RVS.  After this\n   registration, other HIP nodes can initiate\
    \ a base exchange using the\n   IP address of the RVS instead of the current IP\
    \ address of the node\n   they attempt to contact.  Essentially, the clients of\
    \ an RVS become\n   reachable at the RVS's IP address.  Peers can initiate a HIP\
    \ base\n   exchange with the IP address of the RVS, which will relay this\n  \
    \ initial communication such that the base exchange may successfully\n   complete.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This section defines terms used throughout the remainder\
    \ of this\n   specification.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n   In addition to the terminology defined in the HIP\
    \ specification\n   [RFC7401] and the HIP Registration Extension [RFC8003], this\
    \ document\n   defines and uses the following terms:\n   Rendezvous Service\n\
    \      A HIP service provided by an RVS to its rendezvous clients.  The\n    \
    \  RVS offers to relay some of the arriving base exchange packets\n      between\
    \ the Initiator and Responder.\n   Rendezvous Server (RVS)\n      A HIP registrar\
    \ providing rendezvous service.\n   Rendezvous Client\n      A HIP requester that\
    \ has registered for rendezvous service at an\n      RVS.\n   Rendezvous Registration\n\
    \      A HIP registration for rendezvous service, established between an\n   \
    \   RVS and a rendezvous client.\n"
- title: 3.  Overview of Rendezvous Server Operation
  contents:
  - "3.  Overview of Rendezvous Server Operation\n   Figure 1 shows a simple HIP base\
    \ exchange without an RVS, in which\n   the Initiator initiates the exchange directly\
    \ with the Responder by\n   sending an I1 packet to the Responder's IP address,\
    \ as per the HIP\n   specification [RFC7401].\n                      +-----+ \
    \               +-----+\n                      |     |-------I1------>|     |\n\
    \                      |  I  |<------R1-------|  R  |\n                      |\
    \     |-------I2------>|     |\n                      |     |<------R2-------|\
    \     |\n                      +-----+                +-----+\n          Figure\
    \ 1: HIP Base Exchange without a Rendezvous Server\n   The End-Host Mobility and\
    \ Multihoming with the HIP specification\n   [HIP-HOST-MOB] allows a HIP node\
    \ to notify its peers about changes in\n   its set of IP addresses.  This specification\
    \ presumes initial\n   reachability of the two nodes with respect to each other.\n\
    \   However, such a HIP node MAY also want to be reachable to other\n   future\
    \ correspondent peers that are unaware of its location change.\n   The HIP Architecture\
    \ [HIP-ARCH] introduces RVSs with whom a HIP node\n   MAY register its Host Identity\
    \ Tags (HITs) and current IP addresses.\n   An RVS relays HIP packets arriving\
    \ for these HITs to the node's\n   registered IP addresses.  When a HIP node has\
    \ registered with an RVS,\n   it SHOULD record the IP address of its RVS in its\
    \ DNS record, using\n   the HIP DNS resource record type defined in the HIP DNS\
    \ Extension\n   [RFC8005].\n                                  +-----+\n      \
    \                   +--I1--->| RVS |---I1--+\n                         |     \
    \   +-----+       |\n                         |                      v\n     \
    \                 +-----+                +-----+\n                      |    \
    \ |<------R1-------|     |\n                      |  I  |-------I2------>|  R\
    \  |\n                      |     |<------R2-------|     |\n                 \
    \     +-----+                +-----+\n           Figure 2: HIP Base Exchange with\
    \ a Rendezvous Server\n   Figure 2 shows a HIP base exchange involving an RVS.\
    \  It is assumed\n   that HIP node R previously registered its HITs and current\
    \ IP\n   addresses with the RVS, using the HIP Registration Extension\n   [RFC8003].\
    \  When the Initiator I tries to establish contact with the\n   Responder R, it\
    \ must send the I1 of the base exchange either to one\n   of R's IP addresses\
    \ (if known via DNS or other means) or to one of\n   R's RVSs.  Here, I obtains\
    \ the IP address of R's RVS from R's DNS\n   record and then sends the I1 packet\
    \ of the HIP base exchange to RVS.\n   RVS, noticing that the HIT contained in\
    \ the arriving I1 packet is not\n   one of its own, MUST check its current registrations\
    \ to determine if\n   it needs to relay the packets.  Here, it determines that\
    \ the HIT\n   belongs to R and then relays the I1 packet to the registered IP\n\
    \   address.  R then completes the base exchange without further\n   assistance\
    \ from RVS by sending an R1 directly to the I's IP address,\n   as obtained from\
    \ the I1 packet.  In this specification, the client of\n   the RVS is always the\
    \ Responder.  However, there might be reasons\n   (such as NAT and firewall traversal)\
    \ to allow a client to initiate a\n   base exchange through its own RVS.  This\
    \ specification does not\n   address such scenarios, which should be specified\
    \ in other documents.\n"
- title: 3.1.  Diagram Notation
  contents:
  - "3.1.  Diagram Notation\n   Notation       Significance\n   --------       ------------\n\
    \   I, R           I and R are the respective source and destination IP\n    \
    \              addresses in the IP header.\n   HIT-I, HIT-R   HIT-I and HIT-R\
    \ are the Initiator's and the\n                  Responder's HITs in the packet,\
    \ respectively.\n   REG_REQ        A REG_REQUEST parameter is present in the HIP\
    \ header.\n   REG_RES        A REG_RESPONSE parameter is present in the HIP header.\n\
    \   FROM:I         A FROM parameter containing the IP address I is\n         \
    \         present in the HIP header.\n   RVS_HMAC       An RVS_HMAC parameter\
    \ containing an Hashed Message\n                  Authentication Code (HMAC) keyed\
    \ with the appropriate\n                  registration key is present in the HIP\
    \ header.\n   VIA:RVS        A VIA_RVS parameter containing the IP address RVS\
    \ of\n                  a rendezvous server is present in the HIP header.\n"
- title: 3.2.  Rendezvous Client Registration
  contents:
  - "3.2.  Rendezvous Client Registration\n   Before an RVS starts to relay HIP packets\
    \ to a rendezvous client, the\n   rendezvous client needs to register with the\
    \ RVS to receive\n   rendezvous service by using the HIP Registration Extension\
    \ [RFC8003]\n   as illustrated in the following schema:\n                +-----+\
    \                            +-----+\n                |     |            I1  \
    \            |     |\n                |     |--------------------------->|   \
    \  |\n                |     |<---------------------------|     |\n           \
    \     |  I  |         R1(REG_INFO)       | RVS |\n                |     |    \
    \     I2(REG_REQ)        |     |\n                |     |--------------------------->|\
    \     |\n                |     |<---------------------------|     |\n        \
    \        |     |         R2(REG_RES)        |     |\n                +-----+ \
    \                           +-----+\n          Rendezvous Client Registering with\
    \ a Rendezvous Server\n"
- title: 3.3.  Relaying the Base Exchange
  contents:
  - "3.3.  Relaying the Base Exchange\n   If a HIP node and one of its RVSs have a\
    \ rendezvous registration, the\n   RVSs relay inbound I1 packets (that contain\
    \ one of the client's HITs)\n   by rewriting the IP header.  They replace the\
    \ destination IP address\n   of the I1 packet with one of the IP addresses of\
    \ the owner of the\n   HIT, i.e., the rendezvous client.  They MUST also recompute\
    \ the IP\n   checksum accordingly.\n   Because of ingress filtering on the path\
    \ from the RVS to the client\n   [RFC2827] [RFC3013], a HIP RVS SHOULD replace\
    \ the source IP address,\n   i.e., the IP address of I, with one of its own IP\
    \ addresses.  The\n   replacement IP address SHOULD be chosen according to relevant\
    \ IPv4\n   and IPv6 specifications [RFC1122] [RFC6724].  Because this\n   replacement\
    \ conceals the Initiator's IP address, the RVS MUST append\n   a FROM parameter\
    \ containing the original source IP address of the\n   packet.  This FROM parameter\
    \ MUST be integrity protected by an\n   RVS_HMAC keyed with the corresponding\
    \ rendezvous registration\n   integrity key [RFC8003].\n                     \
    \                        I1(RVS, R, HIT-I, HIT-R\n       I1(I, RVS, HIT-I, HIT-R)\
    \ +---------+     FROM:I, RVS_HMAC)\n       +----------------------->|       \
    \  |--------------------+\n       |                        |   RVS   |       \
    \             |\n       |                        |         |                 \
    \   |\n       |                        +---------+                    |\n    \
    \   |                                                       V\n      +-----+ \
    \       R1(R, I, HIT-R, HIT-I, VIA:RVS)       +-----+\n      |     |<---------------------------------------------|\
    \     |\n      |     |                                              |     |\n\
    \      |  I  |            I2(I, R, HIT-I, HIT-R)            |  R  |\n      | \
    \    |--------------------------------------------->|     |\n      |     |<---------------------------------------------|\
    \     |\n      +-----+             R2(R, I, HIT-R, HIT-I)           +-----+\n\
    \                 Rendezvous Server Rewriting IP Addresses\n   This modification\
    \ of HIP packets at an RVS can be problematic because\n   HIP uses integrity checks.\
    \  Because the I1 does not include HMAC or\n   SIGNATURE parameters, these two\
    \ end-to-end integrity checks are\n   unaffected by the operation of RVSs.\n \
    \  The RVS SHOULD verify the checksum field of an I1 packet before doing\n   any\
    \ modifications.  After modification, it MUST recompute the\n   checksum field\
    \ using the updated HIP header, which possibly included\n   new FROM and RVS_HMAC\
    \ parameters, and a pseudo-header containing the\n   updated source and destination\
    \ IP addresses.  This enables the\n   Responder to validate the checksum of the\
    \ I1 packet \"as is\", without\n   having to parse any FROM parameters.\n"
- title: 4.  Rendezvous Server Extensions
  contents:
  - "4.  Rendezvous Server Extensions\n   This section describes extensions to the\
    \ HIP Registration Extension\n   [RFC8003], allowing a HIP node to register with\
    \ an RVS for rendezvous\n   service and to notify the RVS aware of changes to\
    \ its current\n   location.  It also describes an extension to the HIP specification\n\
    \   [RFC7401] itself, allowing establishment of HIP associations via one\n   or\
    \ more HIP RVSs.\n"
- title: 4.1.  RENDEZVOUS Registration Type
  contents:
  - "4.1.  RENDEZVOUS Registration Type\n   This specification defines an additional\
    \ registration for the HIP\n   Registration Extension [RFC8003] that allows registering\
    \ with an RVS\n   for rendezvous service.\n   Number   Registration Type\n   ------\
    \   -----------------\n   1        RENDEZVOUS\n"
- title: 4.2.  Parameter Formats and Processing
  contents:
  - '4.2.  Parameter Formats and Processing

    '
- title: 4.2.1.  RVS_HMAC Parameter
  contents:
  - "4.2.1.  RVS_HMAC Parameter\n   The RVS_HMAC is a non-critical parameter whose\
    \ only difference with\n   the HMAC parameter defined in the HIP specification\
    \ [RFC7401] is its\n   \"type\" code.  This change causes it to be located after\
    \ the FROM\n   parameter (as opposed to the HMAC):\n   Type        65500\n   Length\
    \      Variable.  Length in octets, excluding Type, Length, and\n            \
    \   Padding.\n   HMAC        HMAC computed over the HIP packet, excluding the\n\
    \               RVS_HMAC parameter and any following parameters.  The\n      \
    \         HMAC is keyed with the appropriate HIP integrity key\n             \
    \  (HIP-lg or HIP-gl) established when rendezvous\n               registration\
    \ happened.  The HIP \"checksum\" field MUST be\n               set to zero, and\
    \ the HIP header length in the HIP common\n               header MUST be calculated\
    \ not to cover any excluded\n               parameter when the HMAC is calculated.\
    \  The size of the\n               HMAC is the natural size of the hash computation\n\
    \               output depending on the used hash function.\n   To allow a rendezvous\
    \ client and its RVS to verify the integrity of\n   packets flowing between them,\
    \ both SHOULD protect packets with an\n   added RVS_HMAC parameter keyed with\
    \ the HIP-lg or HIP-gl integrity\n   key established while registration occurred.\
    \  A valid RVS_HMAC SHOULD\n   be present on every packet flowing between a client\
    \ and a server and\n   MUST be present when a FROM parameter is processed.\n"
- title: 4.2.2.  FROM Parameter
  contents:
  - "4.2.2.  FROM Parameter\n     0                   1                   2      \
    \             3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |             Type              |             Length            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    |\
    \                             Address                           |\n    |     \
    \                                                          |\n    |          \
    \                                                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    Type        65498\n    Length      16\n    Address     An IPv6 address or\
    \ an IPv4-in-IPv6 format IPv4 address.\n   An RVS MUST add a FROM parameter containing\
    \ the original source IP\n   address of a HIP packet whenever the source IP address\
    \ in the IP\n   header is rewritten.  If one or more FROM parameters are already\n\
    \   present, the new FROM parameter MUST be appended after the existing\n   ones.\n\
    \   Whenever an RVS inserts a FROM parameter, it MUST insert an RVS_HMAC\n   protecting\
    \ the packet integrity, especially the IP address included\n   in the FROM parameter.\n"
- title: 4.2.3.  VIA_RVS Parameter
  contents:
  - "4.2.3.  VIA_RVS Parameter\n     0                   1                   2   \
    \                3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |             Type              |             Length            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    |\
    \                            Address                            |\n    |     \
    \                                                          |\n    |          \
    \                                                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    .                               .                               .\n    .\
    \                               .                               .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    |\
    \                            Address                            |\n    |     \
    \                                                          |\n    |          \
    \                                                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    Type        65502\n    Length      Variable\n    Address     An IPv6 address\
    \ or an IPv4-in-IPv6 format IPv4 address.\n   After the Responder receives a relayed\
    \ I1 packet, it can begin to\n   send HIP packets addressed to the Initiator's\
    \ IP address, without\n   further assistance from an RVS.  For debugging purposes,\
    \ it MUST\n   append a newly created VIA_RVS parameter at the end of the R1 packet\n\
    \   that contains the IP address of the RVS that relayed the I1 packet.\n   Including\
    \ more than one IP address in the VIA_RVS parameter is\n   outside the scope of\
    \ this specification.  The main goal of using the\n   VIA_RVS parameter is to\
    \ allow operators to diagnose possible issues\n   encountered while establishing\
    \ a HIP association via an RVS.\n"
- title: 4.3.  Modified Packets Processing
  contents:
  - "4.3.  Modified Packets Processing\n   The following subsections describe the\
    \ differences of the processing\n   of I1 and R1 while an RVS is involved in the\
    \ base exchange.\n"
- title: 4.3.1.  Processing Outgoing I1 Packets
  contents:
  - "4.3.1.  Processing Outgoing I1 Packets\n   An Initiator SHOULD NOT send an opportunistic\
    \ I1 with a NULL\n   destination HIT to an IP address that is known to be a rendezvous\n\
    \   server address, unless it wants to establish a HIP association with\n   the\
    \ RVS itself and does not know its HIT.\n   When an RVS rewrites the source IP\
    \ address of an I1 packet due to\n   egress filtering, it MUST add a FROM parameter\
    \ to the I1 that\n   contains the Initiator's source IP address.  This FROM parameter\
    \ MUST\n   be protected by an RVS_HMAC keyed with the integrity key established\n\
    \   at rendezvous registration.\n"
- title: 4.3.2.  Processing Incoming I1 Packets
  contents:
  - "4.3.2.  Processing Incoming I1 Packets\n   When an RVS receives an I1 whose destination\
    \ HIT is not its own, it\n   consults its registration database to find a registration\
    \ for the\n   rendezvous service established by the HIT owner.  If it finds an\n\
    \   appropriate registration, it relays the packet to the registered IP\n   address.\
    \  If it does not find an appropriate registration, it drops\n   the packet.\n\
    \   An RVS SHOULD interpret any incoming opportunistic I1 (i.e., an I1\n   with\
    \ a NULL destination HIT) as an I1 addressed to itself and SHOULD\n   NOT attempt\
    \ to relay it to one of its clients.\n   When a rendezvous client receives an\
    \ I1, it MUST validate any present\n   RVS_HMAC parameter.  If the RVS_HMAC cannot\
    \ be verified, the packet\n   SHOULD be dropped.  If the RVS_HMAC cannot be verified\
    \ and a FROM\n   parameter is present, the packet MUST be dropped.\n   A rendezvous\
    \ client acting as Responder SHOULD drop opportunistic I1s\n   that include a\
    \ FROM parameter, because this indicates that the I1 has\n   been relayed.\n"
- title: 4.3.3.  Processing Outgoing R1 Packets
  contents:
  - "4.3.3.  Processing Outgoing R1 Packets\n   When a Responder replies to an I1\
    \ relayed via an RVS, it MUST append\n   to the regular R1 header a VIA_RVS parameter\
    \ containing the IP\n   addresses of the traversed RVSs.\n"
- title: 4.3.4.  Processing Incoming R1 Packets
  contents:
  - "4.3.4.  Processing Incoming R1 Packets\n   The HIP specification [RFC7401] mandates\
    \ that a system receiving an\n   R1 MUST first check to see if it has sent an\
    \ I1 to the originator of\n   the R1 (i.e., the system is in state I1-SENT). \
    \ When the R1 is\n   replying to a relayed I1, this check SHOULD be based on HITs\
    \ only.\n   In case the IP addresses are also checked, then the source IP address\n\
    \   MUST be checked against the IP address included in the VIA_RVS\n   parameter.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This section discusses the known threats introduced\
    \ by these HIP\n   extensions and the implications on the overall security of\
    \ HIP.  In\n   particular, it argues that the extensions described in this document\n\
    \   do not introduce additional threats to HIP.\n   It is difficult to encompass\
    \ the whole scope of threats introduced by\n   RVSs because their presence has\
    \ implications both at the IP and HIP\n   layers.  In particular, these extensions\
    \ might allow for redirection,\n   amplification, and reflection attacks at the\
    \ IP layer, as well as\n   attacks on the HIP layer itself, for example, man-in-the-middle\n\
    \   attacks against the HIP base exchange.\n   If an Initiator has a priori knowledge\
    \ of the Responder's host\n   identity when it first contacts the Responder via\
    \ an RVS, it has a\n   means to verify the signatures in the HIP base exchange,\
    \ which\n   protects against man-in-the-middle attacks.\n   If an Initiator does\
    \ not have a priori knowledge of the Responder's\n   host identity (so-called\
    \ \"opportunistic Initiators\"), it is almost\n   impossible to defend the HIP\
    \ exchange against these attacks, because\n   the public keys exchanged cannot\
    \ be authenticated.  The only approach\n   would be to mitigate hijacking threats\
    \ on HIP state by requiring an\n   R1 answering an opportunistic I1 to come from\
    \ the same IP address\n   that originally sent the I1.  This procedure retains\
    \ a level of\n   security that is equivalent to what exists in the Internet today.\n\
    \   However, for reasons of simplicity, this specification does not allow\n  \
    \ the establishment of a HIP association via an RVS in an opportunistic\n   manner.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   [RFC5204], obsoleted by this document, made the following\
    \ definitions\n   and reservations in the \"Parameter Types\" subregistry under\
    \ \"Host\n   Identity Protocol (HIP) Parameters\":\n   Value   Parameter Type\
    \  Length\n   -----   --------------  --------\n   65498   FROM            16\n\
    \   65500   RVS_HMAC        variable\n   65502   VIA_RVS         variable\n  \
    \ In the \"Parameter Types\" subregistry under \"Host Identity Protocol\n   (HIP)\
    \ Parameters\", references to [RFC5204] have been replaced by\n   references to\
    \ this document.\n   [RFC5204], obsoleted by this document, made the following\
    \ definition\n   and reservation in the \"Registration Types\" subregistry under\
    \ \"Host\n   Identity Protocol (HIP) Parameters\":\n   Value   Registration Type\n\
    \   -----   -----------------\n   1       RENDEZVOUS\n   In the \"Registration\
    \ Types\" subregistry under \"Host Identity Protocol\n   (HIP) Parameters\", references\
    \ to [RFC5204] have been replaced by\n   references to this document.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1122]  Braden, R., Ed., \"Requirements for\
    \ Internet Hosts -\n              Communication Layers\", STD 3, RFC 1122,\n \
    \             DOI 10.17487/RFC1122, October 1989,\n              <http://www.rfc-editor.org/info/rfc1122>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC6724]\
    \  Thaler, D., Ed., Draves, R., Matsumoto, A., and T. Chown,\n              \"\
    Default Address Selection for Internet Protocol Version 6\n              (IPv6)\"\
    , RFC 6724, DOI 10.17487/RFC6724, September 2012,\n              <http://www.rfc-editor.org/info/rfc6724>.\n\
    \   [RFC7401]  Moskowitz, R., Ed., Heer, T., Jokela, P., and T.\n            \
    \  Henderson, \"Host Identity Protocol Version 2 (HIPv2)\",\n              RFC\
    \ 7401, DOI 10.17487/RFC7401, April 2015,\n              <http://www.rfc-editor.org/info/rfc7401>.\n\
    \   [RFC8003]  Laganier, J. and L. Eggert, \"Host Identity Protocol (HIP)\n  \
    \            Registration Extension\", RFC 8003, DOI 10.17487/RFC8003,\n     \
    \         October 2016, <http://www.rfc-editor.org/info/rfc8003>.\n   [RFC8005]\
    \  Laganier, J., \"Host Identity Protocol (HIP) Domain Name\n              System\
    \ (DNS) Extension\", RFC 8005, DOI 10.17487/RFC8005,\n              October 2016,\
    \ <http://www.rfc-editor.org/info/rfc8005>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [HIP-ARCH] Moskowitz, R. and M. Komu, \"Host\
    \ Identity Protocol\n              Architecture\", Work in Progress, draft-ietf-hip-rfc4423-\n\
    \              bis-14, June 2016.\n   [HIP-HOST-MOB]\n              Henderson,\
    \ T., Vogt, C., and J. Arkko, \"Host Mobility with\n              the Host Identity\
    \ Protocol\", Work in Progress, draft-ietf-\n              hip-rfc5206-bis-14,\
    \ October 2016.\n   [RFC2827]  Ferguson, P. and D. Senie, \"Network Ingress Filtering:\n\
    \              Defeating Denial of Service Attacks which employ IP Source\n  \
    \            Address Spoofing\", BCP 38, RFC 2827, DOI 10.17487/RFC2827,\n   \
    \           May 2000, <http://www.rfc-editor.org/info/rfc2827>.\n   [RFC3013]\
    \  Killalea, T., \"Recommended Internet Service Provider\n              Security\
    \ Services and Procedures\", BCP 46, RFC 3013,\n              DOI 10.17487/RFC3013,\
    \ November 2000,\n              <http://www.rfc-editor.org/info/rfc3013>.\n  \
    \ [RFC5204]  Laganier, J. and L. Eggert, \"Host Identity Protocol (HIP)\n    \
    \          Rendezvous Extension\", RFC 5204, DOI 10.17487/RFC5204,\n         \
    \     April 2008, <http://www.rfc-editor.org/info/rfc5204>.\n"
- title: Appendix A.  Changes from RFC 5204
  contents:
  - "Appendix A.  Changes from RFC 5204\n   o  Updated HIP references to revised HIP\
    \ specifications.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The following people have provided thoughtful and helpful\
    \ discussions\n   and/or suggestions that have improved this document: Marcus\
    \ Brunner,\n   Tom Henderson, Miika Komu, Mika Kousa, Pekka Nikander, Juergen\n\
    \   Quittek, Justino Santos, Simon Schuetz, Tim Shepard, Kristian Slavov,\n  \
    \ and Martin Stiemerling.\n   Lars Eggert has received funding from the European\
    \ Union's Horizon\n   2020 research and innovation program 2014-2018 under grant\
    \ agreement\n   No. 644866.  This document reflects only the authors' views, and\
    \ the\n   European Commission is not responsible for any use that may be made\n\
    \   of the information it contains.\n   Thanks to Joel M. Halpern for performing\
    \ the Gen-ART review of this\n   document as part of the publication process.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Julien Laganier\n   Luminate Wireless, Inc.\n   Cupertino,\
    \ CA\n   United States of America\n   Email: julien.ietf@gmail.com\n   Lars Eggert\n\
    \   NetApp\n   Sonnenallee 1\n   Kirchheim  85551\n   Germany\n   Phone: +49 151\
    \ 12055791\n   Email: lars@netapp.com\n   URI:   http://eggert.org\n"
