Abstract This document presents the China Education and Research Network (CERNET)'s IVI translation design and deployment for the IPv4/IPv6 coexistence and transition.
The IVI is a prefix specific and stateless address mapping mechanism for "an IPv6 network to the IPv4 Internet" and "the IPv4 Internet to an IPv6 network" scenarios.
In the IVI design, subsets of the ISP's IPv4 addresses are embedded in the ISP's IPv6 addresses, and the hosts using these IPv6 addresses can therefore communicate with the global IPv6 Internet directly and can communicate with the global IPv4 Internet via stateless translators.
The communications can either be IPv6 initiated or IPv4 initiated.
The IVI mechanism supports the end to end address transparency and incremental deployment.
The IVI is an early design deployed in the CERNET as a reference for the IETF standard documents on IPv4/IPv6 stateless translation.
This document presents the CERNET IVI translation design and deployment for the IPv4/IPv6 coexistence and transition.
In Roman numerals, the "IV" stands for 4, and "VI" stands for 6, so
"IVI" stands for the IPv4/IPv6 translation.
The experiences with IPv6 deployment in the past 10 years indicate that the ability to communicate between IPv4 and IPv6 address families would be beneficial.
However, the current transition methods do not fully support this requirement [RFC4213].
For example, dual stack hosts can communicate with both the IPv4 and IPv6 hosts, but single stack hosts can only communicate with hosts in the same address family.
While the dual stack approach continues to work in many cases even in the face of IPv4 address depletion [COUNT], there are situations where it would be desirable to communicate with a device in another address family.
Tunneling based architectures can link the IPv6 islands across IPv4 networks, but they cannot provide communication between the two different address families [RFC3056]
Translation can relay communications for hosts located in IPv4 and IPv6 networks, but the current implementation of this kind of architecture is not scalable, and it cannot maintain end to end address transparency
Analysis of IPv4 IPv6 Translation Mechanisms
Since IPv4 and IPv6 are different protocols with different addressing structures, a translation mechanism is necessary for communication between endpoints using different address families.
There are several ways to implement the translation.
One is the Stateless IP/ ICMP Translation Algorithm (SIIT) [RFC2765], which provides a mechanism for translation between IPv4 and IPv6 packet headers (including ICMP headers) without requiring any per connection state.
However, SIIT does not specify the address assignment and routing scheme [RFC2766].
For example, SIIT uses IPv4 mapped IPv6 addresses [::
ffff:ipv4 addr/96] and IPv4 compatible IPv6 addresses [::ipv4 address/96] for the address mapping, but these addresses violate the aggregation principle of IPv6 routing [RFC4291].
The other translation mechanism is Network Address Translation Protocol Translation (NAT PT), which has serious technical and operational difficulties; the IETF has reclassified it from Proposed Standard to Historic status [RFC4966].
In order to solve the technical difficulties in NAT PT, the issues and the possible workarounds are: 1.
NAT PT disrupts all protocols that embed IP addresses (
and/or ports) in packet payloads.
There is little that can be done about this, other than using Application Layer Gateways (ALGs) or preferring protocols that transport DNS names instead of addresses.
Loss of end to end address transparency may occur.
End to end address transparency implies a global address space, the ability to pass packets unaltered throughout the network, and the ability to use source and destination addresses as unique labels [RFC2775].
A reversible, algorithmic mapping can restore some of this transparency.
However, it is still not possible to ensure that all nodes in the existing Internet support such reversible mappings.
The states maintained in the translator cause scalability, multihoming, and load sharing problems.
Hence, a stateless translation scheme is preferred.
Loss of information due to incompatible semantics between IPv4 and IPv6 versions of headers and protocols may occur.
A partial remedy to this is the proper attention to the details of the protocol translation, for example, the error codes mapping between ICMP and ICMPv6.
However, some semantic differences remain.
The DNS is tightly coupled with the translator and lack of address mapping persistence discussed in Section 3.3 of [RFC4966].
Hence, the DNS should be decoupled from the translator.
Support for referrals is difficult in NAT PT, given that translated addresses may leak outside the network where these addresses have a meaning.
Stateless translation, algorithmic address mappings, and the decoupling of DNS from the translation process can help the handling of referrals.
Nevertheless, it is still possible that an address based referral is passed to someone who cannot employ it.
For instance, an IPv6 only node may pass a referral based on an IPv6 address to a node that only understands IPv4. 1.2.
The China Education and Research Network has two backbones using different address families.
The CERNET is IPv4 only [CERNET] and
CERNET2 is IPv6 only [CNGI CERNET2], which fit in "an IPv6 network to the IPv4 Internet" and "the IPv4 Internet to an IPv6 network" scenarios in the IETF BEHAVE working group definition [BEHAVE]
In order to make CERNET2 communicate with the IPv4 Internet, we designed the IVI mechanism and installed IVI translators between the CERNET and CERNET2.
The requirements of the IVI mechanism are: 1.
It should support both IPv6 initiated and IPv4 initiated communications for the IPv6 clients/servers in "an IPv6 network".
It should follow current IPv4 and IPv6 routing practice without increasing the global routing table size in both address families.
It should be able to be deployed incrementally.
It should be able to use IPv4 addresses effectively due to the IPv4 address depletion problem.
It should be stateless to achieve scalability.
The DNS function should be decoupled from the translator.
The specific IVI design presented in this document can satisfy the above requirements, with the following notes: 1.
It restricts the IPv6 hosts to use a subset of the addresses inside the ISP's IPv6 block.
Therefore, IPv6 autoconfiguration cannot be used for these IPv6 hosts.
Manual configuration or autoconfiguration via stateful DHCPv6 is required.
It defines a one to one mapping between IPv4 addresses and IPv6 addresses; hence, the IPv4 addresses cannot be used efficiently.
However, the IVI6 addresses can be used both for IPv6 clients and IPv6 servers.
Due to this limitation, we suggest using IVI6 addresses for servers.
An ALG is still required for any applications that embed address(es) in the payload.
Some issues with end to end transparency, address referrals, and incompatible semantics between protocol versions still remain, as discussed above.
The IVI is an early design deployed in the CERNET for the stateless translation.
The IETF standard IPv4 IPv6 stateless and stateful translation mechanisms are defined in [RFC6144],
[RFC6052], [RFC6145], [RFC6146], and [RFC6147].
The following terms and abbreviations are used in this document: ISP(i):  A specific Internet service provider "i".
The global IPv4 address space.
A subset of IVIG4 allocated to ISP(i).
A subset of IPS4(i); the addresses in this set will be mapped to IPv6 via the IVI mapping mechanism and used by IPv6 hosts of ISP(i).
The global IPv6 address space.
A subset of IPG6 allocated to ISP(i).
IVIG6(i):  A subset of IPS6(i), and an image of IVIG4 in the IPv6 address family via the IVI mapping mechanism.
It is defined as the IPv4 converted address in [RFC6144].
A subset of IVIG6(i) and an image of IVI4(i) in the IPv6 address family via the IVI mapping mechanism.
It is defined as the IPv4 translatable address in [RFC6144].
The mapping and translation gateway between IPv4 and IPv6 based on the IVI mechanism.
Providing the IVI Domain Name System (DNS).
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL", when they appear in this document, are to be interpreted as described in [RFC2119].
The IVI is a prefix specific and stateless address mapping scheme that can be carried out by individual ISPs.
In the IVI design, subsets of the ISP's IPv4 addresses are embedded in the ISP's IPv6 addresses, and the hosts using these IPv6 addresses can therefore communicate with the global IPv6 Internet directly and can communicate with the global IPv4 Internet via stateless translators.
The communications can either be IPv6 initiated or IPv4 initiated.
The IVI mapping and translation mechanism is implemented in an IVI translator that connects between "an IPv6 network" and the IPv4 Internet via the ISP's IPv4 network, as shown in the following figure.
The Scenarios: "An IPv6 Network to the IPv4 Internet" and "the IPv4 Internet to an IPv6 Network"
In order to perform the translation function between IPv4 and IPv6 addresses, the translator needs to represent the IPv4 addresses in IPv6 and the IPv6 addresses in IPv4.
To represent the IPv4 addresses in IPv6, a unique, prefix specific, and stateless mapping scheme is defined between IPv4 addresses and subsets of IPv6 addresses, so each provider independent IPv6 address block (usually a /32) will have a small portion of IPv6 addresses (for example, /40 defined by PREFIX), which is the image of the totality of the global IPv4 addresses, as shown in the following figure.
The SUFFIX is all zeros.
: Representing the IPv4 Addresses in IPv6 To represent the IPv6 addresses in IPv4, each provider can borrow a portion of its IPv4 addresses and map them into IPv6 based on the above mapping rule.
These special IPv6 addresses will be physically used by IPv6 hosts.
The original IPv4 form of the borrowed addresses is the image of these special IPv6 addresses, and it can be accessed by the IPv4 Internet, as shown in the following figure.
The SUFFIX can either be all zeros, or some other value for future extensions.
Representing the IPv6 Addresses in IPv4 3.1.
The IVI address format is defined based on an individual ISP's IPv6 prefix, as shown in the following figure   0
IVI Address Mapping where bit 0 to bit 31 are the prefix of ISP(i)'s /32
(e.g., using document IPv6 address IPS6 2001:db8::/32) in the CERNET implementation, bit 32 to bit 39 are all ones as the identifier of the IVI addresses, and bit 40
to bit 71 are embedded global IPv4 space (IVIG4), presented in hexadecimal format (e.g., 2001:
Note that based on the IVI mapping mechanism, an IPv4 /24 is mapped to an IPv6 /64, and an IPv4 /32 is mapped to an IPv6 /72.
The IETF standard for the address format is defined in [RFC6052].
The IPv6 Internet Figure 5:
IVI Xlate is a special dual stack router, with two interfaces, one to the IPv4 network and the other to the IPv6 network (it is also possible to have a single interface configured with both IPv4 and IPv6 addresses).
IVI Xlate can support dynamic routing protocols in IPv4 and IPv6 address families.
In the above configuration, the static routing configuration can be used.
Router R1 has an IPv4 route for IVI4(i)/k (k is the prefix length of IVI4(i)) with the next hop equal to 192.0.2.1, and this route is distributed to the Internet with proper aggregation.
Router R2 has an IPv6 route for IVIG6(i)/40 with the next hop equal to 2001:db8::1, and this route is distributed to the IPv6 Internet with proper aggregation.
The IVI translator has an IPv6 route for IVI6(i)/(40 k) with the next hop equal to 2001:db8::2.
The IVI translator also has an IPv4 default route 0.0.0.0/0 with the next hop equal to 192.0.2.2.
Note that the routes described above can be learned/inserted by dynamic routing protocols (IGP or BGP) in the IVI translator peering with R1 and R2.
Since both IVI4(i) and IVI6(i) are aggregated to IPS4(i) and IPS6(i) in ISP(i)'s border routers, respectively, they will not affect the global IPv4 and IPv6 routing tables [RFC4632].
Since the IVI translation is stateless, it can support multihoming when the same prefix is used for multiple translators.
Since the IVI translation can be implemented independently in each ISP's network, it can be incrementally deployed in the global Internet.
Network Layer Header Translation IPv4
[RFC0791] and IPv6 [RFC2460] are different protocols with different network layer header formats; the translation of the IPv4 and IPv6 headers MUST be performed according to SIIT [RFC2765], except for the source and destination addresses in the header, as shown in the following figures.
Destination Address    IVI address mapping
Figure 6: IPv4 to IPv6
The IETF standard for IP/ICMP translation is defined in [RFC6145], which contains updated technical specifications.
Since the TCP and UDP headers
[RFC0768] consist of checksums that include
the IP header, the recalculation and updating of the transport layer headers MUST be performed.
Note that SIIT does not recalculate the transport layer checksum, since checksum  neutral IPv6 addresses are used in SIIT [RFC2765].
The IETF standard for transport layer header translation is defined in [RFC6145], which contains updated technical specifications.
3.5.  Fragmentation and MTU Handling
When the packet is translated by the IVI translator, due to the different sizes of the IPv4 and IPv6 headers, the IVI6 packets will be at least 20 bytes larger than the IVI4 packets, which may exceed the MTU of the next link in the IPv6 network.
Therefore, the MTU handling and translation between IPv6 fragmentation headers and the fragmentation field in the IPv4 headers are necessary; this is performed in the IVI translator according to SIIT [RFC2765].
The IETF standard for fragmentation and MTU handling is defined in [RFC6145], which contains updated technical specifications.
ICMP Handling For ICMP message translation between IPv4 and IPv6, IVI follows the ICMP/ICMPv6 message correspondence as defined in SIIT [RFC2765].
Note that the ICMP message may be generated by an intermediate router whose IPv6 address does not belong to IVIG6(i).
Since ICMP translation is important to the path MTU discovery and troubleshooting, the IPv4 representation of the non IVIG6 addresses in the ICMP packets is required.
In the current IVI prototype, a small IPv4 address block is used to identify the non IVIG6 addresses.
This prevents translated ICMP messages from being discarded due to unknown or private IP sources.
The IETF standard for IP/ICMP translation is defined in [RFC6145], which contains updated technical specifications.
Due to the features of 1 to 1 address mapping and stateless operation, IVI can support most of the existing applications, such as HTTP, Secure SHell (SSH), and Telnet.
However, some applications are designed such that IP addresses are used to identify application  layer entities (e.g., FTP).
In these cases, an Application Layer Gateway (ALG) is unavoidable, and it can be integrated into the IVI translator.
The discussion of the use of ALGs is in [RFC6144].
The DNS [RFC1035] service is important for the IVI mechanism.
DNS Configuration for the IVI6(i)
Addresses For providing authoritative DNS service for IVI4(i) and IVI6(i), each host name will have both an A record and a AAAA record pointing to IVI4(i) and IVI6(i), respectively.
Note that the same name always points to a unique host, which is an IVI6(i) host, and it has IVI4(i) representation via the IVI translator.
DNS Service for the IVIG6(i)
Addresses For resolving the IPv6 form of the global IPv4 space (IVIG6(i)), each ISP must provide customized IVI DNS service for the IVI6(i) hosts.
The IVI DNS server MUST be deployed in a dual stack environment.
When the IVI6(i) host queries a AAAA record for an IPv4 only domain name, the IVI DNS will query the AAAA record first.
If the AAAA record does not exist, the IVI DNS will query the A record and map it to IVIG6(i), and return a AAAA record to the IVI6(i) host.
The technical specifications for this process are defined in [RFC6147].
The Advanced IVI Translation Functions 5.1.
The IVI mechanism can support IPv4/IPv6 communication of Protocol Independent Multicast Source Specific Multicast (PIM SSM)
There will be 2^24 group addresses for IPv4 SSM.
The corresponding IPv6 SSM group addresses can be defined as shown in the following figure.
IVI Multicast Group Address Mapping
The source address in IPv6 MUST be IVI6(i) in order to perform Reverse Path Forwarding (RPF) as required by PIM Sparse Mode (PIM SM).
The interoperation of PIM SM for IPv4 and IPv6 address families can either be implemented via an Application Layer Gateway or via static joins based on IGMPv3 and Multicast Listener Discovery Version 2 (MLDv2) in IPv4 and IPv6, respectively.
The IVI6 address has a special format (for example, IVI4 192.0.2.1/32 and IVI6 2001:
db8:ffc0:2:100::/72); therefore, stateless IPv6 address autoconfiguration cannot be used.
However, the IVI6 can be assigned to the IPv6 end system via manual configuration or stateful autoconfiguration via DHCPv6.
For the manual configuration, the host needs to configure the IVI6 address and the corresponding prefix length, as well as the default gateway address and the DNS resolver address.
For the DHCPv6 configuration, the DHCPv6 will assign the IVI6 address and the DNS resolver address to the host.
The router in the subnet should enable router advertisement (RA), since the default gateway is learned from the router.
Since each IPv6 host may have multiple addresses, it is important for the host to use an IVI6(i) address to reach the global IPv4 networks.
The short term workaround is to use IVI6(i) as the default source IPv6 address of the host, defined as the policy table in [RFC3484].
The long term solution requires that the application should be able to select the source addresses for different services.
An implementation of IVI exists for the Linux operating system.
The source code can be downloaded from [LINUX].
An example of how to configure an IVI deployment is shown in Appendix A.
The IVI DNS source code for the IVIG6(i) addresses presented in this document can be downloaded from [DNS].
The IVI translator based on the Linux implementation has been deployed between [CERNET] (IPv4 only) and [CNGI CERNET2]
(IPv6 only) since March 2006.
The pure IPv6 web servers using IVI6 addresses
[2001:250:ffca:2672:100::] behind the IVI translator can be accessed by the IPv4 hosts [TEST4], and also by the global IPv6 hosts [TEST6].
The pure IPv6 clients using IVI6 addresses behind the IVI translator can access IPv4 servers on the IPv4 Internet.
Two traceroute results are presented in Appendix B to show the address mapping of the IVI mechanism.
IVI6 manual configuration and DHCPv6 configuration of the IPv6 end system have also been tested with success.
This document presents the prefix specific and stateless address mapping mechanism (IVI) for the IPv4/IPv6 coexistence and transition.
The IPv4 security and IPv6 security issues should be addressed by related documents of each address family and are not included in this document.
However, there are several issues that need special considerations, specifically (a) IPsec and its NAT traversal,
(b) DNS Security Extensions (DNSSEC), and (c) firewall filter rules.
IPsec and its NAT traversal: Since the IVI scheme maintains end  to end address transparency, IPsec could work with or without NAT traversal techniques.
DNSSEC verification will be terminated at the IVI DNS for the "A record to AAAA record" translation.
It would be fine to have a translation in a local IVI DNS server that also verifies DNSSEC, or in the host, if the host both translates the DNS entry and again verifies DNSSEC validity.
The DNSSEC discussion is in [RFC6147].
Firewall filter rules: Since the IVI scheme maintains the end to  end address transparency
and there is a unique mapping between IPv4 and IPv6 addresses, the firewall filter rule can therefore be implemented for one address family, or mapped to another address family and implemented in that address family.
However, the current IPv6 routers may only support the access list or uRPF
(unicast Reverse Path Forwarding) for the prefix length shorter than /64; there may a practical constraint for the construction of such rules.
Except for the issues discussed above, we have not found special security problems introduced by the IVI translation in our experiments.
The authors would like to acknowledge the following contributors in the different phases of the IVI development:
Ang Li, Yuncheng Zhu, Junxiu Lu, Yu Zhai, Wentao Shang, Weifeng Jiang, and Bizheng Fu.
The authors would like to acknowledge the following contributors, who provided helpful inputs concerning the IVI concept: Bill Manning, David Ward, Elwyn Davies, Lixia Zhang, Jun Murai, Fred Baker, Jari Arkko, Ralph Droms, Tony Hain, and Kevin Yin.
The IVI Translator Configuration Example #!/bin
/sys/net/ipv4/conf/all/forwarding # config route for IVI6   2001:
# configure IPv6 route route add  A inet6 2001:
# config mapping for destination
db8::/32 # for each mapping, a unique pseudo address (10.0.0.x/8)
# ip addr add 10.0.0.1/8 dev eth0 # IPv4 to IPv6 mapping:
multiple mappings can be done via multiple # commands.
# mroute IVI4 network IVI4 mask pseudo address interface \
# source PF destination PF /root/mroute
192.0.2.0 255.255.255.0 10.0.0.1 \ eth0 2001:
PF destination PF pref len /root/mroute6 2001:
db8:ff00:: 40 Figure 9: IVI Configuration Example
The traceroute Results ivitraceroute 202.38.108.2 1
ms 2  202.112.53.73 4 ms 6 ms 12
ms 3  202.112.53.178 1 ms 1
192.0.2.100 1 ms 1 ms
192.0.2.103 2 ms 2 ms
192.0.2.104 2 ms 2 ms
192.0.2.105 4 ms 4 ms 3 ms 10 202.38.108.2 2
ivitraceroute Results Note that the non IVIG6 addresses are mapped to IPv4 document address 192.0.2.0/24.
src ivi4 202.38.97.205 src ivi6 2001
dst host www.mit.edu dst ip4 18.7.22.83 dst ivig 2001:
ffca:7035:4900::  1.660 ms 1.538 ms 1.905
:da8:ffca:703d:9e00::  0.371 ms 0.530 ms 0.459
da8:ffca:7035:1200::  0.776 ms 0.704 ms 0.690
:da8:ffc0:cb74:9100::  204.623 ms 204.685 ms
204.494 ms 192.203.116.145 8  2001:
ivitraceroute6 Results Note that all of the IPv4 addresses can be mapped to prefix specific IPv6 addresses (for example, 18.7.22.83 is mapped to 2001:
