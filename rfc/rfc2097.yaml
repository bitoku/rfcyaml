- title: __initial_text__
  contents:
  - '            The PPP NetBIOS Frames Control Protocol (NBFCP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) [1] provides a standard method\
    \ for\n   transporting multi-protocol datagrams over point-to-point links.  PPP\n\
    \   defines an extensible Link Control Protocol, and proposes a family of\n  \
    \ Network Control Protocols for establishing and configuring different\n   network-layer\
    \ protocols.\n   The NBF protocol [3] was originally called the NetBEUI protocol.\
    \ This\n   document defines the Network Control Protocol for establishing and\n\
    \   configuring the NBF protocol over PPP.\n   The NBFCP protocol is only applicable\
    \ for an end system to connect to\n   a peer system or the LAN that peer system\
    \ is connected to.  It is not\n   applicable for connecting two LANs together\
    \ due to NetBIOS name\n   limitations and NetBIOS name defense mechanisms.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.     Introduction ..........................................\
    \    2\n      1.1       Specification of Requirements ...................    2\n\
    \      1.2       Terminology .....................................    3\n   2.\
    \     A PPP Network Control Protocol for NBF ................    3\n      2.1\
    \       Sending NBF Datagrams ...........................    4\n      2.2    \
    \   Bridging NBF Datagrams...........................    5\n      2.3       NetBIOS\
    \ Name Defense.............................    5\n   3.     NBFCP Configuration\
    \ Options ...........................    6\n      3.1       Name-Projection..................................\
    \    6\n      3.2       Peer-Information.................................    8\n\
    \      3.3       Multicast-Filtering..............................   10\n    \
    \  3.4       IEEE-MAC-Address-Required........................   11\n   SECURITY\
    \ CONSIDERATIONS ......................................   12\n   REFERENCES ...................................................\
    \   12\n   ACKNOWLEDGEMENTS .............................................   13\n\
    \   CHAIR'S ADDRESS ..............................................   13\n   AUTHOR'S\
    \ ADDRESS .............................................   13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   PPP has three main components:\n      1. A method for encapsulating\
    \ multi-protocol datagrams.\n      2. A Link Control Protocol (LCP) for establishing,\
    \ configuring,\n         and testing the data-link connection.\n      3. A family\
    \ of Network Control Protocols for establishing and\n         configuring different\
    \ network-layer protocols.\n   In order to establish communications over a point-to-point\
    \ link, each\n   end of the PPP link must first send LCP packets to configure\
    \ and test\n   the data link.  After the link has been established and optional\n\
    \   facilities have been negotiated as needed by the LCP, PPP must send\n   NBFCP\
    \ packets to choose and configure the NBF network-layer protocol.\n   Once NBFCP\
    \ has reached the Opened state, NBF datagrams can be sent\n   over the link.\n\
    \   The link will remain configured for communications until explicit LCP\n  \
    \ or NBFCP packets close the link down, or until some external event\n   occurs\
    \ (an inactivity timer expires or network administrator\n   intervention).\n"
- title: 1.1.  Specification of Requirements
  contents:
  - "1.1.  Specification of Requirements\n   In this document, several words are used\
    \ to signify the requirements\n   of the specification.  These words are often\
    \ capitalized.\n   MUST      This word, or the adjective \"required\", means that\
    \ the\n             definition is an absolute requirement of the specification.\n\
    \   MUST NOT  This phrase means that the definition is an absolute\n         \
    \    prohibition of the specification.\n   SHOULD    This word, or the adjective\
    \ \"recommended\", means that there\n             may exist valid reasons in particular\
    \ circumstances to\n             ignore this item, but the full implications should\
    \ be\n             understood and carefully weighed before choosing a\n      \
    \       different course.\n   MAY       This word, or the adjective \"optional\"\
    , means that this\n             item is one of an allowed set of alternatives.\
    \  An\n             implementation which does not include this option MUST be\n\
    \             prepared to interoperate with another implementation which\n   \
    \          does include the option.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   This document frequently uses the following terms:\n  \
    \ peer      The other end of the point-to-point link.\n   silently discard\n \
    \           This means the implementation discards the packet without\n      \
    \      further processing.  The implementation SHOULD provide the\n          \
    \  capability of logging the error, including the contents of\n            the\
    \ silently discarded packet, and SHOULD record the event\n            in a statistics\
    \ counter.\n   end-system\n            A user's machine.  It only sends packets\
    \ to servers and\n            other end-systems.  It doesn't pass any packets\
    \ through\n            itself.\n   router    Allows packets to pass through, usually\
    \ from one ethernet\n             segment to another.  Sometimes these are called\n\
    \             \"intermediate-systems\".\n   bridge    Allows packets to pass through\
    \ with the data field\n             unmodified.  Usually from one ethernet segment\
    \ to another\n             or from one ethernet segment to a token-ring segment.\n\
    \   gateway   Allows packets to be sent from one network protocol to\n       \
    \      the same or different network protocol.  For example,\n             NetBIOS\
    \ packets from an NBF network to a TCP/IP network\n             which has implemented\
    \ RFC 1001 and RFC 1002.\n   local access only server A server which does not\
    \ pass any packets\n             through itself to other servers.\n"
- title: 2.  A PPP Network Control Protocol for NBF
  contents:
  - "2.  A PPP Network Control Protocol for NBF\n   The NBF Control Protocol (NBFCP)\
    \ is responsible for configuring,\n   enabling, and disabling the NBF protocol\
    \ modules on both ends of the\n   point-to-point link.  NBFCP uses the same packet\
    \ exchange mechanism\n   as the Link Control Protocol.  NBFCP packets MUST NOT\
    \ be exchanged\n   until PPP has reached the Network-Layer Protocol phase.  NBFCP\n\
    \   packets received before this phase is reached should be silently\n   discarded.\n\
    \   The NBF Control Protocol is exactly the same as the Link Control\n   Protocol\
    \ [1] with the following exceptions:\n   Frame Modifications\n      The packet\
    \ may utilize any modifications to the basic frame format\n      which have been\
    \ negotiated during the Link Establishment phase.\n   Data Link Layer Protocol\
    \ Field\n      Exactly one NBFCP packet is encapsulated in the Information field\n\
    \      of a PPP Data Link Layer frame where the Protocol field indicates\n   \
    \   type hex 803f (NBF Control Protocol).\n   Code field\n     Only Codes 1 through\
    \ 7 (Configure-Request, Configure-Ack,\n     Configure-Nak, Configure-Reject,\
    \ Terminate-Request, Terminate-Ack\n     and Code-Reject) are used.  Other Codes\
    \ should be treated as\n     unrecognized and should result in Code-Rejects.\n\
    \   Timeouts\n     NBFCP packets MUST NOT be exchanged until PPP has reached the\n\
    \     Network-Layer Protocol phase.  An implementation should be\n     prepared\
    \ to wait for Authentication and Link Quality Determination\n     to finish before\
    \ timing out waiting for a Configure-Ack or other\n     response.  It is suggested\
    \ that an implementation give up only\n     after user intervention or a configurable\
    \ amount of time.  Also,\n     because NetBIOS name defense takes time (typically\
    \ a minimum of\n     3 seconds if names are added in parallel), it is suggested\
    \ that\n     if Name-Projection is negotiated, the timeouts are increased to 10\n\
    \     seconds.\n   Configuration Option Types\n     NBFCP has a distinct set of\
    \ Configuration Options.\n"
- title: 2.1.  Sending NBF Datagrams
  contents:
  - "2.1.  Sending NBF Datagrams\n   Before any NBF packets may be communicated, PPP\
    \ must reach the\n   Network-Layer Protocol phase, and the NBF Control Protocol\
    \ must reach\n   the Opened state.\n   Unless otherwise negotiated, exactly one\
    \ NBF packet is encapsulated\n   in the Information field of a PPP Data Link Layer\
    \ frame where the\n   Protocol field indicates type hex 003f (NBF datagram).\n\
    \   Since NBF datagrams for PPP do not contain a datagram length field,\n   the\
    \ encapsulated NBF packet MUST NOT contain any extra octet padding\n   except\
    \ when Self-Defining-Padding is negotiated.\n   The maximum length of an NBF datagram\
    \ transmitted over a PPP link is\n   the same as the maximum length of the Information\
    \ field of a PPP data\n   link layer frame.  Since there is no standard method\
    \ for fragmenting\n   and reassembling NBF datagrams, PPP links supporting NBF\
    \ MUST allow\n   at least 576 octets in the information field of a data link layer\n\
    \   frame.  It is recommended that an implementation allow 1500 octets in\n  \
    \ the information field unless the IEEE-MAC-Address-Required boolean\n   option\
    \ is negotiated (see below).\n"
- title: 2.2   Bridging NBF Datagrams
  contents:
  - "2.2   Bridging NBF Datagrams\n   There exist at least four different MAC header\
    \ implementations for\n   NBF packets: 802.3 Ethernet, 802.5 Token-Ring, DIX Ethernet,\
    \ and\n   FDDI.  Because NBF is not a routable protocol, some PPP\n   implementations\
    \ may require IEEE MAC addresses to properly route or\n   bridge NBF packets.\
    \  Some PPP implementations may require the entire\n   MAC media header in order\
    \ to properly route or bridge NBF packets.\n   Other smarter implementations may\
    \ only require the IEEE MAC addreses,\n   and still other implementations (such\
    \ as NetBIOS gateways) may not\n   require any MAC address fields.  NBFCP implementations\
    \ which require\n   IEEE Addresses should negotiate the NBFCP IEEE-MAC-Address-Required\n\
    \   boolean configuartion option so that the MAC header can be provided\n   in\
    \ the NBF packet.\n   If IEEE-MAC-Address-Required boolean configuration option\
    \ is\n   negotiated, all NBF datagrams MUST be sent with the specified 12\n  \
    \ octet IEEE MAC address header.  Since negotiation of this option\n   occurs\
    \ after the LCP phase, NBF packets MAY exceed the negotiated PPP\n   MRU size.\
    \  A PPP implementation which negotiates this option MUST\n   allow reception\
    \ of PPP NBF packets 12 octets larger than the\n   negotiated MRU size.\n"
- title: 2.3   NetBIOS Name Defense
  contents:
  - "2.3   NetBIOS Name Defense\n   In order to guarantee uniqueness of NetBIOS Names\
    \ on the network,\n   NBFCP requires that end-system implementations MUST negotiate\
    \ the\n   Name-Projection configuration option.\n"
- title: 3.  NBFCP Configuration Options
  contents:
  - "3.  NBFCP Configuration Options\n   NBFCP Configuration Options allow modifications\
    \ to the standard\n   characteristics of the network-layer protocol to be negotiated.\
    \  If a\n   Configuration Option is not included in a Configure-Request packet,\n\
    \   the default value for that Configuration Option is assumed.\n   NBFCP uses\
    \ the same Configuration Option format defined for LCP [1],\n   with a separate\
    \ set of Options.\n   Up-to-date values of the NBFCP Option Type field are specified\
    \ in the\n   most recent \"Assigned Numbers\" RFC [2].  Current values are assigned\n\
    \   as follows:\n      1       Name-Projection\n      2       Peer-Information\n\
    \      3       Multicast-Filtering\n      4       IEEE-MAC-Address-Required\n"
- title: 3.1.  Name-Projection
  contents:
  - "3.1.  Name-Projection\n   Description\n      This Configuration Option provides\
    \ a method for the peer to\n      provide the NetBIOS names registered on its\
    \ network.  The sender\n      of the Configure-Request states which NetBIOS names\
    \ should be\n      added by the remote peer.  More than one Name-Projection option\n\
    \      MAY appear in a single Configure-Request.\n      Implementations which\
    \ do not attempt to add any NetBIOS names MUST\n      Configure-Reject the Name-Projection\
    \ Configuration Option.\n      If the Name-Projection Configuration Option is\
    \ not offered by the\n      remote peer, but is required by the local peer, the\
    \ local peer\n      should Configure-Nak the request and indicate that it wishes\
    \ the\n      remote peer to add zero NetBIOS names because it is the only known\n\
    \      acceptable value.  The remote peer may then terminate NBFCP,\n      attempt\
    \ to add zero NetBIOS names, or attempt add one or more\n      NetBIOS names.\n\
    \      When the receiving peer cannot add all the requested names, it\n      MUST\
    \ Configure-Nak with the complete list of names requested.\n      Those names\
    \ which could be added should have the Added field set\n      to zero. Those names\
    \ which could not be added should have the\n      Added field set to an appropriate\
    \ non-zero return code.  The\n      sender of this Configuration Option SHOULD\
    \ then resend the\n      Configure-Request with the successfully added names.\n\
    \      The implementation may choose to fail configuration if the\n      complete\
    \ list of NetBIOS names is not accepted.  By failing, the\n      implementation\
    \ should terminate NBFCP by sending a Terminate-\n      Request packet.\n    \
    \  Because adding NetBIOS names can take time (usually 3 seconds) and\n      because\
    \ PPP may default the restart timer to 3 seconds, the\n      restart timer SHOULD\
    \ default to 10 seconds when configuring\n      NetBIOS names.\n   A summary of\
    \ the Name-Projection Configuration Option format is shown\n   below.  The fields\
    \ are transmitted from left to right.\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |      1st NetBIOS-Name\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   1st NetBIOS-Name (cont.)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   1st NetBIOS-Name (cont.)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   1st NetBIOS-Name (cont.)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   1st NetBIOS-Name (cont.)    |    Added      |2nd NetBIOS Name...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      1\n   Length\n      2 + (Number of NetBIOS names * 17)\n   NetBIOS-Names\n\
    \      This group of zero or more sixteen octet NetBIOS-Name fields\n      contains\
    \ a list of all the NetBIOS names the peer wishes to add to\n      the remote\
    \ network if the packet is Configure-Request.  If the\n      packet is Configure-Reject,\
    \ the peer does not support this\n      configuration option and it can be assumed\
    \ that no NetBIOS names\n      were added.\n      Because the length field is\
    \ only one octet, only 14 NetBIOS names\n      can be added per Name-Projection\
    \ option.  If more than 14 NetBIOS\n      names should be added, then more than\
    \ one Name-Projection option\n      packet will have to be sent in the Configure-Request\
    \ packet.\n   Added\n      This is a one octet field which plays a dual role.\
    \  The Added\n      field in the Name-Projection Request packet contains the type\
    \ of\n      NetBIOS name added.  A summary of name types is listed below.\n  \
    \       01   Unique Name.\n         02   Group Name.\n      If the packet is a\
    \ Configure-Reject the Added field should contain\n      the NetBIOS return code\
    \ for the NetBIOS Add Name or NetBIOS Add\n      Group Name command as defined\
    \ in the NetBIOS 3.0 specification =\n      [3].\n   A summary of common result\
    \ codes is listed below in type hex.\n         00   Name successfully added.\n\
    \         0D   Duplicate name in local name table.\n         0E   Name table full.\n\
    \         15   Name not found or cannot specify \"*\" or null.\n         16  \
    \ Name in use on remote NetBIOS.\n         19   Name conflict detected.\n    \
    \     30   Name defined by another environment.\n         35   Required system\
    \ resources exhausted.\n"
- title: 3.2.  Peer-Information
  contents:
  - "3.2.  Peer-Information\n   Description\n      This Configuration Option provides\
    \ a way for the peer to\n      communicate NetBIOS pertinent configuration information.\
    \ Although\n      negotiation of this option is not mandatory, it is suggested.\n\
    \   A summary of the Peer-Information Option format is shown below.  The\n   fields\
    \ are transmitted from left to right.\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |         Peer-class            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Peer-version (major)   |       Peer-version(minor)    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Peer-name ....\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      2\n   Length\n      >=3D8\n      If the length is 8, there is\
    \ no Peer-name.  If the length is\n      greater than 8, the Peer-name's length\
    \ is Length - 8.\n   Peer-class\n      The Peer-class field is one octet. It identifies\
    \ the sender's\n      implementation type.\n      Initial values are assigned\
    \ as follows:\n      Value           Class\n        1             Reserved for\
    \ legacy implementations.\n        2             PPP NetBIOS Gateway Server.\n\
    \        3             Reserved for legacy implementations.\n        4       \
    \      PPP Local Access Only Server.\n        5             Reserved for legacy\
    \ implementations.\n        6             PPP NBF Bridge.\n        7         \
    \    Reserved for legacy implementations.\n        8             PPP End-System.\n\
    \   Peer-version\n      The Peer-version field is four octets and indicates the\
    \ version of\n      the communication peer providing one side of the PPP connection.\n\
    \      The first two octets are the major version number and the last two\n  \
    \    octets are the minor version number.  The major and minor version\n     \
    \ represent a 16 bit unsigned number sent with the most significant\n      octet\
    \ first.\n   Peer-name\n      The name of the peer.  A suggested name is the NetBIOS\
    \ workstation\n      name of the peer.  If the length field is 8, no peer name\
    \ is\n      provided.  The peer-name may not be greater than 32 octets in\n  \
    \    length.\n"
- title: 3.3.  Multicast-Filtering
  contents:
  - "3.3.  Multicast-Filtering\n   Description\n      This Configuration Option provides\
    \ a way to negotiate the use of\n      the Multicast-Forward-Period and the Multicast-Priority.\
    \  This\n      Configuration Option provides a way to negotiate how to handle\n\
    \      mulicast packets.  It allows the sender of the Configure-Request\n    \
    \  to state the current handling of multicast packets.  The peer can\n      request\
    \ parameters by NAKing the option, and returning valid\n      Multicast-Filtering\
    \ parameters.\n      If negotiation about the remote Multicast-Filtering is required,\n\
    \      and the peer did not provide the option in its Configure-Request,\n   \
    \   the option SHOULD be appended to a Configure-Nak.\n      Controlling the multicast\
    \ rate is important because some NetBIOS\n      applications use multicasts to\
    \ communicate and withholding\n      multicasts may prevent these applications\
    \ from working.  It is\n      also true that other NetBIOS applications do not\
    \ need to receive\n      any multicast packets and therefore it is best to quench\
    \ the rate\n      at which the peer will send multicast packets.\n      By default,\
    \ the peer is pre-configured to an administrator\n      assigned Multicast-Forward-Period\
    \ and Priority.  A Multicast-\n      Forward-Period specified as hex type FFFF\
    \ in a Configure-Request\n      is interpreted as requesting the receiving peer\
    \ to specify a value\n      in its Configure-Nak.  A Multicast-Forward-Period\
    \ value specified\n      as hex type FFFF in a Configure-Nak is interpreted as\
    \ agreement\n      that no value exists. A Multicast-Forward-Period of zero indicates\n\
    \      that all multicast packets SHOULD be forwarded.\n      Peers that rely\
    \ on all multicast packets being forwarded SHOULD\n      request a Multicast-Forward-Period\
    \ of zero and a Multicast-\n      Priority of one by NAKing the Configure-Request\
    \ option and\n      appending the proper parameters to a Configure-Nak.\n   A\
    \ summary of the Multicast-Filtering Configuration Option format is\n   shown\
    \ below.  The fields are transmitted from left to right.\n    0              \
    \     1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |    Multicast-Forward-Period   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Priority    |\n   +-+-+-+-+-+-+-+-+\n   Type\n      3\n   Length\n   \
    \   5\n   Multicast-Forward-Period\n      The Multicast-Forward-Period field is\
    \ two octets and indicates\n      the maximum period in seconds at which multicast\
    \ packets can\n      be sent.  The maximum value for this field is 60 (one minute).\n\
    \      A value of zero indicates that there is no maximum period at\n      which\
    \ multicast packets can be sent.  A value of hex type FFFF\n      indicates that\
    \ the Multicast-Forward-Period is unknown.  A value\n      of five indicates that\
    \ multicast packets will not be sent at a\n      rate more frequent than once\
    \ every five seconds.  This two\n      octet value represents a 16 bit unsigned\
    \ number sent with\n      the most significant octet first.\n   Priority\n   \
    \   The Priority field is one octet long and indicates if multicast\n      packets\
    \ have priority over other packets when being sent.  A value\n      of 0 indicates\
    \ that directed packets have priority.  A value of 1\n      indicates that multicast\
    \ packets have priority.\n"
- title: 3.4.  IEEE-MAC-Address-Required
  contents:
  - "3.4.  IEEE-MAC-Address-Required\n   Description\n      This boolean Configuration\
    \ Option provides a method for the peer\n      to require that all NBF datagrams\
    \ be sent with a 12 octet IEEE MAC\n      Address header.  By default, it is assumed\
    \ that no MAC header is\n      required.\n   A summary of the IEEE-MAC-Address-Required\
    \ Boolean Configuration\n   Option format is shown below.  The fields are transmitted\
    \ from left\n   to right.\n    0                   1\n    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |     Type      |    Length\
    \     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type\n      4\n   Length\n \
    \     2\n   Requirements\n      By default the NBF datagram is sent without any\
    \ MAC header\n      information.  The NBF datagram information field is equivalent\
    \ to\n      the data field in 802.3, 802.5, and FDDI frames.\n      If this option\
    \ is negotiated successfully, each NBF datagram is\n      sent with a 12 octet\
    \ IEEE MAC Address header prepended to the\n      information field.  A summary\
    \ of the information field when using\n      12 octet IEEE MAC Headers is shown\
    \ below. The fields are\n      transmitted from left to right.  The MAC Address\
    \ is in non-\n      canonical form. This means that the first bit to be transmitted\
    \ in\n      every byte is the most significant bit.\n    0                   1\
    \                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Destination MAC Address                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Destination MAC Address   |  Source MAC Address           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Source MAC Address                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |               802.3/802.5/FDDI data field...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: References
  contents:
  - "References\n   [1]   Simpson, W., Editor, \"The Point-to-Point Protocol (PPP)\"\
    ,\n         STD 51, RFC 1661, July 1994.\n   [2]   Reynolds, J., and J. Postel,\
    \ \"Assigned Numbers\", STD 2,\n         RFC 1700, October 1994.\n   [3]   IBM\
    \ Corp., \"IBM Local Area Network Technical Reference\",\n         Third Edition,\
    \ Document Number SC30-3383-2, November 4, 1988.\n   [4]   Baker, F., and R. Bowen\
    \ \"PPP Bridging Control Protocol (BCP)\",\n         Work in Progress.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Some of the text in this document is taken from previous\
    \ documents\n   produced by the Point-to-Point Protocol Working Group of the Internet\n\
    \   Engineering Task Force (IETF).\n   Thomas J. Dimitri (previously at Microsoft\
    \ Corporation) authored the\n   original draft.\n   Special thanks go to coworkers\
    \ at Microsoft, Bill Simpson\n   (Daydreamer), Tom Coradetti (DigiBoard), Marty\
    \ Del Vecchio (Shiva),\n   Russ Gocht (Shiva) and several members of the IETF\
    \ PPP Working Group.\n"
- title: Chair's Address
  contents:
  - "Chair's Address\n   The working group can be contacted via the current chair:\n\
    \      Karl Fox\n      Ascend Communications\n      3518 Riverside Drive, Suite\
    \ 101\n      Columbus, Ohio 43221\n      karl@MorningStar.com\n      karl@Ascend.com\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Questions about this memo can also be directed to:\n   \
    \   Gurdeep Singh Pall\n      Microsoft Corporation\n      1 Microsoft Way\n \
    \     Redmond, WA 98052-6399\n      EMail: gurdeep@microsoft.com\n"
