- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                    M. Msahli, Ed.
  contents:
  - 'Independent Submission                                    M. Msahli, Ed.

    '
- title: TLS Authentication Using Intelligent Transport System (ITS) Certificates
  contents:
  - 'TLS Authentication Using Intelligent Transport System (ITS) Certificates

    '
- title: Abstract
  contents:
  - "Abstract\n   The IEEE and ETSI have specified a type of end-entity certificate.\n\
    \   This document defines an experimental change to TLS to support IEEE/\n   ETSI\
    \ certificate types to authenticate TLS entities.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This is a contribution to the RFC Series, independently\n   of any other RFC\
    \ stream.  The RFC Editor has chosen to publish this\n   document at its discretion\
    \ and makes no statement about its value for\n   implementation or deployment.\
    \  Documents approved for publication by\n   the RFC Editor are not candidates\
    \ for any level of Internet Standard;\n   see Section 2 of RFC 7841.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8902.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Experiment Overview\n   2.\
    \  Requirements Terminology\n   3.  Extension Overview\n   4.  TLS Client and\
    \ Server Handshake\n     4.1.  Client Hello\n     4.2.  Server Hello\n   5.  Certificate\
    \ Verification\n   6.  Examples\n     6.1.  TLS Server and TLS Client Use the\
    \ ITS Certificate\n     6.2.  TLS Client Uses the ITS Certificate and TLS Server\
    \ Uses the\n           X.509 Certificate\n   7.  Security Considerations\n   \
    \  7.1.  Securely Obtaining Certificates from an Online Repository\n     7.2.\
    \  Expiry of Certificates\n     7.3.  Algorithms and Cryptographic Strength\n\
    \     7.4.  Interpreting ITS Certificate Permissions\n     7.5.  Psid and Pdufunctionaltype\
    \ in CertificateVerify\n   8.  Privacy Considerations\n   9.  IANA Considerations\n\
    \   10. Normative References\n   Acknowledgements\n   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The TLS protocol [RFC8446] allows the use of X.509 certificates\
    \ and\n   raw public keys to authenticate servers and clients.  This document\n\
    \   describes an experimental extension following the procedures laid out\n  \
    \ by [RFC7250] to support use of the certificate format specified by\n   the IEEE\
    \ in [IEEE1609.2] and profiled by the European\n   Telecommunications Standards\
    \ Institute (ETSI) in [TS103097].  These\n   standards specify secure communications\
    \ in vehicular environments.\n   These certificates are referred to in this document\
    \ as Intelligent\n   Transport Systems (ITS) Certificates.\n   The certificate\
    \ types are optimized for bandwidth and processing time\n   to support delay-sensitive\
    \ applications and also to provide both\n   authentication and authorization information\
    \ to enable fast access\n   control decisions in ad hoc networks found in Intelligent\
    \ Transport\n   Systems (ITS).  The standards specify different types of certificates\n\
    \   to support a full Public Key Infrastructure (PKI) specification; the\n   certificates\
    \ to be used in this context are end-entity certificates,\n   i.e., certificates\
    \ that have the IEEE 1609.2 appPermissions field\n   present.\n   Use of ITS certificates\
    \ is becoming widespread in the ITS setting.\n   ITS communications, in practice,\
    \ make heavy use of 10 MHz channels\n   with a typical throughput of 6 Mbps. \
    \ (The 802.11OCB modulation that\n   gives this throughput is not the one that\
    \ gives the highest\n   throughput, but it provides for a robust signal over a\
    \ range up to\n   300-500 m, which is the \"sweet spot\" communications range\
    \ for ITS\n   operations like collision avoidance).  The compact nature of ITS\n\
    \   certificates as opposed to X.509 certificates makes them appropriate\n   for\
    \ this setting.\n   The ITS certificates are also suited to the machine-to-machine\
    \ (M2M)\n   ad hoc network setting because their direct encoding of permissions\n\
    \   (see Section 7.4) allows a receiver to make an immediate accept/deny\n   decision\
    \ about an incoming message without having to refer to a\n   remote identity and\
    \ access management server.  The EU has committed\n   to the use of ITS certificates\
    \ in Cooperative Intelligent Transport\n   Systems deployments.  A multi-year\
    \ project developed a certificate\n   policy for the use of ITS certificates,\
    \ including a specification of\n   how different root certificates can be trusted\
    \ across the system\n   (hosted at <https://ec.europa.eu/transport/themes/its/c-its_en>,\n\
    \   direct link at <https://ec.europa.eu/transport/sites/transport/files/\n  \
    \ c-its_certificate_policy_release_1.pdf>).\n   The EU has committed funding for\
    \ the first five years of operation of\n   the top-level Trust List Manager entity,\
    \ enabling organizations such\n   as motor vehicle original equipment manufacturers\
    \ (OEMs) and national\n   road authorities to create root certificate authorities\
    \ (CAs) and\n   have them trusted.  In the US, the US Department of Transportation\n\
    \   (USDOT) published a proposed regulation, active as of late 2019\n   though\
    \ not rapidly progressing, requiring all light vehicles in the\n   US to implement\
    \ vehicle-to-everything (V2X) communications, including\n   the use of ITS certificates\
    \ (available at\n   <https://www.federalregister.gov/documents/2017/01/12/2016-31059/\n\
    \   federal-motor-vehicle-safety-standards-v2v-communications>).  As of\n   2019,\
    \ ITS deployments across the US, Europe, and Australia were using\n   ITS certificates.\
    \  Volkswagen has committed to deploying V2X using\n   ITS certificates.  New\
    \ York, Tampa, and Wyoming are deploying traffic\n   management systems using\
    \ ITS certificates.  GM deployed V2X in the\n   Cadillac CTS, using ITS certificates.\n\
    \   ITS certificates are also used in a number of standards that build on\n  \
    \ top of the foundational IEEE and ETSI standards, particularly the\n   Society\
    \ of Automobile Engineers (SAE) J2945/x series of standards for\n   applications\
    \ and ISO 21177 [ISO21177], which builds a framework for\n   exchanging multiple\
    \ authentication tokens on top of the TLS variant\n   specified in this document.\n"
- title: 1.1.  Experiment Overview
  contents:
  - "1.1.  Experiment Overview\n   This document describes an experimental extension\
    \ to the TLS security\n   model.  It uses a form of certificate that has not previously\
    \ been\n   used in the Internet.  Systems using this Experimental approach are\n\
    \   segregated from systems using standard TLS by the use of a new\n   certificate\
    \ type value, reserved through IANA (see Section 9).  An\n   implementation of\
    \ TLS that is not involved in the Experiment will not\n   recognize this new certificate\
    \ type and will not participate in the\n   experiment; TLS sessions will either\
    \ negotiate the use of existing\n   X.509 certificates or fail to be established.\n\
    \   This extension has been encouraged by stakeholders in the Cooperative\n  \
    \ ITS community in order to support ITS use-case deployment, and it is\n   anticipated\
    \ that its use will be widespread.\n"
- title: 2.  Requirements Terminology
  contents:
  - "2.  Requirements Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 3.  Extension Overview
  contents:
  - "3.  Extension Overview\n   The TLS extensions \"client_certificate_type\" and\n\
    \   \"server_certificate_type\" [RFC7250] are used to negotiate the type of\n\
    \   Certificate messages used in TLS to authenticate the server and,\n   optionally,\
    \ the client.  Using separate extensions allows for mixed\n   deployments where\
    \ the client and server can use certificates of\n   different types.  It is expected\
    \ that ITS deployments will see both\n   peers using ITS certificates due to the\
    \ homogeneity of the ecosystem,\n   but there is no barrier at a technical level\
    \ that prevents mixed\n   certificate usage.  This document defines a new certificate\
    \ type,\n   1609Dot2, for usage with TLS 1.3.  The updated CertificateType\n \
    \  enumeration and corresponding addition to the CertificateEntry\n   structure\
    \ are shown below.  CertificateType values are sent in the\n   \"server_certificate_type\"\
    \ and \"client_certificate_type\" extensions,\n   and the CertificateEntry structures\
    \ are included in the certificate\n   chain sent in the Certificate message. \
    \ In the case of TLS 1.3, the\n   \"client_certificate_type\" SHALL contain a\
    \ list of supported\n   certificate types proposed by the client as provided in\
    \ the figure\n   below:\n     /* Managed by IANA */\n      enum {\n          X509(0),\n\
    \          RawPublicKey(2),\n          1609Dot2(3),\n          (255)\n      }\
    \ CertificateType;\n      struct {\n          select (certificate_type) {\n  \
    \            /* certificate type defined in this document.*/\n               case\
    \ 1609Dot2:\n               opaque cert_data<1..2^24-1>;\n               /* RawPublicKey\
    \ defined in RFC 7250*/\n              case RawPublicKey:\n              opaque\
    \ ASN.1_subjectPublicKeyInfo<1..2^24-1>;\n              /* X.509 certificate defined\
    \ in RFC 8446*/\n              case X.509:\n              opaque cert_data<1..2^24-1>;\n\
    \               };\n             Extension extensions<0..2^16-1>;\n         }\
    \ CertificateEntry;\n   As per [RFC7250], the server processes the received\n\
    \   [endpoint]_certificate_type extension(s) and selects one of the\n   offered\
    \ certificate types, returning the negotiated value in its\n   EncryptedExtensions\
    \ (TLS 1.3) message.  Note that there is no\n   requirement for the negotiated\
    \ value to be the same in\n   client_certificate_type and server_certificate_type\
    \ extensions sent\n   in the same message.\n"
- title: 4.  TLS Client and Server Handshake
  contents:
  - "4.  TLS Client and Server Handshake\n   Figure 1 shows the handshake message\
    \ flow for a full TLS 1.3\n   handshake negotiating both certificate types.\n\
    \     Client                                           Server\n   Key  ^ ClientHello\n\
    \   Exch | + server_certificate_type*\n        | + client_certificate_type*\n\
    \        | + key_share*\n        v + signature_algorithms*       -------->\n \
    \       ^ {Certificate*}\n   Auth | {CertificateVerify*}\n        v {Finished}\
    \             -------->\n          [Application Data]     <------->  [Application\
    \ Data]\n                 +  Indicates noteworthy extensions sent in the\n   \
    \                 previously noted message.\n                 *  Indicates optional\
    \ or situation-dependent\n                    messages/extensions that are not\
    \ always sent.\n                 {} Indicates messages protected using keys\n\
    \                    derived from a [sender]_handshake_traffic_secret.\n     \
    \            [] Indicates messages protected using keys\n                    derived\
    \ from [sender]_application_traffic_secret_N.\n      Figure 1: Message Flow with\
    \ Certificate Type Extension for Full\n                             TLS 1.3 Handshake\n\
    \   In the case of TLS 1.3, in order to negotiate the support of ITS\n   certificate-based\
    \ authentication, clients and servers include the\n   extension of type \"client_certificate_type\"\
    \ and\n   \"server_certificate_type\" in the extended Client Hello and\n   \"\
    EncryptedExtensions\".\n"
- title: 4.1.  Client Hello
  contents:
  - "4.1.  Client Hello\n   In order to indicate the support of ITS certificates,\
    \ a client MUST\n   include an extension of type \"client_certificate_type\" or\n\
    \   \"server_certificate_type\" in the extended Client Hello message as\n   described\
    \ in Section 4.1.2 of [RFC8446] (TLS 1.3).\n   For TLS 1.3, the rules for when\
    \ the Client Certificate and\n   CertificateVerify messages appear are as follows:\n\
    \   *  The client's Certificate message is present if and only if the\n      server\
    \ sent a CertificateRequest message.\n   *  The client's CertificateVerify message\
    \ is present if and only if\n      the client's Certificate message is present\
    \ and contains a non-\n      empty certificate_list.\n   For maximum compatibility,\
    \ all implementations SHOULD be prepared to\n   handle \"potentially\" extraneous\
    \ certificates and arbitrary orderings\n   from any TLS version, with the exception\
    \ of the end-entity\n   certificate, which MUST be first.\n"
- title: 4.2.  Server Hello
  contents:
  - "4.2.  Server Hello\n   When the server receives the Client Hello containing the\n\
    \   client_certificate_type extension and/or the server_certificate_type\n   extension,\
    \ the following scenarios are possible:\n   *  If both the client and server indicate\
    \ support for the ITS\n      certificate type, the server MAY select the first\
    \ (most preferred)\n      certificate type from the client's list that is supported\
    \ by both\n      peers.\n   *  The server does not support any of the proposed\
    \ certificate types\n      and terminates the session with a fatal alert of type\n\
    \      \"unsupported_certificate\".\n   *  The server supports the certificate\
    \ types specified in this\n      document.  In this case, it MAY respond with\
    \ a certificate of this\n      type.  It MAY also include the client_certificate_type\
    \ extension\n      in Encrypted Extension.  Then, the server requests a certificate\n\
    \      from the client (via the CertificateRequest message).\n   The certificates\
    \ in the TLS client or server certificate chain MAY be\n   sent as part of the\
    \ handshake, MAY be obtained from an online\n   repository, or might already be\
    \ known to and cached at the endpoint.\n   If the handshake does not contain all\
    \ the certificates in the chain,\n   and the endpoint cannot access the repository\
    \ and does not already\n   know the certificates from the chain, then it SHALL\
    \ reject the other\n   endpoint's certificate and close the connection.  Protocols\
    \ to\n   support retrieving certificates from a repository are specified in\n\
    \   ETSI [TS102941].\n"
- title: 5.  Certificate Verification
  contents:
  - "5.  Certificate Verification\n   Verification of an ITS certificate or certificate\
    \ chain is described\n   in section 5.1 of [IEEE1609.2].  In the case of TLS 1.3,\
    \ and when the\n   certificate_type is 1609.2, the CertificateVerify contents\
    \ and\n   processing are different than for the CertificateVerify message\n  \
    \ specified for other values of certificate_type in [RFC8446].  In this\n   case,\
    \ the CertificateVerify message contains an Ieee1609Dot2Data\n   encoded with\
    \ Canonical Octet Encoding Rules (OER) [ITU-TX.696] of\n   type signed as specified\
    \ in [IEEE1609.2] and [IEEE1609.2b], where:\n   *  payload contains an extDataHash\
    \ containing the SHA-256 hash of the\n      data that the signature is calculated\
    \ over.  This is identical to\n      the data that the signature is calculated\
    \ over in standard TLS,\n      which is reproduced below for clarity.\n   *  headerInfo.psid\
    \ indicates the application activity that the\n      certificate is authorizing.\n\
    \   *  headerInfo.generationTime is the time at which the data structure\n   \
    \   was generated.\n   *  headerInfo.pduFunctionalType (as specified in [IEEE1609.2b])\
    \ is\n      present and is set equal to tlsHandshake (1).\n   All other fields\
    \ in the headerInfo are omitted.  The certificate\n   appPermissions field SHALL\
    \ be present and SHALL permit (as defined in\n   [IEEE1609.2]) signing of PDUs\
    \ with the PSID indicated in the\n   HeaderInfo of the SignedData.  If the application\
    \ specification for\n   that PSID requires Service Specific Permissions (SSP)\
    \ for signing a\n   pduFunctionalType of tlsHandshake, this SSP SHALL also be\
    \ present.\n   For more details on the use of PSID and SSP, see [IEEE1609.2],\n\
    \   clauses 5.1.1 and 5.2.3.3.3.  All other fields in the headerInfo are\n   omitted.\n\
    \   The certificate appPermissions field SHALL be present and SHALL\n   permit\
    \ (as defined in [IEEE1609.2]) signing of PDUs with the PSID\n   indicated in\
    \ the HeaderInfo of the SignedData.  If the application\n   specification for\
    \ that PSID requires Service Specific Permissions\n   (SSP) for signing a pduFunctionalType\
    \ of tlsHandshake, this SSP SHALL\n   also be present.\n   The signature and verification\
    \ are carried out as specified in\n   [IEEE1609.2].\n   The input to the hash\
    \ process is identical to the message input for\n   TLS 1.3, as specified in Section\
    \ 4.4.3 of [RFC8446], consisting of\n   pad, context string, separator, and content,\
    \ where content is\n   Transcript-Hash(Handshake Context, Certificate).\n"
- title: 6.  Examples
  contents:
  - "6.  Examples\n   Some of the message-exchange examples are illustrated in Figures\
    \ 2\n   and 3.\n"
- title: 6.1.  TLS Server and TLS Client Use the ITS Certificate
  contents:
  - "6.1.  TLS Server and TLS Client Use the ITS Certificate\n   This section shows\
    \ an example where the TLS client as well as the TLS\n   server use ITS certificates.\
    \  In consequence, both the server and the\n   client populate the client_certificate_type\
    \ and\n   server_certificate_type extension with the IEEE 1609 Dot 2 type as\n\
    \   mentioned in Figure 2.\n      Client                                     \
    \      Server\n   ClientHello,\n   client_certificate_type=1609Dot2,\n   server_certificate_type=1609Dot2,\
    \  -------->    ServerHello,\n                             {client_certificate_type=1609Dot2}\n\
    \                             {server_certificate_type=1609Dot2}\n     {Certificate}\
    \          <-------         [Application Data]\n     {CertificateVerify}\n   \
    \  {Finished}             -------->\n     [Application Data]     <------->   \
    \     [Application Data]\n        Figure 2: TLS Client and TLS Server Use the\
    \ ITS Certificate\n"
- title: 6.2.  TLS Client Uses the ITS Certificate and TLS Server Uses the X.509
  contents:
  - "6.2.  TLS Client Uses the ITS Certificate and TLS Server Uses the X.509\n   \
    \   Certificate\n   This example shows the TLS authentication, where the TLS client\n\
    \   populates the server_certificate_type extension with the X.509\n   certificate\
    \ and raw public key type as presented in Figure 3.  The\n   client indicates\
    \ its ability to receive and validate an X.509\n   certificate from the server.\
    \  The server chooses the X.509\n   certificate to make its authentication with\
    \ the client.  This is\n   applicable in the case of a raw public key supported\
    \ by the server.\n   Client                                           Server\n\
    \   ClientHello,\n   client_certificate_type=(1609Dot2),\n   server_certificate_type=(1609Dot2,\n\
    \   X509,RawPublicKey),         ----------->         ServerHello,\n          \
    \                    {client_certificate_type=1609Dot2}\n   {Finished}       \
    \           --------->\n   [Application Data]          <-------->     [Application\
    \ Data]\n     Figure 3: TLS Client Uses the ITS Certificate and TLS Server Uses\n\
    \                           the X.509 Certificate\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This section provides an overview of the basic\
    \ security\n   considerations that need to be taken into account before implementing\n\
    \   the necessary security mechanisms.  The security considerations\n   described\
    \ throughout [RFC8446] apply here as well.\n"
- title: 7.1.  Securely Obtaining Certificates from an Online Repository
  contents:
  - "7.1.  Securely Obtaining Certificates from an Online Repository\n   In particular,\
    \ the certificates used to establish a secure connection\n   MAY be obtained from\
    \ an online repository.  An online repository may\n   be used to obtain the CA\
    \ certificates in the chain of either\n   participant in the secure session. \
    \ ETSI TS 102 941 [TS102941]\n   provides a mechanism that can be used to securely\
    \ obtain ITS\n   certificates.\n"
- title: 7.2.  Expiry of Certificates
  contents:
  - "7.2.  Expiry of Certificates\n   Conventions around certificate lifetime differ\
    \ between ITS\n   certificates and X.509 certificates, and in particular, ITS\n\
    \   certificates may be relatively short lived compared with typical\n   X.509\
    \ certificates.  A party to a TLS session that accepts ITS\n   certificates MUST\
    \ check the expiry time in the received ITS\n   certificate and SHOULD terminate\
    \ a session when the certificate\n   received in the handshake expires.\n"
- title: 7.3.  Algorithms and Cryptographic Strength
  contents:
  - "7.3.  Algorithms and Cryptographic Strength\n   All ITS certificates use public-key\
    \ cryptographic algorithms with an\n   estimated strength on the order of 128\
    \ bits or more, specifically,\n   Elliptic Curve Cryptography (ECC) based on curves\
    \ with keys of length\n   256 bits or longer.  An implementation of the techniques\
    \ specified in\n   this document SHOULD require that if X.509 certificates are\
    \ used by\n   one of the parties to the session, those certificates are associated\n\
    \   with cryptographic algorithms with (pre-quantum-computer) strength of\n  \
    \ at least 128 bits.\n"
- title: 7.4.  Interpreting ITS Certificate Permissions
  contents:
  - "7.4.  Interpreting ITS Certificate Permissions\n   ITS certificates in TLS express\
    \ the certificate holders permissions\n   using two fields: a PSID, also known\
    \ as an ITS Application Identifier\n   (ITS-AID), which identifies a broad set\
    \ of application activities\n   that provide a context for the certificate holder's\
    \ permissions, and\n   a Service Specific Permissions (SSP) field associated with\
    \ that PSID,\n   which identifies which specific application activities the\n\
    \   certificate holder is entitled to carry out within the broad set of\n   activities\
    \ identified by that PSID.  For example, SAE [SAEJ29453]\n   uses PSID 0204099\
    \ to indicate activities around reporting weather and\n   managing weather response\
    \ activities, and an SSP that states whether\n   the certificate holder is a Weather\
    \ Data Management System (WDMS,\n   i.e., a central road manager), an ordinary\
    \ vehicle, or a vehicle\n   belonging to a managed road maintenance fleet.  For\
    \ more information\n   about PSIDs, see [IEEE1609.12], and for more information\
    \ about the\n   development of SSPs, see [SAEJ29455].\n"
- title: 7.5.  Psid and Pdufunctionaltype in CertificateVerify
  contents:
  - "7.5.  Psid and Pdufunctionaltype in CertificateVerify\n   The CertificateVerify\
    \ message for TLS 1.3 is an Ieee1609Dot2Data of\n   type signed, where the signature\
    \ contained in this Ieee1609Dot2Data\n   was generated using an ITS certificate.\
    \  This certificate may include\n   multiple PSIDs.  When a CertificateVerify\
    \ message of this form is\n   used, the HeaderInfo within the Ieee1609Dot2Data\
    \ MUST have the\n   pduFunctionalType field present and set to tlsHandshake. \
    \ The\n   background to this requirement is as follows: an ITS certificate may\n\
    \   (depending on the definition of the application associated with its\n   PSID(s))\
    \ be used to directly sign messages or to sign TLS\n   CertificateVerify messages,\
    \ or both.  To prevent the possibility that\n   a signature generated in one context\
    \ could be replayed in a different\n   context, i.e., that a message signature\
    \ could be replayed as a\n   CertificateVerify, or vice versa, the pduFunctionalType\
    \ field\n   provides a statement of intent by the signer as to the intended use\n\
    \   of the signed message.  If the pduFunctionalType field is absent, the\n  \
    \ message is a directly signed message for the application and MUST NOT\n   be\
    \ interpreted as a CertificateVerify.\n   Note that each PSID is owned by an owning\
    \ organization that has sole\n   rights to define activities associated with that\
    \ PSID.  If an\n   application specifier wishes to expand activities associated\
    \ with an\n   existing PSID (for example, to include activities over a secure\n\
    \   session such as specified in this document), that application\n   specifier\
    \ must negotiate with the PSID owner to have that\n   functionality added to the\
    \ official specification of activities\n   associated with that PSID.\n"
- title: 8.  Privacy Considerations
  contents:
  - "8.  Privacy Considerations\n   For privacy considerations in a vehicular environment,\
    \ the ITS\n   certificate is used for many reasons:\n   *  In order to address\
    \ the risk of a personal data leakage, messages\n      exchanged for vehicle-to-vehicle\
    \ (V2V) communications are signed\n      using ITS pseudonym certificates.\n \
    \  *  The purpose of these certificates is to provide privacy and\n      minimize\
    \ the exchange of private data.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   IANA maintains the \"Transport Layer Security (TLS)\
    \ Extensions\"\n   registry with a subregistry called \"TLS Certificate Types\"\
    .\n   Value 3 was previously assigned for \"1609Dot2\" and included a\n   reference\
    \ to draft-tls-certieee1609.  IANA has updated this entry to\n   reference this\
    \ RFC.\n"
- title: 10.  Normative References
  contents:
  - "10.  Normative References\n   [IEEE1609.12]\n              IEEE, \"IEEE Standard\
    \ for Wireless Access in Vehicular\n              Environments (WAVE) - Identifier\
    \ Allocations\", IEEE\n              1609.12-2016, December 2016.\n   [IEEE1609.2]\n\
    \              IEEE, \"IEEE Standard for Wireless Access in Vehicular\n      \
    \        Environments -- Security Services for Applications and\n            \
    \  Management Messages\", IEEE Standard 1609.2-2016,\n              DOI 10.1109/IEEESTD.2016.7426684,\
    \ March 2016,\n              <https://doi.org/10.1109/IEEESTD.2016.7426684>.\n\
    \   [IEEE1609.2b]\n              IEEE, \"IEEE Standard for Wireless Access in\
    \ Vehicular\n              Environments--Security Services for Applications and\n\
    \              Management Messages - Amendment 2--PDU Functional Types\n     \
    \         and Encryption Key Management\", IEEE 1609.2b-2019, June\n         \
    \     2019.\n   [ISO21177] ISO, \"Intelligent transport systems - ITS station\
    \ security\n              services for secure session establishment and\n    \
    \          authentication between trusted devices\", ISO/TS\n              21177:2019,\
    \ August 2019.\n   [ITU-TX.696]\n              ITU-T, \"Information technology\
    \ - ASN.1 encoding rules:\n              Specification of Octet Encoding Rules\
    \ (OER)\",\n              Recommendation ITU-T X.696, August 2015.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n\
    \              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC7250]  Wouters,\
    \ P., Ed., Tschofenig, H., Ed., Gilmore, J.,\n              Weiler, S., and T.\
    \ Kivinen, \"Using Raw Public Keys in\n              Transport Layer Security\
    \ (TLS) and Datagram Transport\n              Layer Security (DTLS)\", RFC 7250,\
    \ DOI 10.17487/RFC7250,\n              June 2014, <https://www.rfc-editor.org/info/rfc7250>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8446]  Rescorla,\
    \ E., \"The Transport Layer Security (TLS) Protocol\n              Version 1.3\"\
    , RFC 8446, DOI 10.17487/RFC8446, August 2018,\n              <https://www.rfc-editor.org/info/rfc8446>.\n\
    \   [SAEJ29453]\n              SAE, \"Requirements for V2I Weather Applications\"\
    , J2945/3,\n              June 2017.\n   [SAEJ29455]\n              SAE, \"Service\
    \ Specific Permissions and Security Guidelines\n              for Connected Vehicle\
    \ Applications\", J2945/5_202002,\n              February 2020.\n   [TS102941]\
    \ ETSI, \"Intelligent Transport Systems (ITS); Security;\n              Trust\
    \ and Privacy Management\", ETSI TS 102 941, 2018.\n   [TS103097] ETSI, \"Intelligent\
    \ Transport Systems (ITS); Security;\n              Security header and certificate\
    \ formats\", ETSI TS 103 097,\n              2017.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors wish to thank Adrian Farrel, Eric Rescola, Russ\
    \ Housley,\n   Ilari Liusvaara, and Benjamin Kaduk for their feedback and\n  \
    \ suggestions on improving this document.  Thanks are due to Sean\n   Turner for\
    \ his valuable and detailed comments.  Special thanks to\n   Panos Kampanakis,\
    \ Jasja Tijink, and Bill Lattin for their guidance\n   and support of the document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mounira Msahli (editor)\n   Telecom Paris\n   France\n\
    \   Email: mounira.msahli@telecom-paris.fr\n   Nancy Cam-Winget (editor)\n   Cisco\n\
    \   United States of America\n   Email: ncamwing@cisco.com\n   William Whyte (editor)\n\
    \   Qualcomm\n   United States of America\n   Email: wwhyte@qti.qualcomm.com\n\
    \   Ahmed Serhrouchni\n   Telecom Paris\n   France\n   Email: ahmed.serhrouchni@telecom-paris.fr\n\
    \   Houda Labiod\n   Telecom Paris\n"
