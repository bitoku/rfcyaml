- title: __initial_text__
  contents:
  - "            The E.164 to Uniform Resource Identifiers (URI)\n     Dynamic Delegation\
    \ Discovery System (DDDS) Application (ENUM)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses the use of the Domain Name System (DNS)\
    \ for\n   storage of data associated with E.164 numbers, and for resolving\n \
    \  those numbers into URIs that can be used (for example) in telephony\n   call\
    \ setup.  This document also describes how the DNS can be used to\n   identify\
    \ the services associated with an E.164 number.  This document\n   obsoletes RFC\
    \ 3761.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6116.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Terminology ................................................3\n  \
    \ 2. Use of These Mechanisms for Private Dialing Plans ...............4\n   3.\
    \ The ENUM Application Specifications .............................4\n      3.1.\
    \ Application Unique String ..................................4\n      3.2. First\
    \ Well Known Rule ......................................5\n      3.3. Expected\
    \ Output ............................................5\n      3.4. Valid Databases\
    \ ............................................5\n           3.4.1. Optional Name\
    \ Server Additional Section Processing ..6\n           3.4.2. Flags ...............................................6\n\
    \           3.4.3. Service Parameters ..................................7\n  \
    \                3.4.3.1. ENUM Services ..............................7\n    \
    \              3.4.3.2. Compound NAPTRs and Implicit\n                       \
    \    ORDER/PREFERENCE Values ....................8\n      3.5. The ENUM Algorithm\
    \ Always Returns a Single Rule ............8\n      3.6. Case Sensitivity in ENUM\
    \ ...................................8\n      3.7. Collision Avoidance ........................................9\n\
    \   4. ENUM Service Example ...........................................10\n  \
    \ 5. Clarification of DDDS Use in ENUM ..............................10\n    \
    \  5.1. Collected Implications for ENUM Provisioning ..............11\n      5.2.\
    \ Collected Implications for ENUM Clients ...................13\n           5.2.1.\
    \ Non-Terminal NAPTR Processing ......................15\n   6. IANA Considerations\
    \ ............................................16\n   7. Security Considerations\
    \ ........................................17\n      7.1. DNS Security ..............................................17\n\
    \      7.2. Caching Security ..........................................18\n  \
    \    7.3. Call Routing Security .....................................19\n    \
    \  7.4. URI Resolution Security ...................................19\n   8. Acknowledgements\
    \ ...............................................19\n   9. Changes from RFC 3761\
    \ ..........................................19\n   10. References ....................................................20\n\
    \      10.1. Normative References .....................................20\n  \
    \    10.2. Informative References ...................................21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document discusses the use of the Domain Name System\
    \ (DNS)\n   [RFC1034] [RFC1035] for storage of data associated with E.164 [E.164]\n\
    \   numbers, and for resolving those numbers into URIs that can be used\n   (for\
    \ example) in telephony call setup.  This document also describes\n   how the\
    \ DNS can be used to identify the services associated with an\n   E.164 number.\
    \  This document includes a Dynamic Delegation Discovery\n   System (DDDS) Application\
    \ specification, as detailed in the document\n   series described in [RFC3401].\
    \  This document obsoletes [RFC3761].\n   Using the process defined in this document,\
    \ International Public\n   Telecommunication Numbers in the international format\
    \ defined in\n   International Telecommunications Union (ITU) Recommendation E.164\n\
    \   [E.164] (called here \"E.164 numbers\") can be transformed into DNS\n   names.\
    \  Using existing DNS services (such as delegation through NS\n   records and\
    \ queries for NAPTR resource records), one can look up the\n   services associated\
    \ with that E.164 number.  This takes advantage of\n   standard DNS architectural\
    \ features of decentralized control and\n   management of the different levels\
    \ in the lookup process.\n   The domain \"e164.arpa\" has been assigned to provide\
    \ an infrastructure\n   in the DNS for storage of data associated with E.164 numbers.\
    \  To\n   facilitate distributed operations, this domain is divided into\n   subdomains.\
    \  Holders of E.164 numbers who want these numbers to be\n   listed in the DNS\
    \ should contact the appropriate zone administrator\n   as listed in the policy\
    \ attached to the zone.  One should start\n   looking for this information by\
    \ examining the SOA resource record\n   associated with the zone, just like in\
    \ normal DNS operations.\n   Of course, as with other domains, policies for such\
    \ listings will be\n   controlled on a subdomain basis and may differ in different\
    \ parts of\n   the world.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ BCP 14, RFC 2119\n   [RFC2119].\n   DNS resource record types mentioned in this\
    \ document are defined,\n   respectively, in [RFC1035] (NS, SOA, A, MX), [RFC3403]\
    \ (NAPTR), and\n   [RFC2782] (SRV).\n   All other capitalized terms are taken\
    \ from the vocabulary found in\n   the DDDS algorithm specification found in [RFC3402].\n"
- title: 2.  Use of These Mechanisms for Private Dialing Plans
  contents:
  - "2.  Use of These Mechanisms for Private Dialing Plans\n   Similar mechanisms\
    \ might be used for other kinds of digit strings\n   (such as numbers in private\
    \ dialing plans).  If these mechanisms are\n   used for dialing plans (or for\
    \ other unrelated digit strings), the\n   domain apex used for such translation\
    \ MUST NOT be e164.arpa, to avoid\n   conflict with this specification.\n   Also,\
    \ the Application Unique String (see Section 3.1) used with\n   dialing plans\
    \ SHOULD be the full number as specified, without the\n   leading '+' character.\
    \  The '+' character is used to further\n   distinguish E.164 numbers in international\
    \ format from dialed digit\n   strings or other digit sequences.\n      For example,\
    \ to address the E.164 number +44-3069-990038 a user\n      might dial \"03069990038\"\
    \ or \"00443069990038\" or \"011443069990038\".\n      These dialed digit strings\
    \ differ from one another, but none of\n      them start with the '+' character.\n\
    \   Finally, if these techniques are used for dialing plans or other\n   digit\
    \ strings, implementers and operators of systems using these\n   techniques for\
    \ such purpose MUST NOT describe these schemes as\n   \"ENUM\".  The initial \"\
    E\" in ENUM stands for E.164, and the term\n   \"ENUM\" is used exclusively to\
    \ describe application of these\n   techniques to E.164 numbers according to this\
    \ specification.\n"
- title: 3.  The ENUM Application Specifications
  contents:
  - "3.  The ENUM Application Specifications\n   This template defines the ENUM DDDS\
    \ Application according to the\n   rules and requirements found in [RFC3402].\
    \  The DDDS database used by\n   this Application is found in [RFC3403], which\
    \ is the document that\n   defines the NAPTR DNS resource record type.\n   ENUM\
    \ is designed as a way to translate from E.164 numbers to URIs\n   using NAPTR\
    \ records stored in DNS.  The First Well Known Rule for any\n   ENUM query creates\
    \ a key (a fully qualified domain name, or FQDN,\n   within the e164.arpa domain\
    \ apex) from an E.164 number.  This FQDN is\n   queried for NAPTR records and\
    \ returned records are processed and\n   interpreted according to this specification.\n"
- title: 3.1.  Application Unique String
  contents:
  - "3.1.  Application Unique String\n   The Application Unique String (AUS) is a\
    \ fully qualified E.164 number\n   minus any non-digit characters except for the\
    \ '+' character that\n   appears at the beginning of the number.  The '+' is kept\
    \ to provide a\n   well-understood anchor for the AUS in order to distinguish\
    \ it from\n   other telephone numbers that are not part of the E.164 namespace.\n\
    \   For example, the E.164 number could start out as \"+44-116-496-0348\".\n \
    \  To ensure that no syntactic sugar is allowed into the AUS, all non-\n   digits\
    \ except for '+' are removed, yielding \"+441164960348\".\n"
- title: 3.2.  First Well Known Rule
  contents:
  - "3.2.  First Well Known Rule\n   The First Well Known Rule converts an AUS into\
    \ an initial key.  That\n   key is used as an index into the Application's Rules\
    \ Database.  For\n   ENUM, the Rules Database is the DNS, so the key is a fully\
    \ qualified\n   domain name (FQDN).\n   In order to convert the AUS to a unique\
    \ key in this database, the\n   string is converted into a domain name according\
    \ to this algorithm:\n   1. Remove all characters with the exception of the digits.\
    \  For\n      example, given the E.164 number \"+44-20-7946-0148\" (which would\n\
    \      then have been converted into an AUS of \"+442079460148\"), this\n    \
    \  step would simply remove the leading '+', producing\n      \"442079460148\"\
    .\n   2. Reverse the order of the digits.  Example: \"841064970244\"\n   3. Put\
    \ dots ('.') between each digit.  Example:\n      \"8.4.1.0.6.4.9.7.0.2.4.4\"\n\
    \   4. Append the string \".e164.arpa.\" to the end and interpret as a\n     \
    \ domain name.  Example: 8.4.1.0.6.4.9.7.0.2.4.4.e164.arpa.\n   The E.164 namespace\
    \ and this Application's database are organized in\n   such a way that it is possible\
    \ to go directly from the name to the\n   smallest granularity of the namespace\
    \ directly from the name itself,\n   so no further processing is required to generate\
    \ the initial key.\n   This domain name is used to request NAPTR records.  Each\
    \ of these\n   records may contain the end result or, if its flags field is empty,\n\
    \   produces a new key in the form of a domain name that is used to\n   request\
    \ further NAPTR records from the DNS.\n"
- title: 3.3.  Expected Output
  contents:
  - "3.3.  Expected Output\n   The output of the last DDDS loop is a Uniform Resource\
    \ Identifier in\n   its absolute form according to the <absolute-URI> production\
    \ in the\n   Collected ABNF found in [RFC3986].\n"
- title: 3.4.  Valid Databases
  contents:
  - "3.4.  Valid Databases\n   At present only one DDDS Database is specified for\
    \ this Application.\n   \"Dynamic Delegation Discovery System (DDDS) Part Three:\
    \ The DNS\n   Database\" [RFC3403] specifies a DDDS Database that uses the NAPTR\
    \ DNS\n   resource record to contain the rewrite Rules.  The keys for this\n \
    \  database are encoded as domain names.\n   The character set used for the substitution\
    \ expression is UTF-8\n   [RFC3629].  The allowed input characters are all those\
    \ characters\n   that are allowed anywhere in an E.164 number.  The characters\
    \ allowed\n   to be in a key are those that are currently defined for DNS domain\n\
    \   names.\n"
- title: 3.4.1.  Optional Name Server Additional Section Processing
  contents:
  - "3.4.1.  Optional Name Server Additional Section Processing\n   Some nameserver\
    \ implementations attempt to be intelligent about items\n   that are inserted\
    \ into the additional information section of a given\n   DNS response.  For example,\
    \ BIND will attempt to determine if it is\n   authoritative for a domain whenever\
    \ it encodes one into a packet.  If\n   it is, then it will insert any A records\
    \ it finds for that domain\n   into the additional information section of the\
    \ answer until the\n   packet reaches the maximum length allowed.  It is therefore\n\
    \   potentially useful for a client to check for this additional\n   information.\n\
    \   It is also easy to contemplate an ENUM enhanced nameserver that\n   understands\
    \ the actual contents of the NAPTR records it is serving\n   and inserts more\
    \ appropriate information into the additional\n   information section of the response.\
    \  Thus, DNS servers MAY interpret\n   flag values and use that information to\
    \ include appropriate resource\n   records in the additional information section\
    \ of the DNS packet.\n   Clients are encouraged to check for additional information\
    \ but are\n   not required to do so.  See Section 4.2 of [RFC3403] (\"Additional\n\
    \   Information Processing\") for more information on NAPTR records and\n   the\
    \ additional information section of a DNS response packet.\n"
- title: 3.4.2.  Flags
  contents:
  - "3.4.2.  Flags\n   This Database contains a field that contains flags that signal\
    \ when\n   the DDDS algorithm has finished.  At this time only one flag, \"U\"\
    , is\n   defined.  This means that this Rule is the last one and that the\n  \
    \ output of the Rule is a URI [RFC3986].  See Section 4.3 of [RFC3404].\n   If\
    \ a client encounters a resource record with an unknown flag, it\n   MUST ignore\
    \ it and move to the next Rule.  This test takes precedence\n   over any ordering\
    \ since flags can control the interpretation placed\n   on fields.\n   A novel\
    \ flag might change the interpretation of the Regexp and/or\n   Replacement fields\
    \ such that it is impossible to determine if a\n   resource record matched a given\
    \ target.\n   If this flag is not present, then this Rule is non-terminal.  If\
    \ a\n   Rule is non-terminal, then the result produced by this rewrite Rule\n\
    \   MUST be an FQDN.  Clients MUST use this result as the new Key in the\n   DDDS\
    \ loop (i.e., the client will query for NAPTR resource records at\n   this FQDN).\n"
- title: 3.4.3.  Service Parameters
  contents:
  - "3.4.3.  Service Parameters\n   Service Parameters for this Application take the\
    \ following Augmented\n   Backus-Naur Form (ABNF, specified in [RFC5234]) and\
    \ are found in the\n   Services field of the NAPTR record that holds a terminal\
    \ Rule.  Where\n   the NAPTR holds a non-terminal Rule, the Services field SHOULD\
    \ be\n   empty, and clients SHOULD ignore its content.\n         service-field\
    \ = \"E2U\" 1*(servicespec)\n         servicespec   = \"+\" enumservice\n    \
    \     enumservice   = type 0*(subtypespec)\n         subtypespec   = \":\" subtype\n\
    \         type          = 1*32(ALPHA / DIGIT / \"-\")\n         subtype      \
    \ = 1*32(ALPHA / DIGIT / \"-\")\n   In other words, a non-optional \"E2U\" (used\
    \ to denote ENUM only\n   Rewrite Rules in order to mitigate record collisions)\
    \ is followed by\n   one or more Enumservices that indicate the class of functionality\
    \ a\n   given end point offers.  Each Enumservice is indicated by an initial\n\
    \   '+' character.\n"
- title: 3.4.3.1.  ENUM Services
  contents:
  - "3.4.3.1.  ENUM Services\n   Enumservices may be specified and registered via\
    \ the process defined\n   in \"IANA Registration of Enumservices: Guide, Template,\
    \ and IANA\n   Considerations\" [RFC6117].  This registration process is not open\
    \ to\n   any Enumservice that has '-' as the second character in its type\n  \
    \ string.\n   In particular, this registration process is not open to Enumservice\n\
    \   types starting with the facet \"X-\".  This \"X-\" facet is reserved for\n\
    \   experimental or trial use, and any such Enumservices cannot be\n   registered\
    \ using the normal process.\n   Finally, any Enumservice type that starts with\
    \ the facet \"P-\" is\n   intended for use exclusively on private networks.  As\
    \ such, NAPTRs\n   containing Enumservice types starting \"P-\" should not be\
    \ seen on the\n   global Internet.  Even if an ENUM client recognizes and can\
    \ engage in\n   the Enumservice, it may be incapable of resolving the URI generated\n\
    \   by the containing NAPTR.  These Enumservices WILL NOT be registered.\n   Such\
    \ Enumservices MUST NOT be provisioned in any system that provides\n   answers\
    \ to DNS queries for NAPTR resource record sets (RRSets) from\n   entities outside\
    \ the private network context in which these\n   Enumservices are intended for\
    \ use.  Unless an ENUM client is sure\n   that it is connected to the private\
    \ network for which these NAPTRs\n   are provisioned and intended, it MUST discard\
    \ any NAPTR with an\n   Enumservice type that starts with the \"P-\" facet.\n"
- title: 3.4.3.2.  Compound NAPTRs and Implicit ORDER/PREFERENCE Values
  contents:
  - "3.4.3.2.  Compound NAPTRs and Implicit ORDER/PREFERENCE Values\n   It is possible\
    \ to have more than one Enumservice associated with a\n   single NAPTR.  These\
    \ Enumservices share the same Regexp field and so\n   generate the same URI. \
    \ Such a \"compound\" NAPTR could well be used to\n   indicate a mobile phone\
    \ that supports both \"voice:tel\" and \"sms:tel\"\n   Enumservices.  The Services\
    \ field in that case would be\n   \"E2U+voice:tel+sms:tel\".\n   A compound NAPTR\
    \ can be treated as a set of NAPTRs that each hold a\n   single Enumservice. \
    \ These reconstructed NAPTRs share the same ORDER\n   and PREFERENCE/PRIORITY\
    \ field values but should be treated as if each\n   had a logically different\
    \ priority.  A left-to-right priority is\n   assumed.\n"
- title: 3.5.  The ENUM Algorithm Always Returns a Single Rule
  contents:
  - "3.5.  The ENUM Algorithm Always Returns a Single Rule\n   The ENUM algorithm\
    \ always returns a single Rule.  Individual\n   applications may have application-specific\
    \ knowledge or facilities\n   that allow them to present multiple results or speed\
    \ selection, but\n   these should never change the operation of the algorithm.\n"
- title: 3.6.  Case Sensitivity in ENUM
  contents:
  - "3.6.  Case Sensitivity in ENUM\n   Case sensitivity was not mentioned at all\
    \ in [RFC3761] (or\n   [RFC2916]), but has been seen as an issue during interoperability\n\
    \   test events since then.  There are a lot of case-sensitive clients in\n  \
    \ current deployment.\n   The only place where NAPTR field content is case sensitive\
    \ is in any\n   static text in the Repl sub-field of the Regexp field (see Section\n\
    \   3.2 of [RFC3402] for Regexp field definitions).  In that sub-field,\n   case\
    \ must be preserved when generating the record output.  Elsewhere,\n   case sensitivity\
    \ is not used.\n   Where ENUM clients can be exposed to NAPTR records that may\
    \ hold\n   field content of different capitalization, clients MUST use case-\n\
    \   insensitive processing.  ENUM clients that operate using the Internet\n  \
    \ to send their queries, typically called \"Public ENUM\" scenarios, fall\n  \
    \ into this category.\n   Some ENUM clients operate within closed networks; for\
    \ example, within\n   isolated data networks operated by Communication Service\
    \ Providers.\n   These are typically called \"Infrastructure ENUM\" scenarios.\
    \  All\n   zones provisioned within such closed networks usually have a known\n\
    \   capitalization for ENUM record string content, as provisioning\n   systems\
    \ for such networks are often carefully controlled.  In such an\n   environment,\
    \ clients are never exposed to records with capitalization\n   that is \"unexpected\"\
    \ and so can be (and have been) designed with case\n   sensitive processing. \
    \ Only if a client is known to operate in an\n   environment in which capitalization\
    \ of all ENUM records it will\n   encounter is known and controlled MAY that client\
    \ use case sensitive\n   processing.\n"
- title: 3.7.  Collision Avoidance
  contents:
  - "3.7.  Collision Avoidance\n   An ENUM-compliant application MUST only pass numbers\
    \ to the ENUM\n   client query process that it believes are E.164 numbers (e.g.,\
    \ it\n   MUST NOT pass dialed digit strings to the ENUM query process).\n   Since\
    \ number plans may change over time, it can be impossible for a\n   client to\
    \ know if the number it intends to query is assigned and\n   active within the\
    \ current number plan.  Thus it is important that\n   such clients can distinguish\
    \ data associated with the E.164 number\n   plan from that associated with other\
    \ digit strings (i.e., numbers NOT\n   in accordance with the E.164 number plan).\n\
    \   It is the responsibility of operators that are provisioning data into\n  \
    \ domains to ensure that data associated with a query on an E.164\n   number cannot\
    \ be mistaken for data associated with other uses of\n   NAPTRs.\n   Three techniques\
    \ are used to achieve this:\n   o  the domain apex used for purposes other than\
    \ data associated with\n      the E.164 number plan MUST NOT be e164.arpa.\n \
    \  o  for use other than with E.164 numbers, the Application Unique\n      String\
    \ MUST NOT begin with the '+' character, whilst for ENUM use,\n      the AUS MUST\
    \ begin with this character.\n   o  NAPTRs that are intended for other DDDS applications\
    \ MUST NOT\n      include the E2U token in their service field, whilst NAPTRs\n\
    \      intended for ENUM use MUST include this token.\n"
- title: 4.  ENUM Service Example
  contents:
  - "4.  ENUM Service Example\n      $ORIGIN 3.8.0.0.6.9.2.3.6.1.4.4.e164.arpa.\n\
    \       NAPTR 100 50 \"u\" \"E2U+sip\"\n           \"!^(\\\\+441632960083)$!sip:\\\
    \\1@example.com!\"    .\n       NAPTR 100 51 \"u\" \"E2U+h323\"\n           \"\
    !^\\\\+441632960083$!h323:operator@example.com!\"    .\n       NAPTR 100 52 \"\
    u\" \"E2U+email:mailto\"\n           \"!^.*$!mailto:info@example.com!\"    .\n\
    \   This describes that the domain 3.8.0.0.6.9.2.3.6.1.4.4.e164.arpa. is\n   preferably\
    \ contacted by SIP, secondly via H.323 for voice, and\n   thirdly by SMTP for\
    \ messaging.  Note that the Enumservice tokens\n   \"sip\", \"h323\", and \"email\"\
    \ are Enumservice Types registered with\n   IANA, and they have no implicit connection\
    \ with the protocols or URI\n   schemes with the same names.\n   In all cases,\
    \ the next step in the resolution process is to use the\n   resolution mechanism\
    \ for each of the protocols (specified by the URI\n   schemes sip, h323, and mailto)\
    \ to know what node to contact.\n   In each of the first two records, the ERE\
    \ sub-field matches only\n   queries that have been made for the telephone number\
    \ +441632960083.\n   In the last record, the ERE matches any Application Unique\
    \ String\n   value.  The first record also demonstrates how the matched pattern\n\
    \   can be used in the generated URI.\n   Note that where NAPTR resource records\
    \ are shown in DNS master file\n   syntax (as in this example above), each backslash\
    \ must itself be\n   escaped using a second backslash.  The DNS on-the-wire packet\
    \ will\n   have only a single backslash in each case.\n"
- title: 5.  Clarification of DDDS Use in ENUM
  contents:
  - "5.  Clarification of DDDS Use in ENUM\n   ENUM is a DDDS Application.  This means\
    \ that it relies on the DDDS\n   for its operation.  DDDS is designed to be flexible,\
    \ but that opens\n   the possibility of differences of interpretation.  This section\
    \ is\n   intended to cover ENUM-specific interpretation of text within the\n \
    \  DDDS specifications.  The goal is to ensure interoperability between\n   ENUM\
    \ clients and provisioning systems used to populate domains with\n   E2U NAPTRs.\n\
    \   As part of on-going development work on the ENUM specifications,\n   [RFC5483]\
    \ provides an (informative) analysis of the way in which ENUM\n   client and provisioning\
    \ system implementations behave and the\n   interoperability issues that have\
    \ arisen.  The following\n   recommendations reflect that analysis, and further\
    \ narrative\n   explaining the issues can be found in that RFC.\n"
- title: 5.1.  Collected Implications for ENUM Provisioning
  contents:
  - "5.1.  Collected Implications for ENUM Provisioning\n   ENUM NAPTRs SHOULD NOT\
    \ include characters outside the printable US-\n   ASCII equivalent range (U+0020\
    \ to U+007E) unless it is clear that all\n   ENUM clients they are designed to\
    \ support will be able to process\n   such characters correctly.  If ENUM zone\
    \ provisioning systems require\n   non-ASCII characters, these systems MUST encode\
    \ the non-ASCII data to\n   emit only US-ASCII characters by applying the appropriate\
    \ mechanism\n   (such as those in [RFC3492], [RFC3987]).  Non-printable characters\n\
    \   SHOULD NOT be used, as ENUM clients may need to present NAPTR content\n  \
    \ in a human-readable form.\n   The case-sensitivity flag ('i') is inappropriate\
    \ for ENUM, and SHOULD\n   NOT be provisioned into the Regexp field of E2U NAPTRs.\n\
    \   The Registrant and the ENUM zone provisioning system he or she uses\n   SHOULD\
    \ NOT rely on ENUM clients solely taking account of the value of\n   the ORDER\
    \ and the PREFERENCE/PRIORITY fields in ENUM NAPTRs.  Thus, a\n   Registrant SHOULD\
    \ place into his or her zone only contacts that he or\n   she is willing to support;\
    \ even those with the worst ORDER and\n   PREFERENCE/PRIORITY values MAY be selected\
    \ by an end user.\n   All E2U NAPTRs SHOULD hold a default value in their ORDER\
    \ field.  A\n   value of \"100\" is recommended, as it seems to be used in most\n\
    \   provisioned domains.\n      Some ENUM clients have been known to pre-discard\
    \ NAPTRs within an\n      RRSet simply because these records do not have the lowest\
    \ ORDER\n      value found in that RRSet.  Other ENUM client implementations\n\
    \      appear to have confused ORDER and PREFERENCE/PRIORITY fields,\n      using\
    \ the latter as the major sort term rather than the former as\n      specified.\
    \  Conversely, ENUM zones have been provisioned within\n      which the ORDER\
    \ value varies but the PREFERENCE/PRIORITY field\n      value is static.  This\
    \ may have been intentional, but given the\n      different client behavior in\
    \ the face of varying ORDER field\n      values, it may not produce the desired\
    \ response.\n   Multiple NAPTRs with identical ORDER and identical PREFERENCE/\n\
    \   PRIORITY field values SHOULD NOT be provisioned into an RRSet unless\n   the\
    \ intent is that these NAPTRs are truly identical and there is no\n   preference\
    \ between them.  Implementers SHOULD NOT assume that the DNS\n   will deliver\
    \ NAPTRs within an RRSet in a particular sequence.\n   An ENUM zone provisioning\
    \ system SHOULD assume that, if it generates\n   compound NAPTRs, the Enumservices\
    \ will normally be processed in left-\n   to-right order within such NAPTRs.\n\
    \   ENUM zone provisioning systems SHOULD assume that, once a non-\n   terminal\
    \ NAPTR has been selected for processing, the ORDER field\n   value in a domain\
    \ referred to by that non-terminal NAPTR will be\n   considered only within the\
    \ context of that referenced domain (i.e.,\n   the ORDER value will be used only\
    \ to sort within the current RRSet\n   and will not be used in the processing\
    \ of NAPTRs in any other RRSet).\n   ENUM zone provisioning systems SHOULD use\
    \ '!' (U+0021) as their\n   Regexp delimiter character.\n   If the Regexp delimiter\
    \ is a character in the static text of the Repl\n   sub-field, it MUST be \"escaped\"\
    \ using the escaped-delimiter\n   production of the BNF specification shown in\
    \ Section 3.2 of [RFC3402]\n   (i.e., \"\\!\", U+005C U+0021).  Note that when\
    \ a NAPTR resource record\n   is entered in DNS master file syntax, the backslash\
    \ itself must be\n   escaped using a second backslash.\n   If present in the ERE\
    \ sub-field of an ENUM NAPTR, the literal\n   character '+' MUST be escaped as\
    \ \"\\+\" (i.e.  U+005C U+002B).  Note\n   that, as always, when a NAPTR resource\
    \ record is entered in DNS\n   master file syntax, the backslash itself must be\
    \ escaped using a\n   second backslash.\n   Whilst this client behavior is non-compliant,\
    \ ENUM provisioning\n   systems and their users should be aware that some ENUM\
    \ clients have\n   been detected with poor (or no) support for non-trivial ERE\
    \ sub-field\n   expressions.\n   ENUM provisioning systems SHOULD be cautious\
    \ in the use of multiple\n   back-reference patterns in the Repl sub-field of\
    \ NAPTRs they\n   provision.  Some clients have limited buffer space for character\n\
    \   expansion when generating URIs.  These provisioning systems SHOULD\n   check\
    \ the back-reference replacement patterns they use, ensuring that\n   regular\
    \ expression processing will not produce excessive-length URIs.\n   ENUM zones\
    \ MUST NOT be provisioned with NAPTRs according to the\n   obsolete syntax of\
    \ [RFC2916], and MUST be provisioned with NAPTRs in\n   which the Services field\
    \ is according to Section 3.4.3 of this\n   document.\n      [RFC2915] and [RFC2916]\
    \ have been obsoleted by [RFC3401]-[RFC3404]\n      and by this document, respectively.\n\
    \   Enumservices in which the Enumservice type starts with the facet \"P-\"\n\
    \   MUST NOT be provisioned in any system that provides answers to DNS\n   queries\
    \ for NAPTR resource record sets from entities outside the\n   private network\
    \ context in which these Enumservices are intended for\n   use.\n   As current\
    \ support is limited, non-terminal NAPTRs SHOULD NOT be\n   provisioned in ENUM\
    \ zones unless it is clear that all ENUM clients\n   that this environment supports\
    \ can process these.\n   When populating a set of domains with NAPTRs, ENUM zone\
    \ provisioning\n   systems SHOULD NOT configure non-terminal NAPTRs so that more\
    \ than 5\n   such NAPTRs will be processed in an ENUM query.\n   In a non-terminal\
    \ NAPTR that may be encountered in an ENUM query\n   (i.e., one with an empty\
    \ Flags field), the Services field SHOULD be\n   empty.\n   A non-terminal NAPTR\
    \ MUST include its target domain in the\n   (non-empty) Replacement field, as\
    \ this field will be interpreted as\n   holding the FQDN that forms the next key\
    \ output from this non-\n   terminal Rule.  The Regexp field MUST be empty in\
    \ a non-terminal\n   NAPTR intended to be encountered during an ENUM query.\n"
- title: 5.2.  Collected Implications for ENUM Clients
  contents:
  - "5.2.  Collected Implications for ENUM Clients\n   If a NAPTR is discarded, this\
    \ SHOULD NOT cause the whole ENUM query\n   to terminate and processing SHOULD\
    \ continue with the next NAPTR in\n   the returned RRSet.\n   ENUM clients SHOULD\
    \ NOT discard NAPTRs in which they detect\n   characters outside the US-ASCII\
    \ printable range (0x20 to 0x7E\n   hexadecimal).\n   ENUM clients MAY discard\
    \ NAPTRs that have octets in the Flags,\n   Services, or Regexp fields that have\
    \ byte values outside the US-ASCII\n   equivalent range (i.e., byte values above\
    \ 0x7F).  Clients MUST be\n   ready to encounter NAPTRs with such values without\
    \ failure.\n   ENUM clients MUST sort the records of a retrieved NAPTR RRSet into\n\
    \   sequence using the ORDER and PREFERENCE fields of those records.  The\n  \
    \ ORDER is to be treated as the major sort term, with lowest numerical\n   values\
    \ being earlier in the sequence.  The PREFERENCE/PRIORITY field\n   is to be treated\
    \ as the minor sort term, with lowest numerical values\n   being earlier in the\
    \ sequence.\n   ENUM clients SHOULD NOT discard a NAPTR record until it is considered\n\
    \   or a record previous to it in the evaluation sequence has been\n   accepted.\n\
    \      Notably, if a record has a \"worse\" ORDER value than others in this\n\
    \      RRSet, that record MUST NOT be discarded before consideration\n      unless\
    \ a record has been accepted as the result of this ENUM\n      query.\n   Where\
    \ the ENUM client presents a list of possible URLs to the end\n   user for his\
    \ or her choice, it MAY present all NAPTRs -- not just the\n   ones with the lowest\
    \ currently unprocessed ORDER field value.  The\n   client SHOULD observe the\
    \ ORDER and PREFERENCE/PRIORITY values\n   specified by the Registrant.\n   ENUM\
    \ clients SHOULD accept all NAPTRs with identical ORDER and\n   identical PREFERENCE/PRIORITY\
    \ field values, and process them in the\n   sequence in which they appear in the\
    \ DNS response.  (There is no\n   benefit in further randomizing the order in\
    \ which these are\n   processed, as intervening DNS Servers might have done this\
    \ already).\n   ENUM clients SHOULD consider the ORDER field value only when sorting\n\
    \   NAPTRs within a single RRSet.  The ORDER field value SHOULD NOT be\n   taken\
    \ into account when processing NAPTRs across a sequence of DNS\n   queries created\
    \ by traversal of non-terminal NAPTR references.\n   ENUM clients receiving compound\
    \ NAPTRs (i.e., ones with more than one\n   Enumservice) SHOULD process these\
    \ Enumservices using a left-to-right\n   sort ordering, so that the first Enumservice\
    \ to be processed will be\n   the leftmost one, and the last will be the rightmost\
    \ one.\n   ENUM clients MUST be ready to process NAPTRs that use a different\n\
    \   character from '!' as their Regexp Delimiter without failure.\n   ENUM clients\
    \ SHOULD NOT assume that the delimiter is the last\n   character of the Regexp\
    \ field.\n      Unless they are sure that in their environment this is the case,\n\
    \      in general an ENUM client may still encounter NAPTRs that have\n      been\
    \ provisioned with a following 'i' (case-insensitive) flag,\n      even though\
    \ that flag has no effect at all in an ENUM scenario.\n   ENUM clients SHOULD\
    \ discard NAPTRs that have more or less than 3\n   unescaped instances of the\
    \ delimiter character within the Regexp\n   field.\n      In the spirit of being\
    \ liberal with what it will accept, if the\n      ENUM client is sure how the\
    \ Regexp field should be interpreted, it\n      MAY choose to process the NAPTR\
    \ even in the face of an incorrect\n      number of unescaped delimiter characters.\
    \  If it is not clear how\n      the Regexp field should be interpreted, the client\
    \ MUST discard\n      the NAPTR.\n   ENUM clients MUST be ready to process NAPTRs\
    \ that have non-trivial\n   patterns in their ERE sub-field values without failure.\n\
    \   ENUM clients MUST be ready to process NAPTRs with many copies of\n   back-reference\
    \ patterns within the Repl sub-field without failure.\n   ENUM clients MUST be\
    \ ready to process NAPTRs with a DDDS Application\n   identifier other than 'E2U'\
    \ without failure.\n   When an ENUM client encounters a compound NAPTR (i.e.,\
    \ one containing\n   more than one Enumservice) and cannot process or cannot recognize\
    \ one\n   of the Enumservices within it, that ENUM client SHOULD ignore this\n\
    \   Enumservice and continue with the next Enumservice within this\n   NAPTR's\
    \ Services field, discarding the NAPTR only if it cannot handle\n   any of the\
    \ Enumservices contained.  These conditions SHOULD NOT be\n   considered errors.\n\
    \   ENUM clients MUST support ENUM NAPTRs according to syntax defined in\n   Section\
    \ 3.4.3.  ENUM clients SHOULD also support ENUM NAPTRs\n   according to the obsolete\
    \ syntax of [RFC2916]; there are still zones\n   that hold \"old\" syntax NAPTRs.\
    \  The informational [RFC3824]\n   recommended such support.\n   Unless an ENUM\
    \ client is sure that it is connected to the private\n   network for which these\
    \ NAPTRs are provisioned and intended, it MUST\n   discard any NAPTR with an Enumservice\
    \ type that starts with the \"P-\"\n   facet.\n"
- title: 5.2.1.  Non-Terminal NAPTR Processing
  contents:
  - "5.2.1.  Non-Terminal NAPTR Processing\n   ENUM clients MUST be ready to process\
    \ NAPTRs with an empty Flags\n   field (\"non-terminal\" NAPTRs) without failure.\
    \  More generally, non-\n   terminal NAPTR processing SHOULD be implemented, but\
    \ ENUM clients MAY\n   discard non-terminal NAPTRs they encounter.\n   ENUM clients\
    \ SHOULD ignore any content of the Services field when\n   encountering a non-terminal\
    \ NAPTR with an empty Flags field.\n   ENUM clients receiving a non-terminal NAPTR\
    \ with an empty Flags field\n   MUST treat the Replacement field as holding the\
    \ FQDN to be used in\n   the next round of the ENUM query.  An ENUM client MUST\
    \ discard such a\n   non-terminal NAPTR if the Replacement field is empty or does\
    \ not\n   contain a valid FQDN.  By definition, it follows that the Regexp\n \
    \  field will be empty in such a non-terminal NAPTR.  If present in a\n   non-terminal\
    \ NAPTR, a non-empty Regexp field MUST be ignored by ENUM\n   clients.\n   If\
    \ a problem is detected when processing an ENUM query across\n   multiple domains\
    \ (by following non-terminal NAPTR references), the\n   ENUM query SHOULD NOT\
    \ be abandoned, but instead processing SHOULD\n   continue at the next NAPTR after\
    \ the non-terminal NAPTR that referred\n   to the domain in which the problem\
    \ would have occurred.\n   If all NAPTRs in a domain traversed as a result of\
    \ a reference in a\n   non-terminal NAPTR have been discarded, the ENUM client\
    \ SHOULD\n   continue its processing with the next NAPTR in the \"referring\"\
    \ RRSet\n   (i.e., the one including the non-terminal NAPTR that caused the\n\
    \   traversal).\n   ENUM clients MUST be prepared to encounter a referential loop\
    \ in\n   which a sequence of non-terminal NAPTRs are retrieved within an ENUM\n\
    \   query that refer back to an earlier FQDN.  ENUM clients MUST be able\n   to\
    \ detect and recover from such a loop, without failure.\n   ENUM clients MAY consider\
    \ a chain of more than 5 \"non-terminal\"\n   NAPTRs traversed in a single ENUM\
    \ query as an indication that a\n   referential loop has been entered.\n   When\
    \ a domain is about to be entered as the result of a reference in\n   a non-terminal\
    \ NAPTR, and the ENUM client has detected a potential\n   referential loop, the\
    \ client SHOULD discard the non-terminal NAPTR\n   from its processing and continue\
    \ with the next NAPTR in its list.  It\n   SHOULD NOT make the DNS query indicated\
    \ by that non-terminal NAPTR.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   RFC 2916 and then RFC 3761 (which this document replaces)\
    \ requested\n   IANA to delegate the E164.ARPA domain following instructions that\n\
    \   were provided by the IAB (as described in [RFC3245]).  The domain was\n  \
    \ delegated according to those instructions (which are published at\n   <http://www.ripe.net/data-tools/dns/enum/iab-instructions>).\n\
    \   Names within this zone are to be delegated to parties consistent with\n  \
    \ ITU Recommendation E.164.  The names allocated should be hierarchic\n   in accordance\
    \ with ITU Recommendation E.164, and the codes should be\n   assigned in accordance\
    \ with that Recommendation.\n   The IAB is to coordinate with the ITU Telecommunications\n\
    \   Standardization Bureau (TSB) if the technical contact for the domain\n   e164.arpa\
    \ is to change, as ITU TSB has an operational working\n   relationship with this\
    \ technical contact that would need to be\n   reestablished.\n   See [RFC6117]\
    \ for Enumservice-related IANA Considerations.\n"
- title: 7.  Security Considerations
  contents:
  - '7.  Security Considerations

    '
- title: 7.1.  DNS Security
  contents:
  - "7.1.  DNS Security\n   As ENUM uses DNS, which in its current form is an insecure\
    \ protocol,\n   there is no mechanism for ensuring that the data one gets back\
    \ is\n   authentic.  As ENUM is deployed on the global Internet, it is\n   expected\
    \ to be a popular target for various kinds of attacks, and\n   attacking the underlying\
    \ DNS infrastructure is one way of attacking\n   the ENUM service itself.\n  \
    \ There are multiple types of attacks that can happen against DNS that\n   ENUM\
    \ implementations should consider.  See Threat Analysis of the\n   Domain Name\
    \ System [RFC3833] for a review of the various threats to\n   the DNS.\n   Because\
    \ of these threats, a deployed ENUM service SHOULD include\n   mechanisms to mitigate\
    \ these threats.  Most of the threats can be\n   solved by verifying the authenticity\
    \ of the data via mechanisms such\n   as DNS Security (DNSSEC) [RFC4033].\n  \
    \ Others, such as Denial-Of-Service attacks, cannot be solved by data\n   authentication.\
    \  It is important to remember that these threats\n   include not only the NAPTR\
    \ lookups themselves, but also the various\n   records needed for the services\
    \ to be useful (for example NS, MX,\n   SRV, and A records).\n   Even if DNSSEC\
    \ is deployed, it cannot protect against every kind of\n   attack on DNS.  ENUM\
    \ is often used for number or address translation;\n   retrieving an address through\
    \ an ENUM lookup with DNSSEC support does\n   not, however, ensure that the service\
    \ is immune to attack.  It is\n   unwise for a service blindly to trust that the\
    \ address it has\n   retrieved is valid and that the entity to which it connects\
    \ using\n   that address is the service peer it intended to contact.  A service\n\
    \   SHOULD always authenticate the entity to which it connects during the\n  \
    \ service setup phase, and not rely on address or identity data\n   retrieved\
    \ outside that service.\n   Finally, as an ENUM service will be implementing some\
    \ type of\n   security mechanism, software that implements ENUM MUST be prepared\
    \ to\n   receive DNSSEC and other standardized DNS security responses,\n   including\
    \ large responses and other EDNS0 signaling (see [RFC2671]),\n   unknown resource\
    \ records (see [RFC3597]), and so on.\n"
- title: 7.2.  Caching Security
  contents:
  - "7.2.  Caching Security\n   The DNS architecture makes extensive use of caching\
    \ of records at\n   intermediary nodes to improve performance.  The propagation\
    \ time (for\n   changes to resource records to be reflected in query responses\
    \ to end\n   nodes) approaches the \"time to live\" value for those records. \
    \ There\n   may be a number of different resource records involved in the\n  \
    \ resolution of a communication target.  Changes to these records may\n   not\
    \ be synchronized (particularly if these resource records indicate\n   different\
    \ times to live).  Thus a change in any one of these records\n   may cause inappropriate\
    \ decisions on communications targets to be\n   made.  Given that DNS Update (specified\
    \ in [RFC2136]) can introduce\n   quite rapid changes in content in different\
    \ zones, these transient\n   states may become important.\n   Consider a typical\
    \ set of queries that follow an ENUM query that\n   returns a SIP URI (for details,\
    \ see [RFC3263]):\n   o  Evaluation of the SIP URI triggers a query on the SIP\
    \ domainpart\n      for D2U/D2T NAPTRs.\n   o  This in turn triggers a query on\
    \ that record's target domain for\n      SRV records.\n   o  The SRV records will\
    \ return the SIP server hostname, which will\n      trigger a further query on\
    \ that hostname for an A record to get\n      the server's associated IP address.\n\
    \   o  Finally, the local SIP User Agent Client will then attempt to\n      initiate\
    \ a communications session to that IP address.\n   The E2U NAPTR may have changed\
    \ its URI, indicating a new SIP\n   identity.  The D2U NAPTR for the SIP URI domainpart\
    \ may have changed\n   its target.  The SRV record pointed to by that D2U NAPTR\
    \ may have\n   changed its target hostname.  The hostname's A record may have\n\
    \   changed its IP address.  Finally, if the server exists in an\n   environment\
    \ where IP-addresses are dynamically assigned (for example,\n   when using DHCP\
    \ [RFC2131]), an unexpected end point may have been\n   allocated to the IP address\
    \ returned from the SIP resolution chain.\n   In environments where changes to\
    \ any of the chain of resource records\n   or dynamic assignments to IP addresses\
    \ occur, those systems\n   provisioning this data SHOULD take care to minimize\
    \ changes and to\n   consider the respective times to live of resource records\
    \ and/or DHCP\n   lease times.  Users of this data SHOULD take care to detect\
    \ and\n   recover from unintended communications session attempts; in a\n   transient\
    \ environment, these may occur.\n"
- title: 7.3.  Call Routing Security
  contents:
  - "7.3.  Call Routing Security\n   There are a number of countries (and other numbering\
    \ environments) in\n   which there are multiple providers of call routing and\
    \ number/name-\n   translation services.  In these areas, any system that permits\
    \ users,\n   or putative agents for users, to change routing or supplier\n   information\
    \ may provide incentives for changes that are actually\n   unauthorized (and,\
    \ in some cases, for denial of legitimate change\n   requests).  Such environments\
    \ should be designed with adequate\n   mechanisms for identification and authentication\
    \ of those requesting\n   changes and for authorization of those changes.\n"
- title: 7.4.  URI Resolution Security
  contents:
  - "7.4.  URI Resolution Security\n   A large amount of security issues have to do\
    \ with the resolution\n   process itself, and use of the URIs produced by the\
    \ DDDS mechanism.\n   Those have to be specified in the registration of the Enumservice\n\
    \   used, as specified in \"IANA Registration of Enumservices: Guide,\n   Template,\
    \ and IANA Considerations\" [RFC6117].\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   This document is an update of RFC 3761, which was edited\
    \ by Patrik\n   Faltstrom and Michael Mealling.  Please see the Acknowledgements\n\
    \   section in that RFC for additional acknowledgements.  The authors\n   would\
    \ also like to thank Alfred Hoenes and Bernie Hoeneisen for their\n   detailed\
    \ reviews.\n"
- title: 9.  Changes from RFC 3761
  contents:
  - "9.  Changes from RFC 3761\n   A section has been added to explain the way in\
    \ which DDDS is used\n   with this specification.  These recommendations have\
    \ been collected\n   from experience of ENUM deployment.  Differences of interpretation\
    \ of\n   the DDDS specifications led to interoperability issues; this document\n\
    \   updates RFC 3761 to add many clarifications, intended to ameliorate\n   interoperability.\n\
    \   Clarifications include a default value for the ORDER field and for\n   the\
    \ Regexp delimiter character, required use of Replacement field in\n   non-terminal\
    \ NAPTRs, and that string matching is case insensitive\n   (Section 3.6).\n  \
    \ Other substantive changes include removing the discussion of\n   registration\
    \ mechanisms, (now specified in \"IANA Registration of\n   Enumservices: Guide,\
    \ Template, and IANA Considerations\" [RFC6117]),\n   correcting an existing error\
    \ by adding \"-\" as a valid character in\n   the type and subtype fields specified\
    \ in Services Parameters (Section\n   3.4.3) and adding the \"P-\" private service\
    \ type (Section 3.4.3.1).\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [E.164]   ITU-T, \"The International Public Telecommunication\
    \ Number\n             Plan\", Recommendation E.164, February 2005.\n   [RFC1034]\
    \ Mockapetris, P., \"Domain names - concepts and facilities\",\n             STD\
    \ 13, RFC 1034, November 1987.\n   [RFC1035] Mockapetris, P., \"Domain names -\
    \ implementation and\n             specification\", STD 13, RFC 1035, November\
    \ 1987.\n   [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate\n \
    \            Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3402]\
    \ Mealling, M., \"Dynamic Delegation Discovery System (DDDS)\n             Part\
    \ Two: The Algorithm\", RFC 3402, October 2002.\n   [RFC3403] Mealling, M., \"\
    Dynamic Delegation Discovery System (DDDS)\n             Part Three: The Domain\
    \ Name System (DNS) Database\", RFC\n             3403, October 2002.\n   [RFC3404]\
    \ Mealling, M., \"Dynamic Delegation Discovery System (DDDS)\n             Part\
    \ Four: The Uniform Resource Identifiers (URI)\", RFC\n             3404, October\
    \ 2002.\n   [RFC3492] Costello, A., \"Punycode: A Bootstring encoding of Unicode\n\
    \             for Internationalized Domain Names in Applications (IDNA)\",\n \
    \            RFC 3492, March 2003.\n   [RFC3629] Yergeau, F., \"UTF-8, a transformation\
    \ format of ISO 10646\",\n             STD 63, RFC 3629, November 2003.\n   [RFC3761]\
    \ Faltstrom, P. and M. Mealling, \"The E.164 to Uniform\n             Resource\
    \ Identifiers (URI) Dynamic Delegation Discovery\n             System (DDDS) Application\
    \ (ENUM)\", RFC 3761, April 2004.\n   [RFC3986] Berners-Lee, T., Fielding, R.,\
    \ and L. Masinter, \"Uniform\n             Resource Identifier (URI): Generic\
    \ Syntax\", STD 66, RFC\n             3986, January 2005.\n   [RFC3987] Duerst,\
    \ M. and M. Suignard, \"Internationalized Resource\n             Identifiers (IRIs)\"\
    , RFC 3987, January 2005.\n   [RFC5234] Crocker, D., Ed., and P. Overell, \"Augmented\
    \ BNF for Syntax\n             Specifications: ABNF\", STD 68, RFC 5234, January\
    \ 2008.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC2131] Droms, R., \"Dynamic Host Configuration\
    \ Protocol\", RFC 2131,\n             March 1997.\n   [RFC2136] Vixie, P., Ed.,\
    \ Thomson, S., Rekhter, Y., and J. Bound,\n             \"Dynamic Updates in the\
    \ Domain Name System (DNS UPDATE)\",\n             RFC 2136, April 1997.\n   [RFC2671]\
    \ Vixie, P., \"Extension Mechanisms for DNS (EDNS0)\", RFC\n             2671,\
    \ August 1999.\n   [RFC2782] Gulbrandsen, A., Vixie, P., and L. Esibov, \"A DNS\
    \ RR for\n             specifying the location of services (DNS SRV)\", RFC 2782,\n\
    \             February 2000.\n   [RFC2915] Mealling, M. and R. Daniel, \"The Naming\
    \ Authority Pointer\n             (NAPTR) DNS Resource Record\", RFC 2915, September\
    \ 2000.\n   [RFC2916] Faltstrom, P., \"E.164 number and DNS\", RFC 2916, September\n\
    \             2000.\n   [RFC3245] Klensin, J., Ed., and IAB, \"The History and\
    \ Context of\n             Telephone Number Mapping (ENUM) Operational Decisions:\n\
    \             Informational Documents Contributed to ITU-T Study Group 2\n   \
    \          (SG2)\", RFC 3245, March 2002.\n   [RFC3263] Rosenberg, J. and H. Schulzrinne,\
    \ \"Session Initiation\n             Protocol (SIP): Locating SIP Servers\", RFC\
    \ 3263, June 2002.\n   [RFC3401] Mealling, M., \"Dynamic Delegation Discovery\
    \ System (DDDS)\n             Part One: The Comprehensive DDDS\", RFC 3401, October\
    \ 2002.\n   [RFC3597] Gustafsson, A., \"Handling of Unknown DNS Resource Record\n\
    \             (RR) Types\", RFC 3597, September 2003.\n   [RFC3824] Peterson,\
    \ J., Liu, H., Yu, J., and B. Campbell, \"Using\n             E.164 numbers with\
    \ the Session Initiation Protocol (SIP)\",\n             RFC 3824, June 2004.\n\
    \   [RFC3833] Atkins, D. and R. Austein, \"Threat Analysis of the Domain\n   \
    \          Name System (DNS)\", RFC 3833, August 2004.\n   [RFC4033] Arends, R.,\
    \ Austein, R., Larson, M., Massey, D., and S.\n             Rose, \"DNS Security\
    \ Introduction and Requirements\", RFC\n             4033, March 2005.\n   [RFC5483]\
    \ Conroy, L. and K. Fujiwara, \"ENUM Implementation Issues and\n             Experiences\"\
    , RFC 5483, March 2009.\n   [RFC6117] Hoeneisen, B., Mayrhofer, A., and J. Livingood,\
    \ \"IANA\n             Registration of Enumservices: Guide, Template, and IANA\n\
    \             Considerations\" RFC 6117, March 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Scott Bradner\n   Harvard University\n   29 Oxford St.\n\
    \   Cambridge MA 02138\n   USA\n   Phone: +1-617-495-3864\n   EMail: sob@harvard.edu\n\
    \   Lawrence Conroy\n   Roke Manor Research\n   Roke Manor\n   Old Salisbury Lane\n\
    \   Romsey\n   United Kingdom\n   Phone: +44-1794-833666\n   EMail: lconroy@insensate.co.uk\n\
    \   URI:   http://lawrence.tel\n   Kazunori Fujiwara\n   Japan Registry Services\
    \ Co., Ltd.\n   Chiyoda First Bldg. East 13F\n   3-8-1 Nishi-Kanda Chiyoda-ku\n\
    \   Tokyo 101-0165\n   JAPAN\n   EMail: fujiwara@jprs.co.jp\n   URI:   http://jprs.jp/en/\n"
