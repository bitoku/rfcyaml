- title: __initial_text__
  contents:
  - "       Ipsilon's General Switch Management Protocol Specification\n         \
    \                     Version 2.0\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo specifies enhancements to the  General Switch Management\n\
    \   Protocol (GSMP) [RFC1987]. The major enhancement is the addition of\n   Quality\
    \ of Service (QoS) messages. Other improvements have been made\n   to the protocol\
    \ resulting from operational experience. GSMP is a\n   general purpose protocol\
    \ to control an ATM switch. It allows a\n   controller to establish and release\
    \ connections across the switch;\n   add and delete leaves on a multicast connection;\
    \ manage switch ports;\n   request configuration information; and request statistics.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction....................................................3\n\
    \   2. GSMP Packet Encapsulation.......................................4\n   \
    \   2.1 ATM Encapsulation...........................................4\n      2.2\
    \ Ethernet Encapsulation......................................6\n   3. Common\
    \ Definitions and Procedures...............................7\n      3.1 GSMP Packet\
    \ Format..........................................8\n      3.2 Failure Response\
    \ Messages..................................11\n   4. Connection Management Messages.................................16\n\
    \      4.1 Add Branch Message.........................................21\n   \
    \   4.2 Delete Tree Message........................................23\n      4.3\
    \ Verify Tree Message........................................24\n      4.4 Delete\
    \ All Message.........................................24\n      4.5 Delete Branches\
    \ Message....................................25\n      4.6 Move Branch Message........................................27\n\
    \   5. Port Management Messages.......................................29\n   \
    \   5.1 Port Management Message....................................29\n      5.2\
    \ Label Range Message........................................34\n   6. State and\
    \ Statistics Messages..................................37\n      6.1 Connection\
    \ Activity Message................................38\n      6.2 Statistics Messages........................................40\n\
    \          6.2.1 Port Statistics Message..............................44\n   \
    \       6.2.2 Connection Statistics Message........................44\n      \
    \    6.2.3 QoS Class Statistics Message.........................44\n      6.3\
    \ Report Connection State Message............................45\n   7. Configuration\
    \ Messages.........................................49\n      7.1 Switch Configuration\
    \ Message...............................50\n      7.2 Port Configuration Message.................................51\n\
    \      7.3 All Ports Configuration Message............................57\n   8.\
    \ Event Messages.................................................59\n      8.1\
    \ Port Up Message............................................60\n      8.2 Port\
    \ Down Message..........................................60\n      8.3 Invalid\
    \ VPI/VCI Message....................................61\n      8.4 New Port Message...........................................61\n\
    \      8.5 Dead Port Message..........................................61\n   9.\
    \ Quality of Service Messages....................................61\n      9.1\
    \ Abstract Switch Model......................................62\n      9.2 QoS\
    \ Configuration Message..................................66\n      9.3 Scheduler\
    \ Establishment Message............................74\n      9.4 QoS Class Establishment\
    \ Message............................78\n      9.5 QoS Release Message........................................85\n\
    \      9.6 QoS Connection Management Message..........................86\n   \
    \   9.7 QoS Failure Response Codes.................................97\n   10.\
    \ Adjacency Protocol............................................97\n      10.1\
    \ Packet Format.............................................98\n      10.2 Procedure.................................................101\n\
    \      10.3 Loss of Synchronization...................................103\n  \
    \ 11. Summary of Failure Response Codes.............................104\n   12.\
    \ Summary of Message Set........................................105\n   References........................................................107\n\
    \   Security Considerations...........................................107\n  \
    \ Authors' Addresses................................................107\n   Full\
    \ Copyright Statement..........................................109\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The General Switch Management Protocol (GSMP), is a general\
    \ purpose\n   protocol to control an ATM switch. GSMP allows a controller to\n\
    \   establish and release connections across the switch; add and delete\n   leaves\
    \ on a multicast connection; manage switch ports; request\n   configuration information;\
    \ and request statistics. It also allows the\n   switch to inform the controller\
    \ of asynchronous events such as a link\n   going down. GSMP runs across an ATM\
    \ link connecting the controller to\n   the switch, on a control connection (virtual\
    \ channel) established at\n   initialization. GSMP operation across an Ethernet\
    \ link is also\n   specified. The GSMP protocol is asymmetric, the controller\
    \ being the\n   master and the switch being the slave. Multiple switches may be\n\
    \   controlled by a single controller using multiple instantiations of\n   the\
    \ protocol over separate control connections.\n   A switch is assumed to contain\
    \ multiple \"ports\". Each port is a\n   combination of one \"input port\" and\
    \ one \"output port\". Some GSMP\n   requests refer to the port as a whole whereas\
    \ other requests are\n   specific to the input port or the output port.  ATM cells\
    \ arrive at\n   the switch from an external communication link on incoming virtual\n\
    \   paths or virtual channels at an input port. ATM cells depart from the\n  \
    \ switch to an external communication link on outgoing virtual paths or\n   virtual\
    \ channels from an output port. Virtual paths on a port or link\n   are referenced\
    \ by their virtual path identifier (VPI). Virtual\n   channels on a port or link\
    \ are referenced by their virtual path and\n   virtual channel identifiers (VPI/VCI).\n\
    \   A virtual channel connection across a switch is formed by connecting\n   an\
    \ incoming virtual channel to one or more outgoing virtual channels.\n   Virtual\
    \ channel connections are referenced by the input port on which\n   they arrive\
    \ and the virtual path and virtual channel identifiers\n   (VPI/VCI) of their\
    \ incoming virtual channel. A virtual path\n   connection across a switch is formed\
    \ by connecting an incoming\n   virtual path to one or more outgoing virtual paths.\
    \ Virtual path\n   connections are referenced by the input port on which they\
    \ arrive and\n   their virtual path identifier (VPI).  In a virtual path connection\n\
    \   the value of the VCI in each cell on that, connection is not used by\n   the\
    \ switch and remains unchanged by the switch.\n   GSMP supports point-to-point\
    \ and point-to-multipoint connections. A\n   multipoint-to-point connection is\
    \ specified by establishing multiple\n   point-to-point connections each of them\
    \ specifying the same output\n   branch. A multipoint-to-multipoint connection\
    \ is specified by\n   establishing multiple point-to-multipoint trees each of\
    \ them\n   specifying the same output branches.\n   In general a virtual channel\
    \ is established with a certain quality of\n   service (QoS). A rich set of QoS\
    \ messages is introduced in this\n   version of the protocol. However, implementation\
    \ or operation of GSMP\n   without any of the messages defined in Section 9, \"\
    Quality of service\n   messages,\" is permitted.  In this case each virtual channel\n\
    \   connection or virtual path connection may be assigned a priority when\n  \
    \ it is established. It may be assumed that for virtual connections\n   that share\
    \ the same output port, an ATM cell on a connection with a\n   higher priority\
    \ is much more likely to exit the switch before an ATM\n   cell on a connection\
    \ with a lower priority if they are both in the\n   switch at the same time. The\
    \ number of priorities that each port of\n   the switch supports may be obtained\
    \ from the port configuration\n   message.\n   GSMP contains an adjacency protocol.\
    \ The adjacency protocol is used\n   to synchronize state across the link, to\
    \ negotiate which version of\n   the GSMP protocol to use, to discover the identity\
    \ of the entity at\n   the other end of a link, and to detect when it changes.\n"
- title: 2. GSMP Packet Encapsulation
  contents:
  - '2. GSMP Packet Encapsulation

    '
- title: 2.1 ATM Encapsulation
  contents:
  - "2.1 ATM Encapsulation\n   GSMP packets are variable length and for an ATM data\
    \ link layer they\n   are encapsulated directly in an AAL-5 CPCS-PDU [I.363] with\
    \ an\n   LLC/SNAP header as illustrated:\n    0                   1          \
    \         2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |               LLC (0xAA-AA-03)                |               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \               +\n   |                   SNAP (0x00-00-00-88-0C)            \
    \         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                       GSMP Message                          ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Pad (0 - 47 octets)                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \             AAL-5 CPCS-PDU Trailer (8 octets)               +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   (The convention in the documentation of Internet Protocols [RFC1700]\n   is\
    \ to express numbers in decimal. Numbers in hexadecimal format are\n   specified\
    \ by prefacing them with the characters \"0x\".  Data is\n   pictured in \"big-endian\"\
    \ order. That is, fields are described left to\n   right, with the most significant\
    \ octet on the left and the least\n   significant octet on the right. Whenever\
    \ a diagram shows a group of\n   octets, the order of transmission of those octets\
    \ is the normal order\n   in which they are read in English. Whenever an octet\
    \ represents a\n   numeric quantity the left most bit in the diagram is the high\
    \ order\n   or most significant bit. That is, the bit labeled 0 is the most\n\
    \   significant bit. Similarly, whenever a multi-octet field represents a\n  \
    \ numeric quantity the left most bit of the whole field is the most\n   significant\
    \ bit. When a multi-octet quantity is transmitted, the most\n   significant octet\
    \ is transmitted first. This is the same coding\n   convention as is used in the\
    \ ATM layer [I.361] and AAL-5 [I.363].)\n   The LLC/SNAP header contains the octets:\
    \ 0xAA 0xAA 0x03 0x00 0x00\n   0x00 0x88 0x0C. (0x880C is the assigned Ethertype\
    \ for GSMP.)\n   The maximum transmission unit (MTU) of the GSMP Message field\
    \ is 1492\n   octets.\n   The virtual channel over which a GSMP session is established\
    \ between\n   a controller and the switch it is controlling is called the GSMP\n\
    \   control channel.  The default VPI and VCI of the GSMP control channel\n  \
    \ for LLC/SNAP encapsulated GSMP messages on an ATM data link layer is:\n    \
    \  VPI = 0\n      VCI = 15.\n"
- title: 2.2 Ethernet Encapsulation
  contents:
  - "2.2 Ethernet Encapsulation\n   GSMP packets may be encapsulated on an Ethernet\
    \ data link as\n   illustrated:\n    0                   1                   2\
    \                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Destination Address                      |\n   |  \
    \                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |        \
    \                       |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n   |                         Source Address\
    \                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Ethertype (0x88-0C)       |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n   |                                      \
    \                         |\n   ~                         GSMP Message       \
    \                   ~\n   |                                                  \
    \             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Sender Instance                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Receiver Instance                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              Pad                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Frame Check Sequence                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Destination Address\n             For the SYN message of the adjacency protocol\
    \ the\n             Destination Address is the broadcast address\n           \
    \  0xFFFFFFFFFFFF. (Alternatively, it is also valid to\n             configure\
    \ the node with the unicast 48-bit IEEE MAC address\n             of the destination.\
    \ In this case the configured unicast\n             Destination Address is used\
    \ in the SYN message.) For all\n             other messages the Destination Address\
    \ is the unicast 48-\n             bit IEEE MAC address of the destination. This\
    \ address may\n             be discovered from the Source Address field of messages\n\
    \             received during synchronization of the adjacency protocol.\n   Source\
    \ Address\n             For all messages the Source Address is the 48-bit IEEE\
    \ MAC\n             address of the sender.\n   Ethertype\n             The assigned\
    \ Ethertype for GSMP is 0x880C.\n   GSMP Message\n             The maximum transmission\
    \ unit (MTU) of the GSMP Message\n             field is 1492 octets.\n   Sender\
    \ Instance\n             The Sender Instance number for the link obtained from\
    \ the\n             adjacency protocol.  This field is already present in the\n\
    \             adjacency protocol message. It is appended to all non-\n       \
    \      adjacency GSMP messages in the Ethernet encapsulation to\n            \
    \ offer additional protection against the introduction of\n             corrupt\
    \ state.\n   Receiver Instance\n             The Receiver Instance number is what\
    \ the sender believes is\n             the current instance number for the link,\
    \ allocated by the\n             entity at the far end of the link.  This field\
    \ is already\n             present in the adjacency protocol message. It is appended\n\
    \             to all non-adjacency GSMP messages in the Ethernet\n           \
    \  encapsulation to offer additional protection against the\n             introduction\
    \ of corrupt state.\n   Pad\n             The minimum length of the data field\
    \ of an Ethernet packet\n             is 46 octets.  If necessary, padding should\
    \ be added such\n             that it meets the minimum Ethernet frame size. This\
    \ padding\n             should be octets of zero and it is not considered to be\n\
    \             part of the GSMP message.\n   After the adjacency protocol has achieved\
    \ synchronization, for every\n   GSMP message received with an Ethernet encapsulation,\
    \ the receiver\n   must check the Source Address from the Ethernet MAC header,\
    \ the\n   Sender Instance, and the Receiver Instance.  The incoming GSMP\n   message\
    \ must be discarded if the Sender Instance and the Source\n   Address do not match\
    \ the values of Sender Instance and Sender Name\n   stored by the \"Update Peer\
    \ Verifier\" operation of the GSMP adjacency\n   protocol. The incoming GSMP message\
    \ must also be discarded if it\n   arrives over any port other than the port over\
    \ which the adjacency\n   protocol has achieved synchronization.  In addition,\
    \ the incoming\n   message must also be discarded if the Receiver Instance field\
    \ does\n   not match the current value for the Sender Instance of the GSMP\n \
    \  adjacency protocol.\n"
- title: 3. Common Definitions and Procedures
  contents:
  - "3. Common Definitions and Procedures\n   GSMP is a master-slave protocol. The\
    \ controller issues request\n   messages to the switch. Each request message indicates\
    \ whether a\n   response is required from the switch and contains a transaction\n\
    \   identifier to enable the response to be associated with the request.\n   The\
    \ switch replies with a response message indicating either a\n   successful result\
    \ or a failure. There are five classes of GSMP\n   request-response message: Connection\
    \ Management, Port Management,\n   State and Statistics, Configuration, and Quality\
    \ of Service.  The\n   switch may also generate asynchronous Event messages to\
    \ inform the\n   controller of asynchronous events.  Event messages are not\n\
    \   acknowledged by the controller. There is also an adjacency protocol\n   message\
    \ used to establish synchronization across the link and\n   maintain a handshake.\n\
    \   For the request-response messages, each message type has a format for\n  \
    \ the request message and a format for the success response.  Unless\n   otherwise\
    \ specified a failure response message is identical to the\n   request message\
    \ that caused the failure, with the Code field\n   indicating the nature of the\
    \ failure. Event messages have only a\n   single format defined as they are not\
    \ acknowledged by the controller.\n   Switch ports are described by a 32-bit port\
    \ number. The switch\n   assigns port numbers and it may typically choose to structure\
    \ the 32\n   bits into subfields that have meaning to the physical structure of\n\
    \   the switch (e.g. slot, port). In general, a port in the same physical\n  \
    \ location on the switch will always have the same port number, even\n   across\
    \ power cycles. The internal structure of the port number is\n   opaque to the\
    \ GSMP protocol. However, for the purposes of network\n   management such as logging,\
    \ port naming, and graphical\n   representation, a switch may declare the physical\
    \ location (physical\n   slot and port) of each port. Alternatively, this information\
    \ may be\n   obtained by looking up the product identity in a database.\n   Each\
    \ switch port also maintains a port session number assigned by the\n   switch.\
    \ A message, with an incorrect port session number must be\n   rejected.  This\
    \ allows the controller to detect a link failure and to\n   keep state synchronized.\n\
    \   Except for the adjacency protocol message, no GSMP messages may be\n   sent\
    \ across the link until the adjacency protocol has achieved\n   synchronization,\
    \ and all GSMP messages received on a link that does\n   not currently have state\
    \ synchronization must be discarded.\n"
- title: 3.1 GSMP Packet Format
  contents:
  - "3.1 GSMP Packet Format\n   All GSMP messages, except the adjacency protocol message,\
    \ have the\n   following format:\n    0                   1                  \
    \ 2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                        Message Body                         ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Version\n             The version number of the GSMP protocol being used in\
    \ this\n             session. It should be set by the sender of the message to\n\
    \             the GSMP protocol version negotiated by the adjacency\n        \
    \     protocol.\n   Message Type\n             The GSMP message type. GSMP messages\
    \ fall into six classes:\n             Connection Management, Port Management,\
    \ State and\n             Statistics, Configuration, Quality of Service, and Events.\n\
    \             Each class has a number of different message types. In\n       \
    \      addition, one Message Type is allocated to the adjacency\n            \
    \ protocol.\n   Result\n             Field in a Connection Management request\
    \ message, a Port\n             Management request message, or a Quality of Service\
    \ request\n             message is used to indicate whether a response is required\n\
    \             to the request message if the outcome is successful. A\n       \
    \      value of \"NoSuccessAck\" indicates that the request message\n        \
    \     does not expect a response if the outcome is successful,\n             and\
    \ a value of \"AckAll\" indicates that a response is\n             expected if\
    \ the outcome is successful.  In both cases a\n             failure response must\
    \ be generated if the request fails.\n             For Sate and Statistics, and\
    \ Configuration request\n             messages, a value of \"NoSuccessAck\" in\
    \ the request message\n             is ignored and the request message is handled\
    \ as if the\n             field were set to \"AckAll\". (This facility was added\
    \ to\n             reduce the control traffic in the case where the controller\n\
    \             periodically checks that the state in the switch is\n          \
    \   correct. If the controller does not use this capability,\n             all\
    \ request messages should be sent with a value of\n             \"AckAll.\")\n\
    \             In a response message the result field can have three\n        \
    \     values: \"Success,\" \"More,\" and \"Failure\". The \"Success\" and\n  \
    \           \"More\" results both indicate a success response. The \"More\"\n\
    \             result indicates that the success response exceeds the\n       \
    \      maximum transmission unit of the data link and that one or\n          \
    \   more further messages will be sent to complete the success\n             response.\
    \ All messages that belong to the same success\n             response will have\
    \ the same Transaction Identifier. The\n             \"Success\" result indicates\
    \ a success response that may be\n             contained in a single message or\
    \ the final message of a\n             success response spanning multiple messages.\n\
    \             The encoding of the result field is:\n                  NoSuccessAck:\
    \  Result = 1\n                  AckAll:        Result = 2\n                 \
    \ Success:       Result = 3\n                  Failure:       Result = 4\n   \
    \               More:          Result = 5.\n             The Result field is not\
    \ used in an adjacency protocol\n             message.\n   Code\n            \
    \ Field gives further information concerning the result in a\n             response\
    \ message. It is mostly used to pass an error code\n             in a failure\
    \ response but can also be used to give further\n             information in a\
    \ success response message or an event\n             message. In a request message\
    \ the code field is not used\n             and is set to zero. In an adjacency\
    \ protocol message the\n             Code field is used to determine the function\
    \ of the\n             message.\n   Transaction Identifier\n             Used\
    \ to associate a request message with its response\n             message. For\
    \ request messages the controller may select any\n             transaction identifier.\
    \ For response messages the\n             transaction identifier is set to the\
    \ value of the\n             transaction identifier from the message to which\
    \ it is a\n             response.  For event messages the transaction identifier\n\
    \             should be set to zero. The Transaction Identifier is not\n     \
    \        used, and the field is not present, in the adjacency\n             protocol.\n\
    \   The following fields are frequently found in GSMP messages. They are\n   defined\
    \ here to avoid repetition.\n   Port\n             Gives the port number of the\
    \ switch port to which the\n             message applies.\n   Port Session Number\n\
    \             Each switch port maintains a Port Session Number assigned\n    \
    \         by the switch. The port session number of a port remains\n         \
    \    unchanged while the port is continuously in the Available\n             state\
    \ and the link status is continuously Up. When a port\n             returns to\
    \ the Available state after it has been\n             Unavailable or in any of\
    \ the Loopback states, or when the\n             line status returns to the Up\
    \ state after it has been Down\n             or in Test, or after a power cycle,\
    \ a new Port Session\n             Number must be generated.  Port session numbers\
    \ should be\n             assigned using some form of random number.\n       \
    \      If the Port Session Number in a request message does not\n            \
    \ match the current Port Session Number for the specified\n             port,\
    \ a failure response message must be returned with the\n             Code field\
    \ indicating, \"Invalid port session number.\"  The\n             current port\
    \ session number for a port may be obtained\n             using a Port Configuration\
    \ or an All Ports Configuration\n             message.\n   Any field in a GSMP\
    \ message that is unused or defined as \"reserved\"\n   must be set to zero by\
    \ the sender and ignored by the receiver.\n   It is not an error for a GSMP message\
    \ to contain additional data\n   after the end of the Message Body. This is to\
    \ support development and\n   experimental purposes. However, the maximum transmission\
    \ unit of the\n   GSMP message, as defined by the data link layer encapsulation,\
    \ must\n   not be exceeded.\n   A success response message must not be sent until\
    \ the requested\n   operation has been successfully completed.\n"
- title: 3.2 Failure Response Messages
  contents:
  - "3.2 Failure Response Messages\n   A failure response message is formed by returning\
    \ the request message\n   that caused the failure with the Result field in the\
    \ header\n   indicating failure (Result = 4) and the Code field giving the failure\n\
    \   code. The failure code specifies the reason for the switch being\n   unable\
    \ to satisfy the request message.\n   If the switch issues a failure response\
    \ in reply to a request\n   message, no change should be made to the state of\
    \ the switch as a\n   result of the message causing the failure. (For request\
    \ messages that\n   contain multiple requests, such as the Delete Branches message,\
    \ the\n   failure response message will specify which requests were successful\n\
    \   and which failed. The successful requests may result in changed\n   state.)\n\
    \   If the switch issues a failure response it must choose the most\n   specific\
    \ failure code according to the following precedence:\n       Invalid Message\n\
    \       Failure specific to the particular message type (failure code\n      \
    \     16). (The meaning of this failure is dependent upon the\n           particular\
    \ message type and is specified in the text defining\n           the message.)\n\
    \       A failure response specified in the text defining the message\n      \
    \     type.\n       Connection Failures\n       Virtual Path Connection Failures\n\
    \       Multicast Failures\n       QoS Failures (QoS failures are specified in\
    \ Section 9.7.)\n       General Failures\n   If multiple failures match in any\
    \ of the following categories, the\n   one that is listed first should be returned.\
    \ The following failure\n   response messages and failure codes are defined:\n\
    \   Invalid Message\n       3:  The specified request is not implemented on this\
    \ switch.\n               The Message Type field specifies a message that is not\n\
    \               implemented on the switch or contains a value that is not\n  \
    \             defined in the version of the protocol running in this\n       \
    \        session of GSMP.\n       5:  One or more of the specified ports does\
    \ not exist.\n               At least one of the ports specified in the message\
    \ is\n               invalid. A port is invalid if it does not exist or if it\n\
    \               has been removed from the switch.\n       4:  Invalid Port Session\
    \ Number.\n               The value given in the Port Session Number field does\
    \ not\n               match the current Port Session Number for the specified\n\
    \               port.\n   Connection Failures\n       8:  The specified connection\
    \ does not exist.\n               An operation that expects a connection to be\
    \ specified,\n               either a virtual channel or a virtual path connection,\n\
    \               cannot locate the specified connection. A virtual channel\n  \
    \             connection is specified by the input port, input VPI, and\n    \
    \           input VCI on which it arrives. A virtual path connection\n       \
    \        is specified by the input port and input VPI on which it\n          \
    \     arrives.\n       9:  The specified branch does not exist.\n            \
    \   An operation that expects a branch of an existing\n               connection\
    \ to be specified, either a virtual channel or a\n               virtual path\
    \ connection, cannot locate the specified\n               branch.  A branch of\
    \ a virtual channel connection is\n               specified by the virtual channel\
    \ connection it belongs to\n               and the output port, output VPI, and\
    \ output VCI on which\n               it departs. A branch of a virtual path connection\
    \ is\n               specified by the virtual path connection it belongs to\n\
    \               and the output port and output VPI on which it departs.\n    \
    \   18: One or more of the specified input VPIs is invalid.\n       19: One or\
    \ more of the specified input VCIs is invalid.\n       20: One or more of the\
    \ specified output VPIs is invalid.\n       21: One or more of the specified output\
    \ VCIs is invalid.\n       22: Invalid Class of Service field in a Connection\
    \ Management\n               message.\n               The value of the Class of\
    \ Service field is invalid.\n       23: Insufficient resources for QoS Profile.\n\
    \               The resources requested by the QoS Profile in the Class\n    \
    \           of service field are not available.\n   Virtual Path Connections\n\
    \       24: Virtual path switching is not supported on this input port.\n    \
    \   25: Point-to-multipoint virtual path connections are not\n               supported\
    \ on either the requested input port or the\n               requested output port.\n\
    \               One or both of the requested input and output ports is\n     \
    \          unable to support point-to-multipoint virtual path\n              \
    \ connections.\n       26: Attempt to add a virtual path connection branch to\
    \ an\n               existing virtual channel connection.\n               It is\
    \ invalid to mix branches switched as virtual channel\n               connections\
    \ with branches switched as virtual path\n               connections on the same\
    \ point-to-multipoint connection.\n       27: Attempt to add a virtual channel\
    \ connection branch to an\n               existing virtual path connection.\n\
    \               It is invalid to mix branches switched as virtual channel\n  \
    \             connections with branches switched as virtual path\n           \
    \    connections on the same point-to-multipoint connection.\n   Multicast Failures\n\
    \       10: A branch belonging to the specified point-to-multipoint\n        \
    \       connection is already established on the specified output\n          \
    \     port and the switch cannot support more than a single\n               branch\
    \ of any point-to-multipoint connection on the same\n               output port.\n\
    \       11: The limit on the maximum number of point-to-multipoint\n         \
    \      connections that the switch can support has been reached.\n       12: The\
    \ limit on the maximum number of branches that the\n               specified point-to-multipoint\
    \ connection can support has\n               been reached.\n       17: Cannot\
    \ label each output branch of a point-to-multipoint tree\n               with\
    \ a different label.\n               Some early designs, and some low-cost ATM\
    \ switch designs,\n               require all output branches of a multicast connection\
    \ to\n               use the same value of VPI/VCI.\n       28: Only point-to-point\
    \ bidirectional connections may be\n               established.\n            \
    \   It is an error to attempt to add an additional output\n               branch\
    \ to an existing connection with the bidirectional\n               flag set.\n\
    \       13: Unable to assign the requested VPI/VCI value to the requested\n  \
    \             branch on the specified point-to-multipoint connection.\n      \
    \         Although the requested VPI and VCI are valid, the switch\n         \
    \      is unable to support the request using the specified\n               values\
    \ of VPI and VCI for some reason not covered by the\n               above failure\
    \ responses. This message implies that a\n               valid value of VPI or\
    \ VCI exists that the switch could\n               support. For example, some\
    \ switch designs restrict the\n               number of distinct VPI/VCI values\
    \ available to a point-\n               to-multipoint connection. (Most switch\
    \ designs will not\n               require this message.)\n       14: General\
    \ problem related to the manner in which point-to-\n               multipoint\
    \ is supported by the switch.\n               Use this message if none of the\
    \ more specific multicast\n               failure messages apply.  (Most switch\
    \ designs will not\n               require this message.)\n   General Failures\n\
    \       2:  Invalid request message.\n               There is an error in one\
    \ of the fields of the message not\n               covered by a more specific\
    \ failure message.\n       6:  One or more of the specified ports is down.\n \
    \              A port is down if its Port Status is Unavailable.\n           \
    \    Connection Management, Connection State, Port Management,\n             \
    \  and Configuration operations are permitted on a port that\n               is\
    \ Unavailable. Connection Activity and Statistics\n               operations are\
    \ not permitted on a port that is\n               Unavailable and will generate\
    \ this failure response. A\n               Port Management message specifying\
    \ a Take Down function\n               on a port already in the Unavailable state\
    \ will also\n               generate this failure response.\n       15: Out of\
    \ resources.\n               The switch has exhausted a resource not covered by\
    \ a more\n               specific failure message, for example, running out of\n\
    \               memory.\n       1:  Unspecified reason not covered by other failure\
    \ codes.\n               The failure message of last resort.\n   The following\
    \ failure response messages are only used by the Label\n               Range message.\n\
    \       29: Cannot support requested VPI range.\n       30: Cannot support requested\
    \ VCI range on all requested VPIs.\n   The following failure response messages\
    \ are only used by the Set\n               Transmit Cell Rate function of the\
    \ Port Management\n               message.\n       31: The transmit cell rate\
    \ of this output port cannot be changed.\n       32: Requested transmit cell rate\
    \ out of range for this output\n               port.\n"
- title: 4. Connection Management Messages
  contents:
  - "4. Connection Management Messages\n   Connection management messages are used\
    \ by the controller to\n   establish, delete, modify and verify virtual channel\
    \ connections and\n   virtual path connections across the switch. The Add Branch,\
    \ Delete\n   Tree, and Delete All connection management messages have the\n  \
    \ following format for both request and response messages:\n    0            \
    \       1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Port Session Number                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Input Port                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |M|Q|B|C|      Input VPI        |          Input VCI            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Output Port                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |x x x x|      Output VPI       |          Output VCI           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Number of Branches       |       Class of Service        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Input Port\n             Identifies a switch input port.\n   Flags\n     \
    \   M: Multicast\n             The Multicast flag is used as a hint for point-to-\n\
    \             multipoint connections in the Add Branch message. It is not\n  \
    \           used in any other connection management messages and in\n        \
    \     these messages it should be set to zero. If set, it\n             indicates\
    \ that the virtual channel connection or the\n             virtual path connection\
    \ is very likely to be a point-to-\n             multipoint connection. If zero,\
    \ it indicates that this\n             connection is very likely to be a point-to-point\
    \ connection\n             or is unknown.\n             The Multicast flag is\
    \ only used in the Add Branch message\n             when establishing the first\
    \ branch of a new connection. It\n             is not required to be set when\
    \ establishing subsequent\n             branches of a point-to-multipoint connection\
    \ and on such\n             connections it should be ignored by the receiver.\
    \ (On\n             receipt of the second and subsequent Add Branch messages\n\
    \             the receiver knows that this is a point-to-multipoint\n        \
    \     connection.) If it is known that this is the first branch\n            \
    \ of a point-to-multipoint connection this flag should be\n             set. If\
    \ it is unknown, or if it is known that the\n             connection is point-to-point\
    \ this flag should be zero. The\n             use of this flag is not mandatory.\
    \ It may be ignored by the\n             switch.  If unused the flag should be\
    \ set to zero. Some\n             switches use a different data structure for\
    \ point-to-\n             multipoint connections than for point-to-point connections.\n\
    \             This flag avoids the switch setting up a point-to-point\n      \
    \       structure for the first branch of a point-to-multipoint\n            \
    \ connection which must immediately be deleted and\n             reconfigured\
    \ as point-to-multipoint when the second branch\n             is established.\n\
    \        Q: QoS Profile\n             The QoS Profile flag, if set, indicates\
    \ that the Class of\n             Service field contains a QoS Profile Identifier.\
    \  If this\n             flag is zero, it indicates that the Class of Service\
    \ field\n             contains a Priority or a Scheduler Identifier.\n       \
    \ B: Bidirectional\n             The Bidirectional flag applies only to the Add\
    \ Branch\n             message. In all other Connection Management messages it\
    \ is\n             not used. It may only be used when establishing a point-\n\
    \             to-point connection.  The Bidirectional flag in an Add\n       \
    \      Branch message, if set, requests that two unidirectional\n            \
    \ virtual channels or virtual paths be established, one in\n             the forward\
    \ direction, and one in the reverse direction. It\n             is equivalent\
    \ to two Add Branch messages, one specifying\n             the forward direction,\
    \ and one specifying the reverse\n             direction. The forward direction\
    \ uses the values of Input\n             Port, Input VPI, Input VCI, Output Port,\
    \ Output VPI, and\n             Output VCI as specified in the Add Branch message.\
    \ The\n             reverse direction is derived by exchanging the values\n  \
    \           specified in the Input Port, Input VPI, and Input VCI\n          \
    \   fields, with those of the Output Port, Output VPI, and\n             Output\
    \ VCI fields respectively. Thus, a virtual connection\n             in the reverse\
    \ direction arrives at the input port\n             specified by the Output Port\
    \ field, on the VPI/VCI\n             specified by the Output VPI and Output VCI\
    \ fields. It\n             departs from the output port specified by the Input\
    \ Port\n             field, on the VPI/VCI specified by the Input VPI and Input\n\
    \             VCI fields.\n             The Bidirectional flag is simply a convenience\
    \ to establish\n             two unidirectional virtual connections in opposite\n\
    \             directions between the same two ports, with identical\n        \
    \     VPI/VCIs, using a single Add Branch message. In all future\n           \
    \  messages the two unidirectional virtual connections must be\n             handled\
    \ separately. There is no bidirectional delete\n             message. However,\
    \ a single Delete Branches message with two\n             Delete Branch Elements,\
    \ one for the forward connection and\n             one for the reverse, may be\
    \ used.\n        C: Congestion Indication\n             The Congestion Indication\
    \ flag, if set, requests that cells\n             on this connection be marked\
    \ if congestion is experienced.\n             If this connection passes through\
    \ a queue that the switch\n             considers to be congested, the Congestion\
    \ Experienced bit\n             will be set in the Payload Type field of the cell\
    \ header of\n             all cells on the connection. GSMP does not specify the\n\
    \             algorithm or any threshold by which the switch decides when\n  \
    \           a queue is congested.\n   Input VPI\n             Identifies an ATM\
    \ virtual path arriving at the switch input\n             port indicated by the\
    \ Input Port field.\n   Input VCI\n             Identifies an ATM virtual channel\
    \ arriving on the virtual\n             path indicated by the Input VPI field\
    \ at the switch input\n             port indicated by the Input Port field. For\
    \ virtual path\n             connections the Input VCI field is not used.\n  \
    \ Output Port\n             Identifies a switch output port.\n   x: Unused\n \
    \  Output VPI\n             Identifies an outgoing virtual path departing from\
    \ the\n             switch output port indicated in the Output Port field.\n \
    \  Output VCI\n             Identifies an outgoing virtual channel departing on\
    \ the\n             virtual path indicated by the Output VPI field from the\n\
    \             switch output port indicated in the Output Port field. For\n   \
    \          virtual path connections the Output VCI field is not used.\n   Number\
    \ of Branches\n             In a success response message and a failure response\n\
    \             message, gives the number of output branches on a virtual\n    \
    \         channel connection or a virtual path connection after\n            \
    \ completion of the requested operation.  (A point-to-point\n             connection\
    \ will have one branch, a point-to-multipoint\n             connection will have\
    \ two or more branches.) If the switch\n             is unable to keep track of\
    \ the number of branches on a\n             virtual path connection or a virtual\
    \ channel connection it\n             must respond with the value 0xFFFF meaning:\
    \ \"number of\n             branches unknown\".  This field is not used in the\
    \ request\n             message.\n   Class of Service\n             This field\
    \ can contain either a QoS Profile Identifier, a\n             Priority, or a\
    \ Scheduler Identifier.  If the QoS Profile\n             flag in the Flags field\
    \ is set, the Class of Service field\n             contains a QoS Profile.  If\
    \ the QoS Profile flag in the\n             Flags field is zero, and the value\
    \ of the Class of Service\n             field is greater than or equal to 0x100,\
    \ the Class of\n             Service field contains a Scheduler Identifier.  If\
    \ the QoS\n             Profile flag in the Flags field is zero, and the value\
    \ of\n             the Class of Service field is less than 0x100, the Class of\n\
    \             Service field contains a Priority. (Values of Scheduler\n      \
    \       Identifier less than 0x100 are interpreted as priorities.)\n         \
    \    The Class of Service field is only used in the Add Branch\n             and\
    \ Move Branch messages.\n             A QoS Profile Identifier is an opaque 16-bit\
    \ value. It is\n             used to identify a QoS profile in the switch which\n\
    \             specifies the Quality of Service required by the\n             connection.\
    \ QoS profiles are established by a mechanism\n             external to GSMP.\n\
    \             A Scheduler Identifier is an alternative method of\n           \
    \  communicating the QoS requirements of a connection. The\n             Scheduler\
    \ Identifier is defined in Section 9, \"Quality of\n             Service Messages.\"\
    \n             A Priority specifies the priority of the connection for Add\n \
    \            Branch and Move Branch messages that choose not to use a\n      \
    \       QoS profile, or the QoS capabilities defined in Section 9,\n         \
    \    \"Quality of Service Messages.\" The highest priority is\n             numbered\
    \ zero and the lowest priority is numbered \"Q-1\"\n             where \"Q\" is\
    \ the number of priorities that the output port\n             can support. The\
    \ ability to offer different qualities of\n             service to different connections\
    \ based upon their priority\n             is assumed to be a property of the output\
    \ port of the\n             switch. It is assumed that for virtual path connections\
    \ or\n             virtual channel connections that share the same output\n  \
    \           port, an ATM cell on a connection with a higher priority is\n    \
    \         much more likely to exit the switch before an ATM cell on a\n      \
    \       connection with a lower priority, if they are both in the\n          \
    \   switch at the same time. The number of priorities that each\n            \
    \ output port can support is given in the Port Configuration\n             message.\n\
    \   For all connection management messages, except the Delete Branches\n   message,\
    \ the success response message is a copy of the request\n   message returned with\
    \ the Result field indicating success and the\n   Number of Branches field indicating\
    \ the number of branches on the\n   connection after completion of the operation.\
    \ The Code field is not\n   used in a connection management success response message.\n\
    \   The failure response message is a copy of the request message\n   returned\
    \ with a Result field indicating failure and the Number of\n   Branches field\
    \ indicating the number of branches on the connection.\n   Fundamentally, no distinction\
    \ is made between point-to-point and\n   point-to-multipoint connections. By default,\
    \ the first Add Branch\n   message for a particular Input Port, Input VPI, and\
    \ Input VCI will\n   establish a point-to-point virtual connection.  The second\
    \ Add Branch\n   message with the same Input Port, Input VPI, and Input VCI fields\n\
    \   will convert the connection to a point-to-multipoint virtual\n   connection\
    \ with two branches. (For virtual path connections the Input\n   VCI is not required.)\
    \ However, to avoid possible inefficiency with\n   some switch designs, the Multicast\
    \ Flag is provided. If the\n   controller knows that a new connection is point-to-multipoint\
    \ when\n   establishing the first branch, it may indicate this in the Multicast\n\
    \   Flag.  Subsequent Add Branch messages with the same Input Port, Input\n  \
    \ VPI, and Input VCI fields will add further branches to the point-to-\n   multipoint\
    \ connection. Use of the Delete Branch message on a point-\n   to-multipoint connection\
    \ with two branches will result in a point-\n   to-point connection. However,\
    \ the switch may structure this\n   connection as a point-to-multipoint connection\
    \ with a single output\n   branch if it chooses. (For some switch designs this\
    \ structure may be\n   more convenient.) Use of the Delete Branch message on a\
    \ point-to-\n   point connection will delete the point-to-point connection. There\
    \ is\n   no concept of a connection with zero output branches. All connections\n\
    \   are unidirectional, one input virtual path or virtual channel to one\n   or\
    \ more output virtual paths or virtual channels.\n   GSMP supports point-to-point\
    \ and point-to-multipoint connections. A\n   multipoint-to-point connection is\
    \ specified by establishing multiple\n   point-to-point connections each of them\
    \ specifying the same output\n   branch.  (An output branch is specified by an\
    \ output port and output\n   VPI for a virtual path connection and by an output\
    \ port, output VPI,\n   and output VCI for a virtual channel connection.) A multipoint-to-\n\
    \   multipoint connection is specified by establishing multiple point-\n   to-multipoint\
    \ trees each of them specifying the same output branches.\n   The connection management\
    \ messages apply both to virtual channel\n   connections and virtual path connections.\
    \ The Add Branch and Move\n   Branch connection management messages have two Message\
    \ Types. One\n   Message Type indicates that a virtual channel connection is required,\n\
    \   and the other Message Type indicates that a virtual path connection\n   is\
    \ required. The Delete Branches, Delete Tree, and Delete All\n   connection management\
    \ messages have only a single Message Type\n   because they do not need to distinguish\
    \ between virtual channel\n   connections and virtual path connections. For virtual\
    \ path\n   connections, neither Input VCI fields nor Output VCI fields are\n \
    \  required. They should be set to zero by the sender and ignored by the\n   receiver.\
    \ Virtual channel branches may not be added to an existing\n   virtual path connection.\
    \  Conversely, virtual path branches may not\n   be added to an existing virtual\
    \ channel connection.  In the Port\n   Configuration message each switch input\
    \ port may declare whether it\n   is capable of supporting virtual path switching\
    \ (i.e. accepting\n   connection management messages requesting virtual path connections).\n\
    \   The connection management messages may be issued regardless of the\n   Port\
    \ Status of the switch port. Connections may be established or\n   deleted when\
    \ a switch port is in the Available, Unavailable, or any\n   of the Loopback states.\
    \ However, all connection state on an input\n   port will be deleted when the\
    \ port returns to the Available state\n   from any other state, i.e. when a Port\
    \ Management message is received\n   for that port with the Function field indicating\
    \ either Bring Up, or\n   Reset Input Port.\n"
- title: 4.1 Add Branch Message
  contents:
  - "4.1 Add Branch Message\n   The Add Branch message is a connection management\
    \ message used to\n   establish a virtual channel connection or a virtual path\
    \ connection\n   or to add an additional branch to an existing virtual channel\n\
    \   connection or virtual path connection. It may also be used to check\n   the\
    \ connection state stored in the switch. The connection is\n   specified by the\
    \ Input Port, Input VPI, and Input VCI fields. The\n   output branch is specified\
    \ by the Output Port, Output VPI, and Output\n   VCI fields. The quality of service\
    \ requirements of the connection are\n   specified by the Class of Service field.\
    \ To request a virtual channel\n   connection the Virtual Channel Connection (VCC)\
    \ Add Branch message\n   is:\n      Message Type = 16\n   To request a virtual\
    \ path connection the Virtual Path Connection\n   (VPC) Add Branch message is:\n\
    \      Message Type = 26\n   If a VPC Add Branch message is received and the switch\
    \ input port\n   specified by the Input Port field does not support virtual path\n\
    \   switching, a failure response message must be returned indicating,\n   \"\
    Virtual path switching is not supported on this input port.\"\n   If the virtual\
    \ channel connection specified by the Input Port, Input\n   VPI, and Input VCI\
    \ fields; or the virtual path connection specified\n   by the Input Port and Input\
    \ VPI fields; does not already exist, it\n   must be established with the single\
    \ output branch specified in the\n   request message. If the Bidirectional Flag\
    \ in the Flags field is set,\n   the reverse connection must also be established.\
    \  The output branch\n   should have the QoS attributes specified by the Class\
    \ of Service\n   field.\n   For the VCC Add Branch message, if a virtual path\
    \ connection already\n   exists on the virtual path specified by the Input Port\
    \ and Input VPI\n   fields, a failure response message must be returned indicating,\n\
    \   \"Attempt to add a virtual channel connection branch to an existing\n   virtual\
    \ path connection.\" For the VPC Add Branch message, if a\n   virtual channel\
    \ connection already exists on any of the virtual\n   channels within the virtual\
    \ path specified by the Input Port and\n   Input VPI fields, a failure response\
    \ message must be returned\n   indicating, \"Attempt to add a virtual path connection\
    \ branch to an\n   existing virtual channel connection.\"\n   If the virtual channel\
    \ connection specified by the Input Port, Input\n   VPI, and Input VCI fields;\
    \ or the virtual path connection specified\n   by the Input Port and Input VPI\
    \ fields; already exists, but the\n   specified output branch does not, the new\
    \ output branch must be\n   added.  The new output branch should have the QoS\
    \ attributes\n   specified by the Class of Service field.\n   If the virtual channel\
    \ connection specified by the Input Port, Input\n   VPI, and Input VCI fields;\
    \ or the virtual path connection specified\n   by the Input Port and Input VPI\
    \ fields; already exists and the\n   specified output branch also already exists,\
    \ the QoS attributes of\n   the connection, specified by the Class of Service\
    \ field, if different\n   from the request message, should be changed to that\
    \ in the request\n   message.  A success response message must be sent if the\
    \ Result field\n   of the request message is \"AckAll\".  This allows the controller\
    \ to\n   periodically reassert the state of a connection or to change its\n  \
    \ priority. If the result field of the request message is\n   \"NoSuccessAck\"\
    \ a success response message should not be returned.\n   This may be used to reduce\
    \ the traffic on the control link for\n   messages that are reasserting previously\
    \ established state. For\n   messages that are reasserting previously established\
    \ state, the\n   switch must always check that this state is correctly established\
    \ in\n   the switch hardware (i.e. the actual connection tables used to\n   forward\
    \ cells).\n   If the output branch specified by the Output Port, Output VPI, and\n\
    \   Output VCI fields for a virtual channel connection; or the output\n   branch\
    \ specified by the Output Port and Output VPI fields for a\n   virtual path connection;\
    \ is already in use by any connection other\n   than that specified by the Input\
    \ Port, Input VPI, and Input VCI\n   fields, then the resulting output branch\
    \ will have multiple input\n   branches. If multiple point-to-point connections\
    \ share the same\n   output branch the result will be a multipoint-to-point connection.\
    \ If\n   multiple point-to-multipoint trees share the same output branches the\n\
    \   result will be a multipoint-to-multipoint connection.\n   If the virtual channel\
    \ connection specified by the Input Port, Input\n   VPI, and Input VCI fields,\
    \ or the virtual path connection specified\n   by the Input Port and Input VPI\
    \ fields, already exists, and the\n   Bidirectional Flag in the Flags field is\
    \ set, a failure response must\n   be returned indicating: \"Only point-to-point\
    \ bidirectional\n   connections may be established.\"\n   It should be noted that\
    \ different switches support multicast in\n   different ways. There will be a\
    \ limit to the total number of point-\n   to-multipoint connections any switch\
    \ can support, and possibly a\n   limit on the maximum number of branches that\
    \ a point-to-multipoint\n   connection may specify.  Some switches also impose\
    \ a limit on the\n   number of different VPI/VCI values that may be assigned to\
    \ the output\n   branches of a point-to-multipoint connection. Many switches are\n\
    \   incapable of supporting more than a single branch of any particular\n   point-to-multipoint\
    \ connection on the same output port. Specific\n   failure codes are defined for\
    \ some of these conditions.\n"
- title: 4.2 Delete Tree Message
  contents:
  - "4.2 Delete Tree Message\n   The Delete Tree message is a connection management\
    \ message used to\n   delete an entire virtual channel connection or an entire\
    \ virtual path\n   connection. All remaining branches of the connection are deleted.\
    \ A\n   virtual channel connection is specified by the Input Port, Input VPI,\n\
    \   and Input VCI fields. A virtual path connection is specified by the\n   Input\
    \ Port and Input VPI fields. The Output Port, Output VPI, and\n   Output VCI fields\
    \ are not used in this message. The Delete Tree\n   message is:\n      Message\
    \ Type = 18\n   If the Result field of the request message is \"AckAll\" a success\n\
    \   response message must be sent upon successful deletion of the\n   specified\
    \ connection. The success message must not be sent until the\n   delete operation\
    \ has been completed and if possible, not until all\n   data on the connection,\
    \ queued for transmission, has been\n   transmitted. The Number of Branches field\
    \ is not used in either the\n   request or response messages of the Delete Tree\
    \ message.\n"
- title: 4.3 Verify Tree Message
  contents:
  - "4.3 Verify Tree Message\n   The Verify Tree message has been removed from this\
    \ version of GSMP.\n   Its function has been replaced by the Number of Branches\
    \ field in the\n   success response to the Add Branch message which contains the\
    \ number\n   of branches on a virtual channel connection after successful\n  \
    \ completion of an add branch operation.\n      Message Type = 19 is reserved.\n\
    \   If a request message is received with Message Type = 19 a failure\n   response\
    \ must be returned with the Code field indicating: \"The\n   specified request\
    \ is not implemented in this version of the\n   protocol.\"\n"
- title: 4.4 Delete All Message
  contents:
  - "4.4 Delete All Message\n   The Delete All message is a connection management\
    \ message used to\n   delete all connections on a switch input port. All connections\
    \ that\n   arrive at the specified input port must be deleted. On completion of\n\
    \   the operation all dynamically assigned VPI/VCI values for the\n   specified\
    \ port must be unassigned, i.e. there must be no virtual\n   connections established\
    \ in the VPI/VCI space that GSMP controls on\n   this port. The Input VPI, Input\
    \ VCI, Output Port, Output VPI, and\n   Output VCI fields are not used in this\
    \ message.  The Delete All\n   message is:\n      Message Type = 20\n   If the\
    \ Result field of the request message is \"AckAll\" a success\n   response message\
    \ must be sent upon completion of the operation. The\n   Number of Branches field\
    \ is not used in either the request or\n   response messages of the Delete All\
    \ message.  The success response\n   message must not be sent until the operation\
    \ has been completed.\n   The following failure response messages may be returned\
    \ to a Delete\n   All request.\n         The specified request is not implemented\
    \ on this switch.\n         One or more of the specified ports does not exist.\n\
    \         Invalid Port Session Number.\n   If any field in a Delete All message\
    \ not covered by the above failure\n   codes is invalid, a failure response must\
    \ be returned indicating:\n   \"Invalid request message.\" Else, the delete all\
    \ operation must be\n   completed successfully and a success message returned.\
    \ No other\n   failure messages are permitted.\n"
- title: 4.5 Delete Branches Message
  contents:
  - "4.5 Delete Branches Message\n   The Delete Branches message is a connection management\
    \ message used\n   to request one or more delete branch operations. Each delete\
    \ branch\n   operation deletes a branch of a virtual channel connection or a\n\
    \   virtual path connection, or in the case of the last branch of a\n   connection,\
    \ it deletes the connection. The Delete Branches message\n   is:\n      Message\
    \ Type = 17\n   The request message has the following format:\n    0         \
    \          1                   2                   3\n    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Reserved            |      Number of Elements       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                  Delete Branch Elements                     ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Number of Elements\n             Specifies the number of Delete Branch Elements\
    \ to follow in\n             the message. The number of Delete Branch Elements\
    \ in a\n             Delete Branches message must not cause the packet length\
    \ to\n             exceed the maximum transmission unit defined by the\n     \
    \        encapsulation.\n   Each Delete Branch Element specifies an output branch\
    \ to be deleted\n   and has the following structure:\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Port Session Number                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Input Port                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Error |      Input VPI        |          Input VCI            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Output Port                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |x x x x|      Output VPI       |          Output VCI           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Error\n             Is used to return a failure code indicating the reason\
    \ for\n             the failure of a specific Delete Branch Element in a Delete\n\
    \             Branches failure response message.  The Error field is not\n   \
    \          used in the request message and must be set to zero.  A\n         \
    \    value of zero is used to indicate that the delete operation\n           \
    \  specified by this Delete Branch Element was successful.\n             Values\
    \ for the other failure codes are specified in Section\n             3.2, \"Failure\
    \ Response Messages.\"\n             All other fields of the Delete Branch Element\
    \ have the same\n             definition as specified for the other connection\
    \ management\n             messages.\n   In each Delete Branch Element, either\
    \ a virtual channel connection is\n   specified by the Input Port, Input VPI,\
    \ and Input VCI fields; or a\n   virtual path connection is specified by the Input\
    \ Port and Input VPI\n   fields. The specific branch to be deleted is indicated\
    \ by the Output\n   Port, Output VPI, and Output VCI fields for virtual channel\n\
    \   connections and by the Output Port and Output VPI for virtual path\n   connections.\n\
    \   If the Result field of the Delete Branches request message is\n   \"AckAll\"\
    \ a success response message must be sent upon successful\n   deletion of the\
    \ branches specified by all of the Delete Branch\n   Elements. The success response\
    \ message must not be sent until all of\n   the delete branch operations have\
    \ been completed. The success\n   response message is only sent if all of the\
    \ requested delete branch\n   operations were successful. No Delete Branch Elements\
    \ are returned in\n   a Delete Branches success response message and the Number\
    \ of Elements\n   field must be set to zero.\n   If there is a failure in any\
    \ of the Delete Branch Elements a Delete\n   Branches failure response message\
    \ must be returned. The Delete\n   Branches failure response message is a copy\
    \ of the request message\n   with the Code field of the entire message set to,\
    \ \"Failure specific\n   to the particular message type,\" and the Error field\
    \ of each Delete\n   Branch Element indicating the result of each requested delete\n\
    \   operation. A failure in any of the Delete Branch Elements must not\n   interfere\
    \ with the processing of any other Delete Branch Elements.\n"
- title: 4.6 Move Branch Message
  contents:
  - "4.6 Move Branch Message\n   The Move Branch message is used to move a branch\
    \ of an existing\n   connection from its current output port VPI/VCI to a new\
    \ output port\n   VPI/VCI in a single atomic transaction. This operation occurs\n\
    \   frequently in IP switching, every time a flow is switched from hop-\n   by-hop\
    \ forwarding to a dedicated virtual channel.  The Move Branch\n   connection management\
    \ message has the following format for both\n   request and response messages:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Port Session Number                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Input Port                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Flags |        Input VPI      |           Input VCI           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Old Output Port                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |x x x x|    Old Output VPI     |        Old Output VCI         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        New Output Port                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |x x x x|    New Output VPI     |        New Output VCI         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Number of Branches      |       Class of Service        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The VCC Move Branch message is a connection management message used\n   to\
    \ move a single output branch of a virtual channel connection from\n   its current\
    \ output port, output VPI, and output VCI, to a new output\n   port, output VPI,\
    \ and output VCI on the same virtual channel\n   connection. None of the other\
    \ output branches are modified.  When the\n   operation is complete the original\
    \ output VPI/VCI on the original\n   output port will be deleted from the connection.\
    \  The VCC Move Branch\n   message is:\n      Message Type = 22\n   For the VCC\
    \ Move Branch message, if the virtual channel connection\n   specified by the\
    \ Input Port, Input VPI, and Input VCI fields already\n   exists, and the output\
    \ branch specified by the Old Output Port, Old\n   Output VPI, and Old Output\
    \ VCI fields exists as a branch on that\n   connection, the output branch specified\
    \ by the New Output Port, New\n   Output VPI, and New Output VCI fields is added\
    \ to the connection and\n   the branch specified by the Old Output Port, Old Output\
    \ VPI, and Old\n   Output VCI fields is deleted. If the Result field of the request\n\
    \   message is \"AckAll\" a success response message must be sent upon\n   successful\
    \ completion of the operation. The success response message\n   must not be sent\
    \ until the Move Branch operation has been completed.\n   For the VCC Move Branch\
    \ message, if the virtual channel connection\n   specified by the Input Port,\
    \ Input VPI, and Input VCI fields already\n   exists, but the output branch specified\
    \ by the Old Output Port, Old\n   Output VPI, and Old Output VCI fields does not\
    \ exist as a branch on\n   that connection, a failure response must be returned\
    \ with the Code\n   field indicating, \"The specified branch does not exist.\"\
    \n   The VPC Move Branch message is a connection management message used\n   to\
    \ move a single output branch of a virtual path connection from its\n   current\
    \ output port and output VPI, to a new output port and output\n   VPI on the same\
    \ virtual channel connection. None of the other output\n   branches are modified.\
    \  When the operation is complete the original\n   output VPI on the original\
    \ output port will be deleted from the\n   connection.  The VPC Move Branch message\
    \ is:\n      Message Type = 27\n   For the VPC Move Branch message, if the virtual\
    \ path connection\n   specified by the Input Port and Input VPI fields already\
    \ exists, and\n   the output branch specified by the Old Output Port and Old Output\
    \ VPI\n   fields exists as a branch on that connection, the output branch\n  \
    \ specified by the New Output Port and New Output VPI fields is added\n   to the\
    \ connection and the branch specified by the Old Output Port and\n   Old Output\
    \ VPI fields is deleted. If the Result field of the request\n   message is \"\
    AckAll\" a success response message must be sent upon\n   successful completion\
    \ of the operation. The success response message\n   must not be sent until the\
    \ Move Branch operation has been completed.\n   For the VPC Move Branch message,\
    \ if the virtual path connection\n   specified by the Input Port and Input VPI\
    \ fields already exists, but\n   the output branch specified by the Old Output\
    \ Port and Old Output VPI\n   fields does not exist as a branch on that connection,\
    \ a failure\n   response must be returned with the Code field indicating, \"The\n\
    \   specified branch does not exist.\"\n   If the virtual channel connection specified\
    \ by the Input Port, Input\n   VPI, and Input VCI fields; or the virtual path\
    \ connection specified\n   by the Input Port and  Input VPI fields; does not exist,\
    \ a failure\n   response must be returned with the Code field indicating, \"The\n\
    \   specified connection does not exist.\"\n   If the output branch specified\
    \ by the New Output Port, New Output\n   VPI, and New Output VCI fields for a\
    \ virtual channel connection; or\n   the output branch specified by the New Output\
    \ Port and New Output VPI\n   fields for a virtual path connection; is already\
    \ in use by any\n   connection other than that specified by the Input Port, Input\
    \ VPI,\n   and Input VCI fields then the resulting output branch will have\n \
    \  multiple input branches. If multiple point-to-point connections share\n   the\
    \ same output branch the result will be a multipoint-to-point\n   connection.\
    \ If multiple point-to-multipoint trees share the same\n   output branches the\
    \ result will be a multipoint-to-multipoint\n   connection.\n"
- title: 5. Port Management Messages
  contents:
  - '5. Port Management Messages

    '
- title: 5.1 Port Management Message
  contents:
  - "5.1 Port Management Message\n   The Port Management message allows a port to\
    \ be brought into service,\n   taken out of service, looped back, reset, or the\
    \ transmit cell rate\n   changed.  Only the Bring Up and the Reset Input Port\
    \ functions change\n   the connection state (established connections) on the input\
    \ port.\n   Only the Bring Up function changes the value of the Port Session\n\
    \   Number. If the Result field of the request message is \"AckAll\" a\n   success\
    \ response message must be sent upon successful completion of\n   the operation.\
    \ The success response message must not be sent until\n   the operation has been\
    \ completed. The Port Management Message is:\n      Message Type = 32\n   The\
    \ Port Management message has the following format for the request\n   and success\
    \ response messages:\n    0                   1                   2          \
    \         3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  \
    \ |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Port Session Number                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Event Sequence Number                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Event Flags  |   Duration    |          Function             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Transmit Cell Rate                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Event Sequence Number\n             In the success response message gives\
    \ the current value of\n             the Event Sequence Number of the switch port\
    \ indicated by\n             the Port field. The Event Sequence Number is set\
    \ to zero\n             when the port is initialized. It is incremented by one\
    \ each\n             time the port detects an asynchronous event that the switch\n\
    \             would normally report via an Event message. If the Event\n     \
    \        Sequence Number in the success response differs from the\n          \
    \   Event Sequence Number of the most recent Event message\n             received\
    \ for that port, events have occurred that were not\n             reported via\
    \ an Event message. This is most likely to be\n             due to the flow control\
    \ that restricts the rate at which a\n             switch can send Event messages\
    \ for each port. In the\n             request message this field is not used.\n\
    \   Event Flags\n             Field in the request message is used to reset the\
    \ Event\n             Flags in the switch port indicated by the Port field. Each\n\
    \             Event Flag in a switch port corresponds to a type of Event\n   \
    \          message. When a switch port sends an Event message it sets\n      \
    \       the corresponding Event Flag on that port. The port is not\n         \
    \    permitted to send another Event message of the same type\n             until\
    \ the Event Flag has been reset. If the Function field\n             in the request\
    \ message is set to \"Reset Event Flags,\" for\n             each bit that is\
    \ set in the Event Flags field, the\n             corresponding Event Flag in\
    \ the switch port is reset.\n             The Event Flags field is only used in\
    \ a request message\n             with the Function field set to \"Reset Event\
    \ Flags.\" For all\n             other values of the Function field, the Event\
    \ Flags field\n             is not used.  In the success response message the\
    \ Event\n             Flags field must be set to the current value of the Event\n\
    \             Flags for the port, after the completion of the operation\n    \
    \         specified by the request message, for all values of the\n          \
    \   Function field. Setting the Event Flags field to all zeros\n             in\
    \ a \"Reset Event Flags\" request message allows the\n             controller\
    \ to obtain the current state of the Event Flags\n             and the current\
    \ Event Sequence Number of the port without\n             changing the state of\
    \ the Event Flags.\n             The correspondence between the types of Event\
    \ message and\n             the bits of the Event Flags field is as follows:\n\
    \                 0 1 2 3 4 5 6 7\n                +-+-+-+-+-+-+-+-+\n       \
    \         |U|D|I|N|Z|x x x|\n                +-+-+-+-+-+-+-+-+\n             \
    \   U: Port Up          Bit 0, (most significant bit)\n                D: Port\
    \ Down        Bit 1,\n                I: Invalid VPI/VCI  Bit 2,\n           \
    \     N: New Port         Bit 3,\n                Z: Dead Port        Bit 4,\n\
    \                x: Unused           Bits 5--7.\n   Duration\n             Is\
    \ the length of time, in seconds, that any of the loopback\n             states\
    \ remain in operation. When the duration has expired\n             the port will\
    \ automatically be returned to service.  If\n             another Port Management\
    \ message is received for the same\n             port before the duration has\
    \ expired, the loopback will\n             continue to remain in operation for\
    \ the length of time\n             specified by the Duration field in the new\
    \ message. The\n             Duration field is only used in request messages with\
    \ the\n             Function field set to Internal Loopback, External Loopback,\n\
    \             or Bothway Loopback.\n   Function\n             Specifies the action\
    \ to be taken. The specified action will\n             be taken regardless of\
    \ the current status of the port\n             (Available, Unavailable, or any\
    \ Loopback state).  If the\n             specified function requires a new Port\
    \ Session Number to be\n             generated, the new Port Session Number must\
    \ be returned in\n             the success response message.  The defined values\
    \ of the\n             Function field are:\n             Bring Up:\n         \
    \         Function = 1. Bring the port into service. All\n                  connections\
    \ that arrive at the specified input port\n                  must be deleted and\
    \ a new Port Session Number must be\n                  selected using some form\
    \ of random number. On\n                  completion of the operation all dynamically\
    \ assigned\n                  VPI/VCI values for the specified input port must\
    \ be\n                  unassigned, i.e. no virtual connections will be\n    \
    \              established in the VPI/VCI space that GSMP controls on\n      \
    \            this input port. The Port Status of the port\n                  afterwards\
    \ will be Available.\n             Take Down:\n                  Function = 2.\
    \ Take the port out of service. Any cells\n                  received at this\
    \ port will be discarded. No cells will\n                  be transmitted from\
    \ this port. The Port Status of the\n                  port afterwards will be\
    \ Unavailable.\n                  The behavior is undefined if the port is taken\
    \ down\n                  over which the GSMP session that controls the switch\n\
    \                  is running. (In this case the most probable behavior\n    \
    \              would be for the switch either to ignore the message\n        \
    \          or to terminate the current GSMP session and to\n                 \
    \ initiate another session, possibly with the backup\n                  controller,\
    \ if any.) The correct method to reset the\n                  link over which\
    \ GSMP is running is to issue an RSTACK\n                  message in the adjacency\
    \ protocol.\n             Internal Loopback:\n                  Function = 3.\
    \ Cells arriving at the output port from\n                  the switch fabric\
    \ are looped through to the input port\n                  to return to the switch\
    \ fabric. All of the ATM\n                  functions of the input port above\
    \ the physical layer,\n                  e.g. header translation, are performed\
    \ upon the looped\n                  back cells. The Port Status of the port afterwards\n\
    \                  will be Internal Loopback.\n             External Loopback:\n\
    \                  Function = 4. Cells arriving at the input port from\n     \
    \             the external communications link are immediately\n             \
    \     looped back to the communications link at the physical\n               \
    \   layer without entering the input port. None of the ATM\n                 \
    \ functions of the input port above the physical layer\n                  are\
    \ performed upon the looped back cells. The Port\n                  Status of\
    \ the port afterwards will be External\n                  Loopback.\n        \
    \     Bothway Loopback:\n                  Function = 5. Both internal and external\
    \ loopback are\n                  performed. The Port Status of the port afterwards\
    \ will\n                  be Bothway Loopback.\n             Reset Input Port:\n\
    \                  Function = 6. All connections that arrive at the\n        \
    \          specified input port must be deleted and the input and\n          \
    \        output port hardware re-initialized. On completion of\n             \
    \     the operation all dynamically assigned VPI/VCI values\n                \
    \  for the specified input port must be unassigned, i.e.\n                  no\
    \ virtual connections will be established in the\n                  VPI/VCI space\
    \ that GSMP controls on this input port.\n                  The range of VPIs\
    \ and VCIs that may be controlled by\n                  GSMP on this port will\
    \ be set to the default values\n                  specified in the Port Configuration\
    \ message.  The\n                  transmit cell rate of the output port must\
    \ be set to\n                  its default value. The Port Session Number is not\n\
    \                  changed by the Reset Input Port function.  The Port\n     \
    \             Status of the port afterwards will be Unavailable.\n           \
    \  Reset Event Flags:\n                  Function = 7. For each bit that is set\
    \ in the Event\n                  Flags field, the corresponding Event Flag in\
    \ the\n                  switch port must be reset. The Port Status of the port\n\
    \                  is not changed by this function.\n             Set Transmit\
    \ Cell Rate:\n                  Function = 8. Sets the transmit cell rate of the\n\
    \                  output port as close as possible to the rate specified\n  \
    \                in the Transmit Cell Rate field. In the success\n           \
    \       response message the Transmit Cell Rate must indicate\n              \
    \    the actual transmit cell rate of the output port.  If\n                 \
    \ the transmit cell rate of the requested output port\n                  cannot\
    \ be changed, a failure response must be returned\n                  with the\
    \ Code field indicating: \"The transmit cell\n                  rate of this output\
    \ port cannot be changed.\" If the\n                  transmit cell rate of the\
    \ requested output port can be\n                  changed, but the value of the\
    \ Transmit Cell Rate field\n                  is beyond the range of acceptable\
    \ values, a failure\n                  response must be returned with the Code\
    \ field\n                  indicating: \"Requested transmit cell rate out of range\n\
    \                  for this output port.\" In the failure response message\n \
    \                 the Transmit Cell Rate must contain the same value as\n    \
    \              contained in the request message that caused the\n            \
    \      failure. The transmit cell rate of the output port is\n               \
    \   not changed by the Bring Up, Take Down, or any of the\n                  Loopback\
    \ functions. It is returned to the default\n                  value by the Reset\
    \ Input Port function.\n        Transmit Cell Rate\n             This field is\
    \ only used in request and success response\n             messages with the Function\
    \ field set to \"Set Transmit Cell\n             Rate.\" It is used to set the\
    \ output cell rate of the output\n             port. It is specified in cells/s.\
    \ If the Transmit Cell Rate\n             field contains the value 0xFFFFFFFF\
    \ the transmit cell rate\n             of the output port should be set to the\
    \ highest valid\n             value.\n"
- title: 5.2. Label Range Message
  contents:
  - "5.2. Label Range Message\n   The default label range, Min VPI to Max VPI and\
    \ Min VCI to Max VCI,\n   is specified for each port by the Port Configuration\
    \ or the All Ports\n   Configuration messages.  When the protocol is initialized,\
    \ before the\n   transmission of any Label Range messages, the label range of\
    \ each\n   port will be set to the default label range. (The default label range\n\
    \   is dependent upon the switch design and configuration and is not\n   specified\
    \ by the GSMP protocol.) The Label Range message allows the\n   range of VPIs\
    \ supported by a specified port, or the range of VCIs\n   supported by a specified\
    \ VPI on a specified port, to be changed.\n   Each switch port must declare whether\
    \ it supports the Label Range\n   message in the Port Configuration or the All\
    \ Ports Configuration\n   messages.  The Label Range message is:\n      Message\
    \ Type = 33\n   The Label Range message has the following format for the request\
    \ and\n   success response messages:\n    0                   1              \
    \     2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Port Session Number                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Q|V|x x|      Min VPI          |x x x x|       Max VPI         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Min VCI            |           Max VCI             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Remaining VPIs         |        Remaining VCIs         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Flags\n        Q: Query\n             If the Query flag is set in a request\
    \ message, the switch\n             must respond with the current range of valid\
    \ VPIs, or the\n             current range of valid VCIs on a specified VPI, according\n\
    \             to the VPI/VCI flag. The current label range is not changed\n  \
    \           by a request message with the Query flag set. If the Query\n     \
    \        flag is zero, the message is requesting a label change\n            \
    \ operation.\n        V: VPI/VCI\n             If the VPI/VCI flag is set, the\
    \ message refers to a range\n             of VPIs only. The Min VCI and Max VCI\
    \ fields are unused. If\n             the VPI/VCI flag is zero the message refers\
    \ to a range of\n             VCIs on either one VPI or on a range of VPIs.\n\
    \        x: Unused\n   Min VPI\n   Max VPI\n             Specify a range of VPI\
    \ values, Min VPI to Max VPI\n             inclusive.  A single VPI may be specified\
    \ with a Min VPI\n             and a Max VPI having the same value.  In a request\
    \ message,\n             if the value of the Max VPI field is less than or equal\
    \ to\n             the value of the Min VPI field, the requested range is a\n\
    \             single VPI with a value equal to the Min VPI field. Zero is\n  \
    \           a valid value.  In a request message, if the Query flag is\n     \
    \        set, and the VPI/VCI flag is zero, the Max VPI field\n             specifies\
    \ a single VPI and the Min VPI field is not used.\n             The maximum valid\
    \ value of these fields for both request\n             and response messages is\
    \ 0xFFF.\n   Min VCI\n   Max VCI\n             Specify a range of VCI values,\
    \ Min VCI to Max VCI\n             inclusive.  A single VCI may be specified with\
    \ a Min VCI\n             and a Max VCI having the same value.  In a request message,\n\
    \             if the value of the Max VCI field is less than or equal to\n   \
    \          the value of the Min VCI field, the requested range is a\n        \
    \     single VCI with a value equal to the Min VCI field. Zero is\n          \
    \   a valid value.  (However, VPI=0, VCI=0 is not available as\n             a\
    \ virtual channel connection as it is used as a special\n             value in\
    \ ATM to indicate an unassigned cell.)\n   Remaining VPIs\n   Remaining VCIs\n\
    \             These fields are unused in the request message. In the\n       \
    \      success response message and in the failure response\n             message\
    \ these fields give the maximum number of remaining\n             VPIs and VCIs\
    \ that could be requested for allocation on the\n             specified port (after\
    \ completion of the requested operation\n             in the case of the success\
    \ response). It gives the switch\n             controller an idea of how many\
    \ VPIs and VCIs it could\n             request. The number given is the maximum\
    \ possible given the\n             constraints of the switch hardware. There is\
    \ no implication\n             that this number of VPIs and VCIs is available\
    \ to every\n             switch port.\n   If the Query flag and the VPI/VCI flag\
    \ are set in the request\n   message, the switch must reply with a success response\
    \ message\n   containing the current range of valid VPIs that are supported by\
    \ the\n   port.  The Min VPI and Max VPI fields are not used in the request\n\
    \   message.\n   If the Query flag is set and the VPI/VCI flag is zero in the\
    \ request\n   message, the switch must reply with a success response message\n\
    \   containing the current range of valid VCIs that are supported by the\n   VPI\
    \ specified by the Max VPI field.  If the requested VPI is invalid,\n   a failure\
    \ response must be returned indicating: \"One or more of the\n   specified input\
    \ VPIs is invalid.\" The Min VPI field is not used in\n   either the request or\
    \ success response messages.\n   If the Query flag is zero and the VPI/VCI flag\
    \ is set in the request\n   message, the Min VPI and Max VPI fields specify the\
    \ new range of VPIs\n   to be allocated to the input port specified by the Port\
    \ field.\n   Whatever the range of VPIs previously allocated to this port it\n\
    \   should be increased or decreased to the specified value.\n   If the Query\
    \ flag and the VPI/VCI flag are zero in the request\n   message, the Min VCI and\
    \ Max VCI fields specify the range of VCIs to\n   be allocated to each of the\
    \ VPIs specified by the VPI range.\n   Whatever the range of VCIs previously allocated\
    \ to each of the VPIs\n   within the specified VPI range on this port, it should\
    \ be increased\n   or decreased to the specified value.  The allocated VCI range\
    \ must be\n   the same on each of the VPIs within the specified VPI range.\n \
    \  The success response to a Label Range message requesting a change of\n   label\
    \ range is a copy of the request message with the Remaining VPIs\n   and Remaining\
    \ VCIs fields updated to the new values after the Label\n   Range operation.\n\
    \   If the switch is unable to satisfy a request to change the VPI range,\n  \
    \ it must return a failure response message with the Code field set to\n   \"\
    Cannot support requested VPI range.\" In this failure response\n   message the\
    \ switch must use the Min VPI and Max VPI fields to suggest\n   a VPI range that\
    \ it would be able to satisfy.\n   If the switch is unable to satisfy a request\
    \ to change the VCI range\n   on all VPIs within the requested VPI range, it must\
    \ return a failure\n   response message with the Code field set to \"Cannot support\
    \ requested\n   VCI range on all requested VPIs.\" In this failure response message\n\
    \   the switch must use the Min VPI, Max VPI, Min VCI, and Max VCI fields\n  \
    \ to suggest a VPI and VCI range that it would be able to satisfy.\n   In all\
    \ other failure response messages for the label range operation\n   the switch\
    \ must return the values of Min VPI, Max VPI, Min VCI, and\n   Max VCI from the\
    \ request message.\n   While switches can typically support all 256 or 4096 VPIs\
    \ the VCI\n   range that can be supported is often more constrained. Often the\
    \ Min\n   VCI must be 0 or 32. Typically all VCIs within a particular VPI must\n\
    \   be contiguous.  The hint in the failure response message allows the\n   switch\
    \ to suggest a label range that it could satisfy in view of its\n   particular\
    \ architecture.\n   While the Label Range message is defined to specify both a\
    \ range of\n   VPIs and a range of VCIs within each VPI, the most likely use is\
    \ to\n   change either the VPI range or the range of VCIs within a single VPI.\n\
    \   It is possible for a VPI to be valid but to be allocated no valid\n   VCIs.\
    \ Such a VPI could be used for a virtual path connection but to\n   support virtual\
    \ channel connections it would need to be allocated a\n   range of VCIs.\n   A\
    \ Label Range request message may be issued regardless of the Port\n   Status\
    \ or the Line Status of the target switch port. If the Port\n   field of the request\
    \ message contains an invalid port (a port that\n   does not exist or a port that\
    \ has been removed from the switch) a\n   failure response message must be returned\
    \ with the Code field set to,\n   \"One or more of the specified ports does not\
    \ exist.\"\n"
- title: 6. State and Statistics Messages
  contents:
  - "6. State and Statistics Messages\n   The state and statistics messages permit\
    \ the controller to request\n   the values of various hardware counters associated\
    \ with the switch\n   input and output ports, virtual path connections, virtual\
    \ channel\n   connections, and QoS Classes.  They also permit the controller to\n\
    \   request the connection state of a switch input port.  The Connection\n   Activity\
    \ message is used to determine whether one or more specific\n   virtual channel\
    \ connections or virtual path connections have recently\n   been carrying traffic.\
    \  The Statistics message is used to query the\n   various port, connection, and\
    \ QoS class traffic and error counters.\n   The Report Connection State message\
    \ is used to request an input port\n   to report the connection state for a single\
    \ virtual channel\n   connection, a single virtual path connection, or for the\
    \ entire input\n   port.\n"
- title: 6.1 Connection Activity Message
  contents:
  - "6.1 Connection Activity Message\n   The Connection Activity message is used to\
    \ determine whether one or\n   more specific virtual channel connections or virtual\
    \ path connections\n   have recently been carrying traffic. The Connection Activity\
    \ message\n   contains one or more Activity Records. Each Activity Record is used\n\
    \   to request and return activity information concerning a single\n   virtual\
    \ channel connection or virtual path connection.  Each virtual\n   channel connection\
    \ is specified by its input port, input VPI, and\n   input VCI. Each virtual path\
    \ connection is specified by its input\n   port and input VPI. These are specified\
    \ in the Input Port, Input VPI,\n   and Input VCI fields of each Activity Record.\
    \  Two forms of activity\n   detection are supported. If the switch supports per\
    \ connection\n   traffic accounting, the current value of the traffic counter\
    \ for each\n   specified virtual channel connection or virtual path connection\
    \ must\n   be returned. The units of traffic counted are not specified but will\n\
    \   typically be either cells or frames.  The controller must compare the\n  \
    \ traffic counts returned in the message with previous values for each\n   of\
    \ the specified connections to determine whether each connection has\n   been\
    \ active in the intervening period.  If the switch does not\n   support per connection\
    \ traffic accounting, but is capable of\n   detecting per connection activity\
    \ by some other unspecified means,\n   the result may be indicated for each connection\
    \ using the Flags\n   field. The Connection Activity message is:\n      Message\
    \ Type = 48\n   The Connection Activity request and success response messages\
    \ have\n   the following format:\n    0                   1                  \
    \ 2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Number of Records       |           Reserved            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                     Activity Records                        ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Number of Records\n             Field specifies the number of Activity Records\
    \ to follow.\n             The number of Connection Activity records in a single\n\
    \             Connection Activity message must not cause the packet\n        \
    \     length to exceed the maximum transmission unit defined by\n            \
    \ the encapsulation.\n   Each Activity Record has the following format:\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Input Port                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |V|C|A|x|      Input VPI        |          Input VCI            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                       Traffic Count                         +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Input Port\n             Identifies the port number of the input port on which\
    \ the\n             connection of interest arrives in order to identify the\n\
    \             connection (regardless of whether the traffic count for the\n  \
    \           connection is maintained on the input port or the output\n       \
    \      port).\n   Input VPI\n   Input VCI\n             Fields identify the specific\
    \ virtual path connection or\n             virtual channel connection for which\
    \ statistics are being\n             requested. For a virtual path connection\
    \ the Input VCI\n             field is not used.\n   Flags\n        V: Valid Record\n\
    \             In the success response message the Valid Record flag is\n     \
    \        used to indicate an invalid Activity Record. The flag must\n        \
    \     be zero if any of the fields in this Activity Record are\n             invalid,\
    \ if the input port specified by the Input Port\n             field does not exist,\
    \ or if the specified connection does\n             not exist. If the Valid Record\
    \ flag is zero in a success\n             response message, the Counter flag,\
    \ the Activity flag, and\n             the VC Traffic Count field are undefined.\
    \ If the Valid\n             Record flag is set, the Activity Record is valid,\
    \ and the\n             Counter and Activity flags are valid. The Valid Record\
    \ flag\n             is not used in the request message.\n        C: Counter\n\
    \             In a success response message, if the Valid Record flag is\n   \
    \          set, the Counter flag, if zero, indicates that the value in\n     \
    \        the VC Traffic Count field is valid.  If set, it indicates\n        \
    \     that the value in the Activity flag is valid. The Counter\n            \
    \ flag is not used in the request message.\n        A: Activity\n            \
    \ In a success response message, if the Valid Record and\n             Counter\
    \ flags are set, the Activity flag, if set, indicates\n             that there\
    \ has been some activity on this connection since\n             the last Connection\
    \ Activity message for this connection.\n             If zero, it indicates that\
    \ there has been no activity on\n             this connection since the last Connection\
    \ Activity message\n             for this connection. The Activity flag is not\
    \ used in the\n             request message.\n        x: Unused\n   Traffic Count\n\
    \             Field is not used in the request message.  In the success\n    \
    \         response message, if the switch supports per connection\n          \
    \   traffic counting, the Traffic Count field must be set to\n             the\
    \ value of a free running, connection specific, 64-bit\n             traffic counter\
    \ counting traffic flowing across the\n             specified connection.  The\
    \ value of the traffic counter is\n             not modified by reading it.  If\
    \ per connection traffic\n             counting is supported, the switch must\
    \ report the\n             Connection Activity result using the traffic count\
    \ rather\n             than using the Activity flag.\n   The format of the failure\
    \ response is the same as the request message\n   with the Number of Records field\
    \ set to zero and no VC Activity\n   records returned in the message. If the switch\
    \ is incapable of\n   detecting per connection activity, a failure response must\
    \ be\n   returned indicating, \"The specified request is not implemented on\n\
    \   this switch.\"\n"
- title: 6.2 Statistics Messages
  contents:
  - "6.2 Statistics Messages\n   The Statistics messages are used to query the various\
    \ port,\n   connection, and QoS class traffic and error counters.\n   The Statistics\
    \ request messages have the following format:\n    0                   1     \
    \              2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | zero  |          VPI          |              VCI              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      QoS Class Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   VPI\n   VCI\n             Fields identify the specific virtual path connection\
    \ or\n             virtual channel connection for which statistics are being\n\
    \             requested.  For a virtual path connection the Input VCI\n      \
    \       field is not used.  For requests that do not require a\n             virtual\
    \ path connection or virtual channel connection to be\n             specified,\
    \ the VPI and VCI fields are not used.\n   QoS Class Identifier\n            \
    \ Field identifies the QoS class for which statistics are\n             being\
    \ requested. This field is only used if the QoS Class\n             Establishment\
    \ message defined in section 9.4 is\n             implemented.\n   The success\
    \ response for the Statistics message has the following\n   format:\n    0   \
    \                1                   2                   3\n    0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | zero  |          VPI          |              VCI              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      QoS Class Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                     Input Cell Count                        +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                     Input Frame Count                       +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                  Input Cell Discard Count                   +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                 Input Frame Discard Count                   +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                   Input HEC Error Count                     +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                Input Invalid VPI/VCI Count                  +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                     Output Cell Count                       +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                    Output Frame Count                       +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                 Output Cell Discard Count                   +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                Output Frame Discard Count                   +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Port\n   VPI/VCI\n   QoS Class Identifier\n             Fields are the same\
    \ as those of the request message.\n   Input Cell Count\n   Output Cell Count\n\
    \             Give the value of a free running 64-bit counter counting\n     \
    \        cells arriving at the input or departing from the output\n          \
    \   respectively.\n   Input Frame Count\n   Output Frame Count\n             Give\
    \ the value of a free running 64-bit counter counting\n             frames (packets)\
    \ arriving at the input or departing from\n             the output respectively.\n\
    \   Input Cell Discard Count\n   Output Cell Discard Count\n             Give\
    \ the value of a free running 64-bit counter counting\n             cells discarded\
    \ due to queue overflow on an input port or\n             on an output port respectively.\n\
    \   Input Frame Discard Count\n   Output Frame Discard Count\n             Give\
    \ the value of a free running 64-bit counter counting\n             frames discarded\
    \ due to congestion on an input port or on\n             an output port respectively.\n\
    \   HEC Error Count\n             Gives the value of a free running 64-bit counter\
    \ counting\n             cells discarded due to header checksum errors on arrival\
    \ at\n             an input port.\n   Invalid VPI/VCI Count\n             Gives\
    \ the value of a free running 64-bit counter counting\n             cells discarded\
    \ because their VPI/VCI is invalid on arrival\n             at an input port.\
    \ For a virtual channel connection an\n             incoming VPI/VCI is invalid\
    \ if no connection is currently\n             established having that value of\
    \ VPI/VCI. For a virtual\n             path connection an incoming VPI is invalid\
    \ if no connection\n             is currently established having that value of\
    \ VPI.\n"
- title: 6.2.1 Port Statistics Message
  contents:
  - "6.2.1 Port Statistics Message\n   The Port Statistics message requests the statistics\
    \ for the switch\n   port specified in the Port field. The contents of the VPI/VCI\
    \ and the\n   QoS Class Identifier fields in the Port Statistics request message\n\
    \   are ignored. All of the count fields in the success response message\n   refer\
    \ to per-port counts regardless of the connection or QoS class to\n   which the\
    \ cells belong.  Any of the count fields in the success\n   response message not\
    \ supported by the port must be set to zero. The\n   Port Statistics message is:\n\
    \      Message Type = 49\n"
- title: 6.2.2 Connection Statistics Message
  contents:
  - "6.2.2 Connection Statistics Message\n   The Connection Statistics message requests\
    \ the statistics for the\n   virtual channel connection specified in the VPI/VCI\
    \ field, or the\n   virtual path connection specified in the VPI field, that arrives\
    \ on\n   the switch input port specified in the Port field, regardless of the\n\
    \   QoS class to which the cells belong. All of the count fields in the\n   success\
    \ response message refer only to the specified connection.  The\n   HEC Error\
    \ Count and Invalid VPI/VCI Count fields are not connection\n   specific and must\
    \ be set to zero. Any of the other count fields not\n   supported on a per connection\
    \ basis must be set to zero in the\n   success response message. The Connection\
    \ Statistics message is:\n      Message Type = 50\n"
- title: 6.2.3 QoS Class Statistics Message
  contents:
  - "6.2.3 QoS Class Statistics Message\n   The QoS Class Statistics message requests\
    \ the statistics for the QoS\n   class specified by the QoS Class Identifier field\
    \ that arrives on the\n   switch input port specified in the Port field, regardless\
    \ of the\n   connection to which the cells belong. The QoS Statistics message\
    \ is\n   only used if the QoS Class Establishment message defined in section\n\
    \   9.4 is implemented.  The contents of the VPI/VCI fields in the QoS\n   Class\
    \ Statistics request message are ignored. All of the count fields\n   in the success\
    \ response message refer only to the specified QoS\n   class.  The HEC Error Count\
    \ and Invalid VPI/VCI Count fields are not\n   specific to a QoS class and must\
    \ be set to zero. Any of the other\n   count fields not supported on a per QoS\
    \ class basis must be set to\n   zero in the success response message. The QoS\
    \ Class Statistics\n   message is:\n      Message Type = 51\n"
- title: 6.3 Report Connection State Message
  contents:
  - "6.3 Report Connection State Message\n   The Report Connection State message is\
    \ used to request an input port\n   to report the connection state for a single\
    \ virtual channel\n   connection, a single virtual path connection, or for the\
    \ entire input\n   port. The Report Connection State message is:\n      Message\
    \ Type = 52\n   The Report Connection State request message has the following\
    \ format:\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Input Port                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |A|V|x x|       Input VPI       |          Input VCI            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Input Port\n             Identifies the port number of the input port for\
    \ which the\n             connection state is being requested.\n   Flags\n   \
    \     A: All Connections\n             If the All Connections flag is set, the\
    \ message requests\n             the connection state for all virtual path connections\
    \ and\n             virtual channel connections that arrive at the input port\n\
    \             specified by the Input Port field. In this case the Input\n    \
    \         VPI and Input VCI fields and the VPI/VCI flag are unused.\n        V:\
    \ VPI/VCI\n             If the All Connections flag is zero and the VPI/VCI flag\
    \ is\n             set, the message requests the connection state for the\n  \
    \           virtual path connection that arrives at the input port\n         \
    \    specified by the Input Port and Input VPI fields.  If the\n             specified\
    \ Input VPI identifies a virtual path connection\n             (i.e. a single\
    \ switched virtual path) the state for that\n             connection is requested.\
    \  If the specified Input VPI\n             identifies a virtual path containing\
    \ virtual channel\n             connections, the message requests the connection\
    \ state for\n             all virtual channel connections that belong to the\n\
    \             specified virtual path. The Input VCI field is not used.\n     \
    \        If the All Connections flag is zero and the VPI/VCI flag is\n       \
    \      also zero, the message requests the connection state for\n            \
    \ the virtual channel connection that arrives at the input\n             port\
    \ specified by the Port, Input VPI and Input VCI fields.\n             x: Unused.\n\
    \   Input VPI\n   Input VCI\n             Fields identify the specific virtual\
    \ path connection, the\n             specific virtual path, or the specific virtual\
    \ channel\n             connection for which connection state is being requested.\n\
    \             For a virtual path connection (switched as a single virtual\n  \
    \           path connection) or a virtual path (switched as one or more\n    \
    \         virtual channel connections within the virtual path) the\n         \
    \    Input VCI field is not used.  For requests that do not\n             require\
    \ a virtual path connection or virtual channel\n             connection to be\
    \ specified, the Input VPI and Input VCI\n             fields are not used.\n\
    \   The Report Connection State success response message has the\n   following\
    \ format:\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Input Port                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Sequence Number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                     Connection Records                      ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Input Port\n             Is the same as the Input Port field in the request\
    \ message.\n             It identifies the port number of the input port for which\n\
    \             the connection state is being reported.\n   Sequence Number\n  \
    \           In the case that the requested connection state cannot be\n      \
    \       reported in a single success response message, each\n             successive\
    \ success response message in reply to the same\n             request message\
    \ must increment the Sequence Number. The\n             Sequence Number of the\
    \ first success response message, in\n             response to a new request message,\
    \ must be zero.\n   Connection Records\n             Each success response message\
    \ must contain one or more\n             Connection Records. Each Connection Record\
    \ specifies a\n             single point-to-point or point-to-multipoint virtual\
    \ path\n             connection or virtual channel connection. The number of\n\
    \             Connection Records in a single Report Connection State\n       \
    \      success response must not cause the packet length to exceed\n         \
    \    the maximum transmission unit defined by the encapsulation.\n           \
    \  If the requested connection state cannot be reported in a\n             single\
    \ success response message, multiple success response\n             messages must\
    \ be sent. All success response messages that\n             are sent in response\
    \ to the same request message must have\n             the same Input Port and\
    \ Transaction Identifier fields as\n             the request message. A single\
    \ Connection Record must not be\n             split across multiple success response\
    \ messages. The More\n             flag of the last Connection Record in a success\
    \ response\n             message indicates whether the response to the request\
    \ has\n             been completed or whether one or more further success\n  \
    \           response messages should be expected in response to the\n        \
    \     same request message.\n   Each Connection Record has the following format:\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |A|V|P|M|\
    \       Input VPI       |          Input VCI            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                    Output Branch Records                    ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Flags\n        A: All Connections\n        V: VPI/VCI\n             For the\
    \ first Connection Record in each success response\n             message the All\
    \ Connections and the VPI/VCI flags must be\n             the same as those of\
    \ the request message. For successive\n             Connection Records in the\
    \ same success response message\n             these flags are not used.\n    \
    \    P: VPC\n             The VPC flag, if set, indicates that the Connection\
    \ Record\n             refers to a virtual path connection.  If zero, it indicates\n\
    \             that the Connection Record refers to a virtual channel\n       \
    \      connection.\n        M: More\n             If the More flag is set, it\
    \ indicates that another\n             Connection Record, in response to the same\
    \ request message,\n             will follow either in the same success response\
    \ message or\n             in a successive success response message. If the More\
    \ flag\n             is zero it indicates that this is the last Connection\n \
    \            record in this success response message and that no further\n   \
    \          success response messages will be sent in response to the\n       \
    \      current request message. It indicates that the response to\n          \
    \   the request message is now complete.\n   Input VPI\n   Input VCI\n       \
    \      The input VPI and VCI of the connection specified in this\n           \
    \  Connection Record. If this Connection Record specifies a\n             virtual\
    \ path connection (the VPC flag is set) the Input VCI\n             field is unused.\n\
    \   Output Branch Records\n             Each Connection Record must contain one\
    \ or more Output\n             Branch Records. Each Output Branch Record specifies\
    \ a\n             single output branch belonging to the connection identified\n\
    \             by the Input VPI and Input VCI fields of the Connection\n      \
    \       Record. A point-to-point connection will require only a\n            \
    \ single Output Branch Record. A point-to-multipoint\n             connection\
    \ will require multiple Output Branch Records. The\n             last Output Branch\
    \ Record of each Connection Record is\n             indicated by the Last Branch\
    \ flag of the Output Branch\n             Record. If a point-to-multipoint connection\
    \ has more output\n             branches than can fit in a single Connection Record\n\
    \             contained within a single success response message, that\n     \
    \        connection may be reported using multiple Connection\n             Records\
    \ in multiple success response messages.\n   Each Output Branch Record has the\
    \ following format:\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Output Port                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|x x x|       Output VPI      |          Output VCI           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Output Port\n             The output port of the switch to which this output\
    \ branch\n             is routed.\n   Flags\n        L: Last Branch\n        \
    \     The Last Branch flag, if set, indicates that this is the\n             last\
    \ Output Branch Record of this Connection Record. If\n             zero, it indicates\
    \ that one or more further Output Branch\n             Records are to follow.\
    \ If this is the last Output Branch\n             Record in the message and the\
    \ Last Branch flag is zero,\n             further output branches belonging to\
    \ the same connection\n             will be given in another Connection Record.\
    \ This Connection\n             Record will be the first Connection Record in\
    \ the next\n             success response message. This Connection Record must\
    \ have\n             the same Input VPI and Input VCI values as the current\n\
    \             Connection Record.\n             x: Unused.\n   Output VPI\n   Output\
    \ VCI\n             The output VPI and VCI of the output branch specified in\n\
    \             this Output Branch Record.  If this Output Branch Record is\n  \
    \           part of a Connection Record that specifies a virtual path\n      \
    \       connection (the VPC flag is set) the Output VCI field is\n           \
    \  unused.\n   A Report Connection State request message may be issued regardless\
    \ of\n   the Port Status or the Line Status of the target switch port.\n   If\
    \ the Input Port of the request message is valid, and the All\n   Connections\
    \ flag is set, but there are no connections established on\n   that port, a failure\
    \ response message must be returned with the code\n   field set to, \"Failure\
    \ specific to the particular message type.\" For\n   the Report Connection State\
    \ message, this failure code indicates that\n   no connections matching the request\
    \ message were found.  This failure\n   message should also be returned if the\
    \ Input Port of the request\n   message is valid, the All Connections flag is\
    \ zero, and no\n   connections are found on that port matching the specified virtual\n\
    \   path connection, virtual path, or virtual channel connection.\n"
- title: 7. Configuration Messages
  contents:
  - "7. Configuration Messages\n   The configuration messages permit the controller\
    \ to discover the\n   capabilities of the switch. Three configuration request\
    \ messages have\n   been defined: Switch, Port, and All Ports.\n   All configuration\
    \ request messages have the following format:\n    0                   1     \
    \              2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 7.1 Switch Configuration Message
  contents:
  - "7.1 Switch Configuration Message\n   The Switch Configuration message requests\
    \ the global (non port-\n   specific) configuration for the switch. The Switch\
    \ Configuration\n   message is:\n      Message Type = 64\n   The Port field is\
    \ not used in the request message.\n   The Switch Configuration success response\
    \ message has the following\n   format:\n    0                   1           \
    \        2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Firmware Version Number    |          Window Size          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Switch Type          |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n   |                          Switch Name \
    \                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Firmware Version Number\n             The version number of the switch control\
    \ firmware\n             installed.\n   Window Size\n             The maximum\
    \ number of unacknowledged request messages that\n             may be transmitted\
    \ by the controller without the\n             possibility of loss.  This field\
    \ is used to prevent request\n             messages being lost in the switch because\
    \ of overflow in\n             the receive buffer. The field is a hint to the\
    \ controller.\n             If desired, the controller may experiment with higher\
    \ and\n             lower window sizes to determine heuristically the best\n \
    \            window size.\n   Switch Type\n             A 16-bit field allocated\
    \ by the manufacturer of the switch.\n             (For these purposes the manufacturer\
    \ of the switch is\n             assumed to be the organization identified by\
    \ the OUI in the\n             Switch Name field.) The Switch Type identifies\
    \ the product.\n             When the Switch Type is combined with the OUI from\
    \ the\n             Switch Name the product is uniquely identified. Network\n\
    \             Management may use this identification to obtain product\n     \
    \        related information from a database.\n   Switch Name\n             A\
    \ 48-bit quantity that is unique within the operational\n             context\
    \ of the device. A 48-bit IEEE 802 MAC address, if\n             available, may\
    \ be used as the Switch Name. The most\n             significant 24 bits of the\
    \ Switch Name must be an\n             Organizationally Unique Identifier (OUI)\
    \ that identifies\n             the manufacturer of the switch.\n"
- title: 7.2 Port Configuration Message
  contents:
  - "7.2 Port Configuration Message\n   The Port Configuration message requests the\
    \ switch for the\n   configuration information of a single switch port. The Port\
    \ field in\n   the request message specifies the port for which the configuration\
    \ is\n   requested.  The Port Configuration message is:\n      Message Type =\
    \ 65.\n   The Port Configuration success response message has the following\n\
    \   format:\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Port Session Number                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |V|M|L|R|      Min VPI          |Q|x x x|       Max VPI         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Min VCI            |           Max VCI             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Receive Cell Rate                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Transmit Cell Rate                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Port Status  |   Port Type   |  Line Status  |  Priorities   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Physical Slot Number      |     Physical Port Number      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Port\n             The switch port to which the configuration information\n\
    \             refers. Configuration information relating to both the\n       \
    \      input and the output sides of the switch port is given.\n             Port\
    \ numbers are 32 bits wide and allocated by the switch.\n             The switch\
    \ may choose to structure the 32 bits into\n             subfields that have meaning\
    \ to the physical structure of\n             the switch hardware (e.g.  physical\
    \ slot and port). This\n             structure may be indicated in the Physical\
    \ Slot Number and\n             Physical Port Number fields.\n   Flags\n     \
    \   V: VP Switching\n             The VP Switching flag, if set, indicates that\
    \ this input\n             port is capable of supporting virtual path switching.\
    \ Else,\n             if zero, it indicates that this input port is only capable\n\
    \             of virtual channel switching.\n        M: Multicast Labels\n   \
    \          The Multicast Labels flag, if set, indicates that this\n          \
    \   output port is capable of labelling each output branch of a\n            \
    \ point-to-multipoint tree with a different label. If zero,\n             it indicates\
    \ that this output port is not able to label\n             each output branch\
    \ of a point-to-multipoint tree with a\n             different label.\n      \
    \  L: Logical Multicast\n             The Logical Multicast flag, if set, indicates\
    \ that this\n             output port is capable of supporting more than a single\n\
    \             branch from any point-to-multipoint connection.  This\n        \
    \     capability is often referred to as logical multicast.  If\n            \
    \ zero, it indicates that this output port can only support a\n             single\
    \ output branch from each point-to-multipoint\n             connection.\n    \
    \    R: Label Range\n             The Label Range flag, if set, indicates that\
    \ this switch\n             port is capable of reallocating its VPI label range\
    \ or its\n             VCI label range and therefore accepts the Label Range\n\
    \             message. Else, if zero, it indicates that this port does\n     \
    \        not accept Label Range messages.\n        Q: QoS\n             The QoS\
    \ flag, if set, indicates that this switch port is\n             capable of handling\
    \ the Quality of Service messages defined\n             in section 9 of this specification.\
    \  Else, if zero, it\n             indicates that this port does not accept the\
    \ Quality of\n             Service messages.\n        x: Unused\n   Min VPI\n\
    \             The default minimum value of dynamically assigned incoming\n   \
    \          VPI that the connection table on the input port supports\n        \
    \     and that may be controlled by GSMP. This value is not\n             changed\
    \ as a result of the Label Range message.\n   Max VPI\n             The default\
    \ maximum value of dynamically assigned incoming\n             VPI that the connection\
    \ table on the input port supports\n             and that may be controlled by\
    \ GSMP.  This value is not\n             changed as a result of the Label Range\
    \ message.\n             At power-on, after a hardware reset, and after the Reset\n\
    \             Input Port function of the Port Management message, the\n      \
    \       input port must handle all values of VPI within the range\n          \
    \   Min VPI to Max VPI inclusive and GSMP must be able to\n             control\
    \ all values within this range.  It should be noted\n             that the range\
    \ Min VPI to Max VPI refers only to the\n             incoming VPI range that\
    \ can be supported by the associated\n             port. No restriction is placed\
    \ on the values of outgoing\n             VPIs that may be written into the cell\
    \ header. If the\n             switch does not support virtual paths it is acceptable\
    \ for\n             both Min VPI and Max VPI to specify the same value, most\n\
    \             likely zero.\n             Use of the Label Range message allows\
    \ the range of VPIs\n             supported by the port to be changed. However,\
    \ the Min VPI\n             and Max VPI fields in the Port Configuration and All\
    \ Ports\n             Configuration messages always report the same default\n\
    \             values regardless of the operation of the Label Range\n        \
    \     message.\n   Min VCI\n             The default minimum value of dynamically\
    \ assigned incoming\n             VCI that the connection table on the input port\
    \ can support\n             and may be controlled by GSMP. This value is not changed\
    \ as\n             a result of the Label Range message.\n   Max VCI\n        \
    \     The default maximum value of dynamically assigned incoming\n           \
    \  VCI that the connection table on the input port can support\n             and\
    \ may be controlled by GSMP. This value is not changed as\n             a result\
    \ of the Label Range message.\n             At power-on, after a hardware reset,\
    \ and after the Reset\n             Input Port function of the Port Management\
    \ message, the\n             input port must handle all values of VCI within the\
    \ range\n             Min VCI to Max VCI inclusive, for each of the virtual paths\n\
    \             in the range Min VPI to Max VPI inclusive, and GSMP must be\n  \
    \           able to control all values within this range.  It should be\n    \
    \         noted that the range Min VCI to Max VCI refers only to the\n       \
    \      incoming VCI range that can be supported by the associated\n          \
    \   port on each of the virtual paths in the range Min VPI to\n             Max\
    \ VPI. No restriction is placed on the values of outgoing\n             VCIs that\
    \ may be written into the cell header.\n             Use of the Label Range message\
    \ allows the range of VCIs to\n             be changed on each VPI supported by\
    \ the port.  However, the\n             Min VCI and Max VCI fields in the Port\
    \ Configuration and\n             All Ports Configuration messages always report\
    \ the same\n             default values regardless of the operation of the Label\n\
    \             Range message.\n             For a port over which the GSMP protocol\
    \ is operating, the\n             VCI of the GSMP control channel may or may not\
    \ be reported\n             as lying within the range Min VCI to Max VCI.  A switch\n\
    \             should honor a connection request message that specifies\n     \
    \        the VCI value of the GSMP control channel even if it lies\n         \
    \    outside the range Min VCI to Max VCI.\n   Receive Cell Rate\n           \
    \  The maximum rate of cells that may arrive at the input port\n             in\
    \ cells/s.\n   Transmit Cell Rate\n             The maximum rate of cells that\
    \ may depart from the output\n             port in cells/s. (The transmit cell\
    \ rate of the output port\n             may be changed by the Set Transmit Cell\
    \ Rate function of\n             the Port Management message.)\n   Port Status\n\
    \             Gives the administrative state of the port. The defined\n      \
    \       values of the Port Status field are:\n             Available:\n      \
    \            Port Status = 1. The port is available to both send\n           \
    \       and receive cells. When a port changes to the\n                  Available\
    \ state from any other administrative state,\n                  all dynamically\
    \ assigned virtual connections must be\n                  cleared and a new Port\
    \ Session Number must be\n                  generated.\n             Unavailable:\n\
    \                  Port Status = 2. The port has intentionally been taken\n  \
    \                out of service. No cells will be transmitted from this\n    \
    \              port.  No cells will be received by this port.\n             Internal\
    \ Loopback:\n                  Port Status = 3. The port has intentionally been\
    \ taken\n                  out of service and is in internal loopback: cells\n\
    \                  arriving at the output port from the switch fabric are\n  \
    \                looped through to the input port to return to the\n         \
    \         switch fabric. All of the ATM functions of the input\n             \
    \     port above the physical layer, e.g. header\n                  translation,\
    \ are performed upon the looped back cells.\n             External Loopback:\n\
    \                  Port Status = 4. The port has intentionally been taken\n  \
    \                out of service and is in external loopback: cells\n         \
    \         arriving at the input port from the external\n                  communications\
    \ link are immediately looped back to the\n                  communications link\
    \ at the physical layer without\n                  entering the input port. None\
    \ of the ATM functions of\n                  the input port above the physical\
    \ layer are performed\n                  upon the looped back cells.\n       \
    \      Bothway Loopback:\n                  Port Status = 5. The port has intentionally\
    \ been taken\n                  out of service and is in both internal and external\n\
    \                  loopback.\n             The Port Status of the port over which\
    \ the GSMP session\n             controlling the switch is running, must be declared\n\
    \             Available. The controller will ignore any other Port status\n  \
    \           for this port. The Port Status of switch ports after\n           \
    \  power-on initialization is not defined by GSMP.\n   Port Type\n           \
    \  The type of physical transmission interface for this port.\n             The\
    \ values for this field are defined by the atmIfType\n             object specified\
    \ in the Ipsilon IP Switch MIB [IpsilonMIB].\n   Line Status\n             The\
    \ status of the physical transmission medium connected to\n             the port.\
    \ The defined values of the Line Status field are:\n             Up:\n       \
    \           Line Status = 1. The line is able to both send and\n             \
    \     receive cells.  When the Line Status changes to Up\n                  from\
    \ either the Down or Test states, a new Port\n                  Session Number\
    \ must be generated.\n             Down:\n                  Line Status = 2. The\
    \ line is unable either to send or\n                  receive cells or both.\n\
    \             Test:\n                  Line Status = 3. The port or line is in\
    \ a test mode,\n                  for example, power-on test.\n   Priorities\n\
    \             The number of different priority levels that this output\n     \
    \        port can assign to virtual connections.  Zero is invalid in\n       \
    \      this field. If an output port is able to support \"Q\"\n             priorities,\
    \ the highest priority is numbered zero and the\n             lowest priority\
    \ is numbered \"Q-1\". The ability to offer\n             different qualities\
    \ of service to different connections\n             based upon their priority\
    \ is assumed to be a property of\n             the output port of the switch.\
    \ It may be assumed that for\n             connections that share the same output\
    \ port, an ATM cell on\n             a connection with a higher priority is much\
    \ more likely to\n             exit the switch before an ATM cell on a connection\
    \ with a\n             lower priority if they are both in the switch at the same\n\
    \             time.\n   Physical Slot Number\n             The physical location\
    \ of the slot in which the port is\n             located. It is an unsigned 16-bit\
    \ integer that can take any\n             value except 0xFFFF. The value 0xFFFF\
    \ is used to indicate\n             \"unknown.\" The Physical Slot Number is not\
    \ used by the GSMP\n             protocol. It is provided to assist network management\
    \ in\n             functions such as logging, port naming, and graphical\n   \
    \          representation.\n   Physical Port Number\n             The physical\
    \ location of the port within the slot in which\n             the port is located.\
    \ It is an unsigned 16-bit integer that\n             can take any value except\
    \ 0xFFFF. The value 0xFFFF is used\n             to indicate \"unknown.\" The\
    \ Physical Port Number is not used\n             by the GSMP protocol. It is provided\
    \ to assist network\n             management in functions such as logging, port\
    \ naming, and\n             graphical representation.\n             There must\
    \ be a one to one mapping between Port Number and\n             the Physical Slot\
    \ Number and Physical Port Number\n             combination. Two different Port\
    \ Numbers must not yield the\n             same Physical Slot Number and Physical\
    \ Port Number\n             combination. The same Port Number must yield the same\n\
    \             Physical Slot Number and Physical Port Number within a\n       \
    \      single GSMP session.  If both Physical Slot Number and\n             Physical\
    \ Port Number indicate \"unknown\" the physical\n             location of switch\
    \ ports may be discovered by looking up\n             the product identity in\
    \ a database to reveal the physical\n             interpretation of the 32-bit\
    \ Port Number.\n"
- title: 7.3 All Ports Configuration Message
  contents:
  - "7.3 All Ports Configuration Message\n   The All Ports Configuration message requests\
    \ the switch for the\n   configuration information of all of its ports. The All\
    \ Ports\n   Configuration message is:\n      Message Type = 66\n   The Port field\
    \ is not used in the request message.\n   The All Ports Configuration success\
    \ response message has the\n   following format:\n    0                   1  \
    \                 2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Number of Records       |      Port Record Length       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                        Port Records                         ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Number of Records\n             Field gives the total number of Port Records\
    \ to be returned\n             in response to the All Ports Configuration request\
    \ message.\n             The number of port records in a single All Ports\n  \
    \           Configuration success response must not cause the packet\n       \
    \      length to exceed the maximum transmission unit defined by\n           \
    \  the encapsulation. If a switch has more ports than can be\n             sent\
    \ in a single success response message it must send\n             multiple success\
    \ response messages. All success response\n             messages that are sent\
    \ in response to the same request\n             message must have the same Transaction\
    \ Identifier as the\n             request message and the same value in the Number\
    \ of Records\n             field.  All success response messages that are sent\
    \ in\n             response to the same request message, except for the last\n\
    \             message, must have the result field set to \"More.\" The last\n\
    \             message, or a single success response message, must have\n     \
    \        the result field set to \"Success.\" All Port records within\n      \
    \       a success response message must be complete, i.e. a single\n         \
    \    Port record must not be split across multiple success\n             response\
    \ messages.\n   Port Record Length\n             Field gives the length of each\
    \ port record in bytes. This\n             is currently 32 but the Port Record\
    \ Length field allows for\n             the future definition of further fields\
    \ at the end of the\n             port record while preserving compatibility with\
    \ earlier\n             versions of the protocol.\n   Port Records\n         \
    \    Follow in the remainder of the message. Each port record\n             has\
    \ the following format:\n    0                   1                   2       \
    \            3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Port Session Number                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |V|M|L|R|      Min VPI          |Q|x x x|       Max VPI         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Min VCI            |           Max VCI             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Receive Cell Rate                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Transmit Cell Rate                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Port Status  |   Port Type   |  Line Status  |  Priorities   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Physical Slot Number      |     Physical Port Number      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The definition of the fields in the Port Record is exactly the same\n   as\
    \ that of the Port Configuration message.\n"
- title: 8. Event Messages
  contents:
  - "8. Event Messages\n   Event messages allow the switch to inform the controller\
    \ of certain\n   asynchronous events. Event messages are not acknowledged. The\
    \ Result\n   field and the Code field in the message header are not used and\n\
    \   should be set to zero. Event messages are not sent during\n   initialization.\
    \ Event messages have the following format:\n    0                   1       \
    \            2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Port Session Number                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Event Sequence Number                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | zero  |          VPI          |              VCI              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Event Sequence Number\n             The current value of the Event Sequence\
    \ Number for the\n             specified port. The Event Sequence Number is set\
    \ to zero\n             when the port is initialized. It is incremented by one\
    \ each\n             time the port detects an asynchronous event that the switch\n\
    \             would normally report via an Event message. The Event\n        \
    \     Sequence Number must be incremented each time an event\n             occurs\
    \ even if the switch is prevented from sending an\n             Event message\
    \ due to the action of the flow control.\n   VPI/VCI\n             Field gives\
    \ the VPI/VCI to which the event message refers.\n             If this field is\
    \ not required by the event message it is\n             set to zero.\n   Each\
    \ switch port must maintain an Event Sequence Number and a set of\n   Event Flags,\
    \ one Event Flag for each type of Event message.  When a\n   switch port sends\
    \ an Event message it must set the Event Flag on that\n   port corresponding to\
    \ the type of the event. The port is not\n   permitted to send another Event message\
    \ of the same type until the\n   Event Flag has been reset. Event Flags are reset\
    \ by the \"Reset Event\n   Flags\" function of the Port Management message. This\
    \ is a simple flow\n   control preventing the switch from flooding the controller\
    \ with event\n   messages. The Event Sequence Number of the port must be incremented\n\
    \   every time an event is detected on that port even if the port is\n   prevented\
    \ from reporting the event due to the action of the flow\n   control. This allows\
    \ the controller to detect that it has not been\n   informed of some events that\
    \ have occurred on the port due to the\n   action of the flow control.\n"
- title: 8.1 Port Up Message
  contents:
  - "8.1 Port Up Message\n   The Port Up message informs the controller that the Line\
    \ Status of a\n   port has changed from either the Down or Test state to the Up\
    \ state.\n   When the Line Status of a switch port changes to the Up state from\n\
    \   either the Down or Test state a new Port Session Number must be\n   generated,\
    \ preferably using some form of random number. The new Port\n   Session Number\
    \ is given in the Port Session Number field. The VPI/VCI\n   field is not used\
    \ and is set to zero.  The Port Up message is:\n      Message Type = 80\n"
- title: 8.2 Port Down Message
  contents:
  - "8.2 Port Down Message\n   The Port Down message informs the controller that the\
    \ Line Status of\n   a port has changed from the Up state to the Down state. This\
    \ message\n   will be sent to report link failure if the switch is capable of\n\
    \   detecting link failure. The port session number that was valid before\n  \
    \ the port went down is reported in the Port Session Number field. The\n   VPI/VCI\
    \ field is not used and is set to zero. The Port Down message\n   is:\n      Message\
    \ Type = 81\n"
- title: 8.3 Invalid VPI/VCI Message
  contents:
  - "8.3 Invalid VPI/VCI Message\n   The Invalid VPI/VCI message is sent to inform\
    \ the controller that one\n   or more cells have arrived at an input port with\
    \ a VPI/VCI that is\n   currently not allocated to an assigned connection. The\
    \ input port is\n   indicated in the Port field, and the VPI/VCI in the VPI/VCI\
    \ field.\n   The Invalid VPI/VCI message is:\n      Message Type = 82\n"
- title: 8.4 New Port Message
  contents:
  - "8.4 New Port Message\n   The New Port message informs the controller that a new\
    \ port has been\n   added to the switch. The port number of the new port is given\
    \ in the\n   Port field. A new Port Session Number must be assigned, preferably\n\
    \   using some form of random number.  The new Port Session Number is\n   given\
    \ in the Port Session Number field.  The state of the new port is\n   undefined\
    \ so the VPI/VCI field is not used and is set to zero.  The\n   New Port message\
    \ is:\n      Message Type = 83\n"
- title: 8.5 Dead Port Message
  contents:
  - "8.5 Dead Port Message\n   The Dead Port message informs the controller that a\
    \ port has been\n   removed from the switch. The port number of the port is given\
    \ in the\n   Port field. The Port Session Number that was valid before the port\n\
    \   was removed is reported in the Port Session Number field.  The\n   VPI/VCI\
    \ fields are not used and are set to zero. The Dead Port\n   message is:\n   \
    \   Message Type = 84\n"
- title: 9. Quality of Service Messages
  contents:
  - "9. Quality of Service Messages\n   The GSMP Quality of Service (QoS) messages\
    \ allow a controller to\n   group virtual path connections and virtual channel\
    \ connections into\n   QoS classes, and to allocate QoS resources to both QoS\
    \ classes and to\n   individual connections. At initialization, the switch describes\
    \ its\n   QoS capabilities to the controller, in terms of the abstract switch\n\
    \   model, using the QoS Configuration message. The controller issues\n   Scheduler\
    \ Establishment messages to configure the scheduler on each\n   switch output\
    \ port. It also issues QoS Class Establishment messages\n   to configure QoS classes.\
    \ Connections may be added to, or deleted\n   from, a QoS class using the QoS\
    \ Connection Management message. QoS\n   resources may also be assigned to individual\
    \ connections using the\n   QoS Connection Management message. Connections that\
    \ only require the\n   scheduler may use the simple connection management messages\
    \ defined\n   in Section 3, \"Connection Management Messages.\"\n"
- title: 9.1 Abstract Switch Model
  contents:
  - "9.1 Abstract Switch Model\n   The abstract switch model, fig. 1, is the means\
    \ by which a switch can\n   describe its fundamental QoS capabilities to a controller.\
    \ It\n   consists of four main functions: a policer, a classifier, a\n   regulator,\
    \ and a scheduler.  The classifier groups multiple\n   connections (VPCs or VCCs)\
    \ together into a QoS class such that QoS\n   resources may be shared by the QoS\
    \ class as a whole. Within a QoS\n   class there is no differentiation between\
    \ members of the class in\n   terms of QoS resources received. However, the ordering\
    \ of cells\n   within each constituent VPC or VCC must be preserved on exit from\
    \ the\n   switch. Connections are not required to be aggregated into a QoS\n \
    \  class with other connections; they may be allocated individual QoS\n   resources.\n\
    \   VPC/VCCs  Policer  Classifier   Regulator       Scheduler\n             +--+\
    \     +----+                       +--------+\n    -------->|  |---->|    |  \
    \                     |        |\n             +--+     |    |               \
    \        |        |\n                      |    |                       |    \
    \    |\n             +--+     |    |       +----+          |        |\n    -------->|\
    \  |---->|    |       |    |--------->|        |\n             +--+     |    |\
    \       |    |conforming|        |\n                      |    |------>|    |\
    \          |        |\n             +--+     |    |  QoS  |    |          |  \
    \      |\n    -------->|  |---->|    | Class |    |--------->|        |\n    \
    \         +--+     |    |       +----+  excess  |        |\n                 \
    \     |    |                       |        |\n             +--+     |    |  \
    \                     |        |\n    -------->|  |---->|    |               \
    \        |        |\n             +--+     +----+                       |    \
    \    |\n                                                   |        |\n      \
    \                                             |        |   Output\n          \
    \                                         |        |    Port\n               \
    \                                    |        |---------->\n                 \
    \                                  |        |\n                              \
    \                     |        |\n             +--+     +----+               \
    \        |        |\n    -------->|  |---->|    |                       |    \
    \    |\n             +--+     |    |                       |        |\n      \
    \                |    |                       |        |\n             +--+  \
    \   |    |       +----+          |        |\n    -------->|  |---->|    |    \
    \   |    |--------->|        |\n             +--+     |    |       |    |conforming|\
    \        |\n                      |    |------>|    |          |        |\n  \
    \           +--+     |    |  QoS  |    |          |        |\n    -------->| \
    \ |---->|    | Class |    |--------->|        |\n             +--+     |    |\
    \       +----+  excess  |        |\n                      |    |             \
    \          |        |\n             +--+     |    |                       |  \
    \      |\n    -------->|  |---->|    |                       |        |\n    \
    \         +--+     +----+                       |        |\n                 \
    \                                  +--------+\n                       Fig. 1:\
    \ Abstract Switch Model\n   The policer is a single input, single output device\
    \ that can discard\n   or tag cells.  A policer may be applied to police each\
    \ individual\n   connection.  A policer may also be applied to police the aggregate\n\
    \   traffic of a QoS class.  The policer is  used to enforce an upper\n   bound\
    \ on the traffic on a connection or on a QoS class.\n   The regulator follows\
    \ the policer and classifier. It offers either a\n   policing function or a shaping\
    \ function. The policing function\n   evaluates cells as conforming to the rate\
    \ specified by the regulator\n   parameters or as being in excess of that rate.\
    \ One of three actions\n   can be specified to be taken for each cell as a result\
    \ of this\n   evaluation: tagging, discard or differentiated scheduling. Tagging\n\
    \   sets the CLP bit of cells deemed to be in excess of the rate defined\n   by\
    \ the regulator parameters.  The discard function discards excess\n   cells. The\
    \ differentiated scheduling function allows conforming cells\n   and excess cells\
    \ to be scheduled for service at different points in\n   the scheduler. This would\
    \ allow conforming cells, for example, to\n   receive service with a QoS guarantee,\
    \ whereas excess cells receive\n   best-effort service.  The implementation of\
    \ differentiated\n   scheduling, however, is complicated by the requirement not\
    \ to reorder\n   cells within each connection.\n   The shaping function of the\
    \ regulator paces cells out, on each QoS\n   class or individual connection, at\
    \ the rate specified by the\n   regulator parameters. No jitter requirement may\
    \ be specified, nor is\n   any specific guarantee of jitter given. If traffic\
    \ arrives on any QoS\n   class or individual connection at a greater rate than\
    \ the output rate\n   specified, that traffic will be delayed. If the delayed\
    \ traffic for\n   any QoS class or individual connection exceeds a bound, discard\
    \ will\n   occur.  Differentiated scheduling is supported by the shaper but its\n\
    \   application to shaping is somewhat different than its application to\n   policing.\
    \ Conforming traffic is that traffic which leaves the shaper\n   as a result of\
    \ the shaping process.  The conforming pointer specifies\n   the point in the\
    \ scheduler structure where such traffic is scheduled\n   for output. (This is\
    \ typically the highest priority of the scheduler\n   but the GSMP specification\
    \ permits other priorities to be specified.)\n   If an excess pointer is also\
    \ enabled for a particular QoS class or\n   individual connection, traffic in\
    \ excess of the rate specified by the\n   shaper may also be transmitted.  The\
    \ position of the excess pointer\n   in the scheduler structure determines the\
    \ undefined amount of\n   additional traffic that will be supported. The excess\
    \ traffic may be\n   tagged if required, if tagging is supported. The excess pointer\
    \ will\n   receive the same share of bandwidth that a best-effort class or\n \
    \  connection would receive at the same location in the scheduler\n   structure.\n\
    \   The location of the classifier and regulator functions in the switch\n   is\
    \ important. If the classifier is located on an input port, only\n   virtual connections\
    \ that arrive at that input port may be aggregated\n   into a QoS class. If the\
    \ classifier is centralized, or located on an\n   output port, virtual connections\
    \ that arrive at any input port may be\n   aggregated into the same QoS class.\
    \ If the regulator is located on an\n   output port all virtual connections within\
    \ a QoS class passing\n   through that regulator must exit the switch at that\
    \ output port.\n   However, if the regulator is centralized, or located on an\
    \ input\n   port, virtual connections that are part of the same QoS class may\
    \ be\n   switched to different output ports.  Each switch port must specify\n\
    \   the location of its classifier and regulator functions.\n   The scheduler\
    \ is located on the output port, fig. 2. It distributes\n   the bandwidth of the\
    \ output link between the QoS classes and\n   individual connections.  It is a\
    \ two-level scheduler: a priority\n   scheduler at one level and a FIFO or a weighted\
    \ scheduler at the\n   other.  Up to 255 strict priority levels may be supported.\
    \ Traffic in\n   any specific priority level may only be transmitted if no traffic\
    \ is\n   queued for transmission in any higher priority level. Within each\n \
    \  priority level a weighted scheduler may be defined. Each leaf of the\n   scheduler\
    \ tree is connected to a waiting room. The waiting room has\n   two functions.\
    \ When it receives service from the scheduler, it must\n   select a QoS class\
    \ or individual connection for transmission. When it\n   is notified of traffic\
    \ arrival on a QoS class or connection, it must\n   decide whether there is enough\
    \ room left in the waiting room to\n   accept the traffic, else that traffic must\
    \ be discarded. The waiting\n   room has a size parameter indicating how much\
    \ traffic may be\n   accepted.  Other queueing parameters may be attached to the\
    \ waiting\n   room. Multiple conforming and excess pointers from the regulators\
    \ may\n   point to each waiting room. Within a waiting room, the scheduling of\n\
    \   multiple connections sharing that waiting room may support weighted\n   sharing\
    \ between the connections.\n        From      Waiting        FIFO/Weighted   \
    \     Priority\n      Regulator     Room           Scheduler          Scheduler\n\
    \                           Net       +---+\n                  +------+ Weight\
    \    |   |\n       ---------->|      |-%-------->| 0 |------\\\n             \
    \     +------+           |   |       \\\n                                    \
    \ +---+        \\\n       ---------->+------+                        |\n     \
    \             |      |-%--\\      +---+        |\n       ---------->+------+ \
    \    \\---->|   |        |\n                                     | 1 |---\\  \
    \  |\n                  +------+     /---->|   |    \\   \\\n       ---------->|\
    \      |-%--/      +---+     \\   \\    +---+\n                  +------+    \
    \                  \\   \\-->|   |\n                                         \
    \        \\----->|   |--------->\n       ---------->+------+                 \
    \         /-->|   |  Output\n       ---------->|      |-%-\\                 \
    \    /    +---+   Port\n       ---------->+------+    \\                   /\n\
    \                               \\     +---+       /\n                  +------+\
    \      \\--->|   |      /\n       ---------->|      |-%-------->| 2 |-----/\n\
    \                  +------+      /--->|   |\n                               /\
    \     +---+\n                  +------+    /\n       ---------->|      |-%-/\n\
    \                  +------+\n                           Fig. 2: The Scheduler\n"
- title: 9.2 QoS Configuration Message
  contents:
  - "9.2 QoS Configuration Message\n   The QoS Configuration message permits the controller\
    \ to discover the\n   QoS capabilities of each switch port in terms of the abstract\
    \ switch\n   model. The QoS Configuration message is:\n      Message Type = 96\n\
    \   The QoS Configuration request message has the following format:\n    0   \
    \                1                   2                   3\n    0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The QoS Configuration success response message has the following\n   format:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Port Session Number                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Scheduler Flags        |       Regulator Flags         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Excess Capabilities      |            Reserved           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Hi Sharing   |  Lo Sharing   |          Max Classes          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Default Size                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Default Discard Threshold                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Max Buffer                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Max Shaper Buffer                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Scaling Factor                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Port\n             The switch port to which the QoS configuration information\n\
    \             refers. QoS configuration information relating to both the\n   \
    \          input and the output sides of the switch port is given.\n   Scheduler\
    \ Flags\n         0                   1\n         0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5\n        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        |W|Q|S|G|D|F|M|B|I|x\
    \ x x x x x x|\n        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        W: Weighted\
    \ Connections\n             Bit 0 of the Scheduler Flags field, if set, indicates\
    \ that\n             a weighted service algorithm (such as weighted round-robin)\n\
    \             is available for allocation of service to individual\n         \
    \    connections within at least some waiting rooms. It means\n             that\
    \ a Connection Weight parameter can be attached to a QoS\n             Connection\
    \ Management message. Not all waiting rooms at all\n             priority levels\
    \ may be able to support this function.\n             Whether a particular waiting\
    \ room can support this function\n             will be discovered when a QoS Connection\
    \ Management message\n             is issued.\n        Q: Weighted QoS Classes\n\
    \             Bit 1 of the Scheduler Flags field, if set, indicates that\n   \
    \          a weighted service algorithm (such as weighted round-robin)\n     \
    \        is available for allocation of service to QoS classes\n             within\
    \ at least some waiting rooms.  It means that a QoS\n             Class Weight\
    \ parameter can be attached to a QoS Class\n             Establishment message.\
    \  Not all waiting rooms at all\n             priority levels may be able to support\
    \ this function.\n             Whether a particular waiting room can support this\
    \ function\n             will be discovered when a QoS Class Establishment message\n\
    \             is issued.\n        S: Shared Waiting Room\n             Bit 2 of\
    \ the Scheduler Flags field, if set, indicates that\n             multiple QoS\
    \ classes and multiple connections may be\n             scheduled within a single\
    \ waiting room. This is expected to\n             be the normal case. If Bit 2\
    \ of the Scheduler Flags field\n             is zero, it indicates that only a\
    \ single QoS class or a\n             single connection may be directed to any\
    \ single waiting\n             room.\n        G: Global Max Classes\n        \
    \     Bit 3 of the Scheduler Flags field, if set, indicates that\n           \
    \  the Max Classes field gives the maximum number of QoS\n             classes\
    \ that may be supported by the entire switch. If\n             zero, it indicates\
    \ that the Max Classes field gives the\n             maximum number of QoS classes\
    \ that may be supported by this\n             switch port.\n        D: Packet\
    \ Discard\n             Bit 4 of the Scheduler Flags field, if set, indicates\
    \ that\n             the scheduler on this output port is capable of packet\n\
    \             discard. Packet discard indicates a discard algorithm that\n   \
    \          is aware of AAL-5 packet boundaries and attempts to discard\n     \
    \        whole packets. No specific algorithm is indicated though\n          \
    \   Early Packet Discard (EPD) is likely to be the most common.\n            \
    \ Other algorithms such as \"push from front\" schemes, dynamic\n            \
    \ threshold, or Random Early Detection (RED) are also\n             examples of\
    \ possible packet discard algorithms. The only\n             parameters available\
    \ to the packet discard algorithm, via\n             GSMP, are the Size and Discard\
    \ Threshold of the waiting\n             room.\n        F: Frame-Based Scheduling\n\
    \             Bit 5 of the Scheduler Flags field, if set, indicates that\n   \
    \          the scheduler on this output port is capable of frame-based\n     \
    \        scheduling. In frame-based scheduling, a connection is only\n       \
    \      scheduled for transmission when a complete AAL-5 packet is\n          \
    \   available.  When a connection is scheduled for\n             transmission,\
    \ all cells belonging to one or more complete\n             packets from that\
    \ connection will be transmitted without\n             being interleaved with\
    \ any other cells on that output port\n             (regardless of their priority).\
    \  Frame-based scheduling is\n             a property of the waiting room and\
    \ is requested in the\n             Scheduler Establishment message.  A QoS class\
    \ may be routed\n             through a waiting room configured with frame-based\n\
    \             scheduling.  In this case each component connection of the\n   \
    \          QoS class will receive frame based scheduling. For correct\n      \
    \       distribution of bandwidth, each QoS class that requires\n            \
    \ frame-based scheduling should have its own waiting room.\n        M: VC Merging\n\
    \             Bit 6 of the Scheduler Flags field, if set, indicates that\n   \
    \          the scheduler on this output port is capable of VC merging\n      \
    \       by a mechanism other than frame-based scheduling. VC\n             merging\
    \ indicates that the switch is capable of the\n             multipoint-to-point\
    \ merging of two or more incoming virtual\n             connections onto a single\
    \ outgoing virtual connection\n             without interleaving cells from different\
    \ AAL-5 packets\n             that bear the same VPI/VCI. VC merging differs from\
    \ frame-\n             based scheduling in that cells with a different VPI/VCI\
    \ may\n             be interleaved with those of a multipoint-to-point VC\n  \
    \           merging connection. Thus, higher priority cells may be\n         \
    \    interleaved during the transmission of a packet on a lower\n            \
    \ priority VC merging connection.  Most switches achieve VC\n             merging\
    \ by using frame-based scheduling.  VC merging is a\n             property of\
    \ the waiting room and is requested in the\n             Scheduler Establishment\
    \ message.  A QoS class may be routed\n             through a waiting room configured\
    \ with VC merging.  In this\n             case each component connection of the\
    \ QoS class will\n             receive VC merging.\n        B: Shared Buffer\n\
    \             Bit 7 of the Scheduler Flags field, if set, indicates that\n   \
    \          at least some of the buffer space specified by the Max\n          \
    \   Buffer field is shared with other ports.  If zero, it\n             indicates\
    \ that the buffer space specified by the Max Buffer\n             field is not\
    \ shared with other ports.\n        I: Identical Ports\n             Bit 8 of\
    \ the Scheduler Flags field, if set, indicates that\n             all ports of\
    \ the switch have identical QoS capabilities. If\n             this bit is set\
    \ the controller does not have to request the\n             QoS configuration\
    \ of each port individually as all ports\n             have the same capability.\n\
    \        x: Bits 9--15 of the Scheduler Flags field are not used.\n   Regulator\
    \ Flags\n         0                   1\n         0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5\n        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        |C|Q|I O|P|S|H|M|x x\
    \ x x x x x x|\n        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        C: Connection\
    \ Policing\n             Bit 0 of the Regulator Flags field indicates that this\n\
    \             input port supports the policing of individual incoming\n      \
    \       connections. The parameters for the policer are specified\n          \
    \   in the QoS Connection Management message when the\n             connection\
    \ is established.\n        Q: QoS Class Policing\n             If bit 1 of the\
    \ Regulator Flags field is set, a policer\n             function is available\
    \ to police each QoS class on output\n             from the classifier. The parameters\
    \ for this policer are\n             specified in the QoS Class Establishment\
    \ message. If this\n             bit is zero, no policer function is available\
    \ to police a\n             QoS class.\n        IO: QoS Class Location\n     \
    \        Bits 2 and 3 of the Regulator Flags field specify the\n             location\
    \ of the classifier and regulator functions. If both\n             bits 2 and\
    \ 3 of the Regulator Flags field are zero, no\n             classifier or regulator\
    \ function is available to this port.\n             If bit 2 of the Regulator\
    \ Flags field is set and bit 3 is\n             zero, the classifier and regulator\
    \ functions are available\n             on the input port. This implies that only\
    \ virtual\n             connections arriving at this input port may be grouped\
    \ into\n             QoS classes by this classifier. However, connections in a\n\
    \             QoS class output from this regulator may be switched to any\n  \
    \           output port.\n             If bit 2 of the Regulator Flags field is\
    \ zero and bit 3 is\n             set, the classifier and regulator functions\
    \ are available\n             on the output port. This implies that virtual connections\n\
    \             arriving at any input port may be grouped into QoS classes\n   \
    \          by this classifier. However, all connections in any QoS\n         \
    \    class output from this regulator may only be switched to\n             this\
    \ output port.\n             If both bits 2 and 3 of the Regulator Flags field\
    \ are set,\n             this switch port has access to centralized classifier\
    \ and\n             regulator functions. This implies that virtual connections\n\
    \             arriving at any input port may be grouped into a QoS class\n   \
    \          by this classifier. Also, connections in a QoS class output\n     \
    \        from this regulator may be switched to any output port.\n        Regulator\
    \ Function\n        P: If bit 4 of the Regulator Flags field is set, the regulator\n\
    \             is able to support the policing function.\n        S: If bit 5 of\
    \ the Regulator Flags field is set, the regulator\n             is able to support\
    \ the shaping function on all priority\n             levels of the scheduler.\n\
    \        H: If bit 5 of the Regulator Flags field is zero and bit 6 is\n     \
    \        set, the regulator is able to support the shaping function\n        \
    \     but only on the highest priority level of the scheduler.\n             All\
    \ connections and QoS classes using this regulator must\n             be routed\
    \ to a waiting room at the highest priority level\n             of the scheduler.\n\
    \        M: QoS Multicast\n             If bit 7 of the Regulator Flags field\
    \ is set, any point-\n             to-multipoint connection arriving on this input\
    \ port, with\n             QoS parameters established by the GSMP Quality of Service\n\
    \             messages, must use the same QoS parameters for all output\n    \
    \         branches.\n        x: Bits 8--15 of the Regulator Flags field are not\
    \ used.\n   Excess Capabilities\n         0                   1\n         0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \     |D|T|S|A|B|x x x x x x x x x x x|\n        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        Policer:\n        D: If bit 0 of the Excess Capabilities field is set,\
    \ the policer\n             function of the regulator is able to support discard.\n\
    \        T: If bit 1 of the Excess Capabilities field is set, the policer\n  \
    \           function of the regulator is able to support tagging.\n        S:\
    \ If bit 2 of the Excess Capabilities field is set, the policer\n            \
    \ function of the regulator is able to support differentiated\n             scheduling.\n\
    \        Shaper:\n        A: If bit 3 of the Excess Capabilities field is set,\
    \ the shaper\n             function of the regulator is able to support tagging.\n\
    \        B: If bit 4 of the Excess Capabilities field is set, the shaper\n   \
    \          function of the regulator is able to support differentiated\n     \
    \        scheduling.\n        x: Bits 5--15 of the Excess Capabilities field are\
    \ not used.\n   Hi Sharing\n   Lo Sharing\n             Defines a range of priority\
    \ levels that support weighted\n             sharing. Each priority level in the\
    \ range Lo Sharing to Hi\n             Sharing inclusive, supports weighted sharing.\
    \ A priority\n             level that supports weighted sharing offers a weighted\n\
    \             sharing algorithm (for example, weighted round-robin)\n        \
    \     between waiting rooms within that priority level. This\n             permits\
    \ the output link bandwidth available at that\n             priority level, to\
    \ be shared between the waiting rooms\n             allocated to that priority\
    \ level, according to the Net\n             Weight parameter of each waiting room.\
    \  The value 0xFF for\n             both parameters indicates that this output\
    \ port does not\n             support weighted sharing in any priority level.\n\
    \   Max Classes\n             If bit 3 of the Scheduler Flags field is zero, Max\
    \ Classes\n             gives the maximum number of QoS classes that may be\n\
    \             supported by this switch port. In this case the maximum\n      \
    \       number of QoS classes that may be supported by this switch\n         \
    \    port is not affected by the number of QoS classes in use by\n           \
    \  other switch ports.  If bit 3 of the Scheduler Flags field\n             is\
    \ set, Max Classes gives the maximum number of QoS classes\n             that\
    \ may be supported by the entire switch. In this case it\n             is assumed\
    \ that use of these QoS classes may be distributed\n             among the various\
    \ switch ports.\n   Default Size\n             The size of waiting room that this\
    \ output port allocates by\n             default. The actual size of waiting room\
    \ may be specified\n             in the Scheduler Establishment message. The size\
    \ of a\n             waiting room specifies the maximum number of cells\n    \
    \         permitted to wait for transmission via that waiting room.\n        \
    \     Any further cells arriving at that waiting room beyond this\n          \
    \   number will be discarded.\n   Default Discard Threshold\n             The\
    \ value of discard threshold that this output port\n             allocates by\
    \ default. The actual value of discard threshold\n             may be specified\
    \ in the Scheduler Establishment message.\n             The discard threshold\
    \ specifies the number of cells waiting\n             for transmission via a waiting\
    \ room after which further\n             arriving cells will be subject to a discard\
    \ mechanism.\n   Max Buffer\n             The maximum amount of buffer space,\
    \ measured in cells,\n             available to this port. If bit 7 of the Scheduler\
    \ Flags\n             field is zero this, buffer space is not shared with other\n\
    \             ports. If bit 7 of the Scheduler Flags field is set, at\n      \
    \       least some of this buffer space is shared with other ports.\n   Max Shaper\
    \ Buffer\n             The maximum amount of buffer space, measured in cells,\n\
    \             available to a QoS connection or a QoS class within the\n      \
    \       shaper function of the regulator. This shaper buffer space\n         \
    \    is likely to be shared among all QoS classes and QoS\n             connections\
    \ using the shaper, so there is no guarantee that\n             the amount of\
    \ buffer space defined by the Max Shaper Buffer\n             field will be available\
    \ to any particular QoS class or QoS\n             connection.\n   Scaling Factor\n\
    \             The QoS Class Establishment and QoS Connection Management\n    \
    \         messages require parameters that describe cell rates in\n          \
    \   cells per second or their reciprocal, cell interarrival\n             periods,\
    \ in seconds per cell. In order that these\n             parameters may be specified\
    \ with a 32-bit unsigned integer,\n             the switch defines a Scaling Factor\
    \ to be used in defining\n             such parameters. By appropriate choice\
    \ of the Scaling\n             Factor the switch can select the range and granularity\
    \ of\n             rate or time that can be specified with the 32-bit unsigned\n\
    \             integer.  Further details are given in the discussion of\n     \
    \        the UPC Parameters field of the QoS Connection Management\n         \
    \    message.\n"
- title: 9.3 Scheduler Establishment Message
  contents:
  - "9.3 Scheduler Establishment Message\n   The Scheduler Establishment message is\
    \ used to configure the\n   scheduler on a specified output port. It is used to\
    \ configure a\n   waiting room, attach it to a leaf of the scheduler tree, and\
    \ return a\n   Scheduler Identifier to reference the waiting room. The Scheduler\n\
    \   Establishment message may also be used to modify the parameters of an\n  \
    \ already established waiting room.\n   Scheduler Identifiers in the range 0--255\
    \ represent default values.\n   They are used for the priority levels that may\
    \ be specified in the\n   Class of Service field of Connection Management messages\
    \ without\n   requiring explicit establishment via a Scheduler Establishment\n\
    \   message.  Each of these default values specifies a single waiting\n   room\
    \ with default parameters, configured as a FIFO queue, on each of\n   the valid\
    \ scheduler priority levels. (This permits Connection\n   Management messages\
    \ to continue to specify QoS requirements as a\n   priority without requiring\
    \ the use of any of the QoS messages.) The\n   number of priority levels available\
    \ to the scheduler is specified in\n   the Priorities field of the Port Configuration\
    \ and All Ports\n   Configuration messages.\n   The Scheduler Establishment Message\
    \ is:\n      Message Type = 97\n   The Scheduler Establishment request and success\
    \ response messages\n   have the following format:\n    0                   1\
    \                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Port Session Number                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Scheduler Identifier      |          Net Weight           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Reserved            |D|F|M|W|x x x x|   Priority    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Waiting Room Size                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Discard Threshold                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Scheduler Identifier\n             The Scheduler Identifier is selected by\
    \ the controller. It\n             is used to identify the waiting room being\
    \ established or\n             modified in future messages. The Scheduler Identifier\
    \ is\n             taken from a namespace that is local to the switch port. A\n\
    \             Scheduler Identifier in the Scheduler Establishment message\n  \
    \           must be greater than 0x00FF but less than 0xFFFF. The\n          \
    \   values 0 -- 0x00FF are reserved for use as default values.\n             The\
    \ default values of the Scheduler Identifier are used to\n             specify\
    \ the default settings for the scheduler. Each of the\n             default values\
    \ maps directly to one of the scheduler\n             priority levels.  The value\
    \ 0xFFFF is reserved for use in\n             the QoS Connection Management message.\n\
    \   Net Weight\n             The Net Weight specifies the share of the bandwidth\n\
    \             available to the priority level, specified by the Priority\n   \
    \          field, that should be given to this waiting room.  The Net\n      \
    \       Weight parameter is only valid if the priority level\n             specified\
    \ by the Priority field supports weighted sharing.\n             The Net Weight\
    \ is an unsigned 16-bit field specifying a\n             binary fraction.  I.e.\
    \ the bandwidth share, as a fraction\n             of the bandwidth available\
    \ to the priority level, is given\n             by:\n                Bandwidth\
    \ share = Net Weight * 2**(-16)\n             A Net Weight of zero indicates equal\
    \ sharing between all\n             waiting rooms sharing this priority level\
    \ that request a\n             Net Weight of zero.  While a 16-bit field is used\
    \ to\n             specify the Net Weight it is understood that the accuracy\n\
    \             of the bandwidth sharing is hardware dependent and is not\n    \
    \         specified.\n             If weighted sharing is not required at a particular\n\
    \             priority level, a waiting room with a Net Weight value of\n    \
    \         0xFFFF must be specified for that priority level. A\n             priority\
    \ level that does not support weighted sharing can\n             only support\
    \ a single waiting room.\n   Flags\n        D: Packet Discard\n             Bit\
    \ 0 of the Flags field, if set, indicates that packet\n             discard is\
    \ required on all connections and QoS classes\n             routed through this\
    \ waiting room.\n        F: Frame-Based Scheduling\n             Bit 1 of the\
    \ Flags field, if set, indicates that frame-\n             based scheduling is\
    \ required on all connections and QoS\n             classes routed through this\
    \ waiting room.  In frame-based\n             scheduling, a connection is only\
    \ scheduled for transmission\n             when a complete AAL-5 packet is available.\
    \  When a\n             connection is scheduled for transmission, all cells\n\
    \             belonging to one or more complete packets from that\n          \
    \   connection will be transmitted without being interleaved\n             with\
    \ any other cells on that output port. A QoS class may\n             be routed\
    \ through a waiting room configured with frame-\n             based scheduling.\
    \  In this case each component connection\n             of the QoS class will\
    \ receive frame based scheduling. For\n             correct distribution of bandwidth,\
    \ each QoS class that\n             requires frame-based scheduling should have\
    \ its own waiting\n             room.\n        M: VC Merging\n             Bit\
    \ 2 of the Scheduler Flags field, if set, indicates that\n             VC merging\
    \ is required on all connections and QoS classes\n             routed through\
    \ this waiting room.  VC merging enables the\n             multipoint-to-point\
    \ merging of two or more incoming virtual\n             connections onto a single\
    \ outgoing virtual connection,\n             without interleaving cells from different\
    \ AAL-5 packets\n             that bear the same VPI/VCI. VC merging differs from\
    \ frame-\n             based scheduling in that cells with a different VPI/VCI\
    \ may\n             be interleaved with those of a multipoint-to-point VC\n  \
    \           merging connection.  Most switches achieve VC merging by\n       \
    \      using frame-based scheduling.  A QoS class may be routed\n            \
    \ through a waiting room configured with VC merging.  In this\n             case\
    \ each component connection of the QoS class will\n             receive VC merging.\n\
    \        W: Weighted Scheduling\n             Bit 3 of the Flags field, if set,\
    \ indicates that weighted\n             scheduling is required on all connections\
    \ and QoS classes\n             routed through this waiting room.  All connections\
    \ and QoS\n             classes routed through this waiting room will require\
    \ a\n             Connection Weight or a QoS Class Weight respectively. The\n\
    \             Connection Weight is specified in the QoS Connection\n         \
    \    Management message. The QoS Class Weight is specified in\n             the\
    \ QoS Class Establishment message. If weighted scheduling\n             within\
    \ this waiting room is unavailable, a failure response\n             message must\
    \ be returned indicating, \"Weighted scheduling\n             within this waiting\
    \ room is unavailable.\"\n             Bit 3 of the Flags field, if zero, indicates\
    \ that this\n             waiting room should be configured as a single FIFO queue.\n\
    \             All cells arriving at this waiting room will receive\n         \
    \    first-in-first-out service. If Frame-Based Scheduling or VC\n           \
    \  Merging are also selected, the strict first-in-first-out\n             service\
    \ discipline will be modified by the requirement to\n             support Frame-Based\
    \ Scheduling or VC Merging.\n        x: Bits 4--7 of the Flags field are not used.\n\
    \   Priority\n             Specifies the priority level in the scheduler to which\
    \ the\n             waiting room should be attached. Priorities are numbered\n\
    \             from zero, with priority level zero being the highest\n        \
    \     priority.\n   Waiting Room Size\n             The required size of the waiting\
    \ room.  The size of a\n             waiting room specifies the maximum number\
    \ of cells\n             permitted to wait for transmission via that waiting room.\n\
    \             Any further cells arriving at that waiting room beyond this\n  \
    \           number will be discarded. If the switch is unable to grant\n     \
    \        the size requested in the Scheduler Establishment request\n         \
    \    message it may reply with the actual size allocated to the\n            \
    \ waiting room in the Waiting Room Size field of the success\n             response\
    \ message.  A value of zero for the Waiting Room\n             Size indicates\
    \ that the default value should be used.\n   Discard Threshold\n             The\
    \ required value of the discard threshold.  The discard\n             threshold\
    \ specifies the number of cells waiting for\n             transmission via a waiting\
    \ room after which further\n             arriving cells will be subject to a discard\
    \ mechanism. The\n             value of the Discard Threshold must be less than\
    \ or equal\n             to the value of the Waiting Room Size parameter for any\n\
    \             given waiting room. If the switch is unable to grant the\n     \
    \        value of discard threshold requested in the Scheduler\n             Establishment\
    \ request message it may reply with the actual\n             value of discard\
    \ threshold allocated to the waiting room in\n             the Discard Threshold\
    \ field of the success response\n             message.  A value of zero for the\
    \ Discard Threshold\n             indicates that the default value should be used.\n"
- title: 9.4 QoS Class Establishment Message
  contents:
  - "9.4 QoS Class Establishment Message\n   The QoS Class Establishment message is\
    \ used to configure a QoS class\n   on a specified port or to modify the parameters\
    \ of an already\n   established QoS class.  It configures the classifier and the\n\
    \   regulator functions for the QoS class. It also configures the QoS\n   class\
    \ policer if a policing function is available for QoS classes.\n   Two styles\
    \ of QoS class are available. In one style each component\n   connection of the\
    \ QoS class may be routed independently to an output\n   port and waiting room\
    \ specified in its connection management message.\n   In this case the Scheduler\
    \ Identifier, and if required, the Excess\n   Scheduler Id, are specified in the\
    \ QoS Connection Management message\n   that references this style of QoS class.\
    \  In the alternative style of\n   QoS class, all component connections in the\
    \ QoS class are routed to\n   the same waiting room on the same output port. In\
    \ this case the\n   Output Port, the Scheduler Identifier, and if required, the\
    \ Excess\n   Scheduler Id, are specified in the QoS Class Establishment message.\n\
    \   The classifier and regulator functions must be located together,\n   either\
    \ on an input port, on an output port, or centralized. Each port\n   declares\
    \ the location of its classifier and regulator functions at\n   initialization\
    \ using the QoS Configuration message. If the classifier\n   and regulator functions\
    \ are located on an input port, only\n   connections that arrive at that input\
    \ port may join a QoS class\n   established on that port. However, each connection\
    \ that is part of a\n   QoS class established on that port may be switched to\
    \ a different\n   output port. If the classifier and regulator functions are located\
    \ on\n   an output port, connections that arrive at any input port may join a\n\
    \   QoS class established on that port. However, all connections within a\n  \
    \ QoS class established on that port must be switched to that output\n   port.\
    \ For a centralized classifier and regulator function, there is\n   no restriction\
    \ on the input ports on which connections in a QoS class\n   must arrive, or on\
    \ the output ports to which connections in a QoS\n   class must be switched. \
    \ (For the case of a centralized classifier\n   and regulator the actual port\
    \ specified in the QoS Class\n   Establishment message is used only for administrative\
    \ purposes.  Any\n   valid value of Port and Port Session Number, that specifies\
    \ a\n   centralized classifier and regulator function, may be used.)\n   The QoS\
    \ Class Establishment message is:\n      Message Type = 98\n   The QoS Class Establishment\
    \ request and success response messages\n   have the following format:\n    0\
    \                   1                   2                   3\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Port Session Number                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      QoS Class Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Regulator   | Excess Action |       QoS Class Weight        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Scheduler Identifier      |      Excess Scheduler Id      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Output Port                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \               QoS Class Policer Parameters                  ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \              QoS Class Regulator Parameters                 ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   QoS Class Identifier\n             The QoS Class Identifier is selected by\
    \ the controller. It\n             is used to identify the QoS class being established\
    \ or\n             modified, in future QoS Connection Management and QoS Class\n\
    \             Establishment messages.  It is taken from a namespace that\n   \
    \          is global across the entire switch. No two QoS classes may\n      \
    \       have the same QoS Class Identifier regardless of the switch\n        \
    \     ports on which they are defined. A QoS Class Identifier in\n           \
    \  a QoS Class Establishment message must be greater than 0\n             and\
    \ less than 0xFFFFFFFF.\n   Regulator\n             The Regulator field specifies\
    \ which function is required of\n             the regulator.  Three possible functions\
    \ are currently\n             defined: none, policing, and shaping.\n        \
    \        None:      Regulator = 1\n                Policing:  Regulator = 2\n\
    \                Shaping:   Regulator = 3\n             If the Regulator function\
    \ is specified as none, no\n             operations are performed by the regulator\
    \ on the cells\n             output from the classifier. Cells output from the\n\
    \             classifier are transferred directly to the waiting room\n      \
    \       specified by the Scheduler Identifier.\n             If policing is specified,\
    \ a token bucket policer will be\n             applied to the QoS class. The policer\
    \ determines which\n             cells conform to the specified policer traffic\
    \ parameters\n             and which do not. Conforming cells are transferred\
    \ directly\n             to the waiting room specified by the Scheduler Identifier.\n\
    \             The action to be taken by the policer on the excess traffic\n  \
    \           is specified by the Excess Action field. The policer\n           \
    \  traffic parameters are specified in the QoS Class Regulator\n             Parameters\
    \ fields.\n             If shaping is specified, traffic shaping will be applied\
    \ to\n             the QoS class.  Cells in a QoS class should leave the\n   \
    \          regulator spaced evenly apart at a rate defined by the QoS\n      \
    \       Class Regulator Parameters fields.  These cells are\n             transferred\
    \ directly to the waiting room specified by the\n             Scheduler Identifier.\
    \  The jitter on the conforming cell\n             stream on exit from the shaping\
    \ function of the regulator\n             is not specified.\n   Excess Action\n\
    \         0 1 2 3 4 5 6 7\n        +-+-+-+-+-+-+-+-+\n        |T|D|S|x x x x x|\n\
    \        +-+-+-+-+-+-+-+-+\n        T: Tagging\n             If bit 0 of the Excess\
    \ Action field is set, all cells\n             transferred to the waiting room\
    \ specified by the Excess\n             Scheduler Id will have their CLP bit set.\
    \ If bit 0 of the\n             Excess Action field is zero, the CLP bit of cells\n\
    \             transferred to the waiting room specified by the Excess\n      \
    \       Scheduler Id will remain unchanged.\n        D: Discard\n            \
    \ This function is only available if policing is selected as\n             the\
    \ regulator function.  If the Regulator field specifies\n             Policing,\
    \ and bit 1 of the Excess Action field is set, all\n             cells determined\
    \ by the policer to be in excess of the\n             traffic parameters must\
    \ be discarded. In this case the\n             Excess Scheduler Id is not used\
    \ and bit 0 of the Excess\n             Action field should be ignored.\n    \
    \    S: Differentiated Scheduling\n             This function operates differently\
    \ according to whether\n             policing or shaping is selected as the regulator\
    \ function.\n             If the Regulator field specifies Policing, and bit 1\
    \ of the\n             Excess Action field is zero, and bit 2 of the Excess Action\n\
    \             field is set, all cells determined by the policer to be in\n   \
    \          excess of the traffic parameters must be transferred to the\n     \
    \        waiting room specified by the Excess Scheduler Id.  In this\n       \
    \      case care must be taken in the implementation to ensure\n             that\
    \ within each virtual path connection or virtual channel\n             connection,\
    \ cells depart in the same order that they\n             arrived.  If the Regulator\
    \ field specifies Policing, and\n             bit 1 of the Excess Action field\
    \ is zero, and bit 2 of the\n             Excess Action field is zero, all cells\
    \ determined by the\n             policer to be in excess of the traffic parameters\
    \ must be\n             transferred to the waiting room specified by the Scheduler\n\
    \             Identifier.  In this case the Excess Scheduler Id is not\n     \
    \        used.\n             If the Regulator field specifies Shaping, and bit\
    \ 2 of the\n             Excess Action field is zero, cells will be transferred\
    \ from\n             the QoS class to the waiting room pointed to by the\n   \
    \          Scheduler Identifier at a rate defined by the QoS Class\n         \
    \    Regulator Parameters. In this case the Excess Scheduler Id\n            \
    \ is not used.  If the Regulator field specifies Shaping, and\n             bit\
    \ 2 of the Excess Action field is set, additional cells\n             will be\
    \ scheduled for transmission by the waiting room\n             pointed to by the\
    \ Excess Scheduler Id. This permits a\n             minimum cell rate to be allocated\
    \ to the QoS class using\n             the QoS Class Regulator Parameters and\
    \ additional bandwidth\n             to be shared by the QoS class. The additional\
    \ share of\n             bandwidth is determined according to the parameters of\
    \ the\n             waiting room pointed to by the Excess Scheduler Id. If the\n\
    \             Excess Scheduler Id is specified in the QoS Class\n            \
    \ Establishment message, the additional bandwidth will be\n             shared\
    \ by the entire QoS class. If the Excess Scheduler Id\n             is specified\
    \ in each individual QoS Connection Management\n             message, the additional\
    \ bandwidth is specific to that\n             connection and not shared by the\
    \ entire QoS class. Care\n             must be taken in the implementation to\
    \ ensure that within\n             each virtual path connection or virtual channel\
    \ connection,\n             cells depart in the same order that they arrived.\n\
    \        x: Bits 3--7 of the Excess Action field are not used.\n   QoS Class Weight\n\
    \             If bit 1 of the Scheduler Flags field of the QoS\n             Configuration\
    \ message indicates that weighted service may\n             be applied to a QoS\
    \ class, the QoS Class Weight parameter\n             specifies the share of the\
    \ bandwidth available to the\n             waiting room that should be given to\
    \ this QoS class.\n             The QoS Class Weight is an unsigned 16-bit field\
    \ specifying\n             a binary fraction.  I.e. the bandwidth share, as a\
    \ fraction\n             of the bandwidth available to the waiting room, is given\n\
    \             by:\n                Bandwidth share = QoS Class Weight * 2**(-16)\n\
    \             A QoS Class Weight of zero indicates equal sharing between\n   \
    \          all QoS classes sharing this waiting room that request a\n        \
    \     QoS Class Weight of zero.  While a 16-bit field is used to\n           \
    \  specify the QoS Class Weight it is understood that the\n             accuracy\
    \ of the bandwidth sharing is hardware dependent and\n             is not specified.\n\
    \             If the Regulator field of the QoS Class Establishment\n        \
    \     message indicates None, or Policer, the QoS Class Weight\n             should\
    \ be applied to the waiting room pointed to by the\n             Scheduler Identifier.\
    \ If the Regulator field of the QoS\n             Class Establishment message\
    \ indicates Shaper, the QoS Class\n             Weight should be applied to the\
    \ waiting room pointed to by\n             the Excess Scheduler Id.\n        \
    \     If the specified waiting room is unable to offer weighted\n            \
    \ sharing for a QoS class, a failure response message should\n             be\
    \ returned with the failure code indicating: \"This waiting\n             room\
    \ is unable to offer weighted sharing for a QoS class.\"\n   Scheduler Identifier\n\
    \             If all conforming traffic from this QoS class is directed\n    \
    \         to the same waiting room, on the same output port, this\n          \
    \   field specifies the Scheduler Identifier for the entire QoS\n            \
    \ class. The Scheduler Identifier points to the waiting room,\n             on\
    \ the output port specified by the Output Port field, to\n             which all\
    \ conforming traffic should be sent.  If this field\n             is not used\
    \ it should be set to 0xFFFF. If each component\n             connection of the\
    \ QoS class specifies its own output port\n             and waiting room, the\
    \ Scheduler Identifier must be\n             specified in the QoS Connection Management\
    \ message and this\n             field must be set to 0xFFFF.\n   Excess Scheduler\
    \ Id\n             If all conforming traffic from this QoS class is directed\n\
    \             to the same waiting room, on the same output port, this\n      \
    \       field specifies the Excess Scheduler Id for the entire QoS\n         \
    \    class. The Excess Scheduler Id points to the waiting room,\n            \
    \ on the output port specified by the Output Port field, to\n             which\
    \ all excess traffic should be sent.  If this field is\n             not used\
    \ it should be set to 0xFFFF. If each component\n             connection of the\
    \ QoS class specifies its own output port\n             and waiting room, the\
    \ Excess Scheduler Id must be specified\n             in the QoS Connection Management\
    \ message and this field\n             must be set to 0xFFFF. If the Scheduler\
    \ Id is specified in\n             the QoS Class Establishment message, the Excess\
    \ Scheduler\n             Id must also be specified in the QoS Class Establishment\n\
    \             message (or not used). If the Scheduler Id is specified in\n   \
    \          the QoS Connection Management message, the Excess Scheduler\n     \
    \        Id must also be specified in the QoS Connection Management\n        \
    \     message (or not used). The Excess Scheduler Id must not\n             point\
    \ to the same waiting room on the same output port as\n             the Scheduler\
    \ Identifier.\n   Output Port\n             If the Scheduler Identifier field\
    \ in the QoS Establishment\n             message is not 0xFFFF the Output Port\
    \ field specifies the\n             Output Port to which traffic from this QoS\
    \ class should be\n             routed. If the Scheduler Identifier field in the\
    \ QoS\n             Establishment message is 0xFFFF, this field is not used.\n\
    \   QoS Class Policer Parameters\n             A policer function may be applied\
    \ to a QoS class on output\n             from the classifier independently of\
    \ the regulator\n             function.  The QoS class policer function is identical\
    \ to\n             the connection policer function defined in the QoS\n      \
    \       Connection Management message with the exception that it\n           \
    \  applies to all cells that belong to the QoS class rather\n             than\
    \ just cells that belong to a single connection.\n             The QoS Class Policer\
    \ Parameters have the following format:\n    0                   1           \
    \        2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     QoS Class Increment-1                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       QoS Class Limit-1                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     QoS Class Increment-2                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       QoS Class Limit-2                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  Reserved                     |C|A|x x x x x x|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \             The definition of these fields is given in the UPC\n           \
    \  Parameters section of the QoS Connection Management\n             message.\n\
    \   QoS Class Regulator Parameters\n             The QoS class regulator function\
    \ is identical to the\n             regulator function defined in the QoS Connection\
    \ Management\n             message with the exception that it applies to all cells\n\
    \             that belong to the QoS class rather than just cells that\n     \
    \        belong to a single connection.\n             The QoS Class Regulator\
    \ Parameters have the following\n             format:\n    0                 \
    \  1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                QoS Class Regulator Increment                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  QoS Class Regulator Limit                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \             The definition of these fields is given in the Regulator\n     \
    \        Parameters section of the QoS Connection Management\n             message.\n"
- title: 9.5 QoS Release Message
  contents:
  - "9.5 QoS Release Message\n   The QoS Release message is used to delete a Scheduler\
    \ Identifier or a\n   QoS Class Identifier and to release all resources associated\
    \ with it.\n   The QoS Release message is:\n      Message Type = 99\n   The QoS\
    \ Release request and success response messages have the\n   following format:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Port                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Port Session Number                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Reserved            |     Scheduler Identifier      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      QoS Class Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Port\n             If the QoS Release message contains a Scheduler Identifier,\n\
    \             the Port field must contain the Port Number of the switch\n    \
    \         output port to which the Scheduler Identifier applies. If\n        \
    \     the QoS Release message contains a QoS Class Identifier,\n             any\
    \ valid Port number may be used. (The QoS Class\n             Identifier has a\
    \ global namespace.)\n   Port Session Number\n             The current Port Session\
    \ Number for the port specified in\n             the Port field.\n   Scheduler\
    \ Identifier\n             If the Scheduler Identifier contains the value 0xFFFF\
    \ the\n             QoS Class Identifier specified in the QoS Class Identifier\n\
    \             field should be released.  Else, if the value of the\n         \
    \    Scheduler Identifier lies in the range 0x0100 -- 0xFFFE\n             inclusive,\
    \ the Scheduler Identifier specified by the\n             Scheduler Identifier\
    \ field should be released.  A Scheduler\n             Identifier with a value\
    \ less than 0x0100 is invalid in a\n             QoS Release message.  (It specifies\
    \ a default value which\n             may not be released.)\n   QoS Class Identifier\n\
    \             If the Scheduler Identifier contains the value 0xFFFF the\n    \
    \         QoS Class Identifier field specifies the QoS Class\n             Identifier\
    \ to be released.\n   If the QoS Release message requests that a Scheduler Identifier\
    \ be\n   released, and the Scheduler Identifier is still in use by one or more\n\
    \   established connections, a failure response must be returned with the\n  \
    \ failure code indicating: \"Scheduler Identifier still in use.\" If the\n   QoS\
    \ Release message requests that a QoS Class Identifier be released,\n   and the\
    \ QoS Class Identifier is still in use by one or more\n   established connections,\
    \ a failure response must be returned with the\n   failure code indicating: \"\
    QoS Class Identifier still in use.\"\n"
- title: 9.6 QoS Connection Management Message
  contents:
  - "9.6 QoS Connection Management Message\n   The QoS Connection Management message\
    \ is used by the controller to\n   establish and modify virtual channel connections\
    \ and virtual path\n   connections across the switch which require QoS parameters\
    \ to be\n   specified. The functionality of the QoS Connection Management message\n\
    \   is identical to that of the Add Branch connection management message\n   with\
    \ the additional specification of QoS parameters.  No specific QoS\n   connection\
    \ release messages are defined. QoS connections may be\n   released with the Delete\
    \ Tree, Delete All, and Delete Branches\n   messages defined in Section 4, \"\
    Connection Management Messages.\" When\n   a QoS connection is released, all associated\
    \ QoS resources are\n   released.\n   There are three styles of connection with\
    \ specified QoS parameters:\n   QoS Connection:\n      This connection style specifies\
    \ its own individual QoS parameters\n      and is routed independently to the\
    \ waiting room and output port\n      specified in the QoS Connection Management\
    \ message. It is not a\n      member of a QoS class. Each output branch of a point-to-multipoint\n\
    \      QoS connection may specify its own QoS parameters which may be\n      different\
    \ from all other output branches of that point-to-\n      multipoint QoS connection,\
    \ if the switch supports this capability.\n      However, all output branches\
    \ must specify identical connection\n      policer parameters. A QoS Connection\
    \ Management message requesting\n      this style of connection is identified\
    \ by a QoS Class Identifier\n      with the value 0xFFFFFFFF.\n   QoS Class Connection:\n\
    \      This connection style does not specify its own individual QoS\n      parameters.\
    \ It is a member of a QoS class, and the QoS parameters\n      are specified by\
    \ the QoS class.  It is, however, routed\n      independently to the waiting room\
    \ and output port specified in the\n      QoS Connection Management message. \
    \ Each output branch of a\n      point-to-multipoint QoS Class Connection must\
    \ use the same QoS\n      parameters. A QoS Connection Management message requesting\
    \ this\n      style of connection will have a valid QoS Class Identifier and a\n\
    \      valid Scheduler Identifier.\n   QoS Class Member:\n      This connection\
    \ style does not specify its own individual QoS\n      parameters. It is a member\
    \ of a QoS class, and the QoS parameters\n      are specified by the QoS class.\
    \  The QoS class also specifies the\n      waiting room and output port to which\
    \ all members of the class are\n      routed. This style of connection does not\
    \ support point-to-\n      multipoint connections. A QoS Connection Management\
    \ message\n      requesting this style of connection will have a valid QoS Class\n\
    \      Identifier and a Scheduler Identifier with the value 0xFFFF.\n   To request\
    \ a virtual channel connection with specified QoS\n   parameters, the Virtual\
    \ Channel Connection (VCC) QoS Connection\n   Management message is:\n      Message\
    \ Type = 100.\n   To request a virtual path connection with specified QoS parameters,\n\
    \   the Virtual Path Connection (VPC) QoS Connection Management message\n   is:\n\
    \      Message Type = 101.\n   The QoS Connection Management message has the following\
    \ format for\n   both request and response messages:\n    0                  \
    \ 1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |    Result     |     Code      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Transaction Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Port Session Number                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Input Port                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |M|Q|B|C|      Input VPI        |          Input VCI            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Output Port                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |x x x x|      Output VPI       |          Output VCI           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Number of Branches       |     Scheduler Identifier      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      QoS Class Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Regulator   | Excess Action |       Connection Weight       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |S|A|x x x x x x|   Reserved    |      Excess Scheduler Id      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                       UPC Parameters                        ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                    Regulator Parameters                     ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Port Session Number\n   Input Port\n   Input VPI\n   Input VCI\n   Output\
    \ Port\n   Output VPI\n   Output VCI\n   Number of Branches\n             The\
    \ definition of these fields is exactly the same as\n             defined for\
    \ the Add Branch message in Section 4.1,\n             \"Connection Management\
    \ Messages.\"\n   M B C Flags\n             The definition of the M, B, and C\
    \ flags is exactly the same\n             as defined in Section 4, \"Connection\
    \ Management Messages.\"\n             They apply to the QoS Connection Management\
    \ message exactly\n             as defined for the Add Branch message.\n   Q:\
    \ QoS Profile Flag The QoS Profile flag is not used in the QoS\n             Connection\
    \ Management message.\n   Scheduler Identifier\n             For QoS Connection\
    \ and QoS Class Connection styles, the\n             Scheduler Identifier points\
    \ to the waiting room, on the\n             output port specified by the Output\
    \ Port field, to which\n             all conforming traffic on the connection\
    \ should be routed.\n             The values 0 -- 255 specify the default settings\
    \ for the\n             scheduler. Each of the default values maps directly to\
    \ one\n             of the scheduler priority levels. A Scheduler Identifier in\n\
    \             the range 0 -- 255 may be used without first being\n           \
    \  established by a Scheduler Establishment message. All\n             Scheduler\
    \ Identifiers in the range 0x0100 to 0xFFFE must\n             first be established\
    \ by a Scheduler Establishment message.\n             A Scheduler Identifier with\
    \ a value of 0xFFFF indicates\n             that a QoS Class Member connection\
    \ style is being\n             requested. In this connection style, the waiting\
    \ room and\n             output port are specified by reference to the QoS class\n\
    \             specified by the QoS Class Identifier field. In this case\n    \
    \         the QoS Class Identifier field must contain a valid QoS\n          \
    \   Class Identifier.\n   QoS Class Identifier\n             For QoS Class Connection\
    \ and QoS Class Member connection\n             styles, the QoS Class Identifier\
    \ specifies the QoS Class to\n             which the connection belongs. It must\
    \ first be established\n             by a QoS Class Establishment message and\
    \ must have a value\n             greater than 0 and less than 0xFFFFFFFF.\n \
    \            A QoS Class Identifier with a value of 0xFFFFFFFF indicates\n   \
    \          that a connection of style \"QoS Connection\" is being\n          \
    \   requested. In this connection style, the connection does\n             not\
    \ belong to a QoS class. All QoS parameters are specified\n             by the\
    \ QoS Connection Management message and apply only to\n             the specified\
    \ connection.\n   Regulator\n   Excess Action\n             The Regulator and\
    \ Excess Action parameters are only used in\n             connection requests\
    \ of style \"QoS Connection.\" The\n             definition of these fields in\
    \ the QoS Connection Management\n             message is exactly the same as defined\
    \ for the QoS Class\n             Establishment message with the exception that\
    \ they apply to\n             an individual connection rather than to an entire\
    \ QoS\n             class.\n   Connection Weight\n             This field is only\
    \ used in connections of style \"QoS\n             Connection\" and \"QoS Class\
    \ Connection.\" For QoS Class\n             Member style connections, the QoS\
    \ Class Weight parameter of\n             the QoS Class Establishment message\
    \ should be used to\n             assign a weight to the QoS Class.\n        \
    \     If bit 0 of the Scheduler Flags field of the QoS\n             Configuration\
    \ message indicates that weighted service may\n             be applied to a connection,\
    \ the Connection Weight parameter\n             specifies the share of the bandwidth\
    \ available to the\n             waiting room that should be given to this connection.\n\
    \             The Connection Weight is an unsigned 16-bit field\n            \
    \ specifying a binary fraction.  I.e. the bandwidth share, as\n             a\
    \ fraction of the bandwidth available to the waiting room,\n             is given\
    \ by:\n                Bandwidth share = Connection Weight * 2**(-16)\n      \
    \       A Connection Weight of zero indicates equal sharing between\n        \
    \     all connections in this waiting room that request a\n             Connection\
    \ Weight of zero.  While a 16-bit field is used to\n             specify the Connection\
    \ Weight it is understood that the\n             accuracy of the bandwidth sharing\
    \ is hardware dependent and\n             is not specified.\n             For\
    \ connections of style \"QoS Class Connection,\" if the\n             Regulator\
    \ function of the QoS Class is specified as None,\n             or Policer, the\
    \ Connection Weight should be applied to the\n             waiting room pointed\
    \ to by the Scheduler Identifier field\n             in the QoS Connection Management\
    \ message. If the Regulator\n             function of the QoS Class is specified\
    \ as Shaper, the\n             Connection Weight should be applied to the waiting\
    \ room\n             pointed to by the Excess Scheduler Id field in the QoS\n\
    \             Connection Management message.\n             For connections of\
    \ style \"QoS Connection,\" if the Regulator\n             field of the QoS Connection\
    \ Management message specifies\n             None, or Policer, the Connection\
    \ Weight should be applied\n             to the waiting room pointed to by the\
    \ Scheduler Identifier\n             field. If the Regulator field of the QoS\
    \ Connection\n             Management message specifies Shaper, the Connection\
    \ Weight\n             should be applied to the waiting room pointed to by the\n\
    \             Excess Scheduler Id field.\n             If the specified waiting\
    \ room is unable to offer weighted\n             sharing for a connection, a failure\
    \ response message should\n             be returned with the failure code indicating:\
    \ \"this waiting\n             room is unable to offer weighted sharing for a\
    \ connection.\"\n   QoS Flags\n        S: Selective Discard\n             If the\
    \ Selective Discard flag is set, only cells with the\n             Cell Loss Priority\
    \ (CLP) bit set will be subject to the\n             discard mechanism when the\
    \ number of cells in the waiting\n             room exceeds the Discard Threshold.\
    \  If the Selective\n             Discard flag is zero, all cells (CLP=0 and CLP=1)\
    \ will be\n             subject to the discard mechanism when the number of cells\n\
    \             in the waiting room exceeds the Discard Threshold.\n           \
    \  Selective discard can be combined with packet discard. In\n             this\
    \ case only packets in which at least one cell has the\n             CLP bit set\
    \ will be subject to the discard mechanism.\n        A: All Branches\n       \
    \      For a QoS Connection Management message that specifies a\n            \
    \ point-to-multipoint connection, if the All Branches flag is\n             set,\
    \ all branches of the point-to-multipoint connection\n             must be set\
    \ to the QoS parameters specified in the message.\n             If the All Branches\
    \ flag is zero, only the single output\n             branch specified in the message\
    \ should be set to the QoS\n             parameters specified in the message.\
    \ For a QoS Connection\n             Management message that specifies a point-to-point\n\
    \             connection, the All Branches flag is not used.\n        x: Unused\n\
    \   Excess Scheduler Id\n             For connections of style \"QoS Connection\"\
    \ and \"QoS Class\n             Connection,\" the Excess Scheduler Id points to\
    \ the waiting\n             room, on the output port specified by the Output Port\n\
    \             field, to which all excess traffic should be routed. The\n     \
    \        values 0 -- 255 specify the default settings for the\n             scheduler.\
    \ Each of the default values maps directly to one\n             of the scheduler\
    \ priority levels. An Excess Scheduler Id in\n             the range 0 -- 255\
    \ may be used without first being\n             established by a Scheduler Establishment\
    \ message. All\n             values of Excess Scheduler Id in the range 0x0100\
    \ to 0xFFFE\n             must first be established by a Scheduler Establishment\n\
    \             message.\n             If this field is not used it should be set\
    \ to 0xFFFF.  The\n             Excess Scheduler Id must not point to the same\
    \ waiting room\n             on the same output port as the Scheduler Identifier.\n\
    \   UPC Parameters\n             All connection styles may be subject to a Usage\
    \ Parameter\n             Control (UPC) function, also known as a connection policer.\n\
    \             The policing function is applied to each individual\n          \
    \   connection before it is combined with other connections\n             into\
    \ a QoS class by the classifier function. A policing\n             function applied\
    \ to an entire QoS class is defined in the\n             QoS Class Establishment\
    \ message.\n             The connection policer is defined by reference to the\n\
    \             Generic Cell Rate Algorithm (GCRA) defined by the ATM Forum\n  \
    \           [af-tm-0056], although any equivalent policing algorithm\n       \
    \      may be used. The GCRA takes two parameters, the increment\n           \
    \  (I) and the limit (L). The reciprocal of the increment\n             (1/I)\
    \ specifies the rate being policed. The limit specifies\n             the burst\
    \ tolerance. (For comparison with the token bucket\n             policer discussed\
    \ in [Partridge], the size of the token\n             bucket is given by L/I.)\n\
    \             Two policers in series may be specified to permit the\n        \
    \     policing of both peak rate and average rate (also called\n             sustainable\
    \ rate). The parameters for the first policer are\n             Increment-1 and\
    \ Limit-1. For comparison with the ATM Forum\n             specification these\
    \ would be used to police the Peak Cell\n             Rate (PCR) and Cell Delay\
    \ Variation Tolerance (CDVT)\n             respectively. The parameters for the\
    \ second policer are\n             Increment-2 and Limit-2. For comparison with\
    \ the ATM Forum\n             specification these would be used to police the\
    \ Sustainable\n             Cell Rate (SCR), and Burst Tolerance.  (The Burst\
    \ Tolerance\n             may be computed from the Maximum Burst Size [af-tm-0056].)\n\
    \             There are two configurations in which the two policers may\n   \
    \          be connected in series.  In the All Cells configuration,\n        \
    \     all cells (cells with the Cell Loss Priority (CLP) bit set\n           \
    \  to zero and cells with the CLP bit set to one) are subject\n             to\
    \ the policing action of both policers in series. In the\n             CLP Selective\
    \ configuration, all cells, both CLP=0 and\n             CLP=1, are policed by\
    \ the first policer; but only cells\n             with CLP=0 are subject to policing\
    \ by the second policer.\n             Either tagging or discard may be specified\
    \ for each of the\n             policer configurations.\n             The values\
    \ of the parameters Increment and Limit in the UPC\n             Parameters fields\
    \ are given in terms of a time unit\n             specified by the switch in the\
    \ QoS Configuration Parameters\n             message. The time unit is specified\
    \ by the switch as a\n             rate, the Scaling Factor, which gives the rate\
    \ in cells per\n             second that would result from an Increment parameter\
    \ value\n             of one. Thus to determine the value of the Increment\n \
    \            parameter from the desired policed rate given in cells per\n    \
    \         second:\n                Increment parameter = (Scaling_Factor)/(policed_rate)\n\
    \             To determine the value of the Limit parameter from the\n       \
    \      desired Cell Delay Variation Tolerance (CDVT) given in\n             seconds:\n\
    \                Limit parameter = CDVT * Scaling_Factor\n             To determine\
    \ the value of the Limit parameter from the\n             desired Burst Tolerance\
    \ (BT) given in seconds:\n                Limit parameter = BT * Scaling_Factor\n\
    \             The Increment and Limit parameters are specified as 32-bit\n   \
    \          unsigned integers; so the choice of the Scaling Factor\n          \
    \   allows the switch to select the range and granularity of\n             the\
    \ policer parameters with respect to the line rate of the\n             switch\
    \ port.  For example, a SONET STS-3c (155.52 Mbps)\n             switch port has\
    \ a line rate of approximately 353 kcells/s.\n             With a Scaling Factor\
    \ value of 353,000,000 we can specify a\n             policed rate slightly less\
    \ than the line rate with a\n             granularity of 0.1%. For a policed rate\
    \ of 1 kbps we can\n             still support a bucket size of 31 cells.\n  \
    \           The UPC Parameters have the following format:\n    0             \
    \      1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Increment-1                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Limit-1                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Increment-2                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Limit-2                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  Reserved                     |C|A|x x x x x x|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Increment-1\n             The increment parameter for the first policer, specified\
    \ as\n             a 32-bit unsigned integer.  A value of zero for the\n     \
    \        Increment-1 parameter is used to disable the first policer.\n       \
    \      In this case all cells will be considered to conform to the\n         \
    \    traffic parameters of the first policer.\n   Limit-1\n             The limit\
    \ parameter for the first policer, specified as a\n             32-bit unsigned\
    \ integer.\n   Increment-2\n             The increment parameter for the second\
    \ policer, specified\n             as a 32-bit unsigned integer.  A value of zero\
    \ for the\n             Increment-2 parameter is used to disable the second\n\
    \             policer.  In this case all cells will be considered to\n       \
    \      conform to the traffic parameters of the second policer.\n   Limit-2\n\
    \             The limit parameter for the second policer, specified as a\n   \
    \          32-bit unsigned integer.\n   Flags\n        C: Configuration\n    \
    \         If the Configuration flag is set, the policer should be set\n      \
    \       to the All Cells configuration. If the Configuration flag\n          \
    \   is zero, the policer should be set to the CLP Selective\n             configuration.\n\
    \             In the All Cells configuration, all cells (both CLP=0 and\n    \
    \         CLP=1) are subject to the policing action of both policers\n       \
    \      in series. In the CLP Selective configuration, all cells,\n           \
    \  both CLP=0 and CLP=1, are policed by the first policer; but\n             only\
    \ cells with CLP=0 are subject to policing by the second\n             policer.\
    \ Either tagging or discard may be specified for\n             each of the policer\
    \ configurations.\n        A: Action\n             If the Action flag is zero,\
    \ discard is required as the\n             policing action. If the Action flag\
    \ is set, tagging is\n             required as the policing action.\n        \
    \     If tagging is selected in the All Cells configuration, any\n           \
    \  cell with CLP=0 in either policer, that the policer\n             determines\
    \ to be in excess of the specified policer\n             parameters, will be changed\
    \ to CLP=1. If discard is\n             selected in the All Cells configuration,\
    \ any cell (CLP=0 or\n             CLP=1) in either policer, that the policer\
    \ determines to be\n             in excess of the specified policer parameters,\
    \ will be\n             discarded.\n             In the CLP Selective configuration,\
    \ the first policer is\n             always set to discard any cell (CLP=0 or\
    \ CLP=1) that it\n             determines to be in excess of its specified policer\n\
    \             parameters. If tagging is selected in the CLP Selective\n      \
    \       configuration, the second policer will change the CLP bit\n          \
    \   to CLP=1 of any cell that it determines to be in excess of\n             its\
    \ specified parameters. If discard is selected in the CLP\n             Selective\
    \ configuration, the second policer will discard\n             any cell that it\
    \ determines to be in excess of its\n             specified parameters.\n    \
    \         To configure the policer for the conformance definitions\n         \
    \    specified by the ATM Forum [af-tm-0056] the following\n             configurations\
    \ are suggested:\n                CBR.1:   One policer,     All Cells,       \
    \ Discard\n                VBR.1:   Two policers,    All Cells,        Discard\n\
    \                VBR.2:   Two policers,    CLP Selective,    Discard\n       \
    \         VBR.3:   Two policers,    CLP Selective,    Tagging\n              \
    \  UBR.1:   One policer,     All Cells,        Discard\n                UBR.2:\
    \   One policer,     All Cells,        Tagging.\n        x: Unused\n   Regulator\
    \ Parameters\n             Only connections of style \"QoS Connection\" require\
    \ the\n             Regulator Parameters to be specified in the QoS Connection\n\
    \             Management message. For connections of style \"QoS Class\n     \
    \        Connection\" and \"QoS Class Member\" the Regulator Parameters\n    \
    \         are specified in the QoS Class Establishment message.\n            \
    \ The Regulator Parameters are specified in a similar manner\n             to\
    \ the UPC parameters. If the regulator function is\n             specified as\
    \ Policing, a single GCRA policer is applied to\n             all cells (both\
    \ CLP=0 and CLP=1) on the connection. The\n             policer takes two parameters:\
    \ an increment, the Regulator\n             Increment, and a limit, the Regulator\
    \ Limit. The reciprocal\n             of the increment (1/I) specifies the rate\
    \ being policed.\n             The limit (L) specifies the burst tolerance. (For\n\
    \             comparison with the token bucket policer discussed in\n        \
    \     [Partridge], the size of the token bucket is given by L/I.)\n          \
    \   The Regulator Increment and Regulator Limit parameters are\n             32-bit\
    \ unsigned integers. Their values are determined in\n             terms of the\
    \ Scaling Factor specified by the switch in the\n             QoS Configuration\
    \ Parameters message. To determine the\n             value of the Regulator Increment\
    \ parameter from the desired\n             policed rate given in cells per second:\n\
    \                Regulator Increment = (Scaling_Factor)/(policed_rate)\n     \
    \        For a policed rate (r) the GCRA policer guarantees that\n           \
    \  over any time period T the amount of traffic determined by\n             the\
    \ policer to be conforming to the traffic parameters does\n             not exceed:\n\
    \                rT + L/I\n             The value of the Regulator Limit may be\
    \ determined from\n             this relation.\n             If the regulator\
    \ function is specified as Shaping, only the\n             Regulator Increment\
    \ parameter is used. The Regulator Limit\n             parameter is not used.\
    \ The value of the Regulator Increment\n             parameter is determined in\
    \ terms of the Scaling Factor\n             specified by the switch in the QoS\
    \ Configuration Parameters\n             message. To determine the value of the\
    \ Regulator Increment\n             parameter from the desired shaper rate, given\
    \ in cells per\n             second, on output from the shaper:\n            \
    \    Regulator Increment = (Scaling_Factor)/(shaper_rate)\n             An Increment\
    \ value of zero is used to disable the policer.\n             In this case all\
    \ cells on that connection will be\n             considered to conform to the\
    \ policer traffic parameters. A\n             shaper given a Regulator Increment\
    \ parameter of zero will\n             perform no shaping function on that connection.\n\
    \   The Regulator Parameters have the following format:\n    0               \
    \    1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Regulator Increment                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Regulator Limit                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 9.7 QoS Failure Response Codes
  contents:
  - "9.7 QoS Failure Response Codes\n   A failure response message is formed by returning\
    \ the request message\n   that caused the failure with the Result field in the\
    \ header\n   indicating failure (Result = 4) and the Code field giving the failure\n\
    \   code. The failure code specifies the reason for the switch being\n   unable\
    \ to satisfy the request message.  The following additional\n   failure codes\
    \ are defined for use in response to QoS messages.\n   General failure codes are\
    \ specified in Section 3.2, Failure Response\n   Messages.\n       128: Weighted\
    \ scheduling within this waiting room is unavailable.\n       129: This waiting\
    \ room is unable to offer weighted sharing for a\n              QoS class.\n \
    \      130: This waiting room is unable to offer weighted sharing for a\n    \
    \          connection.\n       131: Scheduler Identifier still in use.\n     \
    \  132: QoS Class Identifier still in use.\n       133: Invalid QoS parameter.\n\
    \       134: Insufficient QoS resources.\n       135: Any point-to-multipoint\
    \ connection arriving on this input\n              port must use the same QoS\
    \ parameters for all output\n              branches.\n"
- title: 10. Adjacency Protocol
  contents:
  - "10. Adjacency Protocol\n   The adjacency protocol is used to synchronize state\
    \ across the link,\n   to agree on which version of the protocol to use, to discover\
    \ the\n   identity of the entity at the other end of a link, and to detect when\n\
    \   it changes. GSMP is a hard state protocol.  It is therefore important\n  \
    \ to detect loss of contact between switch and controller, and to\n   detect any\
    \ change of identity of switch or controller.  No GSMP\n   messages other than\
    \ those of the adjacency protocol may be sent\n   across the link until the adjacency\
    \ protocol has achieved\n   synchronization.\n"
- title: 10.1 Packet Format
  contents:
  - "10.1 Packet Format\n   All GSMP messages belonging to the adjacency protocol\
    \ have the\n   following structure:\n    0                   1               \
    \    2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    | Message Type  |     Timer     |M|     Code    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Sender Name                          |\n   +  \
    \                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |        \
    \                       |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n   |                         Receiver Name\
    \                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Sender Port                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Receiver Port                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Sender Instance                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Receiver Instance                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Version\n             In the adjacency protocol the Version field is used\
    \ for\n             version negotiation.  In a SYN message the Version field\n\
    \             always contains the highest version understood by the\n        \
    \     sender.  A receiver receiving a SYN message with a version\n           \
    \  higher than understood will ignore that message.  A\n             receiver\
    \ receiving a SYN message with a version lower than\n             its own highest\
    \ version, but a version that it understands,\n             will reply with a\
    \ SYNACK with the version from the received\n             SYN in its GSMP Version\
    \ field. This defines the version of\n             the GSMP protocol to be used\
    \ while the adjacency protocol\n             remains synchronized. All other messages\
    \ will use the\n             agreed version in the Version field.\n          \
    \   The version number for the version of the GSMP protocol\n             defined\
    \ by this specification is Version = 2.\n   Message Type\n             The adjacency\
    \ protocol is:\n                Message Type = 10\n   Timer\n             The\
    \ Timer field is used to inform the receiver of the timer\n             value\
    \ used in the adjacency protocol of the sender. The\n             timer specifies\
    \ the nominal time between periodic adjacency\n             protocol messages.\
    \ It is a constant for the duration of a\n             GSMP session. The timer\
    \ field is specified in units of\n             100ms.\n   M-Flag\n           \
    \  The M-Flag is used in the SYN message to indicate whether\n             the\
    \ sender is a master or a slave. If the M-Flag is set in\n             the SYN\
    \ message, the sender is a master.  If zero, the\n             sender is a slave.\
    \ The GSMP protocol is asymmetric, the\n             controller being the master\
    \ and the switch being the slave.\n             The M-Flag prevents a master from\
    \ synchronizing with\n             another master, or a slave with another slave.\
    \ If a slave\n             receives a SYN message with a zero M-Flag, it must\
    \ ignore\n             that SYN message. If a master receives a SYN message with\n\
    \             the M-Flag set, it must ignore that SYN message. In all\n      \
    \       other messages the M-Flag is not used.\n   Code\n             Field specifies\
    \ the function of the message. Four Codes are\n             defined for the adjacency\
    \ protocol:\n                SYN:     Code = 1\n                SYNACK:  Code\
    \ = 2\n                ACK:     Code = 3\n                RSTACK:  Code = 4.\n\
    \   Sender Name\n             For the SYN, SYNACK, and ACK messages, is the name\
    \ of the\n             entity sending the message. The Sender Name is a 48-bit\n\
    \             quantity that is unique within the operational context of\n    \
    \         the device. A 48-bit IEEE 802 MAC address, if available,\n         \
    \    may be used for the Sender Name. If the Ethernet\n             encapsulation\
    \ is used the Sender Name must be the Source\n             Address from the MAC\
    \ header.  For the RSTACK message, the\n             Sender Name field is set\
    \ to the value of the Receiver Name\n             field from the incoming message\
    \ that caused the RSTACK\n             message to be generated.\n   Receiver Name\n\
    \             For the SYN, SYNACK, and ACK messages, is the name of the\n    \
    \         entity that the sender of the message believes is at the\n         \
    \    far end of the link. If the sender of the message does not\n            \
    \ know the name of the entity at the far end of the link,\n             this field\
    \ should be set to zero. For the RSTACK message,\n             the Receiver Name\
    \ field is set to the value of the Sender\n             Name field from the incoming\
    \ message that caused the RSTACK\n             message to be generated.\n   Sender\
    \ Port\n             For the SYN, SYNACK, and ACK messages, is the local port\n\
    \             number of the link across which the message is being sent.\n   \
    \          For the RSTACK message, the Sender Port field is set to the\n     \
    \        value of the Receiver Port field from the incoming message\n        \
    \     that caused the RSTACK message to be generated.\n   Receiver Port\n    \
    \         For the SYN, SYNACK, and ACK messages, is what the sender\n        \
    \     believes is the local port number for the link, allocated\n            \
    \ by the entity at the far end of the link.  If the sender of\n             the\
    \ message does not know the port number at the far end of\n             the link,\
    \ this field should be set to zero. For the RSTACK\n             message, the\
    \ Receiver Port field is set to the value of the\n             Sender Port field\
    \ from the incoming message that caused the\n             RSTACK message to be\
    \ generated.\n   Sender Instance\n             For the SYN, SYNACK, and ACK messages,\
    \ is the sender's\n             instance number for the link. It is used to detect\
    \ when the\n             link comes back up after going down or when the identity\
    \ of\n             the entity at the other end of the link changes. The\n    \
    \         instance number is a 32-bit number that is guaranteed to be\n      \
    \       unique within the recent past and to change when the link\n          \
    \   or node comes back up after going down. Zero is not a valid\n            \
    \ instance number. For the RSTACK message, the Sender\n             Instance field\
    \ is set to the value of the Receiver Instance\n             field from the incoming\
    \ message that caused the RSTACK\n             message to be generated.\n   Receiver\
    \ Instance\n             For the SYN, SYNACK, and ACK messages, is what the sender\n\
    \             believes is the current instance number for the link,\n        \
    \     allocated by the entity at the far end of the link. If the\n           \
    \  sender of the message does not know the current instance\n             number\
    \ at the far end of the link, this field should be set\n             to zero.\
    \ For the RSTACK message, the Receiver Instance\n             field is set to\
    \ the value of the Sender Instance field from\n             the incoming message\
    \ that caused the RSTACK message to be\n             generated.\n"
- title: 10.2 Procedure
  contents:
  - "10.2 Procedure\n   The adjacency protocol is described by the following rules\
    \ and state\n   tables.\n   The rules and state tables use the following operations:\n\
    \    o The \"Update Peer Verifier\" operation is defined as storing the\n    \
    \  values of the Sender Instance, Sender Port, and Sender Name fields\n      from\
    \ a SYN or SYNACK message received from the entity at the far\n      end of the\
    \ link.\n    o The procedure \"Reset the link\" is defined as:\n          1. Generate\
    \ a new instance number for the link\n          2. Delete the peer verifier (set\
    \ to zero the values of Sender\n             Instance, Sender Port, and Sender\
    \ Name previously stored by\n             the Update Peer Verifier operation)\n\
    \          3. Send a SYN message\n          4. Enter the SYNSENT state.\n    o\
    \ The state tables use the following Boolean terms and operators:\n        A \
    \   The Sender Instance in the incoming message matches the\n             value\
    \ stored from a previous message by the \"Update Peer\n             Verifier\"\
    \ operation.\n        B    The Sender Instance, Sender Port, and Sender Name fields\
    \ in\n             the incoming message match the values stored from a\n     \
    \        previous message by the \"Update Peer Verifier\" operation.\n       \
    \ C    The Receiver Instance, Receiver Port, and Receiver Name\n             fields\
    \ in the incoming message match the values of the\n             Sender Instance,\
    \ Sender Port, and Sender Name currently\n             sent in outgoing SYN, SYNACK,\
    \ and ACK messages.\n        \"&&\" Represents the logical AND operation\n   \
    \     \"||\" Represents the logical OR operation\n        \"!\" Represents the\
    \ logical negation (NOT) operation.\n    o A timer is required for the periodic\
    \ generation of SYN, SYNACK,\n      and ACK messages. The value of the timer is\
    \ announced in the Timer\n      field.  The period of the timer is unspecified\
    \ but a value of one\n      second is suggested.\n      There are two independent\
    \ events: the timer expires, and a packet\n      arrives. The processing rules\
    \ for these events are:\n         Timer Expires:   Reset Timer\n             \
    \             If state = SYNSENT Send SYN\n                          If state\
    \ = SYNRCVD Send SYNACK\n                          If state = ESTAB   Send ACK\n\
    \          Packet Arrives:\n              If incoming message is an RSTACK:\n\
    \                  If (A && C && !SYNSENT) Reset the link\n                  Else\
    \ Discard the message.\n              If incoming message is a SYN, SYNACK, or\
    \ ACK:\n                  Response defined by the following State Tables.\n  \
    \            If incoming message is any other GSMP message and state !=\n    \
    \              ESTAB:\n                  Discard incoming message.\n         \
    \         If state = SYNSENT Send SYN (Note 1)\n                  If state = SYNRCVD\
    \ Send SYNACK (Note 1)\n              Note 1: No more than two SYN or SYNACK messages\
    \ should be\n              sent within any time period of length defined by the\n\
    \              timer.\n    o State synchronization across a link is considered\
    \ to be achieved\n      when the protocol reaches the ESTAB state. All GSMP messages,\n\
    \      other than adjacency protocol messages, that are received before\n    \
    \  synchronization is achieved will be discarded.\n"
- title: State Tables
  contents:
  - 'State Tables

    '
- title: 'State: SYNSENT'
  contents:
  - 'State: SYNSENT

    '
- title: +======================================================================+
  contents:
  - '+======================================================================+

    '
- title: '|     Condition      |                Action               | New State |'
  contents:
  - '|     Condition      |                Action               | New State |

    '
- title: +====================+=====================================+===========+
  contents:
  - '+====================+=====================================+===========+

    '
- title: '|    SYNACK && C     |  Update Peer Verifier; Send ACK     |   ESTAB   |'
  contents:
  - '|    SYNACK && C     |  Update Peer Verifier; Send ACK     |   ESTAB   |

    '
- title: +--------------------+-------------------------------------+-----------+
  contents:
  - '+--------------------+-------------------------------------+-----------+

    '
- title: '|    SYNACK && !C    |            Send RSTACK              |  SYNSENT  |'
  contents:
  - '|    SYNACK && !C    |            Send RSTACK              |  SYNSENT  |

    '
- title: +--------------------+-------------------------------------+-----------+
  contents:
  - '+--------------------+-------------------------------------+-----------+

    '
- title: '|        SYN         |  Update Peer Verifier; Send SYNACK  |  SYNRCVD  |'
  contents:
  - '|        SYN         |  Update Peer Verifier; Send SYNACK  |  SYNRCVD  |

    '
- title: +--------------------+-------------------------------------+-----------+
  contents:
  - '+--------------------+-------------------------------------+-----------+

    '
- title: '|        ACK         |            Send RSTACK              |  SYNSENT  |'
  contents:
  - '|        ACK         |            Send RSTACK              |  SYNSENT  |

    '
- title: +======================================================================+
  contents:
  - '+======================================================================+

    '
- title: 'State: SYNRCVD'
  contents:
  - 'State: SYNRCVD

    '
- title: +======================================================================+
  contents:
  - '+======================================================================+

    '
- title: '|     Condition      |                Action               | New State |'
  contents:
  - '|     Condition      |                Action               | New State |

    '
- title: +====================+=====================================+===========+
  contents:
  - '+====================+=====================================+===========+

    '
- title: '|    SYNACK && C     |  Update Peer Verifier; Send ACK     |   ESTAB   |'
  contents:
  - '|    SYNACK && C     |  Update Peer Verifier; Send ACK     |   ESTAB   |

    '
- title: +--------------------+-------------------------------------+-----------+
  contents:
  - '+--------------------+-------------------------------------+-----------+

    '
- title: '|    SYNACK && !C    |            Send RSTACK              |  SYNRCVD  |'
  contents:
  - '|    SYNACK && !C    |            Send RSTACK              |  SYNRCVD  |

    '
- title: +--------------------+-------------------------------------+-----------+
  contents:
  - '+--------------------+-------------------------------------+-----------+

    '
- title: '|        SYN         |  Update Peer Verifier; Send SYNACK  |  SYNRCVD  |'
  contents:
  - '|        SYN         |  Update Peer Verifier; Send SYNACK  |  SYNRCVD  |

    '
- title: +--------------------+-------------------------------------+-----------+
  contents:
  - '+--------------------+-------------------------------------+-----------+

    '
- title: '|   ACK && B && C    |              Send ACK               |   ESTAB   |'
  contents:
  - '|   ACK && B && C    |              Send ACK               |   ESTAB   |

    '
- title: +--------------------+-------------------------------------+-----------+
  contents:
  - '+--------------------+-------------------------------------+-----------+

    '
- title: '|  ACK && !(B && C)  |            Send RSTACK              |  SYNRCVD  |'
  contents:
  - '|  ACK && !(B && C)  |            Send RSTACK              |  SYNRCVD  |

    '
- title: +======================================================================+
  contents:
  - '+======================================================================+

    '
- title: 'State: ESTAB'
  contents:
  - 'State: ESTAB

    '
- title: +======================================================================+
  contents:
  - '+======================================================================+

    '
- title: '|     Condition      |                Action               | New State |'
  contents:
  - '|     Condition      |                Action               | New State |

    '
- title: +====================+=====================================+===========+
  contents:
  - '+====================+=====================================+===========+

    '
- title: '|   SYN || SYNACK    |           Send ACK (note 2)         |   ESTAB   |'
  contents:
  - '|   SYN || SYNACK    |           Send ACK (note 2)         |   ESTAB   |

    '
- title: +--------------------+-------------------------------------+-----------+
  contents:
  - '+--------------------+-------------------------------------+-----------+

    '
- title: '|   ACK && B && C    |           Send ACK (note 3)         |   ESTAB   |'
  contents:
  - '|   ACK && B && C    |           Send ACK (note 3)         |   ESTAB   |

    '
- title: +--------------------+-------------------------------------+-----------+
  contents:
  - '+--------------------+-------------------------------------+-----------+

    '
- title: '|  ACK && !(B && C)  |              Send RSTACK            |   ESTAB   |'
  contents:
  - '|  ACK && !(B && C)  |              Send RSTACK            |   ESTAB   |

    '
- title: +======================================================================+
  contents:
  - "+======================================================================+\n  \
    \ Note 2: No more than two ACKs should be sent within any time period\n   of length\
    \ defined by the timer. Thus, one ACK must be sent every time\n   the timer expires.\
    \ In addition, one further ACK may be sent between\n   timer expirations if the\
    \ incoming message is a SYN or SYNACK. This\n   additional ACK allows the adjacency\
    \ protocol to reach synchronization\n   more quickly.\n   Note 3: No more than\
    \ one ACK should be sent within any time period of\n   length defined by the timer.\n"
- title: 10.3 Loss of Synchronization
  contents:
  - "10.3 Loss of Synchronization\n   If after synchronization is achieved, no valid\
    \ GSMP messages are\n   received in any period of time in excess of three times\
    \ the value of\n   the Timer field announced in the incoming adjacency protocol\n\
    \   messages, loss of synchronization may be declared.\n   The preferred procedure\
    \ for a switch to use when it looses\n   synchronization with its active controller\
    \ is to attempt to establish\n   synchronization with (one of) its backup controller(s).\
    \  However, in\n   this preferred approach, it must not reset its state until\
    \ it\n   achieves synchronization with a backup controller.  This means that\n\
    \   if, before achieving synchronization with a backup controller, it\n   regains\
    \ synchronization with its original controller, it may continue\n   the original\
    \ session (and cease attempting to establish\n   synchronization with a backup\
    \ controller). If synchronization with\n   the original session is regained it\
    \ is the responsibility of the\n   controller to ensure consistent state between\
    \ the switch and\n   controller.\n   While the above is the preferred procedure,\
    \ it is also the case that\n   the simplest procedure when declaring loss of synchronization\
    \ with\n   the active controller is to reset the switch state, and start\n   searching\
    \ for a controller.  This simple procedure is legitimate.\n"
- title: 11. Summary of Failure Response Codes
  contents:
  - "11. Summary of Failure Response Codes\n   The following list gives a summary\
    \ of the failure codes defined for\n   failure response messages:\n        1:\
    \ Unspecified reason not covered by other failure codes.\n        2: Invalid request\
    \ message.\n        3: The specified request is not implemented on this switch.\n\
    \        4: Invalid Port Session Number.\n        5: One or more of the specified\
    \ ports does not exist.\n        6: One or more of the specified ports is down.\n\
    \        7: Unused. (This failure code has been replaced by failure codes\n  \
    \           18--21.)\n        8: The specified connection does not exist.\n  \
    \      9: The specified branch does not exist.\n       10: A branch belonging\
    \ to the specified point-to-multipoint\n             connection is already established\
    \ on the specified output\n             port and the switch cannot support more\
    \ than a single\n             branch of any point-to-multipoint connection on\
    \ the same\n             output port.\n       11: The limit on the maximum number\
    \ of point-to-multipoint\n             connections that the switch can support\
    \ has been reached.\n       12: The limit on the maximum number of branches that\
    \ the\n             specified point-to-multipoint connection can support has\n\
    \             been reached.\n       13: Unable to assign the requested VPI/VCI\
    \ value to the requested\n             branch on the specified point-to-multipoint\
    \ connection.\n       14: General problem related to the manner in which point-to-\n\
    \             multipoint is supported by the switch.\n       15: Out of resources\
    \ (e.g. memory exhausted, etc.).\n       16: Failure specific to the particular\
    \ message type. (The meaning\n             of this failure code depends upon the\
    \ Message Type. It is\n             defined within the description of any message\
    \ that uses\n             it.)\n       17: Cannot label each output branch of\
    \ a point-to-multipoint tree\n             with a different label.\n       18:\
    \ One or more of the specified input VPIs is invalid.\n       19: One or more\
    \ of the specified input VCIs is invalid.\n       20: One or more of the specified\
    \ output VPIs is invalid.\n       21: One or more of the specified output VCIs\
    \ is invalid.\n       22: Invalid Class of Service field in a Connection Management\n\
    \             message.\n       23: Insufficient resources for QoS Profile.\n \
    \      24: Virtual path switching is not supported on this input port.\n     \
    \  25: Point-to-multipoint virtual path connections are not\n             supported\
    \ on either the requested input port or the\n             requested output port.\n\
    \       26: Attempt to add a virtual path connection branch to an\n          \
    \   existing virtual channel connection.\n       27: Attempt to add a virtual\
    \ channel connection branch to an\n             existing virtual path connection.\n\
    \       28: Only point-to-point bidirectional connections may be\n           \
    \  established.\n       29: Cannot support requested VPI range.\n       30: Cannot\
    \ support requested VCI range on all requested VPIs.\n       31: The transmit\
    \ cell rate of this output port cannot be changed.\n       32: Requested transmit\
    \ cell rate out of range for this output\n             port.\n      128: Weighted\
    \ scheduling within this waiting room is unavailable.\n      129: This waiting\
    \ room is unable to offer weighted sharing for a\n             QoS class.\n  \
    \    130: This waiting room is unable to offer weighted sharing for a\n      \
    \       connection.\n      131: Scheduler Identifier still in use.\n      132:\
    \ QoS Class Identifier still in use.\n      133: Invalid QoS parameter.\n    \
    \  134: Insufficient QoS resources.\n      135: Any point-to-multipoint connection\
    \ arriving on this input\n             port must use the same QoS parameters for\
    \ all output\n             branches.\n"
- title: 12. Summary of Message Set
  contents:
  - "12. Summary of Message Set\n   The following table gives a summary of the messages\
    \ defined in this\n   version of the specification. It also indicates which messages\
    \ must\n   be supported in a minimal implementation of the protocol. Those\n \
    \  messages marked as \"Required\" must be supported by the switch for an\n  \
    \ implementation to be considered to conform to this specification.\n   (While\
    \ the controller should also implement those messages marked\n   \"Required,\"\
    \ conformance cannot be tested for the controller due to\n   the Master-Slave\
    \ nature of the protocol.)\n       Message Name                Message Type  \
    \  Status\n   Connection Management Messages\n       Add Branch VCC....................16\
    \        Required\n                  VPC....................26\n       Delete\
    \ Tree.......................18\n       Delete All........................20\n\
    \       Delete Branches...................17        Required\n       Move Branch\
    \ VCC...................22\n                   VPC...................27\n   Port\
    \ Management Messages\n       Port Management...................32        Required\n\
    \       Label Range.......................33\n   State and Statistics Messages\n\
    \       Connection Activity...............48\n       Port Statistics...................49\
    \        Required\n       Connection Statistics.............50\n       QoS Class\
    \ Statistics..............51\n       Report Connection State...........52\n  \
    \ Configuration Messages\n       Switch Configuration..............64        Required\n\
    \       Port Configuration................65        Required\n       All Ports\
    \ Configuration...........66        Required\n   Event Messages\n       Port Up...........................80\n\
    \       Port Down.........................81\n       Invalid VPI/VCI...................82\n\
    \       New Port..........................83\n       Dead Port.........................84\n\
    \   Quality of Service Messages\n       QoS Configuration.................96\n\
    \       Scheduler Establishment...........97\n       QoS Class Establishment...........98\n\
    \       QoS Release.......................99\n       QoS Connection Management\
    \ VCC....100\n                                 VPC....101\n   Adjacency Protocol....................10\
    \        Required\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n   [af-tm-0056] ATM Forum Traffic Management Specification 4.0, af-tm-\n\
    \                0056.000, April 1996.\n   [I.361]      \"B-ISDN ATM Layer Specification,\"\
    \ International\n                Telecommunication Union, ITU-T Recommendation\
    \ I.361,\n                Mar. 1993.\n   [I.363]      \"B-ISDN ATM Adaptation\
    \ Layer (AAL) Specification,\"\n                International Telecommunication\
    \ Union, ITU-T\n                Recommendation I.363, Mar. 1993.\n   [IpsilonMIB]\
    \ Ipsilon IP Switch MIB,\n                http://www.ipsilon.com/products/ips.mib\n\
    \   [Partridge]  C. Partridge, \"Gigabit Networking,\" Addison-Wesley,\n     \
    \           1994.\n   [RFC1700]    Reynolds, J., and J. Postel, \"Assigned Numbers,\"\
    \ STD 2,\n                RFC 1700, October 1994.\n   [RFC1987]    Newman, P,\
    \ Edwards, W., hinden, R., Hoffman, E. Ching\n                Liaw, F., Lyon,\
    \ T. and G. Minshall, \"Ipsilon's General\n                Switch Management Protocol\
    \ Specification,\" Version 1.1,\n                RFC 1987, August 1996.\n"
- title: SECURITY CONSIDERATIONS
  contents:
  - "SECURITY CONSIDERATIONS\n   Physical security on the control link connecting\
    \ the controller to\n   the switch is assumed. Security issues are not discussed\
    \ in this\n   document.\n"
- title: AUTHORS' ADDRESSES
  contents:
  - "AUTHORS' ADDRESSES\n   Peter Newman                        Phone: +1 (408) 990\
    \ 2003\n   Nokia                               EMail: pn@ipsilon.com\n   W. L.\
    \ Edwards, Chief Scientist      Phone: +1 (913) 534 5334\n   Sprint          \
    \                    EMail: texas@sprintcorp.com\n   Robert M. Hinden        \
    \            Phone: +1 (408) 990 2004\n   Nokia                              \
    \ EMail: hinden@ipsilon.com\n   Eric Hoffman                        Phone: +1\
    \ (408) 990 2010\n   Nokia                               EMail: hoffman@ipsilon.com\n\
    \   Fong Ching Liaw                     Phone: +1 (408) 873 2688\n   Coppercom\
    \                           EMail: fong@coppercom.com\n   Tom Lyon           \
    \                 Phone: +1 (408) 990 2001\n   Nokia                         \
    \      EMail: pugs@ipsilon.com\n   Greg Minshall                       Phone:\
    \ +1 (650) 237 3164\n   Fiberlane Communications            EMail: minshall@fiberlane.com\n"
- title: 'Nokia (Sunnyvale) is located at:'
  contents:
  - "Nokia (Sunnyvale) is located at:\n   232 Java Drive\n   Sunnyvale, CA 94089\n\
    \   USA\n"
- title: 'Sprint is located at:'
  contents:
  - "Sprint is located at:\n   Sprint\n   Sprint Technology Services - Long Distance\
    \ Division\n   9300 Metcalf Avenue\n   Mailstop KSOPKB0802\n   Overland Park,\
    \ KS 66212-6333\n   USA\n"
- title: 'Fiberlane Communications is located at:'
  contents:
  - "Fiberlane Communications is located at:\n   1399 Charleston Road\n   Mountain\
    \ View, CA 94043\n   USA\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
