- title: __initial_text__
  contents:
  - '       The Session Description Protocol (SDP) Grouping Framework

    '
- title: Abstract
  contents:
  - "Abstract\n   In this specification, we define a framework to group \"m\" lines\
    \ in\n   the Session Description Protocol (SDP) for different purposes.  This\n\
    \   framework uses the \"group\" and \"mid\" SDP attributes, both of which\n \
    \  are defined in this specification.  Additionally, we specify how to\n   use\
    \ the framework for two different purposes: for lip synchronization\n   and for\
    \ receiving a media flow consisting of several media streams on\n   different\
    \ transport addresses.  This document obsoletes RFC 3388.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5888.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  Overview of Operation  . . . . . . . . . . . . . . . .\
    \ . . . .  3\n   4.  Media Stream Identification Attribute  . . . . . . . . .\
    \ . . .  4\n   5.  Group Attribute  . . . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n   6.  Use of \"group\" and \"mid\" . . . . . . . . . . . . . . . .\
    \ . . .  4\n   7.  Lip Synchronization (LS) . . . . . . . . . . . . . . . . .\
    \ . .  5\n     7.1.  Example of LS  . . . . . . . . . . . . . . . . . . . . .\
    \ .  5\n   8.  Flow Identification (FID)  . . . . . . . . . . . . . . . . . .\
    \  6\n     8.1.  SIP and Cellular Access  . . . . . . . . . . . . . . . . .  6\n\
    \     8.2.  DTMF Tones . . . . . . . . . . . . . . . . . . . . . . . .  7\n  \
    \   8.3.  Media Flow Definition  . . . . . . . . . . . . . . . . . .  7\n    \
    \ 8.4.  FID Semantics  . . . . . . . . . . . . . . . . . . . . . .  7\n      \
    \ 8.4.1.  Examples of FID  . . . . . . . . . . . . . . . . . . .  8\n     8.5.\
    \  Scenarios That FID Does Not Cover  . . . . . . . . . . . . 11\n       8.5.1.\
    \  Parallel Encoding Using Different Codecs . . . . . . . 11\n       8.5.2.  Layered\
    \ Encoding . . . . . . . . . . . . . . . . . . . 12\n       8.5.3.  Same IP Address\
    \ and Port Number  . . . . . . . . . . . 12\n   9.  Usage of the \"group\" Attribute\
    \ in SIP  . . . . . . . . . . . . 13\n     9.1.  Mid Value in Answers . . . .\
    \ . . . . . . . . . . . . . . . 13\n       9.1.1.  Example  . . . . . . . . .\
    \ . . . . . . . . . . . . . . 14\n     9.2.  Group Value in Answers . . . . .\
    \ . . . . . . . . . . . . . 15\n       9.2.1.  Example  . . . . . . . . . . .\
    \ . . . . . . . . . . . . 15\n     9.3.  Capability Negotiation . . . . . . .\
    \ . . . . . . . . . . . 16\n       9.3.1.  Example  . . . . . . . . . . . . .\
    \ . . . . . . . . . . 16\n     9.4.  Backward Compatibility . . . . . . . . .\
    \ . . . . . . . . . 17\n       9.4.1.  Offerer Does Not Support \"group\" . .\
    \ . . . . . . . . . 17\n       9.4.2.  Answerer Does Not Support \"group\"  .\
    \ . . . . . . . . . 17\n   10. Changes from RFC 3388  . . . . . . . . . . . .\
    \ . . . . . . . . 18\n   11. Security Considerations  . . . . . . . . . . . .\
    \ . . . . . . . 18\n   12. IANA Considerations  . . . . . . . . . . . . . . .\
    \ . . . . . . 19\n   13. Acknowledgments  . . . . . . . . . . . . . . . . . .\
    \ . . . . . 19\n   14. References . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . 20\n     14.1. Normative References . . . . . . . . . . . . . . . .\
    \ . . . 20\n     14.2. Informative References . . . . . . . . . . . . . . . .\
    \ . . 20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   RFC 3388 [RFC3388] specified a media-line grouping framework\
    \ for SDP\n   [RFC4566].  This specification obsoletes RFC 3388 [RFC3388].\n \
    \  An SDP [RFC4566] session description typically contains one or more\n   media\
    \ lines, which are commonly known as \"m\" lines.  When a session\n   description\
    \ contains more than one \"m\" line, SDP does not provide any\n   means to express\
    \ a particular relationship between two or more of\n   them.  When an application\
    \ receives an SDP session description with\n   more than one \"m\" line, it is\
    \ up to the application to determine what\n   to do with them.  SDP does not carry\
    \ any information about grouping\n   media streams.\n   While in some environments\
    \ this information can be carried out of\n   band, it is necessary to have a mechanism\
    \ in SDP to express how\n   different media streams within a session description\
    \ relate to each\n   other.  The framework defined in this specification is such\
    \ a\n   mechanism.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  Overview of Operation
  contents:
  - "3.  Overview of Operation\n   This section provides a non-normative description\
    \ of how the SDP\n   Grouping Framework defined in this document works.  In a\
    \ given\n   session description, each \"m\" line is identified by a token, which\
    \ is\n   carried in a \"mid\" attribute below the \"m\" line.  The session\n \
    \  description carries session-level \"group\" attributes that group\n   different\
    \ \"m\" lines (identified by their tokens) using different\n   group semantics.\
    \  The semantics of a group describe the purpose for\n   which the \"m\" lines\
    \ are grouped.  For example, the \"group\" line in\n   the session description\
    \ below indicates that the \"m\" lines identified\n   by tokens 1 and 2 (the audio\
    \ and the video \"m\" lines, respectively)\n   are grouped for the purpose of\
    \ lip synchronization (LS).\n          v=0\n          o=Laura 289083124 289083124\
    \ IN IP4 one.example.com\n          c=IN IP4 192.0.2.1\n          t=0 0\n    \
    \      a=group:LS 1 2\n          m=audio 30000 RTP/AVP 0\n          a=mid:1\n\
    \          m=video 30002 RTP/AVP 31\n          a=mid:2\n"
- title: 4.  Media Stream Identification Attribute
  contents:
  - "4.  Media Stream Identification Attribute\n   This document defines the \"media\
    \ stream identification\" media\n   attribute, which is used for identifying media\
    \ streams within a\n   session description.  Its formatting in SDP [RFC4566] is\
    \ described by\n   the following Augmented Backus-Naur Form (ABNF) [RFC5234]:\n\
    \           mid-attribute      = \"a=mid:\" identification-tag\n           identification-tag\
    \ = token\n                                ; token is defined in RFC 4566\n  \
    \ The identification-tag MUST be unique within an SDP session\n   description.\n"
- title: 5.  Group Attribute
  contents:
  - "5.  Group Attribute\n   This document defines the \"group\" session-level attribute,\
    \ which is\n   used for grouping together different media streams.  Its formatting\n\
    \   in SDP is described by the following ABNF [RFC5234]:\n           group-attribute\
    \     = \"a=group:\" semantics\n                                 *(SP identification-tag)\n\
    \           semantics           = \"LS\" / \"FID\" / semantics-extension\n   \
    \        semantics-extension = token\n                                 ; token\
    \ is defined in RFC 4566\n   This document defines two standard semantics: Lip\
    \ Synchronization\n   (LS) and Flow Identification (FID).  Semantics extensions\
    \ follow the\n   Standards Action policy [RFC5226].\n"
- title: 6.  Use of "group" and "mid"
  contents:
  - "6.  Use of \"group\" and \"mid\"\n   All of the \"m\" lines of a session description\
    \ that uses \"group\" MUST\n   be identified with a \"mid\" attribute whether\
    \ they appear in the group\n   line(s) or not.  If a session description contains\
    \ at least one \"m\"\n   line that has no \"mid\" identification, the application\
    \ MUST NOT\n   perform any grouping of media lines.\n   \"a=group\" lines are\
    \ used to group together several \"m\" lines that are\n   identified by their\
    \ \"mid\" attribute. \"a=group\" lines that contain\n   identification-tags that\
    \ do not correspond to any \"m\" line within the\n   session description MUST\
    \ be ignored.  The application acts as if the\n   \"a=group\" line did not exist.\
    \  The behavior of an application\n   receiving an SDP description with grouped\
    \ \"m\" lines is defined by the\n   semantics field in the \"a=group\" line.\n\
    \   There MAY be several \"a=group\" lines in a session description.  The\n  \
    \ \"a=group\" lines of a session description can use the same or\n   different\
    \ semantics.  An \"m\" line identified by its \"mid\" attribute\n   MAY appear\
    \ in more than one \"a=group\" line.\n"
- title: 7.  Lip Synchronization (LS)
  contents:
  - "7.  Lip Synchronization (LS)\n   An application that receives a session description\
    \ that contains \"m\"\n   lines that are grouped together using LS semantics MUST\
    \ synchronize\n   the playout of the corresponding media streams.  Note that LS\n\
    \   semantics apply not only to a video stream that has to be\n   synchronized\
    \ with an audio stream; the playout of two streams of the\n   same type can be\
    \ synchronized as well.\n   For RTP streams, synchronization is typically performed\
    \ using the RTP\n   Control Protocol (RTCP), which provides enough information\
    \ to map\n   time stamps from the different streams into a local absolute time\n\
    \   value.  However, the concept of media stream synchronization MAY also\n  \
    \ apply to media streams that do not make use of RTP.  If this is the\n   case,\
    \ the application MUST recover the original timing relationship\n   between the\
    \ streams using whatever mechanism is available.\n"
- title: 7.1.  Example of LS
  contents:
  - "7.1.  Example of LS\n   The following example shows a session description of\
    \ a conference\n   that is being multicast.  The first media stream (mid:1) contains\
    \ the\n   voice of the speaker who speaks in English.  The second media stream\n\
    \   (mid:2) contains the video component, and the third (mid:3) media\n   stream\
    \ carries the translation to Spanish of what she is saying.  The\n   first and\
    \ second media streams have to be synchronized.\n          v=0\n          o=Laura\
    \ 289083124 289083124 IN IP4 two.example.com\n          c=IN IP4 233.252.0.1/127\n\
    \          t=0 0\n          a=group:LS 1 2\n          m=audio 30000 RTP/AVP 0\n\
    \          a=mid:1\n          m=video 30002 RTP/AVP 31\n          a=mid:2\n  \
    \        m=audio 30004 RTP/AVP 0\n          i=This media stream contains the Spanish\
    \ translation\n          a=mid:3\n   Note that although the third media stream\
    \ is not present in the group\n   line, it still has to contain a \"mid\" attribute\
    \ (mid:3), as stated\n   before.\n"
- title: 8.  Flow Identification (FID)
  contents:
  - "8.  Flow Identification (FID)\n   An \"m\" line in an SDP session description\
    \ defines a media stream.\n   However, SDP does not define what a media stream\
    \ is.  This definition\n   can be found in the Real Time Streaming Protocol (RTSP)\n\
    \   specification.  The RTSP RFC [RFC2326] defines a media stream as \"a\n   single\
    \ media instance, e.g., an audio stream or a video stream as\n   well as a single\
    \ whiteboard or shared application group.  When using\n   RTP, a stream consists\
    \ of all RTP and RTCP packets created by a\n   source within an RTP session\"\
    .\n   This definition assumes that a single audio (or video) stream maps\n   into\
    \ an RTP session.  The RTP RFC [RFC1889] (at present obsoleted by\n   [RFC3550])\
    \ used to define an RTP session as follows: \"For each\n   participant, the session\
    \ is defined by a particular pair of\n   destination transport addresses (one\
    \ network address plus a port pair\n   for RTP and RTCP)\".\n   While the previous\
    \ definitions cover the most common cases, there are\n   situations where a single\
    \ media instance (e.g., an audio stream or a\n   video stream) is sent using more\
    \ than one RTP session.  Two examples\n   (among many others) of this kind of\
    \ situation are cellular systems\n   using the Session Initiation Protocol (SIP;\
    \ [RFC3261]) and systems\n   receiving Dual-Tone Multi-Frequency (DTMF) tones\
    \ on a different host\n   than the voice.\n"
- title: 8.1.  SIP and Cellular Access
  contents:
  - "8.1.  SIP and Cellular Access\n   Systems using a cellular access and SIP as\
    \ a signalling protocol need\n   to receive media over the air.  During a session,\
    \ the media can be\n   encoded using different codecs.  The encoded media has\
    \ to traverse\n   the radio interface.  The radio interface is generally characterized\n\
    \   as being prone to bit errors and associated with relatively high\n   packet\
    \ transfer delays.  In addition, radio interface resources in a\n   cellular environment\
    \ are scarce and thus expensive, which calls for\n   special measures in providing\
    \ a highly efficient transport.  In order\n   to get an appropriate speech quality\
    \ in combination with an efficient\n   transport, precise knowledge of codec properties\
    \ is required so that\n   a proper radio bearer for the RTP session can be configured\
    \ before\n   transferring the media.  These radio bearers are dedicated bearers\n\
    \   per media type (i.e., codec).\n   Cellular systems typically configure different\
    \ radio bearers on\n   different port numbers.  Therefore, incoming media has\
    \ to have\n   different destination port numbers for the different possible codecs\n\
    \   in order to be routed properly to the correct radio bearer.  Thus,\n   this\
    \ is an example in which several RTP sessions are used to carry a\n   single media\
    \ instance (the encoded speech from the sender).\n"
- title: 8.2.  DTMF Tones
  contents:
  - "8.2.  DTMF Tones\n   Some voice sessions include DTMF tones.  Sometimes, the\
    \ voice\n   handling is performed by a different host than the DTMF handling.\
    \  It\n   is common to have an application server in the network gathering DTMF\n\
    \   tones for the user while the user receives the encoded speech on his\n   user\
    \ agent.  In this situation, it is necessary to establish two RTP\n   sessions:\
    \ one for the voice and the other for the DTMF tones.  Both\n   RTP sessions are\
    \ logically part of the same media instance.\n"
- title: 8.3.  Media Flow Definition
  contents:
  - "8.3.  Media Flow Definition\n   The previous examples show that the definition\
    \ of a media stream in\n   [RFC2326] does not cover some scenarios.  It cannot\
    \ be assumed that a\n   single media instance maps into a single RTP session.\
    \  Therefore, we\n   introduce the definition of a media flow:\n      A media\
    \ flow consists of a single media instance, e.g., an audio\n      stream or a\
    \ video stream as well as a single whiteboard or shared\n      application group.\
    \  When using RTP, a media flow comprises one or\n      more RTP sessions.\n"
- title: 8.4.  FID Semantics
  contents:
  - "8.4.  FID Semantics\n   Several \"m\" lines grouped together using FID semantics\
    \ form a media\n   flow.  A media agent handling a media flow that comprises several\
    \ \"m\"\n   lines MUST send a copy of the media to every \"m\" line that is part\
    \ of\n   the flow as long as the codecs and the direction attribute present in\n\
    \   a particular \"m\" line allow it.\n   It is assumed that the application uses\
    \ only one codec at a time to\n   encode the media produced.  This codec MAY change\
    \ dynamically during\n   the session, but at any particular moment, only one codec\
    \ is in use.\n   The application encodes the media using the current codec and\
    \ checks,\n   one by one, all of the \"m\" lines that are part of the flow.  If\
    \ a\n   particular \"m\" line contains the codec being used and the direction\n\
    \   attribute is \"sendonly\" or \"sendrecv\", a copy of the encoded media is\n\
    \   sent to the address/port specified in that particular media stream.\n   If\
    \ either the \"m\" line does not contain the codec being used or the\n   direction\
    \ attribute is neither \"sendonly\" nor \"sendrecv\", nothing is\n   sent over\
    \ this media stream.\n   The application typically ends up sending media to different\n\
    \   destinations (IP address/port number) depending on the codec used at\n   any\
    \ moment.\n"
- title: 8.4.1.  Examples of FID
  contents:
  - "8.4.1.  Examples of FID\n   The session description below might be sent by a\
    \ SIP user agent using\n   a cellular access.  The user agent supports GSM (Global\
    \ System for\n   Mobile communications) on port 30000 and AMR (Adaptive Multi-Rate)\
    \ on\n   port 30002.  When the remote party sends GSM, it will send RTP\n   packets\
    \ to port number 30000.  When AMR is the codec chosen, packets\n   will be sent\
    \ to port 30002.  Note that the remote party can switch\n   between both codecs\
    \ dynamically in the middle of the session.\n   However, in this example, only\
    \ one media stream at a time carries\n   voice.  The other remains \"muted\" while\
    \ its corresponding codec is\n   not in use.\n            v=0\n            o=Laura\
    \ 289083124 289083124 IN IP4 three.example.com\n            c=IN IP4 192.0.2.1\n\
    \            t=0 0\n            a=group:FID 1 2\n            m=audio 30000 RTP/AVP\
    \ 3\n            a=rtpmap:3 GSM/8000\n            a=mid:1\n            m=audio\
    \ 30002 RTP/AVP 97\n            a=rtpmap:97 AMR/8000\n            a=fmtp:97 mode-set=0,2,5,7;\
    \ mode-change-period=2;\n          mode-change-neighbor; maxframes=1\n       \
    \     a=mid:2\n   (The linebreak in the fmtp line accommodates RFC formatting\n\
    \   restrictions; SDP does not have continuation lines.)\n   In the previous example,\
    \ a system receives media on the same IP\n   address on different port numbers.\
    \  The following example shows how a\n   system can receive different codecs on\
    \ different IP addresses.\n           v=0\n           o=Laura 289083124 289083124\
    \ IN IP4 four.example.com\n           c=IN IP4 192.0.2.1\n           t=0 0\n \
    \          a=group:FID 1 2\n           m=audio 20000 RTP/AVP 0\n           c=IN\
    \ IP4 192.0.2.2\n           a=rtpmap:0 PCMU/8000\n           a=mid:1\n       \
    \    m=audio 30002 RTP/AVP 97\n           a=rtpmap:97 AMR/8000\n           a=fmtp:97\
    \ mode-set=0,2,5,7; mode-change-period=2;\n         mode-change-neighbor; maxframes=1\n\
    \           a=mid:2\n   (The linebreak in the fmtp line accommodates RFC formatting\n\
    \   restrictions; SDP does not have continuation lines.)\n   The cellular terminal\
    \ in this example only supports the AMR codec.\n   However, many current IP phones\
    \ only support PCM (Pulse-Code\n   Modulation; payload 0).  In order to be able\
    \ to interoperate with\n   them, the cellular terminal uses a transcoder whose\
    \ IP address is\n   192.0.2.2.  The cellular terminal includes the transcoder\
    \ IP address\n   in its SDP description to provide support for PCM.  Remote systems\n\
    \   will send AMR directly to the terminal, but PCM will be sent to the\n   transcoder.\
    \  The transcoder will be configured (using whatever method\n   is preferred)\
    \ to convert the incoming PCM audio to AMR and send it to\n   the terminal.\n\
    \   The next example shows how the \"group\" attribute used with FID\n   semantics\
    \ can indicate the use of two different codecs in the two\n   directions of a\
    \ bidirectional media stream.\n          v=0\n          o=Laura 289083124 289083124\
    \ IN IP4 five.example.com\n          c=IN IP4 192.0.2.1\n          t=0 0\n   \
    \       a=group:FID 1 2\n          m=audio 30000 RTP/AVP 0\n          a=mid:1\n\
    \          m=audio 30002 RTP/AVP 8\n          a=recvonly\n          a=mid:2\n\
    \   A user agent that receives the SDP description above knows that, at a\n  \
    \ certain moment, it can send either PCM u-law to port number 30000 or\n   PCM\
    \ A-law to port number 30002.  However, the media agent also knows\n   that the\
    \ other end will only send PCM u-law (payload 0).\n   The following example shows\
    \ a session description with different \"m\"\n   lines grouped together using\
    \ FID semantics that contain the same\n   codec.\n          v=0\n          o=Laura\
    \ 289083124 289083124 IN IP4 six.example.com\n          c=IN IP4 192.0.2.1\n \
    \         t=0 0\n          a=group:FID 1 2 3\n          m=audio 30000 RTP/AVP\
    \ 0\n          a=mid:1\n          m=audio 30002 RTP/AVP 8\n          a=mid:2\n\
    \          m=audio 20000 RTP/AVP 0 8\n          c=IN IP4 192.0.2.2\n         \
    \ a=recvonly\n          a=mid:3\n   At a particular point in time, if the media\
    \ agent receiving the SDP\n   message above is sending PCM u-law (payload 0),\
    \ it sends RTP packets\n   to 192.0.2.1 on port 30000 and to 192.0.2.2 on port\
    \ 20000 (first and\n   third \"m\" lines).  If it is sending PCM A-law (payload\
    \ 8), it sends\n   RTP packets to 192.0.2.1 on port 30002 and to 192.0.2.2 on\
    \ port 20000\n   (second and third \"m\" lines).\n   The system that generated\
    \ the SDP description above supports PCM\n   u-law on port 30000 and PCM A-law\
    \ on port 30002.  Besides, it uses an\n   application server that records the\
    \ conversation and whose IP address\n   is 192.0.2.2.  The application server\
    \ does not need to understand the\n   media content, so it always receives a copy\
    \ of the media stream,\n   regardless of the codec and payload type that is being\
    \ used.  That is\n   why the application server always receives a copy of the\
    \ audio stream\n   regardless of the codec being used at any given moment (it\
    \ actually\n   performs an RTP dump, so it can effectively receive any codec).\n\
    \   Remember that if several \"m\" lines that are grouped together using\n   the\
    \ FID semantics contain the same codec, the media agent MUST send\n   copies of\
    \ the same media stream as several RTP sessions at the same\n   time.\n   The\
    \ last example in this section deals with DTMF tones.  DTMF tones\n   can be transmitted\
    \ using a regular voice codec or can be transmitted\n   as telephony events. \
    \ The RTP payload for DTMF tones treated as\n   telephone events is described\
    \ in [RFC4733].  Below, there is an\n   example of an SDP session description\
    \ using FID semantics and this\n   payload type.\n          v=0\n          o=Laura\
    \ 289083124 289083124 IN IP4 seven.example.com\n          c=IN IP4 192.0.2.1\n\
    \          t=0 0\n          a=group:FID 1 2\n          m=audio 30000 RTP/AVP 0\n\
    \          a=mid:1\n          m=audio 20000 RTP/AVP 97\n          c=IN IP4 192.0.2.2\n\
    \          a=rtpmap:97 telephone-events\n          a=mid:2\n   The remote party\
    \ would send PCM encoded voice (payload 0) to\n   192.0.2.1 and DTMF tones encoded\
    \ as telephony events to 192.0.2.2.\n   Note that only voice or DTMF is sent at\
    \ a particular point in time.\n   When DTMF tones are sent, the first media stream\
    \ does not carry any\n   data and, when voice is sent, there is no data in the\
    \ second media\n   stream.  FID semantics provide different destinations for alternative\n\
    \   codecs.\n"
- title: 8.5.  Scenarios That FID Does Not Cover
  contents:
  - "8.5.  Scenarios That FID Does Not Cover\n   It is worthwhile mentioning some\
    \ scenarios where the \"group\"\n   attribute using existing semantics (particularly\
    \ FID) might seem to\n   be applicable but is not.\n"
- title: 8.5.1.  Parallel Encoding Using Different Codecs
  contents:
  - "8.5.1.  Parallel Encoding Using Different Codecs\n   FID semantics are useful\
    \ when the application only uses one codec at\n   a time.  An application that\
    \ encodes the same media using different\n   codecs simultaneously MUST NOT use\
    \ FID to group those media lines.\n   Some systems that handle DTMF tones are\
    \ a typical example of parallel\n   encoding using different codecs.  Some systems\
    \ implement the RTP\n   payload defined in RFC 4733 [RFC4733], but when they send\
    \ DTMF tones,\n   they do not mute the voice channel.  Therefore, in effect they\
    \ are\n   sending two copies of the same DTMF tone: encoded as voice and\n   encoded\
    \ as a telephony event.  When the receiver gets both copies, it\n   typically\
    \ uses the telephony event rather than the tone encoded as\n   voice.  FID semantics\
    \ MUST NOT be used in this context to group both\n   media streams, since such\
    \ a system is not using alternative codecs\n   but rather different parallel encodings\
    \ for the same information.\n"
- title: 8.5.2.  Layered Encoding
  contents:
  - "8.5.2.  Layered Encoding\n   Layered encoding schemes encode media in different\
    \ layers.  The\n   quality of the media stream at the receiver varies depending\
    \ on the\n   number of layers received.  SDP provides a means to group together\n\
    \   contiguous multicast addresses that transport different layers.  The\n   \"\
    c\" line below:\n          c=IN IP4 233.252.0.1/127/3\n   is equivalent to the\
    \ following three \"c\" lines:\n          c=IN IP4 233.252.0.1/127\n         \
    \ c=IN IP4 233.252.0.2/127\n          c=IN IP4 233.252.0.3/127\n   FID MUST NOT\
    \ be used to group \"m\" lines that do not represent the\n   same information.\
    \  Therefore, FID MUST NOT be used to group \"m\" lines\n   that contain the different\
    \ layers of layered encoding schemes.\n   Besides, we do not define new group\
    \ semantics to provide a more\n   flexible way of grouping different layers, because\
    \ the already\n   existing SDP mechanism covers the most useful scenarios.  Since\
    \ the\n   existing SDP mechanism already covers the most useful scenarios, we\n\
    \   do not define a new group semantics to define a more flexible way of\n   grouping\
    \ different layers.\n"
- title: 8.5.3.  Same IP Address and Port Number
  contents:
  - "8.5.3.  Same IP Address and Port Number\n   If media streams using several different\
    \ codecs have to be sent to\n   the same IP address and port, the traditional\
    \ SDP syntax of listing\n   several codecs in the same \"m\" line MUST be used.\
    \  FID MUST NOT be\n   used to group \"m\" lines with the same IP address/port.\
    \  Therefore, an\n   SDP description like the one below MUST NOT be generated.\n\
    \          v=0\n          o=Laura 289083124 289083124 IN IP4 eight.example.com\n\
    \          c=IN IP4 192.0.2.1\n          t=0 0\n          a=group:FID 1 2\n  \
    \        m=audio 30000 RTP/AVP 0\n          a=mid:1\n          m=audio 30000 RTP/AVP\
    \ 8\n          a=mid:2\n   The correct SDP description for the session above would\
    \ be the\n   following one:\n          v=0\n          o=Laura 289083124 289083124\
    \ IN IP4 nine.example.com\n          c=IN IP4 192.0.2.1\n          t=0 0\n   \
    \       m=audio 30000 RTP/AVP 0 8\n   If two \"m\" lines are grouped using FID,\
    \ they MUST differ in their\n   transport addresses (i.e., IP address plus port).\n"
- title: 9.  Usage of the "group" Attribute in SIP
  contents:
  - "9.  Usage of the \"group\" Attribute in SIP\n   SDP descriptions are used by\
    \ several different protocols, SIP among\n   them.  We include a section about\
    \ SIP, because the \"group\" attribute\n   will most likely be used mainly by\
    \ SIP systems.\n   SIP [RFC3261] is an application layer protocol for establishing,\n\
    \   terminating, and modifying multimedia sessions.  SIP carries session\n   descriptions\
    \ in the bodies of the SIP messages but is independent\n   from the protocol used\
    \ for describing sessions.  SDP [RFC4566] is one\n   of the protocols that can\
    \ be used for this purpose.\n   At session establishment, SIP provides a three-way\
    \ handshake\n   (INVITE-200 OK-ACK) between end systems.  However, just two of\
    \ these\n   three messages carry SDP, as described in [RFC3264].\n"
- title: 9.1.  Mid Value in Answers
  contents:
  - "9.1.  Mid Value in Answers\n   The \"mid\" attribute is an identifier for a particular\
    \ media stream.\n   Therefore, the \"mid\" value in the offer MUST be the same\
    \ as the \"mid\"\n   value in the answer.  Besides, subsequent offers (e.g., in\
    \ a\n   re-INVITE) SHOULD use the same \"mid\" value for the already existing\n\
    \   media streams.\n   [RFC3264] describes the usage of SDP in text of SIP.  The\
    \ offerer and\n   the answerer align their media description so that the nth media\n\
    \   stream (\"m=\" line) in the offerer's session description corresponds\n  \
    \ to the nth media stream in the answerer's description.\n   The presence of the\
    \ \"group\" attribute in an SDP session description\n   does not modify this behavior.\n\
    \   Since the \"mid\" attribute provides a means to label \"m\" lines, it\n  \
    \ would be possible to perform media alignment using \"mid\" labels\n   rather\
    \ than matching nth \"m\" lines.  However, this would not bring\n   any gain and\
    \ would add complexity to implementations.  Therefore, SIP\n   systems MUST perform\
    \ media alignment matching nth lines regardless of\n   the presence of the \"\
    group\" or \"mid\" attributes.\n   If a media stream that contained a particular\
    \ \"mid\" identifier in the\n   offer contains a different identifier in the answer,\
    \ the application\n   ignores all of the \"mid\" and \"group\" lines that might\
    \ appear in the\n   session description.  The following example illustrates this\n\
    \   scenario.\n"
- title: 9.1.1.  Example
  contents:
  - "9.1.1.  Example\n   Two SIP entities exchange SDPs during session establishment.\
    \  The\n   INVITE contains the SDP description below:\n          v=0\n       \
    \   o=Laura 289083124 289083124 IN IP4 ten.example.com\n          c=IN IP4 192.0.2.1\n\
    \          t=0 0\n          a=group:FID 1 2\n          m=audio 30000 RTP/AVP 0\
    \ 8\n          a=mid:1\n          m=audio 30002 RTP/AVP 0 8\n          a=mid:2\n\
    \   The 200 OK response contains the following SDP description:\n          v=0\n\
    \          o=Bob 289083122 289083122 IN IP4 eleven.example.com\n          c=IN\
    \ IP4 192.0.2.3\n          t=0 0\n          a=group:FID 1 2\n          m=audio\
    \ 25000 RTP/AVP 0 8\n          a=mid:2\n          m=audio 25002 RTP/AVP 0 8\n\
    \          a=mid:1\n   Since alignment of \"m\" lines is performed based on matching\
    \ of nth\n   lines, the first stream had \"mid:1\" in the INVITE and \"mid:2\"\
    \ in the\n   200 OK.  Therefore, the application ignores every \"mid\" and \"\
    group\"\n   line contained in the SDP description.\n   A well-behaved SIP user\
    \ agent would have returned the SDP description\n   below in the 200 OK response.\n\
    \          v=0\n          o=Bob 289083122 289083122 IN IP4 twelve.example.com\n\
    \          c=IN IP4 192.0.2.3\n          t=0 0\n          a=group:FID 1 2\n  \
    \        m=audio 25002 RTP/AVP 0 8\n          a=mid:1\n          m=audio 25000\
    \ RTP/AVP 0 8\n          a=mid:2\n"
- title: 9.2.  Group Value in Answers
  contents:
  - "9.2.  Group Value in Answers\n   A SIP entity that receives an offer that contains\
    \ an \"a=group\" line\n   with semantics that it does not understand MUST return\
    \ an answer\n   without the \"group\" line.  Note that, as described in the previous\n\
    \   section, the \"mid\" lines MUST still be present in the answer.\n   A SIP\
    \ entity that receives an offer that contains an \"a=group\" line\n   with semantics\
    \ that are understood MUST return an answer that\n   contains an \"a=group\" line\
    \ with the same semantics.  The\n   identification-tags contained in this \"a=group\"\
    \ line MUST be the same\n   as those received in the offer, or a subset of them\
    \ (zero\n   identification-tags is a valid subset).  When the identification-tags\n\
    \   in the answer are a subset, the \"group\" value to be used in the\n   session\
    \ MUST be the one present in the answer.\n   SIP entities refuse media streams\
    \ by setting the port to zero in the\n   corresponding \"m\" line. \"a=group\"\
    \ lines MUST NOT contain\n   identification-tags that correspond to \"m\" lines\
    \ with the port set to\n   zero.\n   Note that grouping of \"m\" lines MUST always\
    \ be requested by the\n   offerer, but never by the answerer.  Since SIP provides\
    \ a two-way SDP\n   exchange, an answerer that requested grouping would not know\
    \ whether\n   the \"group\" attribute was accepted by the offerer or not.  An\n\
    \   answerer that wants to group media lines issues another offer after\n   having\
    \ responded to the first one (in a re-INVITE, for instance).\n"
- title: 9.2.1.  Example
  contents:
  - "9.2.1.  Example\n   The example below shows how the callee refuses a media stream\
    \ offered\n   by the caller by setting its port number to zero.  The \"mid\" value\n\
    \   corresponding to that media stream is removed from the \"group\" value\n \
    \  in the answer.\n   SDP description in the INVITE from caller to callee:\n \
    \         v=0\n          o=Laura 289083124 289083124 IN IP4 thirteen.example.com\n\
    \          c=IN IP4 192.0.2.1\n          t=0 0\n          a=group:FID 1 2 3\n\
    \          m=audio 30000 RTP/AVP 0\n          a=mid:1\n          m=audio 30002\
    \ RTP/AVP 8\n          a=mid:2\n          m=audio 30004 RTP/AVP 3\n          a=mid:3\n\
    \   SDP description in the INVITE from callee to caller:\n          v=0\n    \
    \      o=Bob 289083125 289083125 IN IP4 fourteen.example.com\n          c=IN IP4\
    \ 192.0.2.3\n          t=0 0\n          a=group:FID 1 3\n          m=audio 20000\
    \ RTP/AVP 0\n          a=mid:1\n          m=audio 0 RTP/AVP 8\n          a=mid:2\n\
    \          m=audio 20002 RTP/AVP 3\n          a=mid:3\n"
- title: 9.3.  Capability Negotiation
  contents:
  - "9.3.  Capability Negotiation\n   A client that understands \"group\" and \"mid\"\
    , but does not want to use\n   these SDP features in a particular session, may\
    \ still want to\n   indicate that it supports these features.  To indicate this\
    \ support,\n   a client can add an \"a=3Dgroup\" line with no identification-tags\
    \ for\n   every semantics value it understands.\n   If a server receives an offer\
    \ that contains empty \"a=group\" lines, it\n   SHOULD add its capabilities also\
    \ in the form of empty \"a=group\" lines\n   to its answer.\n"
- title: 9.3.1.  Example
  contents:
  - "9.3.1.  Example\n   A system that supports both LS and FID semantics but does\
    \ not want to\n   group any media stream for this particular session generates\
    \ the\n   following SDP description:\n          v=0\n          o=Bob 289083125\
    \ 289083125 IN IP4 fifteen.example.com\n          c=IN IP4 192.0.2.3\n       \
    \   t=0 0\n          a=group:LS\n          a=group:FID\n          m=audio 20000\
    \ RTP/AVP 0 8\n   The server that receives that offer supports FID but not LS.\
    \  It\n   responds with the SDP description below:\n          v=0\n          o=Laura\
    \ 289083124 289083124 IN IP4 sixteen.example.com\n          c=IN IP4 192.0.2.1\n\
    \          t=0 0\n          a=group:FID\n          m=audio 30000 RTP/AVP 0\n"
- title: 9.4.  Backward Compatibility
  contents:
  - "9.4.  Backward Compatibility\n   This document does not define any SIP \"Require\"\
    \ header field.\n   Therefore, if one of the SIP user agents does not understand\
    \ the\n   \"group\" attribute, the standard SDP fall-back mechanism MUST be used,\n\
    \   namely, attributes that are not understood are simply ignored.\n"
- title: 9.4.1.  Offerer Does Not Support "group"
  contents:
  - "9.4.1.  Offerer Does Not Support \"group\"\n   This situation does not represent\
    \ a problem, because grouping\n   requests are always performed by offerers and\
    \ not by answerers.  If\n   the offerer does not support \"group\", this attribute\
    \ will simply not\n   be used.\n"
- title: 9.4.2.  Answerer Does Not Support "group"
  contents:
  - "9.4.2.  Answerer Does Not Support \"group\"\n   The answerer will ignore the\
    \ \"group\" attribute since it does not\n   understand it and will also ignore\
    \ the \"mid\" attribute.  For LS\n   semantics, the answerer might decide to perform,\
    \ or not to perform,\n   synchronization between media streams.\n   For FID semantics,\
    \ the answerer will consider the session to consist\n   of several media streams.\n\
    \   Different implementations will behave in different ways.\n   In the case of\
    \ audio and different \"m\" lines for different codecs, an\n   implementation\
    \ might decide to act as a mixer with the different\n   incoming RTP sessions,\
    \ which is the correct behavior.\n   An implementation might also decide to refuse\
    \ the request (e.g., 488\n   Not Acceptable Here, or 606 Not Acceptable), because\
    \ it contains\n   several \"m\" lines.  In this case, the server does not support\
    \ the\n   type of session that the caller wanted to establish.  In case the\n\
    \   client is willing to establish a simpler session anyway, the client\n   can\
    \ re-try the request without the \"group\" attribute and with only\n   one \"\
    m\" line per flow.\n"
- title: 10.  Changes from RFC 3388
  contents:
  - "10.  Changes from RFC 3388\n   Section 3 (Overview of Operation) has been added\
    \ for clarity.  The\n   AMR and GSM acronyms are now expanded on their first use.\
    \  The\n   examples now use IP addresses in the range suitable for examples.\n\
    \   The grouping mechanism is now defined as an extensible framework.\n   Earlier,\
    \ RFC 3388 [RFC3388] used to discourage extensions to this\n   mechanism in favor\
    \ of using new session description protocols.\n   Given a semantics value, RFC\
    \ 3388 [RFC3388] used to restrict \"m\" line\n   identifiers to only appear in\
    \ a single group using that semantics.\n   That restriction has been lifted in\
    \ this specification.  From\n   conversations with implementers, existing (i.e.,\
    \ legacy)\n   implementations enforce this restriction on a per-semantics basis.\n\
    \   That is, they only enforce this restriction for supported semantics.\n   Because\
    \ of the nature of existing semantics, implementations will\n   only use a single\
    \ \"m\" line identifier across groups using a given\n   semantics even after the\
    \ restriction has been lifted by this\n   specification.  Consequently, the lifting\
    \ of this restriction will\n   not cause backward-compatibility problems, because\
    \ implementations\n   supporting new semantics will be updated to not enforce\
    \ this\n   restriction at the same time as they are updated to support the new\n\
    \   semantics.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   Using the \"group\" parameter with FID semantics,\
    \ an entity that\n   managed to modify the session descriptions exchanged between\
    \ the\n   participants to establish a multimedia session could force the\n   participants\
    \ to send a copy of the media to any destination of its\n   choosing.\n   Integrity\
    \ mechanisms provided by protocols used to exchange session\n   descriptions and\
    \ media encryption can be used to prevent this attack.\n   In SIP, Secure/Multipurpose\
    \ Internet Mail Extensions (S/MIME)\n   [RFC5750] and Transport Layer Security\
    \ (TLS) [RFC5246] can be used to\n   protect session description exchanges in\
    \ an end-to-end and a hop-by-\n   hop fashion, respectively.\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   This document defines two SDP attributes: \"mid\"\
    \ and \"group\".\n   The \"mid\" attribute is used to identify media streams within\
    \ a\n   session description, and its format is defined in Section 4.\n   The \"\
    group\" attribute is used for grouping together different media\n   streams, and\
    \ its format is defined in Section 5.\n   This document defines a framework to\
    \ group media lines in SDP using\n   different semantics.  Semantics values to\
    \ be used with this framework\n   are registered by the IANA following the Standards\
    \ Action policy\n   [RFC5226].\n   The IANA Considerations section of the RFC\
    \ MUST include the following\n   information, which appears in the IANA registry\
    \ along with the RFC\n   number of the publication.\n   o  A brief description\
    \ of the semantics.\n   o  Token to be used within the \"group\" attribute.  This\
    \ token may be\n      of any length, but SHOULD be no more than four characters\
    \ long.\n   o  Reference to a standards track RFC.\n   The following are the current\
    \ entries in the registry:\n      Semantics                          Token  Reference\n\
    \      ---------------------------------  -----  -----------\n      Lip Synchronization\
    \                 LS     [RFC5888]\n      Flow Identification                \
    \ FID    [RFC5888]\n      Single Reservation Flow             SRF    [RFC3524]\n\
    \      Alternative Network Address Types   ANAT   [RFC4091]\n      Forward Error\
    \ Correction            FEC    [RFC4756]\n      Decoding Dependency          \
    \       DDP    [RFC5583]\n"
- title: 13.  Acknowledgments
  contents:
  - "13.  Acknowledgments\n   Goran Eriksson and Jan Holler were coauthors of RFC\
    \ 3388 [RFC3388].\n"
- title: 14.  References
  contents:
  - '14.  References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n\
    \              A., Peterson, J., Sparks, R., Handley, M., and E.\n           \
    \   Schooler, \"SIP: Session Initiation Protocol\", RFC 3261,\n              June\
    \ 2002.\n   [RFC3264]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n\
    \              with Session Description Protocol (SDP)\", RFC 3264,\n        \
    \      June 2002.\n   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"\
    SDP: Session\n              Description Protocol\", RFC 4566, July 2006.\n   [RFC5226]\
    \  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA\
    \ Considerations Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n\
    \   [RFC5234]  Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n      \
    \        Specifications: ABNF\", STD 68, RFC 5234, January 2008.\n   [RFC5246]\
    \  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n              (TLS)\
    \ Protocol Version 1.2\", RFC 5246, August 2008.\n   [RFC5750]  Ramsdell, B. and\
    \ S. Turner, \"Secure/Multipurpose Internet\n              Mail Extensions (S/MIME)\
    \ Version 3.2 Certificate\n              Handling\", RFC 5750, January 2010.\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [RFC1889]  Schulzrinne, H., Casner, S., Frederick,\
    \ R., and V.\n              Jacobson, \"RTP: A Transport Protocol for Real-Time\n\
    \              Applications\", RFC 1889, January 1996.\n   [RFC2326]  Schulzrinne,\
    \ H., Rao, A., and R. Lanphier, \"Real Time\n              Streaming Protocol\
    \ (RTSP)\", RFC 2326, April 1998.\n   [RFC3388]  Camarillo, G., Eriksson, G.,\
    \ Holler, J., and H.\n              Schulzrinne, \"Grouping of Media Lines in\
    \ the Session\n              Description Protocol (SDP)\", RFC 3388, December\
    \ 2002.\n   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.\n  \
    \            Jacobson, \"RTP: A Transport Protocol for Real-Time\n           \
    \   Applications\", STD 64, RFC 3550, July 2003.\n   [RFC4733]  Schulzrinne, H.\
    \ and T. Taylor, \"RTP Payload for DTMF\n              Digits, Telephony Tones,\
    \ and Telephony Signals\", RFC 4733,\n              December 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Gonzalo Camarillo\n   Ericsson\n   Hirsalantie 11\n  \
    \ Jorvas  02420\n   FINLAND\n   EMail: Gonzalo.Camarillo@ericsson.com\n   Henning\
    \ Schulzrinne\n   Columbia University\n   1214 Amsterdam Avenue\n   New York,\
    \ NY  10027\n   USA\n   EMail: schulzrinne@cs.columbia.edu\n"
