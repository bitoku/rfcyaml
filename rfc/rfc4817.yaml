- title: __initial_text__
  contents:
  - '    Encapsulation of MPLS over Layer 2 Tunneling Protocol Version 3

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   The Layer 2 Tunneling Protocol, Version 3 (L2TPv3) defines a protocol\n\
    \   for tunneling a variety of payload types over IP networks.  This\n   document\
    \ defines how to carry an MPLS label stack and its payload\n   over the L2TPv3\
    \ data encapsulation.  This enables an application that\n   traditionally requires\
    \ an MPLS-enabled core network, to utilize an\n   L2TPv3 encapsulation over an\
    \ IP network instead.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Specification of Requirements ..............................2\n  \
    \ 2. MPLS over L2TPv3 Encoding .......................................2\n   3.\
    \ Assigning the L2TPv3 Session ID and Cookie ......................4\n   4. Applicability\
    \ ...................................................4\n   5. Congestion Considerations\
    \ .......................................6\n   6. Security Considerations .........................................6\n\
    \      6.1. In the Absence of IPsec ....................................7\n  \
    \    6.2. Context Validation .........................................7\n    \
    \  6.3. Securing the Tunnel with IPsec .............................8\n   7. Acknowledgements\
    \ ................................................9\n   8. References .....................................................10\n\
    \      8.1. Normative References ......................................10\n  \
    \    8.2. Informative References ....................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines how to encapsulate an MPLS label stack\
    \ and its\n   payload inside the L2TPv3 tunnel payload.  After defining the MPLS\n\
    \   over L2TPv3 encapsulation procedure, other MPLS over IP encapsulation\n  \
    \ options, including IP, Generic Routing Encapsulation (GRE), and IPsec\n   are\
    \ discussed in context with MPLS over L2TPv3 in an Applicability\n   section.\
    \  This document only describes encapsulation and does not\n   concern itself\
    \ with all possible MPLS-based applications that may be\n   enabled over L2TPv3.\n"
- title: 1.1.  Specification of Requirements
  contents:
  - "1.1.  Specification of Requirements\n   In this document, several words are used\
    \ to signify the requirements\n   of the specification.  These words are often\
    \ capitalized.  The key\n   words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\", \"SHOULD\",\n   \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this document\n   are to be interpreted as described in [RFC2119].\n"
- title: 2.  MPLS over L2TPv3 Encoding
  contents:
  - "2.  MPLS over L2TPv3 Encoding\n   MPLS over L2TPv3 allows tunneling of an MPLS\
    \ stack [RFC3032] and its\n   payload over an IP network, utilizing the L2TPv3\
    \ encapsulation\n   defined in [RFC3931].  The MPLS Label Stack and payload are\
    \ carried\n   in their entirety following IP (either IPv4 or IPv6) and L2TPv3\n\
    \   headers.\n                          +-+-+-+-+-+-+-+-+-+-+\n              \
    \            |        IP         |\n                          +-+-+-+-+-+-+-+-+-+-+\n\
    \                          |      L2TPv3       |\n                          +-+-+-+-+-+-+-+-+-+-+\n\
    \                          | MPLS Label Stack  |\n                          +-+-+-+-+-+-+-+-+-+-+\n\
    \                          |    MPLS Payload   |\n                          +-+-+-+-+-+-+-+-+-+-+\n\
    \                 Figure 2.1 MPLS Packet over L2TPv3/IP\n   The L2TPv3 encapsulation\
    \ carrying a single MPLS label stack entry is\n   as follows:\n  0           \
    \        1                   2                   3\n  0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \ |                          Session ID                           |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \ |               Cookie (optional, maximum 64 bits)...\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                               ...                               |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \ Label\n |                Label                  | Exp |S|       TTL     | Stack\n\
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ Entry\n  \
    \             Figure 2.2 MPLS over L2TPv3 encapsulation\n   When encapsulating\
    \ MPLS over L2TPv3, the L2TPv3 L2-Specific Sublayer\n   MAY be present.  It is\
    \ generally not present; hence, it is not\n   included in Figure 2.2.  The L2TPv3\
    \ Session ID MUST be present.  The\n   Cookie MAY be present.\n   Session ID\n\
    \      The L2TPv3 Session ID is a 32-bit identifier field locally\n      selected\
    \ as a lookup key for the context of an L2TP Session.  An\n      L2TP Session\
    \ contains necessary context for processing a received\n      L2TP packet.  At\
    \ a minimum, such context contains whether the\n      Cookie (see description\
    \ below) is present, the value it was\n      assigned, the presence and type of\
    \ an L2TPv3 L2-Specific Sublayer,\n      as well as what type of tunneled encapsulation\
    \ follows (i.e.,\n      Frame Relay, Ethernet, MPLS, etc.)\n   Cookie\n      The\
    \ L2TPv3 Cookie field contains a variable-length (maximum 64\n      bits), randomly\
    \ assigned value.  It is intended to provide an\n      additional level of guarantee\
    \ that a data packet has been directed\n      to the proper L2TP session by the\
    \ Session ID.  While the Session\n      ID may be encoded and assigned any value\
    \ (perhaps optimizing for\n      local lookup capabilities, redirection in a distributed\
    \ forwarding\n      architecture, etc.), the Cookie MUST be selected as a\n  \
    \    cryptographically random value [RFC4086], with the added\n      restriction\
    \ that it not be the same as a recently used value for a\n      given Session\
    \ ID.  A well-chosen Cookie will prevent inadvertent\n      misdirection of a\
    \ stray packet containing a recently reused\n      Session ID, a Session ID that\
    \ is subject to packet corruption, and\n      protection against some specific\
    \ malicious packet insertion\n      attacks, as described in more detail in Section\
    \ 4 of this\n      document.\n   Label Stack Entry\n      An MPLS label stack\
    \ entry as defined in [RFC3032].\n   The optional L2-Specific Sublayer (defined\
    \ in [RFC3931]) is generally\n   not present for MPLS over L2TPv3.\n   Generic\
    \ IP encapsulation procedures, such as fragmentation and MTU\n   considerations,\
    \ handling of Time to Live (TTL), EXP, and\n   Differentiated Services Code Point\
    \ (DSCP) bits, etc. are the same as\n   the \"Common Procedures\" for IP encapsulation\
    \ of MPLS defined in\n   Section 5 of [RFC4023] and are not reiterated here.\n"
- title: 3.  Assigning the L2TPv3 Session ID and Cookie
  contents:
  - "3.  Assigning the L2TPv3 Session ID and Cookie\n   Much like an MPLS label, the\
    \ L2TPv3 Session ID and Cookie must be\n   selected and exchanged between participating\
    \ nodes before L2TPv3 can\n   operate.  These values may be configured manually,\
    \ or distributed via\n   a signaling protocol.  This document concerns itself\
    \ only with the\n   encapsulation of MPLS over L2TPv3; thus, the particular method\
    \ of\n   assigning the Session ID and Cookie (if present) is out of scope.\n"
- title: 4.  Applicability
  contents:
  - "4.  Applicability\n   The methods defined in [RFC4023], [MPLS-IPSEC], and this\
    \ document all\n   describe methods for carrying MPLS over an IP network.  Cases\
    \ where\n   MPLS over L2TPv3 is comparable to other alternatives are discussed\
    \ in\n   this section.\n   It is generally simpler to have one's border routers\
    \ refuse to accept\n   an MPLS packet than to configure a router to refuse to\
    \ accept certain\n   MPLS packets carried in IP or GRE to or from certain IP sources\
    \ or\n   destinations.  Thus, the use of IP or GRE to carry MPLS packets\n   increases\
    \ the likelihood that an MPLS label-spoofing attack will\n   succeed.  L2TPv3\
    \ provides an additional level of protection against\n   packet spoofing before\
    \ allowing a packet to enter a Virtual Private\n   Network (VPN) (much like IPsec\
    \ provides an additional level of\n   protection at a Provider Edge (PE) router\
    \ rather than relying on\n   Access Control List (ACL) filters).  Checking the\
    \ value of the L2TPv3\n   Cookie is similar to any sort of ACL that inspects the\
    \ contents of a\n   packet header, except that we give ourselves the luxury of\
    \ \"seeding\"\n   the L2TPv3 header with a value that is very difficult to spoof.\n\
    \   MPLS over L2TPv3 may be advantageous compared to [RFC4023], if:\n      Two\
    \ routers are already \"adjacent\" over an L2TPv3 tunnel\n      established for\
    \ some other reason, and wish to exchange MPLS\n      packets over that adjacency.\n\
    \      Implementation considerations dictate the use of MPLS over L2TPv3.\n  \
    \    For example, a hardware device may be able to take advantage of\n      the\
    \ L2TPv3 encapsulation for faster or distributed processing.\n      Packet spoofing\
    \ and insertion, service integrity and resource\n      protection are of concern,\
    \ especially given the fact that an IP\n      tunnel potentially exposes the router\
    \ to rogue or inappropriate IP\n      packets from unknown or untrusted sources.\
    \  IP Access Control\n      Lists (ACLs) and numbering methods may be used to\
    \ protect the PE\n      routers from rogue IP sources, but may be subject to error\
    \ and\n      cumbersome to maintain at all edge points at all times.  The\n  \
    \    L2TPv3 Cookie provides a simple means of validating the source of\n     \
    \ an L2TPv3 packet before allowing processing to continue.  This\n      validation\
    \ offers an additional level of protection over and above\n      IP ACLs, and\
    \ a validation that the Session ID was not corrupted in\n      transit or suffered\
    \ an internal lookup error upon receipt and\n      processing.  If the Cookie\
    \ value is assigned and distributed\n      automatically, it is less subject to\
    \ operator error, and if\n      selected in a cryptographically random nature,\
    \ less subject to\n      blind guesses than source IP addresses (in the event\
    \ that a hacker\n      can insert packets within a core network).\n   (The first\
    \ two of the above applicability statements were adopted\n   from [RFC4023].)\n\
    \   In summary, L2TPv3 can provide a balance between the limited security\n  \
    \ against IP spoofing attacks offered by [RFC4023] vs. the greater\n   security\
    \ and associated operational and processing overhead offered\n   by [MPLS-IPSEC].\
    \  Further, MPLS over L2TPv3 may be faster in some\n   hardware, particularly\
    \ if that hardware is already optimized to\n   classify incoming L2TPv3 packets\
    \ carrying IP framed in a variety of\n   ways.  For example, IP encapsulated by\
    \ High-Level Data Link Control\n   (HDLC) or Frame Relay over L2TPv3 may be equivalent\
    \ in complexity to\n   IP encapsulated by MPLS over L2TPv3.\n"
- title: 5.  Congestion Considerations
  contents:
  - "5.  Congestion Considerations\n   This document specifies an encapsulation method\
    \ for MPLS inside the\n   L2TPv3 tunnel payload.  MPLS can carry a number of different\n\
    \   protocols as payloads.  When an MPLS/L2TPv3 flow carries IP-based\n   traffic,\
    \ the aggregate traffic is assumed to be TCP friendly due to\n   the congestion\
    \ control mechanisms used by the payload traffic.\n   Packet loss will trigger\
    \ the necessary reduction in offered load, and\n   no additional congestion avoidance\
    \ action is necessary.\n   When an MPLS/L2TPv3 flow carries payload traffic that\
    \ is not known to\n   be TCP friendly and the flow runs across an unprovisioned\
    \ path that\n   could potentially become congested, the application that uses\
    \ the\n   encapsulation specified in this document MUST employ additional\n  \
    \ mechanisms to ensure that the offered load is reduced appropriately\n   during\
    \ periods of congestion.  The MPLS/L2TPv3 flow should not exceed\n   the average\
    \ bandwidth that a TCP flow across the same network path\n   and experiencing\
    \ the same network conditions would achieve, measured\n   on a reasonable timescale.\
    \  This is not necessary in the case of an\n   unprovisioned path through an over-provisioned\
    \ network, where the\n   potential for congestion is avoided through the over-provisioning\
    \ of\n   the network.\n   The comparison to TCP cannot be specified exactly but\
    \ is intended as\n   an \"order-of-magnitude\" comparison in timescale and throughput.\
    \  The\n   timescale on which TCP throughput is measured is the roundtrip time\n\
    \   of the connection.  In essence, this requirement states that it is\n   not\
    \ acceptable to deploy an application using the encapsulation\n   specified in\
    \ this document on the best-effort Internet, which\n   consumes bandwidth arbitrarily\
    \ and does not compete fairly with TCP\n   within an order of magnitude.  One\
    \ method of determining an\n   acceptable bandwidth is described in [RFC3448].\
    \  Other methods exist,\n   but are outside the scope of this document.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   There are three main concerns when transporting\
    \ MPLS-labeled traffic\n   between PEs using IP tunnels.  The first is the possibility\
    \ that a\n   third party may insert packets into a packet stream between two PEs.\n\
    \   The second is that a third party might view the packet stream between\n  \
    \ two PEs.  The third is that a third party may alter packets in a\n   stream\
    \ between two PEs.  The security requirements of the\n   applications whose traffic\
    \ is being sent through the tunnel\n   characterizes how significant these issues\
    \ are.  Operators may use\n   multiple methods to mitigate the risk, including\
    \ access lists,\n   authentication, encryption, and context validation.  Operators\
    \ should\n   consider the cost to mitigate the risk.\n   Security is also discussed\
    \ as part of the applicability discussion in\n   Section 4 of this document.\n"
- title: 6.1.  In the Absence of IPsec
  contents:
  - "6.1.  In the Absence of IPsec\n   If the tunnels are not secured with IPsec,\
    \ then some other method\n   should be used to ensure that packets are decapsulated\
    \ and processed\n   by the tunnel tail only if those packets were encapsulated\
    \ by the\n   tunnel head.  If the tunnel lies entirely within a single\n   administrative\
    \ domain, address filtering at the boundaries can be\n   used to ensure that no\
    \ packet with the IP source address of a tunnel\n   endpoint or with the IP destination\
    \ address of a tunnel endpoint can\n   enter the domain from outside.\n   However,\
    \ when the tunnel head and the tunnel tail are not in the same\n   administrative\
    \ domain, this may become difficult, and filtering based\n   on the destination\
    \ address can even become impossible if the packets\n   must traverse the public\
    \ Internet.\n   Sometimes, only source address filtering (but not destination\
    \ address\n   filtering) is done at the boundaries of an administrative domain.\
    \  If\n   this is the case, the filtering does not provide effective protection\n\
    \   at all unless the decapsulator of MPLS over L2TPv3 validates the IP\n   source\
    \ address of the packet.\n   Additionally, the \"Data Packet Spoofing\" considerations\
    \ in Section\n   8.2 of [RFC3931] and the \"Context Validation\" considerations\
    \ in\n   Section 6.2 of this document apply.  Those two sections highlight the\n\
    \   benefits of the L2TPv3 Cookie.\n"
- title: 6.2.  Context Validation
  contents:
  - "6.2.  Context Validation\n   The L2TPv3 Cookie does not provide protection via\
    \ encryption.\n   However, when used with a sufficiently random, 64-bit value\
    \ that is\n   kept secret from an off-path attacker, the L2TPv3 Cookie may be\
    \ used\n   as a simple yet effective packet source authentication check which\
    \ is\n   quite resistant to brute force packet-spoofing attacks.  It also\n  \
    \ alleviates the need to rely solely on filter lists based on a list of\n   valid\
    \ source IP addresses, and thwarts attacks that could benefit by\n   spoofing\
    \ a permitted source IP address.  The L2TPv3 Cookie provides a\n   means of validating\
    \ the currently assigned Session ID on the packet\n   flow, providing context\
    \ protection, and may be deemed complimentary\n   to securing the tunnel utilizing\
    \ IPsec.  In the absence of\n   cryptographic security on the data plane (such\
    \ as that provided by\n   IPsec), the L2TPv3 Cookie provides a simple method of\
    \ validating the\n   Session ID lookup performed on each L2TPv3 packet.  If the\
    \ Cookie is\n   sufficiently random and remains unknown to an attacker (that is,\
    \ the\n   attacker has no way to predict Cookie values or monitor traffic\n  \
    \ between PEs), then the Cookie provides an additional measure of\n   protection\
    \ against malicious spoofed packets inserted at the PE over\n   and above that\
    \ of typical IP address and port ACLs.\n"
- title: 6.3.  Securing the Tunnel with IPsec
  contents:
  - "6.3.  Securing the Tunnel with IPsec\n   L2TPv3 tunnels may also be secured using\
    \ IPsec, as specified in\n   Section 4.1.3 of [RFC3931].  IPSec may provide authentication,\n\
    \   privacy protection, integrity checking, and replay protection.  These\n  \
    \ functions may be deemed necessary by the operator.  When using IPsec,\n   the\
    \ tunnel head and the tunnel tail should be treated as the\n   endpoints of a\
    \ Security Association.  A single IP address of the\n   tunnel head is used as\
    \ the source IP address, and a single IP address\n   of the tunnel tail is used\
    \ as the destination IP address.  The means\n   by which each node knows the proper\
    \ address of the other is outside\n   the scope of this document.  However, if\
    \ a control protocol is used\n   to set up the tunnels, such control protocol\
    \ MUST have an\n   authentication mechanism, and this MUST be used when the tunnel\
    \ is\n   set up.  If the tunnel is set up automatically as the result of, for\n\
    \   example, information distributed by BGP, then the use of BGP's\n   Message\
    \ Digest 5 (MD5)-based authentication mechanism can serve this\n   purpose.\n\
    \   The MPLS over L2TPv3 encapsulated packets should be considered as\n   originating\
    \ at the tunnel head and being destined for the tunnel\n   tail; IPsec transport\
    \ mode SHOULD thus be used.\n   Note that the tunnel tail and the tunnel head\
    \ are Label Switched Path\n   (LSP) adjacencies (for label distribution adjacencies,\
    \ see\n   [RFC3031]), which means that the topmost label of any packet sent\n\
    \   through the tunnel must be one that was distributed by the tunnel\n   tail\
    \ to the tunnel head.  The tunnel tail MUST know precisely which\n   labels it\
    \ has distributed to the tunnel heads of IPsec-secured\n   tunnels.  Labels in\
    \ this set MUST NOT be distributed by the tunnel\n   tail to any LSP adjacencies\
    \ other than those that are tunnel heads of\n   IPsec-secured tunnels.  If an\
    \ MPLS packet is received without an\n   IPsec encapsulation, and if its topmost\
    \ label is in this set, then\n   the packet MUST be discarded.\n   Securing L2TPv3\
    \ using IPsec MUST provide authentication and\n   integrity.  (Note that the authentication\
    \ and integrity provided will\n   apply to the entire MPLS packet, including the\
    \ MPLS label stack.)\n   Consequently, the implementation MUST support Encapsulating\
    \ Security\n   Payload (ESP) with null encryption.  ESP with encryption MAY be\n\
    \   supported if a source requires confidentiality.  If ESP is used, the\n   tunnel\
    \ tail MUST check that the source IP address of any packet\n   received on a given\
    \ Security Association (SA) is the one expected.\n   Key distribution may be done\
    \ either manually or automatically by\n   means of the Internet Key Exchange (IKE)\
    \ Protocol [RFC2409] or IKEv2\n   [RFC4306].  Manual keying MUST be supported.\
    \  If automatic keying is\n   implemented, IKE in main mode with preshared keys\
    \ MUST be supported.\n   A particular application may escalate this requirement\
    \ and request\n   implementation of automatic keying.  Manual key distribution\
    \ is much\n   simpler, but also less scalable, than automatic key distribution.\
    \  If\n   replay protection is regarded as necessary for a particular tunnel,\n\
    \   automatic key distribution should be configured.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Thanks to Robert Raszuk, Clarence Filsfils, and Eric\
    \ Rosen for their\n   review of this document.  Some text was adopted from [RFC4023].\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]     Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                 Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC3032]     Rosen, E., Tappan, D., Fedorkow, G., Rekhter,\
    \ Y.,\n                 Farinacci, D., Li, T., and A. Conta, \"MPLS Label Stack\n\
    \                 Encoding\", RFC 3032, January 2001.\n   [RFC3931]     Lau, J.,\
    \ Townsley, M., and I. Goyret, \"Layer Two\n                 Tunneling Protocol\
    \ - Version 3 (L2TPv3)\", RFC 3931,\n                 March 2005.\n   [RFC4023]\
    \     Worster, T., Rekhter, Y., and E. Rosen, \"Encapsulating\n              \
    \   MPLS in IP or Generic Routing Encapsulation (GRE)\", RFC\n               \
    \  4023, March 2005.\n   [RFC4086]     Eastlake, D., 3rd, Schiller, J., and S.\
    \ Crocker,\n                 \"Randomness Requirements for Security\", BCP 106,\
    \ RFC\n                 4086, June 2005.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [MPLS-IPSEC]  Rosen, E., De Clercq, J., Paridaens,\
    \ O., T'Joens, Y.,\n                 and C. Sargor, \"Architecture for the Use\
    \ of PE-PE IPsec\n                 Tunnels in BGP/MPLS IP VPNs\", Work in Progress,\
    \ August\n                 2005.\n   [RFC3031]     Rosen, E., Viswanathan, A.,\
    \ and R. Callon,\n                 \"Multiprotocol Label Switching Architecture\"\
    , RFC 3031,\n                 January 2001.\n   [RFC2409]     Harkins, D. and\
    \ D. Carrel, \"The Internet Key Exchange\n                 (IKE)\", RFC 2409,\
    \ November 1998.\n   [RFC4306]     Kaufman, C., \"Internet Key Exchange (IKEv2)\
    \ Protocol\",\n                 RFC 4306, December 2005.\n   [RFC3448]     Handley,\
    \ M., Floyd, S., Padhye, J., and J. Widmer, \"TCP\n                 Friendly Rate\
    \ Control (TFRC): Protocol Specification\",\n                 RFC 3448, January\
    \ 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   W. Mark Townsley\n   Cisco Systems\n   USA\n   Phone:\
    \ +1-919-392-3741\n   EMail: mark@townsley.net\n   Carlos Pignataro\n   Cisco\
    \ Systems\n   7025 Kit Creek Road\n   PO Box 14987\n   Research Triangle Park,\
    \ NC 27709\n   USA\n   Phone: +1-919-392-7428\n   EMail: cpignata@cisco.com\n\
    \   Scott Wainner\n   Cisco Systems\n   13600 Dulles Technology Drive\n   Herndon,\
    \ VA 20171\n   USA\n   EMail: swainner@cisco.com\n   Ted Seely\n   Sprint Nextel\n\
    \   12502 Sunrise Valley Drive\n   Reston, VA 20196\n   USA\n   Phone: +1-703-689-6425\n\
    \   EMail: tseely@sprint.net\n   Jeff Young\n   EMail: young@jsyoung.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
