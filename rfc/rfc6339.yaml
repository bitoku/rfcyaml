- title: __initial_text__
  contents:
  - " Context Token Encapsulate/Decapsulate and OID Comparison Functions for\n  the\
    \ Generic Security Service Application Program Interface (GSS-API)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes three abstract Generic Security Service\n\
    \   Application Program Interface (GSS-API) interfaces used to\n   encapsulate/decapsulate\
    \ context tokens and compare OIDs.  This\n   document also specifies C bindings\
    \ for the abstract interfaces.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6339.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 2\n   2.  Conventions Used in This Document . . . . . . . . . .\
    \ . . . . . 2\n   3.  GSS_Encapsulate_token Call  . . . . . . . . . . . . . .\
    \ . . . . 3\n     3.1.  gss_encapsulate_token . . . . . . . . . . . . . . . .\
    \ . . . 3\n   4.  GSS_Decapsulate_token Call  . . . . . . . . . . . . . . . .\
    \ . . 4\n     4.1.  gss_decapsulate_token . . . . . . . . . . . . . . . . . .\
    \ . 5\n   5.  GSS_OID_equal Call  . . . . . . . . . . . . . . . . . . . . . .\
    \ 6\n     5.1.  gss_oid_equal . . . . . . . . . . . . . . . . . . . . . . . 6\n\
    \   6.  Test Vector . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n  \
    \ 7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . 7\n   8.\
    \  Security Considerations . . . . . . . . . . . . . . . . . . . . 7\n   9.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n     9.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . . . 7\n     9.2.  Informative\
    \ Reference . . . . . . . . . . . . . . . . . . . 8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Generic Security Service Application Program Interface\
    \ (GSS-API)\n   [RFC2743] is a framework that provides security services to\n\
    \   applications using a variety of authentication mechanisms.  There are\n  \
    \ widely implemented C bindings [RFC2744] for the abstract interface.\n   For\
    \ initial context tokens, a mechanism-independent token format may\n   be used\
    \ (see Section 3.1 of [RFC2743]).  Some protocols, e.g., Simple\n   Authentication\
    \ and Security Layer (SASL) GS2 [RFC5801], need the\n   ability to add and remove\
    \ this token header, which contains some\n   ASN.1 tags, a length, and the mechanism\
    \ OID to and from context\n   tokens.  This document adds two GSS-API interfaces\n\
    \   (GSS_Encapsulate_token and GSS_Decapsulate_token) so that GSS-API\n   libraries\
    \ can provide this functionality.\n   Being able to compare OIDs is useful, for\
    \ example, when validating\n   that a negotiated mechanism matches the requested\
    \ one.  This document\n   adds one GSS-API interface (GSS_OID_equal) for this\
    \ purpose.\n   Text from this specification can be used as implementation\n  \
    \ documentation, and for this reason, Sections 3, 4, 5, 6, and 8 should\n   be\
    \ considered code components.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The document uses terms from, and is\
    \ structured in a similar way as,\n   [RFC2743] and [RFC2744].  The normative\
    \ reference to [RFC5587] is for\n   the C types \"gss_const_buffer_t\" and \"\
    gss_const_OID\"; nothing else\n   from that document is required to implement\
    \ this document.\n"
- title: 3.  GSS_Encapsulate_token Call
  contents:
  - "3.  GSS_Encapsulate_token Call\n   Inputs:\n   o  input_token OCTET STRING --\
    \ buffer with token data to encapsulate\n   o  token_oid OBJECT IDENTIFIER --\
    \ object identifier of mechanism for\n      the token\n   Outputs:\n   o  major_status\
    \ INTEGER\n   o  output_token OCTET STRING -- Encapsulated token data; caller\
    \ must\n      release with GSS_Release_buffer()\n   Return major_status codes:\n\
    \   o  GSS_S_COMPLETE indicates that completion was successful and that\n    \
    \  output parameters hold correct information.\n   o  GSS_S_FAILURE indicates\
    \ that encapsulation failed for reasons\n      unspecified at the GSS-API level.\n\
    \   GSS_Encapsulate_token() is used to add the mechanism-independent\n   token\
    \ header to GSS-API context token data.\n"
- title: 3.1.  gss_encapsulate_token
  contents:
  - "3.1.  gss_encapsulate_token\n   OM_uint32 gss_encapsulate_token (\n     gss_const_buffer_t\
    \ input_token,\n     gss_const_OID token_oid,\n     gss_buffer_t output_token)\n\
    \   Purpose:\n   Add the mechanism-independent token header to GSS-API context\
    \ token\n   data.\n   Parameters:\n   input_token            buffer, opaque, read\n\
    \                          Buffer with GSS-API context token data.\n   token_oid\
    \              Object ID, read\n                          Object identifier of\
    \ token.\n   output_token           buffer, opaque, modify\n                 \
    \         Encapsulated token data; caller must release\n                     \
    \     with gss_release_buffer().\n   Function values:       GSS status codes\n\
    \   GSS_S_COMPLETE         Indicates that completion was successful and\n    \
    \                      that output parameters hold correct\n                 \
    \         information.\n   GSS_S_FAILURE          Indicates that encapsulation\
    \ failed for\n                          reasons unspecified at the GSS-API level.\n"
- title: 4.  GSS_Decapsulate_token Call
  contents:
  - "4.  GSS_Decapsulate_token Call\n   Inputs:\n   o  input_token OCTET STRING --\
    \ buffer with token to decapsulate\n   o  token_oid OBJECT IDENTIFIER -- expected\
    \ object identifier of token\n   Outputs:\n   o  major_status INTEGER\n   o  output_token\
    \ OCTET STRING -- Decapsulated token data; caller must\n      release with GSS_Release_buffer()\n\
    \   Return major_status codes:\n   o  GSS_S_COMPLETE indicates that completion\
    \ was successful and that\n      output parameters hold correct information.\n\
    \   o  GSS_S_DEFECTIVE_TOKEN means that the token failed consistency\n      checks\
    \ (e.g., OID mismatch or ASN.1 DER length errors).\n   o  GSS_S_FAILURE indicates\
    \ that decapsulation failed for reasons\n      unspecified at the GSS-API level.\n\
    \   GSS_Decapsulate_token() is used to remove the mechanism-independent\n   token\
    \ header from an initial GSS-API context token.\n"
- title: 4.1.  gss_decapsulate_token
  contents:
  - "4.1.  gss_decapsulate_token\n   OM_uint32\n   gss_decapsulate_token (\n     gss_const_buffer_t\
    \ input_token,\n     gss_const_OID token_oid,\n     gss_buffer_t output_token)\n\
    \   Purpose:\n   Remove the mechanism-independent token header from an initial\
    \ GSS-API\n   context token.\n   Parameters:\n   input_token            buffer,\
    \ opaque, read\n                          Buffer with GSS-API context token.\n\
    \   token_oid              Object ID, read\n                          Expected\
    \ object identifier of token.\n   output_token           buffer, opaque, modify\n\
    \                          Decapsulated token data; caller must release\n    \
    \                      with gss_release_buffer().\n   Function values:       GSS\
    \ status codes\n   GSS_S_COMPLETE         Indicates that completion was successful\
    \ and\n                          that output parameters hold correct\n       \
    \                   information.\n   GSS_S_DEFECTIVE_TOKEN  Means that the token\
    \ failed consistency checks\n                          (e.g., OID mismatch or\
    \ ASN.1 DER length\n                          errors).\n   GSS_S_FAILURE     \
    \     Indicates that decapsulation failed for\n                          reasons\
    \ unspecified at the GSS-API level.\n"
- title: 5.  GSS_OID_equal Call
  contents:
  - "5.  GSS_OID_equal Call\n   Inputs:\n   o  first_oid OBJECT IDENTIFIER -- first\
    \ object identifier to compare\n   o  second_oid OBJECT IDENTIFIER -- second object\
    \ identifier to\n      compare\n   Return codes:\n   o  non-0 when neither OID\
    \ is GSS_C_NO_OID and the two OIDs are equal.\n   o  0 when the two OIDs are not\
    \ identical or either OID is equal to\n      GSS_C_NO_OID.\n   GSS_OID_equal()\
    \ is used to add compare two OIDs for equality.  The\n   value GSS_C_NO_OID will\
    \ not match any OID, including GSS_C_NO_OID\n   itself.\n"
- title: 5.1.  gss_oid_equal
  contents:
  - "5.1.  gss_oid_equal\n   extern int\n   gss_oid_equal (\n     gss_const_OID first_oid,\n\
    \     gss_const_OID second_oid\n   )\n   Purpose:\n   Compare two OIDs for equality.\
    \  The value GSS_C_NO_OID will not match\n   any OID, including GSS_C_NO_OID itself.\n\
    \   Parameters:\n   first_oid              Object ID, read\n                 \
    \         First object identifier to compare.\n   second_oid             Object\
    \ ID, read\n                          Second object identifier to compare.\n \
    \  Function values:       GSS status codes\n   non-0                  Neither\
    \ OID is GSS_C_NO_OID, and the two OIDs\n                          are equal.\n\
    \   0                      The two OIDs are not identical, or either OID\n   \
    \                       is equal to GSS_C_NO_OID.\n"
- title: 6.  Test Vector
  contents:
  - "6.  Test Vector\n   For the GSS_Encapsulate_token function, if the \"input_token\"\
    \ buffer\n   is the 3-byte octet sequence \"foo\" and the \"token_oid\" OID is\n\
    \   1.2.840.113554.1.2.2, which encoded corresponds to the 9-byte-long\n   octet\
    \ sequence (using C notation)\n   \"\\x2a\\x86\\x48\\x86\\xf7\\x12\\x01\\x02\\\
    x02\", the output should be the\n   16-byte-long octet sequence (again in C notation)\n\
    \   \"\\x60\\x0e\\x06\\x09\\x2a\\x86\\x48\\x86\\xf7\\x12\\x01\\x02\\x02\\x66\\\
    x6f\\x6f\".\n   These values may also be used to test the GSS_Decapsulate_token\n\
    \   interface.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Greg Hudson pointed out the 'const' problem with the\
    \ C bindings in\n   earlier versions of this document, and Luke Howard suggested\
    \ to\n   resolve it by using the [RFC5587] types.  Stephen Farrell suggested\n\
    \   several editorial improvements and the security consideration\n   regarding\
    \ absent security features of the encapsulation function.\n   Chris Lonvick suggested\
    \ some improvements.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The security considerations of the base GSS-API\
    \ specification\n   ([RFC2743]) and the base C bindings ([RFC2744]) are inherited.\n\
    \   Encapsulation of data does not provide any kind of integrity or\n   confidentiality.\n\
    \   Implementations need to treat input as potentially untrustworthy for\n   purposes\
    \ of dereferencing memory objects to avoid security\n   vulnerabilities.  In particular,\
    \ ASN.1 DER length fields are a common\n   source of mistakes.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2743]  Linn, J., \"Generic Security Service\
    \ Application Program\n              Interface Version 2, Update 1\", RFC 2743,\
    \ January 2000.\n   [RFC2744]  Wray, J., \"Generic Security Service API Version\
    \ 2 :\n              C-bindings\", RFC 2744, January 2000.\n   [RFC5587]  Williams,\
    \ N., \"Extended Generic Security Service Mechanism\n              Inquiry APIs\"\
    , RFC 5587, July 2009.\n"
- title: 9.2.  Informative Reference
  contents:
  - "9.2.  Informative Reference\n   [RFC5801]  Josefsson, S. and N. Williams, \"\
    Using Generic Security\n              Service Application Program Interface (GSS-API)\
    \ Mechanisms\n              in Simple Authentication and Security Layer (SASL):\
    \ The\n              GS2 Mechanism Family\", RFC 5801, July 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Simon Josefsson\n   SJD AB\n   Hagagatan 24\n   Stockholm\
    \  113 47\n   SE\n   EMail: simon@josefsson.org\n   URI:   http://josefsson.org/\n\
    \   Love Hornquist Astrand\n   Apple, Inc.\n   EMail: lha@apple.com\n"
