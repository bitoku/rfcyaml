- title: __initial_text__
  contents:
  - '               A Model for Common Operational Statistics

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes a model for operational statistics in the\n\
    \   Internet.  It gives recommendations for metrics, measurements,\n   polling\
    \ periods and presentation formats and defines a format for the\n   exchange of\
    \ operational statistics.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The author would like to thank the members of the Operational\n\
    \   Statistics Working Group of the IETF whose efforts made this memo\n   possible,\
    \ particularly Bernhard Stockman, author of RFC 1404, and\n   Nevil Brownlee,\
    \ who produced the revised BNF description of the\n   model.  Wherever possible,\
    \ their text has been changed as little as\n   feasible.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   3.3.3   Per interface Variables Needing High Resolution\
    \ Polling .. 9\n   3.3.4   Per Interface Variables not in any MIB ...................\
    \ 9\n   3.3.5   Per Node Variables ....................................... 9\n\
    \   3.3.6   Metrics not being Retrievable with SNMP ................. 10\n   3.4\
    \     Recommended Metrics ..................................... 10\n   4.    \
    \  Polling Frequencies ..................................... 10\n   4.1     Variables\
    \ Needing High Resolution Polling ............... 11\n   4.2     Variables not\
    \ Needing High Resolution Polling ........... 11\n   5.      Pre-Processing of\
    \ Raw Statistical Data .................. 11\n   5.1     Optimizing and Concentrating\
    \ Data to Resources .......... 11\n   5.2     Aggregation of Data .....................................\
    \ 12\n   6.      Storing of Statistical Data ............................. 12\n\
    \   6.1     The Storage Format ...................................... 13\n   6.1.1\
    \   The Label Section ....................................... 14\n   6.1.2   The\
    \ Device Section ...................................... 15\n   6.1.3   The Data\
    \ Section ........................................ 17\n   6.2     Storage Requirement\
    \ Estimations ......................... 17\n   7.      Report Formats ..........................................\
    \ 18\n   7.1     Report Types and Contents ............................... 18\n\
    \   7.2     Contents of the Reports ................................. 19\n   7.2.1\
    \   Offered Load by Link .................................... 19\n   7.2.2   Offered\
    \ Load by Customer ................................ 19\n   7.2.3   Resource Utilization\
    \ Reporting .......................... 20\n   7.2.3.1 Utilization as Maximum Peak\
    \ Behavior .................... 20\n   7.2.3.2 Utilization as Frequency Distribution\
    \ of Peaks .......... 20\n   8.      Considerations for Future Development ...................\
    \ 20\n   8.1     A Client/Server Based Statistical Exchange System ....... 21\n\
    \   8.2     Inclusion of Variables not in the Internet Standard MIB . 21\n   8.3\
    \     Detailed Resource Utilization Statistics ................ 21\n   Appendix\
    \ A  Some formulas for statistical aggregation ........... 22\n   Appendix B \
    \ An example .......................................... 24\n   Security Considerations\
    \ ......................................... 27\n   Author's Address ................................................\
    \ 27\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Many network administrations commonly collect and archive\
    \ network\n   management metrics that indicate network utilization, growth and\n\
    \   reliability.  The primary goals of this activity are to facilitate\n   near-term\
    \ problem isolation and longer-term network planning within\n   the organization.\
    \  There is also the broader goal of cooperative\n   problem isolation and network\
    \ planning among network administrations.\n   This broader goal is likely to become\
    \ increasingly important as the\n   Internet continues to grow, particularly as\
    \ the number of Internet\n   service providers expands and the quality of service\
    \ between\n   providers becomes more of a concern.\n   There exist a variety of\
    \ network management tools for the collection\n   and presentation of network\
    \ management metrics.  However, different\n   kinds of measurement and presentation\
    \ techniques make it difficult\n   to compare data among networks.  In addition,\
    \ there is not general\n   agreement on what metrics should be regularly collected\
    \ or how they\n   should be displayed.\n   There needs to be an agreed-upon model\
    \ for\n   1)   A minimal set of common network management metrics to satisfy\n\
    \        the goals stated above,\n   2)   Tools for collecting these metrics,\n\
    \   3)   A common interchange format to facilitate the usage of these\n      \
    \  data by common presentation tools and\n   4)   Common presentation formats.\n\
    \   Under this Operational Statistics model, collection tools will\n   collect\
    \ and store data to be retrieved later in a given format by\n   presentation tools\
    \ displaying the data in a predefined way.  (See\n   figure below.)\n"
- title: The Operational Statistics Model
  contents:
  - "The Operational Statistics Model\n   (Collection of common metrics, by commonly\
    \ available tools, stored in\n   a common format, displayed in common formats\
    \ by commonly available\n   presentation tools.)\n                      !-----------------------!\n\
    \                      !       Network         !\n                      !---+---------------+---!\n\
    \                         /                 \\\n                        /    \
    \               \\\n                       /                     \\\n        \
    \      --------+------             ----+---------\n              !     New   \
    \  !             !    Old     !\n              !  Collection !             ! Collection\
    \ !\n              !     Tool    !             !    Tool    !\n              !---------+---!\
    \             !------+-----!\n                         \\                    \
    \   !\n                          \\              !-------+--------!\n        \
    \                   \\             ! Post-Processor !\n                      \
    \      \\            !--+-------------!\n                             \\     \
    \        /\n                              \\           /\n                   \
    \            \\         /\n                             !--+-------+---!\n   \
    \                          !    Common    !\n                             !  Statistics\
    \  !\n                             !   Database   !\n                        \
    \     !-+--------+---!\n                              /          \\\n        \
    \                     /            \\\n                            /         \
    \     \\\n                           /              !-+-------------!\n      \
    \                    /               ! Pre-Processor !\n                     \
    \    /                !-------+-------!\n            !-----------+--!        \
    \              !\n            !     New      !              !-------+-------!\n\
    \            ! Presentation !              !     Old       !\n            !  \
    \   Tool     !              ! Presentation  !\n            !---------+----!  \
    \            !     Tool      !\n                       \\                  !--+------------!\n\
    \                        \\                   /\n                         \\ \
    \                /\n                        !-+---------------+-!\n          \
    \              ! Graphical Output  !\n                        ! (e.g., to paper\
    \   !\n                        ! or X Window)      !\n                       \
    \ !-------------------!\n   This memo gives an overview of this model for common\
    \ operational\n   statistics. The model defines the gathering, storing and presentation\n\
    \   of network operational statistics and classifies the types of\n   information\
    \ that should be available at each network operation center\n   (NOC) conforming\
    \ to this model.\n   The model defines a minimal set of metrics and discusses\
    \ how these\n   metrics should be gathered and stored.  It gives recommendations\
    \ for\n   the content and layout of statistical reports which make possible the\n\
    \   easy comparison of network statistics among NOCs.\n   The primary purpose\
    \ of this model is to define mechanisms by which\n   NOCs could share most effectively\
    \ their operational statistics.  One\n   intent of this model is to specify a\
    \ baseline capability that NOCs\n   conforming to the model may support with minimal\
    \ development effort\n   and minimal ongoing effort.\n"
- title: 2.  The Model
  contents:
  - "2.  The Model\n   The model defines three areas of interest on which all underlying\n\
    \   concepts are based:\n   1)   The definition of a minimal set of metrics to\
    \ be gathered,\n   2)   The definition of a format for storing collected statistical\n\
    \        data and\n   3)   The definition of methods and formats for generating\
    \ reports.\n   The model indicates that old tools currently in use could be\n\
    \   retrofitted into the new paradigm. This could be done by providing\n   conversion\
    \ filters between old and new tools. In this sense this\n   model intends to advocate\
    \ the development of freely redistributable\n   software for use by participating\
    \ NOCs.\n   One basic idea of the model is that statistical data stored at one\n\
    \   place could be retrieved and displayed at some other place.\n"
- title: 2.1.  Metrics and Polling Periods
  contents:
  - "2.1.  Metrics and Polling Periods\n   Here the value is 0.\n   The intent here\
    \ is to define a minimal set of metrics that could be\n   gathered easily using\
    \ standard SNMP-based network management tools.\n   Thus, these metrics should\
    \ be available as variables in the Internet\n   Standard MIB.\n   If the Internet\
    \ Standard MIB were changed, this minimal set of\n   metrics should be reconsidered,\
    \ as there are many metrics regarded\n   as important, but not currently defined\
    \ in the standard MIB.\n   Some metrics which are highly desirable to collect\
    \ are probably not\n   retrievable using SNMP.  Therefore, tools and methods for\
    \ gathering\n   such metrics should be defined explicitly if such metrics are\
    \ to be\n   considered. This is, however, outside of the scope of this memo.\n"
- title: 2.2.  Format for Storing Collected Data
  contents:
  - "2.2.  Format for Storing Collected Data\n   A format for storing data is defined.\
    \ The intent is to minimize\n   redundant information by using a single header\
    \ structure wherein all\n   information relevant to a certain set of statistical\
    \ data is stored.\n   This header section will give information about when and\
    \ where the\n   corresponding statistical data were collected.\n"
- title: 2.3.  Reports
  contents:
  - "2.3.  Reports\n   Some basic classes of reports are suggested, addressing different\n\
    \   views of network behavior.  Reports of total octets and packets over\n   some\
    \ time period are regarded as essential to give an overall view of\n   the traffic\
    \ flow in a network.  Differentiation between applications\n   and protocols is\
    \ regarded as needed to give ideas on which type of\n   traffic is dominant. \
    \ Reports on resource utilization are\n   recommended.\n   The time period which\
    \ a report spans may vary depending on its\n   intent.  In engineering and operations\
    \ daily or weekly reports may be\n   sufficient, whereas for capacity planning\
    \ there may be a need for\n   longer-term reports.\n"
- title: 2.4.  Security Issues
  contents:
  - "2.4.  Security Issues\n   There are legal, ethical and political concerns about\
    \ data sharing.\n   People, in particular Network Service Providers, are concerned\
    \ about\n   showing data that may make one of their networks look bad.\n   For\
    \ this reason there is a need to insure integrity, conformity and\n   confidentiality\
    \ of the shared data. To be useful, the same data\n   should be collected from\
    \ all involved sites and it should be\n   collected at the same interval.\n"
- title: 3.  Categorization of Metrics
  contents:
  - '3.  Categorization of Metrics

    '
- title: 3.1.  Overview
  contents:
  - "3.1.  Overview\n   This section gives a classification of metrics with regard\
    \ to scope\n   and ease of retrieval. A recommendation of a minimal set of metrics\n\
    \   is given. This section also gives some hints on metrics to be\n   considered\
    \ for future inclusion when available in the network\n   management environment.\
    \ Finally some thoughts on storage requirements\n   are presented.\n"
- title: 3.2.  Categorization of Metrics Based on Measurement Areas
  contents:
  - "3.2.  Categorization of Metrics Based on Measurement Areas\n   The metrics used\
    \ in evaluating network traffic could be classified\n   into (at least) four major\
    \ categories:\n    o Utilization metrics\n    o Performance metrics\n    o Availability\
    \ metrics\n    o Stability metrics\n"
- title: 3.2.1.  Utilization Metrics
  contents:
  - "3.2.1.  Utilization Metrics\n   This category describes different aspects of\
    \ the total traffic being\n   forwarded through the network. Possible metrics\
    \ include:\n    o Total input and output packets and octets\n    o Various peak\
    \ metrics\n    o Per protocol and per application metrics\n"
- title: 3.2.2.  Performance Metrics
  contents:
  - "3.2.2.  Performance Metrics\n   These metrics relate to quality of service issues\
    \ such as delays and\n   congestion situations. Possible metrics include:\n  \
    \  o RTT metrics on different protocol layers\n    o Number of collisions on a\
    \ bus network\n    o Number of ICMP Source Quench messages\n    o Number of packets\
    \ dropped\n"
- title: 3.2.3.  Availability Metrics
  contents:
  - '3.2.3.  Availability Metrics

    '
- title: These metrics could be viewed as gauging long term accessibility on
  contents:
  - 'These metrics could be viewed as gauging long term accessibility on

    '
- title: 'different protocol layers. Possible metrics include:'
  contents:
  - "different protocol layers. Possible metrics include:\n    o Line availability\
    \ as percentage uptime\n    o Route availability\n    o Application availability\n"
- title: 3.2.4.  Stability Metrics
  contents:
  - "3.2.4.  Stability Metrics\n   These metrics describe short-term fluctuations\
    \ in the network which\n   degrade the service level.  Changes in traffic patterns\
    \ also could be\n   recognized using these metrics.  Possible metrics include:\n\
    \    o Number of fast line status transitions\n    o Number of fast route changes\
    \ (also known as route flapping)\n    o Number of routes per interface in the\
    \ tables\n    o Next hop count stability\n    o Short term ICMP behavior\n"
- title: 3.3.  Categorization Based on Availability of Metrics
  contents:
  - "3.3.  Categorization Based on Availability of Metrics\n   To be able to retrieve\
    \ metrics, the corresponding variables must be\n   accessible at every network\
    \ object which is part of the management\n   domain for which statistics are being\
    \ collected.\n   Some metrics are easily retrievable because they are defined\
    \ as\n   variables in the Internet Standard MIB.  Other metrics may be\n   retrievable\
    \ because they are part of some vendor's private enterprise\n   MIB subtree. \
    \ Finally, some metrics are considered irretrievable,\n   either because they\
    \ are not possible to include in the SNMP concept\n   or because their measurement\
    \ would require extensive polling (loading\n   the network with management traffic).\n\
    \   The metrics categorized below could each be judged as important in\n   evaluating\
    \ network behavior.  This list may serve as a basis for\n   revisiting the decisions\
    \ on which metrics are to be regarded as\n   reasonable and desirable to collect.\
    \ If the availability of the\n   metrics listed below changes, these decisions\
    \ may change.\n"
- title: 3.3.1.  Per Interface Variables Already in Internet Standard MIB (thus
  contents:
  - "3.3.1.  Per Interface Variables Already in Internet Standard MIB (thus\n    \
    \    easy to retrieve)\n           ifInUcastPkts   (unicast packets in)\n    \
    \       ifOutUcastPkts  (unicast packets out)\n           ifInNUcastPkts  (non-unicast\
    \ packets in\n           ifOutNUcastPkts (non-unicast packets out)\n         \
    \  ifInOctets      (octets in)\n           ifOutOctets     (octets out)\n    \
    \       ifOperStatus    (line status)\n"
- title: 3.3.2.  Per Interface Variables in Internet Private Enterprise MIB (thus
  contents:
  - "3.3.2.  Per Interface Variables in Internet Private Enterprise MIB (thus\n  \
    \      could sometimes be retrievable)\n           discarded packets in\n    \
    \       discarded packets out\n           congestion events in\n           congestion\
    \ events out\n           aggregate errors\n           interface resets\n"
- title: 3.3.3.  Per Interface Variables Needing High Resolution Polling (which
  contents:
  - "3.3.3.  Per Interface Variables Needing High Resolution Polling (which\n    \
    \    is hard due to resulting network load)\n           interface queue length\n\
    \           seconds missing stats\n           interface unavailable\n        \
    \   route changes\n           interface next hop count\n"
- title: 3.3.4.  Per Interface Variables not in any Known MIB (thus impossible
  contents:
  - "3.3.4.  Per Interface Variables not in any Known MIB (thus impossible\n     \
    \   to retrieve using SNMP but possible to include in a MIB)\n           link\
    \ layer packets in\n           link layer packets out\n           link layer octets\
    \ in\n           link layer octets out\n           packet interarrival times\n\
    \           packet size distribution\n"
- title: 3.3.5.  Per Node Variables (not categorized here)
  contents:
  - "3.3.5.  Per Node Variables (not categorized here)\n           per-protocol packets\
    \ in\n           per-protocol packets out\n           per-protocol octets in\n\
    \           per-protocol octets out\n           packets discarded in\n       \
    \    packets discarded out\n           packet size distribution\n           system\
    \ uptime\n           poll delta time\n           reboot count\n"
- title: 3.3.6.  Metrics not Retrievable with SNMP
  contents:
  - "3.3.6.  Metrics not Retrievable with SNMP\n           delays (RTTs) on different\
    \ protocol layers\n           application layer availabilities\n           peak\
    \ behavior metrics\n"
- title: 3.4.  Recommended Metrics
  contents:
  - "3.4.  Recommended Metrics\n   A large number of metrics could be considered for\
    \ collection in the\n   process of doing network statistics. To facilitate general\
    \ consensus\n   for this model, there is a need to define a minimal set of metrics\n\
    \   that are both essential and retrievable in a majority of today's\n   network\
    \ objects.  General retrievability is equated with presence in\n   the Internet\
    \ Standard MIB.\n   The following metrics from the Internet Standard MIB were\
    \ chosen as\n   being desirable and reasonable:\n   For each interface:\n    \
    \       ifInOctets      (octets in)\n           ifOutOctets     (octets out)\n\
    \           ifInUcastPkts   (unicast packets in)\n           ifOutUcastPkts  (unicast\
    \ packets out)\n           ifInNUcastPkts  (non-unicast packets in)\n        \
    \   ifOutNUcastPkts (non-unicast packets out)\n           ifInDiscards    (in\
    \ discards)\n           ifOutDiscards   (out discards)\n           ifOperStatus\
    \    (line status)\n   For each node:\n           ipForwDatagrams (IP forwards)\n\
    \           ipInDiscards    (IP in discards)\n           sysUpTime       (system\
    \ uptime)\n"
- title: 4.  Polling Frequencies
  contents:
  - "4.  Polling Frequencies\n   The purpose of polling at specified intervals is\
    \ to gather statistics\n   to serve as a basis for trend and capacity planning.\
    \ From the\n   operational data it should be possible to derive engineering and\n\
    \   management data. It should be noted that all polling and retention\n   values\
    \ given below are recommendations and are not mandatory.\n"
- title: 4.1.  Variables Needing High Resolution Polling
  contents:
  - "4.1.  Variables Needing High Resolution Polling\n   To be able to detect peak\
    \ behavior, it is recommended that a period\n   of 1 minute (60 seconds) at a\
    \ maximum be used in gathering traffic\n   data. The metrics to be collected at\
    \ this frequency are:\n   for each interface\n           ifInOctets      (octets\
    \ in)\n           ifOutOctets     (octets out)\n           ifInUcastPkts   (unicast\
    \ packets in)\n           ifOutUcastPkts  (unicast packets out)\n   If it is not\
    \ possible to gather data at this high polling frequency,\n   it is recommended\
    \ that an exact multiple of 60 seconds be used. The\n   initial polling frequency\
    \ value will be part of the stored\n   statistical data as described in section\
    \ 6.1.2 below.\n"
- title: 4.2.  Variables not Needing High Resolution Polling
  contents:
  - "4.2.  Variables not Needing High Resolution Polling\n   The remainder of the\
    \ recommended variables to be gathered, i.e.,\n   For each interface:\n      \
    \     ifInNUcastPkts  (non-unicast packets in)\n           ifOutNUcastPkts (non-unicast\
    \ packets out)\n           ifInDiscards    (in discards)\n           ifOutDiscards\
    \   (out discards)\n           ifOperStatus    (line status)\n   and for each\
    \ node:\n           ipForwDatagrams (IP forwards)\n           ipInDiscards   \
    \ (IP in discards)\n           sysUpTime       (system uptime)\n   could be collected\
    \ at a lower polling rate. No polling rate is\n   specified, but it is recommended\
    \ that the period chosen be an exact\n   multiple of 60 seconds.\n"
- title: 5.  Pre-Processing of Raw Statistical Data
  contents:
  - '5.  Pre-Processing of Raw Statistical Data

    '
- title: 5.1.  Optimizing and Concentrating Data to Resources
  contents:
  - "5.1.  Optimizing and Concentrating Data to Resources\n   To avoid storing redundant\
    \ data in what might be a shared file\n   system, it is desirable to preprocess\
    \ the raw data. For example, if a\n   link is down there is no need to continuously\
    \ store a counter which\n   is not changing. The use of the variables sysUpTime\
    \ and ifOperStatus\n   makes it possible not to have to continuously store data\
    \ collected\n   from links and nodes where no traffic has been transmitted for\
    \ some\n   period of time.\n   Another aspect of processing is to decouple the\
    \ data from the raw\n   interface being polled. The intent should be to convert\
    \ such data\n   into the resource of interest as, for example, the traffic on\
    \ a given\n   link. Changes of interface in a gateway for a given link should\
    \ not\n   be visible in the resulting data.\n"
- title: 5.2.  Aggregation of Data
  contents:
  - "5.2.  Aggregation of Data\n   At many sites, the volume of data generated by\
    \ a polling period of 1\n   minute will make aggregation of the stored data desirable\
    \ if not\n   necessary.\n   Aggregation here refers to the replacement of data\
    \ values on a number\n   of time intervals by some function of the values over\
    \ the union of\n   the intervals.  Either raw data or shorter-term aggregates\
    \ may be\n   aggregated.  Note that aggregation reduces the amount of data, but\n\
    \   also reduces the available information.\n   In this model, the function used\
    \ for the aggregation is either the\n   arithmetic mean or the maximum, depending\
    \ on whether it is desired to\n   track the average or peak value of a variable.\n\
    \   Details of the layout of the aggregated entries in the data file are\n   given\
    \ in section 6.1.3.\n   Suggestions for aggregation periods:\n   Over a\n    \
    \       24 hour period        aggregate to 15 minutes,\n           1 month period\
    \        aggregate to 1 hour,\n           1 year period         aggregate to 1\
    \ day\n"
- title: 6.  Storing of Statistical Data
  contents:
  - "6.  Storing of Statistical Data\n   This section describes a format for the storage\
    \ of statistical data.\n   The goal is to facilitate a common set of tools for\
    \ the gathering,\n   storage and analysis of statistical data. The format is defined\
    \ with\n   the intent of minimizing redundant information and thus minimizing\n\
    \   storage requirements. If a client server based model for retrieving\n   remote\
    \ statistical data were later developed, the specified storage\n   format could\
    \ be used as the transmission protocol.\n   This model is intended to define an\
    \ interchange file format, which\n   would not necessarily be used for actual\
    \ data storage.  That means\n   its goal is to provide complete, self-contained,\
    \ portable files,\n   rather than to describe a full database for storing them.\n"
- title: 6.1.  The Storage Format
  contents:
  - "6.1.  The Storage Format\n   All white space (including tabs, line feeds and\
    \ carriage returns)\n   within a file is ignored.  In addition all text from a\
    \ # symbol to\n   the following end of line (inclusive) is also ignored.\n"
- title: stat-data    ::= <stat-section> [ <FS> <stat-section> ]
  contents:
  - 'stat-data    ::= <stat-section> [ <FS> <stat-section> ]

    '
- title: stat-section ::= <device-section> | <label-section> | <data-section>
  contents:
  - "stat-section ::= <device-section> | <label-section> | <data-section>\n   A data\
    \ file must contain at least one device section and at least one\n   label section.\
    \  At least one data section must be associated with\n   each label section. \
    \ A device section must precede any data section\n   which uses tags defined within\
    \ it.\n   A data section may appear in the file (in which case it is called an\n\
    \   internal data section and is preceded by a label section) or in\n   another\
    \ file (in which case it is called an external data section and\n   is specified\
    \ in an external label section).  Such an external file\n   may contain one and\
    \ only one data section.\n   A label section indicates the start and finish times\
    \ for its\n   associated data section or sections, and a list of the names of\
    \ the\n   tags they contain.  Within a data file there is an ordering of label\n\
    \   sections.  This depends only upon their relative position in the\n   file.\
    \  All internal data sections associated with the first label\n   record must\
    \ precede those associated with the second label record,\n   and so on.\n   Here\
    \ are some examples of valid data files:\n       <label-s> <device-s> <data-s>\
    \ <data-s>\n       <label-s> <device-s> <data-s> <device-s> <data-s> <data-s>\n\
    \   Both these files start with a label section giving the times and\n   tag-name\
    \ lists for the device and data sections which follow.\n       <dev-s> <label-s>\
    \ <label-s> <label-s>\n   This file begins with a device section (which specifies\
    \ tags used in\n   its data sections) then has three 'external' label sections,\
    \ each of\n   which points to a separate data section.  The data sections need\
    \ not\n   use all the tags defined in the device section; this is indicated by\n\
    \   the tag-name    lists in their label sections.\n      <default-dev> <dev-1>\
    \ <label-1> <dev-2> <label-2> ..\n   In this example default-dev is a full device\
    \ section, including a\n   complete tag-table, with initial polling and aggregation\
    \ periods\n   specified for each variable in each variable-field.  There is no\n\
    \   label or data for default-dev--it is there purely to provide default\n   tag-list\
    \ information.  Dev-1, dev-2, ... are device sections for a\n   series of different\
    \ devices.  They each have their description fields\n   (network-name, router-name,\
    \ etc), but no tag-table.  Instead they\n   rely on using the tag-table from default-device.\
    \  A default-dev\n   record, if present, must be the first item in the data file.\n\
    \   Label-1, label-2, etc. are label sections which point to files\n   containing\
    \ data sections for each device.\n"
- title: 6.1.1.  The Label Section
  contents:
  - "6.1.1.  The Label Section\n   label-section    ::= BEGIN_LABEL <FS> <data-location>\
    \ <FS>\n                           <tag-name-list> <FS>\n                    \
    \       <start-time> <FS> <stop-time> <FS> END_LABEL\n   data-location    ::=\
    \ <data-file-name> | <empty>\n   tag-name-list    ::= <LEFT> <tag> [ <FS> <tag>\
    \ ] <RIGHT>\n   The label section gives the start and stop times for its\n   corresponding\
    \ data section (or sections) and a list of the tags it\n   uses.  If a data location\
    \ is given it specifies the name of a file\n   containing its data section; otherwise\
    \ the data section follows in\n   this file.\n   start-time       ::= <time-string>\n\
    \   stop-time        ::= <time-string>\n   data-file-name   ::= <ASCII-string>\n\
    \   time-string      ::= <year><month><day><hour><minute><second>\n   year   \
    \          ::= <digit><digit><digit><digit>\n   month            ::= 01..12\n\
    \   day              ::= 01..31\n   hour             ::= 00..23\n   minute   \
    \        ::= 00..59\n   second           ::= <float>\n   The start-time and stop-time\
    \ are specified in UTC.\n   A maximum of 60.0 is specified for 'seconds' so as\
    \ to allow for leap\n   seconds, as is done (for example) by ntp. If a time-zone\
    \ changes\n   during a data file--e.g.  because daylight savings time has\n  \
    \ ended--this should be recorded by ending the current data section,\n   writing\
    \ a device section with the new time-zone and starting a new\n   data section.\n"
- title: 6.1.2.  The Device Section
  contents:
  - "6.1.2.  The Device Section\n   device-section  ::= BEGIN_DEVICE <FS> <device-field>\
    \ <FS> END_DEVICE\n   device-field   ::= <network-name><FS><router-name><FS><link-name<FS>\n\
    \                          <bw-value><FS><proto-type><FS><proto-addr><FS>\n  \
    \                        <time-zone> <optional-tag-table>\n   optional-tag-table\
    \  ::= <FS> <tag-table> | <empty>\n   network-name    ::= <ASCII-string>\n   router-name\
    \     ::= <ASCII-string>\n   link-name       ::= <ASCII-string>\n   bw-value \
    \       ::= <float>\n   proto-type      ::= IP | DECNET | X.25 | CLNS | IPX |\
    \ AppleTalk\n   proto-addr      ::= <ASCII-string>\n   time-zone       ::= [+|-]\
    \ [00..13] [00..59]\n   tag-table       ::= <LEFT> <tag-desc> [ <FS> <tag-desc>\
    \ ] <RIGHT>\n   tag-desc        ::= <tag> <FS> <tag-class> <FS> <variable-field-list>\n\
    \   tag             ::= <ASCII-string>\n   tag-class       ::= total | peak\n\
    \   variable-field-list    ::= <LEFT> <variable-field>\n                     \
    \            [ <FS> <variable-field> ] <RIGHT>\n   variable-field         ::=\
    \ <variable-name><FS><initial-polling-period>\n                              \
    \   <FS> <aggregation-period>\n   variable-name          ::= <ASCII-string>\n\
    \   initial-polling-period ::= <integer>\n   aggregation-period     ::= <integer>\n\
    \   The network-name is a human readable string indicating to which\n   network\
    \ the logged data belong.\n   The router-name is given as an ASCII string, allowing\
    \ for styles\n   other than IP domain names (which are names of interfaces, not\n\
    \   routers).\n   The link-name is a human readable string indicating the connectivity\n\
    \   of the link where from the logged data is gathered.\n   The units for bandwidth\
    \ (bw-value) are bits per second, and are given\n   as a floating-point number,\
    \ e.g. 1536000 or 1.536e6.  A zero value\n   indicates that the actual bandwidth\
    \ is unknown; one instance of this\n   would be a Frame Relay link with Committed\
    \ Information Rate different\n   from Burst Rate.\n   The proto-type field describes\
    \ to which network architecture the\n   interface being logged is connected. \
    \ Valid types are IP, DECNET,\n   X.25, CLNS, IPX and AppleTalk.\n   The network\
    \ address (proto-addr) is the unique numeric address of the\n   interface being\
    \ logged. The actual form of this address is dependent\n   on the protocol type\
    \ as indicated in the proto-type field. For\n   Internet connected interfaces\
    \ the dotted-quad notation should be\n   used.\n   The time-zone indicates the\
    \ time difference that should be added to\n   the time-stamp in the data-section\
    \ to give the local time for the\n   logged interface.  Note that the range for\
    \ time-zone is sufficient to\n   allow for all possibilities, not just those which\
    \ fall on 30-minute\n   multiples.\n   The tag-table lists all variables being\
    \ polled. Variable names are\n   the fully qualified Internet MIB names. The table\
    \ may contain\n   multiple tags. Each tag must be associated with only one polling\
    \ and\n   aggregation period. If variables are being polled or aggregated at\n\
    \   different periods, a separate tag in the table must be used for each\n   period.\n\
    \   As variables may be polled with different polling periods within the\n   same\
    \ set of logged data, there is a need to explicitly associate a\n   polling period\
    \ with each variable. After processing, the actual\n   period covered may have\
    \ changed compared to the initial polling\n   period and this should be noted\
    \ in the aggregation period field.  The\n   initial polling period and aggregation\
    \ period are given in seconds.\n   Original data values, and data values which\
    \ have been aggregated by\n   adding them together, will have a tag-class of 'total.'\
    \  Data values\n   which have been aggregated by finding the maximum over an aggregation\n\
    \   time interval will have a tag-class of 'peak.'\n   The tag-table and variable-field-lists\
    \ are enclosed in brackets,\n   making the extent of each obvious.  Without the\
    \ brackets a parser\n   would have difficulty distinguishing between a variable\
    \ name\n   (continuing the variable-field list for this tag) or a tag (starting\n\
    \   the next tag of the tag table).  To make the distinction clearer to a\n  \
    \ human reader one should use different kinds of brackets for each, for\n   example\
    \ {} for the tag-table list and [] for the variable-field\n   lists.\n"
- title: 6.1.3.  The Data Section
  contents:
  - "6.1.3.  The Data Section\n   data-section     ::= BEGIN_DATA <FS> <data-field>\n\
    \                           [ <FS> <data-field> ] <FS> END_DATA\n   data-field\
    \       ::= <time-string> <FS> <tag> <FS>\n                           <poll-delta>\
    \ <FS> <delta-val-list>\n   delta-val-list   ::= LEFT <delta-val> [ <FS> <delta-val>\
    \ ] RIGHT\n   poll-delta       ::= <integer>\n   delta-val        ::= <integer>\n\
    \   FS            ::= , | ; | :\n   LEFT          ::= ( | [ | {\n   RIGHT    \
    \     ::= ) | ] | }\n   A data-field contains values for each variable in the\
    \ specified tag.\n   A new data field should be written for each separate poll;\
    \ there\n   should be a one-to-one mapping betwen variables and values.  Each\n\
    \   data-field begins with the timestamp for this poll followed by the\n   tag\
    \ defining the polled variables followed by a polling delta value\n   giving the\
    \ period of time in seconds since the previous poll. The\n   variable values are\
    \ stored as delta values for counters and as\n   absolute values for non-counter\
    \ values such as OperStatus. The\n   timestamp is in UTC and the time-zone field\
    \ in the device section is\n   used to compute the local time for the device being\
    \ logged.\n   Comma, semicolon or colon may be used as a field separator.  Normally\n\
    \   one would use commas within a line, semicolon at the end of a line\n   and\
    \ a colon after keywords such as BEGIN_LABEL.\n   Parentheses (), brackets []\
    \ or braces {} may be used as LEFT and\n   RIGHT brackets around tag-name, tag-table\
    \ and delta-val lists.  These\n   should be used in corresponding pairs, although\
    \ combinations such as\n   (], [} etc. are syntactically valid.\n"
- title: 6.2.  Storage Requirement Estimations
  contents:
  - "6.2.  Storage Requirement Estimations\n   The header sections are not counted\
    \ in this example.  Assuming that\n   the maximum polling intensity is used for\
    \ all 12 recommended\n   variables, that the size in ASCII of each variable is\
    \ eight bytes and\n   that there are no timestamps which are fractional seconds,\
    \ the\n   following calculations will give an estimate of storage requirements\n\
    \   for one year of storing and aggregating statistical data.\n   Assuming that\
    \ data is saved according to the scheme\n           1 minute non-aggregated  \
    \         saved 1 day,\n           15 minute aggregation period      saved 1 week,\n\
    \           1 hour aggregation period         saved 1 month and\n           1\
    \ day aggregation period          saved 1 year,\n   this will give:\n   Size of\
    \ one entry for each aggregation period:\n                                   \
    \ Aggregation periods\n                         1 min       15 min      1 hour\
    \     1 day\n       Timestamp           14          14          14         14\n\
    \       Tag                  5           5           5          5\n       Poll-Delta\
    \           2           3           4          5\n       Total values        96\
    \          96          96         96\n       Peak values          0          96\
    \         192        288\n       Field separators    14          28          42\
    \         56\n       Total entry size   131         242         353        464\n\
    \   For each day 60*24 = 1440 entries with a total size of 1440*131 = 189\n  \
    \ kB.\n   For each week 4*24*7 = 672 entries are stored with a total size of\n\
    \   672*242 = 163 kB.\n   For each month 24*30 = 720 entries are stored with a\
    \ total size of\n   720*353 = 254 kB.\n   For each year 365 entries are stored\
    \ with a total size of 365*464 =\n   169 kB.\n   Grand total estimated storage\
    \ for during one year = 775 kB.\n"
- title: 7.  Report Formats
  contents:
  - "7.  Report Formats\n   This section suggests some report formats and defines\
    \ the metrics to\n   be used in such reports.\n"
- title: 7.1.  Report Types and Contents
  contents:
  - "7.1.  Report Types and Contents\n   There are longer-term needs for monthly and\
    \ yearly reports showing\n   long-term tendencies in the network. There are short-term\
    \ weekly\n   reports giving information about medium-term changes in network\n\
    \   behavior which could    serve as input to the medium-term engineering\n  \
    \ approach.  Finally, there are daily reports giving the instantaneous\n   overviews\
    \ needed in the daily operations of a network.\n   These reports should give information\
    \ on:\n         Offered Load              Total traffic at external interfaces\n\
    \         Offered Load              Segmented by \"Customer\"\n         Offered\
    \ Load              Segmented protocol/application.\n         Resource Utilization\
    \      Link/Router\n"
- title: 7.2.  Content of the Reports
  contents:
  - '7.2.  Content of the Reports

    '
- title: 7.2.1.  Offered Load by Link
  contents:
  - "7.2.1.  Offered Load by Link\n       Metric categories: input  octets  per external\
    \ interface\n                          output octets  per external interface\n\
    \                          input  packets per external interface\n           \
    \               output packets per external interface\n   The intent is to visualize\
    \ the overall trend of network traffic on\n   each connected external interface.\
    \ This could be done as a bar-chart\n   giving the totals for each of the four\
    \ metric categories.  Based on\n   the time period selected this could be done\
    \ on a hourly, daily,\n   monthly or yearly basis.\n"
- title: 7.2.2.  Offered Load by Customer
  contents:
  - "7.2.2.  Offered Load by Customer\n       Metric categories: input  octets  per\
    \ customer\n                          output octets  per customer\n          \
    \                input  packets per customer\n                          output\
    \ packets per customer\n   The recommendation here is to sort the offered load\
    \ (in decreasing\n   order) by customer. Plot the function F(n), where F(n) is\
    \ percentage\n   of total traffic offered to the top n customers or the function\
    \ f(n)\n   where f is the percentage of traffic offered by the nth ranked\n  \
    \ customers.\n   The definition of what is meant by a \"customer\" has to be done\n\
    \   locally at the site where the statistics are being gathered.\n   A cumulative\
    \ plot could be useful as an overview of how traffic is\n   distributed among\
    \ users since it enables one to quickly pick off what\n   fraction of the traffic\
    \ comes from what number of \"users.\"\n   A method of displaying both average\
    \ and peak behaviors in the same\n   bar chart is to compute both the average\
    \ value over some period and\n   the peak value during the same period. The average\
    \ and peak values\n   are then displayed in the same bar.\n"
- title: 7.2.3.  Resource Utilization Reporting
  contents:
  - '7.2.3.  Resource Utilization Reporting

    '
- title: 7.2.3.1.  Utilization as Maximum Peak Behavior
  contents:
  - "7.2.3.1.  Utilization as Maximum Peak Behavior\n   Link utilization is used to\
    \ capture information on network loading.\n   The polling interval must be small\
    \ enough to be significant with\n   respect to variations in human activity, since\
    \ this is the activity\n   that drives variations in network loading. On the other\
    \ hand, there\n   is no need to make it smaller than an interval over which excessive\n\
    \   delay would notably impact productivity. For this reason, 30 minutes\n   is\
    \ a good estimate of the time at which people remain in one activity\n   and over\
    \ which prolonged high delay will affect their productivity.\n   To track 30 minute\
    \ variations, there is a need to sample twice as\n   frequently, i.e., every 15\
    \ minutes. Use of the polling period of 10\n   minutes recommended above should\
    \ be sufficient to capture variations\n   in utilization.\n   A possible format\
    \ for reporting utilizations seen as peak behaviors\n   is to use a method of\
    \ combining averages and peak measurements onto\n   the same diagram. Compare\
    \ for example peak-meters on audio-equipment.\n   If, for example, a diagram contains\
    \ the daily totals for some period,\n   then the peaks would be the most busy\
    \ hour during each day. If the\n   diagram were totals on an hourly basis then\
    \ the peak would be the\n   maximum ten-minute period in each hour.\n   By combining\
    \ the average and the maximum values for a certain time\n   period, it should\
    \ be possible to detect line utilization and\n   bottlenecks due to temporary\
    \ high loads.\n"
- title: 7.2.3.2.  Utilization Visualized as a Frequency Distribution of Peaks
  contents:
  - "7.2.3.2.  Utilization Visualized as a Frequency Distribution of Peaks\n   Another\
    \ way of visualizing line utilization is to put the ten-minute\n   samples in\
    \ a histogram showing the relative frequency among the\n   samples versus the\
    \ load.\n"
- title: 8.  Considerations for Future Development
  contents:
  - "8.  Considerations for Future Development\n   This memo is the first effort at\
    \ formalizing a common basis for\n   operational statistics. One major guideline\
    \ in this work has been to\n   keep the model simple to facilitate the easy integration\
    \ of this\n   model by vendors and NOCs into their operational tools.\n   There\
    \ are, however, some ideas that could progress further to expand\n   the scope\
    \ and usability of the model.\n"
- title: 8.1.  A Client/Server Based Statistical Exchange System
  contents:
  - "8.1.  A Client/Server Based Statistical Exchange System\n   A possible path for\
    \ development could be the definition of a\n   client/server based architecture\
    \ for providing Internet access to\n   operational statistics. Such an architecture\
    \ envisions that each NOC\n   install a server which provides locally collected\
    \ information in a\n   variety of forms for clients.\n   Using a query language,\
    \ the client should be able to define the\n   network object, the interface, the\
    \ metrics and the time period to be\n   provided.  Using a TCP-based protocol,\
    \ the server will transmit the\n   requested data.  Once these data are received\
    \ by the client, they\n   could be processed and presented by a variety of tools.\
    \ One\n   possibility is to have an X-Window based tool that displays defined\n\
    \   diagrams from data, supporting such diagrams being fed into the X-\n   Window\
    \ tool directly from the statistical server. Another\n   complementary method\
    \ would be to generate PostScript output to print\n   the diagrams. In all cases\
    \ it should be possible to store the\n   retrieved data locally for later processing.\n\
    \   The client/server approach is discussed further by Henry Clark in\n   RFC\
    \ 1856.\n"
- title: 8.2.  Inclusion of Variables not in the Internet Standard MIB
  contents:
  - "8.2.  Inclusion of Variables not in the Internet Standard MIB\n   As has been\
    \ pointed out above in the categorization of metrics, there\n   are metrics which\
    \ certainly could have been recommended if they were\n   available in the Internet\
    \ Standard MIB. To facilitate the inclusion\n   of such metrics in the set of\
    \ recommended metrics, it will be\n   necessary to specify a subtree in the Internet\
    \ Standard MIB\n   containing variables judged necessary in the scope of performing\n\
    \   operational statistics.\n"
- title: 8.3.  Detailed Resource Utilization Statistics
  contents:
  - "8.3.  Detailed Resource Utilization Statistics\n   One area of interest not covered\
    \ in the above description of metrics\n   and presentation formats is to present\
    \ statistics on detailed views\n   of the traffic flows. Such views could include\
    \ statistics on a per\n   application basis and on a per protocol basis. Today\
    \ such metrics are\n   not part of the Internet Standard MIB. Tools like the NSF\
    \ NNStat are\n   being used to gather information of this kind. A possible way\
    \ to\n   achieve such data could be to define an NNStat MIB or to include such\n\
    \   variables in the above suggested operational statistics MIB subtree.\n"
- title: APPENDIX A
  contents:
  - 'APPENDIX A

    '
- title: Some formulas for statistical aggregation
  contents:
  - "Some formulas for statistical aggregation\n   The following naming conventions\
    \ are used:\n   For poll values poll(n)_j\n           n = Polling or aggregation\
    \ period\n           j = Entry number\n   poll(900)_j is thus the 15 minute total\
    \ value.\n   For peak values peak(n,m)_j\n           n = Period over which the\
    \ peak is calculated\n           m = The peak period length\n           j = Entry\
    \ number\n   peak(3600,900)_j is thus the maximum 15 minute period calculated\
    \ over\n   1 hour.\n   Assume a polling over 24 hour period giving 1440 logged\
    \ entries.\n       =========================\n       Without any aggregation we\
    \ have\n           poll(60)_1\n           ......\n           poll(60)_1440\n \
    \      ========================\n       15 minute aggregation will give 96 entries\
    \ of total values\n           poll(900)_1\n           ....\n           poll(900)_96\n\
    \                         j=(n+14)\n           poll(900)_k = SUM  poll(60)_j \
    \ n=1,16,31,...1426\n                         j=n              k=1,2,....,96\n\
    \          There will also be 96 one-minute peak values.\n                   \
    \        j=(n+14)\n          peak(900,60)_k = MAX poll(60)_j  n=1,16,31,....,1426\n\
    \                           j=n                k=1,2,....,96\n       =======================\n\
    \   The next aggregation step is from 15 minutes to 1 hour.  This gives\n   24\
    \ totals.\n                              j=(n+3)\n          poll(3600)_k = SUM\
    \  poll(900)_j  n=1,5,9,.....,93\n                              j=n          k=1,2,....,24\n\
    \   and 24 one-minute peaks calculated over each hour.\n                     \
    \        j=(n+3)\n          peak (3600,60)_k = MAX  peak(900,60)_j  n=1,5,9,.....,93\n\
    \                             j=n                  k=1,2,....24\n   and finally\
    \ 24 15-minute peaks calculated over each hour:\n                            j=(n+3)\n\
    \          peak (3600,900) = MAX poll(900)_j  n=1,5,9,.....,93\n             \
    \               j=n\n       ===================\n   The next aggregation step\
    \ is from 1 hour to 24 hours.  For each day\n   with 1440 entries as above this\
    \ will give\n                           j=(n+23)\n           poll(86400)_k = SUM\
    \  poll(3600)_j  n=1,25,51,.......\n                           j=n           \
    \     k=1,2............\n                                j=(n+23)\n          \
    \ peak(86400,60)_k   = MAX peak(3600,60)_j  n=1,25,51,....\n                 \
    \               j=n                  k=1,2.........\n   which gives the busiest\
    \ 1 minute period over 24 hours.\n                                j=(n+23)\n \
    \          peak(86400,900)_k  = MAX peak(3600,900)_j  n=1,25,51,....\n       \
    \                         j=n                   k=1,2,........\n   which gives\
    \ the busiest 15 minute period over 24 hours.\n                              \
    \  j=(n+23)\n           peak(86400,3600)_k = MAX poll(3600)_j  n=1,25,51,....\n\
    \                                j=n               k=1,2,........\n   which gives\
    \ the busiest 1 hour period over 24 hours.\n       ===================\n   There\
    \ will probably be a difference between the three peak values in\n   the final\
    \ 24 hour aggregation. A smaller peak period will give higher\n   values than\
    \ a longer one, i.e., if adjusted to be numerically\n   comparable.\n       poll(86400)/3600\
    \ < peak(86400,3600) < peak(86400,900)*4\n              < peak(86400,60)*60\n"
- title: APPENDIX B
  contents:
  - "APPENDIX B\n   An example\n   Assuming below data storage:\n   BEGIN_DEVICE:\n\
    \      ...\n   {\n      UNI-1,total: [ifInOctet,  60, 60,ifOutOctet,      60,\
    \ 60];\n      BRD-1,total: [ifInNUcastPkts,300,300,ifOutNUcastPkts,300,300]\n\
    \   }\n      ...\n   which gives\n   BEGIN_DATA:\n      19920730000000,UNI-1,60:(val1-1,val2-1);\n\
    \      19920730000060,UNI-1,60:(val1-2,val2-2);\n      19920730000120,UNI-1,60:(val1-3,val2-3);\n\
    \      19920730000180,UNI-1,60:(val1-4,val2-4);\n      19920730000240,UNI-1,60:(val1-5,val2-5);\n\
    \      19920730000300,UNI-1,60:(val1-6,val2-6);\n      19920730000300,BRD-1,300:(val1-7,val2-7);\n\
    \      19920730000360,UNI-1,60:(val1-8,val2-8);\n      ...\n   Aggregation to\
    \ 15 minutes gives\n   BEGIN_DEVICE:\n       ...\n   {\n       UNI-1,total:  \
    \   [ifInOctet,      60,900,ifOutOctet,      60,900];\n       BRD-1,total:   \
    \  [ifInNUcastPkts,300,900,ifOutNUcastPkts,300,900];\n       UNI-2,peak:     \
    \ [ifInOctet,      60,900,ifOutOctet,      60,900];\n       BRD-2,peak:      [ifInNUcastPkts,300,900,ifOutNUcastPkts,300,900]\n\
    \   }\n       ...\n   where UNI-1 is the 15 minute total\n         BRD-1 is the\
    \ 15 minute total\n         UNI-2 is the 1 minute peak     over 15 minute (peak\
    \ = peak(1))\n         BRD-2 is the 5 minute peak     over 15 minute (peak = peak(1))\n\
    \   which gives\n   BEGIN_DATA:\n      19920730000900,UNI-1,900:(tot-val1,tot-val2);\n\
    \      19920730000900,BRD-1,900:(tot-val1,tot-val2);\n      19920730000900,UNI-2,900:(peak(1)-val1,peak(1)-val2);\n\
    \      19920730000900,BRD-2,900:(peak(1)-val1,peak(1)-val2);\n      19920730001800,UNI-1,900:(tot-val1,tot-val2);\n\
    \      19920730001800,BRD-1,900:(tot-val1,tot-val2);\n      19920730001800,UNI-2,900:(peak(1)-val1,peak(1)-val2);\n\
    \      19920730001800,BRD-2,900:(peak(1)-val1,peak(1)-val2);\n      ...\n   Next\
    \ aggregation step to 1 hour generates:\n   BEGIN_DEVICE:\n       ...\n   {\n\
    \      UNI-1,total: [ifInOctet,  60,3600,ifOutOctet,      60,3600];\n      BRD-1,total:\
    \ [ifInNUcastPkts,300,3600,ifOutNUcastPkts,300,3600];\n      UNI-2,peak:  [ifInOctet,\
    \  60,3600,ifOutOctet,      60,3600];\n      BRD-2,peak:  [ifInNUcastPkts,300,\
    \ 900,ifOutNUcastPkts,300, 900];\n      UNI-3,peak:  [ifInOctet,     900,3600,ifOutOctet,\
    \ 900,3600];\n      BRD-3,peak:  [ifInNUcastPkts,900,3600,ifOutNUcastPkts,900,3600]\n\
    \   }\n   where\n   UNI-1 is the one hour total\n   BRD-1 is the one hour total\n\
    \   UNI-2 is the  1 minute peak over 1 hour (peak of peak = peak(2))\n   BRD-2\
    \ is the  5 minute peak over 1 hour (peak of peak = peak(2))\n   UNI-3 is the\
    \ 15 minute peak over 1 hour (peak = peak(1))\n   BRD-3 is the 15 minute peak\
    \ over 1 hour (peak = peak(1))\n   which gives\n   BEGIN_DATA:\n      19920730003600,UNI-1,3600:(tot-val1,tot-val2);\n\
    \      19920730003600,BRD-1,3600:(tot-val1,tot-val2);\n      19920730003600,UNI-2,3600:(peak(2)-val1,peak(2)-val2);\n\
    \      19920730003600,BRD-2,3600:(peak(2)-val1,peak(2)-val2);\n      19920730003600,UNI-3,3600:(peak(1)-val1,peak(1)-val2);\n\
    \      19920730003600,BRD-3,3600:(peak(1)-val1,peak(1)-val2);\n      19920730007200,UNI-1,3600:(tot-val1,tot-val2);\n\
    \      19920730007200,BRD-1,3600:(tot-val1,tot-val2);\n      19920730007200,UNI-2,3600:(peak(2)-val1,peak(2)-val2);\n\
    \      19920730007200,BRD-2,3600:(peak(2)-val1,peak(2)-val2);\n      19920730007200,UNI-3,3600:(peak(1)-val1,peak(1)-val2);\n\
    \      19920730007200,BRD-3,3600:(peak(1)-val1,peak(1)-val2);\n      ...\n   Finally\
    \ aggregation step to 1 day generates:\n   BEGIN_DEVICE:\n      ...\n   {\n  \
    \ UNI-1,total: [ifInOctet,      60,86400,ifOutOctet, 60,86400];\n   BRD-1,total:\
    \ [ifInNUcastPkts, 300,86400,ifOutNUcastPkts, 300,86400];\n   UNI-2,peak:  [ifInOctet,\
    \      60,86400,ifOutOctet, 60,86400];\n   BRD-2,peak:  [ifInNUcastPkts, 300,\
    \  900,ifOutNUcastPkts, 300, 900];\n   UNI-3,peak:  [ifInOctet,      900,86400,ifOutOctet,\
    \  900,86400];\n   BRD-3,peak:  [ifInNUcastPkts, 900,86400,ifOutNUcastPkts, 900,86400];\n\
    \   UNI-4,peak:  [ifInOctet,      3600,86400,ifOutOctet, 3600,86400];\n   BRD-4,peak:\
    \  [ifInNUcastPkts,3600,86400,ifOutNUcastPkts,3600,86400]\n   }\n      ...\n \
    \  where\n   UNI-1 is the 24 hour total\n   BRD-1 is the 24 hour total\n   UNI-2\
    \ is the  1 minute peak over 24 hour\n       (peak of peak of peak = peak(3))\n\
    \   UNI-3 is the 15 minute peak over 24 hour (peak of peak = peak(2))\n   UNI-4\
    \ is the  1 hour peak over 24 hour (peak = peak(1))\n   BRD-2 is the  5 minute\
    \ peak over 24 hour\n       (peak of peak of peak = peak(3))\n   BRD-3 is the\
    \ 15 minute peak over 24 hour (peak of peak = peak(2))\n   BRD-4 is the  1 hour\
    \ peak over 24 hour (peak = peak(1))\n   which gives\n   BEGIN_DATA:\n      19920730086400,UNI-1,86400:(tot-val1,tot-val2);\n\
    \      19920730086400,BRD-1,86400:(tot-val1,tot-val2);\n      19920730086400,UNI-2,86400:(peak(3)-val1,peak(3)-val2);\n\
    \      19920730086400,BRD-2,86400:(peak(3)-val1,peak(3)-val2);\n      19920730086400,UNI-3,86400:(peak(2)-val1,peak(2)-val2);\n\
    \      19920730086400,BRD-3,86400:(peak(2)-val1,peak(2)-val2);\n      19920730086400,UNI-4,86400:(peak(1)-val1,peak(1)-val2);\n\
    \      19920730086400,BRD-4,86400:(peak(1)-val1,peak(1)-val2);\n      19920730172800,UNI-1,86400:(tot-val1,tot-val2);\n\
    \      19920730172800,BRD-1,86400:(tot-val1,tot-val2);\n      19920730172800,UNI-2,86400:(peak(3)-val1,peak(3)-val2);\n\
    \      19920730172800,BRD-2,86400:(peak(3)-val1,peak(3)-val2);\n      19920730172800,UNI-3,86400:(peak(2)-val1,peak(2)-val2);\n\
    \      19920730172800,UNI-3,86400:(peak(2)-val1,peak(2)-val2);\n      19920730172800,UNI-4,86400:(peak(1)-val1,peak(1)-val2);\n\
    \      19920730172800,BRD-4,86400:(peak(1)-val1,peak(1)-val2);\n      ...\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are discussed in Section 2.4.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Michael H. Lambert\n   Pittsburgh Supercomputing Center\n\
    \   4400 Fifth Avenue\n   Pittsburgh, PA  15213\n   USA\n   Phone: +1 412 268-4960\n\
    \   Fax:  +1 412 268-8200\n   EMail: lambert@psc.edu\n"
