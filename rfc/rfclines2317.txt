This document describes a way to do IN ADDR.ARPA delegation on non  octet boundaries for address spaces covering fewer than 256 addresses.
The proposed method should thus remove one of the objections to subnet on non octet boundaries but perhaps more significantly, make it possible to assign IP address space in smaller chunks than 24 bit prefixes, without losing the ability to delegate authority for the corresponding IN ADDR.ARPA mappings.
The proposed method is fully compatible with the original DNS lookup mechanisms specified in [1], i.e. there is no need to modify the lookup algorithm used, and there should be no need to modify any software which does DNS lookups.
The document also discusses some operational considerations to provide some guidance in implementing this method.
Motivation With the proliferation of classless routing technology, it has become feasible to assign address space on non octet boundaries.
In case of a very small organization with only a few hosts, assigning a full 24 bit prefix (what was traditionally referred to as a "class C network number") often leads to inefficient address space utilization.
One of the problems encountered when assigning a longer prefix (less address space)
is that it seems impossible for such an organization to maintain its own reverse ("IN ADDR.ARPA") zone autonomously.
By use of the reverse delegation method described below, the most important objection to assignment of longer prefixes to unrelated organizations can be removed.
Let us assume we have assigned the address spaces to three different parties as follows:
A 192.0.2.128/26 to organization B 192.0.2.192/26 to organization C
In the classical approach, this would lead to a single zone like this: $
The administration of this zone is problematic.
Authority for this zone can only be delegated once, and this usually translates into "this zone can only be administered by one organization."
The other organizations with address space that corresponds to entries in this zone would thus have to depend on another organization for their address to name translation.
With the proposed method, this potential problem can be avoided.
Classless IN ADDR.ARPA delegation Since a single zone can only be delegated once, we need more points to do delegation on to solve the problem above.
These extra points of delegation can be introduced by extending the IN ADDR.ARPA tree downwards, e.g. by using the first address or the first address and the network mask length (as shown below) in the corresponding address space to form the the first component in the name for the zones.
The following four zone files show how the problem in the motivation section could be solved using this method.
For each size 256 chunk split up using this method, there is a need to install close to 256 CNAME records in the parent zone.
Some people might view this as ugly; we will not argue that particular point.
It is however quite easy to automatically generate the CNAME resource records in the parent zone once and for all, if the way the address space is partitioned is known.
The advantage of this approach over the other proposed approaches for dealing with this problem is that there should be no need to modify any already deployed software.
In particular, the lookup mechanism in the DNS does not have to be modified to accommodate this splitting of the responsibility for the IPv4 address to name translation on "non dot" boundaries.
Furthermore, this technique has been in use for several years in many installations, apparently with no ill effects.
As usual, a resource record like $ORIGIN 2.0.192.in addr.arpa.
can be convienently abbreviated to $ORIGIN 2.0.192.in addr.arpa.
As [3] makes clear, these are legal, though some might feel unsightly.
Because these are not host names the restriction of [2] does not apply.
Modern clients and servers have an option to act in the liberal and correct fashion.
more visible and pedantic reviewers felt that the 'these are not hostnames' argument needed to be repeated.
Operational considerations This technique is intended to be used for delegating address spaces covering fewer than 256 addresses.
For delegations covering larger blocks of addresses the traditional methods (multiple delegations) can be used instead.
5.1 Recommended secondary name service
Some older versions of name server software will make no effort to find and return the pointed to name in CNAME records if the pointed  to name is not already known locally as cached or as authoritative data.
This can cause some confusion in resolvers, as only the CNAME record will be returned in the response.
To avoid this problem it is recommended that the authoritative name servers for the delegating zone (the zone containing all the CNAME records) all run as slave (secondary) name servers for the "child" zones delegated and pointed into via the CNAME records.
As a result of this method, the location of the zone containing the actual PTR records is no longer predefined.
This gives flexibility and some examples will be presented here.
An alternative to using the first address, or the first address and the network mask length in the corresponding address space, to name the new zones is to use some other (non numeric) name.
Thus it is also possible to point to an entirely different part of the DNS tree (i.e. outside of the IN ADDR.ARPA tree).
It would be necessary to use one of these alternate methods if two organizations somehow shared the same physical subnet (and corresponding IP address space) with no "neat" alignment of the addresses, but still wanted to administrate their own IN ADDR.ARPA mappings.
The following short example shows how you can point out of the IN  ADDR.ARPA tree: $ORIGIN 2.0.192.in addr.arpa.
This way you can actually end up with the name address and the (pointed to) address name mapping data in the same zone file some may view this as an added bonus as no separate set of secondaries for the reverse zone is required.
Do however note that the traversal via the IN ADDR.ARPA tree will still be done, so the CNAME records inserted there need to point in the right direction for this to work.
Sketched below is an alternative approach using the same solution: $ORIGIN 2.0.192.in addr.arpa.
It is clear that many possibilities exist which can be adapted to the specific requirements of the situation at hand.
5.3 Other operational issues Note that one cannot provide CNAME referrals twice for the same address space, i.e. you cannot allocate a /25 prefix to one organisation, and run IN ADDR.ARPA this way, and then have the organisation subnet the /25 into longer prefixes, and attempt to employ the same technique to give each subnet control of its own number space.
This would result in a CNAME record pointing to a CNAME record, which may be less robust overall.
Unfortunately, some old beta releases of the popular DNS name server implementation BIND 4.9.3 had a bug which caused problems if a CNAME record was encountered when a reverse lookup was made.
The beta releases involved have since been obsoleted, and this issue is resolved in the released code.
Some software manufacturers have included the defective beta code in their product.
In the few cases we know of, patches from the manufacturers are available or planned to replace the obsolete beta code involved.
Security Considerations With this scheme, the "leaf sites" will need to rely on one more site running their DNS name service correctly than they would be if they had a /24 allocation of their own, and this may add an extra component which will need to work for reliable name resolution.
Other than that, the authors are not aware of any additional security issues introduced by this mechanism.
The suggested scheme gives more flexibility in delegating authority in the IN ADDR.ARPA domain, thus making it possible to assign address space more efficiently without losing the ability to delegate the DNS authority over the corresponding address to name mappings.
