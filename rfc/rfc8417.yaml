- title: __initial_text__
  contents:
  - '                       Security Event Token (SET)

    '
- title: Abstract
  contents:
  - "Abstract\n   This specification defines the Security Event Token (SET) data\n\
    \   structure.  A SET describes statements of fact from the perspective\n   of\
    \ an issuer about a subject.  These statements of fact represent an\n   event\
    \ that occurred directly to or about a security subject, for\n   example, a statement\
    \ about the issuance or revocation of a token on\n   behalf of a subject.  This\
    \ specification is intended to enable\n   representing security- and identity-related\
    \ events.  A SET is a JSON\n   Web Token (JWT), which can be optionally signed\
    \ and/or encrypted.\n   SETs can be distributed via protocols such as HTTP.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8417.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction and Overview . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Notational Conventions  . . . . . . . . . . . . .\
    \ . . . .   5\n     1.2.  Definitions . . . . . . . . . . . . . . . . . . . .\
    \ . . .   5\n   2.  The Security Event Token (SET)  . . . . . . . . . . . . .\
    \ . .   6\n     2.1.  Illustrative Examples . . . . . . . . . . . . . . . . .\
    \ .   7\n       2.1.1.  SCIM Example  . . . . . . . . . . . . . . . . . . . .\
    \   7\n       2.1.2.  Logout Example  . . . . . . . . . . . . . . . . . . .  \
    \ 9\n       2.1.3.  Consent Example . . . . . . . . . . . . . . . . . . .  10\n\
    \       2.1.4.  RISC Example  . . . . . . . . . . . . . . . . . . . .  11\n  \
    \   2.2.  Core SET Claims . . . . . . . . . . . . . . . . . . . . .  11\n    \
    \ 2.3.  Explicit Typing of SETs . . . . . . . . . . . . . . . . .  13\n     2.4.\
    \  Security Event Token Construction . . . . . . . . . . . .  14\n   3.  Requirements\
    \ for SET Profiles . . . . . . . . . . . . . . . .  16\n   4.  Preventing Confusion\
    \ between SETs and Other JWTs  . . . . . .  17\n     4.1.  Distinguishing SETs\
    \ from ID Tokens  . . . . . . . . . . .  17\n     4.2.  Distinguishing SETs from\
    \ Access Tokens  . . . . . . . . .  18\n     4.3.  Distinguishing SETs from Other\
    \ Kinds of JWTs  . . . . . .  18\n   5.  Security Considerations . . . . . . .\
    \ . . . . . . . . . . . .  19\n     5.1.  Confidentiality and Integrity . . .\
    \ . . . . . . . . . . .  19\n     5.2.  Delivery  . . . . . . . . . . . . . .\
    \ . . . . . . . . . .  20\n     5.3.  Sequencing  . . . . . . . . . . . . . .\
    \ . . . . . . . . .  20\n     5.4.  Timing Issues . . . . . . . . . . . . . .\
    \ . . . . . . . .  20\n     5.5.  Preventing Confusion  . . . . . . . . . . .\
    \ . . . . . . .  21\n   6.  Privacy Considerations  . . . . . . . . . . . . .\
    \ . . . . . .  21\n   7.  IANA Considerations . . . . . . . . . . . . . . . .\
    \ . . . . .  22\n     7.1.  JSON Web Token Claims Registration  . . . . . . .\
    \ . . . .  22\n       7.1.1.  Registry Contents . . . . . . . . . . . . . . .\
    \ . . .  22\n     7.2.  Structured Syntax Suffix Registration . . . . . . . .\
    \ . .  22\n       7.2.1.  Registry Contents . . . . . . . . . . . . . . . . .\
    \ .  23\n     7.3.  Media Type Registration . . . . . . . . . . . . . . . . .\
    \  24\n       7.3.1.  Registry Contents . . . . . . . . . . . . . . . . . .  24\n\
    \   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  25\n  \
    \   8.1.  Normative References  . . . . . . . . . . . . . . . . . .  25\n    \
    \ 8.2.  Informative References  . . . . . . . . . . . . . . . . .  26\n   Acknowledgments\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  27\n   Authors' Addresses\
    \  . . . . . . . . . . . . . . . . . . . . . . .  28\n"
- title: 1.  Introduction and Overview
  contents:
  - "1.  Introduction and Overview\n   This specification defines an extensible Security\
    \ Event Token (SET)\n   data structure, which can be exchanged using protocols\
    \ such as HTTP.\n   The specification builds on the JSON Web Token (JWT) format\
    \ [RFC7519]\n   in order to provide a self-contained token that can be optionally\n\
    \   signed using JSON Web Signature (JWS) [RFC7515] and/or encrypted\n   using\
    \ JSON Web Encryption (JWE) [RFC7516].\n   This specification profiles the use\
    \ of JWT for the purpose of issuing\n   SETs.  This specification defines a base\
    \ format used by profiling\n   specifications to define actual events and their\
    \ meanings.  This\n   specification uses non-normative example events to demonstrate\
    \ how\n   events can be constructed.\n   This specification is scoped to security-\
    \ and identity-related\n   events.  While SETs may be used for other purposes,\
    \ the specification\n   only considers security and privacy concerns relevant\
    \ to identity and\n   personal information.\n   Security events are not commands\
    \ issued between parties.  A SET\n   describes statements of fact from the perspective\
    \ of an issuer about\n   a subject (e.g., a web resource, token, IP address, the\
    \ issuer\n   itself).  These statements of fact represent a logical event that\n\
    \   occurred directly to or about a security subject, for example, a\n   statement\
    \ about the issuance or revocation of a token on behalf of a\n   subject.  A security\
    \ subject may be permanent (e.g., a user account)\n   or temporary (e.g., an HTTP\
    \ session) in nature.  A state change could\n   describe a direct change of entity\
    \ state, an implicit change of\n   state, or other higher-level security statements\
    \ such as:\n   o  The creation, modification, removal of a resource.\n   o  The\
    \ resetting or suspension of an account.\n   o  The revocation of a security token\
    \ prior to its expiry.\n   o  The logout of a user session.\n   o  An indication\
    \ that a user has been given control of an email\n      identifier that was previously\
    \ controlled by another user.\n   While subject state changes are often triggered\
    \ by a user agent or\n   security subsystem, the issuance and transmission of\
    \ an event may\n   occur asynchronously and in a back channel to the action that\
    \ caused\n   the change that generated the security event.  Subsequently, a SET\n\
    \   recipient, having received a SET, validates and interprets the\n   received\
    \ SET and takes its own independent actions, if any.  For\n   example, having\
    \ been informed of a personal identifier being\n   associated with a different\
    \ security subject (e.g., an email address\n   is being used by someone else),\
    \ the SET recipient may choose to\n   ensure that the new user is not granted\
    \ access to resources\n   associated with the previous user.  Or, the SET recipient\
    \ may not\n   have any relationship with the subject, and no action is taken.\n\
    \   While SET recipients will often take actions upon receiving SETs,\n   security\
    \ events cannot be assumed to be commands or requests.  The\n   intent of this\
    \ specification is to define a syntax for statements of\n   fact that SET recipients\
    \ may interpret for their own purposes.\n"
- title: 1.1.  Notational Conventions
  contents:
  - "1.1.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n   For purposes of readability, examples\
    \ are not URL encoded.\n   Implementers MUST percent-encode URLs as described\
    \ in Section 2.1 of\n   [RFC3986].\n   Throughout this document, all figures may\
    \ contain spaces and extra\n   line-wrapping for readability and space limitations.\
    \  Similarly, some\n   URIs contained within examples have been shortened for\
    \ space and\n   readability reasons.\n"
- title: 1.2.  Definitions
  contents:
  - "1.2.  Definitions\n   The following definitions are used with SETs:\n   Security\
    \ Event Token (SET)\n      A SET is a JWT [RFC7519] conforming to this specification.\n\
    \   SET Issuer\n      A service provider that creates SETs to be sent to other\
    \ service\n      providers known as SET recipients.\n   SET Recipient\n      A\
    \ SET recipient is an entity that receives SETs through some\n      distribution\
    \ method.  A SET recipient is the same entity referred\n      as a \"recipient\"\
    \ in [RFC7519] or \"receiver\" in related\n      specifications.\n   Subject\n\
    \      A SET describes an event or state change that has occurred to a\n     \
    \ subject.  A subject might, for instance, be a principal (e.g.,\n      Section\
    \ 4.1.2 of [RFC7519]), a web resource, an entity such as an\n      IP address,\
    \ or the issuer of the SET.\n   Event Identifier\n      A member name for an element\
    \ of the JSON object that is the value\n      of the \"events\" claim in a SET.\
    \  This member name MUST be a URI.\n   Event Payload\n      A member value for\
    \ an element of the JSON object that is the value\n      of the \"events\" claim\
    \ in a SET.  This member value MUST be a JSON\n      object.\n   Profiling Specification\n\
    \      A specification that profiles the SET data structure to define one\n  \
    \    or more specific event types and their associated claims and\n      processing\
    \ rules.\n"
- title: 2.  The Security Event Token (SET)
  contents:
  - "2.  The Security Event Token (SET)\n   A SET is a JWT [RFC7519] data structure\
    \ that represents one or more\n   related aspects of a security event that occurred\
    \ to a subject.  The\n   JWT Claims Set in a SET has the following structure:\n\
    \   o  The top-level claims in the JWT Claims Set are called the SET\n      \"\
    envelope\".  Some of these claims are present in every SET; others\n      will\
    \ be specific to particular SET profiles or profile families.\n      Claims in\
    \ the envelope SHOULD be registered in the \"JSON Web Token\n      Claims\" registry\
    \ [IANA.JWT.Claims] or be Public Claims or Private\n      Claims, as defined in\
    \ [RFC7519].\n   o  Envelope claims that are profiled and defined in this\n  \
    \    specification are used to validate the SET and provide information\n    \
    \  about the event data included in the SET.  The \"events\" claim\n      contains\
    \ the event identifiers and event-specific data expressed\n      about the security\
    \ subject.  The envelope MAY include event-\n      specific or profile-specific\
    \ data.  The \"events\" claim value MUST\n      be a JSON object that contains\
    \ at least one member.\n   o  Each member of the \"events\" JSON object is a name/value\
    \ pair.  The\n      JSON member name is a URI string value, which is the event\n\
    \      identifier, and the corresponding value is a JSON object known as\n   \
    \   the event \"payload\".  The payload JSON object contains claims that\n   \
    \   pertain to that event identifier and need not be registered as JWT\n     \
    \ claims.  These claims are defined by the profiling specification\n      that\
    \ defines the event.  An event with no payload claims SHALL be\n      represented\
    \ as the empty JSON object (\"{}\").\n   o  When multiple event identifiers are\
    \ contained in a SET, they\n      represent multiple aspects of the same state\
    \ transition that\n      occurred to the security subject.  They are not intended\
    \ to be\n      used to aggregate distinct events about the same subject.  Beyond\n\
    \      this, the interpretation of SETs containing multiple event\n      identifiers\
    \ is out of scope for this specification; profiling\n      specifications MAY\
    \ define their own rules regarding their use of\n      SETs containing multiple\
    \ event identifiers, as described in\n      Section 3.  Possible uses of multiple\
    \ values include, but are not\n      limited to:\n      *  Values to provide classification\
    \ information (e.g., threat type\n         or level).\n      *  Additions to existing\
    \ event representations.\n      *  Values used to link potential series of events.\n\
    \      *  Specific-purpose event URIs used between particular SET issuers\n  \
    \       and SET recipients.\n"
- title: 2.1.  Illustrative Examples
  contents:
  - "2.1.  Illustrative Examples\n   This section illustrates several possible uses\
    \ of SETs through non-\n   normative examples.\n"
- title: 2.1.1.  SCIM Example
  contents:
  - "2.1.1.  SCIM Example\n   The following example shows the JWT Claims Set for a\
    \ hypothetical\n   System for Cross-domain Identity Management (SCIM) [RFC7644]\
    \ password\n   reset SET.  Such a SET might be used by a receiver as a trigger\
    \ to\n   reset active user-agent sessions related to the identified user.\n  \
    \ {\n     \"iss\": \"https://scim.example.com\",\n     \"iat\": 1458496025,\n\
    \     \"jti\": \"3d0c3cf797584bd193bd0fb1bd4e7d30\",\n     \"aud\": [\n      \
    \ \"https://jhub.example.com/Feeds/98d52461fa5bbc879593b7754\",\n       \"https://jhub.example.com/Feeds/5d7604516b1d08641d7676ee7\"\
    \n     ],\n     \"sub\": \"https://scim.example.com/Users/44f6142df96bd6ab61e7521d9\"\
    ,\n     \"events\": {\n       \"urn:ietf:params:scim:event:passwordReset\": {\n\
    \         \"id\": \"44f6142df96bd6ab61e7521d9\"\n       },\n       \"https://example.com/scim/event/passwordResetExt\"\
    : {\n         \"resetAttempts\": 5\n       }\n     }\n   }\n                Figure\
    \ 1: Example SCIM Password Reset Event\n   The JWT Claims Set usage consists of:\n\
    \   o  The \"events\" claim specifying the hypothetical SCIM URN\n      (\"urn:ietf:params:scim:event:passwordReset\"\
    ) for a password reset,\n      and a second value, \"https://example.com/scim/event/\n\
    \      passwordResetExt\", that is used to provide additional event\n      information\
    \ such as the current count of resets.\n   o  The \"iss\" claim, denoting the\
    \ SET issuer.\n   o  The \"sub\" claim, specifying the SCIM resource URI that\
    \ was\n      affected.\n   o  The \"aud\" claim, specifying the intended audiences\
    \ for the event.\n      (The syntax of the \"aud\" claim is defined in Section\
    \ 4.1.3 of\n      [RFC7519].)\n   The SET contains two event payloads:\n   o \
    \ The \"id\" claim represents SCIM's unique identifier for a subject.\n   o  The\
    \ second payload identified by \"https://example.com/scim/event/\n      passwordResetExt\"\
    \ and the payload claim \"resetAttempts\" conveys\n      the current count of\
    \ reset attempts.  In this example, while the\n      count is a simple factual\
    \ statement for the issuer, the meaning of\n      the value (a count) is up to\
    \ the receiver.  As an example, such a\n      value might be used by the receiver\
    \ to infer increasing risk.\n   In this example, the SCIM event indicates that\
    \ a password has been\n   updated and the current password reset count is 5. \
    \ Notice that the\n   value for \"resetAttempts\" is in the event payload of an\
    \ event used to\n   convey this information.\n"
- title: 2.1.2.  Logout Example
  contents:
  - "2.1.2.  Logout Example\n   Here is another example JWT Claims Set for a security\
    \ event token,\n   this one for a Logout Token:\n   {\n     \"iss\": \"https://server.example.com\"\
    ,\n     \"sub\": \"248289761001\",\n     \"aud\": \"s6BhdRkqt3\",\n     \"iat\"\
    : 1471566154,\n     \"jti\": \"bWJq\",\n     \"sid\": \"08a5019c-17e1-4977-8f42-65a12843ea02\"\
    ,\n     \"events\": {\n       \"http://schemas.openid.net/event/backchannel-logout\"\
    : {}\n     }\n   }\n            Figure 2: Example OpenID Back-Channel Logout Event\n\
    \   Note that the above SET has an empty JSON object and uses the JWT\n   claims\
    \ \"sub\" and \"sid\" to identify the subject that was logged out.\n   At the\
    \ time of this writing, this example corresponds to the logout\n   token defined\
    \ in the OpenID Connect Back-Channel Logout 1.0\n   [OpenID.BackChannel] specification.\n"
- title: 2.1.3.  Consent Example
  contents:
  - "2.1.3.  Consent Example\n   In the following example JWT Claims Set, a fictional\
    \ medical service\n   collects consent for medical actions and notifies other\
    \ parties.  The\n   individual for whom consent is identified was originally\n\
    \   authenticated via OpenID Connect.  In this case, the issuer of the\n   security\
    \ event is an application rather than the OpenID provider:\n   {\n     \"iss\"\
    : \"https://my.med.example.org\",\n     \"iat\": 1458496025,\n     \"jti\": \"\
    fb4e75b5411e4e19b6c0fe87950f7749\",\n     \"aud\": [\n       \"https://rp.example.com\"\
    \n     ],\n     \"events\": {\n       \"https://openid.net/heart/specs/consent.html\"\
    : {\n         \"iss\": \"https://connect.example.com\",\n         \"sub\": \"\
    248289761001\",\n         \"consentUri\": [\n           \"https://terms.med.example.org/labdisclosure.html#Agree\"\
    \n         ]\n       }\n     }\n   }\n                      Figure 3: Example\
    \ Consent Event\n   In the above example, the attribute \"iss\" contained within\
    \ the\n   payload for the event \"https://openid.net/heart/specs/consent.html\"\
    \n   refers to the issuer of the security subject (\"sub\") rather than the\n\
    \   SET issuer \"https://my.med.example.org\".  They are distinct from the\n \
    \  top-level value of \"iss\", which always refers to the issuer of the\n   event\
    \ -- a medical consent service that is a relying party to the\n   OpenID Provider.\n"
- title: 2.1.4.  RISC Example
  contents:
  - "2.1.4.  RISC Example\n   The following example JWT Claims Set is for an account\
    \ disabled\n   event.  At the time of this writing, this example corresponds to\
    \ the\n   account disabled event defined in the OpenID RISC Event Types 1.0\n\
    \   [OpenID.RISC.Events] specification.\n  {\n    \"iss\": \"https://idp.example.com/\"\
    ,\n    \"jti\": \"756E69717565206964656E746966696572\",\n    \"iat\": 1508184845,\n\
    \    \"aud\": \"636C69656E745F6964\",\n    \"events\": {\n  \"https://schemas.openid.net/secevent/risc/event-type/account-disabled\"\
    \n          : {\n        \"subject\": {\n          \"subject_type\": \"iss-sub\"\
    ,\n          \"iss\": \"https://idp.example.com/\",\n          \"sub\": \"7375626A656374\"\
    \n        },\n        \"reason\": \"hijacking\"\n      }\n    }\n  }\n       \
    \                Figure 4: Example RISC Event\n   Notice that parameters to the\
    \ event are included in the event\n   payload, in this case, the \"reason\" and\
    \ \"cause-time\" values.  The\n   subject of the event is identified using the\
    \ \"subject\" payload value,\n   which itself is a JSON object.\n"
- title: 2.2.  Core SET Claims
  contents:
  - "2.2.  Core SET Claims\n   The following claims from [RFC7519] are profiled for\
    \ use in SETs:\n   \"iss\" (Issuer) Claim\n      As defined by Section 4.1.1 of\
    \ [RFC7519], this claim contains a\n      string identifying the service provider\
    \ publishing the SET (the\n      issuer).  In some cases, the issuer of the SET\
    \ will not be the\n      issuer associated with the security subject of the SET.\n\
    \      Therefore, implementers cannot assume that the issuers are the\n      same\
    \ unless the profiling specification specifies that they are\n      for SETs conforming\
    \ to that profile.  This claim is REQUIRED.\n   \"iat\" (Issued At) Claim\n  \
    \    As defined by Section 4.1.6 of [RFC7519], this claim contains a\n      value\
    \ representing when the SET was issued.  This claim is\n      REQUIRED.\n   \"\
    jti\" (JWT ID) Claim\n      As defined by Section 4.1.7 of [RFC7519], this claim\
    \ contains a\n      unique identifier for the SET.  The identifier MUST be unique\n\
    \      within a particular event feed and MAY be used by clients to track\n  \
    \    whether a particular SET has already been received.  This claim is\n    \
    \  REQUIRED.\n   \"aud\" (Audience) Claim\n      As defined by Section 4.1.3 of\
    \ [RFC7519], this claim contains one\n      or more audience identifiers for the\
    \ SET.  This claim is\n      RECOMMENDED.\n   \"sub\" (Subject) Claim\n      As\
    \ defined by Section 4.1.2 of [RFC7519], this claim contains a\n      StringOrURI\
    \ value representing the principal that is the subject\n      of the SET.  This\
    \ is usually the entity whose \"state\" was changed.\n      For example:\n   \
    \   *  an IP Address was added to a blacklist;\n      *  a URI representing a\
    \ user resource that was modified; or,\n      *  a token identifier (e.g. \"jti\"\
    ) for a revoked token.\n      If used, the profiling specification MUST define\
    \ the content and\n      format semantics for the value.  This claim is OPTIONAL,\
    \ as the\n      principal for any given profile may already be identified without\n\
    \      the inclusion of a subject claim.  Note that some SET profiles MAY\n  \
    \    choose to convey event subject information in the event payload\n      (either\
    \ using the \"sub\" member name or another name), particularly\n      if the subject\
    \ information is relative to issuer information that\n      is also conveyed in\
    \ the event payload, which may be the case for\n      some identity SET profiles.\n\
    \   \"exp\" (Expiration Time) Claim\n      As defined by Section 4.1.4 of [RFC7519],\
    \ this claim is the time\n      after which the JWT MUST NOT be accepted for processing.\
    \  In the\n      context of a SET, however, this notion does not typically apply,\n\
    \      since a SET represents something that has already occurred and is\n   \
    \   historical in nature.  Therefore, its use is NOT RECOMMENDED.\n      (Also,\
    \ see Section 4.1 for additional reasons not to use the \"exp\"\n      claim in\
    \ some SET use cases.)\n   The following new claims are defined by this specification:\n\
    \   \"events\" (Security Events) Claim\n      This claim contains a set of event\
    \ statements that each provide\n      information describing a single logical\
    \ event that has occurred\n      about a security subject (e.g., a state change\
    \ to the subject).\n      Multiple event identifiers with the same value MUST\
    \ NOT be used.\n      The \"events\" claim MUST NOT be used to express multiple\n\
    \      independent logical events.\n      The value of the \"events\" claim is\
    \ a JSON object whose members are\n      name/value pairs whose names are URIs\
    \ identifying the event\n      statements being expressed.  Event identifiers\
    \ SHOULD be stable\n      values (e.g., a permanent URL for an event specification).\
    \  For\n      each name present, the corresponding value MUST be a JSON object.\n\
    \      The JSON object MAY be an empty object (\"{}\"), or it MAY be a JSON\n\
    \      object containing data described by the profiling specification.\n   \"\
    txn\" (Transaction Identifier) Claim\n      An OPTIONAL string value that represents\
    \ a unique transaction\n      identifier.  In cases in which multiple related\
    \ JWTs are issued,\n      the transaction identifier claim can be used to correlate\
    \ these\n      related JWTs.  Note that this claim can be used in JWTs that are\n\
    \      SETs and also in JWTs using non-SET profiles.\n   \"toe\" (Time of Event)\
    \ Claim\n      A value that represents the date and time at which the event\n\
    \      occurred.  This value is a NumericDate (see Section 2 of\n      [RFC7519]).\
    \  By omitting this claim, the issuer indicates that\n      they are not sharing\
    \ an event time with the recipient.  (Note that\n      in some use cases, the\
    \ represented time might be approximate;\n      statements about the accuracy\
    \ of this field MAY be made by\n      profiling specifications.)  This claim is\
    \ OPTIONAL.\n"
- title: 2.3.  Explicit Typing of SETs
  contents:
  - "2.3.  Explicit Typing of SETs\n   This specification registers the \"application/secevent+jwt\"\
    \ media\n   type, which can be used to indicate that the content is a SET.  SETs\n\
    \   MAY include this media type in the \"typ\" header parameter of the JWT\n \
    \  representing the SET to explicitly declare that the JWT is a SET.\n   This\
    \ MUST be included if the SET could be used in an application\n   context in which\
    \ it could be confused with other kinds of JWTs.\n   Per the definition of \"\
    typ\" in Section 4.1.9 of [RFC7515], it is\n   RECOMMENDED that the \"application/\"\
    \ prefix be omitted.  Therefore,\n   the \"typ\" value used SHOULD be \"secevent+jwt\"\
    .\n"
- title: 2.4.  Security Event Token Construction
  contents:
  - "2.4.  Security Event Token Construction\n   This section describes how to construct\
    \ a SET.\n   The following is an example JWT Claims Set for a hypothetical SCIM\n\
    \   SET:\n   {\n     \"iss\": \"https://scim.example.com\",\n     \"iat\": 1458496404,\n\
    \     \"jti\": \"4d3559ec67504aaba65d40b0363faad8\",\n     \"aud\": [\n      \
    \ \"https://scim.example.com/Feeds/98d52461fa5bbc879593b7754\",\n       \"https://scim.example.com/Feeds/5d7604516b1d08641d7676ee7\"\
    \n     ],\n     \"events\": {\n       \"urn:ietf:params:scim:event:create\": {\n\
    \         \"ref\":\n             \"https://scim.example.com/Users/44f6142df96bd6ab61e7521d9\"\
    ,\n         \"attributes\": [\"id\", \"name\", \"userName\", \"password\", \"\
    emails\"]\n       }\n     }\n   }\n                      Figure 5: Example Event\
    \ Claims\n   The JSON Claims Set is encoded per [RFC7519].\n   In this example,\
    \ the SCIM SET claims are encoded in an unsecured JWT.\n   The JOSE Header for\
    \ this example is:\n     {\"typ\":\"secevent+jwt\",\"alg\":\"none\"}\n   Base64url\
    \ encoding (as defined by Section 2 of [RFC7515], including\n   the omission of\
    \ all trailing '=' characters) of the octets of the\n   UTF-8 [RFC3629] representation\
    \ of the JOSE Header yields:\n     eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0\n\
    \   The above example JWT Claims Set (with insignificant whitespace\n   removed)\
    \ is encoded as follows (with line breaks for display purposes\n   only):\n  \
    \   eyJpc3MiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJpYXQiOjE0NTg0OTY0M\n     DQsImp0aSI6IjRkMzU1OWVjNjc1MDRhYWJhNjVkNDBiMDM2M2ZhYWQ4IiwiYXVkIj\n\
    \     pbImh0dHBzOi8vc2NpbS5leGFtcGxlLmNvbS9GZWVkcy85OGQ1MjQ2MWZhNWJiYzg\n    \
    \ 3OTU5M2I3NzU0IiwiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tL0ZlZWRzLzVkNzYw\n     NDUxNmIxZDA4NjQxZDc2NzZlZTciXSwiZXZlbnRzIjp7InVybjppZXRmOnBhcmFtc\n\
    \     zpzY2ltOmV2ZW50OmNyZWF0ZSI6eyJyZWYiOiJodHRwczovL3NjaW0uZXhhbXBsZS\n    \
    \ 5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZhYjYxZTc1MjFkOSIsImF0dHJpYnV0ZXM\n     iOlsiaWQiLCJuYW1lIiwidXNlck5hbWUiLCJwYXNzd29yZCIsImVtYWlscyJdfX19\n\
    \   The encoded JWS signature is the empty string.\n   Concatenating the three\
    \ encoded parts (JOSE Header, JWT Claims Set,\n   and JWS signature) in order\
    \ with period ('.') characters between the\n   parts yields this complete SET\
    \ (with line breaks for display purposes\n   only):\n     eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0\n\
    \     .\n     eyJpc3MiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJpYXQiOjE0NTg0OTY0M\n\
    \     DQsImp0aSI6IjRkMzU1OWVjNjc1MDRhYWJhNjVkNDBiMDM2M2ZhYWQ4IiwiYXVkIj\n    \
    \ pbImh0dHBzOi8vc2NpbS5leGFtcGxlLmNvbS9GZWVkcy85OGQ1MjQ2MWZhNWJiYzg\n     3OTU5M2I3NzU0IiwiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tL0ZlZWRzLzVkNzYw\n\
    \     NDUxNmIxZDA4NjQxZDc2NzZlZTciXSwiZXZlbnRzIjp7InVybjppZXRmOnBhcmFtc\n    \
    \ zpzY2ltOmV2ZW50OmNyZWF0ZSI6eyJyZWYiOiJodHRwczovL3NjaW0uZXhhbXBsZS\n     5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZhYjYxZTc1MjFkOSIsImF0dHJpYnV0ZXM\n\
    \     iOlsiaWQiLCJuYW1lIiwidXNlck5hbWUiLCJwYXNzd29yZCIsImVtYWlscyJdfX19\n    \
    \ .\n             Figure 6: Example Unsecured Security Event Token\n   For the\
    \ purpose of having a simpler example in Figure 6, an unsecured\n   token is shown.\
    \  When SETs are not signed or encrypted, other\n   mechanisms such as TLS MUST\
    \ be employed to provide integrity\n   protection, confidentiality, and issuer\
    \ authenticity, as needed by\n   the application.\n   When validation (i.e., auditing)\
    \ or additional transmission security\n   is required, JWS signing and/or JWE\
    \ encryption MAY be used.  To\n   create and or validate a signed and/or encrypted\
    \ SET, follow the\n   instructions in Section 7 of [RFC7519].\n"
- title: 3.  Requirements for SET Profiles
  contents:
  - "3.  Requirements for SET Profiles\n   Profiling specifications of this specification\
    \ define actual SETs to\n   be used in particular use cases.  These profiling\
    \ specifications\n   define the syntax and semantics of SETs conforming to that\
    \ SET\n   profile and rules for validating those SETs.  Profiling\n   specifications\
    \ SHOULD define syntax, semantics, subject\n   identification, and validation.\n\
    \   Syntax\n      The syntax of the SETs defined, including:\n      Top-Level\
    \ Claims\n         Claims and values in the JWT Claims Set.  Examples are claims\n\
    \         defined by the JWT specification [RFC7519], this specification,\n  \
    \       and by the profiling specification.\n      Event Payload\n         The\
    \ JSON data structure contents and format, containing event-\n         specific\
    \ information, if any (see Section 1.2).\n   Semantics\n      Defining the semantics\
    \ of the SET contents for SETs utilizing the\n      profile is equally important.\
    \  Possibly most important is defining\n      the procedures used to validate\
    \ the SET issuer and to obtain the\n      keys controlled by the issuer that were\
    \ used for cryptographic\n      operations used in the JWT representing the SET.\
    \  For instance,\n      some profiles may define an algorithm for retrieving the\
    \ SET\n      issuer's keys that uses the \"iss\" claim value as its input.\n \
    \     Likewise, if the profile allows (or requires) that the JWT be\n      unsecured,\
    \ the means by which the integrity of the JWT is ensured\n      MUST be specified.\n\
    \   Subject Identification\n      Profiling specifications MUST define how the\
    \ event subject is\n      identified in the SET, as well as how to differentiate\
    \ between the\n      event subject's issuer and the SET issuer, if applicable.\
    \  It is\n      NOT RECOMMENDED for profiling specifications to use the \"sub\"\
    \n      claim in cases in which the subject is not globally unique and has\n \
    \     a different issuer from the SET itself.\n   Validation\n      Profiling\
    \ specifications MUST clearly specify the steps that a\n      recipient of a SET\
    \ utilizing that profile MUST perform to validate\n      that the SET is both\
    \ syntactically and semantically valid.\n      Among the syntax and semantics\
    \ of SETs that a profiling\n      specification may define is whether the value\
    \ of the \"events\"\n      claim may contain multiple members, and what processing\n\
    \      instructions are employed in the single- and multiple-valued cases\n  \
    \    for SETs conforming to that profile.  Many valid choices are\n      possible.\
    \  For instance, some profiles might allow multiple event\n      identifiers to\
    \ be present and specify that any that are not\n      understood by recipients\
    \ be ignored, thus enabling extensibility.\n      Other profiles might allow multiple\
    \ event identifiers to be\n      present but require that all be understood if\
    \ the SET is to be\n      accepted.  Some profiles might require that only a single\
    \ value be\n      present.  All such choices are within the scope of profiling\n\
    \      specifications to define.\n"
- title: 4.  Preventing Confusion between SETs and Other JWTs
  contents:
  - "4.  Preventing Confusion between SETs and Other JWTs\n   Because [RFC7519] states\
    \ that \"all claims that are not understood by\n   implementations MUST be ignored\"\
    , there is a consideration that a SET\n   might be confused with another kind\
    \ of JWT from the same issuer.\n   Unless this confusion is prevented, this might\
    \ enable an attacker who\n   possesses a SET to use it in a context in which another\
    \ kind of JWT\n   is expected, or vice versa.  This section presents concrete\n\
    \   techniques for preventing confusion between SETs and several other\n   specific\
    \ kinds of JWTs, as well as generic techniques for preventing\n   possible confusion\
    \ between SETs and other kinds of JWTs.\n"
- title: 4.1.  Distinguishing SETs from ID Tokens
  contents:
  - "4.1.  Distinguishing SETs from ID Tokens\n   A SET might be confused with an\
    \ ID Token [OpenID.Core] if a SET is\n   mistakenly or maliciously used in a context\
    \ requiring an ID Token.\n   If a SET could otherwise be interpreted as a valid\
    \ ID Token (because\n   it includes the required claims for an ID Token and valid\
    \ issuer and\n   audience claim values for an ID Token), then that SET profile\
    \ MUST\n   require that the \"exp\" claim not be present in the SET.  Because\n\
    \   \"exp\" is a required claim in ID Tokens, valid ID Token\n   implementations\
    \ will reject such a SET if presented as if it were an\n   ID Token.\n   Excluding\
    \ \"exp\" from SETs that could otherwise be confused with ID\n   Tokens is actually\
    \ defense in depth.  In any OpenID Connect contexts\n   in which an attacker could\
    \ attempt to substitute a SET for an ID\n   Token, the SET would actually already\
    \ be rejected as an ID Token\n   because it would not contain the correct \"nonce\"\
    \ claim value for the\n   ID Token to be accepted in contexts for which substitution\
    \ is\n   possible.\n   Note that the use of explicit typing, as described in Section\
    \ 2.3,\n   will not achieve disambiguation between ID Tokens and SETs, as the\
    \ ID\n   Token validation rules do not use the \"typ\" header parameter value.\n"
- title: 4.2.  Distinguishing SETs from Access Tokens
  contents:
  - "4.2.  Distinguishing SETs from Access Tokens\n   OAuth 2.0 [RFC6749] defines\
    \ access tokens as being opaque.\n   Nonetheless, some implementations implement\
    \ access tokens as JWTs.\n   Because the structure of these JWTs is implementation\
    \ specific,\n   ensuring that a SET cannot be confused with such an access token\
    \ is,\n   therefore, also implementation specific, generally.  Nonetheless, it\n\
    \   is recommended that SET profiles employ the following strategies to\n   prevent\
    \ possible substitutions of SETs for access tokens in contexts\n   in which that\
    \ might be possible:\n   o  Prohibit use of the \"exp\" claim, as is done to prevent\
    \ ID Token\n      confusion.\n   o  Where possible, use a separate \"aud\" claim\
    \ value to distinguish\n      between the SET recipient and the protected resource\
    \ that is the\n      audience of an access token.\n   o  Modify access token validation\
    \ systems to check for the presence\n      of the \"events\" claim as a means\
    \ to detect security event tokens.\n      This is particularly useful if the same\
    \ endpoint may receive both\n      types of tokens.\n   o  Employ explicit typing,\
    \ as described in Section 2.3, and modify\n      access token validation systems\
    \ to use the \"typ\" header parameter\n      value.\n"
- title: 4.3.  Distinguishing SETs from Other Kinds of JWTs
  contents:
  - "4.3.  Distinguishing SETs from Other Kinds of JWTs\n   JWTs are now being used\
    \ in application areas beyond the identity\n   applications in which they first\
    \ appeared.  For instance, the\n   \"Session Initiation Protocol (SIP) Via Header\
    \ Field Parameter to\n   Indicate Received Realm\" [RFC8055] and \"PASSporT: Personal\
    \ Assertion\n   Token\" [RFC8225] specifications both define JWT profiles that\
    \ use\n   mostly or completely different sets of claims than are used by ID\n\
    \   Tokens.  If it would otherwise be possible for an attacker to\n   substitute\
    \ a SET for one of these (or other) kinds of JWTs, then the\n   SET profile must\
    \ be defined in such a way that any substituted SET\n   will result in its rejection\
    \ when validated as the intended kind of\n   JWT.\n   The most direct way to prevent\
    \ confusion is to employ explicit\n   typing, as described in Section 2.3, and\
    \ modify applicable token\n   validation systems to use the \"typ\" header parameter\
    \ value.  This\n   approach can be employed for new systems but may not be applicable\
    \ to\n   existing systems.\n   Another way to ensure that a SET is not confused\
    \ with another kind of\n   JWT is to have the JWT validation logic reject JWTs\
    \ containing an\n   \"events\" claim unless the JWT is intended to be a SET. \
    \ This approach\n   can be employed for new systems but may not be applicable\
    \ to existing\n   systems.  Validating that the JWT has an \"events\" claim will\
    \ be\n   effective in preventing attackers from passing other kinds of JWTs\n\
    \   off as SETs.\n   For many use cases, the simplest way to prevent substitution\
    \ is\n   requiring that the SET not include claims that are required for the\n\
    \   kind of JWT that might be the target of an attack.  For example, for\n   [RFC8055],\
    \ the \"sip_callid\" claim could be omitted and for [RFC8225],\n   the \"orig\"\
    \ claim could be omitted.\n   In many contexts, simple measures such as these\
    \ will accomplish the\n   task, should confusion otherwise even be possible. \
    \ Note that this\n   topic is being explored in a more general fashion in \"JSON\
    \ Web Token\n   Best Current Practices\" [JWT-BCP].  The proposed best practices\
    \ in\n   that document may also be applicable for particular SET profiles and\n\
    \   use cases.\n"
- title: 5.  Security Considerations
  contents:
  - '5.  Security Considerations

    '
- title: 5.1.  Confidentiality and Integrity
  contents:
  - "5.1.  Confidentiality and Integrity\n   SETs may contain sensitive information.\
    \  Therefore, methods for\n   distribution of events SHOULD require the use of\
    \ a transport-layer\n   security mechanism when distributing events.  Parties\
    \ MUST support\n   TLS 1.2 [RFC5246] or a higher version and MAY support additional\n\
    \   transport-layer mechanisms meeting its security requirements.  When\n   using\
    \ TLS, the client MUST perform a TLS server certificate check,\n   per [RFC6125].\
    \  Implementation security considerations for TLS can be\n   found in \"Recommendations\
    \ for Secure Use of Transport Layer Security\n   (TLS) and Datagram Transport\
    \ Layer Security (DTLS)\" [RFC7525].\n   Security events distributed through third\
    \ parties or that carry\n   personally identifiable information MUST be encrypted\
    \ using JWE\n   [RFC7516] or secured for confidentiality by other means.\n   Unless\
    \ integrity of the JWT is ensured by other means, it MUST be\n   signed using\
    \ JWS [RFC7515] by an issuer that is trusted to do so for\n   the use case so\
    \ that the SET can be authenticated and validated by\n   the SET recipient.\n"
- title: 5.2.  Delivery
  contents:
  - "5.2.  Delivery\n   This specification does not define a delivery mechanism for\
    \ SETs.  In\n   addition to confidentiality and integrity (discussed above),\n\
    \   implementers and profiling specifications must consider the\n   consequences\
    \ of delivery mechanisms that are not secure and/or not\n   assured.  For example,\
    \ while a SET may be end-to-end secured using\n   JWE encrypted SETs, without\
    \ (mutual) TLS, there is no assurance that\n   the correct endpoint received the\
    \ SET and that it could be\n   successfully processed.\n"
- title: 5.3.  Sequencing
  contents:
  - "5.3.  Sequencing\n   This specification defines no means of ordering multiple\
    \ SETs in a\n   sequence.  Depending on the type and nature of the events represented\n\
    \   by SETs, order may or may not matter.  For example, in provisioning,\n   event\
    \ order is critical -- an object cannot be modified before it is\n   created.\
    \  In other SET types, such as a token revocation, the order\n   of SETs for revoked\
    \ tokens does not matter.  If, however, the event\n   conveys a logged in or logged\
    \ out status for a user subject, then\n   order becomes important.\n   Profiling\
    \ specifications and implementers SHOULD take caution when\n   using timestamps\
    \ such as \"iat\" to define order.  Distributed systems\n   will have some amount\
    \ of clock skew.  Thus, time by itself will not\n   guarantee order.\n   Specifications\
    \ profiling SET SHOULD define a mechanism for detecting\n   order or sequence\
    \ of events when the order matters.  For example, the\n   \"txn\" claim could\
    \ contain an ordered value (e.g., a counter) that the\n   issuer includes, although\
    \ just as for timestamps, ensuring such\n   ordering can be difficult in distributed\
    \ systems.\n"
- title: 5.4.  Timing Issues
  contents:
  - "5.4.  Timing Issues\n   When SETs are delivered asynchronously and/or out-of-band\
    \ with\n   respect to the original action that incurred the security event, it\n\
    \   is important to consider that a SET might be delivered to a SET\n   recipient\
    \ in advance of or behind the process that caused the event.\n   For example,\
    \ a user having been required to log out and then log back\n   in again, may cause\
    \ a \"token revoked\" SET to be issued, typically\n   causing the receiver to\
    \ reset all active sessions at the receiver\n   that are related to that user.\
    \  If a revocation SET arrives at the\n   same time as the user agent re-logs\
    \ in, timing could cause problems\n   by erroneously treating the new user session\
    \ as logged out.\n   Profiling specifications SHOULD be careful to consider both\
    \ SET\n   expression and timing issues.  For example, it might be more\n   appropriate\
    \ to revoke a specific session or ID Token rather than a\n   general logout statement\
    \ about a \"user\".  Alternatively, profiling\n   specifications could use timestamps\
    \ that allow new sessions to be\n   started immediately after a stated logout\
    \ event time.\n"
- title: 5.5.  Preventing Confusion
  contents:
  - "5.5.  Preventing Confusion\n   Also, see Section 4 above for both additional\
    \ security considerations\n   and normative text on preventing SETs from being\
    \ confused with other\n   kinds of JWTs.\n"
- title: 6.  Privacy Considerations
  contents:
  - "6.  Privacy Considerations\n   If a SET needs to be retained for audit purposes,\
    \ the signature can\n   be used to provide verification of its authenticity.\n\
    \   SET issuers SHOULD attempt to specialize SETs so that their content\n   is\
    \ targeted to the specific business and protocol needs of the\n   intended SET\
    \ recipients.\n   When sharing personally identifiable information or information\
    \ that\n   is otherwise considered confidential to affected users, SET issuers\n\
    \   and recipients should have the appropriate legal agreements and user\n   consent\
    \ and/or terms of service in place.\n   The propagation of subject identifiers\
    \ can be perceived as personally\n   identifiable information.  Where possible,\
    \ SET issuers and recipients\n   SHOULD devise approaches that prevent propagation\
    \ -- for example, the\n   passing of a salted hash value that requires the SET\
    \ recipient to\n   know the subject.\n   In some cases, it may be possible for\
    \ a SET recipient to correlate\n   different events and thereby gain information\
    \ about a subject that\n   the SET issuer did not intend to share.  For example,\
    \ a SET recipient\n   might be able to use \"iat\" values or highly precise \"\
    toe\" values to\n   determine that two otherwise un-relatable events actually\
    \ relate to\n   the same real-world event.  The union of information from both\
    \ events\n   could allow a SET recipient to de-anonymize data or recognize that\n\
    \   unrelated identifiers relate to the same individual.  SET issuers\n   SHOULD\
    \ take steps to minimize the chance of event correlation, when\n   such correlation\
    \ would constitute a privacy violation.  For instance,\n   they could use approximate\
    \ values for the \"toe\" claim or arbitrarily\n   delay SET issuance, where such\
    \ delay can be tolerated.\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  JSON Web Token Claims Registration
  contents:
  - "7.1.  JSON Web Token Claims Registration\n   IANA has registered the \"events\"\
    , \"toe\", and \"txn\" claims in the IANA\n   \"JSON Web Token Claims\" registry\
    \ [IANA.JWT.Claims] established by\n   [RFC7519].\n"
- title: 7.1.1.  Registry Contents
  contents:
  - "7.1.1.  Registry Contents\n   o  Claim Name: \"events\"\n   o  Claim Description:\
    \ Security Events\n   o  Change Controller: IESG\n   o  Specification Document(s):\
    \ Section 2.2 of [RFC8417]\n   o  Claim Name: \"toe\"\n   o  Claim Description:\
    \ Time of Event\n   o  Change Controller: IESG\n   o  Specification Document(s):\
    \ Section 2.2 of [RFC8417]\n   o  Claim Name: \"txn\"\n   o  Claim Description:\
    \ Transaction Identifier\n   o  Change Controller: IESG\n   o  Specification Document(s):\
    \ Section 2.2 of [RFC8417]\n"
- title: 7.2.  Structured Syntax Suffix Registration
  contents:
  - "7.2.  Structured Syntax Suffix Registration\n   IANA has registered the \"+jwt\"\
    \ structured syntax suffix [RFC6838] in\n   the \"Structured Syntax Suffix\" registry\
    \ [IANA.StructuredSuffix] in\n   the manner described in [RFC6838], which can\
    \ be used to indicate that\n   the media type is encoded as a JWT.\n"
- title: 7.2.1.  Registry Contents
  contents:
  - "7.2.1.  Registry Contents\n   o  Name: JSON Web Token (JWT)\n   o  +suffix: +jwt\n\
    \   o  References: Section 3 of [RFC7519], Section 7.2 of [RFC8417]\n   o  Encoding\
    \ Considerations: binary; JWT values are encoded as a\n      series of base64url-encoded\
    \ values (with trailing '=' characters\n      removed), some of which may be the\
    \ empty string, separated by\n      period ('.') characters.\n   o  Interoperability\
    \ Considerations: N/A\n   o  Fragment Identifier Considerations:\n      The syntax\
    \ and semantics of fragment identifiers specified for\n      +jwt SHOULD be as\
    \ specified for \"application/jwt\".  (At\n      publication of this document,\
    \ there is no fragment identification\n      syntax defined for \"application/jwt\"\
    .)\n      The syntax and semantics for fragment identifiers for a specific\n \
    \     \"xxx/yyy+jwt\" SHOULD be processed as follows:\n      For cases defined\
    \ in +jwt where the fragment identifier resolves\n      per the +jwt rules, process\
    \ as specified in +jwt.\n      For cases defined in +jwt where the fragment identifier\
    \ does not\n      resolve per the +jwt rules, process as specified in \"xxx/yyy+jwt\"\
    .\n      For cases not defined in +jwt, process as specified in \"xxx/\n     \
    \ yyy+jwt\".\n   o  Security Considerations: See Section 11 of [RFC7519].\n  \
    \ o  Contact:\n      Michael B. Jones, mbj@microsoft.com\n   o  Author/Change\
    \ Controller:\n      Security Events Working Group.\n      The IESG has change\
    \ control over this registration.\n"
- title: 7.3.  Media Type Registration
  contents:
  - '7.3.  Media Type Registration

    '
- title: 7.3.1.  Registry Contents
  contents:
  - "7.3.1.  Registry Contents\n   This section registers the \"application/secevent+jwt\"\
    \ media type\n   [RFC2046] in the \"Media Types\" registry [IANA.MediaTypes] in\
    \ the\n   manner described in [RFC6838], which can be used to indicate that the\n\
    \   content is a SET.\n   o  Type name: application\n   o  Subtype name: secevent+jwt\n\
    \   o  Required parameters: N/A\n   o  Optional parameters: N/A\n   o  Encoding\
    \ considerations: binary; A SET is a JWT; JWT values are\n      encoded as a series\
    \ of base64url-encoded values (with trailing '='\n      characters removed), some\
    \ of which may be the empty string,\n      separated by period ('.') characters.\n\
    \   o  Security considerations: See Section 5 of [RFC8417]\n   o  Interoperability\
    \ considerations: N/A\n   o  Published specification: Section 2.3 of [RFC8417]\n\
    \   o  Applications that use this media type: Applications that exchange\n   \
    \   SETs\n   o  Fragment identifier considerations: N/A\n   o  Additional information:\n\
    \         Magic number(s): N/A\n         File extension(s): N/A\n         Macintosh\
    \ file type code(s): N/A\n   o  Person & email address to contact for further\
    \ information:\n      Michael B. Jones, mbj@microsoft.com\n   o  Intended usage:\
    \ COMMON\n   o  Restrictions on usage: none\n   o  Author: Michael B. Jones, mbj@microsoft.com\n\
    \   o  Change controller: IESG\n   o  Provisional registration?  No\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [IANA.JWT.Claims]\n              IANA, \"JSON\
    \ Web Token Claims\",\n              <http://www.iana.org/assignments/jwt>.\n\
    \   [IANA.MediaTypes]\n              IANA, \"Media Types\",\n              <http://www.iana.org/assignments/media-types>.\n\
    \   [IANA.StructuredSuffix]\n              IANA, \"Structured Syntax Suffix\"\
    ,\n              <https://www.iana.org/assignments/\n              media-type-structured-suffix/>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC3629]\
    \  Yergeau, F., \"UTF-8, a transformation format of ISO\n              10646\"\
    , STD 63, RFC 3629, DOI 10.17487/RFC3629, November\n              2003, <https://www.rfc-editor.org/info/rfc3629>.\n\
    \   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n   \
    \           Resource Identifier (URI): Generic Syntax\", STD 66,\n           \
    \   RFC 3986, DOI 10.17487/RFC3986, January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246,\
    \ August 2008,\n              <https://www.rfc-editor.org/info/rfc5246>.\n   [RFC6125]\
    \  Saint-Andre, P. and J. Hodges, \"Representation and\n              Verification\
    \ of Domain-Based Application Service Identity\n              within Internet\
    \ Public Key Infrastructure Using X.509\n              (PKIX) Certificates in\
    \ the Context of Transport Layer\n              Security (TLS)\", RFC 6125, DOI\
    \ 10.17487/RFC6125, March\n              2011, <https://www.rfc-editor.org/info/rfc6125>.\n\
    \   [RFC6749]  Hardt, D., Ed., \"The OAuth 2.0 Authorization Framework\",\n  \
    \            RFC 6749, DOI 10.17487/RFC6749, October 2012,\n              <https://www.rfc-editor.org/info/rfc6749>.\n\
    \   [RFC7515]  Jones, M., Bradley, J., and N. Sakimura, \"JSON Web\n         \
    \     Signature (JWS)\", RFC 7515, DOI 10.17487/RFC7515, May\n              2015,\
    \ <https://www.rfc-editor.org/info/rfc7515>.\n   [RFC7516]  Jones, M. and J. Hildebrand,\
    \ \"JSON Web Encryption (JWE)\",\n              RFC 7516, DOI 10.17487/RFC7516,\
    \ May 2015,\n              <https://www.rfc-editor.org/info/rfc7516>.\n   [RFC7519]\
    \  Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Token\n              (JWT)\"\
    , RFC 7519, DOI 10.17487/RFC7519, May 2015,\n              <https://www.rfc-editor.org/info/rfc7519>.\n\
    \   [RFC7525]  Sheffer, Y., Holz, R., and P. Saint-Andre,\n              \"Recommendations\
    \ for Secure Use of Transport Layer\n              Security (TLS) and Datagram\
    \ Transport Layer Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525,\
    \ May\n              2015, <https://www.rfc-editor.org/info/rfc7525>.\n   [RFC8174]\
    \  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119\
    \ Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,\
    \ <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [JWT-BCP]  Sheffer, Y., Hardt, D., and M. Jones,\
    \ \"JSON Web Token Best\n              Current Practices\", Work in Progress,\n\
    \              draft-ietf-oauth-jwt-bcp-03, May 2018.\n   [OpenID.BackChannel]\n\
    \              Jones, M. and J. Bradley, \"OpenID Connect Back-Channel\n     \
    \         Logout 1.0\", January 2017, <http://openid.net/specs/\n            \
    \  openid-connect-backchannel-1_0.html>.\n   [OpenID.Core]\n              Sakimura,\
    \ N., Bradley, J., Jones, M., de Medeiros, B., and\n              C. Mortimore,\
    \ \"OpenID Connect Core 1.0\", November 2014,\n              <http://openid.net/specs/openid-connect-core-1_0.html>.\n\
    \   [OpenID.RISC.Events]\n              Scurtescu, M., Backman, A., Hunt, P.,\
    \ and J. Bradley,\n              \"OpenID RISC Event Types 1.0\", April 2018,\n\
    \              <http://openid.net/specs/\n              openid-risc-event-types-1_0.html>.\n\
    \   [RFC2046]  Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n   \
    \           Extensions (MIME) Part Two: Media Types\", RFC 2046,\n           \
    \   DOI 10.17487/RFC2046, November 1996,\n              <https://www.rfc-editor.org/info/rfc2046>.\n\
    \   [RFC6838]  Freed, N., Klensin, J., and T. Hansen, \"Media Type\n         \
    \     Specifications and Registration Procedures\", BCP 13,\n              RFC\
    \ 6838, DOI 10.17487/RFC6838, January 2013,\n              <https://www.rfc-editor.org/info/rfc6838>.\n\
    \   [RFC7644]  Hunt, P., Ed., Grizzle, K., Ansari, M., Wahlstroem, E.,\n     \
    \         and C. Mortimore, \"System for Cross-domain Identity\n             \
    \ Management: Protocol\", RFC 7644, DOI 10.17487/RFC7644,\n              September\
    \ 2015, <https://www.rfc-editor.org/info/rfc7644>.\n   [RFC8055]  Holmberg, C.\
    \ and Y. Jiang, \"Session Initiation Protocol\n              (SIP) Via Header\
    \ Field Parameter to Indicate Received\n              Realm\", RFC 8055, DOI 10.17487/RFC8055,\
    \ January 2017,\n              <https://www.rfc-editor.org/info/rfc8055>.\n  \
    \ [RFC8225]  Wendt, C. and J. Peterson, \"PASSporT: Personal Assertion\n     \
    \         Token\", RFC 8225, DOI 10.17487/RFC8225, February 2018,\n          \
    \    <https://www.rfc-editor.org/info/rfc8225>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The editors would like to thank the members of the IETF SCIM\
    \ working\n   group, which began discussions of provisioning events starting with\n\
    \   draft-hunt-scim-notify-00 in 2015.  The editors would like to thank\n   the\
    \ participants in the IETF id-event mailing list, the Security\n   Events working\
    \ group, and related working groups for their\n   contributions to this specification.\
    \  The specification incorporates\n   suggestions made by many people, including\
    \ Annabelle Backman, John\n   Bradley, Alissa Cooper, Ned Freed, Dick Hardt, Russ\
    \ Housley, Benjamin\n   Kaduk, Mirja Kuehlewind, Mark Lizar, Alexey Melnikov,\
    \ Andrew Nash,\n   Eric Rescorla, Adam Roach, Justin Richer, Nat Sakimura, Marius\n\
    \   Scurtescu, Yaron Sheffer, and Martin Vigoureux.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Phil Hunt (editor)\n   Oracle Corporation\n   Email: phil.hunt@yahoo.com\n\
    \   Michael B. Jones\n   Microsoft\n   Email: mbj@microsoft.com\n   URI:   http://self-issued.info/\n\
    \   William Denniss\n   Google\n   Email: rfc8417@wdenniss.com\n   URI:   https://wdenniss.com/SET\n\
    \   Morteza Ansari\n   Cisco\n   Email: morteza.ansari@cisco.com\n"
