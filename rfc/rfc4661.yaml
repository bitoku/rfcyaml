- title: __initial_text__
  contents:
  - "          An Extensible Markup Language (XML)-Based Format for\n            \
    \          Event Notification Filtering\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   The SIP event notification framework describes the usage of the\n\
    \   Session Initiation Protocol (SIP) for subscriptions and notifications\n  \
    \ of changes to a state of a resource.  The document does not describe\n   a mechanism\
    \ whereby filtering of event notification information can\n   be achieved.  Filtering\
    \ is a mechanism for defining the preferred\n   notification information to be\
    \ delivered and for specifying triggers\n   that cause that information to be\
    \ delivered.  In order to enable\n   this, a format is needed to enable the subscriber\
    \ to describe the\n   state changes of a resource that cause notifications to\
    \ be sent to it\n   and what those notifications are to contain.  This document\
    \ presents\n   a format in the form of an XML document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Conventions  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  Structure of XML-Encoded Simple-Filter . . . . . . . .\
    \ . . . .  4\n       3.1.  MIME Type for Simple-Filter Document . . . . . . .\
    \ . . .  4\n       3.2.  The <filter-set> Root Element  . . . . . . . . . . .\
    \ . .  4\n       3.3.  The <ns-bindings> Element  . . . . . . . . . . . . . .\
    \ .  4\n       3.4.  The <filter> Element . . . . . . . . . . . . . . . . . .\
    \  5\n       3.5.  The <what> Element . . . . . . . . . . . . . . . . . . .  6\n\
    \             3.5.1.  The <include> Element  . . . . . . . . . . . . .  6\n  \
    \           3.5.2.  The <exclude> Element  . . . . . . . . . . . . .  7\n    \
    \         3.5.3.  The 'type' Attribute . . . . . . . . . . . . . .  7\n      \
    \ 3.6.  The <trigger> Element  . . . . . . . . . . . . . . . . .  8\n        \
    \     3.6.1.  The <changed> Element  . . . . . . . . . . . . .  8\n          \
    \   3.6.2.  The <added> Element  . . . . . . . . . . . . . .  9\n            \
    \ 3.6.3.  The <removed> Element  . . . . . . . . . . . . . 10\n   4.  XML Schema\
    \ Extensibility . . . . . . . . . . . . . . . . . . . 10\n   5.  Syntax for Referencing\
    \ XML Items and Making Logical\n       Expressions  . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . 10\n   6.  Examples . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 12\n       6.1.  Filter Criteria Using <what> Element\
    \ . . . . . . . . . . 12\n       6.2.  Filter Criteria Using <trigger> Element\
    \  . . . . . . . . 13\n       6.3.  Filter Criteria Using <what> and <trigger>\
    \ Elements  . . 13\n       6.4.  Content Filter Using Namespaces  . . . . . .\
    \ . . . . . . 14\n       6.5.  Content Filter Using Only <include> Elements .\
    \ . . . . . 14\n       6.6.  Two Content Filters as Filter Criteria . . . . .\
    \ . . . . 15\n   7.  XML Schema for Filter Criteria . . . . . . . . . . . . .\
    \ . . . 16\n   8.  Security Considerations  . . . . . . . . . . . . . . . . .\
    \ . . 18\n   9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . .\
    \ . 19\n       9.1.  application/simple-filter+xml MIME TYPE  . . . . . . . .\
    \ 19\n       9.2.  URN Sub-Namespace Registration for\n           urn:ietf:params:xml:ns:simple-filter\
    \ . . . . . . . . . . . 20\n       9.3.  Schema Registration  . . . . . . . .\
    \ . . . . . . . . . . 20\n   10. Acknowledgements . . . . . . . . . . . . . .\
    \ . . . . . . . . . 20\n   11. References . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . 20\n       11.1. Normative References . . . . . . . . . . .\
    \ . . . . . . . 20\n       11.2. Informative References . . . . . . . . . . .\
    \ . . . . . . 21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The SIP event notification framework [2] describes the usage\
    \ of the\n   Session Initiation Protocol (SIP) for subscriptions and notifications\n\
    \   of changes to a state of a resource.  The document does not describe\n   a\
    \ mechanism whereby filtering of event notification information can\n   be achieved.\n\
    \   Filtering is a mechanism for defining the preferred notification\n   information,\
    \ referred to as content, to be delivered and for\n   specifying the rules for\
    \ when that information should be delivered.\n   The filtering mechanism is expected\
    \ to be particularly valuable and\n   primarily applicable to users of mobile\
    \ wireless access devices.  The\n   characteristics of the devices typically include\
    \ high latency, low\n   bandwidth, low data processing capabilities, small display,\
    \ and\n   limited battery power.  Such devices can benefit from the ability to\n\
    \   filter the amount of information generated at the source of the event\n  \
    \ notification.  However, implementers need to be aware of the\n   computational\
    \ burden on the source of the event notification.  This\n   is discussed further\
    \ in Section 8.\n   The structure of the filter criteria is described using the\
    \ XML\n   schema.  The filter criteria is presented as an XML document.  The\n\
    \   XML document contains the user's preference as to when notifications\n   are\
    \ to be sent to it and what they are to contain.  The scope of the\n   \"when\"\
    \ part is triggering.\n   The triggering is defined as enabling a subscriber to\
    \ specify\n   triggering rules for notifications where the criteria are based\
    \ on\n   changes of the event package [2] specific state information, e.g.,\n\
    \   for the presence information document [15], the change in the value\n   of\
    \ the <status> element.\n   The functionality of the filtering regarding the SIP\
    \ event\n   notifications is specified in [3].\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   In this document, the key words 'MUST', 'MUST NOT', 'REQUIRED',\n\
    \   'SHALL', 'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY',\n   and\
    \ 'OPTIONAL' are to be interpreted as described in RFC 2119 [1] and\n   indicate\
    \ requirement levels for compliant implementations.\n   Throughout the document,\
    \ the \"resulting XML document\" refers to the\n   final XML document that carries\
    \ state information to be delivered to\n   the subscriber after the filters have\
    \ been applied to it.\n   \"Content\" refers to the XML document that appears\
    \ in a notification\n   reflecting the state of a resource.\n"
- title: 3.  Structure of XML-Encoded Simple-Filter
  contents:
  - "3.  Structure of XML-Encoded Simple-Filter\n   A simple-filter is an XML document\
    \ [8] that MUST be well formed and\n   MUST be valid according to schemas, including\
    \ extension schemas,\n   available to the validater, and applicable to the XML\
    \ document.  The\n   simple-filter documents MUST be based on XML 1.0 and MUST\
    \ be encoded\n   using UTF-8.\n   The namespace identifier for elements defined\
    \ by this specification\n   is a URN [5], which uses the namespace identifier\
    \ 'ietf' defined by\n   [6] and extended by [4].  This urn is:\n   urn:ietf:params:xml:ns:simple-filter.\n\
    \   This namespace declaration indicates the namespace on which the\n   filter\
    \ criteria are based.\n"
- title: 3.1.  MIME Type for Simple-Filter Document
  contents:
  - "3.1.  MIME Type for Simple-Filter Document\n   The MIME type for the simple-filter\
    \ document is \"application/\n   simple-filter+xml\".  Any transport protocol\
    \ (SIP [12], for example)\n   used to carry the filters that also carries payload\
    \ type information\n   MUST identify the payload as MIME type\n   \"application/simple-filter+xml\"\
    \ (for example, a Content-Type header\n   field).\n"
- title: 3.2.  The <filter-set> Root Element
  contents:
  - "3.2.  The <filter-set> Root Element\n   The root element of the filter criteria\
    \ is <filter-set>.\n   The <filter-set> element contains the namespace definition\
    \ mentioned\n   above.  With the optional 'package' attribute, it is possible\
    \ to\n   define the package to which the filter criteria is applied.  This\n \
    \  might be especially useful in cases where the XML document containing\n   the\
    \ filter criteria is separated from the events that make use of it\n   or from\
    \ the protocol that usually carries it.\n   The <filter-set> element may contain\
    \ one <ns-bindings> element.\n   The <filter-set> element contains one or more\
    \ <filter> elements.\n"
- title: 3.3.  The <ns-bindings> Element
  contents:
  - "3.3.  The <ns-bindings> Element\n   The <ns-bindings> element is used to bind\
    \ namespaces to local\n   prefixes used in expressions that select elements or\
    \ attributes using\n   the syntax in Section 5.  Those prefixes apply to the <include>,\n\
    \   <exclude>, <changed>, <added>, and <removed> elements.\n   The <ns-bindings>\
    \ element contains one or more <ns-binding> elements.\n   Each <ns-binding> element\
    \ has a 'prefix' attribute.  The value of the\n   'prefix' attribute is a prefix\
    \ used to qualify the elements pointed\n   to by the expression.  The <ns-binding>\
    \ element also has a 'urn'\n   attribute that identifies the namespace that the\
    \ prefix represents.\n"
- title: 3.4.  The <filter> Element
  contents:
  - "3.4.  The <filter> Element\n   The <filter> element is used to specify the content\
    \ of an individual\n   filter.\n   The <filter> element has an 'id' attribute.\
    \  The value of the 'id'\n   attribute MUST be unique within the <filter-set>\
    \ element.  The\n   <filter> MAY have a 'uri' attribute.  The value of the 'uri'\n\
    \   attribute is the URI of the resource to which the filter applies.\n   The\
    \ <filter> MAY have a 'domain' attribute.  The value of the\n   'domain' attribute\
    \ is the domain of the resources to which the filter\n   applies.  The 'uri' attribute\
    \ and the 'domain' attribute MUST NOT\n   appear together in the <filter>.\n \
    \  The URI of the resource is useful in cases where the 'event list'\n   extension\
    \ [17] is used with a package.  Since a subscription to an\n   event package may\
    \ be addressed to an event list, the 'uri' attribute\n   allows the subscriber\
    \ to define a filter specific to an individual\n   resource within that list.\
    \  That resource may be another list.  The\n   'uri' attribute may, of course,\
    \ carry the URI of the list itself.  If\n   the <filter> does not contain the\
    \ 'uri' attribute, the filter applies\n   to the resource identified in the subscription\
    \ request.\n   The 'domain' attribute carries a domain.  In this case, the filter\n\
    \   applies to resources whose URI has a domain part matching that\n   domain.\
    \  This can be used when a subscription is for a resource that\n   is an event\
    \ list with many resources from differing domains.\n   URI matching is done according\
    \ to the matching rules defined for a\n   particular scheme.  When matching domains,\
    \ the user part of the URI\n   is ignored for matching purposes.\n   The <filter>\
    \ MAY have a 'remove' attribute that together with the\n   'id' attribute indicates\
    \ the existing filter to be removed.  The\n   value of the 'remove' attribute\
    \ is of the type \"Boolean\".  The\n   default value is \"false\".\n   The <filter>\
    \ MAY have an 'enabled' attribute that indicates whether a\n   filter is enabled\
    \ or disabled.  The value of the 'enabled' attribute\n   is of the type \"Boolean\"\
    .  The default value is \"true\".\n   The <filter> element MAY contain a <what>\
    \ element and MAY contain one\n   or more <trigger> elements, but it MUST contain\
    \ either the <what>\n   element or the <trigger> element when the filter is being\
    \ enabled for\n   the first time.  When a filter is disabled by setting the 'enabled'\n\
    \   attribute to \"false\", the <what> and <trigger> elements MAY be\n   omitted.\
    \  Similarly, when a filter is re-enabled by setting the\n   'enabled' attribute\
    \ to \"true\", the <what> and <trigger> elements MAY\n   be omitted.\n   Filter\
    \ contents can be changed by changing the contents in the <what>\n   and <trigger>\
    \ elements and maintaining the value of the filter 'id'\n   attribute.\n"
- title: 3.5.  The <what> Element
  contents:
  - "3.5.  The <what> Element\n   The <what> element is used to specify the content\
    \ to be delivered to\n   the user.  It does not specify the exact content but\
    \ the rules that\n   are used to construct that information.\n   The <what> element\
    \ may contain one or more <include> elements and one\n   or more <exclude> elements.\
    \  When more than one <include> element has\n   been defined, the results are\
    \ additive.  That is, each <include>\n   element adds an element or attribute\
    \ to the resulting XML document.\n   When more than one <exclude> element has\
    \ been defined, each <exclude>\n   element value depletes the contents of the\
    \ resulting XML document.\n"
- title: 3.5.1.  The <include> Element
  contents:
  - "3.5.1.  The <include> Element\n   The <include> element is used to select the\
    \ content to be delivered.\n   Its value can identify an XML element, an attribute,\
    \ or a namespace\n   of an XML document to be filtered.  This is indicated using\
    \ the\n   'type' attribute.\n   Note that the resulting XML document MUST be valid.\
    \  Therefore, in\n   addition to including the elements identified with the <include>\n\
    \   element value, all other mandatory XML elements and/or attributes\n   must\
    \ be incorporated in the resulting XML document in order to make\n   it valid.\
    \  This, in practice, means that a subscriber defining a\n   filter only needs\
    \ to <include> optional elements and/or attributes,\n   but may <include> mandatory\
    \ elements and/or attributes as well.\n   There are also cases where a filter\
    \ selects an attribute that belongs\n   to an optional element.  In this case,\
    \ the optional element needs to\n   appear in the resulting XML document.\n  \
    \ The syntax defined in Section 5 (see the definition of \"selection\")\n   MUST\
    \ be used.  The following example selects the <basic> element\n   defined in the\
    \ PIDF [13].  This results in the selection of the\n   <basic> element as well\
    \ as all the ancestors, i.e., <status> and\n   <tuple>.\n   <include type=\"xpath\"\
    >/presence/tuple/status/basic</include>.\n"
- title: 3.5.2.  The <exclude> Element
  contents:
  - "3.5.2.  The <exclude> Element\n   The <exclude> element is used to define exceptions\
    \ to the set of XML\n   elements and/or attributes selected by the <include> elements.\
    \  Thus,\n   XML elements (including their lower-level \"child\" elements) and/or\n\
    \   attributes defined by the <exclude> element are not delivered.  This\n   is\
    \ most useful when an <include> element identifies a namespace.\n   The <exclude>\
    \ element has the optional 'type' attribute (see the\n   definition of the 'type'\
    \ in Section 3.5.3).\n   Note that the resulting XML document MUST be valid. \
    \ Therefore, if\n   the step in applying the <exclude> element value to an XML\
    \ document\n   results in an invalid document according to the schema, that step\n\
    \   MUST be reversed, resulting in the elements and/or attributes being\n   re-introduced\
    \ into the resulting XML document with their previous\n   values in order to make\
    \ it valid.  This, in practice, means that a\n   subscriber defining a filter\
    \ only needs to <exclude> optional\n   elements and/or attributes, but SHOULD\
    \ NOT <exclude> mandatory\n   elements and/or attributes.\n   The syntax MUST\
    \ follow Section 5.\n"
- title: 3.5.3.  The 'type' Attribute
  contents:
  - "3.5.3.  The 'type' Attribute\n   The 'type' attribute is used to describe the\
    \ value of the <include>\n   and <exclude> elements.  The following values are\
    \ pre-defined:\n   \"xpath\" and \"namespace\".  The 'type' attribute is optional,\
    \ and, if\n   omitted, the default value is \"xpath\".\n   The \"xpath\" value\
    \ is used when the <include> or <exclude> element\n   contains a value following\
    \ the syntax in Section 5 that selects an\n   element or an attribute.\n   The\
    \ \"namespace\" value is used when the <include> or <exclude> element\n   contains\
    \ a value of a namespace.  The value is the URI of the\n   namespace.  The resulting\
    \ XML document is comprised of the elements\n   defined within the namespace.\n"
- title: 3.6.  The <trigger> Element
  contents:
  - "3.6.  The <trigger> Element\n   The <trigger> element is used to identify the\
    \ package-specific\n   changes that a resource has to encounter before the content\
    \ is\n   delivered to the subscriber.  It can appear more than once in a\n   <filter>\
    \ element.  Multiple appearances of this element denote the\n   \"OR\" operation.\
    \  This means that updates to a resource that satisfy\n   any of the <trigger>\
    \ elements criteria constitute the content to be\n   delivered.\n   The <trigger>\
    \ element MAY contain the <changed>, <added>, or\n   <removed> elements, but it\
    \ MUST contain at least one of the three\n   elements.  Any combination of the\
    \ 3 elements is possible.  Multiple\n   appearances of those elements within a\
    \ <trigger> element denotes the\n   \"AND\" operation.  This means that updates\
    \ to a resource that satisfy\n   ALL of the <changed>, <added>, and <removed>\
    \ elements' criteria\n   within the <trigger> element constitute the content to\
    \ be delivered.\n"
- title: 3.6.1.  The <changed> Element
  contents:
  - "3.6.1.  The <changed> Element\n   The <changed> element is used to identify the\
    \ XML element or\n   attribute, from the package-specific XML document, whose\
    \ value MUST\n   change from that of the \"previous XML document\", in order to\
    \ activate\n   the trigger and cause the content to be delivered.  Previous XML\n\
    \   document\" in this context refers to the raw version of the most\n   recent\
    \ XML document that was sent to the subscriber, before the\n   filters were applied\
    \ to it.  The XML element or attribute MUST be\n   expressed using the syntax\
    \ defined in Section 5 for the \"reference\"\n   ABNF.\n   The <changed> element\
    \ MAY contain the 'from' attribute, the 'to'\n   attribute, the 'by' attribute,\
    \ or any combination of the three.  The\n   absence of all of those attributes\
    \ means a change of any sort to the\n   value of the element or attribute activates\
    \ the trigger.  An update\n   to the element or attribute value with an identical\
    \ value is not a\n   change.\n   Comparison of a change is done according to the\
    \ element or\n   attribute's lexical rules.\n"
- title: 3.6.1.1.  The 'from' Attribute
  contents:
  - "3.6.1.1.  The 'from' Attribute\n   A trigger is active when the XML element or\
    \ attribute identified with\n   the <changed> element has changed from the value\
    \ indicated by this\n   attribute to a different value.\n"
- title: 3.6.1.2.  The 'to' Attribute
  contents:
  - "3.6.1.2.  The 'to' Attribute\n   A trigger is active when the XML element or\
    \ attribute identified with\n   the <changed> element has changed to the value\
    \ indicated by this\n   attribute from a different value.\n"
- title: 3.6.1.3.  The 'by' Attribute
  contents:
  - "3.6.1.3.  The 'by' Attribute\n   A trigger is active when the XML element or\
    \ attribute identified with\n   the <changed> element has changed by at least\
    \ the amount indicated by\n   this attribute from a different value.  That is,\
    \ the 'by' attribute\n   applies only to numerical values and indicates a delta\
    \ with respect\n   to the current value that an attribute or element (identified\
    \ in the\n   <changed> element) needs to change before it is selected.  For\n\
    \   example, if the 'by' attribute is set to 2 and the current value of\n   the\
    \ element/attribute is 6, the element/attribute is selected when it\n   reaches\
    \ (or exceeds) the value 8 or when it decreases to 4 or a lower\n   value.\n"
- title: 3.6.1.4.  Combination of Attributes
  contents:
  - "3.6.1.4.  Combination of Attributes\n   Any combination of the 'from', 'to',\
    \ and 'by' attributes in the\n   <changed> element is possible.  For example,\
    \ if the 'from' attribute\n   is combined with the 'to' attribute, it is interpreted\
    \ to mean that\n   the trigger is active when the XML element or attribute identified\n\
    \   with the <changed> element has changed from the 'from' value to the\n   'to'\
    \ value.  Note that if the 'by' attribute is used in combination\n   with the\
    \ other attributes, the other attribute types MUST match the\n   'by' type of\
    \ decimal.\n"
- title: 3.6.2.  The <added> Element
  contents:
  - "3.6.2.  The <added> Element\n   The <added> element triggers content delivery\
    \ when the XML element it\n   identifies has been added to the document being\
    \ filtered (that is,\n   this instance of that element appears in the current\
    \ document, but\n   not in the previous document).  It can be used, for example,\
    \ to learn\n   of new services and/or capabilities subscribed to by the user,\
    \ or\n   services and/or capabilities that the user has now allowed the\n   subscriber\
    \ to see.  The XML element or attribute MUST be expressed\n   using the syntax\
    \ defined in Section 5 for the \"reference\" ABNF.\n   Note that if a filter includes\
    \ both the content filter (<what>) part\n   and the <added> element, then the\
    \ definitions of the <what> part\n   SHOULD also cover the added elements.  Otherwise,\
    \ the content is\n   delivered without the items defined in the <added> element.\n"
- title: 3.6.3.  The <removed> Element
  contents:
  - "3.6.3.  The <removed> Element\n   The <removed> element triggers content delivery\
    \ when the XML element\n   it identifies has been removed from the document being\
    \ filtered (that\n   is, this instance of that element appeared in the previous\
    \ document,\n   but not in this document).  The XML element or attribute MUST\
    \ be\n   expressed using the syntax defined in Section 5 for the \"reference\"\
    \n   ABNF.\n"
- title: 4.  XML Schema Extensibility
  contents:
  - "4.  XML Schema Extensibility\n   The simple-filter document is meant to be extended.\
    \  An extension\n   takes place by defining a new set of elements in a new namespace,\n\
    \   governed by a new schema.  Every extension MUST have an appropriate\n   XML\
    \ namespace assigned to it.  The XML namespace of the extension\n   MUST be different\
    \ from the namespaces defined in this specification.\n   The extension MUST NOT\
    \ change the syntax or semantics of the schemas\n   defined in this document.\
    \  All XML tags and attributes that are part\n   of the extension MUST be appropriately\
    \ qualified so as to place them\n   within that namespace and MUST be designed\
    \ such that receivers can\n   safely ignore such extensions.\n   This specification\
    \ defines explicit places where new elements or\n   attributes from an extension\
    \ can be placed.  These are explicitly\n   indicated in the schemas by the <any>\
    \ and <anyAttribute> elements.\n   Extensions to this specification MUST specify\
    \ where their elements\n   can be placed within the document.\n   As a result,\
    \ a document that contains extensions will require\n   multiple schemas in order\
    \ to determine its validity - a schema\n   defined in this document, along with\
    \ those defined by extensions\n   present in the document.  Because extensions\
    \ occur by adding new\n   elements and attributes governed by new schemas, the\
    \ schemas defined\n   in this document are fixed and would only be changed by\
    \ a revision to\n   this specification.  Such a revision, should it take place,\
    \ would\n   endeavor to allow documents compliant to the previous schema to\n\
    \   remain compliant to the new one.  As a result, the schemas defined\n   here\
    \ don't provide explicit schema versions, as this is not expected\n   to be needed.\n"
- title: 5.  Syntax for Referencing XML Items and Making Logical Expressions
  contents:
  - "5.  Syntax for Referencing XML Items and Making Logical Expressions\n   The ABNF\
    \ [10] is used to describe the syntax for the expressions.\n   The syntax is defined\
    \ to be XPATH [9] compatible but has only a\n   restricted set of capabilities\
    \ of the XPATH.  More information about\n   the meaning of the items of the syntax\
    \ can be found in [9].  The\n   \"abbreviated syntax\" of the \"node test\" is\
    \ used in the references\n   (\"reference\").  The expression in the syntax relates\
    \ to the\n   predicate, comparison, and logical expressions of the XPATH.  If\
    \ an\n   XPATH expression evaluates to more than one element at a certain\n  \
    \ step, the filter applies to all the elements that are evaluated.\n   That is,\
    \ if a filter including an element evaluates to 2 elements,\n   both elements\
    \ are included as a result.\n   selection = reference [expression]\n   expression\
    \ = \"[\" (elem-expr / attr-expr)\n                         1*[oper (elem-expr\
    \ / attr-expr)] \"]\"\n   elem-expr = (elem-path / \".\" / \"..\") compar value\n\
    \   elem-path = (element / \"*\") 1*[\"/\" / \"*\" / element] [\"*\" / element]\n\
    \   attr-expr = [elem-path \"/\"] attribute compar value\n   reference = elem-reference\
    \ / attr-reference\n   elem-reference =  \"/\" 1*(\"/\" / \"/*\" / (\"/\" element))\n\
    \   attr-reference = reference attribute\n   oper = \"and\" / \"or\"\n   compar\
    \ = \"=\" / \"<\" / \">\"\n   element = [ns] string\n   attribute = \"@\" [ns]\
    \ string\n   ns = string \":\"\n   string = <any sequence of data supported by\
    \ XML in names of XML\n   element, and/or attribute or prefixes of namespaces>\n\
    \   value = <any sequence of data supported by XML as a value of the\n   XML element\
    \ and/or attribute>\n   When identifying XML elements or attributes, the value\
    \ may consist of\n   two parts: the XML element/attribute selector and the condition\n\
    \   (comparison and logical expressions).  The XML element selector\n   appears\
    \ first followed by the condition part in square brackets.  In\n   the XML element\
    \ selector part, the XML elements may be referenced by\n   giving the full hierarchical\
    \ path as: \"/presence/tuple/status/basic\",\n   by denoting the selection to\
    \ cover any hierarchical level by its name\n   as: \"//tuple/status/basic\", or\
    \ using the wildcard \"*\", denoting any\n   value in a certain level as \"/*/watcher\"\
    .\n   Example references are listed as follows:\n   o  Selecting an element by\
    \ using an XML element as a condition:\n      *  //*[status/basic=\"open\"]\n\
    \      *  /presence/tuple[*/basic=\"open\"]\n   o  Selecting an element by using\
    \ XML attributes as a condition:\n      *  //watcher[@duration-subscribed<500]\n\
    \      *  /*/watcher[@event=\"rejected\"]\n   o  Selecting an element by using\
    \ two XML elements as a condition:\n      *  //tuple[status/basic=\"open\" and\
    \ type=\"device\"]\n   o  Selecting an attribute:\n      *  //watcher/@duration-subscribed\n\
    \   In some cases, due to the design of the XML schema, the XPATH-like\n   expression\
    \ results in identification of more than one element with\n   the same name (the\
    \ XPATH expression may not have uniquely identified\n   an element at every step).\
    \  In those cases, all elements identified\n   are selected.\n   When evaluating\
    \ XPATH location steps, namespace expansion follows\n   XPATH 1.0 [9] semantics,\
    \ i.e., if the QName does not have a prefix,\n   then the namespace URI in the\
    \ expanded name is null.  With\n   non-default namespaces, expansion is done according\
    \ to the given\n   <ns-bindings> definitions.  When a default namespace is used\
    \ in the\n   document, the <ns-binding> element SHOULD be used to define an equal\n\
    \   URI with some prefix in order to have a valid XPATH evaluation in\n   location\
    \ steps.\n"
- title: 6.  Examples
  contents:
  - "6.  Examples\n   The XML Schema for the XML document examples is specified in\n\
    \   Section 7.\n"
- title: 6.1.  Filter Criteria Using <what> Element
  contents:
  - "6.1.  Filter Criteria Using <what> Element\n   A user wishes to get to know his\
    \ friend's availability and\n   willingness for messaging (SMS, IM, and MMS) in\
    \ order to know whether\n   the friend is able to receive a message, the address\
    \ to contact, and\n   the type of the message to be used.\n   This example shows\
    \ how to define a content filter.  The <basic>\n   element as well as all parent\
    \ elements are selected based on a\n   condition defined by a logical expression.\
    \  The condition is <class>\n   elements that have a value \"MMS\", \"SMS\", or\
    \ \"IM\".\n   The <class> element is defined in [14] as an extension to PIDF [13].\n\
    \   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <filter-set xmlns=\"urn:ietf:params:xml:ns:simple-filter\"\
    >\n     <ns-bindings>\n       <ns-binding prefix=\"pidf\" urn=\"urn:ietf:params:xml:ns:pidf\"\
    />\n       <ns-binding prefix=\"rpid\"\n                          urn=\"urn:ietf:params:xml:ns:pidf:rpid\"\
    />\n     </ns-bindings>\n     <filter id=\"123\" uri=\"sip:presentity@example.com\"\
    >\n       <what>\n         <include type=\"xpath\">\n           /pidf:presence/pidf:tuple[rpid:class=\"\
    IM\" or rpid:class=\"SMS\"\n           or rpid:class=\"MMS\"]/pidf:status/pidf:basic\n\
    \         </include>\n       </what>\n     </filter>\n   </filter-set>\n"
- title: 6.2.  Filter Criteria Using <trigger> Element
  contents:
  - "6.2.  Filter Criteria Using <trigger> Element\n   A user requires to be informed\
    \ when his colleague becomes available\n   by some communication means.  The user\
    \ gets the full presence state\n   of the colleague when a certain PIDF [13] tuple\
    \ <basic> status\n   changes from \"closed\" to \"open\".\n   <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n   <filter-set xmlns=\"urn:ietf:params:xml:ns:simple-filter\"\
    >\n     <ns-bindings>\n       <ns-binding prefix=\"pidf\" urn=\"urn:ietf:params:xml:ns:pidf\"\
    />\n     </ns-bindings>\n     <filter id=\"123\" uri=\"sip:presentity@example.com\"\
    >\n       <trigger>\n         <changed from=\"CLOSED\" to=\"OPEN\">\n        \
    \   /pidf:presence/pidf:tuple/pidf:status/pidf:basic\n         </changed>\n  \
    \ </trigger>\n   </filter>\n   </filter-set>\n"
- title: 6.3.  Filter Criteria Using <what> and <trigger> Elements
  contents:
  - "6.3.  Filter Criteria Using <what> and <trigger> Elements\n   A user wishes to\
    \ get information about pending and waiting\n   subscriptions in order to be able\
    \ to authorise watchers to see his\n   presence information.\n   The filter selects\
    \ watcher information notifications [16] to be sent\n   when a subscription status\
    \ has changed to \"pending\" or \"waiting\".  In\n   the notification, only the\
    \ watchers that have a status of \"pending\"\n   or \"waiting\" are included.\n\
    \   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <filter-set xmlns=\"urn:ietf:params:xml:ns:simple-filter\"\
    >\n     <ns-bindings>\n       <ns-binding prefix=\"wi\"\n                    \
    \      urn=\"urn:ietf:params:xml:ns:watcherinfo\"/>\n     </ns-bindings>\n   \
    \  <filter id=\"123\" uri=\"sip:presentity@example.com\">\n       <what>\n   \
    \      <include>\n           /wi:watcherinfo/wi:watcher-list/wi:watcher[@status=\"\
    pending\"\n           or @status=\"waiting\"]\n         </include>\n       </what>\n\
    \       <trigger>\n         <changed to=\"pending\">\n           /wi:watcherinfo/wi:watcher-list/wi:watcher/@status\n\
    \         </changed>\n       </trigger>\n       <trigger>\n         <changed to=\"\
    waiting\">\n           /wi:watcherinfo/wi:watcher-list/wi:watcher/@status\n  \
    \       </changed>\n       </trigger>\n     </filter>\n   </filter-set>\n"
- title: 6.4.  Content Filter Using Namespaces
  contents:
  - "6.4.  Content Filter Using Namespaces\n   A user turns her terminal on, and the\
    \ terminal automatically fetches\n   general presence status and information about\
    \ communication means\n   from a certain pre-defined set of her buddies.\n   The\
    \ filter is defined to select XML elements belonging to the PIDF\n   namespace.\n\
    \   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <filter-set xmlns=\"urn:ietf:params:xml:ns:simple-filter\"\
    >\n     <filter id=\"123\" uri=\"sip:buddylist@example.com\">\n       <what>\n\
    \         <include type=\"namespace\">\n           urn:ietf:params:xml:ns:pidf\n\
    \         </include>\n       </what>\n     </filter>\n   </filter-set>\n"
- title: 6.5.  Content Filter Using Only <include> Elements
  contents:
  - "6.5.  Content Filter Using Only <include> Elements\n   A user wants to know if\
    \ a group of his friends is available for\n   gaming.  He orders notifications\
    \ about the current status and future\n   changes of the game-specific presence\
    \ information.\n   This filter is defined to select the game-specific tuple to\
    \ be\n   delivered.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <filter-set\
    \ xmlns=\"urn:ietf:params:xml:ns:simple-filter\" >\n     <ns-bindings>\n     \
    \  <ns-binding prefix=\"game-ext\"\n                          urn=\"urn:ietf:params:xml:ns:game-ext\"\
    />\n     </ns-bindings>\n     <filter id=\"123\">\n       <what>\n         <include>\n\
    \           /pidf:presence/pidf:tuple/\n           pidf:status[game-ext:label=\"\
    game-X\"]\n         </include>\n       </what>\n     </filter>\n   </filter-set>\n"
- title: 6.6.  Two Content Filters as Filter Criteria
  contents:
  - "6.6.  Two Content Filters as Filter Criteria\n   The user is interested in getting\
    \ up-to-date information about the\n   communication means and contact addresses\
    \ of his friends.  The user\n   also wants to get more information (e.g., location)\
    \ about one of the\n   friends in the list, named Bob.  The PIDF element <note>\
    \ is filtered\n   out, i.e., excluded.  The list was predefined as buddies@example.com.\n\
    \   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <filter-set xmlns=\"urn:ietf:params:xml:ns:simple-filter\"\
    >\n     <ns-bindings>\n       <ns-binding prefix=\"pidf\" urn=\"urn:ietf:params:xml:ns:pidf\"\
    />\n       <ns-binding prefix=\"rpid\"\n                          urn=\"urn:ietf:params:xml:ns:pidf:rpid\"\
    />\n     </ns-bindings>\n     <filter id=\"8439\" uri=\"sip:buddies@example.com\"\
    >\n       <what>\n         <include>\n           /pidf:presence/pidf:tuple[rpid:class=\"\
    service\"]/pidf:status/\n           pidf:basic\n         </include>\n       </what>\n\
    \       </filter>\n     <filter id=\"999\" uri=\"sip:bob@example.com\">\n    \
    \   <what>\n         <include type=\"namespace\">\n           urn:ietf:params:xml:ns:pidf\n\
    \         </include>\n         <exclude>\n           /pidf:presence/pidf:tuple/pidf:note\n\
    \         </exclude>\n       </what>\n     </filter>\n   </filter-set>\n"
- title: 7.  XML Schema for Filter Criteria
  contents:
  - "7.  XML Schema for Filter Criteria\n   XML Schema Implementation (Normative)\n\
    \   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <xs:schema targetNamespace=\"\
    urn:ietf:params:xml:ns:simple-filter\"\n          xmlns=\"urn:ietf:params:xml:ns:simple-filter\"\
    \n          xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n          elementFormDefault=\"\
    qualified\">\n     <xs:import namespace=\"http://www.w3.org/XML/1998/namespace\"\
    \n                      schemaLocation=\"http://www.w3.org/2001/xml.xsd\"/>\n\
    \     <xs:annotation>\n       <xs:documentation xml:lang=\"en\">\n         XML\
    \ Schema Definition for Filter Criteria.\n       </xs:documentation>\n     </xs:annotation>\n\
    \     <xs:element name=\"filter-set\" type=\"FilterSetType\"/>\n       <xs:complexType\
    \ name=\"FilterSetType\">\n         <xs:sequence>\n           <xs:element name=\"\
    ns-bindings\" type=\"NSBindings\"\n                               minOccurs=\"\
    0\" maxOccurs=\"1\"/>\n           <xs:element name=\"filter\" type=\"FilterType\"\
    \n                               minOccurs=\"1\"\n         maxOccurs=\"unbounded\"\
    />\n           </xs:sequence>\n         <xs:attribute name=\"package\" type=\"\
    xs:string\" use=\"optional\"/>\n         <xs:anyAttribute namespace=\"##other\"\
    \ processContents=\"lax\"/>\n       </xs:complexType>\n     <xs:complexType name=\"\
    NSBindings\">\n       <xs:sequence>\n         <xs:element name=\"ns-binding\"\
    \ type=\"NSBinding\"\n                             minOccurs=\"1\" maxOccurs=\"\
    unbounded\"/>\n       </xs:sequence>\n     </xs:complexType>\n     <xs:complexType\
    \ name=\"NSBinding\">\n       <xs:attribute name=\"prefix\" type=\"xs:string\"\
    \ use=\"required\"/>\n       <xs:attribute name=\"urn\" type=\"xs:anyURI\" use=\"\
    required\"/>\n     </xs:complexType>\n     <xs:complexType name=\"FilterType\"\
    >\n       <xs:sequence>\n         <xs:element name=\"what\" type=\"WhatType\"\n\
    \                             minOccurs=\"0\" maxOccurs=\"1\"/>\n         <xs:element\
    \ name=\"trigger\" type=\"TriggerType\"\n                             minOccurs=\"\
    0\" maxOccurs=\"unbounded\"/>\n         <xs:any namespace=\"##other\" processContents=\"\
    lax\"\n                       minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n    \
    \   </xs:sequence>\n       <xs:attribute name=\"id\"  type=\"xs:string\" use=\"\
    required\"/>\n       <xs:attribute name=\"uri\" type=\"xs:anyURI\" use=\"optional\"\
    />\n       <xs:attribute name=\"domain\" type=\"xs:string\" use=\"optional\"/>\n\
    \       <xs:attribute name=\"remove\" type=\"xs:boolean\" use=\"optional\"\n \
    \                           default=\"false\"/>\n       <xs:attribute name=\"\
    enabled\" type=\"xs:boolean\" use=\"optional\"\n                            default=\"\
    true\"/>\n       <xs:anyAttribute namespace=\"##other\" processContents=\"lax\"\
    />\n     </xs:complexType>\n     <xs:complexType name=\"WhatType\">\n       <xs:sequence>\n\
    \         <xs:element name=\"include\" type=\"InclType\"\n                   \
    \          minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n         <xs:element name=\"\
    exclude\" type=\"ExclType\"\n                             minOccurs=\"0\" maxOccurs=\"\
    unbounded\"/>\n         <xs:any namespace=\"##other\" processContents=\"lax\"\n\
    \                       minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n       </xs:sequence>\n\
    \     </xs:complexType>\n     <xs:complexType name=\"InclType\">\n       <xs:simpleContent>\n\
    \         <xs:extension base=\"xs:string\">\n           <xs:attribute name=\"\
    type\" type=\"TypeType\"\n                                default=\"xpath\" use=\"\
    optional\"/>\n           <xs:anyAttribute namespace=\"##other\" processContents=\"\
    lax\"/>\n         </xs:extension>\n       </xs:simpleContent>\n     </xs:complexType>\n\
    \     <xs:complexType name=\"ExclType\">\n       <xs:simpleContent>\n        \
    \ <xs:extension base=\"xs:string\">\n           <xs:attribute name=\"type\" type=\"\
    TypeType\"\n                                default=\"xpath\" use=\"optional\"\
    />\n           <xs:anyAttribute namespace=\"##other\" processContents=\"lax\"\
    />\n         </xs:extension>\n       </xs:simpleContent>\n   </xs:complexType>\n\
    \     <xs:simpleType name=\"TypeType\">\n       <xs:restriction base=\"xs:string\"\
    >\n         <xs:enumeration value=\"xpath\"/>\n         <xs:enumeration value=\"\
    namespace\"/>\n       </xs:restriction>\n     </xs:simpleType>\n     <xs:complexType\
    \ name=\"TriggerType\">\n       <xs:sequence>\n       <xs:element name=\"changed\"\
    \ type=\"ChangedType\"\n                           minOccurs=\"0\" maxOccurs=\"\
    unbounded\"/>\n       <xs:element name=\"added\" type=\"xs:string\"\n        \
    \                   minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n       <xs:element\
    \ name=\"removed\" type=\"xs:string\"\n                           minOccurs=\"\
    0\" maxOccurs=\"unbounded\"/>\n       <xs:any namespace=\"##other\" processContents=\"\
    lax\"\n                          minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n \
    \      </xs:sequence>\n     </xs:complexType>\n     <xs:complexType name=\"ChangedType\"\
    >\n       <xs:simpleContent>\n         <xs:extension base=\"xs:string\">\n   \
    \        <xs:attribute name=\"from\" type=\"xs:anySimpleType\"\n             \
    \                   use=\"optional\"/>\n           <xs:attribute name=\"to\" type=\"\
    xs:anySimpleType\"\n                                use=\"optional\"/>\n     \
    \      <xs:attribute name=\"by\" type=\"xs:decimal\"\n                       \
    \         use=\"optional\"/>\n           <xs:anyAttribute namespace=\"##other\"\
    \ processContents=\"lax\"/>\n         </xs:extension>\n       </xs:simpleContent>\n\
    \     </xs:complexType>\n   </xs:schema>\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The filters in the body in a SIP message have\
    \ a significant effect on\n   the ways in which the request is handled at a server.\
    \  As a result,\n   it is especially important that messages containing this extension\
    \ be\n   authenticated and authorised.  Authentication can be achieved using\n\
    \   the Digest Authentication mechanism described in [12].  The\n   authorisation\
    \ decision is based on the permissions that the resource\n   (notifier) has given\
    \ to the watcher.  An example of such an\n   auhorisation policy can be found\
    \ in [18].\n   Requests can reveal sensitive information about a UA's capabilities.\n\
    \   If this information is sensitive, it SHOULD be encrypted using SIP\n   S/MIME\
    \ capabilities [11].\n   All filtering-related security measures discussed in\
    \ [2] MUST be\n   followed along with package-specific security.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   This document registers a new MIME type, \"application/\n\
    \   simple-filter+xml\", and registers a new XML namespace.\n   This specification\
    \ follows the guidelines of RFC3023 [7].\n"
- title: 9.1.  application/simple-filter+xml MIME TYPE
  contents:
  - "9.1.  application/simple-filter+xml MIME TYPE\n   MIME media type: application\n\
    \   MIME subtype name: simple-filter+xml\n   Mandatory parameters: none\n   Optional\
    \ parameters: Same as charset parameter application/xml, as\n   specified in RFC\
    \ 3023 [7].\n   Encoding considerations: Same as encoding considerations of\n\
    \   application/xml, as specified in RFC 3023 [7].\n   Security considerations:\
    \ See section 10 of RFC 3023 [7] and section\n   Section 8 of this document.\n\
    \   Interoperability considerations: none.\n   Published specification: This document.\n\
    \   Applications that use this media type: This document type has been\n   used\
    \ to support the SIP-based Event notification framework and its\n   packages.\n\
    \   Additional information:\n   Magic number: None\n   File extension: .cl or\
    \ .xml\n   Macintosh file type code: \"TEXT\"\n   Personal and email address for\
    \ further information: Hisham Khartabil\n   (hisham.khartabil@telio.no)\n   Intended\
    \ Usage: COMMON\n   Author/change controller: The IETF\n"
- title: 9.2.  URN Sub-Namespace Registration for
  contents:
  - "9.2.  URN Sub-Namespace Registration for\n      urn:ietf:params:xml:ns:simple-filter\n\
    \   This section registers a new XML namespace, as per guidelines in the\n   IETF\
    \ XML Registry [4].\n   URI: The URI for this namespace is\n   urn:ietf:params:xml:ns:simple-filter.\n\
    \   Registrant Contact: IETF, SIMPLE working group, Hisham Khartabil\n   (hisham.khartabil@telio.no)\n"
- title: 9.3.  Schema Registration
  contents:
  - "9.3.  Schema Registration\n   This section registers a new XML schema per the\
    \ procedures in [4].\n   URI: urn:ietf:params:xml:ns:simple-filter\n   Registrant\
    \ Contact: IETF, SIMPLE working group, Hisham Khartabil\n   (hisham.khartabil@telio.no).\n\
    \   The XML for this schema can be found as the sole content of\n   Section 7.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   The authors would like to thank Jonathan Rosenberg,\
    \ Henning\n   Schulzrinne, Tim Moran, Jari Urpalainen, Sreenivas Addagatla,\n\
    \   Miguel-Angel Garcia Martin, Mary Barnes, Paul Kyzivat, Robert Sparks,\n  \
    \ and Elwyn Davies for their valuable input and comments.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [2]   Roach, A. B., \"Session Initiation Protocol (SIP)-Specific Event\n \
    \        Notification\", RFC 3265, June 2002.\n   [3]   Khartabil, H., Leppanen,\
    \ E., Lonnfors, M., and J. Costa-\n         Requena, \"Functional Description\
    \ of Event Notification\n         Filtering\", RFC 4660, September 2006.\n   [4]\
    \   Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n         January\
    \ 2004.\n   [5]   Moats, R., \"URN Syntax\", RFC 2141, May 1997.\n   [6]   Moats,\
    \ R., \"A URN Namespace for IETF Documents\", RFC 2648,\n         August 1999.\n\
    \   [7]   Murata, M., St. Laurent, S., and D. Kohn, \"XML Media Types\",\n   \
    \      RFC 3023, January 2001.\n   [8]   Bray, T., \"Exensible Markup Language\
    \ (XML) 1.0 (Second\n         Edition)\",  W3C CR CR-xml11-20011006, October 2000.\n\
    \   [9]   Clark, J., \"XML Path Language (XPath) Version 1.0\",  W3C REC\n   \
    \      REC-xpath-19991116, November 1999.\n   [10]  Crocker, D. and P. Overell,\
    \ \"Augmented BNF for Syntax\n         Specifications: ABNF\", RFC 4234, October\
    \ 2005.\n   [11]  Ramsdell, B., \"Secure/Multipurpose Internet Mail Extensions\n\
    \         (S/MIME) Version 3.1 Message Specification\", RFC 3851, July\n     \
    \    2004.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [12]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston, A.,\n         Peterson, J., Sparks, R., Handley, M., and E. Schooler,\
    \ \"SIP:\n         Session Initiation Protocol\", RFC 3261, June 2002.\n   [13]\
    \  Sugano, H., Fujimoto, S., Klyne, G., Bateman, A., Carr, W., and\n         J.\
    \ Peterson, \"Presence Information Data Format (PIDF)\", RFC\n         3863, August\
    \ 2004.\n   [14]  Schulzrinne, H., Gurbani, V., Kyzivat, P., and J. Rosenberg,\n\
    \         \"RPID -- Rich Presence Extensions to the Presence Information\n   \
    \      Data Format (PIDF)\", RFC 4480, July 2006.\n   [15]  Rosenberg, J., \"\
    A Presence Event Package for the Session\n         Initiation Protocol (SIP)\"\
    , RFC 3856, August 2004.\n   [16]  Rosenberg, J., \"An Extensible Markup Language\
    \ (XML) Based\n         Format for Watcher Information\", RFC 3858, August 2004.\n\
    \   [17]  Roach, A. B., Campbell, B., and J. Rosenberg, \"A Session\n        \
    \ Initiation Protocol (SIP) Event Notification Extension for\n         Resource\
    \ Lists\", RFC 4663, September 2006.\n   [18]  Rosenberg, J., \"Presence Authorization\
    \ Rules\", Work in\n         Progress, June 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Hisham Khartabil\n   Telio\n   P.O. Box 1203 Vika\n  \
    \ Oslo\n   Norway\n   Phone: +47 2167 3544\n   EMail: hisham.khartabil@telio.no\n\
    \   Eva Leppanen\n   Nokia\n   P.O BOX 785\n   Tampere\n   Finland\n   Phone:\
    \ +358 7180 77066\n   EMail: eva-maria.leppanen@nokia.com\n   Mikko Lonnfors\n\
    \   Nokia\n   P.O BOX 321\n   Helsinki\n   Finland\n   Phone: + 358 71800 8000\n\
    \   EMail: mikko.lonnfors@nokia.com\n   Jose Costa-Requena\n   Nokia\n   P.O.\
    \ Box 321\n   FIN-00045 NOKIA GROUP\n   FINLAND\n   Phone: +358 71800 8000\n \
    \  EMail: jose.costa-requena@nokia.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
