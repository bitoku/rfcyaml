- title: __initial_text__
  contents:
  - "                     Using the Domain Name System\n                  To Store\
    \ Arbitrary String Attributes\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  Discussion and suggestions for improvement are requested.\n  \
    \ Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   While the Domain Name System (DNS) [2,3] is generally used to store\n\
    \   predefined types of information (e.g., addresses of hosts), it is\n   possible\
    \ to use it to store information that has not been previously\n   classified.\n\
    \   This paper describes a simple means to associate arbitrary string\n   information\
    \ (ASCII text) with attributes that have not been defined\n   by the DNS.  It\
    \ uses DNS TXT resource records to store the\n   information.  It requires no\
    \ change to current DNS implementations.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Domain Name System is designed to store information\
    \ that has both\n   a predefined type and structure.  Examples include IP addresses\
    \ of\n   hosts and names of mail exchangers.  It would be useful to take\n   advantage\
    \ of the widespread use and scaleability of the DNS to store\n   information that\
    \ has not been previously defined.\n   This paper proposes the use of the DNS\
    \ TXT resource record (defined\n   in STD 13, RFC 1035) to contain new types of\
    \ information.  The\n   principal advantage of such an approach is that it requires\
    \ no change\n   to most existing DNS servers.  It is not intended to replace the\n\
    \   process by which new resource records are defined and implemented.\n"
- title: 2.  Format of TXT record
  contents:
  - "2.  Format of TXT record\n   To store new types of information, the TXT record\
    \ uses a structured\n   format in its TXT-DATA field.  The format consists of\
    \ the attribute\n   name followed by the value of the attribute.  The name and\
    \ value are\n   separated by an equals sign (=).\n   For example, the following\
    \ TXT records contain attributes specified\n   in this fashion:\n        host.widgets.com\
    \   IN   TXT   \"printer=lpr5\"\n        sam.widgets.com    IN   TXT   \"favorite\
    \ drink=orange juice\"\n   The general syntax is:\n        <owner> <class> <ttl>\
    \ TXT \"<attribute name>=<attribute value>\"\n   Attribute Names\n   Any printable\
    \ ASCII character is permitted for the attribute name.\n   If an equals sign is\
    \ embedded in the attribute name, it must be\n   quoted with a preceding grave\
    \ accent (or backquote: \"`\").  A\n   backquote must also be quoted with an additional\
    \ \"`\".\n   Attribute Name Matching Rules\n   The attribute name is considered\
    \ case-insensitive.  For example, a\n   lookup of the attribute \"Favorite Drink\"\
    \ would match a TXT record\n   containing \"favorite drink=Earl Grey tea\".\n\
    \   During lookups, TXT records that do not contain an unquoted \"=\" are\n  \
    \ ignored.  TXT records that seem to contain a null attribute name,\n   that is,\
    \ the TXT-DATA starts with the character \"=\", are also\n   ignored.\n   Leading\
    \ and trailing whitespace (spaces and tabs) in the attribute\n   name are ignored\
    \ unless they are quoted (with a \"`\").  For example,\n   \"abc\" matches \"\
    \ abc<tab>\" but does not match \"` abc\".\n   Note that most DNS server implementations\
    \ require a backslash (\\) or\n   double quote (\") in a text string to be quoted\
    \ with a preceding\n   backslash.  Accent grave (\"`\") was chosen as a quoting\
    \ character in\n   this syntax to avoid confusion with \"\\\" (and remove the\
    \ need for\n   confusing strings that include sequences like \"\\\\\\\\\").\n\
    \   Attribute Values\n   All printable ASCII characters are permitted in the attribute\
    \ value.\n   No characters need to be quoted with a \"`\".  In other words, the\n\
    \   first unquoted equals sign in the TXT record is the name/value\n   delimiter.\
    \  All subsequent characters are part of the value.\n   Once again, note that\
    \ in most implementations the backslash character\n   is an active quoting character\
    \ (and must, itself, be quoted).\n   All whitespace in the attribute value is\
    \ returned to the requestor\n   (it is up to the application to decide if it is\
    \ significant.)\n   Examples\n   <sp> indicates a space character.\n   Attribute\
    \    Attribute       Internal Form           External Form\n   Name         Value\
    \           (server to resolver)    (TXT record)\n   color        blue       \
    \     color=blue              \"color=blue\"\n   equation     a=4            \
    \ equation=a=4            \"equation=a=4\"\n   a=a          true            a`=a=true\
    \               \"a`=a=true\"\n   a\\=a false           a\\`=a=false         \
    \    \"a\\\\`=a=false\"\n   =            \\=              `==\\=             \
    \      \"`==\\\\=\"\n   string       \"Cat\"           string=\"Cat\"        \
    \    \"string=\\\"Cat\\\"\"\n   string2      `abc`           string2=``abc`` \
    \        \"string2=``abc``\"\n   novalue                      novalue=       \
    \         \"novalue=\"\n   a b          c d             a b=c d              \
    \   \"a b=c d\"\n   abc<sp>      123<sp>         abc` =123<sp>           \"abc`\
    \ =123 \"\n"
- title: 3.  Application Usage
  contents:
  - "3.  Application Usage\n   The attributes can be accessed by the standard resolver\
    \ library, but\n   it is recommended that a library routine designed specially\
    \ for this\n   attribute format be used.  Such a routine might provide an analogue\n\
    \   to gethostbyname:\n         getattributebyname(objectname,          name of\
    \ object\n                            attributename,       name of attribute\n\
    \                            attributevalue,      pointer to buffer\n        \
    \                    attributevaluelen)   length of buffer\n   This routine would\
    \ remove all quoting characters before returning the\n   information to the caller.\
    \  A more complex routine could return\n   attributes with multiple values, or\
    \ several different attributes.\n"
- title: 4.  Attribute Name Registration
  contents:
  - "4.  Attribute Name Registration\n   To permit ease of interoperability and to\
    \ reduce the chance of naming\n   conflicts, a registration process for well known\
    \ attribute names\n   might be established.  This could be a periodically updated\
    \ list of\n   names and/or adherence to other name registration mechanisms such\
    \ as\n   published object identifiers.\n   This paper does not address attribute\
    \ name registration.\n"
- title: 5.  Restrictions
  contents:
  - "5.  Restrictions\n   Some DNS server implementations place limits on the size\
    \ or number of\n   TXT records associated with a particular owner.  Certain\n\
    \   implementations may not support TXT records at all.\n"
- title: 6.  REFERENCES and BIBLIOGRAPHY
  contents:
  - "6.  REFERENCES and BIBLIOGRAPHY\n   [1] Stahl, M., \"Domain Administrators Guide\"\
    , RFC 1032, Network\n       Information Center, SRI International, November 1987.\n\
    \   [2] Mockapetris, P., \"Domain Names - Concepts and Facilities\", STD\n   \
    \    13, RFC 1034, USC/Information Sciences Institute, November 1987.\n   [3]\
    \ Mockapetris, P., \"Domain Names - Implementation and\n       Specification\"\
    , STD 13, RFC 1035, USC/Information Sciences\n       Institute, November 1987.\n\
    \   [4] Mockapetris, P., \"DNS Encoding of Network Names and Other Types\",\n\
    \       RFC 1101, USC/Information Sciences Institute, April 1989.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8. Author's Address
  contents:
  - "8. Author's Address\n   Rich Rosenbaum\n   Digital Equipment Corporation\n  \
    \ 550 King Street, LKG2-2/Z7\n   Littleton, MA  01460-1289\n   Phone: 508-486-5922\n\
    \   Email: rosenbaum@lkg.dec.com\n"
