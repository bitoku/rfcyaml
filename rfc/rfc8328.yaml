- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                            W. Liu
  contents:
  - "Independent Submission                                            W. Liu\n  \
    \               Policy-Based Management Framework for\n            the Simplified\
    \ Use of Policy Abstractions (SUPA)\n"
- title: Abstract
  contents:
  - "Abstract\n   The Simplified Use of Policy Abstractions (SUPA) policy-based\n\
    \   management framework defines base YANG data models to encode policy.\n   These\
    \ models point to device-, technology-, and service-specific YANG\n   data models\
    \ developed elsewhere.  Policy rules within an operator's\n   environment can\
    \ be used to express high-level, possibly network-wide,\n   policies to a network\
    \ management function (within a controller, an\n   orchestrator, or a network\
    \ element).  The network management function\n   can then control the configuration\
    \ and/or monitoring of network\n   elements and services.  This document describes\
    \ the SUPA basic\n   framework, its elements, and interfaces.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not candidates for any level of Internet\
    \ Standard;\n   see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8328.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n     2.1.  Requirements Language . . . . . . . . . . . . . . .\
    \ . . .   4\n     2.2.  Abbreviations and Definitions . . . . . . . . . . . .\
    \ . .   4\n   3.  Framework for Generic Policy-Based Management . . . . . . .\
    \ .   5\n     3.1.  Overview  . . . . . . . . . . . . . . . . . . . . . . . .\
    \   5\n     3.2.  Operation . . . . . . . . . . . . . . . . . . . . . . . .  10\n\
    \     3.3.  The GPIM and the EPRIM  . . . . . . . . . . . . . . . . .  10\n  \
    \   3.4.  Creation of Generic YANG Modules  . . . . . . . . . . . .  10\n   4.\
    \  Security Considerations . . . . . . . . . . . . . . . . . . .  12\n   5.  IANA\
    \ Considerations . . . . . . . . . . . . . . . . . . . . .  12\n   6.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  12\n     6.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  12\n     6.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  12\n   Acknowledgements  . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  14\n   Contributors  . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . .  14\n   Authors' Addresses  . . .\
    \ . . . . . . . . . . . . . . . . . . . .  14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Traffic flows over increasingly complex enterprise and service\n\
    \   provider networks are becoming more and more important.  Meanwhile,\n   the\
    \ rapid growth of this variety makes the task of network operations\n   and management\
    \ applications deploying new services much more\n   difficult.  Moreover, network\
    \ operators want to deploy new services\n   quickly and efficiently.  Two possible\
    \ mechanisms for dealing with\n   this growing difficulty are 1) the use of software\
    \ abstractions to\n   simplify the design and configuration of monitoring and\
    \ control\n   operations and 2) the use of programmatic control over the\n   configuration\
    \ and operation of such networks.  Policy-based\n   management can be used to\
    \ combine these two mechanisms into an\n   extensible framework.\n   There is\
    \ a set of policy rules within an operator's environment that\n   defines how\
    \ services are designed, delivered, and operated.\n   The SUPA (Simplified Use\
    \ of Policy Abstractions) data model\n   represents a high-level, possibly network-wide\
    \ policy, which can be\n   input to a network management function (within a controller,\
    \ an\n   orchestrator, or a network element).  The network management function\n\
    \   can then control the configuration and/or monitoring of network\n   elements\
    \ and services according to such policies.\n   SUPA defines a Generic Policy Information\
    \ Model (GPIM) [SUPA-INFO]\n   for use in network operations and management applications.\
    \  The GPIM\n   defines concepts and terminology needed by policy management\n\
    \   independent of the form and content of the policy rule.  The Event-\n   Condition-Action\
    \ (ECA) Policy Rule Information Model (EPRIM)\n   [SUPA-INFO] extends the GPIM\
    \ by defining how to build policy rules\n   according to the ECA paradigm.\n \
    \  Both the GPIM and the EPRIM are targeted at controlling the\n   configuration\
    \ and monitoring of network elements throughout the\n   service development and\
    \ deployment life cycle.  The GPIM and the\n   EPRIM can both be translated into\
    \ corresponding YANG [RFC6020]\n   [RFC7950] modules that define policy concepts,\
    \ terminology, and rules\n   in a generic and interoperable manner; additional\
    \ YANG modules may\n   also be derived from the GPIM and/or EPRIM to manage specific\n\
    \   functions.\n   The key benefit of policy management is that it enables different\n\
    \   network elements and services to be instructed to behave the same\n   way,\
    \ even if they are programmed differently.  Management\n   applications will benefit\
    \ from using policy rules that enable\n   scalable and consistent programmatic\
    \ control over the configuration\n   and monitoring of network elements and services.\n\
    \   Some typical and useful instances for authors to understand the\n   applicability\
    \ of SUPA, such as SNMP blocking upon load of link\n   reaching a threshold and\
    \ virtual matching migration upon the changing\n   of user location, are described\
    \ in [SUPA-APP].\n"
- title: 2.  Terminology
  contents:
  - '2.  Terminology

    '
- title: 2.1.  Requirements Language
  contents:
  - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.2.  Abbreviations and Definitions
  contents:
  - "2.2.  Abbreviations and Definitions\n   SUPA: The Simplified Use of Policy Abstractions\
    \ is a policy-based\n   management framework that defines a data model to be used\
    \ to\n   represent high-level, possibly network-wide policies.  This data\n  \
    \ model can be input to a network management function (within a\n   controller,\
    \ an orchestrator, or a network element).\n   YANG: An acronym for \"Yet Another\
    \ Next Generation\".  YANG is a data\n   modeling language used to model configuration\
    \ and state data\n   manipulated by the Network Configuration Protocol (NETCONF),\
    \ NETCONF\n   remote procedure calls, and NETCONF notifications [RFC6020]\n  \
    \ ECA: Event-Condition-Action is a shortcut for referring to the\n   structure\
    \ of active rules in event-driven architecture and active\n   database systems.\n\
    \   EMS: An Element Management System is software used to monitor and\n   control\
    \ network elements (devices) in telecommunications.\n   NMS: A Network Management\
    \ System is a set of hardware and/or software\n   tools that allow an IT professional\
    \ to supervise the individual\n   components of a network within a larger network\
    \ management framework.\n   OSS: An Operations/Operational Support System is a\
    \ computer system\n   used by telecommunications service providers to manage their\
    \ networks\n   (e.g., telephone networks).\n   BSS: A Business Support System\
    \ is used to support various end-to-end\n   telecommunication services.\n   GPIM:\
    \ A Generic Policy Information Model defines concepts and\n   terminology needed\
    \ by policy management independent of the form and\n   content of the policy rule.\n\
    \   EPRIM: An ECA Policy Rule Information Model extends the GPIM by\n   defining\
    \ how to build policy rules according to the ECA paradigm.\n   GPDM: Generic Policy\
    \ Data Models [SUPA-DATA] are created from the\n   GPIM.  These YANG data model\
    \ policies are used to control the\n   configuration of network elements that\
    \ model the service(s) to be\n   managed.  The relationship between the information\
    \ model (IM) and\n   data model (DM) can be founded in [RFC3444].\n   Declarative\
    \ Policy: Policies that specify the goals to be achieved\n   but not how to achieve\
    \ those goals (also called \"intent-based\"\n   policies).  Please note that declarative\
    \ policies are out of scope\n   for the initial phase of SUPA.\n"
- title: 3.  Framework for Generic Policy-Based Management
  contents:
  - "3.  Framework for Generic Policy-Based Management\n   This section briefly describes\
    \ the design and operation of the SUPA\n   policy-based management framework.\n"
- title: 3.1.  Overview
  contents:
  - "3.1.  Overview\n   Figure 1 shows a simplified functional architecture of how\
    \ SUPA is\n   used to define policies for creating snippets of network element\n\
    \   configurations.  SUPA uses the GPIM to define a consensual vocabulary\n  \
    \ that different actors can use to interact with network elements and\n   services.\
    \  The EPRIM defines a generic structure for imperative\n   policies.  The GPIM,\
    \ and/or the combination of the GPIM and the\n   EPRIM, is converted to generic\
    \ YANG modules.\n   In one possible approach (shown with asterisks in Figure 1),\
    \ SUPA\n   Generic Policy and SUPA ECA Policy YANG modules together with the\n\
    \   Resource and Service YANG data models specified in the IETF (which\n   define\
    \ the specific elements that will be controlled by policies) are\n   used by the\
    \ Service Interface Logic.  This Service Interface Logic\n   creates appropriate\
    \ input mechanisms for the operator to define\n   policies (e.g., a web form or\
    \ a script) for creating and managing the\n   network configuration.  The operator\
    \ interacts with the interface,\n   and the policies input by operators are then\
    \ translated into\n   configuration snippets.\n   Note that the Resource and Service\
    \ YANG data models may not exist.\n   In this case, the SUPA generic policy YANG\
    \ modules serve as an\n   extensible basis to develop new YANG data models for\
    \ the Service\n   Interface Logic.  This transfers the work specified by the Resource\n\
    \   and Service YANG data models specified in the IETF into the Service\n   Interface\
    \ Logic.\n                        +---------------------+\n    +----------+  \
    \     \\|        SUPA         |\n    |   IETF   |---+----+  Information Models\
    \ |\n    +----------+   |   /|    GPIM and EPRIM   |\n                   |   \
    \ +---------+-----------+\n       Assignments |              | Defines Policy\
    \ Concepts\n       and Managed |             \\|/\n         Content   |    +---------+-----------+\n\
    \                   |   \\|    SUPA Generic     |\n                   +----+ \
    \   & ECA Policy     |\n                       /|    YANG modules     |\n    \
    \                    +---------+-----------+\n                               \
    \   *  Possible Approach\n    +-----------------------------*-----------------------------+\n\
    \    |  Management System          *                             |\n    |    \
    \                        \\*/                            |\n    |            Fills\
    \  +---------+---------+  +-------------+  |\n    | +--------+ Forms \\| Service\
    \ Interface |/ |Resource and |/ | +----+\n    | |Operator|--------+       Logic\
    \       +--|Service YANG |----|IETF|\n    | +--------+ Runs  /| (locally defined\
    \  |\\ | data models |\\ | +----+\n    |           scripts |forms, scripts,...)|\
    \  +-------------+  |\n    |                   +---------+---------+         \
    \          |\n    |                            \\|/                          \
    \  |\n    |                     +-------+--------+                    |\n    |\
    \                     |  Local Devices |                    |\n    |         \
    \            | and Management |                    |\n    |                  \
    \   |     Systems    |                    |\n    |                     +----------------+\
    \                    |\n    +-----------------------------------------------------------+\n\
    \                         Figure 1: SUPA Framework\n   Figure 1 shows the SUPA\
    \ Framework at a high level of abstraction.\n   The operator actor can interact\
    \ with SUPA in other ways not shown in\n   Figure 1.  In addition, other actors\
    \ (e.g., an application developer)\n   that can interact with SUPA are not shown\
    \ for simplicity.\n   The EPRIM defines an ECA policy as an example of imperative\
    \ policies.\n   An ECA policy rule is activated when its event clause is true;\
    \ the\n   condition clause is then evaluated and, if true, signals the\n   execution\
    \ of one or more actions in the action clause.  This type of\n   policy explicitly\
    \ defines the current and desired states of the\n   system being managed.  Imperative\
    \ policy rules require additional\n   management functions, which are explained\
    \ in Section 3.2.\n   Figure 2 shows how the SUPA Policy Model is used to create\
    \ policy\n   data models step-by-step and how the policy rules are used to\n \
    \  communicate among various network management functions located on\n   different\
    \ layers.\n   The GPIM is used to construct policies.  The GPIM defines generic\n\
    \   policy concepts as well as two types of policies: ECA policy rules\n   and\
    \ declarative policy statements.\n   A set of Generic Policy Data Models (GPDM)\
    \ are then created from the\n   GPIM.  These YANG data model policies are then\
    \ used to control the\n   configuration of network elements that model the service(s)\
    \ to be\n   managed.\n   Resource and Service YANG Data Models: Models of the\
    \ service as well\n   as physical and virtual network topology including the resource\n\
    \   attributes (e.g., data rate or latency of links) and operational\n   parameters\
    \ needed to support service deployment over the network\n   topology.\n      \
    \                        |  SUPA Policy Model\n                              |\n\
    \                              |  +----------------------------------+\n     \
    \                         |  | Generic Policy Information Model |\n          \
    \                    |  +----------------------------------+\n               \
    \               |        D                 D\n                              |\
    \        D   +-------------v-------------+\n +----------------------+     |  \
    \      D   |   ECA Policy Rule         |\n | OSS/BSS/Orchestrator <--+  |    \
    \    D   |   Information Model       |\n +----------^-----------+  |  |      \
    \  D   +---------------------------+\n            C              |  |        D\
    \                          D\n            C              |  |  +----+D+------------------------+D+---+\n\
    \            C              +-----+     D  SUPA Policy Data Model  D    |\n +----------v-----------+\
    \     |  | ----v-----------------------+  D    |\n |  EMS/NMS/Controller  <--------+\
    \ | Generic Policy Data Model |  D    |\n +----------^-----------+     |  | ----------------------------+\
    \  D    |\n            C              +-----+              D                 D\
    \    |\n            C              |  |  |    +---------v-----------------v--+\
    \ |\n +----------v-----------+  |  |  |    |  ECA Policy Rule Data Model  | |\n\
    \ |  Network Element     <--+  |  |    +------------------------------+ |\n +----------------------+\
    \     |  +-------------------------------------+\n                           \
    \   |\n                              |\n"
- title: 'Legend:'
  contents:
  - 'Legend:

    '
- title: The double-headed arrow with Cs = "communication"
  contents:
  - 'The double-headed arrow with Cs = "communication"

    '
- title: The arrow with Ds = "derived from"
  contents:
  - "The arrow with Ds = \"derived from\"\n                   Figure 2: SUPA Policy\
    \ Model Framework\n   SUPA Policy Model:  This model represents one or more policy\
    \ modules\n      that contain the following entities:\n      Generic Policy Information\
    \ Model:  A model for defining policy\n         rules that are independent of\
    \ data repository, data definition,\n         query, implementation language,\
    \ and protocol.  This model is\n         abstract and is used for design; it MUST\
    \ be turned into a data\n         model for implementation.\n      Generic Policy\
    \ Data Model:  A model of policy rules that are\n         dependent on data repository,\
    \ data definition, query,\n         implementation language, and protocol.\n \
    \     ECA Policy Rule Information Model (EPRIM):  This model represents\n    \
    \     a policy rule as a statement that consists of an event clause,\n       \
    \  a condition clause, and an action clause.  This type of policy\n         rule\
    \ explicitly defines the current and desired states of the\n         system being\
    \ managed.  This model is abstract and is used for\n         design; it MUST be\
    \ turned into a data model for implementation.\n      ECA Policy Rule Data Model:\
    \  A model of policy rules, derived from\n         EPRIM, where each policy rule\
    \ consists of an event clause, a\n         condition clause, and an action clause.\n\
    \      EMS/NMS/Controller:  This represents one or more entities that are\n  \
    \       able to control the operation and management of a network\n         infrastructure\
    \ (e.g., a network topology that consists of\n         network elements).\n  \
    \    Network Element (NE):  An element that can interact with the local\n    \
    \     or remote EMS/NMS/Controller in order to exchange information,\n       \
    \  such as configuration information, policy-enforcement\n         capabilities,\
    \ and network status.\n   Relationships among Policy, Service, and Resource models\
    \ are\n   illustrated in Figure 3.\n         +---------------+               \
    \    +----------------+\n         |    Policy     |         (1)       |    Service\
    \     |\n         |               |*******************|                |\n   \
    \      |   ( SUPA )    |*******************| ( L3SM, ... )  |\n         +---------------+\
    \                   +----------------+\n                **                   \
    \               /*\\\n                  **                                *\n\
    \                    **                            *\n                 (2)  **\
    \                        *   (3)\n                        **                 \
    \   *\n                          **                *\n                       \
    \     **            *\n                        +-------------------+\n       \
    \                 |    Resource       |\n                        |           \
    \        |\n                        | (Inventory, ... ) |\n                  \
    \      +-------------------+\n     Figure 3: Relationship among Policy, Service,\
    \ and Resource Models\n   In Figure 3:\n   (1)  The policy manages and can adjust\
    \ service behavior as necessary\n        (1:1..n).  In addition, data from resources\
    \ and services are\n        used to select and/or modify policies during runtime.\n\
    \   (2)  The policy manages and can adjust resource behavior as necessary\n  \
    \      (1:1..n).\n   (3)  Resource hosts service; changing resources may change\
    \ service\n        behavior as necessary.\n   Policies are used to control the\
    \ management of resources and\n   services, while data from resources and services\
    \ are used to select\n   and/or modify policies during runtime.  More importantly,\
    \ policies\n   can be used to manage how resources are allocated and assigned\
    \ to\n   services.  This enables a single policy to manage one or multiple\n \
    \  services and resources as well as their dependencies.  The use of\n   (1:1..n)\
    \ in point (1) and (2) above show that one policy rule is able\n   to manage and\
    \ can adjust one or multiple services/resources.  Lines\n   (1) and (2) (connecting\
    \ policy to resource and policy to service) are\n   the same, and line (3) (connecting\
    \ resource to service) is different\n   as it's navigable only from resource to\
    \ service.\n"
- title: 3.2.  Operation
  contents:
  - "3.2.  Operation\n   SUPA can be used to define various types of policies, including\n\
    \   policies that affect services and/or the configuration of individual\n   network\
    \ elements or groups of network elements.  SUPA can be used by\n   a centralized\
    \ and/or distributed set of entities for creating,\n   managing, interacting with,\
    \ and retiring policy rules.\n   The SUPA scope is limited to policy information\
    \ and data models.\n   SUPA does not define network resource data models or network\
    \ service\n   data models; both are out of scope.  Instead, SUPA makes use of\n\
    \   network resource data models defined by other working groups or\n   Standards\
    \ Development Organizations (SDOs).\n   Declarative policies are out of scope\
    \ for the initial phase of SUPA.\n"
- title: 3.3.  The GPIM and the EPRIM
  contents:
  - "3.3.  The GPIM and the EPRIM\n   The GPIM provides a shared vocabulary for representing\
    \ concepts that\n   are common to different types of policies, but which are independent\n\
    \   of language, protocol, repository, and level of abstraction.  Hence,\n   the\
    \ GPIM defines concepts and vocabulary needed by policy management\n   systems\
    \ independent of the form and content of the policy.  The EPRIM\n   is a more\
    \ specific model that refines the GPIM to specify policy\n   rules in an ECA form.\n\
    \   This enables different policies at different levels of abstraction to\n  \
    \ form a continuum, where more abstract policies can be translated into\n   more\
    \ concrete policies and vice versa.  For example, the information\n   model can\
    \ be extended by generalizing concepts from an existing data\n   model into the\
    \ GPIM; the GPIM extensions can then be used by other\n   data models.\n"
- title: 3.4.  Creation of Generic YANG Modules
  contents:
  - "3.4.  Creation of Generic YANG Modules\n   An information model is abstract.\
    \  As such, it cannot be directly\n   instantiated (i.e., objects cannot be created\
    \ directly from it).\n   Therefore, both the GPIM and the combination of the GPIM\
    \ and the\n   EPRIM are translated into generic YANG modules.\n   SUPA will provide\
    \ guidelines for translating the GPIM (or the\n   combination of the GPIM and\
    \ the EPRIM) into concrete YANG data models\n   that define how to manage and\
    \ communicate policies between systems.\n   Multiple imperative policy YANG data\
    \ models may be instantiated from\n   the GPIM (or the combination of the GPIM\
    \ and the EPRIM).  In\n   particular, SUPA will specify a set of YANG data models\
    \ that will\n   consist of a base policy model for representing policy management\n\
    \   concepts independent of the type or structure of a policy; it will\n   also\
    \ specify an extension for defining policy rules according to the\n   ECA paradigm.\
    \  (Note: This means that policies can be defined using\n   the GPIM directly,\
    \ or using the combination of the GPIM and the\n   EPRIM.  If you use only the\
    \ GPIM, you get a technology- and vendor-\n   independent information model that\
    \ you are free to map to the data\n   model of your choice; note that the structure\
    \ of a policy is NOT\n   defined.  If you use the GPIM and the EPRIM, you get\
    \ a technology-\n   and vendor-independent information model that defines policies\
    \ as an\n   ECA policy rule (i.e., imperative).)\n   The process of developing\
    \ the GPIM, the EPRIM, and the derived/\n   translated YANG data models is realized\
    \ following the sequence shown\n   below.  After completing this process and,\
    \ if the implementation of\n   the YANG data models requires it, the GPIM and\
    \ EPRIM and the derived/\n   translated YANG data models are updated and synchronized.\n\
    \      (1)=>(2)=>(3)=>(4)=>(3')=>(2')=>(1')\n      Where:\n      (1)=GPIM\n  \
    \    (2)=EPRIM\n      (3)=YANG data models\n      (4)=Implementation\n      (3')=update\
    \ of YANG data models\n      (2')=update of EPRIM\n      (1')=update of GPIM\n\
    \   The YANG module derived from the GPIM contains concepts and\n   terminology\
    \ for the common operation and administration of policy-\n   based systems as\
    \ well as an extensible structure for policy rules of\n   different paradigms.\
    \  The YANG module derived from the EPRIM extends\n   the generic nature of the\
    \ GPIM by representing policies using an ECA\n   structure.\n   The above sequence\
    \ allows for the addition of new model elements, as\n   well as the editing of\
    \ existing ones, in the GPIM and EPRIM.  In\n   practice, the implementation sequence\
    \ may be much simpler.\n   Specifically, it is unlikely that the GPIM will need\
    \ to be changed.\n   In addition, changes to the EPRIM will likely be focused\
    \ on fine-\n   tuning the behavior offered by a specific set of model elements.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This informational document presents the framework\
    \ and workflow of\n   SUPA as well as an explanation on the relationship of policy,\
    \ service\n   and resources.  This document does not introduce any new security\n\
    \   issues, and the framework has no security impact on the Internet.\n   The\
    \ same considerations are relevant as those for the base NETCONF\n   protocol\
    \ (see Section 9 in [RFC6241]).\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC3444]  Pras, A. and J. Schoenwaelder, \"\
    On the Difference between\n              Information Models and Data Models\"\
    , RFC 3444,\n              DOI 10.17487/RFC3444, January 2003,\n             \
    \ <https://www.rfc-editor.org/info/rfc3444>.\n   [RFC6020]  Bjorklund, M., Ed.,\
    \ \"YANG - A Data Modeling Language for\n              the Network Configuration\
    \ Protocol (NETCONF)\", RFC 6020,\n              DOI 10.17487/RFC6020, October\
    \ 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n   [RFC6241]\
    \  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and\
    \ A. Bierman, Ed., \"Network Configuration Protocol\n              (NETCONF)\"\
    , RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC7950]  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n\
    \              RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n\
    \   [SUPA-APP] Cheng, Y., Liu, D., Fu, B., Zhang, D., and N. Vadrevu,\n      \
    \        \"Applicability of SUPA\", Work in Progress,\n              draft-cheng-supa-applicability-01,\
    \ March 2017.\n   [SUPA-DATA]\n              Halpern, J., Strassner, J., and S.\
    \ Van der Meer, \"Generic\n              Policy Data Model for Simplified Use\
    \ of Policy\n              Abstractions (SUPA)\", Work in Progress, draft-ietf-supa-\n\
    \              generic-policy-data-model-04, June 2017.\n   [SUPA-FRAME]\n   \
    \           Zhou, C., Contreras, L., Sun, Q., and P. Yegani, \"The\n         \
    \     Framework of Simplified Use of Policy Abstractions\n              (SUPA)\"\
    , Work in Progress, draft-zhou-supa-framework-02,\n              May 2015.\n \
    \  [SUPA-INFO]\n              Strassner, J., Halpern, J., and S. Meer, \"Generic\
    \ Policy\n              Information Model for Simplified Use of Policy\n     \
    \         Abstractions (SUPA)\", Work in Progress, draft-ietf-supa-\n        \
    \      generic-policy-info-model-03, May 2017.\n   [SUPA-STATE]\n            \
    \  Karagiannis, G., Strassner, J., Sun, Q., Contreras, L.,\n              Yegani,\
    \ P., and J. Bi, \"Problem Statement for Simplified\n              Use of Policy\
    \ Abstractions (SUPA)\", Work in Progress,\n              draft-karagiannis-supa-problem-statement-07,\
    \ June 2015.\n   [SUPA-VALUE]\n              Klyus, M., Strassner, J., Liu, W.,\
    \ Karagiannis, G., and J.\n              Bi, \"SUPA Value Proposition\", Work\
    \ in Progress,\n              draft-klyus-supa-value-proposition-00, March 2016.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document has benefited from reviews, suggestions, comments,\
    \ and\n   proposed text provided by the following members, listed in\n   alphabetical\
    \ order: Andy Bierman, Marc Blanchet, Mohamed Boucadair,\n   Scott O. Bradner,\
    \ Scott Cadzow, Zhen Cao, Vikram Choudhary, Benoit\n   Claise, Spencer Dawkins,\
    \ Mehmet Ersue, Ian Farrer, Fernando Gont,\n   Joel Halpern, Jonathan Hansford,\
    \ Jing Huang, Xing Li, Marco Liebsch,\n   Diego R. Lopez, Johannes Merkle, Marie-Jose\
    \ Montpetit, Kostas\n   Pentikousis, Simon Perreault, Hosnieh Rafiee, Raghav Rao,\
    \ Jose\n   Saldana, Jon Saperia, Tom Taylor, Jean Francois Tremblay, Tina Tsou,\n\
    \   Eric Voit, Gunter Wang, Yangyang Wang, Bert Wijnen, and Tianran Zhou.\n  \
    \ Part of the initial draft of this document was picked up from\n   previous documents:\
    \ [SUPA-VALUE], [SUPA-STATE], and [SUPA-FRAME].  We\n   appreciatively acknowledge\
    \ the authors, contributors, and\n   acknowledged parties of those documents.\n"
- title: Contributors
  contents:
  - "Contributors\n   The following people contributed to the creation of this document,\n\
    \   listed in alphabetical order:\n      Luis M. Contreras, Telefonica I+D\n \
    \     Dan Romascanu, Avaya\n      Juergen Schoenwaelder, Jacobs University, Germany\n\
    \      Qiong Sun, China Telecom\n      Parviz Yegani, Huawei Technologies\n  \
    \    Cathy Zhou, Huawei Technologies\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Will (Shucheng) Liu\n   Huawei Technologies\n   Bantian,\
    \ Longgang District\n   Shenzhen  518129\n   China\n   Email: liushucheng@huawei.com\n\
    \   Chongfeng Xie\n   China Telecom\n   China Telecom Information Technology Innovation\
    \ Park\n   Beijing  102209\n   China\n   Email: xiechf.bri@chinatelecom.cn\n \
    \  John Strassner\n   Huawei Technologies\n   2330 Central Expressway\n   Santa\
    \ Clara, CA  95138\n   United States of America\n   Email: john.sc.strassner@huawei.com\n\
    \   Georgios Karagiannis\n   Huawei Technologies\n   Hansaallee 205\n   Dusseldorf\
    \  40549\n   Germany\n   Email: Georgios.Karagiannis@huawei.com\n   Maxim Klyus\n\
    \   Email: xmaruto@gmail.com\n   Jun Bi\n   Tsinghua University\n   Network Research\
    \ Center, Tsinghua University\n   Beijing  100084\n   China\n   Email: junbi@tsinghua.edu.cn\n\
    \   Ying Cheng\n   China Unicom\n   No.21 Financial Street, XiCheng District\n\
    \   Beijing  100033\n   China\n   Email: chengying10@chinaunicom.cn\n   Dacheng\
    \ Zhang\n   Huawei Technologies\n   Beijing\n   China\n   Email: dacheng.zhang@huawei.com\n"
