- title: __initial_text__
  contents:
  - '  Interface to the Routing System (I2RS) Ephemeral State Requirements

    '
- title: Abstract
  contents:
  - "Abstract\n   \"An Architecture for the Interface to the Routing System\" (RFC\
    \ 7921)\n   abstractly describes a number of requirements for ephemeral state\
    \ (in\n   terms of capabilities and behaviors) that any protocol suite\n   attempting\
    \ to meet the needs of the Interface to the Routing System\n   (I2RS) protocol\
    \ has to provide.  This document describes, in detail,\n   requirements for ephemeral\
    \ state for those implementing the I2RS\n   protocol.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8242.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Requirements Language ......................................4\n  \
    \ 2. Architectural Requirements for Ephemeral State ..................4\n   3.\
    \ Ephemeral State Requirements ....................................5\n      3.1.\
    \ Persistence ................................................5\n      3.2. Constraints\
    \ ................................................6\n      3.3. Hierarchy ..................................................6\n\
    \      3.4. Ephemeral Configuration Overlapping Local Configuration ....6\n  \
    \ 4. YANG Features for Ephemeral State ...............................7\n   5.\
    \ NETCONF Features for Ephemeral State ............................7\n   6. RESTCONF\
    \ Features for Ephemeral State ...........................7\n   7. Requirements\
    \ regarding Supporting Multi-Head Control via\n      Client ..........................................................7\n\
    \   8. Multiple Message Transactions ...................................9\n  \
    \ 9. Pub/Sub Requirements Expanded for Ephemeral State ...............9\n   10.\
    \ IANA Considerations ...........................................10\n   11. Security\
    \ Considerations .......................................10\n   12. Normative References\
    \ ..........................................10\n   Acknowledgements ..................................................12\n\
    \   Authors' Addresses ................................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Interface to the Routing System (I2RS) Working Group\
    \ (WG) is\n   chartered with providing architecture and mechanisms to inject into\n\
    \   and retrieve information from the routing system.  The I2RS\n   Architecture\
    \ document [RFC7921] abstractly documents a number of\n   requirements for implementing\
    \ the I2RS and defines ephemeral state as\n   \"state that does not survive the\
    \ reboot of a routing device or the\n   reboot of the software handling the I2RS\
    \ software on a routing\n   device\" (see Section 1.1 of [RFC7921]).  Section\
    \ 2 of this document\n   describes the specific requirements that the I2RS WG\
    \ has identified\n   based on the I2RS architecture's abstract requirements. \
    \ The\n   Interface to the Routing System (I2RS) Working Group (WG) is\n   chartered\
    \ with providing architecture and mechanisms to inject into\n   and retrieve information\
    \ from the routing system.  The I2RS\n   Architecture document [RFC7921] abstractly\
    \ documents a number of\n   requirements for implementing the I2RS and defines\
    \ ephemeral state as\n   \"state that does not survive the reboot of a routing\
    \ device or the\n   reboot of the software handling the I2RS software on a routing\n\
    \   device\" (see Section 1.1 of [RFC7921]).  Section 2 of this document\n   provides\
    \ a summary of these abstract requirements, and section 3\n   recasts these abstract\
    \ requirements into specific requirements for\n   the Ephemeral state for any\
    \ IETF network management system.\n   The I2RS WG has chosen to use the YANG data\
    \ modeling language\n   [RFC7950] as the basis to implement its mechanisms.\n\
    \   Additionally, the I2RS WG has chosen to reuse two existing protocols,\n  \
    \ NETCONF [RFC6241] and its similar but lighter-weight relative\n   RESTCONF [RFC8040],\
    \ as the protocols for carrying I2RS.\n   What does reuse of a protocol mean?\
    \  Reuse means that while the\n   combination of the YANG modeling language and\
    \ the NETCONF and\n   RESTCONF protocols is a good starting basis for the I2RS\
    \ data\n   modeling language and protocol, the requirements for I2RS protocol\n\
    \   implementations should:\n   1.  select features from the YANG modeling language\
    \ and the NETCONF\n       and RESTCONF protocols per version of the I2RS protocol\
    \ (see\n       Sections 4, 5, and 6), and\n   2.  propose additions to YANG, NETCONF,\
    \ and RESTCONF per version of\n       the I2RS protocol for key functions (ephemeral\
    \ state, protocol\n       security, publication/subscription service, traceability).\n\
    \   The purpose of these requirements is to ensure clarity during I2RS\n   protocol\
    \ creation.\n   Support for ephemeral state is an I2RS protocol requirement that\n\
    \   necessitates datastore changes (see Section 3), YANG additions (see\n   Section\
    \ 4), NETCONF additions (see Section 5), and RESTCONF additions\n   (see Section\
    \ 6).\n   Sections 7-9 provide details that expand upon the changes in Sections\n\
    \   3-6 to clarify requirements discussed by the I2RS and NETCONF WGs.\n   Section\
    \ 7 provides additional requirements that detail how write-\n   conflicts should\
    \ be resolved if two I2RS client write the same data.\n   Section 8 describes\
    \ I2RS requirements for support of multiple message\n   transactions.  Section\
    \ 9 highlights two requirements for I2RS\n   publication/subscription [RFC7923]\
    \ that must be expanded for\n   ephemeral state.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Architectural Requirements for Ephemeral State
  contents:
  - "2.  Architectural Requirements for Ephemeral State\n   The I2RS architecture\
    \ [RFC7921] and the I2RS problem statement\n   [RFC7920] define the important\
    \ high-level requirements for the I2RS\n   protocol in abstract terms.  This section\
    \ distills this high-level\n   abstract guidance into specific requirements for\
    \ the I2RS protocol.\n   To aid the reader, there are references back to the abstract\n\
    \   descriptions in the I2RS architecture document and the I2RS problem\n   statement,\
    \ but the reader should note the requirements below are not\n   explicitly stated\
    \ in the I2RS architecture document or in the I2RS\n   problem statement.\n  \
    \ Requirements:\n   1.  The I2RS protocol SHOULD support an asynchronous programmatic\n\
    \       interface with properties described in Section 5 of [RFC7920]\n      \
    \ (e.g., high throughput) with support for target information\n       streams,\
    \ filtered events, and thresholded events (real-time\n       events) sent by an\
    \ I2RS agent to an I2RS client (from Section 1.1\n       of [RFC7921]).\n   2.\
    \  An I2RS agent MUST record the client identity when a node is\n       created\
    \ or modified.  The I2RS agent SHOULD be able to read the\n       client identity\
    \ of a node and use the client identity's\n       associated priority to resolve\
    \ conflicts.  The secondary identity\n       is useful for traceability and may\
    \ also be recorded (from\n       Section 4 of [RFC7921]).\n   3.  An I2RS client\
    \ identity MUST have only one priority for the\n       client's identifier.  A\
    \ collision on writes is considered an\n       error, but the priority associated\
    \ with each client identifier is\n       utilized to compare requests from two\
    \ different clients in order\n       to modify an existing node entry.  Only an\
    \ entry from a client\n       that is higher priority can modify an existing entry\
    \ (first entry\n       wins).  Priority only has meaning at the time of use (from\n\
    \       Section 7.8 of [RFC7921]).\n   4.  An I2RS client's secondary identity\
    \ data is read-only metadata\n       that is recorded by the I2RS agent associated\
    \ with a data model's\n       node when the data node is written.  Just like the\
    \ primary client\n       identity, the secondary identity SHOULD only be recorded\
    \ when the\n       data node is written (from Sections 7.4 of [RFC7921].)\n  \
    \ 5.  An I2RS agent MAY have a lower-priority I2RS client attempting to\n    \
    \   modify a higher-priority client's entry in a data model.  The\n       filtering\
    \ out of lower-priority clients attempting to write or\n       modify a higher-priority\
    \ client's entry in a data model SHOULD be\n       effectively handled and SHOULD\
    \ not put an undue strain on the\n       I2RS agent.  (See Section 7.8 of [RFC7921]\
    \ augmented by the\n       resource limitation language in Section 8 [RFC7921].)\n"
- title: 3.  Ephemeral State Requirements
  contents:
  - "3.  Ephemeral State Requirements\n   In requirements Ephemeral-REQ-01 to Ephemeral-REQ-15,\
    \ Ephemeral state\n   is defined as potentially including in a data model ephemeral\n\
    \   configuration and operational state which is flagged as ephemeral.\n"
- title: 3.1.  Persistence
  contents:
  - "3.1.  Persistence\n   Ephemeral-REQ-01: I2RS requires ephemeral state, i.e.,\
    \ state that\n   does not persist across reboots.  If state must be restored,\
    \ it\n   should be done solely by replay actions from the I2RS client via the\n\
    \   I2RS agent.\n   At first glance, the I2RS ephemeral state may seem equivalent\
    \ to the\n   writable-running datastore in NETCONF (e.g., running-config), which\n\
    \   can be copied to a datastore that persists across a reboot (software\n   or\
    \ hardware).  However, I2RS ephemeral state MUST NOT persist across\n   a reboot\
    \ (software or hardware).\n"
- title: 3.2.  Constraints
  contents:
  - "3.2.  Constraints\n   Ephemeral-REQ-02: Non-ephemeral state MUST NOT refer to\
    \ ephemeral\n   state for constraint purposes; it SHALL be considered a validation\n\
    \   error if it does.\n   Ephemeral-REQ-03: Ephemeral state MUST be able to have\
    \ constraints\n   that refer to operational state, this includes potentially fast-\n\
    \   changing or short-lived operational state nodes, such as MPLS LSP-ID\n   (label-switched\
    \ path ID) or a BGP Adj-RIB-IN (Adjacent RIB Inbound).\n   Ephemeral state constraints\
    \ should be assessed when the ephemeral\n   state is written, and if any of the\
    \ constraints change to make the\n   constraints invalid after that time, the\
    \ I2RS agent SHOULD notify the\n   I2RS client.\n   Ephemeral-REQ-04: Ephemeral\
    \ state MUST be able to refer to non-\n   ephemeral state as a constraint.  Non-ephemeral\
    \ state can be\n   configuration state or operational state.\n   Ephemeral-REQ-05:\
    \ I2RS pub-sub [RFC7923], tracing [RFC7922], RPC, or\n   other mechanisms may\
    \ lead to undesirable or unsustainable resource\n   consumption on a system implementing\
    \ an I2RS agent.  It is\n   RECOMMENDED that mechanisms be made available to permit\n\
    \   prioritization of I2RS operations, when appropriate, to permit\n   implementations\
    \ to shed work load when operating under constrained\n   resources.  An example\
    \ of such a work-shedding mechanism is rate-\n   limiting.\n"
- title: 3.3.  Hierarchy
  contents:
  - "3.3.  Hierarchy\n   Ephemeral-REQ-06: YANG MUST have the ability to do the following:\n\
    \   1.  define a YANG module or submodule schema that only contains data\n   \
    \    nodes with the property of being ephemeral, and\n   2.  augment a YANG module\
    \ with additional YANG schema nodes that have\n       the property of being ephemeral.\n"
- title: 3.4.  Ephemeral Configuration Overlapping Local Configuration
  contents:
  - "3.4.  Ephemeral Configuration Overlapping Local Configuration\n   Ephemeral-REQ-07:\
    \ Local configuration MUST have a priority that is\n   comparable with individual\
    \ I2RS client priorities for making changes.\n   This priority will determine\
    \ whether local configuration changes or\n   individual ephemeral configuration\
    \ changes take precedence as\n   described in [RFC7921].  The I2RS protocol MUST\
    \ support this\n   mechanism.\n"
- title: 4.  YANG Features for Ephemeral State
  contents:
  - "4.  YANG Features for Ephemeral State\n   Ephemeral-REQ-08: In addition to config\
    \ true/false, there MUST be a\n   way to indicate that YANG schema nodes represent\
    \ ephemeral state.  It\n   is desirable to allow for, and have a way to indicate,\
    \ config false\n   YANG schema nodes that are writable operational state.\n"
- title: 5.  NETCONF Features for Ephemeral State
  contents:
  - "5.  NETCONF Features for Ephemeral State\n   Ephemeral-REQ-09: The changes to\
    \ NETCONF must include:\n   1.  Support for communication mechanisms to enable\
    \ an I2RS client to\n       determine that an I2RS agent supports the mechanisms\
    \ needed for\n       I2RS operation.\n   2.  The ephemeral state MUST support\
    \ notification of write conflicts\n       using the priority requirements defined\
    \ in Section 7 (see\n       requirements Ephemeral-REQ-11 through Ephemeral-REQ-14).\n"
- title: 6.  RESTCONF Features for Ephemeral State
  contents:
  - "6.  RESTCONF Features for Ephemeral State\n   Ephemeral-REQ-10: The conceptual\
    \ changes to RESTCONF are:\n   1.  Support for communication mechanisms to enable\
    \ an I2RS client to\n       determine that an I2RS agent supports the mechanisms\
    \ needed for\n       I2RS operation.\n   2.  The ephemeral state MUST support\
    \ notification of write conflicts\n       using the priority requirements defined\
    \ in Section 7 (see\n       requirements Ephemeral-REQ-11 through Ephemeral-REQ-14).\n"
- title: 7.  Requirements regarding Supporting Multi-Head Control via Client
  contents:
  - "7.  Requirements regarding Supporting Multi-Head Control via Client\n    Priority\n\
    \   To support multi-headed control, I2RS requires that there be a\n   decidable\
    \ means of arbitrating the correct state of data when\n   multiple clients attempt\
    \ to manipulate the same piece of data.  This\n   is done via a priority mechanism\
    \ with the highest priority winning.\n   This priority is per client.\n   Ephemeral-REQ-11:\
    \ The following requirements must be supported by the\n   I2RS protocol in order\
    \ to support I2RS client identity and priority:\n   o  the data nodes MUST store\
    \ I2RS client identity and MAY store the\n      effective priority at the time\
    \ the data node is stored.\n   o  Per SEC-REQ-07 in Section 4.3 of [RFC8241],\
    \ an I2RS Identifier\n      MUST have just one priority.  The I2RS protocol MUST\
    \ support the\n      ability to have data nodes store I2RS client identity and\
    \ not the\n      effective priority of the I2RS client at the time the data node\
    \ is\n      stored.\n   o  The priority MAY be dynamically changed by AAA, but\
    \ the exact\n      actions are part of the protocol definition as long as collisions\n\
    \      are handled as described in Ephemeral-REQ-12, Ephemeral-REQ-13,\n     \
    \ and Ephemeral-REQ-14.\n   Ephemeral-REQ-12: When a collision occurs as two I2RS\
    \ clients are\n   trying to write the same data node, this collision is considered\
    \ an\n   error.  The I2RS priorities are used to provide a deterministic\n   resolution\
    \ to the conflict.  When there is a collision, and the data\n   node is changed,\
    \ a notification (which includes indicating the data\n   node the collision occurred\
    \ on) MUST be sent to the original client\n   to give the original client a chance\
    \ to deal with the issues\n   surrounding the collision.  The original client\
    \ may need to fix their\n   state.\n   Explanation: RESTCONF and NETCONF updates\
    \ can come in concurrently\n   from alternative sources.  Therefore, the collision\
    \ detection and\n   comparison of priority needs to occur for any type of update.\n\
    \   For example, RESTCONF tracks the source of configuration change via\n   the\
    \ entity-tag (see Section 3.5.2 of [RFC8040]), which the server\n   returns to\
    \ the client along with the value in GET or HEAD methods.\n   RESTCONF requires\
    \ that this resource entity-tag be updated whenever a\n   resource or configuration\
    \ resource within the resource is altered.\n   In the RESTCONF processing, when\
    \ the resource or a configuration\n   resource within the resource is altered,\
    \ the processing of the\n   configuration change for two I2RS clients must detect\
    \ an I2RS\n   collision and resolve the collision using the priority mechanism.\n\
    \   Ephemeral-REQ-13: Multi-headed control is required for collisions and\n  \
    \ the priority resolution of collisions.  Multi-headed control is not\n   tied\
    \ to ephemeral state.  The I2RS protocol MUST NOT mandate the\n   internal mechanism\
    \ for how AAA protocols (e.g., Radius or Diameter)\n   or mechanisms distribute\
    \ priority per identity except that any AAA\n   protocols MUST operate over a\
    \ secure transport layer (see Radius\n   [RFC6614] and Diameter [RFC6733]).  Mechanisms\
    \ that prevent\n   collisions of two clients trying to modify the same node of\
    \ data are\n   the focus.\n   Ephemeral-REQ-14: A deterministic conflict resolution\
    \ mechanism MUST\n   be provided to handle the error scenario in which two clients,\
    \ with\n   the same priority, update the same configuration data node.  The I2RS\n\
    \   architecture gives one way that this could be achieved: by specifying\n  \
    \ that the first update wins.  Other solutions that prevent oscillation\n   of\
    \ the config data node are also acceptable.\n"
- title: 8.  Multiple Message Transactions
  contents:
  - "8.  Multiple Message Transactions\n   Ephemeral-REQ-15: Section 7.9 of the [RFC7921]\
    \ states the I2RS\n   architecture does not include multi-message atomicity and\
    \ roll-back\n   mechanisms.  The I2RS protocol implementation MUST NOT require\
    \ the\n   support of these features.  As part of this requirement, the I2RS\n\
    \   protocol should support:\n      multiple operations in one message.  An error\
    \ in one operation\n      MUST NOT stop additional operations from being carried\
    \ out, nor\n      can it cause previous operations to be rolled back.\n      multiple\
    \ operations in multiple messages, but multiple message-\n      command error\
    \ handling MUST NOT insert errors into the I2RS\n      ephemeral state.\n"
- title: 9.  Pub/Sub Requirements Expanded for Ephemeral State
  contents:
  - "9.  Pub/Sub Requirements Expanded for Ephemeral State\n   I2RS clients require\
    \ the ability to monitor changes to ephemeral\n   state.  While subscriptions\
    \ are well defined for receiving\n   notifications, the need to create a notification\
    \ set for all\n   ephemeral configuration state may be overly burdensome to the\
    \ user.\n   Thus, there is a need for a general subscription mechanism that can\n\
    \   provide notification of changed state, with sufficient information to\n  \
    \ permit the client to retrieve the impacted nodes.  This should be\n   doable\
    \ without requiring the notifications to be created as part of\n   every single\
    \ I2RS module.\n   The publication/subscription requirements for I2RS are in [RFC7923],\n\
    \   and the following general requirements SHOULD be understood to be\n   expanded\
    \ to include ephemeral state:\n   o  Pub-Sub-REQ-01: The subscription service\
    \ MUST support\n      subscriptions against ephemeral state in operational datastores,\n\
    \      configuration datastores, or both.\n   o  Pub-Sub-REQ-02: The subscription\
    \ service MUST support filtering so\n      that subscribed updates under a target\
    \ node might publish either:\n      1.  only ephemeral state in operational data\
    \ or configuration\n          data, or\n      2.  both ephemeral and operational\
    \ data.\n   o  Pub-Sub-REQ-03: The subscription service MUST support\n      subscriptions\
    \ that are ephemeral.  (For example, an ephemeral data\n      model that has ephemeral\
    \ subscriptions.)\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   The security requirements for the I2RS protocol\
    \ are covered in\n   [RFC8241].\n"
- title: 12.  Normative References
  contents:
  - "12.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n  \
    \            and A. Bierman, Ed., \"Network Configuration Protocol\n         \
    \     (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6614]  Winter, S., McCauley, M., Venaas, S., and K. Wierenga,\n      \
    \        \"Transport Layer Security (TLS) Encryption for RADIUS\",\n         \
    \     RFC 6614, DOI 10.17487/RFC6614, May 2012,\n              <https://www.rfc-editor.org/info/rfc6614>.\n\
    \   [RFC6733]  Fajardo, V., Ed., Arkko, J., Loughney, J., and G. Zorn,\n     \
    \         Ed., \"Diameter Base Protocol\", RFC 6733,\n              DOI 10.17487/RFC6733,\
    \ October 2012,\n              <https://www.rfc-editor.org/info/rfc6733>.\n  \
    \ [RFC7920]  Atlas, A., Ed., Nadeau, T., Ed., and D. Ward, \"Problem\n       \
    \       Statement for the Interface to the Routing System\",\n              RFC\
    \ 7920, DOI 10.17487/RFC7920, June 2016,\n              <https://www.rfc-editor.org/info/rfc7920>.\n\
    \   [RFC7921]  Atlas, A., Halpern, J., Hares, S., Ward, D., and T.\n         \
    \     Nadeau, \"An Architecture for the Interface to the Routing\n           \
    \   System\", RFC 7921, DOI 10.17487/RFC7921, June 2016,\n              <https://www.rfc-editor.org/info/rfc7921>.\n\
    \   [RFC7922]  Clarke, J., Salgueiro, G., and C. Pignataro, \"Interface to\n \
    \             the Routing System (I2RS) Traceability: Framework and\n        \
    \      Information Model\", RFC 7922, DOI 10.17487/RFC7922, June\n           \
    \   2016, <https://www.rfc-editor.org/info/rfc7922>.\n   [RFC7923]  Voit, E.,\
    \ Clemm, A., and A. Gonzalez Prieto, \"Requirements\n              for Subscription\
    \ to YANG Datastores\", RFC 7923,\n              DOI 10.17487/RFC7923, June 2016,\n\
    \              <https://www.rfc-editor.org/info/rfc7923>.\n   [RFC7950]  Bjorklund,\
    \ M., Ed., \"The YANG 1.1 Data Modeling Language\",\n              RFC 7950, DOI\
    \ 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n\
    \   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n       \
    \       Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017,\n          \
    \    <https://www.rfc-editor.org/info/rfc8040>.\n   [RFC8174]  Leiba, B., \"Ambiguity\
    \ of Uppercase vs Lowercase in RFC\n              2119 Key Words\", BCP 14, RFC\
    \ 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n\
    \   [RFC8241]  Hares, S., Migault, D., and J. Halpern, \"Interface to the\n  \
    \            Routing System (I2RS) Security-Related Requirements\",\n        \
    \      RFC 8241, DOI 10.17487/RFC8241, September 2017,\n              <https://www.rfc-editor.org/info/rfc8241>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document is an attempt to distill lengthy conversations\
    \ on the\n   I2RS mailing list for an architecture that was, for a long period\
    \ of\n   time, a moving target.  Some individuals in particular warrant\n   specific\
    \ mention for their extensive help in providing the basis for\n   this document:\n\
    \      Alia Atlas,\n      Andy Bierman,\n      Martin Bjorklund,\n      Dean Bogdanavic,\n\
    \      Rex Fernando,\n      Joel Halpern,\n      Thomas Nadeau,\n      Juergen\
    \ Schoenwaelder,\n      Kent Watsen,\n      Robert Wilton, and\n      Joe Clarke.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jeff Haas\n   Juniper\n   Email: jhaas@juniper.net\n \
    \  Susan Hares\n   Huawei\n   Saline\n   United States of America\n   Email: shares@ndzh.com\n"
