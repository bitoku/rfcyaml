- contents:
  - "                     Class Extensions for PPP over\n          Asynchronous Transfer
    Mode Adaptation Layer 2 (AAL2)\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) over Asynchronous Transfer Mode\n
    \  (ATM) Adaptation Layer 2 defines the encapsulation that allows a PPP\n   session
    to be transported over an ATM virtual circuit using the ATM\n   Adaptation Layer
    2 (AAL2) adaptation layer.  This document defines a\n   set of class extensions
    to PPP over AAL2 that implement equivalent\n   functionality to Multi Class Multi
    Link PPP over a single ATM virtual\n   circuit.  Instead of using Multi Link PPP
    as the basis for\n   fragmentation functionality, this document uses the functionality
    of\n   the Segmentation and Reassembly Service Specific Convergence Sublayer\n
    \  that is already required as the basic encapsulation format of PPP\n   over
    AAL2.\n"
  title: Abstract
- contents:
  - "1. Introduction\n   Using AAL2 as an adaptation layer for PPP transport over
    ATM provides\n   a bandwidth efficient transport for IP applications that generate\n
    \  small packets.  An example IP application that generates small\n   packets
    is RTP encapsulated voice (Voice over IP).\n   In addition to bandwidth efficiency,
    real-time applications such as\n   voice require low latency.  RFC 2689 [2] describes
    an architecture\n   for providing transport services for real time applications
    on low\n   bit rate links.  The main components of the architecture are: a\n   real-time
    encapsulation format for asynchronous and synchronous low-\n   bitrate links,
    a header compression architecture optimized for real-\n   time flows, elements
    of negotiation protocols used between routers\n   (or between hosts and routers),
    and announcement protocols used by\n   applications to allow this negotiation
    to take place.\n   Multi Class Multi Link PPP [3] defines a fragment-oriented
    solution\n   for the real-time encapsulation format part of the architecture\n
    \  defined in [2], i.e., for the queues-of-fragments type sender.  As\n   described
    in more detail in the architecture document, a real-time\n   encapsulation format
    is required to guarantee low latency in the\n   presence of large non real time
    packets. For example, a 1500 byte\n   packet on a 128 kbit/s ATM virtual circuit
    makes this link\n   unavailable for the transmission of real-time information
    for about\n   100 ms.  This adds a worst-case delay that causes real-time\n   applications
    to operate with round-trip delays that are too high for\n   many interactive tasks.
    \ Multi Class Multi Link PPP defines a set of\n   extensions of Multi Link PPP
    [4] that enable the sender to fragment\n   the packets of various priorities into
    multiple classes of fragments,\n   allowing high-priority packets to be sent between
    fragments of lower\n   priorities.\n   This document defines a set of class extensions
    to PPP over AAL2 [1]\n   that implement equivalent functionality to Multi Class
    Multi Link PPP\n   over a single ATM virtual circuit.  Instead of using Multi
    Link PPP\n   as the basis for fragmentation functionality, this document uses
    the\n   functionality of the Service Specific Segmentation and Reassembly\n   Sublayer
    (SSSAR) [5] that is already required as the basic\n   encapsulation format of
    PPP over AAL2.\n   In addition to providing fragmentation, the real time transport\n
    \  service must allow high priority fragments to be sent between\n   fragments
    of lower priorities.  This can be accomplished in PPP over\n   AAL2 by allowing
    a single PPP session to span multiple AAL2 CPS [6]\n   Channel Identifiers.  Once
    a PPP session spans multiple AAL2 Channel\n   IDs, the Channel ID can be used
    to identify the class that a fragment\n   belongs to.  Fragments belonging to
    a high priority class can be sent\n   using a particular AAL2 Channel ID.  Fragments
    of lower priority\n   classes can be sent using different AAL2 Channel IDs.  Once
    multiple\n   fragment classes are identified using different AAL2 Channel IDs,
    the\n   AAL2 CPS layer can be used to send fragments belonging to a high\n   priority
    class between fragments of lower priorities.\n   The class based extensions to
    PPP over AAL2 use existing services of\n   the AAL2 SSCS and CPS layers already
    specified in PPP over AAL2.\n   Because of this, the extensions described in this
    document may be\n   viewed as a desirable alternative to Multi Class Multi Link
    PPP in\n   providing a class based transport service with PPP over AAL2.\n"
  - contents:
    - "1.1. Specification Language\n   The keywords MUST, MUST NOT, REQUIRED, SHALL,
      SHALL NOT, SHOULD,\n   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they
      appear in this\n   document, are to be interpreted as described in [7].\n"
    title: 1.1. Specification Language
  title: 1. Introduction
- contents:
  - "2. Requirements\n   This document assumes the same service requirements as defined
    in\n   Multi Class Multi Link PPP [3].  The reader is referred to section 2\n
    \  of Multi Class Multi Link PPP for the general requirements of a multi\n   class
    fragmentation / preemption service.\n"
  title: 2. Requirements
- contents:
  - "3. Class Extensions for PPP over AAL2\n   PPP over AAL2 uses the Service Specific
    Segmentation and Reassembly\n   Sublayer (SSSAR) [5] for the AAL type 2.  The
    SSSAR sub-layer is used\n   to segment PPP packets into frames that can be transported
    using the\n   AAL2 CPS.  The SSSAR sub-layer uses different AAL2 UUI code-points
    to\n   indicate whether a segment is the last segment of a packet or not.\n   SSSAR
    provides basic fragmentation functionality for all packets\n   encapsulated using
    PPP over AAL2.  The SSSAR layer fragments all\n   packets into 64 byte fragments.\n
    \  The AAL2 CPS layer defines a Channel ID that is used to identify\n   multiple
    streams of packets within a single ATM Virtual Circuit.  In\n   this document,
    the AAL2 CPS Channel ID is used to identify the\n   preemption class that a packet
    fragment belongs to.  Since the\n   Channel ID is used to identify different preemption
    classes, packet\n   fragments from each class of traffic MUST be assigned to different\n
    \  Channel IDs.  In addition, each PPP session MUST have at least as\n   many
    Channel IDs assigned as there are different classes of\n   preemptible traffic.\n
    \  To allow PPP packets to be assigned to different preemption classes,\n   PPP
    packets must be classified into multiple preemption classes as\n   they are fragmented
    using SSSAR.  Many classification methods may be\n   used to determine the class
    that a particular PPP packet belongs to.\n   The architecture document [2] describes
    possible alternatives that\n   MAY be used to implement a real time classification
    scheme.\n   Once packets have been classified into different preemption classes,\n
    \  each class of traffic is then assigned a different Channel ID.  Since\n   fragments
    from each traffic class are now transmitted using separate\n   Channel ID, the
    AAL2 CPS layer can be used to schedule fragments from\n   the different classes.
    \ The AAL2 CPS specification [6] does not\n   specify a method for scheduling
    AAL2 CPS payloads from different\n   Channel IDs.  The scheduling method required
    at the AAL2 CPS layer\n   depends upon the real time requirements of applications
    using this\n   service.  Some real-time applications MAY require the use of a\n
    \  priority based CID scheduler.  Other applications MAY only require a\n   fair
    or weighted fair CID scheduler.  Implementations of PPP over\n   AAL2 real time
    transport extensions SHOULD implement AAL2 CPS CID\n   schedulers that meet the
    requirements of multi-class real time\n   applications.\n"
  title: 3. Class Extensions for PPP over AAL2
- contents:
  - "4. Example Implementation: Class Based Extensions for Voice Service\n   When
    PPP over AAL2 is used to transport both voice and non-voice\n   packets over low
    bandwidth ATM virtual circuits, it may be necessary\n   to preempt the transmission
    of a large data packet in order to\n   transmit a voice packet with minimal delay.
    \ The example\n   implementation described below shows an example of how the class\n
    \  extensions for PPP over AAL2 can be used to support a real time voice\n   transport
    service over low bandwidth AAL2 virtual circuits.  To\n   guarantee low latency
    and loss for voice transport, the ATM virtual\n   circuit in this example must
    be provisioned using a real time traffic\n   class such as VBRnrt or VBRrt.\n
    \  For the simple voice service described above, 2 classes are\n   sufficient
    to guarantee low latency for voice packets.  The PPP over\n   AAL2 session in
    this case can be configured to run across 2 AAL2 CPS\n   Channel IDs.  One channel
    ID is used to transport large data packets\n   while the other channel ID is used
    to transport real time voice\n   packets.\n   Packets that arrive at the PPP interface
    must first be classified as\n   either belonging to the real time class or belonging
    to the data\n   class.  A simple classifier that can be used to classify packets
    at\n   this layer is packet size.\n   Large packets are assigned to the non-real
    time (or data) traffic\n   class and small packets are assigned to the real time
    traffic class.\n   The packet size used to discriminate between real time and
    non-real\n   time packets may vary based on the application and transmission rate\n
    \  of the virtual circuit.\n   Once packets have been classified, they are now
    fragmented using the\n   SSSAR layer of PPP over AAL2.  Separate instances of
    the SSSAR\n   fragmentation function run on each of the 2 Channel IDs assigned
    to\n   the PPP session.\n   Fragments coming from the SSSAR functions are now
    scheduled into the\n   AAL2 virtual circuit using the AAL2 CPS layer.  Most AAL2
    SAR\n   implementations currently implement fair scheduling across multiple\n
    \  AAL2 Channel IDs.  Since the AAL2 CPS scheduler implements fair\n   scheduling,
    real time fragments will wait for at most one non-real\n   time fragment to be
    transmitted on the AAL2 virtual circuit before\n   being scheduled.\n"
  title: '4. Example Implementation: Class Based Extensions for Voice Service'
- contents:
  - "5.  Security Considerations\n   Operation of this protocol is believed to be
    no more and no less\n   secure than operation of PPP over AAL2 [1].\n"
  title: 5.  Security Considerations
- contents:
  - "6. Acknowledgements\n   The authors would like to thank James Carlson for his
    contributions\n   to this proposal.\n"
  title: 6. Acknowledgements
- contents:
  - "7. References\n   [1] Thompson, B., Koren, T. and B. Buffam, \"PPP Over Asynchronous\n
    \      Transfer Mode Adaptation Layer 2\", RFC 3336, December 2002.\n   [2] Bormann,
    C., \"Providing Integrated Services over Low-bitrate\n       Links\", RFC 2689,
    September 1999.\n   [3] Bormann, C., \"The Multi-Class Extension to Multi-Link
    PPP\", RFC\n       2686 September 1999.\n   [4] Sklower, K., Lloyd, B., McGregor,
    G., Carr, D. and T. Coradetti,\n       \"The PPP Multilink Protocol (MP)\", RFC
    1990, August 1996.\n   [5] International Telecommunications Union, \"Segmentation\n
    \      and Reassembly Service Specific Convergence Sublayer for the AAL\n       type
    2\", ITU-T Recommendation I.366.1, June 1998.\n   [6] International Telecommunications
    Union, \"BISDN ATM Adaptation\n       layer specification: Type 2 AAL(AAL2)\",
    ITU-T Recommendation\n       I.363.2, September 1997.\n   [7] Bradner, S., \"Key
    words for use in RFCs to Indicate Requirement\n       Levels\", BCP 14, RFC 2119,
    March 1997.\n"
  title: 7. References
- contents:
  - "8. Authors' Addresses\n   Bruce Thompson\n   Cisco Systems, Inc.\n   170 West
    Tasman Drive\n   San Jose, CA 95134\n   USA\n   Phone: +1 408 527-0446\n   EMail:
    brucet@cisco.com\n   Bruce Buffam\n   Seaway Networks\n   One Chrysalis Way,\n
    \  Suite 300,\n   Ottawa, Canada\n   K2G-6P9\n   Phone: +1 613 723-9161\n   EMail:
    bruce@seawaynetworks.com\n   Tmima Koren\n   Cisco Systems, Inc.\n   170 West
    Tasman Drive\n   San Jose, CA 95134\n   USA\n   Phone: +1 408 527-6169\n   EMail:
    tmima@cisco.com\n"
  title: 8. Authors' Addresses
- contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 9.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
