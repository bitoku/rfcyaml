- title: __initial_text__
  contents:
  - "               Request Routing Redirection Interface for\n             Content\
    \ Delivery Network (CDN) Interconnection\n"
- title: Abstract
  contents:
  - "Abstract\n   The Request Routing interface comprises (1) the asynchronous\n \
    \  advertisement of footprint and capabilities by a downstream Content\n   Delivery\
    \ Network (CDN) that allows an upstream CDN to decide whether\n   to redirect\
    \ particular user requests to that downstream CDN; and (2)\n   the synchronous\
    \ operation of an upstream CDN requesting whether a\n   downstream CDN is prepared\
    \ to accept a user request and of a\n   downstream CDN responding with how to\
    \ actually redirect the user\n   request.  This document describes an interface\
    \ for the latter part,\n   i.e., the CDNI Request Routing Redirection interface.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7975.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Interface Function and Operation Overview . . . . . . .\
    \ . . .   4\n   4.  HTTP-Based Interface for the Redirection Interface  . . .\
    \ . .   6\n     4.1.  Information Passed in RI Requests and Responses . . . .\
    \ .   8\n     4.2.  JSON Encoding of RI Requests and Responses  . . . . . . .\
    \   9\n     4.3.  MIME Media Types Used by the RI Interface . . . . . . . .  11\n\
    \     4.4.  DNS Redirection . . . . . . . . . . . . . . . . . . . . .  12\n  \
    \     4.4.1.  DNS Redirection Requests  . . . . . . . . . . . . . .  12\n    \
    \   4.4.2.  DNS Redirection Responses . . . . . . . . . . . . . .  14\n     4.5.\
    \  HTTP Redirection  . . . . . . . . . . . . . . . . . . . .  17\n       4.5.1.\
    \  HTTP Redirection Requests . . . . . . . . . . . . . .  17\n       4.5.2.  HTTP\
    \ Redirection Responses  . . . . . . . . . . . . .  19\n     4.6.  Cacheability\
    \ and Scope of Responses . . . . . . . . . . .  22\n     4.7.  Error Responses\
    \ . . . . . . . . . . . . . . . . . . . . .  24\n     4.8.  Loop Detection and\
    \ Prevention . . . . . . . . . . . . . .  28\n   5.  Security Considerations .\
    \ . . . . . . . . . . . . . . . . . .  29\n     5.1.  Authentication, Authorization,\
    \ Confidentiality, and\n           Integrity Protection  . . . . . . . . . . .\
    \ . . . . . . .  29\n     5.2.  Privacy . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  30\n   6.  IANA Considerations . . . . . . . . . . . . . . . .\
    \ . . . . .  31\n     6.1.  CDNI Payload Type Parameter Registrations . . . .\
    \ . . . .  31\n       6.1.1.  CDNI RI Redirection Request Payload Type  . . .\
    \ . . .  31\n       6.1.2.  CDNI RI Redirection Response Payload Type . . . .\
    \ . .  31\n     6.2.  RI Error Response Registry  . . . . . . . . . . . . . .\
    \ .  31\n   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .\
    \  32\n     7.1.  Normative References  . . . . . . . . . . . . . . . . . .  32\n\
    \     7.2.  Informative References  . . . . . . . . . . . . . . . . .  34\n  \
    \ Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  34\n   Contributors\
    \  . . . . . . . . . . . . . . . . . . . . . . . . . .  35\n   Authors' Addresses\
    \  . . . . . . . . . . . . . . . . . . . . . . .  35\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A Content Delivery Network (CDN) is a system built on an\
    \ existing IP\n   network that is used for large-scale content delivery, via\n\
    \   prefetching or dynamically caching content on its distributed\n   surrogates\
    \ (caching servers).  [RFC6707] describes the problem area\n   of interconnecting\
    \ CDNs.\n   The CDNI Request Routing interface outlined in [RFC7336] is comprised\n\
    \   of:\n   1.  The asynchronous advertisement of footprint and capabilities by\
    \ a\n       downstream CDN (dCDN) that allows an upstream CDN (uCDN) to\n    \
    \   decide whether to redirect particular user requests to that dCDN.\n   2. \
    \ The synchronous operation of a uCDN requesting whether a dCDN is\n       prepared\
    \ to accept a user request and of a dCDN responding with\n       how to actually\
    \ redirect the user request.\n   This document describes an interface for the\
    \ latter part, i.e., the\n   CDNI Request Routing Redirection interface (RI).\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   This document reuses the terminology defined in [RFC6707].\n   The following\
    \ additional terms are introduced by this document:\n   Application-Level Redirection:\
    \  The act of using an application-\n      specific redirection mechanism for\
    \ the request routing process of\n      a CDN.  The Redirection Target (RT) is\
    \ the result of a CDN's\n      routing decision at the time it receives a content\
    \ request via an\n      application-specific protocol response.  Examples of an\n\
    \      application-level redirection are HTTP 302 Redirection and Real\n     \
    \ Time Messaging Protocol (RTMP) [RTMP] 302 Redirection.\n   DNS Redirection:\
    \  The act of using DNS name resolution for the\n      request routing process\
    \ of a CDN.  In DNS Redirection, the DNS\n      name server of the CDN makes the\
    \ routing decision based on a local\n      policy and selects one or more Redirection\
    \ Targets (RTs) and\n      redirects the User Agent (UA) to the RT(s) by returning\
    \ the\n      details of the RT(s) in response to the DNS query request from the\n\
    \      User Agent's DNS resolver.\n   HTTP Redirection:  The act of using an HTTP\
    \ redirection response for\n      the request routing process of a CDN.  The Redirection\
    \ Target (RT)\n      is the result of the routing decision of a CDN at the time\
    \ it\n      receives a content request via HTTP.  HTTP Redirection is a\n    \
    \  particular case of application-level redirection.\n   Redirection Target (RT):\
    \  The endpoint to which the User Agent is\n      redirected.  In CDNI, an RT\
    \ may point to a number of different\n      components, some examples include\
    \ a surrogate in the same CDN as\n      the request router, a request router in\
    \ a dCDN, or a surrogate in\n      a dCDN.\n"
- title: 3.  Interface Function and Operation Overview
  contents:
  - "3.  Interface Function and Operation Overview\n   The main function of the CDNI\
    \ Redirection interface (RI) is to allow\n   the request routing systems in interconnected\
    \ CDNs to communicate to\n   facilitate the redirection of User Agent requests\
    \ between\n   interconnected CDNs.\n   The detailed requirements for the Redirection\
    \ interface and their\n   relative priorities are described in Section 5 of [RFC7337].\n\
    \   The User Agent will make a request to a request router in the uCDN\n   using\
    \ one of either DNS or HTTP.  The RI is used between the uCDN and\n   one or more\
    \ dCDNs.  The dCDN's RI response may contain a Redirection\n   Target with a type\
    \ that is compatible with the protocol used between\n   the User Agent and uCDN\
    \ request router.  The dCDN has control over\n   the Redirection Target it provides.\
    \  Depending on the returned\n   Redirection Target, the User Agent's request\
    \ may be redirected to:\n   o  The final surrogate, which may be in the dCDN that\
    \ returned the RI\n      response to the uCDN or another CDN (if the dCDN delegates\
    \ the\n      delivery to another CDN); or\n   o  A request router (in the dCDN\
    \ or another CDN), which may use a\n      different redirection protocol (DNS\
    \ or HTTP) than the one included\n      in the RI request.\n   The Redirection\
    \ interface operates between the request routing\n   systems of a pair of interconnected\
    \ CDNs.  To enable communication\n   over the Redirection interface, the uCDN\
    \ needs to know the URI\n   (endpoint) in the dCDN to send CDNI request routing\
    \ queries.\n   The Redirection interface URI may be statically preconfigured,\n\
    \   dynamically discovered via the CDNI Control interface, or discovered\n   via\
    \ other means.  However, such discovery mechanisms are not\n   specified in this\
    \ document, as they are considered out of the scope\n   of the Redirection interface\
    \ specification.\n   The Redirection interface is only relevant in the case of\
    \ Recursive\n   Request Redirection, as Iterative Request Redirection does not\
    \ invoke\n   any interaction over the Redirection interface between interconnected\n\
    \   CDNs.  Therefore, the scope of this document is limited to Recursive\n   Request\
    \ Redirection.\n   In the case of Recursive Request Redirection, in order to perform\n\
    \   redirection of a request received from a User Agent, the uCDN queries\n  \
    \ the dCDN so that the dCDN can select and provide a Redirection\n   Target. \
    \ In cases where a uCDN has a choice of dCDNs, it is up to the\n   uCDN to decide\
    \ (for example, via configured policies) which dCDN(s)\n   to query and in which\
    \ order to query them.  A number of strategies\n   are possible, including selecting\
    \ a preferred dCDN based on local\n   policy, possibly falling back to querying\
    \ an alternative dCDN(s) if\n   the first dCDN does not return a Redirection Target\
    \ or otherwise\n   rejects the uCDN's RI request.  A more complex strategy could\
    \ be to\n   query multiple dCDNs in parallel before selecting one and using the\n\
    \   Redirection Target provided by that dCDN.\n   The uCDN->User Agent redirection\
    \ protocols addressed in this document\n   are: DNS redirection and HTTP redirection.\
    \  Other types of\n   application-level redirection will not be discussed further\
    \ in this\n   document.  However, the Redirection interface is designed to be\n\
    \   extensible and could be extended to support additional application-\n   level\
    \ redirection protocols.\n   For both DNS and HTTP redirection, either HTTP or\
    \ HTTPS could be used\n   to connect to the Redirection Target.  When HTTPS is\
    \ used to connect\n   to the uCDN, if the uCDN uses DNS redirection to identify\
    \ the RT to\n   the User Agent, then the new target domain name may not match\
    \ the\n   domain in the URL dereferenced to reach the uCDN; without operational\n\
    \   precautions, and in the absence of DNSSEC, this can make a legitimate\n  \
    \ redirection look like a DNS-based attack to a User Agent and trigger\n   security\
    \ warnings.  When DNS-based redirection with HTTPS is used,\n   this specification\
    \ assumes that any RT can complete the necessary\n   Transport Layer Security\
    \ (TLS) handshake with the User Agent.  Any\n   operational mechanisms this requires,\
    \ e.g., private key distribution\n   to surrogates and request routers in dCDNs,\
    \ are outside the scope of\n   this document.\n   This document also defines an\
    \ RI loop prevention and detection\n   mechanism as part of the Redirection interface.\n"
- title: 4.  HTTP-Based Interface for the Redirection Interface
  contents:
  - "4.  HTTP-Based Interface for the Redirection Interface\n   This document defines\
    \ a simple interface for the Redirection\n   interface based on HTTP [RFC7230],\
    \ where the attributes of a User\n   Agent's requests are encapsulated along with\
    \ any other data that can\n   aid the dCDN in processing the requests.  The RI\
    \ response\n   encapsulates the attributes of the RT(s) that the uCDN should return\n\
    \   to the User Agent (if it decides to utilize the dCDN for delivery)\n   along\
    \ with the policy for how the response can be reused.  The\n   examples of RI\
    \ requests and responses below do not contain a complete\n   set of HTTP headers\
    \ for brevity; only the pertinent HTTP headers are\n   shown.\n   The RI between\
    \ the uCDN and dCDN uses the same HTTP interface to\n   encapsulate the attributes\
    \ of both DNS and HTTP requests received\n   from User Agents, although the contents\
    \ of the RI requests/responses\n   contain data specific to either DNS or HTTP\
    \ redirection.\n   This approach has been chosen because it enables CDN operators\
    \ to\n   only have to deploy a single interface for the RI between their CDNs,\n\
    \   regardless of the User Agent redirection method.  In this way, from\n   an\
    \ operational point of view, there is only one interface to monitor,\n   manage,\
    \ develop troubleshooting tools for, etc.\n   In addition, having a single RI\
    \ where the attributes of the User\n   Agent's DNS or HTTP request are encapsulated\
    \ along with the other\n   data required for the dCDN to make a request routing\
    \ decision, avoids\n   having to both 1) try to encapsulate or proxy DNS/HTTP/RTMP/\n\
    \   etc. requests and 2) find ways to somehow embed the additional CDNI\n   Request\
    \ Routing Redirection interface properties/data within those\n   end-user DNS/HTTP/RTMP/etc.\
    \ requests.\n   Finally, the RI is easily extendable to support other User Agent\n\
    \   request redirection methods (e.g., RTMP 302 redirection) by defining\n   additional\
    \ protocol-specific keys for RI requests and responses along\n   with a specification\
    \ about how to process them.\n   The generic Recursive Request Redirection message\
    \ flow between\n   Request Routing systems in a pair of interconnected CDNs is\
    \ as\n   follows:\n   User Agent                CDN B RR                  CDN\
    \ A RR\n       |UA Request (DNS or HTTP) |                         |\n       |-------------------------------------------------->|\
    \ (1)\n       |                         |                         |\n       |\
    \                         |HTTP POST to CDN B's RI  |\n       |              \
    \           |URI encapsulating UA     |\n       |                         |request\
    \ attributes       |\n       |                         |<------------------------|\
    \ (2)\n       |                         |                         |\n       |\
    \                         |HTTP Response with body  |\n       |              \
    \           |containing RT attributes |\n       |                         |of\
    \ the protocol-specific |\n       |                         |response to return\
    \ to UA |\n       |                         |------------------------>| (3)\n\
    \       |                         |                         |\n       |      \
    \     Protocol-specific response (redirection)|\n       |<--------------------------------------------------|\
    \ (4)\n       |                         |                         |\n       Figure\
    \ 1: Generic Recursive Request Redirection Message Flow\n   1.  The User Agent\
    \ sends its (DNS or HTTP) request to CDN A.  The\n       Request Routing System\
    \ of CDN A processes the request and,\n       through local policy, recognizes\
    \ that the request is best served\n       by another CDN, specifically CDN B (or\
    \ that CDN B may be one of a\n       number of candidate dCDNs it could use).\n\
    \   2.  The Request Routing System of CDN A sends an HTTP POST to CDN B's\n  \
    \     RI URI containing the attributes of the User Agent's request.\n   3.  The\
    \ Request Routing System of CDN B processes the RI request and,\n       assuming\
    \ the request is well-formed, responds with an HTTP \"200\"\n       response with\
    \ a message body containing the RT(s) to return to\n       the User Agent as well\
    \ as parameters that indicate the properties\n       of the response (cacheability\
    \ and scope).\n   4.  The Request Routing System of CDN A sends a protocol-specific\n\
    \       response (containing the returned attributes) to the User Agent,\n   \
    \    so that the User Agent's request will be redirected to the RT(s)\n      \
    \ returned by CDN B.\n"
- title: 4.1.  Information Passed in RI Requests and Responses
  contents:
  - "4.1.  Information Passed in RI Requests and Responses\n   The information passed\
    \ in RI requests splits into two basic\n   categories:\n   1.  The attributes\
    \ of the User Agent's request to the uCDN.\n   2.  Properties/parameters that\
    \ the uCDN can use to control the dCDN's\n       response or that can help the\
    \ dCDN make its decision.\n   Generally, dCDNs can provide better routing decisions\
    \ given\n   additional information about the content request, e.g., the URI of\n\
    \   the requested content or the User Agent's IP address or subnet.  The\n   information\
    \ required to base a routing decision on can be highly\n   dependent on the type\
    \ of content delivered.  A uCDN SHOULD only\n   include information that is absolutely\
    \ necessary for delivering that\n   type of content.  Cookies in particular are\
    \ especially sensitive from\n   a security/privacy point of view and in general\
    \ SHOULD NOT be\n   conveyed in the RI Requests to the dCDN.  The information\
    \ necessary\n   to be conveyed for a particular type of request is expected to\
    \ be\n   conveyed out of band between the uCDN and dCDN.  See Section 5.2 for\n\
    \   more detail on the privacy aspects of using RI Requests to convey\n   information\
    \ about UA requests.\n   In order for the dCDN to determine whether it is capable\
    \ of\n   delivering any requested content, it requires CDNI metadata related\n\
    \   to the content the User Agent is requesting.  That metadata will\n   describe\
    \ the content and any policies associated with it.  It is\n   expected that the\
    \ RI request contains sufficient information for the\n   Request Router in the\
    \ dCDN to be able to retrieve the required CDNI\n   Metadata via the CDNI Metadata\
    \ interface.\n   The information passed in RI responses splits into two basic\n\
    \   categories:\n   1.  The attributes of the RT to return to the User Agent in\
    \ the DNS\n       response or HTTP response.\n   2.  Parameters/policies that\
    \ indicate the properties of the response,\n       such as, whether it is cacheable,\
    \ the scope of the response, etc.\n   In addition to details about how to redirect\
    \ the User Agent, the dCDN\n   may wish to return additional policy information\
    \ to the uCDN.  For\n   example, the dCDN may wish to return a policy that expresses\
    \ \"this\n   response can be reused without requiring an RI request for 60 seconds\n\
    \   provided the User Agent's IP address is in the range 198.51.100.0 --\n   198.51.100.255\"\
    .\n   These additional policies split into two basic categories:\n   o  Cacheability\
    \ information signaled via the HTTP response headers of\n      the RI response\
    \ (to reduce the number of subsequent RI requests\n      the uCDN needs to make).\n\
    \   o  The scope of a cacheable response signaled in the HTTP response\n     \
    \ body of the RI response, for example, whether the response applies\n      to\
    \ a wider range of IP addresses than what was included in the RI\n      request.\n\
    \   The cacheability of the response is indicated using the standard HTTP\n  \
    \ Cache-Control mechanisms.\n"
- title: 4.2.  JSON Encoding of RI Requests and Responses
  contents:
  - "4.2.  JSON Encoding of RI Requests and Responses\n   The body of RI requests\
    \ and responses is a JSON object [RFC7159] that\n   contains a dictionary of key:value\
    \ pairs that MUST conform to\n   [RFC7493].  Senders MUST encode all (top-level\
    \ object and sub-object)\n   keys specified in this document in lowercase.  Receivers\
    \ MUST ignore\n   any keys that are unknown or invalid.\n   The following table\
    \ defines the top-level keys and indicates whether\n   they are applicable to\
    \ RI requests, RI responses, or both:\n   +----------+------------------+-------------------------------------+\n\
    \   | Key      | Request/Response | Description                         |\n  \
    \ +----------+------------------+-------------------------------------+\n   |\
    \ dns      | Both             | The attributes of the UA's DNS      |\n   |  \
    \        |                  | request or the attributes of the    |\n   |    \
    \      |                  | RT(s) to return in a DNS response.  |\n   |      \
    \    |                  |                                     |\n   | http   \
    \  | Both             | The attributes of the UA's HTTP     |\n   |          |\
    \                  | request or the attributes of the RT |\n   |          |  \
    \                | to return in an HTTP response.      |\n   |          |    \
    \              |                                     |\n   | scope    | Response\
    \         | The scope of the response (if it is |\n   |          |           \
    \       | cacheable). For example, whether    |\n   |          |             \
    \     | the response applies to a wider     |\n   |          |               \
    \   | range of IP addresses than what was |\n   |          |                 \
    \ | included in the RI request.         |\n   |          |                  |\
    \                                     |\n   | error    | Response         | Additional\
    \ details if the response  |\n   |          |                  | is an error response.\
    \               |\n   |          |                  |                        \
    \             |\n   | cdn-path | Both             | A List of Strings. Contains\
    \ a list  |\n   |          |                  | of the CDN Provider IDs of previous\
    \ |\n   |          |                  | CDNs that have participated in the  |\n\
    \   |          |                  | request routing for the associated  |\n  \
    \ |          |                  | User Agent request. On RI requests, |\n   |\
    \          |                  | it contains the list of previous    |\n   |  \
    \        |                  | CDNs that this RI request has       |\n   |    \
    \      |                  | passed through. On RI responses, it |\n   |      \
    \    |                  | contains the list of CDNs that were |\n   |        \
    \  |                  | involved in obtaining the final     |\n   |          |\
    \                  | redirection included in the RI      |\n   |          |  \
    \                | response. See Section 4.8.          |\n   |          |    \
    \              |                                     |\n   | max-hops | Request\
    \          | Integer specifying the maximum      |\n   |          |          \
    \        | number of hops (CDN Provider IDs)   |\n   |          |            \
    \      | this request is allowed to be       |\n   |          |              \
    \    | propagated along. This allows the   |\n   |          |                \
    \  | uCDN to coarsely constrain the      |\n   |          |                  |\
    \ latency of the request routing      |\n   |          |                  | chain.\
    \                              |\n   +----------+------------------+-------------------------------------+\n\
    \             Table 1: Top-Level Keys in RI Requests/Responses\n   A single request\
    \ or response MUST contain only one of the dns or http\n   keys.  Requests MUST\
    \ contain a cdn-path key and responses MAY contain\n   a cdn-path key.  If the\
    \ max-hops key is not present, then there is no\n   limit on the number of CDN\
    \ hops that the RI request can be propagated\n   along.  If the first uCDN does\
    \ not wish the RI request to be\n   propagated beyond the dCDN it is making the\
    \ request to, then the uCDN\n   MUST set max-hops to 1.\n   The cdn-path MAY be\
    \ reflected back in RI responses, although doing so\n   could expose information\
    \ to the uCDN that a dCDN may not wish to\n   expose (for example, the existence\
    \ of business relationships between\n   a dCDN and other CDNs).\n   If the cdn-path\
    \ is reflected back in the RI response, it MUST contain\n   the value of cdn-path\
    \ received in the associated RI request with the\n   final dCDN's CDN Provider\
    \ ID appended.  Transit CDNs MAY remove the\n   cdn-path from RI responses but\
    \ MUST NOT modify the cdn-path in other\n   ways.\n   The presence of an error\
    \ key within a response that also contains\n   either a dns or http key does not\
    \ automatically indicate that the RI\n   request was unsuccessful as the error\
    \ key MAY be used for\n   communicating additional (e.g., debugging) information.\
    \  When a\n   response contains an error key as well as either a dns or http key,\n\
    \   the error-code SHOULD be 1xx (e.g., 100).  See Section 4.7 for more\n   details\
    \ about encoding error information in RI responses.\n   All implementations that\
    \ support IPv4 addresses MUST support the\n   encoding specified by the 'IPv4address'\
    \ rule in Section 3.2.2 of\n   [RFC3986].  Likewise, implementations that support\
    \ IPv6 addresses\n   MUST support all IPv6 address formats specified in [RFC4291].\
    \  Server\n   implementations SHOULD use IPv6 address formats specified in\n \
    \  [RFC5952].\n"
- title: 4.3.  MIME Media Types Used by the RI Interface
  contents:
  - "4.3.  MIME Media Types Used by the RI Interface\n   RI requests MUST use a MIME\
    \ media type of application/cdni as\n   specified in [RFC7736], with the Payload\
    \ Type (ptype) parameter set\n   to 'redirection-request'.\n   RI responses MUST\
    \ use a MIME media type of application/cdni as\n   specified in [RFC7736], with\
    \ the Payload Type (ptype) parameter set\n   to 'redirection-response'.\n"
- title: 4.4.  DNS Redirection
  contents:
  - "4.4.  DNS Redirection\n   The following sections provide detailed descriptions\
    \ of the\n   information that should be passed in RI requests and responses for\n\
    \   DNS redirection.\n"
- title: 4.4.1.  DNS Redirection Requests
  contents:
  - "4.4.1.  DNS Redirection Requests\n   For DNS-based redirection, the uCDN needs\
    \ to pass the following\n   information to the dCDN in the RI request:\n   o \
    \ The IP address of the DNS resolver that made the DNS request to\n      the uCDN.\n\
    \   o  The type of DNS query made (usually either A or AAAA).\n   o  The class\
    \ of DNS query made (usually IN).\n   o  The fully qualified domain name for which\
    \ DNS redirection is being\n      requested.\n   o  The IP address or prefix of\
    \ the User Agent (if known to the uCDN).\n   The preceding information is encoded\
    \ as a set of key:value pairs\n   within the dns dictionary as follows:\n   +-------------+---------+-----------+-------------------------------+\n\
    \   | Key         | Value   | Mandatory | Description                   |\n  \
    \ +-------------+---------+-----------+-------------------------------+\n   |\
    \ resolver-ip | String  | Yes       | The IP address of the UA's    |\n   |  \
    \           |         |           | DNS resolver.                 |\n   |    \
    \         |         |           |                               |\n   | qtype\
    \       | String  | Yes       | The type of DNS query made by |\n   |        \
    \     |         |           | the UA's DNS resolvers in     |\n   |          \
    \   |         |           | uppercase.  The value of this |\n   |            \
    \ |         |           | field SHALL be set to either  |\n   |             |\
    \         |           | 'A' or 'AAAA'.                |\n   |             |  \
    \       |           |                               |\n   | qclass      | String\
    \  | Yes       | The class of DNS query made   |\n   |             |         |\
    \           | in uppercase (IN, etc.).      |\n   |             |         |  \
    \         |                               |\n   | qname       | String  | Yes\
    \       | The fully qualified domain    |\n   |             |         |      \
    \     | name being queried.           |\n   |             |         |        \
    \   |                               |\n   | c-subnet    | String  | No       \
    \ | The IP address (or prefix) of |\n   |             |         |           |\
    \ the UA in Classless Inter-    |\n   |             |         |           | Domain\
    \ Routing (CIDR) format. |\n   |             |         |           |         \
    \                      |\n   | dns-only    | Boolean | No        | If True, then\
    \ dCDN MUST only  |\n   |             |         |           | use DNS redirection\
    \ and MUST  |\n   |             |         |           | include RTs to one or\
    \ more    |\n   |             |         |           | surrogates in any successful\
    \  |\n   |             |         |           | RI response.  CDNs MUST       |\n\
    \   |             |         |           | include the dns-only property |\n  \
    \ |             |         |           | set to True on any cascaded   |\n   |\
    \             |         |           | RI requests.  Defaults to     |\n   |  \
    \           |         |           | False.                        |\n   +-------------+---------+-----------+-------------------------------+\n\
    \                                  Table 2\n   An RI request for DNS-based redirection\
    \ MUST include a dns\n   dictionary.  This dns dictionary MUST contain the following\
    \ keys:\n   resolver-ip, qtype, qclass, and qname; the value of each MUST be the\n\
    \   value of the appropriate part of the User Agent's DNS query/request.\n   For\
    \ internationalized domain names containing non-ASCII characters,\n   the value\
    \ of the qname field MUST be the ASCII-compatible encoded\n   (ACE) representation\
    \ (A-label) of the domain name [RFC5890].\n   An example RI request (uCDN->dCDN)\
    \ for DNS-based redirection is as\n   follows:\n   POST /dcdn/ri HTTP/1.1\n  \
    \ Host: rr1.dcdn.example.net\n   Content-Type: application/cdni; ptype=redirection-request\n\
    \   Accept: application/cdni; ptype=redirection-response\n   {\n     \"dns\" :\
    \ {\n       \"resolver-ip\" : \"192.0.2.1\",\n       \"c-subnet\" : \"198.51.100.0/24\"\
    ,\n       \"qtype\" : \"A\",\n       \"qclass\" : \"IN\",\n       \"qname\" :\
    \ \"www.example.com\"\n     },\n     \"cdn-path\": [\"AS64496:0\"],\n     \"max-hops\"\
    : 3\n   }\n"
- title: 4.4.2.  DNS Redirection Responses
  contents:
  - "4.4.2.  DNS Redirection Responses\n   For a successful DNS-based redirection,\
    \ the dCDN needs to return one\n   of the following to the uCDN in the RI response:\n\
    \   o  The IP address(es) of (or the CNAME of) RTs that are dCDN\n      surrogates\
    \ (if the dCDN is performing DNS-based redirection\n      directly to a surrogate);\
    \ or\n   o  The IP address(es) of (or the CNAME of) RTs that are Request\n   \
    \   Routers (if the dCDN will perform request redirection itself).  A\n      dCDN\
    \ MUST NOT return an RT that is a Request Router if the dns-\n      only key is\
    \ set to True in the RI request.\n   The preceding information is encoded as a\
    \ set of key:value pairs\n   within the dns dictionary as follows:\n   +-------+-----------+-----------+-----------------------------------+\n\
    \   | Key   | Value     | Mandatory | Description                       |\n  \
    \ +-------+-----------+-----------+-----------------------------------+\n   |\
    \ rcode | Integer   | Yes       | DNS response code (see            |\n   |  \
    \     |           |           | [RFC6895]).                       |\n   |    \
    \   |           |           |                                   |\n   | name \
    \ | String    | Yes       | The fully qualified domain name   |\n   |       |\
    \           |           | the response relates to.          |\n   |       |  \
    \         |           |                                   |\n   | a     | List\
    \ of   | No        | Set of IPv4 Addresses of RT(s).   |\n   |       | String\
    \    |           |                                   |\n   |       |         \
    \  |           |                                   |\n   | aaaa  | List of   |\
    \ No        | Set of IPv6 Addresses of RT(s).   |\n   |       | String    |  \
    \         |                                   |\n   |       |           |    \
    \       |                                   |\n   | cname | List of   | No   \
    \     | Set of fully qualified domain     |\n   |       | String    |        \
    \   | names of RT(s).                   |\n   |       |           |          \
    \ |                                   |\n   | ttl   | Integer   | No        |\
    \ TTL in seconds of DNS response.   |\n   |       |           |           | Default\
    \ is 0.                     |\n   +-------+-----------+-----------+-----------------------------------+\n\
    \                                  Table 3\n   A successful RI response for DNS-based\
    \ redirection MUST include a dns\n   dictionary and MAY include an error dictionary\
    \ (see Section 4.7).  An\n   unsuccessful RI response for DNS-based redirection\
    \ MUST include an\n   error dictionary.  If a dns dictionary is included in the\
    \ RI\n   response, it MUST include the rcode and name keys and it MUST include\n\
    \   at least one of the following keys: a, aaaa, or cname.  The dns\n   dictionary\
    \ MAY include both a and aaaa keys.  If the dns dictionary\n   contains a cname\
    \ key, it MUST NOT contain either an a or aaaa key.\n   For internationalized\
    \ domain names containing non-ASCII characters,\n   the value of the cname field\
    \ MUST be the ACE representation (A-label)\n   of the domain name.\n   An example\
    \ of a successful RI response (dCDN->uCDN) for DNS-based\n   redirection with\
    \ both a and aaaa keys is listed below:\n   HTTP/1.1 200 OK\n   Date: Mon, 06\
    \ Aug 2012 18:41:38 GMT\n   Content-Type: application/cdni; ptype=redirection-response\n\
    \   {\n     \"dns\" : {\n       \"rcode\" : 0,\n       \"name\" : \"www.example.com\"\
    ,\n       \"a\" : [\"203.0.113.200\", \"203.0.113.201\", \"203.0.113.202\"],\n\
    \       \"aaaa\" : [\"2001:DB8::C8\", \"2001:DB8::C9\"],\n       \"ttl\" : 60\n\
    \     }\n   }\n   A further example of a successful RI response (dCDN->uCDN) for\
    \ DNS-\n   based redirection is listed below, in this case with a cname key\n\
    \   containing the FQDN of the RT.\n   HTTP/1.1 200 OK\n   Date: Mon, 06 Aug 2012\
    \ 18:41:38 GMT\n   Content-Type: application/cdni; ptype=redirection-response\n\
    \   {\n     \"dns\" : {\n       \"rcode\" : 0,\n       \"name\" : \"www.example.com\"\
    ,\n       \"cname\" : [\"rr1.dcdn.example\"],\n       \"ttl\" : 20\n     }\n \
    \  }\n"
- title: 4.5.  HTTP Redirection
  contents:
  - "4.5.  HTTP Redirection\n   The following sections provide detailed descriptions\
    \ of the\n   information that should be passed in RI requests and responses for\n\
    \   HTTP redirection.\n   The dictionary keys used in HTTP Redirection requests\
    \ and responses\n   use the following conventions for their prefixes:\n   o  c-\
    \ is prefixed to keys for information related to the Client (User\n      Agent).\n\
    \   o  cs- is prefixed to keys for information passed by the Client (User\n  \
    \    Agent) to the Server (uCDN).\n   o  sc- is prefixed to keys for information\
    \ to be passed by the Server\n      (uCDN) to the Client (User Agent).\n"
- title: 4.5.1.  HTTP Redirection Requests
  contents:
  - "4.5.1.  HTTP Redirection Requests\n   For HTTP-based redirection, the uCDN needs\
    \ to pass the following\n   information to the dCDN in the RI request:\n   o \
    \ The IP address of the User Agent.\n   o  The URI requested by the User Agent.\n\
    \   o  The HTTP method requested by the User Agent.\n   o  The HTTP version number\
    \ requested by the User Agent.\n   The uCDN may also decide to pass the presence\
    \ and value of particular\n   HTTP headers included in the User Agent request\
    \ to the dCDN.\n   The preceding information is encoded as a set of key:value\
    \ pairs\n   within the http dictionary as follows:\n   +-------------------+--------+-----------+--------------------------+\n\
    \   | Key               | Value  | Mandatory | Description              |\n  \
    \ +-------------------+--------+-----------+--------------------------+\n   |\
    \ c-ip              | String | Yes       | The IP address of the    |\n   |  \
    \                 |        |           | UA.                      |\n   |    \
    \               |        |           |                          |\n   | cs-uri\
    \            | String | Yes       | The Effective Request    |\n   |         \
    \          |        |           | URI [RFC7230] requested  |\n   |           \
    \        |        |           | by the UA.               |\n   |             \
    \      |        |           |                          |\n   | cs-method     \
    \    | String | Yes       | The method part of the   |\n   |                 \
    \  |        |           | request-line as defined  |\n   |                   |\
    \        |           | in Section 3.1.1 of      |\n   |                   |  \
    \      |           | [RFC7230].               |\n   |                   |    \
    \    |           |                          |\n   | cs-version        | String\
    \ | Yes       | The HTTP-version part of |\n   |                   |        |\
    \           | the request-line as      |\n   |                   |        |  \
    \         | defined in Section 3.1.1 |\n   |                   |        |    \
    \       | of [RFC7230].            |\n   |                   |        |      \
    \     |                          |\n   | cs-(<headername>) | String | No     \
    \   | The field-value of the   |\n   |                   |        |          \
    \ | HTTP header field named  |\n   |                   |        |           |\
    \ <HeaderName> as a        |\n   |                   |        |           | string,\
    \ for example,     |\n   |                   |        |           | cs-(cookie)\
    \ would        |\n   |                   |        |           | contain the value\
    \ of the |\n   |                   |        |           | HTTP Cookie header from\
    \  |\n   |                   |        |           | the UA request.          |\n\
    \   +-------------------+--------+-----------+--------------------------+\n  \
    \                                Table 4\n   An RI request for HTTP-based redirection\
    \ MUST include an http\n   dictionary.  This http dictionary MUST contain the\
    \ following keys:\n   c-ip, cs-method, cs-version, and cs-uri; the value of each\
    \ MUST be\n   the value of the appropriate part of the User Agent's HTTP request.\n\
    \   The http dictionary of an RI request MUST contain a maximum of one\n   cs-(<headername>)\
    \ key for each unique header field-name (HTTP header\n   field).  <headername>\
    \ MUST be identical to the equivalent HTTP header\n   field-name encoded in all\
    \ lowercase.\n   In the case where the User Agent request includes multiple HTTP\n\
    \   header fields with the same field-name, it is RECOMMENDED that the\n   uCDN\
    \ combine these different HTTP headers into a single value\n   according to Section\
    \ 3.2.2 of [RFC7230].  However, because of the\n   plurality of already defined\
    \ HTTP header fields and the inconsistency\n   of some of these header fields\
    \ concerning the combination mechanism\n   defined in RFC 7230, the uCDN MAY have\
    \ to deviate from using the\n   combination mechanism where appropriate.  For\
    \ example, it might only\n   send the contents of the first occurrence of the\
    \ HTTP Headers\n   instead.\n   An example RI request (uCDN->dCDN) for HTTP-based\
    \ redirection is as\n   follows:\n   POST /dcdn/rrri HTTP/1.1\n   Host: rr1.dcdn.example.net\n\
    \   Content-Type: application/cdni; ptype=redirection-request\n   Accept: application/cdni;\
    \ ptype=redirection-response\n   {\n     \"http\": {\n       \"c-ip\": \"198.51.100.1\"\
    ,\n       \"cs-uri\": \"http://www.example.com\",\n       \"cs-version\": \"HTTP/1.1\"\
    ,\n       \"cs-method\": \"GET\"\n     },\n     \"cdn-path\": [\"AS64496:0\"],\n\
    \     \"max-hops\": 3\n   }\n"
- title: 4.5.2.  HTTP Redirection Responses
  contents:
  - "4.5.2.  HTTP Redirection Responses\n   For a successful HTTP-based redirection,\
    \ the dCDN needs to return one\n   of the following to the uCDN in the RI response:\n\
    \   o  A URI pointing to an RT that is the selected dCDN surrogate(s) (if\n  \
    \    the dCDN is performing HTTP-based redirection directly to a\n      surrogate);\
    \ or\n   o  A URI pointing to an RT that is a Request Router (if the dCDN will\n\
    \      perform request redirection itself).\n   The preceding information is encoded\
    \ as a set of key:value pairs\n   within the http dictionary as follows:\n   +-------------------+---------+-----------+-------------------------+\n\
    \   | Key               | Value   | Mandatory | Description             |\n  \
    \ +-------------------+---------+-----------+-------------------------+\n   |\
    \ sc-status         | Integer | Yes       | The status-code part of |\n   |  \
    \                 |         |           | the status-line as      |\n   |    \
    \               |         |           | defined in Section      |\n   |      \
    \             |         |           | 3.1.2 of [RFC7230] to   |\n   |        \
    \           |         |           | return to the UA        |\n   |          \
    \         |         |           | (usually set to 302).   |\n   |            \
    \       |         |           |                         |\n   | sc-version   \
    \     | String  | Yes       | The HTTP-version part   |\n   |                \
    \   |         |           | of the status-line as   |\n   |                  \
    \ |         |           | defined in Section      |\n   |                   |\
    \         |           | 3.1.2 of [RFC7230] to   |\n   |                   |  \
    \       |           | return to the UA.       |\n   |                   |    \
    \     |           |                         |\n   | sc-reason         | String\
    \  | Yes       | The reason-phrase part  |\n   |                   |         |\
    \           | of the status-line as   |\n   |                   |         |  \
    \         | defined in Section      |\n   |                   |         |    \
    \       | 3.1.2 of [RFC7230] to   |\n   |                   |         |      \
    \     | return to the UA.       |\n   |                   |         |        \
    \   |                         |\n   | cs-uri            | String  | Yes      \
    \ | The URI requested by    |\n   |                   |         |           |\
    \ the UA/client.          |\n   |                   |         |           |  \
    \                       |\n   | sc-(location)     | String  | Yes       | The\
    \ contents of the     |\n   |                   |         |           | Location\
    \ header to      |\n   |                   |         |           | return to the\
    \ UA (i.e., |\n   |                   |         |           | a URI pointing to\
    \ the   |\n   |                   |         |           | RT(s)).            \
    \     |\n   |                   |         |           |                      \
    \   |\n   | sc-(<headername>) | String  | No        | The field-value of the \
    \ |\n   |                   |         |           | HTTP header field named |\n\
    \   |                   |         |           | <HeaderName> to return  |\n  \
    \ |                   |         |           | to the UA. For example, |\n   |\
    \                   |         |           | sc-(expires) would      |\n   |  \
    \                 |         |           | contain the value of    |\n   |    \
    \               |         |           | the HTTP Expires        |\n   |      \
    \             |         |           | header.                 |\n   +-------------------+---------+-----------+-------------------------+\n\
    \                                  Table 5\n   Note: The sc-(location) key in\
    \ the preceding table is an example of\n   sc-(<headername>) that has been called\
    \ out separately as its presence\n   is mandatory in RI responses.\n   A successful\
    \ RI response for HTTP-based redirection MUST include an\n   http dictionary and\
    \ MAY include an error dictionary (see\n   Section 4.7).  An unsuccessful RI response\
    \ for HTTP-based redirection\n   MUST include an error dictionary.  If an http\
    \ dictionary is included\n   in the RI response, it MUST include at least the\
    \ following keys:\n   sc-status, sc-version, sc-reason, cs-uri, and sc-(location).\n\
    \   The http dictionary of an RI response MUST contain a maximum of one\n   sc-(<headername>)\
    \ key for each unique header field-name (HTTP header\n   field).  <headername>\
    \ MUST be identical to the equivalent HTTP header\n   field-name encoded in all\
    \ lowercase.\n   The uCDN MAY decide to not return, override, or alter any or\
    \ all of\n   the HTTP headers defined by sc-(<headername>) keys before sending\
    \ the\n   HTTP response to the UA.  It should be noted that in some cases,\n \
    \  sending the HTTP Headers indicated by the dCDN transparently on to\n   the\
    \ UA might result in, for the uCDN, undesired behavior.  As an\n   example, the\
    \ dCDN might include sc-(cache-control),\n   sc-(last-modified), and sc-(expires)\
    \ keys in the http dictionary,\n   through which the dCDN may try to influence\
    \ the cacheability of the\n   response by the UA.  If the uCDN would pass these\
    \ HTTP headers on to\n   the UA, this could mean that further requests from the\
    \ uCDN would go\n   directly to the dCDN, bypassing the uCDN and any logging it\
    \ may\n   perform on incoming requests.  Therefore, the uCDN is recommended to\n\
    \   carefully consider which HTTP headers to pass on, and which to either\n  \
    \ override or not pass on at all.\n   An example of a successful RI response (dCDN->uCDN)\
    \ for HTTP-based\n   redirection is a follows:\n   HTTP/1.1 200 OK\n   Date: Mon,\
    \ 06 Aug 2012 18:41:38 GMT\n   Content-Type: application/cdni; ptype=redirection-response\n\
    \   {\n     \"http\": {\n       \"sc-status\": 302,\n       \"sc-version\": \"\
    HTTP/1.1\",\n       \"sc-reason\": \"Found\",\n       \"cs-uri\": \"http://www.example.com\"\
    \n       \"sc-(location)\":\n         \"http://sur1.dcdn.example/ucdn/example.com\"\
    ,\n     }\n   }\n"
- title: 4.6.  Cacheability and Scope of Responses
  contents:
  - "4.6.  Cacheability and Scope of Responses\n   RI responses may be cacheable.\
    \  As long as a cached RI response is\n   not stale according to standard HTTP\
    \ Cache-Control or other\n   applicable mechanisms, it may be reused by the uCDN\
    \ in response to\n   User Agent requests without sending another RI request to\
    \ the dCDN.\n   An RI response MUST NOT be reused unless the request from the\
    \ User\n   Agent would generate an identical RI request to the dCDN as the one\n\
    \   that resulted in the cached RI response (except for the c-ip field\n   provided\
    \ that the User Agent's c-ip is covered by the scope in the\n   original RI response,\
    \ as elaborated upon below).\n   Additionally, although RI requests only encode\
    \ a single User Agent\n   request to be redirected, there may be cases where a\
    \ dCDN wishes to\n   indicate to the uCDN that the RI response can be reused for\
    \ other\n   User Agent requests without the uCDN having to make another request\n\
    \   via the RI.  For example, a dCDN may know that it will always select\n   the\
    \ same surrogates for a given set of User Agent IP addresses and in\n   order\
    \ to reduce request volume across the RI or to remove the\n   additional latency\
    \ associated with an RI request, the dCDN may wish\n   to indicate that set of\
    \ User Agent IP addresses to the uCDN in the\n   initial RI response.  This is\
    \ achieved by including an optional scope\n   dictionary in the RI response.\n\
    \   Scope is encoded as a set of key:value pairs within the scope\n   dictionary\
    \ as follows:\n   +---------+--------+-----------+------------------------------------+\n\
    \   | Key     | Value  | Mandatory | Description                        |\n  \
    \ +---------+--------+-----------+------------------------------------+\n   |\
    \ iprange | List   | No        | A List of IP subnets in CIDR       |\n   |  \
    \       | of     |           | notation that this RI response can |\n   |    \
    \     | String |           | be reused for, provided the RI     |\n   |      \
    \   |        |           | response is still considered       |\n   |        \
    \ |        |           | fresh.                             |\n   +---------+--------+-----------+------------------------------------+\n\
    \                                  Table 6\n   If a uCDN has multiple cached responses\
    \ with overlapping scopes and a\n   UA request comes in for which the User Agent's\
    \ IP matches with the IP\n   subnets in multiple of these cached responses, the\
    \ uCDN SHOULD use\n   the most recent cached response when determining the appropriate\
    \ RI\n   response to use.\n   The following is an example of a DNS redirection\
    \ response from\n   Section 4.4.2 that is cacheable by the uCDN for 30 seconds\
    \ and can be\n   returned to any User Agent with an IPv4 address in 198.51.100.0/24.\n\
    \   HTTP/1.1 200 OK\n   Date: Mon, 06 Aug 2012 18:41:38 GMT\n   Content-Type:\
    \ application/cdni; ptype=redirection-response\n   Cache-Control: public, max-age=30\n\
    \   {\n     \"dns\" : {\n       \"rcode\" : 0,\n       \"name\" : \"www.example.com\"\
    ,\n       \"a\" : [\"203.0.113.200\", \"203.0.113.201\"],\n       \"aaaa\" : [\"\
    2001:DB8::C8\", \"2001:DB8::C9\"],\n       \"ttl\" : 60\n     }\n     \"scope\"\
    \ : {\n       \"iprange\" : [\"198.51.100.0/24\"]\n     }\n   }\n   The following\
    \ is an example of an HTTP redirection response from\n   Section 4.5.2 that is\
    \ cacheable by the uCDN for 60 seconds and can be\n   returned to any User Agent\
    \ with an IPv4 address in 198.51.100.0/24.\n   Note: The response to the UA is\
    \ only valid for 30 seconds, whereas\n   the uCDN can cache the RI response for\
    \ 60 seconds.\n   HTTP/1.1 200 OK\n   Date: Mon, 06 Aug 2012 18:41:38 GMT\n  \
    \ Content-Type: application/cdni; ptype=redirection-response\n   Cache-Control:\
    \ public, max-age=60\n   {\n     \"http\": {\n       \"sc-status\": 302,\n   \
    \    \"cs-uri\": \"http://www.example.com\"\n       \"sc-(location)\":\n     \
    \    \"http://sur1.dcdn.example/ucdn/example.com\",\n       \"sc-(cache-control)\"\
    \ : \"public, max-age=30\"\n     }\n     \"scope\" : {\n       \"iprange\" : [\"\
    198.51.100.0/24\"]\n     }\n   }\n"
- title: 4.7.  Error Responses
  contents:
  - "4.7.  Error Responses\n   From a uCDN perspective, there are two types of errors\
    \ that can be\n   the result of the transmission of an RI request to a dCDN:\n\
    \   1.  An HTTP protocol error signaled via an HTTP status code,\n       indicating\
    \ a problem with the reception or parsing of the RI\n       request or the generation\
    \ of the RI response by the dCDN, and\n   2.  An RI-level error specified in an\
    \ RI response message.\n   This section deals with the latter type.  The former\
    \ type is outside\n   the scope of this document.\n   There are numerous reasons\
    \ for a dCDN to be unable to return an\n   affirmative RI response to a uCDN.\
    \  Reasons may include both dCDN\n   internal issues such as capacity problems,\
    \ as well as reasons outside\n   the influence of the dCDN, such as a malformed\
    \ RI request.  To aid\n   with diagnosing the cause of errors, RI responses SHOULD\
    \ include an\n   error dictionary to provide additional information to the uCDN\
    \ as to\n   the reason/cause of the error.  The intention behind the error\n \
    \  dictionary is to aid with either manual or automatic diagnosis of\n   issues.\
    \  The resolution of such issues is outside the scope of this\n   document; this\
    \ document does not specify any consequent actions a\n   uCDN should take upon\
    \ receiving a particular error-code.\n   Error information (if present) is encoded\
    \ as a set of key:value pairs\n   within a JSON-encoded error dictionary as follows:\n\
    \   +------------+---------+-----------+--------------------------------+\n  \
    \ | Key        | Value   | Mandatory | Description                    |\n   +------------+---------+-----------+--------------------------------+\n\
    \   | error-code | Integer | Yes       | A three-digit numeric code     |\n  \
    \ |            |         |           | defined by the server to       |\n   |\
    \            |         |           | indicate the error(s) that     |\n   |  \
    \          |         |           | occurred.                      |\n   |    \
    \        |         |           |                                |\n   | reason\
    \     | String  | No        | A string providing further     |\n   |         \
    \   |         |           | information related to the     |\n   |           \
    \ |         |           | error.                         |\n   +------------+---------+-----------+--------------------------------+\n\
    \                                  Table 7\n   The first digit of the error-code\
    \ defines the class of error.  There\n   are 5 classes of errors distinguished\
    \ by the first digit of the\n   error-code:\n      1xx: Informational (no error):\
    \ The response should not be\n      considered an error by the uCDN, which may\
    \ proceed by redirecting\n      the UA according to the values in the RI response.\
    \  The error-code\n      and accompanying description may be used for informational\n\
    \      purposes, e.g., for logging.\n      2xx: Reserved.\n      3xx: Reserved.\n\
    \      4xx: uCDN error: The dCDN cannot or will not process the request\n    \
    \  due to something that is perceived to be a uCDN error, for\n      example,\
    \ the RI request could not be parsed successfully by the\n      dCDN.  The last\
    \ two-digits may be used to more specifically\n      indicate the source of the\
    \ problem.\n      5xx: dCDN error: Indicates that the dCDN is aware that it has\n\
    \      erred or is incapable of satisfying the RI request for some\n      reason,\
    \ for example, the dCDN was able to parse the RI request but\n      encountered\
    \ an error for some reason.  Examples include the dCDN\n      not being able to\
    \ retrieve the associated metadata or the dCDN\n      being out of capacity.\n\
    \   The following error-codes are defined and maintained by IANA (see\n   Section\
    \ 6).\n   Error-codes with a \"Reason\" of \"<reason>\" do not have a defined\
    \ value\n   for their 'reason'-key.  Depending on the error-code semantics, the\n\
    \   value of this field may be determined dynamically.\n   +------+--------------+---------------------------------------------+\n\
    \   | Code | Reason       | Description                                 |\n  \
    \ +------+--------------+---------------------------------------------+\n   |\
    \ 100  | <reason>     | Generic informational error-code meant for  |\n   |  \
    \    | (see         | carrying a human-readable string            |\n   |    \
    \  | Description) |                                             |\n   |      |\
    \              |                                             |\n   | 400  | <reason>\
    \     | Generic error-code for uCDN errors where    |\n   |      | (see      \
    \   | the dCDN cannot or will not process the     |\n   |      | Description)\
    \ | request due to something that is perceived  |\n   |      |              |\
    \ to be a uCDN error.  The reason field may   |\n   |      |              | be\
    \ used to provide more details about the   |\n   |      |              | source\
    \ of the error.                        |\n   |      |              |         \
    \                                    |\n   | 500  | <reason>     | Generic error-code\
    \ for dCDN errors where    |\n   |      | (see         | the dCDN is aware that\
    \ it has erred or is   |\n   |      | Description) | incapable of satisfying the\
    \ RI request for  |\n   |      |              | some reason.  The reason field\
    \ may be used  |\n   |      |              | to provide more details about the\
    \ source of |\n   |      |              | the error.                         \
    \         |\n   |      |              |                                      \
    \       |\n   | 501  | Unable to    | The dCDN is unable to retrieve the metadata\
    \ |\n   |      | retrieve     | associated with the content requested by    |\n\
    \   |      | metadata     | the UA.  This may indicate a configuration  |\n  \
    \ |      |              | error or that the content requested by the  |\n   |\
    \      |              | UA does not exist.                          |\n   |  \
    \    |              |                                             |\n   | 502\
    \  | Loop         | The dCDN detected a redirection loop (see   |\n   |      |\
    \ detected     | Section 4.8).                               |\n   |      |  \
    \            |                                             |\n   | 503  | Maximum\
    \ hops | The dCDN detected the maximum number of     |\n   |      | exceeded \
    \    | redirection hops exceeding max-hops (see    |\n   |      |            \
    \  | Section 4.8).                               |\n   |      |              |\
    \                                             |\n   | 504  | Out of       | The\
    \ dCDN does not currently have sufficient |\n   |      | capacity     | capacity\
    \ to handle the UA request.          |\n   |      |              |           \
    \                                  |\n   | 505  | Delivery     | The dCDN does\
    \ not support the (set of)      |\n   |      | protocol not | delivery protocols\
    \ indicated in the CDNI    |\n   |      | supported    | Metadata of the content\
    \ requested by the    |\n   |      |              | UA.                      \
    \                   |\n   |      |              |                            \
    \                 |\n   | 506  | Redirection  | The dCDN does not support the\
    \ requested     |\n   |      | protocol not | redirection protocol.  This error-code\
    \ is   |\n   |      | supported    | also used when the RI request has the dns-\
    \  |\n   |      |              | only flag set to True and the dCDN is not   |\n\
    \   |      |              | supported or is not prepared to return an   |\n  \
    \ |      |              | RT of a surrogate directly.                 |\n   +------+--------------+---------------------------------------------+\n\
    \                                  Table 8\n   The following is an example of\
    \ an unsuccessful RI response\n   (dCDN->uCDN) for a DNS-based User Agent request:\n\
    \   HTTP/1.1 500 Internal Server Error\n   Date: Mon, 06 Aug 2012 18:41:38 GMT\n\
    \   Content-Type: application/cdni; ptype=redirection-response\n   Cache-Control:\
    \ private, no-cache\n   {\n     \"error\" : {\n       \"error-code\" : 504,\n\
    \       \"description\" : \"Out of capacity\"\n     }\n   }\n   The following\
    \ is an example of a successful RI response (dCDN->uCDN)\n   for an HTTP-based\
    \ User Agent request containing an error dictionary\n   for informational purposes:\n\
    \   HTTP/1.1 200 OK\n   Date: Mon, 06 Aug 2012 18:41:38 GMT\n   Content-Type:\
    \ application/cdni; ptype=redirection-response\n   Cache-Control: private, no-cache\n\
    \   {\n      \"http\": {\n       \"sc-status\": 302,\n       \"sc-version\": \"\
    HTTP/1.1\",\n       \"sc-reason\": \"Found\",\n       \"cs-uri\": \"http://www.example.com\"\
    \n       \"sc-(location)\":\n         \"http://sur1.dcdn.example/ucdn/example.com\"\
    ,\n      },\n      \"error\" : {\n       \"error-code\" : 100,\n       \"description\"\
    \ :\n         \"This is a human-readable message meant for debugging purposes\"\
    \n     }\n   }\n"
- title: 4.8.  Loop Detection and Prevention
  contents:
  - "4.8.  Loop Detection and Prevention\n   In order to prevent and detect RI request\
    \ loops, each CDN MUST insert\n   its CDN Provider ID into the cdn-path key of\
    \ every RI request it\n   originates or cascades.  When receiving RI requests,\
    \ a dCDN MUST\n   check the cdn-path and reject any RI requests that already contain\n\
    \   the dCDN's Provider ID in the cdn-path.  Transit CDNs MUST NOT\n   propagate\
    \ to any downstream CDNs if the number of CDN Provider IDs in\n   cdn-path (before\
    \ adding its own Provider ID) is equal to or greater\n   than max-hops.\n   The\
    \ CDN Provider ID uniquely identifies each CDN Provider during the\n   course\
    \ of request routing redirection.  It consists of the characters\n   AS followed\
    \ by the CDN Provider's AS number, then a colon (':') and\n   an additional qualifier\
    \ that is used to guarantee uniqueness in case\n   a particular AS has multiple\
    \ independent CDNs deployed; for example,\n   \"AS64496:0\".\n   If a dCDN receives\
    \ an RI request whose cdn-path already contains that\n   dCDN's Provider ID, the\
    \ dCDN MUST send an RI error response that\n   SHOULD include an error-code of\
    \ 502.\n   If a dCDN receives an RI request where the number of CDN Provider IDs\n\
    \   in cdn-path is greater than max-hops, the dCDN MUST send an RI error\n   response\
    \ that SHOULD include an error-code of 503.\n   It should be noted that the loop\
    \ detection and prevention mechanisms\n   described above only cover preventing\
    \ and detecting loops within the\n   RI itself.  Besides loops within the RI itself,\
    \ there is also the\n   possibility of loops in the data plane; for example, if\
    \ the IP\n   address(es) or URI(s) returned in RI responses do not resolve\n \
    \  directly to a surrogate in the final dCDN, there is the possibility\n   that\
    \ a User Agent may be continuously redirected through a loop of\n   CDNs.  The\
    \ specification of solutions to address data-plane request\n   redirection loops\
    \ between CDNs is outside of the scope of this\n   document.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Information passed over the RI could be considered\
    \ personal or\n   sensitive, for example, RI requests contain parts of a User\
    \ Agent's\n   original request and RI responses reveal information about the dCDN's\n\
    \   policy for which surrogates should serve which content/user\n   locations.\n\
    \   The RI interface also provides a mechanism whereby a uCDN could probe\n  \
    \ a dCDN and infer the dCDN's edge topology by making repeated RI\n   requests\
    \ for different content and/or UA IP addresses and correlating\n   the responses\
    \ from the dCDN.  Additionally, the ability for a dCDN to\n   indicate that an\
    \ RI response applies more widely than the original\n   request (via the scope\
    \ dictionary) may significantly reduce the\n   number of RI requests required\
    \ to probe and infer the dCDN's edge\n   topology.\n   The same information could\
    \ be obtained in the absence of the RI\n   interface, but it could be more difficult\
    \ to gather as it would\n   require a distributed set of machines with a range\
    \ of different IP\n   addresses, each making requests directly to the dCDN.  However,\
    \ the\n   RI facilitates easier collection of such information as it enables a\n\
    \   single client to query the dCDN for a redirection/surrogate selection\n  \
    \ on behalf of any UA IP address.\n"
- title: 5.1.  Authentication, Authorization, Confidentiality, and Integrity
  contents:
  - "5.1.  Authentication, Authorization, Confidentiality, and Integrity\n      Protection\n\
    \   An implementation of the CDNI Redirection interface MUST support TLS\n   transport\
    \ as per [RFC2818] and [RFC7230].  The use of TLS for\n   transport of the CDNI\
    \ Redirection interface messages allows the dCDN\n   and uCDN to authenticate\
    \ each other.  Once they have mutually\n   authenticated each other, it allows:\n\
    \   o  The dCDN and uCDN to authorize each other (to ensure they are\n      transmitting/receiving\
    \ CDNI Redirection messages to/from an\n      authorized CDN);\n   o  CDNI Redirection\
    \ interface messages to be transmitted with\n      confidentiality; and\n   o\
    \  The integrity of the CDNI Redirection interface messages to be\n      protected\
    \ during the exchange.\n   In an environment where any such protection is required,\
    \ mutually\n   authenticated encrypted transport MUST be used to ensure\n   confidentiality\
    \ of the redirection information; to do so, TLS MUST be\n   used (including authentication\
    \ of the remote end) by the server side\n   (dCDN) and the client side (uCDN)\
    \ of the CDNI Redirection interface.\n   When TLS is used, the general TLS usage\
    \ guidance in [RFC7525] MUST be\n   followed.\n"
- title: 5.2.  Privacy
  contents:
  - "5.2.  Privacy\n   Information passed over the RI ought to be considered personal\
    \ and\n   sensitive.  In particular, parts of a User Agent's original request,\n\
    \   most notably the UA's IP address and requested URI, are transmitted\n   over\
    \ the RI to the dCDN.  The use of mutually authenticated TLS, as\n   described\
    \ in the previous section, prevents any other party than the\n   authorized dCDN\
    \ from gaining access to this information.\n   Regardless of whether the uCDN\
    \ and dCDN use the RI, a successful\n   redirect from a uCDN to a dCDN will make\
    \ that dCDN aware of the UA's\n   IP address.  As such, the fact that this information\
    \ is transmitted\n   across the RI does not allow the dCDN to learn new information.\
    \  On\n   the other hand, if a uCDN uses the RI to check with multiple\n   candidate\
    \ dCDNs, those candidates that do not end up getting\n   redirected to do obtain\
    \ information regarding end-user IP addresses\n   and requested URIs that they\
    \ would not have if the RI not been used.\n   While it is technically possible\
    \ to mask some information in the RI\n   Request, such as the last bits of the\
    \ UA IP address, it is important\n   to note that this will reduce the effectiveness\
    \ of the RI in certain\n   cases.  CDN deployments need to strike a balance between\
    \ end-user\n   privacy and the features impacted by such masking.  This balance\
    \ is\n   likely to vary from one deployment to another.  As an example, when\n\
    \   the UA and its DNS resolver is behind a Carrier-grade NAT, and the RI\n  \
    \ is used to find an appropriate delivery node behind the same NAT, the\n   full\
    \ IP address might be necessary.  Another potential issue when\n   using IP anonymization\
    \ is that it is no longer possible to correlate\n   an RI Request with a subsequent\
    \ UA request.\n"
- title: 6.  IANA Considerations
  contents:
  - '6.  IANA Considerations

    '
- title: 6.1.  CDNI Payload Type Parameter Registrations
  contents:
  - "6.1.  CDNI Payload Type Parameter Registrations\n   IANA has registered the following\
    \ two new Payload Types in the\n   \"Content Delivery Network Interconnection\
    \ (CDNI) Parameters\" registry\n   for use with the application/cdni MIME media\
    \ type.\n                 +----------------------+---------------+\n         \
    \        | Payload Type         | Specification |\n                 +----------------------+---------------+\n\
    \                 | redirection-request  | RFC 7975      |\n                 |\
    \                      |               |\n                 | redirection-response\
    \ | RFC 7975      |\n                 +----------------------+---------------+\n\
    \                                  Table 9\n"
- title: 6.1.1.  CDNI RI Redirection Request Payload Type
  contents:
  - "6.1.1.  CDNI RI Redirection Request Payload Type\n   Purpose: The purpose of\
    \ this payload type is to distinguish RI\n   request messages.\n   Interface:\
    \ RI\n   Encoding: See Section 4.4.1 and Section 4.5.1\n"
- title: 6.1.2.  CDNI RI Redirection Response Payload Type
  contents:
  - "6.1.2.  CDNI RI Redirection Response Payload Type\n   Purpose: The purpose of\
    \ this payload type is to distinguish RI\n   response messages.\n   Interface:\
    \ RI\n   Encoding: See Section 4.4.2 and Section 4.5.2\n"
- title: 6.2.  RI Error Response Registry
  contents:
  - "6.2.  RI Error Response Registry\n   IANA has created a new \"CDNI RI Error response\
    \ code\" subregistry\n   within the \"Content Delivery Network Interconnection\
    \ (CDNI)\n   Parameters\" registry.  The \"CDNI RI Error response code\" namespace\n\
    \   defines the valid values for the error-code key in RI error\n   responses.\
    \  The CDNI RI Error response code MUST be a three-digit\n   integer.\n   Additions\
    \ to the \"RI Error response registry\" will be made via\n   \"Specification Required\"\
    \ as defined in [RFC5226].\n   The Designated Expert will verify that new error-code\
    \ registrations\n   do not duplicate existing error-code definitions (in name\
    \ or\n   functionality), ensure that the new error-code is in accordance with\n\
    \   the error classes defined in Section 4.7 of this document, prevent\n   gratuitous\
    \ additions to the namespace, and prevent any additions to\n   the namespace that\
    \ would impair the interoperability of CDNI\n   implementations.\n   New registrations\
    \ are required to provide the following information:\n      Code: A three-digit\
    \ numeric error-code, in accordance with the\n      error classes defined in Section\
    \ 4.7 of this document.\n      Reason: A string that provides further information\
    \ related to the\n      error that will be included in the JSON error dictionary\
    \ with the\n      'reason'-key.  Depending on the error-code semantics, the value\
    \ of\n      this field may be determined dynamically.  In that case, the\n   \
    \   registration should set this value to '<reason>' and define its\n      semantics\
    \ in the description field.\n      Description: A brief description of the error-code\
    \ semantics.\n      Specification: Reference to the specification that defines\
    \ the\n      error-code in more detail.\n   The entries in Table 8 are registered\
    \ by this document, with the\n   value of the 'Specification' field set to RFC\
    \ 7975 (this document).\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n   \
    \           Resource Identifier (URI): Generic Syntax\", STD 66,\n           \
    \   RFC 3986, DOI 10.17487/RFC3986, January 2005,\n              <http://www.rfc-editor.org/info/rfc3986>.\n\
    \   [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n        \
    \      Architecture\", RFC 4291, DOI 10.17487/RFC4291, February\n            \
    \  2006, <http://www.rfc-editor.org/info/rfc4291>.\n   [RFC5952]  Kawamura, S.\
    \ and M. Kawashima, \"A Recommendation for IPv6\n              Address Text Representation\"\
    , RFC 5952,\n              DOI 10.17487/RFC5952, August 2010,\n              <http://www.rfc-editor.org/info/rfc5952>.\n\
    \   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n \
    \             Protocol (HTTP/1.1): Message Syntax and Routing\",\n           \
    \   RFC 7230, DOI 10.17487/RFC7230, June 2014,\n              <http://www.rfc-editor.org/info/rfc7230>.\n\
    \   [RFC7159]  Bray, T., Ed., \"The JavaScript Object Notation (JSON) Data\n \
    \             Interchange Format\", RFC 7159, DOI 10.17487/RFC7159, March\n  \
    \            2014, <http://www.rfc-editor.org/info/rfc7159>.\n   [RFC6895]  Eastlake\
    \ 3rd, D., \"Domain Name System (DNS) IANA\n              Considerations\", BCP\
    \ 42, RFC 6895, DOI 10.17487/RFC6895,\n              April 2013, <http://www.rfc-editor.org/info/rfc6895>.\n\
    \   [RFC7493]  Bray, T., Ed., \"The I-JSON Message Format\", RFC 7493,\n     \
    \         DOI 10.17487/RFC7493, March 2015,\n              <http://www.rfc-editor.org/info/rfc7493>.\n\
    \   [RFC7525]  Sheffer, Y., Holz, R., and P. Saint-Andre,\n              \"Recommendations\
    \ for Secure Use of Transport Layer\n              Security (TLS) and Datagram\
    \ Transport Layer Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525,\
    \ May\n              2015, <http://www.rfc-editor.org/info/rfc7525>.\n   [RFC5226]\
    \  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA\
    \ Considerations Section in RFCs\", BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226,\
    \ May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC6707]\
    \  Niven-Jenkins, B., Le Faucheur, F., and N. Bitar, \"Content\n             \
    \ Distribution Network Interconnection (CDNI) Problem\n              Statement\"\
    , RFC 6707, DOI 10.17487/RFC6707, September\n              2012, <http://www.rfc-editor.org/info/rfc6707>.\n\
    \   [RFC2818]  Rescorla, E., \"HTTP Over TLS\", RFC 2818,\n              DOI 10.17487/RFC2818,\
    \ May 2000,\n              <http://www.rfc-editor.org/info/rfc2818>.\n   [RFC5890]\
    \  Klensin, J., \"Internationalized Domain Names for\n              Applications\
    \ (IDNA): Definitions and Document Framework\",\n              RFC 5890, DOI 10.17487/RFC5890,\
    \ August 2010,\n              <http://www.rfc-editor.org/info/rfc5890>.\n   [RTMP]\
    \     Adobe Systems Incorporated, \"Real-Time Messaging Protocol\n           \
    \   (RTMP) specification\", December 2012,\n              <http://www.adobe.com/go/spec_rtmp>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC7337]  Leung, K., Ed. and Y. Lee, Ed., \"\
    Content Distribution\n              Network Interconnection (CDNI) Requirements\"\
    , RFC 7337,\n              DOI 10.17487/RFC7337, August 2014,\n              <http://www.rfc-editor.org/info/rfc7337>.\n\
    \   [RFC7336]  Peterson, L., Davie, B., and R. van Brandenburg, Ed.,\n       \
    \       \"Framework for Content Distribution Network\n              Interconnection\
    \ (CDNI)\", RFC 7336, DOI 10.17487/RFC7336,\n              August 2014, <http://www.rfc-editor.org/info/rfc7336>.\n\
    \   [RFC7736]  Ma, K., \"Content Delivery Network Interconnection (CDNI)\n   \
    \           Media Type Registration\", RFC 7736, DOI 10.17487/RFC7736,\n     \
    \         December 2015, <http://www.rfc-editor.org/info/rfc7736>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Taesang Choi, Francois Le\
    \ Faucheur,\n   Matt Miller, Scott Wainner, and Kevin J. Ma for their valuable\n\
    \   comments and input to this document.\n"
- title: Contributors
  contents:
  - "Contributors\n   The following persons have participated as co-authors to this\n\
    \   document:\n   Wang Danhua\n   Huawei\n   Email: wangdanhua@huawei.com\n  \
    \ He Xiaoyan\n   Huawei\n   Email: hexiaoyan@huawei.com\n   Ge Chen\n   China\
    \ Telecom\n   Email: cheng@gsta.com\n   Ni Wei\n   China Mobile\n   Email: niwei@chinamobile.com\n\
    \   Yunfei Zhang\n   Email: hishigh@gmail.com\n   Spencer Dawkins\n   Huawei\n\
    \   Email: spencer@wonderhamster.org\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ben Niven-Jenkins (editor)\n   Nokia\n   3 Ely Road\n\
    \   Milton, Cambridge  CB24 6DD\n   United Kingdom\n   Email: ben.niven-jenkins@nokia.com\n\
    \   Ray van Brandenburg (editor)\n   TNO\n   Anna van Buerenplein 1\n   The Hague\
    \  2595DA\n   The Netherlands\n   Phone: +31-88-866-7000\n   Email: ray.vanbrandenburg@tno.nl\n"
