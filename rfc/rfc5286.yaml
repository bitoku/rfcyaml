- contents:
  - '     Basic Specification for IP Fast Reroute: Loop-Free Alternates

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   This document describes the use of loop-free alternates to provide\n
    \  local protection for unicast traffic in pure IP and MPLS/LDP networks\n   in
    the event of a single failure, whether link, node, or shared risk\n   link group
    (SRLG).  The goal of this technology is to reduce the\n   packet loss that happens
    while routers converge after a topology\n   change due to a failure.  Rapid failure
    repair is achieved through\n   use of precalculated backup next-hops that are
    loop-free and safe to\n   use until the distributed network convergence process
    completes.\n   This simple approach does not require any support from other routers.\n
    \  The extent to which this goal can be met by this specification is\n   dependent
    on the topology of the network.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n     1.1.  Failure Scenarios  . . . . . . . . . . . . . . . .
    . . . .  5\n     1.2.  Requirement Language . . . . . . . . . . . . . . . . .
    . .  8\n   2.  Applicability of Described Mechanisms  . . . . . . . . . . . .
    \ 8\n   3.  Alternate Next-Hop Calculation . . . . . . . . . . . . . . . .  9\n
    \    3.1.  Basic Loop-Free Condition  . . . . . . . . . . . . . . . . 10\n     3.2.
    \ Node-Protecting Alternate Next-Hops  . . . . . . . . . . . 10\n     3.3.  Broadcast
    and Non-Broadcast Multi-Access (NBMA) Links  . . 11\n     3.4.  ECMP and Alternates
    \ . . . . . . . . . . . . . . . . . . . 12\n     3.5.  Interactions with IS-IS
    Overload, RFC 3137, and Costed\n           Out Links  . . . . . . . . . . . .
    . . . . . . . . . . . . 13\n       3.5.1.  Interactions with IS-IS Link Attributes
    \ . . . . . . . 14\n     3.6.  Selection Procedure  . . . . . . . . . . . . .
    . . . . . . 14\n     3.7.  LFA Types and Trade-Offs . . . . . . . . . . . . .
    . . . . 18\n     3.8.  A Simplification: Per-Next-Hop LFAs  . . . . . . . . .
    . . 19\n   4.  Using an Alternate . . . . . . . . . . . . . . . . . . . . . .
    20\n     4.1.  Terminating Use of Alternate . . . . . . . . . . . . . . . 20\n
    \  5.  Requirements on LDP Mode . . . . . . . . . . . . . . . . . . . 22\n   6.
    \ Routing Aspects  . . . . . . . . . . . . . . . . . . . . . . . 22\n     6.1.
    \ Multi-Homed Prefixes . . . . . . . . . . . . . . . . . . . 22\n     6.2.  IS-IS
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 24\n     6.3.  OSPF . .
    . . . . . . . . . . . . . . . . . . . . . . . . . 24\n       6.3.1.  OSPF External
    Routing  . . . . . . . . . . . . . . . . 24\n       6.3.2.  OSPF Multi-Topology
    \ . . . . . . . . . . . . . . . . . 25\n     6.4.  BGP Next-Hop Synchronization
    . . . . . . . . . . . . . . . 25\n     6.5.  Multicast Considerations . . . .
    . . . . . . . . . . . . . 25\n   7.  Security Considerations  . . . . . . . .
    . . . . . . . . . . . 25\n   8.  Acknowledgements . . . . . . . . . . . . . .
    . . . . . . . . . 26\n   9.  References . . . . . . . . . . . . . . . . . . .
    . . . . . . . 26\n     9.1.  Normative References . . . . . . . . . . . . . .
    . . . . . 26\n     9.2.  Informative References . . . . . . . . . . . . . . .
    . . . 26\n   Appendix A.  OSPF Example Where LFA Based on Local Area\n                Topology
    Is Insufficient  . . . . . . . . . . . . . . 27\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Applications for interactive multimedia services such as
    Voice over\n   IP (VoIP) and pseudowires can be very sensitive to traffic loss,
    such\n   as occurs when a link or router in the network fails.  A router's\n   convergence
    time is generally on the order of hundreds of\n   milliseconds; the application
    traffic may be sensitive to losses\n   greater than tens of milliseconds.\n   As
    discussed in [FRAMEWORK], minimizing traffic loss requires a\n   mechanism for
    the router adjacent to a failure to rapidly invoke a\n   repair path, which is
    minimally affected by any subsequent re-\n   convergence.  This specification
    describes such a mechanism that\n   allows a router whose local link has failed
    to forward traffic to a\n   pre-computed alternate until the router installs the
    new primary\n   next-hops based upon the changed network topology.  The terminology\n
    \  used in this specification is given in [FRAMEWORK].  The described\n   mechanism
    assumes that routing in the network is performed using a\n   link-state routing
    protocol -- OSPF [RFC2328] [RFC2740] [RFC5340] or\n   IS-IS [RFC1195] [RFC2966]
    (for IPv4 or IPv6).  The mechanism also\n   assumes that both the primary path
    and the alternate path are in the\n   same routing area.\n   When a local link
    fails, a router currently must signal the event to\n   its neighbors via the IGP,
    recompute new primary next-hops for all\n   affected prefixes, and only then install
    those new primary next-hops\n   into the forwarding plane.  Until the new primary
    next-hops are\n   installed, traffic directed towards the affected prefixes is\n
    \  discarded.  This process can take hundreds of milliseconds.\n                          <--\n
    \                              +-----+\n                        /------|  S  |--\\\n
    \                      /       +-----+   \\\n                      / 5               8
    \\\n                     /                     \\\n                   +-----+
    \               +-----+\n                   |  E  |                | N_1 |\n                   +-----+
    \               +-----+\n                      \\                     /\n                  \\
    \   \\  4              3 /  /\n                   \\|   \\                 / |/\n
    \                  -+    \\    +-----+    /  +-\n                          \\---|
    \ D  |---/\n                              +-----+\n                         Figure
    1: Basic Topology\n   The goal of IP Fast Reroute (IPFRR) is to reduce failure
    reaction\n   time to 10s of milliseconds by using a pre-computed alternate next-\n
    \  hop, in the event that the currently selected primary next-hop fails,\n   so
    that the alternate can be rapidly used when the failure is\n   detected.  A network
    with this feature experiences less traffic loss\n   and less micro-looping of
    packets than a network without IPFRR.\n   There are cases where traffic loss is
    still a possibility since IPFRR\n   coverage varies, but in the worst possible
    situation a network with\n   IPFRR is equivalent with respect to traffic convergence
    to a network\n   without IPFRR.\n   To clarify the behavior of IP Fast Reroute,
    consider the simple\n   topology in Figure 1.  When router S computes its shortest
    path to\n   router D, router S determines to use the link to router E as its\n
    \  primary next-hop.  Without IP Fast Reroute, that link is the only\n   next-hop
    that router S computes to reach D.  With IP Fast Reroute, S\n   also looks for
    an alternate next-hop to use.  In this example, S\n   would determine that it
    could send traffic destined to D by using the\n   link to router N_1 and therefore
    S would install the link to N_1 as\n   its alternate next-hop.  At some later
    time, the link between router\n   S and router E could fail.  When that link fails,
    S and E will be the\n   first to detect it.  On detecting the failure, S will
    stop sending\n   traffic destined for D towards E via the failed link, and instead\n
    \  send the traffic to S's pre-computed alternate next-hop, which is the\n   link
    to N_1, until a new SPF is run and its results are installed.\n   As with the
    primary next-hop, an alternate next-hop is computed for\n   each destination.
    \ The process of computing an alternate next-hop\n   does not alter the primary
    next-hop computed via a standard SPF.\n   If in the example of Figure 1, the link
    cost from N_1 to D increased\n   to 30 from 3, then N_1 would not be a loop-free
    alternate, because\n   the cost of the path from N_1 to D via S would be 17 while
    the cost\n   from N_1 directly to D would be 30.  In real networks, we may often\n
    \  face this situation.  The existence of a suitable loop-free alternate\n   next-hop
    is dependent on the topology and the nature of the failure\n   for which the alternate
    is calculated.\n   This specification uses the terminology introduced in [FRAMEWORK].\n
    \  In particular, it uses Distance_opt(X,Y), abbreviated to D_opt(X,Y),\n   to
    indicate the shortest distance from X to Y.  S is used to indicate\n   the calculating
    router.  N_i is a neighbor of S; N is used as an\n   abbreviation when only one
    neighbor is being discussed.  D is the\n   destination under consideration.\n
    \  A neighbor N can provide a loop-free alternate (LFA) if and only if\n        Distance_opt(N,
    D) < Distance_opt(N, S) + Distance_opt(S, D)\n                     Inequality
    1: Loop-Free Criterion\n   A subset of loop-free alternates are downstream paths
    that must meet\n   a more restrictive condition that is applicable to more complex\n
    \  failure scenarios:\n                 Distance_opt(N, D) < Distance_opt(S, D)\n
    \                 Inequality 2: Downstream Path Criterion\n"
  - contents:
    - "1.1.  Failure Scenarios\n   The alternate next-hop can protect against a single
      link failure, a\n   single node failure, failure of one or more links within
      a shared\n   risk link group, or a combination of these.  Whenever a failure\n
      \  occurs that is more extensive than what the alternate was intended to\n   protect,
      there is the possibility of temporarily looping traffic\n   (note again, that
      such a loop would only last until the next complete\n   SPF calculation).  The
      example where a node fails when the alternate\n   provided only link protection
      is illustrated below.  If unexpected\n   simultaneous failures occur, then micro-looping
      may occur since the\n   alternates are not pre-computed to avoid the set of
      failed links.\n   If only link protection is provided and the node fails, it
      is\n   possible for traffic using the alternates to experience micro-\n   looping.
      \ This issue is illustrated in Figure 2.  If Link(S->E)\n   fails, then the
      link-protecting alternate via N will work correctly.\n   However, if router
      E fails, then both S and N will detect a failure\n   and switch to their alternates.
      \ In this example, that would cause S\n   to redirect the traffic to N and N
      to redirect the traffic to S and\n   thus causing a forwarding loop.  Such a
      scenario can arise because\n   the key assumption, that all other routers in
      the network are\n   forwarding based upon the shortest path, is violated because
      of a\n   second simultaneous correlated failure -- another link connected to\n
      \  the same primary neighbor.  If there are not other protection\n   mechanisms
      to handle node failure, a node failure is still a concern\n   when only using
      link-protecting LFAs.\n                                 <@@@\n                           @@@>\n
      \                   +-----+       +-----+\n                    |  S  |-------|
      \ N  |\n                    +-+---+   5   +-----+\n                      |              |\n
      \                     | 5          4 |  |\n                   |  |              |
      \\|/\n                  \\|/ |              |\n                      |    +-----+
      \  |\n                      +----|  E  |---+\n                           +--+--+\n
      \                             |\n                              |\n                              |
      10\n                              |\n                           +--+--+\n                           |
      \ D  |\n                           +-----+\n     Figure 2: Link-Protecting Alternates
      Causing Loop on Node Failure\n   Micro-looping of traffic via the alternates
      caused when a more\n   extensive failure than planned for occurs can be prevented
      via\n   selection of only downstream paths as alternates.  A micro-loop due\n
      \  to the use of alternates can be avoided by using downstream paths\n   because
      each succeeding router in the path to the destination must be\n   closer to
      the destination than its predecessor (according to the\n   topology prior to
      the failures).  Although use of downstream paths\n   ensures that the micro-looping
      via alternates does not occur, such a\n   restriction can severely limit the
      coverage of alternates.  In\n   Figure 2, S would be able to use N as a downstream
      alternate, but N\n   could not use S; therefore, N would have no alternate and
      would\n   discard the traffic, thus avoiding the micro-loop.\n   As shown above,
      the use of either a node-protecting LFA (described in\n   Section 3.2) or a
      downstream path provides protection against micro-\n   looping in the event
      of node failure.  There are topologies where\n   there may be either a node-protecting
      LFA, a downstream path, both,\n   or neither.  A node may select either a node-protecting
      LFA or a\n   downstream path without risk of causing micro-loops in the event
      of\n   neighbor node failure.  While a link-and-node-protecting LFA\n   guarantees
      protection against either link or node failure, a\n   downstream path provides
      protection only against a link failure and\n   may or may not provide protection
      against a node failure depending on\n   the protection available at the downstream
      node, but it cannot cause\n   a micro-loop.  For example, in Figure 2, if S
      uses N as a downstream\n   path, although no looping can occur, the traffic
      will not be\n   protected in the event of the failure of node E because N has
      no\n   viable repair path, and it will simply discard the packet.  However,\n
      \  if N had a link-and-node-protecting LFA or downstream path via some\n   other
      path (not shown), then the repair may succeed.\n   Since the functionality of
      link-and-node-protecting LFAs is greater\n   than that of link-protecting downstream
      paths, a router SHOULD select\n   a link-and-node-protecting LFA over a link-protecting
      downstream\n   path.  If there are any destinations for which a link-and-node-\n
      \  protecting LFA is not available, then by definition the path to all\n   of
      those destinations from any neighbor of the computing router (S)\n   must be
      through the node (E) being protected (otherwise there would\n   be a node protecting
      LFA for that destination).  Consequently, if\n   there exists a downstream path
      to the protected node as destination,\n   then that downstream path may be used
      for all those destinations for\n   which a link-and-node-protecting LFA is not
      available; the existence\n   of a downstream path can be determined by a single
      check of the\n   condition Distance_opt(N, E) < Distance_opt(S, E).\n   It may
      be desirable to find an alternate that can protect against\n   other correlated
      failures (of which node failure is a specific\n   instance).  In the general
      case, these are handled by shared risk\n   link groups (SRLGs) where any links
      in the network can belong to the\n   SRLG.  General SRLGs may add unacceptably
      to the computational\n   complexity of finding a loop-free alternate.\n   However,
      a sub-category of SRLGs is of interest and can be applied\n   only during the
      selection of an acceptable alternate.  This sub-\n   category is to express
      correlated failures of links that are\n   connected to the same router, for
      example, if there are multiple\n   logical sub-interfaces on the same physical
      interface, such as VLANs\n   on an Ethernet interface, if multiple interfaces
      use the same\n   physical port because of channelization, or if multiple interfaces\n
      \  share a correlated failure because they are on the same line-card.\n   This
      sub-category of SRLGs will be referred to as local-SRLGs.  A\n   local-SRLG
      has all of its member links with one end connected to the\n   same router.  Thus,
      router S could select a loop-free alternate that\n   does not use a link in
      the same local-SRLG as the primary next-hop.\n   The failure of local-SRLGs
      belonging to E can be protected against\n   via node protection, i.e., picking
      a loop-free node-protecting\n   alternate.\n   Where SRLG protection is provided,
      it is in the context of the\n   particular OSPF or IS-IS area, whose topology
      is used in the SPF\n   computations to compute the loop-free alternates.  If
      an SRLG\n   contains links in multiple areas, then separate SRLG-protecting\n
      \  alternates would be required in each area that is traversed by the\n   affected
      traffic.\n"
    title: 1.1.  Failure Scenarios
  - contents:
    - "1.2.  Requirement Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      RFC 2119 [RFC2119].\n"
    title: 1.2.  Requirement Language
  title: 1.  Introduction
- contents:
  - "2.  Applicability of Described Mechanisms\n   IP Fast Reroute mechanisms described
    in this memo cover intra-domain\n   routing only, with OSPF [RFC2328] [RFC2740]
    [RFC5340] or IS-IS\n   [RFC1195] [RFC2966] as the IGP.  Specifically, Fast Reroute
    for BGP\n   inter-domain routing is not part of this specification.\n   Certain
    aspects of OSPF inter-area routing behavior explained in\n   Section 6.3 and Appendix
    A impact the ability of the router\n   calculating the backup next-hops to assess
    traffic trajectories.  In\n   order to avoid micro-looping and ensure required
    coverage, certain\n   constraints are applied to multi-area OSPF networks:\n   a.
    \ Loop-free alternates should not be used in the backbone area if\n       there
    are any virtual links configured unless, for each transit\n       area, there
    is a full mesh of virtual links between all Area\n       Border Routers (ABRs)
    in that area.  Loop-free alternates may be\n       used in non-backbone areas
    regardless of whether there are\n       virtual links configured.\n   b.  Loop-free
    alternates should not be used for inter-area routes in\n       an area that contains
    more than one alternate ABR [RFC3509].\n   c.  Loop-free alternates should not
    be used for AS External routes or\n       Autonomous System Border Router (ASBR)
    routes in a non-backbone\n       area of a network where there exists an ABR that
    is announced as\n       an ASBR in multiple non-backbone areas and there exists
    another\n       ABR that is in at least two of the same non-backbone areas.\n
    \  d.  Loop-free alternates should not be used in a non-backbone area of\n       a
    network for AS External routes where an AS External prefix is\n       advertised
    with the same type of external metric by multiple\n       ASBRs, which are in
    different non-backbone areas, with a\n       forwarding address of 0.0.0.0 or
    by one or more ASBRs with\n       forwarding addresses in multiple non-backbone
    areas when an ABR\n       exists simultaneously in two or more of those non-backbone
    areas.\n"
  title: 2.  Applicability of Described Mechanisms
- contents:
  - "3.  Alternate Next-Hop Calculation\n   In addition to the set of primary next-hops
    obtained through a\n   shortest path tree (SPT) computation that is part of standard
    link-\n   state routing functionality, routers supporting IP Fast Reroute also\n
    \  calculate a set of backup next-hops that are engaged when a local\n   failure
    occurs.  These backup next-hops are calculated to provide the\n   required type
    of protection (i.e., link-protecting and/or node-\n   protecting) and to guarantee
    that when the expected failure occurs,\n   forwarding traffic through them will
    not result in a loop.  Such\n   next-hops are called loop-free alternates or LFAs
    throughout this\n   specification.\n   In general, to be able to calculate the
    set of LFAs for a specific\n   destination D, a router needs to know the following
    basic pieces of\n   information:\n   o  Shortest-path distance from the calculating
    router to the\n      destination (Distance_opt(S, D))\n   o  Shortest-path distance
    from the router's IGP neighbors to the\n      destination (Distance_opt(N, D))\n
    \  o  Shortest path distance from the router's IGP neighbors to itself\n      (Distance_opt(N,
    S))\n   o  Distance_opt(S, D) is normally available from the regular SPF\n      calculation
    performed by the link-state routing protocols.\n      Distance_opt(N, D) and Distance_opt(N,
    S) can be obtained by\n      performing additional SPF calculations from the perspective
    of\n      each IGP neighbor (i.e., considering the neighbor's vertex as the\n
    \     root of the SPT--called SPT(N) hereafter--rather than the\n      calculating
    router's one, called SPT(S)).\n   This specification defines a form of SRLG protection
    limited to those\n   SRLGs that include a link to which the calculating router
    is directly\n   connected.  Only that set of SRLGs could cause a local failure;
    the\n   calculating router only computes alternates to handle a local\n   failure.
    \ Information about local link SRLG membership is manually\n   configured.  Information
    about remote link SRLG membership may be\n   dynamically obtained using [RFC4205]
    or [RFC4203].  Define\n   SRLG_local(S) to be the set of SRLGs that include a
    link to which the\n   calculating router S is directly connected Only SRLG_local(S)
    is of\n   interest during the calculation, but the calculating router must\n   correctly
    handle changes to SRLG_local(S) triggered by local link\n   SRLG membership changes.\n
    \  In order to choose among all available LFAs that provide required\n   SRLG
    protection for a given destination, the calculating router needs\n   to track
    the set of SRLGs in SRLG_local(S) that the path through a\n   specific IGP neighbor
    involves.  To do so, each node D in the network\n   topology is associated with
    SRLG_set(N, D), which is the set of SRLGs\n   that would be crossed if traffic
    to D was forwarded through N.  To\n   calculate this set, the router initializes
    SRLG_set(N, N) for each of\n   its IGP neighbors to be empty.  During the SPT(N)
    calculation, when a\n   new vertex V is added to the SPT, its SRLG_set(N, V) is
    set to the\n   union of SRLG sets associated with its parents, and the SRLG sets
    in\n   SRLG_local(S) that are associated with the links from V's parents to\n
    \  V.  The union of the set of SRLGs associated with a candidate\n   alternate
    next-hop and the SRLG_set(N, D) for the neighbor reached\n   via that candidate
    next-hop is used to determine SRLG protection.\n   The following sections provide
    information required for calculation\n   of LFAs.  Sections 3.1 through 3.4 define
    different types of LFA\n   conditions.  Section 3.5 describes constraints imposed
    by the IS-IS\n   overload and OSPF stub router functionality.  Section 3.6 defines
    the\n   summarized algorithm for LFA calculation using the definitions in the\n
    \  previous sections.\n"
  - contents:
    - "3.1.  Basic Loop-Free Condition\n   Alternate next hops used by implementations
      following this\n   specification MUST conform to at least the loop-freeness
      condition\n   stated above in Inequality 1.  This condition guarantees that\n
      \  forwarding traffic to an LFA will not result in a loop after a link\n   failure.\n
      \  Further conditions may be applied when determining link-protecting\n   and/or
      node-protecting alternate next-hops as described in Sections\n   3.2 and 3.3.\n"
    title: 3.1.  Basic Loop-Free Condition
  - contents:
    - "3.2.  Node-Protecting Alternate Next-Hops\n   For an alternate next-hop N to
      protect against node failure of a\n   primary neighbor E for destination D,
      N must be loop-free with\n   respect to both E and D.  In other words, N's path
      to D must not go\n   through E.  This is the case if Inequality 3 is true, where
      N is the\n   neighbor providing a loop-free alternate.\n         Distance_opt(N,
      D) < Distance_opt(N, E) + Distance_opt(E, D)\n     Inequality 3: Criteria for
      a Node-Protecting Loop-Free Alternate\n   If Distance_opt(N,D) = Distance_opt(N,
      E) + Distance_opt(E, D), it is\n   possible that N has equal-cost paths and
      one of those could provide\n   protection against E's node failure.  However,
      it is equally possible\n   that one of N's paths goes through E, and the calculating
      router has\n   no way to influence N's decision to use it.  Therefore, it SHOULD
      be\n   assumed that an alternate next-hop does not offer node protection if\n
      \  Inequality 3 is not met.\n"
    title: 3.2.  Node-Protecting Alternate Next-Hops
  - contents:
    - "3.3.  Broadcast and Non-Broadcast Multi-Access (NBMA) Links\n   Verification
      of the link-protection property of a next-hop in the\n   case of a broadcast
      link is more elaborate than for a point-to-point\n   link.  This is because
      a broadcast link is represented as a pseudo-\n   node with zero-cost links connecting
      it to other nodes.\n   Because failure of an interface attached to a broadcast
      segment may\n   mean loss of connectivity of the whole segment, the condition\n
      \  described for broadcast link protection is pessimistic and requires\n   that
      the alternate is loop-free with regard to the pseudo-node.\n   Consider the
      example in Figure 3.\n                       +-----+    15\n                       |
      \ S  |--------\n                       +-----+       |\n                          |
      5        |\n                          |          |\n                          |
      0        |\n                        /----\\ 0 5 +-----+\n                        |
      PN |-----|  N  |\n                        \\----/     +-----+\n                           |
      0        |\n                           |          | 8\n                           |
      5        |\n                        +-----+ 5  +-----+\n                        |
      \ E  |----|  D  |\n                        +-----+    +-----+\n           Figure
      3: Loop-Free Alternate That Is Link-Protecting\n   In Figure 3, N offers a loop-free
      alternate that is link-protecting.\n   If the primary next-hop uses a broadcast
      link, then an alternate\n   SHOULD be loop-free with respect to that link's
      pseudo-node (PN) to\n   provide link protection.  This requirement is described
      in Inequality\n   4 below.\n              D_opt(N, D) < D_opt(N, PN) + D_opt(PN,
      D)\n   Inequality 4: Loop-Free Link-Protecting Criterion for Broadcast Links\n
      \  Because the shortest path from the pseudo-node goes through E, if a\n   loop-free
      alternate from a neighbor N is node-protecting, the\n   alternate will also
      be link-protecting unless the router S can only\n   reach the alternate neighbor
      N via the same pseudo-node.  Since this\n   is the only case for which a node-protecting
      LFA is not link-\n   protecting, this implies that for point-to-point interfaces,
      an LFA\n   that is node-protecting is always link-protecting.  Because S can\n
      \  direct the traffic away from the shortest path to use the alternate\n   N,
      traffic might pass through the same broadcast link as it would\n   when S sent
      the traffic to the primary E.  Thus, an LFA from N that\n   is node-protecting
      is not automatically link-protecting for a\n   broadcast or NBMA link.\n   To
      obtain link protection, it is necessary both that the path from\n   the selected
      alternate next-hop does not traverse the link of\n   interest and that the link
      used from S to reach that alternate next-\n   hop is not the link of interest.
      \ The latter can only occur with non-\n   point-to-point links.  Therefore,
      if the primary next-hop is across a\n   broadcast or NBMA interface, it is necessary
      to consider link\n   protection during the alternate selection.  To clarify,
      consider the\n   topology in Figure 3.  For N to provide link protection, it
      is first\n   necessary that N's shortest path to D does not traverse the pseudo-\n
      \  node PN.  Second, it is necessary that the alternate next-hop\n   selected
      by S does not traverse PN.  In this example, S's shortest\n   path to N is via
      the pseudo-node.  Thus, to obtain link protection, S\n   must find a next-hop
      to N (the point-to-point link from S to N in\n   this example) that avoids the
      pseudo-node PN.\n   Similar consideration of the link from S to the selected
      alternate\n   next-hop as well as the path from the selected alternate next-hop
      is\n   also necessary for SRLG protection.  S's shortest path to the\n   selected
      neighbor N may not be acceptable as an alternate next-hop to\n   provide SRLG
      protection, even if the path from N to D can provide\n   SRLG protection.\n"
    title: 3.3.  Broadcast and Non-Broadcast Multi-Access (NBMA) Links
  - contents:
    - "3.4.  ECMP and Alternates\n   With Equal-Cost Multi-Path (ECMP), a prefix may
      have multiple primary\n   next-hops that are used to forward traffic.  When
      a particular\n   primary next-hop fails, alternate next-hops should be used
      to\n   preserve the traffic.  These alternate next-hops may themselves also\n
      \  be primary next-hops, but need not be.  Other primary next-hops are\n   not
      guaranteed to provide protection against the failure scenarios of\n   concern.\n
      \                          20 L1      L3  3\n                       [ N ]----[
      S ]--------[ E3 ]\n                         |        |            |\n                         |
      \     5 | L2         |\n                      20 |        |            |\n                         |
      \   ---------        | 2\n                         |  5 |       | 5      |\n
      \                        |  [ E1 ]  [ E2 ]-----|\n                         |
      \    |       |\n                         | 10  |    10 |\n                         |---[
      A ]   [ B ]\n                              |        |\n                            2
      |--[ D ]-| 2\n     Figure 4: ECMP Where Primary Next-Hops Provide Limited Protection\n
      \  In Figure 4 S has three primary next-hops to reach D; these are L2 to\n   E1,
      L2 to E2, and L3 to E3.  The primary next-hop L2 to E1 can obtain\n   link and
      node protection from L3 to E3, which is one of the other\n   primary next-hops;
      L2 to E1 cannot obtain link protection from the\n   other primary next-hop L2
      to E2.  Similarly, the primary next-hop L2\n   to E2 can only get node protection
      from L2 to E1 and can only get\n   link protection from L3 to E3.  The third
      primary next-hop L3 to E3\n   can obtain link and node protection from L2 to
      E1 and from L2 to E2.\n   It is possible for both the primary next-hop L2 to
      E2 and the primary\n   next-hop L2 to E1 to obtain an alternate next-hop that
      provides both\n   link and node protection by using L1.\n   Alternate next-hops
      are determined for each primary next-hop\n   separately.  As with alternate
      selection in the non-ECMP case, these\n   alternate next-hops should maximize
      the coverage of the failure\n   cases.\n"
    title: 3.4.  ECMP and Alternates
  - contents:
    - "3.5.  Interactions with IS-IS Overload, RFC 3137, and Costed Out Links\n   As
      described in [RFC3137], there are cases where it is desirable not\n   to have
      a router used as a transit node.  For those cases, it is also\n   desirable
      not to have the router used on an alternate path.\n   For computing an alternate,
      a router MUST NOT use an alternate next-\n   hop that is along a link whose
      cost or reverse cost is LSInfinity\n   (for OSPF) or the maximum cost (for IS-IS)
      or that has the overload\n   bit set (for IS-IS).  For a broadcast link, the
      reverse cost\n   associated with a potential alternate next-hop is the cost
      towards\n   the pseudo-node advertised by the next-hop router.  For point-to-\n
      \  point links, if a specific link from the next-hop router cannot be\n   associated
      with a particular link, then the reverse cost considered\n   is that of the
      minimum cost link from the next-hop router back to S.\n   In the case of OSPF,
      if all links from router S to a neighbor N_i\n   have a reverse cost of LSInfinity,
      then router S MUST NOT use N_i as\n   an alternate.\n   Similarly in the case
      of IS-IS, if N_i has the overload bit set, then\n   S MUST NOT consider using
      N_i as an alternate.\n   This preserves the desired behavior of diverting traffic
      away from a\n   router that is following [RFC3137], and it also preserves the
      desired\n   behavior when an operator sets the cost of a link to LSInfinity
      for\n   maintenance that is not permitting traffic across that link unless\n
      \  there is no other path.\n   If a link or router that is costed out was the
      only possible\n   alternate to protect traffic from a particular router S to
      a\n   particular destination, then there should be no alternate provided\n   for
      protection.\n"
    - contents:
      - "3.5.1.  Interactions with IS-IS Link Attributes\n   [RFC5029] describes several
        flags whose interactions with LFAs need\n   to be defined.  A router SHOULD
        NOT specify the \"local protection\n   available\" flag as a result of having
        LFAs.  A router SHOULD NOT use\n   an alternate next-hop that is along a link
        for which the link has\n   been advertised with the attribute \"link excluded
        from local\n   protection path\" or with the attribute \"local maintenance
        required\".\n"
      title: 3.5.1.  Interactions with IS-IS Link Attributes
    title: 3.5.  Interactions with IS-IS Overload, RFC 3137, and Costed Out Links
  - contents:
    - "3.6.  Selection Procedure\n   A router supporting this specification SHOULD
      attempt to select at\n   least one loop-free alternate next-hop for each primary
      next-hop used\n   for a given prefix.  A router MAY decide to not use an available\n
      \  loop-free alternate next-hop.  A reason for such a decision might be\n   that
      the loop-free alternate next-hop does not provide protection for\n   the failure
      scenario of interest.\n   The alternate selection should maximize the coverage
      of the failure\n   cases.\n   When calculating alternate next-hops, the calculating
      router S\n   applies the following rules.\n   1.  S SHOULD select a loop-free
      node-protecting alternate next-hop,\n       if one is available.  If no loop-free
      node-protecting alternate\n       is available, then S MAY select a loop-free
      link-protecting\n       alternate.\n   2.  If S has a choice between a loop-free
      link-and-node-protecting\n       alternate and a loop-free node-protecting alternate
      that is not\n       link-protecting, S SHOULD select a loop-free link-and-node-\n
      \      protecting alternate.  This can occur as explained in\n       Section
      3.3.\n   3.  If S has multiple primary next-hops, then S SHOULD select as a\n
      \      loop-free alternate either one of the other primary next-hops or\n       a
      loop-free node-protecting alternate if available.  If no loop-\n       free
      node-protecting alternate is available and no other primary\n       next-hop
      can provide link-protection, then S SHOULD select a\n       loop-free link-protecting
      alternate.\n   4.  Implementations SHOULD support a mode where other primary
      next-\n       hops satisfying the basic loop-free condition and providing at\n
      \      least link or node protection are preferred over any non-primary\n       alternates.
      \ This mode is provided to allow the administrator to\n       preserve traffic
      patterns based on regular ECMP behavior.\n   5.  Implementations considering
      SRLGs MAY use SRLG protection to\n       determine that a node-protecting or
      link-protecting alternate is\n       not available for use.\n   Following the
      above rules maximizes the level of protection and use\n   of primary (ECMP)
      next-hops.\n   Each next-hop is associated with a set of non-mutually-exclusive\n
      \  characteristics based on whether it is used as a primary next-hop to\n   a
      particular destination D, and the type of protection it can provide\n   relative
      to a specific primary next-hop E:\n   Primary Path -  The next-hop is used by
      S as primary.\n   Loop-Free Node-Protecting Alternate -  This next-hop satisfies\n
      \     Inequality 1 and Inequality 3.  The path avoids S, S's primary\n      neighbor
      E, and the link from S to E.\n   Loop-Free Link-Protecting Alternate -  This
      next-hop satisfies\n      Inequality 1 but not Inequality 3.  If the primary
      next-hop uses a\n      broadcast link, then this next-hop satisfies Inequality
      4.\n   An alternate path may also provide none, some, or complete SRLG\n   protection
      as well as node and link or link protection.  For\n   instance, a link may belong
      to two SRLGs G1 and G2.  The alternate\n   path might avoid other links in G1
      but not G2, in which case the\n   alternate would only provide partial SRLG
      protection.\n   Below is an algorithm that can be used to calculate loop-free\n
      \  alternate next-hops.  The algorithm is given for informational\n   purposes,
      and implementations are free to use any other algorithm as\n   long as it satisfies
      the rules described above.\n   The following procedure describes how to select
      an alternate next-\n   hop.  The procedure is described to determine alternate
      next-hops to\n   use to reach each router in the topology.  Prefixes that are\n
      \  advertised by a single router can use the alternate next-hop computed\n   for
      the router to which they are attached.  The same procedure can be\n   used to
      reach a prefix that is advertised by more than one router\n   when the logical
      topological transformation described in Section 6.1\n   is used.\n   S is the
      computing router.  S has neighbors N_1 to N_j.  A candidate\n   next-hop is
      indicated by (outgoing link, neighbor) and the outgoing\n   link must be bidirectionally
      connected, as is determined by the IGP.\n   The candidate next-hops of S are
      enumerated as H_1 through H_k.\n   Recall that S may have multiple next-hops
      over different interfaces\n   to a neighbor.  H_i.link refers to the outgoing
      link of that next-hop\n   and H_i.neighbor refers to the neighbor of that next-hop.\n
      \  For a particular destination router D, let S have already computed\n   D_opt(S,
      D), and for each neighbor N_i, D_opt(N_i, D), D_opt(N_i, S),\n   and D_opt(N_i,
      N_j), the distance from N_i to each other neighbor\n   N_j, and the set of SRLGs
      traversed by the path D_opt(N_i, D).  S\n   should follow the below procedure
      for every primary next-hop selected\n   to reach D.  This set of primary next-hops
      is represented P_1 to P_p.\n   This procedure finds the alternate next-hop(s)
      for P_i.\n   First, initialize the alternate information for P_i as follows:\n
      \     P_i.alt_next_hops = {}\n      P_i.alt_type = NONE\n      P_i.alt_link-protect
      = FALSE\n      P_i.alt_node-protect = FALSE\n      P_i.alt_srlg-protect = {}\n
      \  For each candidate next-hop H_h,\n   1.   Initialize variables as follows:\n
      \          cand_type = NONE\n           cand_link-protect = FALSE\n           cand_node-protect
      = FALSE\n           cand_srlg-protect = {}\n   2.   If H_h is P_i, skip it and
      continue to the next candidate next-\n        hop.\n   3.   If H_h.link is administratively
      allowed to be used as an\n        alternate,\n           and the cost of H_h.link
      is less than the maximum,\n           and the reverse cost of H_h is less than
      the maximum,\n           and H_h.neighbor is not overloaded (for IS-IS),\n           and
      H_h.link is bidirectional,\n        then H_h can be considered as an alternate.
      \ Otherwise, skip it\n        and continue to the next candidate next-hop.\n
      \  4.   If D_opt( H_h.neighbor, D) >= D_opt( H_h.neighbor, S) + D_opt(S,\n        D),
      then H_h is not loop-free.  Skip it and continue to the next\n        candidate
      next-hop.\n   5.   cand_type = LOOP-FREE.\n   6.   If H_h is a primary next-hop,
      set cand_type to PRIMARY.\n   7.   If H_h.link is not P_i.link, set cand_link-protect
      to TRUE.\n   8.   If D_opt(H_h.neighbor, D) < D_opt(H_h.neighbor, P_i.neighbor)
      +\n        D_opt(P_i.neighbor, D), set cand_node-protect to TRUE.\n   9.   If
      the router considers SRLGs, then set the cand_srlg-protect to\n        the set
      of SRLGs traversed on the path from S via P_i.link to\n        P_i.neighbor.
      \ Remove the set of SRLGs to which H_h belongs from\n        cand_srlg-protect.
      \ Remove from cand_srlg-protect the set of\n        SRLGs traversed on the path
      from H_h.neighbor to D.  Now\n        cand_srlg-protect holds the set of SRLGs
      to which P_i belongs\n        and that are not traversed on the path from S
      via H_h to D.\n   10.  If cand_type is PRIMARY, the router prefers other primary
      next-\n        hops for use as the alternate, and the P_i.alt_type is not\n
      \       PRIMARY, goto Step 20.\n   11.  If cand_type is not PRIMARY, P_i.alt_type
      is PRIMARY, and the\n        router prefers other primary next-hops for use
      as the alternate,\n        then continue to the next candidate next-hop\n   12.
      \ If cand_node-protect is TRUE and P_i.alt_node-protect is FALSE,\n        goto
      Paragraph 20.\n   13.  If cand_link-protect is TRUE and P_i.alt_link-protect
      is FALSE,\n        goto Step 20.\n   14.  If cand_srlg-protect has a better
      set of SRLGs than\n        P_i.alt_srlg-protect, goto Step 20.\n   15.  If cand_srlg-protect
      is different from P_i.alt_srlg-protect,\n        then select between H_h and
      P_i.alt_next_hops based upon\n        distance, IP addresses, or any router-local
      tie-breaker.  If H_h\n        is preferred, then goto Step 20.  If P_i.alt_next_hops
      is\n        preferred, skip H_h and continue to the next candidate next-hop.\n
      \  16.  If D_opt(H_h.neighbor, D) < D_opt(P_i.neighbor, D) and\n        D_opt(P_i.alt_next_hops,
      D) >= D_opt(P_i.neighbor, D), then H_h\n        is a downstream alternate and
      P_i.alt_next_hops is simply an\n        LFA.  Prefer H_h and goto Step 20.\n
      \  17.  Based upon the alternate types, the alternate distances, IP\n        addresses,
      or other tie-breakers, decide if H_h is preferred to\n        P_i.alt_next_hops.
      \ If so, goto Step 20.\n   18.  Decide if P_i.alt_next_hops is preferred to
      H_h.  If so, then\n        skip H_h and continue to the next candidate next-hop.\n
      \  19.  Add H_h into P_i.alt_next_hops.  Set P_i.alt_type to the better\n        type
      of H_h.alt_type and P_i.alt_type.  Continue to the next\n        candidate next-hop.\n
      \  20.  Replace the P_i alternate next-hop set with H_h as follows:\n           P_i.alt_next_hops
      = {H_h}\n           P_i.alt_type = cand_type\n           P_i.alt_link-protect
      = cand_link-protect\n           P_i.alt_node-protect = cand_node-protect\n           P_i.alt_srlg-protect
      = cand_srlg-protect\n        Continue to the next candidate next-hop.\n"
    title: 3.6.  Selection Procedure
  - contents:
    - "3.7.  LFA Types and Trade-Offs\n   LFAs can provide different amounts of protection,
      and the decision\n   about which type to prefer is dependent upon network topology
      and\n   other techniques in use in the network.  This section describes the\n
      \  different protection levels and the trade-offs associated with each.\n   1.
      \ Primary Next-hop: When there are equal-cost primary next-hops,\n       using
      one as an alternate is guaranteed not to cause micro-loops\n       involving
      S.  Traffic flows across the paths that the network\n       will converge to,
      but congestion may be experienced on the\n       primary paths since traffic
      is sent across fewer.  All primary\n       next-hops are downstream paths.\n
      \  2.  Downstream Paths: A downstream path, unlike an LFA, is guaranteed\n       not
      to cause a micro-loop involving S regardless of the actual\n       failure detected.
      \ However, the expected coverage of such\n       alternates in a network is
      expected to be poor.  All downstream\n       paths are LFAs.\n   3.  LFA: An
      LFA can have good coverage of a network, depending on\n       topology.  However,
      it is possible to get micro-loops involving S\n       if an unprotected failure
      occurs (e.g., a node fails when the LFA\n       only was link-protecting).\n
      \  The different types of protection are abbreviated as LP (link-\n   protecting),
      NP (node-protecting), and SP (SRLG-protecting).\n   a.  LP, NP, and SP: If such
      an alternate exists, it gives protection\n       against all failures.\n   b.
      \ LP and NP only: Many networks may handle SRLG failures via\n       another
      method or may focus on node and link failures as being\n       more common.\n
      \  c.  LP only: A network may handle node failures via a high-\n       availability
      technique and be concerned primarily about\n       protecting the more common
      link failure case.\n   d.  NP only: These only exist on interfaces that aren't
      point-to-\n       point.  If link protection is handled in a different layer,
      then\n       an NP alternate may be acceptable.\n"
    title: 3.7.  LFA Types and Trade-Offs
  - contents:
    - "3.8.  A Simplification: Per-Next-Hop LFAs\n   It is possible to simplify the
      computation and use of LFAs when\n   solely link protection is desired by considering
      and computing only\n   one link-protecting LFA for each next-hop connected to
      the router.\n   All prefixes that use that next-hop as a primary will use the
      LFA\n   computed for that next-hop as its LFA.\n   Even a prefix with multiple
      primary next-hops will have each primary\n   next-hop protected individually
      by the primary next-hop's associated\n   LFA.  That associated LFA might or
      might not be another of the\n   primary next-hops of the prefix.\n   This simplification
      may reduce coverage in a network.  In addition to\n   limiting protection for
      multi-homed prefixes (see Section 6.1), the\n   computation per next-hop may
      also not find an LFA when one could be\n   found for some of the prefixes that
      use that next-hop.\n   For example, consider Figure 4 where S has three ECMP
      next-hops, E1,\n   E2, and E3 to reach D.  For the prefix D, E3 can give link
      protection\n   for the next-hops E1 and E2; E1 and E2 can give link protection
      for\n   the next-hops E3.  However, if one uses this simplification to\n   compute
      LFAs for E1, E2, and E3 individually, there is no link-\n   protecting LFA for
      E1.  E3 and E2 can protect each other.\n"
    title: '3.8.  A Simplification: Per-Next-Hop LFAs'
  title: 3.  Alternate Next-Hop Calculation
- contents:
  - "4.  Using an Alternate\n   If an alternate next-hop is available, the router
    redirects traffic\n   to the alternate next-hop in case of a primary next-hop
    failure as\n   follows.\n   When a next-hop failure is detected via a local interface
    failure or\n   other failure detection mechanisms (see [FRAMEWORK]), the router\n
    \  SHOULD:\n   1.  Remove the primary next-hop associated with the failure.\n
    \  2.  Install the loop-free alternate calculated for the failed next-\n       hop
    if it is not already installed (e.g., the alternate is also a\n       primary
    next-hop).\n   Note that the router MAY remove other next-hops if it believes
    (via\n   SRLG analysis) that they may have been affected by the same failure,\n
    \  even if it is not visible at the time of failure detection.\n   The alternate
    next-hop MUST be used only for traffic types that are\n   routed according to
    the shortest path.  Multicast traffic is\n   specifically out of scope for this
    specification.\n"
  - contents:
    - "4.1.  Terminating Use of Alternate\n   A router MUST limit the amount of time
      an alternate next-hop is used\n   after the primary next-hop has become unavailable.
      \ This ensures that\n   the router will start using the new primary next-hops.
      \ It ensures\n   that all possible transient conditions are removed and the
      network\n   converges according to the deployed routing protocol.\n   There
      are techniques available to handle the micro-forwarding loops\n   that can occur
      in a networking during convergence.\n   A router that implements [MICROLOOP]
      SHOULD follow the rules given\n   there for terminating the use of an alternate.\n
      \  A router that implements [ORDERED-FIB] SHOULD follow the rules given\n   there
      for terminating the use of an alternate.\n   It is desirable to avoid micro-forwarding
      loops involving S.  An\n   example illustrating the problem is given in Figure
      5.  If the link\n   from S to E fails, S will use N1 as an alternate and S will
      compute\n   N2 as the new primary next-hop to reach D.  If S starts using N2
      as\n   soon as S can compute and install its new primary, it is probable\n   that
      N2 will not have yet installed its new primary next-hop.  This\n   would cause
      traffic to loop and be dropped until N2 has installed the\n   new topology.
      \ This can be avoided by S delaying its installation and\n   leaving traffic
      on the alternate next-hop.\n                          +-----+\n                          |
      \ N2 |--------   |\n                          +-----+   1   |  \\|/\n                              |
      \        |\n                              |     +-----+    @@>  +-----+\n                              |
      \    |  S  |---------|  N1 |\n                           10 |     +-----+   10
      \   +-----+\n                              |        |               |\n                              |
      \     1 |    |          |\n                              |        |   \\|/    10
      \  |\n                              |     +-----+            |  |\n                              |
      \    |  E  |            | \\|/\n                              |     +-----+
      \           |\n                              |        |               |\n                              |
      \     1 |  |            |\n                              |        | \\|/           |\n
      \                             |    +-----+             |\n                              |----|
      \ D  |--------------\n                                   +-----+\n      Figure
      5: Example Where Continued Use of Alternate Is Desirable\n   This is an example
      of a case where the new primary is not a loop-free\n   alternate before the
      failure and therefore may have been forwarding\n   traffic through S.  This
      will occur when the path via a previously\n   upstream node is shorter than
      the path via a loop-free alternate\n   neighbor.  In these cases, it is useful
      to give sufficient time to\n   ensure that the new primary neighbor and other
      nodes on the new\n   primary path have switched to the new route.\n   If the
      newly selected primary was loop-free before the failure, then\n   it is safe
      to switch to that new primary immediately; the new primary\n   wasn't dependent
      on the failure and therefore its path will not have\n   changed.\n   Given that
      there is an alternate providing appropriate protection and\n   while the assumption
      of a single failure holds, it is safe to delay\n   the installation of the new
      primaries; this will not create\n   forwarding loops because the alternate's
      path to the destination is\n   known to not go via S or the failed element and
      will therefore not be\n   affected by the failure.\n   An implementation SHOULD
      continue to use the alternate next-hops for\n   packet forwarding even after
      the new routing information is available\n   based on the new network topology.
      \ The use of the alternate next-\n   hops for packet forwarding SHOULD terminate:\n
      \  a.  if the new primary next-hop was loop-free prior to the topology\n       change,
      or\n   b.  if a configured hold-down, which represents a worst-case bound on\n
      \      the length of the network convergence transition, has expired, or\n   c.
      \ if notification of an unrelated topological change in the network\n       is
      received.\n"
    title: 4.1.  Terminating Use of Alternate
  title: 4.  Using an Alternate
- contents:
  - "5.  Requirements on LDP Mode\n   Since LDP [RFC5036] traffic will follow the
    path specified by the\n   IGP, it is also possible for the LDP traffic to follow
    the loop-free\n   alternates indicated by the IGP.  To do so, it is necessary
    for LDP\n   to have the appropriate labels available for the alternate so that\n
    \  the appropriate out-segments can be installed in the forwarding plane\n   before
    the failure occurs.\n   This means that a Label Switching Router (LSR) running
    LDP must\n   distribute its labels for the Forwarding Equivalence Classes (FECs)\n
    \  it can provide to all its neighbors, regardless of whether or not\n   they
    are upstream.  Additionally, LDP must be acting in liberal label\n   retention
    mode so that the labels that correspond to neighbors that\n   aren't currently
    the primary neighbor are stored.  Similarly, LDP\n   should be in downstream unsolicited
    mode, so that the labels for the\n   FEC are distributed other than along the
    SPT.\n   If these requirements are met, then LDP can use the loop-free\n   alternates
    without requiring any targeted sessions or signaling\n   extensions for this purpose.\n"
  title: 5.  Requirements on LDP Mode
- contents:
  - '6.  Routing Aspects

    '
  - contents:
    - "6.1.  Multi-Homed Prefixes\n   An SPF-like computation is run for each topology,
      which corresponds\n   to a particular OSPF area or IS-IS level.  The IGP needs
      to determine\n   loop-free alternates to multi-homed routes.  Multi-homed routes
      occur\n   for routes obtained from outside the routing domain by multiple\n
      \  routers, for subnets on links where the subnet is announced from\n   multiple
      ends of the link, and for routes advertised by multiple\n   routers to provide
      resiliency.\n   Figure 6 demonstrates such a topology.  In this example, the
      shortest\n   path to reach the prefix p is via E.  The prefix p will have the
      link\n   to E as its primary next-hop.  If the alternate next-hop for the\n
      \  prefix p is simply inherited from the router advertising it on the\n   shortest
      path to p, then the prefix p's alternate next-hop would be\n   the link to C.
      \ This would provide link protection, but not the node\n   protection that is
      possible via A.\n                      5   +---+  8   +---+  5  +---+\n                    ------|
      S |------| A |-----| B |\n                    |     +---+      +---+     +---+\n
      \                   |       |                    |\n                    |     5
      |                  5 |\n                    |       |                    |\n
      \                 +---+ 5 +---+   5       7    +---+\n                  | C
      |---| E |------ p -------| F |\n                  +---+   +---+                +---+\n
      \                      Figure 6: Multi-Homed Prefix\n   To determine the best
      protection possible, the prefix p can be\n   treated in the SPF computations
      as a node with unidirectional links\n   to it from those routers that have advertised
      the prefix.  Such a\n   node need never have its links explored, as it has no
      out-going\n   links.\n   If there exist multiple multi-homed prefixes that share
      the same\n   connectivity and the difference in metrics to those routers, then
      a\n   single node can be used to represent the set.  For instance, if in\n   Figure
      6 there were another prefix X that was connected to E with a\n   metric of 1
      and to F with a metric of 3, then that prefix X could use\n   the same alternate
      next-hop as was computed for prefix p.\n   A router SHOULD compute the alternate
      next-hop for an IGP multi-homed\n   prefix by considering alternate paths via
      all routers that have\n   announced that prefix.\n   In all cases, a router
      MAY safely simplify the multi-homed prefix\n   (MHP) calculation by assuming
      that the MHP is solely attached to the\n   router that was its pre-failure optimal
      point of attachment.\n   However, this may result in a prefix not being considered
      repairable,\n   when the full computation would show that a repair was possible.\n"
    title: 6.1.  Multi-Homed Prefixes
  - contents:
    - "6.2.  IS-IS\n   The applicability and interactions of LFAs with multi-topology
      IS-IS\n   [RFC5120] is out of scope for this specification.\n"
    title: 6.2.  IS-IS
  - contents:
    - "6.3.  OSPF\n   OSPF introduces certain complications because it is possible
      for the\n   traffic path to exit an area and then re-enter that area.  This
      can\n   occur whenever a router considers the same route from multiple areas.\n
      \  There are several cases where issues such as this can occur.  They\n   happen
      when another area permits a shorter path to connect two ABRs\n   than is available
      in the area where the LFA has been computed.  To\n   clarify, an example topology
      is given in Appendix A.\n   a.  Virtual Links: These allow paths to leave the
      backbone area and\n       traverse the transit area.  The path provided via
      the transit\n       area can exit via any ABR.  The path taken is not the shortest\n
      \      path determined by doing an SPF in the backbone area.\n   b.  Alternate
      ABR [RFC3509]: When an ABR is not connected to the\n       backbone, it considers
      the inter-area summaries from multiple\n       areas.  The ABR A may determine
      to use area 2 but that path could\n       traverse another alternate ABR B that
      determines to use area 1.\n       This can lead to scenarios similar to that
      illustrated in\n       Figure 7.\n   c.  ASBR Summaries: An ASBR may itself
      be an ABR and can be announced\n       into multiple areas.  This presents other
      ABRs with a decision as\n       to which area to use.  This is the example illustrated
      in\n       Figure 7.\n   d.  AS External Prefixes: A prefix may be advertised
      by multiple\n       ASBRs in different areas and/or with multiple forwarding\n
      \      addresses that are in different areas, which are connected via at\n       least
      one common ABR.  This presents such ABRs with a decision as\n       to which
      area to use to reach the prefix.\n   Loop-free alternates should not be used
      in an area where one of the\n   above issues affects that area.\n"
    - contents:
      - "6.3.1.  OSPF External Routing\n   When a forwarding address is set in an
        OSPF AS-external Link State\n   Advertisement (LSA), all routers in the network
        calculate their next-\n   hops for the external prefix by doing a lookup for
        the forwarding\n   address in the routing table, rather than using the next-hops\n
        \  calculated for the ASBR.  In this case, the alternate next-hops\n   SHOULD
        be computed by selecting among the alternate paths to the\n   forwarding link(s)
        instead of among alternate paths to the ASBR.\n"
      title: 6.3.1.  OSPF External Routing
    - contents:
      - "6.3.2.  OSPF Multi-Topology\n   The applicability and interactions of LFAs
        with multi-topology OSPF\n   [RFC4915] [MT-OSPFv3] is out of scope for this
        specification.\n"
      title: 6.3.2.  OSPF Multi-Topology
    title: 6.3.  OSPF
  - contents:
    - "6.4.  BGP Next-Hop Synchronization\n   Typically, BGP prefixes are advertised
      with the AS exit router's\n   router-id as the BGP next-hop, and AS exit routers
      are reached by\n   means of IGP routes.  BGP resolves its advertised next-hop
      to the\n   immediate next-hop by potential recursive lookups in the routing\n
      \  database.  IP Fast Reroute computes the alternate next-hops to all\n   IGP
      destinations, which include alternate next-hops to the AS exit\n   router's
      router-id.  BGP simply inherits the alternate next-hop from\n   IGP.  The BGP
      decision process is unaltered; BGP continues to use the\n   IGP optimal distance
      to find the nearest exit router.  Multicast BGP\n   (MBGP) routes do not need
      to copy the alternate next-hops.\n   It is possible to provide ASBR protection
      if BGP selected a set of\n   BGP next-hops and allowed the IGP to determine
      the primary and\n   alternate next-hops as if the BGP route were a multi-homed
      prefix.\n   This is for future study.\n"
    title: 6.4.  BGP Next-Hop Synchronization
  - contents:
    - "6.5.  Multicast Considerations\n   Multicast traffic is out of scope for this
      specification of IP Fast\n   Reroute.  The alternate next-hops SHOULD NOT be
      used for multicast\n   Reverse Path Forwarding (RPF) checks.\n"
    title: 6.5.  Multicast Considerations
  title: 6.  Routing Aspects
- contents:
  - "7.  Security Considerations\n   The mechanism described in this document does
    not modify any routing\n   protocol messages, and hence no new threats related
    to packet\n   modifications or replay attacks are introduced.  Traffic to certain\n
    \  destinations can be temporarily routed via next-hop routers that\n   would
    not be used with the same topology change if this mechanism\n   wasn't employed.
    \ However, these next-hop routers can be used anyway\n   when a different topological
    change occurs, and hence this can't be\n   viewed as a new security threat.\n
    \  In LDP, the wider distribution of FEC label information is still to\n   neighbors
    with whom a trusted LDP session has been established.  This\n   wider distribution
    and the recommendation of using liberal label\n   retention mode are believed
    to have no significant security impact.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  Acknowledgements\n   The authors would like to thank Joel Halpern, Mike Shand,
    Stewart\n   Bryant, and Stefano Previdi for their assistance and useful review.\n"
  title: 8.  Acknowledgements
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC2119]      Bradner, S., \"Key words for
      use in RFCs to Indicate\n                  Requirement Levels\", BCP 14, RFC
      2119, March 1997.\n   [RFC2328]      Moy, J., \"OSPF Version 2\", STD 54, RFC
      2328,\n                  April 1998.\n   [RFC2740]      Coltun, R., Ferguson,
      D., and J. Moy, \"OSPF for IPv6\",\n                  RFC 2740, December 1999.\n
      \  [RFC5036]      Andersson, L., Minei, I., and B. Thomas, \"LDP\n                  Specification\",
      RFC 5036, October 2007.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [FRAMEWORK]    Shand, M. and S. Bryant, \"IP
      Fast Reroute Framework\",\n                  Work in Progress, February 2008.\n
      \  [MICROLOOP]    Zinin, A., \"Analysis and Minimization of Microloops in\n
      \                 Link-state Routing Protocols\", Work in Progress,\n                  October
      2005.\n   [MT-OSPFv3]    Mirtorabi, S. and A. Roy, \"Multi-topology routing
      in\n                  OSPFv3 (MT-OSPFv3)\", Work in Progress, July 2007.\n   [ORDERED-FIB]
      \ Francois, P., \"Loop-free convergence using oFIB\", Work\n                  in
      Progress, February 2008.\n   [RFC1195]      Callon, R., \"Use of OSI IS-IS for
      routing in TCP/IP\n                  and dual environments\", RFC 1195, December
      1990.\n   [RFC2966]      Li, T., Przygienda, T., and H. Smit, \"Domain-wide\n
      \                 Prefix Distribution with Two-Level IS-IS\", RFC 2966,\n                  October
      2000.\n   [RFC3137]      Retana, A., Nguyen, L., White, R., Zinin, A., and D.\n
      \                 McPherson, \"OSPF Stub Router Advertisement\", RFC 3137,\n
      \                 June 2001.\n   [RFC3509]      Zinin, A., Lindem, A., and D.
      Yeung, \"Alternative\n                  Implementations of OSPF Area Border
      Routers\",\n                  RFC 3509, April 2003.\n   [RFC4203]      Kompella,
      K. and Y. Rekhter, \"OSPF Extensions in\n                  Support of Generalized
      Multi-Protocol Label Switching\n                  (GMPLS)\", RFC 4203, October
      2005.\n   [RFC4205]      Kompella, K. and Y. Rekhter, \"Intermediate System
      to\n                  Intermediate System (IS-IS) Extensions in Support of\n
      \                 Generalized Multi-Protocol Label Switching (GMPLS)\",\n                  RFC
      4205, October 2005.\n   [RFC4915]      Psenak, P., Mirtorabi, S., Roy, A., Nguyen,
      L., and P.\n                  Pillay-Esnault, \"Multi-Topology (MT) Routing
      in OSPF\",\n                  RFC 4915, June 2007.\n   [RFC5029]      Vasseur,
      JP. and S. Previdi, \"Definition of an IS-IS\n                  Link Attribute
      Sub-TLV\", RFC 5029, September 2007.\n   [RFC5120]      Przygienda, T., Shen,
      N., and N. Sheth, \"M-ISIS: Multi\n                  Topology (MT) Routing in
      Intermediate System to\n                  Intermediate Systems (IS-ISs)\", RFC
      5120,\n                  February 2008.\n   [RFC5340]      Ferguson, D., Moy,
      J., and A. Lindem, \"OSPF for IPv6\",\n                  RFC 5340, July 2008.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Appendix A.  OSPF Example Where LFA Based on Local Area Topology Is\n             Insufficient\n
    \  This appendix provides an example scenario where the local area\n   topology
    does not suffice to determine that an LFA is available.  As\n   described in Section
    6.3, one problem scenario is for ASBR summaries\n   where the ASBR is available
    in two areas via intra-area routes and\n   there is at least one ABR or alternate
    ABR that is in both areas.\n   The following Figure 7 illustrates this case.\n
    \                              5\n                     [ F ]-----------[ C ]\n
    \                      |               |\n                       |               |
    5\n                    20 |          5    |     1\n                       |   [
    N ]-----[ A ]*****[ F ]\n                       |     |         #         *\n
    \                      |  40 |         # 50      *  2\n                       |
    \    |    5    #    2    *\n                       |   [ S ]-----[ B ]*****[ G
    ]\n                       |     |         *\n                       |   5 |         *
    15\n                       |     |         *\n                       |   [ E ]
    \    [ H ]\n                       |     |         *\n                       |
    \  5 |         * 10**\n                       |     |         *\n                       |---[
    X ]----[ ASBR ]\n                                  5\n                       ----
    \ Link in Area 1\n                       ****  Link in Area 2\n                       ####
    \ Link in Backbone Area 0\n      Figure 7: Topology with Multi-Area ASBR Causing
    Area Transiting\n   In Figure 7, the ASBR is also an ABR and is announced into
    both area\n   1 and area 2.  A and B are both ABRs that are also connected to
    the\n   backbone area.  S determines that N can provide a loop-free alternate\n
    \  to reach the ASBR.  N's path goes via A.  A also sees an intra-area\n   route
    to ASBR via area 2; the cost of the path in area 2 is 30, which\n   is less than
    35, the cost of the path in area 1.  Therefore, A uses\n   the path from area
    2 and directs traffic to F.  The path from F in\n   area 2 goes to B.  B is also
    an ABR and learns the ASBR from both\n   areas 1 and area 2; B's path via area
    1 is shorter (cost 20) than B's\n   path via area 2 (cost 25).  Therefore, B uses
    the path from area 1\n   that connects to S.\n"
  title: Appendix A.  OSPF Example Where LFA Based on Local Area Topology Is
- contents:
  - "Authors' Addresses\n   Alia K. Atlas (editor)\n   BT\n   EMail: alia.atlas@bt.com\n
    \  Alex Zinin (editor)\n   Alcatel-Lucent\n   750D Chai Chee Rd, #06-06\n   Technopark@ChaiChee\n
    \  Singapore 469004\n   EMail: alex.zinin@alcatel-lucent.com\n   Raveendra Torvi\n
    \  FutureWei Technologies Inc.\n   1700 Alma Dr. Suite 100\n   Plano, TX  75075\n
    \  USA\n   EMail: traveendra@huawei.com\n   Gagan Choudhury\n   AT&T\n   200 Laurel
    Avenue, Room D5-3C21\n   Middletown, NJ  07748\n   USA\n   Phone: +1 732 420-3721\n
    \  EMail: gchoudhury@att.com\n   Christian Martin\n   iPath Technologies\n   EMail:
    chris@ipath.net\n   Brent Imhoff\n   Juniper Networks\n   1194 North Mathilda\n
    \  Sunnyvale, CA  94089\n   USA\n   Phone: +1 314 378 2571\n   EMail: bimhoff@planetspork.com\n
    \  Don Fedyk\n   Nortel Networks\n   600 Technology Park\n   Billerica, MA  01821\n
    \  USA\n   Phone: +1 978 288 3041\n   EMail: dwfedyk@nortelnetworks.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
