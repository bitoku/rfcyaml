- contents:
  - "                 The Definitions of Managed Objects for\n                   the
    IP Network Control Protocol of\n                      the Point-to-Point Protocol\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for
    the Internet\n   community, and requests discussion and suggestions for improvements.\n
    \  Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"
    for the standardization state and status of this protocol.\n   Distribution of
    this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in TCP/IP-based internets.\n   In
    particular, it describes managed objects used for managing the IP\n   Network
    Control Protocol on subnetwork interfaces using the family of\n   Point-to-Point
    Protocols [8, 9, 10, 11, & 12].\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. The Network Management Framework ......................
    \   1\n   2. Objects ...............................................    2\n   2.1
    Format of Definitions ................................    2\n   3. Overview ..............................................
    \   2\n   3.1 Object Selection Criteria ............................    2\n   3.2
    Structure of the PPP .................................    2\n   3.3 MIB Groups
    ...........................................    3\n   4. Definitions ...........................................
    \   4\n   5. Acknowledgements ......................................    8\n   6.
    Security Considerations ...............................    8\n   7. References
    ............................................    8\n   8. Author's Address ......................................
    \   9\n"
  title: Table of Contents
- contents:
  - "1.  The Network Management Framework\n   The Internet-standard Network Management
    Framework consists of three\n   components.  They are:\n      STD 16/RFC 1155
    which defines the SMI, the mechanisms used for\n      describing and naming objects
    for the purpose of management.  STD\n      16/RFC 1212 defines a more concise
    description mechanism, which is\n      wholly consistent with the SMI.\n      STD
    17/RFC 1213 which defines MIB-II, the core set of managed\n      objects for the
    Internet suite of protocols.\n      STD 15/RFC 1157 which defines the SNMP, the
    protocol used for\n      network access to managed objects.\n   The Framework
    permits new objects to be defined for the purpose of\n   experimentation and evaluation.\n"
  title: 1.  The Network Management Framework
- contents:
  - "2.  Objects\n   Managed objects are accessed via a virtual information store,
    termed\n   the Management Information Base or MIB.  Objects in the MIB are\n   defined
    using the subset of Abstract Syntax Notation One (ASN.1) [3]\n   defined in the
    SMI.  In particular, each object type is named by an\n   OBJECT IDENTIFIER, an
    administratively assigned name.  The object\n   type together with an object instance
    serves to uniquely identify a\n   specific instantiation of the object.  For human
    convenience, we\n   often use a textual string, termed the descriptor, to refer
    to the\n   object type.\n"
  title: 2.  Objects
- contents:
  - "2.1.  Format of Definitions\n   Section 4 contains the specification of all object
    types contained in\n   this MIB module.  The object types are defined using the
    conventions\n   defined in the SMI, as amended by the extensions specified in
    [5,6].\n"
  title: 2.1.  Format of Definitions
- contents:
  - '3.  Overview

    '
  title: 3.  Overview
- contents:
  - "3.1.  Object Selection Criteria\n   To be consistent with IAB directives and
    good engineering practice,\n   an explicit attempt was made to keep this MIB as
    simple as possible.\n   This was accomplished by applying the following criteria
    to objects\n   proposed for inclusion:\n      (1)  Require objects be essential
    for either fault or\n           configuration management.  In particular, objects
    for\n           which the sole purpose was to debug implementations were\n           explicitly
    excluded from the MIB.\n      (2)  Consider evidence of current use and/or utility.\n
    \     (3)  Limit the total number of objects.\n      (4)  Exclude objects which
    are simply derivable from others in\n           this or other MIBs.\n"
  title: 3.1.  Object Selection Criteria
- contents:
  - "3.2.  Structure of the PPP\n   This section describes the basic model of PPP
    used in developing the\n   PPP MIB. This information should be useful to the implementor
    in\n   understanding some of the basic design decisions of the MIB.\n   The PPP
    is not one single protocol but a large family of protocols.\n   Each of these
    is, in itself, a fairly complex protocol.  The PPP\n   protocols may be divided
    into three rough categories:\n   Control Protocols\n      The Control Protocols
    are used to control the operation of the\n      PPP. The Control Protocols include
    the Link Control Protocol\n      (LCP), the Password Authentication Protocol (PAP),
    the Link\n      Quality Report (LQR), and the Challenge Handshake Authentication\n
    \     Protocol (CHAP).\n   Network Protocols\n      The Network Protocols are
    used to move the network traffic over\n      the PPP interface.  A Network Protocol
    encapsulates the datagrams\n      of a specific higher-layer protocol that is
    using the PPP as a\n      data link.  Note that within the context of PPP, the
    term \"Network\n      Protocol\" does not imply an OSI Layer-3 protocol; for instance,\n
    \     there is a Bridging network protocol.\n   Network Control Protocols (NCPs)\n
    \     The NCPs are used to control the operation of the Network\n      Protocols.
    Generally, each Network Protocol has its own Network\n      Control Protocol;
    thus, the IP Network Protocol has its IP Control\n      Protocol, the Bridging
    Network Protocol has its Bridging Network\n      Control Protocol and so on.\n
    \  This document specifies the objects used in managing one of these\n   protocols,
    namely the IP Network Control Protocol.\n"
  title: 3.2.  Structure of the PPP
- contents:
  - "3.3.  MIB Groups\n   Objects in this MIB are arranged into several MIB groups.
    \ Each group\n   is organized as a set of related objects.\n   These groups are
    the basic unit of conformance: if the semantics of a\n   group are applicable
    to an implementation then all objects in the\n   group must be implemented.\n
    \  The PPP MIB is organized into several MIB Groups, including, but not\n   limited
    to, the following groups:\n          o The PPP Link Group\n          o The PPP
    LQR Group\n          o The PPP LQR Extensions Group\n          o The PPP IP Group\n
    \         o The PPP Bridge Group\n          o The PPP Security Group\n   This
    document specifies the following group:\n   The PPP IP Group\n      The PPP IP
    Group contains configuration, status, and control\n      variables that apply
    to the operation of IP over PPP.\n      Implementation of this group is mandatory
    for all implementations\n      of PPP that support IP over PPP.\n"
  title: 3.3.  MIB Groups
- contents:
  - "4.  Definitions\n          PPP-IP-NCP-MIB DEFINITIONS ::= BEGIN\n          IMPORTS\n
    \              Counter\n                    FROM RFC1155-SMI\n               ifIndex\n
    \                   FROM RFC1213-MIB\n               OBJECT-TYPE\n                    FROM
    RFC-1212\n               ppp\n                    FROM PPP-LCP-MIB;\n               --
    The PPP IP Group.\n               -- Implementation of this group is mandatory
    for all\n               -- PPP implementations that support operating IP over
    PPP.\n               pppIp OBJECT IDENTIFIER ::= { ppp 3 }\n          pppIpTable
    \  OBJECT-TYPE\n               SYNTAX    SEQUENCE OF PppIpEntry\n               ACCESS
    \   not-accessible\n               STATUS    mandatory\n               DESCRIPTION\n
    \                        \"Table containing the IP parameters and\n                         statistics
    for the local PPP entity.\"\n               ::= { pppIp 1 }\n          pppIpEntry
    \  OBJECT-TYPE\n               SYNTAX    PppIpEntry\n               ACCESS    not-accessible\n
    \              STATUS    mandatory\n               DESCRIPTION\n                         \"IPCP
    status information for a particular PPP\n                         link.\"\n               INDEX
    \    { ifIndex }\n               ::= { pppIpTable 1 }\n          PppIpEntry ::=
    SEQUENCE {\n               pppIpOperStatus\n                    INTEGER,\n               pppIpLocalToRemoteCompressionProtocol\n
    \                   INTEGER,\n               pppIpRemoteToLocalCompressionProtocol\n
    \                   INTEGER,\n               pppIpRemoteMaxSlotId\n                    INTEGER,\n
    \              pppIpLocalMaxSlotId\n                    INTEGER\n          }\n
    \         -- The following object reflect the values of the option\n          --
    parameters used in the PPP IP Control Protocol\n          --   pppIpLocalToRemoteCompressionProtocol\n
    \         --   pppIpRemoteToLocalCompressionProtocol\n          --   pppIpRemoteMaxSlotId\n
    \         --   pppIpLocalMaxSlotId\n          -- These values are not available
    until after the PPP Option\n          -- negotiation has completed, which is indicated
    by the link\n          -- reaching the open state (i.e., pppIpOperStatus is set
    to\n          -- opened).\n          --\n          -- Therefore, when pppIpOperStatus
    is not opened\n          -- the contents of these objects is undefined. The value\n
    \         -- returned when accessing the objects is an implementation\n          --
    dependent issue.\n          pppIpOperStatus   OBJECT-TYPE\n               SYNTAX
    \   INTEGER {opened(1), not-opened(2)}\n               ACCESS    read-only\n               STATUS
    \   mandatory\n               DESCRIPTION\n                         \"The operational
    status of the IP network\n                         protocol. If the value of this
    object is up\n                         then the finite state machine for the IP\n
    \                        network protocol has reached the Opened state.\"\n               ::=
    { pppIpEntry 1 }\n          pppIpLocalToRemoteCompressionProtocol   OBJECT-TYPE\n
    \              SYNTAX    INTEGER {\n                         none(1),\n                         vj-tcp(2)\n
    \                   }\n               ACCESS    read-only\n               STATUS
    \   mandatory\n               DESCRIPTION\n                         \"The IP compression
    protocol that the local\n                         PPP-IP entity uses when sending
    packets to the\n                         remote PPP-IP entity. The value of this
    object\n                         is meaningful only when the link has reached\n
    \                        the open state (pppIpOperStatus is opened).\"\n               ::=
    { pppIpEntry 2 }\n          pppIpRemoteToLocalCompressionProtocol   OBJECT-TYPE\n
    \              SYNTAX    INTEGER {\n                         none(1),\n                         vj-tcp(2)\n
    \                   }\n               ACCESS    read-only\n               STATUS
    \   mandatory\n               DESCRIPTION\n                         \"The IP compression
    protocol that the remote\n                         PPP-IP entity uses when sending
    packets to the\n                         local PPP-IP entity. The value of this
    object\n                         is meaningful only when the link has reached\n
    \                        the open state (pppIpOperStatus is opened).\"\n               ::=
    { pppIpEntry 3 }\n          pppIpRemoteMaxSlotId   OBJECT-TYPE\n               SYNTAX
    \   INTEGER(0..255)\n               ACCESS    read-only\n               STATUS
    \   mandatory\n               DESCRIPTION\n                         \"The Max-Slot-Id
    parameter that the remote node\n                         has advertised and that
    is in use on the link.\n                         If vj-tcp header compression
    is not in use on\n                         the link then the value of this object
    shall be\n                         0. The value of this object is meaningful only\n
    \                        when the link has reached the open state\n                         (pppIpOperStatus
    is opened).\"\n               ::= { pppIpEntry 4 }\n          pppIpLocalMaxSlotId
    \  OBJECT-TYPE\n               SYNTAX    INTEGER(0..255)\n               ACCESS
    \   read-only\n               STATUS    mandatory\n               DESCRIPTION\n
    \                        \"The Max-Slot-Id parameter that the local node\n                         has
    advertised and that is in use on the link.\n                         If vj-tcp
    header compression is not in use on\n                         the link then the
    value of this object shall be\n                         0. The value of this object
    is meaningful only\n                         when the link has reached the open
    state\n                         (pppIpOperStatus is opened).\"\n               ::=
    { pppIpEntry 5 }\n          --\n          -- The PPP IP Configuration table.\n
    \         -- This is a separate table in order to facilitate\n          -- placing
    these variables in a separate MIB view.\n          --\n          pppIpConfigTable
    \  OBJECT-TYPE\n               SYNTAX    SEQUENCE OF PppIpConfigEntry\n               ACCESS
    \   not-accessible\n               STATUS    mandatory\n               DESCRIPTION\n
    \                        \"Table containing configuration variables for\n                         the
    IPCP for the local PPP entity.\"\n               ::= { pppIp 2 }\n          pppIpConfigEntry
    \  OBJECT-TYPE\n               SYNTAX    PppIpConfigEntry\n               ACCESS
    \   not-accessible\n               STATUS    mandatory\n               DESCRIPTION\n
    \                        \"IPCP information for a particular PPP link.\"\n               INDEX
    \    { ifIndex }\n               ::= { pppIpConfigTable 1 }\n          PppIpConfigEntry
    ::= SEQUENCE {\n               pppIpConfigAdminStatus\n                    INTEGER,\n
    \              pppIpConfigCompression\n                    INTEGER\n          }\n
    \         pppIpConfigAdminStatus   OBJECT-TYPE\n               SYNTAX    INTEGER
    {open(1), close(2)}\n               ACCESS    read-write\n               STATUS
    \   mandatory\n               DESCRIPTION\n                         \"The immediate
    desired status of the IP network\n                         protocol. Setting this
    object to open will\n                         inject an administrative open event
    into the IP\n                         network protocol's finite state machine.\n
    \                        Setting this object to close will inject an\n                         administrative
    close event into the IP network\n                         protocol's finite state
    machine.\"\n               ::= { pppIpConfigEntry 1 }\n          pppIpConfigCompression
    \  OBJECT-TYPE\n               SYNTAX    INTEGER {\n                         none(1),\n
    \                        vj-tcp(2)\n                    }\n               ACCESS
    \   read-write\n               STATUS    mandatory\n               DESCRIPTION\n
    \                        \"If none(1) then the local node will not\n                         attempt
    to negotiate any IP Compression option.\n                         Otherwise, the
    local node will attempt to\n                         negotiate compression mode
    indicated by the\n                         enumerated value. Changing this object
    will\n                         have effect when the link is next restarted.\"\n
    \              REFERENCE\n                         \"Section 4.0, Van Jacobson
    TCP/IP Header\n                         Compression of RFC1332.\"\n               DEFVAL
    \   { none }\n               ::= { pppIpConfigEntry 2 }\n          END\n"
  title: 4.  Definitions
- contents:
  - "5.  Acknowledgements\n   This document was produced by the PPP working group.
    \ In addition to\n   the working group, the author wishes to thank the following\n
    \  individuals for their comments and contributions:\n          Bill Simpson --
    Daydreamer\n          Glenn McGregor -- Merit\n          Jesse Walker -- DEC\n
    \         Chris Gunner -- DEC\n"
  title: 5.  Acknowledgements
- contents:
  - "6.  Security Considerations\n   The PPP MIB affords the network operator the
    ability to configure and\n   control the PPP links of a particular system, including
    the PPP\n   authentication protocols. This represents a security risk.\n   These
    risks are addressed in the following manners:\n      (1)  All variables which
    represent a significant security risk\n           are placed in separate, optional,
    MIB Groups. As the MIB\n           Group is the quantum of implementation within
    a MIB, the\n           implementor of the MIB may elect not to implement these\n
    \          groups.\n      (2)  The implementor may choose to implement the variables\n
    \          which present a security risk so that they may not be\n           written,
    i.e., the variables are READ-ONLY. This method\n           still presents a security
    risk, and is not recommended,\n           in that the variables, specifically
    the PPP\n           Authentication Protocols' variables, may be easily read.\n
    \     (3)  Using SNMPv2, the operator can place the variables into\n           MIB
    views which are protected in that the parties which\n           have access to
    those MIB views use authentication and\n           privacy protocols, or the operator
    may elect to make\n           these views not accessible to any party.  In order
    to\n           facilitate this placement, all security-related variables\n           are
    placed in separate MIB Tables. This eases the\n           identification of the
    necessary MIB View Subtree.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  References\n   [1] Rose M., and K. McCloghrie, \"Structure and Identification
    of\n       Management Information for TCP/IP-based internets\", STD 16, RFC\n
    \      1155, Performance Systems International, Hughes LAN Systems, May\n       1990.\n
    \  [2] McCloghrie K., and M. Rose, Editors, \"Management Information Base\n       for
    Network Management of TCP/IP-based internets\", STD 17, RFC\n       1213, Performance
    Systems International, March 1991.\n   [3] Information processing systems - Open
    Systems Interconnection -\n       Specification of Abstract Syntax Notation One
    (ASN.1),\n       International Organization for Standardization, International\n
    \      Standard 8824, December 1987.\n   [4] Information processing systems -
    Open Systems Interconnection -\n       Specification of Basic Encoding Rules for
    Abstract Notation One\n       (ASN.1), International Organization for Standardization,\n
    \      International Standard 8825, December 1987.\n   [5] Rose, M., and K. McCloghrie,
    Editors, \"Concise MIB Definitions\",\n       STD 16, RFC 1212, Performance Systems
    International, Hughes LAN\n       Systems, March 1991.\n   [6] Rose, M., Editor,
    \"A Convention for Defining Traps for use with\n       the SNMP\", RFC 1215, Performance
    Systems International, March\n       1991.\n   [7] McCloghrie, K., \"Extensions
    to the Generic-Interface MIB\", RFC\n       1229, Hughes LAN Systems, Inc., May
    1991.\n   [8] Simpson, W., \"The Point-to-Point Protocol for the Transmission
    of\n       Multi-protocol Datagrams over Point-to-Point Links, RFC 1331,\n       Daydreamer,
    May 1992.\n   [9] McGregor, G., \"The PPP Internet Protocol Control Protocol\",
    RFC\n       1332, Merit, May 1992.\n  [10] Baker, F., \"Point-to-Point Protocol
    Extensions for Bridging\", RFC\n       1220, ACC, April 1991.\n  [11] Lloyd, B.,
    and W. Simpson, \"PPP Authentication Protocols\", RFC\n       1334, L&A, Daydreamer,
    October 1992.\n  [12] Simpson, W., \"PPP Link Quality Monitoring\", RFC 1333,
    Daydreamer,\n       May 1992.\n"
  title: 7.  References
- contents:
  - "8.  Author's Address\n   Frank Kastenholz\n   FTP Software, Inc.\n   2 High Street\n
    \  North Andover, Mass 01845 USA\n   Phone: (508) 685-4000\n   EMail: kasten@ftp.com\n"
  title: 8.  Author's Address
