- title: __initial_text__
  contents:
  - '              An Architecture for Differentiated Services

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines an architecture for implementing scalable\n\
    \   service differentiation in the Internet.  This architecture achieves\n   scalability\
    \ by aggregating traffic classification state which is\n   conveyed by means of\
    \ IP-layer packet marking using the DS field\n   [DSFIELD].  Packets are classified\
    \ and marked to receive a particular\n   per-hop forwarding behavior on nodes\
    \ along their path.  Sophisticated\n   classification, marking, policing, and\
    \ shaping operations need only\n   be implemented at network boundaries or hosts.\
    \  Network resources are\n   allocated to traffic streams by service provisioning\
    \ policies which\n   govern how traffic is marked and conditioned upon entry to\
    \ a\n   differentiated services-capable network, and how that traffic is\n   forwarded\
    \ within that network.  A wide variety of services can be\n   implemented on top\
    \ of these building blocks.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction .................................................\
    \  2\n     1.1  Overview  .................................................  2\n\
    \     1.2  Terminology ...............................................  4\n  \
    \   1.3  Requirements ..............................................  8\n    \
    \ 1.4  Comparisons with Other Approaches .........................  9\n   2. \
    \ Differentiated Services Architectural Model .................. 12\n     2.1\
    \  Differentiated Services Domain ............................ 12\n       2.1.1\
    \  DS Boundary Nodes and Interior Nodes .................. 12\n       2.1.2  DS\
    \ Ingress Node and Egress Node ....................... 13\n     2.2  Differentiated\
    \ Services Region ............................ 13\n     2.3  Traffic Classification\
    \ and Conditioning ................... 14\n       2.3.1  Classifiers ...........................................\
    \ 14\n       2.3.2  Traffic Profiles ...................................... 15\n\
    \       2.3.3  Traffic Conditioners .................................. 15\n  \
    \       2.3.3.1  Meters ............................................ 16\n    \
    \     2.3.3.2  Markers ........................................... 16\n      \
    \   2.3.3.3  Shapers ........................................... 17\n        \
    \ 2.3.3.4  Droppers .......................................... 17\n       2.3.4\
    \  Location of Traffic Conditioners and MF Classifiers ... 17\n         2.3.4.1\
    \  Within the Source Domain .......................... 17\n         2.3.4.2  At\
    \ the Boundary of a DS Domain .................... 18\n         2.3.4.3  In non-DS-Capable\
    \ Domains ......................... 18\n         2.3.4.4  In Interior DS Nodes\
    \ .............................. 19\n     2.4  Per-Hop Behaviors .........................................\
    \ 19\n     2.5  Network Resource Allocation ............................... 20\n\
    \   3.  Per-Hop Behavior Specification Guidelines .................... 21\n  \
    \ 4.  Interoperability with Non-Differentiated Services-Compliant\n       Nodes\
    \ ........................................................ 25\n   5.  Multicast\
    \ Considerations ..................................... 26\n   6.  Security and\
    \ Tunneling Considerations ........................ 27\n     6.1  Theft and Denial\
    \ of Service ............................... 28\n     6.2  IPsec and Tunneling\
    \ Interactions .......................... 30\n     6.3  Auditing ..................................................\
    \ 32\n   7.  Acknowledgements ............................................. 32\n\
    \   8.  References ................................................... 33\n  \
    \ Authors' Addresses ............................................... 34\n   Full\
    \ Copyright Statement ......................................... 36\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1  Overview
  contents:
  - "1.1  Overview\n   This document defines an architecture for implementing scalable\n\
    \   service differentiation in the Internet.  A \"Service\" defines some\n   significant\
    \ characteristics of packet transmission in one direction\n   across a set of\
    \ one or more paths within a network.  These\n   characteristics may be specified\
    \ in quantitative or statistical terms\n   of throughput, delay, jitter, and/or\
    \ loss, or may otherwise be\n   specified in terms of some relative priority of\
    \ access to network\n   resources.  Service differentiation is desired to accommodate\n\
    \   heterogeneous application requirements and user expectations, and to\n   permit\
    \ differentiated pricing of Internet service.\n   This architecture is composed\
    \ of a number of functional elements\n   implemented in network nodes, including\
    \ a small set of per-hop\n   forwarding behaviors, packet classification functions,\
    \ and traffic\n   conditioning functions including metering, marking, shaping,\
    \ and\n   policing.  This architecture achieves scalability by implementing\n\
    \   complex classification and conditioning functions only at network\n   boundary\
    \ nodes, and by applying per-hop behaviors to aggregates of\n   traffic which\
    \ have been appropriately marked using the DS field in\n   the IPv4 or IPv6 headers\
    \ [DSFIELD].  Per-hop behaviors are defined to\n   permit a reasonably granular\
    \ means of allocating buffer and bandwidth\n   resources at each node among competing\
    \ traffic streams.  Per-\n   application flow or per-customer forwarding state\
    \ need not be\n   maintained within the core of the network.  A distinction is\n\
    \   maintained between:\n   o  the service provided to a traffic aggregate,\n\
    \   o  the conditioning functions and per-hop behaviors used to realize\n    \
    \  services,\n   o  the DS field value (DS codepoint) used to mark packets to\
    \ select a\n      per-hop behavior, and\n   o  the particular node implementation\
    \ mechanisms which realize a\n      per-hop behavior.\n   Service provisioning\
    \ and traffic conditioning policies are\n   sufficiently decoupled from the forwarding\
    \ behaviors within the\n   network interior to permit implementation of a wide\
    \ variety of\n   service behaviors, with room for future expansion.\n   This architecture\
    \ only provides service differentiation in one\n   direction of traffic flow and\
    \ is therefore asymmetric.  Development\n   of a complementary symmetric architecture\
    \ is a topic of current\n   research but is outside the scope of this document;\
    \ see for example\n   [EXPLICIT].\n   Sect. 1.2 is a glossary of terms used within\
    \ this document.  Sec. 1.3\n   lists requirements addressed by this architecture,\
    \ and Sec. 1.4\n   provides a brief comparison to other approaches for service\n\
    \   differentiation.  Sec. 2 discusses the components of the architecture\n  \
    \ in detail.  Sec. 3 proposes guidelines for per-hop behavior\n   specifications.\
    \  Sec. 4 discusses interoperability issues with nodes\n   and networks which\
    \ do not implement differentiated services as\n   defined in this document and\
    \ in [DSFIELD].  Sec. 5 discusses issues\n   with multicast service delivery.\
    \  Sec. 6 addresses security and\n   tunnel considerations.\n"
- title: 1.2  Terminology
  contents:
  - "1.2  Terminology\n   This section gives a general conceptual overview of the\
    \ terms used in\n   this document.  Some of these terms are more precisely defined\
    \ in\n   later sections of this document.\n   Behavior Aggregate (BA)   a DS behavior\
    \ aggregate.\n   BA classifier             a classifier that selects packets based\n\
    \                             only on the contents of the DS field.\n   Boundary\
    \ link             a link connecting the edge nodes of two\n                 \
    \            domains.\n   Classifier                an entity which selects packets\
    \ based on\n                             the content of packet headers according\
    \ to\n                             defined rules.\n   DS behavior aggregate  \
    \   a collection of packets with the same DS\n                             codepoint\
    \ crossing a link in a particular\n                             direction.\n \
    \  DS boundary node          a DS node that connects one DS domain to a\n    \
    \                         node either in another DS domain or in a\n         \
    \                    domain that is not DS-capable.\n   DS-capable           \
    \     capable of implementing differentiated\n                             services\
    \ as described in this architecture;\n                             usually used\
    \ in reference to a domain\n                             consisting of DS-compliant\
    \ nodes.\n   DS codepoint              a specific value of the DSCP portion of\
    \ the\n                             DS field, used to select a PHB.\n   DS-compliant\
    \              enabled to support differentiated services\n                  \
    \           functions and behaviors as defined in\n                          \
    \   [DSFIELD], this document, and other\n                             differentiated\
    \ services documents; usually\n                             used in reference\
    \ to a node or device.\n   DS domain                 a DS-capable domain; a contiguous\
    \ set of\n                             nodes which operate with a common set of\n\
    \                             service provisioning policies and PHB\n        \
    \                     definitions.\n   DS egress node            a DS boundary\
    \ node in its role in handling\n                             traffic as it leaves\
    \ a DS domain.\n   DS ingress node           a DS boundary node in its role in\
    \ handling\n                             traffic as it enters a DS domain.\n \
    \  DS interior node          a DS node that is not a DS boundary node.\n   DS\
    \ field                  the IPv4 header TOS octet or the IPv6\n             \
    \                Traffic Class octet when interpreted in\n                   \
    \          conformance with the definition given in\n                        \
    \     [DSFIELD].  The bits of the DSCP field\n                             encode\
    \ the DS codepoint, while the\n                             remaining bits are\
    \ currently unused.\n   DS node                   a DS-compliant node.\n   DS\
    \ region                 a set of contiguous DS domains which can\n          \
    \                   offer differentiated services over paths\n               \
    \              across those DS domains.\n   Downstream DS domain      the DS domain\
    \ downstream of traffic flow on\n                             a boundary link.\n\
    \   Dropper                   a device that performs dropping.\n   Dropping  \
    \                the process of discarding packets based on\n                \
    \             specified rules; policing.\n   Legacy node               a node\
    \ which implements IPv4 Precedence as\n                             defined in\
    \ [RFC791,RFC1812] but which is\n                             otherwise not DS-compliant.\n\
    \   Marker                    a device that performs marking.\n   Marking    \
    \               the process of setting the DS codepoint in\n                 \
    \            a packet based on defined rules; pre-\n                         \
    \    marking, re-marking.\n   Mechanism                 a specific algorithm or\
    \ operation (e.g.,\n                             queueing discipline) that is\
    \ implemented in\n                             a node to realize a set of one\
    \ or more per-\n                             hop behaviors.\n   Meter        \
    \             a device that performs metering.\n   Metering                  the\
    \ process of measuring the temporal\n                             properties (e.g.,\
    \ rate) of a traffic stream\n                             selected by a classifier.\
    \  The\n                             instantaneous state of this process may be\n\
    \                             used to affect the operation of a marker,\n    \
    \                         shaper, or dropper, and/or may be used for\n       \
    \                      accounting and measurement purposes.\n   Microflow    \
    \             a single instance of an application-to-\n                      \
    \       application flow of packets which is\n                             identified\
    \ by source address, source port,\n                             destination address,\
    \ destination port and\n                             protocol id.\n   MF Classifier\
    \             a multi-field (MF) classifier which selects\n                  \
    \           packets based on the content of some\n                           \
    \  arbitrary number of header fields;\n                             typically\
    \ some combination of source\n                             address, destination\
    \ address, DS field,\n                             protocol ID, source port and\
    \ destination\n                             port.\n   Per-Hop-Behavior (PHB) \
    \   the externally observable forwarding\n                             behavior\
    \ applied at a DS-compliant node to\n                             a DS behavior\
    \ aggregate.\n   PHB group                 a set of one or more PHBs that can\
    \ only be\n                             meaningfully specified and implemented\n\
    \                             simultaneously, due to a common constraint\n   \
    \                          applying to all PHBs in the set such as a\n       \
    \                      queue servicing or queue management policy.\n         \
    \                    A PHB group provides a service building\n               \
    \              block that allows a set of related\n                          \
    \   forwarding behaviors to be specified\n                             together\
    \ (e.g., four dropping priorities).\n                             A single PHB\
    \ is a special case of a PHB\n                             group.\n   Policing\
    \                  the process of discarding packets (by a\n                 \
    \            dropper) within a traffic stream in\n                           \
    \  accordance with the state of a\n                             corresponding\
    \ meter enforcing a traffic\n                             profile.\n   Pre-mark\
    \                  to set the DS codepoint of a packet prior\n               \
    \              to entry into a downstream DS domain.\n   Provider DS domain  \
    \      the DS-capable provider of services to a\n                            \
    \ source domain.\n   Re-mark                   to change the DS codepoint of a\
    \ packet,\n                             usually performed by a marker in accordance\n\
    \                             with a TCA.\n   Service                   the overall\
    \ treatment of a defined subset\n                             of a customer's\
    \ traffic within a DS domain\n                             or end-to-end.\n  \
    \ Service Level Agreement   a service contract between a customer and a\n   (SLA)\
    \                     service provider that specifies the\n                  \
    \           forwarding service a customer should\n                           \
    \  receive.  A customer may be a user\n                             organization\
    \ (source domain) or another DS\n                             domain (upstream\
    \ domain).  A SLA may\n                             include traffic conditioning\
    \ rules which\n                             constitute a TCA in whole or in part.\n\
    \   Service Provisioning      a policy which defines how traffic\n   Policy  \
    \                  conditioners are configured on DS boundary\n              \
    \               nodes and how traffic streams are mapped to\n                \
    \             DS behavior aggregates to achieve a range\n                    \
    \         of services.\n   Shaper                    a device that performs shaping.\n\
    \   Shaping                   the process of delaying packets within a\n     \
    \                        traffic stream to cause it to conform to\n          \
    \                   some defined traffic profile.\n   Source domain          \
    \   a domain which contains the node(s)\n                             originating\
    \ the traffic receiving a\n                             particular service.\n\
    \   Traffic conditioner       an entity which performs traffic\n             \
    \                conditioning functions and which may\n                      \
    \       contain meters, markers, droppers, and\n                             shapers.\
    \ Traffic conditioners are typically\n                             deployed in\
    \ DS boundary nodes only.  A\n                             traffic conditioner\
    \ may re-mark a traffic\n                             stream or may discard or\
    \ shape packets to\n                             alter the temporal characteristics\
    \ of the\n                             stream and bring it into compliance with\
    \ a\n                             traffic profile.\n   Traffic conditioning  \
    \    control functions performed to enforce\n                             rules\
    \ specified in a TCA, including\n                             metering, marking,\
    \ shaping, and policing.\n   Traffic Conditioning      an agreement specifying\
    \ classifier rules\n   Agreement (TCA)           and any corresponding traffic\
    \ profiles and\n                             metering, marking, discarding and/or\n\
    \                             shaping rules which are to apply to the\n      \
    \                       traffic streams selected by the classifier.\n        \
    \                     A TCA encompasses all of the traffic\n                 \
    \            conditioning rules explicitly specified\n                       \
    \      within a SLA along with all of the rules\n                            \
    \ implicit from the relevant service\n                             requirements\
    \ and/or from a DS domain's\n                             service provisioning\
    \ policy.\n   Traffic profile           a description of the temporal properties\n\
    \                             of a traffic stream such as rate and burst\n   \
    \                          size.\n   Traffic stream            an administratively\
    \ significant set of one\n                             or more microflows which\
    \ traverse a path\n                             segment.  A traffic stream may\
    \ consist of\n                             the set of active microflows which\
    \ are\n                             selected by a particular classifier.\n   Upstream\
    \ DS domain        the DS domain upstream of traffic flow on a\n             \
    \                boundary link.\n"
- title: 1.3  Requirements
  contents:
  - "1.3  Requirements\n   The history of the Internet has been one of continuous\
    \ growth in the\n   number of hosts, the number and variety of applications, and\
    \ the\n   capacity of the network infrastructure, and this growth is expected\n\
    \   to continue for the foreseeable future.  A scalable architecture for\n   service\
    \ differentiation must be able to accommodate this continued\n   growth.\n   The\
    \ following requirements were identified and are addressed in this\n   architecture:\n\
    \   o  should accommodate a wide variety of services and provisioning\n      policies,\
    \ extending end-to-end or within a particular (set of)\n      network(s),\n  \
    \ o  should allow decoupling of the service from the particular\n      application\
    \ in use,\n   o  should work with existing applications without the need for\n\
    \      application programming interface changes or host software\n      modifications\
    \ (assuming suitable deployment of classifiers,\n      markers, and other traffic\
    \ conditioning functions),\n   o  should decouple traffic conditioning and service\
    \ provisioning\n      functions from forwarding behaviors implemented within the\
    \ core\n      network nodes,\n   o  should not depend on hop-by-hop application\
    \ signaling,\n   o  should require only a small set of forwarding behaviors whose\n\
    \      implementation complexity does not dominate the cost of a network\n   \
    \   device, and which will not introduce bottlenecks for future high-\n      speed\
    \ system implementations,\n   o  should avoid per-microflow or per-customer state\
    \ within core\n      network nodes,\n   o  should utilize only aggregated classification\
    \ state within the\n      network core,\n   o  should permit simple packet classification\
    \ implementations in core\n      network nodes (BA classifier),\n   o  should\
    \ permit reasonable interoperability with non-DS-compliant\n      network nodes,\n\
    \   o  should accommodate incremental deployment.\n"
- title: 1.4  Comparisons with Other Approaches
  contents:
  - "1.4  Comparisons with Other Approaches\n   The differentiated services architecture\
    \ specified in this document\n   can be contrasted with other existing models\
    \ of service\n   differentiation.  We classify these alternative models into the\n\
    \   following categories: relative priority marking, service marking,\n   label\
    \ switching, Integrated Services/RSVP, and static per-hop\n   classification.\n\
    \   Examples of the relative priority marking model include IPv4\n   Precedence\
    \ marking as defined in [RFC791], 802.5 Token Ring priority\n   [TR], and the\
    \ default interpretation of 802.1p traffic classes\n   [802.1p].  In this model\
    \ the application, host, or proxy node selects\n   a relative priority or \"precedence\"\
    \ for a packet (e.g., delay or\n   discard priority), and the network nodes along\
    \ the transit path apply\n   the appropriate priority forwarding behavior corresponding\
    \ to the\n   priority value within the packet's header.  Our architecture can\
    \ be\n   considered as a refinement to this model, since we more clearly\n   specify\
    \ the role and importance of boundary nodes and traffic\n   conditioners, and\
    \ since our per-hop behavior model permits more\n   general forwarding behaviors\
    \ than relative delay or discard priority.\n   An example of a service marking\
    \ model is IPv4 TOS as defined in\n   [RFC1349].  In this example each packet\
    \ is marked with a request for\n   a \"type of service\", which may include \"\
    minimize delay\", \"maximize\n   throughput\", \"maximize reliability\", or \"\
    minimize cost\".  Network\n   nodes may select routing paths or forwarding behaviors\
    \ which are\n   suitably engineered to satisfy the service request.  This model\
    \ is\n   subtly different from our architecture.  Note that we do not describe\n\
    \   the use of the DS field as an input to route selection.  The TOS\n   markings\
    \ defined in [RFC1349] are very generic and do not span the\n   range of possible\
    \ service semantics.  Furthermore, the service\n   request is associated with\
    \ each individual packet, whereas some\n   service semantics may depend on the\
    \ aggregate forwarding behavior of\n   a sequence of packets.  The service marking\
    \ model does not easily\n   accommodate growth in the number and range of future\
    \ services (since\n   the codepoint space is small) and involves configuration\
    \ of the\n   \"TOS->forwarding behavior\" association in each core network node.\n\
    \   Standardizing service markings implies standardizing service\n   offerings,\
    \ which is outside the scope of the IETF.  Note that\n   provisions are made in\
    \ the allocation of the DS codepoint space to\n   allow for locally significant\
    \ codepoints which may be used by a\n   provider to support service marking semantics\
    \ [DSFIELD].\n   Examples of the label switching (or virtual circuit) model include\n\
    \   Frame Relay, ATM, and MPLS [FRELAY, ATM].  In this model path\n   forwarding\
    \ state and traffic management or QoS state is established\n   for traffic streams\
    \ on each hop along a network path.  Traffic\n   aggregates of varying granularity\
    \ are associated with a label\n   switched path at an ingress node, and packets/cells\
    \ within each label\n   switched path are marked with a forwarding label that\
    \ is used to\n   lookup the next-hop node, the per-hop forwarding behavior, and\
    \ the\n   replacement label at each hop.  This model permits finer granularity\n\
    \   resource allocation to traffic streams, since label values are not\n   globally\
    \ significant but are only significant on a single link;\n   therefore resources\
    \ can be reserved for the aggregate of packets/\n   cells received on a link with\
    \ a particular label, and the label\n   switching semantics govern the next-hop\
    \ selection, allowing a traffic\n   stream to follow a specially engineered path\
    \ through the network.\n   This improved granularity comes at the cost of additional\
    \ management\n   and configuration requirements to establish and maintain the\
    \ label\n   switched paths.  In addition, the amount of forwarding state\n   maintained\
    \ at each node scales in proportion to the number of edge\n   nodes of the network\
    \ in the best case (assuming multipoint-to-point\n   label switched paths), and\
    \ it scales in proportion with the square of\n   the number of edge nodes in the\
    \ worst case, when edge-edge label\n   switched paths with provisioned resources\
    \ are employed.\n   The Integrated Services/RSVP model relies upon traditional\
    \ datagram\n   forwarding in the default case, but allows sources and receivers\
    \ to\n   exchange signaling messages which establish additional packet\n   classification\
    \ and forwarding state on each node along the path\n   between them [RFC1633,\
    \ RSVP].  In the absence of state aggregation,\n   the amount of state on each\
    \ node scales in proportion to the number\n   of concurrent reservations, which\
    \ can be potentially large on high-\n   speed links.  This model also requires\
    \ application support for the\n   RSVP signaling protocol.  Differentiated services\
    \ mechanisms can be\n   utilized to aggregate Integrated Services/RSVP state in\
    \ the core of\n   the network [Bernet].\n   A variant of the Integrated Services/RSVP\
    \ model eliminates the\n   requirement for hop-by-hop signaling by utilizing only\
    \ \"static\"\n   classification and forwarding policies which are implemented\
    \ in each\n   node along a network path.  These policies are updated on\n   administrative\
    \ timescales and not in response to the instantaneous\n   mix of microflows active\
    \ in the network.  The state requirements for\n   this variant are potentially\
    \ worse than those encountered when RSVP\n   is used, especially in backbone nodes,\
    \ since the number of static\n   policies that might be applicable at a node over\
    \ time may be larger\n   than the number of active sender-receiver sessions that\
    \ might have\n   installed reservation state on a node.  Although the support\
    \ of large\n   numbers of classifier rules and forwarding policies may be\n  \
    \ computationally feasible, the management burden associated with\n   installing\
    \ and maintaining these rules on each node within a backbone\n   network which\
    \ might be traversed by a traffic stream is substantial.\n   Although we contrast\
    \ our architecture with these alternative models\n   of service differentiation,\
    \ it should be noted that links and nodes\n   employing these techniques may be\
    \ utilized to extend differentiated\n   services behaviors and semantics across\
    \ a layer-2 switched\n   infrastructure (e.g., 802.1p LANs, Frame Relay/ATM backbones)\n\
    \   interconnecting DS nodes, and in the case of MPLS may be used as an\n   alternative\
    \ intra-domain implementation technology.  The constraints\n   imposed by the\
    \ use of a specific link-layer technology in particular\n   regions of a DS domain\
    \ (or in a network providing access to DS\n   domains) may imply the differentiation\
    \ of traffic on a coarser grain\n   basis.  Depending on the mapping of PHBs to\
    \ different link-layer\n   services and the way in which packets are scheduled\
    \ over a restricted\n   set of priority classes (or virtual circuits of different\
    \ category\n   and capacity), all or a subset of the PHBs in use may be supportable\n\
    \   (or may be indistinguishable).\n"
- title: 2.  Differentiated Services Architectural Model
  contents:
  - "2.  Differentiated Services Architectural Model\n   The differentiated services\
    \ architecture is based on a simple model\n   where traffic entering a network\
    \ is classified and possibly\n   conditioned at the boundaries of the network,\
    \ and assigned to\n   different behavior aggregates.  Each behavior aggregate\
    \ is identified\n   by a single DS codepoint.  Within the core of the network,\
    \ packets\n   are forwarded according to the per-hop behavior associated with\
    \ the\n   DS codepoint.  In this section, we discuss the key components within\n\
    \   a differentiated services region, traffic classification and\n   conditioning\
    \ functions, and how differentiated services are achieved\n   through the combination\
    \ of traffic conditioning and PHB-based\n   forwarding.\n"
- title: 2.1  Differentiated Services Domain
  contents:
  - "2.1  Differentiated Services Domain\n   A DS domain is a contiguous set of DS\
    \ nodes which operate with a\n   common service provisioning policy and set of\
    \ PHB groups implemented\n   on each node.  A DS domain has a well-defined boundary\
    \ consisting of\n   DS boundary nodes which classify and possibly condition ingress\n\
    \   traffic to ensure that packets which transit the domain are\n   appropriately\
    \ marked to select a PHB from one of the PHB groups\n   supported within the domain.\
    \  Nodes within the DS domain select the\n   forwarding behavior for packets based\
    \ on their DS codepoint, mapping\n   that value to one of the supported PHBs using\
    \ either the recommended\n   codepoint->PHB mapping or a locally customized mapping\
    \ [DSFIELD].\n   Inclusion of non-DS-compliant nodes within a DS domain may result\
    \ in\n   unpredictable performance and may impede the ability to satisfy\n   service\
    \ level agreements (SLAs).\n   A DS domain normally consists of one or more networks\
    \ under the same\n   administration; for example, an organization's intranet or\
    \ an ISP.\n   The administration of the domain is responsible for ensuring that\n\
    \   adequate resources are provisioned and/or reserved to support the\n   SLAs\
    \ offered by the domain.\n"
- title: 2.1.1  DS Boundary Nodes and Interior Nodes
  contents:
  - "2.1.1  DS Boundary Nodes and Interior Nodes\n   A DS domain consists of DS boundary\
    \ nodes and DS interior nodes.  DS\n   boundary nodes interconnect the DS domain\
    \ to other DS or non-DS-\n   capable domains, whilst DS interior nodes only connect\
    \ to other DS\n   interior or boundary nodes within the same DS domain.\n   Both\
    \ DS boundary nodes and interior nodes must be able to apply the\n   appropriate\
    \ PHB to packets based on the DS codepoint; otherwise\n   unpredictable behavior\
    \ may result.  In addition, DS boundary nodes\n   may be required to perform traffic\
    \ conditioning functions as defined\n   by a traffic conditioning agreement (TCA)\
    \ between their DS domain and\n   the peering domain which they connect to (see\
    \ Sec. 2.3.3).\n   Interior nodes may be able to perform limited traffic conditioning\n\
    \   functions such as DS codepoint re-marking.  Interior nodes which\n   implement\
    \ more complex classification and traffic conditioning\n   functions are analogous\
    \ to DS boundary nodes (see Sec. 2.3.4.4).\n   A host in a network containing\
    \ a DS domain may act as a DS boundary\n   node for traffic from applications\
    \ running on that host; we therefore\n   say that the host is within the DS domain.\
    \  If a host does not act as\n   a boundary node, then the DS node topologically\
    \ closest to that host\n   acts as the DS boundary node for that host's traffic.\n"
- title: 2.1.2  DS Ingress Node and Egress Node
  contents:
  - "2.1.2  DS Ingress Node and Egress Node\n   DS boundary nodes act both as a DS\
    \ ingress node and as a DS egress\n   node for different directions of traffic.\
    \  Traffic enters a DS domain\n   at a DS ingress node and leaves a DS domain\
    \ at a DS egress node.  A\n   DS ingress node is responsible for ensuring that\
    \ the traffic entering\n   the DS domain conforms to any TCA between it and the\
    \ other domain to\n   which the ingress node is connected.  A DS egress node may\
    \ perform\n   traffic conditioning functions on traffic forwarded to a directly\n\
    \   connected peering domain, depending on the details of the TCA between\n  \
    \ the two domains.  Note that a DS boundary node may act as a DS\n   interior\
    \ node for some set of interfaces.\n"
- title: 2.2  Differentiated Services Region
  contents:
  - "2.2  Differentiated Services Region\n   A differentiated services region (DS\
    \ Region) is a set of one or more\n   contiguous DS domains.  DS regions are capable\
    \ of supporting\n   differentiated services along paths which span the domains\
    \ within the\n   region.\n   The DS domains in a DS region may support different\
    \ PHB groups\n   internally and different codepoint->PHB mappings.  However, to\
    \ permit\n   services which span across the domains, the peering DS domains must\n\
    \   each establish a peering SLA which defines (either explicitly or\n   implicitly)\
    \ a TCA which specifies how transit traffic from one DS\n   domain to another\
    \ is conditioned at the boundary between the two DS\n   domains.\n   It is possible\
    \ that several DS domains within a DS region may adopt a\n   common service provisioning\
    \ policy and may support a common set of\n   PHB groups and codepoint mappings,\
    \ thus eliminating the need for\n   traffic conditioning between those DS domains.\n"
- title: 2.3  Traffic Classification and Conditioning
  contents:
  - "2.3  Traffic Classification and Conditioning\n   Differentiated services are\
    \ extended across a DS domain boundary by\n   establishing a SLA between an upstream\
    \ network and a downstream DS\n   domain.  The SLA may specify packet classification\
    \ and re-marking\n   rules and may also specify traffic profiles and actions to\
    \ traffic\n   streams which are in- or out-of-profile (see Sec. 2.3.2).  The TCA\n\
    \   between the domains is derived (explicitly or implicitly) from this\n   SLA.\n\
    \   The packet classification policy identifies the subset of traffic\n   which\
    \ may receive a differentiated service by being conditioned and/\n   or mapped\
    \ to one or more behavior aggregates (by DS codepoint re-\n   marking) within\
    \ the DS domain.\n   Traffic conditioning performs metering, shaping, policing\
    \ and/or re-\n   marking to ensure that the traffic entering the DS domain conforms\
    \ to\n   the rules specified in the TCA, in accordance with the domain's\n   service\
    \ provisioning policy.  The extent of traffic conditioning\n   required is dependent\
    \ on the specifics of the service offering, and\n   may range from simple codepoint\
    \ re-marking to complex policing and\n   shaping operations.  The details of traffic\
    \ conditioning policies\n   which are negotiated between networks is outside the\
    \ scope of this\n   document.\n"
- title: 2.3.1  Classifiers
  contents:
  - "2.3.1  Classifiers\n   Packet classifiers select packets in a traffic stream\
    \ based on the\n   content of some portion of the packet header.  We define two\
    \ types of\n   classifiers.  The BA (Behavior Aggregate) Classifier classifies\n\
    \   packets based on the DS codepoint only.  The MF (Multi-Field)\n   classifier\
    \ selects packets based on the value of a combination of one\n   or more header\
    \ fields, such as source address, destination address,\n   DS field, protocol\
    \ ID, source port and destination port numbers, and\n   other information such\
    \ as incoming interface.\n   Classifiers are used to \"steer\" packets matching\
    \ some specified rule\n   to an element of a traffic conditioner for further processing.\n\
    \   Classifiers must be configured by some management procedure in\n   accordance\
    \ with the appropriate TCA.\n   The classifier should authenticate the information\
    \ which it uses to\n   classify the packet (see Sec. 6).\n   Note that in the\
    \ event of upstream packet fragmentation, MF\n   classifiers which examine the\
    \ contents of transport-layer header\n   fields may incorrectly classify packet\
    \ fragments subsequent to the\n   first.  A possible solution to this problem\
    \ is to maintain\n   fragmentation state; however, this is not a general solution\
    \ due to\n   the possibility of upstream fragment re-ordering or divergent routing\n\
    \   paths.  The policy to apply to packet fragments is outside the scope\n   of\
    \ this document.\n"
- title: 2.3.2  Traffic Profiles
  contents:
  - "2.3.2  Traffic Profiles\n   A traffic profile specifies the temporal properties\
    \ of a traffic\n   stream selected by a classifier.  It provides rules for determining\n\
    \   whether a particular packet is in-profile or out-of-profile.  For\n   example,\
    \ a profile based on a token bucket may look like:\n     codepoint=X, use token-bucket\
    \ r, b\n   The above profile indicates that all packets marked with DS codepoint\n\
    \   X should be measured against a token bucket meter with rate r and\n   burst\
    \ size b.  In this example out-of-profile packets are those\n   packets in the\
    \ traffic stream which arrive when insufficient tokens\n   are available in the\
    \ bucket.  The concept of in- and out-of-profile\n   can be extended to more than\
    \ two levels, e.g., multiple levels of\n   conformance with a profile may be defined\
    \ and enforced.\n   Different conditioning actions may be applied to the in-profile\n\
    \   packets and out-of-profile packets, or different accounting actions\n   may\
    \ be triggered.  In-profile packets may be allowed to enter the DS\n   domain\
    \ without further conditioning; or, alternatively, their DS\n   codepoint may\
    \ be changed.  The latter happens when the DS codepoint\n   is set to a non-Default\
    \ value for the first time [DSFIELD], or when\n   the packets enter a DS domain\
    \ that uses a different PHB group or\n   codepoint->PHB mapping policy for this\
    \ traffic stream.  Out-of-\n   profile packets may be queued until they are in-profile\
    \ (shaped),\n   discarded (policed), marked with a new codepoint (re-marked),\
    \ or\n   forwarded unchanged while triggering some accounting procedure.\n   Out-of-profile\
    \ packets may be mapped to one or more behavior\n   aggregates that are \"inferior\"\
    \ in some dimension of forwarding\n   performance to the BA into which in-profile\
    \ packets are mapped.\n   Note that a traffic profile is an optional component\
    \ of a TCA and its\n   use is dependent on the specifics of the service offering\
    \ and the\n   domain's service provisioning policy.\n"
- title: 2.3.3  Traffic Conditioners
  contents:
  - "2.3.3  Traffic Conditioners\n   A traffic conditioner may contain the following\
    \ elements: meter,\n   marker, shaper, and dropper.  A traffic stream is selected\
    \ by a\n   classifier, which steers the packets to a logical instance of a\n \
    \  traffic conditioner.  A meter is used (where appropriate) to measure\n   the\
    \ traffic stream against a traffic profile.  The state of the meter\n   with respect\
    \ to a particular packet (e.g., whether it is in- or out-\n   of-profile) may\
    \ be used to affect a marking, dropping, or shaping\n   action.\n   When packets\
    \ exit the traffic conditioner of a DS boundary node the\n   DS codepoint of each\
    \ packet must be set to an appropriate value.\n   Fig. 1 shows the block diagram\
    \ of a classifier and traffic\n   conditioner.  Note that a traffic conditioner\
    \ may not necessarily\n   contain all four elements.  For example, in the case\
    \ where no traffic\n   profile is in effect, packets may only pass through a classifier\
    \ and\n   a marker.\n                               +-------+\n              \
    \                 |       |-------------------+\n                        +----->|\
    \ Meter |                   |\n                        |      |       |--+   \
    \             |\n                        |      +-------+  |                |\n\
    \                        |                 V                V\n              \
    \    +------------+      +--------+      +---------+\n                  |    \
    \        |      |        |      | Shaper/ |\n    packets =====>| Classifier |=====>|\
    \ Marker |=====>| Dropper |=====>\n                  |            |      |   \
    \     |      |         |\n                  +------------+      +--------+   \
    \   +---------+\n   Fig. 1: Logical View of a Packet Classifier and Traffic Conditioner\n"
- title: 2.3.3.1  Meters
  contents:
  - "2.3.3.1  Meters\n   Traffic meters measure the temporal properties of the stream\
    \ of\n   packets selected by a classifier against a traffic profile specified\n\
    \   in a TCA.  A meter passes state information to other conditioning\n   functions\
    \ to trigger a particular action for each packet which is\n   either in- or out-of-profile\
    \ (to some extent).\n"
- title: 2.3.3.2  Markers
  contents:
  - "2.3.3.2  Markers\n   Packet markers set the DS field of a packet to a particular\n\
    \   codepoint, adding the marked packet to a particular DS behavior\n   aggregate.\
    \  The marker may be configured to mark all packets which\n   are steered to it\
    \ to a single codepoint, or may be configured to mark\n   a packet to one of a\
    \ set of codepoints used to select a PHB in a PHB\n   group, according to the\
    \ state of a meter.  When the marker changes\n   the codepoint in a packet it\
    \ is said to have \"re-marked\" the packet.\n"
- title: 2.3.3.3  Shapers
  contents:
  - "2.3.3.3  Shapers\n   Shapers delay some or all of the packets in a traffic stream\
    \ in order\n   to bring the stream into compliance with a traffic profile.  A\
    \ shaper\n   usually has a finite-size buffer, and packets may be discarded if\n\
    \   there is not sufficient buffer space to hold the delayed packets.\n"
- title: 2.3.3.4  Droppers
  contents:
  - "2.3.3.4  Droppers\n   Droppers discard some or all of the packets in a traffic\
    \ stream in\n   order to bring the stream into compliance with a traffic profile.\n\
    \   This process is know as \"policing\" the stream.  Note that a dropper\n  \
    \ can be implemented as a special case of a shaper by setting the\n   shaper buffer\
    \ size to zero (or a few) packets.\n"
- title: 2.3.4  Location of Traffic Conditioners and MF Classifiers
  contents:
  - "2.3.4  Location of Traffic Conditioners and MF Classifiers\n   Traffic conditioners\
    \ are usually located within DS ingress and egress\n   boundary nodes, but may\
    \ also be located in nodes within the interior\n   of a DS domain, or within a\
    \ non-DS-capable domain.\n"
- title: 2.3.4.1  Within the Source Domain
  contents:
  - "2.3.4.1  Within the Source Domain\n   We define the source domain as the domain\
    \ containing the node(s)\n   which originate the traffic receiving a particular\
    \ service.  Traffic\n   sources and intermediate nodes within a source domain\
    \ may perform\n   traffic classification and conditioning functions.  The traffic\n\
    \   originating from the source domain across a boundary may be marked by\n  \
    \ the traffic sources directly or by intermediate nodes before leaving\n   the\
    \ source domain.  This is referred to as initial marking or \"pre-\n   marking\"\
    .\n   Consider the example of a company that has the policy that its CEO's\n \
    \  packets should have higher priority.  The CEO's host may mark the DS\n   field\
    \ of all outgoing packets with a DS codepoint that indicates\n   \"higher priority\"\
    .  Alternatively, the first-hop router directly\n   connected to the CEO's host\
    \ may classify the traffic and mark the\n   CEO's packets with the correct DS\
    \ codepoint.  Such high priority\n   traffic may also be conditioned near the\
    \ source so that there is a\n   limit on the amount of high priority traffic forwarded\
    \ from a\n   particular source.\n   There are some advantages to marking packets\
    \ close to the traffic\n   source.  First, a traffic source can more easily take\
    \ an\n   application's preferences into account when deciding which packets\n\
    \   should receive better forwarding treatment.  Also, classification of\n   packets\
    \ is much simpler before the traffic has been aggregated with\n   packets from\
    \ other sources, since the number of classification rules\n   which need to be\
    \ applied within a single node is reduced.\n   Since packet marking may be distributed\
    \ across multiple nodes, the\n   source DS domain is responsible for ensuring\
    \ that the aggregated\n   traffic towards its provider DS domain conforms to the\
    \ appropriate\n   TCA.  Additional allocation mechanisms such as bandwidth brokers\
    \ or\n   RSVP may be used to dynamically allocate resources for a particular\n\
    \   DS behavior aggregate within the provider's network [2BIT, Bernet].\n   The\
    \ boundary node of the source domain should also monitor\n   conformance to the\
    \ TCA, and may police, shape, or re-mark packets as\n   necessary.\n"
- title: 2.3.4.2  At the Boundary of a DS Domain
  contents:
  - "2.3.4.2  At the Boundary of a DS Domain\n   Traffic streams may be classified,\
    \ marked, and otherwise conditioned\n   on either end of a boundary link (the\
    \ DS egress node of the upstream\n   domain or the DS ingress node of the downstream\
    \ domain).  The SLA\n   between the domains should specify which domain has responsibility\n\
    \   for mapping traffic streams to DS behavior aggregates and\n   conditioning\
    \ those aggregates in conformance with the appropriate\n   TCA.  However, a DS\
    \ ingress node must assume that the incoming\n   traffic may not conform to the\
    \ TCA and must be prepared to enforce\n   the TCA in accordance with local policy.\n\
    \   When packets are pre-marked and conditioned in the upstream domain,\n   potentially\
    \ fewer classification and traffic conditioning rules need\n   to be supported\
    \ in the downstream DS domain.  In this circumstance\n   the downstream DS domain\
    \ may only need to re-mark or police the\n   incoming behavior aggregates to enforce\
    \ the TCA.  However, more\n   sophisticated services which are path- or source-dependent\
    \ may\n   require MF classification in the downstream DS domain's ingress\n  \
    \ nodes.\n   If a DS ingress node is connected to an upstream non-DS-capable\n\
    \   domain, the DS ingress node must be able to perform all necessary\n   traffic\
    \ conditioning functions on the incoming traffic.\n"
- title: 2.3.4.3  In non-DS-Capable Domains
  contents:
  - "2.3.4.3  In non-DS-Capable Domains\n   Traffic sources or intermediate nodes\
    \ in a non-DS-capable domain may\n   employ traffic conditioners to pre-mark traffic\
    \ before it reaches the\n   ingress of a downstream DS domain.  In this way the\
    \ local policies\n   for classification and marking may be concealed.\n"
- title: 2.3.4.4  In Interior DS Nodes
  contents:
  - "2.3.4.4  In Interior DS Nodes\n   Although the basic architecture assumes that\
    \ complex classification\n   and traffic conditioning functions are located only\
    \ in a network's\n   ingress and egress boundary nodes, deployment of these functions\
    \ in\n   the interior of the network is not precluded.  For example, more\n  \
    \ restrictive access policies may be enforced on a transoceanic link,\n   requiring\
    \ MF classification and traffic conditioning functionality in\n   the upstream\
    \ node on the link.  This approach may have scaling\n   limits, due to the potentially\
    \ large number of classification and\n   conditioning rules that might need to\
    \ be maintained.\n"
- title: 2.4  Per-Hop Behaviors
  contents:
  - "2.4  Per-Hop Behaviors\n   A per-hop behavior (PHB) is a description of the externally\n\
    \   observable forwarding behavior of a DS node applied to a particular\n   DS\
    \ behavior aggregate.  \"Forwarding behavior\" is a general concept in\n   this\
    \ context.  For example, in the event that only one behavior\n   aggregate occupies\
    \ a link, the observable forwarding behavior (i.e.,\n   loss, delay, jitter) will\
    \ often depend only on the relative loading\n   of the link (i.e., in the event\
    \ that the behavior assumes a work-\n   conserving scheduling discipline).  Useful\
    \ behavioral distinctions\n   are mainly observed when multiple behavior aggregates\
    \ compete for\n   buffer and bandwidth resources on a node.  The PHB is the means\
    \ by\n   which a node allocates resources to behavior aggregates, and it is on\n\
    \   top of this basic hop-by-hop resource allocation mechanism that\n   useful\
    \ differentiated services may be constructed.\n   The most simple example of a\
    \ PHB is one which guarantees a minimal\n   bandwidth allocation of X% of a link\
    \ (over some reasonable time\n   interval) to a behavior aggregate.  This PHB\
    \ can be fairly easily\n   measured under a variety of competing traffic conditions.\
    \  A slightly\n   more complex PHB would guarantee a minimal bandwidth allocation\
    \ of X%\n   of a link, with proportional fair sharing of any excess link\n   capacity.\
    \  In general, the observable behavior of a PHB may depend on\n   certain constraints\
    \ on the traffic characteristics of the associated\n   behavior aggregate, or\
    \ the characteristics of other behavior\n   aggregates.\n   PHBs may be specified\
    \ in terms of their resource (e.g., buffer,\n   bandwidth) priority relative to\
    \ other PHBs, or in terms of their\n   relative observable traffic characteristics\
    \ (e.g., delay, loss).\n   These PHBs may be used as building blocks to allocate\
    \ resources and\n   should be specified as a group (PHB group) for consistency.\
    \  PHB\n   groups will usually share a common constraint applying to each PHB\n\
    \   within the group, such as a packet scheduling or buffer management\n   policy.\
    \  The relationship between PHBs in a group may be in terms of\n   absolute or\
    \ relative priority (e.g., discard priority by means of\n   deterministic or stochastic\
    \ thresholds), but this is not required\n   (e.g., N equal link shares).  A single\
    \ PHB defined in isolation is a\n   special case of a PHB group.\n   PHBs are\
    \ implemented in nodes by means of some buffer management and\n   packet scheduling\
    \ mechanisms.  PHBs are defined in terms of behavior\n   characteristics relevant\
    \ to service provisioning policies, and not in\n   terms of particular implementation\
    \ mechanisms.  In general, a variety\n   of implementation mechanisms may be suitable\
    \ for implementing a\n   particular PHB group.  Furthermore, it is likely that\
    \ more than one\n   PHB group may be implemented on a node and utilized within\
    \ a domain.\n   PHB groups should be defined such that the proper resource allocation\n\
    \   between groups can be inferred, and integrated mechanisms can be\n   implemented\
    \ which can simultaneously support two or more groups.  A\n   PHB group definition\
    \ should indicate possible conflicts with\n   previously documented PHB groups\
    \ which might prevent simultaneous\n   operation.\n   As described in [DSFIELD],\
    \ a PHB is selected at a node by a mapping\n   of the DS codepoint in a received\
    \ packet.  Standardized PHBs have a\n   recommended codepoint.  However, the total\
    \ space of codepoints is\n   larger than the space available for recommended codepoints\
    \ for\n   standardized PHBs, and [DSFIELD] leaves provisions for locally\n   configurable\
    \ mappings.  A codepoint->PHB mapping table may contain\n   both 1->1 and N->1\
    \ mappings.  All codepoints must be mapped to some\n   PHB; in the absence of\
    \ some local policy, codepoints which are not\n   mapped to a standardized PHB\
    \ in accordance with that PHB's\n   specification should be mapped to the Default\
    \ PHB.\n"
- title: 2.5  Network Resource Allocation
  contents:
  - "2.5  Network Resource Allocation\n   The implementation, configuration, operation\
    \ and administration of\n   the supported PHB groups in the nodes of a DS Domain\
    \ should\n   effectively partition the resources of those nodes and the inter-node\n\
    \   links between behavior aggregates, in accordance with the domain's\n   service\
    \ provisioning policy.  Traffic conditioners can further\n   control the usage\
    \ of these resources through enforcement of TCAs and\n   possibly through operational\
    \ feedback from the nodes and traffic\n   conditioners in the domain.  Although\
    \ a range of services can be\n   deployed in the absence of complex traffic conditioning\
    \ functions\n   (e.g., using only static marking policies), functions such as\n\
    \   policing, shaping, and dynamic re-marking enable the deployment of\n   services\
    \ providing quantitative performance metrics.\n   The configuration of and interaction\
    \ between traffic conditioners and\n   interior nodes should be managed by the\
    \ administrative control of the\n   domain and may require operational control\
    \ through protocols and a\n   control entity.  There is a wide range of possible\
    \ control models.\n   The precise nature and implementation of the interaction\
    \ between\n   these components is outside the scope of this architecture.  However,\n\
    \   scalability requires that the control of the domain does not require\n   micro-management\
    \ of the network resources.  The most scalable control\n   model would operate\
    \ nodes in open-loop in the operational timeframe,\n   and would only require\
    \ administrative-timescale management as SLAs\n   are varied.  This simple model\
    \ may be unsuitable in some\n   circumstances, and some automated but slowly varying\
    \ operational\n   control (minutes rather than seconds) may be desirable to balance\
    \ the\n   utilization of the network against the recent load profile.\n"
- title: 3.  Per-Hop Behavior Specification Guidelines
  contents:
  - "3.  Per-Hop Behavior Specification Guidelines\n   Basic requirements for per-hop\
    \ behavior standardization are given in\n   [DSFIELD].  This section elaborates\
    \ on that text by describing\n   additional guidelines for PHB (group) specifications.\
    \  This is\n   intended to help foster implementation consistency.  Before a PHB\n\
    \   group is proposed for standardization it should satisfy these\n   guidelines,\
    \ as appropriate, to preserve the integrity of this\n   architecture.\n   G.1:\
    \  A PHB standard must specify a recommended DS codepoint selected\n   from the\
    \ codepoint space reserved for standard mappings [DSFIELD].\n   Recommended codepoints\
    \ will be assigned by the IANA.  A PHB proposal\n   may recommend a temporary\
    \ codepoint from the EXP/LU space to\n   facilitate inter-domain experimentation.\
    \  Determination of a packet's\n   PHB must not require inspection of additional\
    \ packet header fields\n   beyond the DS field.\n   G.2:  The specification of\
    \ each newly proposed PHB group should\n   include an overview of the behavior\
    \ and the purpose of the behavior\n   being proposed.  The overview should include\
    \ a problem or problems\n   statement for which the PHB group is targeted.  The\
    \ overview should\n   include the basic concepts behind the PHB group.  These\
    \ concepts\n   should include, but are not restricted to, queueing behavior, discard\n\
    \   behavior, and output link selection behavior.  Lastly, the overview\n   should\
    \ specify the method by which the PHB group solves the problem\n   or problems\
    \ specified in the problem statement.\n   G.3:  A PHB group specification should\
    \ indicate the number of\n   individual PHBs specified.  In the event that multiple\
    \ PHBs are\n   specified, the interactions between these PHBs and constraints\
    \ that\n   must be respected globally by all the PHBs within the group should\
    \ be\n   clearly specified.  As an example, the specification must indicate\n\
    \   whether the probability of packet reordering within a microflow is\n   increased\
    \ if different packets in that microflow are marked for\n   different PHBs within\
    \ the group.\n   G.4:  When proper functioning of a PHB group is dependent on\n\
    \   constraints such as a provisioning restriction, then the PHB\n   definition\
    \ should describe the behavior when these constraints are\n   violated.  Further,\
    \ if actions such as packet discard or re-marking\n   are required when these\
    \ constraints are violated, then these actions\n   should be specifically stipulated.\n\
    \   G.5:  A PHB group may be specified for local use within a domain in\n   order\
    \ to provide some domain-specific functionality or domain-\n   specific services.\
    \  In this event, the PHB specification is useful\n   for providing vendors with\
    \ a consistent definition of the PHB group.\n   However, any PHB group which is\
    \ defined for local use should not be\n   considered for standardization, but\
    \ may be published as an\n   Informational RFC.  In contrast, a PHB group which\
    \ is intended for\n   general use will follow a stricter standardization process.\n\
    \   Therefore all PHB proposals should specifically state whether they\n   are\
    \ to be considered for general or local use.\n   It is recognized that PHB groups\
    \ can be designed with the intent of\n   providing host-to-host, WAN edge-to-WAN\
    \ edge, and/or domain edge-to-\n   domain edge services.  Use of the term \"end-to-end\"\
    \ in a PHB\n   definition should be interpreted to mean \"host-to-host\" for\n\
    \   consistency.\n   Other PHB groups may be defined and deployed locally within\
    \ domains,\n   for experimental or operational purposes.  There is no requirement\n\
    \   that these PHB groups must be publicly documented, but they should\n   utilize\
    \ DS codepoints from one of the EXP/LU pools as defined in\n   [DSFIELD].\n  \
    \ G.6:  It may be possible or appropriate for a packet marked for a PHB\n   within\
    \ a PHB group to be re-marked to select another PHB within the\n   group; either\
    \ within a domain or across a domain boundary.  Typically\n   there are three\
    \ reasons for such PHB modification:\n   a. The codepoints associated with the\
    \ PHB group are collectively\n      intended to carry state about the network,\n\
    \   b. Conditions exist which require PHB promotion or demotion of a\n      packet\
    \ (this assumes that PHBs within the group can be ranked in\n      some order),\n\
    \   c. The boundary between two domains is not covered by a SLA.  In this\n  \
    \    case the codepoint/PHB to select when crossing the boundary link\n      will\
    \ be determined by the local policy of the upstream domain.\n   A PHB specification\
    \ should clearly state the circumstances under\n   which packets marked for a\
    \ PHB within a PHB group may, or should be\n   modified (e.g., promoted or demoted)\
    \ to another PHB within the group.\n   If it is undesirable for a packet's PHB\
    \ to be modified, the\n   specification should clearly state the consequent risks\
    \ when the PHB\n   is modified.   A possible risk to changing a packet's PHB,\
    \ either\n   within or outside a PHB group, is a higher probability of packet\
    \ re-\n   ordering within a microflow.  PHBs within a group may carry some\n \
    \  host-to-host, WAN edge-to-WAN edge, and/or domain edge-to-domain edge\n   semantics\
    \ which may be difficult to duplicate if packets are re-\n   marked to select\
    \ another PHB from the group (or otherwise).\n   For certain PHB groups, it may\
    \ be appropriate to reflect a state\n   change in the node by re-marking packets\
    \ to specify another PHB from\n   within the group.  If a PHB group is designed\
    \ to reflect the state of\n   a network, the PHB definition must adequately describe\
    \ the\n   relationship between the PHBs and the states they reflect.  Further,\n\
    \   if these PHBs limit the forwarding actions a node can perform in some\n  \
    \ way, these constraints may be specified as actions the node should,\n   or must\
    \ perform.\n   G.7:  A PHB group specification should include a section defining\
    \ the\n   implications of tunneling on the utility of the PHB group.  This\n \
    \  section should specify the implications for the utility of the PHB\n   group\
    \ of a newly created outer header when the original DS field of\n   the inner\
    \ header is encapsulated in a tunnel.  This section should\n   also discuss what\
    \ possible changes should be applied to the inner\n   header at the egress of\
    \ the tunnel, when both the codepoints from the\n   inner header and the outer\
    \ header are accessible (see Sec. 6.2).\n   G.8:  The process of specifying PHB\
    \ groups is likely to be\n   incremental in nature.  When new PHB groups are proposed,\
    \ their known\n   interactions with previously specified PHB groups should be\n\
    \   documented.  When a new PHB group is created, it can be entirely new\n   in\
    \ scope or it can be an extension to an existing PHB group.  If the\n   PHB group\
    \ is entirely independent of some or all of the existing PHB\n   specifications,\
    \ a section should be included in the PHB specification\n   which details how\
    \ the new PHB group can co-exist with those PHB\n   groups already standardized.\
    \  For example, this section might\n   indicate the possibility of packet re-ordering\
    \ within a microflow for\n   packets marked by codepoints associated with two\
    \ separate PHB groups.\n   If concurrent operation of two (or more) different\
    \ PHB groups in the\n   same node is impossible or detrimental this should be\
    \ stated.  If the\n   concurrent operation of two (or more) different PHB groups\
    \ requires\n   some specific behaviors by the node when packets marked for PHBs\
    \ from\n   these different PHB groups are being processed by the node at the\n\
    \   same time, these behaviors should be stated.\n   Care should be taken to avoid\
    \ circularity in the definitions of PHB\n   groups.\n   If the proposed PHB group\
    \ is an extension to an existing PHB group, a\n   section should be included in\
    \ the PHB group specification which\n   details how this extension interoperates\
    \ with the behavior being\n   extended.  Further, if the extension alters or more\
    \ narrowly defines\n   the existing behavior in some way, this should also be\
    \ clearly\n   indicated.\n   G.9:  Each PHB specification should include a section\
    \ specifying\n   minimal conformance requirements for implementations of the PHB\n\
    \   group.  This conformance section is intended to provide a means for\n   specifying\
    \ the details of a behavior while allowing for\n   implementation variation to\
    \ the extent permitted by the PHB\n   specification.  This conformance section\
    \ can take the form of rules,\n   tables, pseudo-code, or tests.\n   G.10:  A\
    \ PHB specification should include a section detailing the\n   security implications\
    \ of the behavior.  This section should include a\n   discussion of the re-marking\
    \ of the inner header's codepoint at the\n   egress of a tunnel and its effect\
    \ on the desired forwarding behavior.\n   Further, this section should also discuss\
    \ how the proposed PHB group\n   could be used in denial-of-service attacks, reduction\
    \ of service\n   contract attacks, and service contract violation attacks.  Lastly,\n\
    \   this section should discuss possible means for detecting such attacks\n  \
    \ as they are relevant to the proposed behavior.\n   G.11:  A PHB specification\
    \ should include a section detailing\n   configuration and management issues which\
    \ may affect the operation of\n   the PHB and which may impact candidate services\
    \ that might utilize\n   the PHB.\n   G.12:  It is strongly recommended that an\
    \ appendix be provided with\n   each PHB specification that considers the implications\
    \ of the\n   proposed behavior on current and potential services.  These services\n\
    \   could include but are not restricted to be user-specific, device-\n   specific,\
    \ domain-specific or end-to-end services.  It is also\n   strongly recommended\
    \ that the appendix include a section describing\n   how the services are verified\
    \ by users, devices, and/or domains.\n   G.13:  It is recommended that an appendix\
    \ be provided with each PHB\n   specification that is targeted for local use within\
    \ a domain,\n   providing guidance for PHB selection for packets which are forwarded\n\
    \   into a peer domain which does not support the PHB group.\n   G.14:  It is\
    \ recommended that an appendix be provided with each PHB\n   specification which\
    \ considers the impact of the proposed PHB group on\n   existing higher-layer\
    \ protocols.  Under some circumstances PHBs may\n   allow for possible changes\
    \ to higher-layer protocols which may\n   increase or decrease the utility of\
    \ the proposed PHB group.\n   G.15:  It is recommended that an appendix be provided\
    \ with each PHB\n   specification which recommends mappings to link-layer QoS\
    \ mechanisms\n   to support the intended behavior of the PHB across a shared-medium\
    \ or\n   switched link-layer.  The determination of the most appropriate\n   mapping\
    \ between a PHB and a link-layer QoS mechanism is dependent on\n   many factors\
    \ and is outside the scope of this document; however, the\n   specification should\
    \ attempt to offer some guidance.\n"
- title: 4.  Interoperability with Non-Differentiated Services-Compliant Nodes
  contents:
  - "4.  Interoperability with Non-Differentiated Services-Compliant Nodes\n   We\
    \ define a non-differentiated services-compliant node (non-DS-\n   compliant node)\
    \ as any node which does not interpret the DS field as\n   specified in [DSFIELD]\
    \ and/or does not implement some or all of the\n   standardized PHBs (or those\
    \ in use within a particular DS domain).\n   This may be due to the capabilities\
    \ or configuration of the node.  We\n   define a legacy node as a special case\
    \ of a non-DS-compliant node\n   which implements IPv4 Precedence classification\
    \ and forwarding as\n   defined in [RFC791, RFC1812], but which is otherwise not\
    \ DS-\n   compliant.  The precedence values in the IPv4 TOS octet are\n   compatible\
    \ by intention with the Class Selector Codepoints defined in\n   [DSFIELD], and\
    \ the precedence forwarding behaviors defined in\n   [RFC791, RFC1812] comply\
    \ with the Class Selector PHB Requirements\n   also defined in [DSFIELD].  A key\
    \ distinction between a legacy node\n   and a DS-compliant node is that the legacy\
    \ node may or may not\n   interpret bits 3-6 of the TOS octet as defined in [RFC1349]\
    \ (the\n   \"DTRC\" bits); in practice it will not interpret these bit as\n  \
    \ specified in [DSFIELD].  We assume that the use of the TOS markings\n   defined\
    \ in [RFC1349] is deprecated.  Nodes which are non-DS-compliant\n   and which\
    \ are not legacy nodes may exhibit unpredictable forwarding\n   behaviors for\
    \ packets with non-zero DS codepoints.\n   Differentiated services depend on the\
    \ resource allocation mechanisms\n   provided by per-hop behavior implementations\
    \ in nodes.  The quality\n   or statistical assurance level of a service may break\
    \ down in the\n   event that traffic transits a non-DS-compliant node, or a non-DS-\n\
    \   capable domain.\n   We will examine two separate cases.  The first case concerns\
    \ the use\n   of non-DS-compliant nodes within a DS domain.  Note that PHB\n \
    \  forwarding is primarily useful for allocating scarce node and link\n   resources\
    \ in a controlled manner.  On high-speed, lightly loaded\n   links, the worst-case\
    \ packet delay, jitter, and loss may be\n   negligible, and the use of a non-DS-compliant\
    \ node on the upstream\n   end of such a link may not result in service degradation.\
    \  In more\n   realistic circumstances, the lack of PHB forwarding in a node may\n\
    \   make it impossible to offer low-delay, low-loss, or provisioned\n   bandwidth\
    \ services across paths which traverse the node.  However,\n   use of a legacy\
    \ node may be an acceptable alternative, assuming that\n   the DS domain restricts\
    \ itself to using only the Class Selector\n   Codepoints defined in [DSFIELD],\
    \ and assuming that the particular\n   precedence implementation in the legacy\
    \ node provides forwarding\n   behaviors which are compatible with the services\
    \ offered along paths\n   which traverse that node.  Note that it is important\
    \ to restrict the\n   codepoints in use to the Class Selector Codepoints, since\
    \ the legacy\n   node may or may not interpret bits 3-5 in accordance with [RFC1349],\n\
    \   thereby resulting in unpredictable forwarding results.\n   The second case\
    \ concerns the behavior of services which traverse\n   non-DS-capable domains.\
    \  We assume for the sake of argument that a\n   non-DS-capable domain does not\
    \ deploy traffic conditioning functions\n   on domain boundary nodes; therefore,\
    \ even in the event that the\n   domain consists of legacy or DS-compliant interior\
    \ nodes, the lack of\n   traffic enforcement at the boundaries will limit the\
    \ ability to\n   consistently deliver some types of services across the domain.\
    \  A DS\n   domain and a non-DS-capable domain may negotiate an agreement which\n\
    \   governs how egress traffic from the DS-domain should be marked before\n  \
    \ entry into the non-DS-capable domain.  This agreement might be\n   monitored\
    \ for compliance by traffic sampling instead of by rigorous\n   traffic conditioning.\
    \  Alternatively, where there is knowledge that\n   the non-DS-capable domain\
    \ consists of legacy nodes, the upstream DS\n   domain may opportunistically re-mark\
    \ differentiated services traffic\n   to one or more of the Class Selector Codepoints.\
    \  Where there is no\n   knowledge of the traffic management capabilities of the\
    \ downstream\n   domain, and no agreement in place, a DS domain egress node may\
    \ choose\n   to re-mark DS codepoints to zero, under the assumption that the non-\n\
    \   DS-capable domain will treat the traffic uniformly with best-effort\n   service.\n\
    \   In the event that a non-DS-capable domain peers with a DS domain,\n   traffic\
    \ flowing from the non-DS-capable domain should be conditioned\n   at the DS ingress\
    \ node of the DS domain according to the appropriate\n   SLA or policy.\n"
- title: 5.  Multicast Considerations
  contents:
  - "5.  Multicast Considerations\n   Use of differentiated services by multicast\
    \ traffic introduces a\n   number of issues for service provisioning.  First,\
    \ multicast packets\n   which enter a DS domain at an ingress node may simultaneously\
    \ take\n   multiple paths through some segments of the domain due to multicast\n\
    \   packet replication.  In this way they consume more network resources\n   than\
    \ unicast packets.  Where multicast group membership is dynamic,\n   it is difficult\
    \ to predict in advance the amount of network resources\n   that may be consumed\
    \ by multicast traffic originating from an\n   upstream network for a particular\
    \ group.  A consequence of this\n   uncertainty is that it may be difficult to\
    \ provide quantitative\n   service guarantees to multicast senders.  Further,\
    \ it may be\n   necessary to reserve codepoints and PHBs for exclusive use by\
    \ unicast\n   traffic, to provide resource isolation from multicast traffic.\n\
    \   The second issue is the selection of the DS codepoint for a multicast\n  \
    \ packet arriving at a DS ingress node.  Because that packet may exit\n   the\
    \ DS domain at multiple DS egress nodes which peer with multiple\n   downstream\
    \ domains, the DS codepoint used should not result in the\n   request for a service\
    \ from a downstream DS domain which is in\n   violation of a peering SLA.  When\
    \ establishing classifier and traffic\n   conditioner state at an DS ingress node\
    \ for an aggregate of traffic\n   receiving a differentiated service which spans\
    \ across the egress\n   boundary of the domain, the identity of the adjacent downstream\n\
    \   transit domain and the specifics of the corresponding peering SLA can\n  \
    \ be factored into the configuration decision (subject to routing\n   policy and\
    \ the stability of the routing infrastructure).  In this way\n   peering SLAs\
    \ with downstream DS domains can be partially enforced at\n   the ingress of the\
    \ upstream domain, reducing the classification and\n   traffic conditioning burden\
    \ at the egress node of the upstream\n   domain.  This is not so easily performed\
    \ in the case of multicast\n   traffic, due to the possibility of dynamic group\
    \ membership.  The\n   result is that the service guarantees for unicast traffic\
    \ may be\n   impacted.  One means of addressing this problem is to establish a\n\
    \   separate peering SLA for multicast traffic, and to either utilize a\n   particular\
    \ set of codepoints for multicast packets, or to implement\n   the necessary classification\
    \ and traffic conditioning mechanisms in\n   the DS egress nodes to provide preferential\
    \ isolation for unicast\n   traffic in conformance with the peering SLA with the\
    \ downstream\n   domain.\n"
- title: 6.  Security and Tunneling Considerations
  contents:
  - "6.  Security and Tunneling Considerations\n   This section addresses security\
    \ issues raised by the introduction of\n   differentiated services, primarily\
    \ the potential for denial-of-\n   service attacks, and the related potential\
    \ for theft of service by\n   unauthorized traffic (Sec. 6.1).  In addition, the\
    \ operation of\n   differentiated services in the presence of IPsec and its interaction\n\
    \   with IPsec are also discussed (Sec. 6.2), as well as auditing\n   requirements\
    \ (Sec. 6.3).  This section considers issues introduced by\n   the use of both\
    \ IPsec and non-IPsec tunnels.\n"
- title: 6.1  Theft and Denial of Service
  contents:
  - "6.1  Theft and Denial of Service\n   The primary goal of differentiated services\
    \ is to allow different\n   levels of service to be provided for traffic streams\
    \ on a common\n   network infrastructure.  A variety of resource management techniques\n\
    \   may be used to achieve this, but the end result will be that some\n   packets\
    \ receive different (e.g., better) service than others.  The\n   mapping of network\
    \ traffic to the specific behaviors that result in\n   different (e.g., better\
    \ or worse) service is indicated primarily by\n   the DS field, and hence an adversary\
    \ may be able to obtain better\n   service by modifying the DS field to codepoints\
    \ indicating behaviors\n   used for enhanced services or by injecting packets\
    \ with the DS field\n   set to such codepoints.  Taken to its limits, this theft\
    \ of service\n   becomes a denial-of-service attack when the modified or injected\n\
    \   traffic depletes the resources available to forward it and other\n   traffic\
    \ streams.  The defense against such theft- and denial-of-\n   service attacks\
    \ consists of the combination of traffic conditioning\n   at DS boundary nodes\
    \ along with security and integrity of the network\n   infrastructure within a\
    \ DS domain.\n   As described in Sec. 2, DS ingress nodes must condition all traffic\n\
    \   entering a DS domain to ensure that it has acceptable DS codepoints.\n   This\
    \ means that the codepoints must conform to the applicable TCA(s)\n   and the\
    \ domain's service provisioning policy.  Hence, the ingress\n   nodes are the\
    \ primary line of defense against theft- and denial-of-\n   service attacks based\
    \ on modified DS codepoints (e.g., codepoints to\n   which the traffic is not\
    \ entitled), as success of any such attack\n   constitutes a violation of the\
    \ applicable TCA(s) and/or service\n   provisioning policy.  An important instance\
    \ of an ingress node is\n   that any traffic-originating node in a DS domain is\
    \ the ingress node\n   for that traffic, and must ensure that all originated traffic\
    \ carries\n   acceptable DS codepoints.\n   Both a domain's service provisioning\
    \ policy and TCAs may require the\n   ingress nodes to change the DS codepoint\
    \ on some entering packets\n   (e.g., an ingress router may set the DS codepoint\
    \ of a customer's\n   traffic in accordance with the appropriate SLA).  Ingress\
    \ nodes must\n   condition all other inbound traffic to ensure that the DS codepoints\n\
    \   are acceptable; packets found to have unacceptable codepoints must\n   either\
    \ be discarded or must have their DS codepoints modified to\n   acceptable values\
    \ before being forwarded.  For example, an ingress\n   node receiving traffic\
    \ from a domain with which no enhanced service\n   agreement exists may reset\
    \ the DS codepoint to the Default PHB\n   codepoint [DSFIELD].  Traffic authentication\
    \ may be required to\n   validate the use of some DS codepoints (e.g., those corresponding\
    \ to\n   enhanced services), and such authentication may be performed by\n   technical\
    \ means (e.g., IPsec) and/or non-technical means (e.g., the\n   inbound link is\
    \ known to be connected to exactly one customer site).\n   An inter-domain agreement\
    \ may reduce or eliminate the need for\n   ingress node traffic conditioning by\
    \ making the upstream domain\n   partly or completely responsible for ensuring\
    \ that traffic has DS\n   codepoints acceptable to the downstream domain.  In\
    \ this case, the\n   ingress node may still perform redundant traffic conditioning\
    \ checks\n   to reduce the dependence on the upstream domain (e.g., such checks\n\
    \   can prevent theft-of-service attacks from propagating across the\n   domain\
    \ boundary).  If such a check fails because the upstream domain\n   is not fulfilling\
    \ its responsibilities, that failure is an auditable\n   event; the generated\
    \ audit log entry should include the date/time the\n   packet was received, the\
    \ source and destination IP addresses, and the\n   DS codepoint that caused the\
    \ failure.  In practice, the limited gains\n   from such checks need to be weighed\
    \ against their potential\n   performance impact in determining what, if any,\
    \ checks to perform\n   under these circumstances.\n   Interior nodes in a DS\
    \ domain may rely on the DS field to associate\n   differentiated services traffic\
    \ with the behaviors used to implement\n   enhanced services.  Any node doing\
    \ so depends on the correct\n   operation of the DS domain to prevent the arrival\
    \ of traffic with\n   unacceptable DS codepoints.  Robustness concerns dictate\
    \ that the\n   arrival of packets with unacceptable DS codepoints must not cause\
    \ the\n   failure (e.g., crash) of network nodes.  Interior nodes are not\n  \
    \ responsible for enforcing the service provisioning policy (or\n   individual\
    \ SLAs) and hence are not required to check DS codepoints\n   before using them.\
    \  Interior nodes may perform some traffic\n   conditioning checks on DS codepoints\
    \ (e.g., check for DS codepoints\n   that are never used for traffic on a specific\
    \ link) to improve\n   security and robustness (e.g., resistance to theft-of-service\
    \ attacks\n   based on DS codepoint modifications).  Any detected failure of such\
    \ a\n   check is an auditable event and the generated audit log entry should\n\
    \   include the date/time the packet was received, the source and\n   destination\
    \ IP addresses, and the DS codepoint that caused the\n   failure.  In practice,\
    \ the limited gains from such checks need to be\n   weighed against their potential\
    \ performance impact in determining\n   what, if any, checks to perform at interior\
    \ nodes.\n   Any link that cannot be adequately secured against modification of\
    \ DS\n   codepoints or traffic injection by adversaries should be treated as a\n\
    \   boundary link (and hence any arriving traffic on that link is treated\n  \
    \ as if it were entering the domain at an ingress node).  Local\n   security policy\
    \ provides the definition of \"adequately secured,\" and\n   such a definition\
    \ may include a determination that the risks and\n   consequences of DS codepoint\
    \ modification and/or traffic injection do\n   not justify any additional security\
    \ measures for a link.  Link\n   security can be enhanced via physical access\
    \ controls and/or software\n   means such as tunnels that ensure packet integrity.\n"
- title: 6.2  IPsec and Tunneling Interactions
  contents:
  - "6.2  IPsec and Tunneling Interactions\n   The IPsec protocol, as defined in [ESP,\
    \ AH], does not include the IP\n   header's DS field in any of its cryptographic\
    \ calculations (in the\n   case of tunnel mode, it is the outer IP header's DS\
    \ field that is not\n   included).  Hence modification of the DS field by a network\
    \ node has\n   no effect on IPsec's end-to-end security, because it cannot cause\
    \ any\n   IPsec integrity check to fail.  As a consequence, IPsec does not\n \
    \  provide any defense against an adversary's modification of the DS\n   field\
    \ (i.e., a man-in-the-middle attack), as the adversary's\n   modification will\
    \ also have no effect on IPsec's end-to-end security.\n   In some environments,\
    \ the ability to modify the DS field without\n   affecting IPsec integrity checks\
    \ may constitute a covert channel; if\n   it is necessary to eliminate such a\
    \ channel or reduce its bandwidth,\n   the DS domains should be configured so\
    \ that the required processing\n   (e.g., set all DS fields on sensitive traffic\
    \ to a single value) can\n   be performed at DS egress nodes where traffic exits\
    \ higher security\n   domains.\n   IPsec's tunnel mode provides security for the\
    \ encapsulated IP\n   header's DS field.  A tunnel mode IPsec packet contains\
    \ two IP\n   headers: an outer header supplied by the tunnel ingress node and\
    \ an\n   encapsulated inner header supplied by the original source of the\n  \
    \ packet.  When an IPsec tunnel is hosted (in whole or in part) on a\n   differentiated\
    \ services network, the intermediate network nodes\n   operate on the DS field\
    \ in the outer header.  At the tunnel egress\n   node, IPsec processing includes\
    \ stripping the outer header and\n   forwarding the packet (if required) using\
    \ the inner header.     If\n   the inner IP header has not been processed by a\
    \ DS ingress node for\n   the tunnel egress node's DS domain, the tunnel egress\
    \ node is the DS\n   ingress node for traffic exiting the tunnel, and hence must\
    \ carry out\n   the corresponding traffic conditioning responsibilities (see Sec.\n\
    \   6.1).  If the IPsec processing includes a sufficiently strong\n   cryptographic\
    \ integrity check of the encapsulated packet (where\n   sufficiency is determined\
    \ by local security policy), the tunnel\n   egress node can safely assume that\
    \ the DS field in the inner header\n   has the same value as it had at the tunnel\
    \ ingress node.  This allows\n   a tunnel egress node in the same DS domain as\
    \ the tunnel ingress\n   node, to safely treat a packet passing such an integrity\
    \ check as if\n   it had arrived from another node within the same DS domain,\
    \ omitting\n   the DS ingress node traffic conditioning that would otherwise be\n\
    \   required.  An important consequence is that otherwise insecure links\n   internal\
    \ to a DS domain can be secured by a sufficiently strong IPsec\n   tunnel.\n \
    \  This analysis and its implications apply to any tunneling protocol\n   that\
    \ performs integrity checks, but the level of assurance of the\n   inner header's\
    \ DS field depends on the strength of the integrity\n   check performed by the\
    \ tunneling protocol.  In the absence of\n   sufficient assurance for a tunnel\
    \ that may transit nodes outside the\n   current DS domain (or is otherwise vulnerable),\
    \ the encapsulated\n   packet must be treated as if it had arrived at a DS ingress\
    \ node from\n   outside the domain.\n   The IPsec protocol currently requires\
    \ that the inner header's DS\n   field not be changed by IPsec decapsulation processing\
    \ at a tunnel\n   egress node.  This ensures that an adversary's modifications\
    \ to the\n   DS field cannot be used to launch theft- or denial-of-service attacks\n\
    \   across an IPsec tunnel endpoint, as any such modifications will be\n   discarded\
    \ at the tunnel endpoint.  This document makes no change to\n   that IPsec requirement.\n\
    \   If the IPsec specifications are modified in the future to permit a\n   tunnel\
    \ egress node to modify the DS field in an inner IP header based\n   on the DS\
    \ field value in the outer header (e.g., copying part or all\n   of the outer\
    \ DS field to the inner DS field), then additional\n   considerations would apply.\
    \  For a tunnel contained entirely within a\n   single DS domain and for which\
    \ the links are adequately secured\n   against modifications of the outer DS field,\
    \ the only limits on inner\n   DS field modifications would be those imposed by\
    \ the domain's service\n   provisioning policy.  Otherwise, the tunnel egress\
    \ node performing\n   such modifications would be acting as a DS ingress node\
    \ for traffic\n   exiting the tunnel and must carry out the traffic conditioning\n\
    \   responsibilities of an ingress node, including defense against theft-\n  \
    \ and denial-of-service attacks (See Sec. 6.1).  If the tunnel enters\n   the\
    \ DS domain at a node different from the tunnel egress node, the\n   tunnel egress\
    \ node may depend on the upstream DS ingress node having\n   ensured that the\
    \ outer DS field values are acceptable.  Even in this\n   case, there are some\
    \ checks that can only be performed by the tunnel\n   egress node (e.g., a consistency\
    \ check between the inner and outer DS\n   codepoints for an encrypted tunnel).\
    \  Any detected failure of such a\n   check is an auditable event and the generated\
    \ audit log entry should\n   include the date/time the packet was received, the\
    \ source and\n   destination IP addresses, and the DS codepoint that was unacceptable.\n\
    \   An IPsec tunnel can be viewed in at least two different ways from an\n   architectural\
    \ perspective.  If the tunnel is viewed as a logical\n   single hop \"virtual\
    \ wire\", the actions of intermediate nodes in\n   forwarding the tunneled traffic\
    \ should not be visible beyond the ends\n   of the tunnel and hence the DS field\
    \ should not be modified as part\n   of decapsulation processing.  In contrast,\
    \ if the tunnel is viewed as\n   a multi-hop participant in forwarding traffic,\
    \ then modification of\n   the DS field as part of tunnel decapsulation processing\
    \ may be\n   desirable.  A specific example of the latter situation occurs when\
    \ a\n   tunnel terminates at an interior node of a DS domain at which the\n  \
    \ domain administrator does not wish to deploy traffic conditioning\n   logic\
    \ (e.g., to simplify traffic management).  This could be\n   supported by using\
    \ the DS codepoint in the outer IP header (which was\n   subject to traffic conditioning\
    \ at the DS ingress node) to reset the\n   DS codepoint in the inner IP header,\
    \ effectively moving DS ingress\n   traffic conditioning responsibilities from\
    \ the IPsec tunnel egress\n   node to the appropriate upstream DS ingress node\
    \ (which must already\n   perform that function for unencapsulated traffic).\n"
- title: 6.3  Auditing
  contents:
  - "6.3  Auditing\n   Not all systems that support differentiated services will implement\n\
    \   auditing.  However, if differentiated services support is\n   incorporated\
    \ into a system that supports auditing, then the\n   differentiated services implementation\
    \ should also support auditing.\n   If such support is present the implementation\
    \ must allow a system\n   administrator to enable or disable auditing for differentiated\n\
    \   services as a whole, and may allow such auditing to be enabled or\n   disabled\
    \ in part.\n   For the most part, the granularity of auditing is a local matter.\n\
    \   However, several auditable events are identified in this document and\n  \
    \ for each of these events a minimum set of information that should be\n   included\
    \ in an audit log is defined.  Additional information (e.g.,\n   packets related\
    \ to the one that triggered the auditable event) may\n   also be included in the\
    \ audit log for each of these events, and\n   additional events, not explicitly\
    \ called out in this specification,\n   also may result in audit log entries.\
    \  There is no requirement for\n   the receiver to transmit any message to the\
    \ purported sender in\n   response to the detection of an auditable event, because\
    \ of the\n   potential to induce denial of service via such action.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   This document has benefitted from earlier drafts by\
    \ Steven Blake,\n   David Clark, Ed Ellesson, Paul Ferguson, Juha Heinanen, Van\
    \ Jacobson,\n   Kalevi Kilkki, Kathleen Nichols, Walter Weiss, John Wroclawski,\
    \ and\n   Lixia Zhang.\n   The authors would like to acknowledge the following\
    \ individuals for\n   their helpful comments and suggestions: Kathleen Nichols,\
    \ Brian\n   Carpenter, Konstantinos Dovrolis, Shivkumar Kalyana, Wu-chang Feng,\n\
    \   Marty Borden, Yoram Bernet, Ronald Bonica, James Binder, Borje\n   Ohlman,\
    \ Alessio Casati, Scott Brim, Curtis Villamizar, Hamid Ould-\n   Brahi, Andrew\
    \ Smith, John Renwick, Werner Almesberger, Alan O'Neill,\n   James Fu, and Bob\
    \ Braden.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [802.1p]    ISO/IEC Final CD 15802-3 Information technology\
    \ - Tele-\n               communications and information exchange between systems\
    \ -\n               Local and metropolitan area networks - Common\n          \
    \     specifications - Part 3: Media Access Control (MAC)\n               bridges,\
    \ (current draft available as IEEE P802.1D/D15).\n   [AH]        Kent, S. and\
    \ R. Atkinson, \"IP Authentication Header\", RFC\n               2402, November\
    \ 1998.\n   [ATM]       ATM Traffic Management Specification Version 4.0 <af-tm-\n\
    \               0056.000>, ATM Forum, April 1996.\n   [Bernet]    Y. Bernet, R.\
    \ Yavatkar, P. Ford, F. Baker, L. Zhang, K.\n               Nichols, and M. Speer,\
    \ \"A Framework for Use of RSVP with\n               Diff-serv Networks\", Work\
    \ in Progress.\n   [DSFIELD]   Nichols, K., Blake, S., Baker, F. and D. Black,\n\
    \               \"Definition of the Differentiated Services Field (DS\n      \
    \         Field) in the IPv4 and IPv6 Headers\", RFC 2474, December\n        \
    \       1998.\n   [EXPLICIT]  D. Clark and W. Fang, \"Explicit Allocation of Best\
    \ Effort\n               Packet Delivery Service\", IEEE/ACM Trans. on Networking,\n\
    \               vol. 6, no. 4, August 1998, pp. 362-373.\n   [ESP]       Kent,\
    \ S. and R. Atkinson, \"IP Encapsulating Security\n               Payload (ESP)\"\
    , RFC 2406, November 1998.\n   [FRELAY]    ANSI T1S1, \"DSSI Core Aspects of Frame\
    \ Rely\", March 1990.\n   [RFC791]    Postel, J., Editor, \"Internet Protocol\"\
    , STD 5, RFC 791,\n               September 1981.\n   [RFC1349]   Almquist, P.,\
    \ \"Type of Service in the Internet Protocol\n               Suite\", RFC 1349,\
    \ July 1992.\n   [RFC1633]   Braden, R., Clark, D. and S. Shenker, \"Integrated\n\
    \               Services in the Internet Architecture: An Overview\", RFC\n  \
    \             1633, July 1994.\n   [RFC1812]   Baker, F., Editor, \"Requirements\
    \ for IP Version 4\n               Routers\", RFC 1812, June 1995.\n   [RSVP]\
    \      Braden, B., Zhang, L., Berson S., Herzog, S. and S.\n               Jamin,\
    \ \"Resource ReSerVation Protocol (RSVP) -- Version 1\n               Functional\
    \ Specification\", RFC 2205, September 1997.\n   [2BIT]      K. Nichols, V. Jacobson,\
    \ and L. Zhang, \"A Two-bit\n               Differentiated Services Architecture\
    \ for the Internet\",\n               ftp://ftp.ee.lbl.gov/papers/dsarch.pdf,\
    \ November 1997.\n   [TR]        ISO/IEC 8802-5 Information technology -\n   \
    \            Telecommunications and information exchange between\n           \
    \    systems - Local and metropolitan area networks - Common\n               specifications\
    \ - Part 5: Token Ring Access Method and\n               Physical Layer Specifications,\
    \ (also ANSI/IEEE Std 802.5-\n               1995), 1995.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Steven Blake\n   Torrent Networking Technologies\n   3000\
    \ Aerial Center, Suite 140\n   Morrisville, NC  27560\n   Phone:  +1-919-468-8466\
    \ x232\n   EMail: slblake@torrentnet.com\n   David L. Black\n   EMC Corporation\n\
    \   35 Parkwood Drive\n   Hopkinton, MA  01748\n   Phone:  +1-508-435-1000 x76140\n\
    \   EMail: black_david@emc.com\n   Mark A. Carlson\n   Sun Microsystems, Inc.\n\
    \   2990 Center Green Court South\n   Boulder, CO  80301\n   Phone:  +1-303-448-0048\
    \ x115\n   EMail: mark.carlson@sun.com\n   Elwyn Davies\n   Nortel UK\n   London\
    \ Road\n   Harlow, Essex  CM17 9NA, UK\n   Phone:  +44-1279-405498\n   EMail:\
    \ elwynd@nortel.co.uk\n   Zheng Wang\n   Bell Labs Lucent Technologies\n   101\
    \ Crawfords Corner Road\n   Holmdel, NJ  07733\n   EMail: zhwang@bell-labs.com\n\
    \   Walter Weiss\n   Lucent Technologies\n   300 Baker Avenue, Suite 100\n   Concord,\
    \ MA  01742-2168\n   EMail: wweiss@lucent.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
