- title: __initial_text__
  contents:
  - '            The Intrusion Detection Exchange Protocol (IDXP)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes the Intrusion Detection Exchange Protocol (IDXP),\n\
    \   an application-level protocol for exchanging data between intrusion\n   detection\
    \ entities.  IDXP supports mutual-authentication, integrity,\n   and confidentiality\
    \ over a connection-oriented protocol.  The\n   protocol provides for the exchange\
    \ of IDMEF messages, unstructured\n   text, and binary data.  The IDMEF message\
    \ elements are described in\n   RFC 4765, \"The Intrusion Detection Message Exchange\
    \ Format (IDMEF)\",\n   a companion document of the Intrusion Detection Exchange\
    \ Format\n   Working Group (IDWG) of the IETF.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n           3.4.1. The IDXP-Greeting Element ..........................10\n\
    \           3.4.2. The Option Element .................................11\n  \
    \         3.4.3. The IDMEF-Message Element ..........................12\n   4.\
    \ IDXP Options ...................................................12\n      4.1.\
    \ The channelPriority Option ................................13\n      4.2. The\
    \ streamType Option .....................................14\n   5. Fulfillment\
    \ of IDWG Communications Protocol Requirements .......16\n      5.1. Reliable\
    \ Message Transmission .............................16\n      5.2. Interaction\
    \ with Firewalls ................................16\n      5.3. Mutual Authentication\
    \ .....................................16\n      5.4. Message Confidentiality\
    \ ...................................17\n      5.5. Message Integrity .........................................17\n\
    \      5.6. Per-Source Authentication .................................17\n  \
    \    5.7. Denial of Service .........................................18\n    \
    \  5.8. Message Duplication .......................................18\n   6. Extending\
    \ IDXP .................................................18\n   7. IDXP Option\
    \ Registration Template ..............................19\n   8. Initial Registrations\
    \ ..........................................19\n      8.1. Registration: The IDXP\
    \ Profile ............................19\n      8.2. Registration: The System\
    \ (Well-Known) TCP Port\n           Number for IDXP ...........................................19\n\
    \      8.3. Registration: The channelPriority Option ..................20\n  \
    \    8.4. Registration: The streamType Option .......................20\n   9.\
    \ The DTDs .......................................................20\n      9.1.\
    \ The IDXP DTD ..............................................20\n      9.2. The\
    \ channelPriority Option DTD ............................22\n      9.3. The streamType\
    \ DTD ........................................23\n   10. Reply Codes ...................................................24\n\
    \   11. Security Considerations .......................................25\n  \
    \    11.1. Use of the TUNNEL Profile ................................25\n    \
    \  11.2. Use of Underlying Security Profiles ......................25\n   12.\
    \ IANA Considerations ...........................................25\n   13. References\
    \ ....................................................26\n      13.1. Normative\
    \ References .....................................26\n      13.2. Informative\
    \ References ...................................26\n   14. Acknowledgements ..............................................26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IDXP is specified, in part, as a Blocks Extensible Exchange\
    \ Protocol\n   (BEEP) [4] \"profile\".  BEEP is a generic application protocol\n\
    \   framework for connection-oriented, asynchronous interactions.\n   Features\
    \ such as authentication and confidentiality are provided\n   through the use\
    \ of other BEEP profiles.  Accordingly, many aspects of\n   IDXP (e.g., confidentiality)\
    \ are provided within the BEEP framework.\n"
- title: 1.1.  Purpose
  contents:
  - "1.1.  Purpose\n   IDXP provides for the exchange of IDMEF [2] messages, unstructured\n\
    \   text, and binary data between intrusion detection entities.\n   Addressing\
    \ the security-sensitive nature of exchanges between\n   intrusion detection entities,\
    \ underlying BEEP security profiles\n   should be used to offer IDXP the required\
    \ set of security properties.\n   See Section 5 for a discussion of how IDXP fulfills\
    \ the IDWG\n   communications protocol requirements.  See Section 11 for a\n \
    \  discussion of security considerations.\n   IDXP is primarily intended for the\
    \ exchange of data created by\n   intrusion detection entities.  IDMEF [2] messages\
    \ should be used for\n   the structured representation of this intrusion detection\
    \ data,\n   although IDXP may be used to exchange unstructured text and binary\n\
    \   data.\n"
- title: 1.2.  Profiles
  contents:
  - "1.2.  Profiles\n   There are several BEEP profiles discussed, the first of which\
    \ we\n   define in this memo:\n      The IDXP Profile\n      The TUNNEL Profile\
    \ [3]\n      The Simple Authentication and Security Layer (SASL) Family of\n \
    \     Profiles (see Section 4.1 of [4])\n      The TLS Profile (see Section 3.1\
    \ of [4])\n"
- title: 1.3.  Terminology
  contents:
  - "1.3.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ BCP 14, RFC 2119 [1].\n   Throughout this memo, the terms \"analyzer\" and \"\
    manager\" are used in\n   the context of the Intrusion Detection Message Exchange\
    \ Requirements\n   [5].  In particular, Section 2.2 of [5] defines a collection\
    \ of\n   intrusion detection terms.\n   The terms \"peer\", \"initiator\", \"\
    listener\", \"client\", and \"server\",\n   and the characters \"I\", \"L\", \"\
    C\", and \"S\" are used in the context of\n   BEEP [4].  In particular, Section\
    \ 2.1 of BEEP discusses the roles\n   that a BEEP peer may perform.\n   The term\
    \ \"Document Type Definition\" is abbreviated as \"DTD\" and is\n   defined in\
    \ Section 2.8 of the Extensible Markup Language (XML) [7].\n   Note that the term\
    \ \"proxy\" is specific to IDXP and does not exist in\n   the context of BEEP.\
    \  The term \"intrusion detection\" is abbreviated\n   as \"ID\".\n"
- title: 2.  The Model
  contents:
  - '2.  The Model

    '
- title: 2.1.  Connection Provisioning
  contents:
  - "2.1.  Connection Provisioning\n   Intrusion detection entities using IDXP to\
    \ transfer data are termed\n   IDXP peers.  Peers can exist only in pairs, and\
    \ these pairs\n   communicate over a single BEEP session with one or more BEEP\
    \ channels\n   opened for transferring data.  Peers are either managers or\n \
    \  analyzers, as defined in Section 2.2 of [5].\n   The relationship between analyzers\
    \ and managers is potentially many-\n   to-many.  That is, an analyzer MAY communicate\
    \ with many managers;\n   similarly, a manager MAY communicate with many analyzers.\
    \  Likewise,\n   the relationship between different managers is potentially many-to-\n\
    \   many, so that a manager MAY receive the alerts sent by a large number\n  \
    \ of analyzers by receiving them through intermediate managers.\n   Analyzers\
    \ MUST NOT establish IDXP exchanges with other analyzers.\n   An IDXP peer wishing\
    \ to establish IDXP communications with another\n   IDXP peer does so by opening\
    \ a BEEP channel, which may entail\n   initiating a BEEP session.  A BEEP security\
    \ profile offering the\n   required security properties SHOULD initially be negotiated\
    \ (see\n   Section 11 for a discussion of security considerations).  Following\n\
    \   the successful negotiation of the BEEP security profile, IDXP\n   greetings\
    \ are exchanged and connection provisioning proceeds.\n   In the following sequence,\
    \ the peer 'Alice' initiates an IDXP\n   exchange with the peer 'Bob'.\n   Alice\
    \                                               Bob\n     ---------------- xport\
    \ connect(1) ------------------>\n    <-------------------- greeting ---------------------->\n\
    \    <-------------start security profile(2) ------------->\n    <--------------------\
    \ greeting ---------------------->\n    <------------------ start IDXP(3) ------------------->\n\
    \   Notes:\n   (1) 'Alice' initiates a transport connection to 'Bob', triggering\
    \ the\n       exchange of BEEP greeting messages.\n   (2) Both entities negotiate\
    \ the use of a BEEP security profile.\n   (3) Both entities negotiate the use\
    \ of the IDXP profile.\n   In between a pair of IDXP peers may be an arbitrary\
    \ number of\n   proxies.  A proxy may be necessary for administrative reasons,\
    \ such\n   as running on a firewall to allow restricted access.  Another use\n\
    \   might be one proxy per company department, which forwards data from\n   the\
    \ analyzer peers in the department onto a company-wide manager\n   peer.\n   A\
    \ BEEP tuning profile MAY be used to create an application-layer\n   tunnel that\
    \ transparently forwards data over a chain of proxies.  The\n   TUNNEL profile\
    \ [3] SHOULD be used for this purpose; see [3] for more\n   detail concerning\
    \ the options available to set up an application-\n   layer tunnel using TUNNEL,\
    \ and see Section 11.1 for a discussion of\n   TUNNEL-related security considerations.\
    \  TUNNEL MUST be offered as a\n   tuning profile for the creation of application-layer\
    \ tunnels.  The\n   TUNNEL profile MUST offer the use of some form of SASL authentication\n\
    \   (see Section 4.1 of [4]).  Once a tunnel has been created, a BEEP\n   security\
    \ profile offering the required security properties SHOULD be\n   negotiated,\
    \ followed by negotiation of the IDXP profile.\n   The following sequence shows\
    \ how TUNNEL might be used to create an\n   application-layer tunnel through which\
    \ IDXP would operate.  A peer\n   'Alice' initiates the creation of a BEEP session\
    \ using the IDXP\n   profile with the entity 'Bob' by first contacting 'proxy1'.\
    \  In the\n   greeting exchange between 'Alice' and 'proxy1', the TUNNEL profile\
    \ is\n   selected, and subsequently the use of the TUNNEL profile is extended\n\
    \   to reach through 'proxy2' to 'Bob'.\n   Alice              proxy1        \
    \       proxy2               Bob\n     -- xport connect -->\n    <---- greeting\
    \ ----->\n     -- start TUNNEL --->\n                         - xport connect(1)\
    \ ->\n                        <----- greeting ----->\n                       \
    \  --- start TUNNEL --->\n                                              --- xport\
    \ connect -->\n                                             <----- greeting ----->\n\
    \                                              --- start TUNNEL --->\n       \
    \                                      <----- <ok>(2) ------\n               \
    \         <------- <ok> -------\n    <------ <ok> -------\n    <-------------------------\
    \ greeting -------------------------->\n    <------------------ start security\
    \ profile ------------------->\n    <------------------------- greeting -------------------------->\n\
    \    <------------------------ start IDXP ------------------------->\n   Notes:\n\
    \   (1) Instead of immediately acknowledging the request from 'Alice' to\n   \
    \    start TUNNEL, 'proxy1' attempts to establish use of TUNNEL with\n       'proxy2'.\
    \  'proxy2' also delays its acknowledgment to 'proxy1'.\n   (2) 'Bob' acknowledges\
    \ the request from 'proxy2' to start TUNNEL, and\n       this acknowledgment propagates\
    \ back to 'Alice' so that a TUNNEL\n       application-layer tunnel is established\
    \ from 'Alice' to 'Bob'.\n"
- title: 2.2.  Data Transfer
  contents:
  - "2.2.  Data Transfer\n   Between a pair of ID entities communicating over a BEEP\
    \ session, one\n   or more BEEP channels MAY be opened using the IDXP profile.\
    \  If\n   desired, additional BEEP sessions MAY be established to offer\n   additional\
    \ channels using the IDXP profile.  However, in most\n   situations additional\
    \ channels using the IDXP profile SHOULD be\n   opened within an existing BEEP\
    \ session, as opposed to provisioning a\n   new BEEP session containing the additional\
    \ channels using the IDXP\n   profile.\n   Peers assume the role of client or\
    \ server on a per-channel basis,\n   with one acting as the client and the other\
    \ as the server.  A peer's\n   role of client or server is determined independent\
    \ of whether the\n   peer assumed the role of initiator or listener during the\
    \ BEEP\n   session establishment.  Clients and servers act as sources and sinks,\n\
    \   respectively, for exchanging data.\n   In a simple case, an analyzer peer\
    \ sends data to a manager peer.  For\n   example,\n   +----------+           \
    \               +----------+\n   |          |                          |     \
    \     |\n   |          |****** BEEP session ******|          |\n   |         \
    \ |                          |          |\n   | Analyzer | ----- IDXP profile\
    \ ----> | Manager  |\n   | (Client) |                          | (Server) |\n\
    \   |          |                          |          |\n   |          |**************************|\
    \          |\n   |          |                          |          |\n   +----------+\
    \                          +----------+\n   Use of multiple BEEP channels in a\
    \ BEEP session facilitates\n   categorization and prioritization of data sent\
    \ between IDXP peers.\n   For example, a manager 'M1', sending alert data to another\
    \ manager,\n   'M2', may choose to open a separate channel to exchange different\n\
    \   categories of alerts.  'M1' would act as the client on each of these\n   channels,\
    \ and manager 'M2' can then process and act on the incoming\n   alerts based on\
    \ their respective channel categorizations.  See\n   Section 4 for more detail\
    \ on how to incorporate categorization and/or\n   prioritization into channel\
    \ creation.\n   +----------+                                            +----------+\n\
    \   |          |                                            |          |\n   |\
    \          |*************** BEEP session ***************|          |\n   |   \
    \       |                                            |          |\n   |      \
    \    | -- IDXP profile, network-based alerts ---> |          |\n   | Manager \
    \ |                                            | Manager  |\n   |   M1     | ----\
    \ IDXP profile, host-based alerts ----> |   M2     |\n   | (Client) |        \
    \                                    | (Server) |\n   |          | ------ IDXP\
    \ profile, other alerts -------> |          |\n   |          |               \
    \                             |          |\n   |          |********************************************|\
    \          |\n   |          |                                            |   \
    \       |\n   +----------+                                            +----------+\n"
- title: 2.3.  Connection Teardown
  contents:
  - "2.3.  Connection Teardown\n   An IDXP peer may choose to close an IDXP channel\
    \ under many different\n   circumstances (e.g., an error in processing has occurred).\
    \  To close\n   a channel, the peer sends a \"close\" element (see Section 2.3.1.3\
    \ of\n   [4]) on channel zero indicating which channel is being closed.  An\n\
    \   IDXP peer may also choose to close an entire BEEP session by sending\n   a\
    \ \"close\" element indicating that channel zero is to be closed.\n   Section\
    \ 2.3.1.3 of [4] offers a more complete discussion of the\n   circumstances under\
    \ which a BEEP peer is permitted to close a channel\n   and the mechanisms for\
    \ doing so.\n   It is anticipated that due to the overhead of provisioning an\n\
    \   application-layer tunnel and/or a BEEP security profile, BEEP\n   sessions\
    \ containing IDXP channels will be long-lived.  In addition,\n   the repeated\
    \ overhead of IDXP channel provisioning (i.e., the\n   exchange of IDXP greetings)\
    \ may be avoided by keeping IDXP channels\n   open even while data is not actively\
    \ being exchanged on them.  These\n   are recommendations and, as such, IDXP peers\
    \ may choose to close and\n   re-provision BEEP sessions and/or IDXP channels\
    \ as they see fit.\n"
- title: 2.4.  Trust Model
  contents:
  - "2.4.  Trust Model\n   In our model, trust is placed exclusively in the IDXP peers.\
    \  Proxies\n   are always assumed to be untrustworthy.  A BEEP security profile\
    \ is\n   used to establish end-to-end security between pairs of IDXP peers,\n\
    \   doing away with the need to place trust in any intervening proxies.\n   Only\
    \ after successful negotiation of the underlying security profile\n   are IDXP\
    \ peers to be trusted.  Only BEEP security profiles offering\n   at least the\
    \ protections required by Section 5 of [5] should be used\n   to secure a BEEP\
    \ session containing channels using the IDXP profile.\n   See Section 3 of [4]\
    \ for the registration of the TLS profile, an\n   example of a BEEP security profile\
    \ meeting the requirements of\n   Section 5 of [5].  See Section 5 for a discussion\
    \ of how IDXP\n   fulfills the IDWG communications protocol requirements.\n"
- title: 3.  The IDXP Profile
  contents:
  - '3.  The IDXP Profile

    '
- title: 3.1.  IDXP Profile Overview
  contents:
  - "3.1.  IDXP Profile Overview\n   The IDXP profile provides a mechanism for exchanging\
    \ information\n   between intrusion detection entities.  A BEEP tuning profile\
    \ MAY be\n   used to create an application-layer tunnel that transparently\n \
    \  forwards data over a chain of proxies.  The TUNNEL profile [3] SHOULD\n   be\
    \ used for this purpose; see [3] for more detail concerning the\n   options available\
    \ to set up an application-layer tunnel using TUNNEL,\n   and see Section 11.1\
    \ for a discussion of TUNNEL-related security\n   considerations.  TUNNEL MUST\
    \ be offered as a tuning profile for the\n   creation of application-layer tunnels.\
    \  The TUNNEL profile MUST offer\n   the use of some form of SASL authentication\
    \ (see Section 4.1 of [4]).\n   The TLS profile SHOULD be used to provide the\
    \ required combination of\n   mutual-authentication, integrity, and confidentiality\
    \ for the IDXP\n   profile.  For further discussion of application-layer tunnel\
    \ and\n   security issues, see Sections 2.1 and 11.\n   The IDXP profile supports\
    \ several elements of interest:\n   o  The \"IDXP-Greeting\" element identifies\
    \ an analyzer or manager at\n      one end of a BEEP channel to the analyzer or\
    \ manager at the other\n      end of the channel.\n   o  The \"Option\" element\
    \ is used to convey optional channel parameters\n      between peers during the\
    \ exchange of \"IDXP-Greeting\" elements.\n      This element is OPTIONAL.\n \
    \  o  The \"IDMEF-Message\" element carries the structured information to\n  \
    \    be exchanged between the peers.\n"
- title: 3.2.  IDXP Profile Identification and Initialization
  contents:
  - "3.2.  IDXP Profile Identification and Initialization\n   The IDXP profile is\
    \ identified as\n      http://idxp.org/beep/profile\n   in the BEEP \"profile\"\
    \ element during channel creation.\n   During channel creation, \"IDXP-Greeting\"\
    \ elements MUST be mutually\n   exchanged between the peers.  An \"IDXP-Greeting\"\
    \ element MAY be\n   contained within the corresponding \"profile\" element in\
    \ the BEEP\n   \"start\" element.  Including an \"IDXP-Greeting\" element in the\
    \ initial\n   \"start\" element has exactly the same semantics as passing it as\
    \ the\n   first \"MSG\" message on the channel.  If channel creation is\n   successful,\
    \ then before sending the corresponding reply, the BEEP\n   peer processes the\
    \ \"IDXP-Greeting\" element and includes the resulting\n   response in the reply.\
    \  This response will be an \"ok\" element or an\n   \"error\" element.  The choice\
    \ of which element is returned is\n   dependent on local provisioning of the peer.\n"
- title: 3.3.  IDXP Profile Message Syntax
  contents:
  - "3.3.  IDXP Profile Message Syntax\n   BEEP messages in the profile MUST have\
    \ a MIME Content-Type [8] of\n   \"text/xml\", \"text/plain\", or \"application/octet-stream\"\
    .  The syntax\n   of the individual elements is specified in Section 9.1 of this\n\
    \   document and Section 4 of [2].\n"
- title: 3.4.  IDXP Profile Semantics
  contents:
  - "3.4.  IDXP Profile Semantics\n   Each BEEP peer issues the \"IDXP-Greeting\"\
    \ element using \"MSG\"\n   messages.  The \"IDXP-Greeting\" element MAY contain\
    \ one or more\n   \"Option\" sub-elements, conveying optional channel parameters.\
    \  Each\n   BEEP peer then issues \"ok\" in \"RPY\" messages or \"error\" in \"\
    ERR\"\n   messages.  (See Section 2.3.1 of [4] for the definitions of the\n  \
    \ \"error\" and \"ok\" elements.)  An \"error\" element MAY be issued within\n\
    \   a \"RPY\" message when piggy-backed within a BEEP \"profile\" element.\n \
    \  See Section 3.4.1 for an example of an \"error\" element being issued\n   within\
    \ a \"RPY\" message.  Based on the respective client/server roles\n   negotiated\
    \ during the exchange of \"IDXP-Greeting\" elements, the\n   client sends data\
    \ using \"MSG\" messages.  Depending on the MIME\n   Content-Type, this data may\
    \ be an \"IDMEF-Message\" element, plain\n   text, or binary.  The server then\
    \ issues \"ok\" in \"RPY\" messages or\n   \"error\" in \"ERR\" messages.\n"
- title: 3.4.1.  The IDXP-Greeting Element
  contents:
  - "3.4.1.  The IDXP-Greeting Element\n   The \"IDXP-Greeting\" element serves to\
    \ identify the analyzer or\n   manager at one end of the BEEP channel to the analyzer\
    \ or manager at\n   the other end of the channel.  The \"IDXP-Greeting\" element\
    \ MUST\n   include the role of the peer on the channel (client or server) and\n\
    \   the Uniform Resource Identifier (URI) [6] of the peer.  In addition,\n   the\
    \ \"IDXP-Greeting\" element MAY include the fully qualified domain\n   name (see\
    \ [9]) of the peer.  One or more \"Option\" sub-elements MAY be\n   present.\n\
    \   An \"IDXP-Greeting\" element MAY be sent by either peer at any time.\n   The\
    \ peer receiving the \"IDXP-Greeting\" MUST respond with an \"ok\"\n   (indicating\
    \ acceptance), or an \"error\" (indicating rejection).  A\n   peer's identity\
    \ and role on a channel and any optional channel\n   parameters are, in effect,\
    \ specified by the most recent \"IDXP-\n   Greeting\" it sent that was answered\
    \ with an \"ok\".\n   An \"IDXP-Greeting\" may be rejected (with an \"error\"\
    \ element) under\n   many circumstances.  These include, but are not limited to,\n\
    \   authentication failure, lack of authorization to connect under the\n   specified\
    \ role, the negotiation of an inadequate cipher suite, or the\n   presence of\
    \ a channel option that must be understood but was\n   unrecognized.\n   For example,\
    \ a successful creation with an embedded \"IDXP-Greeting\"\n   might look like\
    \ this:\n   I: MSG 0 10 . 1592 187\n   I: Content-Type: text/xml\n   I:\n   I:\
    \ <start number='1'>\n   I:   <profile uri='http://idxp.org/beep/profile'>\n \
    \  I:     <![CDATA[ <IDXP-Greeting uri='http://example.com/alice'\n   I:     \
    \  role='client' /> ]]>\n   I:   </profile>\n   I: </start>\n   I: END\n   L:\
    \ RPY 0 10 . 1865 91\n   L: Content-Type: text/xml\n   L:\n   L: <profile uri='http://idxp.org/beep/profile'>\n\
    \   L:   <![CDATA[ <ok /> ]]>\n   L: </profile>\n   L: END\n   L: MSG 0 11 . 1956\
    \ 61\n   L: Content-Type: text/xml\n   L:\n   L: <IDXP-Greeting uri='http://example.com/bob'\
    \ role='server' />\n   L: END\n   I: RPY 0 11 . 1779 7\n   I: Content-Type: text/xml\n\
    \   I:\n   I: <ok />\n   I: END\n   A creation with an embedded \"IDXP-Greeting\"\
    \ that fails might look\n   like this:\n   I: MSG 0 10 . 1776 185\n   I: Content-Type:\
    \ text/xml\n   I:\n   I: <start number='1'>\n   I:   <profile uri='http://idxp.org/beep/profile'>\n\
    \   I:     <![CDATA[ <IDXP-Greeting uri='http://example.com/eve'\n   I:      \
    \ role='client' /> ]]>\n   I:   </profile>\n   I: </start>\n   I: END\n   L: RPY\
    \ 0 10 . 1592 182\n   L: Content-Type: text/xml\n   L:\n   L: <profile uri='http://idxp.org/beep/profile'>\n\
    \   L:   <![CDATA[\n   L:     <error code='530'>'http://example.com/eve' must\
    \ first\n   L:       negotiate the TLS profile</error> ]]>\n   L: </profile>\n\
    \   L: END\n"
- title: 3.4.2.  The Option Element
  contents:
  - "3.4.2.  The Option Element\n   If present, the \"Option\" element MUST be contained\
    \ within an \"IDXP-\n   Greeting\" element.  An individual \"IDXP-Greeting\" element\
    \ MAY contain\n   one or more \"Option\" sub-elements.  Each \"Option\" element\
    \ within an\n   \"IDXP-Greeting\" element represents a request to enable an IDXP\
    \ option\n   on the channel being negotiated.  See Section 4 for a complete\n\
    \   description of IDXP options and the \"Option\" element.\n"
- title: 3.4.3.  The IDMEF-Message Element
  contents:
  - "3.4.3.  The IDMEF-Message Element\n   The \"IDMEF-Message\" element carries the\
    \ information to be exchanged\n   between the peers.  See Section 4 of [2] for\
    \ the definition of this\n   element.\n"
- title: 4.  IDXP Options
  contents:
  - "4.  IDXP Options\n   IDXP provides a service for the reliable exchange of data\
    \ between\n   intrusion detection entities.  Options are used to alter the\n \
    \  semantics of the service.\n   The specification of an IDXP option MUST define\n\
    \   o  the identity of the option;\n   o  what content, if any, is contained within\
    \ the option; and\n   o  the processing rules for the option.\n   An option registration\
    \ template (see Section 7) organizes this\n   information.\n   An \"Option\" element\
    \ is contained within an \"IDXP-Greeting\" element.\n   The \"IDXP-Greeting\"\
    \ element itself MAY contain one or more \"Option\"\n   elements.  The \"Option\"\
    \ element has several attributes and contains\n   arbitrary content:\n   o  the\
    \ \"internal\" and the \"external\" attributes, exactly one of which\n      MUST\
    \ be present, uniquely identify the option;\n   o  the \"mustUnderstand\" attribute,\
    \ whose presence is OPTIONAL and\n      whose default value is \"false\", specifies\
    \ whether the option, if\n      unrecognized, MUST cause an error in processing\
    \ to occur; and\n   o  the \"localize\" attribute, whose presence is OPTIONAL,\
    \ specifies\n      one or more language tokens, each identifying a desirable language\n\
    \      tag to be used if textual diagnostics are returned to the\n      originator.\n\
    \   The value of the \"internal\" attribute is the IANA-registered name for\n\
    \   the option.  If the \"internal\" attribute is not present, then the\n   value\
    \ of the \"external\" attribute is a URI or URI with a fragment-\n   identifier.\
    \  Note that a relative-URI value is not allowed.\n   The \"mustUnderstand\" attribute\
    \ specifies whether the peer may ignore\n   the option if it is unrecognized.\
    \  If the value of the\n   \"mustUnderstand\" attribute is \"true\", and if the\
    \ peer does not\n   recognize the option, then an error in processing has occurred.\
    \  When\n   absent, the value of the \"mustUnderstand\" attribute is defined to\
    \ be\n   \"false\".\n"
- title: 4.1.  The channelPriority Option
  contents:
  - "4.1.  The channelPriority Option\n   Section 8.3 contains the IDXP option registration\
    \ for the\n   \"channelPriority\" option.  This option contains a \"channelPriority\"\
    \n   element (see Section 9.2).\n   By default, IDXP does not place any requirements\
    \ on how peers should\n   manage multiple IDXP channels.  The \"channelPriority\"\
    \ option provides\n   a way for peers using multiple IDXP channels to request\
    \ relative\n   priorities for each channel.  When sending an \"IDXP-Greeting\"\
    \ element\n   during the provisioning of an IDXP channel, the originating peer\
    \ MAY\n   request that the remote peer assign a priority to the channel by\n \
    \  including an \"Option\" element containing a \"channelPriority\" element.\n\
    \   The \"channelPriority\" element has one attribute named \"priority\", of\n\
    \   range 0..2147483647.  This attribute is REQUIRED.  Not\n   coincidentally,\
    \ this is the maximum range of possible BEEP channel\n   numbers.  0 is defined\
    \ to represent the highest priority, with\n   relative priority decreasing as\
    \ the \"priority\" value ascends.\n   For example, during the exchange of \"IDXP-Greeting\"\
    \ elements during\n   channel provisioning, an analyzer successfully requests\
    \ that a\n   manager assign a priority to the channel:\n   analyzer          \
    \                                 manager\n      --------------- greeting w/ option\
    \ ----------------->\n      <---------------------- <ok> ------------------------\n\
    \   C: MSG 1 17 . 1984 165\n   C: Content-Type: text/xml\n   C:\n   C: <IDXP-Greeting\
    \ uri='http://example.com/alice' role='client'>\n   C:   <Option internal='channelPriority'>\n\
    \   C:     <channelPriority priority='0' />\n   C:   </Option>\n   C: </IDXP-Greeting>\n\
    \   C: END\n   S: RPY 1 17 . 2001 7\n   S: Content-Type: text/xml\n   S:\n   S:\
    \ <ok />\n   S: END\n   For example, during the exchange of \"IDXP-Greeting\"\
    \ elements during\n   channel provisioning, a manager unsuccessfully requests\
    \ that an\n   analyzer assign a priority to the channel:\n     analyzer      \
    \                                     manager\n       <---------------- greeting\
    \ w/ option ----------------\n        --------------------- <error> ---------------------->\n\
    \  S: MSG 1 17 . 1312 194\n  S: Content-Type: text/xml\n  S:\n  S: <IDXP-Greeting\
    \ uri='http://example.com/bob' role='server'>\n  S:   <Option internal='channelPriority'\
    \ mustUnderstand='true'>\n  S:     <channelPriority priority='2147483647' />\n\
    \  S:   </Option>\n  S: </IDXP-Greeting>\n  S: END\n  C: ERR 1 17 . 451 68\n \
    \ C: Content-Type: text/xml\n  C:\n  C: <error code='504'>'channelPriority' option\
    \ was unrecognized</error>\n  C: END\n"
- title: 4.2.  The streamType Option
  contents:
  - "4.2.  The streamType Option\n   Section 8.4 contains the IDXP option registration\
    \ for the\n   \"streamType\" option.  This option contains a \"streamType\" element\n\
    \   (see Section 9.3).\n   By default, IDXP provides no explicit method for categorizing\n\
    \   channels.  The \"streamType\" option provides a way for peers to\n   request\
    \ that a channel be categorized as a particular stream type.\n   When sending\
    \ an \"IDXP-Greeting\" element during the provisioning of an\n   IDXP channel,\
    \ the originating peer MAY request that the remote peer\n   assign a stream type\
    \ to the channel by including an \"Option\" element\n   containing a \"streamType\"\
    \ element.\n   The \"streamType\" element has one attribute named \"type\", with\
    \ the\n   possible values of \"alert\", \"heartbeat\", or \"config\".  This attribute\n\
    \   is REQUIRED.  A value of \"alert\" indicates that the channel should be\n\
    \   categorized as being used for the exchange of ID alerts.  A value of\n   \"\
    heartbeat\" indicates that the channel should be categorized as being\n   used\
    \ for the exchange of heartbeat messages such as the \"Heartbeat\"\n   element\
    \ (see Section 4 of [2]).  A value of \"config\" indicates that\n   the channel\
    \ should be categorized as being used for the exchange of\n   configuration messages.\n\
    \   For example, during the exchange of \"IDXP-Greeting\" elements during\n  \
    \ channel provisioning, an analyzer successfully requests that a\n   manager assign\
    \ a stream type to the channel:\n   analyzer                                 \
    \          manager\n      --------------- greeting w/ option ----------------->\n\
    \     <---------------------- <ok> ------------------------\n   C: MSG 1 21 .\
    \ 1963 155\n   C: Content-Type: text/xml\n   C:\n   C: <IDXP-Greeting uri='http://example.com/alice'\
    \ role='client'>\n   C:   <Option internal='streamType'>\n   C:     <streamType\
    \ type='alert' />\n   C:   </Option>\n   C: </IDXP-Greeting>\n   C: END\n   S:\
    \ RPY 1 21 . 1117 7\n   S: Content-Type: text/xml\n   S:\n   S: <ok />\n   S:\
    \ END\n   For example, during the exchange of \"IDXP-Greeting\" elements during\n\
    \   channel provisioning, a manager unsuccessfully requests that an\n   analyzer\
    \ assign a stream type to the channel:\n   analyzer                          \
    \                 manager\n     <---------------- greeting w/ option ----------------\n\
    \      --------------------- <error> ---------------------->\n   S: MSG 1 21 .\
    \ 1969 176\n   S: Content-Type: text/xml\n   S:\n   S: <IDXP-Greeting uri='http://example.com/bob'\
    \ role='server'>\n   S:   <Option internal='streamType' mustUnderstand='true'>\n\
    \   S:     <streamType type='config' />\n   S:   </Option>\n   S: </IDXP-Greeting>\n\
    \   S: END\n   C: ERR 1 21 . 1292 63\n   C: Content-Type: text/xml\n   C:\n  \
    \ C: <error code='504'>'streamType' option was unrecognized</error>\n   C: END\n"
- title: 5.  Fulfillment of IDWG Communications Protocol Requirements
  contents:
  - "5.  Fulfillment of IDWG Communications Protocol Requirements\n   The following\
    \ lists each of the communications protocol requirements\n   established in Section\
    \ 5 of [5] and, for each requirement, describes\n   the manner in which it is\
    \ fulfilled.  IDXP itself does not fulfill\n   each of the communications protocol\
    \ requirements, but instead relies\n   on the underlying BEEP protocol and a variety\
    \ of BEEP profiles.\n"
- title: 5.1.  Reliable Message Transmission
  contents:
  - "5.1.  Reliable Message Transmission\n   \"The [protocol] MUST support reliable\
    \ transmission of messages.\"  See\n   Section 5.1 of [5].\n      IDXP operates\
    \ over BEEP, which operates only over reliable\n      connection-oriented transport\
    \ protocols (e.g., TCP).  In addition,\n      BEEP peers communicate using a simple\
    \ request-response protocol,\n      which provides end-to-end reliability between\
    \ peers.\n"
- title: 5.2.  Interaction with Firewalls
  contents:
  - "5.2.  Interaction with Firewalls\n   \"The [protocol] MUST support transmission\
    \ of messages between ID\n   components across firewall boundaries without compromising\
    \ security.\"\n   See Section 5.2 of [5].\n      The TUNNEL profile [3] MUST be\
    \ offered as an option for creation\n      of application-layer tunnels to allow\
    \ operation across firewalls.\n      The TUNNEL profile SHOULD be used to provide\
    \ an application-layer\n      tunnel.  The ability to authenticate hosts during\
    \ the creation of\n      an application-layer tunnel MUST be provided by the mechanism\n\
    \      chosen to create such tunnels.  A firewall may therefore be\n      configured\
    \ to authenticate all hosts attempting to tunnel into the\n      protected network.\
    \  If the TUNNEL profile is used, SASL (see\n      Section 4.1 of [4]) MUST be\
    \ offered as a mechanism by which hosts\n      can be authenticated.\n"
- title: 5.3.  Mutual Authentication
  contents:
  - "5.3.  Mutual Authentication\n   \"The [protocol] MUST support mutual authentication\
    \ of the analyzer\n   and the manager to each other.\"  See Section 5.3 of [5].\n\
    \      IDXP supports mutual authentication of the peers through the use\n    \
    \  of an appropriate underlying BEEP security profile.  The TLS\n      profile\
    \ and members of the SASL family of profiles (see Section\n      4.1 of [4]) are\
    \ examples of security profiles that may be used to\n      authenticate the identity\
    \ of communicating ID components.  TLS\n      MUST be offered as a mechanism to\
    \ provide mutual authentication,\n      and TLS SHOULD be used to provide mutual\
    \ authentication.\n"
- title: 5.4.  Message Confidentiality
  contents:
  - "5.4.  Message Confidentiality\n   \"The [protocol] MUST support confidentiality\
    \ of the message content\n   during message exchange.  The selected design MUST\
    \ be capable of\n   supporting a variety of encryption algorithms and MUST be\
    \ adaptable\n   to a wide variety of environments.\"  See Section 5.4 of [5].\n\
    \      IDXP supports confidentiality through the use of an appropriate\n     \
    \ underlying BEEP security profile.  The TLS profile is an example\n      of a\
    \ security profile that offers confidentiality.  The TLS\n      profile with the\
    \ TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA cipher suite\n      MUST be offered as a mechanism\
    \ to provide confidentiality, and TLS\n      with this cipher suite SHOULD be\
    \ used to provide confidentiality.\n      The TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\
    \ cipher suite uses ephemeral\n      Diffie-Hellman (DHE) with DSS signatures\
    \ for key exchange and\n      triple DES (Data Encryption Standard) (3DES) and\
    \ cipher-block\n      chaining (CBC) for encryption.  Stronger cipher suites are\n\
    \      optional.\n"
- title: 5.5.  Message Integrity
  contents:
  - "5.5.  Message Integrity\n   \"The [protocol] MUST ensure the integrity of the\
    \ message content.\n   The selected design MUST be capable of supporting a variety\
    \ of\n   integrity mechanisms and MUST be adaptable to a wide variety of\n   environments.\"\
    \  See Section 5.5 of [5].\n      IDXP supports message integrity through the\
    \ use of an appropriate\n      underlying BEEP security profile.  The TLS profile\
    \ and members of\n      the SASL family of profiles (see Section 4.1 of [4]) are\
    \ examples\n      of security profiles that offer message integrity.  The TLS\n\
    \      profile with the TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA cipher suite\n     \
    \ MUST be offered as a mechanism to provide integrity, and TLS with\n      this\
    \ cipher suite SHOULD be used to provide integrity.  The\n      TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\
    \ cipher suite uses the Secure\n      Hash Algorithm (SHA) for integrity protection\
    \ using a keyed\n      message authentication code.  Stronger cipher suites are\
    \ optional.\n"
- title: 5.6.  Per-Source Authentication
  contents:
  - "5.6.  Per-Source Authentication\n   \"The [protocol] MUST support separate authentication\
    \ keys for each\n   sender.\"  See Section 5.6 of [5].\n      IDXP supports separate\
    \ authentication keys for each sender (i.e.,\n      per-source authentication)\
    \ through the use of an appropriate\n      underlying BEEP security profile. \
    \ The TLS profile is an example\n      of a security profile that supports per-source\
    \ authentication\n      through the mutual authentication of public-key certificates.\
    \  TLS\n      MUST be offered as a mechanism to provide per-source\n      authentication,\
    \ and TLS SHOULD be used to provide per-source\n      authentication.\n"
- title: 5.7.  Denial of Service
  contents:
  - "5.7.  Denial of Service\n   \"The [protocol] SHOULD resist protocol denial-of-service\
    \ attacks.\"\n   See Section 5.7 of [5].\n      IDXP supports resistance to denial\
    \ of service (DoS) attacks\n      through the use of an appropriate underlying\
    \ BEEP security\n      profile.  BEEP peers offering the IDXP profile MUST offer\
    \ the use\n      of TLS with the TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA cipher suite,\n\
    \      and SHOULD use TLS with that cipher suite.  To resist DoS attacks\n   \
    \   it is helpful to discard traffic arising from a non-authenticated\n      source.\
    \  BEEP peers MUST support the use of authentication in\n      conjunction with\
    \ any mechanism used to create application-layer\n      tunnels.  In particular,\
    \ the use of some form of SASL\n      authentication (see Section 4.1 of [4])\
    \ MUST be offered to provide\n      authentication in the use of the TUNNEL profile.\
    \  See Section 7 of\n      [3] for a discussion of security considerations in\
    \ the use of the\n      TUNNEL profile.\n"
- title: 5.8.  Message Duplication
  contents:
  - "5.8.  Message Duplication\n   \"The [protocol] SHOULD resist malicious duplication\
    \ of messages.\"\n   See Section 5.8 of [5].\n      IDXP supports resistance to\
    \ malicious duplication of messages\n      (i.e., replay attacks) through the\
    \ use of an appropriate\n      underlying BEEP security profile.  The TLS profile\
    \ is an example\n      of a security profile offering resistance to replay attacks.\
    \  The\n      TLS profile with the TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA cipher\n\
    \      suite MUST be offered as a mechanism to provide resistance against\n  \
    \    replay attacks, and TLS with this cipher suite SHOULD be used to\n      provide\
    \ resistance against replay attacks.  The\n      TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\
    \ cipher suite uses cipher-block\n      chaining (CBC) to ensure that even if\
    \ a message is duplicated the\n      cipher-text duplicate will produce a very\
    \ different plain-text\n      result.  Stronger cipher suites are optional.\n"
- title: 6.  Extending IDXP
  contents:
  - "6.  Extending IDXP\n   The specification of IDXP options (see Section 4) is the\
    \ preferred\n   method of extending IDXP.  In order to extend IDXP, an IDXP option\n\
    \   SHOULD be documented in an RFC and MUST be registered with the IANA\n   (see\
    \ Section 7).  IDXP extensions that cannot be expressed as IDXP\n   options MUST\
    \ be documented in an RFC.\n"
- title: 7.  IDXP Option Registration Template
  contents:
  - "7.  IDXP Option Registration Template\n   When an IDXP option is registered,\
    \ the following information is\n   supplied:\n   Option Identification: specify\
    \ the NMTOKEN or the URI that\n   authoritatively identifies this option.\n  \
    \ Contains: specify the XML content that is contained within the\n   \"Option\"\
    \ element.\n   Processing Rules: specify the processing rules associated with\
    \ the\n   option.\n   Contact Information: specify the postal and electronic contact\n\
    \   information for the author(s) of the option.\n"
- title: 8.  Initial Registrations
  contents:
  - '8.  Initial Registrations

    '
- title: '8.1.  Registration: The IDXP Profile'
  contents:
  - "8.1.  Registration: The IDXP Profile\n   Profile identification: http://idxp.org/beep/profile\n\
    \   Messages exchanged during channel creation: \"IDXP-Greeting\"\n   Messages\
    \ starting one-to-one exchanges: \"IDXP-Greeting\", \"IDMEF-\n   Message\"\n \
    \  Messages in positive replies: \"ok\"\n   Messages in negative replies: \"error\"\
    \n   Messages in one-to-many exchanges: none\n   Message syntax: see Section 3.3\n\
    \   Message semantics: see Section 3.4\n   Contact information: see the \"Authors'\
    \ Addresses\" section of this\n   memo\n"
- title: '8.2.  Registration: The System (Well-Known) TCP Port Number for IDXP'
  contents:
  - "8.2.  Registration: The System (Well-Known) TCP Port Number for IDXP\n   Protocol\
    \ Number: 603\n   Message Formats, Types, Opcodes, and Sequences: see Section\
    \ 3.3\n   Functions: see Section 3.4\n   Use of Broadcast/Multicast: none\n  \
    \ Proposed Name: Intrusion Detection Exchange Protocol\n   Short name: idxp\n\
    \   Contact Information: see the \"Authors' Addresses\" section of this\n   memo\n"
- title: '8.3.  Registration: The channelPriority Option'
  contents:
  - "8.3.  Registration: The channelPriority Option\n   Option Identification: channelPriority\n\
    \   Contains: channelPriority (see Section 9.2)\n   Processing Rules: see Section\
    \ 4.1\n   Contact Information: see the \"Authors' Addresses\" section of this\n\
    \   memo\n"
- title: '8.4.  Registration: The streamType Option'
  contents:
  - "8.4.  Registration: The streamType Option\n   Option Identification: streamType\n\
    \   Contains: streamType (see Section 9.3)\n   Processing Rules: see Section 4.2\n\
    \   Contact Information: see the \"Authors' Addresses\" section of this\n   memo\n"
- title: 9.  The DTDs
  contents:
  - '9.  The DTDs

    '
- title: 9.1.  The IDXP DTD
  contents:
  - "9.1.  The IDXP DTD\n   The following is the DTD defining the valid elements for\
    \ the IDXP\n   profile.\n     <!--\n     DTD for the IDXP Profile\n     Refer\
    \ to this DTD as:\n       <!ENTITY % IDXP PUBLIC \"-//IETF//DTD RFC 4767 IDXP\
    \ v1.0//EN\">\n       %IDXP;\n     -->\n     <!-- Includes -->\n       <!ENTITY\
    \ % BEEP PUBLIC \"-//IETF//DTD BEEP//EN\">\n       %BEEP;\n       <!ENTITY % IDMEF-Message\
    \ PUBLIC\n                                 \"-//IETF//DTD RFC 4765 IDMEF v1.0//EN\"\
    >\n       %IDMEF;\n     <!--\n       Profile Summary\n         BEEP profile http://idxp.org/beep/profile\n\
    \         role       MSG               RPY      ERR\n         ====       === \
    \              ===      ===\n         I or L     IDXP-Greeting     ok       error\n\
    \         C          IDMEF-Message     ok       error\n     -->\n     <!--\n \
    \      Entity Definitions\n             entity        syntax/reference     example\n\
    \             ======        ================     =======\n         an authoritative\
    \ identification\n             URI           see RFC 3986 [6]     http://example.com\n\
    \         a fully qualified domain name\n             FQDN          see RFC 1034\
    \ [9]     www.example.com\n     -->\n     <!ENTITY % URI      \"CDATA\">\n   \
    \  <!ENTITY % FQDN     \"CDATA\">\n     <!--\n       The IDXP-Greeting element\
    \ declares the role and identity of\n       the peer issuing it, on a per-channel\
    \ basis. The\n       IDXP-Greeting element may contain one or more Option\n  \
    \     sub-elements.\n     -->\n   <!ELEMENT IDXP-Greeting  (Option*)>\n   <!ATTLIST\
    \ IDXP-Greeting\n             uri            %URI;                #REQUIRED\n\
    \             role           (client|server)      #REQUIRED\n             fqdn\
    \           %FQDN;               #IMPLIED>\n     <!--\n       The Option element\
    \ conveys an IDXP channel option.\n       Note that the %LOCS entity is imported\
    \ from the BEEP Channel\n       Management DTD.\n     -->\n   <!ELEMENT Option\
    \ (ANY)>\n   <!ATTLIST Option\n             internal       NMTOKEN           \
    \   \"\"\n             external       %URI;                \"\"\n            \
    \ mustUnderstand (true|false)         \"false\"\n             localize       %LOCS;\
    \               \"i-default\">\n     <!--\n       The IDMEF-Message element conveys\
    \ the intrusion detection\n       information that is exchanged.  This element\
    \ is defined in the\n       idmef-message.dtd\n     -->\n   <!-- End of DTD -->\n"
- title: 9.2.  The channelPriority Option DTD
  contents:
  - "9.2.  The channelPriority Option DTD\n   The following is the DTD defining the\
    \ valid elements for the\n   channelPriority option.\n     <!--\n     DTD for\
    \ the channelPriority IDXP option, as of 2002-01-08\n     Refer to this DTD as:\n\
    \       <!ENTITY % IDXP-channelPriority PUBLIC\n         \"-//IETF//DTD RFC 4767\
    \ IDXP-channelPriority v1.0//EN\">\n       %IDXP-channelPriority;\n     -->\n\
    \     <!--\n       Entity Definitions\n             entity        syntax/reference\
    \     example\n             ======        ================     =======\n     \
    \  a priority number\n             PRIORITY      0..2147483647        1\n    \
    \ -->\n   <!ENTITY % PRIORITY          \"CDATA\">\n   <!ELEMENT channelPriority\
    \    EMPTY>\n   <!ATTLIST channelPriority\n             priority           %PRIORITY\
    \    #REQUIRED>\n   <!-- End of DTD -->\n"
- title: 9.3.  The streamType DTD
  contents:
  - "9.3.  The streamType DTD\n   The following is the DTD defining the valid elements\
    \ for the\n   streamType option.\n     <!--\n     DTD for the streamType IDXP\
    \ option, as of 2002-01-08\n     Refer to this DTD as:\n       <!ENTITY % IDXP-streamType\
    \ PUBLIC\n         \"-//IETF//DTD RFC 4767 IDXP-streamType v1.0//EN\">\n     \
    \  %IDXP-streamType;\n     -->\n     <!--\n       Entity Definitions\n       \
    \      entity        syntax/reference                example\n             ======\
    \        ================                =======\n        a stream type\n    \
    \         STYPE         (alert | heartbeat | config)    \"alert\"\n     -->\n\
    \   <!ENTITY % STYPE        (alert|heartbeat|config)>\n   <!ELEMENT streamType\
    \    EMPTY>\n   <!ATTLIST streamType\n             type          %STYPE    #REQUIRED>\n\
    \   <!-- End of DTD -->\n"
- title: 10.  Reply Codes
  contents:
  - "10.  Reply Codes\n   This section lists the three-digit error codes the IDXP\
    \ profile may\n   generate.\n   code    meaning\n   ====    =======\n   421  \
    \   Service not available\n           (e.g., the peer does not have sufficient\
    \ resources)\n   450     Requested action not taken\n           (e.g., DNS lookup\
    \ failed or connection could not\n            be established.  See also 550.)\n\
    \   454     Temporary authentication failure\n   500     General syntax error\n\
    \           (e.g., poorly-formed XML)\n   501     Syntax error in parameters\n\
    \           (e.g., non-valid XML)\n   504     Parameter not implemented\n   530\
    \     Authentication required\n   534     Authentication mechanism insufficient\n\
    \           (e.g., cipher suite too weak, sequence exhausted)\n   535     Authentication\
    \ failure\n   537     Action not authorized for user\n   550     Requested action\
    \ not taken\n           (e.g., peer could be contacted, but\n            malformed\
    \ greeting or no IDXP profile advertised)\n   553     Parameter invalid\n   554\
    \     Transaction failed\n           (e.g., policy violation)\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   The IDXP profile is a profile of BEEP.  In BEEP,\
    \ transport security,\n   user authentication, and data exchange are orthogonal.\
    \  Refer to\n   Section 9 of [4] for a discussion of this.  It is strongly\n \
    \  recommended that those wanting to use the IDXP profile initially\n   negotiate\
    \ a BEEP security profile between the peers that offers the\n   required security\
    \ properties.  The TLS profile SHOULD be used to\n   provide for transport security.\
    \  See Section 5 for a discussion of\n   how IDXP fulfills the IDWG communications\
    \ protocol requirements.\n   See Section 2.4 for a discussion of the trust model.\n"
- title: 11.1.  Use of the TUNNEL Profile
  contents:
  - "11.1.  Use of the TUNNEL Profile\n   See Section 5 for IDXP's requirements on\
    \ application-layer tunneling\n   and the TUNNEL profile specifically.  See Section\
    \ 7 of [3] for a\n   discussion of the security considerations inherent in the\
    \ use of the\n   TUNNEL profile.\n"
- title: 11.2.  Use of Underlying Security Profiles
  contents:
  - "11.2.  Use of Underlying Security Profiles\n   At present, the TLS profile is\
    \ the only BEEP security profile known\n   to meet all of the requirements set\
    \ forth in Section 5 of [5].  When\n   securing a BEEP session with the TLS profile,\
    \ the\n   TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA cipher suite offers an acceptable\n\
    \   level of security.  See Section 5 for a discussion of how IDXP\n   fulfills\
    \ the IDWG communications requirements through the use of an\n   underlying security\
    \ profile.\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   The IANA registered \"idxp\" as a TCP port number\
    \ as specified in\n   Section 8.2.\n   The IANA maintains a list of:\n      IDXP\
    \ options, see Section 7.\n   For this list, the IESG is responsible for assigning\
    \ a designated\n   expert to review the specification prior to the IANA making\
    \ the\n   assignment.  As a courtesy to developers of non-standards track IDXP\n\
    \   options, the mailing list idxp-discuss@lists.idxp.org may be used to\n   solicit\
    \ commentary.\n   IANA made the registrations specified in Sections 8.3 and 8.4.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n \
    \  [2]  Debar, H., Curry, D., and B. Feinstein, \"The Intrusion Detection\n  \
    \      Message Exchange Format (IDMEF)\", RFC 4765, March 2007.\n   [3]  New,\
    \ D., \"The TUNNEL Profile\", RFC 3620, October 2003.\n   [4]  Rose, M., \"The\
    \ Blocks Extensible Exchange Protocol Core\", RFC\n        3080, March 2001.\n\
    \   [5]  Wood, M. and M. Erlinger, \"Intrusion Detection Message Exchange\n  \
    \      Requirements\", RFC 4766, March 2007.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [6]  Berners-Lee, T., Fielding, R., and L.\
    \ Masinter, \"Uniform\n        Resource Identifier (URI): Generic Syntax\", STD\
    \ 66, RFC 3986,\n        January 2005.\n   [7]  Bray, T., Paoli, J., Sperberg-McQueen,\
    \ C. and E. Maler,\n        \"Extensible Markup Language (XML) 1.0 (2nd ed)\"\
    , W3C REC-xml,\n        October 2000, <http://www.w3.org/TR/REC-xml>.\n   [8]\
    \  Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n        Extensions\
    \ (MIME) Part Two: Media Types\", RFC 2046, November\n        1996.\n   [9]  Mockapetris,\
    \ P., \"Domain names - concepts and facilities\", STD\n        13, RFC 1034, November\
    \ 1987.\n"
- title: 14.  Acknowledgements
  contents:
  - "14.  Acknowledgements\n   The authors gratefully acknowledge the contributions\
    \ of Darren New,\n   Marshall T. Rose, Roy Pollock, Tim Buchheim, Mike Erlinger,\
    \ John C.\n   C. White, and Paul Osterwald.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Benjamin S. Feinstein\n   SecureWorks, Inc.\n   PO Box\
    \ 95007\n   Atlanta, GA 30347\n   US\n   Phone: +1 404 327-6339\n   Email: bfeinstein@acm.org\n\
    \   URI:   http://www.secureworks.com/\n   Gregory A. Matthews\n   CSC/NASA Ames\
    \ Research Center\n   EMail: gmatthew@nas.nasa.gov\n   URI:   http://www.nas.nasa.gov/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
