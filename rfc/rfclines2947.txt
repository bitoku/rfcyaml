Abstract This document specifies how to use the Triple DES (data encryption standard) encryption algorithm in cipher feedback mode with the telnet encryption option.
Command Names and Codes Encryption
Command Meanings IAC SB ENCRYPT IS DES3 CFB64 CFB64 IV <initial vector>
The sender of this command generates a random 8 byte initial vector, and sends it to the other side of the connection using the CFB64 IV command.
The initial vector is sent in clear text.
Only the side of the connection that is WILL ENCRYPT may send the CFB64 IV command.
IAC SB ENCRYPT REPLY DES3 CFB64
IV OK IAC SE IAC SB ENCRYPT REPLY
The sender of these commands either accepts or rejects the initial vector received in a CFB64 IV command.
Only the side of the connection that is DO ENCRYPT may send the CFB64 IV OK and CFB64 IV BAD commands.
The CFB64 IV OK command MUST be sent for backwards compatibility with existing implementations; there really isn't any reason why a sender would need to send the CFB64 IV BAD command except in the case of a protocol violation where the IV sent was not of the correct length (i.e., 8 bytes).
Once a CFB64 IV OK command has been received, the WILL ENCRYPT side of the connection should do keyid negotiation using the ENC KEYID command.
Once the keyid negotiation has successfully identified a common keyid, then START and END commands may be sent by the side of the connection that is WILL ENCRYPT.
Data will be encrypted using the DES3 64 bit Cipher Feedback algorithm.
If encryption (decryption) is turned off and back on again, and the same keyid is used when re starting the encryption (decryption), the intervening clear text must not change the state of the encryption (decryption) machine.
If a START command is sent (received) with a different keyid, the encryption (decryption) machine must be re initialized immediately following the end of the START command with the new key and the initial vector sent (received) in the last CFB64 IV command.
If a new CFB64 IV command is sent (received), and encryption (decryption) is enabled, the encryption (decryption) machine must be re initialized immediately following the end of the CFB64 IV command with the new initial vector, and the keyid sent (received) in the last START command.
If encryption (decryption) is not enabled when a CFB64 IV command is sent (received), the encryption (decryption) machine must be re  initialized after the next START command, with the keyid sent (received) in that START command, and
the initial vector sent (received) in this CFB64 IV command. 4.
iV: Initial vector, 64 bits (8 bytes) long.
Dn: the nth chunk of 64 bits (8 bytes) of data to encrypt (decrypt).
On: the nth chunk of 64 bits (8 bytes) of encrypted (decrypted) output.
V0   DES e(DES d(DES e(iV, key1),key2),key3)
Vn V(n 1)   DES e(DES d(DES e(On, key1),key2),key3) 5.
Integration with the AUTHENTICATION telnet option As noted in the telnet ENCRYPTION option specifications, a keyid value of zero indicates the default encryption key, as might be derived from the telnet AUTHENTICATION option.
If the default encryption key negotiated as a result of the telnet AUTHENTICATION option contains less than 16 bytes, then the DES3 CFB64 option must not be offered or used as a valid telnet encryption option.
When two keys are available: .
data sent from the server is encrypted with key1, decrypted with key2, and encrypted with key1; .
data sent from the client is encrypted with key2, decrypted with key1, and encrypted with key2 When three keys are available: .
data sent from the server is encrypted with key1, decrypted with key2, and encrypted with key3; .
data sent from the client is encrypted with key2, decrypted with key3, and encrypted with key1 When four keys are available: .
data sent from the server is encrypted with key1, decrypted with key2, and encrypted with key3; .
data sent from the client is encrypted with key2, decrypted with key4, and encrypted with key1 When five keys are available: .
data sent from the server is encrypted with key1, decrypted with key2, and encrypted with key3; .
data sent from the client is encrypted with key2, decrypted with key4, and encrypted with key5 When six keys are available: .
data sent from the server is encrypted with key1, decrypted with key2, and encrypted with key3; .
data sent from the client is encrypted with key4, decrypted with key5, and encrypted with key6 In all cases, the keys used by DES3 CFB64 must have their parity corrected after they are determined using the above algorithm.
Note that the above algorithm assumes that it is safe to use a non DES key (or part of a non DES key) as a DES key.
This is not necessarily true of all cipher systems, but we specify this behaviour as the default since it is true for most authentication systems in popular use today, and for compatibility with existing implementations.
New telnet AUTHENTICATION mechanisms may specify alternative methods for determining the keys to be used for this cipher suite in their specification, if the session key negotiated by that authentication mechanism is not a DES key and and where this algorithm may not be safely used.
Security Considerations Encryption using Cipher Feedback does not ensure data integrity; the active attacker has a limited ability to modify text, if he can predict the clear text that was being transmitted.
The limitations faced by the attacker (that only 8 bytes can be modified at a time, and the following 8 byte block of data will be corrupted, thus making detection likely) are significant, but it is possible that an active attacker still might be able to exploit this weakness.
The tradeoff here is that adding a message authentication code (MAC) will significantly increase the number of bytes needed to send a single character in the telnet protocol, which will impact performance on slow (i.e. dialup) links.
