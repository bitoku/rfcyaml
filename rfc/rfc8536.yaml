- contents:
  - '                The Time Zone Information Format (TZif)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies the Time Zone Information Format (TZif)
    for\n   representing and exchanging time zone information, independent of any\n
    \  particular service or protocol.  Two media types for this format are\n   also
    defined.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8536.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . .   3\n   3.  The Time Zone Information Format (TZif) . . . . . . . . . .
    .   5\n     3.1.  TZif Header . . . . . . . . . . . . . . . . . . . . . . .   6\n
    \    3.2.  TZif Data Block . . . . . . . . . . . . . . . . . . . . .   8\n     3.3.
    \ TZif Footer . . . . . . . . . . . . . . . . . . . . . . .  12\n       3.3.1.
    \ TZ String Extensions  . . . . . . . . . . . . . . . .  13\n   4.  Interoperability
    Considerations . . . . . . . . . . . . . . .  13\n   5.  Use with the Time Zone
    Data Distribution Service  . . . . . .  14\n     5.1.  Truncating TZif Files .
    . . . . . . . . . . . . . . . . .  15\n     5.2.  Example TZDIST Request for TZif
    Data  . . . . . . . . . .  15\n   6.  Security Considerations . . . . . . . .
    . . . . . . . . . . .  17\n   7.  Privacy Considerations  . . . . . . . . . .
    . . . . . . . . .  17\n   8.  IANA Considerations . . . . . . . . . . . . . .
    . . . . . . .  17\n     8.1.  application/tzif  . . . . . . . . . . . . . . .
    . . . . .  17\n     8.2.  application/tzif-leap . . . . . . . . . . . . . . .
    . . .  18\n   9.  References  . . . . . . . . . . . . . . . . . . . . . . . .
    .  19\n     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  19\n
    \    9.2.  Informative References  . . . . . . . . . . . . . . . . .  20\n   Appendix
    A.  Common Interoperability Issues . . . . . . . . . . .  21\n   Appendix B.  Example
    TZif Files . . . . . . . . . . . . . . . . .  23\n     B.1.  Version 1 File Representing
    UTC (with Leap Seconds) . . .  24\n     B.2.  Version 2 File Representing Pacific/Honolulu
    \ . . . . . .  28\n     B.3.  Truncated Version 3 File Representing Asia/Jerusalem
    \ . .  33\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . .
    .  34\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  34\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Time zone data typically consists of offsets from universal
    time\n   (UT), daylight saving transition rules, one or more local time\n   designations
    (acronyms or abbreviations), and optional leap-second\n   adjustments.  One such
    format for conveying this information is\n   iCalendar [RFC5545].  It is a text-based
    format used by calendaring\n   and scheduling systems.\n   This document specifies
    the widely deployed Time Zone Information\n   Format (TZif).  It is a binary format
    used by most UNIX systems to\n   calculate local time.  This format was introduced
    in the 1980s and\n   has evolved since then into multiple upward-compatible versions.\n
    \  There is a wide variety of interoperable software capable of\n   generating
    and reading files in this format [tz-link].\n   This specification does not define
    the source of the data assembled\n   into a TZif file.  One such source is the
    IANA-hosted time zone\n   database [RFC6557].\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be
    interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,
    they appear in all\n   capitals, as shown here.\n   The following terms are used
    in this document (see \"Sources for Time\n   Zone and Daylight Saving Time Data\"
    [tz-link] for more detailed\n   information about civil timekeeping data and practice):\n
    \  Coordinated Universal Time (UTC):  The basis for civil time since\n      1960.
    \ It is approximately equal to mean solar time at the prime\n      meridian (0
    degrees longitude).\n   Daylight Saving Time (DST):  The time according to a location's
    law\n      or practice, when adjusted as necessary from standard time.  The\n
    \     adjustment may be positive or negative, and the amount of\n      adjustment
    may vary depending on the date and time; the TZif\n      format even allows the
    adjustment to be zero, although this is not\n      common practice.\n   International
    Atomic Time (TAI):  The time standard based on atomic\n      clocks since 1972.
    \ It is equal to UTC but without leap-second\n      adjustments.\n   Leap-Second
    Correction (LEAPCORR):  The value of TAI - UTC - 10 for\n      timestamps after
    the first leap second, and zero for timestamps\n      before that.  The expression
    \"TAI - UTC - 10\" comes from the fact\n      that TAI - UTC was defined to be
    10 just prior to the first leap\n      second in 1972, so clocks with leap seconds
    have a zero LEAPCORR\n      before the first leap second.\n   Local Time:  Civil
    time for a particular location.  Its offset from\n      universal time can depend
    on the date and time of day.\n   POSIX Epoch:  1970-01-01 00:00:00 UTC, the basis
    for absolute\n      timestamps in this document.\n   Standard Time:  The time
    according to a location's law or practice,\n      unadjusted for Daylight Saving
    Time.\n   Time Change:  A change to civil timekeeping practice.  It occurs when\n
    \     one or more of the following happen simultaneously:\n      1.  a change
    in UT offset\n      2.  a change in whether daylight saving time is in effect\n
    \     3.  a change in time zone abbreviation\n      4.  a leap second (i.e., a
    change in LEAPCORR)\n   Time Zone Data:  The Time Zone Data Distribution Service
    (TZDIST)\n      [RFC7808] defines \"Time zone data\" as \"data that defines a
    single\n      time zone, including an identifier, UTC offset values, DST rules,\n
    \     and other information such as time zone abbreviations.\"  The\n      interchange
    format defined in this document is one such form of\n      time zone data.\n   Transition
    Time:  The moment of occurrence of a time change that is\n      not a leap second.
    \ It is identified with a signed integer count\n      of UNIX leap time seconds
    since the POSIX epoch.\n   Universal Time (UT):  The basis of civil time.  This
    is the principal\n      form of the mean solar time at the prime meridian (0 degrees\n
    \     longitude) for timestamps before UTC was introduced in 1960 and is\n      UTC
    for timestamps thereafter.  Although UT is sometimes called\n      \"UTC\" or
    \"GMT\" in other sources, this specification uses the term\n      \"UT\" to avoid
    confusion with UTC or with GMT.\n   UNIX Time:  The time as returned by the time()
    function provided by\n      the C programming language (see Section 3 of the \"System\n
    \     Interfaces\" volume of [POSIX]).  This is an integer number of\n      seconds
    since the POSIX epoch, not counting leap seconds.  As an\n      extension to POSIX,
    negative values represent times before the\n      POSIX epoch, using UT.\n   UNIX
    Leap Time:  UNIX time plus all preceding leap-second\n      corrections.  For
    example, if the first leap-second record in a\n      TZif file occurs at 1972-06-30
    23:59:60 UTC, the UNIX leap time\n      for the timestamp 1972-07-01 00:00:00
    UTC would be 78796801, one\n      greater than the UNIX time for the same timestamp.
    \ Similarly, if\n      the second leap-second record occurs at 1972-12-31 23:59:60
    UTC,\n      it accounts for the first leap second, so the UNIX leap time of\n
    \     1972-12-31 23:59:60 UTC would be 94694401, and the UNIX leap time\n      of
    1973-01-01 00:00:00 UTC would be 94694402.  If a TZif file\n      specifies no
    leap-second records, UNIX leap time is equal to UNIX\n      time.\n   Wall Time:
    \ Another name for local time; short for \"wall-clock time\".\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  The Time Zone Information Format (TZif)\n   The Time Zone Information Format
    begins with a fixed 44-octet version\n   1 header (Section 3.1) containing a field
    that specifies the version\n   of the file's format.  Readers designed for version
    N can read\n   version N+1 files without too much trouble; data specific to version\n
    \  N+1 either appears after version N data so that earlier-version\n   readers
    can easily ignore later-version data they are not designed\n   for, or it appears
    as a minor extension to version N that version N\n   readers are likely to tolerate
    well.\n   The version 1 header is followed by a variable-length version 1 data\n
    \  block (Section 3.2) containing four-octet (32-bit) transition times\n   and
    leap-second occurrences.  These 32-bit values are limited to\n   representing
    time changes from 1901-12-13 20:45:52 through 2038-01-19\n   03:14:07 UT, and
    the version 1 header and data block are present only\n   for backward compatibility
    with obsolescent readers, as discussed in\n   Common Interoperability Issues (Appendix
    A).\n   Version 1 files terminate after the version 1 data block.  Files from\n
    \  versions 2 and 3 extend the format by appending a second 44-octet\n   version
    2+ header, a variable-length version 2+ data block containing\n   eight-octet
    (64-bit) transition times and leap-second occurrences,\n   and a variable-length
    footer (Section 3.3).  These 64-bit values can\n   represent times approximately
    292 billion years into the past or\n   future.\n   NOTE: All multi-octet integer
    values MUST be stored in network octet\n   order format (high-order octet first,
    otherwise known as big-endian),\n   with all bits significant.  Signed integer
    values MUST be represented\n   using two's complement.\n   A TZif file is structured
    as follows:\n                        Version 1       Versions 2 & 3\n                     +-------------+
    \  +-------------+\n                     |  Version 1  |   |  Version 1  |\n                     |
    \  Header    |   |   Header    |\n                     +-------------+   +-------------+\n
    \                    |  Version 1  |   |  Version 1  |\n                     |
    \ Data Block |   |  Data Block |\n                     +-------------+   +-------------+\n
    \                                      |  Version 2+ |\n                                       |
    \  Header    |\n                                       +-------------+\n                                       |
    \ Version 2+ |\n                                       |  Data Block |\n                                       +-------------+\n
    \                                      |   Footer    |\n                                       +-------------+\n
    \                      General Format of TZif Files\n"
  - contents:
    - "3.1.  TZif Header\n   A TZif header is structured as follows (the lengths of
      multi-octet\n   fields are shown in parentheses):\n       +---------------+---+\n
      \      |  magic    (4) |ver|\n       +---------------+---+---------------------------------------+\n
      \      |           [unused - reserved for future use] (15)         |\n       +---------------+---------------+---------------+-----------+\n
      \      |  isutcnt  (4) |  isstdcnt (4) |  leapcnt  (4) |\n       +---------------+---------------+---------------+\n
      \      |  timecnt  (4) |  typecnt  (4) |  charcnt  (4) |\n       +---------------+---------------+---------------+\n
      \                               TZif Header\n   The fields of the header are
      defined as follows:\n   magic:  The four-octet ASCII [RFC20] sequence \"TZif\"
      (0x54 0x5A 0x69\n      0x66), which identifies the file as utilizing the Time
      Zone\n      Information Format.\n   ver(sion):  An octet identifying the version
      of the file's format.\n      The value MUST be one of the following:\n      NUL
      (0x00)  Version 1 - The file contains only the version 1\n         header and
      data block.  Version 1 files MUST NOT contain a\n         version 2+ header,
      data block, or footer.\n      '2' (0x32)  Version 2 - The file MUST contain
      the version 1 header\n         and data block, a version 2+ header and data
      block, and a\n         footer.  The TZ string in the footer (Section 3.3), if\n
      \        nonempty, MUST strictly adhere to the requirements for the TZ\n         environment
      variable as defined in Section 8.3 of the \"Base\n         Definitions\" volume
      of [POSIX] and MUST encode the POSIX\n         portable character set as ASCII.\n
      \     '3' (0x33)  Version 3 - The file MUST contain the version 1 header\n         and
      data block, a version 2+ header and data block, and a\n         footer.  The
      TZ string in the footer (Section 3.3), if\n         nonempty, MUST conform to
      POSIX requirements with ASCII\n         encoding, except that it MAY use the
      TZ string extensions\n         described below (Section 3.3.1).\n   isutcnt:
      \ A four-octet unsigned integer specifying the number of UT/\n      local indicators
      contained in the data block -- MUST either be\n      zero or equal to \"typecnt\".\n
      \  isstdcnt:  A four-octet unsigned integer specifying the number of\n      standard/wall
      indicators contained in the data block -- MUST\n      either be zero or equal
      to \"typecnt\".\n   leapcnt:  A four-octet unsigned integer specifying the number
      of\n      leap-second records contained in the data block.\n   timecnt:  A four-octet
      unsigned integer specifying the number of\n      transition times contained
      in the data block.\n   typecnt:  A four-octet unsigned integer specifying the
      number of\n      local time type records contained in the data block -- MUST
      NOT be\n      zero.  (Although local time type records convey no useful\n      information
      in files that have nonempty TZ strings but no\n      transitions, at least one
      such record is nevertheless required\n      because many TZif readers reject
      files that have zero time types.)\n   charcnt:  A four-octet unsigned integer
      specifying the total number\n      of octets used by the set of time zone designations
      contained in\n      the data block - MUST NOT be zero.  The count includes the\n
      \     trailing NUL (0x00) octet at the end of the last time zone\n      designation.\n
      \  Although the version 1 and 2+ headers have the same format, magic\n   number,
      and version fields, their count fields may differ, because\n   the version 1
      data can be a subset of the version 2+ data.\n"
    title: 3.1.  TZif Header
  - contents:
    - "3.2.  TZif Data Block\n   A TZif data block consists of seven variable-length
      elements, each of\n   which is a series of items.  The number of items in each
      series is\n   determined by the corresponding count field in the header.  The
      total\n   length of each element is calculated by multiplying the number of\n
      \  items by the size of each item.  Therefore, implementations that do\n   not
      wish to parse or use the version 1 data block can calculate its\n   total length
      and skip directly to the header of the version 2+ data\n   block.\n   In the
      version 1 data block, time values are 32 bits (TIME_SIZE = 4\n   octets).  In
      the version 2+ data block, present only in version 2 and\n   3 files, time values
      are 64 bits (TIME_SIZE = 8 octets).\n   The data block is structured as follows
      (the lengths of multi-octet\n   fields are shown in parentheses):\n        +---------------------------------------------------------+\n
      \       |  transition times          (timecnt x TIME_SIZE)        |\n        +---------------------------------------------------------+\n
      \       |  transition types          (timecnt)                    |\n        +---------------------------------------------------------+\n
      \       |  local time type records   (typecnt x 6)                |\n        +---------------------------------------------------------+\n
      \       |  time zone designations    (charcnt)                    |\n        +---------------------------------------------------------+\n
      \       |  leap-second records       (leapcnt x (TIME_SIZE + 4))  |\n        +---------------------------------------------------------+\n
      \       |  standard/wall indicators  (isstdcnt)                   |\n        +---------------------------------------------------------+\n
      \       |  UT/local indicators       (isutcnt)                    |\n        +---------------------------------------------------------+\n
      \                             TZif Data Block\n   The elements of the data block
      are defined as follows:\n   transition times:  A series of four- or eight-octet
      UNIX leap-time\n      values sorted in strictly ascending order.  Each value
      is used as\n      a transition time at which the rules for computing local time
      may\n      change.  The number of time values is specified by the \"timecnt\"\n
      \     field in the header.  Each time value SHOULD be at least -2**59.\n      (-2**59
      is the greatest negated power of 2 that predates the Big\n      Bang, and avoiding
      earlier timestamps works around known TZif\n      reader bugs relating to outlandishly
      negative timestamps.)\n   transition types:  A series of one-octet unsigned
      integers specifying\n      the type of local time of the corresponding transition
      time.\n      These values serve as zero-based indices into the array of local\n
      \     time type records.  The number of type indices is specified by the\n      \"timecnt\"
      field in the header.  Each type index MUST be in the\n      range [0, \"typecnt\"
      - 1].\n   local time type records:  A series of six-octet records specifying
      a\n      local time type.  The number of records is specified by the\n      \"typecnt\"
      field in the header.  Each record has the following\n      format (the lengths
      of multi-octet fields are shown in\n      parentheses):\n      +---------------+---+---+\n
      \     |  utoff (4)    |dst|idx|\n      +---------------+---+---+\n      utoff:
      \ A four-octet signed integer specifying the number of\n         seconds to
      be added to UT in order to determine local time.\n         The value MUST NOT
      be -2**31 and SHOULD be in the range\n         [-89999, 93599] (i.e., its value
      SHOULD be more than -25 hours\n         and less than 26 hours).  Avoiding -2**31
      allows 32-bit clients\n         to negate the value without overflow.  Restricting
      it to\n         [-89999, 93599] allows easy support by implementations that\n
      \        already support the POSIX-required range [-24:59:59, 25:59:59].\n      (is)dst:
      \ A one-octet value indicating whether local time should\n         be considered
      Daylight Saving Time (DST).  The value MUST be 0\n         or 1.  A value of
      one (1) indicates that this type of time is\n         DST.  A value of zero
      (0) indicates that this time type is\n         standard time.\n      (desig)idx:
      \ A one-octet unsigned integer specifying a zero-based\n         index into
      the series of time zone designation octets, thereby\n         selecting a particular
      designation string.  Each index MUST be\n         in the range [0, \"charcnt\"
      - 1]; it designates the\n         NUL-terminated string of octets starting at
      position \"idx\" in\n         the time zone designations.  (This string MAY
      be empty.)  A NUL\n         octet MUST exist in the time zone designations at
      or after\n         position \"idx\".\n   time zone designations:  A series of
      octets constituting an array of\n      NUL-terminated (0x00) time zone designation
      strings.  The total\n      number of octets is specified by the \"charcnt\"
      field in the\n      header.  Note that two designations MAY overlap if one is
      a suffix\n      of the other.  The character encoding of time zone designation\n
      \     strings is not specified; however, see Section 4 of this document.\n   leap-second
      records:  A series of eight- or twelve-octet records\n      specifying the corrections
      that need to be applied to UTC in order\n      to determine TAI.  The records
      are sorted by the occurrence time\n      in strictly ascending order.  The number
      of records is specified\n      by the \"leapcnt\" field in the header.  Each
      record has one of the\n      following structures (the lengths of multi-octet
      fields are shown\n      in parentheses):\n      Version 1 Data Block:\n      +---------------+---------------+\n
      \     |  occur (4)    |  corr (4)     |\n      +---------------+---------------+\n
      \     version 2+ Data Block:\n      +---------------+---------------+---------------+\n
      \     |  occur (8)                    |  corr (4)     |\n      +---------------+---------------+---------------+\n
      \     occur(rence):  A four- or eight-octet UNIX leap time value\n         specifying
      the time at which a leap-second correction occurs.\n         The first value,
      if present, MUST be nonnegative, and each\n         later value MUST be at least
      2419199 greater than the previous\n         value.  (This is 28 days' worth
      of seconds, minus a potential\n         negative leap second.)\n      corr(ection):
      \ A four-octet signed integer specifying the value of\n         LEAPCORR on
      or after the occurrence.  The correction value in\n         the first leap-second
      record, if present, MUST be either one\n         (1) or minus one (-1).  The
      correction values in adjacent leap-\n         second records MUST differ by
      exactly one (1).  The value of\n         LEAPCORR is zero for timestamps that
      occur before the\n         occurrence time in the first leap-second record (or
      for all\n         timestamps if there are no leap-second records).\n   standard/wall
      indicators:  A series of one-octet values indicating\n      whether the transition
      times associated with local time types were\n      specified as standard time
      or wall-clock time.  Each value MUST be\n      0 or 1.  A value of one (1) indicates
      standard time.  The value\n      MUST be set to one (1) if the corresponding
      UT/local indicator is\n      set to one (1).  A value of zero (0) indicates
      wall time.  The\n      number of values is specified by the \"isstdcnt\" field
      in the\n      header.  If \"isstdcnt\" is zero (0), all transition times\n      associated
      with local time types are assumed to be specified as\n      wall time.\n   UT/local
      indicators:  A series of one-octet values indicating whether\n      the transition
      times associated with local time types were\n      specified as UT or local
      time.  Each value MUST be 0 or 1.  A\n      value of one (1) indicates UT, and
      the corresponding standard/wall\n      indicator MUST also be set to one (1).
      \ A value of zero (0)\n      indicates local time.  The number of values is
      specified by the\n      \"isutcnt\" field in the header.  If \"isutcnt\" is
      zero (0), all\n      transition times associated with local time types are assumed
      to\n      be specified as local time.\n   The type corresponding to a transition
      time specifies local time for\n   timestamps starting at the given transition
      time and continuing up\n   to, but not including, the next transition time.
      \ Local time for\n   timestamps before the first transition is specified by
      the first time\n   type (time type 0).  Local time for timestamps on or after
      the last\n   transition is specified by the TZ string in the footer (Section
      3.3)\n   if present and nonempty; otherwise, it is unspecified.  If there are\n
      \  no transitions, local time for all timestamps is specified by the TZ\n   string
      in the footer if present and nonempty; otherwise, it is\n   specified by time
      type 0.\n   A given pair of standard/wall and UT/local indicators is used to\n
      \  designate whether the corresponding transition time was specified as\n   UT,
      standard time, or wall-clock time.  Note that there are only\n   three combinations
      of the two indicators, given that the standard/\n   wall value MUST be one (1)
      if the UT/local value is one (1).  This\n   information can be useful if the
      transition times in a TZif file need\n   to be transformed into transitions
      appropriate for another time zone\n   (e.g. when calculating transition times
      for a simple POSIX TZ string\n   such as \"AKST9AKDT\").\n   In order to eliminate
      unused space in a TZif file, every nonzero\n   local time type index SHOULD
      appear at least once in the transition\n   type array.  Likewise, every octet
      in the time zone designations\n   array SHOULD be used by at least one time
      type record.\n"
    title: 3.2.  TZif Data Block
  - contents:
    - "3.3.  TZif Footer\n   The TZif footer is structured as follows (the lengths
      of multi-octet\n   fields are shown in parentheses):\n                      +---+--------------------+---+\n
      \                     | NL|  TZ string (0...)  |NL |\n                      +---+--------------------+---+\n
      \                               TZif Footer\n   The elements of the footer are
      defined as follows:\n   NL:  An ASCII new line character (0x0A).\n   TZ string:
      \ A rule for computing local time changes after the last\n      transition time
      stored in the version 2+ data block.  The string\n      is either empty or uses
      the expanded format of the \"TZ\"\n      environment variable as defined in
      Section 8.3 of the \"Base\n      Definitions\" volume of [POSIX] with ASCII
      encoding, possibly\n      utilizing extensions described below (Section 3.3.1)
      in version 3\n      files.  If the string is empty, the corresponding information
      is\n      not available.  If the string is nonempty and one or more\n      transitions
      appear in the version 2+ data, the string MUST be\n      consistent with the
      last version 2+ transition.  In other words,\n      evaluating the TZ string
      at the time of the last transition should\n      yield the same time type as
      was specified in the last transition.\n      The string MUST NOT contain NUL
      octets or be NUL-terminated, and\n      it SHOULD NOT begin with the ':' (colon)
      character.\n   The TZif footer is present only in version 2 and 3 files, as
      the\n   obsolescent version 1 format was designed before the need for a\n   footer
      was apparent.\n"
    - contents:
      - "3.3.1.  TZ String Extensions\n   The TZ string in a version 3 TZif file MAY
        use the following\n   extensions to POSIX TZ strings.  These extensions are
        described using\n   the terminology of Section 8.3 of the \"Base Definitions\"
        volume of\n   [POSIX].\n   o  The hours part of the transition times may be
        signed and range\n      from -167 through 167 (-167 <= hh <= 167) instead
        of the POSIX-\n      required unsigned values from 0 through 24.\n      Example:
        <-03>3<-02>,M3.5.0/-2,M10.5.0/-1\n         This represents a time zone that
        observes daylight saving time\n         from 22:00 on the day before March's
        last Sunday until 23:00 on\n         the day before October's last Sunday.
        \ Standard time is 3 hours\n         west of UT and is abbreviated \"-03\";
        daylight saving time is 2\n         hours west of UT and is abbreviated \"-02\".\n
        \  o  DST is considered to be in effect all year if it starts January 1\n
        \     at 00:00 and ends December 31 at 24:00 plus the difference between\n
        \     daylight saving and standard time, leaving no room for standard\n      time
        in the calendar.\n      Example: EST5EDT,0/0,J365/25\n         This represents
        a time zone that observes daylight saving time\n         all year.  It is
        4 hours west of UT and is abbreviated \"EDT\".\n"
      title: 3.3.1.  TZ String Extensions
    title: 3.3.  TZif Footer
  title: 3.  The Time Zone Information Format (TZif)
- contents:
  - "4.  Interoperability Considerations\n   The following practices help ensure the
    interoperability of TZif\n   applications.\n   o  Version 1 files are considered
    a legacy format and SHOULD NOT be\n      generated, as they do not support transition
    times after the year\n      2038.\n   o  Implementations that only understand
    version 1 MUST ignore any\n      data that extends beyond the calculated end of
    the version 1 data\n      block.\n   o  Implementations SHOULD generate a version
    3 file if TZ string\n      extensions are necessary to accurately model transition
    times.\n      Otherwise, version 2 files SHOULD be generated.\n   o  The sequence
    of time changes defined by the version 1 header and\n      data block SHOULD be
    a contiguous sub-sequence of the time changes\n      defined by the version 2+
    header and data block, and by the\n      footer.  This guideline helps obsolescent
    version 1 readers agree\n      with current readers about timestamps within the
    contiguous sub-\n      sequence.  It also lets writers not supporting obsolescent
    readers\n      use a \"timecnt\" of zero in the version 1 data block to save space.\n
    \  o  Time zone designations SHOULD consist of at least three (3) and no\n      more
    than six (6) ASCII characters from the set of alphanumerics,\n      '-', and '+'.
    \ This is for compatibility with POSIX requirements\n      for time zone abbreviations.\n
    \  o  When reading a version 2 or 3 file, implementations SHOULD ignore\n      the
    version 1 header and data block except for the purpose of\n      skipping over
    them.\n   o  Implementations SHOULD calculate the total lengths of the headers\n
    \     and data blocks and check that they all fit within the actual file\n      size,
    as part of a validity check for the file.\n   o  When a TZif file is used in a
    MIME message entity, it SHOULD be\n      indicated by one of the following media
    types:\n      *  \"application/tzif-leap\" (Section 8.2) to indicate that leap-\n
    \        second records are included in the TZif data as necessary (none\n         are
    necessary if the file is truncated to a range that precedes\n         the first
    leap second).\n      *  \"application/tzif\" (Section 8.1) to indicate that leap-second\n
    \        records are not included in the TZif data; \"leapcnt\" in the\n         header(s)
    MUST be zero (0).\n   o  Common interoperability issues and possible workarounds
    are\n      described in Appendix A.\n"
  title: 4.  Interoperability Considerations
- contents:
  - "5.  Use with the Time Zone Data Distribution Service\n   The Time Zone Data Distribution
    Service (TZDIST) [RFC7808] is a\n   service that allows reliable, secure, and
    fast delivery of time zone\n   data and leap-second rules to client systems such
    as calendaring and\n   scheduling applications or operating systems.\n   A TZDIST
    service MAY supply time zone data to clients in the Time\n   Zone Information
    Format.  Such a service MUST indicate that it\n   supports this format by including
    the media type \"application/tzif\"\n   (Section 8.1) in its \"capabilities\"
    response (see Section 5.1 of\n   [RFC7808]).  A TZDIST service MAY also include
    the media type\n   \"application/tzif-leap\" (Section 8.2) in its \"capabilities\"
    response\n   if it is able to generate TZif files containing leap-second records.\n
    \  A TZDIST service MUST NOT advertise the \"application/tzif-leap\" media\n   type
    without also advertising \"application/tzif\".\n   TZDIST clients MUST use the
    HTTP \"Accept\" [RFC7231] header field to\n   indicate their preference to receive
    data in the \"application/tzif\"\n   and/or \"application/tzif-leap\" formats.\n"
  - contents:
    - "5.1.  Truncating TZif Files\n   As described in Section 3.9 of [RFC7808], a
      TZDIST service MAY\n   truncate time zone transition data.  A truncated TZif
      file is valid\n   from its first and up to, but not including, its last version
      2+\n   transition time, if present.\n   When truncating the start of a TZif
      file, the service MUST supply in\n   the version 2+ data a first transition
      time that is the start point\n   of the truncation range.  As with untruncated
      TZif files, time type 0\n   indicates local time immediately before the start
      point, and the time\n   type of the first transition indicates local time thereafter.\n
      \  When truncating the end of a TZif file, the service MUST supply in\n   the
      version 2+ data a last transition time that is the end point of\n   the truncation
      range and MUST supply an empty TZ string.  As with\n   untruncated TZif files
      with empty TZ strings, a truncated TZif file\n   does not indicate local time
      after the last transition.\n   All represented information that falls inside
      the truncation range\n   MUST be the same as that represented by a corresponding
      untruncated\n   TZif file.\n   TZDIST clients SHOULD NOT use a truncated TZif
      file (as described\n   above) to interpret timestamps outside the truncation
      time range.\n"
    title: 5.1.  Truncating TZif Files
  - contents:
    - "5.2.  Example TZDIST Request for TZif Data\n   In this example, the client
      checks the server for the available\n   formats and then requests that the time
      zone with a specific time\n   zone identifier be returned in Time Zone Information
      Format.\n   Note that this example presumes that the time zone context path
      has\n   been discovered (see [RFC7808], Section 4.2.1) to be \"/tzdist\".\n
      \  >> Request <<\n   GET /tzdist/capabilities HTTP/1.1\n   Host: tz.example.com\n
      \  >> Response <<\n   HTTP/1.1 200 OK\n   Date: Fri, 01 Jun 2018 14:52:23 GMT\n
      \  Content-Type: application/json; charset=\"utf-8\"\n   Content-Length: xxxx\n
      \  {\n     \"version\": 1,\n     \"info\": {\n       \"primary-source\": \"IANA:2018e\",\n
      \      \"formats\": [\n         \"text/calendar\",\n         \"application/tzif\",\n
      \        \"application/tzif-leap\"\n       ],\n   ...\n     },\n   ...\n   }\n
      \  >> Request <<\n   GET /tzdist/zones/America%2FNew_York HTTP/1.1\n   Host:
      tz.example.com\n   Accept: application/tzif\n   >> Response <<\n   HTTP/1.1
      200 OK\n   Date: Fri, 01 Jun 2018 14:52:24 GMT\n   Content-Type: application/tzif\n
      \  Content-Length: xxxx\n   ETag: \"123456789-000-111\"\n   TZif2...[binary
      data without leap-second records]...\n   EST5EDT,M3.2.0,M11.1.0\n"
    title: 5.2.  Example TZDIST Request for TZif Data
  title: 5.  Use with the Time Zone Data Distribution Service
- contents:
  - "6.  Security Considerations\n   The Time Zone Information Format contains no
    executable code, and it\n   does not define any extensible areas that could be
    used to store such\n   code.\n   TZif contains counted arrays of data elements.
    \ All counts should be\n   checked when processing TZif objects, to guard against
    references\n   past the end of the object.\n   TZif provides no confidentiality
    or integrity protection.  Time zone\n   information is normally public and does
    not call for confidentiality\n   protection.  Since time zone information is used
    in many critical\n   applications, integrity protection may be required and must
    be\n   provided externally.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  Privacy Considerations\n   The Time Zone Information Format contains publicly
    available data,\n   and it does not define any extensible areas that could be
    used to\n   store private data.\n   As discussed in Section 9 of [RFC7808], transmission
    of time zone\n   data over an insecure communications channel could leak the past,\n
    \  current, or future location of a device or user.  As such, TZif data\n   transmitted
    over a public communications channel MUST be protected\n   with a confidentiality
    layer such as that provided by Transport Layer\n   Security (TLS) [RFC8446].\n"
  title: 7.  Privacy Considerations
- contents:
  - "8.  IANA Considerations\n   This document defines two media types [RFC6838] for
    the exchange of\n   data utilizing the Time Zone Information Format.\n"
  - contents:
    - "8.1.  application/tzif\n   Type name:  application\n   Subtype name:  tzif\n
      \  Required parameters:  none\n   Optional parameters:  none\n   Encoding considerations:
      \ binary\n   Security considerations:  See Section 6 of RFC 8536.\n   Interoperability
      considerations:  See Section 4 of RFC 8536.\n   Published specification:  This
      specification.\n   Applications that use this media type:  This media type is
      designed\n      for widespread use by applications that need to use or exchange\n
      \     time zone information, such as the Time Zone Information Compiler\n      (zic)
      [ZIC] and the GNU C Library [GNU-C].  The Time Zone\n      Distribution Service
      [RFC7808] can directly use this media type.\n   Fragment identifier considerations:
      \ N/A\n   Additional information:\n      Magic number(s):  The first 4 octets
      are 0x54, 0x5A, 0x69, 0x66\n      File extensions(s):  N/A\n      Macintosh
      file type code(s):  N/A\n   Person & email address to contact for further information:\n
      \     Time Zone Database mailing list <tz@iana.org>\n   Intended usage:  COMMON\n
      \  Restrictions on usage:  N/A\n   Author:  See the \"Authors' Addresses\" section
      of RFC 8536.\n   Change controller:  IETF\n"
    title: 8.1.  application/tzif
  - contents:
    - "8.2.  application/tzif-leap\n   Type name:  application\n   Subtype name:  tzif-leap\n
      \  Required parameters:  none\n   Optional parameters:  none\n   Encoding considerations:
      \ binary\n   Security considerations:  See Section 6 of RFC 8536.\n   Interoperability
      considerations:  See Section 4 of RFC 8536.\n   Published specification:  This
      specification.\n   Applications that use this media type:  This media type is
      designed\n      for widespread use by applications that need to use or exchange\n
      \     time zone information, such as the Time Zone Information Compiler\n      (zic)
      [ZIC] and the GNU C Library [GNU-C].  The Time Zone\n      Distribution Service
      [RFC7808] can directly use this media type.\n   Fragment identifier considerations:
      \ N/A\n   Additional information:\n      Magic number(s):  The first 4 octets
      are 0x54, 0x5A, 0x69, 0x66\n      File extensions(s):  N/A\n      Macintosh
      file type code(s):  N/A\n   Person & email address to contact for further information:\n
      \     Time Zone Database mailing list <tz@iana.org>\n   Intended usage:  COMMON\n
      \  Restrictions on usage:  N/A\n   Author:  See the \"Authors' Addresses\" section
      of RFC 8536.\n   Change controller:  IETF\n"
    title: 8.2.  application/tzif-leap
  title: 8.  IANA Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [GNU-C]     \"The GNU C Library (glibc)\",\n
      \              <https://www.gnu.org/software/libc/>.\n   [POSIX]     IEEE, \"Standard
      for Information Technology--Portable\n               Operating System Interface
      (POSIX(R)) Base\n               Specifications, Issue 7\", IEEE 1003.1-2017,\n
      \              DOI 10.1109/IEEESTD.2018.8277153, January 2018,\n               <http://pubs.opengroup.org/onlinepubs/9699919799/>.\n
      \  [RFC20]     Cerf, V., \"ASCII format for network interchange\", STD 80,\n
      \              RFC 20, DOI 10.17487/RFC0020, October 1969,\n               <https://www.rfc-editor.org/info/rfc20>.\n
      \  [RFC2119]   Bradner, S., \"Key words for use in RFCs to Indicate\n               Requirement
      Levels\", BCP 14, RFC 2119,\n               DOI 10.17487/RFC2119, March 1997,\n
      \              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC6838]   Freed,
      N., Klensin, J., and T. Hansen, \"Media Type\n               Specifications
      and Registration Procedures\", BCP 13,\n               RFC 6838, DOI 10.17487/RFC6838,
      January 2013,\n               <https://www.rfc-editor.org/info/rfc6838>.\n   [RFC7231]
      \  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext\n               Transfer
      Protocol (HTTP/1.1): Semantics and Content\",\n               RFC 7231, DOI
      10.17487/RFC7231, June 2014,\n               <https://www.rfc-editor.org/info/rfc7231>.\n
      \  [RFC7808]   Douglass, M. and C. Daboo, \"Time Zone Data Distribution\n               Service\",
      RFC 7808, DOI 10.17487/RFC7808, March 2016,\n               <https://www.rfc-editor.org/info/rfc7808>.\n
      \  [RFC8174]   Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n               2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n               May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [ZIC]       Kerrisk, M., \"ZIC(8)\",
      man-pages release 4.16, February\n               2010, <http://man7.org/linux/man-pages/man8/zic.8.html>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [EGGERT-TZ] \"History for tz\", October 2018,\n
      \              <https://github.com/eggert/tz/commits/master/tzfile.5>.\n   [RFC5545]
      \  Desruisseaux, B., Ed., \"Internet Calendaring and\n               Scheduling
      Core Object Specification (iCalendar)\",\n               RFC 5545, DOI 10.17487/RFC5545,
      September 2009,\n               <https://www.rfc-editor.org/info/rfc5545>.\n
      \  [RFC6557]   Lear, E. and P. Eggert, \"Procedures for Maintaining the\n               Time
      Zone Database\", BCP 175, RFC 6557,\n               DOI 10.17487/RFC6557, February
      2012,\n               <https://www.rfc-editor.org/info/rfc6557>.\n   [RFC8446]
      \  Rescorla, E., \"The Transport Layer Security (TLS)\n               Protocol
      Version 1.3\", RFC 8446, DOI 10.17487/RFC8446,\n               August 2018,
      <https://www.rfc-editor.org/info/rfc8446>.\n   [tz-link]   Eggert, P. and A.
      Olson, \"Sources for Time Zone and\n               Daylight Saving Time Data\",
      2018,\n               <https://www.iana.org/time-zones/repository/\n               tz-link.html>.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Appendix A.  Common Interoperability Issues\n   This section documents common
    problems in implementing this\n   specification.  Most of these are problems in
    generating TZif files\n   for use by readers conforming to predecessors of this
    specification\n   [EGGERT-TZ].  The goals of this section are:\n   1.  to help
    TZif writers output files that avoid common pitfalls in\n       older or buggy
    TZif readers,\n   2.  to help TZif readers avoid common pitfalls when reading
    files\n       generated by future TZif writers, and\n   3.  to help any future
    specification authors see what sort of\n       problems arise when the TZif format
    is changed.\n   When new versions of the TZif format have been defined, a design
    goal\n   has been that a reader can successfully use a TZif file even if the\n
    \  file is of a later TZif version than what the reader was designed\n   for.
    \ When complete compatibility was not achieved, an attempt was\n   made to limit
    glitches to rarely used timestamps and allow simple\n   partial workarounds in
    writers designed to generate new-version data\n   useful even for older-version
    readers.  This section attempts to\n   document these compatibility issues and
    workarounds, as well as\n   documenting other common bugs in readers.\n   Interoperability
    problems with TZif include the following:\n   o  Some readers examine only version
    1 data.  As a partial\n      workaround, a writer can output as much version 1
    data as\n      possible.  However, a reader should ignore version 1 data and use\n
    \     version 2+ data, even if the reader's native timestamps have only\n      32
    bits.\n   o  Some readers designed for version 2 might mishandle timestamps\n
    \     after a version 3 file's last transition, because they cannot\n      parse
    extensions to POSIX in the TZ-like string.  As a partial\n      workaround, a
    writer can output more transitions than necessary,\n      so that only far-future
    timestamps are mishandled by version 2\n      readers.\n   o  Some readers designed
    for version 2 do not support permanent\n      daylight saving time -- e.g., a
    TZ string \"EST5EDT,0/0,J365/25\"\n      denoting permanent Eastern Daylight Time
    (-04).  As a partial\n      workaround, a writer can substitute standard time
    for the next\n      time zone east -- e.g., \"AST4\" for permanent Atlantic Standard\n
    \     Time (-04).\n   o  Some readers ignore the footer and instead predict future\n
    \     timestamps from the time type of the last transition.  As a\n      partial
    workaround, a writer can output more transitions than\n      necessary.\n   o
    \ Some readers do not use time type 0 for timestamps before the\n      first transition,
    in that they infer a time type using a heuristic\n      that does not always select
    time type 0.  As a partial workaround,\n      a writer can output a dummy (no-op)
    first transition at an early\n      time.\n   o  Some readers mishandle timestamps
    before the first transition that\n      has a timestamp not less than -2**31.
    \ Readers that support only\n      32-bit timestamps are likely to be more prone
    to this problem, for\n      example, when they process 64-bit transitions, only
    some of which\n      are representable in 32 bits.  As a partial workaround, a
    writer\n      can output a dummy transition at timestamp -2**31.\n   o  Some readers
    mishandle a transition if its timestamp has the\n      minimum possible signed
    64-bit value.  Timestamps less than -2**59\n      are not recommended.\n   o  Some
    readers mishandle POSIX-style TZ strings that contain \"<\" or\n      \">\".  As
    a partial workaround, a writer can avoid using '<' or '>'\n      for time zone
    abbreviations containing only alphabetic characters.\n   o  Many readers mishandle
    time zone abbreviations that contain non-\n      ASCII characters.  These characters
    are not recommended.\n   o  Some readers may mishandle time zone abbreviations
    that contain\n      fewer than 3 or more than 6 characters, or that contain ASCII\n
    \     characters other than alphanumerics, '-', and '+'.  These\n      abbreviations
    are not recommended.\n   o  Some readers mishandle TZif files that specify daylight
    saving\n      time UT offsets that are less than the UT offsets for the\n      corresponding
    standard time.  These readers do not support\n      locations like Ireland, which
    uses the equivalent of the POSIX TZ\n      string \"IST-1GMT0,M10.5.0,M3.5.0/1\",
    observing standard time (IST,\n      +01) in summer and daylight saving time (GMT,
    +00) in winter.  As\n      a partial workaround, a writer can output data for
    the equivalent\n      of the POSIX TZ string \"GMT0IST,M3.5.0/1,M10.5.0\", thus
    swapping\n      standard and daylight saving time.  Although this workaround\n
    \     misidentifies which part of the year uses daylight saving time, it\n      records
    UT offsets and time zone abbreviations correctly.\n   Some interoperability problems
    are reader bugs that are listed here\n   mostly as warnings to developers of readers.\n
    \  o  Some readers do not support negative timestamps.  Developers of\n      distributed
    applications should keep this in mind if they need to\n      deal with pre-1970
    data.\n   o  Some readers mishandle timestamps before the first transition that\n
    \     has a nonnegative timestamp.  Readers that do not support negative\n      timestamps
    are likely to be more prone to this problem.\n   o  Some readers mishandle time
    zone abbreviations like \"-08\" that\n      contain '+', '-', or digits.\n   o
    \ Some readers mishandle UT offsets that are out of the traditional\n      range
    of -12 through +12 hours and so do not support locations\n      like Kiritimati
    that are outside this range.\n   o  Some readers mishandle UT offsets in the range
    [-3599, -1] seconds\n      from UT, because they integer-divide the offset by
    3600 to get 0\n      and then display the hour part as \"+00\".\n   o  Some readers
    mishandle UT offsets that are not a multiple of one\n      hour, 15 minutes, or
    1 minute.\n"
  title: Appendix A.  Common Interoperability Issues
- contents:
  - "Appendix B.  Example TZif Files\n   The following sections contain annotated
    hexadecimal dumps of example\n   TZif files.\n   Note that these examples should
    only be considered informative.\n   Although the example data entries are current
    as of the publication\n   date of this document, the data will likely change in
    the future as\n   leap seconds are added and changes are made to civil time.\n"
  - contents:
    - "B.1.  Version 1 File Representing UTC (with Leap Seconds)\n   +-------+---------------+------------------+------------------------+\n
      \  | File  | Data Octets   | Record Name /    | Field Value            |\n   |
      Offset| (hexadecimal) | Field Name       |                        |\n   +-------+---------------+------------------+------------------------+\n
      \  | 000   | 54 5a 69 66   | magic            | \"TZif\"                 |\n
      \  | 004   | 00            | version          | 0 (1)                  |\n   |
      005   | 00 00 00 00   |                  |                        |\n   |       |
      00 00 00 00   |                  |                        |\n   |       | 00
      00 00 00   |                  |                        |\n   |       | 00 00
      00      |                  |                        |\n   | 020   | 00 00 00
      01   | isutccnt         | 1                      |\n   | 024   | 00 00 00 01
      \  | isstdcnt         | 1                      |\n   | 028   | 00 00 00 1b   |
      isleapcnt        | 27                     |\n   | 032   | 00 00 00 00   | timecnt
      \         | 0                      |\n   | 036   | 00 00 00 01   | typecnt          |
      1                      |\n   | 040   | 00 00 00 04   | charcnt          | 4
      \                     |\n   |       |               |                  |                        |\n
      \  |       |               | localtimetype[0] |                        |\n   |
      044   | 00 00 00 00   | utcoff           | 00:00                  |\n   | 048
      \  | 00            | isdst            | 0 (no)                 |\n   | 049   |
      00            | desigidx         | 0                      |\n   |       |               |
      \                 |                        |\n   | 050   | 55 54 43 00   | designations[0]
      \ | \"UTC\"                  |\n   |       |               |                  |
      \                       |\n   |       |               | leapsecond[0]    |                        |\n
      \  | 054   | 04 b2 58 00   | occurrence       | 78796800               |\n   |
      \      |               |                  | (1972-06-30T23:59:60Z) |\n   | 058
      \  | 00 00 00 01   | correction       | 1                      |\n   |       |
      \              |                  |                        |\n   |       |               |
      leapsecond[1]    |                        |\n   | 062   | 05 a4 ec 01   | occurrence
      \      | 94694401               |\n   |       |               |                  |
      (1972-12-31T23:59:60Z) |\n   | 066   | 00 00 00 02   | correction       | 2
      \                     |\n   |       |               |                  |                        |\n
      \  |       |               | leapsecond[2]    |                        |\n   |
      070   | 07 86 1f 82   | occurrence       | 126230402              |\n   |       |
      \              |                  | (1973-12-31T23:59:60Z) |\n   | 074   | 00
      00 00 03   | correction       | 3                      |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[3]
      \   |                        |\n   | 078   | 09 67 53 03   | occurrence       |
      157766403              |\n   |       |               |                  | (1974-12-31T23:59:60Z)
      |\n   | 082   | 00 00 00 04   | correction       | 4                      |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[4]    |                        |\n   | 086
      \  | 0b 48 86 84   | occurrence       | 189302404              |\n   |       |
      \              |                  | (1975-12-31T23:59:60Z) |\n   | 090   | 00
      00 00 05   | correction       | 5                      |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[5]
      \   |                        |\n   | 094   | 0d 2b 0b 85   | occurrence       |
      220924805              |\n   |       |               |                  | (1976-12-31T23:59:60Z)
      |\n   | 098   | 00 00 00 06   | correction       | 6                      |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[6]    |                        |\n   | 102
      \  | 0f 0c 3f 06   | occurrence       | 252460806              |\n   |       |
      \              |                  | (1977-12-31T23:59:60Z) |\n   | 106   | 00
      00 00 07   | correction       | 7                      |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[7]
      \   |                        |\n   | 110   | 10 ed 72 87   | occurrence       |
      283996807              |\n   |       |               |                  | (1978-12-31T23:59:60Z)
      |\n   | 114   | 00 00 00 08   | correction       | 8                      |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[8]    |                        |\n   | 118
      \  | 12 ce a6 08   | occurrence       | 315532808              |\n   |       |
      \              |                  | (1979-12-31T23:59:60Z) |\n   | 122   | 00
      00 00 09   | correction       | 9                      |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[9]
      \   |                        |\n   | 126   | 15 9f ca 89   | occurrence       |
      362793609              |\n   |       |               |                  | (1981-06-30T23:59:60Z)
      |\n   | 130   | 00 00 00 0a   | correction       | 10                     |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[10]   |                        |\n   | 134
      \  | 17 80 fe 0a   | occurrence       | 394329610              |\n   |       |
      \              |                  | (1982-06-30T23:59:60Z) |\n   | 138   | 00
      00 00 0b   | correction       | 11                     |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[11]
      \  |                        |\n   | 142   | 19 62 31 8b   | occurrence       |
      425865611              |\n   |       |               |                  | (1983-06-30T23:59:60Z)
      |\n   | 146   | 00 00 00 0c   | correction       | 12                     |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[12]   |                        |\n   | 150
      \  | 1d 25 ea 0c   | occurrence       | 489024012              |\n   |       |
      \              |                  | (1985-06-30T23:59:60Z) |\n   | 154   | 00
      00 00 0d   | correction       | 13                     |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[13]
      \  |                        |\n   | 158   | 21 da e5 0d   | occurrence       |
      567993613              |\n   |       |               |                  | (1987-12-31T23:59:60Z)
      |\n   | 162   | 00 00 00 0e   | correction       | 14                     |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[14]   |                        |\n   | 166
      \  | 25 9e 9d 8e   | occurrence       | 631152014              |\n   |       |
      \              |                  | (1989-12-31T23:59:60Z) |\n   | 170   | 00
      00 00 0f   | correction       | 15                     |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[15]
      \  |                        |\n   | 174   | 27 7f d1 0f   | occurrence       |
      662688015              |\n   |       |               |                  | (1990-12-31T23:59:60Z)
      |\n   | 178   | 00 00 00 10   | correction       | 16                     |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[16]   |                        |\n   | 182
      \  | 2a 50 f5 90   | occurrence       | 709948816              |\n   |       |
      \              |                  | (1992-06-30T23:59:60Z) |\n   | 186   | 00
      00 00 11   | correction       | 17                     |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[17]
      \  |                        |\n   | 190   | 2c 32 29 11   | occurrence       |
      741484817              |\n   |       |               |                  | (1993-06-30T23:59:60Z)
      |\n   | 194   | 00 00 00 12   | correction       | 18                     |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[18]   |                        |\n   | 198
      \  | 2e 13 5c 92   | occurrence       | 773020818              |\n   |       |
      \              |                  | (1994-06-30T23:59:60Z) |\n   | 202   | 00
      00 00 13   | correction       | 19                     |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[19]
      \  |                        |\n   | 206   | 30 e7 24 13   | occurrence       |
      820454419              |\n   |       |               |                  | (1995-12-31T23:59:60Z)
      |\n   | 210   | 00 00 00 14   | correction       | 20                     |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[20]   |                        |\n   | 214
      \  | 33 b8 48 94   | occurrence       | 867715220              |\n   |       |
      \              |                  | (1997-06-30T23:59:60Z) |\n   | 218   | 00
      00 00 15   | correction       | 21                     |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[21]
      \  |                        |\n   | 222   | 36 8c 10 15   | occurrence       |
      915148821              |\n   |       |               |                  | (1998-12-31T23:59:60Z)
      |\n   | 226   | 00 00 00 16   | correction       | 22                     |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[22]   |                        |\n   | 230
      \  | 43 b7 1b 96   | occurrence       | 1136073622             |\n   |       |
      \              |                  | (2005-12-31T23:59:60Z) |\n   | 234   | 00
      00 00 17   | correction       | 23                     |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[23]
      \  |                        |\n   | 238   | 49 5c 07 97   | occurrence       |
      1230768023             |\n   |       |               |                  | (2008-12-31T23:59:60Z)
      |\n   | 242   | 00 00 00 18   | correction       | 24                     |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[24]   |                        |\n   | 246
      \  | 4f ef 93 18   | occurrence       | 1341100824             |\n   |       |
      \              |                  | (2012-06-30T23:59:60Z) |\n   | 250   | 00
      00 00 19   | correction       | 25                     |\n   |       |               |
      \                 |                        |\n   |       |               | leapsecond[25]
      \  |                        |\n   | 254   | 55 93 2d 99   | occurrence       |
      1435708825             |\n   |       |               |                  | (2015-06-30T23:59:60Z)
      |\n   | 258   | 00 00 00 1a   | correction       | 26                     |\n
      \  |       |               |                  |                        |\n   |
      \      |               | leapsecond[26]   |                        |\n   | 262
      \  | 58 68 46 9a   | occurrence       | 1483228826             |\n   |       |
      \              |                  | (2016-12-31T23:59:60Z) |\n   | 266   | 00
      00 00 1b   | correction       | 27                     |\n   |       |               |
      \                 |                        |\n   | 270   | 00            | UT/local[0]
      \     | 0 (local)              |\n   |       |               |                  |
      \                       |\n   | 271   | 00            | standard/wall[0] | 0
      (wall)               |\n   +-------+---------------+------------------+------------------------+\n
      \  To determine TAI corresponding to 2000-01-01T00:00:00Z\n   (UNIX time = 946684800),
      the following procedure would be followed:\n   1.  Find the latest leap-second
      occurrence prior to the time of\n       interest (leapsecond[21]) and note the
      correction value\n       (LEAPCORR = 22).\n   2.  Add LEAPCORR + 10 to the time
      of interest to yield TAI of\n       2000-01-01T00:00:32.\n"
    title: B.1.  Version 1 File Representing UTC (with Leap Seconds)
  - contents:
    - "B.2.  Version 2 File Representing Pacific/Honolulu\n   +--------+--------------+------------------+------------------------+\n
      \  | File   | Hexadecimal  | Record Name /    | Field Value            |\n   |
      Offset | Octets       | Field Name       |                        |\n   +--------+--------------+------------------+------------------------+\n
      \  | 000    | 54 5a 69 66  | magic            | \"TZif\"                 |\n
      \  | 004    | 32           | version          | '2' (2)                |\n   |
      005    | 00 00 00 00  |                  |                        |\n   |        |
      00 00 00 00  |                  |                        |\n   |        | 00
      00 00 00  |                  |                        |\n   |        | 00 00
      00     |                  |                        |\n   | 020    | 00 00 00
      06  | isutccnt         | 6                      |\n   | 024    | 00 00 00 06
      \ | isstdcnt         | 6                      |\n   | 028    | 00 00 00 00  |
      isleapcnt        | 0                      |\n   | 032    | 00 00 00 07  | timecnt
      \         | 7                      |\n   | 036    | 00 00 00 06  | typecnt          |
      6                      |\n   | 040    | 00 00 00 14  | charcnt          | 20
      \                    |\n   |        |              |                  |                        |\n
      \  | 044    | 80 00 00 00  | trans time[0]    | -2147483648            |\n   |
      \       |              |                  | (1901-12-13T20:45:52Z) |\n   | 048
      \   | bb 05 43 48  | trans time[1]    | -1157283000            |\n   |        |
      \             |                  | (1933-04-30T12:30:00Z) |\n   | 052    | bb
      21 71 58  | trans time[2]    | -1155436200            |\n   |        |              |
      \                 | (1933-05-21T21:30:00Z) |\n   | 056    | cb 89 3d c8  | trans
      time[3]    | -880198200             |\n   |        |              |                  |
      (1942-02-09T12:30:00Z) |\n   | 060    | d2 23 f4 70  | trans time[4]    | -769395600
      \            |\n   |        |              |                  | (1945-08-14T23:00:00Z)
      |\n   | 064    | d2 61 49 38  | trans time[5]    | -765376200             |\n
      \  |        |              |                  | (1945-09-30T11:30:00Z) |\n   |
      068    | d5 8d 73 48  | trans time[6]    | -712150200             |\n   |        |
      \             |                  | (1947-06-08T12:30:00Z) |\n   |        |              |
      \                 |                        |\n   | 072    | 01           | trans
      type[0]    | 1                      |\n   | 073    | 02           | trans type[1]
      \   | 2                      |\n   | 074    | 01           | trans type[2]    |
      1                      |\n   | 075    | 03           | trans type[3]    | 3
      \                     |\n   | 076    | 04           | trans type[4]    | 4                      |\n
      \  | 077    | 01           | trans type[5]    | 1                      |\n   |
      078    | 05           | trans type[6]    | 5                      |\n   |        |
      \             |                  |                        |\n   |        |              |
      localtimetype[0] |                        |\n   | 079    | ff ff 6c 02  | utcoff
      \          | -37886 (-10:21:26)     |\n   | 083    | 00           | isdst            |
      0 (no)                 |\n   | 084    | 00           | desigidx         | 0
      \                     |\n   |        |              |                  |                        |\n
      \  |        |              | localtimetype[1] |                        |\n   |
      085    | ff ff 6c 58  | utcoff           | -37800 (-10:30)        |\n   | 089
      \   | 00           | isdst            | 0 (no)                 |\n   | 090    |
      04           | desigidx         | 4                      |\n   |        |              |
      \                 |                        |\n   |        |              | localtimetype[2]
      |                        |\n   | 091    | ff ff 7a 68  | utcoff           |
      -34200 (-09:30)        |\n   | 095    | 01           | isdst            | 1
      (yes)                |\n   | 096    | 08           | desigidx         | 8                      |\n
      \  |        |              |                  |                        |\n   |
      \       |              | localtimetype[3] |                        |\n   | 097
      \   | ff ff 7a 68  | utcoff           | -34200 (-09:30)        |\n   | 101    |
      01           | isdst            | 1 (yes)                |\n   | 102    | 0c
      \          | desigidx         | 12                     |\n   |        |              |
      \                 |                        |\n   |        |              | localtimetype[4]
      |                        |\n   | 103    | ff ff 7a 68  | utcoff           |
      -34200 (-09:30)        |\n   | 107    | 01           | isdst            | 1
      (yes)                |\n   | 108    | 10           | desigidx         | 16                     |\n
      \  |        |              |                  |                        |\n   |
      \       |              | localtimetype[5] |                        |\n   | 109
      \   | ff ff 73 60  | utcoff           | -36000 (-10:00)        |\n   | 113    |
      00           | isdst            | 0 (no)                 |\n   | 114    | 04
      \          | desigidx         | 4                      |\n   |        |              |
      \                 |                        |\n   | 115    | 4c 4d 54 00  | designations[0]
      \ | \"LMT\"                  |\n   | 119    | 48 53 54 00  | designations[4]
      \ | \"HST\"                  |\n   | 123    | 48 44 54 00  | designations[8]
      \ | \"HDT\"                  |\n   | 127    | 48 57 54 00  | designations[12]
      | \"HWT\"                  |\n   | 131    | 48 50 54 00  | designations[16]
      | \"HPT\"                  |\n   |        |              |                  |
      \                       |\n   | 135    | 00           | UT/local[0]      | 1
      (UT)                 |\n   | 136    | 00           | UT/local[1]      | 0 (local)
      \             |\n   | 137    | 00           | UT/local[2]      | 0 (local)              |\n
      \  | 138    | 00           | UT/local[3]      | 0 (local)              |\n   |
      139    | 01           | UT/local[4]      | 1 (UT)                 |\n   | 140
      \   | 00           | UT/local[5]      | 0 (local)              |\n   |        |
      \             |                  |                        |\n   | 141    | 00
      \          | standard/wall[0] | 1 (standard)           |\n   | 142    | 00           |
      standard/wall[1] | 0 (wall)               |\n   | 143    | 00           | standard/wall[2]
      | 0 (wall)               |\n   | 144    | 00           | standard/wall[3] |
      0 (wall)               |\n   | 145    | 01           | standard/wall[4] | 1
      (standard)           |\n   | 146    | 00           | standard/wall[5] | 0 (wall)
      \              |\n   |        |              |                  |                        |\n
      \  | 147    | 54 5a 69 66  | magic            | \"TZif\"                 |\n
      \  | 151    | 32           | version          | '2' (2)                |\n   |
      152    | 00 00 00 00  |                  |                        |\n   |        |
      00 00 00 00  |                  |                        |\n   |        | 00
      00 00 00  |                  |                        |\n   |        | 00 00
      00     |                  |                        |\n   | 167    | 00 00 00
      06  | isutccnt         | 6                      |\n   | 171    | 00 00 00 06
      \ | isstdcnt         | 6                      |\n   | 175    | 00 00 00 00  |
      isleapcnt        | 0                      |\n   | 179    | 00 00 00 07  | timecnt
      \         | 7                      |\n   | 183    | 00 00 00 06  | typecnt          |
      6                      |\n   | 187    | 00 00 00 14  | charcnt          | 20
      \                    |\n   |        |              |                  |                        |\n
      \  | 191    | ff ff ff ff  | trans time[0]    | -2334101314            |\n   |
      \       | 74 e0 70 be  |                  | (1896-01-13T22:31:26Z) |\n   | 199
      \   | ff ff ff ff  | trans time[1]    | -1157283000            |\n   |        |
      bb 05 43 48  |                  | (1933-04-30T12:30:00Z) |\n   | 207    | ff
      ff ff ff  | trans time[2]    | -1155436200            |\n   |        | bb 21
      71 58  |                  | (1933-05-21T21:30:00Z) |\n   | 215    | ff ff ff
      ff  | trans time[3]    | -880198200             |\n   |        | cb 89 3d c8
      \ |                  | (1942-02-09T12:30:00Z) |\n   | 223    | ff ff ff ff  |
      trans time[4]    | -769395600             |\n   |        | d2 23 f4 70  |                  |
      (1945-08-14T23:00:00Z) |\n   | 231    | ff ff ff ff  | trans time[5]    | -765376200
      \            |\n   |        | d2 61 49 38  |                  | (1945-09-30T11:30:00Z)
      |\n   | 239    | ff ff ff ff  | trans time[6]    | -712150200             |\n
      \  |        | d5 8d 73 48  |                  | (1947-06-08T12:30:00Z) |\n   |
      \       |              |                  |                        |\n   | 247
      \   | 01           | trans type[0]    | 1                      |\n   | 248    |
      02           | trans type[1]    | 2                      |\n   | 249    | 01
      \          | trans type[2]    | 1                      |\n   | 250    | 03           |
      trans type[3]    | 3                      |\n   | 251    | 04           | trans
      type[4]    | 4                      |\n   | 252    | 01           | trans type[5]
      \   | 1                      |\n   | 253    | 05           | trans type[6]    |
      5                      |\n   |        |              |                  |                        |\n
      \  |        |              | localtimetype[0] |                        |\n   |
      254    | ff ff 6c 02  | utcoff           | -37886 (-10:21:26)     |\n   | 258
      \   | 00           | isdst            | 0 (no)                 |\n   | 259    |
      00           | desigidx         | 0                      |\n   |        |              |
      \                 |                        |\n   |        |              | localtimetype[1]
      |                        |\n   | 260    | ff ff 6c 58  | utcoff           |
      -37800 (-10:30)        |\n   | 264    | 00           | isdst            | 0
      (no)                 |\n   | 265    | 04           | desigidx         | 4                      |\n
      \  |        |              |                  |                        |\n   |
      \       |              | localtimetype[2] |                        |\n   | 266
      \   | ff ff 7a 68  | utcoff           | -34200 (-09:30)        |\n   | 270    |
      01           | isdst            | 1 (yes)                |\n   | 271    | 08
      \          | desigidx         | 8                      |\n   |        |              |
      \                 |                        |\n   |        |              | localtimetype[3]
      |                        |\n   | 272    | ff ff 7a 68  | utcoff           |
      -34200 (-09:30)        |\n   | 276    | 01           | isdst            | 1
      (yes)                |\n   | 277    | 0c           | desigidx         | 12                     |\n
      \  |        |              |                  |                        |\n   |
      \       |              | localtimetype[4] |                        |\n   | 278
      \   | ff ff 7a 68  | utcoff           | -34200 (-09:30)        |\n   | 282    |
      01           | isdst            | 1 (yes)                |\n   | 283    | 10
      \          | desigidx         | 16                     |\n   |        |              |
      \                 |                        |\n   |        |              | localtimetype[5]
      |                        |\n   | 284    | ff ff 73 60  | utcoff           |
      -36000 (-10:00)        |\n   | 288    | 00           | isdst            | 0
      (no)                 |\n   | 289    | 04           | desigidx         | 4                      |\n
      \  |        |              |                  |                        |\n   |
      290    | 4c 4d 54 00  | designations[0]  | \"LMT\"                  |\n   |
      294    | 48 53 54 00  | designations[4]  | \"HST\"                  |\n   |
      298    | 48 44 54 00  | designations[8]  | \"HDT\"                  |\n   |
      302    | 48 57 54 00  | designations[12] | \"HWT\"                  |\n   |
      306    | 48 50 54 00  | designations[16] | \"HPT\"                  |\n   |
      \       |              |                  |                        |\n   | 310
      \   | 00           | UT/local[0]      | 0 (local)              |\n   | 311    |
      00           | UT/local[1]      | 0 (local)              |\n   | 312    | 00
      \          | UT/local[2]      | 0 (local)              |\n   | 313    | 00           |
      UT/local[3]      | 0 (local)              |\n   | 314    | 01           | UT/local[4]
      \     | 1 (UT)                 |\n   | 315    | 00           | UT/local[5]      |
      0 (local)              |\n   |        |              |                  |                        |\n
      \  | 316    | 00           | standard/wall[0] | 0 (wall)               |\n   |
      317    | 00           | standard/wall[1] | 0 (wall)               |\n   | 318
      \   | 00           | standard/wall[2] | 0 (wall)               |\n   | 319    |
      00           | standard/wall[3] | 0 (wall)               |\n   | 320    | 01
      \          | standard/wall[4] | 1 (standard)           |\n   | 321    | 00           |
      standard/wall[5] | 0 (wall)               |\n   |        |              |                  |
      \                       |\n   | 322    | 0a           | NL               | '\\n'
      \                  |\n   | 323    | 48 53 54 31  | TZ string        | \"HST10\"
      \               |\n   |        | 30           |                  |                        |\n
      \  | 328    | 0a           | NL               | '\\n'                   |\n
      \  +--------+--------------+------------------+------------------------+\n   To
      determine the local time in this time zone corresponding to\n   1933-05-04T12:00:00Z
      (UNIX time = -1156939200), the following\n   procedure would be followed:\n
      \  1.  Find the latest time transition prior to the time of interest\n       (trans
      time[1]).\n   2.  Reference the corresponding transition type (trans type[1])
      to\n       determine the local time type index (2).\n   3.  Reference the corresponding
      local time type (localtimetype[2]) to\n       determine the offset from UTC
      (-09:30), the daylight saving\n       indicator (1 = yes), and the index into
      the time zone designation\n       strings (8).\n   4.  Look up the corresponding
      time zone designation string\n       (designations[8] = \"HDT\").\n   5.  Add
      the UTC offset to the time of interest to yield a local\n       daylight saving
      time of 1933-05-04T02:30:00-09:30 (HDT).\n   To determine the local time in
      this time zone corresponding to\n   2019-01-01T00:00:00Z (UNIX time = 1546300800),
      the following\n   procedure would be followed:\n   1.  Find the latest time
      transition prior to the time of interest\n       (there is no such transition).\n
      \  2.  Look up the TZ string in the footer (\"HST10\"), which indicates\n       that
      the time zone designation is \"HST\" year-round, and the\n       offset to UTC
      is 10:00.\n   3.  Subtract the UTC offset from the time of interest to yield
      a\n       standard local time of 2018-12-31T14:00:00-10:00 (HST).\n"
    title: B.2.  Version 2 File Representing Pacific/Honolulu
  - contents:
    - "B.3.  Truncated Version 3 File Representing Asia/Jerusalem\n   The following
      TZif file has been truncated to start on\n   2038-01-01T00:00:00Z.\n   +--------+--------------+------------------+------------------------+\n
      \  | File   | Hexadecimal  | Record Name /    | Field Value            |\n   |
      Offset | Octets       | Field Name       |                        |\n   +--------+--------------+------------------+------------------------+\n
      \  | 000    | 54 5a 69 66  | magic            | \"TZif\"                 |\n
      \  | 004    | 33           | version          | '3' (3)                |\n   |
      005    | 00 00 00 00  |                  |                        |\n   |        |
      00 00 00 00  |                  |                        |\n   |        | 00
      00 00 00  |                  |                        |\n   |        | 00 00
      00     |                  |                        |\n   | 020    | 00 00 00
      00  | isutccnt         | 0                      |\n   | 024    | 00 00 00 00
      \ | isstdcnt         | 0                      |\n   | 028    | 00 00 00 00  |
      isleapcnt        | 0                      |\n   | 032    | 00 00 00 00  | timecnt
      \         | 0                      |\n   | 036    | 00 00 00 00  | typecnt          |
      0                      |\n   | 040    | 00 00 00 00  | charcnt          | 0
      \                     |\n   |        |              |                  |                        |\n
      \  | 044    | 54 5a 69 66  | magic            | \"TZif\"                 |\n
      \  | 048    | 33           | version          | '3' (3)                |\n   |
      049    | 00 00 00 00  |                  |                        |\n   |        |
      00 00 00 00  |                  |                        |\n   |        | 00
      00 00 00  |                  |                        |\n   |        | 00 00
      00     |                  |                        |\n   | 064    | 00 00 00
      03  | isutccnt         | 1                      |\n   | 068    | 00 00 00 03
      \ | isstdcnt         | 1                      |\n   | 072    | 00 00 00 00  |
      isleapcnt        | 0                      |\n   | 076    | 00 00 00 03  | timecnt
      \         | 1                      |\n   | 080    | 00 00 00 03  | typecnt          |
      1                      |\n   | 084    | 00 00 00 08  | charcnt          | 4
      \                     |\n   |        |              |                  |                        |\n
      \  | 088    | 00 00 00 00  | trans time[0]    | 2145916800             |\n   |
      \       | 7f e8 17 80  |                  | (2038-01-01T00:00:00Z) |\n   |        |
      \             |                  |                        |\n   | 096    | 00
      \          | trans type[0]    | 0                      |\n   |        |              |
      \                 |                        |\n   |        |              | localtimetype[0]
      |                        |\n   | 097    | 00 00 1c 20  | utcoff           |
      7200 (+02:00)          |\n   | 101    | 00           | isdst            | 0
      (no)                 |\n   | 102    | 00           | desigidx         | 0                      |\n
      \  |        |              |                  |                        |\n   |
      103    | 49 53 54 00  | designations[0]  | \"IST\"                  |\n   |
      \       |              |                  |                        |\n   | 107
      \   | 01           | UT/local[0]      | 1 (UT)                 |\n   |        |
      \             |                  |                        |\n   | 108    | 01
      \          | standard/wall[0] | 1 (standard)           |\n   |        |              |
      \                 |                        |\n   | 109    | 0a           | NL
      \              | '\\n'                   |\n   | 110    | 49 53 54 2d  | TZ
      string        | \"IST-2IDT,             |\n   |        | 32 49 44 54  |                  |
      M3.4.4/26,M10.5.0\"     |\n   |        | 2c 4d 33 2e  |                  |                        |\n
      \  |        | 34 2e 34 2f  |                  |                        |\n   |
      \       | 32 36 2c 4d  |                  |                        |\n   |        |
      31 30 2e 35  |                  |                        |\n   |        | 2e
      30        |                  |                        |\n   | 136    | 0a           |
      NL               | '\\n'                   |\n   +--------+--------------+------------------+------------------------+\n"
    title: B.3.  Truncated Version 3 File Representing Asia/Jerusalem
  title: Appendix B.  Example TZif Files
- contents:
  - "Acknowledgments\n   The authors would like to thank the following individuals
    for\n   contributing their ideas and support for writing this specification:\n
    \  Michael Douglass, Ned Freed, Guy Harris, Eliot Lear, and Alexey\n   Melnikov.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Arthur David Olson\n   Email: arthurdavidolson@gmail.com\n
    \  Paul Eggert\n   University of California, Los Angeles\n   Email: eggert@cs.ucla.edu\n
    \  Kenneth Murchison\n   FastMail US LLC\n   Email: murch@fastmailteam.com\n"
  title: Authors' Addresses
