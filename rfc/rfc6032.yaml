- title: __initial_text__
  contents:
  - "                   Cryptographic Message Syntax (CMS)\n                   Encrypted\
    \ Key Package Content Type\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the Cryptographic Message Syntax (CMS)\n \
    \  encrypted key package content type, which can be used to encrypt a\n   content\
    \ that includes a key package, such as a symmetric key package\n   or an asymmetric\
    \ key package.  It is transport independent.  CMS can\n   be used to digitally\
    \ sign, digest, authenticate, or further encrypt\n   this content type.  It is\
    \ designed to be used with the CMS Content\n   Constraints (CCC) extension, which\
    \ does not constrain the\n   EncryptedData, EnvelopedData, and AuthEnvelopedData.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6032.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Cryptographic Message Syntax (CMS) specification [RFC5652]\n\
    \   defines mechanisms to digitally sign, digest, authenticate, or\n   encrypt\
    \ arbitrary message content.  Many specifications define\n   content types intended\
    \ for use with CMS.  [RFC6031] and [RFC5958]\n   define symmetric key package\
    \ and asymmetric key package content types\n   that can be signed or encrypted\
    \ using CMS.  CMS allows the\n   composition of complex messages with an arbitrary\
    \ number of layers.\n   CMS has been augmented by several specifications ([RFC3274],\n\
    \   [RFC4073], and [RFC5083]) that define additional mechanisms to enable\n  \
    \ creation of messages of arbitrary depth and breadth using a variety\n   of authentication,\
    \ encryption, and compression techniques.\n   The CMS Content Constraints (CCC)\
    \ certificate extension [RFC6010]\n   defines an authorization mechanism that\
    \ allows recipients to\n   determine whether the originator of an authenticated\
    \ CMS content type\n   is authorized to produce messages of that type.  CCC is\
    \ used to\n   authorize CMS-protected content.  CCC cannot be used to constrain\
    \ the\n   following structures that are used to provide layers of protection:\n\
    \   SignedData, EnvelopedData, EncryptedData, DigestData, CompressedData,\n  \
    \ AuthenticatedData, ContentCollection, ContentWithAttributes, or\n   AuthEnvelopedData.\n\
    \   Using the existing CMS mechanisms, producers of authenticated\n   plaintext\
    \ key packages can be authorized by including a CCC extension\n   containing the\
    \ appropriate content type in the producer's\n   certificate.  However, these\
    \ mechanisms cannot be used to authorize\n   the producers of encrypted key material.\
    \  In some key management\n   systems, encrypted key packages are exchanged between\
    \ entities that\n   cannot decrypt the key package.  The encrypted key package\
    \ itself may\n   be authenticated and passed to another entity.  In these cases,\n\
    \   checking the authorization of the producer of the encrypted key\n   package\
    \ may be desired at the intermediate points.\n   This document defines the encrypted\
    \ key package content type, which\n   can be used to encrypt a content that includes\
    \ a key package, such as\n   a symmetric key package [RFC6031] or an asymmetric\
    \ key package\n   [RFC5958].  It is transport independent.  The Cryptographic\
    \ Message\n   Syntax (CMS) [RFC5652] can be used to digitally sign, digest,\n\
    \   authenticate, or further encrypt this content type.\n   The encrypted key\
    \ package content type is designed for use with\n   [RFC6010].  To authorize an\
    \ originator's public key to originate an\n   encrypted key package, the object\
    \ identifier associated with the\n   encrypted key package content type is included\
    \ in the originator's\n   public key certificate CCC certificate extension.  For\
    \ CCC to\n   function, originators encapsulate the encrypted key package in a\n\
    \   SignedData, EnvelopedData, or AuthEnvelopedData; then, during\n   certificate\
    \ path validation, the recipient determines whether the\n   originator is authorized\
    \ to originate the encrypted key package.\n   In [RFC6010] terminology, the encrypted\
    \ key package is a leaf node.\n   Additional authorization checks may be required\
    \ once the key package\n   is decrypted.  For example, the key package shown below\
    \ consists of a\n   SignedData layer that encapsulates an encrypted key package\
    \ that\n   encapsulates a SignedData layer containing a symmetric key package.\n\
    \   A recipient capable of decrypting the key package would perform the\n   following\
    \ steps prior to accepting the encapsulated symmetric key\n   material:\n    \
    \  o Verify the signature on the outer SignedData layer per\n        [RFC5652].\n\
    \      o Build and validate a certification path of the outer signer and\n   \
    \     confirm the outer signer is authorized to produce the encrypted\n      \
    \  key package per [RFC5280] and [RFC6010].\n      o Decrypt the encrypted key\
    \ package.\n      o Verify the signature on the inner SignedData layer per\n \
    \       [RFC5652].\n      o Build and validate a certification path to the signer\
    \ of the\n        inner SignedData and confirm the inner signer is authorized\
    \ to\n        produce the symmetric key package per [RFC5280] and [RFC6010].\n\
    \        As specified in [RFC6010], the validator may use the attributes\n   \
    \     and public keys returned from the second step as inputs for this\n     \
    \   CMS content constraints processing.\n      o Use the symmetric key material.\n\
    \            +--------------------------------------+\n            | ContentInfo\
    \                          |\n            |                                  \
    \    |\n            | +----------------------------------+ |\n            | |\
    \ SignedData                       | |\n            | |                      \
    \            | |\n            | | +------------------------------+ | |\n     \
    \       | | | EncryptedKeyPackage          | | |\n            | | |   (encrypted)\
    \                | | |\n            | | |                              | | |\n\
    \            | | | +-------------------------+  | | |\n            | | | | SignedData\
    \              |  | | |\n            | | | |                         |  | | |\n\
    \            | | | | +---------------------+ |  | | |\n            | | | | | SymmetricKeyPackage\
    \ | |  | | |\n            | | | | +---------------------+ |  | | |\n         \
    \   | | | +-------------------------+  | | |\n            | | +------------------------------+\
    \ | |\n            | +----------------------------------+ |\n            +--------------------------------------+\n\
    \   In the example, authorization of the SymmetricKeyPackage originator\n   need\
    \ not require an intermediate SignedData layer.  For example, if\n   the AuthEnvelopedData\
    \ option within an EncryptedKeyPackage were used,\n   the second authorization\
    \ check would be performed beginning with the\n   authEnveloped field.\n   This\
    \ document also defines an unprotected attribute, Content\n   Decryption Key Identifier,\
    \ for use with EncryptedData.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [RFC2119].\n"
- title: 1.2.  ASN.1 Syntax Notation
  contents:
  - "1.2.  ASN.1 Syntax Notation\n   The key package is defined using the ASN.1 [X.680],\
    \ [X.681], [X.682],\n   and [X.683].\n"
- title: 2.  Encrypted Key Package
  contents:
  - "2.  Encrypted Key Package\n   The encrypted key package content type is used\
    \ to encrypt a content\n   that includes a key package.  This content type is\
    \ usually used to\n   provide encryption of a key package or a signed key package.\
    \  This\n   content type makes use of the CMS EncryptedData content type\n   [RFC5652],\
    \ the CMS EnvelopedData content type [RFC5652], or the CMS\n   AuthEnvelopedData\
    \ content type [RFC5083] depending on the fields that\n   are needed for key management.\
    \  The difference between the encrypted\n   key package content type and these\
    \ three protecting content types is\n   the object identifier and one tag; otherwise,\
    \ the encrypted key\n   package content type is the same as the selected protecting\
    \ content\n   type, which is either EncryptedData, EnvelopedData, or\n   AuthEnvelopedData.\n\
    \   The encrypted key package content type has the following syntax:\n      ct-encrypted-key-package\
    \ CONTENT-TYPE ::=\n        { TYPE EncryptedKeyPackage\n          IDENTIFIED BY\
    \ id-ct-KP-encryptedKeyPkg }\n      id-ct-KP-encryptedKeyPkg OBJECT IDENTIFIER\
    \ ::=\n        { joint-iso-itu-t(2) country(16) us(840) organization(1)\n    \
    \      gov(101) dod(2) infosec(1) formats(2)\n          key-package-content-types(78)\
    \ 2 }\n      EncryptedKeyPackage ::= CHOICE {\n        encrypted        EncryptedData,\n\
    \        enveloped        [0] EnvelopedData,\n        authEnveloped    [1] AuthEnvelopedData\
    \ }\n   The EncryptedData structure is used for simple symmetric encryption,\n\
    \   where the sender and the receiver already share the necessary\n   encryption\
    \ key.  The EncryptedData structure carries an encryption\n   algorithm identifier,\
    \ and an unprotected attribute can be used to\n   carry an encryption key identifier\
    \ if one is needed (see Section 3).\n   See [RFC5652] for further discussion of\
    \ the EncryptedData fields.\n   The EnvelopedData structure is used for encryption,\
    \ where transferred\n   key management information enables decryption by the receiver.\n\
    \   Encryption details depend on the key management algorithm used.  In\n   addition\
    \ to the key management information, the EnvelopedData\n   structure carries an\
    \ encryption algorithm identifier.  See [RFC5652]\n   for further discussion of\
    \ the EnvelopedData fields.\n   The AuthEnvelopedData structure is used for authenticated\
    \ encryption,\n   and it includes key management information in a manner similar\
    \ to\n   EnvelopedData.  Encryption details depend on the key management\n   algorithm\
    \ used.  In addition to the key management information, the\n   AuthEnvelopedData\
    \ structure carries a message authentication code\n   that covers the content\
    \ as well as authenticated attributes.  See\n   [RFC5083] for further discussion\
    \ of the AuthEnvelopedData fields.\n   Implementations of this document MUST support\
    \ the EnvelopedData\n   choice, SHOULD support the EncryptedData choice, and MAY\
    \ support the\n   AuthEnvelopedData.\n   Implementations that support EnvelopedData\
    \ and EncryptedData to\n   encapsulate with this content type MUST support an\n\
    \   EncryptedKeyPackage that encapsulates either a SignedData [RFC5652]\n   that\
    \ further encapsulates a SymmetricKeyPackage [RFC6031] or a\n   SignedData that\
    \ further encapsulates an AsymmetricKeyPackage\n   [RFC5958].  Implementations\
    \ that support AuthEnvelopedData to\n   encapsulate with this content type MUST\
    \ support an\n   EncryptedKeyPackage that encapsulates either a SymmetricKeyPackage\n\
    \   [RFC6031] or an AsymmetricKeyPackage [RFC5958].  It is OPTIONAL for\n   implementations\
    \ that support AuthEnvelopedData to encapsulate with\n   this content type to\
    \ support an EncryptedKeyPackage that encapsulates\n   either a SignedData [RFC5652]\
    \ that further encapsulates a\n   SymmetricKeyPackage [RFC6031] or a SignedData\
    \ that further\n   encapsulates an AsymmetricKeyPackage [RFC5958].  Likewise,\n\
    \   implementations that process this content type to decrypt the\n   encapsulated\
    \ data MUST support an EncryptedKeyPackage that\n   encapsulates either a SignedData\
    \ that further encapsulates a\n   SymmetricKeyPackage or a SignedData that further\
    \ encapsulates an\n   AsymmetricKeyPackage.  An EncryptedKeyPackage content type\
    \ MUST\n   contain at least one SymmetricKeyPackage or AsymmetricKeyPackage.\n\
    \   Implementations MAY support additional encapsulating layers.\n   Note that\
    \ interoperability between an originator and a recipient that\n   do not support\
    \ the same innermost content (e.g., originator supports\n   AsymmetricKeyPackage\
    \ while recipient supports SymmetricKeyPackage) is\n   not a concern as originators\
    \ should be aware of the recipient's\n   capabilities; however, the mechanism\
    \ for the exchange of the\n   recipient's capabilities is beyond the scope of\
    \ this document.\n"
- title: 3.  Content Decryption Key Identifier
  contents:
  - "3.  Content Decryption Key Identifier\n   The content-decryption-key-identifier\
    \ attribute can be used to\n   identify the symmetric keying material that is\
    \ needed for decryption\n   of the EncryptedData content if there is any ambiguity.\
    \  The\n   ATTRIBUTE definition is taken from [RFC5912].  There MUST be only one\n\
    \   instance of the content-decryption-key-identifier attribute and there\n  \
    \ MUST be only one value for the content-decryption-key-identifier\n   attribute.\n\
    \   The content-decryption-key-identifier attribute has the following\n   syntax:\n\
    \      aa-content-decrypt-key-identifier ATTRIBUTE ::= {\n        TYPE       \
    \   ContentDecryptKeyID\n        IDENTIFIED BY id-aa-KP-contentDecryptKeyID }\n\
    \      id-aa-KP-contentDecryptKeyID OBJECT IDENTIFIER ::= {\n        joint-iso-itu-t(2)\
    \ country(16) us(840) organization(1) gov(101)\n        dod(2) infosec(1) attributes(5)\
    \ 66 }\n      ContentDecryptKeyID ::= OCTET STRING\n   The content decryption\
    \ key identifier contains an OCTET STRING, and\n   this syntax does not impose\
    \ any particular structure on the\n   identifier value.\n   Due to multiple layers\
    \ of encryption, the content-decryption-key-\n   identifier attribute can appear\
    \ in more than one location in the\n   overall key package.  When there are multiple\
    \ occurrences of the\n   content-decryption-key-identifier attribute, each occurrence\
    \ is\n   evaluated independently.  Each one is used to identify the needed\n \
    \  keying material for that layer of encryption.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Implementers of this protocol are strongly encouraged\
    \ to consider\n   generally accepted principles of secure key management when\n\
    \   integrating this capability within an overall security architecture.\n   The\
    \ security considerations from [RFC5083], [RFC5652], [RFC5911],\n   [RFC5912],\
    \ [RFC5958], and [RFC6031] apply.  If the CCC extension is\n   used as an authorization\
    \ mechanism, then the security considerations\n   from [RFC6010] also apply.\n\
    \   The encrypted key package content type might not provide proof of\n   origin\
    \ if the content encryption algorithm does not support\n   authenticated key exchange.\
    \  To provide proof of origin for this\n   content, another security protocol\
    \ needs to be used.  This is the\n   reason that support for encapsulating the\
    \ SymmetricKeyPackage and\n   AsymmetricKeyPackage with a SignedData content type\
    \ from [RFC5652] is\n   required for the EnvelopedData and EncryptedData choices.\n\
    \   When this content type is used the CMS SignedData [RFC5652]\n   validation\
    \ rules MUST be used.  The PKCS #7 [RFC2315] validation\n   rules MUST NOT be\
    \ used.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document makes use of object identifiers to\
    \ identify a CMS\n   content type, a CMS attribute, and the ASN.1 module; all\
    \ found in\n   Appendix A.  All OIDs are registered in an arc delegated by RSADSI\
    \ to\n   the SMIME Working Group.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC5083]   Housley, R., \"Cryptographic Message Syntax (CMS)\n  \
    \             Authenticated-Enveloped-Data Content Type\", RFC 5083,\n       \
    \        November 2007.\n   [RFC5280]   Cooper, D., Santesson, S., Farrell, S.,\
    \ Boeyen, S.,\n               Housley, R., and W. Polk, \"Internet X.509 Public\
    \ Key\n               Infrastructure Certificate and Certificate Revocation\n\
    \               List (CRL) Profile\", RFC 5280, May 2008.\n   [RFC5652]   Housley,\
    \ R., \"Cryptographic Message Syntax (CMS)\", STD\n               70, RFC 5652,\
    \ September 2009.\n   [RFC5911]   Hoffman, P. and J. Schaad, \"New ASN.1 Modules\
    \ for\n               Cryptographic Message Syntax (CMS) and S/MIME\", RFC 5911,\n\
    \               June 2010.\n   [RFC5912]   Hoffman, P. and J. Schaad, \"New ASN.1\
    \ Modules for the\n               Public Key Infrastructure Using X.509 (PKIX)\"\
    , RFC 5912,\n               June 2010.\n   [RFC5958]   Turner, S., \"Asymmetric\
    \ Key Packages\", RFC 5958, August\n               2010.\n   [RFC6010]   Housley,\
    \ R., Ashmore, S., and C. Wallace, \"Cryptographic\n               Message Syntax\
    \ (CMS) Content Constraints Extension\", RFC\n               6010, September 2010.\n\
    \   [RFC6031]   Turner, S. and R. Housley, \"Cryptographic Message Syntax\n  \
    \             (CMS) Symmetric Key Package Content Type\", RFC 6031,\n        \
    \       December 2010.\n   [X.680]     ITU-T Recommendation X.680 (2002) | ISO/IEC\
    \ 8824-1:2002.\n               Information Technology - Abstract Syntax Notation\
    \ One.\n   [X.681]     ITU-T Recommendation X.681 (2002) | ISO/IEC 8824-2:2002.\n\
    \               Information Technology - Abstract Syntax Notation One:\n     \
    \          Information Object Specification.\n   [X.682]     ITU-T Recommendation\
    \ X.682 (2002) | ISO/IEC 8824-3:2002.\n               Information Technology -\
    \ Abstract Syntax Notation One:\n               Constraint Specification.\n  \
    \ [X.683]     ITU-T Recommendation X.683 (2002) | ISO/IEC 8824-4:2002.\n     \
    \          Information Technology - Abstract Syntax Notation One:\n          \
    \     Parameterization of ASN.1 Specifications.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC2315]   Kaliski, B., \"PKCS #7: Cryptographic\
    \ Message Syntax\n               Version 1.5\", RFC 2315, March 1998.\n   [RFC3274]\
    \   Gutmann, P., \"Compressed Data Content Type for\n               Cryptographic\
    \ Message Syntax (CMS)\", RFC 3274, June 2002.\n   [RFC4073]   Housley, R., \"\
    Protecting Multiple Contents with the\n               Cryptographic Message Syntax\
    \ (CMS)\", RFC 4073, May 2005.\n"
- title: Appendix A.  ASN.1 Module
  contents:
  - "Appendix A.  ASN.1 Module\n   This appendix provides the normative ASN.1 [X.680]\
    \ definitions for\n   the structures described in this specification using ASN.1,\
    \ as\n   defined in [X.680] through [X.683].\n   EncryptedKeyPackageModuleV1\n\
    \     { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n     \
    \  smime(16) modules(0) id-mod-encryptedKeyPkgV1(51) }\n   DEFINITIONS IMPLICIT\
    \ TAGS ::=\n   BEGIN\n   -- EXPORTS ALL --\n   IMPORTS\n   -- From New SMIME ASN.1\
    \ [RFC5911]\n   EncryptedData, EnvelopedData, CONTENT-TYPE\n     FROM CryptographicMessageSyntax-2009\n\
    \       { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n   \
    \      smime(16) modules(0) cms-2004-02(41) }\n   -- From New SMIME ASN.1 [RFC5911]\n\
    \   AuthEnvelopedData\n     FROM CMS-AuthEnvelopedData-2009\n        { iso(1)\
    \ member-body(2) us(840) rsadsi(113549) pkcs(1)\n          pkcs-9(9) smime(16)\
    \ modules(0) cms-authEnvelopedData-02(43) }\n   -- From New PKIX ASN.1 [RFC5912]\n\
    \   ATTRIBUTE\n     FROM PKIX-CommonTypes-2009\n       { iso(1) identified-organization(3)\
    \ dod(6) internet(1)\n         security(5) mechanisms(5) pkix(7) id-mod(0)\n \
    \        id-mod-pkixCommon-02(57) }\n   ;\n   ContentSet CONTENT-TYPE ::= {\n\
    \     ct-encrypted-key-package,\n     ... -- Expect additional content types --\n\
    \   }\n   ct-encrypted-key-package CONTENT-TYPE ::=\n       { TYPE EncryptedKeyPackage\n\
    \         IDENTIFIED BY id-ct-KP-encryptedKeyPkg }\n   id-ct-KP-encryptedKeyPkg\
    \ OBJECT IDENTIFIER ::=\n     { joint-iso-itu-t(2) country(16) us(840) organization(1)\
    \ gov(101)\n       dod(2) infosec(1) formats(2) key-package-content-types(78)\
    \ 2 }\n   EncryptedKeyPackage ::= CHOICE {\n       encrypted        EncryptedData,\n\
    \       enveloped        [0] EnvelopedData,\n       authEnveloped    [1] AuthEnvelopedData\
    \ }\n   aa-content-decrypt-key-identifier ATTRIBUTE ::= {\n       TYPE       \
    \   ContentDecryptKeyID\n       IDENTIFIED BY id-aa-KP-contentDecryptKeyID }\n\
    \   id-aa-KP-contentDecryptKeyID OBJECT IDENTIFIER ::= {\n     joint-iso-itu-t(2)\
    \ country(16) us(840) organization(1) gov(101)\n     dod(2) infosec(1) attributes(5)\
    \ 66 }\n   ContentDecryptKeyID ::= OCTET STRING\n   END\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Sean Turner\n   IECA, Inc.\n   3057 Nutley Street, Suite\
    \ 106\n   Fairfax, VA 22031\n   USA\n   EMail: turners@ieca.com\n   Russell Housley\n\
    \   Vigil Security, LLC\n   918 Spring Knoll Drive\n   Herndon, VA 20170\n   USA\n\
    \   EMail: housley@vigilsec.com\n"
